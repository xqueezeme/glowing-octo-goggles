{
    "title": "Possessing Bella Ch. 12",
    "pages": [
        "Authors Note: This is a chapter in this series primarily based in BDSM practises. If that is not to your tastes please stop reading and find one of the other wonderful stories on this site more suited to your kink. Thank you once again to everyone who leaves comments and feedback on my writing, it is much appreciated. ~ellie\n\n*****\n\nBella had been beyond busy for the rest of the week. She and Andrew took over some space on the lower floor of the company and put together a workshop in which Louise could begin work until they decided on a location for their first store. In the evenings, she worked with Nyx or Steven on the speech and body language she would be required to have in her training with Master Mike in the following weeks. In the small amount of time, she had to herself she made decisions about the furniture in Mel's apartment and asked Stephen for his help in locating particular items and removing others.\n\nOnce she had decided on the beautiful antique bed from the storage facility, Bella found it easy to continue the theme throughout the apartment's d\u00e9cor. By Friday, she had labelled all the furniture to be removed and had ordered several pieces that would get delivered while she was away. Once she had made the larger decisions Stephen took control of the logistics reassuring her that he was more than happy to do so.\n\nShe had begun to accept what the others had said about Stephen's intentions toward her and enjoy the time he spent with her letting her see the softer caring side of his personality. She still found it hard to know exactly what he expected of her, but she relaxed more in his company and took on his offered tutelage to enhance her understanding of the Gorean Lifestyle. He showed her affection and his tender kisses still made her knees weak, and she found herself wishing for more. No matter how sexy her service was to him during their tutelage sessions he showed no inkling of wanting to take things further than just the occasional kiss. Every time she thought she had moved him in some way he still addressed her in his usual self-controlled manner. \n\nHis manner both frustrated and confused her, but she kept the words of her friends in her mind. Stephen wanted more than just a playdate. He wanted her commitment, her acceptance of him as a Master, and she couldn't do that until the training schedule that had been set out was complete. Until then, they seemed to be locked in this oddly intimate dance in which they acknowledged their feelings and attraction but never truly acted on them. Stephen had been honest with her about his intentions, but Bella had not told him about her feelings yet. The truth was; he still confused her.\n\nThe fact that she had not voiced her growing feelings for him as he had done for her hit her like a slap in the face as she lay in bed on Saturday morning. She realised that she had never done more than thank him for his constant care and protectiveness. Bella was stunned that she had pushed him, because of her confusion to announce his intentions and had given nothing no indication of her thoughts regarding him in return. \n\nAs always when she felt a pang of guilt she turned introspective and cursed herself for being a brat. She had expected him to show his hand completely while keeping hers close to her chest. Taking a deep breath, she examined her feelings carefully. He was a harsh and uncompromising man, but he was also good and kind in ways she had not expected. His expectations of her were high, but he also accepted that she did not have the skills or background to understand all of those expectations. He helped her, tutored her, corrected her, cared for her and protected her. She knew now that he didn't just do this out of obligation or duty. He did it because he cared deeply for her and held her to a higher standard than the other girls at the club that he cared for out of obligation and duty alone. \n\nShe wondered at the amount of time he spent with her and how he was managing his role within the club. She knew that the girls relied heavily on him to protect them, and she wondered if the man who took his place when he wasn't there was as protective of them as he was. She somehow imagined that Stephen would have hand-picked a like-minded man to be a manager in his absence and she knew Jake would have taken some of the responsibility Stephen held in his absence.\n\nBella smiled thinking of Jake. Unlike Stephen, he was very easy to read. He was more relaxed and easy to be around. He too had made it clear that he cared about Bella but had left it at that seemingly happy to sit back and allow her the time and space she needed to get her life back together. It seemed strange to her that she knew Jake more intimately on a physical level than Stephen. He had been part of that crazy night in the Kava Lodge, yet she did not have the same feelings for him that she had for Stephen. \n\nShe also knew Sire and Hunter more intimately than Stephen and yet for all her time with them she had not felt the intimacy that she felt from Stephen's hand holding and tender kisses. She laughed as she realised she had become a player. She had sex purely for the endorphins, the joy the twin mix that pain and pleasure gave her, not for the intimacy of being with another person. She remembered Mel and the tender aftercare he gave her that gave them both the intimacy their sex lacked. It was something Hunter lacked entirely, and Sire did not dwell upon, in his self-appointed role of teacher.\n\nClimbing from the bed, she grabbed some clothes and headed for the shower still smiling. What she needed to do was reciprocate those small acts of intimacy and Stephen would know how she felt without her having to voice it. She laughed again as she stood under the water. It was always the women in magazine columns and talkback shows who accused men of not showing any commitment or intimacy. Here she was the one to shy away from it when Stephen showed his intentions toward her every day.\n\nMaster Mike and Nyx were spending the weekend preparing for a caravan that they wold take her on during the following week. Nyx had been very forthcoming with the things that would happen there. She had taught her several services of particular drinks and food to practise along with two dances that would highlight her needs to the potential Masters that would be present. Nervous about the many protocols expected in this lifestyle Bella had planned to practise most of the weekend with Stephen spending some time with her in the afternoon before she went to dinner with her parents.\n\nShe had almost forgotten that she had planned to invite her parents to the city this weekend to see a show. Luckily as always Stephen had put everything in place for her, including inviting himself along to a dinner at a wonderful restaurant he had chosen. He was become a key figure in every aspect of her life rather than the looming dark presence she had always known to be looking over her shoulder since Mel's death. Even in her work, though he maintained he would never influence her decision-making there, he had found her their first artisan and his brother would make some exquisite one-off pieces from them. She was looking forward to dinner. It seemed to have been forever since she had seen her parents, and she missed them, and acknowledged that her father enjoyed Stephen's company.\n\nBella spent the morning going over the slave positions and walked around the small apartment in the diaphanous piece of silky fabric she knew would be her only form of clothing during the two weeks ahead. Nyx had told her the once she would be required to know the protocols well, and she was determined to not embarrass her or Master Mike. Bella had committed as many as she could to memory, and while they may not all be perfectly executed, she would at least not be at a total loss if commanded to a particular position.\n\nShe had read the books and studied diligently, but it was such a strange lifestyle that she didn't feel even close to ready to join it. She knew that the reality was never going to be like the books and online forums but still she worried and went through the paces of the dances she had painstakingly prepared with Nyx. Firstly that of the new slave, a dance of submission and secondly the dance of beauty that would show her desirability to all of the Masters present.\n\nTaking a break just before lunch she decided to go over her plans for Mel's apartment one last time. Pulling a light coat over the silk she wore she grabbed her keys and went across to the other side of the floor. She reminded herself once again that she should stop calling it Mel's apartment but in the state it was in, she couldn't help herself to remember. Maybe when there was new furniture she would feel different about it.\n\nLeaving the door open she stepped into the now familiar space, her fingers trailing over the back of the large leather armchair as a smile came to her face. When she returned, all of these things would be gone. She would have a lot of work to do to try to put all the new furniture she had ordered into the vision of what she wanted for the space. \n\nShe was just coming out of the bedroom when she saw Stephen standing in the middle of the living area. Bella slipped off the light-weight jacket and placed it over the back of a chair before padding softly toward him conscious of making her movements graceful.\n\n\"Greetings, Sir Stephen, I trust you slept well,\" she kept her eyes lowered and her hand relaxed at her side.\n\n\"Good morning, little one, I did sleep well despite the lateness of my evening,\" he placed a finger under her chin and tilted her face up to his. A smile touched his lips as he kissed her softly and resumed his stance. \"I am glad you are here. I was hoping you could run me through your plans for this place properly before you left tomorrow evening.\"\n\n\"Of course,\" Bella began to speak about her plans for the main living area including longer term ideas for painting and artwork that she hadn't had the time to look for yet. She had definite colours and schemes in mind to match the furniture she had chosen. At various intervals, Stephen stopped her to ask questions but for the most part seemed content to listen as she gave detailed explanations of her plans for each room.\n\n\"Once my personal things from my apartment have been moved across I will be able to see better what I need or would like to make it truly my place,\" she said wistfully. \"At the moment it is still Mel's apartment,\" she voiced her thoughts from earlier. Stephen murmured in acknowledgement as they re-entered the living room. \n\n\"I have a few other concerns to talk with you about would you like to join me for lunch downstairs?\" he asked. He too felt that the memory of Mel remained strong within the apartment and would rather talk with her on neutral ground.\n\n\"Yes, thank you, Sir Stephen. May I have a few moments to change first, please?\" Bella looked down at the ragged piece of silky material she wore.\n\n\"You may,\" he went to the door and held it open for her. His hand curled around the back of her neck as they walked from one apartment to the other. Bella found the feeling of that hand reassuring now, protective even, the odd feeling it had originally given her regarding Mel having dulled over time.\n\nShe changed quickly, did her make-up and hair with the practised ease of someone who was constantly under a time constraint for such things. When she emerged, Stephen looked up from his phone where he had been checking emails and then back at the time again with satisfaction.\n\n\"Thank you for your patience,\" Bella said quickly misreading his look as one of being concerned at having been kept waiting.\n\n\"I had expected you to take longer, but you are most welcome,\" he gave a half smile. \"Shall we go?\" He held out his hand beckoning her to him.\n\nThat small smile had come to mean a lot to Bella. She got a small thrill every time it appeared because of something she did. She looked forward to the day she could elicit the wide happy smile he seemed to reserve for only a special few like his brother, Pete. She had seen it of course, but it had never been there just for her. The most she had managed to elicit from him was this half smile, but she basked in its warmth just as happily as if it had been a full smile. She took a breath and decided now was as good a time as any to voice the things she had been thinking about all morning.\n\n\"Sir Stephen,\" she said letting out a breath and watching him furrow his brows and lower his extended hand. \"When I said thank you for your patience, I didn't mean for just now I meant...,\" the words suddenly ran out and she felt lost in what she wanted to say.\n\n\"Go on,\" he said in a dangerously low rumble.\n\n\"What I meant to say was... I mean... it's just that,\" Bella stammered. Stephen's expression became darker, and he stalked back toward her taking a seat in the one armchair threw a pillow on the floor at his feet.\n\n\"Speak, I am not a mind reader as I have told you too often already,\" Stephen growled. He hated not being in control of situations, and this girl had a way of making him feel as if everything he wanted was about to be pulled out of his reach. He hated that he wanted her so badly that it messed with his emotions in such a way that his frustration showed clearly even to himself.\n\nBella knelt carefully in front of him and for once looked up to try and read his eyes. See had handled this badly. It wasn't a good time to talk about these things. Now she had started, however, and made them both uncomfortable, she felt she needed to keep going in order to clear the air between them and maybe ease his moodiness as well as her confusion.\n\n\"I wanted to thank you properly, for your guidance, protection and especially your patience with me over the last few months. I know I have not been the easiest girl to look after. Although I am na\u00efve and often totally out of my depth, I think I do understand what you said to me,\" she swallowed noisily. \"I am committed to the training program and I would not want to let anyone down who stood for me when the program was put in place. I am grateful too, that you are letting me get to know you better as well.\" She let her voice drop and continued to search his eyes for any indication that he understood what she was saying.\n\n\"You have been so very patient with me, especially when I don't understand the motives behind the things people do. You have cared for me in ways I didn't even realise at the time, like back at the beach house. You made me take responsibility for my mistakes and face them. You have supported me through everything. Even though I may have thought you were severe and even harsh at times, you always told me the truth, even when it was unpleasant,\" Bella gave a half smile. \"Thank you,\" she said simply.\n\nStephen was speechless. This was not what he had expected to hear when she had started stammering nervously. He had thought she was worried about her parents or her readiness to visit Mike and Nyx and needed reassurance. He stared at her silently, his heart thumping loudly in his chest as she looked up at him with those beautiful green eyes and said she understood his intentions.\n\n\"I will continue to protect and care for you as long as you need me, little one,\" he spoke softly his low voice full of the emotion he so rarely displayed. \"I will also continue to wait patiently because I believe as you do that you should live up to the commitment you made. At least to the original five Masters,\" he paused and searched her eyes seeing no confusion there despite the bottom lip that had been pulled between her teeth. He bent his head to kiss her lightly before beginning to talk again in the same soft, quiet tone.\n\n\"Know that should you choose me when you are ready, there will be no others to train or test you. You will belong to me and me alone. So honour this commitment, learn about yourself and your needs as much as you can, show the world the real woman you are and be sure of what you want. In the end the choice will be yours,\" he kissed her again, deeply this time, taking her breath away and leaving her trembling with the force of it. \n\nAt that moment, Bella believed she could love him as deeply as she had Mel. He had said the very words she needed to hear. If she chose him, she would be his one and only and he hers. She couldn't help the smile at split her face as she looked up at him after the kiss and was rewarded with one of the rare full smiles that she craved from him.\n\nStephen let out a small growl, \"You are far too tempting looking up at me like that. Let's go and have lunch downstairs before I become another notch on your bedpost,\" he gave a crooked smile but noticed the fleeting look of disappointment on Bella's face. \"When I take you, it will be because we both know you are meant to be mine, not the day before I must hand you to someone else.\" He helped her to her feet and kissed her tenderly softening his words, \"That day is not so far away now.\"\n\nBella felt a rush of mixed emotions. The bond between them had begun to deepen with her words to him, she could feel it wrapping invisibly around her. She knew too that the training program was a journey she must take so she could be more confident in who she was both as a submissive and in her chosen career. If Stephen had have asked she would have considered deferring the time she had committed to going to Nyx and Dusty, she was sure Dianne and Kurt would not mind her deferring their portion of the program. He didn't ask though. He had said he would wait patiently while she did what she needed to do. She wasn't sure she wanted to wait though, at that moment all she wanted was more of him.\n\nJake had joined them for lunch and Stephen it seemed was pleased to put some space between himself and Bella sitting on the opposite side of the table. The conversation was as usual lively and full of good-natured ribbing and after her initial disappointment she relaxed and enjoyed Jake's company and the way he interacted with Stephen. The more time Bella spent with Stephen, the more she saw the side of his personality that only close friends saw. She had known him so long that the softer caring nature he had shown her recently still came as a surprise.\n\nTowards the end of lunch, Theo, one of the trainee managers, motioned Stephen from the table and after a brief conversation with the man, Stephen came back to the table. \"It seems your parents are here,\" Stephen said. \"At the front desk,\" he added with a low chuckle after seeing her look around quickly, \"Come, they are waiting.\"\n\n\"I can't! I need to change, to clean up my apartment,\" she sounded panicked.\n\n\"Your apartment is always spotless, so I will give you a moment to change and collect your parents for you. Shall we go?\" Once again, Stephen held out his hand for Bella to take.\n\n\"Thank you so much for lunch, it was wonderful as always I am sorry I have to rush off,\" Bella said hastily to Jake and took Stephen's hand hurrying from the club.\n\n\"I was supposed to meet them at their hotel later,\" Bella whispered apologetically. \n\n\"Did you think Rosie would forego the opportunity to check on you properly?\" Stephen chuckled and shook his head.\n\n\"I guess not, but Dad usually at least warns me,\" Bella said plaintively.\n\nStephen took the elevator to the third floor letting her out and promising her only a few minutes before returning. Bella hurriedly pulled off the tight skimpy outfit on her way to the bedroom. Grateful that she had had time to organise her closet recently she grabbed one of the sweet summery dresses that her mother had brought her and pulled it over her head. Satisfied with a quick glance in the mirror, she hurried around the small apartment making sure everything was in place.\n\nThe door opened moments later to reveal her parents her mother blushing under Stephen's quiet compliments and her father good-naturedly pretending to be jealous of the mock flirting, men always showered on his wife. Bella came forward hugging them both and smiling widely.",
        "\"I thought we were going to meet at the hotel later!\" Bella said in feigned surprise.\n\n\"How could I not come and see you when you have been so generous. You shouldn't be spending all your money on us,\" her mother admonished. \"You should see that grand hotel where your father took me, champagne and chocolates in our room as if we were on our honeymoon or something.\" Rosie blushed again.\n\n\"What number honeymoon would this be?\" Stephen low bass rumbled.\n\n\"Every hour of every day with my wife is a honeymoon,\" Joe cut in and took his wife's hand kissing it.\n\n\"Oh, stop that. I already said you could go to the car show tomorrow,\" Rosie scowled at Joe. \"I am looking forward to spending some time with my Bella. Alone.\" She eyed Stephen as he was about to say something, and he quickly reassessed the situation. He would talk to Joe later and discuss the trip Bella was leaving for on Sunday afternoon. He had hoped to spend some time with her in the afternoon before she left but could see that possibility dwindling with her mother's words.\n\n\"Now, now, Rosie. We discussed this. Bella has a business trip planned and may need some time to prepare before she leaves,\" Joe cautioned his wife in a deep voice his arm snaking around her lower back supportively.\n\n\"I just wanted you and Dad to enjoy yourselves this weekend,\" Bella said slowly.\n\n\"Do you think I don't see enough of him already? You're the one I miss, Bella,\" Rosie complained and moved to hug her daughter to her. \n\n\"Why don't I take Joe to the car show early and you two girls can have an hour or so together,\" Stephen offered. \"That way we can be back early and Bella will still have time to prepare for her trip.\" Both Bella and Joe looked sceptical, but Rosie smiled. It was a battle she wasn't sure she could win. While Stephen's suggestion wasn't exactly what she wanted, she knew they would be away for much longer than Stephen predicted if her husband held true to form. She considered offering to help Bella prepare by packing for her and extending her time together but decided to take the small win and not push her luck.\n\n\"That sounds good to me,\" Joe said easily looking forward to attending the car show with a man he knew enjoyed classic cars as much as he did.\n\n\"So show me this apartment you are moving to,\" Rosie said as if Bella had brought up the conversation already. \n\n\"Oh Mum, I would much rather you came after I had gotten rid of the old furniture there. I am keeping very little of what is there now. I promise as soon as I have it all ready I will invite you down for a visit,\" Bella wasn't sure she wanted her parents in that space yet, or at all.\n\n\"I like having the before and after effect, and I could give you some suggestions,\" Rosie sounded upset that Bella was so reticent. \"I have some experience at decorating,\" she smiled.\n\n\"Come on, Elliebellie,\" he father said teasingly. \"We just need to know everything is going well for you now. We don't see you often enough, show us this great new apartment, and it will put our minds at ease almost as much as seeing Stephen hovering over you as protectively does.\" He smirked and then laughed at the look Stephen gave him.\n\n\"I guess, but you have to understand that most of the furniture will be being replaced,\" she agreed reluctantly.\n\nThey walked through the elevator with Rosie exclaiming in surprise as the other side of the same floor opened up to reveal an identical corridor. Stephen opened the door and let them into the larger apartment as he always did for Bella without thinking but was pulled up short but Joe's subtle observation.\n\n\"So you have a key to my daughter's apartment, how convenient,\" Joe moved past the big man into the rooms that once belonged to Mel. \"This chesterfield is beautiful Bella, why wouldn't you want to keep it?\"\n\n\"This was Mel's apartment,\" she said quietly. \"Mel left it to me with all the contents.\"\n\n\"Oh, all this dark furniture is way too masculine for you anyway, it's good to clear it out and start from scratch. What are you going to do with it?\" Rosie was walking around the room looking at everything.\n\n\"It will go to storage I think,\" Bella looked at Stephen who nodded slightly. \"You're always redecorating and moving your furniture around, is there anything you would like to take? We could have it moved to your place as easily as the storage facility.\"\n\n\"Don't encourage your father, he loves this sort of thing but it's more for show than comfort,\" Rosie rolled her eyes.\n\n\"I have some office furniture that is just too big and overwhelming for me maybe you would like that Dad,\" Bella encouraged and moved towards the study room. \n\n\"Actually, I was thinking about making a separate office for your mother. So she can finally write that family secrets cookbook for you she is always talking about,\" Joe said and took a step away from Rosie as she swiped at him indignantly. \"Oops, I wasn't supposed to mention that was I?\" He winked at Bella.\n\n\"That book would sell like hotcakes. I can think of at least six people I know who would order multiple copies just based on that Arancini recipe you let me have,\" Stephen low bass voice held enthusiasm.\n\n\"Well, it was just a thought really. I am not very sure I could do it on my own. I was hoping when Bella had holidays that she might help me get started,\" Rosie blushed under Stephens compliments. \n\n\"I have a friend who is a chef who made them from your recipe. Not quite as expertly as you do, but his customers were buzzing and asking for more dishes like that on his menu,\" Stephen continued. \"Maybe next time you are in town we can set up a meeting or something, I believe he has some background in publishing recipe books.\"\n\n\"Really? Well, that would be something to think about don't you think Joe?\" Rosie as always looked to her husband when faced with decisions. She was one to voice her opinions, but Joe had always been the decision maker in their relationship.\n\n\"Something to consider indeed,\" he nodded as he walked into the office space he eyes lingering over the large dark wood antique desk. Similar to his own this had an appeal in its design that set it apart. And it was indeed something he would consider looking after for his daughter or possibly purchasing from her. Joe went around behind the desk and sat in a large comfortable leather chair. It was comfortable and matched the desk perfectly. \"When were you planning on moving this stuff?\" he asked in a casual way.\n\n\"The movers will be here next week while she is on her business trip,\" Stephen replied for her, \"I'll let them in and make sure it all gets done properly.\" \n\n\"You and my daughter have become very close it seems,\" Joe raised an eyebrow.\n\n\"Dad!\" Bella exclaimed mortified by her father's tone of voice.\n\n\"Just an observation, Elliebellie,\" Joe looked between his daughter and the big man beside her. In truth, he liked Stephen well enough but he worried that despite the last few months that Bella was not ready for the kind of relationship that seemed to be brewing between them.\n\n\"You have good eyes,\" Stephen chuckled easily. \"Bella and I have been spending a lot of time together recently. I mean, I realise I'm quite the catch, but I like to take things slowly no matter how irresistible she can seem at times.\" He lowered his voice to a stage whisper, \"Takes after her mother in that department I assume?\" Joe joined Stephen's deep chuckle as the two women blushed.\n\n\"Oh, you two stop that,\" Rosie admonished with a smile, then turned to study Bella, who blushed even deeper. \"You would both be lucky if we looked your way tonight, we could just as easily find ourselves some other men to us to dinner and the show. What was it Kurt called me, Bella?\"\n\n\"A cougar?\" Bella smiled at her mother's attempt to tease her father and Stephen.\n\n\"We can't have that can we Stephen? We might be relegated to staying at home and having to watch football or something with room service in front of the TV,\" Joe looked absurdly crestfallen.\n\n\"I hear there is a documentary on the history of the Alpha Romeo,\" Stephen offered trying to hide his conspiratorial grin.\n\n\"Don't you dare,\" Rosie broke in. \n\n\"It's okay mum. We can go without them. I'll even organise a couple of frozen dinners for them so they can feel right at home,\" Bella finally recovered from the initial conversation and joined in the teasing. \"Then you can show me your new cougar skills and find us two interesting dates for the show.\"\n\n\"Come show me the rest of this place, and we can plan our evening,\" Rosie threaded her arm around Bella's and the two women walked from the room.\n\n\"Let your father talk to him for a few minutes,\" Rosie whispered once they were out of earshot, \"And tell me how you are truly doing.\"\n\n\"I am okay mum. I am getting better all the time. Look at what I am doing with this place,\" she gave a half smile. \n\n\"And Stephen?\" Rosie pressed.\n\n\"He kissed me,\" she admitted then sighed. \"He says he knows I'm not ready to move on properly yet and will wait. Aside of a quick kiss he hasn't done anything but be my friend and look after me.\" Bella looked back toward where they had left the men with concern.\n\n\"Aw my baby,\" Rosie enveloped her in a warm hug. \"No one ever forgets their first big love but they do move on eventually. Your father worries though he would never tell you how much. Let him be the protective lion.\" She grinned and held Bella away from her with a girlish grin. \"Have you lost weight again?\"\n\n\"No mum,\" Bella tried not to roll her eyes.\n\n\"Still, you need to come home so I can feed you and make sure you're eating properly,\" Rosie encouraged.\n\n\"I'd like that. The only problem is that now that everyone is finding out what a good cook you are my friends will want to come too,\" Bella laughed. \"I am not sure Kurt or Stephen are willing to share the honour of eating in your dining room though.\"\n\n\"Well, they can all come baby. Your friends have always been welcome in my kitchen,\" Rosie continued to grin. \"When this place is all finished, you could have a house warming, and I will come and cook and then I can meet all your little friends.\"\n\n\"My friends are not exactly little in case you hadn't noticed,\" Bella looked back towards the study again.\n\n\"He is a bit on the tall, dark and handsome side I must admit,\" Rosie giggled.\n\n\"You must be talking about me,\" Joe announced as he walked into through the living area toward them.\n\n\"Who else?\" Rosie smiled and winked at Bella. \"I would hardly be talking about one of Bella's little friends.\" She said with a perfectly straight face making Stephen stop in his tracks and raise an eyebrow.\n\n\"What on earth have you been telling your mother?\" Stephen said with a wounded look that made them all laugh.\n\n\"We just came to check in with you. We'll see you at the hotel for an early dinner,\" Joe said. \"Rosie and I have another stop to make while we are in the city.\"\n\n\"I'll walk you down,\" Stephen said. \"That'll give Bella some time to herself before we go out tonight.\"\n\nBella embraced her parents and said goodbye then returned to her apartment. She spent some time going over all the plans she had put in place with both Stephen and Andrew for while she was away and then ran herself a steaming hot bath. Taking her time she pampered herself with various treatments that she had not found time to do during the last few weeks. \n\nShe put on the dress Stephen had brought her after her first trip to the cove and twirled before the mirror. It was a beautiful outfit, and she smiled remembering the first time he had kissed her. By the time Stephen arrived to pick her up Bella was more than ready.\n\n\"You look beautiful,\" Stephen murmured and kissed her lightly as she opened the door. \"Ready to go?\"\n\n\"I'm looking forward to it,\" she smiled and took his arm.\n\nThroughout the evening, Stephen was attentive and chivalrous, pulling out chairs and opening doors for her. She felt like she was on a real date and let herself enjoy the fantasy that it could be like this for her in the world outside the lifestyle. Stephen held her hand or placed his hand in the small of her back as they walked making her feel the date like quality of the evening even more so.\n\nEven in Italy this was not something Mel did. There was always the clear definition of his role as her Master. Mel's hand would encircle the back of her neck or her upper arm rather than her hand when they walked together. She smiled and looked up at Stephen noting the subtle differences between himself and his mentor regardless of the similar lifestyles they chose to lead and relished the feel of his large hand wrapped around hers.\n\nWith Mel she knew she was his possession, treasured and adored but still, she had belonged to him just like his company had, she was never his equal or partner, not even in social situations. She knew without a doubt that he had loved her, but it had always on his terms. The man beside her, she knew wanted to one day possess her, but she wondered if it would be in the same complete way. She let herself consider a future with him. She could see that being a couple in the world outside of their circle of friends would not be strained by their roles within the lifestyle and having to keep that of that side of their relationship hidden.\n\nShe had caught herself smiling at the thought of a being a couple in the future and then remembered that there were still many obstacles between now and when that time might come. Still she thought it was an almost perfect evening as the walked hand in hand.\n\n\"You're very quiet tonight,\" Stephen deep voice murmured beside her as they left the hotel after saying goodbye to her parents. \n\n\"I was just thinking about how nice it was to feel so,\" she searched her brain for a better word than normal. Everything was normal to her now both in and out of the lifestyle.\n\n\"So?\" He questioned.\n\n\"It's hard to explain,\" she sighed. \n\n\"Try,\" he stopped walking and turned to look at her with focused attention. A half smile softening his features, \"I'd like to know what goes on in that pretty head of yours when you bite your lip like that.\" \n\n\"My parents had a party, for their twenty-fifth anniversary.Mel helped put it together,\" her face lit up at the memory. \"There were costumes and it was a fabulous night really. It was the first time I actually questioned Mel about whether we could ever go to parties like that or out to somewhere outside of his circle as a real couple. Like a normal couple.Tonight I just feel so...\" She blushed as Stephen scrutinised her, \"Normal.\"\n\n\"So tonight was normal? A double date with your parents!\" Stephen chuckled.\n\n\"Mel and I never did anything that wasn't laced with elements of his lifestyle. Even in Italy it was always such a huge part of our day to day lives. I guess we never had much time to see what could have been, given the opportunity. Tonight was nice, and because I don't have a better word, it felt normal,\" she finished lamely.\n\n\"The word you are looking for is vanilla I believe,\" Stephen continued to chuckle as he walked her to his car. \"Not everything has to be so clearly defined, you know. People in the lifestyle can still enjoy a night at the theatre with vanilla friends and maintain their roles within the relationship. Am I not still dominant to your submissive?\"\n\nBella chewed her lip and tilted her head considering his words. \"It just wasn't that way with Mel, perhaps because we were more umm... intimate,\" she blushed deeply.\n\n\"Perhaps,\" Stephen shrugged and opened the car door for her.\n\nThey drove the short distance back discussing the following morning and trying to find a timetable that would allow them some time over lunch to go through what she needed to prepare for her time with the Goreans.\n\nWalking her up to her apartment Stephens hand once again curled about her neck protectively. \"Sleep well, little one,\" he said softly after opening her door for her. She tilted her head up expecting the kiss that had accompanied that phrase recently, but instead he was gazing down on her an odd expression on his face.\n\n\"Is something wrong?\" she whispered.\n\n\"Quite the contrary,\" Stephen pulled her to him with a strong arm around her waist and kissed her hard deepening the kiss with each heartbeat. Bella could feel his arousal as he held her tight against him, and she found herself surrendering to his kiss and his pure physicality at that moment. \n\nStephen abruptly ended the kiss and frowned at her, \"Goodnight,\" he said in a soft apologetic tone and closed her door leaving her to wonder what had happened. In truth, Stephen wasn't sure himself. He prided himself on always being in control and unemotional on the surface, but he found with each passing moment that he spent with Bella his control around her slipped a little more. He wanted her, but he knew it was still too soon for her to accept the relationship he wanted.\n\nThe following morning had gone by so quickly with Bella using her laptop to talk her mother through the plans for the new apartment's refurbishment while the men went to the car show. It seemed they had barely been gone before they returned apologising for returning later than expected.\n\nRosie and Joe left reluctantly, and as much as Bella loved their company now that she so rarely saw them she was glad to have the time to prepare before she saw Nyx and Master Mike that evening. She began going through the things she needed to think about in her mind as Stephen walked them down to the parking garage.\n\nGor was such that Bella knew she was nothing going into that lifestyle and that even her name would need to be given to her by a Master. She shivered at the thought. While she loved the beauty and grace of the movements expected of the women of Gor, she did not agree with many of the concepts it embraced. Particularly the lack of choices or even a voice in most cases, that women endured as slaves. She slipped on the soft, ragged edged piece of silk, and adjusted its Nyx has shown her with a rope belt around her waist. She then began to go through the motions of as many of the slave positions as she could remember.\n\nStephen returned and took a seat in the large comfortable chair watching her and waiting for her to offer him service. A small smile played across his lips as he watched the minute hand tick over on the small mantle clock she had on the coffee table. It had taken several minutes before she became aware that he was waiting for something, and she gulped loudly. Deciding that she would surprise him, she took and large breath and stood from her kneeling position to walk towards him.\n\nBella knelt before him knees wide and her hand open, palm up on her thighs. Stephen smiled down at her. \"Greetings Master, may this girl offer you service?\"\n\n\"Ale,\" Stephen said shortly.\n\n\"Would you like that in a tankard or a horn Master?\" Bella asked sweetly a soft smile pulling at her lips.\n\n\"Tankard,\" again he barked a short word at her barely looking at her as he did so.\n\nBella unfurled from her kneel slowly stretching her sleek body before him before spinning on the balls of her feet. Gliding skilfully to the kitchen, her emerald green eyes dancing in enjoyment she sought out the perfect tankard for him from a small range she had.\n\nKnowing he was watching her she stretched to the tip of her toes reaching the high shelf these and several other vessels meant for this type of service had been placed by Nyx. She let out a small sound of breath catching in her throat escape as she grazed her thigh against the edge of the bench top and teased the tankard from the high shelf with the tips of her fingers.\n\nShe turned slightly offering him a view of her silhouette. She knew the light would render the thin, silky fabric of her dress translucent as she brought the tankard down to her chest. Then she tested the rim for chips and cracks against the soft exposed skin of the side her neck. She breathed deeply and let it tremble from her throat as she finally lowered the tankard to the bench.",
        "Taking a clean cloth she carefully wiped over the tankard and held up to glint in the bright light of the kitchen. She took a step toward the refrigerator and braced herself before opening the door as if opening the door to an ice-cold strong room. She felt her breasts begin to pucker with the eroticism of her performance as Stephen lounged in the doorway watching her closely.\n\nBella took a bottle from the refrigerator and twisted the cap off with a towel before tilting the tankard and pouring the beer that sufficed as ale into the large tankard filling it to just below the brim. Picking up the tankard, she held it to her breast. The thin material of her ragged camisk offering her skin no protection from the now icy surface. She felt her flesh become goose-bumped as she turned back towards where Stephen once again sat in the large chair. She noted that he moved swiftly and quietly for a large man.\n\nBella tossed her curly hair back over her shoulder with a flick of her head and felt her hair cascading down over her back. She walked carefully taking tender care of the tankard she carried as her hips swayed in what she hoped was a provocative manner back toward the master she served. With the utmost care, she sank to her knees in front of him, her pale thighs widening lewdly to expose more of herself to him than she had previously. \n\nArching her back, she pressed her breasts forward against the edge of his tankard. She rested it close to her heart for the length of five heartbeats before lowering her head to kiss the outer edge of the glass rim. She lowered her head, her flicking tongue tracing over small pink lips as she prepared to speak to him.\n\n\"Master this girl brings you chilled ale in a tankard as you commanded. She prays that it refreshes you and that this girl's service has brought you some pleasure this day,\" her voice was small and breathy as she spoke. \n\nStephen reached to take the tankard from her out-stretched hands and as if on cue Bella gasped as their fingers made contact briefly. She squirmed slightly on her heels as she brought her hands back to her thighs and laid them palm up in a gesture of submission.\n\n\"Very nicely done,\" Stephen said in a deep voice. \"You may return to the slave mats now and pretend I have entered as a Jarl of the north. How would you change that exact service to suit such a man?\"\n\nShe went back to the other side of the room as Stephen stood and placed the still full tankard into the freezer. When he came back in to sit down, Bella crawled to his feet and slithered up his legs and torso pressing her body against his as she moved until her face cleared his enormous chest. Purring softly, she licked a line up his neck and along his jawline to his ear.\n\n\"Jarl, may this beast get you anything this evening?\" she purred into his ear softly.\n\n\"Ale,\" he growled low at her.\n\n\"Would you like that in a tankard or a horn, my Jarl,\" she purred.\n\n\"Tankard,\" his word came out as more of a groan.\n\nBella slowly unfurled from his body retracing her body's movement as it lifted from him with her hands. Standing she spun on the balls of her feet like a dancer might. She walked with a slightly exaggerated sway to her hips. Padding into the kitchen she had known that the drink lay in the freezer, so she opened the door letting out an audible gasp and small tremble as the cool air rushed out at her practically naked form. She took the heavy tankard and pulled it her breast, even a short time in the freezer had made it frostier than before, and she shivered as her skin crawled with goose-bumps. \n\nTaking a deep breath, she tested the cold rim of the vessel against the soft skin of her neck. Stepping back from the freezer that lay at the bottom of the refrigerator, she bumped the door closed with a saucy swing of her hip before turning back towards the living area. Looking up, she saw Stephen smiling smugly at her as she moved.\n\nOnce again, she tossed her hair sending it cascading down her back before padding silently out to where he sat once again. Bella approached him from the side and brushed her breasts against his large muscled bicep. She brought the tankard to her lips slowly, leaving a lingering kiss on the edge before turning it in her hands and pressing that edge to his lips and brushing it against them while purring into his ear.\n\n\"Your ale, my Jarl, chilled despite the heat of this beast,\" her voice was soft but held a sexually charged heat.\n\n\"And you are a hot little beast,\" his low voice rumbled. \"You are more than ready to serve the Masters of Gor.\"\n\nBella couldn't help but smile at the compliment feeling the pleasure of his words roll through her. She slid to her knees in the perfect Karta before him and lowered her eyes. Stephen took several minutes to study her as she knelt there. His self-restraint was wavering, and he wished he didn't have to take her to another Master tonight. To try and distract himself, he took her through various slave positions making adjustments for her and asked her about particular styles of service and greetings.\n\n\"I have spoken with Mike and Rob. Being an uncollared girl in Gor is not advisable. Girls who enter that lifestyle uncollared can are taken by the first man who discovers her. He then keeps her as his own but more often than not she is sold,\" Stephen took on a lecturing tone in an effort to convey the seriousness of his words. \"To that end we decided that you would be required to take a collar from one of us for your protection. As I am the one who has been given the duty of overseeing your training and have links to that community, we thought it best you wear my collar. Mike will had his token of protection to it when you serve his in his home.\"\n\n\"Thank you, Sir Stephen. I would be honoured to wear your collar while I am with the Goreans,\" Bella said softly. She knew from all she had studied and her conversations with Nyx that this would be expected, and it was not like formal collaring. It was more a necessity of this particular lifestyle and would save her from a forced collaring at the hand of someone who may not release her after the two weeks with the Goreans was over.\n\n\"You may not thank me after I explain further,\" Stephen considered her. \"I am aware that Nyx has ensured that your training so far included a lot of information about the assassins of Gor and how to serve them appropriately.\"\n\n\"Yes,\" Bella nodded. \"She was very clear about that side of things because even while they are accepted and respected for their craft they are dangerous and to be served with caution.\"\n\n\"As the property of an assassin, girls too can be seen as dangerous,\" Stephen let his words sink in. \"Accepting my collar as you enter Gor will mark you as a dangerous woman and one to be watched carefully. It is not beyond some assassins to have their slaves poison another Masters drink or food.\" Bella's eyes became wide as the meaning of his words became clear.\n\n\"You will be there to serve every Master as they wish, with no restrictions from wearing this collar but it will protect you from being claimed and make the more unscrupulous Masters cautious around you. No one wants to cross an assassin, particularly me.\" Stephen let a rare grin escape and checked his watch.\n\n\"Get dressed,\" he said abruptly. \"Lincoln will drive us to the Cove and we will leave from there to meet with Mike and Nyx. \n\n\"Yes Sir Stephen,\" Bella did little to hide her surprise and leapt to her feet. She padded into her bedroom, choosing a soft flowing green dress to wear and matching heels. Doing her make-up quickly and pulling her hair up into a messy knot at the back of her head, she reappeared with the small garter pouch containing her phone and credit card.\n\nThey left the apartment and went down to the garage to meet Lincoln. Bella was surprised to find that Stephen sat in the back with her, a covered basket nestled on the seat between them. Once out on the highway, Stephen uncovered the basket displaying gourmet sandwiches and tubs of fresh fruit salad.\n\n\"I promised your mother I would make sure you ate better,\" Stephen chuckled. \"We have little time to stop today, so we need to eat on the run or the drive if we must.\" \n\nThey began to eat commenting on the food and thinking about the weeks ahead. Bella was a little confused by the revelations Stephen had made that morning. Stephen in his private thoughts considered how far to push her in his need for her to take this collar as a further indication of his intentions toward her. With both of them concerned as to how to voice their individual concerns the drive out to the Cove seemed to take no time at all.\n\n\"Thanks, Lincoln,\" Stephen said easily. \"I'll call you when I return.\"\n\n\"Have fun,\" Lincoln said to both of them and then drove away further confusing Bella as to how they would get to Mike and Nyx's house. Stephen took her hand and walked towards his castle-like home.\n\n\"Pete went to a mediaeval fair down south with Jarod and Sophie. There are just a few of the workers still here, but we will have the main house to ourselves,\" Stephen explained.\n\n\"Oh,\" she was disappointed not to see Pete but she had a feeling it was for the best as she was still unsure why they had come here before going to meet with Master Mike. She wondered where they were headed as he led her through the main rooms and kitchen to the north-eastern corner of the building and heavy wood and iron door.\n\n\"My tower,\" Stephen explained, \"Pete's is the southern tower.\" He allowed her to walk ahead of him following her up the winding staircase to the next level which opened into the living area. The furniture all seemed to mirror the castle theme and looked less than comfortable, but she suspected that Stephen spent little time here in reality, and it was more for show than everyday use.\n\nAscending another set of stairs Bella found herself in Stephen's bedroom and in opposition to the rest of the castle d\u00e9cor this was a luxurious room built for comfort. The massive bed took up almost half the room. A large old battered armchair took up another corner, and furred rugs littered the polished stone floors. Along the far wall, an open door showed a small bathroom, and she assumed the closed door hid a walk in closet of some kind. The colour and furnishings made it a wholly masculine room and she could see Stephen here, relaxing and unwinding from his life in the city.\n\nHaving felt impotent after handing her over to Hunter, Stephen had been proactive about this phase of her training. He had already begun speaking with Jack and Samuel, who would most likely be Jack's choice as her next temporary Master, about her time with them. If he was going to hand her over to another's care, he was going to influence that time as much as possible from here on out.\n\n\"You will need to wear appropriate silk becoming a slave of an assassin,\" He walked into his closet and returned with a piece of red silk that he handed to her. \"Change and then kneel on that rug.\" He pointed to a soft black rug before the large armchair then disappeared into his closet again.\n\nRather than being ragged, this silk was cut and sewn in such a way as its raggedness was purposeful and heightened the sexuality of the wearer. Bella stood before the mirror adjusting it and even knelt in the position of a pleasure slave to see how it sat upon her. It was as if it had been made for her the way it clung to her form. Satisfied she went to kneel on the rug before his chair.\n\nStephen finally re-emerged into the room. He wore leather pants and thick boots. His chest and torso were partially covered with an open, sleeveless leather tunic that fell down to his thigh and was held together across his abdomen by loose shoelace type leather thongs. Bella had to stop her mouth from dropping open. He looked beyond the handsome man she knew, he was gorgeous, and she found herself openly staring at him. \n\nHe dropped a bundle of what Bella assumed were coats on the bed and retrieved a small chest from the closet before coming to sit in front of her. Her nose twitched at the smell of well cared for leather, and she leaned forward a little toward it showing her desire.\n\n\"Such a needy slave,\" Stephen eyed her up and down taking in her obvious arousal. \"But before we leave there needs to be an understanding between us,\" he said slowly and carefully. \"So that you understand the position I am putting you in properly. Also, so, that should a man offer you a life that you are tempted by you will have other options to think on and relate to him.\"\n\n\"Less than a quarter of the women of Gor were actually slaves, if one adheres to the books of John Norman rather than the belief of an online community that have twisted the passages of his books to their own wants and needs. This makes the Gorean slave girl a very valuable commodity. Especially a display slave,\" Stephen began. \"You are beautiful Bella, and you have an innate grace in your movements that will make your owners in Gor wish to display you. Once you accept my collar, you will belong to me. The man I give your care to, however, will protect you as if you were his own.\"\n\nBella opened her mouth to speak but remembering her place closed her mouth again and chewed her lip thoughtfully.\n\n\"Speak this will be your last chance to ask all those questions that plague you,\" Stephen said with humour.\n\n\"Do you know who that will be? I mean, I assumed you would give me to Mike, and he would choose a Master for me while I was there,\" Bella asked. \"Nyx said we would be at another's home but she didn't say much aside of that, like it was a secret or something.\"\n\n\"Back when the idea was first floated about your training, Mike began preparations with a man who runs a Gorean retreat in his retirement. He has organised a festival of sorts which from all accounts will be well attended. I will stay two nights and watch you as well as make my presence known to the other men there. I will then return the following Sunday and Monday before picking you up at the end of the second week.\"\n\n\"I am not giving you my collar merely as a prop, Bella,\" he turned suddenly serious. \"I want you to remember that while I have determined to be patient while you complete this journey you ave begun, my intentions once it is over are far more serious. There will come a time when your grief and loss are not so acute. Where Mel will always reside in a piece of your heart, but you will be ready to let someone else into your heart who can accept him being there as well. I would like to be that man, but I will not force it on you while you are still coming to terms with all that has happened.\"\n\n\"You are right,\" Bella said softly, \"Mel will always hold a special place in my heart. He gave me so much and without him I am not sure where I would be,\" she pulled a face thinking of Jim. \"Probably engaged to someone I didn't love because it was what was expected,\" she sighed. \"I will always love Mel for opening up a whole new world to me, both privately and in the company but...\" she swallowed and took a breath. \"He was my Master for a month or there abouts. I mean, I knew him most of my life as a family friend, but I only knew the real him for such a short time.\" She tried to explain herself. \"It was intense and that is what probably made my grief all the more palpable. He owned me; body and soul and I gave it all to him because I loved him and wanted more. I wanted this lifestyle, the training and understanding he could give me as I learned, and the fact is I still do.\"\n\nStephen said nothing as she looked up to him for understanding, so she continued. \"This training, while giving me the chance to explore and be in this world, isn't really what I thought I wanted,\" her voice dropped as she admitted it out loud for the first time. \"I wanted to feel again. I wanted to feel something, anything, without the risk of being hurt again, but the euphoria of the sex is not enough on its own. I realise now that I need more in my life, not just need but I want more than just a playdate as you once put it.\"\n\n\"I did?\" Stephen finally broke his silence.\n\n\"I thought so, but maybe it was Dorothea who used that term,\" Bella blushed.\n\n\"It's an apt description,\" Stephen said with genuine humour. Then his face turned serious again. \"Bella, I will admit that I have status and respect among the men or Gor, and I have used that to influence your time there rather than handing you over to another entirely. Master Kolten will take you into his home and under his protection when I leave. You will serve any Master who wishes it as befits a pleasure slave, but you will, for all intents and purposes, belong to me. I did this selfishly so that no other would be able to place their collar around your neck in my absence.\"\n\nBella was once again chewing her lip and tilted her head at his words. \n\n\"Speak,\" Stephen said sensing her thoughts again. \n\n\"I know I have a lot to learn, and I don't always understand these things but, couldn't I just say that my interest lies elsewhere or with someone else should the need arise?\" Bella asked softly.\n\n\"In Gor, slaves have no real voice or choices as they do across other lifestyles. It is best this way, unless of course you do not wish to wear my collar, I would never force it on you,\" Stephen's voice had begun to turn hard with the last phrase.\n\n\"Oh no,\" Bella said aghast that he would think that, \"I feel honoured that you would think I am worthy of wearing it. It's just that I would like..., have been liking, getting to know you better, and I was thinking beyond the two weeks that's all. You have told me of your intentions, and I was wondering if I should declare mine in the same regard, sort of, well at least my interest in knowing you more.\" Her head dropped, and a deep blush coloured her features.\n\n\"When you return, if you still feel the same way, it is something we can talk about,\" Stephen tilted her chin up so that she could see his pleasure at her words and kissed her lightly. He then placed the small chest beside Bella and opened it showing what it held. She noted several red silks like the one she already wore, bina, bells and silk ribbon for dancing. \n\n\"Because you will enter as an owned slave you can have a small chest of belongings. We will place your phone pouch in here, and you will be allowed to charge and check it daily,\" he explained. Then he took a small flat box from the chest and opened it. \"These are temporary tattoos of the dina. Stand,\" he encouraged her to spread her legs further apart until he was happy with the stretch of the skin and placed the small square of paper against her inner thigh, \"Hold this.\" He then went and got a damp cloth and pressed it against the square for several minutes in which she stood in agonising silence in an uncomfortable position.\n\nOnce he was fully satisfied that the transfer tattoo had taken hold he allowed her to resume her kneel warning her to be careful until it set completely. He opened the box showing her the spare tattoos and a pen that she could make small repairs with should she need it then he threw the box back into the chest and closed it. Walking to the pile he had thrown on the bed, he picked up another slightly larger flat box and returned to sit with her.\n\nHe opened the box and exposed a simple circle of brushed copper with an amulet attached that was breathtakingly beautiful in its intricacy. A sword with a pommel of flame hung suspended between two bound angels at its very centre where the pommel met the blade was a small ruby glinting in the light. \n\n\"To the Goreans I was known as Steelheart the assassin,\" he said quietly as he picked up the collar. \"As my slave you will be known by the name Honey because you are so sweet and to protect your real identity. Men of Gor do not approve of women who have careers, particularly ones as high profile as yours.\" Once again, he became serious and tilted her chin up so she would look him in the eyes as he held up the collar before her.",
        "\"What are you?\" he asked.\n\n\"I am a slave girl,\" she responded to the questions she knew by rote.\n\n\"What is a slave girl?\" His voice was deep and rolling.\n\n\"A girl who is owned,\" she continued to look into his eyes.\n\n\"Why do you wear the dina?\" His eyes glanced down at her wide spread thighs.\n\n\"To show that I am owned,\" she felt her lips turn up at the corners as she tired to hide her smile of pleasure.\n\n\"Why do you want this collar?\" Stephen held up the circle of steel again before her face.\n\n\"So that men may know who owns me.\" Her smile threatened to spoil the seriousness of the moment.\n\n\"What does a slave girl want more than anything?\" His eyes held hers as he waited for an answer.\n\n\"To Please men,\" she said made nervous by the look in his eyes.\n\n\"What are you?\" he asked again clicking the collar in place around her neck.\n\n\"I am your slave girl.\" Again she felt the tell-tale tightening on her lips as she suppressed her smile.\n\n\"What do you want more than anything?\" His voice was demanding now.\n\n\"To please you, my Master, and the men of your home,\" She finished with her eyes still locked to his.\n\n\"Dance to show me your pleasure at receiving my collar,\" he commanded and sat back in the chair.\n\n\"Yes my Master,\" Bella said taking on the role of a demure slave of Gor. She peeked up through her long lashes hearing the loud and strong voice of her new Master command her to dance to see his smile and felt the waves of pleasure fill her. Taking a deep breath, her heart pounding with nervousness and joy she rose up onto tiny feet, gracefully weaving her way back across the room to begin.\n\nShe mimed flicking sand with her tiny toes as her eyes sought out his, and a small soft smile played on her lips. She lifted her slender arms high in the air intertwining then and picked up a beat and melody in her mind which she hummed softly as the dance began.\n\nBella swayed her hips to a silent beat and her heads slowly lowered twisting gracefully like retreating serpents until her hands touched the new steel around her throat, and she lowered into a wide kneel. Releasing the collar she placed her hands on the floor and moved with grace, sensuous hips swaying from side to side like a cat on the prowl she moved towards him slowly. Then halted as if by an unseen barrier and fell to the floor just out of his reach.\n\nShe rolled to her back stilling lightly humming the melody in her mind and let her long fingers begin to trail along her tummy, lightly, teasingly. She swung her head to the side brushing her hair over her shoulder so that the ends of her curls grazed her budding aroused nipples. Breathing in slow, she felt herself yearning for his touch, not just acting out the need in the dance, but wanting it so badly. She dared to peek I his direction and found his face a mask showing no emotion except in the heat of his eyes which did not waver in their gaze upon her. \n\nAs if those eyes commanded her, she raised her small hands cupping her breasts as they rose and fell in time with her increasingly rapid breath. With everything that had happened between them over the last three weeks, and all they had confessed to each other about their mutual interest and intentions, she did not need to act out her yearning to be held by him, possessed by him.\n\nHer emerald eyes closed for a moment as visions of him danced through her mind. She replayed their first kiss over and over, not knowing at the time that she could ever feel this desire for someone other than Mel again. Rolling back to her belly, she looked up at him directly showing her heat and need within the dance and slowly knelt, her hands trailing up her ribs to cup her breasts momentarily again.\n\nHer hands continued their upward motion combing through her curls and letting them fall back over her shoulders. Her hands lifted skyward, and her body followed until she stood before him, the rope belt of her camisk coming undone and falling to the carpet at her feet. With the belt gone the silk hang from one shoulder exposing her nakedness beneath to him without impediment. She twirled on the balls of her feet letting the remaining silk flutter and swirl around her.\n\nAs her spin slowed her hands reached for the collar she now wore, and a brief memory of Mel caused her face to change as she looked up into Stephen's dark gaze again. Concern clouded the heat in his eyes momentarily and she realised he knew her well. She felt the love he had for her in that look and she smiled softly once again swinging her hips to a silent beat and beginning the humming again to show her pleasure at accepting his collar. Even if it was only temporary.\n\nHer graceful swaying dance moved further toward him and then around him. Her long fingernails trailed up and down his bare arms on over his neck as she swayed and spun around him pressing against him and making physical contact with him letting him so that he could feel her heat. With a small whispered whimper of need interrupting her soft humming, she spun away from him again dancing back across the room.\n\nShe stopped abruptly and turned to look at him her green eyes flashing as she delicately fingered the collar about her neck. She began to rotate her hips in a newly learned move as once again her hands travelled down her body slowly, her breath catching as they playfully danced over her nipples before moving on. Her deep green eyes were aflame with desire as she danced sensuously for him with an instinct she hadn't known she possessed.\n\nBella's rounded hips gyrated in slow, insistent circles. It was an uncontrollable reaction as if she was a wanton slut begging for his attention. She let out a soft sigh feeling the slick wetness of her own excitement growing with each passing moment. Concerned for the new tattoo, she spread her creamy thighs wider, displaying more of what she was feeling and her need for his touch. Her eyes remaining focused completely on him as she extended a small pink tongue to lick out over her dry lips.\n\nAllowing her knees to buckle, she knelt back down on the carpet and leaned forward to crawl sensuously toward him again, her hips swinging. She knew this could end badly. She remembered that he had once said he would not take her until she was his but wasn't she showing him just that, wasn't she wearing his collar. She knew it wasn't real but instead she wore it for a purpose but at that moment dancing for him and him alone it felt very real to her. She wanted to please him. She wanted to arouse him until she broke through his self-control. She wanted Stephen to take her like she knew he could and would one day. She didn't want to wait. She wanted it now. \n\nUnable to hold back any longer she sat up before him grinding her hips to press her cunt against her feet below her. All of the uncontrollable sexual need she felt was so overpowering and strong at that moment that she looked up at him believing her deepest desires would be revealed in her eyes. Her movements caused long strands of her hair to bounce and cascade across the slender line of shoulders as she showed the spoils of his conquest in collaring her.\n\nBella gazed up into his eyes and was greeted by a hard look she didn't understand making her falter in the dance thinking she had perhaps gone too far. Or perhaps it was a mistake to show him her need and what a slut she truly was for a strong Master who could take her and make her his own. Her lip caught between her teeth as anxiety enveloped her. Still she brought herself back to the dance and drawing her hands up her body she entwined them over her head before bending forward in a position of submission to him and whispered, \"La Kajira.\"\n\nStephen had seen her falter and knew it was his fault. He warred with himself internally over the effect she had on him and his resolve to wait until all this training was over before he took her as his own. He wasn't inclined to share like so many other in the lifestyle. What was his was his alone. With Bella though he had no choice, and he could see her need as clearly as he could feel his own. Half of his mind cursed himself for being a fool at not enjoying the pleasure of such a hot slave. The other half warned him of the pitfalls that would dog him over the next few months as she continued her journey through the training that had been set out.\n\n\"Fuck it!\" He groaned loudly and came to his feet stomping toward her. He reached down, grabbed a handful of hair and pulled her to her feet, relishing the squeal she emitted as her face came up to meet his. \"Such a fucking irresistibly hot slut,\" he growled and lowered his head to devour her mouth taking her breath away as he kissed her deeply and passionately still holding her hair tightly in his fist.\n\nBella pressed up against him feeling the hardness of his cock press into her belly and whimpered into the deep kiss. Stephen broke the kiss and looked down into her eyes has his free hand grasped one breasts and squeezed tightly his fingers sinking into the soft flesh making her whimper loudly and pant in her need for him. His fingers sought out the hard little pink bud that was her nipple. He then pinched and twisted it swallowing her cry of pleasurable pain with another soul deep kiss.\n\nEvery inch of her body was surrendering to him, and the tendrils of pain flowed from her nipple through her chest and mixed with the growing flutter of arousal that built steadily in her belly. When his hand finally lowered from tormenting her breasts she all but thrust her hips forward welcoming his touch, craving it, needing it.\n\nStephen broke the kiss and pulled her head back further by the fist of hair. He smirked down into her face enjoying the sensations of controlling her, taking her and making her his even if only for this moment. He watched her face as he slid a finger between the lips of her wet cunt and rolled her clit beneath his thumb. Her stance widened to accommodate his hand. He drew it back and quickly slapped her cunt hard making her squeal and her eyes flare wide.\n\n\"Mmm,\" he murmured deeply, \"You sing so beautifully for me,\" he slapped her again and swallowed her cry with another kiss as the fingers of his hand explored her further. Keeping his thumb on her clit, her pushed one of his large fingers into her relishing her tightness before forcing a second in beside it, swallowing her cries of pleasure and pain. He could feel her rocking her hips to his movements and found he could barely hold back his own need. He felt her thighs begin to tremble around the hand that fucked her, and he broke the kiss pulling her head back and growling, \"Cum for me little slut.\"\n\nArching against him and riding his hand Bella cried out to the room her mind obliterating everything else but the rush she felt as she floated on endorphins and adrenaline. Stephen could see her eyes cloud over has she floated on that high and released her hair supporting her back as she shook with the power of her orgasm. \n\nHe slowly drew his fingers from her and continued to hold her close until she had come back to reality before offering her his fingers to clean. He watched his face a mask of lust as she cleaned his fingers for him. Her lips and tongue only feeding his need further. He dragged her back and all but threw her to the rug before his chair then kicked off his pants and sat as she kneeled up before him.\n\nTaking a bunch of hair in his fist again, he drew her head to his cock and watched as she tentatively licked out at him. She then swirled her tongue around the head as he held her just at the tip allowing her no freedom to control her exploration of him. That would come at another time right now he needed to fuck that pretty little mouth.\n\n\"Open,\" he growled at her, \"Tongue out.\" As soon as she complied he manoeuvred her head to where he could slide along the length of her tongue watching her lips stretch over his girth as he did so. The sight was so appealing he continued to do this for some minutes pulling her head forward and back by the air.\n\nBella knelt up awkwardly the fist in her hair feeling the still rolling waves of the massive orgasm he had given her moments ago. Stephen had a big cock to go along with the rest of his large physique. She wanted nothing more than to suck him deeply into her mouth, but she found herself stymied by his tight grip on her hair and his control of her every movement. She looked up at him through her lashes and received a satisfying groan as he caressed the underside of his cock with her tongue. \n\n\"Suck,\" he groaned loudly and she felt the tension in her hair ease as he let her start at her own pace. Eager to please, Bella sucked hard going deeper on each thrust and swallowing around the head of his cock. \"\"Fuck yes,\" came the breathy groan from Stephen, \"Its good you know how to suck a cock properly.\"\n\nBuoyed up by his praise, she began to flutter and swirl her tongue as she moved her head up and drove herself down onto him trying to take as much as possible. The hand in her hair tightened again, and she was reefed up and back away from his cock. Stephen then stood above her pulling her up on her knees and commanding \"Open.\" He then straddled her face pulling it up to rub over his balls. \n\nBella immediately licked out and sucked on each one with tender care. Her tongue fluttered and swirled busily as he continued to keep an iron fist in her hair. Stephen had denied himself so long that he was unable to hold back any longer. He pulled her face away again and pulled her mouth back to the tip of his cock. She opened her mouth without the verbal command, and he drove into her deeply hearing her gag and lacing both hands into her hair.\n\nHe drew back slowly and thrust in again watching her the whole time holding back with great effort as he thrust in again past her tonsils. She turned her teary eyes up to him and looked at him through long lashes, and he lost any pretence of self-control. Giving in to his own needs, he began to fuck her pretty little mouth while holding her head firmly in place as he did so.\n\n\"You can please yourself,\" he groaned hoarsely seeing her squirm beneath his onslaught and was satisfied when he saw her do just that. The tears that fell from her eyes as she gurgled, gagged and spluttered around his cock only drive him harder, and Bella could feel her climax rising in her again as he used her so. After what was, in fact, was merely minutes, but seemed like much longer to Bella, Stephen barked, \"Open. Tongue out.\" He then sawed in and out of her mouth twice before the first long ropey strand of cum covered her tongue. \n\nCurling her tongue slightly to hold as much cum as she could on the surface Bella held back her climax until he told her otherwise. \"Swallow,\" he groaned and pushed his cock into her mouth with the cum he had deposited there. He collapsed back into the chair pulling her with him. Her mouth still enveloping his cock and murmured breathlessly, \"Cum for your Master.\"\n\nHe let a smile show as on cue to his words she arched and cried out around his rapidly softening cock. The vibrations of her cry sending thrills of excruciating pleasure back through him. He watched her collapse before him her head still nestled in his lap as he petted her hair. \n\n\"Thank you, Master,\" Bella said quietly as she regained her senses. \n\n\"You are an amazing woman, Bella. I am proud that you wear my collar,\" Stephen said looking down as he continued to pet her hair gently.\n\n\"Come,\" he said with a smile, \"Doing this and taking the time to shower again was not part of my original plans for this afternoon.\" Bella looked up at him and chewed her lip. \"You are far too irresistible when you do that,\" he rolled his eyes at her and stood picking her up and carrying her into the bathroom. \n\nThey showered with Stephen having the briefest of showers and groaning again about being tempted to make them late. Bella took a little longer taking care to clean the area of the new temporary tattoo carefully.\n\nStephen was not in the room when she reappeared, but she took the red silk looking at it carefully this time before putting it on. It was a far sight better than the Ta-Teera or slave rags she had been practising in. This slave dress was hemmed and well finished, so she tried to remember if a Camisk looked quite this way or if it was something else she hadn't learned the name of yet. Not that it mattered it was what she had been given to wear by the one who owned her in the world she was heading to. She slipped it on and found the rope-like belt where it lay on the floor, wrapping it twice around her waist and tying it at the side over her right hip.\n\nThe chest had gone and so had the coats he had left on the bed so Bella, being unsure of what she should do, left the room to seek out where Stephen might be. Passing through the living area she smiled again at how uncomfortable the furniture looked and was surprised when she sat on one of the hard wooden chairs that it wasn't at all uncomfortable. She could hear Stephen's footsteps on the stairs and quickly stood up wondering if she should have left his room at all. \n\n\"Good you're ready, let's go,\" he held his hand out to her, and they descended the stairs. \"I am sorry, little one,\" Stephen said softly as they walked into the kitchen. \"I hadn't planned for us to become intimate like that just yet.\" Bella looked up at him wondering if he regretted what had just occurred. \n\n\"I don't regret it at all. In fact, quite the opposite,\" Bella said softly unsure of why he was sorry. \"Please don't be sorry for something I wanted, even begged for in my dance.\"\n\n\"I would have liked the time to explore each other properly. To talk about what it is we want and don't necessarily want, before we,\" he stopped seeing the anxiety making her cute lip chewing more pronounced. \"Bella stop and look at me,\" Stephen tilted her face up to him. \"I have wanted you for the longest time. You are an amazing woman and what happened just now what beyond my expectations but,\" he saw her drop her eyes and carried on regardless. \"I hate to rush these things. I like taking the time to ensure you are well taken care of, I am sorry that we had to rush like this, especially this time.\"\n\n\"There will be other times. I am happy that we moved a little further forward even if it was not what we had planned, especially because of this,\" she touched the amulet at her throat. \"And what it might mean for the future.\" Her blush coloured her face once more.\n\nHe bent his head to kiss her then and felt his heart swell. He had not expected her to be ready to welcome anyone in her life as a future Master for some time yet. Part of him worried that he would become a rebound master if he pursued this relationship with the sense of urgency he felt. The part of him that revelled in using her a short time ago, however, stilled the nagging doubts and made him fall a little bit more in love her.\n\nAt the rear door, her helped her to put on a hooded cape and then fastened his cape. Bella noted that he looked even bigger and broader with the hard, armoured shoulder armor that his cape bore. She felt dwarfed by him as they walked out to the cliffs she had been to with Dorothea on her last visit. Lost in her thoughts Bella didn't even acknowledge that a helicopter sat on the edge of the cliff until its huge rotors started to spin.\n\n\"Your chariot awaits,\" Stephen laughed as she looked up at him in surprise."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "gor",
        "master",
        "slave"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/possessing-bella-ch-12"
}