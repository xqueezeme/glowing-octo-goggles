{
    "title": "Animal Caf\u00e9 Ch. 07",
    "pages": [
        "\"Would you get off Trixie, please! She can't breathe!\"\n\nI was indeed stuck on my back with all the pet girls piled up on top of me, much enjoying the fact that I turned into a temporary white rabbit. Lucy just called me Trixie too, probably out of habit... or not. The real Trixie was not working today, but the living costume made it hard to believe.\n\nThe pet girls somewhat obeyed Lucy and got off me, one by one, but stayed very close. What a rush. If they kept doing this, it would be a long two hours until the caf\u00e9 closed for the night. As I was standing up and making sure my long ears were still in place, I was now wondering what the \"surprise\" Lucy was referring to was.\n\nI turned to her, and she pulled me into a big hug. I really felt like a toy. The pets and the owner of the store were doing as they pleased with me apparently.\n\n\"Aaah! How can you be so cute! I might just take you home tonight!\"\n\nHome? I didn't know Lucy was taking her pets home? Or maybe it was just sarcasm.\n\n\"So, Trixie... I mean... Clara... I think I might just call you Trixie else it's going to be so confusing. Usually, we have a client coming to the caf\u00e9 around this time. Every single time, she always asks for Trixie. The bunny is her favorite pet ever. Trixie is not always there, so she can play with the others too, but if Trixie is around, it must be Trixie, you understand?\"\n\nIt was simple math... Lucy was about to ask me to keep a special client company. That was her surprise for me. The good thing is that I didn't have to answer anything, and for some odd reason, I didn't get nearly as nervous as I would have been out of the pet costume. Wearing it made me feel safer... protected.\n\n\"So, if she comes, would you mind spending some time with her? It would be a bit heartbreaking if she sees you and we have to put a red collar around your neck. She is super sweet. Plus, it is out of question to tell her you are not the real Trixie, it would devastate her. I can't afford to lose any clients. So, can you do that for me? I would double your cheesecake portion next time.\"\n\nI saw that request coming from a mile away, and I didn't feel I had a choice in the matter unless I wanted to be an ungrateful person. Lucy always had a bizarre way to ease people into new experiences. \n\nChewing on my mouthpiece gave me some courage, and I nodded, agreeing with her request. Why not. I got plenty of physical contacts from the pets already, and I had not died from it. If the girl client is sweet and nice, there was no big reason to overthink this. Plus, a double cheesecake sounded appetizing.\n\n\"Aaah! Thank you, Trixie... You won't regret it. I tell you, she is super nice... but you know how Trixie is, right? And what she likes? So just try to go with the flow and don't act too different, or else it's going to look suspicious. If there is anything wrong, just call Vix over, and she will help you. She is our cuddling specialist.\"\n\nI rabbit-nodded again, making my long ears sway back and forth.\n\n***\n\nFor the next fifteen minutes, I just sat in a corner, cuddling with Vix and trying to absorb the moment... I was a pet girl... or at least, I was experiencing what it was like to be one. Trixie's suit was extremely comfy, and it was pretty cool to look at myself and only see my snow-white skin. The color was clashing with Vix's bright red body.\n\nForced to cuddle with those cute cushy paws made me feel adorable, and pushed me to act the part. I was understanding better why the pets were behaving the way they did... having no fingers changed things. The way to touch people was different, but I quickly got the hang of it.\n\nSuddenly the door opened... and Lucy let a new client inside the lounge. She was small, blonde with pretty blue eyes and she looked around for something. Vix poked me behind the head a couple of times with her soft paw... Was she the girl I was waiting for?\n\nThen...\n\n\"TRIXIE!\"\n\nVix pushed me harder as if to say, \"What the hell are you doing! At least try to look happy to see her.\" Without having time to process what was happening, I got off my bunny butt and stepped toward the girl, who caught me in her arms.\n\n\"Aaah! Trixie! I missed you so much! Sorry I couldn't be here last week!\"\n\nShe grabbed my wrist and dragged me to a booth... my usual one. She sat down, and I joined her, not too sure what to do.\n\n\"You... You don't want to sit on me as you always do?\"\n\nI looked down, embarrassed... nobody told me anything about her habits with Trixie... How was I supposed to know what those two did together in the past? Lucy just told me to spend time with her and be tolerant if she was doing things to me that the real Trixie enjoyed. I didn't expect to have to take some initiatives. I was disappointing the girl...\n\n\"Aaah... It's okay... If you don't feel like cuddling... I... I guess I can come back another day... But... I missed you so much, Trixie.\"\n\nOh crap! Way to go, Clara. I was doing this for Lucy, so she didn't lose clients and revenue, but I made the girl want to leave within a minute.\n\nI turned to her, placed my paws on her shoulders, and shook my head in disapproval. It was one of those rare moments when I would have loved to talk and ask her to stay.\n\nVix slapped her paw on her forehead, shaking her head, not believing how quickly I messed things up. This negative judgment pushed me to attempt something.\n\nHolding her shoulders, I climbed on top of her, straddling her as many of the animals did with me. Then I gave her a big hug.\n\n\"Aww! Trixie... I missed your hugs so much. Can we stay like this for a while... I... I had a bad day, and you make me feel so much better!\"\n\nI nodded happily. It was so strange to be on the other side of the fence and be the one that provided emotional relief to humans. She was indeed the very gentle client Lucy said she would be. Her little hands rubbed me all over, and she was even kissing my mask, which was weird since I couldn't feel anything. But it was making her happy, so it was a good thing.\n\nA few minutes later, Lucy brought her a piece of chocolate cake. It looked delicious. Perhaps I should try it next time. I guess this was my first frustration as a pet; I couldn't eat cake.\n\n\"So, getting along as usual? If you continue like this, I might just let you take Trixie home!\"\n\n\"SERIOUSLY? You would let me take her home?\"\n\n\"Well, I wasn't that serious, but based on your reaction, you probably would like that a lot. We could probably arrange something.\"\n\n\"That would be AWESOME! I mean... I don't have much money left... so I don't think I can afford that.\"\n\nWhat? No way! Did Lucy really offer my body to the cute girl who was struggling with money? First, I didn't want to spend the night in a pet suit; it was too much too soon! Second, why would she ask her a fee when she gave everything to me for free... Why was this girl any different? She was as sweet and nice as I had been with the real Trixie... I really hoped Lucy didn't have money in mind when she talked about \"arranging\" something.\n\n\"How about a hundred dollars? You can bring her home tonight, and you bring her back tomorrow morning.\"\n\n\"... A... hundred... dollars? But... It's a lot... I... I have my rent coming and...\"\n\n\"Ah, well... I guess it would be for another day, maybe.\"\n\nI automatically wrapped my arms around the blonde girl... My heart was about to explode in my chest because it was beating so hard. This was wrong on so many levels... Lucy was trying to get money out of this girl using me without consent... Where did the super nice shop owner girl go all of a sudden? I have never heard her talking like that to other clients before.\n\n\"Mmm... Trixie seems a bit nervous... I think she needs to rest... Come, Trixie. Your friend can cuddle with another pet if she wants to...\"\n\nLucy grabbed my wrist and tried to pull me off the girl, but the girl pulled me back, almost panicking.\n\n\"No! Wait... I... I will get you the money... I can borrow some... I have forty-five dollars now... I can give you the rest tomorrow morning...\"\n\nNO, NO, NO! This was so wrong! What was going on? I didn't want to be part of this blackmailing scheme! I wanted out of the costume right now and leave this place. Why was she doing this to me? Why was she treating the poor girl so horribly?\n\nAlmost raging, I pushed and struggled myself off the girl and Lucy, and ran to Vix and Asha, who were looking at us from afar. I sat with them on the floor and frantically tried to get out of my pet suit.\n\nAsha and Vix tried to calm me down and to keep my paws away from my neck. Then, a big smile appeared on Lucy's face, and she started chuckling.\n\n\"Awww... Poor Clara... I think we pushed her a bit too much.\"\n\n\"Bahaha! You were right... She is the cutest rabbit in the world! Maybe we should let her use my costume indefinitely!\"\n\n... Uh? HER COSTUME? Was that what the blonde girl just said? Vix and Asha squeezed me tightly, and the small client went down on her knees and crawled toward me. Her hands reached my mask, and she grinned at me.\n\n\"Yes! I'm Trixie, silly! Haha! Sorry... When Lucy called me to tell me she wanted you to try my costume, I'm the one that came up with that little prank. It was so mean! I'm sorry that I scared you like this.\"\n\nI stayed immobile for many long seconds... then when I fully understood what was going on, I let out a long, loud sigh of relief, making my latex ear fur wiggles.\n\n\"Sorryyy! I just couldn't resist. We love playing tricks on each other like that. I guess that's because we love you so much, Clara. Hey, Lucy... Can we borrow one of your sleeping pod-things upstairs? I would love to spend some quality time with Clara-rabbit before you close.\"\n\n\"Sure thing! She deserves it. But only if she is okay with it. And no more than two hours, though, then we take her out of your costume.\"\n\n\"What do you say, cute rabbit? Want to go cuddle with me to recover from your strong emotions?\"\n\nBefore I could even answer anything, Asha gave me a nudge... then Vix grabbed my head and forced me to nod. I guess it wouldn't be bad to go relax for a bit after what they made me go through.\n\nI slowly stood up and went to Lucy and stared at her in the eyes.\n\n\"Awww... So cute.\"\n\nThen I slapped her repeatedly on the chest with my cushy paw.\n\n\"Haha! Stop! Stop! I'm sorry! It was Trixie's idea... Okay, the suit was my idea... But stooop! You are tickling me!\"\n\nThe real Trixie grabbed me by the waist and pulled me away from the trickster shop owner.\n\n\"Come, Clara! We don't have much time... Let's go rest.\"\n\nUnbelievable. Those two totally pulled my leg and almost traumatized me for entertainment purposes. That said, it somehow made me happier in the end as I felt a bit more part of the family. This little adventure had forced me to do something I was unsure I desired to ever do, seeing one of the pets out of costume.\n\nNot long ago, at the mall, Asha gave me an opportunity to look at her real self, and it made me freak out to the point that I declined her offer. In this case, I thought Trixie was a client, so it didn't bug me to look at her and cuddle with her. But now that the cat was out of the bag, the ice was broken, and it was as if my fear had never existed. Odd.\n\nAnother noticeable thing was to function without having to talk. Because of my communication disorder, I never had it easy. If I needed to do anything, I had to talk, and people also expected me to talk to practice my speech. All my life, they diagnosed me, gave me tips and tricks to get better, and put me in situations where I had no choice but to speak to get what I wanted.\n\nAt the end of the day, I have always been treated as a medical condition more than a person. I mean, I wanted to get better and improve, but I also wanted to live without being labeled as a defective human being.\n\nSince I was wearing this animal suit, nobody had expected me to say anything. They knew I couldn't, so it never crossed their mind that I would answer with words. They communicated with me differently, and it worked as well. There was no issue at all. So what was the deal here? People couldn't communicate with me when I was a person, but they were communicating just fine with me when I was wearing a costume? I found it incredibly disturbing that a single piece of clothing changed people's perception of me that much. Today, I learned that they were the problem, not me.\n\nWhen we got to the capsule room, Trixie opened one of the pods, let me in, and followed me. After closing the door behind her, she surprisingly sat in a corner and started chatting instead of cuddling.\n\n\"Aaah! Finally alone. Listen, Clara, I know it must be a bit of a shock to see me like this, out of my suit. So I don't want you to feel pressured or anything. Believe me. It is very strange for me as well to see my bunny-self alive and moving in front of me. I'm wearing that costume most of the time, and it is vital to me.\"\n\nWait... Was Trixie the uncomfortable one now? If she were wearing her rabbit costume, she wouldn't have behaved like this at all; she would have been all over me already.\n\n\"Sooo... I don't know what to do, really. Usually, you would be the one telling me if you are okay. Or at least I could see your face. I know you are the shy type, so I don't want to do something you don't like.\"\n\nTrixie was as cute out of her suit, after all... Like all the other pet girls, kindness and understanding were driving her. There was only one thing I wanted from her at the moment.\n\nI raised my arms toward Trixie and motioned my paws in a way to invite her for some cuddles.\n\n\"Awww... Clara! You are so sweet! That's why we all love you so much. Can... Can I take off my clothes?\"\n\nI nodded. Why not? She let me do it before, so it was not something I could refuse.\n\n\"Nice... I... I like cuddling naked with my latex friends. I don't get to do it often. And cuddling with someone wearing my white rabbit suit would be a first.\"\n\nIn no time, I rested my back with Trixie, who was down to her underwear on top of me. There were no more tricks, no more teasing... The only remaining element was genuine affection shared between a girl and her pet.\n\nTrixie spent a long time exploring my body and features. The long moment she spent playing with my ears confirmed that she was not used to cuddling with giant rabbits. The blonde girl did play with my boobs quite a bit but didn't go farther than that. It was just because she was Trixie, and in or out of a suit, she loved playing with boobs and vice-versa; horny little bunny.\n\nMy mask's black lenses made me see things almost in black and white, but I loved her short blonde hair. It is evident that she chose a cut this short for practicality while wearing a pet costume, but it suited her.\n\nToward the end of our cuddle session, she flipped me on my stomach and gave me a long and skilled back massage. That was another level of friendship. While she was massaging my butt, she continually played with my fluffy rubber bunny tail. I stuck my butt out to make her laugh, but she rewarded my move with a nice stinging slap.\n\nOn this night, I discovered playfulness... which was not something I was used to. Was I getting a glimpse of what friendship was all about? At the mall the other day, when I heard the three pet girls teasing each other, it was a concept that was escaping me, but now, without words, Trixie and I were having this kind of fun too... At least it seemed like it to me.\n\nAfter my massage, we laid down, chest against chest, belly against belly. Our legs and arms wrapped randomly around each other, and we quietly napped. It was fantastic.\n\nLucy knocked on our capsule door and cracked it open.\n\n\"Awww... Rabbit pile. Hey, I'm closing to shop for the night. Come, Trixie... I mean... Clara-bunny.\"\n\n\"Ah! Why? Can't we sleep here tonight?\"\n\n\"No. Clara needs to get out of your suit. It was fun, but it's enough for her first time. Come, rabbit.\"\n\nTrixie complained and wasn't ready to let me go, but Lucy was the one who decided. She had dealt with many pets in the past and knew what she was doing. I separated myself from Trixie and crawled out of the mini-room where Lucy grabbed me by the wrist; I really was just a pet to her, it was kind of funny. I didn't think she was doing this on purpose; I could have just followed her.\n\nOnce in the dressing room, she unlocked my back zipper, slid it down, and guided me through the removal procedure.\n\n\"The nose tubes are the only annoying things... It tickles a bit when we pull them out. I recommend you close your eyes, like all the other pets do when I take off their masks. It just makes things easier. Ready?\"\n\nI squeezed my eyes shut and nodded. Rapidly, and painlessly, Lucy peeled the mask of my head and pulled the nose tubes out. Right away, a wet wipe dragged on my face and nose. Lucy knew what she was doing. She probably wiped the tubes as well to get rid of anything that would be gross to the view.\n\n\"Very nice... now open wide.\"\n\nI opened my jaw, and she effortlessly pulled the mouthpiece out, repeating the same process with a fresh wet wipe.\n\nAfter that, Lucy helped me out of the paws and bodysuit and covered me with a blanket to keep me warm. While she begam cleaning the suit, I sat on a chair and had to answer a few questions.\n\n\"So? Not too bad, uh?\"\n\n\"... It was good!\"\n\n\"Want to do it again someday?\"\n\n\"I... I think so.\"\n\n\"Do you understand better why it is important to take good care of the pet girls? You were pretty helpless, right?\"\n\n\"Yes... When you... exchanged me... for money. It was very scary.\"\n\n\"Aww, sorry. It was really Trixie's idea!\"\n\n\"Lucy is a pimp!\"\n\nOut of nowhere, Trixie entered the costume room and threw a funny comment, which made Lucy chuckle. The blonde girl headed right to me, opened my blanket, sat on my lap, and wrapped it back around us.\n\n\"Sooo... Did you like being me? The cutest rabbit girl in the world.\"\n\n\"Yes. It was... fun!\"\n\n\"So, you are going to come to work with us here?\"\n\n\"Trixie, leave her alone! We have enough pets already. You know that,\" Lucy said.\n\n\"I know, but I still want her to join us.\"\n\n\"Stop, Trixie. You sound like a child. Clara is not a toy. She will help at the store for now. That's all.\"\n\nTrixie kissed me on the forehead and squeezed me hard in her arms. I turned beet red and stopped breathing. Even my parents never kissed me... not that I recalled at least. Was it the first time someone kissed me? It seemed so natural for Trixie to do that, and Lucy didn't even react either. Was it normal that I reacted anxiously?\n\nIt was all involuntary, but those people were providing me with a continuous stream of new experiences. I was so lucky to have such wonderful friends.\n\n\"So, Clara. Can I sleep at your place again tonight? I really enjoyed it last time.\"\n\n\"...\"\n\nI paused for a moment after Trixie's request, remembering my lavender incident with Asha. I was not sure Lucy would allow me to bring another pet girl home tonight... I looked at Lucy, trying to figure out if she had something to say about me borrowing the white rabbit again.\n\n\"Don't look at me, Clara... it's between the two of you. I'm not her mother.\"\n\n\"... Okay... Yes... I would like Trixie to come home tonight.\"\n\nWow, that went well. I got to bring a pet to my place again.\n\nTrixie helped Lucy clean the suit while I was dressing back up in my street clothes. As soon as I finished, Trixie hugged Lucy and thanked her for the evening.\n\n\"Thanks for the cake and the rabbit. It was super fun! We should do it again soon.\"\n\n\"Maybe. Have a good night, Trixie! See you in two days.\"\n\n\"Aww! Two days? Can I start earlier this week?\"\n\n\"No. Now go. Clara is waiting for you.\"\n\n\"Fine, fine! Let's go, Clara!\"\n\nTrixie grabbed my hand and pulled me out of the room. We were going home. But one thing I didn't expect at all was that she was NOT going to wear her rabbit suit tonight. Maybe I was a bit slow, but I had not understood that part. Apparently, I was going to share my bed with a real person and not a rubber animal tonight.",
        "I wasn't certain what I was feeling about this, but it was surely better than going to a random client's place while being helpless. My fingers gripped her hand a bit tighter, Trixie turned to look back at me, closed her eyes, and smiled.\n\nShe was so happy!"
    ],
    "authorname": "Tigerstretch",
    "tags": [
        "cafe",
        "latex",
        "petgirl",
        "rubber",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/animal-cafe-ch-07"
}