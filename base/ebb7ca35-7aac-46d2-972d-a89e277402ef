{
    "title": "The Headmaster's Office 03: Ingenious Toys",
    "pages": [
        "<center>Author's Note</center>\n\nAll characters appearing in this work are over the age of 18 and are fictitious. Any resemblance to real persons, living or dead, is purely coincidental.\n\n<center>Foreword</center>\n\nIf you haven't already read The Headmaster's Office and Fantasy Night, now might be a good time to do so. It provides the back story for Belinda, Mr Gallows and Rupali; much of which is assumed in this story.\n\n<center>~~~</center>\n\n\n\nLast week was the final hot week of an Indian summer that stretched all the way into April. The still, humid air made the school week hell, especially in the un-air-conditioned classrooms of the old wing. You go to a posh private boarding school and you'd think the expensive fees would stretch at least as far as air conditioning, but Mr Gallows (headmaster and ... secret boyfriend?) has been trying to get the Trustees to fund a refurbishment of the old wing for years.\n\nBy the time the weekend came, Rupali (roommate and ... secret girlfriend?) and I had had enough. We got day passes from the Boarding House Mistress for Saturday and planned to head to Bondi to cool down and let off some steam. But first we needed to go shopping; I hadn't been to the beach all summer and my only bikini pre-dates the miraculous and belated maturing of my breasts over the Christmas break. The old 6AA bikini top would now barely cover my nipples and my generous new 8C rack would spill out the sides. I suppose it would probably fit right in at Bondi, but it's just not my look.\n\nThe shopping trip was a perfect opportunity to test-drive Ike and Mike: an invention of Mr Gallows. Before I can describe Ike and Mike, I need to rewind and explain Earnest and my discovery of Mr Gallows ingenious mad-inventor streak.\n\n<center>~~~</center>\n\nIf you read my earlier stories, you will remember that I masterminded the fulfilment of Mr Gallows' and Rupali's sexual fantasies. Rupali still doesn't know the owner of the nine inch cock that brought her to her first orgasm with a man ... and I'm going to keep it that way! Those two are way too compatible and I want to keep them both to myself. \n\nOn the same occasion I discovered \u2013 and fulfilled - my own desire for Rupali and we have been lovers and roommates ever since. Strangely, I don't think of our relationship as lesbian or bi-sexual. We use tongues and strap-on dildos to do to each other the same things men would do, only better in many ways because we know what girls like. In almost every way it seems to me that sex with Rupali is completely hetero-sexual.\n\nThe night after that adventure I was alone in our room with a vibrator that I had liberated from the dorm toy box and was disgusted to find that the batteries had died and hadn't been replaced. There's a code of honour covering batteries: 'She who dries em, buys em'. I didn't have spares and was about to march back out to the toy box to pilfer replacements when a text came through from Mr Gallows:\n\n\"Owe you a gift for last night. Any requests? In teachers' lounge if you are free.\"\n\nSuper! Who needs a vibrator when there's nine inches of real cock downstairs? Not missing an opportunity for a gift, I rifled through the toy box and pulled out 3 more dead vibrators; Mr Grateful could buy me batteries! Not even bothering to put panties on, I ran downstairs in my nightie and burst into the teachers' lounge. He was standing, so I vaulted from the coffee table into his arms, my own arms and legs locking around his slim, powerful body and planted a long, hungry kiss on his lips while I ground my naked pussy into his six-pack stomach. He was a bit surprised to see me so ready; if his text had come 10 minutes earlier or later then I might have been a little less desperate. He returned my kiss and then prised me loose, lowering my feet gently to the floor.\n\n\"What's in your hand?\" he asked, looking at the vibes. \"Mine not enough for you anymore?\"\n\n\"Yours is plenty ... when it's around,\" I pouted. \"When it's not I have these, but I need batteries. That can be your payment for fantasies fulfilled.\"\n\n\"Well, I was kind of hoping to pay in services rendered. But if you want batteries more than this,\" he said with a touch of sarcasm, rubbing a growing bulge in his trousers, \"then I am your humble servant.\"\n\n\"Don't be a dick. I want your dick and I want your batteries,\" I shot back, smiling. \"Unless you think a balls-deep sex-with-a-stranger fantasy three-way isn't worth it?\"\n\n\"Touch\u00e9,\" he conceded. \"What do we have there?\"\n\nI handed over the four dead vibes. Three of them took normal AAA batteries so no problem there. The last one was Earnest, which I grabbed on a whim. Earnest is an ancient gold vibrator that we give to new girls \u2013 mostly virgins \u2013 who have never used a toy. He is only as thick as a lipstick and takes three little watch batteries. Mr Gallows put the others aside, seemingly uninterested, but was studying Earnest with a curious expression.\n\n\"Where did you get this one?\" he asked.\n\n\"Who knows? It's been in the boarding house longer than I've been alive. It was probably bequeathed by one of those tight old bitches on your Board of Trustees when she was a boarder,\" I joked.\n\nHe smiled briefly and then shuddered at a mental image that I'm glad is in his head and not mine.\n\n\"It's just ... very strange ...,\" he trailed off. He rummaged through a drawer and pulled out a small screw-driver. Removing the screw at the base of the battery compartment, he slid the innards out of the barrel and started mentally cataloguing the parts. \"There's no motor in here,\" he said \u2013 hopefully to himself because I have no idea about mechanical gizmos. \"But this thing looks like a tiny ... Van de Graaff generator? Are you sure this is a vibrator?\"\n\n\"Search me. It's a dildo as far as I'm concerned. It's never worked because we've never had batteries. That's where you come in,\" I hinted.\n\n\"May I take it for a few days?\" he asked. \"I want to do some more research.\"\n\n\"Sure, knock yourself out.\" I was getting impatient and sat on the coffee table to unbuckle his trousers. He was still staring at it and turning it over in his hands when I took him into my mouth; but I got his attention soon enough.\n\n<center>~~~</center>\n\nWe met again after lights-out the following week and he presented me with Earnest 2.0. Now there was a thin black wire plugged into the base with a little vinyl and velcro loop at the other end, and Mr Gallows was wearing a big goofy grin as he held it out to me.\n\n\"You've given it a ... carry-handle?\" I asked, feeling and sounding a bit underwhelmed.\n\n\"It's not a carry-handle,\" he sounded hurt. \"It's a pressure-sensitive remote control.\"\n\n\"Huh? Translation?\" I asked, one eyebrow raised.\n\n\"It's the cuff from an infant sphygmomanometer and ...,\" he started. My eyebrow hadn't moved. He got the message and started dumbing it down. \"It's the cuff from a blood-pressure machine for babies. It's sensitive to pressure and it can be used to send signals down the wire ... like a remote control.\"\n\n\"Soooo,\" I began slowly, thinking it through, \"if I had a baby I could get it to remotely control my vibrator?\"\n\n\"The cuff doesn't go on a baby's arm, it goes on me.\"\n\n\"But it's too little for you ... Ohhhhh!\" I brightened, suddenly catching up. \"It doesn't go on your arm!\"\n\n\"Very astute,\" he mocked gently.\n\n\"But I still don't get it. If the cuff goes on you ... and you go in me ... where does Earnest go?\"\n\nHe didn't answer, but looked at me waiting to see if I would work it out. Then the light-bulb went on in my head and I turned on him with feral light in my eyes. \"Not on your life! My puckered little back door is strictly one way, buddy.\" I sounded angry, but there was that little tingle of curiosity as well. A cock deep in my pussy and a vibrator buzzing in my asshole ... what would that feel like? I didn't think I could feel fuller than when his long, hard shaft was buried deep in my vagina, but with a vibrator next door ... it had possibilities. He kept silent, probably watching a bunch of different emotions wash across my face.\n\n\"But why a remote control,\" I said finally. \"Wouldn't you just leave it running to vibrate while you fuck?\"\n\n\"It's not a vibrator,\" he said cryptically.\n\n\"Then what the fuck is it? A stick-blender?\"\n\n\"Do you want to keep asking questions, or do you want to try it out?\" he asked. He reckoned he had me hooked and the big goofy grin was back.\n\n\"Will I like it?\" I asked.\n\n\"Yes,\" he said unequivocally. I was a bit worried; but now I was lot interested.\n\nI was in. I came over to him and started running my hands over the muscles of his chest. \"OK Edison, so what do we do?\"\n\n\"Well, I need to be hard first ...,\" he offered.\n\nI slid my hands down over his pecs, his hard stomach, and then on to the growing bulge in his pants. I followed its length through his trousers back to the root and massaged it there with my fingertips. It pulsed and throbbed under my touch; already wood and forging quickly towards iron.\n\nI was wearing my short satin nightie without panties or bra and he put Earnest on the coffee table so that he could explore my body through the slippery, sheer fabric. He stroked the undersides of my breasts, gently applying pressure and feeling their weight; his fingertips moving in circles and working their way up to my nipples.\n\nI loosened his trousers and dropped them around his ankles. His cock was at its full nine inches and tucked down the tight leg of his lycra trunks. I closed my hand around the shaft through the fabric and as I gave him a firm squeeze, his cock strained back against my grip, bulging and resisting the pressure just like it does inside me. I could feel my heart speed up with excitement and anticipation. I always got nervous and fluttery when I felt his cock; he was so big and I could feel my pussy clenching with anticipation as if it knew it was too small to tame this throbbing tool. I reached into is trunks, grabbed a handful at the base and stroked back towards me, his skin flowing like quicksilver over the hard flesh underneath. Wanking his giant shaft up and down with one hand, I dropped his trunks with the other and he kicked them away along with his pants.\n\nHe had been pinching and rubbing my nipples to hardness and had them firing off little sparks of pleasure through my breasts, but then he relented for a moment to remove his shirt. He was now completely naked (if you don't count my hand stroking his throbbing cock) and I was still in my nightie; he hadn't tried to remove it yet because I think he likes the mystery of reaching underneath to feel my wetness with his fingers before he can see it with his eyes. I never let him down either; holding and feeling his massive length gets me soaking wet and steaming hot, anticipating the spasms and contractions as I stretch my tiny pussy around his girth. \n\nI also think he likes to cheat himself, stealing peeks at my pussy under the nightie, trying to see whether my inner folds have opened up yet. Usually I stay wet but closed and then open up like a flower at his first touch. If I'm watching his cock I always see it pulse when he watches my pussy open, knowing that it was his touch that made it happen. But if he peeks under my dress and sees my glistening lips wide open and inviting him in, his cock leaps and bucks like a wild animal, as if it knows it's been wasting time when it should have been inside my tight, wet embrace.\n\nGiving him a show, I stood up on the sofa and \u2013 holding the back for balance \u2013 I spread my legs and slowly bent over, back arched so that my bottom stuck out further, until the hem of my nightie was right at the level of my pussy. I was looking over my shoulder to watch him; he wasn't peeking, he was openly staring at the tips of my outer labia visible under the hem of the nightie. He couldn't yet see how ready I was \u2013 and I was! My pussy was gaping wide open and casting out heat like an open furnace door. Watching him closely, I bent lower, raising my bottom just a bit higher. As my steaming entrance moved into his field of view, his cock throbbed and the knob turned an angry purple and doubled in size. I've seen it before, but it always surprises me and I think he is going to cum even though he never does; not until he is deep inside me, at least.\n\nHe moved towards me and I hoped he would slide that beautiful shaft into my steaming canal; but instead he knelt down and bought his lips to my entrance. He kissed my labia with an open mouth, using the lightest contact to transfer moisture to his lips where he could taste me without using his tongue directly. I wanted him to go fast and hard but he kept titillating me with his lips, slowly increasing the intensity and sucking my inner folds into his mouth. Still he hadn't used his tongue or touched my clitoris and I was dying for him to do both, moaning with desire and frustration and pushing back against his face.\n\nWith a final deep, searching kiss of my pussy he broke contact; but before I could complain he slithered between my legs and sat on the couch with me standing over him. He pulled my nightie over my head and dropped it on the floor. Now I was completely naked, standing over his giant erection, breasts heaving with excitement and bobbing just a few inches from his face. For a moment I thought he was going to shift focus to them and I briefly flirted with the idea of unlocking my knees and impaling myself on his shaft before he had the chance to stop me. Instead he closed his giant hands around my hips and buttocks and lifted me off my feet. I let out a little shriek of fright, thinking I was going to topple over, but he held me so powerfully and firmly that I only needed to keep my hands on the back of the couch to balance my upper body.\n\nHe brought me to his mouth with both hands like he was drinking from a sacred chalice. I opened my thighs to him and extended my legs over his shoulders, now holding his head for balance and leaning back to open up my centre to his lips and tongue. He kissed and sucked at my labia like before, this time drawing my clitoris into his mouth and applying deep suction. He released the suction and brought his tongue to the bottom-most point of my vagina right near the anus. He tickled the sensitive skin there, making me squirm; I wanted to push harder into his face but held in the air as I was, I had nothing to brace against. Then with one long lick he ran his tongue up my slit, pressing deeper as he reached my entrance before continuing up to my clit, circling it a few times then sucking it between his lips and flicking it hard with the tip of his tongue. \n\nMoving his tongue back to my entrance he pushed it deep inside my vagina, flicking and licking, tasting and teasing, all the while rubbing my clitoris with the tip of his nose. I crossed my ankles behind his head and dragged him deeper, crushing his face into my pussy, my moans of pleasure joining to a single, extended ululation. He must have run out of breath because he withdrew his tongue and pushed me firmly away from his mouth. Would it be unfair to ask him to get a tracheotomy so he could breathe through a hole in his neck while I came on his face? I don't think that's too much to ask.\n\nHe lowered me back down and I unfolded my legs from behind him so I could kneel on the couch, straddling him with the base of his erection pressing against my aching slit. I pumped my hips, sliding my soaking lips along his cock and lubricating his length with my juices. He reached behind me to collect Earnest the gold not-a-vibrator with its umbilical sphygmomanometer pressure-cuff. This bit looked like fun: I took the little pressure cuff and slipped it over the head of his penis, sliding it all the way to the bottom, not missing the opportunity to stroke and squeeze along the way, feeling it flex and throb involuntarily under my touch. He took over and tightened the velco fastener \u2013 tighter than I would have \u2013 so that his cock bulged around it, the veins now standing out clearly. It only covered the bottom two inches of his cock, but those two inches don't fit in my pussy anyway so I guessed I wouldn't miss them.\n\nHe followed the wire to Earnest's narrow shaft and held it in front of me, silently asking for permission to insert it in my virgin asshole.\n\nNow that the moment of truth had arrived I was having misgivings. I could feel nervous tremors in my thighs and tummy; I didn't know what was going to happen and I was frightened.\n\n\"What does it do?\" I had to know.\n\n\"Sure you want to know?\" he asked.\n\nI nodded. I could feel tears welling in my eyes now and blinked them back.\n\n\"What you gave me was an electrical anal stimulator; a zapper,\" he said.\n\n\"What the fuck?\" I blurted. \"What kind of perv would zap their asshole?\"\n\n\"Mostly gay men,\" he laughed. \"But I modified it. I've dropped the voltage and made it release a series of micro shocks rather than one big one.\"\n\n\"Will it hurt?\" Please say no please say no please say no.\n\n\"Not really,\" he said, \"it just makes all of the local muscles contract until the pulse ends. It's a bit like flexing yourself, but stronger and involuntary.\" I still looked confused. \"Have you seen those gadgets on late night TV ads,\" he tried, \"where you attach electrodes to your stomach and then sit back and relax while it flexes your abs until your flab turns into a six-pack?\" I nodded. \"Same idea, except this one works.\"\n\n\"What? I stick it up my ass and I get washboard abs?\" Now I was even more interested.\n\n\"No. It will constrict your muscles, but it won't give you washboard abs. That takes real work.\" He smiled at me, hoping the Q&amp;A was over.\n\nI looked at him menacingly \u2013 or at least as menacingly as a 40kg, 4'11\" and three-quarter naked schoolgirl can possibly look \u2013 and threatened \"If this hurts, I'll ram it up your ass and rip out the cord.\"\n\n\"Deal,\" he said, then held his cock steady. \"Hop on.\"\n\nIt was so long I had to shuffle backwards just to get the tip into my vagina. I seated his knob in my entrance, took a deep breath and then slid forward, impaling myself on the first five inches of his dick. I normally go much slower, but I was so hot and so wet that I couldn't wait. There was an explosion of exquisite pain as my vagina stretched wide to envelop the unyielding hardness of his erection, my muscles spasming in an impossible effort to eject this massive incursion into my tiny hole. I held my ground until the contractions subsided and then experimentally pumped my hips to make sure my vagina would release him enough to slide in and out of my tunnel. My juices were dribbling down his shaft, lubricating the remainder of his cock so I started pumping deeper, taking in more, bit by bit stretching my pussy until finally I was pressed up against the pressure cuff.\n\nNow fully impaled, I could kneel over him again, so I moved in close and rubbed my breasts against his hard chest. My mouth found his and we kissed deeply, our tongues locked together in mortal combat as our lips ground hungrily against each other. \n\nHe broke off first and whispered breathlessly in my ear: \"Ready?\"\n\nI nodded, not game to speak in case he heard the fear in my voice. He dribbled saliva onto his fingers and coated Earnest's shaft. Then with the remaining saliva, he reached behind me and lubricated around the edge of my anus. With his giant cock filling my pussy, the feel of fingers exploring at the entrance of my ass was ticklish but really erotic. I was surprised at how much it was turning me on and was clenching with anticipation.\n\n\"Try to relax your muscles,\" he whispered. Shutting my eyes, I drew a deep breath and let it out slowly, imagining I was blowing out all of the tightness, relaxing my stomach, my vagina, my thighs and finally my anus. His probing fingers felt the change and he pressed more insistently until one fingertip slid tightly into my back door. I clenched down on it involuntarily, but he held it there until I relaxed and then worked it in and out with short movements, lubricating and desensitising me to the foreign touch.",
        "With his other hand he brought Earnest around and in one smooth movement he slid his finger out and Earnest in. Earnest was a bit thicker than his finger but my anus quickly stretched to accommodate. Mr Gallows kept working it in and out, deeper and deeper until it was all the way in; now with seven inches of cock in my pussy and five inches of Earnest in my no-longer-virgin asshole, I felt as though someone had slipped a balloon into me and blown it up. I was chockers! I tried experimenting with a contraction; squeezing my pelvic floor and anus together. The feeling was intense; the pressing feel of fullness became explosive and I felt the flutter of orgasmic contractions begin in my thighs. Releasing my hold I puffed out some quick breaths, fanning my breasts with my hands trying to chase the orgasm away. I opened my eyes and saw Mr Gallows biting his lip and taking shallow breaths, trying to forestall his own climax. I relaxed and didn't move a muscle, waiting for him to regain control and praying he wouldn't come.\n\n\"Ready?\" I asked. \n\nHe nodded and reached behind me again. I felt pressure against my anus and heard the click as he flicked the switch on.\n\n\"I don't feel anything,\" I said.\n\n\"It's pressure sensitive; it doesn't go off until I flex my dick,\" he explained.\n\nI wrapped my arms around his neck and pressed my lips up to his ear. \"So what are you waiting for?\" I breathed.\n\nThat was all he needed. For a moment I felt his cock bulge inside me, and then an explosion of pure ecstasy as my loins, pelvic floor, abdominals and asshole clamped down in a vice-like grip, squeezing both shafts like a boa constrictor. It was a fucking remote control orgasm. One moment I was hot and wet but in control; the next I was coming like runaway train. My breath blasted out of me in a high-pitched squeal, right next to his ear. He jumped in fright and tried to pull out of me but I was clamped down so tight he couldn't lift me off. He released the flex of his penis and the orgasmic sensation disappeared as quickly as it arrived.\n\nI dug my nails into his shoulders. \"More!\" I yelled, shaking him. \"Do it again!\"\n\nJust for a moment I felt his dick throb and then the orgasm smashed into me again, delivering crushing pressure around his cock. I was out of control; I screamed, back arching and hips thrashing into his stomach. I writhed and ground against him, twisting and pulling and trying to move his cock against the crushing friction I was delivering. The orgasm ripped through me in waves, each one more powerful than the last. I was gasping for breath, tears streaming down my face when the most powerful wave hit me, bucking my hips as the dam burst and I ejaculated all over his cock and balls.\n\nHe dug his fingers into my buttocks, straining with the effort to hold the flex of his cock. He grunted as it became too much to hold and my muscles released him when he finally lost the battle. I was floating down from my orgasm, rotating my hips, using his cock to stir my juices deep inside. The friction of this last movement finished him. He thrust his hips and pumped his cock, my muscles clamping down again as his balls tried to pump cum through the constricting grip of my pussy. It increased the pressure of his ejaculation and I felt cum jetting into me, threatening to blast me off his shaft like a bottle rocket. With each pump, my pussy released him and then constricted down again tighter than before, each contraction squirting his cum back out my entrance and washing over his balls to pool with my own juices. \n\nWhen he was spent and my muscles had released him, I reached back and pulled Earnest out of my ass then fell forwards on his chest, exhausted.\n\n\"You created an instant orgasm machine,\" I marvelled. Did you know it would do that?\"\n\n\"If I'm truthful,\" he panted, \"it worked a little better than I planned.\"\n\n\"How did you know how to make it? Are you some kind of closet nutty professor?\"\n\n\"With degrees in Electrical and Mechanical Engineering and an insatiable eighteen year old sex goddess lover, it would be weird if I didn't build sex toys, don't you think?\"\n\nI felt a little pride at the sex-goddess reference. \"Eighteen? I skipped Grade 3; I'm sixteen,\" I said. He jumped like a dog bit him on the ass. \"Relax. I'm fucking with you,\" I laughed. \"I was eighteen long before you defiled me.\" He breathed a sigh of relief. \n\n\"I didn't know you were an engineer,\" I said seriously. \"Why did you become a teacher?\"\n\n\"I didn't like serious engineering; I just like tinkering with gadgets,\" he explained. \"Small appliances have the most ingenious little parts that can be combined in ways the manufacturer never dreamed of.\"\n\n\"You've got more ideas?\" I asked\n\n\"A couple. Why?\"\n\nMy eyes lit up. \"Make me something! A surprise! Call it payment for the three-way stranger fantasy.\"\n\n\"I thought this was payment for the three-way stranger fantasy.\"\n\n\"Don't be stupid. You'll be paying that off for the rest of your life.\"\n\n\"God, I hope so,\" he smiled.\n\n<center>~~~</center>\n\nAnd that brings us to Ike and Mike. A few weeks after the episode with Earnest 2.0, I was just about to sneak back into the senior girls' dorm after sex with Mr Gallows when he stopped me.\n\n\"I have a present for you,\" he smiled, holding out a wooden box about the size of a book.\n\n\"Oooh, goody. Is it like your last present?\"\n\n\"Different,\" he said, as if that answered my question. \"Open it.\"\n\nI opened the box. Inside, nestled in red velvet were two flesh coloured sex toys. One was about six inches long and an inch in diameter; the other one was four inches long and a bit narrower. In every other respect they were identical. The business end was bullet-nosed and the widest point in the shaft. From there is tapered gradually to a narrow waist at the base and finished with a saddle shape that looked like it would fit snugly against the vagina entrance. I recognised them as vaginal plugs \u2013 you slip them in, put your clothes back on and then go about your business. I could see a touch-sensitive button on the base, so these were probably vibrating plugs.\n\n\"Why two?\" I asked.\n\n\"Unless I'm mistaken, you and your roommate seem to share more than just a room,\" he replied, smiling at the recollection of Rupali blindfolded and tonguing my pussy while he fucked her doggy-style to her first orgasm with a man. \n\nHmmm. Hers-and-hers vaginal plugs, we could wear them at school \u2013 might make it harder to concentrate on the teacher, but I was game if Rupali was. \n\nI picked up the little one \u2013 presumably mine \u2013 and studied it; it looked completely normal. I looked up at him. \"So what did you do to them?\" I was almost afraid to ask.\n\n\"Switch it on.\" He was teasing me, drawing out the discovery.\n\nI touched the switch and it buzzed in my hand \u2013 almost completely silent \u2013 then tapered off. Five seconds later it gave another small buzz; obviously this was a low setting. I touched the button again and the vibration was a little stronger; but then it died away to almost nothing before building back up. Medium, I guessed. I was expecting a high setting next and I wasn't disappointed. I touched the button again and the vibrations went through my hand and buzzed all the way up to my elbow. I almost dropped it in surprise. It was powerful, but no more so than some of the new vibrators in the dorm toy box. It was much quieter though, as a plug should be if you take it out in public; they were obviously top quality and probably very expensive. I tapped it again and it switched off.\n\nI looked back up at Mr Gallows, he was smiling cryptically. I must have missed something because I couldn't see any modifications at all. \"Feels like a normal vibe,\" I said. \"It's a nice one; don't get me wrong \u2013 I'm very grateful. Did you modify it?\"\n\n\"Maybe it's broken, try the other one.\" He moved his hand over his mouth in a vain attempt to hide a big grin. He was fucking with me and I knew it.\n\nI was wary. \"Is the other one the same? It's not going to electric shock me or anything?\"\n\n\"Exactly the same,\" he said, emphasising the first word.\n\nI picked up the larger one and touched the switch. \"Holy crap!\" I squeaked in surprise as BOTH of them started on low setting in my hand. I thought I must have touched both buttons accidentally; I swapped the small one to my left hand and touched the button on the larger one. Both of them changed up to medium. My eyes boggled, I couldn't believe it. I touched the button on the small one this time and both flipped to high; another touch and they both switched off.\n\n\"Jesus Christ!\" I stared at him in amazement. \"Psychic vibrators!\"\n\nHe cracked up laughing. \"Not actually psychic, just linked by RF transmitters.\"\n\n\"Huh?\"\n\n\"You know those luggage tags you use at the airport and if anyone tries to make off with your bag then an alarm goes off on your key ring?\" he asked. I nodded. \"I wired in the chips from two of them so that when you trigger #1 it also sends out a signal to trigger #2 and vice versa.\"\n\n\"Incredible,\" I marvelled, still cycling through the settings and feeling both change in my hands. I held them at arm's length and they still worked. \"How close do they need to be?\"\n\n\"Operating range is about three metres,\" he said.\n\nI gave him the small one and walked across the room with the big one. Suddenly it came on in my hand. \"Did you do that?\"\n\n\"No, it's a glitch,\" he explained. \"Because I used the anti-theft luggage tags, when they get separated they both send out a radio blast and switch each other to the next setting.\"\n\nI cycled mine back to off. \"Is yours still running?\"\n\n\"Yep, they're out of range now so they act independently.\"\n\nI walked back over and took the toy from him; it was still on low. I touched it three times to switch it off and mine cycled up to high. \"Now what do I do?\"\n\n\"I managed to solve that one,\" he said. \"The luggage tags had an override off-switch and so did the vibrators so I wired them together. Just touch and hold for three seconds and it switches both off.\" I tried it and it switched off without starting the other one again.\n\nI stood up on tip-toes to kiss him but I was still over a foot away, so he leaned down to me and I wrapped my arms around his neck, kissing and squeezing him. \"Thank you. They're amazing. You're amazing.\"\n\n\"You're welcome. I look forward to hearing about how they go,\" he smiled.\n\n<center>~~~</center>\n\nI showed them to Rupali the following day, she was really excited and christened them Ike and Mike (Ike and Mike, they look \u2013 and think! \u2013 alike).\n\n\"The big one is 'Mike', because 'Mike' is 33% longer then 'Ike',\" she reasoned.\n\nWe tried them out that night, lying in our own beds and unable to sleep from the excitement of having the plugs in our pussies; every few minutes one of us would touch the button to set both buzzing lightly and we'd peel off into giggles for a little while until one of us held down the button to switch them off. Good night, Rupali; good night, Belinda; and a few minutes later it would happen all over again. I was getting pretty wet and hot, squirming my thighs together to rub the saddle against my clitoris; I was going to have to come otherwise I'd never get to sleep. \n\nI touched the button at exactly the same time Rupali touched hers and they both switched straight to medium, buzzing up to a strong vibration and then dying away almost to nothing. We both yelped with surprise, then realised what we'd done and began giggling again. The sensation was much more intense on medium, but I was so horny I wasn't going to switch it off. My giggles died away and turned into moans of pleasure and sexual frustration; I could hear similar sounds coming from the other bed. I wanted to reach down and grab the plug to fuck myself with it, but it's not made for that; it sits flush against the vagina and almost any touch will set off the button. I had to satisfy myself with squirming and squeezing my thighs together.\n\nI heard the covers move on Rupali's bed and the whisper of satin as her nightie slipped down her body to the floor. Then she was in bed beside me, peeling off my nightie, kissing me and pressing her naked body into mine. I returned her kiss hungrily, my tongue probing forward and finding hers, they locked together in mutual desperation and need. I wrapped my arms around her long, lean body, kneading her bottom and grinding our hips and breasts together in time with the cycle of pleasure the plugs simultaneously delivered to our pussies.\n\nRupali reached a long arm behind my bottom and I felt her fingers probing between my upper thighs. I opened my legs a little to give her access and quick as a snake her fingers darted in and touched the button on Ike, sending both plugs into a frenzy of buzzing, drawing simultaneous shrieks of pleasure. My thighs crashed back together as the muscles contracted and I felt the orgasm building inside me. Rupali was close as well; she bucked her hips into mine and squeezed my backside with her long, strong fingers; the nails trimmed mercifully short for netball. My entire world contracted down to a single point four inches inside my pussy where the relentlessly buzzing Ike delivered his unforgiving brand of ecstasy. For a moment that single point winked out of existence as my mind and body overloaded with the intensity, then the orgasm exploded outwards, a mushroom cloud of pleasure flowing through my pussy, my thighs, my stomach, breasts, and outwards down my arms and legs. Rupali was coming too, our muscles straining as we locked our bodies together, grinding, writhing and squeezing and trying not to scream.\n\nAs the orgasm floated away, the buzzing in my pussy became too intense and I softened against Rupali. She was still coming in spasms so I just opened my legs to relieve the pressure and waited for her. When her contractions finally weakened; I kissed her beautiful mouth, tasting the sweat standing out on her lips as she gradually regained control and reached down to deactivate Mike, switching Ike off at the same time. She kissed me back softly and ran her hands slowly over my breasts and bottom in silent thanks for the shared experience. We lay together for a while, relishing each other's warmth and the scent of our combined sex. Finally I reached down and pinched Mike front and back between my thumb and forefinger, taking care not to touch either his button or Rupali's, and pulled him reluctantly from her pussy. I did the same with Ike, slipped back into my nightie and then went to the communal bathroom to wash them. Rupali was asleep in my bed when I got back \u2013 I swear she's part male \u2013 so I spooned in next to her was asleep myself in a few minutes.\n\n<center>~~~</center>\n\nThat was last weekend. The school week that followed was so hot and humid I didn't have sex with Mr Gallows or Rupali; Ike and Mike just stayed in their box. By the time Saturday finally came I was incredibly randy so I suggested to Rupali that we take Ike and Mike shopping before we went to the beach. She agreed pretty quickly, probably feeling some sexual frustration of her own.\n\nRupali wore a high-cut hot pink bikini that showed off her long legs all the way up to her hips. The light colour captured every shadow and accentuated every curve of her full breasts, firm bottom and the mound of her mons pubis. Over the top she expertly wrapped a beautiful yellow silk sarong into a long, slinky dress; it contrasted exotically with her glossy, long black hair and coffee and cream skin. \n\nShe wore all of this over the top of Mike, meaning she would have to hike up the sarong and shove her hand down her bikini to switch him on. Or off! \n\nWhat a beginner; she would be at my mercy. Since I wouldn't have a bikini until we got to the shopping mall, I wore a nude bra, a loose, knee-length white calico beach dress and no panties. I would only need a moment to snake a hand under and set Ike going ... and Mike.\n\nWe set off arm in arm and got to the mall at 9am - right as it opened - and we were the first customers in the nail salon. Rupali had two weeks off netball \u2013 one on rotation and one bye \u2013 so she decided this was going to be her last opportunity to have long, sexy nails all year. Ten nail extensions for her and a French manicure for me. I was careful to get adjacent chairs; it was my plan to make her forget Mike \u2013 as much as you can forget a six inch plug in your pussy \u2013 and get her when she least expected it.\n\nRupali's nails were still drying when I was all done \u2013 this was my big chance. I leaned over and kissed her on the cheek. \"I'll be in the surf shop, babe. Give me a buzz when you're done.\" \n\n\"I won't be long,\" she said kissing me back. \"See you in 10.\"\n\nI turned on my heel and swept out in a swish of white cotton, hiding the mischievous grin on my face. Just as I got to the door, Ike gave a little buzz in my pussy and I heard Rupali gasp in surprise behind me.\n\n\"You'll pay for this, Belinda,\" she yelled after me.\n\nI stole a quick look over my shoulder. She had her knees pressed together and both hands powerless to do anything under the dryers. I thought she might be angry but her eyes were sparkling with merriment; the game was on. The light buzzing in my pussy was wonderful so I let it run for a few minutes as I made my way to the surf shop and found the bikinis. I moved behind a rack of t-shirts, quickly whipped up my dress and held Ike's button until he switched off.\n\nLooking back at the bikinis I was a bit underwhelmed; there were no Rip Curl or Billabong costumes, just cheap Chinese knock-offs. There was a Quiksilver store at the mall where I could get a nice Roxy bikini, but not for under $100; the manicure was unplanned so now I didn't have that kind of cash to spare. I sullenly flicked through the range looking for just about anything that would fit my size 6 bottom and 8C bust, but pickings were slim. I was sizing up the bottom half of the only 8C in the range and had just decided that it was too loose and would look like I had crapped myself, when a pair of long brown arms slipped around my waist from behind and a moist kiss landed on my earlobe. Uh oh, payback? One hand with long pink nails slithered up to cup a breast and my earlobe disappeared between her lips causing a tingle of excitement to rush through me. I gasped and placed my own hand over the one on my breast \u2013 I'm not sure whether I was trying to remove it, cover it from view or encourage it to do more. While I was distracted Rupali's other hand stole downwards and before I knew what she was up to it was under my dress and pressed into my pussy ... using Ike's button to switch Mike off.\n\nI turned around into her embrace, all hands moving to more appropriate locations for a public place.\n\n\"That didn't take long,\" I giggled.\n\nShe ignored me and breathed in my ear. \"Did you bring a strap-on? I need you in the dressing room. Now!\"\n\n\"What? No!\" I said, surprised at how horny she was. Then more softly: \"We're in public. Get a grip. I'm not fucking you in the dressing room. Save it 'til we get home.\"\n\nShe looked a bit hurt, but pulled herself together quickly. \"Have you bought anything yet? You're not getting that one are you? It'll look like a nappy on you.\"\n\n\"No,\" I said, disappointed. \"There's nothing here. I'll have to get a one-piece.\"\n\nWe looked though the one-piece costumes and Rupali dug out a misplaced powder-blue, string bikini ... 6C. $25. Perfect! I grabbed it and turned for the dressing room.\n\n\"Uh uh!\" Rupali said, stopping me. \"You're not leaving my side. I come too\"\n\nFair enough. I took her hand and we went in together. Rupali sat on the chair while I lifted my dress over my head and unclasped my bra. I tied the neck halter first; the ties were really dodgy, very elastic, coarse, ribbed fabric. I slipped the halter over my head and reached behind to tie the back. Looking in the mirror, my full, firm breasts \u2013 about the size of oranges \u2013 were mostly covered by the bikini top; they swelled out the sides a bit, but my nipples were well covered. I looked down in the mirror and saw Ike's head sitting flush at my shaved entrance. I considered taking him out to try on the bottom half, but he hardly changed my shape at all so I dismissed the idea.",
        "Rupali helped tie one side of the bottom while I tied the other side. I inspected myself in the mirror; it was a lot sexier than what I was used to, just three small blue triangles covering my breasts and pussy. Side-on I looked essentially naked except for the bow tied at my hip and the thin string over my rib cage. The fabric was tight and sensual, clinging to the curves of my breasts and my labia, which by-the-way were bulging a little wider to accommodate Ike's head.\n\n\"What do you think?\" I asked.\n\n\"Winner. Buy it and lets' go,\" she said.\n\n\"I'll have to take it off first, otherwise they'll have to pass my tits and twat over the scanner \u2013 it might set Ike off,\" I joked.\n\nI reached behind my neck and pulled the string on the halter; it stretched, started to undo and then got stuck. I tried the back instead: same. What the fuck? I pulled one of the bows on the bottom and I could see the problem: the stretchy ties were elastic on the inside and cheap stretchy fabric on the outside. They stretched and then as the coarse, ribbed fabric pulled through the knot, it bunched and got caught. Same thing on the other side \u2013 I was trapped in a trick bikini!\n\n\"Little help untying these?\" I asked.\n\nRupali wiggled her long false nails at me and smiled at my predicament. \"Can't sweetie, sorry.\" She leaped up and peeked out the door. \"I'll get help,\" she said.\n\n\"Stay in range, remember. I'm the one with button access.\" She closed the door but I could see her feet just under the partition.\n\nI heard her voice: \"Hi sweetie, show me your nails ... perfect. Come in here; my friend needs your help.\"\n\nThe door opened again and Rupali marched in with .... A GUY! I got a sudden attack of modesty and instinctively wrapped one arm around my breasts and the other in front of what now felt like my barely concealed pussy.\n\n\"Oh don't be such a drama queen, Belinda,\" she admonished. You were going to parade that tight little body up and down Bondi all afternoon. I don't think showing it off to one hot guy in a dressing room is going to damage your modesty.\" Rupali was horny and in a playful mood. Normally she wouldn't talk like this, but it looked like she was going to make me pay for my earlier stunt.\n\nOn second glance, she was right: this guy was hot; smoking hot. He was shorter than Rupali \u2013 about 5'9\" - had thick, sun-bleached brown hair, square jaw, cute dimples, a deep tan, and pale blue eyes that matched my bikini. He was wearing boardies and a surf singlet with deep arm holes and I could see the hard curves of the muscles on his broad chest and shoulders.\n\n\"This is Belinda. As sexy as she looks in this tiny bikini, all of us would much prefer to see her out of it. Don't you agree? But there's a problem.\" Rupali reached out and yanked the bow on my left hip. \"See?\"\n\n\"Rupali!\" I reflexively shot out the hand covering my breasts to the knot on my hip, which had mercifully jammed. I felt a flush of embarrassment rising on my face and my heart was beating faster.\n\n\"Now, introductions: Belinda, this is ...,\" Rupali began, and then reached out a hand to the shop assistant's chest, ostensibly to hold his nametag to the light with thumb and forefinger but the other three fingers didn't miss the opportunity to touch and linger on his chest. I also noticed that she was a very slow reader. She turned to me with a huge smile and flashing eyes. \"Belinda, this is Spike. Five letters and 25% bigger than 'Mike'. Spike, meet Belinda.\"\n\n\"Hi,\" said Spike. He was looking straight into my eyes; given the competition I was providing for viewing material, it showed a good deal of restraint. I actually found this really sexy and part of me perversely wanted to test him. \"What's the problem?\" he asked.\n\n\"Well, I ...,\" I began, before Rupali butted in.\n\n\"All of the knots are stuck and Belinda was hoping you could use those strong fingers to help her out of this bikini.\"\n\n\"Rupali!\"\n\nSpike smiled and looked heaven-ward. \"Lord, I swear I will never bitch about this shitty job ever again.\" \n\nIt broke the tension for me and I smiled back, moving my hands to my sides, no longer trying to hide my near-nakedness. I was getting a fluttery feeling thinking about standing helplessly in front him while he unknotted the bikini. \"Would you mind?\" I asked.\n\n\"No probs,\" he said. Then holding his hands up in front of me: \"May I?\"\n\nI turned around to face the mirror and presented my back to Spike, touching the knot on the halter. \"Here, try this one first. I don't think Rupali's yanked it yet.\"\n\nI watched him in the mirror stepping in behind me then felt his gentle touch on my neck as he took the knot between his fingers and started working on it. His eyes were on the job at hand, but my eyes were on him. He was about a head taller than me and his broad, brown shoulders were an arm wider than mine. I got a mental image of those Russian dolls where each doll fits perfectly inside a larger one; then my mind naturally turned to what it would feel like to spoon my little body into his.\n\nMy eyes flicked to Rupali. She had been watching me, watching him. She raised her eyebrows at me and smiled. \"Sweetie, I'm going to look at the beach dresses. Sing out if Spike gets grabby.\" Spike smiled but said nothing.\n\n\"Stay close,\" I reminded her.\n\n\"Of course, sweetie, they're right here,\" her voice came from just outside the dressing room. \"Ooooh, look at those ones over there.\"\n\n\"Rupali! Don't!\" I called out, but it was too late, Ike started up on low setting, buzzing sweetly deep inside my pussy. I looked up at Spike's reflection; he caught the movement and looked up too, smiling as our eyes met, his cheeks dimpling sexily. The depth of my predicament became clear: I was alone and almost naked with a hot guy trying to remove my bikini (at my request) while I steadily got hotter and hornier with a vibrator buzzing every five seconds in my pussy. And I didn't know what else Rupali had in store for me. I briefly considered asking Spike to stop and leave me, but his touch on the back of my neck was setting off little electric sparks of excitement and I couldn't bear for him to stop now.\n\n\"Sooooo ... off to Bondi, huh?\" Spike said, starting up a conversation\n\n\"Sure,\" I replied. \"If I can find something to wear.\"\n\n\"Mmmm, you're a challenging size to fit.\"\n\n\"Yeah, small,\" I said \u2013 story of my life.\n\n\"Hmmmm, yeah ... mostly,\" he said. So he had been checking me out! I felt my cheeks flush again \u2013 equal parts excitement and embarrassment.\n\n\"Good luck getting a park,\" he said, changing the subject away from my rack, which he was still dutifully trying to uncover.\n\n\"We'll be fine,\" I said. \"We're taking the bus.\"\n\n\"Ouch. It's supposed to get up to 38 degrees today.\" I couldn't agree more. I'm exactly arm-pit high against the average bus traveller; standing on a crowded bus in summer is not one of my favourite things.\n\n\"Think I've got this one,\" he said, pulling one cord of the halter strap through the knot. He held both ends free now but didn't let go, which would have caused the flimsy cups to flop down, exposing my breasts. I took the ends from him and held them up to maintain coverage while Spike started on the knot between my shoulder blades. It was a bit low for him to see comfortably so he pulled over the chair and sat down. \n\nI couldn't see his face now and as far as I knew he could be checking out my bottom. The thought sent a shiver through me and goose-bumps broke out on my skin.\n\n\"Cold?\" he asked?\n\n\"No, you just tickled me,\" I lied.\n\n\"Oh, sorry,\" he apologised and pulled the knot away from my back so that he wouldn't touch my skin.\n\n\"That's OK,\" I said. Then, as it seemed I needed to say something else to cover up the lie, I blurted \"Actually it felt nice.\" Holy crap, Belinda! Are you flirting with the hot guy trying to undress you? He didn't say anything but I felt his fingers return to my back, maybe touching a little more than they were before. Between Ike buzzing softly in my pussy and Spike's delicate touch on my back, I was getting really hot. I squeezed my thighs together and felt Ike vibrate more intensely at the change of pressure.\n\nSpike pulled the cord through the knot on my back. \"That's two,\" he said. \"Want me to keep going?\"\n\n\"Yes please,\" I sighed. God! That sounded sexier than I intended.\n\nHe looked around from behind me, holding up the loose ends of the bikini. \"Want me to let go of these?\"\n\n\"Just a sec.\" I cupped a hand over each breast, holding the blue triangles of the bikini in place. \"Go for it.\" He let go of the back straps and they fell away, just as the halter straps slithered over my shoulders and hung over my hands. Now I looked completely naked from the waist up except for four blue cords dangling from my hands.\n\nSpike took a shuddering breath; was I finally breaking his resolve? And was that a good thing? \"Uhhh,\" he said with a bit of a break in his voice that he covered with a cough. \"Could you turn side on, please?\"\n\nI turned to face one hip towards him just as Ruplai peeked in the door. \"Good, I see you've both still got your hands full,\" she joked. \"If you're going to be a bit longer I'll try on one of these dresses.\"\n\n\"What's it like?\" I asked. \"Show me.\"\n\nShe smiled mischievously at me. \"It's still on the rack. I'll go get it.\"\n\n\"NO! Rupali!\" I yelled at her, but she was relishing her revenge. Ike kicked up a gear, causing me to jump and I heard Rupali squawk as Mike must have done the same. Spike's hands were working at the knot on my hip just a few inches away from the exquisite buzzing in my pussy; I wonder if he could feel the vibrations through my hips?\n\nIke was cycling up and down every five seconds or so and as each cycle reached its peak I had to hold my breath to avoid voicing my desire. I wanted nothing more than to reach down and rub my burning clitoris \u2013 except maybe for Spike to rub it for me ... maybe with his tongue \u2013 but had to satisfy myself with slipping my thumbs underneath the fabric of the bikini top and squeezing my hard nipples.\n\nI could hear Rupali in the next dressing room humming to herself, or maybe trying to mask her own moaning. Mike was giving her the same treatment as Ike was delivering to me. I remembered that she was desperate for release when she walked into the shop; she was probably going to play this out until she came.\n\nSpike was just pulling the cord through to undo the knot on my hip when the door opened again. Rupali came in with a feverish look in her eyes \u2013 I could see she was getting close, so was I. She was wearing a white calico dress a bit longer than mine. \"How do I look, Spike?\" she asked breathlessly, giving the dress a twirl. \"Can you tell I'm not wearing panties?\"\n\nI could make out the lines of her brown skin beneath the dress and the hot pink of her bikini top, but the curvy lines of her hips were an unbroken shadow through the almost sheer fabric. She looked breathtaking. I think Spike agreed because he jumped in his chair and dropped the cords of my bikini bottom, the front and back of which fell away exposing my bottom and shaved mons pubis. It would have fallen away completely if I hadn't been clenching my thighs together. I squawked in surprise and immediately dropped one hand to cover my pussy while I swapped breasts with the other hand, covering the exposed one with the crook of my elbow and losing my grip on the bikini top altogether.\n\nI don't think Spike saw any of this; he was still looking up at Rupali with his mouth open, probably wondering whether any of this was real. Rupali made a disappointed face, \"Oh, it's a bit see-through, is it? I'll try a darker colour.\" She looked me in the eye meaningfully. \"I can see you're almost done there sweetie. I'm going back to the racks one more time, but then I'll be right next door, you'll probably hear me. You sing out when you're finished, OK?\" The double-entendre was clear: she would switch off Ike and Mike, but only after I had come.\n\nThere was no point negotiating with her. She wanted to come and she wanted me to come in front of Spike as payback for leaving her in the nail salon with Mike buzzing in her pussy. Part of me thought this was unfair, but another part really wanted to come with Spike's face just inches from my vagina. I nodded at Rupali in agreement. She nodded back towards my backside, \"Your bottom's showing, you know?\"\n\nMy hands were full: one covering my breasts and the other over my pussy, vainly trying to get the little triangle of fabric into its rightful place. Spike considerately reached a hand to either side and plucked the loose strings away from my thighs, bringing them back around to my hip and covering my bottom again. I gratefully removed the hand from my pussy, took the cords from him and turned around to present him with the last knot.\n\n\"You sure you don't want me to leave?\" he asked, a little reluctantly I thought.\n\nI looked at Rupali and she shook her head. I looked back at Spike. \"No, finish me, uh, it. Finish it, please,\" I said.\n\nRupali ducked out again and I as heard her footsteps move away, Ike kicked into high gear inside me. Somehow I managed not to let out a shriek as the fierce vibrations ripped through my centre. Spike's fingers were back on my other hip; how could he not feel this? I heard Rupali's running footsteps returning and the frantic slam of the dressing room next door and I jealously imagined her in there peeling off her dress and rubbing her nipples and clitoris as the orgasm mounted. I began pinching and squeezing a nipple with one hand and rearranged the other over my pussy so that I was still holding the bikini cords. Pretending to be modestly covering my pubic region in case the other side of the bikini fell away, I opened my thighs just enough to slip my middle finger between them and used it to press the furiously buzzing Ike into my clitoris.\n\nNext door I heard the low sounds of Rupali whimpering and the squeaking of the chair as she writhed quietly through the throws of her orgasm. Listening to her come and the effort of trying not to let Spike know what was going on was magnifying my own pleasure. I could feel all of the muscles bunching in my mid-section, building up to a climax. My arm tightened around my breasts and \u2013 slick with sweat \u2013 the one tucked into the crook of my elbow popped like a champagne cork. I could feel the orgasm coming, now only seconds away and I couldn't care less about the exposed breast. I glanced down and Spike was still looking dutifully at the knot ... and maybe my bottom. I could see he was loosening it and knew it was going to be close, I might finish before him, but I might not. I don't know why, but I wanted him there when I came, touching me.\n\nJust as I passed that critical moment \u2013 the one where you know the process of orgasm has begun, but you haven't yet reached the climax \u2013 Spike pulled the knot free. He held the cords together and stood up saying, \"Right, all d...\" and then stopped mid sentence, looking past my exposed breast and into my feverish eyes. I had stopped breathing altogether. I couldn't stand there almost naked with him watching me come, so in desperation I threw my arms around his chest and squeezed as the orgasm flooded through me. I felt his erection against my stomach \u2013 it seems he was only a gentleman with his eyes \u2013 his cock had its own ideas. I was coming and coming; trying to hold it all in made me feel like I would explode. Normally when I come it's a single explosion of pleasure followed by a glorious floating euphoria, but the intense vibrations from Ike and my inability to let myself go took me to the peak of the climax and held me there, unable to breathe, unable to move. I wanted to press my vagina into Spike's thigh, but if he hadn't already worked out what was going on then feeling Ike's pussy-shattering vibrations against his leg would certainly give the game away. Holding my groin away from him, the bikini bottom fell away and I was left completely naked, wrapped around his powerful torso, squeezing him as I climaxed. \n\nI just couldn't stop coming; trying to ride it out, I tucked my head in under his chin and pressed my cheek against his hard pectoral muscles. \"Hold me!\" I croaked and exchanged a shuddering breath as my lungs screamed for air. Spike tentatively put his arms around my nakedness, unsure of where to put his hands and settling for one on my shoulder and the other at my waist. I pulled even tighter against him; his erection throbbed and heaved against my stomach, sending my orgasm to fresh heights.\n\nFinally the climax started to subside and I just floated, relishing the feeling of Spike's hands against my bare skin, his chest against my naked breasts and his hard cock against my belly. I risked another breath and whispered, \"Tell Rupali we're done.\"\n\n\"Rupali,\" he called. \"We're finished. I think Belinda needs you.\"\n\nThere was no answer, but in a few seconds Ike finally fell silent inside my poor punished pussy and I loosened my hold on Spike as I regained complete control. He loosened his arms in response and made as if to let me go. \"Hold me a little longer,\" I whispered. I thought some kind of explanation was in order \u2013 as if any of this could possibly be explained. \"I just had a ... an anxiety attack ... I was feeling vulnerable ... just hold me until Rupali gets here.\"\n\nHe didn't say anything; he just held me close, moving one hand up from my shoulder to my hair, stroking it and resting his cheek against the top of my head. We stood that way for a minute or more before Rupali finally slipped through the door. My back was to her, but Spike must have given her a look. \"Sweetie, are you OK. Here, give her to me,\" she said with genuine care in her voice, inserting her body between the two of us. \"Thank you, Spike. We'll see you outside.\"\n\nSpike looked confused and mortified. \"I'm sorry ... I didn't ....\"\n\n\"I know. It's OK,\" soothed Rupali. \"I've got this.\"\n\nSpike left and then the tears came. The emotions and release and the sweet cuddle afterwards had all caught up with me. I pressed my face into her breasts, hitching sobs and staining the navy blue calico dress she had changed into. \"Shhhh. Shhhh,\" she soothed me. \"I'm sorry sweetie, I went too far, didn't I.\"\n\nI took another shuddering breath. \"No. It was ...,\" I hiccupped with the sobbing, \"... wonderful!\"\n\n\"Oh you slut!\" she said gleefully. \"You came on him, didn't you? I saw his shorts as he hobbled out of here. Did I interrupt a hand job?\"\n\n\"No!\" I said indignantly, \"Geez Rupali, you're gross.\" Then a few moments later, \"I wanted to give him a blow job. Poor guy deserved some reward for what I put him through.\"\n\nThe emotional outburst over, she held me at arm's length and looked down into my face. \"Are we OK?\"\n\n\"More than OK. This was ...,\" I shook my head; I didn't have a word for it, \"... incredible.\"\n\n\"Good,\" she said, reaching down and deftly plucking Ike from my pussy. She wiped it with a tissue and put it in her purse. \"Now get dressed and let's find you a bikini that you can get out of without crippling a guy with blue balls.\"\n\nI put on my bra and dress and watched Rupali wrap herself back up in her sarong, then we went back out into the shop to find Spike behind the counter; mostly recovered and looking even sexier if that was possible. We hung around and chatted to him in between serving customers for about half an hour. He was 19, he finished school last year and was surfing his way around Australia. He was staying in Sydney for a few months to build up a cash stockpile that would get him through the New South Wales north coast beaches and up to the Gold Coast in Queensland, where he would look for another job. His grand plan was to settle in Torquay in Victoria; maybe work for Rip Curl for a while and try to get an apprenticeship with a small surfboard maker.",
        "As we talked I was fiddling with my phone, hoping he would notice and ask for my number. He didn't, but every time he looked at me he smiled and held my gaze so I was pretty sure he fancied me.\n\nIt was past 11am and I still didn't have anything to wear at the beach. Spike caught me looking at the time. \"Are you girls still going to Bondi?\"\n\n\"I hope so,\" I said. \"I still don't have a bikini and I'm not inclined to buy the blue one because I'd need to take you with me to get it off every time I wore it.\" Did I really say that? God, I was so into him!\n\n\"I could actually put up with an arrangement like that,\" he joked. Was it joking? Holy crap, I was blushing. \"Check out Quiksilver though,\" he said, \"this is the last of the hot weather and they're having a sale.\"\n\n\"Thank you,\" I smiled, flashing goo-goo eyes at him. God, I'm so ashamed of myself.\n\n\"Hey look,\" he said, if you're not married to the idea of Bondi, I get off at lunch time and I'm heading straight for Coogee. The surf is crap today and it won't be so crowded there. I could give you a lift in the Kombi.\"\n\nRupali and I looked at each other, both of us with PleasePleasePleasePleasePlease in our eyes. So she was into Spike too. That was OK with me; we share everything and it's not like he was boyfriend material, but I did want to spend time with him. I could still remember the feel of his erection against my stomach and if I'm honest with myself, what I actually wanted to do was to fuck him. I pretty much always want to fuck Rupali and I didn't see why these two things should be mutually exclusive.\n\n\"Yes!\" we said together and then started giggling.\n\n\"Cool,\" he said. \"Go find yourself a well-behaved bikini and meet me here at twelve-thirty.\"\n\n<center>~~~</center>\n\nSpike was right, Quiksilver were having a sale and I picked up a beautiful low-cut embroidered white bikini for $40 ... and it was the right size! We stopped for lunch to fill in time and managed to chit-chat without the subject of Spike coming up. I'm naturally a little shy around boys \u2013 I wait for them to make the first move \u2013 so I needed Rupali's brazenness if I wanted any chance of getting into his pants today.\n\n\"Rupali, about Spike,\" I began.\n\n\"Yes sweetie,\" she smiled at me in a way that made me think she knew what was coming but was going to make me say it anyway.\n\n\"I want to ...,\" gulp.\n\n\"You want to fuck him,\" she guessed.\n\n\"Yes. No! I want to ... share him,\" I said.\n\n\"I know,\" she said.\n\n\"I think he likes me.\"\n\n\"I know.\"\n\n\"I think he likes you, too.\"\n\n\"I know.\"\n\n\"Then why didn't you tell me?\" I asked.\n\n\"I thought you already knew!\" she said. \"That's what that whole production in the dressing room was about, wasn't it? Laying the groundwork for a three-way?\"\n\n\"I hadn't thought that far ahead,\" I replied, a little amazed that she had.\n\n\"God, it's a wonder you get any at all,\" she marvelled. \"If I ever find out the identity of your well-hung mystery man, you'll be having three-ways 'til you beg for mercy.\"\n\n\"That's tempting. Show me what you can do with Spike, first.\"\n\n\"That,\" she flashed her dark eyes at me, \"will be my pleasure.\"\n\n<center>~~~ TO BE CONTINUED ~~~</center>"
    ],
    "authorname": "blin18",
    "tags": [
        "18-year-old",
        "bikini",
        "big cock",
        "exhibitionism",
        "high school",
        "multiple orgasms",
        "teasing",
        "change room",
        "inventions",
        "remote control"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/ingenious-toys"
}