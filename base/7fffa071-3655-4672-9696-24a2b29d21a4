{
    "title": "That 69s Show Ch. 01",
    "pages": [
        "\"Big Tits, Big Dicks and Fantasy Fucking\n\n(o ) ( o) (o ) ( o) (o ) ( o) (o ) ( o) (o ) ( o) (o ) ( o) (o ) ( o) (o ) (o )\n\nEpisode One:\n\nIn Which We are Introduced to Our Hero and his Next Door Neighbor.\n\n\"Honestly, Jackie! He's getting bigger! Ever since he got out of the hospital after falling off the water tower after the graduation party. He's bigger! A lot bigger! He was never exactly hung before. But now, well, he's at least three inches longer now!\n\n\"I know it doesn't make any sense. The Doctor said something about the pituitary gland being out of whack. All I can tell you is that he's a lot muscly than before and well, you know. bigger. Down there.\n\n\"Yeah, well, I'll talk to you later.\" As she hung up the young redhead didn't notice her mother silently moving away from the bedroom door.\n\n'Bigger, down there, more muscly.' The words echoed in the mind of the young wife with the larger than average breasts. Bigger, bigger. She adored bigger, particularly down there! Since she and her husband had started expanding their marriage she had found she liked men that were bigger down there. Her pretty face, plush lips, her larger than average breasts, 21 inch waist and slender hips assured her of many eager partners. Her husband didn't have all that much to offer and she had the best orgasms when her partner was bigger down there. She couldn't get her daughter's words out of her mind. Eric was bigger down there. Bigger!\n\nThree days later:\n\n\"Eric, can you go next door? Midge is having a problem with her garbage disposal.\"\n\n\"Okay, Mom, Let me change my shirt. I'll be over there in a couple of minutes.\" Most of his shirts were too small now. But he finally found one that, while tight, at least fit. His growth spurt seemed to be over. Maybe he could go shopping on the weekend, he thought to himself.\n\n\"Oh, hello Eric, Thanks for coming... Over.\" Her husky voice always had a hint of sultry in it. \"I can't seem to get this to work. I have no idea what could have happened.\" Of course, feeding raw rutabaga into the disposal until it overheated probably didn't help. Most people thought she was a ditz. But she had found out early in life that larger than average breasts and seeming to be helpless got her our of a lot of jams.\n\n\"Well, let me take a look. Let me unplug it. Safety first you know!\" He knelt down and reached under the sink and pulled the plug before popping back up to examine the disposer.\n\n\"There is a crap load of stuff in here,\" he announced as he started to pull out handfuls of rutabaga. \"This stuff doesn't' get chewed up, see? It just balls up and jams the unit. I'll probably have to reset the unit after I get this stuff out.\"\n\n\"Gee, I'm lucky you know so much bout this, Eric\" enthused the woman. She clasped her hands behind her back causing her breasts to be shown to even better advantage than her skin tight sweater already afforded. Seemingly by accident she brushed her titties against his arm as she twisted left and right. Pretending that she had no feeling in her breasts, she made no reaction as she repeated the move. She knew that Eric felt it. But she pretended not to feel it and that made him feel more comfortable. And she knew that he enjoyed it. Every man she knew enjoyed it when she brushed her 34-D breasts against them! The only thing that gave her away was her nipples springing to prominence.\n\n\"Well, let me hit the reset button and we'll see if we've got it.\" He knelt down again but not being able to feel the reset button, rolled onto his back for a better look. Doing so gave her a look at his body in skin tight jeans and shirt. She was almost drooling as she saw the outline of a bulge at the groin.\n\n\"Mmmmm, bigger down there,\" she thought to herself.\n\nQuickly she dropped onto her knees, straddling his legs and leaned forward. \"I can't see. What are you doing?\" she asked innocently as, once again she brushed her larger than average breasts against him. First against his groin and then up onto his abdomen as she tried to fit under the cabinet with him. Her cleavage, bulging from her top was extremely impressive!\n\n\"The reset button is right here.\" he gasped, pointing at the underside of the disposal. Pushing it, and plugging the cord back in, he started to maneuver out from under the sink. As he did she lifted up so that as he slid backward he found his face momentarily nestled in the warm gap between her large breasts.\n\nAs she slowly got up she saw that what had been a faint bulge was now a tumefaction that stretched from his crotch almost to the waistband of his pants! As she watched she thought she saw it pulse and grow a little bit bigger!\n\nNow back on his feet, he reached over to turn on the tap and then threw the switch for the disposer. A reassuring growl came from the unit and he snapped off the switch. As he did this she had remained on her knees, her eyes glued to his crotch.\n\n\"Oh, it works! You fixed it!\" she squealed as she bounced to her feet. her larger than average breasts bounced right along with her and she saw that he took in every quiver and shake. Taking a moment, she used both hands to test his bicep, pressing herself and her larger than average breasts against him. She trapped his arm within her cleavage and ran her hands up and down his back. Pulling back just a little, leaving her breasts pressing against him, her breasts bulging up from her sweater's neckline, she caressed his pectorals. \"You are a God send\", she enthused. \"How can I ever thank you?\"\n\nUm, that is, you don't...\" he trailed off.\n\n\"Oh, no! You rescued me! I have to thank you!\" She paused as if thinking. \"Here,\" softly she kissed him on the cheek. \"And here,\" another kiss, this one on the lips. \"And here.\" another kiss on the lips but this one with more emphasis and a quick touch of her tongue as he stood, rooted in place.\n\nShe studied his face for a moment and then slowly lifted her face to his again and gave him a scorching hot kiss. As she kissed him she felt his hands slowly move to the small of her back and pull her more tightly against his body. He gave a small moan and kissed her back more strongly as she prolonged the kiss.\n\n\"That was nice,\" she whispered to him as she snuggled into his embrace. \"I liked that a lot!\"\n\n\"But I don't think...\" he started before she pressed her finger against his lips.\n\n\"No, not another word now. You know I've watched you the past few years. You and your young friends. I've seen the way you look at me. I've seen you check out my ass when I wear my tight shorts. I've seen you gape at how my big titties jiggle and bounce when I jump rope And how you stare at my tight little shirts. Why do you think I wear them? I like it when you boys look at me.\" She giggled, stepped back a pace and drew a deep breath. She smiled as his gaze automatically dropped to watch her breasts stretch her shirt to the breaking point.\n\n\"Here.\" Taking his hand she guided it to her chest and pressed it against her. \"Do you like that? Do you like feeling my titties? Go ahead, squeeze it. Yes, like that! Mmmm, you have such strong hands! I like that! Squeeze them, pinch my nipples! Oh, yeah!\" she moaned, watching him as he felt her up. Tentatively and then with more authority and then eagerly. Running his hand from one to the other, he felt her titties, rubbing, fondling and caressing her boobs.\n\n\"You do that so well! Keep doing that!\" she husked as she ran her hand over his stomach and chest. Her other hand was cupped to his firm, muscular buttocks, pulling him against her groin.\n\n\"Mmmm, I had no idea you were so muscly,\" she moaned lustfully. \"Yummy!\"\n\nThere was no response from him as he continued to fondle her breasts with one hand and her butt with the other\n\nHer hand wended its way, almost by accident, to his crotch. Softly, gently, she cupped her fingers and palm on the top of the bulge she had found. To her amazement it was longer than her whole hand! And it felt thick! Thicker than she had thought it could be. \u2028\"Oh, do you have a big one?\" she asked with a glow in her voice. \"It feels like have a real big one! It must be uncomfortable in those tight pants! Let me take it out. I bet you'll feel a lot better!\"\n\nThere was no response, he was watching his hands as he kept on fondling her. She slowly unzipped, unsnapped and undid his belt.\n\n\"Oh, I'm going to have to use both hands,\" she gushed. Putting action to words she knelt and tugged his pants down. His tightie whities were stretched to the point of transparency by the massive tube inside. Pulsing to his heart beat, his dick had pulled the waistband of his underwear away from his waist. With a moan of eagerness she pulled the waistband out until the trapped cudgel snapped upright. Before her disbelieving eyes it throbbed in front of her. It reached up and up, the head well above his navel.\n\n\"What a big cock!\" she moaned. Her hand was shaking as she reached toward him. \"It's too thick for me to reach around\" she announced with a gasp. It took an effort for her to pull it down, level with her lips. There was a drop of precum quivering at the opening on top and she lapped it up, causing him to groan.\n\n\"It feels so good!\" he gasped. \"It's so sensitive! Be careful!\"\n\n\"Honey, I'm going to be REAL careful. REAL often! Now come with me.\"\n\nGrasping his dick she led him to the bedroom. Once there she knelt in front of him, removing his sneakers and socks before stripping him of his shirt and getting him to step out of his pants.\n\n\"God! You are gorgeous!\" she sighed as she got her first look at his whole body. He looked like a gymnast or swimmer with every muscle defined. Even at rest he looked like he was flexing his body for her admiration. How could Donna have given this up she asked herself. \n\nPushing lightly she had him lie on the bed with his feet resting on the floor. She stood between his legs, her hands lightly stroking up and down the largest cock she had ever imagined.\n\n\"What a big cock!\" she repeated herself. \"What a big, long, hard, thick cock! Hehehe!\" she chortled. \"God, I'm really going to have fun!\"\n\nReaching behind himself Eric grabbed a couple of pillows and propped his head up so he could watch her.\n\nShe was smiling a nasty, dirty smile as she kept up her slow caresses from tip to root and back again. \"Lord, you are HUGE!\" she moaned as she leaned down and began to lick and suck her way up and down his steely shaft. His dick pulsed and quivered as she worked. Was it getting longer? Harder? She wondered as she worked. One hand held his cock in place as the other massaged his massive pair of balls. Each one was as large as a turkey egg!\n\n\"Oh, sweetie, delicious,\" she announced as she lapped up the precum that was slowly leaking from the tip of his enormous dickhead.\n\nWith a small moan of lust she mashed his dickhead against her lips, then slowly rubbed it against her cheeks, up and over her eyes and forehead before bringing it down again and, while looking him in the eyes with a lustful smirk, she slipped her lips over his dickhead and slowly took him into her mouth. Her lips gripped him just beyond the ridge of his pulsing dickhead while her tongue struggled to wriggle and caress the underside of his billiard ball sized cockhead.\n\nSlowly and then faster and faster, her head bobbed in his lap. Each down stroke was done with a lustful moan, each up stroke was accompanied by a gasping breath.\n\n\"I can't take it!\" she gasped in defeat after several minutes. \"It's just too thick and too fucking long!\" Her eyes burned with lust as she looked at him. She was holding his cock resting on her lower lip as she spoke.\n\nAgain standing between his legs she quickly doffed her pants and kicked off her shoes. Posing in front of her young lover, panties were her only covering below the waist. Smiling hotly down at him she slowly lifted her top over her bra encased breasts. \n\nThe bra was deeply cut, exposing a magnificent cleavage. Still smiling into his lust struck eyes she shimmied her shoulders sending tremors through her large breasts before cupping herself with both hands.\n\n\"LIke 'em, Eric?\" she asked, sure of the answer.\n\n\"You're sexy as hell, Midge! You know that. So you've been teasing me and my friends all this time? Well, speaking for myself, I've jerked off to you so often you should be pregnant by now!\"\n\n\"Eric! That's such a,\" she paused. \"such a sweet thing to say!\" She laughed.\n\n\"Thirty four D\", she announced as she tossed her bra behind her. \"larger than average breasts. And I hope they are big enough to do this.\" She slid down and pulled his dick upright between her larger than average titties. Cupping them together around his pole she wanked him up and down, grinning down at him as he groaned aloud.\n\n\"Good enough,\" she exclaimed as she moved up and crouched over his crotch. \"Now for the real thing.\"\n\nHolding him upright with one hand, she started a slow descent on his steel hard shaft.\n\nUsing small up and down movement she took more and more into herself as she worked. Eric helped out by reaching up and holding the bouncing breasts, tweaking her nipples and squeezing her boobs with both hands.\n\n\"Jesus, you are so massive,\" she gasped as she worked. \"I've never been so filled! Never!\"\n\n\"GUUUhhh!\" It was an inarticulate sound of ecstasy as she gave in to the orgasm which had been building since she started riding him.\n\n\"So massive,\" she moaned again, her hips still rising and falling although she didn't think she would be able to take any more. He filled her completely and she had less than two thirds of him inside her. His dickhead was trying to go where no dickhead was really supposed to go. And she was wondering if she could somehow make it happen. She had never been so well reamed!\n\nEric, too was making noises that indicated he was really close to completion. those sounds became sounds of disappointment as she finally lifted off him.\n\n\"Sorry Eric, I really don't want to get pregnant! Now how would you like to get off? Blow job, tit fuck? Hand job? Your choice.\" She was stroking him as she asked, keeping him at full mast.\n\n\"What was that second one?\" He asked.\n\n\"Tit fuck? That's when I lie down and you slide this huge dick between my tits and fuck 'em until you come all over me! It's one of my favorites,\" she said with a dirty little smirk.\n\n\"Oh, yeah! that one. I've never heard of it! I want to fuck your tits, Midge!\"\n\n\"Well, climb on board, stud\" she was lying down as she said this and in moments Eric was athwart her stomach, his dick so long that he was able to just reach her lips while at the apex of his thrust.\n\nTime and again he pushed, her pursed lips his goal. Each time she licked or sucked the tip of his shaft he felt himself get closer and closer to an epic eruption. The smooth skin between her boobs lubricated by the leaking precum was as slick as silk and he was building quickly.\n\n\"Wait, wait, wait, hold on a second, honey.\" Midge was squirming out from under him. \"I've got to see how big you are!\" \n\nEric groaned in despair as she scampered across the room, even the sight bounding and bouncing breasts didn't make up for the interruption. He was about to cum!\n\nIn seconds she was back, tape in hand, and seconds later she announced her finding.\n\n\"Ten and one half inches. That's freaking huge! Almost a full foot long! What a huge dick!\"\n\nSliding under him again she quickly returned his cock to it's place between her big titties and looked up into his eyes while trapping his dick in her cleavage.\n\n\"Now, Eric, now! I want you to empty your balls all over me!\" Her tongue stretched out to caress him.\n\nSeveral strokes later and with a howl of relief and lust Eric announced the arrival of his ejaculation. Two, three strands of cum were launched far over her head to splat loudly against the head board. \n\nLaughing and giggling she grabbed his still spurting cock and directed the next spurt into her mouth and then over her face and neck. As he slowly pulled back strands of cum splattered over her nipples and breasts.\n\n\"MY GOD, what a load! You come like a bull! I've never seen the like,\" announced the cum soaked woman. Slowly she wiped cum off her face and using her fingers spooned it into her mouth.\n\nSitting beside her Eric watched as she smeared his cum all over her larger than average breasts. Raising each in turn to her lips, she slurped and sucked all that she could reach into her hungry mouth.\n\n\"That was the fuck of a lifetime,\" she said as she looked up. \"You're the best!\" \n\n\"Can we go again?\" he asked gesturing to his rapidly growing hard-on.\n\n\"No, honey! Not today! You wiped me out!\" Her voice held a note of regret.\n\nBut she held her ground and several minutes later, a redressed Eric was going out the kitchen door while Midge was dropping off into an exhausted sleep. \"Not today, honey,\" she thought to herself. \"But soon! I'm not nearly done with that huge dick!\"\n\nEnd Episode 1 "
    ],
    "authorname": "DDDDave",
    "tags": [
        "big tits",
        "big dicks",
        "blow jobs",
        "tv parodies"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/that-69s-show"
}