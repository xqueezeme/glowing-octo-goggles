{
    "title": "Isabel, The Beauty Next Door Pt. 04",
    "pages": [
        "Hello, and welcome to part four of my story about Isabel and James. I hope you enjoy it as much as the first three. \n\nThis part has been put into the First Time category, because as you will read, James and Isabel finally get it on. \n\nRegarding the Kendo part of the story: if you are part of the BKA then apologize, because this part of the story has no basis in fact and is made to fit my storyline. \n\nThank you for the kind comments, and please feel free to leave any comment as long as it's constructive.\n\n************************* \n\nI am awake before the girls. Lying there, I am unable to move, because Isabel has snuggled right into me. She has her head next to mine, breathing steadily onto my neck. Her shoulder is nestled into my armpit, with her leg cocked over mine, and her arm extends to rest across my chest. Her breath sends goosebumps all over my body, as I lay there enjoying the moment. The sun is just beginning to show itself through a gap at the top of my curtains, and the morning chorus of birds has filled the outside air.  \n\nSam and her girlfriend Hannah have come to visit. We'd had a great night at our favorite watering hole, The Thatch, in Croyde. And after we'd returned home Isabel and Sam had ended up having a game of truth. The one question that still revolves around in my mind though, is the one Sam had asked about how close we had come to having sex. I keep thinking back to yesterday, and the moment Isabel had rubbed my cock against her soaking wet pussy. The feeling was incredible, but when I felt her flesh surround the head of my cock I presumed that my cock was between her puffy pussy lips. She has the most wonderful, deep slit. \n\nI must be dozing because my mind begins to drifts back over the time since Izzy's arrival. My brother Bradly being a total pain in the ass. He thought she looks like Emilia Clarke. I didn't even know who she was until I Googled it, and there is a slight resemblance. Izzy is taller, and far better proportions. She's got a far better pair of tits. She knocks Emilia Clarke out of the ballpark. My mind drifts again, seeing Izzy's smile, and the way she looks at me. The first time we went to the beach, and the first kiss on the balcony. If you could build my perfect woman, you would end up with my Izzy.\n\nIsabel stirs in my arms making me snap out of my thoughts. Kissing the top of her head, and looking down I see a sweet smile of recognition spread across her face. She opens one eye, and turns her face up for a kiss. \n\n\"Hey,\" comes a whisper.\n\n\"Hey, back.\"\n\n\"Did you sleep okay, Baby?\"\n\n\"Like a rock, my love.\"\n\n\"Oh Jimmy, I love being your love.\"\n\nWe kiss for a while, both trying not to disturb our friends. Unfortunately, we fail on that last point.\n\n\"I love you too, Jay.\" I can only burst out laughing at the two giggling girls on the airbed.\n\n\"Yes Sam, we know,\" Isabel says, as she buries her head in my chest, laughing.\n\nHannah asks, \"Have you expressed your love to each other already?\"\n\nIsabel turns round to face Hannah and Sam, who are both now sitting up looking our way. \"Yes, we have. We both told each other yesterday morning.\" She says proudly.\n\n\"Jay, you kept that one secret.\"\n\n\"Sorry Sam, but it isn't meant to be a secret. Just personal.\"\n\nSam gets up and walks over to my side of the bed. She crawls under the covers, then on top of both Isabel and me. Putting her arms around us, she kisses us both. \"I knew, from the time I saw Isabel sit on your lap on video chat.\" \n\nWe lie there in a three-way hug for a couple of minutes before I have to break it up, because I need a pee. When I get back upstairs Isabel and Sam are in a discussion about what we can do before they have to leave. Unfortunately, buses don't run on Sundays. My mother will be taking us to the train station. Sam can't help mention the fact I failed my driving test the first time around. I hear Sam say they will be getting the six o'clock train, so we have most of the day together. \n\nI sit on the sofa, and decide to make small talk with Hannah. \"Did you sleep okay on the airbed Hannah?\"\n\n\"Yes Jay, it's surprisingly comfortable. Oh sorry, is it okay I call you Jay?\"\n\n\"Most of my friends do Hannah, so I have no problem if you do.\"\n\nShe gives me a broad smile, \"I've had a great time so far this weekend.\"\n\n\"That's good. Have you recovered okay from my Kendo display?\"\n\n\"Oh yes. I was just a little shocked at how good you are.\"\n\n\"You should see him with his Samurai sword, Hannah.\"\n\nHannah's eyes grow wide. She looks a little worried at Sam's comment. \n\nI pat her arm reassuringly. \"Don't worry, it's locked away in Dad's gun case.\"\n\n\"You have a sword, Jimmy?\"\n\n\"Yeah, my Dad got me it when I received my first black belt. I will show you it when we have time.\"\n\nHannah getting up stops the conversation dead. She heads downstairs telling us, 'she's going for her morning pee'.\n\n\"Oh to much information Hannah.\" I sit back on the sofa laughing. \"So what have you two decided we are doing today?\"\n\n\"I would like to take Hannah up to our hill if that's okay. I told her about it, and she asked last night if we could go.\"\n\n\"We have enough bikes. Your bike is still here Sam, but I better ask if it's ok to take Mum's bike. I'll check it over before we leave, she never seems to use it.\" Getting back up I walk over, and get in the same side as Isabel. \"What time do you want to get up Sam?\"\n\n\"Not sure. I could do with a shower, but first a cuddle with my girlfriend,\" Sam says this as Hannah appears at the top of the stairs, she looks straight at us looking at her anticipating a response. \n\nShe stands there, stone-faced at first, then smiles. \"Get out my way, coming through.\" She runs across the room and launches herself at Sam. They end up on the other side of my bed, kissing. \n\nIsabel looks at me. \"Shall we?\" With that she climbs on top of me, kissing me passionately as our tongues sync quickly into their beautiful dance.\n\nThe spell is broken by my mother coughing at the top of my stairs. \"Well, I suppose it could be worse. You are with the correct partners.\"\n\nWe all stop and turn to look in my mum's direction looking guilty of something.\n\n\"If anyone wants any breakfast, I'm just starting it now.\" She has got the knowing look only Mums do.\n\nI look at Isabel first, then over at Sam and Hannah. \"Anyone hungry?\"\n\nThey all seem to jump up at the same time. \n\n\"Looks like it's a yes, Mum,\" I say, laughing.\n\nI get up and put some jeans over my bed shorts, and shrug on a t-shirt. Isabel and Sam are almost naked, and are getting dressed in front of me. I suspect Hannah is waiting for me to leave. I quickly make tracks to the stairs, telling them that I will see them downstairs. \n\nI am sat in the kitchen drinking coffee when first Isabel, then Sam, and finally Hannah walk in. Sam goes over to help; she is about the only person I have ever seen my mother tolerate in the kitchen. The rest of us just have to stay out of the way, and wait.\n\nToday being Sunday Mum is doing her full English. This consists of scrambled eggs, baked beans, tomatoes, bacon, sausages, a couple of slices of toast, and of course hash browns. It's the best breakfast of the week. \n\nBreakfast is done, and everyone full. I go out to the shed with my second coffee of the day. I need to check Sam's, and my mother's bikes over, maybe oil the chain. Seeing a shadow at the door, I notice Hannah has followed me outside with her coffee. The sun is quite high in the sky, and the birds are still singing.\n\n\"God, it's beautiful here.\"\n\n\"Yes it is. Are Isabel and Sam still talking?\"\n\n\"Yeah. They seem to be getting on well.\"\n\n\"They have ever since the first time they met on video chat.\"\n\nHannah sits down. \"My biggest worry was seeing you, and Sam together. When she first told me about you it worried me, but now seeing you together I truly get it. Now my worry is that I will never be as close to Sam as you, or be able to match your unconditional bond.\" I am a little taken aback by her honesty. \n\nIt takes me a moment to answer. \"Hannah, you shouldn't worry about something that isn't the same. It's only because I have known Sam for a long time, anyway I can see how much she really likes you. Believe me when I say that there is something between you. So just let it run its natural course.\"\n\nShe looks up at me with glazed eyes. \"James, do you really think so?\" \n\n\"You've known each other such a short time, so just be open to it, Hannah.\" I look up from Sam's back wheel. \"I have never known Sam so into someone, but always remember that my love for Sam will always be different from what you two will have for each other.\" \n\nShe stands and puts her arms around me before kissing me on the cheek. \"I didn't expect that, I hope you're right. Thanks' Jay, that was quite beautiful.\"\n\n\"Excuse us, are we interrupting something?\" Izzy and Sam appear through the shed door.\n\n\"Just bonding with my best friend's girl,\" I say as I grin at the two ladies. \n\nHannah is looking like she has been caught with her hand in the cookie jar, and shifts uncomfortably.\n\nSam sees this, and puts her hand on her cheek. \"Han, you do know that he is the only person on this earth that I do trust you 100% with?\"\n\nHannah sees the smile on both Isabel's and Sam's faces. She noticeably breathes out, and laughs to relieve her tension. \n\n\"That goes for you two as well,\" Isabel adds. \"You two are the only females I trust with my man.\" Then Izzy adds, \"I must admit that I was a little worried at first, but seeing these two interact together you can see there is nothing but friendship.\"\n\nSam gasps, \"you what? That's not what I heard.\" She turns to Hannah. \"You should have heard all the un-lady-like language coming out of her mouth.\" \n\nIzzy goes a bright shade of crimson as we all laugh at the memory of her storming up my stairs the second night after we met. \"Well, I didn't know you then.\" She adds with a pout.\n\nI finished looking the bikes over, while the girls disappear inside to pick up supplies.\n\nHalf an hour later the four of us are cycling up the road towards the hill. Hannah is a little shaky at first. She hadn't ridden since she was a child, but soon got the hang of it. As they say, it's like riding a bike. \n\nAs we dismount at the bottom of the woodland path that leads to the hill, my mind drifts to the time I first brought Isabel here. Today is not as sunny as it was back then, but it is still quite warm. We quickly walk up the path that leads up through the wood to the clearing with the fallen tree. My mother had come up with the great idea of a picnic, so we all had backpacks with food, and a couple of blankets.\n\nAs the top comes into view and opens out I hear Hannah's gasp. \"Wow Sam, this is way better than even you described, and I thought you were exaggerating.\"\n\nIsabel and I go over to the fallen tree. I sit myself down, and Isabel leans in between my legs. I wrap my arms around my beautiful girlfriend, and we take in the incredible view. \n\n\"She's not wrong. It's a very beautiful place,\" Isabel whispers.\n\n\"It pales in insignificance to your beauty, Izzy,\" I speak softly in Izzy's ear.\n\n\"Oh Jimmy, flattery will get you everywhere. A bit cheesy though.\" We both burst into laughter.\n\nSam, and Hannah set about laying the blankets out, and sit down to take in the scenery. Izzy breaks our embrace, grabs my hand, and pulls me toward the spare blanket. \n\nAs we sit Isabel turns to Sam, \"So Sam, what did you and James get up to up here when you were younger?\"\n\nThere was an audible gasp from both Izzy, and Hannah. They both saw the looks that came across both Sam, and my faces. \n\n\"Oh shit Isabel, you are onto something here.\" Hannah is almost bursting with excitement.\n\nSam then speaks in a slightly raised voice, \"hang on, we were young, and it was at the time that I was beginning to think I was gay.\" \n\nI then added, \"Yes, and I was just realizing what a girl was.\"\n\nThere is a bit of an awkward pause. \"So, spill.\" Izzy prompts.\n\nSam looks at me, and then starts. \"We were eleven going on twelve at the time. It was the school holidays, and I had started to grow boobs. We always have shared everything, so talking about our changing bodies was natural for us. We often did I show you mine if you will show me yours. Anyway, this one day when I showed Jay my developing boobs we decided to try kissing.\" \n\nBoth Hannah, and Isabel have their hands up to their mouths. \n\nI finished the story by saying, \"So, we tried kissing each other. It was a bit strange, because it was just like kissing my sister. We both concluded that we just weren't into each other.\" \n\nThere was a silence again, both Izzy, and Hannah were processing the information. Then Isabel once again pipes up. \"Well Jimmy told me you had tried to kiss, but I didn't have much detail. So what else did you get up to that's not to do with adolescent growth?\"\n\nAgain there was a moment of silence before I burst out laughing. \"Sam, do you remember when we were having rolling races down the bank over there.\" I pointed to a steep part of the field.\n\nSam laughed. \"Yeah, and I beat you every time until I started to throw up.\"\n\nWith that, we all started laughing. \n\nSam then jumps up, \"come on Jay.\"\n\n\"What?\" But Sam was already halfway to the bank. \"It looks a little smaller now.\" She says as she stands at the top.\n\nAt this point, I am stood at the side, \"I dare you.\"\n\nA wicked grin spreads across Sam's face, and she sits down. She gives me a look that I have seen every time she goes to do something daft. Before I get to the top, she had laid down, and launched herself off the top, and is rolling down gathering speed. \n\nShe is screaming in hysterics as she hits the bottom. \"Come on Jay, your turn.\"\n\nSo before I knew it, I was at the bottom of the bank in hysterics next to Sam. It didn't take long until all four of us are rolling down the hill like a bunch of five-year-olds. We are having a great time on the hill. There was none stop laughing, and my face hurts from smiling so much. It doesn't take long though for Sam to start feeling a little sick, so we stop, and go to sit on the two blankets. We start eating the food we have brought along, still buzzing from the playing around. Being with the two main ladies in my life makes this all the more special. I must admit though, I am already comfortable with Hannah, and like my best friend's choice of girlfriend. \n\nAs we are chatting away I feel my phone vibrating in my pocket. I get my phone out and look at the caller ID. \"Wow, it's Mr. Jenkins. Wonder what he wants?\" I click on 'accept' and hold the phone to my ear. \"Hello, Mr. Jenkins. How are you?\"\n\n\"Who's Mr. Jenkins?\" Isabel asks Sam as they both listen to my side of the call, trying to tell what it's about. \n\n\"He's one of Jay's teachers at college,\" comes a whispered answer.\n\n\"I'm fine, thank you for asking. How can I help you, sir?\" \n\nIsabel and Sam watch as I pause, then say, \"Sorry, Collin.\"\n\nMr. Jenkins wants to meet me in Braunton on Thursday to discuss something important. I hang up a little confused, and explain to the girls. \n\n\"So what do you think he wants to speak to you about Jimmy?\"\n\n\"We discussed something about his ex-employer a while ago, but I had forgotten about it until today.\"\n\n\"I remember that Jay, something about an apprenticeship or something. Isabel, have you seen some of Jay's designs on his computer?\"\n\n\"You haven't shown me them, Jimmy.\"\n\n\"Bloody hell Jay, you are sometimes too modest.\"\n\n\"Will you show me later Jimmy?\"\n\nI agreed to show Izzy my designs from my two years at college. I had been playing around with some software my Dad had got me from one of his architect friends. You can create anything from a basic house to a skyscraper.\n\n\"Hey Jay, how come she gets to call you Jimmy? You've always hated it.\"\n\n\"She makes it sound so sexy, Sam.\" With that answer Izzy plants another kiss on my lips. \n\n\"Love you.\"\n\n\"Love you too Iz.\" Both Sam, and Hannah make gagging noises. I just shake my head at the two of them.\n\nAs we pack away our picnic, and get ready to return, I notice the clouds seem to be getting darker. Then we hear a rumble of thunder in the distance.\n\n\"It looks like rain. We should hurry.\" Sam is looking at the sky. \"Hopefully it will hold off until we get home.\"\n\nWe all jump on the bikes and head straight back down the path to the road at the bottom. It doesn't start spitting until we have turned down the lane that leads to our houses. As we reach the shed the heavens open. We all stand there watching it for a while, and when it seems to ease off a bit, so we make a run for it. \n\nThe afternoon is spent in my room watching Netflix ... some chick flick that makes me fall asleep. \n\nTime soon passes, and before long we are in the car headed toward Barnstaple. My Mum was doing her usual moaning. \"I wouldn't be doing this if you had passed your test first time. Bradly passed first time.\"\n\nI glance at Sam, and roll my eyes. \n\n\"How long until your next test Jay?\"\n\n\"A couple of weeks Sam. The two theory tests are valid for a while yet.\"\n\nIsabel looks at me. \"There is so much I don't know about you. I haven't even taken a lesson yet.\"\n\n\"You'll need a car around here Isabel,\" my Mum adds. \n\nThe train is just coming in as Mum parks. We walked around and through the station's ticket office. The train has pulled in and people are getting off. As we wait for it to empty, Sam has already started to cry. \n\n\"Come on Munchkin, we will try to get down to Exeter in a couple of weeks. I may even come down with Izzy for the weekend.\" \n\nSam manages a forced smile. \"Okay Jay, but I miss being with you so much.\" \n\nI move in, and wrap my arms around her. \"I miss you as well, Munchkin.\" Sam plants a kiss right on my lips. Sam then turns to hug Isabel.\n\nHannah turns toward me. She puts her arms around me. \"It's been really good to meet you, James.\"\n\n\"Yeah. You too, Hannah. Keep my mate safe.\" \n\nWith that Hannah kisses me on the lips, and walks off to board the train. Sam slaps me on the arm, and kisses me again before she gets on the train. \n\nAs the train it pulls out of the station, both girls are waving like crazy. Isabel and I are waving back. We stand on the platform, watching the train pull away, and hold one another. Isabel just seems to know that's what I need at this moment. The drive home is quiet, with only a couple of passing comments.\n\nWe get home around seven. There isn't much of the day left so Izzy and I climb the stairs. \n\n\"Hey, Jimmy can I see your designs now?\"\n\n\"Sure Iz.\" I walk over and start the computer up. Isabel sits down on the chair, and waits for it to finish booting up.\"\n\nI reach over Izzy, and click my designs folder. \"There's also a couple of designs on my Facebook page if you want to see.\" \n\nShe nods as she starts to open some of the folders in my directory. She gasps, \"Wow Jimmy, these are great. They look so professional. I can't believe you've not shown me these before.\" \n\nI can only shrug, and go red. Izzy is looking at my designs in amazement. \"What's good is that I can see your thought process, and different stages of design.\"\n\nShe glances up at me, \"I have a very talented boyfriend.\" She spends around forty-five minutes going through my folders, and asking some very good questions. I can see she is very impressed, and pleasantly surprised. Her intellect is shining through.\n\nAs she shuts the computer back off Izzy turns to me, \"so what days will I get to see you this week?\"\n\n\"Ummmmm, let's see. Monday, work. Tuesday, we can hang in the morning if that's okay. I've got my Kendo in the afternoon. Wednesday, work again. Thursday, Mr. Jenkins. Friday, I think I am working, and the weekend is just for us.\"\n\n\"Oh shit Jimmy that is one busy week. It doesn't leave much time for us, and I'm going to get so bored.\"",
        "\"I'm sorry Iz, it's only this week. Just everything is happening at the same time.\"\n\n\"I know, it's just 'need to see you sometime'.\"\n\n\"Any chance you could spend the night? Say, Monday and Wednesday night, and there's no reason you can't come with me on Thursday?\"\n\n\"Oh yeah, you only want me for one thing!\"\n\nLooking at her face, I can see that she's not serious; she's wearing a big smirk. I shake my head, and playfully tap her arm. \n\n\"You might be Intelligent, beautiful, sexy, and have me totally devoted to you, but I hope there's more to us than getting naked. Not as if that isn't important, and that I don't constantly fantasize about it.\"\n\nI think I am digging myself into a hole, and she is enjoying watching me squirm. So I do the only two things that I can think of: I kiss her luscious lips, and shut up. \n\n\"Okay, I'll let Mum know that I am here on Monday and Wednesday nights.\"\n\nA big grin stretches across my face, and we snuggle up to watch tv before Izzy has to go. By ten-thirty I am tucked up in bed, and fast asleep. \n\n*********\n\nMonday morning comes way too quickly. My alarm clock makes itself known, shrilly telling me to wake up. Now I used to think that a six-thirty alarm was a myth, or something kids are told about to make them try harder at school. Here I am though: a straight-A student, getting up at six-fucking-thirty. Like I said before, not the best time of day for me. \n\nMaking my way downstairs, my Dad is already tucking into his breakfast. \n\n\"Good morning, Son.\"\n\n\"Morning Dad.\"\n\n\"Sorry about the early start. Have an hour's drive to work today.\"\n\nAll I can manage is a grunt as I sit down to eat something. I have always maintained that I can't function without a cup of coffee and a bowl of cereal in the morning. \n\nBy ten-past-seven we are in the car. As soon as we are out of the lane, Dad asks me about Thursday's meeting with Mr. Colins. Unfortunately, I haven't got any details to offer, other than what I had remembered, but that was a guess at best. Beyond that, I will find out on Thursday. \n\nThe day passes uneventfully. All that is on my mind is Isabel. \n\nWe finish the job earlier than expected, and make our way home, arriving at around quarter-past four. The moment we pull into the driveway Isabel comes bounding across the lawn, and throws herself into my arms. \n\n\"Oh Jimmy, I have missed you so much.\" She is kissing me all over my face.\n\n\"Hello to you as well. Wow, what a reception. Is there a reason for your welcome, other than you missed me?\"\n\nShe gasps and takes a step back, looking at me with hands on her hips, and a mock pout. \n\n\"Well?\"\n\nShe hits my arm and laughs. \"You can read me too easily, mister.\" She grins, then lets out a small squeak, and jumps excitedly. \"I got confirmation of my place at Cambridge today. As long as my grades are what is predicted, then I'm in.\"\n\nI grab her and wrap my arms around her. \"Well done, Baby, I'm so proud of you.\"\n\nWe release each other from our embrace, and as I turn toward the back door Isabel says, \"Oh Jimmy, I need to have a conversation with my father at dinner. I will come over after if that's okay?\" \n\n\"Yeah okay Izzy, no problem.\" Although I am disappointed, I know it will be an important conversation. I had missed Izzy all day, and am looking forward to a bit of lip-on-lip action. For now, we both have to make do with another hug and a quick kiss. \n\nMaking my way into the house, I head straight upstairs for a shower. There is a bit of a wait before dinner, so I message Sam, and she wants to Facetime me. As soon as I reply OK my phone vibrates into life. \n\n\"Hey, Munchkin.\"\n\n\"Hi Jay. Missed me?\"\n\n\"Nah, can't seem to get rid of you for long enough,\" I joke back, laughing. \n\n\"Ha ha ha, not funny Jay. Another thing that is not funny is that Hannah has started calling me 'Munchkin' because it 'suits me'.\"\n\nI am laughing at her pissed-off air. \"Anyway, Munchkin, what do you need?\"\n\n\"Nothing really, just wanted a chat.\"\n\n\"Well you know I'm always here for you Sam.\" I can see she's a little off. \"Is everything okay, Munchkin?\"\n\n\"Yeah, why?\"\n\n\"Well you seem a little...off.\"\n\n\"Nah, just realizing how much I miss having you around. Every opportunity we get we should take. Especially, because we will have less time after September. Plus ... Hannah told me what you said in the shed.\"\n\n\"Don't remind me. I'm going to miss you even more. Anyway, you knew about my feelings for you. We had that conversation a long time ago.\" A lump is forming in my throat, and I can feel a lot of emotion that I am totally unprepared for, welling up. \"Anyway, I've still not got a clear idea of where I'm going. We could end up at the same place\" My eyes start to glaze a little.\n\n\"Oh James, don't. You'll start me off. I know what we said, but it was a nice thing to say to Hannah.\"\n\n\"Anyways if we are apart, you can always jump on the train and weekend with me.\"\n\n\"What, will I get every other weekend visitation rights?\" We both burst out laughing.\n\n\"Yeah, I can see Isabel agreeing to that.\"\n\nSam's face then turns serious. \"Ok Munchkin, out with it. What's really up?\"\n\nSam takes a deep breath, \"it's Mum, she's been on my case all day. She's upset because she thinks she's not going to have grandkids.\"\n\n\"That's silly, many gay couples have or adopt children.\"\n\n\"That's what I said, but this has really upset her.\"\n\n\"It's going to Sam, I was upset for quite a while. I always thought we would marry, and have kids.\"\n\n\"I know, but this is getting too... I don't know, real. When we were talking about it years ago it was something that was a long way off, it didn't seem so real. Now it's upsetting people, and I don't know how to deal with it.\"\n\n\"Look, it will get better. Your Mum loves you whatever, and she will understand in time.\"\n\n\"I wish she was as cool as your Mum.\"\n\n\"I don't know, she has her moments.\"\n\n\"Anyway it's got me thinking.\"\n\n\"Sam, don't do that. You might hurt yourself.\"\n\n\"James, this is serious.\" As soon as she called me James my smile dropped. \"Anyway, I was thinking. If I decide to have a child would you father it with me?\"\n\nTo say I am speechless is an understatement. I sit there staring at the screen for a while. \"You want my child?\"\n\n\"Well not now, but yeah. I thought about it, and if I decided to have a baby it would have to be with you, or nobody.\"\n\n\"What does Hannah have to say about this?\"\n\n\"I haven't talked to Hannah about it. It's too early in our relationship for that. So what do you say?\"\n\n\"Holy shit Sam, I don't know. How would we even go about it?\"\n\n\"Well, ideally I would like to conceive naturally. I think a baby should be made by people who love each other.\"\n\n\"I don't think that would be possible Sam. I wouldn't want to have sex with anyone other than Isabel. It would feel like cheating, even if we get permission.\"\n\n\"Oh I don't know Jay, but I'm sure we can work it out.\"\n\n\"Sam, I can't give you an answer now. I would have to talk to you more with Isabel involved.\"\n\n\"But you would if you could without sex.\"\n\n\"In theory, yeah. Saying that though it would still have to feel right at the time.\" I think I am talking to myself now, Sam was beaming at me. \"Sam, it's a maybe.\"\n\n\"But it's not a no.\"\n\nI shake my head at her, she is always like this. I just know she will come away from this conversation thinking I said yes. Just then I hear my mother holler up the stairs. \n\n\"Got to go, Munchie. Catch you later.\"\n\nSticking my tongue out I cut the line quickly, because I don't want the abuse from calling her 'Munchie'. Heading downstairs ready for dinner, I have a worried look on my face; I still get a kick out of being immature, but my conversation with Sam has freaked me out. \n\nDinner done, and after helping with the dishes, I find myself reading The Time Travelers Wife on my balcony. I need something to calm me down. It is a peaceful evening, as I hear Mr. Richards drive into his driveway. He is a little later than normal, and doesn't look very happy. \n\n\"Hi, Mr. Richards,\" I shout from my perch. He manages a wave up to me before disappearing into the house. \n\nI settle down for some quiet time, musing about how things have been quite manic what with Isabel in my life. My upcoming Kendo exam as well. I haven't even had time to get nervous. \n\nMy attention is suddenly taken by the sound of raised voices. They are coming from next door. Instantly I recognize Isabel is shouting. She sounds really stressed, and is screaming at the top of her voice. \n\nJumping straight up, and running down the stairs my heart is beating fast. The pain that goes through me is incredible, and totally unexpected. \n\nMy mother stops me at the bottom of the stairs. \n\n\"James, you can't get involved.\"\n\n\"Why the hell not?\"\n\n\"They're telling Isabel that they can't afford to let her go to Cambridge.\"\n\n\"What? But that's her dream!\"\n\nMy mother puts her arms around me. \"I know, Son.\"\n\nI don't know why, but my eyes fill with tears. I realize I am feeling Isabel's pain. The connection between us has become strong.\n\nI sit down at the table. This is turning into one crazy day.\n\nThere is a frantic knock at the back door. My mother quickly turns and moves to the door, opening it to reveal an upset Isabel.\n\nAs our eyes meet both fill with tears, and hurt. We freeze for a second. Then we move simultaneously, and meet in the middle of the kitchen. The embrace that follows is full of love and understanding. We stand there for an eternity just holding each other. \n\nNot saying a word, we break apart, and I guide her toward the stairs. We climb up slowly, in silence. Once we reach my room Isabel just pulls me toward the bed. She kicks her shoes off, and climbs to the center. I look at her, and she doesn't seem to be in the room. Kicking my shoes off I climb next to her, and pull Izzy into my arms. Holding her tight she buries her head into my chest, and starts to cry again. \n\nThe light fades outside, and Isabel has fallen asleep in my arms. Her deep rhythmic breathing is so hypnotic, and I feel myself drifting off. I hear someone come up the stairs, but am unable to move. The feeling of someone putting a cover over us is the last thing I recall before my consciousness fades. \n\nIt's still dark when my eyes open. Isabel has woken me as she gets up. \n\n\"Are you okay, Baby?\"\n\n\"No! But I need a pee.\"\n\nI turn and flick the bedside lamp on. Isabel looks back at me, and I give her a half-smile. She looks me in the eye, and then her head dips down as she heads down the stairs.\n\nOnce she disappears from view I get up, and change for bed. Five minutes later I hear soft footsteps coming back up the stairs, and I glance over to see Izzy taking her top off. She walks round to my top drawer and gets her stuff out. \n\n\"When did you put those in there?\" \n\n\"I brought a couple of things over when Sam was here.\" She unclips her bra as I gaze on in wonder. It occurs to me how relaxed she has gotten in front of me; she pulls her jeans off so she's just wearing her knickers. At this moment she gives me the sexiest look before she shrugs my old t-shirt on, drops her panties, and slips her shorts on before gliding in next to me. \n\nShe climbs on top, and gives me a big kiss. \"Thanks James, I really need you tonight.\" \n\n\"Anytime Iz. I love you.\"\n\n\"Love you too.\"\n\n\"Do you want to talk?\"\n\n\"Not now Jimmy, sorry, but I just need you to hold me.\"\n\n\"I can do that.\"\n\nShe slides off to one side, and snuggles into me tightly. It's not long before she drifts off, with me following shortly after. \n\nThe next time my eyes open she is awake, and looking at me. The dawn is just breaking; the early light gives my room a pale glow.\n\nI smile. \"I will never get tired of waking up next to your beautiful face.\"\n\nA smile breaks across her face, but it is short-lived. \"Morning Jimmy, and you're not so bad to wake up next to, yourself.\"\n\nI lean in and kiss her succulent lips. She puts her hand on the back of my head to keep me in place, and to keep the kiss going. As the passion level rises my hands start to wander over her body. Squeezing her butt, and pulling her closer I feel my cock stiffen as I grind against her thigh. She shifts her weight on top of me, which makes my cock rub against her pussy now. There are just two thin cotton layers between us.\n\nIzzy breaks the kiss. \"One moment, Baby.\" She kneels back and pulls her shorts down enough to uncover her well-groomed pussy. Then in one movement, she grasps the hem of my shorts, and pulls them right off. My hard cock stands at attention, and I have mixed feelings: hope, confusion, intense curiosity, apprehension, excitement, wondering what she's up to. I open my mouth, but Izzy puts her finger there to silence my question. \n\nThe next thing I know, my legs are being pushed apart and Izzy is lying back down between my legs. She comes back up for a kiss with all the tender love she can muster. Supporting her weight on her elbows I feel her open her legs a little, and guide my cock into her deep, puffy pussy lips. She guides my cock along her slit, pressing me up against her without any penetration. Once my cock is in place her legs close, trapping me there. The feeling is incredible, and I wonder if this is what being inside her is like. Her weight shifts back down on top of me, and the now-familiar dance of our tongues starts.\n\nIt takes a short while for the full passion to return, and Izzy starts to push her groin into mine. When I feel Izzy push, then I push back. God, the feeling is indescribable. Her smooth pussy lips, combined with her upper thigh surrounding my cock feels just ... wow. The heat and wetness increase. A mixture of Izzy's juices, and my pre-cum lubricates the way. \n\nIzzy buries her head in my neck as she starts to become more vocal. In a desperate attempt to not wake the household, she pushes her head deeper into the flesh of my neck, and upper shoulder. I'm not sure how much noise we are creating, but at this point I just don't care. The vibration of sound on my neck is causing my whole body to tingle. I have truly died and gone to heaven. \n\nIzzy lifts her head slightly, and whispers. \"Jimmy, I'm nearly there.\"\n\n\"Yeah, I'm not far off, either.\"\n\nWith those four words, I feel my orgasm rushing toward me faster. I reach down and pull the back of Isabel's shorts up just as she goes totally rigid: her orgasm overtakes her. My cock starts pumping jet after jet of spunk into my cloth-covered hand. I'm not sure if I passed out or just went blank, but it isn't until Izzy moves some ten minutes later that my brain clicks back into motion. \n\nIzzy lifts her head, and gently kisses my lips. \"Thanks Jimmy, I needed that. I love you so much.\"\n\n\"I love you so much as well.\"\n\n\"What am I going to do, James?\" she says. With that, the waterworks startup.\n\n\"Oh Baby, I'm sure we can work something out.\" I throw the covers off. \"But first we need to clean up.\"\n\nIsabel doesn't say anything for a second, and then carefully gets up. Looking down at the mess: \"Bloody hell, Jimmy.\" The wetness is a lot more than before. She looks into my eyes. \"Just imagine what it will be like when we actually have sex.\"\n\n\"Can't wait, Izzy. That was incredible.\" \n\nStanding up, dropping her shorts down, she just stands there looking at me. \"You've cum so much ... it's everywhere.\" Her eyes are so big. She picks the shorts off the floor, and wipes herself as best she can. Then she leans over and starts to wipe the mess that's all over my groin; it's matted in my pubes, dripping from my cock, and smeared over the surrounding skin. \n\nI watch her as she mops up my legs. To my amazement she lifts my cock up, out of the way. With a quick glance into my eyes, she pulls my foreskin back, and then bends down to lick the tip of my cock clean.\n\n\"Our juices together taste so good, Jimmy.\" \n\nI'm lying there, mouth open, totally gob-smacked. It's the sexiest thing I have ever seen. \n\nShe gives me a seductive smile, and licks her lips. She crawls up for a kiss; as our lips touch, I taste a hint of my own juices mixed with hers. \n\nOur passion is beginning to mount again. \n\n\"Jimmy, we have to stop. If we keep going, we will end up going too far.\"\n\n\"Izzy, don't take this the wrong way, but ... would that be such a bad thing?\"\n\nShe looks at me for a moment. \"Oh Jimmy, I want it to be so right. This is a one-time thing, and I don't want really to lose it trying to be quiet in case someone hears, or as part of a quickie. One thing is certain though my love. It will be with you.\"\n\nI feel my heart rate increase. A tear fills my eyes. \n\n\"Noooooo Jimmy, don't be upset.\"\n\nI try to compose myself before I answer. I'm not someone who cries a lot; but, the emotion inside me is overwhelming. Looking into her beautiful eyes, I take a deep breath. \"Isabel, I am not upset that we are not going to have sex tonight. The tears you see are for what you have said, and what you want to share with me one day, It's just so beautiful.\"\n\nThe joy that comes across her beautiful face makes my heart skip a beat. Then her eyes fill up with tears, and she moves down to hold me in the most wonderful cuddle I have ever experienced. The love we exchange in that moment, and feeling our souls entwine has me saying the only thing I can.\n\n\"I love you, Isabel.\"\n\n\"I love you, James.\"\n\nWe lie there, holding each other, in pure bliss. First Izzy, then I, drop back off to sleep. \n\n*********\n\nIt only feels like it is five minutes later when the alarm goes off. We awake in the same position as when we fell asleep. \n\n\"Izzy, how are you feeling this morning?\"\n\n\"Numb is the best I can say.\"\n\n\"I wish there was something I can do to help.\"\n\n\"I know baby.\" With that I get a gentle kiss.\n\n\"What is the reason for your parent's decision?\"\n\n\"Oh god, it's money. Apparently, we nearly went bankrupt in London, and they moved here to clear that debt. The problem is that with my Dad's drop in pay, and the move here, there's not a lot left in the pot. Well, not to pay for room and board. He won't let me get too much in debt like student loans, so I am stuck.\" She starts crying again. \"I've worked so hard to get in, and now this.\"\n\nI pull her into another embrace, and hold her tight. We stay in this position for a while, just content to hold each other. \n\n\"Jimmy, what time have you got to leave for Kendo?\"\n\n\"Mr. Evans is picking me up around ten.\"\n\n\"Can I stay here until you get back?\"\n\n\"Sure, but I don't know how long I will be.\"\n\n\"That's okay, I just don't want to go home yet.\"\n\n\"No problem, I should get up now though. Got to get a shower.\"\n\nShe rolls off, then I realize we are still naked from the waist down. As I get out of bed, I throw her a clean pair of shorts. I just grab a robe, and head downstairs. \n\nIzzy is still in bed when I return upstairs after my shower. Quickly drying off, I get dressed. I give Izzy a quick kiss as I head downstairs for breakfast. My mother is sat in the kitchen with Izzy's mum.\n\n\"Hey honey, how did you sleep?\"\n\n\"Could have been better Mum, but that's to be expected though,\" I say this as I look at Mrs. Richards. She moves a little uncomfortably in her seat. \n\n\"Now Jay, that's not how you talk to Heather. You need to show more respect.\"\n\nI walk over to make myself a cup of coffee without saying anything else.\n\n\"How is Isabel, James?\" \n\nI turned to look at Mrs. Richards with my eyes filling with tears. \"She is devastated, but that is to be expected. Is there absolutely no chance of you being able to afford for Isabel to go to Cambridge?\"\n\n\"It's not just the tuition fees, but living expenses, and rent of an apartment. There is a limit to our funds.\"\n\nI think for a minute whilst sipping my coffee. \"Okay, what happens if she could get someone to split the living expenses?\"\n\n\"What do you mean?\"",
        "\"Well, how about if I could get a placement in, or near Cambridge?\"\n\n\"I don't know James, you will have to talk to Harry.\"\n\n\"Okay, please don't say anything to Izzy, I don't want to get her hopes up. Just don't let her turn Cambridge down.\"\n\nWe hear the toilet flush upstairs, and then a minute later the tentative steps of Izzy coming down the stairs. \n\n\"Hey.\"\n\n\"Hey back.\" She walks over to me, taking my mug for a taste. \n\n\"Would you like a coffee, Izzy?\"\n\n\"Mmmmm, please.\" She puts my cup aside, and just nuzzles into me for a cuddle. I make her coffee behind her back, as she holds me. Once the coffee is made we both walk toward the table, and notice both mothers just looking at us. \n\n\"What?\"\n\n\"Nothing,\" they both say simultaneously.\n\nWe both sit on the bench at the back. An image of Isabel huddled up at one end, trying to keep as far away from Bradly as she could, comes to mind. I smile at the thought of the beginning of Isabel and me. It has only been a short time, but so much seems to have happened. Both falling in love. I am snapped out of my thoughts when Izzy's mum reaches across to touch her hand and ask if she is okay. \n\n\"Not really, Mum. My whole future seems to have been taken away. This was my dream, and it's gone.\"\n\nMrs. Richards looks at me hoping I might give Isabel just a glimmer of hope.\n\nAll I can do is shake my head. It feels so horrible, but I have nothing concrete. Saying something to her now would be cruel. \n\nI glance at the clock. \"Oh shit, I got to get ready to leave.\"\n\nI kiss Isabel, and run upstairs to get a bag packed. \n\nMr. Evans beeps his horn, and I run out to check if I need any other equipment. He thinks it might be an idea to bring my kit bag; so I run down to the gym to retrieve it, saying goodbye to everyone on my way out. \n\nWe arrive at Barnstaple Leisure Center in plenty of time, so I get changed into my Hakama. These days for me, I am more of a teacher than student. I rarely wear my traditional Kendo uniform, but today is obviously the day to do so. I spend my time meditating and then warming up. Some of the other students turn up to give support and to help out. They sit around the window benches that run down one side of the room where the Kendo classes are held. \n\nHalf-eleven: the main door opens. Four people from the British Kendo Association, enter. I don't notice them until Mr. Evans comes over to introduce us. Glancing around at the four men, they seem a little nervous. There are three older men, and one that seems just a couple of years older than me. I smile and shake each one's hand. This seems to relax them a little. It crosses my mind that I should be the nervous one, but my training has gone well, and my confidence is high. \n\nI ask the BKA gentlemen how they want to start, and they ask me to go through my warmup. Then they each give me a discipline they want me to demonstrate. It takes over an hour and a half to go through each part, and then we break for lunch. \n\nI get changed, and check my phone. Unfortunately, my phone has died a death. I walk out to find all five waiting for me. We all walk the short distance into town to one of the local restaurants, and get seated quickly. We sit there making small talk for a while, as we look at the menu. \n\nAfter we order my curiosity gets the better of me. \"So gentlemen, just out of curiosity. I was wondering the reason for your visit? These types of things are normally done online?\"\n\n\"Well James,\" the older man starts with a smile. \"It's quite simple really. The BKA has a new Chair Person. She thinks that we neglect a lot of the Kendo Clubs around the country. We are here to see how your club are doing, and if there is anything that is needed. We call it going back to grassroots.\"\n\nMr. Evans is sitting next to me, and seems to have known this already. It was good of him to inform me about it. Although I must admit it is about time some of the regional clubs get taken more seriously.\n\nThen I ask. \"So what's happening this afternoon?\"\n\n\"We are hoping that Stuart here can do a display for the students, and we are also trying to drum up interest in this year's British Championship.\n\nI glanced up, and said. \"Unfortunately, I only practice Kendo to keep fit. I am at the moment looking at what Universities will accept me. My education is my priority.\"\n\n\"Ah that's a shame, we find it difficult to get the higher ranked people to participate.\"\n\n\"I'm will keep an open mind, but my education will always have to come first.\" \n\nOur meals arrive, and we eat without much more conversation. I ask Mr. Evans if he minds if I disappear after the meal, and catch the bus home. He is fine with that, and offers to bring my kit bag back home later. I ask the BKA gentlemen to excuse me for my absence, but I felt I should get back to be with Isabel.\n\nAs I walk down the lane toward my house I see Isabel sitting on the bench in the garden waiting for me. \"Don't you check your phone Jimmy?\"\n\nI reach in and get my phone out of my pocket. \"Sorry Izzy, my phone died or something.\" I say as I wave it at her.\n\n\"That's no excuses buster.\"\n\nI walk up to a pouting Izzy, and open my arms for a hug. She can't stay mad at me and jumps into my arms. \n\n\"How did you get on then?\"\n\n\"Not sure, should know in a week or so.\"\n\nI step back looking at the beautiful woman standing in front of me. \"The more important question, Beautiful, is: 'How are you feeling?'\"\n\n\"Oh I've still got my head all over the place. I think I am still in shock.\"\n\n\"I'm sure we will find a solution or alternative.\"\n\nI walk up to her, and put my arms around her. Kissing her on the lips, and then pulling her into a full embrace. I hold her in my arms feeling her slowly relax into me. All her tension from the day seems to melt like ice in the summer sun. \n\n\"Jimmy, you always have a way of making me feel right.\"\n\n\"Izzy, I will always be here for you whatever.\" Feeling her in my arms, I find myself smiling at the thoughts I had two weekends ago just before we met. As we hold each other close, I get the overwhelming feeling that I am home.\n\nBreaking away from the embrace we making our way into the house holding hands.\n\nI plop down onto my sofa, and am pleased to be home. Isabel plugs my phone into the mains, and then presses the power on button. \n\nShe grabs the remotes, and comes to sit next to me. \"Mind if we watch some TV?\"\n\n\"Nah, I need to unwind. Watch whatever you want my love.\"\n\nAs Izzy is searching through channels looking for something to watch when my mother comes up the stairs, \"how'd it go?\"\n\n\"Not sure, I should find out in a week or two.\" I'm thinking I should get a t-shirt made up so I don't have to answer this question a hundred and one times.\n\n\"And how are you felling Isabel?\"\n\n\"I think I am still in shock about it all Heather. I really need to get my head around it. I'm feeling lost at the moment.\"\n\n\"Well I'm sure things will work out for you.\" My mother adds as she glances at me.\n\n\"I hope it does, and thank you Heather.\"\n\n\"Izzy, are you staying the night?\"\n\n\"Not tonight Jimmy, I need to face home sometime. Mum, and I had a good chat earlier, so it's a little better at the moment. I will see you after work tomorrow, and I will stay tomorrow night if that is okay.\"\n\n\"You are welcome any time Isabel.\" My mother says as she turns and heads downstairs.\n\nI must admit feeling a little disappointed that I will be sleeping alone tonight. We have spent a lot of time together over the last week, so I would miss her presence.\n\n\"Isabel?\"\n\n\"What's up? You never call me Isabel.\"\n\n\"I had the strangest conversation with Sam earlier.\"\n\n\"That's nothing new Jimmy.\"\n\n\"Well this was even weird for Sam. She wants to have my baby.\"\n\n\"What?\"\n\nI spent the next five minutes talking about my conversation with Sam. Surprisingly Izzy thought I was the obvious choice ,but agreed that it shouldn't be through having sex. She seemed happy with the way I had handled it, and said she will talk to Sam as well. The conversation ended with a wonderful kiss. We kiss until my mother shouts up that dinner is ready.\n\nIsabel breaks the kiss and smiles. \"Mmmmm, time flies when you're having fun.\" As she says this a smile spreads across her face, and she goes a little red. \n\n\"Oh, having fun are we?\"\n\n\"Always, Jimmy.\"\n\nIzzy got up from the sofa, and waited for me to walk her down. \n\n*******\n\nI'm sat next to my dad after my days graft. It's around half four when we turn down the lane, and the first thing I see is Izzy waiting for me in the garden. A smile spreads across her face as the van pulls into the drive. \n\n\"Hey Iz.\"\n\n\"Hey back Jimmy.\"\n\nI walk over and put my arms around the most beautiful woman I have ever met. Every time she shows me any love. I always wonder what I did to get so lucky. \n\nThe cuddle last a bit longer than normal. \"Are you OK baby?\"\n\n\"Well Jimmy, Sam messaged me earlier about your conversation yesterday, so the question begs. Are you okay baby?\"\n\n\"Yes Iz, I'm fine. It was just such a weird conversation to have. I am surprised you're okay about it .\" \n\nThe cuddled continues for a while, then I take Izzy's hand, and lead her to the house. \n\nAs we are walking towards the house my Dad comes walking out. \"I have to run to Tesco, your mother is stuck. The car needs a jump.\" \n\n\"Okay Dad, do you want me to start dinner?\"\n\n\"No, we will get some Fish & Chips from Squires on the way back. Isabel, did you want any?\"\n\n\"Yes please, if that's OK. Can't turn down Fish & Chips.\"\n\n\"OK, see you in a bit.\"\n\nMy Dad jumps in the van, and disappears up the lane. I continue into the house and make my way upstairs. \n\n\"Izzy, I need a quick shower.\"\n\n\"Jimmy?\"\n\n\"Mmm yeah?\"\n\n\"Would you mind if I joined you?\"\n\n\"What with me, in the shower?\" I had to ask, this was totally unexpected\n\n\"Well yeah, the house is empty, sooooo?\"\n\nI took her hand, and lead her down to the shower room. I grabbed two towels out of the airing cupboard. Shutting, and locking the bathroom door Izzy is already sitting on the toilet. \n\n\"Come on Kit off.\"\n\nIzzy gasped, and then starts to strip with a grin on her face. I once again think how lucky I am to have such a beautiful girlfriend. As she removes her bra, it occurs to me again how relaxed she has become around me. The image of this shy, unsure girl peeking around from behind her door enters my mind.\n\nShe stands in front of me naked without a second thought. Glancing her from head to toe, looking at this stunning woman in front of me. With her hair put up out the way to display the true curve of her neck around to her shoulder. Her body is perfectly formed with perfect proportions. Her breasts sit proud on her chest. For me they could not be any more perfect. Still pert, but with a slight sag due to their size. This gives them a perfect natural shape, and with her nipples standing out proud. Knowing in my mind that I used the word perfect far too often to describe her, but there just isn't another word to use. My eyes drift down, and I notice that she has a totally shaven pussy. Seeing where my eyes have fixed a hand moves across, just gently touching the newly shaved skin.\n\n\"I got a little bored and shaved it Tuesday, but with all that's happened I just forgot about showing you.\"\n\nShe stretches in, and turned the shower on. Letting the shower run, and heat to build. Standing there in front of me, with a confident smile watching me as I take my clothes off. Izzy steps into the shower, closely followed by me. My first instinct is to run my fingers around her smooth mound. She opens her legs a little to give me better access. My middle figure works between her outer lips finding warm wet inner. \n\nHer hand reaches down to stop me, \"later Jimmy.\"\n\nPutting my arms around her, our naked flesh meets. I look into her eyes as we draw together to kiss. It is almost hypnotic as our bodies slot together so naturally. Our passion rises my mind loses all sense of being, and I am lost in a world that only true love inhabits. The feeling of her naked body pressed against mine, her silk-like skin, and the softness of her breasts as the water cascades over us. I have said it before, but heaven truly exists.\n\nComing back down to earth I pull away for a second, we don't have that long before my parents return. Grabbing the bottle of body wash from the shelf I squeeze a dollop on her back. Setting my hands to work caressing her skin, and working the soap right across her back. We spend a little while washing each other all overpaying particular attention to certain parts of each other's bodies. The last thing is to rinse off and then dry each other. As we are making our way back upstairs, we hear my parents pull into the front-drive. Lucky for us, being summer clothes are light, and easy to put on. \n\nI run down to get Izzy's, and my Fish and Chips as Isabel starts setting up the balcony to sit and eat them on. Ten minutes later we are snuggled eating, it is a masterclass in synchronization. I still marvel at the way we just blend. Dinner is done we sit still meshed together reading. \n\n\"Are you still staying tonight Izzy?\"\n\n\"That's the plan my love.\" I can't help but smile each she says that.\n\nThe light begins to fade, and we start packing the cushions away. Not a lot is said, but it is calm quiet. I take the chip papers down to the bin, and when I return Izzy is sat on the bed looking for something to watch on the TV. \n\n\"Jimmy, is there anything you want to watch?\"\n\n\"No babes, see if there's a film we can watch or something.\" She spends five minutes searching.\n\n\"Any luck Izzy?\"\n\n\"Nah, not much on tonight. To be honest I wouldn't mind an early night. Shall we go down to the kitchen for a mug of hot chocolate?\"\n\n\"Yeah, that sounds good.\"\n\nWe made our hot chocolate together, and then took it back upstairs after telling my parents we are getting an early night.\n\nAs we made our way up the last flight of stairs, I hear Izzy lock the door behind her. A smile creeps across my face as I know she only did that if she wanted to get up to something that she didn't want to be walked in on. We sit, and drink our hot chocolate for a while.\n\nI get up and close all the curtains, and turn around to see Izzy removing her top. Transfixed on her movement, and the uncovering of more, and more skin. \n\nShe turns around to see me watching. \"It's like you never seen me undress before.\"\n\n\"Sorry, but I don't ever want to grow tired of watching you strip.\"\n\nA smile appears immediately, and spreads across her face. She looks at the floor, and a flush of red flashes across her cheeks. Her eyes come back up a meet mine, and I see that innocent girl I first met over a week ago. My heart seems to skip a beat, and then speed up. I move over to the other side of the bed, and wrap my arms around my perfect girlfriend.\n\n\"I love you Isabel Richards.\"\n\n\"I love you back James Stokes.\"\n\nOur lips touch just like our first time, and once again I feel myself getting lost in the moment. There are no words that can describe the sensation that I feel at this moment, but all of a sudden the population of the planet Earth has been reduced to two.\n\nThe feeling of her bra-covered breasts against my chest, and the pressure that is being pushed against my now fully erect cock has me panting for air. I reach behind, and for once her bra comes undone in one attempt. Izzy pulls away slightly letting it drop to the floor. My hands go round to the front of her three-quarter length trousers, and undo the button. Pushing the zip down as far as it will go. I slip my thumbs into the waistband, and pushing them over her hips. As she is stepping out of her trousers, I drop my shorts to the floor. Her eyes are drawn to the bulge that is poking out the front of my boxers, and I hear an audible gasp as I straighten up. We are now both stood there in just one item of clothing. \n\nMy eyes are scanning her body, always liking what I see. Izzy put her arms back around my neck, and pulls me back into the kiss. Once again I am absorbed into a world with only two people. Izzy puts a little pressure on my chest and I step back towards the bed. Losing my balance I fall back with Izzy just letting herself fall with me. We hardly break stride as our bodies become horizontal, and our passion for each other rises. My hands are running up and down Izzy's spine, causing goosebumps where ever my fingertips touch. She breaks the kiss for a moment to let us both catch our breaths. As she looks down on me I scoot a little more into the bed. With my head now on the pillow, I look to continue, but Izzy moves her head back, and gets up on her knees. She hooks her fingers in the waistband of her knickers, and slides them off like she is performing a striptease. \n\n\"You are making these too wet my love.\" She then leans over, and tugs at my underpants. It takes just one look to make me raise my hips, and allow Izzy to slide them off. As she discards them on the floor, I push the covers off the bed. Our eyes are locked together, as Izzy crawls back up the bed. She straddles me making sure my cock is sandwiched between her pussy, and my stomach. She leans down again as our lips touch. My cock has never felt so hard, and I am worried that I will just shoot my load. Izzy seems to notice the slight change in my kiss, and stops to look at me. \n\n\"Sorry, I am worried about cuming quickly.\"\n\n\"Are you now. Well we can't have that now.\"\n\nWith that Izzy starts kissing me again. Shortly after she moves to my neck, and down over my collarbone. She stops at my nipples, and I gasp as she locks her lips around my left one and gently sucks. At the same time her tongue is darting around the hardened nipple causing all sorts of electrical jolts through my body. Everything seems to head straight down to my cock. I don't know how, but I managed not to shoot there and then. Izzy does the same to my right nipple before kissing her way down over my stomach to my waiting cock. Wasting no time I feel her warm mouth envelope the throbbing head. A gasp escapes my mouth, and Izzy's eyes once again locked with mine. I can see the pure lust in her eyes as she watches the reaction of my body to her stimuli. \n\nWith that I go beyond the point of no return, \"Oh fuck Iz, C C C Cumming.\"\n\nWith that Izzy withdraws only leaving my swollen head in her mouth. I begin to pump stream after stream of cum. Her eyes have doubled in size, as she swallows each time I fill her mouth. The combination of the movement of her swallowing, and the suction she is exerting on me just keeps my orgasm going and going. It seems like five minutes have passed, but in reality is more like thirty seconds. My breathing begins to get back to somewhere normal, and Izzy crawls back up the bed. At this moment I want to redefine the word beautiful. \n\nBeautiful, the look on your girlfriend's face when she is proud of the blow job she has just given you.\n\nIzzy comes back up beaming, and licking her lips completely satisfied with her bedtime snack. \n\nI have now recovered enough to return the favor. To Izzy's shock, and amusement I flip her over onto her back. Now it is her turn to gasp as I start kissing her neck before moving back to her mouth for a while. Starting to move down her body I listen to the subtle noises coming from her mouth. As I reach her breasts I hear her catch her breath waiting for the moment that I wrap my lips around either one of her nipples. It's like time stands still for her as I hover over her left breast for just a couple of seconds. The sound when my lips lock on to her swollen tip is such a turn-on. I feel my cock reacting even though it had only been a short while since I am pumping load after load into her mouth. I spend a while sucking, and licking both nipples, with each passing moment Izzy's breath seems to get shorter. ",
        "Not wanting to wait any longer I continue my exploration of this Garden of Eden. It always makes me smile as I kiss down over her belly button. The reaction I get is always worth just spending a couple of extra seconds caressing with my lips, and tongue. Then I feel a slight pressure on the top of my head as Izzy tries to hurry my southward progress. I suppose I should give the lady what she wants, so I start moving down again giving every square centre meter its own little kiss. As I reach her shaven pussy I hear another gasp escape her lips. The now-familiar smell of her sexual musk fills my senses, and seems to get my cock another lease of life. I settle in between her legs as she spreads herself as wide as she can. My tongue starts just above her anus, and with one strong motion I lick the entire length of her pussy.\n\n\"Oh fuck Jimmy, do that again.\"\n\nI didn't need to be asked twice, and I repeated the action with the same reaction. Bringing my hands up and spreading her puffy pussy lips to reveal the treasure within I see her clit standing proud. Now I had seen quite a lot online when I am researching, but most are quite small. Although Izzy's isn't big it is still quite prominent, and makes my life a lot easier when it came to locating my target. Wrapping my lips around her clit I remembered the technique Izzy had used on my nipples to great effect. One thing I'm not prepared for is the reaction I got. Wow, Izzy started gasping for air, and grinding her pussy into my face. Both her hands grip the back of my head, pulling me into her. My eyes are now glued to her face as she reaches over for a pillow to muffle her screams. I insert my central finger into her now sopping hole, and continue my attack onto her. It is quite difficult to keep up with all her movement, but I clamp myself down the best I can. Her body tenses up, and she clamps her thighs together trapping my head. I feel a spray of fluid hit my chin, so I remove my finger and clamp my mouth over her opening drinking down her pussy juice. Using my tongue to make her orgasm last longer. \n\nAs she comes down from her high, her hips slowly lower back down to the mattress. I take one last lick of the full length of her slit before making my way back up to Izzy's pillow-covered face. Lifting the pillow a little I see two eyes looking at me.\n\n\"What the hell just happened? God, that is sooooo good.\"\n\nAll I could do is smile back, and shrug my shoulders. Removing the pillow fully, and laying back to calm myself a little. Izzy moves onto her side and kisses my lips. She seems to enjoy the taste of her cum over my face, so she sets about cleaning my face with her kisses. While she is doing this, Izzy repositions herself back on top of me. My arms wrap around her as we start to lose ourselves in another deep kiss. \n\nI feel my cock filling with blood as Izzy starts to grind herself against me. Feeling her wetness coating my cock, I push against her movement. Once again our breath becomes labored, as our love for each other fills every motion of our bodies. I fell my cock pushing between the deep folds of her pussy lips. The warm wet sensation seems to surround the end of my cock, as I am slightly conscious of the tip getting caught on something. I pause for a split second and then met her next thrust. Both our eyes open wide as we feel the head of my cock pop inside what I now realize is the entrance to her sex, pussy, virginal hole, whatever the correct name is for it, at this moment who gives a fuck. \n\nThe feeling is incredible, with just the sensitive end of my cock pushed in. It is like just the head of my cock is being held by her, and had closed back around the back. She is incredibly tight, and I can feel her pulsating. We had both frozen for a second not knowing what to do next, but neither wanting to be the one to pull away. \n\n\"My god Iz, that feels incredible.\" My words came out as a whisper, but the moment the last word is spoken a smile spread across both our faces.\n\nIzzy lowers her lips back down to mine, and we continue the kissing. This time our hips are not moving in fear that I might pop out. After a couple of seconds we are back in our little world we create when our passion reaches a certain level. Izzy's hip started pushing first, just a little to start with. I didn't mean to, but my body automatically starts pushing against her. A little at first, but as my cock didn't seem to make any progress at first as the thrusts got a little greater. Still not huge, but enough to start pushing me inside her a little more. A thought crosses my mind, that if I hadn't already cum that I would have shot my load there and then. As it is the sensation is building. Both of us are still pushing without the outward stroke, so my cock is just sinking deeper, and deeper. Then I feel the sensitive end come up against what I thought is the end of her vaginal canal, but quickly realized that my cock had only gone in about a quarter of its length. We continued to grind for a moment until Izzy broke the kiss. \n\nI look at her with a question in my eyes. \"You have reached my hymen Jimmy.\"\n\nMy eyes become wide. \"My cock feels so sensitive, it feels nothing like I imagined. God, I wish we could stay like this all night.\" \n\n\"Oh Jimmy,\" I could feel Izzy's conflict inside her.\n\n\"Do you want to stop Izzy?\"\n\n\"Yes, and No, this feels so amazing. I'm not sure I want to wait any longer. It doesn't get more perfect than this.\"\n\nOur lips touch once more, as our love for each other floods between us. As before we start to move our hips, but this time we move in both directions. A little to start with, but as the pleasure builds so does the length of stroke. Each time I bump back into her hymen before almost pulling fully out. Then Izzy changes her rhythm slightly causing me to bump a little more forcefully. We had stopped kissing, as I open my eyes I can see Izzy's loving eyes looking back at me. As we reach the end of the outward stroke a small, but knowing smile creased the ends of her mouth. Just then she pushes my cock forcefully back in, and in a split second my cock breaks through her hymen. She closes her eyes as a tear squeezes from the corner. \n\nIzzy gasps as my cock sinks deeper inside her, and she comes straight down and holds onto me tightly. Wrapping my arms around her to give her comfort, I feel my cock pulsating inside her. In reaction to my cock her virginal walls pulsate squeezing all around my cock. We lay there just holding each other for a while getting used to the new sensations we are both experiencing. \n\n\"Does it hurt Izzy?\"\n\n\"It did at first Jimmy, but not so much now.\"\n\n\"It feels incredible. I guess we're not virgins anymore.\"\n\nA smile spreads across Izzy's face again. \"No, I guess we're not.\"\n\nI pull her back into our embrace, and kiss her neck. With that Izzy comes back up to kiss my lips again. It doesn't take long for us to start our hips moving again. At first I am a little worried that Izzy would feel more pain, but that thought is quickly squashed with the sexiest moan I have ever heard. Moments later my cock is sliding back a forth inside her soaking wet pussy, and our pubic bones are grinding against each other. The feeling is overwhelming. And I felt my climax beginning to build. \n\nThen a thought slapped me straight between the eyes, \"Izzy, where should I cum?\"\n\n\"Inside me Jimmy, please cum inside me, I'm close too. My period is due any day so it's safe.\"\n\n\"Okay baby, cum with me.\"\n\nWith that I hear Izzy's breathe hitch, and her legs go stiff. At the same time she holds on to me really tightly. Then I feel her virginal walls starting to squeeze my cock. This more than I can take, and it pushes me over the top. As my spunk starts pumping inside her it seems to intensify Izzy's orgasm. At this point her head is buried into the pillow next to my ear, and the resulting high pitch scream momentarily deafens me in my right ear. Her pussy now is pulsating like it is sucking every last drop from my balls. We are still holding each other in a tight embrace, and breathing heavily.\n\nAs we both come down from our orgasms, our arms relax, and we return to a comfortable cuddle. All the time my deflating cock is still buried deep inside her.\n\n\"Are you OK baby?\n\nIzzy raises her head, \"Bloody hell, I don't think OK is the right word, but yeah. Fuck.\"\n\nI loved it whenever we did anything sexual her language became very colourful. All I can do is smile, and plant a big wet sloppy kiss on her lips. I always seem to know the exact thing to do, because a satisfied smile spreads across her face. \n\nWith that she sits up, and looks down to where my cock is still semi-hard, and buried inside her. There is a good mixture of cum, and blood. We both then look at each other in disbelief. \n\n\"Is it everything you ever thought it would be Izzy?\"\n\n\"Jimmy, this is above, and beyond anything my fantasies ever came up with. Just a lot messier.\" She bursts into a nervous laugh as she lifts herself so my cock falls out.\n\nWe both look as a large blob of cum drips out of her pussy, onto my legs that are locked together, and collecting all our juices. Izzy gasps, and cups her pussy to stop anything else leaking out. Carefully dismounting me to reach over to where I keep a box of tissues. She grabs the box, and returns to my lap, as she lets her hand slip from her pussy more cum mixed with blood starts dripping out. \n\n\"Christ, how much did you squirt into me Jimmy?\"\n\nIzzy starts to clean herself before helping me to clean up. I am surprised by the amount of blood that is coating my legs as well as the tissues Izzy is using to clean us both up.\n\n\"Wow, a lot of blood. Are you sure it didn't hurt that much?\"\n\n\"It is a little uncomfortable now Jimmy, but when we were making love it felt amazing.\"\n\nIzzy finishes cleaning up, and wraps all the dirty tissues up in a bundle. Then she climbs back into bed with me still naked. \n\nAs we snuggle up Izzy kisses me, \"thank you Jimmy that was perfect.\" She turns to switch the light off, and lets out a big contented sigh as she nuzzles back into my neck. It doesn't take long for me to drift off to sleep. \n\nI wake to a pair of deep green eyes looking back at me, and a hand wrapped around my morning glory. \n\n\"Good morning beautiful.\"\n\n\"Morning Jimmy.\" With that greeting Izzy leans forward to kiss me. It is a kiss that is full of so much love it takes my breath away. She pulls back with a look that made my heart flip. \n\n\"I love you so much Jimmy.\"\n\n\"I love you too Izzy.\" I return the kiss, trying to put as much passion in as Izzy had given me. We snuggle there a while until I glance at the clock, and smile. \"We got time for another round?\"\n\n\"What time do you have to meet Mr. Jenkins?\"\n\n\"Not until lunchtime.\" A grin spreads across our faces.\n\nIn one swift move, Izzy has once again climbed on top, and positioned my morning glory at the entrance to her opening. We both sigh as I slide into her for the second time. \n\nTo be continued...\n\nHopefully Isabel and James will be back quicker than this part. Thank you for your patience. I got the first draft edited, but I wasn't happy with the way I had side-tracked. So this part is partly edited. Apologies for any spelling, grammar, or punctuation mistakes.\n\nPlease remember to leave a score or a comment."
    ],
    "authorname": "Bamo68",
    "tags": [],
    "category": "First Time",
    "url": "https://www.literotica.com/s/isabel-the-beauty-next-door-pt-04"
}