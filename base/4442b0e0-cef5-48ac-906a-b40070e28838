{
    "title": "Back on the Block Ch. 01",
    "pages": [
        "The Mustang's aggressive growl responded to every twitch of my foot on the accelerator, as if the pony car was signaling its readiness to launch. I looked around and saw a boney waif like woman in a hoodie, waving at me from the shadows. Not a fucking chance babe. There was a woman across the street who didn't look too bad, but she was a blonde. Been there, done that, got the claw marks all over my heart to prove it. A couple of fat women, looked like they were ready to eat me, or at least my car. Sorry ladies, not my cup of tea. Then I heard it, a shrill scream from further up the avenue. There was something about the timber of the voice that got my attention. On a whim, I jerked the wheel to the left as I punched the pedal and the car veered into the turn lane. I shot ahead of the cars nearest me until I got a closer look. The redhead with the fowl mouth was in trouble. Two guys who looked like they were late for a frat party were trying to pull her into their Subaru. \n\n\"Hey,\" I shouted at them, gaining their attention. They saw me getting out of my car. I wasn't big or menacing in any way, but the seriousness of my approach made me seem, not worth the trouble I could bring them, so they bolted.\n\nAs they let go of her arms, she was still trying to pull away from them and the sudden release sent her sprawling on the ground. I stepped over to her, to help her to her feet. She just looked at my outstretched hand as if it was a snake.\n\n\"What the fuck do you want?\" she asked in a pure no nonsense tone. \"I was fine, I didn't need your help. I don't know why you bothered because you're not getting shit outta me.\"\n\n\"Why are you out here?\" I asked her. \"Your attitude is so shitty, you aren't going to make any fucking money. It's like you're trying to drive people away from you.\" I turned to walk away and noticed a line of cars coming over the bridge, heading our way fast. They were unmarked, but from their appearance and the way they were moving, I was sure they were cop cars. Without saying anything I abruptly started for my Mustang. She got up and came after me. It was like one of those jungle movies where one antelope bolts because it senses a predator, and without knowing why suddenly the whole herd is moving. As I closed my door, I looked at her and then opened the passenger door. She got in and we zoomed away from the curb spraying dust and dirt in our trail. I kept one eye on the road ahead of us and one on my rear view mirror. As I expected we were less than three blocks away when the scene behind us erupted in a spectacle of blue lights and sirens.\n\n\"How did you know? Are you a cop?\" she asked looking at me suspiciously. \"I didn't proposition you. No money was exchanged or offered.\"\n\n\"I'm not a cop,\" I said, hopefully ending the conversation.\n\n\"Then what the hell are you doing cruising around in this neighborhood?\" she asked looking at me. \"You don't look like you need to pick up hookers. So that means...\" she pulled her jacket closer around her body and subtly moved a bit further away from me.\n\n\"So that means what?\" I asked intrigued, by her.\n\n\"That means that you're looking for something that a normal girl can't do or won't do,\" she began. \"I should have known; the nice looking ones are always the biggest fucking freaks out there. I don't do any of that weird shit, so you may as well just let me out, right here.\"\n\n\"So what do you do?\" I asked, \"What have you done? Probably not much because you still look relatively fresh. Except for your shitty attitude, you still seem like you don't belong down here either.\"\n\n\"Why are you asking me all of these fucking questions? Are you a reporter or something? Just pull this fucking car over and let me out or else.\" She said.\n\n\"Or else what,\" I snapped. \n\nThe silence inside the car was only mitigated by the satiated growl of the Mustang's engine. I sped up as I went down the ramp onto the freeway. Within seconds we were closing on a hundred miles an hour. I obviously wouldn't have to worry very much about cops since probably half of the department was back there arresting whores, pimps, johns and whatever else they could find.\n\nI could tell that she was terrified by this new turn of events, so I decided to play up the fear factor.\n\n\"If you're a good girl, you might survive this,\" I told her. The look in those incredible green eyes was one of pure terror. Serves her right, I thought. Anyone who's attitude is that shitty deserves a little bit of ribbing every once in a while. Then as we drove, I felt guilty. Her attitude was probably just a defense mechanism that she'd developed in order to survive. Life on the streets and on the block in particular couldn't have been easy.\n\n20 minutes later I reached into the glove box and pulled out my remote control. She winced as my hand got near her legs. What kind of a prostitute is afraid to be touched by a man? Something wasn't right here. \n\nAs we got near my building I pushed a button on the remote and the garage door on the side opened up. We drove inside and the door started to close and the interior lights came on. I parked between my red Jeep Cherokee and my Black Mustang GT. I got out of the car and opened her door so she could too.\n\nThere was a whooshing sound as the big heating fans came back on to reheat the interior of my loft. They automatically did this every time the garage door opened. I had another door that opened from the inside of the building, but I hardly ever used it. It was much more fun to simply drive straight into my living room. I stepped off of the plastic coated garage flooring and onto the plush carpeting of the living room area and took her hand and pulled her with me.\n\nShe looked around the loft, intrigued by what she saw.\n\n\"Okay mister, what do you want from me,\" she said quietly.\n\n\"A simple business proposition is all I need,\" I said. \"Isn't that why you were out there? What I want might not be what you're used to. But I'll pay you a price that's beyond fair. And who knows you might like it.\" I watched her reaction as I spoke. She was sitting on the edge of one of my leather sofas, as if she was afraid to even sit back. Something that I had just said got a reaction from her but I didn't know what.\n\nSuddenly she was crying and begging.\n\n\"Oh please mister, please just let me go. I'm not really a whore. I didn't even want to be out there. I just figured that I could just give some guy a blow job to get enough money to eat, and then go find a shelter. I'll never go back out there again. Please let me go!\" she whined.\n\nI just started laughing and almost fell off of my couch. Then I looked over at her again. The way all of that beautiful red hair fell in soft waves around her shoulders was incredible. Her eyes, even now when she was terrified, simply defied description. The smattering of freckles on her cheeks, that cupid's bow mouth, I couldn't help it, I just wanted to reach out and hug her and tell her everything was going to be fine. But I couldn't. I didn't know how she'd react. \n\n\"So much for the tough streetwise prostitute,\" I smirked. \"Hello to the frightened little girl.\"\n\n\"I'm not a little girl,\" she snapped, \"I'm twenty three God damned years old and I've been on my own for a while. And I am a prostitute.\" She pouted, as if it was a mark of pride or shame I couldn't quite tell which. She reached into her pocket and pulled out two small documents, one was a faded and now expired Drivers license from Muskegon, Michigan. It verified her age as 23 years old 2 days ago. The other was a copy of a ticket for solicitation. Also from 2 days ago, it must have been a hell of a birthday, I thought.\n\n\"So how'd you get popped, Miss Prostitute?\" I asked her. I was really interested in hearing this. Maybe it was the warmth of my loft but before she could answer I heard a loud growling sound. It wasn't coming from me, those coneys weren't that bad. \n\n\"Come on into the kitchen Miss P,\" I said gently reaching for her. She was still afraid but maybe something in my manner or tone told her that I wasn't going to hurt her right then, because she accepted my hand and let me lead her into my kitchen area.\n\nI unfortunately didn't cook much, although I had been known to grill a mean steak, and even toss a salad occasionally. In this case my lack of culinary expertise could be overlooked. I opened a cabinet full of Campbell's Chunky soup. I looked at her and then back at the cabinet and pulled out a can of my favorite, Sirloin Burger. I popped the top and then poured it into a bowl, While it cooked in the microwave, I got a Pepsi from the fridge and put it in front of her. Then when the timer went off I gave her the soup and a spoon.\n\n\"Sorry, it's all I can come up with on short notice,\" I said. She just nodded at me and continued eating. She finished the entire bowl, and looked really satisfied. But she didn't say anything, she just looked at me. Obviously the next move was mine.\n\n\"I don't have any clothes here for you, but If you want to take a bath or shower, I can give you some of my things to wear while you do. Then maybe we can have a talk and you can tell me about yourself.\" I said quietly.\n\n\"Ooh, I see where this is going,\" she snapped. \"It's the old bath and talk routine. Huh. You figure I'm a girl so I just want to be clean. So you offer me a bath so you can check me out naked on your hidden cameras before you rape me. Then the talking part; for some sick twisted reasons you want me to tell you my fucking life story before you rape me. You are really one disgusting fucker. But I'm going to let you know. This isn't going to be easy on you. I'm going to fight you with everything I have. You might win in the end but it's going to be the worst pussy you ever had. And I'm going to take a plug out of you while you're getting it. Just because I'm a prostitute doesn't give you the right to keep me a prisoner and rape me.\"\n\nI didn't say anything I just laughed. I got up and ran back over to my car and got the remote. There was a switch on the wall that opened the doors too, but I didn't want her to know that yet. I put the remote in her hand. \"Okay Miss P. you have the remote in your hand just push the button and be on your way. I have no intention of raping you. I told you, I have a business proposition for you. That means that I tell you what I want, and we negotiate the price until we come to an agreement that works for both of us. Either we both agree or we can both walk. \"\n\nI took the remote out of her hand and pushed the button myself. The door started to open and I looked at her and said, \"You know the way out.\" As the night air started to filter into the room the temperature dropped and the big heating fans came on. She looked out into the darkness, and I could tell she was conflicted. \n\n\"Get to stepping,\" I said, \"You're letting all of the cold in.\" she shivered in her jacket and started for the door. \n\n\"You're just going to let me go?\" she asked.\n\n\"Can you hurry up,\" I said, \"It takes longer to heat this place up when the door stays open.\" She quickly walked over to the door and looked back at me. I had fired up my 60\" flat screen and was watching the beginning of a movie. I saw her looking at me, out of the corner of my eye as the door started to close. Well it had been an interesting evening, and to tell you the truth, I'd had worse times.\n\nFive minutes later, I was watching the 3-D blue ray disc of Avatar and really enjoying it. I had the surround sound on and was wondering why I didn't do things for pure enjoyment more often. No wonder everyone thought that I was about to snap, I didn't have a life. I'd been so busy trying to get Dana out of my life that I'd neglected to find something to fill that void with. I heard a booming sound. At first I thought there was something wrong with either my speakers or the audio processor. I hit the pause button and noticed that the sound continued. Someone or something was pounding on my garage door.\n\nI walked slowly over to the door and looked out through the small smoked glass peephole in the center of it. It was the redhead. She was shivering in the night air. I pushed the button and the door started to open again. When the door got about halfway up she ducked under it and I close it again.\n\n\"S S S so I get to turn you down if it's too weird or kinky for me?\" she asked stuttering.\n\n\"What are you talking about?\" I asked her.\n\n\"Your proposal, or proposition or whatever it was,\" she snapped. I just nodded.\n\n\"Can I still have that bath first, and can it be a warm one,\" she chattered. \"Eating all of that warm food and going out into the cold made it worse. Since we're going to be having sex anyway, I guess it's alright for you to watch me on the cameras while I'm in the tub.\"\n\n\"Victoria, I don't have any cameras in the bathroom,\" I said. All of a sudden she was back on her guard.\n\n\"How the hell did you know my name,\" she snapped looking at me warily.\n\n\"You showed me your driver's license earlier,\" I said quietly.\n\n\"Sorry,\" she said equally quietly. I noticed that I liked the timber of her voice when she wasn't screeching about something. I took her hand again and led her up the stairs to the loft's sleeping area. There was a small bathroom on the main floor, it even had a walk in shower, but I wanted the chance to give her something better. So I took her to the bathroom in the main sleeping area.\n\n\"Holy shit that's a big fucking bed,\" she exclaimed. \"You must love heights too.\"\n\nMy loft's raised sleeping area was accessed by a large wrought iron spiral staircase. The walls around the sleeping area had been removed and only a waist high glass barricade marked the edge and a steep fall. The only places in the loft where a person couldn't be seen were the two bathrooms. I took her into the master bathroom and started the tub. \n\n\"Sorry Victoria, I don't have any feminine smelling bath salts or any type of bubble bath,\" I said. She opened her jacket and I looked at her. I could see now why there had been so much movement from her breasts when I nearly ran her down earlier. She wasn't wearing a bra, and those puppies definitely needed some restraining. \n\nAt first she started to raise her jacket to cover them even though her shirt was still on, but then she changed her mind. \"You're going to see them anyway,\" she said and dropped her jacket as she started to take off her clothes. \n\n\"Probably not, \"I said gently. \"Why don't you wait until the tubs fills to get undressed. That way I can bring you a robe and some slippers, so I don't have to invade your privacy if I bring them later.\"\n\n\"You probably just need time to focus the camera,\" she said under her breath.\n\nFive minutes later I knocked gently on the door opened it a sliver and put a thick terry cloth robe on the hook just inside the door. I dropped a pair of slippers on the floor and closed the door back, without entering.\n\nI made a couple of phone calls and left a message at the office that I'd be in late, then sat back to watch my movie. About thirty minutes later, I was watching the scene where Jake first gets into the jungle in his Avatar, when I noticed that Victoria was standing at the end of my couch. \n\n\"Now that's a fucking TV,\" she said loudly. I took off my 3-D glasses and threw them to her. She stepped back a little from the screen and then put them on. She immediately started trying to touch things that weren't actually there. I knew what she was seeing, there were all kinds of lifelike 3-D effects in the scene that made it seem like you were actually in the jungle. Unfortunately her gyrations were almost more than the robe could handle.\n\n\"Victoria,\" I said sharply causing her to stop moving and look at me. \"Uhm you robe is about to come open.\"\n\nShe quickly grabbed the front of the robe and closed it, looking back at me with animosity.\n\n\"So all of a sudden you don't want to see my titties huh? You must have gotten all the pictures you need already.\" She sneered.\n\nI turned off the TV and went back upstairs into the bathroom and got her clothes. As I came back downstairs, I stopped near her. \"I was going to wash these but maybe I should wait until after we have our talk.\" I said. \"That way if you decide not to go for my idea, you won't have to wait for them to get dry.\"\n\n\"Does your idea have anything to do with me spending the night?\" she asked. I slowly nodded.\n\n\"Then go ahead and wash them,\" she said. \"I've decided to accept your deal.\"\n\n\"Victoria, you don't even know what my deal is,\" I said.\n\n\"I've had a lot of time to think about it, while I was in your tub,\" she said. \"Whatever you want me to do; I'm probably going to end up doing with some other guy eventually anyway. And since I got here you've been nothing but nice to me. So you probably won't hurt me too badly, and it looks like you can afford to give me some money too. Those are the things I needed the most tonight. Food, a place to stay, both of which you've already given me. Washing my clothes and some money would be a bonus. So I'll try to do whatever you want but please don't hurt me. And I need to be honest with you, I'm not very good at sex, but I really will try and do whatever you want.\" As she said this I could see really big tears falling down her face. Then she dropped the robe and my world changed.\n\nIt was as if I'd been living in the dark and suddenly someone turned on a light. Everything about this woman was perfect. Her breasts were large, and real, because of their own size and weight they sagged a bit which only added to the effect. Their slight imperfection only added to their beauty. A few of her ribs were visible, she obviously needed to eat more. Her slim wasp like waist exploded into a very generous ass that jiggle a bit with every movement. Her legs weren't those thin coltish supermodel legs. I was glad because with that ass thin legs would have been very disproportionate on her. She had nice sized well rounded thighs and tapering calves.\n\nThe past few months had been too hard on me because she had already accused me of planning to rape her several times this evening and she really didn't know how close she was to that happening.\n\nI rushed over to her and as she winced and turned her head, I reached down and picked up the robe and covered her. I gently hugged her and used the sleeve of the robe to wipe her tears. I sat her back down on the couch and went and put her clothes in the laundry.\n\n\"Victoria, no matter what you decided about my proposition, you can stay here tonight. If you say no, I won't try to force you or influence you in any way. I f you say no, then no is the answer. But first could you tell me how you came to be where you are now?\" I asked.\n\n\"You mean how I got to be a whore,\" she said. \"Well I grew up in Muskegon, which isn't really that big a town. It's not like Detroit, which also isn't a big city anymore. My dad died and my mom is a really pretty woman, so it didn't take too long before there were lots of guys sniffing around after her. Almost before my Daddy's grave was cold she was getting offers for dates and marriage. The guy she finally picked was just a fucking snake. He started trying to catch glimpses of me in the shower almost as soon as he moved in. I couldn't stay there with him, and my mom pretended not to know how bad he was. So I ran away and went to stay with my grandparents on their farm just outside of DC.\" As she told me this she tucked her legs up under her robe on the couch. I got up and went to the cabinet and got her a blanket.\n\n\"I was happy there even though it was kind of secluded. I was over sixteen and in Michigan you can legally drop out of school then. I thought that I'd just live there on the farm and help them until I was ready to get married or whatever. I really didn't think very far ahead. My grandpa had a heart attack about 3 years ago and he died. Grandma didn't live for very much longer, I guess it's like they say when you find the person you're meant to be with you become of part of them and they you. Anyway without him, as much as I tried she just wasted away. I survived on the money they had in the bank for as long as I could, but I couldn't run the whole farm by myself. The county finally took it over for back taxes and a year ago I was on the road moving from shelter to shelter. I met some really nasty people, and because I was so trusting and so innocent, I got taken advantage of. So finally I just decided about a week ago to become a prostitute, because that was what every man I ran into seems to want from me so they may as well pay for it.\" She said.",
        "\"Even the nice men I met when I lived on the farm. If they took me out to eat or to a movie, the next thing I knew their hands were on my titties or under my skirt. Now I understand what my mama meant when she told me that men like my Daddy were too rare to replace, so she may as well find a son of a bitch who could take care of us. Last week when I made my decision, I went out to find my first customer. I was only going to do blowjobs, because both of the two times that I've been fucked were against my will, and it hurt both times. Anyway before I actually got a customer, I got arrested. So I now have an arrest record for solicitation and no way to pay the fine. But also in the eyes of the law I am now a prostitute.\" She looked up at me then. \"Okay you've heard the short version of my tragic saga, so let's get to talking about your deal, because I'm starting to get sleepy. I don't think you want to fuck me while I'm asleep, but if that's your kink, it could probably happen. I've been fed bathed and I'm warm. You don't know how relaxed I am right now.\"\n\n\"Victoria, I think you have the wrong idea about me and what I want,\" I told her. \"I guess I led you to that conclusion because I was trying to scare you when you first got here. But that was partly your fault, because you were being such an asshole. My name is Jason, I'm a normal guy. I don't think I'm weird or kinky at all. I have a good job, I really try to be nice to people, but I'm just really lonely.\n\nI got divorced a while back. It was rough, it was long and it took a lot out of me. My ex wife is beautiful, rich , spoiled, conniving and a cast iron bitch. We got divorced because from the time we were dating, she's been cheating on me. I was stupid at first, so when I caught her before we were married, I believed her when she told me that it wasn't what I thought. But a little over a year ago I came home early from work and caught her doing it in our own bed. Even when I caught her she schemed and planned and did everything she could to avoid divorcing me. She even tried to get pregnant and lock me into staying married to her. So I haven't dated or had sex with anyone other than a porno movie and my right hand in nearly a year. I guess I have trust issues now when it comes to women because Dana really hurt me bad.\" She was shaking her head as I said this.\n\n\"So tonight I'd decided that I just didn't want to be alone anymore. I've never even spoken to a prostitute before you.\" I laughed as I said that part. \"Anyway here's my deal, I want to hire you, but not the way you think. I'll pay you 30,000 dollars to live with me for a year. At the end of the year we can both go our separate ways. I think it'll be good for both of us. For you it'll mean you have a place to stay and be safe, food of course, and you'll end up with more than enough money to get yourself an apartment or go to school or do whatever you want.\" I noticed that she was sitting straight up on the couch now.\"\n\n\"We can iron out all of the details in the morning if you're really sleepy,\" I said.\n\n\"Hell no, let's talk now,\" she said. \"You'll pay me Thirty thousand dollars, to live with you for a year? Are you serious?\"\n\n\"Yes,\" I said. \"Isn't that enough?\"\n\n\"Okay what do I have to do for you,\" she asked suspiciously.\n\n\"You know the usual stuff,\" I said. \"Talking to me, oh and the cooking, you have to do the cooking too. And the shopping.\"\n\n\"Nuh unh, we do the shopping together,\" she said, \"What about the cleaning? Do I have to do the cleaning too?\"\n\n\"Nope, we have a cleaning lady. She comes in twice a week,\" I added. \"But you will have to go out with me sometimes. We do have a bunch of company events where I'd need you to be charming and pretend to like me. But if you did a good enough job at them I could see giving you a bonus.\" I said.\n\n\"What about personal time off,\" she asked. \"What if I need time to do something?\"\n\n\"Well as long as you're discreet, It would be Okay,\" I said, noticing that she looked at me funny.\n\n\"What the hell are you talking about, Jason?\" she asked pointedly.\n\n\"Well if someone that I know or work with, saw you out on a date, it would make them think I'd found another woman who was cheating on me.\" I said.\n\n\"When I said time off, I meant to like go and visit my mom, idiot,\" she laughed. \"I don't have a boyfriend or anyone to date, I'm a prostitute remember.\n\n\"Okay what about clothes and stuff,\" she began. She seemed to be excited about the idea.\n\n\"Well, when it comes to parties or special events I'll pay for your clothes, but other than that I'll advance you as much money as you want for expenses but your personal items come out of your salary.\" I said. She appeared to be thinking about it.\n\n\"You're a cheap fake boyfriend,\" she laughed. \"I...\" she began.\n\n\"Okay I'll pay for your clothes too and you can drive the Jeep,\" I said. I was losing this negotiation far faster then I'd expected.\n\n\"Okay that's better,\" she smiled, \"But that wasn't even what I was asking about. The way I see it, there are four things we still need to discuss. Number one, what happens at the end of a year and why did you pick a year?\" \n\n\"I figured at the end of a year you'll have thirty grand, and be ready to do something with your life. I'd also possibly be ready to try for a real relationship again. At thirty two I'm still young enough to get married and have some kids.\" I said.\n\n\"What if you're not ready to try a real relationship yet or I want more money?\" she asked.\n\n\"Then I guess we could re-negotiate and I'm sure you'd expect more money,\" I said, \"But a year is a long time, let's see what happens.\"\n\n\"Number 2, we're going to all of your company events, what about non company events or if I want to do something?\" she asked. \"I'm from a small town, and an even smaller more isolated farming community, I might like to go out and do some things, so in order to preserve our fake relationship and not have people see me out alone or with some other guy, Will there be times when my fake boyfriend takes me out on dates and lets me pick? She asked.\n\n\"We can do that, but for every one that you get, I get a non company date too,\" I said.\n\n\"Number 3,\" she said. \"How often do I have to have sex with you?\" she asked.\n\n\"I already told you I had and still no intentions of raping you,\" I said seriously.\n\nShe stuck out her hand and I grabbed it and we shook on the deal. \"What about number 4?\" I asked.\n\n\"Where do I sleep?\" she asked. \n\n\"Uhm you did say the bed was huge.\" I grinned. We separated the bed into two halves by placing a line of pillows down its center. Victoria fell asleep almost as soon as her head hit the pillow. I awoke early as I always did and found myself lying in bed staring at her for a while. I wondered whether or not I'd made a huge mistake. I went out by the interior door. There was a coffee shop in the building's main lobby, I stopped in and got three French vanilla blends, and 2 big sugary glazed donuts. I gave one of the coffees and a giant donut to the building's doorman Pete.\n\n\"Hey Pete later on I've got someone I want you to meet,\" I told him. I dashed back inside the loft and tried to figure out what I'd be doing in a few weeks when the snow came down. I had pretty much given my jeep to my new fake girlfriend and my Stangs didn't really like the snow, and I wasn't going to subject them to it.\n\nI ran up the stairs and jotted down a quick note telling Victoria that it wasn't too late to back out of our deal, but if she wanted to, there was $500 dollars on the kitchen counter, and to have a nice life.\n\nI also mentioned that we'd be shopping all afternoon so she should be dressed and ready to go when I got back at noon. I left her my cell phone number as well. She was rolled up in a tight little ball with the blankets all over her lightly snoring. She had the covers pulled tightly up to her chin, and that hair was all over the place. If it was the last thing I did I was getting those fucking blonde streaks taken out of her hair. On impulse I leaned over and kissed her lightly on her forehead. Then I threw another blanket over her because it would be a little bit colder in here for a few minutes.\n\nI got into the Black Mustang mostly because it was slightly quieter and I was really trying not to wake her. But I didn't see any movement from her as the garage door opened.\n\nHalf of my office staff stared at me as I got off the elevator. I was sipping my coffee as I walked towards my office. Less than 5 minutes after I sat down in front of my computer, I heard the sounds of high heels clicking angrily down the hall. They barely paused as they hit my outer office, I heard a brief exchange of angry words starting with, \"You can't go in there without permission, you're not married to him anymore,\" and ending in a different voice saying, \"Fuck you.\" I didn't bother to look up as my door was opened and then slammed loudly and hard enough that the frame shook and the sound echoed throughout the building.\n\n\"Good Morning Ms. Navarro,\" I said Sarcastically.\n\n\"That's not my God damned name,\" she shrieked.\"My last name is Burton, just like yours. Who the fuck is she?\" she screamed at me. \"I've been nice enough to let you play your little game, and have your little divorce. But you're going too Damned far with this shit. I will not put up with you cheating on me. I'm your wife for fuck's sake. What do you think you're doing. You need to get rid of that bitch today. Or I will.\"\n\nShe stood there in a long fur coat. Glaring at me as I refused to even look up from my screen. Actually I did find it interesting that Dana already knew about Victoria. She always seemed to know things about me. But this was something more. I'd assumed for a while that someone in my building had been feeding her information, but no one in the building knew. \n\n\"Dana are you intending to just stand there glaring at me all day,\" I asked. she didn't say anything. I pushed a button on my desk and Myrna my secretary came in. \n\n\"Myrna, can you turn down the heat in the office a couple of degrees? Ms. Navarro is making it really hot in here with all of the steam coming out of her ears. And maybe you should bring her a chair and some coffee, it looks like she's going to be there for awhile.\"\n\n\"Yes sir,\" she said. \"Do you think Ms. Navarro would like cream and sugar?\"\n\n\"My fucking name is not Navarro, any fucking more,\" screamed Dana. \"We're still fucking married whether you like it or not. So you may as well get used to the idea and start acting like it, before we're too old to have any babies. And stop bringing other women home with you.\" Dana turned on one spike heel and stalked out of the office slamming the door just as loudly on her way out as she did on the way in.\n\nMyrna smiled up at me after Dana left, \"Is what she said true? did you really go out and meet someone finally?\"\n\n\"Yes Myrna,\" I smiled, \"I went out and met someone.\"\n\n\"No wonder you're so damned happy, but why'd you tell the wicked witch of the west?\"\n\n\"That's just it Myrna, I haven't told anyone. I need you to find me a very good PI firm. I'm going to go ahead and go to my morning meeting, then I'm off for the day. I'll probably be home at about five. Bring a couple, maybe three in, and interview them. Have whoever you pick at my loft at 6.\n\nThe morning meeting was usually great for me, today I found it boring. I just couldn't wait to get out of there, and get home. I hadn't been this excited about leaving work since before I'd discovered that Dana was cheating on me.\n\nAn Hour later after a shortened meeting the garage door opened and I saw her sitting there on my sofa. With her arms crossed over those incredible breasts. I closed the car door and walked over to her. I was slightly taken aback by the fire in those green eyes. She was pissed about something. I wondered what it was about me that made every woman I knew just get pissed at me.\n\n\"Hi,\" I said softly. She erupted in a flurry of babbling and tears. I didn't know what to do so I pulled her over to me and hugged her. She tried to get away but I wouldn't let her so finally she calmed down.\n\n\"What's wrong Victoria?\" I asked.\n\n\"I thought we had a deal,\" she said.\n\n\"We do,\" I replied looking at her.\n\n\"Then why did you leave money on the counter, like I was still a whore?\" she screamed. \"I had a nice dream, I dreamed that I was all warm and happy, lying in a nice bed, and that you...\" she started sniffling. \"Then I went down stairs this morning and found your note and the money. And then that evil bitch was outside yelling for me to come out. so I pretended not to be here.\" she cried.\n\n\"What evil bitch?\" I asked already knowing the answer.\n\n\"She had on a long fur coat and she was screaming that you didn't need me because you had her. And she's really pretty looking so I thought that maybe you'd found someone else. and that was why you left me the money.\" she said wiping a tear.\n\n\"Victoria, that was Dana, my crazy ex-wife,\" I said. \"I only left the money in case you had changed your mind, about our deal. I haven't, so can we go shopping now? You need some clothes badly, every time you breathe I think your breasts are going to come out of that shirt.\"\n\nShe looked at me warily and followed me to the car. \"I was a little confused about what was real and what I had just dreamed,\" she said. \"Sorry I doubted you.\" she said as she sat down next to me. She settled down into the Mustang's soft leather interior. \"Did you kiss me goodbye, this morning, or was that part of the dream?\"\n\n\"Sorry, I did do that,\" I said.\n\n\"Non-public kisses cost extra,\" she said smirking. \"I'll start a tab for you.\"\n\nI've always hated shopping, and expected today to be more of the same. I was pleasantly surprised though because shopping with Victoria was a different experience. She was frugal, she insisted on trying on every single piece of clothing and modeling it for me. Before we'd found the first outfit, getting her a couple of good bras to hold those breasts in was a priority. We bought her skirts, dresses, pants jeans, blouses, sweaters, shoes, boots and of course under wear. She was too embarrassed to go into a lingerie store, so we bought her panties and bras from the regular clothing store. I kept all of the receipts and presented them to her when we were done. The total was just slightly north of 4 thousand dollars. Her eyes bugged out when she saw the bill.\n\n\"This one is on me,\" I told her. \"But the rest of your clothes, except for the ones bought specifically for company functions, are on you.\"\n\n\"I was going to give it back to over the next week,\" she said.\n\n\"How?\" I asked her, looking at her suspiciously.\n\n\"Well those morning kisses of yours are five hundred dollars each,\" she laughed. \"I figured that by the end of the week, we'd be even.\"\n\nThat left us with 2 problems, the first being that we had to arrange to have all of her clothing except for the most essential items delivered because there was no way to fit most of the stuff in my car. We'd left most of the items in the stores and made a list of which stores we had to go back to. Most of the stores also didn't deliver. So I called Myrna explained the situation and told her to handle it.\n\nArmed with the few packages that we could fit into the Mustang's tiny backseat and tinier trunk, we headed for home. Our second problem was that we didn't have time to food shop, because we had to be home by six. We decided to go to a restaurant for dinner, which made Victoria smile.\n\n\"Do you always drive this fast,\" she asked me as we flew down the freeway.\n\n\"Pretty much,\" I replied.\n\nWe got to the loft only a few minutes before the phone rang. Victoria answered it and explained to Pete who she was.\n\n\"Hello,\" I heard her say into the phone. \"Hi Pete, I'm Victoria, his new fa... I mean his new girlfriend. Yep he's here. We just got back.\" She looked at me and I nodded.\n\n\"Yes Pete he's expecting them send them back.\" She put the phone down and smiled at me. \"I charge extra for answering the phone too.\" Then she ran upstairs.\n\nThere was a brief knock on the interior door a few minutes later. I opened it and ushered in two men and an attractive brunette. The men were not what I expected. When you think of Private investigators you think of some wrinkled old gumshoe. Maybe you see a Humphrey Bogart type who's lived too much of life, and seen it from all sides. These people were not like that. One of the men looked as if he'd just stepped out of a college class. The other looked like a business man, and the brunette, she was too beautiful to just sit in an office listening to tapes of people cheating on their wives.\n\nWhen she smiled at me, I smiled back at her. \"Okay Mr. Burton, we have some preliminary information from your assistant Mrs. Stevenson, but we'd like to start out if you don't mind by hearing more of the specifics from you.\"\n\n\"Well,\" I began. \"This morning I had a visit from my ex wife. She seems to know more about me and my personal business than I'm comfortable with and I'd like to find out how she knows.\" They looked at each other, in that manner that people who have worked together for a long time have. The nerdy guy looked at the brunette and she nodded. He excused himself and left the loft. \n\nA few minutes later he came back carrying several cases. He opened them and took out various pieces of equipment and he and the larger man started walking slowly around the loft. The larger man began in the garage area and checked inside and under all of my cars. The smaller nerdy guy started in the kitchen area and worked his way around. The brunette seemed happy to just sit there on my sofa and explain to me what they were doing. When the men were done with their sweeps, they came back and announced that my loft and cars were clean.\n\n\"That presents another possible scenario,\" explained the brunette. \"You seem certain that your ex doesn't have a person in the building watching you and reporting on you, which since as you claimed, you came in through your private entrance, seems true. That means that there is the possibility that your ex has a PI firm watching you. That way she'd get reports on where you go, whom you go there with, and when.\"\n\n\"What can you do about that?\" I asked.\n\n\"Well we could also follow you around and try to spot the people she's hired. On the other hand we could also try to follow the money trail by uhm... investigating her finances and trying to find out who she's paying to follow you around.\"\n\n\"Do both,\" I said. \"I'll also have something else going on and I'll coordinate that with you.\"\n\nI think the brunette was about to say something, but stopped suddenly. The nerdy guy dropped the device he was holding and it clattered loudly on the floor. \n\n\"Holy shit,\" someone said. It was like all of the air went out of the room. Victoria was slowly coming down the stairs, in a dress that I must have missed when she tried it on. It was a deep sea green color, and though they couldn't see them, I knew it would match the color of her eyes perfectly. The dress was cut very well below the knee which was why she was walking so slowly, but the taper of the dress molded itself to Victoria's nearly obscene curves. The dress was cut low enough in the front to show off her deep inviting cleavage. The shoulders were held by 2 tiny straps which were the only things distracting the eye from all of her alabaster skin. As I looked around the room, I'd expected to see the nerdy guy and his friend staring at her, and they were. What I hadn't expected was to see the brunette staring at her as well. In fact it had been her who made the \"Holy shit\" comment and she was standing there with her mouth open.\n\nVictoria came into the room and demurely crossed behind the couch I was sitting on. She came around and sat down beside me. She took my hand and looked at our visitors. I don't think any of them were capable or speaking yet. ",
        "As I introduced them to her she stood and shook the brunette's hand and simply waved at the guys politely. The most interesting thing to me was the comparison between Victoria and the brunette PI. First the PI was taller, but though bigger than Victoria she came off as being skinnier. This was due to the fact that next to Victoria it was as if she had no butt and no chest. The way she looked at Victoria made it beyond obvious that she was just as interested in her as the two men were.\n\n\"We'll be in touch, and we'll start our surveillance tomorrow,\" said the brunette as they got up to leave.\n\nAfter the door shut, Victoria turned and looked at me. \"How did I do?\" she asked. \"Was it Okay for my first performance as your fake girlfriend?\"\n\n\"Where did you get that dress?\" I asked her.\n\n\"You bought it for me today silly. I didn't try it on because I wanted to surprise you with it. I figured that since we bought pants and a skirt from the same designer that it would probably fit me, but it doesn't fit quite right. Do you think we should take it back?\" she asked.\n\n\"Nope, never even think about taking that dress back,\" I said.\n\nShe stood up and looked at me as if I was the village idiot. Then she turned around and showed me. \"It fits Okay in the front but it's a little tight across my ass. I was looking at in the full length mirror in the bathroom and since I only bought regular underwear they kept showing, so I had to take my panties off, it's too tight.\"\n\nShe kept standing there in front of me as if I could make the dress larger or her ass smaller by staring at it. Neither of which I'd ever do. The tent in front of my pants was testament to the effectiveness of the dress and it's fit. But then she made it worse, while I was still staring at her ass, she looked over her shoulder and flashed those huge green eyes, and I realized that there was a problem here. I'd been attracted to her from the moment I'd almost run her over, but this could easily get out of hand.\n\nThe next few weeks saw Ria (short for Victoria) and I settle into our lives together. We'd had our ups and downs, but my life with her in it was far better than my life without her. It was even better than my life with Dana had been at its best. Our first little tiff had of course been about her hair. I'd made her an appointment to get her hair done and told the stylist, not to cut an inch off of it, or try to curl it any more or try to straighten it anymore. Her hair is perfect just the way it is. Just get rid of those streaks.\n\nRia wasn't fond of the idea, because she thought the streaks of blonde in her hair made it less boring. But after a couple of days, she admitted it didn't really make much difference to her, and if I liked it she was okay with it too. Another problem we had to overcome was in bed. I had held up my promise about not raping her as she'd put it, and was having a hard time (excuse the pun) living and sleeping with her. Especially since after the few weeks were up the row of pillows wasn't deemed necessary (by her).\n\nThere were several mornings when I woke up in contact with a different set of pillows, or her leg over mine. I knew that the relationship was heading down a far different path than we'd agreed on. I didn't realize that she felt the same way until she called me at work one morning. Myna always put Ria's calls straight through no matter what I was doing. Unfortunately I'd been arguing with Dana about the party we were having for Kurt and Verna's anniversary at the time. I as usual just pushed the speaker phone button and Ria's voice came through. \"You left without kissing me good bye this morning,\" she said in an accusatory voice.\n\nDana grabbed the phone and threw it against the wall and stormed out of the office. \"Don't you dare bring that little bitch, to my parent's anniversary party,\" she screamed. \"You and I are going to the party together, like a married couple should and that's final.\" She naturally slammed the door on her way out. Victoria was much calmer, I thought as I tried to call her back. Little did I know that Victoria could be just as bad as Dana, and I was about to see it.\n\nAs usual I drove in through the garage door and expected to find Ria watching TV or relaxing. Instead she was pacing the floor in the living room. As soon as I came near her she started in on me.\n\n\"Jason what the fuck is this shit,\" she screamed, she almost fell kicking at a pile of boxes and items on the floor. At first I thought it was funny and then I was horrified when I realized that Victoria had found my porn and she was not pleased.\n\n\"Ria, when we first came to our arrangement it was clearly understood that there were limits to what we could or would do,\" I started. I'm a guy. I have needs,\" I shrugged.\n\n\"I'm supposed to be your girlfriend,\" she cried, \"Aren't I doing a good enough job?\"\n\n\"You're doing a great job,\" I said. I didn't tell her that she was doing too good a job in a number of ways. What had started out as just something to give me some companionship and get people off of my back about dating; had borne off the chain results. She was a great companion and my life was much better as a result of it. No one even tried to fix me up with anyone, any more, so that was taken care of as well. Some of my friends and colleagues were even asking me when the wedding date was. As another benefit, Dana literally hated her. They had never spoken, Dana couldn't even stand to be in the same room with her. I was looking forward to the Company's holiday celebration where they'd have to be. \n\nBut the bad parts were there too. First off Victoria still thought of herself as just some farm girl from a small town. She had absolutely no idea of the reaction men had to her. since she'd spent her teenage years trapped on an isolated farm, she simply had not learned the normal courting rituals. Then when she'd been plunged into the worst part of DC, among whores and murderers, it didn't help either her social skills or her dating skills either. She still spoke in terms of being raped whenever sex came up. I guessed it was because, that was all she knew. She saw movies about loving relationships, she'd seen her grandparents, and even her mom and her father together. But her own personal experiences had been nothing like those. Even though she often wrapped those long legs around me when we slept, we had very little contact. If she noticed it, or noticed any touching between us she quickly moved away and looked at me as if I'd broken a rule. One morning we'd awakened nearly simultaneously and were spooned against each other. My morning erection between those luscious ass cheeks, and one of my hands was on her breast. Her hand was on top of mine and she was pushing her ass into me. When I realized what was going on I almost came in my shorts.\n\n\"What are you trying to do you pervert,\" she'd screamed jumping out of the bed. I didn't point out to her that her hand was the one pressing mine into her breast or that she'd been the one pushing her ass into me, while I was just unmoving and accepting it.\n\nAn even worse problem was that I'd realized some time ago that I was in love with her. So standing there looking at the hurt in her eyes as she trampled my DVDs was not the time to bring that up.\n\n\"We could have talked about this,\" she snapped. \"I used to be a prostitute, you know.\"\n\n\"Victoria, I never think of you that way,\" I said softly trying to avoid a big argument. \n\n\"So instead you hide this and make me feel like a whore anyway?\" she snapped. \"for all I know you could be going out and doing it with someone else. No wonder that bitch Dana thinks you're still married to her. I can't do this anymore. I can't live with you like this for another 6 or 7 months. I want to leave now.\"\n\nI pulled out my checkbook and wrote her a check. She looked shocked and she started to say something, then I saw a few tears coming from her eyes and she just left the loft. I stood there for a long time thinking about things I wished that I said to her. Wondering why I hadn't gotten rid of the porn or at least hid it better. The whole loft just seemed emptier than it ever had. I went upstairs and looked at the dress she had laid out for the anniversary party tonight and sighed. She'd have been even more beautiful in that dress. \n\nI put on my suit and left. I went to the hall we'd rented and gave Kurt and Verna their anniversary gift. I spoke to my brothers in law and their families and several people I knew from work. Dana gravitated towards me, and seemed to be trying really hard to be nice. And in the spirit of the evening, I didn't argue with her. After about an hour I was ready to leave, I'd done my duty, and just didn't feel like being at a party even though I'd been looking forward to this evening. Dana was clasping my hand as we walked around and mingled. She was smiling from ear to ear. Myrna of course didn't endear herself to Dana when she asked the question everyone had been avoiding.\n\n\"Hey Boss, where's your sweetie?\"\n\nDana's smile faded, her blue eyes lightened and thinned. It grew colder in the immediate area. Dana, as I've described her before is classically beautiful. She wore a white shimmering gown and had very long, almost white blond hair. She was all Ice as she replied to poor Myrna. \"I'm right here you old bag, even someone as stupid as you are, should know after all of this time, that I'm not his sweetie, I'm his wife. And I'm right here beside him as I should be.\"\n\nBefore Myrna could say anything or do anything she might regret later, she was saved. There was a voice coming from behind me, that in a tone as warm as Dana's had been cold said, \"Dana, you're his \"ex-wife.\" That means \"used to be wife,\" he's not married anymore, and I think she was talking about\" me.\" I'm his sweetie, or girlfriend or whatever, and that's what \"I am,\" now and for the foreseeable future. I can understand your problem though; you still live in the past, and your glory days. I can see that you like things from 5 years ago, back when you guys were happy. I can see that by your dress, it was in style back then wasn't it?\"\n\nVictoria had arrived and she'd brought my smile with her. She stepped between Dana and me separating our hands as she did so. \"Don't think you're off the hook, just because I'm here,\" she whispered to me as she kissed me. \"We have a hell of a lot of talking to do.\"\n\nThe rest of the evening was great, we danced, we ate and Ria got to meet everyone. My co-workers, who hadn't met her before got to see what all of the fuss was about. The ones who'd already met her or seen her got to say, \"I told you so.\" Kurt and Verna loved her as well. The only thing that wasn't expected was that Dana left the party early. Go figure.\n\nWhen we got back to the loft, Victoria was back to being as angry as she'd been before we left. I found her check on the kitchen table. I asked her why the check was there. \"You gave me the full amount and it hasn't been a year yet. You also forgot to take out money for my clothes,\" she said.\n\n\"Jason why do you have so much porn?\" she asked softly. \"When I found it all, I was really upset. I makes me feel like I'm not enough for you, or you need someone else.\" She said. \"And I really need to know something. Half of those DVD's are about red heads. They're probably newer because they're blue ray. Did you buy them to make yourself like me or something?\"\n\n\"No Ria, they are newer but I bought them because I have a thing for red heads now, I guess,\" I said just as softly.\n\n\"I don't believe you,\" she said and she did seem to be smiling a little bit. \n\n\"Ria, for the rest of our time together I won't buy any porn,\" I promised. \n\n\"What about your needs?\" she asked. \n\n\"I'll manage,\" I told her.\n\n\"I still don't believe you have a thing for red heads,\" she said. \"I'm a red head and I've never seen this thing.\"\n\nWhen I went to bed that night she rolled over and threw her leg over mine. She reached up and kissed me the way she had hundreds of times before, but this time it was different. As she molded her lips to mine she opened her mouth and gently rubbed her tongue against my lips. It was almost as if her tongue was knocking on the door to my mouth to find out if my tongue could come out to play. My tongue joined hers in a playground of swapped fluids. Ria's mouth tasted like mint. The thing she wanted to see was ready for her too. It was harder than it had ever been in my life, but I had to take things very slowly because all she'd had up until now were bad experiences. I gently rubbed my hands down from her shoulders down her back and noticed that she was already naked.\n\n\"Ria are you sure about this?\" I asked her.\n\nHer only reply was to nod her head. At first I just kissed her and held her close to me. I rubbed and stroke her arms and back, getting little sighs and aahs from her. Then I trailed kissed down her neck and back. I wet a finger and gently rubbed her breasts touching and caressing them everywhere except her nipples. Victoria's nipples grew longer and harder as I continued to ignore them. \"Jason, will you please suck my titties, they want you to, very badly,\" she moaned. \n\n\"Maybe,\" I said sharply.\n\nI again licked everywhere on her breasts except for the nipples, she started to caress them herself. I noticed that she was rubbing her legs together fiercely so I pulled them apart. I kissed her left knee and then her right, and then licked my way down closer to her lightly furred vagina.\n\n\"Ria, we need a plumber, there's a leak down here,\" I said, as I took in her fragrance. I started to gently blow on her outer lips and inner folds causing her legs to wiggle and try to break free.\n\n\"Oh Jason, what are you doing?\" she gasped her breath becoming faster.\n\nMy tongue very gently and very tentatively began to lick and probe her inner, lips drawing closer and closer to their target. I had to release her legs to get closer to her core and they were waving around as she hunched her hips off the bed trying to push her pussy into my mouth.\n\n\"Oh shit that feels good,\" she said as I licked her clit, \"It's so tingly and so nice...Oh God. Jason what are you doing to meeeeeeee!\" Her voice had risen until it just trailed off.\n\nThen while her vagina was still sensitive I attacked from the other side. I went back to the nipples that I'd avoided earlier and just tweaked and sucked them for all I was worth. Her legs started rubbing together again and I knew it was time. So did she apparently because she'd reached down and starting rubbing my dick.\n\n\"Jason, is this the thing you have for red heads,\" she asked breathlessly.\n\nShe threw her leg over mine until we were front to front again and kept rubbing it. Then she positioned it at her opening and gently rubbed herself against it. I let her do it so she could stop at any time. I knew that I probably wouldn't last very long anyway. She eased herself onto it letting out a whoosh as the bell penetrated into her sensitive area. Then she waited for a moment.\n\n\"Ria we can stop,\" I said, thinking I'd kill her if we did. Then she started gently circling her hips and moving forward at the same time. \"Oh shit,\" she said. \"This isn't supposed to feel like this.\"\n\nShe rolled me over onto my back and kept circling her hips as she sank down further. She kept making those little cooing sounds as she descended to the bottom. Then as her hips touched my balls I felt her stop. Then she started lifting herself and falling back and quickly returned to just shifting her hips forwards and back. She was making little grunting noises and just fell over on me and started kissing me. I decided it was time for me to join in so I grabbed her hips and started helping her move them up and down. I also started to thrust myself into her in rhythm with her own thrusts. Her grunting and cooing got louder. \"Oh Jason, do it, fuck me,\" she said. \"I was trying so hard to hold back but it felt like my nuts were going to explode.\"\n\n\"Ria,\" I warned, but it was too late as the gusher of sperm I'm been trying to contain exploded all over her womb.\"\n\n\"Aaaah, aaah, not again! she screamed,\" as the warm flow of liquid started her 2nd orgasm.\n\n\"Jason,\" she said tiredly as she sank back down and just lay on my chest.\n\n\"Yes Ria,\" I answered rubbing her sweaty back.\n\n\"That was wonderful. You should have raped me way before now,\" she smirked.\n\n\"Uh Ria,\" You started this, remember.\n\n\"Well I should have started this a long time ago,\" she said. \"We're going to be doing this a lot from now on.\"\n\n\"I don't think so,\" I smirked. \"I don't do this for free, you know.\"\n\n\"Well, I've got thirty thousand dollars downstairs, let me know when it runs out,\" she said. As she said it she wrapped her arms around me and pulled the blanket over both of us. Just as I drifted off to sleep with her still on top of me, I heard her say, \"Jason, I 'm sorry, I didn't mean to mess up your plan for us, but I kind of love you. And I have for a long time.\"\n\nVictoria segued from fake girlfriend to real one, without losing a step. I f I'd been happy with her as my fake girlfriend, words couldn't describe the joy she brought me as the real thing. But there were clouds on the horizon. For one thing my detective agency had finally come back. Dana had hired someone to follow me around, and they were still at it. But there was another agency following me around that she hadn't hired, as well. They hadn't been able to find out who'd hired the third agency, but were trying to block their attempts at surveillance at every turn. It was almost comedic the lengths we had to go to just for a quiet night out. Someone would have to drive out in one of my cars, to lure the enemy PI's to follow them. Then Ria and I would drive away in the other direction in some crappy rental car. Outside of the loft we had very little privacy. Ria often just went shopping or out and didn't care. I guess she thought that they were after me and she didn't really matter.\n\nThen one day I came home and found Ria crying on the sofa with her bags packed. I jumped out of the car and ran to her.\n\n\"Ria what's wrong?\" I asked her.\n\n\"I have to leave,\" she said crying. \"I need to get as far away from you as I can.\"\n\n\"Ria I haven't bought any porn,\" I said.\n\nShe pulled me down and kissed me. \"Jason, always remember that I really do love you. That's why I'm leaving.\"\n\n\"No Ria, you're not leaving,\" I said. \"Now sit down and tell me what this is about.\"\n\n\"Jason a man came up to me in the market. He knew my name and everything,\" she sniffled.\n\n\"He also knew about me being a prostitute, and he said he was going to tell everybody. All of your friends and the people you work with. You'd be a laughing stock. Everyone would make fun of you, and your reputation would be ruined. All because of me,\" she cried.\n\n\"So he told me the only way to get out of it would be for me to have sex with him,\" she sniffled. \"So I thought about it, and I told him yes because I'd do anything for you, Jason. But when it came time to do it, I just couldn't go through with it, because that's what you and I do. It's something that we share and I didn't want to do it with him. But I couldn't let him ruin you so I have to leave,\" she sniffled.\n\n\"Ria you aren't going anywhere. Do you have a number where you can reach this guy?\" I asked her.\n\n\"Yes,\" she sniffled.\n\n\"Call him and tell him you'll meet him tomorrow, something came up and you just couldn't make it today.\" I said.\n\nRia called him and told her what I'd said. Naturally he agreed to it. She had to go alone tomorrow to a seedy little motel just a mile from the block, where I'd first met her.\n\n\"Jason will you still love me if I do this?\" she asked tearfully.\n\n\"Of course, never doubt it,\" I said. \"Ria this is only sex, what we have is love, and that's a lot more important. You do this one time and we just move on with our lives Okay,\" I told her as I hugged her. I hated lying to her but it was really better if she didn't know.",
        "Just as we got into bed that night my cell phone rang. It was a strange number and I was cautious as I answered it. \"Hello,\" I said brusquely.\n\n\"Jason, I'm sure you know who this is.\" I recognized Dana's shrieking voice almost instantly and my heart dropped.\n\n\"I need to meet with you tomorrow after work, I have some bad news for you, concerning that slut you're shacking up with. She's been cheating on you, and I have proof.\" I slammed the phone down. Tomorrow was going to be a hell of a day. My life was going from sugar to shit in 24 hours. Not only was I going to have to sit by and watch someone else fuck the woman I loved, or risk losing my career and respect. But my psychotic bitch of and ex wife now claimed to have evidence that Ria was cheating on me.\n\nAs soon as I turned out the light, Ria was on me. For a woman whom Dana claimed was cheating on me, she wasn't acting the part. But then it could be guilt. She tried to kill me with sex, and then started crying after it.\n\n\"I don't want to do this with anyone else,\" she sobbed. \"It won't be the same.\"\n\n\"Of course it won't be, Ria,\" I told her. \"And I don't want you doing it either. I probably shouldn't tell you this, but if everything works out you aren't going to.\" She turned to me with a shocked look on her face that was clear even in the dark. She fumbled around and the light came back on. Her arms were folded across her breasts, but weren't large enough to prevent those milky globes from being seen.\n\n\"Jason, what the hell are you planning?\" She asked. \"Here I was thinking that you couldn't love me if you'd let me go off and get fucked by some other guy, and you're planning something. Why didn't you tell me?\"\n\n\"The PI's we hired a few weeks ago found out that not one but two people from my past have hired Investigators to watch me, and you.\" I said. \"I'm sure that one of those people is Dana, but I still don't know who this guy is. They might be connected or they might not be. The motel you're supposed to meet this guy at tomorrow is being wired for sound and video right now. Both our PIs and a friend of mine from the police department will be there. I also have a lawyer working on getting your case thrown out and maybe clearing your record.\"\n\nShe started smiling again and threw her arms around me. We still, didn't get very much sleep that night because there were too many things that could go wrong.\n\nBright and early Ria, and I got up and took a shower together. She dressed in a skirt and sweater that while form fitting weren't very revealing. I was sure it would be frustrating for whoever was trying to do this to her, because it would be like one long tease that would last him for the rest of his fucking life. I knew where the place was, but I couldn't go there with her because she was supposed to come alone. I left about 20 minutes before she did and drove over with Our PI firm in their Van.  \n\nOur agents had also discovered that his PI firm would be watching the area to make sure she came alone. They were also going to probably sweep the room to make sure there were no bugs or cameras there. Unfortunately for whomever he was. His PIs weren't as good as mine. We had numerous devices planted but they couldn't be detected electronically until they were turned on and they wouldn't be turned on until Ria got inside the room. Several pieces of the furnishings also contained cameras that wouldn't be noticed because they were built into the items not placed on or near them.\n\nThe front display of both the microwave and the television had cameras built into them. The ceiling fan had 2 cameras in it. We had also found out the frequency that he would use to communicate with his people, and were prepared to jam it to prevent him from being warned when we moved in.\n\nRia walked up the steps thinking she was alone but in reality she was surrounded by people who either worked for me, or her mysterious stalker. As soon as she got near the room a man stepped out of it and looked at her. He passed a long wand all around her, close to her body but didn't actually touch her.\n\n\"She's clean, and God damn she's built,\" he said into the room. Ria walked tentatively into the room as the man who'd checked her, walked down the same stairs she'd just come up.\n\nInside the van I was nervous as I could be. Around me suddenly the video screen lit up and I could see and hear what was going on in the room. Sally Kincaid, the brunette female investigator who ran the agency I'd hired, told me to relax and it would all be over soon.\n\n\"He's not going to try to hurt her, he just wants to fuck her,\" she said. \"I'm sure it has something to do with you though. His people have also exchanged information with your ex wife's people too, so maybe there's a mutual grudge.\"\n\nAs soon as she said that, I had a damned good idea about who it was. Inside the motel, my suspicions were confirmed as Tim Pritchet stepped in front of the camera. \"I'm going to bust his ass this time,\" I said tensely. \n\n\"No ass busting until he says something the police can use,\" said Sally.\n\n\"Why am I here?\" asked Ria, on the screen.\n\n\"You're here of your own free will,\" said Pritchet. \"It's a simple exchange, you give me what I want and I don't tell everyone about your past, and by doing that ruin your boyfriend's career. I know I told you to come alone, but I actually wish you had told him, and brought him. Maybe it might be better if he was here watching me fuck you.\"\n\n\"You're blackmailing me,\" said Ria. \n\n\"That's a really ugly way to say that you don't have a choice,\" said Pritchet. \"But I'm sure you're going to enjoy this. Jason's wife did. As a matter of fact Jason is probably used to me taking his women from him. Once he finds out I've been with them he just gives them up and divorces them. He won't even need a divorce with you.\"\n\nThat was all I could take, I bounded out of the Van. \"Start the jammer quick,\" I heard Sally yelling. It must have worked because there was no one in my way as I headed up the stairs. I kicked the door open just in time to see Ria running around a couch being chased by Tim Pritchet.\n\n\"It took you long enough,\" she smiled. \"I was beginning to think I was going to have to run out of here.\"\n\n\"Jason,\" screamed Pritchet, his voice rose to the pitch of a teen-aged girl's when he saw me.\n\n\"I know Tim, \" I said.\" Just like you told me last time. It's not what I think, right.\"\n\nBefore he could answer I punched him in the mouth. Then from behind him Ria took her shot and kicked him in the nuts. Before she could do anything else we heard footsteps running up the stairs.\n\n\"Is that him?\" asked a large man leaning over Pritchet who was cowering on the floor still holding his nuts. \"Why's he on the floor like that?\"\n\n\"He was chasing Ria around the table after admitting he was trying to blackmail her. As I came into the room he fell and hurt his nuts on her foot.\" I said innocently. Officer Nelson looked over at Pritchet who was still rolling in pain on the floor. \"Why is his mouth bleeding?\"\n\n\"Uhm he must've hit it on something as he fell, \" I said. Pritchet was too busy screaming and holding onto his bruised nuts to comment. Nelson called an ambulance for Pritchet. The rest of us, Victoria, Sally, her two operatives and I all went down to the station. The District Attorney, was not happy with the circumstances or the way the evidence was brought to him. Most of this is illegal and can't be admitted as evidence, because of the circumstances under which it was gathered. My lawyer quickly cleaned up the unusual circumstances by Telling the DA that there was no unauthorized sting operation. \n\nMy lawyer was as smooth as honey when he explained how, after the circumstances of my first divorce, which had been caused by my wife cheating on me with Tim Pritchet, I'd developed trust issues. I'd met Victoria and fallen in love with her, but then I'd suspected her of cheating on me. So I'd hired Sally's PI firm to get me evidence of her cheating, but when we followed her to the motel room today, we'd discovered that she was being blackmailed and had proof. We didn't know what to do about it, so since I was friends with a cop we called him, to ask for advice and he'd come over and arrested Tim who seemed to take some kind of sadistic pleasure in ruining my relationships when he was already married.\n\nBy the time we left there nearly 3 hours later, Pritchet had been booked for Black mail, attempted extortion, and several other crimes. The PI firm he'd hired was in trouble and all of their operatives would lose their licenses for aiding in an illegal activity. The DA was also going to purge Ria's record.\n\n\"I'll still be your whore,\" she whispered to me.\n\nAfter all she'd been through I didn't want to tell Ria about Dana and her claims. Mostly because I had the feeling it was all bullshit. Given the choice between a reformed prostitute and A cheating rich girl, I guess I'd have to believe the hooker, especially since I loved her. So I told Ria I had to go to the office for a few hours, so she should go home and get dressed up because we were going to celebrate tonight. \n\nI had Dana meet me at my office to present her evidence. Myna looked at me as if I was a snake as she ushered Dana into the office.\n\n\"Jason baby, I'm so glad you wanted to talk to me,\" chirped Dana. \"Soon this ugly episode in your life will be over and maybe we can finally get back on track, and start our family.\"\n\n\"Just say what you came to say, Dana,\" I said coldly.\n\n\"Well, I was supposed to have a video of her cheating but my source didn't come through,\" she told me. \"Jason you're not going to want to hear this but she was cheating on you with Tim Fucking Pritchet. I don't have the video but I have other proof of something just as bad. Look at this.\" she reached into her purse and pulled out a copy of Victoria's citation for suspected solicitation.\"\n\nA really evil idea formed in my mind. \"This doesn't prove that she did it, this just proves that she got caught in the area while they were arresting people for solicitation.\" I said.\"It's not like they actually busted her in the act of soliciting.\" I smiled at Dana as I said this, and looked at her breasts.\n\n\"You already knew about this didn't you, Jason?\" said Dana looking at me. \"The idea that she's a whore actually turns you on doesn't it. It brings out that kinky side that you and I played with during the time before we divorced. \" She looked shocked but she was turned on too. Her nipples had hardened noticeably.\n\n\"I can play that game a lot better than she can, Jason. I can be the filthiest whore you want me to be,\" said Dana. \n\n\"I don't know Dana, \"I said skeptically.\n\n\"Oh please just give me one chance,\" she whined. \"I'll do anything.\"\n\nI told Dana, how I wanted her to dress, and where to meet me. She was actually smiling as she left my office. \"Myrna did you hear all of that?\" I asked, since the light on the intercom had been on ever since Dana walked into the office. \"You may as well come with me to see the end of this.\"\n\nI called Nelson again and told him what was going on. With another collar like the one this morning he'd be a cinch to make detective.\n\nI quickly drove back over to the first warehouse that I'd worked for Dana's father at. I got two of our truck loaders to help me out. Though they were great guys, I have to admit that I picked them for their appearance. Steve Davis was a huge Black guy. He was soft spoken and was loading trucks to put himself through college. The other guy Eric, was Cuban. Eric looked like a gang banger but was married and totally devoted to his wife. I promised them 500 dollars each for what they thought was a prank.\n\nI also called the local newspaper and told them that there was a prostitution ring operating in the area they call the block, and someone needed to do a story on it. The editor wasn't interested, he told me the block was full of prostitution and drug rings, and it was great because it kept them out of the rest of the city and away from nice families. I told him this ring was different because it was made up of the wives and daughters of very affluent business owners and politicians, and that he should send a crew of photographers over there, and I gave him a street. I told him if they didn't get pictures to start the story in under 2 hours he would only have wasted 2 hours, but it could be a great story and a scoop.\n\nForty minutes later Myrna, Ria and I watched from the tinted glass windows of my jeep as Dana Navarro stood in front of the same derelict storefront I'd first seen Ria at. She had her long blond hair braided into two pony tails like an extremely dirty schoolgirl, and teetered on high spiked heeled boots. She had on a skirt so short it could have been a belt and since you could see most of her ass every time she bent over, it was obvious that she wasn't wearing panties. Her breasts thought not the size of Ria's were on display and her nipples threatened to punch through the thin shirt she was wearing.\n\n\"Ria, how does it feel to be back on the block?\" I asked her. Before she could answer, I pointed to the news van that was already recording the scene. They didn't know who Dana was yet, but their station had done enough coverage of her at charity events that they soon would.\n\nAlmost as if on cue My Screaming Yellow Mustang turned the corner and slowly approached Dana. She quickly trotted over to the car and as the passenger window was lowered stuck her head inside. I'm sure she was surprised to see that I was not the one driving my car. I'm sure she was even more surprised later on when she saw the video of herself on the news later on, with her head inside the car and her naked ass on clear display. She might've been able to say it wasn't her, but that chance went away when she heard the police car pull up and chirp his siren. She stood straight up and the photographer and the video guy both got great close ups of her face. Eric had pulled off leaving a trail of my fucking tires when the police car pulled up even though he knew that Nelson wasn't going to chase him. (not that he could've caught my car in a police cruiser anyway)\n\nDana was arrested for Indecent exposure, lewd and lascivious behavior, and solicitation. An hour later Myrna, Ria and I were having dinner with Kurt and Verna when Dana called them to come and bail her out. She swore that it was all a misunderstanding and tried to blame it all on me. Kurt didn't react at all he simply bailed her out and told her to take a long vacation, out of town.\n\nKurt, and Verna had a talk with me later to ask me how much of what Dana had said was true. Since I had always leveled with the old man I admitted to him that I had done it to get Dana off my back once and for all. I also told him that the reason Dana had done it was because she thought that she could influence me to get rid of Ria because she had once been arrested for suspicion of solicitation.\n\n\"I have two questions for you he told me,\" as he gave me that no nonsense look of his. This man was the closest thing to a father that I'd ever had, so I knew I had to pay close attention to what he wanted.\n\n\"Question number one,\" he began,\" Did she really have the arrest record?\"\n\n\"Yes,\" I admitted, as Verna came over and sat by him. I think I've already mentioned that I love Verna, she was the classiest woman I'd ever met. I just wish her daughter had been more like her. If she had we'd probably still be married.\n\n\"So she really was a prostitute?\" he asked as if he was having trouble saying the word.\n\n\"Well sir, I guess so,\" I said seriously.\n\n\"Question number two,\" he said, \"Do you love her?\"\n\nThis time there was no hesitation in my voice at all, \"Hell yes, sir.\" and I realized that I did. And far, far more than I'd ever loved Dana.\n\n\"Then you know what you have to do,\" he said seriously, \"I'll start making the arrangements immediately.\"\n\n\"Well Sir, I understand why it has to be this way, and I'd really prefer it if you would allow me to resign instead of having it go on my record as being fired.\" For the first time ever I saw a reaction from Verna that I didn't agree with she simply looked at Kurt and laughed. I couldn't believe she would take my resignation or firing so casually.\n\n\"What the hell are you talking about?\" he asked, \"Is that the only thing you know how to say? Is that what they taught you in school? Whenever something happens quit?\"\n\n\"I don't understand sir,\" I said.\n\n\"Verna, how long have we been married?\" he asked her.\n\n\"Thirty eight years,\" she said smiling. It was the smile of a woman who looked back on her life and loved every minute of it.\n\n\"Where did we meet again?\" he asked her, for Ria's and my benefit, since they both obviously knew where they met.\n\n\"Las Vegas,\" she said smiling again.\n\n\"Where in Las Vegas?\" he asked, again for my benefit.\n\n\"At the bunny ranch,\" she replied, \"I worked there, and no Jason, I didn't wait tables or serve drinks, or do cleaning, I was a prostitute.\"\n\n\"So sir what are you saying that I should do?\" I asked.\n\nThree days later in a ceremony with Kurt, Verna, Myrna, Kurt Junior and his wife, George and his wife, my old buddy Tom from college, recently promoted Detective Nelson, Sally and her operatives, and fifty or so people from work, I married Victoria. Dana was also forced to attend but she wasn't happy about it."
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "mustang",
        "romance",
        "pi vs pi",
        "subterfuge"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/back-on-the-block-ch-01"
}