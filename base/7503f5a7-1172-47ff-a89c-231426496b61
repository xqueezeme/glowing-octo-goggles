{
    "title": "Alex's Gifts Ch. 20",
    "pages": [
        "Healing Wounds\n\nAlex jumped into his jeep in the YMCA parking lot. He'd quickly given up trying to reason and rationalize his shower room debauchery with his new boss Emily. Throw it on the pile. Carrie was the only person he could talk to about it, and he doubted they'd have time alone together anytime soon. He owed Jenny a date tonight and didn't intend to let anything interfere with his plans.\n\nA buzzing sound roused Alex out of his reflection and he picked up his phone. Twenty-seven missed messages, all from Ben. He didn't bother reading them, he had a good idea what his best friend was saying and intended to pay him a visit on the way home. He wasn't looking forward to facing Ben's wrath, but it had to be done; the longer he waited, the greater the damage would be.\n\nDiverting his attention momentarily, Alex dialed Jenny's number. Her cheerful voice greeted him, \"Hey, Alex.\"\n\n\"Hi there. Still on for tonight?\"\n\n\"Absolutely. I'll be at the store until six.\"\n\n\"Okay, I'll stop by then,\" Alex said, then hung up after exchanging goodbyes. It was nearing five o'clock and he didn't have time to waste. He drove out of the parking lot and turned down the road towards Ben and Megan's house. Five minutes later he pulled behind his friend's car in the driveway and let himself into the house. Upstairs, he knocked on the door to his room.\n\n\"Ben? It's Alex.\" After several seconds the door swung open forcefully. Out of the corner of his eye, Alex just managed to catch an object rounding towards his head. He leaned back in surprise, taking a glancing blow to his cheekbone while Ben's fist followed through and impacted the door frame with an audible crack.\n\n\"Fuck!\" Ben blurted, grasping his injured hand while Alex rubbed his face.\n\n\"Feel better?\" Alex spat and then moved his jaw in circles to make sure nothing was out of place.\n\n\"Fuck you!\" Ben howled. Alex shoved him out of the way and went into his room. Ben cradled his hand gingerly as he turned in surprise at his friend's brazen act.\n\n\"Look, I might deserve that, but you need to calm down before you hurt yourself,\" Alex said, rounding on his friend and trying his hardest to remain level headed.\n\n\"Why did you do it?\" Ben bellowed, the shooting pain in his hand feeding his rage. He'd already fucking hurt himself.\n\n\"I told you exactly what would happen if you kept that camera running,\" Alex said, glaring at his best friend.\n\n\"But with Megan? My sister?! That was some sick shit, man.\"\n\n\"What we did was her idea, not mine.\"\n\n\"Bullshit!\" Ben snapped.\n\n\"Ask her if you don't believe me. Ask Becky too, for that matter.\"\n\nBen sighed in pain and sat in his desk chair. \"Becky told me. I watched the video while she was here.\" His breathing slowed as he began to calm. His throbbing hand was beginning to distract his anger rather than enhance it.\n\nAlex sat on Ben's bed and said nothing, waiting for his friend to come to his senses.\n\nBen examined his injury, wincing in pain. \"Probably broke my fucking hand. Fuck!\" \n\nAlex got up and left the room. Downstairs, he collected a bag of ice and a towel. While returning to Ben's room, he ran into Megan who had just walked in the front door.\n\n\"What'd he do?\" she asked, obviously concerned as she grabbed his chin and turned his red cheek towards her gaze.\n\n\"It's fine, he hurt himself worse. I'm handling it.\"\n\n\"Alright, tell me how it goes. And don't be stupid, Alex.\" Megan was surprised it came to blows. She didn't want Alex or her brother getting hurt over something she'd instigated, even if they did deserve some punishment for what they'd done.\n\nAlex nodded and went back into his friend's room. \"Here,\" he said, handing Ben the ice and towel.\n\n\"Thanks,\" Ben grumbled. \"How long have you and Meg been...?\" He trailed off, unwilling to describe what he'd seen them do.\n\n\"Since Casey's party. The day before, actually, when I came here to set up the firewall. Apparently, she's been into me for a while,\" Alex said and shrugged.\n\n\"And Becky?\"\n\n\"I've never done anything with her before. She wasn't part of the plan. Megan wanted her involved.\" Alex sighed. \"Did I fuck that up for you?\"\n\nBen shook his head and couldn't stop himself from smiling. \"Once I got back I was going to do what you said and take the camera down. But Becky was still here, and she didn't let me off that bed for two hours.\"\n\n\"Good. And just so you know, I told Becky to wait around for you. Not that she needed convincing. I guess I sort of ruined her plans too.\"\n\nBen grinned to show his appreciation. \"After we did it for like the fourth time, she told me what you guys had done. She said she felt bad about it, about me, I guess,\" Ben said, hanging his head. \"She made me play the video and when it got to her part she said sorry and that I should call her if I wanted to, then she left.\"\n\n\"Did you?\"\n\n\"Yeah, just did. We're going out tonight.\"\n\n\"Good. I'm glad. I felt the worst about that but Megan was insistent. She wanted to teach you a lesson and I couldn't say no, I already felt bad enough about the part I played in all this,\" Alex said, shaking his head.\n\n\"So you told her? She already knew when you came over here to talk to me?\"\n\nAlex nodded. \"She got suspicious and forced my hand. But I was planning on telling her regardless.\"\n\n\"I bet she was pissed.\"\n\n\"You don't know the half of it, man,\" Alex said and shuddered for effect. \"She's fine now, provided this ends,\" Alex added, nodding at Ben's closet.\n\nBen continued to look at the floor, clutching the bag of ice against the back of his swelling hand. \"I, uh, have a confession to make.\" Not waiting for Alex to respond, he continued quietly. \"I put that video up online, on a website I know where people sell homemade porn. I was pissed, I hope you aren't mad. The masks, the crazy shit you and Megan were saying about being brother and sister...\"\n\nAlex chuckled. \"The roleplay was Megan's idea. Your sister is a piece of work, man.\"\n\n\"I'm figuring that out,\" Ben replied.\n\n\"Look, I don't care that you posted the video, as long as it can't be traced back to the girls. I had a feeling you'd do something with it.\"\n\n\"I took precautions. It's made almost two grand since last night,\" Ben said, then looked up and grinned.\n\n\"Holy shit!\" Alex exclaimed.\n\n\"Apparently it's a popular category. Who knew? People are going nuts for it, dude. They want more. Check this out,\" Ben turned to his computer and awkwardly pulled up the website with his left hand working the mouse. There were dozens of comments: \"Hot as fuck!\" \"I want more!\" \"Do it from other angles\" \"I want to see her face\" \"Look at the size of that cock!\" \"I bet her ass is so tight\" \"More!!\" Ben clicked through and eventually landed on his account page. A total showing over three thousand dollars in purchases flashed across the screen.\n\n\"I didn't think people actually paid for porn,\" Alex said, shaking his head.\n\n\"I know, dude. It's the highest grossing video this month and it's only been up a day. All the other top sellers are the same. People pretending to be related. At least I assume they're pretending,\" Ben shrugged.\n\n\"Niche market.\"\n\n\"I guess. So what do you think?\"\n\n\"About what?\"\n\n\"Don't play dumb. That's a shitload of money. We could be rich!\" Ben said, hoping his friend was following his implication.\n\nAlex canted his eyebrows. He already was rich and Ben knew it. \"If you need money...\"\n\n\"Oh fuck off with that. I don't want your charity,\" Ben spat. He'd never accepted Alex's help directly and Alex very rarely offered it anymore.\n\n\"How is it any different? I give you money, or I let you record me doing it with your sister so you can get money.\"\n\n\"Everybody wins,\" Ben stated flatly. He was too proud to take Alex's money, but apparently not too proud to watch his friend screw his sister. \n\nAlex was used to Ben's mixed bag of morals and didn't argue the point. \"Let me go talk to Megan,\" he said then stood and stopped once he reached the doorway. \"That stays off,\" he said, pointing at the closet. \"I'll know if it doesn't,\" he added, holding up his phone. Ben nodded and Alex crossed the hall to Megan's room. He knocked lightly and entered once he heard a response.\n\n\"Hey, got a minute?\"\n\n\"Sure,\" Megan smiled cutely and turned from her laptop. \"How'd it go?\"\n\n\"Fine. He's over it. I guess Becky did a number on him then told him about it. They're still together, so he's happy. He was coming back here to shut it all off after our fight.\"\n\n\"Good,\" Megan said.\n\n\"There's more...\" Alex said, trailing off. Megan sat and listened to him explain Ben's proposition. At first she was hesitant, but once she heard how much money could be made she was more in favor. Mostly it was the thought of other people watching her that did it. The closet exhibitionist could finally have an audience without revealing her identity.\n\n\"I'll do it. But I have a few rules.\" Alex nodded and she continued. \"First, he can't turn on the camera. All that goes away. You and I are the only ones with access to it. Second, I get final say if the video gets posted. We're also going to keep wearing the masks, nobody can find out who we are.\" She said the last part with extreme emphasis, knowing what it would do to her reputation as a freshman starting college in the fall. \"And I want half of the money,\" she added, almost as an afterthought.\n\nMegan sat quietly in thought for a few seconds before continuing. \"He has to stay out of my room. Always. If he comes in here then I'm done with him. And if he gets some perverted idea about him and me, I'll kick him in the balls so hard he won't be able to make babies.\"\n\nAlex chuckled at the fiery brunette. \"Alright. He'll agree to all that. There are a couple of things he's going to want, though.\"\n\n\"What?\"\n\n\"He'll want to be able to control the camera while we're filming. And he may want to add more cameras.\" Alex knew his friend well enough to tell the direction this was headed. He'll want to up the production value, it was a logical next step. Plus, they didn't really need Ben if everything was in his and Megan's control. Her brother would have to bring something to the table if he was to remain a member of their perverted partnership.\n\nMegan huffed and folded her arms under her chest. \"I guess that's fine. As long as we still control everything.\"\n\nAlex nodded, \"That's doable. We can give him access and then shut it off. I'll go see what he says.\" Crossing back into Ben's room, he saw his friend had the infamous video pulled up; a masked Megan was gobbling on Alex's cock. Thankfully his hands were still above the desk. \"Alright, she's in,\" he said loud enough to startle his friend.\n\nBen closed the video and turned red. \"Sweet!\"\n\n\"She has some conditions. First, she wants half the money.\" Ben nodded. \"And we get full control over the setup. You can work the cameras, but only when we allow it. All this stuff gets moved to her room,\" he said, waving at the hardware he had set up. \n\n\"Fine by me.\"\n\n\"And you're not allowed in her room. Ever, for any reason. She said if she catches you then she's done. She also said if you get any funny ideas about you and her she's going to hurt you in a bad way.\"\n\n\"The thought never crossed my mind,\" Ben said honestly. Perving on his sister was one thing, but he'd never take it anywhere else. Plus he had Becky, she was more his type.\n\n\"The masks stay on, and we get a final say before a video gets posted. You can do the editing and whatever else, but you don't put it up for sale until we agree.\"\n\n\"Alright. What about cameras? Can we add more?\"\n\n\"Yes, I asked her about that.\"\n\n\"Nice. I'll grab a couple more tonight and get everything ready.\"\n\n\"I'll swing by tomorrow and we can change the setup around,\" Alex offered. \"Keep it off until then or I won't be responsible for what Megan does to you. She knows that I will know, and I will tell her immediately,\" he added, waving his phone in the air for the second time to make his point extra clear. \n\n\"Okay,\" Ben said, wincing at the thought. \"I'll be here tomorrow afternoon.\"\n\n\"You should probably get that looked at,\" Alex said, nodding down at his friend's swollen hand.\n\n\"Fucking hurts. Serves me right, I guess. Sorry about that.\"\n\n\"It's all good dude. And for what it's worth, I'm sorry it went down like this.\"\n\n\"Water under the bridge, man.\" Thoughts of a burgeoning porn production career now occupied the majority of Ben's mind.\n\n\"Alright, I gotta get going.\"\n\n\"Hot date?\"\n\n\"Yup,\" was all Alex offered as he strolled out of the room. He knocked on Megan's door again and entered.\n\n\"Okay, we're all set. I'll be back tomorrow. If he doesn't keep the camera shut off, I'll let you know.\"\n\nMegan stood and hugged Alex. \"Thanks for taking care of this.\" She lowered her voice and added, \"I got pretty excited thinking about all those other people watching us.\" She ran a hand down the front of his pants.\n\n\"I'm kind of in a hurry,\" Alex said, not wanting to be late for his date with Jenny, but also not wanting to deny Megan's advances outright.\n\n\"Then I'll make it quick,\" she said and dropped to her knees. Her hands went immediately to his belt, then a button popped free, a zipper dropped, and down went his pants and briefs. Megan immediately took him into her mouth, coaxing his semi-softness to life. Wiggling out of her shorts and panties, Megan continued to suckle his swelling head. Once Alex's erection reached its peak, she stepped away and sat on her bed, leaning back and lifting her knees. Licking three fingers, she reached between her legs and gave Alex an invitation he couldn't resist. \n\nAlex hadn't intended to fall into the plucky brunette's trap, but her appetite for him seemed to only grow stronger the more time they spent together. Like any of his other special ladies, he couldn't deny her what she wanted. Their pleasure fed him and sustained him, making his tumultuous new life worth living.\n\nKneeling at the edge of the bed, Alex nuzzled into her soft folds, smelling Megan's bittersweet aroma. He licked between her fingers, zeroing in on her protruding pink clit with his tongue. Slurping greedily, he quickly worked the frisky girl to a state of impatient arousal. Feeling her pull on his hair, he stood and leaned over her, guiding himself into her yawning chasm as she wrapped her taut legs around his waist. He pushed into her entrance and felt Megan's legs tighten around him, urging him deeper. The couple moaned together as Alex filled her and began thrusting, driving her into the mattress with enough force that she rebounded back.\n\nNot a second was wasted as Alex quickly increased his rhythm while Megan's limber body writhed under him in ecstasy. She grunted and bounced every time he drove into her tightness, ricocheting up to meet each penetrating plunge. Pulling a pillow over her contorted face, Megan let out a muffled scream and Alex felt her begin to shake and saw her core muscles ripple along her taut stomach as he looked down at the point of their union. He stared at his glistening shaft as it parted Megan's lips, focusing on the sensations her hot ribbed insides were sending through his body. Megan cried out again into the pillow as Alex plunged into her and held, pinning her hips to the mattress as his eruption filled her depths.\n\n\"Oh, god!\" Megan rasped as she struggled to sit up and wrap her arms around Alex's broad shoulders. Alex leaned over her and allowed her to hold him as the couple pressed together, convulsing in unison while hanging half off the edge of the bed. Alex wrapped an arm around Megan's lower back and lifted her. He lunged, throwing himself and her petite body up and fully onto the bed. His sudden forceful display of strength and the intensely deep thrust that followed as he landed on top caused Megan to cry out. Alex leaned in and kissed her, now able to fully support his own weight with knees and elbows. He moved his hips in little circles, grinding his pelvis against her clit and dancing his cock through her insides until another shattering orgasm overtook the quaking brunette.\n\nAlex pulled away from Megan as her trembling body calmed. She mewled in complaint and clutched her sopping wetness, pulling her legs together tightly and rolling onto her side. \"More,\" she groaned while she watched him rise and walk to where his pants lay on the carpeted floor.\n\nAlex chuckled as he pulled up his underwear and slacks. \"Sorry, hun, no more time for fun. Put that dirty little brain of yours to work thinking of what you want us to do on video.\"\n\nMegan giggled, nodding her head in anticipation. Once dressed, Alex leaned back over the bed and kissed her lightly. \"See you later,\" he said.\n\n\"Bye.\" Megan let out a heavy sigh as Alex left her room.\n\nAlex returned to his jeep and sped home. The house was empty and he quickly went upstairs to change. He pulled on a pair of package-enhancing briefs for Jenny's enjoyment and then added a respectable button-down shirt and tan slacks. \n\nFrom his closet, Alex found the diamond earrings he'd bought for his girlfriend and stuffed them in his pocket. Heading to the bathroom to make sure he was presentable, he added deodorant, brushed his teeth and examined his face. His cheek was a little red and puffy, but not distractingly noticeable. Sprinting back down to the garage, he suited up in his motorcycle gear, strapped a spare helmet to his street bike, and raced down the driveway.\n\nSeveral minutes later, Alex roared into the parking lot at Party Central. Dismounting, he quickly checked his phone and let out a sigh of relief, only five minutes late. He dialed Gene's restaurant and placed a takeout order, having already made plans for how he wanted to spend his evening with Jenny. Helmet in hand, he walked into the store. \n\n\"Hiya,\" his sister said from behind the register. Then she stood up straight and put on a fake smile. \"Can I help you, sir?\"\n\n\"Hey Case,\" he said, smiling at his sister's hijinks. \"Actually, could you tell me where my beautiful girlfriend is?\"\n\n\"Girlfriend, is it?\" Jenny's voice surprised him.\n\nAlex spun and blushed. \"That okay with you?\" God, she was pretty, he thought, admiring her long graceful neck and cute button nose.\n\nJenny smiled and walked up to Alex, wrapping him in her arms. She closed her eyes and he leaned in and kissed her softly.\n\n\"I guess that's my signal. Have fun you two,\" Casey announced.\n\nBreaking off the kiss, Jenny spoke over Alex's shoulder. \"Thanks for all your help today, I'll see you tomorrow at ten.\"\n\n\"See you then,\" Casey responded, gathering her things and leaving through the back door.\n\n\"What happened?\" Jenny asked, looking at the red welt on his cheek.\n\n\"It's nothing. You should see the other guy,\" he said with a grin.\n\nJenny chuckled and stepped back. \"I like this look,\" she said, admiring his kevlar-armored jacket and pants. Then she noticed the helmet in his hand. \"You ride?\"\n\n\"I do. Want to join me?\"\n\n\"God yes. It's like you're walking out of my fantasies.\"\n\n\"Oh?\" Alex asked with raised eyebrows.\n\nJenny shrugged. \"Always had a thing for guys on motorcycles.\"\n\n\"Have you ridden?\"\n\n\"Only once,\" Jenny responded. She shook her head slowly while grimacing. \"It didn't end well.\"\n\n\"We'll have to do something about that,\" Alex said with a grin. \"Meet me outside when you're ready.\" Jenny nodded and quickly ran through her closing procedures; locking doors, stashing cash, and taking out the trash. Five minutes later she joined Alex in the parking lot.\n\n\"Ducati?\" she asked, obviously impressed.\n\n\"That's right,\" Alex responded, surprised she could identify the exotic brand.\n\n\"My dad had one. Until he wrecked it and broke his leg,\" Jenny explained.\n\n\"Ouch!\" Alex winced.\n\n\"He was alright. My mom made him give it up though. She was harder on him than the crutches,\" Jenny added with a laugh.\n\nAlex handed her the spare helmet and helped her get it fitted. He also gave her an earpiece and showed her how to turn it on. The wireless tech would allow them to talk while they rode.",
        "\"Fancy!\" Jenny said through the microphone after she strapped on the black full-coverage helmet. \"I don't know if I can keep doing this.\"\n\n\"What!?\" Alex blurted as he straddled his bike and balanced it upright, retracting the kickstand with his heel.\n\n\"I'm just not going to be surprised by you anymore,\" Jenny stated matter of factly. The speaker in Alex's helmet crackled as she spoke.\n\nAlex laughed and said, \"Let me know how that works out for you.\" He patted the narrow seat behind him. \"Hop on.\"\n\nJenny lifted a leg and found the footpegs. Alex countered her weight as she shifted into place and wrapped her arms around his chest. He fired up the Ducati and heard Jenny squeal with excitement through his helmet earpiece. He smiled to himself; her enthusiasm was incredibly contagious.\n\n\"Hold on tight and move how I move. Don't get scared and try to fight the lean,\" Alex instructed.\n\n\"Got it.\" Alex felt her grip around his midsection tighten. \"Where are we going?\" Jenny asked.\n\n\"It's a surprise,\" he said, laughing as they rocketed out of the parking lot.\n\nJenny howled in his ear as he turned onto the street. He slowed and continued at a comfortable pace to let her get acclimated. Twisting through the town's streets, he felt how she moved against him. \"You're doing great,\" he said, offering words of encouragement she probably didn't need.\n\n\"Piece of cake,\" Jenny said, gasping as they turned a sharp corner and accelerated out of the bend.\n\nAlex pulled into Gene's restaurant and Jenny hopped off the back. She removed her helmet revealing a flushed smiling face, her short wavy hair in disarray. Alex took off his helmet and looked at her in awe. She was so happy, he couldn't help but lean in and peck her on her lips. \"Wait here, I'll be right back.\"\n\n\"What? Aren't we...?\" Jenny stopped talking once Alex opened the restaurant's heavy wooden door and disappeared inside.\n\nAlex threw the elderly proprietor a toothy grin. \"Howdy, Gene.\"\n\n\"Alex, my boy. How are you?\" the Italian maestro asked with his standard greeting. \n\n\"Fantastic! Taking Jenny for a ride up into the hills.\" He lifted his helmet in explanation. \"Just here for some takeout.\"\n\nGene nodded and scurried into the kitchen. He emerged two minutes later with a box of goodies. \"Couple surprises in there for you love birds,\" he said with a wrinkled smile as he handed Alex the package.\n\n\"What do I owe you?\"\n\n\"On the house.\" Alex moved to object but Gene cut him off. \"You treat my little Jenny right and that will be payment enough, understand?\" His sharp eyes told Alex he wouldn't win this debate.\n\n\"I will Gene and thanks.\" Alex hefted the small box and went back outside. He strapped the package to the tail of his sleek motorcycle while Jenny stood and watched.\n\n\"Now what?\" she asked.\n\n\"Get on,\" Alex said as he pulled on his helmet, dropped back into the saddle, and fired up his Ducati.\n\nDonning her helmet, Jenny spoke through the earpiece. \"Going to keep me in suspense all evening?\"\n\nAlex chuckled and felt her thread herself between his back and the box of food. She leaned against him and held on tight. \"It's a surprise,\" he said again and launched onto the street astride a thousand cubic centimeter engine.\n\n\"Oh c'mon!\" Jenny whined through the mic as they turned the corner.\n\nThe ride was less than comfortable for Alex. His sport bike wasn't meant to carry all the extra weight and he had to focus on handling and braking far more than usual. But Jenny's thrilled excitement made up for it, squealing with glee at each abrupt turn and twist of the throttle.\n\nAlex took them down the highway that led out of town and exited once they reached the forested hills that surrounded Sanford. Winding his way up, he put the motorcycle through its paces, diving around corners and tearing down flats.\n\n\"Faster!\" Jenny yelled in his ear as they approached a particularly long straightaway.\n\n\"Hold on!\" Alex responded as he spun the throttle and launched the down the pristine asphalt. The speedometer quickly passed a hundred, then one twenty. He braked hard as the corner neared and leaned into the turn, feeling Jenny expertly shift her weight in unison with him.\n\n\"You're a natural!\" he said as the couple straightened together coming out of the long bend.\n\n\"That was so much fun!\" Jenny was positively giddy in his ear.\n\nThey rode on for ten more minutes, slowly climbing out of the valley following the twists and turns up and around, bend after bend. Once they reached the crest, Alex turned down a secluded gravel road, riding carefully on the uneven surface. Half a mile later he pulled off at a trailhead and parked his bike out of view behind a massive chestnut tree.\n\nJenny hopped off and unstrapped her helmet. Alex did the same and was caught by surprise as the ecstatic girl flung herself into his arms.\n\n\"That was unbelievable!\" she gasped, reaching up for a kiss.\n\nAlex could feel her shaking with adrenaline as he pulled back and looked down at her radiant visage. \"Glad you enjoyed it,\" he said, drawing a hand under her chin and kissing her softly. Then he turned and unwrapped Gene's takeout. \"Let's go!\" he shouted and started up the path.\n\nFive minutes later they neared a clearing. Alex walked to the far side and stood, waiting for Jenny to catch up.\n\n\"Wow!\" she exclaimed. \"It's like we're on top of the world up here.\" The couple stared down at the wide valley below. Perched high in the hills a thousand feet above their hometown, they could see for miles in every direction.\n\n\"There's your house!\" Jenny said, pointing off into the distance. \"And my store! How did you find this place?\"\n\n\"My dad used to bring us. We'd camp right here and watch the stars at night. I try to come back a few times a year when the weather is good.\" Alex sighed. \"You're the first person I've brought here.\"\n\nJenny wrapped an arm around his back as he finished his story and leaned her head against his shoulder. \"Thanks for sharing this with me. It was worth the suspense,\" she said, taking in the magnificent view. \"I can tell it's special to you.\"\n\n\"It is, and so are you.\" Alex leaned over and kissed her forehead lightly. \"Let's eat! I'm starved.\" He set the package of food down and opened it. A red and white checkered tablecloth was wrapped around the contents to keep them warm. Jenny removed it and spread it on the ground and sat, patting the space next to her. Alex joined her and together they removed the rest of the items Gene had put together for them. \n\nAlex laughed. \"What?\" Jenny asked, peering into the box, trying to find the source of his amusement.\n\n\"This isn't what I ordered. I told Gene it was for us and he disappeared into the kitchen. Wouldn't even let me pay,\" Alex said, shaking his head.\n\nThe spread the couple laid out included a pasta dish, an array of dainty finger foods, and a pair of strawberry-topped desserts. Gene proved once again that he could think of everything, including silverware, napkins, and a pair of green bottles containing authentic Italian sparkling water.\n\n\"Is this lobster?\" Jenny asked, inhaling the aromas from her bowl of creamy pasta.\n\n\"Sure looks like it,\" Alex answered as he tucked in. \n\n\"Oh, this is so good.\" Jenny nodded and grinned at him after she'd swallowed her first mouthful.\n\nThe two ate in silence, enjoying the view and peaceful feelings of close companionship. Alex handed Jenny her dessert once they'd polished off the rest of the meal. \"Gene knows this is my favorite,\" she said.\n\n\"What is it?\" Alex asked, thinking it looked like rubbery milk.\n\n\"Panna cotta,\" Jenny said, inflecting the words with her Italian heritage. \"With strawberries. Yum!\"\n\nAlex tested a small bite of the gelatinous white mound and licked his lips as it melted in his mouth. \"Wow,\" he said. \"It's like jello ice cream.\"\n\nJenny laughed at his insight. \"That's exactly what it is.\"\n\n\"It's delicious.\" Alex scooped up another spoonful topped with a sliced strawberry. \"Do you like to cook?\"\n\n\"I do, very much!\" Jenny said with her characteristic enthusiasm. \"It's just that I'm always so busy. And I don't have many people to cook for, which makes it less fun.\"\n\n\"I see. Well, it turns out I like to eat,\" he said, nudging her playfully with an elbow.\n\nJenny giggled. \"How about Friday night, my place?\"\n\n\"I'd love to, but I think I have plans. Casey wants to go camping with Lily and some friends.\"\n\n\"Next week, then?\"\n\n\"I have a better idea. How about we go on a trip together. Can you take a couple of days off?\" Alex asked hopefully.\n\n\"The cabin?\" Jenny remembered his proposal from the day she'd set up his sister's party. Alex nodded. \"I can make that work. Especially now that I have Megan and Casey helping.\"\n\n\"Great! I'll make the arrangements if you handle the food. I've been there before; the kitchen is small, but it's well stocked,\" Alex said. \"How about two nights, say Wednesday to Friday?\"\n\n\"Sounds perfect!\" Jenny bubbled with excitement.\n\nThe two sat silently holding hands and watching the partly-cloudy sky as it changed from blue to gray and exploded into a palette of yellow, orange, and red; then turned pink and purple as the sun spun behind the horizon. Alex wrapped an arm around his girlfriend as the last rays of light blinked out. He could feel her happiness and contentment as he leaned in and nibbled her deliciously elegant neck.\n\n\"I don't know how you do it,\" Jenny sighed.\n\n\"Do what?\" he asked while nuzzling into her soft skin.\n\n\"Be so...perfect,\" she admitted softly. She'd never been with a man who treated her so well. Dozens of painful, failed relationships had left her scarred. And at long last, she'd found someone who made it feel like it wasn't all her fault.\n\nAlex barked a laugh and lifted his head. \"What if I told you that you are the first girl I ever asked out.\"\n\n\"What?!\" Jenny turned her face in surprise.\n\n\"It's true. I wouldn't lie to you,\" he affirmed.\n\n\"You've never had a girlfriend before me?\" Jenny's wide eyes betraying her astonishment.\n\n\"Not serious. Not like you, I mean.\" Then he smirked and added, \"I thought you weren't going to let me surprise you anymore.\"\n\nJenny gaped, her mouth moving like a fish out of water. Alex chuckled and laid back on the checkered tablecloth, looking up to find the first stars of the evening. Jenny sighed and laid back, searching for his hand. The contented couple watched in silence as the night sky revealed itself.\n\n\"I've never had a boyfriend like you either, Alex,\" Jenny said softly. He grinned as she used the word for the first time. \"I seem to attract jerks; lots and lots of jerks. Maybe that's why I'm so different around you; you make me feel like none of that matters.\"\n\n\"It doesn't,\" Alex replied. \"Maybe you're being yourself now. Maybe those other guys wanted something different and that's what you tried to become. And maybe you could never be happy being less than yourself.\" He said what came naturally, framing it in a way he knew Jenny would accept and knowing that he had subconscious cues guiding his observations.\n\nAlex's remarkable insight perfectly summarized Jenny's history. A sudden clarity washed through her and she was left with a better understanding of her past. With those simple sentences, Alex had fixed a part of herself that she never knew was broken. She knew he was right as she rose up and lifted over him, leaning in for a kiss. She started slowly, passionately tracing his tongue with hers, but soon increased in vigor as an intense upwelling of emotions rapidly grew inside her chest.\n\nAlex was astounded at how quickly her warmth sprang into flame. He hungrily reached out and further fed the fledgling bonfire. Jenny broke off the kiss and gasped, staring down at him with lustful abandon as she reached to unfasten her jeans. Alex did the same, pushing layers of clothes down to his thighs. It was too dark to for him to see what Jenny was doing as she struggled out of her shoes and finally stripped the tight denim free.\n\nJenny's warm skin slid across Alex's bare thighs and he sensed a hand pass between his legs. She clutched the base of his shaft and brought him to meet her. Lowering down and looking up, Jenny moaned into the night sky from deep within her chest. She took all of him, letting out a hoarse cry as he filled her so completely. She put her hands on his armored chest and rocked forward, then drove back down against his hips. \n\nAlex groaned as her hot rippling tightness enveloped him. He looked up at her, unable to see more than a sparkling eye and a dark silhouette against a starry sky. He held her thighs as she rocked against him slowly, working him in and out and gasping each time he entered her. Alex began pushing back, moving his hips in opposite rhythm with hers. Her head and shoulders fell to his chest and he wrapped his arms around her back, holding her close as they continued to feed their passions, thrusting against each other and building to an intimate climax.\n\nJenny whimpered in his ear and Alex lifted forcefully, pulling her down with his arms and feeling her legs clamp against his sides. Simultaneous releases struck the lovers and they convulsed together. Alex felt his seed pour up and into her as she seized against his girth, constricting and urging his spasms to continue. They twitched and moaned together, holding each other securely until their carnal cravings abated. Jenny lifted her head and the two kissed softly under the star-lit sky until Alex felt her shiver. \n\n\"Cold?\" he whispered.\n\n\"Mmm hmm, but I don't want to get up,\" she responded weakly with her weight pressing down on him. Alex rubbed his hands along her bare thighs in a feeble attempt to create warmth.\n\nUnable to bear the exposure longer, Jenny stood over Alex and stepped back into her clothes. Alex tucked himself away and pulled up his two pairs of pants. He stood and felt a lump in the pocket of his slacks. He reached in between layers, having completely forgotten about her gift.\n\n\"What's that?\" Jenny asked under the faint moonlight, unable to make out what he held in his hand. She sat back down on the blanket as Alex knelt and handed her a small package.\n\n\"It's for you. I didn't plan to give it to you like this, but...\" he trailed off and shrugged, considering it was as good a time as any.\n\nJenny fumbled trying to open the package in the dark. \"I can't see it,\" she complained.\n\nAlex turned on his phone's flashlight and held it out. Jenny finished unwrapping her gift and opened the clasp on the small leather-covered jewelry box. She extracted one of the two diamond chandelier earrings and gasped as it caught the light. \n\n\"I don't know what to say,\" she said, dangling the twin sparkling cascades of tiny glittering diamonds on one narrow finger. \"They're so beautiful.\"\n\nAlex reached out a hand up and palmed her elegant long neck. \"You're welcome. I saw them and thought of you. Of this in particular,\" he said, stroking the long sinewy valley of smooth skin below her ear.\n\nJenny blushed, although Alex couldn't see it. She leaned in and kissed him softly on his lips then quickly sat up and hugged herself, shivering again as the night grew colder. Alex took off his armored jacket and wrapped it around her shoulders.\n\n\"A perfect gentleman. I can't believe you're new at this,\" Jenny said as she nestled into his residual warmth.\n\n\"And I can't believe I didn't bring a sweater,\" he said, feeling the cold start to seep through his thin shirt. \"We should get moving, it's going to be a chilly ride home.\"\n\nAnd it was. Alex kept Jenny bundled in his jacket as they twisted and turned off the mountainside. By the time they arrived in town and back at her store he was numb and raw from the neck to his waist.\n\n\"Can I follow you home?\" he asked through chattering teeth as she dismounted and unlocked her car.\n\n\"Please, no. Go get warmed up,\" Jenny said, handing him back his jacket. Alex took it greedily, feeling instant relief as he shared her warmth.\n\n\"Keep that for next time,\" Alex said, nodding at the helmet in her hand. He felt a lump in his breast pocket as he zippered up his jacket. \"And, don't forget this,\" he added, handing Jenny the jewelry box.\n\nJenny reached out and took the treasure. \"Thanks for a night I'll never forget.\"\n\nAlex beamed back through his open helmet. \"I'll call you tomorrow about next week.\"\n\n\"I can't wait.\" Jenny grinned. \"Bye, Alex.\"\n\n\"Bye, Jenny,\" Alex beamed back before slapping his helmet visor shut and roaring away. \n\nSeveral minutes later Alex pulled into his garage and rushed inside, shedding his riding gear as he went. He bolted through the kitchen, not stopping to greet the ladies in his living room. They stared at him wide-eyed as he took the stairs three at a time. He went immediately into his shower and turned on the hot water.\n\nOnce warmed and clean, Alex dressed in comfortable comfy clothes and went back downstairs. \"Hi, sorry about that. Got a little chilly on the way home.\"\n\n\"How did your date go?\" Casey asked. She was seated on the couch next to Lily watching TV.\n\n\"Great. I took Jenny up into the hills just outside town; that spot where we used to go camping and watch the stars.\"\n\n\"Romantic!\" Lily exclaimed, smiling in approval at her little brother.\n\n\"It was,\" Alex grinned. \"But I'm so tired.\" he sighed. \"Four hours in the pool today, plus the long ride. I haven't had a second to rest all day.\" Plus he got punched in the face by his best friend. And had a quickie with Megan. Not to mention what his new boss had in store for him. He was utterly spent.\n\n\"Come,\" Casey said, patting the open seat between herself and Lily. Alex nodded and sat, immediately feeling more relaxed. He didn't know what they were watching, but it didn't matter. After several minutes he yawned and felt Casey reach an arm around him, not trying to hide her affections from Lily. Alex smiled at her and leaned his head low against her shoulder. Within minutes his eyes began to droop. Alex slid down until his head rested in Casey's lap and curled his legs up onto the couch.\n\nLily felt Alex's foot brush her thigh and looked over her younger siblings tucked together on the far end of the couch. She smiled, it'd been a long time since she'd seen them like that and it brought back fond memories of when they were younger; of when dad was still there. Sudden sadness wash over her and she instinctively reached out for comfort. Sliding up the couch, she leaned against Alex, resting her head in the crook of his waist and wrapping an arm over his hip.\n\nAlex was startled when he felt Lily lean against him, but quickly recovered and shifted to give her more space between his body and the back of the sofa. Reaching down, he gently stroked her silvery blonde hair and felt her calm. Casey did the same for him, lovingly caressing his head as he relaxed into her lap. He burrowed into her cushioning thighs and closed his eyes.\n\nCasey soon heard her brother's breath deepen, then minutes later her sister followed as cute wheezing snores periodically escaped her lips. She smiled down at the scene, something the three siblings hadn't done in years. Casey's memories were still fresh, having been the last to grow out of her childhood innocence. She sat and finished the movie, petting her sleeping brother, softly running her fingers through his silky short brown hair, and thinking of how much he meant to her.\n\nGrowing tired, Casey slowly and carefully extracted herself from under Alex's resting head and switched off the TV. Alex stirred but didn't wake. With one final glance at her sleeping siblings, she turned and went upstairs to her room.\n\nAlex woke hours later to the sound of gasping. He heard a sob and lifted his body, quickly reacquainting his clouded brain with his surroundings. He could see Lily seated at the far side of the couch with her head in her hands and shoulders quaking.",
        "\"Lil, are you alright?\" he asked, visibly concerned for his sobbing sister.\n\nShe could only shake her head as tears streamed down her red cheeks. Alex quickly slid down and wrapped his arms around her trembling body. He pulled her close, rubbing his hands over her back. Reaching out with his gift, he dove into her turmoil, surprised at how receptive she was to his extrasensory touch. Sifting through her myriad emotions, he identified anything remotely negative and tried his best to stomp the bad feelings flat. \n\nLily spoke in broken sentences as she continued to sob uncontrollably. \"I had...a bad...dream.\"\n\n\"About dad?\" Alex could read her anguish now. And he could tell this was a common occurrence, something he'd never known.\n\nLily nodded and broke down into her hands again Alex continued to comfort her as best he could. It tore him apart to see her like this, especially given the revelation that she'd been so broken for so long. He could feel the true depth of her hurt for the first time and it drove daggers into his heart.\n\n\"It'll be ok.\" He said, adopting the words his father used to calm her. He held his fragile sister close, trying his hardest to urge a peaceful calm to the surface. She sniffled and lifted her face. Alex softly placed his thumb against her wet cheek, wiping away tears and cupping her beautiful distraught face in his palm. He kissed her forehead and pulled her into his embrace. \n\nAlex gently massaged his sister's tense neck, knowing where the physical manifestation of her stress resided. Lily whimpered softly into his shirt and Alex felt her nuzzle deeper into his chest, seeking his protection and comfort. Alex remained wrapped around his wounded sister for several minutes until he felt her become still and eventually pull away.\n\n\"I'm sorry,\" Lily said sniffling, wiping her cheeks with the back of her wrist.\n\nAlex's face twisted into a mask of shared anguish. \"Oh, Lil. Please don't do that. I love you and I want to help. I...I know why you're hurt,\" he stammered.\n\nA weak smile spread across Lily's face. \"Thank you, Alex. I'm still getting used to asking for help. You've been so great lately.\"\n\nAlex smiled and took her hands in his. \"Tell me what you need?\"\n\nLily looked down and Alex felt her uncertainty as she decided what she wanted. \"Will you stay with me tonight?\"\n\nAlex simply stood, holding out a hand and helping his delicate sister to her feet. \"I'll be there in a few minutes.\" Lily nodded and turned upstairs to her room.\n\nAlex followed his sister after shutting off the lights. He went first to his room and changed into sleeping clothes; a loose t-shirt and boxers. He crossed the hall and knocked lightly on Lily's door. Hearing a muffled \"Come in,\" he opened the door to find his gorgeous sister dressed in the velvet pajama set he'd given her. The shimmering material hugged her astonishing curves, accentuating her remarkable body.\n\n\"You are so beautiful, Lil,\" Alex said in awe.\n\nLily smiled at her brother's complement. Memories of her father came flooding back as he stood in her doorway with strikingly similar features. His messy brown hair, square chin, and broad shoulders all brought back thoughts of her father. It was their intimate relationship that she missed most; his comfort and compassion helped her through the difficult years as she transitioned into womanhood. Not a night went by that she didn't wish his warmth would return to her bed.\n\n\"What can I do for you?\" Alex asked, hoping Lily would continue to accept his help.\n\nLily wordlessly walked around Alex and closed the door behind him and turned off the light. Grasping his hand lightly, she led him to her bed and threw back the covers, motioning for him to lie down. Alex complied, laying on his side and gathering the covers around him. Lily sat and slid back, lifting her legs and folding onto the bed with her back to Alex. She shifted towards him as he slid an arm under her neck, threading it carefully through her golden hair. As their bodies came together, Alex lifted the blanket over them and wrapped his arm around Lily's waist, pulling her tightly into his chest.\n\nCalm serenity washed over Lily as she nestled into her brother's warmth and felt the same reassuring protection that she'd missed so greatly since their father's tragic departure.\n\n\"I miss him so much,\" Lily confessed in a soft but steady voice. \"I can barely sleep at night because I'm too scared I'll have a horrible dream about him dying. But it just happens anyway. I need to be with someone to feel safe.\"\n\n\"I know, Lil. I had no idea you were taking it this hard; I'm so sorry I didn't realize.\"\n\n\"It's ok. You were so busy when it happened, and I know you had your own way of dealing with it. I just didn't know what to do and I kept reaching out for help but trusting the wrong people. It got worse and I just bottled it all up. Carrie's was the only one who could help. Until now, I mean. Thank you for not leaving me alone.\"\n\nAlex wrapped her velvet-covered torso in both arms and held her close. She fit so perfectly against him, her slightly shorter frame nestled into his embrace without a modicum of wasted space.\n\nLily sighed a heavy breath and said, \"You've started reminding me of him. I don't know what it is exactly, but it helps so much to feel this way again. To have you close to me.\"\n\nAlex smiled and nestled his face into her neck, strands of platinum hair tickling his nose as he pressed his lips against the impossibly smooth skin behind her ear. He nuzzled into her and whispered, \"I love you.\" He touched her with his gift again and felt nothing but warm contentment.\n\n\"I love you, too,\" Lily said quietly, pushing her back and hips into him, trying to bury herself in his comforting embrace.\n\nExhausted, Alex soon drifted into a light sleep. Lily felt his warm breath against her neck. His hand fell innocently against her breast and he stirred slightly, reflexively cupping the soft mound under his palm. Lily sighed and pulled him tighter, feeling her nipples stiffen in response to a rising excitement that slowly replaced her contentedness. She lay perfectly still for minutes, unable to sleep, recounting the days when her father would visit her room at night and imagining she was back in that time. It wasn't hard, Alex was filling the void his father left rather perfectly.\n\nA hunger came roaring back as Lily realized what she'd been missing most. Opening a slight gap between her and her brother, she reached a hand back and felt the front of Alex's boxers. She snuck into the gap of his fly and wrapped her fingers gingerly around the tip of his cock, slowly tracing the familiar yet unknown ridges of his soft crown. He stirred again but didn't seem to wake as Lily felt her attention working on him. He grew in her hand and she marveled as his expansion continued, finally filling out to his full impressive girth. She'd only ever handled one other of that magnitude.\n\nSlowly and methodically, Lily shifted her hips up and created an opening in her loose pajama shorts. She positioned Alex against her entrance and pushed him inside her yearning sex, gently inching deeper and deeper, using her fingers to spread her moist lips so that he slid in without resistance.\n\n\"Oh, daddy!\" she moaned as Alex filled her completely. As completely as only their father had ever done.\n\nAlex had been awake since he felt Lily dip into his boxers, too shocked to respond aside from a few involuntary motions as he felt his sister take what she'd been missing for so long. Her cry caused his eyes to shoot open and he twitched reactively at the warm wet embrace he felt between his legs. He made no immediate comment; instead, he placed a hand on her hip and pulled her tighter against him.\n\n\"Yes, daddy, please!\" Lily begged, lost in a fantasy of her own creation.\n\nAlex obliged and slid his hips back slowly before driving his length into her again. She groaned and turned her face into a pillow, wailing as bottled-up emotions began to break free and bubble to the surface. \n\nAlex reached out with his senses but quickly backed away, feeling it was unwise to interfere as she uncorked a year and a half of repressed turmoil. Instead, he focused his attention on pleasing her, becoming the man she so required. Tenderly and passionately he worked his hips, sliding his length through her hot chasm while kneading her velvet-covered breasts in his hands and softly kissing her neck.\n\nLily continued to cry out, sobbing and howling into her pillow as the floodgates opened fully and she let it all out. With one final piercing scream she shuddered and pushed back into Alex. His own climax followed moments later and he wrapped his trembling sister tightly in his arms, squeezing as hard as he dared.\n\nLily continued to whimper in the safety of Alex's strong embrace, feeling him convulsing inside her and then soften minutes later, tumbling from her swollen lips. She moved her shoulders and Alex's grip relaxed, allowing her to spin her body and bring her lips together with his. Once Lily had her fill of her brother's tongue, she backed away and set her head on her pillow, staring at him with piercing blue eyes.\n\n\"I need to explain.\"\n\n\"No, you do not,\" Alex answered firmly.\n\n\"I have to. For me.\" Alex nodded and blinked slowly in understanding. Lily continued, \"Dad was special to me. I think he was special for a lot of people, a lot of women I mean. Besides mom.\" Alex nodded again and displayed no surprise at her revelations, showing that he already knew.\n\nLily paused, swallowed, and in a shaky voice said, \"When I was younger, a boy tried to rape me. I told Dad and he was so mad, I'd never seen him like that. He came back that night with blood on his shirt. I was scared afterward, so scared. I didn't let anyone touch me. Dad helped me open up again. He...he...loved me in every way possible.\" \n\nA single tear slid down the ridge of Lily's nose and Alex leaned in and kissed it lightly. \"When he left us, I was so lost. Carrie helped, she's a lot like him, caring and understanding. She could pick me up when I fell down. And I tend to fall down a lot,\" she admitted with a weak smile.\n\nLily looked at Alex with a mixture of pain and confusion. \"I saw you standing in my doorway and it was like he was back. Dad came to me again and I lost control. I'm so sorry, Alex, I didn't mean for this to happen. It's just...you were what I needed, and I thought maybe you could be him, if only for one night.\"\n\nAlex wept quietly at her confessions. He knew it was all true, Carrie had already confirmed it. She also said that if Lily ever unveiled her and their father's relationship that she would be his. But that's not why he was crying. His sister was whole again, he could feel it inside her. The old wound had finally closed and could now heal.\n\n\"Alex? Please say something,\" Lily pleaded, startled by his tears. He never cried. The night when he stood broken and begging forgiveness in her doorway was the first and last time she could recall seeing him so emotional, even through the death of their father.\n\nAlex sniffed and began speaking in a wavering voice. \"I love you, Lily and I want to be with you like dad was. I'm like him, and so is Carrie. I can't really explain it, but she's helped show me what I'm meant to do. And you're a big part of that. If I can help fill the void dad's passing left in your life, then I will gladly do it. I know how much what we just did means to you. You're finally healing and that's all I want. I just want my happy sister back.\"\n\nLily choked up at his final sentence. It was the phrase he'd used to break through her guard before they reconciled and agreed to start their relationship over; to just be brother and sister again. But this was something new; something she'd never dared hope could be possible. She reflexively wanted to raise her shield again, to block him out as she'd blocked out everyone for so long. But it didn't work; she had no reason to feel that way anymore and simply couldn't make herself withdraw as she had done so often in the past.\n\nAlex spoke again before she had a chance to process his acceptance. \"I have to tell you some things; secrets I've been keeping because I didn't want to hurt you. It's been tearing me up to keep this from you, but I...\" he trailed off unable to find the words.\n\n\"It's okay, Alex,\" Lily said reassuringly.\n\nAlex took a deep breath and said, \"Casey and I have been together recently...intimately. It started a couple of days before her party. We had sex that night. It was her first time. I've also been with your friends; Carrie and I have made love, she's very special to me now. Every girl that came to your birthday party has fooled around with me in some form or another. I didn't chase after them, it just happened. Carrie did something to me that night on the couch that changed me, made me like dad. But I never knew what he was and I needed her help; I still do.\"\n\nAlex paused for a moment and added, \"I hope since you knew him so well, maybe you'll understand.\"\n\nLily's eyes opened wide as Alex disclosed his secrets. When he came to the end of his confession her face softened. \"I do understand, Alex. And it's okay. I trust you, and I know you wouldn't try to hurt anyone, just like Dad. You have to make people whole and protect your family. I'm glad for you and Casey. I liked seeing you two together tonight and I know she loves you very much.\"\n\nAlex sighed in relief and nestled into Lily's cushioning chest. She stroked his hair and kissed the top of his head. Then, finally overcome by exhaustion, she drifted into a peaceful sleep. Alex followed moments later, his tear-stained face still wrapped in his sister's velvety softness."
    ],
    "authorname": "MagnusRhodes",
    "tags": [
        "breasts",
        "brother/sister",
        "love",
        "orgasm",
        "romance",
        "siblings",
        "sister",
        "teen"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alexs-gifts-ch-20"
}