{
    "title": "Hello Mr. Robinson Pt. 07",
    "pages": [
        "All characters are 18 years old or older. \n\n*****\n\nI was haunted by the look in her eyes. The Rhea I had known, the woman that I had grown to love was gone. In her place was a homicidal stranger that would have cut me down without a moment's hesitation. I took a step back and my heel struck the metal suitcase. We stood there frozen in that singular moment where she would make her decision. I felt my perception of time dilate and slow. Rhea had been the center of my life for so long and once more she was the eye of my storm. Would she kill me? Would she reign in her rage and leave? I watched as her eyes glanced at the case and she bit her lower lip. Any other time I would have found it sexy but this moment was anything but normal. Tears slowly fell from her eyes and caressed her cheek. I could almost feel as she made her decision. I would live.\n\nI kept my body between her and the case as she stormed out of the room. What the hell was that all about? A year ago I would have followed her out and demanded an answer but I knew her too well now to make that mistake. If I wanted answers I was going to have to find them on my own. That other part of me that was the A.I. was equally determined to uncover the truth about Rhea and her armor. I stowed the case beneath my bunk and sat in a meditative pose while we sought out the answers together. Tapping into the base's data hub was easy enough. We ghosted through the system leaving no trace of our passage. I was angry after seeing the expression on her face and the sting of her words left me wounded. What had they done to her? How integral was the armor to her existence? I was damn well going to find out. There is one thing I love about the military, they are efficient. They had digitally archived every little thing to save space and stored that information on secure bubble chip servers. \n\nGetting to the servers was the easy part. Getting passed the A.I.'s guarding it was going to be tactically challenging. If I used my command override there would be a record of it. I would have to explain to Nick why I peeked at national secrets. He may or may not understand. The only other route was praying my digital self was better at sneaking than they were at guarding. What felt like minutes was in fact mere nanoseconds passing in the digital realm. I was still getting used to what Nick liked to call meat time and digital time. As flesh and blood beings we were prisoners of chemical reaction time and neural synapses firing. However, my A.I. allowed me access to a world where the beating of a human heart was an eternity. It was a bit disorientating moving from one to the other. I began to realize how much time my A.I. had to process requests. It must have felt like years working on solutions for problems like Blink and Ares. On the up side it was only days or so in human reckoning.\n\nThe A.I.'s watching the gate suddenly stood down and allowed us access. I was about to ask when I realized that Nick had granted us access. My other half must have emailed Nick and requested a brief glimpse into secure files so that we could help Rhea. I sometimes forget that my desires become manifest with my digital self. It wasn't a conscious desire but we knew each other so well that a need was fulfilled without the necessity for words. We entered the convoluted maze of a massive data archive and I let the A.I. take the lead. I watched intently at everything he did. We found the location of the node and plugged in. I was shocked at the size of the file and the amount of data on Rhea. We also pulled any and all records on her armor and left satisfied that we could now understand and help her out. I couldn't have been more wrong.\n\nI was about to withdraw from the hoard when my curiosity got the better of me. I found the table of contents and took a quick list of all of the projects both active and inactive. Since we were here I grabbed a copy of a few of the more interesting files that carried an ultraviolet clearance to access. I figured if I got bored I'd have some reading material. I spent the last of my time in the digital ether reading every scrap of information we had gleaned and it made little sense until I connected the dates. The files went back decades, nearly a century. The last of my doubt fell away. She wasn't just a century old but centuries of experience were locked behind those ghostly violet eyes of hers. She wasn't a Fae. Rhea belonged to a much older and far more alien race called the J'Nai. \n\nI looked at her medical files in great length and they were far more extensive than those that Zoe showed me. Rhea outstripped a human being on any and all levels both physically and mentally. I saw why she spooked Zoe so much. She looked so human and yet she was so different on the inside. There was only a five percent difference between Rhea's DNA and the average human being. I was shocked when I remembered that there was only a two percent difference between apes and humans. How inferior we must appear to her. I pushed that thought aside and continued my research. There was a mention in the files describing her attachment to her armor. The doctors that examined her described a fanatical desire for Rhea to regain her armor. They used almost the same words she did. If Rhea ever recovered the armor she would wipe out every living thing until no one or nothing breathed. But why was she so damn fanatical as they put it? \n\n'There is a second attached file,' my A.I. pointed out.\n\n'Another medical file,' I asked.\n\n'Yep, I think you might find it interesting,' he said.\n\nI opened the file and whistled. It must be a male of her race. The extensive physical traits were nearly identical to hers. The brainwave patterns also showed the heightened intelligence and reaction time unique to her species. I guessed this was an adolescent about to reach maturity. The ongoing growth was fast and quite extensive. The estimations to reach his peak were a matter of days. I wonder if they even knew each other. \n\n'They do,' my A.I. said with a bit of humor in his voice.\n\n'How can you be so sure?' I asked.\n\n'Easy, that is your medical chart,' he replied.\n\nMike dropped and there was stunned silence on my end. How the hell had this even happened? I watched a holographic display of sorts play out in front of me. The outer shell was mostly devoid of detail. The one thing that was highlighted was my brain and neck. It showed the implant and it interacting with my mind. All is fine until a week after implantation when the nanites migrated from my skull to the rest of my body. It was a literal invasion of every body system I possessed. What had caused the malfunction or was it a malfunction at all? The display showed some kind of external force reprogramming the microscopic robots and sending them on their way. Many of the nanites harvested fat cells and converted those to their purpose. That is why my weight continued to drop and I packed on muscle so quickly. It wasn't the water at all or maybe that was just part of the change. Did Nick know what had happened? Had this happened to Cindy? I left the digital and like a diver breaching the surface I gasped as I regained my body. I looked around but I was alone.\n\n'I have kept changes from you so as not to frighten you,' the A.I. flashed on my field of vision.\n\n\"Changes... what the hell have you been keeping from me?\"\n\n'Close your eyes and I will show you,' he said.\n\nI closed my eyes and felt a tingling behind my eyes. After a minute or so I was told to open my eyes. I did so reluctantly and gasped when I saw the transformed room. This wasn't seeing things in a different spectrum. I was used to that. This was something far more sublime. I perceived colors that had no name in any language. I looked at my hand and there was a drastic change to my world. There were whirls and eddies of energy coursing over my flesh. I had heard psychics on television talk about auras. Was this what they were talking about? My A.I. was about to shut it off when I told him not to.\n\n\"I have to get used to it sometime, why not now. Rhea did this didn't she?\"\n\n'Yes... your link to the element clinched it for her.'\n\n\"What element... what the hell are you talking about,\" I asked feeling the upwelling of fear beginning to consume me.\n\n'The water... the rare trace element in the water bonded with you on a genetic level. Normally people have to keep drinking the water to maintain the benefits. But you were special, well you and Cindy. She is still growing so the effects may be even more profound.'\n\n\"Let me adapt to my new world and then we can talk some more.\"\n\nIt felt like I had been in the dark all of my life and suddenly someone turned on the lights. I heard voices outside my door and listened. What I heard didn't sound like typical military chatter. I peered outside and saw a technician walk away and he was cursing about some sort of failure. More voices came and I looked down the other end of the hall and two guards were doing their rounds. The strange part is that I heard more voices than just two. That's when it hit me. I was hearing what they were saying as well as what they were thinking. Oh hell, I see why he kept this locked away. I wasn't sure I was ready for this. How would I do in the outside world with all of those people and thousands of minds trying to crowd into mine? I panicked and closed the door. I sat with my back against a wall and sunk down to the floor. How could I give up one because of the other? I couldn't. I had to find a way of dealing with this new gift of mine.\n\nI felt how close my A.I. was and it was comforting. I wasn't alone in this. I closed my eyes and listened to the thoughts going on around me. Distance fell away as I picked up on technicians monitoring the construction of the ring. I could hear people in the mess hall as they ate their meal. The positive thing was that I could only hear their thoughts and not both conversations at once. I could do this given enough time and practice. My thoughts returned to Rhea. She was the one that had done this to me. My first thoughts were why but the answer was quite obvious. She was alone or more accurately she was lonely. We had hit it off at once and she decided to give me a great gift. \n\n\"Oh Rhea,\" I muttered as I picked up on conversations both spoken and unspoken. \"I love you too!\"\n\nA few heartbeats later the door flew open and Rhea stood there tears streaming from her face. She picked me up off the floor like I was a ragdoll and kissed me. I could feel her passion. Hell, I could almost taste it like it was a whole new sense awakening inside of me. Despite my promise to the Major, Rhea's hunger would not be denied. This new level of intimacy was addictive. The sheer intensity of every caress, every taste and every pleasure was overwhelming. \n\n\"Your eyes,\" she whispered as her hand drifted across my cheek. \"...and your mind...\"\n\nI kissed her as my hands worked on her clothes. It didn't take us long to shed those annoying garments. I ran my hands over her skin and it was almost like touching an electric current. She yielded to my hunger even as I yielded to hers. I spun her around so that she faced away from me. I touched her shoulder and she bent over at the waist. I dropped down and feasted on her dripping sex. Rhea didn't even try to hide her pleasure. I lapped at her sex driving her over the edge in stages. I had learned that she loved to be teased and that is what I gave her. Rhea was shaking now. Her legs quivered as I slowed my pace another notch. I could almost feel the volcanic pressure I had built up in her. I stood up, teased her with the head of my cock for a few more seconds before slamming it home. Rhea clamped a hand over her mouth to keep from screaming. Moans were all well and good but a screamed might attract unwanted attention. I grabbed her by the hair and began moving.\n\n\"Forgive me...\" she whispered as I took her nice and slow.\n\n\"Fuck me... is that what you said,\" I replied ignoring her request. \"Okay, here it comes...\"\n\n\"I said... UNNNNN...\"\n\nI went from slow and tender to hard and fast. Rhea's voice grew in intensity and pitch. I knew she had missed me. I cupped my hand and slapped her right ass cheek. Rhea growled but never uttered a word of protest. Her hips moved backward driving me deep with each thrust. Her body began to shake again. Our connection was growing stronger with each movement of our bodies. I could feel how close she was and I slowed down but thrust all the harder. If I timed it right we would come at the same time. My own pleasure was on a level I had never experienced before. We were both on the verge and when we did climax it took everything I had not to scream. My knees were shaking and I nearly collapsed on top of her. Rhea's eyes were half open and looked at me with newfound wonder.\n\n\"I should have told you,\" she whispered as we held each other afterwards. \"I guess I should have asked permission.\"\n\n\"You did what you needed to do,\" I replied as I kissed the side of her neck.\n\n\"If you do that,\" she warned but I already knew. \"I need to show you how to block unwanted contact, if I don't you'll go insane.\"\n\n\"Tell me that Cindy is okay,\" I asked as my arms slipped around her.\n\n\"She is fine. I was just so lonely.\" She said but it wasn't just her words but the waves of emotion that struck me hard. \"Your bond with the water was so damn clear to me. I didn't want you to suffer. I know all about loneliness...\"\n\n\"Not anymore,\" I said and held her close.\n\nWe moved to the cot and lay there in a simple embrace as she told me everything she thought I should know about her people and their long history. I closed my eyes and our thoughts intermingled. I could not only hear her thoughts clearly but also see her memories and the tragedy that befell so mighty a race. A history that spanned three million years and then literally overnight it fell into chaos and ruin. The same intensity that had allowed them to conquer much of the galaxy had also ended up being their Achilles Heel. They had believed themselves above all the younger races and indulged in every vice and sin they could conceive of. There arose out of that wonton psychic vortex the embodiment of their doom, a being of pure energy that devoured the very souls of her people. Their only hope of survival was to scatter and hide on worlds full of life and other sentient beings. They used humans to mask their psychic scent. The devourer of souls is still out there hunting them to extinction. \n\nShe clung to me and we drifted into a kind of shared meditation. I could feel her thoughts touching mine. No, it was more than that I could feel her soul blending with mine. I felt a sudden fear that a part of me was melting away. Rhea was there to sooth and tell me that everything was going to be alright. I did the only thing I could do. I let go. I trusted her with my life so why not more. The melting became something greater. For a moment there was no difference between us. For a moment only one soul remained. The moment passed and I was myself again. I could feel Rhea close so I drifted with her until the dawn. \n\nWe awoke for breakfast the next day and I began my training on filtering out the background noise of unwanted psychic contact. We split up and I washed up in the men's shower. I had to focus on spoken conversations to weed out the thoughts of others. It was surprisingly easy. I wondered if the time I had spent in our shared meditation some of her discipline had rubbed off on me. I caught up with her in the communal mess hall and we ate breakfast with the soldiers and the technicians. I found that my appetite was much improved after worrying about Rhea for so long. We had two more days here to observe and keep in the loop with the rest of the projects I was overseeing. I tried to keep as busy as possible while Rhea played my dutiful shadow. \n\nWhile I hammered away at Ares as well as other projects the ability to mute the thoughts of others became easier. The more I tried the more control I had. It eventually felt like turning the volume knob on my dad's stereo. All was going well until we were invited to dine with the General that evening. The sultry Major had sex on the brain and it came over in waves every time she looked in my direction. If there was any doubt about how she felt about me it had been removed entirely.\n\n'She wants you so damn bad I can feel it,' Rhea sent silently.\n\n'You noticed huh,' I sent back trying to adjust my erection without being too damn obvious about it.\n\n'Maybe I should leave early and let you and her have the jet to yourselves.' She threatened giggling the entire time.\n\nI just focused on my meal but it was difficult when images of what the Major had planned for me kept intruding. The General seemed completely oblivious to the entire exchange. Though he did comment about losing such a fine officer but knew that I could count on her when it mattered. Another wave of erotic thoughts came to me with tsunami like force. I thought I might just climax from her hunger alone. I was given a reprieve when the meal ended and the General sent the Major and Rhea away so that he and I could speak in private. The General produced an aging humidor and removed a hand rolled Cuban cigar. He admitted that he didn't have many vices but he did have a weakness for fine tobacco. He turned on the smoke eater that had been installed for just this occasion and lit up. He stood there and I could see a kind of serenity settle over him.\n\n\"I wanted to thank you,\" he began. \"I am very pleased that you requested her for your team. She can be a little headstrong but she is a fine officer and deserves a chance to shine. I have every confidence in her.\"\n\n\"That is high praise indeed,\" I replied. \"I must admit that wading in through the intricacies of both the Pentagon and the White House has been a bit of a mine field for me. I know I have ruffled a few feathers since I was given this assignment. I know she can help me maintain great levels of communication between the powers that be and Numenor. I...\"\n\nI stopped cold when a message hit my HUD. There was a priority email from Nick. I skimmed the contents and felt a chill when I finished it. I stood up and informed the General that I had to leave immediately. There was an emergency back in Washington. He was on the phone getting our jet prepped as I left the room in a hurry. Rhea and the Major were chatting in the outer office when I opened the door.\n\n\"Grab your shit we need to leave right now,\" I said and they both went into action instantly.\n\nI followed them out to the hall and made my way to my room. I was able to pack my belongings in no time at all. I packed Zoe's gifts away with the rest of my clothes. I bit back another tide of dirty thoughts and finished packing. I had one suitcase in my left hand and I grabbed the silver case with Rhea's armor in it and headed for the elevator. Rhea was right behind me and the Major was waiting for us by the elevator. I had heard the military packed light but this was ridiculous. We took the elevator up to the hanger even as the ground crew cleared us for departure. Our pilot arrived a few minutes later. He had been caught by surprise and it had taken him a little longer to get ready. Thirty minutes later we were in the air and winging our way back to the capitol. \n\n\"So what is going on,\" the Major asked.\n\n\"Well Jordan, is it okay if I call you Jordan,\" I asked in turn. \"I have been mentally calling you by your rank this entire time.\"\n\n\"Jordan is fine when we are alone like this. I prefer either my rank or last name in public if that is okay with you?\"\n\n\"Okay, anyway did you hear about the suicide of a certain senator?\" I asked and she nodded. \"His widow and the two secret service agents guarding her were murdered last night and their bodies were discovered a little over an hour ago. Needless to say shit has hit the fan. The President wants me back so we can see what happened and to meet my new military attach\u00e9.\"",
        "\"I'm going to meet...\" Jordan stammered and then fell silent.\n\n\"Relax, he is a great guy and really laid back. Now the lady replacing him is another story. I've only seen her at functions and that sort of thing. How she will react to me is anyone's guess. I hope your dress uniform is pressed.\"\n\n\"Always,\" she said and accepted the glass of wine to help calm her nerves.\n\nOnce we entered D.C. airspace we had two fighters escort us in. I had never had that sort of treatment before. Of course the death of two secret service agents and the senator's widow was huge news as well. People were still reeling over the senator's suicide. This smacked of intrigue and the last thing a retiring president needs in stress like this. Jordan checked and rechecked her appearance in the jet's bathroom at least three times. Rhea inspected her and gave Jordan her approval that seemed to ease her nerves. We landed and a second escort was waiting for us. The three vehicle convoy would usher us post haste to the White House and the emergency meeting. I suspected they knew the widow had come to see me and I had to fess up and hand over the thumb drive. I still got a thrill every time we passed the gates outside the White House. It was nearly two in the afternoon by the time we reached one of the conference rooms and met with the President and his staff. I introduced the Major to her commander and chief and she saluted before shaking his hand. Rhea and the Major were asked to remain outside while the situation was addressed.\n\n\"Everyone,\" the President said in greeting. \"Thank you all for dropping everything and rushing here. I am sure you are aware by now that Senator Long's wife and her security attachment have been murdered. I don't need to tell you how bad this is going to look in the media. I called Greg in so that he can help our forensic team look over the security footage and discover what sorts of countermeasures were used. We need to find out why she was killed and who the perpetrators are.\"\n\nThe rest was lost on me as the tidal wave of anger and fear overwhelmed me. I excused myself as soon as I could to get away from the emotional vortex that was sucking me in. I was directed to another room where secure computers were located and members of the FBI's and Homeland Security's crack team of security analysts awaited me. They were in the process of watching the video footage from the Senator's home where the event had unfolded. Rhea stood outside while Jordan and I watched the event replay. The big screen was divided up into twelve different feeds from the various cameras all over the mansion. I stood behind the lead analyst and he took over the display and keyed a sequence of footage that would follow the events as the assassins passed various cameras.\n\nI felt my fingers dig into the padded top of the chair. The car pulled up in the drive. They parked so that only the very front of the vehicle could be seen by the camera. Four figures exited the car and approached the front door. They used a key to enter the house and inputted the proper passcode into the security panel. At this point the team split up. Two of them went upstairs while two went towards the rear of the house. The big screen split into two displays now. We could watch the progression of both groups side by side. The second floor team drew their weapons and once they reached the top of the stairs they slowly entered the hallway. I flinched as I watched the secret service agent posted outside the widow's door fall to the floor. I turned my attention to the other team and they had reached a room in the back of the house. They opened the door as one man fired at one of the two men seated watching television. His partner stepped in and executed the second man as he tried to get to his feet. They were brutally efficient that much was clear. The second floor team entered the widow's bedroom and shot the second secret service agent. I watched as a woman I had made love to only a week ago was drug onto her bed and secured there with zip ties.\n\n\"You may want to turn away,\" one of the technicians offered. \"The next bit is gruesome.\"\n\nI was about to ask what he meant by that when I saw one of the assassins take out and unroll a leather tool case. Oh hell, they tortured her to death! I took the advice and left not wanting to see her suffer. I leaned against the wall in the hallway. I told Rhea what they had done to the widow. Her hands clenched into fists as she lowered her head. I could feel her white hot rage. I never suspected that she had grown so fond of the senator's wife so quickly. That had been an epic night though and I would remember her quite fondly. A single look at Rhea and we were both committed to finding the assassins and making them pay. I could have simply loosed Rhea and let her hunt them down but it might look bad if four mutilated bodies suddenly appeared without warning. I was turning to return to the room so I could help find these monsters when Jordan asked me an odd question.\n\n\"Um, do you mind if I change into something more comfortable Sir?\"\n\n\"Well, you have already met the President so I don't see why you should be stuck in that stuffy uniform.\" I said and she dashed off to change. \"I thought I was the slave to casual clothes.\"\n\n\"Do you need anything,\" Rhea asked smiling. \"I am going to grab a bite.\"\n\n\"Yeah, can you bring me a little something when you come back?\"\n\nI rejoined the others and bit back my revulsion as I watched the sheer brutality of what they had done to Amarna. One of the techs had actually spent time to set up a counter to see how long it took for the widow to die. I knew that details were important but I saw it as a bit callous. While forensic technicians collected anything physical from the location it was our duty to find anything that could point towards who did this. There were no guarantees of course but we had to do the best we could. We had a direct link to the senator's security servers. It was these servers that stored all the video surveillance. I copied the server data to my other half so that we could go over it as quickly as possible. Even with a Numenor satellite feed it still took seven minutes to download the dozen or so terabytes of video.\n\n\"Wait, did you just...\" one of the techs asked as he spun around to face me.\n\n\"It'll go a lot faster this way,\" I told him as I closed my eyes. \"Shake me if there is something critical to tell me.\"\n\nI delved into the digital realm and hovered in the formless ether that was the bridge. The bridge was the nexus point between flesh and cold hard tech. I gestured and the footage played out. I played it through one time and then took note of all the obvious details. The guy with the key was left handed. The fact that he had a key stinks of an inside job. Add to that the fact they had the access code for the security system. I called up the complete employee history from domestics to security. The perpetrators were masked, wore gloves and moved with military precision. Unfortunately most of the security personnel were ex-military. I pulled up the front grill of the vehicle and ran a comparison to see who made it and if any of the help owned a car like it. I pulled up any other details about the car that might help narrow my search.\n\n\"They parked so that most of the car wasn't visible to the camera,\" I muttered.\n\n\"Whoever it was also had the access code for the main gate. That's another notch on the inside job column.\" My other half said as we worked to dig clues from the footage. \"I think the second guy on the second floor is a doctor or at least has some medical training.\"\n\n\"Why do you say that?\" I asked as I pulled up the bedroom video. \"He's not armed and he came in wearing latex gloves.\"\n\n\"Yep, besides look at the precision of the cuts... his hand never shakes and there are no hesitation marks.\"\n\n\"So a pro,\" I remarked. \"Do you think this has anything to do with the thumb drive and the Usher family?\"\n\n\"The probability is above the ninety one percentile,\" he replied. \"One more thing, the data files for the footage are too large even for high definition images. I suspect there is hidden material contained within the data.\"\n\n\"Let's take a look,\" I said and isolated a single frame taken from the bedroom.\n\nHe was right. The size of the file was a third bigger than it should be. I dug deeper and that's when I found the marker within the picture. I isolated it and a new image took shape. At first I thought I had made a mistake or that it was out of focus but it was in fact a thermal image. The cameras must have a second lens that picks up only infrared footage. It took a little bit but I was able to bring up only the video of the intruder's heat signatures. My other half was able to determine that there were in fact three men and one woman. The woman was the one that tortured the widow. It didn't give us any identities but it was a small step forward. I watched the footage side by side and noticed how the figures moved about the house. There was no guessing or hesitations anywhere in the footage. They knew where they were going and hit with clinical precision.\n\n\"Why did they park there,\" I asked my other half.\n\n\"To reduce the chance of discovery... no if they wanted to do that they would have parked completely out of camera range. I don't know.\"\n\n\"I think I do. What if he did it out of habit? What if that was where he always parked his car? It is really hard to break something as simple as that.\" \n\n\"I see your point,\" my other half replied. \"I will check the other data and see if I can find a match.\"\n\nHours of footage blurred by as I watched and even I couldn't keep up with the A.I. at this point. Suddenly, one by one, windows appeared showing a car parking near the same spot as the assassins. My other half isolated a single figure that moved identical as the lead figure in the main video. He produced a close up and ran facial recognition software to produce an identity. His name was Marlin Menendez and he used to work for the senator as his head of security. But to be sure I checked for any large withdrawals from the Usher accounts and there they were two payments that totaled one million American dollars. I followed the money to an account in a bank in the Cayman Islands. The account hadn't been accessed yet so I placed a trigger that would alert me when they tried to remove the money. With a shout of triumph I rose up and breached the surface. My eyes snapped open and I stood up grinning from ear to ear.\n\n\"We have a suspect,\" I said as the technicians turned to face me.\n\n\"We got who,\" one of the techs asked.\n\n\"Marlin Menendez,\" I said as I gestured and displayed the footage on the big screen.\n\n\"You did all of that in two minutes?\" Another of the techs asked staring at me in disbelief.\n\n\"I'll let you check my work. I need to get some fresh air.\"\n\nThey attacked with a ferocity that surprised me. It was as if I had loosed the hounds on this guy. Outside in the hall Rhea stood waiting for me. She handed me a folded piece of paper and left without a single word being spoken. I unfolded the paper and it was a hastily written clue. There were two lines that described the Oval Office. I made my way there and found two agents guarding the door. The one of the left handed me a second piece of paper. This was turning into a treasure hunt but what or who was the treasure? Had Rhea set this up, if so I liked where this could be leading. I followed the notes all over the White House until I finally reached the final note. I opened the door to the Kennedy bedroom and looked around. It was a beautifully decorated room with walls of French vanilla with blue accents. I was taking in the sight when I heard someone approaching. I reacted instinctively and headed for the closet. I had barely closed the door when the door to the bedroom opened. A man in a marine uniform led a petite woman into the room.\n\n\"This is amazing,\" she cooed as he took her into his arms.\n\n\"We don't have much time,\" he growled as he kissed her neck. \"We can't use the bed I hope you don't mind doing it on the floor.\"\n\n\"Are you kidding,\" she purred as she unzipped him. \"I love getting it from behind.\"\n\nI watched them through the slits in the door. Their hunger was infectious and I felt it like it was my own. I hand clamped over my mouth as she pressed her tits against my back. I nodded and she let go as I turned around to face her. I was genuinely surprised to find Jordan standing there. I was sure it was going to be Rhea wanting another opportunity to make love in the White House. Jordan was claiming me after our emergency departure and the death of the senator's widow. We stared at each other for a bit feeling the mixture of nerves and hunger building as the girl outside dropped to her knees and began blowing the marine. He tried to remain quiet but she was taking most of his cock between her lips early on and that made it damn near impossible. Jordan took a breath and then leaned in close and kissed me. Her arms slid around my neck as I pulled her close. I closed my eyes and was lost in the moment.\n\nWe could hear the noises from just outside the closet. The intern was moaning as she sucked off her partner and he was gasping and praising her oral skills. Jordan broke our kiss and my eyes snapped open. She was smiling and laid her head on my chest. I could feel her thoughts and she was so out of her depth. Jordan was a very private person and while she had taken lovers there had always been some kind of emotional connection. I was her first fling. I touched her arm and whispered to her.\n\n\"It is okay if you don't want to...\"\n\nJordan took this opportunity to unzip me and free my erection. Her cool hands on my warm flesh made me flinch for a second. She giggled as she began stroking me. The fiery rush of hunger blazed from her as she looked up into my eyes.\n\n\"I want you so bad,\" she whispered as her other hand joined the first. \"Damn, you are freaking huge boss man.\"\n\nI actually flinched when she used the nickname Rhea often used. Jordan mouthed the words 'here I go' as she dropped to her knees. I looked through the slats enjoying the view. I clenched my teeth together as I felt her mouth wrap around me. The marine growled and shoved the girl onto her back before flipping her over onto her belly. I bit back a moan as Jordan moved her hand faster now as the action outside grew more and more intense. The marine tugged the girl's slacks down and got her on her hands and knees. Jordan took my entire length between her lips as I watched the marine stab his cock into the girl's soaked slit.\n\n\"Oh god... so nice and thick...\" she moaned as he began moving.\n\nThe door to the hall opened and a second marine walked in. The girl stiffened in surprise but when he unzipped and offered her another cock to play with she relaxed and went all in. Jordan's head was moving now and I placed my hand on the top of her head as things outside intensified. The first marine was pummeling the girl from behind while the other was fucking the girl's face in nice long strokes of his hips. Jordan stood up and wiped her mouth.\n\n\"Ever fuck standing up,\" I whispered in Jordan's ear and she shook her head. \"First time for everything I suppose.\"\n\nI grabbed her by her hips and easily lifted her up. Jordan's legs wrapped around me as we slowly lined things up beneath her skirt. I lowered her onto my aching erection and we gasped as I sunk deep into her. Meanwhile the first marine was grunting as he got close to shooting off his load. The girl and the other marine were whimpering as she was furiously pounded from behind. She was taking his entire cock down her throat and it looked like a three way tie for the finish line. I on the other hand was slowly lifting and dropping Jordan onto my cock. She kissed me and I forgot all about the trio just outside. I was almost drowning in Jordan's hunger. The fear of being caught mingled with the pleasure she was enduring was overwhelming. Jordan broke the kiss suddenly when the trio outside cried out as they all climaxed within seconds of each other. The marines were the first to leave followed a minute later by the shaky intern.\n\nThe door closed and Jordan began moaning in my ear as we continued making love. It was slow and sensuous as her first orgasm crept up on her. I felt her teeth sink into my neck as her first hit suddenly. I grunted in pain as her teeth broke the skin. I turned us and pressed her back against the closet door. The door began to wiggle a bit as I fought to keep on fucking her and open the door at the same time. Jordan just clung all the tighter as the door opened and I took several steps to get in the proper position. Her back hit the wall and I adjusted my footing.\n\n\"Here it comes,\" I warned her as I picked up the speed and force behind my thrusts.\n\n\"Jesus Greg you are going to split me in two,\" she cried out softly. \"Oh my poor pussy...\"\n\nI ignored her as I took my pleasure from her. My cock pistoned in and out of her and my own climax was quickly building. Jordan tugged up her shirt and offered her full perky tits for my attention. I slowed so that she could feed me first one distended nipple and then the other.\n\n\"Are you going to shoot inside of me?\"\n\n\"If I do we might leave a mess,\" I said before returning to feasting on her tit flesh.\n\n\"I don't care... I just want to feel your cum hit my womb.\"\n\nI smiled at her and thrust slow but with enough force to incite gasps and whimpers from her. I was so damn close and I warned her. I built up speed as I lost the battle with my orgasm. Jordan's eyes went wide when my cock swelled up inside of her. I clamped my hand over Jordan's mouth as I thrust one last time and fired my load deep inside of her. I watched her eyes go wide as her body shook with her own climax. Jordan nodded and I removed my hand from her mouth. \n\n\"I see why Rhea is so damn protective of you. If I had a man in my life like you I'd... oh wait I do have a man like you.\"\n\n\"I'm going to set you down now,\" I warned her as I bent my knees and let her feet touch the floor. \"I hate this part.\"\n\n\"Me too,\" she gasped as I pulled out. \"Damn, that was amazing... I can't wait until next time.\"\n\nI glanced at the period costumes hanging in the closet. I walked over and borrowed a carefully folded handkerchief from a navy blue dinner jacket. I handed it to Jordan so we didn't leave a mess behind us. We were in the White House after all. She smiled as she took the handkerchief and managed to stem the flow of our mixed fluids. I guided her to the bathroom and we both washed up. I checked to make sure there were no obvious wet spots before we returned downstairs. We were mere steps from our destination when a secret service agent intercepted me. Jordan continued to the room where the FBI techs were furiously working. I followed the agent to the Oval Office. The President stood with his hands clasped behind his back. He was facing me and his expression was unreadable. However, I could feel he was bursting at the seams.\n\n\"I have been speaking with Nick,\" he said breaking the silence. \n\n\"Oh boy,\" I said thinking Jordan and I had been caught with our little liaison in the Kennedy bedroom. \n\n\"What... oh no you are completely misunderstanding me Greg,\" the President chuckled. \"I told him to give you a raise. Your assessment of the security footage was spot on. The FBI not only confirmed your suspicions but was able to track large payments. We are still working on identifying the other three men...\"\n\n\"One of them is a woman Mr. President,\" I said correcting him.\n\n\"How do you know that? They were all wearing masks and loose clothing.\" He replied.\n\nI gestured and tapped into the Oval Office's holographic projectors. I showed him the infrared footage of the doctor at work. He stared in disbelief and winced when he saw as the widow fought against her restraints. I shut off the images and apologized. I paused for a second and then posed a question to the Commander and Chief.",
        "\"Were you aware of the senator's unusual collection?\"\n\n\"I heard rumors,\" he said frowning. \"I saw the video with his watch and the coin. Do you think that is why this happened?\"\n\n\"I may have stumbled upon something direr,\" I said wondering if I should continue and the President picked up on it instantly.\n\n\"Do you feel this might impact national security,\" he asked and my expression spoke volumes. \"If you aren't sure please trust my judgment.\"\n\nI pulled up a file and once more borrowed the oval office's holographic projectors. I gestured and the Usher family tree hovered before the President's eyes. He looked at the bottom and saw the senator's name. While I didn't intrude upon his thoughts I could feel the intensity of them as he pondered the effect of such a family. As I waited for his decision I authorized my other half to initiate the ghost protocol. It drained every bank account attached to the Usher family and redirected them to hundreds of other accounts worldwide. The President asked me how I received this info and what my thoughts on the matter were. \n\n\"I don't think it's a coincidence that the story that Poe wrote and his strange death are unconnected. I suspect that the widow delivering this to me signed her death warrant.\"\n\n\"I thought her news conference location looked familiar,\" he said with a smile. \"Did you um... how do I ask it delicately?\"\n\n\"Like a boss,\" I said and we broke out in laughter. \"She wanted my protection. I am sorry I couldn't do more.\"\n\n\"I suspect a family as well connected as this would have succeeded no matter the cost. We will talk more later but for now get some rest and the taskforce will keep you in the loop.\"\n\nI left a troubled man and returned to Jordan and Rhea. I am glad I am only a consultant especially during times like this. The White House was still abuzz with activity as I passed members of the President's cabinet as well as a notably visible security force. I reached the hall leading to the conference room. I was rounding a corner and saw not two but three stunning redheads. Two of them I recognized instantly while the third was unknown to me. She was as tall and athletic as Rhea but was smiling about something Jordan had just said. The woman was dressed in a dark militaristic uniform that had me scratching my head. I didn't know her or the group she belonged to.\n\n\"Here's the man of the hour,\" Rhea said when she spotted me.\n\n\"So he is the one I have to thank,\" the stranger said in a light alto voice.\n\n\"Be careful he is a heart breaker,\" Jordan added.\n\n\"Not to worry I have both my hands filled at the moment,\" the woman replied with a wicked grin.\n\n\"You have me at a severe disadvantage,\" I said shaking the other's hand. \"I am Greg Robinson and you are?\"\n\n\"You may call Inquisitor,\" she said looking me over quite shamelessly. \"I have you to thank for the new gauss pistols.\"\n\n\"Inquisitor... gauss pistols...\" I said fumbling for a memory which my other half provided. \"OH... you are the one from the Vatican. I am so sorry I didn't recognize you earlier. I can't take all the credit we have an amazing team. Have you had the penny tour Inquisitor?\"\n\n\"I have but I am sure it will be more interesting with you as my guide,\" she purred openly. \"Have you ever been with three redheads at the same time?\"\n\n\"I am not sure any man should be that lucky,\" I said. \"But uh... I'd be an idiot to turn down a life altering event such as that.\"\n\n\"Oh there you are Greg... we have some more details...\" one of the techs from the taskforce grabbed me and tugged on my arm.\n\n\"Your loss Greg,\" the Inquisitor said blowing me a kiss.\n\nI muttered curses under my breath as I followed the excitable young man into the room. There was a face on the big screen. It was a woman. She appeared to be in her late thirties early forties with short cropped blonde hair and a frumpy disposition. The display changed and showed a body in what appeared to be an alleyway. The corpse was between two trash cans near a closed wooden door. There were bright yellow markers ranging from two to ten around the body. The corpse had been identified as Doctor Susan Stern. She had been shot over a dozen times and the markers showed the location of shell casings from the weapon that had been used. Three of the slugs had torn through her face but she had been identified by her fingerprints. She was a researcher at one of the local universities. Her specialty had been neurological diseases.\n\nThe techs believed she was the person that had tortured the widow. I thought that the former head of security hadn't wanted to pay her for services rendered or maybe he was just tying up loose ends. One of the other techs informed us that they were running down known associates of our chief suspect. Two of them they hadn't been able to locate yet but they were still working on it. I thought they might just find two other corpses before this was all said and done. He was improving his pay out and removing links to his affiliation with the crime with cruel efficiency. My theory would bear fruit six hours later when two more corpses were dragged out of Huntington Creek Lake. They had been executed with two shots in the chest and one in the head. I wonder what had set him off to unload a clip into the good doctor. I left the briefing and let them do their work. I had given them a suspect and if that fell through I would reexamine the evidence but until then I had a birthday party to prepare for.\n\nI found Rhea and Jordan in the Lincoln Library sipping coffee and chatting away like old friends. I tried and failed to hide my disappointment at the Inquisitor's departure. I sat down and Rhea poured me a cup from the antique silver service. I fixed it to my liking and took a sip. It had a little bit of a bite and I was unfamiliar with the bean. Jordan told me it was from Jamaica and difficult to get since the last hurricane tore through the island destroying buildings, lives and coffee alike. I asked Jordan how she was enjoying her first night in DC. She blushed and told me it had exceeded all expectations. I wonder if that meant me or meeting the President. I had just finished my first cup of coffee when I received an alert on my HUD. The message read only that Project Ghost had been completed and to turn on the news.\n\n\"I think there is something on the news we should see,\" I said as I reached for the remote and turned on the huge flat screen television.\n\n\"...the donation of the over two hundred thousand acres of land to the Lakota tribe has sparked confusion and outrage... If you are just tuning in the chief of the Lakota people, Black Elk has informed the news outlets of a gift to his people of two hundred and fifty thousand acres of pristine wilderness to the Lakota and other tribes to use as they see fit. The anonymous donor has not been mentioned but the land in question has been in private hands for several generations. A spokesman for the family could not be reached for comment. Again the Lakota people have been given over two hundred thousand acres of land this evening...\"\n\n\"Wow, that is amazing,\" Jordan gasped. \"They deserve it of course. I hope they are happy.\"\n\n\"Me too,\" I replied looking over at Rhea who just smiled and nodded.\n\n\"Whoever it was is my hero,\" Rhea said pouring another cup of coffee for me.\n\n\"It is mineral rich and that doesn't even count the trees and lakes located there... or so I hear...\" I said and watched Jordan's eyes go wide in surprise. \"It's the least one could do after all.\"\n\n\"I don't even want to know,\" Jordan said grinning. \"Any other news reports in the works...\"\n\n\"Most likely,\" I replied. \"There are twenty or so other properties but these involve locations worldwide. We'll see how they react to eviction and use of force if need be.\"\n\n\"I guess they shouldn't have pissed you off,\" Rhea said her voice cold and emotionless.\n\n\"I guess not.\"\n\nProject Ghost had involved not just the monetary assets of the Usher clan but also nearly thirty pieces of high priced property as well. My other half had specific instructions. They were to contact lawyers and law enforcement wherever the properties were located and make sure that anyone living in said property was evicted immediately. They were to remove only what clothing was in those structures and nothing else of value. One by one the Ushers were removed from ancestral homes by lawyers and in some cases at the business end of a firearm. I had made sure that the lawyers and police were paid for their trouble quite handsomely. Once the Ushers were gone I had trusted friends that would go in and itemize every last thing and send me a report. They had taken a life in the most inhuman way possible I figured the least I could do was to take what they held most dear from them, money and property.\n\nI hadn't decided if I was going to sell the homes or just donate them as museums to the local communities. I would see once I had those reports. There was a part of me that wanted to hunt them down and make them suffer like the widow had but I wasn't like that. It was better to see them homeless and penniless. My thoughts began a dark spiral until Rhea placed her hand on my shoulder. I looked at her and she reminded me that Roo's party was tonight. I cursed and we headed out. While Rhea drove I called Senator Barrington's home. Dawn answered the phone. I asked her when I should be there and she told me six o'clock. I had enough time to wash up and change. I had already shipped off Roo's gift but I wanted to be there when she opened it. \n\nMy car passed through the security check point and pulled in front of the Barrington home. It was more like an estate but when you are a veteran senator you end up in places like this. I got out and waited for Rhea to park the car but instead she simply drove off, what the hell. I was about to knock on the door when Dawn, the senator's wife, opened it and gestured for me to enter. I gave her a hug once the door was closed and she told me that her husband was running late. She poured me a drink and we settled onto the couch until the other guests arrived.\n\n\"How are you feeling,\" I asked and she nodded.\n\n\"I am trying what the doc calls a cutting edge treatment,\" she said sipping her glass of juice. \"It is a virus that has the guts taken out and refitted with something to attack the tumor.\"\n\n\"Is it working,\" I asked and she shrugged.\n\n\"I received the treatment this morning. I should know in a day or two. Why don't you go see Roo and see if you can cheer her up? She's been in the dumps for the last week or so.\"\n\n\"I'll be right back down.\" I said as I got up and headed upstairs. \"Hey Roo... are you decent?\"\n\n\"Yeah unfortunately,\" she said opening her bedroom door. \"Come on in Greg... what do you think of my costume?\"\n\n\"Wow... you look just like Velma from Scooby Doo,\" I said and I stood at the doorway of her room.\n\n\"Don't be shy I won't bite you,\" she said as she returned to her lighted vanity. \"I even have the glasses to go with.\"\n\n\"Your mom said you are a little upset,\" I said as I sat on the end of her bed.\n\n\"A little... but now that you're here I feel like things will improve.\" She said looking at me from her mirror. \"Can I ask you a personal question?\"\n\n\"I suppose so,\" I said unsure where this was going.\n\n\"How was your first time... sex I mean...,\" Roo asked stammering a little.\n\n\"Horrible... terrible... I was so damn nervous I pulled out and came in her left eye. I was so damn embarrassed.\"\n\n\"What did she do,\" Roo asked laughing.\n\n\"She made sure to put on a condom the next go around,\" I said smiling.\n\n\"How many times... I mean... um...\"\n\n\"Three times in all... I was horny as hell and it was my first time and all. I got the hang of things pretty quick.\"\n\n\"Dang Greg you are a fiend...\" Cindy said she began but I cut her off.\n\n\"What did she tell you?\" I asked feeling a sense of panic set in.\n\n\"Relax,\" she said standing up and walking over to her closet door. \"I asked what kind of things turned you on and she gave me a few hints.\" Roo said as she bent over revealing her naked pussy underneath the skirt she was wearing. \"She said that you were an ass man. Is that true Greg? Are you an ass man?\"\n\nShe tugged up her skirt revealing the perky round bottom of hers. I felt my mouth go dry and my cock get hard. I watched as Roo grabbed her ass cheeks and pulled them apart. I could see her puckered little asshole as well as her soaked little slit. Roo moaned as she gently pulled her labia apart and rocked her hips a little.\n\n\"Do you want to take my virginity Mr. Robinson? Do you want to make me scream?\"\n\nJust then the sound of the front door closing echoed from downstairs. I had been set up. I thought with Dawn downstairs there was no way for Roo to get me alone. I was so wrong. As I watched Roo dropped down to her knees and crawled over to me. She licked her lips and moaned as she approached.\n\n\"Can I suck your cock Mr. Robinson,\" she asked. \"Please take it out for me. I have been practicing for a while now.\" My hands seemed to move automatically as I freed my erection. \"Yes... oh god it's a lot bigger than I expected.\"\n\nShe knelt at the foot of the bed and as I held my cock for her she ran her tongue along the underside of it first. I let out a deep moan and she just smiled. I shivered as she lapped at the tip like an erotic ice cream cone. Roo closed her eyes as she opened her mouth and took the head between those pouty lips of hers. I gasped as her tongue worked on the sensitive tip. I was shaking as her head moved further down. Soon her head was bobbing up and down. I told her what a naughty girl she was and that really got her going. The minutes ticked by and more of my cock disappeared between her lips and down her throat.\n\n\"Oh shit... you deep throated me...\" I cried as her lips touched the base of my erection.\n\nShe pulled her head up and away. There were tears streaming down her cheeks but her expression was one of triumph. Roo stood up, turned around and pulled her ass cheeks apart again.\n\n\"I want you inside of me.\" She whispered as she started moving her hips downward.\n\nThere was no denying her even if I wanted to which I didn't. I lined us up and she slowly sank down impaling her body on mine. It was her turn to cry out. I tugged up her sweater and cupped her heavy tits in my hands. I teased them as she rocked her hips forward and back.\n\n\"Oh god... I am so full... I never knew...\" she grunted as she slammed her body against mine.\n\n\"You are a woman now,\" I said as I pinched her nipples. \"I am going to treat you like one.\"\n\nI stood up and took her with me. She could see her reflection in the mirror as I fucked her standing up. Roo watched my cock slide in and out of her. She cupped her own tits and played with them as I hammered her from below. Her cry as she climaxed was loud and without any warning. I never slowed down. She wanted to be fucked and I would give her what she wanted and more.\n\n\"I can see it... moving inside of me... unnnn so damn thick... feels amazing...\"\n\nI slammed into harder and faster. I was panting in her ear as I took my pleasure from her. It may be her birthday but this was my present and I was going to play with it till it broke or fell asleep. A second more violent orgasm slammed into Roo and all pretense of remaining quiet was gone. She howled as she came and if there was anyone left in the house they had to know what was going on. I stopped and let her catch her breath.\n\n\"Oh... my... god...\" she panted as she sat there impaled on my cock. \"From behind... will you fuck me from behind...? I'll beg for it...\"\n\nI lowered her to her feet and eased out of her. Roo never hesitated. She climbed onto her bed and got onto all fours and raised her ass high into the air. She wiggled it and even slapped her ass.\n\n\"Jinkies... I wish I had a nice big fat cock in my pussy...\" she giggled trying to get into character.\n\n\"Lose the outfit,\" I ordered as I undressed. \"Velma can suck my cock later on. Right now I want Roo to take it like a champ.\"\n\nShe slowly undid her skirt and I pulled it off of her. She shrugged out of her sweater and I pulled it up and off of her. Roo pointed to the wig she was wearing and I nodded. She removed it and I tossed it onto her mirrored vanity. She resumed her former position and offered me her body. I moved behind her and ran my hands over her entire body. I savored the feel of her smooth skin under my hands. I cupped her tits again and weighed them in my hands. She told me they were almost as big as her mom's. I took my erection in hand and teased her slit with it.\n\n\"UNNNN... you like my tits Mr. Robinson... I hope you do... what about my ass, do you like...UNNNN...\"\n\nI slammed my cock into her and she yelped in surprise. I grabbed her by the hair and made a fist as I began taking her slow and rough. Her gasps when my cock slammed into her got louder and louder. If she had wanted romantic she picked the wrong guy. I have always been about pleasure. \n\n\"Still sure you picked the right guy,\" I asked as I began to pick up speed.\n\n\"Best birthday... ever... fuck me Greg... make me yours... I love how your cock feels inside of me!\"\n\nI pulled her head back and watched her expressions as I pounded her from behind. She was panting as my cock swelled up inside of her. I told her I was going to shoot inside of her and she just nodded. I pummeled her insides until I was right on the edge. I cried out as I drove my cock into one last time. We both cried out as my load sprayed her insides. I fell atop of her covered in sweat and she just lay there and purred. \n\n\"Best present ever...\" I whispered in her ear and she giggled.\n\n\"You can fuck my tits if you want,\" Roo offered.\n\n\"I need to catch my breath,\" I told her. \"Besides I don't know when your mom is going to return.\"\n\n\"She never left,\" Dawn said from the doorway.\n\n\"OH SHIT,\" I said as panic gripped my body.\n\n\"Relax Greg,\" Dawn cooed. \"I just wanted to see Roo unwrap her present. Damn, I wish my first time had been that good. Is my baby happy?\"\n\n\"Thank you mom,\" Roo giggled. \"How are you feeling?\"\n\n\"Wet... soaked... horny as hell...\" Dawn growled. \"I just wish I had the strength to take you on Greg. I'd eat you alive.\"\n\n\"I have no doubt. I guess I should leave...\" I began but Dawn shook her head.\n\n\"You aren't going anywhere Mister,\" Dawn said crossing her arms under her tits. \"You two are going to shower and put on your costumes for the party. This could be the last birthday and... damn it I want it to be perfect!\"\n\nI just smiled and nodded. I got up and held Dawn as she cried. She laid her head on my shoulder and stood there quietly.\n\n\"You smell like sex,\" she laughed. \"Go clean up or sick or not I'm going to rape you.\"\n\nRoo and I showered together having a quickie before we got out. I dried off and followed Roo to her room where two costumes had been set out. The Velma costume was gone and in its place was one for a video game character named Tracer. The bright yellow leather pants hugged Roo's ass like a second skin.\n\n\"What am I supposed to be,\" I asked and she made a face.\n\n\"An archaeologist,\" she said. \"Come on really... the fedora... a whip and a leather jacket... it's a classic.\"\n\n\"I was kidding,\" I said as I dressed only realizing that this was in fact the body armor and whip that Zoe had made for me. \"At least it is comfortable. Are you going to be okay in that?\"\n\n\"Are you kidding,\" she purred. \"I have seen how you look at my ass. I will be just fine.\"\n\nThe first of the guests arrived and we headed down. Dawn was wearing a witch's outfit with a plunging neck line. It was difficult not to stare at her barely concealed breasts. Soon the place was filled with guests and even Janessa Sansa showed up wearing a skimpy zombie costume. I wonder if her father knew that she was here. Most of the guests were friends and schoolmates of Roo. There were a few family friends that help chaperone the party and make sure things didn't get out of hand. Dawn sat most of the time and I was nearby in case she needed anything.",
        "\"I appreciate it but this is a party Greg,\" Dawn said her expression tainted with anger.\n\n\"I know it is but someone needs to be near if you need anything. Besides with cleavage like that you think I could stay away?\"\n\n\"Tease... villain... violator of virgins...\" she said smiling at last. \"I hate feeling like this.\"\n\n\"I know. I just want to help.\" I said and she relented.\n\nWhen she needed to get to her feet I offered her my arm. Where she walked so did I and I kept looking at the door waiting for her husband to appear, he didn't. The hours passed and Roo opened her gifts and hugged everyone. When it was obvious that Dawn had reached her limit I helped her up the stairs. Near the top she nearly stumbled so I scooped her up into my arms and carried her the rest of the way. I helped her out of her costume and into pajamas. Despite her illness she did have an amazing body. I saw where Roo got her beauty from. Dawn blushed as I tucked her into bed. I sat next to her on top of the covers and stroked her hair.\n\n\"It's been so long since...\" she muttered then fell silent.\n\n\"Is it the sickness or something else,\" I asked. \"You don't have to answer that.\"\n\n\"We've been living separate but discreet lives for about five years now. He never meant it to happen but people drift apart. I still love him and I know he loves me. He is just happier with someone else.\"\n\n\"I am sorry,\" I said and she made a face.\n\n\"Don't be I've had some amazing lovers over the years,\" she grinned. \"They weren't as handsome as you but they were quite young and quite eager. I hate leaving her alone Greg. I am glad you were her first. She has lusted after you for a while now. I was jealous at first but when I saw you too together I was so happy for her.\"\n\n\"You set me up Dawn,\" I said smiling down at her. \"Well you and a few others in your little conspiracy.\"\n\n\"Your daughter was a wealth of information. She's a little perv just like her dad. I am glad Roo has her as a friend. Do you think she would look out for her if she went to Miskatonic?\"\n\n\"I am sure she would,\" I said. \"They were hanging out downstairs like BFF's. I understand wanting her in good hands. If you want I will talk to the Chancellor. He is friends with Nick.\"\n\n\"We'll see. I don't know if Roo has made up her mind yet.\" Dawn said her voice getting softer.\n\n\"You should get some sleep,\" I said and she nodded.\n\nI continued stroking her hair until she fell asleep. I carefully got off the bed and headed downstairs. The party was all but over. The only ones left were the staff, Cindy, Roo, Rhea, Janessa and Jordan. I told them Dawn was asleep. Roo hugged me and thanked me for everything. I was asked to play bartender and assumed that I would be driving at the end of the evening. We went down to the basement where the Barrington's had a fully stocked bar including the bar top and stools. I took orders and ended up handing out a few beers and mixing a picture of margaritas. The ladies began talking as if I were invisible. It was amusing at first as Rhea and Jordan began comparing lovers. Cindy remained silent but kept an eye on me the entire time. Roo blushed furiously and admitted that she had recently lost her virginity. The bomb had been dropped and now stories about me were on just about everyone shared.\n\nJanessa sat there pouting and I once again realized I had been set up. Did they spend all of their off hours planning these things out? I fixed a second picture of margaritas as the energy shifted in the room. I was pouring the girl's drinks when Cindy asked Janessa about her costume. I looked over and she was standing up and turning around as the others asked her about her measurements and her consummate oral skills.\n\n\"I think I'd better...\" I began but the others shook their heads.\n\n\"Hush... women folk are talking,\" Cindy said with hands on hips.\n\nAw hell, this was going to get interesting real quick. Janessa bent over and Roo slapped her on the ass. The sound was loud and had the girls downing their drinks. I was about to fix a third picture when Rhea moved behind the bar and took over. She whispered that my services were required. The music began and Janessa began to dance. Holy shit could that girl move! I couldn't take my eyes off of her. My daughter moved next to me and what she said next made sense of everything. Janessa was an exhibitionist and got off being watched, the more the merrier. As the dusky skinned girl gyrated for us the others began egging her on. She started losing pieces of her zombie costume now. I swallowed and wasn't sure I was up for this sort of thing with Dawn sleeping upstairs.\n\n\"Mom would love this,\" Roo said as if reading my thoughts.\n\nI wonder if I was projecting my desires on the others. I knew that the mental gifts that Rhea had given me worked both ways. Janessa bent over and reached back as she tugged her bottoms off nice and slow. The bright blue thong bisected her lovely ass cheeks like a bolt of lightning. A minute later she was dancing wearing only a blue lacy demi bra and that matching thong. How the hell did her tits not fall out of that top? I could clearly see her dark areolas and hard nipples beneath the translucent material. I wanted to take her into my arms so damn bad I was shaking but I wasn't sure I should. The decision was taken out of my hands when the girls stripped me of the long coat, hat and whip. They continued and removed my shirt, shoes and jeans last of all. So there I was standing in front of the undulating Janessa in only my boxer briefs.\n\n\"Hey Mister... can I suck your cock?\"\n\nThe roar from the others was deafening. They wanted to see her do it, so did she. Janessa walked up to me but instead of simply kneeling in front of me she slithered down into a crouch and freed my cock. It sprang up and nestled between her tits. She had managed to snare my erection in her cleavage beneath her bra. I felt her hands on my ass cheeks as she began teasing me. The sweat she had built up dancing provided a lubricant for my cock to easily slide between her ample cleavage. She tilted her head and began licking the tip of my cock when it popped out the top of her bra. Janessa had me shaking in no time. \n\n\"I think he likes it,\" Rhea said as she poured the next round.\n\n\"His cock is so damn hard,\" Roo whimpered.\n\n\"Yeah it is,\" Moxie added as she walked down the basement steps. \"Am I too late?\"\n\n\"Aw hell...\"\n\n\"Hush man slave,\" Cindy barked just before the group busted out in laughter.\n\nMoxie had been held up but here she was just as Janessa unhooked the front of her bra freeing her tits and my erection. I felt her body shifting as she brought her eager mouth into play. Her tits were rubbing against my thighs as she began sucking me off. The laughter became moans as the scene intensified. Janessa's hands gripped my ass cheeks tighter as she began thrusting her head forward and devouring my cock. I was grunting openly as the pleasure became too much to bottle up any longer. \n\n\"I think she is about to pop his cork,\" Jordan said with a whimper.\n\n\"I believe you are right,\" Rhea agreed. \"I hope she can swallow that much.\"\n\nMy back arched driving my cock deep between her lips as I came. Janessa just shut her eyes and swallowed for all she was worth. My cry pierced the air and everyone fell silent as I pumped my load down her throat. The music faded and I stood there shaking as I recovered from a mind blowing climax. Janessa came up for air and was smiling at how well she had done. But this was just the beginning. Something in me snapped and I grabbed her by the hair and hauled her to her feet. I snatched her off her feet and placed her ass on the surface of the bar. The girls scattered as I buried my face between Janessa's legs. It was her turn to moan and cry out. The crowd formed around us and the urging began. While they had silently watched her go down on me now they were cheering for me make her cum. Janessa, the gorgeous brunette that worked for her dad was now at my mercy. She dug her fingers into my hair and held me in that intimate embrace. \n\n\"She's gonna blow...\" Cindy cried out in warning.\n\n\"Damn, that didn't take very long,\" Roo said.\n\n\"I think she got all worked up dancing for him,\" Jordan offered.\n\nJanessa was still panting and trying to catch her breath when I bent her over the bar and slid inside of her all in one fluid motion. The audience was amazed at that little maneuver. Janessa was slapping the bar with the palms of her hands in surrender as I began thrusting. She was cursing at me to let her catch her breath. Fuck that I have wanted to feel her wrapped around me for months now. The echoes of our bodies slapping together was loud in my ears. I was so focused I never saw Dawn walk down the basement steps. I grabbed Janessa by her wrists and used them for leverage. I savaged her pussy from behind and felt a rush coming off of her that was addictive. I was cursing as I hammered her. Janessa's body arched as she came again. I stopped and let her catch her breath. I was about to get dressed when I turned to see Moxie undressing. The rest of the girls chided her on jumping ahead of the line. \n\n\"Line... what line?\" I asked a gentle hand fell on my shoulder.\n\n\"Hello Greg,\" Dawn said and I felt her pain as if it were my own.\n\n\"Dawn... you should be...\" I began but she silenced me with a kiss.\n\nThe rush of her hunger made Janessa's pale by comparison. I took her into my arms and held her close. A part of me that had slept until that moment reached out and stole away her pain. I took it as if it were my own. Dawn let out a whimper of surprise. The rush of desire became a roar in my mind. I tore her night clothes from her and lifted her up. I lowered her onto my erection and pierced her to her core. That was enough to break the kiss. Dawn's back arched as I began making love to her. I moved slowly so that I wouldn't hurt her. The pain I had snatched from her faded into nothing. She raked my back with her fingernails and begged me to move faster. I gave her everything she asked for and more. Soon I had her sitting on the bar and hammering her for all I was worth.\n\n\"Oh god... it's been so damn long...\"\n\n\"Come for me Dawn,\" I begged. \n\nI wanted her to be so happy I blocked out everything else. I could feel her pleasure building and it didn't take much to push her over the edge. We came at nearly the same time. I held her close as my cock shot my load deep into her. Her nails drew blood from my back and we both laughed as we recovered. I looked around and found that we were alone. \n\n\"Damn it... this keeps on happening...\" I said as Dawn clung to me.\n\n\"A wise man wouldn't complain that so many women want to spend time with him.\"\n\n\"You're right... are you okay?\"\n\n\"I feel great. It is the strangest thing. The pain disappeared and it hasn't come back yet. I wonder if that virus worked.\"\n\n\"I hope so.\"\n\nI helped her down off the bar and she looked at her tattered gown. She smiled and proudly walked naked up the stairs. I found the basement bathroom and cleaned up. I could hear the girls' voices above me. I closed my eyes and listened in. My mind touched each of theirs one at a time. They were all thinking basically the same thing. Janessa had been a fall back plan in case Dawn wasn't up to her gift. They had planned that we would get together so that she could feel like a woman one last time. Roo's thoughts were the hardest to bear. She was so scared of losing her mom. I dressed and walked up to the living room. They were all sitting around when I appeared. Roo launched herself at me again and hugged me tighter than before. I could hear as she cried and tried to thank me at the same time. I just held her and let the damn burst. Rhea's thoughts touched mine and I could feel her praise. \n\n\"Mom went back to bed,\" Roo giggled once the tears had passed. \"I think you wore her out.\"\n\n\"I am glad I could help...\" I said and then suddenly felt sick to my stomach. \"Bathroom...\"\n\nRoo grabbed my hand and led me to the nearest one. I lifted up the toilet seat, knelt and lost my stomach contents. What the hell had I eaten that I might have gotten food poisoning? After a moment there was a sick wet splash and the wave of nausea left. I wiped the tears from my eyes and looked at what had come up. I didn't believe my eyes. I called for Rhea feeling the panic rising in the pit of my stomach. Rhea arrived and I pointed at the toilet bowl. She moved passed me and looked in.\n\n\"I hadn't expected that so soon,\" she said matter of factly.\n\n\"Is that what I think it is?\"\n\n\"That would be Dawn's tumor. You healed her Greg. That is a very rare talent.\"\n\nRhea flushed the toilet and lowered the lid removing any evidence. I splashed cold water on my face to drive the fever away. We returned to the others and I gave them a thumbs up and they all smiled. Roo handed me a bottle of white soda to help settle my stomach and I took it without comment. No one else needed to know what had happened. I sipped my soda and Roo showed me the gifts she had opened while her mother and I were busy. She held up the strange plushy I had gotten her and she squealed in delight. She hugged and told me how much she liked it. Moxie handed Roo the gift she had gotten her. We all watched as she carefully removed the festive wrapping paper. There was a medium sized box and she pulled the cardboard tap to open it. Roo opened the lid and smiled at what was inside.\n\n\"I love that new toy smell,\" she said as she held up the violet dildo. \"Thank you Moxie...\"\n\nI checked the time and determined I could stay for another hour maybe. I still had to find the bastard that killed Amarna. I wanted him to suffer. The girls kept up their drinking while I nursed my white soda. Moxie drank heavily and I didn't have to be a telepath to know that look. I excused myself and checked on Dawn. Her bedroom door wasn't closed but cracked open. I pushed the door open expecting to find her asleep but she was sitting up reading a book.\n\n\"You're up, is everything alright,\" I asked and she nodded.\n\n\"I feel really good,\" she replied with a genuine smile. \"This is the first night my head isn't screaming. I thought I'd catch up on reading. I started this book about six months ago. You can see I hadn't gotten very far. Do you think the virus is working?\"\n\n\"You look great so I think things are going to work out just fine. I have a good feeling about it.\"\n\n\"Have a seat,\" she said patting the spot next to her.\n\n\"I was going to ask Roo but since I'm here... what exactly was the plan tonight? I feel like a piece of meat, not that is a bad thing mind you.\"\n\n\"I am sorry. Like I said earlier tonight Roo has had a crush on you and so have I. You are a very handsome man and very easy on the eyes. Since I got sick my marriage has really suffered. Anyway... Roo and I got tipsy one night and worked out a pure fantasy scenario. I never dreamed you'd... oh god I'm getting wet just remembering how good you made me feel. I figured you and Roo would hook up and she'd have a memory to last a lifetime. I felt like crap and went to bed. But I woke to the sound of you and that hussy Janessa. I couldn't resist going down and watching. When you kissed me I melted inside. The rest is history. Who knows now that I am feeling better maybe... oh who am I kidding... this whole thing is a sham. But I can't divorce him and ruin his career.\"\n\n\"I am not going anywhere. You have my number so if you feel the need... what... again?\"\n\nShe gestured for me to join her and how could I refuse. She rolled on top of me and sinuously slithered down my body until she had me where she wanted me. Her head bobbed up and down as she pleasured my cock. Dawn lifted her head up once I was painfully erect. She shifted her position and leisurely allowed my cock to sink into her molten core. It was slow and volcanic. My body never moved beyond a leisurely pace. I think that is why when we finally did climax it quite literally knocked the wind out of us. I lay on my back with Dawn cuddling close. She had fallen asleep and I didn't have the heart to wake her. A soft knock came to the door and Cindy peered in. She saw me and smiled brilliantly. She mouthed the words 'is she okay' and I nodded. Roo appeared and Cindy whispered to her and the young Olympian smiled and hugged my daughter. I closed my eyes and made a managerial decision. I would sleep here tonight. \n\nI woke early and found that Dawn was sleeping on her side and I was spooned behind her. My first thought was to be naughty but I didn't want to wake her. So I pulled up the list of reports that were the result of Project Ghost. The list of contents for six of the homes was pretty damn impressive. They were like micro museums covering a variety of cultures but they all had one thing in common. Many of the items were quite rare with a handful of objects that fell under the classification of unique. That didn't surprise me a bit. This was the Usher family we were talking about. I still didn't know what I wanted to do with these treasures yet. I was thinking of gathering them into a museum but which one. \n\n\"Greg... are you awake,\" Dawn whispered and I remained silent. \"Oh good...\"\n\nDawn's ass moved slowly rubbing against my cock. It didn't take her long to have me fully erect. She was giggling as she took me in hand and eased me inside of her. I let out a dreamy moan for her. She gasped as I sunk deep. I nearly blew it when she began squeezing with her pussy muscles. I guess this was payback for earlier.\n\n\"I love your cock baby... I just called you baby...\" she whimpered as she moved a little faster now. \"Fuck it... I love your cock in my pussy baby... unnnnn so good... I bet you are having an amazing dream. So thick and long... you hit spots no one has ever done before... I want to ride you so bad...\"\n\n\"What is stopping you?\"\n\n\"Oh YOU... fine just let me... UNNNNNN damn it Greg are you trying to make me cum?\"\n\nI had slipped my arms around her waist and rolled onto my back taking her with me. I opened my eyes to see Dawn riding me. Her back was bent forward and she lifted up and dropped down. She was grunting each time she impaled her pussy on my erection. She rode me faster now and her voice was getting steadily louder. The door opened and a myriad of faces peered in watching Dawn fuck me rotten. The door closed and we were left alone. I was surprised at Dawn's strength considering her long time illness. A moment later she faltered. I took over. I rolled her onto her side and pulled out slowly. She let out a rude noise but I ignored her. I got out of the bed, grabbed her by the ankle and pulled her to me. I got her ass right on the edge of the mattress before sliding back into her. Dawn's eyes went wide as I grabbed her ankles and pushed them apart.\n\n\"I want to see your faces,\" I told her as I began pounding her hard and fast. \"Take that you dirty girl you...\"\n\n\"Slut... it's okay... you can call me a slut Greg... I wanna be your slut...\"\n\n\"Fine... take that and that you slut... play with your tits for me... yeah that's it...\"\n\nI kept up the pace and she cried out as an orgasm crashed into her. The door flew open and I realized they had never left. I looked over my shoulder to see Roo watching me hammer her mom like a fiend. Cindy smiled and urged me on. The others picked up the chant and I felt that tingling begin in my toes.\n\n\"Where do you want it slut?\"\n\n\"Oh god you are getting bigger inside of me... spray my face baby...\"\n\n\"Fuck her Greg...\" I heard behind me.\n\nI yanked my cock free of her as I came. An arc or sperm flew through the air and landed between her tits, throat and chin. Damn, I missed! I sat on the edge of the bed catching my breath while Dawn lay panting but smiling despite her loss of strength. Roo and Cindy approached her when she waved them over. They helped her up and to the bathroom. I looked at the others and smiled weakly. I thought they might have mixed feelings but I was dead wrong. Rhea offered me a hand up and guided me to another bathroom.",
        "\"You are my hero,\" she said.\n\n\"No doubt about it Greg you deserve a metal for making her feel like a woman again.\" Jordan added.\n\n\"I... um... I am glad you aren't mad...\" I stammered as I reached the bathroom.\n\n\"I told you before that I understand,\" Rhea said. \"You changed a life tonight.\"\n\nI cleaned up and grabbed my clothes. Dawn had freshened up and was wearing a fuzzy robe. She was talking about coffee but the others returned to their beds. I offered her my arm and led her downstairs to the kitchen. I got her a seat at a small round table. I grabbed the French press, the tea kettle and began fixing us some fresh brew. As I moved about the kitchen I asked Dawn about Roo's costume. That sparked a lively conversation. Roo apparently was a gifted seamstress and avid cosplayer. I had heard of it but I got a mother's insight into her daughter's second favorite passion. Well now that she lost her virginity it might fall to third. Dawn told me that after we had our coffee she would show me Roo's workshop. Apparently it wasn't just fashioning a costume that was key to success in the cosplay world. You had to be able to create props. \n\nThe kettle whistled and I poured the hot water into the press. I stirred the watery mix of grounds and water. I placed the lid on the apparatus and waited for a few minutes before I pushed down the plunger. I turned to face Dawn and I noticed the return of color and health to her complexion. Maybe she would have a complete recovery after all. A few minutes later we were sipping our coffee and we both fell into a thoughtful silence. My mind wandered back over the previous twenty four hours and I decided that I was indeed a man whore. I laughed and Dawn looked at me with a motherly eyebrow raised.\n\n\"What's so funny young man?\"\n\n\"I really am a man whore,\" I said and she laughed. \"Thanks for the moral support.\"\n\n\"You left off slut,\" she replied licking her lips. \"I can't wait until I am back to full strength. I'd show you what I am really capable of. Speaking of, wait until Roo gets her hands on you again. She is scary flexible.\"\n\n\"Hmm... that inspires a few new strategies...\"\n\n\"Be gentle she is my daughter... oh Greg I think I am falling for you.\"\n\n\"For what it is worth I've never slept with a mom and her daughter in under twenty four hours before.\"\n\n\"Cha-ching... score one for the Barrington girls!\"\n\nWe drank our coffee and as promised afterwards she gave me a tour of Roo's workshop. It was damn impressive even from an amateur's point of view. We had barely walked around when Dawn's energy level dropped suddenly. I scooped her up and carried her back to her bed. I chastised her about overdoing it. She just nodded as I tucked her into bed. I lay next to her. She drifted off to sleep while I went through my emails. The FBI informed me that they were on the trail of Amarna's killer. I also received an email with a video attachment from Shannon. It showed one of her latest performances and she looked amazing. She floated across the stage with a strength and grace that took my breath away. I was so damn proud of her. I missed her and the others. A sudden twinge of guilt struck. I was being selfish again. \n\nI brought up the latest configuration of Project Ares. It pulled in all the work of all seven teams striving for a functioning modular system. There were some very promising progress but nothing earth shattering yet. Dawn rolled onto her side and snuggled close. I found it strangely comfortable. I closed out the Ares files and glanced at the other projects Nick had in the works. One project code named Peek-A-Boo caught my attention as much for its name as what it represented. The techies were calling optical prism armor but put simply it was an invisibility cloak. It would never be mass produced but for a select few it would change everything. Speaking of select few there was a set ear marked for someone code named Inquisitor. I wondered if it was the same redhead I had met at the White House. It made sense that the Vatican could afford to outfit their best with cutting edge tech. \n\nThe kid in me couldn't resist so I pulled up Zoe's anti-gauss armor with this optical prism and began seeing how compatible they were. It went surprisingly fast and soon I had a prototype for Nick to authorize. I sent him the schematics and a short email to explain what I had done. I took a break to give my brain some down time. I decided a little healthy daydreaming would do me some good. I replayed Janessa dancing for me and closed my eyes enjoying the show. I was amazed at the clarity of the images when I remembered what my other half had said. It could record and playback anything I experienced. Soon I was reliving every caress, taste and sensation we shared. I stopped things just shy of climax. I opened my eyes and found Dawn watching me intently.\n\n\"You were moaning in your sleep,\" she purred. \"My-my... she really did a number on you huh?\"\n\nI just nodded as Dawn offered to finish me off. I warned her I was already pretty close but she ignored me and lovingly took me in hand. Who knew I'd end up a pillow biter? I didn't want to wake up half the house when my orgasm hit me and I so I screamed into the pillow as Dawn swallowed my load like a good girl. She licked me clean and we cuddled some more. I asked her how she felt and I could see the fire in her eyes. Dawn was on the road to recovery thanks to me and Rhea. I shuddered when I remembered vomiting up that bloody mass. But if it helped her it was a small price to pay. I wonder if the senator, her husband, would return now that she had kicked cancer. \n\n\"He hasn't touched me in months,\" Dawn said as her finger circled around my left nipple. \"I think he was hoping I'd just die so he could replace me with that little slut of his. God damn it Greg she is only two years older than his daughter! Oh don't you dare! You saved me. You gave me a fighting chance. Besides Roo has lusted after you for months and truth be told so have I. No I don't think you are like him. You don't make promises your libido can't keep. I respect you Greg. If I was in your place and a guy I'd tap all the ass that I could. We are only young once. I'm just glad you wanted to make love to an old woman like me.\"\n\n\"You aren't that old. You are what thirty-five... thirty-six?\" I asked and she nodded. \"Hell I am older than you are.\"\n\n\"No fucking way,\" she blurted out. \"You can't be any older than what mid-twenties.\"\n\n\"I turned forty-one this year. Ah, my secret is out.\"\n\nDawn stared up at me just as I got a reply from Nick. I chuckled and she asked me what was so funny. I told her I had been inspired about blending two projects into one and it looks like my next bonus check is going to be somewhere between epic and mind-blowing. Dawn purred and whispered something about mind-blowing just before her head disappeared below the covers.\n\n\"Damn woman... oh man... I thought you were supposed to be resting...\" I said but she ignored me and licked me into submission. She never asked for anything reciprocal. Dawn just sucked me off because she could and had the energy to. \n\n\"Am I monopolizing your time,\" she asked when she finished.\n\n\"I don't think anyone including me would blame you for wanting some much needed attention. Besides, you are the queen of the castle.\"\n\n\"Damn right,\" she said her voice soft and fuzzy. \"Need to sleep...\"\n\n\"I'll be here when you wake up.\"\n\nI watched her sleep and found a nice comfortable position to lie there until morning. I followed updates on various projects Numenor was working on as well as requests from both the White House and the Pentagon. Nick had sent me the bio for the President-Elect to read and familiarize myself with her short but impressive career. She had been a navy seal and that alone had gotten my vote. She had done three tours in the Middle East earning a purple heart as well as a silver star. She mustered out as a sergeant and entered the political arena soon after returning home. She fought political corruption and even revealed corporations attempting to bribe her so that she could climb political ranks. Her reputation as a straight shooter helped her more than corporate America. Of course when she sought the independent ticket for President many felt it was political suicide. But then that complete debacle at the Republican debate when the men running began revealing terrible truths her chances improved. Not a week later and the same thing happened to the Democrats. Strangely enough the elderly candidate from Ohio made it through the debate with little dirt on him. So in the end it was between the two of them. She won with a healthy margin in the Electoral College. \n\nAt the end of the email it reminded me that I was scheduled to meet with the President-Elect for lunch Monday. I checked the time and freaked out. I slipped away from the sleeping Dawn and crept out to find my clothes and get back to the hotel to get ready. Rhea was waiting downstairs sipping a cup of coffee and gestured to the silver pot for me to pour my own. I dressed and sniffed my clothes. They smelled like sex. I wasn't really surprised. I had two cups of coffee and was not quite panicking by fidgeting badly.\n\n\"Jordan is taking care of everything. She has contacted the President-Elect and worked out security issues for your lunch date.\"\n\n\"It is not a date,\" I said but Rhea just smiled. \"It's not... is it?\"\n\n\"Give me a break,\" Rhea said trying hard not to laugh. \"She is unmarried. She just turned forty and she asked to speak with you over meeting with many of the senators clamoring to find out where she stands on key political issues. What do you think?\"\n\n\"She is cute.\" I admitted sheepishly.\n\n\"Cute... did you see the ass on her? There I am channeling you again. Just don't fuck this up or Nick will fire you on the spot.\"\n\n\"Aren't you supposed to give me a pep talk?\"\n\nRhea leaned close and kissed my cheek. That was her way of saying I was going to be just fine. I learned that Cindy had already left and was on her way back to Arkham. Her landlord was coming home and she had to pack her stuff and move back to the sorority. I did some research on this Doctor Donald Donahue. He had just made a huge discovery in the dessert south west of Cairo. The details were still sketchy but what was known is that he found a village that dated back before the end of the last ice age. The Egyptians had taken over the dig but all the credit went to Donahue and his crew. He was a celebrity in the scientific community. It was like discovering King Tut's tomb all over again. I finished my coffee and as I stood up a grateful Roo was waiting.\n\n\"I owe you... I mean it... If you ever need anything and I do mean anything I will give it to you gladly...\" \n\n\"I heard that you are really flexible, is that true?\"\n\n\"It is true. I can show you just how flexible I am next time.\"\n\n\"I am gonna break you little girl,\" I growled and she almost jumped me right then and there.\n\n\"The car is waiting out front.\" Rhea said as she took Roo in her arms and kissed her hungrily. \"Damn, I may have to join you and Greg next time.\"\n\nRoo stood there transfixed. I wonder if she had ever kissed another girl before. She touched her lips with her fingers. I think that answered my question. I smiled and Roo grinned and returned to her bed. We left through the front door and the black town car was waiting for us. Rhea inspected it before allowing me inside. It passed her test and she slid behind the wheel. Rhea drove and was bouncing in her seat. I scolded her for being so mean to poor Roo. \n\n\"It's not cruel if you follow up on said promise. I want to eat her alive! She looks like a whole lot of fun.\"\n\n\"Oh she is,\" I said remembering my time with her. \"The three of us can play and you can have as much time with her as you want.\"\n\n\"This is why you are my favorite employer ever. You share your toys.\" Rhea said and then fell silent for a moment. \"How is Dawn doing?\"\n\n\"I think she might be okay. You said I healed her. That mass that I threw up was in fact her tumor. How the hell is that even possible?\"\n\n\"It is a non-localized telekinetic phenomenon. I can see you don't understand. How about this... your concern for her health allowed you to remove her cancer.\"\n\nI smiled and nodded as we reached the hotel. We parked and took the elevator up. My thoughts were focused on my meeting with the President-Elect. I had read what had been collected about her but what was she really like? If I blew this Nick would be furious not to mention the Joint Chiefs. I knew they would hate to admit it but they would miss me and Numenor's technology. I worked out multiple plans to cover anything she might want to talk about. My other half whispered that I was overthinking this. The suggestion was to treat her just like I would any other woman. The problem with that is it might end up with us in a physical entanglement. \n\n\"I will not fuck the future President of the United States... I will not...\"\n\n\"Seriously, you think she asked for this meeting to seduce you?\" Rhea asked as she unlocked the door.\n\n\"Nah, you're right... this will probably just be business.\"\n\n\"I hope so. I'm not sure I could contend with the most powerful woman in the world.\"\n\nWe stripped down and started a bath. The room had a shower as well as a full sized tub. While it filled I fixed a light snack for us to share while we soaked. Rhea and I showered first and then slipped into the tub. The heat soothed muscles and helped me relax. Rhea sat opposite me with eyes closed and her thoughts as tranquil as the water we sat in. I sank into a deep meditative state where the world fell away and I drifted quietly in the darkness of my own personal ether. The ripple appeared suddenly and without warning. Nothing happened and then it appeared again. \n\n\"Come in,\" I said and Rhea appeared.\n\n\"Thank you,\" she said as she floated free of the rift. \"So quiet, are you okay?\"\n\n\"So much has happened in such a short period of time, Amarna's assassination... Roo and Dawn and Janessa... am I being a selfish bastard?\"\n\n\"Of course you are,\" she said smiling. \"Any person in your situation would react exactly as you have. That doesn't lessen my love for you one iota. My people... our culture is very different than human's. There are so few of us and so we take many lovers from many races. So my hungers are no less fierce than yours. We have committed ourselves to one another and that is all that matters.\"\n\n\"You are hiding something. I don't know how I know but I am sure of it. If you haven't told me there is a good reason for it. So whenever you feel like you can unburden yourself I will be here for you.\"\n\n\"I know. It won't be long now.\" Rhea said and drifted close. \"Where are we?\"\n\n\"This is what Nick calls the digital space. We are tied in with my implant. It is here that I can look at mountains of data at a blistering speed. I come here when working in meat time is just too slow.\"\n\n\"It reminds me of the Hall of Crystal Souls,\" she said her expression turning contemplative. \"At the heart of each of our cities is a dome. At the heart of that dome is the hall. Millions of crystals adorn the walls and they flicker with an internal light, the light of an immortal soul. There are a few of us that are allowed to commune with those souls. I was one such. I touched the minds of our greatest warriors, mages and leaders. I learned from them. They shared skills they had developed in life as well as afterwards.\"\n\n\"I sense a regret coming.\" I said and she nodded.\n\n\"They wanted me to take the mantle of... well call it high priestess. If I took up that honor I would never be allowed to leave the city ever again. I just couldn't do it. So I left instead.\"\n\n\"You miss them don't you?\" I asked and she nodded. \"I can't begin to understand.\"\n\nSuddenly a chorus of voices rose up around us and I knew she was sharing with me her memory of her connection to those long lost souls. It was like a host of fire flies surrounding us. One of them touched me and suddenly we were hovering in the cavernous Hall of Souls. There was a luminous being standing before me. He was tall, thin and had the aura of a warrior. He motioned for me to approach and I did. He smiled as he embraced me. I felt his thoughts intertwine with mine. While he shared his knowledge and skill with weaponry I shared with him the women I had been with. It was mutually beneficial. He had long lost his touch with the physical. He wanted to remember what it was like to be intimate with someone. I learned the subtleties of tactics, the love of melee combat and the glee of cutting down enemies with a firearm. The embrace ended and that is when I realized I had been in touch with a living soul not just a memory. The realization was staggering. Rhea had left the city but she retained her link with the dome. I looked at her and she nodded. Our connection was rudely and suddenly severed. She must have woken up. I followed her to the waking world. I opened my eyes and we were still in the tub. \n\n\"It is time to put what you learned to the test... preserve it in your muscle memory.\"\n\nWe dried off and dressed in light loose fitting clothing. Rhea and I snuck onto the roof of the hotel with the help of my digital self. We were armed with wooden swords. I looked over the terrain that made up the roof. There were multiple air vents, air conditioners and even a data shack that handled the hotel's internet needs. We faced off, bowed and launched ourselves into the dance of death. She played defensive gauging the level of my skills. I worked my way through the lessons I had learned and soon I was well into the intermediate moves when Rhea grew annoyed and pushed things up to her level. Instinct took over and I was blocking her strikes with some difficulty but I managed to keep her at bay. She smiled and I saw the blood lust come out and there was no restraint now. I was stunned when I felt a surge of confidence and took the fight to her. \n\n\"Tell me about your armor,\" I said as I pressed my attack.\n\n\"It will be difficult to put into words,\" she said as she turned aside my assault and drove her advantage. \"I made it. I wore it in battle. You feel as the J'Nai experience emotions now. Among our people there are rituals. One such ritual is the donning of armor and it prepares us for the killing ground. If you gave me the armor then I would have worn it and killed anyone and everyone not wearing similar armor. It goes beyond rational thought it is our killer instinct. I am glad you trusted me and kept it away from me.\"\n\n\"I trusted you with everything even if I didn't understand why I had faith in your judgment.\"\n\nThe wind was whipping against us and I barely felt the cold. My only goal was to land a single scoring point on my opponent. I drew her into one of my mentor's latest strategies and brought my entire being into the strike that followed. Rhea blocked the blow but at the cost of her weapon. I stepped back and bowed to her. She let the half of her sword left in her grasp fall to the roof. She bowed back and even winked at me.\n\n\"Damn I miss that,\" she said above the wind. \n\n\"We better go,\" I said. \"I need to wash up again. I still have that meeting with the President-Elect.\"\n\n\"... I'll wash your back.\"\n\n\"If you do... I'll have you up against the shower wall and fuck you until you can't walk. I am... my entire body is just... damn!\"\n\n\"Let me lead the way.\"\n\nWe fucked so fiercely and for so long I barely made it to the restaurant on time. I was dressed in my finest suit while Rhea wore her work uniform. Secret service agents were posted out front and we had the entire place to ourselves. Rhea waited outside while I had lunch with a woman that in a month would be sworn in as the first female President of the United States. She was seated but rose to her feet to greet me. She stood sixty six inches tall with a mane of raven black hair that contrasted her ruddy skin. Her eyes were the color of mahogany and her features were easy on the eye. The suit she wore did little to hide the amazing figure beneath.",
        "\"Mr. Robinson,\" she said shaking my hand.\n\n\"Ms. Redcloud,\" I replied. \"It is a pleasure to meet you.\"\n\n\"The same,\" she said as she sat down. \"Can I call you Greg and you can call me Lydia.\"\n\n\"Great, I prefer first names actually. So what can I do for you?\"\n\n\"There are a few things I need clarification on before I get sworn in. I have learned that you are the darling of Washington D.C. as the liaison between Numenor and the White House as well as the Pentagon.\"\n\n\"That is true. Although I am sure certain senators wouldn't see me as a darling.\"\n\n\"I understand. This Blink technology is pretty world changing stuff not to mention this gauss weaponry. If these Blink rings actually work and the technology spreads a lot of people are going to lose their jobs. What do you say to that?\"\n\n\"True. I can't argue that in ten years or so pilots and peripheral airline jobs will be lost. However, the jobs created by building and maintaining the Blink infrastructure will require quite a few jobs. I can't promise it will be a one to one exchange but look at all the good it will create. Think of all the houses near airports that will no long suffer from noise pollution. The effect on the environment will reduce emissions. Once the major cities have rings weather will have little impact on travel. No one will ever be trapped at an airport ever again.\"\n\n\"I see why she likes you. So I hear the British are arming the Winston Churchill with a gauss cannon. Isn't that a little overkill?\"\n\n\"The Russians are looking to expand their territory again. I think it is an understandable reaction. Is there anything else I can clear up?\"\n\n\"This suicide and assassination with Senator Long and his wife,\" she began and paused. \"You and Amarna were intimate?\"\n\n\"Yes, she came to me for protection. I had Rhea handle it. Her death was unnecessary and a sad waste. She just wanted a life away from her controlling husband.\"\n\n\"I see. I have one last question and I want you to be honest with me. Why did you give that land to my people? Were you trying to get in good with me or was it a genuine gift to them for past atrocities?\"\n\n\"Well um... I'll be honest with you. I never expected you to win the election. You were a long shot at best. I mean a woman and American Indian to boot. It was an anonymous gift. I don't know how you found out but it was supposed to make amends for two hundred years of bloodshed. I will be honest the property belonged to Senator Long's family. I wanted to punish them and do some good at the same time.\" I said and waited for the handcuffs and someone to read me my rights but it never happened.\n\n\"You really are as amazing as she said,\" Lydia said as she made a gesture. \"I will be thrilled to work with you Greg.\"\n\nAmarna Long stepped out from the kitchen and I almost flipped the table as I got to my feet. She raced into my arms and I hugged her tight. We sat down and I was told what really happened. Rhea had gotten a body double for Amarna. It was the double that had been tortured and murdered. Amarna was now in protective custody. The feds were going after the Usher family but it would take time. Lydia asked me if I could take over her protection until something more permanent could be arranged. I nodded and that's when the conversation turned strange.\n\n\"Amarna has told me some very enticing things about you,\" Lydia said and I felt like my worse fear was about to manifest itself. \"Relax. I am not trying to seduce you well not yet anyway. I need to know I can count on you when things get crazy.\"\n\n\"I would be happy to help you out if I can.\" I said not sure what she actually meant by that. Oh I could have brushed her thoughts but that would be akin to rape. \"Who knows about me gifting the land?\"\n\n\"Only the people in this room, Amarna had a copy of that thumb drive and she told me all about the land you gave to the tribes. You have a real set on you for taking on the Usher's and I admire that.\"\n\n\"How much do you know about the Ushers?\"\n\n\"Only what I learned from Amarna,\" she admitted. \"However, I am making some discreet inquiries. I will let you know when I hear something.\"\n\nOur food arrived and I didn't miss the looks from the President-Elect. She was still sizing me up but why was anyone's guess. Did she want to offer me a spot on her cabinet? Or was it much simpler than that? She was unmarried Lakota Sioux woman and in scant weeks the next President of the United States. I was still recovering from Amarna's return from the dead. I understood why Rhea hadn't said anything. She was doing her job. It would have been unprofessional of her to do otherwise. People saw me mourn the widow's death and throw myself into locating her killer. If there were moles inside the White House they had been convinced Amarna was dead. \n\nI picked up my utensils and looked at my meal. We were both having a salmon steak on a bed of crisp lettuce with a raspberry vinaigrette drizzled over all of it. I sniffed and caught the aroma of the salmon, the lettuce and of course the raspberry. But there was something else, something subtler and it was coming from Lydia's plate. I held up my hand and she set down her fork. I grabbed her plate and gave her mine instead. I sent a message to Rhea to bring in one of the secret service agents with her. I sniffed her plate and there it was the scent of peanuts. Lydia was allergic to peanuts so much so a small amount could throw her into a severe case of anaphylactic shock. I lifted up some of the lettuce and found the culprits.\n\n\"Peanuts,\" I said and her eyes went wide in surprise.\n\n\"Let go of me,\" a voice cried from the kitchen. \"She needs to die! Whore! Die you fuckin...\"\n\nThere was a sudden ringing in my ears and I lost consciousness as I slumped to the floor. If I dreamed I was completely unaware of it. I wasn't alone in that stygian darkness. I felt two others imprisoned with me, Ariana and my other half. The two A.I. hovered close and the more time that passed the closer they became. The sensation of blending was not unlike when Rhea's soul and mine had joined. The lines blurred until there was no difference between them and me. I woke up in the ambulance and slowly opened my eyes. Rhea was next to me and she appeared heart struck. I smiled up at her and was about to speak when she shook her head.\n\n\"You were in the blast range of an EMP. Your watch is toast and your implant may be damaged. A helicopter is going to meet us so that you can be air lifted to the Numenor, Nick's ship. It is anchored off of Arkham and they are waiting for you. Get some rest... oh god Greg I thought you were dead!\"\n\nI nodded and offered her a smile before I closed my eyes and drifted away. I was worried when I couldn't contact either Ariana or my other half. What the hell was going on? I felt it awakening in my mind. It was like a sleeping giant coming to life. I was standing in a darkened hallway and the lights slowly fluttered to life as the power was restored. I knew what I was it was the remnants of the bridge, that mental barrier that separated my psyche and that of my implant. It was wrecked utterly and completely. I stood at the brink and looked down into the emotional abyss. I reached out to try and find my cybernetic doppelganger but it was gone as was Ariana the A.I. that I had placed in my watch.\n\n'So I am alone then,' I thought as the death of the two A.I. hit home.\n\nThe EMP had fried all of my tech. I wondered if Nick and his team could fix me. I sat down and dangled my feet over the edge. I felt naked now. I had grown so accustomed to having him there. I was never truly alone when he was there. He allowed me to silently link to all kinds of technology. I could pull up email or surf the Net with ease. Suddenly there was a light trickling up from the pit. I wondered if the nanites had survived the blast. If so, maybe I could still reach out and connect with the myriad technologies out there. I stretched out my hand and willed a connection with anything within my range. A medical readout appeared in front of me it was a real time display of what I assumed was my vital signs. I stood up and felt a burst of confidence. If I could do that I had to push on. I willed a connection to my email. A moment later a series of icons appeared hovering in front of me. Each of the icons was labeled with a sender's name and its title. I touched one from Nick and the text appeared.\n\n'Great work on merging Peek-A-Boo and the anti-gauss armor. I know the perfect person to field test it when Zoe builds the prototype. Keep up the good work and I'm looking forward to seeing how well your lunch with Lydia went.'\n\nIt was signed Nick. I gestured and closed that email. If I can do that I decided to see if I could access the remnants of my implants hard drive. Was any of that information still there or had it been destroyed? I reached out and found a galaxy of glittering crystal stars. Were these the nanites that were in my brain? Were they all that remained of my implant? \n\n'Show me the library.' I ordered.\n\nThe shimmering blue radiance flared to life and a moment later I found myself in a massive structure. It reminded me of the library at Miskatonic University. I looked up and it appeared to dozens of stories tall. How the hell was I supposed to find anything in here? As if answering my mental call a crystal pylon appeared before me. I laid my hand on its smooth exterior. \n\n'Show me the contents of my library.'\n\nBlazing green words appeared before me forming a kind of index. It was divided up by subjects. I was amazed at the vast wealth of information at my fingertips. All I had to do was think of a subject and a submenu appeared. I asked about the core memories of my A.I. and the response left me stunned.\n\n'Which one?'\n\nWhat the hell did that mean? No... wait... there were two A.I. on my person when the pulse hit me. There was my other half and Ariana. Well why not delve into her memories. \n\n'Show me Ariana's memories.'\n\nAnother index appeared and it was so vast it manifested as a series of interconnected icons. I could reach out and touch an icon and manipulate any connected data to that subject. It was more like a human mind than a library. A sudden impulsive idea struck me. I ordered it to show me anything it knew about the J'Nai. There was an icon and many nodes attached to it. How the hell do I access so much? The main icon flashed green and disappeared. A heartbeat later my mind was flooded with memories, her memories. I knew all about their culture. I knew individual J'Nai and all of my interactions with them. No, I had a complete recollection of His interactions with them. Ariana had recorded every single thought, emotion and physical interaction He had experienced. He had spent so much time with them. They had adopted him as one of their own. He had gone to war with them and fought gods and monsters. \n\nI felt the medication hit my system. I was dragged to the surface. I was waking up. I opened my eyes and found myself lying on a comfortable bed. Nick, Kat and Rhea were standing around me. I blinked a few times and smiled. It wasn't a hallucination I was alive! Nick asked me how I felt and I told him. The words tumbled from lips but he looked confused at me. Kat's expression changed as did Rhea's but where Kat Shaw looked concerned Rhea grinned like a fiend.\n\n\"What the hell did he say?\" Nick asked.\n\n\"I have no idea,\" Kat replied.\n\n\"He said thanks for saving his life,\" Rhea said her emotions rising like a tidal wave. \"He said it in J'Nai.\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "virgin",
        "voyeurism",
        "non human",
        "mother",
        "daughter"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/hello-mr-robinson-pt-07"
}