{
    "title": "Cosplay Cumdump Ch. 01",
    "pages": [
        "<p align=\"center\">Chapter 1 -- Victim Of The Vixens</p>\n\n* * * * *\n\nMicah sat in the midst of the large crowd as the excitement built. He applauded and cheered along with the throngs of enthusiastic fans as each announcement was made. Still, much of his attention remained on the screen of his smartphone until the formalities were over. It was Saturday afternoon, the second day of UwU Con, and the festivities were just beginning.\n\nThe first day had been spent milling around the convention hall and taking in all the sights and sounds. Micah had played beta builds of unreleased videogames, seen previews of upcoming seasons of some of his favorite anime and collected a plethora of convention swag and freebies. UwU Con was weeaboo nirvana. Even if it had only been a one day event, it would've been worth the trip.\n\nBut UwU Con was a three day event and the best was yet to come. The primary reason Micah had attended was approaching rapidly. The cosplay contests would begin soon. Better yet, some of his favorite professional cosplayers would be in attendance. Jessica Natiri, Gwen Hellsong and Roxy Blight were scheduled to take part in the proceedings in addition to several other devastating beauties.\n\nJessica, Gwen and Roxy had all started as normal con-goers who liked to dress up. Over time, they garnered more attention and started working gigs for the various gaming and anime companies. They would attend conventions dressed as particular characters the corporations wanted them to portray and hawk their products as booth babes.\n\nIn recent years, they'd gotten organized and moved on to greener pastures. Now they had their own company, Cosplay Vixens, which the conventions had to hire directly if they wanted the most sought-after cosplayers to attend. This gave the women freedom and autonomy they'd previously not had. Now they could dress as any character they liked, they no longer had to take orders from stuck-up suits and they could charge whatever they wanted for autographs and photo-ops.\n\nMicah was ecstatic. He'd finally get to meet the Vixens in just an hour or two. The women of his dreams! He knew it was the most typical weeb shit ever to obsess over cosplay girls, but he didn't care. He'd been gawking at these beauties on social media for years. They were Goddesses. Women on high.\n\nHe'd do anything to be in their presence. Wait in any line, no matter how long! Pay whatever they demanded for a signed photo and a brief meet and greet. If he was really lucky, he might garner a touch on the back or shoulder. He'd seen some pictures where they kissed a guy on the cheek or surrounded him with an affectionate hug. He would die if that happened.\n\nSuddenly, Micah realized they were launching into the final round of announcements about the cosplay events. He quickly closed the photo gallery on his phone where he'd been swiping through pictures of the gorgeous Vixens and pocketed his device. He looked up eagerly and crossed his arms over his chest.\n\n\"Alright folks, let the cosplay fun begin!\" the middle aged announcer yelled into the microphone. \"The cosplay parade will begin in one hour, so get changed and meet us out front at three o'clock! We're going to take a nice, long walk around the city and show off our costumes to all the normies!\"\n\nLaughs and giggles rippled through the crowd. Micah rolled his eyes. He would participate, but only because the Vixens would be there. Any chance to see them in action was worth it.\n\n\"After that, we'll let everyone take a break and then the Men's costume contest will begin at five o'clock. The women's contest, or as I like to call it, THE MAIN EVENT, will follow at six! Both judged by the beautiful, talented, COSPLAY VIXENS!\"\n\nRaucous cheering and clapping went up from the crowd and Micah joined in gladly. If there was one thing everyone in attendance could agree on, it was they couldn't wait to see the ladies don their sexy outfits. The fact that the Vixens were judging was the icing on the cake.\n\n\"But wait! I've saved the best part for last!\" the announcer added in a dramatic voice.\n\nMicah's eyebrows raised along with his level of interest. He leaned forward along with many others in the crowd.\n\n\"You may recall seeing MYSTERY PRIZE listed on the prize packages on the website! Well, it's my pleasure to unveil them now! The winner of the women's competition will be considered for membership in Cosplay Vixens! And the winner of the men's competition will be going to an exclusive after-party with the Vixens themselves!!!\"\n\nThe world stopped and reality itself seemed to fold in on Micah. He hardly noticed the screaming and thunderous applause all around him. He looked around in dazed disbelief. It was the opportunity of a lifetime and he wasn't prepared. Micah would get his chance to meet the Vixens, but spending an evening with them would've been so much better. Once this was over, he'd probably spend the rest of his life wishing he'd put more effort into his costume.\n\n* * * * *\n\n*THUD*\n\n\"Ow!!!\"\n\nEven for a smaller guy like Micah, the bathroom stalls weren't spacious enough. He'd already banged his knee on the door and smashed his elbow into the walls twice as he removed his clothes. Now, as he pulled on his costume, it was a struggle not to trip and fall on the slick tile floor.\n\nHe put on his 'tunic' which was really just a long, green shirt. After that he donned his beige trousers and buckled the black leather belt around his waist. Finally, he pulled the tall, brown leather boots up his feet and calves. If he was honest, it was the only part of his costume that looked authentic.\n\nMicah packed his regular clothes into his backpack, picked up his accessories and carefully exited the stall. He walked out into the brightly lit bathroom and stopped before the long row of mirrors. The young man dropped his backpack to the side, donned his sad emulation of the signature green cap and took up his plastic sword and shield.\n\nAs he gazed into the mirror he saw some dollar-store version of Link from the Legend of Zelda looking back at him. The accessories had the official game logos on them, but they were practically Fisher Price toys. He'd ordered them online and they looked like something elementary school kids would play with; not props you'd bring to an official cosplay contest. The rest of his costume was obviously thrown together quickly and cheaply.\n\nAt least Micah somewhat looked the part at 5'7 and with a slender build. He didn't have Link's blonde hair, but his light brown locks should pass muster.\n\n'Oh, shit! Link has pointed ears, doesn't he? I totally forgot about that until now!'\n\nHe sighed and briefly thought about changing out of his costume and calling the whole thing off. Then he remembered he couldn't participate in the parade if he wasn't dressed.\n\n'Dammit! This is lame, but at least I'll be close to the Vixens...'\n\nMicah gathered up his backpack along with his silly plastic toys and what was left of his pride. He slumped his shoulders and made a hasty exit from the restroom.\n\n* * * * *\n\nIt had been a long march around the city and the cosplay parade had depleted the stamina of many. Most of the convention goers were resting or getting a bite to eat. Not Micah. He was no fool. He figured this would be the best time to check in at the Cosplay Vixens booth.\n\nAs he approached the entrance his suspicions were confirmed. The booth was open for business and the line was short. There were just three people ahead of him. Jessica was nowhere to be seen, but Gwen and Roxy were standing near the front table. They were chatting with a fan, signing autographs and downing bottled water after the long walk.\n\nNot only were they beautiful, but their work ethic was impressive. It's no wonder Cosplay Vixens had turned into a force that could make or break conventions. As the line grew shorter and Micah moved up, he studied the two divas intently.\n\nGwen was striking in her Isabella Valentine costume; a Goddess beyond compare. The warrior Dominatrix from Soul Calibur, otherwise known as Ivy, was the perfect role for her. Gwen's full, luscious curves filled out the sexy costume so well. It was skimpy in how much it covered the body, but certainly not skimpy in detail.\n\nHer hair was cut short and dyed white to match the character. Was that her hair or was it a wig? It was hard to tell. A series of purple and black leather straps started at her neck and wound down her supple form. They criss-crossed her body and lightly bit into her soft flesh. The shiny fetish-wear highlighted her thickness wonderfully.\n\nA black leather bra held up her ample breasts and matching boots took over at her knees. The purple straps ended there and clipped onto the black lace leggings that led into her boots like garters. She wore a golden gauntlet on her left arm that extended into elaborate shoulder armor adorned with a skull. Her sword arm was wrapped in a silky, black sleeve until a white, satin glove took over halfway down her forearm.\n\nIvy's signature snake-sword lay on the table not far away from Gwen. In the lore of Soul Calibur, her weapon was a bladed chain-whip that could switch between broadsword and whip form in the blink of an eye. It was also the weapon with the furthest reach in the game. Micah doubted her prop sword could extend like that, but it sure looked cool.\n\nThe one odd element of her costume was the black and silver codpiece she wore. Ivy had never worn a codpiece in any game skin or artwork that Micah had seen. Come to think of it, he'd seen Gwen wear a codpiece with many of the costumes she'd donned over the years. It was an odd addition, but certainly didn't detract from her overwhelming sex appeal.\n\nRoxy, likewise, was gorgeous as an enticing, demonic femme. Micah didn't recognize her character in particular, but she was clearly some kind of Succubus. The dainty redhead had gone the distance in propping up her small form to look bigger and more intimidating than she normally would.\n\nShiny, ridged, jet black horns curled forth from her canopy of blood-red hair. They gave her a sinister look that was immediately compounded by the lenses in her eyes. They hid her normal eye color, leaving only black portals with red highlights that could pierce your very soul. Her fingernails were painted the same crimson tone as her luscious locks.\n\nA long, slitted, black dress trailed down her body, leaving her bust and sides exposed for convention goers to gawk at. Where her flesh was exposed, black tribal tattoos were painted all over her body, adding further to her unholy depiction. Her tiny feet were strapped into heeled, black platform shoes, granting her an extra four inches of height.\n\nMicah's tongue was practically hanging out as he came to the front of the line. He waited impatiently as the customer in front of him got his meet-and-greet and claimed his souvenirs. Micah felt horribly inadequate in his half-ass costume, but at least he was a cosplayer and that gave him something in common with the Vixens. Hopefully, he could segue that into a conversation and not come off like a total dork.\n\nThe fan in front of him said his thanks and trundled off. Micah stepped up, a broad smile on his face as the two Vixens scanned him.\n\n\"Hello... Link?\" Roxy began as he approached.\n\n\"Hi, I'm Micah. Sorry about the costume. I had to throw it together on short notice.\"\n\n\"Do better next time\" Gwen stated with a sneer and her hands on her hips. Apparently she was really getting into her role this afternoon.\n\nRoxy waved her off. \"It's fine. Not everyone has weeks to work on their outfit. What can we do for you, Micah?\"\n\nHis tension faded and he immediately felt more at ease. It was odd being consoled by a woman dressed as an infernal Demoness.\n\n\"I put in an order for a signed poster and three personal photos. One with each of you. Let me pull up the receipt...\"\n\nRoxy nodded and waited for Micah to pull up the confirmation on his phone. \"Jessica's not here right now, but we can take the first two photos now, if you like.\"\n\n\"Sounds good\" Micah replied. He held up his phone and showed Roxy the digital receipt.\n\n\"Perfect! Hand that over and I'll take your first one with Gwen.\"\n\nMicah was surprised they didn't have someone designated to do that for them, but he was more than happy to give Roxy his device. He opened his camera app before handing it to the smiling Succubus. Micah strode forward, getting an even more impressive view of Gwen in her amazing Ivy outfit before taking up position beside her.\n\nOnce she had his phone, Roxy immediately closed the camera app and started snooping around. She loved spying on her fanboys and seeing if she could dig up anything incriminating. On occasion, it led to the most wonderful predicaments.\n\nGwen grabbed her sword from the table. She turned to him and immediately grabbed the back of his neck with her gauntleted hand. Gwen pressed her body close to his, raised her sword above her head and pointed it down at him, as if preparing to deal a killing blow. Micah's entire body shivered. Between her scent, touch and her rough grasp, he was melting.\n\n\"Whoops, I think I closed the camera by accident! Give me a second!\" Roxy said, her eyes glued to his phone.\n\n\"Oh... No problem!\" Micah answered. He welcomed any excuse to stay close to the stunning Domina.\n\nGwen sighed and dropped the pose. She knew what Roxy was doing, so now it was her job to keep Micah occupied for a bit.\n\n\"Hey, what's your favorite game?\" she asked in an appropriately husky tone. She gazed down at Micah and batted her dark eyelashes.\n\nShe even sounded a bit like Ivy. The poorly dressed Link was weak in the knees. \"Ummm, I'm not sure if I have a favorite.\"\n\n\"Ok, what game do you spend the most time playing, then?\"\n\n\"Oh, that's easy! World of Waifu's!\" he admitted with some shame.\n\n\"World of Waifu's?!?\" Gwen looked annoyed. \"Of all the games you could be enjoying you play that perverted trash?!? That on top of your lame costume?!?\"\n\nMicah laughed nervously.\n\n\"Naughty boy! You need to be punished! Bend over that table at once!!!\"\n\nHis eyes went wide as saucers as he gazed up at the fiery Ivy. \"Are you--\"\n\nHe didn't even get 'being serious?' out of his mouth before she shoved him into the side of the table. Micah's cheap plastic shield clunked to the ground as he was sprawled out before her. Gwen pushed his back and shoulders down until he was completely flat against the surface and his ass was sticking out.\n\nAs Gwen prepared him for public discipline, Roxy's eyes were wide with excitement. She'd found a folder labeled 'Smut' in Micah's gallery and quickly opened it. As an array of raunchy images populated the screen, Roxy's grin grew wicked. It was all hentai. Futanari pics by the hundreds. Many of them futa on male.\n\n\"Ten spankings for the pervy weeb!\" Gwen called out.\n\n*WHAP WHAP WHAP WHAP WHAP*\n\nIt didn't have a real edge, but Gwen's prop sword was definitely real metal. As the flat slide smacked his ass repeatedly it got more painful with each strike. She wasn't going easy, either. Gwen laughed as the blows continued. Micah began to wonder if she wasn't the real Isabella Valentine.\n\nFans waiting in line chortled and took pictures. Convention goers who'd been walking by stopped and gawked at the spectacle. Micah's face and ass cheeks grew increasingly red as Ivy bashed his bottom for more than the promised ten strikes. The crowd was loving it as they watched the steaming hot Ivy put the poorly dressed Link in his place.\n\n*WHAP WHAP WHAP WHAP WHAP WHAP WHAP*\n\n\"OK! I'm ready!\" Roxy called out as Gwen helped Micah up.\n\nHis ass smarted as Micah gingerly moved back into position for the photo.\n\n\"Did you enjoy that?\" Gwen asked as she lifted her sword back over her head.\n\n\"Ugh... I haven't been spanked since I was little\" Micah grumbled reflexively.\n\n\"Not what I asked\" the Vixen declared haughtily.\n\nMicah paused, but then answered honestly. His entire body was tingling with lust and excitement. \"I'd do it again, as long as you're the one dishing it out.\"\n\n\"Good boy\" she intoned. Her metallic hand seized the back of his neck for a second time.\n\n*KA-CHINK*\n\nThe first picture was taken. Gwen released him from her gauntlet only to add an open-palm smack to his ass for good measure. As Micah grunted in fresh ache, she chuckled and strode forward. Roxy handed Gwen the phone and the Demoness moved into position where the fantasy leather Domme had been.\n\n\"So, are you going to enter the men's costume contest?\" she asked cheerfully.\n\n\"I was planning to, but I don't know if I want to now...\"\n\n\"I think you should\" Roxy stated emphatically.\n\n\"Really? But there's so many guys with better costumes.\"\n\nRoxy turned to him, her dark, shimmering eyes drilling into his warm, hazel ones. She placed an arm around his shoulder and her perfume drifted over him like a sweet cloud. \"Just do it, silly. You'll regret it if you don't.\"\n\nMicah's confidence surged. There was no way he could back out now.\n\n\"Alright! I'll be there!\"\n\n\"That's more like it.\"\n\nThey turned and posed for the second picture. Roxy bore her teeth and bright red fingernails as she threatened to tear the poor Link asunder and drink his blood. Micah put on his best terrified expression and held up his Hyrulian shield defensively.\n\n*KA-CHINK*\n\n* * * * *\n\n\"There you are!\" Roxy announced as she closed in on their missing member. \"I've been looking all over!\"\n\nJessica was standing by a food truck, waiting for her order. She was dressed in the flowing black robes of a dark Jedi. Her hair was dyed white and her face was painted with black sigils. Her eyes were piercing portals of yellow and black thanks to the colored lenses.\n\nThe black PVC split top and leather arm-gloves only added to her sinister appearance. Her stocking clad legs stuck out on either side of her black and red loincloth, draping down the front of her lower body. Shiny, metallic shin-guards were strapped to the front of her leather boots. A fancy looking lightsaber prop hung from her belt, completing the image of a villainous female Sith.\n\n\"Oh, hey Rox! Sorry, my interview went long. After that, I was starving.\"\n\n\"No worries. Ready for some good news?\"\n\n\"Anything to distract me until my fried dough is ready.\"\n\n\"I've found our next bottom bitch.\"\n\n\"Really? How so?\"\n\n\"Some guy name Micah just visited our booth. His phone was full of Futa porn.\"\n\n\"Wow, a girly name too! He a femboy?\"\n\n\"He's halfway there in a shitty Link costume. I'm sure we could dress him up better if we wanted.\"\n\n\"And he's in the competition?\"\n\n\"I made sure of it.\"\n\n\"I guess we have our winner, then\" the sinful Sith said with a grin.\n\nRoxy looked from side to side, making sure no one was close enough to overhear them. \"Like I said, it's not a good costume. You sure it won't be too obvious we're rigging it?\"\n\n\"Gary owes me like three favors. Plus he wants to keep us coming back to the show. He's not gonna complain.\"\n\n\"And what about the fans?\"\n\n\"Fuck the fans. They can choke on my dick! Every last one of them.\"\n\nRoxy laughed enthusiastically. \"If only!\"\n\n* * * * *\n\nMicah stood nervously, looking out at the crowd as the announcer shouted out the results. He held his plastic sword and shield at his sides, feeling completely outmatched and dispirited. Third prize was announced. Then second prize. Neither were for him. In truth, he didn't deserve to be on the stage at all. Of the final ten, the other nine contestants all had amazing costumes. Gwen or Roxy must have taken pity on him and let him into the final round on a lark.",
        "He was standing between two taller guys in fancy sets of armor. The dashing man to his left was dressed as Commander Shepard from Mass Effect. He wore a dazzling, well painted set of N7 sci-fi special ops gear. He even had the buzzed head to complete the military look. To his right was another space marine. That man's face was obscured by his Halo Master Chief helmet. His body was clad in the green and black armor of a futuristic Spartan commando.\n\nMicah grimaced as he looked from side to side at his artful opponents. If only he'd had more time before the convention, he could've put together a better outfit and really competed. He'd been swamped with work the entire month before and that had led to his current, sad predicament. At least it would all be over, momentarily.\n\n\"And this year's grand prize winner for the UwU Con Men's Costume Contest is... Micah Gabriel Cushing as Link!!!\"\n\nA bolt of shock cascaded down Micah's spine. It began as giddy elation but quickly turned to dread as hundreds of gazes turned towards him. As the seconds wore on, they looked increasingly disgusted. Micah dared not glance to his sides and see how much more angry and annoyed his opponents were.\n\n\"Link's supposed to be blonde!\" someone in the crowd shouted.\n\n\"I know, he didn't even dye his hair\" another convention goer added.\n\n\"No quiver and bow!\"\n\n\"More like Santa's helper than Link...\"\n\nThe crowd grew unruly and the mutterings turned into a cacophony of complaints.\n\n\"This is bullshit\" one of the contestants a few spots down from Micah grumbled.\n\nThe announcer became flustered and quickly sought to redirect attention to the Vixens. \"Uhhh, ladies! Why don't you tell them why you picked Micah!\" he spoke into the mic nervously. All attention shifted to the judge's table as the cosplay divas gave their answers one by one.\n\nRoxy leaned into her microphone and spoke with poise. \"He did his best on what was obviously a small budget and I really liked his enthusiasm.\" She winked at Micah and smiled before leaning back.\n\n\"Femboys are hot\" Jessica stated in deadpan fashion. A wave of laughs and giggles flowed through the crowd followed by some reluctant clapping. The female Sith flashed the audience a wicked grin.\n\n\"I like his boots\" Gwen added stoically. A few more laughs and claps emanated from the crowd.\n\n\"Well, there you have it folks! It takes all kinds!\" Gary intoned, launching back into his announcer schpeel. \"Come on down, Micah, and claim your prizes!\"\n\nThe bashful Link stepped forward and walked down the length of the stage, careful not to look directly at any of the annoyed contestants he was passing by. Micah slung his toy shield over his back as he reached the front table and tucked his sword into his belt. He shook Gary's hand as he approached the podium and the middle-aged executive started handing him his winnings.\n\n\"Here's your two hundred and fifty dollar gift card to Game Zone! And your anime and manga prize package!\"\n\nMicah took the heavy shopping bag full of blu-rays, soft cover graphic novels and miscellaneous swag. He nodded to the gentleman in thanks.\n\n\"But best of all, you'll be hanging with the Vixens tonight! Are you looking forward to it?\" Gary reached down and held the end of the mic for the young man to speak into.\n\nMicah looked over at the judge's table, his gaze fixed on the three luscious beauties. \"This is, without a doubt, the best day of my life.\"\n\nHis voice echoed through the speakers in the convention hall. The crowd offered him light applause, showing some amount of respect for his humility, if not his effort and skill.\n\n\"Thank you!\" he added before taking his loot and walking off the stage.\n\nAs he did, the Vixens flashed him a variety of sultry looks. Gwen's said 'prepare for more discipline.' Roxy looked downright flirtatious. And Jessica, with her yellow eyes, appeared crazed with lustful anticipation.\n\nWas he reading too much into their gazes? Almost definitely. Regardless, it would be a very different convention experience for Micah tonight. For the first time in his life, he couldn't wait for the women's cosplay contest to be over with.\n\n* * * * *\n\nIt was an hour and a half later when Micah walked down the long corridor alongside Gary. They were deep into the backstage labyrinth as they headed for the Vixens dressing room. The smartly dressed man turned to him as they walked and spoke in a measured voice.\n\n\"I don't want to be a buzzkill, but it's my job to play chaperone, so listen up. The Vixens often ramp up their sex appeal and flirtiness when they're performing, but you know that's an act, right?\"\n\n\"Of course\" Micah answered with a nod. He wished it wasn't true, but anyone with a modicum of social or emotional intelligence knew they were ingratiating themselves to their horny fanboys.\n\n\"Good. After a long show, they like to relax and unwind. You get to hang out for a while, but don't pester them. Be respectful. You're still guests as long as you remain on these grounds. I expect you to be a perfect gentleman.\"\n\n\"Yes, sir. Absolutely.\"\n\n\"That-ta boy!\" he said with a slap to Micah's back. \"You're making me glad they picked you.\"\n\nMicah was starting to get annoyed. On top of the mood being dampened, he hated being called a boy. He was twenty six, a college graduate and gainfully employed. He'd ceased being a boy a long time ago, even if he still looked a bit boyish due to his height and youth. Sure, he was a weeb and currently dressed as an elf, but that didn't mean he wasn't an adult.\n\nGary came to a stop and pointed three doors down the hallway. \"There it is. Room nineteen. Have fun!\" He gave the young man another pat on the shoulder before walking off.\n\nMicah practically floated the remaining distance to the waiting door. He knocked and immediately heard a muffled \"Come in!\" He turned the doorknob and stepped into cosplay heaven.\n\nOnly heaven was a disaster. Clothes, bags, makeup and convention swag lay everywhere. There was a series of couches, tables and beauty stations with bright lights beaming outward. The ladies were all sprawled out on the leather furniture, resting after a long day on their feet. Roxy was the first one to rise as they witnessed the young man walking through the door.\n\n\"Well, look who's here!\" the fiendish redhead said cheerfully.\n\n\"About time\" Jessica added, not bothering to get up from her stretched-out position on the sofa.\n\n\"Hey\" Gwen said with a nod.\n\nMicah was elated to see they were all still in their costumes. Now he didn't feel like a fool for still wearing his. He nodded to them and smiled.\n\n\"Ladies. Thanks so much for having me.\"\n\n\"Ladies, huh?\" Jessica asked.\n\nGwen snickered.\n\n\"You're most welcome\" Roxy replied happily. \"Please, come sit down! There's food right there, if you're hungry.\" She pointed to a table stacked with pizzas, bowls of snacks and a cooler of drinks.\n\n\"I'm good for now, thanks\" he answered. Micah moved to one of the couches and sat opposite Jessica. \"I was telling Roxy earlier, when I was getting my pictures, that I've been big fans of you guys for a long time.\"\n\n\"Oh? How nice\" Jessica responded with a thin smile.\n\n\"I don't know why you picked me, but I'll never be able to thank you enough.\"\n\n\"We'll see about that\" Gwen perked up with a sly grin.\n\n\"Yeah, there's a lot you could do to thank us. You might be surprised\" Jessica spoke up.\n\nNow it was Roxy's turn to chuckle. Her throaty laugh echoed behind Micah.\n\n\"Oh?\" he asked, looking from vixen to vixen with an anxious heart.\n\n\"Listen\" Jessica said, sitting up. The leather of her costume glistened as her body meshed with the shiny sofa. \"Normally, when we do these things, we hang out for a couple hours, eat some pizza, talk about geeky shit that none of us really care about and that's it. You want to have more fun than that, right?\"\n\n\"Ummm... Sure!\" he answered excitedly. \"What did you have in mind?\"\n\nRoxy walked in from the side, entering Micah's field of vision again. It was odd that a woman dressed as a demon was the most feminine and sincere of the trio. \"We've got a sweet hotel room waiting, loaded with all the real party stuff. Booze, weed, poppers, molly and other... fun things.\"\n\n\"We'd much rather head their now than hang out in this smelly geek den for another two hours\" Jessica added, redirecting his attention. \"You could come along and get to know us much better than you would here. What do you say we ditch this dump?\"\n\nMicah's eyes went wide. He could hardly believe he was being invited to a more personal and intimate party than the one he'd been promised. It seemed the Vixens had some real interest in him after all. Micah's self esteem surged as he searched for a suave way to say 'YES!'\n\nBefore he could respond, Gwen rose and picked up her weapon. She strolled right up to the sitting Micah, tapping her whip-sword in her hand. The gorgeous Domina gazed down at him and sank her hooks in deep.\n\n\"Let's go... boy.\"\n\nMaybe being called 'boy' wasn't so bad after all.\n\n* * * * *\n\nSome poor bell boy was charged with ferrying about a dozen of the girls bags of supplies and convention goodies up to the ninth floor where they were staying. Once they got to the room, he off-loaded the luggage piece by piece from the metallic trolley. He was handed a generous tip by Jessica before thanking them and taking his leave. The door finally closed and Micah found himself alone with the three gorgeous Vixens.\n\nHe barely got a look around the swanky, upscale suite before Roxy leapt on him and started kissing him enthusiastically. Micah was momentarily shocked, but quickly relaxed and went with the flow. He figured he might get lucky tonight, after they hung out and enjoyed a few illicit substances, but he'd never expected any of the girls to move this fast.\n\nAs Roxy slowly moved him toward the bedroom, Jessica and Gwen snapped into action. They began retrieving party favors from the kitchen, bathroom and their luggage and lined them up on the counter one by one. Soon, they had a smorgasbord of drugs, alcohol and sex toys that Hunter S. Thompson would've been proud to partake in.\n\nMicah was enjoying Roxy's aggressive tonguing and gropes as she started to undress him. She tore off his sad emulation of Link's cap and his plastic accessories, tossing them aside as they moved closer to one of the beds. He couldn't believe this was happening, but his cock sure could. Micah had never gotten hard so fast in his life.\n\nThe Demoness with the reddish-black eyes and sinister horns grabbed his shoulders and pressed him down. \"On your knees! Now!\"\n\nMicah obeyed. He would gladly start the evening by eating out the gorgeous Roxy if that's what she wanted. As she seized his head and pulled it close to her crotch, it became evident quickly that he'd be doing no such thing. His face was pressed into a long, thick bulge in the front of her dress. The fat protrusion in the silky black fabric was growing thicker and meaner by the second.\n\nRoxy pulled up her dress with one hand and mashed his face into her crotch with the other. Micah mouth and nose were forced against the massive member tenting in her pantyhose and the fat scrotum dangling below it. He inhaled deeply of her musk as she dug her fingers into his hair and held him close to her stiffening unit and ample sack. It was colossal. It didn't seem possible that it could belong to such a dainty woman. It had to be at least ten inches long and she wasn't even fully erect yet.\n\n\"You like that, bitch? I know you do. I saw what was on your phone. That's why you're here, slut.\"\n\nMicah's heartbeat spiked and his eyes went wide. Never in a million years would he have thought Roxy was one of those girls. The possibilities of the night expanded and filled his mind. Not only would he have his first experience with a hung beauty, but he might get to watch Roxy fuck one of the other girls. That would be a dream come true. If he was really lucky, he might even get to be part of a train, taking Roxy from behind.\n\nShe released his head and Micah sat back on his haunches. He gazed up at the devious dickgirl and her growing package as she delivered the next shock.\n\n\"And it's not just me. You have three cocks to satisfy tonight, Link the Twink. Get ready for the all-you-can eat cock buffet!\"\n\nJessica and Gwen too? What?!? His brain couldn't even process it. Now he had no idea what their evening together might look like. He only knew he was in for a crazy night, beyond what he could've imagined in his wildest dreams.\n\n\"Alright, let's get this party started!\" Jessica announced.\n\nThey looked to the side and there was the curvy dark Jedi carrying a tray with two cups and a lit spliff of marijuana. Micah hadn't smoked since college, but he was perfectly happy to indulge. He stood and brushed himself off. He toked up as soon as Jessica handed him the joint, inhaling deep and coughing loudly.\n\n\"Damn, that's good shit\" he noted with a nod and handed it to Roxy. A light buzz descended on him within moments.\n\n\"Wait till you try this\" Jessica said, grinning as she picked up the cup on the left and handed it to him. \"This one's for you.\"\n\n\"Thanks. What's in it?\" he asked, peering into the frothy cup.\n\n\"Just drink it\" she said, placing a hand on her hip. \"And get out of that stupid, green shirt.\" Jessica offered him a wink before sauntering off.\n\nAs Roxy enjoyed the weed, Micah took a chug from his drink and was bowled over.\n\n\"Whoa! You vixens party hard!\"\n\n\"Mmmhmmm\" Roxy said, rubbing up against him again. \"Bottoms up!\"\n\nMicah couldn't resist her charms. He took two long gulps one after the other, then tilted the cup back and finished it off. He set the plastic tumbler on a nearby table and then began undoing his makeshift tunic. Already, he was somewhat losing his coordination as he struggled to take off his shirt, pants and boots.\n\n\"Wow... I'm getting dizzy! Haha!\"\n\n\"It's alright\" Roxy said before setting down the cigarette and helping him to the bedside.\n\nBy the time she had him down to his boxers, Gwen appeared. She strode up to Micah as he sat on the edge of the bed. The stunning Ivy look-alike held a yellow rubber face mask connected to a puffy rubber pouch. Even further down the strange contraption it ended in a circular plastic base. Micah might have found it intimidating if he wasn't alright woozy and buzzed.\n\n\"You ever done poppers before, Micah?\"\n\n\"No\" he replied, looking up at the leather-strapped Domina in purple and black.\n\n\"Do you have any medical conditions we should know about?\" she asked cautiously.\n\n\"I'm allergic to oranges\" Micah answered hazily. He instantly felt stupid.\n\n\"Oh damn, I guess we can't use the orange flavored condoms\" Jessica joked as she strode back into the bedroom.\n\n\"Condoms! Hah!\" Roxy said in the background.\n\nGwen chuckled. \"If that's your worst ailment, I think you'll be ok.\" She brought the glossy yellow mask to his mouth. \"This is going to make you feel real good.\" She squeezed the bag at the center and Micah inhaled. It was a pungent, solvent smell. Almost like a cleaner, but somewhat sweeter. It overpowered his lungs and senses in seconds.\n\n\"Not to mention nice and loose at both ends!\" Roxy added with a chuckle.\n\nMicah's body seemed to leap through space as an incredible head rush overtook him. Gwen gave the device one more squeeze and then, seeing his eyes droop in relaxation, she pulled the mask away. A feeling of utter, amazing euphoria flooded Micah's body as he watched the three beauties move around the room. His libido surged as the chemical high doused him. He wanted nothing but to please these beautiful, fearsome femmes.\n\nGwen unhooked her codpiece and tossed it aside. Jessica undid her belt and black loincloth, throwing them on a nearby chair. Roxy undid her dress and stepped out of it completely, bringing her lovely curves to bear. After pulling down and discarding their undergarments, they convened on Micah and he was staring directly at three, massive bobbing lengths of cock. Each was matched by a swollen sack below that made Micah feel more than a little inadequate. His own testes were nowhere near their size and apparent potency.\n\nIt didn't feel real. He smiled and half-laughed as they grew closer. Soon, all three were stroking their long, slick lengths of fuck-meat up and down with hungry hands. They stepped forward until the glistening tips of all three wands were directly in his face.\n\nRoxy handled her foot long with a cocky smile. Her foreskin rolled up and down as she smoothed her hang along the fat, glistening length. Jessica's cock was equally thick, but an inch or two longer. It's spongy glans oozed with a thick dollop of pre-cum, growing bigger with each second she stroked her girthy pole. Gwen's was the biggest and meanest of them all. Her cock was at least a foot and a half long with angry looking veins and a width that rivaled soda cans. It was now obvious why she regularly wore a codpiece with her cosplay.\n\nJessica's patience grew thin. She spoke from the center of the masturbating trio. \"Get to work, faggot!\"\n\nShe shoved the head of her cock into Micah's lips. Simultaneously, Gwen and Roxy's thick lengths pressed on him from both sides. They each took one of his hands and lifted them onto their shafts as Jessica pushed her glans deep into his mouth.\n\nMicah yielded to them, his entire body tingling with giddy desire. He massaged Roxy and Gwen in long, lewd strokes as Jessica took hold of his head and plowed her penis through his warm lips. It wasn't long before she was fucking his mouth in earnest. She rammed the head of her cock into his soft uvula, demanding entrance to his throat as Micah covered her shaft in hot saliva and sucked her lovingly.\n\nHe got a strong taste of sweat and musk as Jessica fucked his face. An entire day's worth of grime was coated on his tongue. He sucked her clean of all the sweat and musk she'd gathered wearing her costume through the parade and many long, tedious events. He wagged his tongue along the bottom of her sperm channel and applied long, supple strokes to the two Goddesses flanking her.\n\nSoon all three women were moaning. Gwen stood defiantly with her hands on her hips, as if daring Micah to make her cum. Roxy raised her hands to her ample mounds and began groping herself as Micah stroked her schlong. Jessica grunted and groaned pleasurably as she grabbed handfuls of Micah's hair and shafted his mouth harder and faster.\n\nTheir voices raised together as their climaxes drew near. Micah could hardly believe he was directing the symphony of so much pleasure as all three women gyrated and moaned close to his face.\n\n\"UUUUUUHHHHHHHHNNNNNNNNNNNNNNNN!!!!\" Jessica screamed as she hilted in his lips and Micah's mouth flooded with warm, thick, semen.\n\n\"YYYYYEEEEEEESSSSSSS!\" Roxy shouted as she came. Her thick jizzum spurted from her tip and lathered Micah and the bed in equal measure.\n\n\"OH GODDD!!!! AHHHHHHHHHHHHHH!!!\" Gwen bellowed as her white custard spat out in thick ropes.\n\nGwen's cum decorated Micah's body along with Roxy's as he continued to jerk them off. Micah's mouth accepted the constant flow of hot, bubbling paste from Jessica's pulsing hose as her twitching sack drained into his sucking depths.\n\nWhen their emissions tapered, Jessica pulled her cock free and Micah released the hot missiles of flesh from his hands. The women sighed and looked on dreamily as they stepped back and bathed in the afterglow of their powerful orgasms.\n\nLittle did Micah suspect, they were just getting started.",
        "\"Let's get him on his back\" Gwen demanded.\n\n\"Yes, but first...\" Roxy spoke up. She disappeared behind Micah and seconds later he felt his arms being pulled behind his back. A pair of handcuffs was ratcheted around his wrists.\n\n\"Perfect\" Gwen nodded before shoving him back on the bed. She picked up the drug inhaler and stalked around to the other side of the cum-glazed duvet.\n\nJessica and Roxy took hold of Micah and began shimmying him to the center of the mattress. Micah relaxed in a pleasurable daze as the two women at his bottom yanked his underwear down his legs and discarded it. Gwen adjusted his head near the other side of the bed until his face was hanging off the end. His vision was upside down and all he could see were Gwen's powerful legs, wide hips and her impossibly large penis hanging down and dripping residual cum on his face.\n\nShe lowered the face mask down on Micah's mouth. The eager Domina gave the device a few more squeezes, flooding the prone bitch-boy with fresh happy chemicals before tossing it aside.\n\n\"There, he should be real loose now.\"\n\nSomewhere in his sky-high, dazed and pleasurably buzzing mind, Micah thought it was his turn to cum. Perhaps he'd get to fuck somebody? That's why they'd pulled his boxers off, yes? He was given a rude reality check as Jessica lifted his legs onto her shoulders and fed her monster cock into his soft, defenseless pucker.\n\nAll the tension had been drained from Micah's body by the free-floating effects of the drug cocktail. He felt some measure of pain as the sultry Sith speared into him with her steely erection, but it wasn't nearly as bad as it would've been normally. Jessica used no lubrication but the spittle and sticky cum that remained after fucking his mouth. Even so, Micah's silken flower parted for her, his sphincter muscles having little of the tightness and tension they normally would.\n\nLikewise, Gwen's fat, long, throbbing pipe of flesh plowed into his mouth with ease. By the time she pressed into his throat and Micah started gagging, it was too late for his muscles to reject her. She had already gone deep in his slack body. She grabbed the sides of his head with her one silk-clad hand and her other gauntleted fist and began deep throat fucking his face.\n\nMicah's eyes went blurry with watery tears. His arms pulled uselessly on the handcuffs under him as she stuffed his throat with cock. He could do nothing but watch her fat, fleshy ball sack swing back and forth as the leather-clad Ivy utterly dominated his oral cavity. Her scrotum smacked into his eyes and nose repeatedly, growing increasingly sloppy as sweat ran down her taint and a combination of phlegm and pre-cum dribbled from Micah's crammed lips.\n\nHis red-cracked eyes went wide as she assaulted his throat continuously. She fucked him powerfully, stabbing into his warm, wet, tight tunnel and taking exquisite pleasure from every back and forth motion. Micah choked, slobbered and gagged on her bulging length, coming closer to retching with each fuck.\n\n*HHHRRRGGGWWWAAGGLLOOWWMMMMMMMM*\n\nA jet of hot, wet, sticky paste jettisoned from Micah's mouth and drenched Gwen's pelvis and massive scrotum. She let out a wicked laugh and smacked the side of his bitch-made mouth. She stopped only to shift her grip and abandon his face to take a stern hold of his welcoming throat.\n\n\"Ahhhh! That's it! Make Momma feel good! Gonna call you 'Lil Pukey' you filthy bitch!\"\n\n\"Gag more, slut!\" Roxy shouted as she rejoined them on the bed. She reached down with nipple clamps and let their cold, hard sting bite into Micah's nipples as he was throttled at both ends with her friends fearsome erections.\n\nJessica pushed his legs forward painfully and pummeled her cock ever deeper into his deflowered rectum. She cackled like a maniac as she grew closer to going balls deep in his bouncing booty. The sadistic Sith reached down periodically and gave his cock a swat with her fingers and smacked his balls with her open palm.\n\n\"Take it, cum dump slut! Learn your place!\"\n\nEach time she tortured his nethers, Micah convulsed and sent another phlegmy wad of filth flying from his mouth. Every syrupy jet bathed Gwen's lower body and thrusting pole in unbelievable bliss. Her eyes grew dreamy as she glormed in and out of his throat with steady, plunging fucks..\n\nRoxy enjoyed a drink and another smoke as she waited for her turn at one of his holes. She laughed with glee as Micah squirmed between two powerful, thrusting cocks. The Vixens hard, moist pounding pistons were a stark contrast to his own sad penis. His dick was now a shriveled and pathetic derelict jostling back and forth as he was railed by the two mighty Futa Dommes.\n\n\"AHHHHHHHHHHHHHHHHHHH!!!!\" Jessica screamed as she went balls deep his his stretched-wide anus. Micah's legs flailed in her grip as his depths were flooded with her hot nougat sludge.\n\n\"MMMMMMM!!! YES!!!!! DRINK IT!!! DRINK IT YOU FUCK!!!!\" Gwen was more verbal as her balls clenched and she discharged her second fat load into Micah's sucking throat. She closed her hands around his neck as gob after gob of hot, sticky glue siphoned down his maw and into his semen caked stomach.\n\nThe young man pulled helplessly on the cuffs as he was force fed a liter of Futanari jizzum. He writhed between their cocks as they sank deep and filled him to the brim. Gwen's twitching balls pressed harshly into his face until Micah could do nothing but snort reflexively. He inhaled her fleshy, sweaty musk as he tried in vain to get fresh air.\n\nAfter filling him with their seed, Jessica and Gwen pulled their cocks free with loud, wet slurps. They sighed and laughed in contentment as they jerked their nearly-spent lengths. The last few ropes of their cock-snot spat all over Micah's bound body as he sucked in badly needed oxygen. His cum-glazed chest rose and fell as the second round of their gang-bang came to an end.\n\nThe Vixens wandered off, but Micah got only brief respite as Roxy and Gwen snorted up some powdered energy and Jessica enjoyed a drink and toke. They were back in minutes and Gwen pressed the rubber mask over Micah's face and fed him another dose of lustful euphoria.\n\n\"On his stomach, now?\" Roxy asked.\n\n\"Hell yeah! I think we all want some doggy tonight. Me first!\" Gwen insisted.\n\n\"Works for me\" Jessica agreed as she helped Roxy roll him over.\n\nMicah was giddy with pleasure as they turned his cuffed, cum-slathered body. He was happy not to be upside down anymore as Roxy took position at his front. Gwen delivered a few dozen hard smacks to his already inflamed buttocks in between fisting herself back to full erection. Jessica relaxed on the sidelines, stroking her cock as she watched her friends invade the bound bitch boy again.\n\nThe broken-in slut opened his mouth obediently as Roxy seized his ears. She pushed her oozing glans past his lips and fed her thick monster into his tunnel of hot, sucking flesh. The demonic red-head cooed in carnal bliss as she went deep in his velvety mouth for the first time. Gwen locked his legs down with her powerful thighs as her weighty cum cannon pierced his pucker and sank deep into his gunked-up guts. The insatiable Dominatrix wasted no time building up a steady rhythm to her powerful shafting.\n\nAs they thrust deep in his soiled holes, Micah heard Jessica laughing in the background. His whimpers of helplessness soon gave way to grunts of pleasure as Gwen's monster strummed his prostate. Unbelievably, the monster schwanz wrecking his asshole was sending shivers of ecstasy up his spine. He could do nothing but yank on the steely cuffs behind his back and accept their cocks. At some point in their third round of slick, forceful rutting, Micah's limp dicklet spewed its load, adding his contribution to the already cum-drenched bedding.\n\n* * * * *\n\n\"MMMMMMM! YESSSS!! ALL OF IT!!! TAKE IT ALL!!!!\"\n\nMicah sucked down his Sunday breakfast in between Roxy's thighs. Her creamy filth flooded his mouth as she pressed her cock deep into his throat. He slurped down her load from necessity as much as desire. He was cuffed to the headboard, in the same position where he'd received Jessica and Gwen's morning emissions. They were getting ready to leave, but Roxy was determined to get in her turn before they departed.\n\nAs her stream of sticky paste slowed to a trickle, Roxy pulled her pulsing cock from his lips and lifted her body from his torso. As she did, she revealed a small bulge in Micah's belly, packed as it was with the essence of the three hung Vixens. He was about to ask when they'd be back, but Roxy pressed a ball gag into his mouth before he could utter a word. She strapped it tight around his head, sealing her flavor inside him along with the pungent taste of thick rubber.\n\n\"We'll be back in an hour or two. We just have to put in one more appearance at the con. Then we can have some more fun.\"\n\nShe tapped him on the nose before rising. After growing used to her demonic appearance, it was almost weird seeing her without the Succubus horns and evil eyes. It seemed the Vixens would be wearing different costumes today. Micah could only wonder which three characters would return to fuck him this afternoon.\n\n\"CMON ROX! WE GOTTA GO!\" Jessica called from the living room.\n\n\"Be right there!\" Roxy answered as she pulled her skirt back on.\n\nShe turned and looked down at the cum-splattered Micah. He looked so cute, gagged and bound to the room's biggest bed.\n\n\"Jess and Gwen have taken a liking to you. I have as well. I hope you enjoyed last night as much as we did...\" The redhead spoke as she gathered up her things and slipped on her shoes. \"Because we're on the road for the next two months, and we might be taking you with us.\"\n\nRoxy's high heels stalked into the distance. He could hear the women chatter and laugh in the background until moments later when the front door closed and they were gone. Micah was left to lounge in futanari filth and contemplate his new life."
    ],
    "authorname": "ChainedToAKeyboard",
    "tags": [
        "femdom",
        "futa",
        "futanari",
        "gangbang",
        "deep throat",
        "anal",
        "bukkake",
        "big cock",
        "bdsm",
        "futa on male"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/cosplay-cumdump-ch-01"
}