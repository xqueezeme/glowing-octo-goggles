{
    "title": "The Cottage: Second Day",
    "pages": [
        "Copyright (c) 2020 James Miehoff, All Rights Reserved. \n\nThis work may not be published whether for fee or free without this copyright.\n\n------------------\n\nThe following is a work of fiction and as such all characters mentioned herein are fictional and any resemblance to any persons living, dead or fictional is coincidental. All characters mentioned herein that participate in sexual activities are adults (18 years of age or older).\n\n------------------\n\nDramatis Persona \n\n------------------\n\nRobert -- the protagonist/narrator\n\nEileen -- Robert's girlfriend\n\nStephanie (Steph) -- Eileen's sister\n\nJenny -- Steph's classmate and friend, Chad's girlfriend\n\nJohn -- Steph's classmate and friend, his uncle owns the cottage\n\nChad -- Steph's classmate and friend\n\nSandy -- Steph's classmate and friend and organizer of the weekend, John's girlfriend\n\nHeather -- Steph's classmate and friend\n\nRob -- John's uncle and owner of the cottage\n\nOlivia -- Rob's supermodel hot wife\n\n------------------\n\nThe following is the continuation of the story The Cottage: First Day. If you haven't read it, please do. Otherwise, some of the characters and situations may not completely make sense. This is the tale of the events that unfolded on the second day at the cottage.\n\nThe other two, The Cottage: First Day and The Cottage: Last Day will be published simultaneously so you can read them sequentially. \n\nIf you like these, please rate them and drop a comment.\n\n------------------\n\nWhen I woke up, it was about 8:30 and the house was quiet. I got up quietly and showered and then went out to rustle up some breakfast.\n\nI had a pot of coffee going and was just getting ready to fry up the bacon when Sandy walked in. She was in a t-shirt and nothing else. There was a trail of dried cum running down her legs and it was obvious she had been crying. Her eyes were puffy and her mascara trailed down her cheeks. But most noticeable was the beginning of a nice black eye starting to form around her left eye.\n\nI turned the bacon off and stepped over to the fridge and pulled a bag of peas out of the freezer. Bringing the small bag over to Sandy I applied it to her eye. \n\n\"Do you want to talk about it?\" I said it quietly while inside I was seething with rage. I just wanted to beat the shit out of whoever did this to her.\n\nShe sniffed and shook her head. A moment later she sniffed again and then said, \"John left me.\"\n\nControlling my voice, I asked, \"Any reason why?\"\n\nShe lifted her head and looked at me. \"Because I fucked up yesterday.\"\n\nI raised an eyebrow.\n\nSandy continued, \"We were in the kitchen just having a good time cleaning up dinner and we started playing truth or dare. One thing led to another and Chad got dared to fuck me while I was putting a pot into the dishwasher. And he did. And I didn't say no. \n\n\"Then when we broke up to go to bed, John and I went to the bedroom we had picked out and he was pretty horny. That shades of whatever movie got him pretty worked up and he threw me down and fucked me 'til he came. Then he rolled over and fell asleep. I had to finish myself off.\"\n\n\"Selfish bastard,\" I growled.\n\n\"No, it's my fault I'm not fast enough to keep up with him. Anyway, about 2:30 or so, Jenny came into our room and slid into bed with us and began to suck on John's cock. When she got him hard, she climbed up on him and started to fuck him. After a couple of minutes, she started moaning and said, 'This is so much better than the way you fucked me this afternoon.' I looked at her and said, 'What?'\n\n\"She looked down on me and said, 'Yeah. While Chad was up fucking you in the kitchen, John was downstairs fucking me in the game room. Chad told us all about the dare and how he was supposed to just rub his cock on your pussy and how you pushed him into you and fucked him until he was ready to come. Then you turned around and sucked his cock until you got a mouthful of his seed.' \n\n\"At that John rolled Jenny off him and turned to me. He just glared hate at me until he finally slapped me so hard I saw stars. The next thing I knew, he was telling Jenny to get her shit and he threw his clothes back into his duffle bag and pulled on a pair of shorts and a shirt and stormed off.\n\n\"I put a shirt on and went looking for them. I could hear John yelling at Chad to get his shit packed and that they were leaving. Jenny started crying and asking to go with them and Chad talked to John and the three of them left in John's truck.\"\n\nI sat stunned for a moment absorbing all the details. Finally, I asked, \"When did all this happen?\"\n\n\"They left about 4:30 or 5, I guess. I don't know for sure. I didn't have a watch. I just grabbed a blanket and went to sleep on the couch. I woke up when I smelled the coffee. \n\n\"Can I put this down?\" she asked, shaking the bag of peas. \"It's really cold.\"\n\n\"Yes,\" I replied. \"You just need to put it on for a few minutes at a time. The cold will help keep the swelling down.\"\n\nI took the bag of peas and threw it back into the freezer, then came back and gave her a hug. She hugged me back so hard it made my heart ache.\n\nFinally, I rubbed her head and said, \"Why don't you go get a shower and get into some fresh clothes while I finish getting breakfast?\"\n\nShe nodded and we broke the hug. Go ahead and hate me, but I'm a guy. I thoroughly enjoyed the hug and the flash of her shaved pussy before she pulled the t-shirt down. I also enjoyed patting her on the butt as she left.\n\nEileen and Heather were already sitting at the kitchen table when Sandy arrived back in the kitchen. I thought Eileen's eyes were going to pop out when she saw the bruise on Sandy's face. She gave me a 'we need to talk later' look. Eileen went over to her like a mother hen and Sandy had to tell the tale again. Heather jumped in at points to corroborate. I saw Steph show up just after the story started and I put a finger to my lips to tell her to listen and not ask.\n\nSandy was much better the second time she told the story. Whether she had rehearsed it in the shower or it was from the support of Heather and Eileen, I'll never know. The three girls converged on Sandy and gave the support that only sisters-in-arms can give in a time like this. \n\nI let it go for a while and then interrupted with, \"I'm about to start the eggs. Scrambled, fried or omelets?\"\n\nThree said, \"Scrambled\", Steph said, \"Omelet\". I made the batch of scrambled first then made Steph's omelet. \n\nWe decided to eat in the kitchen. It was pretty quiet until Sandy said sadly, \"I guess we have to leave now that John is gone.\"\n\nEverybody turned to stare at her. \"Oh shit,\" said Steph. \"I never thought of that. Damn it. I was just starting to enjoy myself.\"\n\nThe others nodded and sat with glum faces.\n\n\"Well,\" I said slowly, \"Maybe not. Eileen and I hit it off with Rob and Olivia. I have their number and the keys. They said they didn't trust John to lock everything up. So, after breakfast I'll text them and see if we can stay through Sunday as planned.\"\n\nThere was stunned silence until Heather broke it, asking, \"You can do that?\"\n\n\"All I can do is ask,\" I replied. \"I think there is a good chance they will say that it is ok. Now then, who hasn't cooked or cleaned yet?\"\n\nHeather tentatively put up her hand and then sighed when she saw she was the only one.\n\n\"I guess I'm on cleanup duty,\" she said glumly.\n\nSteph looked at Heather and said, \"I'll help.\"\n\n\"Cheer up,\" I said. \"Cleanup always gets first dibs on any leftovers.\"\n\nI headed out to the deck to text Rob. The first thing I did was thank him for the wonderful time yesterday. Then I sent a couple of the pictures from my phone. Finally I gave a real stripped down version of what happened and asked if it was ok for us to stay even though John had bailed.\n\nAbout 10 minutes later I got a reply. Rob thanked me for the pictures and he gave me the address and password to his private server so I could upload the rest of the pictures. He reiterated that \"Mi casa es su casa\" and we could stay as long as we wanted. He hinted that they might be able to come up on Sunday but it wasn't a sure thing. Lastly there was a close-up picture of Olivia's pussy with a caption of 'Missing you'.\n\nI logged into the server and downloaded the app and installed it. After a little fiddling, I set the app up to send copies of the pictures and the videos to the server.\n\nWhen I went in, there were four expectant faces waiting in the living room. I just looked at them for a moment and then broke up laughing. They glared. I finally got control and read the pertinent points of Rob's texts. The room exploded with cheers.\n\nI concluded with, \"Since we will be here 'til Sunday, carry on with whatever you had in mind for today.\"\n\nThe sudden rush for the deck made it appear that sun worship was the order of the day. I had other ideas and headed for the master bedroom and the video system.\n\nIt took a little bit of fiddling, but the controls were pretty intuitive and it wasn't long before I found where Sandy and John had fucked and he had immediately fallen asleep. Sandy did finish herself off. The video skipped ahead since there was no movement until about 2:40am according to the time stamp when Jenny came into the bedroom. She pulled back the sheets and played with John's cock for a while and then started sucking on him. Sandy woke up and went over and the two of them shared his cock for a while and then Jenny climbed up on top and Sandy sucked on her tits. I wish there had been sound, but it was pretty obvious when Jenny told Sandy about John fucking her earlier. Sandy rolled out of bed and stood waving her arms. John kept fucking Jenny until it was obvious he had finished inside her and rolled her off him. He got out of bed and then he yelled something, grabbed his duffle bag and started to leave with Jenny. Sandy tried to stop him and he hit her. I couldn't tell if it was an open fist or not, but it was really hard. Sandy went down to her knees instantly and the other two left.\n\nI stopped the playback and stared at the frozen screen for a moment. So far, Sandy's story checked out. The times were a little off and some things were out of order but all the pieces were there. Now to check on the other party.\n\nI found the camera that was in Chad and Jenny's bedroom and started it up. Since there hadn't been any motion since they changed for dinner, it was easy to find when they had come back from watching TV. It was readily apparent that Chad was really drunk. Jenny and Heather had to practically carry him into bed. He was out as soon as he hit the bed. Jenny and Heather undressed him rolled him under the covers. Once he was in bed, Jenny sat down on the other side of the bed. I figured that would be it, but Jenny patted the bed next to her and Heather sat down. They started to kiss and Heather leaned back and took off her t-shirt. Jenny began to suck on her tits. It wasn't long before the two of them were in a 69 position on the bed making love while Chad slept oblivious next to them. \n\nTheir oral lovefest went on for quite a while before they came up for air and snuggled and fell asleep. About 2:15am, according to the timestamp, Chad woke up and found the lovebirds. He got out from under the covers and crawled across the bed to Jenny who kissed him and found his cock and began stroking him. He rolled over onto his back and Jenny slid down and began to suck the tip of his cock while she continued stroking him. Heather woke up about then and went around to the other side of the bed and came over to kiss Jenny and the two of them began to alternate sucking on Chad. After a few minutes of this, Heather crawled up and straddled Chad and began to ride his cock. Jenny went up and sat on his face. The two of them played with each other while Chad pleasured them. After a couple of minutes, Jenny rolled off of Chad and exited the bedroom.\n\nI little while later, Heather threw herself backwards and Chad pulled out and sprayed himself all over his stomach. She rubbed his cum in very sensuously and then got up and left. Shortly after that John stormed into the room with Jenny right behind. John was pacing and waving his arms. Chad appeared to be trying to calm him down, but John was not to be calmed. Chad and Jenny stuffed their clothes into their bags and left with John. It was about 3:15am.\n\nAbout 3:20, Heather wandered in and crawled into the empty bed.\n\nSo all in all, it appears that Sandy was telling the truth and that Heather was corroborating it accurately. Well good fucking riddance. John was an asshole.\n\nWith that settled, I grabbed my swimsuit and a towel with the intent to go down and see if that lake was as nice as it looked. I got as far as the door to the deck. I was already pretty hard and a little bit worked up watching last night's antics. But when I saw those four girls out on the deck sunbathing nude, wow, I almost dropped my swimsuit and started wanking off. All four of them were lying on lounge chairs totally nude. Heather and Steph had their hands behind their heads and their legs together, but Eileen and Sandy were apparently trying to suntan their wombs. They both were sitting up with their legs spread wide.\n\nI stepped out onto the deck and after clearing my throat, announced, \"I was going down for a swim. Anyone interested in joining me?\"\n\nEileen lifted her head and shielded her eyes. \"Maybe,\" she said. \"I was actually more interested in seeing where that trail down by the dock goes. If you want to go walk the trail with me, I'll swim with you later when it warms up a little more.\"\n\n\"Sounds like a plan,\" I replied. \"But you better go get some clothes on. And some shoes.\"\n\nShe stood up and threw her t-shirt and shorts on and said, \"Don't go anywhere while I go get some shoes.\"\n\n\"With scenery like this, I'm not going anywhere.\"\n\n\"Dirty old man,\" she hissed at me as she went by.\n\n\"Damn straight,\" I whispered back, slapping her ass to hurry her along. Yep, with scenery like this, I was in no hurry to go anywhere.\n\nAll too soon, she was back and we headed off. As we were going down the stairs, Steph called out, \"Don't do anything I wouldn't do. Or you wouldn't do to me.\" For some reason the other two thought that was uproariously funny.\n\nLeaving the laughter behind us we walked slowly over to the trail that Eileen had spotted yesterday. It turned out to be a mini-nature trail. There were little plaques giving the names of the plants on sticks beneath some of the trees and bushes and there was a multitude of beautiful beds of flowers. All too soon we got to the end, which turned out to be a gazebo that couldn't be seen from the deck. \n\nUnfortunately, it was not in very good shape, so we didn't go in. The first board I stepped on creaked and made snapping sounds, so we turned around and headed back. Eileen wondered aloud if Olivia would mind if she picked a few flowers to remember this weekend by. I reached down and picked a couple of different ones and presented them to her with a flourish, \"For my lady fair.\"\n\nEileen giggled but gave me a hug and a quick peck on the cheek and said, \"Thank you noble sir.\"\n\nA few moments later, we were back on the beach. I picked up my stuff and we wandered out to a spot right in front of the deck on the edge of the beach. I didn't have a destination, but apparently Eileen did, because that was where she headed. I spread our towels out and asked, \"Ready to go swimming?\"\n\nEileen nodded and slipped her shorts off and pulled off her t-shirt. I was shocked because she had a bikini on. That wasn't there when we were on the deck. She must have changed when she went to get her shoes.\n\nTogether we ran full tilt at the water until we were knee deep. At that point, we shrieked, turned and ran back to the safety of the sand. That water was fucking cold. Looking up I could see three heads over the railing of the deck. I am pretty sure they were laughing at us. They probably tried the water yesterday and knew what we just found out. Little bitches. They could have warned us. \n\n\"Shall we just go get some sun on that nice warm sand?\" Eileen asked through her chattering teeth.\n\nI nodded and we slowly walked back up the beach, enjoying every warm step.\n\nThe towels were nice and warm when we lay down on them. I don't think I fell asleep, but I was definitely awake when Eileen's hand ran down my chest and into my swimsuit. The cold water had taken the edge off my hardon but her hand quickly brought me back to life. I reached down and lifted my hips as I slid the offending garment down and kicked it off. \n\nAs Eileen was slowly using both hands to stroke me, I reached over and undid the bow that was holding the two halves of her bikini top together. She shrugged her shoulders and it fell off. Pulling me to her, I started to kiss those delicious nipples. She giggled and continued to stroke me one handed.\n\nAs I was pulling her bikini bottom off, I looked up and saw the three heads looking down on us. Determined to give them a good show, I reached between Eileen's thighs and began to slowly stroke her with my fingers.\n\n\"Mmmmm. That's so nice, but I want something special today,\" she said.\n\n\"Special?\"\n\n\"Ummmhumm. I want you to imagine I'm Olivia and I want you to take me like you took her yesterday.\"\n\nAs she said this, Eileen rolled over and got down on all fours. I think I can count on the number of times I've fucked Eileen doggy style on one hand. So my hardon was primed and ready to go. I sat up and buried my face in her pussy licking her wetness and inhaling the intoxicating natural perfume. Eau de Pussy Eileen. If they bottled it, it would sell out.\n\n\"Hey,\" she said. \"Treat me like Olivia.\"\n\n\"I am,\" I said. \"Rob ate her and then fucked her while he was getting her ass ready for my cock.\"\n\n\"Oh.\" \n\nAs I was eating her, I slid my thumb into her pussy and got it nice and wet, then rubbed it over her tiny brown crinkle. She inhaled sharply, and then relaxed. I spotted the bottle of suntan lotion in her beach bag and popped it open, spreading a goodly amount on her ass crack. I used my thumb to push it into her tight hole and she inhaled again. \n\n\"I'm not hurting you?\" I asked.\n\n\"No. Well, yes, sort of. I don't know. It mostly just feels funny; tingly and kind of full.\"\n\nI kept up thumb-fucking her ass for a couple minutes, then brought my cock up and started wiping it on her pussy lips. When she started moaning, I stopped and positioned myself at her love canal.\n\n\"Mmmmm,\" she purred, \"I thought you were going to fuck my ass?\"\n\n\"I will,\" I said, \"But you wanted to be Oliva today and Rob fucked her pussy to warm her up. So sit back and relax.\"\n\nWith that I began to slowly ease myself in to Eileen. She moaned and her ass muscles began to squeeze on my thumb. I continued to fuck in and out of both holes slowly, and then switched my thumb out for my first two fingers. I began putting my fingers into a 'V for Victory' sign as I eased them out, further stretching her hole. \n\nWhen I started to feel Eileen was just about to begin an orgasm, I pulled my dick and my fingers all the way out and placed the head of my cock at her open back door before she could close up. Pushing gently I could feel myself sliding into her. \n\nHearing something, I glanced behind me and saw the three heads of our peanut gallery standing at the railing and staring at us. The gentle breeze blew most of their words away but I did hear, \"Oh my god, he's fucking her in the butt,\", \"Does she like that?\", \"Do you think he would do that to me?\"\n\nConcentrating on Eileen, I could feel her hand had snuck up and was rubbing her pussy. It didn't take long and she had regained the ground she lost when I switched holes. \n\n\"Oh my god, your cock feels so big in my butt. It feels like the biggest shit I've ever taken. Please don't stop. Please. Are you all the way in? I feel like I'm going to explode. Please just a little more. I'm almost there. Ohh, ohhhh, ohhhhh ohhhhhhhh.\"",
        "Her orgasm started then and it was like the waves on a beach before a tsunami. I felt her ass muscles start to pulse gently, then the main wave hit the beach and they clamped down like a velvet vise. Eileen began to scream and I could hear the peanut gallery again. Somebody did their best impression yelling, \"I want what she's having,\" followed by a lot of giggling.\n\nJust when her ass began to release my cock, I started to come. I took advantage of the new freedom and slammed all the way into her and began to paint her insides with my baby batter. The unexpectedness of the sudden attack caused her to shriek and her butt clamped down again as a second even bigger orgasm took hold. She began shaking and her legs gave out and we both slid to the towel. I had to go with her or risk having my cock broken off.\n\nWhen we hit the towel, her hips began to buck up and down fucking me as I continued to shoot inside her. The added lubrication made her insides slipperier and sloppier than before and I started to slide in and out of her as she fucked her hips back and forth on me. Then her ass gripped my cock again and she announced, \"I'm coming again. Oh god, oh god, OH GOD!\"\n\nFinally, she subsided like the aftershocks from a major quake. I slipped my softening dick out of her and then collapsed on the towel next to her. She turned to me and pulled my head in for a kiss that nearly turned me inside out. When she finished, I was completely drained. \n\nStaring at her from such close range, I was totally in love. She smiled and then said in totally wicked way, \"I had fun. Did you enjoy yourself?\"\n\nI just stared at her for a minute and then pulled her in for a kiss. \"Totally drained,\" I murmured.\n\n\"Good,\" she said. \"Can we go shower? I want to get all this suntan oil off my ass. I feel like a piece of fish that's ready to go in the pan.\"\n\nI nodded but all I really wanted to do was go to sleep. As I rolled over, I could see the peanut gallery clapping. I gave them a thumbs up and stood up and turned back to help Eileen up. We gathered our things and headed for the shower on the deck.\n\nI was impressed. For a deck shower it was pretty deluxe. There was hot and cold water and a nice spongy mat to stand on. It even had a wall dispenser with shampoo and body wash. We took our time and soaped each other up and rinsed off. When we finally got out of the shower, I looked at my watch and it was almost 2 in the afternoon. \n\n\"We need to get some lunch going. How about if you get a couple of the girls to help get hamburger makings going. I'll go down and get the grill ready and you can bring a plate of those burgers down.\"\n\nEileen nodded and started to put her t-shirt on.\n\n\"I like my serving wenches topless,\" I said with a grin.\n\n\"Serving wenches????\" she repeated sputtering. \"And I like my hot dogs nice and firm and plum and juicy\" pointedly looking at my poor tired out dick.\n\nI pulled up my swimsuit and heading for the stairs. Just before I got there, I looked over through the big window and waved at the girls, who were on the couch eating chips. I could hear Eileen stepping inside calling out, \"Who wants lunch?\" All of them jumped up and ran to her.\n\nChuckling, I went down the stairs and over to the grill.\n\nA few minutes later, just as the grill was just getting hot, Eileen and Sandy delivered the goods. Eileen had two paper plates loaded with burgers and a clean serving plate for the finished product. She also pulled out a shaker of seasoned salt. Sandy was right behind her with a bag of hamburger buns and a package of cheese slices. Much to my surprise and delight, they were both topless and their tits jiggled oh-so nicely as they brought their bounty.\n\n\"Is there anything else, milord?\" Eileen asked with a curtsey, much to Sandy's amusement.\n\n\"I think that dost suffice, milady,\" I returned. \"But why bringeth the buns down here?\"\n\n\"My Dad used to toast the hamburger buns,\" Sandy said. \"That's why I brought them down. I thought you might want them toasted.\"\n\n\"Well,\" I said. \"That makes you the hamburger bun toasting expert around here. Will you stay and help toast buns while I focus on burgers?\"\n\n\"Really?\" she said jumping up and down a little. That was very distracting, in a really nice way.\n\n\"Absolutely,\" I said. \"Let me get these other two burners started and you can have that side of the grill.\"\n\nTurning to the grill, I started the other burners and then turned back in time to stare at Eileen's ass in her bikini bottom as she walked away.\n\nWhile chatting with Sandy, I found out that she was the youngest of four in her family. She had three older brothers and that her father never let the kids near the grill which is why it was such a treat for her to help out.\n\nAs the last of the buns and burgers were done and moved off the grill, I turned the burners off and turned to give Sandy a 'high five' for a good job when she stunned me with, \"Do you think I'm pretty?\"\n\nChoking a little, I sputtered, \"Are you serious?\"\n\nShe nodded and then looked down at the ground. I reached over and lifted her head by her chin and turned it to face me. As I stared at her, I could see her bluer than blue eyes close up. I hadn't even noticed the color before. I was stalling trying to think of something.\n\nFinally, I sighed and said, \"Sandy, you are one of the most beautiful young women I know. I am not happy about what John did to your eye. It is like painting graffiti on the Venus di Milo. But to answer your question, you are very beautiful.\"\n\nIf I was shocked before, her next words stunned me. \"Would you like to fuck me?\"\n\nShe must have sensed the surprise or seen it in my eyes. She stepped back and tears started to well up in her eyes.\n\nI reached out and pulled her into a big bear hug. \"Oh, baby girl,\" I said. \"You may have noticed my love life is a mess right now. But the simple answer to your question is no.\"\n\nShe started to pull away from me and I held her tight. \"The longer answer is that I do not want to just fuck you. I want to make love to you. You can probably feel the reaction you are causing just having me hold you.\"\n\nShe nodded and relaxed into me as I continued. \"From what I could see, John just fucked you when he felt like it and used you as a cum dumpster. That is not what I am talking about. Making love is a much gentler process of giving and receiving pleasure from each other. It is about respecting each other and giving. \n\n\"Now with all that said, I am in a relationship with Eileen. This weekend has opened up some doors and I need to find out where she and I are as a couple before I could even think about making love to you. But if Eileen says yes, then no, I don't want to fuck you, I would love to make love to you.\"\n\nSandy nodded and squeezed me tight before letting me go. \n\n\"The burgers are getting cold,\" she said as she picked up the plate with the toasted buns and headed for the house. Watching her ass in that bikini bottom wiggle towards the house, I looked down and told my dick, \"You're right. We should have nailed her here and now.\"\n\nI grabbed the platter with the burgers and followed.\n\nWhen I got into the kitchen, the rest of the crew was topless too. They had laid out all the fixings on the center island for a burger buffet. There was lettuce, and sliced onions, chopped onions, saut\u00e9ed onions, some sliced tomatoes, mayo, ketchup and mustard and pickles. It was awesome. I put the plate of burgers down and said, \"Dig in.\"\n\nA little while later, we were all sitting around the dining room table feeding our faces. The girls did an excellent job with the getting all the fixings together and they had bought some really good hamburger meat because these were worthy of the finest gourmet burger joint.\n\nAfter we were all done, Steph and Heather jumped up and announced that they were on cleanup duty, \"So we don't have to do it tonight,\" Steph added.\n\n\"What is tonight?\" I asked. \n\nSandy turned to me and said, \"Spaghetti.\"\n\n\"What is so bad about spaghetti?\"\n\nSandy looked at me with horror, \"From scratch?\"\n\n\"Is there any other way?\" I replied puzzled.\n\n\"Do you know how many pots and pans that will take?\" she squeaked.\n\n\"Yes. I do it all the time. In fact, I used to host a make your own pasta party once a month or so during school. It's not bad if you clean while you cook. You'll see.\"\n\n\"I guess\" Sandy said dubiously and then brightened, \"Wasn't there something you were going to ask Eileen?\"\n\n\"I was, but I am not sure you should be listening in.\"\n\n\"I'm not going anywhere,\" Sandy said defiantly.\n\n\"Ask me what?\" Eileen said, finally entering into the conversation.\n\nStarting off slowly to gather my thoughts, I began, \"Sandy and I were talking while grilling. Apparently she has not had the best love life with John.\"\n\n\"Well, duh,\" Eileen responded. \"He dumped her for her friend in the middle of the night after clubbing her upside the head. Not the best experience is an understatement.\"\n\n\"No,\" I said. \"That was just the end of the relationship. It was way worse than that. When John felt horny, he'd just lay her down and stuff himself into her and push until he came and then it was over. Sandy has been fucked, but he never made love to her. It was all his way or the highway.\n\n\"I told Sandy that it should not be that way. That making love is all about giving not taking. She asked if I would make love to her.\"\n\nEileen just gave me one of those looks, then spoke, \"And?\"\n\n\"I said that I am in a relationship with you and I would only do it with your consent.\"\n\nEileen looked at me, then Sandy, then me, then Sandy. \"Was John really that bad?\"\n\nSandy looked like she was going to burst into tears. She just nodded.\n\nEileen just got up and went over to Sandy and pulled her into her arms. That was apparently all it took to get the waterworks going for both of them. Now I felt really bad for even broaching the topic. As I said, women's tears are my kryptonite.\n\nAfter a few minutes, Eileen let Sandy go and said, \"C'mon.\" \n\nAs they exited the dining room, Eileen looked back at me and said, \"Coming?\"\n\nI got up and followed the two of them like a puppy.\n\nWhen we got to the master bedroom, I closed and locked the door. No silent visitors this time.\n\nI hurried over to Eileen and Sandy who were standing next to the bed. Eileen turned to her and said, \"One of the fun parts of making love is taking your time and getting to know the other person.\"\n\nShe turned to me and said, \"She is all yours. But if you don't do a good job, you will hear from my foot up your ass.\"\n\n\"Yes, ma'am,\" I said seriously.\n\nAs Eileen stepped back to go sit in the recliner, I took Sandy in my arms and kissed her forehead. I kissed my way down until I kissed her lips, and then kept going. I unsnapped her shorts and slid them down taking care to run my hands gently along her legs and supporting her as she lifted one leg then the next. I kissed my way back up her legs and I could feel her shivering. She spread her thighs as I got to her womanhood. I kissed her just above her thong and slid my fingers inside the fabric running over her hips and then slid them down. I kissed my way down her legs and then back up to her face. On my way up, I shed my shorts and we were both naked.\n\nAfter a quick kiss on her so very soft lips, I pulled back the duvet and top sheet and pushed her gently. She took the hint and lay back on the bed, spreading her legs. I grabbed her ankles and pulled her to the center of the bed. Sliding across the sheet, she gasped, \"Oh my god these sheets are awesome.\" \n\nI put a finger to my lips and shushed her.\n\nI climbed up on the bed and she again spread her legs. I ignored that and grabbing a foot, I began to massage it. Sandy squirmed and I had to shush her again when she tried to tell me that it tickled. I laid her first foot down and picked up the other and began to massage it. This time she moaned a little as I pressed my thumbs into the center of her sole and made small circles. I put that foot down and picked up the first and massaged the top of her foot and moved up her leg a little. I then repeated it on the other leg. I alternated legs, each time going further up her leg. By the time I reached her upper thigh, I could feel her trembling and smell her arousal.\n\nWhile moving up her body, I deliberately avoided her breasts and her pussy and I could tell it was amping up her tension. After I worked my way down her arms, I again grabbed her ankles and gently flipped her over onto her stomach. Before I started on her legs again, I waved Eileen over and motioned for her to get naked and massage Sandy's neck and shoulders. Together we worked all of Sandy's back and legs until Eileen stopped and looked at me. She put her hands together against her cheek in a 'baby is asleep' pose. I nodded and gathering the covers we gently covered her up and then we each lay down on top and snuggled up to our sleeping beauty.\n\nI'm not sure how long it took me to fall asleep, but the next thing I saw when I opened my eyes were Sandy's bluer than blue eyes staring at me.\n\n\"Morning sleepy head,\" she said gently. \n\n\"Afternoon,\" I said.\n\nShe turned and leaned on an elbow. The motion popped her breasts out from under the covers and my eyes were drawn to them instantly. She giggled and said, \"You like what you see?\"\n\nI struggled but eventually did lift my eyes to meet hers again, \"Yes I do.\"\n\n\"So when do we make love?\" she asked.\n\n\"We started when you kissed me a couple hours ago.\"\n\nHer face crinkled up into a puzzled look, so I continued, \"Making love is not just about rubbing naughty bits together. Making love can very often not even result in anyone having an orgasm. It is about doing what feels right to let someone know that they are loved. In this case, Eileen and I loved on you by giving you a massage. You needed to know that you were safe and loved. Because you felt safe, you felt safe enough to fall asleep. And so we snuggled with you to let you know that we love you.\"\n\nShe was quiet for a long time, or at least it seemed like it. Then she reached out and caressed my face before turning to Eileen. \"Can I make him happy?\" she asked.\n\nEileen nodded and Sandy slithered out of the sheets and down my body. I looked at Eileen and she shrugged. The next thing I knew, I felt Sandys tongue on my cock. I moaned involuntarily as she wrapped her lips around the head and slipped me into her soft wet mouth. I rolled onto my back to make it easier for her. She started to hum as she slid more and more of my cock into her mouth each time. Eventually I felt the back of her mouth and figured that was it, but she pushed down and I slid into her throat. That definitely pulled a groan from the depths of my being.\n\nEileen had moved until she was right next to Sandy and as I was being swallowed alive, she asked, \"How do you do that? I've tried, but I want to gag as soon as he is at the back of my mouth.\"\n\nSandy pulled off me and gasped for air before replying, \"John gave me a book on how to give blowjobs for my 18th birthday. He made me practice on him until I could take his cock without choking. I wasn't sure I could do it with Robert's cock because it is way bigger than John's. Here try it.\"\n\nSandy pointed my cock at Eileen and she put her hand around me. \n\n\"Take a deep breath first and then slide him into your mouth.\"\n\nEileen took a deep breath and then slid me in.\n\n\"Don't try to jam it all the way in just slide it back until you feel him press on the back of your tongue. Then try to swallow it and push.\"\n\nAs Sandy was talking, Eileen was following instructions. When I hit the back of her mouth, she took another deep breath and pushed and swallowed. I slid past her tongue to both of our surprise. She pulled me out and started choking. \n\n\"Did you?\" Sandy asked.\n\nEileen nodded through her tears and I added, \"She sure did. That was great.\"\n\nEileen was still holding my cock in a death grip when she asked Sandy, \"Have you ever been on top?\"\n\n\"With a boy?\"\n\n\"Yes.\"\n\nSandy shook her head no. \"I've only had John and he was always on top.\"\n\n\"Then you are in for a treat. C'mon slide up here and put a leg on either side of Robert's hips. Now just lean forward a little.\"\n\nSandy gave out a squeak when Eileen started rubbing my cock between Sandy's very wet pussy lips. She did this a couple of times, getting a moan or two out of me too. \n\n\"That's something that guys really like, too,\" Eileen giggled. \n\nEileen then positioned me just inside Sandy's hot little cunt and pushed her down on me. Oh my god, she was tight. I felt like I was fighting for every inch as she sank slowly down on top of me. Finally I was all the way in and knocking on her cervix. That was when Sandy exhaled in a cross between a whistle and a scream. \n\nI had started with my hands on her thighs helping to press her down and then I moved my hands up and caressed her boobs and ran my thumbs over her nipples. I think she liked that.\n\nAfter just savoring each other for a moment, Sandy began to rock her hips and I began to try to pump my cock into her. Eventually we found a rhythm we began to fuck in earnest. \n\n\"Oh god, oh god, oh god,\" Sandy kept repeating as we humped each other, until she arched her back and then fell down on top of me kissing me and announcing unnecessarily that, \"I am coming, oh my god, I'm coming, I'mmm ccoooommmminnnng.\"\n\nI just held her as tremors washed over her and she just lay in my arms. After a moment or two, she opened her eyes and lifted her head and kissed me. It was such a sweet kiss. \n\nSandy rolled off of me and sat up and kissed Eileen. It was a much longer deeper and wetter kiss with a lot of tongue. I was a little jealous and not a little put off. I hadn't gotten my rocks off. So I cleared my throat.\n\nEileen came over and slid my cock into her mouth. She didn't try to take it all, she just swirled her tongue over all of it and then pulled me out and began licking it like you would the spoon you used to make the cake batter. Sandy came over and helped her. While the two were trading my cock back and forth, Eileen whispered, \"Cocks really do taste better with pussy on them.\" After another minute, she motioned Sandy back and climbed on top of me and sank her pussy down on my cock. At last. \n\nI began to hump her ferociously and she humped me back just as hard. It didn't take long and we were both breathing hard and moaning. \"Oh fuck, that feels so good,\" Eileen cried out as she ground her clit into my pubic bone. \n\n\"Oh, yeah,\" was all I could muster as I could feel the electric tingle start in my balls announcing my impending orgasm. Two more thrusts and I began to paint her insides with my cum. As she felt my cock begin to spurt she threw herself off me and grabbed my cock by the base and squeezed. That shocked me for a moment and I stopped coming. She slid her mouth over my cock and pressed down and just as I slid into her throat my orgasm picked back up and I began to shoot my cum directly down her throat. I've only done that a few times with Eileen over the years and that first time I felt like my head was exploding with a pleasure grenade going off between my ears. I'm pretty sure I passed out. \n\nWhen I became aware of my surroundings again, the lights were off and I was the meat in a love sandwich. I had Eileen on my left and Sandy on my right snuggling in. As distracting as that was, I was asleep again in no time.\n\nWaking up, I glanced at the alarm clock. It was 5:45. I groaned. \"What's the matter,\" Eileen groaned back sleepily.\n\n\"We need to get up and get showered. It's time to make dinner.\" I said.\n\n\"Should we wake Sandy?\"\n\nI nodded and leaned over and kissed Sandy's forehead gently a couple of times. Finally, I was rewarded with those beautiful blue eyes.\n\n\"Is it morning,\" she asked, rubbing the sleep from her eyes.",
        "\"No, but it is about supper time,\" Eileen said gently. \"Mr. Chef here is going to teach us how to make spaghetti.\"\n\n\"But I am not going to do anything without a quick shower with my favoritest sex toys,\" I said. \n\nTwo minutes later we were enjoying Rob and Olivia's amazing shower and getting squeaky clean while doing dirty things to each other. \n\nWhen we got to the kitchen the other two were nowhere to be found. So we pitched in and got things going. I browned the hamburger while the girls got the salad ready. I had already put the biggest pot on to boil and by the time the meat was done the water was boiling nicely. I measured the pasta using the hole in the pasta spork, something that neither girl had known about. Then I threw it in the water to cook. Next I poured the tomato paste and some water into the meat as I stirred it. I drained the canned tomatoes, chopped them up and threw them into the pan with the meat to cook. I chopped some garlic and some other spices and sprinkled them into the sauce. Putting a lid on the sauce, I turned and saw the girls staring at me. \n\n\"Where did you learn to cook like that?\" Steph finally asked.\n\n\"Last year at school,\" I said. \"I spent the last half of the year in an apartment with another guy and his father ran a restaurant. I picked up some of his bad habits, I guess.\"\n\n\"Wow,\" said Heather. \"You were so smooth getting everything together. It was awesome.\"\n\n\"Thank you,\" I said blushing. \"Now if you guys want to set the table, we'll be ready in about 20 more minutes.\"\n\nThey scurried off and I pulled out the loaf of French bread I had spotted earlier. Melting some butter and liberally dousing it with garlic and some salt, I brushed it on the bread and tossed it in the oven to broil. \n\nBy the time the garlic bread came out, everything else was ready and I dished it up and the girls took it all out to the dining room. It was dinner time and my stomach was growling.\n\nAs I brought the pot of sauce in, the girls were sitting around the table topless. \"I like the views,\" I said putting the pot down on a trivet. \n\nHeather giggled and said, \"It's not for you. Sandy was worried about getting spaghetti sauce on her shirt, so Steph said to go naked, your tits are wash and wear.\"\n\nJust the way Heather said it, I could hear Steph's voice in my head and I burst out laughing.\n\nA few minutes later, there wasn't a lot of talking around the table as mouths were mostly used for shoveling more food into them. Finally though, everyone was stuffed. \n\nI leaned back and announced, \"I'm going to let you guys figure out who is going to help with the dishes, while I go clean up the rest of the pots and the stove.\"\n\nAs I got up to leave, I could see a game of rock, paper, and scissors starting.\n\nDespite the girl's fears, the pots were pretty easy to clean up and everything was in the dishwasher in no time. I was just rinsing my hands when I felt somebody snuggle up to my back. I dried my hands and reached back to find bare skin. Hmmm. This was interesting. As I slid my hands lower, all I could feel was skin. This was now very interesting. Without turning, I asked, \"So what do I owe this honor to?\"\n\nEileen's voice replied, \"I just thought you might want some dessert.\"\n\nI hadn't thought about dessert, but she was right. I did want some and some more and some more.\n\nIt was much later when I helped Eileen down off the center island we went out to the dining room to retrieve her clothes. After she slithered into her shorts and t-shirt she came over and licked my face.\n\n\"Even dirty old man faces taste better with pussy on them,\" she murmured. \n\n\"Damn straight,\" I replied before kissing her.\n\nWe found the girls in the media room. They had found a schmaltzy Hallmark rom-com. Five minutes in, I wanted to just scream at the dickhead 'hero' to 'just fuck her already'. I got up to leave. Eileen came with me.\n\n\"You don't have to,\" I said. \"My teeth ache that movie was so sweet.\"\n\nShe giggled, \"It only gets worse. I've seen it a couple times.\"\n\nI shuddered. \n\n\"Should we go out on the deck and watch some stars?\" I asked.\n\n\"MmmHmm,\" was the reply from the lump snuggled under my arm.\n\nBest laid plans. When we got out on the deck, clouds had come up and we couldn't see the stars. Bummer. We sat in one of the loungers anyway. I felt good to have Eileen snuggle with me. \n\nJust before I contentedly fell asleep, I heard Eileen's soft voice ask, \"Do you love me?\"\n\nIt was like that cyborg movie, half a dozen cheap responses scrolled through my brain. Finally, I said, \"I think so.\"\n\nI felt Eileen rise up. \"You THINK so? What kind of answer is that?\"\n\n\"An honest one.\"\n\nWith nothing more coming from her direction, I tried to continue, \"Before this weekend, I would have probably answered automatically with, 'Of course I love you baby'. But a lot has happened and a lot of what I thought was love has been turned upside down.\"\n\n\"Keep digging. The hole is only getting deeper.\"\n\nNo pressure, right? \"Ok. Before this weekend, I thought love and sex were inextricable intertwined. I love you therefore I make love to you. I don't love them therefore I don't fuck them. I know we both agreed that what happened while we were away at college stayed at college. But I have to be honest, I wasn't always faithful to you.\"\n\n\"I'm listening.\"\n\n\"You remember freshman year, I had a roommate for the first few months?\"\n\n\"Larry or something?\"\n\n\"Yes, Larry. He had a girlfriend, Janie, I called her 'Crazy' Janie. She would come over and the two of them would fuck like rabbits. She not only didn't care that I was in the room, she would make Larry turn the lights on. In fact, I almost got the feeling she wanted me to join in.\n\n\"Well, Larry left suddenly and it was only later that I found out that his father committed suicide and he had to drop out of school. Anyway, one night about a week after Larry had left, I felt somebody crawl into bed with me and when I turned, it was Janie. Larry had given Janie a key and she came over and crawled into my bed with me, naked. Before I fully realized what was happening, she had ducked under the covers, pulled my boxers down and started sucking on my dick. Since all I'd had were a few dates with Rosy Palm and her 5 sisters, I blew my load in her mouth before I knew it. She came up licking her lips and kissed me as she straddled me. 'Now that we have the fast one out of the way,' she said, 'I'm gonna ride for the prize.'\"\n\n\"She said that?\"\n\n\"Or words to that effect. You kind of don't forget that sort of thing. Anyway she rode me like a cowgirl until I finally came inside her. When she was done a little bit later, she lay down beside me and we talked. She said that she wasn't interested in love. She just wanted a big hard dick once in a while to scratch her itch. I tried to tell her that I had a girlfriend. She made a big deal of looking around the room and told me that she didn't see a girlfriend. Then she bent down and sucked me hard again and climbed back on until I came a third time. By then I had lost track of how many times she had come.\n\n\"It became a random irregular thing. She would come over and we would fuck. She seemed to know a lot of positions and we would fuck until she was satisfied or I couldn't get it back up or both. For her, it wasn't about love. She just needed a dick to get her off.\n\n\"About a week before school ended, she came over and we sucked and fucked. She had been teaching me how to eat pussy. When I woke up in the morning, she was gone. That was not always unusual. This time though there was a note on the desk that said she was graduating from the nursing college she went to in a few days and she would never see me again. The key was taped to the note.\"\n\nEileen was silent for a moment, then said, \"So that was why you were such a better lover that summer?\"\n\n\"Probably.\"\n\n\"What about last year?\"\n\n\"Last year was different. You know I moved into a college apartment with two other guys. We each had our own bedrooms, and it was hard when I would try to sleep and have to listen when one or both were banging their girlfriends. I dated Rosie a lot.\"\n\nEileen giggled, apparently at the thought of that.\n\nI continued, \"One of my roommates, Steve invited me to a party thrown by the Chemistry and Chemical Engineering fraternity. Actually, I don't know if fraternity is the right word, because it was coed. Regardless. He was a member and they were short cash to buy a keg so there was a $10 cover to help raise money. So I said I would go.\n\n\"I was talking with a small group of people and made one of my typical nerd movie quote remarks. They all laughed, but a kind of shy girl on the end replied with the next line. I excused myself to go get a beer and when I came back I made sure to position myself next to her. We started chatting and we both found out we hated beer. So we left to go get some coffee. One thing led to another and we ended up back at the apartment. Once we were alone she looked me straight in the eyes and asked if I wanted to fuck her. I blinked and then said, 'Yes'. \n\n\"She said, 'Good, because I'm horny as hell and from the tent in your pants, you look like you are packing what I need.'\n\n\"Her name was Mellissa but for some reason she went by Marne. We went back to my room and I had barely shut and locked the bedroom door by the time she was on the bed naked. I joined her and we fucked. In between rounds, she told me she didn't want me to think this was anything serious. She had a girlfriend, but every so often she felt the need for a real dick instead of a plastic one and she hoped I would fulfil that need. I said I would.\n\n\"We would meet up about once a month and go back to my room and fuck. She taught me about the spots beneath your ears and inside your elbows and a couple of other places that taste so good and make you tingle. She even invited her girlfriend over to watch a couple of times, which kind of creeped me out, but really turned me on at the same time.\"\n\nEileen just looked at me for a long time and then finally said, \"So you found some, what was the phrase you used about Sandy was? Oh, yeah, cum dumpsters?\"\n\nI hung my head down and nodded. \n\nShe leaned in and kissed me, then whispered, \"All this sex talk has got me horny. Let's go to bed and make me your cum dumpster.\"\n\nIt wasn't what I was expecting, but I'd take it.\n\nAs we were untangling ourselves and standing up, there was a flash and loud boom. We both turned in time to see another bolt of lightning streak across the sky. That motivated us to get inside in a hurry.\n\nLaughing, we wrapped arms around each other's waist and headed for the bedroom. \n\nJust as we got into bed, there was a flash and then a loud boom that shook the house and the lights flickered once and went out. Seconds later the bedroom door was thrown open and we were tackled by a flying body jumping into bed with us. In the dark, we couldn't tell who it was just that she (it had to be a she) grabbed me in a death match bear hug and buried her face into my chest.\n\n\"Shhhh. It's going to be ok,\" I said trying to comfort whoever it was trying to squeeze me to death.\n\nEileen reached out to lightly touch the intruder and then said, \"Heather, is that you?\"\n\nThe bundle of crying shaking girl attached to me nodded. Having an identity now I gently asked, \"Heather, what is the matter?\"\n\nJust then, another flash and another loud boom. She shrieked and it was obvious what the issue was.\n\n\"It's ok. It's just thunder and lightning,\" I said stroking her hair. \"You are safe. I'm going to get a flashlight out of my bag and go turn the backup generator on so we have power. OK?\"\n\nI got a very brief nod. So I said, \"You are going to have to let go, so I can get up. Eileen is right here and she will hold you. OK?\"\n\nAnother nod and the arms let go just in time for another flash and boom. In the flash I could see Heather turn and bury herself into Eileen's arms. I got out of bed and fumbled for my suitcase. Opening it up I found the flashlight and clicked it on. When you have a POS car you learn to have plenty of flashlights.\n\nI went back to the bed and found Eileen rocking Heather against her chest. Heather had her arms wrapped around Eileen and her eyes were as big as dinner plates.\n\n\"You guys are ok. I'm going to go get the generator going. I'll be back in a minute or two,\" I tried sound strong and confident for them even though I just wanted to bury myself into Eileen's chest right next to Heather.\n\nEileen nodded and then said, \"Heather would like you to leave the flashlight.\"\n\nI thought about it for an eternity and the handed the flashlight to Eileen. Rob had said there were some battery-backed up lights in the garage. I hoped the hell he was right.\n\nAs I approached the bedroom door, I could see a dim light in the hall and some moving lights at the other end of the house. The dim light came from a lighting panel in the ceiling of the living room and I couldn't tell what the moving lights were, so I headed down to see what they were.\n\nSandy and Steph came out of Sandy's room with their cell phones lit up. 'Flashlight mode,' I thought to myself. 'Duh. I should have thought of that.'\n\nAs they bathed me I the light from their phones I realized I was standing there naked with my erection leading the way. \n\n\"What's up?\" Steph asked, giggled and then immediately continued. \"Never mind, I can see what's up.\"\n\nSandy stepped up to me and grabbing my hardon, asked innocently, \"Were you coming down looking for some loving?\"\n\n\"No,\" I replied. \"I saw the lights and decided to check it out. I was on my way to get the generator running so we'd have power again.\"\n\nBy this time Steph had knelt down in front of me and was wrapping her lips around my love muscle. I shook my head and said, \"Thanks girls. I would just love to stay and enjoy the two of you, but I need to go get some power on.\"\n\nSandy nodded and removed her hand, but Steph took advantage and buried my cock into her throat. She pushed and pulled it in and out of the last couple of inches going back and forth over the back of her tongue. I groaned. I think I heard Sandy's cell phone click a few times but I couldn't be sure. In any case, I reached down and pulled her Steph. I gave her a big not like kissing your girlfriend's sister kiss and repeated, \"Thanks. But I need to go get some power on around here.\"\n\nI retreated as fast as I could in the dim light. I think I deserved the Nobel Prize for Temptation Avoidance.\n\nWhen I got to the door for the garage, I opened it and there were lights on in the garage as well. I quickly walked to the far wall. There was a light over the bench casting plenty of light to see what needed to be done. I opened the junction box and pressed the green button. I was rewarded with hearing a purring hum through the wall. The light above the junction box lit up and then began to glow brighter. When it was steady, I removed my finger from the switch and it stayed on. A second later I heard a snap and I could see a light on through the garage door. I closed the junction box and walked back into the house. I could see the hallway light was on. Mission Accomplished!\n\nI didn't see the two girls, so I decided not to open that can of worms and headed for the bedroom.\n\nHeather and Eileen were where I had left them. Eileen was just saying to Heather, \"Better now?\" I could see Heather nodding. \n\nIn the light, I could see Heather was wearing a low cut blue silky nightgown with lace around the bodice and spaghetti straps. It suited her. Eileen of course was as naked as I was. I closed and locked the door and moved over to the bed.\n\nScooting into bed I wrapped my arms around both girls and hugged. Eileen shifted and somehow we all ended up flat on the bed with Eileen and I holding Heather between us. \"Are you feeling better now?\" I said redundantly. \n\nHeather nodded and then said, \"I'm sorry to disturb you guys. I freaked out and I didn't know what else to do.\"\n\n\"It's ok,\" Eileen and I said simultaneously.\n\n\"No, it's not,\" Heather said. \"I should be better. It's all because our house was hit by lightning when I was seven and it burned to the ground. My little brother and I barely got out and Mom and Dad got burned trying to get to us. So I panic when there is a loud thunder storm like we had a little while ago.\"\n\nThere was silence after Heather spoke. I stroked her head to fill the silence. Finally she looked over at Eileen and then over at me and she blushed. \"You guys were getting ready to fu--, um, make love when I came crashing in on you. Oh my god, I am so sorry. \"\n\nAs the tears swelled up in her eyes and began to roll down her cheeks, Eileen lifted up on her elbow and said, \"It's ok. You needed us more than we needed be together. You can stay as long as you need to.\"\n\n\"Are you sure?\" she said. \"I am still a little freaked out.\"\n\nAs if to underscore that statement, another flash and boom of lightning and thunder punctuated the night. Heather squeaked and buried her head on my chest. Eileen rolled in to hold her and then said to me, \"Oh my god. Feel her heartbeat, it is just racing.\"\n\nI started to try to find a spot but Heather rolled back and took my hand and placed it between her breasts. Her heart felt like a rock drummer on meth. I slid my other arm under her and reluctantly moved my hand from her breasts to wrap around her and held her to me. Eileen wrapped her arm around both of us. \n\nA couple of minutes later, I felt Heather's arm side down my body and her fingers wrapped around my erection. I pulled my head back a little and she whispered, \"Please. I want to make you feel good. You guys have been so good to me. I think I'm better now thanks to both of you.\"\n\nI looked over at Eileen for some help in what to do. She looked at me and then whispered to Heather, \"Go ahead. It's ok.\"\n\nHeather nodded and sat up. She grabbed the hem of her nightgown and pulled it smoothly over her head and threw it to the floor. As she started to slide down my body, Eileen started to slide off the bed until Heather looked at her and said, \"Stay. I want to make you feel good too.\"\n\nHer hand had been stroking me and she continued while she slipped the head of my cock into her mouth. \"Mmmmmmm,\" came out of me involuntarily.\n\nI reached over and pulled Eileen to me kissing her and running my tongue along her lips asking her to invite me in. The second pass over her lips caused them to open up and I moaned into her mouth as Heather did something amazing with her tongue and her hand. Now that I had Eileen's head, I slid a hand down and began to cup her nearest tit. I slid my hand over it and began to roll the nipple gently between my thumb and forefinger. She returned the moan. \n\nI felt Heather release my cock from her mouth and then I felt her shift positions. A second later, I felt her straddle me and begin to rub her pussy across my cock. Oh that felt so good. I released Eileen and grabbed Heather's hips and pulled her forward which let my cock spring up and position itself in front of her gateway to heaven.\n\n\"No,\" she shrieked. \"Please no,\" and she fell forward onto my chest. \n\nEileen reached out to her and asked, \"What's the matter, little one?\"\n\nHeather sniffed and I could feel her tears splashing on my face. \"I'm a virgin.\" A big sniff and then she continued,\" I'm sorry. I shouldn't have stopped you, but I have been trying to save myself.\"\n\nEileen began to rub her back, \"Shhhh. It's ok. If you are not ready, you are not ready. It's ok,\" I said softly. \n\n\"Wait,\" said Eileen. \"Sandy said you fucked Chad with Jenny.\"\n\nHeather sniffed again and said, \"No. I always just rubbed my pussy on Chad until he came. I never let him inside me.\"\n\n\"It felt really good to me when you were sliding your pussy on me,\" I said trying to be helpful.\n\n\"Do you ever get off when you rub on Chad?\" Eileen asked.",
        "\"No,\" Heather answered definitively. \"I just did it to make him feel good and I like watching his stuff squirt out onto his stomach.\"\n\n\"Have you ever had an orgasm?\" Eileen asked.\n\nHeather shook her head and said, \"I don't think so. I got all tingly once when Jenny licked my pussy while Chad fucked her from behind, but he finished too fast and she stopped once he stopped fucking her.\"\n\n\"Well, we need to fix that,\" Eileen declared. \"Roll off of him and slide up the bed. A little farther. Now spread your legs. There, just like that.\"\n\nI had rolled onto my side watching all this, puzzled. So I was quite surprised when Eileen bent her head down and began to lick Heather's pussy. It wasn't long before Heather started moaning and stroking her breasts, her fingers lingering on her nipples. I was getting very turned on and began to stroke myself. Eileen must have felt the motion because she pulled back, looked at me and said, \"Stop that. Get behind me and stick your dick in one of my holes,\" then went back to Heather's pussy.\n\nDeciding I didn't want to shock Heather given her obvious lack of sexual activity knowledge, I slid my cock into Eileen's pussy. \n\nAs I was bottoming out, I heard Heather, \"Ohhhhhhhggggg. That feels so good. Is he fucking you in your butt like he did on the beach? Ohhggg. Steph said Robert fucked her in the butt when you guys tried to trick him. Oohhhhhggggggggg. She said it felt really good. Like being pussy fucked only better. OH, oh, oh, right there whatever you are doing feels soooo gggooooooddddd. Oh. Oh. Oh.\"\n\nI stretched myself to the side and I could see Eileen was tonguing Heather's little butthole. The last oh was the punctuation to Eileen's finger penetrating Heather's pucker.\n\nI realized I needed to stop or I was going to shoot my wad any second. Reluctantly, I pulled out and sat back on the bed and slid my face into Eileen's pussy. Sliding my thumb where my cock had been I began to tongue lash her pleasure button. I was rewarded with the feeling of Eileen purring.\n\n\"Oh, that's nice. If Robert fucked my butt would I still be a virgin? I like what your finger is doing, would his cock feel just as good?\" Obviously, Heather was one of those magpies that never shut up during sex.\n\nAs I continued to slap Eileen's clit silly with my tongue I could hear her reply, \"I am pretty sure you will still be a virgin if he fucks your butt. And it does feel really nice, but you have to be really ready for it. It hurts a little at first and then it feels funny and then it feels really good. Oh, just like that. Suck my clit. Oh, oh, god I'm coming.\"\n\nThere was more, but I was focusing on tonguing her love bud. Finally, I pulled my face out of her thighs in time to hear Heather's scream as she came. \n\nShe never shut up. \"No, I've never felt that before. My whole body is twitching. I can still feel my insides twitching. That was soooo good.\"\n\nBy then, I was lying next to Eileen. I pulled her close and began to lick Heather off her face. She giggled and then began to lick herself off of my face. I was focused on Eileen and didn't notice where Heather went until I felt her mouth sucking on my cock again. \n\n\"How hard does his cock have to be to get it into my butt? Is this hard enough?\"\n\nShe reached down and grabbed my cock. \"I think it is hard enough, if you are really sure,\" she told Heather.\n\n\"I think so,\" Heather replied. \n\nI reached up and grabbed the bottle of lube off the headboard. 'I think we owe Rob and Olivia a new bottle of lube,' I thought to myself. Climbing off the bed, I came around to the side and grabbed Heather by the ankles and pulled her perpendicular to the side of the bed. She shrieked and asked, \"What are you doing?\"\n\n\"Making sure you are ready,\" I said. I stopped her just short of pulling her butt off the bed so I spread her thighs and bent down to kiss her fertile crescent. Starting to lick her I went from the little love bud all the way down to her rosebud. She was making \"oooohing\" noises. After licking her butthole a couple of times, I dribbled some lube on my finger and began rubbing her butt while sucking on her clit. She was continuing to make noises so I kept going. Sliding my finger inside, I could feel the rings of her anal muscles clenching but they couldn't stop me. Flicking her clit shifted her focus and her hips began to buck up and down on their own. I slid a second finger in and she let out a long drawn out moan. \n\n\"I think I'm coming again,\" she panted. \"Oh that feels so nice having you suck on my nipples. Don't stop. Oh god, I am coming.\"\n\nI laughed into her pussy because I could feel her orgasm on my fingers. I backed off her clit and continued licking her pussy lips while I pulled my fingers all the way out, squirted some lube on them and then slid them back in. She thrashed a bit and then slumped down. \n\nI started licking higher and higher again and rubbing my thumb over the virgin territory. I wasn't going to put myself in but I thought the added stimulation would bring her around to her next orgasm quicker. I don't know if it worked, but she started moaning and I felt her ass muscles clenching very quickly.\n\nWhen I started to feel that, I stood up and told Heather to grab her ass cheeks and pull them apart. I grabbed her legs under the knees and folded her up and put her feet on my shoulders. I squirted lube onto her pussy and wiped my dick through it getting it well-oiled. \n\nAs she was panting and moaning I brought my cock to her backdoor, pulled my fingers out and inserted the head of my cock. \"OHHH,\" she cried out, an octave higher that she had been a second before. \n\n\"Ok?\" I asked. She nodded.\n\nI began to slide myself into her butt slowly, stopping to ask and getting a nod each time. Finally I felt my balls slap her lube wet butt cheeks.\n\n\"You can let go of your butt now,\" I said gently. \"How does it feel?\"\n\n\"I don't know,\" she said. \"It feels like I am taking a crap and nothing is coming out, but it is that really nice feeling crap where it kind of feels sexy. Like when Eileen had her finger in my butt and was licking my clit.\"\n\n\"Are you ready for me to move in and out?\"\n\n\"I think so. Please go slow,\" she said hesitantly.\n\nI nodded and began to slowly pull my cock out. When I was about half way out, I reversed and began to slide back in. I did that several times, watching her reaction and how her muscles felt on my cock. The next time, I slid almost all the way out and ran my thumb down to flick her clit. \"Oooooohhhhh,\" she moaned, \"I like that. I like that a lot. That is very nice.\"\n\nAnd picking up steam I began to slide more of my cock in and out with every stroke and speeding up each stroke until I was sliding all the way in and almost all the way out at a good speed. I could feel my balls begin to tighten up and I knew I was going to blow soon. I started rubbing her clit harder and faster and was rewarded with more moans and finally she announced, \"I am coming. Oh my god I am coming with his big fat dick in my ass.\"\n\nHer ass muscles clamped down keeping me from moving and since I was all the way in, it was like Eileen when she would grab the base of my cock and squeeze causing my orgasm to slow down and back off.\n\nWhen I felt her muscles relax, I started fucking her ass for real and was soon ready to blow my nuts and then it was here and I felt my cock swell and begin to spurt deep inside her.\n\n\"I can feel it. He is squirting inside me,\" she said excitedly to Eileen.\n\nAs I finished, I pulled out and reached down to pull Heather up for a kiss. She hugged me and tears started to flow. \"It was so beautiful,\" she whispered. \"Thank you.\" \n\nSpent, I just nodded. The sat her back down on the bed. \n\n\"I think we need a shower,\" I said and headed for the bathroom.\n\nI had just started the water when the other two came up and hugged me. \n\nA little while later and much cleaner, the three of us rolled back into bed. For some reason, the girls wanted me in the middle and I was too tired to complain. For the second night in a row, I slept the sleep of the dead.\n\n-- To Be Continued in The Cottage: Last Day --"
    ],
    "authorname": "JamesMiehoff",
    "tags": [
        "cottage"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-cottage-second-day"
}