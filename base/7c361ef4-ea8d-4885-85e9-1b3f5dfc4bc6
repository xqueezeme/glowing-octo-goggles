{
    "title": "Late Night Conversations",
    "pages": [
        "Please note that this is a long romance about young love during these trying times. There are a lot of themes in relation to the pandemic woven through it, but honestly very little sex. These longer stories tend to write themselves and sometimes that's the way they end up. Just thought I'd let you know what you were walking into if you choose to read on.\n\nRegards,\n\nJD\n\n**********\n\n\"Gramsy, you're incredible!\"\n\nThe words slipped out along with a grin as I walked up to my grandmother's house. It was still relatively early in the day. She was outside with a rake doing only God knows what because there wasn't a blade of grass out of place on her front lawn. It was always that way. In fact, winter, spring, summer or fall, I'd never seen it anything but perfect.\n\n\"Grandson, don't talk such nonsense.\" Gramsy was old school, and had no patience for those things she considered unnecessary or frivolous. She didn't take or give complements unless she felt they were truly deserved. \"And what are you doing here? I told your father I didn't need a nursemaid watching over me. I've survived far worse than this pandemic.\"\n\nMy grandmother was getting up in years and slowing down, not that she'd ever admit it. This virus had more than just my father worried about her. The truth was that he hadn't sent me. I volunteered. A woman her age shouldn't be alone through something like this. Oh, knowing Gramsy, she'd be fine, but honestly, I couldn't think of anyplace else I'd rather be anyway.\n\nIf you saw a picture of my grandmother, you'd most likely see a short, grey and frail looking old woman, but if so, you'd be mistaken. Well, not mistaken, but missing the real her. Gramsy was still a force of nature despite her eighty-four years, or perhaps because of them. There was an inner strength about her that came from facing life head on and pushing through the hard times. She'd certainly had plenty of those.\n\nMy grandmother was an orphan by the time she was eight. Her older brothers made sure there was food on the table by working construction, but as the only girl back in a time when that mattered, she was the one who took care of the house. She cleaned, cooked and cared for her brothers the way she thought her parents would want her too.\n\n\"Nursemaid? I'm here for the food.\" I was only half kidding, and my grandmother knew it. You could see it in her eyes as her annoyance lessoned and was replaced with a touch of humor.\n\nGramsy met and fell in love with my grandfather when she was seventeen. They were married not long after that. What followed was ten years of fighting to make ends meet as their family grew to five. The accident that killed my grandfather devastated my grandmother, but in a completely different way than losing my Uncle David had. My father's older brother died in the Vietnam War.\n\nMy grandmother seldom talked about either loss, but one of her brothers got drunk while visiting once and told me about my grandfather's death and how it affected her. It was heartbreaking. My father often shared stories about Uncle David and how they survived after his loss.\n\n\"You came all this way for a decent meal?\" The disbelief in her voice was thick as she leaned on her rake and looked at me in that way I knew so well.\n\n\"Gramsy, Hillary is good for dad, but her cooking...\" I shook my head, not wanting to say anything bad about my stepmother. \"Recently she's decided to cook 'healthy'. Apparently, to her that means putting kale in everything!\"\n\nMy grandmother was well into her seventies when cancer took my mother, but that didn't stop her from all but moving in and taking care of me and my older sister until we were old enough to take care of ourselves.\n\nI was happy when dad met Hillary. She was good for him, but there was no way I'd ever think of her as mom. She'd come into my life too late for that. Besides, I already had a mother who I still missed every day. I also had Gramsy who helped raise me and make me the man I was.\n\n\"Dear lord, kale?\" The look of disgust on my grandmother's face was priceless. I doubt very much she'd ever tasted it, but Gramsy didn't abide what she considered those 'newfangled fad foods'.\n\n\"Gramsy, it's bad enough that I'm missing out on my last semester of college because of this stupid pandemic, please don't make me go back and have to eat that food!\" The truth was that it was more than just the food that bothered me when I was at my father's house.\n\nDad met Hillary toward the end of my junior year of high school. They married the summer I went away to college and spent a few weeks traveling Europe for their honeymoon. My sister and I spent the time at my grandmother's. I'd complained half-heartedly, but honestly, it was a good thing. Gramsy had a way of grounding me. Being with her helped me get past the whole having a new stepmom thing.\n\nStill, going home was always weird because it was my home, and not my home at the same time. Hillary had changed so much of what I remembered. It was the same house, but the d\u00e9cor was very different. I didn't blame her for making the changes. It was her house too now, but sometimes I found myself wishing they'd simply moved. That way, I could always remember my home the way it was when I was growing up.\n\n\"You can stay.\" Gramsy obviously read more into my words than I'd said. It didn't surprise me. She was always good at knowing what I needed. \"But don't expect to lollygag around my house. There's plenty that needs to be done where I can use a set of strong hands.\"\n\n\"Whatever you need.\" I didn't quite groan, but it's not like I was surprised. Gramsy was big into the whole 'Idle hands are the Devil's tools' thing.\n\n\"And don't think you can slack off just because it's your senior year of college. I'm sure you have online classes you need to be taking.\"\n\n\"Yes, mam,\" I replied, fighting off a grin, remembering how she used to get on me about school work.\n\n\"Don't 'yes, mam' me,\" she frowned, seeing my expression and knowing that at least a small part of me was laughing at her. I did my best to wipe the smile from my face, but was only moderately successful. She sighed and shook her head before adding, \"Well, what are you waiting for? Come give your grandmother a kiss hello.\"\n\nI was sorely tempted to say 'Yes, mam' again, but my sense of humor had gotten me into more than enough trouble with my grandmother growing up, and now wasn't the time. I wouldn't put it past her to send me home if I annoyed her enough.\n\nI know that sounds crazy, but that was just Gramsy for you. The world bent to her will at this point in her life and not the other way around. That included me when I was here. It was okay because in my heart of hearts, I knew she was the one woman in the world who truly loved me unconditionally. She was always there for me and would always be, but that didn't mean she'd put up with what she called 'my nonsense'. That just wasn't her.\n\n\"It's good to see you Gramsy!\" I said as I hugged her tight and kissed her cheek.\n\n\"You too, grandson,\" she replied, squeezing back briefly. \"Now let an old woman breathe!\" I laughed and stepped back.\n\nThis pandemic was some scary stuff and had definitely put a damper in my senior year of college, but I had a feeling that spending the next couple of weeks with my grandmother was going to be a memory I'd cherish for a very long time.\n\n**********\n\n\"Make sure you get all the seams near the flashing!\"\n\nI looked down from the roof and saw my grandmother watching me with a frown. Her hands were on her hips as she directed me without being able to see what I was doing. I'm sure she would have preferred to be up here overseeing my efforts to tar around the chimney more closely, but she was too old to be climbing a ladder. Who was I kidding? If she could get up here, Gramsy would be doing it herself.\n\n\"Seams near the flashing? I thought I was supposed to be pouring this down the hole on top?\" I gave my best mischievous smile, but my grandmother was mostly immune to it.\n\n\"Very funny,\" she called up. \"Keep it up and I'll give your dinner to one of the neighbors!\" I was about to reply when someone beat me to it.\n\n\"Oh man! Please keep it up!\" I quickly followed the voice to a kid in the next-door neighbor's yard. He was probably around thirteen or fourteen. It took me a minute to realize that it was little Lorenzo Ramos. The last time I saw him was the summer before I went off to college. \"I haven't had a good meal in weeks!\"\n\n\"Is that you Renzo?\" I asked, already knowing the answer, but giving him a chance to recognize me in return. He held his hand up to shade his eyes from the sun as he looked up at me. A quick smile flashed as he caught on.\n\n\"Davey!\" His excitement made me smile, but before he could continue Gramsy interjected.\n\n\"Lorenzo, your sister Miranda is a perfectly good cook.\" Even from up here I could see my grandmother's half smile despite her words. That meant two things. First, her feelings toward Renzo had only grown since I was last here. And second, I'd probably be sharing my dinner tonight.\n\n\"Mira burnt the chicken last night!\" the boy argued, forgetting me for the moment and looking pitifully at my grandmother through the green chain link fence separating the yards. I didn't blame him. Renzo obviously sensed my grandmother's willingness to feed him and she was an amazing cook.\n\n\"It wasn't that bad,\" a dark-haired girl a few years younger than Renzo added as she came out of their house through a sliding door. She was immediately followed by a much younger boy. \"It was just a little dry is all.\"\n\n\"It was burnt!\" Lorenzo insisted, clearly ready to argue with his little sister.\n\n\"And whose fault was that!\" The somewhat shrill and obviously annoyed voice came from inside the house. \"You were the one who 'forgot' about that math test. I was facetiming your teacher and all but begging him for an extension instead of pulling the chicken out of the oven!\"\n\nLorenzo blushed in embarrassment before Miranda followed up with, \"And Sophie, what did I tell you about leaving the screen door open? You're letting all the bugs inside!\" Someone was having a bad day.\n\n\"Mateo was the last one out,\" Sophie complained, but only halfheartedly as she turned around to close the screen door.\n\n\"Davey, can we have a catch later? Or maybe kick a soccer ball around?\" Renzo was looking up at me hopefully. \"Papa is working a lot since all of this started.\" Mr. Ramos was one of those fathers who worked hard, but was always willing to spend time in the yard with his kids.\n\nI frowned in confusion. I mean, Mrs. Ramos was a nurse so it made sense that she was working crazy hours, but Mr. Ramos worked in a factory, which I doubt was considered essential. He should either be working from home or on unemployment.\n\n\"Their father is part of the local rescue squad,\" Gramsy explained, guessing the source of my confusion. \"He's been out on calls a lot since his factory closed down due to the pandemic. Some of the other volunteers are high risk.\" I nodded in understanding.\n\n\"Sorry Kiddo. Maybe when this is all over,\" I responded to Renzo.\n\nKicking a soccer ball around probably wouldn't be that big of a deal, but in this part of the country the virus was running rampant. I hated disappointing the kid, but I couldn't risk it with both of his parents having a high likelihood of being exposed to the virus. I couldn't take any chances now that I was living with Gramsy.\n\n\"Yeah, I get it.\" Renzo was clearly disappointed. He turned away and focused on his little siblings. They started playing soccer.\n\nI glanced at the three visible Ramos children and forgot my sadness as they played together. I hadn't seen them in years. Well, Lorenzo and Sophie anyway. Little Mateo wasn't even born the last time I visited my grandmother. His mother was pregnant with him at the time.\n\nRenzo still looked like the boy I'd played plenty of games with that summer, but it was a close thing. My guess was that he'd recently had a growth spurt. You could tell by the way he moved. His face was also just starting to shift into something more adult.\n\nI didn't know little Matteo, but he was cute as hell and the spitting image of his father. He was a 'late in life' baby. Although to be fair, his parents had spread out having their children more than most. I watched him interact with his brother and sister for a moment and smiled. My guess was that I would end up liking him just as much as his siblings. The Ramos family were 'good people', as Gramsy would say.\n\nI remembered Sophie as a pretty little girl, and although she was still a couple of years away from being a teenager, she had the look of one of the lucky ones whose good looks would blossom into true beauty as she got older. I was betting she was going to be a handful for her father and mother one day.\n\nI caught myself wondering about their older sister Miranda. I always liked the name, although I sometimes used the nickname Mira like her family, especially her younger siblings. I remembered her as a fun loving fourteen-year-old who was a bit of a tomboy, but she'd obviously changed a bunch based on how she sounded.\n\nAlthough, to be fair, I'm not sure how I would have sounded at eighteen if I'd not only lost out on my last semester of my senior year of high school, but also had to take care of three younger siblings while my parents risked their lives caring for others.\n\nIf memory served, Miranda wasn't as lucky as her little sister in the looks department. She had the same dark hair and eyes as all of the other Ramos children, but she was built stockier without really being heavy. Not that any of that mattered. She was just a kid. Still, she used to make me laugh all the time.\n\nMira always insisted on being included in any of the sports Renzo and I played with the neighborhood kids. If there were a lot of kids, I ended up being the automatic pitcher, official quarterback or referee depending on what sport we were playing since I was older by quite a bit.\n\nI could remember one basketball game where I was refereeing and Miranda threw a hip check that sent one of the more aggressive boys to the ground. He was a big kid and seemed more than a little surprised, especially when I didn't call a foul. I remember having a hard time holding in a laugh as he visibly fought with himself on whether he should complain about a girl half his size knocking him over.\n\nThat was bad enough, but when I looked at Miranda, she said with a shrug, \"A little hip check never hurt anyone.\" I had to cough to hide my laughter.\n\n\"Stop dawdling up there!\" Gramsy called up to me, breaking me from my memories. \"I'm going inside to start dinner.\" All three of the Ramos kids in the yard looked up at that. The hopeful expression on their faces was priceless. \"Lorenzo, make sure to tell your sister that she doesn't have to cook dinner tonight. I'll send it over when it's ready.\"\n\n\"Thanks Mrs. Stahl!\" Renzo's grin was bright and full faced, the same as his younger siblings. I guess Mira wasn't a very good cook. I mean, anything Gramsy cooked was great, but the kids hadn't even asked what she was making.\n\nThe three of them went back to playing soccer after my grandmother left and I focused on finishing what I was doing. I still needed to get the air condition out of the shed and put it in the living room before dinner.\n\nGramsy didn't believe in central air so my father had gotten her a large unit to put in the oversized living room window. Knowing my grandmother, I'd be surprised if she put it on more than a handful of times each year.\n\nI thought it was a little early to be pulling the air condition out of the shed. I mean it was warm today, but it wouldn't last this early in the season. I guess Gramsy was serious about putting my 'set of strong hands' to good use while I was here. I didn't mind. Whatever made her happy.\n\nI was so focused on finishing tarring the chimney that I didn't notice when Miranda joined her younger siblings in the yard. Well, not until Sophie cried out in glee. Apparently, the Ramos kids liked to play girls against boys, and Mira was just as competitive as always. Sophie wasn't particularly athletic and Matteo was still very young, so it pretty much became a contest between Miranda and Renzo.\n\nI glanced down to find her laid out fully on the lawn, having just blocked one of Renzo's shots. I grinned for a moment in amusement, but then really looked at Miranda for the first time and found myself swallowing unintentionally.\n\nShe was in a tee-shirt and old jeans, but that wasn't what caused me to pause. It was the fact that the stockiness of her youth had turned into rather impressive curves. So much so, if fact, that I had problems reconciling the sight of her with the young girl I remembered.\n\nI think my mouth might have honestly fallen open as she stood. Miranda still wasn't a beauty, but there was something different about her. Maybe it was the shape of her face or the way she moved, or maybe it was her triumphant smile. I don't know.\n\nMira had a full head of long, dark hair that was far more stylish than I expected. It was highlighted and looked really good, but I didn't spend much time looking at it because her eyes drew me to them. They were just as dark and mischievous as I remembered, but there was a sense of confidence to them that wasn't there before. Her jaw was still square, but had softened slightly, and her mouth...well, it was hard to tell from my vantage, but I had a feeling that her lips were the tantalizing kind.\n\nFrankly, if I'd just met Miranda, I would have thought of her as sexy, hot even, but I forced myself to remember that I wasn't just meeting her. This was fun-loving Mira, the same girl I treated like a little sister for an entire summer. I shook my head and forced myself to focus on the chimney. That didn't stop me from stealing glances at her and her younger siblings every once in a while.\n\nI was just finishing up when I saw Sophie dribbling the soccer ball toward the small goal. Renzo was obviously ready to cut her off. Apparently, he'd lost track of his older sister because a moment later he was on the ground as Sophie shot and scored. I couldn't resist as I neared the ladder to climb down from the roof.\n\n\"I guess a little hip check still never hurts!\" I called down with a grin. The surprise in Mira's expression made it pretty obvious that she hadn't realized I was on the roof.\n\n\"Hello Davey,\" she said as she quickly recovered. \"I thought I heard Lorenzo say your name.\"\n\n\"I go by Dave these days,\" I corrected, but there was something in her eyes that made me think it was a wasted effort.\n\n\"Is Lisa with you?\" she asked as she moved to the fence. My sister had taken to the Ramos family as quickly as I had that summer, but in a different way. I'd played with the kids while she hung out more with Mrs. Ramos. Mira spent her share of time with them. I guess they'd grown closer than I thought.\n\n\"No, she's camped out with her fianc\u00e9 in their apartment. She promised to check in on dad and Hillary at least once a week while I'm here with Gramsy.\" I was sitting on the edge of the roof. Gramsy owned a ranch just like all of the houses in this neighborhood so it wasn't that far to the ground.\n\n\"Speaking of your grandmother, you'd better call her before climbing down the ladder. You know how she is.\" Miranda wasn't wrong, but it seemed silly to me since I could probably jump down easily enough.\n\n\"No need to bother her. It's only a single story.\"\n\nOne of Miranda's eyebrows lifted slightly, but she didn't say anything. The funny part was that I'd seen that look plenty of times growing up. It was the same one Gramsy gave me when I was about to do something she deemed stupid. I guess the two were close. Knowing Gramsy, she treated all of the Ramos kids like another set of grandchildren.",
        "Miranda's comment and pointed look made me waffle on whether I should call my grandmother or not. I was just convincing myself not to, when Gramsy came outside to check on me.\n\n\"Please tell me you weren't going to use that ladder without someone holding it steady?\" Her tone matched the look Mira had given me perfectly.\n\n\"Of course not,\" I said with a straight face.\n\n\"Liar!\" Miranda laughed.\n\n\"I never lie to Gramsy,\" I argued, and I didn't, but mostly because she was amazing at sniffing them out. That's why I became nervous when my grandmother started frowning at me. So much so, that the truth slipped out. \"I was thinking about avoiding the ladder altogether and just jumping down.\"\n\n\"Grandson, sometimes I wonder about you,\" Gramsy sighed heavily as she held the bottom of the ladder. \"How someone so intelligent can refuse to use the smarts God granted you...\"\n\n\"Sorry Gramsy,\" I said, giving Miranda an annoy look for putting me on the spot, which she clearly either ignored, or more perversely, enjoyed. It didn't take much to realize that although Mira might look different, she was still the same girl I remembered. I climbed down the ladder with exaggerated care.\n\n\"Miranda, did Lorenzo tell you I'd be sending over dinner?\" Gramsy asked.\n\n\"Yes, Mrs. Stahl, but you don't have to do that.\" Miranda's eyes shifted away from me as she spoke to my grandmother, and for some reason that made me sigh in relief.\n\nOddly, that was the moment it struck me that Mira's lips were just as enticing as I feared. I forced my eyes away from her and focused on carrying the ladder and bucket of tar to the shed. I'd have to bring the tools I'd use inside the house to clean them.\n\n\"Nonsense dear,\" my grandmother was saying. I couldn't see them, but I could still hear them from the shed. \"I have to cook for my grandson anyway. It's easy enough to make some extra. In fact, I expect I'll be sending something over most nights while he's here.\"\n\n\"Oh, you don't have to...\"\n\n\"It's done,\" my grandmother said in that voice of hers that brooked no argument. Miranda was smart enough to know what it meant too.\n\n\"I don't know how to thank you, Mrs. Stahl.\" The gratitude in Mira's voice was honest, and I got the sense that it embarrassed my grandmother slightly.\n\n\"Please, it's your parents who deserve thanks. They're the ones stepping up and helping people during these rough times. Cooking for you four is the least I can do.\"\n\nGod, I loved that old woman! Cooking for me would be hard enough for an eighty-four-year-old, but now she'd taken on four more mouths to feed.\n\n\"This is great!\" I said enthusiastically as I left the shed and rejoined them. \"I've been dying to learn how to cook some of your specialties. You can write up a list of what you need from the supermarket and I'll go early tomorrow before the place gets crowded.\"\n\n\"You cook?\" Miranda's disbelief was obvious. So was her grin.\n\n\"No, but it's past time I learned,\" I clarified. \"I love my step mother dearly, but most of her meals would probably challenge your burnt chicken from last night. Besides, I'm graduating this year and sooner or later, I'm going to get my own place and need to cook. Who better to teach me than Gramsy?\"\n\n\"It was dried out, not burnt,\" Miranda said testily, making me laugh, which in turn, made her blush angrily. It was kind of cute.\n\n\"If you're serious,\" Gramsy said to me, intentionally interrupting before our words blossomed into a full-blown fight. \"We can deal with the air condition tomorrow. Go get cleaned up and you can help me cut the vegetables. I already have the meat simmering. We're making stew for dinner.\"\n\n\"On my way!\" I said, honestly excited. No one made stew like my grandmother.\n\n\"Just make sure to leave some for my brothers, sister and me!\" Miranda called after me.\n\n\"I make no promises!\" I yelled back, exchanging a grin with her. Hers grew into a true smile that drew my eyes to her lips before she turned back to her siblings. I shook my head and continued inside.\n\n**********\n\nGramsy was an early to bed, early to rise kind of person. Me, not so much. Besides, I was still digesting the amazing stew I'd helped her make. My grandmother made me drop off more than enough for the Ramos kids on their front porch.\n\nI'd rung the bell and stepped back. Miranda answered the door and waved at me before taking the pot inside. I was guessing that her younger siblings were hungry based on how quickly she disappeared, or maybe it was her.\n\nThat was some time ago and I was sure they were done eating by now and probably in bed. I slipped out into the yard. I figured I'd soon be getting tired of Gramsy's house so I was going to spend as much time as possible outside while the good weather lasted. I took my phone to keep busy, but it was such a beautiful night that I put it aside once I did a cursory look at what my friends were posting. The stars were out in full force and I allowed myself to enjoy them for a time.\n\nIt started turning cold and I was thinking about going to bed when I heard the sliding door from the Ramos house open. I was sitting on one of the large chairs Gramsy made me take out earlier when we were setting up the patio furniture.\n\nI glanced over and wasn't really surprised to see that it was Miranda. Her younger siblings had probably just dropped off to sleep. Her father's car was out front, but I was guessing he'd passed out not long after arriving home. I hadn't seen her mother, but Gramsy said that Mrs. Ramos was doing double shifts most days. Her hospital wasn't nearly prepared for this pandemic. None of them were.\n\nMiranda was standing at the edge of their patio and staring up into the sky, similarly to the way I'd been doing a few moments ago. She hadn't seen me yet so I stole a few moments to take in the sight of her without any prying eyes. A slow smile formed as I allowed myself to enjoy her profile. I guess I was too tired to think about the ramifications of looking at her that way.\n\nMiranda's body was damn near perfect. I guess some guys might have thought that her butt was a little too obvious, but in my opinion, it was the perfect size and shape. I'd always had a thing for that.\n\nHer chest was shapely and full without being too much, and her waist was neither too narrow nor too thick. It fit her body. Miranda was on the short side, but it wasn't noticeable because of the way she carried herself. It's funny, but her confident stance was just as attractive as her curves, maybe even more so.\n\nHer dark eyes sparkled as she took in the night sky and her long hair, square jawline and parted full lips made her look like Aphrodite, Freya or whoever was the goddess of lust. I got them all confused, but there was no confusing what the sight of Miranda standing there did to me.\n\nI shook my head at my own thoughts and realized it was time to make my presence known before she turned and caught me giving her the once over. Who was I kidding? I was giving her far more than a 'once over'.\n\n\"How was the stew?\" It seemed like the most obvious icebreaker. Miranda turned toward me without any sign of being surprised I was sitting there. The idea that she might have known I was there the whole time made me blush badly, but thankfully, it was too dark for her to notice.\n\n\"Incredible,\" she said simply, but then laughed and added, \"I'm really not that bad of a cook, but I'm nowhere near your grandmother's class, or my mother's, if I'm being honest.\"\n\n\"I can still taste the enchiladas your mom made for the block party that summer my sister and I stayed with Gramsy,\" I said, smiling at memory. \"They were amazing.\"\n\n\"I actually make pretty decent enchiladas.\" I gave her a look, making Miranda laugh before she insisted it was true. \"You can ask Renzo tomorrow.\"\n\n\"I'll have to judge for myself one of these days.\" I was just teasing her, but something I said made her lose her smile as she looked into my eyes.\n\n\"One of these days,\" Miranda finally said before looking away. That's when I noticed that her patio furniture wasn't out. Mira didn't have any place to sit. I stood and grabbed one of Gramsy's chairs and moved to the fence.\n\n\"Here. Sit on this,\" I half offered and half demanded as I reached over the fence and put the chair down.\n\n\"I can't...\" she began, but I cut her off as I moved back to give her room.\n\n\"Of course, you can,\" I insisted. \"Don't worry. I'll disinfect it in the morning.\"\n\n\"And I guess you expect me to just sit on it now without disinfecting it? I mean, it may not be as likely that you have the virus as I do considering what my parents are doing, but that doesn't mean it's impossible.\"\n\n\"Wow!\" I groaned, moving back toward the fence. \"That was so stupid. I'll...\"\n\n\"Leave it,\" she sighed. \"I'll be right back. We have plenty of cleaners in the house and I really could use to sit down for a few minutes. We were supposed to get new patio furniture this year, but it will have to wait until this is all over.\"\n\nI sat waiting, but it didn't take long for Miranda to return. What did was the time it took for her to clean the chair to her satisfaction. I felt awkward because I couldn't help, but there was nothing I could do about that, so instead I started talking.\n\n\"Your mom working a double shift again?\" Maybe it wasn't the best topic, but I wasn't really sure what to talk to Mira about. The last time I saw her she was barely out of pigtails. Okay, she was a little older than that, but still.\n\n\"She already put in a double session today. She sleeping at the hospital tonight. She does that a lot too since this all started. I think some days she's afraid to come home just in case she catches the virus.\"\n\n\"Yeah, I get that,\" I offered, but then did my best to make her feel better. \"Your mom is a smart woman. I'm sure she's being careful.\"\n\n\"There's only so far smarts will get you in this situation. I really wish this was all over and done with.\" I could hear the strain in her voice.\n\n\"It must be tough on you.\" I figured it might be better to walk the conversation away from thoughts of her mother.\n\n\"I'm fine,\" Miranda sighed as she finally finished cleaning the chair and sat down facing me. We were close to ten feet apart, but we could still see each other in the moonlight, if not well. \"I mean, I miss my friends, but we text and facetime a lot.\"\n\n\"How are your online classes going?\"\n\n\"Please!\" she snorted. \"I'm a second semester senior. Most of my classes were a joke before they moved online. Now, they're just a waste of time.\"\n\n\"I wish I could say the same about my college classes. I'm a second semester senior too, but I need the credits to graduate. Two of my professors don't seem to care in the least that we're now taking classes from home, not that they are bothering to teach any longer. Nope, they're just assigning chapters in their books and posting tests. One of them is giving open book tests, but they're still a bitch.\"\n\n\"Let's talk about something else,\" Miranda insisted. \"I don't want to think about school right now.\"\n\n\"Sure,\" I said agreeably enough. It was so cold at this point that my fingers were starting to hurt, but I didn't want to chance ending the conversation by going inside to grab a coat. \"Why don't you pick the topic?\"\n\nMiranda might have been four years younger than me, but she was the first person close to my age that I'd had a face to face conversation with in the last month that wasn't related by blood.\n\n'And I'm certain that it has nothing to do with the fact that you find Mira attractive.' Sometimes, I really hated my inner voice.\n\n\"You still rooting for that loser football team of yours?\" Her smile was downright annoying, but I got that she was looking for a light conversation.\n\n\"We're in a rebuilding year.\" I tried to keep my defensiveness out of my voice, but failed miserably.\n\n\"Don't you mean rebuilding decade?\" Her taunt hit home hard.\n\n\"And how many Superbowls has your team won?\"\n\nMr. Ramos was big into soccer. So was her brother Renzo, but Mira loved football and our teams were rivals. We started arguing about it when the preseason games started during that summer when I lived next door to her with Gramsy.\n\nMiranda might not look like the tomboy I remembered, but that didn't mean that she'd changed all that much. At least, not when it came to sports. For some reason, that only added to my confusion when it came to my feelings toward her.\n\nWe argued for quite a while, getting far louder than we should have considering the hour, but we were both enjoying ourselves too much to stop. Well, not until Mr. Ramos came through the sliding door.\n\n\"Do you two plan on waking up the entire neighborhood or am I the only lucky one?\" He was clearly annoyed, but Maranda's father was also smiling.\n\n\"Sorry, Papa,\" Mari offered, standing and moving to him. She gave her father a quick kiss on his cheek before grinning. \"But you know how thick Davey can be when it comes to American football.\"\n\n\"Sorry for waking you, Mr. Ramos,\" I added, standing as well. I couldn't move to him and shake his hand like I wanted, but it seemed too disrespectful to remain seated. \"I just don't understand why your daughter doesn't get that more Superbowls means a better franchise.\"\n\n\"Yeah, well at least I can remember my team's last Superbowl.\" Apparently, Miranda wasn't ready to give in despite her father's arrival.\n\n\"I can remember two of my teams Superbowls,\" I retorted. \"It's not my fault you're so young that you can't even drink legally.\" I knew I'd scored a point with that last dig because she hated when I brought up how much younger she was than me, but I knew it wouldn't make her give up.\n\n\"Alright you two!\" Mr. Ramos interjected in exasperation. \"I know how much you like to argue, but can you please save it for another day? I have to wake up early tomorrow.\"\n\n\"Of course, Papa.\" I could tell that Miranda was worried about her father. \"I thought you had the morning off?\"\n\n\"Billy's not feeling well,\" her father answered. \"He says it's nothing, but I told him to stay home just in case.\" His words only made Miranda's worried expression grow worse.\n\n\"I really am sorry, Papa,\" was all she said. \"I'll be in, in a minute.\"\n\n\"Okay,\" he nodded in acceptance. Mr. Ramos than turned to me and smiled tiredly. \"It's good to see you David.\"\n\n\"You too Mr. Ramos.\"\n\n\"It's nice to know you're visiting your grandmother and will keep an eye on my family for me.\" I didn't know why, but his words made me uncomfortable for some reason.\n\n\"I'm here for whatever they need.\" I meant it too, despite the odd sense of guilt that welled up inside of me.\n\n\"Papa, we're doing fine on our own,\" Miranda insisted. Her father reached out and lovingly pressed his hand on the side of her face.\n\n\"I know you've got everything under control Mira,\" he said confidently. \"And don't think your mother and I don't appreciate it, but you're going to have to forgive an old man. These are crazy times and I feel better with a man looking after you all.\" His daughter response was to shake her head and roll her eyes, but she didn't comment. Her father nodded and turned back to me once more.\n\n\"David, I'm sure we'll get some time to catch up before you go home.\" I couldn't quite read his expression.\n\n\"I hope so, Mr. Ramos.\" He gave me a careful look before turning and going inside without another word.\n\n\"He looks exhausted.\" The words slipped out without thought. I cursed myself as Miranda's expression turned even more worried.\n\n\"He is,\" she sighed, but then shook her head. \"But Papa is Papa and there's no slowing him down when it comes to helping people.\"\n\n\"That seems to be a thing with your family,\" I teased gently. Mira obviously thought I meant only her father and mother based on her expression so I had to clarify. \"I didn't realize how much everything was getting to me until tonight. I was holding a lot in. You have no idea how our arguing helped.\"\n\n\"You and me both,\" she replied softly. Miranda was on the other side of the fence and a good ten feet away from me, which was a good thing, because I suddenly got the sense that she needed a hug, and without both of those obstacles, I might have tried to give her one.\n\n\"In that case, same time tomorrow?\" I joked, but instead of laughing she nodded.\n\n\"Sounds good,\" Miranda replied. \"Only make sure to bring a coat next time. You look half frozen.\" She turned and followed her father through the sliding door before I could reply.\n\n\"Well, she's not wrong.\" I blew into my hands to try and warm them up, but only ended up laughing instead as I realized that I was just finishing up my first day at Gramsy's house.\n\nI was cold and tired, but somehow it felt good just the same. My grandmother was true to her word and hadn't let me sit idle for any amount of time. I had the feeling that spending the next few weeks here was going to be many things, none of them boring.\n\nI had no idea what was going on between Miranda and me, but honestly, it was just nice to have someone I could talk to, joke with and tease. I was still having issues reconciling the fourteen-year-old girl I remember with the young woman she'd become. The fact that she was cute and sometimes even verged on hot only confused me further.\n\n\"Definitely not boring.\"\n\n**********\n\n\"How are you feeling today?\" It sounded like an odd question to me, especially coming from Renzo the next afternoon. He was once again in his yard, but this time he was alone, getting ready to mow the lawn. I was also alone in Gramsy's backyard. Truthfully, I was sort of hiding from my grandmother. The old woman was a non-stop dynamo.\n\n\"I'm good,\" I replied easily, wondering what he was getting at.\n\n\"Are you sure?\" Renzo's smile slipped into an out and out grin.\n\n\"Of course, why? What's going on?\" I had no idea what the teenager was getting at, but clearly, he was itching to tell me.\n\n\"Nothing,\" he replied, but then his grin grew even wider. \"It's just that...\"\n\n\"Lorenzo!\" the same annoyed voice from the day before came through the screen door from his house. \"I don't hear the lawnmower!\"\n\n\"Your sister is in a mood today, isn't she?\" I joked with Renzo. It was funny how the sound of Miranda's voice, even with its waspy overtones could make me smile. Of course, it might have had something to do with the fact that her sharp tongue wasn't directed at me.\n\n\"You have no idea!\" the boy sighed, but then gave me another odd look and added, \"Although, from what I hear, you might be learning soon enough.\"\n\n\"What?\" I asked in confusion. He looked at my expression and shook his head, obviously no longer in the mood to joke around.\n\n\"Never mind,\" he answered, moving toward the lawnmower. \"Mira was always bossy, but it's gotten worse since momma and papa started working so much.\"\n\n\"It can't be easy for her either,\" I offered. \"I'm sure this wasn't what she was planning for her last semester of high school.\" Renzo nodded and started to say something else, but we were interrupted by Gramsy.\n\n\"Grandson, there you are! The front porch isn't painting itself.\" She came around the house, a woman on a mission. Gramsy continued on to the shed where I was guessing she stored the painting supplies. We both watched her for a couple of seconds until she was inside the shed.\n\n\"I guess I could have it worse,\" Renzo said soberly. \"Your grandmother is relentless!\" He was careful to speak only loud enough for me to hear.\n\n\"You have no idea,\" I laughingly groaned, repeating his earlier comment. \"I spent over an hour and a half at the supermarket getting all the groceries she put on the list this morning, or at least as much of it as I could find. I got home, unpacked them and then put in the air conditioner in the living room window. I only was able to escape out here now because she was busy cleaning it.\"\n\n\"Larenzo, the lawn!\" Miranda's voice was reaching for that shrill tone once again.",
        "\"Wow! She's downright cranky.\"\n\n\"Yeah,\" the teenager said, making sure the grass bag was attached correctly. \"Someone kept her up late last night arguing American football, of all things.\"\n\n\"You know your sister,\" I shrugged. \"She started it!\"\n\n\"Funny thing about that.\" Renzo reached for the pull cord. \"I don't remember Mari really paying much attention to American football until that summer you visited.\"\n\n\"Seriously?\" I asked in surprise. \"Then why would she pick a team she knows I hate?\"\n\n\"Please! Isn't it obvious? She loves to fight with you. She gets some perverse joy out of it.\" He yanked on the cord and the mower started. Renzo started making his way across the lawn without another word.\n\nI watched him and shook my head, but not without admitting to myself that I enjoyed bantering with Miranda just as much as she did with me. I guess that was weird in a way, but so what? It worked for us.\n\n\"Let's get a move on,\" my grandmother said, interrupting my train of thought as she came out of the shed with the supplies. \"We need to finish it today. It's supposed to rain tomorrow.\" Thankfully, my grandmother didn't have a particularly large front porch.\n\nI quickly moved to her side and took the large primer can and as much of the rest of the supplies as Gramsy would let me take from her.\n\n\"You move the furniture onto the driveway and I'll sweep the surface clean. I just power cleaned it a few days ago, but we'll need to make sure there's nothing stuck between the cracks.\"\n\nGramsy continued to list everything we had to do, but I mostly ignored her. It's not like she wouldn't repeat herself at each step along the way.\n\nThe next couple of hours passed quickly enough. It was a little chillier than the day before, but still warm enough to paint. We enjoyed a late lunch from the chairs on the driveway as we waited for the primer to dry.\n\nWe were just finishing up our meal when someone drove up to the Ramos house in a sports car. The driver was a young, good looking guy. I glanced at my grandmother questioningly. She only hesitated a moment before she said, \"That's Miranda's boyfriend, Anthony.\"\n\nI don't know why I was surprised by the fact that Miranda had a boyfriend. Frankly, it would have been more of a surprise if she didn't. Mira was eighteen, beautiful in her own way, funny and had a great personality. Of course, she had a boyfriend. I watched as he beeped the horn and got out of his car. It didn't take long for Miranda to come outside. She looked happy to see him.\n\n\"The primer is almost dry,\" I said to Gramsy as I stood. \"I'm going to go to the shed and get the paint.\"\n\n\"You do that. I'm going to stay right here. I don't trust that boy to keep his distance from Miranda. You know how teenagers can be.\" My grandmother's comments made me smile and shake my head as I made my way to the shed in the backyard.\n\nI was on my way back when I saw Renzo emptying the lawnmower grass catcher into a paper leaf bag. He was also occasionally frowning at his sister and Anthony. There was something in his expression that made me think he didn't care for his sister's boyfriend.\n\n\"Almost done?\" I asked as I came even with him. I didn't want to pry, but I'd always liked Renzo.\n\n\"Yes.\" He hesitated for a moment before adding, \"But can you tell Miranda that I need her help when you go back out front?\"\n\n\"Sure, is everything okay?\"\n\n\"I guess.\" He seemed more focused on his sister and Anthony than me. \"Papa and Mama say Mira is old enough to make her own decisions.\" He clearly wasn't as sure.\n\n\"That sounds...reasonable.\" I only half meant it. I liked the idea that Miranda's parents trusted her, but I was a younger brother too and knew how frustrating it could be when your older sister was dating someone you had a bad feeling about.\n\nMy sister Lisa's last boyfriend was a real winner. I was so glad when she finally broke it off with him. Thankfully, it wasn't long after that when she met her fianc\u00e9. He was definitely a keeper.\n\n\"I'll let Miranda know you need her.\" It was all I could do in the situation. Renzo nodded in thanks and started the mower again.\n\nI wasted no time when I got out front and moved toward his sister and her boyfriend. They were on opposite sides of his car. It looked to me that Anthony kept trying to subtly shift toward her, but each time it happened Mira took a step in the same direction, carefully keeping the car between them.\n\n\"Miranda, I'm sorry to interrupt but Renzo says he needs your help.\" I offered a friendly smile to Anthony that I didn't actually feel. I knew it wasn't fair, but I trusted Renzo's instincts. He nodded in greeting, but was clearly annoyed at the interruption.\n\n\"Mandy, I just got here. You don't have to leave yet?\"\n\n\"Mandy?\" I couldn't stop myself asked in surprise. Miranda was many things, but a Mandy? No way. She always went by Miranda or Mira. I couldn't picture her as a Mandy.\n\n\"I gave her the nickname,\" Anthony said, obviously proud of the fact. \"I mean, she's eighteen, not eighty? Right?\" I tilted my head and didn't comment, but only because I didn't want to argue with a guy I didn't know.\n\nApparently, Miranda's boyfriend didn't like her name. It wasn't my problem, but it seemed oddly unkind of him to just pick another name for her, especially one I couldn't see her liking. Besides, I always thought Miranda, or even the shorter Mira were cool. They both fit.\n\nMy feeling on the whole Mandy thing must have been obvious to Miranda because she quickly insisted, \"There's nothing wrong with the nickname Mandy.\"\n\n\"If you say so.\" My tone made it obvious that I didn't agree, but it was time for me to let go of the argument and slip away. I'd annoyed Miranda, which was always a plus with us, and it was just starting to dawn on Anthony that maybe I wasn't thrilled with his new nickname for her. \"Don't forget that your brother needs your help. I have to go help Gramsy paint her front porch before she loses patience and starts without me.\"\n\nI nodded toward Anthony and offered another smile, but this time his nod in response was far curter. I clearly hadn't made a new friend. To be fair, I had been a bit of a jerk with the whole Mandy nickname thing, but I had the sense that whatever Renzo's misgivings were about Antony, they were well founded.\n\n\"Who was that?\" Anthony asked Miranda as soon as I turned my back on them. He didn't even wait for me to get out of earshot.\n\n\"My neighbor Mrs. Stahl's grandson. He's a friend.\" She paused and then added a bit more loudly for what I was certain was my benefit, \"Or maybe more of a frenemy.\" I grinned, but didn't turn back.\n\n\"Mandy, do you really have to go?\" They had to talk louder than usual since they had the car between them.\n\n\"Yes.\" I had to strain to hear Miranda's response. \"I can't leave Sophie and Mateo inside alone for long. They're supposed to be doing school work, and Renzo needs me in the backyard.\"\n\n\"Okay, but will you at least think about Friday night?\"\n\nI didn't hear her reply, and that concerned me. I didn't like the fact that Anthony was obviously trying to make plans with Miranda despite the pandemic, but it wasn't my place to get involved. I got that it had to be hard to be boyfriend and girlfriend with this whole social distancing thing. Frankly, I was sort of glad I wasn't dating anyone at the time this all hit.\n\nI guess it could be fun if it was like my sister and her fianc\u00e9. They were quarantining together, but if not, how would you deal with the separation? I couldn't blame Anthony for wanting Miranda to hang out with him Friday night. The problem was that I thought Gramsy was right not to trust Anthony to keep his distance.\n\nI shook my head and took a deep breath. I wasn't sure what the right answer was, but I did know that Miranda was smart and could handle herself. She would have to make her own decision.\n\n\"I guess Mr. and Mrs. Ramos have it right after all.\"\n\n\"Parents usually do,\" Gramsy said easily as I joined her.\n\nI was embarrassed because I hadn't realized I'd spoken out loud, but my grandmother being who she was, left it at that and started giving me directions on exactly how long I should shake the paint can before opening it. For a moment, I wondered if she knew why I'd said what I did, but decided it was best not to ask.\n\n**********\n\nI didn't see Miranda the rest of the day except in passing. I dropped off dinner on the Ramos's front porch when the time came, but it was Renzo who collected it and thanked me. I wasn't sure if Mira was mad at me or just busy. She certainly had plenty to do taking care of her siblings, and for all intents and purposes, their house. That's why I was happy when she showed up in the backyard around the same time as yesterday.\n\n\"I see you're wearing a coat tonight,\" she said pointedly, right off the bat. Apparently, Miranda wasn't mad at me, or at least not enough to forgo our normal teasing.\n\nI didn't bother replying because she was right. It had been stupid not going inside and grabbing my coat the night before. At the time, I was enjoying myself too much to care, but it took me almost an hour to warm up enough to go to sleep once we were done talking.\n\nWe'd left the chair from the night before in Miranda's yard so she wouldn't have to disinfect it again. Gramsy had plenty of them and wouldn't begrudge me loaning Mira one.\n\n\"No arguing tonight.\" she said far more seriously, surprising me as she took the chair and put it in the same place as the night before.\n\n\"What are the odds?\" I joked as I did the same with another chair.\n\n\"Please,\" she implored. \"My parents are both home tonight and could use a good night's sleep.\" I could hear the concern in her voice and see it in her eyes. I met the latter and smiled, offering what support I could.\n\n\"Got it.\" We both fell silent for a time. I wanted to give her a chance to talk out her fears because they were obviously close to the surface tonight, but she wasn't ready yet. The problem was that by the time I realized it, the quiet had become too drawn out. It felt oddly awkward to be the first one to break it.\n\nWe were sitting and facing each other so I could see that Miranda was feeling it too. I decided to bite the bullet and dive in, but me being me, I said the first thing that came to mind.\n\n\"So...Mandy? Seriously?\"\n\n\"How did I know you were going to bring that up first thing?\" Miranda grumbled, but she seemed relieved that we were finally talking again.\n\n\"It's not like it was hard to figure out. What kind of friend would I be if I didn't bring it up? It's a terrible nickname for...\"\n\n\"What do you have against Mandy?\" Miranda interjected. \"It's a perfectly good name.\"\n\n\"You didn't let me finish.\" I took a moment to crack my neck. She waited, somewhat impatiently, but I knew she'd refuse to interrupt me again now that I called her on it. \"Mandy is fine as far as names go...for someone else, but it's a terrible nickname for you.\"\n\n\"Why?\" Mira clearly looked ready to argue despite her insisting we not do that tonight. I was tempted, but I knew her concern for her parents was real, so instead, I tried helping her see what I meant on her own.\n\n\"Think about it? Do you actually like being called Mandy?\" We sat staring at each other for a few moments, until she finally answered.\n\n\"I admit, it seemed a little odd at first, but I've grown to like it.\"\n\n\"Bull!\" I retorted. \"You got used to it. That's not the same as liking it.\" She opened her mouth to argue, but it was my turn to cut her off. \"Oh sure, you probably like the idea of your boyfriend having a special nickname for you, but Mandy? Never.\"\n\n\"How can you be so sure?\" Miranda looked annoyed, but I noticed she didn't disagree this time.\n\n\"Because I know you,\" I smiled triumphantly. It would have been smarter to leave it at that, but I just had to keep going. \"Apparently, better than your boyfriend.\" I thought about my brief encounter with Anthony and lost my smile, \"He doesn't seem to get you at all.\" I'm not sure why I had to volunteer an opinion on him, but he so wasn't the right guy for her.\n\n\"You're impossible!\" Miranda jerked out of the chair. I thought I'd pissed her off enough to leave, but instead Mira grabbed the chair and violently spun it so it was facing away from me before dropping back into it. \"I can't even look at you!\"\n\nInstead of replying, I took a deep breath and let it out. The idea of her leaving made me realize I'd gone too far. Miranda was her own woman. She didn't need me butting into her personal life.\n\n\"Maybe that's a good idea,\" I finally said, standing and spinning my chair around too. It was silly in a way, but it felt better than staring at her back. \"Maybe this is the only way we can have a civil conversation.\"\n\n\"What's wrong with us?\" It was more difficult hearing her with us sitting this way, so I shifted my chair closer to the fence. That meant we were closer than six feet apart, but we were facing away from each other. I figured that offset the distance.\n\n\"Nothing,\" I replied, staring up into the cold night sky. The stars were out again. \"Friends fight. They tease each other too.\" It felt like the truth as the words left my mouth, but only part of it.\n\n\"Not as much as us.\" She sounded calmer. I didn't want to ruin that.\n\n\"You're right,\" I began slowly, trying to figure it out as I spoke. \"Maybe it's because we're not really friends? Maybe we're both in such a desperate need of a friend that we're trying to force it.\" That didn't feel as right as my first comment, but Miranda didn't say anything so I continued. \"God knows, I could use one right about now. My life is changing in so many ways this year, and that was before the pandemic. It's added another whole level of crazy.\"\n\n\"You and me both.\" I barely heard Miranda's words, but then she added a little more loudly, \"Do you miss college as much as I miss high school?\"\n\n\"Yes and no.\" I continued staring up into the night sky. Somehow it helped. \"I joke about my professors and classes all the time, but at this point doing the latter on-line isn't really much different than going. What is, is the loneliness and fear. At least when I was at college, I was surrounded by people in the same situation. Somehow, that made it not as scary.\"\n\nI admitted more than I planned, but I found myself relieved to be saying what was bothering me out loud. I knew I could trust Miranda to understand and keep it to herself.\n\n\"It can't be easy being here and taking care of your grandmother either.\" It was a kind thought on her part, but I couldn't leave it at that. Miranda was acting like both mother and father to her three younger siblings. She had it so much harder.\n\n\"Please!\" I snorted. \"I think it's more a matter of Gramsy taking care of me. I've been trying to figure out if she really suddenly needs so much done around here, or she figures that it's best to keep me busy.\" I paused because it hit me that despite my joking tone, there was probably more truth to what I said than I realized.\n\n\"It's probably a little bit of both with your grandmother.\"\n\nI didn't respond, hoping she'd fill the silence this time. Miranda had it so much worse than me. She was under a lot of stress. Not only was her school life turned upside down by the pandemic, but with her mother and father both in the healthcare industry, she had the added stress of caring for her siblings.\n\n\"You were right before,\" Miranda began, her tone oddly distant. That was certainly not what I expected her to say. \"I don't really like the nickname Mandy, but it made Anthony happy. We started dating right after Christmas. It was the beginning of my last semester of high school and I was having too good of a time to care about one silly nickname.\"\n\nThere was so much I wanted to say, so much I wanted to ask, but instead I kept my mouth shut and let her continue. It was hard, but I'd promised myself that if I got Miranda talking about what was bothering her, I wouldn't interrupt.\n\n\"I've been working since eighth grade when I started babysitting for a few neighbors. I was busy with that most weekends until sophomore year when I started working at a catering hall as a waitress. I didn't have a lot of free weekends with that job either. It was mostly weddings so I'd work Friday night, all day Saturday and sometimes even Sunday.\"\n\n\"There was a good core group around my age working there. We used to hang out together and have a good time, but I was missing out on a lot of things that most high school kids did. That's why I decided to quit for my senior year.\"\n\nI started working young too. It was for a guy who ran his own lawn service. It was long hours, but paid well. I was saving for spending money to have at college so I couldn't picture just stopping my senior year like Miranda had, but I could only work until it got dark so I still had time to go out with my friends afterward.\n\n\"It was actually my mother who convinced me,\" Miranda continued. \"I'm a saver so I had money in the bank. I was planning on buying my own car and had enough for a decent used one, but I would have needed to continue to work at that job to pay for insurance and gas.\"\n\n\"Momma thought it made more sense for me to wait until after high school to buy a car. She said I should take a break from working so much and enjoy my last year. She even offered me the use of her car on the weekends since she finally had enough seniority to work weekdays.\" I'd always liked Mrs. Ramos. She clearly loved her daughter and was willing to put herself out to make Miranda happy.\n\n\"I was still waffling so she talked to her beautician and got me a part time job working at the beauty parlor. It meant that I had to work Saturdays, but only in the morning.\" I couldn't see Miranda, but I could hear her smile from her tone.\n\n\"It gave me enough money so that I didn't have to go into my savings for spending or gas. Plus, and don't you dare laugh, I've always been interested in becoming a beautician. Working there gave me a chance to see what it was really like.\"\n\n\"I can see it,\" I offered. Although, to be honest, I hadn't pictured Miranda with that kind of a job until she said it. It explained how great her hair looked, not the mention the rest of her. Miranda had grown beyond the little tomboy I remembered, not that she'd lost her competitive nature. I grinned as I pictured Mira playing soccer with her younger siblings the day before.\n\n\"So, I quit the catering hall job and started making an effort to get more involved with my high school's extracurricular activities.\" The words were coming quicker now and I smiled. She needed to share and I was glad I was here, able to listen.\n\n\"I went to every football game for the first time. Our team wasn't that great, but it was still fun. More important, I started reconnecting with old friends and started making some new ones. A couple of them were from the so called 'in-crowd', and that's how I met Anthony.\"\n\n\"Truthfully, he was very popular so I was more than a little surprised when he started showing interest in me.\" I didn't like the sound of that, but she didn't give me a chance to interrupt. \"At first, I thought it was just the whole physical thing, but eventually I saw that Anthony was actually interested in me and not just my body.\"\n\nMiranda's bluntness was surprising. She'd clearly grown up since I last saw her, and that was oddly satisfying to me. What wasn't was the fact that her words were making me second guess my opinion of Anthony.\n\n\"He seemed like a nice guy and if I'm being honest, I jumped at the chance to date him when he finally asked me out. It was a bit weird because I went from knowing a couple of people in the in-crowd to being the center of it almost overnight.\"\n\nMiranda was quiet for a few seconds, obviously remembering. I waited patiently. Taking the time to enjoy the sense of connection I was feeling between us.",
        "\"There were things about Anthony I didn't enjoy like his insistence in calling me Mandy, but I ignored them. I was a second semester senior and part of the in-crowd. If I didn't see what it was like then, then when?\"\n\nAgain, I bit my lip. I had to force myself to remember how hard high school could be when you were still trying to figure out who you were. College started out the same way, but ended up being more about trying to understand who you wanted to be. They were similar in some ways, but completely different in others.\n\n\"The second semester started out perfectly,\" Maranda continued. \"Our high school basketball team was a contender for states, and suddenly I was going to all the parties. It turned out that there really wasn't that much of a difference between the popular kids and the rest of us as I expected. Okay sure, some of them were full of themselves, but mostly they were all too busy celebrating the end of high school to mind me suddenly being part of their group.\"\n\n\"Life was good. I already had a date for the prom and everyone was talking about graduation and what they were doing before going off to college in the fall. I had an open invitation to one of my new friend's parent's beach house for the summer and was looking forward to spending some time enjoying the sun and surf.\"\n\n\"And then the virus hit.\" The words slipped out. I could feel her pain because it matched my own in some ways. I didn't have plans for the summer like Miranda because I was supposed to start my new job in June, but I was looking forward to all the graduation parties and hanging out with some old friends in May before I started working.\n\n\"And then the pandemic hit,\" Miranda agreed. \"Almost overnight, Papa and mama all but disappeared and I went from being carefree to being locked in my house taking care of my younger siblings. I loved them dearly, but sometimes it's hard.\"\n\n\"And you worry about your parents,\" I interjected knowingly.\n\n\"All the time!\" The words came out with a burst of emotion. I could almost hear the tears that followed. \"Mama stopped telling me stories about what was happening in the hospital because I was having nightmares. So much pain and death, and still, she insists on putting in extra shifts and risking herself! Papa is almost as bad with the rescue squad.\"\n\nI wanted to offer what comfort I could, but there were no words that came to mind and Miranda was on the other side of the fence. Only, when I glanced behind me for the first time in a while, I saw that somewhere during our conversation, Mira had moved her chair closer to the fence as well. She was leaning back and her fingers were intermeshed with the fence.\n\nI was unable to resist doing the same and taking hold of her hand as best I could. Miranda froze at first, but then squeezed with surprising strength. It felt so good to touch another human being and offer comfort, especially Miranda. We sat like that for a few minutes as she cried quietly.\n\n\"I haven't seen your mother yet, but I'm sure she's being careful.\" I offered when she finally seemed in control of herself once more.\n\n\"Mama is always careful and she says she's fine, but I don't believe her. She looks exhausted and has sores on her face from wearing a mask so much. Her eyes are haunted. I don't want to think about what she's been dealing with on a daily basis.\"\n\n\"Your mother is a special lady,\" I offered, thinking about the warm and kind woman I remembered. \"Always was.\"\n\n\"She likes you too,\" Miranda said, sounding more like herself. \"She told me to say hello.\"\n\n\"Tell her the same from me. I'm sure I'll bump into her sooner or later.\"\n\nWe fell silent for a while again, but this time it was more relaxed and companionable. I could tell Miranda was done sharing for now. I think we both needed a break from the strong emotions. Well, that and it was obvious that we were both drawing a lot of comfort from holding hands, even such as we were with the fence in the way.\n\nMiranda was the first to let go and stand up. I didn't blame her. It was getting late and we both needed to get some sleep before the morning came and her siblings started driving her crazy while Gramsy put me to work.\n\n\"By the way, I will never forgive you if you touch your face, or anything else, before you go inside and wash your hands, with soap!\"\n\n\"Yes, mom!\" I retorted as I stood as well. I also turned and met Miranda's eyes for the first time since we sat down. They were glassy, but she looked better. There was gratitude there and something else that I couldn't quite figure out. \"Make sure you use your other hand to wipe the tears from your eyes until you do the same.\"\n\n\"I am not crying,\" Miranda insisted, and she wasn't, but she had been. That much was obvious.\n\n\"If you say so, Mandy.\" I couldn't resist. Instead of getting mad, she actually laughed.\n\n\"You know, I might be younger than you, but you are definitely more immature.\"\n\n\"At times,\" I admitted with a laugh of my own. \"Same time tomorrow or do you need a night off?\"\n\n\"I'll be out here.\" Miranda glanced up at the stars once more. I admit, I enjoyed watching her do it far more than I should have. \"It's the only time I get to myself. Plus, talking to you helps. It helps a lot.\"\n\n\"Same here,\" I offered, and it was the truth. I'd been looking forward to meeting up with Mira all day. Conversations with her were never boring.\n\n\"And Davey,\" Miranda began slowly, drawing my eyes to hers. \"Thanks for listening.\"\n\n\"Any time.\" A thought popped into my head and I smiled before adding, \"And apparently, we can have a conversation without fighting. Well, as long as we're not looking at each other.\"\n\n\"It's a start,\" Miranda smiled as well. There was something warm and comforting about the way she did it. \"But you were wrong before. We don't fight because we're trying to force a friendship, or because we are friends, or even because we both need a friend right about now.\"\n\n\"Then why do we fight so much?\" I was more than a little curious about what she thought it was, but when she offered it, I was completely stunned.\n\n\"It's obvious,\" Miranda explained, walking away and putting Gramsy's chair near the sliding door. She opened the glass door and paused before walking in. Mira looked and me and added, \"It's because we're both attracted to each other and don't know how to deal with it.\"\n\nMiranda stood there for another few moments, giving me a chance to deny it. I couldn't. Sure, part of her was still the fourteen-year-old tomboy I remembered, but she'd grown well past that into a young woman who I couldn't deny interested me. Just like I'd grown past the eighteen-year-old boy who didn't have a care in the world except getting through college.\n\n\"That sounds right,\" I finally said, knowing it was the truth. The intensity of our look grew to something I couldn't ignore, so me being me, I did what I do best. \"Have a good night, Mandy.\"\n\nAgain, instead of being mad, Miranda laughed. That didn't stop her from promising, \"If you call me that again, you will regret it.\" She disappeared into the house right afterward and I stood there grinning like an idiot, staring after her.\n\n**********\n\nThe next few days passed much the same as the others since I arrived. Gramsy would keep me busy during the day with chores. We would make dinner together in the early evening. I would deliver it to the Ramos's front porch and have a brief conversation with whoever came out to get it. And each night, Miranda and I would meet in the yards and just talk.\n\nI was worried at first that us both admitting we were attracted to each other would be a problem, but it didn't come up again. I think in no small part, because she had a boyfriend. There was also the fact that at times it was still hard for me to see her as anything other than the cute fourteen-year-old I remembered, but honestly, that was happening less and less often the more we talked.\n\nShe was still only eighteen years old, but the more I got to know her, the less the four years between us seemed to matter. Well, sometimes anyway. At others it bothered me a lot, but it wasn't the four years so much as the fact that Miranda was still in high school and I was about to graduate college. We were at such different points in our lives.\n\nI also think our attraction for each other didn't come up again because we were both afraid that if we talked about it that it might ruin our time together. I'm not sure if recognizing it and stating it out loud was good or bad, but in the end, I think it did help us understand our interaction with each other better.\n\nThat's not to say we still didn't fight. We did, but mostly because we both enjoyed it too much to stop altogether. Sure, our attraction to each other was part of it, but there were other aspects as well. We both liked to be challenged. Miranda was smart and not afraid to voice her opinions. Her perspectives were so different than mine sometimes that they took me completely by surprise, but never in a bad way.\n\nAbout a week after I arrived at Gramsy's I woke up to the sound of rain. It poured, on and off for hours and occasionally the wind would pick up, only making it worse. Gramsy let me focus on a school project for the entire morning while she puttered around the house. I was just finishing up when she announced it was time for another of my cooking lessons.\n\nI thought it was a little early to start dinner, but then she told me she was going to teach me to make pasta, from scratch. That was fine by me. I could use the distraction, which may have been why my grandmother chose that particular meal.\n\nGramsy didn't have a pasta maker because she didn't believe in them. That meant I had to do the bulk of the kneading. I had fun despite how messy it got. I was pretty sure that was my own fault based on my grandmother's expression. In the end, we had a blob of dough wrapped in plastic wrap sitting on the counter.\n\nI knew there was more to making pasta than that, but Gramsy moved on to showing me how to make one of her sauces. It wasn't as difficult as I thought it would be, but it had to sit on the stove cooking for hours before it was ready.\n\n\"If you're up for kneading a little more dough, we can make some fresh bread to go along with it. There should be just enough time.\"\n\n\"Definitely!\" The only thing that could make my grandmother's pasta better was one of her loaves of fresh bread. Gramsy went to the pantry to get the dry ingredients. I went to the refrigerator to grab the eggs, figuring I'd help. Big mistake.\n\n\"There are no eggs in my bread,\" she said in that tone of hers. I turned around and hid my grin as I put the eggs back. I assumed there were eggs in bread dough since there were a bunch in the pasta. Live and learn.\n\nGramsy started with a large bowl, some warm water, sugar and yeast. Apparently, I needed to be a chemist to make bread, or at least that's what it felt like at the start. Making the pasta was more fun.\n\nYou made a volcano of flour and dumped a bunch of eggs in the middle. After that, it was a lot like mixing cement, only do yourself a favor and don't make that analogy to your grandmother if she ever shows you how to make fresh pasta. Comparing her cooking to cement mixing will not go over well. Trust me.\n\nIn the end, making pasta and bread was very similar, at least my part in it. They both entailed a lot of kneading of dough. I was staring out the window while I worked, letting my mind wander. The kitchen faced the front of the house, but there wasn't much to see today other than the rain. Cars seldom passed these days with everyone sheltering in place.\n\nStill, it was oddly relaxing, or at least it started that way. That all changed when I saw a familiar car pull up. It was Anthony. This time he got out and ran to the front door.\n\nI knew Miranda's father was home because his car was parked out front, but oddly, it didn't make me feel that much better. I had a sudden urge to go out there and stop Anthony, but I didn't have the right so I squashed it down, hard. He was Miranda's boyfriend, not me.\n\nI was surprised by the sudden surge of frustration and out and out jealousy that hit me. I guess just because Miranda and I didn't talk about our attraction to each other, that meant it was gone. In fact, I hadn't realized quite how much it had grown from my side until that moment.\n\nI knew I needed to get passed these feelings welling up in me. They weren't appropriate or good for me in the long run. Sure, Mira was the one who recognize our attraction for what it was and even admitted it was mutual, but what did that change?\n\nShe was still in high school and dating Anthony while I was graduating college in a month or so. She was eighteen now and no longer a kid, but I was already twenty-two and had a job waiting for me after I graduated.\n\nWell, at least I hoped I did. I'd checked with the company once all this happened and they told me not to worry. I still had a job assuming the government eventually allowed people to go back to their offices, but it still worried me. Only time would tell. There was nothing I could do about my job now anyway. Thinking about it wasn't going to help anything.\n\nOf course, worrying about my employment situation was easier than dealing with these sudden feelings for Miranda. Actually, calling them feelings wasn't really fair. I couldn't have feelings for her in that way, could I?\n\nI mean we were friends of a sort and our nightly conversations made me feel closer to her than I probably should have been. And God knows, I was attracted to her curves, her lips...even her eyes. Hell, to just about everything about Miranda, if I were being honest, but in the long run did that really matter?\n\nMaybe I was right after all. Maybe all this was, was two people in desperate need of a friend? Add to that our mutual attraction and it made sense how I might think there was more to us than there was.\n\nI was lost in thought when Anthony returned from Miranda's house. She followed him out despite the rain. My eyes locked on to them of their own accord.\n\n\"Grandson, close your mouth.\" The fact that my grandmother caught me staring at Miranda through the window was bad enough, but Gramsy, being Gramsy, didn't leave it at that. \"You've got it bad.\"\n\nI wasn't surprised by what she said, just embarrassed. What did surprise me was what she added once I forced my eyes away from the window and looked at her. \"David, just so you know, you could do a lot worse than Miranda.\"\n\nMy grandmother seldom used my first name. I was always 'grandson' to her. Mostly, because I was her only grandson and it had become a term of endearment, but also because she saved the use of my proper name for when she was saying something that she thought was important for me to understand.\n\nI had no idea how to react to it now, so I did what I typically did with my grandmother when it was a serious subject. I told her the truth, although I didn't really understand it until I said it out loud to her.\n\n\"Gramsy, you aren't wrong. I am attracted to Miranda, but following up on it doesn't make any sense. She's barely eighteen and probably on her way to college next year. I'm graduating and going out into the so-called world.\"\n\nI fell silent for a few seconds because my mind was racing too much to form words. I glanced out the window and saw Miranda hug Anthony before slipping from his grasp and making her way back to the house.\n\n\"There's no way it would work out between us, even if I was interested in following up because this is little Miranda Ramos we're talking about. I don't want to do anything to hurt her or her family. They're 'good people' and were always kind to me.\" I shook my head as I spoke. Gramsy remained silent letting me think as she greased the pan we were going to use for the bread.\n\n\"Mr. Ramos treated me like another son that summer I came and stayed with you. It would feel like a betrayal to take advantage of his daughter. And, I'm sure Mrs. Ramos would love finding out someone four years older than her daughter and the grandson of their next store neighbor was into her daughter.\"\n\n\"I think you'd be surprised by Miranda's mother's reaction,\" Gramsy offered as she took the dough from me and put it in the pan. She covered it with a damp cloth and put it on the counter. \"That needs to rise.\" She only paused a moment before adding, \"You know Mercedes and your sister became close that summer, and it was obvious that 'little Miranda' as you called her, had a big crush on you.\"\n\n\"She did?\" I asked in surprise.\n\n\"Men,\" Gramsy said without heat, pointing toward the sink. I went there and started washing up. \"Of course, she did. Miranda was a fourteen-year-old girl and you were a handsome and kind eighteen-year-old boy who gave her attention.\"\n\nMy grandmother waited for me to finish washing up. She handed me a dish towel to dry my hands. \"No one thought anything would come of it because of the age difference and the fact that you were obviously oblivious, but it's not like Miranda's mother thought badly of the idea, once you both grew up of course. You are my grandson, after all.\"\n\n\"There is that,\" I smiled, which was why I was surprised when Gramsy took that moment to pinch my elbow. I don't know how she did it, but when my grandmother was mad at me, she had a way of grabbing just the right amount of skin to make it hurt. I pulled away from her as fast as I could. \"Ouch! What was that for?!\"\n\n\"Because if you dare try and take advantage of Miranda, then her father won't be the only one feeling betrayed. I raised you better than that! So did your parents.\" I had to replay what I said earlier to understand what she meant. It had been a poor choice of words.\n\n\"Gramsy, I'm sorry. I didn't mean it that way. It just that Mr. Ramos likes me and dating his daughter might ruin that.\" She stared at me as if trying to read my thoughts. If anyone could do it, it would be her.\n\n\"There's something about Miranda that's got you all hot and bothered whether you accept it or not,\" she finally said. \"And it's more than just her looks.\"\n\n\"I don't know her well enough for that to be true,\" I argued as I put the dish towel back in its place. Gramsy was very particular about her kitchen. \"Unless you're trying to tell me that it was love at first sight? Well, first sight since she became an adult.\" I didn't bother keeping the sarcasm from my tone.\n\n\"First of all,\" Gramsy began slowly. \"Don't think I'm oblivious to the fact that you two have spent every night out back talking since you arrived.\" Being caught out by my grandmother was somewhat embarrassing, but all of that was quickly forgotten when she added, \"And yes, I do believe in love at first sight.\"\n\nI recognized the rare smile that blossomed on my grandmother's face. It was the one she offered when thinking about the love of her life. \"I know it sounds crazy. I would never have believed it myself before I met your grandfather.\"\n\n\"It was like that for you?\" I asked, holding my breath because I was afraid my interruption would stop her from continuing. Gramsy hardly ever talked about my grandfather.\n\n\"For both of us.\" Her smile somehow made her look momentarily younger. \"It was all our parents could do to make us wait a year to get married. We were poor and always scrambling to survive, but that didn't matter as long as we had each other.\" Her smile softened and turned slightly sadder. \"We were together for only ten years and fought constantly about one thing or another, but they were still the best ten years of my life.\"\n\nI'd never seen my grandmother like this before. There was no doubt that she was a good woman, but most people thought of her as hard and strong. That was how she faced what life had thrown at her, but right now I was seeing a different side of her. I was seeing a woman who had loved a lifetime in the decade she shared with my grandfather.",
        "\"I don't know if what you're feeling for Miranda is love or not,\" Gramsy offered as her smile slipped away and she met my eyes again. \"But grandson...David, if it is, then don't you dare miss out on it! You have no idea how rare it is or how long you'll have with someone before they're gone.\"\n\nI nodded because there was nothing to say. Her point was so obviously valid and important that any words I tried to offer would be meaningless. The only real question was whether I did love Miranda. My gut told me one thing. The problem was that my mind insisted on the other.\n\n\"Stir the sauce,\" Gramsy demanded in that way that was so her when she saw I was lost in thought. \"I'll be right back.\"\n\nIt took her longer to return than I expected and she was carrying a well-aged, medium sized carboard box when she did. My grandmother led me to the living room and sat on the couch instead of in the armchair she usually chose. It was obvious that she wanted me to sit next to her so I did. Gramsy opened the box with surprising care.\n\nI looked inside as soon as I could see. There were dozens, maybe hundreds of loose pictures, many of them black and white. Apparently, my grandmother didn't believe in picture albums. Gramsy took out one picture, stared at it briefly before handing it to me.\n\n\"This is the last picture I have of your uncle David before he shipped out to Vietnam.\" There was pain behind her words, but also a deep sense of love. \"You remind me of him some times.\" I was so busy staring at the picture and absorbing everything about my uncle that I didn't notice when Gramsy pulled out the next picture.\n\n\"And this is your grandfather,\" she said with surprising poise considering the emotions that I could sense boiling beneath the surface. \"Not long after we first met.\" She handed me the picture with some reluctance, as if doing so somehow hurt. I handled it with extreme care. It obviously meant a lot to Gramsy.\n\n\"He was handsome.\" The picture was of a guy a few years younger than me, leaning on a car with a cigarette in his mouth and looking 1950s cool.\n\n\"And as vain as a peacock about it,\" Gramsy grinned, clearly remembering. \"He spent more time getting that pompadour just right than I did with my hair, and back then we girls used curlers!\" She started actually laughing, so I joined her.\n\nI sat quietly for the next hour or so enjoying the pictures and the memories they invoked in my grandmother as we waited for the bread to rise. I'd always known Gramsy was a special woman who lived life to the best of her ability no matter what came her way. What I hadn't realized was how much she enjoyed it despite the difficulties she faced.\n\n\"Your grandfather took this picture.\" It was of a much younger Gramsy in a bathing suit with a happy smile. \"He used to call me his 'beautiful Italian princess'.\" She shook her head and laughed again before adding, \"I was neither beautiful nor a princess, but when I was with him, I could believe I was both, at least for a time.\" She moved on to the next picture with a shake of her head.\n\nI knew that I would never forget what she shared with me, no matter how many years passed. Gramsy was kind enough to give me glimpses of her past, and frankly, there were times I found myself almost jealous. I could only hope I lived half as well as she had despite all the tragedies she'd faced.\n\n\"It's time we get the bread on and finish making dinner.\" And just like that, our time digging into Gramsy's past was over.\n\nMy grandmother was putting the last of the pictures back in the box when I reached out and stopped her. \"Thank you for sharing this with me, Gramsy.\" I wanted to say more, but the words wouldn't come.\n\n\"You're welcome, grandson,\" she smiled slowly, patting my hand. \"And thank you for listening to an old woman's musings. I haven't gone through this box in a long time and it was overdue. It was talking to you about Miranda and love at first sight, and the memories of your grandfather that it brought up that gave me the gumption to pull the box out.\"\n\n\"I'd like to do this again someday, if that's alright with you?\" I asked as Gramsy closed the box and stood. \"There are still plenty of pictures we didn't look at yet.\" She smiled at me, letting her ever present guard down for a moment.\n\n\"I'd like that too David, but not any time soon.\" The use of my first name and the fact that I could suddenly see how drained Gramsy was from visiting her past, made me realize how hard it was for her. She left the room before I could recover.\n\nI went into the kitchen and peaked at the bread dough under the still damp towel. It had risen significantly and just seeing it made me hungry. I also took a moment to stir the sauce. It smelled so incredible by this point that my mouth literally watered. I couldn't resist tasting it. Of course, Gramsy walked in a soon as I brought the spoon to my lips.\n\n\"What did I tell you about tasting the sauce before it's ready?\" She sounded the same as usual. Any signed of the emotions she felt while we were looking at her pictures was gone, but I'd never forget the memory of them or how they showed me what a real life, well lived looked like.\n\n\"Oh, it's ready!\" I insisted, making Gramsy shake her head, but I could see her fighting a smile.\n\n\"You need to punch down that dough before we split it into two,\" her non-nonsense tone was back, but now I knew better. \"We'll make one loaf for us and the other for the Ramos kids.\"\n\n\"Make theirs a little bigger. Mr. Ramos's car has been out front all day. I'm glad he decided to take a day off.\"\n\nThe momentary look of concern on Gramsy's face disappeared as quickly as it came, but I'd noticed it enough to replay my own words in my head. \"You don't think...\" I couldn't finish my sentence, but she understood.\n\n\"I'm sure he's fine,\" Gramsy replied, answering my unasked question. \"But make sure everything is okay when you drop off dinner, just in case. That girl already has too much on her shoulders as it is.\"\n\n\"Maybe that's why Anthony visited? Maybe Miranda called him because...\"\n\n\"Doubtful,\" Gramsy interjected in a tone that let me know that she thought as little of Anthony as Renzo did. My grandmother wasn't one to gossip or badmouth someone, but she wasn't very good at hiding her feelings toward them either. \"He's not the type. If he were, he'd have stayed longer.\"\n\n\"You're probably right,\" I agreed, but deep down I wasn't so sure. Miranda might have called Anthony, but if her father did have the virus, then she wouldn't let him stay and chance getting it. In either case, that didn't matter for the moment. What did was that I was worried about Mr. Ramos and what Miranda might be facing, but there was nothing I could do until I knew what was going on for sure.\n\nGetting the bread on was simple enough and the sauce was all but done, but as it turned out, the hard part of pasta making was still left. Gramsy had me roll the dough out with a rolling pin. She cut it into strips and then showed me how to roll them into small tubes about a foot long.\n\nI thought I was doing pretty good up until then. That's when Gramsy took a fork and pressed it against one end of a tube. She started flicking her wrist in a way that caused a piece of pasta to form. I tried to duplicate her action, but never quite got the hang of it. Gramsy went like five times faster than me and made beautiful looking pasta. Me, not so much.\n\nI expect she would have gone slower and spent more time showing me how to do it if she wasn't concerned about the Ramos family as much as I was. I wasn't complaining. The faster we had dinner ready the faster I could drop it off at their house and make sure everything was okay.\n\nWe usually ate dinner and then I would drop off what Gramsy made for the Ramos family. Tonight, she handed me the food to deliver first. I took a moment to grab a piece of paper, jot down my phone number and put it in my pocket while she was boxing the meal up. I would give it to whoever answered the door this way they could reach me if they needed me.\n\n\"And don't dillydally if everything is okay.\" I nodded and kissed her on the forehead before I made my way over. Gramsy was obviously worried too.\n\nIt was raining hard again and the wind was brutal at the moment. It would have been smarter to wait a few minutes because that kind of intensity couldn't last, but I threw on a rain coat, grabbed an oversized umbrella from the hall closet and ran for it.\n\nIt became immediately obvious that the umbrella was a mistake. It did nothing with the kind of wind I was facing except get in the way. In the end, I got frustrated and released the lock with one hand before dropping it on the grass. Thankfully, Gramsy put dinner in a box that protected it from the worst of the weather.\n\nI arrived at the Ramos's front porch, pretty much soaked through. I had stepped in at least one puddle on the way over. I would have to stuff my shoes when I got back if I wanted them to dry out any time soon.\n\nI rang the doorbell and waited impatiently. Thankfully, it wasn't very long. The tension started leaving my shoulders the moment Miranda open the door. We will have the storm door between us, but I could see her through the glass. She was clearly in a good mood, or at least she was until she saw me.\n\n\"What's wrong?\" she asked with real concern.\n\n\"I guess nothing,\" I replied with a shrug that quickly drifted into a slow smile despite the stormy weather. \"I noticed that your father's car was out front all day and I was worried he might not be feeling well.\" That was as close as I could come to saying I was afraid he had the virus. Miranda was no dummy. She knew what I meant immediately.\n\n\"No, he's fine, but thanks for making sure.\" We were talking through the glass door. I knew it was hard for Miranda not to offer to let me in out of the rain. I could see it in her expression. \"He and momma had a long talk last night. They decided that he would cut back his volunteering with the rescue squad.\"\n\nMiranda didn't explain why, but I could guess. It really was dangerous for both of her parents to be exposed. It would be hard enough for the family to deal with the loss of one parent. Two would destroy them. Thankfully, both were clear of the virus right now, but you never knew.\n\n\"And momma is going to start sleeping at her friend Pamela's apartment. She's a nurse too and lives closer to the hospital. She's single and has an extra bedroom.\" Again, no mention of how it would be safer for her and her sibling, but I could see the knowledge in eyes.\n\n\"That sucks,\" I said bluntly because it was the truth and nothing I could say would make that better. That didn't mean I wouldn't try. \"It's probably unnecessary, but smart, just like your mother.\" She smiled in appreciation at my attempt, but it didn't reach her eyes.\n\n\"We're still going to see her every few days, but we'll do it outside and keep our distance. It's going to be hardest on Matteo.\"\n\n\"Please, all you Ramos kids love to hug and kiss!\" I was teasing, trying to lighten the mood. It wasn't until she raised an eyebrow that I replayed what I'd said in my head. It didn't take much to see how she interpreted it. I have no idea why it made me blush so much, but it did. \"That's not what I meant!\" Of course, her reaction was to start laughing.\n\n\"Here's your dinner,\" I sighed, shaking my head and leaning forward to place the box with the food down. \"I'll leave it here on the porch for you.\"\n\n\"It's getting drenched. Just hand it to me,\" she demanded, opening the storm door. She was done laughing, but her eyes still sparkled with humor. \"And make sure to wash your hands when you get back inside.\"\n\n\"You're the one taking the box from me. Make sure you wash your hands.\" Miranda didn't bother commenting as she took the box from me and moved back behind the safety of the storm door.\n\n\"Thank your grandmother for us.\" She didn't immediately turn away. \"I guess with this weather, we won't be able to meet tonight.\"\n\n\"If the trip over here in this downpour taught me anything, it's that I am not a dolphin.\" I really was soaked through to the bone. \"Meeting outside is definitely off. \" That's when I remembered about my phone number.\n\n\"Wait! Take this,\" I reached under my coat and into my pocket, grabbing the piece of paper I's put there. Somehow, it was still mostly dry. I opened the storm door and dropped it on top of the box she was holding before quickly closing the door once more. \"I meant to give this to you so that you could call me if you ever needed me.\" She looked at me oddly.\n\n\"You were really worried about my father,\" Miranda said slowly, her eyes never leaving mine.\n\n\"And you,\" I replied, refusing to look away, at least not until I remembered Anthony's visit earlier in the day. I broke eye contact after that and added, \"And your brothers and sister.\"\n\nI wanted to ask about her boyfriend's visit, but it was none of my business. Part of me wanted to tease her about it, but I wasn't finding it all that funny at the moment. The jealousy I felt at seeing her and Antony together was still raw. My time with Gramsy and her box full of pictures and memories hadn't changed the way I felt about Miranda, but it let me see things in a new, clearer light. I just wasn't sure how to deal with it yet, or if I even should.\n\n\"Any of you can call me if you ever need me,\" I said a little awkwardly into the silence that followed. \"Or you know, if you want to talk.\"\n\n\"I'll let them know.\" You ever get the feeling that someone was laughing at you, but not in a bad way? That was exactly how I felt, but I didn't blame her. I was acting like a twelve-year-old. I blamed Gramsy and her talk about love at first sight.\n\nMiranda continued to watch me with her laughing eyes for a few more moments before nodding once, more to herself than me. She shut the door without another word. I wasn't quite sure what the nod meant. I tried not to dwell on it as I slogged back in the downpour. Tried, and failed.\n\n**********\n\nGramsy made me take a shower and get dressed in some warm, dry clothes before we ate dinner. She was as relieved as I was that Miranda's father was okay, but of course, she didn't show it. That just wasn't Gramsy.\n\nDinner was amazing once we finally got to it. I was starved and her pasta was definitely one of my favorites, but I have to admit, part of my enjoyment was knowing I'd helped prepare it. Certainly, the fact that I was in a good mood after talking to Miranda helped.\n\nGramsy turned in earlier than usual with the rain still falling. It had slowed down considerable and was downright sedate by the time I made my way to bed. I was reading online when my phone rang. I was a little disappointed to see it was one of my friends from college. I mean, I was happy to hear from him, but I was hoping for someone else.\n\nBrett lived in one of those southern states not hit hard by the virus, or at least not yet. He'd gone home like the rest of us when our school closed. Listening to him talk for the next twenty minutes was a bit of an eye opener. There were still less than five hundred virus related death in his entire state, where as my state and most of the ones around me were in the thousands.\n\nI could understand why the people in areas like Don's thought of the virus as a bit of a farce and an inconvenience. It wasn't as real to them as it was to people in my state. Everyone here knew people who'd gotten it, and most of us knew at least one who'd died from it. In my case, it was a former high school friend's father, but there were plenty of others.\n\nNo wonder why people were reacting so differently online. A lot depended where you lived and what you did for a living. My dad and mom were lucky because they could work from home. My sister Lisa and her fianc\u00e9 were both out of work for the time being.\n\nDad and mom would make sure they were okay financially, but there were plenty of people out there who either didn't have family, or their families were in the same boat as them. Times were scary for a lot of people.\n\nOur call was just winding down when my phone rang again. This time is was a number I didn't recognize with a local area code. I rushed Brett off the phone with promise to give him a call back in a couple of weeks. I answer the local call just before the call was pushed to leave a message.\n\n\"Hello,\" I said, hoping it was Miranda.\n\n\"Hi, is this Davey?\" The voice was far younger than Miranda's, but it was definitely recognizable.\n\n\"Hello Sophie, how are you doing?\" I was having a hard time not laughing. I'd told Miranda that any of her or her siblings could call me if they wanted, and apparently, she'd taken my words literally and given my number to her little sister.\n\n\"Good. I'm going to bed soon, but I wanted to call and thank you and your grandmother for dinner. Pasta is my favorite!\"\n\n\"Mine too,\" I replied with a grin. \"Maybe Gramsy and I will show you how to make it one day.\"\n\n\"Really?\" the excitement in Sophie's voice was priceless.\n\nIt turned out little Sophie was quite the conversationalist. We talked for ten minutes before her father finally called her away from the phone. Sophie wished me a good night and hung up. I was still grinning when my cell phone rang a third time.\n\n\"Hello.\"\n\n\"Hello, Davey.\" This time it was Miranda and I settled back into bed and got comfortable. \"Did you have fun talking to Sophie?\"\n\n\"Oh, it's you.\" I ignored her question because I knew Mira was only asking it to tease me. \"I was expecting Renzo, or even little Matteo.\"\n\n\"Renzo is online playing video games with his friends. Matteo's been asleep for hours.\"\n\n\"Oh well, then I guess you'll have to do.\" Maybe I shouldn't have made that joke, or maybe when I did, I should have expected the hang up, but I hadn't. It struck me as funny and I burst out laughing before I called her back, only I used facetime.\n\nMiranda picked up after the first ring. She wasn't laughing so I quickly stopped. There was something odd about her expression that I couldn't place. \"Weird. Somehow we were disconnected.\" I did my best to keep a straight face.\n\n\"Yeah, somehow.\" She was giving me that pointedly look once more, but I could see how relaxed she was despite not seeming particularly amused. Still, I decided to play it safe.\n\n\"Bad joke, sorry.\" We spent so much time teasing each other that one of the other of us was bound to go too far eventually. Of course, it would have to be me. I wasn't quite sure why that particular joke upset her, but clearly it did. I figured my best bet was to change the subject. \"How was your day?\"\n\nI held my breath and waited to see if she would forgive me. I didn't think she was really mad, but I might have been wrong. There was still something a little off about her.\n\n\"Good,\" Miranda replied almost reluctantly, lifting a glass into the picture. She brought it to her lips and sipped. That's when I figured out what was up with her. Miranda was either drunk or on her way because she was drinking red wine. Well, either that or grape juice, and I couldn't picture the latter in that type of glass. \"Papa's being home all day helped.\"\n\n\"And I'm betting the wine isn't hurting either.\" I couldn't resist.\n\n\"This is only my second glass.\" Miranda was clearly not a big drinker if a glass and a half of wine already had her tipsy, or maybe I just hadn't seen her truly relaxed until now. \"Poppa said I could sleep in tomorrow so I thought, 'Why not?' It's the first time since all the pandemic hit.\"\n\n\"Sounds reasonable.\" I decided to tread a little more carefully while I figured out Mira's inebriation level. If she was drunk, then I was more than a little curious as to what kind of a drunk she was. I didn't want her hanging up on me again. Besides, this could be fun. \"What else did you do today?\"\n\nI got out of bed as I asked and made my way to my bag. I'd taken out my clothes when I arrived, but left some stuff there. One of the things was a small bottle of tequila, and not the cheap stuff. I'd brought it in case I got stir crazy.",
        "Honestly, with Gramsy keeping me busy all day and my nightly conversations with Miranda, I'd almost forgotten I had it, but now seemed like a good time to crack it open. Mira smiled and shook her head when I tipped the bottle of tequila toward her and took a sip as I settled back into bed.\n\n\"I talked to some friends, I mean really talked, for the first time in what felt like weeks.\"\n\nI frowned at her answer because it reminded me of Anthony's visit. Plus, I liked being the friend she talked to. Then again, she did call me. Well, after having her little sister do it first.\n\n\"Papa helped the others with their school work. Between that and your grandmother sending over dinner, I actually had some time to myself today.\"\n\n\"Hey! I helped Gramsy.\" I decided not to dwell on Miranda's boyfriend and keep the conversation light as I took another sip of tequila.\n\n\"Yeah, we figured,\" Mira grinned. \"Some of those pieces of pasta were awfully weird shaped.\"\n\n\"It's a lot harder than you think.\" I was relieved to see her mood shift. \"And I kneaded all the dough.\" I was hoping Miranda was a happy drunk, or maybe even cuddly drunk, not that it would help with us on the phone.\n\n'Down boy!' I told myself as I replayed that last thought. Apparently, the tequila was doing its job faster than I expected. I would have to remember to be careful. There was no doubt that I was attracted to Miranda and I was just starting to figure out how I felt about her, but now wasn't the time to talk about it. Besides, she had a boyfriend.\n\n\"My hero,\" Mira teased, and I couldn't help laughing. She joined me a moment later.\n\n'God, I love the sound of her laughter.' The thought popped into my head and I couldn't deny it. The truth was that I loved most things about Miranda, even when she was prickly with me. I thought about what Gramsy shared about her and my grandfather. How they fought all the time, but how it was still the best time of her life.\n\n'Time to put the tequila away.' I knew it had barely reached my system, but decided it was smarter to close the bottle and stop drinking. I did sneak one more sip before doing so. I glanced at the contents and realized that at least one of my 'sips' had been a bit more than that.\n\nThe conversation that followed bounced from topic to topic. Unlike the night before, it stayed mostly light, but there was an underlying current tonight that I couldn't explain. Maybe it was the alcohol, but something had changed. The thought brought to mind Gramsy's earlier comment about me 'having it bad' for Miranda.\n\nIn retrospect, it was sort of funny hearing my grandmother say that, but for once, I didn't feel like laughing. Mostly because it was getting harder and harder to deny.\n\nMiranda had a boyfriend, was four years younger than me and was still in high school. Yet, when I talked to her, none of that mattered because she was also smart and funny woman, one that drove me to distraction. Well, none of it except her having a boyfriend. That bothered me. Hell, it bothered me more than I wanted to admit.\n\nI may had opened the bottle of tequila one or twice as our conversation progressed, but only to keep my buzz. I didn't let myself do more than that. Miranda finished her second glass of wine and had a third, but she nursed that one for most of the night.\n\nI didn't realize how long we'd been talking until I caught her yawning. I glanced at the alarm clock on the night stand. It was probably older than me and not necessary with my cell phone, but I wasn't going to tell Gramsy that.\n\n\"Oh wow! It's way later than I thought. It's time to call it a night. I need my beauty rest.\" Gramsy would expect me up earlier and ready for whatever chore she had planned. I didn't quite groan at the thought, but it was close. Miranda probably wasn't much better off. Her father told her she could sleep in, but I doubt her little siblings would allow that.\n\n\"You and me both,\" Miranda said, stifling another yawn.\n\n\"Like you need it,\" I snorted without thought. I didn't realize what I'd said until I saw the surprise in Mira's expression.\n\n\"Oh my! Davey, you must be tired. Either that or drunk. Was that an honest to God complement?\"\n\nMiranda was joking, but I realized that there was some truth to what she was saying. I spent so much time teasing her that I didn't let her know what I really thought about her. It suddenly struck me that at least some of my teasing was for exactly that reason. The discovery must have shone on my face.\n\n\"What?\" she prompted.\n\n\"Nothing.\" It was the smart answer. I hadn't forgotten about Anthony or the fact that she was four years younger than me and still in high school, no matter how much part of me wanted to. The problem was that I wasn't prepared for her obvious disappointment. \"I mean, you have to know your beautiful, right?\" I immediately felt awkward because she had a boyfriend and I'd overstepped, so I added, \"I'm sure you must hear it from Anthony all the time.\"\n\n\"I know what Anthony thinks about me,\" Miranda said with a surprisingly bland expression. \"I'm more curious about your feelings.\"\n\n\"My feelings?\" I repeated, stumbling for words. \"Um...\"\n\n\"You do have some right? I'm not reading all this wrong, am I?\" For a moment I was stunned into silence. Part of it was the bluntness of Mira's questions, but mostly it was because I realized that the underlying current of our conversation that I'd been feeling all night might not have only been on my part.\n\n\"My feelings toward you?\" I began, falling back to humor like I usually did when I was uncomfortable. \"Well, you're a bit of a smartass.\" I took a breath and let it out slowly. Now was not the time for humor. \"You're also beautiful, smart, funny and a good friend.\" I was a little surprised that I got the words out, but even more so at Miranda's reaction.\n\n\"Is that all?\"\n\n\"What else is there?\" She was saddened by my question. I could see it in her eyes. I couldn't have that so I quickly added, \"I mean, what else could I say to a girl who has a boyfriend?\"\n\nMiranda was watching me carefully again. She did that a lot. It was like she could see right through me. It was annoying as hell, especially when I was buzzed like I was now.\n\n\"For the moment, answer as if I'm not dating Anthony.\" I was clearly not the only one feeling no pain. \"What would you say?\" Something in Miranda's expression challenged me. It wasn't that rare of an occurrence, but this time I knew I shouldn't accept it. Apparently, that was beyond me.\n\n\"You mean, other than everything about you drives me crazy?\" I asked in reply, hoping I hadn't offended her. I should have known better.\n\n\"Yes, other than that.\" Miranda actually smirked. \"I mean, it's nice to hear, but I could already tell that by the way you look at me.\" She paused, obviously remembering something. \"You do a good job hiding it.\" Her smirk changed into a something different. Something, almost sensual. \"Well, except for that first night I came outside and you didn't think I knew you were there.\"\n\nMy thoughts flashed back to that night. If I'm being honest, this wasn't the first time I dwelled on that particular memory. Miranda really had reminded me of some sort of primal goddess while she stared up at the starlight sky.\n\n\"I don't think I'll ever forget the sight of you standing there in the moonlight.\" My words made her smile deepen, but I could tell that I still hadn't given her the answer she wanted. I was at a loss for words.\n\n\"You're not the first guy to want me,\" Miranda said into the silence that followed. She might be a happy drunk, but she was also a bit more fearless than usual despite the possible ramifications of her pushing. \"I want to know how you feel about me, not just my body.\"\n\n\"You did hear me say you were smart, funny and a good friend, right?\" I was stalling and we both knew it. I had no idea why she was putting me on the spot. I had even less idea why I was trying to hide what I really felt about her.\n\nMaybe it was because we were both buzzed, if not out and out drunk. Or maybe it was because of Anthony. Although, she'd taken him out of the conversation for the moment. Maybe, I was just afraid. This was all happening so fast.\n\nHow much of it was real? And how much of it was dealing with the stress of the moment? The Coronavirus was affecting everyone, but Miranda's family more than most. They were on the front lines with her mom being a nurse and her dad volunteering at the rescue squad.\n\nThe smart thing to do was to stay quiet and wait to see how we both felt once things returned to normal...if they ever did. The problem was that Miranda was watching me on Facetime, silently waiting for me to continue. There was no way I would have been able to resist telling her how I truly felt if we were in person.\n\n\"I guess if you didn't have a boyfriend and I allowed myself to think of you as something more than a friend, then I would say...well, that I care for you. I care for you a lot. Definitely more than I should.\" Apparently, even seeing her on a small screen was too much for me to keep my mouth shut, but at least I hadn't said the L word.\n\nIt was the best I could offer. I was scared that Miranda would press me and ask how much I cared, mostly because I wasn't sure what I would answer, or maybe because I was. Instead, she smiled and nodded, accepting my answer for what it was. That didn't mean we were done talking. I could see that from the way she was watching me.\n\n\"Davey, tell me something,\" Miranda began slowly. \"Do you believe in love at first sight?\"\n\n\"I don't know,\" I answered honestly. \"Gramsy and I were talking about it earlier today.\" I hadn't shared what happened with my grandmother and her box of pictures yet. Frankly, I was still digesting it all.\n\n\"You and Gramsy were talking about love?\" It struck me as odd that this was the first time I'd ever remembered Miranda using my nickname for my grandmother.\n\n\"Apparently, in her own words, I've 'got it bad'.\" I said it because I was nervous and I thought it was funny, and it was in a way, but Miranda wasn't laughing. Neither was I. Part of me regretted my words, the rest not so much. I decided to shift the conversation back to her. \"What about you? Do you believe in love at first sight?\"\n\n\"I have since I was fourteen and my neighbor's grandson came to visit.\" Her smile was magnificent, and frankly, it felt almost like I was basking in the glow of it. It was a crazy, heady feeling.\n\n\"Lucky guy.\" It was attempt to put some distance between myself and what I was feeling.\n\n\"Time will tell,\" Miranda replied, but she was still smiling.\n\n\"Speaking of time, it's time we said goodnight.\" I forced the words out before I said something else entirely. \"Some things should be said in person.\"\n\n\"Yes, they should,\" Miranda agreed, her expression still warm and content. Looking at her this way, I felt like I could swim in her eyes for a life time. I was lost in what I was feeling until she added, \"But only when both people are sure. Well, that and sober.\"\n\n\"Sure and sober sounds good to me,\" I smiled, but it didn't last as I added, \"And only when neither of them is in a relationship.\" I didn't feel bad about Anthony because he obviously wasn't the one for Miranda, but whether I liked it or not, he was her boyfriend and we shouldn't have had tonight's conversation while that was true. That I felt bad about, even with her prompting.\n\n\"Don't worry about that,\" Miranda said, her smile turning mischievous. \"I broke up with Anthony today.\" My expression must have been priceless because she started laughing. Well, that and she ended the call.\n\n\"She really does like getting the last word.\" I was talking to myself, but that didn't stop me from laughing. Miranda wasn't dating Anthony anymore. I opened the bottle of tequila and took a swig in celebration. \"This shit just got real.\"\n\nThere was no doubt of that. I had plenty of reasons to be concerned, but instead, I felt at peace. It scared me, but in a good way.\n\n**********\n\n\"Gramsy, that's just mean!\"\n\nMy grandmother used both hands to thrust the drapes to either side of the window in my room with one sharp motion. The early morning sunlight streamed into my room. I groaned and blinked a few times before I was able to see the alarm clock. Okay, so it was late morning, but still morning all the same.\n\n\"Grandson, this is the third time I tried to wake you.\" Gramsy wasn't mad or even disappointed. She was simply unsympathetic. Somehow that felt worse as I watched her open the window wide. My grandmother was no dummy. She knew why I wasn't moving.\n\nThe hang over was a lot worse than it should have been, or at least I thought so until I remembered the amount of tequila I drank after Miranda hung up. I'd been too wired to fall asleep so I figured more tequila would help.\n\n\"Bad idea.\" I said it out loud, but I was talking to myself. Now, not only was I exhausted, but I was hung over too. Want to talk a bad combination?\n\n\"This had better not be a new habit.\" I thought Gramsy's warning was a little much, but I wasn't going to say that to her because now was not the time to get into an argument with my grandmother, or anyone else for that matter.\n\n\"You don't need to worry about that,\" I groaned. \"I may never drink again.\"\n\nGramsy nodded once. Not because she thought I was serious about never drinking again, but because she understood what I truly meant and accepted the inferred promise. That was the end of it as far as she was concerned. I wish it was the same for me, but I still had to deal with my pounding head until I the effects of the hang over wore off and got some desperately needed sleep.\n\n\"Breakfast is on the table getting cold. Go eat something and then take a hot shower.\"\n\n\"Yes, mam,\" I agreed easily, mostly because both sounded like exactly what I needed. Well, other than a boatload of sleep. Today was going to be pure torture, but I decided to do my best to grin and bear it. \"What's on the schedule today?\" I thought I did an admirable job hiding my dread, but apparently not so much based on the look my grandmother gave me.\n\n\"You're of no use to me like this. I'll have your sheets changed and the room aired out by the time you get back. Sleep. There's nothing that needs doing that can't wait until tomorrow.\"\n\n\"Gramsy, thank you. Thank you so much!\" I didn't even try to hide my relief and the extent of my gratitude. She didn't comment, but I could see the slight smile that creased her lips momentarily.\n\nIt was well passed noon by the time I finally started moving. Actually, it was closer to dinner. I felt night and day better. It's amazing what a good breakfast, a warm shower and an additional six hours of sleep could cure. I went downstairs and found my grandmother in the living room. The television was on, but she was focused on whatever she was sewing.\n\nA big red warning light went off in my head. My grandmother absolutely hated sewing. The only thing she hated more was throwing away something that would be perfectly fine with a little mending. My sister Lisa and I had learned long ago to avoid Gramsy when she had a needle in her hands.\n\n\"What's that amazing smell?\" I was pretty sure I knew what it was, but I figured a compliment would be a good way to break the silence.\n\n\"Pot roast,\" she replied succinctly. \"I decided to throw it in the slow cooker when it was obvious you weren't going to be any help with dinner tonight.\" Yep, Gramsy was definitely in a mood.\n\n\"I'm starving. I can't wait!\"\n\n\"Still a couple of hours from being done.\" My grandmother's tone matched her mood, but then I saw her expression thaw slightly before she added, \"Have a sandwich to hold you over. Use the last of the cold cuts. We don't want them to go bad.\"\n\n\"Thanks Gramsy.\" I knew what she was saying in her own way. I moved to her and gave her a quick kiss on the forehead. \"I love you too.\"\n\nI decided on one triple decker sandwich since that would save a piece of bread and cut down on the carbs because you know, the cold cuts themselves were so healthy. I rolled my eyes at my own silliness as I poured myself a big glass of milk. I was definitely feeling better.\n\nI felt so good after I was done eating my late lunch that I decided to mow the lawn for Gramsy before dinner in thanks. It was another bright and warm day so I took a moment to enjoy the feel of the sun on my face before making my way to the shed to get the lawn mower.\n\nThe front went quickly enough. The grass wasn't really that long so I didn't need to empty the grass catcher until I was ready to move to the backyard. Of course, I forgot to grab a leaf bag from the shed when I pulled out the mower. I was walking back to get it when I spotted the Ramos family out in the yard. Well, everyone except Mrs. Ramos.\n\nMr. Ramos and little Matteo were playing Bean Bag Toss against Renzo and Sophie. Miranda was sitting out for the moment. She was using Gramsy's chair to relax. She had her eyes closed and was clearly enjoying the warm weather. I was guessing that I was right about my assumption from the night before that her little siblings wouldn't let her sleep in for very long.\n\nI didn't realize I stopped to appreciate the sight of her sitting there like that until I felt someone watching me. It was Mr. Ramos. He was watching me, watch his oldest daughter.\n\nSure, it was a little embarrassing getting caught, but I didn't really feel bad about it. It took me a moment to realize that it was because I wasn't staring at Miranda because she was hot. Although, she definitely was that. No, I was staring at his daughter because I cared for her, a lot. I didn't want to take advantage of Miranda. I wanted to be with her. There was a huge difference.\n\nI smiled and waved at Mr. Ramos. He continued to looked at me for a few moments. I met his gaze without wavering until he slowly returned my smile and nodded.\n\n\"Tell your grandmother she doesn't need to send over dinner any longer.\" I noticed that Miranda didn't budge at her father's words. I was already pretty sure she was asleep in the chair. This only confirmed it.\n\n\"I'll tell Gramsy you said that, but knowing her, I don't expect that will change anything until things go back to some semblance of normal.\" I said it respectfully, but my tone let him know how doubtful I was of him being able to make my grandmother change her plans. \"She's already got the pot-roast on for tonight.\"\n\n\"You're probably right,\" he laughed, obviously knowing Gramsy. \"But let her know, just the same. Miranda is a perfectly good cook.\"\n\n\"I hear her meals tend to be on the dry side.\" I'm not sure why I said it, but I couldn't resist. I watched Mr. Ramos's reaction. Clearly, he wanted to defend his daughter, but I think he knew that I wasn't really attacking her. I think he had figured out a lot more than that.\n\n\"Only sometimes,\" he finally admitted with a grin. \"And I expect she'll get better with time.\" I nodded, but didn't comment. A moment later he went back to playing with his kids and I went back to the lawn.\n\nThe back took more effort than the front. It was larger, plus I had to move stuff out of the way. Still, I was done mowing in plenty of time for dinner. I started on the other side of the yard from the Ramos's because I didn't want to bother them.\n\nHonestly, their yard was big enough that my mowing wouldn't be loud enough to stop their game. On the other hand, I doubt Miranda could sleep through it. I even thought about stopping altogether, but half finishing a job wasn't something Gramsy appreciated and I didn't want to chance it with her already being in a bad mood.\n\nI was halfway done when I noticed that Miranda was up and playing the game with the rest of her family. I admit, I enjoy the sight of her straining to float the bean back across their yard and into the hole. I loved the fact that she was so competitive.\n\nI caught her glancing my way when I was almost done, but her expression was tough to read. I found myself wondering if Miranda regretted getting drunk with me last night and our talk. That was a depressing thought and threatened to ruin my mood, but I decided not to overact. I admit, I did quicken my pace so that I could finish faster and hopefully get a chance to talk to her, but she was gone when I was finally done.",
        "I put the mower away and carried the now full bag of grass to the edge of the driveway. I noticed that there were other bags out at the neighbors' houses when I was cutting the front lawn so I assumed pick up was soon. If not, Gramsy would be sure to let me know when I went inside.\n\nI was trying not to dwell on the fact that I would have to wait until later to talk to Miranda when I saw her. She was sitting on her front porch. I got the sense that Mira was waiting for me. I started to say hello, but hesitated when it became obvious something was up. She was smiling, but it was clearly forced.\n\n\"I thought maybe you got bit by a vampire or something last night.\" It was sort of an attempt at humor, but it felt as uncomfortable as her smile.\n\n\"What?\" I didn't even try to hide my confusion.\n\n\"You stayed inside all day.\" She clarified, not really helping much. \"I figured if you'd turned into a vampire then it would make sense.\" Okay, that explained her comment, but not her attitude. \"I thought your grandmother would have you out early doing chores since it was such a beautiful day.\"\n\n\"Gramsy took pity on me and let me sleep off my hangover.\" If anything, my answer made whatever was bothering her worse.\n\n\"Do you remember last night at all?\" There was a flash of something in her eyes, but I couldn't quite read it. Was she hoping I'd forgotten? Maybe she regretted our conversation. Maybe Miranda had said things she didn't mean because she was drunk.\n\nI was worried about how Miranda felt about our conversation from the night before as soon as I saw her frown at me in the backyard when I was mowing the lawn. This discussion was only making it worse. It was disappointing on a level that I can't explain. I know it's silly considering how little we knew about each other, but I felt what I felt and after last night's conversation I'd decided to accept it.\n\nI had a choice to make. I could confront Miranda and see how she really felt or I could say I didn't remember anything and let her off the hook. The latter might have been the coward's way out, but if she really did regret what happened, then it was also a kindness. I took a deep breath and flipped a coin in my head.\n\n\"I remember you dumped Anthony for me.\" Yeah, maybe the cocky grin and teasing manner weren't the best approach, but it was what I did, especially when I was at a loss as to what to say.\n\n\"I did not break up with him because of you!\" she retorted, but she relaxed into her first real smile. I took that as a good sign, a very good sign. \"Although, I will admit that it was our conversation about him last week that made me realize some things.\"\n\n\"Mandy.\" My tone made my distaste obvious as I remembered.\n\n\"I told you not to call me that ever again.\"\n\n\"Don't worry, that was the last time. Besides, I wasn't calling you that.\" I didn't have to pull any punches now that they weren't dating any longer. \"Anthony didn't know the real you at all, did he? What a dumbass!\"\n\n\"And you do?\" Her challenging tone didn't bother me this time because I realized my biggest fear was unfounded. Miranda hadn't hoped I'd forgotten what we said to each other. She was afraid I had, or worse, she was afraid I'd use being drunk as an excuse to back away from her. I didn't know much in this particularly moment, but I did know that wasn't going to happen.\n\n\"The important parts.\" I said it confidently because it was the simple truth, not because of any challenge on her part. \"Of course, I expect we'll have to spend some time together learning the rest.\"\n\n\"How much time?\" Miranda asked, her smile turning into a grin.\n\n\"As long as it takes.\" I wasn't just saying it. It was a promise I intended to keep to the best of my ability. Miranda could see it in my eyes and she took a step toward me.\n\nThe smart thing to do would have been to stop her, but that wasn't going to happen. Another option was to take her in my arms and just go with it. That sounded like a much better option, but I hesitated for a few reasons.\n\nFirst, there was the whole pandemic thing. I'd be more than willing to take the chance if there wasn't Gramsy to think about. Plus, it was possible that I was the one who would spread it to her family. I mean, I felt fine, but with this stupid virus a lot of people got it and never noticed.\n\nThere was also the fact that we on her front porch and her father was home. I'd thought he and I had shared a moment earlier, but I could have been wrong. Plus, we could get caught by one of her little siblings.\n\nThe fact that I was overdue inside was another good reason. Gramsy would probably come looking for me any moment. That would be embarrassing in a completely different way.\n\n\"And what if you find that you don't like what you discover out about me?\" Miranda drifted a little closer as she asked. My pulse picked up considerably. I could lose myself in her eyes if I let myself. Hell, if I wasn't careful, I was going to lose a lot more than that to her. Oddly, the thought didn't bother me.\n\n\"I'll learn to live with it.\"\n\nMiranda took another step closer and I decided to hell with it. I was definitely going to kiss her, but then a stupid thought popped into my head and of course, I couldn't not share it. Mostly because I thought it was funny.\n\n\"Well, that's assuming you're a good kisser. I mean, you wouldn't expect me to hang around if you were a sloppy kisser, would you?\" I tried to make it sound like a challenge, but honestly, the thought of her being a sloppy kisser had me fighting hard not to laugh.\n\n\"You jerk!\" Miranda didn't even attempt to stop herself from laughing.\n\n\"I mean, if you really were a bad kisser, I guess we could practice a bunch until you got it right.\" There was no way someone with lips like Miranda's could be a bad kisser, but my mouth had started me down this path so there was no going back now.\n\n\"In your dreams,\" she snorted, laughing even harder. I have to a admit. I loved the sounds of her laughter. That didn't stop my disappointment when she moved back to the porch and sat down. The worst part was that I had nobody to blame except myself.\n\n\"Well, that's true,\" I admitted. \"Pretty much every night since I saw your splayed out on the lawn my first day here.\"\n\n\"I was not 'splayed out', you pervert! I was playing soccer with my brothers and sister.\"\n\nI knew Miranda was right, but as I looked at her, I felt the same gut punch I'd felt when I'd been spying on her from atop Gramsy's roof that first day. We'd grown close since then and shared a lot during our late-night conversations. So much so that I sometimes forgot just how hot she was. I mean it was impossible not to be aware of her beauty, but that was different.\n\n\"You remember it your way. I'll remember it mine.\" I couldn't stop my grin, not that I really wanted to in this situation.\n\nThe truth was that there was a good chance I would have been tongue-tied if I'd met Miranda for the first time during this visit. Her curves seriously got to me when I allowed myself to notice them. The fact that there as so much more to her than that was...well, Heaven. That's how it felt to me anyway.\n\n\"You're looking at me in that way again.\" Mira was no longer laughing. In fact, there was the beginning of a fire in her deep, dark her eyes than sent warmth through me to all the right places.\n\n\"I really wish I could kiss you right now.\" My voice was a little thick, but at least I hadn't groaned outright.\n\n\"Me too.\" Miranda was standing again, but instead of moving toward me, she opened the storm door. \"I'd better get inside before we do something stupid.\"\n\n\"Yeah, maybe you ought to.\" I was dead serious. If she stayed out here much longer, I'd probably finally figure out how to shut up. I was sure keeping my mouth busy doing something else would be a big part of it.\n\n**********\n\n\"Think we'll ever go out on a date?\"\n\nAlmost a week had passed since we admitted how we felt for each other. Well, sort of anyway. Neither of us has used the L work yet, but we both knew. Every day that passed only made it more obvious.\n\nMiranda and I still met up every night and had any number of conversations over the fence during the day. We spoke on the phone if the weather was bad. Miranda and I talked a lot, but unfortunately that's all we did.\n\n\"God, I hope so!\" My frustration obvious and matched hers.\n\n\"Afraid you're wasting your time?\" We were facing each other, but we had our chairs back from the fence so we wouldn't be tempted. \"I mean, you still haven't found out if I'm a sloppy kisser or not.\" She was teasing me, again. She didn't bring up the 'sloppy kiss' comment all that often, but when it did it was always funny, if sometimes annoying.\n\n\"Don't remind me,\" I half groaned and half laughed. \"I know they say, 'All good things come to those who wait', but this is ridiculous!\"\n\n\"Right?\" she asked, letting her frustration show. \"Although, we've really only been a thing for a week now.\"\n\n\"A 'thing' are we?\" I teased her choice of words.\n\n\"Well, what would you call it?\" Miranda was watching me carefully as she asked. \"Are we even dating? Does talking to each other over this stupid fence count?\"\n\nIt was funny. She was one of the most confident girls I'd ever met, but she still occasionally needed to hear me tell her how important she was to me. I guess that was just human nature. It's not like I didn't need to hear she subtle and sometimes not so subtle hints about her feelings for me.\n\n\"We're definitely not dating.\" My comment surprising her until I added, \"Dating doesn't carry the weight of what we're sharing. I'd say we're in a relationship, a committed one.\"\n\n\"After only one week? I mean, that's like a date or two.\" I knew Miranda was happy with my answer and just having some fun with me, but that didn't mean I'd accept her logic.\n\n\"You've got that backwards,\" I explained. \"We've met every night out here for the last two weeks. Either that or we video conferenced when the weather acted up, and that's not taking into consideration how much time we spend hanging out in our yards during the day.\"\n\nMiranda tried to interject somewhere in the middle, but I kept talking over her because I wasn't done making my point yet. She clearly had something she felt was important to say, but it would have to wait.\n\n\"We even got drunk together once,\" I added pointedly. \"That's like at least fourteen dates which translates into over three months of going out.\" I stopped and let her voice whatever was bothering her.\n\n\"No way!\" Miranda blurted out. \"The first week doesn't count! I was still dating Anthony then.\" I gave her a look and she blushed, but she also refused to back down.\n\n\"Mira, I'm not saying you were two timing him. I mean we were only talking, but...\"\n\n\"One week, which is only seven dates if things were normal,\" she insisted. We were ostensibly joking back and forth, but I knew this was important to her.\n\n\"Fine, but that still translates into over a month and a half of dating. Certainly, long enough to get passed dating into a serious relationship.\"\n\n\"Even without sharing a single kiss?\" Miranda was grinning now, having as much fun with the silliness of our conversation as I was.\n\n\"Don't make me jump over this fence!\" I groaned, which of course, made her grin turn into a laugh. I sighed in frustration, but only for a moment before I joined her.\n\n\"This really is crazy, isn't it?\" Miranda asked once we were done.\n\n\"Definitely, but that's okay. At least we have each other.\" I was gratified with the reaction my words caused.\n\nMiranda had the ability to say so much with a smile. There was her happy smile, her gotcha smile and her sad smile that came out most often when we talked about her mother who she clearly missed a lot. There was her teasing smile and the one that drove me crazy every time, her sexy smile.\n\nShe had plenty of others as well. I expect I'd seen most of them these past two weeks, but the one that got to me the most was the one she was showing me now. I referred to it as the 'I love you smile', even though we never said the words to each other.\n\n\"There is that,\" Miranda said as she stood slowly. \"It's getting late.\"\n\n\"That it is,\" I agreed easily as I stood as well.\n\nWe both put on the masks we carried around our necks and moved to the fence for our nightly ritual. I reached over the fence and Mira's took my hand. We both squeezed, but only hard enough to let the other know that they weren't alone. Okay, maybe it was to do a bit more than that. It was a promise between us that we both hoped one day to fulfill.\n\nSome days we'd clasp hands for only a couple of seconds. Some days it was longer. Once it dragged on for almost ten minutes because we both needed it. We would both go inside and wash up carefully afterward making sure there was almost no chance of us spreading the virus before we removed our masks and went to sleep.\n\nIt might not have been the smartest thing for us to do, but we both needed it. Frankly, most nights, just the memory of the feel of Miranda's hand in mine usually helped me drift off to sleep.\n\n\"It's a good thing we're wearing these masks.\" The comment slipped out as I looked into Mira's eyes.\n\n\"It's safer this way.\"\n\n\"In more ways than one,\" I groaned, shaking my head. Frankly, I thought Miranda felt the same based on the way she'd said the word 'safer', but I refused to let that stop me from finishing what I was saying. \"I'm pretty sure if I was this close to you with your lips uncovered, I wouldn't be able to resist kissing you.\" I should have left it as that, but couldn't resist adding, \"Sloppy kisser or not.\"\n\n\"I am not a sloppy kisser!\" she snapped, letting go of my hand and laughing, but she didn't step back from the fence.\n\n\"Prove it!\" I teased, only we both knew I wasn't, not really. The weird part is that Miranda moved closer at my taunt.\n\nHer eyes were lit with a smile I hadn't seen before. It was something deeper than her sexy smile, but certainly related. There was an enticing mix of hunger, need, trust and a promise of true passion that was impossible to ignore.\n\n\"One day,\" she promised. \"Soon.\"\n\n\"Now.\" I almost didn't recognize my own voice as I reached out with both hands and pulled Miranda's mask down. Her eyes grew big, but she didn't pull away. I gave her more than enough time as I pulled off my own mask.\n\nMira's perfectly shaped lips called to me, and there was nothing and no one who could stop me from claiming them as my own, not even this stupid virus. Well, no one except Miranda, but she wasn't trying to stop me. Her lips parted as I moved toward her.\n\nThe fence was only four feet tall and we hugged each other over it. The feel of Miranda in my arms, even with the fence between most of our bodies was Heaven. Still, that couldn't compare to the feel of her lips pressing against mine.\n\nWe shared only one long kiss before we separated, but it was enough. The emotions I'd been feeling ever since seeing Miranda from the roof top that first day took over a part of my soul. They locked in and became part of me in a way I couldn't explain. I'd never felt this way before and never would again. I knew that with a certainly that I'd never felt before.\n\nThe intensity of my feelings was too much so I decided the best thing to so was lighten the mood. The easiest way to do that was to say a joke about her kisses not being sloppy at all, only that's not what came out when I opened my mouth.\n\n\"Miranda, I love you, and I always will.\" It was more than a statement. It was a promise.\n\n\"You'd better,\" Mira replied, but the trust I saw in her eyes belied the concern in her warning. \"Davey, I love you too. I always have.\"\n\nIt was obvious that we both wanted to kiss again, but we ended up stepping away from each other at the same time. We exchanged a sad smile.\n\n\"That was a mistake,\" Miranda added once we were far enough away from each other to chance talking again. \"Not that I regret it, but we can't do it again.\"\n\n\"You're right, but what are the odds?\" I wasn't trying to argue with her, but I couldn't see me not kissing Miranda again until this pandemic ended. \"I thought kissing each other might make it easy for us to hold out. Jesus, was I wrong!\"\n\n\"You think?\" Mira asked, letting me see her own need for a moment before she clamped down on it. \"But it's not safe.\"\n\n\"No one in either of our houses has left in over a week or is showing any symptoms of Covid 19. I know your mother has visited, but she stayed in the yard.\"\n\n\"Davey...\" Mirada began, but I cut her off.\n\n\"Please, let's not argue tonight.\" I pleased with my eyes as well as my words. \"I don't want to ruin what I'm feeling right now. Miranda, I love you and you love me. Let's focus on that for tonight. We'll talk tomorrow about how we're going to move forward.\" She hesitated, but only for a few seconds.\n\n\"Okay,\" Mira finally smiled. \"I don't want to argue tonight either, but we will talk about this tomorrow, and in the daylight where we both think clearer.\"\n\nWe stood their looking at each other for another few moments. No, longing for each other. It was almost painful, and yet, it was also the happiest day of my life.\n\n\"You know, it would almost have been better if you were sloppy kisser.\" I was happy to see my twisted sense of humor had finally returned.\n\n\"Easier,\" Miranda retorted. \"Not better.\"\n\n\"A fair point,\" I agreed, and then suddenly we were both laughing. I loved when that happened. I hoped it would continue for years to come. I figured that as long as Mira and I could laugh together, we'd be fine.\n\n\"Davey, I love you, but it's time for me to go inside. I'm supposed to be up early with Matteo. I told Papa it was time for him to sleep in.\"\n\n\"Good night, Miranda. I love you too.\" I not only loved her, but I loved the way Mira looked at me as I told her how I felt about her. \"See you bright and early.\"\n\nI went inside and washed my face and hands carefully. I went to my room and climbed into bed tired, but feeling amazing. Sleep took a while to come. I almost got up and grabbed the half empty bottle of tequila. I certainly had something worth celebrating and it would help me finally drift off, but I decided it was smarter to face tomorrow's conversation clear headed.\n\nIt's not like I didn't understand where Miranda was coming from, but I couldn't see me not trying to steal another kiss from her as long as both our families didn't leave home. She was ultra-concerned and I got that with her mom being a nurse and on the front lines of fighting this pandemic, but the more I thought about it, it just didn't make sense. Some risks were worth taking. The question was, how would I convince Miranda of that?\n\n**********\n\nIt seemed like just when I was sure Gramsy would run out of chores she'd come up with something else to be done. Today was cleaning the carpet in the living room, and of course, she just happened to have a rug cleaner in the shed.\n\nFrankly, I could almost believe that her shed was like Doctor Who's Tardis or Marry Poppins carpet bag. It was bigger on the inside than it was on the outside. Only, it was so cramped in there that if the door closed while I was inside, I started feeling seriously claustrophobic.\n\nIt was one of those grey days out so I understood why Gramsy picked an inside task, but that meant I only got a chance to see Miranda through the windows or when I walked out to the shed to grab something. I was nervous how she was taking our kiss last night. She did smile when she saw me. Miranda clearly wanted to talk and so did I, but it would have to wait.\n\nGramsy and I spread the Livingroom furniture out throughout the rest of the house. I tried to do it by myself, but she had to help with the couch. We moved that into the dining room since it was close and a straight path from the living room. My grandmother was very particularly with not just where we put the furniture, but how, so it took longer than I expected to get everything situated the way she wanted."
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "coronavirus",
        "covid",
        "pandemic",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/late-night-conversations"
}