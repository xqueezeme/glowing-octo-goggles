{
    "title": "My Little Ventrue Pt. 08 Ch. 01",
    "pages": [
        "~~Jack~~\n\n\"It's been a long time,\" Michael said, and he pushed open the door.\n\nJack, Jessy, and Damien followed. The leader of the Invictus, and the three Right Hands, together, in the home of Viktor Honors, and then later, Julias Mire. A beautiful mansion, very Victorian, with its grand entrance room and big wooden stairway with fancy railings. Hell, there was a chandelier.\n\nIt was very Viktor. It was very not Jack.\n\nMichael stepped over to the stairs, but didn't go up. Instead, he leaned back against a railing as he folded his arms across his chest, and looked at Jack.\n\n\"As you've probably already guessed, Mister Terry, your victory against the hunters has earned you enough status to own Mister Honors's home.\"\n\n\"Julias's home,\" Jessy said. She shut up pretty quick though, when her sire glared at her.\n\nMichael was an imposing man, big, tall, strong, with a shaved head, a nose piercing, and hints of tattoos here and there hidden under his suit. Piercings and tattoos on someone like Beatrice made them look punk and new age; not on Michael. On him, they seemed more like battle scars. He looked like a strange mix of a street fighter, and mafia boss, especially in his expensive suit.\n\nIn the past, Jack was terrified of him. He could still remember the night he met him, the same night he met Viktor and Maria, the same night he'd died, and was reborn as a vampire. Well over two years ago, holy fuck. Felt like yesterday, or an eternity ago. Which made the contrast in strength he felt between himself and Michael now, all the more powerful. Back then, his Beast had cowered in the presence of the elders. Now, he knew, if he had to fight Michael, he could.\n\nHe could destroy his boss, if he had to.\n\nBut that wasn't how the game was played. It wouldn't help Jack in any way to kill Michael, and not only that, Michael had a million connections. The man was smart, and probably had several contingency plans for dealing with Jack, including plans that'd be set off if Jack killed him. It was a smart idea to still fear the man. Plus, it'd only hurt Jack in the long run to kill his boss. He was an ally.\n\nUgh, he hated thinking thoughts like this. Power corrupts. At least the ravenous, insane rage and malevolence of the curse no longer infected his personality subtly. Nope, now it rode around in his head as a second personality. Lovely.\n\n\"Thank you, Mister McDonald,\" he said. \"I... I believe I know why you've been hesitant to give me this mansion.\"\n\n\"Oh?\" A small smile graced the man's lips. \"Do tell.\"\n\n\"I have no thralls or ghouls.\" The closest he had were Scully and Mulder. They waited on the mansion's rooftop as the vampires spoke, and were utterly useless in keeping a mansion in good condition.\n\nHis boss's smile grew. \"That is the primary reason, yes. Do you plan to change that?\"\n\n\"I don't know if I should. I've never given my blood to another.\" He glanced back to Damien and Jessy, who waited quietly. Damien didn't have any thralls or ghouls either, but Mekhet often didn't. They usually flew solo. Jessy, on the other hand, had four ghouls, and probably some thralls Jack didn't even know about. But she didn't have a curse to worry about.\n\nVentrue lent to thralls and ghouls more than the other bloodclans. Even the Daeva didn't rely on having an army like the Ventrue did. Until Jack started building up a host of thralls, and maybe even ghouls, he wouldn't really be a Ventrue.\n\n\"Your sire, and grandsire,\" Damien said to him, \"had ghouls and thralls. Were any of them a problem?\"\n\nJessy shook her head. \"Nope. Regular dudes and dudettes.\"\n\nSighing, Jack took a single step, and stopped. \"It's not the same. The curse was sealed inside them. It's not in me, not anymore.\"\n\nThe room went quiet, and they all stood there for a few moments. Yeah, much as they were all damn happy the hunters were no longer a threat, the curse still was. It made every conversation where it came up get kinda awkward.\n\n\"The mansion is yours, Mister Terry,\" Michael continued. \"As much as Madam Turio and I don't think it's a good idea to give it to you, you've earned it. Now, see to it that you do not insult your station. Acquire some thralls or ghouls to maintain it.\"\n\nJack nodded, and did his best to keep the sour expression off his face. He could Dominate some people and turn them into thralls, but using Dominate, especially on an innocent kine, would be like using a wrecking ball to open a screen door. The curse was liable to really hurt someone.\n\nBut there was another way to create a thrall. A serving of blood bent the mind of anyone, kine or Kindred, to liking the owner of said blood. A second serving, and they adored the owner. A third serving, and they became bound in the Vinculum, completely devoted or obsessed with their new master.\n\nTo create a ghoul was a similar process, except he'd have to infuse his vitae into his blood, to give the ghoul their special properties. Immortality, great regenerative abilities, and supposedly, even some minor Kindred ability if they lived long enough.\n\nJulias gently used Dominate to create his thralls. Viktor likely enjoyed breaking kine with the Vinculum. The stark contrast between them was a painful reminder of Jack's circumstance, and he sighed as he looked down at one of his hands. He wouldn't be able to do things the way Julias did, not until he got rid of the curse, and he had no idea if that was even possible. And doing things the way Viktor did might be dangerous. Who knew what his blood would do if he fed it to someone.\n\nIf he wanted to keep the mansion, Michael was right, he needed thralls. It would be very unbecoming an Invictus to own a mansion, and let it fall into disrepair. Image was everything to the Invictus.\n\n\"I will figure something out, Mister McDonald.\"\n\n\"See that you do.\" And with that, the big guy nodded, and left.\n\nAfter a heavy sigh, Jack sat down on the stairs, a few from the bottom. Damien and Jessy joined him, sitting on either side of him, and before Damien could say anything, Jessy pat him on the shoulder.\n\n\"New digs! Sweet.\"\n\nJack frowned at her. \"Your sire's right. I can't keep a big fucking mansion unless I'm willing to... you know.\" So much easier to keep a nice, big apartment in good condition, than a fucking mansion. He hired a cleaner to take a trip through his place once a week, and even that was unnecessary. A mansion was a completely different beast, and this one had some dark secrets that demanded it be tended by thralls and ghouls, not hired help.\n\nThe Gangrel shrugged as she looked around. \"Is this an ethics thing? You know there's plenty of humans in the city you can convince to accept the Vinculum before they've even had a taste, right? Just dangle the carrot of immortality in front of them, and bam, you have a thrall. If they're good at their job, upgrade them to ghoul. If they're good at that, someday, sire them.\"\n\nGroaning, Jack got up, and started down the right hall. Damien and Jessy followed, and he opened a door that led further into the house. He knew his way around the mansion, a little at least, enough to know how to find things like the kitchen, some of the reading rooms, guest rooms, recreation rooms. They were all absurdly fancy. Made him think of Disney's Beauty and the Beast, the interior of the castle in the cartoon movie.\n\n\"I can't say I really like the idea of doing that,\" he said, drifting from room to room. \"I mean, yeah, I get it, I'm not human anymore and I need to stop thinking of myself as one. But even then, I don't know what'll happen if I give a kine my blood.\"\n\nJessy shrugged as she followed behind him. \"You can just give it back, you know; the mansion, I mean. No one expects a vampire your age to manage a place like this. You're what, three years embraced?\"\n\n\"Not even.\"\n\n\"Well there ya go. If anything, Michael gave you this mansion so you'd try and own it, fuck up somehow, and then he'd get to knock you down a peg on the social ladder.\"\n\nAh, right, the Danse Macabre. Michael wasn't his friend, not really, and Jack would be stupid to just blindly accept anything the man did for him.\n\n\"Yeah, you're right. I'll... think of something.\" He picked a random room, one with fancy couches and fancy tables and fancy curtains, and threw himself onto a couch, on his stomach, face down in the cushions.\n\n\"How did last night go?\" Damien said.\n\n\"Yeah!\" Jessy jumped onto the couch with him, and didn't bother to control her landing. Her ass drove straight down into his back, and he yelped as he flopped like a fish.\n\n\"It... it went well, I guess,\" he said, frowning up over his shoulder at her. She didn't move, and grinned down at him.\n\n\"Better than well, yeah? That Elaine chick was totally into you.\"\n\nDamien smiled slightly, but shook his head. \"I'm not sure it's simple attraction, Jessy. I got the impression she knew Jack, or maybe, knew something about him.\" Subtle smile unwavering, Damien crouched down by Jack's head. Pinned as Jack was, it almost felt like he was a captive, being interrogated. \"And it looked like you knew her too, Jack.\"\n\nJack rolled his eyes, and let his cheek collapse against the arm of the chair. \"Yeah, kinda. I recognized her from the memories the curse showed me.\" No point in lying to these two, not about this. \"She's my great grandsire. Viktor's sire.\"\n\nThe other two Right Hands looked at each other, eyes wide, then stared down at him.\n\n\"Seriously?\" Jessy said. \"Holy shit.\"\n\n\"Yeah.\"\n\n\"Then, the curse?\" Damien asked.\n\n\"She's not cursed. I don't know how she got rid of it, and she's not sure either. It was hundreds of years ago, and the best she has is some journals from way back when that might help us figure it out.\"\n\nJessy got up, and eyed him, like he'd said something stupid. \"And you believe she wants to help you? Out of the goodness of her heart?\" Ok, yeah, maybe he had said something stupid. If Michael gave him a mansion as a way of manipulating him into a bad position, Elaine helping him might fit the same bill. But, why would she try and sabotage him? Made no sense.\n\nJack sat up and shrugged. \"She's Antoinette's closest friend, save for maybe Daniel. The Prince trusts her. But I'm not stupid enough to think she's come to Dolareido just to help me out. She's up to something. I don't think she's trying to ruin me or anything, but she's definitely up to something.\"\n\nNow that there was room on the couch, Jessy sat down next to him, and her grin widened. \"And?\"\n\n\"And what?\"\n\n\"And, how was last night? She looked like she wanted to fuck you.\"\n\n\"I--\"\n\n\"Maybe fuck's not the right word. She looked like she wanted to tie you up and do sexy things to you, in that mothery way Antoinette does. Strict, but tender, I guess?\"\n\n\"Hey! Antoinette does not mother me.\" He looked to Damien for support.\n\nDamien offered no support.\n\n\"No no! It's cool, Jack,\" Jessy said. \"Everyone's got their kinks. You know how many girls got a daddy kink? Hint: fuckloads. No one's judging you for having a mommy thing.\"\n\nHe facepalmed. This wasn't happening. \"I don't have a mommy kink!\"\n\n\"Come on, you can't lie to me. I bet Antoinette just loves to pamper the shit out of you, right? Smiles at you sweetly and strokes your hair while you fuck her tits? Or says you've been a bad boy, ties you up, and fucks you in a I'm-in-charge-but-I'm-gentle kinda way?\"\n\nHe raised a hand, finger pointed. And, lowered the hand. \"Let the record show, that at no point have I ever called her mom, or mommy, and she's never called me son.\"\n\nDamien choked on a laugh, and Jessy didn't bother trying to hide her laughter.\n\n\"Ok ok,\" she said. \"I believe ya. So, Antoinette's friend, Elaine. She join ya?\" He rolled his eyes, but nodded. \"Dude, that is epic. Two elders in the bed? The two of them combined have probably seen more sex than God. Or, you know, Satan.\"\n\nDamien coughed, bothered by the 'God' comment, but watched and listened, evidently interested.\n\nJack offered him a knowing glare. If he wanted to, he could call out how at least a few dozen people had seen him fucking Fiona last night. The glare was enough though, and Damien coughed again as he looked away.\n\n\"Ok, yes, I admit it, Antoinette loves to pamper me. And she and Elaine are very similar, and... enjoy doing a lot of things together.\" A lot lot lot of things.\n\n\"Knew it,\" Jessy said. \"Bet you spent the whole evening being smothered in giant boobs. Christ that Elaine is stacked. Makes a girl envious.\" She frowned down at her own boobs hidden inside her suit, and Jack rolled his eyes. Jessy had large breasts, especially for a woman as fit and muscular as her. Just, not as large as Elaine's.\n\nHe stuck his tongue out at her. \"And you? Still failing to get more legs in your bed?\" Welp, if Jessy was going to steer the conversation into sex, like she so often did, he was going to tease her about her own, failed attempts to corrupt Eric.\n\n\"... yes. The dude is just thoroughly uninterested in indulging those fantasies I know damn well every man has.\"\n\nJack shrugged at that. \"I mean, yeah, not gonna lie, multiple girls with one guy is pretty awesome, but like I've said before, some of my best nights with Antoinette are the best specifically because we enjoy each other without Ashley or Julee... or Elaine now, I suppose. We can be romantic. Not that we're not romantic when they're with us, but it's much easier to be very romantic and intimate when alone.\"\n\n\"Ugh, I suck at this romance thing.\" She threw up her hands before letting her arms collapse on her knees with a slap. \"Like, how the fuck do you... do the romance thing? I mean, I hang out with Eric all the time, but I don't really do lovey dovey.\"\n\nJack smiled. That wasn't true. Much as Jessy was a very outgoing hornball who struggled with the quieter aspects of socializing, and had a somewhat masculine personality, that didn't mean softer parts of her didn't come out. When Julias died, Jack had seen her express them in her own, strange ways. And Eric was a smart guy. He probably picked up on them, in ways Jessy didn't even know about.\n\n\"How... how do you know if you love someone?\" she added. Both guys froze, and she threw her hands up again. \"I've been seeing Eric for a while, right? A long while, longer than I have any other guy. I mean... fuck, I don't know. I don't do dating! I just know that I want to keep him. Hell, I'm even trying to help his dad get out of the hospital.\"\n\n\"How?\" Damien asked.\n\n\"Gonna show him my tits if he manages to get his lazy, fat ass together.\"\n\nDamien and Jack facepalmed, in unison.\n\nJessy frowned at them. \"And Eric and I have said... like, almost said the words, you know? It's just hard! I don't know what the fuck to do.\"\n\nDamien held up his hands and took a step back. \"I'm the last person to ask. My relationship with Fiona is still new, and I know less about romance than you.\"\n\nThat left Jack as the only one with any experience in this area. Except his relationship was anything but normal, even relative to Jessy and Damien's, and for him to describe how love felt was like trying to describe a color someone had never seen.\n\n\"When I said the words to Antoinette, it was after I killed Lucas.\" He glanced to Damien, and caught the man's eyes looking down at the mention of his sire. \"It was when I realized that I couldn't live without her. Antoinette and I have a pretty strange relationship. She's so much older than me, and we connect over odd things. No way we talk about the same things you two talk about with your lovers. But, that night, I realized that if she died, I'd be devastated. I couldn't let it happen.\"\n\n\"I nearly killed you,\" Damien said.\n\nJack shrugged. \"Yeah, you did.\" That was then, an era past. \"Bygones.\"\n\nThe Mekhet smiled, but before he could reply, Jessy jumped in again.\n\n\"I... haven't thought about what it'd be like if Eric died. I mean, I have, but I haven't, you know? When Julias died, I felt so bad for Beatrice, but I never really thought about it happening to me.\"\n\n\"It won't happen to anyone anymore,\" he said before he could stop himself. \"The hunters are gone. And--\"\n\nJessy got up, and headed for the door. \"I'm going to see Eric. Dumbass is visiting his dad tonight. I should do a surprise visit, see how his pop is doing.\"\n\nDamien and Jack smiled at each other, and followed after her. Jessy probably didn't realize what she was doing right now was romantic. To her, she was just being her usual, impulsive self. It was obvious Eric liked that impulsive, aggressive woman, and also liked it when she was being impulsive and aggressive.\n\nBack at the front door, Jessy threw up her hands again, this time in a cheer as she opened it. \"Hey! No more sweeps, right? I'm going to run to the hospital, alone, for the fucking fun of it.\" And before Damien or Jack could say anything, she slammed the door behind her. Thud. It resonated, shaking the whole house, and Jessy popped her head back in a moment later. \"Holy shit, this thing really goes boom. Sorry!\" She closed the door again, and was gone.\n\nDamien and Jack laughed, and sat down on the stairs again. Jack could continue on the tour of the mansion, but he knew Damien didn't care. He didn't care, either. Just a bunch of empty rooms now, empty and meaningless. Part of him thought maybe he should have felt more attached to this place, but Julias hadn't owned it very long. All it was to Jack, was a big house that'd be a huge pain in the ass to take care of.\n\n\"Elaine is your great grandsire,\" Damien said, eyes on the door Jessy had just closed, and his elbows on his knees.\n\n\"Yeap.\"\n\n\"And she shares in Antoinette's... sexual preferences, and activities?\"\n\nJack snorted on a laugh. \"Yeah. The two of them are quite a pair. If I were human, I'd be dead.\"\n\n\"It makes me wonder how your relationship with Antoinette functions.\"\n\n\"What do you mean?\"\n\nThe Mekhet shrugged, eyes still on the door. \"Jessy and Eric have similar interests, and are at least somewhat of a similar age. Fiona and I don't, but that's mostly a case of me having done so little for half a century. She's exposing me to new things all the time. She enjoys doing it, and, I admit, I enjoy that. She has so much joy to share, and...\"\n\nAnd Damien had a reservoir of misery to shed. Jack smiled at the man, before he let his gaze drift to the door as well. It was easy to forget sometimes that Damien spent fifty years hiding and sneaking around in Dolareido, waiting for the day he could get revenge. When the opportunity had come, he'd become a lot wiser over half a century, and had seen past Lucas's madness. But, too late. The only reason he still walked the night, was Daniel and Natasha.\n\nThe man was racked with guilt, and plenty of self loathing. Fiona didn't know the meaning of those words, and was happy to pull the man up into a happier place.\n\n\"I getcha,\" Jack said. \"With Antoinette, it's... it's strange. There's a lot of things you find in normal relationships you don't find in ours. She's not interested in having fun conversations where we could trade silly stories about our pasts. She's not interested in chilling on a couch and watching a movie, unless it's profound.\"\n\n\"Those are things Fiona and I do quite a bit. Jessy and Eric too, I imagine, trading silly stories and watching movies on a couch.\"\n\n\"Yeah, exactly. But, with the Prince, I can sit down and have a conversation about... storytelling techniques, and she's instantly engaged. We'll have a back and forth about it, comparing points, and she'll counter me with examples from history. Or maybe I'll get stuck on an existential thought, you know? And when I bring it to her, she doesn't just try and humor me or stare blankly. She engages, and challenges my mind. When I bring up music, she doesn't throw up her hands with enthusiasm and squeal about her favorite band. Instead, she talks about different musicians, different instruments, different playstyles, and we compare the things that strike a chord with us.\" He didn't stop to draw attention to the pun. And Damien didn't draw attention to it either. No friend in the world is as good a friend, as one who ignores puns.",
        "\"She sounds very intelligent.\"\n\n\"Extremely. But, I still manage to surprise her. Sometimes I find a way to phrase a hypothesis she hadn't considered, and her eyes light up, intrigued. When I can find a silver lining in dire assessments about things like the future, humanity, etcetera, it makes her so damn happy. Sometimes, I can poke a hole in a philosophy she's proposed, and she'll almost bounce with joy.\"\n\n\"The Prince? Bounce?\"\n\n\"Ha, I know, right? But she will, or you know, almost, when she's with me.\" Bounce was probably the wrong word. More like, purr. \"She likes talking to me, because when we talk about things, it's both an intellectual exercise, and we both genuinely enjoy analyzing and dissecting things. Our egos don't get in the way. It's fun.\"\n\nDamien nodded. \"I think if I asked Fiona to analyze why she likes a movie, she'd... give up, in seconds. She just likes things.\"\n\n\"I'm surprised you don't want to debate with her.\"\n\n\"I... don't enjoy debating, analyzing, obsessing.\"\n\nJack raised a brow. \"Really? You're a natural at it, and you're a Mekhet. I just assumed--\"\n\n\"I'm good at it, but honestly I wish I could just... enjoy things mindlessly, like Fiona does.\"\n\nAh, yeah, Jack could understand that. He could never do it, but he could understand why someone would want to.\n\n\"And when we're not debating or analyzing things, Antoinette and I, we can just... lie down and hug each other, you know? We can cuddle,\" he dared not say that Antoinette was usually the big spoon, \"and talk about emotional things. I confide in her about all the shit that's been happening to me all the time. She confides in me about her struggles with Dolareido, about how frustrating it is for her, to try and get everyone cooperating. She...\" He laughed as he rubbed his head. \"She likes to talk about her day, and I like to listen. And vice versa. Our days, er, nights, are pretty strange compared to kines', but still, we genuinely enjoy talking about them with each other.\"\n\n\"That does sound a lot like love, when combined with everything else. Not that I would know from personal experience.\"\n\n\"You haven't been dating Fiona very long. Give it time. And it's not like you have to love her.\"\n\nDamien sighed and nodded. \"I guess. But... I don't know how I'd feel if I lost her. Never, in my whole damn worthless life, did I feel happy to wake up, until now. Is that too dramatic?\"\n\nLaughing, Jack buddy punched his friend in the shoulder. \"A little. But I can tell Fiona likes that dramatic stuff.\"\n\nThe Mekhet smiled, but it faded after a while. \"Speaking of drama... you were talking to Clara at the ball yesterday.\"\n\n\"Yeah... I was. I didn't think it was a very dramatic moment though.\"\n\n\"To everyone observing, there was drama. Your eyes--\"\n\n\"Fuck! Ugh, fuck. I should start wearing a bandage over my eyes, like Jacob. They got see-through bandages and shit, right?\"\n\nDamien shrugged. \"Yeah, maybe.\"\n\nSighing, Jack got up, and started pacing. Damien had gone quiet, obviously waiting for Jack to speak on his own. Nice of him, but now that the man had brought up that painful conversation with Clara, it quickly dominated Jack's thoughts.\n\n\"So, what do people think, after seeing me talk with Clara?\"\n\n\"They think you're caught between a rock and a hard place.\"\n\n\"Well, fuck, I mean, yeah, I am.\"\n\n\"Why? Just tell Clara to back off.\"\n\nJack walked over to the door of the mansion, and set his back against it as he looked down at the beautiful floor, and then up at the more beautiful chandelier. \"I don't want to hurt her feelings anymore than I already have. She's great.\"\n\n\"She's insistent. You'd think she'd have backed off on her own by now.\"\n\nJack shook his head. \"She thinks my relationship with Antoinette is doomed.\"\n\nThat earned a startled expression from Damien, and then, a nod of understanding. \"I can see why she thinks that, considering what we just talked about.\"\n\n\"The age difference?\" The heart of the differences between Antoinette and Jack. Sure, Damien was a fair bit older than Fiona, as was Jessy and Eric. But that didn't hold a candle to the difference between Jack and Antoinette.\n\n\"The age difference. You're so much younger than her. I get that you and the Prince connect and love each other, but... Clara's concern is warranted, don't you think? Antoinette is absurdly old. She has watched the rise and fall of nations. She's so old, Dolareido is a petri dish she's been working on for over two centuries.\" Damien shrugged and stood up. \"What happens in five years from now? Will she grow bored of you? Or will you start to crave a more... even relationship?\"\n\n\"Even?\"\n\n\"Well, Clara isn't that much older than you, compared to Antoinette. The Prince has experienced so much, that nothing is new to her. If a couple is meant to grow together, then I'm not sure how you can do that with Antoinette.\"\n\nLeave it to his friend to say what he was thinking.\n\n\"You think I could have a healthier, more normal relationship with Clara.\"\n\nDamien put up his hands in surrender. \"I don't think anything. Like I said, I'm the last person to ask about this sort of stuff. But Clara's probably thinking: Jack's dating a succubus, and even if Antoinette means well, she's so old that she's just reliving her youth, and hurting you in the long run.\"\n\n\"Reliving her youth...\" It was a line of thought he'd gone down several times, and each time, it always scared him. Was Antoinette actually in love with him, or was she just reliving her youth through him, and was addicted to that feeling? \"I don't think so.\"\n\n\"No?\"\n\n\"No. Well, I mean, she probably is, but it's no different than how I enjoy her intelligence, wisdom, and maturity. She knows a billion more things than me, about everything.\" He shrugged, opened the door, and waited for Damien to follow. \"I don't think it's the basis of our relationship or anything, though. But, I see what you mean. It's a very strange relationship.\"\n\nDamien followed him out of the mansion, and they stood at the top of the small stairway that led down to the huge driveway. In Rich Side, places like the mansion had long driveways that twisted left and right over small hills, before eventually connecting back to South Side. It was quiet. Behind the mansion was the edge of the city, and the rocks and sand of the desert. Secluded. The perfect place to be a scary Ventrue with a host of ghouls and thralls guarding his home twenty-four seven.\n\nBut he wasn't an elder. Creating and maintaining thralls was draining. Creating and maintaining ghouls was even more draining, supposedly. If he created them, it wouldn't be from his own power, it'd be from the curse. Sounded like a recipe for disaster.\n\nBack out in the night air, and without Michael to scare them, Mulder and Scully rejoined him. Each found a shoulder to perch on, and each gave Damien some inquisitive looks before taking a turn nuzzling their heads into Jack's temples. Without thinking, Jack reached into his pockets, into a hidden bag, and pulled out a little bit of oat mix for each of them.\n\n\"You owe Clara a favor,\" Damien said, smiling at the two crows, but speaking to him.\n\n\"Yeap.\"\n\n\"Know what she'll ask for?\"\n\n\"Not a clue. You... you don't think she'd ask for something like a date, do you?\"\n\nHis friend shrugged, and joined him as the two started to walk down the driveway. No need to explain, or ask, Damien just followed him as Jack wordlessly decided to go for a walk. Or had Jack decided to follow him, when Damien decided to go for a walk?\n\nTwo friends, talking about girls, and not having to say a word about where they were going. They just went. God damn, it felt nice. Even with Julias, he hadn't ever really been in sync with him to that point. Julias was a good mentor, and a great friend, a father figure, but he'd been a very different person than Jack. Damien and Jack weren't nearly as different. Hell, they were similar in a lot of ways.\n\nWhich made Damien's opinion on what to do about Clara very important to him.\n\n\"I think she might,\" Damien said. \"Maybe if there was something more perilous going on, she'd ask for a favor about that. But since things have calmed down a bit, she might ask for a date.\"\n\n\"Seems kind of dirty.\"\n\n\"Maybe. To her, she's rescuing you from a relationship with an ancient succubus, someone she assumes is just using you for her enjoyment.\"\n\n\"I really don't think that's fair.\"\n\n\"Neither do I. I trust you Jack, when you say your relationship with Antoinette has depth. But, playing devil's advocate, I can see where Clara's coming from.\" Damien stroked his chin for a second as he considered. \"Maybe spend some time with her to tell her that?\"\n\nSpending time with Clara wasn't high on his todo list. Hell, he was avoiding her. He didn't want to have a beautiful, fun woman trying to convince him he shouldn't be with Antoinette. There were too many valid points she could make, and he liked Clara lot.\n\nA week ago, Antoinette would have shot Jack down, and prevented him from going on that mission to kill Jeremiah and Angela. Clara hadn't. She'd joined him without hesitation.\n\nHe liked her more than he liked to think about.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nDamien and Jack stood side by side, deep underneath Dolareido in the abandoned tunnels. The trip wasn't nearly as stressful as it'd have been in the past, what with hunters laying traps around back when Jeremiah was still a threat.\n\nWell, there was still a little stress. This deep underground, he couldn't call the Begotten and tell them he was coming, and attempts to contact Fiona before going underground proved unsuccessful. Either she was in her lair, or she was with Azamel. Considering Damien had drained her last night, probably in her lair, sleeping a monster's sleep, or maybe passed out on her real bed. That meant Jack was about to commit a great sin: the surprise visit, assuming Azamel was in her chair. He kinda hoped she wasn't. If she wasn't around, he could just leave and forget about his responsibility of keeping peace between the paranormals. He could leave, and not worry about having a conversation with Athalia.\n\nBut, she was there. So was Mark. Athalia, on the other hand, was not. Thank god.\n\n\"Azamel,\" Jack said as he sauntered up to stand in front of the raised concrete platform her strange living room was built on. \"How are you?\"\n\nThe old woman looked horrible. The cigarette between her fingers had a long tail of ash on it, ready to be tapped onto her ashtray, and her sunken eyes stared ahead, only occasionally glancing at Jack. Her breathing was labored, and her skin sagged more than usual. She looked like she'd aged a decade in a single week.\n\n\"What do you think? Idiot child.\" She raised a shaking hand, and blew smoke. Normally, she'd have blown the smoke straight at him. Not tonight. Blowing smoke six feet was probably too much effort, based on how she looked.\n\n\"I think... you look like you're dying, Azamel.\"\n\nHis brutal honesty managed to get a smile from the old woman.\n\n\"I am. Jeremiah's ritual was partly successful, as you saw.\"\n\n\"Yeah.\" Sighing, Jack pulled himself up onto the stage. Mark got up immediately from lying on a nearby couch, but Azamel waved him down with a tiny, trembling gesture.\n\nA living room on a concrete stage. Such a horrible way to live, but then, Azamel and the other Begotten used it because it was easy to portal in and out of their lairs to here. No need for a bathroom, he guessed, if they just went into their lairs to do... that.\n\n\"I suppose you want to know how much longer I have left,\" Azamel said.\n\nDamien tilted his head to the side, eyebrow raised, and looked to Jack. Jack shook his head. Trying to be friends with Azamel would be harder than ever, after what Antoinette did, and especially now that the old woman was dying.\n\n\"No, Azamel. I wanted to thank you.\"\n\nThe old woman coughed, coughed, coughed some more, and looked over her shoulder at him, eyes a little bloodshot. \"Thank me?\"\n\n\"Thank you.\" He grabbed a simple kitchen chair, one they kept near their old, dingy couch, and sat down on it reversed. \"You've been a royal pain in my ass, Azamel, but in retrospect, you've been a greater help to me than my bosses Maria, Michael, or Viktor ever were. And everything that happened because of Jeremiah and Angela is... understandable, I guess.\"\n\n\"Understandable?\" She choked on a laugh. \"Did the Prince tell you what I was up to?\"\n\n\"That you were trying to kill Jeremiah here, in some sort of grand battle, to make your name a legend? Yeah, she told me.\" Shrugging, Jack slid the chair in closer, and eyed the woman while wearing a small smile. She didn't scare him half as much as she used to. \"But you didn't actively try and get us killed. You didn't go out of your way to hurt anyone. And, you even offered advice and information every so often.\"\n\n\"Pfft. You fucking vampires and your incessant need to fight each other over every scrap. I simply don't attempt to usurp you, and you think I deserve thanks.\"\n\n\"Yeap.\"\n\nAgain, she scoffed, and took a drag of her cigarette. \"What else did you want?\"\n\n\"I thought, maybe... you'd want to talk?\" If there was one thing, one thing in the whole world he new about old people, it was their love of telling stories to anyone who'd listen. \"Some crazy shit happened, you know? Jeremiah got his hands on, what I guess was a knife made of elephant tusks? Ivory?\"\n\nMuch as old people loved to talk and tell stories, they also weren't stupid. One glance from her told Jack she knew what he was doing, getting on her good side by luring her into telling a story. But, it also told him she didn't really mind.\n\n\"You heard the story, from Jeremiah's own mouth. And the knife, he... had on his person, hidden. It was a part of the ritual, I suppose, that it would join him, and he would use it on me while I was vulnerable.\"\n\n\"That ritual. That was... insane. So many people died.\"\n\nAzamel breathed smoke into the air after another puff. \"Heroes like Jeremiah have always found ways to do strange things, tools to allow them assaults of such. Elen was a tool.\"\n\n\"Is a tool.\"\n\n\"Ha, yes, I suppose. That snake Jacob has her, doesn't he?\"\n\nJack sighed and let his head droop. \"Yeah, but, I'll deal with Jacob. And--\"\n\n\"Jack.\" Azamel set her cigarette down, and stared at him with heavy eyes. \"Don't underestimate this thing that's wrapped itself around your insides. Don't underestimate it or rely on it. It's merged with your Beast, Jack, the very thing that makes you a vampire. It's strong, and it is not to be trifled with, by others, or by you.\"\n\nThat was painful to hear. He'd heard it before, from her specifically, but with the dead look in her eyes, it hit particularly hard.\n\n\"Thanks, again, for the warning. But, I'm not here to talk about Jacob, or even Elen. I wanted to talk about you, and what happened. Like, what happened to that knife? If Jeremiah had it hidden on him, on his physical body, then--\"\n\n\"Then S\u00e1ndor ate it. And I doubt it could survive in the gargoyle's gullet.\"\n\n\"Heh, I guess that's one way to get rid of a deadly weapon.\"\n\nLaughing, Azamel managed another puff, and tapped out her cigarette again. \"It was deadly to me, because of my past. I was... well, you heard Jeremiah. I was just a roaming fool, little vampire. Just a roaming fool, caught up in nightmares I could not understand.\" She shuddered as she looked down again. \"Do you have any idea, Jack, what it's like to roam fields of tall grass, of jungle, or savanna, in total blackness? Do you have any idea what it's like, to hear the rumble of the earth as something colossal crushes rock and tree underneath its feet?\"\n\n\"No, I don't.\"\n\n\"Neither did I. But the nightmares came nonetheless. And this... this creature, it drove me insane for years. Always I ran, and I ran, and I ran, until I went to the Middle East in search of answers.\" Another laugh quickly turned into a coughing fit, and she set the used cigarette down once the coughing past. \"I listened to the locals as they told tales about elephants, and then finally, the horrific tales of warning. I always thought elephants were cute, large creatures. I had no idea, no idea at all, how terrifying they were, before the nightmares came. And deep in the jungle, I learned... the nightmares weren't an exaggeration.\"\n\nJack put up his hands for a moment. \"Don't need to convince me, Azamel. I grew up watching nature documentaries. Elephants are terrifying.\" Lots of videos out there of elephants going on rampages, flipping cars like they were nothing. \"I suppose Jeremiah got that knife made, when he realized the origin of your Horror wasn't based on Ganesha, but real elephants. Or, rather, a horror story spun because of real elephants.\"\n\n\"Yes. But the knife was useless on its own. He needed a way to trap me and expose me. The ritual.\"\n\n\"I'm... sorry, that I couldn't stop it in time.\"\n\n\"Yes, well, all things must come to an end eventually, I suppose.\" She reached for her breast pocket of her old sweater, took out the pack of cigarettes, and fought to open it.\n\nJack snatched it from her hand. Before the stubborn woman could say anything, he snatched the lighter from her other hand as well.\n\n\"You know, you really pissed the Prince off, spying on her.\" He slipped out a cigarette, gave it to her, and flicked the lighter on. Fire, even a tiny fire like this, was vampire bane. It was to him what that strange ivory knife had been to her, what silver was to werewolves, something the universe deemed meant to kill them. The universe was a strange place with strange rules.\n\nAzamel eyed him, obviously annoyed. But after a few seconds, the annoyance faded, and she set the cigarette between her lips. He lit it.\n\n\"Sorry, if I don't like surprises,\" she said. \"Mark is good though, isn't he? Hard to detect.\"\n\n\"Yes, he is.\" Jack eyed the man, and the man eyed him back, the barest hint of a smile on his face. \"He's also very lucky to be alive. Any other city, and he wouldn't be.\"\n\n\"Perhaps.\"\n\n\"Perhaps? Antoinette is the nicest elder vampire on this damn planet, and you know it.\" He grinned at the old woman and rolled his eyes. \"What's your opinion on S\u00e1ndor? And where is he?\"\n\n\"Why should I tell you?\" She took another puff, and this time, did blow the smoke at him. He was a lot closer, so she didn't have too try hard. But he also didn't have to breathe, and the smoke past him without getting into his mouth or nostrils.\n\n\"Because I'm not your enemy. I'm your friend, Azamel. And I think you know that. Otherwise, why would you have told me about... whatever it is, sneaking around in Dolareido?\"\n\nThe old monster let out a long sigh, and a long puff of smoke with it. \"S\u00e1ndor is powerful, very powerful. And broken.\"\n\n\"Broken? Right, because of his family.\"\n\n\"Yes. Outside of that, I know little of S\u00e1ndor. He has not spoken to me more than once, since the incident, and his lair remains sealed off from mine.\"\n\n\"Sealed?\"\n\n\"We could break in, but that requires effort, and is hardly courteous to a neighbor.\" Another puff. \"He prefers to be alone.\"\n\n\"Heh, I think Jennifer is trying to change that.\"\n\n\"Whore.\"\n\nDamien laughed. He'd been still and quiet the whole time, but as the conversation went on, Jack could see his friend slowly become more comfortable with Azamel.\n\n\"And the thing,\" Jack said, \"the thing that's sneaking around in Dolareido. Other people know about it, but no one knows what it is. Is--\"\n\n\"It's still here. I stumble onto the scars it's left in the dream, every so often.\"\n\n\"Jesus. The dream, too?\"\n\n\"Yes. It's torn at the... the... fabric of reality.\"\n\n\"Now you sound like a comic book character.\"\n\nThat earned a laugh from her, and she continued to laugh, even as she coughed and smoke came out of her nose. \"I struggle to describe it any other way. Fiona has shown you the scars it's left in the Shadow realm.\"",
        "\"Yeah, but they, uh, didn't give me 'breaking the fabric of reality like a shitty comic book writer with their head jammed up their ass' kinda vibe.\"\n\nShe sighed and shook her head. \"Whatever it is that hides in the city, it tears holes in the realms. I don't know what it is, or why it does what it does, but it doesn't take a genius to understand that it does what it does, knowing full well it could lead to problems.\"\n\n\"Problems?\"\n\nShe shrugged, sucked in a hard breath between her teeth, and Jack struggled to hide a wince. Even shrugging was difficult for her.\n\n\"If you have a room, and half the room is a giant aquarium, what would happen if you started damaging the glass that separated them?\"\n\n\"That...\" He frowned as he looked down and rubbed his head. \"That... might have something to do with the azlu.\"\n\n\"Oh?\"\n\n\"Those spider monsters that showed up. Natasha tells me the Uratha mentioned that azlu like to spin web, to strengthen the Gauntlet separating the physical world and the spirit one. Apparently it's some kinda instinct thing for them.\"\n\nThe old monster nodded as she tapped ashes into her ashtray. \"Perhaps they sensed what I found. I do not know, vampire, but I do know that these tears continue.\"\n\nThe tears. He frowned as he looked down and scratched his head. Ok, hunters were gone. Next mission, figure out this mystery, which probably meant getting Fiona's help, and maybe stepping on the Uratha's toes by going into the Shadow realm.\n\n\"Thanks, for telling me. Not now, I mean, but before, when you didn't have to.\" He was tempted to offer her an olive branch, like removing the explosives the Invictus put up around the tunnels the Begotten loved. But, much as Azamel was proving helpful, she was still a threat. The Jack in him wanted to be nice, and remove that stress for her. The growing vampire in him knew better.\n\n\"You're welcome. Any other freebies you wanted, vampire?\"\n\nLaughing, Jack shook his head, but slowly, another question came to him and one he didn't want to ask. Two, actually.\n\n\"Where's Athalia?\"\n\n\"She is with that blasted man, the sheriff.\"\n\nJack blinked. Damien blinked. The two of them looked at each other, trying to find some explanation in each other's faces, but they were both confused as hell.\n\n\"Uh... is... he still with her?\" Jack asked.\n\n\"I believe so.\" A small, knowing grin said a lot more than her words. Sex implied. The monster and the sheriff were fucking, if Azamel was right.\n\nThat was a surprise. He knew Athalia and Daniel knew each other, and had gone through some shit long before Jack came around, but he had no idea it might be like that; assuming Azamel was correct. Athalia being romantic with Daniel was actually pretty awesome, if it meant the woman could find a little peace and happiness.\n\nIt was a strange image, the cold, hard Daniel, holding a likely weeping Athalia. She was such an aggressive, angry, bitter woman. But, thinking about it, Daniel might be the tide breaker she could rage against. When her rage settled, he'd still be there, unmoved, unchanged, and he'd get to see what no one else got to see: Athalia, with her guard down, vulnerable, and alone. Cue romance?\n\n\"And... and the last thing,\" Jack said, \"is...\" He waited, knowing damn well she'd interrupt him, like she interrupted him a dozen times before, and did to everyone.\n\nExcept she didn't. She stared out, not looking at anything, and took a long, slow drag of her cigarette.\n\n\"Is what I thought you'd ask before,\" she said at last, \"how much longer do I have left.\"\n\n\"Sorry, but, yeah. Horrible thing to ask, I know, but it's important. I need to know what's going to happen to Fiona, Athalia, and that jackass over there, too.\" He pointed over his shoulder with a thumb to Mark. No point in checking the man's reaction. \"They all work for you.\"\n\n\"They don't work for me. They're family.\"\n\n\"Like the mafia.\"\n\n\"No, young fool. A family. Surely you remember family?\" With a heavy sigh, she shook her head.\n\nWell, it was kinda hard to see things from her point of view, being a vampire and all. Human instinct was to socialize, to form tribes, to find safety in numbers and create groups that could protect each other, coexist, and share resources. Kindred instinct was a lot closer to that of a tiger. Territory was sacred, and not to be shared. Even now as he listened to her, he knew his human half wanted to agree with her, but the Beast in him balked at the idea.\n\n\"I remember family,\" he borderline lied, \"it's just...\"\n\n\"Yes, I know. There's a reason paranormals struggle to trust vampires, Jack. But, if you must know, I... don't know. Weeks. Maybe months. Every day, I can feel my life drain from me, a wound I can't heal from.\"\n\n\"That's awful.\"\n\n\"Yes, it is. But I have lived a long life, and I have helped many Begotten understand their place.\"\n\nMany Begotten? She was old, very old. She'd probably lived in a lot of places over the past couple hundred years, and if she treated other places like she treated Dolareido, she'd helped Begotten learn how take care of themselves. It was who she was, a leader, in a strange way. Jeremiah's ritual, and the past it'd put on display for everyone to see, had confirmed it.\n\n\"Thanks, Azamel. I mean it, you old bitch.\"\n\nShe laughed and blew some smoke at him. \"You're welcome, leech.\"\n\nHe smiled at her, and jumped off the stage to land beside Damien.\n\n\"Let's--\"\n\n\"Before you go, Jack, please speak with S\u00e1ndor.\"\n\n\"S\u00e1ndor? Why?\"\n\n\"I'll be dead soon, and I... would not have my kin be without someone strong to protect them. The gargoyle is old, and strong. He can do that.\"\n\nJack and Damien traded glances. She was right, S\u00e1ndor was strong, very strong. But he was also a quiet guy who didn't seem interested in merging with the paranormal community. Jennifer, a gorgeous woman, had latched onto him, probably in an attempt to use him to help Beatrice get over her own trauma, but the man remained steadfast.\n\n\"Reluctant leader?\" Damien said, reading Jack's mind.\n\nJack shrugged. \"Maybe. He does owe us a favor, considering all we've done for him.\" It was as good a plan as any. And besides, it didn't really make sense to let the witches get their claws in him so quickly. \"Goodbye, Azamel. I... I really am sorry, you know? That things went the way they did. I wanted to stop Jeremiah and Angela, and--\"\n\nThe old woman waved a hand, dismissing him. \"What's done is done. Now, begone, leave an old woman to her solitude.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"She's afraid,\" Damien said, once they were a ways down the tunnel.\n\n\"Yeah. She's dying, so, I mean, I can't blame her. Death is terrifying.\"\n\n\"I could preach of Longinus, if you wished? He's found a path for us undead, a way to save our damned souls, and a way for us to find purpose in our second lives.\"\n\nJack stopped, and looked at his friend. Slowly, Damien's mouth broke into a grin, and the two of them burst into laughter. Jack was, at best, agnostic, and Damien knew it.\n\n\"Speaking of. How goes the revival of the Second Estate?\"\n\nDamien furrowed his brows as he looked down and started walking again. \"It goes well enough. A few Kindred visit the cathedral regularly, and Maria has been allowed to speak to the Invictus as a whole of the Lancea et Sanctum.\"\n\n\"Sounds like you're up and running, then?\"\n\n\"In a manner of speaking. There's still... issues, from the Carthians.\"\n\n\"The fuck is Garry up to now?\"\n\n\"He's blocked me, from speaking to his covenant.\"\n\nJack grit his teeth. Damn that man. Every time Jack felt like things were going better in Dolareido, that things were looking up, that he could relax, someone mentioned Garry. Terra Den and Jeremy Long, Garry's beef with the Second Estate, it was all going to be a pain in Jack's ass. The Invictus and Lancea et Sanctum were often called the First and Second Estate for a reason. They usually ran cities together, one subservient but still cooperative with the other. According to the Prince, it was perfectly normal for the Carthians to be picking fights with both Estates in most cities, and the only reason the two Estates didn't crush them completely, was because of typical Kindred bullshit. The Invictus and Lancea et Sanctum schemed against each other as with all covenants, and secretly fought for control of the city, despite the outward appearance of cooperation. If one pushed themselves too hard defeating the Carthians, they weakened themselves and left their backs exposed to their supposed ally.\n\nBut they worked together when it came to blocking the Carthians, to a point. So, for Garry, now was the best chance he'd get at dealing with the Invictus, with the Lancea et Sanctum down and not able to block him. The only reason shit hadn't escalated to a full on war, was Dolareido's peaceful disposition, and how Antoinette forced it. In any other city, the Prince would either be an Invictus or Sanctified, and be personally invested in defeating the Carthians, while manipulating their allies, be they First or Second Estate. Sometimes the Prince was a Carthian, and those cities were supposedly quite crazy, borderline anarchy.\n\nDolareido having a dragon for a Prince was, apparently, very odd. Dragons were hands off, doing their own things and being regular Doctor Frankensteins with their secret research. In Antoinette's case, Dolareido was her experiment, or one of them at least, and she was content to let the Invictus, Sanctified, and Carthians beat on each other as long as the peace wasn't broken. Garry knew that, so, what did he hope to accomplish with Terra Den, and now getting in Maria's way with the Lancea et Sanctum?\n\nA chilling thought ran up Jack's spine. What would Dolareido be like if Jacob was the Prince? Probably like The Purge, every day of the year. Only the strong would survive.\n\n\"Has Maria brought it up at the Primogen meetings yet?\" Jack said.\n\n\"She's been hesitant. You know what the Prince thinks of the Sanctified.\"\n\n\"Yeah, I guess. But, you were a big part in helping take down Jeremiah, dude. You freed S\u00e1ndor! That's gotta have weight.\"\n\nDamien sighed and nodded. \"I'll mention it to Maria later tonight. It would be nice, if Garry got off my back.\"\n\nJack nodded, and they continued on in silence for a while. Comfortable silence. Neither Jack nor Damien were chatty types, and it was great how they could both shut up, and just enjoy silence.\n\nOnce they got back up onto the streets, Damien turned to head off in the direction of the cathedral, but stopped. He looked at Jack, struggling with something.\n\n\"Jack,\" he said quietly, and he stepped in close so the kine nearby wouldn't hear, \"I'm worried about Elaine.\"\n\n\"Yeah, me too. I know she's up to something, and it probably has something to do with the curse.\"\n\nTension eased from Damien's shoulders. \"I'm glad you're not letting your guard down with her. Does she know about your sister?\"\n\n\"My sister? I... oh, you mean... the ghost.\" Cold weight pulled Jack's eyes down, and he frowned as the memory of the specter haunting his old home haunted his damn head. \"No.\"\n\n\"Still don't think she's really her?\"\n\n\"I think it doesn't matter. She has to go.\"\n\nDamien grimaced. \"That's cold, Jack. Your mother--\"\n\n\"My mother is the one I'm trying to save. If Mary sticks around, it's going to hurt her more and more.\" It was a sad story, and frustrating because it seemed like he was the only person with enough sense to realize it. It didn't take a genius to see how badly the situation with Mary's ghost was going to end.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Eric~~\n\nHis dad was getting better.\n\nEric tried to hide his knowing grin, but he couldn't, not as he watched his dad sit his fat ass up out of bed, and actually start walking around. And under his own damn power, he managed to walk around the hospital with him. The old bastard was tough. The host of health problems, caused mostly by his weight gain, and exasperated by shit like age, stress, and atrophy, were destroying his health. But apparently the promise of getting to see Jessy's tits was enough to get him moving again.\n\n\"How's the job?\" his dad said, limping alongside him, a cane in hand. The cane had four legs, the type Eric had seen before, except there weren't four tennis balls wrapped around the feet of this one.\n\n\"Pretty good. Pay is ridiculously good.\" And it better be, considering how expensive a stay like this was at South Center Hospital.\n\n\"That Jessy lady treating you right?\"\n\nEric rolled his eyes, and continued along the hall with his old man. The evening was still young, the sun having set only an hour ago. Not exactly normal visiting hours, but the Invictus had pulled some strings to let him visit his pops whenever he wanted.\n\n\"You're just thinking about that promise she made.\"\n\nHis dad grinned at him. \"Maybe.\"\n\nEric rolled his eyes, again. \"Get well enough and I'll take you to Bloodlust. I'm sure I can find some drunk girl to throw herself at you.\"\n\n\"Eugh! A club? Son, you can't be serious.\"\n\n\"No, I'm not. It is pretty horrible.\"\n\n\"Hate working there?\"\n\n\"Nah, not really. I'd hate to go there as a customer, but working there is pretty chill.\"\n\nHis dad raised a brow as he looked at him. \"Chill? You look like you've been beefin' up.\"\n\nHeh, leave it to his dad to notice if he'd been putting on muscle. \"I am a bouncer. I should be pretty strong to do my job well.\" Course, he hadn't done much exercise since he'd changed. It seemed like the wolf in him knew the best form for his body, and was building it for him. He doubted he could sit on his ass and eat 10,000 calories every day and not get fat, but it did seem like it took very little effort these days to push his body toward new fitness heights.\n\n\"Looks like your knee is doing better.\"\n\n\"It is. The pain is minor,\" he lied. No pain at all.\n\n\"Get into any fights at the club?\"\n\n\"Eh, not really. It's pretty quiet there... except for the music.\" That damn music.\n\n\"Must be kinda dull. You ever miss being in front of the camera? Being in the ring?\"\n\n\"A little.\" Though, considering his recent reintroduction to being on camera, he was missing it more. It was fun, having an audience. He didn't expect to be doing porn like Natasha suddenly found herself doing, but that didn't mean it hadn't been fun.\n\n\"That Jessy gal looks like she could kick your ass. She ever fight?\"\n\nHe snorted on a laugh. \"She's fought plenty, but never professionally.\"\n\n\"Tough girl.\"\n\n\"Very.\"\n\n\"Think she'll treat you better than Sheryl?\"\n\nEric raised a brow as he looked down at his old man. His dad had never been under any illusion about the divorce; both Eric and Sheryl were to blame. They didn't communicate, didn't share interests, didn't get along unless the money was flowing, and by the end of it, didn't want to be in the same room. Of course Eric felt it was mostly Sheryl being a bitch, and liking him only for his money and fame, all lost when he'd hurt his knee. But time was a good teacher, and slowly but surely, he started to realize how much his own bitterness had contributed to that divorce.\n\nBut now he made an amazing salary, lived in an amazing apartment, and dated an amazing woman. It was a lot easier to look back on the past and see the error of his ways, when not currently out of his mind miserable, driving a taxi, piss poor, and dealing with a bum knee.\n\n\"Honestly?... yeah, I think she will. Jessy's an awesome woman, and I...\" And I love her. \"And I think I've learned a thing or two, from my first marriage.\"\n\n\"Ha!\"\n\n\"Think I'm kidding myself?\"\n\nHis dad shrugged as they eventually came back to his room. He waddled over to his bed, pulled himself up onto it, and rubbed his legs. Walking wasn't easy for a man as broken and unhealthy as him, but with how much better he was treating himself, it wouldn't be long before he'd be walking out of the hospital.\n\n\"I think it's dangerous to go thinking you've got women figured out. Ain't nobody got women figured out, boy, women included. You want things to work with this woman, talk to her, figure things out.\"\n\nEric sat in a chair against the wall, and smiled at his old man. For the first time in a long time, his dad didn't turn on the TV.\n\n\"The old 'communication solves everything' idea?\"\n\n\"Fuck that. Communication just helps you spot the problems before they explode and ruin your day. Only thing that solves those problems, is hard work! Relationships ain't easy. Your mother and I had lots problems, and it took work to iron them out.\"\n\nHis dad went on and on, hitting Eric with various speeches about how lovely Eric's mom had been, and how stubborn she could be. On and on, about the work they had to do to raise him, poor as they were, and how rough their neighborhood was. On and on, about how much he loved her, and it was such a damn shame she was gone.\n\nIn the past, Eric would have rolled his eyes and dismissed his dad's ranting. Just an old man, a bitter widower, sharing his woes with whoever would listen. Except now, it didn't sound like bitter ranting. The tone was the same, the inflections, the words. The difference, was Eric.\n\n\"Am I interrupting?\"\n\nEric and his dad looked to the door as Jessy stuck her head in. He'd heard her coming, even over his dad's ranting, but he was getting better at not letting his new, enhanced senses show outwardly.\n\n\"Hell nah,\" his dad said. \"How you doing, girl? My son treating you well?\"\n\n\"He is.\" She reached out, and when Eric took her hand, she pulled him up. A big kiss soon followed, but Jessy kept it short. \"And you, you old fart, you look like you're doing better.\"\n\n\"Yeah well, if the boy's getting his life together, I should too. Got a few more years in me yet.\"\n\nEric blinked. Was that the real reason his old man was finally taking care of himself? When Eric hurt his knee, and his whole life had fallen into a spiral, his dad's health had done the same. And now that Eric's life was looking better, especially romantically, his old man's health was on the up. Fuck, did his dad care about him that much?\n\nOf course his dad cared that much. Jesus, the fuck is wrong with you, Eric? Took you this damn long to realize your dad, a single man, is attached to you? You're his son.\n\n\"The deal is still on,\" Jessy said, grinning at his dad. \"Get to it.\"\n\n\"Yes ma'am.\"\n\n\"I'm going to steal your son now.\" And she did, pulling him out of the room.\n\nEric managed to poke his head back into the room for a second before Jessy got him too far. \"See you Monday?\"\n\n\"Yeah yeah, now get outta here.\"\n\nEric nodded, and disappeared around the door frame with his girlfriend. Nurses walked past, along with a doctor here or orderly there, and none of them looked happy to see Eric and Jessy. The two of them were a couple hours past visiting hours, and the staff knew it. But the staff also knew Jessy worked for Xnomina, and that Xnomina owned the hospital. They couldn't do a damn thing.\n\n\"Hard to believe that this hospital got swarmed by crows,\" he whispered.\n\n\"Ugh, the damage was insane. Dead birds everywhere.\"\n\nHe leaned in a little closer. \"And the staff just go along with it?\"\n\n\"We got a few thralls working on the staff, and high up in the chain. Shit's managed. Same with most of the big companies in the city.\"\n\n\"Invictus really control the city, don't they?\"\n\n\"I'd like to think so, but Terra Den has their fingers in a lot of stuff.\" Frowning, she took him to the cafeteria. It was well after supper, and not many people were around. Jessy found them a secluded booth by the window. \"Garry's finally figured out that money's the way to control shit in Dolareido.\"\n\n\"Think that'll be a problem?\" He slid into the plastic booth across from her, and watched her for a moment. She was in a casual suit, jacket open and shirt undone a few buttons, enough so a bit of her bra was visible. Fucking gorgeous. Honestly, given her personality, he usually expected her to wear jeans and regular shirts more often. But despite her tomboy personality, she seemed to prefer the Invictus look.",
        "Nowadays, if given a choice, he'd take a good suit too. A well tailored suit was comfortable, and looked good. He was wearing a casual suit right now, without the jacket, and he could admit to himself it felt good to look good. And that's probably what the Invictus wanted, for him to get attached to the money. Well, he was thoroughly attached at this point, and had basically forgotten about Azamel's offer.\n\n\"Yeah, it'll be a problem. First, Viktor died. Then some Invictus Kindred died, when the fucking idiots joined Lucas, got brainwashed in that weird place -- because apparently brainwashing was a thing -- and attacked the Prince. It hurt our numbers. That put the power in Garry's hands. He took advantage of that opportunity, and sired Jeremy Long.\"\n\n\"Right, right. Was Long at the ball last night?\"\n\n\"Yes, but he's been doing a good job of avoiding attention. I can't get him alone, and I just know if I talk to him when he's with Garry, I'm going to start a fight.\"\n\nGarry's new childe, Jeremy Long. Eric didn't know the man, but he did owe one of his thugs, Montoya, a lot of money once upon a time. Killing Montoya's goon Mr. Pitt, and literally eating him and his henchmen, had been Eric's introduction to the power and berserk rage of the Gauru form. Nauseating as it'd been, he could still remember the taste, and he could still remember liking it.\n\n\"How much you know about Mr. Long?\"\n\nJessy shrugged and peeked out the window. A mostly empty parking lot, with street lights shining on pavement.\n\n\"I know a lot more about Terra Den, the only real threat to Dolareido in a lot of financial districts. Long himself is pretty secretive. All I know, is that he's a ruthless businessman, practically a predator.\"\n\nA predator. Eric smirked at that as he looked down at the cafeteria table. Well, it made more sense now for Garry to sire someone like that, if the man had the instincts of a predator. Gangrels were drawn to people like that.\n\n\"Considering how things went last night, I figured everyone was getting along,\" he said.\n\nJessy snorted and shook her head. \"Vampires are fucking horrible. Lowering our guard long enough to fuck, isn't fully lowering our guard. You didn't notice? A bunch of them vamps, mid-fuck, were looking around and scanning for what other Kindred were doing, recon and assessment shit.\"\n\n\"The fuck can you learn from watching how someone fucks?\"\n\n\"A lot! You can get a sense for who's really letting their guard down, who's too stupid to watch their ass, who's smart enough to keep their eyes open.\"\n\n\"You plot devious plans in the middle of sex, don't you?\"\n\nShe laughed and winked at him. \"Only when you're going slow.\" After a few, silly laughs, she leaned in close to him, elbow on the table. \"Looking to take another stab at being Batman?\"\n\n\"Say what?\"\n\n\"You know, sneak into the Shadow realm, and clean some scum off the streets?\"\n\nEric raised a brow. \"Thought you didn't really agree with my idea?\"\n\n\"What? I--oh, you mean about what Matt and Art said.\" Sighing, she slid out of the booth, but slid back into it on his side. After a few moments to get comfortable against his shoulder, she traced a finger along the table. \"I dunno. It's not like Kindred hate kine or anything. But we're not kine, and neither are you, not anymore. It doesn't make sense to put yourself out there for no other reason than to be a good Samaritan.\"\n\n\"I... I guess. But my dad's human.\"\n\n\"Yeah, but...\" Sighing, she rubbed her cheek into his shoulder. \"I don't know how you werewolves deal with it. Vampires, we spend the first ten, twenty, even fifty years of our second lives, struggling with this issue. Eventually, we accept that we're not human anymore, and we stop feeling much sympathy for them. They're food.\"\n\nOuch.\n\n\"I... don't know if I can ever do that.\" How the fuck could he even think in those terms? Another fifty years? He'd gathered that Uratha lived a long time, maybe a couple centuries from what he'd seen of Avery, but that was nothing compared to immortality.\n\n\"I get that. And besides, I'm not against what you want to do. Sounds like fun. And I like the idea of pissing Avery off.\"\n\n\"Yeah?\"\n\n\"Yeah. Bitch is arrogant.\"\n\nEric smiled at his girlfriend, leaned down, and kissed her forehead. No need to say what he was thinking, especially since she promptly punched him in the leg for the silent insult.\n\n\"Ow.\"\n\n\"I'm different than Avery. I'm awesome.\"\n\n\"Of course.\"\n\n\"And she's probably a prude.\"\n\n\"Probably.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nElaine took one of the guest rooms meant for vampires, with a sealable door capable of withstanding an explosion. It did not have the strength of Antoinette's personal vault door, but it was more than enough for an elder to feel secure come the dawn. And besides, both Elaine and Antoinette had thralls within the tower, armed and ready to defend their masters.\n\nIt had been decades since Elaine's last visit, but her old friend fell into her routine smoothly. There were rooms that, while not dedicated to the woman's research, were easily converted to such. Secure connections to various networks the Ordo had established could be made, allowing Elaine to pursue her research, or at least access it.\n\nAnd no doubt, Elaine would attempt to continue her research, with Jack as her new focus. Antoinette knew of her friend's intentions, and Elaine knew that she knew. The issue was, whether such pursuits would be harmful to Dolareido, or to Jack. If they were harmless, then Antoinette had no reason to block her old friend's efforts. If they were potentially harmful, well, then Antoinette would put an end to her friend's experiments. It was not unheard of for one dragon to interfere with another.\n\nIt was unheard of for two elder dragons as old as them, to interfere with each other directly, though.\n\n\"Did you enjoy yourself last night?\" she asked of Elaine.\n\n\"You know I did.\" They laughed. It was true. \"I did not expect the boy's presence to be so... alluring.\"\n\n\"He pulls you into him, does he not? I get lost in his joy.\"\n\nThe two of them walked her halls, both dressed in suits and ready to work. Natasha awaited them, and Samantha would join them soon.\n\n\"And he enjoys my company, or my body, at least.\" Elaine frowned as she looked down at the floor. \"Unlike your sheriff.\"\n\n\"Daniel did seem preoccupied with Athalia last night.\"\n\n\"Very.\"\n\n\"I cannot judge the man for his tastes. I do not agree with his tastes, but I cannot judge him for them.\"\n\nElaine chuckled and nodded. \"I suppose. It is not fair of me to judge this Athalia creature. I cannot understand why Daniel would be interested in a woman so volatile and broken, but I shall do my best to leave him be.\"\n\n\"There is no accounting for taste.\"\n\n\"Indeed.\" Nodding, Elaine pulled out her tablet and checked her messages. \"Your lover, Jack. I am surprised you have become so attached to one so young.\"\n\nOh this again. Antoinette sighed and nodded as well. \"You do not approve of my tastes, then.\"\n\n\"Now that I have seen him, I am less surprised. There is an old soul inside that young body. The contrast of his youth with his attitude is beguiling, and I cannot blame you for your attraction to him.\" After a sigh, she lowered the tablet, and looked at her closely. \"But, I am still concerned over your shared love.\"\n\n\"Yes, I imagined you would be.\"\n\n\"Can you blame me, old friend? You loved Tony with all the zeal of a Daeva.\"\n\n\"That was centuries ago. And... and he was a loving man, back then, Elaine.\" It almost felt condescending, to be reminded she was Daeva, that the curse of her bloodclan would forever stir her to obsess over that which stirred the soul. Love was no exception.\n\n\"He was an artist that wooed you with his skill and passion.\"\n\n\"And Viktor? What did he seduce you with?\"\n\nA hint of a frown crossed her old friend's face. \"I was never in love with Viktor, Ann. You are quite in love with this young man, this boy, and I am concerned that you share too little in common for such a powerful relationship.\" Elaine leaned in closer, and her face softened. \"Sex and friendship are one thing, but love? You love him, I believe that. But it is such a dangerous thing, Ann.\"\n\n\"Yes, it is dangerous. But it is worth the risk.\" Antoinette set a hand against one of the doors in her maze of halls, and looked at Elaine with a somber gaze. \"I have not felt such joy in centuries, old friend. Surely you can understand why I would hold onto that?\"\n\n\"I understand, but do you not worry that, perhaps, Jack is too young to know whether this relationship is healthy for him?\"\n\nAntoinette paused for a single second, before smiling at her friend. \"That is one of the many reasons I love my little Ventrue. He has the awareness to have undoubtedly asked himself that question, and have looked for an answer on his own.\"\n\nElaine smiled, satisfied for the moment, and followed Antoinette into her primary experimentation room.\n\n\"Ah, Natasha Vola,\" Elaine said as she entered the room. \"Hard at work, I see.\"\n\n\"Um, yes, um... w-what title should I call you?\"\n\nElaine smiled as she sat at the table, covered in artifacts, laptops, and tablets. \"Officially, you may address me as Elaine, Architect of Terror, just as you are Natasha Vola, Slave. Unofficially, Elaine is fine.\" Upon the table, was the book, cover made of skin, and contents a strange, forgotten language. One of the many artifacts she planned to show her old friend.\n\n\"Slave?\" little Vola said.\n\nNodding, Antoinette sat next to Elaine, and smiled at her growing student. \"You have yet to learn any Coils, and some in the Ordo use the title Slave to refer to ones such as yourself. I prefer Attendant.\"\n\n\"I think I d-do too.\"\n\n\"Naturally. But, understand that if you are to remain within the Ordo, you will eventually have to learn Coils of the Dragon.\"\n\nThe little Mekhet nodded as she looked down, summoned some courage, and looked back to the Prince. \"I understand.\"\n\n\"Good,\" Antoinette said. \"Is that Samantha I hear running down the hall?\"\n\n\"Um, Samantha's--\"\n\n\"Here! I'm here!\" Samantha said as she swung open the door. She sat down at the table, and straightened her shoulders. \"Sorry! Not used to putting on suits.\"\n\nAntoinette smiled at her silly childe. \"It took many months before your son became familiar with them. Months more, before he was comfortable. But with time, he grew to love them, as all Ventrue do.\"\n\n\"Ventrue love presentation,\" Elaine said with a shrug. \"As do Daeva.\"\n\n\"We certainly do, but we enjoy the art of presentation. You, like a thug, enjoy the power and intimidation of it.\"\n\n\"That is hardly fair!\" Giggling and rolling her eyes, Elaine picked up one of the tablets, and grinned at the screen as she examined the footage available to her. \"Samantha, you and I have had little time to speak. A true crime. You are my friend's childe, and I would be remiss to not learn more of you.\"\n\n\"Of me? I'm nobody. Just a widow, who got pulled into a crazy world by... horrible circumstances.\" Samantha furrowed a brow slightly before looking to Antoinette. \"I thought... we were doing experiments today.\"\n\nAntoinette shrugged and nodded toward Elaine. \"Forgive my friend, dear childe. But she is the great grandsire of your son, and is thus interested to learn of the boy's mother.\"\n\nNatasha and Samantha both sat up straighter. \"W-What?\" They said together, stutter included.\n\nPoor Elaine. Perhaps her old friend had meant to sneak it into a conversation, or use the secret to toy over Antoinette's students, but Antoinette spoiled her fun.\n\n\"Your Prince speaks truly. I came to Dolareido only partly to visit my old friend, and see the latest developments in her research in ephemera. The larger part is, your son, Samantha Terry.\"\n\n\"My son? And... and the curse.\" Oh, dear childe. The woman shivered, rubbed her arms, and looked down at the table as Elaine's words ripped the joy from her. \"Does that mean you're--\"\n\n\"Hundreds of years ago, I had the curse removed,\" Elaine said. \"The... details of the event, are lost to time. I have some records that may help, and I will use them to the best of my ability to help your son.\"\n\nSamantha's joyful energy returned instantly, and she beamed a big smile at Elaine. \"Thank you! Jack's... ugh, that boy just doesn't know how to share the load, does he? Always has to do things himself.\"\n\n\"A valuable trait, in many ways,\" Antoinette added. \"Stubbornness and strength of mind often go hand in hand.\"\n\n\"So does self-destructive bullheadedness.\" Laughing, Elaine shrugged, and scrolled along her tablet. \"As any Ventrue can attest to.\"\n\n\"Then it is good I can temper that stubbornness. My love is not the child he appears. He has grown in leaps and bounds, forced by circumstance.\"\n\n\"He's growing up a little too fast,\" Samantha said. \"At least, I think he is. He's--\"\n\n\"He is Kindred now, my childe. As much as it pains me, there is great value in a vampire growing as quickly as possible. Many of us are devious creatures, more than willing to manipulate each other for personal gains.\" Antoinette leaned in over the table, and smiled at her childe. \"Speaking of devious Kindred, how did your evening with Jacob proceed?\"\n\n\"Jacob? He...\" Samantha squirmed in her seat, and squirmed all the more when she realized three sets of eyes were on her. \"He's so interesting! Scary, but interesting.\"\n\n\"Scary,\" Natasha confirmed.\n\n\"I know little of Jacob,\" Elaine said. \"He and I have rarely interacted. His circle was a small thing, when he nested in Europe near Ann and I. It remains small, here in Dolareido.\"\n\nWith a heavy sigh, Antoinette leaned back in her chair, and combed her hair over her shoulder. \"Jacob believed as I did, that if several elder Kindred cultivated a growing city in a new land, we could create a utopia of sorts. Of course, our views of the nuances of that utopia differ. Jacob is a strong believer in Darwinism, Samantha.\"\n\n\"Darwinism?\" her childe said. \"Like, evolution?\"\n\n\"In a sense. Jacob, and all members of the Circle of the Crone, believe that individuals and groups must struggle, as a natural part of our second lives. I push for cooperation, and fight for it. But that man refuses to understand that his views on our second lives, his and his covenant's, are antiquated.\"\n\n\"And this,\" Elaine said, \"is where Ann and I often disagree. She assumes our old way of life, of predator and prey, of letting the weak die and fostering the strong, will not survive the oncoming tide of technology.\"\n\n\"Technology?\" Samantha said.\n\nElaine nodded. \"Indeed. In a couple hundred years, humans will be spacefaring. Will our way of unlife survive such a change? Many Kindred fear technology, and the potential ramifications of billions upon billions of kine learning of Kindred.\"\n\n\"Would that be so bad?\" Samantha said. \"We can't all get along?\" The room went silent as, again, three sets of eyes stared at her, though this time with a gentle air of disbelief, and maybe a touch of annoyance. \"I... suppose not.\"\n\n\"Non,\" Antoinette said, \"I suppose not. Kindred must cooperate to survive the oncoming genesis. If we work together, we can find ways to keep our society a secret, even in the advent of extreme social upheavals, and total, global alteration at the hands of technology.\"\n\n\"And Jacob... doesn't?\" Samantha's eyes fell, and she tapped her chin several times. Cute as a squirrel.\n\n\"Jacob,\" Antoinette continued, \"is difficult to understand. I imagine he would happily cast the world thousands of years into the past, stripped of technology. He, like all witches and warlocks, encourages Kindred to listen to their instincts, and in extreme scenarios, perhaps even listen to dark voices that whisper to us from shadows.\"\n\nThis time, it was Vola who raised her head and stared at her. \"Dark voices?\"\n\nThis conversation had quickly grown far heavier than Antoinette had intended. But, if it would give Samantha the necessary perspective to understand Jacob, all the better. She did not want her childe getting close to the man, but to simply forbid her was not fair, to her or Jacob. And, perhaps, Samantha could succeed where Beatrice would now likely fail, lost to sadness as she was.\n\n\"One of the reasons I study ephemera, this material that exists beyond our eyes, that permeates reality in strange ways, is to understand the entities that exist beyond our eyes as well.\"\n\n\"Entities!?\" Samantha squeaked.\n\n\"Entities. Beyond the walls of existence you are familiar with, my childe, creatures exist beyond description. Natasha has ventured across the Gauntlet and into a realm of spirits. Nightmare creatures, monsters of literal fear, roam a realm of dreams, and my city. Beyond them, above and below, exists realms so grand and alien, I have struggled for centuries to scratch their surface. Creatures, or gods if you prefer, exist within these realms. And the Circle of the Crone often worship, or seek to communicate with these gods.\" Enough verbosity. \"Jacob has communed with such entities before, as many in the Circle often struggle, and fail, to do.\"\n\nSamantha stared at her for several moments, before speaking at last. \"That... is scary.\"\n\n\"So be warned, my childe. While I strongly encourage you to avoid Jacob, I will not prevent it. Jacob is a wise man, but while you understand my goals, to understand his is an entirely different matter. Be careful with him.\"\n\nThe look on Natasha's face spoke volumes. She did not understand why Antoinette allowed her childe to talk with Jacob at all. Never mind that Jacob could simply force the situation if he wanted, why did the Prince not simply forbid her childe from speaking with the dangerous man?\n\nBecause, if cooperation was to be had with her old friend, she needed to extend the olive branch.\n\nNo, that was not the only reason. While Samantha, on the surface, seemed a naive and sweet woman, she was Jack's mother. Beneath her surface, there was an anvil of strength that could survive where others would perish. Perhaps it was cruel, to let her childe enter such dangerous circumstances in hopes that she could accomplish what Jack accomplished.\n\nPerhaps, Antoinette could be a little cruel, when she needed to be."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "suspense",
        "paranormal romance",
        "vampire",
        "werewolf",
        "monster",
        "slow",
        "violent"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-01"
}