{
    "title": "The Whipped Heiress Ch. 02",
    "pages": [
        "Author's Note: All characters in this story are eighteen years of age or older.\n\n- -\n\nAccording to the slave contract I signed, I was legally the property of Karen Bowden. However, I was living on Corrina Nomikou's estate, and I had been conditioned to treat both women as if they both had legal authority over me.\n\nIn some ways, it was easier to think of Corrina Nomikou as my legal owner. I had known Keren Bowden for years and I was friends with her daughter. I had trouble remembering to address her as \"Mistress\" and I had been punished twice for addressing her by her name instead of her title. It was hard to break from old, familiar habits.\n\nOn the other hand, the first time I had met Ms. Nomikou, I was naked, gagged and bound. She treated me like her naked plaything, and I felt like it was right for her to do so. It was no problem for me to see Ms. Nomikou as a scary authority figure who demanded my respect and obedience.\n\nOn my second day of slavery, Ms. Nomikou had visitors, and Ms. Nomikou wanted to put me on display for them. Their names were Marietta Antoniou and Irini Antoniou. Marietta was a wealthy business owner and Irini was her teenage daughter...eighteen or nineteen, I forget. Anyway, I was naked and bound when they arrived.\n\nAnastasia had taken a special interest in me, and my owners had given the chauffeur permission to use me for her amusement.\n\n\"I want to try some rope bondage today,\" Anastasia informed me. \"It occurs to me that I can make your breasts look more prominent in certain types of bondage. I need you kneel on the ground and place your hands behind your back.\"\n\nI knelt with my knees far apart and my hands behind my back. Anastasia pulled out multiple lengths of rope and I slowly discovered what she meant. First my wrists were tied together. Then she took more rope, and she began to bind my elbows.\n\n\"Yes, your breasts look much more exposed and prominent with your arms bound like that,\" Anastasia said. \"With your elbows bound and your shoulders so close together, you're thrusting your breasts up and forward almost as if they're begging for attention. It's almost as if you've gained a cup size.\"\n\nThe more Anastasia tightened the ropes around my elbows, the more I hurt. I gasped and panted and felt increasingly helpless as she cruelly forced my elbows closer and closer together.\n\n\"That's extremely tight, Mistress,\" I said through clenched teeth as she pulled the ropes tighter.\n\n\"Tight enough to cause injury?\" she asked.\n\n\"I don't think so,\" I replied. \"It's just extremely uncomfortable.\"\n\nI whimpered as she continued to adjust the ropes. Anastasia liked the idea of me being in pain and she intended to make certain that I suffered. My shoulders were pulled back further and further as she tightened the ropes on my elbows more and more. Anastasia made certain to point out how my breasts become more prominent the more my shoulders were pulled back. Every time my body adjusted to the extreme bondage Anastasia was putting me in, she tightened the ropes again, causing me to gasp and whimper in newfound pain.\n\n\"You're just adjusting to life as a slave,\" Anastasia informed me when I tried to complain. \"There are slaves in this city who can take much more extreme bondage than this. You just haven't adapted to your new life yet.\"\n\nI whimpered and gave Anastasia a pleading look, hoping that she'd take the hint and be merciful, but she tightened the ropes even more. I winced as my shoulders were pulled back more and my elbows came closer to one another. Anastasia thought that the effect it had on my breasts was sexy, so she kept going.\n\nWhimpering and gasping did nothing to deter my captor. Slowly she kept tightening, forcing my shoulders back even further and my breasts thrust out even more prominently. The effect of such strict bondage was not only physical, but also psychological. The cruel and incapacitating way my arms were bound left me feeling intensely helpless. And the more helpless I felt, the more sexually aroused I became. My nipples became achingly hard and my sex spasmed wetly.\n\nMy flat abs tensed with my shoulders pulled back so far, and Anastasia rubbed her hand lovingly across my torso before tightening the ropes some more.\n\n\"Ow! Aaahhh!\" I gasped when the pain became almost unbearable. Tears welled up in my eyes and Anastasia gave me a wicked look as she enjoyed my new level of pain and discomfort. She noted how hard my nipples had become while she was tying my poor elbows and then she pinched both my erect nipples simultaneously.\n\n\"Aaaahhhh!\" I cried out as Anastasia abused my swollen nipples. I wondered what Anastasia would do to me next, but then one of the maids knocked on the door to Anastasia's room and announced that Ms. Nomikou wanted to see me.\n\nThe maid took me upstairs to her employer, however my wrists and elbows remained bound. Walking up a flight of stairs while your arms are tightly and painfully bound behind your back is a difficult ordeal. Fortunately, the maid was kind enough to keep arm wrapped around my waist as I walked up the stairs and prevented me from losing my balance or falling.\n\nThe strain on my elbows and shoulders was severe, but I adapted to the pain somewhat. My feelings of helplessness fueled my feelings of arousal and my dark sexual desires merged with the pain and created a cocktail of sensations that made the pain far more bearable, and even enjoyable in a weird, sexual sort of way.\n\nI was escorted into a drawing room where Ms. Nomikou sat with her two guests. They were chatting in Sklavian when I was brought into the room. Ms. Nomikou spoke English so perfectly and with no trace of Sklavian accent that I sometimes forgot that English wasn't her first language.\n\nWhen I entered the room, all eyes turned towards me, and I could feel the gazes of all three women as they openly examined my helpless nudity.\n\n\"She's adorable,\" Marietta said as she looked me up and down. \"She's everything I'd hoped for.\"\n\nMarietta Antoniou was early middle age, poised, authoritative, charming, and well-tailored. Her daughter was well-tailored and eighteen years old. She gave me a look that hinted at possible mischief. I suspected that she wouldn't be so well-behaved if her mother weren't there in the room.\n\n\"Katerina, you may leave us,\" Ms. Nomikou said, dismissing her maid. Then all eyes returned to me once again.\n\n\"Heather, Dear, I understand that you were whipped yesterday,\" Marietta said. \"Come here and turn around so that I can examine the marks.\"\n\nFelling a great deal of shame, I walked over to the well-dressed woman and turned around so that she could examine my buttocks and thighs. She gently ran her across my abused flesh, and I gasped. My poor bottom was still sensitive, and even a gentle touch caused me to flinch.\n\n\"Ah yes, you're still in pain, aren't you?\" Marietta asked. \"A whipping is always helpful for a girl. It removes the shock factor.\"\n\nMarietta's daughter stared at me openly and studied me like an art connoisseur studies a renaissance painting. Then she leaned forward and said, \"The way you're tied holds your shoulders back so well, and your breasts are thrust so deliciously forward. It's almost as if you're begging us to touch them.\"\n\n\"Go ahead and touch her if you like,\" Ms. Nomikou said. \"You're a guest in my home. It seems like offering to let you feel her breasts is the least I could do.\"\n\nI felt my face blush hot with embarrassment as Marietta Antoniou's daughter stood and cupped both my breasts and brushed her thumbs across my conspicuously erect nipples. I felt a throb in my loins, and I moaned.\n\n\"I think she's wonderful,\" Irini said breathily. Then she turned to Ms. Nomikou and said, \"Where on earth do you get her?\"\n\n\"She belongs to an American friend of mine,\" Corrina explained. \"She's staying her for a couple of months and sharing her slave with me.\"\n\n\"I'd love to see her whipped,\" the Sklavian teenager said as she played with my sensitive nipples. \"You do have some whips here on the estate, don't you?\"\n\n\"Of course, I do, Irini. But you sound like an excited sadist. Do you want me to whip the poor girl just for your enjoyment?\"\n\nMy sex throbbed with hungry spasms as the teenager continued to play with my hardened nipples. They were talking about whipping me, but I was so far gone into the sensations of helplessness, humiliation, and delicious eroticism that my brain could barely piece together any meaning from the words. It was as if the conversation had nothing to do with me. Only the sensations caused by the hands of the mischievous teenager had any meaning.\n\n\"I've never had a slave of my own,\" Irini replied sadly. \"And I do love watching those lovely marks spring up on a girl's skin. Do you really have to have an excuse to whip the girl? Couldn't you do it just to hear her scream?\"\n\n\"There is such a thing as proper etiquette,\" Irini's mother explained. \"If you are going to whip a slave, you must have a reason for it.\"\n\n\"Can't we have any fun with her?\" the teenager whined. \"She's naked and helpless and so beautiful. What's the point of having her at our mercy if we can't take advantage of her?\"\n\nIt was eventually decided that I would be taken down to the dungeon and put into suspension bondage so Irini could enjoy seeing me brought to the edge of orgasm over and over again but denied any actual orgasmic relief.\n\n\"She's on a drug that keeps her in a state of constant arousal,\" Ms. Nomikou explained. \"We'll take advantage of the slave that way. When you hear the sounds she'll make, you'll see. She'll suffer a great deal.\"\n\n_ _\n\nIn the dungeon the horribly tight ropes were removed from my elbows and wrists. For a few minutes I was free from bondage, and I took advantage of my freedom to rub the indentations on my arms left by the ropes.\n\nThen I was told to stand underneath a horizontal bar that was suspended from the ceiling.\n\nThe bar was lowered, and I raised my arms so that my wrists could be secured to it. Then I was lifted up so that my feet dangled a good three inches off the floor.\n\nTwo of Ms. Nomikou's maids then grabbed my ankles and spread my legs indecently far apart, leaving my shaved genitals pornographically exposed and vulnerable. Marietta's teenage daughter gazed up and down at my bound nudity and licked her lips. She had a predatory look on her beautiful face, and I felt a new and delicious fear grow inside of me.\n\n\"This should appeal to your sadistic instincts, dear,\" Marietta said to her daughter. \"Stick your hand between her legs and rub the poor girl's clitoris. Get her as close to orgasm as you can and then take your hands away. You'll find her responses to be quite interesting.\"\n\nMy mind was awash in fear and arousal as I hung suspended and struggling. I could feel my pussy leaking before the teenage sadist even touched me and I flinched when she approached.\n\nIrini's eyes were bright and eager as she slid her fingertips gently across my hard, swollen clit. She teased me, rubbing my pink nub slowly at first, then she worked her fingers across my aching clit hard and fast. Within just a few seconds, I was on the verge of an earth-shattering climax. Then Irini took her hand away, stalling my approaching orgasm in its tracks.\n\n\"Aaahhh!\"\n\nI gasped and whimpered and then Ms. Nomikou told the maids to spread my legs apart even further.\n\n\"I want the dear girl to be forced to acknowledge her helplessness and vulnerability,\" the dapper woman told her maids. My legs were then pulled apart so wide I could feel the strain in my inner thighs.\n\nIrini was a sadist. She took me right to the edge of orgasm, but not over. Every time I got close and started to tense up, she pulled away and left me suffering. After five or six times of this cruel sexual abuse I was reduced to tears.\n\nAt some point Irini forced her fingers deep into my vagina and she probed until she located my g-spot. She took me to the edge of orgasm again. My ability to think rationally had been stripped away and my entire existence was reduced to my dripping-wet sex. I begged Ms. Nomikou to make Irini stop, but she ignored my desperate pleading. I was reduced to trembling and whimpering as tears rained down my face.\n\nI struggled to close my legs, but the maids were too strong and all I accomplished was making my inner-thigh muscles sore and breaking out in a sweat. I hung in my bonds and writhed on the brink of orgasm as the Sklavian teenager tortured me.\n\nAs Irini pumped her fingers in and out of my sex, she grabbed one of my nipples and pulled on it painfully. Then I begged Irini to allow me to cum. I begged. I pleaded. I screamed. I bargained. But she just shook her head and told me that I was a slave and I needed to be treated this way for my own good.\n\nMy vagina was leaking like a faucet and drenching my thighs. I'd never been so wet in my life before. The maids dutifully kept my legs spread wide. With my arms bound above my head and my legs forced open, my sex was open and available. Irini commented to her mother that keeping me right on the edge of orgasm was far more entertaining than she imagined it would be.\n\n\"Thank you for letting me do this to her,\" Irini said to her mother. \"I'm having so much fun!\"\n\nAs I approached orgasmic release, Irini once again removed her hand. She told me that she liked the tremor in my voice as I begged, and she ordered me to beg once more.\n\n\"Mistress, please!\" I begged. \"What you're doing to me is much worse than you can imagine! Please let me cum!\"\n\n\"I'm enjoying this as well,\" Ms. Nomikou said. \"A wealthy heiress reduced to begging for orgasms. There's a deliciousness in watching how far she's fallen. She's been utterly stripped of her pride and her dignity.\"\n\nI moaned and whimpered as her fingers pumped my g-spot, then withdrew from my pussy as I reached the verge of orgasm once again. I trembled uncontrollably as my body screamed for orgasmic release. Crying was the only form of release that I could muster. Irini was a wicked sadist and she continued to torture me for what seemed like hours.\n\n_ _\n\nWhen Irini finally ceased tormenting me and I was released from the dungeon, I was emotionally and physically exhausted, but my mistresses gave me no opportunity to recover. I was ordered to go work in the kitchen and placed under the supervision of two of the scullery maids. They had me washing dishes. Of course, as I stood at the sink to toil away at the dishes, I was required to stand with my legs far apart.\n\nThe outlandishness of my situation was not lost on me. I was the heiress to a multi-million-dollar- fortune and I was being humiliated by two scullery maids. They wore uniforms and ogled my naked body while I labored away over a sink of dirty dishes. Of course, the humiliation of being naked and dominated by low-paid kitchen menials stoked my libido and kept me in a state of feverish arousal. My breasts throbbed, my sex palpitated, and juices coated my swollen pubic lips and my inner thighs. I desperately wanted to touch myself, but the scullery maids made it quite clear that I'd be punished if I did anything to ease my sexual frustration.\n\nThey laughed at the way that I squirmed and whimpered as I suffered, and they demanded that I keep my legs far apart and my dripping-wet pussy highly visible. They spoke mostly in Sklavian, and I assumed that they didn't understand much English. I muttered in English, miserably whining about my plight, thinking that they couldn't understand my words and then I said something along the lines of, \"I'd be happy to let these maids punish me if I could just have a few minutes to finger my aching pussy and get some sexual relief.\"\n\nBoth scullery maids gaped and me with wide eyes and open mouths and one of them said, \"What did you say, slave-girl?\"\n\nI felt my face blush hot with utter mortification and attempted to dismiss my words as insane ramblings, however, the maids weren't willing to let it go. They insisted that I had made a serious offer and they demanded the right to take me up on it.\n\nI pulled my hands away from the dirty dishes and held them up in a defensive posture. I began to back away from the maids, but one of them darted forward and grabbed my wrist. Within an instant, my arm was twisted painfully behind my back.\n\n\"Slave girl made an offer,\" one of the scullery maids accused, \"now she must live up to that offer!\"\n\nThe other maid grabbed me by my scalp and pulled on my hair, leading me over to a dining room chair. I ended up going over one woman's lap while the other one kept my left arm twisted behind my back.\n\n\"Slave girl has a very cute butt! If you offer it up to us, we will always accept!\"\n\nI ended up in a very undignified position with my head down near the floor and my ass sticking up. My ass squirmed and my legs kicked mindlessly as I grunted and squealed. I felt scared and humiliated as these women forced me to display my ass for a spanking. And then I felt the first stinging slap across my buttocks.\n\nThere was an explosion of stinging pain across my tender buttocks. The maids were delighted at the way I squirmed and screamed in pain as I was spanked. They spanked me again and again. The sound of slaps across my bare buttocks sounded unbearably loud in the kitchen and my ass grew hotter and hotter.\n\nIt was mortifying for me to go over the knees of a scullery maid and be spanked. It would have been less of a humiliation if I were to be spanked by a wealthy woman like Mrs. Bowden or Ms. Nomikou, but scullery maids were common people! I sobbed helplessly and pictured how undignified I must look with my buttocks way up in the air, my legs open and my poor bottom becoming redder and redder as common scullery maids cruelly took turns smacking it.\n\n\"Ow! Ow! Ow! Ow! Ow! Ow! Aaahhh! Aaaahhhh!\"\n\nThe maids didn't weren't spanking me with the same sort of force as Mrs. Bowden's daughter, however, my ass was already tender from being whipped, so their swats still hurt a great deal. My reactions to the pain were quite authentic. I wasn't exaggerating. I was in a great deal of pain.\n\nEventually the maids grew tired of spanking my poor bottom and ordered me to stand up. I was permitted a few seconds to run my hands up and down the curves of my abused buttocks and I tried to sooth some of the sting away before the taller of the two scullery maids reminded me that I now had permission to finger my poor, throbbing pussy to orgasm.\n\n\"You spread your legs and we watch!\" the other woman elaborated.\n\n\"Yes Mistress,\" I whispered.\n\nTo finger myself to orgasm while two lowly paid servants watched would be an extreme humiliation, however, I knew if I didn't have some sexual relief soon, I might go insane.\n\nI felt my face heat up with uncontrollable embarrassment, but I had no real choice in the matter. I spread my legs apart and then one of the maids smacked me across my inner thighs with a wooden spoon and said, \"Spread your legs wider!\"\n\nTears welled up in my eyes as I spread my legs pornographically wide and exposed my swollen pubic lips to the common scullery maids. My pubes were shaved, so there was nothing to obscure their view of my pink slit. Then one of my hands slid slowly down my flat stomach and over my venue mound. I pushed a finger in between my swollen pubic lips as the two women watched my every move with intense scrutiny.\n\nMy pubic lips were already glistening with moisture, and I pushed a finger inside of me. My hips swished and swayed and one of the maids said something in Sklavian, causing the other maid to laugh.\n\n\"You have a very cute k\u00f3lpos,\" one of the maids said. \"Dig your fingers deep into it!\"\n\nI assumed that k\u00f3lpos was the Sklavian word for pussy. I worked my fingers deep within my moist interior and I moaned as I played with myself, manipulating my g-spot and experiencing wave after wave of libidinous desire.",
        "It was embarrassing, but I spread my swollen pubic lips apart and jammed my fingers even deeper inside of me. I fingered myself roughly, plunging my fingers in deep and moaned shamelessly.\n\nit was very humiliating fingering myself like that, but I was a slave. By Sklavian law and by Ms. Nomikou's rules, these maids could punish me for being disobedient. I panted as I fingered my g-spot and pumped my clit simultaneously. I trembled as I degraded myself for two lowly household servants and I spread my legs even wider and I arched my back, putting my breasts shamelessly on display as my orgasm approached.\n\nI felt vulnerable as I felt my orgasm approaching. My knees were buckling, and my fingers were soaking wet with my own juices. I felt shamelessly lewd and indecent as I finger fucked myself for the entertainment of two kitchen menials, but it didn't matter. I was just a slave following orders. I was helpless to disobey. I had no choice.\n\nMy whole body was bathed in sweat as my orgasm reached the point of no return. I gasped and panted so boisterously I was certain everyone on the first floor could hear me. It was shameful, but I continued to finger my pussy until I was overcome with uncontrollable spasms.\n\nI was shamelessly exposed and on display at one of my most intimate moments. The scullery maids watched me intently and with cruel smirks on their faces. It was degrading to be forced into doing something so private for a crude, prurient audience, however, on a certain level I was grateful that I was going to be allowed to finally have some sexual relief.\n\nI moaned loudly as my fingers penetrated deep and stimulated delicious nerve endings. One of the scullery maids pulled out a phone and took photos and videos of my shameful display. She stood back far enough so she could get both my facial expression and my widespread legs as I thrust two fingers energetically into my soaking wet pussy.\n\nI was naked and the shameful center of attention, being ogled and videoed as I shamelessly and wantonly pleasured myself. I surrendered to my feelings of shame and degradation and fucked myself until I exploded in sexual ecstasy. I shouted and panted, and my orgasm seemed to go on for hours.\n\nAt some point my knees buckled. My legs gave out and I collapsed to the floor, panting and feeling a long series of mini orgasms, as my sex continued to spasm. My body went limp, and I laid there on the floor, panting and blurry-eyed as I looked up at the kitchen menials in a post-orgasmic haze.\n\n_ _\n\nMrs. Bowden liked the smooth, hairless look of my vulva, however, she felt that slaves shouldn't be allowed to shave themselves. She believed that it would be much more demeaning for me if she took me to a total stranger and had all my pubic hair waxed off. So, she waited until I had enough stubble to be visible and asked Anastasia to drive me to a beauty salon where they did bikini waxes.\n\nAnastasia escorted me inside, spoke to a receptionist in Sklavian for a few moments and then the receptionist got on the phone and spoke to someone else.\n\nI couldn't understand a word that was said, however, Anastasia told me that there were trained professionals in the back who had experience with bikini waxes and one of them would be out shortly. As I waited in the lobby, three women of varying ages stared intently at my nudity and seemed to be talking about me amongst themselves. The oldest of the women made a comment which I can only assume was supposed to be demeaning and the other two women laughed. The youngest of the women was a cute, slender, dark-eyed female in her late teens or early twenties. She pulled out her phone and took several photos of me as I stood there naked and blushing with humiliation.\n\nThe three women who were openly studying my naked body were taken one by one into the back to get their waxing or facials or bleaching done or whatever it was they came in for. Eventually, a young, congenial woman with Mediterranean skin, dark hair swept into t tight bun and dark eyes strolled into the lobby.\n\nSpeaking in English, the receptionist turned to me and said, \"Heather, this is Helena. She'll be doing your bikini wax. You're in good hands with her. Just be a good girl, follow her into the waxing suite and do whatever she says.\"\n\nHelena was friendly and polite. She didn't ogle me like so many other people I'd encountered since becoming a slave. She smiled, led me back to a waxing suite and told me to step inside.\n\n\"The management has a strict policy about slaves,\" Helena explained apologetically. \"I have to restrain you while the waxing procedure is done. I know that probably seems unfair and discriminatory, but I don't have any choice in the matter.\"\n\n\"I don't hold it against you,\" I said. \"You're just doing your job. And it's hardly the first time I've been placed in bondage. It happens to slaves a lot.\"\n\nHelena smiled brightly at me and said, \"That's a healthy attitude. I like it. Just get in the chair and I'll strap you in.\"\n\nHelena gestured towards a leather upholstered chair that looked almost identical to a gynecologist's chair, with knee crutch stirrups for my legs. And as Helena implied, there were leather straps with buckles that could be used to restrain my wrists, ankles, and knees.\n\nHelena was all smiles and good cheer as she buckled me into the chair, first my ankles, then my knees. She saved my wrists for last. Then Helena pushed the stirrups of the chair apart, causing my swollen pubic lips to become lewdly exposed. She smiled as she got a good look at the most intimate part of my female anatomy, and I blushed hotly under her gaze.\n\nIt seems that I'm constantly blushing since I became a slave. I don't think I'll ever get used to the eyes of strangers running up and down my naked body.\n\nAfter snapping on latex surgical gloves, Helena gave me a reassuring smile and retrieved a plastic bowl that contained hot wax.\n\nI had never had a bikini wax done before, so Helena very helpfully explained to procedure to me. Basically, she was going to apply hot wax to my vulva, allow it to cool and coalesce around my pubic hairs and then she would yank the wax away, pulling my pubic hairs out by the roots.\n\n\"Won't that hurt?\" I asked, feeling vulnerable now that I had been restrained to the chair with my legs bound lewdly far apart.\n\n\"Yes,\" Helena admitted, \"but it shouldn't be any worse than the sort of pain you're used to.\"\n\nI took a deep breath and braced myself. Slaves spend a great deal of time dealing with pain, but that doesn't mean we enjoy it. Okay, sometimes we enjoy it, but it has to be mixed in with eroticism, and even then, we sometimes end up screaming in agony when the pain is at its most intense levels.\n\nI watched as Helena spread the warm wax in between my thighs. I was pleased at the temperature of the gooey substance. It wasn't too hot, and I relaxed slightly as one of my worries had been proven overblown.\n\nAnd then I gasped as a swath of my pubic hair was ripped out by the roots. There was an explosion of pain as my pubes were yanked out and I squirmed in my bonds. Then Helena ripped out another patch of my pubic hair and I gasped again, this time even louder.\n\n\"I know, it hurts, right?\" Helena said, commiserating, \"But it'll all be over in a few minutes.\"\n\nThe congenial woman applied more melted wax to my Venus mound and then there were more jolts of red-hot pain as more of my delicate hairs were ripped out. This time my pubic lips were pulled up and slightly apart, making me feel more exposed and vulnerable. There was another flash of pain as Helena ripped out more of my pubic hair, however, the pain was becoming mixed with eroticism and my sex pulsed wetly.\n\nHelena smiled encouragingly at me as she spread my legs even further apart. She told me that I was being a good girl and that she was proud of how well I was dealing with the procedure. Then she stood between my open legs and applied more hot wax to the tender flesh of my pussy.\n\n\"Aaahhh,\" I gasped. The wax felt more hurtful now that my pubic area was sore and reddened. I looked down at my crotch and my entire genital area looked inflamed.\n\n\"Ooh, a little sensitive, are we?\" Helena asked. Then she proceeded to tear another patch of wax off and I let out a girlish yelp of pain.\n\nI was feeling helpless and vulnerable and then Helena produced a small, plastic jar of white cream and smoothed some of it across my pained vulva.\n\n\"Oooooh,\" I sighed as I felt a warm, numbing sensation soothe the pain.\n\nIf she had continued to rub that cream in for another minute or two, I'm certain she would have rubbed me to orgasm, however, she stopped after a few seconds and applied more wax to my sensitive loins.\n\nThe hot wax coated my pink slit and the heat from the wax merged with the heat within my sex. I felt a strong urge to reach down and finger myself to orgasm and then Helena spread my legs even further apart, leaving my pornographically exposed.\n\nThere was additional hot wax added and more of my tiny, delicate pubic hairs were ripped out. The pain was agonizing, but then there was more soothing cream rubbed in.\n\nEventually, hot wax was poured and molded across the flesh of my lower pubic lips and down across my anus. Once again there was pain as the wax was ripped away and the sensation of the flesh around my asshole being pulled taut. My sex throbbed with hungry spasms, and I desperately wanted Helena to thrust her fingers inside of me, but she just smiled and rubbed more of the white cream into my tender skin.\n\n\"You've been a brave girl, Heather. I'm proud of you,\" Helena said as she inspected my inflamed pussy. A few hairs remained here and there, and she proceeded to tweeze them out, one by one. Each tiny tug caused an agonizing twinge of pain.\n\nThen, Helena pulled gently on a stray hair next to my clit and I moaned in half pleasure, half pain as she plucked it out. Then she found another hair to pluck, and I yelped in pain as it was yanked out by the roots. Helena licked her lips and ran a latex-covered finger along my slit. Then she yanked out another tiny hair near my swollen clit and the pain felt both agonizing and exquisite.\n\n\"We're finished now, Heather,\" Helena informed me with a friendly smile. I'm going to go back out to the lobby and tell your friend she can take you home.\"\n\nI was left there, bound to the chair in a state of heightened sexual need, breathing heavily and desperately wanting Helena to come back and touch my aching pussy once again. If she would just ram her fingers inside of me, or touch my swollen clit, I knew I could reach orgasm is just a matter of seconds.\n\nIt seemed to take forever for Helena to return and I whimpered in sexual need as I strained against my leather restraints, feeling extremely helpless and agonizingly desperate for somebody to touch me. My skin was feverishly hot, and I felt one agonizing wave of desire after another between my legs.\n\n_ _\n\nAfter I was finally released from my bondage, Anastasia paid for my waxing procedure and escorted me back to the car. I thought she would take me straight back to the estate, but instead she drove to a public park.\n\n\"Mistress, why are we here?\" I asked as I looked out the window. There was no clue as to why Anastasia would take me to this place.\n\n\"Karen Bowden and Corrina Nomikou want you to spend more time being exposed to your adoring public,\" Anastasia explained. \"This place is frequented by locals and tourists alike. It seemed like a good place to put you on display. Now, get out of the car.\"\n\nAnastasia pulled a picnic basket out of the car and told me to carry it. The basket contained bottled water, some fruit, and several lengths of coiled rope. I assumed the rope would be used to tie me up.\n\nAnastasia shared her food and drink with me, then told me I had to be put on display for my adoring public.\n\nThe Park had park benches, jogging paths, bike paths and picnic tables. Anastasia directed me over to one of the picnic tables and ordered me to set the basket down before ordering me to place my hands behind my back with my wrists crossed. My wrists were tied behind my back and anchored to a rope that was tied tightly around my waist. Then, Anastasia tied a length of rope to a stainless-steel ring on my slave collar. Basically, she fashioned it into a leash.\n\nThe other end of the rope leach was tied to something underneath the picnic tale. There was enough slack in the leash that I could walk approximately four feet from the picnic table, but no further than that.\n\nAnastasia sat at the table, while I was ordered to stand with my legs apart.\n\n\"We'll stay out here for about two hours or so,\" Anastasia said. \"That should be long enough for you to lure some of your fans in for a closer look.\"\n\nI was naked, with my breasts indecently on display and my legs spread pornographically wide. It didn't take long for my naked body to begin attracting attention. Some Joggers rubbernecked as they jogged past. Others stopped jogging completely and approached me for a closer look at my shamelessly exposed naughty bits.\n\nThe joggers were the first to notice the naked girl in the public park. Then, the bicyclists realized that a young, attractive woman had her tits and ass on display, and they coasted towards me to stare openly at my naked body. Both men and women came over and chatted with Anastasia while their eyes fixated on my boobs or my inflamed pubic lips. They spoke in Sklavian so I can't understand a word they were saying. I was silently grateful. If I could understand Sklavian, I'd probably have felt even more humiliated.\n\nOne woman playfully slapped my ass right before she walked away. I glared at her when her back was turned and then I heard a woman's voice speaking English.\n\n\"Heather? Heather M\u00e4dchen? Is that you?\"\n\nHer accent was American, and she knew my name. I suddenly felt both feverishly hot and shockingly cold at the same time. My worst fears were realized as someone I knew had seen me naked and bound with a slave collar locked around my throat.\n\nFor a moment my heart thudded frantically in my chest, and I felt even more helpless and vulnerable than before. I turned to see who had called out my name and saw a blonde woman in a black sheath dress. She had high cheekbones, intense eyes, and a lopsided smile.\n\n\"Grace?\" I asked as she walked towards me and looked me up and down. She was obviously shocked to see the daughter of Mallory M\u00e4dchen displaying her naked body in a public park. I felt helpless and embarrassed.\n\nAnastasia was almost as surprised as me that I'd run into someone that I knew from my pre-slave days. She turned to me and asked, \"Do you two know each other?\"\n\nI must have blushed three different shades of red as Grace assessed my naked body, and I turned to Anastasia and said, \"This is Grace Fuller. She's a landscape designer who designed the water features at my mother's home.\"\n\nThen, Grace had her own questions. She stood remarkably close, gave me and intense look and said, \"Heather, what's a nice girl like you doing, flashing her naked body in public?\"\n\n\"I've been enslaved,\" I replied, feeling my blush deepen. \"Legally, I'm not allowed to wear clothes.\" My humiliation increased as I realized my nipples were hard and erect, and Grace was standing so close there was no way she could fail to notice.\n\n\"So, you signed a slave contract?\" she asked, \"of your own free will?\"\n\nI squirmed with embarrassment and helplessly sighed. I admitted that I'd signed a slave contract and that no one had forced me. I told her that I was now the property of an American woman named Karen Bowden.\n\nGrace's eyes got wider and wider the more I told her about my situation and then she asked, \"Does your mother know about all this?\n\nI blushed even deeper and averted my eyes. It was a sensitive subject that I didn't want to talk about. Then, Grace pulled out her phone and began to take photos of me. I was naked and bound with ropes and Grace took photo after photo of my naked humiliation. I wanted desperately to grab the phone from her hands, but my arms were bound helplessly behind my back.\n\n\"Grace!\" I snapped. \"What are you doing?\"\n\n\"I was just thinking that Mallory should know that her only child is in Europe, being led around on a leash and exposing her naked body to total strangers.\"\n\n\"What? No!\" I shouted. \"You cannot tell her any of that!\"\n\n\"I'm pretty sure I can,\" Grace countered. \"I know Mallory wouldn't want you to keep something like this a secret from her. She wouldn't want me to keep something like this a secret from her either.\"\n\nI panicked, and I promised to do anything if Grace would keep her mouth shut and never tell my mother anything about this. I got down on my knees and begged her. Grace seemed to enjoy having a wealthy heiress kneeling in front of her and begging. She put her phone back in her purse and said, \"Okay, I'm intrigued. What can you offer me?\"\n\nI tried offering her $20,000.00, but Grace knew that slaves aren't allowed to have access to money or personal property of any kind. I wouldn't have access to any of my credit cards or bank accounts until my sixty days of slavery were over. And Grace wanted some sort of immediate reward for her silence.\n\nThen Anastasia inserted herself into the conversation and said, \"What about sex?\"\n\nGrace and I both turned to look at Anastasia.\n\n\"You way you keep ogling Heather, you're obviously attracted to her,\" Anastasia said to Grace. \"And I can tell you from personal experience, Heather is very skilled at using her tongue to please a woman. You'd be a fool to pass up the experience.\"\n\nGrace had a smoldering look in her eyes. She seemed to consider Anastasia's offer for a few moments and then said, \"It's a tempting offer, but where would we do it?\"\n\n\"Heather is living on Corrina Nomikou's estate during her term of slavery,\" Anastasia explained. \"I'll be taking her there in a few minutes. If you'd like to join me, I'm certain we could find you a room where you could enjoy Heather's skills at Sapphic lovemaking in complete privacy.\"\n\nThere were certain social niceties that needed to be observed before Anastasia and I could have sex. Ms. Nomikou had to be informed that we had brought a guest into her home. And then Ms. Nomikou invited her to have coffee in the drawing room.\n\nAfter I was untied, I ended up serving coffee to Mrs. Bowden, Ms. Nomikou and Grace Fuller. The three women looked elegant and relaxed as they sat, sipped coffee, and chatted. Meanwhile I felt degraded and exposed as I stood there naked and served them.\n\nMs. Nomikou was a congenial host, making Grace feel welcome in her home and showing polite interest in her stories about life in America.\n\nMrs. Bowden was friendly and charming. She complimented Grace on her shoes and bonded with her over clothes.\n\nAt some point, the conversation turned, and Grace asked Mrs. Bowden how she managed to get a respected, wealthy woman like me to sign a legally binding contract that would force her to be constantly naked, sexually objectified and degraded in a land seven-thousand miles away from home.\n\n\"Not too long ago, Heather and my daughter were playing bondage and discipline games in my home,\" Mrs. Bowden explained. \"Heather had hired an actress to pretend to be her mother. The actress in turn hired my daughter to discipline Heather for her underage drinking.\"\n\n\"Oh, did Heather have a drinking problem?\" Grace asked.\n\n\"Heavens no,\" Mrs. Bowden replied. \"Heather was a closeted lesbian and a secret masochist. She wanted dominant women to strip her naked, subject her to strict discipline and sexual abuse, but she was too embarrassed to tell my daughter the truth.\"\n\n\"So, she concocted an elaborate ruse and claimed her mother was some sort of strict disciplinarian?\"",
        "\"Exactly!\" Mrs. Bowden replied.\n\nThere was a long silence after that. It was finally broken by Grace when she said, \"I'm not expert on slave etiquette, but shouldn't Heather be punished for lying about her mother like that?\"\n\nThere was another protracted silence. Mrs. Bowden and Ms. Nomikou seemed to be uncertain how to answer.\n\nEventually Ms. Nomikou replied, \"That's something of a grey area where slave etiquette is concerned, dear. Since she perpetuated that fraud before she became a slave, her current overseers could forgive her for that offense.\"\n\n\"I still think she should be punished for that,\" Grace replied. \"Or maybe I'm just looking for an excuse to punish her. One of the main reasons I take my vacations in Sklavia is because I love to see naked girls squirm and suffer as they're punished.\"\n\n\"I quite understand, dear,\" Ms. Nomikou said. \"A great deal of our tourism is based on foreigners that delight in seeing naked girls punished.\"\n\n\"Naked boys too, I think,\" Mrs. Bowden replied. \"I've seen a lot of male slaves out there as well.\"\n\n\"Of course,\" Ms. Nomikou conceded. \"We want to attract as many tourists as possible, so we have something to offer for heterosexual women, lesbians, gay men, straight men etc. We try to be inclusive.\"\n\n\"When you punish Heather, I would like to recommend impaling her ass. She seems to enjoy being spanked, but she dislikes having her anus probed. Even if you ease things into her ass gently, it makes her feel helpless and panicky.\"\n\n\"Good to know,\" Grace said as a wicked smile spread across her face. \"Do you have anything phallic that I could use violate her tight, virginal asshole?\"\n\nMuch to my dismay, Corrina Nomikou was able to accommodate Grace's unusual request. A servant was summoned and told to fetch a bottle of silicone-based lubricant, a box of latex gloves and the largest dildos she could find. Much to my surprise, the maid didn't find this request to be unusual or surprising.\n\nIn short order, the maid came back with a tray that contained anal lube, latex gloves and dildos of alarming thickness. I squirmed and told Mrs. Bowden that the girth of those things was too much and that they'd never be able to get them inside of me.\n\n\"Oh, don't be so negative,\" Mrs. Bowden said. \"We have to at least try!\"\n\nThe maid requested permission to stay and watch as my tight anus was stretched out. I silently and desperately hoped that they maid's request would be denied, but for some reason, Mrs. Bowden and Ms. Nomikou invited her to stay.\n\nWith that settled, Grace ordered me to stand against the far wall and keep my bare bottom facing towards her.\n\n\"Your ass is delightful,\" Grace said as she stood behind me. \"I fell in love with it the instant I saw you from behind. It's almost a crime to cover up something this beautiful with clothes.\"\n\nThen I felt her breath on the back on my neck and her hands on my buttocks. She squeezed my naked buttocks, fondled them, caressed them and pinched them. Even if she hadn't told me that she loved my buttocks, the way that she spent so much time tending to them would have clued me in.\n\nI silently hoped that Grace would enjoy fondling my ass so much that she would forget about sticking things in my anus. But, after two or three minutes, she released her hold on my naked buttocks and said, \"Heather, place your hands flat against that wall and spread your legs. Arch your back and stick your bottom out as if you were offering it to me.\"\n\nI took a deep breath and obeyed her commands. I'd been ordered to assume this position before and I found it to be awkward and humiliating. With my hands uselessly pressed against the wall and my legs spread obscenely far apart, I feel helpless, defenseless and exposed.\n\nThen I heard Grace snap on a latex glove. After that, she stood alarmingly close behind me and whispered in my ear, \"Your perfectly shaped ass is hypnotizing. I can't stop looking at it, and I am willing to use any excuse I can think of to touch it.\"\n\nAnd then to emphasize her point, she swatted my right buttock hard, three times in rapid succession.\n\n\"I even like the sound of my hand smacking your backside. That loud smacking sound is very agreeable.\"\n\nI looked over my shoulder and said, \"Thank you, Mistress.\"\n\n\"No looking at me now,\" she ordered. \"Place your forehead against the wall and stick your ass out. Now, spread your legs further apart and arch your back.\"\n\nWhen I had presented my naked buttocks in the manner she required, I heard her say, \"Ah, that's much better. You look perfect now! Splendid!!\"\n\nThen she smacked me hard on my left buttock.\n\n\"Ow!\" I exclaimed, and then I felt cold, oily lubricant being drizzled in between my butt-cheeks and smeared by Grace's finger. I whimpered helplessly as I felt a lubricated fingertip move in a circular motion, across the delicate surface of my anus.\n\nI felt panicky and humiliated with my legs pornographically spread wide, my bald pubes indecently on display and one of Grace's fingers pushing firmly against the exposed, tender flesh of my pink anus.\n\n\"Don't tense up,\" Grace ordered. \"When I push my finger inside of you, your asshole needs to be relaxed. If you're tight, it's going to really hurt.\"\n\nRelaxing my sphincter so Grace could shove her fingers into my ass was a difficult order to follow. I have something of a phobia against anal penetration, so the mere thought of being anally impaled made me nervous. I made a conscious effort to relax my sphincter muscle and then I felt Grace's finger slip inside me.\n\nI wriggled against the invading digit. The finger probed even deeper. and I groaned as her finger twisted, probed, explored and wriggled around inside of me. I moaned and felt an overwhelming sensation of helplessness and vulnerability. My legs trembled and I groaned helplessly, but somehow, it felt delicious the way I was forced to be naked and helpless for the stern, demanding landscape designer.\n\nI squirmed and whimpered. Grace enjoyed my reactions, but she had other torments she wanted to try on me as well, so she slid her finger out of my tight orifice and stripped off her latex glove.\n\n\"We have two dildos here,\" Grace announced. \"One is silicone, the other stainless-steel. Which one should we use on her first?\"\n\nI groaned at the question. Both dildos were massive and intimidating.\n\nMs. Nomikou and Mrs. Bowden were both interested in seeing the stainless-steel dildo forced into my tight ass and so Grace proceeded to smear copious amounts of greasy lubricant all over the gleaming, metal phallus. I moaned again and my legs trembled as I awaited my fate.\n\n\"Relax, dear,\" Ms. Nomikou said to me in a reassuring tone of voice as Grace prepared to rape my tight anus. \"I'm sure it can't be that bad.\"\n\nThe maid pulled my buttocks apart, lewdly exposing my anus and the cold, rounded head of the metal dildo was pressed against my anus.\n\n\"Aaaahhhh!\" I exclaimed as Grace forced my asshole open abnormally wide. The way she was stretching it was hurting me.\n\nGrace pushed the fat cock deeper into my tight channel and I whimpered and panted. Grace, Mrs. Bowden, Ms. Nomikou and the maid all agreed that the sounds I made as my ass was raped were extremely entertaining.\n\nAnd as Grace forced the thick, stainless-steel shaft into my ass, my poor anus was stretched open painfully wide, and I whimpered.\n\n\"This is what bad girls get,\" Grace informed me as she thrust the intimidating cock even deeper inside me. \"Bad girls get punished. Do you feel punished, Heather?\"\n\nThe massive phallus forced my tight orifice open wide. Accepting the terrible girth of the thing seemed impossible at first, but somehow with twisting, pushing and copious amounts of lubricant, Grace impaled my ass on the intimidating monster.\n\n\"Yes, Mistress!\" I replied as I felt the horrible thing inching deeper until I could feel its entire bulk disturbingly inside of me. It felt like an outrage that this working-class woman was deeply spearing my delicate rectum with her metal weapon. At least when Mrs. Bowden or her daughter abused me, I was being abused by a wealthy and respected member of the upper classes. For me to be suffer at the hands of a mere landscape designer degraded me and brought my status down much lower.\n\nI slipped into a shameless, mindless state as Grace's thick lance ruthlessly violated me. My muscles tightened reflexively, attempting to repel the invasive intruder, but the stainless-steel monster was thrust inside of me again and again, wearing out my muscles until all resistance was impossible and I surrendered to Grace utterly."
    ],
    "authorname": "allison22",
    "tags": [
        "bikini wax",
        "cfnf",
        "edging",
        "forced anal",
        "forced nudity",
        "legal slavery",
        "lesbian femdom",
        "orgasm denial",
        "public nudity",
        "spanking"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-whipped-heiress-ch-02"
}