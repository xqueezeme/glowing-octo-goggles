{
    "title": "The Painting",
    "pages": [
        "This story is non-erotic. There is no sex in it, not even a mention. It's a story about a man who got a kick in the teeth from life. How he reacted to that, and a path that he found back. The big C is a real bitch, and some of us have had to find a way to put things back together. Or to deal with the loss of our loved ones. In a way this is a story for all the people who've had Cancer and found their own way back to life. \n\nThere's very little dialogue in this story, it's all in the mind of one man. The hunt for his path. \n\nI hope you enjoy. \n\n***** \n\nOn Face Book one day, I found out that a good friend of mine had died. At least he'd been a good friend at one time. We'd done a lot of climbing hard rock, drinking beer and lived a lot of life together. In all told about fifteen years worth. I guess I'd lost him with all the other parts of my life, when everything fell apart on me. It had been almost two weeks since he'd passed away, when I'd found out about it. I might even have a death announcement in that pile of junk mail, bills, and stuff I'm avoiding. Part of why I missed finding out about his death was his age. He's about ten years younger than I am. Way too young for me to even think about him dying, let alone looking for it. I guess medical problems and the big C respect no one. \n\nI've sure had firsthand knowledge of that fact! It's part of the reason that I'm in this cave of my life. The big C for me too, the loss of my mobility. The loss of my job, the loss of my wife. Hell it feels like there's not much of me left. \n\nBoth Dennis and I were alike in many ways. We took care of ourselves; no one did that for us. We took care of our own too, and we're proud of it. To go back to Mom or Dad for help, or to friends. No way, you did your own work. If you went hungry, well you did, until you fixed it. After high school, you got your own place, paid your own bills. You paid your own way through school too. If you didn't have enough money to pay for next semester, well you skipped that one and hit the next. You made your own choices too. Dug yourself out of whatever mess you might have caused. Now I can't and it chaps my ass. \n\nTo say we were fiercely independent was an understatement. That's also part of the reason that I lost track of him too. When my troubles started, that's when I pulled into this cave of mine. There's only room for one in this hibernation hole I've dug for myself, only room for one in my pity party. I think that I might have broadcast that fact to everyone around me. I know that my then wife, now ex-wife heard it loud and clear. I know that Dennis would never have brought his troubles to anyone else's door either. I bet not too many people knew of his illness either. \n\nDennis and I were alike in most other ways too. We couldn't have gone all mountain man, just wasn't practical to live like that now days. Jobs, wives, all the accoutrements life has for us in this day in age. We'd have probably been those mountain men in earlier times. I think both of us were the happiest when we were outside, moving and doing something. Hard rock climbing, ice climbing, running, mountain biking, downhill skiing, anything that had a high adrenaline factor. We even made up our own sport, a version of Parkour or Free running, it was just in the forest. Running boulder to boulder across rivers or streams, up cliffs, up trees, jumping between trees. Running logs, sometime in windfall areas stacked five or ten feet deep. Anything outside in the mountains and the fresh air. Now I'm tied to this F#&amp;**G wheelchair and this cubbyhole apartment! \n\nSome fancy name for bone cancer. Surgery on my legs, chemotherapy, and radiation. More surgery, pieces taken out of my legs. More chemo, more radiation, more surgery. I guess I'm still alive and above ground, maybe I'm still alive. As I said, not much left of me. Nothing left of the group that we were. \n\nI think that our wives might have been as close or maybe even closer than the three of us. Dennis, Kevin and me, Jake. The wives went along with us most of the time. However, they just couldn't keep up, not in the physical stuff, and I suppose that they didn't really even try. \n\nJokingly we called them the Three Musketeers, and they certainly did more things together than we did. I don't think a day went by that one or the other wasn't on the phone. I don't know why they just didn't set up a conference call. First Cat would talk to Mary, and then call Julie to tell her what Mary had said. Back and forth they'd go. \n\nUs guy's would play hard, or work hard, then go back to our lives. If the weather didn't cooperate, it might be two or three weeks or more, before the three of us would get together. As I said, with the girls, it was an almost everyday occurrence. However, I think that's just the natural difference between men and women. Men don't have to live in each other's pocket to be tight. Women want too, they need that constant contact. While we all ran together, it really worked. We were all D.I.N.K's, dual income, no kids. We each had a great job that we liked doing, and earned respect doing it. \n\nJulie was Dennis' wife. She worked in retail, but that's the easy way of saying it. The largest shopping mall in our area, a very high-end women's wear store with three floors. She was the manager; I heard tell that she was the boss too. I'd heard that it ran with just short of a hundred twenty employees. Mary and my ex Cat were both in health care. They both started low on the totem pole. \n\nAt LPN, then worked their way up through school, up to RN. Somewhere in there we'd met up, Kevin with Mary, me with Cat. Just not in the same city, at the same period. Last word that I'd heard was that Mary had worked her way up to Director of Nursing. I would hate to try to guess the number of nurses Mary supervised. Cat was always one of the smarter ones, PA, Physician Assistant. We'd jokingly call her adoc, almost a doctor. She works with a heart care clinic that has several cardiac specialists, at the same hospital Mary works at. \n\nDennis ran the fleet, his family's fleet of trucks. Freight semi's, the long haul kind, in all 48 states. Wheat haulers, from farm to port of Seattle and others. Logging trucks in most of the Pacific Northwest. As I said, Dennis and I were both independent cusses. He didn't start with his family's company. He started in the rail yards at night while he went to school for mechanical engineering. \n\nAfter college, he tried working for a mechanical design company, but he left to get outside and work with his hands. If it had pieces and parts, Dennis could fix it. His dad had to court him, wine and dine him, to get him back into the family company. Then they almost got into fistfights whenever he tried to keep Dennis out of the repair shops. Dennis would still get his hands greasy occasionally. \n\nKevin loves the land and the water. Geological Engineer, if it had to do with land and water. That was what he wanted to do. Everything from studies for water reclamation projects, to dam analysis, and building foundation studies. Sometimes Kevin was the one who was hard to get together with. Not because he didn't want to do the things, we did. He was just the one of us that had to do the most traveling for his work. Because of this fact, many times it was just Dennis and I. \n\nFirst time that I met Kevin was in college. We were both in engineering, as I said geological for Kevin. I was in Mechanical Engineering. I wouldn't say that we'd became good friends in college. It was more like two students that had a lot of the same courses, interests, and dislikes. It was more likely for me to run into Kevin up in the woods than at a frat party. Kevin was a year behind me, after I graduated, I lost track of him. \n\nDennis and I met at that mechanical design company; we both had just started working for. There we became good friends. Even though we were ten years apart in age. We were in the same place in life, new to the company. Both just starting out in our married life. Julie and Cat became great friends too. Julie had already started in with that women's wear company. Cat had always loved clothes; I know that the love of clothes caused problems in many marriages. Master card problems, Visa, American Express accounts all tapped out. However, I have to admit that Cat never let it get away from her. Some of that I'll give Julie the credit for. She taught Cat how to find the best clothes at the best price, also the benefit of great quality over fashionable trends. \n\nWe had several good years at that design company. It was there that Dennis and I both started our serious rock climbing, and downhill skiing. I guess being younger allowed Dennis to switch careers easier. Moreover, I think that he fell deeper into that love for the outdoors then I did, at least at that time he did. In addition, his family came a courting, and he left the company. I know that I felt a greater sense of responsibility for married life, and had a harder time cutting loose from that big paycheck. Nevertheless, Cat had seen that I wasn't happy there after Dennis left. We stayed there a couple more years before she talked me into moving on. \n\nShe and Julie had kept in close contact. Then when we decided to pull the trigger on my career change. Julie had already made contact for us in several companies. The health care field is usually easy to change locations in, and Cat had very little trouble changing jobs. Julie really did right by me; she introduced me to the right people in three different companies. One job was the Director of Maintenance, at the hospital Cat would start working for. The second was a fabrication company as a design engineer. The third was at a wood products manufacturing company. \n\nAs attractive as it would be, Cat and I working for the same hospital. I had an inane dislike for, 'putting all your eggs in one basket.' The fabrication company job would leave me tied to a computer. So I chose the wood products company. I felt that it had a lot more variety in the work environment. They had a Pulp Paper plant, a timber and lumber facility, a plywood plant, and an engineered wood manufacturing plant. These were all within the same general area. Where I would be working was in the head office, in the same city as Dennis and Julie. As I said, Julie really did right by us. \n\nIt was in that first winter when Dennis and I ran into Kevin. It was a deep powder, early morning, on top of a black diamond drop chute. Dennis and I were discussing the best descent, when a solitary skier slid up next to us. It was because of the stocking hat, goggles, and neoprene facemask that I didn't recognize him. Nevertheless, we all dropped down that chute and spent the rest of the day skiing together. It wasn't until we started stripping off gear at the Last Run Bar, that we recognized each other. When we got together with our wives, I wouldn't even call it, 'adding Mary in'. She just fit from the first day, the Three Musketeers from that day on. \n\nThey didn't look like the Three Musketeers; each was a type all on her own. Cat, my Irish Rose, tiny, with those bright...oh so bright green eyes. All five foot of her, fresh out of the shower with all her clothes on, maybe... a hundred pounds. Long fire down her back, that red-orange hair clear to her... \n\nJulie, we had an acronym for her, TBTBELB. Tall, big tits, blue eyes, little butt, and she was that. Tible we sometimes called her. Put her in that power business suit, high heels, headed down an aisle in her store. Walking tall, powerful, heels clacking, on a mission. People just naturally cleared the way for her, without even knowing that they did. Alpha female just walked her own path. \n\nMary was neither, you just knew that some where later in life. She was going to be someone's comfortable grandmother. Hot chocolate chip cookies and milk. When we started running together, she was just a beautiful young woman. With a woman's shape, dark almost black hair and ice blue eyes. However, Mary was always that comfortable person. Maybe that's why she was such a top-flight nurse. Put that incredible mind with that soft comfortable personality, and a large dose of empathy. The only way that you could spell that was...nurse. \n\nThe three of us alpha males never did look as interesting as the women did. All within an inch or two of six foot, all between 175 to 195 pounds. Hair color, eye color, features told anyone that we weren't brothers. Nevertheless, by body type, we could have all come from the same casting lot, same mold. \n\nThe Three Musketeers all had memberships at the same gym. It was as much social as workout, but nevertheless they all stayed fit and trim. No membership for the men, hard work on hard jobs, play hard, packing any extra weight was useless. Most of it was in the playing hard, high adrenaline tends to burn calories and builds muscle. \n\nThings started falling apart in the most unusual way. When Kevin and Mary moved into the city, they'd bought a very nice home. They started talking about having a child. Dennis and Julie decided to build their dream home. Remember how independent Dennis and I are? He had to build it himself. Sure Kevin and I were allowed to help some, but it was their home. A lot of the work was done in the evening and weekends. I wouldn't say that they pulled away from the rest of us. Their focus just shifted, Tible looks good in a tool belt as well as a business suit. \n\nIt wasn't being a copycat because we'd already been talking with Dennis and Julie about home building. Nevertheless, Cat and I decided to start ours too. I had some very definite ideas about what I wanted to build. After I showed the type of building to Cat, she loved it. She looks great in a tool belt too. \n\nTimber frame, building as they did in olden days. Like the Dutch barns are in New England. Large posts and beams, mortise and tendon joinery, carved embellishments, all hammered together with wooden pegs. So our focus changed too. Kevin was pulled in on a huge project, and ended up traveling a lot. The group just drifted apart. \n\nIt was a beautiful Saturday morning when my world fell apart. I was cutting the joint on a ten by twelve inch main post. I needed to pick up one end just a little, move it over on the sawhorse, and then turn it over. Working with heavy timber, you need to keep everything centered on sawhorses, or they tip over. I knew this, and it didn't tip over. As I lifted the post just that little bit, my leg broke. The post was in no way too heavy for me. I didn't turn, twist, or fall. I'd used proper lifting techniques. It just broke. I'd already lifted that same post three times that morning. My leg just broke. Hours later in the hospital was when I heard the word...Cancer. That was the end of my world. \n\nTo say that I didn't handle the change in my life very well... \n\nAll the time we'd spent up in the mountains, I'd never seen a wounded bear crawl into a cave. But I sure could imitate one, and it could prove just as dangerous to come after me. I tried for a little while to put up the brave front. But the farther into the medical treatment, it went. The angrier I got, the more people tried to help me, the more my anger grew. The more that I could see people's sympathy, the more I became incensed. The less that I could do for myself, the more depressed I became. The more my depression grew the more intensity my anger had. \n\nAt the second round of surgery, the spiral was tight, hard, and fast. Depression followed by anger, sympathy/anger, dependence/anger. Flowers were out the door, followed by running visitors and then by nurses, broken glass in the hallway. Followed by another vase full, and another. It took Mary to get close enough to sedate me. A lot of the rest of that hospital stay just settled into a fog of drugs. My anger settled into white-hot coals, banked by layer after layer of ash, never cooling. However, it never boiled over again. After the drugs cleared and I left the hospital, it was cold ash over white-hot coals. \n\nIn some strange way, I think Dennis knew what I was going through. He also knew the why of how I was reacting, I sure didn't. I only saw him for a couple of minutes, late in that hospital stay. Everyone else had fled long before, and the nurses came by only when they had to. Hell, I even chased Cat out whenever she came. So when Dennis walked in, I just watched him in shock. He held his hand out for me to shake. Because of the restraints, I couldn't. Nevertheless, he reached for my hand and gave it a little shake. He continued to hold it. \n\n\"Sorry for the shit storm that's hitting you buddy.\" He shook my hand again. Still holding it. \n\n\"We'll get together later, when you can...OK?\" I nodded; he shook my hand again and left. \n\nThat was the last time that I saw Dennis. \n\nVerbally I buried Cat under a wagonload of shit. Metaphorically, it was a big black club and the deepest black hole I could find. However, it was the divorce papers that finally made her leave me alone. Yeah, numaro uno, supreme asshole of the world. But the wounded old bear finally got what he wanted. \n\nA health care nurse twice a week, I don't even know her name. A volunteer assistant to call if I need help, I don't call. After a while, he doesn't call me either. A cleaning service for a one bedroom, 400 square foot, cubbyhole apartment. A wheelchair and a handicap van, that is driven maybe twice a month, just to the store for food and back. \n\nOn Face Book one day, I found out that a good friend of mine had died... \n\nI don't think that my eyes moved off that page for at least ten minutes. Sometimes your life can flash before your eyes and mine just did. I know that I didn't realize it at the time, but your life can take a turn at a very small trigger event. Mine just did, but being male and a wounded old bear. I didn't realize all that was going on in my heart. All my hot black heartfelt was... sorrow. \n\nOH...Tible, Julie what must you be going through. \n\nAgain being male and a wounded old bear. It was quite a while before I realized that this was the first thought. Since that, Saturday morning that I'd thought of anyone but my own pain. Now it was the guilt I felt. Guilt I felt when I remembered that it's been four years since I'd last seen Dennis. He'd said that we'd get together later, when I was ready. Now we never would, I'd made sure of that! \n\nJulie was all that strong, alpha female. But I knew that was all wound up in Dennis too. They really had been that two parts of a whole. Tible in a business suit, Dennis with greasy hands fixing everything. She'd learned to depend on him, and it had made her stronger for doing so. But weaker too. They had been those two vines that twine together racing for the sun and sky. Supporting each other, they didn't need a trellis, a climbing post, or a wall. They had each other. Now Dennis was gone, and Julie stands alone. Even the group wasn't there for her, it was broken too. \n\nI was the one who had broken it. \n\nI didn't know what this crippled up old bear could do. Nevertheless, I had to do something. I also knew that it had to be something that I could do from this chair. That knocks out a great many things. Flowers might give a small moment of comfort, but they're not my style. Here today, gone tomorrow. Money would be insulting, even if it were given to a charity in his name. It had to be something that I could do. \n\nIt took me quite a while, quite a remembrance down into the path of my life. Before I remembered my artwork in college. Everyone had thought it quite the unusual combination of majors. The major being Mechanical Engineering, the minor in Classical Fine Art. Not any of the graphic arts or computer driven art, Fine Art. Like the study of the old masters paintings. DaVinci, Michelangelo, Rembrandt, those types of old masters. Classes in figure drawing, materials, and techniques, art history. However, I'd put all of that old stuff away. ",
        "It's a wonder that I didn't just throw it in the garbage. Hell we'd moved several times and I certainly had never used any of it. But I knew it would be in that storage shed, one of those itty bitty units all in a row. I don't know who, but someone had given me a key for it. But I bet Cat's responsible for all of it. Keeping the equipment and putting it into the shed. I sure needed help in getting it out of there. \n\nThe walls in this apartment aren't very thick. The single mother living next door is not a nice person. Nevertheless, she's trying hard; I'll have to give her that. Two kids in an apartment this small would drive anyone nuts. 90% of what I can hear them yelling about is money. \n\nThat guy that's supposed to help me, I haven't heard from in years. Plus I don't want to go through setting up another one. \n\nSo I wrote a note; \n\nMadam \n\nI'm the crippled guy who lives next door. I need some things brought out of a storage shed that I have rented. Being in this chair, I can't do that. Would you allow your two children to help me? I could do it in the early afternoon, after school. I would pay them each twenty dollars for their help. I have a van for transportation and I'm a good safe driver. They should be back before you get off work. Please consider my request and my assurance for their safety. Any day is fine with me. \n\nJake Davis. \n\nIt took quite a bit of knocking on the door before the girl would answer it. To say she was shy by the way she was hiding behind the door was easy to see. I later found out that they weren't supposed to answer the door unless there were the both of them there. I just gave her the note, and said to give it to their mother. She looked fifteen maybe sixteen, I knew from seeing them around that the boy was maybe a year or so younger. I hope that the art stuff isn't buried too deep in that shed. I don't know how much they could lift. \n\nMama came over later the same day. She had a white apron and a blue dress with a nametag on it. I think the expression would be 'rode hard and put away wet'. In one way, she looked to be about my age, the other way she looked about ten years older, with a hard edge to her. I gave her points for assessing me before she let her kids go in my care. Nevertheless, I knew that she would, they needed the money. Carol was the name on the nametag. \n\nTwo days later I found out the kids were Denise and John, and they had nothing against hard work. John thought that my van was really cool with all its hand controls. He had to ride in the front seat to watch how I did everything. I'd forgotten how many questions that kids could ask. Even this old bear had to get into answering them all. \n\nAt first, Denise was a little apprehensive of me. So much of that I thought might be due to not having a man around the home. A single mom probably taught her to distrust men. She stayed very quiet and shy on the way to the storage shed. I'd never been there, so John got a kick out of the GPS I had to use to find my way. All I had was the address, shed number, key, and the security code for the gate. The kids thought that it was funny that I had to drive around looking for the shed with the right number. \n\nIt took the three of us to get the door all the way up. I almost disgraced myself when the door came open. My eyes started to mist when a lot of my old life was just lying right there on that shed floor. If the kids hadn't been there I probably would have broke down and cried. All my rock climbing gear was on the floor right in front. Ropes, pinions, crampons, and ice axe, all just laying there, ready to use. Several pairs of skis leaned up in the one back corner, boots and poles, boxes of winter clothes. Hiking boots, all lined up in a row, pack frame, and boxes of rain gear. Camping equipment, pots and pans, lanterns, and different kinds of sleeping bags. All the boxes were labeled, running shoes, workout clothes. \n\nCat's a little OCD, so there were labels on everything. That and the handwriting told me that this shed was all her doing. But the major thing on my mind was...WHY? Why was all this stuff kept here? I'd never use any of this again, what good is it here? Cat can't use any of this; we didn't have any kids to pass it on to. The only thing in this shed is old memories and pain that I wanted to forget. \n\nHowever, sitting there in front of it, with the kids, I realized that it didn't hurt as much as it had. As much as I thought that it would have. I also realized that I didn't want it to drive the anger again. It was just that when the door came up it was such a shock, the surprise of this stuff being still around, was a jolt. As I continued to look at it, I realized that it was just...junk. Junk that we'd have to move to get out the art stuff. The focus of my life had moved again. \n\nI could see the easel buried in the opposite corner as the skis. I hoped that these kids were somewhat strong, because I'd forgotten how big that easel was. I wondered if between all of us, we could get one of the seats pulled out of the van. We'd have too, in order to get the easel inside the van. Like I said these kids weren't afraid of hard work. \n\nAll the art stuff proved to be in that back corner. We literally had to strip a lot of the shed out into the driveway before we could even get to the boxes that were labeled art stuff. It was hard and so sad to dig through the mementos of my old life, things that had been lost to my memory. I was very surprised to find tools, all of my old chisels and timber framing tools, the mortise cutter machine had to be a least a couple thousand dollar item. \n\nI guess I'd have to find a way to hold a garage sale. Maybe you'd call it a shed sale. This stuff was too good to just leave lying around. Someone could use this stuff; maybe someone else could build their own dream home. Blast through that deep powder morning; map a path up the face of hard rock. \n\nHowever, I had another thought. Maybe this stuff wasn't here for me. Maybe the memories were here for Cat. I know that this is my shed, at least I thought that's what they said when they gave me the key. I guess I'll have to hold off on that shed sale. But the art stuff is mine to use. Plus there's a lot more of it then I remembered. \n\nThe kids had a blast looking through all the boxes; John wore a pair of my ski goggles throughout most of the day. It turned into a treasure hunt for them, they never took anything, just had to see all the treasures they could find. I thought to give them some of the old clothes, but it was just much too big. \n\nIt was so bittersweet, but it turned into a treasure hunt for me too. Some of the stuff that came out of the boxes I had totally forgotten about. Different parts of Cat's and my lives. I kept waiting for the flash of anger, but it never came. Just the bittersweet sorrow of what was lost. But I guess that's what this is all about, the loss of Dennis. \n\nWe didn't get all the stuff in one load, and I didn't want to keep the kids out longer than I told their mom. So I told them to ask her for another afternoon. They still worked until almost suppertime hauling boxes into my apartment. I gave them each a twenty and then a five for each of them. I suggested that the five would be for them, pocket money. I went to the dealership and had the one seat removed from the van, to get the easel in. \n\nI didn't know how I was going to get all of this into my tiny cubbyhole. When I got it, all set up I knew that my place would look like a studio. The easel would have to be in the middle of the room. My life and apartment were going to be taken over by this project until it was done. That was OK; it wasn't as if I had anything else to do. \n\nIn my art training I've always been fortunate to be able the paint or draw from memory. A lot of people, some very good artists, need a photograph or a model to work from. My mind seems to be able to hold on to an image well enough to study. After I nuked a small ready to eat meal, I sat down with a small sketchpad and pencil to start with ideas for Dennis. Fortunately, the house they build has a lot of wall space so I wasn't limited by size. \n\nFirst, I had to settle on a format, canvas size, and such. Dennis and the three of us were all about six foot tall, slim and fit. I made the decision to focus on Dennis, the figure of him. Not a lot of background or an activity, just Dennis. That put me toward a narrow format, I thought about something like 60x30 or 28 inches. Probably 60x28 inches, then I had to decide on the medium. \n\nUsing a canvas eliminated pencil, pastel, or watercolor. I didn't want to deal with sheet paper or board in that size, so it was canvas. That meant either oil or acrylics. I prefer acrylics; you can control the drying time, and many other variables better than you can in oils. Plus here in this small apartment the vapors are easier to control, some of the ones for oils can be toxic. \n\nI got online to see if I could find a canvas the right size. I wanted to get a canvas shipped to me, rather than buying it here in town. That way I would have the packing material I would need to ship it to Julie. I bought the best I could find, and it wasn't cheap. \n\nI could tell that I'd have to make trips to the garbage. All of the tubes of paint I had, had been frozen and thawed, frozen and thawed throughout several years. I just didn't trust them to be stable anymore. Plus many of the brushes needed replaced, but all that stuff I could get in town. \n\nI made a trip into the little art supply store here in the mall. I'd rather use the one at the university, but I wasn't so sure about getting into it. It was at a lower level of the building, being the university, I thought it would have handicap access, but I wasn't sure. I'd have to scope it out later. The little one here in the mall had enough to get started. Had a cute little bit of a cashier named Kathy too. It was good to be out and noticing things like people again. \n\nI had enough money to not worry about getting what I wanted. Sitting in my cave for the last four years, I hadn't spent money on anything but food. Plus I wanted this to be a solid, permanent piece of work. Something that would leave a memory of Dennis to whoever looked at it...maybe forever. \n\nHere at this little supply store they still had enough of the best quality paints, just in the basic colors. So I got the best, brushes too. I had a lot of the other stuff, drawing pads, charcoal, and drawing pencils, from the storage shed. Had all my old airbrush equipment, and it worked too. So I ordered a full set of airbrush colors, both transparent and opaque. To get most of the other colors in acrylic, beyond the basics, I had to go online. \n\nThe younger boy John had a friend in another apartment, and they played video games after school. I got Denise to help me in a lot of my running around. I always wrote her mom a note and paid money for her help. Between the two of us, I got into the university store that had all the art materials. That's where I got all the real specialty supplies. Denise became my unofficial assistant. \n\nIn the evenings and the nights when I couldn't sleep, I sat with one of my sketchpads and pencils. I'd let my mind wander back into the times that I'd been with Dennis. Sometimes just stick figure drawings, playing with poses, body positions. Coil drawings, muscle studies just blocking in ideas. Hands and feet, things to just get me drawing again. \n\nBut mostly I just let my mind wander with images of Dennis. I realized that we'd spend a lot of years together, just by the changes in his appearance. From a younger man to a little older more mature look. I had to decide which stage in his life that I wanted the painting to be in. I picked the older look, the time when we were all together. \n\nI didn't want it to be an activity type of painting. Like a sport or something, I also decided that I didn't want it to be in the woods. I had to think about that a lot, why I didn't want that? We always did things, running, skiing, and climbing rock. Some of the best times we had were in the woods. \n\nThen I realized that Dennis and I were always in the woods, Kevin too. But not everyone else, not Julie or Cat, Mary. Not his parents or the rest of his family. It had to be an image that everyone knew, that this was the Dennis that they all had known. A Dennis just relaxed being with the people that mattered to him. \n\nThen the image was in my mind...I had it...the one I needed. It was a late autumn evening, the weekend after Julie's birthday. We were having a birthday dinner party for her. The three couples of us, what there was of Julie's family that was here. Dennis' folks and few of the people that Julie worked with. The three of us men had been up rock climbing, and had just barely made it back in time for dinner. \n\nPeople had gathered into several little chat groups after dinner. Dennis and some of the men were in the kitchen talking about today's climb. Their kitchen had an open floor plan with an island counter separating it from the dining room. \n\nI was leaning back against the island counter. Dennis was leaning back against the main counter, off to the right of me. His body is facing about a quarter turn away from me. He's talking to someone right next to me, so his face is almost straight on to me. Body bent in a kind of shallow arc, one hand on the counter edge, elbow bent up, hand close by his hip. The other holding a long neck beer bottle in front of himself, about waist high. His bare feet were crossed, a pair of 501 jeans, and a t-shirt. Just pure Dennis, relaxed, beer in his hand, friends all around him, talking about the fun he'd had that day. \n\nI visualized the painting with a blurry background; just enough so you'd know that it was the kitchen in their home. No other person in view, just Dennis. The tall narrow canvas just barely big enough to show the whole of his body. The high contrast between the tones of his skin and the pitch black of the night in the window behind him. The dark cabinets and the bright white and blue t-shirt. The dark green glass of the beer bottle in his hand. The tan of the marble counter top, the stainless steel of the dishwasher by the blue of his jeans. \n\nI let my head roll back, eyes closed. Let the image roll over me, fixing it in my mind. The way his hair lay over his ears, the tones and shades of it. The shape of it on his forehead. The colors and tone of his skin, the shadows in the folds of his forehead, hair. The colors and shape of his eyes, where the light reflected on the eyeball. The folds of his eyelids. \n\nI grabbed my pencil and started on the small sketchpad in my lap. Drawing small pieces of Dennis, an ear and the way the hair lay over it. The rough shape of his head on one sheet of paper. Eye, nose, and part of his mouth on another. Sketching fast, some of the time with my eyes shut. Ripping sheets of paper off as soon as they had the thought of what I wanted down on them. The way his hand and fingers gripped the counter top. \n\nAs soon as I started to want to draw bigger pieces. I grabbed my largest sketchpad. His bare feet and the way they crossed, the way his jeans went all the way to the floor at the heel. Rip that sheet off and throw it to the floor. The lower legs and the folds in the jeans, the shadows, and the color changes. Rip it off, throw it to the floor. I just kept going, hand and arm, angle to the elbow, to shoulder. Next sheet, draw, rip it off, throw it on the floor. The muscle play in the arms and forearm, shoulder. I didn't notice when the window started getting light. Later I fell asleep in my chair, I hate that. \n\nDenise knocking on the door was what woke me up. She had a key so I hollered for her to just come in. I didn't want to roll over all the sheets of paper on the floor. She just stood in the doorway with her mouth hanging open, looking at the storm of paper on the floor. We got to sorting out all the sheets, small ones in one stack. Larger sheets in two different piles, one for legs, jeans, and feet. Another for the upper body, then we started a third for face and head. \n\nI had used up all the sheets in the small pad, then evidently got another one and used half of that. Two pads of large newsprint sheets and part of another. Sometime in the night I'd grabbed a 12x16 sketch pad, that had been empty in my lap when I woke up, must have been when I'd fallen asleep. Denise counted 187 sheets of drawings. Some with just a few lines showing position or angle. Some full drawings of muscles in arms or shoulders. Small ones of just an eye, or a finger. \n\nI'd done this a couple of times before, it becomes something like a fever trance. Never like this though, maybe ten or fifteen drawings at the most. But it's always been when someone else has been around, never by myself like this time. Someone's always broken the trance before. \n\nOne thing about doing this trance is I get my head out of the way. I don't think about how to draw I just do it. I always said that I've done my very best drawing in this type of trance. An artist is never satisfied with his own work. You see all the imaginary faults in your own work. That one line that's not as curved as you pictured it in your mind. The smudge of shading that's just a little off. Drawing that I've done before in this trance, I don't see the flaws in. This batch is even better. \n\nThere is a drawing of his crossed bare feet and jeans. Denise asked me where I'd gotten the photograph from, even to me it looked almost that good. Just in black and white and on entirely the wrong kind of paper. Eyes and the part of his nose stared out at you from one sheet. I swear it was Dennis looking out a slot in a door, you felt him. Going through all the drawings, if I could have taken a piece from one, part from another and pasted them together. So I did, thumb tacks and scotch tape on one of the walls. I had a near photographic drawing of the whole of his body. Just the way I wanted it on the painting, now I just needed to get it onto the canvas. Too bad, I could never paint in a trance. \n\nDenise and my relationship has grown quite a lot. The whole process of getting everything ready for this painting has taken quite awhile. She's helped me a lot, rode with me to the different art stores. She's helped me getting around, holding doors open and all that. At the university one time, after we picked up supplies, we went through the student's art exhibit. \n\nThat led to a trip through the museum down town, and a couple of the art galleries in malls and such. We'd even taken Kathy the check out girl from the store in the mall. Out to coffee in the bookstore a couple times. Kathy turned out to be kind of a kindred spirit. She was studying engineering and art at the university, just chemical engineering. In one of our talks, I suggested that she might look at art restoration as a specialty. It would be a good fit with her chemical training and art education. \n\nWith her brother John going over to his friends for video games, it's left Denise home alone a lot. She started coming over to 'just visit', she calls it. Before this, all I got at the store were microwave meals or TV dinners. Cans of soup or chili, I never felt like cooking. One of our afternoon visits ended talking about cooking. So I showed her my recipe for spaghetti and meat sauce. I could never cook just a little bit, so I sent the rest home with her. \n\nAfter that, it was maybe two, three times a week that we'd cook. I'd always liked to cook, it was something that Cat and I did together. Denise and I'd always cook a big batch and sent the rest home with her. I'd get the clean dish back the next day. Sometimes we'd cook something different that day or the next. Mostly she'd just talk. God that kid could talk; you never knew ahead of time what she wanted to talk about. How can a sweet sixteen never been kissed girl talk to this grumpy old bear, about boys and boyfriends. So shy that first day she almost didn't answer the door, now boys and boyfriends. ",
        "I guess that between her and coffee with Kathy I've got out more in the past couple months than I have in the last four years. It's mostly cowardice, but I know that I'm not ready to meet with any of the group yet. The guilt is still too high, knowing what I've put them through. No excuses except my own pigheaded anger. I can see no way that I could ever look Cat in the eyes again. Not with what I've done to her. She would have every right too, and must hate me. \n\nDenise has been helping me again. I've started putting gesso on the canvas, and I've let her brush a lot of it on. It's just white on white. I can see right away that I'm going to need more help from her. Even with the easel lowered all the way down, I can't reach the top of the canvas. The only way I can is if I sit it on the floor and not on the easel. Then I can't get to the bottom of the canvas to paint. When the canvas is in the easel it has to be clamped in between the cross stays. So the winch can raise and lower without the canvas falling out. I'll for sure need to use the winch to get to the bottom of the painting. \n\nI've finally started on the painting. It's like normal with Denise, question after question. Why am I just using grays and browns, black and a buff white? I tell her it's called Grissel and Glazing method. You put the darks and lights on as a base layer. Just blocking in the basic form. You use only neutral colors, grays, black, white, and gray brown, or white brown. All in multiple tones and shades. It ends up looking like a black and white photograph. Then you start adding the colors in, all in thin almost clear glazes. \n\nI explained glazing to Denise the best way that I've ever found. To think of it as layers of stained glass one on top of the other. Yellow on top of blue makes green, two glazes of yellow on top of blue make a lighter green. But just like layers of stained glass, it seems like your looking into something with depth. Like you can stick your fingers down into the paint. If you do it right you can capture the glow in a person's eye, or in the tones of skin that glows. All the colors seem to flow one into the other seamlessly. \n\nThe old masters like DaVinci's Mona Lisa, will have as much as a hundred layers of glazing. That's how all their works have that warm glow to them, or shine. It's also how the forms in their painting seem to be on top of the canvas, have that three-dimensional look to them. \n\nI've started letting Denise paint in some of the color in the background. With the Grissel underlayment, it's a little like paint by number. Plus I'm mixing all the colors for her. I tell her that's how all the old masters did it. They had students and assistants paint some parts of the painting. As the masters got older the assistants painted more and more of the painting. \n\nI can get the painting off the easel onto the floor, but I can't get it clamped back on the frame without Denise' help. It slows me down a little but not much. Kathy wants me to bring in photographs of stages as I go. Their starting to post them in the art store. We had coffee again at the bookstore. She talked to her professor about a restoration and preservation career. She said that he was surprised by the suggestion, but he felt that it would be a very good option for her. \n\nThe glazing layers take a lot of work and time, splitting the canvas between the times I can work from the floor to the easel takes a little more planning so that the colors overlay correctly. I hope that I don't end up with transitions between the top that I can't reach when it's on the easel, to the bottom that I can't reach when it's on the floor. I tried to lay it on its side, but it just felt so off. That I felt uncomfortable painting like that. This f!!king chair is a pain in my... \n\nDenise and I cooked lasagna last night, and send a lot home to her mother and brother. I'm going to have to start watching how much I eat; I'm starting to pick up a few pounds. Maybe I'll have to start wheeling my ass around the block a few times. See if I can rig up a bar in a doorway to do chin-ups. After almost four years of TV dinners and soup, it's good to eat real food again. I had better look for some healthier recipes to cook. \n\nIt's coming along; I'm up to about thirty layers of glazes on areas of his face and other skin. The glass of the beer bottle took a few too. It's weird some of the things that are giving me troubles. The stainless steel of the dishwasher, and the window showing the night behind him. It wouldn't be any trouble to show them in as realistic. But with the rest of the background in somewhat fuzzy. They can't stand out as clear, then it would take away from the figure. To work the way I want it to, only the figure can be in sharp focus. \n\nThe jeans are giving me a little trouble too. It's hard to realize all the colors that show in a pair of worn comfortable jeans. Plus a lot of it shows up as individual threads, different colored threads. The window is causing me problems too. Same as the dishwasher. How to show it in as realistic enough manner to be recognizable. Yet blurry enough to be indistinct and not take attention away from the figure. It's hard to imagine white and gray glazes in a night black window. My old airbrush is working well there. The marble counter top is a pain too. \n\nKathy wants bigger photographs as the painting gets closer and closer to being done. She wants to post them, and close-up photos of key sections, at the store. I just hope that none of it gets back to Julie or any of the group. I don't want them to see it until it's done and given to Julie. She needs to be the first to see the finished painting. I told Kathy that too, no finished picture until I'm sure that Julie has gotten it. \n\nI'm starting to see Dennis looking out of those eyes. \n\nIt's done. \n\nThree months, give or take a little, it's taken since I started laying down color. Well three months and two weeks, I haven't been able to let it go for the two weeks. I've got it turned so that I can see it from about anywhere in my little cubbyhole. I've even bought a light that mounts to the top of the easel. It had to be a natural sunlight lamp too. Night and early mornings I have the light on. Daytime and evenings, I watch the shadows and sunlight crawl across it. \n\nIt is Dennis, standing there looking that me. \n\nThat's why I'm going to ship it to Julie tomorrow. I had Denise help me put a sheet over it today. At first, I was looking at it with a sense of accomplishment, yes even pride. Damn I did something good; I don't think that I've ever had anything turn out this good. \n\nThen I started catching a look at it through the corner of my eye. Or when I woke up in the morning. When I'd be doing something else and look up and there it would be. It quit being an accomplishment, a painting. Then it became Dennis...and that brought me back to my shame and guilt, my sorrow. I don't want to go back into that anger and pain, back to my loss. I've started to walk out of my deep dark hole, and I don't want to go back. \n\nSo I had to cover it. \n\nAfter school today, I had Denise help me. We took the final finished photographs. Took all the packaging that had come with the canvas. We cut an old blanket up to cover the face and back up. Then put it back in all of its packaging material. I put in all 187 drawings too. Taped it up as best as we could, and called UPS to do a pick-up and delivery tomorrow. The agent thought I was nuts when I wanted it insured for $25,000, for delivery in the same city. Nevertheless, I got what I wanted. \n\nDenise still comes over and we cook and talk. We took a little trip and gave Kathy the finish photographs, and had coffee with her, even had lunch. She asked when I was going to start another painting. It set me back with a jolt. I'd never even thought about doing another painting. But why not...? I'd been busy, feeling good, accomplishing something when I'd been doing Dennis. Why...not? I told her that I'd have to think about that. But we'd still come and see her for coffee sometimes. \n\nOn Face Book a couple of weeks later, I got a message and an image. The picture was of their long wall in Dennis and Julie's living room. The couch with the painting centered over it. It's been framed and had a gallery light mounted over it. Nothing else was on that thirty-foot wall, just the painting. The message read: \n\nDamn you Jake; \n\nI'd just stopped having to cry every day. Then I got that painting. Yes, I know that it was from you Jake; it could be from no one else. No return address, no note, it's not even signed. But it can only be from you. I couldn't even get it all unwrapped before I broke down, and started crying so hard I couldn't think. \n\nI had to call my mom, and I couldn't even talk to her when she answered the phone. But they came up here for me. My Dad had to finish unwrapping it. Mom and I were crying so hard, I think he shed a few tears too. \n\nJake it was two days before I could go back to work. IT IS DENNIS. Jake it's as if I got a small piece of him back. When I go make my coffee in the morning, I find myself saying 'good morning' to it, to him. It's as if his eyes are watching over me. I ration myself to looking at two of the drawings a day. Jake you gave me something when I needed it most. Something that I didn't even know that I needed. A small piece of him to watch over me. I love you Jake! I can never thank you enough, and you can never know how much this means to me. \n\nI love you, Julie. \n\nTalk to Cat. \n\nOn Face Book, about a week later. I sent a friend request, to Cat. It wasn't but about five minutes later, I got an answer and a message. \n\nJulie wouldn't tell me why I had to go to her house. One look told me three things. \n\nIt's really Dennis. \n\nYou did it, the painting. \n\nYou're back! \n\nCOME HOME, JAKE! \n\nI guess I will."
    ],
    "authorname": "JayDiver",
    "tags": [
        "cancer",
        "art",
        "painting",
        "handicap"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-painting-3"
}