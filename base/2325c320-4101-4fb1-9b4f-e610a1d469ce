{
    "title": "My Little Ventrue Pt. 06 Ch. 19",
    "pages": [
        "~~Eric~~\n\n\"Were you trying to make me jealous the whole night?\" he said.\n\nJessy laughed as she closed his door behind them. Back in his apartment, she reached down, threw off her high heels, literally, and jumped onto the couch. Kat sat upon the couch's back, and meowed in greeting. Jessy meowed back.\n\n\"I am a walking, talking embodiment of hotness, Eric. Last thing I'd ever feel the need to do, is make you jealous. I am God's gift to you, to make up for your shitty life from before.\"\n\nAs much as Kat was dumb beyond all reason, she got along better with Jessy than Eric expected; especially if Jessy's cat from her time as a human no longer liked her after her change, like she said. Maybe after her embrace, Jessy became more cat-like than human, and her pet saw her as a rival? Introducing adult cats and getting them to live together was often a painful, slow process.\n\nWith Kat, Eric could get a pet badger, and she'd still try and make friends. \n\n\"Can't disagree.\" He walked up to her, and gestured to the ridiculous-but-sexy top she still wore. \"But, just because you don't have to, doesn't mean you wouldn't, if you found it fun.\"\n\n\"True, true.\" She gestured for him to sit. Once he did, she turned around and lay on her back, her head on his lap. Groaning, she tilted her head from side to side, stretching. Did vampires need to stretch? They often breathed, and they didn't need to do that. Probably just old habits, because, at the moment, he could tell she wasn't alive. Pale skin, thinned, and no heartbeat or natural scents. It'd been a bit of a shocker, being around her when she wasn't Blushing Life, and after his new senses had awakened. His animal instincts told him she was a corpse, but corpses didn't walk and talk and fuck.\n\n\"Samantha seems nice,\" he said.\n\n\"Yeah, really nice. And speaking of.\" She pulled out her phone, and texted someone. A second later, she got a text back, and she smirked at the phone. \"She took a small kiss of Isaac. Apparently it was a little surprising for her, and she ended it quickly. Now Chris is trying to convince her to Kiss him too, and now that she's all hot and bothered from the first Kiss, he's pushing for a little touching.\"\n\n\"Aw come on. The woman's been through hell. He shouldn't\u2014\"\n\n\"Samantha's an adult, dumbass. She can take care of herself. And besides, my boys know to not push it too far.\" She shrugged, and scrolled on the phone. Holding it up with it pointed down at her, head still on his lap, he couldn't see what she was scrolling through, but whatever it was, was making her smile. \"Want to see some more pictures?\"\n\n\"More pictures? Of\u2014\" She turned the phone around and showed him. Clara again, with a weird expression; likely drunk, and maybe high. She was standing in a shower, and two of Jessy's ghouls were eating her out, one from behind, one from the front. Must have been a picture from earlier, since most of those guys were just at Bloodlust.\n\nJesus, how much pot would it take for an Uratha to get high? What used to get him drunk, didn't, and he'd probably have to drink ten times what he used to to get wasted. An expensive vice to keep.\n\n\"God damn Clara is beautiful. I'm happy she's enjoying my boys, with Jack out of the picture. I hope Samantha enjoys them too.\"\n\n\"You know she's going to kill you, if you keep letting your ghouls take pictures of her. And\u2014\" Eric stared at the picture of the naked werewolf. Clara was average height for a woman, maybe a couple inches taller, and she had a lean muscularity similar to Jessy; no wonder the Gangrel found her attractive. Smaller breasts, long black box-braids, and dark tan skin, she was the definition of 'sporty', and Eric licked his lips at the sight of her, mouth open in obvious bliss.\n\n\"Hey! I'm right here,\" Jessy said, and she thumped her head against his leg.\n\n\"What, I can't make you jealous?\"\n\n\"No. I can dish it out, but I am far too sensitive to take being teased like that.\" Nodding, she put the phone away, and smiled up at him. \"I am a sensitive snowflake.\"\n\n\"Uh huh.\" Laughing, he set a hand on her head, and started working his fingers through her hair. Instant murrs of joy from the vampire. \"So what now?\"\n\n\"Well I don't know about you, but I plan on getting laid before sunrise.\"\n\nHe rolled his eyes. \"I mean, with the hunters, and the covenants now that Julias is gone.\"\n\nShe winced, and lowered her gaze to look at nothing. It wasn't the nicest thing to talk about, but they hadn't really, and it was about time they did.\n\n\"Jack's dealt them a huge wound, killing three, maybe four more of them, and capturing their enforcer. Gives us the leeway \u2014 we hope \u2014 to get more aggressive. Everyone has kill orders if they see a hunter. Sweeps continue, more of them, more often.\" Groaning, she sat up, thought better of it, and lay back down. \"God I'm tired. This week has been brutal.\"\n\n\"Heh, yeah.\" The two of them had been doing their patrols together, and then he had to either work, or sleep then work. He wasn't sure what she did for work, secret Invictus stuff probably, and she had to do that when she wasn't patrolling. Right Hand of the Invictus and whatnot.\n\n\"Hey,\" she said, looking up at him, eyes pensive. \"Make sure you don't... you know...\"\n\n\"Mm?\"\n\n\"You're getting dragged into this hunter beef, and... and after what happened to Jack, I can't stop thinking about Beatrice and shit. I hate it. Fuck I hate it.\"\n\nOh, right. She was worried he'd die. Not worried about herself, but worried about him.\n\n\"I\u2014\"\n\n\"Like, your dad's in the hospital, just like Jack's mom was.\"\n\n\"I'm not su\u2014\"\n\n\"Think those hunters won't use that against you, if they find out? These ones are psychopaths. They'll burn down a school if they think it'll kill a vamp, I bet.\"\n\n\"That's a bit\u2014\"\n\n\"This fucking Angela woman, and Jeremiah, they aren't playing by the rules.\" She reached up and hooked a hand on his shoulder, while still lying on the couch and his lap. \"They know your face, right? Four of them have seen your human face, and know you go to Bloodlust. No hunter with a brain would show up there, or come this deep into South Side, but these hunters don't have brains! They're insane, or at least their boss is.\"\n\nHe stopped trying to say anything. Better to just smile down at her, and wait for her to get to wherever her train of thought was taking her.\n\n\"So... be careful, you know? Really, really careful. Cause I'm getting attached to you, and I'm... I'm sad enough, with Julias gone. If you died, I'd... I'd...\"\n\n\"Be sad.\"\n\n\"Yes! Sad. I don't like feeling sad. Fucking hate it.\" She slipped off of him, stood up, and threw off her top. The thing ceased being clothes, and became a bundle of black straps tangled together as it flew threw the air, and landed on his kitchen table. Kat chased after it, continuing its evolution from a pile of straps, into cat toy. \"So, I... I want you to make me feel safe, tonight.\"\n\n\"Don't transform, then?\" He smiled, leaning back on his couch, and watching the ridiculously gorgeous woman stand there in a short skirt, thong, and nipple pasties. Like a skill, she'd gone from sad to horny in seconds.\n\n\"What? Fuck that, definitely transform. I want to disappear from the world for a while, beneath my boyfriend's giant body. Just, hide away inside your shadow.\"\n\nHe choked on a chuckle. \"Sometimes I think you're only dating me because I can get really big.\"\n\nShe frowned at him. Uh oh. \"Hey, fuck you. I'll have you know that I happen to like you, you bitter asshole.\"\n\nThat was unexpected. Unexpected because he was an idiot. She'd just compared them to Julias and Beatrice, and far as he knew, those two had been madly in love. A dangerous step for Jessy, thinking like that. A dangerous step for him, being intrigued by her, and the L word.\n\nMemories of his ex-wife ran through his mind, and he pushed them away. Jessy was not Sheryl. Jessy was basically the antithesis to Sheryl, and that meant something. The last thing this woman was thinking, was a ploy to hook him into a relationship to take his money. That wasn't fair to Sheryl, but then, that's all their relationship had been towards the end.\n\nHe tilted his head to the side, and let out a gentle sigh as he smiled. \"I like you too. A lot.\"\n\n\"A lot?\"\n\n\"A lot lot.\"\n\nShe squirmed in place, a smile growing bigger and brighter on her face. \"You just want me for my body.\" As she said it, she hooked her fingers into her skirt, and slid the tiny bit of black fabric off. Wearing nothing but a g-string, she posed for him, weight on one leg and hand on its hip. The fact he'd just said similar to her about her only wanting his body, seemed lost on her; or more likely, she was ignoring the hypocrisy like a playful kid.\n\n\"Not true. I'm also into you for the money.\"\n\n\"That's more understandable; I'm rich as fuck. But I'm not a moron. If we get married, we're signing a prenup.\" She slid out of the thong, revealing her smooth, pale skin, and her shaved sex. A moment later she was Blushing Life, and her skin darkened, becoming tan, and bringing some pink color to the lips between her thighs; the ones on her mouth had lipstick.\n\n\"Smart. Wish I'd have done that.\"\n\n\"Yeah well, when you're young and stupid and in love, it's impossible to think someone's only into you because you're rich.\" She grabbed his hand, pulled him off the couch, and started dragging him toward his bedroom. \"And hey, I ain't blaming a girl for being attracted to money. It's such a turn on when a guy can buy a yacht.\"\n\n\"What if I bought one, kidnapped you, and held you captive it on you until you inevitably fell in love with me?\"\n\n\"Fuck that is so stupid, and dumb, and hot.\"\n\nThey both laughed. He wasn't sure if she was kidding or being serious, but it was true that, given a few more years, he'd be able to buy a very small yacht, or at least a small boat of some kind. On the other hand, Jessy could probably afford a proper one right now, if what he knew about the Invictus, and older Kindred was true.\n\nShe jumped onto the bed, spread her legs as she turned to face him, and idly began to gently stroke her clitoris, one leg up on the bed. Licking her lips, she motioned to him with her other hand, and waved her fingers up a bit.\n\n\"Transform, and then prove to me you can be sweet, and gentle, and all protective and possessive and stuff.\"\n\n\"Thinking Caleb was right?\" That couldn't have been true, if she was willing to do this again. He started taking off his suit, and watched her casually masturbate as he did. Her touch was slow, soft, only enough to start to warm her up. He'd have happily did it for her, but she seemed to have something else in mind.\n\n\"Mostly not, but maybe a little. Sometimes, you do get a little scary and weird and animal-like, when transformed.\" She shivered with the memory, massaging her clitoris faster as she smiled at him. \"So, we can consider this training, to help you get better at controlling yourself, at not giving into that animal side. Though... if you did, and you turned into some hungry animal, aching with a savage need to mate with me, mount and claim me, and fill me? Can't say that doesn't have its appeal either. A beastly, deadly protector, who will guard me and keep me safe, even as he rocks me until I'm bowlegged.\" Swooning, she started to fan her face with one hand, eyes rolling up with her silly fantasy, even as she continued to tease her clit with her other hand.\n\nIn retrospect, it wasn't a silly fantasy. When he did lose control of himself, he seemed to think of her as his mate, someone to protect, and dominate. The idea was very appealing.\n\nHe laughed as he slipped out of his pants and boxers, and tossed them aside. Watching the naked woman masturbate on his bed, legs spread and smooth slit on display, with an X in thick black tape still drawn across each nipple, was an invitation for him to pounce her and pound her into the mattress. He'd try and control himself, but she seemed determined to test his limits.\n\nHe stood at the edge of the bed, two feet from her, one of her legs dangling off its edge and nearly touching his. This close, he could smile down at her, feel his arousal grow into an erection, and draw her wandering eyes. This close, he could smell her own arousal, spurred by her Blush of Life. This close, he could see her lips part and her tongue lick a canine, as he began to transform.\n\nEmbracing the wolf inside him had become far easier than it used to be. Practice, and acceptance, he supposed. Whatever the reason, letting the creature, the Beast as the vampires put it, emerge from the depths of his core, had become a simple, smooth process, relatively speaking. It didn't hurt as much anymore, and he managed to keep a smile as he felt the mass overwhelm him, the muscles explode in size, the fur grow from his skin, and his mouth elongate.\n\nThe weight was the biggest difference. He felt heavy, and strong, and massive. He was heavy, strong, and massive. He could run through a wall, could tear through metal, bite through a block of hard wood, or shred the floor with his claws and mass. Power coursed into him, a mixture of flesh and blood and life, and something else, something that he didn't understand, but knew what it was. Spirit. Not the metaphorical kind, but the real kind, the sort on the other side of the Gauntlet.\n\nIt filled him with power, and hunger. Filled him with desire. A part of him wanted to rip and tear, break, shred, destroy, hunt and control his territory. But as his eyes looked down, down, way down at the tiny, naked creature on his bed, with her legs spread, another desire replaced the others.\n\n\"F-Fuck...\" She stared up at him, eyes wide, as he leaned down over her and planted his claws against the bed sheets. \"It's... it's um, hard to know if... if you're still Eric, when you're like this, you know?\"\n\nHe breathed, deep, his chest rising and falling. As long as he breathed deep like Luna taught him, as long as he didn't let the rage in his chest build, he would remain calm. However, the power and desire it brought with it was amazing, and addicting; to Jessy's delight, from the way she was looking him up and down. And when he squatted down a little, so the heavy slab of pink flesh dangling from between his legs rested on her stomach, she groaned openly. It was massive compared to her small waist, and reached past her navel along her abs.\n\nHe wanted it inside her, now. Every part of him demanded it.\n\n\"W-Wait,\" she said. \"Let me, uh... get some lube.\"\n\nHe growled, low, deep, a rumbling purr in his chest that he could feel through his body and into his claws. She felt it too, and she licked her lips as she shivered. For all her desire, it was clear to see she was afraid; and she liked it.\n\nHe stepped back, and his cock fell off of her, heavy and just soft enough it could bend with gravity, but only just. Groaning openly, Jessy slid off the bed, and with quick steps, bounced off to the bathroom. She returned in seconds, and threw herself onto the bed, with a towel. Sitting on the towel, she dangled her legs off the bed, and wasted no time pouring a globe of the liquid onto her palm, before she began rubbing it between her thighs, further down than her slit.\n\nAs she did, he stepped in closer once again, burying her in his shadow. He licked his long teeth as he watched the vampire work the lubricant into her ass, while at the same time rubbing her sex and clitoris. An expert at pleasuring herself. Her moans grew, and as he crouched down over her, again planting his claws on the blankets around her, and setting his long shaft along her stomach and wrist, her moans became blatant panting.\n\nAs she masturbated, using her palm to rub her sex as her fingers massaged the lube into her ass, her other hand reached up, and slipped her fingers into his mouth. Into was the wrong word, more like, holding onto the jaw, and hooking her fingers between the giant canines along one side.\n\n\"You really are, like, fucking... terrifying.\" Her hand slid down his jaw, down his colossal chest, and down onto his abs. Everything had a coating of fur, thicker on his neck, arms, and legs, but thin enough on his chest and abs for the muscle definition to be blatant. She traced them, hypnotized, as she continued to masturbate.\n\nHe lowered his head closer, until his titan snout was only inches from her face. \"You... are... beau... tiful.\" It was a struggle to say words, keep them controlled, and enunciating 'beautiful' was borderline impossible.\n\nShe stared at him, gulping. When he brought his head in closer again, so his enormous jaw was beside head, over her shoulder, and his large eye was next to hers, she gulped again. Being near her was enough to send her heart racing with its fake heartbeat. \n\nHe needed her. Now.\n\n\"I... I am, yeah.\" She turned her head to lean in toward his jaw, and she set a kiss on the upper half of his snout, beside his nose. Her head could fit into his mouth if he wanted it to, literally. She smiled at him, making eye contact as her other soaked hand raised from her ass, and slid onto the massive phallus resting on her stomach. Rubbing it, coating it in lubricant and sending tiny waves of bliss down its length, earned a pleasured rumble from him, more deep bass filling him, and her.\n\n\"I want you,\" he said, voice deep, guttural, but quiet, half whisper.\n\n\"Course you do.\" She grinned at him, but she still shivered, even trembled. And as she squirmed underneath him, she squeezed on his cock, sending a spark of pleasure down its fat, pink flesh, and between his legs. A drop of his precum leaked from the tip, and fell onto her flat stomach, above her navel.\n\nWith a gleeful giggle, a very un-Jessy-like sound, she grabbed a pillow, lay back, and put the pillow under her ass. Even with his mind clouded with a mix of animalistic hungers, he knew this human sex position: missionary. Maybe he'd mount her later, pin her down underneath him, do what his body demanded. For now, he'd delight in this strange balance of control and desire, and indulge a more human approach.\n\nHe pulled his hips back, and as he crouched down over the tiny creature, he took his cock into one hand, and pressed it against the small, squeezing rose of her ass.\n\n\"Fuuuuck that thing is huge,\" she said. \"Haha, fuck, I sound like a stupid young girl who's watched too much porn, and thinks she knows how to talk to turn guys on.\" Laughing, she reached down with both hands, and clutched her thighs from the inside pressing out, holding her legs apart while pressing her breasts together with her biceps. \"Who am I kidding. I could talk about physics, and it'd turn a guy on when I'm in this position.\"\n\nHe managed a chuckle, a breathy and heavy sound, as he licked his chops. The tiny female was practiced with anal sex, and knew how to relax the tight ring of flesh, to let him sink the first couple inches of his slab of pink meat into her. It was tight beyond imagining, and forcing the tip of his length into her, was euphoric. Moaning, she let go of her thighs, but kept her legs spread as far as they could, as she reached up, and pressed her hands against his chest. With him leaning over her, she was hidden underneath him, buried, and his head hung above hers by a couple feet. A small drop of drool fell onto her neck. He was a beast. There was no getting around a little drool.\n\nIt didn't bother Jessy. She just laughed, but he could see her eyes stare at his mouth, at the gargantuan snout filled with enormous teeth, and the tongue between them.\n\n\"Christ, you are a scary fucker.\"\n\n\"I... won't hurt... you.\"\n\n\"I\u2014fuuuuuuuuck.\" She pressed against his chest a little harder, to no avail, as he began to sink more of his cock into her. Her squeezing ring of lubricated flesh was heavenly, and he rumbled as more pleasure sparks danced along the swollen, sensitive pink skin of his cock. The thick girth stretched her ass apart, and while she tried to relax the muscle, she groaned, leaned her head back, and pressed her hands on his chest a little harder. He continued, sinking in another inch, and another. Slow, Eric, nice and slow. For now.",
        "Eight inches in, her clenching ass found the bulbous shape of the knot of his cock. She groaned louder as she forced herself up onto her elbows, and stared down at her body, her spread ass, and the tiny distension his thick girth was causing along her abs.\n\n\"Slow! Holy crap, slow... slowly,\" she said.\n\n\"Too much?\" he said. With most of him inside her, he let go of his cock, and set the hand down against the blanket beside her. He was free to lean over her more, and truly bury her underneath him so his chest was only a foot above her head, his head past her and now over the blankets instead.\n\n\"Fuck no. Just... go slow, you know? Ready to burst, here.\"\n\nHe felt it. Her insides were taught around his girth, fighting him, and he rumbled bliss at the sparks of pleasure it sent down his length until it reached between his legs and heavy, hanging testicles. How Avery and her pack did not indulge this desire, he could not understand. They had enough control to do so, and the hunger for gratification coursing through him was more than for simple hunt and prey. In this form, he wanted to mount and dominate his mate, to the point it was almost overwhelming. The scent of her clenching, leaking slit, dripping juices down her folds and onto his cock where it penetrated the hole beneath, was intoxicating.\n\nHe set one hand around her waist, encircling nearly every inch in his colossal grip, while his other hand pressed to the blanket, bed struggling to handle his weight. He leaned in closer, head pointed down at her, and he licked her neck long and slow, as he eased his hips back a few inches, and pressed them back toward her. The thick base of his cock was most definitely not human anatomy, and an animal part of him demanded he force the knot of his thick member between her firm buttocks, past the lubricated, heavenly rings of flesh squeezing on him, and deep into her; but not yet. It'd be another few inches of length, but Jessy seemed to enjoy such deep penetration into her comparatively small body. And so did he.\n\nAs he found a gentle pace, each thrust causing the knot of him to reach her opening, but not push into her, causing her large ass to ripple around it, Jessy moaned openly. She pressed one hand down against her abs where each thrust created a small bump, marking how much he was stretching her taut insides and filling her lean waist. Her other hand reached between her thighs, and began to masturbate again, stroking her clitoris and smooth folds. Without a single hair on her legs or sex, his eyes were treated to the open display of trembling muscles and glistening skin, as Jessy groaned.\n\nShe slid the hand pressing on her abs upward, up to her chest, played with one of her lightly jiggling breasts for a few moments and the black X that marked it, before she set it behind her head. A makeshift pillow. Smiling up at him, she blew him a kiss, and started to rock her hips in rhythm with him.\n\n\"I figured, after how primal and aggressive you were with Caleb, you might let out some of that aggression on me.\"\n\n\"You want... faster?\" he said.\n\n\"Nah. Like this, I can just lay here, enjoy myself, and let the heat build until it boils and I just cream everything.\" She took a long, deep breath, purposefully showing off how it caused her heavy breasts to rise, and she began to scoop into her cunt with her masturbating hand. Curling fingers pressed up against various bits inside her, with far more expertise than Eric would ever have, he knew. She was much older than him, after all, and knew her body well.\n\nHe kept his thrusts slow, each pressing the knot of his shaft against her clenching, massaging ring of flesh without going past it, while her masturbating hand only grew faster. By the time she was ready to orgasm, she was fingering herself with fervor, almost slapping her fingers up against her insides, and causing her breasts to ripple against her chest. Her scooping fingers didn't slow, and she purred, even growled, as she began to tremble. A copious wave of her juices began to drip down over his cock, soaking his length where it spread her ass apart.\n\nRumbling, he set both hands onto her hips, and stood up.\n\n\"H-Hey!\" she said, voice almost a squeak. While her shoulders and upper back remained on the bed, his heightened position caused her ass to raise two feet into the air, his hands keeping her ass snug to his cock. Her breasts hung toward her shoulders and neck, and her eyes opened wide, as he began to force her hips toward him. \"Oh fuck.\"\n\nHe almost laughed at her words. She enjoyed the ridiculous dialogue. He enjoyed how playful she was. But the laughter faded quickly, as he rumbled bliss at the sensation of her drenched ring of flesh squeezing on his cock in spurts, and he began to force the far thicker base of his length into the girl's ass. With another groan, she managed to relax the clenching muscles, and her once masturbating hand now held onto his wrist, as she began to spread open.\n\n\"Fuuuuuuck.\" She let out a long whimper, and bit her bottom lip as she stared up at him. The distension along her abs moved higher, and grew thicker, as the angle forced his cock toward her belly, pressing against her insides and sensitive parts. As she grew more comfortable, she hooked both hands behind her head, and relaxed into the bed and his grip, as he stretched her ass taut, until it began to slide over the sensitive flesh of his girth's knot.\n\nShe squeaked as the final few inches of his cock eased into her, and her eyes closed as she melted into the blankets. He, on the other hand, looked down his body to see where her large, firm ass cheeks now pressed to his furry thighs, and the entirety of his cock was inside her. Her insides wrapped every inch of his cock in a tight sleeve of soaked, hot, squeezing flesh, and he struggled to not unleash his need to pound her into the mattress, as waves of bliss rippled down his fat girth.\n\nHe pulled away a little, and growled as the pleasure filled him, her squeezing rings of flesh preventing his escape. Her smooth slit, sitting above where he skewered her, clenched on itself, and several droplets of her juices leaked out to flow down onto their connection.\n\n\"Going to tear rip my insides open,\" she said. He pulled his head back. The last thing he wanted was to hurt her, but she laughed, reached out a hand to pat his stomach where it sat above and between her thighs, and she wrapped her legs around his goliath waist as she put her hand behind her head again. \"We used a bunch of lube for a reason. Just don't piledrive me and I'll be fine.\"\n\nHe rumbled as he smiled, and he looked down at the subtle, larger distension along her tight waist under her defined abs; rumble turned into happy growl as he began to thrust back and forth again, and the distension moved with him. She enjoyed being filled to near bursting, a lot, and she mewled again as he pushed back into her, balls deep. The gripping ring of muscle wouldn't let him leave her now, trapping him inside her, as he gently pumped her depths a couple inches.\n\nIt wasn't long before he began to fill her with his cum. The rolling waves of hot pleasure filled him, rippling outward from his cock and from between his legs, as inner flexes of his muscles caused a hot gush of thick, white fluid to pour into the woman's body. A small thrust, for another gush. And another, and another. He shivered with the pleasure of it, and gently lowered himself down as satisfied animal instinct let him relax. Lower, and lower, until her ass was on the pillow again. Lower, until he set both hands down against the blankets around his mate, and put his chest a half foot above her own. With his head next to hers, he licked her neck several times, rumbling bliss, and filling her and the bed with the crocodile-like vibrations. Still a few more thrusts, gentle, tender, each earning a few more spurts of his heavy cum, and earning some mewls from his mate.\n\nJessy reached out, hugged his neck, and kissed the side of his snout. She was shivering. Somewhere along the line, she'd cum again, a small orgasm mixed into his own, dripping her juices down from her slit onto her ass and his cock. And knowing that, set his body on fire.\n\nHe turned her over.\n\n\"Hey! Thought we were gonna cuddle?\"\n\nHe laughed again, a heavy, animal sound. With one hand still holding her waist, he turned her over so she was facing down, and he pulled her off the bed, holding her chest in his other hand. He brought her down onto the floor, and got to his knees, all the while keeping his hard cock inside her cum-filled ass; warm, and lubricating, tingling along the swollen girth, and massaged into his skin by her taut depths.\n\n\"Doggy? Fucking animal.\" She laughed at him, but she pressed her weight onto her palms, and arched her back downward, highlighting the curve of her body and extreme hourglass figure of her wide shoulders and hips compared to her slender waist. \n\nWith her on her knees on the floor, he had to spread his own to level with hers, massive and tall as he was. He pressed one hand to the floor beside her, still looming well above her, while his other wrapped the tiny waist she was showing off, and pulled her toward him.\n\n\"Fuuck... fuuuuuuck.\" Her clenching ass jiggled as it hit his lower abdomen, and his testicles were soon soaked as they gently slapped against her pussy. He stared down at her arching body, unable to look away from her ass, how the large mounds rippled when they lightly hit his pelvis, and how her ring of muscle clenched tight enough around the base of his cock to prevent the massive knot from leaving. Unless she relaxed her muscle, he was trapped inside her, and she showed no sign of relenting.\n\nHe pulled away from her, and he could see some of the pink flesh of his cock fight against the soaked, clenching ring of her ass. It quickly disappeared back into her insides, burying almost a foot of meat in her, and a thick dripping wave of his cum oozed out of her, soaking the connection. It flowed down her slit, thighs, and his testicles, coating it all in his own white cum. And when he thrust forward, her own juices joined the mix along his balls, less thick, clearer, almost washing his heavy, oozing cum away. It was a messy business, having sex in his form, filled with scents, fluids, and pleasure.\n\nHe started to pump faster. Still slow, but fast enough that he knew he'd eventually reach orgasm. It'd take a while, but he'd get there. And it was fast enough to earn some groans from the Gangrel beneath him. Each thrust slapped his balls to her slit, and each thrust made the tiny creature tremble. More of her juices coated his testicles, and more, earning a purr from him over the pleasing sensation from its warmth.\n\nWhile one hand held her waist and hips, the other reached out for her chest, and he pulled her up to him.\n\n\"W... what?\" Gasping, groaning, she looked up at him as he pressed her shoulders to his chest, and wrapped his hand around her throat. His fingers were long enough to completely encircle her neck almost twice over, and thick enough that he could only fit two fingers between her jaw and shoulders. He growled down at her as she clutched his wrist with both her hands. Watching her heavy, X-marked breasts jiggle with his thrusts was invigorating, and seeing how his cock pressed against her abs, filling her to bursting, was intoxicating. She reached down with one hand to press against the bulge, the other still holding his wrist, as she gazed up at him, eyes wide as he gently squeezed her throat.\n\nA few harder thrusts earned a few more squeaks, and she reached down to start caressing her folds with her fingers as he fucked her ass. Her eyes closed, and she started to shake as she came again. He didn't stop. Each thrust, gentle and slow, but deep, had her shaking, and he stared down to see drops of her cum land on the floor of his bedroom.\n\nHe gently set her back down, and she didn't bother catching her weight with her hands. She set her shoulders and cheek to the floor, and let her arms go limp, as he continued to fuck her. Lying down like she was, her ass was high in the air, her weight on her knees. A perfect position for him to admire how her large ass jiggled with each thrust, rippling as it gently hit his pelvis, before he leaned down over her, and set both hands onto the floor around her.\n\nHe fully mounted her, burying her underneath him, hiding the entirety of her beneath his size, as he started to fuck her a little faster. She managed to smile up at him, and even pressed herself up onto her hands again. So small compared to him, he had to spread his knees and lower his chest further, putting his weight onto his hands and elbows both, for her to be able to press her back to his chest. But she did, and she groaned up at him as she pressed her ass toward him, while rubbing her head into the fur of his neck and chest.\n\nThe two of them fell into a gentle, consistent rhythm. Each forward thrust was heaven, softly slapping his heavy, soaked testicles against her dripping slit and soaked thighs, before he eventually, slowly pulled back. Delicious friction of her soaked depths on his sensitive skin made each thrust spark pleasure down his length and into his core and thighs. Her clenching ass prevented anything more than the base inch of his cock from escaping, the knot staying snug inside her gripping flesh, but each thrust did let a little of his own cum drip out of her, down her slit, his testicles, and her thighs.\n\nWith time, and a few more soaked trembles from Jessy, his second orgasm arrived. Mounting his mate, he rumbled down at her, lowering his head and looking underneath her where the girl, on her hands and knees, was panting. Her jaw hung open, and her tongue almost dangled from her mouth, as she tried to look up at him.\n\n\"Fucking... filling me up...\" She shivered blatantly, arms struggling to keep her from collapsing, as she started to cum halfway through his own. As he flooded her depths, heavy, hot, thick cum gushing into her in larger amounts than before, a small thrust earned a deep groan from her. Her arms gave out again, and she lay her chest to the floor as she squirted, a small gush of her cum splashing against his testicles where they rested against her pussy. Another thrust earned the same, and the quiet squelch of very, very wet sex filled the air, as he fucked her. He continued looking underneath him, unable to break his ravenous eyes away from the sight of her spread ass, high in the air and pressed to his pelvis, jiggling and bouncing toward her lower back each time he thrust into her. Gentle slaps, again, and again, and again, as he pumped his cum into her, and enjoyed how each soft impact of his heavy balls against her cunt meant he could feel her slit's heat, quivering, before a small squirt of her cum coated them again.\n\n\"Fu... ck... are you... done yet?\" Her words were lost between exhausted moans, and her attempts to get her weight onto her hands failed yet again.\n\nBut he wasn't done. He reached down for her, and scooped her up, holding her waist in one hand, neck in the other. A little force to keep her pinned on his length, and he stood up, taking her with him.\n\n\"Eric! Jesus Christ dude. Can... can you... give a girl a break?\"\n\nHe put her over the bed, and squatted down so her torso rested upon it chest down, her legs dangling off the mattress at the hip. Growling down at his mate, he slowly pulled out, earning some girlish squeals from her as her clenching muscles struggled to let go of the knot of his cock. But with a little force, he managed to pull it out, and Jessy's legs quivered between his own, thighs shaking as the copious amount of cum he'd filled her with flowed back over his cock despite most of the thick, flesh-colored length still inside her.\n\nHe forced it back in, slowly, enjoying how his own cum flowed over his length as he sank the thick girth into her awaiting ass. His mate groaned loudly, legs kicking at the floor between his feet, as he eased the knot back into her taut muscles, and pressed forward until the large mounds of her butt were again pressed snug to his pelvis. With her torso lying on the bed, he spread his legs, squatted down low over her, and put his chest down against her back, pinning her into the blankets with his size.\n\nShe completely disappeared underneath him.\n\n\"W... Wait... Eric. I... need... a break...\"\n\nHe ignored his mate's desperate, quiet pleas, and began to thrust into her. The ring of muscles of her ass ensured the whole of his cock remained inside her, unable to escape, plugging her. If she wanted him to stop, her body disagreed, as her legs kicked at the floor and her squeals returned, higher pitched than he was used to hearing from her. He kept the pace consistent, hard enough to earn grunts from her, gentle enough to keep from hurting her. Each thrust filled her ass completely, his massive length reaching deep into her as the angle forced his cock toward her belly.\n\nA third orgasm would take time to reach, but he wanted it. Demanded it. She was his mate to fuck as he pleased, and she could do nothing but lie there, head and torso pinned to the soft fabric of the human bed, as he took what was his. He thrust into her again, and purred pleasure as he felt her large ass ripple underneath him. He thrust again, and set his hands wide against the blankets, letting his weight simply press down upon her, his chest and stomach holding her down as he felt his testicles slap against her leaking pussy, where it hovered over the edge of the bed. She squirted harder, drenching them, and he sank himself to the hilt and stayed there for a moment to enjoy the gush of her warm juices over the sensitive orbs. She'd never squirted this much before, and the heat of her cum soaking him sent hungry fire through his core.\n\nHe could feel her hands press against the bed, desperate to escape him, but he did not relent. Slowly, continuously, he continued to fuck her, each thrust pressing the whole of his weight down on her and onto the softness beneath them. Another gush of her juices flowed over his testicles, and her thighs shook with her clenching muscles. Her squeals and moans quietened, and her arms gave up trying to push her weight anywhere. Her feet no longer kicked at the floor, and she let her legs spread as they went limp; all the better for him to let his testicles slap against her slit as he fucked her.\n\nShe came again. And again. And again. Her voice had become nothing but little, weak whimpers, and her body remained limp underneath him. While each orgasm that hit her caused her pussy to drench him, the volume of her squeals decreased as she succumbed to exhaustion. Her muscles continued to clench and spasm around his cock, but without the same enthusiasm of before. She was spent, exhausted. If she'd been human, she wouldn't have been able to cum half as often, or squirt half as much, but his mate was a vampire creature, a beast with far more sexual endurance than any human. There was no need to stop any time soon.\n\nEventually, maybe ten minutes later, he rumbled a quiet announcement, and filled his chest with the vibrations of his pleasured purr as he came again. Her insides were filled with his seed, and her body had long stopped struggling. She'd long gone limp, lying there, pinned under his chest and weight, managing only the occasional squeak as he filled her with another wave of his seed, and another. Keeping her balls deep upon his cock, he worked his thrusts a little harder, enough to feel her large ass bounce against his pelvis, and feel her exhausted muscles clench. Taut insides massaged his length, milking him of his seed, until he knew he'd filled her.\n\nHe brought himself up onto his palms again before he knelt upright, and he wrapped a hand around her waist to begin easing himself off of her. She wasn't clenching on his girth anymore, and he was beginning to grow soft. Once he managed to slip the sensitive skin of his cock past her wet ring of muscle, cum flowed out of her, initial gush landing on the floor with a large splash, before the rest oozed down her thighs, thick and white.",
        "He breathed deep, and let the oxygen, and the satisfied sexual need, calm his nerves, until he felt the beast within him settle down. And with it, his transformation faded away.\n\n\"You... you alright?\" he said, as he soon as he felt he had lips again.\n\nShe lay there, unmoving for several moments, before she started to shiver. With a shaking arm and a trembling hand, Jessy managed to make a fist, before sticking up a thumb.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\n~Dear diary.~\n\nJack groaned, and stared at the screen of his laptop. \"Dear diary is all I got? Christ, this is harder than I thought.\" Minutes crawled by like hours, and he blinked several times as he felt his eyes strain, staring at the words. It passed in moments. Things like a simple muscle strain healed instantly, in his vampire body. Hell, he doubted they happened at all, and it was just his mind making him think he'd strained his eyes.\n\nThose were the sort of thoughts he had often, a couple years ago, when he was just a fresh fledgling. Understanding his new body, his new instincts, trying to wrap his mind around the fact he didn't have a pulse anymore, all that stuff. Life, or rather, his second life, had been simple back then in comparison to now. Now, he was trying to understand ancient curses, complicated politics of old beasts and monsters, and the thoughts of psychopaths.\n\nSusanna hated the machinations of vampires. When she wanted something, she took it.\n\nJack froze, and looked left and right in a panic. No one else in the apartment with him. So, just him, going crazy.\n\nYou're not going crazy and you know it.\n\n\"Don't speak to me.\"\n\nYou're trying to write down your inner thoughts. You're practically asking for me to speak up.\n\n\"You're a curse, a... thing, from those shadow owls. When we figure out how, we'll seal you back up, and this will end.\"\n\nGood luck with that. The Sanctified have forgotten much in the centuries since Susanna's Beast was sealed.\n\n\"I won't let you do to Dolareido what Susanna did.\" Might as well use her name, since the curse apparently knew it.\n\nSusanna reveled in destruction, Jack, but it was always guided. She didn't mindlessly slaughter villages. She did it mindfully. She killed thousands, and in her mind, they deserved it.\n\n\"Did they?\"\n\nA complicated question. Susanna had a difficult life, and she blamed many. Most probably didn't deserve to die horrible deaths, but that didn't change that their apathy to her misery left her a cold, broken woman.\n\nGroaning, Jack walked into the kitchen and got himself a glass of blood. \"I don't understand. You're a magical curse thing, or whatever. How do you remember things like a name from a completely different person?\"\n\nVague, floating things, memories. The best I can manage is some names, maybe some motivations, times, places. I don't know how I know them, but I know them.\n\n\"Naturally.\" Rolling his eyes, he stood at his window, laptop behind him on the kitchen counter, and he stared out over the vast city. From here, he could see apartments, most with lights on, and lit from outside as well by the many lit signs. So many people just going about their lives, oblivious to shit like vampires, werewolves, monsters, and whatever else was out there.\n\nYou could, too.\n\n\"Revel in destruction? No thanks. Not interested.\"\n\nDon't be so sure. You think all those pent up feelings, all that rage, that desire to get revenge, think that's all me? I'm not a person, Jack. No soul here. I'm just a tool, giving power, and a voice.\n\n\"So... the desire to skull fuck Angela's corpse?\"\n\nA part of you wants to do that. Something deep down inside you, underneath your Humanity, underneath your memories and personality and psyche, underneath your consciousness. A part of you, tiny and lost, wants to swim in her blood.\n\nUgh, a philosopher. Why did this curse have to be a philosopher?\n\n\"I can't deny that. I'm a living creature... sort of.\" He took a sip, and set his free hand against the glass. It left smudges that'd turn to dust soon, but he didn't care anymore. \"But I think it's the Beast that really wants to indulge. And you're making it... bigger. Its cravings, its desires, its nature, you're making it fight to override me.\"\n\nI can't deny that. I'm a curse.\n\nSnarky mother fucker.\n\nI'm you. You're snarky.\n\n\"Stop reading my mind!\"\n\nI'm in your mind. I am you. What don't you get about that? I'm a voice, a tool, a piece grafted onto you and the vampire part of you that you repress. Stop repressing. Let me out. I'll find Angela, and Jeremiah, and kill every hunter we come across.\n\n\"I\u2014\"\n\nKnock knock.\n\nOh thank god. If this kept going, he was going to snap and break something. He walked up to his door, and peeked through the peephole. Oh god no, Beatrice.\n\nHe opened the door, and met the woman's gaze. Her snake eyes were always a little startling at first, and then the enormous crocodile teeth where her cheeks were, were a lot more startling, but always noticed second. This time, it was the emotion he noticed first, the weight, the sadness, the ruination.\n\nHe stepped back, giving her room, and put a few feet between them in case she lunged for him. \"Beatrice, hey.\"\n\n\"Jack.\" She didn't hold his gaze for long. After a few uncomfortable seconds, she came in, and sat down on one of his couches. \"How you doing?\"\n\nHow was he doing? Ugh, the question was so forced, he almost wanted to yell at her for it.\n\n\"Pretty horrible. You?\" He sat down across from her, glass table between them. Hopefully the glass table would survive this encounter; it didn't always.\n\n\"Pretty horrible. How's your mother?\"\n\n\"She's... she's good. Went hunting tonight, with the Prince.\" Grinding his teeth, he looked to the window. Easier to look at the city than look at Triss. \"She's still struggling with becoming a vampire, and Mary's death. I don't talk about Julias with her.\" \n\nBeatrice flinched with the name. \"Why not?\"\n\n\"Because she'd shatter. Mom is... strong, in some ways. Not so strong in others. She'd happily suffer decades of pain if it meant helping others, especially me or... Mary. But knowing that... that someone died for her? It's eating at her, badly, and I don't think she realizes it.\"\n\n\"Simple-minded woman?\"\n\n\"Very.\" And there was power, in that simple mindedness. His mom would become something great, he was sure, if she could get past the pit of spikes she currently dangled over. \"If you see her... try and, and um... be gentle with her, please?\"\n\nHer gaze looked to the window as well. Eye contact was going to be a difficult thing from now on, and he didn't look forward to learning if it'd ever be possible again. Fallouts from deaths broke a lot of people up. Kid dies, the parents often split. Friend dies, friends thereof often stop hanging out. His sire's death was going to be a wall between him and her for the rest of their existence, and they were immortal. Their existence was going to be a damn long time. Assuming they didn't end up like Julias. \n\nYou won't end up like Julias, Jack. You think I'll let us die? Once we find those hunters, I'll spread their entrails on every power line and every rooftop. No need to stop there. The mysterious threat that wrinkly old monster warned us about? We can find it, and\u2014\n\nShut up shut up. Not now.\n\n\"Yeah, of course, I'll be gentle with her.\" The Nos trembled slightly, struggling to not let her sorrow show. She was failing. \"But I'm not here to talk about that. Not here to talk about Julias, or any of that shit.\"\n\nHe raised a brow, but sighed and nodded as realization dawned on him. \"You heard about the curse.\"\n\n\"Yeap. Rumors spread fast in Dolareido.\"\n\nShit. He'd kind of hoped he'd have more time to figure this out, before this conversation had to happen. Too late.\n\n\"Alright,\" he said. \"What do you want to know?\"\n\n\"Young vamps are saying you've been cursed; which I guess you just confirmed.\"\n\n\"Yeah.\"\n\n\"They say you summoned an army of crows to the hospital, something only an elder vamp can do.\"\n\n\"... yeah.\" On a good night, maybe.\n\n\"And, considering what you did at the prison, something is definitely going on with you.\" Still she kept her eyes on the window, voice steady, despite the fidgeting, trembling fingers. It was taking a lot out of her, to be here. She looked weak, drained, distracted, and broken. What sort of things had she been doing in the dark, since Julias died? Mourning for sure, but what else?\n\nHe almost suggested an exchange of questions and answers. That'd be cruel, though, and Beatrice had never done anything to make him think he couldn't trust her. Jacob, sure, but not her.\n\n\"I'll tell you what I can.\" He got up, and fetched another glass from the fridge. A new bottle, too. They were going to need it. \"For a while now, I've known there was something wrong with me.\"\n\n\"What? Wrong?\"\n\n\"At first, I thought I was just a natural, talented, better than average Kindred for my age, you know? That whole situation with Tony, and Viktor, and then Lucas and Damien. But...\" Groaning, he sat down slowly, as if he weighed a thousand pounds and had a bad back. \"When Angela captured me, tortured me, something snapped. I let out all this... aggression, the sort you'd expect a slasher horror movie villain to have, you know? I wanted to kill them, the hunters, Angela, Jeremiah, kill them and dance on their fucking corpses.\" Beatrice looked away from the window, back to him, and her eyes were wide. It was the reaction he was expecting, and one he wasn't looking forward to seeing on more faces, as this topic inevitably came up again in the future. \"And I found... I could. I tapped into something massive, overwhelming, and it... it made it so easy, to do... Kindred things.\"\n\n\"Kindred things?\"\n\n\"Dominate, Animalism, Resilience, Vigor, it was overpowering how easy it was to just... unleash them. I summoned hundreds of rats like it was nothing, Dominated hunters like it was nothing, suffered gunshot wounds and walked them off, and... it was a slaughter.\" He poured her some of the cooled blood, and slid her the glass. She took it, but her hands were still a little shaky; not because of Julias anymore, but because of him.\n\n\"It gets worse,\" he said. \"After that, I started feeling... rage.\"\n\n\"Rage is normal, Jack, considering\u2014\"\n\n\"No, I mean, not normal rage, not anger. It was twisted, fucked up, aggression and rage that wasn't... it wasn't right. It was cruel, and filled with malice. It kept... getting into my thoughts, and... and... demanding I give into it.\"\n\nShe sat up straight, sipped the drink, and stared at him. \"So you are cursed.\"\n\n\"When Julias died, saving me, saving Mom, it snapped something inside me, a hundred times worse than when Angela tortured me. I was... inside my mind, I guess. White, endless white, and\u2014\"\n\n\"And you saw something in there, something shadowy, like a black fog. It had claws and teeth and shit inside it, right?\"\n\nHis jaw dropped, and he leaned in closer. \"You've been there?\"\n\n\"A couple times, when learning Cr\u00faac rituals.\" She downed the glass, and poured herself another. Another similarity between her and Jessy, and it managed to make him smile. \"According to Jacob, it happens when you really get in touch with your Beast, sort of... remove consciousness from the equation. Just you, and the thing that's been added to you by the embrace.\"\n\n\"Fucking hell. How did you achieve that? Like, meditation and shit?\"\n\n\"I fucking wish. No, we have to get tortured, feel pain, zen out by letting pain wash away all thoughts. So, I mean, I guess it's like meditation, but you go into it with a purpose, to learn something.\" She pat her stomach, wincing. \"Jacob has ripped into me in ways that'd kill a kine a dozen times over. He teaches me the ritual, then shows me how to... communicate, I guess, with some sort of... energy? I don't know. It's something the Beast can manipulate, or speak to, I guess? The ritual let's me tap into whatever it is that makes us Kindred, whatever it is that makes us... monsters.\"\n\n\"Monsters...\" The information about Cr\u00faac was invaluable, and he doubted Jacob would appreciate her sharing it. But she was. She trusted him. And he trusted her.\n\n\"It's easy to forget that sometimes, isn't it?\" she said. \"We see these Begotten creatures, and it's like 'hey, I know you, from that monster story by Stephen King' or some such. But we're just like them, I guess, except...\" The sadness dripped off of her, and she didn't try to hide it anymore. \"Julias disliked them, said they were driven by their hungers to a... yeah, to the point of being a movie monster, the sickening kind.\"\n\n\"If Julias, or the others saw what we've seen\u2014\"\n\n\"They'd know that we're just as fucking twisted and revolting on the inside.\" She buried her face in her hands, before she started rubbing her shoulders. \"So, your Beast, your monster, was in there?\"\n\n\"Yeah. It showed me the past, too.\"\n\n\"How the fuck did it do that?\"\n\n\"No idea. Guess it was like a genetic memory, since it never showed me anything that happened after someone in my bloodline embraced someone. It showed me things from Viktor's past, but only up till he embraced Julias.\" Saying his name over and over was important. They had to get it out of the way, had to accept his death and use his name in conversation. They had to move on, and they had to strategize, make plans, deal with the hunters. Saying his name a lot was inevitable. But god damn it, it hurt every time. \"It showed me Viktor's sire, and her sire, too.\"\n\n\"Fuck, I can barely remember what I did in my visions. It's all dreamy, faded, blurry.\"\n\n\"It's blurry for me too, but I guess because of this curse, it's a bit closer to the surface.\" He leaned back and stared up at the cold ceiling. \"My Beast had chains wrapped around it, tied to it, with heavy blocks and shit holding it down.\"\n\n\"Mine... did not. The fuck?\"\n\n\"It was the curse, being bound by a seal or something.\"\n\nShe frowned. \"A seal? Like...\"\n\n\"Like a ritual, like magic. A member of the Lancea et Sanctum performed it on my great great grandsire.\" Digging up the memory was easier than he'd like.\n\nI'm making it easier for you. It's a glorious history of violence, carnage, and indulgence.\n\nShut up shut up.\n\n\"Jack?\"\n\n\"Sorry, stuck in a thought.\" He took another sip, trying to pass off the internal conflict. \"My great great grandsire, she... killed another vampire, someone who looked an awful lot like her. Drained her until she turned into ash.\"\n\n\"Diablerie? Holy shit.\"\n\n\"And then she... I mean, I guess it was a sacrifice to... my bosses called it the Strix?\" he said. She raised an eyebrow, confused, and he held up his hands, mirroring her confusion. \"Shadowy owl things. That's all I know, and that seems to be all that they know. Either way, it was the medieval ages, long fucking time ago. But whatever she did, whatever the sacrifice was meant to do, the Strix imbued her with... with the curse, this thing that's... that's...\"\n\n\"That wants to rip off Angela's head.\"\n\n\"I wish that's all it wanted to do with her head.\" Sighing, he nodded as he met her eyes again. \"It's strong, and it's violent.\"\n\n\"Well that's good, because that's why I'm here.\"\n\nHe snarled, earning a blink from her as he stood up, and walked into the kitchen. \"You want my help, killing Angela.\"\n\n\"Yes.\" She stood up as well, leaving the glasses and bottle behind as she sat at his counter top. \"It's not like you weren't going to.\"\n\n\"I... I was...\" He snapped his head to the side a couple times. Just point me in their direction, and I'll paint the streets with their blood. The twitch put the conversation on a harsh pause, and Triss eyed him closely until he spoke again. \"I have to be careful, Triss. This curse thing is real, and it's... it's angry, and hungry.\"\n\n\"So, what? You're going to push it on a leash? Take a backseat until the hunters are dead?\"\n\n\"No!\" He slammed both palms on the counter. The Nos didn't blink, or flinch. She'd expected the outburst. \"No, I'm not going to sit back. I need to be careful, but I won't... won't let Angela or Jeremiah get away with this, Triss.\"\n\n\"Good. Then, when I come to you, I want you to come with me.\"\n\n\"What?\"\n\n\"When I come,\" she said slower, \"I want you to come with me.\" Her claws found his hands, and he felt the trembling still working through them. \"I'm going to find where these hunters are, Jack, no matter what it takes. When I do, I'm not going to play by whatever rules the covenants have in place. Fuck the Masquerade. Fuck the covenants. We go in, guns blazing. They won't expect a frontal assault like that.\"\n\nShe was right about that. The hunters undoubtedly expected the vampires to be slow, cautious, and calculating. Vampires didn't rush in head first. Vampires didn't stick their necks out when they didn't have to. Hell, what Jack and Julias had done at the hospital, a slow and calculated approach, was fast and reckless by Kindred standards.\n\n\"And no rules will stop you?\"\n\n\"None. If I have to blow up a building, I will.\"\n\n\"And how are you going to find them? With Black Blood's help?\"\n\n\"I...\" She jerked her hands away, wincing as her eyes fell. \"I'll do what I have to do.\"\n\n\"Think Julias would want you to\u2014\"\n\n\"Don't!\" Her turn to slam her palms against the counter. \"Don't fucking... don't do that. Julias is dead, and nothing else matters.\"\n\nNothing else matters. He smiled as his eyes fell, and he motioned for her to calm down as he set his elbows to the counter.\n\n\"Good song.\"\n\nShe blinked at him a few times, but a second later, she laughed, and nodded, leaning down on the counter as well so only a few inches separated their faces. \"It is.\"\n\n\"I'll help you, Triss.\"\n\n\"You will?\"\n\n\"Yeah, I will. Show up, tell me it's time, and I'll follow.\" God help me. \"We have to be careful, Triss. I don't know what you're doing with Black Blood, Jacob, or that crazy Cr\u00faac shit, but it... it could all backfire. This curse could do things I don't want it to do. And you sound like you're joining the dark side, you know?\"\n\nNodding, she squeezed his hands, and the trembling started to fade. \"I don't plan to sacrifice my soul, Jack. I'm not stupid. Like... like you were going to say, Julias wouldn't want that. But I'm not going to sit by when I could do something.\"\n\n\"If the elders can't do something, what makes you think we can?\"\n\n\"They can do something!\" She threw up her hands, hopped off the stool, and started pacing around. \"I bet Jacob or the Prince or your bosses, or even Garry, could kick their asses in a straight fight.\"\n\n\"You know that isn't how it works. If Garry stuck his head out, got himself killed or captured, you know the Invictus would take advantage. And vice versa.\"\n\n\"Garry wouldn't\u2014\"\n\n\"Yes, he would, Triss. If Maria and Michael were killed, Garry would be knocking on Invictus doors within the week. He moved on Terra Den for a reason.\"\n\n\"You think any of them could get killed or caught?\"\n\n\"After the shit I saw at the hospital, magical barriers and whatnot? Yes, I do. And Damien told us what they did in the tunnels, capturing him and Matt, with a different kind of circle trap thing. If Matt hadn't been there, they'd have all been dead.\"\n\nThey both grumbled. This was the problem with their situation. Elder vampires were strong enough that they could take the hunters in a fight, but even the smallest mistake meant death. As strong as they were, elders had a nasty habit of being particularly weak to fire and sunlight.\n\n\"Antoinette came to the hospital, didn't she?\" Triss said, sitting back down as she calmed down.\n\n\"Yes, she did. I don't think she was thinking straight, at the time.\"\n\n\"Probably not, if you were in danger. If... if I had known...\" Her eyes fell to the counter again, and she gulped as she shook her head. \"No, no, I won't do this. I won't cry. I won't\u2014\"",
        "\"I'm in, Triss. I'm in. And I think I know some other people who will help us.\"\n\nNodding, she raised her head, and forced herself to stop trembling again. \"You do? We could piss some people off, our bosses included, doing this, Jack. I mean it. \"\n\nHe grinned, and sat down beside her at the counter. \"I don't think they'll mind pissing off our bosses. Tell me how I can help, finding the hunters.\n\n\"It... it could mean sacrificing kine, Jack. I'll keep it to scum, but\u2014\"\n\n\"Sounds fine to me.\" Shrugging, and ignoring her shocked expression, he glanced at his laptop, and stepped over to it. \"Gimme a sec.\"\n\n~Dear diary, my best friend died a week ago. Friend isn't the right word for him. Julias was a second father, and a mentor. Angela killed him. I'm going to kill her, no matter what it takes. The end.~\n\nHe closed the laptop, and smiled.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nShe was not looking forward to this call.\n\nIt was not a question of disliking the caller. All things considered, she was very much looking forward to speaking with Elaine. It was the inevitable topics the conversation would summon that would infuriate her, that she wished to avoid.\n\nWith a sigh, she sat upon her throne in her primary meeting room, high within her Elysium Tower, and ran the program upon her laptop. It took much convincing that such a program could be utilized, but only once she had confirmed that the program used every secure measure in existence, did her fellow dragons consider using digital communication. Many of them would have preferred they send mail. Mail, parchment, paper! She rolled her eyes, and waited as the program created a secure connection to Elaine's own computer.\n\nMany elders in the order were old fashioned, despite the goals of Ordo Dracul. While few were as old as her, those in the upper echelons of her order with centuries to their name were simply unwilling to adapt to technology. Antoinette was a black sheep, in that regard. Technology was the future, and if the old fools did not come to terms with that reality, they would be left behind. What would they do in a hundred years, when metal carriages, no longer drawn by horses, pierced the sky? No Kindred had yet to visit space, and none of them knew what would happen in such a circumstance.\n\nAt least her order were not as trapped by their old expectations as the Circle of the Crone. If Jacob had his way, technology would be cast aside, and kine and Kindred alike would be living in the woods once more. Metal, concrete, electricity, all would be lost, traded for vine rope, cottages built with wood and mud brick, and scattered villages instead of massive cities. Kine would crouch around fires, worshiping spirits, some real, some not, while Kindred like Jacob preyed upon them, used them in his rituals, and summoned spirits from across the Gauntlet in his mad pursuits.\n\nShe sighed, tapping her finger on her desk as she waited for the program to secure the connection. The Ordo Dracul was dedicated to uncovering the secrets of existence, but also to the understanding of change. The fact many of her peers, convinced they studied the world and its changing state of existence, were in fact, unwilling to accept technological advancements, was a point of contention within her covenant. Frustrating.\n\n\"Once you cease learning, death is inevitable,\" she said with a sigh. Her peers preached of understanding change, but how many of them could see that, within the next two hundred years, space travel would be a very real possibility? Technological advancement grew both in power, and its speed of growth. To say that, in twenty years, the entire world and its Kindred would suddenly be illuminated under a hunting light of technological advancement, was a very real possibility as well. Could they not\u2014\n\nBeep. \"Ann, thinking?\"\n\nAntoinette looked to the laptop screen, and smiled at the familiar image. \"Always.\"\n\nElaine laughed, shaking her head as she leaned in toward her own screen. \"Do not think yourself into an early death.\"\n\n\"If I do not think, who will? Forever I am forced to break molds, and redefine the world for its own betterment, against its own wishes.\"\n\n\"The other Kogaions think you are mad, if you did not realize. Traditions exist for a reason.\"\n\nAntoinette rolled her eyes. \"They preach of the pursuit of knowledge, and understanding change, but they treat technology as if it were a fad. Fools.\"\n\nHer old friend shrugged, and leaned in closer, so her own computer's camera focused on her face. For all the Beast's natural ability to avoid the lens of a camera, it could not avoid it if the vampire leaned in for a closeup.\n\nElaine was a beautiful woman. Pale skin not unlike Antoinette's, and tall, with flowing long blonde hair. Thin, busty, beautiful, Elaine would have made a perfect Daeva, one who could use her looks to enslave men and women with but a glance. Unfortunately, she was Ventrue. Were she Daeva, Antoinette would likely have included her in far more of her games, when she was younger. Perhaps she would have included her in whatever experiment it was that Antoinette had performed to give herself her hair and eye color, and her proportions. And perhaps, unlike Antoinette, Elaine would have been intelligent enough to journal the experiment.\n\n\"How fairs your city, Sworn of the Dying Light, Architect of Carnal Void, Voivode of Dolareido?\"\n\nAntoinette rolled her eyes. Dragon titles were a touch absurd, but she could not deny she valued them; she had earned them, after all. Her order thought it unusual for a Kogaion such as her to pursue her goals not only without the support of other Kindred save for her sheriff, but also in such a peculiar position. She was an oddity, in many respects.\n\n\"I am surrounded by imbeciles, old friend. Every night, I argue and push for understanding, cooperation, and awareness. Every night, I struggle to teach these fools that, only through critical thinking, and a pursuit of truth, will we survive the flood of change soon to drown us all.\" Sighing, she shook her head as she pulled her hair over her shoulder, onto her chest, and began to comb it with her fingers. \"They are far too obsessed with their own squabbles, their own troubles, and their own desires, to face toward the inevitable danger.\"\n\n\"Give it time, Ann. You've made great progress. Most cities with a Kogaion such as yourself still struggle with battles between covenants. The peace you've created remains, does it not?\"\n\n\"It does, if only barely.\" She got up, pushed her chair aside so Elaine could see, and she stepped over to her window to gaze out over her city. \"Decades upon decades building trust, Elaine. Decades! And still these infants seek reasons to fight each other. Hunters have crawled their way into the cracks of my city, and if I could trust the others, I would organize a full scale search involving each covenant.\" The idea sounded wonderful, and practical. In reality, it was naive. \"Garry Tones and his infuriating ruffians will jump on the opportunity to attack the Invictus if they overextend their efforts, and Turio and MacDonald will gladly cut off Garry's head if he sticks it out too far.\"\n\n\"You could reenact the Purge.\"\n\nAntoinette threw Elaine a cold stare, but it lasted for only a moment before she sighed and shook her head. \"No. Perhaps if Honors were still alive, I might deem it necessary, and recruit the Carthians to my aid once more. But he is dead.\"\n\nElaine flinched at the mention of Viktor Honors. \"I'm sorry, about Tony I mean. I heard he died with Viktor.\"\n\nAntoinette and Elaine occasionally went years without speaking to each other, but when they spoke with each other again, it were as if they had spoken only days before. Such was the way with Kindred of their age; kine as well, she supposed.\n\n\"I am freed by his death, and he deserved a worse fate.\" Nodding, she moved her eyes over the city that sat before her. Hotels, casinos, and buildings of similar entertainment sat a little further away from her tower than buildings of business. They were still close enough that traces of their light cut through her window, and she managed a small smile as their light filled her eyes. It truly was a beautiful city that she had grown, nurtured, molded, and she would be damned before she let hunters, or power hungry Kindred destroy it.\n\n\"News of a giant swarm of crows circulates,\" Elaine said.\n\n\"Yes, that is a problem, a grand one that is half my focus of late.\" Should she tell her old friend, an Architect of Terror, about Jack? Surely Elaine's vast knowledge could help him. She was a powerful dragon, wise, with a bloodied history she had cut her teeth upon, grew from, and overcame. Antoinette trusted Elaine with all but her life, and that was far more than most Kindred were willing to trust others. \"The Masquerade has been damaged by something no one could have foreseen.\"\n\n\"Oh?\"\n\n\"A... a curse, has befallen one of the Kindred here. A relic of the ancient past has resurfaced, and has emerged to explosive effect. It has poisoned, contaminated my... my lover.\"\n\n\"Your lover?\" Elaine leaned in close to her camera, eyes wide with curiosity. Sadness drifted across her, once she walked back through Antoinette's words in her mind. \"Your lover is cursed.\"\n\n\"He is. But it is under his control... perhaps.\"\n\n\"Tell me about him.\"\n\nAntoinette laughed, and shrugged. \"My city struggles and you wish to talk romance?\"\n\n\"Naturally.\"\n\nThe Prince rolled her eyes once more, but her smile only grew. \"He is a small man, and quite young. About twenty, when he was embraced, and embraced only two years ago.\" Embraced by one of the best men in her city, a dead man. She pushed through the sorrow, and did not let it damage her budding warmth as she thought of Jack. \n\n\"That is young, but not unheard of.\"\n\n\"Jack Terry is his name, and while he may be young physically, he possesses critical thinking, awareness, a hunger for truth, and the soul of a cynical old man.\" She laughed, out loud at that, and looked back to her city to let its lights dance across her eyes. \"He is sincere, genuine to a fault, and I cannot help myself when I am near him.\"\n\n\"Typical Daeva.\"\n\n\"Oui, I cannot deny that. When I near him, I want to hold him, pin him down, bury him, and pamper him. And he bathes in my loving touch, content to let me guide his actions under our sheets.\"\n\nElaine swooned. \"I can only imagine what you're doing to this poor boy. Is he timid?\"\n\n\"He can be surprisingly aggressive, in matters of the city or his covenant. Come romance, he was once terribly timid, and frightened. But I helped him grow past his shyness, and now I have acquired someone who loves me for who I am.\" Put like that, it sounded wonderfully dr\u00f4le, and clich\u00e9. But that was what it was, that her relationship with Jack was delightful and fulfilling, because he enjoyed the way she did things, much as she did with him. Attempting to convey such a deep feeling through words seemed a wholly impossible affair, and she sighed wistfully as she smiled at Elaine over her shoulder.\n\n\"I am saddened to hear this curse affects him, then. I... I had assumed, considering the degree of the incident, that he'd be older.\"\n\n\"It is the curse. A seal once contained it, and across sires, through the years, it weakened. We can only assume that the death of his sire triggered its destruction.\"\n\n\"Seal?\"\n\n\"Yes. My love believes a Sanctified, many centuries ago, sealed the curse away with Theban sorcery. Time, it seems, destroys everything.\" Hundreds of years, and spreading across Kindred like a disease. Did Viktor have other childer she did not know of? It was possible. He had come to Dolareido when entering his elder years, and had undoubtedly spent decades before creating empires; or destroying them.\n\n\"I am doubly troubled to hear your love's sire is dead, then.\"\n\n\"Viktor's childe was a wonderful man. Of all the Kindred in my city, I felt he understood my goals better than anyone else; except for maybe his childe. Julias Mire died saving my lover's mother, who is now my childe.\"\n\nElaine's jaw dropped halfway through Antoinette's words, and almost hit her desk upon mention of a new childe. \"That is a lot to take in, Ann.\"\n\nYes, it was a lot to take in. But there was something else in Elaine's eyes, a hint of curiosity, of surprise. Something Antoinette had said had surprised Elaine, something more than mention of a new childe, and the woman was not going to say what. At least, not yet. Such was Elaine's way, sitting on questions to ask them later.\n\n\"It has been a busy time, these couple of years.\"\n\n\"Ok, the hunters and things can wait. You have a new childe?\"\n\n\"Yes. A small, sweet woman, in her mid forties. She is resilient, and yet soft-hearted. I am intrigued by her, how she remains delicate, and yet has the strength to endure the trials of her past.\"\n\n\"Trials?\"\n\n\"Her husband died a decade ago, and her son disappeared two years ago, vanishing from his old life when he became Kindred. And hunters killed her daughter less than two weeks ago.\" Nodding toward the city, Antoinette growled and grit her teeth. \"Two of the hunters are psychotic, passionate, and vicious. They kill innocents in their pursuits.\"\n\n\"That... is unusual.\" A creaking noise drew Antoinette's eyes. Elaine had leaned back in her chair, in much the same way Antoinette did when pondering. \"Your childe is a spirited woman, then.\"\n\n\"Spirited, and naive. I am delighted by her, and terrified for her. I will need to harden her shell, if she is to survive the city. And now that her son has become a vessel for a raging curse, wishing to unleash its malice upon all it deems worthy of its disdain, I do not know what will become of her.\"\n\n\"You're in a terribly complicated situation.\"\n\n\"Indeed.\"\n\n\"And only you and your delicious sheriff fight to keep the utopia of Dolareido from collapsing?\"\n\nAntoinette chuckled and gestured to the window. \"Daniel is still single, if you are interested.\" With a long sigh, she began to pace, moving from end to end of the massive window as she looked down, arms folded across her chest. \"The problem grows worse, Elaine. Azamel has returned. The hunters I spoke of, came in pursuit of her.\"\n\n\"It sounds like the solution is simple then. Expel Azamel.\"\n\n\"I would, but not only is the old monster capable of great destruction, I would be doing nothing but foisting problems we all face onto her shoulders alone. These hunters need to be stopped.\" Laughing, Antoinette buried her face in one hand. \"My troubles do not stop there. Werewolves have come, Avery specifically.\"\n\n\"Oh no. Simon\u2014\"\n\n\"Apparently Simon is dead, or at least Avery is no longer in his pack. She has created her own, and they have come to deal with invading spirits.\"\n\n\"It does sound like you are buried in a maelstrom of troubles.\" Elaine tapped her own desk several times, thinking. Antoinette stopped pacing to watch her, and found the woman twirling the end of her hair with a finger, as she always did when trapped in thought. \"I wish to visit.\"\n\n\"Oh? The city has become a turbulent place, Elaine. I cannot promise your safety.\"\n\n\"The great Antoinette, White-Haired Demon of our order, holding a city alone, cannot promise my safety?\"\n\nThe teasing was pleasant, and it reminded Antoinette of Natasha's barb at Bloodlust. Playful and innocent, but with a hint of truth that Antoinette was forced to consider.\n\n\"It is true, that my situation is problematic. And\u2014\"\n\n\"I'm your friend, Ann. Besides, we can catch up on your experiments. I'd love to see how far you've come in crossing the Gauntlet. And...\" The blonde woman sighed as she leaned back in closer to her camera. \"And I wish to speak more of Viktor.\"\n\nAntoinette raised a brow, and returned to sit upon her grand chair at her desk. \"He is dead, Elaine, destroyed by fire along with my childe Tony. His childe is also dead, and I am lovers with his grandchilde. There is little else to say of him.\" Strange for Elaine to be concerned with Viktor. In the past, she showed little interest in him. As far as Antoinette had noticed, her old friend and the brutal Viktor Honors avoided each other whenever they crossed paths.\n\n\"Consider it an intellectual curiosity.\"\n\n\"You will have trouble studying the remains of a dead vampire, Elaine.\"\n\n\"Perhaps. But as you say, his grandchilde lives, and is your lover.\"\n\nAntoinette frowned. That did not sound like an innocent request, despite Elaine's innocent smile. \"Help is welcome, but my lover is not to be experimented on, Architect of Terror.\" Her old friend's willingness to dig deep into matters of the Beast was well known, and was a driving force of their friendship. But, Elaine had also crossed lines in her younger years, to Antoinette's knowledge. So had she, and the pursuit of forbidden knowledge and lost secrets had been a binding goal between the two of them.\n\nThey had both done things they regretted. But that was then, events from centuries before, now only blurry memories and vague descriptions written in tomes, locked away within the libraries of her order.\n\n\"I will not experiment on him, Ann. Don't worry. But I can't deny this curse is of interest.\"\n\nOf greater interest than her friend was letting on, it appeared. A twinkle in her eye, a small lick of her lips, Elaine let the intrigue show, knowing full well Antoinette would see.\n\n\"What game are you playing, Elaine?\"\n\n\"I will be in Dolareido within a month, Ann. Perhaps we can have one of your famous balls, in celebration?\"\n\nAntoinette could not help but grin as she rolled her eyes once more. Her old friend was playing with her, teasing her, drawing her in, like a kitten and string.\n\nNaturally, she had to give chase."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "anal",
        "deep penetration",
        "large penetration",
        "paranormal romance",
        "squirting",
        "vampire",
        "werewolf",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-06-ch-19"
}