{
    "title": "Adventures of Jason, Teenage Stud",
    "pages": [
        "The Adventures of Jason, Teenage Stud\n\nChapter One\n\nIn The Beginning\n\nBy Western Tiger\n\n(For sake of clarity, even though a few characters in this story are of high school age, all characters are over the age of 18.)\n\nI never intended to become some sexual dynamo at such a tender age. It just kind of happened to me. The physical attributes of which I am blessed are not due to anything that I did, they come from the combination of my parents' DNA. The specific knowledge that comes from scores of sexual conquests would not be mine if that first opportunity had not presented itself in the rather lovely and impressive form of Amber Ormand.\n\nIt was June during the summer of 2012. I'd just had my birthday, and I was looking forward to a rather boring summer of work and not much of anything else. My father had died the year before, leaving both my mother and me alone. Suddenly, my mother was having to support herself and me. She had searched long and hard for a job and had finally gotten a management position with a small business located in the southern part of Georgia about fifty miles from the Florida/Georgia state line. In other words, it was in the middle of nowhere. Small towns and even smaller towns filled with hicks, rednecks, and people with thick, stupid accents. At least that was what I thought as I was forced to move from my hometown, the place where all my friends and memories were, and relocate to a little burg in the middle of nowhere.\n\nThe move happened and I was spending the summer in my new hometown with no friends and nothing to do. I had gotten a part-time job working at the plant that my mother helped operate for extra money, but I spent most of my free time at the public swimming pool. The pool was usually crowded during the day, but by late afternoon, everyone else went home except for the lifeguards and people who came to swim in the cooler evening.\n\nSince I was there often, I got to know the evening regulars and lifeguards. There was a small state college in our town and most of the lifeguards were from the college. The main pair of evening lifeguards were Hank and Amber, and the rumor was that they were a couple and liked working together. Hank was a senior in college about 21, and good-looking, the perfect summer type, good build, blond hair, blue eyes and a great tan. Amber was 19 about to enter her sophomore year. She was a beautiful strawberry blond with deep green eyes with a warm friendly personality. She was 5'6\"and had an impressive figure. She was very lean with a taut, flat stomach and strong beautiful legs, but she also had an excellent tight ass and a pair of 36C's to complete the package. When she was on duty, she had to wear the \"official\" pool one-piece swimsuit, which could not help but cling to her every curve. However, when she got off duty, she would change into some of the skimpiest bikinis I had ever seen. They barely covered her very impressive contours; and this was the main reason that I came to the pool every night. I had nothing else to do and the prospect of watching a college-age goddess walk around without much clothing on sounded like fun to me.\n\nHank and she were friendly to me. They took time to talk and get to know me and I appreciated it. I had nothing in common with most of the kids in this town. While my father had not been rich, we did travel, and I had been places and seen things. Many of the kids in this town had not been anywhere except Atlanta or Jacksonville, and to be honest they bored me to tears.\n\nSo, my life settled into a little routine. I got up and went to work about 9 AM and did light chores around the plant. Cleaning, run errands, pick up stuff at the train, bus, or airport, help unload and pack the trucks. Then about 2 PM, in the afternoon, I got off, went home, made lunch and watched TV. The summers in South Georgia are brutal, so I would wait until about 4:30 PM, and then head over to the pool and hang out. I did this most weekdays, and also hung out about 4 to 5 hours on Saturday and Sunday.\n\nI guess I should describe myself since this is my story, so here goes. I am pretty young in terms of age, but my father had been a big football player in his day, and I had inherited his physique. I was about 6'1\" and still growing, so I was skinny. Yet, I was starting to fill out because of all the swimming and weight work that I did at home. I guess I am saying that I had good definition in my arms, legs, and chest. I had dark brown hair, blue eyes and I always got a great tan because of my mother's Portuguese background. I was also blessed although I thought it was a curse, with an exceptionally large cock. I thought I was a freak. Yeah, I had read about big dicks and how girls loved them; but the two times any girl had ever seen my cock, they got too scared to touch it and we stopped any sexual activity.\n\nMaybe I should correct my description to include that I was an extremely horny kid with a big cock, and nowhere to put it. I masturbated about 4 to 5 times a day and that didn't seem to do any good either. I always seemed to be in a constant state of erection. Anything and everything turned me on.\n\nNow you are up to speed with me and the situation. I was a total virgin packing heat, but I thought I was mostly ready for a freak show in a carnival. Because of my size and constant state of arousal, I always wore very baggy pants and swim trunks. That was okay until I dove into the pool, and my trunks ended up around my ankles. That could be embarrassing, trying to stuff your over eager sausage back into your pants surrounded in a pool by a bunch of 10-year-old kids and their mothers. Yet, I was driven to come to the pool every day and watched Amber. I was I love. I was in lust. I would whack off to her image in my head every day. She was the hottest thing that I had ever seen. I tried not to be a puppy dog around her, but I am sure that she and everyone else knew that I was totally gaga for her. June passed slowly, and I spent all my free time at the pool. I drifted by going to work, and then to the pool, staring in lust at and whacking off to private thoughts of my personal goddess.\n\nThen suddenly, that life came to a dramatic end over the 4th of July weekend, and my new life began. I had been away from the pool for three days because of a special rush work order at the plant. I had stayed late everyday helping to load and unload the trucks that seem to come rolling in non-stop all that week. Finally, on Friday afternoon, I got away and made straight for the pool to gaze at my favorite walking pin-up girl. When I got there, I noticed that neither Amber nor Hank were around which was very unusual. One of them was always on duty during the night shift. I asked the other lifeguards about them, but I got very strange answers. No one wanted to say anything. At last, one of the regular mothers told me that Hank had been caught in the pump room having sex with a young girl. He had been fired, and then arrested. It turned out that the girl and he had been fucking all summer long. It was a huge scandal, and no one had seen Amber for 3 days.\n\nI was shocked to say the least. I was dumbfounded was more like it. I could not fathom Hank hooking up with a flat-chested tease. Why would you give up perfection to be with someone who was not that attractive? It made no sense to me.\n\nYet mostly I wanted to find Amber and see how she was. I though perhaps I could comfort her in some way. I had visions of me coming to her rescue and ending up her boyfriend. You know that self-centered thought pattern that all teenagers have thinking that everything on the planet revolves around them. I did not think of her family or other friends or anyone else that might be in her life, I just thought she would want to talk to me. I knew that she lived on campus somewhere in student housing, so on Saturday afternoon, I walked on to campus and hunted down her dorm room. She lived in an unrestricted access building, anyone could come and go at any hour. After I found her room number, I just walked up and knocked.\n\nThe door opened and there stood my angel wearing a tight white T-shirt stretched across her large breasts and a short white skirt that showed off her wonderful legs with flip-flops on her feet. Her face and eyes were red from all the crying that she had been doing. She looked beautiful in her need and anguish, and I wanted to help her with all my heart. She stared at me for a long moment until she realized who I was. She did not recognize me out of context for a second. \"What are you doing here?\" She asked in a tone harsher than expected.\n\nI gulped and launched into my pre-planned speech about friendship and wanting to help her. After about 30 seconds, she cut me off, \"Look Jason, thanks for wanting to help, but I don't want to see you now. Okay?\"\n\n\"Uh ... sure ... sorry,\" I stammered. With that, she slammed the door in my face, and left me standing humbled and embarrassed in the dorm hallway. Bewildered and numb from her reaction, I stumbled home and walked into the kitchen. Mother was just fixing lunch. She took one look at me and asked me what was wrong. Now I was both angry and proud of my mother. Angry that she made me move here to this shitty town, but proud of her and how hard she worked for us. And we had gotten very close in the past few months, since it was only us now. Imagine if you will, a tall gangly youth spilling his guts out about his goddess to his mom. I will give her this, she listened with care to all of it and then gave me good advice.\n\n\"You did nothing wrong, Jason. You tried to help someone who you thought was a friend. Maybe you put more into the relationship then she did, but that does not make what you did wrong. She was upset, and sad. Give her sometime and hopefully she will be your friend again, and if not, that is okay. You were her friend and that is what counts. Okay?\" I agreed and went up to my room even more ashamed that I had to get advice about women from my mother.\n\nI stayed away from the pool on Sunday, but on Monday of the long weekend, I said, \"fuck it\" and decided to get some sun. I got there about three in the afternoon and the place was jammed. They had extra lifeguards on duty to cover all the areas of the pool. I looked around and saw Amber on one of the far towers. She had her one-piece on, a floppy hat covering her face, and a wide streak of zinc-oxide on her nose. She looked beautiful, but I avoided her all day and stayed on the other end of the pool. Along about 5 PM, the crowd started to thin out and the pool became open for swimming laps. I started my workout of doing a hundred laps. It usually took me about 20 to 30 minutes to do that depending on hard I was pushing. I was about through and was coming into my last turn when I lifted my head and saw Amber standing at the top of my swim lane. I stopped and brushed the water out of my face and looked up.\n\nThe sight of her at that angle was impressive. I tightened my grip on the concrete side because the sight of her lovely body made me gasp. She had taken a swim earlier and her \"official\" suit was plastered to her body. Her breasts were beautifully proportioned, and the damp bathing suit made her nipples stood out firmly against the tightly stretched material. I ran my eyes across the rest of her body as I stared up at her and they quickly found the v between her legs. I could clearly see the outline of her sex under the latex suit, and my cock give a big lurch in my pants. This girl was so sexy and desirable, how could anyone have been stupid enough to cheat on her?\n\nShe knelt down on the desk beside me, and her suit seemed to cling to her voluptuous curves even more. Her thighs tightened, highlighting all the muscles in her legs, and the top of her suit pushed her tits closer together giving me a close view of her mind-boggling cleavage and excited nipples. The suit stretched tight over her pussy, clearly showing she was shaved because every inch of her neither lips were clearly defined by the thin material. My cock started twitching even more as she looked me in the eye, \"I wanted to say that I am sorry that I bit your head off the other day. It was nice of you to come by and look in on me. I know that you don't have many friends here, and that was rude of me. I hope you accept my apology.\" I was mesmerized as I looked at her. My goddess was apologizing to me. She was so close that I could smell the suntan lotion and cholerine on her. Her cunt was inches from my face, and I could clearly see the cleft of her pussy where the garment ran between her legs. It was all so overwhelming for me that I got dizzy and felt my super excited cock and balls begin to pump. Right there in the pool, my cock exploded sending jet after jet of white jizz shooting into my trunks. It was so powerful that I grunted, and my face turned red, which she must have taken for embarrassment. As I clung to the edge of the pool for dear life and my cock shooting the biggest load that I ever remember off in my swimsuit, she reached out her hand and stroked my face.\n\n\" Oh, you are blushing. That is so sweet.\" Her touching me must have done something to my internal organs because suddenly I was producing sperm in record amounts. The pumps at the base of my cock were working overtime sending rope after rope of the white stuff down my leg and into the water. The water should have been milky white and cloudy around my ankles so much had poured from my body. I looked up into her deep green eyes and mumbled that it was okay, and she smiled down at me. Saying that she needed to get back to work, she rose. My eyes were glued to the patch of suit covering her shaved cunt, and then she turned and walked away. With every step, her tits bounced up and down and her hips gave a very sexy wiggle. I clung to the poolside and just tried to come down from the most powerful orgasm that I had ever had. I must have stayed there for 5 minutes just breathing and hoping that no one would notice the thick cloud of murky stuff surrounding my knees. Finally, I crawled out of the pool and lay down on my towel in the late afternoon sun and drifted off to a very pleasant dream of Amber and giant fountains of cum.\n\nI awoke with a start a little before 7 PM, and there were very few people left, a couple of kids playing in tag in the deep end, and a mother with her small child leisurely floating around the shallow end. I sat trying to clear my head and looked up at the towers to see if Amber was around. Shelia, another girl who worked the late afternoon shift was up on the lifeguard chair. It was getting cold and even though I had no place to be, I decided to go home and grab dinner. I went to the changing room and took a quick shower. I put on my shorts and t-shirt, stepped into my sandals and threw my swim stuff in a shoulder bag. I headed for the parking lot and just passed the closed food stand, when I thought I heard crying. I took a moment to locate the sound and realized that it was coming from behind the stand. I quietly tip-toed down the side of the building and glanced around the corner. Sitting there on a bench holding her face in her hand and crying her eyes out was Amber. I hesitated a moment, but this was my friend in distress, so I quietly walked over and sat down next to her. She didn't respond immediately, but when I slipped my hand around her back, she suddenly glanced up. Her face was red and swollen from crying and her eyes were streaming with tears.\n\n\"What are you doing?\" she blubbered as she gasped for breath. I took my hand and brushed away the tears from her face. \"I am just here,\" is all I said. Amber looked at me for a moment and then started to cry again. I just continued to hug her, and after a minute, she buried her face in my shoulder and gently sobbed. I just sat there patiently waiting. I was holding my dream girl, there was no place on earth that I wanted to be more then right there. I took the moment to check out what my perfect angel was wearing as I held her close to my body. She was wearing one of her skimpy bikinis. This one was lime green and worked well with her tanned skin. I lowered my eyes and saw the lime green material of the bikini top tightly molded to her perfect breasts. The cooling night air had made her nipples pointed and hard like pencil eraser tips as they pressed against the thin material. Her stomach was flat and flowed into the natural curve of her pubic area. My eyes focused on her pussy mound, and the cloth pressed against her cunt lips so that I could clearly see them as well. My cock stiffened perceptibly; I could feel it push down my thigh. Thank God, I had chosen a pair of loose-fitting shorts. My cock began to pulse with my heartbeat, and I moved my bag to my lap to cover my rising shaft.\n\nAmber raised her face and looked into my eyes. I felt myself drawn into her beautiful green eyes.\n\n\"Do you think I'm sexy?\"\n\n\"Excuse me?\"\n\n\"You heard me. Am I sexy?\" she asked, sitting up and looking straight at me.\n\n\"Amber, are you serious? Half the guys at this pool dream about being with you, and the other half are gay.\"\n\n\"Come on, Jason. I'm serious. Am I sexy? I want to know what you really think.\"\n\nI was confused and excited by this turn of events. \"Why are you asking me this?\"\n\n\"Why can't you answer a simple question?\"\n\n\"Are you asking because of that bimbo, and Hank?\"\n\n\"Well, yeah...,\" she sat back and leaned against the wall. The movement caused her heavy breasts to bounce just a little and push out against the material of the thin bikini top. I just stared at the incredible sight of her 19-year-old tits in awe.\n\n\"Jason, you're staring at my breasts,\" Amber said with a sneer in her voice. This caused me to start.\n\n\"Sorry,\" I said looking up into her eyes and blinking hard again. It didn't help. I was still having problems focusing on her face. \"But maybe that proves my point. You are breath-taking!\"\n\nShe rolled her eyes and stood up. This put me up close and personal with her amazing teenage lower half. Her hips sloped into a classic hourglass shape, while the cheeks of her ass were firm and smooth. It was all I could do not to reach up and touch that little, tiny bikini bottom. The material rode low on her hips and pulled tightly across her amazing butt. Her rounded ass made any bikini bottom perfection. Her athletic legs were taut and well defined. I loved the way the arc of her calves led down to her sleek ankles and slender feet.\n\n\"Jason, you are staring again,\" she said as she looked at me over her shoulder.\n\n\"Uh, sorry... but listen to me. You are absolutely everything any normal, decent guy could ever hope to have in his wildest dreams. Are you sexy? Are you kidding? God, you are without any doubt the sexiest girl I've ever seen. You are perfect.\"\n\nShe turned to face me and now her very prominent delta was staring me right in the face. I could clearly see the outline of her vaginal lips through her bikini bottoms. I gulped as my cock surged down my thigh to almost full mast.\n\n\"Well, if I'm so damn irresistible, how come Hank dumped me for that tramp?\"\n\nMy eyes rose to look into her penetrating eyes \"Amber, I really don't know why Hank did what he did. All I know you is you don't know how gorgeous and amazing you are, or maybe you do. Yet, all you have to do is look in the mirror and see your body and face, and you'll only be seeing one percent of your total beauty. And, if Hank is too much of a dickhead to see that, then he doesn't even deserve to date you!\"\n\nAmber looked at me for a long time, or it felt like a long time. It was subtle, but there was a strange shift in her stance. A change in the way she looked at me, as if she was seeing me as a person for the first time and not a geeky boy from the pool. Finally, a smile came to her lips and a light danced in her deep green eyes. \"Thank you.\"",
        "\"You're welcome.\"\n\nShe reached down, causing an eruption of movement in the area of her swim suit top, and grabbed my hands and pulled me up. As soon as I was standing, she hugged me tightly, plastering her tight body against me, forcing her breasts against my chest. I held her close, relishing in the moment. She felt so good. Her hands encircled my waist, and she pulled my lower body to hers. My crotch hit her in the belly button area. There was no way that she could not feel my thick bulge pressed up against her stomach. For several seconds, we just stood there. I was in heaven.\n\nFinally, the embrace broke, and Amber stepped back, still touching me. \"What are you doing now? Do you have to head home?\"\n\n\"No plans,\" I answered, wondering to myself where this was going.\n\n\"Did you drive?\"\n\n\"Rode my bike.\"\n\n\"Would you like to get some food? I am starving. I'll drive,\" Amber asked.\n\n\"Sure. That would be great!\"\n\n\"Good, let me go change.\"\n\nAnd just like that, I was going to have dinner with my perfect angel. Once she was out of sight, I breathed a sigh of relief. My lust for this woman was in danger of ruining my chances here. I would have to try and calm down. For a split second, I thought about running to the men's room and jerking myself off over the mental image of her half-naked body, but I didn't really have the time to fully enjoy how close she had been to me. I cursed the fact that I had not masturbated more than the accident in the pool. My over-eager teenage balls were packed full of sperm, and I was very horny. However, the delectable Amber made things even harder, including me.\n\nI had calmed down when Amber walked around the corner, and I was gone again. She had left on her bathing suit and thrown on a short blue jean skirt that covered her bikini bottoms, because you could see a bit of it ride up past the waist of the skirt. And a white halter top covered the top of her lime green bikini. The strings of the top were still around her neck and a pale shade of green was visible under the thin white top. She grabbed my hand and pulled me toward the lot. When we got to the car, she dropped my hand and reached in her bag for the car keys. We got into her late model Nissan. I watched as the short skirt rode up her thighs and revealed just a hint of her green bikini underneath. I put my bag back in my lap because my cock was rock hard again.\n\nWe drove over to the nearest MickeyD's and got into the drive-thru lane. The entire time I was with her, I had to keep a lid on my excitement level. I was about to go thru the roof of her little car. I was riding with my goddess, she barely had any clothes on (if you consider a tiny bikini clothes), and she already said she had free time tonight. It was all I could do to keep from just staring at her crotch or her legs or her tits. Instead, I just stared out the passenger side window and acted like riding around with your personal wet dream happened every day.\n\nAfter we got our food, she pulled the car around to the back of the parking lot and found a space. She turned off the lights and engine and sat back to eat her burger. I really was too nervous to eat much, but I sure enjoyed watching her eat. She did it with gusto, enjoying her food, and making no bones about it. I was also settling down a little as we talked and ate. She asked about my life, and I told her about the move, Dad, and how Mom was struggling to make a place for us in this new town. She seemed to really listen. She was really the first person since I had gotten to this new town that I had spoken to about what was going on in my life. After about 20 minutes, we finished, and she asked me to throw away the trash. I got out and put the garbage in a nearby trash can. As I walked back towards the car, I saw her quickly brushing her hair and arranging her clothes. I wondered to myself, \"is that for me?\" I got in the car and sat back wondering what was going to happen now. Was she going to take me back to the pool for my bike, or were we going to just hang out some more? She handed me a breath mint after taking one herself, and we sat in silence for a couple of moments just sipping our drinks. It was as if she was making some kind of decision. The tension for me was incredible, because more than anything I did not want to go home right now.\n\n\"Do you mind if I stretch out?\" she asked suddenly.\n\nNot sure of what she meant, I said, \"Fine.\"\n\nAmber turned around in her seat towards me and brought her legs up. She laid them across my lap and leaned back against her car door. She crossed her legs at the ankles, one over the other. Her skirt rode up almost to the bottom on her bikini, and a small hint of green peeked out at the junction of her thighs and her hiked up skirt. Then she brought her drink to her lips, took a sip and smiled at me. The entire time she was looking at me with her deep green eyes. It was so casual, and so sexy, and so seemingly uncalculated that I was thunderstruck. My goddess had her legs across my lap, exposing her legs up to her crotch, and was so very nonchalant about it. She must have felt my cock surge down my thigh as her feet rested on my crotch.\n\nAmber took another sip and looked at me with an evil glint in her eye. \"I've been thinking about something. Have you ever had sexual thoughts about me?\"\n\nI almost choked on my soda, \"WHAT?\"\n\n\"Have you ever had sexual thoughts about me?\"\n\n\"Oh, no, it's the return of 'why-am-I-not-sexy' routine?\" I asked trying to cover my nervousness.\n\nShe gave me a disgusted look, \"No, jackass. I really want to know. It's a simple question. Have you ever had sexual thoughts about me?\"\n\nI didn't know where to look. At her fantastic legs and exposed bikini panties, or at her tits and her nipples poking through, or at her lovely face with the piercing green eyes that were boring holes in me at the moment. \"You really want to know this?\" I asked solemnly. Amber answered me by raising her eyebrows. \"Wow! I'm like ... really uncomfortable ... talking about this.\"\n\nI looked up to see if there was for a crack in her demeanor, but nothing. \"Okay, you won't remember this, but the first day I came to the pool. I walked into the snack bar and bumped into you. You turned around and said, 'excuse me,' and I fell in love with you then.\" Amber furrowed her brow. \"I looked into your amazing eyes, and I was gone. Then, you turned and walked away ... and ... your... legs. I just stared at your legs. They were perfect. And your tan, and your ass, and the way your hips moved. I just melted.\"\n\nAmber just listened to my monologue and took a sip on her drink. I searched her face for some sign of how this was going. \"Okay... awkward moment here. Uh... you are the main ... reason that I come to the pool every day. I've thought about you in every imaginable way. I've thought about what it would be like to hold you... to really hold you, like a boyfriend holds his girlfriend.... Oh, God...stalker alert here. \" I just stopped talking and looked at her face. I could not read a thing there.\n\n\"No, it is cool. I asked, remember? How come you have never given me any hints?\"\n\n\"Hank, for one, and you are older than I am.\"\n\n\"What's a year? So, you're like a year younger than me. Big deal.\" I was amazed! She thought I was older. I knew better then to open my mouth now. I struggled to find a plausible answer. I could only blurt out, \"My feelings for you are so strong that I was afraid that I would totally lose control.\"\n\n\"Sometimes it's good to get out of control.\" There was an exceedingly long pregnant pause as we looked at each other. She gave me a little smile. She put her drink in the cupholder and removed her legs from my lap tucking them underneath her.\n\n\"Come here,\" she said as she pulled me to her and pressed her lips against mine. She kissed me; at first lightly, but it quickly became deep and passionate. I surrendered to her desire and kissed her back with all the passion I had. Somewhere in the back of my head, I realized that I was just revenge sex, but I didn't care. I was kissing my goddess. Her arms went around my neck and pulled me to her. Our thighs pressed together, and her tits pressed against my chest. Our tongues dueled each other as the passion grew. My inexperienced hands did not know where to go. I had them on her back lightly holding her, but as the passion rose, I snuck them around the sides of her body and slowly gripped her breasts in both my hands. She groaned into my mouth, and her pointy nipples seemed to grow harder in the palms of my hands. Her hands dropped to my crotch, and she felt my rock-hard erection that was painfully jammed in my shorts. Suddenly, she jerked back from the kiss, and stared into my eyes.\n\n\"Is that all you?\" I nodded stupidly in the affirmative. \"Fuck! This is going to be fun,\" she gushed. She turned toward the steering wheel and started the car. Quickly pulling out of the parking lot, she headed the car out of town. At the first stop light that we came to, she reached over and grabbed hold of my straining cock and squeezed. It felt like magic to have someone really want my cock, and I dizzy with excitement. As the light turned green and we started out of town, she ordered me to take my prick out of my shorts. I quickly complied. I pulled my shorts and underwear down to about mid-thigh in a single gesture, and my erect penis sprung out into the night air. Amber took one look at my cock waving back and forth, and just groaned, \"Oh fuck!\"\n\nWhile driving she reached over, and began gently stroking my meat, getting to know this important part of my body. I guess a description would help here, so here is how I see my own erect prick. I am a little less than 12 inches long, and very thick. The long shaft has a small curve, so it points up in the air. The crown is fatter than my shaft, shaped like a large mushroom with a dark pinkish brim. My balls are large and covered with dark curly hairs. Like I said before, I thought I was a freak, but she seemed to think otherwise.\n\nShe was teasing the fuck out of me. She kept experimenting with different ways to make me groan or jump. She got the best response from me by taking her nails and lightly scratching the underside of my cock. She quickly had me on the edge of cumming all over her hand. We headed out towards Hillside Estates, a new subdivision they were building near what would be my new school. However, progress was slow because of the economy and there were many finished houses, and no one lived out there yet. As a result, it had become a popular hangout for kids to come, drink and fuck. Amber turned into the subdivision and drove around until she found a secluded cul de sac, and then parked. The entire time she had been stroking my cock with one hand and driving with the other. The girl had skills. My rigid cock was dripping so much pre-cum now that both my cock and her hand were slick with it. After we parked, she shifted in her seat and took my thick meat in both her hands, sliding her hands up and down the length getting me hotter and hotter.\n\n\"Okay, take all your clothes off,\" she ordered. I quickly obeyed and eased my shorts and underwear off and then pull my t-shirt up over my head. I was now bare-ass naked in the front seat of her car. She still had all her clothes on. \"Lean back against the door and spread your legs,\" she instructed me, and I complied. Amber then lay down on the car seat with her head in my lap, her face eye level with my rock-hard cock. She gently breathed on my hyper-sensitive skin and my cock jerked in response. She chuckled to herself and lightly brushed the shaft with her fingertips. Then as she started to jack me with one hand, and her warm breath wafted across my dick, I closed my eyes and sighed in pleasure. She flicked her tongue over the tip of my prick, and I groan my approval. She used her tongue to lick the entire length of my manhood with long, luscious swipes. Amber's mouth was practically watering as she took me into her mouth. Gently she closed her lips around the tip of my cock and sucked it in a few inches, letting her tongue swirl around the shaft. Soon her head was bobbing up and down my dick, gradually working more and more of my wide shaft into her throat.\n\n\"Oh Fuck,\" I exclaimed as she increased the pressure and speed of her sucking. She kept adding saliva to keep my cock moist, and soon slick, juicy sounds filled the car as her mouth glided up and down. I was heaven and I rocked my hips, thrusting in and out of her blissfully wet warmth. \"Yeah...suck my cock,\" I moaned as she slid my dick deeper into her warm, wet mouth, swallowing me almost to the root. Then she moved her hands to my nuts and started to squeeze them. I growled my encouragement, \"Oh yeah, Amber, play with my balls.\"\n\nShe cupped my balls in her palm and caressed, playing with my sac. Then she changed the rhythm of her sucking and started to take long slow glides up and down my hard rod. I watched in amazement as the almost entire length disappeared into her mouth. She had taken ten inches into her throat. Her nose was pressing against my abs, and the feeling was unbelievable watching my cock slide in and out of her mouth. I was so aroused that I was ready to explode already.\n\nAmber sensed my nearing orgasm and she backed off before that could happen. She pulled her head back and removed her hands, leaving me exposed to the cool night air. The coolness was a surprise compared to the warmth of her mouth, and we watched as my cock danced in midair to the beat of my racing heart. Then she caressed my twitching cock with a light finger, teasing just enough to keep my steel-like friend jumping to her attentions.\n\n\"God, I love your cock! You are so much bigger than Hank! I want your cum so bad!\" With that she went in for the final assault, and I almost died with pleasure. She took in the first 4 to 5 inches and began swirling her tongue on the sensitive underside. She used one hand to hold my swelling balls, gently squeezing and pulling just hard enough to make the flesh tight; the other hand she jacked up and down the exposed length of my raging cock with full strokes that created a growing knot of fire in my stomach. I could not take my eyes off her bobbing head and feverish hands as they flew up and down my trembling shaft. I was close to exploding and my head fell back as the sensations built up in my balls, \"Ohhhh ...Gah ... I'm gonna cum ...!\"\n\nInstead of backing off, Amber increased her efforts, her mouth sucking harder and hands working faster. I felt the cum rising in my balls higher and higher, and I started thrusting into Amber's eager mouth. And it was there! As the orgasm started, I shuddered and felt jets of white hot jizz firing out of my spurting cockhead. Thick streams of my boy cum fired deep into her mouth and throat in waves. She tried to swallow all the creamy white sperm as it shot out of my convulsing dick, but she was unprepared for the sheer amount of cum. She sputtered and gagged a little as the volume overwhelmed her, but she stayed with it working her mouth up and down the top three inches of my exploding member. Big globs of cum dripped from the corners of her mouth and landed on the car seat. Finally, the seemingly unending supple of built up cum ended, and after a few last licks with her tongue on my responsive cock, she withdrew her mouth. She sat up on her hunches and quickly licked all the stray cum off her face, then reached down between my thighs and scooped cum off the car seat with her fingers. She licked off the residue off her fingers hungerly, and after about a minute of final cleanup and enjoyment of my boy juice, she looked at me with a huge smile on her face. \"Fuck you taste good! And so much cum! Jesus, that was a load, but tasty!\" I just looked at her through silted eyes. I was exhausted after that mind-blowing orgasm.\n\nFor several moments, we were both quiet after that workout. I closed my eyes in a blissful state, and Amber wiped her hand over her mouth trying to catch any of the thick cream that she might have missed. Just as I was fading away, I felt a little tug on my sleeping warrior, \"Hey big boy, don't fall asleep. We are just getting started.\" As I opened my eyes, she started to undress. Reaching down, she pulled up her halter top and bikini top up over her head in one fell swoop, and her large tits came bouncing into view.\n\n\"Jesus Christ!\" I gasped aloud at the sight before my eyes, \"They're...they're unbelievable...I've never...\" Her naked tits were magnificent (36C). It was obvious that she was 100% natural, because there was an ever-so-slight sag to her soft, flawless mammeries. She was out in the sun so much with different tops that there were a multitude of different tan lines, which to me was fucking sexy as hell. Her tits were firm, and her areolas were large with a dusky brown color, and long hard erect nipples that pointed right at me. I was drooling by this time, I am sure.\n\n\"Do you like them, Jason?\" she coyly asked as she held the twin globes in her hands bouncing them up and down. I just nodded dumbly. She smiled at me, and she crawled over the front seat, her big tits bouncing and swinging the entire time. I turned my head and looked over the front seat to see her. She turned around facing me and she undid the button to her skirt. I was speechless as I continued to openly gawk as she pushed her skirt and bikini bottoms down her long, tanned legs in one smooth move, her magnificent breasts wiggling heavily the entire time. She dropped them on the floor and spread her thighs wide giving me an unfettered view of her shaved pussy. She leaned against the back seat and curled her finger at me, motioning for me to join her. I did not even get out of the car. I simply jumped over the seat, my quickly hardening cock and balls swinging in the night air. I landed between her wide spread thighs, and I had barely gotten onto the back seat when Amber reached out and gently grasped my thickening prick. \"Wow. It's beautiful.\" she cooed.\n\nWithout further hesitation, she wrapped her arms around my neck and pressed her stunning tits against my chest. Before I could even utter another word, her hungry mouth was covering mine. I felt her hot tongue on my lips for just a moment before it slipped between them. While she explored the inside of my mouth, she thrust her belly and pelvis against my raging hardness. Her hands grabbed the cheeks of my ass jerking me onto her as she ground against my cock. My rampant cock came to rest against her slick vagina, and she began to hump herself against it, sliding her pelvis up and down its entire length. My aching cock was already tottering on the brink of an eruption, I could feel the cum already swirling in my throbbing balls. She lifted her lips off mine and looked deep into my eyes with her fiery, green ones, \"I want you, Jason,\" she whispered softly, thrusting herself against my cock even harder. \"Fuck me...Now... Fuck me with that incredible rod. \"\n\nGroaning with anticipation, I reached down and grabbed my big, jutting peter, and took aim at the juicy, little slit between her legs. I eased the rounded head of my twitching cock into it. \"Big...cock so big,\" Amber murmured as I started to push my cock deeper into the seething tightness of her cunt. Our bellies barely touched as I immediately jerked my cock back and then drove into her again.\n\n\"Good...so good...feels so good,\" Amber panted as I began to work my cock in and out of the hot, sucking hole between her widely spread legs. I was in heaven! I never knew that it could be this good. The tightness and wetness of her pussy as it wrapped around my cock with each downward thrust was insane. It was like sliding down into warm soft butter with each plunge into her juicy cunt. \"Oh fuck...\" she gasped, grinding her pussy around my rigid cock, clutching at it with her greedy cunt. I had no technique or any skills. I was a total virgin, but Amber thought I was a great fuck as she groaned and moaned as I thrusted inside her slippery sheath.",
        "The heat from inside her pussy was like a blast furnace consuming my prick with its fire. I was hilting in her hot box with every powerful lunge. Her tits were bouncing and shaking, and her pussy was clutching and squeezing my cock as it sailed in and out of her. Her hips were flying up and down as she took my big cock into her churning cunt over and over. There was so much juice flowing out of her cunt, it was running down the crack of her ass, and coating my belly and balls with its sticky warmth. I didn't have much composure left; I was close to cumming. I felt the aching in my balls and knew that it would not be long. As lost as I was in my own need for release, I could sense that it was just a matter of seconds before she would go soaring up into the bliss of total gratification.\n\n\"Yes...yes...yes...yes,\" she hissed out, as she jerked her cunt up and down my spearing cock as hard and fast as she could. Then, just as she was tittering on the brink, I lost the final part of my control, and I began to cum in long ropes of white fire. I grunted and lunged up into her, driving my cock all the way to the bottom of her tight rippling cunt. \"Ohhhfucckkkkkkk...\" I cried as my boy juice began to coat the inside of her womb with its thick paste.\n\n\"I know...I know,\" I panted, as I stopped thrusting. \"I didn't mean to cum that quickly. I am sorry.\"\n\n\"I don't know what ... you are talking about,\" Amber wheezed as she worked her hips faster pulling my spewing cock deeper into her hungry cunt. \"... Still feels ... hard to me. ...Ohhhhhh God, GIVE ME THAT COCK!\"\n\nShe was right. Even as my prick was ejaculating massive gushes of hot cum inside her, my penis did not go down or lose a stroke. As my cum filled her vibrating twat completely, I could feel the hot, sticky sap oozing out around the base of my shaft. Amber grabbed my head and locked her mouth over mine, thrusting her tongue inside my mouth. She kissed me with all the passion of a sex-crazed animal, urging me to pump my big cock in and out of her tight, clutching pussy. I furiously began to work my hips back and forth again, as she groveled below me.\n\n\"Oh God ... oh God ... oh God ... HERE IT COMES!!!\" Amber screamed in my ear as I kept my hard-charging cock pounding in and out of her cum-dripping pussy. Her hips were jerking up and down frantically as she fucked herself up against my thrusting prick. Her hands locked on the pumping cheeks of my ass, pulling me deeper into her hot boiling cunt. All at once, she stiffened under me, her whole-body straining as she thrust her clutching, grasping cunt up at me. Her legs wrapped tightly my waist as she screamed out her orgasm.\n\n\"GAWWWDDDDD... FFFUUCCKKK,\" she yelled as I continued to drive my thick cock down into the exploding inferno of Amber's cunt. I only knew how to do one thing in the sex department and that was to hammer my big cock into the clutching opening between her tightly wrapped legs. I slid my hands under her legs and lifted them into the air. This forced the backs of her legs onto my shoulders as I drilled into her hot, slick pussy. She let out a deep grunt every time, and I could feel my big, dangling nuts slapping up against the juice-slathered cheeks of her ass. This was all so wild. How could I be fucking this vision of beauty? How could she think I was older? I was in hog heaven, and I did not need to cum. I felt like I was just getting started. I continued to pour cock into her clutching cunt, her tight pussy gripping my thundering prick as it sawed in and out of the hot socket of her pussy. Trying to get better leverage, I pushed her thighs up against her quivering breasts, flattening the soft pillows as I continued to work my twelve inches of hard teen cock in and out of her creaming twat.\n\n\"God, unh...feels so gooooood, unh...fuck my pussy, unh...with your big dick, unh,\" she grunted as I drilled into her. In my side vision, I caught the movement of her feet moving back and forth by my head in time to my thrusting into her hot pussy. I never knew if this was a new climax or the continuation of the first one, but I could feel her start to gather herself for another big one. She fought and strained to reach it, her muscles tensed and her pussy clenching down tighter and tighter around my pistoning prick.\n\n\"Uh...uh...uh...uh,\" she choked out, thrusting herself up against me, trying to pull me deeper and deeper into her fiery depths. I pushed against the front seat for better traction and hammered into her with wild abandon as she writhed and thrashed about below me.\n\n\"This, uh...IT, uh...Now, uh...OHHHGGGOOODDDD,\" she cried out as her body began to tremble and shake uncontrollably. She arched her back so hard she almost threw me off, as she thrust herself up against my pounding cock. She raked fingernails across my back like claws leaving red marks. As she screamed in my ear, every muscle in her body shook and quivered as she bucked beneath me while I continued to drill my hard cock into her creaming cunt. Finally, she stopped humping back at me, and her quivering legs wrapped from around my waist. I stopped stroking into and lay exhausted on top to her. My cock felt the last tremors of her powerful climax tremble through her pussy.\n\n\"That was ... the Best...was the best...ever...\" she whispered as her cunt gave a last feeble twitch around my cock. \"God, where did you learn to fuck like that? Jesus, your cock! You totally make Hank look like he's queer. Fuck, you know how to fuck!\"\n\nHow do you tell someone who thinks you are older than you are, and sort of a cock-God that you are barely older enough to drive and was a virgin until 20 minutes before? So, I just kept my mouth shut. Yet, all the compliments made me feel like a superman, and made my rod harder than ever. Our bodies were stuck together with all the sweat and cum, and we lay there just trying to catch our breath. After a few minutes, I carefully rose up and pulled out of her clutching cunt. She moaned at the loss, but then she stared in disbelief at my thick swollen prick that had not diminished an inch as it swung back and forth between my thighs.\n\n\"My God, you're still hard! You've cum twice and you are still hard!\" she said with awe in her voice. \"That is quite a big repeater peter you have there,\" she said laughing at her own joke.\n\nWith my new found confidence, and her willingness to continue, I decided to try the position that I had always fantasized about, doggie-style. I urged Amber up on her knees, her face turned toward the passenger side window. With her perfect ass pointing right at me, her big tits swinging underneath her, and her glistening pussy lips winking at me from between her spread thighs. I moved behind her and positioned myself between her legs. I wrapped my hand around my big, fat cock and lifted the rounded tip up to her waiting pussy. Using the head to spread apart her dripping pussy lips, I eased my cock into her tight wet cunt. I looked down and watched my big, blue-veined teenage shaft slowly disappear up into her hot vagina. The sight made my cock jump and twitch in anticipation. Gradually I fed my shaft deeper into her slick channel until I was buried inside her hot, clutching cunt. Amber moaned in delicious pleasure. I leaned over and she turned her head to the side, and we shared a deep passionate kiss with my cock buried inside her hot pussy. With her back arched, her neck bent, she and I kissed long and deep before we started to move. Finally, I broke the kiss and whispered in Amber's ear, \"I am going to fuck you like you have never been fucked.\" Then leaning back, grabbed hold of her waist, and began to work my hips, sliding my cock in and out of her hot, clutching pussy.\n\nWhile I worked behind her, pumping into her tight cunt, I had a revelation! I maybe young and unskilled as a lover, but I had two things that I knew Amber desired right then. One was my newly impressive big cock, and the other was I had lots and lots of energy. I had caught my breath and wasn't even close to cumming now. I was going to be the cock-God she thought I was. I was going to tear her sweet pussy up. As I picked up the pace of my thrusts, I looked down and watched my shaft sliding in and out, glistening with her juices. Her ass cheeks rippled as my hips pounded into her backside.\n\n\"Oh, yeah, fuck me... fuck me.\" she groaned. \"Fuck me, baby. You're so big! You feel so fucking good in me!\" We slammed together, our bodies working into a frenzy. Her hot, clenching pussy caressed my rock-hard cock as I pumped in and out of her. She was buzzing with passion as I ramrodded her with long hard thrusts, driving her body into the seat cushions.\n\n\"AAAHHH FUCK!!\" she gasped. Amber's cunt was like hot lava as she bucked her hips and ass up at me. \"OH FUCK ME HARD!!\" Responding to her pleading, I reached around and grabbed both her straining tits in my hands and began to jackhammer my cock in and out of her. I was furiously thrusting into her with short fast strokes. The electricity was intense, and my cock felt like it was burning up as I plowed into her quivering pussy. Amber was now taking me to the hilt on every butt-rippling stroke as I pounded into her. She was pinned against the car seat with nowhere to move except twisting her head from side to side, flinging her sweat-drenched hair everywhere. She cried out as I held her big tits and fucked my huge cock into her hungry cunt, \"OH YES... I'M THERE...OH SO GOOD...FUCK MEEEE GOOD!!\"\n\nI could feel her cunt start to contract and vibrate on my thrusting cock. She was cumming hard, but I didn't stop fucking her. \"SHIT YES!! I'M... GONNA... YES... CUMMING AGAIN!!\"\n\nI just grunted in response as I stroked in and out of her tight, climaxing cunt. Her groin and thighs were covered with the hot juices that were pouring from her cunt. As our bodies slammed together, droplets of pussy juice splattered everywhere by my thrusting, pounding cock, and rivulets of her warm, thick juices ran down her thighs coating my swinging balls and drenched the car seat. There was an obscene, wet slapping sound that filled the interior of the small car as our bodies lewdly crashed together. She was panting and letting out a loud grunt every time I ripped my out-of-control cock into her juicy, leaking cunt.\n\n\"...ah...love...ah...how...ah...fuck...ah...me...ohhhhh,\" she mumbled as I wildly fucked into her battered pussy. This was pure fucking! The car seat was groaning from all the rocking back and forth. I could feel my long prick bounce off her cervix every time I plunged into her. She shoved herself back at me on every stroke into her hungry cunt. Amber was shaking, her eyes closed tight, her head flailing side to side as my cock pistoned in and out of her willing snatch.\n\n\"Yes! ...Yes! ... Yes! ... Oh-God-oh-God-oh-God!\" she gasped as I slammed my young teenage meat into her wet, tight hole. With one more powerful thrust, I sent her over the top again, and Amber's cunt imploded, clamping down on the massive giant that invaded her most intimate places. \"GOD, JASON! GIVE IT TO ME! OOOHH!!\" she screamed.\n\nAmber was cumming hard. Sweat covered her body, and rivers of pussy juice streamed down her legs, all the windows were fogged up with steam, and I had driven her to continuous orgasm phase. Every time I plowed my thick, cock deep inside her, it now sparked an orgasmic eruption that was pushing her higher and higher.\n\n\"Ughh... so much cock...Baby...you're killing me...ughh...I want more! ...Fuck Me ...More!!\" She whined uncontrollably. I could feel the cum building in my swinging balls as I pumped into her. Her cunt was growing tighter, and my cock was flexing, but I wanted Amber to keep cumming, so I clenched my ass to maintain control. She cried out as her orgasms kept shooting through her in waves consumed by our fucking, and her pussy twitched and pulled at my ramming cock.\n\nOOOOYYYY!! I CAN'T TAKE... CUMMMMIINNGG ... AGAIN!! ...OHHH FUCK... I NEVER... NEVER FELT... OOOOOOHHH...!!!\" She was gasping for breath and screaming at the same time as one cum followed the next. I was in the zone, but the pressure in my balls and the tight velvet grip of her rippling pussy was getting to me. I was doing everything I could to continue to fuck her. I ran multiplication tables in my head, searched for the correct lyrics to songs I knew, while my body moved in wild gyrations as it ached to make my pleasure last longer. Amber continued to shout uncontrollably as I neared the end of my assault on her glorious cunt.\n\n\"OHH... MY... OHH... CHRIST... OHH... FUCK... OHH... YOU... GODDAMN... FUCKING ... STUD!!!\"\n\nAs my hips pumped my long teenage meat deep into her spasming pussy, I realized she had called me a \"stud.\" Me, a stud? It seems silly, but that simple compliment from this sexy goddess who bucked and jerked in orgasmic pleasure beneath me sent me over the top. I felt the sperm rise in my balls and start the short journey up my thrusting cock. \"YES ...... I am gonna cum!!\" I shouted, as I pushed deep into her clutching cunt and exploded. My cock erupted inside her sending rope after rope of boiling cum into her womb. Her inner walls were painted white with my creamy jizz. My climax was so intense that it felt like my insides were being spewed into her cunt. Our bodies were locked together in a sexy, sweaty embrace as my cock continued to spasm deep inside her. I kept flexing my cock trying to keep it going. Her over worked cunt was still pulling and twitching and fluttering up and down the length of my big young cock. Finally, my balls emptied their massive load, and I collapsed onto her sweaty back. I reveled in my conquest. I had just fucked a beautiful and experienced college girl into complete submission on my first sexual intercourse attempt. I must be good!! Maybe I was a stud! I kept my cock in her warm wet cunt until even my big boy was forced out by her spasms. I flopped down in the seat next to her, exhausted but amazingly alive.\n\n\"...mmm ...mmm ...mmm!! I've never been fucked like that!! It's... Ohhh my...!! We are going to have to do this again!!... WOW... Your cock is so awesome! I love your cock!\" Amber moaned as she slumped to the car seat. Her glowing face landed in my lap, and she took my drained cock into her wet mouth. She started licking all our combined juices off my still sizeable prick, and I looked down at this amazingly sexy woman nursing on my clearly desirable cock. It was only then that I realized my summer had just gotten a whole lot better!"
    ],
    "authorname": "westerntiger",
    "tags": [
        "first time",
        "big cock",
        "blowjob",
        "big tits",
        "swimming pool",
        "bikini",
        "teenage male",
        "virgin",
        "female lifeguard",
        "car sex"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/adventures-of-jason-teenage-stud"
}