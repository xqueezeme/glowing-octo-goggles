{
    "title": "Group Addition",
    "pages": [
        "Group Addition\n\nGrant's unfulfilled desire makes room for Meghan\n\nThe first three parts of the Grant saga are: Group Project, Group Discount, and Group Think. While I include enough background for each of them to stand alone, they are better together. My friend  collaborated with me. We both contributed to the content. I bear all responsibility for any typos or inconsistencies.\n\nChapter One\n\nAs the server took their lunch orders, Grant looked around the table at each of his three friends. Bethany, Claire, and Jennifer were even more beautiful, now that he knew them so intimately. Bethany and Claire had been living in his house for a few weeks, each renting their own rooms. But since Jennifer was married with two children, the only time the four of them could regularly be together was at work over lunch.\n\nAfter having a variety of sexual encounters with all three women, the culmination had occurred the previous week at Grant's house. Jennifer and her husband Danny came for dinner, and stayed for what turned out to be a sex party. The whole affair had been arranged by the three women without Grant's knowledge. In fact, he had no clue that there was a plan, until Jennifer's mid-coital admission. Bethany and Claire had successfully seduced Danny, so that Grant and Jennifer could be together. And it all happened in Grant's pool. Grant loved Bethany and Claire, but he was in love with Jennifer. Here was how their evening ended.\n\nIn the background, Grant could hear some moaning. He hoped it was going well for the other three. Nothing could top what he had experienced with Jennifer. He touched her face, she opened her eyes, and smiled. They shared a lingering kiss.\n\n\"I do love you, you know,\" he sighed. \"It's not just lust. You are everything I could ever want in a partner.\"\n\n\"I love you too, G-man. But savor this, because...it can't continue.\"\n\n\"Why? I mean...\" he stammered, \"we can work out something.\"\n\n\"You should know,\" she said with a solemn look, \"it took a lot to make this happen.\"\n\n\"What do you mean?\"\n\n\"Your girls love you so much,\" she answered, \"and they love me so much that they planned it all.\"\n\nGrant was dumbfounded. It had all unfolded so naturally, innocently. Or so it had seemed to him.\n\n\"I was in on it, of course,\" she continued, \"but they were willing to make Danny so blind with lust, that it didn't matter if his wife was fucking you.\"\n\nGratitude mingled with a dose of manipulation in Grant's brain. However it happened, it had allowed him to indulge in his greatest fantasy. Intimacy with Jennifer is what he craved. Deep down, he knew that this had not put out the fire. It had merely stoked it. He lifted her breasts and planted a kiss on each nipple.\n\n\"Don't start something you can't finish, baby,\" she breathed.\n\n\"Oh, I'm going to finish it,\" he declared confidently. \"The only thing that can keep me away from you, is you. Until you tell me to go away, I'm yours forever.\"\n\nJennifer sighed, and smiled. She ran her fingers through his hair as he continued kissing her breasts. She felt him growing hard against her leg.\n\n\"Maybe,\" she said thoughtfully, as she felt her own desire stirring again, \"maybe, we can find a way to do this...oh, right there...maybe the girls...will join in...maybe I should taste pussy...you seem to like it...so...you're hard...\"\n\nGrant mounted her again. The sound of her gasp drove him crazy with desire. He would fuck her now. The only way it would be for the last time, was if the world exploded at midnight.\n\n\"Excuse me Sir, are you ready to order?\"\n\nGrant was jolted back into the present. \"Yeah, sorry...I'll have the Cobb salad. Thanks.\"\n\nSo technically the world hadn't exploded, but there had been some implosions. Claire and Bethany were now a couple. They couldn't get enough of each other. Even now they were holding hands under the table. Every night, Grant tried not to listen as the two women shared the same bed. He was happy for them. Their lesbian escapades had turned into love, and the closer they got to each other, the less they included him. His sexlife had gone from a break-neck pace to almost a complete stop and many of those lonely feelings that he once experienced after his wife's passing were now coming back.\n\nIn the sober light of day, Jennifer had regained her resolve. She made it clear that she was no longer available to him...sexually. Danny had felt guilt (or so he claimed), over his threesome with Claire and Bethany. He didn't say much about Jennifer's romp with Grant, but it was clear he was not a fan. In a complete reversal of fortunes, Grant had gone from the most sex he'd ever had, and three beautiful women he loved; to no sex, and three close female friends without the benefits. It felt like emotional whiplash.\n\n\"Snap out of it, G-Man,\" Jennifer said, interrupting his regrets.\n\n\"I'm here,\" Grant responded. \"Tell me again what you have in mind.\"\n\n\"It's time for you to get back out there and I want to hear what your plan is to make that happen,\" she said playfully.\n\nHe wasn't in a playful mood; yet, he didn't want to ruin their evening and he quickly attempted to pull himself out of his doldrums. \"I don't really have a plan,\" he said honestly.\n\n\"What about that dating app?\" Jennifer asked.\n\n\"Yeah, when's the last time you checked it?\" Bethany chimed in after she somewhat pulled herself away from Claire.\n\n\"It's been a while,\" he admitted. \"And it never connected me with anyone as fantastic as any of the three of you.\"\n\n\"Flattery will get you everywhere, big boy,\" Jennifer retorted, \"Almost.\"\n\n\"What about that one woman, what was her name, Issa, right? Have you heard from her?\" Claire asked.\n\n\"I haven't heard from her in quite a while,\" he admitted, even though he wished he had. He'd taken her out, they'd spent a wonderful night together, and he thought they'd made a real connection. However, their relationship had quickly gone cold and he reasoned that she was no longer interested in pursuing any type of relationship with him. She'd obviously moved on and attempting to contact her again would be pointless, if not a little creepy.\n\n\"Well, it's time to get back into the saddle, cowboy,\" Jennifer teased.\n\nHe looked at her and tried to keep at least some of the longing out of his eyes. It wasn't easy listening to the woman he loved tell him in not-so-subtle terms that he needed to move on. More than anything, he longed for one more night with her, but he knew that one night wasn't going to be anywhere near enough. Besides, Jennifer made it clear it could never happen anyway. \"Yeah, maybe you're right,\" he said solemnly.\n\n\"So, get that phone out, we're all here for you and we'll help you pick someone great,\" Bethany said gleefully.\n\nHesitantly, he pulled out his phone. It was still a little embarrassing for him and he felt vulnerable. He'd been intimate with all three of them, he reminded himself. Nonetheless, he still felt very exposed, even though he trusted the women at the table implicitly.\n\nGrant opened his dating app. His username, Takeme4Grant, hadn't gotten much attention. There were some obvious bots who had messaged him. As his three friends peered over his shoulder, he self-consciously began swiping through profiles. Since this app was geared toward mature adults, most of the women were at least in their 40s. Some appeared much older. Grant realized that his experiences with Bethany, Claire, and Jennifer had transformed his desires. Having tasted, entered, and ejaculated in these three beautiful women who were all at least 20 years younger, he wanted more of that.\n\n\"They're all too old for you,\" Bethany said, as if reading his thoughts. \"They might be your age, but you're not acting your age.\"\n\n\"I agree,\" added Claire, \"you should change apps.\"\n\nThe three women slid away from him which gave him a small measure of privacy, Grant felt relieved from scrutiny.\n\n\"Is there one for sugar daddy's?\" Jennifer smirked, \"maybe he can convince some empty headed bimbo that he's loaded.\"\n\n\"Ummm, I'm not looking for a gold-digger.\"\n\n\"Don't worry,\" said Jennifer consolingly, \"you're a silver fox. The salt and pepper hair is a real turn on for a lot of women. You bagged the three of us, remember?\"\n\n\"Not really,\" Grant joked, \"can you help jog my memory? I think if we retrace our steps, it might all come back to me.\"\n\n\"Now, now,\" warned Claire, \"we're not on the menu. That's why we need to find you someone new. You need to put in some effort. We can't do all the work.\"\n\nGrant sighed. His heart wasn't in this. As much as he wanted to share his life with someone, getting Jennifer out of his mind seemed impossible. Bethany and Claire were in there too, but less so given their attachment to each other. He was happy for them, but his hunger lay solely with Jennifer.\n\n\"I've been thinking,\" Bethany said with a look of concentration.\n\n\"It's about time, girl,\" Jennifer quipped, \"I was starting to worry.\"\n\n\"You're funny for an old married woman,\" Bethany teased. \"I've been thinking about that friend of yours from the gym. You know, the one you work out with who's just been through a breakup. What's her name... Melanie, right?\"\n\n\"No, you mean Meghan. What about her?\"\n\n\"You told us she's pretty, right?\"\n\n\"She's blonde, fit, sexy, and seems reasonably intelligent,\" responded Jen, \"What's not to like?\"\n\n\"For one thing, Meghan's still not over her ex.\"\n\n\"Grant could help her through that, won't you Grant?\" asked Clair. \"You'll help her forget.\"\n\n\"You could fill her void,\" Bethany said with a leer, making Jennifer laugh.\n\nGrant just stared back, his face expressionless. He knew when they got like this, there was no stopping. Commenting only encouraged them.\n\n\"It could be a tall challenge for the G-man,\" said Jennifer. \"I guess you two didn't know about Meghan's ex.\"\n\n\"What about him?\"\n\n\"That's just it. He was a 'her' not a 'him'.\"\n\n\"Meghan dated a trans person?\" asked Bethany, with a puzzled look.\n\n\"No, silly,\" Jennifer explained, \"her ex, Lisa, is a woman, both now and originally. A beautiful one too. She's a Physician Assistant. They were hot and heavy for at least a year. Then something happened. I don't know the story, but Meghan was heartbroken.\"\n\n\"So, she's a lesbian,\" Grant stated matter-of-factly, breaking his silence, \"you want me to date a lesbian. Great.\"\n\n\"I didn't know,\" Bethany replied, throwing her hands up in the air. \"Besides, with me for a reference, anything is possible.\"\n\nJen thought for a moment. \"Well, the truth is,\" she said, as she toyed with the food on her plate, \"Meghan is bi. I know because her ex was the first woman she'd ever been with.\"\n\n\"Once you try bi, you never go back,\" Claire quipped, squeezing Bethany's hand.\n\n\"What do you think, Jen?\" Bethany asked. \"Isn't it worth a try?\"\n\nGrant jumped in. \"Wait, don't I get some say in this?\"\n\n\"No,\" the three women said in unison.\n\nChapter Two\n\nIt was the easiest date Grant had ever arranged. He did nothing. Jennifer set up the day and time with Meghan, and picked the restaurant. Bethany and Claire got him ready. They selected his clothes, made him buy a new shirt, spritzed him with body spray, and fussed with his hair. Grant's suggestion that they also join him for dinner was roundly rebuffed.\n\nIn his mind, he wasn't dressed up enough for The Capital Grille. He would have felt more comfortable in a suit, or at least a jacket, but the girls insisted on something different. Claire picked out the Brooks Brothers dress shirt. It had a button down collar, and was a lavender gingham. The color was something he would never have selected on his own. He was just glad Claire hadn't pushed for the pink one. They paired the new shirt with grey dress pants. Grant pushed aside feelings of self-consciousness, counting on the choices his friends made for him.\n\nHaving been assured by Jennifer that Grant wasn't a psycho killer, Meghan agreed to have him pick her up for dinner. Grant enjoyed their brief phone conversation the day before. He liked her voice. She laughed easily. It didn't feel awkward at all. He'd immediately saved her address, and mapped out the route.\n\nHe arrived at her condo 15 minutes early. He circled the block once, and then decided to park out of sight and wait. His patience lasted only another 5 minutes. He circled again and this time took a spot close to the front entrance.\n\n\"Hi Meghan. Your chariot awaits,\" he texted.\n\n\"Be down in a few,\" came the quick reply.\n\n\"No rush.\"\n\nGrant got out and stood on the sidewalk beside the passenger door of his QX60. The Inifiniti was four years old, but still looked good, especially after he had it detailed in preparation for this date. He stood up straight and stuck his hands in his pockets. Feeling awkward, he leaned up against the vehicle instead, and tried to look relaxed. That lasted until she appeared. Meghan stepped through the doorway and time seemed to stop. It was like all his senses melted away and she was the only thing that existed.\n\nHer long blonde hair perfectly framed her beautiful face and was styled in loose, flowing curls. There was a smile as she spotted him. Grant tried to smile back. That was when he realized he was already smiling, so hard it hurt. He straightened up as she stepped toward him. Her white top was squeezed tight against her large, heavy breasts. She was wearing a flared, short skirt with a floral pattern. It was pleated, and stopped several inches above her knees. Grant tried not to stare at her legs, but took them in as she stepped toward him. They were long and toned, graceful and gorgeous. She was wearing 4-inch black pumps and as she got closer, he realized she was probably 5'8\", without the heels. Not as tall as Claire and Jennifer, but tall.\n\n\"Hello Meghan.\"\n\nWhen she approached him, her face broke into a soft smile. \"I assume you're Grant.\"\n\nHe momentarily lost himself in her green eyes before taking her hand and pressing it to his lips. It was old fashioned and corny, but in the moment, it felt like the absolute right thing to do.\n\n\"Even if I wasn't Grant,\" he said, raising his eyebrows, \"I would be tonight, because I want to be the one you're waiting for.\"\n\n\"Cute,\" she replied. \"Jen said you were a smooth talker.\"\n\nStill holding her hand, Grant reached for the door handle with the other. Opening it, he guided her in, staring at her legs as she stepped up into the SUV, and swiveled into her seat. Once he closed the door, he practically ran to the other side. He didn't want to miss a second of her presence.\n\nThey chatted easily the whole way to The Capital Grille. When they arrived, the valet helped Meghan out of the vehicle before he could get there to do it himself. Grant envied the kid, but contented himself with the reality that he had Meghan to himself for the next couple of hours.\n\nThey had an appetizer and ordered their entrees, and the conversation flowed back and forth freely. They covered work, weather, and workout routines, before there was a second of silence. Meghan filled the void quickly.\n\n\"I haven't been on a date in awhile,\" she confided, \"so I'm a little rusty.\"\n\n\"You're doing great. It's like riding a bike. Once you learn...you're too beautiful to forget how.\"\n\nShe smiled in response. There was no laugh, but the smile didn't seem to be pity, so Grant pressed forward.\n\n\"How long has it been? No one like you should ever be alone.\"\n\nMeghan's lips pressed together. She seemed to be weighing whether or not to answer.\n\n\"Let me rephrase. It's been awhile since I dated a man.\"\n\nGrant didn't know if he should feign ignorance about her ex-girlfriend, so he attempted to find some sort of middle ground.\n\n\"Jen mentioned you just got out of a relationship. Is that right?\"\n\n\"Yes,\" she paused and looked away. \"It was with a woman. My first.\" Her eyes shot back to his. \"Does that bother you?\"\n\n\"That you just got out of a relationship? Of course not, I'm the lucky beneficiary of your new single status,\" he playfully teased.\n\nShe giggled. \"No... I... ummm.... that's not what I mean.\"\n\nHe loved it when she smiled and laughed. So, he attempted to keep his little joke going. \"I'm very willing to take one for the team and be your rebound. I'm very unselfish like that.\"\n\nHer bright smile made a brief reappearance. \"Does it bother you that my ex is a... you know...\"\n\nWhen she faltered, he quickly broke in. \"Does it bother me that your ex was a woman?\"\n\nMeghan nodded.\n\n\"There are a few things to consider,\" he said, holding up his index finger. \"One, it doubles the amount of competition I have for your attention. The odds aren't in my favor.\"\n\nMeghan gave a noncommittal shrug.\n\nHolding up the next requisite finger, he continued. \"Two, I can't compete with a woman. I'm a man, and I bring all my maleness with me. I don't look as good, I won't share my clothes, and I can't begin to understand your feelings as well as a woman would.\"\n\n\"We wouldn't look good in each other's outfits anyway,\" she teased. \"And the potential of doubling my wardrobe has never been a major factor in selecting my dates.\"\n\nHe kept silent as Meghan picked up her glass of iced tea and sipped on the straw. Her eyes remained on him as she did so. He was wrapped up in watching her lips circle the tip of the straw, the suction of her cheeks as she drew in the tea, the sparkle in her green eyes, and the way she swept aside a strand of her long blonde hair. Then he remembered it was his turn to speak.\n\n\"Ummm... if I may ask, were you in a relationship with a woman because you were damaged by one man or disillusioned with men in general?\"\n\nShe stopped sucking and swallowed. He enjoyed every second of it.\n\n\"Neither,\" she said, shaking her head from side to side. \"When I fell for Lisa, it caught me by surprise. I'd never had romantic feelings for a woman before. It happened slowly. We enjoyed each other's company and our friendship deepened quickly. I started spending more and more time with her, and I lost interest in pursuing any other relationships.\"\n\n\"So there wasn't some catastrophic event that pushed you to her?\"\n\n\"None. I knew she was married and separated from her husband, but I didn't know she was bisexual until it happened.\"\n\n\"Until what happened?\" he asked, trying not to sound eager.\n\nMeghan's eyes looked into the distance as she re-lived a scene from the past.\n\n\"I made dinner at my place. I don't cook a lot, but Lisa never does at all. I offered a home cooked meal for her birthday, and she accepted. Looking back, I unconsciously created an intimate atmosphere. Great food, candlelight, soft music, just the two of us.\"\n\n\"Sounds nice,\" Grant commented as a way to keep the story going.\n\nMeghan didn't react as she continued. \"We'd just finished dinner, and I was about to get up and serve dessert. The Eagles song, 'I Can't Tell You Why' came on. Lisa stood up, walked around the table to me and held out her hand. I didn't know what she wanted, but I took her hand and she pulled me up, held me close, and we began to dance. It felt so strange... and at the same time it felt so natural. I was safe in her arms. Safe in a way that was different than I have ever felt with a man. I can't explain it even now. When the song ended, she looked into my eyes, and slowly moved her lips toward mine. I let her kiss me. It felt so unlike anything I'd ever felt before. So soft, so sensual, so intimate. I began to kiss her back, and she just took control from there.\"\n\nMeghan stopped talking. Her eyes focused back on Grant, and he realized the story was ending there and she wasn't going to divulge anymore of their romantic experience.\n\n\"Wow. That sounds intense.\"\n\nMeghan nodded. \"It was. I know that's probably too much to share on a first date, but you kinda asked.\"",
        "\"I did. But if I may be honest, it sounds like you're still emotionally invested in Lisa. Can you tell me why you two aren't together?\"\n\n\"It's complicated.\"\n\n\"I don't know of a relationship that isn't.\"\n\n\"True,\" she sighed. \"We were together for over a year. Three months in, I told her I loved her. I did... I do... she said she loved me too. I couldn't get enough of her. Lisa was like an addiction. She gave me what no other relationship had.\"\n\n\"There's a 'but' coming,\" Grant prompted.\n\nMeghan took a deep breath and toyed with her food. \"Her husband came back into the picture. She said she still loved him, and wanted to try and make it work. She claimed we could still be together. Supposedly, her husband accepted that side of her sexuality, but I couldn't do it. I couldn't imagine sharing her with someone else. The thought made me insanely jealous. I'd never felt that possessive before. I drew a line in the sand. Him or me. Not both. She said I was being childish. I got angry. We argued. It didn't end well.\"\n\n\"So how long ago was that?\"\n\n\"Two months. It's still a little raw, as you can tell.\"\n\nHe took a sip of his iced tea and resigned himself to the fact that he probably looked nowhere near as sexy as when she sipped hers. \"Why did you agree to have dinner with me?\"\n\n\"Jen said I could trust you. That you were safe, gentle, and thoughtful. She said you wouldn't take advantage of me.\"\n\n\"That was nice of her. Remind me to give her 50 bucks for providing such a good reference.\"\n\n\"That wasn't all she said.\"\n\n\"Oh?\" Grant's eyebrows raised with the question, \"was there a negative review?\"\n\n\"No,\" Meghan said, leaning across the table and lowering her voice. \"She said that I needed a good fucking. And if I wanted it, you'd give me a fuck to remember.\" Meghan sat back in her chair, and continued in a normal tone, \"I'm just wondering if that's true, Grant.\"\n\nMaximizing his prodigious skills of masculine intuition, Grant took a chance that Megan might be open to his advances and decided to take his shot.\n\n\"The first time I heard your voice, I wanted to hear you moan my name. Then when I saw you for the first time, I wanted to stare into your eyes while I brought you to orgasm.\"\n\nShe smiled and then squirmed in her seat. \"That sounds like a 'yes',\" she whispered seductively.\n\n\"It was more like a 'Hell, yes!'\"\n\nChapter Three\n\nGrant paid the check and they left abruptly. They made it to her condo without even kissing. He had a feeling that once something started, it wouldn't stop. Meghan fumbled with her keys and let him inside. The place was mid-century modern and immaculate.\n\n\"What would you like to drink?\" she asked as she closed the door.\n\nInstead of answering, Grant put his arm around her waist and pulled her toward him. He looked down into her eyes and smiled. There was a slight pause as he savored the anticipation. Then his lips met hers. It was tender for a second, and then became ferocious. Their mouths attacked each other. He pushed her up against the door. The weight of his body capturing hers, like a butterfly pressed between glass.\n\nEven though Grant's attraction to Meghan was overpowering, he felt in control of himself. By contrast, she seemed lost. Both submissive to him and ravenously hungry for him. Her hands clawed at his back, as if wanting to pull his body into hers. His hands slipped down to her ass. Her cheeks were firm, and didn't seem to be covered by anything other than the fabric of her skirt.\n\n\"Undress for me,\" he said commandingly.\n\nShe looked hesitant.\n\n\"I want to see you naked, right here, right now.\"\n\nGrant took her hand, and swiveled her away from the door and toward the center of the living room. Meghan faced him. The hesitation was gone. She pulled the top over her head, revealing a black lace bra. Keeping her eyes on him, she reached behind to unzip her skirt. Then slowly pulled down the garment over her deliciously ample hips. Underneath was a black thong that matched her bra. As she kicked off her black pumps, Grant couldn't get enough. Every part of her was perfect. Standing in the middle of the room wearing just enough to cover herself, was incredibly sensual. His gaze traveled up and down her body, taking in her long, tanned legs, the bit of fabric that disappeared between her thighs, her tight stomach, and breasts that were barely contained by the bra. She licked her lips. Was it nerves or anticipation? He searched her eyes. The glittering green sparkled and spoke of expectation and hunger.\n\n\"I'll follow you to the bedroom,\" he said huskily.\n\nImmediately she took his hand, turned, and started walking, leaving her clothes scattered on the floor. He squeezed her hand in his and savored the view of her ass. The taught pale globes swayed seductively as she walked. He couldn't wait to enjoy all of her. The bedroom was dark. Grant stopped outside the door and heard Meghan fumble for a light. It was a lamp on the night table beside the bed. Grant blinked against the sudden illumination. He was glad for it. He wanted to see everything.\n\nThe bed was a queen, a size smaller than he preferred. It was covered with decorative pillows of every shape, size, and color. It looked as if there wasn't room for one person, let alone two. Without saying a word, he started undressing. Meghan watched for a moment, and then stirred to action. She began sweeping the pillows onto the floor, pulled back the comforter, and turned to him.\n\nKeeping her eyes on his, she reached down, unhooked the latch, and let her bra fall onto the floor. Her breasts were perfect, natural D-size cups topped with small pink nipples. Then she slipped her fingers underneath the little elastic band and pushed her thong down her tan thighs until they fell onto the carpet and she stepped out of them revealing her smooth vagina. Her outer pink lips were red, wet, and swollen.\n\n\"Jesus,\" he muttered appreciatively.\n\nShe giggled. \"Not bad, huh?\"\n\n\"You're... God... you're perfect.\"\n\n\"Thank you. Now, get to it boy,\" she said playfully.\n\nGrant continued undressing until he was down to his boxers. The 'tent' in the front was prominent. He watched her gaze traverse his body.\n\n\"I'm naked. Shouldn't you be?\" she teased.\n\nGrant smiled. \"I could look at you forever.\"\n\n\"You're stalling, and I'm getting impatient,\" she quipped.\n\n\"Not at all. I'm... admiring.\"\n\nWith that, Grant pulled down the last article of clothing. His cock sprang to attention.\n\n\"Much like a divining rod,\" he said, moving slowly toward her, \"I tend to go in the direction little Grant points...and he is very much drawn to you.\"\n\nHer eyes were fixed between his legs. \"Little Grant isn't that little,\" she said hungrily.\n\nTheir eyes met and he took her outstretched hand, looked her up and down, and then drew her close. Together they swayed to music that wasn't playing. Her nipples brushed against his chest. His member rubbed against her belly. It was not an unpleasant sensation. They shared a slow, passionate kiss and he felt an urgency from her. She pushed her hand between their bodies and grabbed his erection. It wasn't a sensual caress, but more of a search and seizure.\n\n\"Mmm, you're so hard,\" she moaned, \"you feel so good.\"\n\nEnding the kiss sooner than he wanted, Grant simply lifted Meghan off her feet. She released her grip of his cock, wrapped her arms around his neck, and allowed him to lower her onto the bed. He shifted her toward the middle, and then stood over her, his eyes feasting on her body. Meghan spread her legs invitingly. Grant moved between them, kneeling on the bed. At first he considered holding down her hands, and using his weight to restrain her. Instead, he planted his arms on each side of her body, leaving her hands free.\n\nLowering his lips to hers, he resumed their kiss. She returned it vigorously, gently biting and pulling his bottom lip with her teeth. He could feel her fondling her own breasts with one hand, and caressing his chest with the other. Eventually his mouth moved down to her chest. She proffered a breast to him. He nuzzled its roundness, kissed the circumference. She impatiently rubbed the nipple against the stubble of his cheek. He grabbed her hand and held it down, and then sucked the nipple into his mouth. He teased it roughly with his teeth, while his fingers found the other nipple and tweaked it firmly. He heard Meghan gasp.\n\nGrant tried to gauge what she wanted and how she wanted it. Hard, fast, and rough seemed to be winning over gentle, slow, and tender. But he wasn't sure. He released her pinned hand and slid slightly downward. His belly rubbed against the hot wetness of her pussy. Her fingers pushed into his hair as he kissed down her torso. Then he stopped, resting his weight on his hands and knees, he hovered over her body.\n\n\"Do you know what I want to do?\" he asked.\n\n\"Just do it... take me... take what you want,\" she moaned.\n\nIt wasn't a rhetorical question. He wanted to taste her. He wanted to lick her into ecstasy. He wanted to look up at her face while he made her cum. When she didn't answer immediately, he lowered his head and returned to kissing down her torso. In response, she grabbed his cock and began to rub it against her clit.\n\nAt first, Grant thought she was trying to get him inside her. But then he realized that was not her intent. He held his body in position over her, steady and still. Her eyes were closed. Her mouth open, her breathing rapid, and with a tight grip on his cock, she used the tip of his hardness for her satisfaction. He stayed immobile. Part of him felt pleased, while another part was irritated. She rubbed the bulbous head of his phallus up and down her wet slit. The sensation kept him rock hard, while the curiosity kept him from coming. She never opened her eyes, but he could see in her face and feel in her body that she was about to climax. He watched with fascination as she reached the edge of the cliff and went over the edge. It was beautiful, it was sensual, and it was the opposite of intimacy. Something in the way she went about this made him feel non-existent.\n\nWhen she opened her eyes, she smiled at him. Grant didn't smile back. He felt expressionless. But he was also horny and wanted to possess this beautiful woman.\n\n\"Now, it's your turn,\" Meghan said breathlessly, \"I want to feel you inside of me.\"\n\nGrant didn't argue and wasn't about to stop now. Yet, he also began to feel like there wouldn't be anything between them beyond this night.\n\n\"And Grant?\"\n\n\"Yes?\"\n\n\"If you don't have protection, there are some condoms in my drawer,\" she said, gesturing toward the nightstand.\n\nGrant raised up and a string of precum dripped off the purplish helmet onto Meghan's left calf. He leveraged himself off the bed and slid open the drawer of the nightstand. The condoms weren't immediately apparent. Instead he saw a pair of fur-lined handcuffs, a vibrator, a variety of bottles, and a large black dildo. He rummaged around until he spotted several packages of condoms. He separated one from the pack, and turned toward Meghan.\n\n\"Put it on for me,\" he said, holding out the blue foil wrapper.\n\nShe took it, opened the wrapper, and slowly rolled it over his hardness. He savored the sensation. She placed the empty wrapper on her nightstand and laid back on the bed.\n\n\"How do you want me?\"\n\n\"Does it matter?\" he said while trying to keep a little of the disgust out of his voice.\n\nShe gave a surprised look. \"I mean, do you want me on my back, on my knees, on top?\"\n\n\"All of those sound good, but let's start with you on your knees.\"\n\nObediently, she flipped over, grabbed a pillow, and rested her head on it. Then she raised her ass in the air, presenting herself to him. Even though he was pissed, Grant couldn't help but become more aroused. The sight of her wet pussy and her secretions which were now dripping onto her inner thighs was powerful beyond belief.\n\n\"Put your hands behind your back,\" he directed.\n\nMeghan hesitated, but then slowly lifted one hand and then the other until they rested on the small of her bare back. The weight of her head pushed her face further into the pillow, and she rocked back on her knees slightly to reduce the pressure.\n\nGrant gripped both wrists in one hand. With the other, he opened the drawer and picked up the cuffs. He inspected them to make sure they had a release lever. Then he quickly snapped one cuff on her right wrist, and before Meghan could react, he attached the left one as well.\n\n\"What are you doing?\" her voice was muffled by the pillow and contained a note of alarm.\n\n\"I found these in your drawer, and I want to use them. Do you want to know why Meghan?\"\n\nShe was quiet and Grant wondered if she was afraid. \"Don't worry, I'm not going to harm you. At least, I won't cause you any more pain than you desire.\"\n\nGrant reached between her legs and ran his fingers along her pussy. It felt like a warm, wet swamp. \"It felt as if you used me. That I was nothing more than a human dildo, a sex toy. You treated me like I was something you pull out of your drawer and then put away after you get what you want. I'm not just a means to an end. So now I'm going to possess you, control you, use you as I wish. Do you understand?\"\n\nMeghan nodded vigorously, but remained silent. Her breathing was rapid and shallow in anticipation of what was to come.\n\n\"Whatever pleasure you feel will be because I allow it. And since I want you to know that you are safe, I will give you a way to communicate. It's very simple. Think traffic lights. Green means everything is good, and you consent to what's happening. Yellow means slow down, caution, you aren't sure if this is what you want. Red means stop, you don't want to continue. Is that clear enough Meghan?\"\n\nShe nodded again.\n\n\"I want you to use the signal now, Meghan. Tell me how you feel about my plan.\"\n\n\"I'm... it's... green,\" she whispered. \"I think... or at least I feel... that I can trust you.\"\n\n\"Good girl.\"\n\nPlacing his hands on her ass cheeks, Grant spread them apart, bent down and breathed in the aroma of her sex. Extending his tongue, he pushed the tip between the folds of her labia. Meghan's knees slightly buckled. He probed more deeply, adding his saliva to the juices that were flowing from her glistening slit. As he pressed closer, the tip of his nose touched her tight, puckered rectum. He felt her tense up and her asshole constricted.\n\n\"Oh... God... please,\" she murmured.\n\nStraightening again, Grant rubbed his throbbing member up and down the lips of her pussy and over her anus. Slowly he moved himself from one end to the other. He did this to tantalize rather than satiate her desires. Meghan squirmed and pushed her hips back in an attempt to impale herself on him, but he kept her at bay.\n\n\"Meghan, I'm in control of you. You're completely exposed to me. I can do whatever I want to you. Do you know what's going to happen?\"\n\nShe quickly nodded.\n\n\"I'm going to fuck you, that goes without saying. But before I do, I'm going to penetrate your ass with something in that drawer. Do you want to know what?\"\n\n\"Yes,\" she whispered.\n\nGrant reached into the drawer and produced the large black dildo.\n\n\"I wonder where this has been,\" he said, rubbing the tip across the small of her back. \"This looks huge. I can guess where you used it, but I wonder if you want it in your ass?\"\n\nAlthough he couldn't see it, there was a look of fear in her eyes. \"Yel...\" gasped Meghan, \"Red... red!\"\n\n\"I agree. I don't want to compete with anything that big anyway. I have something else in mind.\"\n\nGrant put down the dildo and picked up some lube. After removing the cap, he applied some of the cool, clear liquid on her puckered rosebud. Slowly, he inserted his index finger into the resistant opening. Her body tensed and she let out a low, deep moan. The ring of muscle tightened against the intrusion. He persisted. Her rectum gripped his lubricated digit as he worked his way inside her.\n\nDespite his focused concentration on the task, Grant realized his erection had lost none of its rigidity. He wondered if Meghan had ever had a cock in her ass. Either way, tonight wouldn't be the night. He had something else in mind.\n\nWithdrawing his finger from her anus, Grant reached back into the drawer and retrieved a small, pink vibrator. It was about 5 inches long and an inch wide. Applying a generous amount of lube to the toy's already silky surface, he rubbed the excess on Meghan's puckering asshole. He held the vibrator where she could see it.\n\n\"This is what I'm putting in you next. How do you feel about that, Meghan?\"\n\nShe was almost hyperventilating now and she strained to see what he was showing her. \"Okay,\" she whimpered.\n\n\"I'll interpret that to be a green.\"\n\n\"Yes, green,\" she whispered.\n\nHe touched the tip of the vibrator to the glistening, tight opening. Grant wanted to dominate her, not hurt her. He wanted to possess her in the moment, not humiliate her. Hearing no objections, he continued. Little by little, he worked the thin, supple shaft into her rectum. He took his time. After the first two inches were inside her, there was less resistance. Eventually, only about an inch remained visible. Having never operated a vibrator before, he was guessing how it worked. He twisted the dial at the end of the toy and heard a gentle hum. Meghan groaned in pleasure.\n\nGrant couldn't help but pause to enjoy the view. This beautiful woman on her knees, face down, her hands cuffed behind her back, ass in the air, with a pulsating toy inside her, was waiting for him. He knew the window was closing on her level of comfort. It was time to act.\n\n\"Meghan, it's time for me to fuck you. When you feel me inside you, and the sensation of this vibrator together, you're going to cum. Do you understand me?\"\n\nShe nodded.\n\n\"What do you say, Meghan? I need the signal.\"\n\n\"Please... fuck me... Green.\"\n\nGrant wasted no more time. Positioning himself behind her, he rubbed the condom-covered mushroom head of his cock over her slit. All the mingled juices and lubrication made entry easy. Her vagina was so tight and so very wet. He eased in and out of her, pushing deeper and deeper.\n\nThe vibration of the toy was like nothing he had ever experienced. Grant felt a sudden surge of desire to climax, and stopped thrusting. There had been so much stimulation and delay, he struggled to control himself. He felt the walls of her vagina grip and constrict around him. The circular end of the vibrator protruding from her ass was mesmerizingly erotic.\n\n\"Oh... God... you feel so good,\" she cooed.\n\nHe resumed thrusting and reached underneath Meghan to find her clit. As soon as he touched it, she moaned. With his other hand he grasped her large breast, pinched her nipple, and pulled it away from her body. She let out a deep, guttural moan. He concentrated on the rhythm of strumming her clitoris and nipple, while his cock was buried inside her.\n\nGrant found it difficult to maintain the leverage needed to thrust into her. He released her breast and extracted his other hand from its work between her legs. Meghan made a sound of protest. He responded by slapping the cheek of her ass, harder than he intended.\n\n\"Oh, yes,\" she cried, \"spank my ass, Daddy,\" she moaned.\n\nGrant had to stop in mid thrust to keep from coming right then. He rested his hand over the red mark he'd left on her right ass cheek. Then with his other hand he slapped the other cheek even harder.\n\n\"Is that what you want?\" He asked as he continued striking without waiting for an answer, her perfect bottom reddening with each slap.\n\n\"Yes, Daddy,\" she gasped, \"I've been bad. I used you. Discipline me!\"\n\n\"That's exactly what you did,\" said Grant as he resumed ramming his rock hard staff into Meghan's tight, liquidy slit.\n\nHe switched hands to slap the other cheek again. He could feel the heat radiating from her bottom as his cock plunged in and out of her. The force of his body had pushed the vibrator almost entirely inside her ass hole. He fumbled for the dial at the end still protruding and turned up the intensity. The vibrations transferred between her anus and vaginal walls that enveloped his member, and the impact was immediate. Grant was almost at the point of no return.",
        "Taking more control, he roughly gripped the cheeks of her ass with both hands and plunged deeply inside her. Then he paused. His fingers found the release lever on the handcuffs. One wrist fell free. With the cuffs still dangling from the other wrist, Meghan dragged her arms from behind her back.\n\n\"Here's what you're going to do,\" he commanded. \"You're going to use your fingers to rub your clit.\"\n\nEven though he was still motionless, she complied immediately.\n\n\"This condom is coming off and I'm going to come inside you,\" he said sternly.\n\nThere wasn't a moment of hesitation. \"Yes... take it off... I need to feel you squirt deep inside me,\" she moaned breathlessly.\n\nHe smiled and decided to tease her just a bit more. \"I need a signal, little girl.\"\n\n\"Green... green... for fuck sake... green,\" she panted.\n\nHe withdrew himself from her and quickly peeled off the condom. He saw her fingers working feverishly as she strummed her clit. He found her opening and thrust himself inside her with one long push and then began pounding her out at a fevered pace. Within seconds, her pussy began to convulse and quiver. Additional juices flooded from her, seeping down his thighs. Each time his body slammed into hers, it made a loud, wet, slapping sound.\n\nGrant continued to hold on. He tried to imagine each thrust was a sort of punishment for her, even though it was the opposite. Suddenly he felt her hand reaching underneath and grasping for his balls. They were tight against his body. She gripped them and gently squeezed. That was too much for him. Ejaculate exploded from him and spurted deep into her womb. Pulse after pulse released ecstasy. He wondered how much sperm he could generate. He wondered why this release seemed so much more powerful and prolific than any in recent memory.\n\nAnd then it subsided. She released her grip on him. He remained embedded in her. Unmoving. Breathing hard, but silent. He turned off the vibrator, and slowly pulled it from her rectum. His erection softened. He slipped out of her.\n\nShe'd collapsed onto the bed, on her stomach, and was desperately trying to catch her breath. Grant moved to her side and once she felt his presence, she turned and they laid face-to-face and she sensually pressed her body against him. Initially, her romantic gesture caught him off guard, but he quickly recovered. He wrapped his arms around her and she snuggled even tighter up against him. He marveled at how her body molded perfectly to his and how her breasts crushed against his muscled chest.\n\nShe romantically kissed his neck and licked just a little sweat off his flesh. \"I'm sorry and I need to apologize,\" she whispered.\n\nAgain, she took him by surprise, and he still felt a little standoffish. He was fairly certain where she was going with this, but he wanted to let her continue. \"And just what are you sorry for?\"\n\n\"It's been a long time since I've been intimate with anyone, much less a man, and I just momentarily... you know... lost control.\"\n\nHer brutal honesty softened him. Yet, he wasn't going to let her off the hook that easily. \"There was a point earlier where I was quite unhappy with you,\" he said, somewhat sternly.\n\n\"I know, baby, and I'm sorry,\" she said sincerely.\n\nHolding this woman, connecting with her on such an intimate level was improving his disposition considerably. \"So, it's been a while?\" he remarked gently.\n\nShe giggled. \"Yes, it has. You overwhelmed me; first emotionally at dinner, and then physically, in bed.\"\n\n\"I'm... I'm kind of new at this, being rough,\" he admitted.\n\nHer eyes widened. \"Really?\"\n\nFor the first time post-coitus, he felt very comfortable around her. \"Yes, really.\" He paused for a moment in reflection. \"Was it okay? Was I too rough? he asked tenderly.\n\nShe gently kissed his neck and then whispered into his ear. \"It was perfect. You were perfect.\" There were a few moments of comfortable silence, then she continued. \"I've never...\"\n\n\"It's okay, honey. You can tell me.\"\n\nShe thought for a moment in an attempt to find the right words. \"I've never let anyone take control of me like that, ever.\"\n\nHe smiled and then moved his thigh between her legs. Wantonly, she opened her legs for him and he gently rubbed his knee against the delicate flesh of her vagina. \"Did you like it?\"\n\nShe let out a little moan. \"I loved it, baby.\"\n\nNo woman, not his wife, or any of the women at his office had ever displayed this type of submissive nature for him. More than anything, he was curious and he had to know more.\n\n\"What I want to know is, how do you feel?\" He breathed the question into her ear. \"And, how do you feel about how I made you feel?\"\n\n\"I felt you were in control,\" she sighed happily. \"But I also felt safe, and you gave me options, choices. You didn't force me to do anything. I felt very comfortable giving myself to you like that.\"\n\nHe still had some lingering doubts. \"Are you sure that I wasn't too rough?\"\n\n\"No, I promise, you weren't. You were perfect, everything was perfect,\" she cooed.\n\nShe gently kissed his chest and he felt her nipples harden which made his cock stir and begin to come back to life. \"Well, I should probably get going, big day tomorrow and all.\"\n\nThe look of hurt in her eyes was evident and he was able to maintain his steely gaze for a few seconds until he burst out in laughter. She playfully punched him in the shoulder and then laughed with him. After exchanging a hot little kiss, her eyes seductively met his. \"I've never said this to anyone so quickly, but I like you and I'm... you know... into you, Grant.\"\n\nHe smiled. \"So, that means you don't want me to leave?\"\n\n\"It means that I make a great waffle, if you're willing to stick around long enough to find out,\" she said playfully.\n\nHe scooped her into his arms and he rolled her on top of him. Their mouths met and their tongues delicately danced inside each other's mouths. \"I need you to make love to me, slowly and gently. Can you do that?\" she whispered.\n\n\"Yes, I can, honey.\"\n\nShe let out a low, deep moan when his cock pierced the lips of her vagina and sunk deep inside her. \"By the way, Jen was right,\" she moaned. \"This is a fuck to remember.\"\n\nChapter Four\n\n\"Are you telling me you went all bondage on the first date?\" Jen hissed with incredulity. \"I set you up with my hot friend and you handcuffed her?\"\n\nThe tall brunette was looming over Grant, as he sat in his cubicle. He stood up to lessen the distance between them, and to keep her from talking too loudly in the office.\n\n\"Let's go get a coffee,\" he responded, as he took her arm. Jennifer twisted away from his guiding hand, but moved toward the door ahead of him.\n\n\"Why are you so upset?\" He asked, once they were alone and safely inside the empty break room. \"Did Meghan complain to you?\"\n\nJen shook her head from side to side. \"She said she had a nice time... and thanked me.\"\n\n\"Then what's the problem? You asked how things went down and I told you. I thought you wanted details.\"\n\n\"I did... I do,\" she said hesitantly. \"I guess... I don't know... you never did anything like that with me.\"\n\nGrant gave her a somber look. \"I know exactly what I've done with you. When and where it happened, and how long it lasted.\"\n\n\"Agreed. It was great when it happened and it's too bad it all had to end. I just never thought you were into BDSM.\"\n\n\"I'm not,\" Grant confessed, \"at least I never was before. I'm not sure that's what it was anyway. Do you want to know what happened or do you want me to shut up?\"\n\nJen shrugged. \"I guess I want to know.\"\n\nGrant poured them both a coffee. While his was black, he added two creamers to hers, and stirred it, before handing it over.\n\n\"Thanks, G-man,\" she said, taking a sip. \"Always the gentleman. Now, tell me about the kinky sex.\"\n\n\"You were right, Jen, as usual. I was immediately attracted to Meghan. We were comfortable with each other right away.\"\n\n\"I'll say,\" Jennifer said derisively, \"so comfortable you tied her up and...\"\n\n\"Stop,\" scolded Grant, \"do you want the story or not?\"\n\n\"Fine. Just hurry up and get to the good part. We won't be alone here for long.\"\n\n\"Dinner was great,\" he continued. \"I really enjoyed our conversation, so the attraction was more than physical. And the next thing I know, she's telling me what you said about giving her a fuck to remember.\"\n\n\"My mistake,\" Jennifer remarked with a frown, \"I shouldn't have let that cat out of the bag... or pussy, if you prefer.\"\n\n\"I'm not complaining. It really moved things along.\"\n\n\"Apparently. The truth is, she needed a good fuck. From a man. She's still stuck on Lisa.\"\n\n\"So I gathered. Anyway, we went back to her place. Both our engines were revved. I was telling her what to do, and we were naked in no time. But then...\" he stopped.\n\n\"What? You decided it was time to turn into a dungeon master? What?\"\n\nHe laughed and quickly got serious again. \"She just... pissed me off.\"\n\n\"How? Did she make fun of Grant's Ivory Tower?\"\n\n\"Funny. You have nicknames for everything. I should write them down.\"\n\n\"Shut up and answer the question.\"\n\n\"She used me like an inanimate object. It was like she didn't care if I was in the room. She used me to rub herself off. It was sexy, but it really pissed me off.\"\n\n\"Now you know how women feel. If I got pissed off every time Danny used me like a sex doll, a sperm recepticle...\"\n\n\"Fine. I'm just telling you how I reacted. I probably overreacted. But I saw some paraphernalia in her drawer, and immediately wanted to put it to use. I figured if she had handcuffs and toys, it wasn't for undercover police work.\"\n\n\"Oh, you're a sharp one.\"\n\n\"So I cuffed her hands behind her back, inserted a vibrator in her ass, and fucked her until I felt less pissed.\"\n\nJen's jaw dropped. \"That sounds like you raped her.\"\n\n\"Of course not,\" he explained hurriedly. \"I asked for consent along the way. I wasn't so livid that I lost all common sense.\"\n\n\"Meghan approved of everything then?\"\n\n\"She said no once, to something I wasn't going to do anyway. And she gave me a caution I think. But everything I did to her, she consented to.\"\n\n\"Bareback?\"\n\n\"Ummm... yes and no.\"\n\nShe cut her eyes at him. \"Just what does that mean?\"\n\n\"I... you know... she wanted me to wrap up and I did... at least it started out that way.\"\n\n\"Oh, you were expecting sex, you brought condoms with you?\" she smirked.\n\n\"I wasn't expecting sex, and I didn't have any protection with me.\" He paused for a moment in reflection. \"Then, she asked me to use a condom and I did... she had some.\"\n\n\"So, at some point that changed?\"\n\nGrant squirmed in his seat, but then quickly regained his composure. \"Once I began taking more control, I told her that I was going to take the condom off and she gave me her consent.\"\n\nJen looked at him sternly. \"You told her?\"\n\n\"In the moment, it was the right thing to do. I guess you would've had to be there.\"\n\nThere were a few moments of silence while each of them took a sip from their mugs. \"And you spent the night with her?\"\n\n\"Yes, I did. She even made me breakfast the next morning.\"\n\nShe smiled. \"Well, she is a good cook.\"\n\n\"Actually, the scrambled eggs were a little runny for my taste, but I'm not complaining,\" he teased.\n\nShe giggled. \"It's obvious that she liked you to get that far, so I'm pretty certain she still does. Or are you no longer interested?\"\n\n\"I am. My reaction took me by surprise. I don't know why I got so ticked, or why I chose to restrain her. I guess...it was about reasserting my control. She took charge and used me, so I wanted to dominate her in return. I felt better, and honestly, she enjoyed what I did to her. Including the spanking.\"\n\nAt that moment, the door opened, and two women walked in.\n\nJen said hi, and then turned away from them to face Grant and silently mouthed, \"SPANKING?!?!\" Her eyes widened in amazement.\n\nGrant smiled, nodded, and headed for the door. Jen followed. As they walked down the hall, she continued the conversation in whispers.\n\n\"Hard?\"\n\n\"I was very hard, yes.\"\n\n\"Don't be obtuse, G-man. I meant, did you spank her hard?\"\n\n\"Left hand prints on the cheeks of her ass and they were... ummm... kinda red.\"\n\n\"Damn. I've swatted my kids a few times. But there's been no spanking in my life... at least not since my dad warmed my bottom.\"\n\n\"That wasn't within the past couple years, was it?\"\n\n\"Smart ass. The last time I remember, I might have been 10, and he caught me smoking in the garage. It was his hidden pack of Marlboros. He turned me over his knee right next to our Buick, and let me have it.\"\n\n\"Did you learn your lesson?\" Grant asked with a smile.\n\n\"Sort of. I never smoked again. Not tobacco anyway. Mom came out when she heard me yelping. Told dad I was too old for that kind of treatment.\"\n\n\"I know how saucy you can be,\" he teased. \"Trust me, you're definitely not too old for a good old-fashioned ass warming.\"\n\nShe shot him a radiant smile. \"Don't get any ideas, Mister.\"\n\nChapter Five\n\nGrant twirled Meghan around on the large dance floor inside the expansive ballroom. She looked passionately into his eyes, lifted the hem of her ruffled dress and then sashayed sexily away from him, spun again, and then moved towards him. He pulled her into his arms and dipped her just as the orchestra stopped playing the rhythmic salsa number. Their eyes met and he righted her. She slipped easily into his arms and they shared a little kiss just as the myriad of other couples on the dance floor began clapping. Grant and Meghan joined in giving the orchestra a round of applause.\n\nShe looked at him adoringly. \"I haven't danced like this in years,\" she said while trying to catch her breath.\n\n\"It's been quite a while for me too,\" he said solemnly.\n\nWhen he and his wife graduated from college, Katie talked him into attending a semi-annual charity fundraiser for an organization that raised money for St. Jude's Children's hospital. They'd actually taken a ballroom dance class together so they could do more than enjoy the extravagant meal and get expensive drinks from the bar. While he loved dancing with Meghan, his mind drifted back to the years that he and Katie had enjoyed dancing to the music and having a fun evening out. Even though she'd passed away three years ago, this evening had brought back many fond memories and complicated his emotions. He'd let Katie go and had definitely moved on with his life, but evenings like this were still a little difficult.\n\n\"How about we sit this next song out and I'll get us a drink?\" he said.\n\n\"Okay, I could use a break too,\" she said in agreement as the orchestra began playing their next number.\n\nHe took her hand and escorted her back to their table and then went to the bar. Once he got two Margaritas, he began walking back towards where she was sitting. He couldn't help but notice the way she studied his every move. Over the past three months they'd spent a lot of time together since their first passionate evening. She loved that he was willing to spend three and sometimes four nights a week at her house. She loved cooking for him, taking care of him, and both of them felt their relationship deepening with each passing day they spent together.\n\nOnce he reached the table and took his seat, she romantically slid her chair next to his. \"I hope this drink isn't as strong as the last,\" he said.\n\n\"If I didn't know any better, I'd say you were trying to get me drunk,\" she teased, after taking a sip.\n\n\"I've seen you drunk and trust me, it's not a bad thing,\" he quipped.\n\nShe giggled. \"That was only once, but I did get a little carried away,\" she said shyly.\n\n\"You were insatiable and I loved it.\"\n\nA little blush broke over her face. \"You just seem to bring that out in me, honey,\" she said sexily.\n\nThat evening had been an interesting one for both of them. They'd gone out to dinner, she'd done a few too many tequila shots, and when they'd got home and retired to her bedroom, she'd asked him to restrain her to the bed and spank her with a paddle that she'd bought the day before. At first, he flatly refused because he thought the alcohol was clouding her judgment. He didn't want to do something that she would regret when sober. However, like most beautiful women, she had a way of getting everything she wanted from him. Sexually, anyway. In the end, it was a mind-blowingly good night for both of them.\n\nAs the orchestra played a soulful rendition of an old Miles Davis classic, she romantically rubbed his thigh. \"So, when are you going to let me spend the night at your house?\"\n\nShe had been to his place, but only once. He'd strategically taken her there when his roommates were out at the mall, clothes shopping, on a rainy Saturday afternoon. However, she was correct, she'd never stayed over, and it was for obvious reasons.\n\n\"I like your house a whole lot better, we have much more privacy there.\"\n\n\"It feels like you're trying to hide me away from the world,\" she teased.\n\nHe laughed. \"Not at all. I've never been more proud to be seen with anyone in my whole life.\"\n\nHe basked in the warmth of her appreciative smile before continuing. \"But my roommates tend to get a little crazy at times.\" He thought for a moment. \"The walls aren't exactly soundproof, you know? Some nights it's like I'm trying to sleep while a porn movie is blasting through the speakers.\"\n\nShe seductively bit her lip. \"You can really hear them having sex?\"\n\nHe laughed. \"Yeah, I can. Neither of them is shy and trust me, they don't have an ounce of shame. I'm surprised that some of my neighbors haven't called the police, to be honest.\"\n\n\"They're happy and in love... being exuberant in bed isn't a bad thing,\" she quipped.\n\n\"I'm glad they're happy, but being awakened at two in the morning by a woman who's screaming 'put your fist deeper inside me' isn't a fun experience,\" he joked.\n\nMeagan was now squirming in seat. \"Get out, you've really heard that?\"\n\nHe sighed. \"I've heard worse than that, it's like living on lesbian sorority row. Getting eight hours of interrupted sleep at your place is something that I've come to enjoy.\"\n\n\"And I just thought you liked making love to me, now I see how you are,\" she said playfully.\n\nHe leaned in and they shared a slow, passionate kiss. \"I kinda like making love to you too,\" he said slyly.\n\nThey took a sip of their drinks and enjoyed a few moments of comfortable silence while listening to the orchestra and watching the other couples dance out on the floor. He loved the way her beautiful green eyes sparkled as she tracked the couples. Then, she caught him staring. \"Just what are you looking at?\" she said whimsically.\n\nHe reached out and gently rubbed her exposed thigh. \"I'm looking at the most beautiful woman I've ever seen.\"\n\nThe sincerity of his words melted her heart. \"It's been a long time since I've... you know... since I've been this happy,\" she whispered.\n\nThere had been something on his mind for the past week, a subject that he'd been reluctant to broach with her, until now. \"Do you miss it?\"\n\n\"Miss what?\"\n\n\"Do you miss her, do you miss Lisa?\"\n\nThere were a few seconds of silence as she contemplated her answer. \"Sometimes.\" She thought for a moment. \"She was very special to me, Grant, and for a while, I thought she was the one. But now, I realize she wasn't.\"\n\nHe smiled as he listened to her words.\n\n\"That person is you, you're the one I'm supposed to be with,\" she said lovingly.\n\n\"I... I have those same feelings for you, Meghan,\" his voice cracking slightly. He reached for her hand, gently squeezed it, and they shared a romantic kiss. \"I'm not sure that I want to know the answer to this next question,\" he said, as a little smile broke over his face. \"But do you miss being with her?\"\n\nShe thought for a moment. \"Yes, to be honest, sometimes I miss it,\" she admitted. \"But it's nothing I need, okay? I have you, and that's enough.\"",
        "Nothing she needed, he thought, but something she loved and missed and would do again in a heartbeat if the opportunity presented itself. \"So you'd really like to stay over and... you know... meet my roommates?\"\n\nHer eyes lit up. \"Of course I would. Jen told me they're really sweet, I'd love to meet them.\"\n\nHe squeezed her thigh which sent little shivers through her body. \"Okay, I'll see what I can do then.\"\n\nChapter Six\n\n\"Jen said you were pretty, and Grant said you were beautiful, turns out they were both underselling you,\" stated Bethany, as she filled Meghan's wine glass. \"The fact is, you are drop dead gorgeous!\"\n\nMeghan blushed. \"That's sweet of you to say.\"\n\n\"I agree,\" Claire added, \"we're so glad Grant finally allowed us to meet you. We're very protective of this guy. He deserves the best... and it looks like he got it with you.\"\n\n\"You guys are too kind,\" objected Meghan, \"he adores the two of you, and Jen. So thanks for adding me to the group.\"\n\nMeghan's meeting with Claire and Bethany had just begun, but was going well. The four of them together in Grant's house was a first. With Claire and B both living with him and contributing rent, it really wasn't just his house anymore. Still, he had delayed bringing Meghan into the mix until now, and he wasn't entirely sure why.\n\nPerhaps he had been worried about his two roomies accepting Meghan. After all, he had been sexually active with both of them in the past. Separately and in a group. And even though the two women were now a couple, it felt odd to bring another woman into their midst.\n\nDeep down, he wondered if a tiny part of him was concerned about Meghan's bisexuality. B and Claire were beautiful women in their own right. Could he be worried that he might not be enough for this woman he cared for so deeply? What if seeing Claire and Bethany so happy together, reawakened that longing in Meghan? What if that part of her sexuality became an insurmountable obstacle to the relationship they were undeniably forming?\n\nPushing these concerns aside, Grant had finally arranged for this Friday evening gathering. He'd tried to include Jennifer and her husband, but Danny politely refused. On the other hand, Claire and B were more than excited. Both enthusiastically worked together to prepare dinner. The menu was Chicken Cordon Bleu, with balsamic-glazed green beans, Waldorf salad, and lots of wine.\n\nAs the meal progressed and the wine flowed, Grant's worries disappeared. There was no awkwardness. Nothing felt more natural than for the four of them to be together, laughing and sharing stories from the past and present.\n\n\"From what Grant tells us, the two of you have been out on the dance floor a lot lately,\" remarked Claire. \"What kind of dancing have you been doing?\"\n\n\"Foxtrot, swing, salsa, and rumba,\" Meghan answered. \"He's actually a lot better than he admits.\"\n\n\"I prefer to slow dance,\" interjected Grant, \"anything that allows me to hold her close and look into her eyes.\"\n\n\"I feel like dancing now,\" Bethany said as she grabbed her phone. \"Let's do it!\" A moment later, the Sonos sound system was playing Adele's \"Make You Feel My Love\" from speakers throughout the house.\n\nBethany took Claire's hand and pulled the taller woman to her feet. The statuesque blonde smiled as she took the lead with her young partner.\n\n\"Come on you two,\" coaxed Bethany, \"I want to see how you move.\"\n\nSoon, the two couples were swaying to the music. Entwined together, Grant held Meghan closely. They moved as one. He inhaled her scent, the fragrance of her hair; he felt the silky smoothness of her skin. It was intoxicating. He glanced at the only other couple in the room. Claire and Bethany were absorbed with each other.\n\nGrant turned his full attention back to Meghan. Since she was 5'8\" and wearing heels, he was only slightly taller. The green of her eyes captivated him. He swept a long blonde curl away from her face, and then brushed his lips against her cheek. He felt the warmth of her breath on his ear. It sent shivers up his spine.\n\nHe leaned back to gaze at her fully. Her lips were parted and so inviting that he subconsciously licked his in anticipation. The kiss was as familiar as it was thrilling. All that they knew of each other and had experienced together was expressed in that physical act. As the kiss continued, his hands explored her body. Grant felt oblivious to anything else around him, including whatever music was playing. He only sensed Meghan, and how her body responded to his touch.\n\nWhen he finally broke the kiss, it was only because he had to tell her something. At that moment, the song changed to the husky voiced Norah Jones singing \"Come Away with Me.\" That seemed perfect.\n\n\"Meghan,\" he whispered, \"I...uh...I didn't think this would happen for me. Not again... not this soon. But it has. Meghan...I love you.\"\n\nMeghan stopped moving. Grant couldn't tell if she was surprised, scared, or searching for the right thing to say.\n\n\"You don't have to respond or say it back,\" he added, \"I just want you to know how I feel. I won't pressure you, but I want you to know this isn't a casual fling for me. You're the only one I want.\"\n\n\"I'm glad you feel that way,\" Meghan replied. She took a deep breath and thought for a moment. It was as if she was looking for the right words to respond to him. \"I just... you know... I can't replace your wife...\"\n\n\"I don't want you to,\" interrupted Grant, \"I love you for being you. Katie and I had wonderful years together. But she's gone, and nothing can bring her back. You're not a replacement, you are a gift I don't deserve.\"\n\nA tear rolled down Meghan's cheek. He tenderly brushed it away, and then kissed her again. He held her close as Norah sang, \"and we'll kiss on a mountaintop, come away with me and I'll never stop loving you.\"\n\nThat was when Meghan whispered in his ear. \"I love you too, Grant. I've never loved anyone more.\"\n\nChapter Seven\n\nNot long after that song ended, the two couples agreed to retire to their separate rooms.\n\nFor Meghan's first night at Grant's place, they decided to shower together. They soaped each other's bodies, and enjoyed the sensation of slippery skin-on-skin contact. Grant lathered every inch of her body, caressing her, as if for the first time. Meghan took her turn, spending most of the time between his legs. Grant's cock and balls were covered in suds. One hand rubbed methodically up and down his shaft, as she cradled his balls with the other. Eventually her fingers moved between the cheeks of his ass and explored his puckering anus. She inserted a soap-covered finger inside him, and felt his cock grow even harder.\n\nAfter a moment of that experience, Grant simply picked her up in his arms and let her wrap her long legs around his waist. She clung to him as he stood under the cascade of warm water. The soap rinsed from their bodies. Grant leveraged Meghan's back against the shower wall, so that the spray of the shower was not in her face. Staring deeply into her eyes, he reached under her, gripped his erection and found the entrance between her legs.\n\n\"I want to be in your pussy,\" he said huskily.\n\n\"I want that... I need that... I need to feel you inside me, baby,\" she whispered.\n\nThe tip of his cock pushed between her lips. He savored the feeling for a moment before going deeper. \"You're so tight, and hot, and wet,\" he murmured, pulling out slightly, before thrusting in again.\n\nIt was at that moment he realized the other shower was running. He hadn't noticed before. What drew his attention now were the moans coming from the bathroom on the other side of the wall. He could distinguish Bethany's voice. She was clearly enjoying whatever Claire was doing to her. He couldn't help but smile, and wondered if Meghan noticed.\n\n\"Oh my God,\" groaned Meghan suddenly. She lifted her hips and impaled herself on his shaft so forcefully that Grant almost stumbled backward.\n\n\"Fuck me, Grant,\" she yelled, \"fuck me hard! Drive that big cock into my wet pussy.\"\n\nGrant wanted to tell her to lower her voice, but he was too horny to even form the words. With her arms around his neck, Meghan pulled herself up and down on his cock. The sensation of that silken pussy enveloping his swollen member, as water pulsed over their wet and slippery bodies, was too much. Her large wet breasts ground into his chest and he could feel her erect nipples pierce his flesh. He wrapped his arm around her thigh and pulled it up which allowed him to penetrate her even deeper. Between her moans and pants, she was licking, kissing, and gently biting his neck. Because he'd changed the angle, his cock was perfectly caressing her clit and driving her closer to going off the cliff. He wanted this exquisite moment to last forever, but after a couple of minutes, he could no longer hold himself back.\n\n\"I'm going to cum in you,\" he announced.\n\n\"Do it, baby,\" she yelled with abandon, \"I want to feel you squirt deep inside of me.\"\n\nWith one final thrust, Grant pushed himself deep into her womb. His cock erupted into her. As rope after rope ejaculated inside her, Meghan orgasmed. Her body began to violently convulse and her world went dark for seconds.\n\n\"Oh fuck!\" She exclaimed, gasping for air. \"Holy fuck... that felt so good, honey.\"\n\nGrant lowered her to stand on her own two feet, as they continued to hold each other, and catch their breath. The sounds from the other bathroom resumed and for the first time, Meghan heard them.\n\n\"Oh my God, is that what I think it is?\" she exclaimed in surprise.\n\nAt that moment, Claire's voice could be distinctly heard. \"Just like that, get that tongue all the way inside me, girl,\" she screeched.\n\n\"Yeah... ummm... it is.\" He paused for a moment. \"I'm sorry, but I did try to warn you, right?\"\n\nThen a look of shock broke over Megan's face as a new realization hit her. \"I was in no way quiet, if we can hear them do you think they... you know... could hear me?\"\n\nHe laughed. \"I think that's a definite possibility.\"\n\nShe blushed and then smiled. \"You could have told me to shut up, you know.\"\n\nHe leaned in and they shared a hot, romantic kiss. \"You were perfect and I didn't want to ruin the moment.\"\n\nThe moans and pants were now becoming louder and more pronounced. Then a voice echoed through the walls. \"That feels so good, I love it when you put your tongue in my ass,\" Claire moaned.\n\nGrant was now shaking his head in embarrassment. \"I'm sorry, love. Maybe this wasn't such a good idea, huh? You see now why your place is so much better than mine.\"\n\nMeghan heard him, but was listening intently to the goings on in the other bathroom. Slowly, she reached down and began slowly stroking his cock and bringing it back to life. \"Listen to them, they're so sexy,\" she whispered.\n\nHe grinned. \"Well, they're nothing if not exuberant,\" he said teasingly.\n\nShe just seemed to have that effect on him. He'd never been able to get hard again so quickly with any of the other women he'd been with. His lust for her seemed to know no bounds.\n\nShe looked deep into his eyes. \"Watch this,\" she said, while keeping her voice low. His eyes followed her hand as she moved it between her legs. Then she dipped two fingers deep inside her vagina, and slowly moved them in and out. His eyes widened when she brought them up to her lips. They were glistening wet with their combined sereations. Keeping her eyes locked on his, she licked her fingers clean.\n\n\"You're sexy as hell, do you know that?\" he said huskily.\n\nShe chuckled. \"I just like the way we taste.\" The gasping and heaving from the two girls in the other shower seemed to be echoing off the walls. \"It is like a porno movie, isn't it?\"\n\n\"I know, right?\" He paused for a moment. \"But I have to admit, it is kinda sexy.\"\n\nShe looked seriously into her eyes. \"It's very sexy, they're so into each other.\"\n\n\"You're really okay with this? Hearing them like this?\"\n\n\"Yes, baby, I am,\" she said lustfully.\n\n\"Let's get you cleaned up. Our evening has only just begun.\"\n\nChapter Eight\n\nSkin toweled dry, glowing warm from the shower and sexual exertion, Grant crawled into bed beside her. Meghan snuggled up to him, her hand on his muscled chest, her fingers combing his sparse, mostly white chest hair. The white sheet covered the lower half of her body, leaving her full breasts exposed for his viewing pleasure. The circumference of her areolas had enlarged from the heat of the shower, but her nipples were no longer erect. As Meghan nuzzled against his neck, Grant breathed in her clean scent. His hand found its way to her breast, and his touch brought her nipple to life.\n\n\"Mmmm, honey,\" she murmured, \"I love how you touch me.\"\n\n\"All of me loves all of you,\" he replied. \"In fact, I find it hard to believe that I'm in bed with a woman this beautiful, I feel so fortunate to have found you.\"\n\nHer hand slid down his chest, under the sheet, until she found his half erect penis.\n\n\"I find it not quite as hard,\" she quipped.\n\nHe chuckled. \"That will change quickly.\"\n\nThat was when the bedroom door opened.\n\n\"Hey, you two,\" Bethany chirped, \"sorry to barge in.\"\n\nGrant bolted upright in bed. Meghan clutched at the sheet in an attempt to cover her breasts.\n\n\"What happened to knocking?\" Grant said sternly, his brow furrowed.\n\nInstead of apologizing, Bethany actually stepped into the room, with Claire behind her. Bethany was scantily clad in a sheer mesh black lingerie set. Grant could see her nipples from across the room. Claire had on a red baby doll that accentuated her already long, beautiful legs.\n\n\"Don't be silly, G-man,\" retorted Bethany, \"there are no secrets between us, are there Claire?\"\n\n\"None,\" said the smiling blonde, \"we've seen and done it all together... multiple times.\"\n\nGrant was relieved that he and Meghan had 'that talk' about a month into their relationship where each of them shared their complete sexual histories. Claire and Bethany knew this, but it made him uncomfortable to have them talk about it in front of the woman he loved. He hoped their boldness wouldn't shock Meghan.\n\nGrant sputtered, \"Yes... but not... not...\"\n\n\"But not Meghan,\" said Claire, completing the sentence.\n\n\"We hope you don't mind, Meghan,\" continued Bethany. \"We realized that you could probably hear what we were doing, since we could hear both of you. Honestly, it felt like we were all in the same room together already.\"\n\n\"Listening to you enjoy each other really got my juices flowing,\" Claire added. \"We know what a good lover Grant is, don't we B?\"\n\n\"Yes we do,\" nodded Bethany, moving closer to Meghan's side of the bed. \"Did we bother you at all, dear?\"\n\n\"Ummm... I... no... you'd... I think...\" stammered Meghan.\n\nWithout prompting, Bethany sat on the edge of the bed, facing the flustered couple. The mesh material did nothing to hide her breasts. Grant could even see the tuft of hair between her legs, as she curled one leg on the bed. He was immediately rock hard. Claire took that opportunity to crawl up on the end of the bed. She sat on her knees, poised between the legs of the two lovers. Grant's attention was drawn to the expanse of glorious flesh now revealed, as the baby doll rode up Claire's thighs.\n\n\"Hey, you two,\" Grant's tone was anything but forceful. He looked at Meghan, trying to gauge her reaction. Meghan's eyes were as wide as saucers. She had stopped trying to cover herself with the sheet, leaving her bare breasts exposed. \"Are you... umm... okay, honey?\"\n\n\"Of course she's okay, G-man,\" scolded Claire, \"she's an adult. She can make up her own mind, can't you Meghan?\"\n\nMeghan nodded slowly in affirmation. Grant said nothing.\n\n\"Claire and I want to join you tonight. We think we should all be together.\"\n\n\"You're so sexy,\" Claire admitted, looking at Meghan. \"B and I have been drooling over you all night. Hope you aren't... you know... offended.\"\n\nA little blush broke over Meghan's face. \"I'm... ummm... I'm flattered,\" she said, finding her voice. A myriad of thoughts were spinning through her head and she desperately tried to focus. \"Both of you are gorgeous,\" she whispered, \"and Grant has nothing but good things to say, and I see why.\"\n\nClaire giggled. \"He always complains that we're too loud when we have sex, but... you know... old guys are like that.\"\n\nGrant rolled his eyes as the women had a laugh at his expense. Truth be told, he didn't mind her little joke and he loved how easily Meghan was getting along with his roommates.\n\n\"So what has he told you?\" questioned Bethany.\n\n\"You are both different, but each wonderful in your own way,\" Meghan replied with a sly smile. \"Obviously, there are physical differences. Claire is the brilliant, beautiful, blonde Amazon, and a little more reserved than the brash, young, lovely cheerleader you seem to be.\"\n\n\"I'll allow it,\" Bethany retorted. And without hesitation, leaned in and kissed Meghan on the lips. Meghan didn't hesitate to return the kiss.\n\n\"My turn,\" exclaimed Claire, as she scooted between Grant and Meghan. The two intruders now bracketed her. Bethany ended the kiss, allowing Claire her opportunity. As the two blondes began sensuously making out, Bethany winked at Grant, and with a smile, bent down and licked Meghan's breast. The newcomer to the group made a sound that was smothered by Claire's kisses. This spurred Bethany to lavish her attention on the golden orb. She sucked the nipple into her mouth, and gently pulled it with her teeth. Meghan began to writhe on the bed. The mouths of the two blondes seemed to be trying to devour each other.\n\nFeeling left out, Grant watched, but didn't touch. With Claire squeezed between him and Meghan, her ass was pushing against his thigh. The baby doll wasn't covering much, and he could see a glimpse of the red thong that disappeared between Claire's amazing ass. He longed to pull aside the panties and insert his rock hard erection, but he didn't want to overstep until he knew what was permissible. When he looked at Meghan, she was lost in the moment. The other women's hands were roaming up and down her body and they were each taking turns passionately kissing her. He knew she loved everything they were doing and he realized that he wasn't the least bit upset that she was oblivious to him.\n\nBethany stood up, unhooked her bra and let it fall to the floor. She pulled down her sexy black panties, keeping her eyes on the two women. Then, ever the director, Bethany issued a command.\n\n\"Meghan, I want you to strip Claire naked. I want you to see how sexy and beautiful she is.\"\n\nMeghan didn't hesitate. She obediently helped Claire remove the baby doll. Claire raised to her knees to give space for Meghan to slide the red thong down her tan thighs. Grant could see that the crotch was soaked.\n\n\"Now Claire,\" Bethany continued, \"I want to see all of Meghan too.\"\n\nClaire grasped the sheet that covered the lower half of Meghan's body, and pulled it aside. Grant remained half covered on his side of the bed, still an observer.\n\n\"Look at her beautiful, bald pussy, Claire. She shaved it just for us.\"\n\nGrant didn't try to contradict B's claim. He had experienced the delectable flesh between Meghan's legs numerous times in their months together. Being with Meghan was the first time he'd encountered a completely hairless pubic mound. He was enthralled. It made him want to eat her out for hours.\n\nBethany lay on the bed beside Meghan, with Claire opposite.\n\n\"Do you like us Meghan?\" Bethany asked. \"Will you let us make you happy?\"\n\nMeghan's eyes traveled up and down Bethany's body.\n\n\"Yes,\" she whispered, \"you're both so beautiful... I've never been with two women before.\"\n\n\"Just relax, honey,\" said Claire, fondling the breast nearest her. \"We're going to have a lot of fun.\"",
        "Bethany pulled Meghan's face toward hers and gave her an open-mouthed kiss. Claire satisfied herself momentarily by attending to Meghan's nipples. Stroking each in turn. Then the two women began to alternate kissing Meghan. She clearly enjoyed the attention. Her eyes stayed open, as she gazed back at whichever woman was kissing her at the time. When she turned toward Claire, her eyes flickered over to Grant. She gave him a questioning look. He simply smiled and nodded his head, letting her know that he approved of everything that was happening.\n\nHe reached under the sheet to adjust his erection. It was so stiff, it felt almost detached from his body. He wiped away the pre-cum that drizzled down the shaft. He wanted to stroke himself, but it would be like trying to hold a bottle rocket with a lit fuse. It could go off at any moment.\n\nGrant watched the hands of his two friends explore his lover's body as they took turns kissing her. Their fingers cupped her breasts, teased her nipples, touched her belly, ran down her hips and outer thighs. Meghan soaked it all in. She touched the two women everywhere that was in reach. Rubbing breasts, gripping thighs, tangling fingers through hair to press their mouths together. Grant could see Meghan part her legs, and soon both women were caressing her inner thighs. Meghan groaned, and spread her legs further apart.\n\n\"Honey, your pussy is so wet,\" whispered Bethany. \"My fingers aren't even in you yet.\"\n\nMeghan's response was indicipherable, only little moans and gasps could be heard.\n\n\"I feel it too,\" Claire added, \"it looks like a beautiful flower, just after a rain. I can't wait to taste you,\" she said huskily.\n\n\"Me first,\" exclaimed Bethany. Lasciviously, she touched her middle finger to the mound between Meghan's legs. Meghan shivered as the finger pushed between the folds of sensitive flesh. Slowly and deliberately, Bethany brought her wet middle finger to her own mouth and pushed it between her lips.\n\n\"Mmmm,\" she murmured, \"you're delicious.\"\n\n\"I want more,\" Meghan whispered. \"Give me more... please,\" she begged.\n\nBethany giggled. \"Oh, you're our demanding little girl now?\" Bethany teased. \"Spread her legs wider Claire,\" she said. \"You'd better get ready, girl, because we're going to finger you, until you can't stand it anymore.\" Meghan shivered in anticipation.\n\nSandwiched between the women, Meghan's legs opened to allow two sets of hands to explore the wet sexual swamp they'd created. They stroked her outer lips, teasing and tantalizing the helpless beauty. Their fingers moved closer and closer to the center of her sex. As Meghan cried out in ecstacy, Bethany began to rub her clitoris while Claire slowly inserted two fingers into the sopping vagina. She moved them in and out in gentle rhythm, matching Bethany's movements.\n\n\"Oh, God... Oh, God,\" Meg moaned in pleasure. There was a light film of sweat on her body and her long, wet blonde hair was now a tangled, disheveled mess. She started pinching and pulling her nipples and began moving her hips forward in an attempt to get Claire's fingers deeper inside her.\n\nGrant was mesmerized by the sight of the two women ravishing his love. Knowing just how and where and when to touch Meghan had her quickly climbing toward release. Grant felt so unnecessary, that he truly wondered if he would get to play a part in this incredible scene.\n\nClaire added a third finger as she thrust more deeply into Meghan's wet opening. Bethany continued her ministrations on her clit and then pushed Meg's hand away from her breast and replaced it with her mouth, sucking and gently biting her hard nipple. The three bodies pressed and entwined together. Claire covered Meghan's mouth with her own, the invasion of her tongue matching the force of her fingers.\n\nEcstasy overtook Meghan's body. Claire and Bethany held onto her tightly as she bucked and writhed in orgasm. The friends waited for Meghan to return to earth. Her eyes were closed and her breath was shallow and ragged as she attempted to get her wits back about her. She'd never experienced anything like this and she savored the pleasure both of the other women had given her.\n\n\"Oh my God, are you two trying to kill me?\" Meghan said through little sips of breath.\n\nThe other two women laughed in unison. \"We're not, but I don't think it would be a bad way to go,\" Claire teased.\n\n\"We're not done yet, girl,\" Bethany announced. \"I want to watch you with Claire. She's the best lover I've ever had and I could stay between her long legs all day. I'm sure Grant would agree.\" Grant broke into a little smile when his name was mentioned. Up until that point, he was fairly certain that the women had forgotten about him entirely. Bethany continued, \"I want to watch you lick her. You like pussy, don't you Meg?\" It wasn't really a question.\n\nA little blush broke over Meghan's face. \"Yes, I do,\" whispered. Then she licked her lips with anticipation.\n\n\"There's one more thing,\" added Bethany. \"We've left poor Grant out of the fun so far, but I've got plans for him too. But before we do that, I want to ask if you'll let me borrow him for a bit.\"\n\nMeg's eyes widened. \"Do you want him to... you know... have sex with you?\"\n\n\"Well, not that I wouldn't mind, but we're not going there, at least not now. No, what I want is to lay beside Claire while you're between her legs. I want to hold her hand and see her face while you lick her pussy. And while that's happening, I want Grant's head between my legs. For a man, he's pretty good at giving oral sex. Are you okay with that Meg?\"\n\n\"Don't I get a vote in all this?\" Grant asked indignantly.\n\n\"What are you gonna say?\" scoffed Claire, \"no?\"\n\n\"I guess not,\" he said sheepishly, \"but only if it's okay with you, Meg.\"\n\nMeghan nodded enthusiastically. In no time, Bethany and Claire lay side by side where Grant and Meghan had once been. Naked Grant embraced naked Meghan. His stiffness kept their hips several inches apart. He kissed her, realizing that the next thing her lips touched would be Claire's pussy.\n\n\"Are you ready sweetheart?\" he asked. \"I've never done anything quite like this before.\"\n\n\"Me either,\" she said with a smile that made his heart leap. \"But I've wanted this from the moment I saw her,\" she said sexily.\n\nAnd with that, she climbed back onto the bed, positioning herself between Claire's beautiful long legs. The golden triangle of her pubic hair, glistened with readiness. Grant followed suit, matching her movements, except in front of Bethany. The two women held hands and kissed as the other couple got into position. Grant took the opportunity to speak to Meghan one more time.\n\n\"I love you, Meg. Don't ever doubt it.\"\n\n\"Despite how it looks at the moment, I love you too,\" she replied, \"and with all my heart.\"\n\nMoments later, Grant's face was buried in Bethany's pussy. His deep affection for this girl, 30 years his junior, was almost parental. His physical attraction to her was far from fatherly. From their earliest encounters, Bethany had always been the one directing the action. Tonight was no exception. In the office, Grant was usually the one who was in charge. But when it came to sex, he willingly followed Bethany's plans, and it had always turned out well. Even though it had been a while since they were last intimate, they had fucked and sucked so much in the past, everything seemed familiar.\n\nGrant tried to catch glimpses of Meghan, but his view was blocked by the legs of both women. From the moans he heard, all seemed to be going well. He devoted all his attention to pleasing Bethany. His tongue probed and prodded, searching for every way to satisfy her desire. Her free hand gripped his hair, and guided him in his efforts. He stretched one arm upward, feeling her tight body along the way. Reaching her breasts, he caressed and pulled and fondled. His other arm remained between her legs, allowing his fingers to join his mouth. As they slipped in and out of her opening, it practically gushed with her juices, which began coating his face.\n\nHe could hear Claire vocalizing her pleasure.\n\n\"Is Meg making you feel good, my love?\" asked Bethany.\n\n\"She's... she's... oh my god!\" screamed Claire, \"she's gonna make me cum so hard. I'm gonna squirt all over her beautiful face!\"\n\nGrant felt this was the moment to up the action. He withdrew his fingers from B's pussy. Then he tried to insert his slick middle finger into her asshole. It was tight and white hot, and resistant to his effort. But coated with her secretions, and paired with his persistence, the puckered muscle soon opened and allowed him entry. As he wiggled it further into her rectum, her screams joined Claire's.\n\n\"Grant's tongue is in my pussy and his finger is in my ass! Holy shit! Fuck! Fuuuuuuuck!!!\"\n\nHer hand pushed his head tightly into her sex, and her legs pressed against both sides of him, as her hips bucked uncontrollably. When she released him, Grant sat up in time to see Meghan's face emerge from between Claire's legs. Her lips and chin were wet with secretions. Her blonde curls were tangled and matted. Yet he could still state this fact...\n\n\"You've never looked more beautiful.\"\n\n\"Thank you, my darling,\" she replied, wiping her mouth with the back of her hand.\n\n\"We all need some hydration,\" announced Claire, \"especially because, if I know B, we're not done yet.\"\n\n\"You know me so well, dear. I do have something in mind.\"\n\n\"I'll go get us some bottles of water,\" volunteered Grant. \"And Bethany, while I'm gone, you can bring out the spreadsheets and diagrams for whatever it is you have planned,\" he cracked.\n\nGrant felt a little strange walking through his house buck naked, and with an erection that would not go away. His balls ached for release. It had taken a lot to keep his mind occupied, so that there was no ejaculation before it was time. The fact that he and Meghan had sex in the shower before all this started, was what kept him in check. Three gorgeous, naked women having sex in the same bed would break any mortal man.\n\nHe grabbed four large bottles of water from the refrigerator, and found a tray to carry them on.\n\nRe-entering the room, he served each of the women. They eagerly grabbed a bottle each. Grant didn't realize how thirsty he was until he took the first sip. In seconds, he guzzled the entire bottle. Placing the empty on his dresser, he turned back to the women.\n\n\"So what's the plan? Whatever it is, I hope I'm included. I love watching, but little Grant is getting impatient.\"\n\nBethany took another sip of water before responding. \"Don't worry, G-man. You're gonna get your rocks off this time. Meg has already agreed.\"\n\nGrant looked over at Meghan, and she nodded in agreement and flashed him the smile he loved so much.\n\n\"This is going to be a night of some firsts,\" added Claire.\n\nGrant's eyebrows raised in surprise. He couldn't imagine what hadn't yet happened between the four of them.\n\n\"You need to know,\" explained Bethany, \"there's nothing sexier than seeing a beautiful woman with her legs splayed open...\"\n\n\"I'd have to agree with you there,\" Grant teased.\n\n\"Just listen,\" scolded Clair goodnaturedly.\n\n\"A beautiful woman,\" continued Bethany, \"with her pussy completely exposed to view. Open, ready, and waiting to be enjoyed... while at the same time having a cock in her ass.\"\n\nGrant's eyes widened. He felt a little puzzled about how this would play out between the four of them. Seeing the look on his face, Meghan jumped in.\n\n\"Tell him the rest, B!\"\n\n\"G-man, your beautiful girlfriend is going to experience two firsts. You're going to have anal sex with her, and while you do, we're going to lick her pussy.\"\n\nThis was new and different. His experience with anal sex was not extensive to begin with. Since the first time he'd inserted a vibrator in Meghan's asshole while fucking her pussy, he'd not come close to anything like that with her. But clearly, it was something Meghan wanted.\n\nBethany pushed him back to the bed.\n\n\"You can sit on the edge. I'll prop some pillows behind you in case you need them.\"\n\nGrant sat down as Meghan stood in front of him.\n\n\"Meghan, you bend over,\" Claire directed, \"I'm going to get you ready.\" Obediently, she bent over the bed next to Grant. She continued, \"You got some lube, G-man?\"\n\n\"Ummm... yeah, top drawer of the nightstand,\" he responded.\n\nClaire walked over, retrieved a small tube of Astroglide, and returned to the couple. \"So, when did you think you'd be needing this? she teased, as she held up the little tube.\n\nGrant blushed. \"Hey, I'm a boy scout, be prepared, right?\"\n\nThe three women giggled, then things got more serious. Claire opened the tube and squirted a large dollop of lube onto Meghan's asshole. Her body shivered when her tight, puckered little hole came into contact with the cool, crisp liquid. Slowly and carefully, she began pushing the fluid into her asshole with a single finger. \"Yeah, that feels really good,\" she cooed.\n\nOnce her finger was moving in and out with relative ease, Clair spoke. \"You ready for another finger, honey?\"\n\n\"Yeah, give me another,\" she said gamely. When Claire eased a second finger into her tight opening, her body visibly tensed and her breathing became shallow and ragged. \"Just like that, girl, nice and slow,\" Meghan whispered. Methodically, Claire eased her fingers in deeper, and after about a minute, both digits were moving freely in and out of the tight orifice. \"Okay, I'm ready, let's do this,\" she announced.\n\nJust as Grant was about to move into position, Bethany stopped him. \"I'm going to give you some natural lube first,\" Without waiting for a reply, she wrapped her lips around his stiffness. She moved up and down his shaft, deep throating, and covering him with saliva. He'd always had really good control, but because of Bethany's expert ministrations, she quickly took him right to the edge, something that wasn't lost on Meghan.\n\n\"You'd better stop, B,\" she warned, \"he's gonna pop in your mouth in about two seconds.\" Instantly, Bethany let Grant's cock slip out of her mouth.\n\nFinishing their respective assignments, the women moved Meghan into position. Grant moved farther back on the bed, allowing space for her to straddle him facing forward. He cradled her bottom as she lowered herself toward his waiting member. He felt multiple hands grip him and guide him toward Meghan's anus.\n\nThe lube and saliva combined to allow the bulbous, swollen head of his cock to push into the puckering aperture. Meghan let out a groan, somewhere between pain and pleasure. She rocked upward slightly, and then settled back down, taking him just a bit deeper. With his arms he raised her again, and then back down, penetrating her rectum a little more deeply. \"God, that's big,\" she moaned.\n\nHe saw Bethany bend over between Meghan's legs, heard her spit, and felt it hit his shaft. Before he could speak, she did it again. This was weirdly erotic and intimate. With his help, Meghan continued to raise and lower herself on him. His cock was so tightly sheathed inside her, it felt as if it was cutting off blood flow. At the same time, he was as hard as he had ever been.\n\nFinally, Meghan bottomed out. Her ass cheeks rested on his pubic bone. His balls were dripping with lube, saliva, and juices, and they were exposed to the view of the two women in front of him. He felt vulnerable, yet powerful. More than anything, he felt as if he would explode.\n\nWith Meghan impaled on his cock, Bethany and Claire knelt between both their legs. It was at this moment that Grant wished he had installed some cameras in the bedroom. This hedonistic scene would live in his memory for the rest of his life, but it would have been incredibly sexy for him to relive this moment together with his girlfriend, once they were alone.\n\n\"I've never felt so full,\" Meghan hissed. \"It feels like you're deep in my stomach, baby.\"\n\nGrant put his hands on her hips and began slowly rocking her up and down. The other women didn't miss a beat. Claire began kneading Meghan's breasts and then pinching and pulling her nipples while Bethany got on her belly and started licking and sucking on her clit.\n\nEvery which way Grant looked was amazing. Sweat glistened from Meghan's body, which was joined to his in the most intimate way imaginable. His eyes settled on the space where his erection disappeared into her incredible ass. His hands steadied her, not wanting her to move again quite yet. He could hear sounds of tongues and fingers at work on his lover's body.\n\nMuch of what was directly in front of him was blocked by Meghan. But Grant found an even better view. The four of them were positioned perfectly in front of the full length mirror next to his dresser. It was one of the items he kept that belonged to Katie. Never could he have imagined that the mirror his late wife loved, and dressed in front of every day, would be used in such a lascivious way.\n\nThe nearest objects in view were the bottoms of his housemates. They were both kneeling between Meghan's legs, with a rearview of their sopping pussies reflected in the mirror. Claire's longer legs made her most visible. He could see her own fingers exploring her dripping mound as she joined Bethany in orally satisfying Grant's girlfriend.\n\nWhat Grant noticed next were Meghan's legs. They were spread far apart in the air, leaving herself wide open to all that B and Claire were doing. But Meghan's feet weren't resting on the bed. The naked soles of her feet were pointed directly at the mirror. He watched her toes curl and uncurl. It seemed sweetly innocent and wantonly erotic at the same time.\n\nSomething inside him came undone. The woman he loved had the starring role in this show. She was the center of attention. And with all that gorgeous female flesh exposed to his view, it was her bare feet that became too much to handle.\n\n\"Oh my fucking God!\" he yelled. \"I'm gonna cum in...\"\n\nWIthout another word, his hands, which were cupped under Meghan's ass, hoisted her upward. Three inches of his cock were unsheathed from its ferociously tight and feverishly hot resting place. A second later, he released her weight back down again as he simultaneously thrust upward into her narrow passage. Then his muscled arms effortlessly heaved her upward a second time. And when he released her again, and she bottomed out on his shaft, the orgasmic explosions began.\n\nGrant's vision went black and his ears were ringing. It was as if someone had smacked his head with a billy club, only without the pain. For a few seconds, he could see nothing, but could only hear the moans of the women, and feel the pent up ejaculate leaving his body.\n\nHis cocked pulsed into Meghan's anal cavity. The noises that were being made by the other women were almost entirely drowned out as his ecstatic lover expressed herself.\n\n\"Pump me full of your semen, baby! Fill my ass with your cum!\"\n\nGrant couldn't respond. He felt almost senseless.\n\n\"Oh my GOD!\" Meghan yelled, \"They're licking... my... there are two mouths... on my pussy...\"\n\nShe gasped and held her breath. Impossibly, her grip on his still hard cock seemed to increase. She was squeezing every drop from him. As his vision began to clear, he watched Meghan's face in the mirror. Her features contorted with passion, as she teetered on the edge of the mountain they had climbed together.\n\n\"Cum for us, baby,\" he heard Claire whisper, before returning her mouth to the task of extracting pleasure from Meghan's quivering body.\n\nAnd she did. The sheen of perspiration on Meghan's skin combined with the shudder of climax, nearly wrenched her from his grasp. But Grant held on as waves of passion crashed over her. She slumped against his body, her desire spent. He held her tightly and felt her rapid heartbeat through his member still embedded in her rectum. He too was spent, but still hard enough to remain intimately connected.",
        "Claire and Bethany stood up from between Meghan's legs. The lewd grin on B's face made him smile back. The two women embraced. Their mouths, glistening with Meghan's juices, joined in a romantic kiss.\n\n\"How do you feel, baby?\" Grant asked gently.\n\nMeghan sighed. Her head lolled against his chest.\n\n\"I feel... incredible.\"\n\nShe craned her neck to be able to look in his eyes.\n\n\"Thank you,\" she said sincerely, \"Thank you for letting me have this experience.\"\n\n\"As a guy surrounded by three women, I should be the one thanking you.\"\n\n\"True,\" she replied with a smile. \"I never thought I'd be able to experience this again, after Lisa, I mean.\" She paused for a moment. \"Do you know what that means to me?\"\n\nHe grinned. \"Yeah, I think I do.\"\n\n\"Do you know that I love you more than anything?\"\n\n\"I do, and I love you too, baby. I love you enough to not be threatened by your bisexuality if this is something you need.\"\n\nMeghan paused before responding hesitantly, \"I... I... think it is. Not as much as I need you... but it's something I need.\"\n\n\"Then it's yours,\" he said reflectively. \"I'd do anything for you, Meghan.\"\n\n\"We have needs too,\" Bethany said, inserting herself into the conversation. \"Claire and I love each other... but occasionally, sharing a nice big cock is a lot of fun.\"\n\n\"Yes,\" Claire added, \"we love Grant, and a good man is hard to find.\"\n\n\"And a hard man is good to find,\" quipped Meghan.\n\nThey all laughed.\n\n\"So, if you don't mind,\" B continued, \"it seems like we could have a mutually beneficial relationship. That is, if you're okay with letting your boyfriend join our little circle of satisfaction... completely.\"\n\nGrant held his breath.\n\nMeghan looked at him and smiled. It was a smile that made him feel whole. Whatever happened, he wanted to spend the rest of his life with this woman. Nothing else mattered. He would give her anything.\n\nMeghan glanced back at the two women, and then a big smile broke over her face. \"I think from time to time, I'd be willing to share my man with you,\"\n\nGiddiness descended on the group as they looked at each other. Grant and Meghan sat entangled on the bed. Claire and Bethany stood before them, holding each other. The four were so close that their legs touched.\n\n\"I have lots of needs,\" admitted Bethany, \"but first, I need a shower.\"\n\n\"And I need a bigger bed,\" said Grant."
    ],
    "authorname": "LexicalFantasy",
    "tags": [
        "anal",
        "lesbian",
        "desire",
        "bdsm",
        "oral sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/group-addition"
}