{
    "title": "The Twelve Zenati Pt. 25",
    "pages": [
        "It had been late when Gideon had finally made his way to their bed, and he hadn't stirred as he usually did when Vivienne slid from his warmth to shower and change. She was eager to get on with her day. She had a project to start, and as at the beginning of any new challenge, she was keen to get going.\n\nOnce she was ready, she went into the kitchen and made coffee while defrosting a few of the pastries Gideon liked. She took the time to decorate a tray with a brightly coloured mat, plate and napkin and a small flower from the arrangement that decorated the kitchen bench. She smiled as she caught herself in the act of doing something like this for the man who had changed her world so much for the better. It was hard to believe that only six months she was resigned to the fact that she would never find a man who would love her the way Gideon did. \n\nShe loved her husband more than she would have ever thought possible and while she believed she knew the most important things about him, their courtship had been such a whirlwind amidst so much family drama that she didn't know so many of the little details about him and his life or the people most important to him outside of his brothers, not that she had any intention of cosying up to his mother but Madrina, that was a woman she could love wholeheartedly. \n\nWalking carefully with the tray she had prepared Vivienne went in to wake up her gorgeous husband and fend off his attempts to lure her back into bed with him. She grinned at that thought. Who knew that she could become as insatiable as he was that even just thinking about it tempted her to put her plans for this morning on hold and do just that?\n\nPlacing the tray quietly on his bedside table planning to back away and shake his foot to wake him, so she was firmly out of his reach, she gasped as his arms snaked around her and dragged her onto the bed as soon as she had placed the tray securely.\n\n\"Gideon!\" she cried before he muffled anything else she could say with his mouth. The kiss was long, slow and deliberate, and she melted in his arms, any thoughts of struggling against him melting from her mind.\n\n\"Good morning, wife,\" Gideon grinned when he finally let her up for air. \"And where would you be trying to sneak off to this fine morning?\"\n\n\"I am not sneaking anywhere,\" she laughed. \"I was about to wake you up and tell you that I was going to visit Madrina today. It's been too long since we visited her and I like her company.\"\n\n\"Any particular reason you thought to seek out her company today?\" he asked, narrowing his eyes. He knew his wife well enough to know everything she did had a purpose.\n\n\"I love Olivia, and the women of your family that I have met are lovely, but I miss Marcella,\" she admitted. \"I need someone I can just talk to normally, and usually I would seek out my brother or Lydia, but I didn't think you would want me taking a trip home just because I am feeling a bit lost without my closest friend here. Madrina is, well she tells it like it is much like Marcie does. She doesn't put up with anyone's bullshit and says what needs to be said no matter the topic of conversation. Besides, I'd like to get to know what my husband was like as a boy,\" she said and cupped the side of his face with one hand. \n\n\"You feel lonely here?\" he frowned, trying to get to the crux of what she had said.\n\n\"It's not that I'm lonely per se, it just that our courtship was a bit of a whirlwind and we got married without all the usual getting to know each other's stuff. I'm just catching up and trying to discover where I fit into this family of yours,\" she sighed. \n\n\"The Halloween festival is coming up. That's when we gather as a family, and you will get to meet them all. If this plan of Marcie's works out the way we think, she will be there with Noah. So you can get to know the rest of the family while having your friend beside you to pour her own brand of irreverent humour over everything,\" he chuckled.\n\n\"Do you really think he can convince her to come back?\" she asked quietly.\n\n\"I have learned not to underestimate either of my little brothers,\" he chuckled. \"When Noah sets his mind on something you can guarantee, he will succeed or die trying. Literally, in some cases, I can't even begin to count the number of times he had to be rescued as a kid. Dad constantly had to pick him up from the authorities or the hospital because he built his own hang glider or climbed a mountain he couldn't get off once he was at the top. The army had to rescue him after the hang glider stunt,\" he chuckled at the memory.\n\n\"Noah? The suit-wearing, risk-is bad, lawyer? That Noah?\" Vivienne asked sure that Gideon was teasing her.\n\n\"That Noah. He owns an adrenaline-fuelled adventure company and jumps out of perfectly good planes at least once a week before donning the suit and tie and heading into work,\" he chuckled. \"His company's safety record is the best, though, because he learned his lessons the hard way.\"\n\n\"You're serious, aren't you?\" she asked incredulously.\n\n\"Scout's honour,\" he held up three fingers.\n\n\"And what's hiding behind Genesis's uber uptight exterior?\" she asked enjoying talking about his brothers and the affection in Gideon's voice and expression when he thought of them both.\n\n\"He's an award-winning investigative journalist. Honestly, if all of his attention weren't on Olivia, he would probably be out there doing exactly what Marcella is now. He won't admit it, but she is doing things his way, and getting results. Gen loves all that cloak and dagger shit. Clandestine meetings with sources that he will never reveal and I am still not sure who gave him the heads up that the girl brought into the hospital as Serena Seabrook was, in fact, the assumed dead Olivia Gambaro,\" he told her thinking about how much it must be costing Genesis not to be out in the field solving this puzzle for himself as he cared for Olivia.\n\n\"Wow, that's so not what I expected you to say,\" Vivienne shook her head in wonder.\n\n\"Yeah well we have one watchman, but we are all a bit cloak and dagger in this family. We have one of the best information networks around, but still, Marcella has done what neither the AFP nor we could do,\" he gave her credit even though he wasn't sure he agreed with the way she went about it. \"We all feel bad about the way she left and that she didn't trust any of us with her investigations, but I promise we will make it up to her once she is back,\" Gideon assured her.\n\n\"If she comes back, I'm inclined to agree with Olivia. Why would she when we all let her down, even me who was supposed to be her friend and have her back?\" she sighed. \n\n\"We all make mistakes my love, all we can do once we realise the mistake was made is to do better next time,\" he said. \"Let's just hope she can appreciate how hard we will all try to make amends.\"\n\n\"I think Madrina might be the key to getting her to stay. They had some sort of understanding of each other,\" Vivienne admitted. \"That's another reason I wanted to go see her today.\"\n\n\"Does she know you're dropping by this morning?\" he asked.\n\n\"Yes, and I am going to be late if you don't let me up,\" Vivienne pushed at his chest.\n\n\"I can fix that,\" he said and sitting up he hauled her into his lap as he picked up his phone and made a call.\n\n\"No, I haven't lost your number. If I had I wouldn't be calling, now would I?\" Gideon grinned into the phone.\n\n\"Fine but if you want to hug those babies you expect me to be making then my wife is going to be late to meet you this morning,\" he chuckled at Vivienne's gasp and blush.\n\n\"Maybe she is, but I think I'd like to make sure of that possibility myself, and the sooner you let me get to that the sooner she will be at your house to visit you, old woman,\" he mock grumbled.\n\n\"I'll consider it, now if you will excuse me I have a wife to ravish,\" he gave a full laugh as he ended the call and gathered his blushing wife to him kissing her soundly.\n\n\"I can't believe you just did that!\" she said in horror. \"How am I supposed to go over there and face her after that.\"\n\n\"Are you kidding she is more than happy that I am trying so hard to put a baby in your belly,\" he chuckled. \"She encouraged me! Trust me she was not shocked in the least by that phone call. Besides you are not going after that,\" he indicated his phone. \"You are going after this,\" he said, and he leaned her back from his lap to press her into the mattress and kiss her again. Then he began to undress her kissing each new piece of skin he uncovered along the way. \n\n\"I'll do it,\" she batted his hands away. \"At least drink your coffee before it goes cold. \n\nGideon loved watching his wife undress, and he let her go and turned to look at the tray properly for the first time. Blueberry danish and coffee he smiled. He took a sip of his coffee to appease her then went back to watching her wiggle out of her clothes in the small amount of room he had given her because he wouldn't let her go entirely. \n\n\"When she settled back onto the bed with him, he took a long leisurely look over her body before meeting her eyes. He replaced his coffee on the tray and picked up the flower she had decorated with, appreciative of the small touches she always made to anything she did for him.\n\nVivienne watched as the hand holding the flower reached out to guide the flower across the top of her chest and down her exposed breasts. Her sensitive nipples hardened at the touch of the petals and the cool air they brought with them. The familiar tingling began between her thighs as she watched him watching her. The look of unbridled desire in his eyes could make her surrender all her defences. His eyes fixed on the path of the flower around her taut nipples. She felt loved and desired by him as the silken petals of the flower caressed her skin with a lighter touch than her husband's usually gentle hands delivered.\n\nVivienne arched, pushing her chest against the flower, revelling in the sensations that not only the flower but the look in his eyes stirred in her. She watched him at his game and returned his smile at the goosebumps he produced on her skin, and the tight fullness of her erect nipples as she arched into the touch.\n\nVivienne dropped her eyes from his to take in his large chest rising and falling under his breaths the slight tan lines where the collar of his shirt would usually lie and reached a hand to run one finger along that line differentiating the parts of him that he shared with everyone else and what belonged to her alone. Not that he never took his shirt off to swim or change at the gym, but those occurrences were rare in their marriage so far and she like believing all of the skin below that faint line belonged to her alone.\n\nGideon sucked in his breath at the touch, then reached for her hand. He placed the fingers to his lips, kissing and sucking the tips of each one as his other hand guided the flower down lower, to grace her navel, then lower still. Taking her fingers from his mouth, he placed it back on his chest and held it there a few minutes before moaning softly.\n\nVivienne rose, circling her arms around her husband's neck and inviting him into a kiss, her tongue sliding inside to mate with his and show him the way he was making her feel by matching his soft moan. Gideon guided her back to the bed, his own body covering hers. He settled between her thighs on his knees and continued the slow, delicious torment with the flower until she squirmed beneath him delightfully.\n\nGideon moved Vivienne's hands from her body, holding them lightly by the wrists and pulled them together over her head. Leaning over her, he lifted one of his own hands to swipe at the fruit blueberry mixture of the danish and drew a line with it from her navel to her neck.\n\nThe rough texture of the fruit made Vivienne's skin tingle. He guided the sticky berry mixture up to her chin then to her waiting mouth. Vivienne sucked his finger into her mouth, relishing the sweetness of the fruit as he painted any remaining blueberry onto her lips before dipping his head to kiss her. She smiled at him, but when she reached for him, she realised he still held her wrists with one hand and didn't appear to want to let her go.\n\n\"Uh, ah,\" he warned, one thick eyebrow raised, \"My wife brought me breakfast in bed, and I intend to enjoy every moment of it.\" With that reminder, he dipped his finger into berry mixture again. This time he painted her nipples circling the areola in slow titillating circles. The sticky, rough texture was making her large breasts ache for the softer feeling of his lips, but she couldn't deny how aroused his whole teasing game was making her.\n\nVivienne raised and then rolled her hips, loving that Gideon let out a low groan when she succeeded in rubbing her hips against the long shaft of his cock. As repayment, he placed his berry coated finger in her mouth, to suck again while his tongue went to her breast, lapping at the sticky berry mixture covering her nipples and sucking each delicate bud into his mouth. He licked and sucked at them until Vivienne's persistence in rolling her hips against his cock became too much to bear.\n\nIn a quick move, Gideon let go of her hands and pulled her up to her knees on the bed with him. He kissed her passionately as their hands explored each other's bodies. Palms touching backs, fingers along spines, kisses to necklines, caresses to backsides as they tried to melt together.\n\nGideon leaned back on his heels once more and pulled Vivienne up higher to straddle his thighs. Holding onto her hips, he guided her onto his hardness. He slid into her with the sensual ease of a man who knew his woman intimately. Their bodies moved as one, perfectly in sync as Vivienne moved while kneeling astride his lap, Gideon held her in place as he thrust from below into her warm pussy.\n\nVivienne made low moans as she buried her face into Gideon's neck. Kissing his neck as her hips rocked in small circles bringing her body up and down his hardness, the feeling of him buried deep making her moan each time. She clung to his neck, feeling as if she would fall if she didn't hold on tight as they moved together.\n\nShe felt his hand in her hair, coiling the long strands around his fist until it touched the nape of her neck. He pulled her body back, making her arch back onto the bed as he increased his pace from below. Vivienne's body was bent like a bow with Gideon thrusting faster, the new position helping him to hit the perfect spot.\n\nThey could sense the need to climax in each other. Vivienne was trembling in his arms, wondering how long her amazing husband could hold her like this as every thrust hit that perfect spot within her and drove her closer to the edge of insanity. Gideon gritted his teeth against the need to release striving to arrive at the point at the same time as the woman he loved. He placed the finger he had painted her body with between their bodies, against wet folds and eventually pressed it to the swollen bud of her clit. \n\nAfter what could have been minutes or hours for all he knew, Gideon felt her tighten around him. Felt her hands digging into his shoulders, her love bite on his shoulder and knew it was time. He thrust harder, holding her by cupping her rounded ass and pounding into her in long strokes. A cry tried to escape her mouth but caught in her throat as she gasped. The sound sent Gideon over the edge, his breath caught, they came together in one terrific pause of time.\n\nThey collapsed together, rolling to their sides. Vivienne reached for Gideon's hand as they lay side by side, catching their breath. She kissed his palm and placed it on her belly. It was so worth running late to see Madrina just as it was every time he made her late for something.\n\n\"I think I like breakfast in bed,\" he said a sexy grin on his face.\n\nVivienne smiled too, and Gideon leaned closer, just taking her in. Hair askew, lips swollen, a dab of blueberry on her cheek: he thought she was the most stunning woman and couldn't believe how fate had worked in his favour bring her to him. \n\n\"I think I'll order breakfast in bed every day,\" he chuckled.\n\n\"They do say that breakfast is the most important meal of the day,\" she giggled. \"Not sure how much I would enjoy that type of breakfast in bed with bacon and eggs, but I'll try anything as long as it's with you.\"\n\nGideon rolled to his side, cuddling her to him as they laughed together too wrapped up in each other to move yet. Then Gideon's phone rang, and he groaned.\n\n\"You're always making me late for work, woman! Let's hit the shower before you convince me you need round two,\" he teased, making her shake her head laughing. She knew very well round two would commence the moment she stepped into that shower with him and she smiled eagerly at the thought.\n\n*****\n\nMarcella had woken up to persistent nuzzling at her neck and ear, and a hot, hard cock pressed into her thigh. She groaned trying hard to regret what had happened the night before but not finding that regret so easily this morning. She had believed the regret would be like a punch in the gut as it always was when she scratched an itch with a one night stand or casual lover but all she felt this morning was more need and arousal being built by the man holding her in his arms as he spooned her. Forcing herself to put some distance between them before this got out of hand again, she pulled from his arms and rolled forward to her belly turning her head to look at him through the curtain of her hair. \n\n\"Morning,\" she croaked in a voice dry from sleep.\n\n\"Morning,\" he said in a husky voice and made a move towards her.\n\n\"No! You stay on your side of the bed. Last night was fun and all, but we have too much on the line today to start messing with our headspace this early in the morning,\" she warned.\n\n\"You never know, it may just clear our heads faster and make us more determined finish this deal,\" he countered his hand, reaching out the gently stroke her back.\n\n\"Noah, don't,\" she sat up swinging her legs from the bed and looking around for the robe she had worn last night. Looking over her shoulder, she asked, \"I don't suppose you brought those overnight bags from the boat, did you?\"\n\n\"Yeah, they were brought over last night while you were sleeping, the first time before dinner,\" he clarified at the look of horror on her face. \"Nobody saw or heard us do anything.\"\n\n\"Great, I'll have the first shower while you find them,\" she said and after a moment's thought, walked naked as a jaybird to the bathroom, feeling Noah's heated gaze follow her until she closed the door. \"What the hell had she done,\" she scolded herself. It was never going to be as easy as one night of fucking and then they just go back to... well to whatever fucked up friendship they had developed. God, she was so stupid sometimes it amazed her that she had survived this long without some sort of fatal mistake. She switched on the light and pulled back the shower curtain to step inside. Gosh, she hadn't dealt with a shower curtain in years, luckily it had the weighted bottom that sat within the confines of the shower plate so she wouldn't make a huge mess she would feel bad about later.\n\nTurning the shower on, she looked up into the spray of water, cool at first but rapidly growing hotter, causing steam to billow out like smoke around the shower curtain. Taking the soap she slid it against her stomach, leaving a trail of tiny bubbles, making her skin tingle and the air fill with the soft feathery scent of honeysuckle or something like that. Sliding it slowly up her body over the curve of her breasts, covering each one gradually, and then moving the soap up to her shoulders and down her arms as she thought about everything that had happened over the last week culminating in her bad decisions yesterday and last night.\n\nShe turned closing her eyes tightly and tilting her head back letting the water run through her long dark hair, gently pulling it straight, she felt the shower curtain move and a slight gust of cool air caress over her body making her nipples tighten and her skin tingle.",
        "\"Fuck,\" she cursed in a hiss.\n\n\"Yes, because if you thought once would be enough for either of us, you were very mistaken,\" Noah said in a tight voice. \"There is no going back for us now, Kitten. I'm yours just as you are mine. You have to feel that just like I do. You can't fight me and the rest of the world forever.\"\n\n\"Will you stop with the pet names and the lovey-dovey crap,\" she huffed. \"Fine, you want to fuck, let's fuck but don't make it into something it's not. This isn't some fucking movie where the hero rides in and gets the bad guys and the girl. This is real life and the bad guys as worse than bad, and the girl can save herself as well as the people she cares about!\"\n\n\"As much as I'd like to be that hero, I know you don't need me to do that. You have done more in your time investigating these people than we have with all of the resources at our disposal,\" he admitted and fell silent.\n\nShe felt his hands strong, yet gentle, against her skin. He washed her gently, taking the soap from her and turning her slowly as he washed her back while leaning in to press light almost not there, kisses to her shoulders. His hands slipped slowly from her shoulders down her back and to her hips, sliding around to caress her stomach, running his hands up to just under her breasts, but not quite touching them. She moaned softly, wishing that his hands could touch her everywhere at once despite the stern talk she had just given herself about what a mistake sleeping with Noah had been.\n\nHe leaned in, his soft partial beard tickling her skin as he brought his mouth the curve of her neck to kiss, suck and nibble at it gently. She could feel the heat radiating from his body. She could almost feel him pressed against her. Almost. Her lips parted, she gasped slightly as his tongue slid slowly against her damp skin and he began to suckle at her ear lobe softly.\n\nGiving in to the arousal he created in her without even trying, she leaned back against him, pressing her body against his. Her ass pressed against his legs as the disparity in their heights showed more than ever when they stood together like this. He hummed in pleasure at her surrender and wrapped his hands around her to gently cup and massage her breasts, softly tweaking her nipples. He groaned against her neck as his cock grew harder, and he bent his knees to slide it between her legs to rub slightly against her opening. \n\nShe spread her legs, aching for him to enter her, wanting to feel him fill her just as he had the night before. She leaned her head further back against his shoulder, turning her head to kiss him deeply as she pushed her ass back against him. Against his cock. She felt the head pressed tightly against her opening. Damn it! She wanted him more than she wanted to admit even to herself right then and she didn't care who was in control of this fuck.\n\nHe wrapped his arm around her waist, lifting her slightly, the other still gently caressing her breast, teasing her nipple. In one steady push, he was inside her, buried to the hilt. Tensing and moaning softly, she tried to push back against him again, taking him deeper. They stood with the water caressing down their bodies, joined together. Wanting each other and even worse to her mind needing each other. \n\nNoah began to pump slowly in and out of her enjoying the sight and feel of bringing them both the sweet release they needed. His hand slid slowly from her breast over her stomach, spreading her wet folds and searching out her clit. He rolled his finger over the swollen nub in the same rhythm as his cock began pumping in and out of her tight pussy. \n\nMarcella moaned louder despite herself, and her body began to shake and tingle with the approaching orgasm. It was like she had no control of her own body with this man, she had never come so easily for anyone before him, even last night when she had been the one in control of him. She tried to hold back, but he was hitting her just right, and she let go allowing the heat and body shuddering release to take her.\n\nSurprised by how quickly she had come for him, Noah froze in place holding her quivering body against his and nuzzling her neck. After a few minutes, she squirmed and turned in his arms, his cock falling from the warm depths of her body.\n\n\"You didn't come with me,\" she accused, lowering her hand to wrap around the still rock-hard cock pressed against her body.\n\n\"So, make me,\" he challenged.\n\n\"Oh, trust me you won't be able to help yourself,\" she spat back defiantly. Her hand tightened painfully around his cock, and her other hand reached up to cup his heavy balls. She watched his eyes widen, as an evil smile spread across her face, and she squeezed a little harder enjoying the moment before releasing him to tease with feather light barely-there touches after the harsher squeeze, she had subjected him to. Keeping her eyes locked to his, she went to her knees before him. She felt his cock stir at the typically submissive position, but she had never seen it that way. Even on her knees, once she had his cock in her mouth, she would be the one with all the power in their dynamic no matter what thrill he got from seeing her on her knees before him.\n\nLooking deep into his eyes from beneath her lashes, Marcella continued to lightly tease his cock with her fingertips. He drew in a deep shuddering breath, and she made her move, leaning forward and licking slowly up the underside of his cock from the base to the tip. She could taste a gentle mix of her cum with the shower water on him. Looking up at him, to ensure she has his complete attention on her mouth, she slowly parted her lips and wrapped them around his cock, sucking very softly at the spongey head.\n\nNoah was beside himself. So many of his fantasies about this woman on her knees worshipping his cock had played out in his head, and now as he looked down into her eyes, then stared at those lips and that fantastic mouth, he felt like he could explode right then. He ground his teeth and groaned loudly knowing that to come now would unman him in her eyes, so he fought the urge to tangle his fingers into her hair and buck his hips forward\n\nThe cock in her mouth throbbed and twitched, as he moved his hips slightly, a groan forming in the back of his throat. She knew the power she had to make him lose his mind in this position, and she wanted him to know just how easily she was able to play his body after she had orgasmed so quickly at his touch. Taking a breath and swallowing, she slowly bobbed her head over his cock, taking more each time determined to take him all, knowing he wouldn't last more than minutes now.\n\nNoah watched his cock sinking into her mouth, marvelling at the feel of her soft tongue, the way it teased the head and massaged at the underside of his cock as she took more and more of him. His hands move down, stroking over her hair trying to resist the urge to grip it tightly in his hands and fuck this sweet, warm fucking fantastic mouth. He let out a long shuddering groan. \n\nPulling back she gazed into his eyes for a moment, then she gently ran her fingers up his thigh, sliding her mouth off of his thick, hard cock and gently pushing it up against his stomach while licking the underside. Closing her eyes, she softly licked at first one and then the other of his balls, gently sucking them between her moist lips while she stroked his cock with a tight fist until he let out a series of expletives. Moving her mouth back to the tip of his throbbing cock, she gently massaged his balls with the very tips of her fingers, listening to his curses and ragged breathing with a wicked smile. \n\nNoah's hips moved without him realising, as he felt her lips on his cock again. The flicking of her tongue told him of the pre-cum oozing from the tip for her. His balls tighten, as his ragged breathing began to increase. One hand on her shoulder squeezed her, while the other hand wrapped into her hair and urged her to take more of him within her suctioning lips. He could feel the need for release building, his cock throbbing and twitching in her mouth. The spray of the water around them was forgotten as his attention focused entirely on her mouth and his cock.\n\nHe watched it disappear, and emerge, again and again. The woman could deep throat like no one else and just the sight of her nose pressed against his belly almost pushed him over the edge by itself. His balls tightened, he felt the sensations that preceded his climaxes, as he thrust into her mouth, wanting her to swallow it all. He roared as that first hot stream shot to the back of her throat. His cock spasmed as she pulled back sucking hard for every drop of what she was determined to claim from him.\n\nGently massaging his balls, swallowing his orgasm, Marcella swirled her tongue against the underside of the head of his cock, listening to his deep guttural groan as the last of his orgasm faded. She licked and massaged for a few moments more, letting him feel that excruciating oversensitive feeling before leaning back and standing to survey him with satisfaction. \n\nStill breathless, Noah grabbed Marcella and pulled her roughly to his heaving chest. His lips moved to hers, tasting himself in her mouth as his tongue slipped into it, and the dance of their tongues began again. The spray of the water came down on their skin as they felt the warmth of each other. His fingers slid between them, slowly moving to her nipples. He felt one against the palm of his hand, hard and pressing into it as he cupped her breast. His fingers closed around the nipple, caressing it, pinching it gently.\n\n\"No,\" she said sternly. \"We have a meeting to get to, so no more fucking around this morning,\" she pulled from his arms and turned her back to him as he slumped against the tile. She washed quickly after that and got out of the shower to grab a towel and dry off a little before wrapping it around her body.\n\nNoah groaned and watched her as she dried off and left him standing under the shower totally shattered by her. She wouldn't admit it yet, but he knew she felt the pull between them. She may want to think of what they did as fucking, but it was so much more, and he knew he had his work cut out to convince her of that. No matter what happened now, he was determined to make her trust him and eventually love him as he was sure now that he loved her.\n\n*****\n\n\"You miss it, don't you?\" Genesis asked as he stepped behind Olivia on the balcony of their home, where she looked out to the sea.\n\n\"Yes. Do you think I will ever get my boat back?\" Olivia asked, surprising him.\n\n\"You want to sail again?\" he asked.\n\n\"Not far or anything just, I don't know, maybe a day here or there,\" she shrugged. \n\n\"We can get a new boat once you are safe and the AFP have recognised your innocence,\" Genesis said. \n\n\"No, I just wondered about my boat,\" she said quietly and turned away from the view leaning into his chest. \"It's nice of you to offer, though. I expect after everything is sorted out, I will be able to afford a new boat myself. I was just wondering about my boat.\"\n\n\"Is there something on your boat that you want?\" Genesis asked not understanding why she would want a boat that brought her nothing but heartache instead of a new boat that he would buy for her.\n\n\"No. Marcella said there was very little left on board,\" she sighed. \"It's just...\" she paused not wanting to upset him with her words. \"It was mine. The only thing from my life before. I'm a dead girl in Perth; people, my friends, probably don't even remember me. To them, I'm just a ghost. That one thing, that was mine, it tells me that I did live, and it wasn't all bad, you know. That I was happy sometimes too and that ...\" she gave up and shrugged unable to voice the thoughts in her mind about her childhood home and time spent with her father on the sea when things had seemed normal, and she had felt loved rather than a burden to him and her mother.\n\n\"It's okay. I get it. You are still trying to figure out who you are now that everything has changed. You don't have to do it alone, though. You have my family and me now. Let's not forget you also have the most frustratingly determined sister on the planet doing everything she can to help you even when you told her not to,\" Genesis rubbed her back to soothe her troubled thoughts.\n\n\"I guess I am struggling to remember the happy times amid everything else that's happening.\" The truth was that the conversation with Vivienne last night had played in her head. Marcella had created her childhood fairy tales and given them to her to escape into when things got too bad at home. How could someone going through what she went through still be able to make up stories to keep her sisters calm and protect them? Why did Marcella continually put herself in danger, just like she was now, for her? Why? When she had been nothing but a bitch to Marcella, why was she here protecting her even now? Would she want to help others with her stories like Vivienne suggested? Would she even care about protecting others? She knew the answer to that, and it hurt her to admit it, but she knew Marcella had been the one person who had always loved her unconditionally.\n\nGenesis had stayed silent as Olivia sifted through her mind for the words, happy that she was trying to explain her sombre mood and strange questions. While initially surprised by her words, he could understand how she could get bogged down in depression, with her life threatened continuously from several sources. Once it was over, however, he would make sure her life was full to overflowing with sunshine and happy times. He hoped that going home for the gathering would be that start of that time for her.\n\n\"We have to hang on for a little while longer just until we are sure the people responsible for hurting you are dealt with,\" Genesis said knowing it was far from what he wanted to say or what she wanted to hear. \"Once its all over we can request the return on your boat and maybe renovate it because it wasn't in very good condition when Marcella found it.\"\n\n\"She did find it, didn't she,\" Olivia gave a sad smile. She had never done anything to earn her sisters love and devotion, and yet, here she was again trying to save her. With every passing day, she realised just how horribly she had treated Marcella and hadn't even tried to understand why she did the things she did or why her father had watched her like a hawk. Now she knew, and she couldn't keep pretending that she didn't care or hold the ages-old grudge against her for always making their father so mad at them all the time.\n\n\"Speaking of which if we are going to help her find the next piece of the puzzle we need to get going,\" Genesis said not liking the sad look in Olivia's eyes. She often seemed low, but this was different somehow since Marcella had left them, more introspective perhaps.\n\n\"Will Gideon and Viv be coming with us?\" she asked, unsure if she wanted that extra buffer of Vivienne between herself and her sister today.\n\n\"No, this is just for show so that if anyone is watching they will see that Marcella met with you and gathered the promissory note, she required for the meeting,\" Genesis explained not for the first time. \"Dad will be there and our security as usual. You won't be in any danger.\"\n\n\"But you think Marcella is?\" she asked. \"And Noah?\"\n\n\"They will keep each other safe, just like you and I keep each other safe. You have nothing to worry about,\" Genesis reassured her.\n\nOlivia opened her mouth to argue that point, what the hell did she do to keep him safe, but shut it again. She still wasn't confident enough to outright argue with Genesis. She'd been wrong about so many things in her life, and when she looked back, she could see the truth about her family that she had purposefully ignored or twisted into something more palatable. Maybe it was time to tell Marcella that while she still could before her sister left for good just like Jessa had. She turned back inside the apartment and gathered her bag to go and taking a deep breath picked up a notebook she had been doodling in and flicked through a few pages. Then she tucked it inside the bag as well.\n\nGenesis watched Olivia carefully. Since leaving the clinic, she had been improving every day in her confidence and independence, but he wasn't sure what to make of the conversation they just had. He knew that while her body would heal and leave scars, the mental scars she had incurred over a lifetime of mental abuse and by first her father then Kevin and Remington would take far longer to heal and alter her personality to some degree. In some ways, he looked forward to seeing the woman she would become, but he worried that she would change how she viewed him and his love for her.\n\n\"Are you nervous?\" Genesis asked into the silence of his car. He tried to rest a comforting hand on her thigh as she began to fidget during the drive, but it hadn't affected her in the way he wanted. \n\n\"I'm not sure what to say to her,\" Olivia admitted quietly. \"She's risking a lot to help me prove my story. How is she so sure my story is the right one when I have been so messed up? What if I did do the things, they are accusing me of, and I just don't remember? What if she finds out that I deserve what happened to me?\"\n\n\"Nobody deserves what happened to you, no matter what they did in the past. Have you remembered something that's making you question yourself like this?\" Genesis asked carefully.\n\n\"No, but what if Marcie gets hurt or worse trying to find this place and I only just imagined it. I mean no one has said a word about it in any of the interviews or interrogations. Even the people I mentioned seem to be figments of my imagination,\" she said with the self-doubt that had been creeping up on her since last night when Zanto had shown her pictures of Madonna that she couldn't recognise with certainty. \n\n\"I don't believe you dreamed up that place or even one part of what Remington did to you. It's not your fault that your memories are clouded or that the Suebi are still protecting their own people. I believe you, my family believes you and more importantly this morning, Marcella believes you and will not stop until she has forced the AFP to believe you. She's been relentless in her crusade to fight for you, which is why she and I have argued so often. I didn't understand her motivations, and I am guessing she never tried to understand mine either. It will be better now, I promise. Everything is going to work out the way it should.\"\n\nHe pulled into a valet parking at the entrance to the Star City Casino and hurried inside. After greeting the concierge, they made their way to the poolside restaurant where Marcella and Noah waited with Armando for them.\n\n\"I wasn't sure you would make it when Dad told me you were coming,\" Noah said, getting up to greet his brother and kiss Olivia's cheek. \n\nMarcella nodded a greeting toward them but didn't get up. The table was full of food from the buffet ensuring that none of them would have to get up to get anything, so she launched into why they were there and exchanged the papers and discussed how they would get the information from their meeting tonight back to the family.\n\nOlivia picked at the food and tried to join in the conversation when Armando and Marcella each wanted to draw her into their plans and ask if she was upset about giving up the mansion on the coastline. When it seemed that they were rehashing the same information, Olivia spoke to Marcella quietly across the table.\n\n\"Are you staying here?\" Olivia asked Marcella looking around.\n\n\"We were, but we will have to move after our meeting tonight to make sure we are safe until the raid on Hermione's,\" she answered. \"We won't be able to come back to the apartment block either until this is over.\"\n\n\"You're coming back?\" Olivia asked in surprise.\n\n\"At least until the AFP get their heads out of their asses and exonerate you,\" Marcella smiled and reached out to take Olivia's hand. \"I won't leave until I am sure you have everything you need and want. If that happens to include clown sitting beside you, then so be it, but I want so much more for you as well.\"",
        "\"Shit am I wearing that red nose again?\" Genesis joked rather than bristling like he usually would at Marcella's caustic remarks. She raised an eyebrow at him, and he smirked, making her narrow her eyes at him before turning back to Olivia.\n\n\"Do you have like a suite or is it like a normal hotel room?\" Olivia asked.\n\n\"I had a standard hotel room, but then this guy showed up, and you know he wasn't going to slum it with the plebs. Long story short we moved to a better suite because he nags worse than Mama used to and I couldn't listen to it anymore,\" Marcella explained dramatically finally being rewarded with a soft smile from Olivia. \n\n\"Must have been bad then,\" she gave a glance to Noah who seemed unconcerned about the accusation.\n\n\"Actually,\" Noah said casually. \"The concierge gave us an upgrade when he found out we were newly engaged and Marcella might have insisted that we didn't have separate rooms after that.\"\n\n\"You got what?\" Genesis immediately looked at Marcella's hand. \"Congratulations man! I didn't see that coming, at all.\"\n\n\"She didn't want a black diamond so I will incorporate it into the wedding band somehow, that little shop up near Zio's Trattoria you know the one,\" he clicked his fingers trying to remember the name. \"Boyce,\" he proclaimed suddenly. \"they had some very nice black diamonds if you are planning on sealing the deal with the lovely Olivia before Halloween.\"\n\n\"We thought it would be better to wait until all of this crap with the Suebi and AFP is sorted out,\" Genesis said but took Olivia's hand in his. \"I want to do it right and give her a story to tell our children about how romantic their Papa was when he proposed.\"\n\n\"Good for you, Olivia. Make him work for it, instead of just letting him command you to wear his ring like this one tried to do,\" Marcella rolled her eyes, indicating Noah. \n\n\"I don't think I want to go through that again. I'd be looking over my shoulder every step up the aisle,\" Olivia said. \"I'm happy with things the way they are. We don't have to do that do we?\" she asked Genesis unusually brave with her question in the moment.\n\n\"Not right away but eventually,\" Genesis said, gently squeezing her hand. \"But we can do it our way, no aisles or churches or anything like that. Just you, me and the captain of a ship out on the sea somewhere if you want,\" he offered remembering their conversation earlier that morning.\n\n\"The wedding couldn't be further from my mind,\" Marcella added, seeing the look of fear in Olivia's eyes. \"Engagement isn't like getting married. It's no big deal, and I get the feeling if you want to go to the Zenati family gathering with everyone else you might have to be wearing a ring,\" Marcella said. \"If you change your mind, you just give the ring back, but the gathering will be the safest place for you when everyone goes out to their property,\" She explained pragmatically.\" Besides, we don't want another whiney Zenati man complaining that you stopped him from going and having fun playing with the other boys.\"\n\n\"How do you know that?\" Olivia asked. \n\n\"Because I made a dumb deal with this one and going to the Halloween festival and gathering is my part of the deal after we find and destroy Hermione's. Speaking of which can you drive a bulldozer or should we get a crane with one of those swinging balls to demolish it?\" Marcella enquired with a perfectly straight face. \n\n\"I could probably find someone who would blow it up for you,\" Noah offered.\n\n\"We need to keep it whole until the AFP go through it for all the proof they need, but after that, we could burn it down and roast marshmallows over the coals if you like,\" Genesis chuckled.\n\n\"Would it be hard to learn how to drive a bulldozer or the wrecking ball thing?\" Olivia asked Marcella, shocking her with the question. No, it wasn't just the question Marcella acknowledged. There was something different about Olivia and the amount of attention she was giving her today.\n\n\"Olivia, what's wrong?\" Marcella asked quietly, then leaned forward and looked her sister in the eyes. \"Something is wrong, tell me,\" she urged. \"Has he done something?\" she turned to face Genesis with a scowl. \"What did you do to her this time?\"\n\nOlivia felt Genesis stiffen beside her and take a breath as if to calm himself. She had seen him do it many times when she frustrated him as he tried to get her to stop hiding from him and everyone else who loved her. Now it was her turn to help Marcella; she just had to be brave enough to take the first step.\n\n\"Marcie, do you think we could talk. Maybe if you showed me the suite, we could talk properly,\" Marcella's eyes widened as she turned from scowling at Genesis back to her sister.\n\n\"Okay,\" Marcella said, suddenly unsure of herself. \"And them?\" she tilted her head to the side to indicate Armando, Genesis and Noah.\n\n\"Do you think we've been seen enough?\" she asked Genesis who was also staring at her as if shocked by her request.\n\n\"Probably but you haven't eaten anything yet,\" he said, looking at the food that remained on the table after the rest of them had taken most of it as they spoke. \n\n\"I'm not that hungry,\" she said quietly and lowered her eyes. \"I just want to talk to Marcella, by ourselves if possible. I will eat lunch after. I can't eat right now.\"\n\n\"What about if we get some of this sent to the room, would that be okay?\" Armando offered intervening in what could become a stand-off and just as curious as Marcella was about the changes he could see in Olivia.\n\n\"Sure, that works,\" Marcella said, getting to her feet before anyone else could voice an opinion. \"Let's go, it's probably not as big or as posh as you think it's going to be,\" he gave a soft laugh and gathered Olivia to her by hooking their elbows leaving the men to trail behind them.\n\nMarcella didn't try to make conversation on their walk, and Olivia seemed to be deep in her own thoughts following her sisters lead almost automatically. Once inside the room Marcella lead her to a small balcony where a table and two chairs sat.\n\n\"If we talk quietly no one should be able to hear us here including them,\" she indicated over her shoulder to where Noah and Genesis stood watching them. \"Do you want a drink or anything before I shut the door on them?\" It was a glass sliding door that they would be able to see the brothers and vice versa without being overheard. Olivia shook her head and took a seat. Marcella closed the door and pulled the other chair closer before taking her seat with her sister.\n\n\"I don't know where to start,\" Olivia said.\n\n\"At the beginning is always a good place,\" Marcella encouraged.\n\n\"Okay well, once upon a time, when I was a very little girl, I believed you were just like Ella, the pretend Princess, from the stories you used to tell us when we were hiding from Papa, and Mama was crying. You were brave and never cried like Jessa and me. Then you started getting hurt, and you left us alone, and Jessa got sent away that time, and it was just me, and I was quiet as a mouse and had to hide by myself,\" Olivia began. \n\n\"I'm so sorry,\" Marcella said quietly.\n\n\"Then Jessa came back, and she was different, she was still meek and mild, but it was if the light had gone out of her eyes and she flinched if you touched her and she wasn't expecting it. I couldn't just hug her when I was scared anymore, and I didn't understand. Then when you got sent away the first time, Jessa wouldn't let me hide. She said I needed to grow up and start learning how to be a good woman,\" Olivia sighed. \"I hated you for leaving me alone with her and Mama, who couldn't or wouldn't hide me from Papa's temper.\"\n\n\"I didn't choose to go away. I wouldn't have left you if I could help it,\" Marcella whispered. \"I'm sorry.\"\n\n\"Then you got sent back early, and Papa got in trouble, and he left us alone for a while, but he always watched you and Zio came all the time, and he watched you too. Jessa said it was because you were not a good woman and that you had to learn to be one, and that was why they were always hurting you. I didn't understand, and I tried to ask Mama, but she told me just to stay quiet, and out of the way, so I didn't make Papa mad at me,\" she continued seemingly unable to stop now that she had started. \"He didn't get angry at me. He paid attention to me and took me sailing and treated me like a princess because I had been good and stayed quiet and out of the way. Just like Mama said. But you just wouldn't be quiet like the rest of us, and he got so angry at you all the time, and I let Jessa convince me that you deserved it even though she cringed at all your hurts and bruises and cried a lot when you got hurt real bad just before you got sent away again. \n\nThen when you came back, you didn't come home to stay, and you said you would still look after me. I didn't need looking after then because Papa loved me and taught me to sail and did things with me. Papa got in a lot of trouble because of you, but he still bought me my boat because I was a good girl and didn't make a fuss or get in anyone's way. It didn't seem to matter what I did at school and with my friends as long as I came come before him and didn't disturb him in any way. I was super angry when we had to see the councillors because of you. I finally had more freedom to see my friends, and you took it away by forcing us to see doctors and getting Papa in trouble again. \n\nThen you helped Jessa move away until and it was just me again, so you tried to get me to go away. You never told us anything about what had happened to you. I didn't understand, maybe things would have been different if I knew, but I didn't know. I told the councillor everything, how you were a bad woman and made Papa mad. How you left me all the time because you made Papa and Zio hurt you. I hated you then, and I took the money you gave me and took off with Kevin because Papa wouldn't let me date, or even go out with my friends anymore because of you which is why I had to sneak around. If you hadn't been so bad, he would have trusted me, or so I thought.\"\n\n\"I couldn't tell you. Apollo was the only one who knew and Jessa's husband, who was part of the investigating team. He's a lot older than her remember and did some sort of deal with Papa for her hand in marriage. It was all covered up in the end, and I knew I had to get you away before he did the same thing to you,\" Marcella said with a broken voice. She was barely holding back the tears that stung behind her eyes.\n\n\"I know that now. The truth always comes out, and I know exactly what Papa and Zio did to you and what you went through with the Battaglia who sent you back as soon as they realised you shouldn't have been there. I know you weren't sent home in disgrace like Papa said. But I am not sure you know the truth of it, and I wanted to give you the final piece of the puzzle if you don't already have it,\" Olivia said. \"Did you know that you, me and Jessa had huge trust funds left to us by Nonna?\"\n\n\"What?\" Marcella frowned. \"How do you know that? There was no inheritance when she died. Papa didn't get anything from her.\"\n\n\"It's true you can look it up, Izzy showed me the documents, her will and some other things,\" Olivia said.\n\n\"Who is Izzy?\" Marcella rubbed her head, confused now.\n\n\"Isidore Gambaro came to see me. Oscar said he spoke to you on the phone, and they would return in a week or two to see you in person to apologise for the monumental fuck up that was our lives, yours in particular. They are his words, not mine,\" she clarified. \"It was always about the money, Jessa was meant to stay at home and look after the house once Mama got too old, Papa made sure the Battaglia broke her in combination with his abuse once she got back and he sent you away. You though wouldn't be broken and when you came home the second time but lived with Zia and Jessa went to get married, he started sending me out on the boat alone, even though Kevin came with me most of the time. I was supposed to die at sea, and you would have been another sad case of teen suicide because no matter how hard he and Zio tried they couldn't break you,\" Olivia took a deep breath and sat back in her chair having let everything that was rolling around in her brain come together into a semi-coherent story. \n\n\"You got all of that from Isidore?\" Marcella asked, not fighting her tears anymore, she let them fall freely down her cheeks. Having her life laid out like that was just too much to bear even for her toughened heart.\n\n\"No, just the last part about the money and a little of the information about Jessa marriage,\" Olivia said. \"There rest has come in dribs and drabs. You know that Noah and his family only looked into our past because you ran away from the hospital. They didn't know how scared you would be of being hurt and weak, especially when the Battaglia came to collect Apollo.\"\n\n\"But you knew, and you tried to tell them?\" Marcella asked.\n\n\"I knew they couldn't make you come back. I keep telling them that not even Noah can make you come back, but I was thinking maybe Vivienne and I can because we need you. The pretend Princess always helps everyone else instead of herself, but I think you can do both, want to hear about it?\" Olivia asked, her tone lightening.\n\n\"Who are you and what have you done with my sister who hasn't said boo to a goose for months now?\" Marcella gave a choked laughed and ended up coughing, making Noah realise she was crying and head towards the door. She saw him coming and held up her hand in a stop motion pleased when he halted in his tracks. Then she gave him a thumbs-up sign to let him know everything was okay. He reluctantly went back to the couch where Genesis and Armando watched them as well. \"Bloody men,\" she cursed.\n\n\"That's why I have my back to them. Genesis wouldn't have backed off, not because he doesn't respect me but because he loves me and wants to look after me and I need that in my life again. Nothing good happened when the Pretend Princess wasn't there to watch over me and keep me safe, which is why I hated her and you so much in the end. I can see how cruel that was to you, it wasn't your fault, but you didn't know that. I always felt guilty about how cruel I was, but now, well I feel so bad it's taken me three months even to try to talk to you about it, instead of hiding everything like we always have,\" Olivia admitted. \"But you see, Genesis has shown me that the past is just that, there is nothing we can do about what has happened except clean up the mess as best we can and move on. I love him, Marcella. He has been working so hard to give me back me, but I don't like that spoilt girl who didn't know what was really going on around her so I have to decide who I want to be and well, I think I know, but I need your help.\"\n\n\"Seriously? You... want my help? Shit, what am I doing? Yes! What do you need help with?\" Marcella asked wanting to make amends for abandoning her sister and almost getting her killed by sending her away. The fact that her father might have killed her if she had stayed was too much for her even to think about right now.\"\n\n\"I have something for you. I was going to make it a belated birthday present, but then you left again,\" Olivia sighed. \"I'm not sure if you will come back given that none of us has given you any reason to trust us,\" Olivia said. \"So, I wanted to give it to you today. It's not much but...\" she fished her notebook of doodles from her bag and passed it to Marcella. \n\nMarcella began to cry again as she thumbed through the book, slowly seeing pencil drawings of all the fairy tale characters she had created when they were kids. I had a proper sketchbook on my boat, and I drew every night instead of reading because you know, no TV or anything. It's obviously not there anymore if you and Remington didn't find it, so I started a new one. Even when I hated you, I loved the Pretend Princess and wished on so many stars that she would come and save me again. Now here you are doing just that. Vivienne thinks that if I wrote down your stories, I could make them into children's books and therapists and parents might be able to use them for other children, and I thought maybe if you helped me, I could try. I'm not a doctor or lawyer like either of you, but I would like to do something other than bartending or waitressing once all of this crap is over,\" Olivia sighed. \"If its ever over.\"\n\n\"It will be over I am making sure of that. I somehow doubt Genesis would let you be a bartender or waitress,\" Marcella waved away her words.\n\n\"He said I could if that was what I wanted to do, but he also said he would help me run a bar or restaurant or combination of both if I wanted to do that instead,\" Olivia said. \"He's not the overbearing, control freak you think he is, except maybe in the bedroom,\" she grinned. \"I love him, Marcie. Please be happy for me. I don't need a ring or vows I just want him and a new life here with this family because ours sucked.\"\n\n\"Okay, I just need to know your happy,\" she said. \"As for the books, we can do that online, so even if I don't come back, I can still help you make them great.\"\n\n\"I told them you wouldn't come back,\" Olivia sighed. \"No one believes me, though, they all think Noah loves you enough to get you to stay.\"\n\n\"He doesn't love me,\" Marcella scoffed brushing fresh tears from her cheeks. \"He's just...\"\n\n\"Okay, I can't watch you cry anymore. I'm calling a time out!\" Noah picked Marcella up and walked with her to the bathroom despite her protests. Closing the door and handing her tissues, he asked, \"What the hell is she saying to make you cry so much. You don't cry. You are Marcella friggin' Gambaro, professional bitch and take no prisoners fighter,\" he pronounced. \"Talk to me. I can't stand seeing you so upset.\"\n\n\"Noah,\" a small voice accompanied a tap on the door. \"Armando thinks we should go so you can get organised for tonight, but I just need to say one more thing to Marcie, please?\" Olivia asked.\n\nNoah lifted Marcella's chin as if asking whether she wanted to hear anything Olivia had to say. She nodded silently and looked towards the door. Noah left her sitting on the bench and opened the door to let Olivia in before shutting it behind her and leaning against it, unwilling to leave the two women alone again.\n\n\"Marcie, don't leave again, stay and work on this with me,\" she pressed the book into Marcella's hands. \"It won't work if we can only do it online. I need you to stay, and even though she would hate me saying it, Vivienne needs you to stay. She's like a fish out of water without you here and is talking about a trip home to see her brother already. Be Ella, be brave and stay to help the people who need to be saved.\" She squeezed Marcella's hand, making her final plea and left the bathroom.\n\nNoah was stunned by what she said. She was pleading with her to stay, giving her a reason to stay. Did she think that Marcella would run despite everything he was doing to keep her here? Of course, she didn't know what he and Marcella had been doing this week together but to be so sure she would run without reason aside of him to stay here, and then giving her that reason. Hope warmed his chest. He wasn't fighting this battle on his own, and he felt lighter for that. Still stunned after Olivia had pushed her way past him to get to Genesis, he snapped out of it as Marcella pushed past him to follow her.\n\nRather than approach her sister, Marcella approached a wary looking Genesis who stood his ground as she stepped right up to him. \n\n\"Thank you, Gen. You gave her the truth I never could so, thank you,\" she said in a voice thick with emotion. Then she turned to Olivia. \"I can't promise anything but thank you, for wanting to include me, but the stories are yours. I made them for you. Look after this for me, I'll pick it up when we hire that crane,\" she said with a sad smile and pressed the book back into Olivia's hands. \"It's still my book, you're only looking after it for me, okay?\"",
        "\"Okay,\" Olivia said. \"Good luck tonight. Don't get dead,\" she gave a small smile as the men all swung to look at her in shock at her words.\n\n\"I'm Ella, remember,\" Marcella said softly and turned to go back to the bathroom rather than watch her sister leave. Her emotions were too close to the surface, and she felt raw and exposed now.\n\n*****\n\nVivienne smiled as she pulled up in front of the teapot tree and looked at the brightly coloured house. This woman was eccentric in so many ways, but when she took you into her home, she made you feel like a close and much-loved family member. She got out of the car and pocketed her keys. She felt better just looking at the house. A window on the top floor banged open before she even made it to the door to knock. \n\n\"So that cheeky boy has finally let you out of the marriage bed, has he?\" she cackled. \"Come in, come in and let me see what he has wrought then.\"\n\nVienne shook her head and let herself in making her way to the kitchen once inside. This was the heart of the home, and each time she had been here, Madrina had insisted on tea for her guests whether they liked it or not. Madrina was already there unsurprisingly and was filling the teapot as Vivienne took a seat at the well-worn table which had been set with cups and tea cakes.\n\n\"Here we are then,\" Madrina brought the teapot with her to the table and sat taking Vivienne's hand in hers. \"Now tell me how my cheeky boy is treating you?\"\n\n\"Gideon is wonderful to me in every possible way,\" Vivienne said with a wide smile. \"But I came to see you and find out how you are. It seems so long since I came to visit you.\"\n\n\"Ah,\" Madrina nodded. \"So, we are to be friends then?\"\n\n\"I thought we were friends already?\" Vivienne frowned.\n\n\"And, so we are but perhaps also something more. Perhaps family? I am a mother of sorts to your cheeky husband and his brothers. They found peace here when their own mother used them as pawns in a life-long game against her husband,\" she said. \n\n\"I'd like to know more about that,\" Vivienne said. \"I may have mended fences with my mother in law, but I still don't understand why she would use her children like that. Gideon explained the curse to me and that until he experienced it himself, he hadn't been sure it wasn't if his mother was right and it was just family legend.\"\n\n\"It is true that it is a family legend and only affects the men of the Zenati line. If the daughters marry into another family line, their sons remain unaffected. It is said that each man will suffer through trials to prove his love and have it returned. Gideon's trials were few while Genesis's trials have been hard-fought and won for he has the love of Olivia, and now they face their trials together. It is Noah that concerns you, as well as the fate of your one true friend in our city, Marcella,\" Madrina said in explanation as well as showing that she knew why Vivienne had come with her questions.\n\n\"Yes. Marcella,\" Vivienne nodded. \"I have to admit I miss her so much I feel a little lost. I want to be able to help her, but every time I try to do something to help it only hurts and hinders so I have come to find out... I don't know exactly what I have come to find out only that for once I went with my gut feeling rather than my logic and that brought me here, I am looking for answers and ways to keep Marcella in not only my life but Noah and his brother's lives. Do you think Noah will leave with her if she chooses to leave once she has done what she came to do?\"\n\n\"While magics of old can bring people in proximity to each other, each person can choose their fate. It will be a difficult path for Noah for many great decisions loom in his future with or without his heart's needs met, and only time will show him the way forward. He will not leave his brothers, for the ties that bind him here are stronger than even he knows,\" Madrina patted her hand. \"Marcella has a more difficult path to follow, and one only she can navigate. She will be caught between the head and the heart as others have been before her and will be after her.\"\n\n\"They might not end up together?\" Vivienne cried out. She'd come here for reassurance that everything would turn out the way it was supposed. She thought that the curse would outweigh Marcella's damaged heart and psyche but now,\" she sighed not wanting to think about what it would do not only to Noah if she left for good but to his whole family especially her husband and his huge heart.\n\n\"Each person has the right to choose their own fate; you cannot choose it for them. Your needs shouldn't matter when assisting your friends to find their way,\" Madrina advised. \"Even as we speak, Olivia has appealed to her sisters' sense of protectiveness and asked her to stay and help her.\"\n\n\"Olivia was meeting Marcella this morning?\" Vivienne asked, stunned by that news.\n\n\"It is a necessary charade for the ones that watch them. They are quite safe this morning I assure you,\" Madrina said. Picking up Vivienne's now empty cup and peering into the depths. \"That is not something for you to worry about right now. You will be busy enough in the coming months with a difficult pregnancy. Your son will not make this time easy for you,\" Madrina cackled. \"Zenati men are never easy, even as babes and little boys.\"\n\n\"I'm not, I mean I don't think...,\" Vivienne stared at Madrina and then down at her lap.\n\n\"You are, and you should know if you look deep within yourself,\" Madrina nodded knowingly.\n\n\"I'll make an appointment with my doctor this afternoon,\" Vivienne said. She had thought she was too old to be falling pregnant this easily. She had thought she might need some assistance from a fertility clinic when they were genuinely ready once all the drama had settled down. A flutter of excitement travelled through her, and her hands rested on her small belly. \"You really think I could be?\" she asked in awe. \n\n\"I do, so let's talk about dates and how you will tell that cheeky boy of mine that he will be a father next year,\" Madrina gave another wicked chuckle and poured more tea for them both. It would do well for Vivienne to have something else to occupy her mind rather than the fate of her friend who may be persuaded to stay to care for her friend if not her sister.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "dominant",
        "family",
        "oral sex",
        "shower",
        "submissive",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-25"
}