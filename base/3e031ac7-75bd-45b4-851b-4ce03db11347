{
    "title": "The Pirate King Ch. 05",
    "pages": [
        "This is part of an ongoing series - please check out the previous four chapters before diving into this one! We'll still be here when you get back:)\n\nAlright, so this is when I admit to being a terrible dirty liar because this is another chapter without sex. Nakamook, you say, you're writing on literotica. Don't be such a dick. I know, I know, but the chapter was getting  hideously  long so I decided it would be better to split it into two, and drop this part early. You'll still get the rest of the chapter, now chapter 6, at the end of this week. Think of this as a super special bonus - two chapters instead of one! \n\nIf you're reading for the story, you're gonna want to read this one. If you're reading for the sex scenes, we'll see you in a couple of days :)\n\nFeel free to write in to tell me how I could have done this better - I don't really know how to post this format of erotic story well on this type of website. Thanks again for your patience, and enjoy!\n\n*****\n\nMorning watch bells woke me from a dream of warm arms and icy commands. I groaned, stretching as best I could while not knocking myself from the ropes. I looked out over the deck - it was deserted in the early morning mist. The only other living being would be the watchman, up in the crows nest. I squinted up towards the top of the mast, trying to see who it was. \n\nThe lad must have seen my movement, because a hand came up and waved. I waved back, although I couldn't tell who I was waving at. Then I settled myself in and enjoyed the song of the sunrise and peace of nothingness. \n\nEventually, it dawned on me that everyone else must be at breakfast, which meant that I should be too. I sighed and pulled myself up, wishing I could stay up here forever. I looked down to the deck. \n\nIt would take a long time and a stupid amount of effort to climb down like I had been doing, the land boy's way.\n\nOf course, there was another way. A better way. I'd been avoiding it, because I didn't want these men to know me for what I was, but at this point it seemed foolish to hide my skills. Besides, my way was more fun, and I wanted the rush. Needed to clear my head, flush my body. \n\nI let go of the ropes. \n\nI was down at the deck in moments, letting my body weight do most of the work. It isn't hard to get down from a height, really. You just have to fall. The tricky bit is not letting yourself fall too fast, controlling your momentum with checks and yanks to ropes, until you can force the unyielding ground to accept your body once more, trick it into holding you by rolling across its surface like a stone skipping across still water. \n\nI lost my balance at the very end, tumbling across the deck and coming to a stop on my ass somewhere near the barrel pit. But despite it, I couldn't stop smiling; for the first time in a long time, I had endorphins on my side for no other reason than joy. \n\nI heard a shout go up above me and looked up to the concerned face of the watchman. I laughed and waved, signalling that everything was alright. If I was lucky, he hadn't seen anything but the end of my descent. Perhaps he would think I had fallen. I stood and dusted myself off, moving towards the door to head below decks. \n\nJust as I reached it, it swung open and I was face to face with the Captain. \n\nThis, this was what falling truly was. My stomach dropped out from beneath me, my limbs felt as if they were made of water. I put a hand on the door frame to steady myself, trying to keep my knees from buckling. I had hoped that distance might make this easier, that not sleeping in his chambers would lend me some sort of clarity when I saw him again, but the same war waged within me. I needed him. I couldn't let him hurt me again. \n\nI couldn't let myself hurt him. \n\nIf my presence had a similar effect on him, he didn't show it. His dark eyes took me in, noting the marks the press of the ropes had left on my body, the way my shirt had fallen from my shoulder. He paused there for a moment, and I wanted him to have a reaction, to show me what it meant to see my bare skin. Instead, his eyes continued unchanged. I pulled my shirt back onto my body only when he no longer was watching. \n\n\"Finn told me you'd slept in the riggings.\"\n\n\"Yes.\" I didn't really know what else to say, but somehow found myself feeling guilt. This man hurt me, I reminded myself angrily. Intentions that were good or no, it had been hurtful and my anger was righteous. I had protected myself as I had needed to; I had nothing to feel guilty about. I remembered the first night I almost hadn't come back, how upset the Captain had been. \"I'm sorry,\" I heard myself start, and was surprised to find that I was.\n\nBut the Captain waved away my apology. \"For what? For not coming back to my room to be tied up? Like a dog.\" I thought there was something on his face at that, and I winced to hear my words used against him from his own mouth. \n\n\"I just needed some space,\" I said quietly. \n\n\"I understand.\" \n\nWe stood there in silence. I found my eyes wandering his face, his body, looking for any sign that he might still care for me. Natch had said that he wanted me, wanted me so badly he was willing to put his crew in danger; I couldn't bring myself to believe it. Maybe he wanted my body, maybe my hands on his, my conveniently transient soul. \n\nAnd yet, if he had only wanted me because I was going to leave, why not take me now? Why shut down so completely when he knew that I was going to be gone?\n\nWhen he knew he would put me on land. \n\nAnd that, I hardened again, my knees growing new strength beneath me. I straightened up and crossed my arms. \n\nHis eyes dropped to my arms. \"Oh,\" he said. He sounded surprised, his voice knocked from its previously sterile state. \"You're injured.\"\n\nI looked down at the red line Ichor had put on me yesterday. \"It's nothing,\" I said truthfully. When I looked back up, I was surprised to see him reaching out to me, his hand hovering in the space between us, and I was surprised that my body didn't pull away. \n\nIt didn't need to. He let his hand drop before it came anywhere near my skin. My heart sank, and I reprimanded it sternly. He wasn't to touch me. He wasn't to -\n\n\"A decision has been made, about you. I just wanted you to hear it from me first.\" He wasn't looking at me, instead casting unfocused eyes off to the side. \"You're to be dropped off in two days time.\"\n\n\"You've chosen the island then.\" I tried to keep my accusation from my throat.\n\n\"Aye.\" He sighed. \"It's nice, got a village and.\" He stopped and brought his hands together before him. \n\n\"You don't want me with you.\" There the accusation was; not even in tone, it manifested in words and leapt unbidden from my tongue. \n\nBut he was quick to respond, his eyes flashing to my face. \"You're the one who pushed away. Is this not what you wanted? This is better for you, safer, to be far from me. I warned you, I told you this would happen, and you still -\"\n\nWe both stopped as the first of the men filtered past us. I stared at the man before me, dark curls falling into his face as he watched the ground between our feet. Did he think he was protecting me? In fairness, I had thought I was protecting myself to stay away from him, but somehow this felt worse. Somehow, this made me feel so guilty. I wanted to reach out and smooth the lines that passed between his eyes, press back the hair that fell between us until we were so close there was nothing, nothing but our bodies. \n\nI didn't move.\n\nIn a break between men passing, he spoke again. \"I can't.\" He sounded so broken that I almost cried. How could one man break so beautifully? How could two words make me feel so terribly? It wasn't my fault, I tried to tell myself, I hadn't caused this, but I just wasn't sure anymore. \n\n\"I know,\" I told him, as softly as I knew how. \"I'm sorry.\" \n\n\"Aye.\" He turned to go. \"Me too.\"\n\nI watched him leave, pushing against the flow of sailors coming up from breakfast. You can't blame him, Natch had said, and as my eyes followed his shoulders in the sea of nobodies I found that I didn't. My soul broke, then, the sea flooding from it to try and follow him, to rush forth and take him back but I knew it was too late. \n\nThe Captain was gone. \n\nI cursed myself then, cursed my idiotic need for control and whatever thought had lead me to this point in my life. But there was nothing to do, and so I turned and was swept up in the rush of the sailors, letting their bodies bump up against me in ghosts of touches that I dreamed of, and tried to become a nobody too.\n\nHams asked me if I was alright three times that morning. I wonder if it was because I has slowed down so much from the day before; I wonder if it was because the weight of everything I had done was crushing me as surely as if I were at the bottom of the ocean. When his hand touched my shoulder for the fourth time, I didn't even jump. The gravity of it all wouldn't allow me. The rope that was in my hand sunk to the deck.\n\n\"My boy,\" he told me quietly. \"You've been at that rope for some time now.\"\n\n\"I don't know what I'm doing, Hams.\" He knew I wasn't talking about the ropes. He patted me on the shoulder gently. \n\n\"Aye, lad. Why don't you head down to Cookie; I'm sure he could use your help.\"\n\nI nodded, slow, and made my way below decks. I was halfway to the kitchen when I heard a voice call from the darkness.\n\n\"Boy.\"\n\nI turned and found Wicky, slouching in shadows. He was staring me down, perhaps trying to be intimidating, but I had already destroyed my world and there was nothing he could do to me. \n\n\"If I see you with the Captain between now and when you disembark, I will kill you.\"\n\nI thought about what to say to that. Better men than you have tried? Give it your best shot?\n\nI settled on the truth. \"I'm already dead.\" \n\nAnd it was true; the sea had filled my lungs, my heart had stopped, and when my body had begun again I had lost my name, my ship, my friends, and my life. What could this man do to me that compared? \n\nI turned my back on him and walked away. \n\n\"Don't turn your back on me, you arrogant fool.\" Wicky followed me down the hall. \"I meant what I said; I will kill you, cut that dick of yours right off. I won't let you bring the Pirate King down on our -\"\n\nHe let loose a choked cry as I lifted him by the throat. Poor man; he could not have known the sea flowed through me with my breath. It was so hard to breath, so hard to drag air into my chest past the thick ocean that lined my lungs. He was small, insignificant, and I carried his weight easily in the face of everything else I bore. \"You should not worry,\" I told him, \"about the Pirate King.\" \n\nHe was kicking, his limbs swinging freely in space, his hands scrabbling at mine. I held him tight. Behind his form, a man rounded the corner. I watched him stop, his jaw dropping at the sight of me holding the first mate aloft, the sounds of choking filling the hall. I met his eyes for only an instant before turning back to Wicky. Nobodies, all of them. I was only vaguely aware when took off at a dead run towards the deck.\n\n\"Worry instead,\" I told the man turning purple in my grasp, \"about his ghost.\" \n\nHis eyes went big at that, or maybe they were popping from lack of oxygen. I could kill him, I realized. How easy it would be, to hold him tighter, then tighter still, to deny him breath as he had denied me my Captain. The sea pushed against my ears.  \n\nThe man skidded around the corner again, pointing. \"Ghost,\" I heard a voice call. I looked up to find the blonde hair of Natch.\n\nI scowled. He didn't want to be anywhere near this. His eyes took in my form, still and dangerous, and the form I held in my hand. Wicky, too, was becoming quite still, his movements sluggish and slow. \n\n\"Holy fuck.\" He approached me slowly, as one might a stray dog. I tightened my grip on Wicky, causing him to jerk in my hand, and Natch froze. \"Ghost, mate, put him down.\"\n\nI didn't see any reason to. I took in the red face of the first mate, the fear that spread through his body like a sickness. Then I turned my eyes back to Natch. \n\n\"Please.\" He looked like he might be sick. \"Don't kill him.\"\n\n\"Two days is long enough to take the ship,\" I told him, still looking at Wicky. \"I don't need to go the any damn island.\" It wasn't the island I was upset about. I wasn't thinking about what I was upset about - I was thinking about how soft Wicky felt in my hand, how fragile. My mouth tasted like salt, whipped up from the storm that brewed in my stomach. The ocean would care for me, I thought. The ocean would take Wicky's body as a gift and it would be calmed, and I would feel better. \n\nNatch was still approaching, the idiot. \"Think of the Captain,\" he said quietly. \"Think of what he would say.\"\n\nThe Captain. I took another look at Wicky. \"He'll find out anyway.\" I squeezed.\n\nBut Natch was at my side, his hand on mine. \"Ghost,\" he said quietly, guiding my hand to a place where Wicky's feet could touch the floor. They bowed beneath him, unwilling to hold his weight. \"Let him go.\"\n\nI felt my face twist, felt my body shift through a million different versions of how this could go. Natch's hand was warm on mine, and comforting. I felt his kindness calm the storm held in each, the pounding sea retreating up my wrist, returning to my chest. One by one my fingers peeled from Wicky's neck. \n\nI stood there above the gasping first mate, Natch at my side. Then I turned and continued my way down the hall.\n\n\"Natch,\" I heard Wicky gasp behind me. \"Control your fucking mutt.\" \n\nI stopped, my back to them, to listen. \n\n\"Oh, Christ,\" Natch replied. \"You can't control a dead man.\"\n\nNatch might not know who I had been, I realized then, but he knew who I was better than anyone else in my life. I wiped my hands on my pants and walked the rest of the way to the kitchen.\n\n***\n\nWhen I arrived, I found that Natch had followed me. \n\n\"You can't do stuff like that, Ghost.\"\n\n\"I thought you understood that you couldn't control me.\" I moved past the confused Cookie, finding the coil of rope more or less where I had left it. \n\n\"I'm not telling you what to do, I'm asking - whoah.\" Ropes tied and ready, I was midway through stripping. I turned and raised an angry brow at him. \n\n\"Your back.\" He pointed, as if I didn't know what he was talking about. \n\n\"What of it.\" I couldn't keep the edge from my voice. I didn't want to talk of my scars, violent and painful, deep uneven ridges that lined the entirety of my shoulders all the way to my lower back. I didn't care to explain how they had come about. It was an old life, a distant world. \n\nHe backed off at my tone. \"Nothing.\"\n\n\"How long until lunch, Cookie.\"\n\n\"Two hours, give or take.\" \n\n\"Good.\" I stripped of my pants. Natch's eyes bulged and he turned away. \"I'm going for a swim.\" Without waiting for a response, I climbed through the window and cast myself to the waves. \n\nOnce in the water, I tied myself to the rope. I didn't want to get lost from the ship, as much as I didn't especially want to be on it. When I was secure, I ducked under the waves and deprived myself of breath. \n\nBefore long, my lungs were burning. Then my limbs started twitching, my head throbbing with my heart. But I would not give my body what it wanted. Submit, I told myself. Give yourself to the ocean. Give yourself to fate. Control your body and nothing else.\n\nYou can't control anything else. You fucking idiot, stop trying to have control. \n\nMy limbs relaxed, running out of fight. My brain reached a hazy point of semi-consciousness, floating there in the salt, and I let myself come undone. I lost my hands, then my feet. Then my torso. In time I was nothing but a soul, adrift in the uncaring sea. \n\nI gave my soul to fate, and then I was nothing. \n\nWhen I pulled myself up to the kitchen an hour or so later I found it deserted. I didn't mind; it gave me the privacy I still needed. I was delicate from my time in the sea, and took my time washing and dressing. \n\nCookie came in as I was coiling the last of the rope. He scowled to see me and tossed me a blade, which I caught. \"You scared Natch somethin' fierce.\" \n\nI didn't have anything to say to that. He should be scared. They all should be. It was not my fault they had not taken the time to learn this when they had first brought me aboard.\n\n\"And there's something afoot, some emergency meeting.\"\n\nI shrugged. I had asked the sea to care for me; she either would or she would not. My fate was out of my hands. I did the chores that Cookie asked and was not bothered by this news.\n\nSoon, the first of the men began trickling. They looked excited, perhaps even relaxed. As I served them their soup they did not seem to notice my presence. I floated in a haze created by the comfort of the knowledge of my own lack of control.\n\nThen Wicky appeared in the doorway. \n\nWicky did not eat with the men; usually one of his lackeys brought him his meals in his room, where he stayed squirreled up doing whatever it was that he did. To see him here should have signalled alarm. But he was a nobody, and I had the sea. I reached out for the bowl that he held. \n\n\"Two days,\" he told me raspily, \"can not come soon enough.\" He wore a cravat, but I could still see the bruising I had given him. It was already darkening. I felt myself smile. \n\n\"Cookie,\" he called. \"Serve me. I won't eat food touched by this savage.\"\n\nCookie moved, but I put a hand up to stop him. \"I serve the food,\" I told him quietly. The room had gone very still behind Wicky, all eyes pretending not to watch what was happening. I took the bowl from his hand and filled it, slow and deliberate. I placed the bowl on the counter.\n\nFamiliar, I thought. How strange to do something so similar, and yet for it to feel so different. \"What a difference a man makes,\" I mused aloud. \n\nWicky's face clouded. In a parody of my previous motions, he reached out and took the bowl, then slowly turned it over and let the soup fall onto the counter. \n\nI watched it fall, felt it splash upon my person. I really need to launder this shirt, I thought. Then Wicky slammed the bowl down on the counter and stalked away. \n\nI sighed and began to clean the mess he had made.\n\nWhen I sat down that day with Natch and Finn, they both leaned in. \"You can't let him get to you,\" Finn whispered. \n\nI frowned. \"Wicky?\"\n\nThey nodded. \n\n\"Why would he get to me?\" He was a nobody; I had the sea. I took a bite of soup and enjoyed the taste, ignoring the look of concern that passed between the two men. \n\nIn time, I became aware of a presence above me. I looked up to find Thron, his hands awkwardly filled with his bowl.\n\nI glanced at Natch. He shrugged. I signaled for the large man to speak.\n\n\"Ah, yeah. I was just coming over to. I was meaning to say.\" He took a deep breath. \"I wanted to apologize for Ichor in practice yesterday. It's my job to make sure things like that don't happen; he won't be invited back.\"\n\nOh. Ichor. I had almost forgotten about the attack; the wound barely throbbed, washed clean by the salt of the sea. I gestured for Thron to sit, and space was made for him. \n\n\"There's no need to apologize. I was distracted.\" I lifted another spoonful to my mouth. \"As for Ichor; if he comes back, he comes back.\"\n\n\"Yes, but.\" \n\nI drew my gaze up to him and he swallowed. I must still have the sea in my eyes, I thought idly. I tried to blink it away, but soon gave up, instead watching Thron. I was surprised by the change in him since yesterday. This was new for me; I did not usually see men become aware of reasons to fear me. It was usually my policy to give them all the reasons they needed the first time we met. \n\n\"Do what you will,\" I finally said. \"It's your practice sessions.\"\n\nHe nodded, smiling at me. I pushed him a second piece of bread I had stolen from the kitchen when I was back there and went back to eating. ",
        "\"He probably won't try to show up anyway, really. Training tonight will just as like be short, and under attended,\" Thron said, sighing a little. \n\nNatch nodded. \"That's what happens when the men get a sniff of the rum.\"\n\nRum? I looked up, confused. \"Are we heading to a rum port?\"\n\nAll three men looked at me. \"Cor,\" Finn said. \"He is a pirate.\"\n\nNatch must have kicked him under the table, because he jumped and cursed. The men must have been talking about me, I realized. \"Aye,\" Natch said. \"The men realized how close our port is to where we'll be dropping you off tomorrow's tomorrow, and insisted that we stop.\"\n\nI nodded. That made sense. Rum ports were sacred among the men, islands where Captains kept large stocks of the beloved liquid hidden away. That way, the men would always have a supply, and you could cut down on drinking on the ship. \"Was that what the meeting was about today?\"\n\nThey looked uncomfortable. \"Nay,\" Finn told me. \"T'were about you, I'm afraid.\"\n\nI frowned and looked to Natch to further explain. But it was Thron who took up the mantle. \"Cap was just letting us know where and when we'd be dropping you off. Took a little longer than it should have. Things got -\"\n\n\"Heated,\" Natch finished. \"Lots of men still want you dead.\"\n\nI shrugged. Let them try.\n\n\"Cap made this little speech, all offhand, like he didn't care and such?\" Thron continued. \"But we know him, right, and he was pissed. Said you'd been injured and that wasn't okay, because, how'd he put it Natch?\"\n\n\"A prisoner, just because he isn't able to defend himself against more capable foes, should not be considered an easy target.\" Natch raised his eyebrows at that but didn't say anything more. \"Said you had his full protection, by law of the sea.\"\n\nFinn nodded, picking up the narrative. \"Gods all, Wicky looked as if he was like to blow his top. His men had to calm him down.\"\n\n\"Did he say anything?\" I asked, offhand. \n\nFinn frowned. \"Say anything about what?\"\n\nNatch was the only one who truly knew what I was talking about. \"No. How could he? Cap had just called you an easy target; couldn't exactly say he'd been taken down by you just minutes prior, not without losing major face.\"\n\n\"You took down Wicky?\" Thron looked from man to man, trying to get some confirmation. He must have found it, because he leaned back and whistled. \"That explains his actions.\"\n\nI shrugged again. \"His actions have always had the same explanation.\"\n\nThey all looked to me. \n\n\"Fear,\" I told them. \"Besides, it matters not. I'll be gone soon.\"\n\n\"Will you come back?\"\n\nI looked up. They were all looking at me, staring very intently. Would I come back after being marooned, is that what they were asking? Did they want me to?\n\nI let my eyes meet Natch's; I had offered to come back for him. They had discussed that I was a pirate; had they discussed this as well? Natch stared back steadily.\n\n\"We'll see.\" They nodded, and I went back to my food. \n\nWe'll see. \n\n***\n\nWhen I got back to the deck, the first thing I did was seek out Hams and thank him for his kindness. \"There aren't many who would take the time for a prisoner,\" I told him. \"If there's anything I can do -\"\n\nHe smiled and patted me on the back. \"Just coil your ropes, laddie.\" As he walked away, I heard him snort. \"Prisoner my ass.\"\n\nI liked Hams. \n\nWicky stalked the deck, his red cravat acting as a beacon for all. Men scattered to get out of his way. I felt almost guilty for bringing this on them, but in the end I was not in control of Wicky's actions. I kept my head down and coiled my ropes, as instructed.\n\nI skipped out early to go and help Cookie prepare. \"Not gonna jump out my window again?\" he growled. \n\nI shrugged and set to work chopping ingredients. \n\nI served all the men in due order, then went and sat with Finn and Natch. I was surprised that Thron had joined us again, and had brought a friend from the training sessions, a fellow who went by the name of Gret. \n\nI nodded my acceptance and sat watching the door. The Captain should walk through it any minute, to get his dinner. I had things to say to him, I realized. Apologies to make. I ran through possibilities in my head, trying to find an acceptable order of words that would make him understand where I sat. Understand that the hurt I had felt was all my own creation. Gods all, that man made me feel like boy. A bumbling, idiotic, foolish boy.\n\n\"He's not coming, lad.\" Finn pulled me from my pretend conversations. \"He took his dinner in his room today.\"\n\n\"Not that he'll eat it,\" muttered Natch. I frowned at him. \"Ghost, you made it. You think he could bring himself to eat anything you touched right now?\"\n\n\"What?\" I looked around at them, found no eyes willing to meet mine. \"What do you mean?\"\n\n\"Have you talked to him recently?\"\n\n\"Yes,\" I answered Natch. \"This morning.\"\n\n\"And?\"\n\nI scowled. I didn't want to remember that conversation. \"He blames me. Wants me off his ship.\"\n\n\"Ghost...\"\n\nIt was a warning, and a fair one. I knew that what I had said was untrue. The men waited.\n\n\"He has guilt,\" I finally acquiesced. \"He thinks he hurt me.\" It was painful to say aloud.\n\nNatch put a hand on my arm. \"You need to talk to him.\"\n\n\"I know.\" \n\n\"Gonna be hard,\" Finn informed me. \"He's sequestered himself away in that room of his, won't even entertain Wicky.\"\n\n\"At the rum port,\" suggested Gret. \"We all disembark there.\"\n\nNatch shook his head. \"Too public.\"\n\nBut Finn suddenly looked very worried. \"Aye, lads, the rum port. D'you remember Cap before we came south?\"\n\nGret and Thron leaned back, faces suddenly serious. I sat up straight, concerned by their reactions. \n\n\"You don't think -\"\n\n\"A habit is a habit.\"\n\n\"And if he's feeling this bad...\"\n\n\"Aye, but that was something else entirely. This shouldn't even compare.\"\n\n\"Sorry,\" I interrupted. \"But Natch and I are lost.\" \n\nThree sets of intense eyes turned to me. I could see calculations running in each, trying to decide how much to say. \n\n\"Cap likes his drink,\" Finn finally said. \n\n\"Especially when -\"\n\n\"Cap,\" Finn said forcefully, \"likes his drink. That's all there is to it.\"\n\nThe other two men met his eyes, then nodded. I looked to Natch, who only shrugged. \n\nI turned back to the others. \"But this wasn't a problem before?\" I needed to understand what was happening. If they were worried about the Captain, if there was something that was wrong... \n\n\"It's worse when he's upset,\" Finn conceded. \"Just be mindful, lad. Bad decisions have been made at the rum ports.\"\n\n\"Ships have been lost,\" Thron said quietly.\n\n\"I'll be mindful,\" I promised. \n\nTraining that night was neither short nor poorly attended. Men who I had never met nor taken the time to know their faces showed up, forming a circle around me as I walked to gather my training blades. The enclosure set my teeth on edge, making me look for any ambush, but they all were simply watching me, silent. I gathered my supplies and moved towards Natch. \n\n\"What's going on,\" I asked him quietly.\n\nHe shook his head, his eyes on wrapping his hands. \"Word got 'round that you were training.\" He stood and stretched. \"Looks like more of the boys want some guidance.\"\n\nI frowned. I hadn't really been giving guidance, just trying to get these land boys to fight half decently so I could get some sort of a work out. Still, if there were more of them, maybe they wouldn't tire as quickly...\n\nI made my way to my practice spot. \"Alright,\" I said, crouching low into a defensive guard. \"Who's first?\"\n\n***\n\nIchor showed up about halfway through training. I put the kid I had in a headlock down upon the wooden planks and turned to meet him. We stood, mirrored, our shoulders squared. Thron was making his way through the group, no doubt to turn him away, but this man was no threat. I waved him off and he stood down, frowning. \n\n\"Why are you here?\" I asked Ichor. He shifted his feet, looking uncomfortable. \n\n\"I want to be better.\" He wrung his hands, not meeting my eyes. \"I didn't know... I mean, I thought I was...\"\n\nI pointed vaguely at the men around him. \"Check him for knives.\" When he was cleared, I sparred with him, and threw him almost instantly. I could see his body tense when mine was on top of his, and eased off immediately. \n\n\"Stop planting your feet; you'll do better if you have more mobility.\" I reached down to help him up. \"Again?\"\n\nHe looked up at me, suspicion clear on his face. I waited.\n\n\"Again,\" he agreed. He took my hand and we began. \n\n***\n\nThe rum port turned out to be a nice little island, complete with sandy beaches and fresh water and not a soul for miles. \n\n\"Why didn't they just maroon me here,\" I muttered to Natch as we rowed up to the beach.\n\nHe laughed. \"And have you drink all our rum?\"\n\nFair point. \n\nIt took quite a few trips to get everyone over from the ship. Natch and I were on one of the last shuttles. By the time we reached the beach, the party was already in full swing. We were met by a grinning and ruddy-faced Finn, who pressed a tankard to each of our hands before spinning away, laughing.\n\n\"Lightweight,\" Natch accused softly, and I laughed.\n\nI nursed my tankard the whole night long. I could have drank much more and been alright, but I had been without alcohol for three years and didn't want any surprises. \n\nBesides, I needed to watch the Captain.\n\nHe sat by himself, a whole bottle of rum sequestered for his personal use. I watched him work his way through it, his body slumping further and further into the darkness as the bonfire flickered and leapt. \n\n\"Natch,\" I said quietly. My companion had been quite into the rum himself. He leaned against me at his name, humming happily. I was surprised to feel his warmth; Natch did not often touch others so intimately. I draped an arm over him gently, happy to see him feeling so safe around me. \n\n\"Ghost,\" he slurred. \"You'll come back for us, right?\"\n\nI squeezed his shoulders and didn't make any promises. \n\nWhen I looked up to the Captain again, he was staring right at me. \n\nI froze, my eyes locked with the Captain's. He was arranged over a log, his legs spidering out before him, that black cloak of his making it seem as though he simply expanded into the universe. As I watched, he took another swig from his bottle, swaying slightly. Although it was hard to tell from here, the angle of the bottle as he moved it to his lips made it look like it was nearly empty. \n\nThis couldn't be good. \n\nThe Captain pulled himself up, staggering dangerously close to the fire. The light of the blaze lit him like nothing I had ever seen, making his eyes shadows but his hair pure light. He was judgement, and I waited for it to come down on me. \n\nTo my ears, it seemed the entire beach become silent but for him and I. I know that this wasn't true; men were singing, the ocean responding, the fire crackling and sending sparks up to keep the stars company. But the Captain's eyes held me. Nothing existed but for us. \n\nHe lurched, making the last few steps towards me. Then, he pulled out a knife, and everything slammed back into reality. \n\nThe knife was at Natch's throat before either of us had time to react. It was a thin blade, sharp and refined, a perfect fit for the Captain. One false move could pierce Natch's neck in an instant. He was frozen, his arms up, his eyes huge and glued to the sand beneath his feet.\n\n\"Cap,\" he whispered. The knife jerked and he stopped talking. \n\nThe beach had truly fallen silent now. All eyes were on us. My eyes were on the Captain. He was swaying where he stood, his gaze unfocused, the knife held surprisingly steady. I could see a bit of blood gathering at the point. Natch's breath was growing quick.\n\n\"Captain,\" I said quietly. His brows drew together, as if he were listening to something far away. I reached out and gently pushed his hand down, freeing Natch from the blade. He gasped and spun away, collapsing on the sand and scrabbling out of view.\n\nThe Captain cast about, seeming confused. My hand still on his, I worked to remove the knife from his grasp. \"Sir,\" I let myself say, my voice low and intimate. At that word, he let me have the knife, his gaze traveling up to my face.\n\n\"Oh,\" he said, sounding surprised. \"It's you.\" His body lurched, his knees giving out beneath him. \"Oops,\" he muttered as he dropped. \"Fuck.\"\n\nI went down with him, unwilling to have this man kneel before me. He ended up on his knees in the sand, still unsteady, my arms caught around his waist loosely to anchor him. I felt him sigh, all through his body. I felt him. His skin gave me chills.  \n\n\"It's you,\" he repeated. I nodded. \n\n\"I'm here.\" My voice was fragile, delicate like the way I felt, the way it was to be so close to him. I was here. I couldn't be anywhere else. \n\n\"I'm sorry,\" I heard him slur. He lightly rested his face on my collarbone. \n\nI shushed him, pressing my lips to his temple. He had nothing to be sorry for. Nothing at all. I felt his hand travel up my arm, clumsily make it around my neck. I let it settle there, felt my breathing settle into his. He was perfect, this was perfect, and I was never going to let him go. \n\n\"I'm sorry,\" he whispered again. I tightened my grasp around his waist and he settled into my arms. Nothing had ever felt so comfortable as this. Nothing had ever felt so right. \"Don't go,\" I heard his voice say, heard him plead, and my soul broke against him and reformed as something better, something altogether new and completely incredible and I knew that I would never be able to truly leave him again. \n\nI looked up and found a sea of eyes, judging and watching and waiting. \"I'm taking him back to the ship,\" I stated. I made my voice hard, tried to shield him with it. How had he become so fragile, gone from dangerous to in danger in such a flash? I wouldn't let anything hurt him, I knew. I would keep him safe. \"He needs water and rest.\"\n\n\"The hell you are.\" Wicky stepped forward. He was flushed like the rest of them, from anger perhaps rather than the drink. His cravat was gone, the bruises I had given him clear and brutal. \"Him in that state. You, as you are?\"\n\nI tensed at the implication. Against my chest, the Captain squirmed, muttering something. I gently kissed the top of his head and he fell quiet. My eyes never left Wicky's, and I could feel them filling up with all the things that had kept me alive, all the pieces that should scare a mortal soul. \n\n\"Like hell I'm letting you take advantage of him,\" he continued, seemingly unaware of the danger he was in. He took a step forward, a blade appearing in his hand. \n\nI still had the knife I had taken from the Captain. I raised it, then, showed it to Wicky. A warning. The air was thickening, something coming to a head that had been brewing for quite some time. I could finally kill this man, I thought. The ocean would have it's offering. \n\nThen movement caught my attention. Thron had come up beside me, his big body lending weight to my threat, weight I might have lacked while carrying the Captain's. On my other side, Natch appeared, small, maybe, but he carried the least amount of land of all these men. Perhaps that made him the most dangerous; perhaps that just made me trust him more. \n\nOther men began to move. I watched, dumbfounded, as man after man from the training group stood and leant their support to Natch and Thron and, I supposed, me. Wicky's face grew dark, his eyes flicking from figure to figure. He could not have seen this coming; I had not seen this coming. \n\nThe idiots, I thought. Aligning with a prisoner who throws them on their backs for exercise. Who can't even get things right with their Captain, might have put them all in danger. Showing their allegiance like this, just before I was to leave. Drunk. Outnumbered. On land. \n\nI could have taken Wicky, maybe. I could have taken Wicky and his one or two dedicated lackeys. All of them, perhaps, if I had someone to watch the Captain. But this show of support was forcing the other men to pick sides, and it was in danger of becoming an all out mutiny. I couldn't have that, not here, not now. Not with the Captain so delicate in my arms. I looked down at the knife in my hand. \n\n\"Natch,\" I said quietly. \"Get them to stand down.\" \n\nHe did so immediately, sheathing his knife and turning to the others. I tossed the blade in my hand over to Wicky. \"Keep hold of that,\" I said casually, as if this show of force had not just occurred, as if Wicky had not just learned that some men on his ship would fall behind me in a fight against him, as if I had not just commanded his men without words and without asking. \"He'll want it back when he's sober.\"\n\n\"You don't tell me what to do,\" he snapped, but he picked up the knife all the same. \n\n\"Natch, Finn,\" I called. \"We're going back to the ship. Wicky will come with us.\" I scooped up the Captain, holding him in the crook of my arms like a babe. He was light, so much lighter than I'd expected. He made a small noise against my chest. His arms were so loose around my neck, so weak. I held him tight. \"He'll bring whatever men he sees fit.\" I turned to head back to the boats. \n\n\"Ghost -\" Thron said warningly, his eyes hard on Wicky. I paused in my path next to him.\n\n\"This is for the Captain,\" I told him quietly. \"We need not fear Wicky; he is inconsequential. The Captain is what matters.\"\n\nThron nodded, but he didn't look especially happy. \n\nIn the end, Wicky brought four of his bigger goons. I brought Finn, Natch, and the Captain. All of them were drunk, and I was confident that if it came to it, I could dispatch every single one of them and still get the Captain back to the ship safely. But it wasn't needed; the boat made it safely back to the ship. \n\nWicky tried to say he should carry the Captain up to the deck. I leveled my gaze at him for just a moment, just long enough that he would understand how little I cared about his opinion, then I hooked the Captain to my chest and climbed up one-handed, as smoothly as I could.\n\nHe was not doing so well, the Captain. Halfway to the ship he has stopped speaking coherently, just quietly babbled and tried to run his hands through my hair clumsily. I shushed him over and over, kissing his temple, and eventually he had calmed and simply rested heavy in my arms. I was worried about him, about how much he had drank. He still held the bottle clutched tight in his hand, wouldn't let it go, would yell if we tried to pry it from his grasp. It was a constant reminder of how we had gotten to this point, the near-empty bottle clinking and catching on doorways and bodies as we moved through the ship. \n\nWhen we reached his room, I gently laid him down on his bed. He looked so beautiful, his hair spilling out over the covers. I watched him try to raise the bottle to his lips. \n\n\"No,\" I reprimanded quietly, pushing it away. He whimpered, but let me keep the liquor from him. I turned to Wicky. \"I'm staying with him tonight.\"\n\n\"Like hell you are.\" The first mate was standing in the doorway, his arms crossed, all four of his goons behind him. \"The Captain needs his privacy.\"\n\n\"The Captain,\" I said firmly, \"needs to be watched. He could hurt himself.\"\n\nWicky scoffed. \"This isn't his first time doing this. He did fine without you, he'll do fine when you're gone. Come on, I'm locking you up.\"\n\nI shrugged. They couldn't keep me away, not really. I walked over to the window and opened it. \"Fresh air,\" I explained. Wicky rolled his eyes and hurried me along. \n\nWicky took me to the cells. A week on the ship, and finally I was getting to sample the cell's hospitality. One of the cages was opened for me. \n\n\"You'll stay here all of tomorrow,\" he told me. \"Then the next day, I'll be rid of you. You're bad for this crew, you're bad for the Captain.\"\n\nI let him walk around me as he would. Nothing would keep me from my Captain. As he tied up my arms and legs, I didn't pay him much attention. When would these men learn that knots -",
        "The cold kiss of iron slammed against my arms.\n\nI gasped and looked down into Wicky's smug face. \"Cap said you weren't to be in irons, but.\" He shrugged, anger making him uglier than ever before. \"Let's see you untie this.\" He laughed as he walked away, his goons smiling among themselves. \n\n\"Wicky!\" He didn't turn. \"Wicky!\" I roared it. I let it tear loose from my chest, everything in my lungs becoming weaponized and dangerous. \n\nBut he was gone. \n\nI stared down at the irons. I could do this, I told myself. My heart was pounding, my chest aching. It was nothing but irons. Two and a half years of my life spent in them, yes, but I was not there anymore. I was on a ship. I was with the sea. \n\nI closed my eyes and took a deep breath. I could do this. Even in irons, I could do this. What were irons to me? I just needed a plan. I would get to the Captain, and I would take care of him. And then I would kill Wicky. And then I would - what? \n\nI would figure it out from there. For now, the Captain needed me. That was my first priority.\n\nThere was a window at the end of the row of cells. If I could get myself out of the cage, I could reach the Captain through the outside of the ship. These men could not keep me from him. These men were nothing; I was the sea, and the Captain was the sky, and I would not be denied. I had carried him in my arms, I had touched him. I put that from my mind. It was more important than that. I imagined him, so drunk he couldn't speak in that room. Upset. Alone.\n\nNo. It was even more simple than that. He had asked me not to leave him. \n\nI had to go back. \n\nI undid the knots that Wicky had left me in. I spent some time looking for rust on my irons, looking for weak spots, but where Wicky's knots had been weak his choice in irons was strong. I gave up, wanting to scream. I could do this, I reminded myself. For the Captain, I could do this. \n\nI turned my attention to the door. Option one was picking the lock. I could do that, but it took time and tools, neither of which I had. Option two was hitting it until it gave. \n\nI took option two.\n\nLuckily, where my manacles had no rust, the door was riddled with it. My body weight carried me through the hinges on the fifth try. \n\nAt that point, I suppose I could have looked for a key, or something else to release me from the last of my confinement. But I had already wasted enough time, and the Captain needed me, so I hurried to the window and began to climb towards the Captain's. \n\nIt was harder than I expected to make the climb while constrained, and I lost time that I needed. That the Captain needed. I almost fell twice, my grip slipping when I reached for something that I did not have the span to reach. When I finally reached the right window, I didn't take the time to look inside and make sure it was empty, I just hauled my body inside.\n\nIt was a small miracle that the room was unoccupied. I did a quick scan, listening and looking, but there was nothing but the sound of quiet murmuring outside the door. Wicky must have posted guards, the sanctimonious ass. \n\nThere was nothing. \n\nI stopped, suddenly very concerned. Where the hell was the Captain?\n\nA small moan drew my attention to the bathroom, and I made my way across the room. Fuck, I thought. Fuck fuck fuck. He had to be okay, I had just gotten him back, he had to be okay...\n\nThe Captain sat slumped against the wall, his shirt drenched in vomit. It looked like he'd tried to make it to the toilet, or maybe the bin, but had fallen and hit his head before he could. A bleeding cut on his forehead was testament to his struggle. He raised his hand feebly as he saw me enter the doorway.\n\n\"Oh, shit,\" I breathed. I was going to kill Wicky. I was going to destroy him, separate his soul from his body and rip each apart separately. I would bury him at sea with no silver and no way to guide him to the afterworld, and when his ghost came to haunt me I would do it to him again, and again. \"C'mon.\" I kept my anger out of my voice, feeding it to the sea as a promise. \"Let's get you cleaned up.\" \n\nI grabbed a damp cloth and a glass of drinking water, then slid myself between the wall and him. I don't know that he recognized me, truly, but he seemed to relax in my arms all the same. \n\nI gently cleaned his face, then got him to down some liquid. The manacles made things awkward, but he hardly noticed in his drunken state, and it was best to go slowly anyway. Soon he was clean from the neck up. When it came time to take off his shirt, however, I found him reluctant. \n\n\"No,\" he muttered, pushing at me. At first I continued, thinking he just didn't understand what was going on, but he was becoming agitated, almost afraid. \"Please, no, I don't want to, don't make me. I'll be better, I'm sorry.\" He squirmed in my grasp, fighting me, his face twisted in an emotion that I didn't want to link with any action I would ever do, not to him.\n\nI stopped. \"Okay,\" I murmured. \"Nothing you don't want, okay.\" I pressed my face to the top of his head and tried not to let his words sink to my stomach, didn't let myself think about what they might mean. \"I'm here. Nothing can hurt you.\"\n\nThat seemed to reach him. When he was settled, I gently extricated myself from his body. He made a small noise of protest, and I almost stayed, but I needed to find something. \n\nIt felt invasive, to go through his drawers, but I found what I needed quickly and was soon back at his side. \"Look,\" I told him, bringing his hand to the shirt I had found. \"I have a new shirt for you.\" He felt the shirt, took it in. \"Will you let me take this one off? It's dirty.\"\n\nAfter a time he nodded, and I slowly pulled at the bottom of his shirt until it come off over his head. I caught my breath at the sight of him there, even sour smelling as he was, at the feel of his bare skin against mine. I washed him gently, thoroughly, but quickly, keeping my fingers light and delicate. I wanted to grab him, to run my hands over every part of him that lay exposed, but I was careful to only touch what I needed to. I watched his face as I did, making sure I wasn't upsetting him, but he seemed okay. \n\nWhen his skin was clean, I pulled the new shirt over his head, ending with my arms around his waist. He sighed and settled back against me. \n\nThis was perfect. This would be perfect, I amended my thought, if only he were sober. I sighed, feeling him fall asleep against me. It wouldn't do to have him asleep here, not in the cold bathroom. Not against me. I didn't want him waking up confused and lost, to find himself wrapped in arms he might not actually want. \n\nI shook him awake gently and got him to drink more of his water. \"Sailor,\" he slurred, looking up at my face with eyes that made my heart want to burst. How could one man's face be so perfect? It wasn't fair to everyone else in the world. \"When did you get here?\"\n\nI smiled down at him and pressed the cup to his lips. My manacles rattled, and he looked down. \"Your hands are stuck,\" he told me, pulling away from the cup. I nodded. He collapsed against me again, his eyes fluttering closed. \"That's hot.\"\n\nDespite everything, despite how much I hated what these irons meant to me, what they had done to me in the past, at his words I had to smile. \n\nWhen he finished his water I carried him to bed and left him there as I cleaned up the mess in bathroom as best I could. There were no more towels, so I sacrificed my shirt to the cause. When I returned to the bedroom, I found that he had tried to climb from the bed and was now kneeling on the ground, his head still on the covers. I sighed and lifted him back up. \n\n\"Don't leave me again,\" he mumbled. \n\n\"I'm right here,\" I told him. \"But now it's time to sleep.\" \n\nHe nodded, curling up, and I tried not to smooth back his hair, I really did, but my hand moved on it's own accord and he relaxed so immediately, so completely under my touch that I did it again.\n\nAs his breathing settled, I sat back and looked across the room to the chair. To be fair to him, I really should sleep there. It would give him distance, and from there I would still be able to keep an eye on him. \n\nI looked down at the figure before me, crouched on the doorway of sleep. He was murmuring something again, and I reached out and let my hand rest on his shoulder. He settled instantly under my touch. \n\nI couldn't leave him. \n\nBesides, it would be better to sleep on the bed. I would be able to feel any sort of movement that he made and would be able to react much more quickly. This was the safer option, I told myself. \n\nThe window was still open, letting the cool night air into the room. I gently slid him under the covers, then settled myself next to him on top. That, I thought, would remove any ambiguity. We couldn't touch on opposite sides of the sheets. \n\nNext to me, the Captain stirred. I stretched out my hand and let my fingers touch his palm. His hand immediately curled against mine. My stomach twisted, seeing just that small gesture of affection. I watched him for a long time, my hand in his, his face so serene, before drifting off to sleep myself. \n\n***\n\nThe Captain woke sometime in the night. He opened his eyes drowsily, feeling the familiar haze of rum swimming through his head, and expected to see the floor of some room, or perhaps the side of his toilet. The Captain was no stranger to drink; for a long time, it had been his only friend, his only confidant. \n\nInstead of unforgiving wood floor, he found himself in his bed. He felt comfortable, foggily safe even. A warmth spread through his body, and he realized that he had even made it under his covers. How strange, he thought. How did this happen? He opened his eyes to further explore this anomaly and that's when he understood that he was dreaming. \n\nAcross from him was the most beautiful man he had ever seen. And he had seen this man before - had dreamed of him so many times, had watched him from across the ship and yearned, and needed, and tried to absorb without the luxury of touch. And now he was here, right here, so close the Captain could feel the air moving as it escaped his lungs. His face was so soft, his breathing so gentle as it pulsed through his bare chest that the Captain almost forgot to breathe himself. He traced the lines of this man's body with his eyes and found his hands manacled, the irons making his shoulders set at the unnatural angle they were at, the only unnatural angle on his entire body. He followed the arms further and discovered that his hand was in his, their fingers gently entwined. \n\nThis man, of all men, in his bed. In irons. Touching him. The Captain smiled. What could it be but a dream.\n\nWell. He was going to enjoy it. It was so rare that he got good dreams these days. \n\nHe closed his eyes and fell back asleep."
    ],
    "authorname": "nakamook",
    "tags": [
        "pirates",
        "gay male",
        "slow burn",
        "novel",
        "plot heavy",
        "plot",
        "romance",
        "fantasy"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-05"
}