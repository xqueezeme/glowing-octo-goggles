{
    "title": "A Strange Arrangement Ch. 12",
    "pages": [
        "That was about three years ago. I remember walking to my car, head held high. I kept it together until I got to Hope's Advocate. I started falling apart as I walked into the residential area. I was soon surrounded by women- some homeless, some abused, some there for the first time. All of them virtual strangers to me, all of them with a story. And they sat with me and handed me tissues- hands rubbing my back, hugs when I was ready. No one asked any questions- they knew better. You don't need more questions in those moments. \n\nDottie came by- she had been waiting for me. She came in the room, and politely asked everyone to give us a moment alone. All she said was, \"I want you to tell me everything, but not until you're ready. Everything, Gina, I mean it. You're a terrible liar, God bless you, and I know you've been hiding something from me. For now, you settle in, then get to work. There's plenty of tears to go around.\" \n\nA week or so later, I did tell her everything. Really everything, but only after swearing her to secrecy. She almost seemed offended that I would need to do that, \"Don't you see the world I work with? Could I still be here if I ran my lips? There's nothing you can tell me that I haven't heard before, Gina.\" But after hearing about Andrew and our arrangement, and Penny and Noel and Gareth and Ian and Tristan and Angelica...She sat back, eyes wide, and said, \"OK, there was some new stuff there, congratulations.\" But she kept her word and never told a soul. \n\nShe helped me process a lot of what had gone on in those three months with Andrew. She didn't seemed upset about the arrangement- she called it \"creative,\" once she was assured I was never forced into it. She also gave me her opinion that I had made the right call in the end, even if I had made some \"dumb-as-shit calls\" (her words, not mine) along the way. \n\nHearing about my story with Gareth and his insistence that I get an abortion, and about the botched job that may have ruled child-bearing out of my future, Dottie suggested two things: First, that I give her Gareth's address and let her go cut off his balls; and second, that I start spending time counseling women at the crisis pregnancy center. During training for that, I realized how poorly the clinic I went to had handled preparing me for the physical and emotional trauma of an abortion, especially the long-term emotional effects. \n\nIt turns out I was pretty good at working with those women, although in most cases I would say, those 'girls.' So young and scared, making such big decisions. I tried to walk them through all their options and to offer hope for them and for their children. \n\n******* \n\nIn the summer, I got an email from Andrew. It was short. He praised the meal service and housecleaning services I had arranged for him, which delighted the ladies when I told them. He reaffirmed his love for me. But he also mentioned that Penny was taking part in a clinical trial for a new drug, and it was having some really promising results. She had a few good days now and then and had even had a sane conversation with Andrew. If they continued seeing success after six months, the trial would fund a live-in nurse to be with Penny while they tried to re-assimilate her into her home. Andrew wrote, I don't have any hope that she will ever again be the Penny I once knew, but she may be able to get to the point where she doesn't need to be institutionalized and constantly supervised. It would be a vastly improved quality of life for her. As much as I hate not having you with me, you made the right decision, for Penny's sake. \n\nHe sent a few other emails now and then, reminding me of his love and telling me the door was open when I was ready. And though I read them each over and over, I never let myself reply. It would be too easy to go rushing back into his life, tearing apart whatever delicate peace they had worked to attain. \n\n******* \n\nWhen November came, I thought of visiting Andrew, but Dottie wisely counseled me not to open that door. No good would come of it, she assured me, only pain. \"What you need, and what he needs, is to heal.\" But I did really miss my recliner. And I still loved Andrew. \n\n******* \n\nAnd so life went on. I learned a lot. Dottie began unabashedly grooming me to take her job somewhere down the road. \"No hurry, hun. There's a lot of miles left on this jalopy. But when the time comes, I want you ready. Plus, I haven't had a vacation in six years!\" I was good at my job. And Dottie was right, love followed commitment. I entered the shelter thinking it was a good cause. But once I started working there, it got into my veins and I was passionate about it. Dottie started sending me out to speak at fund-raising dinners. I was good at making factual, business-like presentations. Instead of trying to tug the heart-strings, I was showing how our work was not only changing lives (like every charity does) but was changing the system that was causing the problems. Now that was worth investing in. \n\n******* \n\nThe next May, a year and a half after I had broken my arrangement with Andrew, Dottie asked me, \"So when are you going to deal with Ian?\" By that time, Dottie had earned the right to ask such a question. She knew that June was the anniversary of his death, and she knew I still hadn't talked to my parents in over 2 years. I told her I wasn't sure I could do that yet, but she pushed and pushed until a few weeks later I did something stupid. I contacted Andrew. \n\nUsing the smart phone Dottie had required me to buy for work, I simply texted him a set of coordinates and asked him if he could meet me there the next Saturday at noon, but if not, I would understand. I didn't hear back from him. \n\n******* \n\nThat next Saturday, I was at Ian's grave on the anniversary of his death. The fresh flowers told me that my parents had already been there. It was 11am on a bright day in June. I told him all about my new life. I shared my fears and worries. At 11:30, a figure who, since I had gotten there, had been sitting on a bench a hundred yards away stood up and walked towards me. Andrew. \n\nHe looked older, careworn, tired. But he smiled to see me, and we leaned in for an awkward side hug. Looking down at the tombstone in front of us, he said, \"So this is Ian?\" \n\n\"Yeah.\" Without comment, I took his hand in mine and told him about Ian's accident. I told him about the recliner and the stars. I told him about my parents and their emotional absence after that day. I told him how that loss had crippled me, made me afraid to be close to a man ever again. I stopped every now and then to cry. Andrew had brought tissues. He never spoke, just held my hand and listened. I told Andrew that I needed to see my parents and finally talk to them. I told him that he had helped me to see how broken I was, how broken they were, and how much we needed each other. I told him that I was so sorry I had asked him to drive all the way up here, but that I thought just seeing him would give me the courage to see them. And I owed him the story, because it had affected how I treated him. And he he still had Ian's recliner. He offered to go with me to my parents' house. I thanked him but said no. \n\nI asked how Penny was doing and he looked away. Then looking back, he said, \"I didn't know what to expect today, Gina. I'm staying at a hotel off the interstate, I wasn't sure if you needed help or something this weekend. When you're ready, if you want, let's meet up after you talk with your parents. We can catch up then. You don't need me to distract you right now.\" It was a little terse and controlled, but not angry. \n\n\"I'd like that,\" I said softly. \n\n\"Me too.\" \n\n******* \n\nI drove to my parents house and surprised them. We had a long conversation that was sometimes loud, sometimes teary, and mostly very, very good. I owned up to a lot of the stupid things I had said and done, and they even apologized for some things, which meant a lot to me. There was still a lot of hurt on both sides, but at least now the door was open to deal with those things. They expected me to stay, but I told them I couldn't. We arranged for me to come back up in a few weeks and stay longer. I genuinely looked forward to it. \n\nI left before dinner and called Andrew, arranging to meet near his hotel for a meal. \n\nAndrew and I had never been out together. This was our first, well, not a date, but our first...time out together. He asked about my time with my parents and he listened with his usual patience. I cried a little and he had some good advice, even. As we finished covering that ground, I was going to ask about Penny again, when Andrew said, \"Did you get any of my emails?\" \n\nIt only then occurred to me that he didn't know I had read them, how I treasured them, how I had printed them out in case I somehow lost the emails. For all he knew I had left his house and completely shut him out of my life until this week. I felt like a horrible person. My instinct was to justify my behavior- Yes, I had received them, but I didn't want to lead you on. I didn't want to nurture something that couldn't be. But Dottie had been training me not to justify my mistakes but to instead apologize and fix them. So I tried that, and Andrew appreciated it. \n\n\"So you knew that Penny was in the clinical trial?\" he asked. \n\n\"Yeah, and last time I heard from you, she had been back with you for a few weeks. It seemed like she was starting to assimilate back into your home, with nurses supervising?\" \n\n\"Yeah, that was in September.\" He cleared his throat. \n\n\"And it's still working? You had said there was a lot of improvement?\" \n\n\"She's dead. Penny's dead.\" \n\nI stared in silence, my heart racing with a mix of grief and excitement and fear and... \n\n\"How? What happened?\" \n\n\"She killed herself, but I think by accident. It was in November, of course, and Noel was on her mind a lot. It was night, and she was supposed to be sleeping, but she must have woken up and was upset and wanted something to help her calm down. At the Institute, they had pills that would help calm her down when she was agitated at night. So my guess is that she went looking for pills- any pills. She wasn't thinking straight. The nurse didn't hear anything strange, so she didn't come check on her- it just sounded like talking in her sleep or something. And there hadn't been any problems for months- this new drug was really helping. \n\n\"Anyway, Penny went into our medicine cabinet and pulled everything out. When they found her, every bottle was open- mostly OTC stuff, her serious meds were locked up. I found her unconscious in my bathroom when I got home at 2:30 a.m. They pumped her stomach and found evidence of more than 40 pills of all different kinds, but it was too late- her system had absorbed too much already. The report said it had probably happened around 10:30 or 11 that night. The problem was the mix- all those things combined, plus the experimental stuff she was taking, plus the half a beer from my nightstand that she used to wash it down. It was just poison. \n\n\"It was...is...a mess. Everyone's trying to blame everyone. The Insititute, the drug company, the nurse...I'm just trying to stay out of it. She's not hurting anymore. And Noel has her Mommy back.\" \n\nWe sat in silence for a few minutes. Why hadn't he told me? As soon as Penny was gone, I would have gone running into his arms. If he wanted me to, that is. \n\n\"Andrew, I'm...so sorry about that. I wish I had known!\" \n\n\"Do you?\" he asked, a little hurt. \"Gina, you never responded to my emails. You never told me how you were doing. You left, and you cut me off. I understand why, even if I didn't agree at the time. But once you were gone, you ignored me and gave me every impression that you didn't want to hear from me again. I thought you were just glad to be out of our arrangement. Why would I have contacted you after that?\" \n\nI closed my eyes and prepared for a counter attack. Surely I could still blame him, surely there were things he could have done, things he should have known or understood. But I caught myself and thought better of it. \"I'm sorry Andrew, that was my fault. It was wrong of me.\" \n\nI went on, not sure if I should go further, but desperately wanting to. \"Andrew, I would have wanted to know because Penny was the only reason I couldn't be with you. I don't know how much time you need to move on or if I even could be a part of that. I know a lot has happened in a year and a half. People change, hearts change...but mine hasn't\" \n\n\"I love you, Gina. I wouldn't be here if I didn't. I came here with no expectations- I just wanted to be here for you, whatever you needed. There's not a day that's gone by since you left that I haven't wanted you back in my life- in my home, in my bed, in my arms. Not a single day, Gina.\" \n\nRight there in the restaurant, I cried. I was happy and sad and full of regret all at once. The server had arrived to refill our drinks, and she gave Andrew a nasty look, but I laughed and told her it was OK. When we were alone at the table again, I composed myself and said, \"Andrew, I've missed you so much. It was like all the happiness I could handle had landed on my lap for a few days, and then I had to give it back. I blamed myself a lot, but thank God for Dottie- she kept talking sense to me.\" \n\nAndrew signaled for the check and paid it. \"So Gina, are you saying we can try a new arrangement?\" \n\nI couldn't help but laugh at that. \"I don't know, Andrew. The first one was so strange, I might want something a little more normal this time.\" \n\nSmiling, he replied, \"Well, unless you have other plans for this evening, I'd love to take you back to my room and begin negotiations.\" \n\nClosing my eyes and letting fall a happy tear, I said, \"Andrew, there's nothing else in the world I'd rather do right now.\" \n\n******* \n\nIt was a nice hotel room, which was odd, because I wasn't used to associating Andrew with anything fancy. When we got to the room, I washed my face to try to freshen up after so much crying that day. As I patted my face with a towel, Andrew walked up behind me and wrapped his arms around my waist. Putting his face next to mine we looked in the mirror together and smiled. I felt like my heart would open up and start singing from happiness. \n\n\"My opening offer,\" he said, making eye contact with my reflection, \"is that you become my wife and stay with me forever. I'll provide full room and board. In return, you will work as much or as little as you want, help keep house, cook delicious meals for us, help raise any children that end up joining us, and listen to all the lovey-dovey things I want to say to you.\" \n\n\"What about sex?\" I asked. \n\n\"OK, I'll also agree to let you have sex with me whenever you want. Is it a deal?\" \n\nI laughed and leaned back into his embrace. \"Maybe. We need to work out some details.\" \n\n\"Would you like to sample the product? Ensure its quality?\" he joked. \n\n\"Oh, I've had enough to know its quality.\" \n\nHe put an arm behind my knees and swept me suddenly off my feet and said, \"Then consider this a signing bonus!\" I squealed and laughed as he tossed me on the bed. \n\nPulling off shoes and socks and shirts and shorts, we were quickly tumbling around in just our underclothes. We kissed and laughed and talked. I kept touching his face to make sure it was really Andrew. We were playful and giddy and were rolling around the luxurious king-sized bed Andrew had gotten. \n\n\"Did you expect to have me back here?\" I asked, with reference to the bed. \n\n\"No, I thought there was a 1 in 1,000 chance. But juuust in case...\" \n\nI laughed and tackled him, pressing my lips against his as we went down. \n\nHe pulled away and said breathlessly, \"Gina, it's been over a year and a half since we were together...I...I've been waiting for you...that whole time.\" \n\n\"You and Penny didn't...?\" \n\n\"Oh...no...no, Penny was almost like a child. Her mind was still far away most of the time. It would have been...wrong. Besides. With the nurse there, it might have been awkward.\" \n\n\"Was the nurse at least cute?\" \n\n\"Gina...I've been waiting...for you. My point is...I'm tired of waiting. We can play later.\" \n\nI straightened up and reached around to my back to unhook my bra. \"Well aren't we just Mr. Get-Down-to-Business!\" \n\nTaking off his boxer briefs, Andrew said, \"I can't even think of a joke. Gina, I just want to be inside you so bad! I'm going crazy.\" \n\nStarting to pull down my panties while kneeling on the bed in front of him, I paused, my thumb in my waistband. \"Well, then, maybe that puts me in a good negotiating position...\" I teased. \n\nWith a roar, Andrew pounced on me, knocking me onto my back and pulling my panties off. Huffing and grunting, he said, \"There's only one position you're going to be in right now,\" and started spreading my legs with his knees. \n\n\"And I thought you were out of jokes!\" I said. \n\n\"That wasn't a joke!\" he said, lining himself up with my opening. \"Ready?\" he asked, looking in my eyes, preparing to thrust. \n\nI spoke slowly, \"Hmmm, I might be almost reaaAAAAHHH!!\" I don't think he appreciated my teasing. He thrust halfway in with one motion, then readjusted and pushed the rest of the way in on his second stroke. I laughed out loud for joy. \"Are you happy now?\" I asked. \n\n\"Not as happy as I will be in about 30 seconds,\" he grunted. \n\n\"Awww,\" I pouted, \"then I won't be happy.\" \n\nHe stopped pumping into me and panted, \"Do you want...should I...\" \n\n\"Oh, don't be silly. I'm only teasing, Andrew. You've just never seen giddy, happy Gina before. I can be really silly sometimes. Hurry up and cum so you can relax. We've got...well, how long did you reserve this room for?\" \n\nHe started thrusting hard, holding me at the shoulders so I felt the full impact of each thrust. \n\n\"Just for tonight,\" he grunted. \"When we got...hmmf...to the room...Hnnngh...I called to...nnnngh...arrange for late...mmph...check-out...O God!...2 p.m.\" \n\n\"That's wonderful,\" I said dreamily, imagining a full night and morning with my lover. \"And after that, we have forever.\" \n\nI didn't think Andrew even noticed what I was saying at that point. He was about to hit his point of no return, and if it weren't for his hands on my shoulders, the force of his thrusts would have been pushing my head against the wall. A few more lunges and he came. Yelling, he pumped over and over inside me. He kept cumming inside me until I could feel the dampness start to form around my entrance. \n\nIt only then occurred to me that I had been off birth control since my arrangement with Andrew had ended. I was unlikely ever to conceive, but at least now there were no barriers. \n\nAndrew slumped over me and breathed heavily. \"You really needed to get laid, didn't you?\" I teased. \n\nCatching his breath, Andrew said, \"Yeah, but it was more the emotional rush than the sexual. Gina, I didn't think I'd ever see you again, let alone have the chance to be with you the way I wanted to. So...add that to needing to get laid, and it was pretty powerful.\" \n\nPulling out, he lay on his back, spread his arms, and breathed slowly. \"Give me just a minute,\" he said. \n\nSeeing a chance to talk some more, I began. \"Andrew, you mentioned kids in our future. You should know, I...I probably can't have kids.\" \n\nWithout missing a beat, Andrew said plainly, \"Gina, there's more than one way to bring kids into our family.\" Then he propped himself up on an elbow and looked at me and said, \"I'm sorry, that was a bit insensitive of me.\" \n\n\"It's OK...and, you're right...but I want to tell you that part of my story.\" I went on to tell him the part of my history with Gareth that he didn't know. About how I had gotten pregnant after he didn't pull out like he promised. About how I wanted to try to carry the baby and give it up for adoption. About how he pressured and argued and finally threatened me until I agreed to an abortion. About how I didn't feel like I had much choice. About how we drove hours just to avoid risking someone recognizing him and ruining his reputation. About how he dropped me off at the street, made me walk alone past the protesters and their name-calling, and had told me to call when it was done. About how he wanted to see the paperwork before we drove away, just to make sure I wasn't lying. About how he never called me back after that. About the pain in my abdomen the next week. About the infection. About the humiliating and expensive doctor visits. About how I cried when they told me the extent of the damage. About how Gareth still didn't return my calls. About how I learned he had found a job at another university after that summer. About how the doctor told me they couldn't be sure, but that it looked like I would be unable to ever get pregnant. ",
        "Andrew held me and let me tell my story and cry and yell and curse. He made the same offer Dottie had regarding Gareth's balls, and I knew I should be careful never to let Gareth's last name slip. \n\nWe snuggled under the sheet for a bit, then Andrew suggested a bath. I looked at him, unsure if he was serious, but he said, \"hot tub.\" He really had sprung for a nice room. He went and started the water. I peeked in- it was a luxurious hot tub, easily big enough for the two of us, especially if I was on his lap... \n\nOnce the water was all ready, we stepped in it together and sat down slowly. It was really warm- no surprise, since Andrew loved hot water. We sat next to each other for a while and swapped stories. I talked about Ian a bit, he talked about his life before I knew him. We talked about our first impressions of each other (he thought I was way out of his league and would never take the offer, I thought...well...that he was a cute married guy...and a creep). \n\nHe told me, \"I really expected you to bargain about the frequency of sex, so I started high. When I said at least three times a week, I though for sure you'd push for less.\" \n\nI laughed, \"I didn't even think of that! I was so desperate to get on my feet...I think that the idea of having sex was such an obstacle, that once I got over it, the frequency wasn't an issue.\" \n\n\"Just so you know, seeing how beautiful and sexy you were, I decided I would agree to a limit of no more than once a week, but you never argued.\" \n\n\"I bet you thanked your lucky stars!\" \n\nWe kissed and sat silent, happy to be together. I reached over to see if I could get him ready for action- but he was way ahead of me. He laughed at the face I made when I found him at full attention. \n\nHolding his cock, I moved onto his lap and slid down onto it. We couldn't move too vigorously, for fear of splashing water everywhere. But we could definitely get started. I rotated my hips and moved slowly up and down his pole. We were face to face, nose touching nose, the whole time. I peppered his face with little kisses. \n\nAfter a long while at that gentle pace, as the water was just turning from hot to merely warm, Andrew pushed up off his seat and moved to kneel in the middle of the tub. Leaning back a bit, he held my hips and slowly spun me around, a full 180 degrees, so that he was now entering me from behind. Putting one hand near the side of the tub, he felt around until he located a strong jet of water. Then he adjusted us so that my entrance was being sprayed by that jet. \n\nIt was a new sensation for me, new and enjoyable. As Andrew continued to slowly pump into me, our bodies submerged from the waist down, the water sprayed at my clit. Like Andrew had said earlier, this evening the emotional release was as strong as the sexual one, and I was very ready. My own release had been building since I had sat on his lap in the tub 20 minutes ago. The build-up was slow but constant. A minute under the intense pressure of the spraying water and I grabbed the edge of the tub and came. \n\nMy back arched and bent, moving up and down. My legs squeezed, my hips shook, and my vagina walls pressed hard on the familiar presence inside them. Andrew held my hips and rubbed my stomach. As I floated down from that peak, I leaned back into him, wrapping my arms behind me, around his neck, and turning my face to kiss his. I told him we should move away from the nozzle, which was getting uncomfortable. He suggested the water was also too cold and should be abandoned. \n\nDrying off, we made our way to the bed. Andrew had not completely softened, but had remained semi-hard, still waiting for the chance to cum. We found our way to the bed and turned on the TV. Pulling up a new movie on the pay-to-view channel, we ordered late night snacks and drinks from room service. It felt like a honeymoon. \n\nWith the food still 15-20 minutes away, as the movie started, I put my mouth on Andrew's cock and got it back to full hardness. Leaving enough saliva to make entry easy, I straddled him and sank down on his member. I took him reverse cowgirl so that we could both watch the movie, though Andrew seemed distracted by his view. His hands on my hips and ass directed my speed for a while. I mostly paid attention to the movie, only slightly distracted by the grunts and ooohs behind me. A movie and sex- our Saturday tradition. \n\nWhen I realized that over ten minutes had passed and that our food would arrive soon, I paused the movie and leaned all the way forward, putting my forearms on the bed in between Andrew's feet. Then I started bouncing my hips, pumping his cock as fast as I could. He groaned and said, \"Yyeeeessssss!\" I felt his hips try to thrust up to match my down thrusts. Once we found a rhythm, it only took a few seconds for Andrew to find his release...just as room service knocked. \n\n\"Just a minute, please wait!\" I shouted loudly as Andrew's seed filled me. He strained to stay quiet. I gave him the time he needed to finish, then hopped up and found a robe so I could answer the door. I got our food and drinks, smiling innocently at the young lady delivering them. \n\nCrawling up next to Andrew, I gave him a kiss on the nose and resumed the movie. I had to immediately pause it again to explain all that he had missed in the first ten minutes. \n\nWe went to sleep after the movie, and it was so nice to feel him next to me again. We made love in the morning before breakfast, then wandered around the grounds for a while. We enjoyed one more quickie before checking out. We got ready to head back to reality, but for once in our lives, that was not a bad prospect at all. \n\n******* \n\nDottie was shocked at our engagement. She wanted to have a long, serious talk with Andrew. He nervously complied. They became good friends after that talk. But first she background-checked every piece of his story. I wasn't surprised when everything checked out. \n\nI told Andrew I didn't want to quit my job. He was fine with that, but he insisted I move out of the shelter and in with him. We rented out the townhouse for extra income and bought a house far enough away from city lights that it had a good night sky. \n\nOh, this would be a good time to mention something that happened when I was counseling one of the pregnant girls that had come to us. Joelle came to the crisis pregnancy center a few months before Andrew and I got back together. She was 19 years old, 11 weeks pregnant, and scared to death. She didn't want to have an abortion but also didn't want to risk her baby ending up in a horrible home, like her foster home had been. I met with her several times, and she was planning to abort her baby to protect it from a bad home. \n\n\"I'll take it!\" I blurted out. At the time, I was still single, but I figured we could find a way to make it work- legally and practically. Joelle loved the idea, and we got the lawyers involved. Dottie laughed and said she wouldn't call it a rookie 'mistake,' but it was definitely something newer counselors had a habit of doing. \n\nI said I realized I was projecting a desire to fix my past onto this girl who reminded me of myself. Dottie corrected me, \"You never fix your past, Gina, that's just foolishness. Your past will never change. But you can do something, you can redeem your past. You can buy it back out of whatever hell-hole it has slipped down into by making it a part of a better story. You take that little child and love it, and you'll be redeeming your own past in a beautiful way.\" Her words always made me feel warm. \n\nWell, once Andrew was back in my life, he loved the idea of adopting Joelle's child. I knew he would. Andrew and I married a few weeks before Joelle gave birth to that beautiful baby boy. I was with her in the delivery room and held him after Joelle had a chance to. Andrew, waiting impatiently in the next room during the birth, cried happy tears when he finally got to hold our son. We named him Ian. \n\n******* \n\nSo that's what became of Andrew and my strange arrangement. We exchanged it for a slightly different, much better one. Andrew and I still have our shadows and sometimes it's not easy to see past them, but he's my shining star, and we're trying to fill up the sky with light. \n\nThere's probably a lot more I could say about it. We've been married for a year now and have had plenty of time to reflect on it. But I need to go soon, I can hear little Ian getting fussy. Andrew is on the couch with him (yes, that couch), trying to get his belly full so we can go out for our anniversary. Angelica promised to come babysit tonight, as long as she could bring her boyfriend with her. I think she hopes he'll get baby fever. I made her promise no sex until after Ian was asleep. \n\nAndrew quit his night job at Willow Bay, of course, and he hired a great general manager for the shop. As the owner, Andrew only needs to be there a day or two each week, which frees me up to keep going at my job as long as I can. \n\nI'm in my recliner right now, looking up at the stars, thanks to the huge skylight Andrew insisted on having installed in our bedroom. I like it so much, I'm hoping we can put one in the second nursery- the pink one. \n\nIt takes a little effort to get up from my seat, but somebody is busy kicking my bladder, and that gets me moving faster. The doctor says it's a girl, due in 2 months. We've already picked a name- Estelle, our little star. \n\n***** \n\nThe End \n\nWhile \"A Strange Arrangement\" ends here, the stories won't. Andrew and Gina will pop up in the stories of Ian, Dottie, Angelica, Steve, and just about every named character from the series. Some of those stories will end up in other categories (Inc/Taboo, First Time, etc., so you'll need to keep an eye on the author's page). I've mapped out the trajectory of almost all their stories, but please let me know in the comments whose story you'd like to read first, so I can decide which ones to start writing!"
    ],
    "authorname": "nageren",
    "tags": [
        "reluctance",
        "drama"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-strange-arrangement-ch-12"
}