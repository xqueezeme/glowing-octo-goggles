{
    "title": "License to Kill",
    "pages": [
        "It's been a while since I last completed anything -- the pandemic has gotten to me more than I would like to think. However, this story came out of the blue and I actually wrote 12k words in one sitting. Once the idea was there, it just flowed out.\n\nI don't actually know what this one is really about, it just... is.\n\nI did try and write this in the British Vernacular, so the dialog is peppered with Britishisms (at least, what I remember; I haven't lived back home in over thirty years now, so my idioms might be a bit out of date.)\n\nHere's a small glossary to help my colonial brethren.\n\nPrat -- moron, idiot.\n\nFriday Week -- a week on Friday.\n\nPants -- when something is a bit crap, it's 'pants'.\n\n'Hoity Toity' -- imagining you are upper class.\n\n'Manc's' -- short for Manchester.\n\nLife Part 1 -- Rich Livingston\n\nI remember the night I met Clarissa McDonald. I was at a wedding for a college friend, James Dupree. He was marrying the girl he'd been shacking up with the whole time we'd been in college, keeping it quiet from his parents, since they would never have approved of him being in a relationship with an Indian girl. Quite why, no one really knew. It's not like his parents were well off or hoity-toity or anything. They were just your garden variety unspoken and quiet racists, guilty of never having really been anywhere or expanded their world view beyond Bolton, where he came from. They had a little money, - his father managed a bunch of betting shops for a wealthy family who were rumored to be in some slightly dodgy business relationships, but you know what gossip is, particularly at the college level. No one really knows anything, but everyone likes to pretend they do.\n\nAnyway, James had been a friend to me and for a year, he pretended to live with me. Well, he sort of did anyway. He maintained a room in the house I was living in but he was never there, unless The Parents were in town. Most of the time he was round Patricia's house, 'shagging the arse off her', as he put it. Patricia was a lovely dusky Indian girl, Manchester-born and raised, complete with accent. Initially, it was a bit disconcerting, hearing a Mancs accent coming out of a girl in a sari, but once you got past that, she was quite lovely. Friendly, outgoing, not at all ashamed of who she was, where she came from, or anything really. We were all a little bit in love with her I suppose, at one point or another. But she only had eyes for James.\n\nAnnnnyway. Yeah, so they were marrying. A relatively big do, in Manchester, and I was invited. It was, oh, three years from graduation? I think we'd have all been around twenty-five or twenty-six or something. Something like that.\n\nI was living in London by then, starting my career as a financial analyst, on the ground floor. It was tough going; London is a wonderful city, full of exciting things going on and it's terrific, if you've got money. If you don't, well, it's like a buffet full of amazing stuff to eat that you can't touch. I was living in a ground floor flat in East London, just off the East Ham tube station. Very Indian area, but the people were nice and it wasn't that rough. Plus I liked a good curry and there were LOTS of those style restaurants around. My choice of career was less about a passion for the industry, - although, who doesn't love money? -- and more about what I felt I could easily get into and make a success at, that had at least some chance of financial success at if I put in the effort. Creative endeavors were never really my thing since I just don't have that gene. I can appreciate a good book or song, but I wouldn't even know where to start in terms of creating one. But I was good at being able to take information and stats and organizing it against a set of rules and then judging what the information told me.\n\nYes, I was one of those boring people who not only understood what the statistics professors were talking about, but could imagine it in their heads. Going into the money markets was pretty much inevitable for me. It was either that or being an economist, and I could never actually understand who paid an economist for their understanding? I mean it's great to understand the why of why the numbers end up being what they are, but who actually pays for that knowledge? I figured economists made money off writing books about economics more than anything.\n\nI was still single, \"preferring to play the field\" as I loftily told people who asked, doing my best to mask the fact that I just couldn't seem to get a relationship to stick. It's not like I was particularly ugly or fat or stupid or had bad personal hygiene or couldn't dress myself. It was more like I just sucked at the relationship part. I didn't know the right questions to ask, or have the right interests, or, well, I don't honestly know, to be frank. If I knew, I'd try and change it. I never really had the courage to ask any of the girls who I dated more than once what the problem was. Pride, I suppose. Who wants to ask girls why they decided to dump you? That just seems like a path to depression and humiliation.\n\nI'd had my share of sexual experiences, some better than others, but I never seemed to have the same kind of thing happening to me that some of the other lads in the office used to boast about on a Monday morning. I strongly suspected that some of them were making stuff up, but even if fifty percent of them were, the other fifty percent were doing things that never seemed to happen to me. No lonely women picked me up when hitchhiking to the Glastonbury concert, and then pulled off the motorway to do unspeakable things to my body. No, I just sat on the train, staring out the window and trying not to listen to some idiot making a very loud phone call, like everyone else. I never ended up locked in a rich woman's flat in Chelsea during a power cut, where she put out candles then disrobed slowly, tantalizing the guy telling the story, before making him see stars. I just sat in the dark looking at twitter on my phone, while the battery slowly died, that night.\n\nAnyway, I don't want it to sound like I was, -- or am, -- a loser. Far from it. I had my adventures. I went downhill mountain biking in Scotland with some friends. I went on a tour of France on a motorbike with other friends. I even had a sideline, selling photos and videos to Shutterstock -- you know the sort of thing. A woman looking at a laptop, a guy making an omelet, the white cliffs of Dover. The sort of thing that websites buy when they need stock images. While they don't sell for much, if you have enough of them, you'd be surprised how much you can make a month for relatively little outlay. A decent camera, the time to set stuff up; you'd have to be a pro photographer these days to do this. And I'm far from a pro. I do this purely for the money, not because I'm any kind of artiste with a camera. It's purely a sideline that pays my car payment when I have a good month.\n\nSo yeah, I have friends, I get out, I have my hobbies. Just not massively successful with the ladies and to compensate I'm spending a lot more time at the office, trying to get a leg up on the competition. As I explained to people who really pried, \"I don't have time for a full-time relationship right now. Establish the career first, then relationship later, when I can devote time to it, appropriately.\" Yeah, it's all complete pompous bollocks, and I don't think anyone really bought it either, but it was at least an answer without me looking like Billy-no-mates, and I could then change the subject.\n\nSo there I was, Richard Livingston, twenty-six, sitting at the bar at this wedding, itching the collar of the slightly-too-tight shirt and desperately wishing they wouldn't water down the drinks quite as much as they were. Open bar, -- inevitable really, but still. They weren't serving pulled pints and as such, I had decided to move to bottled beer from the gin and tonic I was drinking that I wasn't sure had even been in sight of a gin bottle, let alone had the contents of the bottle touch it.\n\nI wasn't part of the wedding party; James and I were friends, but not that good friends, - and while I knew a fair number of people there, James' circle of friends had enlarged a fair bit and I didn't have that much in common with the other university people I did know. We'd done the whole \"Oh, what are you doing now?\" questions, with all the pretend fascination that people express, and then been lost for stuff to talk about. Some of them had gotten married, one set had kids, just... no commonality to talk about. I ended up at the bar, sitting there in this monkey suit, smiling falsely at everyone and wondering when I could leave decently without it being seen as 'a poor show' by the poor sod who just got hitched.\n\nI was just consoling myself that at least it wasn't a full-on, three-day Indian wedding, and asking the barman for a bottle of Stella Artois when she plonked herself down on the spare stool next to me. I glanced at her and had to force myself to look back at the barman. I mean, talk about knockout. Once you start looking, it's hard not to stare. And for once, I was going to play it cool. Sure I was. I wasn't desperately trying not to look like a goldfish out of the bowl, not me. No, cool, calm and collected. That's what I was. Suuurrrrre.\n\nClarissa Anne McDonald (I would learn of the Anne part later), had shortish brown chestnut hair, very silky and full. I mean, just the hair alone looked like it had just walked out of hair advert. Wide cheekbones, full red lips, wide smile, which usually showed lots of perfectly aligned teeth. Smaller eyes than you would have thought, and pencil-thin eyebrows, but she pulled it off. Definitely someone you'd look twice at. Three times, in fact. Maybe even four, if she didn't catch you at it. She had the ability, when engaged with you, to give you her full attention. She didn't glance around, or fidget, or have body language that wasn't engaged with you. She faced you full-on, paid attention and watched your eyes.\n\nOf course, now I know why, but back then it was a new thing. She could make you feel like you were interesting. Worth her time. I mean that was a massive ego boost for me when she deigned to focus her attention on me.\n\nShe ordered a gin and tonic, and I winced when she did so, and she said, \"What's up? Is the gin crap or something?\"\n\nI leaned in, even though it wasn't noisy, and whispered, \"Get a double. It's watered down.\"\n\n\"Ahhh,\" she replied, tapping her nose in the age old, 'I understand' move. \"Gotcha. Will do. Thanks for the tip.\"\n\nShe ordered and then swung around on the swivel stool, stocking-clad legs crossed over each other, the tight green sheath dress she was wearing rode up a little, and as I look back now, I'm pretty sure she knew it.\n\n\"Hi,\" she said, offering her hand. \"I'm Clarissa. But if we end up friends, you can call me Risa. Most people do. Clarissa is just terribly snooty, don't you think?\"\n\nThat was a hard one to answer correctly. On the one hand, agreeing with her that her name was snooty was not the way to a lifelong friendship. On the other, disagreeing with the first conversational tidbit offered, wasn't the way forward either.\n\nSo I just hedged. \"I'm sure your parents liked it?\" I am nothing if not a little conniving when it comes to conversational gambits.\n\n\"Oh, very good,\" she smiled. \"Quick on your feet then. I like that.\"\n\nI learned very quickly that Clarissa was all about the conversation gambits, and testing people to see their reactions. Honestly, later on in life, it led to some spirited 'discussions', where I had to keep telling her that our friends were not test subjects for her theories and mind games. Particularly not me.\n\nI had thought that I was pretty good at seeing through them, understanding where they came from, and could head them off at the pass, but, ultimately, it would be proved that she was far better than I could have possibly imagined, and all I saw was the levels she wanted me to see. But I'm getting ahead of myself. Let me tell the story in my order, my way.\n\nTo cut a long story short, we talked for a while. She explained she was a distant cousin to James, there wasn't much family she had left, and so what was still around she felt it was important to be there for 'the events', as she put it. She was a trained psychologist, or, at least that's what her degree was in. She'd got a first from Cambridge, and then gone to work for a multi-national corporation called Xerex International, totally ignoring what her degree was in. She at least wrinkled her nose ruefully at that. She was now twenty-nine, three years older than me, and she was a 'roving trouble shooter', whatever that meant. She explained it as 'part business analyst, part personal analyst, and part ruthless bitch'. The company was a holding company that owned several other businesses, doing different things in different countries. In Spain, they built houses and insured cars. In France, they made tractors and installed lifts in high-rise buildings. In Switzerland, they made water purification systems and air conditioning systems for businesses. In England, they had publishing houses and imported coffee. In China, they ran a telecoms business and owned casinos. In Australia, they built luxury yachts and supplied farming equipment. It was all extremely eclectic and across the expanse of possible businesses, and she smiled and shrugged and said, \"The whims of the super-rich!\"\n\nHer group was a task force that looked for business units that weren't fulfilling the potential the partners had decreed, and they went in to do a deep analysis of the business, how it operated, who was doing what and what partners they were working with. They didn't so much look at what the business was, - as Risa put it to me, \"Like I'd know one coffee bean from another. I've got no idea what would sell or not. I drink tea!\" (which turned out to be another lie, but not one I'd find out for years), - more how the business actually worked. How one process led to another. What bits went where, and why. And then they'd look at the people doing the work to assess if these really were the people who should be doing that work. And then they'd take it all apart, and rebuild it, bit by bit, putting the people who should be doing the specific things in the right place. It was business analysis in its purest form, not concerned with the product, only the process to get to the product.\n\nGenerally, she confided in me, the places in the businesses they'd been into saw a fifteen,- in some cases, - to thirty percent jump in income within the year, after they'd been 'optimized', as she referred to it. If they didn't, they were either shut down or sold off.\n\nBut. The price to pay for all this wonderful experience was that her team went all over the world, traveled a fair bit to do their initial analysis, so as a result, she was single. As she explained, looking into my eyes, \"Career first, fella later.\"\n\nUncharacteristically, I snorted at this. Almost the exact same words I used to justify my single-ness. However in her case, probably true.\n\n\"What?\" she asked, clearly concerned about my response.\n\n\"Look. Just look at you. You could have any guy in here,\" I answered, telling the absolute truth as I saw it. \"'Career first',\" I said, using finger quotes. \"I know what that means. Hell, I tell people that all the time.\"\n\n\"What does it mean to you?\" she asked, putting her drink down and looking at me, unblinking.\n\n\"It means you probably can't hold a relationship together because of all the traveling, any more than I seem to be able to.\" I was fairly sure that wasn't true. The way she looked, everyone else would do the holding of a relationship together. She'd just have to be there.\n\nNow, this is not my normal reaction, but then this wasn't your normal interaction anyway. Beautiful women don't suddenly start talking to me and sticking around like she was, so I figured it was all some set up by James or someone anyway, so what the hell? Why not be honest?\n\n\"So, why don't you think you can hold it together, Richard?\" She asked, picking the drink up again, and then playing with the straw. Another one of her little mannerisms I would become intimately familiar with. She always did this when she was asking something she didn't already know the answer to.\n\nI shrugged. \"I don't know. Don't know the right things to say or do, I guess. You'd probably have to ask the women I've no doubt disappointed to find out.\"\n\n\"And yet, you don't seem to be blaming women? Not any kind of Incel reaction?\"\n\n\"Incel?\"\n\n\"You know. Forced Celibacy. The whole 'I can't get a date, therefore all women hate me, so I'll hate them back' thing.\"\n\n\"Oh god no.\" I laughed, genuinely amused by that. \"Women kind are nothing if not discerning. Well, most of them anyway. No, I just figure I've not met the right jigsaw piece that fits in with mine yet. Just... an accident of time. Maybe my connection part is an odd shape or something.\"\n\nI winced when I said that. So many bad ways that could be taken.\n\n\"An accident of time. I like that,\" and then she gave me a dazzling smile, and goddamn if I didn't start to get hard.\n\n\"Okay, well, Richard Livingston, give me your phone.\" She demanded.\n\nLooking at her, I raised an eyebrow, and she gave me a mock glare and made a 'come here' gesture with her outstretched hand.\n\nI gave her a half-faced sardonic smile, and pulled out my iPhone, unlocked it, and handed it to her.\n\n\"Good,\" she murmured, then took a picture of herself, -- several in fact, before she was happy with one, - and put her details in as a new contact, and handed the phone back.\n\n\"I'm in town till Sunday week. Call me and let's do dinner. Let's see if you really are un-dateable, or if you just need some pointers. I'm always up for a challenge!\" Which was a truer statement than I could have possibly imagined at the time.\n\nAnd that was how I met Clarissa McDonald.\n\nTo cut a long story short, we clicked. Very clicked. The date, -- at the Hawksmoor steakhouse at Seven Dials in London, -- went way better than I expected, and was followed by another one, the next day, at a place she knew that was a mix of sushi and broth boiling. Each person sat at a station, where they got a boiling broth, and then they took things off plates on a conveyor belt to put in that broth and cook. Like a sushi place where small tidbits go round on the conveyor belt, only this was all raw stuff, that you then cooked yourself. All very clever and fun. We had a great time feeding each other with chopsticks, of which she was quite the expert. As well she should be, as she explained. She'd spent two months in Shanghai, working on a business building swap between business units in her company.\n\nShe then left for two weeks but the moment she got back, she called and we went out again. And again. Of course, the dates got a little mundane; you can't keep up that level of either cost or uniqueness in every date, and we didn't. Some nights it was just pub quiz time, others a take-out at home. I got to see her place and she got to see mine. Hers was way nicer than mine, on the eighth floor of a nice tower block, near Tower Bridge. Must have been horrendously expensive but, as it turned out, it was a cheap rent because the building was owned by her company. Of course.\n\nShe never complained about the journey out to mine, all thirty minutes on the District/Met Line and we tried to split time between our respective places equally.\n\nWe also tried to get away too. Weekends in Dorset or Cumbria or Kent, even a couple in France, where I discovered she was fluent in French.\n\nNow I look back on it, I am amazed how both how unobservant I was and also how she didn't volunteer that much. I'd just discover it, as I went along. Like the fluency in French thing. I had no clue, till she delivered a torrent of it at the bell boy in the place we stayed in Paris. Apparently, he'd been rude under his breath in French, and she'd picked up on it, and threatened him with being reported to the management. Now I consider what happened with what I know, how I didn't question the fact that in all our planning, all the traveling we did, it just never came up that she spoke French like a native. I never thought to question that fact. I just rolled with it, and chalked it up to another pleasant surprise! We were learning about each other, and there were new things to learn! How great is that?",
        "Not so great, as it finally turned out.\n\nAt the time though, it just went past me. The euphoria of a successful relationship at last! And with such an incredible hottie! I flattered myself that the waiting had paid off. That saving myself was the right thing to do. That the other girls indeed had not known what they were missing. What delusions we tell ourselves, when things are going well, eh? I knew damn well deep down what a crock of shit that really was (what a delightful phrase that is. One of the few I've adopted from our cousins over the pond), but I wasn't going to look that golden goose in the teeth too much, confused metaphors aside.\n\nMy family loved her. Mum and Dad, who were pretty doddering by then, since I'd come along late in life, thought she was great. I'm sure there was some unspoken worry on their part about me being perpetually single, but I just ignored any hint of that on their part. I was an only child, so no worrying about siblings liking her.\n\nI only met her mother twice, before the wedding. She was some matronly lady who lived in Herefordshire, near Wales. She lived alone; her father had died some years back and Clarissa was an only child too, so we had that in common too. Neither of us had to share our toys. I got the impression that she wasn't wildly impressed with me, but she made it clear that she supported Clarissa, and if I was her choice, then she'd go along with that. It didn't make us bosom buddies, but she wasn't about to make waves.\n\nShe made it to the wedding but died shortly after of a brain hemorrhage. Clarissa just took off to deal with everything and was gone almost three weeks emptying her mother's house and arranging everything. Still, we got enough inheritance to buy our own place out in Rickmansworth, northwest of London. It was a bit of a commute into the city proper but the house was ours, and we loved it. Semi-detached house, a bit of a garden, three bedrooms, dining room, kitchen, separate living room, lovely bathroom, a downstairs bathroom and even an attached single car garage. Yes, not huge, but it was ours. I kept making jokes about how one of the bedrooms was ready to be a nursery, but it was only a joke. We'd both said we wouldn't start for kids till our middle thirties, which seemed a bit late to me, but I was prepared to go along with whatever she wanted. While I wanted kids, I wanted Clarissa happy more.\n\nWe were happy. I mean, I know I was. I think she was. Knowing what I know now, I could never be sure. But I think she was. I choose to believe it. Otherwise, the entire thing was a sham. Well, it was a sham, but I have to believe parts of it weren't, or I'd go insane.\n\nI'm trying to find ways to show you what our life was like so you can understand how much of what happened came out of the blue for me. I was metaphorically fat, happy and dumb. We'd have our weekends and read the papers online, and send each other links to stories we'd read in the mornings, and then talk about them over lunch, or as we went for a walk.\n\nWe went away for weekends. Our 'dirty weekends', as she put it, with a comic leer on her face. She even made us book into a hotel using different names once, so everyone would think we were cheaters or something. Now I mention that, I wonder if that really was the impetus on that, or if it was something more sinister.\n\nShe'd travel a lot, and be gone for weeks at a time. A couple of times she was gone for a couple of months. I would hear from her sporadically when she was gone. She'd made it clear that her job was her job, and it was there and I had to understand it wouldn't change if we were together or married. When she was 'In Country', as she put it, her whole attention was on the job, what she was doing, and she would contact me when she 'came up for air'. I could understand that. While I was elbow deep in the financial aspects of being a market manager, I would also gain singular focus. It just wasn't for the duration that she had it. I just chalked it up to her career, and let it go. It was either that or force a decision on her that I wasn't entirely sure would go my way, if I really made it a 'Job Or Me' thing. Besides, if we were going to have kids, then it would all have to change anyway, so it didn't seem smart to force the issue too much. I did make disapproving noises every now and then, and it got me some great guilt sex, and some pretty awesome gifts on her return, - she bought me a new racing bike and a training stand once, which was awesome. I'd been salivating over one of those for years, but just never had the capital on hand that I could plonk down on it and not feel guilty about spending that amount. While I worked advising other people on their money, the kind of advice I was handing out was for people who had so much of it, so it didn't really translate to my kind of income. I did okay, for sure, but it's not like I was pulling in the big bucks. It takes speculation to accumulate, and you generally had to speculate on a level I wasn't anywhere near. Plus, her bonuses were often pretty good when she got back, so I took the rough with the smooth, you know? Didn't rock the boat too much.\n\nWhen she was gone, I'd find stuff to do. Weekends on the bike in Scotland or Wales. I even went and did some of the Tour de France route once, with some friends. Never doing that again. Those athletes who do that are extremely fit, and I am less so, and this excursion proved that day after day. I just took solace in the fact that everyone else in my group was as knackered at the end of the day as I was.\n\nIt was over four years since we'd been married, and five years since we'd met at James' wedding, when it all went tits up. When I discovered exactly how unobservant and just plain stupid I really had been. How misled and delusional I was. And the implications, well, I'll tell you the story and you can judge for yourself.\n\nI was never suspicious of Clarissa. I'd met various people from her work a few times. Parties, Christmas events, a retirement celebration. I knew the receptionist at her office space, in Knightsbridge, since I called so often. While Clarissa had a cell phone, she wasn't allowed to use it during the day. She actually had two, one for work and one for her. She explained that the company had real security issues and so her work phone was specially secured, and the personal phone was a security risk, so it had to be turned off and left at the main desk when she went to work, so all communication was either over skype or via landline calls when she was in the office. When she was abroad, she just left her personal cell at home entirely. That's why I usually had to wait for her to call me.\n\nAgain though, explaining that, I realize how stupid I was. I mean, who really works for a company as a business unit analyst that is not allowed to take a personal phone with them when they go abroad for business?? I mean, come on. But at the time, I didn't think twice about it. This was an area of business I knew nothing about, and this was Clarissa. This is what she told me, so I believed her. That's what husbands do, right?\n\nHer work colleagues seemed friendly enough. I did realize at some point that I'd never actually seen the inside of her office space, but again, just didn't really think too much of it at the time. I was hugely proud of my Go-Getter Wife, who was a big-time jet-setter. She'd send me selfies from her work phone of herself in the first-class lounge at Heathrow, or at the bar of the A380 she was flying on, or whatever, usually once she got home. She was going places and doing important things, and I got to bask in reflected glory, at least I thought so.\n\nThis is not to say everything was perfect. It wasn't. We had our fights and things that irritated us about the other, as everyone does. I grumbled about her traveling, and like I said, she tended to keep things close to her chest. I'd find out about plans she'd made the day we were going to do something, and sometimes that caused major conflict, because I'd have arranged to do something else. One time it happened, and I'd just had enough, so I left to go and do my thing, plastic snow skiing, I think it was. She was due to travel the next day, and I just left, and she got pissed and left herself. No note, no phone message, she was just gone, and I didn't hear from her for ten days. My pride and anger stopped me from even trying to leave a message at her work, and it's not like she reached out either, at least not for ten days.\n\nShe'd get mad at me for never doing the washing up. She'd come home to a tip of a house after being away, and then launch into me because of the state of the house. Like it wasn't enough that she was tired, jet-lagged and beat, no, now she had to clean the house before she could even sit down in it.\n\nI bought a car without talking to her first, an old fixer-upper that I planned to work on, on the weekends, and that caused her to first go ballistic, and then for her to buy a selection of handbags and shoes that caused my eyes to water, once I saw the receipts for them. We did still have our own accounts, and one for where we put the majority of the money for house stuff, but still, I did start to wonder how much she had in her accounts, because she dropped over fifteen thousand pounds without pausing for a second, and I'd had to save for months to get the money for the old Jag I'd bought.\n\nOne other thing that really wound me up was a holiday we planned for Madrid got called off at the last minute. I had always wanted to go there, - to be honest, I really wanted to do a biking holiday there, but I knew Risa would never go for that, so I was fine with just a normal sightseeing thing, and we had it organized and paid for, and literally three days before we were due to go, she comes home, all hangdog, and apologizes that she can't go, we can't go, something has come up, and she'll make it up to me. The company will make it up to us, in fact. For a change, I went ballistic. That was the first time I ever really thought about an ultimatum, -- the job or me. I was angry, and she left on the day we were supposed to go to Spain. She was in Germany, if she was to be believed.\n\nThe company did try and make it up. They bought us first class tickets to New York, and we did spend a week there and then did a tour of Washington D.C. and then drove north, to see the fall colors in upstate New York State, Connecticut and Massachusetts. It was a lovely time and didn't cost us a penny, but still, I still wanted to go to Spain, but it just never happened. Of course, now I know why, but at the time, I was just confused and pissed.\n\nClarissa had a habit of making a decision on something from a gut feel, and then working backwards to justify that decision, reorganizing the priority of facts about whatever-it-was-she'd-decided in order to validate it.\n\nIt was one hundred percent the opposite of how I work, given what I do for a living, and it used to drive me up the wall. I could clearly see what she was doing and because I was too wrapped up in my own foibles, I never hesitated to point that out, and it resulted in massive arguments between us.\n\nI still think I was right, but since those times, I've come to understand that being right and pointing that out, - particularly to the woman who is your spouse, when in a situation where she is backed into a corner trying to justify a decision already made (and in most cases, already acted upon), - are not the same thing, should not be confused as the same thing, and in at least fifty percent of cases, it would be just better to shut the fuck up and let it go.\n\nWe all live and learn, I guess. Some sooner than others. And for some, not at all.\n\nSo yeah, it's not like everything was always hunky-dory between us, but we had enough of a connection that we got through it all. We were a marriage. We had love, and love can overcome anything.\n\nWhat a load of crap all that was.\n\nSo, how did it all come apart?\n\nIt was a night out, where we had dinner reservations, of all things. It was Mother's Day, and while I knew she wasn't a mother yet, I had decided it was time for the \"Let's Have Kids!\" project to get a kick in the backside, and I was going to start campaigning earnestly about it. I'd booked dinner at the Dorchester, and a laid out for a room. We were going to have drinks in the cocktail lounge first, then dinner, then perhaps a little dancing, before retiring to the room, where champagne and chocolate-covered strawberries awaited, -- the strawberry thing being one of her favorites.\n\nI'd kept it as a surprise, and packed a bag for her, along with two of what I knew were her favorite cocktail dresses, heels, perfume, makeup bag and all the rest of what a woman needs when traveling to feel like she's not actually traveling.\n\nWe took the tube down into the city, with her smirking and eyes appraising me the whole time, teasing me that whatever it was, it 'had better be good enough.'\n\nWe walked into the Dorchester hotel, and her eyebrows raised, and I finally got a 'well, this might be adequate, then' from her. We checked in, and I explained the plan. She gave me one hell of a smooch that promised much later, and off we went to dinner.\n\nAnd there it went off the rails. At the time, I had no clue what was happening, although it didn't take long before I started to get suspicious, although again, I'm getting ahead of myself.\n\nWe had drinks, then the ma\u00eetre d' called us into the restaurant and sat us for dinner and we perused menus and then, as I glanced at Risa to ask her what she was thinking of getting, and I saw her staring over the menu at someone over my shoulder, her face a pasty white under the makeup. I turned and looked over my shoulder to see who she was looking at, but apart from a party of men being delivered to their table, I couldn't see anyone looking back at us. So I turned to look back and Clarissa to ask her who she'd seen, but she'd raised the menu and her face was now hidden.\n\n\"Hey, are you okay?\" I asked, concerned.\n\n\"I don't know,\" she replied, still buried in the menu. \"I don't feel too good. Rich, can we just take a raincheck? I really don't feel so good all of a sudden.\"\n\n\"Are you sure?\" I asked. This was not normal Clarissa modus operandi. Normally nothing got between Clarissa and an expensive meal. \"We just got here, you were fine a few minutes ago?\" I could see my entire plan, all that time and planning just going out the window. \"Could we sit for a minute? Get you a glass of water? See if whatever it is settles?\"\n\n\"No!\" she hissed from the menu. She lowered it, glanced behind me, and then leaned in. \"I really want to go, right now. Please, Rich. For me.\"\n\n\"Um, okay, well, I need to cover the bar bill...\" I started to say. Clarissa just nodded and was on her feet and turned away, walking directly away from the table and, I noticed, not actually in the direction of the main entrance.\n\nI just stood, half standing, half sitting, as I'd raised myself once she'd made it clear she was leaving, feeling like a complete fool as I watched my wife walk away.\n\nClearly, something else was going on. She'd seen someone she didn't want to see and she was away in the wind, without waiting for me.\n\nI motioned for the waiter, and after waiting a minute, he arrived. I explained my wife had been taken ill, and I needed to settle up for the bar drinks, and he said he'd be happy to take care of getting me the bill, so I could just sign them to the room, and as he made his way to the money station, I looked around at the people behind me, trying to spot who my wife didn't want to see.\n\nAs I was doing so, I was tapped on the shoulder, and I turned to find another waiter, this time the wine waiter, bottle of wine in hand.\n\n\"Sir, compliments of the table over there,\" he said, waving his hand at the table of men who had just sat down. \"Some of our best Merlot, apparently a favorite of Miss Davies? They wish to express their appreciation of her help, and they wanted me to let you know they look forward to seeing her on Wednesday.\"\n\nI looked back at the table of men, taking them in. They had now mostly turned to me, and were holding up drinks in their hands, smiling at me, the time-honored gesture of 'good health'. I noticed they were all somewhat swarthy, with skin that told of time in the sun. If I didn't know better, I would have thought they were Arab or at the least, Middle Eastern.\n\nI smiled apologetically at the wine waiter and said, \"I think there's been some kind of mix-up. My wife is not Miss Davies. She's Mrs. Livingston. So please, return the bottle to those kind gentlemen, and give them my apologies. Just a case of mistaken identity, I'm sure.\"\n\nThe other waiter arrived, and I took the bill from him and the pen. The wine waiter vacillated, and then said, \"Are you sure, sir? I mean, this bottle is like almost five hundred pounds. I'd personally take the bottle if I were you, even if it is a mix-up.\"\n\nI signed my name on the bill, and added a tip and the room number and looked back at the wine waiter and said, \"I don't think that's quite fair, do you? Five hundred pounds is a lot of money for anyone. I wouldn't feel right taking that from those fellas on a mistake?\"\n\nThe wine waiter snorted. \"I don't think they'll miss it, sir. They are all Arab princes, and this is a drop in the bucket for them. They will order four of these with dinner.\"\n\nHang on. Arab princes are Muslim. Muslims don't drink.\n\nI looked doubtful. \"I thought Muslims don't drink?\"\n\n\"Well, normally, sir, they don't. But when in Rome, most of these princes behave, well, let's just say they try and follow the local customs, and leave it at that.\"\n\nI got the picture. Pious at home, but the moment you aren't at home and eyes aren't on you, all that restrain goes out the window. Yet more religious hypocrisy. What a surprise.\n\n\"Yes, I get it. Well, either way, this was not Miss Davies, and if you'll excuse me, I have to go find my wife,\" I replied standing and making a salute gesture to the table full of Arabian hypocrites.\n\nI walked out of the dining room, went to the lifts, and went back to the room, expecting to find Clarissa there. She was not present, and that's when I started to entertain the concept that everything was not okay, and something else entirely was going on. I mean, she'd seen them, done a runner, and now they were talking about someone called 'Miss Davies'. I desperately didn't want to connect these facts, but even a blind idiot like me cannot miss something like that when it's waved in his face. But even then, I was trying to deny it. Trying to find some way it was all just mistaken identity. Confirmation bias at its finest.\n\nOf course, I did the one thing anyone would do. I called her mobile phone. It went straight to voice mail, meaning it was either off, or she was possibly in a place with no signal. The underground, for example. When I tried the Find Your Phone app, same thing. No response from her phone. But, interestingly enough, it did have her last position as here, at the hotel. Which meant that she'd turned the phone off directly, if she wasn't on the tube.\n\nHmmm. What to do?\n\nOf course, there were other questions. Why had she left entirely? Why not just go to the room? If you aren't feeling well, you don't get on the tube and spend most of an hour getting home, not when there is a hotel room right above you that's already paid for.\n\nIf she wasn't sick, then where was she? Why did she leave? I mean, clearly, she'd seen those men, and didn't want them to see her, and left. So what was all that Miss Davies crap about? And Wednesday?\n\nWhile Clarissa did sometimes have to work late, and occasionally weekends, it didn't happen that often. And times when work came up unexpectedly and she had to go into the office didn't happen often at all. It had happened a few times, but in four years of being married, it was probably less than ten times in total. I didn't know anything about something happening Wednesday? If she was indeed the 'Miss Davies' they believed her to be. And obviously, there was some connection. Unless it wasn't them she was leaving to avoid, and they mistaking her was a pure coincidence. But how much did I honestly believe that vs how much did I want to believe that?",
        "I sat at the table in the room, staring at the preplaced bottle of champagne in its ice bucket, and the plate of strawberries covered in chocolate, wondering what the hell was going on, and trying to decide on a course of action. I could go home, or stay here, waiting to hear from her, or... well, in fact, thinking about it, I didn't actually know she was going home. I assumed, because her phone was off, that she was on the tube. I mean, where else could she be going, dressed in a cocktail dress, on the spur of the moment?\n\nI must have sat there, mindlessly refreshing the Find Your Phone app, with scenario after scenario going through my mind, trying to explain what I knew of the situation and her bizarre behavior, for almost three hours.\n\nAnd then she suddenly popped up, at home. The phone placement suddenly jumped. And I knew then that she'd turned her phone off because I hadn't seen it earlier, as I would have as she was making her way home from the tube station. She'd deliberately turned the phone off, so she wouldn't have to talk to me. And I then couldn't be sure that she had actually gone home via the tube. After all, it was three hours. The tube takes three-quarters of an hour, with changes, and then a quarter of an hour walk at the other end.\n\nNo, it was likely she'd gone somewhere else first. But where? The office? That was local, but why? Why would you rush off to the office in a cocktail dress on a Sunday, when no one would be there anyway?\n\nWhat. The. Hell. Was. Going. On?\n\nWell, time to find out. So I called her, and she answered.\n\n\"So... home then?\" I said, without preamble.\n\n\"Yes, I'm sorry. I needed some air. I needed to just sit outside somewhere, to clear my head.\"\n\nWell, that explained the three hours. In a pig's ear, it did.\n\n\"So, you sat in a park, in your cocktail dress, for two hours, and then what, took the tube home?\" I asked, flatly.\n\n\"Well, I know it sounds stupid when you put it like that,\" she started, \"but yes. I just came over all wobbly and had to get out. The thing is, I knew what this was all about. I knew the topic of conversation you were going to get to. You were going to ask me to have a baby, weren't you?\"\n\nNow, I wasn't expecting this. I thought I was being all circumspect and mysterious, and was going to approach the subject slowly, but apparently, I'm easier to read than I thought I was. Which threw me off my game. She was being accusatory and I had to respond.\n\n\"That might have come up,\" I hedged. \"The weekend wasn't just about that, but that probably would have been a topic at some point.\"\n\n\"Right. Some point. Sure,\" she replied, slowly. \"Look, I'm not sure I'm ready for that. And I just knew this was where this was going. I had a light-headed moment, and I panicked. Okay? Is that what you want to hear? I panicked. I didn't know how to respond. It's such a huge change to my -- our -- lives and I wasn't ready for that conversation. So, I left, to go sit in a park and watch families and think about what I wanted. I'm sorry. I turned my phone off, and I just sat, thinking about our future.\" She wasn't quite whining, but she wasn't far off it.\n\nThe thing is, it was entirely plausible. It was well within Clarissa behavior patterns. I could see this. Except for all the bullshit about wine, Miss Davies and Wednesday. Which, I realized, she had no clue about. She'd already left. Her story as presented was absent that knowledge.\n\nFor the first time ever, I started to contemplate that all might not be copacetic inside my marriage. Because either I was imagining things, and I'd just had the most amazing set of coincidences ever, or I was being lied to and gaslit by my wife in a truly epic way. In a way, I would have bought hook, line and sinker if I didn't have this other stuff going on that made me question it.\n\nSo, what did I do?\n\nWell, in my occupation, when you don't have enough data for a conclusion, you get more data. I needed more data. And in this situation, it would be pretty easy to find. Wednesday. That was the key. Follow her around, see if she left her office, or if she called me, telling me she'd be late. If she did, and she went somewhere those guys were, or if they came to her, well... that would confirm there was an issue. Of course, if they didn't, or I didn't see them, then yeah, that wasn't proof that nothing was going on, but still, one thing at a time. This was one lead I could follow.\n\nListen to me. I'm sounding like a cheap nineteen-eighties American cop show. \"A lead I could run down.\" How's that going for you, Mr. Rockford? All I needed was a Gran Torino in Mars Red, with a white stripe down the side, - which, by the way, is the stupidest car for undercover cops to be driving in LA. I mean, come on. Stick out much? -- and a partner with a perm, and I'd be all set.\n\nIn which case, I decided to just not mention the wine or Miss Davies, or Wednesday, and just made noises on the phone that sounded like I bought her story. That I totally understood. That I was just worried about her. That I'd pack up the room and come home.\n\nAnd if it all turned out that it was true, that I was imagining things, then this was definitely the smarter move anyway. And as it was, I must have reassured some other people too, because if I hadn't, I doubt things would have gone the way they did.\n\nShe was very apologetic, about how I'd spent time setting this up, spent the money, and she'd mucked it all up with her reaction, and how she promised we would have that conversation, when she got her head around it, but in the meantime, if I hurried home, she'd make it up to me. If she was bullshitting me, she was doing one hell of a job. But then, as I reflected, if she was, then she was one slick liar and totally not above using sex to smooth things over. Which, if true, totally redefined our relationship as far as I was concerned.\n\nSo I packed up the room, taking the bottle of Champagne with me, along with the strawberries, hoping the chocolate wouldn't melt while I sat on the tube train, and went home.\n\nAnd, as promised, when I got there, I was suitably entertained by a contrite wife who was all set on making me as happy and as sexually satisfied as she possibly could.\n\nThe next few days went slowly. I had no one to talk to about all this; it was so weird and stupid that I just didn't want to put it out there for anyone to comment on, and I didn't want anyone to just tell me I was being stupid. I felt that enough already. But at some level, I also knew that something wasn't right. Well, knew is a strong word. Felt is a better one. I just felt it in my bones. Something wasn't on the up and up, and I needed to just look into this one thing, so I could restore some equilibrium in my life.\n\nAs a result, what preparations I did make, I made alone. I suspect this is what allowed me to get as far as I ended up. You'll understand what I mean in a bit.\n\nThe one thing I did know was to not take my phone with me. As much as I could track Clarissa's personal phone, she could track mine. It wouldn't do to have me show up outside her office building. In the end, I bought a throwaway clamshell phone and redirected my number from my iPhone to the burner phone, so if she called me, it would still get me.\n\nI took the day off by calling that morning from the burner, and then bought myself some clothes I would never normally wear. I actually bought bike messenger clothes plus one of those bags that goes around the torso that couriers use, and grabbed one of my mountain bikes. Then I bought a children's set of walkie-talkies and mounted it on a reflective vest, and then left early on Wednesday, before Clarissa got up. I took the bike downtown in a cab, much to the amusement of the black cab driver, and then, after dropping my phone off at my office, biked to her office, taking up residence in the coffee shop opposite. In my skintight suit, big helmet, bike bag and reflective vest with walkie-talkie and my big old sun glasses, I looked nothing like the man I usually did. No one would clock me and I was hoping Clarissa wouldn't when she showed up.\n\nI did get a phone call from her while I was waiting. She was concerned. I had left without saying good morning or goodbye, and she was wondering what I was up to. I explained I had an early meeting with an investor in Japan and she just said she understood. And then my blood went cold when she mentioned she may have to stay late, there was a meeting she had herself that may run over. Could I get some Chinese in that evening, and she'd call as soon as she could.\n\nI saw her enter the building about twenty minutes later. And then her phone position went dead, as it always did when she went to work.\n\nI came and went from the coffee shop, to make it look to any observer like I was actually doing something. But all I really did was move around, from one shop to another, and then back again. If I was going to catch her leaving or that group of guys arriving, then I needed to keep my eyes on the place, so I made it quick when I moved around.\n\nI didn't see that dark-skinned group show up, but I did see her leave, at around four PM. And she was not wearing the same clothes she had been when she had arrived. She'd been wearing her standard Work Wear when she showed up at the office, - tailored cream blouse, matching jacket and pencil skirt, heels, plus purse and briefcase. Now, she was in a short leather skirt, what looked like stockings or hose, heels, and a multicolored coat. And her hair was different too. Before it was her standard hair in a somewhat small bun. Now it was down, and she had long dangling earrings that I'd never seen before. In fact, I'd never seen this outfit at all. It was not at all what she'd wear, at least in our lives.\n\nAnd she wasn't alone, either. There was a man with her, in a shiny suit, like the ones made famous by Ben Elton back in the eighties. He was carrying a briefcase, and had a very impressive head of slightly grey hair. He was tall, at least six foot, and had large imposing shoulders. They were conversing together as I saw them hail a cab and climb in.\n\nNow while London is a metropolitan city, - right up there with any other city in the world in terms of important things going on, - London is also old. It was designed for a horse, and then horse and cart, and not two-way roads with buses and all that on them. Sure, the congestion charge means that lots of the larger or more frivolous traffic stays out of central London, but that doesn't mean there isn't a lot of traffic anyway.\n\nAnd this is where being on a bike helps. That's why there is such a large bike messenger contingent in the central London area. Simply put, London is mostly flat, and bikes never get stopped in traffic. They are constantly moving and can often be places before cars and cabs can, unless you are going right across the city.\n\nIn which case, it wasn't that hard to follow them. They didn't go that far, in fact. To some private club in Belgravia in fact. One I'd never heard of, but then, that wasn't surprising since London is dotted with these kinds of places that have been around since the dawn of time, but don't advertise themselves.\n\nThere was clearly some event going on, since I took up station across the road, going back and forth, and watched as several large limo-type cars disgorged well-dressed individuals and groups, among them, that group of guys from The Dorchester.\n\nWhen they arrived, I honestly didn't know what to do. The fact was that it was clear that whatever suspicions I had were confirmed, although what those suspicions actually were in detail was less clear.\n\nClarissa was clearly involved in something that I had no clue about, and that she hadn't shared with me. She'd lied to me, very convincingly, about what had happened, - probably even tinged with a little truth to make it really believable. She'd used all that she knew about me and our relationship to manipulate me, and she'd done it with amazing skill and, apparently, lack of remorse.\n\nShe was going to meet people she didn't want me to know about, for reasons she didn't want to share, and I had caught it. Now, who they were, what they were meeting for, what it was all about, I had no clue. But, our entire relationship was now in question, because quite obviously, she had no problem lying to my face, with great skill. Almost as if she were... trained?\n\nSo, what did I do? Do I confront her when I see her at home? Do I go inside, and try and find out what is going on? How far am I really going to get? Was she having an affair? Or was this work related? Or... was it both? Sexual favors for, what, a contract? Who was the other dude? So many questions to be answered.\n\nAs I walked my bike along the pavement, I realized a few things. She lied to me with such aplomb and poise the other day that giving her time to come up with a plausible story was a bad move, tactically. I needed to not give her time to come up with something. I needed surprise and if I was going to do it anytime soon, I needed to do it right then, because I had no clue how long she was going to be in there, with them. If I could catch them together, that would confirm whatever was going on, and she'd have no recourse to lie to me, not with everyone else there too. I might stand a chance of getting the truth, and even if I didn't, I'd at least see what was going on, and be able to draw some conclusions from that. If I waited till later, then she'd probably just leave and go figure out some story to tell me that I'd be hard-pressed to disprove, just like she did the weekend before. There were implications to that train of thought I didn't want to think about right then, but they were there, nonetheless.\n\nOkay. Problem. This was obviously a black tie, invite only event and I was dressed like a bike messenger. Not getting in that way then.\n\nBut. I was dressed like a bike messenger. The light clicked on.\n\nI hurried to the nearest office building and asked at the desk if there was a pickup for me. It was a calculated thing; since bike messengers were everywhere, it was likely that at least one building around would have a pickup waiting. All I needed was one package, and then I could use that to possibly gain entry to the building where whatever it was that was going on inside was happening. Enough to at least get into where she was, perhaps? It was worth a try.\n\nAs it was, it took four buildings before I found a bored woman manning the desk who wordlessly handed me three packages when I asked, barely even looking up from the iPad she was staring at.\n\nI pocketed the packages in my carrier and exited, and then biked back to the building where the event was happening. There were two entrances, one on the side and one in the front. The one on the street had security on it, checking invites. I went to the side, opened the door and was immediately stopped by security. I tapped the bag and just said, \"Where's the mail room? Got something for the managing director here. I think he's waiting on it, for the shindig upstairs?\"\n\nThe man looked me over and then just nodded towards a door in the rear of the atrium where I was currently standing.\n\n\"Thanks,\" I murmured to him, walking briskly past and through the door, which auto unlocked. The little people are always considered furniture.\n\nOnce inside I saw some stairs and a corridor leading outback. I figured the corridor led to the mail room, and the stairs to... well, who knows. The party, hopefully. At least I was inside. I went up the stairs, praying there weren't cameras and if there were, no one was watching at that precise moment.\n\nOn the first landing, the door was locked, but on the second landing, it was not, so I went through it. I was still dressed as a bike messenger, but I figured I would say I was picking up from some fictional office if challenged, and then try and leave as fast as I could.\n\nI walked through the door and instantly heard the noises of some kind of party going on. Rounding the corner, I stopped, since there was a large man standing in front of the corner to the stairs. Thankfully he was turned inward, watching the crowd of people, rather than facing out, where he would have seen me. I carefully edged to the side, so I could see into the mass of people, -- about twenty to thirty or so, large guys in suits at each exit. A mix of women and men, all well dressed, tables around the edges with nibbles on them and a bar in the corner, plus waiters wandering around with trays of champagne and other, less identifiable things on.\n\nLooking carefully, I saw Clarissa. She was standing with the group of men from The Dorchester, and one of them had his arm around her, clutching at her waist. He was at least six feet plus, since Clarissa is five nine, and this man was taller. The man who had accompanied her when she had left the office was talking with a different group of people, across the room. No briefcase.\n\nClarissa though, she was laughing and looking up at the man who had his hands on her. Her arm was around him and she was feeding him a strawberry, not chocolate coated, I noticed. He ate the strawberry and then leaned down to kiss her, and share it with her. They made out in a very obvious manner, oblivious to the men standing with them, and when they were done, she wiped his chin in an incredibly intimate manner. And then he cupped her ass, and with his other hand, tweaked a protruding nipple, to which she giggled in a girlish fashion.\n\nAnd it was that moment when the rage that had been slowly building over days just finally broke through and I lost it. Fuck security, fuck whatever was going on. THAT WAS MY WIFE AND I'D BE DAMNED IF I WAS GOING TO LET THIS CONTINUE.\n\nI stepped around the large man and walked purposely forward, straight to the group, taking off my bike helmet and glasses as I did so.\n\nClarissa was the first to notice me since she was facing in my direction and her eyes just bulged out in alarm.\n\n\"What the FUCK is going on here? Who the fuck are you?\" I challenged the man with his hands on her. \"Clarissa, you have exactly one second to explain what the hell is going on here?\" I said, standing legs apart, hands on my hips.\n\n\"Clarissa?\" said the tall man, looking inquisitively and uncomprehendingly at my wife. \"Who is...?\"\n\nAt that point, security arrived behind me and hands grabbed my shoulders.\n\n\"That's my fucking WIFE, you asshole. Who the fuck do you think you are?\" I screamed, everyone in the vicinity now taking notice.\n\n\"Sir, you are gonna have to...\" I heard from behind me.\n\n\"Rich, what are you...?\" Clarissa mumbled clearly lost for words, not even taking her hands off the man she was clinging to.\n\nAt that moment, all hell broke loose. The man she was holding looked down at her, some kind of comprehension dawning in his eyes. He pushed her away and yelled, \"Amhed!\" and then things happened really quickly. There was a man with a headdress running at me, then an incredibly loud bang, and he fell back. Then another loud bang, followed by two more, and then a massive sharp pain in my leg. I fell to my knees, then Clarissa was helping me up, with the other man in the shiny suit. He had a gun in his hand, I noticed.\n\nThere was smoke and acrid smells and people screaming and everyone pushing and rushing everywhere. I tried to stand and my leg buckled, and I looked down and put my hand on it and it came away with blood. I'd been... hit? Shot? What the hell was going on?\n\n\"Come on, we've got to find...\" Clarissa said, looping an arm around under my shoulders, getting me vertical again.\n\n\"Over there,\" gestured the man in the suit towards a door in the opposite wall, with his gun hand. There was another bang, and he spun around, went down on a knee and aimed his gun at a security guard across the room, who held a long gun in his hand. He shot and the security guard fell back. I was still amazed at how loud guns going off were. You never got that impression when you saw this happen in the movies. Clarissa's friend with the gun was spinning around, pointing the gun forward, then back, then to the sides, trying to cover every direction at once. More people screamed, but by now the room was emptying rapidly. Most were running for the main entrance, where there were stairs down to the lobby, and some going the way I'd come in.",
        "We weren't going either way. Too obvious, I supposed. That's where the building security was? I mean, what the hell did I know?\n\n\"Help me,\" hissed Clarissa to the man with the gun, urgently.\n\n\"Why? Leave him. He's slowing us down. We have the mission to consider,\" the man with the gun said, glancing at me and looking at her.\n\n\"No, we have to... don't argue, Major.\"\n\n\"Over there,\" he gestured again, hurriedly, and then grabbed my other arm and half dragged / half walked to me to the door.\n\nHe tried the handle and the door opened and I was manhandled into the room, the man with the gun closing the door behind me, and then jamming a handy chair against the handle.\n\n\"That won't hold them long,\" he said, grimly.\n\nWe all looked at the room we were in. Some kind of smaller office. Large window, desk, chairs, very small round table, walls with shelves full of books.\n\n\"They won't come immediately. They don't know how armed we are, yet. But they'll get spotters and work it out,\" he said. Clarissa nodded, and then pushed me down into one of the other chairs.\n\n\"What a cluster fuck,\" she said, bitterly. She looked at me, then shook her head and then squatted down to look at my leg. It hurt like hell and that wasn't helped when she tore the leggings I was wearing to get a better look. Then she felt around the back of my thigh, and then, nodding at the other man, she said, \"It's not too bad. Through and through, in the muscle, missed the femoral, thankfully. But he's not going to be running anywhere, or walking much, either.\"\n\nThe Major sighed, then walked over to the window. \"Well, we can get out of here. There are enough surface features for us to climb down and look, there's only the wall over there and we are out in the open. We can go. I suggest we go now, while they are still hold up outside, judging our strength and armament.\"\n\n\"We can't just leave him?\" Clarissa protested.\n\n\"Can't we? He's the mark. Well, one of them anyway. He's not the mission. He's in the way. He's not going anywhere, and we can. We should NOT sacrifice our mission for him. You know those are the rules. Acceptable collateral. If need be, we should shoot him ourselves. Be sure he can't pass on any details.\"\n\n\"I'm fucking married to him,\" she hissed.\n\n\"No, you aren't,\" countered the major, glancing at me with a stone-cold face. \"You know as well as I do that it wasn't legal.\"\n\n\"What?\" I said, weakly. \"Clarissa, what...?\"\n\nShe looked at me, a look of anguish on her face.\n\n\"I...\"\n\n\"Oh,for fucks sake, Risa. We. Don't. Have. Time. For. This. I should just shoot him now and we can go.\"\n\n\"No!\" she said, hotly, moving between me and the Major.\n\nHe glared at her. I could still see his face around her shapely bottom.\n\n\"What is going on?\" I asked again.\n\n\"Your wife is an MI6 agent, you dumb idiot,\" the major said, contemptuously. \"You are just too stupid to see it.\"\n\n\"Major, another word and...\" Clarissa said, standing upright.\n\n\"You'll what? We are about to get into a firefight brought on by this moron here, the mission is totally compromised, and we need to get out of here. You can court-martial me later, if we survive, but right now, we won't, if you don't move your arse. And you know it.\"\n\n\"Clarissa... is this true? Are you...?\" I toned almost listlessly. I could feel the blood pumping out of my wound. The loss of blood and the news I was getting was just... too hard to handle.\n\nShe turned and looked at me. Her stare was glassy but hard.\n\n\"Look, I... yes, I'm a field agent. You've gotten caught up in something... I don't even know how you are here. You should never have been able to get within a thousand yards of this place. Or why you are here at all. This does not concern you. Or us.\"\n\n\"What us?\" I spat, painfully, rubbing at my leg as though pawing at it would help it hurt less.\n\n\"Yes, you are a patsy,\" said the major, looking out the window, not even looking at me. \"You were specially selected because you trust and are na\u00efve and gullible, and she could lead you around with your nose, and you would never think to even ask why. You are perfect cover because no one would ever believe you are married to a field agent. You are collateral and now expendable, and holding us back. We. Need. To. Go,\" he reiterated.\n\n\"You are just trying to hurt him, Major,\" intoned Clarissa, swinging back to face him, anger on her face. \"Just trying to rile him up so he gets angry with me.\"\n\n\"No, I'm trying to let him know the facts of life,\" replied the Major, now trying the window lock, trying to push it open.\n\n\"Here's the thing, Ma'am,\" he said, putting special contemptible emphasis on the 'ma'am' part. \"I'm leaving, with or without you. He's not going anywhere. So you can stay here and die with him, or come with me. You know what you have to do.\"\n\nClarissa looked around at me, eyes pleading.\n\n\"It is true?\" I persisted, gritting my teeth against the increasing pain in my leg. It was really starting to throb now.\n\n\"It's complicated, Rich. It's not...\"\n\n\"I see. It is then. An easy mark. I see. Well, you lasted four years I suppose. More than I ever had before,\" I said, bitterly.\n\nThen I nodded at the Major. \"Give me the gun.\" I demanded, holding out the hand that wasn't clutching my leg.\n\nHe looked at me, stopping trying to open the window. We could hear people moving around outside the door. Time was getting shorter.\n\n\"Why?\" he asked, guardedly.\n\n\"So I can cover you. They come in if you've just gone through the window, they'll get you before you've gone ten feet. Give me the gun, so I can cover you. You are obviously right, I'm not going anywhere, but you can. Give. Me. The. Gun,\" I demanded one more time.\n\n\"Rich, I can't...\" Clarissa started.\n\n\"Oh, for fucks sake. Be honest for once in your life, will you? Just go do whatever it is you are supposed to do. I'm just local dressing and I clearly don't matter or you wouldn't have lied to me for four fucking years.\"\n\nThe Major walked over to me, and handed me the gun, looking me in the eye the whole time, judging me to see if I'd just turn the gun on them.\n\nI took it and nodded, and gestured at the window. \"Go. Now. Take super-spy here with you. For what it's worth, Clarissa, you did a really good job. I really did love you. Now, just fucking go.\"\n\nI turned my head and body and faced the door, holding the gun out, and hoping my arm didn't shake too much. I heard her say, \"I'm sorry, Rich. The mission....\" And that was the last thing I heard Clarissa say to me.\n\nI heard the glass shatter as the major gave up trying to open it the normal way, and just threw something at it. At the same time, I squeezed the trigger of the gun, blasting a hole through the door, aiming high to dissuade people from coming through too early, and stopping them from escaping.\n\nI have no idea if they made it. I think they did. I fired two more shots, all high so they wouldn't hit anyone outside, and held out for almost three minutes. Then the door exploded in and some kind of grenade popped in, hit the floor, and there was a massive explosion of light and sound and pressure, and I was officially out of it.\n\nI woke up three days later, apparently, in what I later found out was the sub-basement of the Saudi Arabian embassy, where I was burnt, beaten, waterboarded, electrocuted and otherwise tortured for the next week, while the Saudi security services tried to find out who I was, and what I was doing there. I had decided immediately I wouldn't lie, and I told them the truth of who I was, who Clarissa was to me, and why I was there.\n\nOf course, they didn't believe me, and that's why I am now mostly one ear less, can barely see out of one eye, my nose is crooked from being broken so many times, I have no molars, I can't raise my left hand over my shoulder, my little finger and ring finger don't bend anymore and also will never grow fingernails back and I can't walk correctly because the bullet hole in my leg was never treated beyond a crude patch-up job. At one point, during the initial interrogation, they kept throwing Arabic at me, to see if I understood it. They had me sitting in a chair, and the man in front of me delivered a speech, and then the guy behind me jabbed his knife in my arm, quite deep too. Took weeks to heal. I think the guy in front was telling me what the guy behind me was going to do, and if I reacted, they'd know I could understand them.\n\nI'm frankly amazed I'm still sane, if I was at all. It was hard to tell anymore. I was so far from reality at this point that the Teletubbies could have tortured me and I'd have just accepted it.\n\nI've been held here, in a small cage in the basement, for the past, well, it's been at least a year. Probably more. I don't know anything for sure, anymore.\n\nI am a bit of an embarrassment and a problem to the Saudis. Apparently, I interrupted what was attempting to be some kind of swallow operation that British Intelligence was running on them -- at least that's what they called it. Clarissa was supposed to seduce one of the group who had tried to send us wine at The Dorchester, and then get something from him, I don't know what. I'd walked into the middle of it, she'd blown it by recognizing me and using my name, the Major had seen security walk up to me, thought they were going for her and so he'd reacted and protected her by blowing away the security guy, and then exchanged fire with another guard, who'd targeted me because I wasn't firing back. I just didn't know enough to get out of the way.\n\nNow they had me, they would normally just disappear a problem like me, but after the massive issues with the American Journalist who they'd literally cut up and dissolved, the main Saudi Prince had declared that I was not to be killed, in case I was needed at a Get Out Of Jail Free Card later. But they couldn't let me go either, and there was no way they could get me out of the embassy without British Intelligence catching on, so... I was stuck. In the basement. In a cage. It was at least large enough for me to stand up, held a cot and a chemical toilet, that was emptied once a day. I was fairly sure we were in the Saudi Embassy, but not certain. Hell, I wasn't certain of anything, up to and including which day of the week it was.\n\nI was tortured for a week, gave them the same answers all the time, and by the end of the week, they'd confirmed my story. Clarissa McDonald / Livingston no longer existed, apparently. She'd been reported dead, in the same accident that I apparently died in, so I was told. I had been officially abandoned by my own government. Collateral damage indeed.\n\nThe Saudis didn't know what to do with me, so in the basement, I stayed. Occasionally, they would try new forms of torture on me, just for kicks. One week, I wasn't allowed to sleep. Another, they played Muslim religious music at me for a week. They tried hypnotizing me, but I was so traumatized at this point that the hypnotic stuff just bounced off.\n\nThey couldn't understand the motivation to hold them off so the wife who had lied and manipulated me for years, - who probably never actually loved me at all, - could escape. I tried to explain it, but true romance for the sake of romance was just not in the lexicon of experience of the people who were questioning me, so I gave up.\n\nThe only one who was even remotely nice to me was one of the three permanent guards, who watched me twenty-four, seven. His name was Saad, - he was the only one to actually introduce himself to me. He had a little LED portable TV he brought in at night, probably against the rules. He'd never watch the news, but I'd catch episodes of something or other while he watched. He brought me scraps of food from his home on occasion, giving them to me when no one else was watching, at least until I heard someone yelling at him, then that stopped. The food otherwise was bland and barely enough to keep me going; I certainly lost weight, to the point where there was no chance of me overpowering anyone.\n\nI used to stare at the wall, and wonder what Clarissa was doing now. Who she was doing it with. Whether her name was still Clarissa, - probably not. I wondered what name would suit her instead. I wondered if she ever thought of me, if she had any clue I was still alive. I wondered why I'd been so blind, analyzing every part of our lives together, looking for clues I'd missed, or constructing elaborate theories to explain things that had happened in our lives together. So many questions. Was that her real name? Was her mother actually her mother? She'd gone alone to sort out her estate, -- had she really done that? How many people had she killed? Would she have killed me, if I had confronted her any other way? Did she love me at all? Was it all a lie? How had they targeted me? What was the problem inside me that I could never hold an actual relationship? The only one I really had and it was all based on a lie in the first place.\n\nAt a certain point, I gave up. I stopped waiting to be rescued, since it was clear my captors were never going to let me go, and at some point, the admonishment from the Crown Prince to not kill me would just lapse, and they'd just come in and cut my throat or strangle me or drown me. I started to wonder which one they do. To rate them in terms of pain, and ease of suffering, and quickness. To actively desire one over the other.\n\nI honestly think I started to go insane. That's what happens when you put ordinary men in no hope situations like this. They lose it. And no one was more ordinary, or more of a loser, than me. My wife's betrayal of me had led to far worse things, and I was powerless to stop it. I mean, was she even my wife? From what the Major had said, it didn't seem like it. I was a disposable front for her, and had been used for that purpose and discarded. Although what an agent would need a front like me for, in the first place, was a mystery to me.\n\nTo the entire world, I was dead. No one was looking for me. I was just something to be politely but pointedly ignored by everyone.\n\nNot that the Saudis didn't harp on that point. I think they were trying to turn me, but then, why bother? It's not like I was worth anything. No one from the group Clarissa worked for would come near me regardless, and if I did get out, what then? I couldn't be allowed to talk; that would be too much of a problem for everyone, so why they even bothered to relentlessly point out that I'd been abandoned I don't know. I guess they must have been bored too and needed their amusement.\n\nI started losing weight. More than already, I mean. While I was eating, I wasn't really even trying much anymore. What was the point, after all? They were going to kill me at some point, no matter what, and I wasn't getting out of there voluntarily on their part, so, why bother keeping it going? Harboring hope?\n\nAnd that's how it was, until that one day, when things did change, in very unforeseen ways.\n\nThere was a riot.\n\nI could hear it starting up, outside, even through the thick walls and ceilings. Raised voices. Chanting. Thumps of I don't know what. Voices getting louder. A few shouts, some screams.\n\nSaad was on duty at that time, and I could see him keep going to the door, unlocking it, opening it and looking upwards, then closing the door again and locking it again. He kept trying to raise anyone on his hand-held radio too, unsuccessfully. At one point, he looked at me, and then pulled a pistol out of his jacket. I don't know if it was for me or whomever was upstairs, causing a nuisance. Both, probably. There was no way they could afford to let me out alive, not after what they'd done to me.\n\nAnd then the door blew in, and the pressure wave ruptured my eardrums, and blew me to the edge of the cage. It killed poor Saad outright though, since he was next to the door at the time. Just as well, since he didn't have time to kill me first.\n\nThe people poured through the door, although I was only barely aware of it, having my senses scrambled. Young. Angry. Looking for trouble.\n\nAfterwards, I discovered it was an Arab Spring kind of thing. The Saudis had been involved with some new atrocity, and for once, the local people in London had had enough, and stormed the embassy. In the process, they'd found me. Why they had explosives and were blowing open locked doors was never explained at the time.\n\nAt the end of the day though, I was found, by people who didn't want to use or manipulate me or hurt me, for a change.\n\nAn ambulance was called, and I was carried out by jubilant young men, all with beards and screaming catchphrases in Arabic.\n\nI ended up at Imperial College, where they dealt with my malnutrition problems, and did their best to help with the results of the torture. They took some flesh from my thigh and fashioned a new ear out of it; it looked okay I guess, but it was purely cosmetic and it never looked totally believable. My fingers were re-broken and reset, this time correctly. They still wouldn't have the range of motion they used to have, but it was better than never being able to bend them at all. Stuff like that. There wasn't much they could do for my eyesight, but they did manage to get my arm to rise above my shoulders again. Something about a frozen muscle needing relaxing and exercise.\n\nAnd, of course, I was interviewed almost nonstop by the 'security services'. They never identified themselves in terms of exactly who, that meant when they came to interrogate me, just \"We are with the security services.\" I asked, but no one would give me actual identification.\n\nFrom what I understood, I had everyone from Special Branch to MI6 come talk to me. Ask me about my experience, who interrogated me while I was held, what questions they asked, and so on, on and on and on.\n\nAt no point was any media allowed near me, nor I allowed near them. I didn't even get to watch TV. I was as much a prisoner in the hospital as I was in the Saudi Embassy. A grateful government, my arse.\n\nThey clearly had no clue what to do with me, and I sat there for almost a month, before I was declared Fit To Convalesce, which basically was hospitalese for 'We'd like our bed back, please.'\n\nAt no point did Clarissa show up, not that I expected her to. For all I knew, she was dead. I mean, don't field agents not have a long shelf life? No one I spoke to would acknowledge that she still existed or anything beyond the events leading up to that day. I asked, but was given stone stares by everyone. No one wanted to talk about her, or that Major character, either.\n\nThe day came, and I was wheeled out to a waiting blacked-out SUV, out the back of the hospital, and taken to yet another nameless room, in some government office somewhere.\n\nI was shown into a room with high ceilings, wood paneling, and one, very large desk in the middle, in a pool of light from a standing lamp. I was placed in a chair in front of the desk, and sat at the convenience of the evidently busy man sitting behind the desk. Nice suit, if rumpled. Collar open at the neck, tie loosened, hair starting to grey and thin on top. The desk was awash with papers and folders and there was no computer to be seen either, nor a desk phone, and he was methodically going through each folder, reading each page of every paper in each folder.\n\nEventually, after a few minutes, he sighed, sat back, and then shifted forward and cracked his back.\n\n\"Such a tedious waste of my time,\" he murmured, gesturing at the papers, while looking at me. \"Needle in a very wasteful haystack. Still, we must cross the t's and dot the i's. Have to be sure we've looked at everything,\" he said, conversationally, as though I had a clue what he was talking about.\n\n\"Well, Mr. Livingston,\" he said, looking over his glasses at me, as he leant back and steepled his hands together, \"we do appear to have a quandary here. What to do with you?\"",
        "He regarded me for a few seconds, then said, \"Of course we can't keep calling you Mr. Livingston, can we? Richard Livingston is dead, as is his good lady wife. And he won't be coming back to life today, I'm afraid. I think, for now, you'll just have to be Mr. Smith, until we can come up with something a little more inspired. John Smith, for now. I am... Mr. Thurgood. As good a name as any, I think.\"\n\n\"So, Mr. Smith, what are we to do with you? You've had an extremely traumatic experience, no one can argue that. Although it might be argued it was your own fault for involving yourself in an extremely sensitive security service operation, something no one asked for.\"\n\nI snorted. \"Don't give me that crap. I wouldn't have been there at all if your little operative hadn't decided I was just good cover in the first place. Don't even try and pin all this on me. As the yanks say, that dog won't hunt.\" I would never have been quite so confrontational before my experience, but when you've truly given up all hope, some of that carries over. What was the worst they could do to me? Worse than what I'd already endured?\n\nThe man stared at me a while longer, the silence filling the room.\n\n\"Be that as it may, the whole thing is insanely regrettable. We've lost any advantage in intelligence terms we ever had with the Saudis now. After that little debacle, they are on their guard. We lost six months' worth of work and you lost almost two years of your life, and got tortured into the bargain. We had a pair of senior field agents cover blown, and were put to some effort to try and calm things down. The implications on sales of our equipment to their country alone are enough to keep ministers up at night.\"\n\n\"Boo fucking hoo,\" I responded, not giving a shit. \"You'll forgive me if I'm not terribly worried about 'the effort you were put to',\" I stated.\n\n\"Yes, I quite appreciate your attitude, Mr. Smith. I dare say I'd be thinking and feeling the same things if I were in your shoes. I'm just trying to appraise you of the external situation. I don't honestly expect you to really care all that much.\" He wasn't perturbed by my outbursts in the slightest.\n\n\"I'm absolutely sure you must be very very angry at us for not coming to your rescue. Honestly, though, we were sure you were dead. The two agents reported the window blowing out of the room they had escaped from, and there were sounds of gunshots. It was concluded that you were shot or otherwise deceased. We did watch the hotel, to see if your body was removed, but saw nothing. The same with the embassy. No one moving a body in or out. We are still puzzled, and not a little concerned, that we didn't detect them moving your unconscious body in, frankly.\n\n\"However, all that being true, you are now the recipient of knowledge that just can't go into the public arena. The Saudis will deny it all, anyway, and Christ knows, they are good at silencing those who piss them off, and then there's us. This entire incident is one long embarrassing saga, and political dynamite for the current administration. Much as I dislike it, we do have to protect the leadership. We are good at destabilizing other regimes, can't allow the same to be done for ours, I'm afraid, old boy.\n\n\"Then there's what you've been through. I will grant you, you've been pretty hard done by. Our operative's rather callous use of you is hard to excuse, I have to admit. And it directly contributed to the disaster of the operation, and your unfortunate incarceration with the Saudi Government, and all that entailed. Yes, we are not without a great deal of empathy for you. You didn't ask for, nor did you deserve any of what has occurred. However, what is done is done, and we need to forge a way forward now.\"\n\nHe looked down and plucked a particular paper out of the folder in front of him, and threw it to my side of the desk.\n\n\"With that in mind, the government of the United Kingdom and Great Britain would like to offer you the princely sum of eight million pounds, tax-exempt, for your troubles. Of course, that comes with strings. You will be required to sign a document exempting the UK government and its subsidiary agencies from any legal challenge, and further to that, sign a gag order stopping you from ever discussing the circumstances of this grant, and what led to it. Do you understand what I am telling you, Mr. Smith?\"\n\nHe leaned back, head tilted forward, which meant the light from the desk gave him a demonic appearance. I glanced at the document. It had numbers on it, and the sum of eight million in bold, and underlined.\n\n\"I think so. You were never here. I was never here. I was never a guest of the Saudi Arabian Government. Presumably, I was never married, either?\"\n\n\"Indeed. We will furnish you with new credentials, history, name, the usual. All completely legitimate, since we are the issuing authority of these sorts of things in the first place. In regards to your marriage, well, Richard Livingston might have been married, but Mr. John Smith, or whomever you end up being, never was. Mr. Livingston is, unfortunately no longer with us, so any marriage he may have had terminated some time ago.\"\n\nHe steepled his hands and smiled ghoulishly behind them.\n\n\"I'm glad you understand the, ah, delicateness of this situation, Mr. Smith. I want you to know that your treatment at the hands of the Saudis has not gone unanswered. They are still in the process of paying for that, let me assure you. I can't let you know exactly how recompense is being extracted but rest assured, it most definitely is. I know this is probably of little comfort to you right now, but your government is not about to take this lying down.\"\n\n\"They just expect me to, then?\" I said before I could stop myself. Antagonizing this man wasn't going to help me. Much as I wanted to just jump up and punch him in the mouth, even I recognized I was on a loser here. I needed the money to restart my life, because sure as shit, everything else was gone.\n\nMr. Thurgood looked pained. \"It's a regrettable situation for sure, Mr. Smith. I wish there were other things I could say to make it better, but unfortunately, it is what it is. I am hoping the money will help smooth things over. As I mentioned, it's tax-free, since it's located in a bank in the Cayman Islands, so not only is it not something her majesty's tax collectors can get at, I dare say even the feared American Internal Revenue Service cannot claim it, either. Further to this, the UK government is also offering you free private healthcare, for all possible medical issues that may arise, for the rest of your natural life. Particularly in regards to injuries sustained in the past two years. We feel very responsible for that. However, beyond that, I'm not sure what else we can offer you at this stage.\"\n\n\"What about my ex? Is she still around? A conversation with her might help... how did you put it? 'Smooth things over'?\" I honestly had no idea what she'd say to me, but I knew exactly the things I wanted to say to her. None of them were nice. I'd had a long time to think about it.\n\nMr. Thurgood looked even more pained at this, looking reproachfully at me.\n\n\"I'm afraid I cannot comment on the Ex. Mrs. Livingston's present situation, Mr. Smith. I am, I'm afraid, a simple civil servant, and such information or ability to make things like that happen are far above my pay grade. I can neither confirm nor deny the Ex Mrs. Livingston's current employment or whereabouts, nor can I make such a meeting happen, even if it were possible. I will, however, pass the request back up the chain of command. You never know what might happen. Someone might get out of bed the right side that day.\"\n\nHe made a note on a pad in front of him.\n\n\"That said, Mr. Smith, there is one thing I can offer you. It turns out that the Ex Mrs. Livingston did actually empty the family home after your... imagined demise, and all those properties and items are in storage, and are available to you. Since you are an only child, parents of age, there was no one else to pass any of these items on to, so they are still sitting in the storage unit where they were initially placed. The Ex Mrs. Livingston has indicated that she considers them all yours, and you are free to remove from that storage unit anything you wish.\"\n\nThen he pulled another few sheets of paper out of the folder, and passed them over the desk, and then threw a pen on top of them.\n\n\"This is a copy of the Official Secrets Act, which I now require you to sign. That covers our ability to, er... enforce your silence on these topics, something I am sure we won't need to do, will we, Mr. Smith? And the other is the document exempting the UK government from all legal challenges regarding these unfortunate affairs. If you will be so kind as to sign these, we'll then ferry you to rooms at The Savoy, which are prepaid for the next sixty days, giving you plenty of time to decide your next steps. We'll obviously be in touch regarding access to the storage facility, and to give you communication methods to get hold of us, regarding access to the money we talked about as well as the medical coverage.\"\n\nI signed the Secrets Act, since I knew that was a standard form, - there would be no clever wording on that. However, I picked up the other form, and started to read it.\n\nWhile I did that, Mr. Thurgood continued.\n\n\"Now, obviously, as I did briefly refer to earlier, these perks do come with caveats. You can never go home, Mr. Smith. To which I mean no contact with anyone from your former life. No Facebook conversations with old friends, no phone calls to anyone at your old job, or clients thereof. Or parents, who already believe you to be deceased. You are going to be a new person, and a new person with history, you shall be. We shall be watching. Do I make myself clear, Mr. Smith? No entertaining ideas of writing memoirs or interviews, or the like. To be honest, it would almost certainly be extremely hazardous to your health, and I don't mean from us. I mean from the Middle Eastern governments who tend to be rather final when it comes to addressing those who embarrass them in public. They may not have come to the ultimate solution to you while they had you in captivity, but I assure you, you embarrass them publicly and they will reconsider that position in an instant. You need to keep your head down, enjoy the money, and make a new life for yourself. If you insist on making public waves about the events of the past two years, I dare say some financial penalties will be incurred, penalties I'm not sure you would be able to meet. I'm sure we understand each other, don't we, Mr. Smith?\"\n\nAs he got to the part about penalties, I had just discovered them in the document he expected me to sign. If I made an issue of what had happened to my life, then not only would they be asking, -- no, demanding, - the money back, but also more besides. And as a signatory to this contract, I would be legally on the hook for it.\n\nI sat back, with Mr. Thurgood gazing at me.\n\nThis was the crucial question. What did I want now? While I'd been stuck in that cage, I'd never really thought about what would come next, if I was rescued, beyond confronting Clarissa. Towards the end, I'd entirely given up anyway.\n\nSince I had been extricated from captivity, I had given it a little thought, but since I had been held incommunicado so much post-incarceration, I had no idea what my options would actually be. It had been clear I was as much an embarrassment to the UK government as I was to the Saudis, only they weren't in the business of locking me up in a cage and torturing me, so that was a net win. But still. I had no real idea what would happen next.\n\nAnd now, here I was, being offered a stupendous amount of money to effectively suck it up and go away. Be a good little boy, and play in the corner, leaving the grownups to talk over brandy and cigars.\n\nBut then, did I want any more exposure to that world anyway? So far, one hundred percent of what I'd seen of it was pretty shitty, especially for me. How much more involvement could I survive? Either my heart or my body?\n\nDid I really want to poke the bear, no matter how justified I might feel? It sure hadn't worked out for me so far.\n\nAnd, on the other side of the equation, no matter what I ended up doing next, it sure would be easier with money behind me. The reality was that I was never going to be going back to being a professional financial analyst again, not with a two-year gap in my experience. While the new documents would, I'm sure, have covered that, the reality is that the financial industry moves extremely quickly, and if you are out of it for any prolonged period of time, say, almost two years while being held in isolation in the basement of a Middle Eastern country's embassy, then you weren't going to do well in an interview situation.\n\nAnd I also doubted that even though they'd give me new documents to live, that the UK government would also provide me with references for that period of time I was locked up, or, indeed before. I mean, it's not like I could call on real references for my work, was it? That guy was dead. And even if they did, it was even more doubtful they'd hold up against someone calling for a job reference. You needed real domain knowledge for that.\n\nNo, I wasn't going back to being a money manager, unless it was just for myself. Which was the only thing I really knew how to do professionally.\n\nSo... on balance, the money then? With the strings that came attached? How onerous were they really? Was I going to rock the boat? Make life difficult for anyone? Most likely me?\n\nAnd their points regarding being a target, well, yes. I could believe them. I'd already sampled the Saudis' hospitality once; I didn't want to risk that again. Next time, I'm sure I'd not survive it.\n\nOn reflection, then, probably best to just sign, take the money, and vanish. I didn't have to make decisions right there and then, plenty of time for that.\n\nI looked back at Mr. Thurgood who, I was pretty sure, had been following the thought progression on my face. Clarissa always said I let my thoughts show on my face too much; she never had any problem being able to follow my train of thought. Of course, now I realized where she'd learnt that skill, but still, I must have been pretty transparent if this dude who'd never met me before was doing it too.\n\nI mentally shrugged, picked up the pen and signed the other document, stipulations and threats and all.\n\n\"Capital, Mr. Smith. The right decision. The only decision, if I may be so bold. Right, then let me take possession of this...\" He leaned forward and picked up both documents. \"I'll ensure that a copy of this comes to you, along with that new identity, forthwith.\"\n\nHe examined the signatures, ensuring that I'd signed with my actual name.\n\n\"Excellent,\" he murmured, and then, glancing back at me, said, \"I think this concludes our business. If you go out the door, someone will be there to take you to the Savoy. As I mentioned, there are rooms there reserved, and we've taken the liberty of providing you with a wardrobe of clothing, and the usual toiletries. The access to the money portion will be covered tomorrow, where we'll drop off a credit card, and the details of the account and bank where the money currently resides.\"\n\nAs I stood to leave, he looked up at me and said, in a more commanding voice, \"Mr. Smith. One more thing. We will be dropping in occasionally, just to check up that we are all abiding by our agreement here,\" he held up the document. \"These checks will be random, and they may invade your privacy a little, and for that, I apologize. However, we cannot be too careful here, and indeed, neither can you. For you, the stakes are very high, so please, stick to the terms. For all our sake.\"\n\nHe held the gaze a little longer, just to make sure I got the message. I just nodded, turned, and walked to the door, which opened in front of me. I never looked back at Mr. Thurgood and I never saw him again.\n\nLife Part 2 -- Lucas Ferring\n\nFour years later, I was ensconced in my new home, and doing my best to just live life. I'd made the decision, that fateful day, that I needed to move on, not look back and not dwell on what had happened to me, but to embrace the opportunities I had open to me going forward. Mainly because of the money, let's be honest.\n\nWhile sitting in the suite at the Savoy, I'd sat and thought about what I wanted in the next phase of my life. I'd had my new identity delivered, - I was now Lucas Ferring. I'd been born in Hastings, in Kent and was now Man About Town, so to speak. Access to the money had arrived, and some of the first things I did was go out and eat, then take in a movie, buy some books and watch as much TV as I could, just to catch up on societal stuff.\n\nI'd considered what I wanted, and narrowed it down to a few things. The first was, out of this country. I knew the UK government would probably keep tabs on me wherever I went, but I wasn't about to make it easy on them. Plus, if any Middle Eastern country wanted to find me, I wanted to make that as difficult as I could, too.\n\nIf I was going to move abroad, then there were several things I needed. Wherever I went, English had to be spoken prevalently. I didn't want to stick out because I couldn't speak the local lingo.\n\nIt needed to be somewhere international so I could travel if need be, so the middle of Australia was out for example. It would need to be somewhere I could hide, have my own place, have stuff delivered by Amazon, - which did rule out New Zealand, - and that had convenience as a priority.\n\nI wanted to be near water. The bullet that had struck my leg and the resulting wound that had not been treated appropriately was mostly healed, but the reality was that my biking time was now done. The pain in the thigh was too much. Plus, my fingers made using the bikes controls, -- the brakes, the gears and so on, - just too hard. Add to that the loss of 20-20 peripheral vision and well, yeah. No more biking for me. I was quite sad about that. I ended up swapping this exercise for rowing instead. There was some pain with that too, but nowhere near the levels I'd had for biking. I'd tried running but that was just a nonstarter. So, rowing it was. And while I could do that at home, I'd discovered it wasn't half as effective in terms of a mood boost as it was when I did it on water. Therefore, a home nearby water was required.\n\nNot too hot. Not too cold. Near a metro area, but not in it. Somewhere I could disappear into. Buy a place that was a little isolated, but not so much it required a helicopter or a horse or a boat to get to. My trust of my fellow humans has never returned to the levels it once was, and as for women, well, forget it.\n\nBut I wanted to be close enough to civilization that I could get a decent meal, see a movie, go shopping at Asda. Or Walmart, as it ended up being.\n\nYes, I ended up in the good old US of A! In Maryland, more specifically, just outside of the city of Salisbury. I bought a place on the water, right off the Wicomico River that fed into the Tangier Sound, which in turn fed into the Chesapeake Bay. It was fine for my needs. Close enough to Salisbury to get civilization, but far enough out to have privacy, but still getting all the benefits of electricity and clean water and all the rest of it. Hell, even my cell phone (Yes, they call them Cell Phones out here, instead of Mobiles, like we do back home!) worked in my house. I got satellite internet, courtesy of Mr. Elon Musk, and had my Netflix and all the rest of it.\n\nIn my research, I'd also discovered that if you brought five hundred thousand dollars into the country, it was an instant green card! So, five hundred dollars transferred from my bank in the Caymans later, I'd been granted a green card within six months of moving to the US.",
        "I'd found a place with three bedrooms, a lovely large kitchen with bay windows looking out over the small dock that came with the property, all sitting on three and a half acres. Private driveway, through a small wooded area, the nearest neighbor at least a quarter of a mile away! And not visible, either. I could see across the bay and make out a house on the other side of it, but even that was just a twinkle of lights.\n\nThe master bedroom had been built with skylights with retractable covers. It was amazing to lie in bed at night and look at the stars above me, so clear because of little-to-no local light pollution. I even ended up buying a really nice Meade Telescope, to do some stargazing. I upgraded the kitchen and wired the whole house for internet, put in Sonos speakers throughout and made sure the house was inspected and all things fixed that needed to be, including a new roof.\n\nI was pretty happy with it once everything was done. It had a nice wrap around deck, the master bedroom had a small balcony, and I even had a hot tub installed, for the winter evenings. Lots of natural light, and I built myself a small conservatory on one side for vegetables that would not die in the cold winter, and a grilling station on the other side.\n\nI did raid the lockup with the furniture from the house Clarissa and I shared, but in the end, only took six pieces from there, giving the rest away to charity. The double lounger we had, where Clarissa and I had spent more than a few evenings curled up together, binge watching some TV show. A side table that I'd been given from my parents, via a grandmother. The plates that came from another grandparent. A table we'd found at an estate sale, that was designed for lots of plants, with lots of little bits sticking out to put pots on. It was funny, when I went and looked at all that was there, I realized that there were no keep sakes from her side of the family at all. No hand-me-downs or anything. Nothing with history. Clue number one, right there, that I'd just entirely missed.\n\nFor a vehicle, I had a Kia SUV, a small single sculling rower, an actual larger fishing boat with an outboard motor, and a small Harley Davidson motorcycle I used on occasion. The house came with an external two-car garage, and a very small boathouse on the jetty, just large enough to house the fishing boat during the winter months.\n\nI'd filled my time trying various hobbies, determining that if I did work again, it would be something I wanted to do, rather than something I had to do. While I didn't look back at the financial analysis, I did use what I'd learned in my own money management. The money from the UK went through several different accounts at different banks, and by the time it ended up in its final destination, in a bank in Jersey, there was no way anyone would have been able to trace it. It was mine and no one was going to be able to claw it back.\n\nI'd tried learning to fish, and while I could do it, I found it a bit too melancholy for my tastes. It took just the right day and mood for me to take the larger boat out and start casting. The rowing I'd enjoyed, and I did that daily on the water, if I could. If it was storming out, or in the depths of winter, I used my machine I had in the second bedroom, while watching episodes of Stargate SG1 on the big TV I had mounted in that room.\n\nI was still doing the photography, but now just for kicks. I'd even started doing astrophotography, once I realized that the telescope I'd bought could be converted into basically a large lens for the digital Canon I had bought. It was nice to get back to that, even if I wasn't doing the stock photography thing much anymore. I did sell some of the prints I did of the moon and other planets.\n\nI'd tried writing, since that's what people did in my position, right? Yeah, I confirmed my original decision to move into financial management because my efforts were not good, to be kind to myself. I gave that up pretty fast and just bought a kindle paperwhite and read what other people wrote instead.\n\nThat said, I did find my reading material changed a lot. Before, if I read a book, it was usually fiction, often an adventure novel or sometimes science fiction. Now, I was reading nonfiction and particularly stuff to do with the intelligence business. I wanted to know more about Clarissa's world, what she did in it and so on.\n\nI tried bowling, but both the leg and the fingers made that really hard to be competitive. I did slightly better at shooting; I was in the US, might as well make use of that fact. I bought a Glock 9mm and went to the range just to see if I could hit the side of a barn. I soon discovered that like most things, it was all about a few good bits of advice starting out, and a lot of practice.\n\nAmong other things, I did travel this newly adopted country of mine. I saw places I'd always wanted to; I went to New York and saw The Book Of Mormon on Broadway. I went to Washington D.C. and spent three days in the bowels of the Smithsonian. I hiked down to the bottom of the Grand Canyon, and then took a helicopter ride to Las Vegas, where I spent several days haunting various Casinos. I did a grand tour of California, from San Diego up to San Francisco in a convertible. I ate sugared donuts and shrimp po'boys in New Orleans. I went to see the Cubs play at Wrigley Field, and I walked the grassy knoll in Dallas. I took a whale-watching cruise from Seattle, and I rode some of Route 66 on my Harley Davidson.\n\nI enjoyed my time, even if it was mostly solitary. I soon learned there was a difference between lonely and being alone. For the most part, I was content to be alone. I found I didn't need anyone in particular and my own insecurities and distrust stopped me from forming any really deep relationships with anyone, platonic or otherwise. That's not to say I didn't have friends; there were people I could hang out with if I made the trip into town, and I even hosted a BBQ or two myself on my property and took some guys out fishing. But I was in no hurry to really connect with anyone. I wasn't looking for it, and I wasn't putting myself in a position where it was likely to happen.\n\nI did wonder if I should seek out counseling or therapy, but then, what could I say? I couldn't tell anyone the truth, that was for sure. If they believed it, which I highly doubted, then what? There was no way to corroborate my story, and even if there was, the UK government would Not Be Amused by any revelations I might make, even if they were for my own mental health benefit. And if you can't actually be honest with therapists, then their usefulness was limited, that much I did know.\n\nIn the end, I just kept schtum (it's a British expression, look it up!) and grew out my hair, to cover my ear. While the rebuild was actually fairly decent, and did actually help with hearing, the actual skin didn't look quite right. It was a bit too shiny, and people who met me could tell something was off, but not exactly what it was, till they realized it was the ear. It was just easier to grow out my hair and cover it and be done talking about it.\n\nSo, I just lived my life and enjoyed it as much as I could, even if it was a little empty at times. Holidays, in particular, were hard. Days like Fourth of July or Thanksgiving were usually okay, because they weren't my holidays, days I'd grown up with being special. But Guy Fawkes, Christmas, New Year, those were harder. I tried heading to a bar for New Year, see how the Americans did it, but it was noisy, and everyone was already in groups. I learned very quickly how easy it was to be very alone in a large crowd.\n\nI give all these details so you get the idea of where I was mentally, and what my life was like, when the first of three incidents that changed the direction of my life, post USA move, occurred.\n\nThe first happened abruptly, without warning and gave context I didn't know I actually wanted. Needed, is more like it. I thought I'd put that part of my life behind me, in fact. But past deeds have a way of forcing themselves into current consciousness. Or some shit like that. I need to read less Deepak Chopra and more Steven King, I think.\n\nIt was a Sunday, in May. We'd come out of the winter cold and were in the middle temperatures between winter and summer. It was perfect weather, in fact. I'd driven into the southwestern edge of Salisbury, to a small diner that did a terrific breakfast, and I'd tucked into my muesli, followed by ham, lobster, mushroom and avocado (yes! Even on this side of the country!) omelet, and I'd literally just paid the bill at the cash desk, tipping Mabel the waitress fifteen dollars when I heard a voice from my past behind me and without thinking, I turned round. I noticed it mainly because it was another British accent, and I hadn't heard one in the flesh in some months. You can't help but turn around when you hear one when you are an ex-pat.\n\nThe voice I'd only heard once before in my life, for like five minutes, yet it was etched into my consciousness like the seventeen-thousand-year-old drawings on the cave walls in France. It was the voice of The Major.\n\nAs I turned, I saw that he was standing in front of a booth, where a woman and two children were seated, and while he was looking at me, he was talking to them.\n\n\"Lucas!\" he exclaimed, in an amazed voice, using my assumed name, directing his attention to me. \"I had no idea you were around!\"\n\nHe moved in close to me, put his arms around me to hug me and whispered in my ear, \"Play along. Follow my lead.\"\n\nHe clapped me on the shoulder and stepped back, a big smile on his face. \"If you are here and you tracked me down, it's got to be something important right?\"\n\nHis smile dimmed and he turned to the blond woman who had now struggled out of the booth and was standing next to him, a pinched look on her face. The two children were next to her, one barely toddling, and the other more like a three- or four-year-old, gazing up at me. Clearly, they were little versions of the Major. His family, perhaps? That was interesting. I didn't think field agents were allowed families. God knows the one I was married to sure didn't seem to.\n\n\"Dear, this is Lucas Ferring. He's a... well, a client, of sorts. If he's tracked me down here, he obviously has something important to impart.\"\n\n\"Is this work, Darrell? We had an agreement...\" her voice was surprisingly nasally and high pitched and she was clearly pissed off, arms folded, her whole-body language radiating her annoyance.\n\n\"Yes, I'm sorry, dear. This is probably something I need to deal with. It's not my choice. My old mucker Lucas here clearly needs me to know something, and it may impact other things that are going on. I promise, just an hour, hour and a half, tops.\"\n\nHe was almost pleading with her. Some field agent he was, henpecked by his wife.\n\nShe scowled at me and said, \"Is this true? You couldn't just leave him alone while he's on his holiday, could you?\"\n\nI literally didn't get a word in edgewise. I spread my hands before saying, well, I don't know what, really. But 'Darrell' -- the Major -- got there first.\n\n\"Don't blame him, hon. That's not fair. Obviously, whatever it is, it's critical and can probably impact other things that are going on. You know there are several pots boiling right now, we probably just need to turn the heat down on one of them, right Lucas?\"\n\nI just nodded and didn't say a word. It seemed safest.\n\n\"Look, take the kids. Go check out that Farmers' Market down the street? The one with the stalls with all that old stuff? Please, dear. I know this isn't what we planned, but it's only an hour and a half. It's obviously important. I'll meet you right back here in ninety minutes.\" It was half whining, half instructing. I could almost admire it, if I didn't already know he was a master at this kind of bullshit.\n\nHis unnamed wife sniffed, and then put her hand out and said, simply, \"Keys.\"\n\nThe Major fished them out of his coat pocket, handed them over, and then said, \"I'll text you when I'm on my way, and you can wander back here, okay? Kids, be good for your mother. I'll see you shortly.\"\n\nThen he turned to me, and said, \"Okay Lucas, this is your show, shall we?\" and he gestured at the door.\n\nI just nodded again and turned to go. \"Oh wait,\" he said, as his wife and kids streamed out past me.\n\n\"Need to pay the bill first!\" he quipped, smiling and holding up his wallet.\n\nAs he walked to the desk, I followed, and he paid quickly, watching out the window as his family climbed into a small SUV and then pulled out into traffic.\n\n\"Okay,\" he said, turning to me. \"I know you have questions, and I'm here to answer them. I have, as you heard, about ninety minutes, so, let's get somewhere private, and we can talk.\"\n\nWe walked outside, and I was glad I'd brought the SUV into town that morning, instead of the Harley. Wondering what the hell I was doing, we climbed in and I decided the best thing to do was head for home. It was, after all, only ten minutes away. I did have a nice deck, facing the water, and it was private.\n\nApparently, the Major -- Darrell? -- seemed to know all about, as he mentioned, \"Let's go look at your view! I understand it's quite nice? Water and all that?\"\n\nI held my tongue as we drove, uncharacteristically. I had learned from those years in captivity, don't volunteer anything you don't have to. Let him do the talking.\n\nHe didn't say much on the journey, which is just as well, as I was stewing quite nicely. What the hell was he doing here? How had he found me? What did he want? What was all that bullshit with his family? Were they even his family? Or some sort of cover, like I was for Clarissa?\n\nWe arrived quickly and I drove in, parked, and we got out.\n\nHe looked around. \"Yes, nice place! The pictures I saw don't do it justice.\"\n\n\"Pictures?\" I asked, as I opened the front door.\n\n\"Well yes. You don't think they aren't watching, do you? They need to be sure. Whether it's that you are a good boy or that you are actually having a decent life, I don't know. Probably more of the former than the latter, if I am any judge,\" he replied, cheerfully, as though it was no big deal. Well for him it probably wasn't.\n\n\"Let's have a beer?\" he suggested, and waved at the window, \"I'm not driving, and I doubt you will want to after all I have to say. Let's sit out there and enjoy the rest of the morning. I'll get an Uber back into town, later, okay?\"\n\nI grabbed two LandSharks and followed him outside, where I had two Adirondack chairs, just outside the back sliding door.\n\n\"Ahh,\" he said, dropping into one chair and taking a long drag. \"This is the life. You landed in clover here, Richard. Sorry, Lucas.\"\n\nHe shifted a little, and I just remained mute, waiting for whatever he had to say. He shifted in the chair again, a little uncomfortably.\n\n\"Okay, well. What to tell you? Errr, first things first. I am no longer with the security services. I left just over two years ago. Obviously, the family thing took off, the kids and so on. Right now, I work for myself. I do some security consulting, training bodyguards, protect against corporate espionage, that sort of thing. Set a thief to catch a thief, so to speak. I do keep my ear to the ground, and pass around some information when it comes through me. Still keep up with lots of contacts, you know how it is. Not officially working for anyone, but unofficially, working for everyone, sort of thing. It keeps me busy and the money coming in.\"\n\nHe stopped to take another drag in the bottle, and then continued. \"The wife knows what I used to do, and has some idea of what I do now, which is why she wasn't surprised when you suddenly popped up. That sort of thing happens. She's just mad that it happened on our holiday. And yes, this was no coincidence, as I'm sure you've surmised. We, -- I, -- came here, expressly to see you.\"\n\nHe stopped and looked at me, presumably to see how I was taking this. Given the last time I'd seen him, he'd extolled my ex-wife to shoot me, I wasn't exactly thrilled with him. And he could see that.\n\n\"Look, I'm not here to harm you, or destroy your tranquility or anything. I'm here because... well, when we last met, I was of a different mindset, shall we say. Things have changed a lot since then, family, wife, moving occupations. I have a very different perspective on what happened now than I did then. I know I said some things that were... well, while they were technically right, they were designed to hurt and for that, I do apologize.\"\n\nI wondered how I felt about that. Did it make any difference? Not to me, but it probably did for him. Whatever.\n\nEncouraged I hadn't started shouting at him yet, he carried on. \"Lucas, there's some background you need to understand who I..., who Clarissa was. Is. Well, she probably is, but I'm not. Look, this is just confusing. Let me back up and explain some of the way the world is. You'll understand better if I do that.\"\n\nHe settled back, took another pull on the beer, and stared out over the estuary past my property.\n\n\"I was career MI6. So was Clarissa. Some of what she told you, her background story, was true. Some was not. Her mother is not still living. She died when Clarissa was seven. She never knew her father, who was career Navy, and who died during the Falklands war. The woman you met was one of our old staff women, who retired. She still kept her hand in, doing odd tailing jobs for us, acting the part for cover stories, that sort of thing. Much as she did for you. Clarissa was recruited at university, as was I. I went to Hertfordshire University. We were two years apart in age, her being older.\n\n\"Now, while we are part of the security apparatus, most of the field agents come from the services, usually from the intelligence groups. I came via the Army. Clarissa came in cold, although she holds rank in the Air Force, despite never having actually been in it. It's a weird services thing, a holdover from the original SOE group in World War Two. Rank doesn't actually mean much in the field; I've given orders to generals before, and they obey them because they know I have the experience and they don't. Clarissa is now a full Colonel rank, by the way, in case you were interested. That's about as high as it goes when you are still in the field. She may well get to General if she sticks it out, but by then, she'll be running a desk, designing ops rather than running them.\n\n\"So how do I fit in all this?\" I asked, interjecting for the first time. \"Seems to me the last thing she'd need is a husband?\"\n\n\"Well, for that, I need to give yet more background. Sorry, lots of knowledge required to understand how that came to be.\"\n\nHe paused, another large gulp of beer, and an examination of the bottle, to see how much was left. Not enough, obviously. \"Thirsty work this, perhaps another?\"\n\n\"Got get it yourself,\" I grunted, sipping mine more sparingly. He gave me a mirthless grin, and jumped and sauntered into the kitchen, returning with another bottle.\n\nAfter settling, he continued.\n\n\"Okay, Lucas. So, I don't know what you know about the realities of working as a field agent for British Intelligence, but it's not like it is on TV or in the movies. We don't go out there, infiltrating super villains and their organizations, and sleeping with lots of exotic women, while killing people left right and center. Field agents, or operators, as we are called, are used sparingly and with specific situations. We recruit specific targets, for example. Once recruited, they are handed over to a handler, who works for a spymaster, who handles a specific ring of human assets. They can be anywhere from an office cleaner to the spouse of an officer, to the officer themselves, and any level in between. Anywhere we see a chink, an angle to go after. For some it's money, for some ideology, for some it's love or sex or lust, or even orientation. Everyone we deal with has a lever, and it's up to us to find it and use it. That's one aspect of being an operator."
    ],
    "authorname": "jezzaz",
    "tags": [
        "betrayed",
        "secret agent",
        "mi6",
        "wife agent"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/license-to-kill"
}