{
    "title": "My Exception is You Ch. 07",
    "pages": [
        "***All characters are 18+ years old***\n\nHi lovelies! So this is ACTUALLY chapter 7! lol. And we are back to Bruno. Chapter 8 hasn't been started yet, I think I'm still processing everything from this chapter. No spoilers but... damn... it's a lot to handle!\n\nGood luck, I hope you don't hate me for the emotional rollercoaster I've put you all on! But please, enjoy? :)\n\n====================================================================\n\nI felt like I was floating through Monday, on such an emotional high from yesterday it was stupid. Clay took me on a real date, and I couldn't stop replaying his argument with TJ in my mind. There was nothing but pride and joy over Clay's changes. I felt closer to him after seeing him put so much effort in, and doing things to make both of us happy even if it was hard for him. Everything was feeling right, my own little bubble of euphoria clouding me. And I felt very content enjoying it.\n\nThat was until I got to soccer practice... I was early today, but that was normal for Monday's because I had class right before and always went straight to the field. I saw Jason, Trevor, Chris, and TJ all grouped around Zack, chatting about something. My gut told me it was probably about yesterday and I felt queasy as that thought settled its way into the back of my mind. Against all my urges to confront them I decided to just let it go, sitting down and getting geared up. We were running scrimmages today and I was feeling pretty excited despite the looming anxiety.\n\nI stood up slowly, adjusting my shorts and tapping my feet in my cleats when I felt a nudge on my shoulder. Chris stood next to me uncomfortably, shuffling as he glanced off toward the other guys. This didn't feel good. \"You good?\" I put my hands on my hips and he hesitated, looking worried.\n\n\"Uh, no not really. Bruno, uh, Jesus how do I say this?\" he laughed awkwardly and then cleared his throat. \"TJ knows you and Clay are dating. He told Zack,\" he started and my heart fell to the pit of my stomach. I laughed, trying to play it cool.\n\n\"What do you mean?\" I asked, ignoring the gut wrenching anxiety that was consuming me.\n\n\"Look, uh, TJ went to go after Clay yesterday. You know how he can be. I guess he wanted to settle the score, you know with Clay? And well,\" he hesitated and I felt the blood drain from my face. \"He saw you two, well more than that, he took pictures of you two kissing.\" he breathed, crossing his arms.\n\n\"And you're telling me because?\" I pressed, not understanding the situation.\n\n\"They plan on sending the picture out to like, everyone. I mean like online and stuff. I'm trying to stop them. Trevor and Jason too. But they think Clay has been favoring you over the rest of the team, blaming your relationship. That and Zack feels betrayed? Like Clay tricked him. Anyway, I just wanted to tell you so you and Clay would know,\" he started to explain and I scoffed, rubbing my forehead as I glared at the field.\n\n\"And Zack thinks that justifies outing someone against their will?\" I muttered, shaking my head. I glanced at Zack and TJ who were talking happily, an unwavering hatred burning in me. My body was acting before my mind as I turned on my heel.\n\n\"Bruno no, wait!\" Chris tried to grab me but I was already storming over. Zack glanced at me with a sinister grin.\n\n\"Hey queer boy, so Chris told you? Doesn't matter it doesn't change anything. You know, it all makes sense now, why you get special treatment. Since you know, you've been fucking the cap-\" I punched him, my hand throbbing as he went falling down. He looked disoriented, holding his face as he slowly rolled over onto his stomach, struggling to his knees.\n\n\"Bruno don't!\" Trevor tried to grab me and I pushed him back, turning and kicking Zack in the side. I had my shin guards on and I wasn't sure if that cushioned the blow or made it worse. But I was hoping for the latter.\n\n\"You homophobic piece of fucking trash!\" I yelled with another kick. Before I could get down and wail on him I heard a ton of trampling footsteps and people calling out to us. Arms wrapped around me, pulling me away from Zack.\n\n\"What the fuck is going on?!\" Clay's voice demanded sternly, and I looked up seeing him slowing down to a stop. I looked to see the person holding me. Devon stared back at me with confusions, concern, and sympathy all mixed into one solemn expression.\n\n\"That crazy,\" Zack cringed, gripping his stomach. \"That fucking queer attacked me for no reason,\" he insisted at Clay. I lunged at him, Devon pinning me under his body as I panted with rage.\n\n\"Let me go!\" I insisted, hating that Devon had so much weight on me.\n\n\"Bruno you have to calm the fuck down and explain!\" he insisted, pushing both of us down as he pressed almost all of his weight into me. I crumpled under him, collapsing to my knees as I felt the adrenaline coursing through me. My body was vibrating.\n\n\"Ask TJ!\" I spat out, glaring up at everyone. Most of the team was there by then, gathering around to watch the scene play out. Tyler was helping Zack up. \"Ask TJ and Zack why I'm acting this way!\" I insisted, Zack glaring at me. TJ looked uneasy as everyone stared at him. Tyler studied me looking both angry and confused.\n\n\"Whatever it is Bruno, was it really ok for you to do this?\" Tyler gestured to Zack and I glanced at Clay, feeling desperate. He studied me, looking uncertain.\n\n\"They have pictures of me and my boyfriend!\" I explained, Tyler looking even more confused. Clay's face went pale, his arms falling as he stared back at me. \"TJ took pictures,\" I muttered, my head falling. This was all my fault. I pushed him.\n\n\"Why does that matter?\" Tyler demanded and I glared at him.\n\n\"Because he isn't out yet! And there's a reason for that! Zack be upset with me, or the situation. But don't fuck someone's life up over something like that!\" I snapped at Zack, glancing at TJ then who looked uneasy as he glanced at Clay.\n\n\"Are you serious?\" Devon pushed up off me then, walking toward Zack who was still hunched over and hugging his stomach. \"Were you going to post those pictures?\" he demanded and Zack glanced at me, before laughing slightly with a shrug.\n\n\"They're too worked up over this. It's just a photo. It's not my fault someone doesn't want the world knowing,\" he glanced at Clay with a stupid grin and I pushed up, going to tackle him when another guy from the team caught me.\n\n\"Bruno, calm down!\" Tyler barked.\n\n\"It's not just a fucking photo!\" Devon snapped, shoving Zack a bit. He stumbled slightly, looking angry. \"You don't get it do you?!\" Devon demanded loudly. \"People lose their families, their friends, their lives over shit like this!\" he yelled, Zack flinching as he glanced around. Everyone was studying him now.\n\n\"L-look I'll delete them!\" TJ started then, looking freaked out. \"It was just a stupid idea, I didn't think it was that serious. No one has to know, ok? Zack delete yours too!\" he insisted, Tyler studying Zack with his arms crossed as Zack shook his head.\n\n\"I guess I'm confused. Why does Zack want to post Bruno's boyfriend up online anyway? Who is he to him?\" Tyler demanded and my stomach turned, my body feeling clammy.\n\n\"Does that even matter? It's fucked up no matter who it is or why he wants to do it!\" Devon insisted quickly, changing the subject. I went to say something when Clay pushed past Devon.\n\n\"Give me your phone,\" Clay held his hand out to Zack. They glared at each other for a moment, Zack glancing at me before he smirked and shook his head.\n\n\"No, this is fucking bullshit! You can't throw your weight around like this, not after lying to everyone too! Spouting all that Title IX crap and making me think you cared about this team!\" Zack spat then, shoving Clay. Clay shoved him back harder, Zack catching himself before turning. He looked like he was going to lose it, stepping toward Clay with clenched fists.\n\n\"Hey!\" Tyler stepped in, pushing Zack back. \"We don't need more fucking fights!\" he insisted.\n\n\"What the hell is going on?!\" our coach's voice startled all of us, my heart racing as I glanced at Clay. He looked scared. And pissed. So incredibly, terrifyingly pissed. I looked around the team and took a deep breath, hugging myself.\n\n\"I jumped Zack. He has a picture of me and my boyfriend. He's threatening to post it online. But my boyfriend isn't out, and it could cause a lot of problems for him. So I-\"\n\n\"You're benched for three games,\" coach interrupted me without hesitation and I sighed, hanging my head.\n\n\"What about the picture?\" one of the assistant coaches asked, catching my attention. He was studying us warily. \"Zack should delete the photo. It's not good for the school to have shit like this happening. Especially not in the athletics department,\" he insisted, the coaches looking worried. But it frustrated me that they were more worried about the team and school's reputation than their player.\n\n\"Who all has pictures of Bruno?!\" coach called out, TJ and Zack raising their hands pathetically. \"Delete all of them. Any of them get out, to anyone, you're both benched for the season!\" he barked, TJ looking mortified but Zack looked livid.\n\n\"That's not fucking fair coach! It's just a damn picture!\" Zack countered, Tyler pushing him roughly as if to knock some sense into him.\n\n\"If it's just a damn picture then you should have no fucking problem deleting it!\" Devon barked, glaring at Zack. \"You ignorant, sorry sack of low-life shit!\" he grumbled, seething as he crossed his arms tightly. The team started agreeing with Devon, at least about the deleting part. But my eyes kept glancing at Clay who stood motionless, glaring at the ground. The problem was that Zack knew. Picture or no picture, Zack could just as easily spread the rumor. It's going to get out. Picture or no picture, Clay wasn't safe in his closet anymore.\n\nAnd it was my fault.\n\n\"Warm ups!\" coach barked as an uncomfortable silence hung in the air. The team all moved, Clay raising his head slowly to look at me. I saw the pain in his eyes. He had a poker face on but I saw the terror and anger bubbling beneath the surface.\n\n\"I'm sorry,\" I mouthed and he sighed, turning and jogging off to join a warm up line. I went to the other one, choosing to give him space. Zack was in my line, huffing and groaning between his circuits. I felt a bit bad. Just like the tiniest bit. But I was too pleased with myself to pay any mind to my guilty conscience. He deserved it. \n\nThe assistant coach handed out scrimmage jerseys, and I noticed Clay was on my team That made me feel good. But as we all changed into our jerseys I saw Zack was on our team too. \"Fuck,\" I sighed, jogging over to where our group was huddling up.\n\n\"So what's the play?\" Jason asked warily, glancing between Zack and I.\n\n\"Quick switch A and C depending on defense, let's try the counter attack play we drilled last week if we get a clean turn over,\" Clay started, strictly business as everyone nodded. \"No long balls. Devon loves that shit,\" he sighed with a slight smile and I couldn't help but smile too. \"Ready?\" he held his hand out and everyone joined in, Zack being the last one before the break. He was oddly quiet as we went to our respective positions. Clay represented our team for the coin toss, naturally, and Devon repped the other team. They shook hands, glancing at coach who flipped a coin.\n\nSomehow practice went by without a hitch. It was unsettling to see how normal everyone could act though. Everyone seemed to want to brush it under the rug, as if nothing even happened. Right as we were about to pack everything up though, coach called out some names. I heard mine and hurried over, noting who else he called: Tyler, Devon, Clay, Zack and me. It was everyone who seemed to be directly involved in the fight before practice. Zack was glaring at me, coach standing with the rest of his staff as they studied us all.\n\n\"We're talking about this,\" coach breathed and I sighed, crossing my arms.\n\n\"Devon, Clay and I all got to the field in time to try and break up the fight,\" Tyler defended them and coach nodded once, glancing at Zack and myself.\n\n\"I already explained myself. Not to mention Zack has been a fucking douchebag to me!\" I scoffed. \"I've been holding a lot back since our almost fight in the shower that one day. I think I hit my boiling point,\" I grumbled, crossing my arms as I glared at my feet.\n\n\"Zack?\" coach asked, all of us glancing at him. He shrugged, shoving his hands into his pockets as he glanced at all of us. \"You deleted those photos right?\" coach demanded and he sighed, nodding slightly. \"What the fuck is going on?\" he demanded then, looking at all of us.\n\n\"Zack's homophobic shit,\" Devon spat, looking pissed. \"He's been horrible to Bruno and like no one, not even the coaching staff gives a rats ass!\" he started up, riled. Clay looked shocked as he studied Devon, Tyler sighing as he nodded.\n\n\"It's true. We've all kind of turned a blind eye to it. You can say it's harmless jokes as an excuse, but Zack is really crossing a line. I told him that last week. But it wasn't until Clay mentioned Title IX and stuff about harassment and shit that Zack even laid off a bit. I guess the team thinks it's ok to do whatever they want, treat each other however they want?\" he offered, some of the coaches looking a bit guilty.\n\n\"Is this all really because Bruno is a homo?\" coach breathed and I flinched, scoffing slightly. \"What is that not the right term?\" he grumbled and I glared at him. Zack snickered but Tyler reached over and slapped him upside the head.\n\n\"I'm bisexual you fu-\" I caught myself, swallowing my frustrations as I cleared my throat. \"It's a bit different. But calling someone a homo is like calling someone a fag. It's derogatory,\" I offered, the coach all but rolling his eyes as he sighed. \"Maybe it's the coaching staff's fault for not interfering on my behalf? I mean maybe Zack felt like he could behave this way, that it got to this far because he was enabled by bigoted authority figures,\" I offered boldly, glaring at him.\n\n\"What are you insinuating?\" he chided and I smirked sinisterly.\n\n\"You know exactly what I mean. Find a way to make me not want to report you all for willful neglect and enablement of harassment due to homophobia,\" I shrugged. His eyes narrowed and he sighed, rocking on his feet as he shoved his hands into his pockets.\n\n\"Fine. Tyler and Devon are in charge of getting back to me about shit with the team. I don't trust anyone else to be honest about the situation,\" he offered and I glanced at Clay, some of the other coaches looking confused too.\n\n\"Why not Clay?\" Tyler asked and I felt uncomfortable, watching Clay as he turned to the side with a heavy sigh.\n\n\"Because I'm the other guy in Bruno's picture,\" he muttered then, glancing at me with a blank expression. \"And I'm assuming that's a conflict of interest,\" he shot a look at the coach before turning away. His shoulder bumped Zack's as he walked off toward the shower. Tyler looked floored, staring at me in awe. I sighed and turned, my chest tight as I hurried after him.\n\n\"Clay are you ok?\" I demanded quietly, catching up as he gathered his stuff up.\n\n\"Am I ok? Of course I'm not ok,\" he breathed. He seemed too calm, too level headed. He was about to walk past me and I grabbed his arm. He glanced at me, his eyes looking wild as he studied me. \"Bruno please, I have a lot on my mind,\" he muttered and I hesitated, feeling off-balance and panicked.\n\n\"I'm sorry. This is my fault. I pushed you,\" I hugged myself and he sighed, slinging his bag over his shoulder.\n\n\"Whatever. It doesn't matter now. What's done is done,\" he breathed, glancing toward the field. \"I have to see how many people know,\" he sighed, turning to go up the stairs. I turned and hurried to get my shit, panicked as I went after him. He didn't seem in his right mind. Well no, he seemed in the wrong state of mind to be handling this rationally. I got to the locker room, pushing the door open to see Clay standing, facing the team.\n\n\"How many people know?\" he asked TJ, who was sitting on a bench holding his head.\n\n\"Some people that were at the birthday party, Zack, whoever Zack told after he found out,\" he mumbled and my heart ached, my body jittery as I studied Clay. His shoulders visibly tensed, his arms twitching as he clenched his hands into fists.\n\n\"Give me an idea,\" his voice sounded funny, everyone looking freaked out as they pretended not to be paying attention. TJ shrugged shaking his head and Clay stepped closer to him, slamming the side of his fist into the locker. \"Dammit TJ! I need to know how many people you two told!\" he yelled, the locker room eerily quiet. \n\n\"Look man I only told a few people! I don't know about Zack!\" he insisted, looking shaken up. \"I didn't know your situation ok? I'm sorry!\" he insisted and I sighed, stepping to Clay and grabbing his arm. He jerked away, glaring at me then. I tried not to look hurt as I stepped back, sighing heavily.\n\n\"I need to clear my head,\" he muttered turning as everyone else came into the locker room. He hesitated as Zack walked in last. He grabbed his shirt, slamming him up against the wall. The assistant coach tried to pull him off, Clay knocking him back. \"You tell me right now, who have you told?\" he demanded. Zack looked agitated but also a bit unnerved at how worked up Clay was. In fact almost everyone did. Of course this wasn't common behavior for Clay. This was wildly out of character in their eyes.\n\n\"Clay man, take a walk!\" Devon grabbed him. Clay slammed Zack into the wall again before pushing off him to storm out.\n\n\"Why is Clay so upset about Bruno's photo?\" one of the teammates asked and I sighed, wanting to follow him. Of course that might upset him more. But he was my boyfriend. Against my better judgment I settled on following. I looked at Devon desperately, hoping he'd handle the team while Clay was gone.\n\n\"Uh, could you-\"\n\n\"Just go,\" he sighed, pushing me toward the door. I hurried out, looking around to see if I could find him. Where would Clay go if he was this upset? I pulled my phone out, calling him as I walked through the building toward the back stairs that led to the track and field.\n\n\"Bruno, I'm not in the mood,\" he grumbled immediately after answering. I bit my lip, hesitating as I continued outside. I walked down the stairs slowly, my heart racing.\n\n\"Look we don't have to talk about anything. Just, you shouldn't be alone right now!\" I insisted and he actually laughed.\n\n\"I want to be alone right now! I'm fucking pissed, scared, a million fucking things. But you can be happy now. You got what you wanted,\" he sighed and I froze, my face wrinkling as I got angry. I choked on my own words, a million thoughts wanting to come pouring out. But I couldn't utter a single one. After another minute of silence he sighed. \"I'm sorry. I shouldn't have said that. It's no excuse but I'm too pissed to think straight. And I don't want to lash out at you. Please just, give me some space?\" he muttered and I clutched my bag strap, glaring at the track before sitting down slowly. I felt defeated.\n\n\"Are you sure you can be alone right now?\" I demanded and he sighed.\n\n\"Doesn't matter, I want to think. And I can't do that with people around,\" he hung up. For the first time in a long time I started to feel that horrible, sickening feeling in my stomach. It was like when your first heartbreak hit you. Or when you get really bad news that seems uncertain and out of your control. I felt like I was choking on something, and that something was a sadness that never turned into tears. It was deeper than a simple cry.\n\n\"Shit!\" I pushed up, sliding my bag off my shoulder. I swung it high, slamming it into the stairs with a loud grunt. \"God fucking dammit!\" I yelled, wanting to punt it as far as I could. I was burning, my body shaking. Fuck TJ. Fuck Zack. Fuck our coaches. And fuck Clay for pushing me away when he should be pulling me close. \"You should want me around in a time like this you fucking asshole!\" I spat, grabbing my shit. I made up my mind. I was going to his place. He didn't get to push me away anymore, to do this to me.",
        "***\n\nIt was getting dark, and I kept glancing at my phone. He hadn't called. Hadn't texted. Nothing. I was sitting on the stairs outside his stupid house waiting for him to show up. My anger seemed to only get more and more unbearable the longer I sat around for him. That's when something caught my eye. I glanced down the sidewalk and saw him walking up toward the house.\n\n\"It's about fucking time! Do you know how worried I've been?\" I started angrily, standing up. I walked over to meet him, freezing when I saw the look on his face. He looked miserable. Worse, he looked like he was crying. And not a few tears but a hard, ugly, depressing kind of cry. \"Clay!\" I hurried over to him. He dropped his stuff, catching me in his arms. He crumpled into me, crying again as I held him.\n\n\"What do I do?\" he choked, shaking as he cried. \"I'm going to lose everyone,\" he sounded devastated. I clung to him, holding back my own tears as I squeezed him tighter. I just let him cry. There was nothing else I could do, nothing I could say. He would probably lose some of his family over this, based on what he's told me. And there was nothing he could do to put himself back into the closet.\n\n\"This is my fault,\" I whispered as he finally calmed down. I buried my face into his neck, clinging to him as I felt myself getting emotional. \"I understand if you despise me for pushing you so much,\" I started and he grabbed my arms, pushing me back. His eyes were intense and bloodshot, his irises still dazzling though.\n\n\"I could never despise you. Bruno you're the only good part in all of this. After everything today too, you came here to help me. I was such an ass to you! And not only that but you've been fighting all of this on your own. I should have done more. I froze again like a fucking idiot!\"\n\n\"Clay that was a lot to process. And not to mention your family too! it makes sense why you-\" he pulled me close, his lips crushing mine. It felt pained, feverish as he worked his lips against mine. When he pushed me back, his hands tight around my biceps, I was a bit shocked.\n\n\"Stop excusing everything like it's ok! It's not fucking ok! Bruno I should have leaned on you, not pushed you away! All I do every time is make the wrong choice!\" he seemed so mad, so distraught as he studied me. His eyes looked frantic, his body rigid. \"How can you still keep coming back to me?\" he muttered softly then, shaking me slightly before letting me go as his arms fell.\n\n\"Because I was raised to be there for people I care about. My dad always told me if you're there for people, through all the rough shit life drags us through, they'll be there for you in return. Family, friends,\" I hesitated, and then wrapped my arms around his neck as he sighed. He kissed my forehead, his arms sliding around my waist. \"And lovers,\" I whispered and he actually laughed lightly. \"Give yourself to them, and they should give you everything back in return. Isn't that what we're here for?\" I asked and he shrugged.\n\n\"What have I even given you?\" he sounded ashamed and I pouted.\n\n\"Happiness, laughter,\" I started and he scoffed. \"A best friend. You said it yourself, I'm the only person you've gone out of your way for,\" I reminded him and he tensed a bit. \"Even getting yourself outted for my sake. I'd say that's a lot to give for one person,\" I whispered and after a moment he sighed, pulling me closer.\n\n\"I was reckless and kissed you so close to the restaurant. It's not your fault. So please don't blame yourself. Hell I know I wanted to blame you, hate you for it. Fuck I even started to! But that's not right!\" he locked his arms around me. If felt like he could crush me as he shook his head. \"Sorry for pushing you away too,\" he whispered and I relaxed into his arms, holding him just as tightly then. \"I've only ever known how to suppress my emotions, not understand or manage them,\" he muttered and then we both sighed.\n\n\"Can we go inside?\" I looked up at him and he nodded. He picked his stuff up, letting me walk ahead of him as I got mine.\n\n\"Did you even shower?\" he muttered quietly as we walked in. I shook my head slowly, sighing.\n\n\"I went looking for you and then just came here to wait,\" I felt embarrassed admitting that as we climbed up the stairs to his room. When we got in he grabbed my bag, dropping it on the floor. I looked at him, a bit shocked as he pulled me close.\n\n\"You waited this long for me?\" he asked softly, his one arm around me as he reached up to hold my face.\n\n\"Yes,\" I croaked, his eyes so warm. He smiled weakly, looking broken up as he sighed.\n\n\"Fuck. This isn't the right time to be thinking this, or saying it. I thought it yesterday too but I, Bruno I,\" he hesitated, biting his lip as he closed his eyes. He pressed his forehead to mine before exhaling sharply. \"Damn this feels insane. You make me feel so good. Like no matter what it's like everything is going to be alright when I have you with me,\" he whispered and I felt my heart thump painfully.\n\n\"What are you saying?\" I whispered and he sighed, kissing me then. It was a tender kiss, both of us just loosely holding one another. My tongue brushed his and I felt a shaky breath escape me as my heart fluttered and my stomach knotted. Why did this kiss feel so different?!\n\n\"Bruno I, I think I'm falling in love with you,\" he muttered. The room was silent, my heart racing as my ears burned. \"The more we're together, the longer I get to be around you, have you? Since this, I've been happier, better,\" he insisted. Overwhelming joy and panic fought to take over as I stared into his eyes.\n\n\"Are you sure it's not because I'm the first normal relationship you've had?\" I offered and he held a thought back, pursing his lips before he shook his head.\n\n\"No it's because you,\" he hesitated, reaching up to hold my face with both hands as he smiled then. \"This is going to sound really corny but I don't care. Bruno you're the first person I've ever opened up to. And I mean before this. You were probably oblivious to it because I think you've only had good opinions of me up until we started dating but,\" he chuckled when I laughed.\n\n\"But?\" I composed myself and he sighed, kissing me softly.\n\n\"But I have always liked being around you. You feel safe to me. It's like I can breathe. I don't have to hide or pretend with you. I like the person I am when we're together,\" he continued and I felt at a loss. Not in a bad way. It was just hard to process all of these emotions. We just stood there, holding each other in the comfortable silence. \"How do you feel when you're with me?\" he whispered after a while and I sighed, squeezing him into a tight hug.\n\n\"Like I'm losing my fucking mind,\" I muttered and he tensed up. I smiled, closing my eyes a I held him close. \"I mean that in the best and worst ways,\" I explained and he sighed. \"Before you I was certain I was straight for one,\" I laughed lightly and he did too. \"And I told you before but a relationship has never felt like this for me. I have never wanted something so bad in my entire life. But the way it feels to be with you, to have you around, to get to know you,\" I shrugged, his hands rubbing my back roughly as he sighed. I could feel his body relaxing.\n\n\"So you do like me and not just the sex right?\" he mumbled and I smiled, pulling back to look up at him.\n\n\"You realize I drunkenly told you I found you hot before we even kissed, let alone fucked right?\" I blushed and he laughed, blushing too. After a bit he sighed, looking worried again.\n\n\"What happens now?\" he asked and I hesitated, shrugging. He glanced at his bed and the bathroom. \"Stay the night with me please?\" he whispered and I smiled, a warmth consuming me as I nodded. \"You can shower here too. I'll let you borrow some clothes to sleep in,\" he continued and I sighed, pulling him in for a kiss. His arms tightened around me, our bodies pressed firmly together as we kissed.\n\n\"Clay I'm your boyfriend. You don't have to convince me to spend a night with you,\" I teased and he blushed, smiling weakly as he closed his eyes.\n\n\"Sorry. I guess I keep forgetting how much you want this too,\" he muttered, a stabbing pain ripping through me as I saw the torment on his face.\n\n\"You really can't understand why I like you, can you?\" I asked softly and he shook his head. \"Is it because no other guy has been like this or what?\" I demanded, trying not to seem annoyed.\n\n\"What? No it's because you're straight!\" he insisted and I tried not to laugh.\n\n\"How many straight guys do you know get hard ons from looking at another man's flaccid cock?\" I demanded playfully and he sighed, trying not to laugh. I grabbed his hand and led him to the bathroom. \"Shower with me,\" I insisted. He didn't argue, both of us stripping down as he ran the water. It was hot and steamy when we got in. We each took turns washing up, kissing and caressing one another tenderly. It wasn't until the water started running cold that we even thought about getting out. After drying off I didn't even bother with clothes as I crawled into his bed.\n\n\"Are you hungry?\" he asked and I went to shrug when my stomach rumbled loudly. He laughed and stepped into sweatpants, no underwear I noted as he grabbed his phone. \"Want me to order pizza or something?\" he waved his phone and I shrugged. He put the phone up to his ear, his back to me as he ran his hand through his damp hair. I watched his back and arm muscles twitch, liking how low his sweatpants sat on him.\n\n\"What the hell is wrong with you?\" I whispered to myself, rubbing my face to try and collect my thoughts. The last thing he needed was a horny boyfriend trying to take advantage of him. He hung up and turned, walking over and crawling onto the bed with me. He pulled me into his arms, his hands running up and down my back. He rested his cheek on my chest as he sighed heavily.\n\n\"Bruno, do I tell my parents? Or just hope the word doesn't get out?\" he whispered and I tensed up.\n\n\"I don't have that answer for you,\" I admitted softly and he sighed, squeezing me tightly. \"Would telling them versus them hearing it from someone else change the outcome in anyway?\" I muttered and he flinched.\n\n\"Probably not,\" his tone was harsh. \"Fuck. I knew this day was coming but I wanted it to be on my terms!\" he insisted and I sighed, curling into him as I wrapped my leg around his hip. His thigh slid between mine, the two of us tangling together.\n\n\"Maybe see in the next day or two if it's even getting around campus. Without proof people might just think it's a baseless rumor,\" I offered and he shrugged.\n\n\"But that means still hiding, you know that right?\" he looked up at me then, his eyes looking like a wounded puppy as he studied me. \"Are you ok with still being just friends on campus?\" he whispered.\n\n\"Until you're ready to come out, yes. As long as it's not like it was before yesterday,\" I corrected and he laughed once, smiling as he nodded. He wiggled close to me again, sighing as he kissed my chest and rubbed my back.\n\n\"Is it ok if you just hang out with me? I really just need a lot of this right now,\" he squeezed me pointedly and I nodded, too fucking pleased with the idea as I rubbed the back of his neck and down his spine.\n\n\"Whatever you need. I'm here,\" I assured him and he sighed, leaning his weight into me more. We stayed like this until the pizza came. After we ate, we cuddled up under the blankets in the dark, just holding one another. We hardly spoke as sleep took us... I stirred when I heard a weird noise, my forehead wrinkling as I groaned. I went to move when I realized Clay was curled up against my back. His arms were around me tightly, his legs tucked up against mine. He was crying.\n\nI pressed my hands to his arms and he gasped, clearing his throat and pulling away. I rolled over, frustrated that he'd try to hide his feelings. I pushed him down onto his back, sliding on top of him. \"Bruno what-\"\n\n\"Don't you dare hide any of your feelings from me. You're allowed to fucking cry Clay. This shit is scary. I'm not going to blame you for being this upset. And it won't hurt me to know you're upset either. So if you want to cry, go ahead and cry. But I'm going to be the one to comfort you when you do it,\" I snipped, leaning down to kiss him. His lips trembled as he kissed me back. When I pulled away he threw his arm over his face, his other hand covering his mouth as he started crying again.\n\nI sighed and adjusted, running my hands along his stomach and over his chest. I leaned down and started kissing him all over too, just gentle kisses as I continued rubbing his body. \"God this really fucking sucks,\" he choked, wiping his eyes. I smiled sympathetically, my hands pressing into the bed by his head as I leaned over him.\n\n\"Yes. Yes it really does. But I'm here for you. And you know Devon and Jake are here for you too. And I'm certain my family-\"\n\n\"Why is it that no matter what you say I want to believe it? That I just have blind faith in you?\" he interrupted me and I hesitated, biting my lip with a slight shrug.\n\n\"Maybe you're really blinded by love?\" I teased quietly and he actually laughed, sniffling as he wiped his nose and eyes again.\n\n\"Fuck, you're probably right,\" he reached down to run his hands up my legs and sides, then back down. He did it a few times before sighing heavily. \"I won't be able to get back to sleep any time soon,\" he whispered and I hesitated, too many perverse thoughts flooding my mind.\n\n\"What do you want to do?\" I could barely get the question out. He took a deep, shaky breath and cleared his throat.\n\n\"Don't judge me,\" he mumbled and I smiled.\n\n\"Can't promise you anything,\" I insisted and he sighed, sitting up slowly.\n\n\"I want you to wear one of my shirts and a pair of socks,\" he whispered and I hesitated, a bit shocked at the request. Before I could say anything he wrapped his arms around me, kissing my neck. \"I think it'd be so cute seeing you in a baggier shirt, socks, and nothing else. Especially while you're on top of me like this,\" he gripped my ass and I lost my breath for a second.\n\n\"Are you sure you want to do something like that right now?\" I muttered, my cock giving away how badly I wanted it too as it stiffened.\n\n\"Right now it's the one thing I want most. You can think it's fucked up but I want you to remind me why I shouldn't mind being outted if it's for you,\" he whispered and a thrill ran through my spine and up my neck. I hesitated and then kissed him, my tongue teasing his lips. He pulled away with a sigh, both of us already breathing heavy as my cock was full mast.\n\n\"What shirt?\" I gasped as his hands clawed at my hips, his mouth on my neck. He bit and sucked at it, my head rolling to the side as I clung to him. It felt so fucking good.\n\n\"Any of the ones in the middle drawer on the right,\" he huffed, pointing to his dresser. I kissed him again, his hands sliding up my back aggressively as our tongues tangled and slid between our lips. It took all my will power to pull away, his hands sliding over my ass and off my legs as I pushed off the bed. I hurried over, easing the drawer open. I grabbed a shirt, sliding it on immediately. It was a long sleeve cotton shirt that felt like it had a graphic on the front. It definitely was bigger on me, hanging over my ass and dick. I pushed the sleeves up, running my hand through my hair as I pushed the drawer shut.\n\n\"Socks?\" I called back quietly.\n\n\"Top middle drawer, the small one,\" he muttered and I pulled it open, finding a pair. I slid them on my feet, turning and balancing as I adjusted the band. They were definitely a pair of athletic socks. Like ones I'd wear with my high tops. I hurried back over to the bed, climbing back onto his lap.\n\n\"So?\" I asked softly, running my hands along his chest and stomach as his arms slid up into the back of the shirt. He took a deep, long breath in before sighing heavily.\n\n\"It's perfect,\" he pressed his hand between my shoulder blades, the other sliding down to my ass. I slid my hands up the back of his neck and into his hair on top of his head. I pulled his head back, kneeling up over him as I pressed my mouth down onto his. He groaned, both his hands on my ass then as our tongues collided. I felt his fingers sliding between my cheeks and teasing my ass. And then he pulled them apart, his fingers prodding at my hole.\n\n\"Fuck, not dry please,\" I huffed and he chuckled. One of his hands pulled away and before I could kiss him again he shoved two fingers into my mouth. After the shock wore off I sucked on them, my tongue sliding along and in between them.\n\n\"That's so tempting, to feel that on my cock,\" he grumbled, pulling his hand away. I gasped for air, my face hot as I leaned into him again. He rubbed his wet fingers against my ass, poking in occasionally until I relaxed. He sucked on my lips, his tongue finding mine. A second into the kiss and I felt him shove his fingers deep into me. My mouth fell open, my head hanging back as I inhaled. It was always so overwhelming at first.\n\n\"Shit,\" I slumped into him, hanging onto his shoulder as my hands clawed at his back. He gripped my ass, working his fingers in a stable rhythm. I felt his lips on my ear then, his breath scorching hot.\n\n\"So damn tight,\" he muttered. I felt his tongue and teeth then. \"My cock is just dying to get in here,\" he pushed his fingers in pointedly, my back tensing as it felt like he was stirring them around. His one hand let my ass go, sliding into my hair as he pulled on it. I whimpered, giving in as I moved. My mouth brushed against his, molding and sliding around his lips as we kissed. \"Fuck Bruno, I love this,\" he huffed, his voice laced with his desire.\n\n\"M-me too,\" I panted, shoving my tongue into his mouth then. We both groaned, his fingers tangling in my hair as he fingered my ass.\n\n\"I can't wait anymore,\" he groaned, pulling away. He leaned back toward the bedside table, grabbing the lube bottle. I noticed he didn't have a condom, my heart racing. \"Want to put it on for me?\" he held the bottle up and I hesitated, taking a deep breath. I snatched it from him with a moment of conviction, flipping the cap. He reached down, pushing his sweatpants off his hips. It was an involuntary reaction but I actually groaned and shuddered as his dick fell out of his pants.\n\n\"So fucking big,\" I muttered, mesmerized by how thick and stiff it looked. He stroked it sensually, leaning back on his hand as I watched. Without thinking I started pouring lube all over it and his hand. He was breathing heavier, his hand and cock slick with lube. \"Fuck that's so hot,\" I closed the bottle, glancing up to see Clay's head hanging back slightly. His eyes were shut, his mouth open as he panted and huffed with desire.\n\nI grabbed his wrist, his eyes opening as he looked at me. I adjusted, working his hand between my legs. His eyes bulged a moment before he bit his lip, his forehead wrinkling as he slid his hand and fingers up along my taint and toward my ass. They were so lubed up his fingers slipped right in. My hands gripped his waist, my head falling back. He was rubbing his hand against my taint, nudging my balls as he worked his fingers in and out of my ass.\n\n\"God yes,\" I groaned, my fingers digging into his sides as he pushed deeper. When he hit my prostate I locked up, my head dropping back with a loud groan.\n\n\"Goddamn,\" he moaned, rubbing it again. I reached up, pushing on his shoulder as desire consumed me. I wanted him in my ass. Not his fingers, but his hot, pulsating cock plunging deep into me. And there wasn't a moment of hesitation or nerves as I nudged him to lie back. He looked confused as I adjusted, pulling his shirt up in the front. I shoved some of it into my mouth, holding it up as I shifted my hips. My hand found his cock and I closed my eyes, pressing it up between my cheeks.\n\n\"Mmm,\" I felt so good as I rocked slightly, rubbing his burning shaft against my asshole and between my cheeks. His hands gripped my thighs, his hips rolling under me as he started working himself against me too. I adjusted, pulling up a bit and we both groaned as the angle pushed his tip against my ass. With a thrust he found some give, my body trembling as I groaned and panted through the sensation. Inch by inch he was easing in, my weight pushing down on him. When I sunk all the way down I held myself there, trembling and gasping for air. I felt so stuffed, but it felt fucking amazing.",
        "He gripped my ass, rolling my hips and cheeks as he gently thrusted and wiggled his hips against me. It was slow and tantalizing, my body burning up as pleasure started to consume me. I pressed my hands on his chest, adjusting to slide my legs out from under me. I planted both feet on the bed, his eyes wide as he ran his hands down my thighs. His thumbs brushed my taint and balls, his palms hot as they rested by my crotch.\n\nI reached back, bracing my hands on his thighs, lifting my hips up and lowering them. His head snapped back, his hands clawing at my thighs as my weight dropped down onto him. He was panting and trembling, his dick burning up in my ass. Soon enough I got a good rhythm, panting and moaning as I rode his dick. His shirt fell out of my mouth, hanging on my throbbing cock.\n\n\"Holy shit you're so fucking hot,\" he groaned, his hands sliding up under the shirt and to my hips as I pulled up. Without warning he pulled me down and lunged his hips up at me, a jolt shooting through my body. I choked out a cry of both pain and pleasure. Before I could recover he did it again. Over and over he was taking my ass, my body obeying as I lost my mind to the high.\n\nBefore I could comprehend what was going on he was flipping us over, pushing the shirt up as I landed on my back. He grunted and thrusted as he worked his raging dick into me, holding the shirt down into the bed. My arms were pinned above my head in the bundle of fabric, my legs spread wide around his hips as he started to let loose. The sounds of his body slapping against mine, our moans, and the ragged breathing drowned out all my thoughts.\n\nNot too long after he let go of my arms, his hand running down my body. Our lips parted as we both gasped for air, his hand finding my shaft. I wiggled my arms out of his shirt, reaching down and grabbing his hand before he could jerk me off. He hesitated, his eyes opening to meet mine.\n\n\"Do you not want to-\"\n\n\"I want to cum just from you filling my ass,\" I whispered and he froze a moment before his face wrinkled. He groaned, grabbing both my legs and pushing them back. He leaned back slightly as he started going faster and harder. The shift in angle was enough to drive me mad. Each thrust was like a tidal wave of pleasure, my body feeling like it was edging over and over again. This burning in my cock and balls was unbearable. My hands clawed at the pillows above my head, my breaths turning to moans and whimpers.\n\n\"You know how to,\" he slammed into me, my head falling back as I cried out. \"How to really drive a man wild,\" he groaned, grabbing my ass. He spread me open, driving himself into me relentlessly. One minute of that and I was gone. We were both moaning loudly, smells of sex and sweat filling the air and adding to the lust-charged atmosphere. I could feel it, my balls swelling as my blood boiled.\n\n\"You're gonna make me cum!\" I grunted as he pounded at my ass, his face contorted with his own pleasure.\n\n\"God I want to cum in this ass,\" he huffed and I shuddered, so horny and desperate for release.\n\n\"Fuck, cum in my ass!\" I cried out, another powerful surge of pleasure coursing through me as he adjusted slightly. This time I could feel his tip driving against my prostate with each thrust. My body quivered, my back tensing as I felt my balls clenching and churning. \"God right there!\" I almost yelled, my hips rolling slightly. He gripped my hips, his fingers digging into the tops of my thighs as he went crazy. \"Oh shit! Clay! Oh fuck yes! Oh god! Huh, aahhk, gonna, I'm, I'm, ooohfuuuu!\" I felt my feet curl, my body tensing and bucking as I exploded.\n\n\"Oh so fucking tight!\" he groaned, going even faster as spurt after spurt of cum covered my stomach and chest. \"Ooohh guh, huh, mmm,\" he pushed deep, just rolling his hips against me as his head fell back. He was panting, his body seeming to move with each spurt of his own cum. He held steady finally, shuddering and twitching a bit before he gasped and fell over. \"Holy fuck,\" he muttered, his eyes meeting mine briefly before we kissed. We both moaned, our tongues mingling as he eased himself out of me. I shuddered, my ass feeling stretched and empty.\n\n\"Can you fall asleep now?\" I whispered after he finally pulled away. He laughed, still a bit breathless before leaning down to kiss me again.\n\n\"Let's rinse off and pass out,\" he muttered, patting my thigh. I bit my lip, feeling like jelly as I tried to move. He noticed, crossing his arms smugly. \"Was it that good?\" he leaned down, helping me up as my legs wobbled. My back was aching, my hips and knees feeling weak.\n\n\"Shut up and get me to the bathroom,\" I grumbled, leaning into him. He helped me walk, setting me on the toilet as he turned the shower on. He slid his sweatpants off, squatting down to take my socks off. \"Do you think we woke anyone up?\" I asked suddenly, his eyes meeting mine as a devious smile tugged at his lips.\n\n\"I'm sure we did. You're quite loud,\" he teased, standing up enough to kiss me before slipping into the shower. I blushed and got in as well, letting him wash me. He took his time, his body against mine as he ran his hands and soap all over me. We made out while he fingered my ass, diligently working his cum out of it. It all felt so fucking amazing and sensual. As we got out and dried off, he pulled me against him to kiss me again before sighing and smiling. \"You're amazing,\" he whispered and I blushed.\n\n\"Amazing enough to come out?\" I teased and his face was serious as he studied me.\n\n\"Yeah,\" he breathed then and I was floored. He hesitated and sighed, pulling the towel away from his hips and rubbing it into his hair. \"But not to my family though. Not yet,\" he added quietly and I nodded once, speechless as I slowly dried my arms. It wasn't until we were back in bed, me lying against Clay's side as he rubbed my back, that I could even think of something to say.\n\n\"You just made me really fucking happy,\" I whispered and he chuckled, squeezed my shoulder as he kissed my forehead.\n\n\"Good. It's about time I start making you as happy as you make me,\" he muttered and I sighed, unable to stop smiling as we cuddled up. \"Everything is going to be ok, right?\" he asked softly and I took a deep breath.\n\n\"I want to say yes, but that's me being optimistic,\" I admitted and he shrugged.\n\n\"Whatever. As long as you say it's going to be ok, I'll believe you,\" he sighed, rolling onto his side. He held onto me, both of us just staring at one another. We shared a few soft kisses, our noses touching as our legs tangled.\n\nI felt cautiously optimistic about the situation. And there was a part of me that was happy people saw us. It was the selfish part of me, but something told me this needed to happen to push Clay toward a happier life. I'm sure this was going to turn out to be a good thing in the end."
    ],
    "authorname": "CateredContentQueen",
    "tags": [
        "gay romance",
        "gay drama"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/my-exception-is-you-ch-07"
}