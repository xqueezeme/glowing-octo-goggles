{
    "title": "Granddaughter's Worry",
    "pages": [
        "Copyright Oggbashan December 2020\n\nThe author asserts the moral right to be identified as the author \n\nof this work.\n\nThis is a work of fiction. The events described here are imaginary; the settings and characters are fictitious and are not intended to represent specific places or living persons.\n\n+++\n\n\"Charles? Remind me. Where are we going?\"\n\n\"Bermondsey, Sir Henry.\"\n\n\"Bermondsey?\" I put as much disdain into that word as I could.\n\n\"Is there such a place as Bermondsey? I have never been there, have I, Charles?\"\n\n\"As far as I know, Sir Henry, no.\"\n\n\"I could understand Kensington, Mayfair or perhaps even Chelsea, but Bermondsey? The mind revolts.\"\n\n\"I understand they have a large opulent house, Sir Henry.\"\n\n\"Maybe, but In Bermondsey? It's full of Cockneys and jellied eel stalls. Revolting. And why aren't I in a chauffeured Rolls Royce instead of a London taxi?\"\n\n\"You could be, Sir Henry, but you hate spending your own money. Lady Oxsmith is paying for this taxi.\"\n\nWe had been collected from the stage door and were passing the neon lights of Piccadilly Circus in this late 1960s.\n\nCharles has been my private secretary for over forty years. He can take liberties that I wouldn't allow from anyone else.\n\n\"Oh, well, it will be nice to see her, even if she does live in such an impossible place. And, Charles, I wasn't wholly happy with my audience tonight. They were polite, respectful, but there seemed little excitement in them.\"\n\n\"And you know why, Sir Charles. They are all getting older. You are a performer from an earlier era appreciated, even loved, but decades out of date.\"\n\n\"I should think I am. I can't compete with likes of Elvis Presley or British pop stars of today. Not that I would want to. It must be annoying to perform in front of an audience that screams all the way through so that whatever you are singing is completely drowned. But when I was on the bill with Cliff Richard and the Shadows they seemed to be polite young men. I liked them -- if not their music.\"\n\n\"And they liked you too. It was a nice gesture from them to ask for signed photos of you.\"\n\n+++\n\nWe had arrived at Lord and Lady Oxsmith's house. Charles was right. It was an opulent house. We entered a carriage drive. The gateposts were topped with heraldic beasts. The house itself was floodlight and brilliant white in an extreme Art Deco style -- the sort of house that wins architectural awards and is impossible to live in, but perhaps this house wasn't.\n\nThe butler came down the entrance steps and opened the taxi door while a footman paid the taxi driver. I clapped my top hat on my head and swung my red silk lined cloak around me. I know I look like the Bad Baronet from Gilbert and Sullivan's Ruddigore, but why not? I AM a Baronet, and at my age I can afford to be bad -- sometimes.\n\nOnce inside the butler took my hat, gloves and cloak. I kept my gold topped cane. It used to be an affectation but at my age I now need it -- sometimes.\n\n\"Sir Henry,\" the Butler said. \"Lady Oxsmith would like to see you alone.\"\n\nHe looked pointedly at Charles.\n\n\"Very well,\" I said, \"Charles? See you later.\"\n\nI followed the butler up the stairs, slower than I would have liked but stairs can be a challenge. The Butler showed me into Lady Oxsmith's boudoir.\n\nShe stood up to greet me, and when the Butler had left, kissed me on both cheeks. That was pleasant, even if she had to stoop at little to do it. For my generation I am not short, but Lady Oxsmith is tall, very tall for an operatic singer. I had recently seen her at Covent Garden in the role of Zerlina in Mozart's Don Giovanni. Her performance had good reviews except that some comments were that she made her Mazetto look like a dwarf and if Don Giovanni had tried anything with her he would have had a straight right to his nose.\n\nShe reminded me of Dame Clara Butt of my youth. I had performed at some concerts with Dame Clara who was over six feet tall but heavier built than Lady Oxsmith.\n\nThere was a white cardboard box beside a wine cooler with a bottle of champagne and three glasses.\n\n\"Sir Henry,\" she started to say...\n\n\"Just Henry,\" please, I said.\n\n\"In which case, I am Elaine,\" she said. \"I am pregnant.\"\n\n\"Congratulations, Elaine,\" I said automatically.\n\n\"But I am worried and need your help, Henry.\"\n\n\"My help? How?\"\n\n\"My grandfather was the Duc...\"\n\n\"Yes,\" I said tentatively\n\n\"And my mother was the Countess.\"\n\n\"I know, Elaine.\"\n\n\"But some of the Duc's relations have been found to have a significant heriditary disease which might affect my unborn child. But there were rumours...\"\n\n\"Can I sit down, Elaine?\"\n\n\"Of course, Henry.\"\n\n\"I think I know what you want from me, Elaine. Yes, there were rumours but the Duc and I denied them. If asked in public, I will still deny them. But, in private to a pregnant Elaine, I will say what should not be said.\"\n\n\"You will?\"\n\n\"Yes, Elaine. What isn't known is that the Duc was injured in the First World War. Or rather, that IS known. What was not known was the effect of his injuries. He could never father children...\"\n\n\"Then how?\"\n\n\"Exactly. How did his wife produce two children, a girl, your grandmother, and two years later a son and heir who became the Duc?\"\n\n\"How?\"\n\n\"They had a good friend -- me. At the time medical science couldn't help. But I could and did. With the agreement of both of them I made love to the Duc's wife. It was intended to be once only but the first born was a girl and the Duc wanted an heir, so I was asked again.\"\n\n\"So I am your granddaughter, Henry?\"\n\n\"Yes, Elaine, you are, and I'm very proud of you even if I would never admit the relationship in public.\"\n\n\"And I have no need to worry about hereditary illness in the Duc's wider family?\"\n\n\"No. They aren't your relations, except officially. You are descended from me and my ancestors -- Kentish Yeomen who lived very long lives in good health. And the Duc's wife was the sister of a King's mistress of sturdy Norman stock.\" \n\n\"So I have nothing to worry about?\"\n\n\"No, granddaughter. You should have a strong a healthy baby who should grow to become tall and as beautiful as its mother.\"\n\nElaine jumped up and kissed me.\n\n\"Thank you, Granddad. This calls for the champagne.\"\n\nShe opened the bottle with practised ease and poured two glasses.\n\n\"To my great-grandchild!\" I said.\n\n\"And to my recently discovered grandfather,\" Elaine said. \"But I would like one more thing from you, Henry, please?\"\n\nShe pointed at the white cardboard box.\n\n\"Could you provide a swab for DNA testing? I accept what you have said but that would prove it and see if there are any health issues I should know about.\"\n\n\"Only if you agree to keep it a secret, Elaine. I don't want to tarnish the reputation of two brave friends who died for France.\"\n\n\"They did, didn't they? What do you know, Henry?\"\n\n\"They were shot in 1941 by the Gestapo for being part of the French Resistance. They were but died without revealing anything despite having been tortured for days. Even though the Duc wasn't your grandfather, you should be proud of him.\"\n\n\"And their daughter? What happened to her when they died?\"\n\n\"They had sent her to America, to Hollywood, in 1938. She started in movies. At first her accent meant she played the parts of French maids but her first film as a star was in 1940.\"\n\n\"She suggested that you were involved, Henry?\"\n\n\"I was. It could have been awkward if I was known to be her father but I pretended to be a family friend who was helping because her parents were dead. I financed her first two starring movies and never regretted it because I made a profit. Later I was an 'angel' for her Broadway shows. I lost money on some until the early 1950s when she had better roles.\"\n\n\"She named you as my godfather, Henry. Why, if her parentage was such a secret?\"\n\n\"As a godfather, one of several, I could help you and could be seen as doing that from just being your godfather, not your grandfather.\"\n\n\"But you have no children, Henry, despite marrying?\"\n\n\"Ahem. You can't say I have NO children, Elaine. After all, you are my grandchild, as is the current Duc. You can say I have no legitimate children because my wife couldn't have any.\"\n\n\"The Duc is my half-cousin?\"\n\n\"He is.\"\n\n\"Any other relations I should know about?\"\n\nI pointed at the white cardboard box.\n\n\"That is why the results have to be secret. Don't put them on line, please.\"\n\n\"So I have other relations?\" \"\n\nElaine seemed excited at the prospect.\n\n\"Yes, but, you'll never know. Even I'm not sure who is and who isn't. In the 1920s I was a tomcat but only with married women. Your mother was a problem. Her parents were both black haired...\"\n\n\"But she wasn't a natural blonde.\"\n\n\"No. She became blonde in Hollywood. But she was fair-haired like I was. Her parents went to the length of having some 18th century family group paintings altered to make some people fair-haired instead of the black hair they all had.\"\n\n\"And people didn't know, Henry?\"\n\n\"Some guessed. That's why there was a rumour. But all three of us denied it, and thankfully the son was black-haired. Once he was born and looked like his mother, no one cared about the daughter. An illegitimate heir would have been a scandal. A daughter? No one took any notice of daughters then. If your mother had looked like you? Her height would have made her parentage dubious. The Duc and his wife were under five feet six.\"\n\n\"Being this tall can be a disadvantage for an opera singer, Henry. When I'm much taller than the hero, it looks odd.\"\n\n\"That shouldn't matter. It is your impeccable singing and your acting ability that really matter. And some operatic tenors are getting taller.\"\n\n\"But some older tenors are getting fatter and look like gorillas beside a giraffe.\"\n\n\"You move far too gracefully to be a giraffe, Elaine. I wish I was young enough to appear beside you. But I'm not. My voice isn't what it was and isn't up to the major operatic roles now. I do concerts and restrict my repertoire. I remembered singing alongside Dame Clara Butt when I was young. She was nearly as tall as you but she had decided not to do operatic roles. At the time she was much taller than any possible tenor and about twice their weight. She knew she would have looked ridiculous on stage except perhaps as a Valkyrie. She liked me to accompany her in a duet because I was tall enough to make her look almost normal -- but at the time my voice wasn't developed enough to match her.\"\n\n\"I have heard some recordings of her\" Elaine said. \"She had a powerful voice.\"\n\n\"And the recordings don't really do her justice, Elaine. In those days we had no microphones. We had to fill an entire opera house with our voices. She could, even the Albert Hall. At the time I didn't have the practised technique to match her even though I tried.\"\n\n\"Did you? With Dame Clara. I mean,\" Elaine asked.\n\nI blushed. I hadn't thought I still could.\n\n\"No, Elaine. She was of an earlier generation and if I had become fresh with her she could have punched me hard. I saw her do that to an accompanist who made the mistake of touching her breast. He needed treatment for a broken nose. But, yes, I loved her for being kind to a beginner.\"\n\n\"Back to my parentage, Henry? Am I likely to meet any relations?\"\n\n\"I shouldn't think so. Most of my conquests were in Paris in the 1920s. Even their children now would be older than you but so many fought and died for France before the German occupation of 1940. I can't think of anyone now who might be one of my descendants. It's possible, but very unlikely you'd ever meet one...\"\n\n\"Except the Duc?\"\n\n\"Of course, except the Duc. As far as he is concerned you share grandparents. You do, just not the ones that you are supposed to share.\"\n\n\"Can I tell my husband? After all he is as worried as me.\"\n\n\"Yes, Elaine, but no one else. Before you do I'd better take that DNA test.\"\n\nI did. It didn't take long and was simple.\n\nElaine summoned the butler with a bell push. He stuck his head around the door.\n\n\"Yes, Milady?\"\n\n\"Evans, please would you ask my husband to join us?\"\n\n\"Of course, Milady.\"\n\nGerald, Lord Oxsmith, appeared within a couple of minutes. Elaine hugged him.\n\n\"Sir Henry has told me something in confidence, and now I can tell you, Gerald.\"\n\n\"Thank you, Sir Henry.\" Lord Oxsmith said.\n\n\"We don't need to worry about any hereditary illnesses from the French family because Sir Henry is my grandfather.\"\n\n\"He is? That's great.\"\n\n\"But it is a secret, Lord Oxsmith. It could embarrass descendants of those who are now dead.\" I said.\n\nElaine poured a glass of champagne for her husband. She passed it to him.\n\n\"To new relationships. Gerald.\"\n\n\"To new relationships,\" He replied.\n\n\"And to a great-grandchild,\" I said.\n\nWe went to the drawing room. Elaine wanted to sing with me. Lord Oxsmith played the accompaniment. Our only audience was Charles.\n\nElaine teased me. Her first song was 'O Mein Papa'.\n\nAfter that we sung some Mozart duets including those of Zerlina with Don Giovanni. I had to moderate my volume as Elaine had never sung without a microphone, and in my performance the sound engineer usually has to turn me down to get a balance with the orchestra.\n\nBut we were enjoying ourselves as a recently discovered grandfather and grandaughter.\n\nSeven months later I became a godfather to my goddaughter's son who was called Henry. The DNA had confirmed that I was Elaine's grandfather. I had given Elaine a copy of my family tree and she has promised not to tell Henry until after I am dead when no one will care what I did in the 1920s.\n\nSometimes I regret the loves of my past but I have Elaine to remind me of a gallant couple who died for France. I will raise a glass of French champagne to their memory."
    ],
    "authorname": "oggbashan",
    "tags": [
        "sir henry",
        "lady oxsmith",
        "duc",
        "charles",
        "elaine",
        "gerald"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/granddaughters-worry"
}