{
    "title": "Cat in the Rain",
    "pages": [
        "I love writing exercises. Yesterday I posted an anti-loving wives story. Today's is a normal LW tale. I am interested in your reaction to the two. The title is another Hemingway short story. It hints at the outcome - enjoy \u2013 DT\n\n*****\n\nThe Rising Storm\n\nThere are lots of ways a guy can find out that his wife is cheating. \n\nThere's the ever popular, \"unexpected arrival home\". Then there's the tried and true, \"a friend clued me in.\" And of course there's the time tested, \"overheard a conversation.\" \n\nMe? I was tipped-off by The Washington Post. \n\nThat might seem a bit bizarre. But most guys aren't married to a woman who is fucking a U.S. Senator. \n\nPersonally - I work in the private intelligence business. We do the same kind of thing that the alphabet agencies do. But it pays ten times better. \n\nI started out as a 35-lima with the 704th Military Intelligence Brigade at Fort Meade. Military Intelligence might sound like an oxymoron. But my unit was headquartered at the same Fort as the NSA. So I took part in some serious technological shit. \n\nI was just a 23 year old kid - fresh out of Carnegie-Mellon and the 97-bravo course at Fort Huachuca. \n\nNeedless to say I was totally full of myself. I had a badge to go with the title \"Special Agent.\" But I was really just a Rot-C nerd from the little city of Madison, Wisconsin. \n\nMadison might be the State Capitol and it might have a big university in the middle. But you don't have to drive very far out of town to be hip deep in cow shit. \n\nSo the Beltway culture was both a target-rich environment and kind of overwhelming for a Wisconsin farm boy.\n\nI hung around with another shavetail. He was named Art. Both of us liked to drink and party and there was always a lot of that going on in the student ghettos around the University of Maryland. \n\nNonetheless we favored the Fells Point section of Baltimore. First of all, it was a lot easier to get back to our off-base quarters, which were in Glen Burnie. And there was nothing to match the perpetual party atmosphere of the Broadway Square area. \n\nOne night I was sitting with Art in \"The Horse You Came In On Saloon\". How can you NOT patronize a place that advertises that it has been \"serving drinks since the 18th Century?\" \n\nWe both had a little buzz on. But it was nothing like we were planning for later that night.\n\nWe were scoping out a table full of girls. There is nothing like a covey of visibly blasted chicks to attract the predators. And the wolves were beginning to gather. \n\nAs I watched a few of the women were dragged off to dance. It was clear that everybody was in a happy-place. That is until one of the more obviously wasted dudes decided to cut-out a woman who was not interested in dancing.\n\nThere was some pulling and a little yelling followed by a shriek and a loud slap. \n\nAs the fracas started I nodded an \"I got this\" to Art and wandered over toward the table. The slapee was about to do something really stupid when I grabbed his upraised arm. \n\nI said in the calmest voice I could muster, \"You need to leave, Sir.\" \n\nHe was pissed and clearly not in the mood. So he spun violently to confront me. I just continued his momentum, do-si-doing him around until his arm was twisted up between his shoulder blades. \n\nI showed him the badge, which I was holding in my left hand. I wanted to encourage him to reason with me. \n\nHe gazed at it blearily and muttered, \"But she hit me Officer.\"\n\nI said, continuing the cop tone of voice, \"No harm - no foul, Sir. You've ALL had a little too much to drink. Why don't you and your friends just find some other place to do it?\" \n\nHe looked at the rest of his crew. They shrugged and started toward the door. I released his arm and he staggered after them. \n\nFortunately none of them had gotten around to noticing that the badge was issued to an Army Counter-Intelligence Special Agent, not a Baltimore cop. I had the jurisdiction to arrest him if he was involved in High Treason. But at \"The Horse\" it was just a piece of tin. \n\nThe woman still looked shaken. Physical confrontation does that to people. I sat down in the empty chair next to her and said, \"Are you okay? Can I get you something?\" \n\nThat was the first time I actually looked at her. I could see why the college dude had been so insistent.\n\nWomen like to think that men pay attention to qualities that they can control - like dress, hair, or makeup. That's true if there is nothing more intrinsically appealing. \n\nBut let me assure you ladies. A massive pair of perfectly shaped titties is the ace of trumps when it comes to getting noticed by a guy. \n\nAnd this woman had a pair that even under a modest white silk blouse might set-off civil insurrection in some countries. \n\nI had to stifle the urge to put my face in between them and go \"Brrrrrrrrrrr.\"\n\nShe was sitting. So I couldn't see anything south of her chest. But once I tore my eyes off her bouncers I saw that she had a really lovely face. \n\nShe looked Italian or Greek by extraction. She had dark auburn hair dusky complexion and beautifully proportioned features with huge, luminous dark eyes. \n\nThose eyes were currently clouded with a mix of anger and fright. She was struggling to calm herself. \n\nI put my hand sympathetically on her forearm and said, \"It's okay. I understand that must have been scary but you're among friends. Nothing is going to happen now.\"\n\nThe fact that she didn't yank her arm away was a sign that she was getting back to normal. I said, still trying to calm her, 'What's your name? My name is Paul.\" \n\nShe looked up and actually focused on me for the first time. And I was lost. The crackling blue spark that jumped from her eyes to mine must have lit up the whole interior of the bar. \n\nShe said shakily, \"Janet.\" I wasn't sure whether the shakiness was caused by her recent ugly experience - or what had just passed between us.\n\nI said, \"Can I get you a drink?\" Nothing like a little alcohol to calm the nerves. \"What are you drinking?\" \n\nShe said rather off-handedly, \"gin and tonic\" and continued to stare into my eyes. Her concentration was unnerving. It was like she was scanning my soul. \n\nI said, \"I'll be right back\" and rushed a little too hastily up to the bar. I wanted to get away from her for just to screw my head back on. \n\nI returned with her G&T and an English IPA for myself. She downed hers in one gulp - Impressive...\n\nShe looked at me and said, \"Thank you for stepping in Officer. He scared me. But I don't let anybody maul me like that.\" And she looked down at her incredible girls.\n\nI said, \"First of all I'm not a cop. I have no more jurisdiction than you. The badge is for a federal agent. I am with the Army at Fort Meade.\" \n\nI really would have thought she could tell who I worked for by the high and tight.\n\nI said, \"I just flashed the thing to get him to do what he should have done for himself. Authority tends to get your brain working again - even drunks.\"\n\nShe said, \"So you just rode to my rescue on your own. What can I do to thank you?\"\n\nThat was an open invitation if I ever saw one. \n\nI said, \"You can have dinner with me tomorrow. Unless you're already taken. In which case a sincere handshake and a kiss on the cheek will do.\"\n\nShe kissed me on the cheek and said, \"I'll see you at 6:00 tomorrow. I have to get back to the hen party but here's my address.\" And she wrote something on the back of a card.\n\nI turned it over and it said, \"Janet A. Wilson JD.\" I thought, \"Shit! A lawyer!!\"\n\nNevertheless, I was pressing her buzzer at exactly 18:00 the following evening. \n\nShe lived in a classic single girl condo in Bethesda. All I heard was a lot of yapping and the sound of somebody kicking a dog away from the door.\n\nThen she opened it and every hesitancy about her profession vanished like the morning dew. \n\nLast night had been confused with all of the drinking and general chaos and I hadn't really gotten a look at the whole picture. Truth be told I couldn't take my eyes off her massive rack last night.\n\nNow, the goddess Venus herself was standing in the doorway in a pair of skin tight jeans and a loose sweater. She had incredible curves, long legs, wide hips, tiny waist and of course those double D's. \n\nShe was still wrestling with something that resembled a hairless rat. But which I assumed was a Chihuahua. Finally she bent down and picked it up, displaying a perfect apple shaped ass as she did it. \n\nShe was distracted enough by her animal that she didn't see the look of consternation that crossed my face. There is a constant re-balancing process going on in the single set. Whereby everybody seeks their proper level in the social scheme. And I wasn't so sure that I was playing in the right league. \n\nBut she gave me a look that was so hot that I was certain that my socks were going to burst into flame and said, \"Sorry about this - Chiquita thinks she has to protect me from everybody.\" The rat showed me its teeth and gave a low warning growl.\n\nI said, \"No problem. I love dogs.\" I didn't add that my dog was a 100 pound Shar-Pei, Pit-Bull, Labrador mix named Buster. She underhanded her varmint back into the room and closed the door. \n\nThen she stepped into the hall and took my arm in that universal gesture that women use to indicate possession. \n\nShe said, \"Where are we going?\"\n\nI said, \"I thought we'd try the Blue Duck. I want to get to know you better and their outdoor terrace is a nice quiet place to do that.\" It was a beautiful clear fall evening in DC.\n\nShe looked delighted. She said, \"I've heard about that place and I've really wanted to try it. Rumor has it that it's very romantic. You don't have anything planned do you?\" That said with a coquettish grin.\n\nI said jokingly, \"Only if you do.\" And she hugged my arm to that colossal bosom of hers. \n\nI drive a silver Mercedes SLK. Like all good German lads I love superior engineering and nobody does it better than my people. Okay \u2013 maybe my people settled in Wisconsin in the late 1800s. But as far as the family was concerned once a German always a German.\n\nShe was surprised \u2013 pleasantly I hoped. She said, \"I thought all you big macho studs drove muscle cars?\" \n\nI said, \"I'm not into advertising it.\" And engaged the smooth as silk drivetrain. \n\nWe talked all the way down to the restaurant. And then we talked some more. \n\nJanet was a staffer with Senate Armed Services. She had grown up rich in Chicago and had a classic Gold Coast Education at Northwestern and the University of Chicago Law. She was 24, just like me, and getting her feet under her in the Capitol Hill culture. \n\nThe more we talked the more we bonded. She was a knockout. But she was a whole lot more than simply beautiful. She was smart, direct and very funny. \n\nI took her back that night and dropped her at the door. She stood on her tip toes and gave me the hottest kiss I had ever been given. \n\nWe were still embracing standing there. My hands were joined behind her tiny waist. She leaned back with her hands clasped behind my neck studying me with those deep intelligent brown eyes. \n\nShe said, \"I have never felt this way after a first date. I'm not going to fuck you tonight because I am not that kind of girl. But if you come back for a second date I am going to rock your world.\"\n\nWe hit Blues Alley the following night and she wasn't kidding. \n\nWe listened to the music and had a couple of drinks. Whenever she stood up every guy in the room was checking her out. Hell!! I was checking her out and I was with her. \n\nMen who are with big breasted women know what I'm talking about. It's a puzzlement why men are so fascinated by over-developed mammary glands. But we undeniably are. And if YOUR woman possesses a pair of those things you just have to get used to all of the males in the room leering at her.\n\nAnyhow, we got back to her place and she said, \"Why don't you come in for a nightcap?\" So in I came. I wasn't THAT stupid.\n\nWe cuddled on the couch for all of five minutes and then the kissing and heavy breathing started. \n\nShe looked a little irritated. It was like she was miffed that I hadn't gotten the hint. So she took the bull by the horns, or whatever appendage might be more appropriate, and guided us into her bedroom.\n\nShe walked to the bed unbuttoning her blouse. There was some residual light inside the room and I could see her black industrial strength bra as she turned to face me. \n\nShe did that teasing thing what women do where she unhooked it and then kept the cups in place with her upper arms. Then she dropped the bra to the floor. Revealed - in all of their glory - were the most spectacular tits ever affixed to a female body. \n\nShe posed for a second, arms down, palms facing out. It was like she was giving me a benediction. \n\nThe invitation was blatant so I took it. I strode across the room and gently laid her on her back with me lying next to her. She was panting and those huge soft boobs were rising and falling like giant rolling ocean waves. \n\nExcept these waves were pure white with big brown nipples at their crest. And those nipples were sticking straight up like miniature Nuks. \n\nShe reached down and slid her skirt and panties off. I quickly cleared my own decks. I leaned over and kissed her, her mouth opened like a flower. She was red hot. And she conveyed that she was totally in the moment by opening herself to me like that. \n\nIn my experience I have found that women with Janet's type of endowments don't usually bring anything else to the party. They seem to think that the guy should just be grateful that the woman has deigned to allow them to handle the goods. \n\nOn the other hand - Janet brought total warfare. \n\nShe was a strong woman with a supple body. Her tummy was flat but not muscular. It was a perfect landscape to kiss down. When I reached that delightful place where her thighs joined I dipped my tongue in and she went nuts.\n\nShe uttered a long unearthly groan and elevated her legs off the bed. Then she spread them impossibly wide with toes pointed. That started a frantic up-and-down movement of her hips against my face. Which culminated a minute or so later in a very loud orgasm. \n\nI was more-or-less next to her leaning over her pussy when THAT happened and at that point her legs started beating up and down on the bed. They were so out of control that they banged me in the nose. \n\nAs the ripples were still passing across her stomach she grabbed my shoulders and said, \"Get in me right now!! You have to get inside me!! DO IT NOW!!\"\n\nThen she slithered herself around underneath me, inserted old Lucifer into her boiling hot slit and threw her legs straight up in the air. \n\nMy sliding up inside that tight and wildly churning place produced an unearthly shriek of undistilled passion and she humped violently up to get me further in her. She was basically bent into a bow. With me inserted to the hilt at one end and her eyes vacantly staring at me on the other. \n\nThen we began to move. It was like an old fashioned steam train pulling out of a station. First a lot of measured deep breathing. That was followed by increasing loud panting. And then the cadenced moaning started like the rhythmic clickity-clack of a train at full speed. \n\nThe recurring wet slapping sounds and my loud grunts and gasps were counterpointed by her increasingly impassioned cries. \n\nShe had her heels locked against the back of my knees and the exciting smell of sex permeated the room. Her face was a mask of passion and those huge pendulous tits were moving in wide cycles as they swung and shook on her chest. \n\nI had just about gotten to where I wanted to get to when she made a ridiculously loud shriek and as she came I could feel her insides fizz like a shaken up bottle of champaign. \n\nShe relaxed for a second but I needed my cookies at that point. \n\nSo I continued to pound her at an increasingly powerful rate. Her eyes bugged impossibly wide and she yelled, \"OH MY GOD!! I'M CUMMING AGAIN!!\" And she went off on an outrageous set of writhing and bucking maneuvers, all the while making a noise like she was choking to death. Her legs and lower stomach were literally quivering as they held me in a death grip.\n\nThe uncontrollable contractions of her passage finally got me to my destination. And I arrived like an out of control locomotive. \n\nThat set her off in a final very loud orgasm. We held our intimate breeding posture for a couple of minutes while I pumped into her. I thought that there wouldn't be any fluid left in my body.\n\nWhen we were done we were lying in a sweaty heap. I got a little rationality back. She was looking at me like she thought she had done something wrong. I said, \"What?\"\n\nShe said, \"Do you think I'm some kind of wanton slut now? I've never been that out of control in my life.\"\n\nI laughed and said, \"Every man wants a lady in the living room and a whore in the bedroom. You just totally fucked my brains out. How could I NOT love you?\" \n\nOh shit!! After two dates I had done the unforgivable!! I'd used the forbidden \"L\" word. \n\nI knew that I might as well just put on my pants and leave - before she called the sheriff to evict me. \n\nInstead she grabbed my neck in both hands, looked in my eyes and with touching sincerity said, \"I love you too.\"\n\nAnd so it all began. We dated for six months, which was as long as it took for us to be completely comfortable with each other. \n\nI met her parents when they came to the wedding. I could tell that the Dress Blues and the medals were responsible for most of their admiration. That was what the uniform was designed to do. \n\nI wasn't going to enlighten them about the fruit salad. Most of those were the same shit that everybody else gets. The Army likes their people to look like heroes when they're dressed up.\n\nWe settled into married life in a little place in Greenbelt. She could take the Green Line in to L'Enfant and Capitol South and I could drive up the Baltimore-Washington Parkway to the Fort. \n\nIt was an idyllic period in both of our lives. Even the dogs slept together. Although I was worried about 100 pound Buster accidently crushing 5 pound Chiquita in his sleep.\n\nJanet was making her way up the ranks of Congressional staffers and I was finishing off my hitch as a Captain. \n\nAfter I got out, I was recruited to a private firm in Roslyn. I was doing the same kind of analytics but the pay was well into six figures, which was a tribute to the amount of \"War on Terror\" money that was washing around DC.\n\nWe mortgaged ourselves to the hilt and bought a condo on the C&O Towpath in Georgetown. Vienna would have been a lot cheaper but both of us liked the Georgetown vibe. And we did all of the things that 34 year olds would do down there.\n\nOur love life continued to be perfect. We made love four or five times a week, often more than once. And we had an affectionate, easygoing, relationship all of the time that we were together. \n\nWe laughed a lot and we had wonderful quiet Sundays together, both of us with a book and Chopin playing on the house speakers. All-in-all it was everything you could ever expect, or ask for, in a marriage.\n\nOne of the advantages of commercial intelligence work is that you have nine-to-five hours, not like it was when I was on active service. \n\nI was doing mostly analytics with a team of bright-eyed-and-bushy-tailed GWU and Georgetown graduates. \n\nIt was the usual generic threat assessment stuff that I had done for Army CI. But it was on an attack surface that was businessy, rather than military. So I dressed for work in a preppy get-up, rather than BDUs and a beret. \n\nMy people were only eight to ten years younger than me but between my service time and the fact that I was their boss they tended to treat me like I was Methuselah. I enjoyed the respect but I missed the camaraderie that I got with my crew at the Fort.",
        "Janet dressed like she always did - business-like. A smart and capable woman like Janet wants to be appreciated for what she does, not how she looks. And the tits and ass she carries around with her are distracting unless she tones them down with low heels, a classic grey pencil skirt and a silk blouse.\n\nHer hours were a little more erratic than mine since she was tied to the Committee. There would be long periods when she spent her spare time working on constituent projects and she was home long before I was. Then there were the crash periods, particularly around budget time, where she might be up on the Hill all day and well into the night.\n\nJanet had been promoted to a senior policy position the previous December. It was a nice bump-up in pay. But the downside was that she had to spend late nights on the Hill and at Committee events. \n\nThe promotion was unexpected since you normally have to serve a long apprenticeship before you get one of the true advisory roles. But she is a very smart woman and frankly I thought that she was a lot more capable than the guy she was advising. So it was clearly deserved - at least in my mind. \n\nShe was the Chief Policy Advisor for the Chair of the Committee. The Chair himself was from one of those Bible Belt States where \u2013 based on the people they kept sending to Congress - you wondered if ANY of his constituents had gotten out of the ninth grade before they married their sister. \n\nI had met him a few times. He was right out of central casting for Senators - with the stalwart height and the forthright gaze and the determined chin. \n\nHe was 50-60ish handsome and he had the resolute look of a leader. But he was actually slicker than deer guts on a doorknob, he had never actually served, and his thick wavy hair was a rug. \n\nNonetheless, he did have the \"Foghorn J. Leghorn\" act down to a science. He told the herd what they wanted to hear, no matter how illogical the message. It was an admirably cynical approach to political reality. But the people voting for him were cattle anyhow. \n\nMy own assessment of the guy was that he was a total narcissist with the personal integrity of a used car salesman. As far as he was concerned everything was up for sale. \n\nBut he had done three terms in the Senate and the seniority system had put him in a position where he could prove beyond a shadow of a doubt that \"power corrupts.\" \n\nHis blond wife was as elegant and nuancedly sophisticated as her husband was a card-carrying redneck. She obviously came from big money and bigger influence in their State, which was why the esteemed Member of Congress was in the Senate in the first place. \n\nShe was a dead ringer for the older Grace Kelly, blond slim and regal. While his four kids were stepping stones from 19 to 25. All of them attended out-of-state schools which said something about the Senator's view of his own State's education system. \n\nJanet said that this truly shady example of American democracy was actually a down to earth, good-guy in private. Personally, I didn't have any confidence that my tax money was in good hands. And I didn't like the sneer he gave me when we first met. \n\nI was aware that he was considerably further up the totem pole than I was. But it was family money that had put him there, not his innate intelligence and hard work.\n\nAs a senior staffer Janet was expected to attend functions related to the Committee. I went with her if it was necessary, especially if it was a social event. But when she was working she went by herself. Obviously, she always had to dress for the occasion.\n\nI was sitting in our den when she appeared in the doorway to say goodbye. She was going down to the Kennedy Center that night for some event that was honoring somebody. They are always handing out honors to each other so it is hard to keep track. \n\nShe was dressed in a simple deep blue Versace gown. The effect was breathtaking. It showed enough of her huge breasts at the top and her stunning legs at the bottom to look sexy without seeming to really try. \n\nWith her perfectly made-up face and the body underneath that dress I knew that she would have all of the geezers eating out of the palm of her hand.\n\nShe was clearly in a pensive mood. I said inquiringly, \"What's up?\"\n\nShe said, \"Oh nothing.\" Then she said with emotion in her voice, \"Have you ever thought about just chucking it all and living on a beach somewhere?\"\n\nWhere did that come from!!? She had obviously been under stress for the past several months. But with the new fiscal year and all of the battles over appropriations September is a tough time on the Hill. \n\nI thought to myself, \"Perhaps she's just wearing down from all of the latent skullduggery? \n\nI said, \"No I haven't actually. But my job is nowhere near as stressful as yours. We should discuss it. Maybe it's time to talk about peddling your services on K Street.\"\n\nShe gave me a glum look and said, \"Maybe it is. But the power is hard to give up. It's intoxicating\" \n\nThen she brightened and said, \"Let's sail down to Point Lookout next weekend? It would be just you and me and nature.\" And she gave me one of her patented hot looks. \n\nI knew what THAT meant. We sail a C&C 40. And we had spent a few of our most romantic weekends laying up in Piscataway Creek off of Fort Washington. We would revel in the quietude of nature and from time-to-time we would make the boat rock. Then we would finish the weekend with a nice dinner in National Harbor, or Old Town Alexandria. \n\nI said, \"Sure babe. We need to get you away from all of the craziness and get back to just you and me - like the old times. Before you became a Capitol Hill power broker. \n\nI rose and walked over to kiss her goodbye. She seemed sad. But she was looking at me with utter devotion. \n\nShe turned and walked to the door in her 4 inch stilettos, leaving a trail of her special perfume. That scent sets off incredible yearning in the male animal. She looked back brightly and said, \"I'll probably spend the night at the Watergate. That's where the reception is and I don't want to drive back after that much drinking.\"\n\nThat wasn't an abnormal circumstance. It had been her usual routine since she took over the senior position. So I said jokingly, \"I'll be safe and sound here. And no hookers, or call girls for me tonight \u2013 I promise.\"\n\nShe looked at me like she wasn't sure I was joking. So I gave her a big smile and said, \"Kidding\". She smiled back at me and closed the door.\n\nShe didn't actually get back until late Sunday night. She had called that morning and told me that there were some things that they were working on back at the Russell Building and she would be tied up all day with paperwork. \n\nWith nothing better to do, I spent my day down at the Marina doing all of the maintenance that you have to do to keep a boat ship-shape. \n\nAs the old saying goes, \"If you want to know what sailing feels like just stand in a cold shower and tear up fifty dollar bills.\" \n\nNevertheless, it was an utterly peaceful and rewarding day. I took a nap, ate on the boat and drove back. Janet arrived less than a half hour later.\n\nShe went straight upstairs to drop her stuff and change. She had taken a little bag with her when she left. I was waiting with a fresh G&T when she reappeared. She was in a pair of skintight yoga pants and a big loose University of Chicago sweatshirt. Her hair was tied back and she looked exhausted.\n\nI sat down on the big sectional couch and she snuggled under my arm. She said, \"I am getting really tired of all of this stress. Once this year's Authorization Act gets passed I am going to take some time off and we can reconnect. I know I've been way too busy over the past year and I'm sorry. I've been selfish. I promise that is going to change.\"\n\nThen she kissed me passionately. I was working my hands up under her sweatshirt with my target being those big unrestrained boobs. But she broke the kiss and said, \"Not tonight buster. I'm way too tired to enjoy it properly. \n\n\"Be prepared tomorrow though. I am not going in to the Office. I'm going to lie around here all day so I will be rested and ready to kick your ass.\" And with that she finished her drink and made her way upstairs.\n\nI sat there for a while thinking about what she had said. She HAD been preoccupied for some time and she had also been away from home a lot more than usual. It seemed to correspond with her promotion and so I was wondering if she wasn't considering my suggestion that it was time to move on into the lobbying industry. That was where the real money was anyhow.\n\nShe had sounded sincere about her desire to reconnect, no question about that. So perhaps she had decided that the time had come for another item. That was the baby. We had been putting THAT off until we got our career groove on. But at 34 \u2013 almost 35 - she was not getting any younger.\n\nShe was still asleep when I left for work the next day. She looked both innocent and incredibly sexy, with her tousled hair framing her angelic face. \n\nI got my usual breakfast at the Starbucks next to the Rosslyn Metro station. It's where the Georgetown Blue Shuttle stops. Then I wandered into work feeling more upbeat than I had in a while. \n\nIt was a beautiful fall day. And the entire City of Washington DC glittered outside my sixth floor window. I was feeling particularly up-beat. It sounded like Janet and I might have entered a new phase in the twists and turns of our life.\n\nThere was a knock at my door and Kari, who is my sidekick and general all around work buddy stuck her head in. \n\nKari is 24 and has been my indispensable right hand for the past three years. She had come to me fresh out of Georgetown. I had mentored her for the first year. But for the past two years she had showed promise of surpassing me in the analytics game. She was super-smart, funny and always full of life. And her technical skills were second to none.\n\nShe and Janet were similar in many ways, intelligent, beautiful, energetic and tough. But where Janet had that voluptuous body Kari was elfin \u2013 that is if elves had really big tits. \n\nKari had short white blond hair that appeared to be natural and the biggest green eyes seen outside of the cat species. She was all of five-one. So she looked like Tinker Belle without the wings and slutty costume. She had a tight, round, lithe little body, and she might weigh all of 110 pounds soaking wet. \n\nThe irony was that, somewhere in Kari's construction process one of her heavenly designers had gotten the idea that it might be fun to stick a pair of big round Ds on her tiny frame. I assume that it was just to see if she could stand upright without falling on her face. \n\nThe outcome of that experiment was that my work buddy also sported a remarkable pair of jugs. \n\nI say that with the greatest amount of respect. Since the only sexual feelings that I had for Kari were in the abstract. I appreciated that she was a knock-out. But that appreciation didn't extend any further than a general sense of how attractive she was.\n\nShe seemed to have an active sex life. I knew that because she told me about her adventures. She did it without providing too much information. And in just the same way one close work pal would do with another. Except normally that kind of talk just goes on between us denizens of the tree house. \n\nOf course, Kari was more like a guy than a girl anyhow. She had played field hockey for four years at Georgetown and she had been raised with three brothers. Any woman who could burp the alphabet was alright with us men.\n\nShe was her usual dazzlingly vigorous self, even though I knew that she had spent the weekend with some guy up in Manhattan. \n\nShe said breezily, \"There's a fellow who wants to talk to you. He won't tell me who he is. Do you want me to let him in - or should I just throw him off the top of the building\"\n\nI smiled at her and said, \"Show this mysterious stranger in. But be ready to intervene in case I need your help.\" She is five one and 110. I am closer to six-four and 220. She got the joke. \n\nMy visitor was a little guy with a rat-face and a hoodie. I was about to say, \"I'm not interested in buying any drugs,\" when he produced a credential and said, \"I'm Arnie Gold from the Washington Post and I would like a minute of your time.\"\n\nOkay \u2013 that was interesting. I sat back trying not to look too curious and said, \"What can I do for you Arnie?\"\n\nHe said, \"Do you know \u2013 and he showed me a picture of Senator \"Cornpone\" on his phone. \n\nI was mystified. I said, \"Yes I do - of course. My wife Janet Schmidt is one of his senior staffers and I have met him on occasions.\"\n\nHe said, \"I don't want to ask you this.\" \n\nHe clearly SO wanted to ask me \u2013 \"this\". \n\n\"But we have been investigating the Senator and your wife has come up several times in the investigation.\"\n\nI said, \"What do you mean by that?\" \n\nHe said, \"Let me ask you outright. To your knowledge, is your wife having an affair with the Senator?\"\n\nI slowly stood up. I leaned toward him with my hands widely spaced on my desk. There were veins standing out on my neck. I must have looked like I was about to jump over the desk and attack him. \n\nMy posture might be aggressive but my voice was relatively calm. I said, \"How the fuck do you think that you have any right to come in here and ask me a question like THAT?\" \n\nHe cowered in his chair but he said with equal calm in his voice, \"I have observed the two of them on numerous occasions and in various settings and given their behavior and some of the things the Senator's staff have told me I believe that the two of them are having a sexual relationship.\"\n\nThat hit me like a thunderbolt. Janet - unfaithful? The beautiful, intelligent and level-headed woman who was my very soul mate was cheating on me? \n\nThat thought had never entered my mind. We have always had a close and comfortable connection. There was no time when she acted distant or displeased with me. She never denied me anything. Plus the sex was always excellent. I had expected to die in her arms.\n\nNevertheless, there was this rodent from the Post telling me a fatally opposite story.\n\nI said, \"How the fuck would I know what she is doing with that slimy piece of shit. She is with him because she works for him.\n\n\"And frankly what business is it of yours? Why do you think you can just waltz in here and ruin my life?\"\n\nHe looked a little offended and said, \"The Senator is one of the leading conservative voices for Family Values. And the public has a right to know if he is - in fact - a hypocrite. \n\n\"That is a story that has to be reported. And if it is true it is something that will garner a lot of headlines. I am just trying to get to the bottom of things.\"\n\nSo there it was. The little weasel saw himself as a latter day incarnation of Woodward and Bernstein. I was sure that he already had the space cleared on his mantle for his Pulitzer.\n\nI said coldly, \"I will not dignify your accusation with any kind of comment. My wife is a loving and faithful woman who would not betray my confidence in any way. The Senator may be morally bankrupt but my wife is not. And I don't appreciate you implying that. So please leave.\"\n\nHe looked like he was going to say something else. But instead he rose and offered his hand. I shook it and he said, \"Here is my card in case you change your mind.\"\n\nI escorted him to my office door. I opened it and let him out. Then I closed the door, walked back to my desk and sat down. Waves of anguish overwhelmed me. Suddenly the day didn't look quite so bright.\n\nJust then a blond mop of hair and a pair of mischievous eyes peered around the door. She said in her usual flirty manner, \"What did the creepy guy want?\"\n\nI thought about it for a minute. My heart told me that I needed a friend. And my brain told me that I needed somebody's help and advice. I couldn't do this by myself and remain sane.\n\nSo I crossed my fingers and said to myself, \"All-in!!\" \n\nI looked at her and said with a little too much gravity, \"He was from the Washington Post.\" \n\nKari got the look that a lot of her generation gets when you mention the hoary old lady of 15th street. Her wired generation thinks that the Post chisels their news on stone tablets.\n\nI said, \"He had something personal to tell me. And I think I need to talk to somebody.\"\n\nShe popped into the chair in front of me looking as eager as a Jack Russell terrier waiting for somebody to throw a ball. Her gorgeous little round face with its huge green eyes looked concerned. \n\nShe said, \"What did he tell you?\"\n\nI said as a preliminary, \"Kari, you and I have worked together for almost four years. In that time I have come to consider you one of my best friends. I don't have many friends, or even people I trust. But you are one of them. \n\nSo I am going to rely on you to keep this quiet forever. If you can't promise me that - then we need to forget that I brought it up.\n\nHer bright green eyes clouded with hurt and she started to tear up. Women!! \n\nShe said, \"You can always trust me. You have been my mentor, my friend and the one man who I could count on in my entire life. I would NEVER betray your confidence.\"\n\nI thought, \"Yeah right??? Where have I heard THAT before?\" \n\nBut I actually said, \"The guy was a reporter. He is investigating the Senator who Janet works for. And in his investigations he has come to believe that she is engaged in an affair with him. He wanted me to confirm that, which I didn't do of course. \n\n\"But - if there IS something going on between them I'll get the horns hung on me all over the 24\u2013hour news cycle. I think you can see how that would be personally embarrassing as well as totally devastating to our marriage.\n\n\"I just cannot accept that kind of disloyalty and frankly if Janet is engaged in something like that she is not the woman I married.\"\n\nKari looked shocked. There was also something else behind her eyes but I couldn't tell what it was. Her customarily cheerful visage changed. Her face transformed from the beautiful fresh glow that made her look like she was about sixteen, to a much harder and more focused person. \n\nIn that instant I could see why she was such an effective analyst. Her mind was the proverbial steel trap. She said with concern in her voice, \"How can I help?\"\n\nI said, \"I am going to have to find out what is going on and I will need your usual technical assistance setting things up.\"\n\nAnd I added with a grimace, \"I might also need a shoulder to cry on depending on what I find out.\" \n\n\"Also - I will need a partner in crime if it turns out to be as bad as Gold says it is. Because I am NOT the kind of guy who can rest until an open account is settled.\"\n\nShe looked at me with an unwavering glint in her eye and said with conviction, \"You've got it boss.\"\n\nKari is ten years younger than me and she has always seemed more like a little sister than an actual peer. But I could sense the intensity in that exquisite little body combined with her excellent mind. \n\nAnd I understood for the first time that she was anything but innocent. \n\nI knew that she went through men like they were snack food. I always put that down to her leading the carefree single girl life. And sometimes I worried about her. Now I realized that the woman sitting in front of me feared no man, or situation, because she was always in command. She was one very tough cookie. \n\nI got home at my usual time. Janet had been my only real love and best friend and companion for all of my adult life. She had contributed as much to who I was, as my parents. \n\nSo I didn't have to fake my feelings of comfortable camaraderie. She had run uptown and gotten empanadas and fritters from the Tapas Truck and was laying the dinner out on our back patio when I walked in. \n\nShe had her auburn hair tied back in a ponytail. And she was in jeans and a Northwestern Wildcats football jersey. The jersey hung down past her round delectable ass. She looked like the world's hottest sorority girl.",
        "She handed me a beer and said jovially, \"So how goes the war on terror?\"\n\nI said, \"Same-old-same-old, the evil-doers are going to have to get up pretty early to put anything over on me. How are things up on the Hill?\"\n\nI thought I saw a shadow pass over her face. She said with an unusual amount of cynicism in her voice, \"Oh just peachy!\" \n\nWhat was THAT all about?\n\nWe ate and talked as usual. It was such a normal evening that the issue I was wrestling with temporarily moved to the back of my mind. \n\nFinally she said with lust in her voice, \"Isn't there something that you promised to take care of for me?\"\n\nOh!! Yes!! Right!! Of course!! \n\nI had the nagging thought that this might be the last opportunity for me to make love to her. But for the time-being she was innocent until proven guilty. And she was still the hottest woman I had ever known.\n\nI stood and led her toward the master bedroom. I couldn't help but notice the gentle swaying of those beautiful big unrestrained tits underneath her jersey.\n\nWhen we got to the bedroom she did that thing that women do where they kind of rest their arms on your shoulders and hold their hands dangling straight out behind you. In effect that completely opened her body to me. \n\nShe was searching my face like she was looking for something there. I was afraid that there might be. So I dragged her to me with enough force that it got a little grunt and gasp out of her.\n\nThen I plastered my lips on hers. She immediately opened her mouth wide and took my tongue into it. I could feel those big jugs moving around between us as I held her tightly to me. \n\nShe had started hyperventilating as I kissed her and that ended quickly in a sigh and a moan. I got the impression that she had some sort of mini-orgasm. \n\nI thought to myself, \"How could she be this needy and still cheat with another man?\" It made no sense\n\nShe stepped back and raised her arms. I eased her jersey off over her head. Her big tits lilted back and forth as I did that. Which gave me an idea. \n\nI wrapped the jersey around her wrists holding her arms straight above her head. Then I bent my head down and began to suck and bite the already distended nipple of her left breast. She let out an unearthly shriek of pure sensation and her legs completely collapsed under her. \n\nFirst her wide solid butt hit our plush bedroom rug and then her back. It was all I could do to keep her from hitting her head on the floor as she fell. \n\nI was now between her legs and still playing with her nipple with my lips. She shrieked again and tried to get her arms loose. But I had tangled the jersey around her wrists in a way that she wasn't going anywhere. \n\nI was lying between her spread legs alternately feasting on the nipples of both breasts. I was doing a little nipping and biting of those big solid globes when she hyperventilated again and just shrieked, \"OH GOD!! Yesssss!!\" And she began madly bucking underneath me. \n\nI released my hold on the jersey as she collapsed back in the afterglow - sat up and dragged her jeans and panties down her long legs. I also lost my own pants in the process. \n\nShe was just coming back from long ago and far away. Her legs were spread eagled and the smell of her arousal was pervasive. \n\nBefore she could recover completely I jammed old Lucifer into that hot and highly receptive hole and slid all the way up inside her. She was so wet that the trip up her passage was almost instantaneous. \n\nHer eyes flew wide-open with astonishment and for a second something passed between us that was a lot like anguish. Then her eyes rolled up and she shrieked again. She braced her feet flat on the floor, knees bent upward and lifted her big muscular buns completely off the ground with me buried to the hilt at the fulcrum where we met. \n\nShe stayed there resting on her upper back and the flats of her feet while gyrating those powerful hips. Her butt was still completely off the ground. That inspired me to pound her with all I had. She was making loud cries, grunts and groans as we humped against each other. The mating noises were like something out of Animal Planet. \n\nShe kept moaning over-and-over, \"So good \u2013 God yesss!! Give it to me baby!! Fuck me!! Fuck me harder!! More!! More!!\" Then she yelled \"AGAIN!! YESSSS!!\" and reversed her position so she now had nothing but her butt on the ground with her legs shooting straight up in the air feet radically pointed, her toes with their red tipped nails drastically curled. In the meantime she was clasping me to her chest with arms like steel bands.\n\nHer passage went nuts as she came. And in doing so it triggered the orgasm that I was leading up to. It was so powerful that it felt like it had come from somewhere over the horizon. I pumped into her as she continued to writhe and shake and yell, \"Ahhh!! Give it to me baby!! Give it ALL to me!! I love you!!\"\n\nWe lay there on the floor in the afterglow. I remember thinking to myself, \"We'll have to replace that rug now.\" \n\nFinally she popped one eye open and said, \"What did you just DO to me. I have never come like that in my life. What are you trying to do, make me your love-slave?\" \n\nI had the ungentlemanly thought that slavery was the least of what I was going to do to her if I found her in the Senator's bed. \n\nBut instead I said, \"That happens when two people are as attuned to each other as much as we are. We love each other and this is the result.\" \n\nShe looked intensely at me and said with sincerity, \"I know that I love you from the bottom of my heart.\" \n\nWe reassembled ourselves and started our NEW bedtime routine. She showered. And I bluebugged her phone and ratted both her personal and work laptops. Thank God she had brought her office one home to work remotely today - or it would have been a lot more difficult task.\n\nA remote-access-trojan gives you absolute control over the computer that it is installed on. I was mainly interested in accessing her camera and audio functions. Since those would put me on the other side of the one way mirror into her life. \n\nIt usually takes some kind of social engineering exploit to put a rat on somebody else's machine. But since I had physical access to Janet's two computers it took less than ten minutes. \n\nMost of that time was spent cracking her passwords. Her devices were all password protected. But \"John the Ripper\", which was my cracking tool, had a good laugh at how simple they were. \n\nI buried both rats in low memory so they would load before any antivirus software. Janet was drying her hair in the bathroom as I finished opening the book of her life. \n\nWas this a totally low-down deceitful thing to do to the love of my life? Absolutely!! Would I do it again? Of course!! I needed to get the answer before my head blew off. \n\nThe next day, I was in the den finishing up configuring the malware connection to her laptops. I wanted her devices nearby to be sure that everything was copasetic. \n\nRatting isn't a major technology exploit any more. It used to be. But now it is something that 16 year old guys do to keep track of their girlfriends. The tools, know-how and step-by-step instructions are all on the internet. \n\nI had put a man-in-the-middle app on her phone. In essence it was a party line. And I would be listening in on every phone call. I had the bug hooked to a recorder in the cloud. I also had the GPS function wired to a tracking application that would give me a history of Janet's movements.\n\nThe rats on her two computers were backdoors. \n\nThey gave me full control of the laptop's functions when I accessed them from my device. They were also set to record and do a remote upload of anything that went on within the vision of the camera and the hearing of the microphones.\n\nI was satisfied that \"what-would-be-would-be.\" So I headed in to work myself. It was another beautiful day in the neighborhood. But my mood was anything but upbeat.\n\nI knew that I loved Janet with all of my heart. And I believed that she felt the same way about me. There was nothing in her behavior to indicate that she had another man in her life. And there was no mysterious \"disturbance in the force\" in the rhythms of our marriage. \n\nJanet is good at working people. The esteemed Senator would be a primary target, since he was the guy who could make things happen for her. So maybe THAT was what Gold had observed. But one way or the other I knew that I would have the answers by the end of the week.\n\nKari was her usual sunny self. She had on a tight black t-shirt that stretched, \"I See Stupid People,\" across her disproportionately large chest. And she was wearing her normal pair of skin tight jeans topped off with 4 inch heels. We have a very relaxed dress code and Kari never tries to hide her curvy little body or her molten sexuality. \n\nI said, \"I think I'm going to go let the rats run for a couple of days and then I am going to go over what we have on Saturday.\" \n\nShe said, \"I have the three bugs on an LTE link feeding into the darkweb server that you had me set up. There's a terabyte of storage before we would have to reconfigure. That should handle a week's worth of audio and video. How are you holding up?\"\n\nI said, \"Nothing to hold up about. There is no proof that she strayed and I still believe in her.\"\n\nKari gave me the look that she reserves for the terminally na\u00efve and said, \"There WILL be something. I'm a woman and I know how these things work.\n\n\"We are faithful because we choose to be. You can't chain us to the wall anymore. So a girl will do what a girl wants to do. Our choice might be colored by our moral, or religious beliefs, or a simple sense of personal honor. But it is our decision and ours alone. \n\n\"Men will fuck anything moving. But cheating is a much more cognizant decision for a woman. The motive might be nothing more than being pissed off, or bored. But we always do it for a reason. That's why women tend to fuck bosses, or richer, or more physically dominant males - it gives them something they don't already have. \n\nThere ARE hopeless sluts of course. But most of us don't go out of our way to stray. And there would be less straying if the male world wasn't so tirelessly aggressive. \n\nThere are men who are as decent and honorable as you are. But, there are just as many guys who have no conscience, or empathy whatsoever. It's the thrill of the hunt, the ego boosting feeling of racking up another score. And as a woman, you are just prey\u2013 a prize to conquer. \n\n\"When one of these guys targets you they go all out to win. They give you the person you want to see. But whoever they're pretending to be is never close to who they actually are. And they don't treat you like a fellow human being - with feelings to crush and dignity to trample. All they are interested in is putting YOUR pussy in THEIR win column. \n\n\"Our problem is that women have an unrealistic view of who we are. We are brought up to believe that we always have to be perfect. \n\n\"So when we fail \u2013 no matter what the reason \u2013 we tend to just go with the situation. It's like we have to keep fucking Prince Charming - no matter how much of an actual frog he turns out to be - because we can never un-ring the bell. It's our penance for stepping over the line in the first place.\" \n\nThen she gave me an embarrassed look and said, \"I know, I've been there a couple of times myself. And I will bet you the world's most deluxe blowjob that is exactly the situation that your wife is in.\"\n\nAt the base of my lizard brain I knew that Kari was right. But I was still in denial. So I said, \"We'll see.\" \n\nMaybe I believe in Santa Claus and the Easter Bunny. But I was just not ready to accept that my marriage was over. And make no mistake \u2013 it was over if what Kari had said was true.\n\nNeedless to say the rest of that day and the following ones were difficult. A lot of the difficulty came from knowing that I was probably writing the end to my own story. \n\nThe other part of the problem was that Janet had turned particularly affectionate, which made me feel like one sneaky son-of-a-bitch. I got the impression that she had come to some sort of epiphany. \n\nShe had never been anything but loving and respectful. But she was at work a lot over the prior four or five months. Now it was like she was going out of her way to make time for me. I would have never noticed that change in behavior if Mr. Gold had not visited me. But in retrospect her actions looked a lot like remorse. \n\nI tried to lead my life like I always did. I went to work and came home as usual. We did things together, bantered like we always do and we cuddled and made love again that week. \n\nI had no idea what I was going to do. I wanted to take a preliminary look at the data before I made any decisions about next steps. But even the most cursory review of the videos was going to take a few hours. So I decided to put-off Armageddon until Saturday morning.\n\nOn Saturday I got up well before Janet did and left her a note telling her that there was an emergency at work. \n\nThere were a number of people around the office when I arrived with my customary Starbucks vente and bagel. Kari was NOT one of them. She was back in Manhattan. \n\nShe had told me that she was planning on showing up bright and early on Monday morning looking well-fucked. Apparently she considered this guy to be more serious than her usual play-dates.\n\nI waved to a few of the staff as I came in, went into my private office and threw the electronic security lock. I handle top secret stuff so there is a scaled down version of the Tempest shielding in the walls and a very secure workstation in there. \n\nKari had appropriated an old dot Mil site on the darkweb as our bounce to the cloud. So if anybody DID find my rats they would lead to a location that had not been active since the Gipper was President. \n\nI looked at what we had collected over the past four days and found that we had almost exceeded our storage limits. There were over a hundred calls and e-mails and hours of video captures from the rats on her work laptop. There was less video from her personal laptop since she apparently only used it afterhours. \n\nI went to work fast forwarding through the video. By 10:30 AM I had the whole dreadful picture. She was fucking him. That was for certain-sure. It was hideous.\n\nThey seemed to be restricting their trysts to her office, which was a lot less public than his. \n\nThere was a noisy blow job on Wednesday with him sitting in her desk chair - only HIS face was visible. The \"MAAAAA\" sound he made as he came was reminiscent of a sheep bleating. The gross gulping noises that came from below camera range just killed me\n\nAnd there was a lovely video on Thursday of her sitting in the desk chair, head thrown back, while he fondled her big naked breasts. But it was hard to see him as he stood behind her. And I think he fucked her OVER the desk afterward. \n\nAlthough THAT was only picked up by the audio gear. The cameras have to be pointed at the event in order to record it. But I could distinctly hear both of them as they came.\n\nYesterday I finally got an excellent video of both of them \u2013 one that was ideal for my purposes. \n\nIt was actually captured by her personal laptop. She had been working on it at a side table next to her desk when a call came in and it was pointed at the whole room. She moved to her desk to take the call. \n\nHer work laptop captured her sitting down in the desk chair and picking up the landline phone. From her conversation I could tell that the Congressman was calling from his office to enquire if she was available. The timestamp was yesterday at 8:13 PM. \n\nShe sat at her desk doing something and then at 8:37 Senator Douchebag appeared at her door. He entered and closed and locked the door. \n\nHe said, \"Everybody's gone home. You dismissed them right?\" \n\nShe was sitting directly in front of the office laptop as she said a little glumly, \"I sent them all home like you asked.\" \n\nHe said, \"Good! Then let's get TO it!\" Romantic little devil wasn't he? \n\nShe sighed and stood up from her desk. She came into the camera range of the personal laptop and walked to her couch casually unbuttoning her blouse as she went. \n\nHe was right behind her looking more like Pepe Le Pew than a member of America's most august legislative body. \n\nShe dropped her blouse and then unhooked her bra. Turned and sat down. She almost looked sad. \n\nThe Senator on the other hand looked like he was in heat. \n\nThe minute she sat down he was plopped between her legs sucking on those big beautiful boobs. He looked like he was trying to swallow one of them. That couldn't have been too stimulating for her. \n\nNonetheless, she threw her head back. And put her forearm over her eyes - as she reclined backwards on the couch. Her nipples have always been super-sensitive.\n\nSenator Dickhead then spent five or ten minutes noisily sucking on Janet's tits and biting her nipples. As he worked on her she started to get into it, emitting little gasps and moans. You could see him sliding her dress up and slipping her panties down as he feasted. \n\nThen he jammed two fingers into her pussy and began to twiddle like a man possessed. \n\nThe fingering really got to her. She uttered a loud groan and humped her hips up to receive him and began to moan loudly. You could easily hear the slurp-slurp-slurp as the distinguished Member of Congress finger fucked my wife. \n\nHer motor was running full-blast by then. She was emitting loud cries and gasps and muttering under her breath, \"fuck-me-fuck-me-fuck-me.\" \n\nAt that point Senator Asswipe got kittenish. He continued to vigorously pump her box but he said in a teasing manner, \"Do you really want me? I'm not sure? You need to tell me what you want me to do.\" \n\nShe mumbled something. He said playfully, \"I can't hear you. You need to say it louder.\" \n\nShe said something but I still couldn't make it out. He said, his voice mischievous, \"I still can't hear you. What do you want me to do?\" \n\nJanet said in a clear and angry tone, \"I want you to fuck me!! I want you to stick your cock in me and cum inside me NOW.\" \n\nWith that explicit invitation, he plunged his no doubt painfully rigid member all the way up into her in one motion. She shouted, \"Ahhhhhhhhh!!\" \n\nIt sounded like pure sensation, not desire. And then she settled down to loud cries and moans as he pumped her. \n\nAt that point she was holding her legs up in the air in that classic woman's posture designed to get the maximum penetration. And she was humping back at him with wild abandon. \n\nShe was just yelling, \"Ahhh! Ahhh! YES! YES! That nauseating dialogue went on for perhaps twenty minutes. \n\nIn that period she had at least one very noisy orgasm. Then the Senator himself let out a loud, \"Ahhhh Fuck Yesssss!\" and his hairy ass began to flex over and over while he pumped into her. While he was doing that she yelled, \"OH GOD\" and came loudly one last time. \n\nAfterward, Janet just lay there moaning quietly, her feet were flat on the floor, knees spread wide. She was motionless. Her gaping pussy was on full display and the remains of the good Senator were dripping out of her. \n\nShe looked devastated. \n\nThe Senator was feeling very good about himself as he stood and reassembled his pants. He kissed her on the forehead and said, \"That was spectacular as usual my dear. You are the best fuck I have ever had. And I hope we can keep doing this for a long time to come.\" \n\nShe said with venom in her voice, \"Get out of here you bastard.\"\n\nHe said merrily, \"Whatever you say my dear.\" \n\nThen he smirked at her and said with threat in his voice, \"Just remember that you are MY slut.\" \n\nShe rose appearing beaten and hopeless as he pranced out of the room looking smug. She pulled up her panties, reassembled her dress, put her blouse and bra back on and sat down at her desk. ",
        "Then she began to cry. I had never heard such heart-wracking sobs from a human being in my life. \n\nLast night she had gotten home after I had gone to sleep. But I had turned in early. I was glad I had.\n\nI shut off the video and just sat there staring into space. My mind was a blank and I felt sick to my stomach. The hurt was almost unbearable. \n\nThe pain just kept coming in pulses. I knew with irrevocable certainty that stark emptiness was my new reality. \n\nI kept telling myself that I was tough enough to manage this. But my mind was a black void. The impact of the thing just overwhelmed me. And I put my head down on my desk and for the first time in thirty years I wept. \n\nIt was fucking embarrassing. But thanks to the shielding nobody heard or saw me. \n\nAfter a couple of minutes my self-respect kicked in. I needed to get a grip \u2013 get myself under control and take action. I stopped crying, went to my personal lavatory and splashed some water in my face. I dried my face off looked into my red eyes and said, \"You're on your own now soldier. So shape your ass up and stop being such a pussy.\" \n\nAfter what I had witnessed there was no way I could stay married to Janet. But that thought blasted a hole in my formerly self-satisfied view of life. \n\nEverybody has to have SOME sense of certainty. Mine was built around my marriage and her. It was probably stupid to put all of my eggs in one basket but that was the path I had chosen. \n\nNow I realized how mortal I truly was. And it was a scary proposition indeed. There was nothing certain for me now except death and the burning hatred that I had for Senator Jubal Early Simpson.\n\nI recognized that it was time to close the door and move into the next part of my life without Janet. The vista that I was trudging off into was as bleak and barren as the desert. But I felt like I might be able to save some vestige of my sanity if I held onto my hate. \n\nI was still in a fugue state. All I could think about was getting someplace quiet to think. As I went down to my car. I had the totally inappropriate thought, \"Thank God I decided to drive instead of taking the Blue Bus. I couldn't face her yet.\" \n\nI did not want anybody to find me. So I drove the Range Rover down to Fort McNair. I have a Reserve Officer's access to that base. I stashed the Rover in NDU's back lot off of V Street. I locked it up and walked the two hundred yards down Buzzard's Point to the James Creek Marina. \n\nI cast-off and motored down the short stretch of the Anacostia and out into the Potomac. I kept the boat under diesel all the way downriver to Belmont Bay. Just as the sun was setting I tossed the fore and aft anchors. \n\nThe ride down the Potomac was mildly therapeutic. It was another beautiful fall day and I just tried to concentrate on the things that I still had going for me. I had a job that I loved. And I had a few good friends, particularly Kari. If I ever needed her it was now. But I had too much pride to interrupt her weekend. \n\nI was only just turned 35 and I was in decent shape. I would find another woman and I would rebuild my life - as scary as the prospect sounded. \n\nBut first I had a debt to settle. The thought of the scorched earth that I was going to bring to Senator Simpson's life almost made me whole again. \n\nMy phone had started to ring about 3:30 PM. I was formulating a plan and I absolutely didn't want to talk to Janet. She called constantly after that so I turned the ringer off. \n\nI had plenty of alcohol on the boat but I am not the kind of guy who gets drunk in order to run away from things. So I was sitting in the cockpit in the darkness sipping a Yuengling and listening to the birds and insects in Occoquan Bay. \n\nThen the phone lit up again. I reached to turn it off and I saw it was Kari, not Janet. \n\nI picked it up and said, \"Hello Kiddo.\"\n\nKari's pissed off voice said, \"Where the fuck ARE you? I've been looking all over for you?\" \n\nI said, trying to sound chipper, \"Hello to you too. How is New York?\"\n\nKeri said, \"Fuck New York!! The moment Janet called me I knew that the balloon had gone up down here and I flew back three hours ago. I have been driving to every place I can think of looking for you. You need a friend!!\"\n\nA tsunami of gratitude washed over me. Of course I needed somebody! And Kari was my best friend. That is - now that my former best friend had disqualified herself. \n\nI said, \"Are you going to tell Janet where I am?\"\n\nShe said, \"Of course NOT - not unless you want me to.\" \n\nI thought for a second. I had been forming a plan all of the way down the river and it depended on neither of the adulterers getting any hint that I knew. But I couldn't face Janet without tipping my hand. \n\nSo I said, \"Can you call Janet and tell her that you just found out that I am doing some sort of super-secret mission out of the country and that I can't talk now. \n\n\"Make something up. Make it sound plausible. Tell her that I will try to get in touch when I can and that I love her.\" That should quiet things down. \n\nKari said with incredulity in her voice, \"I'm guessing by the way that you are acting that you found out that she was fucking that slimeball. And you still love her???!!\" \n\nI said, \"Oh I love her alright, I just never want to be in the same room with her. Right now I am trying to paste whatever's left of my broken heart back together. But there are a lot of missing pieces.\" \n\nKari said, \"Where the fuck are you. I'm coming to you.\" \n\nI said, \"I'm in the boat. I'm laid up in Belmont Bay off of Woodbridge but don't come...\" \n\nShe said, \"I'll be there in an hour,\" and terminated the connection before I could say anything else.\n\nExactly one hour later she called me from the Belmont Marina dock. She was standing under the halogen dock lights in her usual skintight jeans. Although she had on Topsiders instead of heels. She was wearing a chambray work shirt that hung down past her round butt and she was carrying a little overnight case. \n\nShe clambered aboard and disappeared down the companionway. I opened a couple of cold Yuengling's. She came out and walked over to where I was sitting and planted a big wet kiss on my forehead. \n\nShe stepped back and held me at arm's length with those huge, bright emerald eyes searching my face. The fact that she was standing and I was sitting and that she was looking at me almost directly eye-to-eye only emphasized how tiny she was. \n\nShe said with concern, \"I know it hurts. Do you want to talk about it?\" \n\nI said, \"Not really, not right now, I am still trying to get my mind around what I saw. And I may never get over THAT. It just hurts too much - and I don't want to lose-it right in front of you.\n\n\"But what I DO want to talk about is payback. Can I offer you a beer and you can help me concoct a plan to end both of them? Are you up for that?\"\n\nShe stood to attention in all her curvy glory and gave me a British Navy salute - where she got that from I don't know \u2013 and said, \"Aye-aye skipper!!\"\n\nSo for most of the night we drank beer and plotted revenge. Her presence was like a pharmacy full of happy pills. She was the essence of what differentiates women from men, nurturing, soothing, supporting and perfectly tender.\n\nShe also had a really sick and devious little mind. \n\nIt was Kari who remembered that my wife's work laptop might still be plugged into their office network. Janet never turns anything off. And if she was still logged in we had access through the rat to everything the Senator had on his server. Given the shape that Janet was in when she left last night, good security hygiene might not have been at the top of her list. \n\nI went into the cabin, activated the rat and sure enough. The esteemed Senator's life was an open book. So I downloaded all of his personal files to a portable hard drive. There was so much in the download that it took the better part of two hours over the LTE connection. But I wasn't going to sleep anyway. \n\nThat information would give me some prime stuff to pick through tomorrow. As soon as the download was complete I wiped the rats. I didn't want any of my NSA cohorts discovering how the classified information we had vacuumed up got leaked. \n\nI told Kari to go out on the deck so she could have plausible deniability. She looked at me like I had lost my mind and said with some heat, \"Where you go, I go.\" I think she was channeling Braveheart. \n\nIt was close to 3:00 AM now and I could see that even my lovely little Energizer Bunny was starting to wear down. So I said, \"Let's get some sleep. There is a cuddy forward that you can lie down in. Just pull the curtain. I'll sleep out here in the cabin on the couch. \n\nShe said, \"No way buster! You are far too long for that couch. Let's just lie down in there together. I promise I'll respect your virtue.\" That was accompanied by a lascivious smile. \n\nI said, \"Seriously my hot blooded little friend. It will be forever before I will ever be able to touch another woman.\" \n\nFor a second she looked almost hurt. Then she brightened and said, \"Of course you big goof. I understand how difficult this must be for you. I know that you loved her and I know that this must be ripping your heart out at the roots. \n\n\"I am here as your friend and I want to comfort you. Just feel my body next to yours and realize that you are not alone.\" \n\nI slept in a pair of sweatpants and a t-shirt she wore a long t-shirt and I assumed panties underneath. I lay on my back. She lay on her side facing away from me and then as she made herself comfortable she snuggled those hard little buns up against me. \n\nShe is a paradox. But a lovely one. She may be tiny but she is also solid, wide and substantial. We drifted off to sleep. And astonishingly I slept without difficulty for several hours. She DID make a difference.\n\nI awoke with the sun shining through the deck prisms. I was turned on my right side spooned with Kari. My left arm completely enveloped her little body. And I was holding one of her massive tits in my left hand. Worse, her naked butt was snuggled against my rapidly growing hard-on. Which was slowly making its way between her ass cheeks. She was pushing back softly and moaning in her sleep.\n\nYikes!! - I very quickly untangled myself from her and bolted out of bed. She muttered a sleepy complaint then went back to sawing logs. \n\nI shot straight out of the cuddy and rushed to the head. I thought with anguish. \"What the fuck are you DOING? You've lost the love of your life and you are already snuggling up to that hot little number\u2013 are you REALLY that shallow?\" \n\nThen I thought to myself Kari has been my sidekick and best pal for such a long time that everybody calls her my \"work wife.\" She is just a familiar and sympathetic face that's all. \n\nAnd you need human connection to keep you from going nuts. \n\nI know she is hot. Hell!! The whole world knows she's hot. But she is a good person and she was just trying to comfort me. She would never do anything to make your current situation worse.\n\nBoth of us were aware of the fact that there was an incredible amount of emotional trauma in front of me. And there was no way I would dishonor my marriage or my own dignity by being intimate with another woman before that was all sorted out \u2013 even somebody as stunningly attractive and wonderfully companionable as Kari. \n\nSo I chalked-up what had occurred to unfortunate happenstance and nothing more.\n\nPlus, Kari was ten years younger than me, really just a kid. She was not ready to be anybody's woman. The fact that she was willing to give up her clearly very active sex life was a tribute to her compassionate nature and her dedication to me as her friend and mentor. \n\nThat thought reminded me why I was sitting on a boat rather than at home. There was no explanation for what I had witnessed \u2013 except Old Testament style adultery. So, as much as I needed and wanted Janet \u2013 and I still did - I knew that she was out of my life. \n\nIt is a myth that love lasts forever. Love only lasts as long as the conditions that shaped and nurtured it exist. One fundamental condition for sustaining love is unquestioned trust. And the certainty of sexual exclusiveness is the lynchpin of that trust. \n\nA man's need to pass along his DNA is atavistic. Woman know who the mother is. But by the nature of their role, men can't have that same kind of assurance. So they HAVE to trust in their wife's pledge to engage in sex only with them \u2013 and them alone. That is the point of the \"forsaking all others\" part of the vows. \n\nA guy might get past a \"heat of the moment\" onetime mistake. But the idea of your wife fucking another man on demand \u2013 probably for months \u2013 simply violates every aspect of the marriage covenant. That behavior might even be understandable but it was just not pardonable. And as a result my love for Janet had vanished as if she had thrown a switch. \n\nI would regret her loss until the day I died. But I was not bonded to her any more. The only issue was how to end the marriage in a way that inflicted the maximum amount of pain on Senator Douchebag.\n\nAny Port in a Storm \n\nI was sitting in the cockpit looking out over the Occoquan marshes when Kari came out on deck. It was another beautiful day. I handed her coffee in a heavy ceramic mug. \n\nShe has a thick cap of white blond hair that she wears short. It might make a bigger woman look a little dykey. But on her it was adorable. \n\nShe is cuter than a basket full of kittens. That is until you take a REAL look at her. Then you see the absolute perfection of her features and the uncanny size and depth of those green feline eyes. \n\nHer eyes are like a hentai schoolgirl's, huge and seemingly innocent. But if she allows you to look into them \u2013 I mean really LOOK into them - you see flashes of profound female wisdom. I have no idea how she got so wise, so young. \n\nI said, \"Good morning my dear little co-conspirator. I trust you slept well?\" \n\nShe dimpled fetchingly. Kari's face is round and apple-cheeked. She looks like the archetypal \"head-cheerleader\" - blond and fair skinned with two deep dimples in her cheeks next to her wide sensual mouth. The dimples appear any time she smiles and they only add to the impression of her all-American-girl wholesomeness. \n\nJanet - on the other hand - has a gorgeous, exotic, dark Mediterranean loveliness - with the high cheekbones of a classic beauty. And Janet has probably never looked innocent in her life.\n\nKari said, \"I had the most wonderful dream just before I woke up. Do we need to talk about that?\"\n\nI said, \"Maybe later. I want to talk about something much more satisfying first. And that is \u2013 war to the knife with the illustrious Senator Simpson. I need your thoughts about that.\"\n\nShe said, \"Can I see what precipitated the crisis? Or is it too difficult for you to share? I think I can give you better advice if I have situational awareness.\" \n\nI know that her terminology sounded corny. But when she is on task Kari tends to talk like the top flight intelligence analyst that she is.\n\nI said, \"It's teed up on the laptop in the cabin. But it is pretty raw stuff. It kills me to see it but I know those videos represent a lot of potential hurt for the participants. The only question is how to use it.\"\n\nShe said, \"Let me take a look while you sit out here plotting your dire revenge.\"\n\nShe came out of the cabin forty-five minutes later. She had been crying. She just stood there wringing her hands and looking at me. She said, \"I am soooo sorry Paul. That must have been horrible.\" \n\nThen she added, \"I am even sorrier for Janet.\"\n\nWhat was THAT? I thought that after witnessing Janet's slut behavior Kari would want to help me pile the firewood underneath the stake.\n\nShe said, \"I don't know why your wife is fucking that creep. But it is obviously killing her to do it. As a woman I can attest that she is not giving herself to him willingly.\"\n\nI said with disgust, \"Have we watched the same video? She had at least two big-time orgasms and she seemed to be having the time-of-her-life. That isn't to mention her gobbling his cock on Wednesday and the little desk job she gave him on Thursday.\"\n\nKari looked at me angrily and said, \"Grow up!\" That was the first time she had EVER spoken to me in anything but respectful tones. \n\nShe said, \"Your wife has been broken by this guy. She does what she is told even though she hates it. And she clearly hates HIM. The fact that she happened to get off a couple of times is just what happens when you are being fucked. \n\n\"I've had monster orgasms riding on a motorcycle. It doesn't mean that I'm in love with the bike, or the guy driving it.\n\n\"I don't know how it happened and what his hold is on her. But she was no more eager to do the things I saw her doing than a hooker with a client. She just does it. \n\n\"I'm not saying this to get you two back together or even to get you to forgive her. All I am doing is giving you the sit-rep. And I am telling you that the real culprit here is her boss.\"\n\nI said, \"Well I DO agree with you about THAT and I have a couple of ideas. But I am going to have to get to a quiet place with stronger Wi-Fi. Did Janet buy the secret agent story?\"\n\nKari laughed and said, \"She hated it but she bought it. She said that you were going to have a lot of 'splainin to do when you got back. \n\n\"Honestly - I think she thought that you were sneaking off to have an affair of your own.\"\n\nI said, \"So nobody will be looking for me on Monday \u2013 right\"?\n\nShe said, \"Not anybody official at least.\"\n\nI said, \"I'm going to drop you off at the Marina. Your car is there - correct? Then you can drive back to your place today and be at work bright and early tomorrow.\" \n\nShe looked like she was going to argue. I said reasonably, \"Kari, you have to do this I don't want any changes in routine and if both of us were missing it might make somebody suspicious. Plus I want you well out of the blast radius.\"\n\nShe said, \"I'll do it but only because what you are saying makes sense. On the other hand, if you need me you had better call me. Or I am going to hunt you down and do awful things to you.\"\n\nI put her ashore at the marina dock. She was standing there watching me motor back out into the bay. Then she turned and trudged toward her car. The last I saw of her was that glowing cap of hair. \n\nI had plenty of time to think going back up the river. I can get close to 10 knots out of the old girl on the diesels. So with the throttles wide open the trip back to the James Creek Marina only took about three and a half hours. \n\nAfter I had gotten the boat properly tied up I walked across V Street and picked up my car. \n\nThere was nobody around. Of course it was a Sunday morning so there wouldn't be. I took South Capitol across the Anacostia to 295. And that to the Beltway. Thence back across the Potomac and to U.S. 1 through Alexandria to the Hilton Alexandria Old Town and checked in. \n\nI had been living on a boat in the same clothes for almost two days and so my first visit was to the \"Banana Republic\" clothing store down King Street and the next stop was to grab some toiletries. After I had showered and shaved and dressed in my new preppy duds I was feeling halfway normal again. \n\nThen I sat down with my laptop to - as my daddy used to put it - \"Get down to the rat killin'.\"\n\nRevenge is a purifying emotion. It gives you focus and direction. I wasn't thinking about how much I was hurting now. My mind was focused on concocting ever-more-creative ways to make the object of my hatred miserable. \n\nI knew at a minimum that the video evidence would be difficult to explain to his fundamentalist constituency - as well as his wife. But just posting it on the internet, or giving it to Gold, wouldn't be hands-on enough. I needed to have some fun first. \n\nI realized that my compulsion to confront the guy was childish. But the son-of-a-bitch had despoiled my wife and ruined my life. And I wanted him to get the same sense of hopelessness and desolation that was my new reality.",
        "So I was compelled to look the motherfucker in the eye as I explained his predicament to him. I wanted to watch his horror as the jaws of the trap closed. I had to see him in the moment when he knew that there was no way out - and I wanted to watch him rage against that knowledge \n\nBut in order to maximize his pain I had to find out everything that I could about his miserable life.\n\nI am not as good as Kari with all of those wired gadgets \u2013 she was raised in that generation. But I have a track record that proves that I am better than anybody at analytic tradecraft. So I cracked open the personal files that we had pulled off his server. \n\nI was hoping that a day with Senator Dickhead's most intimate secrets might prove informative.\n\nHis server automatically backed up its clients. So, although the dumbass religiously erased the stuff on his own computer, there was a backup copy of all of his personal comings-and-goings sitting on his office hard drive. That was what we had downloaded. \n\nAnd since the good Senator couldn't even spell encryption let alone practice it, his entire criminal enterprise was right there in easy to read plaintext. \n\nIt didn't take very long to see that he was running a classic pay-to-play scheme that was worthy of the Mayor's Office in Detroit. \n\nOnly a self-important, over-entitled douchebag, with no concept of accountability would keep evidence of actions that blatantly corrupt on a computer. But the good Senator appeared to think that he could do anything that he wanted without repercussions. \n\nI suppose if you sat in the rarified atmosphere of the Senate you might see things that way. But it was hubris plain-and-simple. And as a result, the Senator was about to discover that there are ALWAYS consequences for your acts.\n\nI am a tiny, unimportant David. And Senator Dickhead probably thought that he was an invincible Goliath \u2013 particularly with the power and majesty of the entire Federal Government backing him. But the virtual world changes the rules of engagement. And in that world - the right person with the right technology can bring ANYBODY down.\n\nBy bed time I had assembled a digest of things for Gold to follow-up on. Those revelations might actually earn him that Pulitzer. The dossier had detailed accounts of names, times, services rendered, and amounts. It also had the account numbers and credentials for the places where the good Senator had buried his booty. \n\nAlong with that irrefutable proof of corruption - I also included a stirring high definition video starring the Senator's hairy ass and a woman whose face was pixeled out. \n\nThe record of the kickbacks were the criminal acts. Those would eventually get the Senator sent to prison. But there is nothing like a juicy scandal to get the vultures circling right away. And the Post wouldn't have to have independent confirmation to go with the graphic video I was providing.\n\nI put it all on two thumb drives and put THOSE in an envelope. I would give that to Gold tomorrow. But first I really had to watch Senator Fuckface squirm. \n\nKari believed that he had been the architect of Janet's downfall. So I wanted him to experience \u2013 if even for a short time - what it was like to live in emotional hell. \n\nHe was constantly surrounded by personal security and toadies. So I would have to flush him out of cover first. The best way to accomplish THAT was to make him an offer that he couldn't say \"no\" to. \n\nI figured he wouldn't want witnesses around as we discussed a topic as politically toxic as him fucking my wife. So I took a short clip of the exciting climax of their little tryst - this time with Janet's face uncovered - and sent it to his personal e-mail account. \n\nI was pretty sure THAT revelation would upset the Congressman's petit-dejeuner tomorrow. And I was hoping that Janet might be the one screening his messages. That would give me a twofer. \n\nOf course I didn't want any involvement with my friends at Fort Meade. So I sent the message using the TOR browser bundle. I hopped it through enough nodes that the Senator's boys would be trying to figure out how the Bratva had gotten involved. \n\nJust to turbo-up that deception - I included a message in bad English. It said, \"Gospodin, Very bad boy you are \u2013 we need to conversation NOW \u2013 please come Monday 2 PM to National Mall... on wall sit closest to Memorial to Director Lincoln. No bringing Militsya you bad boy.\"\n\nI was about to snap off the light when I had the urge to call Kari. I wanted to hear her voice. \n\nThe phone kept ringing and I was about to hang up when she answered. She sounded out of breath. \n\nI said, \"Oh my God!! Did I interrupt something?\" \n\nShe said, \"It's okay. I'm glad you called. Are you all right?\"\n\nI said, \"I'm really sorry that I rang this late. But can we meet tomorrow at 11:00 at the King Street Metro Station in Alexandria? I'll fill you in on some new developments. Now go back to what, or whoever, you were doing.\"\n\nShe snickered and said, \"His wait will be well worth it.\" I was laughing as I hung up. I thought, \"What a woman!!\"\n\nI dozed off feeling better. I was going to ruin the mother-fucker. But first I was going to watch him twist. \n\nJanet was also in for the same kind of bad news. And for some reason that made me sad. \n\nHer betrayal had created two realities for me. I wanted to brand both cheeks of her big beautiful ass with a scarlet \"A\". And then whip her naked down Pennsylvania Avenue. But I also had all of the residual feelings of loving connection that we had built up over the last ten years. \n\nIn everything but one indefensible thing she had been a perfect wife, friend and lover. \n\nThose recollected emotions were neatly walled off in another part of my psyche, relatively untouched by my present pain. I was pretty sure that Janet had never meant to hurt me. But it didn't change the fact that I was alone and bereft thanks to her actions. \n\nTomorrow I was going to settle the score with Senator Dickbreath. And that was keeping me going. I knew that once that was done and my divorce from Janet managed \u2013 and THAT would be harrowing for sure - I was looking at a pretty godforsaken life. \n\nI was waiting for Kari at the exit from the Metro. I was trying to tell myself that I needed her help. But I couldn't kid myself. I just plain needed her. She had become a lot more than my partner in crime and battle buddy. She was a one woman security blanket \u2013 the single human being I knew I could trust and totally rely on. \n\nShe emerged from a Blue line train at exactly 11:00. I was standing on the other side of the automated turnstiles as she came through looking around for me. She was dressed in her usual tight jeans and heels but she was wearing a v-necked sweater instead of a t-shirt. That revealed a couple of yards of deep cleavage and it made her look older for a change.\n\nEvery guy following her was checking out the twitching of her little round ass and people in front of me were watching her huge jugs bounce as she strode along. She seemed concerned. \n\nThen when she saw me her face lit up and she walked rapidly toward me, jiggling all the way. She looked cool, composed, intelligent and totally in command. \n\nI said, \"I'm very sorry that I interrupted your fun last night. I should have been more considerate of the time. It was just that I put something else in play that I need your help with. I know I told you that I wanted you out of it. But I can't do this by myself.\"\n\nAs we walked out of the station she grabbed my arm merrily and crushed it against her massive left tit. \n\nShe said breezily, \"That was just a little sport-fuck. After the way you wound me up the night before I needed to let off some steam.\"\n\nI said, \"I beg your pardon??!!\"\n\nShe said, \"Oh don't worry about it. I know you didn't do it on purpose. But the lustful urges that you inspired in me while we were spooning had to get worked off somehow.\" And she gave me one of her dimpled smiles.\n\nI gawked at her astonished. She ignored that completely and kept talking. She said, \"What's the status of Operation Fuck-the-Senator?\"\n\nI said, \"Can you take the rest of the day off?\"\n\nShe said coquettishly, \"You're my boss. Can I?\" \n\nI said, \"Call in and tell them that you are tracking something down and you will be in tomorrow. I don't want my disappearance to get connected to yours.\" She said, \"Gottcha!\" and dialed.\n\nWe walked across the Diagonal Road next to the Station and into Joe Theismann's. The lunch crowd was just starting up and so we got a seat right away. \n\nI ran through what I had discovered. \n\nShe said, \"What an idiot. If you are going to do something THAT corrupt you ought to keep the evidence locked in a safe like they used to do in Mayor Daly's day. Not just out in the open where anybody can get at it.\"\n\nI said, \"That's self-evident to somebody from your generation. But remember that this guy is old and he isn't the sharpest knife in the drawer. Plus he fears no evil - because he's the meanest mother-fucker in the valley.\"\n\nShe dimpled. That face is infectious. I had to keep reminding myself that Kari was off-limits, at least until I got my marriage sorted out. It wasn't a matter of her smoking hot body, or that face. It was just the total package of tough, intelligent femininity. She made me feel confident.\n\nShe said, \"What do you need me to do?\" \n\nI said, \"The guy is meeting me at the reflecting pool. Except he doesn't know who he is going to meet. I just want to look him in the eye as I tell him about all the things that are going to happen to him. \n\n\"But I need you to spot for me while I am doing it. I have no idea what he plans to do about what I sent him. But he might bring friends. And so I want somebody to watch my back and alert me if trouble is coming.\" \n\nWe spent the rest of the lunch hour carefully choreographing our plan and then we parted company. I didn't want to take the slightest chance of exposing her. \n\nThe Senator showed up at 2:05 and sat on the decorative wall next to the reflecting pool on the Lincoln Memorial side of the Mall. He looked very ill at ease. In fact he looked terrified \u2013 good! \n\nI thought I would let him stew for a while.\n\nKari was sitting with her back to the marble baluster at the second set of steps up to the memorial. She had a camera on a tripod in front of her. \n\nShe looked like the world's hottest school girl, taking pictures of the National Mall through a 300 mm lens. \n\nBut what she was really doing was using the telephoto to scan for problems. There was an open link between my cell phone - which was in my shirt pocket - and hers. She would squawk a warning if she saw something. \n\nHe was sitting on the part of the wall facing down the reflecting pool toward the Capitol. There were some tourists in the general vicinity but there was nobody close enough to overhear. \n\nI thought to myself, \"In for a penny \u2013 in for a pound.\"\n\nI was standing on the grass behind him when I said, \"Good afternoon Senator Simpson. Can I join you?\"\n\nHe whipped around like he was in the desert and he had just heard a rattle behind him. I was standing there looking neutral \u2013 not angry \u2013 not happy. I was intentionally situated so that he would have to hold a stress position in order to look at me. That was planned.\n\nI could see that he knew me but couldn't place me. \n\nI just stared at him for another minute. \n\nFinally I could see the recognition dawn on him. \n\nHe said, \"You're Janet Schmidt's husband!!\" I walked around the edge of the wall and sat down beside him. I said, \"Bingo!! The very one!!\"\n\nI could see the fear in his eyes. He was afraid that I was going to lay some well-deserved physical hurt on him. Well I wasn't. What I had planned was going to be a lot more prolonged and satisfying agony than a swift kick in the nuts. \n\nPolitics is all about the image. And thanks to me his trip from the penthouse to the outhouse was going to be on the express elevator.\n\nI said, \"Yes indeed I am Janet's husband - and I would like to tell you about the situation that you find yourself in. I have a lot more graphic stuff than the clip that I sent you. It is clearly you so there is no way you can deny it. And it is NOT the kind of thing you will want to see on YouTube.\" I made the same MAAAAAing noise that he had made as he came in Janet's mouth the week before.\n\nHe said angrily, \"How did you get those pictures?\" \n\nI said, \"That's none of your business. What YOU care about is what I am going to DO with them.\"\n\nHe looked at me speculatively and said, \"How much?\"\n\nThe guy was a really sleazy ball of shit. He thought that I had pimped Janet out to shake him down for blackmail. That nearly DID earn him a rap in the mouth. But I had to stay cool. He was toast \u2013 I just had to finish telling him about that.\n\nI said, \"Here's what's going to happen. First, I am going to give all of this to the guy at the Post who is investigating you for his story on moral turpitude in the Senate. Then he is going to publish it. \n\n\"And at the same time, I am going to create a website called \"Senators Gone Wild.\" I have been recording you for some time. So it will feature the stuff that you've already seen plus a whole lot more. I'm certain that between Janet's beauty, and all of the graphic sex it will draw millions of visitors. Maybe it will go viral and I'll make a bundle.\"\n\nHe looked horrified. He spluttered, \"But you can't do THAT!! Think of what you will be doing to the Country, think of my constituents.\"\n\nI laughed out loud. I said, \"I AM thinking about the Country and your constituents. They will probably want to know what the voice of Family Values is doing for them in Washington. I am also sure that your esteemed colleagues in the Senate would like to find out what you have been up to.\" \n\nThat entire body is like a cackle of Hyenas \u2013 they'd tear a wounded member of the pack to shreds. \n\nHe absorbed all of that. There was a pause as the implications sank in. \n\nAnd then he dropped his face into his hands and began to blubber. That was a satisfying surprise. He was an even bigger candy-ass than I thought he was. But witnessing his public breakdown WAS gratifying \u2013 it mirrored the private one that I had when I discovered the reality of my OWN situation. \n\nI said with a sneer, \"Man-up you raging pussy!! You're crying just like my wife did after you fucked her last Friday night. Oh and about Janet. If you tell her about any of this before I get the pleasure of doing it myself there are some additional things that I can do to you that you are going to absolutely hate.\" \n\nThen I smiled patronizingly and said, \"But unlike you I am a decent guy. So I am going to let you fall-on-your-sword in true corrupt DC fashion. I will let you resign your Office to spend more time with your family. If you do that in the next 24 hours I won't hand this to the Post.\"\n\nHe looked at me eagerly and said, \"You'll let me do that?\" \n\nIt would save a lot of his bacon back home if he resigned in good standing. Rather than being outed as the debased piece of shit that he actually was. \n\nI said, \"Like I said \u2013 I'm a decent guy.\"\n\nI had absolutely no intention of doing anything other than putting his wretched morals in the global spotlight. But it would give our conversation a-hell-of-a-lot more impact when he found out that I was as crooked as he was.\n\nHe stood, took my hand in both of hi, in that classic politician's grasp, and shook it with eager gratitude. He actually said with tears in his eyes, \"Thank you!!\" And then he turned and headed off down the reflecting pool. He was beaten but as yet unbowed. The next 24 hours would change that status for him - a lot. \n\nI called Gold and asked him to meet me at the Madison for a midafternoon drink. It is right up the street from the Post. Kari was sitting with me at a booth in the bar area when he came in. I rose and we shook hands. I said, \"You remember my associate Kari Whitman?\" \n\nHe gave her the same appreciative once-over that every guy does and said, \"Of COURSE I remember.\" \n\nAt least he was honest. \n\nI handed him the envelope and told him in very general terms what was on the two thumb drives. I said, \"I have to apologize to you. My wife WAS having an affair with Senator Simpson all of the evidence is on THIS drive and I handed him the first one.\" \n\nLast night I had put together a fifteen minute collection of Janet's greatest hits. It killed me to relive it. But I wanted to control what Gold saw. Nevertheless, even 15 minutes of what I gave Gold was enough to end the Senator's career. \n\nThen I held up the other drive. I said, \"This has all of the documentation of a multi-million dollar pay-to-play scheme that the Senator has been running since he took over the Chairmanship. The details are all there. Even by Washington standards it's corrupt.\n\n\"This was stolen off his hard-drive so you will have to confirm it from other sources. But the trails that your investigators need to follow and the rabbit holes to look down are all clearly marked. I am sure the Post has the resources to dig this up ASAP.\" \n\nGold looked at me with wonder. He said, \"If what you are saying is true this will be the political story of the year. And the good Senator is doomed. I won't ask how you got it. But I CAN congratulate you. This is dynamite stuff.\" \n\nI said, \"The information I just handed you was Kari's doing. She is the genius behind all of that.\" \n\nThe little exhibitionist was in the process of showing Gold her tits all the way down to her black bra. But she dimpled with thanks as she did it. He tore his eyes away from her cleavage and looked at me with gratitude. He said, \"What can I do for YOU?\" \n\nI said, \"Well first of all you can keep Janet out of this as much as you can. She is a victim and I want her protected.\" \n\nGold said, \"Even though she cheated on you?\" \n\nI said, \"I want to be fair. She ripped my beating heart out of my chest. But that's personal. When you publish this stuff the shit is going to hit the fan in ways that I can't even imagine up on Capitol Hill. She doesn't deserve to suffer those consequences. She might have cheated. And that is bad enough. But she is not a criminal.\"\n\nWe shook hands and Gold departed. Kari looked at me with wonder and said, \"That was really decent of you. What next?\" \n\nI sighed and said, \"I'm going to go home now to face the music.\"\n\nShe looked concerned and said. \"Do you need anything from me \u2013 can I do anything for you?\"\n\nI said, \"This is a battle I have to fight alone. I imagine that this is going to all play out over the next 24 hours. I might see you at work day-after-tomorrow.\"\n\nKari said, with a funny sounding voice, \"She is going to expect you to fuck her. Are you going to do that?\" \n\nI faked a cough and said, \"Dengue fever, or perhaps its Ebola \u2013 at any rate I am too sick to touch her. By tomorrow it'll all be a moot point anyhow.\"\n\nAs we parted company Kari stood on her tiptoes and gave me the sweetest kiss on the cheek. For a change she looked downright unhappy. She said, \"Be brave Boss. I will always be available if you need me. Call me any time.\"\n\nI looked at her beautiful little sad and worried face and said, \"You'll be the first person I'll call. And I will never forget what you have done for me.\"\n\nJanet wasn't home when I got back. I changed into my most comfortable clothes, jeans and a flannel shirt, and did a little prep work. Then I sat waiting for her in the den. I had the fatal clip teed up on the laptop in front of me. \n\nShe arrived around 7:00 carrying Chinese take-out from Kitchen No. 1. She put the bag on the table in the foyer and went straight upstairs. \n\nShe came back 15 minutes later in her standard around-the-house outfit, yoga pants and a loose sweatshirt. \n\nShe picked up the bag and walked toward the kitchen looking preoccupied. She saw me sitting in the den, gave a little gasp and a look of absolute joy spread across her face. She dropped the bag and ran toward me. I stood up. She threw her arms around me and gave me a big kiss. I had not said anything to that point. I was too full of emotion. ",
        "She stepped back and said, \"Thank God you're home. I was worried sick. Where have you been?\" \n\nI said, \"Sit down\" - and gestured to the overstuffed leather chair next to my desk. Then I said those four fatal little words, \"We need to talk.\" \n\nShe looked puzzled and concerned. She sat. God she was gorgeous!! \n\nI said, \"First, I want to tell you that I love you more than I love my own life. I have never loved anybody but you and I probably never will. But - - - I know.\" \n\nShe looked like she was about to say, \"Know what?\" Then it dawned on her. Her face went deathly pale. She whimpered and said in a strained voice, \"OH MY GOD NOOOO.\" \n\nThen she collapsed back in her chair. She put her right forearm over her eyes. Unfortunately it was the exact same gesture she had used on Friday when Dickhead was sucking her tits. Except in this instance it looked like she had gone catatonic. \n\nI said, \"I have some very tough video that I am going to leave here on the laptop. I want you to look at it. When you are finished we can talk.\"\n\nThen I rose and pushed the play button. The gross slurping sounds that she made as she was swallowing the distinguished Senator's knob began. She cried out like I had hit her. I walked out of the room to the sound of her sobbing.\n\nI picked up the dropped bag of Chinese and walked into the kitchen. I put the bag in the refrigerator. I didn't think that either of us would want to eat tonight. \n\nI sat down at the kitchen table and stared off into space. I was completely disengaged from time and reality. \n\nShe finally appeared in the doorway. She was crying very hard - hands covering her face as she walked. She stumbled over to where I was sitting and sat in the chair opposite me. She put her head down on her arms and sobbed for a couple more minutes. I finally said, \"Janet \u2013 we need to talk NOW!!\"\n\nShe slowly raised her head and looked at me. Even with all of the crying her tear stained face was beautiful. I said, \"I made a vow to not ask why. And you don't need to tell me how sorry you are. I just want to talk about how we will go our separate ways,\"\n\nShe wailed, \"Noooooo!! You can't do that!!\" \n\nTHAT was beginning to really piss me off. I was getting tired of people telling me what I couldn't do. Particularly adulterous sluts. \n\nShe cried, \"I love you Paul \u2013 only you. I hated betraying you but I couldn't stop. He's so powerful. He just wouldn't let me.\"\n\nI said, \"I have no idea what that even means. You are a human being. All you had to do was say \"no\" and walk away. Instead you gave him sex on demand \u2013 oh and by the way - he won't be so powerful by this time tomorrow.\"\n\nShe looked appalled. She said, \"What have you done?\"\n\nI said, \"The Post is going with the story about your affair tomorrow. It is very heavily illustrated if you catch my drift. Your lover-boy is toast. He will be resigning and heading off into the sunset with his loving wife. That's if she doesn't kick him out for being a total manwhore. Never fear \u2013 the Post is going to keep your name out of it if they can.\"\n\nShe lost all color in her face. She said, \"This will ruin him.\"\n\nI said, \"I certainly hope so. And why should you give a shit anyhow. Do you love him THAT much?\"\n\nShe said with some heat, \"He's my boss. He put me in the position I'm in. I don't love him. I don't even like him. I only love YOU!\"\n\nI said, \"Okay \u2013 I'm a sucker \u2013 even though I promised myself... If you don't like him then please tell why you were fucking him? And if you tell me that it was \"just for the sex\" I am out of here without another word.\" \n\nShe composed herself and said, \"I was trying to help him cope with the pressures of his Office. He is a very important and powerful man. His leadership and guidance effects everybody in the Country. And I thought that I was making a difference by comforting him. \n\n\"He came into my office a couple of months after I started working for him, and told me that he was going to kill himself. He said that the burden of the decisions he had to make was too much for him. And that he couldn't take it any longer. We were the only people left in the office and I was terrified.\n\n\"So I just sat with him on the couch and held him while he cried on my chest.\"\n\nI was thinking to myself, \"Her chest huh? What a transparently obvious place to land.\" \n\nShe said, \"He told me that his wife is a bitch and frigid and their marriage is a sham \u2013 not like ours where we love and support each other. And that he needed me to be his comfort and guiding light.\"\n\nI thought, \"Oh my God!! Does that line ever work on anybody but oversexed women, or the terminally stupid?\"\n\nShe added \"Then at some point he started nursing on my nipple. It was pretty prominent even with a blouse and bra over it.\" \n\nI guessed that it would have been - since her nipples are very sensitive and that was what Fuckface was aiming for in the first place.\n\nShe continued. \"That made me moan. And the louder I moaned the harder he sucked. Then he started playing with me and that fired me up so much that I fucked him right there on my office couch. I just did it because I felt sorry for him.\" \n\nSo there it was!! She was seduced by power. It was such an ancient ploy that Caligula must have used it. The corrupt motherfucker had warped Janet's nurturing instincts into permission to fuck him. \n\nJanet added, \"After that he would come to me for occasional relief. Then he started taking me to social events in place of his wife. We even dined with the President a couple of times. It was mind-blowing to be that close to ultimate power. Of course we fucked afterwards. I just got caught up in all of it.\"\n\nWhat she had just told me was a perfect instance of pure, unadulterated, self-absorbed female egotism, with a helping of narcissistic delusion thrown in on the side. She got off on the fact that she had well-known and important men lusting after her \u2013 even the horny old goat who lived at 1600 Pennsylvania. \n\nShe was still droning on, \"My fucking him caused me unbearable guilt at first. I wanted to tell you. But I didn't want you to be hurt. I knew that you wouldn't understand the importance of what I was doing. \n\n\"We socialized in such a different stratum. I knew that you would never hear about it. And when I was with him we had so many people shielding us that I never thought you would find out. \n\n\"So I put my guilty feelings in a box and kept them there. I behaved exactly the same way I always have done with you. You never suffered in the slightest. And I made sure that you were well taken care of.\" \n\nI thought to myself, \"Awesome job of compartmentalization you schizoid whore.\" \n\nShe gushed, \"It wasn't close to the way I love you. It was like I was a different woman when I was with him. It was naughty and the power was intoxicating. The sex was just part of my work. \n\n\"However, it WAS definitely ego expanding to know that such a powerful man needed me that much - I was making a difference for the entire Country.\"\n\nYep \u2013 monumental egotism, delusions of grandeur and illicit sex \u2013 it was the DC trifecta!! \n\nIt was also all that I needed to let me walk out the door without regret. \n\nI seriously didn't know whether to laugh or cry. That was by far the dumbest rationalization I had ever heard. \n\nDid she have so little regard for me and our marriage that she would try to justify her behavior by wrapping herself in the flag? Or did she honestly believe that I was that big a fool? \n\nShe finished with, \"But THEN he started treating me like I was nothing but a piece of meat. The last couple of months he used me like a slut. And I resented it. I hated him.\" \n\nI thought to myself, \"Who is this person?\" It surely wasn't the level headed woman I once loved.\" \n\nI said with bitterness, \"Congratulations!! You're an experienced Congressional whore now. And on top of that you're stunningly beautiful. So all you need to do is put the word out and I'm sure you'll find some other powerful sugar-daddy to put you on his staff.\"\n\nShe gasped and said, \"How could you say that? You're my only love. And I know you love me. We need to put everything else aside and concentrate on fixing our marriage. \n\n\"I might have gotten a little over the line. But it was a special situation. I promise you. I will never make that mistake again. I am very sorry and I will dedicate the rest of my life to making it up to you.\"\n\nClich\u00e9-clich\u00e9-clich\u00e9 - I said, \"The only thing we need to concentrate on is dividing up the community property. You're insane if you think that there is any chance of us getting back from this. \n\n\"I'll file \"irreconcilable differences\" not \"adultery\" but don't challenge me on this or the world is going to see a lot of you on the internet. \n\n\"My lawyer will be in touch. Please communicate through him from now on. I never want to speak to you again!!\" She gasped in agony. That was my hurt talking.\n\nAt that I stood and walked decisively to the door. I picked up the seaman's bag that I had previously put next to it. I had packed enough stuff to be able to live on the boat for a while. \n\nI turned to look back one last time. She wasn't looking at me. She was loudly wailing - with her head resting on her arms. I regretted nothing about my decision. But I desperately mourned the loss of my happy life and the woman I loved. I was truly on my own now \u2013 like a cat in the rain.\n\nSafe Harbor\n\nI ambled down our brick walkway and tossed my big duffel in the back of the Range Rover. I don't know how other men might react to what had just occurred \u2013 but I was exhausted and totally bereft of emotion. \n\nI would have been in a wild rage - if I had not had the satisfaction of knowing that I had totally ruined the life of the man who had put me where I was. \n\nI should have hated Janet. But she had been the love of most of my life. We had shared far too many good times to make me despise her. I just felt a sad sense of loss, emptiness and betrayal. \n\nIt made me feel like I should never expect any better treatment from life. \n\nI planned on crashing on the boat. I had everything I needed for temporary residency. And short-term it would let me do all of the pressing things that I had to do in order to sort out the end of my marriage. \n\nI had not actually called my lawyer, or thought about a new place to live. I was too busy greasing the skids under Senator Dickbreath. But I would do all of that tomorrow.\n\nI DID call Gold while I was driving down Maine toward Fort McNair. He was intrigued by the fact that Janet had been at intimate dinners in the White House. He said he was going to spend time seeing where that tip might lead. He implied that he thought Janet's whoring might collapse the whole house of cards. \n\nI said, \"Do you really think she fucked the President?\" \n\nHe said, \"I'm sure he tagged her if she was available and in the right place. That horndog would fuck anything that walked. And Simpson is definitely enough of an ass-kisser to pimp her out - plus she is spectacularly hot. \n\n\"You say she was at the White House twice? I'll bet that they were changing the sheets in the Lincoln Bedroom after the second visit. Maybe I'll dig in the visitor logs to see what I can see.\" \n\nI didn't know what to think about being in the same hole as the most powerful man in the free world. \n\nI was stowing my stuff belowdecks when the storm that had been threatening all day finally let loose. It started to rain hard and the wind and waves were rocking the boat at its moorings. It wasn't violent. In fact it was kind of soothing listening to the rain beating on the deck above me. I opened up a bottle of Bowmore 27 \u2013 put on Beethoven's immortal ninth and sat down to drink-and-think.\n\nIt was a foregone conclusion that I had just had my last conversation with Janet. So I was wrestling with the fact that I was going to be alone - probably for the rest of my life. \n\nI knew I would never trust another woman \u2013 at least enough to let her into my life. The whole thing just hurt too much. And I had no desire to repeat the experience. \n\nI could understand the context. Janet fell into the power trap and loved being there. Politicians come and go. But staffers like Janet live in a Darwinian culture. And it would be natural for her to gravitate to the person with the most influence. Janet is gorgeous and Simpson wanted her. So he used his position of influence to get her \u2013 case closed. \n\nJanet got the short-term notoriety and feelings of self-importance that you get when you move in the circles of true power. That would be a smart choice - if she weren't married. But with the Senator out of the picture and me gone she had absolutely nothing now.\n\nJanet had already called a couple of times. I had no desire to listen to any more rationalizations. I would delete her voicemails later. \n\nThe phone rang again as I was finishing a wonderful two fingers of peaty heaven. This time it was Kari. \n\nI looked at my watch. It was 12:30 AM. I said, \"What's up Kiddo?\" \n\nShe said, \"God Paul!! Are you all right? Janet just called me in utter hysterics. She said that you left her and she doesn't know why. Is she smoking something funny - or has she still not seen the videos?\"\n\nI chuckled and said, \"She thinks that having a flaming five month affair with a U.S. Senator is no big deal. She said that she was just fucking him for the good of the Country. \n\nShe can't understand why I'm making such a big fuss over it. \"She sounded like Nathan Hale - I only regret that I have but one cunt to give to my Country\" \n\nKari exploded in laughter on the other end of the phone. \n\nI added, \"So I'm living on the boat until I find a place.\" There was a huge crack of thunder overhead. I added, \"It's tied to the pier so I'm not going to need lifeboats.\"\n\nShe laughed and said, \"How are you doing? Do you want me to come over?\"\n\nI chuckled and said, \"The sleeping arrangements would be the same as Saturday night so I don't think so. I AM starting to feel a little better about my life and I don't want to complicate things just yet. \n\n\"One thing still disturbs me though. After listening to Janet's bullshit I'm beginning to wonder if I spent ten years married to a make-believe woman. The one I talked to has no moral compass whatsoever.\"\n\nKari said, \"That happens - women grow up projecting an image that is based on whatever morality society lays on us. It's something that we internalize and reflect back \u2013 it's our way of ensuring approval. \n\n\"That personality is unreal \u2013 by definition - Since it is based on other people's views. However, for most women it dictates how we live our lives. \n\n\"That is \u2013 until temptation comes our way. \n\n\"In that case a sexual woman will find that it's hard to say \"no\" to her baser instincts. You have to really understand the costs in order to be able to walk away from a thing as enticing as illicit sex. And it sounds like Janet hasn't come to grips with her inner slut yet.\n\n\"Janet loves to fuck \u2013 right?\" \n\nI said, \"Most definitely!!\" \n\n\"Kari said, \"So there you have it!! I'm not saying that she's a schizo. I'm just saying that the woman you talked to is the evolved version of the Janet who you used to know. \n\n\"She still sees herself as your loving wife. It's just that she made this new discovery. That extramarital sex can be fun and empowering. \n\n\"The Janet you fell in love with is probably still there - exactly as she used to be. But the new one \u2013 the Janet who has learned that she can use her body to control influential men - will keep rationalizing her slutty behavior. It's like she has an evil sister now.\n\n\"And that sister will continue to do out-of-control and self-destructive things until the original Janet learns how to channel her natural, sexual urges into a more constructive approach to life.\"\n\nI said, \"Whew!! That's very heavy stuff!! How did you get so wise???!!\"\n\nShe laughed bitterly and said, \"From painful experience. And I did it twice. I had to beat my evil sister to death in order to get a little self-respect back. \n\nI said, \"Thank you for telling me that. At least I can sleep better knowing that the duplicitous whore I talked to tonight wasn't always that way. Meanwhile \u2013 it's been a long day. So I'll talk to you tomorrow.\"\n\nI fell asleep with the boat still rocking in the wind. As I drifted off I made up my mind not to lie to myself any longer. Kari Whitman was one hell of a woman. \n\nAnd even if I had sworn off the critters I couldn't stop wondering about what life might be like with a person as tough, smart and incisive as Kari was. \n\nThe next day the Post had the story on the front page of its internet edition \u2013 under the bold headline, \"Senator Simp-Sin!!\" \n\nCNN picked it up as did all of the national outlets. Gold had kept his word and not named Janet specifically. But that didn't stop the media juggernaut from rooting around like a pig after a truffle. \n\nEventually Janet's name surfaced.\n\nBy the print edition her face was plastered all over the national news. Which of course hung the horns on me in spectacular fashion. \n\nThe media jackals found out where Janet lived. So she left our condo chased by a ravening pack of reporters and paparazzi. I watched the commotion on the local news outlet. It was heart-breaking that somebody you once loved could look so thoroughly defeated. \n\nI knew that they would be coming after me next. So I cast off and headed for the mouth of the Potomac. It was an all day journey but I was laid up in a deepwater cove off of Point Lookout by late afternoon. \n\nMy mysterious disappearance and my intelligence background set off a firestorm of speculation that lasted for the usual fifteen minute attention span of the media.\n\nDickhead had been protesting all day that there was no truth to the rumors of infidelity - that those were lies that had been concocted by a jealous husband. \n\nSo I used up all of my data plan to upload the uncut footage of his misadventures to selected porn sites. Then I emailed the URLs to TMZ. The global interest THAT generated nearly broke the internet. \n\nGiven the rumors that were floating around town about the President's involvement with Simpson's \"mistress\" - I am sure that the White House would have ordered a rendition if they thought that they could get away with it. \n\nInstead, our noble leader settled for throwing Simpson under the bus and then backing over the body several times. The scathing indictment that the President released concerning Simpson's morality and ethics was a study in DC hypocrisy. \n\nThe amazing thing was - that all happened in a thirty-six hour time-frame. \n\nThen Gold dropped the big one. Thanks to what I had given him, the researchers at the Post had an easy time following the slimy trail to Simpson's buried treasure. So the evening print edition came out with a long and detailed story of corruption and Washington insider cronyism. It was under Gold's byline.\n\nI thought, \"Do I smell Pulitzer!!???\"\n\nThere is nothing like the hint of scandal to get all of the political wagons circled. His pals in the Senate forced Simpson to \"resign\" by early the next morning. Then former Senator Dickhead found himself in the process of being indicted by the Attorney General for extortion and bribery. \n\nHis wife had returned home to daddy \u2013 who owned most of the valuable parts of that godforsaken State. The enforcement of the pre-nup was a given. But Daddy also hinted in his Today Show interview that he was looking into ways that his pet legislators could make drawing-and-quartering legal back home. \n\nI really love it when a plan comes together.\n\nI made the requisite phone calls as I was exposing my soon-to-be-former wife's hijinks to every wanker on the world-wide-web. \n\nI had always had a college buddy on personal retainer. Given what we do, legal advice is an essential component of the private Intel business. ",
        "I didn't need to explain the context. Thanks to the 24 hour media blitz you would have had to have been living under a rock to NOT be aware of my situation. \n\nHe asked me what happened. I said, \"She drank the brand of Kool-Aid that they serve up on the Hill.\" That was all it took \u2013 nuff said. \n\nHe said, \"Don't worry about anything Paul. I'm not going to ask you where you are. I imagine you are hiding from the press.\" I said, \"They'll never find me.\"\n\nJim continued with, \"I already have your power of attorney and I will make all of the necessary legal and financial arrangements. I'll have her served tomorrow evening. It'll be fair. I know that you would want it that way.\"\n\nI added with a lot of heartfelt sincerity, \"This really makes me sad you know. I probably still love her.\" He made sympathetic noises and hung up. \n\nJanet had not called for a while. I imagine she had her own fish to fry. I wondered if she and former Senator Fuckface were fending off the wolves together. THAT was a heartening thought.\n\nMy phone lit up around 7:00 AM the next day. I was still asleep. It was Kari. She said, \"I imagine you are hiding out somewhere. Do you want some company?\"\n\nI \"got it.\" After all of the offers and refusals I knew what she was telling me. I thought about it for several meaningful seconds. \n\nThis woman had been an important part of my work life for a very long time. In fact, I had probably interacted with her person-to-person more than I had with Janet over the past almost four years. She had been my only friend and companion through my recent troubles. She had a feminine wisdom that was infinite in both its scope and depth. And she was smoking hot gorgeous. \n\nAnd she was obviously in love with me. The question was whether I was ready to open up a relationship with a woman before all of the debris from cratering the old one had hit the ground. \n\nI had done the requisite face-to-face confrontation with Janet. And any prospect of a reconciliation had been blown up by my national exposure as her clueless husband. So in my mind the past was dead and the road ahead was wide open. \n\nBut the question was whether I wanted to jump into the fire with a woman as potentially heartbreaking as Kari. If I invited her aboard I knew that we would fuck. And I wasn't sure that I was ready for the aftermath of THAT. \n\nBut with all of the Hamlet-like vacillating that I was doing there was one thing that I absolutely knew for certain. I REALLY needed and wanted Kari by my side. \n\nSo after an uncomfortably long pause I said, \"You can come but it will probably be the end of both of our careers. I'm leaving this den of iniquity for good. Do you still want to accompany me?\" \n\nShe said without a second's hesitation, \"Where do I meet you?\"\n\nI picked her up at the Marina in Reedville, just across the Virginia line. She had parked her car in the area where they store the boats. I gave them $200 to make sure that it stayed there unmolested until I could get somebody down to pick it up. \n\nI had called my boss, who was the owner of the company, and told him that given the media firestorm I couldn't be effective. I told him that Kari was with me and that she had not made any decisions yet. \n\nKari was in her classic uniform, t-shirt, tight jeans and boat shoes. She had a moderate sized duffel bag that held the rest of her stuff. \n\nShe was glowing with happiness as we made our way out into the Chesapeake and headed south. I said, \"Want to hoist the sail?\" \n\nShe said, \"Sure \u2013 if I'm going to be your deck hand I need to learn everything.\" \n\nSo I showed her the motorized winch and then I did the hoisting while she steered. It was great sailing weather, as it frequently is in the fall on the Chesapeake. The minute the sail filled and cracked the boat laid over on a starboard tack and I went back to steering while she sat next to me. \n\nWe stared out at the water for a couple of minutes. Then she said, \"What does this mean Paul?\" \n\nI didn't have to ask what she was talking about. \n\nI said, \"I would have to be an idiot to be burned as badly as I have been. And then turn around and get involved with an even hotter specimen. Especially one who is a decade younger. But it just feels so right. \n\n\"And I think that you feel the same way. As long as we are honest with each other and always talk things through I think it will work for a while. \n\nAnd I am willing to take a chance \u2013 even though - when I think about it rationally it seems like the dumbest thing that I could do.\"\n\nShe looked at me with those huge feline eyes and said, \"Nothing good ever happens without reaching out and the effort it takes to maintain a healthy relationship is the most difficult part of all. \n\n\"The one thing that I promise you is that I will not give up on you.\"\n\nShe gave me her dimples and said, \"I have been through a lot more of this kind of thing than either you or Janet have. And I know the pitfalls. I know you have been hurt by a person you trusted. I would never do that to you. But there is no way I can prove that except through time. \n\n\"In the meantime I want this to be as stress free as I can make it. It is a very brave thing you are doing starting something up with me \u2013 and I feel the weight of the responsibility that poses. You will never regret this\"\n\nWe laid up the first night in Mobjack Bay - out of the ship traffic at the mouth of the James. I cooked a little dinner of rice and crabmeat in a light Old Bay seasoning. Kari drinks beer, not wine and we washed the whole thing down with cold Yuengling and watched the sun set.\n\nShe was snuggled in my arms on the port-side bench. Her head was on my shoulder her massive boobs were squashed between us and her beautiful long legs were laid out along the seat-cushions. \n\nShe is tiny. But she is perfectly shaped and proportioned. I had the canopy up to shelter us from the wind and the lights on the water were magical.\n\nShe seemed to be concentrating hard. It was like she was trying to merge her sentience with mine. Then a little voice from the region of my chest said, \"Does this feel as unreal to you as it does to me? Two weeks ago we were just kicking Gold out of your office and you were happily married.\"\n\nI thought about it. It was like the incredible power of the emotion that was expended in that period -combined with the cut and thrust of revenge - had created a rift in the time-space continuum. And every aspect of what I knew as reality had gone topsy-turvy. \n\nNow, it was as if Kari had always been here in my arms. And my ten year marriage to Janet was something that happened to another person. \n\nThis wasn't a phony time-travel story that I had cooked up in my head to justify sailing merrily off into the sunset. It felt like the universe was realigning itself so that what was originally meant to be could occur. \n\nI had loved Janet without reservation. I had never really even looked at another woman. And I would not be here if conditions had not dictated it. But it was like fate demanded this particular resolution. \n\nThere was no question in my mind that the fiery and steadfast little woman who I held in my arms wasn't the right person \u2013 it was a feeling that I couldn't ignore. \n\nKari had always been close to me \u2013 since the first day she had appeared at work looking like the smartest and most eager little girl in the entire class. But I had only appreciated her smoldering sexuality as a spectator \n\nAnd she had never given me the slightest hint that there was anything between us. Except the relationship between two close work friends. I had never had any romantic feelings for her \u2013 she was a sidekick and peer. \n\nBut this strange new bond had been forged in the white-heat of infidelity and my time with Janet was irrevocably over. I hated to move past my marriage so fast but the impact of her betrayal had been THAT catastrophic. Janet was dead to me while Kari had become indispensable.\n\nI had come to view Kari in a new light \u2013 one that made me see the woman who she really was. I was going to have to understand what it was in her past history that had made her so wise. I was afraid that I wasn't going to like the story. But I had to hear it. \n\nI was beginning to think that this wasn't a fling \u2013 something that was a handy cure-all for my marriage blues. If that wasn't the case, then I needed to know who I was dealing with. \n\nMeanwhile I was holding her exquisite little body in my arms and she was making little purring noises against my shoulder. I pushed her back and looked into her huge eyes. All I could see was feline hunger.\n\nI pulled her to me and we kissed for the first time. She moaned loudly, with pure passion, and opened her mouth wide. She clearly burns at a higher temperature than normal human beings. It might not have been more than a degree. But her elevated metabolism reflected itself in a heat that was real, not metaphorical. \n\nHer mouth was literally hot. So was someplace else. I put my hand on her little butt and pulled her toward me. I marveled at the fact that I was able to cover both of her rock hard buns with the span of one hand. The heat emanating from that area was supernatural. \n\nAs we swapped tongues, she jammed her huge tits against my chest and she made a sound that was more feral than human. It was a low moaning cry that a female cat in heat might make. \n\nHolding somebody who could generate that degree of wild abandon was almost intimidating. I had the passing thought that there was a fundamental savageness in her sexuality that was not quite human. \n\nShe accelerated her moaning. Her lips were moving frantically on mine. Meanwhile she was starting to thrash her legs in a disorganized fashion, like she was about to cum. She let out a piercing yowl - her eyes opened wide and then they rolled back in her head like she had been shot. \n\nHer arms suddenly constricted around me. She held on to me like I was the only thing that was preventing her from flying off into outer space. \n\nHer hips started a frantic back and forth movement and her feet began kicking the back of the bench. It was like she was processing feelings of intense pain. \n\nShe held me tightly quivering and shaking with powerful spasms. Finally she relaxed and slumped in my arms. I understood why every man who had ever fucked her did her bidding. She was an utterly uninhibited sexual animal. \n\nShe came back to me in gasping breaths. Her eyes opened. She looked at me. But she wasn't frightened. She was on the hunt now. She rose and frantically shucked her t-shirt, jeans and panties. \n\nThen she turned and wordlessly presented herself to me. I was staring at her with awe. Her body was perfection. She had a tiny little waist and huge boobs \u2013 bigger in proportion to her little body than even Janet's. \n\nEach breast had a big round puffy almost pale nipple on it - like a big pink acorn. She had a neatly shaven pussy between two very shapely long legs \u2013 again proportional to her frame. \n\nBut the real surprise was her hips. They were fuller than I expected and flawless \u2013 flowing out from her extraordinarily tiny waist in an outrageously wide rounded curve - with rock hard flanks. \n\nShe was breathing - almost gasping - like somebody who was choking. But she was moving with purpose - every muscle in her stomach was outlined. \n\nShe reached down and ripped my shirt open and attacked my chest like she wanted to suck every inch of it - hands roaming wildly. \n\nThen she started hastily unbuttoning things. \n\nBefore I knew it I was as naked as she was. Old Lucifer was standing up so straight I thought he was going to whack me in the nose. She was making odd growling noises as she forcefully shoved me back into the cushions\u2013 and with one motion she swung up onto my lap and straddled me. She aligned herself and without hesitation plunged my cock into her all the way to the hilt. \n\nShe was red hot and so wet that I could feel her dripping pussy against my balls. She let out an unearthly snarl\u2013 almost like a catamount on the prowl. I groaned so loud that people in the surrounding area must have thought they had heard a foghorn. \n\nShe was astride me just resting there, not moving. She put her arms around my neck and leaned back just looking in my eyes. Her bright emerald eyes were aflame with lust. Her gaze was building a bridge between us. It felt like she was trying to merge souls through her unwavering stare. \n\nThen her internal muscles started working. I reached for one of her massive pendulous tits and she slapped my hand away. She wanted me to hold still while she worked on me. \n\nHer insides were rippling in waves, clenching and milking. And between her heat, the intoxicating smell and the ministrations of her internal muscles I felt myself being drawn up into her consciousness. \n\nIt was almost a religious experience - like she was literally absorbing me into a single unified whole. And I was transfixed by her captivating gaze. She was opening herself to me by this intimate connection - showing me who she was and what she would be. And the invitation was overwhelmingly comforting and appealing. \n\nIn the meantime \u2013 without anything but her internal muscles she was about to bring both of us to an orgasm for the ages. \n\nI could feel it coming \u2013 I was fighting it but the sensation of her wildly pulsating insides was too powerful. \n\nThen suddenly her passage contracted like a fist closing tightly around my cock, she grunted loudly, gave an animal cry of release and just disappeared from sight. \n\nI knew she was still there because her passage was going crazy around me. But she had done a complete back bend and was now lying prone across the tops of my thighs, only connected to me by the grip of her powerful legs and her red hot pussy. \n\nHer inner passage was so tightly clenched that it felt like she could have held us together just by strength of that connection alone. And then I came in ways that cannot be described. She was spread out flat on my legs head thrown back arms over her head almost touching the deck. She was shrieking rhythmically as she continued to cum \u2013 her insides were in a frenzy. \n\nFinally her passage relaxed its grip and she slid slowly backwards onto the deck, legs spread wide. I was laying gripping the bench cushions with my head thrown back like I had been dropped there from a great height. \n\nAfter a couple of minutes of recovery her face which was completely hidden by those massive boobs bobbed up like the sun coming up over the hills. \n\nShe said shakily, \"I didn't expect THAT!!\" \n\nWith that statement she rose, unashamedly naked, and began to collect her clothes. I just sat there still stunned.\n\nAs she was putting them on she said, voice tentative, \"So now you know my big secret.\"\n\nI said, \"I don't know what you're talking about? My brain is still too scrambled to think properly.\"\n\nShe said sarcastically, \"I thought you might have noticed that I have this wild sexual streak. It's more animal than human. \n\n\"I have suffered from it since puberty. I was raised Catholic so I spent the years after I started to grow these things,\" and she gestured toward her boobs, \"on my knees praying to be relived of the curse of my own sexuality.\"\n\n\"But it didn't do me any good. Thanks to the Church I managed to barely get past my eighteenth birthday before I surrendered the booty. But the instant I did it I had to get fucked at least once a day or I got very cranky. \n\n\"And it wasn't just college boys. I was fucking every older guy in the area including most of my daddy's friends. \n\n\"In fact I was a bit of a legend in Westchester, which is where I am from. \n\n\"I broke up two marriages before my senior year at Georgetown. I was ashamed the first time. They had kids. The second time I didn't give a shit because the guy had knocked me up. \n\n\"I'm Catholic so I don't believe in abortion. And I was afraid to be a mommy before legal drinking age. \n\n\"The guy took off after his wife caught us. So I was facing motherhood on my own. And I was one very frightened little slut. \n\n\"My future changed when I miscarried in my first trimester. I was back to the single girl life. But I had done three solid months of soul searching. And I had thought very hard about where my life was going. \n\n\"I concluded that, unless I learned to control my sexual urges I was on a very slippery slope. Unlike most women my age I had already been down every dark road there is. And I knew what was waiting at the end of all of them. \n\n\"So I started working at ways to control my hyperactive libido. That chiefly amounted to practicing the Marine's motto. I only fucked \"a few good men\" \u2013 men who were decent guys. And I did it in situations that would let me keep my self-respect. I also grew up a bit.\n\n\"And then I met YOU. You changed everything for me.\"\n\nThat was an astonishing statement!! \n\nShe said, \"I have loved you from the day I first set eyes on you. At times my love for you has been nearly all-consuming. But you are an honest and moral man and you were married to a woman who was so far above me in every respect that I couldn't even hope. \n\n\"As a result, our relationship has never involved any aspect of my sexuality. I knew that you loved Janet. And that Janet loved you as much as I loved you. \n\n\"I just wanted to live my life in a way that would make you proud of me. And if I was lucky I hoped to be able to spend my entire life close to you. It never crossed my mind that Janet would fall into the same trap that I did. \n\n\"That all changed the moment that Janet strayed. I knew that you would never accept her betrayal. And it was an opportunity for me to show you that I could be the woman who you deserve. \n\n\"Now that you know how crazy \u2013 totally out of control - I get. All I can say is that I would devote every iota of that insane passion to you \u2013 and only you - the man I love. That is, if you will give me a chance.\" \n\nI looked at her gorgeous little face. She was almost pleading with me. I wondered how I could ever be so lucky. \n\nI knew a couple of things. First of all, my marriage was dead. So in my mind there would be no moral restrictions with Kari. \n\nSecondly, I knew that it was a long journey from the place where we were at - to marriage vows. And so there was plenty of time to find out whether we would work out or not. \n\nI said with certainty, \"Your sexuality and your sexual history mean nothing to me. All I care about is the person standing here. And for almost four years you have been my totally reliable, devoted, steadfast and nurturing friend and companion. \n\n\"The fact that you are the world's wildest fuck is just icing on the cake \u2013 that is - as long as you are only wildly fucking me.\"\n\nShe slugged me on the shoulder. I could tell by the two dimples and the sunny smile that she was committed to being the best lover and companion a man could ever ask for. \n\nSo I said, \"Okay then - let's get down to the Bahamas and wait out the divorce. I need a nice sunny place to come in out of the rain.\" \n\nShe looked puzzled. She didn't get the allusion. But since that was the old life she really didn't need to. She was my sun now.\n\nEpilog\n\nJanet fought the divorce tooth and nail. Her story morphed into a narrative about how cruel I was to cast her aside \u2013 her words \u2013 for something she was sexually harassed into doing \u2013 her words again. \n\nThat was played out in the press until Gold broke another blockbuster. \n\nIt seems that Janet had not only been fucking Simpson. She had fucked the President in the White House. And HE was the one who she was with that last night at the Watergate. \n\nThat news turned the whole storyline around. Suddenly she was in the same league as Donna Rice, Chandra Levy, Riele Hunter and Monica Lewinsky. And the leader of the free world was fighting for his political life and legacy.\n",
        "\"Janet I hardly knew ya!!\" \n\nNeedless to say, after THAT revelation the divorce sailed through without another word. \n\nI hear Janet is writing a book about her life as a Presidential \"whore\" and that she also does interview shows.Janet now had the celebrity that she had sold her soul for. \n\nThere was part of me that wanted to see her end-up living in a cardboard box under an overpass. But I came to accept that in real life bad people frequently DON'T suffer from their acts. That's he way it is no matter what the story books tell you. \n\nOn the other hand - Daddy stripped Simpson of every penny he had and then threw him away without a friend in the world. The cocksucker got what he deserved. So the scales balanced to some extent.\n\nIn the meantime my exquisite little lover and best friend was the toast of Freeport. \n\nAfter a week of sailing we ended up at the Port Lucaya Marina. We lived on the boat, hung out at the Marketplace and swam at Lucaya Beach. \n\nEvery day it seemed like half the male population was waiting for Kari to make her appearance. \n\nMy little exhibitionist flaunted her incredible assets in a miniscule yellow bikini that might as well have been two Band-Aids and a cork. \n\nShe would get cheers and whistles as she marched down the beach - her hips swaying, her tight little buns twitching and her monster jugs jiggling. It was like watching a perfect symphony of allure. \n\nShe had let her white blond hair grow out and it contrasted stunningly with her beautiful bronzed body - which at this point looked like a small golden idol. \n\nAnd she wasn't kidding about her sexuality. The five months we spent on Grand Bahama waiting for the divorce were more rigorous than my basic training. \n\nAnd she got me up earlier every morning than they did in the barracks \u2013 usually with her lips wrapped around my cock. \n\nThe tentativeness of our initial relationship, deepened into a love that was absolute and profound. \n\nI didn't even mind when we went to the clubs and all of the Bahamian studs lined up to dance with her. She danced like a wild thing. But all the time she let everybody know that perfect body was devoted to me. And I could feel the waves of envy washing around the place. \n\nOne evening in mid-March we were sitting at an Oceanside table at the Coral Reef Bar. It was another perfect Bahamian evening. The setting sun left the tropical sky painted in reds, oranges and purples. \n\nShe was looking at me with those eerie green cat eyes of hers. \n\nHer shining blond hair, her perfect golden skin and the white dress were a faultless complement to her stunning good-looks. \n\nI don't think I have ever seen anybody so beautiful. She was reaching across the table to hold my hand in both of her delicate little paws. She did that a lot.\n\nI said, \"I have something to ask you.\" \n\nShe said, \"Sure.\" But she didn't let go of my hand. \n\nI said, \"You're going to have to let loose of my hand so I can do it.\" \n\nShe looked disgusted. I stood, walked around the table and kneeled down next to her. \n\nShe saw it coming and she started to cry. I held out the ring and said, \"Kari Whitman will you do me the honor of being my wife.\" \n\nShe threw her little body out of her chair and squashed those massive tits of hers against my chest. I know that her skirt flew all the way up to her panties - because the guy at the table next to us dropped his fork. \n\nShe was crying against my shoulder as she said, \"Yes!! Yes!! A thousand times yes!!\" And she descended into happy tears. \n\nThe people around us applauded. We were married by the Priest in Mary Star of the Sea. She wore white and I wore my best Guayabera. \n\nWe had been fucking like rabbits for almost a half year. But that night was the most extensive bout of tender lovemaking I ever had in my life. She was insatiable and inexhaustible and it was only her vast sexual appetite that kept me going.\n\nWe sailed back the following week. Both of us needed to find gainful employment. But we were both tired of the commercial intelligence game. \n\nSo we opened a boutique business catering to some of our former clients. \n\nWe made a lot of money doing that. But the important thing was that we always worked together. \n\nJanet and I had separate careers. And eventually that separation led down the road to perdition. Kari and I shared everything and we always only focused on each other. \n\nIf we weren't perfectly suited that degree of closeness might inevitably lead to friction. But the more we worked together \u2013 the closer we became. \n\nOne Saturday morning Kari walked in from a mysterious appointment. She came into the den where I was working. She said worried, \"Paul we need to talk.\" \n\nI thought, \"Oh my God - this is serious.\" \n\nI followed her out onto the deck. We were living in McLean now and we had a big beautiful back yard. We sat in our usual chairs looking out over the flower beds. \n\nShe said, \"I was just at the doctor and he confirmed something that I need to tell you.\" \n\nI thought. \"Oh shit!! It's the big \"C\".\" \n\nShe looked even more worried and said, \"I have not been using any protection for the past few months because I want your baby. \n\n\"I was going to discuss this with you before things got too far along. But it seems that they have already happened. I am two months pregnant, we are going to be parents. \n\n\"I know we promised to always talk about things this important but I didn't think it would happen so fast.\" \n\nShe looked at me tentatively \u2013 like I might throw her out for daring to bear my children. I remembered how her last pregnancy had played out and I knew I had to be gentle. \n\nI took her hand and said, \"I didn't think you could EVER make me any happier but you have just done it.\" \n\nHer face lit up like every care in the world had just disappeared. She gave me her full set of dimples and said, \"I love you. I will always love you. And now there is one more person to love you.\" \n\nI said, \"Kari \u2013 it almost seems like fate that I would go from the worst moment of my life to the best with you. But that is what happened and it is all because you are who you are. I will love you more than you love me because you have brought a meaning to my life that I never thought was possible. \n\n\"Now let's start buying the things for the nursery. I have a little girl to spoil.\" \n\nShe said, \"What if it's a boy?\" \n\nI said a woman like you couldn't produce anything but an exceptional female first child.\" \n\nAnd I was right. Little Elise Schmidt was the spitting image of her mother. \n\nKari threw herself into motherhood with the same passion she reserved for our sex life. She still nearly killed me in bed. But she lavished the same devotion on all of our four children. It was a wonderful life.\n\nEpilog to the Epilog \n\nI was sitting up in the hospital bed when they all arrived. Kari was in her mid-seventies now. But as far as I was concerned she was as beautiful as ever. \n\nI knew that I had very little time left but it was a life well-lived thanks to my special angel. I took her hand in mine. She smiled her dimpled smile. \n\nI whispered, \"I love you.\" She squeezed my hand, too choked up to talk. As she did the room diminished to a single point of blinding light. \n\nAll I could hear as I slipped away were the sobs of my family. I wasn't frightened in the least. I knew I would see her on the other side."
    ],
    "authorname": "dtiverson",
    "tags": [
        "betrayal",
        "corruption",
        "revenge",
        "redemption",
        "big tits"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/cat-in-the-rain"
}