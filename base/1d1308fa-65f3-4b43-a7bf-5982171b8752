{
    "title": "The Self Sufficient Hermit",
    "pages": [
        "Dear reader,\n\nFor another first in my writing this story has no sex or sexual content in it. It didn't start out that way, but as the story grew to it's final outcome I realized that fitting sex or sexual situations into this particular story would detract rather than add to the story. I also realize that it's been quite a while since I last posted a story online. For that I apologize to you all. Life has been...busy and strange of late, and it's taken quite a bit more time for me to find that special zone in which I write best. Thank you for your patience.\n\nI'd also like to thank Kanga40 for her expert and skilled editing on this one too. Any grammar or spelling errors found will be ones I missed in fixing.\n\n\n\nThe Self Sufficient Hermit\n\nIt had been months since I had last been to town. Town, being what it was, wasn't much to speak of - maybe three hundred people or so. Two gas stations, one grocery-hardware type store that carried about anything the people in the area would need, and a flight service that had eight Beaver float planes in their lineup.\n\nI had to come to civilization as it were, to get some supplies I couldn't do without. Winter was almost fully here and the first snows up high on the mountains had reminded me of some particular needs I had for the next months. \n\nThis morning as I was tying up to the finger float on the dock, I'd taken a not intended cold bath. Young Amber had come to grab my lines, helping me tie up. She is about nineteen, maybe twenty and quite a good looking young lady. She always seemed to be on the dock when I came to town and her mom was never too far away either. \n\nWhile I knew Amber was friendly, I also knew that there was no way in hell I'd touch her or do anything else. Not only was she younger than me by a bit too much in my opinion, but I was friends with her father and respected the whole family too much to want to play with the fire Amber represented.\n\nI also knew that Amber had a sort of crush on me. It showed all over to anyone who'd watch her interact with me. Jacob and Emma, who owned the store, had mentioned it to me several times, as had her parents. I wasn't sure what they thought about it, and to be honest, I felt that Amber was just too young for me to ever think about dating.\n\nSo anyway, as she bent over tying up the bow line some idiot in a huge power cruiser came blasting into the dock area running damn near full speed. As they came up to the next finger over they leaned on the reverse and drove the large boat to a quick stop.\n\nI saw a blonde woman on the fly bridge driving the boat. She had a small group of people sitting around her as she stood behind the wheel. They were all laughing and talking to each other, mostly to the driver of the boat. \n\nOf course all these actions took place in a few seconds and the size of boat coupled with the speed they came in at created a massive wake wave that nearly capsized a few smaller boats.\n\nAmber had the misfortune to be bent over tying off the line, her back to the other boat, as the wave hit the finger float, causing her to go ass over teakettle into the water. She came up farther out due to the way she fell in and I could see she was having a difficult time catching her breath and staying on top of the water.\n\nWithout even hesitating, I dove in after her. The shock of the cold nearly caused me to swallow in the sea water, but I had mentally prepared myself for it and was able to force my breathing to hold steady while I worked my way out to Amber. That water was cold now, let me tell you! As I reached Amber I glanced up to see the blonde in the boat. She was laughing and pointing at us as a couple of large men in suits jumped onto the dock to tie up. Anger cannot describe my feelings at that moment.\n\nGrabbing Amber with my arm under both of hers and around her chest, I started to drag her back to the finger float. Another guy came running up and took her under her armpits and pulled her up onto the float. I managed to use the cleat on the dock and the line that Amber had nearly finished tying up to pull my very cold, nearly frozen body onto the finger beside her. It took all I had to pull myself up onto the finger float decking as the cold water had sucked all the energy I had out of me. I could see Amber shivering and that made me aware of the basics of surviving a dunking this time of year.\n\nYou see, the water right now was around thirty-eight degrees or possibly less. Once a human got fully in it, their body heat was sucked right out of them. In this water at this time of year, not being in a survival suit, a person could die of hypothermia in a matter of minutes, even if they got out of the water into the forty degree air.\n\nI knew that we both had to get warm and fast. The cool air wasn't helping to warm us at all. The only or actually the best way to achieve warmth at the moment was for us to hit the shower on my 42 foot Bayliner cabin cruiser. It was right there at hand and I knew the water tank was topped off\n\n\"Ben, g-g-go g-get Lacy, tell her that Amber f-fell into the water. She's at my b-boat and we'll be in t-the shower trying to warm up. Let her know that Amber n-needs a change of clothes.\"\n\n\"You bet J.W.\"\n\nI watched as Ben ran down the floating dock. He was an older man, probably around sixty-five, but right now he was moving like a twenty-year old. I was impressed.\n\nI rolled over and stood up, having a hard time stopping shivering. I bent over and picked Amber up where she was curled up in a fetal position, shaking hard. I only had a little time and I'd be helpless to move her.\n\nI carried her onto my boat and turned on the generator as we passed through the cabin. Fortunately it only took punching a button to start it up. Getting down the stairs into the lower berth, I started the shower running and then turned to stripping off Amber's wet clothes. I left her in her bra and panties and shoved her into the shower, under the very warm water.\n\nAs she stood leaning against the shower wall I stripped down to my boxers and then joined her. I was rubbing her all over trying to get her blood circulating and kept her under the now hot water. At that moment I was thanking the Gods that I'd installed that on demand water heater in the boat.\n\nIt wasn't hot enough to burn, but it was damn hot. My rubbing Amber's body was causing my body to warm up slightly too, so I kept rubbing her back, arms, and legs briskly. It wasn't easy with two of us in the small shower stall on the boat, but I managed.\n\nI figured Amber had been in the water for a total of about five to eight minutes while I got her out, I'd been in a very little bit less... and I knew that the water was colder than I'd thought. I was chilled to the bone still. \n\nAfter ten minutes in the shower Amber started coming around. I could feel the warmth of the water working on me too. I took a chance and stepped out of the shower to get some water heating up on the stove. We needed to drink something warm right now to help warm up our insides too.\n\nDripping wet, in my boxers I stood in front of the stove cussing because I couldn't get my fingers to stop shaking enough to light the damn thing up. Lacy came in behind me as I almost whined in frustration.\n\n\"Whoa...J.W. You're damn near naked. Where's Amber?\"\n\n\"Sh-sh-shower... she's in the shower. H-h-h-ot water running...g-g-got to get some water heated up for hot ch-ch-choclolate.\"\n\n\"You go get in the shower with her... I'll get the water heating. Tom will be here in a minute too. How the hell did this happen? Never mind... get in the shower... we'll talk later.\"\n\nI didn't even think about it. I mean, her dad and mom being right here as I stood in the shower, nearly naked, with a nearly naked Amber, their only daughter. I was just too damn cold to care at that point.\n\nIn the shower I saw that Amber had her back to me and she was still shaking. I saw her glancing over her shoulder at my boxer clad body and suddenly I felt more naked than I was.\n\nI started to rub her again hoping that she'd realize just how much danger we were still in. It was then that I noticed her bra and panties were gone! She'd taken them off while I'd been trying to get the hot water going for the cocoa. She spun around and hugged me tight, pressing her cool and very naked body into mine.\n\n\"Your mom is right out the door...and your dad will be here directly. Damn.  Move... rub... we need to warm up.\"\n\n\"I am w-w-warm... now. B-b-b-eing here with you like this is a d-d-d-dream come true for me. You s-s-saved my life J.W.\"\n\n\"I just got you out of a b-b-bad predicament... that's all Amber.\"\n\n\"You saved me. You just d-d-d-dove right in without thinking and pulled me out. You s-s-s-saved my life.\"\n\n\"Yeah... okay... and I d-d-d-damn near froze to death too. Move your arms and legs... you need to get your b-b-b-blood circulating. Your mom's making up some hot chocolate.\"\n\nA few minutes later I heard Tom, her father come aboard. He and Lacy were talking. I figured it was time for Amber and me to get out of the shower and into some dry clothes. That's when it hit me... their daughter was naked! What were her parents going to say or do? I already had an idea of sorts about Lacy... but Tom?\n\nAs we stepped out, I put a towel around Amber first, wrapping her torso totally covering her naughty bits and then I slipped out behind her. Her mom had some clothes she was holding out for her while I went over to the compartment by the bed. I dried off my body as quickly as I could pulling on some clean jeans and a sweater I was soon respectable. As I toweled off my head Lacy offered me a cup of steaming hot chocolate.\n\n\"Here ya go J.W. There's a bit of Irish in it too... figure you both need it.\"\n\n\"Thanks Lacy. How's Amber doing?\"\n\n\"I imagine Amber is doing just fine. She just had her first shower with a man. A man she seems to think a lot about I might add. I'll also add a man that she's seen most of too. After seeing her dropping her towel, I imagine you've seen a whole lot of her.\" Lacy dryly allowed.\n\nI know I blushed. I could feel my face and body warm up.\n\n\"It was the quickest way I knew to warm us up. I didn't take off her bra or panties she did. I didn't mean anything...\"\n\n\"Hey J.W.... we know. We'd of done the same thing ourselves. One does what one needs to do in order to survive. That water's damn cold. What were you in it for... five - ten minutes?\" Tom was standing right there smiling.\n\n\"Well, to tell the truth, it felt like hours. I suppose it was about eight minutes for Amber... maybe six for me.\"\n\n\"Well, as low fat as your body is I'm not surprised at how cold you looked. You both came close to hypothermia.\" Lacy was looking towards Amber as she said that... a very speculative once over look at her now dressed daughter. Amber blushed and looked away.\n\n\"Yeah... glad it was close into the dock and boat when it happened. I just knew that J.W. would save me though...he's that kind of man.\" Replied Amber. Her voice carried a bit of worship in it when she mentioned 'that kind of man' and it worried me.\n\n\"What happened? Ben said something about that big cruiser coming in real fast and the wake tipped Amber into the water. He said you dove in without a thought too. I want to thank you for that J.W. You saved my baby's life today.\" Lacy was talking fast now. We were on the verge of a proverbial awkward moment.\n\n'Yeah... I jumped in after Amber because I saw she was having difficulty breathing. That cold water tends to cause people's lungs and chest to react in a very bad way. Involuntary muscle spasms can't be controlled very well. She's lucky she didn't swallow a bunch of water.\"\n\n\"Whatever else you did, you saved Amber's life. I can never repay or thank you enough.\" Lacy looked serious as she spoke.\n\n\"Well, we both have that young lady to thank for the cold bath. I don't know who she is, but she drove that boat in way to damn fast. Her wake was rolling about four feet high.\" My anger showed through... and I let it.\n\n\"I'll bet it's that actress. She's up here with her crew looking over places they're going to film her next movie. They've been here nearly two weeks now. She's a holy terror I hear.\" Tom sounded disgusted.\n\nWe talked for a bit and then Tom, Lacy and Amber left. Amber hugged me tight and gave me a very hot kiss on my lips before stepping off the boat. She tried to maneuver her tongue between my lips but I managed to break away before she embarrassed us both in front of her parents. I stepped back from her, looking up at her parents as they stared back. \n\nAmber just spun around and stepped off the boat; as if kissing me was something she did daily.\n\nI shrugged my shoulders, arms out, hands up. Tom and Lacy laughed.\n\n\"Looks like you have someone to think about J.W. Better be careful... you might be getting hitched.\" Tom teased in an overly loud voice.\n\nLacy was laughing and Amber, a ways down the dock but not out of ear shot, turned to blush. I took it all in a glance. Then, they were gone. \n\nBen hung around talking to me about my 'heroics' for a bit as I tidied up the boat. I needed to get to the store to get some supplies... my whole reason for being here in the first place. I was troubled with Amber's reaction. This was the first time she'd ever tried to kiss me that I was aware of... and she'd done that exceptionally well. 'What were her parents thinking about her and me?' I wondered.\n\nAmber's bra and panties were lying on the floor by the shower, forgotten in the moment I supposed. I picked them up and put them with my wet clothes to be taken care of later.\n\nAfter a bit I headed up to the general store to fill my list of needs. While there, I heard some people talk of the Hollywood group who had flown up late in the year to 'experience' Alaska. \n\nI was quiet, thinking to myself as I paid for the items I had picked up; \"Experience Alaska? Like a few weeks here could engender knowledge of what it was like to live here. Damn people anyway, getting to be too many of them every year. I liked it how it used to be, damn few people, and everybody minding their own damn business.\"\n\nI guess you could say I was a hermit of sorts. Thirty-five years old and living on my 'claim' in the wilds of Alaska. I had made enough money during the nineties to set myself up, so now I just lived off the land as much as I could.\n\nI made things for sale on the market, mostly online, and together with what I had put by it kept me in gas for the generator, particular food items that I didn't want to go without, and some reading materials from time to time as well. My needs are not much, and I like that simplicity.\n\nI had been burned in a relationship a couple of years ago when the girl I had proposed to dumped me about four months before our wedding. She evidently found someone who was better suited for her than I was. Poor sucker she latched onto, I felt for him. \n\nI know, probably some bitterness coming out there, but only because I'd been there. She had gotten worse the closer the marriage date came, and the worse she got, the more I realized I may have made a mistake. Once free from her I found that I really didn't need or want any female companionship. At least so far I didn't. \n\nThe store keeper and his buddies were all talking as I came up to the counter to pay for my things.\n\n\"Yeah, she's doing a movie and its set in Alaska. They came up so she could see and experience Alaska first hand. I suppose she'll be previewing the movie up in Anchorage too from what I heard anyway.\"\n\n\"Didn't they leave already?\" One of the guys asked. I knew that he hung around the store time to time. I didn't know his name but the face was familiar.\n\n\"Nah, they're supposed to fly out the end of the week. She has some fancy jet that they're keeping in Ketchikan at the airport. Then this spring they're going to start filming that movie.\"\n\n\"Hey J.W., have you seen her? Really mighty fine looking lady and she's about your age too. Never know, she may want a real man - you could fit right in there.\" Jacob was smiling like a cat that got the canary.\n\n\"Jacob, leave me out of your match making. You damn well know I don't need or want any woman around me, especially some movie star type. I live too far out in the hills for most of them and there are those types of women that I don't think I want around me either. Besides that, that woman damn near killed me today.\"\n\n\"Damn J.W. Why so testy? So you took a little swim... no big deal.\" One of the bystanders replied.\n\n\"Why don't you go down and take a little dip?\" I stared at the guy until he looked away. \"Once you do that I'll listen to you on just how nice that damn water is. I don't like you match making for me, that's all. I'm fine. Oh and Jacob, tell Emma I don't need her worrying about me either. I know that's where it all comes from. Women are flighty creatures at best, and all one would do at my cabin is make me miserable anyway.\"\n\n\"Tell Emma what J.W.? You can tell me to my face young man. Besides, you do need a woman. Take it from someone who knows.\"\n\nJacob's wife had walked into the store as we were talking. She was a large woman, all serious like most of the time, but her humor was very dry, to the point of dusty as a matter of fact.\n\n\"I wish you all would quit trying to find some woman for me. I don't need one. Had one and she ran off with some young doctor type, and I realized afterward I was the lucky one by far. So, you two keep your noses out of my business and we'll get along fine.\"\n\nI know I sounded quite angry and uptight. Fact is, we really do get along quite well, and I know that Emma and Jacob meant well too. They also knew that I'd get all flustered when there was match making going on and so they'd tease me just like this. You see, we all knew it was just teasing. At least, I hoped they were. \n\n\"So J.W., you got any more of those table sets ready to go?\" Jacob changed the subject.\n\nJacob was referring to the picnic tables I made out of red and yellow cedar. I had figured a way of making some pretty attractive ones, and then discovered a market for them. I was always behind in keeping up with the orders, and it was fast becoming a lucrative business for me too. \"Yeah, I have four ready to go. I'll drop them off in a few weeks if I get a chance. Paul is supposed to be stopping by in his crabber coming in from the Gulf so I'll have him drop them off earlier if that all happens.\"\n\n\"Paul went across the Gulf for crab again this year?\" Emma stated. \"I figured his wife would have put a stop to that by now. She almost lost him two years ago and I know that she doesn't like him being out in that damn boat.\"\n\nEmma's concern showed in her voice.\n\n\"Its how he provides for her. She'd do well to remember that.\"\n\nI felt I needed to stick up for his decision to do what he loved to do even though I tended to agree with Emma on this one. The waters in the Bering Sea are very treacherous.\n\n\"Women like to have their men alive and with them, not in some deep sea grave somewhere, never coming home again J.W., you know that.\" Emma stated her point of view strongly.\n\n\"See? Women would have the whole world in a huge mess if all men were tied down to 'em.\" I replied light heartedly.\n\n\"Damn you're more exasperating every day J.W.\"\n\n\"Well, women taught me well Emma.\"\n\n\"Don't you go blaming me or all women for your views on women. Blame that damn girl who ran out on you. She never was much account anyway.\"\n\n\"Yeah... you just like me more than her, and when she dumped me you felt vindicated in your beliefs Emma. She was never that bad.\"\n\n\"Damn son... you seem to be getting softer and softer.\" Jacob cut in.\n\n\"Just less angry.\" I replied softly.\n\n\"Angry? YOU?\" Jacob nearly shouted as he began to laugh.\n\nEveryone in the place started laughing out loud. I didn't quite get the joke, but I knew that I must have seemed damned mad most of the time over the last couple of years. I was embarrassed and wanted to get out of town.",
        "\"Hey, that's everything. I'll pay up now while I got the chance. Could be a long hard winter. Beaver have extra long coats this year, and the moose have been coming down early too.\"\n\n\"That so? You always get the weather closest of anyone I know, so I'll make sure I stock up well now while I can. Uh... it totals up to $374.98 J.W., will that be cash or charge?\"\n\n\"I said I'd pay up. How much do I have charged by the way?\"\n\n\"I don't think you have any. You paid it off in July when you brought in that last shipment of those tables.\"\n\nI handed Jacob the cash and spent the next half hour loading up my boat with my purchases. With what I had at home and this, I had enough to last the entire winter and then some. Hopefully I would be wrong about how hard it was going to be, but Jacob was right about one thing...I did have an uncanny accuracy on the weather over long term.\n\nActually, the beaver, moose and other wild creatures told me just by how they lived, and what their furs looked like. I just interpreted what I was seeing and figured out the whys. It had been dead on accurate so far at any rate.\n\nI ran back up to the store to pick up my mail just before leaving on the boat. As I walked in a crowd of people blocked the walkway just inside the door. It irritated me as I had to stop doing what I came for and wait for a hole to open up to allow me inside.\n\n\"I need some hand lotion. My skin is drying out and cracking. I know you won't have any good lotion, but I will take the best you do have. That should keep me until I can have something better flown into this back woods hole.\" The almost whiney voice carried over the group.\n\n\"Yes ma'am. We have that right over there. I'll get it for you. Excuse me.\"\n\nJacob was about falling all over in order to get something off a shelf. I stood there and laughed. \n\nThe young woman turned to look at me. Her eyes were very blue as they flashed their impatience. I was impressed with how beautiful she was, even if she was stupid while handling a boat.\n\n\"What do you find so funny?\"\n\n\"Him.\"\n\nI pointed at Jacob as I squeezed past her. It was an abrupt move on my part, one that could have been taken as very rude. One of her male companions stepped up as if to protect her... but she held up her hand stopping him.\n\n\"Him? Why is that?\"\n\n\"That old fart hasn't moved that fast in years. I'm surprised he doesn't have a heart attack right now. I can't ever get him to get things for me like that. Usually he just points the stuff out and goes back to whatever he's doing. You must rate up there next to royalty to get him to fall all over himself like that. Especially since you sounded like a queen ordering her minions around too. Had anyone else around here said what you did, he'd have told them to go... well, to leave his store.\"\n\n\"You seem to find odd things amusing. I asked him to get these things for me and he has been serving me well. Your manners however...\"\n\nI interrupted her before she could tell me what she thought of me. Her eyes were on fire now and I thought that her head had come up a bit more. Reminded me of my mother when she'd get real angry and call me by my given name... all three of them.\n\n\"What do my manners have to do with anything? Oh... never mind. You'd never understand anyway. You must be that actress that's up to 'experience' Alaska. Good luck with that. By the way, you really need to learn manners and how to properly operate a boat. You damn near killed a very nice young lady today.\"\n\nI noticed the guys in suits moving in closer. I guessed they were her body guards or something.\n\n\"You boys just stand back. You get closer you might get hurt.\" I knew what I could do with them, even if they didn't. They just stared at me, trying to intimidate I'm sure. It didn't work. I'd been rounds with guys far bigger, meaner and tougher than they ever thought of being. I'd managed to come out ahead with the others so these guys didn't worry me at all.\n\n\"How rude and if you're referring to the chick that took that swim, it was funny. Oh wait... you're the guy that jumped in after her aren't you?\"\n\n\"Yeah, I jumped in after her. That water is death right now lady. It's only about forty degrees and a few minutes in it will kill. Hypothermia has a way of doing that you know... killing people.\"\n\n\"I think you're over-reacting. You seem to be just fine.\"\n\n\"Oh yeah? Well it took about forty five minutes to fix eight minutes in that fucking water. You damn near killed her... and me.\" I angrily replied. \"You should take a dip in it yourself if you don't think it's a big deal. I'd bet you'd change your mind in a heartbeat once you were in completely.\"\n\nI grabbed my mail off the counter, brushing past her and her group. I would be the first to admit that I was rather abrupt in doing so. I just didn't care for those who thought a couple weeks visit gave them deep insight to my back yard.\n\n\"You are a rude insensitive jerk.\"\n\n\"Yeah... have a nice day yourself Bi... Ma'am.\"\n\nI had been about to call her Bitch with a capital B, but Emma had just walked through the doorway and I would never cuss in front of her if I could help it.  I didn't care for this young woman or her ways. She seemed to think she was above everything around her, and her people were obviously enforcing that concept too. She also sort of reminded me of my ex-fianc\u00e9 too. A spoiled brat.\n\nShe had caught me starting to say bitch, and I could see her flushing in anger. I didn't really care though. I was against most of the people who came up from Hollywood and figured they knew all about Alaska. \n\nThat damned Treadwell had started quite a bit of it with his antics with the bears, and the bears had finally shown him what for. It was shame that because of his 'playing' several bears had to be put down too. I didn't care much for Hollywood types, and I certainly didn't watch many movies either. I didn't have the time for that nonsense.\n\nAs I walked out I overheard her asking Jacob who 'that rude man was'. I missed Jacob's response, but I'm sure he placated her well. I couldn't blame him he was after all running a business.\n\nShe had upset me a bit with her attitude but to be honest, I hadn't been around that beautiful of a woman in years. She shook me up just by being there. I wasn't used to beautiful women like her in this town. Her actions earlier with her operating the boat were too much for me though. It didn't matter how pretty a killer was... they were still a killer.\n\nMost of the women in town were married or way too young to be thinking about that way. There were none in my age group that were free and available, and I wouldn't have wanted to mess around with a married one that way in any event. Besides it appeared I had my hands full just having to keep Amber away from me now. Thinking about it I realized that Amber was very beautiful as well. That realization shook me up too, since I'd always seen her as a kid, not the beautiful young woman she'd become.\n\nAll the way back to my cabin I thought about Jacob and how funny he looked running around filling her order like he had. I'd never seen him look so... boyish before. It was like she was something special. I didn't see that, not at all. I figured she was a snob. Either that or she was looking for some kind of publicity stuff.\n\nBack home at my cabin I put away my purchases and started dinner. I looked out over the beach as my stew warmed up on my wood burning cook stove, and saw where I could pull in some drift wood here and there. I'd get to that in the morning since the tide would favor me. Some of that wood could be good for making tables if I treated it properly as soon as I could. I would gather drift logs up and they'd become either firewood or planking. If they became planking, I'd cut the best of them down later and make usable high grade lumber out of them. The lesser ones I would keep for home projects that could come up.\n\nI have a nice shop and when the gen-set is running, it powers the house and shop all at once. My home is well set up on a low rising hill so I have a nice view of the ocean, the beach and the mountains on either side and behind me. My fifty acres is all mine, and since I don't owe one red cent on it, my living expenses are about as low as one can hope for.\n\nI spent the next few days gathering in logs from the beach and a few that I found floating out in the water a ways. Towing half of them to the shop from the beach with my D-6 Cat, I soon had them cut into planks and firewood. In the matter of several days I had enough wood to keep me warm all next winter after it properly dried out, and make a bunch of picnic tables and accessories. \n\nAll around the eaves of my shop I've hung glass floats that I find while beach-combing. They drifted in on the tides, lost from the Japanese fishing boats I figured. Most were a green color but once in a while I'd find a deep dark blue, yellow or even a reddish type too. \n\nI have also found lots of other strange things here and there, which also found places hanging around inside and outside, so my shop looks kind of different. Most all of it drifted up to the beach which is only a short walk away. All I know is that my shop feels like home to me, and that's all that matters.\n\nA couple of locals had been over to my place and they've commented on the floats I have, and how cool it is the way I had them arranged. I never really thought about them being anything but something to add some color to the place. \n\nA few days had gone by and I was up on the mountain working on getting some light branches off of some low lying brush. I used them in the making of chairs for the dinner tables. My biggest market is from those who own log cabins. The tables are rustic and natural looking and blend in well with log homes.\n\nThe weather was miserable, and the wind took your breath away. I had to get the branches though, and if a person waited on the weather to be good around here you'd never get anything done at all. My rain gear kept me warm and dry enough as it was.\n\nI sat on a rock outcropping sheltered by an overhang to eat my lunch when I saw a white streak with black smoke tear across the cloudy sky. At first I thought it was a meteor, but a second glance proved me way off on that. \n\nI saw a small jet with fire coming out of the tail...where an engine had been if I didn't miss my guess. The jet was moving very fast and the angle it was coming in at proved to be nothing but bad news.\n\nAs I watched, the pilot was working to get the nose up before it hit the water. Just as I thought he was going to make it, the left wing skimmed over the water then smashed into a large breaker rolling in from the ocean. \n\nThe plane spun in tight circles and broke apart as each successive wave contacted the fuselage. From my vantage point I knew that it was going to end up on the spit. The water on the other side of the spit was treacherous as hell, and if it made it over that hump of land, that plane would be gone for good along with those unfortunate souls on board.\n\nI left the outcropping running, and made my way down to the beach. My four-wheeler was sitting there with the empty trailer hooked up, and without a thought, I got on and started it up. Gunning the engine, I slammed it into gear and tore out to the spit.\n\nAs I pulled up along side of the burning wreckage, I thought to grab my fire extinguisher off the trailer. It was a ten pound unit, and I could see that it wouldn't be enough to put out this fire, but it might buy me some time to get whoever was on board off hopefully alive.\n\nThe rear section of the fuselage was gone, torn away and a black hole yawned before me. Dark gray smoke was billowing out and in the background I could see dark orange flames near the floor. I stuck the extinguisher's nozzle into that hole and depressed the plunger. A few seconds later I had emptied it completely. \n\nPlunging into smoke and extinguisher filled cabin I saw a limp form in a seat. Bending over I released the seat belt and drug them out away from the plane. I went back in six more times before the flames prevented me from doing any more. I wasn't sure, but I thought that only the Pilot and co-pilot were left, and from the way the front end of the jet looked, all crushed in by the huge rock it had headed into, I was certain there was nothing more to be done for them anyway. I tried to get up and look into the cockpit but flames chased me away. \n\nLooking back at the bodies I had laid out I realized that I had seen these people lately. It was the movie star and her group. She had been the first one I had grabbed out of the wreck. Not intentionally, since all I had been able to 'see' had been a form in the seat.\n\nI heard coughing, and it was coming from one of the five men I had pulled out. I went to him, hoping he was coming around and would be able to help me out, when I realized his coughing was not the kind of cough I wanted. He was dying. Blood was coming out of his mouth, ears, and nose. He was desperate to tell me something.\n\nI bent down and he grabbed my shirt, pulling me closer. It was a weak grasp, but I bent further for him.\n\n\"My wife... *cough*... tell her... I... *cough*...I'm sorry...  *cough*... I love her and...\"\n\nThe sudden silence and relaxed grip forced me to look at his eyes. He had died trying to tell me to tell his wife that he loved her. I turned to the others, and started to check them out. One of the other men had died at some point, or perhaps he had been dead when I pulled him out of the wreckage. It was one of the body guard guys. The other body guard was dead too. The fifth man I'd pulled out was dead as well.\n\nThe fourth man was badly injured, and from the looks of him I wasn't so sure he'd make it either. I did what I could for him and at one point; he was lucid enough to thank me. He wasn't looking good, and the grayness in his face worried me. I took off my rain coat and covered his torso up as best I could.\n\nThe second person I had pulled out of the plane was a young woman. She'd been with the actress that day I remembered. She was staring at me, her eyes showing a bit of fear and a lot of pain as well.  I saw that her arm was definitely broken, and I was pretty certain that the Coast Guard would have to work on her before they flew her to the hospital. \n\nI was hoping that the Coast Guard would be able to fly out too. The weather was picking up and from a glance around I knew I'd be lucky if they'd be able to fly or even get a cutter out here today.\n\nI turned to the first person I had pulled out. It was her. Miss snot-nose spoiled brat bitch. She was from all appearances, unharmed.  Shook up, and some small cuts and bruises on her face, she did have a cut on her head that was bleeding pretty badly, but otherwise she looked okay. I was hoping that she'd be some help for me at that point. \n\n\"You hurt anywhere seriously?\"\n\n\"My arm and back are sore. Other than that I think I'm okay though. Sam... how's Sam?\"\n\n\"What's he look like?\"\n\n\"He was wearing the chinos and flat top loafers. Uh... he had glasses too.\"\n\n\"Oh... he didn't make it Miss. He was hurt pretty badly. He did manage to tell me to tell his wife that he loved her though.\"\n\n\"Oh no. OH NO! Sam... Oh God...What about the others? Janice and Paul... Jim... um... the pilots... Don and Bill my body guards?\"\n\n\"Miss, you need to lay back and rest. Janice has a broken arm... we may have to do something about that later... not sure with the weather and all. Which one is Paul and which one is Jim?\" \"Paul, he's tall, blonde... \"\n\n\"Okay, He's hurt very badly. I don't know but I don't want to get your hopes up... he may not make it unless we can get him to a doctor. Jim and the pilots...and your body guards are... gone.\"\n\n\"Oh God. NO... no, no, no. You have to get help. Paul... he's my only lifeline. You've got to do something now. NOW.\"\n\n\"Look, I can't move him. I'm afraid that we'd injure him more. If you feel well enough, go sit with him and talk to him. Janice too. I'll go make a few calls and then get some supplies and come right back. Should only take fifteen minutes. Okay? Do you understand me?\"\n\nShe looked shell shocked and I was worried she was going to pass out. She nodded her head and stood up slowly. I held onto her arm until she had her bearings. When she saw the bodies laying there on the ground I thought she was going to faint, but she steeled herself and started to make her way over to Paul and Janice. None of them were dressed for the weather, probably figuring that they'd be in L.A. by lunch time.\n\nI got on the four-wheeler and drove back to the cabin. I put in the radio call to the Coast Guard and got the bad news first hand.\n\n\"We can't fly out until probably day after tomorrow. Hell, we may not even make it then. We've got seventy-five knot winds gusting to over a hundred and zero visibility. The inside strait is running up forty foot seas right now too, so the cutter is out as well. Even if we could get out through the strait, we'd never make it around Prince Of Wales and the open ocean to your place. This here is the big hundred year storm bud. Nobody is flying or boating in this. Weather service is saying it could last a week or possibly more. You're going to have to make do J.W.\"\n\nI knew the Chief and if he was telling me they couldn't make it, the weather was rough. Real rough. I was desperate though. Totally out of my element and I couldn't stand to watch someone die and not try something.\n\n\"Can you get someone dropped off here to help me? Anything at all? I don't think the one man will make it... he really needs medical help.\"\n\n\"What about the pilots and others on board?\"\n\n\"Pilots are dead, four other men are dead. One woman has a broken arm...the other just got cuts and bruises. The one man though... he has something really wrong internally... I can't help him. He's not quite lucid... eyes are weird too... one pupil is larger than the other... \"\n\n\"Concussion for certain... if it's not something more serious. Look, I'm really sorry J.W.... but we just can't risk it. You'll have to make do. If it will help I can get the surgeon to talk you through some stuff... might be able to do something for the guy and that woman too.\"\n\n\"Chief, I'm not a doctor or a paramedic. Hell, I can barely keep myself out of deep shit here. There's no way I can doctor these people like they need. I don't have anything but the basics out here.\"\n\n\"J.W., I know you. You can do what needs to be done, and all that can be done. The Surgeon will talk you through what he can, and we'll be out the first break in the weather we have.\"\n\n\"What should I do with the man? It's getting colder and the rain isn't helping much either.\"\n\n\"The Doc says to go ahead and move him. Be careful to keep his head aligned with his body if you have to pick him up or turn him over. Use a blanket to lift him if you can J.W..\"\n\n\"My trailer has a lift bed... maybe I can slide him up onto it careful like... \"\n\n\"Doc says be careful and go ahead and get him inside somewhere warm and dry. It'll be better to be near your radio too. You may have to set that one ladies arm too. Doc says he'll walk you through that. You have any whiskey or alcohol there with you?\"\n\n\"Yeah, but I don't think it's a good time to be drinking...\"\n\n\"It's not for you it's for the lady with the broken arm. Have her drink as much as she can. It will help to kill the pain when you splint, or when you set her arm if you have to..\"\n\n\"SET HER ARM? Hell, I told you that I'm not a medic... I can't set broken bones.\"\n\n\"Doc says he can walk you through it well enough. If it can be done there right now it will heal faster. Since we don't know how long we'll be grounded, we have to assume the worst. He'll want to know what it looks like and all, and if it's too bad he'll have you support it until she can be med-e-vac-ed out. Just relax J.W. You can do this.\"",
        "I was shocked. One minute I'm enjoying my lunch and a minute later I have dead and dying all around me. I have a guy on the other end of the Motorola telling me that I'm going to be doing doctor stuff like setting broken bones too. Out of the clear... okay, maybe not the clear blue sky, but they did drop out of the sky.\n\nI drove back to the wreckage after having loaded up some blankets and pillows. I had a couple of jackets for the women too. I drove as fast as I dared in the conditions, knowing that time was working against me now. I pulled up close to where Paul was lying, hoping to get up near him so any movement of him would be limited. The women were by him, talking. I could see that both of them had been crying too.\n\n\"Thank God you're back. Did you call 911? Help is on the way... right?\" Her highness was looking a bit unnerved.\n\n\"Lady, in this part of Alaska, 911 is you and me.\" I gruffly replied. \"The weather is too bad, even the Coast Guard isn't coming out in it. We got upwards of one hundred mile an hour gusts and forty foot seas on the inside passage... nothing goes in that... nothing at all. This is a rare storm, but we do get them once in a long while.\"\n\n\"But what about Paul and Janice... they're hurt and need a doctor's attention.\"\n\n\"I know that. Look, I have a radio back at the cabin. I talked to the Coast Guard and they have a doctor that will help me and you work on Paul and Janice. It's the best we can do.\"\n\n\"That's not good enough.\" She angrily began \"You're not a doctor nor have I had any training. You... \"\n\n\"Lady, WE ARE IT! Give me a hand. We need to get Paul up on the trailer... keep his head aligned to his body while I slide him up.\" I was fed up and getting cold. I was sure they were too.\n\nShe looked shocked. I'm sure my brusque attitude wasn't helping but we needed to get Paul on the trailer and in to my cabin soon. The weather was getting worse minute by minute. It would be dark soon too. The last thing I wanted to be doing after dark was wandering around outside in this storm arguing with some Hollywood type about anything.\n\nWe got Paul back to the cabin. Stripping his wet clothes off, I put him in my bed since it was the best choice at the time. I had one other bed, a king sized one, that I had bought when I thought I was going to be married. Since that hadn't happened, I just left it where it was and lived out of the other bedroom. \n\nWe had never broken it in, but the thought of what it had been intended for bothered me. Call me cheap, but I didn't want to part with it since it had cost quite a bit of money. I could never get what I paid for it, so I ended up keeping the damned thing. I figured the two women could sleep on that and I'd take the couch in the living room. I got them all lined out and then called the Chief on the radio.\n\n\"Hey Chief. The doc handy at the moment? We got the injured man to my cabin and we need to talk. He's about out of it. His eyes are more even now though.\"\n\n\"Yeah, He's right here. Run down his vitals for him... you know... temperature, pulse, skin condition... cold and clammy, or hot and dry... listen to his heart and describe that too while you're at it.\"\n\n\"Uh... okay, it will be a bit though, hang on.\"\n\nJanice's voice was calm and professional. \"Tell the doctor his pulse is weak... thready. Mostly it's around 40. He's cold and clammy, probably a bit hypothermic. He has swelling on his right side just above his hip, and a laceration on his head... left frontal quadrant, above the ear. Not too deep, but it is a fairly good sized lump, about the size of an egg. His breathing sounds interrupted on inhale, and it's weak as well.\"\n\nJanice sounded like a nurse describing a patient's vitals. I was stunned speechless at first, I hurried to explain things to the doctor. Things slowly settled down. Paul was in serious trouble, but we had nothing much we could do except watch and wait. It was going to be a long night.\n\nThe doctor started explaining how I was going to set Janice's arm and splint it once he determined it was a simple fracture. I made him go over it three times before I finally felt good with it... and even then I was no where near comfortable with it. Hard to explain, but setting someone's broken bone sounded dangerous for me to be trying for the first time... with the one person that had the knowledge on the other end of a radio. I also knew that the weather could cause help to end up a week out, and her arm needed attention soon. The doctor was afraid of the bone trying to knit while out of position which would cause problems down the road for Janice. We had no choice.\n\nThe problem was that they didn't know if they'd make it out in the following days and her arm needed to splinted. The way the break was it would have to be aligned back as close as possible first, which left me in an unheard of position... being a doctor.\n\nJanice however made it simple. She just swallowed down shots of the whiskey I had and then looked into my eyes.\n\n\"You have to do it. It hurts bad now... but once you get it set the pain level will drop quite a bit. You can do this. I was a Certified Nurses Assistant for a while before I left to be a personal assistant. The doctor is right there on the other end of the radio... I'm here... all you have to do is set the bone and then splint it. It appears to be a straight forward simple fracture. It will be okay.\"\n\n\"I've never done this before. I'm not a medic. I could mess things up here...\"\n\n\"You'll do fine. Trust me... you can do this.\"\n\nI don't know how I did it. To this day I can't remember it all, but I managed to set her arm without killing her or making it worse... and the splinting went well too. Of course, Janice gave lots of good advice just before she passed out on me so between us we got her fixed up. I know that in the civilized world we'd never attempt to set a broken bone, leaving it for the professionals, but then, where we were wasn't exactly modern suburbia either.\n\n\"Lucy, you'd better let J.W. look at your head. That's a pretty bad cut, needs something on it.\" Janice had been back with us for about ten minutes when she noticed Lucy bleeding from her head wound still. She had steadfastly refused my help.\n\n\"NO. I'm fine. I'll be okay.\" Lucy replied while giving me the evil eye.\n\n\"Look, my arm is broke so I can't help you. I'm sorry about that but you need that cut bandaged. It's still bleeding and hasn't quit. You're losing blood, and that's not a good thing. Quit pouting and let J.W. bandage your head.\" Janice snapped. I could see the alcohol had given her a bit of courage to be talking to her boss the way she was.\n\nLucy looked at me with those big deep blue eyes and something I just couldn't quite put my finger on but it wasn't a look I was used to, that was for sure. I didn't really want to touch her at all since she seemed to be thinking that she was better than me at best and more than a little afraid of me too. Besides, I had two other people, far more seriously hurt.\n\nJanice looked at me and started in.\n\n\"Look, J. W., you have to do something for her. She's losing blood from that wound, and it hasn't slowed down. Even if you have to hold her down, get something on that cut and stop the bleeding. I'll try to help with what I can, but you have to do this too.\"\n\n\"Damn... she's going to scream bloody murder and you know she hates me. She don't want me touching her I can SEE that. Hey... where'd you learn my name? I never introduced myself.\"\n\n\"At the store, that guy and his wife told us about you. Trust me she doesn't hate you. Matter of fact, I think it's just the opposite. She's just not saying it.\"\n\n\"JANICE! I do not. He's a jerk... a... a... dirty... bum.\"\n\nLucy was angry that Janice was working on me to doctor her. She was holding one of my last good towels to her head, and I could see it was all bloody. Janice was right, Lucy needed that wound covered and the bleeding stopped. \"First of all, I'm not a bum. If you weren't such a stuck up little bitch, sold on yourself to the point of ignoring real people, you'd have seen that. Secondly, you need that wound taken care of. Of course, we can just wait until you pass out, do you want that? Do you want this dirty bum working on you while you're passed out? I might take advantage of you that's what dirty bums do you know...\"\n\n\"STOP IT YOU TWO! Lucy, get over here and lay down... J.W., you get the first aid stuff and get right back here, NOW.\"\n\nJanice, while hurting, still had an edge to her that I respected her for. She was in control that was obvious. Lucy moved over to the couch and lay down; I got the first aid kit and went over by her. Janice sat on a chair near Lucy and waited.\n\nI touched Lucy's head. She shrank away from me. That frustrated me. How was I supposed to help her if she was so afraid of me? I hadn't done anything to her for her to be afraid of me. At least, I thought anyway.\n\n\"Look, hold still lady. I won't hurt you. We need to clean your wound and cover it up. Just hold still.\"\n\nShe still flinched as I began to work on her, and though it bothered me, I tried to not let it show. I was as gentle with her as I could be. Pretty soon I had her head cleaned up and bandaged. It wasn't a pretty job, but it was functional enough. When I finished Lucy started to sit up but Janice held her down by touching her shoulder.\n\n\"You stay lying down. J.W. will get you a blanket and pillow, and you can rest right there.\"\n\n\"Uh... I figured you two would sleep in the main bedroom on the king sized bed and that I'd sleep on the couch. I think Lucy can make it there all right, or, I could carry her there...\"\n\n\"NO. Lucy needs to rest right where she is. Can't you see that she's all done in? I can sleep in this chair and you take the bed.\"\n\n\"BULLSHIT lady, pardon my French... you two will take the bed. I'll carry her in and then you two can sleep better right there. It's a king sized bed, there's more than enough room for both of you.\"\n\nI had put my foot down. It was my house after all, so my house, my rules.\n\nLater that night I found Janice standing over me as I lay on the damned bed. Yeah... that bed. I lost that argument as well. She bent down and kissed my forehead. One armed, she moved the blanket around as it had almost fallen off me.\n\n\"Hey, you don't have to do that. What was the kiss for anyway?\"\n\n\"All I had to pay you for your help today. You saved our lives.\"\n\n\"No, I didn't. I helped you, but Paul still isn't out of the woods, and Lucy is sleeping a bit too hard. You should be sleeping too, that arm has to hurt.\"\n\n\"It's all right. I took some Tylenol you had... and I had another couple of shots of that rot gut. Can't really sleep with the arm like it is.\"\n\n\"Hey, that's not rot gut...\"\n\n\"Yes it is. I'll bet that whole gallon cost you about what? Fourteen dollars?\"\n\n\"Yeah, well that's not the point, that there is good whiskey.\"\n\n\"No, it's not. You've never had good whiskey I'll bet, judging by your taste anyway. Besides, that doesn't matter really. What does matter is that you're not the ogre that some of us thought you were. You actually tried to help us the best you could. That says something.\"\n\n\"Yeah, that says that I can't mind my own business at all.\"\n\n\"Damn, you are a real ass, you know that?\"\n\n\"I'm sorry Janice, today has been a very long day. You need to be resting with Lucy, and I need to sleep some before morning. Hopefully help will be able to get here in the morning.\"\n\n\"Help is already here in the form of you.\"\n\n\"I'm not much.\"\n\n\"You're a God send, trust me.\"\n\nThe second day was quiet except for the storm raging outside. I called into the Coast Guard station and talked to the Chief and the Doctor. They weren't flying yet, nor was the cutter able to come out either.\n\nI built a fire in the fireplace and adjusted the damper so the heat would be held in near the fan system I'd installed. It kept the place pretty well warm most of the time. Lucy was sleeping as I made my way to the kitchen. Standing in front of the stove I heard someone come up behind me.\n\n\"What are you doing?\"\n\nTurning I saw Janice with her arm in the makeshift sling.\n\n\"Making breakfast, you think you'll like some eggs, bacon, hotcakes and toast?\"\n\n\"How do you run a toaster out here with no electricity?\"\n\n\"I have a generator out back. I have a toaster, a microwave, a TV, and even internet too.\"\n\n\"TV? You have cable all the way out here?\"\n\n\"Nope. Satellite only. I'm not as backwoods as you may think.\"\n\n\"I can see that.\"\n\n\"How's your arm this morning? I have some Tylenol or Advil if you need it.\"\n\n\"I'm okay. I took some Advil a little bit ago. Eggs and bacon and hotcakes sound good. Can I help somehow?\"\n\n\"You can help by just sitting there at the table and visiting with me. You shouldn't be up and around with your arm like that.\"\n\n\"First of all, it's my arm not my leg... so being up and around can't hurt that all that much. Secondly, I feel a need to help somehow. I owe you...\"\n\n\"You don't owe me anything Janice. You're hurt and you need to rest. Any doctor would tell you that, I know. You sit or I'll pick you up and carry you to the bedroom and force you to lie down.\"\n\n\"That sounds just like the macho Neanderthal jerk you are.\"\n\nThe new voice came from behind me as I stood facing Janice. Lucy had woke up and slipped up overhearing me talk to Janice.\n\n\"What? She's supposed to be resting damnit. I'm not a jerk like you may think anyway. You sure have a chip on your shoulder about me...\"\n\n\"Yeah, well, no more than you have about me.\"\n\n\"YOU TWO... knock it off. Lucy lets you and I go check on Paul okay? Leave J.W. to cook breakfast.\"\n\n\"I'm not hungry. Anything he'd cook would probably kill me anyway.\"\n\n\"Lucy, that's not fair and you know it. I think you need to apologize to J.W. right now.\"\n\nLucy looked at me with contempt and something else. I was unnerved by the 'something else' and just turned away to tend to the bacon that was frying away in the cast iron frying pan.\n\nI spoke over my shoulder, off handed like.\n\n\"It's all right, she don't need to apologize to me.\"\n\n\"Yes... I do. I'm sorry J.W..\" Lucy softly spoke.\n\n\"All right.\"\n\nI was smug, I'll admit it. I was also still angry with her too. Her response was instant and harsh.\n\n\"WHAT? That's it? All right? That's all? That's all you have to say?\" \n\nHer eyes were on fire, sparking and flaming as she let loose on me. Stunned I stood there not sure of what to say. Janice stepped in, getting Lucy's attention.\n\n\"Lucy... stop. Let it go. He accepted your apology, let it go.\"\n\n\"He accepted my apology, but what about the way he's been treating me? He's been impossible. Just impossible.\"\n\nShe stamped her foot as if she were stamping me out of existence. I was suddenly taken with just how pretty she was when she was angry. \n\n\"Come talk to me Lucy, leave J.W. alone okay?\"\n\n\"Fine. What... ever.\"\n\nThey left me alone then, and checked on Paul. I'd worried about him all night long, and probably unbeknownst to them, I'd gotten up and checked on him several times through the night. He was holding his own, but I'd have felt lots better if the Coast Guard had been able to come get him.\n\nAfter breakfast I took a walk outside to my shop. I wasn't aware of anyone following me until I heard the door open behind me. The wind nearly sucked the fire out of the wood stove when she opened the door.\n\n\"Wow, you have quite a place here.\"\n\nShe was being nice for the first time. It unsettled me.\n\n\"It's where I earn my living.\" I replied.\n\n\"You make these?\" Her face showed that she was impressed... or maybe shocked.\n\nShe was looking at my most recent dinner table. I'd just finished giving it its last coat of varnish a couple of days before. I had to admit it looked very good sitting there in the shop. I'd carved the table top edging and leg patterns with grape leaves and vines. There were two others covered in plastic right behind it that had similar carving too.\n\n\"Yeah. They're made from Sitka spruce, yellow and red cedar that I pick up from drift on the beach.\"\n\n\"Those big ugly old logs become something this beautiful?\"\n\n\"Yeah. I guess so. I cut the logs down into planking, dry it out and then I work the lumber down to the right size for the tables or whatever else I'm building.\"\n\n\"What else do you build?\"\n\n\"I've done cabinetry, bed frames, chairs, dinner and end tables and the like. Mostly for people that have log homes. The stuff I make fits log homes real well.\"\n\n\"I can see why. You're a craftsman, that's obvious.\"\n\nI was becoming more and more unsettled. She was being nice, almost too nice. I was blushing too. I wasn't used to praise like this. Lucy was scaring me in ways I couldn't explain. \n\n\"I've had practice I suppose.\"\n\n\"I'd say. You do this all by hand?\"\n\n\"Yeah, for the most part. I do have a big band saw with a deck to saw logs out back that cuts the logs into plank and then I have some power tools in here for working the wood farther down, but mostly I do it like someone in the eighteen hundreds would have done it.\"\n\n\"Wow. You have a wonderful talent. You really do. You're hands are so different too. They look so hard, yet they're so soft at the same time.\"\n\nShe took one of my hands in hers and turned it over, tracing my fingers with one of hers I suddenly felt some stirrings deep inside that I hadn't felt for a long time.\n\n\"Uh... I really need to go check the generator. I'm going to run it for a while today, charge up the batteries and stuff.\"\n\nAbruptly pulling my hand away I stepped back. Lucy looked almost disappointed, yet she didn't move to take my hand back in hers. Stepping around her, I walked out and went to the generator shack.\n\nI was sweating and my heart was racing. She did things to me deep inside and those things bothered me more than I liked. I had to regain control of my emotions before I did something stupid. 'Besides' I thought, 'why would she be interested in me? I have nothing like she was used to. Nothing.'\n\nThe rest of the day I'd catch Lucy looking at me with a look that I just couldn't place. She would start conversations with me about things that made me uncomfortable. Unnerved, I'd go find something to do when I'd see her looking at me or talking to me that way. Janice seemed to find something amusing about it all, each time smiling and even laughing a few times at my discomfort.\n\nThat night I did put my foot down and forced them to share the king sized bed. I changed the sheets especially for them, and then as they settled down for the night I fixed up the couch.\n\nThe morning of the third day broke with the storm still howling quite a bit. The wind was blowing as hard as the day before and I could see the ocean waves breaking on the shore. Calling into the Coast Guard station brought bad news. They couldn't fly out and 'rescue' Paul and the women yet. I wasn't relieved to hear that.\n\nI spent about ten minutes with the doctor talking about my patients and him giving me some advice and things to watch out for. I was really wishing the whole time that they could just come get these folks off my hands. \n\nThat morning both women raided my clothes closet and dresser for clothes. I obliged them since they had nothing else to wear. Janice looked cute in my over-sized shirt and jeans while Lucy wore similar clothes that seemed to fit her better. Of course, Lucy was almost my height while Janice was about six inches shorter.\n\nDuring the course of the day Lucy started hanging around me close. At first I waited for her cutting comments, but when those didn't materialize I became nervous. One would have thought I'd feel better about the lack of smart assed acerbic comments, but I found the new persona to be even more unsettling.\n\nI went out and tied off a few logs that were nearly getting sucked off the beach in the rollers. After having worked hours to get them beached in the first place, the last thing I wanted was to have to go get them all over again.",
        "I struggled with them in the blowing wind and rain with breakers rolling up and crashing all around soaking me to the core. I hoped I wouldn't get crushed between two logs while the breakers were lifting and tossing them like they were.\n\nLucy watched me from the front porch of my cabin as I struggled with the cable, looping it over and under each log, stapling it all tightly. After the third one of the seven logs I was worried about, I was having a difficult time getting the cable to do what I needed it to do. I was about to give up when suddenly a hand shot up on the other side of the log waiting for me to give it the cable end.\n\nWith Lucy helping we managed to get all seven logs secured. I was surprised that she came out in the nasty weather to help, and on top of that, that she didn't shy away from getting wet and dirty in doing so. She was forcing me to change my opinion of her way too much. That alone added to my discomfort.\n\nAs we walked back up to the cabin I saw Janice sitting on the rocker I'd made, smiling. She'd been watching us work together in getting the logs secured and it seemed to amuse her for some strange reason.\n\nThat night after I made dinner, we all sat around visiting. Paul was conscious for a bit and though in pain, he took part of the conversation. We talked about many things, but mostly the conversation seemed to be about me and my place.\n\nLater that night I woke suddenly to see a shadow standing over me. In the dimness of the room I couldn't tell who it was until her hand reached out and touched my face. Softly, so softly in fact I thought at first I was imagining it, she spoke.\n\n\"You are my knight in shining armor.\"\n\nI pretended to sleep until Lucy went back to the master bedroom. I thought about her touch and choice of words for a long time.\n\nDay four dawned with the storm raging even harder. I could see the breakers coming in over the spit, and that was amazing. The spit was far enough away from my cabin that one couldn't see it clearly without binoculars or other optical aids. To see waves breaking up so high meant that the seas had to be running around one hundred foot at least.\n\nI set up to do laundry and while all the clothes were being washed I slipped out to the wreckage of the jet to see if there was any luggage left. The whole plane was pretty much burned up and what little I did find wasn't much but rags.\n\nGetting back to the cabin I saw Lucy folding the clothes. Evidently I'd been gone longer than I thought as they'd run the clothes through my dryer too. \n\n\"Wow... sorry I was gone for so long. I went out to the wreck to see if there was anything worth salvaging as far as your luggage. I didn't find much but a burned out hulk. Guess you'll have to wear my Tee shirts for bed again tonight.\"\n\n\"Well, your Tee shirts are comfortable.  I might just steal some when we do leave.\" Lucy was smiling as she teased me. \"I have to wonder about the bra and panties you have though. Do you have a girlfriend or maybe you like to dress up...\"\n\n\"Those belong to Amber, that young lady you forced to take a swim. She was in my shower getting warm and took those off. I didn't realize it until after they'd left that her underwear was on the floor by shower door.\" I knew I was blushing.\n\n\"Oh? She was naked in your shower on your boat?\"\n\n\"Uh... yeah. Hot water... you know... warmed her up.\" I was really blushing now.\n\n\"Hmmm. Well, your Tee shirts are very comfortable and I am planning on stealing at least one of them when we leave... just so you know.\" Lucy was giving me 'that look' while talking to me.\n\n\"That's okay with me, but those stinky old things won't last long anyway. They're nearly on their last legs now as it is.\" I just wanted to get out of there.\n\n\"Not hardly. The one I wore last night was almost new.\" Janice was now slipping into the conversation.\n\n\"Those things are older than me for crying out loud.\" I was becoming desperate.\n\n\"Yeah... right... and pigs fly around all day long around here too.\" Lucy laughed.\n\n\"Well, suit yourselves. They're just Tee shirts, nothing special. Probably buy them at any store down South for a few bucks.\"\n\n\"That's true J. W., but they wouldn't be the same. I love the way they smell, and they've been washed just enough to be soft and cuddly. I slept last night with your smell all around me.\" Lucy was staring at me intensely as she moved in closer to me.\n\nI blushed some more.\n\nYeah, I know, big macho 'jerk' blushing like a school kid. Can't help it... Lucy did things to me that I couldn't explain.\n\n\"Well... you go right ahead and take any old Tee shirt of mine you want. No big deal.\"\n\nI backed away, moving into the kitchen. There had to be something to be done in there that I could do right now. As I washed dishes Janice slipped up beside me. She tried to take over drying the plates as I rinsed them off. She soon saw that with one arm she wouldn't be able to do much so she gave up and just stood watching me. Lucy was folding the last of the clothes from the dryer out back.\n\n\"You know, she's falling for you.\" Janice spoke quietly, as if Lucy would hear her telling me.\n\n\"No, she's just having that 'summer camp crush' thing, that's all. If you take a small group of people and shove them together, it happens...and then, after summer camp is over and they all go home, most of that crush disappears. Sometimes it takes a month or three, but eventually it all goes away. That's what Lucy's having, I'm sure. She can do a lot better than me, and be with some guy that likes Hollywood and all that stuff. We're farther apart than hot and cold... that's the truth.\" I was certain I was right.\n\n\"Well, you need to know that I know Lucy better than anybody else does. She's changing and it's for the better. I have known her through six relationships now... and this time it's far different than any before. She's falling for you hard... J.W. ... don't you hurt her.\"\n\n\"Me? Hurt her? Lady, you got me all wrong to begin with. We'll never see each other again once the Coast Guard gets out here and takes you all to safety. She'll think back about this little camping adventure with all that romantic crap until some other dude with a lot of money or flash shows up and then she'll forget all about me. It is what it is. Don't read things into things that aren't there.\"\n\n\"J.W.... you're a smart and talented man, but you underestimate Lucy's feelings and you underestimate what she'd do for you. Mark my words... she won't be forgetting you ever. Matter of fact I wouldn't be surprised if... well, never mind that for now... just know that Lucy is or has fallen for you very hard. You make sure you treat her right.\"\n\n\"We haven't dated, kissed or petted... fondled or anything else lovers do Janice... you're wrong. She's in 'summer camp' mode and that's all.\"\n\nJanice laughed out loud. \n\n\"Man, you are going to be so surprised. So is she too I think. It will be interesting being around Lucy when she gets back to Hollywood.\"\n\n\"You mean goes back home?\"\n\n\"No, I mean Hollywood. I think she thinks of this cabin as home now.\"\n\n\"Janice... it's only been four days since the crash. There is no way in hell she's in love with me or falling in love with me. It's just 'summer camp', I'm telling you.\"\n\nThat night as we ate dinner, I recalled that earlier conversation and realized that maybe my 'summer camp' comparison wasn't quite right... but it was close enough for me. Lucy seemed to hang on every word I said... it was almost embarrassing. Fortunately I had some recent experience with women who seemed to think they loved me or were in love with me. I could handle Amber, and I saw her a lot more than I'd ever see Lucy again so I knew that I'd be able to handle Lucy too.\n\nOnce again, late that night as I slept on the couch I woke up to someone standing over me, Lucy's form shown in the faint light of the fireplace flame. I pretended to be sleeping soundly and waited. \n\nSo softly I almost missed her speaking, I heard words that shook me to my core.\n\n\"I love you J.W. I really do. I don't know when or how... but I do know love when it hits me. You're my Knight in shining armor.\"\n\nI felt her hand on my shoulder, her lips brushed my cheek. It was hard for me to pretend to be sleeping. Long after she'd left to go back to bed, I could feel the heat on my cheek where her lips had touched my soul.  What was I going to do?\n\nI argued with myself for hours afterward. While checking on Paul it was all I could think about. I clung to my belief that Lucy was suffering from 'Summer camp syndrome' and I finally fell asleep wondering, 'what if it isn't?'\n\nThe morning broke with the storm down to almost nothing. The sky was breaking up, with the sun making it down to earth more and more. We ate breakfast and I began to get my 'patient' ready. I knew that the Coast Guard would be out shortly.\n\nAbout a half hour later we heard the chopping sounds of the helicopter coming in for a landing. As they set down I went outside, hoping that the doctor was onboard. He was. He came in with me and started checking Paul over. Another medic followed in with a bag and soon they were hooking up IV's and getting him ready for transport.\n\n\"We're going to run this one and the young lady into Ketchikan and then come back for the other gal. You did a fine job J.W. I think Paul will be okay.\"\n\n\"I'll wait with Lucy for now. I'm doing okay anyway.\" Janice interrupted the doctor.\n\nHe didn't like it but he allowed her to stay with us.\n\nThey left and as the sounds of the helicopter died away, I looked to see Lucy staring at me with looks that unsettled.\n\n\"What?\"\n\nLucy looked into my eyes as tears formed in hers. \"You saved our lives.\"\n\n\"Just did what anybody would or could have done.\"\n\n\"No. You saved our lives.\"\n\n\"They'll be back pretty soon for you two. You'll be out of the woods soon. It will feel good to you to get back home too.\"\n\nJanice was staring at me with a different look suddenly. It was as if she recognized something in me she hadn't before.\n\n\"J.W., you did save us. I know that Paul wouldn't have made it without your help, you checking on him through the nights and you set my arm like a pro too.\" Janice said.\n\n\"The doc was on the other end of the Motorola.\"\n\n\"Yeah, but YOU did the work. YOU saved him and me.\"\n\n\"Broken arm won't kill you usually.\"\n\n\"You know what I mean.\"\n\n\"Okay, okay... fine. You're welcome. You're all welcome.\"\n\n\"You don't like praise much do you J.W.?\" Lucy cut in.\n\nLucy had a look again, that look that had unnerved me before. It did double duty today.\n\n\"Just did what any person would have done in the same situation. No big heroic deal. Really.\"\n\n\"It is to us.\"\n\n\"Yeah... okay. I said, you're welcome too.\"\n\nShe let it drop but I could see something in her eyes that said otherwise.\n\nThe Coast Guard came back a little bit later and picked up the women. I was relieved as they were both starting to make me very nervous the longer they were around me. As Lucy boarded the helicopter, she hugged me tight, giving me a lingering kiss on my lips. I was shocked.\n\n\"What the hell?!\"\n\n\"That's for helping us. You saved our lives. I was a... I wasn't as nice as I could have been either. You're always going to be my Knight in Shining Armor. If you would, could you apologize to that young lady who took the swim too? I feel bad about that.\"\n\n\"Damn... well, you take care of yourself Lucy. Maybe when you come back, if you do, things will go better.\"\n\nI was softening up.\n\n\"When I come up to film I'll drop by... I mean, if you'd like.\"\n\n\"Sure. Anytime. The door will always be open for any of you.\"\n\nAs the sound of the helicopter died off, I looked around. The place seemed different somehow. In only five days things had changed forever for me. I knew several things. One, Lucy wasn't that bad a person. I had been wrong about her. Two, I could do some medical stuff that I never thought I'd be doing. Three, and this one hurt the most, I needed a woman. \n\nThat last one bothered me more than I wanted to admit. Just those days and nights with Lucy and Janice around the place had changed my mind though. I hated that I felt that way. Wanting a woman and having one were two different things. Hopefully that feeling would go away, eventually.\n\nI had to put up with the FAA investigators for a while. Never did hear what caused the fire onboard the jet. They picked up every piece of the aircraft, the bodies had been removed shortly after the Coast Guard could fly out, and things got normal bit by bit. \n\nMonths went by, and that feeling I had about needing a woman only got worse instead of going away. I knew that I had issues; I just didn't know how to fix this one. At Christmas I got a package from town. It was several gifts from Amber to me. The guy who dropped them off didn't know anything about the deal other than she'd asked him to deliver them if he was in the area. \n\nThat started me thinking about Amber as a woman too. The gifts were simple things, mostly artistic things she'd made. Now I had thoughts of two women on my mind, taking up what little brain space I had left. The winter seemed to drag on forever. Finally, the snow began to melt, and the days turned warmer. Spring was in the air.\n\nThe winter had been long and hard, but I had gotten some serious work done. Twenty-five table sets were complete and I also had some end table sets as well. I decided to deliver them to town myself as I hadn't been able to contact Paul. I hoped that he had made his crabbing trip safe and sound.\n\nJacob was in a mood when I got there. \n\n\"Hey Jacob. How's things going?\"\n\n\"Been pretty good. The last month has been busy as heck. There are about a hundred people in town with that filming crew and I've had to double my usual orders from my suppliers.\"\n\n\"Oh, that movie crew is here filming then?\"\n\n\"Yep. Say that actress lady has been looking for you too. Anyway she asks about you, daily it seems. You must have made an impression on her.\"\n\n\"Nah. She just needed some help and I was in the right place at the right time.\"\n\n\"Not how I hear it.\"\n\n\"Just what the hell have you heard then?\"\n\nEmma walked in at that moment and Jacob suddenly got busy, too busy to answer me. Irritated I pushed.\n\n\"Jacob what have you been hearing?\"\n\n\"Nuthin, nuthin at all.\"\n\n\"J.W., has Jacob been filling you with his stories about them movie people?\"\n\n\"I'm not sure Emma. He mentioned that he had heard something about that time last winter when I had the visitors and all, but he won't talk now.\"\n\n\"Jacob you know better than that. J.W. is local and a friend. I'll tell you J.W..  That movie gal has been asking about you. She's interested. Real interested. She wants to talk to you... see you. Said something about paying you back for the care...\"\n\n\"It was nothing.\"\n\n\"IT was SOMETHING to her J.W.! Her and that assistant gal and that man too. He lived you know. He's been asking about you too. Hell... they've all been pestering us about you. Especially that movie gal though. She's real interested in you.\"\n\n\"I was lucky to be there to help them. Couldn't save them all though.\"\n\n\"That you saved that guy was enough. He and those women will never forget you that's for sure. You got a thing for her do you J.W.? She's right pretty.\"\n\n\"NO.\"\n\nEven I could tell I answered too fast. I felt like a school boy suddenly. All embarrassed about the girl and someone ready to talk to me about it. I looked over some stuff on a table as if I was uninterested, but Emma saw right through that immediately.\n\n\"Uh huh. You DO have a thing for her. Well, she's right pretty that's for sure. She's also very, very interested in you too, that's a good sign.\"\n\n\"Stop Emma. Really, don't go there.\"\n\n\"J.W., you need a woman.\"\n\n\"No. No man 'needs' a woman. They might want a woman, or do some things better with a woman around, but need? Priests or Monks don't 'need' women.\"\n\n\"I won't say anything about your particular choice on that statement J.W., but you are wrong. Very wrong.\"\n\n\"I'm doing all right without a woman and have been...\"\n\n\"No you haven't.\" Emma started to unload on me then. \"You've been an angry young man with a chip on his shoulder ever since that young gal left you for that doctor. She was never a good woman for you anyway, and that doctor is probably wishing he'd never met her by now. You however, are free from her and have a chance at picking a good woman. That actress is a good one to grab, I'll tell you that.\"\n\n\"An actress? No way.\"\n\n\"She's human. She's beautiful. She's also rather well off. She has heart, which is more than I can say for you\"... she teased.\n\n\"What? I thought you were my friend Emma. You're not being a good friend at the moment ...\"\n\n\"Yes I am. J.W., you need someone and this little gal from Hollywood may be the one for you. It's high time you moved on.\"\n\n\"Yeah right, like she'd be interested in me. I'm a fuc... a damn hermit.\" I barely caught myself from saying what I was about to spit out. \"I like my life just as it is. She dropped out of the sky in a burning jet and I helped. That's all. She has no interest in me other than I helped her out when she had no choice, no other options. THAT'S ALL.\"\n\nEmma was smiling as I answered and then I realized she was looking over my shoulder at something or someone behind me.\n\nHer voice came from behind and as I heard it I started to melt. She must have walked inside as I was talking. \"A hermit? You're no hermit J.W.. You're a master craftsman. I have two of your table sets in my houses, and I recommend your work to all my friends in Hollywood too. I do have an interest in you as well. You saved my life, Janice's life, and Paul's life too. We all owe you.\"\n\n\"You don't owe me anything Lucy. Really. I was there, you needed the help...\"\n\n\"You didn't have to. I know you don't like most people that come here for the views and 'experience'. I know that you live it every day. I know also that under that crusty image you try to convey to the world there is a man with a heart of gold...\"\n\n\"Look, you don't know squat. I'm glad you and your friends made it okay, and that your life is going on just like you want. I'm happy for you. I have to go.\"\n\n\"What's the matter J.W.? Scared of a girl?\"\n\nShe moved to stand in such a way as to block my path.\n\n\"I'm not afraid of no girl. As a matter of fact I'm not afraid of much anything...\"\n\n\"You're running away and haven't even got what you came to get yet.\"\n\n\"Decided I didn't need it that bad.\"\n\n\"Oh really? You're not running away from me then? Really J.W.?\"\n\nShe moved closer to me. Her look became softer somehow. \n\nI looked into her eyes and knew that was a mistake. She could see into my soul now. I saw her stance soften just a bit as she dipped her head slightly to one side twirling her hair with her fingers. I stood there, like a big dummy.\n\n\"J.W. I want to thank you for all you did. That was a rough day, a rough few days. You didn't have to help yet you did all you could. Thank you.\" One of her hands reached out to touch my chest.\n\nMy voice was rough, my need to 'cover' gone.\n\n\"Yeah... it's all right.\"\n\n\"So, how are things at the cabin in the woods?\"\n\n\"Same as usual. Lived in.\"\n\n\"Could we come home and visit you sometime then?\"\n\n\"I suppose. Not sure what you'd like for food, so when you come bring along what you'd like to eat and I'll fix it up for you the best I can.\"\n\nI could smell her perfume and it was entrancing me.\n\n\"Will you be home on Saturday?\"\n\n\"This Saturday? Yeah, I suppose.\"\n\nI was feeling things I had worked out of my system over the long winter months, or so I thought. Something about her wording was bothering me too.\n\n\"Could I... we... come home Saturday? Maybe sleep over, if that's all right?\"\n\n\"Uh... yeah... sure.\"\n\nI was way off step. She had caught me off guard and now I was swimming with sharks as far as I knew. Her repeated mentioning of my place being 'home' threw me. She had fluttering eyes and all that stuff women throw at a man when they want something their way... and I was powerless to resist. Hell, I suppose she could have asked me to go jump off a cliff right then and I'd have done it.",
        "Her rapid fire questions kept me off balance, and trying to answer them made me not think about what I should have been thinking about, mainly, keeping away from women.\n\n\"That's wonderful. Janice and I will be there. Paul too, maybe. He's not here right now, but he's due back in tomorrow. You can show me... us... around home when the weather's not so bad and we're more in shape to see it from your eyes.\"\n\nShe had me nervous. She sounded like she was all about 'me'... like her hints were leading to something that I hadn't experienced since... her. My former fianc\u00e9 that was. Now I was doubly worried. This wasn't what I'd been expecting if and when I ever saw Lucy again. \n\nI had thought that her 'summer camp' fever would be gone and she would have woken up to the real world... at least her real world. It appeared that maybe I might be mistaken - just a bit.\n\nShe seemed happy to see me, even kind of giddy. Almost like a school girl with a crush. Yet, I was acting like the school boy, so I guess we were even in that respect. Still, what would a girl like her want with a guy like me? We were worlds apart.\n\n\"Well, when you're ready to come out, tell Jacob or Emma and they'll get someone to run you out on the boat. Of course you could get a float plane too, as that's quicker. Joe's Flight Service is right over there by the beach. They'll fly you out in under twenty minutes.\"\n\nI moved to point out the window at Joe's Flight Service office which brought me very close to her. Too close. I caught the smell of her as I stepped in nearer.\n\nI looked into her eyes and saw something there that scared me, yet made me feel good all at the same time. Suddenly our heads were moving towards each other, and they weren't that far apart to begin with. \n\nHer warm breath caressed my cheeks as I leaned down a bit and just as our lips were about to touch someone started coughing loudly. A female someone.\n\n\"Hey you two... none of that now. There are too many eyes and ears around here.\"\n\nJanice was standing there with a huge smile. I jerked back quickly, turning away from Lucy, knowing that I'd wanted to kiss those lips so bad. She was a woman, I was a man, and it was a gut thing. I didn't care that she was some famous person. At that moment it was just two people, a man and a woman... testing the waters. \n\n\"How are you Janice? Looking pretty good, that's for sure.\"\n\n\"Not nearly as good as you two love birds.\"\n\n\"Janice that's not true. He was just showing me where the float plane place was.\"\n\nLucy pointed off in the general direction of Joe's Flight Service.\n\n\"Oh was that what that was all about then?\"\n\nJanice was in fine form. Her firm barb caused both Lucy and me to blush. I didn't like it that Emma and Jacob were right there too, eating it all up.\n\n\"Yeah.\"\n\n\"So, if I were to ask J.W. about a Flight Service he'd point off in that direction for me too? Just like he did for you? So close that we could kiss?\"\n\n\"Of course. Perfectly normal.\" Lucy answered while looking off at something on the wall.\n\nJanice stepped in close to me, causing Lucy to move to one side.\n\n\"So J.W. where's this flight service joint at anyway?\"\n\nI could see the merriment in her eyes. I knew that as I pointed at it I'd come a bit closer, but that it wasn't necessary to come as close as I'd done with Lucy. My red face became crimson all over and down my neck.\n\n\"Why J.W. the way you're blushing makes me think that you just realized that you didn't need to get quite so close to Lucy a minute ago. Go ahead... point out this flight place.\"\n\n\"It's over there.\"\n\nI quickly pointed, knowing that Janice wasn't going to look or didn't really care. I could hear Emma and Jacob and now some others standing in the background snickering.\n\n\"J.W., you're about six feet away from me right now and pointing at that place and I'm right where Lucy was standing too. Why is it that you had to step in closer for her and not for me?\"\n\n\"She wasn't being an ass.\"\n\n\"Oh my. I'm an ass then?\"\n\nJanice tried to look hurt.\n\n\"Look, I get the message... okay?\"\n\nShe finally let me off the hook.\n\n\"Don't get angry J.W. I was just teasing.\"\n\nLucy had moved over beside me and hooked her arm in mine. I could smell her hair and she smelled too good. Janice was smiling at us.\n\n\"Maybe we should just leave you two lovebirds alone for a bit. Get that mushy stuff out of the way.\"\n\nJanice had a glint in her eyes when she said 'lovebirds'.\n\n\"We're not love birds.\" \n\nMy voice surprised me in how cold it sounded at that moment. I surely wasn't feeling that way inside. \n\nLucy looked up at me and then moved away. Janice quit smiling and started to try to apologize.\n\n\"I'm sorry J.W....\"\n\n\"Stop. Janice, all I was doing was pointing to the flight place, that's all.\"\n\n\"Oh. Really?\"\n\n\"Yes Really.\"\n\n\"Then you weren't going to kiss Lucy then?\"\n\n\"Uh... no. I was just a bit close and...\"\n\n\"Your heads were moving together. I'd say there were only a few scant inches between them. Your lips were about to touch, both of you know that too.\"\n\n\"Well...\"\n\n\"Janice... please. J.W. was just being nice and...\"\n\nLucy was trying to help me out.\n\n\"You two were at each other's throats the last time you were together...at first. Then when you came back to L.A. Lucy, you pissed and moaned at everyone about life and things in general like never before. I also know that you were trying to find out things about this part of Alaska and in particular, J.W. too. Neither of you can say that you don't like each other a bit more than a little. Matter of fact I'd say you two have the extreme hots for each other.\" Janice calmly explained.\n\nI moved back and then trying to avoid anymore confrontation I started to walk out of the store.\n\n\"J.W.... stop right there. You, young man need to turn around and explain yourself to the young lady.\"\n\nEmma put her foot down. Hard.\n\nTrapped! She was blocking my escape. I had no choice unless I was to shove her aside and I could see that would be a hard task at that moment. I surrendered. \n\nLooking into Lucy's eyes I saw fear and something else there too. Hope maybe?\n\n\"Uh... Lucy...\"\n\nI couldn't say it. I wanted to say something, but I wanted to say the 'right' thing. I just didn't know the 'right' thing to say in this situation. Lucy started to push things by stepping in close to me.\n\n\"Yes J.W.?\"\n\nShe actually batted her eyelashes. I was lost.\n\n\"Uh... I'd sure like it if you came out to the place this Saturday...\"\n\n\"I'll be glad to. I mean... Janice and Paul have been talking and talking about your place ever since last fall. We've missed it.\"\n\n\"You were only there a few days.\"\n\n\"But you took care of me...us. You saved us. You...\"\n\n\"I was just in the right place and at the right time... that's all.\"\n\n\"And you helped.\"\n\n\"Yeah... I helped.\"\n\n\"And I owe you for that.\"\n\n\"No. You don't.\"\n\nShe stepped closer. Our faces were so close that once again I could feel her warm breath on my cheeks and I didn't want it to ever leave me.\n\n\"Thank you.\"\n\nSoftly she said it. So softly I almost missed it.\n\n\"You're welcome.\"\n\nHer lips touched mine and my arms naturally went around her body to hold her close to me. Suddenly she was kissing me harder and her arms were tightly holding me to her too. My tongue slipped out without my realizing that I'd done that... yet her lips parted and accepted the invader as if welcoming me.\n\nSuddenly I felt hot breath on my right cheek. Glancing over I saw Janice with her face inches away.\n\n\"Hey you two... my turn next.\"\n\nBlushing, Lucy and I pulled apart though I could tell she didn't really want to. Neither did I for that matter. Janice stepped into my arms and kissed me sweetly on the lips. No tongue, just lips.\n\nShe pulled back and smiled at us both.\n\n\"Well, I see how I rate now. With her it's tongue and caresses...with me it's lips alone. I'm hurt. Nay, slain that you won't love me like you do the fair Lucy.\" She said theatrically.\n\n\"Janice.\"\n\nLucy wasn't smiling now. I could see that she was getting a bit edgy with Janice's teasing.\n\nI tried to lighten things up a tad.\n\n\"It's all right. Janice is right. We shouldn't have kissed like that to begin with. After all, you don't really know me, nor do I know you that well Lucy.\"\n\n\"Oh J.W., you have a lot to learn about Miss Lucy, that's for sure. She's been digging and digging all winter. Yep. She's hired people to dig up information on you like you wouldn't believe.\"\n\n\"What?\"\n\n'Janice... stop... please.\"\n\nLucy was blushing and giving me a frightened look.\n\n\"Oh yeah. She's been trying to find out anything and everything she could about you J.W.. I think it's because she's in love. With you.\"\n\nLucy had tears showing in her eyes. I felt bad for her. Janice was pushing hard and I wasn't sure what was teasing and what wasn't. I had a hunch that Janice hadn't said anything that wasn't true.\n\n\"So? Lucy is entitled. I mean, she can find out whatever she wants about me. My life is pretty much an open book. I'm not hiding anything, that's for sure.\"\n\n\"Oh? How about your feelings for one particular lady then?\"\n\n\"Damn Janice, you come on like a hurricane when you decide to, don't you?\" I said.\n\n\"Well, I happen to know that you're unprepared for just how much Lucy has focused on you. To be fair I think you need the warning. Just in case you really don't want some woman hanging around your place all the time.\"\n\n\"JANICE!\" Lucy almost shouted.\n\nLucy was about to cry. I felt for her. I was blushing at the realization that I was the point of interest in someone's life like this. Someone that I found myself wishing was more in my life. Someone that had made me forget all about that woman that had thrown me over for the doctor.\n\n\"Janice, enough. Look, I think I like Lucy a lot more than a little bit. I'd like to get to know you more Lucy, I really would... but I'm just me. I'm not rich, famous or a man about town. What you have seen and what you see is exactly what you get.\"\n\nGlancing around I could see familiar faces taking this all in. Obviously Emma and Jacob were beaming like lanterns over this too. I think Emma was happy that someone had finally broken through my defenses and made me want to be more than a hermit.  \n\nThis was all happening so fast. It was the wrong place and as far as I was concerned, the wrong time to be talking this stuff. After all, we hardly knew each other at all. Five days and some hours didn't make for enough time for what I was getting into. \n\nI moved back a bit and turned to leave. As I turned I left the invitation open for them still.\n\n\"I'm not one to discuss things this personal in front of others. I'm not a public figure or the type of person that wants the whole world to know so much about me. If you all want to come out, come on out anytime. I'll be there. I recommend the flight service over across the way for speed. I've got to go.\"\n\nAs I walked down the dock I glanced back one time. I saw Lucy and Janice on the porch of the store arguing. Emma and Jacob were standing on the steps smiling and they both waved at me. They'd never waved at me before... not like that. I almost missed seeing Amber as I stepped onto my boat. She was coming out of the store. I never saw her inside, so my thoughts were where was she while Lucy and I were talking? \n\nThe whole incident that day reminded me of grade school in many ways. The old, 'do you like her, she likes you' thing. I hadn't liked it then and I really didn't like it now. Even though I missed her, I found myself hoping that she'd get too busy to come out and leave after the filming. I didn't want complications, and I could tell that being a part of Lucy's life would be one huge complication. \n\nSaturday morning bright and early I heard the float plane as it flew over. I watched it bank hard to the right and lose altitude. I knew that I was about to have company, but not who or how many. \n\nThe floats cut into the mirror like water, making it churn and toss to and fro. As the beaver slowed in speed, I could see the pilot working the controls, steering for shore and my dock. It was Joe himself. He had to be in his seventies by now...still flying. I wondered about why he was the one flying them out here, because it made no sense since he had seven pilots working for him.\n\nAs the plane docked, I grabbed a line and tied it off. Joe climbed down, opening up the passenger compartment door. Janice was first off, followed by Paul. Lucy was last off. She looked around, as if she were afraid that she'd never get to see it again, until she saw me standing on the dock.\n\nHer eyes danced with fire as she strode towards me. The last few steps she ran and as she closed in, her arms went out to pull me to her. Hugging me close she kissed my cheek. That soon became a lip to lip kiss with heat and passion like I'd never felt before.\n\nJoe cleared his throat...\n\n\"Ahem. I'll be leaving off here shortly. What time do you want to be picked up tomorrow Miss?\"\n\nJanice turned and smiled at the old man.\n\n\"Well Joe, I suppose anytime around four in the afternoon will work for us.\"\n\n\"Okay then. Four it is. Will you be taking back any fish or game with you?\"\n\n\"I doubt it Joe. Lucy might have some big ol bear she'll want to drag along but other than that...\"\n\nLucy broke away from me.\n\n\"Janice... damnit!\" she said stamping her foot.\n\n\"No, we won't have anything other than ourselves Joe.\" Janice quickly countered.\n\nOld Joe looked over at me, smiled and then waved off. Untying the plane he shoved it off as he jumped up onto the steps leading to the plane's cabin. Joe was pretty spry for a seventy-some-odd year old man.\n\n\"See ya all tomorrow then. Take care young ladies... you too young man. J.W. I'll see you around.\"\n\nThe beaver coughed to life and he taxied out onto the water. I saw him smile and wave. The thunderous roar of the rotary engine drowned out any other sound for a moment until the plane went airborne. We all watched the sun reflecting off the wings as Joe banked the plane sharply and headed back towards home.\n\nPaul stepped up and shook my hand.\n\n\"I'm glad I'm finally able to meet you standing up. Thank you for saving my life last winter.\"\n\n\"You're welcome. Come on up. I'll take your suitcases Lucy.\"\n\n\"I'll haul my own stuff, thank you very much.\" Lucy insisted.\n\n\"Let him help you Lucy. Really, I think you like to argue more than any woman I've ever known.\" Paul interjected.\n\nPaul had a look in his eyes that was teasing yet serious. Lucy looked at him, blushed and then gave up the larger suitcase to me. Janice laughed out loud.\n\n\"You should have been up and around way back when, Paul. You could have gotten peace and quiet out of them much faster than I did.\" Janice slipped in.\n\nLucy glared at Janice.\n\n\"Janice, don't make me forget that we've been friends longer than dirt.\"\n\n\"Oh Lucy, you know I'm teasing. Lighten up. By the way, can I kiss your boyfriend too? I need to thank him like you just did.\"\n\n\"HE'S NOT MY Boyfriend.\" Lucy struggled to maintain her composure. \"I was just glad to see him, that's all.\"\n\n\"Good then you won't mind if I do this then will you?\"\n\nWith that, Janice moved into me, hugging me tightly. Her lips found mine as she locked them tightly to me. I felt her tongue pushing in between my lips and I allowed it to do whatever it wanted to do in my mouth. Janice kept the kiss up for a longer time than I was prepared for. I finally dropped the suitcase I was holding and hugged her back a little before trying to separate us. \n\nAs we parted I saw a look in Lucy's eyes that boded dark things. I wasn't sure but it appeared to me that Lucy was jealous. Very much so as a matter of fact. I briefly wondered why, but the moment passed and we headed up the path to my cabin.\n\n\"You girls can have the big bed, Paul you can have the other bed in there. I'll sleep on the couch.\"\n\nI pointed out the bedrooms to each of them, knowing that Lucy and Janice already knew where they were. \n\n\"We don't want to put you out here J.W.\" Paul offered. \"I can sleep on the couch.\"\n\n\"No. Take the bed Paul. It's no big deal. Hell, I sleep on the couch more often than not lately anyway.\"\n\nI didn't see the look Lucy and Janice gave each other. I really wish I would have. I never knew how much I gave away with that little statement until later. Sometimes one says things that seem all innocent to them but others can read volumes into. This was one of those times.\n\nWe spent the morning talking to each other about each other, catching up on life since the big wreck. I noticed that Paul and Janice seemed to be close... very close. At times I was sure he was going to take her in her arms and kiss her thoroughly, but they kept apart. I also noticed that Lucy seemed oblivious to the tension between them. It made me wonder.\n\nAfter a homemade lunch of Salmon salad sandwiches that I made, I gave them the nickel tour of my property. The last part that I allowed them to see was the 'point' as I called it. It was a flat clear piece of ground at the highest point on my property. The view from there was magnificent and always took my breath away. It was about three hundred feet directly above where I'd been eating my lunch that cold, wet stormy day they dropped into my life.\n\n\"Why didn't you build your cabin up here? It's so beautiful and the view is magnificent.\" Paul expounded.\n\n\"A building up here would ruin everything about this place. It deserves to be kept as is. I may one day put in a bench or something over there by that Sitka Spruce, but there really shouldn't be anything else up here.\" I reverently replied. \"It's the best meditation place in Southeast, in my opinion.\"\n\n\"Meditation? You know about meditation J.W.?\" Lucy looked shocked.\n\n\"Well duh. I meditate often as I can. The weather can be a bit reluctant to give up at times... but everything about this spot calms me.\" I smiled as I answered her. I wanted to show her she hadn't offended me. I could see by the look on her face she never dreamed I'd do something like meditate.\n\n\"You continually surprise me J.W.\" Lucy replied. \"Oh look, I got bars on my cell phone. This must be a hot spot. Cool. I'll be able to come up here and call out or receive messages.\"\n\n\"That isn't an all the time thing Lucy. It comes and goes. I doubt you'd be able to get out let alone get messages in.\"\n\nLucy seemed disappointed. I was too. I mean, this view was the best I had to offer showing them my property, and all she was concerned about was cell phone reception?\n\nAs we turned to head down to the cabin I looked out over to the bay and noted a small skiff cutting in towards my dock. There was one lone person aboard it, and they seemed to be intent on the landing. It was rare that I'd have visitors, especially unannounced. I was curious as to who was coming to see me... or were they here because of Lucy and company? I guessed I'd soon find out.\n\nLucy took my arm as we started back down the trail. \n\n\"You know, we could put in a cell tower up here and get reception all the time I'd bet.\" Lucy sounded a bit excited.\n\n\"Why in the hell would I want a cell phone tower on my property? It would mess up the views, and bring a kind of technology that I don't want here.\" I was short with her, but the idea of a tower up there irritated me to no end. \n\nLucy looked like a deer in the headlights and it took until we were nearly at the cabin before I realized she'd said 'WE' could put in a cell phone tower. It caused me to begin thinking seriously about Lucy and me and any kind of relationship we'd have. I think she was planning on taking over my little place and me too. \n\nThe person on the skiff was walking up the trail to my cabin as we stepped up on the front porch. It was Amber and she was carrying two large salmon. \n\n\"Hey J.W. I thought you'd like some fresh caught salmon. Caught these about an hour ago. Oh... you have company. I'm sorry.\"",
        "\"Amber... thank you. If you want, we could have a salmon bake this afternoon. Can you stay and share with us?\" I was curious. This was a first for Amber. She'd never shown up like this, alone, before. I was also certain she'd known I wasn't alone today too. After all, she'd been in the store that day that Lucy and I met up again.\n\n\"That sounds good. I don't want to interfere though.\"\n\n\"You won't be interfering... Amber is it? I'm Lucy...this is Janice and Paul. We're just visiting here for a couple days. J.W. invited us out.\" Lucy broke into the conversation between Amber and me, while taking my arm in hers. \n\nAmber was cool, and collected, though I thought a saw a spark of something in her eyes as Lucy took my arm in hers. I began to re-think my invitation now. It was too late, and Amber was already walking up the stairs into my cabin. Lucy's grip on my arm had tightened as Amber strode past us. Janice was almost laughing while holding Paul's hand and Paul had a smile on his face as he looked at me. I was going back in my thinking and wanting to be alone again. Life was getting complicated.\n\nI entered my cabin and Amber was over by my sink. \n\n\"Hey J.W., do you have a fillet knife? I'll fillet these bad boys and get them ready for you to bake.\" She smiled at me as she flopped the salmon up on the countertop.\n\nI handed her the knife and stood back. Lucy, Janice and Paul all stood around Amber as she started to fillet the salmon. I knew that Amber had worked at the canneries on the fish line during her high school summers. She was very quick, efficient, and deadly with that knife. \n\nShe filleted both salmon in a matter of a couple of minutes. Literally, one minute per salmon. I was always amazed at her skill. She'd leave the guts and skin all in one connected piece, removing just the filleted meat. I noticed that Lucy had a 'yech' grimace on her face... as a matter of fact, so did Paul and Janice too. \n\nI was looking at Amber when I realized that everyone was now looking at me. There was a moment... I think it's called a pregnant pause, before I got the conversation going again.\n\n\"Amber worked at the canneries in high school. She's had a lot of practice filleting salmon.\" I was hoping the conversation would pick up now. \n\nLucy was staring at Amber then at me... a look on her face I couldn't quite make out. Janice was looking at me and then Lucy, her look was nearly the same as Lucy's. Paul was smiling while trying to not laugh out loud. Amber was looking at me in a very intimate and personal way. \n\nThe conversation was still dead. I was getting very uncomfortable. Nobody was even trying to talk.\n\n\"So... how about I get the barbeque going? Paul... could you give me a hand please?\"\n\nPaul turned to look at me before nodding his head affirmative. We walked out onto my back deck where the built in barbeque was. The three women stayed inside - talking, I supposed.\n\n\"You have your hands full partner.\" Paul was pointing out the obvious to me.\n\n\"Yeah. I'm not sure what I should do either.\" I replied.\n\n\"Well, seems to me you have three choices J.W.. You can accept that Lucy is very interested in you and pursue her. You can accept that sweet young Amber is very interested in you too, and you could pursue her... though I think you've got her caught hook, line and sinker already. Or...\"\n\n\"Or what smart guy?\"\n\n\"Well, you could run and jump on your boat and get the hell out of Dodge...so-to-speak.\"\n\nHe nailed it in three. All three possibilities had crossed my mind in the past few minutes.\n\n\"What would you do?\" I was curious.\n\n\"Well, if I weren't already hooked on Janice, I'd probably be going after Lucy... only because I know her and what her life is in L.A. and we know the same groups of people. Were I you with your background, I'd probably jump for Amber. She's level headed, at least from what I've seen of her, and she's used to living like you do, you know... wouldn't change you too much maybe. Sometimes one needs to stay with the normal for them, I suppose. Of course, you'd probably do well with Lucy too. She's changed since last summer... a lot. You are a large part of the change in her too. She's been acting far differently than ever before. That alone means quite a bit. In other words... you're on your own partner.\" He smiled at me as I struck the match to the charcoal in the grill.\n\n\"Thanks a lot. You're right though... it's all up to me in the end, no matter what. That boat is looking tempting right now, though.\"\n\nPaul laughed out loud. He was a pretty cool guy, I thought. He knew me pretty well to know that I'd need to work things out on my own, yet he spoke of alternatives too. He didn't seem to be wishy-washy either. Not quite what I expected from a Hollywood type.\n\nI had an idea now though. The day had opened my eyes somewhat to where I was, where I wanted to be, and who I really needed in my life. My biggest worry was how the other person would take what I had to say. No matter what I did, it appeared that I'd be hurting someone. For a moment I seriously thought about the third choice Paul had mentioned...could I make it to the boat without being caught?\n\nDinner became a very interesting jousting match. It all started when Lucy asked Amber if she was going to go to college.\n\n\"So Amber, do you plan on going to college this fall?\"\n\nAmber glanced up at Lucy before answering.\n\n\"Probably not. My dad is a guide and I'll probably break into that. Follow the family business all you know.\" Amber smiled as she finished up.\n\n\"I'd imagine that you could take some business classes that would help your father in his business though.\" Lucy seemed intent on finding out something specific from Amber.\n\n\"The University of Alaska offers business courses online. I've been taking them already. Besides, my man lives nearby so I want to be able to see him as much as I can.\" Amber glanced at me as she responded to Lucy.\n\nPaul and Janice looked at me and both were smiling. I could see in their eyes that they want to burst out laughing. It was obvious that Lucy and Amber were being civil to each other only. They both seemed to have a common agenda, and that seemed to be me.\n\n\"Well, it would be good for you to get out and see the world honey. You know, you could find out that there are other things that would be better for you in the long run.\" Lucy seemed to be gathering some kind of point together.\n\n\"I've seen the world...honey... and I know what and who I want in mine.\" Amber's eyes were fixed upon Lucy now, and the look wasn't pleasant. The 'honey' had come out dripping with sarcasm and ice cold.\n\nLucy kept pushing... like I'd found she was prone to do.\n\n\"But a girl as young as you could learn so much by going to a good university and getting a degree in business or something. Why limit yourself to this little part of the world?\" \n\nAmber looked right at me as she replied. \n\n\"Look Lucy, we both know we want J.W.. We both are willing to fight for him. You're not going to convince me to go off somewhere and leave him so you can swoop in and claim him. Besides, I know I love him. I've loved him for years, just as he is. He's all I want and need in a man.\"\n\nI was stunned. I never saw this coming, let alone Amber making a stand over me like this. I was at a loss for words. Janice and Paul were both moving back in their chairs, obviously ready to get in between Lucy and Amber when needed.\n\n\"Look Amber, I'm older, more J.W.'s age. To begin with, it would be far better for him to be with someone closer to his age. I'm also quite wealthy so he'd never need anything. I'd give up a lot to be with J.W. and I'm willing to do a lot too.\"\n\nAmber was looking dangerous now. I kept remembering her filleting that salmon with the oh so sharp fillet knife.\n\n\"Well...Lucy...I imagine that you'd try to make J.W. into something to fit your image before you'd allow the world to know you had 'found' someone. I can see you trying to re-build his cabin or possibly bringing in a construction crew to build a mansion here. You'd probably be off making movies most of the year while he'd be here all alone with nobody to love him or show them he's first in their life. I'd bet that you would refuse to have any kids until it was all planned out to precise times too. Then you'd probably insist on having nannies and such to take care of them instead of being a real mom.\" Amber calmly spoke. \n\nLucy looked more and more furious as Amber went on.\n\n\"Well, you know that when someone with a career like me has kids they have to plan everything out. I have agents, producers and investors all relying on my being there to get the job done. I make the money I do by being there, not off in some hodunk little part of the earth playing earth momma to a bunch of snot nosed kids!\" Lucy lost it. \n\nJanice jumped up and came around to pull Lucy out of her chair and force-marched her outside. Paul looked at me, all the mirth was gone now...he had a sad smile as he got up and headed out the front door, away from Janice, Lucy, me and Amber. \n\n\"I'm so sorry J.W. I didn't mean to get her so upset. I did mean to claim my territory though. I won't apologize for that. I'll leave now... I don't think I should stick around after this.\" Amber looked as if she were about to cry.\n\nIt hit me right then... I'd been ignoring it for a long time, but I knew now what had been bothering me about Lucy. She thought she loved me, and maybe she did in her way, but the real truth was that her career would always come first and foremost. I'd always be second run for her. Amber, on the other hand, was putting me first in her life. She was going to avoid leaving the area so that she could continue to try to get me to fall in love with her.\n\nThe problem was that Amber didn't know that I couldn't fall in love with her now. I'd never be able to fall in love with her in the future either. I realized, right at that moment that I couldn't fall in love with Lucy because I was already in love with someone else. \n\nAmber.\n\nI loved Amber.\n\nAmber stood up to leave and I stood with her. Reaching out I took her into my arms. Her tears started as her head touched my shoulder. Hugging her tightly I kissed the top of her head.\n\n\"I'm so sorry J.W. I always seem to mess things up right when I'm doing real good with you. I just love you so much and...\"\n\n\"Shhhh. Listen Amber, you go straighten yourself up, dry your eyes and make yourself presentable. I'll talk to Lucy and the others for a bit and then you and I need to have a long serious talk. Okay?\"\n\nI kissed the top of her head once again and sent her off to my master bathroom. Turning and walking outside I found Lucy and Janice talking. As I walked up Janice stepped back from Lucy and gave me a serious look.\n\n\"Stick around close but let me have a minute with Lucy please Janice?\" I asked.\n\nJanice walked off a ways to sit on a log by my deck. Lucy was looking at me, tears in her eyes. This was going to be one of the most difficult things I'd ever done to date. It had to be done though. \n\n\"Lucy, we need to talk.\"\n\n\"I know. J.W., I'm sorry. I think I know what you're going to say and you're probably right...you and I won't work out in the long run. I do love you, you know. I really truly do. I just can't walk away from my life though. I need what I do to feel human. I need to be where I am too. I can also see that I wouldn't be good for you and you wouldn't like being Mr. Lucy anything. You're a man's man and you need to feel like you are the most important thing to your wife. Me, well for me, my career has to come first. I think it'd be best if we just called in and had Joe pick us up later today.\" Lucy had tears running down her cheeks now. \n\nI felt badly, but she hadn't said anything that I wasn't thinking or that I hadn't thought of over the winter. The only surprise to me was my discovering that I loved Amber in 'that' kind of way.\n\nI hugged Lucy to me, being careful to not invite something more. She hugged me back and then as we broke apart by mutual consent, she leaned forward and kissed my lips softly. It was more of a friend's kiss rather than a lover's kiss.\n\nLucy motioned to Janice and they both walked around the cabin towards the front, probably to see Paul.\n\nI turned around to see Amber standing in the doorway looking out onto the back deck of the cabin. She looked sad and lonely. Motioning to her I waited as she walked slowly up to me.\n\n\"Your parents know you are out here?\"\n\nShe looked into my eyes with a bit of confusion. \n\n\"Uh, mom knows I was going to come out. I mean... I told her I wanted to come this way to do some fishing.\"\n\n\"So, it's kind of late for you to make the trip back by boat. Do you want to fly back in with Lucy, Janice and Paul?\"\n\nAmbers head snapped up as she looked into my eyes. I could see reluctance and fear in them.\n\n\"I'd have to fly back with her?\"\n\n\"It wouldn't be that big of a chore Amber.\"\n\n\"You have no idea. J.W., I love you, I really do. I know that Lucy has a lot more to offer you than I do...\"\n\n\"Amber, stop. Do you know why Lucy is leaving today instead of tomorrow like she planned?\"\n\n\"Uh, no.\"\n\n\"Because we both came to a realization about life and us.\"\n\nHer eyes fell to the ground as I imagine her heart was too. \n\n\"Amber, she knows now, as do I, that she and I wouldn't ever have worked out. She also knows now that I love someone else.\"\n\n\"Someone else? You love someone else? WHO? Who do you love J.W.? I thought it was between me and that woman only. Who is it? Is it that Janice woman?\" \n\nI almost laughed as her eyes grew fire in them so quickly.\n\n\"Nope. Not Lucy. Not Janice and certainly not Paul. Nope, the woman I love is standing right here in front of me.\"\n\n\"What?\" Amber looked confused.\n\n\"Amber, what I'm trying to say is that I realized today, this afternoon in fact, that I love you. I really do. So if you want to fly back to town with them you can, or you could stay here with me.\"\n\nAmber jumped up and hugged me tight. Her legs wrapped around my body, locking onto me firmly. Her lips were all over my face as she kissed me again and again. Pulling back she looked into my eyes with her tear filled ones.\n\n\"I love you J.W., no matter what.\"\n\n\"I love you Amber. No matter what\"\n\nShe wasn't letting go of me, so I supposed I'd better get used to carrying around an extra hundred pounds give or take. It felt good though. It really did.\n\nWe saw Lucy, Janice and Paul off. There were no real hard feelings between any of us, but there was the sad realization of something that wasn't going to happen. As soon as the Beaver lifted off in flight I turned to Amber.\n\n\"So, do you think you'll want to call your mom and dad and let them know you won't be home tonight... and where you'll be?\"\n\nI was curious if she'd tell them exactly where she was. This was the big step for her as an adult and for them as parents. It was also a huge step for me. If Amber chose to stay the night with me I wasn't so sure that we'd be in separate beds. I also knew that I was going to open up my home and heart to this young woman...totally.\n\nI wondered what her mom and dad would say...or think?\n\nAmber rang and told them where she was staying. Her mom's response when she found out that her only daughter was going to be spending the night with an older man you might wonder? She said, and I quote, \"Well it's about damn time.\" "
    ],
    "authorname": "curious2c",
    "tags": [
        "romance",
        "alaska"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-self-sufficient-hermit"
}