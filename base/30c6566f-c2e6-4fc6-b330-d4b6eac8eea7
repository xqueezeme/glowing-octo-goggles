{
    "title": "Thank Fuck for Lab Accidents Pt. 02",
    "pages": [
        "It's been a week and a half since the accident, and some stuff has happened: \n\n-The doctors and the professor still has no clue why my skin color changed, or if the mixture is safe. Apparently it deteriorated before the professor could analyze it. I still have no bad side effects, though seeing auras and reading people's sexuality, fetishes and deviancies maybe would qualify as bad, if I told them. \n\n-When the cops searched the home of the pedo rapist we stopped, they found evidence that he's done it before, he kept trophies, so they are talking about giving me and Emma some medal.\n\n-Oh, and Emma is banging the teacher I found for her, she's with him almost as often as I'm with Chris. \n\nHis massive cock has been in my ass at least once per day since we met, and I can't get enough. It is almost like we are addicted to each other. Last weekend for instance, he went and visited his parents, so we fucked just once in the morning before he left. That night it was really hard falling asleep, my body was missing him so fucking much, and masturbating didn't help, and he called me in the middle of the night because he felt the same. \n\nThe next day when Chris got back late at night, he snuck into my dorm room and we fucked while my roommate Jackie slept in the other bed. I fell asleep with his cock still in my ass, feeling whole again.\n\nThere is no question now that my changed body is affecting Chris. The time it takes him to recover has gotten shorter, his balls, which were already large, have grown bigger and heavier, and his cock head has become pinker and even bigger. We are also fucking so much he has actually started loosing a bit of his beer belly. \n\nWe both have a low study load this weekend, so I came up with a fun challenge for us; to stay naked, his cock in my ass, the entire Saturday, and see how many loads he can fill me with. In preparation I didn't eat solids on Friday, I just drank water and had some soup for lunch and dinner. \n\nIt is Saturday morning and I wake up before Chris. I gently extricate myself from his body and sneak quietly to the bathroom. I prep a warm Castile soap enema, a quarter gallon. Since every day is anal day now, I have prepped both his and my bathroom with enema kits, some rubberized pillows to make kneeling comfortable, and some scented candles. I lit the candles and prepped my little area for my cleansing moment. \n\nThe soap makes me have cramps, but I set a timer and retain for five minutes. I distract myself by masturbating, though I don't think I can cum like this, the cramps make it too uncomfortable. After the first enema I wash the soap out with a salt solution, also a quart, that I keep in for just a short time. Lastly I fill up the bag completely, the full half gallon, again with a salt solution, to open me up and give me a deep cleanse. This time, since there are no cramps, I actually do cum as I play with my pussy, bite my lip and pinch my nipples and enjoy the fullness.\n\nAfter I am thoroughly clean I lubricate my butthole and sneak back into the bedroom. I crawl beneath the covers from the bottom and take Chris's flaccid cock in my mouth. It responds to my ministrations, filling my mouth more and more. I feel his hand suddenly in my hair and know he's awake. He throws the covers off and smiles down at me, and I smile back at him, or try to, as I have his cock halfway down my throat. I take him all the way just once and nuzzle his bush, just as my way to say good morning. This day is about my ass though, so I stop myself, even though I love tasting his seed. \n\nI crawl the rest of the way up his body and kiss him eagerly as his hands trail down my back. His hands soon find their way to my ass, and I moan into his mouth as he pushes two fingers deep. He fingers me slowly as we make out, opening me up. \n\nI move to my knees, resting my head and shoulders on the bed and reach back with both hands to spread my ass for Chris's tree trunk. He spits into my slight gape and rubs his fat cock head from my bush, across my clit, my lips, and rests it against my pucker. He leaves it there, just moving it slightly, teasing me for a while. I can't stand it, I need that stretch, so I push back, and with a deep moan the head is inside me. \n\nNow Chris finally takes control, he grabs my wrists and lock my hands behind my back. He spanks me a few times, making me squeal, and pushes in deep, filling me to my core. He grabs my curly auburn hair at the nape of my neck and starts fucking me with long, hard strokes. After just a few strokes I cum hard, I fucking love it when he dominates, owns my body, my ass like this! Chris fucks me through the orgasm, my as clenching around him, and I cum again and again, his balls slapping my cunt. \n\nHe pulls up on my hair and arms, lifting my body so I am standing on my knees. He wraps his arms around me, one hand on my throat, lightly choking me. He fucks me with short, stabbing thrusts, his thighs slapping my ass, and I feel him swelling inside me and he growls. When I feel his load filling me I cum so hard I get tunnel vision. \n\nWe fall forward on the bed and Chris takes my hands in his and kisses my neck, my ear, my cheek as he slowly keeps fucking me. I arch my back to get him deeper, and he starts fucking me faster again. He slips a hand under my body and starts working my clit, and I start cumming again. I love the weight of his body on me, not being able to move as I'm taken, as I cum. My ass is milking his cock again and again as he keeps fingering me. He nibbles on my ear and moans, and I feel him swell and fill my butt again. \n\nWe roll over so we are spooning, and turn on some music on the Bluetooth speaker on the nightstand. We switch between listening to the music and talking, all the while Chris casually plays with my tits, his semi plugging me. It is distracting and I start wiggling my hips, trying to get more stimulation without really thinking about it. \n\nHis cock starts growing and soon we are slowly fucking again. We take it slow this time, and Chris lets his fingers trace over the pale sections of my skin. He knows how sensitive it is, and he builds my orgasm slowly, not touching my pussy. He traces the line from my bellybutton up my stomach, my chest, my neck, my chin, my lips, the tip of my nose, the oval around my eye, over and over. He returns his fingers to my mouth, and I lick them and take them into my mouth, and taste my pussy juices still lingering.\n\nMy lips are so sensitive that sucking his fingers is enough to finally push me over the edge, and I cum as his cock is lodged deeply in my ass. We continue fucking slowly for a long while, until Chris grips my hips and starts thrusting roughly, jackhammering my ass. I cum hard again, and he swells and fills my ass for a third time.\n\nWe kiss and relax for a while, catching our breath before rolling out of bed. Since I am so much shorter than Chris he wraps his arms around me and carries me to the kitchen. We laugh and giggle as he carries me around and I direct him as I make a late breakfast for us, his half hard cock still in my ass. We eat scrambled eggs and sausage, and drink OJ and coffee as I sit in his lap. \n\nWhen we are cleaning up he suddenly bends me over the counter, grabs my hair and starts banging my ass hard. I grip the ledge and moan and take it. I cum hard again and again, his balls slapping my cunt wetly, my juices running down my thighs, my ass sloppy with his three loads. I loose track of how many times I cum, it feels continuous, and suddenly Chris moans and I feel him fill me again. \n\nHe lets go of my hair and helps me stand. He hugs my body close. After a moment I continue cleaning. \n\nWe sit down on the couch with our phones. I check insta, and he plays some strategy game while toying with my nipple. After maybe 20-30 minutes I feel him growing in me, so I put my phone away, put my feet up on the couch on either sides of his thighs, and start riding him. At first Chris is content just toying with my tits and letting me set the pace, but after a while, he grabs my hips and starts thrusting. He bucks his hips up as he lifts my body up and down, slamming into my ass fast. My hands move to my tits and I pinch, twist and pull my nipples until I cum hard. He doesn't let up the pace, and sets of another series of multiple orgasms. Suddenly he rolls us over so my hips are against the armrest and he pounds me with short, deep thrusts until he we cum together. \n\nWe move back to the couch, spooning this time, and I see that it's only noon, and he has already filled my ass five times! I can feel his seed deep within me, and I love how slutty and, I don't know, owned it makes me feel. I can't help myself, I start playing with my pussy, slowly masturbating as Chris holds me, as his cock softens inside me. I finger myself first with one, then two, then three fingers, my palm rubbing my clit until I finally cum. My orgasm makes my ass milk his cock, and it awakens once again. He fucks me slowly, his cock creating a bulge in my stomach, distending it, and we watch as it appears again and again, while I still finger my pussy. He puts one hand on the bulge and lets me suckle the fingers of his other hand. We fuck for a long time like that, I cum once every few minutes, until finally he fills me again.\n\nChris pulls a blanket over us, and we take a nap as I suck his thumb.\n\nAfter the nap we slow-fuck spooning on the couch again, though this time neither of us touch my pussy, and I experience only those deep, pure anal orgasms that leave me quivering and weak. When he gets close he rolls us over and fucks me hard, prone on the couch, his thighs outside mine, almost sitting on my thighs, and he gets nice and deep. I feel him swell again and I cum as I feel the rush of his seventh load. \n\nAfter this we realize we need to take a break, as I need to pee and Chris needs to take a dump. We waddle to the bedroom and I kneel on the bed. Chris takes the plug and I clench as hard as I can as he pulls out and quickly pushes the plug in his place. He scoops up the droplet that spilled and feeds it to me, so it is still in me, and not wasted. I suck the cum, lube and ass juices off his swollen, half hard cock, and feel utterly debauched. As he is on the toilet I wiggle the plug and work my clit to give myself a quick orgasm with the taste still in my mouth. \n\nChris jumps in the shower as I pee, and when I am finished I join him. We wash each other, enjoy each other's bodies, before I kneel down. I turn him around and kiss his thighs, his cheeks, before spreading them and pushing my face into his hairy crack. He jerks and yelps in surprise when my tongue makes contact, but is soon moaning and bending over for me as I rim him for the first time, and I feel so nasty and sexy. \n\nAfter a few minutes I turn him around and take his cock in my mouth. I suck him slowly to full erection, occasionally taking him all the way into my throat. I wet a finger in my pussy and circle it around his pucker before pushing in, making him moan. I curl my finger towards me, and push on his prostate, and he gets really hard in my throat. I work him like this for a few minutes, timing my fingering with my deepthroating, as my other hand massages his balls. Chris's movements are getting more erratic so I force myself to stop. His load belongs in my ass!\n\nChris has a wild look when I stop and bend over to all fours, he squats behind me, pulls the plug out and starts fucking me so god damn hard it's almost scary, and it hurts so good! He is gripping my hair in both hands like reins, his balls are slapping my pussy so hard it stings as he rides me, and all of a sudden he plunges deep and bellows as he cums hard, and I scream as I cum with him. \n\nWe dry off, and I ask him if liked what I did. He mumbles something as he blushes, but then nods. \n\nA while later I get an idea, and ask to go to the bedroom, where I find my purse. I dig through it and find my old plug, the small one from before the accident, before meeting Chris. I show it to him and asks if he wants to try it. Again he murmurs, but nods. I don't know why he's embarrassed, I guess he thinks it makes him less of a man or something, but I really don't get how he can think that with his cock up the ass of a girl he has just pumped his eighth load of the day into. I apply some lube and hand it to him. He reaches behind, and suddenly I feel his cock twitch in my ass, and know it is in. He starts playing with my tits, my pussy as I turn my head and kiss him, I guess he needs to reaffirm his straightness. He gets fully hard again, and I kneel on the bed, and he starts fucking me as he fingers me. I cum fast and hard, and keep cumming as he works three fingers deep inside. The additional tightness and the plug in his ass is too much and he cums fast and hard. \n\nWe return to the couch after he removes the plug and we lay there watching a bad movie, laughing at the shitty acting and bad jokes. Halfway through Chris gets hard in me again, and we let the movie run as we slowly, casually fuck. I think he fucks me for 45 minutes before he cums. \n\nWe realize we are both starting to get hungry, so we order a pizza and some jalape\u00f1o poppers before starting the next movie. \n\nHalf an hour later Chris has just gotten hard again when there is a knock on the door. We panic for a moment, then grab a blanket that I hold up with my arm pits as Chris picks me up and carries me to the door. The pizza boy looks a bit confused that we open the door hugging and wrapped in a blanket, I don't even think my feet are showing. Just as I ask it if is a busy night, as I try to play this of as normal, Chris flexes inside me, making me moan mid-sentence. The pizza boy blushes but hands over the pizza and then the bag of poppers, and without thinking I grab it with the other hand, and the blanket drops, and suddenly I am nude with a cock in my ass in front of a complete stranger. I squeal, kick the door shut right in his face, and then both Chris and me burst out laughing. \n\nWhen we put the pizza in the kitchen his erection has wilted, so we sit down and eat. We giggle over the pizza guy's expression and how ridiculous that situation was. We eat with utensils since I refuse to get jalape\u00f1o in my pussy from either of our fingers. You only make that mistake once.\n\nAfter we are both full we go back to the couch and keep watching the movie, and Chris soon starts fucking me slowly again. I reach between my legs and massage his balls, and after a while they pull up towards his body, and we cum together. \n\nAs the end credits are scrolling by we decide that an even dozen is a good number to end our experiment on, but I want to go out with a bang. We move to the bedroom, and I lay kneeling with my shoulders resting on the bed and start fingering my pussy as Chris reinserts his butt plug. I start with two fingers, but soon add a third and then a fourth as I feel the now hard cock in my ass start to move in and out. I almost get distracted by the pleasure, but I focus and tuck my thumb into my palm and push. Suddenly I am incredibly full, and I cum so fucking hard as my hand is now inside me. Chris moans at the new tightness around his shaft and starts fucking me faster. I curl my fingers into a fist inside me and try pushing deeper. Soon I am stopped by my wrist against my pussy, against my clit, and I start fucking myself with short strokes. I cum again and again, it is so fucking amazing to be filled so completely! Chris fucks me faster and faster, and starts raining down slaps on my ass. I love that mix of pleasure and pain. He grips my hips hard and pumps hard in short, spasmic thrusts as he fills my ass with the last load of the day. \n\nAfter we calm down we waddle to the bathroom, with a pitstop in the kitchen to drink water and grab a measuring cup. I kneel in the shower and Chris places the cup beneath my asshole as he slowly pulls out of my well used ass. I feel the warm, thick cum start flowing out of me in a slow stream, then Chris pushes two fingers inside and spread them, gaping me, drawing it out faster. I bear down, and actually feel a stream flow. I get turned on doing something so slutty, dirty, that I play with my clit and moan as the cum just keeps flowing out of me. I cum, mostly from the situation, the sounds and the feelings, both physical and mental. When the flow finally sputters to a stop we look at the volume, and he has shot almost 6 ounces inside me! \n\nI dip my fingers in it, and it is still so warm from my body. I lick my fingers just because it feels so nasty, dirty. Chris asks me to kneel and arch my back, and he pours the cup down the ditch of my spine. It pools at my lower back and runs down my waist, and I feel his hands spread it across my skin, up over my stomach, my tits, and back to my ass. Chris fingers my butt using his cum as lube, working my g-spot from behind, I squirt as I cum and I truly feel like a cumslut. \n\nWe shower again, and spend the rest of the evening doing our separate things before going to bed. To both our surprise Chris gets hard as we spoon, and since I am a bit sore I slip under the covers and blow him as I gently work my pussy. I fall asleep with his thirteenth load warming my belly.\n\nThe next morning, after Chris fucked my still tender ass, we went our separate ways. He wanted to hang with his friends, and I went for a 6 mile run before meeting up with Emma, my roommate Jackie and a two other girls for lunch. I haven't met the other two, Mackenzie and Maddison, or the M&Ms, since before the accident. They are a pair of bubbly red headed identical twins and share a dorm, and are of course super close, finishing each other's sentences and so on. I never suspected they were more than that, but the way their auras match and extend towards each other make it clear something is going on between them. \n\nMy accident is of course the first topic. They think I look cool with my two tone skin, and surprise me and run their fingers over my neck and chin, making me let out an inadvertent moan. In a flash I see them making out, grinding, 69ing, fingering, fisting, fucking. M&M giggle as I blush, and I have to explain that that skin is really sensitive now. I have a hard time seeing them the same way after that vision, but it explains a lot, like why they never seem to date.\n\nJackie has an odd aura too, and as I get up to go to the toilet I touch her. I see her all covered in shiny latex touching herself in front of a mirror. Wow! It's the first time I see someone's desire not involve anyone else. She is so demure and repressed, I've never seen her be even remotely sexual, but that vision was fucking hot. She is a tall, willowy brunette, and could probably be a model if she wasn't also so extremely introverted. \n\nWe part after a few hours, some shopping and coffee. Me and Jackie start heading back towards our dorm, but I take us on a detour trough the town. I steer us to the local sex toy shop, the good one, not the seedy one by the tracks. Me and Emma have been there a few times and they are very well stocked and professional. \n\nJackie is really hesitant to go in, but I tell her it will be fun, and that I'm going in anyway as I need more lube. I finally convince her and we head inside, and I hold her hand so she doesn't bail. I pick up a few bottles good silicone based lube and head over to the anal toy section. I look for a while before picking a big metal plug with an anchor base for me, and a p-spot vibrator for Chris, since he seemed to like it. Jackie looks with big eyes at the plug, and I tell her, \"Chris is so big I can only take him all the way up my butt, and I really love it.\" I take her over to the dildoes and point to one of the largest dildoes. \"It's like that one, but with a bigger head.\" \n\nJackie is shaking her head as I lead her on, and says under her breath, \"I didn't even know that was possible...\" I don't know if she is talking about the size or taking something like that in the butt, but I don't ask, because we enter the second room, the one I brought her here for. Her eyes grow huge, and I actually hear her whimper as she sees the fetish clothes section. She slowly wanders up to a shiny latex covered manikin, her hand raised as she reverently runs her fingers over it. ",
        "I let her revel for a minute before I clear my throat and say, \"I think we found what you like?\" She nods, and then blushes and looks away. \"Do you want it?\" Again she nods but then says, \"Father would go insane if he saw this store on the credit card, I can't.\" I can see a tear forming in her eye. I think for a while before I reply, \"Hey, what if you transfer money to my account, and I buy it for you? You can say you forgot your card and I paid for course literature for you.\" Jackie suddenly hugs me and whispers, \"Thank you\" in my ear. It is the first time she has ever hugged me even though we have been roomies for 3 years. \n\nI convince her to get a remote controlled vibrator and a magic wand as well, so she can really enjoy herself all sealed up. We walk back to the apartment substantially poorer, but smiling and eager. Before we left the store I used their bathroom, and now I feel the heavy metal plug inside me, shifting with every step. I call Chris and he can drop what he's doing and pick me up in half an hour when I tell him my ass is horny and missing his cock. \n\nAt the dorm Jackie steps into the bathroom to change into her catsuit. I don't hear the door lock, she must have missed it in her excitement. I can't help myself, I turn on some music to cover any sounds, then I push the door open slightly and watch as she strips in front of the mirror, oblivious to her audience. I have never caught more than a glimpse of her naked before, she always hides her body in loose clothes. Her body is absolutely spectacular, really perky and round tits, narrow waist, defined but not cut abs, long shapely legs and a tight round ass. She has old scars on the side of her ribs, and I guess that might be a reason she doesn't want to show her body. \n\nI feel myself get wet, well, wetter, as she works the balls off her new toy inside her bare, very puffy pussy. I'm surprised that she is waxed. She unpacks her suit gently, and her hands are actually shaking, and she has tears in her eyes as she smiles. Jackie starts applying a lubricant to her body to be able to slip into the suit, as the clerk suggested.\n\nI suddenly remember Chris is on his way, so I text him to come in quietly, without knocking. \n\nJackie has now slipped into the jet black suit. She moans as she closes the zipper all the way from her ass, between the legs, her tits, to her neck. She puts on the matching latex socks and finger gloves, completing the look. She looks like a sex doll as she gazes at herself lovingly in the mirror. \n\nDamn, I am a good matchmaker!\n\nI hear Chris open the door, so I put my finger to my lips to keep him quiet, then I wave him over before turning back. He comes up behind me and looks over my head and gasps. I feel his immediate boner against my back as we witness Jackie slowly explore, love her shiny self. She is meticulously applying a shiny polish to every inch she can reach, making her look wet and slick. Her hands soon focus on her breasts, her stomach, her crotch. She starts quivering, and sinks to the floor as she cums, and it looks so erotic, so cathartic. \n\nI whisper to Chris, \"I need you to fuck me right the fuck now!\" And close the door gently before bending over on my bed. I feel him lift my skirt, pull my soaked panties down below my cheeks, then I hear the clinking of his buckle. He pulls the heavy, thick plug from my ass, and replaces it with his spectacular dick once again, making me cum fast and hard. \n\nThank fuck for lab accidents!"
    ],
    "authorname": "Mr_Owlow",
    "tags": [
        "cum enema",
        "enema",
        "fisting",
        "huge cock",
        "latex",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/thank-fuck-for-lab-accidents-pt-02"
}