{
    "title": "Little Packages Ch. 03",
    "pages": [
        "Ben\n\nMontreal - One week until Christmas\n\nI got off the train at Montreal Gare Centrale and there was no redheaded pixie throwing themselves into my arms. Which was to be expected. As far as she was concerned I was arriving at five o'clock tomorrow afternoon, where she would be waiting to pounce on me. Instead I was sneaking into town the night before.\n\nI made my way through the station, rolling my suitcase beside me, heading in the direction of the taxi stand. I wondered exactly how pissed off she was going to be when she found out I did this. We hadn't seen each other in three weeks and she was already pretty cranky with me. Even the patented \"firm daddy voice\" had only taken some of the edge off her bad mood.\n\nIt couldn't be helped. She had final projects and exams. She had to do well on these things; it was a non-negotiable aspect of our relationship. But I was still worried. She sounded so miserable last weekend. School stress, I suspected those bitches in her class were still making her life difficult, and she relied so heavily on being little when she was stressed. I felt like the worst daddy in the world.\n\nI got in the cab and gave him the name of the hotel I was staying in. I knew Ashley could be strong when needed; it was just a matter of remembering to tap into that at times other than when she thought I was being threatened.\n\nMy phone vibrated. I texted Ashley earlier this evening to wish her luck on her exam, so I doubted it was her. I checked my screen - Meg.\n\n\"Still on for Monday?\"\n\nAfter my weekend in Montreal, I was flying down to Toronto to see some friends before Christmas. From there it was a flight out of Pearson Airport to Vancouver to see my parents. Ashley, to her mild disgust, was heading back to Saskatchewan to spend the holidays with her mom. Neither of us was particularly happy about the situation. It was a lot of running around and we weren't looking forward to it. If we were being honest and selfish, we both would have preferred to just spend the holidays at my house and ignore family obligations.\n\n\"That's the plan. I arrive late that afternoon.\" Meg was putting me up for a couple of nights, saving me from dealing with Toronto's ridiculous hotel rates.\n\n\"The timing of your arrival is raising questions.\n\n\"People are curious why you aren't coming in tomorrow to hang out for the weekend.\"\n\nGod forbid any of them reach out and talk to me directly. But most of them were still nervous around me. I'd lost more than a few friends over the last two years because of my 'behaviour'. I was probably about to lose some more. In the meantime, they were still nervous about chatting to me directly. Meg was acting as an intermediary, something she had mixed feelings about.\n\n\"Look at them, being all clever,\" I replied.\n\n\"Ben, are you sure you're ready for this?\"\n\nWhich was Meg's polite way of asking \"Are you still a goddamn lunatic and having sex with that girl?\" My trip to Toronto wasn't about telling them who I was with, but it was about laying the groundwork so they wouldn't be completely scandalized in a few weeks time. It was hard to turn back after I did that.\n\nIt sounded ok in theory. I had doubts the reality of it would work. \n\n\"Absolutely. What's the worst that could happen?\"\n\n\"How quickly you forget,\" came the answer almost immediately.\n\nFair enough.\n\n***\n\nNear Kingston - Seven weeks earlier\n\nI was dimly aware of bouncing happening on my bed. I'd taken a few painkillers the night before, which I hated doing. They made me groggy as hell the next morning. But if there was ever such a thing as an absolutely justifiable reason for hurting your knee, fucking my teenage girlfriend against the side of a church was right up there. \n\n\"Perfectly legitimate reason,\" my doctor would say. \"Here, have a crate of painkillers, just in case there's a next time.\"\n\nThe fact that sentence seemed funny to me made me aware that I was going to wake up silly, which happened with painkillers sometimes. But there are worse ways to wake up than having my cute little girl bounce on the bed to wake me up.\n\nRight up until the moment she loudly whispered \"Ben, you have to get up.\"\n\nBen. Not daddy. \n\nShit.\n\nI pulled myself slowly out of my coma to see Ashley kneeling on the bed next to me. She was wearing my apron and nothing else. If it wasn't for the look of panic on her face, she would be good enough to eat.\n\n\"What's wrong Ashley?\" I managed to get out.\n\n\"Your friend Meg is here. In the kitchen. And, um, she might have seen my ass,\" she said.\n\nI've never had an adrenaline needle to the heart, but I imagine it feels something like being told by your half-naked teenage girlfriend that your late wife's best friend is waiting for you in the kitchen. I can't recommend the experience, but it'll focus you in a goddamn hurry.\n\n\"Ok,\"I said, sitting up and getting out of bed. I began looking for clothes and quickly threw on a t-shirt and some pj bottoms. I looked at myself in the mirror. I looked like a wreck. But there was nothing to be done about it. Meg wasn't going to patiently wait while I got a shower and got myself together.\n\nI rubbed my face and then glanced over at the bed. Ashley looked stricken, like she had just turned me into the cops or something. I walked over to the bed and kissed her on the head.\n\n\"It's going to be ok, Ashley,\" I said. \"It's just Plan B.\"\n\n\"Are you in trouble?\"\n\nThe previous refrain went through my head - half-naked teenage girlfriend. Late wife's best friend. Oh, I forgot to add she was a divorce lawyer, so she was absolutely getting her cross-examination all prepped while I was in here. I wasn't in trouble; I was totally fucked.\n\n\"It'll be fine, I promise. She'll give me some shit, but I'll explain things to her,\" I said.\n\nAshley looked skeptical, probably because I wasn't awake enough to lie properly yet. I told Ashley she should get dressed and hang out here while I chatted with Meg. I started to head towards the door when a thought hit me. \n\n\"Did you say my 'name' when she startled you in the kitchen?\"\n\nShe shook her head. \"I squeaked and then said I'd get you. I didn't say,\" and here she adorably staged whispered \"The d-word.\"\n\nSmall miracles, at least. I said that was good, grabbed my cane, and headed towards the kitchen to start my trial.\n\nWhen I walked in Meg was sitting on one of the stools by the island in the kitchen. She'd thoughtfully poured herself a cup of coffee and was eating a piece of my sourdough bread with some jam. I said nothing and went over to get a cup myself. She was going to get the first shot in, I just had to be ready for it.\n\n\"You better hurry up. If you don't rush you're going to be late dropping her off at Sunday School,\" she said.\n\nThere we go.\n\n\"It must have been hard sitting there waiting for me to get dressed knowing you had that zinger ready,\" I said. I took a hard pull off the coffee hoping it would help focus me. I leaned back against the kitchen counter. My knee was throbbing so I'd like to sit, but I wanted some distance between the two of us. It gave me the illusion of being safe.\n\n\"Just tell me she's legal, Ben. Please tell me that.\"\n\n\"Oh, for fuck's sake, Meg. Of course she's legal. She's 19, almost 20. Do you want to inspect her driver's licence?\"\n\n\"When is she turning 20? Two years from now? She looks 17 if you're lucky. What the hell is wrong with you?\"\n\n\"You do not get to talk shit about her like that, Meg,\" I warned.\n\n\"I am not talking shit about her. I am trying to figure out if you have yours together. And you don't get to be indignant with me. You simply don't. Two years of keeping you together and preventing you from doing something stupid. Two years of that, most of which wasn't easy. Some of this gray is all yours, Ben,\" she said, holding out a strand of her hair.\n\n\"So tell me what color hair dye you're using and I'll send you a monthly supply from my Amazon account,\" I said. \"Will that help pay off the debt?\"\n\nDamn it, damn it, damn it...this was going all wrong. I could see her seethe. I was grateful for everything Meg had done for me the last two years. I literally wouldn't be here without her. But as soon as she snarked at Ashley, my hindbrain kicked in. I should be calming her down and trying to explain things. Instead I was escalating.\n\nEscalating with Meg was always a bad idea. Because she always had a higher gear she could reach than I did.\n\nShe got up from the island, came around it and crossed the distance so she was standing right in front of me.\n\n\"I assume you met her at the comic con. We were all worried, Ben, that you were going to do something stupid going there by yourself. Some of us thought you might go blow all your money. I was worried someone would say something stupid to you and you'd try to beat them to death with your cane. But I can honestly say none of us had you coming home with jailbait on our bingo cards!\" she yelled.\n\nI was about to tell her exactly where to go when a quiet, firm voice came from off to the side.\n\n\"Enough,\" Ashley said.\n\nWe both turned. Ashley was wearing yoga pants and my Batgirl t-shirt which almost reached down to her knees. She had her glasses on and her hair tossed back into a ponytail. Meg wasn't wrong when she said Ashley looked younger than her age. \n\n\"Look kid,\" Meg started. Ashley cut her off.\n\n\"My name is Ashley. You can start there.\"\n\nThat threw Meg for a second. Only a second.\n\n\"Sorry...Ashley. But this is between Ben and I. I don't know how much he's told you, but he's made some questionable choices the last few years...\"\n\n\"I'm a 'questionable choice'?\" she asked. This was a new Ashley I was seeing. She wasn't little right now. She was locked in and focussed and Meg had already underestimated her twice. I'd never seen Ashley mad, but I suspected I was about to see it. If I'd been more alert or on the ball I would have jumped in, but I was not at my sharpest.\n\n\"Maybe that wasn't the best...\"\n\nAshley walked up to Meg. She was in her bare feet and Meg was wearing those boots that she loved so much. So there was a good seven inches of height difference going on. Having said that, I noticed Meg took an involuntary step back.\n\n\"The second day, when I was trying everything I could think of to get him to see I was crazy about him, he told me about Beth and that the last two years had been a horror show and that he was probably still a big mess and that I should run away.\n\n\"But I didn't, because I could tell the first minute I met him that he was a kind and decent man. He defended me from some bullies and made sure I was ok. I knew that maybe he was banged up and hurting, but under that, he was just a good person trying to remember how to do that again. You've got a few decades on me and I don't see a ring on your finger. Tell me, how much luck have you had finding one of those?\" she said.\n\nJesus. Christ. \n\nMeg looked shell shocked. I genuinely couldn't remember the last time I saw her look like this. Ashley kept going, not giving Meg a chance to recover.\n\n\"He spent part of yesterday figuring out how he was going to tell you we were dating. And I told him he didn't have to do that. It was ok if he wanted to keep me a secret because I can imagine how some people might react to our age difference. But he wouldn't have it. That our relationship was nothing to be ashamed of. He told me that if people were upset that he was happy that said more about them, than us.\n\n\"But you already knew he was dating someone. I heard him on the phone with you yesterday. He thought he was being careful, but he was so happy and you could hear it in his voice. I was so thrilled to know I was partly responsible for that. I bet you knew there was only one thing that could do that. If you were really worried about him you would have been here yesterday afternoon. Instead you waltz in here this morning hoping to catch him in the act.\"\n\nAshley walked away from Meg and sat down at the island. Meg being speechless was a whole new thing for me to absorb.\n\n\"He says you're his best friend. Maybe try being happy for him.\"\n\nThe defence rests, your Honor.\n\nMeg looked at me and I shrugged my shoulders. I'd never seen this side of Ashley before so I had no answers for her. It was blowing my mind. She shook her head and walked out of the kitchen. I heard the door slam.\n\n\"Nobody messes with my daddy,\" I heard her say, and then bite into a piece of bacon. I started laughing.\n\n\"Where the fuck...\"\n\n\"You were doing a shitty job defending yourself, I guess, because you just woke up and I know you're still hurting. And she pissed me off,\" she said.\n\nWe needed to talk about this more, but I also needed to get out and talk to Meg before she drove off and committed vehicular manslaughter all the way from here to Toronto. I walked over and kissed Ashley on the head.\n\n\"Never stop surprising me, Ashley,\" I said.\n\n\"Princess,\" she said, her voice softening, as if whatever fire that had been powering her was ebbing away. I suspected there was some aftercare going to be needed. \"Go. I know you need to talk to her. But don't take any shit from her.\"\n\nI moved with some speed down the hall and out the back of the house, hoping she wasn't gone. She wasn't. She was standing next to her car, smoking a cigarette, trying to figure out what had just happened. I was mildly shocked as I knew she had mostly quit. She saw me and shook her head.\n\n\"You know,\" I said, \"Beth told me you confided in her one time when you were both drunk that even though you quit smoking, you still liked having one after you've been well and truly fucked.\"\n\nHer eyes got wide for a second, then she smirked, did a little nod and flip gesture with the cigarette. It was her little way of saying we were even and she knew the Sunday School quip was a cheap shot.\n\n\"When I saw her in the kitchen, Ben...Jesus Christ I really did think you'd finally lost your mind. I believe you when you say she's 19, but you know she doesn't look it. I was just so mad you had screwed up like this. I really thought this was going to be our breaking point,\" she said. She was upset. I knew she would be when she found out I was dating someone, but this was a shitty way to find out.\n\nI walked around the car and hugged her. She accepted it, reluctantly at first, but then settled into it. Only the very best of friends could upset you to the point where you were ready to kill them one minute and hug them the next. I pulled back.\n\n\"I swear to God, I haven't lost my mind. I know it doesn't make sense, but it honestly works between the two of us. She makes me happy. She's just such a...joyful presence that it's hard to stay down or depressed around her. And, believe it or not, I make her happy as well,\" I said.\n\nShe just shook her head. \"You could have tried online dating, you know?\"\n\n\"Oh yes, me using Tindr. That'll work. How about Christian Mingle?\" I said.\n\nShe snorted a laugh. \"Ok, maybe not.\"\n\n\"Beth was a 100-to-1 longshot. You know that. Dating was never going to work for me. Blind dates and set-ups...god, I was dreading the thought of it. I pretty much figured that being single was just going to be the way it was going to work for me. And then, literally, bam...she ran into me,\" I said.\n\n\"Your parents are going to have kittens over her.\"\n\nI shook my head. \"Oh no. I thought that too. Then I had one of those terrible, terrible revelations. They're going to be shocked for about five minutes and then they're going to figure something out. And then they're going to love her,\" I said.\n\nMeg looked puzzled for a few seconds, and then it dawned on her. She looked horrified.\n\n\"She can give them grandchildren...\"\n\nBeth and I couldn't have children. She had health problems when she was a kid and the doctors told her when she was 16 that trying to have children would likely kill her. As she didn't want any, she was ok with it. So was I when we first started dating. But I had to admit, there were times over the years I had a pang when I saw friends playing with their kids.\n\nMy parents, on the other hand, were crushed when they realized there were no grandchildren forthcoming. I was an only child. They were counting on grandchildren to spoil. They loved Beth, but were always disappointed by her ambivalence towards kids.\n\n\"Ashley's on enough birth control to prevent three women from getting pregnant and she's 19, which means she's not interested in having them,\" I said, conveniently omitting our roleplay where she begged me to get her pregnant. \"But she gives them hope, so that buys me some grace.\"\n\n\"And Helen?\" Meg asked. Beth's mom. A kind, decent woman who lost her husband eight years ago to cancer, who lost her daughter two years ago to a drunk idiot, and her son five years ago to a different kind of idiot when he moved to the States and started wearing MAGA hats. \n\n\"I have no earthly idea,\" I said, truthfully. I hoped I wasn't about to break her heart for a fourth time.\n\nMeg offered no suggestions and not much sympathy. Fair enough. I had to figure this out and deal with it. Asking Meg for advice wasn't fair.\n\n\"So what now?\" she asked, shivering slightly in the chill. She dropped the cigarette on the ground and crushed it out.\n\n\"Now,\" I said, \"we're going to go back into the house, apologize to each other like good Canadians, and start over because you're both awesome and I'd like for the two of you to be...ok with each other. I'm not asking for you to be friends, but I'd like for you to be ok with me being with her and for her to not think my best friend is a bitch.\"\n\nShe took a deep breath and nodded her head. We started back to the house. \n\n\"You never do anything easy anymore, do you?\" she said.\n\n\"Oh Meg, this is the easiest thing I've done in years.\"\n\n***\n\nMontreal - Six days until Christmas\n\nThere's only one sane thing to do when you wake up in Montreal and it's December. It's cold, there's snow, and you'd swear the massive icicles barely hanging onto buildings have been deliberately planted there to get skewer unwary Anglophones. The solution to this cruel reality is to get a half dozen, just out of the oven bagels, good cream cheese, drink a litre of coffee, find a quiet place to sit and enjoy it all, and hope all of that jumpstarts your brain. \n\nSo far, it wasn't working. \n\nToday was supposed to be simple. Once I finished breakfast I'd head to the fabric store and pick up Ashley's Christmas gift. Then it was a couple of comic stories to grab some stocking stuffers. And then a brief meeting with the owner of the business I was taking her to tomorrow afternoon, just to make sure the place looked legit. Surprise her at the College, get hugs and yelled at, and then take her and Gillian out to supper this evening. The finale was getting the one thing we've both been craving the last three weeks.\n\nSounds like a perfect day. But it was also the beginning of our transition. For the last two months, with one dramatic hiccup, we've been able to just enjoy each other. We could run away to my house and just relax and have fun. The rest of the world was outside the bubble.\n\nAnd it was a damn fun bubble to be in.\n\nSo instead of getting motivated and getting my ass in gear, I was daydreaming about what it would be like to be alone with her again, and remembering the last time we were together.\n\n***\n\nTwo weeks after the incident with Meg, Ashley came back to Kingston. While I was dragging supplies out of the car, she marched into the house. By the time I got through the door, she had shed her boots, coat, socks, and was pulling her dress over her head. She tossed it at me and I discovered she'd decided to forgo both bra and panties this trip down. She gave me a very determined look for a naked woman.\n\n\"I decided that I am getting in your bed and not leaving for the rest of this weekend except when I absolutely have to, like to use the bathroom or get clean,\" she said, and then bolted for the bedroom before I could say anything.",
        "She was true to her word, and negotiated...aggressively to get me to serve her food in bed. Although she conceded that soaking in the jacuzzi for an hour was almost like getting a bath, and was an acceptable reason to get out of the bed.\n\nThe last time she came to the house she settled in like she owned the place. She was completely relaxed around me by this point, but said she was also getting more comfortable and confident with her body. The incident at the church and even Meg catching her half naked in the kitchen had given her a moment of clarity. Maybe she didn't have a body like our Amazon friend Michelle, but the one she had was pretty damn sexy.\n\nThat meant she felt comfortable walking around the house in nothing...or next to nothing. So she had dragged all those clothes down from Montreal just to become a nudist. When I pointed this out, she raised an eyebrow and asked if I was complaining. I promptly shut up.\n\nOn this Saturday afternoon we were both in my \"library\". It was the second largest bedroom in the house, and one with a view out the front of the house, which meant lots of natural light. I had a small desk and office chair, a very cozy recliner and the rest was filled with bookshelves and spots for art. I'd always dreamed of a room like this when I lived in Toronto, now I had it.\n\nIt was my favourite room and Ashley loved it too. When we weren't in bed or the jacuzzi, this is where she wanted to be. She felt the living room lacked personality. The library \"feels like my daddy.\"\n\nI was in my chair; Ashley was reading a Red Sonja graphic novel. She was lying on the carpet in the middle of the room, where the sun was shining on her, keeping her warm. She was also naked except for a pair of red thigh high socks. \"They keep my feet warm, daddy\" she said slyly when I asked about them. \"Your hardwood floors can be cold sometimes.\"\n\nShe was facing away from me so I had a clear view of her ass. She would curl up her legs and gently kick them back and forth, pretty much assuring that I wasn't going to make much progress on the book I was reading.\n\nWhich was fine by me. The view out the window was amazing. The view on my floor was otherworldly. \n\nBut apparently I wasn't taking the hint. Gradually her right hand snuck down and slid underneath her. She began rubbing her pussy. Gently at first, and then her legs moved apart and I could see her fingers playing with her clit. Her breathing was also getting quicker. This was my princess's idea of being subtle.\n\n\"That book must be awfully interesting, princess,\" I said, attempting to sound uninterested in what was happening on the floor.\n\n\"Mmmm, daddy. It's a scene where she goes to a brothel and asks for one of everything and they all rush over to take care of her. It's really hot,\" she said, beginning to move her ass around.\n\n\"Really,\" I said, getting up. I pulled down my shorts because I was learning getting fully dressed when she was in the house was a waste of time. \"Would you like that, being taken to a brothel and giving people money and having them lavish attention on you all day?\"\n\nHer breath quickened and her fingers became less precise on her pussy. I grabbed a pillow for my knees and got down ungracefully beside her. Her eyes were closed and she wasn't reading the book anymore. I leaned down, still not touching her, still enjoying the show she was putting on.\n\n\"You could have someone lick your pussy, sucking on your breasts, rubbing oil all over your body. Would you like that, my little barbarian princess?\"\n\n\"Yes, daddy,\" she whispered. \"Would they fuck me too, daddy?\"\n\nI gently touched her side and made her roll over onto her back. She went over with little effort. Her legs quickly reopened and her fingers went back to work on her clit. It was easy to see how wet she was.\n\n\"It depends on how much she was willing to pay for the service,\" I said. I got between her legs and placed the pillow so my knee wouldn't start screaming in 10 second. My cock was rock hard, but I was enjoying the site of her playing with herself and getting herself good and silly.\n\n\"Oh, I'd pay anything for someone to fuck me, daddy,\" she said. She took her hand away from her pussy and grabbed her knees. She looked back at me, flushed and with her eyes glazed. \"I need a cock so bad I'd pay any price.\"\n\nMaybe if I had more patience I could have strung her along for a few more minutes and negotiated a price of some kind for my services. But 'anything' was good enough for me. I took my cock and pushed inside her pussy. We both groaned at the same time. I was never going to get tired of how her pussy felt. Never. \n\n\"You just sold yourself into slavery, little girl. You're mine now,\" I said.\n\n\"Ohhhhh, totally worth it. Own me, daddy. Take me.\"\n\nNever mind with the pink collar still around her neck she was already technically \"mine\". I loved hearing her submit to me again. We continued fucking on the floor, with her pointing her sock covered feet up toward the ceiling. I was mystified why I loved those damn socks so much. But combine them with my little girl's filthy mouth and I was in heaven. \n\n\"Ohhhh, daddy, I really did try to wait and be a good girl and fuck you this evening, but I just needed you cock. I just love fucking you so much!\"\n\n\"That's because you're daddy's slut,\" I said, bending down to bite her neck just above her collar. \n\n\"Mmmmmm, daddy's little barbarian slut,\" she said and giggled. She then took her legs and wrapped them around me. \n\n\"Take me, daddy. Pound your little barbarian slave girl. Fuck me.\"\n\nI removed her hands from around my neck and then pinned them above her head. Then I granted her wish and began fucking her hard. \n\nShe screamed and came almost immediately. I didn't slow down, focusing on fucking her and giving her what she wanted; my cum. \n\nFinally I could feel myself getting close. She was getting close again too. For whatever reason whenever I came in her it would almost always set her off. \n\n\"I'm going to cum, daddy. Cum with me, daddy. Cum with me, daddy...\"\n\nAnd then finally \"Cum in your little slave girl, daddy,\" she moaned. \n\n\"Fuck!\" I cried out, lifting her hips off the ground and filling her with my cum. She came as soon as she felt me shoot inside her.\n\nAfterwards, as she laughingly tried to clean up some of the mess we'd made in the library, she was fake sorry.\n\n\"I really was going to try and wait until this evening. But I guess I'm just a bad little girl, daddy.\"\n\nLike I was going to complain.\n\n*** \n\nI gave myself a little shake to snap myself out of it just so people didn't wonder why I was smiling like an idiot while eating my bagel. I finished eating and decided I couldn't procrastinate anymore. I bundled up and went out to face Montreal.\n\nThe errands went smoothly. The fabric store had what I was looking for and since it was near my hotel, kindly offered to have it delivered there for a small fee. And they even wrapped it, sparing me the embarrassment of trying to do it myself. \n\nI then hit a couple of comic book stories. Buying her books was useless as she was raiding my library and took a half dozen books with her every time she went back to Montreal. But I managed to find a cool looking necklace and earring set that featured the Black Widow's logo, and a Scarlet Witch figurine. A memento of our first meeting together.\n\nFinally I hit the establishment we were visiting tomorrow afternoon. I wanted to see it in person. Just because things looked legit on a website didn't mean it would be in real life. I didn't want to bring a nervous Ashley only to get an unpleasant surprise.\n\nFortunately, Rachelle was there and was happy to give me a quick tour, saying it was a good idea to get a feel for the place before bringing my little girl here. I liked it, it was clean and classy looking. I discussed last minute arrangements and said Ashley and I looked forward to visiting tomorrow.\n\nNow, all I had to do was survive being murdered. I found a coffee shop a 10 minute walk away from the college. Just in case she didn't want her classmate to see her jump the old guy. The place was half busy, but that's all I could do. It's not like coffee shops in Montreal on a cold day are going to be completely empty.\n\nAt almost exactly 3 pm I got a text from Ashley.\n\n\"Freeeeeeeeeee.\"\n\n\"Congrats, princess. You did well?\"\n\n\"Aced it,\" she responded. A pause. \"Wow, the train's wifi doesn't suck today. You're responding quickly.\"\n\n\"Maaaaaybe, I caught an early train. Maybe I'm at that coffee shop you mentioned.\"\n\nNothing. No response for several minutes. I was beginning to wonder if the text had gone through or if she was just pissed at me when I heard the door to the coffee shop open and there was a flushed, out-of-breath redhead at the door staring at me.\n\nI was sitting with my back against the wall. Partly so I could keep my eye on the door, but also because Ashley had the habit of throwing herself at me, and if I didn't have some kind of support or brace I'd be sent sprawling.\n\nShe didn't run at me, but walked with a very deliberate purpose across the shop, pushed the table aside and jumped into my lap. She threw her arms around me, and hugged me hard.\n\n\"You big jerk,\" she said, her voice muffled from being buried in my neck, her scarf and being out of breath. \"I had plans. I was going to go back to the apartment and get pretty and ready to meet you at the train station, and then tease you lots and make you take me back to your hotel room before we met Gillian for supper and now here you are and you screwed it up and I'm so happy to see you I can't stay mad at you.\"\n\nI laughed quietly, just soaking in her being on my lap, trying her best to crush me. I'm sure other people in the coffee shop were looking. Could not have cared less. Eventually I gently pushed her back from my neck, took off her cap and pushed down her scarf and looked at her with a big smile. She was a mess. Her hair was all over the place and she was sweating and flushed. She looked so beautiful I felt my heart ache.\n\nI knew I missed her; of course I did. I felt it every day. But looking at her like this, it was breathtaking how good I was feeling. Intellectually I knew I was falling for her. Had known it for weeks. This was the moment where I realized that it might be more serious than that.\n\nI bent down to kiss her, but she shied away.\n\n\"Noooo, I'm a mess, daddy,\" she said quietly.\n\n\"Yes, but you're a sexy mess,\" I said, and gave her a quick kiss on the lips. She giggled.\n\n\"That was soooo corny, but I don't care, I've missed you so much. We're never going that long again without seeing each other. Promise?\" she said.\n\n\"Ok, I promise,\" I said, having no earthly idea how I was going to manage that, but she was almost impossible to say no to.\n\nThat was when I heard the door open again. A very cranky looking woman came in carrying two backpacks. She looked around, spotted us and came marching over to us.\n\n\"You fucking ditzy redheaded nerd. Here's your goddamn backpack you forgot back at the college when you sprinted over here and left me behind,\" she said.\n\nAshley looked thoroughly mortified. \n\n\"Sorry Gillian. I just got...excited,\" she said, sounded like she wanted to crawl into me and hide away.\n\n\"I'll bet. I could practically follow the scent the whole way here,\" she said.\n\nAshley squeaked and buried her head in my chest. Ashley hadn't been kidding; Gillian spoke her mind all right. I stuck out my hand.\n\n\"I'm Ben. A genuine pleasure to meet you, Gillian,\" I said.\n\nShe paused for a moment, assessed me and decided that I was, at the very least, not a complete asshole. She shook my hand with a grip that let me know that if she decided I was trouble later on she would be able to handle herself.\n\n\"Nice to meet you, finally. She talks about you so much I was considering buying a ball gag,\" she said.\n\nI liked Gillian, but I could tell Ashley was feeling little at the moment. Normally she'd probably bite back and the two of them would banter. But Ashley wasn't in a space to do that at the moment. I shot Gillian a look and, thankfully, she picked up on it. \n\n\"Shit, sorry. Exams were fuckers. I don't think either one of us slept much over the last week. I normally much more ladylike and gentile,\" she said. \"I'm just fried.\"\n\n\"Do you want a coffee?\" I asked.\n\n\"No thanks, I'm good. I had my blood replaced with coffee last week.\"\n\nYeah, I could see why Ashley liked her so much. I gently pushed Ashley back from my chest. She looked dazed. I'd seen her out of it when she was little before, but she was extra out of it at the moment. I wondered exactly how much she'd slept in the last couple of weeks. \n\n\"Look, I came in early to take care of some last minute Christmas shopping and to surprise Ashley. But you both look like wrecks. Why don't you go home, take a quick nap and meet me at that pizza place you wanted to go to at 8. It'll give you some time to recharge.\n\nGillian looked relieved she didn't have to socialize for the next few hours. Ashley wanted to protest and stay with me, but I cut her off and whispered quietly, so her roommate couldn't hear.\n\n\"I know you want to stay with me, but trust me when I say you're about 30 seconds from a complete meltdown, you're so tired and emotional. I should have waited, but I just had to see you,\" I said, which made her smile.\n\n\"So go back to your apartment, get at least 90 minutes sleep, a shower, and then get dressed and show off for me. Ok?\"\n\nMercifully, she didn't argue. \"Ok, daddy.\"\n\n\"Good girl,\" I said, and kissed her on the forehead. \n\nGillian said they lived about 15 minutes away and Ashley seemed to snap herself out of her daze enough that she was ok to walk. I got one last big hug, and they headed out the door.\n\n***\n\nAt exactly 8:15 the two of them walked into the pizza place. When I offered to take them out to supper I didn't think pizza was going to be on the top of the list. But it was a high end pizza place that used ingredients I had to Google to figure out what it was. The price for a medium-sized pizza was also about the same cost as a decent steak, so I figure they both knew what they were doing when they brought me here.\n\nGillian came in wearing a pair of beaten up, salt encrusted winter boots, jeans and a hoodie. Of course, my princess came in wearing knee high boots, some kind of fishnet tights, a red plaid wool mini-skirt and her puffy coat, which she was taking off to show a snug black sweater. Her hair was in pigtails. She looked amazing. Gillian looked frustrated to be walking next to her. \n\nI stood up as they came near the table and Ashley promptly gave me a big hug and a quick kiss. Gillian stood by, looking awkward.\n\n\"This,\" she said, as she slid into the booth. \"This is why I didn't want to come and be a third wheel on your romantic date night.\"\n\nAshley slid inside the booth, sitting opposite Gillian, and then I slipped in. \"Give me a break, you've been wanting to meet 'the old dude you're fucking' for weeks,\" Ashley said, doing air quote. Then she looked at me. \"Sorry daddy.\"\n\nI shrugged. It's not like it was factually inaccurate.\n\nI was glad to see that Ashley seemed like she had her second wind, but there were still dark circles under eyes that even her make-up couldn't completely cover when you got up close. I was wondering if she didn't just try to kill herself through sleep deprivation to make sure her grades remained good so I wouldn't get mad at her.\n\nAshley snuggled into me and rested her head on my shoulder, but continued to chat with Gillian. Their chatter got me caught up on the last few weeks. Exams had been brutal, but they did well on their projects, and they thought they did well on their exams. They sniped at classmates. Whether by agreement beforehand or not, the only mention of Heather and Lesley was that their parents were taking them to Paris for Christmas, and fuck them.\n\nThen the pizzas arrived, and I was reminded that despite her slight frame, my little girl could demolish food when she wanted to. Even Gillian looked mildly shocked at the way Ashley could destroy food. I really did need to ask her if she was eating enough the rest of the time.\n\nThe inevitable happened when I noticed Ashley begin to squirm in her seat. I was about to tell her to go use the damn bathroom, when she finally asked me to move. She scooted out and headed towards the back of the restaurant, leaving Gillian and I alone.\n\nI thought it might get awkward, but she just looked at me and shook her head.\n\n\"I'm not sure if I'll ever understand it, but yeah, the two of you look good together. She's been so much happier the last couple of months, even with those cunts trying to make her life difficult. I knew she was crazy about you, but seeing you together, it works. I have no damn idea how, but it does,\" she said, taking a sip of her beer.\n\n\"I don't know how it works either, but I've learned to just be happy it does,\" I said.\n\n\"But doesn't it bother you? I mean, you've been getting dirty looks from women in this restaurant most of the night. I saw the waitress go over and start talking to one of her co-workers and the two of them were burning daggers into the back of your head. And that's just here. You're not worried about your friends and family?\"\n\nGillian was a lot more observant that I first thought. I'd caught some of what she was saying, and certainly didn't think we had the world's friendliest waitress, but I just assumed it was because she was French.\n\nI picked up my glass of water and took a sip.\n\n\"Ashley's told you what happened to my late wife and that I have a different opinion of what's important in life these days, right?\" I asked.\n\nShe nodded. \"Yeah, but...\"\n\n\"I know, it's one thing to say that, but to actually walk the walk in the face of it is something else,\" I said. Then paused to gather my thoughts.\n\n\"Let's put it this way, and excuse me for going philosophical for a moment, but do you believe there's an order to things, or that it's all just chaos?\"\n\nShe looked more intrigued than confused. \"For life, the universe and everything?\"\n\nAnyone who quotes Douglas Adams was always going to get a break from me.\"\n\n\"Yes.\"\n\n\"Chaos. Absolutely,\" she said. No doubt at all.\n\n\"And I used to think it was all order and structure. Maybe you couldn't see the framework, but it was there, we just couldn't understand it. And then I lost Beth and my worldview did a 180,\" I said, twirling my hand.\n\n\"When you lose everything, it's easier to believe its chaos. I had someone tell me that bad things happen for a reason, and I was like 'fuck that and fuck anyone who believes I deserve to have it happen to me,'\" Gillian said. I don't know how long ago someone told her that, but her anger at it hadn't eased much. Or if it had, I'd hate to be the person stupid enough to tell her that at the time.\n\nI nodded. I'd guessed from things that Ashley told me that Gillian had some bad shit happen in her life growing up.\n\n\"Exactly. Everything is chaos. Has to be.\"\n\nShe nodded.\n\n\"Except...\"\n\n\"Oh, there's no except,\" she said, sounding annoyed. \"You were on my side. My team. Chaos all the way.\"\n\n\"Except,\" I said, interrupting her rant. \"At the moment when I was finally in a place where I was mentally...all right, the universe literally tossed a cute geek at me and bowled me over. The universe gave me happiness and joy again, which is something I wasn't ever sure was going to happen.\"\n\nGillian sat up straighter, getting into it now, finally getting more comfortable with me and the argument.\n\n\"Oh, no no no...that is pure chaos. She's my best friend, but she might as well be an avatar for chaos. You are not telling me that God is trying to make up for taking your wife by giving you Ashley. That's nuts.\"\n\nI shrugged. \"God? Probably not. But maybe what looks like chaos is a framework we can't see. At a comic con filled with tens of thousands of people, in a city of millions in a different country, we meet each other, fall for each other even though we know society will frown on the age gap, and then discover we live only hours apart from one another.\"",
        "Gillian looked like she wanted to rebut, but I added one more point.\n\n\"But the selling point for me was that what if this was it? What if this was the universe's one way of making amends for taking Beth? And I said no because I was afraid people would make fun of me. And then decades from now, I'm alone and bitter and cursing myself for not taking a leap. How could I pass up taking the chance?\"\n\nThe look on Gillian's face showed she was skeptical and clearly thought I was crazy. But she was also amused at the debate.\n\n\"So does the universe give Ashley any agency here or is she just a random thing to be tossed around to make you feel better?\"\n\nI knew I liked this woman. I leaned back into the cushions.\n\n\"You're right. Maybe the universe tossed me at her, because her dad left, and she had a shitty adolescence and she was being bullied at school and she needed someone to help her find her strength and remind her that she's awesome and I just happened to be the closest thing nearby when she needed it,\" I said. \"And then...fling.\" I made an underhand tossing gesture.\n\n\"Oh, you're fucking nuts!\" she said. I laughed.\n\nIt was at that moment Ashley returned to the table.\n\n\"Gillian!\" she said.\n\nI got up from the booth so she could squeeze in, but not before I gave her a hug. I noticed the waitress giving me a death glare, so I slid my hands down to Ashley's ass and gave her a gentle squeeze. She squeaked and swatted me, then slid inside.\n\n\"Why is Gillian being mean to you, daddy,\" she said. Gillian was just about to protest when I intervened.\n\n\"We were debating life, the universe and everything,\" I said. \n\nAshley looked slightly confused, but went with it. \"So did you solve it? Or is it just 42?\"\n\n\"We've agreed that I'm nuts,\" I said, and Gillian cracked up.\n\nThat's when the waitress showed up and asked, in a glacial voice, if we were done and would we like the bill.\n\n\"Oh, we're having a good night. Let's see the desert menu,\" I said. She looked like she'd rather poison us all, but went off to get it.\n\n****\n\nMontreal - Five days until Christmas\n\nWhen I woke up the next morning I had a very grumpy little girl staring at me.\n\n\"You let me fall asleep,\" she complained.\n\nTo be fair, I didn't let her so much as she just passed out shortly after we got back to the hotel. It was close to 11 pm before we left the restaurant and they were both running out of whatever reserves they got from napping this afternoon, assuming they actually did. After some hugs, Gillian promised she'd text when she got back to their apartment and check in once she went back to Northern Ontario.\n\nWe walked back to my hotel, which was about 20 minutes away. I hoped the cold air might wake Ashley up a bit. She insisted she was fine and was trying to be flirty. However, by the time we made it back to my room, and I grabbed a quick shower, she was passed out on the bed. I'd prepared myself that this was the likely outcome this evening when I caught her yawning over supper. Besides, she was too adorable all flaked out on the bed and gently snoring. I gently undressed her and tucked her in. I knew she would be annoyed in the morning, and lo and behold, here I was dealing with a cranky little girl.\n\n\"I wanted you to fuck me last night, daddy. I haven't seen you in weeks and I'm horny. I was looking forward to it,\" she whined. It was almost cute. Since we'd been together she'd almost always been a happy and horny little girl. Sometimes she'd get frustrated or angry. But this was the first time I'd seen her come close to having a temper tantrum.\n\nStill, time to be a daddy.\n\n\"Princess, you were exhausted because you haven't been sleeping enough. You still look tired, do you need to take another nap because you normally do not talk to me like that,\" I said, using my 'grown-up voice'.\n\n\"No, daddy,\" she said, pouting a bit. \n\n\"Ok then,\" I said, getting out of bed, naked. She stared at me and whatever grumpiness she had eased when she saw my cock. She must have clued in that complaining that I let her fall asleep rather than fucking her, was not likely to result in me fucking her now. I reached into my luggage and started getting dressed.\n\n\"Why are you getting dressed, daddy? Come back to bed with you little girl,\" she cooed, and suddenly flopped back on the bed, trying to lure me back.\n\nI walked over to her side of the bed and kissed her on the head. Not what she was hoping for. \n\n\"Come on, go get cleaned up. I know you're going to want a shower. Then we're going to grab a quick lunch and head off to our 1 pm appointment,\" I said, heading towards the bathroom.\n\n\"We're leaving the room?!\" she called out in astonishment. I'm sure she was shocked and confused about why, after not seeing each other for over three weeks I wasn't buried in her pussy already. There's teasing to get her to edge, which makes her silly and horny. I'm sure this felt like some kind of cruel punishment and torture.\n\nI stuck my head back out from the bathroom.\n\n\"Do you trust me?\" I asked.\n\n\"Yessss,\" she said, drawing out to let me know she did, but was reconsidering it based on my obvious cruelty.\n\n\"Get clean, get dressed. Food, and then a surprise. Trust me, you'll like it.\"\n\n\"Fine,\" she huffed, sliding out of the bed and squeezing past me to get to the shower. I mean, it was sort of cute, but obviously I was going to have to punish her later.\n\n***\n\nAshley was still grumpy with me over lunch, but gradually some caffeine, calories and helped snap her out of her funk. She kept waiting for me to tell her where we were going, but I wouldn't and she was too stubborn to ask again. \n\nIt was only after we left the deli and began to wander down the street she finally broke.\n\n\"Ok, ok, I'm sorry I was such a grouch earlier, daddy,\" she said.\n\n\"Apology accepted.\"\n\n\"Now will you tell me where we're going?\" she asked nicely.\n\n\"We are going shopping, princess?\" I said.\n\n\"Christmas shopping? But I thought you said you already picked up my gifts...\"\n\nI turned and looked at her and smiled, then gave her a kiss.\n\n\"We're going shopping for some sex toys, lingerie, and clothing for you, princess,\" I said.\n\nHer eyes got enormous and despite the cold, her cheeks flushed bright red. I wasn't 100% sure if she was nervous, scared or excited about the idea. Maybe it was all of the above.\n\n\"Daddy, you don't have to...\"\n\nI gently pulled on her hand to keep her moving forward. It was about a 20 minute walk. Yes, we could have got a taxi, but the walk would help us talk out what was going to happen next.\n\n\"I know I don't have to, but I think this would be fun for both of us. Lingerie and sex toys are going to be an \"us\" thing. I don't want to get into the habit of buying you lingerie as a Christmas or birthday gift. Yes, I'm giving it to you, but we both know that I'm getting a lot out of watching you use them.\"\n\n\"It's for us, but you're spending the money,\" she said.\n\n\"Yes. And I'm not a sugar daddy, princess, but you are going to have to accept that I just have more financial resources than you do. When I was your age I was broke. It's what happens. I'm not buying you the moon and the stars. But I can afford to buy you a vibrator, a dildo, some new collars and anything else that strikes our fancy,\" I said.\n\nShe thought about that for a few minutes and we continued walking along. It was cold, but there wasn't much wind and the sidewalks at least were relatively cleared.\n\n\"It's a little weird for me. I mean, I'm very sexual, as you may have noticed,\" she said.\n\nI chucked. She blushed.\n\n\"But I grew up in rural Saskatchewan. So it's not like I could go anywhere and get toys or something sexy. The lingerie guys gave me was always crap. And never toys, because I had them, so why would I need a toy,\" she said in a pseudo macho voice.\n\n\"And I couldn't order anything because mom and I were constantly warring so she'd open my mail. Plus, I was mostly broke and it's not like I had a credit card. So by the time I got here, it was just this weird thing in my head. Yes, I had some sexy things to wear, and I've noticed you like me going around in nothing but my socks,\" she said, grinning at me and enjoying me blush a bit. \"But going proper lingerie shopping and getting sexy things, I just had a hard time making the leap,\" she said.\n\n\"So, it's just a little overwhelming for at the moment that you want to do this. I'm processing, but I think I'll be ok,\" she said. Then she stopped and looked at me. She got up on her toes and kissed me, as bemused Quebecois walked around us.\n\n\"That'll have to do as a thank you until later,\" she said, as we continued.\n\nI explained what was going to happen. That I had been at the store yesterday and met Rachelle. That it was a very nice, clean and friendly store and that Rachelle was going to take her around and show her different toys, lingerie and other accessories. She knew Ashley was a little and also liked being a kitten from time to time. She blushed, but I assured her that it wasn't going to be in the top 10 of sex fetishes she was going to hear today.\n\n\"Where are you going to be? And how much are you spending?\"\n\n\"I am going to be having a cappuccino and reading a book at a coffee shop. Rachelle knows the budget, you will not. Nor are you going to see the prices of the things she's showing you. At the end, she'll say that you might have to put a few things back, or if you want something else, you should run and get it. The budget is sizable, so don't be shy about getting nice things.\n\n\"Oh, and I already have a couple of collars picked out, but if you see some you want, by all means add them to the pile. I've also told Rachelle some things I think you'd look cute in. She's going to show them to you, along with a bunch of other things. You'll never know what I've picked out. That way if you don't like it, you don't have to worry about 'upsetting' me.\"\n\nShe shook her head. \"I can't believe you're doing this. I'm not complaining,\" she added quickly, \"But this...thank you, daddy.\"\n\n\"You're welcome,\" I said. We held hands and didn't chat much for the next few minutes until we arrived at the building. I opened the door and we took an elevator upstairs and got off on a floor where there was a nondescript door waiting for us. I opened the door for Ashley and she walked in and stopped, trying to take it in.\n\nTo the left was a table with a laptop on it where things would be added up. There was a small sitting room if partners wanted to hang out and wait. And through a sheer curtain you could see some of the things for sale. Toys, lingerie, bondage gear, costumes and more. I hadn't told Ashley they could make custom corsets, latex outfits, and other items for her here if she wanted. That might be too much for today. That was hopefully another trip.\n\nAt that moment Rachelle came out from the office behind the table and walked over towards us. She had on five inch heels, a very tight pencil skirt and a white blouse. A series of chains went around her neck, with the longest plunging down into her cleavage. She also had her hair up in a bun.\n\n\"Ben, right on time. Excellent. And this must be your little girl. A pleasure to meet you, Ashley. My name is Rachelle,\" she said, holding out her hand for Ashley to shake.\n\n\"Hi,\" she said, suddenly very shy, and hiding a bit behind me.\n\nShe smiled and then looked at me. \"You were right, she is absolutely adorable. It will be my pleasure to be her assistant today. You've explained things to her?\"\n\n\"I have,\" I said. And then I turned to Ashley. \"Are you ok? I know you're nervous, but I'm right across the street and you can text me if it gets to be too much.\"\n\nShe reached inside and found a little well of resolve. She still looked nervous, but a little more determined. \"I'll be ok, daddy.\"\n\n\"Of course you will,\" Rachelle said, holding out her hand for Ashley to take. \"You're about to discover how much fun it is to spend your daddy's money to look sexy. It is the best kind of fun.\"\n\nAnd with that, she took Ashley behind the curtains to start her adventure. I went downstairs, walked across the street to one of the infinite number of Starbucks, grabbed a coffee, and sat down to wait.\n\n***\n\nI figured it was going to be a minimum one hour wait, but was prepared to wait two hours before hitting the panic button. Fortunately Ashley sent me little texts telling me she was having fun. She didn't send me pictures of anything she was looking at or trying on because, I suspected, she wanted to tease the fuck out of me. Mission accomplished.\n\nAbout an hour and 45 minutes in, Ashley texted she was finished. I got up and went back over to the shop. When I went through the door Ashley was sitting across the table from Rachelle and two of them were giggling.\n\n\"Always nice to see my princess so happy,\" I said.\n\n\"Daddy!\" Ashley cried out, bolting from the chair and throwing herself at me. I caught her and managed to stumble back only one or two steps. She quickly wrapped her arms around my neck and her legs around my waist. She buried her face in my neck.\n\n\"I had the best time, daddy! Rachelle was awesome and I got so many fun things. Thank you for taking me here,\" she said.\n\nI kissed the top of her head. \"I always like spoiling my little girl.\"\n\n\"As well you should. All good daddies should spoil their princesses a little bit,\" Rachelle said. \"Show him one of your outfits, kitten.\"\n\nThat was a new name. Ashley disentangled herself from me and modeled. She was still in her bare feet, but was now wearing white stockings that came up a little above her knee with pink bows on them. There was also some bare skin between that and a high waisted pink plaid mini-skirt. Instead of her Harley Quinn t-shirt she left the hotel wearing, she now had on a white t-shirt that read \"Daddy's Princess\" on it in pink with hearts. Instead of the ponytail we left the hotel with, her hair was back in pigtail with flower elastics.\n\n\"Am I pretty, daddy?\" she asked. She was fishing, but I was fully prepared to take the bait.\n\n\"You're the prettiest little girl I could ever dream about,\" I said.\n\nShe grinned. \"Good. Oh, I almost forgot, can I have your phone for a moment, daddy?\"\n\nI unlocked it and handed it to her, curious where she was going next. After a few moments, and a request to let her download something to my phone, she finally finished what she was working on. She handed back the phone to me with an app open.\n\n\"Go ahead and play with it, daddy,\" she said.\n\nI looked at my screen. She'd installed an app that controlled a bluetooth vibrator. It didn't require much imagination to figure out where it was. I placed my finger on the screen and adjusted the intensity of the vibrations. She immediately gasped and began to moan. A quick glance at the screen showed me I had a lot of options to play with. I lowered the intensity, but set it to pulse every five seconds. Then, to her mild horror, I put the phone away. Every 10 seconds the vibrator would pulse inside her pussy and she'd gasp.\n\nI smiled and walked up to Rachelle.\n\n\"She was well behaved?\"\n\n\"A perfect little lady. A little shy at first, she warmed up quickly. I believe you'll be quite happy with her choices,\" she said. In a quieter voice that Ashley couldn't hear, \"She also picked most of the items you selected. All on her own, I might add. She knows what her daddy likes.\"\n\n\"Good,\" I said. Rachelle discreetly showed me a bill that was exactly $2 under my budget. I admired the efficiency if nothing else. I wasn't sure if tipping was what was done in these situations, but I added extra on top of the bill, which she noticed and nodded in appreciation. From behind the counter came four non-descript large white bags with all items carefully wrapped. Along with the receipt, Rachelle also slipped me a card.\n\n\"Should you and your little girl ever wish to...socialize. Just call and mention my name. It'll help get you in,\" she said. I glanced at the card. I recognized it as a swinger club in Montreal. I wasn't sure Ashley and I were there yet, but you never know. I thanked her and said I'd consider it.\n\n\"Daddy,\" came a slightly urgent voice from behind me. \"We really need to get back to the hotel soon.\"\n\nPart of me was tempted to torture her a bit more, but honestly, what she was wearing was driving me nuts. Plus it had been three weeks. We were both restless.\n\n\"Ok, princess,\" I said, and then asked Rachelle to call a cab for us. She and Ashley hugged one more time, and I saw Rachelle whisper something in her ear. Ashley blushed, but nodded her head. By the time we got down to the street dragging all of Ashley's bags, the taxi was waiting.\n\nIt was a relatively short drive from here to the hotel, only 10 minutes. I nonchalantly took my phone out and opened the app, studying it closely. Ashley looked at me apprehensively. I took the vibrator off pulse and began swirling my finger across the screen. Ashley squeaked loudly, slammed her legs shut, and grabbed my hand hard enough to leave fingernail impressions.\n\nFortunately, the driver wasn't paying much attention and had his music up pretty loud.\n\n\"Daddy...\" she growled somewhat urgently.\n\n\"Yes princess,\" I said, swiping my finger up quickly. She levitated a couple inches off the seat for a few seconds, whether because of the force of the vibrator or all on her own, I couldn't say. By the time she composed herself, she was giving me a murderous look.\n\n\"What did you think was going to happen when you gave me control of that toy?\" I said.\n\n\"Rachelle might have...under sold how powerful it is, and I may have underestimated how big a sadist my daddy can be,\" she said. \"And before you get carried away, Montreal cabs have cameras in them.\"\n\nHuh. Fair point. I had no urge to turn her into a porn star for cabbies. I set the toy on a low, steady vibration. Ashley closed her eyes, centered herself and nodded to herself, as if acknowledging this was tolerable.\n\nA few minutes later we arrived at the hotel. As punishment she got out of the cab and said she was heading up to the hotel room to change and could I please take care of the bags. She then skipped through the hotel lobby. Her coat was zipped up, but the skirt and stockings were still drawing plenty of attention.\n\nWhen I finally got all the bags into the room, she was already in the bathroom. She called out and asked if I could leave the bags by the bathroom door. I did so and she stuck her head and a hand out and began rummaging through different bags, pulling out a few things.\n\n\"I'm not getting a fashion show of all your purchases?\" I asked.\n\nShe pulled one last thing out of the bags, and then looked at me and smiled. \n\n\"Tell you what, if you see me in this first outfit and you want a full fashion show, then I will. But I'm betting you're going to be happy to wait for the fashion show,\" she said. \"Just give me 15 minutes to get ready. Make yourself comfortable, daddy.\"\n\nI'd learned at this point that Little Girl Time basically meant adding at least 10 minutes to any estimate she gave me. I kicked off my shoes, and took off my shirt and pants, suspecting I wouldn't need them for much longer. I started to get settled on the bed, when I heard her call out again.\n\n\"Daddy, is it ok if I take off this collar? I want to wear one of my new ones for you,\" she said.\n\n\"Of course, princess,\" I said. I fetched her key from my coat and went over to the bathroom door. A hand shot out and I placed the key in it. Then the door closed shut again. I shook my head and headed back to the bed.\n\nNearly 30 minutes later, I was beginning to get frustrated when I heard the door open. I looked over expecting to see her strut out of the bathroom. Instead, I had to glance down and saw my little girl was now a kitten.\n\nShe came out of the bathroom on her hands and knees, with her head looking down. She was wearing a set of pink, sparkling cat ears on her head. There were slips of white lace barely covering the rest of her. She was wearing white lace gloves that came up to her elbows. I could see a tail hanging from the back of her panties. On her legs were a different pair of white stockings with bows that ended at her thighs. Around her ankles and wrists were pink cuffs.",
        "I found myself struggling to breathe. But she paused part way between the bathroom and the bed and I realized she was probably terrified I was going to laugh at her. We had done some pet play before, but this was a big leap for her.\n\n\"I have the most beautiful kitten in the whole world,\" I said, shifting to the edge of the bed.\n\n\"Meow,\" I heard, with a little tinkling of a bell. Dear god. I got down off the bed, went over to where she was and knelt down beside her. I took my hand and began gently running it back and forth from her head down her back. I could feel her relaxing, and she leaned into me and began making a little humming noise.\n\n\"She's also the bravest, most playful, and sexiest kitten in the whole world and I am so very lucky to be her daddy,\" I said.\n\nShe finally lifted her head up to look at me. She had on a little pink collar with a bell attached to it and a collar running from it. Her eyes were also red and I wondered if she hadn't been in the bathroom having a panic attack and crying because she was scared.\n\nI leaned down and kissed her on her nose. She giggled. \n\n\"Are you ok?\" I asked. She nodded her head.\n\n\"Would you like me to pick you up and put you on the bed,\" I asked. She looked at my knee and raised her eyebrows. \"I can manage, I promise.\" She got up on just her knees and put her hands up. I lowered myself and she wrapped herself around me. I reached down to put my hands under her ass to lift her up. I moved the tail aside and that's when she made a squeaking noise.\n\nIt's also when I found out her tail wasn't clipped onto her panties. It was part of a plug she had put in her ass.\n\n\"Wow,\" I said. I could feel her head burrow into my shoulder. I knew she was embarrassed. I tilted her head back from my shoulder and looked her in the eyes.\n\n\"It's ok. You just always amaze me, Ash...kitten,\" I corrected myself. \"I'll take good care of you, I promise.\"\n\nAnd with that she finally seemed to relax. She pulled me in and kissed me hard, which I returned. I could understand why she was nervous; we'd played and had mindblowing sex, but her clothes and the plug, it was a big step for her. I was going to have to be a very good daddy and take excellent care of her.\n\nI distingagled myself from her and carefully placed her on the bed so as to not jar her tail. She scampered into the middle of the bed and meowed at me. Apparently I was getting fluent in kitten as I stripped off the rest of my underwear and joined her on the bed.\n\n\"So, preen for me, kitten. Let's see what you look like.\"\n\nShe got up on her knees so I could take in the full outfit. The top was translucent white and stopped just below her breasts. There was also a hole in the middle, where more cleavage could be seen. There was more lace around her belly button that connected to straps around her upper thighs. They held up the stockings, but there were also hooks so the cuffs could be attached to them. The panties barely covered her pussy.\n\n\"You are breathtaking, kitten. Turn around. I want to see your tail.\"\n\nShe turned around, with a nervous look on her face. There was a hole cut in the back of her panties and out from it was a bright pink and purple fur tail. I reached down and stroked the tail and she made a little moaning noise. I went down to the base and, yes, the plug went into her ass.\n\nI continued stroking her tail and ass. She closed her eyes, enjoying the sensation.\n\n\"Are you ok? Does it hurt?\"\n\nShe meowed and shook her head, no. She then turned around and butted her head against my chest which knocked me back onto the bed. She grinned, meowed again, and crawled on top of me, rubbing her face against my chest, her little bell jingling, until she reached my neck. She then burrowed her face there and made contented little purring noises. I ran my hands along her back, down to her ass and touched her tail. I enjoyed watching her squirm as I played with it.\n\nWhich is when she nipped at me with her teeth.\n\n\"Ow,\" I said, although it didn't seriously hurt. She bounced away from me, went to the bottom of the bed, shook her hips at me and then looked back at me and grinned. That was a challenge if ever there was one. I shifted on the bed, cut off her areas of escape and grabbed her. She made a very un-catlike squeal and then I began tickling her, which led to more squealing and squirming to get away.\n\nOnce she did, she kept her distance and then pouted at me. I tried not to laugh and petted the bed next to me. She refused at first. I was impressed how much she was getting into her cat play, when she began crawling up the bed towards me. But instead of crawling up to my side, she went between my legs. She had a mischievous look in her eyes. If I was being paranoid I could worry about what she might be up to. Instead, she rubbed her head against my cock and purred.\n\nI was guessing playtime was about to come to an end. I reached down and rubbed her head. \"Good kitty,\" I said. She stared at me and then ran her tongue across my cock.\n\n\"Fuuuuck,\" I moaned, leaning back in the bed. I once went two years without sex. Now, going three weeks without Ashley seemed like an eternity. \n\nShe continued, and there was no other way to describe it, to play with my cock. Her hands never touched me, but she ran her tongue along my balls, then my shaft, a couple of quick flicks along the crown just to make me jump, and then back to work on the rest of my cock. She did this for a few minutes, teasing me, drooling a little bit on my cock, all the while keeping an eye on how I was reacting. She must have sensed I was getting ready to snap, because she quickly took my cock and slid it past her lips and buried it in her throat.\n\nI was reminded of the car ride a few weeks earlier when she was edging in the car and we hit a bump in the road. She told me later she had no idea how she didn't cum. Feeling her lips and tongue go to work on me, it was a miracle I didn't cum in her mouth. I grabbed the sheets, arched my back and groaned.\n\nShe popped my cock out of her mouth for a moment, looked up at me, grinned and said \"meow\" in a sly voice. She then went back to work on my cock, licking and sucking on me like it had also been years since she had last seen me.\n\nIt was also quickly getting to be a little too good. \"Princess,\" I growled out. She released my cock from her mouth and looked at me. I corrected myself. \"Kitty.\"\n\nShe meowed, and then began working her way up my body, kissing, licking and nibbling. I let go the sheets and began running my hands across her back. She made little moaning noises to let me know she appreciated it. Finally, she made it all the way back to the top. She placed her hands on either side of my head and looked into my eyes. I marvelled at everything I could see there. Lust, playfulness, joy. She was completely relaxed into being a kitty. Or a little girl pretending to be a kitty. And as if to prove the point, she leaned over and licked my nose and giggled.\n\n\"Having fun, Kitty?\" I asked. She nodded her head. Then, inspiration hit. We'd been talking about a new name for her as she didn't like Ashley.\n\n\"Princess Kitty would be a good new name for you. What do you think?\"\n\nHer eyes lit up and she kissed me hard, sealing the deal.\n\n\"Yes, daddy,\" she said quietly. I want to be Princess Kitty from now on.\"\n\n\"Then you will be.\"\n\nShe beamed. Then I could feel her pussy starting to rub up and down my cock. I had intended to go down on her, but I felt that was going to have to wait until later. She lifted her hips up, reached down and positioned my cock at the edge of her pussy. Normally I would be the one to tease her a bit, making her beg to slide my cock in and fuck her. She felt now would be a good time for some payback.\n\nShe did that for a few moments, biting her lip, and trying to see which of us would break first. I thought I might, as I was starting to get desperate. Then I remembered, I could cheat. I reached up and tweaked her nipples. She squealed and then slammed down on my cock, which made her cry out.\n\nChrist, her tail plug. I'd somehow forgotten she was wearing it.\n\n\"Are you ok, Kitty?\" I asked.\n\nShe nodded. \"So full, daddy. Your cock, the plug, oh god I'm so full...\"\n\n\"Take your time. Get used to it. Set your own place. You'll be ok.\"\n\nShe took a moment, and lifted herself off my cock, then slowly slid down. We both groaned. I could feel the plug inside her ass when I was buried in her pussy. She had always been tight, but this was something else. I could feel the plug inside her moving as she slowly moved up and down on my cock, setting a slow, but deliberate pace.\n\nNormally I'd be more interactive. I'd be touching her, playing with her breasts, or trying to rub her clit. But she was beginning to look like the first time we were ever together. When she had gotten over-excited from edging too much and practically short-circuited. Three weeks apart, exam stress, shopping, diving head first into pet play and now riding my cock with a plug in her ass. She was flushed and looking overwhelmed. I started talking quietly to her.\n\n\"It's ok, kitten. You're doing great. Daddy's so proud of how well you're doing. Just keep riding my cock like that. Just breathe. Relax,\" I said, as I reached up with one hand and took the leash that was dangling between us and moved it out of the way. With the other I reached up and touched her face.\n\nHer eyes were scrunched shut and her mouth was open as she began panting. The pace of her hips began to pick up, and I could tell she was on the verge of having one of those orgasms where she completely short-circuited.\n\n\"Let it happen, kitten. I'm right here to take care of you, just let yourself go. I've got you,\" I said.\n\n\"I'm so close, daddy, so close, I can't...please,\" she whimpered.\n\nIt was too much. She needed something to put her over the top or she was going to get stuck like this and it would hurt. I used her leash, pulled her down close to my face. Then I slid my hand between our bodies and wrapped my fingers around one of her nipples.\n\n\"Cum now, kitten,\" I said, and pinched her nipple.\n\nShe howled and came hard. With me keeping her, literally, on a short leash, she was plastered close to my body while her hips moved spastically up and down my cock, trying to keep her orgasm from stopping. \n\nAfter a minute or so, she calmed down and stopped moving. She buried her face into my chest and I could feel her gasping for air, and occasionally sobbing. I let go of her leash and ran my fingers through her hair while wrapping an arm around to hold her tight and give her the reassurance she needed that it was ok.\n\nAfter a few minutes, she came back to reality and looked at me. She was a bit of a mess as some of her make-up had run from tears and sweat. I smiled at her and kissed her on the nose.\n\n\"Oh god, I'm sorry daddy. It happened again,\" she whispered.\n\n\"You've nothing to apologize for silly kitty,\" I said. \"That was spectacular. I love watching you cum like that.\"\n\n\"Rachelle warned me that fucking with the tail in might be intense the first time, but oh my god, I felt so full, and I was so worked up and then I couldn't get myself over and...and you haven't cum yet...I'm the worst little girl ever,\" she babbled.\n\nI laughed quietly, and wrapped my arms around her and hugged her hard. And then, because I felt a little evil, I pulsed my cock, still buried in her pussy. She groaned and squeezed back. I was a bit surprised. I thought she might need some time to recover \n\n\"Does it feel like I'm going to have a problem fucking you and cumming when you've recovered, kitty?\" I asked.\n\n\"Meow,\" she said, shaking her head. \n\n\"So catch your breath, and when you're ready, we'll start on Round 2,\" I said.\n\nWe spent probably another 10 minutes like that, me on my back, Ashley...Kitty lying on top of me, with my arms around her. I was honestly wondering if she was going to fall asleep, she seemed so content. I'm guessing there are worse ways to drift off then with a cock in your pussy after having a mindblowing orgasm.\n\nBut she began to shift. Then I felt her pussy grip around my cock a few times. I reciprocated, pulsing my cock. She groaned. Then, finally, she pushed herself up so she was sitting on my lap, cock still inside her. Her eyes still looked slightly spacy, but she was more 'there' then she was 10 minutes ago. \n\nI thought she was going to start riding me again, but she surprised me, lifting herself off my cock with a groan. She rolled over to the side of me and grabbed some pillows into a pile. Then she got on her hands and knees, put the pillows underneath her breasts. She shifted and was satisfied with their stability. Then she moved her leash to her side and put her hands down by her thighs. She looked at me.\n\n\"Cuff me, daddy,\" she said.\n\nI moved over to her. Her wrists each had a cuff with a link that could connect to either her thigh or ankle cuffs. Tempting as it was to cuff her to her ankles, I clipped in each wrist to her thighs. She was now trapped in that position, with her head close to the bed, her ass with its tail up in the air. She moved her legs apart.\n\nI moved behind her. God damn.\n\n\"Daddy?\" she said quietly.\n\n\"Yes, Kitten?\"\n\n\"I think I'm in heat, daddy. \"\n\nI got between her legs and moved her flimsy panties to one side and ran my fingers over her pussy. She was, of course, soaking wet.\n\n\"I think you might be right, Kitten. You're very wet,\" I said.\n\nShe began moving her ass back and forth, trying to entice me to start fucking her.\n\n\"Uh huh. I've been dreaming about having your babies, daddy. About you breeding me while I'm in heat like this. And it made me all wet and squishy.\"\n\nI could feel my brain shutting down. I wanted nothing more than to just ram my cock into her and pound her until I exploded. Instead I reached for her leash. I tightened the slack so she had to lift her head back a bit. Her breathing was getting quicker. I was aware, dimly, that I had to be careful with the leash so I didn't choke her. But her quick breathing had nothing to do with being choked. It was anticipation.\n\n\"And what should daddy do with his kitty?\" I asked. I moved her tail so that it rested on her back. I placed my cock at the opening of her pussy and teased her with it.\n\nShe was practically panting when she turned her head back and looked at me.\n\n\"He should fuck his helpless little kitten as hard as he can and fill me with his cum. So I can have allll his babies. That's what he should do, daddy.\"\n\nThat did the trick. I buried my cock back into her pussy in one, quick move. I pulled on her leash so it got that extra little bit deeper into her and prevented her from moving.\n\n\"Oh god, yes, daddy! Again. Keep fucking me, please daddy!\" she gasped. \n\nI could never say no to my little girl. I withdrew quickly and slammed back into her, causing her to cry out again. Man, if this hotel undersold how soundproof the walls were, the neighbors are going to be calling the cops.\n\nBut I didn't care. God I wanted her. It was animalistic. Some part of me actually wished she wasn't on birth control so I could breed her. She was mine at that moment. I owned her. I possessed her. \n\nAnd she knew it. So I took her hard, my hips slamming into her ass. The bell on her collar rang out as I pounded her harder than I ever had before.\n\n\"Fuck me, daddy! Take me! Breed your kitty!\"\n\nI could feel it building. Everything was too much. It had been a miracle I hadn't cum already, and this...no one could last against this.\n\n\"Here it comes, kitten. Daddy's going to breed you now and make you a mommy,\" I growled.\n\n\"Yessssssss,\" she started, and then I cried out and began filling her pussy with my cum. She pulled forward, ripping the leash from my hands and then buried her face into the bed and screamed. I could feel her pussy pulse around my cock and I knew she had cum again.\n\nIt was all I could do not to collapse on top of her. I could hear her gasping for breath into the bed. I was behind her, wobbling and feeling dizzy from the intensity of my orgasm. Both of us were wiped out. I finally could feel myself start to soften, so I pulled out of her. She whimpered, and I could empathize. I finally collapsed on the bed. I could feel her shift and topple over onto her side so she could be next to me. Then I passed out.\n\nI woke up and groggily tried to figure out what time it was. I could see the clock radio on the bedside table. Best I could figure I was out for about 45 minutes. It was darker in the room and I looked around for Ashley. She was on the bed, looking at me with a little smile on her face. I had a momentary flash of horror that I had left her cuffed for the last 45 minutes, but she was naked except for her collar.\n\n\"I thought I killed you again, daddy,\" she said.\n\n\"Oh kitten, I'm so sorry, I passed out and you were still cuffed...\"\n\nShe laughed. \"Well, I'm not going to quit school to become an escape artist, but I managed to get out of my predicament. It only took a few minutes once I stopped twitching from the orgasms.\n\n\"It's ok you passed out. I did too for a bit and, you know, you're sooooo much older than me,\" she said.\n\nI reached out and grabbed her arm and pulled her closer to me. She giggled and didn't resist.\n\n\"Plus, it gave me some time to go and clean up. I was a mess. Between the two of us I was mopping up for about five minutes. And I love that tail, but it needed to come out,\" she said.\n\n\"I'm amazed at the tail. I'm amazed at all of it. You were incredible,\" I said.\n\nShe smiled at me, shifted in the bed to give me a kiss and then settled her head on my shoulder.\n\n\"Right answer,\" she said.\n\nI should probably leave better off alone, but I was dying to know.\n\n\"If it's none of my business, that's fine. But what did she say to you?\"\n\nShe was quiet for a moment.\n\n\"I'll tell you...some of it, if you tell me what she gave you just before we left.\"\n\nThat was an easy trade.\n\n\"She gave me the contact information for a local swingers club. We show them her card and we get in, no fuss,\" I said.\n\nShe popped up from my shoulder and looked at me. \"Really? Do you want to go?\"\n\nI'd had some time to think about the offer since she made it. I glanced at Ashley, and she wasn't scared or excited, just curious.\n\n\"I'm not going to lie and say I'm not curious. Yeah, I'd like to see the inside of a swingers club and everything that goes on. If nothing else, it's a story to tell,\" I said.\n\n\"But...\"\n\n\"Two things. First, they would be on you like piranhas,\" I said, and she giggled. \"I know it's funny, but a sexy, cute girl like you...everyone would be watching and looking for the slightest hint that you might be looking to play. And I think that would be a lot for you to absorb and handle. I could be wrong, but...\"\n\n\"No,\" she said, finishing my thought. \"You're right. I mean, it would be interesting and maybe fun. But I don't want to spend all night fending off inquiries. Maybe one day, but I'm in no rush.\"\n\nI nodded. I was happy enough with that answer.\n\n\"And the other reason,\" she asked.\n\n\"Nothing I would experience at that club would come close to what I had with you today.\"\n\nShe laughed until she saw the look on my face. She leaned in and kissed me and it was beautiful. Not hungry or quick. Just a slow, loving kiss to let me know how she felt. After it ended we just looked at each other. It hung there for a moment. We were both thinking it, but neither one of us was quite ready to pull the trigger. But I knew how I felt about her, and those feelings were reciprocated. Eventually, she bowed her head, laughed and then rolled onto her back, staring at the ceiling. Then she began to talk. \n\n\"After you left, we started walking around and I was so nervous. I'd never been in a sex shop and she was showing me all these really nice things and all I had going through my head was 'lalalalalala I'm in a sex shop, oh my god' and I couldn't make it stop. ",
        "\"But she knew I was nervous so she stopped and told me this was a gift. And I knew it was, and I felt like I was letting everyone down by being so silly, but then she corrected me,\" she said. Then Ashley did her best Rachelle impression. \n\n\"I have seen many people come in here. Men with their girlfriends or mistresses. Or women with a man's credit card. And they mostly end up buying the things he wants,\" Rachelle via Ashley said. \n\n\"But your daddy wants you to come here and explore. Discover what you like. Yes, you can buy things as a little girl or a kitten, but you can also try other things if you want. And he asked me to help so you'll be more honest with yourself and not scared of letting him down. He will not be disappointed in your choices. It is a gift. Take advantage of it,\" Ashley said, giggling as she stopped with the French accent. \n\n\"And it snapped me out of it. And we just played for that time and it was great. I tried on things I never would have and looked at lots of toys. And yes I bought 'little' things and pet play things. But I also bought some other things too I want to try,\" she said. \n\nNow that was intriguing. And definitely what I was hoping for. \n\n\"I'm glad,\" I said. \n\n\"But that tail freaked me out. I wanted it, but putting something up my ass... I mean, pretty much every guy I've been with wanted to fuck my ass so getting that tail was a thing. But she convinced me to get it. \n\n\"So, to answer your question, she whispered to me to go home and put the tail in right away. If I waited it would get in my head. If I was bold I would get fucked harder than I have ever been in my life. \n\n\"And she was right,\" she said, with a small laugh. \"But god I was so scared when I came out of the bathroom. If you had laughed I would have died.\"\n\n\"I will never laugh at you like that,\" I said. \"I thought it was a clip on until I jostled it and you squeaked.\"\n\nShe covered her face with her hands. \"Oh god I squeaked?\"\n\n\"Little bit.\"\n\nShe rolled back on her side and I was amazed again how lucky I was. \n\n\"Look, all you ever have to do is ask if you want to try something. I may say no because it's not my thing...\"\n\n\"Oooooh, such as?\"\n\n\"Well if you wanted me to piss on you I'd probably say no to that,\" I said. \n\nShe bolted upright in the bed with a mildly shocked look on her face. \n\n\"What?\"\n\nI nodded. \n\n\"Oh god, why?\"\n\nI shrugged my shoulders. \"I have no idea why. Never really researched it but people are into it. And that's cool. It's their thing and if they have someone who enjoys doing it with them then who am I to judge?\"\n\n\"I guess...\"\n\n\"Kitten, this is my way of saying anything you ever want to try or do, all you have to do is ask and we'll talk about it and decide if we're good. Ok? The worst that one of us can say is 'no I'm not comfortable with that.' And then that's it. Matter closed with no anger or guilt. I promise.\"\n\nShe smiled. \"I like that. Ok.\n\n\"But, you know, that goes for you to, daddy. You can ask me for things you want to try.\"\n\nI laughed. \"Kitten, you're a horny 19-year-old geek girl who has a kink for older men, loves role play including being little and a cat. If I wanted more than that it would make me the greediest motherfucker alive.\"\n\nShe covered up her mouth with shock and then started helplessly giggling. Once she calmed down, she crawled on top of me and lay there looking down. There was nothing sexual at the moment; just a little girl lying on her daddy.\n\n\"You can always be a little more greedy, daddy. I think I trust you not to be too weird at this point,\" she said.\n\n\"Cool. I'll have the clown outfit waiting for you the next time you come to Kingston,\" I said, desperately trying to keep a straight face.\n\nIt fooled her for about two seconds. \n\n\"Asshole,\" she said, grabbing a pillow next to my head and began smothering me.\n\n***\n\nMontreal - Four Days until Christmas\n\nIf it hadn't been for the realization that my Christmas gift was still at her apartment, I'm not sure I would have ever convinced Ashley to leave the hotel room. She didn't want to leave and was perfectly happy to walk around the room naked. I tried persuading her to model some of her outfits, but she wanted to pace it out and leave me some surprises. Which I appreciated, but it was a little bit frustrating wanting to see what else she had.\n\nI was beginning to realize just how big of an introvert my little girl was. She was perfectly happy to spend time with me. Saturday evening and most of Sunday, she was perfectly happy to talk about movies and tv shows she liked, or show me some of the designs she was working on, or just rest her head on my lap while we watched a movie or some tv.\n\nAnd, of course, we had sex again.\n\nBut at any mention of going out and grabbing something to eat, she'd get pouty or distract me. There was going to have to be a larger conversation about this at some point, but the night before we parted for Christmas wasn't it. Even I wasn't that oblivious.\n\nHowever, when she realized my gift was still at her apartment and that, yeah, she really couldn't show up in Saskatchewan wearing a mini-skirt and heels, she grudgingly admitted we had to go back to her place to pick-up a few things. But then she wanted to come back to the hotel right away.\n\nIt's also when she realized she could either put on what she had worn on Friday night or one of the 'slut' dresses she had bought. I watched her wrestle with it until she finally grabbed one of her bags and went into the bathroom. When she came out she was wearing a black pleather dress that stopped several inches short of her knees and flared. It had a zipper down the front and also managed to push up her tits. Oh, and fishnet stockings. Of course\n\n\"This is my least slutty option,\" she said, amused at the look on my face.\n\n\"I can't wait to see the rest,\" I said. She grinned and we started collecting things around the hotel room. She grabbed everything from her shopping spree and collected two of her larger gifts. I figured she could take the jewelry with her back home for Christmas. At least she'd have something to open Christmas morning with her mom.\n\nAfter a lot of stares going through the hotel lobby, and dragging a lot of bags and boxes, we managed to get a cab to her apartment. Ashley...Kitten forgot to mention she lived on the third floor and there was no elevator. My knee was singing and she looked mortified.\n\n\"I'm so sorry,\" she said, opening the door to her apartment. \"This place is a hole. Gillian and I are going to look for a nice place for next fall.\"\n\nI thought she might be exaggerating, but it really did have a \"hey, I'm a poor university student and this is all I can afford\" chic to it. She unlocked the door and walked into the apartment. We stepped directly into one room that contained the kitchen, dining room and living room. The couch appeared to be from the last century and there was no TV. The kitchen table was mostly covered with different kinds of fabric and an ancient sewing machine. \n\nThey had made some effort to decorate for Christmas. There was a small tree in the corner with some decorations, some lights in the window and cheap cardboard Santa and reindeer on their bedroom doors. I could understand why she was reluctant to bring me back here.\n\n\"Ehhh, it's not so bad,\" I said, moving aside a pile of fabrics on top of the kitchen table so I could lay down her gift. I looked back at her and she had her hands on her hips, giving me a look.\n\n\"I lived in some dubious places in my university days. This apartment is no better or worse.\"\n\n\"I know,\" she said, disappearing into her bedroom. \"It's just an awful apartment for how much we pay, and the landlord does nothing to fix things when they go wrong. You can see why I want to spend every weekend at your house.\"\n\nI could sense her coming back into the room and turned around. She'd put on a Santa hat in an attempt to bring some festiviness to the place. She looked adorable.\n\n\"This is so sad. Can you give me 10 minutes to pack and we'll go back to the hotel?\"\n\nShe looked miserable, so I wasn't going to torture her by keeping her here longer than necessary.\n\n\"We'll open our gifts, then you can pack, and we'll head back, ok?\"\n\nShe nodded, but still looked unhappy as she came over to the couch with a large box wrapped in Batman Christmas paper.\n\n\"Next year, Christmas at my house. Just the two of us. We'll decorate it to the nines and get a stupid big Christmas tree for the living room. Sound good?\" I said.\n\nShe had an odd look on her face as she sat next to me.\n\n\"Next Christmas,\" she said softly. \"I wasn't even thinking about next Christmas, but you're already planning for it.\"\n\n\"Sorry,\" I said. \"Force of habit. Always planning ahead.\"\n\nShe looked at me, like she wanted to say something, but instead distracted herself by thrusting the gift into my hands\n\n\"I'm freaking out about this. I've never really given you a gift, so I really hope you like it,\" she said.\n\nI took it from her and gave her a kiss. Her eyes were wide and I could tell she was very anxious about the gift. It would be mean to torture her, so I started tearing into the wrapping paper, pulling it aside, to find an old Amazon box. I glanced over at her.\n\n\"I had to put it in something,\" she said.\n\nI opened the box and could see layers of clothing. Of course she made me something; she's a designer. She makes her own cosplay. I pulled out a heavy brown woolen cloak that looked like there was a hood. Then a white tunic, a brown belt, and pants. I realized what it was.\n\n\"Obi-Wan Kenobi,\" I said with a touch of awe. I looked at her. \"You made me an Obi-Wan cosplay. Ashley this is...\"\n\n\"Well, you said that because of your beard and stuff it would be hard for you to cosplay, and you weren't wearing spandex and I know you said Dr. Doom would be fun, but that's waaaay beyond my abilities right now, and then I remember Obi-Wan and I knew I could make that and I hope you're not disappointed...\"\n\nI put the box down, grabbed her shoulders and brought her in for a kiss. As usual when she was babbling it took her a couple of seconds to realize that she was being kissed, to stop talking and just enjoy it. I pressed her back on the couch and she wrapped her arms around me. Eventually, we pulled apart for air.\n\n\"I absolutely love it. I love that you made something for me. Thank you,\" I said. She beamed.\n\n\"Try it on to make sure it fits ok.\"\n\n\"You just want to see me strip,\" I said, beginning to remove my clothing. She gave me a smile that indicated that if it wasn't the plan, she was at least enjoying the show. Unsurprisingly, everything fit perfectly. She either had a good eye or snuck into my closet when I wasn't around. I went into their tiny bathroom, her apologies for its condition trailing after me. I looked in the mirror and had to admit I looked like a pretty good Obi-Wan.\n\n\"You did a great job, princess. This will be a blast to wear around comic cons. Are you going to go as my Slave Leia?\"\n\nI got a look.\n\n\"Wrong movie. But you might be able to persuade me to wear the classic white dress with some cinnamon buns on my head if you're good,\" she said.\n\n\"All I need now is the lightsabre and I'm all set,\" I said.\n\n\"Shit!\" she yelled and ran into her bedroom, re-emerging a few seconds later with another, longer box. \"I didn't bring it out with the cosplay because I thought it would be too obvious and then I forgot completely.\"\n\nI took it from her, expecting it was going to be a lightsabre like you might give to a little kid. When I unwrapped the box I discovered how wrong I was. I'd wanted a lightsabre for years, but when I lived in Toronto there was never enough space to justify buying one. Now I had a high end lightsabre. The kind that people would duel with at comic cons. I knew how much they retailed for. I pulled out it and, sure enough, this was a replica of Obi-Wan's lightsabre. It was easily a couple of hundred dollars.\n\nThis was an expensive gift. The lightsabre, the fabric for the cosplay and all the work she put into making it. Part of me wanted to scold her for spending so much money on me when I knew money was tight for her. But it would be a dick thing to do. \n\nInstead, I put the box down, went over and picked her up, and gave her a spinning hug, making her squeal. I put her down and gave her another kiss.\n\n\"I love it,\" I said. \"I always wanted one and would never pull the trigger on it. So thank you. You're amazing.\"\n\nShe was beaming and practically levitating off the floor.\n\n\"I was afraid you were going to lecture me on spending too much. But I'm good at being able to cut some corners here and there. Besides, I really wanted to do this for you,\" she said.\n\n\"I'm glad you did. Now I just have to wait to wear it to a con,\" I said. \"Hey, go open your gifts.\"\n\nShe'd forgotten there were things for her to open. I find there are two kinds of women when it comes to gifts. Meticulous unwrappers and shredders. I was glad she was a shredder. She grabbed the first box and began tearing the paper off. I wasn't surprised she picked the smaller one first. I knew she was dying to see what was in the large box, but she was all about denying herself.\n\nOnce she finished with the paper she saw it was a Scarlet Witch figurine. She laughed.\n\n\"Nice,\" she said. \"Am I going to get one of all my cosplays?\"\n\n\"Maybe,\" I said. \"That's not actually a bad idea. Or maybe just the ones you used to seduce me.\"\n\n\"So that would be all my cosplays then,\" she said, sticking out her tongue and being a brat. She then looked at the large box. \"I'm nervous about what this is, although I can tell you didn't wrap this. This is a much nicer job than what you did on the figurine.\"\n\n\"You're not going to get less nervous just looking at it, Kitten. It doesn't bite, I promise.\"\n\nShe began picking at the paper and then, finally, her will power dissolved and she started to shred the Christmas paper. The new sewing machine revealed itself.\n\nI know nothing about sewing machines. But I went on some cosplay forums and said I wanted to get a good new sewing machine for my cosplayer girlfriend. This one pretty much was the top of the list. Also, I was awesome for wanting to do this for her, which was good to know.\n\nShe said nothing and with her head lowered and her hair covering her face, I couldn't really see her reaction. She walked around the table, touching the box gently like she was afraid it was a mirage that might disappear. \n\n\"I hope it's the right one. If it's not and you need something more industrial or sturdier or other sewing terms, I can return it and we can shop for the right kind for you,\" I said after she went about 30 seconds without saying anything.\n\n\"It's the nicest gift I've ever gotten,\" I heard her whisper. She looked up at me and I could see tears in her eyes. \"I can't believe you bought this for me.\"\n\n\"It's what you do for someone you love, princess,\" I said. The words came out, and it then took me an additional few seconds for me to realize what I had said. Then I smiled because I realized I was perfectly ok saying it because it was true. I was in love with her.\n\nHer eyes got wide and the next thing I knew she was flying across the room and slamming into me hard enough to knock me back onto her old couch.\n\n\"I moof oo too, addy,\" she said with her face buried into my chest. I laughed and hugged her harder. Eventually she tapped my shoulder to let me know she needed to breathe. I let her pull back. Her eyes were red and she still had tears, but she looked radiantly happy.\n\n\"I love you too, daddy,\" she said.\n\n\"Good. Because it would be awfully sad if it was just me,\" I said. I shook my head. \"We're in it deep now, Kitten. You ok?\"\n\n\"Never better,\" she said, and we were perfectly happy for me to sit on that ratty couch with her sitting on my lap and her head on my shoulder and just enjoy the moment. \n\n***\n\nMontreal -Three days until Christmas.\n\nAfter the drama at her apartment, along with a spontaneous 'christening' of her apartment that involved one of her neighbours banging on the wall and telling us to keep it down, we eventually got her packed up and staggered back to the hotel.\n\nThe next morning, we grabbed some breakfast, checked out, and made our way to the airport. The glowing mood that had sustained Ashley for the past 12 hours evaporated once we arrived at the airport and she checked in. There were flights going to Toronto every hour, but I wanted to make sure she got away to Saskatchewan safely first. That meant I had another couple of hours to kill.\n\n\"This sucks,\" she pouted at the departure gate. \"I never really wanted to go and now I really, really don't want to go. Can we just skip the flights, go back to your house and, like, not leave until school starts.\"\n\n\"It's barely a week. We'll meet up in Toronto, take the train back to Kingston and you can stay at the house and roam around naked to your heart's content,\" I said.\n\nThat got me a small smile. \"I am absolutely going to take you up on that.\n\n\"Still, a week with my mom,\" she sighed. \"At least I can do this to her.\"\n\nShe turned her phone around and showed me a picture of the two of us from the other night at the pizza place. Gillian had snapped it and it was Ashley snuggled tight into my chest while I had my arm around her. She looked radiant. I looked like a goofball, but a very happy one.\n\nWhen I raised an eyebrow and asked why, she simply said, \"Oh, I've been waiting for this. You know you're older than her, right?\"\n\nIt had never occurred to me to ask how old her mom was. The mildly stunned look on my face made her laugh. She told me I was almost five years older than her mom. Wow.\n\n\"Look, we're better than what we used to be; that she sent me a plane ticket and invited me to come home for Christmas is proof of that. We love each other, but I'm not sure we like each other much. And this,\" she said waving the phone in her hand, \"coupled with telling her how old you are will drive her nuts.\"\n\nShe cackled with glee.\n\nMothers and daughters. It was best not to get involved.\n\nAfter more hugs and some tears, she finally left to get on board her flight. I moped my way over to an airport restaurant and grabbed a late lunch. \n\nI was in love. I'll be damned. I never thought that would ever happen again. But it felt good. I glanced at my phone and scrolled through photos of the two of us. I was grinning like an idiot in almost all of them.\n\nThat's when my phone vibrated and a little bar flashed across the top. It was an IM for my mom.\n\n\"Looking forward to seeing you in a few days!\"\n\nAs much as I was going to miss Ashley, it had been more than six months since I last saw my parents. I was doing better back then, but they were still nervous about me heading out east by myself to a new town and house. I might be nervous telling them I was dating, but I was going to be glad to be in a good mood. That alone would ease their worries.\n\n\"Can't wait to see you and dad as well,\" I replied.\n\n\"Sooooooo, a little bird told me you might be seeing someone.\n\n\"Looking forward to the details.\"\n\nI was going to kill Meg. I was going to kill her, and do it slowly, and then plead insanity, which I will totally be able to get away with.\n\n\"Really?\" I replied. \"Who told you that?\"\n\n\"Oh, I never reveal my sources,\" she typed.\n\nOh I'd get it out of her when I was there in person. And then I would spend Christmas figuring out how to dispose of Meg's body.\n\n\"But...Helen was here for a visit when I found out and I might have let it slip. \n\n\"Sorry.\"\n\nHelen. Beth's mom knew I was dating again.\n\nFor fuck's sake..."
    ],
    "authorname": "thanagar",
    "tags": [
        "daddy",
        "little girl",
        "ddlg",
        "mature",
        "teen",
        "kitten play",
        "pet play"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/little-packages-ch-03"
}