{
    "title": "Pogo's Very Long Day",
    "pages": [
        "Pogo's Very Long Day: Love's Strange Forms and The Perils of Hunting Monsters\n\nThis story is also part of the world started in \"Shameless\" and continued in \"Monster\" and \"Pogo and Spooky\". I'm posting it in LW because the rest of the story is already here. It'll make a lot more sense if you read the other three stories first. I typically don't write graphic sex into this story line and that remains true here. Special thanks to sbrooks103x for the editing. Any remaining errors are entirely mine -- probably added after his assistance.\n\nThere's an old saying about playing poker \"If you look around the table and can't figure out who the sucker is, you're it\".\n\nIt was pretty obvious that I was the sucker here.\n\nIt wasn't just that everybody seemed to be in on the game plan but me. The kicker was the .45 automatic leveled at my center mass.\n\nBy a girl I'd never have dreamed would point a weapon at me.\n\n***\n\nIt hadn't been a very good day to start with. Spooky had headed out the night before on another \"business trip\". Where, or for how long, we never knew. It's the nature of the business. And we accepted that, accepted the risk that she might not come back.\n\nBut her leaving in the evening always left us out of sorts.\n\nShe usually flew out in the morning; that gave us a chance to say goodbye properly, wear each other out as if it were the last time we would see each other. And that's possible. Like I said, it's the nature of the business.\n\nBut her leaving in the evening left us both out of sorts all day, and left me with a sleepless night wondering if I would see her again.\n\nWondering what we really had.\n\nWe'd been \"an item\" since she come stalking into my life two years ago, twelve years after we'd met. I'd assumed it was an unresolved infatuation on her part; that it would burn out, so I tried my best not to take it too seriously.\n\nBut, whatever it started as, it became something else. I just wasn't sure what it was.\n\nI couldn't call it love, and neither would she -- we were both too wary, maybe too broken, to admit to something as prosaic as that. We weren't exclusive, we'd agreed to that -- she was gone too often and too long; we had no schedule, no possibility of anything normal or sane. At least not for now.\n\nBut the divorcee tourists in hot pursuit of their mid-life crises held little attraction for me now. And it was rarer and rarer that I had to throw one out when I got the message from Spooky letting me know she'd be arriving in a day or so. In fact, last night, I'd realized I hadn't bothered with one of them in over a year.\n\nAlthough she never said anything, from the look of relief on her face when she found her closet clear and her robe still hung neatly on the bathroom door, Spooky had feelings about that too.\n\nIt was a hypnotic attraction of some type. Something neither of us, perennial loners both, could resist. Something I don't think either of us wanted to resist. I was her comfort, her safe haven. She was my could-have-been, the normal I couldn't have, didn't deserve after the life I'd led.\n\nWhatever it was, we clung like magnets when we could be together, even though I was far too old for her, and she was far too feral for anyone.\n\nShe'd been a little off for the last couple weeks, moody and a bit sullen, but even in that mood, I wanted her near. And she seemed clingy despite it.\n\nBeing apart was disconcerting, even more disconcerting than being together.\n\nI'd been feeling more unsettled than ever lately. My older sister, Danika, had been chiding me about skipping family time at Christmas for the last few years. Maybe I needed to go, reconnect. I could find someone to watch The Shack for a couple weeks.\n\nSo the day had led off with a sense of loss, disappointment, and fitful sleep. I was ten minutes late opening The Shack, which got me a scowl from Grease. He had to pick up box lunches for his fishing charter. I was behind, but he helped me slap them together, thrusting them a little haphazardly into a cooler. They didn't have to be perfect, over half his guests didn't eat anything substantial while they were out anyway due to seasickness.\n\nHe didn't say much, probably sensing my mood.\n\nIt was the Friday charters, so I'd have the big grill set up on the beach in front of The Shack so his fishermen could grill their swordfish or tuna or -if they'd had a poor catch -- steaks. They'd swap lies around the bonfires and try to convince unexcited wives it was worth the cost. We'd just feed the wives Margaritas, Mojitos and other drinks until they either enjoyed themselves or just wouldn't remember not enjoying themselves in the morning. Whatever works.\n\nI'd always loved doing the beach bonfire thing, as challenging as it can be. We'd had to pick up the pace since I cut the deal with Grease and Angel a few years ago. The tips alone made it worth ten times the trouble it took. A lot of the locals attended, and wandering tourists would pay the party fee and join in. When she was in, Spooky looked forward to the Friday bonfires; they were the kind of fun and friendship she'd never had as a kid. She'd been a wallflower at first, not believing things like this could exist. And when Spooky wanted to be a wallflower, she was truly invisible. But after a few times she tentatively joined in, then with more and more eagerness.\n\nMuch to her own surprise, Spooky loved helping with the grill, but I was on my own today. Howard was back in the States visiting relatives. Maybe I could convince Ex and Monster to help. Monster cooked steaks with the same precision he applied to everything.\n\nThey'd probably be there anyway; they seemed to be on babysitting duty with Grease and Angel's two girls all the time lately.\n\nI needed to talk with Ex anyway.\n\nLoud Howard -- Colonel Howard, United States Army, Retired -- had caught me before he left, whispering that she looked a little under the weather. We worried about Ex.\n\nA lot.\n\nIf you're in the Military for any length of time, you find out that obligations don't end just because you move on. A former soldier who used to be in your squad twenty or even thirty years ago still has a place to sleep on your couch if he needs it. You're still responsible for your people, for the things you've done, or in our case, created.\n\nWe'd been the ones who trained Monster and built him to be what he was. We were responsible if he ended up going off the rails.\n\nMonster and Ex don't have any idea we've figured out what is going on. Not everything. But enough.\n\nThe injuries from his last mission had done something to him. Something very bad. From what we can tell he's stuck in what we call \"Trigger Mode\". Some guys call it \"the Zone\", some call it \"going Red\". It's just how we train team members to handle combat. Suppress emotion, engage targets based on capability, intention and immediacy, surviving through a running threat matrix. Deal with secondary issues later or not at all. Monster was seeing everything, everyone through that running threat matrix.\n\nHoward figured it out. Something felt off when he saw Monster in the hospital so he looked into it. Broke every privacy law ever written; stole medical records, psych evals, and hospital surveillance footage. He called in favors from years ago, got a few people working on it. Autopsies, news reports, an accident report, some crime statistics. It all added up. Monster was fully operational in the tactical sense. Eliminating threats.\n\nWhen Monster and Ex started coming out on vacation, it all got a little clearer. He was using the techniques we'd taught him to work undercover. He was using them to pretend to be himself.\n\nMonster was pretending to be Monster.\n\nSomehow Ex had become his handler; we have no idea how it happened, but that isn't really important. But somehow she became his interface with humanity. And that is important.\n\nVery, very, important. If anything happened to Ex, Monster would have no guidance, no restrictions. He'd just start working his way through his threat matrix in descending order.\n\nThat idea was truly terrifying. Especially since we only had a vague idea of how he was classifying threats and weren't certain what he was trying to protect.\n\nSo Howard and I sat down over a bottle of very good cognac and designed a plan. We called it the Very Bad Plan. It wasn't likely to end well for anyone, and might be worse than doing nothing.\n\nWe'd use a four-wheel drive truck and 20 plastic buckets. We'd fill each bucket with 5 gallons of an enhanced version of Ammonium Nitrate Fuel Oil explosive. It would be rigged with an impact detonator, a dead man switch and a remote detonator -- a \"chicken switch\". All on different, redundant, circuits. The plan was to drive into the big patio doors of his walk out basement at the back of his house, while he was home, and detonate nearly half a ton of high explosive as close to him as possible. If he survived, he'd likely be injured and moving slow enough for a sniper to take out.\n\nIt sounds insane, excessive. But Monster really was that dangerous. He was a true natural; he was gifted in the same sense, and at the same level that a gold medal Olympic athlete is gifted. Reflexes, speed, precision, focus. Imagine the average guy using a lap pool suddenly dropping into a race with Michael Phelps. That's the difference. Except his \"event\", his skill set was very, very anti-social.\n\nOne of the team snipers had given the iconic description of Monster: \"Shooting Monster between the eyes at 500 meters would show good aim. In the back of the head at 1200 meters would show better judgment.\"\n\nHoward was a better long rang shot than me, so he'd be the sniper and manage the remote detonator. He'd also have a suicide vest with a dead man switch in case Monster got loose. Monster tended to work up close and personal, so that was a pretty decent option.\n\nI'd be driving the truck, so I'd never even know if it worked.\n\nI hoped Spooky would understand.\n\nIt wasn't a great plan -- his house was backed right up to the State Park and if he got into those woods, we were completely screwed. There were only a few good sniper positions, and he certainly had those on his radar.\n\nWe figured we had a solid 30 percent chance of killing him. With any other target that would have been laughably bad. With this one, it was as good as we could develop. We really hoped cancer or something took him out before anything happened to her.\n\nWe couldn't try to help Ex or let her know what we had figured out, at all. If he suspected anything, she'd be the first one he questioned. And she would talk eventually. Howard and I, along with every former team member would leap up in his threat matrix.\n\nWe could only use the plan as a last resort because trying and failing would be worse. For everybody.\n\nSo Ex's health was very high on my priority list.\n\nOn the bright side, Ex came in with Danni for breakfast just after Grease left. Danni is Ex and Monster's daughter. She's in her 20s now and married. In that \"cute zone\" of pregnancy -- just after the morning sickness, but before the awkward \"waddle stage\". She was kind of a rare treat these days; life was catching up to her and it had gotten harder and harder for her to get out to the islands.\n\nThey'd helped themselves to coffee and were sitting in one of the tables overlooking the beach.\n\nI walked over to Danni's side.\n\nShe looks a lot like her mother did at that age. Tall, lean, and model-pretty. Angel is prettier, but that's just an unfair comparison -- judging anyone by Angel's beauty is patently unfair.\n\n\"So what does the baby want for breakfast?\"\n\nShe smiled, radiating eagerness \"The baby is seriously craving some of those spicy fried breakfast noodles. The baby can't get them stateside and wants them really badly.\"\n\n\"You know, I gave you that recipe.\"\n\n\"It just isn't the same without your greasy thumb in it Pogo, I tried.\"\n\nShe made that mock sad face I'd been seeing since she was ten. Some things just don't change.\n\nI shook my head. \"Probably need to just take some beach sand back with you to sprinkle on it.\"\n\nShe her smile softened a little. \"It's great to see you again. Derek says 'hi'. He couldn't make it, big case coming up.\"\n\n\"How long you out for?\"\n\nShe shrugged. \"Not too long, just have to wrap up some things before the baby is born.\"\n\nShe shot Ex a look. Then looked up at me. \"Family stuff.\"\n\nEx shook her head with a smile. \"Pregnancy makes them crazy Pogo. Gotta get every detail squared away.\" She rolled her eyes, then paused \"And I think I'll have those noodles too.\"\n\nI looked at her \"You look a little tired, everything okay?\"\n\nShe gave a wan smile \"Just worn out, too much to do these days. Even coming out here to get some rest was a lot of work. Had a nasty touch of allergies before we got on the plane, still coming down from that.\"\n\nAllergies made sense. They'd just gotten back a few days ago.\n\nI'd let Howard know.\n\nI went back to the bar and got the noodles going. They really aren't that complicated. But the salt air probably helps, and maybe watching the surf come in is as important as the freshness of the green onion.\n\nMy thoughts kept going back to Spooky and the whatever-it-is that we have.\n\nI wonder if I'm losing her. These last couple of weeks were so unlike her. Spooky's like that half-wild cat that comes in your house when she wants, leaves when she wants. Hunts the birds and mice, and eats them rather than the expensive cat food you've bought, just to prove she's her own cat. Sure she could be temperamental, but clingy and sullen just aren't like her.\n\nI wonder if she wants to move on, to leave this whatever-it-is. I don't like that, I don't want to lose her, but I don't have any claim on her. I don't have any right to stop her, or even to complain about it.\n\nShe probably needs someone closer to her own age. And that thought sours my stomach. It's not like I chose to get older. Hell, I was stunned when I survived to turn thirty a little over a couple of decades ago. It wasn't like nobody had tried to kill me.\n\nMy survival is a testimony to the global problem of really bad marksmanship. Given how pervasive that problem is, they should probably start a charity.\n\nI can already picture Sally Struthers saying, \"This is Pogo, and despite the thousands of rounds fired at him, he's still alive. With your help...\"\n\nOperators are standing by....\n\nThe other kind of operators of course.\n\nBy the time the noodles are done, Monster is sitting with them -- I don't have to take his order. Egg white omelet, a side of fruit and just leave the Tabasco bottle on the table. He's been eating very healthy and taking care of himself. The whole reason he's in later than Ex and Danni is because he's been out running on the beach.\n\nHe still drinks coffee and eats the occasional steak though, so there may be some remnant of humanity left.\n\nAs I brought the food out, Monster gave his usual friendly greeting. If you didn't know him, hadn't figured out what had happened, it was pretty convincing.\n\n\"Any chance you guys want to earn a little Shack credit this evening -- Grease has three charters out and I'll need some help with the grill.\"\n\nThat got Danni's attention -- she's been at beach bonfires for most of her life and really loves them.\n\nEx enjoyed them too. I'm not sure if Monster really \"enjoys\" anything, but he goes, mans the grill when he has to, and his presence has a dampening effect on misbehaving drunks. One fixed stare from Monster is worth about four squad cars.\n\nThe credit thing is bullshit. As far as I'm concerned, Monster and Ex don't have to pay for anything, and they know it, but never take advantage of it. Even if I didn't consider them family, Grease and Angel have made it clear that if Monster and Ex ever manage to run up a tab, it goes on theirs. I guess I understand that.\n\nBesides, the profits off the Friday beach bonfires are so high, the idea of worrying about a free meal or two would be foolish.\n\nDanni jumped on it. \"Of course we'll be there -- I haven't been to a beach barbeque in forever.\"\n\nEx smiled, a Mother Hen smile. \"No Margaritas for you this time.\"\n\nMonster nodded -- he seemed very serious for a second.\n\nDanni rubbed her little bulge through her brightly colored sarong. \"It's worth it. It'll be fun anyway. I'll just sit by the fire with Angel and make fun of everyone.\"\n\nAngel was in the same boat with Danni -- she was just about as far along with her third. And she'd always had a wicked little sense of humor, although nobody knew for a while.\n\nThat seemed to settle it, a bit of a relief, even if I really expected them to go for it. If they weren't available, I'd have had to call Chief and ask him. He didn't have a lot of tolerance for drunk tourists, but he was a sucker for free steaks.\n\nI had to haul the grill around front -- I had a four wheeler just for that. I'd thought about making it permanent, but I didn't want to ruin the view, and besides, the Friday bonfires wouldn't be as special if there wasn't any ritual attached.\n\nGetting the massive thing in place and leveling it was a half hour project, and while I left The Shack open, it was \"serve-yourself\". The regulars kept an eye on things to make sure nobody cheated. I didn't have any booze unlocked before noon anyway. Even then, it was beer and wine until five due to local law. And since Chief was sitting in the place on and off through the day, that bet just wasn't worth taking.\n\nJust after I got back in, two bolts of gold lighting shot in through the front. Kisa and Lily, two golden haired, blue eyed wonders squealed, paused for a second to give Ex a quick kiss, then swarmed up into Monster's lap like it was reserved seating. Kisa began chattering at Ex about something she found on the beach, while Lily traced the scars on the side of Monster's face with one tiny hand.\n\nI don't understand it, but Monster seems more human around them. I tried hard to remember how he was around his own children. Maybe, just maybe, this meant something. I needed to talk to Howard about it. Maybe this is part of what we've been trying to figure out.\n\nThat thought doesn't last long, because if Kisa and Lily are here, Angel isn't far behind.\n\nShe walked in wearing a cornflower blue sarong that matched her eyes. Everyone in The Shack paused for a second, subconsciously catching their breath before talking again. Looking at Angel is like staring into the sun.\n\nShe was always beautiful, but once she got her little girl back and claimed Grease as hers, it was like somebody took the cover off a star. Pregnancy seems to make her even more spectacular. Chief told me once that he thinks it's because everyone hopes she has as many babies as possible -- her girls look just like her, and that goes a long way to making the world a more beautiful place.\n\nShe flopped into the chair Danni had been in earlier - Danni had obviously gone off somewhere - with an exaggerated sigh of relief. She's just kidding, of course, she's her usual radiant self and the walk from her house is short and easy, even herding her little girls along.\n\nI pulled two cups and a glass of guava juice for the three of them -- it's the girls current favorite. Probably more because it's sweet and pink than because they like the flavor - they're little girls after all. And Angel always drinks whatever they drink.\n\nAngel took her glass with her usual grace, while the girls, took their cups with a dual chorus of \"Thank You!\" falling apart into a series of giggles.\n\nWhile the girls giggled, Angel took a long drink and looked up at me. \"There will about thirty guests at the bonfire tonight. Thomas called me over the radio.\"\n\nThomas is Grease. Angel is the only one who calls him that, though. It's part of her claim on him -- a claim that defines her, as much. or even more than her beauty. Even as breathtaking as she is, nobody hits on her, even drunk, ridiculously rich tourists. She only has eyes for him, ever. And she wears that like a suit of armor; even the most foolish couldn't miss it.",
        "I've seen guys try, and watched as their clever plans and practiced lines died before launch. It's that obvious.\n\nA wicked smile crept on her features. \"They'll be hungry by sunset. He said the two of you could have saved time and just thrown the food into the sea yourselves.\"\n\nI chuckled to myself, reflecting that no matter how rich you are, you can't buy sea legs.\n\n\"I'll have plenty of steak.\"\n\nSomething flickered over Angel's features. \"Can you make some of that Street Chicken? Some of the wives don't like steak or fish that much. Maybe fifteen breasts.\"\n\nStreet Chicken is another specialty of the Shack. You can buy it off street carts from Bangkok to Phnom Penh to Hanoi. It's pretty simple and its really best made with thighs, but rich people don't do chicken thighs. Just soy sauce, garlic, onion, black pepper and a little palm sugar -- brown sugar will do in a pinch, a little vegetable oil. Marinade it for an hour if you can. It's amazing made over charcoal. Skin on. That's especially critical with chicken breasts, they'll dry out otherwise. I'd have to make at least six times what Angel asked for -- the smell of the chicken goes down the beach forever and draws in wandering tourists like a magnet. They'd pay the beach party fee for just a taste of the chicken.\n\n\"I'll go check -- I can always send over to Nomo for more if I don't have it.\n\nShe gave me a smiled \"thank you\" but there was a hint of something I couldn't read in it. Sadness, maybe. Almost expressionless. Odd on her. She was the happiest person I knew, other than Grease, of course.\n\nI walked back toward the store room; Ex followed, telling me she wanted to grab a couple packets of cookies for the girls while I was in there.\n\nAngel's sadness. Something was wrong, I knew it. I distractedly clicked the light to the storeroom and walked in.\n\nI was sure something was wrong. I just couldn't figure out what.\n\nUntil Ex clicked the door shut behind her.\n\n\"Monster knows about your plan.\"\n\nI felt air suck out of my lungs.\n\nI was a dead man. I had a chance. Less than a chance really. If I could reach the shotgun behind the chest freezer. Probably less than 10 percent, even if I got to it before Monster came through that door.\n\n\"Don't.\"\n\nA different voice. From a figure perched on the chest freezer.\n\nI watched horrified as Danni drew a subcompact .45 from under her sarong. That liquid economy of force and effortless speed, almost too fast to follow. The tiny twisting wrist movement as she drew.\n\n\"Monster taught you.\"\n\nShe smiled with a touch of pride. \"Dad made me practice all the time.\"\n\n\"It shows.\"\n\nKeep them talking. If they're talking, they're not shooting. I edged sideways slightly, hands up just a bit, until I could see Ex, leaning back against the door. Get them both in sight.\n\nIt wouldn't help this time.\n\nThe gun muzzle followed my center mass like it was alive, effortlessly and smoothly. As if Monster were holding it.\n\nThere'd be no chance. If he drilled her that well, shooting me would simply be reflex.\n\nEx was unarmed, but through that door... the old map warning \"Here Be Monsters\".\n\nThey were both in on it. And Angel had sent me here. She must have known.\n\nEx shifted her stance.\n\n\"We need to talk. Monster figured out that you know he's... different now.\"\n\nI didn't bother denying anything, it'd just waste time. Cause frustration.\n\n\"He's operating. In the States. No sanction. And we saw him before he had his cover figured out.\"\n\n\"He's protecting the children... and the grandchildren.\"\n\nI thought about that for a second, but it didn't change the main problem.\n\n\"With your guidance. And with you tempering him. Where does it go if something happens to you?\"\n\n\"He has a plan for that.\"\n\nShe let that hang.\n\nDanni shifted. \"I'm the plan.\"\n\n\"He'll listen to you?\"\n\nShe breathed in deeply. Once. \"That. Or... he knows he could accidently become a threat to the grandkids. So he's been training me since I was seven. He wouldn't be able bring himself to kill me, even if he could kill Finn or Patrick. Probably not them, but definitely not me.\"\n\nI blinked. Monster had trained, prepared, his own daughter to kill him if she had to.\n\nEx glanced down. \"And we have a backup plan to that.\"\n\nI closed my eyes for a second, as pieces fell into place. \"Kisa and Lily.\"\n\nThat's why the babysitting. Simple transference. The more Monster was around them, the more they became \"his\".\n\n\"And Shameless. To protect them, he'll listen to her.\" Ex's voice sounded hollow, far away.\n\nShameless. She called her Shameless. Angel would never send me into a trap, never willingly risk harming a friend. But Shameless? She'd do anything to protect her children. She already had. And there'd be no more lethal guard dog than Monster.\n\nEx continued. \"If something happens to me, to Danni, Monster will move back here. There's no threat here. Not much anyway, and he can watch over Angel's girls. And he knows you can help with that.\"\n\n\"I'll have to tell Howard.\"\n\nDanni smiled, a slightly predatory smile. \"Finn's talking to him now.\"\n\nShe paused, and her smile broadened. \"And Patrick is overseeing the installation of a swimming pool at the house. In the back. Just off the patio.\"\n\nFrom my expression she could tell they'd guessed right.\n\n\"Dad figured that would have given you about a twenty- five percent chance.\"\n\n\"Thirty.\"\n\nDanni outright grinned at that. \"Where'd you get the extra five percent\"\n\n\"Howard would have been wearing a vest. Frag and a deadman switch\"\n\n\"Ooh. Wicked. I'll have to remember that.\"\n\n\"So what now?\"\n\nDanni slid off the freezer and reholstered her gun in a single smooth motion.\n\n\"You have chicken breasts to count, and I have to go pee. My bladder is the size of a peanut right now.\"\n\nShe pushed right by me and Ex let her out the door, then shrugged. \"I remember that. Sucks, you have to pee every 15 minutes and it's like three drops.\"\n\nShe looked at me with a hint of sadness. \"We appreciate what you and Howard were doing. We really do. But it's taken care of. Danni just wanted this settled before she had the baby. She was being honest when she said it was family stuff. You and Howard are family, you know.\"\n\nShe smiled again, this time with a little humor. \"It really is just allergies, Pogo. I promise.\"\n\nShe walked out, leaving me with my mind going a million miles an hour and a whole lot of chicken to bring out.\n\nBy the time I was finished, they had all left. They'd even cleared their table.\n\nThe beach party was a combination of normal and bizarre. The grill, the fires, the music were all perfect. The trophy wives even seemed to be enjoying themselves, although I was certainly burning through a lot of Tequila, so maybe it was just basic chemistry and biology at work. Things I'd never thought of as odd stood out. Angel and Danni in matching sarongs, giggling over something. Maybe me. I'd never realized how similar their mannerisms were until now. Monster playing pirates with Kisa and Lily, both of whom were laughing and screaming joyfully. Only now I realized that their sword fight was the first Escrima drill we taught to new team members. He was already training them. Like he had his own children.\n\nEx was watching in frank approval. I wasn't sure whether it was because the girls were having fun or because both the little blonde girls had the fighting stick first form down perfectly.\n\nAngel caught me up the beach as I headed over to pick up more chicken; even my optimistic estimates hadn't come close, tourists were pouring in. I ended up sending a runner down to Nomo for more chicken and more shoyu -- soy sauce.\n\n\"I'm sorry.\"\n\n\"I understand, Angel.\"\n\n\"It's for the girls. And Thomas. I have to protect them.\"\n\n<br> When she said that, her accent was heavier and her brilliant blue eyes seemed to dim.\n\nI didn't want to talk to Shameless. I'd rather talk to Angel.\n\n\"It's a great party tonight. The chicken is going as fast as I can make it. It was a really good idea.\"\n\nShe caught the rather unsubtle hint. \"I really wanted the chicken for myself. It's my favorite. Sorry for tricking you into it.\"\n\nA bit of both Angel and Shameless, I'd settle for that.\n\nGrease was as clueless as I had been. I didn't say a word to him. He didn't need to know that although he was married to Angel, Shameless was still watching over all of them.\n\nClean up took until almost 1 AM. I was writing a sign to announce a late opening of The Shack so I could at least get a little sleep. It's good to be the boss sometimes.\n\nShe walked in silently.\n\nDonna was in her usual suit, but her bodyguards were wearing flowered Aloha shirts, of all things. Didn't help hide what they were; a thug in an Aloha shirt looks pretty much like a thug in an Aloha shirt. The fact that their side arms were obvious under the shirts didn't help.\n\nThe meaning sunk in.\n\nSpooky.\n\nGod Damn It.\n\nMy Spooky.\n\nI gripped the bar and felt my knuckles go numb as I tried to breathe. I didn't want to let Donna talk. I didn't want to hear her say it.\n\nSomething had gone wrong.\n\nVery wrong. Or Donna would never come here.\n\nShe pulled a chair out on the closest table and sat in it primly.\n\n\"Sit down, Poz.\"\n\nShe's the only one that calls me that, and only when it's damn serious.\n\nIt took forever to walk over to the table. I'd grabbed a bottle of black rum and two glasses on my way, just to stall for time. I just wanted thirty more seconds without having to hear it.\n\nI sat, poured us both a slug and downed mine without pausing and poured another.\n\nShe downed hers as well. And waited while I filled the glasses again.\n\n\"You know I wouldn't be here if it wasn't serious.\"\n\nI nodded.\n\n\"It's just bad luck. She didn't make any mistakes. Sometimes shit happens.\"\n\nMy second slug went down in one long swallow.\n\n\"One more year would've been fifteen. She could've just walked if she wanted to, no questions asked.\"\n\nShe stared at her hands.\n\nA sudden, cruel, hyena-like smile split her face.\n\n\"How the hell you knocked her up, I'll never know. We take precautions against that.\"\n\nIt took a second for me to get it, and she continued.\n\n\"No way in hell I'm forcing her to get an abortion, or risking my nephew or niece on a damned mission. Shit. Imagine how pissed Mom would be if I got her grandchild killed?\"\n\nI glared at her. My own sister thought doing this to me was funny? Danika had gone by \"Donna\" since before I was born.\n\nShe smiled - a real smile. \"Don't be an asshole. She's worried to death that you'll kick her out. She's waiting at your place, fucking terrified out of her mind. She's loves you like crazy, you know. She's just not good at saying it. And you know it's your kid. She's a practical girl -- if there was even a hint that it could be anyone else's, she'd have just had an abortion. She stopped doing Swallow and Honey Trap work over a year ago. At her request.\"\n\n\"Why the hell...\"\n\nShe cut me off, \"I wasn't just doing this for kicks. Well, maybe a little. I needed to know you felt the same way before I let you go home.\"\n\nShe paused for a second. \"You two may have an age difference, but her life's been rough, so maybe the mileage is closer than you think.\"\n\nShe stood up. \"Poz, marry her and bring her around for Christmas, or So Help Me God, I'm telling Mom.\"\n\nThe second she walked out, I had the place closed and was running down the beach.\n\nThe sign on The Shack announced it'd be closed all day. Due to Family Issues.\n\nPost Production Notes.\n\nSome potentially unfamiliar terms, just in case:\n\nA deadman or dead man switch detonates if a person is killed -- grip release is common, but there are a lot of other options.\n\nA chicken switch is a remote detonator used by another person if a suicide bomber is injured, killed or loses his/her nerve before detonating. It's also commonly referred to as a buddy fucker switch.\n\nEscrima or Eskrima is a stick fighting martial art from the Philippines that was heavily favored by US Special Mission Units for a very long time, and still is in some of the darker corners.\n\nA Swallow is a female agent who uses sex to entrap, entice or control. A Raven would be the male equivalent.\n\nHoney Trap refers to entrapment operations conducted by a Swallow or Raven."
    ],
    "authorname": "Todd172",
    "tags": [
        "romance",
        "violent",
        "monster",
        "the shack"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/pogos-very-long-day"
}