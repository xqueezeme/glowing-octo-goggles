{
    "title": "Becoming Who We Are Ch. 09",
    "pages": [
        "<p align=\"center\">Becoming Who We Are: Chapter Nine</p>\n\nThe final chapter. Trigger alert: Violence and suicide themes.\n\nCopyright 2021 to the author\n\n**\n\n\"What do you mean, no?\" Jeff asked, his eyes narrowing.\n\n\"I mean exactly that: No,\" the girl replied, hugging her books to her chest as she met his eye. \"I won't go out with you.\"\n\n\"Whatever,\" Jeff said, turning away. \"Would have done your popularity a world of good, though,\" he added over his shoulder.\n\nThe girl laughed.\n\n\"Haven't you heard? Your stock's been going down for weeks. You'll be lucky to get a date to the prom, you loser.\"\n\nJeff stalked away, pretending he had not heard her last words. His cheeks blazed. Bitch! She was just saying that. It wasn't true.\n\nFuming at this rejection -- girls did not say no to Jeff Rohrbach and get away with it -- he marched into Coach Spencer's classroom, just missed knocking over a desk in the first row, and slammed down onto his seat. The teacher gave him a quelling look as he counted out the test papers, and Jeff put his fury out of his mind. He'd deal with his rage later. Right now, he had a test to take, and he had to do well if he expected to get into Penn State on his academic merits alone. By the time the bell sounded, his face had lost most of its fierceness.\n\n\"Class, put all papers, books and backpacks under your desks,\" Mr. Spencer said, grabbing a sheaf of papers from his briefcase. \"It's time for the exam. Remember, we're on fourth lunch today because of this final, so do not get up at the second lunch bell.\"\n\nTwenty-three students obeyed as the coach stood at the head of the first row, poised to pass out papers. As the final students shoved their possessions into the racks below their chairs, the teacher thrust six tests at Bill Abrams, the first student in the first row. The students rushed to pass the tests to the people behind them, intent on squeezing every possible second out of the class period.\n\nAs his classmates swiftly scribbled solutions on the scrap paper included with the exam, Luke stared numbly at the questions. While he recognized the equations and symbols, his brain refused to comprehend what they meant. He closed his eyes for several seconds, but the paper did not turn into another, easier exam. Fighting a surge of anxiety, Luke carefully examined each question. Not one sparked any response from his brain.\n\nHe wiped his brow and shuffled his feet. The teacher looked up from the sports magazine he was reading, but saw no students sneaking peeks at others' papers. His glance rested briefly on Luke. Why wasn't the kid writing anything? Coach had always heard Oriental kids were supposed to perform brilliantly in math, but this kid had shown no signs of doing so. He certainly looked panicked right now.\n\nShrugging, the teacher returned to his magazine, flipping to an article on college football standouts. A photograph of an Asian face startled him. Geez, the kid weighed more than two hundred pounds: he looked like a tank. Coach Spencer had had no idea Oriental kids could grow that big. Involuntarily, he glanced at Luke again, noticing with a tinge of concern that the kid still had not picked up his pencil. Around him, the other kids wrote and sighed and frowned and gazed at the ceiling for guidance. Luke remained perfectly still. Frowning, the coach glanced back at the magazine.\n\nThe boy kept his head bowed as the numbness spread through his body. When the teacher gave the five-minute warning, Luke grasped the pencil and wrote on his scrap paper an apology to his teacher and a request to take the final again.\n\nThe coach intercepted him in the locker room after gym. He thrust Luke's note at the boy's nose.\n\n\"What's this?\" he barked. \"Why didn't you do the exam?\"\n\n\"I don't know,\" Luke said, apparently to the floor. \"I just couldn't concentrate.\"\n\nThe coach regarded the boy with a mix of concern and exasperation.\n\n\"That's not much of an excuse,\" he said. \"If that's all you have to say for yourself, I'm going to have to fail you.\"\n\nLuke started, looking up into the man's eyes. He thought briefly about telling him of his problem with Jeff, but rejected that idea. The coach liked his star player; he did not like Luke.\n\n\"Then I guess you'll have to fail me,\" Luke said, hunching into his shoulders.\n\nWhile the coach was many things, including brusque, hardheaded, chauvinistic, and inflexible, he was not a fool and he was not completely unfair. He rubbed his chin as he studied the pale boy.\n\n\"No,\" he said. \"Not yet. I'll give you one day to tell me what's going on. Then I'll decide what I'm going to do.\"\n\nLuke stared up at him but said nothing.\n\n\"So it's all up to you, kid. I'll expect to see you during lunch tomorrow.\"\n\nThe coach turned around and walked away. Luke tramped up the stairs to his locker, collected his things and slowly made his way out of the building. He had a lot to think about, but his mind seemed unwilling to focus on anything but the failed test. No matter what happened, his mother would be furious.\n\nJeff had largely left him alone in the last few weeks, although his deputies still collected Luke's lunch money each day. As Luke trudged down the sidewalk, his thoughts on his mother's likely reaction to this latest failure, he forgot to remain alert. He never even saw Jeff before he collared Luke and dragged him into the bushes next to the large church south of the park.\n\nThe older boy wasted no time slamming his fist into Luke's belly, causing the air to whoosh from Luke's lungs as he fell. Jeff leapt on top of him, smashing his nose with one hard blow. Luke gasped and struggled, breathing in blood and coughing, but the stronger boy seemed possessed by some new and frightening rage. Jeff muttered as his fists flew, but Luke could not make out the words. He did his best to protect himself from the pummeling, but too many punches connected.\n\nAs Jeff methodically mauled Luke, he saw first the mocking face of the girl who had rejected him that morning. Her face melted into that of his old girlfriend, which morphed into his mother's. He barely heard Luke's cries he punished them all.\n\nAbout a block away, Officer Andy MacCaffrey shivered as he walked. His driver's license put his age at twenty-three, but people who did not know him usually figured the man for a gangly sixteen year old. Assigned to the south end, he had the option of wearing civilian clothes, which he had chosen to do today. Most of the time, people mistook the out-of-uniform officer for a student, which suited him fine. He heard more interesting tidbits that way.\n\nAs he paused at the south end of the park, his radio discreetly crackled with a report of a fight at the church. He opened his coat and acknowledged the call, then broke into a run. Rounding the corner, he witnessed a burly young man plant a powerful punch in the face of a smaller kid. He sprinted to the struggling pair, grasped Jeff's collar and pulled him up, shouting that he was a police officer. Jeff closed his fist as he whirled to face his new opponent and slammed it into the officer's bulletproof vest.\n\n\"Ow!\" he shrieked.\n\nThe officer grabbed Jeff's hand and neatly twisted it behind his back even as he kicked the kid's feet out from under him. He shoved the blond to the ground, planted one knee on his back and reached for his handcuffs.\n\n\"You are under arrest,\" he chanted. \"You have the right to remain silent...\"\n\nSeeing this, Jack Curtis trotted out of the church and went straight to the boy on the ground. Dear Lord in heaven, this was the second bleeding child he had helped in the last month. Kids really had gone crazy these days. Despite the protests from his knees, he knelt stiffly beside the panting child and peered at his face.\n\n\"You all right?\"\n\nLuke ran his tongue around his mouth to check on his teeth, wiped his face with one hand, then regarded the resulting blood on his glove with dismay.\n\n\"I guess not,\" he rasped.\n\n\"That was some beating you were getting,\" Jack Curtis said. \"I'm the one who called the cops.\"\n\n\"Thanks,\" Luke said.\n\n\"You know him?\" Jack asked, nodding toward Jeff's slumping figure.\n\n\"Uh, no,\" Luke said.\n\nJack Curtis shook his head.\n\n\"Don't lie to me, child.\"\n\n\"He's in one of my classes,\" Luke admitted. He sat up and groaned. Jeff had never touched his face before. He needed to get home and throw his clothes in the wash before his mother found out. Rising to his feet, he wavered, then took a few steps.\n\n\"Where do you think you're going?\" Jack demanded.\n\n\"Home,\" Luke said. \"I've got to get home.\"\n\n\"Don't you think you should talk to the police first?\"\n\nLuke paused, considering, then shook his head.\n\n\"I don't want to press charges.\"\n\n\"Good Lord, why not?\" Jack stared at him.\n\n\"It'll just make things worse when his friends find out.\"\n\nAn officer in uniform approached the pair.\n\n\"You okay?\" she asked Luke.\n\n\"Yeah.\"\n\nShe shook her head slightly at Jack. He took the hint and left.\n\n\"I'm Officer Shea. Can you tell me what happened?\"\n\n\"Uh, I really don't want to press charges,\" Luke said miserably.\n\nShe lifted one eyebrow at him.\n\n\"Why ever not?\"\n\n\"When his friends find out I ratted on him, they'll be after me.\"\n\n\"Be that as it may, we need to know what happened. You don't have to press charges, since, as I understand it, he assaulted a police officer. Still, we'd like to know what led up to it.\"\n\n\"You won't use my name?\"\n\n\"That's right.\" She frowned, wondering how the other kid had scared this one so comprehensively. He reminded her of a child trying to avoid accusing a parent of abuse.\n\n\"Well, I was walking home, and as I was walking by the church, he jumped me.\"\n\n\"And?\"\n\n\"He punched me a few times.\"\n\n\"And?\"\n\n\"That's it.\"\n\nShe peered at him over her notebook.\n\n\"Has he ever done this before?\"\n\nLuke stared past her, watching an officer handcuff Jeff.\n\n\"Look,\" he said desperately. \"My dad got shot last year in New York and my family doesn't need to go through this again. We don't want any more trouble. Can't you just let me go home?\"\n\nOfficer Shea pursed her lips, thinking rapidly. The kid did look wretched, in need of medical attention, really. She supposed she could always call him later.\n\n\"If you'll give me your name, address and phone number, okay.\" She passed her notebook at Luke, who scribbled the requested information into it and handed it back.\n\nShe glanced at it, then back at the boy.\n\n\"All right then. You want to go to the hospital? A couple of those cuts don't look so good.\"\n\n\"I'll clean up at home,\" Luke said. \"Can I go now?\"\n\nDespite her misgivings, the officer let him go. She watched him plod away, pitying the poor thing. He struck her as one of life's perpetual victims. No self esteem at all. She shook her head, closed her notebook and wandered back to the squad car as the old church clock struck three.\n\n\"So who is he?\" she asked, pointing at the boy in the back seat.\n\n\"Jeff Rohrbach, age eighteen, football star at White Rose before he broke one arm in a game,\" Andy said.\n\n\"He told you that?\"\n\n\"Only the name and age part,\" Andy said. \"As for the football star bit, well, you know how I follow sports. I read about him in the paper.\"\n\n\"Oh, geez, the papers'll be all over this,\" she said. \"Better call the captain.\"\n\n\"Already did,\" Andy said. \"The captain was not pleased.\"\n\n\"Because you arrested Mr. Rohrbach?\"\n\n\"Because he knows he'll be getting calls from reporters for the next week.\"\n\nThe officers shared a smile before getting on with the matter at hand. The captain's dislike and distrust of reporters was a standing joke.\n\nAn hour later, shackled and humiliated, Jeff jabbed his home telephone number into the keypad. After seven rings, his father picked up.\n\n\"Dad?\"\n\n\"Where the hell are you?\"\n\n\"I'm at the police station. I'm in trouble.\"\n\n\"Well, what do you want me to do about it?\"\n\n\"Come get me. They said the district justice will set the bail, but it probably won't be more than a few hundred bucks.\"\n\nBill Rohrbach snorted.\n\n\"Where am I supposed to get that kind of money?\"\n\n\"I don't know,\" Jeff said, feeling desperate. \"Just come, will you?\"\n\n\"What are you in for?\" Bill asked suddenly.\n\n\"Assault.\"\n\n\"Who'd you hit?\"\n\nJeff hesitated, avoiding eye contact with the three police officers glaring at him.\n\n\"A cop.\"\n\n\"What a stupid shit you are! You hit a cop?\"\n\n\"He wasn't wearing a uniform,\" Jeff protested.\n\nBut his father was no longer listening.\n\n\"I can't believe what a dumb shit you are! I'm not wasting my money on bail for you. Maybe that coach of yours will take up a collection.\"\n\nJeff heard a click and stared in disbelief at the telephone.\n\n\"He hung up on me,\" he said. \"That bastard hung up on me.\"\n\nThe officers exchanged glances. This case appeared entirely capable of taking up their entire shift.\n\n**\n\nLuke stumbled into his house, noting with relief the absence of his mother's car. God, he hurt! And he felt so terribly thirsty. Dropping his backpack at the foot of the stairs, he made for the kitchen. He drank an entire glass of water without taking a breath, then refilled the glass to take upstairs. But first he had to assess the damage done to him and take care of his stained clothes.\n\nIn the bathroom, Luke gaped at his reflection, his hand involuntarily moving up to touch his swelling nose. He winced and yelped. Maybe it was broken. He squinted at the mirror. With his nose in full throb and one eye already blackening, the smears of blood on his cheeks and forehead hardly seemed worthy of concern. The crusted path of dried blood from his nose to his chin rated a long look, and he touched it gingerly as he inspected it. It did not hurt, but the skin below it felt tight. With a sigh of resignation, he decided to wash his face. It would surely hurt, but he needed to do it.\n\nThe results hardly seemed worth the pain. Without a coating of blood and dirt, the bruise around his eye and his puffy nose appeared worse than ever. He checked the medicine cabinet for aspirin, but could find none. He rubbed his chin, grimacing as he hit another bruise. It just figured, he thought.\n\nHe shucked his clothes off, wriggled his shoulders and examined his arms for further damage. His forearms had a darkening spot or two from defending himself, but otherwise, his body below the neck seemed fine. Tossing the towel on top of his clothes, Luke carried the pile to the washing machine, dumped them in, and turned it on.\n\nPicking up the glass of water, he tramped upstairs, put on his sweats, and lay down on his bed. The full force of the day hit him then. He blotted tears with his sweatshirt's sleeve as he considered the failed test. That would send his mother into a rage, and who could predict what she would do then? She could hardly ground him any more than he already was grounded. She could not set any more chores to him, as he already did most of them anyway. All she could do, really, was scream and rant and rage at him, and maybe slap him for his stupidity.\n\nHe rose slowly and sat at his desk. Shelly's number lay there, written in the precise script Luke admired. Although he had stopped calling her a few weeks ago, he could not bring himself to throw away the slip of paper. He reached for it, padded down the hall to the telephone, then stood with his hand on the receiver for several minutes before making his decision. He needed someone. Perhaps this time she would listen.\n\nEngrossed in her homework, Shelly jumped as the phone rang at her elbow.\n\n\"Hello?\"\n\n\"Shelly? It's Luke. Please listen to me.\"\n\nShe closed her eyes at the pleading in his voice, willing herself not to cave in.\n\n\"I have nothing to say to you,\" she said, and hung up.\n\nWiping her eyes, Shelly regarded the phone, hating herself more than ever. Luke was a really nice guy, and deserved better than the treatment she gave him. Of course, she would never be good enough for someone like him. She wished he would give up on her so she could continue her slide into self-pity and depression. She could not understand what he saw in her. Sighing, she rose from the chair and trudged to her room. Hearing her footsteps, Shelby trotted to her, his toenails clicking on the wood floor. In her room, he jumped to the bed beside her and licked her face.\n\n\"Oh, Shelby. What's wrong with me? It's not like I don't like him. It's just... if he ever found out what I'm really like, what a loser I am, he'd never speak to me again. I just couldn't deal with that.\"\n\nThe dog's tail thudded against the bedspread and he gave a muffled whine. She buried her face in his fur and clutched him. Although her grip felt a bit tight for comfort, Shelby allowed the girl to hold him for a long time, as if he understood her need.\n\nLuke stared at the silent telephone for a few moments before new tears made their way to his eyes. He stumbled to his room, then crumpled onto his bed. His nose throbbed, his eye hurt, and his entire body ached from the attack. He had failed his test. His mother hated him. So did Shelly. He had nothing. He was nothing.\n\nLuke moaned. He wanted to die.\n\nHow long he lay there before no more tears could flow, he did not know. His head pounded, as much from crying as from the beating. As the church clock struck three, Luke hobbled to his desk and fumbled for his secret notebook, the one in which he kept his story ideas. Finding a pen tucked inside, he wiped his burning eyes. Writing always helped him clarify his thoughts. Sniffing, he put the tip of the pen to the paper, drew a deep breath, and began.\n\n\"I feel like I've sunk into a pit I can't get out of. I wish I knew how I got here, or how to escape all those people standing at the top of the pit looking down at me. They're sneering, laughing, and shouting how useless, worthless, and disgusting I am. I look up and see my mother and father, Jeff, Mr. Spencer, Shelly, and even John. They drop rocks on me and shout, 'Scum! Scum! Scum! Scum! Not worth a damn to anyone!' They laugh even harder as the rocks hit me and I wince and cover my head to deflect the rocks. As I fall to the ground, I hear my mother shriek that I can't even fall down as well as my brother. The others chortle in agreement, then chant, over and over, 'Failure! Failure! Failure!'\"\n\nHis shoulders slumping, Luke stared at his essay. His lips quivered as he thought about what to write next.\n\n\"Today in math class, I failed my final. I couldn't remember any of the material, so I just looked at the test paper for the whole period. I wrote Mr. Spencer a note, but it didn't do any good. I can't seem to concentrate on anything anymore. I wish I had someone to talk to, but Shelly won't even speak to me, and Mark's so busy with Melina he barely notices me. I'm not mad at him for that, but sometimes I wish he'd remember I need him, too.\n\n\"I just feel so stupid and worthless. No matter how hard I try, nothing I do makes my mother happy -- she seems to look for things to yell at me about. And Dad just lets her. He never sticks up for me anymore.\n\n\"I wish I could be a little kid again, when all I had to worry about was keeping my play clothes clean and not losing my toys. Everything was so simple then. My parents loved me, John loved me, and I loved everyone. Sometimes I even wonder if they loved me even back then, and I wonder if anyone will ever love me again. Why should anyone? I have nothing to offer. I'm so useless and pathetic, it's a wonder my parents didn't throw me out years ago.\"\n\nHe paused, frowning over that last sentence. While he did not really think his parents would have done so, he did believe they would have preferred his death to John's. His pen wavered, but he decided to let the sentence stand.\n\nPutting down his pen, he rubbed his temples. Geez, his head ached. It felt as if a convention of conga drummers was holding a competition in his cranium. He sighed gustily, and picked up his pen.",
        "\"Maybe I don't mean that. I wish I knew how to say what I do mean. I just feel like dying, I'm so miserable.\n\n\"Nobody loves me. Nobody wants me. I'll never be any good at anything. So what's the point? I swear, no one would miss me if I did die. In fact, it would probably make my mother happy.\"\n\nHe blinked as the paper blurred before his eyes.\n\n\"Damn it! I've been punished and punished and punished for living when John died. I JUST CAN'T TAKE IT ANYMORE.\"\n\nHe looked down at the paper, idly noting that his last words had torn a hole in the sheet. His fists clenched, then released. He decided to add two more thoughts.\n\n\"Tell Mark and Mary I love them and I'm sorry. And if you're reading this, Mom, I have only one thing to say to you: I HOPE YOU'LL BE HAPPY NOW!\"\n\nLeaving the notebook open on his desk, he went downstairs to root through his father's cluttered tool drawer in the kitchen. He remembered seeing something inside it that he could use.\n\n**\n\nAs Mark sat on the couch with Melina's head in his lap, he played with her hair and let his mind wander. In the months since Homecoming, he had still not quite grasped the notion that this marvelous creature was his girlfriend. Well, of course, it wasn't as if he'd had trouble with girls before. In New York, he always found dates for dances -- when his parents allowed him to go, he thought with a mental snort. Still, he had never had a relationship that lasted more than a couple of weeks. And he had certainly never grown so close to someone who wasn't Chinese. As his finger traced patterns in her hair, he smiled to himself. It struck him as funny that here, in a place with far less racial diversity than New York, his set of friends was the most diverse he had ever had.\n\nMelina felt his stomach muscles contract with amusement and opened her eyes.\n\n\"What's so funny?\"\n\n\"Nothing much. I was just thinking how much my life had changed.\"\n\nMelina smiled up at him and he caressed the line of her jaw, admiring the way the lapis earrings looked next to her skin. Since he had given them to her, she had hardly taken them off.\n\n\"I feel the same way. We're only a hundred miles from where we used to live, but it's totally different.\"\n\n\"In a good way?\"\n\n\"Mostly. If we hadn't have moved here, I wouldn't have met you.\"\n\n\"Thanks for mentioning the important stuff first.\"\n\n\"Any time. Of course, not everything's peachy all the time, but part of that might just be that everything keeps changing, whether we like it or not. Like, before this year, Julie would not have had her pregnancy scare. For instance.\"\n\n\"Hmm. That really got to you, didn't it?\"\n\n\"Yeah,\" she sighed, taking a sip of her water. \"I've never seen her so scared. She's always been my big sister, telling me what to do. It was weird to tell her what to do for once.\"\n\n\"Lucky for her you knew what to do. So what ever happened to Cliff anyway?\"\n\n\"They're still going out. She's very serious about him.\"\n\n\"How serious?\"\n\n\"Don't know. She was talking marriage at Christmas, but that might have changed, too.\" She shrugged and sat up. Mark put an arm around her shoulders, and she leaned into him, enjoying the contact.\n\n\"Are you serious about me?\" he asked, eyes twinkling.\n\n\"Fishing for compliments?\"\n\n\"Hardly. Looking for information is more like it.\"\n\nShe gave his cheek a light kiss.\n\n\"I wouldn't hang around you so much if I weren't serious. How about you? Are you serious?\"\n\n\"Always, except when I'm not.\"\n\nShe rolled her eyes.\n\n\"Answer the question.\"\n\n\"What question?\"\n\n\"Are you serious?\"\n\n\"If you're talking about whether I'm serious about you, the answer is yes.\"\n\nShe sighed.\n\n\"Good.\"\n\n\"Did you really have any doubts about that?\"\n\n\"Not really. But it's nice to hear you say it.\"\n\nHe leaned in for a kiss. He loved the way her lips felt against his: warm and soft, yet resilient.\n\nThe church clock chimed four o'clock, which brought them abruptly to their senses. Both adjusted and smoothed their clothing.\n\n\"I guess we'd better get started on that history homework,\" Melina said, reaching for her backpack near the door. She dumped its contents on the floor and realized she had forgotten her history folder.\n\n\"Do you have that exam worksheet Cowden gave us last week? It looks like I have my book, but not my folder.\"\n\n\"It's at home. Don't you have yours?\"\n\n\"Nope.\"\n\nShe sat back.\n\n\"Are you sure yours is at your house?\"\n\n\"Yeah. It's on my desk.\"\n\n\"Well, can we go over there? I mean, would your mom mind?\"\n\nHe paused, considering.\n\n\"I doubt it. She'll be at work by now. We're not supposed to have friends when they're not home, but I don't see why we can't chance it. We won't be there that long.\"\n\n\"If you're sure it won't get you in trouble...\"\n\n\"Don't worry about it. The worst thing that can happen is she'll find out and yell at me. No big deal.\"\n\nMelina eyed him, but he seemed confident the plan would work. They put on their coats, collected their books and headed out the door.\n\nAs they approached his house, both teens noticed the absence of Mrs. Tang's car. Melina relaxed. The woman had mellowed toward her since that first meeting in the Tang house, but the aftertaste of that encounter remained. Not wanting to provoke her again, Melina made sure to mind her manners around the woman.\n\nMark had his key out to open the front door, but the knob turned when he tried it.\n\n\"Guess Luke's home,\" he said, ushering her inside. \"Let's go on upstairs.\"\n\nMark spotted the review sheet atop the neat stack of papers on his desk and grabbed it. Behind him, Melina shrugged out of her coat, plopped onto the bed and unzipped her backpack.\n\n\"You want to quiz me first?\" he asked, joining her on the mattress.\n\n\"Sure.\"\n\nThey had reached only the fifth question before Melina's bladder made its presence known.\n\n\"Mind if we take a break? I think I drank too much water at my house,\" she asked.\n\n\"Bathroom's down the hall, second door on the left.\"\n\n\"Thanks.\"\n\nShe rose, darted down the hall, and tried the knob. It turned, but the door did not budge. Frowning, she rapped on the door.\n\n\"Is somebody in there?\"\n\nNo answer. Melina's frown deepened. Perhaps the door was stuck. She tried the knob again. The door refused to move. She pushed harder. Nothing. Putting her ear to the door, she thought she heard water sloshing. She listened for a few more seconds, but the sound died away.\n\n\"Hey, Mark,\" she said, returning to his room. \"Does that bathroom door stick or something?\"\n\nHe looked up.\n\n\"I don't think so. At least, it never has.\"\n\n\"Well, I can't get it open.\"\n\n\"That's weird.\"\n\nHe got up and joined her in the hallway. The door refused to open for him either.\n\n\"What the hell...?\"\n\n\"I could have sworn I heard water or something a couple of minutes ago, but I can't hear anything now. And this doesn't look like the kind of lock you can lock by mistake, like the ones we used to have in Gaithersburg.\"\n\nTheir eyes met, then flicked to the locked door. Mark raised his fist and pounded on the door.\n\n\"Luke! Are you in there?\"\n\nSilence.\n\n\"Luke! It's Mark! Answer me!\"\n\nSilence.\n\nTheir panic rising, the teens stared at each other in horror. Closing her eyes, Melina deliberately slowed her breathing, almost hearing her mother say that a panicked rescuer is a useless rescuer. As Mark threw himself against the unyielding door, a scene from the Gaithersburg townhouse came to her. Her dad, opening the door Julie had accidentally locked, explaining that if you could not open a door the traditional way, try the side with the hinges.\n\n\"Does this hallway have a light?\" she asked suddenly.\n\n\"What the hell difference does that make?\"\n\n\"We need to see the door and the hinges. We might be able to get in that way.\"\n\nHis eyes round, Mark gaped at her for a moment, then jerked away to find the hall switch. The light revealed the deadbolt bridging the space between the door and the frame, and the old-fashioned hinges on which the door swung.\n\n\"He's locked himself in,\" she muttered, more to herself than to Mark.\n\n\"Maybe I can kick the door in,\" Mark said, and put his plan into action.\n\nForcing herself to keep her cool, Melina stared at the hinges, trying to remember how her father had done it. He had aimed the screwdriver upward and hit it, forcing the little bar out of the hinge's loops. Beside her, Mark was panting and calling his brother's name. She put her hand on his arm to get his attention.\n\n\"Go get me a hammer and a screwdriver,\" she said.\n\n\"What for?\"\n\n\"So we can get this door open, from the hinge side. We're never going to break it down. Too solid.\"\n\nHe stared at her for a moment before comprehension flooded his face. \"Okay.\"\n\nHe tore down the stairs to his father's tool drawer, reappearing within a minute with the necessary tools.\n\n\"What do we do?\"\n\n\"Aim the screwdriver at the bar inside those metal loops,\" she said, touching the spot in question. \"You ought to be able to hammer the thing up and out.\"\n\nIt took several tries, with both teens feeling their jaws tighten at each missed stroke. Just as Melina decided to wrench the tools from Mark's hands so she could try, he loosened the top hinge and pulled the bar out. The bottom hinge cooperated much more quickly. The door came off its hinges with the creak. The teens rushed into the small room, then stopped short.\n\n\"Oh, my God!\" Melina gasped, covering her mouth with her hands.\n\nMark could only stare. His brother lay in a tub of crimson water, his nose puffy, one eye blackened and swollen shut. Even as they watched, his head slowly slid toward the water's surface.\n\nA long moment passed. Then Melina gave a convulsive shudder and found herself able to think again.\n\n\"Call nine-one-one!\" she shouted, shoving Mark towards the door. \"Get an ambulance here!\"\n\nMark wavered for a moment, then ran from the room.\n\nBiting her lip, Melina knelt beside the tub, eased her hands into the hot, bloody water, and lifted one of the boy's arms. Blood flowed from an ugly gash at his wrist. She reached over the still form to grab his other arm. It had an identical cut. She raised both of his arms and looked wildly around the room. The towels caught her eye as Mark reappeared.\n\n\"They're coming,\" he said. His eyes widened as he noticed the cuts.\n\n\"Get those hand towels,\" Melina barked. \"We can use them to cover the cuts and maybe stop the bleeding.\"\n\nRipping the towels from the bar, Mark jumped over to join her.\n\n\"I'll take one arm, you take the other?\" he suggested, already wrapping a towel carefully around one of his brother's wrists. Melina did the same.\n\n\"Now we have to hold his arms above his heart level and apply pressure,\" she said.\n\n\"Is his heart still beating?\" he asked.\n\nMelina's stomach lurched. She had forgotten to check!\n\n\"I don't know,\" she admitted. \"Can you hold his arm while I check?\"\n\nLuke's neck felt slippery and cool as Melina searched for his carotid artery. She had to press harder on his neck then she would have liked, but she thought she detected a faint pulse. She held her other hand just above his open mouth, trying to feel any exhalations. Was that a slight puff of air?\n\n\"His heart's beating, and I think he's breathing.\"\n\n\"What do we do now?\"\n\n\"We keep doing what we're doing,\" she said, frantically trying to recall the material on which she had so often quizzed her mother. \"Uh, we probably ought to talk to him, too. My mom says hearing's the last sense to go before someone goes unconscious.\"\n\nMark nodded.\n\n\"Luke?\" he said. \"I don't know why you did this, but we're here with you and we're going to get you out of this. You're going to be okay, and we're going to find whoever beat you up and make him pay. Can you hear me at all?\"\n\nLuke lay perfectly still. Mark closed his eyes against the sight.\n\n\"Luke, it's Melina. I'm here too, and everything's going to be all right. You're going to be all right. I promise. The ambulance will be here soon, and you'll go to the hospital, and they'll fix you up good as new. I'll even put in a good word for you with the nurses -- they were real nice to me, and I'll make sure they're nice to you.\"\n\nShe knew she was babbling, saying the first silly thing that came into her head, but it seemed important to let him know people cared about him. How awful to feel so disconnected that death seemed preferable to life!\n\n\"Maybe my mom will be on the ambulance that's coming. She'll take great of you. She's the best. She's even studying to be a paramedic, so she really knows a lot.\"\n\nWith a nod to Mark, she checked Luke's pulse again. She could still feel a distant throb. As she strained to feel the boy's breathing, the faint sound of a siren penetrated the bathroom.\n\n\"Thank God,\" Mark sighed. \"I thought they'd never get here.\"\n\n\"Me either.\"\n\nThe siren grew louder, then stopped as the ambulance pulled up to the house. A few seconds later, the doorbell shrilled.\n\n\"Did you leave the front door unlocked?\" Melina asked.\n\n\"I don't think so,\" Mark replied, glancing at the arm he held. She unclasped one of her hands from the wrist she held and grasped the other arm.\n\n\"Better hurry,\" she said. \"I'm not sure how long I can hold them both.\"\n\nBut Mark had already dashed out the door. He thundered down the stairs as the doorbell rang again. Flinging open the front door, he almost wept at the sight of Kate Taylor and three other EMTs.\n\n\"Mark, honey,\" she said, shocked to see the boy. \"What's happened?\"\n\n\"My brother. He's upstairs. He... he slit his wrists. Come on. I'll show you.\"\n\nHe led the four to the bathroom, where Melina still held the boy's arms above the water. Kate allowed herself a surge of pride in her daughter.\n\n\"Hi, Mom,\" her daughter said in a small voice. \"Luke's still got a pulse and I think he's breathing, but that's all I know.\"\n\nTwo of the EMTs moved up to the tub. Melina let go of the boy's wrists as older, professional hands took over. She rolled back on her heels and stood unsteadily, her shoulders sagging with relief at the arrival of the team, her legs quivering with strain.\n\n\"How long has he been like this?\" Kate asked.\n\nMark and Melina looked at each other.\n\n\"I don't know,\" Mark said. \"At least twenty minutes, maybe longer.\"\n\n\"All right,\" Kate said, turning to the other EMT not at the tub. \"Let's go get the litter.\"\n\n\"Will he be okay?\" Mark said, but the pair had already trotted downstairs. Mark and Melina backed out of the bathroom, wanting to watch, but not wanting to get in the way.\n\n\"How old's your brother?\" one of the medics called over his shoulder.\n\n\"Nineteen,\" Mark replied.\n\n\"Where are your parents?\"\n\n\"At work.\"\n\n\"Can you call one of them and tell them to meet us at the hospital?\"\n\n\"All right.\"\n\nMark's feet dragged as he made his way down the hall to his parents' bedroom. He hated the thought of calling his parents. On the one hand, he felt sorry for them: it seemed like Mary had only just recovered. On the other, he wasn't sure how they'd respond to the news that their least-loved child had tried to commit suicide. His hand trembling, he picked up the receiver and punched in the restaurant's number.\n\n\"Lucky Garden,\" his mother said.\n\n\"Mom, it's Mark.\"\n\n\"What?\" she said, hearing the tension in his voice.\n\n\"You need to come home. There's... been... It's Luke.\"\n\n\"What about him?\" Mrs. Tang snapped.\n\n\"They're taking him to the hospital.\"\n\n\"What?\"\n\n\"The ambulance is here and they're taking him to the hospital.\"\n\n\"Why?\"\n\nMark hesitated, and closed his eyes.\n\n\"He slit his wrists.\"\n\nMrs. Tang sank to the stool behind her. Surely she had heard Mark incorrectly.\n\n\"He what?\"\n\n\"He slit his wrists,\" Mark said, more forcefully this time.\n\n\"What'd he do a stupid thing like that for?\" she asked, recovering her usual tone.\n\n\"I don't know. All I know is that he did, and the EMT told me to call you so you or Dad can meet them at the hospital.\"\n\n\"But we have the dinner rush...\"\n\n\"Mom! This is serious! He may die! Don't you get it?\"\n\n\"He's just trying to get attention,\" she said, but a note of uncertainty colored her tone. \"He wouldn't really hurt himself.\"\n\n\"Mom! I saw the cuts. He totally meant to hurt himself.\"\n\n\"Oh, all right,\" she said. \"I'll go to the hospital. You stay at home. How he manages to be more trouble than the rest of you put together, I'll never know.\"\n\n\"Just go,\" Mark said, and hung up.\n\nHe sat on the bed for a moment, drumming his fingers on his thighs. An inspiration hit him and he strode to Luke's room. He saw an open notebook on the desk, picked it up and read.\n\nMelina and Kate found him with his head bowed and tears coursing down his cheeks. He thrust the notebook at Melina. Both women scanned the note before Melina threw her arms around Mark, as her mother patted his shoulder.\n\n\"Why didn't I see it coming?\" he moaned. \"I should've known.\"\n\n\"I'm awfully sorry, Mark,\" Kate said. \"I know this isn't an easy time, and I hate to intrude, but we're ready to go. Did you find one of your parents?\"\n\nHe nodded, not trusting his voice.\n\n\"Will someone come to the hospital?\"\n\n\"My mom.\"\n\n\"Good. If I may, I'd like to borrow that notebook.\"\n\nAs Mark extended it to her, they heard a metallic clatter in the hallway as Kate's colleagues maneuvered the litter out of the bathroom.\n\n\"I have to run,\" Kate said. \"But you both did very, very well with the first aid; in fact, you probably saved his life. I'm very proud of you both.\"\n\nShe gave Melina's hair a quick caress and dashed down the hall to join her peers. Downstairs, a door slammed. Melina felt the strength drain from her legs and sank onto the bed. Mark joined her.\n\nFor a while, they simply sat, eyes staring, brains numb, everything forgotten but the horror of the afternoon. Mark shuddered, and Melina put her arm around him.\n\n\"You okay?\"\n\n\"I'm cold,\" he said, shivering.\n\n\"So am I,\" she said, only then feeling the chill that enveloped her body. \"Of course, we're both pretty wet.\"\n\n\"And the water was pretty hot,\" Mark added sadly. \"He really meant to do it, didn't he?\"\n\n\"It looks that way,\" she said cautiously. \"But he'll be okay. My mom says the doctors at the hospital are terrific, and she ought to know.\"\n\n\"How could I have not seen it?\" he demanded. \"My own brother felt so miserable he wanted to die, and I didn't even know.\"\n\n\"How could you?\" Melina asked. \"It's not like people talk about suicide over their corn flakes or anything. And you've said yourself your family doesn't do open, candid communication, especially about things that matter.\"\n\n\"I should have seen it,\" Mark said.\n\n\"I'm telling you, you couldn't have seen it. My mom says most times, nobody sees something like this coming.\"\n\n\"I should have seen how depressed he was.\"\n\n\"What would you have done if you had?\" Melina asked, exasperated.\n\n\"I don't know,\" Mark said after several seconds of silence. \"But I should have seen it coming.\"\n\nFresh tears stung his cheeks. Melina hugged him to her and rocked him gently, stroking his hair as her own tears flowed.\n\n\"Nobody could have seen it coming,\" she said as she felt her tears slow. \"I'm sorry, but you couldn't have stopped him. You've got to accept that.\"\n\nHer firm tone brought Mark's head up. A ragged sigh escaped from him as he wiped his eyes.\n\n\"I guess you're right,\" he said, sullen. \"That doesn't mean I have to like it.\"\n\n\"I didn't say you did.\"\n\nHe brooded for another minute or two before he saw the stains on his sleeves.\n\n\"Geez, we're all bloody,\" he exclaimed.\n\n\"Yeah,\" she agreed, examining her own clothes. \"I guess we'd better get out of these things and into something warm and dry.\"\n\n\"How about sweats?\" Mark said. \"I have a bunch of them.\"\n\n\"Perfect.\"\n\n\"Come on. We can change in my room.\"\n\nOn their way, they passed the bathroom and couldn't help but look in. Wet, bloody towels lay on the floor beside the empty tub. Mark noted gratefully that someone had drained it. But the wall bore marks from the EMTs' equipment, and dark red splashes flecked the walls and floor. His mother would not appreciate that, he thought dryly.",
        "\"Maybe we should clean up while we're still wearing these clothes,\" he mused.\n\n\"How can you think of cleaning at a time like this?\"\n\n\"Can't help it. Mom has us trained.\"\n\n\"Your mom has big problems,\" Melina began hotly.\n\n\"Tell me about it. I've lived with her weirdness my whole life. So are you going to help me or do you just want to get some warm clothes on?\"\n\n\"Oh, I'll help. But I still think your mother needs even more help.\"\n\n\"But that isn't the Tang way,\" Mark said, bending over to pick up the dirty towels. \"You're supposed to deal with your problems yourself, and not ask for help.\"\n\n\"Well, that's just stupid. Look at where that attitude's gotten your family.\"\n\n\"I didn't say it was right. I just said it was how we handle things.\"\n\n\"I'm sorry,\" Melina said, touching his arm in remorse. \"I didn't mean to yell at you. I'm just mad at your mother, I guess.\"\n\n\"You and me both,\" Mark said, acknowledging her apology with a tight little smile. He turned back to face the bathroom. \"I guess we can wipe down the walls with a sponge.\"\n\nThey had nearly finished the job when the telephone rang. Thinking it might be the hospital, Mark ran to pick it up.\n\n\"Hello?\"\n\n\"Hi, this is Patricia Cowden. Is that you, Mark?\"\n\n\"Yeah,\" he said, fumbling for words. \"Um, what's up?\"\n\n\"I was just trying to reach your brother. Is he available?\"\n\nMark swallowed, trying to decide what to say.\n\n\"Well, no. He's... in the hospital.\"\n\n\"But he was in school today,\" she said, concerned. \"Has there been an accident?\"\n\n\"No.\" Mark paused. He liked the teacher, and he knew Luke practically worshipped her. Abruptly, he decided to tell her the truth. \"Actually, Mrs. Cowden, he slit his wrists this afternoon.\"\n\n\"Dear Lord in heaven,\" Mrs. Cowden breathed. \"Is he...?\"\n\n\"I don't know. My mother's supposed to be on her way there, and I'm supposed to stay here. In fact, I thought you might be the hospital calling.\"\n\n\"Sorry,\" she said absently. \"Here's my number,\" she added in a firmer voice. \"Call me when you know, one way or the other.\"\n\n\"Okay.\"\n\n\"And Mark, dear, I'm very sorry about this. I'm extremely fond of Luke.\"\n\n\"Oh. Uh, thanks.\"\n\nPatricia Cowden stared at the silent telephone in dismay. Luke was such a nice kid, and so talented. How could he even think of taking his own life? She shivered. How could she not have seen this coming?\n\nShe glanced down at the letter in front of her.\n\n\"We are pleased to inform you that \"Gold Mountain,\" White Rose High School's entry in the Pennsylvania Heritage Writing Contest, has been awarded first place in the general fiction category. As the winner, Luke Tang shall receive a one thousand dollar prize and an award certificate, to be presented by the governor at a ceremony in Harrisburg.\n\n\"The ceremony will take place at 1:30 p.m. on Monday, February 12, at the State Capitol, after a special luncheon for the winners and their families and friends. Enclosed please find eight tickets for Mr. Tang and his guests, and eight tickets for representatives of your school and school district.\n\n\"Please acknowledge receipt of this letter by Jan. 31 and indicate how many people will attend in both parties.\n\n\"The governor, as well as our board members, look forward to welcoming Mr. Tang and congratulating him on his fine work. His story placed first among three hundred and fifty-five entries.\n\n\"Other winners were: Karl Wilhelm, Pittsburgh City Schools, Pennsylvania fiction; Maria Sottile, Philadelphia Suburban Schools, general non-fiction; and Donna McCardle, Wilkes-Barre Suburban Schools, Pennsylvania non-fiction.\"\n\nThe final paragraph blurred before her eyes. Luke had to be okay! He just had to! She couldn't stand the thought of such a talented boy ending his own life.\n\nShe stood, wiped her eyes and thrust the envelope into her purse. She'd go to the hospital and tell Luke the news, whether or not he was conscious. He deserved to know. And if his parents just happened to be there, so much the better. Maybe the contest victory would open their eyes at last.\n\n**\n\nLucy Tang strode into the emergency department, torn between fury and concern. She marched to the registration desk, head high, lips pursed, fists clenched.\n\n\"I'm Lucy Tang,\" she announced to the nurse at the desk. \"An ambulance brought my son, Luke, here.\"\n\nThe nurse tapped on a keyboard.\n\n\"Ah, yes,\" she said. \"Tang, Luke. He's being treated now over in the emergency department. Before you see him, we need some information, Mrs. Tang. Could you fill out this form for us?\"\n\nLucy Tang was in no mood to fill out any forms.\n\n\"My daughter, Mary, was treated here just a few months ago. Can't you get the information from her file?\"\n\nThe nurse's eyebrows arched in surprise, but she said nothing, instead typing the new name into the computer.\n\n\"Here it is,\" she said. \"If everything's the same, Mrs. Tang, this will do just fine.\"\n\n\"Nothing's changed,\" Mrs. Tang snapped.\n\n\"Well, then, why don't you take a seat in the waiting room?\" the nurse suggested. \"The doctor will be with you as soon as possible.\"\n\n\"Do you know how long it'll be before Luke's ready to go home?\" Mrs. Tang asked. \"I need to get back to work.\"\n\n\"I really couldn't say, Mrs. Tang,\" the nurse said, her expression blank.\n\nScowling, Mrs. Tang found a seat well away from everyone else. As she drummed her fingers on her chair's arm, her mind focused on her fury. Trust Luke to disrupt everyone's day completely. She sat fuming for fifteen or twenty minutes before a woman in a white lab coat approached her.\n\n\"Mrs. Tang?\" she asked.\n\nLucy Tang jumped. \"Yes?\"\n\n\"I'm Dr. Ebraheim. I've been treating your son. Will you please come with me?\"\n\nLucy had no choice but to follow the tiny doctor to a cramped conference room. The women sat down on opposite sides of the table. The doctor flipped open her folder.\n\n\"Well, now, Mrs. Tang, your son is a very lucky young man. We were able to get to him in time to save him, and I understand we have your younger son to thank for that.\"\n\n\"Mark's a smart boy,\" Mrs. Tang said, grasping at the more pleasant topic of her other son. \"He's very bright -- even wants to be a doctor.\"\n\n\"I'm sure he'd make a fine one,\" the doctor smiled. Her face grew serious again as she continued. \"As for Luke, we believe he's out of the woods physically. He had lost a lot of blood, so we gave him several units and stitched up his wounds. He also had a broken nose, a black eye and several contusions, which I'm at a loss to explain. They appear to be the result of a severe beating earlier today. Do you know anything about them?\"\n\nLucy Tang's mouth sagged open.\n\n\"No. This is the first I've heard about them.\"\n\nThe doctor watched the woman closely, but she seemed to be telling the truth.\n\n\"Do you know if he has been beaten before?\"\n\nMrs. Tang frowned.\n\n\"No. I don't think so.\"\n\nThe doctor scrawled a couple of notes.\n\n\"Well, then. Once your son's condition is stabilized, we would like to transfer him to our mental health unit.\"\n\n\"What? Why would you want to do that?\"\n\n\"Your son tried to commit suicide, Mrs. Tang. We take that very seriously here.\"\n\n\"I hardly think that's necessary. He's only trying to get attention.\"\n\n\"Mrs. Tang, I have practiced medicine for the last fifteen years. I know the difference between a half-hearted suicide attempt and a serious one. In my opinion, your son definitely meant to take his own life.\"\n\n\"I don't believe it.\"\n\nThe doctor pulled a small notebook from her folder and held it up.\n\n\"Is this your son's handwriting?\"\n\nMs. Tang peered at the page.\n\n\"Yes.\"\n\n\"Please read it. This is a note Luke wrote before he made his attempt. I'll leave you alone if you need some privacy.\"\n\n\"I'm sure I don't, doctor,\" Mrs. Tang said, her back erect and shoulders stiff.\n\nDr. Ebraheim observed the woman closely as she read. When Mrs. Tang's face crumpled, she knew the woman believed her at last. The doctor rose noiselessly and slipped out of the room.\n\nA tall woman carrying an enormous handbag nearly barreled into the doctor as she crossed the waiting room.\n\n\"Oh, I'm so sorry, uh, doctor,\" the woman apologized.\n\n\"No problem,\" Dr. Ebraheim said. \"Can I help you?\"\n\n\"Well, I'm here because one of my students, ah, injured himself this afternoon. I wanted to make sure he's all right and pass along some very good news that may perk him up a bit.\"\n\n\"What's his name?\"\n\n\"Luke Tang.\"\n\nDr. Ebraheim had learned long before medical school how to maintain a pleasant but unreadable countenance. Even as she sized up the taller woman, she kept her face bland. She had already spoken to the boy's next of kin, so she could, in conscience, talk with this teacher. She gave one decisive nod and ushered Mrs. Cowden into another conference room.\n\n\"Frankly, Ms....\"\n\n\"Cowden. Pat Cowden. I'm Luke's history teacher.\"\n\n\"Farida Ebraheim.\"\n\nThe two shook hands.\n\n\"Frankly,\" the doctor repeated, \"I'm glad you're here. I hope you can tell me a little about this family.\"\n\nTheir eyes met in perfect understanding.\n\n\"Well, doctor, may I assume this conversation will be kept confidential?\"\n\n\"On both sides, I hope.\"\n\n\"Certainly. As far as I can tell, the family dynamic is a bit odd. Luke is the eldest son. He has a brother, Mark, who's a year younger, and I believe a much younger sister as well. I've spoken to the mother on a few occasions, and I get a strange vibe from her. It's as if she dismisses Luke's talents altogether.\"\n\n\"And is he talented?\"\n\n\"Oh, yes. In fact, that's the good news I have for him. A story he wrote has just won a very prestigious statewide competition. And that'll be news to Mom, as she refused to pay the entry fee, saying they didn't have money to waste on such frivolities.\"\n\n\"So where did you get the fee?\"\n\n\"I paid it myself.\"\n\nThe doctor blinked.\n\n\"I know, but the circumstances were unusual,\" Patricia explained. \"It was such a good story, I felt sure it would at least place, if not win.\"\n\n\"And you are the only one who knows about this?\"\n\n\"For now, yes.\"\n\n\"Strange,\" the doctor mused, reverting to the topic of the family's financial status. \"She's well-dressed, and doesn't seem to lack money.\"\n\n\"Exactly. And from my understanding, the family is 'poor' only when it comes to Luke. His younger brother, who's a real doll, by the way, wears nice clothes and plays a very expensive saxophone.\"\n\nTwo furrows appeared between the doctor's eyebrows.\n\n\"Well, we'd have to get a social worker in anyway,\" she said cryptically.\n\n\"Because of how Luke injured himself?\" Patricia guessed.\n\n\"You're a very astute woman,\" the doctor said with a smile. \"You've been most helpful.\"\n\n\"Thanks. Now, in your professional opinion, how quickly will the child recover?\"\n\n\"Physically, it should not take too long. Mentally... who knows? So much depends on the emotional support he receives from his family and friends. Judging from the note he wrote, I'm not sure how much he has.\"\n\n\"He has me and all the help I can give him,\" the teacher declared. \"Speaking of which, do you think it would help him to know about the contest?\"\n\nThe doctor brightened.\n\n\"Definitely. If that isn't validation of his talent, what is?\"\n\n\"Would it be possible for me to see him?\"\n\n\"I don't see why not. In fact, seeing a friendly face would probably do him a lot of good. But we'll have to keep it short. Technically, I'm only supposed to let family see him, and we'll probably have to let his mother go first.\"\n\nDr. Ebraheim extended her hand.\n\n\"Thank you, Mrs. Cowden. You've been most helpful. And may I add, I'm glad the boy has people like you in his life. That makes his prognosis a lot brighter.\"\n\n\"Thank you, doctor. You can be sure I'll do everything I can to help.\"\n\nTheir eyes met again before the doctor opened the conference room's door. She returned to the treatment while the teacher looked around the waiting area. Mrs. Cowden spotted a woman who could only be Luke's mother. Straightening her spine, she walked over to introduce herself.\n\n\"Mrs. Tang?\"\n\n\"Yes?\"\n\n\"I'm Patricia Cowden. Luke's history teacher.\"\n\n\"Oh,\" Mrs. Tang replied, her tone frosty. \"What are you doing here?\"\n\n\"I called your house with some good news for Luke, and Mark told me what happened.\"\n\n\"He shouldn't have done that,\" Mrs. Tang said angrily. \"Family business should stay in the family.\"\n\n\"Well, what's done is done, and I came as quickly as I could. Mind if I sit down?\"\n\nLucy gave a grudging little nod, which Patricia pretended not to notice.\n\n\"Anyway, given that Luke is... unavailable right now, I thought I'd share the news with you,\" Patricia continued.\n\n\"What is it?\"\n\nI don't know if you recall, but last fall, Luke wrote a story called 'Gold Mountain.' He asked me what my opinion of it, and frankly, I thought it was good enough to enter in a statewide writing competition. You may recall we spoke about that.\"\n\n\"I seem to recall that.\"\n\nMrs. Tang was certainly not the easiest person in the world with whom to chat, Patricia thought idly.\n\n\"Well, to cut to the chase, I entered the story in the contest and I just received notice today that it won first prize.\"\n\n\"I beg your pardon?\"\n\n\"Luke's story took the first prize in the statewide writing contest. He beat more than three hundred and fifty other students around the state.\"\n\nMrs. Tang closed her eyes and swayed in her seat. She felt the other woman grab her arm.\n\n\"Are you all right?\" Patricia asked, not liking the woman's sudden pallor.\n\n\"I... I think I need to be alone for a few minutes, if you'll just excuse me.\"\n\n\"Of course.\"\n\nLucy stood, wobbly in her heels for the first time since, well, she didn't know. She made her way to the bathroom, locked the door, and leaned against the wall, heedless of the possible damage to her suit's jacket. This entire day seemed surreal. Perhaps she was dreaming and would soon wake up.\n\nThe mirror caught her eye and she noted her pale skin and hollow eyes with a pang. She flicked her gaze downward. Her throat felt as if she had just swallowed a cup of dirt and her heart seemed to have changed positions in her chest. She ran her fingers through her hair and shook her head. Surely she could not have been wrong about Luke all these years?\n\nYet -- he had won the contest. Despite her vagueness to Mrs. Cowden, she remembered perfectly the conversation they had had about the competition. It seemed impossible that he could have won. Maybe someone had made a mistake.\n\nFor a long moment, her mind blanked, then she slowly brought her gaze up to the mirror again. Yes, someone had made a mistake, and she knew exactly who that someone was.\n\nHugging herself, Lucy bowed her head, willing herself not to cry. She had lost one son, and nearly killed another. A moan rose from deep in her belly. She couldn't bear it! Her hands moved to her face as the tears came. Gasping, she slid down the wall until her tailbone touched the floor and sobbed for several minutes. Although she had not truly prayed in almost a decade, after a while, a sort of holy chant came to her. Please, God. Please, God. Please, God.\n\nPlease, God.\n\nPlease God.\n\nHer tears slowed as she sensed a sudden lightening in her mind. Her spirit felt clear and clean, like the sky after a thunderstorm. She sat that way for a long time, letting serenity and warmth flood through her soul, and quiet her pounding head and heart.\n\nRising, she almost laughed when she looked in the mirror. Good Lord, she was a mess! A sort of giggle escaped her. She had always believed in a solemn, remote God that dwelled in cold churches. Who knew He lurked in hospital bathrooms? Still chuckling, she dashed water on her face, until the last of her ruined make-up ran down the drain.\n\nFumbling for the doorknob, she glanced up at the ceiling. Thank you, she whispered. She stepped out of the bathroom and crossed the waiting area to the nurse's desk as a slight, dark girl with dog hair on her coat entered through the automatic doors.\n\n\"I'm Mrs. Tang, Luke's mother. Please -- can I see my son now?\"\n\n**\n\nEvery so often, February produces a spring day, a promise that the raw cold won't last forever. Mark and Melina intended to make the most of it.\n\nAfter promising he'd get home in time for dinner, Mark grabbed his backpack, donned a sweatshirt and walked briskly to her house.\n\nShe met him at the front door, already wearing her own gear.\n\n\"You sure about this?\" she asked.\n\n\"Absolutely,\" he said.\n\n\"Well, let's go, then. The bikes are in the garage.\"\n\nNot until he had his hands on Julie's old bicycle did he feel any misgivings. Years had passed since he had ridden a bike. What if he had forgotten how? He took a deep breath, shoved the thought to the back of his mind, and wheeled the bike into the sunshine. He fiddled with the helmet straps and swung his leg over the seat.\n\n\"Do you need to raise that? Julie's a few inches shorter than you.\"\n\nHe flexed his legs. The seat was probably a couple of inches too low, but he hated to postpone this ride any longer.\n\n\"I'll manage.\"\n\nShe rolled her eyes.\n\n\"Right. Get off and let's raise it. It's not that hard.\"\n\nWith a couple of practiced twists, she undid the knob that held the seat in place, raised it about three inches, and twisted the knob again.\n\n\"How's that?\"\n\nHe tried it again.\n\n\"Perfect.\"\n\nMelina swung her leg over her own bike's seat and settled onto it.\n\n\"Seeing's how it's been a few years, let's go around the block first.\"\n\nAnger at her assumption prickled for a second.\n\n\"All right, Mommy.\"\n\n\"Don't argue with your mother, sonny boy,\" she said equably. \"She knows best.\"\n\nA smile quirked her lips and his anger receded.\n\n\"Lead the way,\" he said.\n\nShe replied by inserting her foot into the toe clip and pushing off. Mark fumbled for a few seconds with the toe clips on Julie's bike before flipping the pedals over and ignoring the clips altogether. He wobbled as the bike moved forward and put his foot down. He glared at the handlebars. This would never do. Inhaling, he relaxed his shoulders and tried again. The first few revolutions felt choppy, but he quickly found a rhythm. The breeze cooled his cheeks, and he grinned. Success!\n\nMelina looped back to join him, and they made their way toward the college, basking in the balmy air. The silver in Melina's earrings flashed in the sunshine. Mark smiled again, remembering.\n\nShe had been truly magnificent on that awful day, nearly a month ago now. He had never known anyone who knew how to do so many things, and do them well. Mentally, he snorted. He'd probably still be trying to break the door down! And yet, even though she was so self-reliant and independent, she still claimed she needed him. For what, he had asked. For love, she had replied.\n\nThey entered the college's grounds and slowed, navigating the speed bumps carefully. Both carried half a picnic in their packs, and they hated to jostle the food and drinks any more than necessary.\n\n\"So what's your family doing today?\" she asked as they wended their across the parking lot.\n\n\"Dad's working until three, then coming home to fix a special dinner. That awards ceremony in Harrisburg's tomorrow, but they wanted to do something special first.\"\n\n\"That's a switch.\"\n\n\"Tell me about it! But it's a good one. I can't believe how different it's been.\"\n\nThey found a sunny spot and set up their Sunday picnic. Mark dished up the food his father had prepared, which had remained warm enough to send up a wisp of steam, and passed a bowl and a pair of chopsticks to Melina. She poured them both a cup of tea. They sat cross-legged as they ate, enjoying the food, the scenery, and the company.\n\n\"You looked good on the bike,\" Melina said as she tried to capture the last grain of rice with her chopsticks.\n\n\"So did you. I guess what they say about riding a bike really is true.\"",
        "\"Yeah. You know, I haven't been back on a bike since my accident, either.\"\n\nMark brightened. \"Really?\"\n\n\"Really. I told myself it was too cold to ride in the mornings, but...\"\n\nA girl with a dog stepped onto a nearby playing field. The dog clearly had control of the situation, with the girl walking, then jogging to keep up. Mark squinted at the pair.\n\n\"I think that's Shelly,\" he said.\n\n\"Who?\"\n\n\"That girl I told you about, the one who called right after the ambulance left with Luke.\" He stood and waved. \"Hey, Shelly!\" he bellowed. \"Over here!\"\n\nThe girl looked at them and waved back. Pulling on the leash, she shouted at the unwilling dog, \"Shelby! Behave! We're going this way whether you like it or not, you stupid hound!\"\n\nShelby ran ahead and cut in front of the girl, causing her to twirl to avoid tangling herself in the leash. The pair couldn't help laughing as Shelly trotted up with the unrepentant mutt.\n\n\"Silly dog,\" she said affectionately, then grinned at Melina. \"I'm Shelly.\"\n\n\"Hi. I'm Melina.\"\n\n\"I know. I've heard all about you.\"\n\n\"Oh?\"\n\n\"Luke likes you a lot.\"\n\n\"Oh, Well, I like him a lot.\" She paused. \"Are you good friends with him?\"\n\n\"Pretty good, even if I let him down at a pretty critical moment.\"\n\n\"Come on, Shelly,\" Mark protested. \"Would you quit talking like that?\"\n\n\"I can't help it,\" she said. \"I still feel totally guilty about that.\"\n\n\"Well, get over it,\" Mark said.\n\nMelina eyed him thoughtfully. He sounded nothing like the boy who blamed himself the day his brother slit his wrists.\n\n\"You showed up at the hospital when he really needed a friend, and you're still showing up,\" Mark said. \"That's what counts.\"\n\n\"Well, thank you, Father Mark,\" she said, smiling to take the sting out of the words. \"How many Hail Marys and Our Fathers do I need to say for penance?\"\n\nHe placed a hand on her head.\n\n\"I absolve thee, child. Go and sin no more.\"\n\n\"Would you two care to tell me what you're talking about?\" Melina asked.\n\n\"Not really,\" Shelly said. \"You could say I have some issues I'm working on.\"\n\nShelly smoothed her hair where Mark's hand had lain. If only they knew! The day after Luke's suicide attempt, Shelly had gone to school early to avoid talking to her mother and Frank, her mother's boyfriend. As she had entered the building, she had run into Sister Anne, her math teacher.\n\n\"Shelly! What are you doing here so early?\"\n\n\"Um, I have some studying to do, ma'am.\" Even as she had spoken the words, she had realized how weak they sounded.\n\nSister Anne's eyes had searched her face for several seconds.\n\n\"Come with me, please, to my office. I'd like to talk with you.\"\n\nShelly had followed the woman to a cramped room overflowing with books.\n\n\"Have a seat, dear. Have you had any breakfast?\"\n\n\"No, ma'am. I don't usually eat in the morning.\"\n\nShelly's stomach had chosen that moment to growl. The nun had caught her eye, and both had laughed.\n\n\"Perhaps you should reconsider your policy, dear. It so happens that I always greet the day with croissants and coffee, after morning prayers,\" she had said, pulling a thermos and a butter-splotched sack from her canvas bag. \"Would you care to join me?\"\n\n\"Please, ma'am.\"\n\nThey had eaten and drunk in companionable silence for a few minutes before the nun had spoken again.\n\n\"Would you care to share with me what's on your mind, dear?\"\n\nFor an awful moment, Shelly had simply stared at the woman, seeing Luke's fragile face in his hospital bed. And then, before she could censor herself, the entire story had tumbled out. At several points, Shelly had tried to stop her narrative, but the nun's kind face and Shelly's own need to talk to a sympathetic soul had compelled her onward. When the story, and Shelly's tears, had petered out, she had cowered, expecting the nun's censure. Instead, Sister Anne had gazed at her thoughtfully.\n\n\"That's an enormous load to have carried on your shoulders for so long,\" she had finally said. \"And a terrible thing that man did to you.\"\n\nStartled, Shelly had gaped at the woman.\n\n\"You mean, you're not mad at me? Frank told me it was my fault he did what he did, that if I hadn't been so, so sexy,\" and she directed her gaze to the floor, \"he wouldn't have done it.\"\n\nSister Anne's eyes had flashed.\n\n\"Bullshit! It wasn't your fault. You were a child. He was an adult. He chose to do what he did. Case closed.\"\n\nShelly blinked and reached down to fondle Shelby's ears. What a relief it had been to tell someone! Sister Anne had arranged for her to see a counselor that day and she had been going back twice a week ever since. And best of all, her mother had kicked Frank out of the house.\n\n\"You coming over tonight?\" Mark asked, changing the subject.\n\n\"Wouldn't miss it,\" Shelly said. \"I'm totally excited about it. I mean, it's hard to believe your mother actually invited me. She's really changed, hasn't she?\"\n\n\"Maybe,\" Mark said thoughtfully, \"but then again, maybe not. She's more like she used to be, before John died, I mean. Not that she doesn't still have her witchy moments, though. But the counselor's really helped.\"\n\n\"You could say she has some issues she's working on?\" Shelly asked drolly.\n\nMark grinned.\n\n\"We all have some issues we're working on, Shelly. You should know that.\"\n\n\"Too right,\" Shelly said.\n\n\"Totally,\" Melina agreed.\n\n**\n\nMr. Tang finished the prep work for the evening meal with a sigh. He had planned this meal for days, and he felt a little sad that it was almost over. Why had he ever stopped cooking for his family at home? His wife poked her head into the kitchen, saw the counter covered with meat, vegetables and herbs, and smiled.\n\n\"That looks like the old days, when you used to make feasts for the two of us.\"\n\nHe nodded and sighed again.\n\n\"It's a shame we quit doing that,\" she remarked in a soft voice.\n\n\"Yes,\" he replied. \"We never should have stopped.\"\n\n\"True,\" she said, returning to the hallway. \"But at least we realized it before it was too late,\" she called.\n\nHer closed his eyes against the tears that unexpectedly welled up. The sight of his son in his hospital bed had pained him like a shard of glass in his heart. Even now, he could not stop thinking about how close he had come to losing another child. It brought back the misery of losing his own father to the Red Guards.\n\nAs he put the food away, he considered the counseling sessions his family and he were attending. His mother would not have understood the need for it, and indeed he had not either -- at first. He had hardly opened his mouth during the initial session, but as the counselor encouraged them all to talk, he began to see the value of getting the poison out of their hearts and into the open, where they could dispose of it. His shoulders suddenly shook with mirth. Tang Wei was going to a shrink! He was truly an American now!\n\nHis work completed for the moment, he washed his hands, feeling a little lost. If he were at the restaurant, he'd be chatting with his cronies right now. He considered going over for a few minutes to check on them. No, he told himself firmly, don't do it. Instead, his feet led him upstairs, to his eldest child's room. He rapped on the door.\n\n\"Come in.\"\n\nLuke sat on his bed, a notebook beside him. Wei flinched as he spied the scars on his son's wrists. He had hated the sight of the white bandages wrapped around the boy's forearms, but the scars bothered him even more. At least the boy's nose had healed properly. Wei's hands curled into fists. He could not wait to see Jeff Rohrbach in prison, although their attorney had said the thug might get only probation, the attack on Luke and the officer being his first offense.\n\n\"What are you doing?\" he asked his son.\n\n\"Working on what to say if they want me to make a speech tomorrow.\"\n\nWei smiled as an inspiration struck him.\n\n\"You know, I've never read your story. Do you have a copy I could have?\"\n\nLuke looked at him. \"You really want to read it?\"\n\n\"Of course.\"\n\nGiving him a skeptical look, Luke riffled through a desk drawer and pulled out a stapled sheaf of papers.\n\n\"Here you go.\"\n\n\"Thanks. I'll go read it now.\"\n\n\"Whatever.\" Luke yawned and turned away from his father.\n\nMr. Tang clenched his teeth against the reprimand that came to his tongue. Luke would remain skeptical of his parents' love until they proved it to him, the counselor had warned them. Knowing to expect it provided scant comfort against the sarcasm in his child's voice, he reflected. Ah, well. How did the American saying run? What goes around comes around? He would simply have to wait.\n\nStory in hand, he went to his office and closed the door. Settling into his old chair, he put on his reading glasses and began.\n\n\"Gold Mountain!\n\n\"Everywhere, people buzzed about the rich land beyond the eastern sea. There, they said, the Chinese were welcome to make a fortune with everyone else. There, they said, a man could pluck his breakfast from the trees, as much as he could carry. There, they said, a man would find no mandarins, no warlords, no soldiers. There, they said, a man would find only riches waiting for him to collect them.\n\n\"Gold Mountain!\"\n\nWei blinked, and read on. By the time he reached the final passage, the tears ran down his cheeks. For a while, he let them, knowing nobody could see. He mopped his face with a handkerchief. Why had he never expected such intensity and grace from the child? He blew his nose and walked slowly up the stairs.\n\nAn unfamiliar noise woke Luke. He opened his eyes to see his father wiping his face and sniffling.\n\n\"Dad?\"\n\nFor a moment, Wei could only stare at his son.\n\n\"I'm so sorry,\" he finally said, his voice sounding rusty and harsh.\n\nLuke felt his own chin begin to quiver. He had never seen his father cry.\n\n\"It's okay, Dad. It's okay.\"\n\n**\n\nThe scents of freshly baked cake, steaming rice, pungent meat and fish, and piquant dumplings filled the building. Shelly inhaled hugely as she entered the house.\n\n\"It smells wonderful in here!\"\n\nLucy Tang smiled.\n\n\"My husband's a marvelous cook,\" she said. \"He used to tease me that I fell in love with him only for his food.\"\n\nShe guided the girl to the kitchen, where Luke, Mark, Mary, and Melina stood talking and watching Mr. Tang cook. Shelly joined them, while Mrs. Tang went to the cabinets to get the silver chopsticks and imported bowls that some of their old friends had chipped in to buy for their wedding. She hummed as she set the table. It had really been too long since they had done this.\n\nSuddenly everything was ready and all the Tangs ferried the food from the kitchen to the table.\n\n\"You can tell we're professionals,\" Mark said dryly to Shelly and Melina.\n\nThe group sat down and sniffed appreciatively.\n\n\"Grace?\" Mrs. Tang said.\n\n\"Of course,\" her husband said, taking the hands of his wife and his daughter.\n\n\"Dear Lord in Heaven,\" Mrs. Tang said, \"we thank you for this bounty before us. We ask that you bless it to the nourishment of our bodies. Forgive us our sins,\" and she paused briefly, \"and help us to forgive ourselves and those who have wronged us. And thank you, Lord, for all the gifts you have given us, especially our children and their talents. Help us to love them more, and forgive us when we do not value these precious gifts as we should. Watch over us as we travel to Harrisburg tomorrow for Luke's awards ceremony.\" She paused again. \"Amen.\"\n\nShe looked around the table. Every eye seemed fastened on her. No one moved.\n\n\"Well? Isn't anyone going to eat?\"\n\nWithin seconds, the sounds of chatter, clanging spoons and clicking chopsticks filled the Tang home. Luke and his mother demonstrated to Shelly how to use chopsticks, but she soon resorted to a fork.\n\n\"I want to learn,\" she explained, \"but at the rate I'm going, I'll never get a bite in my mouth. And this food is too good to miss.\"\n\nMr. Tang beamed at her. He had done rather well, he thought.\n\nDespite the immense quantities he had prepared, the group quickly cleared the platters. As Mary finished the last of her rice, Mrs. Tang caught her husband's eye and the two departed for the kitchen. Mary and Mark jumped up and cleared away the bowls and chopsticks as if they had rehearsed for this moment, Melina thought.\n\nThe adults returned bearing a chocolate cake and a stack of plates, which they set in front of Luke. His lower lip trembled as he read the words written in icing:\n\n\"Congratulations, Luke!\"\n\n\"Go ahead,\" his mother said when he hesitated. \"Everyone's waiting.\"\n\nBlinking back his tears, Luke cut out a corner piece."
    ],
    "authorname": "vanmyers86",
    "tags": [
        "suicide",
        "bully",
        "pennsylvania",
        "first love",
        "high school",
        "denouement"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/becoming-who-we-are-ch-09"
}