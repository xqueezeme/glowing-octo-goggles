{
    "title": "The Retirement Years",
    "pages": [
        "One of my editors thinks this is the hottest stroke story he has every read. Another said it wasn't a stroke story\u2014it was a stroke, stroke, stroke story. I think it may have taken a year to submit because it can be so slow typing with only one hand. \n\nOften tongue in cheek, this is an attempt to include as many sexual activities as I could think of, at least those that I find enjoyable. We have straight sex, oral sex, anal sex, ATM, mature, impregnation, lesbian sex, a very tiny bit of romance and even a loving wives component. I wasn't sure on the correct category...humor?\n\nThere's no Sci-Fi, BDSM, gay male, mind control, transsexual, non-consensual, nonhuman, interracial or scat. I don't enjoy those so I don't write about them. Oh, yes, I forgot...people cheat...just like they do in the real world every day. \n\nThis is a tad long; it's been rattling around on my hard drive for a year and it's time to submit and move on to other topics. Caution: this is not a love story! It is pure stroke with a bit of humor. Please don't send me feedback saying it is unbelievable---of course it is! \n\nThe Retirement Years, Prologue and First Chapter\n\nAt fifty-eight Frank had enjoyed a full and rewarding life. His two children from his first marriage were grown and well adjusted and successful in their own right. Jim's second wife, a number of years his junior was a successful executive who still enjoyed the world of work in spite of the fact that Frank's success had enabled him to retire younger than most men. Frank often joked that he was busier since he had retired a year earlier than he had been when he worked full time. He loved working with his hands and enjoyed building things and tinkering. He wrote several hours each day. His two pups were like special children to whom he devoted hours of attention. \n\nFrank had fooled around during his first marriage almost incessantly. He had in fact had numerous affairs and dozens of one night stands. Head over heels in love with his second wife, Frank had vowed to change his ways and had been faithful for the fifteen years of their marriage. His second wife, Bonnie, was a very attractive woman with a more than ample libido. While she often worked long hours by choice, their sex life was more than satisfactory to both of them. \n\nFor fifteen years, Frank had looked but not touched. He was still a handsome man in superb physical condition. Frank and his wife were older than most of the young couples in their small neighborhood. Most were his children's age; all were dual income families of college grads with excellent jobs and lots of disposable income. Many were starting families. A number of the working women in the neighborhood worked out of home offices as did a few of the men. As is typical in corporate America, it was not uncommon for at least one member of these young families to travel extensively. \n\nFrank was a member of one of the last generations who took shop---Industrial Arts---in high school. He had grown up on a farm and had learned at an early age how things worked and how you fixed them when they didn't. He had studied engineering and spent his successful business career in a highly technical field. He knew how to build things; he was a master carpenter, an accomplished plumber and a competent electrician. He understood how a house was put together. He knew what made engines run and how to diagnose the problem when they failed to do so. He seemed to be the only person---man or woman\u2014in the neighborhood who knew how to relight the pilot light on the water heater. Having built a seven figure nest egg in corporate America working with his mind, he found nothing remotely demeaning about working with his hands; he, in fact, found it intensely satisfying. \n\nTo the delight of many of his young neighbors, Frank became the resident handyman and rescuer of young damsels in distress. The young husbands viewed Frank, a legitimate member of their own parents' generation, as no sexual threat to their young and universally attractive wives. The young husbands were tickled that Frank could, \"handle\" things that they neither wanted to deal with nor, in most cases, knew how to deal with. When Saturday came around, they could play golf with their corporate buddies since Frank had been nice enough to help with many of the \"honey do\" lists. They rewarded him with praise and thanks, a case of his favorite stout or a fine bottle of wine. \n\nThere was a serious problem with this whole scenario. Foolishly many of the young husbands must have assumed that, as a man approaches sixty, his sex drive declines. In Frank's case the opposite was true. Frank had always been a good fuck and his fifty-eight year old cock was every bit as hard today as it had been at eighteen. It took him slightly longer to recover between fucks than it had at eighteen but his talented tongue and fingers could more than adequately fill the recovery interval. \n\nUnlike younger men, Frank had staying power that comes from experience. He worked out, maintained his cardio-vascular health, had remarkable stamina and took a variety of vitamins and supplements. His dick was probably slightly longer than average and thick. While familiarity with one's spouse may often lead to a loss of erectile rigor in the marital bed, the constant exposure to attractive young women in their twenties had the opposite effect. \n\nMost the of the young women in question too often \"forgot\" that Frank was still a virile male and were often less than modest in their attire and conversation around him. Having vowed to remain faithful, Frank beat off a lot during the first few months in the new neighborhood. His wife was pleasantly surprised at his exceptional ardor as he nailed her compact little body daily as soon as she arrived home from work. \n\nChapter 2, The First Time with Belinda\n\nHe had just relit his nearest neighbor's hot water heater pilot light. This , tall, long legged blond was one of his favorites with her scrubbed, makeup-free face, small but firm breasts and exquisite little ass. She was also a runner. She and Frank had become close and often chatted across the fence when she would take a break from her home office to attend to something in the yard or garden. Her husband reminded Frank of his own son in looks if not in temperament. Belinda's young husband was quiet and studious; he was a successful computer geek. Belinda was a manager in a very male oriented enterprise and tough as nails. He'd always loved business-tough women. \n\nBelinda never wanted to be helpless; she was now kneeling, head down, butt in the air examining the pilot light system as Frank explained the procedure to her. Next time she wanted to be able to handle this task on her own; that was her nature. Unfortunately in her current position, her firm little runner's ass was alluringly ensconced in her thin little nylon running shorts; she was either wearing a thong or nothing under those shorts. The white nylon had become almost transparent; her puffy cunt lips below were clearly outlined. Nope, there was no thong; just bare young pussy. Frank was wearing loose fitting cotton shorts; he was instantly bone hard and without underwear of his own it was unlikely that Belinda would miss his aroused state when she stood up and turned around. The fact that at least two inches of her tightly packed little ass crease was visible above the waist of the shorts didn't help Frank's condition. \n\nHaving grasped the essence of pilot light architecture, Belinda rose to her feet, turned toward Frank, checked out the bulge in his shorts, adopted a flirtatious smile and spoke. \n\n\"Frank, were you checking out my ass?\" \n\nHe could have denied it but it would have come across as bull shit. \n\n\"Belinda, I always check out your ass, most often when you're working in the yard. You have an astounding rear and I confess to being a dirty old man. You are a stunningly attractive young woman. I'm sorry if I offended you---but I won't promise not to check out your butt---or your firm little tits---any time I get the chance.\" \n\nBelinda, always the confident young woman, moved in very close. To his shock and pleasant surprise she grabbed his engorged cock through the thin cotton shorts. \n\n\"Am I responsible for this?\" Belinda queried coyly, knowing full well that she was. \n\n\"Without question, \" Frank replied. \n\nWith no words or preliminaries, Belinda yanked Frank's thin shorts down and began to examine his cock in earnest. \n\n\"God, you're really hard. . . and bigger than...ah, big! I feel terrible about putting my favorite neighbor in such obvious discomfort, \" Belinda said, as she began to caress Frank's organ with her little pink tongue. \n\nSoon she was sucking him off in earnest. Belinda was of the Clinton generation that didn't really view sucking cock as real sex. She wasn't really cheating on her husband. But this cock was so much harder than his...fatter...longer. She had always felt a real affection for her older neighbor and in truth found him quite attractive. Belinda knew that she was a premier cock sucker and could get any man to dump his welcome load quickly. Frank was no exception. After swallowing his big sweet load of cream she continued to suck and massage his big dick with her talented mouth, enjoying the excruciating, almost agonizing pleasure she knew she was giving him. What really surprised her was that unlike her husband's cock, Frank's was not deflating. \n\nPart of the reason was Frank's health and fitness regimen; the other was the 20mg of Cialis Frank had taken the previous morning, a Sunday, as he and his wife had engaged in one of their monthly all day Sunday fucks. It tended to last for up to thirty-six hours. Frank didn't really need the drug but all day fuck episodes had encouraged him to experiment. He had noted a few months back that his dick wasn't quite as hard as it had been when he and his wife were fucking. The Cialis had made a difference and his wife had been quite thrilled at how many times his bone hard implement had serviced her tight little pussy. \n\nBelinda had thoroughly enjoyed blowing Frank but now she wanted more. Her husband definitely had been falling down on the job recently as long hours at work on an important project had brought him home too tired to satisfy her on too many nights. There was an old but still serviceable mattress on the basement floor a few feet away. Belinda took Frank's hand and led him there. Frank needed no more encouragement or guidance. \n\nBelinda loved the fact that Frank wanted to kiss her cum drenched mouth; her husband was put off by the taste of his own spunk. She also thrilled at the gentle but persistent invasion of her little blond slot by Frank's probing fingers. He was fast; she was already naked from the waist down and had no idea when or how Frank had removed her shorts. Belinda was almost as tall as Frank and was even more surprised when he effortlessly picked her up and placed her just the way he wanted her on the mattress. This was unusual for Belinda; Frank was the aggressor now. Belinda's husband never assumed that role. Frank sat up and removed his t-shirt; he'd already kicked off his surf sandals. Belinda followed suit, skinning off her own t-shirt. Frank smiled and began to work down her muscular young form with his talented lips and tongue. \n\nAnd he was talented like no man she had ever experienced---and probably only one woman. He gently caressed her small breasts, worked his way down her smooth belly and teased her soft thighs. By the time Frank's hot mouth found the magic spot, Belinda was ready to cum. She did so within seconds. To her ongoing delight, Frank continued to eat her dripping little pussy; he was quite obviously aroused by her musky pussy secretions. \n\nShe was completely unprepared for the second, surprise, hiding-somewhere-in-there orgasm that Frank found. It was the most intense feeling her lithe twenty-seven year old body had ever experienced. As Frank moved back up her body to make love to her face and hold her in a warm post-orgasm embrace, Belinda could not miss the feel of his bone hard fuck tool grazing her tummy. I want that cock inside me. In the ass? No lube; maybe he's not into anal. I'm not on the pill; I doubt that he had a rubber. I'm not running upstairs to find my diaphragm. Fuck it...I'm trying to get pregnant anyway...aren't I? \n\nBelinda playfully rolled Frank over, squatted down on her well toned young thighs, grabbed his impressive organ and inserted it past her flushed little lips, sinking luxuriantly down over its impressive length. It wasn't an out of proportion porn star cock, she thought to herself, but it was easily an inch and a half longer than her husband's was...and fatter...and damn hard. \n\nBelinda rode Frank for a very long time; she came at least twice. Frank made love to her mouth...nuzzled her little titties...fingered her ass when she turned around to give him perfect access. The one thing Frank did not do was cum. Finally exhausted, Belinda collapsed on top of him. He held her lovingly with his fat cock still stiff and inside her. \n\n\"You didn't cum, \" she whispered. \n\n\"I didn't want to interrupt your hard work. I love being fucked like that with you on top riding my cock...but I've never been able to cum that way.\" \n\n\"How do you want me?\" Belinda replied, almost submissively; she was never submissive with men. \n\n\"It's your call, babe. I'll gladly fuck you from behind or in front with those long tanned legs pressed against your gorgeous breasts.\" \n\n\"You like my tits? Most people---my husband---think they're too small. I've thought of having implants.\" \n\n\"Don't you dare! Your breasts are absolutely perfect---I know I've been looking at them through your bra-less tee shirts and sports bras for six months. They make me just as hard as your compact little ass. Not to mention the fact that you have the most beautiful eyes I've ever seen. You are a perfectly gorgeous woman. Don't ever change a thing.\" \n\n\"And my pussy...is it tight enough for you?\" Belinda whispered lewdly, as she contemplated what position she would assume. \n\n\"I think so, but I'm going to have to check it out more closely, \" Frank replied with a grin. \n\nBelinda had always loved to be fucked like an animal from behind; she had made her decision and quickly assumed the position. To her delight, Frank worked her drenched little slit with his mouth and then to her absolute surprise began orally exploring her little anal ring. Her husband thought anal sex was gross and would never even think of ass to mouth. If he'd put his tongue in there Belinda was sure he'd put his cock in there. It had been too damned long...an affair with an older professor. \n\n\"You can do me in the butt, Frank, if you want too---just use your cum to make me slippery,\" she whispered. \n\n\"I'd absolutely love to and plan to---but I really want your little cunt this time. Is that okay with you?\" \n\nBelinda felt so deliciously dirty; she loved the word cunt. Her husband would never use that word...and Frank did anal. For a minute, Belinda had a vision of Frank banging his Executive Vice-President wife up the shitter. \n\nFrank soon had her taut little hips in his hands and his hard fuck stick buried in her twat. He fucked her deep and long...longer than she had ever been fucked. When he began to accelerate his strokes, she felt the tell-tale stiffening of his cock which signaled his impending orgasm. Her young pussy was on the verge of being numb, but it was a good numb. Still, she was not sure she could have taken too much more. For the first time in her young life a man had actually \"fucked her brains out,\" or more accurately, given her all the cock she could possibly handle. \n\nHer husband came in two minutes and then rolled over and went to sleep. She had ridden Frank for over fifteen minutes; he had then fucked her for another twenty minutes. She was in awe. Once again Frank rolled her over took her in his arms and cuddled her in the post-coital bliss that her husband all too often seemed to forget. She looked at his cock. He had softened but not alarmingly. She was sure she could get it hard again with her exceptional oral ability and probably go for the ass fuck she craved. They both checked the time simultaneously and quickly realized that it would not be prudent to continue. \n\n\"Belinda, I haven't cheated with anyone in the fifteen years that Bonnie and I have been married. I feel guilty as hell; on the other hand you are an amazing lover. If you tell me this was a mistake and it never happens again, I'm okay with that, but I'd be hurt if we couldn't still be good friends and neighbors. On the other hand, I'm feeling a little like a crack addict. If you want to fuck again...you know where I live.\" \n\nWith that, Frank took Belinda in his arms and kissed her with more romance than her husband had shown in a very long time. \n\n\"Still good friends and neighbors, Frank, but I feel guilty as hell also. Let's sleep on this and think about whether we want to continue---how we want to continue. Bluntly, I haven't been fucked that well since...ever! You may just need to add, \"satisfying horny young golf widows\" to your resume of aid and comfort provided to the neighborhood. Thanks for showing me how to deal with the pilot light.\" \n\nFrank saw and waved at Belinda a couple of times over the next two weeks, even chatting with her and her husband briefly over the fence. It seemed that Belinda had been on the road for her job and had spent little time over the two weeks in her home office. Both she and Frank acted as if nothing had happened between them. \n\nChapter Three, Meeting Buffy. \n\nFrank and his wife had received an invitation to a neighborhood garden party the following week. They were pleased that, while older than the rest of the neighborhood, they were included in their social events. \n\nThe garden party was a smorgasbord of finely honed young female flesh. It was summer and all were dressed in an enticing assortment of nothing-to-hide-sun dresses, short shorts, tennis skirts and the like. \n\nAs so often happens with a group of this age, they broke off into small groups of guys or girls to talk. Frank knew many of the folks in attendance, probably more than his wife did. As he was smiling and trying to appear interested in a discussion of the merits of high end zero turn lawn mowers, he noticed his wife chatting with a delightful little brunette across the room. She could not have been much over five feet tall with long hair and a stunning body poured into a form hugging pair of jeans. Before he could move over and be introduced, Belinda's husband had him by the arm and wanted to introduce him to someone. \n\nHe was a nice enough guy, Jack, good looking and definitely in sales. \n\n\"Frank, I'm so glad to meet you. I'm told you're the neighborhood expert on all things mechanical. My wife is driving me nuts to install one of those back-up generator systems which I believe you have. The problem is, with installation and everything, it's going to cost over five grand. Now I really want to buy a new lawn tractor; if we spend five grand on the damned generator there's nothing left in the discretionary fund for my lawn machine. I've been told you know how to get it done for a hell of a lot less.\" \n\n\"Well, Jack, it can be done for a lot less than five thousand. I've got a resellers license and can order it on line for around eighteen hundred including freight. Half the cost of one of these systems is installation---the materials, gas pipe, electric, a little concrete and so on---is probably no more than two hundred. All of these houses are pretty new so the gas meter should handle the additional demand. So, if you're willing to do the work I can show you how, even help and I'd certainly be glad to help you hook up the transfer box to your main electrical panel which can be a little confusing. You need permits; I've already done them more than once so I've got it all boiler plated on my computer. Permits will run you another hundred. I've got a friend who is certified in gas, electric and plumbing who will sign off on the work for a hundred bucks. It shouldn't run more than twenty-two to twenty-four hundred.\" ",
        "\"That sounds like a winner! With a little other money I've got stashed away, I can buy the zero turn unit I want---without Buffy even knowing how much the lawn machine costs. Buffy---my wife---is pretty handy with tools. She was an aircraft mechanic in the service and has an engineering degree. I am mechanically impaired. If you don't object, she's the one going to be doing the work. Anyway she wants the damned thing! Here she comes now!\" \n\nTo Frank's surprise, it quickly became evident that Jack's wife Buffy was the delicious little brunette who had been chatting with Bonnie. After introductions all around, Bonnie started to speak to her husband. \n\n\"Frank, Buffy wants to...\"\n\n\"Install a backup generator?\" Frank queried, as they all laughed at the realization that both couples had been discussing the same thing. \n\nBonnie continued, \"well, why don't you and Buffy discuss the finer points of natural gas fired, automatic backup generator systems while Jack and I discuss his future career opportunities?\" \n\nAs Bonnie and Jack moved off in earnest conversation, Buffy explained, \"Jack's in health systems---your wife's field.\" Frank nodded. \n\nFrank quickly gave Buffy an overview of what the project entailed. She asked the right questions and was obviously very knowledgeable about things mechanical. She was also a flawlessly beautiful young woman of twenty-six who had done a four year stint in the military in aircraft maintenance while also completing most of the requirements for an engineering degree in night school. After a semester to finish her degree she had quickly been hired by a design firm and tele-commuted from a home office. \n\n\"When can we get started, Frank? I'd love to get it done before the winter ice storms arrive.\" Gazing into her big brown eyes, Frank almost lost his train of thought. \n\n\"Well, it's really dependent on your schedule. It takes a week to get the permits, maybe less since I've done them several times before. It also takes about a week to get the generator and transfer switch delivered. We can pour the pad and stub out the gas and electrical in advance. I'll need to take a look at your setup and see what materials we need; we can get everything at either of the local home improvement stores. I have all the tools we need. As long as you don't have a finished basement such that we have to tear out and replace dry wall there's only a final inspection required by the county. When can we get together---and, by the way, where the heck do you live?\" \n\nBuffy placed her tiny hand on Frank's arm and turned him ninety degrees. \"Right over there; we can actually see the back of your house from our deck. We're almost neighbors, plus or minus a thousand yards. I work on projects and can take time during the day but I'll be finishing up one at just about the right time and will be able to take a couple of days off.\" \n\n\"How about first thing Monday morning? I can come over to your house, bring the permit software, we can measure off everything and order the unit. As long as my resellers number is there the vendor doesn't care whose credit card it's billed to or you can write me a check and I'll put it on my account---and we can run over to the home improvement center of your choice to pick up the materials.\" \n\nBuffy responded with a killer smile. \"That's sounds great! What time? I'm an early riser and Jack is leaving early for a road trip.\" \n\n\"Well, Bonnie leaves for the office at 7:00 AM; I can come over right after that. Is that too early?\" \n\n\"It's a date!\" Buffy responded, taking his hand in both of hers. Frank did not want her to let go of his hand---ever. \n\nWhile Frank was certainly not expecting to get lucky as he had with Belinda just the thought of spending several days working closely with this diminutive hottie made his dick swell. \n\n\"She's a real cutie,\" Frank commented to his wife as they headed home a few hours later. \n\n\"God, they're all so damned young! I'm really glad you can help them out. Jack's a little brash but he's got some damned fine skills and I'd love to snake him away from his current company. I'm going to try to get him in for an interview cycle in the next couple of weeks. Now after an evening hanging out with all that barely legal young cunt, I know you're excited so let's go home and fuck!\" And they did. \n\nThat following Monday morning shortly after kissing his wife goodbye, Frank dutifully rang the doorbell at Jack and Buffy's house. Without a smidgen of makeup, hair tied back in a pony tail and attired in a micro fiber lounging suit which disguised none of her curves, Buffy was stunning in the early morning light. \n\n\"Jack!\" she exclaimed, genuinely happy to see him; she gave him a big hug which he was not expecting. God, she smelled and felt great. \n\nShe offered coffee which he politely refused. As she sat very close to him on the small sofa in the family room with a quizzical look on her face, she placed her tiny hand on his knee. \n\n\"So what's first? I assume we need to get the measurements down for the permitting and materials?\" \n\n\"Sounds like the best place to start. Do you mind writing down the numbers? No one---including me---can read my writing.\" \n\nBuffy laughed; it was a mature woman's laugh; they got up together and headed to the basement. Fortunately, there were no real complications. They would have to extend the one inch gas line from where it had been capped above the furnace and run it out the southwestern basement wall, the same wall that housed the main electrical panel. Directing Buffy to make a quick sketch while he checked out the electrical service Frank got caught up in what he was there for as opposed to what he would like to be there for. Climbing up to look out one of the ground level basement windows, he felt Buffy's surprisingly strong grip on his legs. \n\n\"Careful, that thing you're standing on is notoriously rickety,\" she said, continuing to steady him as he climbed down, her hand brushing against his butt, he assumed inadvertently. \n\nThey returned upstairs to Buffy's computer; she led the way. What a divine and absolutely perfect little ass, Frank thought to himself as he watched her perfect little ass wiggle up the steep basement steps. Soon they were sitting close to each other in front of Buffy's computer screen. \n\n\"Frank, all women have eyes in the back of their head. You were checking out my ass on the stairs, weren't you?\" Buffy said, openly flirtatiously. \n\n\"Buffy, at my age I never miss an opportunity to leer at a fine young set of buns. Guilty as charged.\" \n\n\"You don't look that old, Frank. And the compliment is very much appreciated.\" \n\nBuffy stood very close to Frank, resting a hand on his shoulder; her warm little hip was pressed against his upper arm. Frank cleared his head and quickly entered the appropriate information into the permitting program. Once when Buffy had to go to a file cabinet across the room to get the property description off of the deed, she again gave him a perfect view of her fine little tail and enchanting little butt crease as she bent over---longer than was probably required---to retrieve the document. She was smiling impishly when she returned to Frank's side; she punched him playfully in the arm. \n\nAfter the permit requests had been printed off, they went to the Internet and ordered the generator which came with its own transfer switch. Buffy decided to use her credit card for the purchase. Next Frank typed up the materials list. The two then went outside to examine the potential pad site and finalize the measurements. \n\nA stiff Midwestern breeze buffeted the two as they decided on the final site for the unit and ensured it would meet all code requirements. The light material of Buffy's outfit was plastered against her hard little body, clearly defining her turgid little nipples and rock- hard tummy. As she turned to jot down one last measurement, Frank was inches from her little cunt, also clearly defined in the stiff breeze. The breeze was not the only thing that had become stiff. Frank was absolutely positive that she had turned so as to present her pussy for his inspection. \n\nReturning inside the house, Buffy indicated that she needed to change before they headed off to the store and the county office while Frank made final changes to the materials list and printed it off. \n\nBuffy returned in short shorts and a tee shirt. \"You're going to give the old men at the county office a real thrill in that outfit, hon,\" Frank commented. \n\n\"I live to serve and thrill old men, Frank. Is it working on you?\" she said, moving in and kissing him quickly on the lips, but retreating before he could respond. \n\n\"I can die a happy man now,\" Frank replied with a grin. \n\n\"It only took a kiss? My, you're entirely too easy.\" she replied, openly flirting. \n\n\"With age, one appreciates life's little pleasures; a quick kiss from a beautiful young woman becomes pretty damned exciting.\" \n\nThe two departed Buffy's house and hopped in Frank's big pickup. \n\n\"I love trucks! My next car is going to be a truck. Oooh, bench seats---even better!\" Buffy said as she slid to the middle and then back again, realizing that she didn't want the neighbors to get the wrong idea. \n\nFrank had been right; the old men at the county office were enthralled. Buffy flirted with each and every one of them shamelessly. They asked if she wanted to wait for the permits. An hour later, much to the office employees' regrets, Buffy departed with her permits in hand. \n\n\"Well, there's a lesson. Always take a hot little number with you when you go to get building permits; I've never had them offer to write them up while I waited.\" \n\n\"Is that what I am, Frank, a hot little number? I like the sound of that. Okay, Frank, lead the way. Take your hot little number to the depot to get some black iron pipe and concrete mix.\" \n\nHis hot little number? Oh, yeah, that sounded pretty neat. \n\nAt the home improvement store, Buffy had the same effect and more help from the sales staff than Frank ever remembered having. Soon they had everything loaded in the truck---loaded by the store staff, of course. \n\nReturning to Buffy's house, they unloaded the supplies, positioning them in the basement and outside as was appropriate. Frank was very impressed at how willingly Buffy carried her own load. \n\n\"Can we start today?\" Buffy asked expectantly. \n\n\"I don't know why not but I need to go home and spend some time with my pups. They get lonely when I'm gone too long.\" \n\n\"Can I come with you and meet them?\" Buffy asked like a little girl asking to go on a special adventure. \n\nThe pups loved Buffy and the feeling was mutual. Frank gave her the tour of the house and showed her how the finished generator project should turn out. He was hungry and invited Buffy to stay for lunch. To his delight, she accepted the offer. Frank had baked some fresh bread and threw together some sandwiches. \n\n\"So, Buffy, you were in the military...what service?\" \n\n\"Army, four years, aircraft mechanic and Blackhawk crew chief.\" \n\n\"I was in the Army. I flew Hueys and Cobras during two tours in Vietnam. I think I left active duty before you were born. What made you decide on that route?\" \n\n\"My dad's a mechanic; he now owns his own garage specializing in foreign cars. I grew up around mechanics. My mom's a school teacher. I knew I wanted to go to college and engineering was probably where I belonged but wasn't ready right out of high school. Money was pretty tight at the time as Dad was getting his shop started so the Army helped me pay for my own college education. I was lucky to get stationed stateside near a decent engineering school so I started in night school and finished up after I left active duty. \n\n\"I missed Desert Storm; I didn't have enough time left to be deployed and was out of the Army before the conflicts which followed. With my background in aviation maintenance and an aeronautical engineering degree, my current job with an aircraft systems company was a great find. It didn't hurt that I was a woman...there aren't that many of us in aeronautical engineering. I'm actually working on projects involving the same equipment I learned in the Army. There's really no one else in my organization with hands on experience. I travel to the home office regularly for conferences but do most of my work at home.\" \n\n\"How did you meet your husband?\" \n\n\"Jack never served in the military...it's just not his thing. He's a born salesman---he certainly sold me! We met through a mutual friend, had a whirlwind courtship and were married six months later.\" \n\nBuffy did not seem interested in further discussion of her husband or her marriage so Frank moved on. As they cleaned up the lunch dishes, Buffy was obviously anxious to get on with the project. \n\n\"So, Frank, can we get started? Why don't you bring the dogs over? Our yard is fenced.\" \n\n\"I'm sure we can get the concrete pad done this afternoon. Tomorrow we can work on the gas line and the electric and get it stubbed out. I expect the generator and transfer switch will arrive on Friday; probably just like you, weekends are family time for Bonnie and me, so assuming everything works out as planned I'd think we can hook it all up the first of next week.\" \n\nFrank put his portable cement mixer and two pups in the back of his truck and they headed back over to Buffy's. \n\n\"Buffy, while I thoroughly enjoy ogling you in those tiny shorts you might want to consider switching to old jeans or something; we're going to get a little dirty.\" \n\nMoving in close, touching his arm and nibbling his ear lobe, Buffy spoke. \"Is that the way you like your women, Frank---a little dirty?\" \n\nHer attitude had gone past flirting to openly lascivious. He wanted to fuck her. \n\n\"Dirty's good.\" Frank replied with a smile that was openly inviting. \n\nBuffy returned a few minutes later in well-worn jeans and a sweat shirt. The old clothes did nothing to conceal her astounding little body. She had no intention of taking advantage of Frank as far as the project was concerned, insisting on doing most of the hard work and preparing the site. Soon she had the area dug out, forms were in place and a base had been laid. Frank cranked up the cement mixer as Buffy tossed sixty pound bags of cement mix into the hopper. She was tiny but obviously very strong for her size. In no time the pad was poured, screeded and floated. Having previously worked with this particular generator, Frank had inserted lag bolts at the appropriate locations to secure the unit. \n\n\"Buffy we need to let this set up for a while, then spray it with curing agent and brush it out and put some plastic over it to let it cure. It doesn't make much sense to start the electric work for the automatic start-up circuit; we're going to have to shut off the power and open up the box to wire in the transfer panel---no sense in doing so twice. We can shut off the gas at the main and insert a shut off---that won't take ten minutes--- which will enable us to do the gas pipe work without shutting off the gas again and work on the gas pipe tomorrow along with stubbing out the electric at both ends. Other than that we just need to keep tabs on the concrete for the next couple of hours.\" \n\n\"So, we're going to have time on our hands, Frank? Whatever will we do?\" Buffy said, invitingly. \n\n\"Well, you're probably going to want to take a shower. You look damned cute with dried concrete on your nose but that stuff burns. Let's do the gas valve and then get you cleaned up.\" \n\n\"Are you going to help clean me, Frank? There might be places I'm just not able to reach...although I am extremely flexible.\" \n\nFrank playfully slapped her exquisite little bubble butt. \"Stop being a tease, you little minx.\" \n\n\"Who says I'm teasing?\" Buffy replied softly, and at that minute, Frank knew he was going to get laid. \n\nFrank shut off the gas main and the two went to the basement. Frank showed her how to remove the plug on the gas line, apply the Teflon pipe dope and attach the valve. Buffy wanted to do it herself and showed that she definitely knew her way around a pipe wrench. Buffy stood on a ladder as Frank steadied her from below with his hands on her waist. Standing with his face inches from her hot little ass, Frank was positive he could detect the scent of female arousal. \n\nBuffy attached the valve; Frank went outside and turned on the gas. They checked the joint for leaks and all was in order. Once as she was applying the soap solution to check for bubbles she started to slip and Frank quickly found his hand encircling her hard little butt with both thumbs pressing against her delicious little crease. \n\n\"Oh, Frank! You've got strong hands; I bet you give a mean massage.\" \n\nThe only gas appliance that didn't have auto ignition was the gas water heater. Frank offered to show Buffy how to relight it but she indicated she was very familiar with pilot lights. \n\nSo there she was in the almost identical position Belinda had been a few weeks earlier... head down butt in the air and Frank's cock was again bone hard. Unfortunately while Frank was sure Buffy noticed, she did not immediately go down on her haunches and blow him---much to his regret. On the other hand, the smile and obvious recognition of his erection promised that she damn well might before the afternoon was over. \n\n\"Let's go get cleaned up,\" Buffy said, and Frank was encouraged by the use of the term, \"let's.\" \n\nAs Buffy climbed the stairs ahead of Frank, he was positive that she put a lot more wiggle in that fine little rump than was needed. He was correct. \n\nWordlessly Buffy took Frank by the hand and led him to the master bathroom, turned on the shower and began unbuttoning Frank's shirt. Frank got the message and soon the two were naked and in the shower. Frank began to soap Buffy's little form in earnest, paying special attention to her astounding little ass and cunt. She was completely hairless down there which further added to the illusion that Frank was about to fuck a high school girl. \n\nWhen it was Buffy's turn, she was just as attentive to Frank's private areas, to include a soapy digit up his ass as she stroked his massive erection with her hand. To his surprise and pleasure, after rinsing all the soap away, Buffy replaced the soapy finger with her hot little tongue as she reamed his little ring. Yep, Buffy was a dirty little girl and one who responded enthusiastically when they switched places and Frank orally serviced her sweet little chute. Using his talented fingers on her little girl slot, he had her over the top in less than a minute. \n\nPushing Frank down on the corner shower seat, Buffy quickly showed that she might be small but that her young mouth could handle a big cock with no problem. Frank came sooner than he wanted to; Buffy was an amazing little cock sucker and he never wanted it to end. The two kissed for several minutes with Buffy sitting directly on Frank's crotch and wiggling her fine young ass on his still serviceable cock. They exited the shower and retired to the master bedroom. Buffy sat on the edge of the bed fondling Frank's cock with her small hands and teasing his balls with her little pink tongue. Frank quickly regained his normal rock hard erection. \n\n\"That's a big cock you've got there, Frank, and as much as I'd love to know how it would feel in my little pussy, I'm not on the pill right now, I hate rubbers, don't own a diaphragm and am highly fertile. Jack and I are trying to have a baby and you don't really look like my husband. I'm not opposed to anal...fuck, I love anal, even though Jack's not into it. How about you, Frank? Are you an anal sort of guy? Your tongue says you are. Do you want to slide that big pecker of yours up my tiny little ass? It's been a while for me but anal sex is kind of like riding a bicycle.\" \n\n\"Have you got some lubricant?\" ",
        "Moving to the bedside table, Buffy produced a small clear, glass bottle of a preferred brand. \n\n\"Only the best, Frank. What kind of girl do you think I am?\" \n\n\"One who's about to get fucked in the ass.\" Frank said, effortlessly flipping Buffy over on her stomach and working one, then two, then three well lubed fingers up her little brown hole. Satisfied that he had accomplished his mission, Frank flipped her back over and positioned a pillow under her fine young rump. Greasing his stiff cock with the lube, he stroked his fat meat for several seconds as he looked down upon the feast before his eyes. Buffy read the signals pulling her athletic young thighs up against her hard little tits, locking her feet behind her head and smiling expectantly while working her nimble little fingers over her clit. \n\nKneeling before her, Frank placed the engorged, bulbous head of his fuck tool at the entrance to her hairless little back door. Buffy smiled and nodded. Frank moved forward quickly and broke the seal of her anal ring. Buffy gasped but never stopped smiling. She nodded again. Frank eased into the little channel, watching for her signs as she accommodated the fullness. In short order his big balls were slapping her fine little butt. \n\nPaying special attention to her astoundingly firm and ample breasts, Frank started a slow, persistent balls-deep stroke. Buffy rotated her fine young hips in perfect harmony, moving her little ass up with each stroke to meet his increasingly rapid thrusts. Frank made love to her mouth with his own as Buffy moaned and whimpered in appreciation. Frank moved her hips up slightly, assuming an almost vertical stroke which enabled Buffy to watch Frank's fat cock stretch her little rectum to the absolute limit. Buffy was a butt fucker's dream. . . she moved, she grinned, she responded...and she talked. \n\n\"Oh, yes, balls deep, baby. Fuck this little girl's little ass hole. God, I love it up the shitter, butt fuck me, Frank! Make me your little anal slut...your dirty girl. Oh, fuck! Don't stop, don't cum yet...I'm so fucking close, oh, shit, oh, damn, oh God...yessss!!!\" \n\nBuffy's little chute clamped down hard on Frank's fat cock and Frank knew he had to shoot a load in Buffy's hot little hole. Accelerating his stroke, he looked down at the sweet little thing beneath him. \n\n\"Yeah, fuck! I'm ready, Frank...I came...you felt it. . . shoot that load in my ass...I want to feel it!\" \n\nFrank complied, shooting a massive load of cream deep in Buffy's rectum as he screamed in ecstasy. Buffy continued her nimble finger work. As Frank's cock plopped from her gaping little hole, Frank went down on her, replacing her fingers with his own mouth and tongue. In seconds, she came again, trapping Frank's head between her strong young thighs and fucking his face with her smooth little cunt. Moving down and tasting his own juice as it dripped from her distended little hole, Frank felt her shiver as his long tongue explored her anal opening. \n\nMoving up, he kissed her, sharing their combined flavors with her in a deep and probing kiss. Wrapping the small woman in his arms, he held her snuggly; she fit so perfectly. Caressing the crease of her little ass, Frank nuzzled her neck and breasts and provided the after fuck tenderness that so many men ignored. Buffy responded appropriately, pushing her young form deeply into Frank's strong arms. \n\n\"God damn, Frank, you are an absolute fucking stud! I can't believe how long you held off in my ass...most men cum too fast back there. Damn, Frank, you are an amazing lover---you're more than a fucking stud...that was absolutely the best...I had no idea what I had been missing.\" Buffy said, pausing only to give Frank a long, tender and genuinely affectionate kiss. \n\nFrank smiled at the compliment but seemed troubled. \"What's the matter, Frank?\" \n\n\"There's nothing the matter with you...you are an amazing lover. I need to confess something. First, I'm very happily married. Bonnie and I have a great sex life along with being best friends. When I was married to my first wife, I fooled around---a lot. When Bonnie and I got married, I swore I wasn't going to cheat on her.... and I didn't...not once until a couple of weeks ago---also with a woman young enough to be my daughter, also astounding sex...and I felt really guilty. The problem is right this minute I don't feel that guilty. I'm probably rationalizing; it's not like I'm not satisfying my wife...daily...or that in view of our thirty plus year age difference we're going to fall in love and run off together. But I should feel bad about this...and I don't remotely.\" \n\n\"Is Bonnie good in bed?\" Buffy asked. \n\n\"Astounding...great cock sucker...enjoys anal...never too tired to get boned, a bit of an exhibitionist, loves to fuck in strange places...a talker...like you.\" \n\n\"Do you think she'd fool around?\" \n\n\"Never! It's just not her style. And I truly believe she'd be crushed if I told her.\" \n\n\"Any chance that she already knows? Women have a sixth sense.\" \n\n\"No, Bonnie is not that way. She doesn't let things ride. She'd confront me and I'd be unable to lie to her.\" \n\n\"Does she like girl sex?\" \n\n\"It's never really come up although we were completely open with each other about our previous sexual escapades before we got married and she admitted to an occasional bi dalliance in her former life.\" \n\n\"Well, Frank, I have a confession to make. I like...I love cock! I love sucking cock and I absolutely need regular penetration by a stiff dick. But I also have a bi side. Jack might suspect but I'm sure he doesn't really know. Would you like me to explore that with your wife? I mean, it's a win-win. I'll be glad to try to seduce her. . . I'm pretty good in that department. I flirted with her a little bit at the party and she didn't get turned off...she responded...she was interested...I'm damned sure of it! She wouldn't be the first woman in the neighborhood...\"\n\n\"It's a tantalizing thought; after fifteen years, you have to work constantly to keep things interesting in the marital bed. Sometimes my dick isn't as hard as I'd like it to be with Bonnie---it's the old familiarity thing. But how would you approach the subject?\" \n\n\"Pretty directly, I think. 'Hey, Bonnie, your husband is a fucking gorgeous man and you are one very hot woman. I'm attracted to both of you. What's the chance of the three of us hopping in the sack together and fucking and sucking until we pass out?\"  \n\n\"Well, she's a very direct woman. She'd either say 'sounds like fun' or 'no, thank you but thanks for the compliment.' If you're serious let me do a little exploring and, if it seems possible, we'll invite you and Jack over for dinner when he gets back.\" \n\n\"Jack gets a lot of temptation on the road but he loves me. It's just sex---if it's happening and I'll accept it for the moment.\" \n\n\"By the way, which attractive young neighborhood wife did you seduce, if you don't mind me asking?\" \n\nBuffy thought for a moment. \"Your nearest neighbor...the tall blond, Belinda---and she's screamingly fucking hot! She sucks pussy almost as good as you do! She loves pussy to pussy action, ATM and hinted that she'd like me to do her with a strap on. What a kisser!\" \n\nFrank started to laugh. Buffy got it. \"You fucked her too, didn't you, old man?\" \n\n\"Her pussy...not her ass...but she clearly indicated that her ass was mine if we ever got together again...which we haven't.\" \n\n\"Did you know she's pregnant?\" \n\n\"I knew they were trying; good for them!\" \n\n\"Frank, Buffy and I are very close. Her hubby and mine are good friends too, which is odd since they are such total opposites, but they bring out the best in each other. Belinda and I don't have many secrets. I wasn't going to tell you, I was going to act surprised, but Belinda already told me she fucked you. I mean, generator or not, I fully intended to find a way to get in your pants. She's never strayed before. That combined with her detailed description of your carnal expertise made me decide. \n\n\"Look...I have no intention of fucking any of the young husbands around here. They talk, they fall in love and things get messy. Plus, they all have the same problem...they cum too damned soon! You were safe. I'd heard that older guys had staying power but had never really experienced it. She told me you fucked for over forty-five minutes and never came or went soft. Even in my little ass you showed amazing fucking control! And, bluntly, your cock is big. . . bigger than any I've ever enjoyed in the past. It would be a shame not to share it!\" \n\nBuffy seemed to be deciding whether there was more she should say. \"There's another thing you need to know. Belinda is almost positive that you knocked her up. You guys didn't use protection. Hubby was too drunk to do her when he got home and was hung over the next day. They didn't fuck until four days later when she thought she might be pregnant---the old female sixth sense---and wanted to be sure to cover her bases---even though the thermometer said she was no longer ovulating. \n\n\"You fucked her Saturday morning. She took a home pregnancy test the following Saturday and it was positive---there's no fucking way she implanted from screwing hubby on Wednesday---it's just not possible in less than six to ten days from conception. She went back and checked her calendar and her temp chart; she was in full ovulation when you fucked her; she passed the peak by the time hubby did his business. \n\n\"He also has a moderately low sperm count so unless you've had your tubes tied---and if you had, you'd have told me and I'd have let you fuck my little pussy---you made a baby, old man! And before you say anything, Belinda is not remotely upset. They'd been trying for a long time without success. You're a great looking guy, better looking than her husband in my opinion, and she is happy as a clam being pregnant. What's your blood type, by the way?\" \n\n\"It's 'O' positive.\" \n\n\"Belinda will be relieved to hear that. It's the same as the two of them, so unless they do a DNA test, which is unlikely, she's in the clear. Any strange family illnesses in your past?\" \n\n\"Nope. My grandparents lived into their nineties. In fact all of my relatives lived long, disease free lives or died from accidental causes.\" \n\n\"Well, expect a blond, blue eyed bouncing baby next door in less than nine months and no one will be the wiser.\" \n\n\"Now I feel really guilty.\" \n\n\"Don't! They're a great couple, they'll make great parents and they've been friends and in love since high school. Still, you and that cock made an impression on her. She was absolutely gushing when she told me about how damned well you fucked her...not that I'm surprised. 'O' Positive, eh?\" \n\n\"What are you thinking about now?\" \n\n\"The problem is, both Jack and I are brunettes with brown eyes.... although we're both 'O' positive. The blue eye thing isn't that big an issue...brown is the dominant gene but it is very common for brown eyed parents to have blue eyed babies. And Jack's grand mother had blue eyes and blonde hair. You're taller than Jack, obviously more anglo-nordic.... hmmm....\" \n\n\"Don't tell me you're ovulating?\" \n\n\"No, not today...but I'm damned close. Jack and I really want a baby...two in fact. Like Belinda and her husband we've been trying for some time with no success. If it doesn't work this cycle, Jack's going to have to go jerk off it a cup---again---and they're going to try artificial insemination...which excites me, not!\" \n\n\"When does Jack get back?\" \n\n\"Late Friday.\" \n\n\"When will you be ovulating?\" \n\nFrank suddenly realized that having knocked up his pretty blonde neighbor turned him on immensely...it was the validation of his virility...and an opportunity to do it again excited him. He and Bonnie had considered children but she had been unable to conceive and the cause was irreversible. \n\n\"Friday, that's why he cut his trip short---to come back and fuck me. He has to go back out first thing Monday morning. When do we have to go out and check the concrete?\" \n\nFrank checked the bedside clock. \"In about half an hour.\" \n\n\"You're hard again.\" \n\n\"You noticed.\" \n\n\"Fuck me. We need to practice. We don't want to fumble the ball on Friday when you put---hopefully\u2014a baby inside me. By the way, have you ever had your sperm tested?\" \n\n\"Yes...it's strong...very strong.\" \n\n\"You just got lucky, Frank; I know you enjoyed fucking my ass...I sure did...but my pussy is exceptional!\" \n\nBuffy was not overstating the facts. She had astounding muscle control and worked her little cunt like a professional. After having already cum twice Frank was in top form. He could have lasted longer but having already cum more than once, Buffy got impatient, tickled his balls with her talented little hands and brought Frank to a screaming orgasm. \n\n\"No practice after Wednesday, Frank...I want you to build up your sperm count.\" \n\n\"Bonnie will be out of town Wednesday thru Friday.\" \n\n\"No jerking off, old man.\" \n\n\"I promise.\" \n\nFrank and Buffy covered the concrete with plastic after a final brush finish and Frank headed home with his pups. He knew Bonnie would be disappointed if she didn't get her coming home fuck so about half an hour prior to her expected arrival he popped one of the tear drop shaped little flesh colored pills. Ten bucks well spent he thought to himself. An hour later, he came for the fourth time in six hours in his wife's still astounding little quim. Later after dinner as the couple was in bed together the subject of Buffy came up. Frank briefed his wife on the day's activities, less the fucking, of course. \n\nChapter Four, Frank Learns about his Wife's Desires. \n\n\"Frank, do you think Buffy might be bi?\" It was all Frank could do to keep from choking. \n\n\"I don't know, hon. She certainly is a hot little number. What makes you ask?\" \n\n\"Well, at the party before you met her, she and I talked for quite a while. I swear she was coming on to me...not overtly, but...she is an exceptionally attractive and very sexy young woman.\" \n\n\"How did you feel about her...ah...flirting with you?\" \n\n\"I'm almost ashamed to admit it, but I got just a little bit wet. You know I haven't done it with a girl since before we were married. I love your cock...you know that...but...\"\n\nFrank decided to be bold. \"Bonnie, are you telling me you want to fuck the little minx?\" \n\n\"Yes...don't you?\" \n\n\"Well, sure, who wouldn't? She's gorgeous, sexy...amazing little body...what are you suggesting, dear?\" \n\n\"I'd like to invite them over for dinner over the weekend...feel her out...see if my instincts are correct. I'd also really like to hire her husband. . . that can be the excuse. I have no desire to fuck another man---you're more than I can handle. But another woman...well, that's different. Fair is fair...if she's up for it and wants to fuck me, you get to fuck her too. I've always wanted to watch you fuck another woman...fuck her ass...make her scream with that fat cock while I go down on her...does that turn you on?\" \n\n\"Unbelievably!\" Frank said softly, as Bonnie slid over and softly fondled his cock. \n\n\"Would you like to practice on your hot little wife's back door?\" \n\n\"Great minds think alike, sweetheart.\" \n\nAs Bonnie drove to work the next morning she considered the plan she had put into motion. She was certain that Frank had been faithful to her until very recently. The temptation in this neighborhood was just too much for him. She knew Frank was unable to lie to her and would therefore never ask him. After fifteen years of wonderful marriage with Frank, she was completely secure in her relationship with her husband and best friend. She had noticed his frustration when he could not stay quite as hard as he once did when he fucked her. She had also noticed how hard he got after spending time with all of the ravishing young twenty-something women in the neighborhood. \n\nShe was not afraid of losing her husband to some twenty-something hottie. The little cunts flirted with him shamelessly; Frank had the strongest sex drive of any man she had ever known and she had found the evidence of his constant jerking off when she was at work. She loved work and had no intention of quitting. Additionally, as much as she enjoyed their monthly all day Sunday fucks she doubted that she could keep up with Frank's needs on a daily basis. \n\nBuffy had indeed come on to Bonnie and Bonnie had been both intrigued and aroused. Buffy was exactly the kind of woman who turned Bonnie on. She had enjoyed girls more than boys before she had met---and fucked---Frank but he had changed all that. Frank was the first man who had really ever rung her bell---and God did he! And she had always wanted children with Frank but it was not to be. Still, if things worked out as planned, she would soon have many surrogate children to dote on. First she would get Buffy in their marital bed, then she would work on the tall, leggy blonde next door, Belinda. Bonnie knew Frank was very attracted to her...might have even fucked the gorgeous young woman...probably had...but it was no matter. \n\nBonnie had responded as was her nature to Buffy's overtures at the party. \n\n\"Do you want to fuck me, little girl?\" she had asked brazenly. \n\n\"Yes.\" Buffy had replied after a few seconds of thought. \n\n\"I'd like that, Buffy; I've missed girl sex over the years. But here's the deal. . . fuck me...fuck my husband, Frank. The three of us. . . together...are you okay with that? That's him right over there talking to your husband---and by the way I'm not remotely interested in fucking him or fucking around with other men. Frank meets my needs in that department completely. I'll introduce you. Seduce him...make him fuck you...if you're successful, we've got a deal.\" \n\nBuffy glanced at the man speaking to her husband. She'd seen him before; he was older...a lot older...but hot. And she knew from talking to her best friend that he was a great fuck. Did Bonnie know about Belinda? It wasn't important at the moment. \n\n\"You've got a deal,\" Buffy replied, and the plan was set into motion. \n\nAs Bonnie pulled into her reserved parking space she checked the last email on her PDA and smiled. Buffy had come through. \n\nChapter Five, Frank and Buffy working together. \n\nFrank and Buffy were hanging black iron pipe and running electrical conduit. It was Tuesday. Frank marveled as the small woman drilled the required holes through the basement sidewall to accommodate the gas pipe and electrical conduit. She handled the heavy impact drill like a pro. Frank finished up the pipe and prepared the basement wall with lugs for the transfer switch while Buffy rechecked each gas connection. They turned on the valve and there were no leaks. They had started late because Buffy had a conference call. Still they had done everything they could do by noon. Having shared a late breakfast together, neither was hungry for lunch. \n\nAs Buffy bent over replacing the last tools in Frank's tool box, she again presented that incredible ass for Frank's inspection. Yanking her sweats down with no preliminaries, Frank was delighted to find her without panties. Working his strong fingers into her young cunt from behind Frank was also pleased to find her very wet. As Buffy grabbed hold of a pipe on the wall for support in anticipation, Frank was out of his shorts and pressing his rock hard fuck tool against her dripping little slot. He was balls deep in a flash, banging the young woman with animalistic ferocity, lifting her tiny body off the ground with the force of his thrusts. Buffy absolutely loved being taken hard from behind and squealed in appreciation. Frank ravished her steamy little cunt for close to half an hour; as she felt him prepare to cum, she spun around. \n\n\"On my face...cum on my face, baby!\" \n\nFrank complied, aiming accurately and getting most of his cream where Buffy most wanted it. Still there was a lot, and soon her sweet little face was dripping with cum. Frank thought she was the cutest thing he'd ever seen with cum dripping from her mouth, hair and firm little tits. Buffy sucked his still stiff organ into her mouth and removed the last traces of his special juice. God, she thought, fucking this man could become addictive! ",
        "\"Well, that was a pleasant and unexpected surprise!\" Buffy exclaimed. \n\n\"It's that hot little ass of yours again, babe; I just can't resist it.\" \n\nFrank was still hard, a combination of the vestiges of the Cialis and the incredibly arousing specter of fucking this young woman over and over again for the rest of the day. \n\n\"Let's fuck all day. You're going to cut me off tomorrow and two days without fucking is not something I'm used to.\" \n\n\"Sounds like a plan, Frank. I want you to really treat me like your dirty girl. Fuck my mouth...tie me up, spank me, jam that big cock up my ass. Hell, you can even piss on me if that floats your boat!\" \n\nFrank's stamina over the next few hours surprised even him and completely astounded his new fuck toy. They had gotten very nasty...nastier than even Bonnie was into. They pissed on each other in the shower. As she had requested, he tied her spread eagle on the bed and ravished her tender little ass hole. He spanked her until her fine little globes were beet red. Finally, as he thought he had one more cum left inside him, she ordered him to fuck her mouth, plunging his long cock to the deepest recesses of her lovely little mouth, finally cumming as she choked, gagged and sputtered...but she loved every minute of it. \n\n\"Frank, I feel like a complete slut. I mean I'm highly sexed and I love cock but I have to tell you that we did some things I've only read about. I'm not sure I'd want a steady diet of it but there is something terribly satisfying about being a complete and total fuck slut---not to mention draining every single drop of juice out of your old nuts. Admit it! You're fucked out, aren't you?\" \n\n\"Absolutely, completely and delightfully,\" Frank responded. \n\nBuffy changed the subject. \"So, Frank, did you feel out Bonnie?\" Buffy already knew the answer but had made an agreement to play along. \n\n\"She wants to fuck you, little girl...as long as it's all three of us...much to my surprise! By the way, you and Jack are invited over for dinner Saturday evening. From what Bonnie told me I don't think you need to beat around the bush.\" \n\n\"Great news, Frank! Now I have some bad news; I've got to go to the home office tomorrow, Wednesday, one day out and back home, so you're actually cut off a day early---at least as far as I'm concerned. Try to keep that fine cock in your pants while I'm gone.\" \n\n\"Damn! I really am cut off! Bonnie has got to leave tonight rather than in the morning; actually she was going to have to leave the house at 4:00 AM, so this is better. No pussy for Frank tonight, or tomorrow, or Thursday...\"\n\n\"There's always Belinda...but you've got to promise me no fucking or beating off on Thursday! I need maximum sperm on Friday, so you can only fuck her tomorrow.\" \n\n\"I haven't seen much of her. I thought maybe she was avoiding me.\" \n\n\"She'll be home tomorrow and the hubby is out of town, so go see her. She's been dreaming about the ass fuck you promised her...you can't let her down.\" \n\nChapter Six, Act II with Belinda. \n\nFrank and Buffy parted affectionately as Frank drove the short distance home almost relieved that he would not be expected to perform until the next day. After a quick dinner, he and his pups were dead asleep, waking once to say goodnight to Bonnie on the phone. He woke later than usual the next morning, refreshed and glad that he had slept so well. That's what good fucking will do for you, he thought to himself. He showered and shaved, donned a pair of shorts and sat down at his computer to add to a short story he had been working on. \n\nShortly after eight, there was a tapping at the back door. It was Belinda, fresh from her own shower with her short blonde hair still damp. She was wearing those damned shorts she so often wore...translucent nylon running shorts...no bra...tight tee...bare feet. She was in his arms without a word. She smelled fresh...clean...like young cunt is supposed to smell. \n\n\"Thanks,\" she whispered in his ear. \n\n\"For what?\" \n\n\"My baby...our baby...Buffy told you...are you okay with it?\" \n\n\"As long as I don't have to pay child support,\" he said, with a grin. \n\n\"Fuck, we should be paying you for 'sperm support.' We'd been trying a really long time. Both of us are so excited...it's like a dream come true.\" Belinda said, lowering her hand to Frank's cock. \n\n\"Being pregnant makes me so damned horny...my husband's out of town...you said you wanted to...\"\n\n\"Fuck you in the ass? Is that what you're here for, Belinda?\" Frank replied, teasingly. \n\n\"Do I have to beg?\" \n\n\"Yes!\" \n\n\"Fuck me up the ass, Frank. Plant that big fat cock deep in my little shitter. I need some cock...your cock...now!\" \n\n\"I was just getting ready to get in the Jacuzzi; it's all warmed up. Would you care to join me?\" \n\nFrank and Belinda were quickly naked and fondling each other urgently in the warm, fragrant water. She wanted to blow him. He sat on the edge of the hot tub as she took his fuck stick deep in her mouth. What the fuck, Frank thought; God, she's got a beautiful little mouth...the hint of freckles...a cute little turned-up nose...astounding little cock sucker. Belinda was whimpering, urgently wanting a thick load in her mouth. Can't disappoint the little bitch...yesss! As she had done the previous occasion, Belinda slurped up every drop of Frank's male essence, wiped her mouth with the back of her hand and smiled up at him like a little girl with a special Christmas present. \n\nFrank switched places with Belinda and went down on her delightfully soft little blond pussy while working a lubed finger up her tight little hole. He and Bonnie often fucked in the Jacuzzi; a variety of lubricants and anal toys were readily available. Belinda propped her legs on the side of the tub, splaying her legs lewdly to give Frank optimum access to her cunt...and her other orifice. Frank lubed a relatively modest anal plug and gently inserted it into Belinda's quivering little hole. It went in very easily. \n\nHe moved up to the next largest size, slowly preparing her little ring for the ultimate insertion. Belinda gasped at the new invasion. As her little hole quickly accommodated the plug, Frank reached for the biggest one...it was as big around as Frank's cock and contained a special surprise. He worked the big silicone implement slowly inside the aroused young woman allowing her to comfortably accommodate the fullness. \n\nWhen he hit the button on the vibrator, Belinda almost came unglued, feverishly fucking the long toy with her perfect little hips in an attempt to draw it completely into her ass hole. She succeeded. Frank returned to her love button with his experienced tongue and brought Belinda to a crashing screaming orgasm in seconds. \n\nStanding up in the hot tub, Frank stroked his hard cock in anticipation, amply coating it in the thick water resistant lube that had been specifically designed for this purpose. Standing inches from her face and stroking his meat, Frank spoke. \n\n\"Are you ready for this cock, young lady...are you ready to take this big cock up your ass?\" \n\nBelinda nodded vigorously, \"yessss!\" she croaked. \n\nWith no real need to allow Belinda to accommodate the anal invasion, Frank quickly jammed his rock hard prick to the depths of her sweet little rectum. Normally he would have tongued her little shitter for a while but he needed to get off and the young ass in front of him was irresistible. To his delight, Belinda gently rotated her fine young ass in perfect harmony with his balls-deep thrusts. Her rectum was insanely hot and tight...like butter. \n\nShe used her well toned young muscles to clamp down on the invading organ as if to trap it inside her body. Belinda's gaze never left his as she grinned from ear to ear and panted softly with each deep stroke. The woman loved it...the perfect anal slut...not taking a dick in her ass to \"please a man\" but simply because she craved it and needed it. Belinda rested her long legs on his strong shoulders as he caressing her face with his mouth. Frank got into a steady rhythm which he knew from experience that he could maintain for as long as, or even longer than, Belinda might need. \n\nUnlike Buffy, Belinda was content to remain silent; her eyes closed dreamily as she focused on the fat cock invaded her most private hole...a place her husband had shown no interest in. It had been too long since she had last done this. And now a man her father's age---a magnificent man---was fucking her in the ass like she had never been fucked before. Bonnie was very lucky but right this instant Belinda was the lucky one. \n\nBefore she realized it, she had cum twice. She felt Frank harden and increase his pace. She gasped and screamed in a third orgasm as he bathed her insides with his wonderful cream. As Frank's cock plopped from her gaping little hole and he kissed her tenderly, Belinda was in absolute bliss. Jesus...she thought to herself...the damned old man is still pretty hard and he's already cum twice. Exiting the hot tub and drying each other off, the two retreated to the master bedroom. Frank cuddled affectionately with Belinda and held her lovingly. This man should start a training school for all of the young husbands in the neighborhood; he was an astounding lover in every regard. \n\n\"Frank, is Bonnie by any chance bi?\" \n\n\"Why do you ask, sweet thing?\" \n\n\"Well...I am...was...I used to enjoy fucking girls but I haven't since I got married. Your wife is almost twenty years older than I am, but, God, she's hot! She's got an amazing body, those eyes...great tits... Look, Frank, I'm not remotely submissive with men...it's not my nature and I have to deal with macho shit heads every day in my job. But when I did it with girls I was a classic sub...it was like an alter ego for me. She's so damned nice but a girl who has done girls before can read the signs. It's not overt but the last time we talked I swear to God she was checking me out...even flirting. At the party, she definitely moved in to my space, not in a threatening way, and then, before you guys left, she gave me a big hug in the kitchen...nothing odd about that...but then she slipped me just a little hint of tongue...she kissed me.\" \n\n\"Belinda, Bonnie was distinctly bi before we got married...probably preferred pussy to cock. I'm proud to say I changed her perspective. It's funny that you should ask but very recently we discussed her desire to try a little girl-on-girl encounter...actually a three way sort of thing.\" \n\n\"With Buffy? Don't answer, I'm sure I'm right. Buffy and I have fucked a couple of times...God, she's smoking hot! She's got the sweetest little pussy. I'm easily eight inches taller than she is but she's got distinctly dom tendencies. Look, Frank, I love fucking you, I love fucking Buff but I'd really enjoy fucking your wife...do you think we could make it happen? Think about it, Frank; you, me, Bonnie and Buffy all in this big bed, fucking and sucking our brains out.\" \n\n\"The image is almost more than this old brain can handle, Belinda. She told me she thinks you're very attractive but we didn't get much farther than that. Look, when she gets back, I can probe a little---but you're going to have to close the deal on your own.\" \n\n\"I'm okay with that. Damn! That monster is hard again. You're ready to fuck, aren't you, old man?\" \n\nWith no further conversation, Frank rolled Belinda over and inserted his highly serviceable implement into her wet little cunt. And then he made love to her...long, hot, wet but incredible love. He stroked her precious little slot for over half an hour as he made love to her face and tits with his talented lips and tongue. They came together; afterwards Frank cradled his new fuck mate in his arms and stroked her runner's thighs lovingly. This guy is so much more than just a stud with a big hard cock, Belinda thought to herself. He understood a woman's needs so absolutely divinely; he had found all her special spots. No man had ever made such perfect, tender and passionate love to her in her life. \n\nBelinda slipped out the back door an hour or so later after the two had fallen asleep in each other's arms. It was very hard for Belinda to leave Frank's arms; he held her so perfectly lovingly in his strong embrace. \n\nChapter Seven, An unexpected Visit from Caitlin. \n\nFrank made a cup of tea and contemplated his expanding sexual horizons and thought about how to broach the subject of getting Belinda into bed with Bonnie. After an hour playing with his pups and another hour writing, Frank napped on the sofa in the family room almost relieved that his old bones would receive a day of rest on Thursday. \n\nFrank awoke after a nice nap and decided on a second shower; he would miss the smell of young cunt and recent sex on his body but, groggy after an unplanned nap, he needed to refresh. As he finished brushing his teeth and examined his still lean body, the door bell rang. Assuming it was just the Parcel Delivery Service girl delivering something he ordered, he went to the door naked and peaked out through the edge of the curtain expecting to see a package on the door mat. To his surprise, the package was a nubile young red head with alarmingly large breasts and the smattering of freckles of an Irish colleen. Slightly embarrassed that the young woman had certainly gotten a glimpse at his nakedness, he yelled, \"just a sec\" and scrambled back to the bedroom to grab his terry robe. \n\nOpening the door he was very pleased at the attractive young vision before him. She was about five foot four, broader in the hip than he usually found attractive and with serious tits barely contained in a gingham shirt; he was sure he had met her but couldn't put the name with the face...or the titties. \n\n\"Frank?\" She extended her hand. \"I'm Caitlin. I'm, ah, we're almost neighbors. We live in the big red house on the other side of the street from Belinda. I'm sorry to bother you. Did I interrupt your shower? I'm really sorry.\" \n\n\"No, that's quite alright. I'd already finished, please...come in...pardon my attire.\" \n\nCaitlin entered and Frank gestured toward the sofa. Breeder hips, a little broad---they'd go down hill with age---but right now they were splendid. Tiny little shorts...tiny waist...oh, yeah, very fuckable. Frank was rested; he could feel his cock moving. Yeah, he could do her. . . hell, he would do her...today. When she turned and perched on the sofa he noted that she had surreptitiously undone another button on the too-small cotton blouse. No damned bra...those tits were just standing up there with no artificial support. He wanted to fuck those tits. Generally he preferred small breasted women...but this pair was absolutely scrumptious. He offered her a cup of tea; she accepted. Popping another tear dropped pill in the kitchen, Frank knew he was on a mission. \n\nCaitlin, it seemed, wanted to build a new deck, not unlike the one Frank had added right after he and Bonnie had moved in. Caitlin worked part time as an editor from home. She had some experience with power tools but felt lost when it came to design and putting together a materials list. Her husband could help with the heavy work---a little---on the weekends but basically it was to be Caitlin's project. When Frank returned from the kitchen, Caitlin had undone another button. Her stiff little nipples were now clearly visible as she twisted her body from the waist and lingered in that pose long enough to give Frank a clear view. Frank told her he could stop by later to get a quick look at the site but that he would be tied up with other things until the middle of the next week. \n\nThe little cunt was flipping that natural red hair and crossing and uncrossing her legs. There were beads of sweat on her forehead. There was a tiny but growing moist spot between her legs...no panties...that was for sure. Frank covertly loosened the tie on his terry robe, allowing a large expanse of his broad chest to be exposed. The robe had fallen away from his thighs and the edge was now barely an inch from his growing cock. \n\nShe stood up, bent over from the waist and picked up her tea cup to carry it to the kitchen. She wiggled that full firm butt in obvious invitation. When she returned, the big tits and their erect nipples were quite clearly revealed. Frank had adjusted his robe so that the bulging head of his prick was just visible through the gap. Caitlin sat right next to him, her face now clearly flushed. Frank pulled the edges of the robe apart, clearly displaying his equipment which was now standing up at its typically erect forty-five degree angle. Caitlin put a freckled hand on Frank's tanned thigh and whimpered. \n\n\"Go ahead, Caitlin...touch it...it won't bite.\" \n\nCaitlin did so with two hands, marveling had how hard and big this man's cock was...so big...so much bigger...\n\n\"Do you like sucking cock, Caitlin? Do you enjoy a big smooth dick in that pretty little pouting mouth? Do you want me to cum in your mouth?\" \n\nWordlessly, Caitlin leaned over and engulfed Frank's fat prick in her hot little mouth. She was indeed an accomplished little dick sucker. Reaching under her, Frank quickly unbuttoned and unzipped her shorts, pulling them down to her ankles; she kicked them off without missing a stroke. Using one hand to caress the cleavage between her big tits, Frank quickly worked the other hand into the fleshy fold of her plump ass cheeks. \n\nWetting a finger quickly with his mouth, he gently massaged her little anal ring with his index finger. Caitlin flinched, but then accepted the digit and, as Frank gently probed her little hole, she moaned and moved her hips. Sooner than he would have liked, Frank filled Caitlin's mouth with cum; she gagged, but recovered, slurping it down like a kitten with a bowl of cream. \n\nRepositioning Caitlin on the sofa, Frank went down on his knees; Caitlin removed her blouse and exposed her magnificent tits in all of their glory. As Frank probed her drenched little cunt with his lips and tongue he grew bolder with his finger, inserting it to the first knuckle, and gently fingered her ass. \n\n\"Do you mind if I finger fuck your cute little ass while I eat your pussy?\" \n\nCaitlin simply nodded. Frank brought the young woman to three orgasms over a number of minutes. Frank was a great pussy licker because he loved eating pussy almost as much as fucking and this one was particularly sweet with its hint of red down contrasted by the young colleen's pale white skin. By the time Caitlin came the third time, Frank was finger fucking her back door with two fingers to their maximum length and she was exuberantly fucking him back. \n\nFinishing his oral adventure, Frank effortlessly lifted the young red head and carried her to bed, lavishing special attention on her soft young mouth as he continued to stroke her little cunt with his experienced fingers. He explored her delightful young body for almost thirty minutes, finding special spots that excited her that she had not even known existed. As his hardness regained its normal form, he rolled her over and began a serious but tender assault on her little shitter with his tongue. She gasped and squirmed. Gentling fingering her steamy little muff, Frank brought her off again...both had lost track of how many times. \n\n\"Caitlin, I'm sensing that you've never had a man's cock in that little back door of yours...but you've thought about it. You're very anally sensitive and I absolutely love to do your butt but if you've never done it before...\"\n\n\"I haven't...my husband wants to, but I'm afraid...it will hurt.\" \n\n\"Well, Caitlin, I have experience in this area; it burns a little at first. It's better if you practice with increasing sized objects before you try a cock. The right lubrication is essential. The fullness can be unpleasant at first but then can become very satisfying. Of course cleanliness is critical...do you want me to help you? Don't feel obligated; you have a delightfully little pussy and I love to fuck you there---too.\" ",
        "Caitlin nodded a little apprehensively and Frank took that as a sign she wanted to be sodomized. Taking her by the hand, he led her to the bathroom. \n\n\"Let's get everything squeaky clean,\" Frank said, warming the disposable oil enema under the running water and then quickly inserting the slim nozzle to its maximum depth. \n\nCaitlin gasped while the warm fluid filled her bowels. She found the fluid invasion oddly arousing; so that's why people get into enemas, she mused. \n\n\"Hold it in there as long as you can. The toilet's right over there. If you're bashful, feel free to close the door.\" \n\nCaitlin felt the overwhelming urge and dashed to the toilet. She started to close the door, but decided against it. He's going to fuck me in the ass...my first anal...he put his tongue in there...he isn't going to be grossed out watching me shit. \n\nWhen Caitlin had completed her evacuation, Frank gently cleaned her delectable little rear with a warm rag, then picked the nubile young beauty up and carried her back to the bedroom. \n\nFirst he inserted the nozzle of the special anal lube up Caitlin's delightful little rump and squeezed an ample amount inside her. She giggled as the cool viscous fluid invaded her warmth. \n\nLaying Caitlin out on her front side, Frank started out with the smallest anal probe, one barely larger than his own index finger. Working up in progression, Frank soon was actively diddling her outrageously stretched anal muscle with a probe that was easily the size of his own hard cock. By that time, Caitlin was seriously getting into it, fucking back and attempting to pull the probe deep into her ass hole. \n\nTurning the young woman over, he had her pull her legs up so that she too could witness the lewd stretching of her once tight hole. Still working the butt plug in and out of its designated orifice, Frank leaned in and nibbled her turgid little clit. She came almost instantly. Frank removed the probe and marveled at how her gaping hole quivered in anticipation. Propping her full young ass with a foam wedge specifically designed for this particular sexual activity, Frank moved in and slowly inserted his painfully erect organ into her little brown eye. Taking an attractive young woman's ass for the first time...what a rush! \n\n\"Caitlin, I could fuck your ass like this for an hour but since this is your first time; you need to tell me when you think you've had enough so that I can cum...okay?\" \n\nCaitlin spoke for the first time since they had been on the sofa. \"Are you shitting me? From what I've been told no man can last very long inside a girl's butt. I'm a big girl...I can take whatever you've got.\" \n\nFrank loved a challenge and this virgin ass was excruciatingly hot, smooth and velvety but Caitlin was not the first woman to challenge or question Frank's staying power and stamina; Bonnie had made that same error when they had been dating. He had fucked her little cunt for a very long time, then sensing that she might be getting sore had switched to her ass. Finally Bonnie had cried uncle. \n\n\"Enough, you bastard, you've made your point. Cum in my ass, God dammit!\" Frank had done so within a matter of seconds. \n\nAfter ten minutes, Frank read the signs that said that Caitlin's no-longer-virgin little butt had taken about as much cock as it could. Ignoring her stubbornness, he whispered in her ear. \n\n\"That's enough for your first time, baby. I'm going to shoot my load in your ass now.\" \n\nCaitlin's eyes grew wide in wonder as she felt the first splash of Frank's sticky hot fluid bathe her rectum. She could not believe she had avoided this special activity for so long. Her husband would be very happy when he got home to his newly christened anal slut. Oh! This old man is amazing, she thought to herself as he held her in his arms and softly nuzzled her big tits. \n\nFrank went to the bathroom and got a soft cloth and cleaned her tender little hole lovingly, even kissing it one more time. When Frank went back to the bathroom, she heard the sink faucet and assumed that Frank was cleaning her ass funk off his cock. Next time she would do that for him with her mouth. When he returned to the bedroom, Caitlin was amazed to see that the big organ, while no longer standing up proud at a forty-five degree angle like a typical young cock, was still semi-erect and easily two inches longer than her husband's little dick. Her husband's small cock had been the reason the subject of anal sex had ever come up. Fortunately her husband was a damned fine pussy eater because his little dick didn't really fill her little hole since she had given birth to her first child. Frank's cock, she thought to herself...would he be able to do her little cunt before she went home? Hell, yes. Even in its semi-flaccid state, that damned thing would be quite adequate...and if he get rock hard again... oh, my! \n\nAs if reading her mind, Frank came over to her, kissed her softly on the lips and probed her still wet little slot with his talented fingers. Without thinking, she began moving her hips in response. \n\n\"You want my cock in there too, don't you, little girl? I know you do. You're a very hot little bitch, aren't you, Red? You like a man's cock in all of your precious holes, don't you?\" \n\nFrank was talking to her like a little slut...a whore. It turned her on. Of course she was a little whore...she'd just let a man old enough to be her father, whom she had just met, take her anal virginity. She'd sucked his cock and swallowed his cum. And now she was anxiously awaiting the feeling of that fat tool in her underused little cunt. \n\nFrank loved sexual foreplay and diligently spent the next half hour bringing Caitlin to a series of extremely satisfying orgasms with his hands and mouth. Somehow in her orgasmic bliss, she had missed the fact that Frank's cock was again ready for duty. \n\nBefore she knew it, Frank had pushed her freckled young thighs up against her ample tits and plunged his big stick in her little cunt. It was absolutely perfect; the old man's cock filled her completely. She was sure he grazed her cervix on more than one occasion. He fucked her with long strokes until she knew she was on the verge of getting numb...and then he came with a howl and a growl. It was the best pussy fuck of her young life. God, his wife was a lucky woman...hell, she was pretty hot too...I wonder if she likes girls? Why would she need them with this fucking dick sitting at home to greet her each day? Frank cuddled her in his arms, his fine cock ensconced between her fleshy butt cheeks as the two lovers drifted off to sleep together for half an hour. When they awoke, Caitlin's curiosity got the best of her. \n\n\"So, Frank, now that you've had your way with me---three different ways---are you still going to help me with my deck?\" \n\n\"Absolutely, Caitlin. I love that kind of stuff...almost as much as I love this kind of stuff.\" \n\n\"How did you know?\" \n\n\"Know what?\" \n\n\"That I came over here to get fucked. I heard a couple of the other girls talking about how hot you were at the party.\" \n\n\"Well, first, you were dressed to fuck. You kept unbuttoning your blouse. I could tell you had forgotten your underwear. I saw the wet spot on your crotch. You had beads of sweat on your forehead. You were nervous, crossing and uncrossing your legs and flipping the hair. You gave me several great shots at that astounding ass of yours. And then, of course, I could smell your little cunt and that scent always means 'fuck me'.\" \n\n\"I have never, ever cheated on my husband...before today. Hell, it took me three weeks to get in his pants the first time and I'm sure I was sending all the right signs. You had your tongue in my cunt fifteen minutes after I opened the door. You could smell my cunt? What's that scent say to you right now?\" \n\n\"It says freshly fucked, damned well fucked and might just want to be fucked again.\" \n\n\"It does, Frank, but it's damned sore. . . and Christ, you're hard again. Would you settle for a nice little mouth fuck?\" \n\nWordlessly, Frank placed his cock at the entrance to her pouty little lips and slowly inserted it to the depths of her throat. There was something so nasty about fucking a woman's mouth, particularly when she wants it in spite of the fact that she can't help gagging, gurgling and drooling. Caitlin's mouth was not as tight as her ass, tighter than her cunt and in all, completely satisfying. After he came and she blew snot and cum from her nostrils, she was an absolute mess. . . but an adorable mess. He gently cleaned her face with his tongue and lips to her complete delight. \n\n\"I've always wanted to try that. . . it's so nasty and submissive.\" \n\n\"If that was your first time, I never would have guessed it. You take a cock in your throat like a fucking pro.\" \n\n\"I love the way you talk to me...nasty...dirty...I feel like such a slut. I love it when you treat me like a whore...call me a cunt. Tell me, Frank, is your wife a nasty little slut?\" \n\n\"Absolutely! Nothing personal, but as delightful a little fuck toy as you are, I've never met---or fucked---any woman who gets me off the way Bonnie does.\" \n\n\"Fuck toy...oh, yeah, I like being a fuck toy. You should set up classes for the damned men in this neighborhood. They could use it.\" \n\n\"Well, it appears that I'm beginning to set up classes for a few of the women in the neighborhood. The men wouldn't listen and I really wouldn't feel comfortable trying to teach them. Look, hon, with 99% of the men in the world, you girls call the shots. I'm a bit of an aberration, although as I think back I was obviously once sexually na\u00efve and inexperienced, and more than one helpful and horny older woman showed me the ropes. Babe, I've been fucking for probably thirty years longer than you've been alive. I've learned a little along the way. \n\n\"Control is all mental; stamina is about staying healthy. Most of you girls don't realize that your young husbands are just dying for you to become the aggressor. You have to feed it to them in small doses, stroke their egos, but young men---fuck, old men---need pussy---and that's what you have between your legs. They want a lady to be proud of in public, a friend who cares about them and who they enjoy spending time with---but in the bedroom, they really want a slut. If they're not getting blown at home or you're not willing to part your butt cheeks---they'll go find it someplace else. You have the power---use it. End of lesson.\" \n\n\"You should write a book.\" \n\n\"Funny you should say that, I'm doing exactly that. And the more I learn about sexually frustrated young couples in this neighborhood, the more I think I need to get it done. Until we moved here after fifteen years of marriage, I never cheated on her. My first wife was a different story. Now I'm getting more young cunt on a daily basis than these old bones can handle---starting a few weeks ago. I feel guilty, but I'm becoming addicted. \n\n\"Look, I'm fifty-eight; Bonnie is forty seven. We fuck constantly---never miss a day. Sometimes on a Sunday it's all day. I have yet to meet a woman in this neighborhood who isn't hot! Nor have I met any men that don't seem reasonably attractive, healthy and athletic. I love fucking! If you were my wife, I wouldn't be able to keep my hands off of you. I'd drill your cunt, pussy and ass every day and twice on Sunday. I hate to sound like an old fart but the younger generation confuses me.\" \n\n\"Careers, children, money issues, social activities...they all take time.\" \n\n\"I know that. Bonnie and I are somewhat past that. We're not very social; we don't have money issues. The kids are grown. Caitlin, do me a favor. Make time! Sit down with your husband tonight and tell him you don't think you're fucking enough. Commit to openness...meet each other's needs. Suck his cock as he's getting ready to fall asleep---but make it clear that you don't want him to do a damned thing but lie there and get a first class blow job. Drag him outside and fuck him on the deck...screw the neighbors, it might help their sex lives to watch. When you want that fine little butt reamed, don't expect him to guess---tell him! I'm sorry, I'm preaching and if I'm too successful at it, I probably won't get to tap your hot little ass again because hubby will be servicing your little butt at home to your satisfaction. Now get that sweet little rump out of here. I need a nap and then I need a nap...and then another nap.\" \n\nCaitlin dressed, enjoyed one last special kiss and embrace from Frank and trotted off to her SUV. Frank took a nap. \n\nFollowing his nap, Frank noted that he had an email from the freight company; Buffy's generator would be available for delivery or pickup on Thursday. He contacted the freight carrier and made plans to pick it up the following morning. Frank wrote for most of the rest of the day trying to put the finishing touches on his book but still struggling with a title. \n\nFrank fell asleep early after an energetic play session outside with the pups. He spoke to Bonnie a couple of times that evening on the phone before closing his eyes for good. \n\nChapter Eight, Amy and Megan, Two Young Lovers. \n\nThursday morning Frank knew he'd need to keep busy to keep his promise to Buffy; he awoke with a boner and it stayed with him most of the day. He worked out in his home gym; he played with the dogs. He edited another chapter of his book. Around nine in the morning, he left for the half hour ride to the truck depot. On arrival, he inspected the generator and everything appeared to be in order. Unstrapping it from the pallet, he found a helpful fork lift operator to set it in the back of his truck. After tying it down, he headed back to the neighborhood unsure what he would do with the damned thing. He wanted to unload it at Buffy's; he had ramps to slide it down but knew he would not be able to position it over the lag bolts alone. The monster weighed over five hundred pounds. \n\nOpening the gate at Buffy's house, he backed in as close as he could get to the prepared site, wishing he had some strong muscled help. He figured he'd slide it to the edge of the truck bed then slide it down the ramp while easing its decent with a rope from behind. Just as he was about to begin he looked up to see two young women strolling up the driveway. One was a tall and definitely sturdy dirty blond; the second was a more petite bleached blond. \n\n\"Need some help?\" the smaller of the two women yelled out with a grin. \n\n\"You're a sight for sore eyes, ladies!\" Frank replied with a smile. \n\nThe taller of the two, easily six feet tall, was Megan; the shorter woman, still easily five six or seven was Amy. Introductions were made. Amy and Megan had just moved into a new house across the street from Buffy. They were both very attractive and quite muscular; they were athletes of some sort, Frank assumed. He judged Amy to be the older, probably early thirties and Megan to be in her late twenties. Amy obviously wore the pants in the family. Frank had no doubt that Amy and Megan were a couple and not simply good friends. \n\nBoth young women were every bit as strong as they looked; the generator was off the truck and lifted over the lag bolts in short order. As Frank attached the nuts to provide security, the three neighbors chatted. Amy was an attorney; Megan had played college volleyball and softball and was a coach at the state university in town. They had several big projects contemplated for their new home and Frank, of course, offered his assistance, explaining his situation and unofficial role in the community. Amy, who did most of the talking, invited Frank back to their house to get the tour. He accepted. \n\nThe girls wanted to finish the basement, add a bigger deck, put in a Koi pond and, now that they had learned about the frequent winter storm power outages, add a backup generator. \n\nThe home was tastefully and expensively decorated. Only one of the four bedrooms had neither furniture nor decorating; Frank gave Amy a quizzical look. \n\n\"It's going to be a nursery; we want to start a family.\" Amy said, gripping Megan's hand tightly as the two young women exchanged glances that clearly defined their relationship. \n\n\"If it's not too intrusive---who's going to be the Mommy?\" \n\n\"I am.\" Megan replied quickly, again smiling lovingly at her partner. \"We just need to work out the details...ah. . . you know...a surrogate...a donor.\" \n\n\"I see.\" Frank replied. \"Are you working with a sperm bank or are you thinking of going in a more traditional way?\" \n\n\"Sperm banks are notoriously unreliable. No, we plan to find a man who has good genes and ask him for his contribution,\" Amy replied, impressed that Frank showed neither shock nor disapproval at their plans. She also took a new interest in Frank's demeanor and carriage. \n\n\"Frank, it's a real delight to meet a man, particularly one of your...\"\n\n\"Generation?\" \n\n\"Exactly! Anyway, thank you for not being judgmental. Even among men---and women---our age, disapproval of our life style and our plans for a family often results in a certain number of icy stares. In any event, we're going to do it the old fashioned way; Megan is a virgin in that respect and deserves to know how the other half lives. I was decidedly bi until I met Megan and fell in love.\" Amy paused. \"You're very easy to talk to Frank; we've been far more open with you than would be the norm for someone we just met. I hope we can be friends and you'll find time to help us with our numerous projects.\" \n\n\"Which one do you want to begin with? Although your basement meets the modern code for habitation we get a lot of water here and almost everyone battles with at least the threat of minor basement flooding. You might want to wait a year to tackle that and see what happens. The Koi pond---I have one---needs to follow the deck and probably a patio...stone or concrete...stone is readily available around here. Most folks who don't have backup power keep a second fridge, in the garage. \n\n\"Even if the power goes out---unless it's for several days---food will stay cold enough in the winter which is the only time we lose power due to the ice storms. A battery backup on the sump pump is a mandate; it's a small project requiring less than a couple of hours and probably two hundred bucks---I'd do that quickly. \n\n\"A fireplace insert to provide heat will at least keep the main room comfortable. A small camping generator---three or four hundred bucks--- and extension cords can give you enough electricity for lights, TV and a computer. You can always cook on the grill outside for a day or two---and our power problems seldom last much longer than that. After you cover the emergency issues, I'd recommend tackling the deck.\" \n\n\"Frank, Megan and I are pretty handy with tools and would like to do as much of the work as possible ourselves; we just need some expert guidance. It's not a money issue; we've both got good cash flow. We'd also like to fence the backyard so we can get a dog.\" \n\n\"This is horse country so there are several excellent fence contractors in the area who can get the job done in a couple of days. It's not a project worth doing yourself; they have it down to a science, have special equipment and the labor is a small part of the cost.\" Frank reached for his wallet. \n\n\"Amy, Megan, here's who I recommend; they did my fence and most of the other fences around here. If you call them they'll send someone out today or first thing in the morning. If you decide to use them, they'll drop off the materials Friday or Saturday and probably have a tractor mounted post driver and crew out here to work on Sunday. They'll have it boarded up in less than a day and then come back and paint it after a couple of months. Depending on the style and the number of gates, and assuming cedar not vinyl---which I would recommend---figure on seven to ten dollars a foot for a four foot split rail fence.\" ",
        "\"Great! I'll call them today; we really want to get a puppy as soon as possible---maybe two dogs so they have company.\" \n\n\"I have a few things on my plate over the next week or so including another deck and finishing up this generator project.\" Frank did not mention that he also had one incredible nubile young brunette to impregnate but then again that project wouldn't take too long. \n\n\"What do you charge for your services, Frank?\" Amy asked, with just a hint of flirtation which he dismissed. \n\n\"Amy, I'm retired. I do this stuff for fun. I do enjoy a good cabernet or red zin and have a passion for Guinness. I already have an attorney so I doubt that I need any pro bono work in that area. Look---I've got every tool known to man and the expertise. You two are going to do the grunt work. I'll also advise you of which projects I don't do---those I recommend you hire out. The fence is one example; digging a pond is another. No matter how hard you work it will take a month to hand dig a decent pond and a guy with a Bobcat can get it done in four hours for three hundred bucks. The stone work, design and plumbing is the fun---albeit arduous--- part; does that sound fair?\" \n\n\"Frank, this has to be serendipity. I can't believe how lucky we are to have met a special man like you. I'm confident we can form a mutually satisfying partnership,\" Amy said, with a definite twinkle in her eyes. \n\n\"Ladies, what's on your schedule for the rest of the day? I'm open and need something to do.\" \n\n\"We're both off today.\" \n\n\"Why don't we attend to the absolutely mandatory items this afternoon: battery backup, at least a small generator and the fireplace insert? We can get everything we need locally; none of that requires permits. We just need to take some measurements, hop in the truck and go let you use your debit card. Are you folks hikers or campers?\" \n\n\"Absolutely! Why?\" \n\n\"Well, a small portable generator is great for camping so it won't go to waste if you ultimately decide to install an auto system.\" \n\n\"Let's do it!\" both girls exclaimed in unison. As they exited through the garage, Frank noted that they already had a second fridge. \n\n\"Cross that off your list,\" Frank said. \n\nFrank and the two girls hopped in his truck and made a brief stop at his house to check on the dogs. Frank showed them the various projects he had accomplished and their excitement at seeing the finished products was very evident. \n\nBack in the truck, Amy sat in the middle with Megan on the door. Frank hated extended cab pickups and seldom needed to carry more than one passenger. Amy was an exceptionally attractive young woman, Frank mused...what a shame. \n\n\"So, Frank, tell us about yourself,\" Amy said, almost coyly. As her questions became more defined, it became obvious that she was checking out his DNA. Amy was a really hot little number...his kind of woman. Megan was easily an inch taller than Frank and all leg. Still, the idea of being her first man...her first cock...wow! Amy and Megan were evaluating Frank as a potential sperm donor; he was sure of it. When he reached across and produced pictures of his two handsome children, he was convinced that the deal was closed. \n\nThe first place was at a fireplace store, typically over-priced but top of the line. Frank's reseller's license was on file here so he bought at a little above wholesale. The salesmen all worked on commission and their piece of a reseller deal was small so they weren't bothered by any overbearing sales help. In short order, they found a dual fuel unit, pellet and natural gas, checked on availability---it was in stock---and Amy dropped her debit card. She hadn't flinched at the retail price but was obviously thrilled when the invoice came in almost a thousand dollars lower. The unit was soon loaded on the truck and they were off to the home improvement store. \n\nAlong the way they made a quick stop to gas up the truck and Megan went inside to get them all drinks. Amy moved in close to Frank as he pumped the gas and began to speak in a low conspiratorial tone. \n\n\"So, Frank, what do you think of Megan?\" \n\n\"She's quiet but certainly a lovely girl,\" Frank replied. \n\n\"I told you, Frank...Megan is, technically, a virgin...she's never been fucked before...by a man.\" \n\n\"Uh, huh.\" \n\n\"Would you like to fuck her?\" \n\n\"Almost as much as I'd like to fuck you but then you're not planning on conceiving, are you?\" \n\n\"No, I can't. My tubes are damaged. But I still stray from the chosen lifestyle on occasion. Are you good in bed, Frank?\" \n\n\"So I've been told, Amy.\" \n\n\"Are you fertile? That's pretty damned important.\" \n\n\"As of about three weeks ago, I was.\" \n\n\"Your wife's pregnant?\" \n\n\"No, not my wife.\" \n\n\"Oh, I see, you have experience in this area.\" \n\n\"As a matter of fact, I've been asked to put my potent little swimmers to work again tomorrow.\" \n\n\"You're a very busy man, Frank---certainly not the typical retiree. Megan has no female heath problems. She will be exceptionally fertile in another week. You help us out, plant a baby in her belly, and you and I can work something out. You're very attractive to me. I'm actually getting very moist right now. How do you like it, Frank? Are you exclusively a pussy man or are you into a little back door action?\" \n\nFrank's cock was bone hard, nestled straight up in his jeans. Amy noticed, fondled his big cock appreciatively and grinned. \n\n\"I'm an around-the-world kind of guy...are you okay with that?\" \n\n\"Absolutely, Frank! And from what you have there in your pants I'm genuinely looking forward to it.\" Amy said as Megan returned with three bottled waters and they jumped back in the truck. \n\nAt the home improvement store, they found everything they needed in short order. Frank recommended replacing the existing main sump pump; builders were notorious for putting in the cheapest contractor grade units on the market. Once again they received a discount as they checked out through the contractor-only section. Half an hour later they were back at the house which Amy and Megan owned. \n\nFrank got Megan started removing the old sump pump, filling the battery with acid and cutting the PVC. She was a quick learner with definite mechanical aptitude. Amy and Frank went up stairs to work on the fireplace. Amy was every bit as diligent as her lover and had no problem getting dirty. The fireplace already had a rudimentary gas burner; Frank had shut off the gas line which fed the fireplace from the basement. In short order, they had the old, cheap burner removed and slid the new insert into place. It fit perfectly. Amy decided to clean the soot off her face and Frank returned to the basement to check on Megan; he found her perched in his favorite position; the position all women were born to assume. Head down and butt in the air. He couldn't help himself. \n\n\"Nice ass, Megan, damned fine ass.\" \n\nMegan giggled. \"I didn't think you noticed, Frank; you seemed far more interested in Amy's body in the truck.\" \n\nMegan stood up, spun around and kissed him. \"You're going to fuck me, aren't you, Frank. You're going to give me a baby. You're going to be my first cock.\" And with that her hand dropped to his crotch. \n\nAs Amy's foot fall came down the steps, Megan turned back around to her project. It took only a few minutes to solvent weld all the connections---which Megan had measured and cut precisely---and reassemble the sump pump assembly. They decided to let the weld cure for a while and all three went back upstairs to complete the fireplace. \n\nThe gas connection was completed in short order; they turned on the gas and checked for leaks. In less than half an hour, the trim pieces were in place and the project was completed. Frank fired it up, hit the blower switch and the two young women marveled at how much heat it produced. Frank showed them how the pellet insert worked and suggested that they keep a few bags of pellets on hand but only use that feature if there was a gas pressure problem---which there sometimes was during ice storms as the demand for natural gas exceeded supply. They unpacked the small generator, fueled it up and tested it. \n\nLastly, Frank had recommended a through-the-wall plug which would allow the generator to run outside but would enable them to run the heavy duty extension cords without having to leave a door or window cracked. Megan handled the heavy drill like a pro. Amy installed the unit under Frank's direction with no problems. They restarted the generator and ran cords to the fireplace blower, the computer, the TV and a couple of table lamps. \n\nTesting the load, Frank warned them that this was absolutely all the little generator could handle and not to attempt adding another appliance. If the power went out they would be able to close off the rest of the house and be comfortable in the family room. The house should stay warm enough to preclude pipes freezing, unless the power outage was prolonged. The basement was below ground, well insulated and was unlikely to freeze. Frank had also installed a drain on the main water line in the basement so that in a prolonged emergency they could drain the house pipes completely into the sump. No hot showers, but they were welcome to come over to Frank's house, since he had full backup power and a propane backup system. Both girls giggled suggestively at that idea. \n\nMegan opened an exceptional and rather expensive red zinfandel and the three sat comfortably in the family room admiring their handiwork. To his surprise, the two women became very familiar with each other and were touching and fondling with increasing ardor. \n\n\"Girls! Get a room. You've got to stop it!\" \n\n\"What's the matter, Frank? Are you getting...aroused? I was just thinking maybe you and I could give Megan some lessons in...\"\n\n\"You're damned right I am; and no damned lessons! I've got a big problem. I absolutely promised a very special young woman that I would not cum on Thursday...trying to ensure maximum sperm count...and if you keep that up...!\" \n\nThe girls laughed so hard they almost fell on the floor. Fortunately they stopped trying to entice Frank. It was going to be a very long night, Frank thought to himself. \n\nFrank said his goodbyes to allow the girls to let nature take its course and headed home to entertain his puppies and contemplate a good night's sleep. All he could think about as he drifted off was fucking...Bonnie, Belinda, Buffy, Caitlin, Megan...Amy. All he had to warm his bed was a couple of lovable but smelly dogs. Life can be a bitch sometimes. \n\nChapter Nine, Impregnating Buffy. \n\nFrank rose early, made breakfast and sipped his coffee as he flipped through the morning paper. At a little after eight, the phone rang. It was Buffy. \n\n\"Get your cock over here; I just took my temperature; its fucking time...or time to fuck!\" \n\nFrank was knocking on Buffy's door fifteen minutes later. She answered his knock almost instantly, wearing absolutely nothing. What a perfect little hard body, he thought to himself, transfixed by her young beauty. \n\n\"Stop gawking! Get in here and get naked. Timing is everything in these matters.\" \n\nFrank quickly obliged. Buffy was impatient; she wanted Frank's sperm and wanted it quickly. \n\n\"Slow down, girl; everything I've read tells me that an orgasm is part of the whole conception process. It helps 'open the door,' so to speak. Relax and let's enjoy it. I'm sure that was nature's plan.\" \n\nRecognizing the logic of Frank's words, Buffy began to enjoy a nice slow almost leisurely fuck with Frank. This was a special moment for both of them. Frank and Buffy made love languorously for almost half an hour before Frank accelerated his thrusts and deposited his built up load of potent swimmers deep inside her birth canal. Buffy rolled into the recommended position for optimum conception as Frank continued to love and adore her. It was as if she could feel the little wigglers rushing to their target. She knew in her heart that this was going to take and give her her first baby. She smiled contentedly. \n\n\"Well, Frank, one thing you can check off of your to do list. What now?\" \n\n\"Did you look outside when you got home last night? The generator came in yesterday; thanks to your new neighbors across the street, it's already bolted down. We've got a transfer switch to wire up and gas and electric to complete. Get your absurdly sweet and lazy ass up---we've got things to do!\" \n\n\"Do you think it's been long enough?\" \n\n\"Sure, and if not I'll fuck you again when we're done working.\" \n\n\"Maybe you should---just to be sure.\" \n\n\"My thoughts exactly.\" \n\nThey started with the transfer switch. Frank popped the electrical panel, pulled the main breaker and ran a length of red adhesive tape across just below the still hot main lines as a reminder. He quickly inserted the additional circuit breaker which would activate the generator's auto start feature and ran the already stubbed out cable to that breaker. \n\nBuffy had already checked every circuit and typed up a precise list of exactly what each breaker controlled. Frank recovered the transfer switch from his truck and fastened it to the wall next to the main panel utilizing the lugs he had previously inserted. He attached the thick conduits from the transfer panel to the bottom of the main box. This particular transfer box had 30 circuits, ten less than the main panel so choices had to be made. Some were obvious---no stove, no electric dryer, no air conditioner. \n\nThe generator was a \"whole house\" model of reasonably modest size and not intended to drive these high current draw appliances. Six were accounted for with those things and Buffy had already identified four other circuits that powered unused bed rooms. Taping the letter and number coded wire chart on the wall, Frank showed Buffy what to do, i. e., replacing the hot wire to each breaker with the red wire from the transfer box, then using a wire nut to connect the yellow wire from the transfer box to the black hot wire which had been removed from the breaker. \n\n\"Buffy, each conduit contains wires that draw from one side of the generator. To maintain balance we want to have as close to equal amperage on both sides when we get done, so write down each one you do. Don't let your hand or anything else stray above the red tape---the mains are still hot.\" \n\nBuffy did the first two like a pro; Frank decided she could handle it and went outside to work on the final hook up to the generator. It took him about half an hour to make the final gas hook up and attach the previously stubbed out electric line to the generator. The electric service from the house was stepped down by a transformer in the generator housing which charged a small lead/acid starting battery. It also included a circuit which told the generator that house power had failed and that it was time to crank. Additionally the generator would start and run on its own once a week to keep everything lubricated. \n\nHe turned on the gas and ensured that the connection was leak-free after running the ground wire to the house's common ground. Returning to the basement, he found Buffy just completing the last connection. She had done a superb job of trimming each wire and neatly folding the two bundles on each side of the box. Frank connected the common and ground, took a brief look at everything and reattached the cover. He threw the main breaker to the on position and nothing smoked, popped or sizzled. \n\n\"Let go outside.\" \n\nOutside, Frank explained the basics of the unit to Buffy to include periodic maintenance checks, such as checking the oil and air cleaner. \n\n\"Hon, this is the main on switch; once we turn that one, the unit should function automatically if the power fails. It's inside the access panel so no one accidentally turns it off. It's auto choke and governor so there's nothing to set. This is the manual starter switch---the unit will crank up once a week on its own and run for about thirty minutes. We set the clock and tell it what day and what time we want that to happen so that it doesn't disturb at two in the morning, although this is a surprisingly quiet machine. I bled the gas line and the battery shows adequate charge. Would you like to do the honors?\" \n\nBuffy was like a kid with a new toy. She pressed the starter and grinned when the unit started up almost immediately. \n\n\"It really is quiet!\" \n\n\"It'll get noisier when we put a full load on it, but nothing like a typical portable gasoline unit.\" \n\nFrank let the unit run for about five minutes as he replaced the access panel then shut it off with the spring loaded kill switch. \n\n\"Let's go down to the basement and shut off the main again and see what happens.\" \n\nWithin seconds the generator started automatically. Throwing each switch in the transfer panel to the generator position, they heard the noise level increase somewhat as more load was put on the generator. \n\n\"Why don't you go upstairs and turn everything you can on and we'll check out the load balance. I'll stay here.\" \n\nBuffy returned a few minutes later, still grinning. \n\n\"Buff, you'll probably never have everything on at once like you do right now; on the other hand, there will be peaks and surges as electric motors---refrigerators and such---cycle on and off and you use a toaster oven, portable heater or hair dryer, but there's a good reserve---just don't make toast and dry your hair at the same time. I checked the blower on the hot water heater and turned the furnace on. We should let it run for another ten minutes.\" \n\nFrank went back outside and checked the generator; everything was fine. Returning to the basement, he turned on the main circuit and was gratified when the generator cycled down to a fast idle and ultimately shut off. Rechecking the oil level and gathering his tools, Frank pulled out his cell phone and called his friend who would be able to sign off on the project. He promised to stop by in about two hours. Fred was always punctual. \n\n\"Buffy, not much to do for the next two hours; after Fred signs off on the work---and you'll need to give him a check for a hundred dollars for what will amount to five minutes of work---we contact the county on their automated line and schedule a final inspection. That won't take long, either. The building inspector will measure to ensure that the unit is far enough away from all windows and doors, might start the unit up but probably won't even look at the main box since the work has been certified by a contractor whom he knows.\" \n\nBuffy was still grinning from ear to ear as she moved in close and fondled Frank's rapidly growing cock with her little hands. Frank had a pretty good idea what he and Buffy would be doing to occupy their time. \n\n\"Frank, just to be sure and since you're obviously completely recovered, I think you should fuck my little cunt again.\" \n\nFrank had his strong hand down inside Buffy's loose sweats in seconds, caressing the delightful crease of her ass and massaging her still sticky little slot. Picking her small body up he noted an old sofa on the other side of the basement which he knew would exactly meet their needs. Tossing her gently over one arm of the sofa Frank yanked her sweats off and gazed longingly at her magnificent white globes of flesh and the alluring little brown hole in the middle. Kneeling down, he began servicing Buffy's wonderful little ass hole in earnest. \n\n\"Oh, Frank, you're such a delightfully dirty old man...but my pussy...\"\n\n\"I know, I know, but you have the cutest little pucker I've ever seen and when I see it there almost winking at me I've at least got to give it a little oral attention.\" \n\nReveling in the tart muskiness of her tasty little back door, Frank snaked his fingers into her slimy little girl hole, found the button and began working it with his typical expertise. \n\n\"Oh, fuck, Frank...oh, tongue fuck your little girl's dirty little hole, you wonderfully dirty man...oh, fuck, oh, God, your fingers...oh, yesssss!\" ",
        "Frank quickly dropped his shorts, readjusted Buffy's amazing little ass in the appropriate position and quickly sunk his solid tool to the depths of her little cunt. He couldn't see her face clearly and her feet were not touching the ground but the spectacular view her position presented drove Frank in an almost animalistic frenzy. That ass needs to be slapped, he thought to himself, and quickly did so. \n\n\"Oh, yes, Frank, I like that...spank this bad little girl...spank me hard.... Oh, shit, your cock is so fucking hard, oh, yes, jam it in there as hard as you can...I'm your little slut, baby, make me your woman.\" \n\nFrank made no conscious attempt to control his orgasm but even without doing so he almost brutally drove the gorgeous young woman's body up in the air with each hard jab of his fat cock, fucking her for almost twenty minutes before roaring as he shot the second load of the day deep inside her special canal. \n\nPicking Buffy up and sitting her on the edge of the sofa he told her what he expected. \n\n\"Lick it clean, you little cunt.\" \n\nBuffy was a very obedient little girl. When she had taken his still serviceable organ to the depths of her throat and licked off ever drop, she smiled and spoke. \n\n\"Oh, Frank...I love it when you call me a little cunt...you spanked me...you fucked me like a whore...I love being your little whore...I liked it rough...I want to try it even rougher...role play...my rape fantasy. Oh, Frank, you're the best neighbor a girl could have!\" \n\nFrank loaded up his tools, bid a fond farewell to Buffy and headed home to contemplate exactly how he was going to tell the love of his life about his carnal adventures. They really had no secrets and these secrets could not endure any longer. \n\nChapter Ten, Frank Tells His Wife, Bonnie. \n\nBonnie came home from her business trip later that afternoon. As usual, Frank wanted to fuck her the second he saw her but he knew they needed to talk. \n\n\"Honey, we need to talk. I'm not proud of what I'm about to tell you, but...\"\n\n\"Well, dear, let me see if I can guess. You've found a new activity to fill your retirement years; I'm betting it involves a certain little brunette with a killer body. Before you go on, I put her up to it. Buffy and I chatted at the party. She made it very clear that she wanted to have sex with me. I agreed, but only if she seduced you first. She sent me an email indicating success.\" \n\n\"I should have known; but she's not the only one. Belinda called me to show her how to relight her pilot light and...\"\n\n\"Dear, do you remember the first time you fucked me? I'd been flirting with you for several weeks and then I called you...\"\n\n\"Did you tell the pilot light story to Belinda?\" Frank asked. \n\nI might have mentioned it.\" \n\n\"You little minx...you know I can't resist...\"\n\n\"A woman with a hot little ass, head down, butt in the air?\" \n\n\"There's more. She's pregnant. Her husband has a sperm problem and...\"\n\n\"Oh, that's so exciting! I've always regretted that we couldn't have children together; now we'll have a surrogate child...or more like a grandchild! Look, dear, I really wanted to get in Belinda's pants and so I figured...\"\n\n\"There's more, we won't know for a week or so, but Buffy...\"\n\n\"I see.\" \n\n\"And then there's Caitlin...the little red head. She'd never had anal sex; her husband wants to and she...\"\n\n\"Well, I can't think of anyone better to break in a new anal slut than you, Frank.\" \n\n\"And then there's the new lesbian couple, Megan and Amy. They want to have a baby and Megan is going to be the mommy, and nothing has happened yet, but as soon as she ovulates...\"\n\n\"More children, how nice!\" \n\nBonnie continued. \"Honey, let's put this to rest. You know I was decidedly 'girl oriented' when we first met. You changed all that but as I've gotten older, I've had the urge. I'm not afraid that you'll leave me for some twenty-something; we're best friends and a perfect couple. Thank you for telling me. Let's keep it all open and honest. Come on! You know it would turn you on to see your loving wife getting her rocks off with one of these absurdly young women...and then I've always dreamed about watching you service another women with that fat cock of yours. Imagine the three...or even four of us in bed together...the possibilities! Now shut up and fuck me. All is well!\" \n\n\"Thank you, dear.\" \n\n\"By the way, when is Megan going to be ready?\" \n\n\"The end of next week.\" \n\n\"Well, I'll have to check out Amy, but maybe while you're planting a baby in Megan, Amy and I could...\"\n\n\"That works for me.\" \n\nIt still amazed Frank how much his forty-seven year old wife turned him on. They were truly made for each other. Three hours later, both Bonnie and Frank were totally spent, having engaged in one of their typical marathon sessions that always followed her return from a business trip. \n\nChapter Eleven, Frank Schedules Time with Amy and Megan and Meets Kim. \n\nFrank stayed busy over the next week with his assorted neighborhood projects. Buffy called the following Sunday to confirm that she was indeed pregnant. Bonnie and Frank had decided to throw together an impromptu garden party at their house on Friday night. Soon the massive deck and expansive backyard were filled with numerous sweet young wives in the typically skimpy and revealing attire that befitted the warm summer evening. \n\nCaitlin came over and introduced her husband and explained that Frank was going to help with the deck project. His name was Paul and Frank liked him immediately. He planned to take a couple of days off from work to help his wife with the deck and made it clear that he and Caitlin expected to do most of the work and really expected Frank to just provide guidance. Caitlin was going to be out of town most of Monday on one of her periodic visits to her employer's home office. Paul wondered if Frank could stop by early on Monday to help sketch out a design and put a materials list together since Paul would be working from home that morning. Frank agreed. \n\nMegan and Amy came over to chat and confide that Thursday was almost certainly the day, preferably around noon. Frank entered a note in the Blackberry he always carried. \n\n\"Girls, my wife Bonnie and I---I believe I just saw you chatting---we really don't have any secrets and she'd really like to join us, if you don't mind. Maybe while Megan and I are...?\" \n\n\"I'd love to fuck your wife, Frank. I'm all for it!\" \n\nThe two girls moved on to meet other neighbors and Frank went over to brief Bonnie, who also pulled out her PDA and entered a long lunch for the following Thursday. \n\n\"Frank, the tall Eurasian girl over by the fire pit...her name is Kim...I know she's interested in me...go get her interested in you.\" Frank followed his wife's instructions, moving to the stunning young woman and introducing himself. \n\n\"Frank, I just met your wife and I've heard so much about you! It's a real pleasure,\" Kim said, unabashedly giving Frank the once over. \n\n\"Well, Kim, the feeling is mutual. I guess you already know about some of my project assistance here in the neighborhood; is there anything I can help you with?\" \n\n\"Well, actually Frank, my husband has his own construction company; I worked construction during the summers in college; that's how we met. We're both pretty competent at building and fixing things. Right now he's working on a big development down in the Florida panhandle and only gets home one or two weekends a month. I'm sure you could help me out but there's really only one special tool you need to bring over. I love older men. . . you're very hot! So is your wife, Bonnie. I'd really like to fuck both of you and, from the scuttlebutt, I hear you're the man to call when a girl has that special urgent need. What's your schedule look like this coming week?\" Kim said, pulling her PDA from the back pocket of her enticingly tight and outrageously short shorts. \n\nComparing calendars, an appointment was set for Wednesday. Since hubby would not be home the following weekend, a plan was made for Bonnie, Frank and Kim to get together the following Saturday night. Flashing Bonnie's PDA with the infrared, he could see her respond to the vibrating instrument across the room, check the message and nod in agreement. That was pretty easy, Frank thought to himself. \n\nAfter the last guests left, Frank and Bonnie retired to bed. Both were tired but when Bonnie returned from the bathroom, assumed the favorite position and it quickly became evident that her hot little ass hole was slick with fresh lubrication, Frank quickly inserted his very serviceable implement into his favorite woman's forbidden little back entrance. He had first introduced Bonnie to butt fucking and she still moved better than any other little anal slut he had ever met. The woman's ass was simply made to be filled with cock. Bonnie moved in perfect unison with his balls-deep thrusts. Half an hour later they both came together in screaming ecstasy, soon falling asleep together in each other's arms. \n\nChapter Twelve, Frank Gets to Know Caitlin's Husband Paul. \n\nEarly Monday morning, Frank tapped on the door of the home of Caitlin and Paul. They spent close to an hour examining the potential deck site and sketching out possible designs, finally coming to one that both men believed would perfectly complement the rear of the house. Frank invited Paul back to his house to cad-cam out a design, prepare a permit request and assemble a materials list which took another hour and a half. Frank told Paul he'd be glad to drop off the permits and Paul gave him a check for the county fees. While they could have ordered the supplies on line or over the phone, Frank was picky and suggested they stop by the lumber yard fifteen minutes away and place the order, still giving Paul ample time to come back home and change for work that afternoon. The two men hopped in Frank's truck. \n\n\"So Paul, are you and Caitlin planning on a family?\" \n\nPaul was quiet for a moment. \"We really want to, Frank, but we've got an Rh blood type mismatch that promises to cause some real problems. We both love children and want to have at least two but now we're having to consider alternatives.\" \n\n\"Alternatives?\" \n\nPaul grew very serious. \"You know, another man's sperm. We've considered a sperm bank but there are some real horror stories there. So, we've pretty much decided to find someone we both like with a good genetic history and...ah,...ask for his help.\" \n\n\"I see,\" Frank replied. \"Are you planning to have it done, 'the old fashioned way' or have artificial insemination?\" \n\n\"Neither of us completely feel comfortable with artificial insemination, so I guess it's the old fashioned way.\" \n\n\"Are you both okay with that?\" \n\n\"Yeah, we've talked about it; it's not as if...\"\n\n\"They have to enjoy it? Let me disagree with you, since I've studied this issue a bit over the years. I'm sure you both are well versed in discerning the right time but a lot of people don't realize that an orgasm, from a female perspective, the contractions that occur, as it were, are an important part of the whole process...it's what helps open the door. So in addition to finding the DNA you're looking for, it's essential that the two people be attracted to each other sexually. It doesn't always work the first time. I realize all of this can be a little disconcerting to a young husband with a very attractive young wife, the idea of said attractive young wife fucking another man and liking it. Are you sure you're okay with it?\" \n\n\"I think so; he would have to be someone we both like and respect. I've also done a bit of research and I know what you are telling me is true. It makes me feel a little funny to think of Caitlin with her legs up in the air enjoying getting boned by another man...but we really want children so much...we're going to do it...or more accurately, Caitlin is going to do it. We've talked about it and decided that it would be best if it happens some time when I'm on the road. I mean, I'll know all about it, but I don't want to actually be in the room...\"\n\n\"That's probably pretty smart. If she's not relaxed and comfortable, the chances of a successful conception decrease dramatically. Do you have any candidates yet?\" \n\n\"Not really. You're right, it has to be someone that Caitlin finds attractive but also someone we both are comfortable with.\" \n\nPaul and Frank soon arrived at the lumber yard and put the order together which would be delivered the following day. Paul planned to take Friday off so that he would have a long weekend to get the project under way. They didn't speak of other matters on the drive back but discussed how the deck project would unfold. If the weather held they would be able to get all of the support structure built over the weekend and Caitlin could start attaching the deck boards the first of the following week. \n\nFrank was really glad he had a top-of-the-line PDA; there were so many things on his schedule...fucking Kim, getting Megan pregnant, a recreational fuck with her partner Amy, more construction projects, the anticipated unscheduled trysts with the two new mothers-to-be, Belinda and Buffy...he was a very active retiree.... it was only Monday. \n\nChapter Thirteen, Personal Service from Parcel Delivery Service. \n\nAs he returned home the Parcel Delivery Service girl was just pulling into his driveway. Frank really liked her; she was young, barely out of her teens with that fresh loveliness that so inspired him. She also filled out that brown uniform like few other Parcel Delivery Service drivers could. They had flirted with each other over the months, both becoming bolder as time had passed. \n\n\"Hi, Frank.\" \n\n\"Hey, Tina. What's up?\" \n\n\"I'm having a great day, Frank. The load is light and I got an early start; it gives me a few extra minutes to actually enjoy lunch for a change. Hell, I've only got three deliveries left and they're right up the street. I might just take a really long lunch.\" \n\n\"Well, Tina, I'm just getting ready to make lunch. There's plenty for two; care to join me?\" \n\n\"That's the best offer I've had all day, Frank---I'd love to!\" \n\nFrank put together one of his sumptuous lunches while Tina went to freshen up. To his surprise she returned wearing one of Bonnie's silk robes and carrying her uniform. \n\n\"Can I use your washer and dryer Frank? One of my deliveries leaked and I'd really like to get the smell out before I get back on the road.\" \n\n\"Absolutely!\" Frank replied, as the thin, loosely tied silk garment opened alluringly displaying a delightful expanse of well-tanned, lean young thigh and a hint of color above. \n\nBoth ate quickly and Tina helped Frank carry their dishes to the kitchen. As Frank was wiping out the sink, Tina came up behind him, pushed her hot little mons against his butt and reached around to the front to fondle his rapidly inflating cock. \n\n\"Ready for desert, Frank? I sure am.\" \n\nSpinning Frank around, jerking down his loose fitting shorts, Tina engulfed his now bone hard fuck stick in her hot young mouth. She was as diligent at cock sucking as she was at her day job. Ah, the younger generation! They became such expert cock suckers at such a tender age! \n\nFrank gently rubbed the tips of Tina's little nipples as he gazed into the eyes of the wanton little bitch servicing his rod. Just below he could see the brown patch of her young cunt. Worried about Tina's delivery schedule, he decided to cum quickly in her mouth, which would also allow ample time to explore her other treasures. Tina began to moan expectantly as she knew she was about to receive her special delivery. Frank quickly filled her willing young mouth with cum and the little tart gobbled it down gleefully. What a pleasant surprise, Frank thought as he gained new meaning of, \"what can brown do for you?\" Or had her uniform been green? Green, brown...whatever.\n\nWhat a delightfully nasty little slut Tina was, Frank mused as he pumped the full length of his fat tool to the back of her throat and eyed her nimble fingers furiously diddling her slippery little slot. Picking up the nubile little fuck toy, Frank sat her hot little butt on the edge of the counter and went down on her. Oh, my, the amazing essence of sweet young pussy! Tina propped her muscular young thighs up with her heels on the counter in a lewd display of her enticing little holes. Lubing a finger in her slimy little quim, Frank gave young Tina his best oral efforts while gently inserting a finger inside her musky little back door. \n\nThe little slut didn't even flinch but instead slowly moved her hips forward and back fucking her dark hole on Frank's digit. Frank's oral expertise paid off as Tina came with a moan and a cry in less than a minute. Frank quickly reached to the shelf above Tina's head and grabbed the squeeze bottle of pure virgin olive oil he so often used while cooking. Carefully slipping the tip dead center up the little whore's anal ring, Frank squeezed an ample portion of the oil of preference inside her little chute, then worked additional fingers in there to get her ready for the ultimate ass fuck. \n\nPicking the young woman up effortlessly, Frank positioned her excellent little butt in the middle of the low kitchen stool, pleased to see that Tina had accepted the inevitability of what was to happen and had began stroking her little brown muff in anticipation. Without a word Frank moved in and inserted the engorged tip of his prick at the entrance to her tightly wound little hole. The head passed through relatively easily as Tina gasped in surprise. Surprise, yes, alarm or concern, well, no. Tina had certainly had something shoved in her little ass hole in the past. \n\nWhatever it had been, it was doubtful that it had been quite as big as Frank's cock; her rectum was as tight as any he had ever enjoyed, virgin or not. Setting up a steady deep stroke, Frank began encouraging Tina to talk to him. \n\n\"Where's my cock, Tina? Tell me!\" \n\n\"It's deep in my fucking ass...it's so big...I'm so full...Oh, damn, I love it in the ass...I'm just a little anal whore...fuck me in the ass, Frank...make me your little anal bitch.\" \n\nFrank fucked the young woman's exquisite little ass hole for some time, occasionally drizzling more olive oil on his stiff cock as he sensed Tina needed more lubrication. Tina's fingers fell to her patch as she lazily worked her fingers inside her little girl hole. As Frank's stroke increased and his cock hardened even more Tina's manual efforts on her steamy little cunt accelerated. \n\n\"Shoot that load in my ass hole, Frank...I want to feel it...I'm so fucking close, oh, shit...oh, God...Yessss!\" \n\nFrank shot his cream deep in Tina's rectum as the two came almost simultaneously. Removing his still hard cock from Tina's gaping back door and moving to Tina's front Frank gently pushed her head down. \n\n\"Clean it up, Tina, clean my cock!\" \n\nTina was a very obedient little girl. When Tina had finished the cleanup, Frank again went down on her, this time tenderly caressing her still distended little shitter with his tongue. Tina squealed with pleasure...another very satisfied customer. \n\nLess than fifteen minutes later, the diligent delivery person was back in her official uniform, grinning from ear to ear as she sashayed out the door and back to her step van. What a pleasant and unexpected surprise, Frank thought to himself. The way things were going Frank was sure that there was more carnal activity in store for him; the day was young. Frank took a quick shower and another short nap. Retirement could be so demanding. \n\nChapter Fourteen, Bonnie Sends her Secretary Home. \n\nWaking up a couple of hours later, Frank was horny; it seemed as if the more he fucked, the hornier he got. Checking his calendar to see who might be available for a middle of the afternoon quicky, he was disturbed from his musings by the phone. It was Bonnie. ",
        "\"Frank, I'm sending a very special little treat your way---my secretary, Becky. I just fingered her delightful little nineteen year old cunt right here in my office. She broke up with her boyfriend a couple of weeks ago and is alarmingly horny! It's affecting her work. She has a real crush on you! She's coming over ostensibly to pick up some papers, wink-wink, but she's very doable. This is barely used, young, submissive, cunt, Frank. Make me proud!\" \n\nBecky arrived less than twenty minutes later. Becky was a farm girl with a full but delightful ass, ample titties and a sweet little corn-fed face complemented by natural blond hair. Frank greeted Becky at the door and gave her a fatherly hug which ensured that she felt the growing bulge in his shorts. Frank wasn't wearing anything else, giving Becky an opportunity to appreciate his lean, muscular body. Guiding her to the sofa Frank decided to find out exactly how submissive Becky was. The papers she was supposed to pick up were sitting on the coffee table. \n\n\"Take off your blouse, Becky...that's right, now the bra...you have very beautiful breasts, young lady.\" \n\n\"Stand up for me now...drop the skirt...now the panty hose...turn around and bend over...now the panties. Very nice, Becky, your ass is quite amazing. Spread your legs... that's right...now open your pussy for me with your fingers.\" Becky had not hesitated to comply at any stage. \n\n\"Reach back and spread your ass for me, Becky...I want to see that cute little ass hole of yours...oh, that's sweet!\" \n\n\"Tell me, Becky, are you an accomplished little cock sucker? I'm sure you are. Bend over a little more...I'm going to taste that cute little ass hole of yours. . . hold it open for me.\" \n\nFrank was absolutely sure no one had every done this to little Becky before but she got into it very quickly, rotating her rear in small circles in response to his oral efforts. As he was enjoying her musky hole, Frank quickly doffed his shorts. He had already decided that he wanted to test her pouty little mouth first. Some days you just want your cock sucked and this was one of those days. Positioning the young girl just the way he wanted her in a sitting position on the sofa, Frank stroked his rock hard tool inches from her face wondering what sort of encouragement would be required. Becky groaned and whimpered, slipped down to her knees, fondled Frank's fuck toy for a few seconds and then engulfed it. Becky certainly was an extremely accomplished little cock sucker and, in no time at all, she was swallowing Frank's cream with gusto. \n\nSliding her adorable little butt back up on the sofa, Frank worked his talented mouth down her young body, paying particular attention to her ripe young melons which he quickly discerned were quite sensitive. Not wanting to keep the young darling waiting too long for her release, Frank quickly moved his mouth down to her soft blond muff and did what he did so damned well. Becky came quickly with a squeal then rolled her hips in anticipation as Frank worked her little muffin to find the second coming. It took a little longer but it was well worth the wait. \n\n Enough Already! This story has gone on to long and needs to end. \n\nLater that night in bed together, Frank gave Bonnie all of the slimy details. A few weeks later as they were chatting again, Bonnie reviewed where things were. \n\n\"So! How many pregnant women are you responsible for?\" \n\n\"Well, let's see...Belinda, Buffy, Caitlin---with Paul's blessing, Megan's done, Kim somewhat to my surprise, the Parcel Delivery Service girl, Tina---she and her husband are moving to the neighborhood as soon as the house closes but there are two more on my PDA.\" \n\n\"Belinda, Buffy and Caitlin want us to be god parents.\" \n\n\"How sweet! It's sad that most of these young couples will move; one or the other will get promoted and...\"\n\n\"And new young couples will move in. By the way, I understand 'the boys' have all decided to go bass fishing this weekend; I assume you were invited.\" \n\n\"I thanked them profusely and asked for a rain check; told 'em I was kind of beat and planned to spend most of Saturday in bed.\" \n\n\"The girls will be tickled that you are staying home.\" \n\n\"The girls?\" \n\n\"Belinda is just starting to get a little belly; Buffy is just showing and you wouldn't even know Caitlin was pregnant. They all are concerned that their respective husbands won't be excited about meeting their marital responsibilities once they get big bellies. With hormones raging, they're all horny as hell. We'd planned to get together here, while you boys were fishing, for a little girl fest.\" \n\n\"I certainly wouldn't want to spoil your plans.\" \n\n\"Didn't you once tell me that you and your first wife had the best sex ever when she was pregnant?\" \n\n\"Right up to the night she delivered.\" \n\n\"I'm sure they wouldn't be remotely disappointed if you hung around.\" \n\n\"Five is an odd number.\" \n\n\"The more the merrier! Don't forget to take your medication dear. They'll all be here around ten on Saturday morning.\" \n\n\"Yes, dear.\" \n\nEdited by Techsan and Crazysoundguy "
    ],
    "authorname": "Dinsmore",
    "tags": [
        "anal",
        "oral",
        "cheating",
        "pregnant",
        "impregnation"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-retirement-years"
}