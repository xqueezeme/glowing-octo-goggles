{
    "title": "Fighters",
    "pages": [
        "A few warnings right off the bat. This story goes to dark places - assault, substance abuse, alcoholism, depression. Everyone who deserves to end up okay ends up okay. We'll all get there in the end, together. Have faith; love wins in the end. \n\nBut nakamook, I hear some of you say. This is not what we expected. What about the pirates? \n\nWhat pirates?\n\nJust kidding. As if the sailor would let me leave him behind. That story will be updating as usual - think of this as a bonus. \n\nIf you don't give a hoot about the pirates. Enjoy. There will possibly be more to come; short, serialized visitations to this world and our friends in it. For now, have this. Taste happiness. Hide the memory of it under your tongue for a rainy day. \n\nComments, suggestions, feedback are all appreciated and loved, although not as dearly as you are. \n\nMinty fresh breath and someone to catch you when you fall, to each and every one of you. \n\n***\n\nCH 1\n\n***\n\nIt wasn't that I hated bars. I just hated this one. \n\nI pulled the beer to my lips and almost grimaced at the taste, or lack thereof. Whatever Bren had ordered me, it was little more than flavored water. This club was killing me with its 10$ cocktails and pulsing music, the press of bodies that I had no idea how to interact with. I wanted to be at home. I wanted to be reading. I wanted twelve aspirin and some fucking ear protection.\n\n\"Isn't this great?\" \n\nI looked down at Bren, taking in his small frame and flushed face. He really did love this shit. \"No,\" I answered honestly, earning me a swift slap across my shoulder. I winced - the slap might have been playful, and Bren might be small, but he was also fucking strong and it hurt.\n\n\"Just go dance,\" he shouted, as if it were an obvious solution. As if that would fix anything. \"You're so good at people. Go be good at people with your body.\"\n\n\"No,\" I said again, taking another drag of beer-water. I was perfectly happy here. \n\nNo. I wasn't happy. I had my bookshelf full of old friends waiting for me at home, and they were a thousand times more interesting and a million times more understanding than this sea of strangers. No matter how good Bren thought I was at people, I was never going to be good at crowds. \n\nBren just sighed and reached around me to grab my beer. \"Hey,\" I protested weakly as he sucked half of it down. \n\n\"Sorry,\" he panted, \"thirsty.\"\n\nI let it slide. It wasn't like I liked it anyway, and besides, he'd paid. I let him get back to his dancing and drifted off into my own world. It was better that way, existing in your own mind. I liked it there, much better than here. I let myself haze out, pushing the bar from my thoughts and falling back into better things. \n\nAs I did, the music swung up into some peppy piece and I heard Bren give a whoop. I hate this bar I thought before tuning it all out and creating some place infinitely more interesting for myself. \n\n*** \n\nIt wasn't that I hated bars, it was that bars hated me. And tonight was shaping up to be no exception. \n\nThe club tonight wasn't dead so much as rotting, all the same meat I was used to swinging useless on the floor. I knew exactly which ones I could get to fuck me in the bathroom, which would never fuck me but would let me suck their dicks, which would suck mine and then act like they'd done me some huge fucking favor. The puppy dogs. The assholes. That guy over there had once spat on my face in the middle of a blowjob and tried to get me to drink his piss.\n\nI squinted. Was that the same guy? Whatever. If it wasn't, he was the same type. Old news. They all hated me anyway. This whole fucking bar hated me. \n\nI wasn't really sure why, to be honest. It wasn't the barfights that had done it, I don't think. Bar fights are just fights that happen to be inside of a bar, and it wasn't like people didn't like fights. People fucking paid to watch that shit on TV, you know? If I happened to get into more fights in bars than outside of them, and if I happened to instigate most of those fights. Well. That's just the way life works sometimes. I've got one of those punchable faces, and who was I to deny the world what it wanted? And the world wanted it, and the people in the bar wanted it, so I don't think they hated me for giving them what they wanted in the form of flying fists and elbows. And it couldn't be the sex, or the things I could do with my body. After all, they wanted that too. They really wanted that - that had been made very clear to me, again and again. No matter how much they hated me, no matter what they thought of me, they still wanted the sex. \n\nSo maybe it was the barfights. \n\nWhatever. So what if they hated me. What was new? The whole fucking world hated me. Let it. Bring it on. I did the only thing I could think of, and went out and hate-fucked the world. \n\nI didn't see the world complaining. \n\nI scowled down at the the drink in my hand. I needed a refill, and soon. I wasn't nearly drunk enough for this shit to be worth my time. But looking out onto the dance floor I didn't see anybody likely to buy me a drink; most of them knew that they didn't need to do that for me, and wouldn't even bother. \n\nFuck. I chewed on an icecube, trying to get the last of the vodka from the glass. This drink had been courtesy of a stupid twink who I'd promised to teach the \"secrets of a perfect blowjob\" then left hanging in the bathroom. He wasn't my type, and I wanted something more tonight. Someone a bit more...\n\nMy eyes landed on a guy at the bar. Dangerous, I thought with a little irony, because he was anything but. Big, yeah, and muscled, but something about the way he was just hazing out there at the bar told me he was no threat. Not to me, anyway. Not in the way I was looking for. \n\nHe was sitting there with this expression on his face, like he was a million miles away, and that pissed me off and made me want to get him here, with me. I thought I knew how to do it. He looked like he might be the protector type, some otter maybe looking for a cub. Sad and lonely, I know how much the world has sucked, I'm here to protect you. The let me save you from yourself kind of guy. And while I hated that shit, hated it more than anything in the world, those types of guys were almost always good for at least one pity drink. Maybe even a pity fuck, but I wasn't cruising for that tonight. Not the way all the things in my body were screaming.\n\nJust then the music swung into some peppy shit song and I wasn't remotely ready for it. I looked down at the glass in my hand and scowled. I really fucking needed that drink. Fuck it, I thought, and headed over. \n\n*** \n\n\"Buy me a drink.\" \n\nI started, pulled from the softness of my own reality back to this painful, pulsing one. To this fucking bar, and everything it contained. The music, the dancers. The lights. The smell of booze and sweat and sourness, all wrapped up tight and confusing people into thinking it was the smell of sex. \n\nAnd course, this man. \n\nHe was sex fucking incarnate, a mess of tight fabric and long dark curls, his shoulder length hair the only thing about him that wasn't a sharp line or plastered to his skin looking like you'd have to peel it off. As he flipped it I caught sight of a single braid hidden within the locks and I liked it immediately, liked how it made him look soft and hard all at once. \n\nMy brain, snapped out of a world where I was alone and gardening, sunlight warm on my back and my only company a light smattering of birds and the occasional bee, was already going a mile a minute figuring this guy out. I didn't tell it to; that's just what I do, sometimes. People are easy, or at least they aren't hard if you know what to look for. And for some reason I didn't think he'd be hard, not the way he was leaned up there next to me, his eyes easy on the spaces in front of us like he was at home. \n\nI felt like I knew him, so instantly, felt like he fit inside my brain like some missing piece even as I tingled at being so close to something, someone, so unfamiliar. So different. How could one person be at the same time so similar and so distinct?  \n\nI didn't know. But holy fuck, I wanted to. \n\nHe was leaning on the bar like he owned the place - nah, not like he owned the bar, more like he didn't care who did. Like he didn't have a single goddamn concern in the world. Or maybe like he had so many of them he'd just given up.\n\nYeah. That looked more like it. He had that \"fuck it\" kind of attitude written all over him, the one that makes you jump from high places when you don't know what's below. That was part of it, I thought, part of the things that made him feel so familiar. Because I knew that attitude, knew it maybe a little too well. Fuck, how many times had I gone splat before I learned that falling isn't the same as flight?\n\nBut somehow I didn't think he had that same confusion of acceleration and freedom. He more looked like he liked the impact. \n\nShit, I found myself thinking, my eyes tracing the V his hipbones made, watching it disappear into dark jeans that were tight, that looked good, way too good it to be fair. And he does make an impact. \n\nI let my eyes track back up that tight shirt to his neck, long and begging to be bitten and teased. Fuck, this guy looked like wouldn't be able to handle being teased, not the way he was dressed for instant gratification. Maybe that was just my internal prejudice. Maybe it was wishful thinking. I tilted my head and thought about that for a moment, imagined making him wait, shivering beneath me. Begging. Holding his gravity, his resolution, in the palm of my hand and making him understand fully, completely, that it was my decision if he went over the edge or not.\n\n\"Vodka, soda,\" he was telling the man behind the bar. \"He's paying.\"\n\nThe bartender shot me a look and I just shrugged, trying to blink the images that I had from my eyes. Fuck, what had that been? I shouldn't be thinking like that so flippantly, not about a stranger and most certainly not about him. The bartender must have interpreted the movement as one of consent because he was heading to go get the guy and drink and fuck, I guess that meant the guy was staying. \n\nFuck.\n\n***\n\nI put in my order in and went back to scanning the bar. Got a drink from him, but he wasn't exactly what I was looking for in a fuck. Now when he was so...\n\nI looked over to him and actually jumped. There was this insane hunger practically dripping off of his face, his eyes burning and this little smile on his lips. Fuck, I thought, totally caught by surprise. Where did that come from? \n\nI mean, I knew I was dressed to kill. My clubbing clothes aren't standard issue; they're lethal. And I might not have been having a good night, but that didn't mean I didn't look good. And he was looking. Like, really looking. \n\nNow, people who want you, they're gonna look at the parts of you that they want. You can figure out which buttons to press pretty easy that way; which guys are ass guys, which ones like shoulder muscles, which want nothing more than to play with your collarbones, or your hair, or wrap a hand around your neck. You can figure out which ones to avoid, on days you don't want it rough. You know which ones to seek out one nights you do. \n\nTrust me on this one. I have a lot of experience with people who want me, or at least some part of me. I'm good at being what people want. \n\nBut this guy? It didn't seem like he was looking at me. Not at my body, not really, not like all those other men always did. Not at my neck, or my carefully exposed midriff and hipbones, not the curve of my ass. He was just dreamily gazing into my eyes, like he was in love, except people in love don't look like they want to devour you whole and use your bones to make stock. He didn't... he wasn't... It was kinda like, and this is going to sound nuts, but it almost felt like he was looking into me, somehow, like he was getting into my head and watching things unfold. Things that hadn't happened yet. Like I had a fucking movie, a porno, projected on my soul and he was just taking in the view.\n\nI didn't like it. \n\nAnd yet. And yet. There was something about the hunger, the sharpness that it lent him that I did like. In fact, I liked it a lot. Some part of me nudged my body closer to him, happy to see those green eyes sharpen when I moved even the slightest bit. So what if I didn't know what was doing it for him, if I had no idea what he was reacting to? Hey, if he was reacting, that was all that mattered, right?\n\nLooking into those eyes, watching them watch me. I just wasn't sure. \n\nI narrowed my eyes and met his gaze head on. A part of me tingled and I usually would have jumped on that immediately, would have let him have me just like that but there was something, something about the way he was watching me...\n\n\"So,\" I said carefully. What the hell was with this guy?\n\n***\n\n\"So,\" I responded. He was looking at me strangely, as if he wasn't quite sure what to do with me. I leaned my head on my hand and smiled, trying to put him at ease, but I guess the motion still held after images of all the things I wanted my mouth to do and he actually backed up a step. I didn't love the reaction. I was used to people being afraid of me, sure - I was big, and muscled, with close cropped hair and the kind of dress code that made people who knew things know to be careful around me. Sometimes size is all that does it, to make people scared. Sometimes it happens after a friend would come and see me fight, see the blood and the violence and not really be able to shake that idea, the smell, the sounds from their mind whenever they looked at me in the future. \n\nBut this guy hadn't seen me fight. And I don't think he was scared of me, not my physique or my way of being. After all, he'd picked me out as the one most likely to buy him a drink, and I'd seen him scanning the bar after. He knew I'd let him walk away. So, what? That drive, that push to figure him out crashed over me like a wave, and as soon as that happened. I don't know. I think I just kind of lost it a little. \n\nMy brain, my fucking brain. Sometimes I can't get out of my head, especially when I see someone that I want to understand. I'm good at people. I get them. In time, I always get them, build up this version of them in my head that I can run things by, that will react exactly the same as the real version. And this guy, he was so familiar, so different, and I just didn't understand why I was reacting to him this way, let alone why he would do something so dramatic as back away from me and I wanted, needed to understand him because it felt like there was something there, something hiding just beneath that casual lean of his that I knew. \n\nBecause there were, I realized as I watched him, as I built him in my mind, there were things about him that I understood. Immediately, immensely. Intimately. The things he held in his eyes, the way he would run towards any cliff he saw. How I thought he might be disappointed if the fall was only a few feet, if he made it out with only bruises. I got that. I'd been that. \n\nBut it was more than that, more than just the things he thought. I felt like I knew exactly how he would react to everything I would do, just after this brief meeting, how each part of his body would exist with me. For me. And at that thought, my brain. My fucking brain. \n\nMy eyes were tracking over him, intense and soft and not really here, because he was in my head, and in my head he was with me. It started off simply enough, with a thought of how he would move if I moved forward; he wouldn't back up again, I knew. That had been a reaction, a startled thing that I doubted I would ever see again. His eyes, dark and daring me to do something, say something, told me that he was not one to back down and then the thought came; I want to run up against those eyes. I want that stare burning up at me while he was restrained, my hands hovering just over his skin, begging me not to stop but too proud to cave. I wanted to make him cave to me. \n\nHis brows drew down, then, but I wanted them up, wanted them arched up in surprise, wanted everything about him arched up in a lot of things, wondered if it would be worth it to blindfold him to make that happen. I wanted to see his eyes as I touched him, as I turned him speechless and mindless and transcended and then I saw those lips and fuck, I wanted to see his lips stretched around a ball gag, hear the frustrated noises he would make. He would love that, I knew he would. Control and danger, that was his ticket, and in my mind I had it punched. I could create cliffs for him. I could make him fall forever and then be there to catch him. \n\nI stayed on his face for a moment, just watching his lips, imagining what other things I could get them to wrap around. How he would drool for me. More softly, what it would be to kiss him, gently, warmly, giving him safety and comfort. What trust would taste like on his tongue. \n\nI saw him swallow, and my eyes moved down to his neck. Control and danger, I thought again. I wonder how he would react to breath play. In that moment it almost seemed like he tilted his head back to let me see more, that his hair became less apparent and I noted that somewhere, filed that away but I wanted to see his hair, wanted to sink my hands into it, curl it around my fingers and make it a leash, watch it lie feathered and fanned against my pillowcase as this man came for me. I wanted to make this man come. I wanted to watch it on his face, on his body, wanted him spent and blissful and floating over my sheets. \n\nThe bartender put down the glass with a heavy clink, and I started. Shit. That hadn't been me understanding him, that had been. Mind porn. Inappropriate. I had no excuse for what I had just done. Sure, my eyes had never drifted below his neck, but the things I had thought in my head...\n\nI blinked and cleared my throat, hoping, somehow, that he hadn't noticed.\n\n***\n\nOh, shit, I thought, as his eyes traced every fucking inch of my body from the neck up. As his gaze watched movies that no one had made, that I wasn't sure I wanted to see. Oh, shit.\n\nI had nothing else for this moment. \n\nFuck, how could someone make me feel like this with just his fucking eyes? With nothing? I needed more; I needed him; I needed to find out if all the things he promised to do to me in that brief inspection, if the way his eyes had gone dark and his mouth had gone quiet and fuck, him sitting here in this place, so calm and collected. It was torture. \n\nI wanted him to collect me. I wanted him to do unspeakable things to my body, until the screaming in my stomach was just as calm as the expression on his face.\n\nDangerous, I thought again, and this time there was no irony in my thoughts, only the slightest shudder of appreciation. This man is dangerous.\n\n***\n\nI glanced up at his eyes and found them wide. His breathing was faster too - I'd missed that when I was so wrapped up inside my head. Shit, had I scared him? It wouldn't be the first time; I often came on strong, even when I didn't spend the first few minutes of meeting someone imagining them naked and tied up in my bed. \n\n\"Take me home.\"\n\n\"What?\" I was taken aback. I met this guys eyes and saw it again, that desperation, that need to fall. He'd seen a cliff, and he was running full tilt. Fuck, I thought. I really didn't want to be that for him. This was something I did not need in my life, not anymore. \"No.\"\n\nThe guy practically moaned when I told him that, and I shot him a look. I don't think he was told no very often. An image of me telling him no, making him wait, not letting him come until I wanted him to...\n\n\"Why not?\" he was saying, and I tried to rip myself from my mind back to the real version of this person that stood before me. \"You obviously want me.\"",
        "I couldn't deny that, but there was something else there. I thought about how to say what I was working on in my head, the things I was still trying to understand. \"I don't think you want me in the ways I want you,\" I decided on. And it was the truth. There was fantasy, and in my fantasies he was compliant and happy and willing to let me push him, willing to let me catch him, and then there was reality, and the reality was there was something in him that probably shouldn't be pushed, not when he loved standing so goddamn close to cliff edges. Something that would catch me up in his desperate search for things to smash into. He wasn't looking for the same things I was. And I couldn't be, wouldn't be, what he was looking for. \n\n\"Come on,\" he begged me. He arranged himself against the bar, knowing exactly how to be so that his limbs were perfect, gorgeous, but I could make him look better. With a little rope, and just the right plug... \"I'll let you tie me up.\"\n\nI took a breath. It was like the stupid man was inside my head. Which, of course, he was. \n\nTied. Naked. Glorious. \"No.\" \n\n\"Fuck.\" He looked like he was actually getting mad. \"We could do it in the bathrooms, if that's more your style.\"\n\nSeriously? I shot him another look and he threw up his hands. \n\n\"Why not?\"\n\nI looked at him, the frustration clear on his body. The need to fall. How close he was to shattering, how much he wanted to just explode on. Impact, I thought. After all, that's what he's looking for. \n\nI would not be that for him. \n\n\"No,\" I told him a third time, turning away from him with some difficulty, but I was really fucking tired of being made into a violent idea by other people. \"Go find someone else to break yourself on.\" \n\n***\n\nCH 2\n\n***\n\nSomeone else to break yourself on.\n\nFuck. What the fuck had just happened?\n\nI chugged my drink angrily, feeling the vodka slip into my stomach and burn, wanting to set fire to my soul. Burn that fucking man's words right out of me. \n\nSomeone else to break yourself on. \n\nHe wasn't supposed to be like that. He was supposed to be soft, and easy, and so when I'd turned and seen him looking at me with that level of hunger I had been totally unprepared. I knew what guys like that needed, how they operated. Should have seen it in the way he sat so calm in a room that fucking screamed to instigate all the shit inside of you. Controlled. \n\nFuck, I hated guys like that. Fuck, I needed someone like that tonight. \n\nI knew he could hurt me, could hurt me good. I saw it in his eyes, the things he wanted to do. And I wanted to let him, wanted nothing more than for him to just fucking go to town on me, use me however he could, but when I'd offered he'd said no. \n\nAnd then he'd said. \n\nI snarled, not letting myself think the words again. Fuck that guy. \n\nI didn't stop to think about what that might mean, to be broken. I was broken; of course I was broken. The whole world knew it. I knew it. He should have also fucking known it, looking at me, watching me. How could he have stared at me for so long and not gotten that? I think that's what pissed me off about that guy so much; he'd had the audacity to imply that I was something worth preserving. Couldn't he see that I was already completely fucking cracked?\n\nI reached into my pocket and pulled out my metal pill case, unscrewing the lid without bothering to check if anyone was around. They didn't give a shit about that here. Besides, I'd blown all the bouncers already and I'd do it again if it meant getting to keep my pills, my fun, my escape. I dumped a few in my hand rolled them around, trying to decide what I wanted, but I ended up thinking fuck it and tossing back the whole mix. Whatever happened, happened. \n\nSee, you dick? I thought. I could break myself just as fucking well. I don't need you. \n\nI chugged the last of my drink and thought about slamming it on the ground, but I hadn't found a single fuck here and didn't want to get thrown out yet. \"Fuck,\" I shouted instead, and the curse lifted just enough of the pressure inside me to allow me to put the empty glass on some side table and throw myself onto the dance floor. \n\n****\n\nI blinked at the man dancing wildly, his hair moving not to the music but to some other tempo, however it damn well pleased, his body following much more coordinated movements. He looked frenzied, frantic, and sexy as hell.\n\n\"Is he always like this?\" I found myself asking the bartender as he brought me another beer. He followed my gaze and found the man, now partnered up with some beefy muscle head, his ass grinding against the man's cock and his head thrown back. \n\nThe bartender shrugged. \"Yeah. That's just how John is, you know?\"\n\n\"John?\" He didn't look like a John. \"That's his name?\"\n\nHe laughed. \"No, no. He doesn't tell anyone his name. Or maybe he has, at some point, but it got lost in all the other shit he's told.\" He looked at me, one eyebrow raised. \"Told me his name was Theodore Xavier Roosevelt, but I could call him baby.\"\n\nI had to laugh. \"So why John?\"\n\n\"John Doe. Plus, gets as much use as the public johns, y'know?\" He winked, gesturing towards the bathrooms. I didn't respond, just watched him push away so he could grind against another guy. This one was closer to his size, and they entwined carelessly, drunkenly, sensually. \"Although some of the guys call him Rocky.\" \n\nI turned to him to ask what that meant, but he just sighed and said, \"Oh, damnit. Fucking John.\" \n\nThe noise on the floor was sudden, and violent. Someone screamed and someone else cursed, and I was off my barstool and headed into the fray before I could really decide if that was what I should do.\n\nBren was in there somewhere, that's what I was thinking at the time. Bren was in there, and this whole fucking place had turned into a free for all. I shouldn't have worried - I found Bren wrapped up in some bear's arms, his leather jacket draped over my small friend's shoulders. I raised an eyebrow but didn't say anything. Bren stuck out his tongue and kept pretending to be scared, when I knew he could take down any of these idiots with an ease that would truly frighten them. It frightened me, and we were friends. \n\n\"You good?\" I still asked, and Bren just rolled his eyes. Of course he was good. The bear wrapped his arms around my friend tighter and I raised my hands, trying not to smile. Bren loved that protective shit. He was going to have fun tonight. \n\nThat's when I turned and saw that fucking man. \n\nHe slammed into a much larger guy, his face twisted up with something I didn't feel like unpacking right then. When the guy raised his fist the man they called John all but ran into it, laughing, his eyes wide and something like release written on his body. It was there only for a moment before he was bunched up again, ready to throw himself back at whoever he thought could hurt him.\n\nI knew I couldn't help him; you can't help someone who doesn't want it, and he didn't want help. He wanted the opposite of help. I had the feeling that he wanted to be drug down into oblivion, torn to pieces, become nothing in flame and violent explosions. \n\nBut then again, who knows? I'd barely even met the guy. But I was good at people, and I hated that sometimes, because it meant that even tiny glimpses could get into my head and amplify until I knew more about people than they did, sometimes. And that wasn't a great way to live. People should have to tell you their secrets; you shouldn't tell them theirs. You don't make a lot of friends that way. \n\nYou also don't always make the best choices. \n\nWhich is probably why, in that moment, I found myself leaving Bren and wading through the violence towards the dark haired man, knowing innately that if I didn't stop him he was going to keep fighting until he was so broken he didn't recognize himself anymore, and he would think that was a good thing. \n\nFuck, I thought, dodging a fist. I hate this bar. \n\n***\n\nWhat a fight. What a fucking fight. I slammed into another body and felt the impact push a laugh from my lungs, felt a bruise already beginning to grow under my ribs, on my chin.\n\nSomeone grabbed me from behind and I flailed, my fist connected with something fleshy and soft and then something crunched and they let me go and I was off again, flying, fighting, fantastic and farcical, and there wasn't a damn thing in the world that could bring me down.\n\n\"You fucking cunt,\" I heard, and then some dick head grabbed me by the wrist and started pulling, but I kicked and I heard him curse and then I was moving, flung faster than my body should have moved, and I laughed and laughed and laughed.\n\nWhat a fucking fight. \n\n*** \n\nI didn't have a lot of time to consider my actions as I made my way through the crowd. Some big guy immediately picked me out as a good way to show his dominance or prowess or some other shit and took a swing at me. I blocked it and sent two quick jabs at his face, sending him reeling away with a bleeding nose. The next guy who came at me actually had his hands up like he wanted to box, but he didn't know what he was doing and an overhand sent him down. \n\nAfter that, most guys let me pass. \"Goddamn brawl in a gay bar,\" I muttered to myself as I shoved away a kid wearing nothing but a mesh top. What the fuck was I doing with my life?\n\nThen, suddenly, another body was pushed into mine, causing me to stumble from the weight. I grabbed onto the body without thinking, twisting the arm so no punch could be thrown even as I turned him and pressed his back against me, knowing that distance is what makes most attacks have power. \n\n\"Fuck,\" the body said, and I recognized that voice. Recognized the black hair that was getting into my mouth, too. \n\nWell, I thought, at least I found him. Now what?\n\nA guy, I guess the one that had pushed John into me in the first place, detached from the seething mass around us and made his way forward. I guess John had pissed him off, or maybe he just thought it was important to finish what you started. Either way he had that look on his face that said, \"I want to punch the man you're holding,\" and the clenched fists to back it up. \n\nI spun us quickly and deflected the hit with a raised elbow, surprising him, then surprised him further when my hips snapped open and my knee met him in his exposed and vulnerable stomach. \n\nHe dropped, and I moved us away from him before he could figure out what had happened. \"Fuck,\" John, or Rocky, or Theodore Xavier Roosevelt said in my arms again, and I ignored him and headed toward the bar. \n\n\"How much do I owe you?\" \n\nThe bartender was watching me with a slightly amused expression. \"You got him. Usually people can't get within three feet of him when he's like that.\"\n\nI looked down at the man in my arms. He didn't have much of a choice about where he was in proximity to me right now. I tried not to think about that, and how it might look, or feel. This was a professional thing, I thought, unconvincing even to myself. This was just to calm him down. \"Someone threw him at me.\"\n\n\"That's a first. Usually he's throwing himself.\" He shook his head, looking at the man I held tightly. I could feel him tensing at the stare and tightened my grip in preparation of him trying to escape, but he didn't make a move. \"Fucking John,\" the bartender said again. \n\nI spared a glance back at the roiling mass behind us. \"You need any help with that?\"\n\nHe shrugged. \"They'll calm down soon enough. Besides, it looks like you have your hands full.\" It was true - I didn't know what I would do with this guy if -\n\nThere was a sudden noise behind me and I turned to find that one of the bigger men had picked up a chair and was moving towards the bear that Bren had picked. \"Shit,\" I said out loud, and the bartender looked up just in time for Bren to dart out and drop the guy loudly, angrily, and with extreme prejudice. \n\n\"Whoah,\" the bartender stated, and I sighed, knowing full well that, now that Bren was fighting, shit was only going to get worse. \n\n\"I'll take care of it.\" I set the man. John. Theodore. Fuck, I had to decide what to call him. I set him up on a stool and propped him against the bar. When had he gone so limp?\n\n\"Yo,\" I said, but he didn't respond. I frowned, tapping at his face. \"Look at me.\"\n\nHis eyes met mine and I almost hissed. His pupils were massive, taking over his eyes and practically fighting to get at the whites. The fuck had this guy been doing? I touched my hand to his neck to find his pulse and he moaned, pressing into my touch. His skin was hot and clammy, his heartrate incredibly fast. \n\nX, I thought. It's gotta be X, with the way he was reacting to touch and. Shit. Fuck him, fuck all the shit he does to make it worse. I was surprised at how angry it made to see him like this; I'd just met him, and ostensibly barely knew him.\n\nBut I knew better than that. \n\n\"You're gonna leave him here?\" asked the bartender, sounding a little disappointed. \n\n\"He'll stay.\" It was more of a hope than anything else. I spotted a half empty glass near me and pulled it closer, fishing for ice in the fruity mix. Whoever's drink it was, they'd probably split anyway. I drug the ice over his skin, watching him react, his eyes fluttering closed and his body practically shuddering apart beneath my hands and I reminded myself again that this was professional, this was just to keep him cool. But even still, my hand shook as I watched him moan. \n\nIt wasn't really fair, with him in that state. But he needed to be cool. And I needed him to stay. I had an idea of how to do that - but maybe it wasn't the best idea, and maybe he wouldn't go for it but I thought he might, with the way he was reacting to me right then. The way he had reacted to my eyes earlier. But then again, having him submit like that, while he was high? It didn't quite seem right. \n\nI don't know why I cared. Maybe I didn't. In that moment, I'm pretty sure I just wanted to watch him open his mouth and take something I gave him. \n\nThis is a bad idea, I had time to think before I pressed the ice cube to his lips. \n\nHis eyes flew open in surprise, as did his mouth, and I slowly slid the ice in. \"Take it,\" I whispered, and I felt those shudders in his body again and remind myself very, very hard that this was all just a ploy to keep him here. To make him stay. \"All of it.\" His tongue came out and guided the ice into his warm mouth, and have to admit my body shuddered a bit, that my eyes flared to see it, that I had a thousand different things that I wanted to be doing to him right then. \n\nI closed his mouth, watching him fight against the sensations he was suddenly experiencing. If he was on X, this would feel brutal. Way too cold. Fuck, this was a terrible idea. \"Don't chew it. Let it melt,\" I heard myself say, and noticed with a bit of frustration at myself that I'd lowered my voice into the tone I used when I was domming, when I was playing with someone who reacted to that sort of thing. He didn't need this. This wasn't a fucking game. But he was moaning around the cube and I couldn't stop now. I leaned in closer, feeling his body heat against me, letting myself slip a hand into those gorgeous black locks. He tilted his neck like he was inviting me to touch him there, but I wasn't here for that. Not right now. \n\nI pressed my lips to his ear and he jerked, surprised. \"Don't you move until that ice cube is gone,\" I commanded him, and I felt the electricity that surged through his body as the cold in his mouth mixed with the cold of my words, felt it crash into the heat that racked his body, all of it amped up by whatever drug he'd taken. \n\nNow that I was so close to him, it was really hard to move. Shit, but the man smelled good. I found myself tracing his hairline, soft and gentle, and felt him press into my touch. I wondered what it would feel like to kiss his mouth, so cold with the ice. I wondered what it would feel like to have that mouth around my cock. \n\nThere was a large crash behind me, and I spun to see that Bren, now, was holding up a chair. \"You fucking fuck,\" he was shouting, and I knew that we really, really needed to get out of there before Bren caused serious damage. Groaning, I pulled my hand from the man's hair and threw myself back into the fray. \n\n***\n\nI don't know what happened. The lights had gotten to that place where they're soft but also swirly, and skin felt so fucking good against mine, and all I wanted to do was dance dance dance, and that had been amazing and that had been good but then. \n\nBut then. What? Some punk had pushed me, I think, and then I'd pushed him because, duh, I'm dancing here, only maybe I pushed too hard? Fuck. Fights break out. That's just the way life works sometimes. And if I happen to get punched up during it? \n\nGod, that fight had been a godsend. A thousand things in my body had been screaming, a million voices in my head, maybe, and the best way to shut all that shit up is to just fucking hit something, to get someone to hit you. And so the fight had been good, the fight had been perfect. You can't think when you're fighting. But now I wasn't fighting, or at least it didn't feel like I was. After all, I was thinking. And I was definitely not dancing. And I had an ice cube in my mouth that was threatening to turn my body into a refrigerator, into the arctic, into a goddamn polar ice cap. \n\nThe cold in my mouth was kind of helping me to focus, actually, a delicious kind of pain that wasn't quite pain enough, but almost got me there. Fuck, I thought, pushing my tongue against the smooth cube. It was never ending, it wasn't going away. I didn't like this kind of pain - I liked fast and hard, not long and just a little and fuck, it was so cold I thought I was going to die. I pressed it against my lips and got ready to spit, got ready to get this shit out of my mouth, but. I didn't want to spit it out. No, more than that, I couldn't. My body wouldn't let me, not after the words I'd heard, the way I'd been touched. Not after I'd been commanded not to. \n\nFuck, I thought, a little confused but whatever, life goes on and I pulled the cube back into my mouth and pocketed it in one cheek. \n\nThe room was hazy, and warm, and cold, and something was biting at my gut but something was always there anyway, so I guess mostly I felt... okay. It was strange, to feel okay. I almost never felt okay. I guessed that I had gotten most of whatever I needed out in that fight, and really, I had. I leaned back on the counter and smiled, sucking gently on the cube of freezing against my skin. It had been a good fight. A good fight, and then...\n\nAnd then he'd grabbed me. And held me. And hadn't let me go back in. \n\nI didn't really want to go back in. Right about the time that I'd been thrown into him - or had he just grabbed me? - I couldn't really remember, things had been so shifty - and that's when, that was when this warmness had started and I had started worrying that I'd overdone the K and not mixed in enough E and maybe had missed the whites altogether, did I even have any of those left? I needed to get more of those - shit, what had I been thinking about? \n\nI blinked, switching the ice cube to the other side of my mouth. The sudden blast of new cold against a part of me that wasn't numb almost made me gasp, but I wanted my mouth closed. I didn't want any of the cold to escape, wouldn't let anyone else have it. This was all mine. \n\nThis, I thought. But what the fuck was this? Melting, I thought. This was melting. One moment we had been in the middle, and he had been moving around me, I had felt his body shifting and the suddenness of him, the power, the way he'd held me like my weight was easy and I'd just melted for him. Which was stupid, and I shouldn't have done it, but it just felt so good to have his warmth pressed up against my back.",
        "Hm, I thought, feeling my tongue grow numb as it explored the little bit of ice that was left. Melting. I wasn't so sure that I wanted to melt. I think I wanted something a bit more dramatic than that. \n\nI shifted the cube to my teeth and bit down, feeling it crumble under the strength of my jaws. Me too, little cube. Me too. \n\nI sat there for a moment more before I remembered that I didn't have to be there anymore. I could feel Chad hovering behind me, so I made a little wave for his benefit. \n\n\"Alright.\" I slipped down off the stool and had to grab the bar to steady myself - shit, when had the world gone and got so goddamn wobbly. Rude. \"I'm outie.\"\n\nChad didn't make a comment at that, but I could feel him watching me as I made my way to the door, stumbling through the shifts the world wouldn't stop throwing at me. Fuckin ungrateful. \n\nBut, on the bright side, I managed to make it outside before I threw up. \n\n***\n\nCH 3\n\n***\n\nMe and Bren took down everyone who was willing to be taken down, which turned into very few people once the brawlers realized they were up against two professionals, one of whom just wanted to end this as quickly as possible, and the other of whom was fucking nuts. We saved a few chairs in the process, too, which might have won us back the points Bren lost when a particularly persistent idiot called Bren a \"sissy bitch\" and Bren had smashed a chair over his back while screaming, \"Sissy this, bitch!\"\n\nShockingly, Bren's bear still wanted to go home with him after all that. I shrugged when Bren told me I could take his car. I had the keys anyway - Bren knew I wasn't going to drink enough to put me over the legal limit. \n\nI think the disappointment showed on my face when I got back to the bar and found it deserted, because the bartender immediately shook his head. \"He was never going to stay, mate.\"\n\nI didn't have anything to say to that. I'd known it, Theodore Xavier John Baby Roosevelt had known it, the bartender had known it from the moment he'd walked in the door. But I'd still had to try. \n\n\"He finished the ice cube, though.\"\n\n\"Really?\" I was genuinely surprised, and totally forgot to be embarrassed that this man had overheard my instructions. \n\n\"Don't know if he chewed it or swallowed it or what, but when he left.\" He shrugged. \"Nothin' to keep him from talking.\"\n\nSomething told me there wasn't much that could. I thought about that, then sighed. There was nothing to do about it now. \"How much do I owe you?\" I meant for the drinks, for the damage, for putting up with Bren in rampage mode, but the guy just laughed. \n\n\"Please. It's on the house. You cleared out that mess in record time.\" I wasn't sure if he was talking about John or the brawl, and decided not to ask. Then he looked at me, eyes twinkling. \"You don't want a job, do you?\"\n\n\"I hate this place,\" I said truthfully, and he laughed. \n\nThe cold air felt good on my face after the surprising exertion I'd made my body go through. It was only August but already crisp at night, and I loved that. I took a second to just exist, trying to get that stupid guy out of my head. He was gone, and that was that. Why did it matter that he'd finished the ice cube? Why did it matter that I'd wanted him to stay longer, that I hadn't been fast enough? What was it to me if he'd smelled so good I'd wanted to just keep him with me all the time, to just be around, one hand in those stupid fucking dark curls? \n\nFuck, whatever. He was high as shit anyway. It's not like he knew what he was doing. And it's not like I needed that shit in my life anyway. I took a deep breath and headed in the direction of Bren's car. \n\n\"Oh, fuck,\" I heard a voice say behind me and I froze.\n\nDon't you do it, I told myself. Don't you dare. He is quickly becoming dangerous for you - you'll fall, and you'll like it, but it can't last forever. You fucking know this. \n\nI heard the jingle of keys and passed my hand over my eyes. Shit, was he trying to drive? \n\n\"Fucking world,\" he said, and he sounded so angry, so annoyed, so completely him that I found myself turning without thinking. \n\nI found him propped up against a green Golf, keys in hand but nowhere near the keyhole. \"So,\" I said quietly, and he froze. Then he dropped the keys with a sigh. \n\n\"Fuck,\" he stated, turning around. He didn't sound surprised, or shocked, or even angry. Honestly, if I had to put an emotion to it, he just sounded resigned. He took me in, really gave me a hard look, or at least it would have been hard if his edges hadn't seemed so blurred. \"Don't make me melt again.\"\n\nI frowned. \"You shouldn't be driving.\"\n\n\"I'm not.\" He looked down at the keys on the ground and made a face. \"I'm fine.\"\n\n\"You're high as shit.\" It was true, but I wasn't really sure where to go from there. I mean, what was I going to do, call the police? I came closer as I thought about it, watched him watch me with some sort of trepidation and anticipation and, man, this guy was far gone. \n\n\"The fuck are you going to do about it,\" he slurred, echoing my thoughts. I sighed and bent down to retrieve his keys and found that he followed me down, sliding down the car to sit on the cool pavement. I stayed at his level, holding his keys, chewing over my options.\n\n\"You made everything so fucking melty,\" he accused. \n\n\"Pretty sure that's the drugs.\"\n\nHe shook his head. \"You. And your fingers. And your ice cube. And then the world. It wasn't very nice.\"\n\n\"No,\" I agreed, my voice quiet in the face of the guilt he was stirring up in my stomach. I should have known it would all be too much for him. I should have never touched him like that, not when he was like this. \"It wasn't.\" \n\nHe shifted, his eyes dropping closed for just a second before they burst open with a gasp. \"Shit,\" he muttered. I gave him a hard look. He had been messed up in the bar, yeah, but this was some serious shit. Jesus. X wouldn't do this. \n\n\"What did you take?\" I asked, but he just laughed and responded with, \"What didn't I take?\" \n\nI didn't find that very encouraging. \"Okay, what didn't you take?\"\n\nHe thought about that for a moment. \"Donno. I thought.\" Those eyes were closing again, and I was starting to get worried, actually worried about him. Was he overdosing, right in front of my eyes? Fuck, it'd been awhile since I'd had to worry about that. It didn't feel good in all the same places, places I'd hoped to leave behind. \n\n\"Yo,\" I said, snapping my fingers to bring him back. \"Stay with me here.\"\n\n\"Yeah, uh.\" He looked around us. \"Everything is just so melty.\" He tried to run his hand through his hair but it got stuck, and I had a momentary moral quandary of if I should be reaching out to help him or if he would be better without my touch, but in the end he managed to get it untangled. \"I think I just took too much K.\"\n\n\"Special K?\" Great, I thought. Horse tranqs. Fucking great. \n\n\"Takes the edge off the whites.\"\n\n\"Whites,\" I repeated blandly. What the fuck are whites? I thought. I don't remember anyone talking about whites when I was part of the scene. A bit of anxiety was building in me. \"Did you take X?\"\n\nHe rolled his eyes at me. \"I'm always on X. I live on X. I am E-X-tra, triple X rated, baby.\" He seemed to look past my shoulder for a moment before focusing in on me. \"But I don't think I mixed them right today.\"\n\n\"Mixed what?\" \n\n\"The.\" He waved a hand. \"Any of them.\" \n\n\"Do you think you might have had too much?\" I asked, trying to be gentle but genuinely worried. Horse tranqs, ecstasy, some other mystery shit, this kid didn't even seem to know what he'd taken. \n\nBut he was shaking his head. \"No, just.\" Then he pointed at me. \"And it's your fault I went melty instead of stayed punchy.\" \n\nI had noticed that he'd been much more - melty - when I put him on the barstool than I remembered seeing him just moments ago in the fight. But, when he'd been thrown into me he'd felt like a ragdoll. I shook my head and decided it didn't matter. \n\n\"Do you want to go to the hospital?\" He flipped me off. I sighed. \"Do you want to go home?\"\n\nHe thought about that for a moment before nodding. \n\n\"Alright.\" I stood, trying to check his key ring for any clues. \"Where do you live?\"\n\n\"Your dick.\"\n\n\"Helpful.\" I didn't find any clues - it didn't even look like he had house keys, just the fob for his car, the car keys, and then a small key that looked like. Maybe a safety deposit box? \n\n\"No,\" he said, and I looked down to find his eyes so full of something that I nearly took a step back. Oh, I thought, remembering the way he'd stepped away from me in the club. Something where you expect nothing. That'll do it. \"Give me your dick.\" His hands began questing towards me, but I fended him off easily enough. He was making these noises, half frustration and half just too turned on from the X and whatever goddamn else he'd put in his system. I scrubbed at my face. \n\n\"Shit,\" I muttered. I needed to search his pockets, maybe find an ID to tell me where he lived. It just seemed like a really, really bad idea to touch him like that right then. Plus, I hadn't seen any pockets. There certainly weren't any on those pants, so tight I could see every muscle in his leg, every definition in his pocketless thighs. Plus how likely was it that his ID was updated with his current address? Mine wasn't. And if the bartender didn't even know his name...\n\nHe reached for me again and I captured his wrists, causing him to freeze instantly. I looked down at him, surprised, and saw a mix of fear and complete sexual desire on his face. \n\nFuck, I thought, as my body reacted to that, my hands tightening on his wrists. Fuck, fuck, fuck. \n\n\"Don't make me melt again,\" he whispered. \n\n\"I won't,\" I told him, although I honestly wasn't sure that was true anymore. God, he was so fucking tempting. And so fucking high, and drunk, and just. Fuck. \n\n\"Take me home with you,\" he continued, and I thought about that for a second. I mean, what else was I going to do with him? \n\nWait. Shit. What was I thinking? But it was too late, because I'd let myself think it, and he couldn't stay here like this and I didn't know where else to take him. \n\n\"Yeah,\" I finally said, more a symbol of resignation to myself than in response to his entreaty. He moaned at the word all the same, and I had to close my eyes tight against the idea of making him make that noise for real, for me. Sober, I reminded myself. Sober. \"Let's get you up.\"\n\n***\n\nFuck it, I thought as this guy, this melty man whose fingers turned me into putty and who had somehow made the world go so soft, as he touched me again. Fuck it, because I was going home with him even if it killed me. I kind of hoped it did - what a way to go, melting everything right off your bones and dribbling into storm drains and then you got to be - oops. \n\nI'd tripped and fallen, or I would have if this man wasn't holding my arm. I liked him holding me. I liked him. I smiled, because I was going home with him, because I was going home with someone, and settled my weight against his.\n\n*** \n\nI managed to get us most of the way home before what's his dick started getting antsy. His hand made it to my leg, skimming up and down the outside of my thigh, and I gritted my teeth and kept driving. Then it was on top of my leg, moving further and further up my thigh, in between my legs. It was fucking distracting. \n\nAt the next red light I put the car in park and turned to him, angry, and found his other hand skittering over his own skin, his eyes hooded with pleasure. I wanted to hate him in that moment, wanted to be mad at his actions, but he was on X and who knew what else and he didn't know what he was doing. Also, a bit of my brain mentioned, watching his fingers trace over his collarbone, he looked fucking hot. \n\nShut up, brain, I told myself, and pushed his hand away. \"Stop it.\"\n\nHe just moaned and reached out again, his own hand dropping towards his lap.\n\nShit, I thought. I don't have time for this. Horny jittery drug user was no good to me. I need him to go back to melty drug user, now. Instantaneously I understood how to make that happen, could feel the plan sitting in my chest but god was it a bad one, but his hand was back on my leg and I needed this not to happen here, not to happen at all, so I reached over, grabbed his chin, and kissed him.\n\nI didn't kiss him like I wanted to, with all the things he was making me feel and all the things I wanted to do to him dripping from my lips into his. I thought - no, I knew - that if I had done that, he would have right about died. Way too much for him to handle, and then there was me, because if I expressed any of that out loud even in actions I did not know, did not think I could be responsible for what would happen next. So instead I kissed him soft, and gentle. Not chaste, or innocent; I hate those words, and they don't apply to me anyway, so instead I kissed him with the knowledge and trust that I wasn't going to go farther than a kiss, that all I wanted from him was this, that this was the end of it and that was enough for me. \n\nIt was the truth, at least for that night, and I wanted him to know it. \n\nI think my action surprised him. He was frozen for a moment, and then I felt it. Felt him melt against me. It took a second, and then he kissed me back, his lips opening before mine and his breath shuddering as I scraped my teeth against them, gently traced his mouth with my tongue. I pressed all the truths and trust and knowledge I wanted into his mouth and then I let it sit, tried to let it dissolve, before I pulled back and rested my forehead against his. \n\nThe light was turning yellow - we must have kissed through it being green. That was fine. He needed time to process this. I needed time to process this. \"Okay?\" I asked quietly.\n\nHe nodded. When I let his head go he all but sunk into the seat, a dazed expression on his face. His dark hair clung to his face and slipped down his shoulders; his tight clothes were in disarray. He looked a mess. \n\nFuck, I thought. Shit. Too much for him. But at least he wasn't distracting me anymore. \n\nThe light turned green and I jumped, then put the car back in drive and started towards home.\n\n***\n\nMelted. \n\nAnd the kiss. It wasn't a kiss, it had been a promise, or a conversation. Or maybe an entire world inside his mouth, a universe and I'd just gotten the smallest glimpse. Warm and soft and everything, when had a kiss become everything? Kisses were boring, kisses were nothing, kisses were something people did to pass the time but that, him, time had ended, when had time started again? I didn't think it had. I didn't think time would ever start back up, not after that. I thought I might be dead. Who knew that a kiss could be like that? I had always thought, had always felt. No one had ever told me, and his lips, and the way he had tasted.\n\nShit, I thought as I closed my eyes, leaning against the cool seat. I must be really fucking high. \n\n***\n\nHe'd passed out sometime on the way back. I'd carried him the the stairs, a little surprised at how light he was, a little worried at how unresponsive, a lot worried about what the neighbors would think about me carrying a scantily clad man into my apartment. But I shouldn't have been - Mrs. Kovacs from down the hall took one look at my face and sighed, helping me to open the door. \n\nAs she turned away, she patted my arm. \"You make a good friend, Mr. Cooper,\" she told me in her lilting accent. \n\nI smiled at her, feeling uncomfortable at all the thoughts that had swirled in my head about this man I had over my shoulder. \"Thanks, Mrs. Kovacs.\"\n\n\"Have a good sleep, now.\"\n\n\"You as well.\" \n\nAs soon as the door was closed I slung my burden down on the couch. He mumbled and turned over, seeming cross or at least semi-aware of what was going on. I checked his pulse, but it didn't seem too slow, and his breathing was at a normal rate for what he was probably on. So. Not dying then. I sighed and leaned back and tried to figure out what the hell I was going to do with him. \n\nThe first thing I did was text Bren. \"man sleeping on couch. high as shit.\"\n\nThen I realized what I sent and sent another text - \"him, not me\"\n\nThat would have to do until Bren got home and I could explain the whole situation. Then I filled a glass of water and put it on the table next to him. There was an extra blanket in the closet, and I grabbed it out. While I was grabbing it my eye caught on our mop bucket and I grabbed that too, putting it beside his head. \n\nI stood there for a moment, watching him sleep. He looked so peaceful. Nothing like the guy I'd seen voluntarily run into another man's fist. Or stare at me with a hunger that wasn't for me, but the kind of damage I could bring to his soul. Or dance with a kind of violence I didn't want in my life anymore. \n\n\"Jesus fucking christ,\" I finally said out loud, and turned and headed to bed. \n\n***\n\nCH 4\n\n***\n\nI woke up with a start, gasping for air out of the dream I'd been in but keeping my body completely still. I learned a long time ago how to wake up panicked and not panic the person you're with - punching the guy who brought you home is a one way ticket out the door. I let my body calm down, feeling the familiar drain that E puts on my system. The emptiness after being everything. I loved it, loved this feeling. Especially when it was coupled with being completely banged out. \n\nI let myself enjoy the sensation for another moment before deciding to face the morning. I stretched, wondering if whoever had brought me home last night was watching, and opened my eyes slowly.\n\nI was alone.\n\nMore than alone, I was clothed. And on a couch. And did I fucking mention clothed? \n\nWhat the shit had happened last night? \n\nI sat up, groaning, and pressed a hand to my head. I remember I had been dancing and then. And there had been a fight, okay, that's why I had the bruise on my shoulder, and why my ribs felt like fire, and probably why my jaw hurt so bad, but then. \n\n\"You're up.\"\n\nI turned around and saw that stupid, fucking man. Not fucking, apparently, not with the way I'd woken up, but stupid, so fucking stupid. He was leaning in the doorway of what must have been his bedroom, green eyes soft from sleep and wearing nothing but his boxers. I watched him yawn, saw muscles and scars and the quiet way he grinned through his body forcing his mouth open as he hid those lips, fuck, I remembered those lips, they had been so soft and kind and they had held so much more than I'd wanted them to and I hated him, hated him so much for not touching me, hated him so much for making me want him to. \n\nAnd yet, here I was, clothed. I had thought he had wanted me. I had fucking seen it all over his goddamn face. \n\nHad I been wrong? Why did that thought make me feel so. So. \n\n\"Fuck,\" I groaned, and leaned over to throw up in a strategically placed bucket. \n\nHe didn't say anything. I heard water running somewhere, and then heard him coming closer. Don't you dare, I wanted to scream. Not now. Now when I'm so fucking empty. If you touch me now the only thing inside of me will be you and I can't, I won't. \n\nBut he didn't touch me, just placed the a glass of water down next to the bucket in my vision. I didn't look up but I could tell he was still there, but I couldn't tell what he wanted.\n\n\"Your jaw,\" he said quietly, and I raised my hand to it and winced. There must be a bruise there with how it felt, the way even the smallest touch made my skin pulse with pain. Just in time I caught sight of his hand reaching out to do the same and I ducked away, unwilling to let this stranger press on a bruise that was fucking sensitive as hell, unwilling to have his touch like that after he'd kept it from me in all the ways I'd wanted.\n\nHis hand froze. \"I'm sorry,\" he started, and I immediately turned away, rolling my eyes. I didn't need his pity, and I didn't need his guilt. I'd needed him to fuck me, and for some goddamn reason he couldn't be bothered to do that. I never learned what he was sorry for, though, because just then the door slammed open.",
        "Both of our heads snapped up to the small man standing in the entranceway. He took in the man crouched before me, nearly naked, and then his eyes turned to little old me, bruised up, still under blankets and again. Let me remind you. Still fully clothed. \n\n\"What the shit, Coop,\" the guy in the doorway said. Coop, I thought, glancing at the man crouched near my puke. No. Doesn't fit him. Not gonna call him that. \"You brought home a junkie?\"\n\nHuh, I thought. That was a quick assessment. And very judgmental. I glanced over at the man before me and wondered if that's what he'd told him. \n\nHe sighed and leaned back. \"He's not a junkie.\" A knot released in my chest; who told that it was okay to be there? Why the fuck did I care what he thought of me? \n\n\"Do you even know his name?\" the guy in the doorway snapped. \n\nThe man and I looked at each other. \n\n\"Fuck,\" doorway man said, and slammed the door closed behind him. \n\n\"Slammy sam,\" I muttered, and I thought I saw the man close to me smile. But I wasn't in the mood for that; I was empty, and this was impossible to be around. I pushed myself up to standing, feeling the world sway around me. \n\n\"Jesus, look at him,\" the doorway man was continuing. I wondered just for a moment if he was referring to my clubbing clothes, which, if he was, fuck him, or the fact that I was struggling to stand. Which then. You know. Kinda fair. \n\n\"You alright?\" \n\nI rolled my eyes at the question and started to move before I realized I had no idea where I was going. \"Bathroom?\" I asked, doing my best to sound in control.\n\nHe pointed, and I tried not to look at the way that made his muscles super, awesomely defined as I moved past him in the direction he pointed.\n\n***\n\n\"What,\" Bren repeated, \"the shit.\"\n\nI sighed. \"I didn't know what else to do with him, Bren.\"\n\n\"Leave him? Let him go home with someone else?\"\n\n\"He was really fucked up,\" I told him quietly, the memories of last night pressing up against my skin.\n\n\"That isn't your responsibility. This isn't your problem. Shit.\" Bren passed a hand over his face. \"You okay?\"\n\nI nodded.\n\n\"He didn't try to give you anything?\"\n\nI shook my head. \"I wouldn't have taken it, you know that.\"\n\n\"Yeah, no, I just.\" Bren shook his head as we watched the bathroom door open. \"I worry about you.\"\n\nI smiled up at him. It was good to have someone looking out for me. I didn't have that for a long time, which might have been how I got to where I was. \"I know, Bren. But he's alright.\" \n\nBut Bren's face was clouding over. \"Fuck, no he isn't. Coop, he just took something.\"\n\nI snapped my gaze back up to the man just in time to watch him coming out of the bathroom, tossing his hand up to his mouth. I caught the hitch in his throat as he swallowed, a look passing over his face that I recognized a little too well. Bliss, anticipation, relief, all rolled into an instant that you can't mask, that you don't even know you're showing. Oh, fuck, I thought, and headed over to him. \n\n***\n\nI saw the guy coming but didn't really care. I'd be up soon, but at the moment I was low, low and empty and bleeding into nothingness after all the things I'd been last night. But I had the ups in my belly and nothing else, so it wouldn't be long until - \n\nHe had me pinned up against the wall before I knew what was happening. Both of my wrists fit in one of his hands - I knew that already, but to feel it like this, when I was empty like this, it was different and I didn't love it. He pulled my arms up and over my head, and I turned my gaze away, unwilling to meet his eyes. His body pressed close to mine, his knee sliding between mine. \"Coop,\" I think I heard the roommate say, but he wasn't listening to him. He was looking at me. Looking with that same look, that same danger that he'd worn all over his smile the night before. \n\nI wasn't sure I was as game for it as I'd been back then. But give it 20 minutes, and I'd be on the up, and then. Well. Then I'd be game for anything. \n\nHe was looking me over with an intensity that was making me squirm. \"I've got ten minutes while you're still sober,\" he said quietly, and for some reason those words made me very nervous, I think, because my stomach started doing flips.\n\n\"Coop.\" The roommate was right there, sounding more annoyed than anything else. \"He's never going to be sober. I told you. Fucking junkie.\"\n\nI turned to make a face at him but the man up close to me grabbed my chin hard. \"What did you take.\" His voice had dropped low, and smooth, and I felt bits of me melting - shit, why was I always melting for him? - even as other parts of me spiked at the question. \n\nI knew I shouldn't push him. I could feel it in the way he held me, in the cold that he was - cold, I suddenly remembered. That goddamn ice cube. Fuck him and his cold, and his controlling me. \"Aspirin,\" I quipped.\n\nThe hand on my chin tightened for a moment, then let go. Immediately his lips were there, tickling my skin, his tongue darting out for tastes. He worked his way down my chin, making me moan and sending my breath from my body in little gasps, until he was just above my neck. \n\nFuck, I love it when people touch my neck. I tilted my head back and waited. \n\n\"What did you take,\" he whispered into my skin. I shuddered and his teeth scraped lightly against me. \"Tell me, or I'll stop.\"\n\nI didn't want him to stop. I needed him not to stop. \"Whites,\" I heard myself say. \n\n\"And those are?\" His tongue was flicking against the bottom of my chin. I thought I was going to fly apart - I could feel the ups beginning to spread through my system, the tingling in my arms, the way my body was beginning to want to bounce. \n\n\"Uppers,\" I told him, not caring anymore if he knew. I needed this. I needed him. \n\n\"Uppers,\" he repeated, and it was in a completely different tone than he'd been in. \"Speed?\"\n\nI nodded, trying to get him back to me, my body starting to shake. \n\n\"Jesus,\" I heard the roommate mutter, but those green eyes never left mine. I was trapped in them, desperate for them, for him, his lips and teeth and hands and anything he would give me. \n\n\"How many did you take?\"\n\n\"Baby,\" I moaned, arching up and offering my neck. \"Baby, let's just have a good time.\"\n\nHis hand pushed me back into the wall, not hard enough to hurt, but hard enough to pull me out of whatever head space he'd been pushing me towards earlier. Shit, I thought. What the fuck had that been? \"How many?\" he repeated. He sounded angry, or annoyed. \n\nI was annoyed. I was angry. Who did he think he was, to know how many of anything I had taken? What kind of man was he, to keep me from getting what I wanted? To take me home and leave me, clothed, on his goddamn couch, then throw me up against the wall and demand to know what I did with my life? I'd been totally open for him; why hadn't he just fucking taken me last night? What fucking games was he playing? I wanted to piss him off, wanted to show him that he wasn't in control of me, that I could do whatever I goddamn well pleased. I wanted to slam myself into the feelings that were rocketing up in my stomach and get him to fuck them all out of me. Maybe if I were lucky he'd hit me, hit me until that's all I felt, and then he wouldn't be so goddamn high and mighty, try to act so fucking good, because he was just like the rest of them when it came down to it. They all were the same. \n\nWhen I'd popped the ups I'd also pocketed one, slipping it between my gum and my cheek. I love the feeling of it, love the acid taste and the quick way it gets into your blood, but I'd give that up if it meant fucking with him. I shifted my tongue over and grabbed up the white disk, then pushed my tongue into his face, letting the pill sit obvious and ragged in his vision. Then I pulled my tongue back into my mouth, smirked, and swallowed. \n\n***\n\nI don't know. I don't know. I shouldn't have done it the way I had, but I just knew, knew he'd tell me if I did. Knew that his neck was the one thing I could use against him, that he'd push himself to get touched. But I hadn't expected this. I mean, X is one thing, and K is another, but speed? \n\n\"Junkie,\" Bren said behind me, and I watched him swallow the pill and something inside of me just dropped. \n\nMaybe it was the thought that if I had tried to kiss him, I would have gotten speed into my system. Maybe it was watching him so cheekily take something so fucking dangerous. Maybe it was that Bren was right, and he was a fucking junkie, and no one in the goddamn bar had seemed to notice or care. \n\nWhatever it was, I fucking snapped. \n\nI had him by the hair and was pulling him toward the bathroom before he had time to react, which was probably good because I apparently didn't know what the fuck he was capable of. \"Coop!\" Bren shouted, but I slammed the door in his face and locked it before getting the man in my hands over to the toilet. \n\n\"What the -\" he had time to say before my fingers were in his throat and he was puking. \n\nHe fought against me, which was fair, but I was way stronger than him on a good day and this was not a good day for him. \"It's alright,\" I whispered into his hair, trying to get him to calm down, \"let it up. It's happening, let it all up.\"\n\nI don't know if it was my words or the exhaustion of last night and this morning that did it, but he did stop struggling. His hands, which had been slapping and pulling at mine now simply gripped the sides of the toilet like he was afraid he was going to fall in. I let go of his chin when it was obvious he wasn't going anywhere and stroked his shuddering back, apologizing internally.\n\nHe was done pretty quickly. I don't think there had been much in his stomach to start with. I looked down and saw a lot of foam and four tablets floating in the bowl.\n\nI reached around him and flushed, holding back any anger. Unless speed had gotten a lot weaker since I'd been around, four, in the morning, on an empty stomach. That was serious. Like \"I take speed on the reg and I no longer really feel it\" serious. He was leaning back into me, his body spent, his arms shaking. I let go of my grip in his hair and his head found its way to my shoulder. \n\n****\n\nI hadn't even known I had a gag reflex anymore, but I guess the stupid man surprised me and up came what little I had left. I had a lot of practice puking - I had very little practice puking at someone else's hands. Even in the violence of the motion, as my body fought to rip apart my insides, as his hand was tight and hard against my scalp he was talking me through it, and his voice settled against me, soothing, soft and gentle in the face of everything else and I found myself leaning into that, letting myself be lulled into believing whatever lies he was telling me. \n\nMy exhausted body did what it wanted when I was done, and what it wanted was to be close to him. My head settled next to his, and he wrapped a loose arm around me. It felt so good, to just be like that. To let myself rest. To let someone catch me for once. My body shuddered without my consent as he pressed a kiss just behind my ear.\n\n\"Never,\" I heard him say, and his voice was quiet, and his words were law, \"take speed in my house again.\"\n\nIn that instant, I suddenly remembered what he had just done and how fucking fucked up it was. \"Shit,\" I shouted, pushing away from him. He let me move my body which just pissed me off even more. If you're going to control me, fucking control me. What was this shit? \"Who the fuck are you to tell me what I can and can't take?\"\n\n\"I'm not,\" he said quietly. \"Just don't do that shit in my house.\"\n\nI glared at him, unsure why him saying that he wasn't trying to stop me from taking drugs made me just as pissed as when he did. \"Fuck you,\" I finally said, and whirled out of the bathroom.\n\nOr I would have, if the creep hadn't locked the fucking door. As it was I spent a good minute fumbling with the lock before finally getting the door opened, where I practically slammed into the roommate. \n\n\"Fuck you too,\" I told him, and this time I did manage to whirl from the room.\n\n***\n\nI sighed as I watched him go, frustrated with myself. That hadn't been the best way to handle that. I should have just thrown him out, let him swallow what he wanted to swallow. There was no need to add in all this hands-on shit. I mean, Jesus. Talk about over the top. I hadn't needed to go that far. \n\nExcept I'd wanted to. How fucked up was that? Like, seriously fucked up. Way past the things I should have been doing, the ways I should be acting with a stranger, with anyone. I shouldn't have been trying to control his life, and if he wanted to fucking take drugs, that's his life, and yet. I'd wanted to get those drugs from his system, wanted him to just have a moment where there was a consequence for his actions. A swift, immediate, consequence. \n\nNo one had ever done that for me. God fucking knows I'd needed it, and there'd been no one. I mean, there'd been so many people, so many fucking people in and out of my life and they'd all just let it happen, let me go until I was so far gone that - \n\nBren's figure entered the doorway. I didn't bother to look up.\n\n\"So how's your morning going,\" I tried.\n\n\"What,\" he repeated for the third time, \"the shit.\"\n\nI laid back against the cool tiles and tried to pretend that everything was going to be alright. \n\n***\n\nCH 5\n\n***\n\n\"Yo, bitch, I'm talking to you.\"\n\nI jumped. I'd been zoning, totally lost in thought, still confused as to what the fuck had gone down with that guy - Coop, or whatever - a few nights ago. He'd barely even touched me, and when he had... \n\nBut he wasn't here, thank god, and I needed to get my act together. \"Yeah, Jimmy. Repeat it.\"\n\n\"Fuckin'.\" Jimmy took a breath like I was causing him some major inconvenience. \"Do you need more whites?\" \n\n\"Oh.\" I blinked at him. More whites?\n\n\"Pretty simple question, dickhole.\"\n\nDickhole. I fought to keep my eyes from rolling. \"Nah, Jim. I'm good.\" I was surprised to hear that answer come out of my mouth. I did need more whites, desperately - they were the only thing I was completely out of. But the last two times I'd taken them, even just the one, my emergency one I'd been saving, I'd puked, which kind of ruined the fun. Besides, I'd found that I hadn't really missed them. \n\nMoved on to better things, I told myself, even as that stupid man's voice slithered through my brain and right to my fucking dick. \n\n\"Aight. Got you E and some K, threw in some percs for being such a good customer. Got the cash?\"\n\nI sighed, flicking my head with annoyance. This game was getting old. \"No, Jim. You know I don't have the cash.\" \n\n\"Oh.\" He held the bag up with a smirk. \"How you planning on paying, then?\"\n\nI rolled my eyes. \"God, will you get it over with?\" I was in no mood for this today. \n\nJimmy's smirk went into overdrive, and not kindly. \"You want these or not.\" He rattled the pills around in their baggy, watching my eyes dance for them. \"Bitch.\" \n\nFuck Jimmy, and fuck his games. \"Oh, no,\" I said, my voice sounding bored even to me, \"how ever shall I pay you, I am in such distress.\"\n\nI only made it to \"pay\" before Jim reached up and grabbed my hair, dragging me down to my knees. God, I thought as he got out his dick. What a prick. \n\n*** \n\nIt'd been a week, and I was back at that fucking bar. \n\nThe bartender laughed, laughed right out loud when he saw me sit down. \"Didn't get enough last time?\" I scowled at him. I wasn't here by choice. Bren'd had some fight with his man, and was here to try and catch him before he picked up another cub, or something. I don't know. It was important to Bren, so I was here. Mostly to make sure that, if this guy had already picked up someone else, everyone made it out of here alive. \n\nThe bartender was back quick with my beer, setting it down with a wave at my offered ID. \"John's here, you know.\" He said it like it was an offhand comment, but he was watching me closely.\n\nMy eyes were scanning the dance floor even as my brain was shooting warning after warning. I'd had a lot of time to think about this guy. Bren had told me I should never go near him again, which I kind of agreed with. I mean, I of all people really didn't need some speed freak fucking up my life. Or K addict, or X head. And he was all of that, and probably an alcoholic to boot. And I knew, I knew, as well as I knew myself, as well as I knew anyone and I knew people, I was good at people, that there was nothing I could do to help him. That it wasn't my place to help him. Besides, he didn't want help, or need it. He was his own person; he could make his own choices, chose his own path.\n\nBut looking around me, I wasn't seeing a lot of paths. I wasn't seeing spaces being made, avenues opening up. People likely to straight talk an addict out of sitting down at rock bottom, which they always fucking will because that's where they think they belong, because they think they're not worth the fight to get out. Because at least rock bottom is a place with walls and some consistency. \n\nNo, people here weren't going to take that effort. Not when it's so fucking convenient to have someone like that around. \n\nI shook my head, trying to clear my thoughts, to get them off him. Bren was right. He wasn't my responsibility, and I wasn't going to worry about it.\n\n\"Buy me a drink.\"\n\nShit. \n\n***\n\nWhat the fuck was that guy doing back in my fucking bar? \n\nI saw him tense when I pulled up next to him, which made me feel good at least. I had some sort of an effect on him, which I had seriously been doubting in the past week. I mean, who the fuck doesn't fuck someone like me when they get the chance? \n\nAnd he'd had the chance. He'd had like, three chances. At least. So what was it? Why hadn't he? You don't want me like I want you, he'd said, or something like that, but that was bullshit. I could be anything that he wanted. \n\nThis fucking good boy act was getting old. He'd fuck me, eventually. They all did. Especially when I wanted them to. And fuck, did I want him. I hated him, hated the things he said and the way he tried to run my goddamn life for me, hated the things he brought screaming out of my stomach that I didn't want to think about but that didn't mean I didn't want him.\n\nI mean, hate fucking is kind of a specialty of mine. \n\nI arranged myself against the bar and smirked as he shifted next to me. The cool metal felt amazing against my back, the E turning the sensation into a wave of amazing that pulsed through my chest. I was feeling good. I was fucking flying. Come on, buddy, I thought. We both know you want it. Come and fucking take it. \n\n***\n\nI tried not to turn to him, but I'll admit to not trying very hard. He looked good, like, really good, that black hair curling and looking fucking amazing to grab, his single braid catching my eye. He was wearing the same pants as the other night, but a different shirt, just as tight, just as delicious. \n\n\"So,\" he said.\n\nI shrugged. \"Yeah, why not.\" \n\nWe were quiet while the bartender mixed up his order. \n\n\"I'm not on speed.\" \n\nI was a little surprised by his honesty, his straight forwardness. By the fact that he felt like he had to tell me that at all. \"Okay.\"\n\n\"So.\" His leg was bouncing, his eyes tracking out over the dance floor. \"How 'bout we get out of here?\"\n\nI watched that bouncing leg, saw how his eyes never stayed in the same place for very long. \"Are you actually not on speed?\"\n\nHe shot me a look. \"I'm not a fucking liar.\"\n\n\"Okay,\" I said again. \n\n\"And I haven't bought it since.\" He made a face. \"It makes me throw up now.\" His arms were crossed in front of him. \"So fuck you for that.\"\n\nI didn't really know what to say. I hadn't been trying to get him to quit the damn drug, just. I don't fucking know what I'd been trying to do. We sat together in our silence, trying to fit it into the noise of the club, maybe, but I had no fucking clue how to exist in a place like this and honestly, I was way too comfortable just existing around him. ",
        "\"Take me home,\" he suddenly said. \n\n\"No.\" My answer was immediate and without emotion. I wanted to - I really, really wanted to. All the thoughts that had been with me ever since I'd first laid eyes on him were still there, right beneath the surface, but this couldn't happen.\n\nHe rounded on me, actually confused. \"Why not?\" \n\nI thought about what to tell him. That he was dangerous for me, that he was too close to all the things I used to be. That Bren had told me specifically not to, and I didn't really want to get on the wrong side of Bren. That I was worried that if I brought him home and he didn't react the way I wanted him to, or worse, if he did, I'd break my own goddamn heart.\n\nBut his pupils were huge, way bigger than they should be even in this low light, and so I had an out. \"I don't take home people who aren't sober.\"\n\nHe frowned at that. \"I dropped the speed.\"\n\n\"Yeah.\" I gave him that, even if I didn't understand it. Maybe it was a start, for him. Or for me? I didn't let myself think that for long. It's stupid, anyway, to get clean for anyone but yourself. \"But you're still high.\"\n\n\"So fucking what?\" I could see him starting to get pissed, saw the tension building in his fists, his thighs. \"What the fuck difference does it -\"\n\nI didn't let him finish before I pulled him close to me, sinking my hand deep into that hair, fuck, his hair was so good, and dragging his ear to my lips. \"I want to see you, not the drugs,\" I let myself whisper, watching him simultaneously go still and shiver all over, all through his core. \"I want to watch you react when I do the things I want to do.\" \n\nThat was only half true at this point. Yeah, I wanted him beneath me, squirming, calling my name and begging and controlled but I also wanted him sober because I just wanted him sober, wanted him to exist in a way that if he took drugs it was for fun and not because he was trying to destroy himself, not because it was his baseline or his way of filling himself up with something, anything, wanted to see what he would look like when he smiled for real and shit, fuck, dammit I was not supposed to care but it was way, way late for that. That was the problem with knowing people, with being so damn good at understanding. That was the problem when you ran into someone so damn understandable. \n\nWhen I let him go, he stumbled back, that half dazed, half afraid, half aroused look on his face. And yeah, the guy was operating at 150%. I narrowed my eyes, seeing how easily it had been to get him there. I bet I could get him to 200%. I bet I could get him to break the goddamn meter.\n\n\"Then why'd you buy me the drink?\"\n\n\"Huh?\" He'd caught me daydreaming again, and he didn't look pleased.\n\n\"If you want me sober, why the fuck did you buy me a drink?\"\n\nThe bartender was back, looking more amused than anything else. I shrugged. \"You asked for it.\" \n\n\"You could have said no.\"\n\n\"I could have.\" I leaned on my hand and watched him. Shit, I thought. This is gonna piss him off, if past experience is any guide. \"But I'm not your keeper.\" \n\nI was right. I watched his face gather up in a scowl. \"You're sure fucking acting like it.\"\n\n\"No. I'm just telling you what you have to do if you want to come home with me.\" I tried to keep my voice calm and even, soft. Tried not to drop it low and smooth, tried not to command. This needed to be his decision. He needed to chose his path. I was just giving him the opportunity, I told myself. That's all. I can be an option for him, in a place that had anything but. \"And I want you sober for that.\"\n\nHe shoved away from the bar, drink in hand. \"You can't tell me what the fuck to do.\"\n\n\"No,\" I said quietly, and I wasn't sure if he'd hear me over the sounds of the club except that he was watching me so intently. \"Not when you're like this, I can't.\" \n\nHe scowled even deeper and whirled away, those curls bouncing as he made his way towards the dance floor.\n\n\"Sober?\" I heard the bartender remark behind me, and I immediately hated his smug, amused tone. \n\nI shrugged, turning back to my beer. \n\n\"You'll never see it.\" His gaze was following John, I'm sure. Fuck, I hated that name for him. \"I don't think I've ever seen that guy sober.\"\n\n\"And you don't think that might be an issue?\"\n\nHe glanced at me at the bitterness in my tone, the accusation I'd been trying to keep in my chest. \"Hey man.\" His hands went up in mock defeat. \"I just serve the drinks.\"\n\n\"Yeah.\" I didn't look up from mine. \"And that's kind of the problem.\" \n\nHe shook his head and walked away, and I let him go. Fuck, I thought as I took a sip of my shitty beer. I really fucking hate this bar. \n\n***\n\nCH 6\n\n***\n\nSober?\n\nSober? \n\nWho the fuck was this guy to demand that of me, who the fuck was he to judge my life, my choices, my actions? I'd dropped the speed, what more did he fucking want? What other concessions did I have to give to him, what other ways did he want me to destroy my freedom, my escape, my way of killing all the bits of me that needed to fucking die?\n\nI couldn't believe how fucking uncool I'd been, just talking to him. How he made me slip into angry, into frustrated and fighting and how easily I forgot to flirt, how fucking easy it was for him to get me - Shit. I had been about to think vulnerable, but I wasn't that. I wouldn't be that. Not for him, not for anyone.\n\nWhy should his hand in my hair make me feel any sort of way? Why should his breath on my cheek make me want to collapse? Why should the thought of him wanting me, me, not sex, not my mouth or my body or the things I did but me, why should that make my stomach hurt this fucking much?\n\nNo. He hadn't said that. He'd said he'd wanted to see my reactions, he'd said he wanted to see me react, that was it, he didn't want anything different than the rest of them, he wasn't any different, couldn't be. Wouldn't be.\n\nFuck. \n\nI slammed the rest of my drink and headed right back to the bar. \n\n***\n\nBren, happy and relaxed, found me probably two hours later. His bear had showed up with the same idea he'd had, and they were going to spend the night dancing and making up. Or something. Whatever. At least I wouldn't have to pull Bren out of any more bar fights. \n\nI reminded Bren that he had a fight in two days, and needed to stay in shape, but he didn't really give a shit about things like weights. He made the lowest weight class by five pounds, easy. A few cocktails meant nothing to him. \n\nBren, man. Most guys in the lower weight classes were just skimming the limits, and doing it for a better chance at winning. Bren was different. He didn't fight to win. He fought because he had to.\n\nI was anything but happy and relaxed. I'd lost track of my guy - shit, when had he become my guy, he wasn't anyone's guy, but I sure as hell wasn't going to call him John - about twenty minutes ago. I sighed and called the bartender over. I knew he'd know where he was. I knew he always knew where everyone was, with those quick eyes and quicker smiles. I also knew I'd been kind of a dick to him earlier. He wasn't a bad guy, not really, just had been here for too long maybe. Or operated by a different set of rules, bartender rules. \n\nHe'd been avoiding me, probably frustrated by my words earlier. \"More beer?\" he carefully asked, that smile in place.\n\n\"Where is he?\"\n\n\"Where is who?\" I shot him a look at his feigned ignorance and he gave up. \"I'm not his keeper either, you know.\"\n\n\"I know,\" I said, trying to show that I was properly chagrined about my comments earlier. \"So where is he?\"\n\nThe bartender shrugged. \"Never saw him come out of the bathroom after he went in with Henry. He's drunk as a skunk, you know.\" He smiled at me, and his expression was not amusement so much as it was vindictiveness. \"Put all his drinks on your tab.\"\n\nI got up and headed to the bathroom. \n\nIt looked empty when I first got in there, dingy and gross and everything I'd expected but worse. If he wasn't here, good for him. I made a quick scan and was about to leave when I heard a groan from one of the stalls. \n\nAt the suddenness of me ripping open the stall door, the man inside jumped. I looked down at him, at his cock hard and exposed and pointed at the clearly unconscious, half naked man draped over the toilet, his dark hair covering his eyes, the single braid falling across his lips. \n\n\"I hope,\" I said slowly, quietly, trying to hold tight to all the things in my chest that didn't want to stay, \"for your sake, that you were not about to do what it looks like you were about to do.\"\n\n\"Shit, man.\" He was shoving his rapidly deflating cock away. \"No big deal, right?\"\n\nNo big deal. My chest was not a container meant to hold this much shit. \n\n\"I mean,\" he said, flashing me a nervous smile, \"it's just John.\"\n\nI had him up against the wall, my arm to his throat, before he knew what hit him. I was trying to decide exactly how much of what shit this fucker was going to go through when the door swung open behind me, letting in the noise of the club. \n\nI turned to see Bren's bear making his way into the small space. He took me in, then peeked into the stall and saw the man's unconscious form. He crossed his arms. \n\n\"He's not worth it, love,\" he said, jerking his chin towards the stall. I felt my chest about to burst. \n\n\"Everyone,\" I stated clearly, slowly, in simple fucking terms because somehow these people weren't fucking getting this, \"is worth more than being fucked like that.\"\n\nI watched the bear's eyebrows go up as he suddenly put the pieces together. His eyes flicked from the stall to the man I was holding, shaking, back to the stall, to finally land back on the man in my hands, and I was glad to see that his eyes were dark and angry and holding some of the things I had been struggling with. He made his way towards me, and the man whimpered. I cut off his air before he could make any more noises. \n\n\"Leave him to me,\" the bear said quietly. \"You go take care of Teddy.\"\n\nTeddy, I thought as I let go of the man, hearing his body hit the tile and watching the bear grab him back up. From Theodore. I bet he used that nickname special for the bears. Fuck, I think I hated that even more than John. \n\nI didn't listen to the sound of fist hitting flesh as I made my way over to the stall. That was old news to me; I was focused on the man slumped over the toilet. \n\nI tried not to touch his skin too much as I pulled his pants up over his ass, hoping that they would stay. They didn't seem to have much support past just being tight. His body clothed, I propped him up against the stall wall and started to pay attention to just how far gone he was, lightly tapping on his cheek and calling to him. He was responsive enough that I didn't think he was dying, but not responsive enough that I wasn't worried. \n\nDefinitely, I thought as I heard another punch land, not responsive enough to consent. \n\nIt was probably the alcohol and not K that had done him in, at least, which had me on comfortable territory. I started in on a quick check for any damage. \n\n\"He okay?\" I looked up to see Bren's bear hovering in the stall entryway, and shrugged. \n\n\"As okay as he can be.\" There had been nothing but a few bruises over the man's body, bruises that made me angry and hurt but they weren't my business, it wasn't my body, and it wasn't like I didn't beat my own flesh to shit for a living. And, they looked old. A few days at least. I noticed the blood on the big man's knuckles and let out some of the things I hadn't allowed from my body before. \"Thanks.\" \n\n\"Orin,\" he offered, and put out his hand. \n\nI shook it. \"Coop.\" \n\n\"You're a friend of Adam's, right?\"\n\nAdam was Bren's first name. Adam Brendle. It always took me a minute to register him as an Adam. \"Yeah,\" I finally said, my brain catching up to me. I looked down the the man splayed at my feet. \"I'm gonna get him out of here. Can you watch him while I settle up?\"\n\nHe nodded and I sighed in something that almost felt like relief, if I hadn't been so damn wound up.\n\nThe bartender met me at my half-drunk beer. \"No luck?\"\n\n\"The next time you see someone go into your bathroom so drunk they can't stand,\" I said, low and angry and so fucking over this place, \"maybe send someone in to check to make sure they're not being raped.\"\n\nBut he just rolled his eyes. \"Please. It's John. It's not like he'd care. Besides, what could I -\"\n\nI hissed and grabbed his shirt, dragging him across the bar, but even as I did it I realized that he was nothing to me, that I didn't give a shit about him and I released him, pushing him back against the bottles. \"Jaded fuck,\" I spat. I threw down a few twenties and left. \n\nHe shouted something after me, I think, but I was already bursting into the bathroom, causing Orin to jump. \"Tell Bren I'm headed home,\" I told him, not really giving a shit about how he would make his way back to the apartment. \n\nOrin took in the lines of my body and frowned. \"Chad give you trouble?\"\n\n\"That the bartender?\" He nodded. \"No.\" Orin raised a brow at my curt tone, but I didn't want to talk about it. I hoisted the man over my shoulder, feeling again how light he was, how easy he was to carry, and really hated that I wasn't hating that I was doing this. \n\nOrin walked me out, which helped some with the stares that were inevitable as I carried an unconscious man out of the bathroom. I was shocked when the bouncers outside the bar didn't make any attempt to stop me, but Orin just spat. \"Statues,\" he said quietly. \"Nothing but statues.\"\n\nWe got the guy - fuck, I was going to have to find a name for him if I was going to keep doing this, not, I reminded myself, that I had any plans whatsoever to keep doing this - into Bren's backseat. Orin frowned. \"You gonna need any help getting him home?\"\n\nI shook my head. I knew from experience that I could handle that. \"Thanks again, Orin.\" I glanced back at the bar. \"You'd better get back inside before Bren starts getting antsy.\" \n\nHe smiled at me, a little sloppy and very pleased, and I knew he had it bad for my friend. Good. Bren deserved it. \n\nThe walk up to the apartment was uneventful, and I managed to get us both through my door with minimal banging of elbows. I didn't even drop my keys. \n\nI had him on the couch, a fresh glass of water near his head, the bucket set up and was just laying the blanket over him when the door opened.\n\nI didn't bother to look up to see Bren's disappointed face. He was just going to have to deal with this. \"He was unconscious in the bathroom,\" I said. \"And -\"\n\n\"I know.\" Bren sighed. \"Orin told me.\"\n\nI looked up to find Orin there as well, his huge frame filling our doorway. I nodded, surprised at how relieved I was to see this perfect stranger. \"Thank you,\" I told him, quietly. For being there to help. For telling Bren, and helping him to understand. \n\nHe nodded, slowly, his eyes on the mess of black hair arranged over the couch. I followed his gaze.\n\n\"I think he's doing okay,\" I ventured. \"He hasn't woken up, but -\" \n\n\"Coop,\" Bren said, his voice careful. \n\nSo maybe he didn't understand. I needed him to; needed him to get why I had to do this, if just this time. \"No one cared.\" I pulled the blanket over him. \"No one would have known.\" \n\n\"Coop,\" Bren said again, quieter. \"You can't keep doing this.\"\n\n\"I know.\" My voice was just as quiet, and my eyes were on the still form before me.\n\n\"He isn't good for you.\"\n\n\"I know.\"\n\n\"This is like playing with fire.\"\n\n\"I know.\"\n\n\"Shit.\" I could hear Bren crossing his arms. \"You gonna say something besides 'I know'?\"\n\n\"I know,\" I joked feebly. Bren's silence didn't sound amused, so I sighed and started again. \"The whole fucking bar, Bren. Everyone there, they all see him, they all know. And no one's checking in on him, everyone just uses him for what they want. And he doesn't care. He can't, not when he needs that place like he does, not when he sees himself.\" I took a deep breath. \"He doesn't have anyone. He's alone.\"\n\n\"Cooper.\" I could hear the understanding in Bren's voice, in the way he pushed my name towards me. \"He isn't you.\"\n\n\"No.\" I knew that was true, I knew it, but still... \"But I was almost him.\"\n\nOrin gave a look, but my eyes never left the back of the man before me as I watched him breathe. \n\n\"That doesn't make him your responsibility.\"\n\nI passed my hands over my eyes and stood. \"I know.\" I made my way into the kitchen for a glass of water of my own. \n\nOrin followed me, a little bit behind. I knew what was coming and steeled myself, settling truths on my shoulders and making the words ready.\n\n\"Adam is really worried about this.\"\n\nI nodded. \"He just doesn't want me fucking up a good thing.\"\n\n\"Can I ask...\" he started, then shook his head, unsure how to continue. \n\n\"Drugs,\" I just said, hoping that would be enough. I didn't want to get into specifics, didn't want to talk about sleeping in my car after I lost the last apartment I could afford, didn't want to talk about the bar fights, didn't want to remember burning through job after job. How my friends disappeared, how I turned on my family. \"Alcohol too, I guess, but.\" I shrugged. \n\n\"What made you stop?\"\n\n\"I got a wake up call.\" I'd had a lot of wake up calls, but I finally got one that I answered. \n\n\"You got hurt,\" he guessed, but I shook my head. \n\n\"I got hurt all the time. I had shit that could numb that, and the more dumb shit you do the more you think you deserve it.\" I saw Orin nod, slow and easy, but knew he didn't understand. Not really. \"But hurting someone else? That's a whole different ball game.\"\n\nI watched Orin pause, his eyes taking me in.\n\n\"Bar fight,\" I explained quietly before his imagination could run wild. \"I was trashed. He was trashed. I was high. I donno, I don't really remember it.\" I did; I remembered it real well, remembered it in nightmares and the way my body never let me really let loose anymore, not outside the ring, or around Bren, or anywhere where there weren't people I trusted to stop me. I breathed; you did this, you can talk about it. \"I put the guy in a coma.\"\n\n\"Jesus,\" I heard Orin breathe. \n\n\"Yeah.\" My voice was just as quiet. I drank a bit of water and waited, knowing he'd have questions. \n\nI was right. I could feel him shifting in front of me. \"It's alright,\" I told him, even though it wasn't. \"You can ask.\"\n\n\"You still drink.\"\n\n\"Yeah.\" The glass felt cool in my hand. \"Alcohol was never really my trigger, you know? I had an unhealthy relationship with it, sure. So I quit it for a while. When I came back I just had to be careful, really, really careful.\" I didn't get drunk; not anymore. Don't get me wrong, I wanted to, all the fucking time. But I didn't. I could control that.\n\nOrin moved on to harder questions. \"I thought you couldn't fight if you had a record.\"\n\n\"That isn't true. Lots of guys come to MMA to get clean, in one way or another.\" I tapped my finger against the glass. \"But I don't have a record.\"\n\nHe frowned and I shrugged, feeling sick. \"He didn't have anyone, not really. He was just some old drunk, the bar's bastard, you know? No one liked him. No one really knew him. No family, no friends, just the drink. So when it came time to act as witness, there wasn't anyone willing to go on record and say it was me involved. Fuck, there wasn't anyone willing to say they'd even seen him at the damn bar that night. So the case got dropped.\" Not even the police were there for him, in the end. \n\n\"Fuck,\" Orin summed up. \n\n\"Yeah.\" I sat there, remembered how I'd curled up in the alley, blood on my hands and seeping into my soul. So drunk I could barely see. My dealer had cut me off the morning before because I'd told him - it didn't matter. I was drunk to deal with the withdrawal. I was fighting because I was pissed at what I'd become. Or maybe it was the other way around; I was drunk to deal with what I'd become, and I was pissed at the withdrawal. Or maybe both were true. \"It's sick, but it wasn't really that I'd hurt the guy that got me clean. It was that I was becoming him, you know? I was him. No friends, check. No one to come visit me in the hospital, check. It was like, I looked at him there in that hospital bed, knew I was his only visitor, ever, in the entirety of his stay, and thought. You know. The only reason that's not me is because I won.\" I rubbed my hands, feeling the aches that multiple stress fractures had put there. I'd gone to the guy's funeral three years later when his kidney had given out. I'd been one of three attendees. \"No one wants to end up there.\" ",
        "\"No,\" Orin agreed quietly. \n\n\"So I got clean. I joined a gym. I met Bren.\" I shrugged. Three years of my life, summed up in three sentences. \"Now that we fight pro, there's no looking back now. We get drug tested constantly and there's no time for going out and binging. Plus the calories, and the water weight?\" I managed a small smile, and Orin smiled back. \"It's a great system, pressures me to stay away from all the shit.\"\n\n\"And now you bring a goddamn junkie into our home.\" That was Bren. I didn't want to meet his eyes, but when I did I just saw understanding. I breathed. \"And you keep my lover away from my bed.\"\n\nOrin smiled, a soft and sloppy expression. \"Sorry, baby.\"\n\nBren disappeared into the bedroom, muttering, \"You'd better be,\" and both Orin and I chuckled. \n\n\"He's a good one,\" I mentioned, just on the right side of affectionate, and Orin turned that sloppy smile to me. \"You gonna come to his fight?\"\n\nI watched the smile start to fade. \"I...\" He shifted. \"That's what we were fighting about.\"\n\nI patted his shoulder. \"It isn't an easy thing, to see the person you love surrounded by such violence.\"\n\nThe sudden look of panic and joy on his face told me that I had told him that he was in love with Bren before he'd known. Damnit. \"I'll be there,\" I quickly said to distract him from whatever was running through his head. \"So. If that helps.\"\n\n\"Yeah,\" he said distractedly, his hand huge on mine for just a moment. \"Excuse me.\"\n\nI watched, smiling, as he made his way quickly into Bren's bedroom and closed the door firmly. Good for them. Then I made my own way to bed, hoping that things would be better in the morning. \n\n*** \n\nCH 7\n\n***\n\nI threw up almost as soon as I woke up. Which, as soon as I realized where I was, made a lot of sense. All I ever did in this fucking place was puke. \n\nI groaned and flipped over, shoving my face into the cushion. How the fuck had I gotten here again? \n\n\"You alright?\" The sound of his voice made my entire body tense, and I hated that, hated the effect he had on me. \n\n\"Fuck off,\" I mumbled. I heard him coming over to me anyway. I lifted my head and wished I hadn't.\n\nHe was wearing nothing but boxers again, nothing but boxers and his fucking righteousness. I felt my eyes drag over him, taking in every inch of his sculpted body. When he crouched before me and brought his face into view, I turned away. \n\n\"How the fuck did I get here,\" I asked, knowing I sounded sullen. Well, I was sullen. I was tired of waking up in my clothes so close to someone I wanted to be naked with. \n\n\"You were unconscious in the bathroom.\" I heard something in his voice, something more, but I wasn't interested. Fuck it. Fuck him. Fuck this fucking place. I felt my stomach churning and got to the bucket just in time.\n\nHis hand appeared, holding a glass of water that must have been sitting out all night but whatever, I'd drunk worse shit. I took it without thanking him and rinsed out my mouth. \"Fuck,\" I muttered, feeling the way my body was hating on me, the way all my muscles were bunched into strange positions. I was dangerously close to being empty, to being hollowed out and ready to be filled by all the things I didn't like thinking about. I needed something, anything...\n\nI sat up. \"I should go.\" \n\nHe was watching me. \"Do you want breakfast?\" \n\n\"No.\"\n\nI saw him looking me over. \"When's the last time you ate?\"\n\nFuck. I don't know. Who gave a shit? \"I need to go.\" \n\n\"Got somewhere to be?\"\n\n\"No, I just.\" I glanced toward the bathroom and his eyes noticed, saw it all, and I thought he would sigh, or look disappointed, but he just shrugged. \n\n\"Yeah. If you need to take something, you should get out of here.\"\n\n\"I don't need to do anything,\" I snapped, knowing full well that my body disagreed. I was jonesing bad; whatever mix I'd taken last night hadn't been enough to tide me over to this morning. Fuck, even like a bowl...\n\n\"Then stay for breakfast.\" He said it so simply, like he hadn't just laid a fucking trap for me, like he wasn't trying to get me to not leave. Honestly, he probably wasn't. He didn't want me. Twice in a row, he'd brought me home and not fucked me. I mean, what, was he straight? But he was just looking at me, and fuck, those fucking lips...\n\n\"Yeah,\" I heard myself say. What? That was a terrible fucking plan. But his lips, just looking at them, had seemed to calm down my soul, at least for now, and I could wait for my morning fix. It wasn't like I needed it, anyway. \n\nI pulled myself up to standing and nearly fell, my vision greying and a deep sound filling my ears. When I came back to it I found his hand on my elbow, steadying me, and I pulled away angrily. That wasn't the touch I wanted. \"But I'm fucking making pancakes.\"\n\nHe blinked for a moment before shrugging and waving a hand toward the kitchen, and I think he even smiled. \n\n***\n\nWatching him bustle around the kitchen, dropping curses and slamming cabinet doors like they'd said some terrible thing to him, I couldn't keep a smile off my face. I liked watching him like this. I liked watching him. He was fun, in an angry fuck-the-world kind of way. \n\nI honestly was shocked that he'd stayed. He'd looked like he was jonesing bad when he'd first woken up, like he'd really needed something. I remembered those mornings, how you couldn't think straight, couldn't think at all, until you got your first hit into you. You just needed something. Anything. \n\nI got that. I wasn't going to stand between him and the the things he needed to do. But, I gave him an option anyway, because no one had ever given me one, because I wanted him to stay, and fuck me if he hadn't taken it. I watched him now, mixing batter, and was so fucking glad that he had. He cursed as he splashed a bit of batter on the counter and I lifted my hand to try and hide my grin.\n\nHe looked up just in time to catch it and scowled. \"What?\"\n\n\"We have mix, you know.\"\n\n\"Fuck your mix.\" He tasted the batter and I watched his finger disappear into that mouth of his, and tried really hard not to lick my lips.\n\n\"There's two more,\" I told him, trying to distract myself from all the things his lips were making me think. He shrugged and went back to the fridge for some more eggs.\n\n\"Got any chocolate chips?\" he asked from inside the fridge.\n\nWe weren't exactly a sweets household. I shook my head.\n\n\"M&M's?\" he tried. \"Any fucking candy at all?\"\n\nJesus, I was starting to really like this guy. I turned so that he didn't see the expression on my face as I pulled down Bren's secret stash of Hershey's kisses. \n\nWhen I turned back to him he was giving me a very strange look. Shit, I thought, but there wasn't anything to do about it if my - whatever it was that I was feeling - was showing. I hadn't thought it was, but I never thought what I was thinking showed around him, and he always seemed to pick it up. I was starting to get the very bad feeling that he was just as good at reading people as I was. \n\nBut he didn't mention anything. \"Peel those,\" he told me, and I started dumping them out.\n\n\"How many?\"\n\nHe shrugged, pulling a pan out and setting it on the stove. \"Enough. I don't know. I'm not your fucking mom.\" \n\nI know I smiled again as I started in, and I know he saw it because he scowled and turned away. \n\nThe noise and the smell soon brought Bren out from his room. He crossed his arms when he saw the empty Hershey Kiss wrappers.\n\n\"Those are mine.\"\n\n\"You shouldn't be eating them anyway,\" I tried. I had my eyes trained on the man cooking up fluffy, amazing pancakes in front of me. His eyes, in turn, kept darting up to the cabinet that I knew held our liquor - he must have found it when he was slamming around earlier. I rested my chin in my hand and watched.\n\n\"But it's okay to eat it in a pancake?\"\n\n\"No,\" I said, as Orin rumbled out of the room sleepily. \n\n\"Did someone say pancakes?\" He slipped his arms around the grumpy Bren and smiled at me, then froze when he saw who was cooking.\n\n\"Teddy,\" he said softly by way of greeting. His voice wasn't cold, exactly, but there certainly wasn't any warmth in it. \n\nHe didn't even turn from his task. \"You,\" he replied. Then he whirled and faced me. \"He fucked me in the bathroom, you know. It was good enough for him. Don't see why it wasn't good enough for you.\" Then he was back to flipping pancakes as if nothing had happened.\n\nI looked over at Orin, and he met my gaze. We stayed that way for a bit, just staring. Silent. He looked away first. \n\n\"There should be enough for all of us.\" I kept my voice easy, but there was tension in me that hadn't been there before. I heard Orin shift and saw Bren and him having a whole conversation with just their eyes. \n\nWhatever they said, breakfast seemed to be the order of the moment. Bren moved towards the island, dragging Orin along for the ride. \"These smell fucking good.\" \n\n\"You have a fight tomorrow,\" Orin reminded him, resulting in Bren smacking at his hands. \n\n\"Fuck you,\" he said, pointing at Orin, \"and fuck you,\" he pointed at me and I raised my hands, \"and.\" He paused, pointed at the back facing him. I saw it tense slightly. \"Thanks for breakfast.\"\n\nHe spun, a stack of pancakes on the plate in his hands. He all but threw the plate on the island between us. \"Dig in,\" he said, trying not to sound happy, but there was pride in his voice.\n\nAnd he had something to be proud about. Fuck, those pancakes were some of the best I'd ever had. Bren told him that over and over again, until he finally told Bren to \"shut the fuck up and just fucking eat,\" and I laughed which just made him glare at me instead. \n\nThroughout breakfast, his eyes kept tracking up to that cabinet, staying there longer and longer each time. I let my eyes fall to his hands and tried not to wince in understanding. \n\n\"You're shaking,\" I said as we cleaned up the dishes. Orin and Bren had retreated back to Bren's room, leaving us alone. He dunked his hands deep into the suds and turned away from me. \n\nThere was something about that motion, something about the way he moved his body towards me even as he turned his head away that had me shifting behind him, my fingers sliding down his arms. He shuddered but didn't try to move away. \n\n\"You okay?\" I murmured into his the back of his head, knowing full well that he was jonesing, bad, and that his shakes would only get worse until he got whatever it was that he needed. \"You coming down off something?\"\n\nHe froze beneath me and I planted a kiss where my words had fallen, trying to sooth the abrasion they had made. \"No,\" he muttered, lying blatantly after clearly being on X the night before. He grabbed another dish from the suds. \"I was just thinking about getting a drink, is all.\"\n\nI slid the dish from his hand and turned him around to face me. I could feel both of us remembering that I was still in nothing but my boxers, and felt his fingers skim my bare stomach leaving a trail of soap suds. I shivered, pushing my hand into his hair, and met his eyes with mine. \n\n\"So go get it,\" I told him quietly, watching him react to my touch. His eyes fluttered and I wondered if it was at the idea of a drink or the way my skin pressed up against his. I moved my lips down to his, and I swear I felt him whimper. It was so out of character that I paused for a moment, worried that he wasn't alright. But then his fingers tightened on my hips, pushing my breath out of me with a hiss, and I figured that he must be at least okay. \n\n\"Unless you don't want to,\" I whispered against him, and he shifted.\n\n\"You don't want me to.\" I could hear the indecision in his voice. Fuck, he was right there, he was so close.\n\nI lifted away so I could look him in the eyes. \"I don't care what you do,\" I lied, because in the end what I wanted didn't matter and I didn't want it to color his decision, and besides, I didn't think he would want me to care. Options don't care. And I wasn't even an option to him, really. I was nothing but an easy drink, a cliff to run full tilt off of. Cliffs don't have feelings. Cliffs don't try to stop you from jumping. \n\nBut the moment I said those words, his face darkened. I felt his hands push off from my chest, trying to get away from me and I let them push me, let him have the space as I watched, confused at the change that was taking place before me.\n\n\"Fuck you,\" he said, \"fuck you to fucking hell, you and your moral bullshit. Your fucking games.\" I watched him climb up on the counter and yank open the cabinet, grabbing the first bottle he saw. \"If I wanna drink, I'm gonna fucking drink, or take E, or K, or fucking speed you fucking asshole.\"\n\n\"Hey,\" I said, starting forward, but he was moving fast and angry. \n\n\"Fuck you,\" he said one more time, and then he was out the door, slamming it behind him. \n\nI stared at the space where he had just been, the air he had just been breathing with me, so close to me, so fucking close. Then I let out a quick, wordless shout of frustration and headed into my room. \n\n\"Coop?\" I'd startled Bren out of his bedroom, his shirt off and his pants unbuttoned. \"everything okay?\" \n\n\"Fucking fine,\" I hissed. What the fuck had I missed? Why the fuck did I care? \n\n\"Uh.\" Bren was watching me closely, so I held up the bag in my hand and shook it. \n\n\"I'm going to the gym.\" \n\nHe nodded and I slammed open the door, only to stop dead at the sight of dark, curly hair at my doorstep. \n\n\"I don't need your fuckin' booze,\" he told me, shoving the bottle into my chest. Our eyes met for a moment; his, dark and angry and accusing and mine, confused and angry and, if there were accusations there, they were all for me. Then he turned on his heel and stomped down the hall. \n\n***\n\nFuck. I'd thought for a minute, that maybe, just maybe. I'd seen something on his face, some fucking tenderness, or idiocy, or soft bits where there's usually just hunger and I let myself believe, let myself think.\n\nI stopped and leaned on a wall, pressed my forehead into the brick. Fuck. As if anyone could feel that way about me. He was just trying to get me the way he wanted, just trying to use me like everyone else. Just in a different way, just wanted a different thing, but after he got it what use was I to him anymore? What fucking good was I, when all he wanted was some part of me? Some idea? He was just like everyone else, I knew that, he was no different and why the fuck did that make me feel so fucking sick?\n\nBecause he wasn't like everyone else. Because he was different. Because I needed him to be something that he wasn't, and I didn't need his booze but I fucking needed him and he wouldn't, and he didn't. \n\nI shocked myself by starting to cry, right there on the sidewalk. \n\nIt was more than this stupid guy and the stupid ways he made my stomach want to eat itself, if I was being honest. Yeah, the guy was amazing, and I wanted him, and I wanted him to want me, but shit was getting worse than that. Shit had become more. Yeah, there was him, and the way he wouldn't fuck me even when he could, the way he told me he wanted me, and there were his eyes, so green and so bright and so cold, and his voice and the way he commanded and then the next instant soothed. His lips, and all the things he'd made me taste. Even if those memories were only half remembered.\n\nFuck. How strong must those feelings have been, to make it through all the shit I had done, to drag themselves past all the walls I've been so fucking careful to put up. Fuck his lips. Screw his way of making me want him. \n\nBut it was more than that. Now, it had become more than all of that. It was the way I had eaten breakfast, for the first time in a long time, the way pancakes had tasted in someone else's home after I hadn't even done anything, hadn't made any lies, any advances. How I had made some other kind of thing, created something with my own hands, and they had liked it. All of them. They had taken the things I had created into their bodies and didn't act like it poisoned them. It was the thanks they let fall from their lips, it was how easy that had seemed to them, how genuine, the way I could exist in that space. It was the sound of happiness and joking and the way that had somehow lifted things inside me that I hadn't even realized were heavy, those things that now threatened to drag me down to the deepest, darkest, fucking-est pits of the places I always was, would always be. \n\nWhy couldn't he see that? Why didn't he look at me and understand that I was nothing, that I was anything but someone you ate pancakes with for no reason except to eat pancakes, that the strings that I always attached to actions were the only things holding up my goddamn life? \n\nHe kept cutting at those strings. Kept hacking away at the ways I lived, at the things I did to survive. When I fell, when there was nothing left to hold me, what the fuck did he think I was going to do? How the fuck did he think I was going to be able to live? It wasn't like there was going to be someone there to catch me. Fuck, it wasn't like he would be there, his arms open, his eyes green and looking at me, only me, my name on his lips...\n\nFuck. \n\nIt had been really, really fucking stupid to give him back the alcohol. I needed a drink right now, and I didn't have any money, and not a lot of bars served me without an ID. But I had felt so guilty, had felt so fucking shitty with that stupid bottle in my hand. Somehow I knew that I wouldn't be able to drink it anyway. Somehow, I think that bottle might have done for alcohol what he'd done for speed, and I couldn't fucking have that. Not now. Not when I was like this.\n\nNot when I was all the things he had made me. \n\nI remembered, with some embarrassment, that I was still leaned up against the brick wall of the alley I had thrown myself into. I pushed myself off the wall and wiped at my treacherously leaking eyes, and I realized that my hands were shaking. Bad.\n\nFuck this. Fuck all of it. \n\nI stalked off down the street, jamming my idiot hands between my arms and my body, trying to keep my shakes to myself as I ran through my list of men who would open their doors for me at this early hour and knowing that, like I always seemed to do, I would end up blowing Chad for a free drink in the backroom of that stupid fucking bar. \n\n***\n\nCH 8 \n\n***\n\nI tried everything to keep me out of that bar. Excuses, lies, halftruths. Anything to keep me away from that place, to keep me away from him. \n\nHe was bad for me. There was nothing I could do. \n\nI dreamed of him, dreamed of him often. Sometimes he would be fighting and he would take a bad hit, and I would watch him fall, unconscious, beneath the feet of men who didn't care. Sometimes he would be beneath me, and I would kiss him and he would smile, and his pupils were the right size and his smile was true and he gave himself to me, for me, and I would wake up with my sheets soaked and my heartrate up. Other times I would see him lying in the parking lot, his breath slowing, his heart slowing, everything slowing but the pulse of the nightclub behind him, alone but for the the bouncers, statues, looming large above his corpse. \n\nSometimes, in those dreams, I would look away to yell at the bouncers and look back down and his face would be my own. And I would wake, again, my sheets soaked and my heart pounding. \n\nBut none of this was fair to him. How could I look at him, how could I act around him, when I couldn't even divest his experiences from my own? He wasn't me; he was his own person, with his own experiences and reasons for doing what he did. Who was I to tell him what he should be doing? Why the fuck did I think I had the right to ask him to stop?\n\nAnd yet. And yet. I remembered, so well, so clearly, how it felt to be in those bars, how it felt to live only through the quick rush and slow falls. The pain the next morning when the deals you made came collecting. The soreness, inside and out. The anger. The isolation. "
    ],
    "authorname": "nakamook",
    "tags": [
        "gay romance",
        "addiction",
        "gay anal",
        "hand job",
        "long",
        "plot",
        "gay novel",
        "healing",
        "mma"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/fighters-1"
}