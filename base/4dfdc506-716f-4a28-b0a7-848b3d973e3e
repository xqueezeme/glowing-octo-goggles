{
    "title": "The Choosing Ch. 09",
    "pages": [
        "The next morning I went with Hatha to find Askel. He was guarded in the stable tent. The horses had been removed to pasture for the day so while the tent had the aroma of a stable there were no actual horses.\n\nThe straw floor was fresh and it had been cleaned as well as a stable could. Roth was fond of his mounts. I knew that they lived a far more luxurious life than the average Vandarran peasant.\n\nAskel was huddled in a corner, his head cradled in Leia's lap. Hatha, in her own special way, bullied the guards to leave, making them remain outside the tent during our visit.\n\n\"Leia,\" Hatha said as soon as the guards had departed, \"come with me. We'll gather herbs for a soothing tea.\"\n\nLeia shook her head, looking down at Askel's bruised face. \"I should not leave him.\"\n\n\"I will care for him sister,\" I said.\n\nShe met my eyes. Wary. I saw her hesitation. She did not trust me with his safety.\n\nIt was Askel who made the decision. \"Go,\" he croaked.\n\n\"I won't be long,\" she murmured, laying his head gently on a rolled horseblanket.\n\nShe watched me the whole way to the tent flap, pausing at the exit as if she might return. It took the tug of Hatha's hand to get her to finally leave.\n\n\"Mistress?\"\n\nI stared intently at him, wondering how to start. The healing had come so easily with Hatha. I did not know what to do. He was laying on his back, his head propped up on the blanket roll. His shirt was half open and I could see a mess of yellow, purple and green marks. \"You look like a sick rainbow Askel. Or a half rotten fruit.\"\n\nHe chuckled and then winced at the movement.\n\n\"Are you in much pain?\"\n\nHe put on a brave face, as brave as a face that battered could be.\n\n\"Can you stand unassisted?\"\n\nHe shook his head and hissed at the movement. I had to heal him. Even the slightest beating could finish him. I risked his life leaving him this way. I took his hand in mine, lacing our fingers together. I closed my eyes. I thought of his grin. The way he spoke of my sister, how brave he was on his knees speaking the truth to Roth. I liked him. I loved him. I let the feelings grow. He groaned. I opened my eyes and looked down. He was not in pain. He could feel it too, the pleasure that grew from my love.\n\nUnlacing our fingers I brought his hand to cup my breast. He took the weight and squeezed. I sighed, rocking into the pleasure. He kept his hand on my breast as I unbuttoned his shirt. When it was open, with soft hands I stroked a path down his bruised chest. He arched his hips. His erection bulging against the placket of his breeches.\n\n\"Take and Give. Give and Receive.\" I opened the laces of his breeches, releasing his cock. It glistened with precum, wet and shining. I slicked a finger across the fat head until the tip shone with his juices.\n\n\"Give.\" Instinctively I painted the symbol on one nipple. \"Receive.\" And another on the other side.\n\nHe hissed. His hips jerking. The cock I cupped in my palm pulsing hard and hot.\n\nI lowered my mouth, licking first the slit and then taking the fat head between my lips. He groaned. The sound shot through me from mouth to sex. The tether at my neck burned, throbbing painfully strong with each suck of Askel's cock.\n\n\"Mistress. Mistress. Mistress.\" He chanted the words as if he was using the title to draw in air.\n\nForces from within, forces from without moved to work my body. I had no reason, no purpose other than the force of heat that burned in my sex. I released his cock from my mouth. It slapped back onto his belly. I tore at the fastenings of my bodice, eyelets and hooks were too slow to undo so I began to tear them apart. One by one they popped open until the altar of my breasts were bared to him. He seemed to know at once what I wanted from him; his hand went to his spit slick shaft and began to pump down on it. He grunted, his arm working fast and hard on his cock, grasping the tip then gripping down the shaft.\n\n\"Yes. Yes. Yes,\" I chanted with each push and pull of his hand.\n\nHe thrust his hips up. I leaned forward until the tip of my nipple brushed his cock. That contact was the moment that broke him, sent him over into the offering of his sweet release.\n\n\"Give it to me. Give it to me.\"\n\nHis cum spurted hot across my breasts. I watched the plump head of his cock contract and jerk, wrenching out every drop of his seed. When he had finished I took the offering of his release, dipping my fingers in the slick moisture and painting the symbols of healing over my breasts and his chest. I steepled my cum slick hands between my breasts, at my sex and then finally upon Askel's mouth, where he moaned and licked them clean.\n\nThat was how Leia found us. Me bare breasted, sweaty and covered in Askel's cum, leaning over him as he sucked on my fingers.\n\n\"Talia! How could you? How could you.\"\n\nThe pain of her voice cut through the joy of the spell we had shared. I fumbled at my bodice, trying to pull the ripped halves together and cover my breasts.\n\n\"Slut,\" she yelled, \"Whore!\"\n\n\"No. No.\" Askel held out a hand, drawing himself up on his elbow with the other arm. Half seated, his breeches still lay open, his spent cock laying against his stomach. Leia gasped at the sight. He looked down, cursed and quickly tied off the fly. \"Leia, it's not like that. The Vessel was healing me. See. Look.\" He waved a hand down his body. Already the mess of bruises had started to clear, his chest no longer purple, only tinged slight yellow.\n\nLeia brought up the fist full of herbs and waved them at me. \"I was healing him. I was. He's mine.\"\n\n\"He is Sarran. He also belongs to The Vessel,\" Hatha said, gently guiding down the fist that Leia still waved. 'She is right to protect him. She is right to heal him.\"\n\n\"Leia.\" I stood and she backed away. I took one step and she was gone. Running from the tent. I went to go after her but Hatha held me back.\n\n\"Let her go.\"\n\n\"But she's so angry. She hates me.\"\n\n\"She doesn't understand.\"\n\nI laughed. \"How can I make her understand when I don't?\"\n\nHatha drew me into a hug. \"I know. I know. Mistress,\" she murmured into my hair. Her gentle hands came to re-hook the eyelets of my bodice that I had not torn. I looked down, watching her nimble fingers as they worked the hooks and eyes together.   Askel had come to his feet behind. \"Mistress.\" I heard his voice and looked back. He was on his feet, looking crumpled but not unlike the brash young man I had first met in the Sarran keep.\n\n\"Will you sit with me?\" he asked.\n\nI nodded and slipped from Hatha's embrace to follow him to his pallet. We sat on the ground, Askel leaning against one of the tent poles.\n\n\"Mistress. The limit of the tether will be upon you soon.\"\n\nMy hand went reflexively to the mark. \"I know.\"\n\n\"There is only days until the next moon.\"\n\n\"More than anyone I know,\" I snapped.\n\nHe flinched. \"I regret my actions that have brought you to this point.\"\n\nHatha snorted, I lay a hand on her arm to quiet her.\n\n\"I offer myself to you. You have my pledge to tether to you\u2014 taking none of the power, none of the control.\" He looked at Hatha. \"I will blood bond it.\"\n\n\"Is that possible?\" I asked Hatha.\n\nShe shrugged. \"We cannot know Mistress. The tethering has never been tested this way. We do not know the limits of the spell. It could work. It could not. I think it would depend on the lure of the power. It would be hard, even for the best of men to resist wielding the power you will amass Mistress.\"\n\n\"And I am not the best of men,\" Askel said, drawing his knees up and hugging them to his chest.\n\n\"You are certainly not the worst,\" I answered him with a slight smile. He grinned and it gladdened me to see it. \"Let me think on it Askel. I have much to consider.\"\n\nI came up on my knees to stand but was stopped by a hand on my thigh. \"You will not tether to the Dark Prince will you Mistress?\"\n\n\"I do not know Askel. He's strong, but he is also kind and fair. He is merciful. I could perhaps win the freedom of the Sarran, stop the bloodthirsty land grab of Beatrix. Save the humans.\"\n\n\"If you give up your freedom and trust him with your submission.\"\n\nI laughed, shrill and high. \"Yes, it does not sound like much does it? A cheap price for freedom.\"\n\nHis fingers dug into my thigh. \"You joke Mistress but this is serious.\"\n\nI looked down at the hand pressed into my thigh and then back up at him. \"I joke Askel because I do not have time to weep. Take care of yourself...and my sister.\"\n\n\"Yes Mistress.\"\n\nI held out my hand to Hatha and together we left the stable tent. I walked slowly, my eyes at my feet, watching each step I took. I trusted Hatha to guide me back to our tent so I did not even look where we walked, instead I watched my feet and pondered. Pondered each step that had brought me here to this point. My refusal of Bandar's claiming, the Choosing, meeting Nadar, fleeing the Night Palace, the betrayal of the Sarran\u2014I chewed over each step, trying to find a way to stay alive and free.\n\nThe more I thought the more I realized there was no way. No way to stay both alive and free. One had to give.\n\nI was deep in thought when it happened. Hatha pulled me back behind her but she had no power to protect me from the wrath of an angry Dark Master. Astrid grabbed my hair, dragging me like a dog leashed. I had to follow for fear of losing my scalp. Pain bit at my head and my tether mark.\n\n\"Liar. Filthy Sarran liar.\"\n\n\"What lies? What lies?\" I gasped, trying to keep up with her pace and ease the wrenching of my scalp.\n\nShe pushed me away with a shove. I landed on my knees, my face almost planting in the dirt.\n\n\"What lies?\" She brought the pointed toe of her boot under my chin and shoved my head up. \"Is there something you forgot to mention?\"\n\n\"What?\"\n\nMy answer earned me a boot to the chest and sent me reeling back, sliding my arse on the dirt. I flailed my arms, trying to right myself. \"Please...\" I broke off when I saw who was standing behind Astrid.\n\nLeia.\n\nAnd I knew. I knew at once what Leia had done. What Astrid now knew.\n\n\"What's on your back bitch?\" Astrid strode forward, grabbing my hair and wrenching my head forward until my chin hit my chest with a thump. \"What's this Sarran mark of power, you forgot to mention?\"\n\nMark of power? What had Leia told this mad bitch? She was going to kill me.\n\n\"Roth! Nadar!\" I yelled, frantically looking around for them.\n\n\"It's just me and you. They've gone, looking for evidence of Malchard's personal guard.\"\n\n\"He'll be angry. He'll punish you.\" I tried reason but I knew the attempt was futile. She had succumbed to fury. I had seen such madness before; she would not come back from this brink. I would die. I tried to muster the anger that had created the lightening that killed Bandar, all I felt was panic.\n\n\"He'll see the truth. The Dark Prince will know your lies.\" I saw her short fangs descend. She pushed me back until I was flat on the ground and planted her boot in my chest. My bodice gaped open, my breasts heaved, almost exposing my nipples with each gasping breath. She flicked out her hand and crouched down to me, the point of her boot almost piercing the skin of my chest. Her razor sharp thumbnail pressed at my pulse.\n\n\"I'll slit your neck traitor and drink you dry.\" She smiled. I flinched and tried to draw back. She leaned in and I knew then there was no hope.\n\nGasping in a breath, my head rang with the fear pounding in my veins. I focused, trying to find the heat that had protected my sister from Bandar. I tried to cry out, find my voice, call upon my power, but it stuck in my throat choking me. All that released was a croaking hiss.\n\nShe laughed. Threw her head back and laughed. A choked, desperate cry wrenched from my constricted throat. Her nail pressed into my pulse. I heard the pop of the skin, felt the burning sting of the first cut. I flinched, waiting for the final brutal slice but it did not come. There was a thump, the sound of scraping metal and then Astrid's headless body fell upon my chest, gushing blood from her neck.\n\nI screamed. Flailed and pushed at her shoulders. Blood spurted on my face from where her head had been. I scrambled up on my hands and feet, crab walking back from the headless corpse.\n\nA hand came at my back, grabbing the neck of my bodice. It wrenched me up to my feet. There was screaming. Soul shredding screaming and blood. It was only when the hand clamped over my mouth and the screaming stopped that I realized it had been me.\n\nHands came under my arms and pulled me up onto a horse. Chainmail arms wrapped around me, holding tight. The horse started as they lit the tents. Oil lamps blew in loud pops, glass flew.\n\n\"We ride!\" the man at my back ordered. I heard a cry of, \"Aye, Captain.\"\n\nAround me horses came into formation. Red cloaks. Black helmets. Uniforms of the Queen's guard.\n\nMalchard.\n\nThey were taking me to Malchard.\n\nI fought. Struggling at the hands that held me tight. The Captain laughed and pulled me closer.\n\n\"Fight. Yes, fight. I like that,\" his breath blew rank against my neck. I could taste his putrescence.\n\nWith all my might I dug my elbow back hard, aiming for his groin. I hit the base of his chest shield, my elbow rocketing back with searing pain. He laughed. I'd done nothing but hurt myself. I sucked in a breath, tasting the metallic ring of coming rain.\n\n\"Ride hard,\" the Captain of the Queen's Guard yelled to his mounted troops, \"The rain comes soon.\"\n\nHe'd barely gotten the words out before the first volley of rain struck. It came like an attack, bucketing down, a freezing wall of water descending upon us. It was the kind of rain that made you feel as if you might dissolve, as if the force of the water might strip the very skin from your bones. I hunched over, trying to keep the sting of the hard fat raindrops from my face, letting the water beat down on my back. The horses began to slip but the guard did not slow his pace. I was only half on the saddle, wedged painfully on the hilt. I dug my fingers into the straps I could reach, trying to keep grip on the horse's slippery pelt.\n\nAs I rocked and slipped, I began to gauge the odds of survival should I just let go and slide free. Should that even matter? Did I need to survive? Did I deserve too? If I was a better person, a stronger person I would have just slipped free, happy to meet my fate just to avoid becoming the tool of Malchard. But I wasn't that strong. I wasn't strong enough to die. Even if it was the right thing to do. I'd thought I could. When I'd first been told of the curse of the tether I'd believed I could pay the price of death for my freedom, but the closer the time came to paying the less I thought it so.\n\nI wanted to survive.\n\nNo! More than that, more than mere survival I wanted to live.\n\nA spark of desire began to burn in my chest. A kernel of hope I latched on to with all my might.\n\nI would survive.\n\nI would live.\n\nI would not tether to Malchard.\n\nI would fight. Fight and win.\n\nI closed my eyes, centering myself, seeking the power I had once yielded against Bandar. The rain, the rock of the horse, the bite of the saddle\u2014it was all too distracting. I couldn't focus.\n\nMaybe when we stopped. When I no longer had to fight to stay upon the slippery horse... My thoughts were cut off by the abrupt halt of the horse. We stopped so hard that I almost came hurtling off the front of the beast. It was only the Captain's grasp at the waist of my skirt that stopped me from falling forward. My wet bodice gave way, my breasts tumbling out, nipples pointed and hard.\n\nThe rain acted as a grey curtain. I could not see what made us stop, what caused the guard behind me to curse, pull hard on the reins and back up the horse. I brought a hand to my eyes, shielding them from the rain. Frowning, I tried to focus.\n\nA blood curdling scream from the right turned my head hard and fast. I saw now what had halted the Captain.\n\nRoth.\n\nI swallowed hard and watched the wondrous horror unfold.\n\nFew had seen a Dark Master fight. Those who had were usually on the receiving end of their vicious wrath did not live to tell such tales. The stories I had heard were whispered tales told late at night by men well into their cups. They spoke of death dealt with razor sharp fangs, fists of iron and men torn into pieces. The spoke of butchery\u2014vile unspeakable acts of brute force.\n\nIt was not so.\n\nRoth danced with death. It was a brutal ballet of precision and carnage.\n\nHe came in with a speed that blurred his movement. A blood red and black across the grey curtain of rain. I thought for a moment that he flew, but he didn't. It was just the height of his jump, the poise of his attack that made it seem so.\n\nIt was all so fast, but so precise. So strategic that it seemed as if it had been choreographed. He brought the horse down first. The beast lumbered after a swift attack to its knees. The rider rolled down to the rain slick earth, tumbling to Roth's feet. He picked him up like paper thin refuse, crumpling him in one fist. I heard the crunch of bones, the split of skin and watched as before my eyes his life blood spurted red into Roth's open mouth.\n\nThe Captain of the Guard gripped me tighter. He'd brought his arm to my neck, squeezing me into a head lock. A volley of curses rang in my ears as he backed up his beast, trying to get away from the massacre unfolding before us.\n\nOne, two, three fell before us. Horses bellowed in pain, men cried out in fear. There were no painful cries from them; they died too fast to issue a sound.\n\nMy abductor looked to flee; he drew the horse to the left and then the right looking for an avenue of escape. There was none. Roth was too fast. He boxed us in, stalking closer and closer.\n\n\"Let me go,\" I yelled. I tried to turn my head to face the Captain but the arm around my neck squeezed tighter. \"Save yourself. Let me go and escape.\"\n\n\"Lord Malchard,\" the Captain answered and I heard the fear in his voice. How awful was Malchard that he feared him more than the very real dark wraith of death that stalked him now?\n\nHis arm bit into my neck, my windpipe crushed into the muscle. I struggled for breath that did not come.\n\n\"I'll kill her. Back off or I'll kill her.\"\n\nRoth halted. The arm let up and I was able to choke in a gulp of air.\n\n\"You will not have her,\" the Dark Prince did not yell but his voice was heard clear and loud over the beat of the rain.\n\n\"I have her now,\" the Captain yelled back with a short unconvincing laugh.\n\n\"Not so,\" I heard from above, I looked up to find a dark angel perched above me. Silver and black, arms held out like dark wings. Before I could blink to check the apparition, I was plucked up out of the Captain's arms onto the bough of a tree.\n\n\"Nadar,\" I whispered, the sound squeezed out of my bruised throat. He held me to his chest and I sank into him. He stood on the bough, picking me up with him and tucking my legs around his waist.\n\n\"Hang on,\" he murmured in my ear. I nestled my head at his shoulder and hooked my arms tightly around his neck.\n\nHe leapt from tree to tree, grabbing and swinging us along the tree line with graceful ease. When we were a good distance from the Captain's horse he stopped and pulled me tight to his chest. I heard the Captain cry out and I tried to turn to watch but Nadar gripped the back of my head. \"Don't look. You don't have to look.\"\n\n\"Let me go.\"\n\nHe helped me to my feet on the bough beside him. Using the trunk for balance I eased myself down to sit. He sat beside me.\n\nThe rain had eased to a soft fall. Beneath us lay all nine of the crumpled blood drained bodies of the Queen's Guard. The only one still standing was now gripped in the fist of the Dark Prince.\n\nThe Captain's right arm hung loose like a marionette's limb.\n\nI could see Roth's mouth moving and hear the moaned replies of the Captain. The answer did not please the Dark Prince. From our high perch I saw his body snap tense. The Captain's moans came faster as he issued a futile plea for his life. Death came fast. Roth shook his fist jerking the Captain to his mouth and clamped his fangs deep into the base of the man's neck.",
        "He struggled, his legs jerking and kicking as he tried to pull away from the fangs. They slowed as the life quickly flowed from him until finally they just hung. Dead and lifeless. When Roth had finished he bellowed, a sound of fury that shook the tree beneath us. He threw the Captain, shattering the dead man's body against a thick tree trunk.\n\nNadar slipped down from the tree to stand before me. He held out his arms. \"Come,\" he said and I pushed off the tree, letting him catch me.\n\nHe whistled and a dark grey stallion appeared. He placed me up on the horse first and then settled in behind me. I fell back into the comfort of his chest. He drew his arms around me, giving me a brief squeeze before taking the reins.\n\nExhausted I nestled my head into the crook of his shoulder and closed my eyes. Sleep came quickly. I gladly fell into it.\n\n- - - - - - - - - - - - -\n\nI'm quite honestly astounded at the comments and emails this work has received. My Mistress Red Pen assures me it's good but I'm all needy and riddled with self doubt. I rushed it to work to a deadline, something I've promised I won't do again but here I am procrastinating on this finished work avoiding my next ebook. (yes Pacofear, I'm writing it, I'm writing it....)\n\nI churned out about 35 000 words in about a three week period. Thankfully my Mistress Red Pen was able to comma check and grammar whip but because I left it so late to finish I didn't get my tweaking time, which means it's forever in draft in my head and I'm not happy with the end result.\n\nOddly, many of you are. (You haven't got to the end yet so maybe I shouldn't speak too soon!)\n\nThank you to all of you who have taken the time to comment and to click on the little stars, I really do love it.\n\nTwo more chapters to come after this one, they'll be put out in fairly quick succession. They won't stay up long though as this work will be published by eXcessica in November. If you want to help a struggling smut writer I'd be ever so grateful if you bought it then. J\n\nBe sweet,\n\nDarcy\n\nxx"
    ],
    "authorname": "darcysweet",
    "tags": [
        "erotic horror novella",
        "horror novella",
        "drama",
        "horror drama",
        "talia",
        "supernatural",
        "roth",
        "supernatural drama",
        "nadar",
        "supernatural erotica"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing-ch-09"
}