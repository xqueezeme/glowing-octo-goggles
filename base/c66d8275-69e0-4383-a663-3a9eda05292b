{
    "title": "Life after the Lottery Ch. 52",
    "pages": [
        "I finally have this finished. Sorry for the delay, I am having health issues again, but they are getting better! I broke the next parts into several chapters. There is a lot of information you need to know if you are a regular follower of LATL. There will be two more chapters that will come quickly. Since it has been a few months, you may need to go back and read the last part of chapter 51. Stick with it!! Copyright LATL, 2016.\n\n*****\n\nLife after the Lottery, Ch. 52\n\nMore things come together\n\nSam and I left the bedroom after we had cleaned up. Amy was cooking dinner. Dawn looked at the two of us and smiled.\n\n\"Sam, come here,\" Dawn said. Sam walked over and sat next to Dawn on the sofa. \"What happened? What did you feel?\"\n\n\"Wonderful.\"\n\n\"I could feel what you felt when I touched James. Honey, you almost felt like I do after James and I do it slowly.\" Dawn said to Sam.\n\n\"Really?\"\n\n\"Yes. It was very intense wasn't it?\"\n\n\"Oh, god yes. I think my brain had an orgasm.\" Sam said and giggled.\n\n\"Perfect!\" Dawn said and hugged her.\n\n\"I'm not sure I did it right?\" Sam said.\n\n\"Honey, there is no right, there is just better. You will get better at it,\" Dawn told her.\n\n\"If it gets any better, I will pass out.\"\n\n\"That is what we will have to work on. You need to learn to control it and enjoy it, so it doesn't overtake you,\" Dawn told Sam.\n\nOnce Sam recovered, she helped Amy cook dinner. After we finished eating Dawn was tired and went to bed about 8:00. Amy and Sam were sitting next to each other talking while I watched TV. I knew Sam was telling her sister about what had happened. The two of them eventually came and sat with me on the sofa.\n\n\"We want to thank you,\" Amy said.\n\n\"I know this has been a different week for both of you. I hope each of you understands that what happened was because of you, not me,\" I told them.\n\n\"We know that now. We just want to make sure it can always be like that,\" Sam said.\n\n\"It will be once you learn more, but you have to understand not all sex can be like that. I think each of you found that even though it is wonderful, it takes a lot out of you. Nice quickie sex is still good, especially if you want that two or three times a night.\"\n\n\"James, does it make you tired?\" Amy asked.\n\n\"It doesn't make me that tired, but Sam, do you want to have sex again tonight?\"\n\n\"It would be nice, but I am very satisfied right now.\"\n\n\"I don't believe that!\" Amy said.\n\n\"When Dawn and I experience that level of arousal and satisfaction, we are happy, and anything else soon is kind of anticlimactic,\" I told them.\n\n\"It would be,\" Sam said. \"But what would be nice would be to share how I feel with my sister,\" she said reaching for Amy.\n\n\"Why don't you two go to bed, I'm going to join Dawn.\"\n\n\"Okay, but I am definitely taking off tomorrow since I need to burn up so vacation time,\" Amy said.\n\nI stood then each of them took one of my hands. I led them upstairs. We stopped at my bedroom, and they both gave me a long kiss then they headed to Amy's room. I got in bed with Dawn; she was asleep.\n\n*****\n\nSaturday morning, Dawn and I were finishing breakfast early. Sam and Amy were still in bed.\n\n\"How many people are coming today for your meeting?\" Dawn asked.\n\n\"Probably 10 or 20 I think.\"\n\n\"Are you planning on feeding them?\"\n\n\"I hadn't thought about it. I don't want you all to cook. I will order some pizzas.\"\n\n\"Sounds like a good idea,\" Dawn said.\n\n\"What kind of plans do you have for this weekend?\" I asked.\n\n\"Not much. I thought while all of you were having a meeting it would be a good time for me to sit down with the girls and have a talk with them.\"\n\n\"That would be good. While you are talking to them, find out when Sam wants to go pick her stuff up from school and her house,\" I said.\n\n\"Honey, I think she may have just told her parents she is visiting her sister for the summer. What is she going to tell them now?\" Dawn asked.\n\n\"Why don't you find out? But, I think there is something going on with their parents.\"\n\n\"I will see what I can find out.\"\n\nAbout 7:45, the phone rang. I picked it up.\n\n\"Hello?\"\n\n\"Good morning.\"\n\n\"Hi, Linda.\"\n\n\"What is your sexy wife doing?\"\n\n\"About to get the girls up. You want to talk to her?\"\n\n\"Please.\"\n\nI took the phone to Dawn.\n\n\"Hi, Linda,\" Dawn said. \"Nothing. James has his meeting at noon...that would be fun! They will be here... From 9:00 till when? Good, that will get me out of the house!\" Dawn was saying. \"They will go. About 8:30? Okay, see you then.\"\n\n\"What will be fun?\" I asked.\n\n\"Linda has made an appointment with her tailor for all of us to join her today. I need to go get the girls up.\"\n\n\"Okay.\"\n\n\"She is picking us up at 8:30.\"\n\nDawn got up and went upstairs. About 8:15 they all came downstairs. I looked, and they all had on some small shorts and T-shirts with no bra except for Dawn. The redheads had their hair in a ponytail.\n\n\"All of you are going out like that?\" I asked.\n\n\"Linda said don't wear much because we would be trying on clothes all day, and getting measured,\" Dawn said. \"We won't be back until 1:00 or 2:00.\"\n\n\"Oh, I was supposed to take notes for James today,\" Sam said.\n\n\"Too bad,\" Dawn said.\n\n\"Don't worry about it Sam,\" I told her.\n\nAbout 20 minutes later, I heard the gate buzz. A few minutes later, the doorbell rang. Sam went to the door.\n\n\"Linda, you have a key,\" I heard Sam say.\n\n\"I know.\"\n\n\"Is that what you are wearing?\" Sam asked.\n\nI turned to look. Linda had on a pair of very short cut off blue jean shorts; the kind where the bottoms of the pockets showed in front and the lower part of her ass cheeks in the back. She had on a sleeveless jersey that came way down in the front, minus a bra.\n\n\"I'm going to be taking my clothes on and off all day anyway,\" Linda said.\n\n\"Linda, I don't think I have ever seen you dress like that, especially going out in public,\" Dawn said. \"I wouldn't have thought you even owned a ratty old pair of short shorts.\"\n\n\"Fuck it. Like you all said. I need to change my image, and I am tired of having to wear less revealing clothes around my own damn house.\"\n\n\"That's a change.\"\n\nLinda walked to the kitchen and gave me a kiss. \"I'm going to take your girls and get them some hot clothes,\" she said.\n\n\"I think what you have on is pretty hot,\" I told her as I ran my hands down and rubbed the bottom of her ass at the end of the shorts.\n\n\"What time will your meeting be over?\"\n\n\"I'm not sure, probably around 2:30 or so.\"\n\n\"We will be back later. I have a surprise for you when we get back.\"\n\n\"What would that be?\" I asked as I slid my hands around to the front of her shorts and rubbed her pussy lips.\n\n\"Something you want,\" she said and kissed me.\n\nI worked the tips of my fingers under the front of her thong and rubbed her wet pussy lips.\n\n\"I want this,\" I said.\n\n\"You better not start anything, we need to go,\" she said.\n\n\"Why don't I fuck you before you go,\" I said as I slid my fingers inside of her.\n\n\"Emmm. Cum dripping from my pussy might make it hard for the tailor,\" she said.\n\n\"We can clean you up. I bet you want my big cock inside you right now, don't you?\"\n\n\"James, don't do this to me.\"\n\nI rubbed her clit while I looked into her eyes.\n\n\"But you want it.\"\n\n\"Yes...\"\n\nLinda kissed me hard and held me for a minute.\n\n\"Stop...we need to go.\"\n\n\"Will you be ready when you come back?\"\n\n\"Yes...James, stop rubbing my clit...please.\"\n\nI removed my fingers from inside of her shorts and kissed her.\n\n\"You are terrible,\" Linda said. The girls giggled.\n\nLinda kissed me again then walked back to the den.\n\n\"Let's go girls!\" She said.\n\n\"You brought the limo!\" I heard Sam squeal when she went outside with the rest of them.\n\nI finished in the kitchen then went out to the pool to clean the grass out that always got in it after they cut it. By 10:00, it was getting warm, so I finished and went inside. I called the pizza place and told them to deliver plenty of pizzas to the house about 12:30. About 11:45, Jeff showed up; I left the gate open on the drive.\n\n\"I'm not early am I?\" He asked when I let him in.\n\n\"No.\"\n\n\"I brought all the printouts and brochures I have been accumulating. There are four others that will be here about 12:30. They can stay awhile before they have to get ready for tonight.\"\n\n\"Let's go to the big table.\"\n\nJeff and I went to the dining room and started going through what he had.\n\n\"Jeff, what were you planning on doing on your own?\" I asked him.\n\n\"I was planning on starting with a luxury white limo for weddings. Where I work, they have one white limo and one silver one. They are always getting calls for weddings and don't have one available.\n\n\"Do you drive for many weddings?\"\n\n\"Plenty, that is why I was thinking about a white one. I can use it at other times too, but the girls getting married want a white limo.\"\n\n\"When you are taking the bride and groom away from the reception, does much hanky-panky go on in the back?\"\n\n\"Oh god, Mr. Smith. You wouldn't believe what happens, especially if I am driving them out of town. Sometimes they can't wait to start the honeymoon.\"\n\n\"Do things like that go on at other times?\"\n\n\"Well, there are you and your girls, but, on Friday and Saturday nights while I am picking up and dropping off at the clubs, yes!\"\n\n\"Any other times you get to watch?\"\n\n\"I guess I better tell you something. Some of the drivers have a list of escorts that we call when needed.\"\n\n\"Like when?\"\n\n\"When executives are in town, some of them will have me call a lady, and I will stop and pick her up and take them to dinner. Sometimes they will end up fucking in the backseat after I pick them up from the restaurant. The executive doesn't want to go back to the hotel with the lady, so I drive them around while they have sex. It can get pretty hot and interesting.\"\n\n\"Do you get anything out of it?\" I asked.\n\n\"Just better tips and a longer drive. The ladies I know are very nice and elegant. Dr. Smith...is that something that will be okay driving for you?\"\n\n\"If that is something you do now and it works out well, sure. One question? What about the lady executives?\"\n\n\"Them too.\"\n\n\"Men and women?\"\n\n\"Usually men.\"\n\n\"Maybe you will have to call me one time.\"\n\nJeff looked at me and smiled.\n\n\"One day you think you could set up a meeting for me with all these ladies?\" I asked.\n\n\"The guys know four or five escorts in town. I can probably set something up. You want to try all of them out?\"\n\n\"I would like to look over the merchandise and have a talk with them. If the other limo companies use them, maybe I can talk them into only working for us,\" I told Jeff. \"Jeff, how many cars does Limo Express have?\"\n\n\"We are the biggest in town...between the cars and the stretch SUV's, ten.\"\n\n\"What about everyone else in town?\" I asked.\n\n\"There are three other businesses that have 4 or 5 cars. There are a lot of guys that have their own, but they stake out the airport mostly.\"\n\n\"We are not interested in that. Counting your company and the other three, how busy do they stay?\"\n\n\"Busy on the weekends.\"\n\n\"What about during the week?\"\n\n\"I make two or three runs a day. Mostly picking up executives at the airport when they have made arrangements and then taking them places to eat at night.\"\n\n\"What about the rest of the drivers.\"\n\n\"I work the most because it is all I do. Most of the other guys just work evenings and weekends.\"\n\n\"I have two sheriff's deputies that are within a year or so of retiring, and they want to do this after they retire. I think they know a few police officers in the same boat. What will it take to take over the limo business in this area?\" I asked.\n\nJeff looked at me stunned.\n\n\"Oh, wow. Several things. First, in this business, the vehicles need to be new and look new. The other small outfits have older cars. There are three or four big celebrity functions in town every year that will only use limos that are new.\"\n\n\"Who controls that?\"\n\n\"There is a small company in town that takes care of all that for the venues. They usually have to bring limos in from out of town because there are not enough new ones locally.\"\n\n\"Make sure I have names and information on that. Why do they just want new ones?\"\n\n\"Because a limo can get pretty run down in a few years if they are not kept up. The celebrities also want to ride in nice limos.\"\n\n\"Do some of the celebrities have their own limos?\" I asked.\n\n\"Some have their own, others in town will use someone they are already using.\"\n\n\"Do any of these celebrities fool around in the back?\" I asked.\n\n\"It is mostly local music stars. I get different ones each year, but yes. I have seen some very famous ladies getting fucked in the back.\"\n\n\"Good. What else?\"\n\n\"Well, what the drivers get paid makes a difference on how well they perform and if you can keep them. My hourly rate hasn't gone up much in three years; they expect us to work for tips.\"\n\n\"Jeff, do you get many executives that need security?\"\n\n\"We don't do it. One of the other places in town handles it?\"\n\n\"How?\"\n\n\"They get a security guard to ride along.\"\n\n\"Armed?\"\n\n\"Yes. I worked for them awhile. There is a call for it, but sometimes it needs to be more than a guard in a uniform.\"\n\n\"What else does this town need?\" I asked.\n\n\"Party Limos. We have two stretched SUV's, but they are not really party limos. You get 8 or 10 people that want to ride around and party, and you can make $300 or $400 an hour.\"\n\n\"What do limos like that cost?\"\n\n\"They start around $150,000 for the stretch Hummers and Escalades. You have to charge a lot because the wear and tear is high.\"\n\nThe doorbell rang. I went, and it was Steve and few other deputies. While they were coming in, three other cars pulled in the driveway. Two were Jeff's friends, and one was Sam. They all came in and introduced themselves. We were all starting to talk when the doorbell rang again. There was a limo in the drive with five guys and lady climbing out. I found out they were more friends of Jeff's. The pizza guy also drove up. I now had 15 people at the table.\n\n\"Well, hello everyone. I wasn't expecting this large of a turnout,\" I said.\n\nEveryone talked and added what they had planned to the information while we ate. Most of them had the same ideas that Jeff and I had spoken about. I grabbed our three portable computers and put everyone to work looking at new limos.\n\n\"Mr. Smith?\" One of Jeff's friends asked.\n\n\"Yes.\"\n\n\"Are you planning on starting and entire company with a lot of limos?\"\n\n\"If all of you can convince me that I can keep all of you working full-time and that we can take a lot of business away from everyone else, yes.\"\n\n\"That is a pretty tall order, and will take a lot of money.\"\n\n\"Okay, while we are on that subject, how many of you were planning on buying your own limo?\"\n\nTen of them raised their hands.\n\n\"Mr. Smith, even at a $80,000 for a limo, we can make more money driving our own limo than working for someone.\" They all agreed.\n\n\"How long would it take you to pay off the limo?\" I asked.\n\n\"Usually, about the third year it is nearly paid off, then we would sell it and buy a new one. That is the way it goes.\"\n\n\"Okay. With tips and everything and after paying for the limo and upkeep, what would you expect to clear a year after expenses?\" I asked.\n\n\"At least $35,000 or more,\" someone said. \"We don't make that now driving for other companies.\"\n\nI had passed around some notepads for everyone to take notes.\n\n\"Let's take a break for a few minutes. I want everyone to write down your information on a piece of paper. Make sure I can get in touch with you. I also want to know how long you have been driving, how much you drive now, and, if you were planning on buying your own limo and if you want to use the money to invest in the new company, and how much.\"\n\n\"What will be our payback?\"\n\n\"That we will have to figure out. Sam, come with me a minute.\"\n\nI took Sam to the kitchen to get a beer.\n\n\"Have you looked into what it will cost to wire a limo with cameras and sound?\" I asked.\n\n\"Well, the equipment will be around $4,000 or so, that is not the problem. Getting it installed is. I don't want to be taking custom limos apart to run wires and cameras. That should be done by someone that knows what they are doing. Preferably when they are built.\"\n\n\"Hmm. I will be getting limos from several different places,\" I said.\n\n\"All that has to be run is some shielded cable bundles, just like I use in the house. Do you think you could get the people building them to at least run all the cables?\" He asked.\n\n\"I would hope so for what they cost.\"\n\n\"If I can get the blueprints, I can outline where to run the cables. If they can do that, we can find someone at a body shop to help install the rest of the equipment.\" He said.\n\n\"What are you going to use to record on?\" I asked.\n\n\"A DVR with a lot of memory, then dump it to a DVD. I won't have to worry about anything bouncing that way.\"\n\n\"And it will all run off 12 volts?\" I asked.\n\n\"That's not a problem.\"\n\n\"Okay, I will have to make plans to talk to the manufacturers. I will need your help.\"\n\n\"How much money do you think you will get from them?\" Sam asked.\n\n\"I'm thinking $400,000 or $500,000 at most.\"\n\n\"What are you putting into it?\"\n\n\"A couple of million.\"\n\n\"I can give you 500. I need to invest in some other things.\" Sam said. \"I made a lot of money this year.\"\n\n\"Maybe we can put Olivia in charge of Marketing.\"\n\nWe went back to the dining room. Everyone was finishing up.\n\n\"Let's talk business structure,\" I said as I sat down.\n\n\"That is your area,\" Deputy Steve said.\n\n\"We will have to incorporate to prevent personal liability. We have a couple of choices. We can form a limited liability corporation which will shield everyone from financial and personal liability, or we can form a regular stockholder corporation.\"\n\n\"What's better?\"\n\n\"The LLC is the first choice. It is like a stockholder corporation, but the ownership would be divided according to how much stake each of you put into it. A regular corporation would be set up similarly, but you would purchase stock for your ownership share.\"\n\n\"Is there an advantage?\"\n\n\"The bulk of the profit is taken out of the LLC at the end of the year and distributed except for any that is voted to leave in the company for anything needed. The regular corporation would pay dividends on the stock, distributing mostly quarterly.\"\n\n\"How do we get paid?\"\n\n\"Either way, I guess hourly plus tips before the profit is distributed. But, you have to remember, it may take a year or two to make enough profit for significant distributions.\"\n\n\"What about the ones of us that just want to drive,\" someone asked.\n\n\"For those of you, that just want to drive. You will be paid better than you are now, and I think the tips will be much better because we are going to be offering very professional services. However, either way, you would have the option of buying stock if you want to at some other time.\"\n\n\"That sounds good!\"\n\n\"Mr. Smith. If we are going to start a nice company, we are looking at at least ten limos or more,\" Jeff said. \"That will make a huge dent in $2,000,000. Plus, an office and place to park them and wash them.\"\n\n\"At least ten. We will work on that. I have the money. Once I see how much everyone has to invest, we will figure it all out.\"\n\nEveryone went to work discussing what type of limos and looking at them on the internet. This took a few hours and some more discussion about cost. We were all making a list of the different limos we needed when I heard someone pull up outside. Our meeting was running long; I was hoping it was not Linda and the girls. A moment later I heard all the giggling when the girls came in the front door. Everyone looked up to see who was coming in.",
        "\"That was a lot of fun!\" I heard Dawn say as she stopped at the end of the dining room. \"You all still at it?\" She asked.\n\nI saw Rachel move next to Dawn to see who was there. She looked around and saw four cops in uniform and three deputies in uniform.\n\n\"It is okay, Rachel. Yes, we are making a lot of plans. We are deciding on what type of limos to order right now,\" I said.\n\nI saw Linda step next to Dawn and Rachel. I even stopped to look at her long legs coming out from the shorts she had on and her cleavage. All the guys were looking at her. She walked into the dining room and looked over my shoulder.\n\n\"You appear to be very serious about this,\" Linda said as she looked at pictures on the portable computers we were looking at. All heads were turned to look at her.\n\n\"We are. We are going to start a new company and take over all the business in town,\" Jeff said looking at her.\n\n\"Sounds like big plans. James, if you need any money, just let me know. It is getting near the end of the year,\" Linda said as she leaned over to look over my shoulder. I looked over and could see her tits and nipples inside her jersey.\n\nI immediately saw all the guys looking at her breasts and nipples as they hung down in the jersey.\n\n\"I like that stretch Hummer with all the lights,\" she said.\n\n\"We are going to get at least one,\" I told her.\n\n\"Let me give you some advice. Get some nice town cars too. A lot of executives at my place need a nice car service, not a limo. No one in town has nice town cars available.\"\n\n\"Okay, we will look at them.\"\n\nLinda stood up and walked out of the dining room. We were all looking at her long legs and ass as she walked away. The girls all went to the den and sat down.\n\n\"Who is that?\" Jeff asked.\n\n\"Linda Williams,\" Steve, the deputy said.\n\n\"The Linda Williams?\" Jeff asked.\n\n\"Yes, she is a friend of ours,\" I told everyone.\n\n\"Damn, she is hot,\" Jeff added. I heard a few 'yes she is' comments.\n\n\"Who are all the other women?\" Someone asked.\n\nI pointed out Dawn and my girls.\n\n\"Who is the cute girl in the suit?\" Our lady driver asked.\n\n\"That is Rachel; she is Linda's bodyguard.\"\n\nI knew Linda's limo was a nice one.\n\n\"Linda, can we go out and look at your limo!\" I yelled at her.\n\n\"Sure!\"\n\nWe all got up and took a break and went outside. She was in her 6-passenger mobile office. Everyone took some time looking at it since it was outfitted as an office.\n\n\"James, we have to head to work,\" the police officer I knew said. \"When will we get together again?\"\n\n\"Hey, everybody! Some people need to go to work. Is Saturday morning or noon a good time for everyone?\" I got yeses from all of them. \"How about planning on the next meeting in two weeks. I will have everything together and a list of limos we picked and a budget.\"\n\n\"Sounds good,\" several said.\n\n\"Okay, we will plan on that. If anyone has any questions, call, or email me.\"\n\nThe police officers left, the deputies said they had to go soon. After we had finished looking, we went back inside. All the guys paused to check out all the beauties sitting in the den sipping wine before returning to the dining room. We finalized a tentative list of 10 limos to get prices on. A while later, everyone left. I joined the girls sitting between Linda and Dawn\n\n\"So, what is the plan?\" Dawn asked.\n\n\"Everything is going well. I think the ones that want to invest can come up with a half a million or more.\"\n\n\"James, where are you going to locate your business?\" Linda asked.\n\n\"I haven't started that part yet.\"\n\n\"Are you going to let people have sex in the backseats?\" Linda asked with a laughed.\n\n\"Sure. We are going to have cameras in the limos.\"\n\n\"What!?\"\n\n\"I thought it might be a nice extra for the more adventuresome.\"\n\n\"Are we going to have any party limos?\" Amy asked.\n\n\"Probably one party bus and one or two stretch SUVs for parties.\"\n\n\"Great!\"\n\n\"Oh, Rachel, I need to ask you something. What do executives do when they would prefer an armored limo or a security detail?\"\n\n\"There aren't any in this area. When we go places I want that, they are available. The daily rate on them is very high.\"\n\n\"It would have to be; they are over $200,000. I want at least one, maybe two. I also need to know where to get the appropriate level of security personal.\"\n\n\"You mean like our people?\"\n\n\"Yes. Can they be hired as a driver and an extra guard?\"\n\n\"Sure. They are not cheap for a day. I will get you the number of who to call at our agency.\"\n\n\"Are most of these guys ex-military?\"\n\n\"They are all ex-military or mercenaries. They are trained to be executive security personnel. It would be nice to have an armored limo with the right security,\" Rachel said. \"We always have to have a van following us, but that doesn't protect the limo from gun shots and stuff. Probably not a big demand for one in this area, but things are getting worse out there, and a lot of the high-end executives are getting paranoid.\"\n\n\"That is what I am counting on,\" I said.\n\n\"When we have to rent one and security in the US, it is 10 or 15 thousand dollars a day or more,\" Rachel told me. \n\n\"Okay. I will get your advice on what to buy in one.\"\n\n\"I'll ask the agency if they know where to buy one and what to get. You will still need to have an outfitted van to follow sometimes.\"\n\n\"Okay.\"\n\nLinda turned to me and grabbed my cock through my pants.\n\n\"Take your clothes off,\" she said.\n\n\"Why?\"\n\n\"You are going to fuck me after what you did to me before we left!\" Linda said.\n\nDawn reached over and started unbuckling my pants.\n\n\"I was just playing with you.\"\n\n\"I know you were playing with me. I have been thinking about it all day.\"\n\nLinda started removing my shirt. I heard Rachel giggling. Soon, Linda had my shirt off, and Dawn was on the floor pulling my pants off. After a minute, the two of them had me naked. Linda stood and unbuttoned her shorts and let them drop to the floor. I noticed her thong was gone now. She grabbed the bottom of the jersey and pulled it off. I looked Linda over as she stood in front of me naked. She moved and placed a knee on each side of my thighs and lowered herself into my lap.\n\n\"Now you are going to pay,\" she said.\n\nLinda grabbed my cock and placed the end between her wet pussy lips. She worked around and soon had my cock sliding into her. She always felt incredible.\n\n\"Emmm.\" \n\nI leaned forward and sucked one of her nipples into my mouth as she worked her way down. She held me as she worked every inch of my cock into her pussy.\n\n\"You can't tease me like that,\" Linda said. \"It makes me horny.\"\n\n\"You always feel so good inside,\" I told her as I squeezed both her breasts.\n\n\"Dawn, does it bother you when he says things like that?\"\n\n\"No, Linda. If he says you feel good, you must feel good inside.\"\n\nLinda started sliding up and down on my cock until it was moving in and out of her nicely. She looked into my eyes and started fucking me very hard.\n\n\"Ahhh!\"\n\n\"You do the work,\" I told her as I held her waist.\n\nLinda was now jamming her pussy onto my cock hard and fast.\n\n\"Ohhh! Fuck!\"\n\nLinda kept going. I was watching her tits bounce as she thrust her pussy onto my cock over and over very hard and fast.\n\n\"Oh, fuck, yes!!\"\n\nLinda kept going for a long time as I watched her. I guess it was her height, but she did feel very different sliding up and down on my cock then the girls did.\n\n\"Oh, yes!!\" Linda screamed and started coming. \"Fuck, yes!!\"\n\nShe kept slamming her pussy down as she came once, then a few minutes later again.\n\n\"Ahhhhh!!\"\n\nLinda kept going. She was being wild for a change. She kept fucking my cock with all she had. I looked at Dawn, and she was smiling. Linda moaned and groaned continuously for a while.\n\n\"Fuck!! I'm coming!! Come in me, now!!\" Linda screamed.\n\nShe was fucking me as hard and fast as she could when she started coming again. When she screamed, I started filling her full of cum.\n\n\"Ahhhhhhhhhh!! Yes!!\"\n\nLinda jerked and screamed as she kept coming while I pumped more cum into her. After a minute she collapsed into me. I ran hand sup her back and rubbed her warm skin.\n\n\"Ohhhhhh...fuck.\"\n\n\"Linda, if you are going to fuck me like that after I tease you, I will do it more often,\" I said.\n\nI felt Linda start laughing then I heard everyone else laughing. She sat up and kissed me.\n\n\"You better not,\" she said.\n\nLinda kissed me a few more times then worked her way off my cock and stood. I looked at the cum running down her legs.\n\n\"Are you ready for my surprise?\" Linda asked.\n\n\"That wasn't it?\"\n\n\"No.\"\n\n\"I guess.\"\n\nLinda slipped her shorts and top back on.\n\n\"Come with me.\"\n\nI slipped my pants back on. Linda and Rachel headed for the door; I followed. We went out to the limo, and the driver opened the trunk. There were suitcases and garment bags inside.\n\n\"We brought clothes,\" Linda said.\n\n\"Great.\"\n\nIt took a while to carry all the bags up to the extra bedroom upstairs. We all sat on the bed while Rachel and Linda unpacked and hung their clothes up and put the rest in the dressers.\n\n\"Linda, I'm glad you two are comfortable with this,\" Dawn said.\n\n\"We are. I'm going to start making some changes in the way I act.\"\n\n\"I like the change you made with the shorts. Now if we can just get Rachel to dress that way,\" I told her. She looked at me and smiled.\n\n\"Not while I am working,\" Rachel said.\n\n\"Can you two stay tonight?\" Amy asked.\n\n\"No, I have too many things to do tomorrow. We are going out of town for part of the week,\" Linda said.\n\n\"You are still coming Friday, aren't you?\" Dawn asked.\n\n\"Yes. We will be back Thursday night, and if it is okay, I am going to take Friday afternoon off, and we are coming here.\"\n\n\"That is fine. Can you two stay for a while tonight?\"\n\n\"Yes, we can.\"\n\n\"Well, you had pizza last time. There is a Chinese place that will deliver if you want that. That is about the extent of people that will drive out here to deliver,\" I told her.\n\n\"That sounds good. Rachel is that okay with you?\" Linda asked.\n\n\"Sounds good, we don't get to eat Chinese very often.\"\n\n\"About an hour before you want to eat I'll get the menu, and we can order.\"\n\n\"It's a little after 4:00 now. About 6:30 or so? We had a lunch late,\" Dawn said.\n\n\"You did? Where did you go with Linda dressed like that?\" I asked.\n\n\"That sports bar downtown. She brightened up the place,\" Dawn said.\n\n\"I bet. Linda, are you going to get out in public more?\"\n\n\"Some, Rachel is still concerned about the nut job.\"\n\n\"I don't think he would show up here,\" Dawn said.\n\n\"I didn't think he would show up in my hotel room in Italy either,\" Linda replied.\n\n\"I'm going to tell the limo driver he can go and come back about 8:00,\" Rachel said as she stood.\n\n\"Make it 9:00,\" Linda said.\n\nI asked about what kind of clothes they were having made. They said suits and knockoffs. I didn't get much else from them as they smiled at each other. Rachel came back in with a small duffle bag.\n\n\"Would everyone like to go for a swim?\" Dawn asked.\n\nEveryone agreed. I watched as they all got naked. Rachel carried the small bag outside as we went.\n\n\"Come with me,\" Linda said as she took Rachel's hand and led her down the steps into the pool.\n\n\"I don't guess they get to do this,\" Dawn said to me.\n\nI watched Sam and Amy get in the pool; they avoided Linda and Rachel and went to play in the waterfall. Dawn and I got in the pool.\n\n\"Can you go without support for a while?\" I asked Dawn.\n\n\"Yes. I have been naked most of the day.\"\n\n\"Did her tailor like looking at all of you?\"\n\n\"Linda said he was okay; she got naked in front of him. I think he was about 65 years-old.\"\n\n\"Did you get some nice clothes?\"\n\n\"I did, and some for the girls. I am having a tuxedo made for me.\"\n\n\"You will look good in that.\"\n\n\"Yes, I will.\"\n\nDawn and I soaked for a while. We watched as Linda and Rachel ran their hands over each other's wet body. After a while, the two of them went down to the waterfall to check it out. I was sure Amy and Sam were behind it messing around. Linda and Rachel disappeared behind it.AI bit later Sam, and Amy swam out to the middle of the pool.\n\n\"What are they doing?\" Dawn asked Sam.\n\n\"Linda has Rachel sitting on the ledge and is going down on her.\"\n\n\"Good. What were you two doing when they went back there?\"\n\n\"I was doing my sister,\" Sam said. \"Linda and Rachel watched.\"\n\n\"They got the idea then?\"\n\n\"Yes, they did!\" Amy said.\n\nAmy and Sam got out and picked up a towel and dried their hair as best they could then lay in two recliners to dry in the late afternoon sun. Dawn and I got out a few minutes later.\n\nIt was awhile before Rachel and Linda came out from behind the waterfall. They swam to the shallow end then walked up the steps. They each picked up a towel and dried off.\n\n\"I wish I had a pool like this,\" Linda said.\n\n\"You do. It is right here,\" Dawn replied.\n\n\"You know what I mean,\" Linda said sitting on the end of Dawn's recliner.\n\nRachel walked up to the end of my recliner and sat down.\n\n\"A nice private pool like this would be great,\" Rachel said. \"No one to see us or watch us.\"\n\nRachel reached up and wrapped her hand around my cock and stroked it.\n\n\"Yes, no one to see us,\" Linda said.\n\nI looked over at her, and she was spreading Dawn's legs apart. I kept watching as she got between them and started kissing Dawn's thighs and mound.\n\n\"Nice and private,\" Rachel said as she moved up on her hands and knees and sucked my cock into her mouth.\n\nLinda and Rachel kept going for a while until Linda was working on Dawn's pussy. Rachel had gotten my cock nice and hard. She sat up and moved and straddled my thighs.\n\n\"Is this okay?\" She asked.\n\n\"Rachel, you don't have to ask,\" I told her.\n\nShe eased up and grabbed my cock and worked it into her wet pussy and eased down slowly. She got settled and began to work her hips as she smiled at me. I saw Amy get up from her recliner and walked to us. She stopped and placed her hand under Rachel's chin and lifted her head up. She bent over and kissed Rachel for a minute then stood.\n\n\"Now you are family,\" Amy said.\n\n\"Will you join us?\" Rachel asked.\n\nAmy smiled at her then got up on the recliner and straddled my mouth and lowered her pussy down. I enjoyed Rachel riding my cock and Amy letting me tongue her pussy.\n\n\"Oh, god, Sam!\" I heard Linda say a minute later.\n\nAmy ground her pussy into my mouth as I felt Rachel riding me nice and slow. Amy came first and filled my mouth full of her juices. She got off of my mouth, and I watched as she got behind Rachel and reached around her and started squeezing her tits. I looked over at Dawn, and Linda was still up on her knees with her face buried in Dawn, but Sam was behind her licking and tonguing her pussy. Several minutes later Dawn had a screaming orgasm.\n\n\"Ohhhh, I am really starting to like your big cock,\" Rachel said as Amy pinched her nipples.\n\nRachel rode me harder for a few more minutes as we listened to Dawn coming again then Linda came.\n\n\"Oh, James! I'm going to come!\" Rachel was saying. \n\nShe worked my cock into her pussy harder and harder.\n\n\"Ahhhhh!! Yes!! \"I'm coming!! Fill me up!!\" Rachel shouted.\n\nShe started bucking her hips as she came. I let go and pumped cum into her as she jammed her pussy onto my cock.\n\n\"Ohhhh!! Yes!! Yes!! Ahhhh!! Fuck, yes!!\" She screamed.\n\nRachel stopped grinding her pussy onto my cock and reached up with both hands and placed them over Amy's as she twisted her nipples.\n\n\"Ohhhhhhhh...\"\n\nAmy stopped and removed her hands then stood and leaned over and kissed Rachel again. \n\n\"Come with me,\" Amy said as she reached for Rachel.\n\nRachel slowly slid her pussy off of my cock and stood. Amy took her hand and walked her to the other recliner and had Rachel lie down on it. Amy spread Rachel's legs and lifted them up and got between them. Rachel threw her head back as Amy placed her mouth over her pussy.\n\n\"Ohh, yes!\"\n\nI looked over at Dawn; the three of them were watching Amy and Rachel. Linda was smiling.\n\n\"Oh, Linda. That was wonderful, but I better go clean up and put my sports bra back on,\" Dawn said. \"Do you want me to order the food?\"\n\n\"Sure, just get a variety of things,\" Linda said.\n\nDawn eased up from the recliner and headed into the house. Linda lay on her back while Sam sat on the end.\n\n\"That was wonderful, Sam,\" Linda said. \"You want to do each other?\"\n\nSam smiled and stood up and walked to the other end of the recliner and straddled Linda's head. She leaned over and Linda raised her legs and spread them. The two of them went to work on each other.\n\n\"Oh, my, god!! Amy!!\" Rachel screamed.\n\nI looked at Amy, and she was kissing her way up Rachel's body as she lay there gasping for air. When she planted her mouth over Rachel's, the two of them kissed and tongued each other for several minutes. Amy got up, and Rachel reached for her. Soon the two of them were in a 69 moaning. I got up and headed into the house.\n\n\"Did they leave you out,\" Dawn said as she slipped on some shorts in the den.\n\n\"They are having a good time,\" I told Dawn.\n\nI walked to her and helped her put the sports bra back on.\n\n\"Since we got back, I have noticed Linda doesn't ask anymore. She just does what she wants to do,\" Dawn said.\n\n\"That is what we told her and Rachel to do.\"\n\n\"I'm glad they are comfortable now.\"\n\n\"I think Amy is getting very comfortable with Rachel,\" I said.\n\n\"It looks like it. I'll go order the food.\"\n\nAbout 30 minutes later the four of them came inside.\n\n\"The food will be here in about 20 minutes,\" Dawn told them.\n\n\"We have enough time to shower then,\" Amy said.\n\nShe took Rachel's hand and led her down the hall to the big bathroom downstairs.\n\n\"Come on Linda,\" Sam said and grabbed her hand and followed them.\n\nI found the clothes I had left in the den and put them back on.\n\n*****\n\nThey food had come before the four of them returned from the shower. Dawn and I were spreading all the food out on the kitchen bar when they all came out wrapped in towels.\n\n\"Oh, it is already here,\" Linda said and took her towel off and laid it over a chair. The other three did the same thing.\n\nWe all gathered around the bar and sampled all of the food. A little after 8:30, we were all sitting in the den drinking wine. The four of them were still naked.\n\n\"Can you and the girls join me tomorrow afternoon? I want to show you the store.\" Linda asked.\n\n\"Sure, what time?\" Dawn asked.\n\n\"About 2:00.\"\n\n\"Bummer, I have to work,\" Amy said.\n\n\"Where is it?\"\n\n\"I have two places I want to show you. One is downtown; the other is out near the new mall.\"\n\n\"That sounds like expensive rent either way,\" I said.\n\n\"It doesn't make any difference; I own both of them.\"\n\n\"Which one do you prefer?\"\n\n\"Not sure. Maybe out by the mall. It is an out parcel with a big building and other stores attached. It is just being completed, so it would make the build-out easier. The place downtown is okay; it is a four-story building, but I am afraid parking will be too much of a problem.\"\n\n\"Are you still thinking Christmas?\" I asked.\n\n\"Don't think so. I am planning on early spring. Are you getting things coordinated on your end?\"\n\n\"I have managers for the swimsuit and lingerie departments.\"\n\n\"Do they know their stuff?\"\n\n\"Yes. You met the young lady when we met at the bikini boutique. She has a degree in marketing and knows her expensive swimwear.\"\n\n\"Good.\"\n\n\"I am thinking about hiring the lady that runs the store where Dawn gets all of her lingerie. She has run a few stores and knows her stuff too. I told them I would need them to go to Europe for a month or two to pick out clothes for the store and set things up there.\"\n\n\"Okay. I am talking to a couple of buyers in New York about setting things up with the designers there.\"\n\n\"Linda, how big is this getting?\" Dawn asked.",
        "\"Big enough, but it will still be small enough that things will be like a boutique.\"\n\n\"How much are you planning on putting into this? I still want the girls to be part owners?\" I asked.\n\n\"I am going to take care of the real estate and the Grand Opening and initial marketing. I am thinking that maybe you all could rent the space you use for a nominal amount and just run it as a separate store or department. That way your share is not diluted.\"\n\n\"We will have to talk about that,\" I told her.\n\n\"We will work things out.\"\n\n\"Dawn had an idea about a fashion show for the opening that could include some of the local ladies.\"\n\n\"I know, she emailed me about it. I think it is a good idea. Most of the ladies in your group would look nice on a runway.\"\n\n\"What about you?\" I asked.\n\nLinda smiled at me. \"Maybe.\"\n\n\"I'm still thinking about having some of the salesladies in the swimsuit area and lingerie area modeling while the store is open,\" I told her.\n\n\"I may have to put you upstairs, I will never get the rest of the clients if you are on the first floor; plus, that will also take care of the window problems,\" Linda said and laughed.\n\n\"I don't know how much money it will take to stock the two departments or how long it will take to get the merchandise ordered and shipped in,\" I said.\n\n\"Well, there are a lot more handmade lingerie shops in Paris and other places. The swimwear should only take about two months from the time it is ordered; the fashion shows for that start around February. You better plan on having your lady for the lingerie leaving for Europe no later than December.\"\n\n\"I will talk to her about it. I want to see what the girls think of the swimwear they are going to model at Christmas. It looked like designer wear.\"\n\n\"Get me the name of the company; I will find out. You will still need to send her to Europe in February for the shows. I would just plan on hiring her and let her go with them to Hawaii,\" Linda said.\n\n\"I think Sunday we need to firm some dates up. It sounds like there is a lot more pre-planning for this than I thought,\" I told Linda.\n\n\"There is. We'll talk tomorrow and next weekend. I have to set some hard dates so I can hire the models.\"\n\n\"What models, Linda?\" Dawn asked.\n\n\"For the fashion show. I'll take care of that. Oh, when will your limo company be ready? We will need some limos?\"\n\n\"I'll let you know in a week or so.\"\n\n\"How big is it going to be?\" Dawn asked.\n\n\"Big enough. I was thinking about your idea to call it Southern Ladies in French. Think about this; Belle Dame, that is French for a beautiful lady.\n\n\"Oh, I like that,\" Dawn said.\n\n\"I do too,\" I said.\n\n\"Think about it. We will see you about 2:00 to look at some locations.\"\n\nLinda and Rachel left.\n\n\"This should be interesting,\" Dawn said.\n\n\"Sam, are you ready to go back to work after your vacation?\" I asked.\n\n\"Do I have too?\"\n\n\"That is between you and your sister.\"\n\n\"What else did you two talk about?\" Dawn asked.\n\n\"Enough to know that it will be spring. She did hire two New York buyers to take care of her items. She said I needed to get things ordered by December.\"\n\n\"What does that mean?\"\n\n\"It means that Brenda will be traveling around in December to visit enough places to get us stocked, and so will Sherri. I guess I better hire them ASAP. Did you do any research on what kind of swimwear type the people in Hawaii do ads for?\" I said.\n\n\"I looked through some on the internet. It looks like middle and high-end things,\" Dawn said.\n\n\"Make contacts with any companies you three like. I may call Lieke and have her investigate,\" I said.\n\n\"Are you planning on going with them to Europe?\" Dawn asked.\n\n\"I don't guess so; I will be teaching.\"\n\n\"You have the winter break.\"\n\n\"Lieke will be here.\"\n\n\"Take her.\"\n\n\"I don't know. I think Brenda knows about these things, but I am not sure about Sherri.\"\n\n\"I would suggest you find someone to go with each of them then,\" Dawn said.\n\n\"Any ideas?\"\n\n\"What about Katrina going with Brenda? She should know about high-fashion?\" I asked.\n\n\"That might work. Is Linda planning on going?\" Dawn asked.\n\n\"That is why she hired the buyers. I need to hire Sherri and Brenda now to set up this trip.\"\n\n\"Make sure you feel comfortable with the two of them before you turn them loose,\" Dawn said.\n\n\"I will ask Linda if she knows anyone that can help the two of them.\"\n\n\"I can go,\" Sam said.\n\n\"No, you can't.\"\n\n\"Rats!\"\n\n\"Sam, I'm going to shower; would you like to come?\" Dawn asked.\n\nSam ran up the stairs following Dawn. I gave them a few minutes then Amy and I went to join them.\n\n\"Girls only!\" Sam shouted.\n\n\"I don't see any girls; I only see two beautiful women.\"\n\n\"Okay. You can join us.\"\n\nI walked in and grabbed Sam and picked her up.\n\n\"Stop!!\" She said kicking.\n\nI set her back down. A few minutes later the four of us were enjoying washing each other's bodies.\n\n\"What did the four of you do in the shower earlier?\" I asked.\n\n\"What we usually do in the shower,\" Amy replied.\n\n\"Sam, when can Dawn watch?\" I asked as I soaped up her back.\n\n\"I dunno.\"\n\n\"Sam, I know what James did to you,\" Dawn said.\n\n\"Well...maybe.\"\n\n\"I would like to watch him do the things to you that he has only done to me.\"\n\n\"I don't know. Sam made up a new one,\" I said.\n\n\"I did not! You tortured me all night!\" Sam yelled.\n\n\"Oh, I think you tortured me in here,\" I said to her.\n\n\"Oh...that.\"\n\n\"Uh, Sam, what did you do?\" Dawn asked.\n\n\"Can't we have just one secret?\" Sam asked looking at Dawn.\n\n\"This must be good!\" Dawn said.\n\n\"Oh, it was,\" I said.\n\n\"You didn't tell me about him standing you on your head!\" Sam said to Dawn defensively. \"That was a secret!\"\n\n\"Sam, is it that important to you?\" Dawn asked.\n\n\"Maybe, for now,...okay?\"\n\n\"Okay, but I want to watch him with you standing on your head.\"\n\n\"You can't watch that!\" Sam exclaimed.\n\n\"What did he do?\" Amy asked.\n\nDawn laughed at her.\n\nWe finished in the shower and dried off and got in the bed. Sam got the remote and pulled up the other night, and we watched several hours. Dawn and Amy got to laughing as Sam pleaded up until she passed out that night. Sam wouldn't let her watch the two of us in the shower.\n\n\"Dawn, was that okay?\" Sam asked softly.\n\n\"Yes, honey. You and I will have to find something that I only do for you,\" she said. Sam leaned over and kissed Dawn. \"You too, Amy.\"\n\nThe four of us went to bed and went to sleep.\n\n*****\n\nI woke up early Sunday morning when I heard Dawn moaning. I realized that Sam was wrapped around me.\n\n\"Oh, Amy...\"\n\nI looked over, and Amy was between Dawn's legs.\n\n\"You awake finally?\" Sam asked.\n\n\"Looks who's talking.\"\n\n\"Do me while I do you,\" Sam said.\n\n\"No problem.\"\n\nSam eased around on the bed, so she didn't interrupt her sister and Dawn. She sat on my mouth for a few minutes as I got her started, then she leaned over and sucked my cock into her mouth. I listened to Dawn moaning as I went to work on Sam.\n\n\"Oh, Amy...that's it...\"\n\nDawn sounded like she was in heaven. The sun was coming up, and it was lighting the bedroom. I took my time licking and sucking on Sam's pussy as she nursed my cock. Dawn was just lying next to me moaning over and over softly. I placed my hands on the small of Sam's back and held her.\n\n\"Emmmm...\" came from Sam.\n\nI held Sam and took my time making love to her. She was doing a wonderful job of sucking my cock. I kept going then realized that Sam was gently drawing from me as she made love to me. I hadn't realized it because it was the way Dawn did when we were just gently making love to each other.\n\n\"Oh, Amy...yes...that's it...\"\n\nI could hear Dawn moaning softly as I concentrated on Sam. Soon, I was lost in her love like I got lost in Dawn's. It was probably 20 minutes before I felt Sam change; she was ready to come. I placed my hands on her ass and turned my head and kissed the inside of her thighs, then used my tongue to go after her clit.\n\n\"Emmm...emmmmm...emmmmmmmmm,\" came from Sam, then she exploded, and I exploded.\n\nSam ground her pussy into my mouth as I thrust my cock up.\n\n\"Ohhhhh god...Amy!!\" I heard Dawn scream and felt her humping Amy's mouth.\n\nSam was gushing into my mouth as I filled hers full of cum. She tensed up and jerked one last time then relaxed.\n\n\"Ohhh, yes...\" I heard her say.\n\nAfter a few minutes, she sat up and turned around and laid on me and started kissing me. I noticed Amy was lying next to Dawn kissing her. After a long time, Sam and Amy got off the bed and went down the hall. I looked over at Dawn.\n\n\"You won't believe what she did to me,\" Dawn said.\n\n\"Yes, I would.\"\n\nI rolled to Dawn and kissed her for a few minutes. She felt incredible.\n\n\"I have never felt that from her,\" Dawn said. \"The two of them have changed.\"\n\n\"Yes, they have,\" I replied.\n\n\"It's a little after 6:30, I need to get up and start getting ready,\" Dawn said.\n\nDawn got out of bed, and I helped her take her sports bra off. I noticed her nipples were hugely swollen.\n\n\"Dawn?\"\n\n\"I know,\" she said as she rubbed them.\n\nDawn headed toward the bathroom then stopped. I watched her turn and go down the hall. A few minutes later she came back with a big smile.\n\n\"They are making love to each other,\" she said. \"For some reason, I knew that.\"\n\nDawn walked into the bathroom, and I heard the shower come on. About 15 minutes later she came out combing her hair and sat on the edge of the bed just looking off into space while she combed.\n\n\"Dawn, are you okay?\" She stopped and looked at me.\n\n\"I just knew it.\"\n\n\"What?\"\n\n\"That they were making love to each other.\"\n\n\"What do you mean you knew?\" I asked.\n\n\"I don't know.\"\n\nDawn went back to combing her hair and went to clean up. When she came back out, I was putting on some pants and a T-shirt. I went to check on Sam and Amy. Amy was putting her clothes on. I went to Sam's room, and so was she. I walked into her bedroom and hugged her.\n\n\"Sam, you were incredible.\"\n\n\"I enjoyed that.\"\n\n\"I know you did.\"\n\n\"That is the way I want it to be from now on,\" Sam said.\n\n\"And how would that be, Sam?\"\n\n\"I want to always feel your love for me,\" Sam said.\n\n\"Sam, I have always let you feel my love for you.\"\n\n\"It's different now.\"\n\nSam kissed me for a minute.\n\n\"Let's eat,\" she said.\n\nSam went downstairs with me and helped me start breakfast. Dawn and Amy came down a few minutes later.\n\n\"I will be home about 5:00 or so,\" Amy said. \"Sam, take pictures for me.\"\n\n\"I will.\"\n\nAmy finished eating and left for work.\n\nAbout noon, I went to my study to call Katrina.\n\n\"Hello, James.\"\n\n\"Katrina, do you have a few minutes?\"\n\n\"Always for you.\"\n\n\"I need to ask you about a few things, but I want you to keep them to yourself for a while.\"\n\n\"Okay.\"\n\n\"When you were modeling, how much did you learn about the fashion industry?\"\n\n\"Like what?\"\n\n\"Who sells the best clothes, prices, how to order clothes and things.\"\n\n\"Quite a bit. Why?\"\n\n\"I may need someone to help me buy very high-end lingerie in Europe.\"\n\n\"Okay, James. What's up?\"\n\n\"Please don't say anything, but I am working with someone to open a high-fashion store in town. It will have designer clothes, high-end European handmade lingerie and designer swimwear to start.\"\n\n\"What?!\" \"Who?\"\n\n\"Linda and us. Will you please keep it a secret? It is just in the planning stages.\"\n\n\"Of course! We could use something like that around here!\"\n\n\"Where do you get your lingerie?\" I asked.\n\n\"I order most of it from New York or Paris. I get some from where Dawn gets hers.\"\n\n\"We were in Paris a few weeks ago and discovered a great boutique that hand makes all of theirs. It gave us the idea to open a shop here, but things have grown.\"\n\n\"How much has it grown?\"\n\n\"Designer clothes from New York and overseas, plus the lingerie and swimwear. It will all be high-end.\"\n\n\"That will be wonderful.\"\n\n\"I need someone that can go with my buyer and help her shop and negotiate and setup things in Europe for our orders. You know anyone that could do that?\"\n\n\"Hell yes! I can!\"\n\n\"Have you done things like that before?\"\n\n\"Yes. Who is your buyer?\"\n\n\"I am going to hire Brenda from the lingerie store to run that part of the business. She seems to know what she is doing.\"\n\n\"She does. What would I have to do?\"\n\n\"Go to Europe with her around December for however long it takes.\"\n\n\"When is the store opening?\"\n\n\"Spring.\"\n\n\"That will be cutting it close on handmade things,\" Katrina told me.\n\n\"I am finding that out. Do you know enough about the business that you two could put a trip together to where ever you needed to go?\"\n\n\"Oh my god, yes! I still have some friends in the business. Who is buying the designer clothes?\"\n\n\"That is Linda's department. She is hiring some buyers out of New York.\"\n\n\"What about the swimwear?\"\n\n\"Have you been to that new swimwear boutique in town?\"\n\n\"The one with the cute little sales girl that Dawn and the girls go to?\"\n\n\"Yes. I am going to hire her. She has some good marketing ideas and a degree in Marketing. I need to find someone to go with her. She will be gone in December and January probably.\"\n\n\"I can help her and go with her too after December. Swimwear is not that hard to get ordered,\" Katrina said.\n\n\"Maybe that could work. Linda and I are meeting over the next few weeks to set some deadlines.\"\n\n\"Where is the store going to be?\"\n\n\"We are looking at some places tomorrow.\"\n\n\"James, this is an expensive business to get into; even for you.\"\n\n\"My partners and I are just taking care of the lingerie and swimwear. Linda is doing the rest.\"\n\n\"Who are your partners?\"\n\n\"Dawn and the girls will own the stores.\"\n\n\"Well, good luck.\"\n\n\"Katrina, if I get you to help...what is it going to cost me?\"\n\n\"Oh, I think we can work something out. Maybe a payment plan.\"\n\n\"It sounds like Linda is going to have a fashion show for a Grand Opening. I asked her about you and some of the other beautiful ladies from around town being in it. Would you like to do that?\"\n\n\"What would you like for us to model?\"\n\n\"The clothes...and the lingerie and swimwear.\"\n\n\"I don't have a problem with that...\"\n\n\"Start making a list. We are marketing to ladies with plenty of money and rich husbands.\"\n\n\"I hope so. I will work on it.\"\n\n\"I will get back with you in a few weeks. Katrina, if you think of anyone else that could help, let me know.\"\n\n\"I will. How is Dawn doing?\"\n\n\"She is healing up.\"\n\n\"How does she look?\"\n\n\"Perfect.\"\n\n\"I will come and see her next week.\"\n\n\"Okay.\"\n\nI went out to get a beer, and Dawn and Sam were talking on the sofa.\n\n\"Katrina is interested in helping. She seems to know a lot about this stuff,\" I said.\n\n\"That will be good,\" Dawn said.\n\n\"What can I do?\" Sam asked.\n\n\"I have something you can do. You have expensive taste in lingerie and swimwear. You start looking on the internet for the good stuff you like and find out where it all comes from. Make a list, so we have a starting point.\"\n\n\"I can do that!\"\n\n\"I also want you to go and look around at any places in town that sell high-end clothes, lingerie, and swimwear.\"\n\n\"James, don't forget school is starting soon,\" Dawn said.\n\n\"I can do it!\" Sam exclaimed. \"Can I buy samples?\"\n\n\"Within reason,\" I told her.\n\n*****\n\nWe talked until lunchtime. After a light lunch, we were all taking when I heard the gate buzz. We all sat and waited. The front door opened, and Linda walked in.\n\n\"Linda, you used your key!\" Sam yelled at her.\n\n\"I know.\"\n\nLinda had on some tight blue jeans and a top today; Rachel was behind her in her jeans and a long top.\n\n\"You all ready to go?\"\n\nWe all got up and followed them to the limo and got in. The driver took off.\n\n\"I want to show you a place downtown first. It is nice, but it may be a convenience problem for parking,\" Linda said. \"The other location is out near the new mall in the upscale part of town.\"\n\nWe talked for a while until the driver was downtown. We drove up in front of an older building that was four stories. When we stopped, Rachel got out and looked around. We all got out of the car, and Linda went to the papered-over front door and unlocked it. After we had gone in, Rachel took the key and locked the door. We were in what looked like an old department store.\n\n\"This was a department store until about five years ago. I own the property, and it is a nice building. Each floor is 15,000 square feet.\"\n\n\"That is big,\" I said.\n\n\"I know. Let's look it over; it may be too big to keep the boutique feel. It will also have to be gutted before we can do a build-out.\"\n\nWe walked around the first floor for a while and looked. It was a big square store. We took the elevator to the other floors and looked around.\n\n\"What about parking?\" I asked Linda.\n\n\"There is a public paid parking garage behind the building, then the on-street parking.\"\n\n\"I didn't see an entrance on the back.\"\n\n\"It is an alley for deliveries. Everyone just walked around the corner and came to the front door,\" Linda said.\n\n\"That is not bad,\" I said.\n\n\"It is okay. I just think that it is downtown, and the foot traffic may not be as much as at the new mall.\"\n\n\"We won't use all four floors.\"\n\n\"Two at most, the others would be for storage.\"\n\n\"What else is near here?\" Dawn asked.\n\n\"There are several hotels in walking distance. A decent restaurant just down the street. The rest are office buildings; that is what I will probably turn this place into if we don't use it. I can get some high dollar per square foot with it.\"\n\n\"Linda, it sounds like you want to use the other place,\" I told her.\n\n\"There are a few reasons I like it.\"\n\n\"Let's go see it,\" I said.\n\nWe went back downstairs and out to the limo. The driver pulled away.\n\n\"Have you been out to the new mall?\" Linda asked.\n\n\"We haven't yet,\" Dawn said.\n\n\"It's on the east edge of town, out near all the big houses built on golf courses. The town is spreading in that direction,\" Linda said.\n\n\"You think it will spread that far? That is expensive land?\" I asked.\n\n\"That was what my researchers told me six years ago when I bought all the land up when it wasn't expensive. That was my first large investment.\"\n\n\"So you sold the land to the mall?\" I asked.\n\n\"Yes, I did. I also own about 25% of the mall, and the land around it that is being built on.\"\n\n\"You own it, or the company owns it?\" I asked.\n\n\"I own it.\"\n\n\"Wow,\" Sam said.\n\nWe had ridden for about 20 minutes before we got to that side of town. We got off at the new exit on the interstate and drove around the mall for a few minutes. It appeared to be very busy.\n\n\"Let's go over to the other property,\" Linda told the driver. \n\nHe drove out of the parking lot and down the road a few hundred yards then pulled into a strip mall next door to the mall. There was a lot of construction going on.\n\n\"See the building in the middle. It is three stories; each floor is about 12,000 square feet. I think we could put the lingerie and swimwear on the second floor and the high-fashion on the bottom floor. It also has a basement for storage.\"\n\n\"What would you use the top floor for?\" I asked.\n\n\"Our tailoring and maybe expansion later.\"\n\nI looked, and there were five smaller stores on each side of the big building. The limo stopped in front of the big building, and we got out. There was no one around because the buildings were empty.\n\n\"Come with me,\" Linda said.\n\nShe walked down the sidewalk to the first store. We looked in, and it was just a shell.\n\n\"Each of these stores is around 6000 square feet. The first one on each side is 8,000 square feet, and they go down in size to the corners.\" Linda told us.\n\n\"Who will be renting them,\" Dawn asked.\n\n\"Well, I have been thinking. Since we will be high-end, what about a high-end shoe store, handbag store, jewelry store, and places like that?\"",
        "\"No competitors?\" I asked.\n\n\"Oh, no. It will take an anchor store like ours to attract other high-end stores. The buyers I hired think it is a good idea because we don't want to carry accessories. I have been talking to a fur store downtown that is interested in moving.\"\n\n\"Well, there are 10 of them,\" I said.\n\n\"I think I can fill half of them with boutiques. The others could be a caf\u00e9 or coffee shop and other things.\"\n\n\"Linda, I think this is where you want it to be,\" I said.\n\n\"Is it okay with you?\"\n\n\"Sam and Dawn, is it okay with you?\" I asked.\n\n\"Sure.\"\n\n\"We will go inside in a minute, look down there. See that big building going up? That is going to be a nice hotel. It will have a very nice restaurant in it also.\"\n\n\"That will be good.\"\n\n\"It will be open by spring.\"\n\n\"It would give people a nice place to stay that come to shop,\" Dawn said.\n\nWe walked back to the big building and went inside. It was only a shell also.\n\n\"Since we don't have to gut this first, we can start from scratch,\" Linda said. \"It will be faster.\"\n\n\"What are you thinking for a timeline then?\"\n\n\"I am thinking a Grand Opening either for Valentine's Day or the first day of Spring.\"\n\n\"That would be good,\" Dawn said. \"Especially for Valentine's Day.\"\n\n\"That will be a push,\" Linda said.\n\n\"How long would it take to get the build-out done?\" I asked.\n\n\"The architects and designers just need our input on what we want the inside to look like; then they can draw up plans and start. As soon as we tell them what we want, 2 to 4 weeks to start. The build-out would probably be done by the end of the year.\"\n\n\"What are we looking at for cost for the build-out?\"\n\n\"I own the building, that is my expense. I know what I want for my area; you need to work on yours.\"\n\n\"I have no idea.\"\n\n\"Let's get your swimwear manager and lingerie manager together with my buyers and the architects soon. They know about retail space and how to lay it out. It will all have a high-end look on all floors.\"\n\n\"Okay, I just want to make sure we build in some private dressing rooms and modeling areas,\" I told her.\n\n\"That is the way the places in Chicago and New York have it. Why don't we plan a day and I will take everyone to New York, and we can visit some of the fashion stores,\" Linda said. \"They can all get ideas; I'll even take one of the architects. We can fly up early on a Saturday morning and come back late.\"\n\n\"I guess I am going to have to hire Brenda and Sherri real soon,\" I said.\n\n\"They can always oversee the construction and make sure it is what they want,\" Linda said.\n\n\"I will need to get them to Europe as soon as possible also. If I hire them now, it won't be a rush,\" I said.\n\n\"My refurbed personal jet will be ready in early November.\"\n\n\"Are we going to use it?\"\n\n\"Yes. So you like this place?\" Linda asked.\n\n\"Yes. What do you two think?\" I asked.\n\n\"Sounds like a great idea,\" Dawn said.\n\n\"How soon do you think you can get them on board so we can go to New York?\" Linda asked.\n\n\"Two or three weeks.\"\n\n\"The sooner, the better. I will get the architects started on the initial designs. I will get the lawyers to set up the corporation and the rest of the details and contracts. James, you will be renting the store space, but you are welcome to buy into the corporation that owns this land and the buildings.\"\n\n\"We will talk about that.\"\n\n\"I have a business manager that setups all of my companies, I will put him to work on it right away and give you some numbers,\" Linda told me. \"If you don't have the cash flow right now to buy all the merchandise, let me know.\"\n\n\"Our investments have done well for the last few years. We have some extra money.\"\n\n\"Just let me know. I do have one suggestion for you. If you are going to get this involved in several businesses, I would recommend you get an investment banker to help you set things up for the best tax advantages,\" Linda said.\n\n\"I don't know anyone like that.\"\n\n\"I do. If it is okay, I recommend we use the commercial bank I use. There is a guy there I will introduce you to.\"\n\nAfter we had looked at the building some more, we got back into the limo.\n\n\"Mike, take me over to the car lot on Grand Avenue,\" Linda told the driver.\n\nWe drove about 10 minutes toward town as we talked, then pulled into a GM dealership. There weren't many cars on the lot. We pulled up to the showroom and Rachel got out and looked around, then we all got out.\n\n\"What is this?\" Dawn asked.\n\n\"It was a GM dealership until last month,\" Linda said. \"He just built it three years ago and got in over his head. His wife divorced him and since the economy is slowing down, so are car sales. His bank called in his loans, and he declared bankruptcy. This central part around the showroom and the garage, would it work for your limo business?\"\n\n\"Sure, but this real estate is going to be high,\" I said\n\n\"It wasn't too bad. I really took advantage of him. He was leveraged to his eyeballs, and I made him an offer on the land and buildings, and he took it. He will still end up with nothing. It will be empty in a month or so. If it will work, you can use it. The rest of the large parking area I am going to hold onto for a few years.\"\n\n\"What are you going to charge me, Linda?\" I asked.\n\n\"Just consider me a silent partner, with benefits,\" Linda said with a smile.\n\n\"That may cost me too much.\"\n\nWe walked around. The showroom would be big enough for several limos, and there would be enough parking for 20 or more limos around the building. The maintenance area had five drive-through lanes and enough area to take care of the limos.\n\n\"It is nice and big,\" I said.\n\n\"It also has a fence around it and lighting,\" Linda told me. \"When are all of you meeting again?\"\n\n\"Two or three weeks.\"\n\n\"I will get you a key, and you all can meet here and look it over. All the offices and desks in the showroom are staying, and it is even furnished. I bought it as it stands.\"\n\n\"I will need you to put a value on what we can use, Linda.\"\n\n\"Okay.\"\n\n\"Any more surprises?\" I asked.\n\n\"Not unless you need a 30-story office building in town.\"\n\n\"I'll pass.\"\n\nWe all got back in the limo.\n\n\"You all want to stop for a drink?\" Linda asked.\n\n\"I have wine at the house, even your favorite now, and Sam can have a glass,\" I said.\n\n\"James, if Sam is with me, no one is going to question her age,\" Linda said.\n\n\"What do you three want to do?\" I asked.\n\n\"The house is fine,\" Dawn said.\n\n\"Mike, take us to the Smith house.\"\n\nWe had been riding about 10 minutes.\n\n\"We all need to go out one night,\" Linda said.\n\n\"What would you like to do?\" Dawn asked.\n\n\"Just go out and have some fun at a club or something like we did in France.\"\n\n\"You want to go to my gentlemen's club?\" I asked.\n\n\"A strip joint?\" Linda asked.\n\n\"A very elegant strip joint,\" I told her.\n\n\"I don't think I'm ready to go that public yet,\" Linda said.\n\n\"Are you coming to the University reception next month?\" Dawn asked.\n\n\"I am.\"\n\n\"Okay! I will set you up with a handsome doctor,\" Dawn said.\n\n\"What about me?\" Rachel said.\n\n\"Well...since you can't leave Linda if she wants to go home with one of my doctors, how about both of you joining him.\"\n\n\"I can't do something like that! It would get out!\" Linda exclaimed.\n\n\"No, it wouldn't. I know a couple of very cute doctors that entertain two or three nurses at a time. I thought if you leave with one, you might feel more comfortable if Rachel could join you,\" Dawn told her with a big smile.\n\n\"You are going to get me in trouble.\"\n\n\"You two show up, and just see what happens,\" Dawn said.\n\n\"Dawn, have you two thought any more about having Patricia and her husband coming to dinner?\" Rachel asked.\n\n\"I think we need to get you two comfortable first; then we will work on it.\"\n\n\"Who is Patricia?\" Sam asked.\n\n\"My personal assistant. James had a good time with her while we were overseas.\"\n\n\"Okay, you two, next weekend you are going to tell us everything that happened,\" Sam said. Linda and Rachel giggled.\n\n\"Have you seen the pictures yet?\" Linda asked.\n\n\"James! What pictures?\" Sam asked.\n\n\"I haven't seen them either,\" Linda said.\n\n\"I will get them printed before next weekend.\"\n\n\"Oh, my god,\" Rachel mumbled.\n\nA bit later we were at the house. The driver opened the door, and Sam and Rachel got out.\n\n\"I have something for you. Andre sent it. It is the surveillance video from the club in France.\" Linda pulled out a DHL envelope and handed it to me.\n\n\"Why would he send that?\" Dawn asked.\n\n\"He thought you might want it.\"\n\nI took the envelope, and we got out and went in. I got some wine and poured and we all sat down.\n\n\"I guess I will be visiting Sherri and Brenda tomorrow,\" I said.\n\n\"What did you think about Bella Dame?\" Linda asked.\n\n\"I like it,\" Dawn said.\n\n\"I think it sounds high-end,\" I told Linda.\n\n\"Okay, I will have it checked and trademarked. If we shoot for Valentine's day, we have less than five months. James, are you teaching this fall?\" Linda asked.\n\n\"I'm supposed to teach three undergraduate classes.\"\n\n\"Hmmm. My refurbed leased jet and pilots will be ready well before Thanksgiving. If I send my buyers to Europe and New York the first part of November or December, will your two ladies be able to go with them for 3 or 4 weeks?\"\n\n\"If I hire them next week, sure.\"\n\n\"The build-out will be well underway by then. Do you want my business people to set up your corporation for your areas?\"\n\n\"That would be nice, thanks. Could you talk to your buyers if they don't have enough experience in lingerie and swimwear to see if there is someone I could hire to go with Brenda and Sherri?\"\n\n\"That wouldn't be a problem.\"\n\n\"Okay, then talk to them. I will make sure November or December is a go,\" I said.\n\n\"Okay. I am going to see if everyone thinks we can firm up Valentine's Day. That would make a great time for a fashion show and a Grand Opening.\"\n\nWe talked some more and finished our wine. Rachel and Linda said they needed to go pack. They were leaving in the morning for the west coast. I walked them out to the limo.\n\n\"See you two next weekend,\" I told them. They left about 5:00.\n\n*****\n\nWhen Amy came in later, we all got dressed and went out to eat. I caught her up on what was going on this weekend and gave her the same instructions I had given Sam about researching the expensive stores around town. She was excited and wanted to go to Europe too, but I told her I wanted her and Sam to shop while in Hawaii, she liked that idea.\n\n\"James how can we be partners if we are not putting any money in,\" Sam asked.\n\n\"Don't worry about it. You two will own one-fourth each, and Dawn and I will own the rest. You will be stockholders in the corporation. Your profit will come from dividends on the stock based on profit.\"\n\n\"How much money are you going to have to put up?\" Amy asked.\n\n\"I guess around a million to stock the place, and another million to operate for several years.\"\n\n\"I guess our investments have done really well,\" Dawn said.\n\n\"They have. Look at the statements sometime.\"\n\n\"James and Dawn, thank you,\" Amy said.\n\n\"Yes, thank you,\" Sam added.\n\n\"Honey, school starts in just a few weeks. Are you going to have time for all of this?\" Dawn asked me.\n\n\"I hope so. I may not teach the winter semester. Dawn are you going with them in December to Hawaii?\"\n\n\"I plan on it.\"\n\n\"I know the three of you are starting school, but I want you to call the people that are doing the marketing for these companies in Hawaii and find out more about the products and where they come from if you can. If you think they are nice enough swimwear, you three will be picking out any designs you like and making contact with the manufacturers while you are there.\" I said.\n\n\"Okay.\"\n\n\"I want you to find out about what you will be modeling and if their market is high-end and nice. Have them send you last year's catalogs and things like that. If their things are nice enough, you can help Sherri; she will probably go with you if needed.\" I told them.\n\n\"She is going to be surprised,\" Sam said.\n\n\"I guess I will go see her and Brenda tomorrow and see how fast they can come on board.\"\n\n\"Where will they work?\" Dawn asked.\n\n\"I guess from home, or we can have them use one of the studies for an office and work out of the house,\" I said.\n\n\"Since Sherri is young, I think if she can work here with Brenda, it will help her learn,\" Dawn said. \"However, you will be giving up your study,\" Dawn let me know. \"I have to use mine.\"\n\nWe were headed back to the house about 8:30 when Amy asked something from the back of the Escalade.\n\n\"Dawn, how are you doing? Are you still sore?\"\n\n\"I'm okay.\"\n\n\"Could we all sleep together again tonight?\"\n\n\"Sure, Amy,\" Dawn told her. \n\nBefore it was time to go to bed, they had gotten out their computers and were looking at designer clothes and printing off things they liked. I finally got them off the computers and up to bed about 11:00. Amy and Sam came from their rooms naked. Dawn and I were lying in the middle of the bed.\n\n\"Dawn, you have to wear your sports bra,\" Amy told her.\n\nDawn sat up, and Amy helped her put it back on.\n\n\"Another a week or so,\" Amy said.\n\nAmy got in next to Dawn; Sam was standing at the end of the bed looking.\n\n\"Get in bed Sam,\" I told her.\n\nShe smiled then crawled on the bed and got between Dawn and me. I pulled up the sheet. I looked, and Sam had turned toward Dawn's back and was wrapping her arm around her. Dawn was lying toward Amy, and they were holding each other.\n\n\"Do you all want me to go sleep downstairs?\" I asked.\n\n\"Shut up, James. Get behind me,\" Sam said.\n\nI turned off the lights and snuggled up behind Sam.\n\n*****\n\nI got up at 6:00 to get Amy up; I knew she would be tired. I walked around to her and sat on the edge of the bed.\n\n\"Amy, honey, it is 6:00, you need to get up.\"\n\n\"I know.\"\n\n\"I know you're tired.\"\n\nI pulled the sheets off of her and leaned over and kissed her. She wrapped her arms around my neck and held me.\n\n\"I want you to do something today for me,\" I said.\n\n\"What?\"\n\n\"Talk to your supervisor so that you can turn in your notice, please.\"\n\n\"Okay.\"\n\nI made sure Amy got up and to the shower before I went back to get Sam up. She was under the sheet.\n\n\"Sam, time to get up.\"\n\n\"emmph.\"\n\nI pulled the sheet off of her and leaned over and kissed her lips.\n\n\"Emmm. I wish you would wake me up like this every morning.\"\n\n\"Did Amy say you were still going to work with her?\"\n\n\"Yes.\"\n\n\"I have asked her to talk to her supervisor today about turning in her notice; you make sure she does.\"\n\n\"I'll try, but I bet she doesn't do it.\"\n\n\"Why?\"\n\nSam sat up in bed.\n\n\"Money,\" Sam said.\n\n\"What do you mean?\"\n\n\"She doesn't want to ask you for money to live off of.\"\n\n\"I'll talk to her,\" I said.\n\n\"No, you won't! She will know I told you!\"\n\n\"Okay, we will work on it.\"\n\n\"Shower with me,\" Sam asked.\n\n\"Okay.\"\n\nWe went to her room and showered together. Sam wanted to play with my cock, but I told her she didn't have time. Once we were dried off, I went to check on Dawn; she was in the shower. I went and put some clothes on and then went downstairs and started breakfast for everyone. The three of them came down about 6:45. I made them sit and fed all of them.\n\n\"Dawn, are you going somewhere?\" Amy asked.\n\n\"I have got to go to my office and get things started. James is going to join me about noon and help me move things around.\"\n\n\"Do you have your sports bra on?\" Amy asked.\n\n\"Yes...\"\n\nSoon Amy and Sam were leaving; Dawn was heading out by the time I got the kitchen cleaned up.\n\n\"I will see you at noon. Could you stop on the way and get some things to clean?\" Dawn asked.\n\n\"No problem.\"\n\n\"Bye.\"\n\nBefore I left about 9:00, I called to see if I could reach Linda. She answered.\n\n\"Hey, James.\"\n\n\"Bad time?\"\n\n\"No, we are at the airport waiting.\"\n\n\"How long will it be before your business guy can have a checking account setup for me. I need to put some money in it to start paying Brenda and Sherri.\"\n\n\"By the end of the week. I'll give you his number.\"\n\nLinda gave me the guy's phone number so I could call him.\n\n\"Thanks, you two be careful,\" I said.\n\n\"Okay, see you Friday.\"\n\nI locked up the house and headed toward Brenda's store. I arrived about 9:45. I knocked on the door, and she let me in.\n\n\"Good morning,\" Brenda said.\n\n\"Good morning, we need to talk,\" I told her.\n\n\"Okay, it will be dead for an hour or so.\"\n\nWe went back to her office and sat down.\n\n\"What's up?\" Brenda asked.\n\n\"My partner and I made some decisions Sunday, and we are shooting to open on Valentine's Day.\"\n\n\"Great, that would be cute.\"\n\n\"Have you worked in enough stores to help us design the build-out for the retail space? It is going to be high-end looking.\"\n\n\"I have worked in retail for over 20 years. I can do that.\"\n\n\"We have architects to work with and they have experience in retail layouts.\"\n\n\"That will help. What do you need me to do?\"\n\n\"I need you to start working for me as soon as you can.\"\n\n\"What?\"\n\n\"I need someone to work with the architects and oversee the build-out. They need input very soon.\"\n\n\"James, we haven't talked about that part, you said it would be a while.\"\n\n\"I know. I will give you a salary for now. I don't have any experience in this area. How soon can you leave here?\"\n\n\"Uh, two or three weeks.\"\n\n\"Okay. How much will you make this year?\"\n\n\"Around $40,000.\"\n\n\"Fine, I will pay you at $45,000 a year plus commission. The first thing that is coming up is a trip to New York one Saturday with everyone to visit all the stores there. It may be in two or three weeks.\"\n\n\"Wow, you are moving fast.\"\n\n\"We have to get started on the build-out. I am also counting on your experience to help my lady that will be running the swimwear department. We may also bring in a buyer to help you two. Do you think you could go to Europe after Thanksgiving for 3 or 4 weeks, I will cover all that.\"\n\n\"Oh, uh, I guess.\"\n\n\"Brenda, I need you. No guessing. Do you want to do this?\"\n\n\"Yes!\"\n\n\"Great. Tell the owner you got another offer and let me know when you can start.\"\n\n\"What about my contract?\" Brenda asked smiling.\n\n\"What do you want in it?\"\n\n\"You know what I want, James.\"\n\n\"You don't need that in a contract. You start, and I will fuck you senseless.\"\n\n\"Oh. I will see when I can start!\"\n\n\"Okay. Call if you have any questions. I have to go hire a swimwear manager.\"\n\nI left Brenda and headed out to see Sherri. When I got to her store, it was almost 11:00. I went in and found her with the owner. I walked around and looked while they talked.\n\n\"...I sell some of the designer suits,\" I heard Sherri say.\n\n\"Not enough to justify the overhead. After we sell what is left, we are just going to carry the regular lines,\" an older lady told her as I watched.\n\n\"If we do that, you are going to have to pay me more per hour because I won't be making any commission, Margaret.\"\n\n\"You will still make commission,\" the older lady said in a huff.\n\n\"I'm averaging about $10 or less an hour now. I can't live on that.\"\n\n\"Sherri, you are just selling swimsuits, what do you expect?\"\n\n\"We could sell more if you would let be work on the store and pick some of the things we sell, Margaret.\"\n\n\"Sherri, there are plenty of girls that I can hire to do your job if you don't want to work here.\"\n\n\"Margaret, if you make that threat one more time, I am out of here, and you can work here all day long!\" Sherri yelled at her.\n\nI walked to the front of the store where they were arguing.\n\n\"Sherri, you can start working for me today,\" I told her. \"You don't need this.\"\n\n\"Really?\" Sherri asked looking at me.\n\n\"Right now. Just leave.\"\n\n\"Fuck you, Margaret! I quit!\" Sherri yelled at her then picked up her purse from under the counter and walked around it.",
        "\"You can't just quit!\"\n\n\"Wanna bet!\"\n\nI took Sherri's hand and led her out of the store. I walked her away from the store. She stopped and looked at me.\n\n\"Now what?\" She asked.\n\n\"Where is your car?\"\n\n\"I have to ride the bus. I can't afford a car on $10.00 an hour.\"\n\n\"Sherri!\" Margaret yelled from the door.\n\nI walked her to the Escalade and opened the passenger door and let her get in. I walked around to the other side and got in.\n\n\"I didn't think you were ready for me yet.\"\n\n\"Things changed this weekend. I was coming to ask when you could start.\"\n\n\"Well, I guess that worked out well. Your store will be the only one in town selling a lot of designer swimwear. I hope it makes it.\"\n\n\"With your help, it will.\"\n\n\"Can you tell me who you partner is now?\"\n\n\"Linda Williams.\"\n\n\"Don't know her.\"\n\n\"You remember the statuesque blonde that came in before we went to Hawaii?\"\n\n\"Yes, she was beautiful.\"\n\n\"That's her.\"\n\n\"She has that kind of money?\"\n\n\"Yes. Let's go, Sherri.\"\n\nI backed out, and we left the parking lot.\n\n\"So, you were only making about $20,000 a year?\" I asked.\n\n\"Now.\"\n\n\"What do you think you are worth?\" I asked her as I drove.\n\n\"What do you mean?\"\n\n\"How much do you want me to pay you?\"\n\n\"Mr. Smith, that is for you to decide.\"\n\n\"Sherri, you work for me now. Call me James. What do department managers make in big stores?\"\n\n\"Around 30 or 35.\"\n\n\"Well, Sherri. I am about to ask you to do a lot of work. I told you what all you will be doing, and the travel. I am going to be using you as a buyer as well as a manager.\"\n\n\"Sounds interesting.\"\n\n\"I just hired a lady to be a buyer and the manager of the lingerie department. She has over 20 years of retail experience.\"\n\n\"That sounds good.\"\n\n\"But you have a degree in marketing. I expect you to use it. You said you could help me set this business up. Is that what you are going to do for me?\"\n\n\"I believe I can do that, Mr. Smith.\"\n\n\"Okay. I will pay you the same thing I am paying her. I hope $45,000 a year is enough.\"\n\nI kept driving as Sherri sat silently.\n\n\"Is that enough, Sherri?\"\n\n\"Oh...uh...sure!\"\n\n\"Sherri, you will be worth it.\"\n\n\"I hope so.\"\n\n\"Do you want me to take you home?\"\n\n\"I work for you now. I will do whatever you want me to do.\"\n\n\"Sherri, be careful.\" She laughed. \"If you want to spend the day with me, I need to go help Dawn set up her office at the University.\"\n\n\"What does she do there. I didn't think you two worked.\"\n\n\"She is the new Acting Dean of Advanced Nursing. You want to go visit her and help her?\"\n\n\"If that is what you want me to do.\"\n\n\"We can talk the rest of the day; then I will take you home.\"\n\n\"Okay. Why did you need me to start right away?\"\n\n\"We made some decisions this weekend, and we need to move forward quickly on the design and layout of the building so the architects can get started. We are shooting to open Valentine's Day. Right now, you can't tell anyone anything other than you are working for a new store.\"\n\n\"Where is the store?\"\n\n\"It is being built out by the new mall on the east side of town. But yours and Brenda's office, for now, will be at my house until they get enough of the store finished. The two of you are going to work together to get things going.\"\n\n\"Where do you live?\" Sherri asked.\n\n\"Out past town on the south end.\"\n\n\"Do the buses run out there?\"\n\n\"Afraid not.\"\n\n\"Oh.\"\n\n\"We will address your car problem.\"\n\nWe drove on to the University. I parked, and we went to Dawn's office.\n\n\"Well, Hi, Sherri?\" Dawn said when we walked in.\n\n\"Meet our new designer swimwear manager.\"\n\n\"What are you doing here?\" Dawn asked.\n\n\"Well, James came by while I was arguing with the store owner. He told me to quit, so I am here.\"\n\n\"Okay.\"\n\n\"I thought you could use some help while Sherri and I talked.\"\n\n\"You don't mind, Sherri?\" Dawn asked.\n\n\"No. I'm fine.\"\n\n\"Well, it is 11:45. Do you want to go eat lunch now or what?\" Dawn asked. \"We will have to go somewhere; the school cafeteria is not open.\"\n\n\"Why don't we go now,\" I said.\n\nDawn locked her office up, and we went back to the SUV. We drove down the road to a restaurant. We went in and found a table.\n\n\"What were you arguing about?\" Dawn asked.\n\n\"She was going to stop selling the designer items, so I told her she had to pay me more because I wouldn't be making commission.\"\n\n\"Are the designer suits not selling?\"\n\n\"No. They were picking up. She just doesn't have the money to put into the inventory. I couldn't make any money selling the low-end suits. She was arguing with me, and Mr. Smith walked up and told me I could start working for him today.\"\n\n\"James, Sherri. She told the owner to get fucked, and I took her with me.\" Dawn giggled.\n\n\"Well, I think you will have plenty of work to do for the next six months, Sherri,\" Dawn told her.\n\n\"Sounds like it.\"\n\n\"Sherri, do you have a passport?\" I asked.\n\n\"No.\"\n\n\"Get one as soon as you can. Honey, remind me to ask Brenda.\"\n\n\"I'm sure she has one. She is always going on cruises to the Bahamas,\" Dawn said.\n\n\"Let's order some lunch; it's on me,\" I said. Dawn and Sherri giggled.\n\nWe ordered and spent an hour eating and talking. Sherri was asking Dawn what she did at the University, and Dawn was feeling her out some. We finished eating and headed back toward the school. I stopped at one of the branches of our bank and went in for some cash. Once we got back to Dawn's office, we spent the afternoon helping her get things arranged. About 4:30 Dawn was ready to go home.\n\n\"I'm going to take Sherri home,\" I told Dawn on the way to her car. \"I will be home soon.\"\n\n\"Okay. Do you want us to wait for you for dinner?\"\n\n\"It may be 7:00. Why don't you all eat? I will get something.\"\n\nDawn got in her Ferrari and left. Sherri and I got in the Escalade and left. I had to make a stop to solve her car issue. I drove back into town.\n\n\"Sherri, we need to get you a car,\" I told her.\n\n\"What?\"\n\n\"What would you like?\"\n\n\"I can't afford a car.\"\n\n\"You should be able to now. What would be practical for you right now?\"\n\n\"Mr. Smith, what are you talking about?\"\n\n\"James, Sherri. You are going to need a car to get to work.\"\n\n\"I don't know what I can afford yet.\"\n\n\"Mid-size, Full-size, SUV, pickup truck...\"\n\n\"I had an old Nissan Sentra in school. But when it wore out, I couldn't afford another car.\"\n\n\"You like Nissan?\"\n\n\"It was okay.\"\n\nI drove on through town and pulled into a Nissan dealer.\n\n\"Mr...James, what are you doing. I don't have the credit to buy a new car.\"\n\n\"Your credit is good with me. I'll be your bank.\"\n\n\"You can't do that!\"\n\n\"Trust me; I can.\"\n\nI pulled up to the showroom and made Sherri get out. \n\n\"Go walk around and look,\" I told her.\n\nShe walked off toward a row of cars while I went in the showroom.\n\n\"Hello, sir. Can I help you?\"\n\n\"Yes, you can. See that beautiful young lady walking down that row of cars?\"\n\n\"Yes, sir.\"\n\n\"She needs a car. Give her a few minutes to look. You show me something that is sporty.\"\n\n\"My name is Dan. How sporty?\"\n\n\"I'm Dr. Smith. I think she would look nice in a sports car, don't you?\"\n\n\"Yes, she would. If you want a nice sports car, let me show you the 350Z.\"\n\nHe walked me over to nice looking red car in the showroom.\n\n\"This is the new 350Z; it's Nissan's sports car. It has a lot of performance, and she would look nice in it, don't you think?\"\n\n\"She would. I could never get in it unless it comes in a convertible.\"\n\n\"It's not for tall people, but it does have plenty of room inside. I do have a convertible.\"\n\nI looked the red car over. It appeared to have plenty of extras on it and was about $35,000.\n\n\"This is the Sports Coupe, it is ready for the road,\" Dan said.\n\n\"Where is the convertible?\"\n\n\"We just got it in; it's in the garage.\"\n\n\"Let's go look at it.\"\n\nHe walked me back through the building to the garage. There was a nice looking white one that was a convertible. We walked over to it.\n\n\"This is the same car, just a convertible.\"\n\nThe top was down, so I opened the door and slid the seat back to see if I could get in. It was tight, but with the top down, I made it. I got out and looked at the sticker, was a little over $37,500.\n\n\"Dan, how much?\"\n\n\"This one?\" He asked surprised.\n\n\"Yes. She would look better in a convertible, don't you think,\" I said messing with him.\n\n\"Yes, she would. It's $37,500.\"\n\n\"Let's go to your office and work on that number.\"\n\nWe went back to his office. I explained a few things to him and soon he came back with a much better number. I wrote him a check.\n\n\"Dan, here is what I want you to do. I am going to go out and help her find an economy something she will be looking at. Once we find it, I'll bring her back in, and you will sit her down and pretend to be writing up that car, but put all of her information down for the convertible. When you are finished, tell her you are going to get the car and have it washed before she gets it. Go get the car while I keep her in here. Come back and tell her they are washing it. After a little bit, go get the convertible and drive it out front.\"\n\n\"She will be surprised.\"\n\n\"Yes, she will. I'm going to help her look.\"\n\nI went out and found Sherri looking at some Sentras.\n\n\"Did you find something?\" I asked her.\n\n\"These are the new Sentras. I can probably afford one of them.\"\n\n\"Find one you like, and I will get someone so you can take it for a test drive.\"\n\n\"James, are you sure about this?\"\n\n\"You can owe me and pay me each month. No interest, just pay me back.\"\n\n\"Okay.\"\n\nWe walked around and looked at several. She decided on a blue one.\n\n\"I will go find someone,\" I told her.\n\nI walked back to the showroom and found Dan.\n\n\"She has decided on a blue Sentra. Will you get the keys and let her test drive it?\"\n\n\"No problem.\"\n\nDan walked out to Sherri and unlocked the key box and they got in and drove off. I called our insurance agent.\n\n\"Hey, Stan, this is Dr. Smith, you still in the office?\"\n\n\"Hey, Dr. Smith. What can I do or you?\"\n\n\"I am buying a car for someone, and they will need insurance. Can you put it on my policy until she can transfer it to her name?\"\n\n\"Sure. What are you buying?\"\n\n\"A Nissan 350Z convertible. Sticker price is $37,500. She is 26 years old.\"\n\n\"That won't be cheap.\"\n\n\"The insurance?\" I asked.\n\n\"Yes, she being 26 and in that sports car. Is she single?\"\n\n\"Yes.\"\n\n\"I can do it right now until she transfers it. When will that be?\"\n\n\"Tomorrow morning?\"\n\n\"Oh, okay.\"\n\n\"Make sure she has insurance to drive it off the lot. We will come and see you mid-morning. I will call you before I come. I will be covering part of the premium for the first year, but don't let her know tomorrow. Make it something reasonable.\"\n\n\"I can do that. Bring the bill of sale in the morning.\"\n\n\"Okay, see you then.\"\n\nI saw them drive back on the lot and stop in front of the showroom and walk to the door.\n\n\"So, you feel comfortable in that car?\" Dan was asking her.\n\n\"Yes. I like it. It is sporty and affordable.\" Sherri told him.\n\n\"Did you find something you like?\" I asked.\n\n\"Yes, I did.\"\n\n\"You two go and write it all up, and I will pay for it.\"\n\n\"If you are sure?\" Sherri asked.\n\n\"Sherri, you need transportation and I want you to have something you like.\"\n\n\"Okay. I'll pay you back.\"\n\n\"Sherri, I will have them wash and clean the car for you while we write up all the paperwork,\" Dan told her as they walked to his office.\n\nI walked around in the showroom and looked at a big SUV that was there. After a while, I went to Dan's office.\n\n\"I just need you to sign right here,\" he told Sherri. She signed the papers. \"That should do it.\" \"Dr. Smith, if you will come with me to the finance office, he can settle up with you.\"\n\nDan got up, and we walked down the hall.\n\n\"Now what would you like to do?\" He asked.\n\n\"I will tell her you are going to get the car and take her out front. You drive it around to us and get out and give her the keys.\"\n\n\"I can't wait to see what happens.\"\n\nHe gave me her copy of the paperwork and walked back toward the garage. I went back to his office to get Sherri.\n\n\"Do you think this will get you around town?\" I asked.\n\n\"Of course. My roommate is going to die.\"\n\n\"What is your roommate's name?\"\n\n\"Lisa.\"\n\n\"Where does she work?\"\n\n\"At a restaurant downtown. She is a waitress.\"\n\n\"Is she gorgeous like you are?\"\n\nSherri looked at me and smiled.\n\n\"She is very pretty.\"\n\n\"You think she would like to work for you?\"\n\n\"She makes pretty good money now.\"\n\n\"Once things are going, you can see how much someone can make and then ask her. Dan is getting your car.\"\n\nI walked her outside, and we waited. A minute later Dan drove up in the convertible and parked it in front of us. He got out and walked to Sherri.\n\n\"Here are your keys,\" he said handing her the keys.\n\nSherri looked at the keys and the car.\n\n\"Real funny,\" she said.\n\n\"Sherri, that is your car, if you like it,\" I told her.\n\n\"That is not what I picked out! I can't afford that!\"\n\n\"Consider it a signing bonus.\"\n\n\"What!?\"\n\n\"It's yours. You will be working very hard for the next year. It is your signing bonus for being willing to take a chance with me.\"\n\n\"You can't do this, James.\"\n\n\"Sherri, you will find out I do a lot of things that people tell me I can't do. It is insured right now, but in the morning we need to go to my insurance agent and transfer it to your name. I will let you pay the insurance instead of a car payment.\"\n\n\"Mr. Smith! I don't know what to say. Thank you.\"\n\n\"Don't thank me yet. I am going to work your pretty ass off.\"\n\n\"This ass!\" She said pulling up the back of her short skirt.\n\n\"That ass.\"\n\n\"No problem.\" She said, finally smiling.\n\n\"Okay then. I will see you in the morning about 9:00.\"\n\n\"Okay.\"\n\nI handed her an envelope.\n\n\"This is your first month's pay.\"\n\nI gave her instructions to the house, and she left in the car with the top down.\n\n\"Dr. Smith? What kind of work will she be doing for you?\" Dan asked.\n\n\"I hired her to manage a new swimwear store coming to town in February.\"\n\n\"She seemed surprised.\"\n\n\"I have that effect on women.\"\n\n\"She is very pretty, if I may say.\"\n\n\"Yes, she is.\"\n\nI got in the Escalade and headed to the house. I called Dawn and told her I would be there by 6:00 so I could eat with them. When I got to the house, they were putting dinner on the table.\n\n\"Did you take care of Sherri's problem,\" Dawn asked.\n\n\"Yes, I did.\"\n\n\"Dawn said Sherri started working for you today?\" Sam said.\n\n\"Yes, she did. Brenda will start as soon as she can.\"\n\n\"And they will be working out of your study?\"\n\n\"For now, until they get offices built in the store. They will also be working from home a lot. If they are here when you are home, please wear some clothes for me.\"\n\n\"Bummer,\" Sam said.\n\nAfter eating, I was in my study working on some things on the computer when my phone rang. It was Brenda.\n\n\"I can start in two weeks if that is soon enough,\" she said.\n\n\"What did the owner say?\"\n\n\"She wasn't happy, but now she thinks I can teach her kid how to run the place in two weeks.\"\n\n\"Okay. The young lady I wanted to hire for the swimwear department started today. Her boss pissed her off, and I told her to quit.\"\n\n\"Maybe I should have done that.\"\n\n\"What time do you get off during the week?\" I asked.\n\n\"The store closes at 6:00, so I am out of there around 6:30. I don't work on Thursday; the owner comes in. You need me to come and help? I can come this weekend after work.\"\n\n\"Not this weekend. Can you come to the house Thursday? Sherri will be here, and you two can get together and start planning.\"\n\n\"Sure. By the following weekend, I will be out of here.\"\n\n\"If you can come Thursday and maybe next weekend, we could get going. You know what I need you to be doing for now if you can do it at home. Do you have a computer at home and internet connection?\"\n\n\"Yes. I have a desktop.\"\n\n\"I will get you a portable.\"\n\n\"Where does Sherri live?\" Brenda asked.\n\n\"She has an apartment downtown.\"\n\n\"If we need to work together and can't be at your house, she can come to my place.\"\n\n\"Great. The first thing I need from you is a list of where you think we can get designer lingerie, and the places you need to go.\"\n\n\"A lot of the designer wear from overseas can be handled in New York. If you want handmade items from France and places like that, we will have to visit them.\" She said.\n\n\"Okay, get all of that information together for Thursday if you can.\"\n\n\"Sherri will find out that a lot of the European designers have places in the states also.\"\n\n\"Good to know.\"\n\n\"When are we going to New York?\" Brenda asked.\n\n\"Damn, I forgot about that. No sooner than two Saturdays from now. Maybe the third Saturday. I will find out as soon as I can.\"\n\n\"James, last question. Who is your partner?\"\n\n\"Linda Williams, but keep that to yourself.\"\n\n\"The Linda Williams?!\"\n\n\"Yes.\"\n\n\"Oh, my.\"\n\nI went back to work on some spreadsheets. About 8:30, Dawn came in and sat down.\n\n\"How are things going?\" She asked.\n\n\"Busy.\"\n\n\"Honey, you have the limo company to start, now this. Can you handle all of it?\"\n\n\"It is going to be busy for the next month or so.\"\n\n\"Are we still going to do the photography?\" Dawn asked.\n\n\"Yes. That is our company.\"\n\n\"Do you need anything special added to the room I am having remodeled?\"\n\n\"I don't think so. Do you know what you want to do in there?\"\n\n\"Yes, I do...to start. I want it all white like those nice porn videos we watch off the internet.\"\n\n\"Then all we should have to do is remove all of the furniture and paint.\"\n\n\"Well, I have to have the curtains put up and furnish the room with a nice big white brass bed and other furniture.\"\n\n\"You shouldn't need a contractor for that.\"\n\n\"I am going to call the lady that helped us design the inside of the house and let her take care of everything,\" Dawn said.\n\n\"Good idea.\"\n\n\"James, school starts in less than a month. You have that to deal with too.\"\n\n\"I am only teaching three undergrad classes; they are not as much work.\"\n\n\"Just make sure you keep everything under control.\"\n\n\"I will.\"\n\n\"Don't stay up late, come to bed, I want to show you something.\"\n\n\"Okay.\"\n\nDawn left, and I called Sam. Olivia answered.\n\n\"Hi, Olivia, is your husband around?\"\n\n\"Let me get him.\"\n\n\"James, what's up?\" He asked.\n\n\"I needed to call you while I had this on my mind. I need two nice portables with everything on them.\"\n\n\"Okay. When?\"\n\n\"When can you have them?\"\n\n\"Tomorrow by lunch.\"\n\n\"Good, they are for two ladies that are working for me.\"\n\n\"What are they doing?\"\n\n\"Linda and I are opening a high-end women's store. They are buyers and managers.\"\n\n\"You're doing what?\"\n\n\"Keep it to yourself, but we decided to open a high-end women's fashion store that carries expensive clothes.\"\n\n\"When?\"\n\n\"In February. Which reminds me; do you install retail systems?\"\n\n\"Sure.\"\n\n\"Okay. You will be doing that before it opens and some security work.\"\n\n\"Get me involved before they start finishing walls and things so that I can run the wires.\"\n\n\"They will be starting on the build-out as soon as possible. Once we have the designs finished, I will tell the architects to get with you. That will also include the store security; cameras, alarms, and some other things.\"\n\n\"What about shoplifting detectors?\"\n\n\"I hope not. Oh, what do you know about card key access for doors?\"\n\n\"No problem. You can use magnetic swipe cards or barcodes.\"\n\n\"Can you put those things on or in elevators?\"\n\n\"Sure. The elevator installers put them in, and I just connect to them and program them.\"\n\n\"How many people can have different cards?\"\n\n\"As many as you want.\"\n\n\"Thousands of different numbers to record who they are?\"\n\n\"Sure.\"\n\n\"Okay. I have some ideas for something. I will get with you once we firm them up.\"",
        "\"Appreciate it. What about the limo business?\" Sam asked.\n\n\"I'm compiling information. If we meet again in two weeks, I may have to move it to that Sunday. Is that okay with you?\"\n\n\"Just let me know.\"\n\n\"Sam, if you want to put $500,000 in the limo business, we can take out the work you do as equity.\"\n\n\"We can talk about that.\"\n\n\"See you Friday then,\" I said. \"Sam, how hard are those Lo-Jacs to install.\"\n\n\"Hook them up to 12 volts and screw them someplace on the car.\"\n\n\"Okay.\"\n\n\"It will be in the afternoon or evening if the things get delivered,\" Sam said.\n\n\"That's fine.\"\n\nI stopped for a few minutes and took a break and tried to organize everything in my head. Samantha came in a few minutes later.\n\n\"You have been in here all evening,\" she said.\n\n\"Have a lot to do.\"\n\n\"Can I help?\"\n\n\"Yes, you can. I have a pile of paper with information on it from everyone that either wants to drive for the limo company or invest. Can you take them and type all the notes up for me over the next few days?\"\n\n\"Sure. Anything else?\"\n\n\"You know how to do spreadsheets?\"\n\n\"Yes.\"\n\n\"On the ones that have indicated how much money they have to invest, can you put all of them in a spreadsheet and total it up for me?\"\n\n\"Sure.\"\n\nSam came to my desk, and I gave her the pile of papers.\n\n\"Honey, did your sister talk to her supervisor about when she would be leaving?\"\n\n\"No. I told her to.\"\n\n\"Okay.\"\n\nSam left with the paperwork. I went back to work putting down everything I needed to talk to the lawyers about and tried to get meetings and other things into my calendar. About 9:00, I stopped. I left the study, and the den was empty. I went on up to the bedroom. Dawn was sitting up in bed watching the TV.\n\n\"Come here, this is what I want,\" she told me.\n\nI sat on the bed with her, and she was watching the porn videos she liked with the all-white rooms.\n\n\"See the sheer white curtains and the white furniture. Will that work?\" Dawn asked.\n\n\"That would be perfect,\" I told her.\n\n\"That room is pretty big. What else do you want in it? It has the white Tantra chair.\"\n\n\"I saw in some pictures one of those lounge chairs that look European. You know the ones with just one arm on one end.\"\n\n\"I know what you mean.\"\n\nShe opened another screen on her computer and searched and found some examples of what I wanted.\n\n\"Yes, something like that, but very elegant.\"\n\n\"What about some nice chairs for pictures?\" She asked.\n\n\"Good idea,\" I told her.\n\nWe searched the internet for examples of the furniture while the videos played on the big TV. Dawn or I would see something, and she would make a note of it. By 10:30 we had a long list of things to consider.\n\n\"This will get me started,\" Dawn said.\n\n\"Now, you make sure you don't put too much on your plate,\" I told her.\n\n\"I think once I show this to the designer; she can handle everything.\"\n\nI put Dawn's computer away, and we got ready for bed.\n\n\"What are the girls doing?\" She asked.\n\n\"I asked Sam to type up some things for me.\"\n\n\"She enlisted Amy's help. They went upstairs.\"\n\n\"I'll go check on them.\"\n\nI walked down the hall and found the two of them in Sam's room working on the notes.\n\n\"You two, go to bed. I don't need those for a few days,\" I told them.\n\n\"James? Who is Lori Walker?\" Sam asked.\n\n\"That is the only female that came to the meeting.\"\n\n\"Do you know anything about her?\"\n\n\"No.\"\n\n\"She put down she has $200,000 to invest.\"\n\n\"Really?\"\n\n\"Yes. The rests are between $50,000 and a $100,000.\"\n\n\"I will have to talk to her.\"\n\n\"Her notes say she is finishing her MBA.\"\n\n\"Really. I will have to see what's up with her.\"\n\n\"I will leave this one on top,\" Sam said.\n\n\"Okay, you two go to bed.\"\n\nI left them and went back to the bedroom. Dawn was under the sheet laying on her side.\n\n\"Are you tired?\" I asked.\n\n\"No, I was waiting on you.\"\n\nShe pulled the sheet back and waited for me to join her. I got in the bed and laid facing her and ran my fingers around the line of her jaw, then kissed her.\n\n\"You know I love you so much,\" I told her. She kissed me back.\n\n\"I do. I'm worried that you are getting very busy.\"\n\n\"I'll get it all under control.\"\n\nWe kissed for a while until Dawn slid her hand down and found my cock. She played with it a while then pushed me on my back and kissed her way down. She gently sucked my cock into her mouth and slowly got me hard.\n\n\"Do you want to be on top?\" I asked.\n\n\"No, I just want to suck your cock.\"\n\nDawn was lying across my stomach and nursing my cock while she stroked it. I relaxed and just enjoyed for a long time. She just took her time and gently sucked my cock as she stroked it over and over. It had been awhile since she had done this to me. It always reminded me of the days when we had first met. She was still getting used to my size then and would often do this before we had sex. No matter how my wife sucked my cock, whether it was like this or when she was being aggressive, it always turned me on.\n\nI reached down and ran my hand over the soft skin of her back, She kept going; not pushing me or speeding up. Just a nice slow blowjob. Even at this speed, I was slowly building to a huge orgasm.\n\n\"Honey, you are wonderful,\" I said. She kept going.\n\nIt finally got to be too much, and I erupted into her mouth as she sucked and pumped. I kept shooting cum into her mouth as she kept nursing my cock.\n\n\"Ahhhh. Yes. You are so fucking hot when you do that honey.\"\n\nShe pumped and sucked the remaining cum out of me then stopped. I wait, then she kissed the tip of my cock and turned around and lay next to me.\n\n\"You still like that?\" She asked.\n\n\"Of course I do.\"\n\n\"You get your cock sucked a lot now. Is it still special when I do it?\"\n\n\"Honey, it is always special when you do that. Since we met, I have always loved it when you take your time like that and just let me fill your mouth. Don't you ever think that I would get tired of you doing something like that. Dawn, no matter what is going on or what happens, sex with you is very special and very different.\"\n\n\"Thank you.\"\n\n\"You want me to eat you?\"\n\n\"No. I just wanted to do that. It has been a while.\"\n\nI rolled to her and kissed her for a long time.\n\n\"Honey, don't you ever forget, you will always be my wife and my lover. No matter what happens with the girls or anyone else. The two of us will always have something to ourselves. The bond we have is so strong nothing will ever take it away.\"\n\n\"I know. Things are just moving so fast with the girls; we need to remember to take time just for us,\" Dawn said.\n\n\"We always will.\""
    ],
    "authorname": "drmac100",
    "tags": [
        "lottery",
        "james",
        "dawn",
        "redhead"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-52"
}