{
    "title": "A Beautiful Day Pt. 03",
    "pages": [
        "The chirp of her phone woke Sara in the morning. She stretched her arm out and plucked the phone off the bedside table. The screen showed a text from an unknown number. She blinked the sleep out of her eyes and read the text.\n\n** Hi Sara... Linda Baldwin. Do you want to meet for breakfast? I'd like to meet before we drive to Perchuga Valley. Let me know. Thanks. **\n\nSara checked the time. 8 AM. She stretched under the covers, feeling the sheets pressing against her naked body. That's right. She'd gone to sleep naked...\n\nSuddenly, she remembered the previous day. It wasn't just that she'd gone to sleep naked. She'd actually done a lot of things naked. The meeting at Pariva - naked. Drinks with Adam - naked. Sex with Leon, on a busy street...\n\nSara reached down and stroked her mons, feeling the novelty of her smooth skin. She wondered what she would wear to the Perchuga Valley that day. Something comfortable, something practical. One thing was for sure: she needed to start behaving herself. Hopefully, she'd gotten out all her crazy impulses the day before. The rest of the trip, she needed to be Dr. Sara Olson, serious and professional. And of course, always fully clothed.\n\nShe typed a text back to Linda. ** Breakfast sounds great. Do you want to meet at 9? ** She sent the text and climbed out of bed.\n\n***\n\nSara walked into the Hilton's coffee shop. She wore a light blue tank top under a white button-up shirt, with khaki capris and her comfortable brown hiking boots. Her dark hair was tied back in a ponytail. She quickly found Adam sitting at a table with a slender blonde woman, presumably Linda. Adam waved at Sara as she approached.\n\nLinda stood and offered her hand. She was taller than Sara, and wore a crisply ironed dark blue blouse and pants. She smiled in a way that seemed very practiced. \"Hello, Sara. I'm Linda Baldwin. Should I call you Dr. Olson, or is Sara okay?\"\n\n\"Sara's fine.\" Sara pulled out a chair and sat.\n\n\"Great. I never want to assume when I'm talking to a PhD. I know you've worked hard to get that title at the front of your name.\" Linda nodded towards Adam. \"Adam tells me you've already met, last night?\"\n\nAdam grinned. \"Yes, although she looks a bit different in her work clothes.\"\n\nSara flashed him the slightest hint of a smile, to let him know that she understood his joke but didn't find it funny. After considering the matter that morning, Sara decided she could probably count on his discretion. It was in his best interest to keep last night's adventure to himself. If he did start telling everyone, his behavior would look almost as questionable as hers. After all, he was the one that came to her room, and she certainly wouldn't have left the room naked if he hadn't been there to walk her out.\n\nThe waiter came. Sara ordered a Belgian waffle with strawberries, Adam ordered an omelette and Linda ordered oatmeal and black coffee. While they waited for their food, Linda made some light conversation, asking Sara about her education, her history with TTX Energy Solutions, her life in Chicago. It wasn't until the waiter delivered the food that Linda got down to business.\n\n\"Do you recall signing a nondisclosure and non-competition agreement as part of your employment contract, Sara? My records show that you signed one shortly after you started working for TTX.\"\n\n\"Yes, I recall.\"\n\n\"Great. Just to remind you of the contents of that agreement. The non-competition agreement says that you will not seek employment with a competitor for up to one year after you leave TTX Energy Solutions. A competitor in this case means any company involved in the manufacture of rechargeable batteries through the use of sagana sap, and broadly includes companies at all stages of the manufacturing process.\" She flashed a smile. \"Including Pariva. Don't let them poach you, Sara. I could imagine them being very interested in a botanist with your education and experience with sagana trees.\"\n\n\"Right,\" Sara said. \"I won't.\" The idea was flattering, but she doubted that Pariva would try to steal her away. \n\n\"There's also the nondisclosure portion of your employment contract, and honestly, Sara, I'm a little more worried about this part. I know that as an academic, you're driven to obtain data and information, and you may be accustomed to an environment where collaboration is encouraged. I must emphasize this: you are not here to collaborate with Pariva. You are not here to help them in any way. Your job is to inspect their trees, that's all.\"\n\n\"I understand.\"\n\n\"As an employee of TTX Energy Solutions, any patentable advances that you make are the intellectual property of TTX Energy Solutions with profit sharing as outlined in the agreement. So if you start casually chatting about a particular theory you have, and Pariva turns around and uses your theory to create the next level of sagana trees, that puts everyone in a sticky legal situation. Potential international lawsuit territory. I know you want to avoid that, so just be very careful what you say, all right? Don't give them any advice, no matter how much you want to, no matter if you see a mistake they're making that's ridiculously easy to fix. No advice, no help, period.\"\n\n\"Right. I understand.\"\n\n\"We want to be friendly, as business partners are, and we're going to enjoy Pariva's hospitality. But we can't be too friendly. Keep Pariva at arms length. All business. Okay?\"\n\nSara kept her face expressionless as she recalled being bent over naked on a busy street while Leon Papega had sex with her from behind. Leon Papega, Pariva's Project Director and the man in charge of the Perchuga Valley sagana orchards, the very orchards they intended to drive to after breakfast. She had the feeling that Linda would have an aneurysm if she found out about that particular tryst. She hoped that she could intercept Leon and caution him to keep it to himself. Melepria were so open-minded about nudity and sex that she could imagine him casually mentioning it in a conversation. \"Okay,\" she answered Linda. \"All business.\"\n\n\"Did you know Leon Papega has offered us the use of his guest cottage while we're there? We'll still have our rooms here, but we can use the cottage as our home base while we're visiting the valley.\"\n\n\"Yes... he did mention it. Is it big enough for all of us?\" Sara asked.\n\n\"He says it has four bedrooms.\"\n\n\"Four bedrooms? His guest cottage has four bedrooms?\"\n\nLinda smiled. \"Sagana money, right? Mr. Papega does very well for himself.\"\n\nSara took a sip of her orange juice, hoping to hide her disappointment that she wouldn't be in the guest cottage by herself. She'd hoped to spend some time with Leon while she was there, but now it seemed like she would be under constant scrutiny. Leon's plans to show her some of his experiments with the sagana trees would no doubt be squelched by Linda and her concern for the intellectual property of TTX.\n\nSara told herself to be patient. This was her first trip to Meleprija, and she shouldn't expect to be given the same independence that Dr. Chen enjoyed, at least not yet. Once she had established herself as dependable, then she'd no doubt be given a bit more freedom. For now, she just had to make sure she carefully fulfilled her responsibilities and avoided any trouble. She would have other trips to Meleprija, other opportunities to get to know Leon better.\n\nShe just had to be patient.\n\nHopefully, Leon would be patient as well.\n\n***\n\nSara was in the process of slinging her three bags over her shoulders when her room phone rang. She let the heavy bags pull her onto the bed as she answered the phone.\n\nIt was Leon. \"I'm five minutes away from your hotel,\" he said cheerfully. \"Will you meet me by the front entrance? I will drive you personally to the Perchuga Valley.\"\n\n\"Okay. Have you talked to Linda and Adam?\"\n\n\"No. Will you tell them?\"\n\n\"Yes, I'll tell them,\" Sara said. \"See you soon!\"\n\nSara picked up her bags and headed downstairs. She would definitely let Linda and Adam know when Leon arrived. But for now, she wanted the chance to speak to him alone.\n\nLeon waved at Sara as he pulled up to the front of the hotel in a large black SUV. The SUV had fat all-terrain tires and the side was flecked with splashes of dried brown mud. Leon hopped out and walked over to her. He was wearing clothes now, a button-up short sleeved shirt and slacks, and Sara was surprised to find she was a little disappointed. \n\n\"Good morning!\" He smiled at her, greeting her with a quick hug. \"Shall I put your things in the truck? Are the others coming?\"\n\n\"Yes... I'll call them and see if they're almost down.\" Sara let Leon take her overnight bag and her field kit, while she followed him to the back of the vehicle with her laptop bag. \"Leon!\" she whispered urgently, stepping close to him. \"I need to talk to you.\"\n\nLeon lifted her bags into the vehicle like they didn't weigh anything. \"Yes? What is it, Sara?\"\n\n\"What happened yesterday... between us...\" She hesitated. \"Can we not mention it to anyone? Especially Linda and Adam? I could get in trouble if my company found out.\"\n\nHe looked surprised. \"You mean our sex? Why would you get in trouble?\"\n\n\"Because they might think that if you're having sex with me, that you have some influence on me, and then they might decide that calls into question my inspection of the sagana trees...\"\n\nHe started to smile, as if he thought she was making a joke. \"But our sex was outside of business, yes? Why would they think it would affect your work?\"\n\n\"I can't explain. I just know they might think that, and it might affect their perception of how I'm doing my job...\"\n\nHe considered her words. \"Okay. I will not speak of it.\"\n\n\"Thanks.\" She looked down at the ground.\n\n\"You still look troubled?\"\n\n\"There's another thing,\" she said. \"They've told me I shouldn't talk to you about my research, or anything you're working on, or look at your experiments. Linda says it's a potential intellectual property issue for us to share knowledge.\"\n\n\"What?\" Leon frowned. \"What does that mean, share knowledge?\"\n\n\"It means everything. It means the only thing they want me to do with sagana trees is to inspect the Kokaya orchard deal. I'm prohibited from doing anything else or looking at anything else.\"\n\nLeon looked crestfallen. \"But I've been waiting for you to come... I have things to show you that are directly a result of your papers... things you will be amazed to see!\"\n\n\"I can't...\" Sara said miserably. \"Not this trip anyway. Maybe later, when they trust me more, and I don't have people looking over my shoulder so much...\"\n\n\"I can't show you my greenhouses? My research lab?\"\n\n\"No. Not this time.\"\n\nHe scowled. \"Very well. It is a great disappointment, and I can't say I understand, because Dr. Albert Chen has looked upon my work many times, and given me his knowledge many times. But even if I do not understand, I will trust that you know what is your duty to your company.\"\n\n\"Thank you,\" she said quietly. \"I'm sorry.\"\n\n\"You have nothing to be sorry for. I can tell it is a disappointment to you as well.\"\n\n\"It is.\" Sara felt like a wedge had been driven between her and Leon, and she wished she had something that could restore his earlier cheerfulness. \"Hey! I have something to show you!\"\n\n\"What is it?\"\n\nSara glanced around to make sure no one was watching. She undid the snap of her khaki shorts and furtively pulled down the front of her shorts and panties, exposing her shaved pussy to Leon. \"What do you think?\" she asked, holding her pink panties low so he could inspect her work. \"I did it last night.\"\n\nHe stared. \"You made it smooth?\"\n\nShe shrugged. \"I notice no one here has hair down there, so...\"\n\n\"Yes, that is true. But you do not have a mapati either.\" He reached down and stroked her mons. He grinned, his good mood apparently returning. \"Yes, Sara, you do look less outsider this way... \"\n\nSara returned his grin, and continued to hold her panties out of the way as his hand slid lower, his fingertips tracing the folds of her vulva. She hadn't expected him to touch her so freely, but she found she didn't mind. Later, she would probably be shocked by her behavior, but at that moment it seemed perfectly natural to have Leon's hand cupping her pussy while just behind him hotel guests pulled their luggage out of cars and handed keys to valets.\n\nLeon glanced towards the front doors of the hotel. \"Will Linda and Adam be arriving soon?\" \n\n\"Oh!\" Sara had forgotten about her two companions. She took a step back, scrambling to restore the front of her shorts. She was thankful that Linda hadn't come upon them while Leon had his hand down her shorts. That would have been tough to explain! \"I'll call them again,\" Sara told Leon, and she walked quickly back towards the lobby, dialing LInda's cell phone.\n\n\"Sara? Is our ride here?\" Linda's voice asked.\n\n\"Yes. It's Leon Papega. He has a truck by the front of the hotel.\"\n\n\"Okay. I'll let Adam know. Are you down there already?\"\n\n\"Yes...\"\n\n\"Okay. We'll see you in a minute.\"\n\n***\n\nThe drive took almost an hour and a half, and although the road was technically paved, it had a lot of bumps and cracks, and portions of it seemed to have more potholes than actual asphalt. In some places, streams of muddy water flowed over the road. Leon didn't slow down when he came to these puddles, passing through them at full speed, sending fountains of water splashing to the sides. \n\n\"We've tried to improve this road,\" Leon explained. \"But the rains always do so much damage to it. Sometimes it's just less expensive to buy trucks that can drive on a bad road.\"\n\nSara wanted to be sitting in the front with Leon, but Linda had claimed that seat, so Sara sat in the back with Adam. She clutched her armrest as the truck bounced and swerved. After about fifteen minutes of driving, she took a dramamine, which thankfully she'd brought just in case her airplane encountered some turbulence.\n\nThrough her window, Sara could see an overgrown wall of jungle along the side of the road. Tall trees draped in vines. Grassy stalks taller than she was. Dark niches where the leaves overhead were so thick that the sunlight couldn't penetrate. To pass the time, Sara started identifying the different plants she saw, keeping a count in her head of each unique species. She even saw a grove of wild sagana trees growing out in the distance.\n\nHer count of unique plant species was almost at two hundred when the road abruptly smoothed out, a sign that they were nearing the Perchuga Valley orchards. They approached a gate set into a tall fence which disappeared into the trees to either side. The fences was six or seven meters high. A guard at the gate recognized Leon and waved. The gate rolled open and Leon drove through. \n\nNow the road passed through sagana trees, their crooked trunks visible as far as the eye could see to either side, the leaves on the top branches forming dense round caps like umbrellas. \"Beautiful!\" Sara breathed, and when she glanced forward, she could see Leon smiling at her in the rear view mirror. \n\n\"They grow very good in this place,\" he said. \n\nSara had viewed a map of the Perchuga Valley project the day before, but it hadn't prepared her for the sheer size of it. She knew that the buildings lay at the center of a large circle, surrounded by a vast expanse of sagana orchards. But she wasn't prepared for how endless the trees seemed. They drove for fifteen minutes, and outside the scenery never changed, nothing but sagana trees, stretching out as far as they could see.\n\nFinally, the orchards ended and the buildings appeared. Leon drove slowly, pointing out the different structures. \"That is one of the worker's dormitories. Those are houses, where some of the workers live with their families. That is our school, for the children. Over there, that is one of the shopping centers.\"\n\n\"You really do have everything here,\" Linda remarked. \"It's like a little town.\"\n\n\"Yes,\" Leon said. \"There are many workers here who seldom have reason to leave the valley.\"\n\nThey took a left turn, and now they drove through a street filled with large houses. Leon tried to explain who lived in which house, but Sara couldn't follow the Melepria names. Leon pulled up to a large two-story house with a swimming pool in front.\n\n\"This is the guest cottage,\" he said.\n\n\"This is the guest cottage?\" Sara gaped in astonishment at the size of the place. It looked positively luxurious. \"If this is your guest cottage, then where's your house?\"\n\n\"I live over there.\" He indicated a sprawling structure down the road from the cottage. It consisted of several intersecting rectangular buildings, some of them with glass ceilings. It looked more like an industrial building than a house.\n\nAs if he could hear her thoughts, Leon explained, \"I live by myself, and I have little need for living space. Most of my house, I devote to my studies and experiments. I have several greenhouses, and much specialized equipment.\" He seemed as if he was about to say more, but abruptly fell silent, frowning. Sara could tell he'd remembered her warning.\n\n\"Let me help you to settle in,\" he said instead. He pushed open the front door of the SUV, and the rest of them followed his lead, stepping outside.\n\n\"Whew!\" Adam said. \"This humidity!\" The air pressed down on them, heavy and hot. Sara was glad she'd worn shorts.\n\n\"Your body will adjust,\" Leon said. \"The cottage has very good air conditioning, as well.\"\n\nThat was wonderful for Linda and Adam, Sara thought. But as for herself, she wouldn't be in the cottage. She was going to be sweating out there in the trees.\n\nLeon helped Adam with unloading their bags from the back of the truck. \"I will send Taloga to pick you up,\" he said to Sara. \"He is very good, very helpful. He will take you to the Kokaya section. I have told him to assist you in whatever you need. Do not hesitate to ask him, should you need anything.\"\n\n\"Okay.\"\n\n\"I will see you later, Dr. Sara.\" Leon smiled at her, then turned to Adam and Linda. \"Adam, Linda, there is food in the cottage, and I will arrange dinner, should you decide to stay for it. I can also arrange travel back to your hotel tonight, if you wish it, but I think you will find it is easier to stay here.\"\n\nLeon left the keys to the cottage with Linda before driving off. Linda immediately headed for the door and the promise of air conditioning. Adam scooped up Sara's overnight bag along with his own bag, and waited for her to gather the rest of her things.\n\n\"Have you worked with Leon before?\" he asked in his cheery British accent.\n\n\"No,\" Sara answered. \"I just met him yesterday.\"\n\n\"He seems very friendly, don't you think?\" Adam remarked. \"Particularly with you. It sounds like he's very much looking forward to working with you.\"\n\n\"Great,\" Sara said, her voice neutral. \"I'm sure he wants this deal for the Kokaya orchards to go smoothly.\"\n\n\"Right,\" Adam said. His mouth twitched as if he was suppressing a grin. \"You met him yesterday at Pariva's downtown building, is that right? You had a meeting with him?\"\n\n\"Yes.\" Sara started to walk towards the cottage. Adam walked right behind her.\n\n\"You must have made quite an impression...\" Adam said. When Sara didn't reply, Adam continued, \"Perhaps Leon is pleased to be working with someone who has such an interest in Melepria culture? Last night, you seemed to jump at the chance to walk about naked like the Melepria women do. Tell me, was that the first time you'd ever tried it?\"\n\nSara stopped before entering the cottage, turning towards Adam. \"The first and only time,\" she told him coldly. \"Don't expect it to happen again.\"\n\nHe held up a hand, smiling. \"Oh, I didn't mean...\"\n\n\"I need to get ready. If you'll excuse me.\" Sara dropped her field kit on the tile floor, where it made a loud bang. She held out her hand for her overnight bag, and after a moment's hesitation, Adam gave it to her. Without another word, Sara went up the stairs. She found a small bedroom that was off by itself in the back, and put her things there.",
        "After about ten minutes of unpacking, a man appeared at her door. He was a middle-aged Melepria man with short hair and a wide nose. He wore a dark brown shirt and shorts, an outfit that made her think of a park ranger. When he spoke, he had a thick Melepria accent that made him a little difficult to understand. \"Dr. Sara?\" he asked. \"I am Taloga. If you are ready, I will take you to Kokaya.\"\n\n\"Thank you, Taloga,\" she said. \"Let's go.\"\n\n***\n\nSitting in the dirt under a tall sagana tree, Sara wiped the sweat from her forehead and thought about Adam and Linda sitting in the air-conditioned cottage. She rolled her eyes. For all their advice, she was the one doing the actual work. \n\nShe dug at the foot of the tree with a small shovel to take a root sample. The sweat stung her eyes, despite the kerchief she'd tied around her hair. She tried to wipe the sweat away with a cloth, but found that the cloth was already filthy.\n\n\"Dr. Sara?\" Taloga stood next to her, offering her a pristine white cloth to wipe her face with. She took it; it was even warm and damp.\n\n\"Thank you,\" she said, and wiped the mud and sweat off her face. Taloga was amazing. He seemed to know whatever she needed, and had it ready just as she needed it.\n\n\"It is nearly four o'clock, Dr. Sara,\" Taloga said. \"If you will be going back to your hotel, you will need to leave soon.\"\n\n\"I still have a lot to do. Leon said I could spend the night in his cottage?\"\n\n\"Of course, Dr. Sara. Is that what you would like to do?\"\n\n\"Yes, please.\"\n\n\"I will let Leon know.\" Taloga stood for a moment, watching her, and Sara suspected that her decision to remain in the valley had already been anticipated. Taloga spoke again, \"Dr. Sara. We will have dinner prepared for you. When may I let them know to have it ready?\"\n\nSara looked down at the small hole in front of her, the exposed root. \"I still have a lot to do. And then I need to clean up. Maybe I could work another hour... how about... six thirty?\"\n\n\"I will tell them six thirty.\" Taloga disappeared.\n\nSara pulled out a chromatic camera and set it to take a picture of the root. Afterwards, she took out a corer and took a sample of the root, labelling it and putting it in a canister with the other samples. She didn't expect to find any issues with this tree. It looked perfectly healthy and robust, just like all the other trees she had checked that day. Leon really knew how to produce quality saganas.\n\nShe checked the crude map she'd drawn of the Kokaya orchard, then headed towards the sagana that was her next random sample.\n\nBefore she knew it, Taloga stood next to her again. \"It is five o'clock, Dr. Sara,\" he said. \"You have an hour and a half before dinner.\"\n\n\"Already?\" Sara stood. She looked at her arms, which were coated in a layer of dirt. Her tank top was drenched in sweat and streaked with mud. While she'd been working, she'd been too focused to notice how dirty she was. But now her skin itched and she was dying for a shower.\n\n\"Yes,\" Taloga said. \"Should I drive you back now, so you may prepare for dinner?\" \n\n\"Yeah. We should head back.\" Sara could see Taloga's ATV a short distance away. To her eyes, it looked like a small jeep. She noticed movement to her left, and looked in that direction. Several Melepria men were walking through the orchard, about ten meters away. She had seen similar workers throughout the day. Some wore light green uniforms similar in style to the brown uniform that Taloga wore, while others chose to work naked. \n\n\"Are they done with their workday, too?\" she asked.\n\n\"Yes, Dr. Sara. Their shift ends at five. Now they go to the showers.\"\n\n\"Showers? There are showers near here?\"\n\n\"Yes. We provide a shower and changing area for our workers to become clean after their shifts. But I think you would prefer to shower at the cottage, Dr. Sara. You will not find privacy in these showers that our workers use.\"\n\nSara peered into the trees, trying to locate the showers, but the men had disappeared from view. \"Are the showers for men only?\"\n\n\"No. We employ women as well, and they are free to use the same showers. As I said, there is not the privacy that you are accustomed to, Dr. Sara. Our men and women shower together. No one minds. We are used to it here.\"\n\nSara looked down at her soiled clothes, considering. That morning, she had made a vow to be professional and hold herself to American standards of modesty while she was in the Perchuga Valley. But did she really need to drive all the way back to the cottage to clean off when she had an available shower right next to her?\n\n\"I'd love to wash some of this dirt off me,\" she said.\n\n\"Shall I drive you back then?\" Taloga asked.\n\n\"Well... maybe I'll just take a quick rinse in the showers here, before we drive back. That's okay, isn't it? Just to get some of the grime off.\" It wasn't as if Linda or Adam would see her. Just a handful of Melepria workers who probably wouldn't look twice at her.\n\n\"You are certainly free to do that if you wish,\" Taloga said. \"I will have the clothes you are wearing cleaned, if you like, and I can have clean clothes waiting for you after your shower, as long as you don't mind wearing one of our uniforms?\"\n\n\"That'd be wonderful,\" Sara said. \"Can you point me to where I should go?\"\n\n\"Of course.\" Taloga hailed a Melepria man who was walking by. \"Mikka! Hai!\" Mikka changed course to approach them. He was one of the naked workers, lean and muscled with a dangling penis that Sara tried not to look at. \"Mikka, Dr. Sara would like to take a shower before I drive her back. Will you show her where the showers are?\"\n\nMikka nodded. \"Yes, sir.\" He looked at Sara. She waited for him to start walking, but he just stood there, gazing at her expectantly.\n\nTaloga cleared his throat. \"I can take your clothes to get cleaned now, if you like, Dr. Sara.\"\n\n\"Oh! Right.\" Sara looked back and forth between the two men, then down at herself. Of course. Her clothes. She reached down and popped the snap of her shorts. Feeling suddenly self-conscious, she started to push the shorts down her hips. Her pink panties showed for a moment, but she quickly decided they could go with the shorts and she pushed them both down at the same time. The shorts were lose enough that once they passed her hips they slid down on their own. She stepped out of them and knelt to pick them up. Somehow, Taloga had found a laundry bag, and he held it open while she dropped her shorts and panties into it.\n\nShe caught the bottom of her tank top and pulled that off next, twisting it free of her hair and dropping it into the bag. Before she had the chance to reach for the clasp of her bra, Mikka stepped behind her and helpfully undid it for her. He pulled the bra free of her breasts and gave it to Taloga.\n\nSara stood naked, shifting her weight from one foot to the other. The breeze that passed under the canopy of sagana branches flowed over her sweaty body and felt amazingly refreshing. She reached up to undo her ponytail, using it as an excuse to bring her arms up and let the air cool the sweat under her breasts and shoulders. \n\n\"I can have your boots and socks cleaned as well,\" Taloga offered. He held up a pair of sandals that he'd seemingly conjured from behind his back. Sara kicked off her boots and bent over to tug off her socks. She slipped her bare feet into the sandals, and, of course, they fit perfectly. Maybe Taloga had researched her shoe size.\n\n\"The showers are this way, Dr. Sara.\" Mikka took a couple steps and beckoned her to follow. \n\nSara glanced at her field kit and sample bags, but Taloga quickly reassured her, \"I'll load your things into the ATV. They will be safe.\"\n\n\"Thanks, Taloga,\" Sara said, feeling suddenly timid. \"For everything. You've been a big help today.\" She couldn't suppress her awareness that her nude body was now displayed to him. Did he still see her as Dr. Sara when she was naked?\n\nTaloga just nodded to her, seemingly indifferent to her unclothed state. \"Of course, Dr. Sara. Enjoy your shower.\" He turned away.\n\nSara looked at Mikka, and he smiled. \"This way. Come with me.\" He led her into the orchard. After a minute of walking, she still couldn't see the shower building, or any building, only Mikka walking in front of her and the trees all around her.\n\nWe're like Adam and Eve, she thought to herself as she quickened her pace to walk beside Mikka. Adam and Eve before they cared that they were naked, and this is Eden. \n\nShe felt exhilarated. Taloga had departed in his ATV, and in every direction she looked, she couldn't see a single sign of civilization, only gorgeous sagana trees surrounded by the stubborn grass that grew in the dim light of the jungle. She walked naked through the wilderness, caressed by the wind, with a strong man who was also naked. Her sandals were the only reminder that the modern world existed, and she almost kicked them off for that reason.\n\nWhen a concrete wall became visible through the trees, Sara felt disappointed. She could hear the hiss of water from behind the wall, and the murmur of voices. The sagana trees gave way to a clearing, and she could see the rectangular building filling the clearing, with an opening on one side. Mikka headed for this opening, and Sara followed him inside.\n\nShe expected just a wide room with shower heads, like the kind of crude shower area she'd encountered at beach parks in the United States. But inside, it looked more like the locker room of a gym. Several rows of lockers were available for workers to stow their private items, and a naked Melepria woman stood behind a window, distributing soap and towels. Mikka helped Sara to request a towel, a washcloth, a small bottle of body wash and a small bottle of shampoo. Then he walked with her into the shower.\n\nThe actual shower area was twice as large as the locker area, and Sara estimated that about twenty workers could shower at the same time. Aside from Mikka, she only counted three other Melepria men showering. She was able to find a spot at a distance from them, although she could still clearly see them and they could clearly see her. Mikka seemed to respect her need for some space, and chose a spot near the other three men. \n\nSara turned on the water and adjusted it to the point where it was on the verge of being too hot. The water pressure was perfect, and she stood under the thundering spray, feeling a layer of dirt leave her body. She rinsed her hair, then started to scrub the dirt off her arms. \n\nAs she washed herself, she snuck peeks at the four men. They were all shaved, and they all had mapati tattoos. Was it because they were shaved that their penises looked so long, dangling like thick vines between their legs? She hoped they didn't notice her glances. She stared as one man lifted his penis in his hand and rubbed soap on it. Quickly, she turned away, facing the shower wall.\n\nWhen she turned around again, she caught two of the men looking at her. They looked away as soon as she noticed them, pretending to be focused on scrubbing themselves. But she noticed one of the two men now had his penis jutting out from his body. As she stared, his penis continued to swell, becoming erect right in front of her eyes.\n\nWas it because of her? Despite Taloga's assertion that the Melepria men were used to showering with women, was the sight of her naked body giving this man an erection? Sara looked nervously at the other man, and discovered he was looking right at her, and now he was becoming erect, too.\n\nSara squirmed, turning away again. So much for her assumption that the Melepria men would treat her with indifference while she showered. Actually, she should have known better. Just the day before, Leon had become erect in Miguel Korhika's waiting room, or \"had stone\" as they called it, and the receptionist had barely considered it to be significant. Leon had casually informed Sara that his \"stone\" was due to his finding her attractive. And she'd been wearing clothes at the time.\n\nNow she was naked and wet, and two naked and wet men on the other side of the room had their stiff penises pointed at her, and probably that was just another day in Meleprija. Probably the women who showered here took no notice of the men's erections. As Taloga had said, they were used to it.\n\nSara turned back towards the men, letting them view her front. The fourth man was just turning off his shower, leaving the two erect men and Mikka. The two erect men avoided looking directly at Sara, only sneaking sidelong peeks. Their erections did not appear close to abating; if anything, they looked bigger than ever. Sara squeezed some shampoo into her palm and started to rub it into her hair, putting down the small bottle so she could use both hands. She knew that lifting her arms like that made her breasts sway, and she could see the men glancing at them. The lather washed through her hair, sending bubbles sliding down the front of her body.\n\nThey were turned on, it was obvious from their erections. But could they tell she was getting turned on as well? Were they experienced at reading the signs of arousal on a woman's naked body? She couldn't suppress the thrill she felt, standing naked in front of these two tall, muscular men, seeing their thick penises swollen and throbbing at the sight of her, yet knowing that they didn't dare make a move on her. She was a visitor, a guest, forbidden to them.\n\nOr was she? Maybe that was just another assumption she was making, an assumption about Melepria culture that might turn out to be wrong. She admitted that was part of what made it exciting. Maybe they were just a minute away from walking across the room and asking to make love to her. What would she say if they did?\n\nShe would say no, of course. But it was still exciting to imagine them asking. She fought the urge to slide her hand between her legs and test her sensitivity. Maybe if she put some body wash on the washcloth... and pretended to be scrubbing down there... would they know what she was doing? Would it turn them on even more?\n\nMikka looked over at her and smiled. Sara turned her knee in nervously, pressing her thighs together. Had he read her thoughts? \n\nHe turned off his shower and walked in her direction, veering to the left towards the shower that was the neighbor to hers. Instead of turning on the shower, he leaned against the wall just under it, his body still dripping. \"It bother you? That they look?\" He nodded towards the other men. \"They try not to. They just not use to see body like your.\" \n\n\"Really?\" Sara had her head turned towards Mikka while he spoke, but her front was still angled towards the two men on the other side of the room. She knew their eyes were fixed on her, taking advantage of her distraction to gaze freely at her nudity. \"But they're used to seeing women in these showers, right?\"\n\n\"Yes. But not body like yours. Ah...\" He struggled with his words. \"Your body is like... ah... flower? Like, soft to touch like flower petal?\"\n\n\"Soft...?\" Sara glanced nervously at the two men, who quickly looked away.\n\n\"Yes... ah... you know orchid? Orchid flower?\"\n\n\"I know orchid.\"\n\nMikka nodded, grinning. \"Like orchid. Right.\"\n\nThe two men across the room turned off their showers. Sara watched them as they walked towards the locker area. Both men carefully avoided looking at her, as if Mikka had scolded them for their interest. They still both had erections, though, and Sara watched their penises swing back and forth as the men walked.\n\nThat left Sara alone with Mikka in the shower, and he leaned against the wall patiently, as if he felt obligated to wait for her. Sara pushed her wet hair out of her eyes and peeked down at her body. She was like an orchid? What did that mean? Did it refer to all of her? Or just a specific part? \n\n\"Do you think Taloga is back with clean clothes for me?\" she asked.\n\nMikka shrugged. \"He is fast. Yes, maybe he is back. If he is not, I can find you uniform. You wear uniform?\"\n\n\"Yes. I mean, I don't have anything else to wear.\"\n\n\"Right. You finish your shower, I check.\" He nodded at her, then turned and walked toward the locker area. Sara didn't even wait until she was out of sight; as soon as he turned away, her hand dropped to press against her pussy. She stroked herself while she watched his muscular backside striding away. The tip of her finger wriggled between her labia, then explored upward towards her clitoris. She shivered as her finger touched that swollen, sensitive nub. Her other hand went to her breast, squeezing it and tugging on her nipple.\n\nShe played with herself for a few minutes, aware that at any moment a new group of Melepria men could walk in and see her. The responsiveness of her body and the ease at which she kindled the pleasure between her legs convinced her that she could bring herself to orgasm very quickly. But she wasn't prepared to be that daring.\n\nShe turned off the shower, starting with the hot water, so that cold water enveloped her body for several seconds before she turned that off as well. The cold water invigorated her, although it didn't seem to do anything to lessen her state of arousal. She walked over to her towel and slowly, methodically dried her body. It gave her time to cool down and get control of herself. No one new entered the shower; perhaps all the workers done with work at five had already cleaned up.\n\nShe tied the towel around her waist, leaving her breasts exposed, and walked through the door to the locker area.\n\nTaloga waited for her there. He presented her with a neat stack of clothes. \"These should fit, Dr. Sara,\" he said. \"Your other clothes are being cleaned, and will be returned to your room in the guest cottage.\"\n\n\"Thank you, Taloga.\" Sara removed her towel and draped it on a bench. She riffled through the clothes. A green uniform shirt with pockets on the front and shoulders, matching green shorts, plus a white bra and panties. Taloga stood patiently, watching while she dressed. She pulled on the panties, then looped her arms through the straps of the bra, pausing to position her breasts properly before snapping it. The bra fit her perfectly. Had Taloga learned her bra size from the dirty bra she'd given him to clean, and then retrieved a new one that matched? Or was it just a lucky guess?\n\nThe shorts were a little snugger than she was used to, but the shirt fit her fine. \"How are these clothes, Dr. Sara?\" Taloga asked.\n\n\"Perfect,\" she replied. \"I'm ready to drive back if you are.\"\n\nShe followed Taloga outside. His ATV was parked just a few meters away from the shower entrance. As Sara took her seat in the ATV, she noticed a man leaning against the building, just around the corner from the entrance. She recognized him as one of the Melepria men who had become erect in the shower. He was still naked and still erect, and now he was stroking his penis with a togoja. Sara couldn't help but stare as the man openly masturbated in front of her. He noticed her watching and nodded to her casually, as if acknowledging an acquaintance on the street. The rhythm of his stroke remained steady.\n\nSuddenly, he had a mapa bag in his hand. He pulled the togoja to the base of his penis and slipped the mapa bag over the swollen head. The ATV roared to life just as the man's penis began to twitch, no doubt spattering the inside of the bag with his ejaculate. The ATV accelerated, following the road through the trees, and the man disappeared from sight.\n\nTaloga guided the ATV along the dirt road, threading through the endless sea of sagana trees. He drove faster than Sara expected, faster than seemed safe, but she felt confident that he knew what he was doing. The wind rushed through her hair, pulling at the wet strands and making them dance. She closed her eyes, breathing deeply the earthy smells of the forest, letting her body sway and bounce against her seat belt as the ATV sped through the orchards.",
        "***\n\nShe found Adam working on his laptop in the living room of the cottage. He glanced up at her. \"Nice uniform,\" he remarked, trying not to grin. \n\n\"Did you have a good day?\" she asked.\n\n\"Certainly. The wifi here is excellent. I can work just as if I'm in the office.\" He leaned back in his chair. \"You're a bit cleaner than I expected after a day digging in the dirt.\"\n\n\"I showered.\"\n\n\"You did? Where did you find a shower in the middle of an orchard?\"\n\n\"I found one.\" Sara walked to the staircase. \"I need to get ready for dinner. Talk to you later!\" She went up the stairs before he could respond.\n\nAs soon as she reached the second floor, Linda's door opened. \"Ah. Sara. I thought I heard you come in.\" Linda was already dressed for dinner in crisp black slacks and a red blouse. \"Leon is having us over for dinner at his house. We can walk there when you're ready. It's at six thirty, so we shouldn't leave any later than six fifteen. Can you be ready by then?\"\n\n\"Sure,\" Sara said. \"It doesn't take me long.\"\n\n\"Great. Did you already take a shower?\"\n\n\"A quick one.\"\n\n\"Okay. Leon had one of his men stop by with a few things for our rooms, and they gave us the softest fleece bathrobes. You should find one hanging on the inside of your door. There's just one bathroom for all of us to share on this floor, but I think Adam and I are already ready to go, so it's all yours if you need it.\"\n\n\"Okay. Thanks!\" Sara walked to the bedroom she had claimed at the end of the hall. She stepped in and closed the door. On the back of the door, she found a bathrobe hanging from a hook, just like Linda had said. Sara locked the door and started to strip off the green uniform.\n\nWas it worth it to take another shower? Despite the distractions, Sara felt like she'd cleaned herself off fairly well in the communal shower. She folded the green shirt and shorts and set them on top of the dresser. A large mirror was attached to the wall above the dresser and Sara paused to look at herself in her underwear. The bra and panties didn't belong to her, but they fit her perfectly, so she decided to keep them on. She retrieved the bathrobe from the back of the door and slipped her arms into it. Linda was right, it was very plush.\n\nSara looked towards the closed door and was surprised to see a second robe hanging there. This one was black and silky, like a kimono. Very feminine. Did Linda also receive a second robe like this? Or was it something provided only for Sara?\n\nAfter a moment's hesitation, Sara took off the fleece bathrobe and reached for the black silk robe. It weighed next to nothing. She slipped it on, tying it around her waist with the attached belt. It was short, leaving most of her legs exposed, and the thin silk clung to her body. After looking at her reflection in the mirror for a minute, Sara removed the robe, but only long enough to take off her bra and panties. She put on the robe again and gazed at herself in the mirror.\n\nVery sexy. The clinging silk was thin enough that it clearly showed the poke of her nipples. Had Leon given her this? It was lovely, but way too sexy to wear outside her room. Definitely not something she could wear to walk past Linda and Adam on the way to the bathroom.\n\nSara removed the black robe and hung it again on the hook, then hung the bathrobe over it. She went into her overnight bag and found a pair of loose pants and another tank top. She dressed quickly and didn't bother with make-up. When Linda came down the stairs just before six fifteen, Sara was already in the living room waiting. \n\n***\n\nThey ate dinner on Leon's second floor patio, with a view of the mountains and the setting sun. It was gorgeous. Sara could see the ring of sagana trees in the distance, surrounding them on all sides. A flock of raucous colorful birds flew by overhead, chattering to each other.\n\nInstead of a set menu, Leon had one of the chefs from the worker's cafeteria come to the table and offer suggestions for their dinners. When Sara's turn came to select her dinner, she just smiled at Leon and said, \"Whatever Leon recommends.\"\n\nLeon returned her smile. He said to the chef, \"Bring her the Malosa flank steak. I'll have the same.\" He turned to Sara. \"It is my favorite. I hope you enjoy it as well.\"\n\n\"Malosa?\" Sara asked. \"What's that?\"\n\nWhich made the chef laugh. \"I am Malosa!\" he told her. \"This is my special dish!\" The chef was still laughing as he went off to prepare their food.\n\n\"Come,\" Leon said. \"While we wait, I will show you my house.\" He spoke to all three of them, but his eyes were on Sara. As they stood, Sara could feel Linda also watching her. \n\nLeon had several luxurious rooms: a large living room, a dining room, an entertainment room with a television screen so big it should have been in a movie theater. But it was immediately evident that this wasn't the part of the house he was interested in showing them. He took them to a large brown door which he had to unlock with a fingerprint scan. Inside, they found themselves in an enormous room filled with laboratory equipment.\n\n\"This is my personal laboratory,\" Leon told them proudly. \"The trees are my passion. I have no wife or children; here is where I spend my time.\"\n\n\"Oh my God!\" Sara stared at a round black cylinder with an attached display screen. \"Is that a Ludwig centrifugal spectrometer?\"\n\n\"Yes!\" Leon beamed.\n\n\"And you have a Pederson sample analyzer too! Those are expensive!\"\n\n\"Yes! Have you ever used one?\"\n\n\"An older model...\" Sara gazed at the piece of equipment enviously\n\n\"Dr. Albert helped me to know what to buy,\" Leon said. \"Over there, that white door is a vacuum-sealed lock to a culture growth laboratory.\"\n\n\"Amazing!\" Sara's eyes sparkled. \"Is there a window? Can I see inside?\"\n\n\"Perhaps another time,\" Linda interjected smoothly. Her eyes flashed a warning at Sara. \"I think it's important that you relax in the evenings, Sara. You've spent all day toiling on these saganas... I don't want you to burn out on them and lose your focus.\" \n\nThe message was clear. \"Right,\" Sara said. \"Maybe another time, then.\" She looked at Leon, trying to convey an apology to him.\n\nLeon frowned. She could tell he was eager to show her around his laboratory, and annoyed that he couldn't do so. \"Let me show you through my small plant greenhouse then.\" He gave Linda a hard stare. \"No saganas there, only small plants and flowers.\"\n\nLinda nodded. \"We'd love to see it.\"\n\nLeon led them out of the lab and through a winding corridor, finally opening a door into a vast greenhouse. Sara had been excited by his laboratory, but her breath was just as taken away by his greenhouse. He had rows and rows of plants, with beautiful, bright flowers of all colors. He led them along a meandering path through the crisscrossing aisles, pointing out significant plants in his collection, and grinned as Sara breathlessly spoke the latin names of his rarer plants, her eyes glowing with delight. \n\n\"Are those your orchids?\" Sara pointed at one section of the greenhouse, where a sea of pink and white flowers bloomed. \"You have so many!\"\n\n\"Yes. Do you like orchids?\"\n\n\"Yes...\" Sara thought of Mikka's comment from earlier, and felt her cheeks grow warm. \"Do you?\"\n\n\"I love them,\" Leon said, and chuckled.\n\nA man appeared at the door of the greenhouse, and called to Leon in Melepria. Leon said something back to the man, then turned to them and in English said, \"Dinner is ready. Let us return to the table.\"\n\n***\n\nIt was the white wine that did Sara in. They finished one bottle during dinner and started another just before dessert. Linda and Adam asked for coffee with their dessert, but Sara just poured some more wine into her glass. She'd only finished half before her eyelids started to droop.\n\n\"I think we need to get Dr. Olson to bed,\" Adam remarked, after noticing her head nod over and snap back up.\n\n\"I'm sorry,\" Sara said to Leon. \"I feel so sleepy all of a sudden!\" She tried to shake it off, but immediately felt the weariness pressing against her again.\n\n\"You've had a long day,\" Linda said. \"And another long day tomorrow. I think maybe it's time we head back.\"\n\nAfter thanking Leon for the dinner, the three of them walked back to the cottage. The night was warm, with a slight breeze stirring the leaves around them. Above them, a crescent moon lit the sky. Sara felt more awake outside in the fresh air, but knew that when they returned to the cottage she barely had the energy to brush her teeth and wash her face before retreating to the comfort of her bed.\n\nShe left Linda and Adam in the living room as she went upstairs and changed into a t-shirt and a comfortable pair of shorts. She could hear the murmur of her two companions chatting downstairs as she walked to the bathroom and took care of her nighttime tasks. When she finally collapsed onto the bed, sleep took her almost instantly. She didn't even bother to get under the covers.\n\n***\n\nHer eyes opened in the darkness. She leaned over to check the time on her phone. 12:07. Middle of the night. \n\nShe felt disoriented, confused by the room around her. Where was she? What had happened? Her memory slowly trickled back and she began to reassemble her situation. She was in Meleprija. She was in Leon's guest cottage. She'd eaten dinner at Leon's house. How long ago? Only about four hours? It felt like it had been days ago.\n\nShe remembered walking back with Adam and Linda. Exhausted and light-headed from the wine, clutching the railing of the stairs as she ascended. What time had she fallen asleep? Definitely earlier than usual. 8:30? 8?\n\nShe listened for the sounds of Adam and Linda, but the cottage was quiet. They were probably asleep. It was past midnight, after all.\n\nWas Leon asleep?\n\nThe weariness which had overtaken her earlier had passed, apparently satisfied by her few hours of sleep, and now she felt wide awake. She rose from her bed and walked over to the window. Outside, a landscaped yard, strategically lit by carefully placed floodlights, extended for twenty meters before hitting a line of boundary bushes that separated the yard from the road . In the distance, she could see the blocky silhouette of Leon's house. A few of the windows on his second floor glowed with light.\n\nDid that mean he was awake?\n\nSara watched his windows for a few minutes, looking for Leon's dark outline to pass by, but she didn't see him. It didn't mean he wasn't awake. Maybe he was on the couch watching TV, or maybe he was at his desk working.\n\nSara walked to her bedroom door and reached under the heavy bathrobe that hung there, extracting the silky black robe. She draped it over the bed and then stripped off her shorts, panties and t-shirt. She slipped on the robe and tied it around her waist, enjoying the way the cool fabric slid over her skin. She returned to the window, gazing at Leon's house.\n\nThe silk robe was a gift from Leon, she had no doubt about that, and it was meant to be worn without anything underneath. Why had he given her something so sexy to wear? What did it mean? Did a Melepria man even consider this to be sexy attire?\n\nAfter a moment's consideration, Sara undid the belt, leaving the robe open in the front. She looked down at her body, her light skin standing in contrast with the shiny blackness of the robe. She looked through the window again, at Leon's house, at the night.\n\nThe next thing she knew, she was easing open her bedroom door and peeking outside. The doors to Adam and Linda's rooms were closed, and the house was dark and quiet. Sara crept over to the stairs and descended slowly, step by step, carefully placing her feet to make no sound. She reached the front door and eased it open, stepping out into the night.\n\nThe cool evening air embraced her bare skin, and the breeze toyed with the bottom of her robe, causing the silk hem to lightly stroke her upper thighs. Sara touched her nipples with her fingers, feeling the way they had tightened into little pebbles from their exposure. She pulled the door carefully closed, turning the knob to make sure it wouldn't lock behind her. \n\nHow far to Leon's house? Less than a five minute walk. She listened for a moment, but aside from the sounds of night insects and the far-off warble of a night bird, the world seemed very quiet. How strange, to listen to a world absent the buzzing of driving cars. She knew that the facility had security guards driving around on patrol, but she couldn't hear any nearby. \n\nIf a security guard did drive past and saw her walking half naked on the road, what did it matter? She wasn't breaking any rules. Sara walked down the path to the road and turned towards Leon's house.\n\nThe breeze caught her robe, pulling it up behind her and making it flap like a cape. It was a sensual feeling, to be walking naked through the night air. Sara's heart began to beat faster as she approached Leon's house. What if he wasn't alone? What if Sara knocked on his door, and he opened it to see her standing there naked aside from the flimsy robe draped on her shoulders, and behind him she could see a crowd of his guests gawking at her?\n\nIt wouldn't matter, she assured herself, for the same reason it wouldn't matter if a security guard drove by and saw her walking along the road. She wasn't breaking any laws. It was okay to be naked like this in Meleprija. \n\nWhat if Leon invited her in, introduced her to his guests? What if they were all wearing clothes, and she was the only one who was naked? Was she capable of engaging in conversation with strangers wearing only a tiny, open robe?\n\nSara pushed her hair out of her eyes, shaking her head. What was she doing, imagining these scenarios? Trying to terrify herself into going back to bed? Or was it turning her on?\n\nSara reached Leon's house and walked up a white path to his front door. She stood on his porch, suddenly nervous, and a part of her wanted to turn right back and go back to bed. She knocked on the door, at first timidly, then a little louder.\n\nA minute passed. She heard the sound of footsteps behind the door. A lock being undone. The door opened, and Leon stood there, looking down at her. He was naked.\n\n\"Sara?\" he asked, surprised. His eyes flickered over her nude body. \"Is everything okay?\"\n\n\"Yeah...\" Sara said shyly. \"I just... I woke up and couldn't get back to sleep... I wondered if you were awake...\"\n\nHe smiled. \"I'm up late, yes... involved with some work, but it's work you may be interested in. Would you like to come in?\"\n\n\"Yes, please,\" she murmured.\n\nAs she stepped in, he said, \"Do you like that robe I left you? It looks very nice on you.\"\n\n\"Yes. Thank you.\"\n\nLeon took her hand. \"Come with me. Let me show you what keeps me up at night.\"\n\nThis time when Leon showed her his laboratory, Sara didn't have to worry about Linda looking over her shoulder. Leon stood smiling while Sara flung herself from one piece of equipment to the next, like a little girl seeing her presents under the tree on Christmas morning. \"Do you know how accurately I could evaluate your trees if they let me use this stuff?\" Sara asked, her body pressed against a chemical analysis machine. \"Instead, they have me sending data back to Chicago to run on our old machines there...\"\n\nLeon beckoned her to a large microscope. \"Come look at this. This is what I was looking at when you came to my door.\"\n\nSara walked over and sat on a stool in front of the microscope. She leaned over to look in the eyepiece. \"These are... sagana phloem cells? But very large. Is this from a hybrid?\"\n\nLeon leaned over her, and she could feel his weight pressed against her back. \"Yes, a hybrid. You know the Andrade-Avila sagana?\"\n\n\"Of course.\"\n\n\"I've been working to create a hybrid between that and the Red Barbosa.\"\n\n\"Really.\" Sara peered through the microscope again. \"But don't they have different ideal soil compositions?\"\n\n\"Yes. That's a problem, but one I'm made some progress on. Here, have a look at this one.\" Leon leaned against her again, removing one slide and replacing it with another.\n\nSara looked through the microscope again. \"This is another Red Barbosa \n\nhybrid?\"\n\nLeon's arms wrapped around her waist, holding her close against his chest. She could feel his breath on her neck. \"A mix of Red Barbosa and Gaspar.\"\n\n\"Gaspar? Wow. It looks amazing. So healthy. Have you done a charge test on the sap? What's the yield?\"\n\nLeon's hand rose, cupping her breast. \"34.2.\"\n\n\"Are you serious?\" Sara lifted her head from the microscope, closing her eyes as Leon's fingers stroked her nipple. \"That's incredible.\"\n\nLeon swiveled her chair around. His penis was partially erect. He leaned over and kissed her, and she could feel the head of his penis touching her leg. His hands continued to squeeze and stroke her breasts. Sara opened her mouth to his. She reached out and touched his chest, feeling the definition of his muscles.\n\nHe broke the kiss. \"Come with me. I have something else I want to show you, something I think you will really like.\"\n\n\"Where?\"\n\n\"Outside.\"\n\nHe led her out of the laboratory and through a maze of corridors, until they reached a metal door. Leon put his hand on a fingerprint scanner and the door popped open, revealing an outside courtyard filled with trees. Electric lanterns provided a soft orange glow, scattered around the courtyard at knee-level.\n\n\"Follow me. It's a short walk,\" Leon said.\n\nSara followed Leon as he led her on a narrow path that seemed to lead out of the courtyard. The path wasn't marked by any of the lanterns, and Sara picked her way carefully by moonlight. \"Are we outside?\" she asked, looking up at the stars. \"I mean, I know we're outside...\"\n\nHe chuckled. \"I know that it seems we're hiking into the wild. But this area is secure. Almost there.\"\n\nSara could see something to the left that glowed with light. A small statue, lit in the glow of four lanterns. It was a stone figure of what looked like a man with a bird's head, and a fresh string of white flowers draped around the figure's neck.\n\n\"What's that statue?\" she asked.\n\nLeon paused. \"That is Kon Om Ma. The Meleprija god of the land. I keep a shrine here. Many Melepria keep shrines like this.\" He reached for her hand, and pulled her to where she could get a better view of the statue. \"When I was young, we were poor and I did not believe in any God. I did not believe in the Melepria Gods or any others. I believed we are alone in this world.\" He squeezed her hand. \"The truth is, I still don't know what I believe. But I was poor, Meleprija was poor, and then one day we discovered wealth beyond imagining hidden in the sagana trees that surrounded us. When something like that happens, it's hard not to feel that someone is watching over us.\" He shrugged. \"So I honor Kon Om Ma.\" \n\nThey continued past the statue, and the path led up a slope. At the top of a round hill, the trees gave way to a clearing. In the moonlight, Sara saw three small sagana trees, barely as high as her shoulders. Leon released her hand and let her approach the trees by herself.\n\n\"Now what are these?\" she murmured to herself. \"Smaller leaves, almost waxy... wider trunk...\" She stroked the bark of one of the trees. \"It has some Whitney-Britt?\"\n\n\"Yes.\" Leon was grinning. \"But what else?\"\n\n\"What else...\" Sara considered. \"I know you'd want to mix it with something good...\" After a minute, she guessed, \"Chongzuo?\"\n\n\"No.\" Leon walked up to the three trees. \"This is a hybrid of Whitney-Britt and Enderburg.\"\n\nSara stared at him. \"Enderburg? Impossible.\"\n\n\"Possible. I found a way.\"\n\n\"How? The differences between the two... so many potential negative mismatches. Everyone who's tried to mix them has failed.\"\n\n\"But everyone has tried, isn't that true? Because a mix between those two...\"\n\n\"It could be amazing,\" Sara breathed. \"It could change the world. What's the yield? Have you tested them?\"",
        "\"Too small yet. They need to grow more.\" Leon smiled. He stepped up beside her and put his right hand on her shoulder. \"I have not made a miracle yet, Sara. These grow slowly, and it's been a struggle to keep them alive. There are still many problems to solve.\"\n\n\"I'm sure. But still...look at them!\" Sara leaned against him, pressing her side against his, feeling the warmth of his bare skin. He felt sturdy, as if she could lean on him with her full weight and he wouldn't budge. His left hand went to her breast, gently cupping it. \n\n\"I've spent so much time on this,\" Leon said. \"This has been my dream. Not many could see these trees and know what they are and what they mean. That is why I hoped to bring you here, Sara, to show these to you. I knew you would appreciate them.\" He slipped the robe from her shoulders. The silk slid easily off her arms, and the garment fell to the ground. Although the robe had barely covered her, Sara felt more naked with it gone. Leon eased behind her, and she could feel his stiff penis pressing against her back.\n\n\"I won't tell anyone,\" she said. \"I mean, I won't tell TTX. This is a company secret, right?\"\n\n\"Yes.\" Leon pulled her hair to the side and kissed the back of her neck. \"Even Dr. Albert does not know I have worked on this.\" He slipped his right hand off her shoulder and dropped it onto her other breast, so that he was squeezing both of them. \n\n\"Why show me? I mean, won't you get in trouble if Pariva finds out?\" Sara closed her eyes. \"Ohh!\" she breathed, as Leon's hand traveled down her body to press between her legs. His finger probed inside her, and she knew he could feel her wetness.\n\n\"I showed you because this morning you told me TTX would not allow you to see me. Yet in the middle of the night, you appear at my door.\" He pressed kisses on her neck and shoulders while his long finger pushed into her pussy. \"If you had come to my door in your clothing, I would have showed you my laboratory, and the greenhouses I could not show you at dinner. But you came to my door naked. I knew you did not come just to see my work.\"\n\nHe put pressure on her shoulder, and Sara kept her eyes closed as she let him turn her around to face him. She tilted her head up, meeting his lips, opening her mouth for his kiss. His penis pushed against her stomach; she found it with her hand, squeezed it and felt it grow even harder in her grip.\n\nLeon's rough hand slid over her pussy, his palm against her smooth mons, his fingers threatening to push inside her. Sara held onto his neck, sagging weakly against him as he slid his hand forward and back, his fingers tracing her folds, his palm pressing against her clitoris. She could feel the flex of his bicep and felt certain that the hand between her legs could easily lift her in the air. Two of his fingers parted her while a third slid inside.\n\nShe loosened her grip on his penis and began to stroke it. Long slow, strokes, beginning where the shaft emerged from his pelvis, following its length to the swollen head at the end. She imagined what it would feel like to have him inside her, and her pussy clenched in anticipation around Leon's finger. \n\nSoon enough, he would be inside her again. Sara quickened the stroke of her hand on his penis, and felt Leon matching her rhythm with his hand between her legs, until the thrust of his erection through her fingers matched the thrust of his finger into her pussy. She leaned her head against his shoulder, letting her low cries of \"Ah! Ah! Ah!\" breath in his ear.\n\nLeon freed his erection from her fingers and repositioned it so that the swollen head of his penis lightly brushed against the opening to her pussy. She braced herself for him to push into her, but he only teased her, sliding along the outer edge of her labia, never crossing the threshold. She moaned, her legs weak as she anticipated him entering her, filling her. He stood lower than her on the slope, in a position that he could easily push up into her, but instead he kissed and stroked her breasts, moving his pelvis back and forth so that the head of his penis stroked against the outside of her pussy. She brought her legs together, feeling his shaft sliding in the gap between her thighs, which had become slick from her arousal.\n\nSuddenly he pushed up, splitting her labia, and Sara gasped as his thick erection entered her, inch by slow inch. She held her hips steady, pushing against him, accepting him. His right hand clutched her leg, pulled it up against his side, opening her wider. He stopped, giving her a moment to adjust to the feel of his penetration, then slowly withdrew, only to push in again. Little by little, stroke by stroke, he pushed in deeper. \n\nHe reached for her other leg, and to her surprise he gripped this one and lifted it as well, scooping her up and holding her just below her hips. Sara couldn't believe how effortlessly he lifted her. She wrapped her arms around his neck, holding him tightly as he moved her up and down on his erection. Short, slow strokes, leaving most of his length buried inside her. It almost felt like his penis did as much to hold her in the air as his arms did.\n\nEyes tightly closed, face pressed against his chest, Sara lost herself in the feel of being bounced up and down on Leon's shaft. She had her legs wrapped around his waist and her arms wrapped his neck, and his muscles felt hard as boulders as he supported her weight. The short strokes sent spider webs of pleasure through her body, and Sara was aroused by the novelty of being held in that way. But she could feel her body wanting more, and knew those short strokes would soon become torture, taking her almost there but never bring her to the peak.\n\nA sudden bright light caused her to open her eyes, and she realized with astonishment that Leon hadn't been standing still while he was holding her, and the bouncing had come from him walking back down the path to his house. He had opened the door, and now they were inside.\n\nShe wriggled until he put her down, his penis slipping free. \"Inside?\" she asked confused. \"I thought you wanted to do it outside?\" She was thinking of her fantasy from the night before, when she had imagined making love to Leon in a grove of sagana trees. It had almost come true.\n\n\"I had nothing to lay on the ground...\" Leon frowned. \"I could grab a blanket?\"\n\nSara smiled and embraced him. \"No, let's just go to your bedroom.\"\n\nLeon led her down a hallway and up some stairs. The bedroom was dark when they entered, which was fine with Sara, because it allowed her to see out the enormous windows that made up three out of the four walls. \"Beautiful!\" she exclaimed, approaching the glass. She could see the moon and the stars above, a garden below. \n\nShe turned around, looking around Leon's room. It was sparsely furnished and decorated, with an empty desk and an empty table, and nothing hung on the walls. Maybe Leon didn't spend much time here. The bed looked large and comfortable though. She climbed onto it, lying on her back, sinking into it. She rubbed the soft comforter with her hands. \n\n\"You're right.\" She smiled. \"This is probably way better than having sex on the dirty ground outside.\"\n\nHe chucked and climbed onto the bed. He didn't wait, immediately pushing her legs apart and positioning himself on top of her. His penis perched at the entrance of her pussy, then he slid into her again, a long stroke, filling her in an instant. It was the stroke she'd been craving, and she felt her body instantly collapsing around his, holding him tight as he withdrew and then plunged in again. And again and again.\n\nHer body shrieked with pleasure, and she matched his rhythm, pushing hard against him as he pushed inside her, rubbing her clit against the long shaft of his erection. He kissed her hard, his tongue invading her mouth. She pressed her palms against his back, spreading her legs wide, feeling her body coming closer and closer. Her legs suddenly closed tightly around him and her back arched as the orgasm exploded within her. She cried out, glad that no one was around to hear.\n\nLeon continued his relentless pace, and Sara didn't even have time to catch her breath before she found herself grinding against him again, meeting his thrusts. It felt like he was shoving her tiny body up and down the bed as he slid in and out of her. Sara forgot everything, forgot the saganas, forgot TTX, forgot herself. All she could think about was the feel of him inside her, filling her, splitting her in two. The feel of her pussy greedily clutching at him. His weight on top of her, the taste of his mouth on hers. \n\nShe knew he was getting close. She could tell by the way he had started to pause for a split second each time he was deep inside her, and the head of his penis throbbed inside her like a grenade about to explode. His breath was ragged each time he pulled out of her, and he could barely restrain himself from shoving back into her. \"Harder! Harder!\" she rasped in his ear, and he obliged her, furiously pounding into her. She hit her second climax, and as she writhed with pleasure, clutching him tightly, he abruptly pulled away. She opened her eyes blearily and saw that he had a mapa bag over the head of his penis. He groaned as he ejaculated into it.\n\nSara brought her legs together, rolling onto her side as he climbed off her. She opened her eyes to slits, admiring his strong legs and ass as he walked across the room. She felt very cozy on his soft bed and her eyelids felt heavy. \"What d'ya do with those?\" she mumbled. \"Th' mapa bags, after you use 'em...\"\n\n\"We wash them,\" he answered. \"Then use them again.\"\n\nShe giggled. His answer seemed very funny to her.\n\n\"Do you want to take a shower?\" he asked. \"The bathroom is through here.\"\n\n\"Yeah...\" she answered, but didn't have the energy to move. She watched him walk out of her line of vision. After a minute, she heard a shower start in a nearby room.\n\n\"Need to shower...\" she mumbled again, but her eyes closed and she felt like was floating.\n\nI can't sleep here, she told Leon. Linda can't know I'm here. If she sees I'm not in my bedroom, she'll know I was with you, and that we were making love, and she'll know I'm violating my indisclosure and uncompetition agreements and she'll tell everyone... everyone... and they'll know I'm not Dr. Chen, not even a little bit, and then I'll lose it all all all...\n\nThe sound of the shower came from the other room. No response from Leon. Sara knew that she hadn't really spoken out loud. Too tired. Nothing to do about it.\n\nA tiny smile pursed her lips as she nestled into the comforter and drifted to sleep."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism",
        "public nudity",
        "shower",
        "masturbation",
        "cmnf",
        "cfnm"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-beautiful-day-pt-03"
}