{
    "title": "The Chronicles: Three Sisters 08",
    "pages": [
        "- \"He's back!\" shouted Guenna.\n\nI laid down my axe, and picked up my shirt. I used it to wipe off some of the sweat, before putting it back on. We had gone through a lot of wood over the winter, and still had a great deal of work ahead of us to replace it.\n\nThere was no need to ask who 'he' was. I'd been worrying about Inisian for months. I tried my best not to show it - for Yevna's sake, mostly. Even now I made an effort not to hurry, to appear unflappable. I don't think Guenna was fooled.\n\nInisian was surrounded by a small crowd, all calling out questions. Yevna was by his side. He turned his head, and saw me. His smile was broad.\n\n- \"Good to have you back.\" I said, enfolding him in a hug. \"We were worried.\"\n\n- \"I was never in any danger.\" he said.\n\n- \"There's a lot to tell, I imagine.\"\n\n- \"Yes. Mother Nadesti suggested that I just tell it once, with everyone there.\"\n\nWe gathered in Guen's house again: Vingoldas and Hedyn, Weyl and Seva, my wife and daughters.\n\n- \"Let Inisian speak.\" said the old woman. \"Don't interrupt, if you can help it. You'll have a chance for questions, later.\" She smiled at Guenna as she said this.\n\n\"Go ahead, lad.\"\n\nInisian nodded. \"Well ... I went south of the lake. I didn't even have to ask to join Bacho. Two warriors met me as I approached Southend, and -\"\n\n- \"Southend?\" I asked.\n\nGuen Nadesti shot me a look.\n\n\"Sorry.\" I said.\n\n- \"Southend is the new name for ... Nadestis.\" said Inisian. \"Bacho's name for it.\"\n\n- \"He changed the name?\" said Mother Nadesti. I knew how she felt. In the Uplands, a man's name, his family's ... is everything. We don't have many possessions, or much wealth. We do have our names, and our reputations.\n\nThere's an old curse in the Uplands: May your name be forgotten. Bacho was doing his best to erase the Nadestis from memory.\n\n- \"Go on.\" said the old woman.\n\n- \"These warriors saw my weapons - and right away, they asked if I wanted to join Bacho. It was that easy. He's taking on any fighting men he can get - and he doesn't care where they come from.\"\n\n- \"How many does he have?\" asked Vingoldas. Mother Nadesti frowned, but she didn't reproach him; it was something we all wanted to know.\n\n- \"Thirty-five.\" said Inisian.\n\nMy heart fell. So many? How was that even possible?\n\n- \"Where did he get so many?\" asked Vingoldas.\n\n- \"From the south, or west of Bentwood, for the most part. Bacho's none too particular. If they can stand upright and carry a weapon, he takes them on. There are a few names. BearSlayer. Bloodaxe. But most of his men are cutthroats. Back-stabbers.\"\n\n\"I swear, I wouldn't be afraid if I had to face two of them, alone. Their strength lies only in numbers. And their reputation.\"\n\n- \"What reputation?\" asked Mother Nadesti.\n\n- \"They're killers.\" said Inisian. \"Murderers.\"\n\n\"Every summer, Kestutis takes a raiding party. They demand tribute, recruit fighting men ... and they loot, rape, and kill.\" Inisian looked grim. We both remembered seeing Kestutis, north of the Three Sisters.\n\n\"That's how Bacho gets the means to reward his fighters. And he needs them, to keep control of the lake from Bentwood to Southend. I'm sorry - Nadestis.\"\n\n- \"I imagine that also keeps his men busy.\" I said. \"But tell me something: were the boatmen his? Were those Bacho's men?\"\n\n- \"They were. And their disappearance worries him. He thinks they were drowned, or that they were taken unawares by wild men.\"\n\n- \"Tell us about Bacho.\" said Mother Nadesti. \"You met him?\"\n\n- \"Oh, yes.\" said Inisian. \"He rides about, on a horse - very fine. Never without half a dozen of his men. He slapped me on the back, told me that my fortune was made ...\"\n\n\"But people talk. He murdered his wife, some four years ago. Now he has two concubines.\"\n\nPoor Abrelda, I thought. Meonwe's sister hadn't deserved such a fate.\n\n- \"And Kestutis?\" said Yevna. From her tone, I suspected that she already knew the answer to that question. She had spotted Inisian, on his way home, before anyone else.\n\n- \"He's unmarried. But the men talk about him, too. He lives for killing. And for rape. Lots of rape.\"\n\n\"He raped two married women - one in Bentwood. One of the husbands objected. Kestutis killed him. That's partly why Bacho needs so many men. It's also one of the reasons he sends his son raiding every summer.\"\n\n- \"How much do they know about Prospal Hill?\" I asked.\n\nEveryone sat very still. The muttering and whispering ceased. This was the question uppermost in everyone's minds.\n\n- \"Not much.\" said Inisian.\n\nThere was a collective sigh of relief.\n\n\"But they know that someone lives here.\"\n\n- \"Tell us.\" said Mother Nadesti.\n\n- \"They think that it might be refugees from Nadesti. They believe that you're dead, Mother Nadesti. I'm sorry. But there are a few who think that Veran and his daughters might be here. That's one thing that causes them to lose to sleep. Where is Hammerfist? they ask.\"\n\n- \"Thank you, Inisian.\" said Guen. \"That will do, for now. We'll gather tomorrow. I'll want to know your thoughts on what we've just heard.\"\n\nVingoldas was one step behind Sulcen and me as we left the old woman's house.\n\n- \"What do you think?\" he asked me.\n\nI shook my head. \"I don't know, yet. I'm sorry. Some of this is re-opening old wounds - I thoughts my scars were thicker. Some of it is new. I need time to digest this.\"\n\n- \"I understand, One-Eye.\" he said.\n\nSulcen took my arm as we walked home. She had never done anything like that before.\n\n- \"I understand, too, husband.\" she said.\n\n***\n\n- \"One day, they're going to find us.\" said Seva. Her brother, Weyl, nodded in agreement.\n\n- \"Hedyn?\" said Mother Nadesti.\n\n- \"I don't know, rightly. But if'n they find us ... we're done.\"\n\nI let Vingoldas speak before me. I wanted to know what he would say, of course. But the truth of the matter was that I didn't know what to say, myself.\n\n- \"We need allies.\" he said.\n\n\"It's a simple matter, Mother. If they bring a dozen men again, and try to climb the Hill, we can stop them. But that will tell them, for certain, that we're here. And on the day when they try to climb the slope, and at the same time come by boat, along the river ... or if we don't see them coming ...\"\n\n\"Then Hedyn's right. We're finished. We can't defend against so many.\"\n\nGuen Nadesti looked at me. There was nothing more that needed saying. I simply nodded. She swallowed, and then glanced at her daughter.\n\n\"The nearest folk are Duenerth's kin -\"\n\n- \"They won't help.\" said Sulcen.\n\nIt was the first time she had spoken in council. Many of the others present were shocked to hear her voice.\n\n- \"Could we hire men?\" asked Seva.\n\n- \"There are no men.\" snapped Yevna. \"Bacho's hired them all.\"\n\n- \"An' what would we pay 'em with?\" asked Hedyn.\n\nThat was when my youngest daughter spoke up. She hadn't said a word, yesterday.\n\n- \"If we can't get any men, then we should recruit women.\" she said. \"After all, that's what Payl did.\"\n\n***\n\nThere were quite a few discussions and debates on the Hill that night, and the next. Almost everyone had an opinion - including my daughters. And weighty decisions were made in haste - some of which would come to have enormous consequences.\n\nGuen Nadesti called one more meeting. Only Vingoldas and I were there.\n\n\"Hmmph. So what do we do?\" she asked.\n\n- \"Veran's daughter was right.\" said Vingoldas. We need to find more fighters. Male or female - it doesn't matter. The Hill can support more people - but if they aren't warriors, they can't help us against Bacho.\"\n\n- \"Veran?\"\n\nI had thought long and hard about this. Guenna was right. And so was Yevna. But I was still terrified.\n\n- \"Yevna is willing to go. Inisian will go with her. If they travel north of the Three Sisters, and then west, they can cross lands where Bacho doesn't hold sway. If they stay well clear of Bentwood, they should be safe.\"\n\n\"With luck, they can find warriors who are looking for a place.\"\n\n- \"You'd let your daughter go?\"\n\n- \"We have to. You can't send a man to recruit female fighters - assuming there even are any.\"\n\n- \"And we can send another pair to the east.\" said Vingoldas. \"Seva and Weyl.\"\n\nGuen frowned, almost exactly as I had when Vingoldas had first broached this suggestion to me. Seva had responded quickly when she discovered what Yevna intended. The redhead wasn't about to be outdone, and she would drag her brother along in her wake, whether he liked it or not.\n\nBut it was certainly possible that the fiery Seva might just attract like-minded females. And Yevna couldn't be in two places at once.\n\nI wasn't as confident about the siblings' ability to look after themselves. I had much more faith in Yevna and Inisian.\n\n- \"Won't that leave us under ... manned?\" asked Guen. \"Can you still defend the Hill?\"\n\n- \"We'll have Hedyn, and Veran's two other daughters.\" said Vingoldas. \"And two of the young children are of age now to be watchers. Or sneakers. We'll have more eyes, in case of trouble.\"\n\nGuen turned to me. \"Your girls can fight?\"\n\nI couldn't lie to her. \"Guenna can handle a bow.\" I said. I just didn't mention that she was unlikely to hit anything. \"Tanguiste can make herself useful in a variety of ways.\"\n\nMother Nadesti was no fool. She heard every word I wasn't saying.\n\n- \"So if they come in force ...\"\n\nVingoldas put it plainly. \"We have to trust our luck, a little while longer.\"\n\n***\n\n- \"Should we have a wedding for them?\" I asked Tanguiste.\n\n- \"Ah. I think ... you should talk to Yevna about that.\"\n\n- \"What? Do they want to get married before they leave? Or when they return?\"\n\n- \"You'd better talk to her.\" said Tanguiste.\n\nAs if she had heard us discussing her, Yevna came into the house at exactly that moment.\n\n- \"There she is.\" I said. \"Yevna - I was just asking your sister about your marriage plans.\"\n\nTanguiste coughed, very loudly. \"I'll ... I'll let you two talk.\" She left us alone.\n\n- \"What on earth was that about?\" I wondered aloud.\n\n- \"Papa ...\" said Yevna.\n\nShe hadn't called me that in years. For a strange moment, looking at the gap where her front teeth should have been, I saw Yevna as a child, helping me get her little sisters across the lake. There was a reason, I guessed, for her to call me that.\n\nI sat down. \"Did I say something wrong, love?\" I asked.\n\nYevna shook her head.\n\n- \"No. It's just ... we're not getting married.\"\n\nWith remarkable self-control, I resisted the near-overwhelming urge to jump up and shout 'What?'.\n\n- \"Oh?\" I said, instead. \"I thought ...\"\n\n- \"I love Inisian, Father.\" she said. \"I always will. There won't be any others, for me. But ...\"\n\nI didn't interrupt her.\n\n\"If I'm to recruit female fighters, I have to be strong, and ... independent.\"\n\n- \"Ah.\"\n\n- \"Payl never married Ljudevit - isn't that true?\" said Yevna.\n\n- \"So you're the Shining One, now?\" I replied. I regretted the words the moment they passed my lips, but I couldn't unsay them.\n\n- \"No. Hardly. But I have to be like her. At least a little.\" she said. \"I have to be a my own person. Not just some man's wife - even if I love him.\"\n\n- \"Does -\"\n\n- \"He knows.\"\n\nMy eldest daughter had thought this through. She knew her own mind.\n\n- \"Then you have my blessing, Yevna. For what it's worth.\"\n\nI stood then, and held my daughter tight - as I should have done every day after her mother died.\n\n\"I just want you to be happy.\" I whispered.\n\n- \"I am, Father. And I will be.\"\n\nShe sounded so sure.\n\n***\n\nTwo months later\n\nI worried. Guenna worked on her archery, under my supervision, and with a little help from Vingoldas. Tanguiste tried, but she didn't have the arm strength to draw a bow, and her accuracy ... well, she couldn't hit the side of a house.\n\nShe and I had a frank discussion about it.\n\n- \"I'm sorry, Papa.\"\n\n- \"Don't be. Your talents lie elsewhere, Tan. Everybody on the Hill knows it. Other than Guen Nadesti, you're about the only person we can't afford to lose.\"\n\n- \"Papa ...\" She shook her head.\n\n- \"Don't 'Papa' me. It's the truth. People may look to Vingoldas and me to protect them. But you represent hope. The future. The very thing we're defending.\"\n\n\"I don't know how you do it. I truly don't. But everyone here looks to you. Be prepared - you're probably the next Mother Nadesti.\"\n\n- \"You're exaggerating.\" she said. \"But that's not what we're talking about. What should I do in a fight? I'm worse than useless with a bow.\"\n\n- \"Tan - listen to me.\" I put my hand on her shoulder, and looked my beautiful daughter in the eyes. \"You can carry messages. Don't scoff - it could be vital. If an enemy gets past us, of if we're about to be defeated, you can give everyone else a few moments warning.\"\n\n\"Some may want to sell their lives dearly. And some may prefer not to be taken alive.\"\n\nThat sobered her up. Tanguiste had seen her mother suffer, and her brother murdered. She didn't need any imagination to know what could happen to women, and children.\n\n- \"But you can also rally the non-combatants. If the fight is evenly matched ... if the outcome hangs in the balance - you could create a distraction, or ... I don't know, exactly. It's impossible to predict. But you're bright enough to think of something that could help.\"\n\n- \"You're not just trying to cheer me up?\"\n\n- \"No. Well ... maybe a little. But I mean what I said.\"\n\n- \"Thank you, Papa.\" said Tanguiste. She kissed me on the cheek, and left me sitting in the sun.\n\nI returned to what I did best: worrying about Yevna and Inisian. Every so often, Weyl and Seva would intrude upon my thoughts, and I would wonder about them. But most of the time, I feared that my daughter and her ... husband-not-husband were in danger.\n\nTanguiste distracted me, when I got into these moods. Guenna was quite good at reminding me that there was nothing I could do to change the situation.\n\nThen, one day, I found support from an unexpected source.\n\nI was sitting on a stump, just outside our house - worrying, as I did pretty much every day. That was when I felt a warm hand on my shoulder.\n\nIt was my wife. Sulcen. In all the time we had been married, I could count on the fingers of one hand the occasions when she had initiated conversation, or spoken to me without being spoken to first.\n\nBut in all our time together, she had never touched me - unless I was already touching her. I didn't resent it, and certainly never held it against her. Sulcen had come a long way, and I'd come to believe - and accept - that she was unlikely to come any farther.\n\nI didn't want to overreact. I was afraid to startle her, like a bird who had landed nearby, or a squirrel who was foraging between my feet. But Sulcen stayed where she was, and I could feel the slight pressure as she gently squeezed my shoulder.\n\nThat encouraged me to reach back, and touch the tips of her fingers. To my amazement, she didn't flinch, or pull away. Instead, she spoke.\n\n- \"They'll come back.\" she said.\n\nSulcen and I had been married for more than a year and a half. Our relationship was neither passionate, nor intense. Instead, I would describe us as comfortable - a bed of glowing coals, rather than a roaring fire. No sparks or leaping flames between us..\n\nShe was considerate, and attentive, in her own quiet ways. Sulcen was also kind, and very tolerant with my girls. Many a time, I suspected, she would have preferred to be alone, in silence.\n\nFor my part, I tried to be as patient and as gentle as I could. I wanted Sulcen to know that I desired her, as a woman, and yet I feared to awaken old memories. I was never rough, or abrupt with her, when I spoke to her as when I touched her. Slow wooing - that was always the way I approached her.\n\nIn some ways, I saw myself as her connection to a healthy life. I didn't want to lose Sulcen to her memories, or to her pain. For some reason, an image kept creeping into my mind.\n\nI pictured myself holding one end of a rope. Sulcen held the other, but she was trapped - up to her waist in a sucking bog. If I released the rope, she would die. If she let go, she would die. I had to pull, steadily - but not too hard. I couldn't yank at the rope, or pull with all my strength, for fear of tugging it from her hands - and losing her forever.\n\nThis was not something I could ever tell her. Especially because I had the terrible feeling that if she lost hold of the rope, she would never pick it up again. I didn't speak to Guen Nadesti about this - but no doubt she would have understood.\n\nPerhaps I was missing Yevna, or just worried about her. Or perhaps my patience failed, one early summer night. But I pulled a little too hard on the rope, trying to draw Sulcen closer to me.\n\nI finally summoned up the courage - or the stupidity - to ask her the question.\n\n- \"What happened, Sulcen, with your first husband?\" I asked, trying to keep my voice level.\n\nMy wife didn't answer me immediately. She stood up, though, and looked at me.\n\n\"Why did you kill him?\" I said, softly.\n\nSulcen didn't say a thing. She simply walked from our house.\n\nShe slept outside, that night.\n\nThe next day, she didn't say a word. Nor did she reply when I spoke to her. She wouldn't meet my eye. I knew, the moment I had spoken, that I had erred. What I didn't know was how to repair the damage.\n\nThe next night, she slept outside again.\n\n- \"What did you say?\" asked Guenna.\n\n- \"Is there anything we can do, to help?\" asked Tanguiste.\n\nAfter a second day of the silent treatment, I began to suspect that Sulcen could keep this up for years - if not forever. On the third night, she went outside to sleep again.\n\nI followed her. I was not the most proficient of trackers, and silent movement had never been one of my skills. I was a lakeman, a boatman. Yevna was the forester, not I. But Sulcen was not trying to conceal her trail. It was child's play to find her.\n\nWhen she lay down, I moved towards her, slowly. I made a little noise, deliberately, so that she would not be alarmed as I drew near.\n\nI lay down beside her.\n\nSulcen looked at me, from two feet away, for the longest time. Then she got up, and went back to our house.\n\nI didn't sigh, or show any sign of exasperation. I just uttered a few curse words under my breath, got up and followed.\n\nBy the time I entered the house, she was already in our bed. I went over, and lay down beside her.\n\nSulcen got up immediately, and went outside.\n\nPerhaps I deserved it. It didn't help that my daughters were watching from their own beds. This time I did sigh, as I rose wearily to my feet. Sometimes there is no good idea, no clever stratagem, except to persevere.\n\nI went to the same spot where I had first followed Sulcen. She was there. This wasn't about hiding from me.\n\nAgain, I approached, and lay down beside her. She looked at me, again, for quite a while. I was prepared to wait, if necessary - or to get up again, if she did. To my surprise, it was Sulcen who spoke first.\n\n- \"Are you going to follow me all night?\"\n\nI was tempted to say 'And all day tomorrow, if I have to'. But this wasn't about clever retorts. Instead, I told her the simple truth.\n\n- \"I'm sorry.\"\n\nSulcen studied my face for a long time.\n\n- \"Why? she asked. \"Why are you sorry?\"\n\n- \"I shouldn't have asked you that.\" I said.\n\n- \"You should have asked much sooner, if you really wanted to know.\" she said. \"Why didn't you ask me before we married?\"\n\n- \"I was afraid. I didn't want to upset you.\"\n\n- \"If it upset me, I would have said so.\" Sulcen's eyes bored into mine. \"By waiting so long, you've shown me that it upsets you.\"\n\nMy mouth might have dropped open, at that point. This was not the Sulcen I had come to know. This woman was fierce. Angry.\n\n\"You really want to know?\" she demanded.",
        "I didn't quite know what to say. So I described my dream - my vision - me holding the rope, her in the bog. I told her of my fears. Sulcen listened to every word, without answer or comment. It wasn't until I had finished, and several moments had passed, that she spoke.\n\n- \"You're afraid that I might kill myself? Is that it?\"\n\n- \"No. I was ... more afraid that you might ... withdraw entirely, from the world.\"\n\n- \"Now you sound like my mother.\" she said.\n\n- \"We both care for you.\"\n\nSulcen shook her head. She turned from me, and sat up.\n\n- \"Easy to say. Too easy. I know that you do, Veran - in your own way. After what you've been through ... it's ... quite a bit.\"\n\n- \"But not quite enough?\"\n\n- \"We're both trying, Veran.\"\n\nShe was right. That simple sentence was loaded with meaning. It described the best - and the worst - of our relationship.\n\n\"So I ask you again: do you really want to know? It will change your impression of me.\"\n\nI took a deep breath. \"Yes. I want to know.\"\n\nShe told me. Every detail. The whole agonizing litany of details.\n\n***\n\nSulcen and I had cleared the air. But she was right: I no longer saw her in the same way. Some of the things she told me were, quite frankly, revolting. It was impossible for me to look at her without feeling a powerful surge of pity, and sorrow.\n\nThere was a distance between us, now. I was still patient, and understanding. But I couldn't believe that she would want to be touched - much less touched intimately - by any man, after what she had suffered. Sulcen sensed my uneasiness, and she recognized the look in my eye. It was not what she wanted from me.\n\nI had no idea how to bridge the gap - and I feared that it was growing by the day. Tanguiste might have known what to do. But I couldn't even contemplate talking to her or Guenna about this. I was sure, somehow, that Sulcen would never forgive me if she saw the same pity in my daughters' eyes.\n\nSo our silences lengthened, and the distance between us grew. Both of my daughters knew that was something was wrong, but when Tanguiste asked, I snarled at her. She held up her hands, and stepped back.\n\nHow long this state of affairs might have lasted, I have no way of knowing. But in the middle of summer, things changed.\n\nI was carrying wood into the house, for the cooking fire, when I saw little Vialla running toward Mother Nadesti's house. She wasn't more than eight years old, a curly-haired, snot-nosed little moppet.\n\nVialla saw me. She slowed down, stopped - and then sprinted in my direction. This was no child's game. Vialla was one of Guenna's 'sneakers', charged with keeping our scouts and watchers on their toes. The look on her face was enough to alert me that something was wrong.\n\n- \"Veran! Veran!\" she called, as she ran towards me.\n\nI dropped the armload of wood I was carrying.\n\n- \"What is it, Vialla? Tell me?\" I said.\n\n- \"Millek isn't there!\" she said, in her high-pitched voice.\n\n- \"Isn't where, sweetheart? Tell me plain.\"\n\nVialla took a deep breath. \"I was s'posed to sneak up on Millek - but he wasn't there. Then I looked down the hill - and I saw men. Lots o' men.\"\n\nI took a deep breath myself. I was remarkably calm.\n\n- \"Where? Where was Millek supposed to be?\"\n\n- \"The Sleeve.\" she said.\n\nDamnation. That was the place where my daughters and I, with Inisian and Moruith, had first ascended the Hill, shepherded by Vingoldas and the redheads. It was a steep path, but it could be climbed, if the climber was light and agile - or had a rope. It was one of the two easiest routes up the Hill.\n\n- \"Vialla - go find Vingoldas, and Hedyn. Tell everybody you see on the way. Understand? Tell everybody. Off you go.\"\n\nVialla ran as fast as her short legs would carry her. I went into the house, and picked up my sword. Sulcen was preparing food, but she looked up when I came in. Normally, she would have ignored me, but something in my demeanour had alerted her.\n\n- \"Trouble?\" she asked.\n\n- \"I don't know.\" I said. \"Find Vingoldas, and Hedyn. The girls. I'm going to the Sleeve.\"\n\nSulcen picked up a knife. \"I'll go with you.\"\n\n- \"What? No!\" I said.\n\n- \"That's not what you'd say to your daughters.\"\n\nSulcen had a point. But this was no time for a debate. I stepped outside, and broke into a steady run. I doubted that she could keep up with me.\n\n\"Find Vingoldas! Find Hedyn!\" I shouted, to everyone I saw.\n\nAnd I ran. Fast enough, I hoped, to outpace Sulcen. If there was trouble, I didn't want her anywhere near it.\n\nIt wasn't far, from the hamlet to the Sleeve - half a league, at most. But I had to pace myself - I couldn't do anything useful if I arrived there winded, struggling for breath. I had no idea what I would find. That was why I angled to the south, and skirted the tree line as I ran.\n\nIt was worse than I expected.\n\nThere were two strangers at the top of the Sleeve. They were naked to the waist, and barefoot. I could even see the dirt on their feet. These two had climbed the Sleeve. Wisely, they had left armour and heavy weapons behind. It's ridiculously difficult to climb the Hill with a sword, or an axe - let alone armour - weighing you down.\n\nBoth men were looking downhill. They had found our rope - and they had rolled it down the treacherous slope. They must have been intent on their comrades, because they didn't notice my approach until they heard me, running towards them.\n\nThey both spun about. One was a skinny, blonde-haired youth. The other was darker - and he had his forearm wrapped around the neck of our watcher - young Millek.\n\n- \"Stay back! Or I'll feckin' kill 'im!\" said the man holding Millek.\n\nMillek was eleven years old. He was the younger brother of Hedyn's wife. Their father had died at the Battle of the Bend, where I killed Dengel Nadesti. He was a pleasant lad, with a friendly smile.\n\nSomehow, though, he had allowed these strangers to climb the Hill at our most vulnerable point. I didn't know if he had fallen asleep, or if he had crawled into the undergrowth - but he had failed us, at a critical moment.\n\nThat thought flashed across my mind. But I didn't slow down. If I stopped, and let these two strange men bring their friends up the slope, with our rope ... then everyone on the Hill would die. I knew that, as surely as I felt the sun on my back.\n\n- \"Shit!\" yelled the blonde one, as he suddenly realized that I wasn't about to stop. He and his friend had long knives - but no other weapons, and no armour.\n\nI made up my mind just before I reached him. Despite all of the lessons I had taught Inisian, and my girls, I swung my sword like an axe, chopping at his neck. Against an armoured, or well-armed opponent who knew what he was doing, I might have died.\n\nBut Blondie had only a knife. He couldn't possibly parry or deflect my heavy sword. He was also surprised by a left-handed attack. My blade smashed through his weak defence, and crushed his collar bone, gouging deep into his shoulder.\n\nHe fell, with my sword embedded in the top of his ribcage.\n\nUnfortunately, it was too well embedded. I couldn't tug my blade loose. Meanwhile, the dark one slashed Millek's throat open, and then threw the boy aside.\n\nI couldn't pull my sword from Blondie's body. His friend would be upon me in a moment. I let go of my weapon, and spun around, empty handed.\n\nI felt the sharp edge of his knife grind against my left hip. He had meant to stab me in the back, but my sudden spin had thrown off his aim. Instinctively, I tried to grapple with him, reaching out with my right hand.\n\nMy fingers might have been weak, but there was nothing wrong with my arm. I got it around his neck, and began to throttle him from behind. Darkie tried to stab me again, but he was also pushing me back. I lost my balance. We fell to the ground - with me on the bottom. His weight, slight as he was, drove the breath from my lungs. But I wouldn't give up my choke hold, and I managed to wrap my legs around him.\n\nThat was when Sulcen arrived. I heard her howl, as she leapt on top of my opponent - on top of me. Darkie grunted, and then shrieked. Then I felt a blade scrape across my ribs. But Darkie wasn't moving. It was my wife, stabbing him in a frenzy.\n\n- \"Sulcen!\" I screamed. \"He's dead! He's done! You're hitting me!\"\n\nI must admit, my focus was quite narrow, for those few moments. But I am told that what happened next was epic.\n\nBlondie and Darkie had climbed the slope, and then found our rope. They unwrapped it, and then rolled it down the slope to their brethren. The noise they made awoke or alerted Millek, but he made enough of a commotion that they spotted, and then grabbed him.\n\nWhile I cut down Blondie, and wrestled with Darkie, one of their friends was climbing the slope. While Sulcen was stabbing Darkie - and me - another man reached the top of the slope.\n\nThis fellow would have made short work of Sulcen - and of me - except that Guenna had arrived, panting and out of breath.\n\nAt a range of twelve feet, my daughter fired an arrow, and put it through the raider's mouth. He dropped like a stone.\n\nGuenna did not stop there. She advanced to the lip of the Sleeve, and fired an arrow at the next man, who was climbing up the rope. She missed. But that man was none too keen to be climbing a rope, with both of his hands occupied, while someone shot arrows at him.\n\nI saw none of this. I was bleeding copiously, with two bodies on top of me.\n\nSulcen was trying to pull darkie off me.\n\n- \"The rope! Cut the rope!\" I shouted.\n\nMy wife understood. She began to saw at the rope with her blade. Guenna stood guard at the top of the slope, in case any of the rivers tried to climb. It must have galled them, to be frustrated by a slender young woman with a bow.\n\nI managed to push darkie off me, but my head was spinning from the effort.\n\nVingoldas and Hedyn arrived, and made short work of cutting the rope. Tanguiste arrived a moment later, carrying a bow. Sulcen knelt beside me, to examine my wounds. She gingerly touched just above the cut on my left side.\n\n- \"Did ... did I do that?\"\n\n- \"You probably saved my life, Sulcen.\"\n\nShe blinked back tears. \"You're a terrible liar, Veran.\"\n\n- \"I'm not. There's his knife - he could have twisted around, and stabbed me again. You killed him.\"\n\n- \"I almost killed you!\"\n\n- \"You saved me, Sulcen.\" I said. I don't remember anything after that.\n\n***\n\n- \"There he is.\" said Tanguiste.\n\nI was on my back, on my bed. I stirred, and tried to sit up - and instantly regretted it.\n\n\"Stay there.\" said my daughter. \"Sulcen! He's awake.\"\n\nMy wife was stirring a pot, but she put down her ladle and came over immediately.\n\n- \"How are you?\" she asked.\n\n- \"He looks better.\" said Tanguiste. \"I'll get the others.\"\n\nSulcen sat on the edge of the bed. \"How do you feel?\"\n\n- \"Stiff. Sore. But very happy.\" I said.\n\n- \"What? What are you talking about?\"\n\n- \"I'm happy.\" I said. \"Because now I know that you do care for me.\"\n\n- \"Of course I care for you, you idiot.\" said Sulcen, with a half-smile. \"Stay there - you lost a lot of blood.\" Sulcen put her hand on my chest as I tried to rise, and pushed me back down. She leaned over, and kissed me - which was exactly what I'd been after.\n\n- \"My warrior woman.\" I whispered.\n\nTanguiste returned much too soon, with Guenna and Vingoldas.\n\n- \"How do you feel, Papa? said my youngest.\n\n- \"You scared us.\" said Vingoldas.\n\n- \"What happened? After I ... I suppose I passed out.\"\n\n- \"Guenna held them off.\" said Vingoldas. He told me that she had killed one of the raiders, with an arrow. \"Then she insisted that I show myself to them - so that they would know that there were men here. Warriors. But not Hedyn - she thought they might recognize him.\"\n\n- \"That's good thinking, girl.\" I said. \"What did you see?\"\n\n- \"There were fifteen of them.\" said Guenna. \"And ... Kestutis was there.\"\n\n- \"Where are they now?\"\n\n- \"They pulled back.\" said Vingoldas. \"They lost three men.\"\n\n- \"Yes, but he's a clever-ass. He might be stubborn enough to try again.\"\n\n- \"We doubled the watchers.\" said Guenna. \"And Hedyn is there.\"\n\n- \"Not your problem.\" said Vingoldas. \"Until you recover.\"\n\n- \"Alright. I'll do my best. Now - could I have a moment alone with my wife?\"\n\n- \"Oh - Papa. You've lost a lot of blood.\" said Guenna, blushing. \"I don't think you should ...\"\n\nTanguiste laughed aloud. \"Guenna, I think he just wants to talk to her.\"\n\nGuenna went crimson.\n\n- \"Is it too much to ask, to have a moment with my wife?\" I said.\n\nApparently it was. Guen Nadesti arrived, with Moruith, both of them anxious to see how I was doing. I was tolerant for a while, and polite for a little while longer. Then I feigned fatigue. A cheap trick, perhaps - but it worked.\n\nTanguiste shooed everyone out of the house, and then left herself.\n\nSulcen resumed her position, sitting on the side of our bed. I took her hand.\n\n- \"You were magnificent.\" I told her. \"You are magnificent.\"\n\nThere was that half-smile again. \"You're in no condition for any ... foolery.\" she said.\n\n- \"Foolery, is it? I'll have you know ...\" I had to stop, overcome by the urge to sneeze - which hurt like being stabbed all over again. Sulcen almost panicked, thinking that I had re-injured myself.\n\n- \"You have to rest.\" she pleaded.\n\n- \"I will.\" I promised. I squeezed her hand. \"But I wanted to tell you first, that ... I love you.\"\n\nSulcen looked at me, for a moment.\n\n- \"I know.\" she said. \"Now you're going to eat some broth, and then you'll get some rest.\"\n\n***\n\nMy wound might have been infected. It seemed to be healing fine, but then I was struck by a fever. Chilled to the bone one moment, sweating buckets the next ... the girls helped Sulcen carry me closer to the fire, or wrap me in furs, or carry me back to my bed and then place a cool wet, wet cloth on my brow.\n\nI lost track of time, and my mind wandered. In my imagination I was preparing for the fight with Bacho - to win Meonwe. Another time I felt like I was back on Piran's Point, hiding my little girls after the most horrific night of their lives.\n\nOne morning, I awoke, bathed in sweat, to find Tanguiste sitting on the edge of the bed, holding my hand.\n\n- \"Papa?\" she said.\n\n- \"Tan?\" I croaked.\n\n- \"How do you feel?\"\n\n- \"Groggy. Thirsty.\"\n\nMy daughter fetched water, and raised me up enough for me to drink. From that dizzying height, I could see Sulcen and Guenna, asleep, across the room.\n\n- \"Why'm I so ... weak?\" I asked.\n\n- \"You had us very worried, Papa. You were raving, and cursing ...\" Tanguiste glanced over her shoulder. \"You ... you called Mother's name, two nights in a row.\"\n\nGroggy as I was, I still knew how much that must have hurt Sulcen. It would have been like twisting a knife in a wound.\n\n\"And then, last night,\" said Tanguiste, \"you called Sulcen's name. And you called 'Yevna', too. We were so afraid.\"\n\n- \"Don't think I'm ready to die, girl. Not just yet.\"\n\n*****"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "combat",
        "dark ages",
        "fantasy",
        "swords",
        "women warriors"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-08"
}