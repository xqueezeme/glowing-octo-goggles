{
    "title": "The Mountain",
    "pages": [
        "Authors Note: I started with an idea that I reached quickly in the first page or so. Then I let the story take me on a journey. Hopefully you enjoy the ride.\n\n*****\n\nI dislike puddle jumpers. Unfortunately, they were part of my life. When you travel the world, searching out unique products to excite American minds, you have to accept a few risks. Small planes with duct taped seats are one. Pilots with questionable credentials are another. Today, I was gambling in a twin engine prop plane that was badly in need of a paint job. \n\nThe pilot did a lot of smiling and nodding when I boarded. His knowledge of English was poor. My knowledge of Azerbaijani was even weaker. I had separated from my translator earlier that morning since he wasn't following me into Russia. Hilal had been invaluable while I searched for rug manufacturer that would suit the tastes of our discerning customers. His ability to convey meaning in translation was rare. Most of the translators I worked with could only think in one language, and that invariably lead to misunderstandings. Hilal understood nuance in both languages and chose words, at least in English, that held the true intent as well as meaning.\n\nThe plane had room for eight passengers, four on each side of the aisle. I took a seat in the back hoping I might rest in privacy. My internal clock was still messed up with the time change, and I had learned early on to take naps whenever I could. I watched two elderly gentlemen board. They wore old suits that looked like they once belonged to Al Capone's gang. Like the rest of the country, they smiled at me, and I smiled back. It seemed to pass as a greeting here though the smiles were practiced and meaningless. They took the seats in the front that gave me hope for the privacy I desired. \n\nThe trip had been a successful one. With Hilal's help, I had secured a manufacturer of high-quality hand loomed rugs, intricate designs at a high 60 x 60-knot density. They used only spring sheared wool that, I was informed, gave the carpet a softer texture. It also made them more expensive. One would think that people in the more remote parts of the world would be ignorant of the price Americans were willing to pay for quality. Negotiations proved that theory false. They also had a good handle on marketing. They affixed small labels to the underside that included the signature of the artist who did the looming. A family crest used for generations joined the signature and guaranteed authenticity. It was highly profitable for both their firm and mine. \n\nI watched a slim women climb on board with a small child. She was holding him tight to her breast; his legs were not quite reaching her hips. He looked asleep which I dearly hoped he would remain. She had soft raven hair that cascaded down her back in natural waves. I could see the strain in her eyes that spoke of a difficult morning. Her contented sigh when she took the seat in front of me confirmed my hypothesis. A soft baby powder odor wafted back to my seat. It was pleasant. \n\nI was still three days out from Kimberly. The mother in front of me somehow triggered the thought. She was about the same size as Kimberly. The hair was completely different from Kimberly's short brown, but the ages were comparable. If it were up to Kimberly, she would be holding a child as well. \n\nKimberly was my enigma. She was a joy out on the town and passion personified in bed. If that were life, I would have married her long ago. It was the nothing parts of life where she, or we, failed miserably. The parts that made up the bulk of living. I missed her and didn't miss her at the same time. I loved her some of the time. \n\nAfter four years, we had gotten used to each other and suffered through the silence as penance for the good times we knew were never far away. I didn't have the heart to marry someone who I tolerated most of the time. I didn't have the heart to disconnect either. Right then, sitting on the plane, I missed her.\n\nThe pilot, in his greasy overalls, closed up the door and pumped his fists together at his waist. The international buckle-your-seatbelt gesture. He smiled and said something in Azerbaijani and then looked at me.\n\n\"We go now,\" the pilot said in deeply accented English. I nodded my head, and he seemed happy I understood. He turned, ducked his head and entered the cockpit. That was the breadth of his in-flight safety briefing. The engines struggled to start, coughed, then kicked into a loud roar after producing an uncomfortable amount of white smoke. \n\nThe child startled awake and lifted his head from his mother's shoulder. He looked surprised at his surroundings and locked his eyes on mine. I thought I saw fear, so I smiled. His mother patted his back, and he quickly dug his face back into her shoulder. The plane began moving forward. \n\nThe takeoff was smoother than I expected. The pilot was obviously skilled though he looked more like a mechanic. We were in a steady climb when I leaned my head back and closed my eyes. The engines, now that we were airborne, sounded more even and confident. I let them lull me to sleep. \n\n++++++++++++++++++++\n\nThe alarm woke me rudely. I reached over, as if at home, and found the window instead of the snooze. I opened my eyes and felt the plane in a steep climb. The alarm was insistent, and the plane climbed harder. I looked out and saw nothing but white, thick clouds. I heard the pilot shouting. It sounded like encouragement, not instructions. He was yelling at his plane, not to us. \n\nMy hands gripped the armrests as the mother in front of me called out. She received no response, and her child was staring at me from over her shoulder. He looked more curious than frightened. I gave him a forced smile as we came out of the clouds. \n\n\"Fuck!\" I yelled as I saw the trees. I could count the branches. The mother screamed, and the horrible sound of the left engine disintegrating into the treetops vibrated violently into the cabin. For a brief moment, I saw the child ripped from his mother's arms and began to fly free toward the front of the cabin before my head exploded into the seat in front. I knew no more. \n\n++++++++++++++++++++++\n\nThe cold woke me. I found myself laying sideways in my seat, the seatbelt and armrest digging into my hip. The strong smell of fresh cut evergreen was out of place. The breeze I felt equally so. My eyes found it hard to open. The sun, dulled by clouds, was still too bright for the ache above my eyes. I took long blinks to allow my sight to adjust. The vision was surreal.\n\nI lay against the window along the side of the cabin. The other side of the plane was gone, ripped unevenly along what was the ceiling and floor. The seats in front of me were intact. The ceiling was now made up of large conifers; their broken branches lay in my lap. I could not see a cockpit nor any sign of the other side of the plane. It was as if my portion of the plane had been peeled away and laid on its side. \n\nI pushed up, away from the window, and released the clasp on the seat belt. Maneuvering slowly between the seats, I crawled off the metal and onto a cold hard natural surface dragging a few branches with me. Standing caused bile to rise in my throat. The world was not wholly stable and chose that moment spin. I grabbed the bottom of my seat and let the feeling clear. \n\nStrangely, it was the silence I noticed next. I would have expected fire and explosions, but all I heard was the breeze whispering in the trees. The air was cold and crisply fresh. I stood taller and let go of the seat. My head ached. Reaching up, I found a knot half the size of a golf ball high on my right temple. I remembered smacking into the seat in front of me. Obviously, it was the cause of my equilibrium problems. \n\nI turned around, looking for the rest of the plane. I could see nothing but trees, their dense foliage blocking out anything beyond twenty feet or so. I started going through the checklist of things I should do. It would be a few hours before anyone would come looking, maybe a day before they found us. I wondered why I wasn't dead.\n\n\"Hello,\" I called my voice strong but raspy. Gathering everyone was the first thing on the list. \"Hello,\" I called louder after coughing some phlegm away. The greeting was met with silence. A grim thought came to me. \"Hello,\" I yelled. Silence. The cold felt colder. \n\nI stepped forward, toward what was once the front of the plane. The mother was childless, eyes closed and blood coating part of her face. The memory of the boy flying came back. I looked quickly forward again. Just trees. No boy. \n\nCrawling, I was able to reach the woman's neck and tried to check for a pulse. Nothing, but the skin was warm. I checked my neck. No pulse. Too many movies and no practice. I shifted my fingers a few times, gave up and tried my wrist. I found my pulse and tried the same on the woman. She was alive with a heart that was beating steady. \n\nLeaving the woman in her seat, I moved to the next seat. It was as empty as when we took off. The front seat made me gag. I looked again, and then leaned over promptly losing what little breakfast I had eaten before we left. There was no reason to check for a pulse. A large portion of the old man's face was missing, sheared off during the crash. I could only hope it was instantaneous. I shifted away quickly, wiping my mouth on the back of my sleeve.\n\n\"Hello,\" I shouted again. This time, I added the desperation I felt. I was praying I would hear a young boy though the memory of him leaving his mother's arms left me little hope. Again, there was no answer but the wind in the trees. \n\nI turned back to the mother and crawled onto the side of the seat. I shook her shoulder and lifted her arm and babbled a few 'are you all rights.' Nothing. No response. I needed to get her out of that seat. Leaving her there just seemed wrong. I found the seatbelt and undid the clasp. She slipped toward the window, her body moving with gravity. \n\nMoving behind the seat, I tried to figure a way to lift her up. It took a few aborted tries before I realized I didn't have the leverage. I would have to lift her straight up while standing on her window. I walked around, stepping carefully, removing larger branches as I went. Squatting, I was able to get my arms under hers and lifted her up. Half pulling, half lifting, I squirmed back to the natural ground, dragging her feet between the seats. I laid her down on the ground, her head hitting harder than I would have liked. \n\n\"Sorry,\" I apologized though she was unconscious and knew nothing of my efforts. I straightened her legs then sat near her head, pulling it into my lap. She had a shallow cut just above the hairline that had caused the blood. I felt carefully around her head and found a large swollen bump behind her right ear. I suspected that was the cause of her silence. I sat there, lightly stroking her hair, hoping she would wake up and share the disaster. \n\nThe ground had a gradual slope to it. Uphill was behind me, toward the row of seats. My feet were pointing downhill. It would be easier for someone to find us if we stayed with the wreck or what's left of the wreck. If not, walking down seemed more reasonable than walking up. I looked up at the sky, or where the sky broke through the trees. I didn't have high hopes an aerial search would be effective. Maybe the rest of the plane, wherever it was, was more visible. It couldn't be too far away.\n\nCoherent thoughts returned to me, and I fished my phone out of my pocket. My usual bars were replaced by 'no service.\" I tried calling and texting anyway. Nothing. Until the battery died, at least I would know what time it was. \n\nThe coldness of the ground and the chill in the air was concerning. I figured we might be stuck outside for the night. The temperature would only drop lower when the sun went down. I would have to find some shelter to block the wind and try to trap our warmth. Maybe build a fire. A vision of Tom Hanks jumping up and down in Castaway brought a smile to my face. \n\n\"Lady,\" I said casually to my patient, \"we are going to need shelter. I have to leave you here and see what I can come up with. I suspect we may smell like air freshener when we're done.\" Pine needles will end up being our mattress. The woman didn't acknowledge me or chuckle at my humor. A bad sign for our bunking together. \n\n\"I'll be right back,\" I said as I laid her head carefully on the ground. I didn't want to leave her there, but I couldn't take her exploring. I walked perpendicular to the slope, winding around the trees. I turned back to the seats, and they were out of sight. Taking a deep breath, I walked back to the woman. I wouldn't be able to go far, maybe a 100 yards in each direction. Everything looked the same and becoming lost was a strong possibility. I tried my phone again, in vain. \n\nI decided to search in a series of four straight lines. Uphill, downhill, and to either side. Short searches so I didn't lose my way back. Uphill became steeper quickly. It wasn't long before I decided crawling wasn't worth it. The trees seemed to ignore the slope and grew tall where I could barely stand without their help. Opposite to my first search, I located two suitcases. Neither were mine, but they were intact, showing little damage beyond scrapes that could have happened in any airport. I hauled them back to the seats. The lady still lay still. \n\nDownhill held a surprise. A clearing developed ahead that excited me. At first, I thought it was a road, maybe a river or lake. I slowed as fewer and fewer trees blocked my view. Acrophobia invaded, and I could not go to the edge. I clung to a sturdy tree and stared out at a chasm so deep, I feared to look down. Across the vast space, many miles away, mountains grew similar to what I now knew I was standing on. We had most likely crashed into the Caucasus. \n\nThinking made me ill. There was little chance of a ground rescue. Parts of the plane could have plummeted into the valley below, further limiting the visibility of our location from the air. I tried to lean over to see the steepness of the descent. I could not see the cliff side and the slope made further investigation chancy. I created a new rule; no walking around at night. \n\nI returned to my only friend, sat down and sighed. \"We may be in a bit of trouble,\" I told her, \"looks like it will be awhile before anyone finds us.\" I watched her face and saw no reaction. I hoped things weren't worse for her than I thought. \"I did a quick search and found nothing but trees and a cliff. I think we'll have to sleep under an evergreen tonight and work out something better tomorrow.\" I might as well have been talking to a soccer ball. \n\nMy nearly useless phone told me it was going on three in the afternoon. I decided to get started. I chose a large tree, close to the seats, with low hanging branches. Underneath, I found a thick bed of pine needles. I didn't know where I got the idea they would be comfortable. They were dried out and pricked me often. Still, it was the only raw material I had. \n\nThe wind was picking up when I crawled back out of the tree after making room by ripping off some small branches. Ripping was the correct term. The saplings were so green they more ripped then snapped, leaving short trails of exposed wood and sticky sap.  \n\n\"I need to gather some branches for a windbreak,\" I told my silent partner. I wasn't sure why I informed her. I knew I didn't want to be there alone, and it was better than talking to myself. The smaller trees provided easily accessible branches with sturdy needles. These needles were softer, less brittle. Possibly the basis for future bedding if that should become necessary. \n\nUsing the loose branches, I stacked them on the live branches then wove them together. I created the walls and ceiling of a tiny hovel big enough for two people, about three feet high. It took the better part of two hours and covered my hands with splotches of sticky sap. I decided to use the suitcases as the door. \n\nI moved back to the woman after I finished. She hadn't moved an inch. Leaning down, I made sure she was still breathing. Smiling, I listened to her slow, steady breathing. She seemed more asleep than unconscious. No struggling for air, just soft breathing. \n\n\"Well, my dear,\" I chuckled, \"for the first time in my life, I am going to drag a woman into my bed unwillingly.\" I thought for a moment. \"Of course, I am going to need to give you a name. I can't imagine sleeping with someone without, at least, knowing their name.\" I stared at her silent face, so calm in the face of the danger. Her skin looked soft yet was paler than I would expect. I placed the back of my hand on her cheek. She was colder than I thought she should be. \n\n\"Dorothy,\" I announced as I stood up, \"this is definitely closer to Oz than anywhere else, so until you tell me otherwise, your name is Dorothy.\" I rolled her on her side, then rolled her back into an almost sitting position. From behind, I tucked my arms under hers and lifted. I tried to keep my grip modest, away from her breasts, but gravity fought me. \"Sorry Dorothy,\" I whispered as I walked backward toward the makeshift hut. \n\nDragging her inside was more difficult than I imagined. It would have been better to put her in first then build the structure around her. I damaged the right wall getting her in, but it was easy enough to rebuild. I laid her head on the pine needles, wishing I had thought of a pillow first. I extricated myself, crawling backward. \n\nThe first suitcase was locked, and I wasn't yet willing to break the clasp. For all I knew, the owner was doing the same thing we were. The second suitcase opened freely and contained a man's clothes. I was hoping it was the guy I left in the chair since he wouldn't need it anymore. A set of wool sweaters made the most sense. I folded one, crawled back into the hovel and placed it under Dorothy's head. I left the other for me. I crawled back out and examined the rest of the clothes. \n\nNothing of great value jumped out at me. Pants and shirts that wouldn't work as blankets. Underwear I preferred to leave alone. The socks might come in handy as mittens if it got really cold. I wadded up two pairs and tossed them inside. It would have been nice to find a blanket or large coat. I closed up the suitcase, leaving the rest of the clothes inside. \n\nSearching the seats and what was left of the cabin wasted more time. I could find nothing we could use as a blanket. I thought about breaking the lock on the first suitcase. I shook my head and decided that if there was to be a second night, the lock was toast. Right now, I would allow the lock to do its duty. \n\nIt was getting dark when I gathered more fresh branches full of soft needles. I would build a natural blanket to hold in the warmth and, I was sure, make us really sticky. I crawled back into our tiny house, pulling the branches in with me. I closed off the end with the suitcases and spread out the makeshift blanket as best I could. If either of us rolled over, the thermal properties would be lost. \n\n\"Good night, Dorothy,\" I whispered as I laid my head down on my wool pillow. Dorothy didn't answer so I leaned my ear close and listened to her breathing. The reassurance that she was alive made me braver than I actually was. I needed her to stay that way. I wasn't sure I could handle it alone. Saving her gave me the mission I needed and kept my mind on an even keel. \n\nI woke when it was still dark. My chest and hands were shaking. It was colder than I had anticipated. I tucked my hands under my arms and tried to warm them. The wind was finding its way through the walls, blowing our warmth away. Remembering the socks, I reached out of the needle blanket and rummaged around until I found them. I quickly put a pair on me and warmed my hands. ",
        "\"Dorothy,\" I called out, hoping she was coherent. Nothing. I removed the socks, disturbed the blanket and found her hands. They were ice-cold when I put the socks on them. I reached up and felt her cheek. She was colder than I was. I tried to slow my breathing and calm my mind. I was questioning if we would make it through the night. The thought did not seem out of the realm of possibility. \n\n\"Dorothy, I hope your husband isn't a big man,\" I said with chattering teeth. I rolled her on her side, completely destroying the pine needle blanket. I cocked her legs and pulled her hands between her thighs. I scooted behind and reset the pine branches. I spooned with a woman I didn't know, my face buried in her thick hair. My arm wrapped around her, and I tucked my hand under her breasts. \"Sorry,\" I said. Propriety was too cold. \n\nHow we survived that first night, I would never know. I slept fitfully, half my body warm, the backside like an ice cube. My feet felt like they would fall off. If Dorothy had not been there, I was pretty sure I would have died of exposure. She was my survival, physically as well as mentally. Her breath was still steady, for that I was thankful. When the sun began to shine, I crawled out of the hut after reburying Dorothy in branches and needles. \n\nMy muscles ached horribly, and my chest was fighting the cold. I chastised myself for using the sweater as a pillow instead of wearing it. I peeled back my jacket and shirt and found a large bruise on my hip where the seatbelt and armrest dug in during the crash. It was an ugly purple thing with a greenish border. I wondered if Dorothy had something similar. At least it didn't look life threatening. I went off and emptied my bladder a good distance from the hovel.\n\nI spent some time stretching and jumping about, trying to get the blood flowing back from my core. I looked about and saw that nothing had changed. The trees and our part of the plane were the only things in view. I didn't like the odds of the cabin part being visible from the sky. I needed to do something about increasing our visibility. My stomach growled. I needed to do something about food as well.\n\nI decided the first and best course of action was another search. According to the sunrise, the mountain peak was to the north and the cliff to the south. I could go out further east and west and not lose home base. Being on the safe side, I tied one of the shirts from the suitcase around a sapling near the cliff. If I got lost, I could follow the cliff edge until I saw the shirt.\n\nMy goal was to find a clearing that could be seen from the air and any other supplies, like more suitcases. Possibly find the other passengers or the pilot. Maybe a little boy. \n\n\"I'm going to scout about,\" I told Dorothy while checking her breathing. She hadn't moved from where I left her. It was not an encouraging sign. Outside of the shelter, I scraped an arrow into the ground, pointing east. At least if she woke, she would have some idea that I was here and where I went. \n\nI decided that 15 minutes out would be far enough. I didn't want to leave Dorothy alone for too long, and I also needed time to build a warmer shelter if we were forced to spend another night. I checked my phone. 6:03 am and 20% battery. I quickly put it into airplane mode. I should have done it last night. The damn thing had been using battery trying to find nonexistent antennas. I headed out, figuring I would lose my clock sometime tomorrow. \n\nI was a good 10 minutes out when I saw the tail section. It was in among large broken tree sections. I looked up and saw the damaged trees above, a little farther ahead to the east. The section had been torn violently. The metal had jagged rips unlike the cabin section I survived in that had separated along welded seams. I cleared away some of the branches and exposed a small door where the cabin once terminated. \n\nThe door was the size of a half locker and seemed intact. I tried the fixed handle, but the door wouldn't budge. Looking closely, I could tell the frame had bent and wedged the door tightly closed. I had no idea what was in the locker, but I wasn't leaving until I found out. I jiggled the handle, and it moved slightly up and down. I assumed up was open and down, with gravity, was locked. I found a rock and used it as a hammer until the handle was as high as it could get. I tried the door again, and it failed to move. \n\nI stepped back and decided to try more force. Raising my foot, I slammed it into the plane's panel, just to the right of the latch. A sharp stinging sensation ran up my cold foot all the way to the knee. I ignored it and tried the door. It was looser but still wouldn't open. I kicked it again, this time with an added yell to help me ignore the pain. The panel collapsed, and the door swung open. Christmas had arrived. \n\nTwo thin folded blankets sitting on top of a metal box at the bottom of the locker were the first things I saw. That alone was worth my sore leg. Two small airline pillows sat on the blankets. There was a small fire extinguisher attached to the wall on one side of the locker and a small plastic box attached to the other wall. The box had a red cross I assumed identified a first aid kit. I couldn't stop smiling as I began to unload the booty.\n\nThe first aid kit was simplistic. Gauze pads, a stack of individually wrapped disinfectant wipes, tweezers, aspirin packets that were probably years out of date and a slew of band aids. There was a single cloth wrap for sprains. I pulled out a blanket and spread it out on the ground. I started adding my loot to its center. I had no idea what I would do with the fire extinguisher, but it was coming back with me. The two pillows and the other blanket were coming as well. I pulled out the metal box, more of a lunch box, and opened it. It looked like emergency overnight supplies for the pilot. Four packages of Ramen noodles, beef flavored by the look of the picture on the wrapper, box of matches, a small can, and a small metal cooking pot. \n\nThe can was surrounded by wording in a language I couldn't read. I pried it open with my fingers. It was a Sterno pot. The lack of silverware was apparent, but beggars can't be choosers. There were about twenty matches in the box. It was a gold mine. Only water would have made it better. \n\nThe blanket made a good carrying sack when I pulled the corners together and hoisted it over my shoulder. I decided to the cut the scouting out early and headed back to camp. \n\nDorothy showed none of my enthusiasm for the find. I was pleased she was still breathing and that, in and of itself, was another blessing. I pulled off her pine covering and covered her with the two blankets I had plundered. I smiled at my small victory and carefully pushed Dorothy's hair back from her eyes. I didn't like the dried blood on her face and now there was something I could do about it. \n\nI opened one of the disinfectant wipes and carefully wiped the blood from Dorothy's face. She was a pretty woman, high cheeks that I was sure enhanced her smile. Her skin was smooth with a light tone that enhanced its delicacy. \"I'm sorry to be this familiar,\" I told her as I cleaned, \"but I can't leave you such a mess.\" She didn't respond, but kept breathing for me. I laid her head back on top of one of our pillows. She was so peaceful looking. \n\nI sighed and decided to do what I had been avoiding. If I was human enough to clean the face of a live woman, I could be human enough to take care of a dead man. \n\nIt took some time dealing with the old man. My revulsion to his injuries turned out to be the least of the problems. The ground was too hard to dig in, not that I had a shovel, and there weren't enough rocks to cover him. I ended up finding him a nice tree well away from the camp. I laid him carefully and buried him in pine needles. It was the best I could do given the circumstances. I followed it with a few words, unsure of his religion or lack thereof. \n\nI had heard no search planes or helicopters. Maybe the search was just getting started. Maybe they had no idea of the flight plan. Maybe the world didn't give a shit about a small plane lost in the Caucasus. No matter the reason, it seemed wise to plan for another night. I decided to reinforce the hovel instead of starting from scratch. Maintaining warmth was the number one concern. \n\nAfter checking on Dorothy's breathing, I started to pile pine needles around the base of the structure. I collected the needles from under numerous trees, using a suitcase as my carrying device. The needles locked into the other needles rather well and I found they stacked right up the sides like insulation. A sense of pride filled my work as I got to the top of the structure and realized I had added about half a foot of width to the walls. \n\nStripping a few smaller trees of their branches, I laid new foliage along the needles to hold them in place. When I ducked in to check breathing again, very little light came through the walls. I tapped on the sides and found them rather sturdy. I didn't know how it would handle rain, but wind would have a tough time breaking through. Rain reminded me of water. \n\nI remembered a survival rule from when I was a child. It may not be accurate, but it was what I knew. It was called the Rule of Three. Three minutes without air, three days without water and three weeks without food. We were twenty-four hours without water. That meant two more days before serious problems would occur. Not to mention that eating dried Ramon didn't sound appealing. \n\nCold first. I gathered deadfall for firewood. It was another resource that was not difficult to find. With a limited supply of matches, once a fire was lit I intended to keep it going. With hot enough coals, even the fresh branches would burn. It struck me that the fresh branches might smoke more as well. Possibly a visual sign for a plane. I smiled at my brilliance. \n\nI created a wood pile under our tree. I figured if it rained, the branches would at least try and keep it dry and maybe it would help block some wind. I dragged larger logs into the small clearing between the trees. They would be seats before I fed them into the fire foot by foot. When I was done, I sat on one of the logs. \n\nThe sky was clear, at least what I could see of it. Not a sound but the wind. I tried to think what I needed to do. Water was the next chore. It had to rain on this mountain once in awhile, or these trees wouldn't have gotten as large as they were. I wondered if I could boil the liquid out of sap. Maybe create some way to condense it. It was certainly cold enough for it. Of course, I wasn't sure if water would be the only liquid to condense. I could save pee. I wasn't really high on either solution, but thinking of peeing made me run off into the woods. I drained my bladder into nature. I knew the cold was disguising my thirst, but it was doing a good enough job that I wasn't desperate yet. I was resecuring my pants when I thought about Dorothy. How was her bladder?\n\n\"Dorothy?\" I said, slightly shaking her shoulders. There was no movement except her rhythmic breathing. \"Dorothy, I am really sorry about this, but I have to check.\" I lifted the blanket and carefully placed my hand between her legs. \"Shit!\" I yelled loud enough to wake the dead. She was warm and very wet. I left the hovel. \"Shit! Shit! Shit!\" I shouted at the world. Unconscious people pee. \n\nIf it got as cold as last night, or colder, being wet could very well be a death sentence. Dorothy was my only friend. We were each other's blankets. There was no way I could lose her. I wasn't sure I could survive without her. I knelt down and looked at her sleeping face from the door. There was no way I was going to let her die. A pilot, two old men, and a little boy were it. The world wasn't going to take her as well. I silently prayed her husband was an understanding man. \n\nI broke the latch on the other suitcase. I needed to assess the clothes we had and pick out something dry for Dorothy. It looked like her son's suitcase. Extra shoes and many sets of clothes that fit no one on the mountain. Even the socks looked too small for mittens. Under the shirts, I found a rare gift. Torn cellophane containing three juice boxes. The writing was Russian, but they looked grape according to the picture on the side. No clothes, but I did have the means to create more pee. I laughed at the irony. There were a few more days of survival in those boxes. \n\nI rummaged through the contents from the other suitcase and chose a pair a pants. I thought about the men's underwear. I shook my head and decided Dorothy would rather go commando than wear some old man's underwear. I took a deep breath and crawled back into our home. \n\n\"Dorothy,\" I said loudly, hoping she would wake up and take care of this herself, \"I need to change your pants.\" No movement, not even an eyelid twitch. \"This is not ideal,\" I continued as I began undoing her belt, \"but I have little choice. Your parts would become ice cubes, and I can't have that.\" I pulled the belt through the loops. She was wearing button fly jeans that made me struggle exactly where I shouldn't be struggling. \n\n\"You had to wear button fly jeans on the plane,\" I complained, \"just too be difficult I assume.\" The first button finally released. \"I hope you know I am not enjoying this,\" I went to work on the next button which was more stubborn, \"if you would just wake up, you can save us all sorts of embarrassment.\" Of course, if she didn't wake up, I would be the only one embarrassed. The last button finally relented. \n\n\"Last chance,\" I said, looking at her calm face. It was a rather nice face, now that the blood had been cleaned off. With no response, I started tugging the wet pants down her hips. It was a challenging operation since she couldn't help by lifting her butt. I paused and tried to stifle a laugh.\n\nDorothy was wearing yellow panties covered with images of cute ducks in different poses. It wasn't any cartoon character I was familiar with, but it definitely didn't fit a mother. They would be more at home on a toddler. The timing couldn't have been better. The laugh allowed some of my guilt to drift away. \n\n\"When you wake, I am going to need an explanation for your choice in underwear,\" I said as I removed her shoes and tugged her pants over her feet. \"I guess you didn't expect the plane to crash.\" Quickly, without trying to think, I laid the back of my hand on her yellow ducks. They were soaked. \n\n\"I am going to do this a clinically as I can,\" I said, looking at Dorothy's face, \"I wish there were another way, but the cold leaves us no options.\" I sighed and then pulled her wet panties down her legs and over her feet. I tried to keep my eyes on her feet as I took the dry pants and began running them up her legs. I paused. \n\n\"Apologies,\" I said, then ran my hand carefully up the inside of her thigh to the apex. Her skin was too wet and I could imagine a rash would develop. I pulled off the dry pants, grabbed the first aid kit and ripped open a disinfectant wipe. I took a deep breath then began wiping her. I gave up not looking and moved her legs as necessary, even turning her on her side to get underneath. There was nothing I didn't see, but I shut out the desire to see it. I was a doctor, not a voyeur. \n\nWhen I was done, I grabbed one the boy's shirts and dried her off. I tested the skin and decided she was clean and dry enough. I quickly ran the pants back up her legs, lifted her butt and zipped them up. Her waist was fairly trim compared the man who wore the pants. I retrieved her belt and spent some time feeding it through all the loops. Once cinched, she looked like a hillbilly. I had to smile. She was a cute hillbilly. \n\nI took her wet clothes outside and laid them on one of the logs. We had limited resources so, drying them out seemed reasonable. I had no idea how long the two of us were going to be stuck on the mountain and a change of clothes, dirty or not, might become important. The duck covered panties continued to entertain my mind as I began to build a fire. I really wanted to meet the woman with the guts to wear such a garment. She obviously had a humorous side. \n\nTo be on the safe side and conserve matches, I lit the Sterno can first before trying to ignite the branches I was using as kindling. I was proud of my decision when the wood failed to catch prior to the match dying out. I started the kindling with the Sterno, then covered the can to preserve it. \n\nThe warmth the fire created was a luxury. The sun had heated the air enough that the cold was bearable, but the heat was most welcome. I turned my ass to the flames and let them return me to a sense of normalcy. I took stock of the situation. \n\nThree juice boxes and four Ramon packets. My stomach was growling, but I didn't want to partake of the food without the ability to share it with Dorothy. In time, if she didn't wake up, I would have too. The juice I could possible share. I wondered if swallowing was as much a reflex as breathing. We would both need liquid to keep our innards working. The sugar might even give us a little energy. \n\nI turned, facing toward the fire when my butt began to feel the burn. The wood was burning quickly. I wrestled one of the big logs, dragging the end into the fire. My hope was to slowly feed it in and not have to constantly feed smaller pieces. I thought of Dorothy as I singed the hair on the back of my hand. She deserved some warmth as well. \n\nI crawled back into the hovel and checked her breathing. Steady as ever. I rolled her on her side, tucked the blanket underneath and let her roll back on top of it. Slowly, I pulled the blanket like a sled. The ground was a little uneven, but I don't think it bothered her. I laid her near enough to the fire where she could feel the warmth, but not burn. I sat on a log next to her head and smoothed out her hair, pushing it out of her eyes. \n\nDorothy was a phenomenal listener. I explained our situation and sketched out my current plans, which were weak. I began talking to her about Kimberly. If I survived this rock, I would need to make some decisions about my future. I loved Kimberly some of the time. It wasn't fair to her, or to me, to continue a relationship that was doomed to fail in the long run. Kimberly, I was sure, was thinking the same thing. I explained the whole relationship to Dorothy, defining when things began to not be right. I also expressed my reservations of hurting Kimberly. We had been together for so long, I wasn't sure we knew how to be apart. \n\nI drifted from Kimberly and I talked about my job. I was getting tired of popping around the world, never staying in one place long enough to see the sights. My partner Doug Finley and I started the business ten years ago. I just wished he took on some of the travel. It wasn't all bad. I have seen more of the world than most people. The cultures I have been exposed to, have given me an understanding of people that has enriched my life. It is exhausting though.\n\nDoug had mentioned that he had a buyer for the firm. I think he was getting tired of it all as well. I wasn't ready to let the firm go and didn't want to assume a loan to buy him out either. I told him to sell his half to the buyer. The buyer wanted all or nothing which left him in limbo. I was rethinking the situation. Maybe it was time to sell. \n\nI rotated the blanket in a circle to warm Dorothy's other side. Color had returned to her cheeks which made her prettier. I parted her hair and looked at the cut that had caused all the blood before. It seemed to have scabbed over nicely. There was no puffy redness to indicate infection. \n\nPopping the straw into the little hole of the juice box was not as easy as the picture made it look. You needed a bit more force than I figure a child could employ. Needless to say, I ended up wasting some of the precious liquid when I squeezed the box as I poked. I hoped Dorothy would be awake the next time. I assumed she was practiced at it. ",
        "I used a finger to open Dorothy's lips, brought the straw up and squirted a few drops into her mouth. It took a few seconds before I saw an involuntary swallow. It was the first movement besides breathing that I had seen in her. I was more excited than I should be. \n\n\"Dorothy?\" I called, hoping the swallow would trigger her ears. Nothing. I sighed and spent a long time dribbling juice into her mouth. I went slow, not wanting to drown her. It was always a delayed reaction and always a swallow. After I had given her what I deemed was half, I sucked down the rest myself. I was thirstier than I thought and the juice did more to enhance than quench it. \n\nMy phone said it was 3:07 PM. I looked at the sun and figured I had maybe three more hours of daylight. I walked down to the cliff, again staying far from the drop and looked out over the valley between the mountains. It was largest expanse of open sky I could see. There were no search planes in view, though I was sure I would hear them before I could see them. I could go searching farther east, maybe find some more supplies. Maybe water if I was lucky. \n\nTomorrow would be better to start searching again. I had fire and enough water, well juice, to make it for a few days. If there were any problems, I wouldn't want to meet them when it was getting dark. I walked back to the fire and shifted the large log, feeding more of it over the hot coals. I sat on the ground near Dorothy's head. \n\n\"Another day,\" I sighed, \"I really wish you would wake up.\" I stroked her hair, then stopped thinking she wasn't a pet, \"I am afraid that we may be stuck here for a while and I would really like someone to talk to.\" I grabbed a stick and poked the coals to get them riled up to attack the log. \"I'm not sure they are even looking for us. I haven't found most of the plane and...\" I looked down at her and felt my eyes well up.\n\n\"I don't even know what happened to your son,\" I stuttered, \"maybe you don't want to wake up...I can't imagine what it would be like to lose a child, especially right from your arms.\" I paused a moment to catch my breath and ease my empathetic grief, \"somewhere, the rest of your family is waiting. They don't want to lose both of you, so you must wake up. For them and for me.\" I chuckled a little, \"then you have to promise me that you will lie to your husband about the sleeping arrangements. I know I wouldn't be able to handle my wife with another man.\" I stopped myself from playing with her hair again. I stood up to end the temptation. \n\n\"Maybe it's best that you sleep through all this,\" I continued, walking around the fire, \"the loss of your son, the cold, and the lack of food and water. If things go south, being awake would just add to the torture.\" I stopped opposite her, on the other side of the fire, \"being awake alone, I assume will be much worse.\" I raised my hands to no one. \"I can't believe I want you awake and suffering just so that I can feel better. What kind of selfish asshole am I? You go ahead and sleep as long as you want and ignore my rambling.\" I moved around the fire and sat down next to her again. \"I'll take care of you if you stay alive. Just don't die on me.\" \n\nOn the edges of my hearing, an engine sound thrummed in and out. I jumped up and tried to locate the direction. It seemed to be coming from far away. I turned my head and was unable to isolate a direction so I ran toward the cliff, the only open space I could really see. \n\nIn my haste, I slipped and slid toward the edge. For a brief moment, I saw my end and all I could think about is a sleeping woman freezing to death on a mountain side. I got angry and grabbed for the branches of the tree I had tied the shirt onto. It brought my slide to a halt, and I stayed still to let my heart slow down as well. I couldn't die, Dorothy needed me. She was the reason that I kept going. \n\nI listened again. The engine sound was more defined, but didn't seem to be any closer. I looked over the valley and into the sky and saw nothing flying. The sound could was most likely echoing off the sides of the mountain. The plane could be miles away and never enter into my view. View! I ran back to the fire and threw on a few more dried branches. Once they flared up, I put green branches and needles in the flame. A thick gray smoke rose and climbed into the sky. \n\nI listened as the engine slowly sputtered and died away. I sat down hard and listened for a good while longer. The engine didn't return. If it had been a search plane, it would have probably zig zagged back and forth. More than likely, it was another puddle jumper that had more luck than our flight. \n\n\"I guess that was our excitement for the day,\" I told Dorothy. I decided to use the rest of the daylight to add to our wood supply. Next time I hear an engine, smoke first then go running around like an idiot. \n\nAs the sun went down, clouds came in. I pulled Dorothy back into the hovel and got her off the blanket. Using the suitcases to block the door, I stuffed the extra clothes in the gaps. I again covered her hands with socks, set her sideways and put her hands between her cocked legs. I scooted up behind and covered us with the blankets. My hand found the warmth under her breasts as I got as comfortable as I could. \n\n\"Sorry,\" I whispered, then closed my eyes. Sleep took me before long. \n\nI awoke once in the night to shift my lower arm that had fallen asleep. I wasn't warm, but I certainly wasn't freezing either. The rebuild was a success. I snuggled closer to Dorothy and sleep quickly found me again. \n\nI could see inside the hovel when I woke the next time. Except for my side being a little sore from sleeping in one position, I was refreshed. \"Good morning, Dorothy,\" I said as I pulled her onto her back. She was warm and breathing so it was a good morning. \n\nAfter I had disassembled the door, a blinding light greeted my eyes. Our water problems were over, and a new problem just replaced it. There was an inch of bright white snow on the ground. \n\nI crawled out, bumping branches and started to jump about to get the snow off my neck and out of the back of my shirt. It was cold wet snow, not something that would last a bright sun. I quickly filled the small cooking pot with the white stuff. I tore open the top of the juice box we had drained and filled it as well. \n\nTaking some branches from my wood pile, I stirred the coals of yesterday's fire. There were still a few smoldering weakly. The snow had doused them pretty well. Only the ones covered by the large blackened log remained. I dropped in kindling and blew until a flame was generated once again. One match saved. \n\nOnce the fire was going, I placed the cooking pot nearby to melt the snow. The flames did their job quickly, and I added more snow until I nearly had a full pot. I let the water warm a bit, and then I drank the whole pot. I started the process over again for Dorothy. We were going to drink our fill while it lasted since we had no way to store it. While the snow melted, I went off and took a pee and didn't even think about saving it. \n\nI took a half pot of warm water into the hovel. Using my finger on one end of the juice straw, I trapped a little water and dripped it into Dorothy's mouth. It took a moment, and then she swallowed. It took a long time to get all the water into her, but it was a necessity if we ended up staying here for a long time. \n\n\"Sorry,\" I repeated when I checked between her legs. Sure enough, she was wet again. I went outside and filled the pot with snow again and set it next to the fire. \n\nI rummaged through the old man's clothes and found another pair of pants. There was no way I was going to try to put her jeans back on, even though they had dried. Those buttons were just too difficult. I preferred the quick in-and-out the loose pants allowed. \n\nRemoving her shoes, belt, and pants went quickly since I was now practiced. I tore open another disinfectant wipe and began cleaning her as quickly as possible. \n\nI heard a loud intake of breath that wasn't mine and her hips moved. I looked up at Dorothy's raised head and wide open eyes. She was awake. I smiled. \n\nThe yelling I should have expected. The feet were a complete surprise. One caught me in the face, the other in the chest, sending me tumbling out of the makeshift hovel into the snow. In hindsight, looking up from a newly woken woman's genitals and smiling, was not the best course of action. \n\nWhatever she was shouting wasn't English. I moved away from the door, fearing she might decide my eyes no longer belonged in their sockets. I called out an apology that was met with more words that needed no translation. Maybe it would have been better if she didn't wake up. \n\nI waited for a good long time by the fire. I drank another pot of water and started the fourth. Dorothy emerged hesitantly and quickly rose to her feet as if she felt less vulnerable standing up. She was dressed in her jeans. I remained sitting on a log trying to look as non-threatening as possible. She moved exactly opposite me on the other side of the fire. She was looking around, but never really taking her eyes off me. I could see her breathing was heavy, and anger was brewing behind her dark eyes. She looked almost witch-like with her hair shooting off in directions it was never meant to go.\n\nDorothy raised her hand and pointed her finger to me. A string of very fast, angry words followed. Her finger was shaking at me as she yelled. She suddenly stopped and put her hands on her hips and stared at me like she was expecting a response. \n\n\"Do you speak English?\" I asked. I tried to speak calmly, so she knew I was no threat. Inside I was struggling with the thought of this woman hating me. Of the all the scenarios I had considered, hate wasn't even remotely conceived. \n\nShe raised her hands above her head in disgust and rattled off more words I didn't recognize though I did recognize a reference to American. It was spoken with disgust. \n\n\"No English?\" I clarified. This time, my question was met with almost whispered expletives. Great. We couldn't speak with each other. I stood. She jumped back with wide eyes. I held out my palms; fingers spread to try and indicate I wasn't coming any closer. She stopped moving and watched me warily. \n\nCharades was never my favorite game. I found it embarrassing at best, preferring games that didn't involve physical acting. Here, on the mountain, it would have to become the standard mode of communication. Dorothy was obviously confused as to what had happened. I thought deeply, and then began my charade. \n\nI held out my arms to try and look like a plane. Then I flew one hand and crashed it into my palm. Dorothy nodded. At least she remembered the crash. I pointed to the cabin section, behind her, that we survived in. She hadn't noticed it before, and I could see her eyes had grown large when she turned back to me. I pointed to the sun then I arched my finger dragging it across the sky. I turned to her and held up three fingers, indicating this was the third day since the crash. \n\nDorothy stared at me in disbelief. I pointed at her, then made a pillow with my hands and laid my head against it, briefly closing my eyes. I held up my three fingers again. I hope she understood that she had been unconscious since the crash. Her hand covered her mouth as she began to understand. \n\nI reached down and grabbed the pot of melted snow. I took a small sip then indicated it running through my system with my hand wiggling down my chest. I then spread my hand out around my pelvis region, hoping it looked like the water ran through me and I peed myself. Dorothy's head tilted. I thought I saw understanding. I pointed at her and then gave the pee gesture again. I shrugged my shoulders and lifted my hands palms up. The international I-didn't-know-what-else-to-do symbol. I pantomimed removing my pants and washing my pelvic region, then raising my pants again. Dorothy watched, her fascination was replacing the anger I saw earlier. I pointed at her again, then hugged myself with a shiver trying to explain how cold she would have been if I let her stay wet. I shrugged my shoulder holding my palms up again. In a sense asking her what else could I have done? Dorothy smiled. \n\nThe smile was forced but held forgiveness. Or, at least, acceptance of the necessity. She nodded her head, and I smiled back. We looked at each other for a moment; then she spoke as she mimed. It was a question; that much I could tell. She cradled her arms and rocked them as if she were holding a child. I lost my smile and my eyes watered. I didn't like the question, but I knew I had to answer. \n\nI shook my head slowly and pointed to my eyes. \"I haven't seen him,\" I said, then dropped my head, still shaking it. I didn't think he would be found alive. I expected to see her fall to the ground in agony. I saw grief and a tear, but none of the pain a mother should feel. I tried not to let it change my opinion of her as she looked down and mumbled something I didn't understand; maybe a prayer. \n\nDorothy moved slowly away from me, toward the partial cabin with its four seats. I followed a good ten steps behind. She needed some space, but I didn't want to lose sight of her. She examined the wreck and reached out to brush the snow off her seat. She looked up, left and right, trying to build an idea of what had happened. She turned to me, pointing at the wreck, then at the missing parts. The question she voiced was unnecessary. \n\n\"I found the tail over there,\" I said as I walked over to where the tail was and pointed to the west. \"The rest, I haven't found.\" I shrugged my shoulders and pointed at where the other parts were. Dorothy nodded and seemed to understand. She pointed at herself and then at her seat, next she pointed at me then at my seat. I nodded my head yes. \n\nDorothy moved toward the front and pointed at the first seat. I wasn't sure how to tell her without being rude. I didn't want to draw my finger across my throat. It seemed too callous. I shook my head in a knowledgeable way. I believed she understood. \n\nDorothy nodded her head and covered her heart with her hand. She said something quietly that I assumed was close to 'rest in peace.' We walked back to the camp, and I sat down on a log and indicated that she should do the same. Surprisingly, she sat next to me on my log. \n\n\"Tamara,\" Dorothy said, tapping her chest. I smiled, thinking I was a fool for not handling the introductions earlier. \n\n\"Jonathan,\" I said tapping my chest. Tamara held out her hand, and I shook it. \n\n\"Jon..a..thun,\" Tamara repeated. She butchered my name in the most beautiful way. I laughed and repeated her name. She thought it just as humorous. At least we could laugh together. That was a huge step up from the yelling and miles beyond the silence. I certainly liked Tamara better than Dorothy.\n\nI handed the pot of melted snow to Tamara. She took a sip, set it down and made a motion with her hand, miming eating with a fork. I could feel my empty stomach as well. I stood signaling for her to wait on the log. I retrieved our food supplies and brought them back to her. \n\nI laid out the four Ramon packets and two juice boxes. \"That's all we have,\" I said, circling the items with my hand. Tamara stared at them for a moment. I could see her thinking, analyzing our resources and her hunger. She grabbed one of the Ramon packets and pretended to break it in half and pointed me, then back at herself. We would split it. \n\nTamara pointed at the next packet, then duplicated my sun arch as she spoke. She repeated with the next packet. Split one a day. As good a plan as any. I nodded my head, and she smiled. I smiled back. We had the smile thing down. At least we would be friends. \n\nTamara took the cooking pot and loaded it with snow and placed it on some coals. I guess she was going to cook. She sat back down next to me and watched the pot. \n\n\"A watched pot never boils,\" I said aimlessly. Tamara looked at me with a questioning look. I chuckled and waved off the statement, \"Just a stupid joke.\" She looked at me and smiled again. It was almost as if she understood from my expression. Not the joke itself, but that it was humor. She had a nice smile. It brought so much life to her face. \n\nTamara reached next to the fire and pulled out a small rock. More of an overgrown pebble. She spoke as she placed in closer to the fire. She pointed at it and then moved her hand across the sky, but only part way. A few hours, I guessed. She picked up the rock, pretending it was hot and carried it toward the hovel and mimed putting it in. \n\nI found her thinking process genius. I smiled and shaped my hands as if I was surrounding a larger fist-sized rock. Tamara nodded enthusiastically, sharing her smile once again. She had proposed a heat source for the night. I tapped both of my index fingers on my temples, then pointed at her and gave her a thumbs up. \"You are one smart woman.\" \n\nTamara folded her arm across her chest and cupped her other elbow, then pouted her lips and tucked her free fist under her chin. I laughed at her Thinking Man pose. She bowed at my recognition and joined my laughter. It was a soft, flowing laugh that seemed to float in the air. I was so happy she was awake. \n\nI pointed to the pot and mimed eating, then showed my imaginary rock again. \"We can try to find some rocks after we eat.\" Tamara agreed and sat next to me again. She mimed a set of binoculars with her fists, then made a flying gesture with her hand followed by pointing at the cabin section. I shook my head then I tapped my ear once, created the number one with my finger, and then pushed my hand away toward the sky a couple of times, \"I've heard one plane, and it was far away.\" I pointed to my eyes and shook my head no, \"never saw it.\"\n\nI stood and went under the tree and shook the snow off of one of green-needled branches. I broke off one small section and brought it to the fire and threw it in. A small line of thick smoke emitted briefly. I pointed back to the green wood stack and mimed bringing over an arm full and dropping it on the fire. I fluttered my fingers over the fire and raised them to the sky. \"Smoke signal for the search planes.\"\n\nTamara smiled, tapped her temple and pointed at me. She understood. I really liked trading smiles with her. They were an incredibly honest form of communication. Most of the time they signified happiness. For us, it meant understanding and agreement as well. When I sat down, Tamara tapped my head, and then her own, followed by hooking her two index fingers together. \"Yes,\" I nodded, \"we do think alike.\" More shared smiles as she reached down to set the pot closer to the fire to speed the boil. \n\nI felt incredibly comfortable with Tamara next to me. There was no need for stupid small talk, not that we could anyway. For a woman who woke up with a stranger between her legs, she was incredibly calm. She was already analyzing the situation and coming up with suggestions for making things better. Our cooperation was necessary, and she knew it instinctively. I found her intriguing and attractive, mentally as well as physically. I tried to put the attraction away. She was traveling alone, but a child usually meant a husband. No woman like her could possibly be single. \n\nSharing the Ramon was a team effort. No silverware, or anything that could be used as such, required us to share the pot and drink the broth and noodles. There was a small temptation to take a huge mouthful and fill my growling stomach. I ignored the urge and pretended to take more than I really did. I figured Tamara needed it more than me. Her body was probably still repairing itself. She had no qualms about sharing the cup and placing her lips where mine had just been. The women I was used too, would have balked at the thought, at least at first. There was a strength in Tamara that accepted necessity for what it was; necessary.",
        "I took Tamara on the safety tour first. Down to the cliff so she knew the danger of walking at night. I showed her the shirt I tied to the tree and mimed being lost, finding the shirt and pointed North, toward the camp. She tapped her temple and smiled. \n\nThe snow was melting quickly as the sun reached its zenith. The trees protected a lot of it, so we would probably still have water the next morning. We traveled east, looking for supplies and rocks. Tamara thought ahead and brought an empty suitcase to carry what we found. Being a man, I tried to carry it for her. She snatched it back, pointed at her breasts and then put her hand on her hip with an expression of disgust. I smiled and raised my hands in surrender. \"Yes, because you're a woman. It won't happen again.\" She smiled when I understood. She would pull her weight whether I liked it or not. She was so damn intriguing. \n\nWe found a wheel assembly that had been ripped from the plane. I saw nothing of value, but Tamara was able to salvage some of the wiring at its base. Three, two foot long colored wires that might come in handy. I tapped my temple to her. \n\nRocks were hard to find. A lot of the stone we saw was structured in layers and would flake. Slowly we gathered some useful solid rock as the snow melted and exposed them. I was walking, looking at the ground when I realized that Tamara had stopped. I turned and saw her standing by the suitcase, looking at it like she didn't know what it was. I moved back to her, shrugging my shoulders to let her know I wondered what was going on. She blushed a bit, pointed at me then back at the suitcase. \n\nI grabbed the handle and lifted what was now a very heavy rock-laden carrying case. I put it back down and gave my best impression of Tarzan and beat my chest. I enjoyed making her laugh. The irony of her having to give up her women-are-equal for a brief moment was forgotten as we laughed together. I hefted the case with both arms and decided it was time to head back. I wasn't going to admit the case was nearing my weight limit as well. I liked being stronger since she was beginning to seem smarter. \n\nOn our way back, I spotted the shoe. Tamara picked up the small tennis shoe and nodded her head and cradled her arms. I set down the suitcase, and we began a quick search of the area. I was again surprised by the lack of deep emotion from Tamara. She obviously had an interest in finding her child, but there was none of the misery I had expected. I was upset that she wasn't upset when we gave up the search an hour later. His shoe may have been here, but his body was not. There was always the slim chance he was with another survivor. Alone, I didn't see him lasting a night. \n\nTamara took a deep breath, sighed with one last look around then pointed back to our camp. I hefted the suitcase and followed her. She was rather callous for a mother, the first unpleasant thing about her. My impression of her was changing and not for the better. If it were my son, I would be cursing God to fight the anger and grief, not shrugging it off as an unwelcome loss.\n\nWe set the rocks we had gathered around the fire. Close enough to absorb the heat, but not so close as to be easily blackened. Tamara smiled at me while we worked. I didn't smile back, and she noticed. I shouldn't be judging her, but I was. I couldn't understand her uncaring attitude toward the death of her child. Without thinking, Tamara tossed her son's shoe toward our hovel. She didn't even look where it landed. \n\n\"What the hell is wrong with you?\" I shouted. The shoe was the only thing she had found of him. \n\nTamara was startled and looked at me like I was insane. She shrugged her shoulders and said something that sounded like a question. Her eyes narrowed along with mine. I stood and retrieved the shoe and pointed it at her. She shrugged again. I threw the shoe at her. Not hard, but the throw contained my obvious disgust.\n\nTamara stood and backed away. I saw some fear in her eyes. I raised my hands, palms out to stall her panic. It didn't. She began yelling at me and pointing at the shoe. Her finger made circles around the side of her head. She thought I was the crazy one.  \n\nI pointed at the shoe then made a motion with my hands to indicate a pregnant belly on me. Cradling my arms, I then rocked an imaginary baby. I followed with the plane crash, one hand flying into the other. I pointed at her and imitated shrugging off the death of her child. \"How can you be so damn cold?\" I watched her think. \"What would your husband say?\" I added, miming putting a ring on my ring finger. Tamara shook her head and tried to erase my mime with her hands. \n\nTamara duplicated my ring gesture and shook her head. She wasn't married. She copied my pregnant movement and pointed at the shoe shaking her head while speaking desperately. It wasn't her child. She reached into the fire and retrieved a stick that hadn't begun to burn, moved over to the log and sat down, waving me over to sit next to her. I did.\n\nTamara drew a stick figure in the dirt. Another next to it. She added a heart above then drew a smaller, child, figure next to the parents. She looked at me and I nodded my head, the shame beginning to show on my face. I shouldn't have judged her so quickly. She drew a line through the heart, breaking it. Using her hands, she made angry PacMan like chompers, facing each other, symbolizing a bickering couple. The tone of her words emphasized her play. She drew an arched line from one of the parents to about a foot away, then redrew the figure there and erased the original. I nodded, recognizing a divorce. \n\nTamara drew another figure between the parents and pointed at herself. I nodded. She drew a symbol above her stick head that I didn't recognize. She thought for a moment then replaced it with the Euro symbol. I borrowed the stick and drew a dollar sign above that. She smiled and nodded. She drew a line from her to the child, then moved the stick back and forth between the parents. It was her job to transport the child between the parents who must have moved far apart from each other. I was a fool. \n\nI took Tamara's hand in mine, patted it and tried to look contrite. \"I'm sorry I misjudged you.\" She squeezed my hand and smiled. I was forgiven. She pointed at her rendition of the child, made an arch across the sky, symbolizing a day and held up two fingers. She had only known the boy for two days. Enough time to feel sad, but not long enough to fully bond. Her empathy was normal. My idiocy was reaching new heights. For some reason, I repeated the ring gesture and shook my head. \"I'm not married either.\" I could have sworn she blushed. \n\nI stood and grabbed the cook pot. I filled it with snow that was protected from the sun by the trees. We would have water today and possibly tomorrow morning. After that, we were at the mercy of the weather. Tamara relieved me of the pot and set it near the fire. \n\nWhile the snow melted, Tamara tied the ends of wires together to create a six-foot length. She went to the wood pile and found a stick about three feet long and an inch thick. I watched her work, wondering what she was thinking. She gave me a sly smile, proud of what she was creating and having fun watching me try to figure it out. She took one of the old man's long sleeve shirts and used the stick like a hanger. She held up her creation to me. \n\n\"You made a hanger?\" I asked, shrugging my shoulders. Tamara bit her bottom lip to hold back her smile. I think she didn't want me to feel stupid. She pointed toward the cliff then walked over to a small tree and mimed tying off the other end of the wire, then tossing the shirt over the cliff. Ingenious! A symbol announcing our location. Something that could be seen from the air if a plane was searching in the valley. I rose smiling, pointing at her and tapping my head. \"You are one smart woman.\" A smart woman with a glorious smile. \n\nWe went to the cliff immediately and found a suitable tree that was close enough to the edge, but a small enough diameter to not need a lot of the wire to be secured. Tamara laid down and lowered the shirt over the edge. When she squirmed back and rose, her prideful smile had grown. It was infectious. I held out my hand, and she folded hers into it. I walked Ms. Einstein back to the camp. The first pot of water was on me. \n\nAs the sun went down, we went to work on setting up the hovel for the night. Using our sock mittens, we loaded the hot rocks into the suitcase and hauled them into the hut. We placed them in two piles, front and back. Hopefully, that would make them last the longest. We brought in everything we had. No need to expose our necessities to the weather. When it was done, I let Tamara enter first and pick a side. I crawled in and sealed the entrance as I had the night before. It was nearly pitch black, which I assumed was what Tamara was commenting on. \n\nI moved to my side, accidently crawling on Tamara for a moment. \"Sorry.\" She giggled and pushed me lightly to my side. We organized the blankets blindly, and we both lay on our backs. I wasn't sure how to broach the subject about conserving our body heat by sharing. Now that she was awake, I would need permission. Without a shared language, it would be difficult to explain. If it got cold, it would be a necessity. \n\nTamara shifted, I sensed toward me. Her hand found my arm and she pulled me toward her. Ms. Einstein already figured it out. I rolled toward her, and she laughed and gently rolled me back. She would spoon into me. I assumed it made her feel more chaste. I rolled to the other side and tucked myself back into her. Her arm reached around me and drew me close. She snuggled her hips toward mine and reset the blankets. A few whispers of something I didn't understand and she became motionless. \"Good night, Tamara,\" I whispered and closed my eyes. \n\nThe next two days were a series of exploration and improving our camp. We found nothing of the rest of the plane or any other debris from the crash. I guessed that the rest of the plane was below the cliff. Twice we had heard a plane engine and twice it never came close. We sent up our smoke signal and received no recognition. Our food would run out the next day, and our water supply had dwindled to two juice boxes. \n\nWe had been trading words, trying to improve our communication. Simple things like fire, water and I have to go pee were now understood without hand signals. We were building our own language from pieces of English and her language that I now knew was Armenian. It took a while to decipher that, but we worked it out by drawing rough country borders in the dirt. I surmised from our time together that her job of transporting the child was a lucky break. She was from a low-income family without a lot of opportunities. I had a basic understanding that Armenia had not fared well when the Soviet Union broke up. State imposed jobs had disappeared and little had been done to replace them. \n\nTamara had already figured out I was an American. She knew of Chicago, which was as close to my home as I could get without confusing her. I think I was able to describe my job fairly well. Describing an importer to someone without language was difficult. She may not have fully understood, but she gathered the gist enough to know I traveled a lot. \n\nI found out she was from a family of five. A mother, her, and three brothers. Her father had passed away many years ago. Her job transporting the boy was the only job the family had at the time. Her brothers did odd jobs when they could. Other than that, they survived with money from the diaspora, Armenians that lived outside of the country. I was familiar enough with the concept that I caught on quickly. \n\nTamara was very comfortable to hang out with, not that we had a choice. We never seemed to feel pressure to fill the silence. We always sat on the same log around the fire, always within an arm's reach. \n\nMy thoughts drifted to Kimberly as the third night approached. She, or I, would have jumped off the cliff by now. There was none of the comfort I felt with Tamara. Kimberly and I needed a goal to be with each other. I looked over at Tamara, and she smiled at my attention. I smiled back, and Kimberly drifted from my mind. I was more comfortable with a woman that I could barely talk too. It didn't hurt that the woman was awfully cute. She could use a bath, but so could I.\n\nI spooned into Tamara that night. We couldn't keep sleeping on one side, not without something softer than pine needles. When I wrapped my hand around her, she took it and tucked it under her breasts and whispered something. I suspected it was to tell me not to get any ideas. Well, she couldn't tell me what to think. I smiled, and I knew she felt it when she gave my hand a squeeze. I ignored the stirrings of desire. The last thing she needed was to feel my reaction growing. I kept my thoughts as clean as I could, closed my eyes, and dreamed dirty.\n\nThe wind woke me well before morning. It was strong and sounded like it was coming in waves from different directions. The hut was colder than it had been on previous nights. It felt as if the rocks had already lost their heat. Tamara said something that sounded desperate. \"It will be alright,\" I responded and hugged her closer as she tucked deeper into me. I could feel her shivering and wasn't sure if it was from the cold or the unrelenting sound of the wind. We nodded off and on the rest of the night. The wind never ceased. \n\nWhen the hovel somewhat brightened with morning light leaking through the cracks, I braved the cold and left the blankets to look outside. The wind was still violent, so I only disassembled a small portion of the seal at the door. Death was outside. \n\nA blizzard had covered our campground in an undulating blanket of white. Cold specks of snow whipped through the opening and stung my cheek. I hurriedly replaced the seal as the temperature inside dropped quickly. Tamara was awake with eyes wide. I knew what the blizzard meant; I could see she saw it as well. Winter had come and we had run out of time. We were in our grave.\n\n\"I'm sorry,\" I said to Tamara. I should have tried harder. I could have found a way down, maybe attempted the cliff. I didn't want her to die here. \n\nTamara held out her hand to coax me back under the blankets. The concern on her face made me want to cry. I was useless against a blizzard. She pulled me into a hug and gripped me hard. I could feel warm tears fall on my neck, and there was nothing I could do. \"I am so sorry,\" I repeated. Her head pulled back, and I saw her wet eyes in the dim light. She whispered something warm. Lovely words for the end the world. \n\nI wiped the tears off her cheeks with my finger. \"I wish I would have met you years ago,\" I admitted. There wouldn't be enough time for her understand. No charade could convey my meaning. Her eyes closed and she tilted her head forward. My lips found hers. She understood the meaning if not my words. \n\nI had forgotten how much feeling could be spawned by soft lips. Tamara's hands encompassed my head as she drew me in harder, nibbling on my lower lip, tickling it lightly with her tongue. I broke through the last barrier of hesitancy and threw myself into her passion. A warmth spread through my body as the blizzard raged outside. Our lips danced wonderfully, our tongues embracing gently, then with heated passion. I wanted all of her. In her arms was where I wanted to die. \n\nMy hands roamed down Tamara's side, caressing poorly through her clothes. Her lips separated from mine, and she whispered something. \"I don't understand,\" I returned. She knew my ignorant look, a cue often used between us. She took my hand in hers and pulled it slowly between her legs. She whispered the same words, almost as a question. \"I would never deny you,\" I whispered as I cupped her sex through her pants. She had no idea how much her smile excited me. \n\nDeath was blowing hard outside, inside we were laughing. It was a glorious struggle to remove each other's clothes in such tight confines. Tamara was laughing so hard at my efforts; it made it nearly impossible. We finally had to surrender to the inevitable and remove our own clothes after I nearly broke my wrist trying to get her shirt off. Once we were done, the real exploration began. \n\nSometimes beauty takes your breath away. Sometimes you fear that touching will forever alter it. Sometimes beauty is in the touching itself. That is how I experienced Tamara's beauty. Her exquisite reactions to my hand traveling along her abdomen, moans that needed no translation when I found her breasts, and soft caresses urging me along. I tasted her neck and left a trail of kisses to her breasts. Luxurious words came from her mouth as my lips found her nipple. I could only translate the feelings, for they echoed mine. \n\nMy lips found hers again as my hand traveled slowly down between her legs. She smiled as she spread her legs and let me explore. I shared the air of her moans, teasing her carefully, her wetness urging me to be bolder. Her hand found my erection, and she opened her eyes. \"Jonathan,\" she moaned, her accent making my name sound so wonderful. \n\nI moved onto Tamara, careful to keep the blankets over us. We might freeze to death in an hour, but right now, I wanted to live. Smiling, she guided me to our first coupling. Watching her expression change when I entered her increased my desire. She lost her smile and sucked in a deep breath as I lowered myself into her. When our hips met, she exhaled and kissed me with such force, I thought we might merge into one being. Her legs wrapped around me, altering the blankets and allowing some cold to enter our space. It didn't matter anymore. \n\n\"Jonathan,\" Tamara whispered as her hips began to move into me. I countered the movement, enjoying her desire, trying to stall mine. We moved as if we had always been together. She seemed to know where I needed her and her moans told me that is exactly where she wanted to be. There was no struggling for comfort, no wasted movements, just shared joy. Each movement brought pleasure that added to the pleasure before it. \n\nTamara began to shake and her hips were driving into me, grinding on my down stroke. I was near my limit as I watched her near hers. I dropped my lips to her ear and whispered, \"Tamara my sweet.\" Her back arched, and the most wondrous moan escaped her lips. I held myself in as deep as I could as she ground her pelvis into mine. \n\n\"Jonathan,\" she yelled. Bliss exploded inside of me as I felt myself empty into her. Her hands were pulling me deeper as her legs weakened. I struggled to breathe as conscious control of my body left me. I recognized my own groan as the wonderment overwhelmed me. A moment of ecstasy that not even a blizzard could compete with.\n\nI collapsed on to Tamara, using my elbows to lesson my weight. My breath was coming in gasps and, despite the cold, we were sweating. I felt the beginnings of her chuckle before I heard it. I looked up at a beautiful happy smiling woman who spoke quickly then chuckled some more. \"Yes,\" I agreed, \"we are quite good at it.\" I have no idea how I knew what she was saying. I could just feel it was right. \n\nTamara squeezed me inside of her which caused me to twitch. She found that funny and I found it sexy. I reached up and pushed her hair away from her sweaty face. This time, I kissed her like a lover. Soft with the intent that she never forget. Her smile disappeared, and her eyes looked into mine. More lovely words were spoken softly, with feeling. \"I love you as well,\" I said. Her tears told me she understood. I buried mine in her shoulder.\n\nThe killer blizzard was its own worst enemy. It blew snow under the tree that piled onto our hovel, insulating us from the bitter winds. We spent the day, as it blew on, making love like the last two people on earth. I found where Tamara was ticklish. I tortured her till she grabbed my scrotum with a devious smile. Not wanting to be neutered, I relented. This time, she beat her chest like Tarzan. I loved playing with her. I loved being tender with her. I loved just being with her. Touching and kissing were all the language we needed. ",
        "The winds continued as night approached. The sound had diminished due to the snowpack, but we could tell it was deadly out. Tamara became stiff and less amorous, and I thought I might have let my desire go too far. The change was sudden, and it wasn't like she didn't happily participate. I gave her my concerned look, \"Is something wrong?\" She recognized the expression and nodded with embarrassment. She spoke quietly as if she didn't really want me to hear. It was one of the few things I understood. She needed to pee. \n\nI tried not to smile, but it was hopeless. To me, it was humorous. We were unwashed, had made a sexy mess of our bed, would probably die of exposure, and she was worried about peeing. She smacked my shoulder letting me know she didn't think it was funny. I straightened my lips and kissed her tenderly. \n\nThe cooking pot was all we had. Unless we wished to water our bed and freeze to death sooner, the pot would have to serve. I handed it to Tamara, and she shook her head. \"We don't have a choice,\" I said and handed it to her again. She sighed and took it. I knew she was close to losing control of her bladder; I could see it in her face. She got on all fours, thought about it, then signaled for me to turn away. I smiled, held back a chuckle, and turned away. I knew everything about her body, yet she was embarrassed about peeing. Hell, I cleaned her up when she was unconscious. \n\nThe sound of her stream hitting the pan and was loud, then softened as it began to fill. I heard her softly complaining, words that I am sure weren't meant for young ears. When the stream stopped, I turned back I saw a pot of pee in her hands and tears in her eyes. I saw no more humor. Peeing in front of me had hurt her. I carefully took the pot and set it near the door. I crawled back to her carrying one of the old man's shirts. I put a hand behind her neck and pulled her shaking lips to mine. At the same time, I wiped her dry between her legs with shirt's sleeve. There was no way I was going to let nature's call come between us. She folded into me, and I felt the embarrassment fade away. She was smiling when I looked again. Such a lovely smile. \n\nI broke the seal and pushed snow away from the upper section of the door. Bitter cold met my arm as I extended the pot out and emptied it. I was sure it would freeze quickly. I pulled my arm back in and closed the gap. Knowing I wasn't going to make the night, I began to fill the pot myself. Tamara watched me, mesmerized. Even with all her brothers, I suspect she had never seen a man relieve himself. When I was done, she was there with the shirt. She lovingly cleaned me and followed with a tender kiss. More lovely words whispered as she let me know that everything was okay. Somehow, I loved her more. \n\nWe had to be gross about it. Survival required no less. I broke the seal, dumped out the pot then filled it with snow. I brought it in quickly, scrubbing it as best I could, then repeated the dumping and filling again. I sealed the gap for a final time that evening. The temperature had dropped dramatically inside, and my arm was freezing and had lost some of its color. Tamara hugged it to her chest as we shivered in the blankets. Once feeling returned to my arm, I lit the Sterno can, with one of our precious matches, and held the pot above to melt the snow. \n\nTamara made a face, indicating the pot. I shrugged my shoulders, \"not much choice.\" I said. She moved in close and kissed my cheek. We huddled near the only sources of heat, Sterno and each other. When the snow had melted, and the water warmed, I tried to remove it from the flame. Tamara pushed my hand back and made a popping sound with her lips. I laughed and left the water over the flames to boil. She lightly bit my ear with her lips to stall my laughing and relieved me of the pot. She was in charge of sanitation.\n\nThe Sterno took the cold bite out of the air as it brought the water to a strong boil. After the melting, there was less than a third of a pot of water. There was no way we were going to break the seal again that night, so a third would have to do. We covered the Sterno and let the water cool. \n\nWe became tender, caressing with no sexual intent. Tamara needed the closeness after all the stress of handling nature's call in my presence. I loved her that way, so soft and caring. She thought she had lessened herself, exposing her animal needs. Greedily, I found it worth her minor shame. A cost worth enduring for such warm love. If a rescue team had showed up at that moment, I would have cursed them and all they held dear. I was exactly where I wanted to be, reassuring the most beautiful woman in the world that she had lost nothing. \n\nSomehow, we slept. Our ears became used to the wind, our minds shutting it out as normal. Entwined in each other's arms, we found safety and warmth. I awoke once to some less than dainty snoring that I found strangely reassuring. I liked Tamara relaxed and sound asleep. Her breathing, loud or not, was part of her. It reminded me she was alive and comfortable in my arms. Like the wind, the snoring became part of everything and I slept again. \n\nI awoke to silence. Sometime during the night the storm had exhausted itself. The hut was dimly lit in a morning glow. My eyes opened to find Tamara on her side, her head propped in her hand, watching me. She smiled, and my life held meaning. \"Good morning gorgeous,\" I said, adding my smile to hers. She said something musical and leaned in for a kiss. I let the words and the kiss wash away the cold threat outside. Her hand trailed down my side and reached between my legs. More soft words and a pair of eyes filled with desire left no room for misinterpretation. We heated the hovel with more love. \n\nWearing everything that would fit us, we ventured outside. The hut needed fresh air and we needed to assess our situation. The situation wasn't good. The snow was to our knees where our fire used to be and the drifts against the trees were waist high. There would be no more finding dead wood. We knew where our supply was buried though it held only a day's worth. Our food was exhausted and even if we could attempt the cliff, we would die of exposure quickly. \n\nI looked over the whitened landscape and smiled. At least it was beautiful. If you had to die, it might as well be among nature's perfect landscape. Tamara slid in next to me, wrapping her arm around me and sighed. She had come to the same conclusion. \n\n\"Tamara, will you spend the rest of your life with me?\" I asked softly. My heart wasn't joking though the words held ironic humor. She looked up at me and smiled. I kissed that smile and accepted it as a yes. I let the grimness fade away and decided to make Tamara happy for as long as I could. They say freezing to death is like falling asleep. I couldn't think of anyone else's arms I would rather fall asleep in. \n\nWe dug out the fire pit and lit, what was most likely our last fire. Depending upon the weather, this could be our last time outside for any length of time until spring. We wouldn't last until spring. We both knew what it meant and let it go to enjoy what time we could together. \n\nThe fire felt wonderful. Things got a little damp around it, so we had to be careful to stay dry. Somehow, through her tenacity, Tamara taught me a game she called 'gomoku.' She sketched a many squared grid into the wet ground and we took turns placing Xs and Os into the squares until someone got four in row. I sucked at the game, but the stakes made it worthwhile. The winner got to demand a kiss wherever she, for it was never he, desired. Tamara had fun exposing portions of her skin to the cold and wasn't afraid to make me kiss her ass. It was the worst game I ever loved. \n\nWe had a long conversation, my half about what I did for a living and the places I had been. She spoke happily about something to do with her home. It didn't matter that we didn't understand each other. In fact, the lack of any possible disagreement made it that much nicer. We could laugh about a spark from the fire landing on my shoe or snow suddenly tumbling down a tree. Anything different that caught our attention and was shared seemed important. \n\nTamara was happy to run off and take care of her needs out of my sight. I would smile when she returned so that I could see her blush. It would earn me a smack on the shoulder, but it was a loving smack. I would apologize with a kiss.\n\nOverall, it was one of the best days of my life. As our rocks warmed, I took her hand and held it over my heart and placed my other hand on hers. She covered it with her hand. \"I love you,\" I admitted again. She nodded and cried. Fate put us together and dealt a lousy future. I thought about what life could have been and saw nothing of value that didn't contain Tamara. I preferred our short existence to one without her. We held each other as the last of the wood burnt low.\n\nI tried adding growth I ripped from trees, but it produced more smoke than heat. Our last fire was done. Tamara smiled and held out her hand. In time, we would be done. For now, we would make love. \n\n++++++++++++++++++++++\n\nTamara shook me awake, babbling as my eyes took in the morning glow. I smiled, thinking she wanted to continue last night's activities. Thinking back warmed me against the chill in the air. She pointed to the door then put a finger to her lips and one to her ear. I listened. \n\nThe unmistakable sound of a helicopter came in and out, echoing from some unknown distance. I never dressed so fast in my life. The damn storm could have damaged our signal. The snow certainly covered any traces of a crash. I burst out into the morning and was met by bitter cold. I ignored it and headed to the cliff, trudging through waist deep snow banks at times. The sound increased as I neared. \n\nTamara was coming behind me, using my path to ease the travel through the snow. Smart girl. By the time we got to the cliff, the sound was steady, though I couldn't see the copter. The sound was echoing from different directions, reverberating off the mountains. \n\nReaching the tree, I dug down its trunk to find the wire. It took a few seconds to pull the shirt free from the snow. The wind had blown it up, onto the cliff, and buried it. I shook it off and tossed it over the edge. It wasn't heavy enough to break through the snow and drop fully visible below the tree branches. I could hear warning words from Tamara as I maneuvered to the other side of the tree, hanging onto the trunk with one hand and using the other to break down the snow. \n\nI could feel the cold weakening my fingers, but the engine sound made me continue. I began using my foot to extend my reach, pushing more snow over the cliff to set our flag. I smiled as the snow began to move en masse. I cringed when I began to go with it. A desperate grab to support my frozen fingers with my other hand failed. Tamara screamed. I went over the edge. \n\nMy mind had already settled on death. This new form was met with equal resolution. My last thought was not wanting to leave Tamara alone. I spread myself out and screamed, \"See me!\"\n\nMy thigh shattered in a field of green. Spinning. The left side of my head exploded into white light. Darkness followed. \n\n++++++++++++++++++++++\n\nMy eyes wouldn't open. I struggled, but only a crack would form, and I saw nothing but whiteness behind a curtain of lashes. Snow. I remembered the snow. I was dying in the snow. I wasn't cold. It was just like falling asleep. I smiled inside, knowing my lips couldn't copy it. Just like falling asleep. \n\n\"Mr. Bennett.\" The voice was insistent and completely out of place. I felt something warm in my right hand. Nothing should be warm. I smiled. My blood would be warm. \n\n\"Mr. Bennett.\" It was a female voice. Not Tamara. Where was Tamara? I forced my eyes open, and light ripped into my skull. I closed them again and tried to move my left hand to cover them. My hand wouldn't move. \n\n\"Slowly, Mr. Bennett.\" The voice said. A warm hand covered my eyes so I could blink them open. A white room, warm and no snow. My head felt like it was swimming in grease. Thoughts were slow to come. The hand was removed, and a woman wearing a white lab coat with short cropped red hair smiled at me. Doctor? I drooled at her. A hand, from the other side of the bed, wiped my chin with a wet cloth. I turned my head, a young man in blue smocks stared back. Orderly? Nurse? \n\n\"Do you know where you are?\" The doctor asked. I tried to answer, but my lips hadn't decided to cooperate yet. I nodded slightly, more sunk my chin than nodded. I was in a hospital. American doctor. Where was Tamara?\n\nThe doctor smiled at my movement. \"Rick is going to give you some water to take care of the dryness in your throat.\" A straw was inserted between my lips and water was squirted in. Funny, I remembered doing that for Tamara. It felt wonderful in my mouth, so cool. I swallowed hard, letting it coat the back of my throat. I followed with a cough that broke phlegm I didn't know was stuck there. Rick added more water, and I swallowed easier. My lips were becoming my own again. \n\n\"Where's Tamara?\" I asked weakly. It didn't sound like my voice. I wasn't sure if what I thought I said was coming out of my mouth. I coughed again to loosen things up. \n\n\"Slowly, Mr. Bennett,\" the doctor repeated. \n\n\"Tamara. Where is Tamara?\" I said clearly. I heard the words that time. The doctor smiled as if I was child asking why the sky was blue. \n\n\"I don't know a Tamara,\" she answered, \"is that a family member?\" I tried to move my left hand again. There was resistance. I could lift my right. I looked down my body. Both legs were encased in metal cages that circled my legs with stainless steel spokes entering my skin holding it in place. My left arm was secured in a cast that ran from my wrist to past the elbow and halfway up my bicep.\n\n\"Crashed with me,\" I replied, \"a woman with black hair. Thirtyish.\" My mind was quickening. I turned to the orderly to see if he knew. \n\n\"It's good that you remember the plane crash,\" the doctor continued,\"we were worried you might suffer some memory loss.\" I felt anger surge. I don't know where it came from, but it dwarfed everything else.\n\n\"Where the fuck is Tamara?\" I growled. I shifted. It was a stupid attempt to sit up and look more forceful. Pain shot up my side, and I quickly became aware of the rest of my body. It didn't feel good. \n\n\"I don't know a Tamara,\" the doctor continued, obviously quite skilled at irate patients, \"but I will find out what I can.\" I settled back into the bed. It was the best I could hope for since I couldn't get up and walk out. \n\n\"How bad?\" I asked, sending my eyes down to my legs. \n\n\"Both your legs experienced multiple fractures, \" the doctor stated without reservation. I didn't want the glossed over version anyway. \"We have reset the bones and inserted pins to guarantee it heals correctly. We expect you to regain full mobility in time.\"\n\n\"My arm?\" I tried to lift my right arm to point to the left and stopped when I saw the IV needle. \n\n\"You fractured the radius and ulna and chipped the humerus at the elbow. Your arm will heal faster than your legs.\" The doctor stalled for a moment, \"It was the head injury that concerned us the most. The swelling in your brain was very difficult to manage. By your questions, I assume there is little lasting damage. Though rehab will verify it over time.\"\n\n\"I looked like Channing Tatum before the crash,\" I joked. A wave of well-being came over me and washed the anger away. My mind was moving through emotions like a rollercoaster. \n\n\"The damage was more extensive than we thought,\" the doctor chuckled, \"I'm glad you still have your humor though mood swings are to be expected as the drugs wear off.\" She looked at me, letting the humor fade away. \"The swelling in your brain forced us to keep you in a medically induced coma for 57 days.\" Realization kicked in. \n\n\"Where am I? I mean, what city?\" I asked quickly.\n\n\"You're at Chicago Memorial Hospital, Mr. Bennett,\" the doctor replied, \"I'm your main physician, Doctor Mary Tristin.\" Chicago? Where the hell is Tamara? 57 days? Did they find her?\n\n\"Are my parents here?\" I asked quickly, \"I have to tell them about Tamara.\" \n\n\"They are outside waiting for word from me,\" Mary said, \"do you think you are you ready for visitors?\" She asked like I had a choice. \n\n\"Send them in, damn it!\" I settled the tension and lowered my voice, \"please.\" Damn drugs. \n\nMy mother was in tears. I didn't have time for tears. After quickly consoling her, I turned to my dad. \"There was a woman who survived the crash with me on the mountain,\" I said, \"what happened to her?\" \n\n\"I think you should take it easy, son,\" my dad replied, trying to calm me, \"let the accident be for now and we'll talk about later when you're feeling better.\" 57 days, we'll talk about it now. \n\n\"Damn it, quit coddling me,\" I chastised, \"what the hell happened to her?\" \n\n\"Okay, okay,\" my dad said, holding up his hands, \"An Armenian woman was rescued with you, one of three including you that survived the crash. An old man survived as well and walked for several days. He is the one who sent help.\" He must have landed below the cliff, in the valley. \n\n\"What happened to Tamara, the woman?\" I demanded. \n\n\"I suppose she went home,\" my mother said, her eyes glancing between my father and I. I didn't like the look. I remembered it from my childhood when I crashed my mini bike, and they were trying to explain why it wasn't in the garage anymore. I looked to my dad.\n\n\"Where is she?\" I said leaving no room for lies. \n\n\"Son, I know things must have looked pretty grim...\" I interrupted. \n\n\"Damn it! What the fuck did you do?\" I could smell the parental interference. The room stunk with it, and the drugs enhanced it. \n\n\"She didn't even speak English, honey,\" my mother chimed in, \"she claimed things...\"\n\n\"I tried to give her some money,\" my father added. Oh God! That was the worst thing they could have done. \n\n\"I love her, you idiots!\" I shouted, \"I intend to spend the rest of my life with her.\" I heard a gasp at the door. Kimberly stood there, hand over her mouth, watery eyes. Fuck me. \n\n\"It's just the drugs,\" my mother declared, looking between Kimberly and me. There was silence for a moment as Kimberly, and I studied each other. I needed her alone. \n\n\"Please leave,\" I sighed, looking at my mom. Kimberly knew I didn't mean her. My dad had to escort my mother out. She was not taking the revelation very well. \"I...\" Kimberly interrupted by kissing my forehead. That is wasn't my lips, was telling. \n\n\"I wasn't going to tell you that way,\" I admitted. \n\n\"I know,\" Kimberly smiled. Her leaky eyes didn't match the smile, \"I'm still glad you didn't die.\"\n\n\"I thought I had.\"\n\n\"They say you jumped off a cliff.\"\n\n\"Fell, more like it,\" I said, \"trying to get the helicopter to see us.\" Kimberly studied me for a moment, her smile fading as she thought. \n\n\"Do you love her all the time?\" Kimberly asked quietly. She knew it too. We weren't fully compatible, just used to each other. I nodded, unable to answer with words. I had no idea, how do you talk with my last love about my true love.\n\n\"I would have made a crappy nurse,\" Kimberly chuckled weakly. Her eyes defied the humor. \n\n\"We would have hated each other,\" I added. Kimberly nodded. There was no way we would have survived me being bedridden. She sat on the bed and took my hand in hers. I welcomed her friendship. \n\n\"I'm still sad about it,\" Kimberly continued, \"parts of us were so good.\" I smiled remembering her beneath me in bed. She slapped my hand. \"Not just those parts.\" We laughed with each other, mostly because she knew where my mind went. At least we now had real honesty. \n\n\"I need to find her,\" I said, \"my parents may have screwed it up pretty bad.\" ",
        "\"I'll help you,\" Kimberly offered. I was shocked and must have looked it. She smiled, \"it will make up for all the care you're not going to get from me.\" \n\n\"I can't ask you to do that.\"\n\n\"You don't have to. We love each other too much to end it by ourselves,\" Kimberly sighed, \"we owe it to...\"\n\n\"Tamara.\"\n\n\"Tamara for making sure we didn't end up hating each other.\" Kimberley meant it. \"I don't think I want to meet her right away, but I can at least help you find her.\" I chuckled at the qualified help. \n\n\"I also need to learn to speak Armenian,\" I added.\n\n\"Is her English not good enough?\"\n\n\"She doesn't speak any English,\" I replied.\n\n\"How did you...?\"\n\n\"It was primal,\" I replied, \"we spoke without words, yet we understood everything.\" Kimberly smiled at me, almost a laugh. \"What?\"\n\n\"What happens if you don't like what she has to say?\" I never thought about it. \n\n\"Then I shut up and forget I know Armenian,\" I replied. Kimberley's laugh filled the room. My mom burst in, all smiles.\n\n\"So, is everything back to normal?\" My mother queried, looking at Kimberly. \n\n\"Hardly, Pamela,\" Kimberly replied nicely, \"we have just decided that there will be no war over it.\" My mother's face dropped. She always liked Kimberly and thought I should have married her years ago.\n\n\"Pamela, leave it be,\" my dad said, forestalling my mother from interjecting her opinion. \n\n\"Do you know her last name, or surname, or whatever they use over there?\" Kimberly asked, continuing our conversation. \n\n\"She told me once, I think,\" I said, trying to jog my memory. \n\n\"You're not helping him in this?\" my mother chimed in. \n\n\"Yes,\" Kimberly answered with determination, \"yes I am.\" \n\n\"I can't remember, but I think it started with a 'P' sound,\" I said, ignoring my parents. \n\n\"Jonathan!\" my mother continued, \" you can't do this to Kimberly.\" \n\n\"Pamela, I am doing this,\" Kimberly responded, \"He obviously can't do it himself,\" she waved her hand over my caged legs and lowered her voice, \"and though you would have made a wonderful mother-in-law, we would have been a terrible husband and wife.\" I watched as my mother hugged the daughter she wanted. Kimberly smiled at me from over my mother's shoulder. It was the she-likes-me-better-than-you smile you would expect from a sibling. I rolled my eyes and kept silent. I loved them both, but Tamara held my heart. \n\nWhen the drugs wore off, mood swings were replaced by pain. It wasn't a sharp I-can't-function pain. Luckily, I was in a coma for the worst of it. The pain was dull and constant. Moving increased it and stillness was incredibly uncomfortable. At night, sleeping pills were a must. During the day, I took it out on Rick and the other nurses. Being immobile was incredibly boring and being cleaned by unloving strangers was embarrassing. I thought back to the mountain when Tamara had to pee. I now knew what she felt. I wondered if she knew how much I loved her and that it didn't matter to me. I cringed as the night nurse wiped my ass. I truly hoped Tamara didn't feel as I did at that exact moment. \n\nKimberly came to visit every few days. Always a kiss on my forehead. I would never again know her lips. That was a good thing. They would never compare to Tamara's. Locating Tamara was taxing Kimberly's talents. The embassy had not kept records beyond mine, an American. The Azerbaijani authorities were difficult to converse with and knew little beyond putting Tamara on a bus with transfers to Yerevan, her requested destination. \n\nMy parents spent a lot of time apologizing for writing Tamara off. You can't hate the people who dropped everything and flew across the world to bring you back home. From what I could discern, they had run Tamara off. The interrupters were weak, knowing only one language well. My mother, her eyes on me and Kimberly walking down the aisle, probably bordered on cruel. My dad, ever the diplomat, tried to soften the blow with money. From what I could discern, Tamara was irate when they separated the two of us. I could still see the scars of her words in my mother's eyes, even though the language barrier and the interrupter must have weakened their sting. \n\nWhen the pain finally faded, my alone time was filled with thoughts of Tamara. Sleeping was difficult. I kept waking, expecting a warm body next to mine. I would smile, half in a remembered dream, then reality would destroy it. I missed her horribly.\n\nDoug Finley came by to see my progress two weeks after I had woken. I could see the dilemma in his eyes. He had a useless partner in a company that needed both principles. The firm was not large enough to absorb the loss easily. \n\n\"Jonathan, it's good to see you awake,\" Doug said as he took in my caged legs. \n\n\"Doug, thanks for coming to see me,\" I returned, \"I hope the Azerbaijani deal went well.\" \n\n\"Truthfully, it took a nosedive,\" Doug admitted, \"they got wind of your problems and attempted to renegotiate.\" He paused a moment, maybe thinking he should have lied, \"some misunderstandings occurred that both sides would have trouble undoing. I think they felt the deal was with you and not us.\"\n\n\"Damn,\" I said more to myself. I disliked having all that effort go to waste, especially after what I had endured. \n\n\"Not your fault.\" Doug shrugged his shoulders. I knew he felt the investment in the trip was a complete loss. Now I am laid up, costing more than I produce. \"We'll find another source in time.\" He smiled as if it was non-consequential. I knew it was. \n\n\"It kind of pisses me off,\" I said grimly, \"I thought it was a done deal. I'm sorry Doug.\"\n\nDoug smiled. \"Just worry about getting better. Have they given you any idea how long you're going to be laid up?\"\n\n\"Walking in five or six months, fully mobile in a year,\" I answered truthfully. There was no way I would be returning to work quickly. Doug nodded, and I could see the friend mixing with the business owner. I knew that he would pay a financial toll as I recovered. \n\n\"Doug, if we need to sell,\" I said, \"don't wait to spare my feelings.\" I wasn't sure I was ready to end the business, but I couldn't let him suffer financially without me. \n\n\"Not sure we can,\" Doug said, \"the proposal expired thirty days ago. Our numbers have dropped,\" he added, indicated my legs, \"not sure if there is any interest at a reasonable price.\" \n\n\"Shit, I'm sorry Doug. I didn't mean for this to happen.\"\n\n\"I know,\" Doug sighed, \"we'll just have to make the best of it.\" His smile belied the fears I knew were working their way through our finances. Unlike me, he lived rather high. Insurance on his Porsche probably cost more than my car. \"So they tell me you tried base jumping without a chute...\" At least we could still laugh together. \n\n++++++++++++++++++++++\n\nFive months after I fell from the cliff, my rehabilitation began in earnest. The tree that had saved my life did so at the expense of my legs. Immobile, my leg muscles had weakened so dramatically that when the pins and cages were removed I could barely bend my knees. The doctor had been correct. My arm had healed much quicker. I had to learn to walk all over again. \n\nKimberly had practically given up trying to find Tamara. She still visited me and told me of trading emails with this authority or another, but I could tell she had been defeated. I wasn't going to push. She at least had found a trail to Yerevan. My parents said they were looking, but I knew it was a half-hearted effort to stall my feelings while they hoped my desire would wane. My mother had some vision of my future, and it didn't contain an Armenian wife. My father, bless his heart, loved my mother as much as I loved Tamara. I could not pit him against her. \n\nAt night, alone in my room, thoughts of the mountain would return. Feelings of Tamara would fill me. Fear of her finding another frightened me. I would not fare well against someone who knew her language. Longing to return to that hopeless hovel with her in my arms swamped reasoning. I would rather die with her than live without her. It was hard to sleep with her in my mind. \n\nI spent six hours a week learning Armenian. My tutor, Ruben Aslanian, was more than patient with me. He was a retired steelworker, born and raised in Southern Illinois in an Armenian household. I was never a good student, and Ruben wasn't exactly a great teacher. We learned together. There weren't any other teachers willing to make house calls on a regular basis. \n\nRuben would shake his bald head every time I mispronounced a word. He didn't have the skills to describe my error properly, and my ears currently heard no difference. It would take time to become proficient. What Ruben lacked in teaching skills, he made up for with his patience. He had made many trips to Armenia, visiting and supporting his extended family. I soaked up his knowledge of the country as well as the language. \n\nSeven months after the fall, I was able to walk across the room, with two canes, without tiring. It had been a brutal rehabilitation. Entire muscle groups had to be rebuilt and adjust to the newly healed bones. My ankles, spared the brunt of the fall, were the worst. They felt like the first time I went ice skating when I was a child. It was if they had forgotten everything they were taught and fought against me the whole time. My doctor estimated I would be close to 100%, or what would be my new 100%, in a few more months. I moved back to my apartment. My mind began thinking of travel.\n\nKimberly insisted on driving me to physical rehab every other day. She was feeling guilty for not locating Tamara. The trips made me feel guilty. We had that way about us still. Unable to handle normal life comfortably. With her help, I progressed quickly. In two more months, I was able to jog half a mile on the treadmill without faltering. The scars along my legs became less hideous, more part of me now. Kimberly said I should tell people they were bullet holes. She thought It would be sexier. \n\nMy lessons progressed with Ruben to the point I could hold simple conversations in Armenian. Nothing elaborate, but a little more than 'where's the bathroom.' It was his last lesson that made my heart jump. \n\n\"I may have found her, or her family at least,\" Ruben stated with a smile as he entered the door. He was excited and now, so was I. \n\n\"Tamara? Where?\" \n\n\"In the outskirts of Yerevan, in old soviet era tenet housing,\" Ruben stated, rubbing his bald head. He always did that when lessons went well. Good thing he didn't play poker. \"My family thinks it is Tamara's family, they're not completely sure, but how many families claim plane crash survivors?\" \n\n\"They talked to them?\" I asked, pulling a chair out for Ruben. \n\n\"No,\" Ruben answered, \"it is kind of third-hand knowledge. I didn't ask them to go Yerevan. They just spoke to friends of a friend.\" He shook his head, \"I didn't ask them to travel there. I could try.\"\n\n\"No,\" I said, my smile growing, \"I'm going there one way or the other. This, at least, gives me a place to start.\"\n\n\"I only know the building,\" Ruben qualified, \"It's a long trip if it isn't her.\"\n\n\"Then I'm knocking on doors,\" I said proudly, \"If it takes years, well...then it takes years. I'm not losing her again.\"\n\n\"Armenian women have a certain strength to them,\" Ruben warned, \"are you sure? You chase her that far, and she'll know she owns you.\" \n\n\"She already knows,\" I said and smiled, \"We own each other.\"\n\nThe very next day, I went shopping. It wasn't the most expensive ring in the world, but that wasn't me, or Tamara. It was a pretty thing, platinum band with a solitaire setting. I wasn't sure it was a wise thing to do, but if she was still single, I meant to rectify it. I closed the black ring box and put it in my pocket. If she wasn't single, I could always carve my eyes out with the diamond and try out another cliff.\n\nDoug tried hard to talk me out of traveling to Armenia. He was adamant that I would find her with another man or worse, uninterested. He spent a lot of time trying to talk me into going to South America. There was a strong interest in handmade Peruvian pottery and thought my time would be better spent acquiring a supplier. We had angry words on the subject. He seemed to think he could change my mind, not understanding my level of commitment. The only thing that ended the argument was promising to travel to Peru after I found Tamara. \n\nMy mother was despondent. Not so much that I was getting back on a plane, but that I was pursuing a woman that didn't quite meet her criteria. My father, on the other hand, organized the trip and bought the plane tickets. He had been feeling guilty about not being more charitable to Tamara when they had met briefly. My parents treated her poorly, trying to undo what they thought was me sowing wild oats. I kissed my mother and, for the first time in a long time, hugged my father. \n\n\"Find her,\" my father whispered in my ear. Soft enough that my mother couldn't hear. I felt he wanted to say more, but he left it at that. His love was stretched between the two of us. He was forever the diplomat. \n\n++++++++++++++++++++++\n\nMy three plane hops to Yerevan landed where they were supposed to. I let out the breath I was holding each time the wheels touched down safely on a runway. I grabbed my one bag and walked out of the airport with single-minded desire and note with unverified information.\n\nTamara Petrosian\n\nKurkjian building III\n\nYerevan was not Chicago. No grandiose downtown with glass and steel skyscrapers. Yerevan looked old, a throwback to the 50's with mostly cement buildings rarely more than ten stories high. The city was backed by snow-covered mountains that brought back memories. Part of the same Caucasus chain that Tamara and I survived. \n\nI took a cab to the Marriott located downtown. The area was well cared for and prepared for tourists. Art, green space, and impressive architecture were all around. It was not an unimpressive city. My lessons with Ruben served me well. I had no trouble understanding that I was being overcharged for the ride. The cabby smiled at the dumb American, who paid the fee without question. The conversion math for the Dram was difficult, and I didn't have my head adjusted to the new monetary system. From what I could quickly figure, his overpayment was a hell of a lot less than a Chicago cabbies underpayment. \n\nI spent some time, after checking in, with the concierge. It took a few minutes for him to locate the Kurkjian buildings, a twenty-minute trip away. He marked a map for me and also pointed out some choice eateries. I wasn't hungry for food. He called me another cab and the doorman instructed the cabbie where to go and what to charge. I laid out tips that I hoped weren't too small or large. The large smiles told me they were still on the large side. \n\nThe people we passed along the way could have been from any western city in the world. No distinctive clothing like you might find in the mid-east. Jeans, khakis, and a suit here and there. Women wore pants as well as dresses. It was the normal structures that were different. They were boring. Every now and again we would pass something unique, but all in all, the city had a lot of drab architecture. \n\nGreen spaces were the exception. The people seemed to treasure the parks and the grasses between their boring buildings. That's where they put most of their effort, and it was wonderful. I always loved the Chicago parks, but they were far apart compared to the integrated system they had in Yerevan. \n\nWe arrived at, what the driver indicated, was the Kurkjian buildings. A set of four zig-zagged five-story buildings that reminded me of an accordion. The cabby pointed to the one in front of where he pulled over and said something too quickly. When he repeated it slowly to my confused face, I understood that it was building three. I thanked him and paid him the agreed upon fare plus a much smaller tip than I gave the concierge. I received a polite thank you, but no smile. The proper tip was somewhere between the two. \n\nI stepped out of the cab and realized I had just walked out into a huge risk. I turned to ask the cabbie to wait, but he was already driving off. I shrugged to myself; it couldn't be as bad as falling off a cliff. I moved toward what looked like the main entrance. The building was a cinderblock structure, gray with little in the way of adornments. Definitely a boring Soviet-era structure. \n\nThe people I passed were not friendly, or unfriendly. They seemed to ignore my presence as I ambled, obviously new, toward the entrance. I was kind of hoping someone would ask me if I needed help so they would be committed to trying to understand my poor Armenian. Sadly, I made it to the doors unaccosted. \n\nThough the buildings housed a lot of people, there was no formal information desk. A wall of flushed mailboxes were along the entrance wall, most without names, just numbers. The hall ahead was lined with doors leading to the individual apartments. I should have hired an interrupter. I had some glorious dream of Tamara seeing me from afar and avoiding language altogether. Now that I was there, the dream faded and reality set in. I waited by the mailboxes, thinking someone would be along. It was better than knocking on random doors. \n\nA young girl with bushy black hair walked toward me. I was terrible with ages, but I guessed ten. She moved deftly to the other side of the hall to avoid me with the most distance she could put between us. Of course, I was a stranger. She opened a mailbox using a key and retrieved a few letters. \n\n\"Hello,\" I asked in my piss poor Armenian, \"I am looking for someone.\" I tried to remember all my lessons, but the look on her face said something other than I intended came out. She hurried past me. \"Please,\" I added. She ran faster. I shrugged my shoulders and waited for an adult. \n\nIt was only a moment later when a rather burly man came down the hall from where the girl had disappeared. He had a few days growth on his face and was wearing sweats and t-shirt. \"Hello,\" I started. \n\n\"American?\" the man spat in a deep accent. I nodded as he slowed. A series of words left his mouth at a speed I couldn't understand. I assumed his one word of English was 'American.' By his tone, I don't think he liked Americans. \n\n\"Please, slowly,\" I sputtered. I understood something about children and scaring or frightening. He then asked if I liked children. I nodded. Humorously, Ruben had taught me a few swear words. This man wasn't laughing when he screamed some I understood and others I didn't. I was missing something. I raised my hands, fingers wide, trying desperately to remember the words for 'I don't understand.' Another door opened, and a man emerged, obviously known to the first. They had a brief conversation where the word 'American' was used in less than favorable terms. \n\n\"I am looking for a person,\" I said, happy I could assemble the words. I should never have trusted my language skills. The new man looked at me. \n\n\"Tamara Petrosian,\" I added. \n\n\"You look for Petrosian?\" the man asked in broken English. I nodded. He smiled, \"he think you after...daughter,\" he added, pointing at the burly father. \n\n\"No,\" I said, looking at the first man. I vehemently shook my head to emphasize the point as the new man translated. The first man grunted and dismissed me with a wave of his hand. He was rambling about Americans as he went back down the hall. I sighed. Nuances were everything. \n\n\"Petrosian... floor three,\" the man said and pointed way down the hall, \"three-nine-eight.\" I smiled and held out my hand in a way of thanks. He ignored it and went back his apartment. Americans weren't popular in this building. I walked down the hall until I saw stairs going up. \n\nI took a deep breath and knocked on 398. I heard movement behind the door and waited for a moment before the door open. An old woman, heavy set with her black hair loose and wavy, answered without a smile. "
    ],
    "authorname": "DreamCloud",
    "tags": [
        "mountain",
        "romance",
        "tamara",
        "dorothy",
        "jonathan",
        "love"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-mountain-2"
}