{
    "title": "An Ancient Seed Re-Planted Ch. 04",
    "pages": [
        "At the sound of keys sliding into and moving the lock, Billy quickly pulled his cock out of Noreen's mouth and tried his best to put it back into his pants while Noreen fumbled around with the buttons on her dress. \n\nThe door opened and Xiao appeared at the door but dropped her books and swore softly in Chinese as she bent to pick them up, not noticing as Billy hurried back around to the front of Noreen's desk, his cock still hard and refusing to go back into his pants. In desperation, Billy simply laid it back against his stomach, buttoned his pants around his balls and lower portion of his shaft while the remaining two thirds of his rod he simply tucked under his white and black polo shirt and put his hands in front of him, fig-leaf style as Xiao entered the office. \n\n\"Hello Noreen, oh, William, you're here.\" Xiao said, looking over her small, round, Yoko-Ono style glasses at him disapprovingly. \"Give me half a moment and I'll be ready to speak with you about your poor marks.\" She turned away from him to face Noreen.\n\n\"Noreen, have there been any calls while I was out?\" \n\nNoreen swallowed nervously, but shook her head. Billy noticed her lips were smeared with thick saliva and what was most likely pre-cum as well, and hoped that Xiao wouldn't notice.\n\n\"Noreen, are you feeling ill? You look, out of sorts...\" Xiao asked her.\n\nNoreen cleared her throat. \"No, no, I'm fine professor Xiao, I just choked on my lunch a bit before you came in.\"\n\n\"Oh, well try and be more careful.\" Xiao said as she walked quickly toward her walled off, inner office. Billy watched her go, noting how the heels of her shiny black leather \"fuck-me\" boots clicked loudly on the polished floor. Her hair was wrapped tightly up in a bun.\n\n\"William, I'll let Noreen know when to send you in.\" She said as she closed the door behind her.\n\nWhen she closed her door Billy looked down at Noreen, who looked back up at him, her eyes wide open and her face quite shocked looking.\n\n\"Noreen, after I meet with Professor Xiao, you and I are going to spend some time together, so stay put while I'm in there, do you understand?\"\n\n\"Yes.\" She said, as he moved back to the outer office door and re-locked it before walking back over around her desk to stand in front of her again.\n\nShe reached up with her big, paw like hand and rubbed his cock as it lay against his stomach.\n\n\"I don't understand it, I'll do anything to feel that cock again...\" She said airily.\n\nHe leaned down and pressed his lips against hers, kissing her savagely and forcing his tongue into her mouth while he firmly squeezed her breasts with his hands... In the back of his mind a part of his consciousness asked over and over how he could have just strode into Xiao's office, unzipped his fly and stuffed his cock into Noreen's mouth. \n\nHe had never done anything like this before, never been an exhibitionist or ever had an inkling to try what could only be called bdsm, but somehow today it just felt... right. He could only presume that Xiao's latest dressing-down after class combined with Noreen's unreasonableness as the last straw. It was quite fortuitous considering the considerable talent he'd been given to help him with his penance, or rather penance for the actions of his ancestor. Had he not thought of using this new gift, he might have just told Noreen to \"fuck off!\"\n\n\"We have a lot of things to discuss tonight, Noreen.\" He said as he broke off their kiss. The thought of bending her over right here and fucking her for hours just wouldn't leave his mind. Oh, but he would have fun with her... There was so much \"penance\" he would perform on Noreen, perform for her behavior toward him and for every other student she'd treated like shit. But first, Xiao was waiting...\n\nNoreen's phone rang. She noticed which line was flashing and pressed the corresponding button and initiated the speaker phone.\n\n\"Yes, Professor?\" She asked quietly.\n\n\"Noreen, please send William into see me now, and get me the number for the dean of the college of liberal arts.\"\n\n\"Okay, Professor.\" Noreen said, turning off the speaker phone as Billy headed into Professor Xiao's office.\n\nShe looked up from where she sat behind her desk as he entered, turning his back toward her as he closed her office door slowly and quietly before turning to face her again.\n\nShe sat sort-of bent over her desk, her eyes peering at him over the tops of her glasses while she finished writing something. Finishing her task, she sat back in her chair and he noticed for the hundredth time just how small she really was, dwarfed by the huge desk in front of her, the wide chair beneath her and the high wall and ceiling behind and above her. \n\nShe was good looking in a bookish way, and she was in good shape for a woman in her late 40's. Her gray jacket and long skirt did little to hide her small, tight ass when she walked, nor to make plain her small breasts and generally flat figure. But that didn't matter right now. Now, it was Billy's turn to give Xiao some payback for the way she'd fucked him grade-wise, at least as he saw things.\n\n\"Have a seat, William. I'm going to have your dean on the telephone shortly and I want you to be here as I let her know of your deplorable attendance. I don't think she has any idea just how lightly you take your academic career.\" She said, looking back down at her desk, this time opening her desk drawer and taking out several sheets of paper with what looked like attendance information written on them.\n\n\"Professor Xiao, can I at least try and explain-\" He began.\n\n\"No, William, I'm really not interested in any excuses. And I really don't think there's any argument you can offer that will change my mind.\" She said, looking down in her desk for one sheet apparently far in the back of the drawer.\n\nShe looked up and saw that he had refused to sit down and instead now stood in front of her desk, staring at her with a nasty grin on his face. She stopped rummaging for her papers and sat frozen for a moment as she watched his hands unclasp his belt and start to unzip his pants. Shocked by what she saw him start to do, she reached quickly over her desk and grabbed the phone from its cradle, hurriedly dialing the number for campus security. Once she'd entered the number and heard the first sound of the ring on the other end, she looked up at him again.\n\n\"William, you nasty-\" She stopped in mid-sentence as from four feet away from her, separated by her large desk, his cock hung free and clear from his pants and bobbed up and down, the urethra visible below the head was quite thick and round, as though full of semen. Below the front-on view of his cock hung a large scrotum with two enormous testicles, clearly visible to her as the skin of the scrotum looked to be drawn tightly around them, possibly due to the amount of additional skin his cock demanded to become fully erect. \n\nShe could only stare open mouthed as a voice came on the line at the other end of her panicked call.\n\n\"Hello, campus security.\"\n\nShe didn't answer, instead just focusing on Billy's cock in front of her as her heart raced, her loins became wet and hot and her small nipples curled into tight buds. She glanced up at his face, and whereas before she had seen contempt, smugness and malevolence, now she saw lust, raw and pure, and she felt overwhelmed by the feeling.\n\n\"Hello?! Is this professor Xiao? Professor, are you in danger?\" Came the loud, forceful voice on the other end.\n\n\"What?! Who is this?!\" She demanded angrily as she finally responded to the campus security officer.\n\n\"This is campus security, who the hell is this?!\" The man retorted petulantly.\n\n\"This is Professor Xiao, you ass! How dare you speak to me this way?!\" She responded.\n\n\"Look, professor, you called us, so what do you want?\"\n\n\"Piss off!\" She shouted, slamming the phone down.\n\nWhen she looked back up at Billy he had completely disrobed and had walked around the desk on her left hand side so that he was now only a foot and a half away from her as she looked up at his naked, lithe body. Her whole body felt hot and every breath of air she took carried with it enough pheromones to set her pussy on fire. She swallowed once and looking up at his eyes reached a shaking, pale hand up and took hold of his shaft, letting out an audible moan as she held it in her hand.\n\nAs soon as her fingers closed around his cock her hands lost all hint of unsteadiness as the energy pent up from her arousal now had an outlet. His cock was very warm to the touch and she could feel his blood pulsing within as she tightened her grip on his shaft, making the smooth, purple head bulge and darken heavily in reaction.\n\n\"My god, your prick is magnificent!\" She breathed, reaching up with her other hand and placing it above the first so that she now held his 10 inches of rock-hard dick in both her hands. Her grip still left about a third of the length of his cock uncovered. She squeezed the shaft and twisted it with her hands, trying to choke the life out of it.\n\nBilly closed his eyes and reveled in the feeling, never having imagined how good it would feel and letting his own lust build as her hands began to loosen their hold a bit and move back and forth along him.\n\nShe began stroking him, at first slowly and gently, letting her hands move along the skin of his shaft, very gently. He shivered as he felt the smooth, soft skin of her fingers and palm ever-so-slightly run along his cock. As the head began to ooze drop after drop of pre-cum, she used her left hand to wipe it onto her fingers while her right hand tightened its grip on his cock and began to pump it, moving the skin on his cock up and down with her motions, coaxing out more and more pre-cum...\n\nShe did this until her left hand was covered in his shiny, clear pre-cum, spreading it even on her palm and the skin between her fingers. When her hand was completely covered she switched her grip and began rubbing his pre-cum up and down his cock, slathering it with its own lubrication before returning to masturbating him. The effect was immediate, and Billy grunted with the sudden feeling of the lubrication on his cock, reminding him of how slippery and tight the pussy of that bag lady (or whatever the hell she was) had felt when he'd fucked her. \n\nHe began thrusting his hips toward Xiao, dotting her face with pre-cum when his cock made contact with her and he could feel his sperm building to an uncontrollable pressure within him. Moving quickly, he pulled her hands off his cock and grabbing her by the lapels of her jacket, yanked her to her feet and spun her so that her ass was pushed back against her desk.\n\nHer eyes were wide at the suddenness of his movement but also due to her own lust. She had always had some secrets about why she first came to study in the UK, secret desires she never told anyone but were still relevant all the same. One of those secrets had been her visceral desire to hold in her hands a long, thick, white cock, and it was a fantasy she had only been able to experience once while she was in the UK. \n\nIt was a fantasy borne of gossip and rumors she'd heard when still a girl in Taiwan about \"lao wai\" or foreign men, especially European men, and how they were different. It was the same type of gossip and rumors so many white women hear about black men, but for Xiao this rumor had always made her get red hot with desire to see and feel such large, pale dicks.\n\nHe tore open her jacket, sending the two buttons holding it closed flying off into the corners of her office. Her white blouse beneath met a similar fate and when he had pulled that from her body he pushed her back onto her desk so that she sat on it in front of him in her bra, skirt, boots and panties.\n\nThe first of those he roughly grabbed by the bottom of the cups and lifted it off her, tossing it on the floor as he next grabbed each of her boots in turn, unzipped them and dropped them to the floor of the desk. She put her hands softly on his shoulders as he got down on his knees and flipped her skirt back, grabbed her panties and pulled them off her legs toward him. When he had tossed them aside with the rest of her clothes, she undid the clasp holding her skirt on and this too he dropped onto the floor.\n\nShe sat before him naked, save for her glasses and the bindings holding her hair in a bun. \n\n\"William-\" she began, but he cut her off, putting his right hand on her small breast and squeezing it gently as he grabbed the back of her head with his other hand and kissed her aggressively. He fondled her breast and moved his tongue around in her mouth this way for a bit and then pulled back from her, breaking off his kiss and taking his hand off her breast but keeping his left hand tight around her bun. Taking his cock in his right hand, he pulled her down and toward him while moving his cock into her mouth, as he had done with Noreen earlier.\n\nXiao had none of the natural talent Noreen had when it came to sucking cock. Her teeth constantly scraped him, she didn't know how to use her tongue to lick him even when he told her how and to top it off her mouth was so shallow and her throat so narrow that she couldn't take more than one third of his length in her without gagging and flailing around so much he worried he might actually suffocate her.\n\nHe pulled his cock out of her mouth and watched as while she was panting and drooling, she hesitated not a bit and took his cock back into her hands and began masturbating him again. This was certainly a talent of hers and now she had even more lubricant from all of her saliva that coated his cock thickly even as pre-cum ran freely from the tip of his head.\n\nHe watched and felt as she squeezed and strangled his long, thick cock as she had before but now with the added lubrication it was not long until he felt the first surge of cum boiling up his shaft. He grit his teeth and began to shake as more and more sperm was pumped up from his balls to join the massive load that was already there from an hour and a half of Noreen's sucking his dick, and he tried with all his will to hold on just a little longer, hoping to prolong the feeling of pleasure he got from her handjob.\n\nXiao noticed what was happening, and with a rush of lust as she remembered what she had done the only other time she'd found a well-hung white man to give handjobs, she pointed the swollen, purple head of his cock squarely at her lips and opened her mouth, reaching out with her tongue to guide his cum down to her throat, even as she pumped his shaft faster and squeezed harder.\n\nBilly cried out hoarsely as he thrust his hips forward and sperm jetted from this cock in sixteen huge globs, one after another shooting onto Xiao's face, splattering against her glasses, her nose, her cheeks and her even her forehead. Billy just shook uncontrollably as he experienced an orgasm so long in building up and with so much energy now that it was released he feared he might lose control of all his bodily functions.\n\nXiao continued to pump his cock, squeezing out the last big glob of cum which was followed by a slow flowing fountain of sperm, this moving with sufficiently less force so that it cooperated with her intent and poured down into her mouth and throat. \n\nShe swallowed again and again as her small mouth filled over and over with his sperm. She felt it stick to the roof of her mouth and she felt ropes of it clinging to her teeth but stretching down her throat and sticking against the sides of her esophagus. \n\nIt was warm, and sticky and so delicious to her... She felt some of the globs he had shot on her face sliding very slowly down onto her neck and shoulders, but much of what he had put there remained in place, so thick and sticky after having sat in his urethra for so long that it was almost like glue.\n\nHis cock had mostly emptied for the moment, the flow of semen was reduced now to only what she could wring out of him, and wring that cock she did, dedicatedly pumping his swollen cock despite only producing a drop or two of semen at a time. She couldn't see through all the sperm on her glasses, but she could still feel how his cock had never gotten soft and she could feel the veins beneath the skin of his shaft pulsing with blood, keeping his long cock warm and hard.\n\nFinally, he pulled her hands off his cock and grabbed both of her legs under her thighs, pulling her sopping wet, shaved pussy toward his cock. \n\n\"Fuck me, William,\" she rasped, wrapping her pale, thin legs around his waist, pushing the head of his cock into the very tight and very small opening between her labia. \"Fuck me with your big cock.\" \n\n\"I'm going to cum inside of you, Xiao.\" He said, easing his dick into her pussy.\n\n\"Do it!\" She hissed, arching her back and throwing back her head as his cock slowly invaded her pussy, filling it as full as it could be filled.\n\nSlowly at first, he began pumping his cock into her pussy, coaxing enough sperm from within him to join with her own creamy lubricant to make her cunt slippery enough for him to start moving faster. As he increased his pace, he reached a speed he found to be comfortable, fucking her with enough speed and force to make her whole body jerk back and forth with each thrust of his hips. Her pussy was so slippery and tightly filled that the sound of his cock going into and out of her was like someone pushing a shoe into and pulling it out of a thick, sticky mud-hole, over and over again. His shaft was quickly covered in the thick, creamy lather her pussy produced and after about ten minutes of his steady fucking she screamed her orgasm, her pussy tightening on his cock so much it felt like she had another hand inside her.\n\nHe fucked her through her orgasm and felt his own balls swelling with cum once again. The sound of her screams, saying god only knew what in Chinese turned him on until he felt near his own orgasm. As the pressure within him increased he fucked her faster and faster until he too came, and began pumping her pussy so full of sperm it began to leak out of her. When his cock slid back out of her cunt, his sperm poured out but with each thrust of his big cock back inside her pussy it sprayed out, covering her desk, her ass, his balls and his thighs with his cum. \n\nSince he never lost his erection he never stopped fucking her, though he did slow down for a time to recover his energy before beginning to fuck her again, which he did, taking her three more times, each time pumping more sperm into her burning hot vagina than he would have ever thought possible. After the fourth time he came she was moaning and sobbing so much from the pain that he felt some sense of pity toward her and pulled out, his cock pulling with it a small wave of sperm that had been trapped within her.\n\nStill feeling the need to fuck, he grabbed her by her ankles and twisted her over onto her stomach, where she lay, helpless and panting in front of him. He wiped up a large handful of sperm from her ass and rubbed it into and onto her anus, getting her as lubed up as he could. Pulling her toward him so that her feet touched the floor and her hands lay in front of her, he kept her bent over the table and pushed his cock deep within her ass.\n\nXiao moaned a little but was so spent and overwhelmed from what Billy had done to her should barely even noticed as he fucked her ass. She had been fucked so thoroughly she was barely conscious. She was just relieved to have his huge dick out of her pussy.\n\nBilly felt tremendous pressure from her ass as he fucked her, it was even tighter than her pussy! In little time he came again, filling her ass with his hot cum. He wanted to keep going, but he was exhausted, and he lay down on top of her back, breathing heavily and feeling his heart race so fast he feared it would explode. He lay on her smooth back and slowly opened his eyes, seeing bright shiny spots rotating in his vision as he bordered on losing consciousness. He had no way of knowing for sure if Xiao was now pregnant, but he didn't care. He was spent, for the moment, and could barely muster the energy required to keep breathing.",
        "They lay there like that for some time, each slowly coming to their senses once again. Billy kissed the back of Xiao's neck softly. He smelled her hair, now thoroughly undone from her bun, and noted how much he liked the smell of woman-sweat, shampoo and sex mixed together. He touched her cheek with his fingers and she slowly turned her face toward his hand. He leaned forward slightly, driving his cock deeper into her ass, and softly kissed her on the lips, not minding in the least the now drying sperm that rubbed off on his upper lip and nose as he did so. \n\n\"fuck me, William. Fuck me again...\" She whispered.\n\n\"No, not today. Maybe later.\" He said, sliding his cock out of her ass. He gathered up his clothes and walked the door of her office still naked. \"You should re-think failing me in this class...\" He said, and left her on her desk, her face covered in his sperm, her ass full of his cum and a seed planted deeply within her."
    ],
    "authorname": "spectral_badger",
    "tags": [
        "masturbate",
        "anal",
        "oral",
        "student",
        "professor",
        "chinese"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/an-ancient-seed-re-planted-ch-04"
}