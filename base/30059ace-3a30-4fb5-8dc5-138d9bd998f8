{
    "title": "The Wolf with the Red Roses",
    "pages": [
        "\u00a9 2017 Chloe Tzang. All rights reserved. The author asserts a moral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review. \n\nThis is my first ever Valentine's Day story (written for the 2017 Valentine's Day competition). It isn't quite what I was expecting to write when I started out (it was meant to be a short and sweet first time romance, featuring Craig and Regan, but it didn't quite turn out that way as you'll read -- and part way thru it morphed into a little mild bdsm). It's also ended up being my first foray into the \"Mature\" category, so I'd love to know how you think I did with this one. \n\nAnyhow, regardless of all of that, this story starts and more or less ends with roses, as any good Valentine's Day story, IHMO anyway, should. So enjoy, and guys ..... buy her red roses for Valentine's Day, okay. Nipple clamps, well, they're optional, but red roses, they're categorically a requirement (unless she has an unfortunate allergy to flowers in which case you better go with chocolate ones ...)\n\nOh, and btw, for those that want a quick read, like my yappy and long-winded intro, this is not a short story. It IS a stand-alone, but it's about 14 or so LIT pages (50k words) and does include -- how do I put this politely -- lots of graphic sex. I hope you'll find it's worth the reading time but if that's to long for you, best you know now, before you get further into it than this. Long or not, it was certainly fun for me to write altho now my partner has these terrible ideas about spanking and nipple clamps and he thinks I need to be \"disciplined\" for writing these shockingly naughty stories .....oh dear...still, the practice was lots of fun \uf04a\n\nAnd finally, the author's Mom would also like to ensure that the author has added a disclaimer that while her daughter was well brought up and used to be a very nice girl, she has no idea what went wrong and it's not her fault Chloe is writing this shockingly explicit erotica stuff. Chloe's partner on the other hand wants to state that he enjoys Chloe's stories tremendously and she should write more of them and he hopes you will all encourage her as well as he reaps the benefits, especially when Chloe is writing those hot sex scenes and he did think the nipple clamps were a wonderful idea until Chloe wanted to try them on him and then he changed his mind, much to Chloe's disappointment. ... but now, enough with the yapping from me. On with the story, which is, after all, why you're here and putting up with my yap yap yapping ... Chloe\n\n<center>* * * The Wolf with the Red Roses * * *</center>\n\n<center>[Boy:] On a hot summer night, would you offer your throat to the wolf with the red roses? [Girl:] Yes. [Boy:] I bet you say that to all the boys!</center> <r>You Took the Words Right Out of My Mouth, MeatLoaf</r>\n\n<center>* * * </center>\n\n\"Wow, nice costume, Regan!\" Craig is at the front door of my parents' house, smiling, looking me up and down as he hands me the beautiful red roses he's carrying.\n\n\"They're lovely. Thank you, Craig.\" I smile back before I bury my face in the huge bunch. He was probably expecting me to kiss him but that's hard when you're holding a huge bunch of roses so he loses out. Besides, they smell divine. They're even nicer than the roses he gave me on our first date three months ago, two weeks to the day after my eighteenth birthday. \n\n\"Don't you want to take the roses inside?\" Craig asks.\n\nI shake my head. \"No,\" I say. \"Mom might see my costume.\" I give him another flash of what I'm wearing under my Little Red Riding Hood cloak.\n\n\"Oh, right,\" he says, comprehension dawning. \"Let's go.\" Craig's not Chinese like me. He doesn't know what Chinese Mom's are like when they see their only daughter in a costume that any boyfriend would die to see his girlfriend in. But he does know my Mom. He's quick enough on the uptake when you give him a clue or two.\n\nTonight he's quick. We're in his car in seconds. Once we're in his car, I pass him back the roses.\n\n\"Hold them for a second,\" I say. \"I have to finish my costume.\"\n\nHe takes them, watching as I unfasten my cloak. He notices right away I'm not wearing a bra but with his hands full of roses, he's stuck. I smile as I fish around in my overnight bag. There it is. He's going to like this. I pull out the harness top that Lulu gave me. Slip it on over the top of my shirt. It's all black leather straps and little silver buckles and it's a kind of bondage thing according to Lulu. I fasten it at the back, smiling at Craig. He definitely likes the way it fits me. Once it's on, I refasten my cloak.\n\nCraig's had his look. He can play later. \"Let's go,\" I say, taking my roses back from him. I continue to hold them as we drive. The car fills with that divine scent. I'm not worried about taking a huge bunch of roses with me. We're going to a Valentine's Day (except it's the evening) party at Harry's parents house. Harry is Craig's best friend and we're over there a lot. His parents will have a vase for my roses, I'm sure. <center>* * *</center>\n\nParties are always fun. I've been to a couple of parties at Harry's before, his parents are great. This one is actually a fancy dress party his parents are putting on, and Harry's on bar duty, but he's invited Craig and I as well as his girlfriend, Lulu.\n\n\"Hi Regan, hi Craig.\" Lulu answers the door. Lulu Li. She's my bff from way back. She's also Harry's girlfriend and it looks like she's on front door duty. Andrew, Harry's dad, is real good at delegating. I know. I've been delegated to in the past. Tonight, well, lucky Lulu. \"Those flowers are gorgeous.\" She looks me up and down. Grins. \"I really like the costume. Come on in, everyone who's here is down in the rec room.\"\n\nI grin. She's pushing the costume envelope herself and she encouraged me to do the same. I'm dressed as a sexy kind of bdsm Little Red Riding Hood. A nice little red cape, red top and frilly little red skirt that's just a bit too short with black knee socks. It's a little embarrassing, but it looks hot and right now my hair is kind of dyed dirty blonde and I've got lots of black eyeliner and lipstick on. Lulu kind of hotted it up for me and I did the makeup to suit myself. \n\nFor a girl who conflicts like crazy over giving blowjobs to her boyfriend, she's rather imaginative. From somewhere, and she won't tell me where, she got that bondage harness top things that I'm wearing. I'm wearing it over the top of the red shirt, along with a black leather and silver choker she gave me. No bra. Red panties to match the skirt just in case anyone sneaks a look. The original look was kind of cutesy. I don't really look so cutsey now, but I do look hot.\n\nLulu's my best friend but I have to admit she can be kind of kinky sometimes even though, like me, she's never had sex. Not counting blowjobs that is. We're probably the only virgins left in our senior year except for that weird Muslim girl who won't even talk to the boys and a couple of bored again's who aren't bad looking but they're such bible bashers that even the boys won't talk to them. \n\nAnyhow, virginity? I'm not intent on losing it, but it is something I think about every now and then. Should I or shouldn't I? Me and Lulu both. I don't know why we do that. I mean, it's the twenty first century, but try telling our parents that. Whatever. I haven't lost it yet and I've held Craig off, just. He's not the right guy, I'm almost sure of that. Of course that doesn't stop me teasing him and making out with him. We're going to make out tonight for sure. It's not just that we always do when we stay over at Harry's. It's the top I'm wearing.\n\nAll those black straps and buckles, they make sure my boobs are on display. Not that there's that much to display. Without my cape, you can see my nipples. My Mom would have a fit if she saw me now, but I kind of like it even if it's embarrassing. Craig likes it to. He watched me put it on in his car because I hadn't dared wear it at home in case Mom saw me on the way out the door. \n\nIf she'd seen my costume, I'd have been sent upstairs to change. If she'd seen that harness top thing, I'd have been grounded until I graduate and go to College. Anyhow, the cape? The cape lets me cover myself up when I want to. It's very cute and sexy and the red contrasts beautifully with my long and usually black but now dirty blonde hair, which tonight is in its usual high ponytail. I think I make a wonderfully edgy Little Red Riding Hood. \n\nLulu is dressed as one of Santa's little elves and this evening she's definitely being Santa's little helper. A very short little green skirt, candy-striped tights and a red top that matches mine. Except she's wearing a bra - after she coaxed me into NOT wearing one. Cheater. Kind of a cute costume she picked up online. We bought them together. \n\nCraig and I add our snow boots and coats to the collection at the door. An older couple are arriving, Lulu is taking their coats as I head downstairs. The old guy is watching my butt, I can see him in the mirror. I wiggle, just to give him a thrill. I'm still carrying my beautiful bouquet of roses. Craig is taking our overnight bags upstairs. He and I and Lulu are sleeping over. \n\n\"May I put those roses in a vase for you, Miss Riding Hood?\" The silver-haired fox in a wolf costume gives me a smile as I walk in. It's Andrew, Harry's Dad. He suits the wolf costume. He always rather reminds me of a wolf, even without the costume. A kind of silver-haired, charming and very foxy wolf. If he was thirty years younger..... well, let's just say Craig would have serious competition for me. But he is thirty years older than me and besides, he's married. \n\nHis wife, Pamela, is a lovely curvy blonde. Gorgeous. There's no possible way he'd be interested in an eighteen year old Chinese girl. Craig wins. Oh well. It's not like Andrew is even close to my age or anything. It's just my silly imagination.\n\n\"Thank you Mr. Wolf.\" I smile back, blushing. Andrew always makes me blush. Sometimes he makes me go weak at the knees and I have no idea why. Maybe it's something about the way he looks at me. Maybe it's the way he talks to me. He's very assertive and commanding. I feel like I should be snapping to attention and clicking my heels together and saluting sometimes when he asks me to do something. I like it when he looks at me too, there's just something about him. An aura? Whatever. It's strange. It's like he's undressing me with his eyes and I like it. It's not a look that I like from guys usually. But with Andrew? I don't mind at all.\n\nHe's giving me that look now. \"Nice costume, Regan. Hey, I like what you've done with your hair. Cute.\" His eyes light up. He grins. \n\nI realize my cape is wide open. He's looking at my top and those black straps of the harness thingie that criss-cross everywhere. I know where he's looking. It's almost like his eyes are caressing me. My nipples swell, engorge, they tingle where they push against the material of my top. The criss-cross straps hold the material tight so that when my nipples swell, they're very visible. They're pushing hard against the material that covers them. Andrew's look lingers. It's like he's checking me out. I blush, but I don't cover myself with the cape. I stand there, feeling his eyes on me, transfixed.\n\n\"Let me take those roses,\" he says. \n\nI pass them to him, he gestures towards the bar. \"Harry's doing the drinks, foods on the buffet table, you know where everything is, Regan.\"\n\nI do. I've been here often enough before. I'm going to have some fun. I like parties, even if this one is mostly Harry's parents' friends. It's still going to be fun. Especially if Andrew keeps looking at me like that. Maybe if I make myself useful he'll give me another of those looks. Its fun and Craig won't mind, him and Harry will be yapping at the bar. I take a deep breath. \"Can I get you a drink from the bar?\"\n\nHe looks at me. An appraising look. A long slow look, ending with a long slow smile. \"Sure, if you don't mind, Regan. Ask Harry for an Armagnac, tell him the nineteen fifty two Samalens.\"\n\nHe really is very very good looking, even if he is fifty something. As he turns away I pull my cape closed. I am shy, even if I'm dressed like this. I'm not sure why I'm wearing this bondage strap harness thing now that I'm here. I mean, I thought it was cool and edgy and everything when I put it on but this party is all older people except for Lu and me and Craig and Harry.\n\nNow I wish I hadn't let Lulu persuade me to wear it, but when Andrew looks at me the way he has been, I go all shivery inside. It's a strange feeling, but it's not one that I dislike. It's actually rather exciting. Just, I don't want anyone else looking at me like that. Maybe Craig, but that's all.\n\nThe bar is busy but as soon as he sees me, Harry ignores everyone else to ask me what I want.\n\n\"Armagnac, the nineteen fifty two Samalens,\" I tell him. \"It's for your Dad.\"\n\n\"Thought so.\" Harry grins as he reaches under the bar. He looks like a much younger version of his Dad, but somehow, Harry never has the effect on me that his Dad has. That's kind of puzzling, coz Harry is much more the sort of guy I should like looking at me. He's a couple of years older than me and Lulu. I'm still puzzling over that when he passes me a half full tumbler. \n\n\"Don't drop it, Regan,\" he grins. Harry's always grinning. \"That stuff's pure gold.\"\n\n\"Thanks,\" I say, but he's already on to the next order. I lift the glass, sniff it. It's strong. It smells of roasted nuts, overlaid with traces of mint, grapes, walnuts and honey. Rich and strong and somehow sweet. Not the kind of thing I like to drink at all but it's an interesting scent. I turn away from the bar, carefully holding the glass, looking for Andrew. I find him on the other side of the rec room, talking to another older guy.\n\nHe sees me as soon as I walk up to him. \"Here you are, Sir,\" I say, doing my best waitress impersonation, carefully offering him the glass. I haven't spilled a drop.\n\n\"Excuse me, Andrew,\" his friend says, giving me a smile. Was that an appreciative smile? He's looking at my top too. My cheeks burn. \"Brad's over there, I gotta ask him something.\"\n\nWe're alone together. Well, we're not really. We're in the middle of a party but it feels like we're alone, eyes only for each other. The party fades into the background, ignored.\n\n\"Thank you, Regan,\" he says, taking the glass from me. My cape is open. I don't close it. I don't walk away. I don't say anything. I stand there. Andrew looks at me. It's almost as if he's studying me. His look is wistful as he raises the Armagnac to his lips. He sips slowly, savoring the taste, rolling it in his mouth. His eyes seem to be savoring me while his taste buds savor the Armagnac. I know I'm being silly, imagining things. He's just enjoying his drink but its fun to fantasize just a little.\n\n\"Is it nice, Sir?\" I ask, doing the mock waitress thing again. It's fun. \n\n\"It's very very good, Regan,\" he says. \"Would you like to try it?\"\n\n\"Okay,\" I say, a little doubtful. I don't drink much. When I do it's either white wine or a small vodka, lime and soda. Very small.\n\nHe smiles. \"You should say 'Yes, please, Sir,' you know.\" As if I'm a little girl being corrected. Or a waitress. That's funny.\n\n\"Yes, please, Sir,\" I say, very meekly. \"Just a little taste.\" Oh god, he's looking at me that way again, looking down at my nipples. I can feel them swelling. They swell and they ache the way they do when Craig kisses them sometimes. They ache just from Andrew's look and he's looking, watching them engorge. Watching them as they swell and harden and push my top out. I'm blushing. My hand jerks, I'm going to cover myself with my cape. This is too embarrassing, but I'm also wondering if he likes the view. He's definitely looking.\n\nAndrew's hand takes my wrist, very gently. He lifts my hand from my cape, places his glass in my fingers. His eyes meet mine. He smiles. \"Try it,\" he says, \"just a tiny sip.\"\n\nI smile back. \"Yes, Sir.\" I raise the glass to my lips. Inhale that aroma. Andrew watches me, he smiles. I sip. A tiny sip, barely wetting my lips. It's strong, fiery even. Rich and sweet in my mouth, a hint of chocolate, traces of caramel, nuts, some kind of wood. It flows over my tongue, bringing a wave of opulent sweetness. It's like liquid fire, glowing as I swallow, liquid heat flowing down my throat.\n\n\"Whooooo-hoooo,\" I say, passing him back the glass. Probably not the most elegant of comments I could make, but it's more or less how I feel.\n\n\"Like it?\" he asks me.\n\nI lick my lips. \"It wasn't what I expected,\" I say. Then I grin. \"Sir.\"\n\nHe grins right back at me. \"Very good, Miss Wong.\"\n\nI giggle. \"I kind of liked it but I don't think I could drink very much of it.\" No way. I'd be on the floor. \"Sir,\" I add. He seems to like it when I say that. He finds it amusing. He smiles again. I like that too. Actually, I like calling him Sir. It makes me feel .... Like I'm being very respectful and good and obedient, and I like that. With Andrew. Not with anyone else.\n\nAndrew laughs. He dips a fingertip into his glass, wets it, reaches out, traces Armagnac across my lips with his fingertip. \n\nI stand still, eyes half closed, the aroma of the drink strong as he wets my lips. I resist the urge to move or to lick my lips. Instead, I do something even I don't expect. I reach up and take his finger, hold it, slide my lips down over his fingertip. My eyes are looking up at him as I ease my lips all the way down to the second knuckle. My tongue swirls on his finger, licking the Armagnac from his skin. It's the same way I suck on Craig' cock, except this is Andrew's finger and it's in my mouth and his finger is smaller than Craig's cock.\n\n\"Oh, that's very very good, Regan.\" He smiles as his finger emerges slowly from my mouth. I give the tip a last slow swirl of my tongue before releasing him. \"And I do like the way that costume displays your ...\" For a moment I'm sure he's going to say nipples. \"...assets.\" He grins at my suddenly flustered look. \"You go have some fun now.\" And he's gone. \n\nI watch him for a moment, disappointed. I was having fun. For some reason I'm smiling. My nipples are still aching and swollen. Craig materializes next to me. \n\n\"Dance, Regan?\" he asks. He's looking a little distracted.\n\n\"Sure,\" I reply as he takes my hand in his. I pull my cloak closed.\n\n<center>* * *</center>\n\nIt's nearly eleven and everyone has been having a great time. Drinks, food, music, dancing. Although it's Harry's parents music. Old stuff. It's not bad though. There's a lot of dancing going on. Even some making out here and there, which surprises me, but I go with the flow. I've been making out just a little with Craig now and then but there's no chance to go off and get a little more serious about it. \n\nI've even had a couple of drinks. One more than I usually drink. My second was champagne, which I've never drunk before but it's nice. Bollinger, Harry said it was. The bubbles tickle my nose and I'm a little giggly. My glass is empty. I think I've drunk enough.\n\nCraig is dancing with Lulu, Harry is back behind the bar, and I'm taking a break. Really, I've had enough of dancing and I'm thinking of bed. Party pooper, I know, but it's a weeknight and we have school tomorrow and I am a little tired. The silver-haired wolf materializes before me, smiling, a full glass of champagne in either hand. Before I realize what's happened, my empty glass has gone. My hand is clutching a full glass.\n\n\"Cheers. Happy Valentine's Day, Little Red Riding Hood,\" the wolf says. He drinks. \"Tired?\"",
        "\"Happy Valentine's Day, Mr. Wolf, Sir\" I smile, sipping. It is nice. \"Yes, a bit.\"\n\nThe wolf takes my hand. \"Me too. Come with me, I've made sure your roses are safe.\" His hand is large, strong. I like him holding mine.\n\nI follow without question. He leads me to an alcove at the rear of the large L-shaped rec room that takes up well over half of their huge basement. My parents' entire house could fit in Andrew's basement. That's another reason I like it when Craig and I come over. There's so much space in this house. It's almost like a second home to Lulu and I now.\n\nThe alcove is accessed through heavy French doors. He opens them, leads me in, closes them behind us. It's a lot quieter in here. The walls are lined with bookcases, a gas fireplace in one corner, large rugs on the floor. Two big leather couches. Big enough for me to sleep on easily. Big enough for Craig and I to make out on too. We have in the past. A large wooden desk. I know the room well. It's Andrew's library and home office. \n\nI've always liked his book collection. I've often come down here when he's not around to look at his books. Sometimes I lie on one of his leather couches and read while Craig and Harry do boring guy stuff. Sometimes Craig and I make out in here. My roses are safe and well cared for in a vase on his desk. I smile when I see them there.\n\n\"Thank you,\" I say before rather impetuously standing on my tip toes and kissing him. \"Sir,\" I add with another smile. I've always wanted to do that. Kiss him, I mean, not call him Sir although I like that too. I'm confused at the thought even as I think it. Have I? Do I?\n\nThe wolf blinks. He smiles that smile that always makes me blush, except this time I don't. This time I turn away from him and bury my face in those beautiful red roses, inhaling deeply. That scent is so gorgeous. He's behind me, his hands on my waist, leaning forward and he's breathing in too. Except his face his buried in my hair at the back of my neck.\n\n\"That smells beautiful,\" we both say, simultaneously.\n\nI giggle as we both straighten up. He grins. \"I am the wolf,\" he says, apologetically, \"I'm supposed to do wolfey things.\"\n\n\"Well, I'm Little Red Riding Hood,\" I say. I'm blushing again but my back's to him, he can't see. I can't resist saying it. \"The wolf is supposed to do wolfey things and chase Little Red Riding Hood isn't he?\" My heart is pounding. Why did I say that? But I think I know.\n\n\"Chase you? Why, you're in my den with me, I think I've caught you, Little Red Riding Hood.\"\n\nI smile. \"Little Red Riding Hood always gets caught by the wolf in the stories.\" My heart is beating faster. \n\n\"Yes, but sometimes she escapes and the wolf pays a terrible price.\"\n\n\"This Little Red Riding Hood hasn't escaped.\" A lot faster.\n\n\"I'm sure she could if she wanted too, the wolf isn't as fast as he used to be and he certainly doesn't want to pay a terrible price. He'd really prefer Little Red Riding Hood to enjoy being caught.\"\n\nI have this feeling it's not the story we're talking about now. My heart is pounding. I take a breath. Take another. Breathing in and out is difficult. It doesn't make any difference when I do breathe though. My heart is still pounding furiously and he's so close to me. \"I don't think this wolf has anything to worry about at all, even if he does do wolfey things with Little Red Riding Hood.\"\n\n\"I hope not.\" He chuckles, reaches past me, plucks a rose from the vase. Both hands are reaching around me now, one on either side of me, and he's very close to me as he breaks off most of the stem. He's brushing up against me. His breath is hot against the top of my head and I'm shivering, breathing a little faster. I'm not having any trouble breathing now. His proximity has me panting.\n\nOutside, in the rec room, the music switches to an old Meat Loaf song. I recognize it because my Dad plays Meat Loaf now and then. \"On a hot summer's night, would you offer you throat to the wolf with the red roses.\" Andrew sings along with the music except he changes the words slightly. \"On a cold winter's night,\" he sings. He hands me the single red rose he's plucked from the vase.\n\nI match the lyrics word for word as I take the rose from him, suddenly breathless. \"Will he offer me his mouth?\"\n\nWe half-sing along together, and I'm smiling until that line where he sings, \"On a cold winter's night, would you offer your throat to the wolf with the red roses?\" again. His hands turn me around to face him. I look up at him, lips parted, heart pounding as one of his hands cups one side of my face, my cheek.\n\n\"Yes,\" I breathe, one of my hands clutches at his shoulder, the other still holds that rose. I look up into his eyes.\n\nHe smiles. \"I bet you say that to all the boys!\" He kisses me.\n\nI'm startled. Eyes wide, gazing up into his as his mouth takes possession of mine. I kiss him back without even thinking. His lips on mine, his tongue suddenly deep in my mouth, teasing, tasting me, intertwining with my tongue. He knows how to kiss. It's as if my mouth is made for him. I drop the rose on the floor, both my arms curl around his neck without my even thinking about it. It's something I want to do. I'm standing on my tip-toes, his hands are crushing me to him, his mouth is dominating mine, controlling mine and I can feel how hard he is where he presses against me. Suddenly I know. He wants me. Me.\n\n\"Ohhhhh.\" I moan into his mouth. My breasts are crushed against his chest and I'm not wearing a bra and my top is very thin and my nipples press deliciously against him. Even more so than when Craig and I are making out. It's that good, it really is. His hands move me, pull me hard against him, lift me a little, my clitoris rubs against his length, shivery spasms of pleasure and excitement ripple through me and I'm jelly in his arms. I belong in his arms.\n\nHis eyes hold mine, he's breathing hard, nostrils flaring as he kisses me, crushing my lips and he's totally in control of what's happening and we both know it when his mouth finally lifts from mine. There's that look in his eye and I'm not weak at the knees. I'm jelly and without his hands supporting me, I'd melt to the floor.\n\nHis hands don't release me, they lift me to sit on his desk, the wood surface cool against my butt. He's still pressed against me but now my legs are either side of him where he stands between them, his hands on my hips, holding me tight, his face looking down at mine. Both my hands rest on his shoulders. I'm panting. I'm waiting. My mind is empty, I'm not thinking. I'm waiting for him to kiss me again. I'm wanting him to kiss me again.\n\nHe's looking down at me. \"The wolf wants to kiss you again, Little Red Riding Hood,\" he breathes.\n\nAdrenaline floods through me. What's happening to me? What is he doing to me? I have no idea but I'm overwhelmed by his body pressing against me, so close to me. \"You can do anything you want to me, Mr. Wolf, Sir,\" I whisper back, looking up at him. \n\nI don't know what makes me say that but I know it's true. I'm a little scared at my words. Andrew isn't Craig. Craig I can control, stop with a word, a gesture. Craig is a boy. He's two years older than me but still, he's a boy. Andrew isn't. He's a man. He's in his fifties, assured, self-confident, he has that aura about him. He's an alpha male, at his peak. \n\nI realize this in an instant, looking at him as his hard body presses against mine. I mean, I read romance novels, I've read all those Cosmo articles about alpha males. I've never met one before. I'd thought it was all made up. Fiction. Now I don't. Not anymore. Now, looking up at Andrew, I know what an alpha male really is. I'm so aware of him. His aura. His scent. The power and strength and self-assurance he radiates. His proximity. His interest in me. He's interested, I can feel that against me. He's hard. So hard. Hard the way a man is hard when he's really excited. \n\nI can feel him pressing against me. I can feel him now, a hard bulge against me where I'm so sensitive. I know he's hard for me and it's impossible to say just how overwhelming that knowledge is. I don't care that he's married or that he's as old as my Dad. For all I care he could have half a dozen wives and as many girlfriends. They don't matter because right now he's interested in me and I'm here, with him. Just him and me. I'm looking up at him and I hear my own words and I think maybe I've gone bug nuts or something. I shouldn't have said that. I know. I know but I did and I don't care. I meant it and I mean it now. \n\n\"Anything?\" he breathes, his voice low, husky. He moves even closer to me. His hardness presses blatantly against me where I'm so vulnerable and so unbearably sensitive. With my legs either side of his, I'm open to him and my short little skirt is flipped up. Only my little red lace panties and his trousers are between us as his hardness presses against me. I realize how wet I am as that rigid bulge forcefully pushes my lace panties inwards between labia that are swollen and slippery and acutely sensitive. He's pressing himself hard against me. It's not subtle. He's not hinting. He's displaying his interest in me.\n\n\"Anything, Regan?\" he repeats, his hands holding my hips as he grinds against me. It's blatantly obvious what he's thinking of. He's not being subtle. But then, wolves aren't, are they? They're hunters. They're predators. If you're being hunted and you're not a predator, you're only chance of escape is to run. To flee. But I didn't flee did I? Little Red Riding Hood walked willingly into the Wolf's den.\n\nI'm suddenly aware that this isn't a fairy story and maybe I'm the prey being hunted here and it's far too late for me to flee. I shudder with helpless excitement. If I'm the prey, I'm already well and truly caught. \"Anything,\" I whisper. I know what I've just said means. I can't stop myself saying it. It's true. \"Anything you want.\"\n\nOne of his hands leaves my waist, unfastens the clasp that holds that cloak around my neck, brushes it back so that it falls from me to pool on the desk behind me.\n\n\"Did I mention how much I like your costume, Regan Wong,\" he says, and his hand is running over me. Running over those leather straps and buckles and my back and shoulder and my arm. \n\n\"Not really,\" I say, looking up at him.\n\n\"Not really, Sir,\" he corrects me immediately. Why does he like it so much when I call him Sir?\n\nIt doesn't matter. It's what he wants me to say. \"No really, Sir,\" I whisper. What's he doing to me? Why am I feeling like this? It's so weird but I'm so excited.\n\n\"It makes me want to touch you,\" he says. \"Do you mind if I do?\"\n\n\"Anything, Sir,\" I whisper, feeling his hand roaming over me. Liking it. With Craig, I don't mind, it's okay when he touches me. With Andrew, it leaves me breathless, wanting more. I'm waiting for him to kiss me again. I want him to kiss me again. I'm feeling weird, not at all like I usually do with Craig. Craig is always so tentative and clumsy. Rough. Andrew is decisive, confident. He caresses where Craig fumbles. Takes where Craig asks. He's telling me what he wants and he's taking what he wants from me and I like the way he does it. It's exciting to feel his hand running over me with such assurance. I'm limp, almost unable to move. I wonder if the real Red Riding Hood felt like this when the Wolf came for her.\n\n\"I love your costume, Regan,\" he says. His hand is cupping one of my breasts, his thumb strumming my rubbery hard nipple. I'm a violin being played, that's what I feel like. The music is inside me though, silent. For all that its silent, it reverberates through my body. \"But these straps are in the way.\"\n\nSaying nothing, I reach behind my back. I know where it unfastens, it's easy when you know. And I have practiced. Flick, flick and flick. It comes loose, I shrug it off, down my arms, drop it on his desk. Without it on, I feel free, unfettered, released from a cage. It's a release that Andrew immediately takes full advantage of. His fingers unfasten three of the buttons down the front of my top. He's fast. My top's half undone before I can do more than blink and look down. His hand slides with casual ease inside the opening he's made. He cups one of my breasts, his hand hot on my skin. I shiver at his touch. \n\nMy nipple is aching, swollen, so hard now that it hurts. His thumb runs across it, sending little ripples and shivers of pleasure through me. Outside, Paradise by the Dashboard light continues to pound out. In this room where there's only the two of us, and it's my heart that pounds as Andrew's hand makes free of my breast. He's exploring, touching me, his fingers moving on me. It's not like I haven't had a hand on my boobs before. Craig's hand has been there any number of times. But no-one else's. Not until now. Andrew's hand somehow belongs on me. It's almost as if my breast is made for his hand.\n\n\"Beautiful,\" he says, his hand stretching my top open so he can look down at my nipple. I look down with him. I see my nipple, swollen, large, a dark reddish-brown surrounded by a wide areola. My breast is small in his hand. \"You don't need a bra at all.\"\n\n\"No,\" I say. I don't, not really. Small and firm, that's me. Lulu as well. We could almost be twins. We share clothes all the time. I lift one hand from his shoulder, finish unfastening my top so that it comes completely open. Both my breasts are completely exposed to him. Almost, I'm offering them to him. No, there's no almost. I am offering my breasts to him. I know that. He's looking at me. He knows that too. I see the knowledge in his eyes. \n\nHe smiles. \"I want to bite you, Little Red Riding Hood,\" he breathes.\n\nI gasp, my heart beats harder. I'm panting. I'm shivering. Almost, I moan out loud. His look says that he knows what he's doing to me. That he knows, and he says that to me knowing what it does to me, that excites me even more. How does he know? It doesn't matter, I'm not stopping offering myself to him. Kiss me? Bite me? He can do whatever he wants. I'd like it if he bit me, I'm sure. Not too hard though.\n\n\"If you want to,\" I gasp. Then, for no reason I can think of, I add \"Sir\" again. He does seem to like it when I call him \"Sir.\" I'll try and remember. \n\nHe shivers. He actually shivers at my words. The look on his face makes me want to shiver too but I'm already offering myself to him and there's no going back. He accepts my offer, bending his knees, lowering his head. I watch as his lips close on one nipple. The one he's been playing with.\n\n\"Ohhhhhh.\" My back arches a little as his lips close very gently around it. He sucks, his tongue circling, licking, lapping, his mouth opening to engulf my entire breast. I shiver against him, my other hand holding the back of his head now, pulling him to me as I push my breast into his mouth. His mouth suckles at my breast, the pleasure rippling through me to pool at my centre, a molten heat within me. \n\nCraig has done this to me in the past, since we got more serious. Well, since we officially became boyfriend and girlfriend. I've never understood that fascination guys have with a girl's boobs but now I don't care, it's just so good when his tongue toys with my nipple. So much pleasure from his mouth on me and I don't want his mouth to stop doing what it's doing to me. \n\nHis hand leaves my breast to the tender mercies of his mouth, slipping down under my skirt where I'm perched on the edge of the desk, my legs spread wide. His hand cups me though my little red lace panties where I'm so hot and wet. His fingers press against me, one finger pressing in against my slit, pushing my lace panties inwards. I know he can feel how wet I am. I know how wet I am.\n\n\"Ohhhh.\" I cry out with the excitement of that touch, feeling my labia separated by his finger pushing inwards against me. Craig's touched me there too, his finger has been inside me, his hand inside my panties but it's never been as exciting as the touch of Andrew's hand on me is now. Andrew knows what he's doing, he knows how to draw the pleasure out from within me and make me feel it and I am, I'm helplessly enthralled. In that moment, I'm his and he can take me right now if wants to. I'm sure he knows it.\n\nHis mouth lifts from my breast, he's kissing me again, his fingers teasing my sex, moving, pressing. My panties are soaked through. I know how wet I am. If I sit here much longer I'm going to leave a wet puddle on his desk. I'm moaning. I want to move against his hand but I can't. I can't move at all. I want to though.\n\n\"Would really you offer yourself to the wolf with the red roses, Regan?\" he breathes in my ear.\n\nThe atmosphere is electric, charged with anticipation. My heart races. His mouth takes possession of mine before I can even think of an answer. His lips crush mine. I moan. His tongue takes possession of me. There's no resistance from me. I've never been kissed like this and I can't get enough of it. When his mouth leaves mine, I'm gasping for breath.\n\n\"Would really you offer yourself to the wolf with the red roses, Regan?\" He breathes that question again. His eyes burn into mine and I know the answer now.\n\n\"Yes,\" I moan, feeling his fingers pressing, squeezing, touching. \"Yes, Sir.\" I want him to hold me tight. Then, \"I'm so wet.\" Why did I tell him that? He must know. He's touching me there. I need to tell him though. I need him to know how I feel but I don't know how to put it in words. There are no words, not for what I'm feeling now.\n\n\"I know, Regan,\" he says, his nose brushing mine. \"You're very wet.\" His lips return to brush mine. \"Harry said you're sleeping over tonight, you and Lulu?\"\n\n\"Yes,\" I moan. I can say yes to Andrew. Easily. Very easily. Willingly.\n\n\"Sleep in the bed nearest the door,\" he says.\n\n\"Why?\" I moan, just before he kisses me again. \n\nHis mouth lifts from mine, his fingers play a symphony on my sex. Exquisite sensations. I shiver, tremble. One of my hands moves to rest on his as he touches me. I want to moan out loud the way I do with Craig but I'm too shy. I want his finger inside me but I'm too shy to ask him. He's smiling as I look up at him. He knows what he's doing to me. I'm sure he can read my mind.\n\n\"Why do you think, Regan,\" he breathes at last, his eyes holding mine, his fingers holding me enthralled. \n\nI am enthralled. Captured. Bespelled. In this moment, I'm his thrall, his slave, his captive. My heart jumps. A black hole flowers within me. I know. I know what he wants. He wants me. Wet heat throbs at the juncture of my thighs. I want him. I know I want to give myself to him. Surrender to him.\n\nHe smiles, a slow smile, a smile that thrills through me. \"You know what I want, Regan.\"\n\n\"Yes.\" That one whispered word seems to come from someone else's voice but I know it's mine.\n\n\"Undo my trousers for me.\"\n\n\"Huh?\" I gasp, shocked. Heart thumping. Excited. Scared. What if someone walks in? \n\nHe seems to know what I'm thinking. \"I locked the doors behind us,\" he adds. \"Nobody'll walk in.\"\n\nAfter a moment, I obey, heart pounding, fumbling at his zipper. I've done this with Craig. Held his cock in my hand, stroked him off. I've given Craig blowjobs as well. I'm nervous though. I've only ever done any of this with Craig. Never with anyone else. Never with a man like Andrew. As old as my Dad. Maybe older. My hands are shaking as I unzip him. He only told me undo his trousers. But once you've undone a man's trousers, what comes next? \n\nI don't need to ask. I don't need to be told. I'm eighteen, I'm not a baby and this is something I've done before. I'm confident now and besides, I'm curious. He's been pressed up hard against me, I've felt it. Now I want to see his cock. I want to hold him in my hand. I go ahead and slip my fingers in through the opening in his boxers without him saying a word. My heart almost stops when I touch him for the first time. Silky skin, heat, rigid hardness. I draw him out, clasp him in my fingers, look down at him. Saliva floods my mouth. I want to sink to my knees before him and take him in my mouth. ",
        "\"Good girl,\" he says as I examine him. \n\nHe's big, bigger than Craig. Thicker. Blue veins, a swollen head, his shaft is so thick I can't circle him with my thumb and fingers. Rigidly hard. Steely hard under my fingers and I know he's excited by this. I'm exciting him. I want to see his balls as well but they're hidden by his clothing. \n\nHe smiles with approval. He too is looking down at my hand where I clasp him in my fingers. \"That's why I want you to sleep in the bed nearest the door,\" he says. \"Little Red Riding Hood is going to get a visit from the Big Bad Wolf tonight if she leaves her bedroom door open.\"\n\n\"Won't you huff and puff and blow the door down if I don't leave it open?\" I whisper. I can't stop looking at his cock. It's so hot and hard, steel sheathed in silk in my hand. It's big too. Definitely he's bigger than Craig. Longer and thicker. I'm liquidly wet now and his fingers know it. I can hear little wet sounds where he's touching me through my panties and I'm so embarrassed. I can't stop what I'm doing though. I don't want him to stop what he's doing either. I want more. I want him to take more from me. I want him to take what he wants from me. Everything he wants. Everything I have to give.\n\n\"No, Regan,\" he smiles. \"Wrong story. You need to open the door and let me in, otherwise the wolf will be defeated and forced to retreat. This wolf only takes what's offered to him willingly.\"\n\nMy hand is moving on him now, slowly stroking him. He's so hard under my fingers and I'm melting. We're both looking at my hand as it moves on him. The head of his cock is almost brushing the back of his hand where he's touching me with his fingers. He kisses my forehead. I look up, my eyes meet his.\n\n\"Offered?\" I whisper. My thoughts are a mess, incoherent. \n\n\"Are you offering yourself to the wolf with the red roses, Regan?\" he breathes. \"Because the wolf wants you. The wolf wants you very much, Regan Wong. But only if you say yes to the wolf.\" His finger pushes against my slit, pushes the lace of my panties inwards between my labia. I'm so sensitive and that lace is rough. Abrasive. For a moment, I want to cry out but I don't. Instead, a wordless whimper escapes me.\n\n\"Are you offering yourself to the wolf with the red roses?\" He's repeating his question.\n\n\"Yes,\" I gasp, shuddering as his fingertip pushes inwards, my eyes looking up into his. I can barely form the word, my mouth isn't mine. \"Yes, I am, Mr. Wolf, Sir.\"\n\n\"Do you say that to all the boys?\" He grins. It's a joke? No, it's the words from the song. Somebody has put it on repeat. Jesus, I can't think straight. My toes are curling. I'm dying here. Oh Jesus Jesus Jesus don't stop touching me. Don't stop. Touch me properly. Put your finger inside me.\n\n\"No,\" I gasp. \"I don't, not to anyone. Only to you ... only to you ... Sir.\" His fingers are driving me crazy. Craig's never done this to me, never got me so mindlessly excited like this. I'm just about squirming on his desk. I want to beg him. Just, I don't know what to beg for. No, I do know, but I've never done this before and I'm shy but I want him. I want him so much now. I don't know how to ask him.\n\n\"Not Craig?\" He's smiling, watching me. He's enjoying my excitement, he knows what he's doing to me and he's seeing my confusion and that I'm flustered and he's enjoying it and I want him to. I want him to enjoy me. I want him to see my excitement and my embarrassment and how much I want what he's doing to me. \n\n\"No,\" I gasp. \"Yes ... Craig ... no, I don't know... I've never...\" I'm totally confused, my brain's not working. It's disconnected from my mouth. His fingers make me want to squeal. I want to lie back on the desk and just feel him fingering me there. Anywhere. Whatever he wants. My hand strokes him and strokes him, his hard shaft feels so good and I want to stroke him until he shoots off in my hand. \n\nBetter yet, I want to sink to my knees on the floor and take his cock in my mouth and taste him as he shoots off in my mouth. For the first time in my life I know. I want this. I want his cock. I want Andrew to take me and make me his. I want to surrender myself to him. And I'm not thinking of only a blowjob now. Neither is he, but then, I don't think he was thinking of blowjobs to start with. That was just me.\n\n\"Craig's never made love to you has he, Regan? Is that what you want to tell me?\"\n\n\"No ...no, Sir, he hasn't ... yes ...\" God, my mouth. I'm panting. Looking at his cock, I want him in my mouth. I want to taste him, I want him to shoot off in my mouth like Craig does. Fill my mouth with his cum so that I have to swallow and swallow. I want to taste him. No, I don't, I want to spread my legs wide, I want open myself for him. I want him to take me as a woman is taken. \"Please ... please Andrew....\"\n\n\"I want you, Regan.\" He looks so serious now, so intent. \"I want to make love to you tonight.\"\n\nMy heart is pounding so hard I think I'm going to faint. I swallow. \"I'll leave the door open ... for you ... But Lulu ....\"\n\nHe smiles. \"Lulu won't wake up for anything once she's asleep,\" he says.\n\n\"Oh,\" I say. He's right. \n\n\"We better stop now,\" he says, \"or the Wolf is going to take Little Red Riding Hood on his desk.\" His hand leaves me. I keep stroking him. I don't want to stop. I tug at him, pulling him closer, pressing the swollen purple head of him against my red lace panties. Against me. It feels so good and if my panties weren't there and he pushed, he'd be inside me. I know that. He knows that too and I can see from the expression on his face that for a moment, he's tempted. \n\n\"Please,\" I gasp. \"You can if you want.\"\n\nHis hand takes mine, removes my fingers. He steps back, tucks himself away. He's so big and so hard and it takes him a little effort. He grins at me. \"You can have it all later, Regan. If you want it. Do you want it? Because I want you, Regan Wong, I want you very much.\"\n\nMy heart pounds at the look he gives me. \"Yes,\" I say, very faintly. I can't move. I'm limp. \"Yes, Sir.\"\n\n\"Let's get back out there,\" he says, \"Craig will be looking for you soon.\"\n\n\"Yes,\" I say again, finally standing, my legs quivery. I almost fall. It's so hard to stand when your legs feel like they're jelly and your knees aren't yours anymore. I just want to lie down. I don't want to move. I don't want to think. My top is hanging open. I don't care if Craig is looking for me either. I'd rather stay here with Andrew.\n\n\"Wait,\" he says. His hands are on my breasts, both of them. I close my eyes and wait and then his arms are around me and he's kissing me again and I'm kissing him back and his hand wraps itself in my long dirty blonde hair and tilts my head back, forcing me to look up at him.\n\n\"I want to make you mine tonight, Regan,\" he breathes, looking down into my eyes. I'm trembling, feeling him pressing against me. Hard. He's so big and hard. \"I want you to know what I want to do to you. I want you to say yes to me. Understand me, Regan?\" \n\nMy body flames. If he wasn't holding me, I'd sink to the floor. \"Yes,\" I whisper.\n\nHis free hand is on my breast again, cupping my breast. \"Regan, I'd like to share something with you.\" His voice flows over me like molten chocolate, thick and liquid, clinging to my skin. I'm tingling everywhere, just at his words, at the sound of his voice.\n\n\"Yes,\" I manage to whisper. I want him to bite me.\n\n\"I like telling you what to do,\" he says. \"I like it even more when you obey me, Regan. When you call me Sir. I like that a lot. You did say you'd give me anything, before. If I tell you what to do, will you obey me?\"\n\nThat wasn't what I'd meant, but, okay, yes, I'll obey him. I'll do what he wants me to do, I think. I'm standing here in his arms, my top wide open, my boob still wet with his saliva. His hand is on my boob, making free of me. His other hand has my head pinned, looking up at him. I'm scared, but I'm excited.\n\n\"Yes,\" I whisper again. I'll obey him. \"Yes, Sir, I'll obey you.\" It feels so good to say that.\n\nHe smiles. \"Use this hand...\" He takes my right hand in his. \"...And pinch your nipple as hard as you can.\"\n\nHuh? I'm confused. \"Why?\" His hand is still wrapped in my hair, holding my head so that I have to look up at him. I like the way he's holding me. I like his other hand on my boob.\n\n\"Because I want you too, Regan, that's why.\" He smiles. \"Obedience, that's what I want from you, Regan.\" He kisses me gently but his eyes are blazing. When his mouth lifts from mine, he's breathing hard, like a stallion. That look, the way be breathes, his hands on me. I shiver, tightening inside with a delicious heat that threatens to buckle my knees all over again. \n\n\"Do it for me, Regan,\" he growls, his voice husky, low. \"Obey me.\"\n\nMy breathe catches. Somehow I think he's testing me and I want to pass. My right hand moves to my breast, I cup myself, feeling my breast, small and very firm, my nipple so hard and swollen. Not its usual soft puffy swelling but an elongated rubbery hardness that's far larger than normal. I know how sensitive my nipples are, but now, with his fingers toying with the other, my own fingers bring a little thrill to me. I grip my nipple loosely between my thumb and foreknuckle. \n\n\"Pinch my nipple?\" My voice is thin, reedy, not my normal voice at all. \"Sir,\" I add.\n\n\"Pinch your nipple as hard as you can for as long as you can,\" Andrew says. \"I want to watch you do that for me.\"\n\nI look into his eyes, I take a breath. Squeeze. Squeeze harder. Keep squeezing. My nipples are sensitive and it hurts. I really am pinching myself hard. \"Owww.\" I gasp, a warm flush spreading across my skin when I finally release myself. That hurt.\n\n\"Good girl,\" he says.\n\n\"Do it to me,\" I whisper, looking up at him. I'm scared. This is weird. Exciting, but weird. Why am I asking him? I have no idea. \n\n\"Do what?\" he asks.\n\n\"Pinch my nipple, Sir,\" I gasp. \"I want you to.\" My insides tighten as I speak, a rush of heat inside me, at my center. I'm hypnotized by his eyes.\n\n\"Do you have any idea what I want to do to you, Regan Wong,\" he whispers, his hand moving slowly on my breast. \n\n\"No, Sir,\" I gasp, \"not really.\" I don't have any idea at all, not really, except that he wants to come to my bed tonight, which almost certainly means he wants to make love to me. I'll let him. I'll let him to anything he wants to me. I'll do anything he wants. I think. I mean, it's not like I've made love with anyone before. I try and put that into words. \"I've never....\" It's so hard. I force myself. \"I've never had sex before, Sir.\" I swallow. Blush a fiery red. He's forcing me to look up into his eyes when I want to turn my head away. I'm embarrassed, shy. But I've told him.\n\n\"Never?\" he breathes. \"Not even with Craig?\"\n\nI want to shake my head but I can't move. \"Never,\" I whisper. \"Not with anyone.\" In a moment of candor, I add, \"I'm good at blowjobs though.\"\n\n\"Oh, are you?\" Andrew grins. \"Well, you can show me later. Do you still want me to pinch your nipple?\"\n\n\"Ohhhhh.\" His question, it hits me physically. \"Yes,\" I moan. My face burns. \"Please, Sir. If you'd like to.\" Somehow I think he would.\n\nHe says nothing. His thumb makes gentle sweeps up the curved underside of my breast, over my nipple, lightly back down again and he's smiling as he takes my swollen nipple between his thumb and his finger and squeezes. Hard. Much harder than I squeezed my own nipple. \n\n\"Owwww ...oowww..owwwww.\" Both my hands are on his shoulders, I'm clutching at him, arching my back, standing on my tiptoes and it hurts and he's squeezing harder, he's twisting my nipple, tugging at it and my insides are rippling, tightening and he's watching me, his eyes watching my face and I know he's enjoying this and his squeezing hurts me. It hurts me so that I feel tears of pain trickle from my eyes and I'm squealing but I don't ask him to stop because I can see that he's enjoying this and I love it that he is and somehow I'm enjoying it even though it hurts like fuck.\n\n\"Owww,\" I sob. \"Owwww.... Owwwww.\" He's twisting my nipple and squeezing just as hard and his other hand releases my hair and slips between our bodies, slides inside my panties. I'm wet, so wet and my nipple hurts and my sex seems to somehow open and suck his finger inside me so that I'm clasping his finger tightly with my channel walls, his finger is up inside me, my hips are jerking as he cups me and holds me and squeezes and tugs and twists my nipple.\n\n\"Oowwooohhhhhh .... Ohhhhhhh.\" I'm sobbing, I'm moaning, I've fallen back against his desk. I'm held up by the desk and his hand between my thighs, I'm impaled on his finger, feeling it move inside me, exploring me and I'm so wet and my clitoris is so swollen and sensitive and he knows how to touch me there and he is, he's touching me and my hips jerk wildly, uncontrollable and I'm sobbing and crying out. He twists my nipple hard again, squeezes. Sudden pain shoots through me, somehow meeting and joining the pleasure at the juncture of my thighs, building in an instant into explosive orgasm that crashes through me like one of those waves that comes from nowhere and dumps you unexpectedly on the beach with all the wind knocked out of you.\n\nI've never felt anything so good as his hand holds me, as my sex dances on his finger in an explosion of pleasure that is longer and harder than any orgasm my own fingers have ever brought me to. My pleasure washes through me in great waves, a sun going nova within me and then, moaning, sobbing, I lean limply forward to rest my head against his shoulder.\n\nHis fingers release my nipple at last, his other finger eases out from inside me, his hand slides out from inside my panties and I'm drained, panting, glowing. His hand, the hand that was inside my panties, cups my cheek, and lifts my face up to look into his while his other hand caresses my breast gently, soothing the pain there. I can smell my own scent on his fingers. He kisses me.\n\n\"I'm going to fuck you tonight, Regan Wong,\" he breathes in my ear. \"Do you really want that?\"\n\n\"Yes, Sir, I do, Sir,\" I murmur. There's nothing inside me but a glowing acceptance of what he wants to do to me. Surrender. Utter and complete surrender and it feels so right. Not that I think there was any resistance to start with. \"I'll leave the door open for you.\"\n\n\"Good,\" he says. He kisses me again. Picks up the strappy bondage top thing. I have no idea what it's called. \"Wear this harness for me,\" he says. \"Don't wear anything but this in bed tonight, Regan. I want my little Valentine naked and ready for me. In fact, I want you to wear it now, under your top this time.\"\n\nHis hands push my top down my arms, peel it off me. I'm half-sitting on his desk, naked from the waist up. I've been naked from the waist up with Craig but with Andrew it's something I really want and he's putting that strappy thing on me with his own hands. The straps criss-cross me but they leave my breasts completely exposed. More than exposed. They frame and accentuate my breasts in a triangle made up of strips of black leather with small silver buckles and rings. My skin burns. Embarrassment? Shame? Excitement? My nipples are still so swollen and large, so hard. Aching. \n\nAndrew fastens the back. Looks down at me. \"Oh fuck, Regan, yes,\" he almost groans.\n\nI reach out and touch him, looking up at him as my fingers clasp him. Inside his trousers, he's rock hard. I brush his length with my fingers. I want to hold him in my hand again. He looks down at my touch. His hands move to cup my breasts again. Both of them. I lean forward, pushing them against his hands\n\n\"Tonight, Regan Wong,\" he breathes. \"Wait until later tonight when I come to you.\" He picks up my red top, helps me put it on. Buttons it for me. Fastens my cape around my neck with tender fingers. Just before he opens the French doors for us to slip out and back into the party, he whispers in my ear. \"Remember what you're going to wear for me tonight, Regan. Nothing else. Just what I told you. That's all.\"\n\nI don't say anything. I want to moan out loud. If he turns me round and pushes me onto his desk or onto the floor and takes me right at this moment, I know I'll let him. He doesn't do anything. I'm not sure if I'm disappointed or not. I do know I can't wait for later tonight. I know what he wants now. Me. And I know what I'm going to give him. \n\nMy surrender.\n\nI'm going to offer more than my throat to the Wolf with the Red Roses. I'm going to be almost naked and ready for him. I'm going to offer him everything. When he comes to me, he'll know that he can do what he wants to me. He'll know that he can take me. Because I'll be waiting for him and I'll be wearing exactly what he wants me to wear. Nothing else.\n\nI'm not even thinking of Craig when I walk back out into the party.\n\nActually, I'm not even thinking.\n\nWe haven't been gone long. Only fifteen minutes although it seems like a lot longer. Nobody has missed us. I can't see Craig or Lulu. When I go to the bar, Harry shrugs. Neither has he. He pours me a drink. My fourth drink of the night. Coke with a dash of vodka and lots of ice. That's what I usually drink at parties. Not that I drink much. I'm drinking way more tonight than I usually do. I perch at the bar and sip on it. \n\nI'm trying to think and not succeeding very well. My body is on fire, my skin tingles and burns, my nipples ache and they're so swollen. I can feel the leather straps tight against my skin, under my top and my nipples are so hard. Those leather straps constantly remind me of what's going to happen to me later tonight. I keep thinking of Andrew's cock in my hand and whenever I do, my breathe comes faster, my heart rate jumps. I want to go to bed right this moment and wait for him. I want to hold his cock in my hand again and stroke him. Right now.\n\nI'll need to say goodnight to Craig first though or he'll come looking for me. Maybe I should feel bad about what I'm going to do tonight with Andrew, but I don't. Craig is my boyfriend but it's not like I'm in love with him. He's not in love with me either. We like each other, but it was Lulu dating Harry that brought us together. Craig is Harry's best friend, Lulu is mine. When they started dating it was kind of natural that Craig and I meet. Dating just followed. \n\nThe two of them like dating two Chinese girls. Lulu and I are as close to looking like twins as makes no difference. Harry and Craig are very similar looking too. It's been fun, although neither Lulu's parents nor mine really approve of us dating gweilo guys. We both knew that right from the start but we did it anyway. In all honesty I just went along with Lulu. She's the one that had a huge crush on Harry and she'd pushed me into dating Harry's friend so we could keep going out together.\n\n<center>* * *</center>\n\n\"Okay, okay, you date this gweilo if you want to, Regan,\" my Mom had said to me when I'd told her I was going on a date with Craig, not very happily. \"You're eighteen now, you're a big girl. But no hanky panky, okay. These gweilo boys, they want sex all the time. They did when I was your age, I tell you. You just say no. First base, okay. Second base, okay maybe. He want third base, you tell him referee says he's out, okay. Date him now, have some fun, find a good Chinese boy when you go to College next year, Regan. One that's going to graduate soon, good qualifications, something professional. By the time you finish College, you should have a good degree and a ring on your finger. Then you can have fun, lots of hanky panky. No need to tell your fianc\u00e9e everything. Once you've got the ring along with hooking a nice Chinese boy, hanky panky's fine.\" \n\nMy Mom is like that. Practical. That's how she'd landed Dad. She'd told me often enough. When I was younger, it sounded like a plan. Now? Not so much, although I do wonder how much hanky panky my Mom got up to. And if she ever dated a gweilo. I'm not asking though. I don't really want to know. Lulu's Mom said more or less the same thing to Lulu. We compared notes. Of course we both listened. Of course I'd thought Mom was right. Chinese Mom's are always right. Lulu wasn't so sure. She was already in love with Harry and her older sister had married a gweilo. ",
        "\"One gweilo in the family, that's enough, Lulu, don't get serious about this boy,\" her Mom had said when she'd started dating Harry. Lulu wasn't in agreement on that one. She knew Harry was in love with her. I wasn't so sure that she was right. My personal opinion was that Harry liked Lulu coz she was hot and she was Chinese and he had a thing for Asian girls but Lulu didn't want to hear that, so I didn't say anything. And hey, Craig made a nice boyfriend and it wasn't like I had a crush on anyone else. So it's not like I'm complaining. I'm not. Or, well, I haven't been.\n\nThat first base, second base, third base thing? All that flew out the window for Lulu and I as soon as we started dating Harry and Craig. For me, it was in fact on my very first date with Craig, two weeks after my eighteenth birthday. Watching a movie. At his parents' house. He lived at home, but his parents were out or away or something. It didn't matter. We had the house to ourselves and Craig took advantage of that right from the get go. We settled down in the rec room. He pulled up some chick flicks for us to watch. Chick flicks? Yeah! He scored points with me right away. He went on to score more than points.\n\nHis arm slipped around me and I was fine with that. I was fine when nestling against him morphed into sitting on his lap. He had an erection. I was okay with that, guys got erections when they kissed me. Fact of life and I didn't mind. It was exciting for me feeling it and knowing I'd done that to him. I liked it. I was even finer when he started kissing me. It's not like I hadn't been kissed before. It's not like I hadn't dated before. It's not like I hadn't fended guys off before. I had.\n\nJust, well-behaved Chinese guys who knew when to back off and give it a rest. Not gweilo guys like Craig. Before I knew it, we were deep in a game of tonsil hockey and halfway down my throat seemed to be where the goal was. Craig was scoring non-stop. I made a hopeless goal keeper. Actually, I wasn't even trying to put up a defense. I can honestly say that no guy up until then had ever kissed me like that. I was panting like a bitch in heat. Thirty minutes after that chick flick had started to play, it was forgotten completely. I don't think I even saw the name of the movie. My specially chosen top was completely unbuttoned and hanging loose. I was being kissed by Craig while one of his hands fumbled with my bra and I was so glad I'd worn a pretty one.\n\nOkay, he was good at kissing, but he still hadn't mastered the art of the instant unhook. Second base was somewhere I hadn't been too before and I know what you're thinking. Eighteen and never had her boobs mauled by some teenage guy. Hey, I'm Chinese. My Mom and Dad were real strict and I was a good girl. Also, I'd only ever dated good Chinese boys who knew the rules and whose parents invariably knew mine. Craig was a gweilo and he didn't follow Chinese boy rules. Not the Chinese boys that I knew anyhow. His parents didn't know my parents either.\n\nCraig's rules were different. Craig was out for a home run and he was good. He was planning for second base the moment he got to first. I really really wanted Craig to get to second base. Mom had said second base was okay. Maybe it was a bit fast to get there an hour into our first date, but that was okay. Mom hadn't said anything about timing, just that it was okay. Chinese Mom's, they know best and I was more than willing to listen to my Mom's advice. I reached behind my back with one hand and flicked the strap of my little black lace bra undone.\n\n\"Ohhhhhhh.\" I hadn't been able to stop myself from moaning when Craig's hand cupped one boob. The first time a guy's hands had touched my boobs. I liked it. Not just a lot. I liked it tremendously.\n\n\"We shouldn't.\" But we did. I hadn't stopped Craig from peeling my top and my bra off me completely before moving me to lie on my back on the couch. I hadn't stopped Craig when his mouth latched on to one boob while his hand continued on its mission of exploration and tantalization. My boobs were his and he did with them as he wanted. Me? I enjoyed him doing what he wanted to them. What Craig wanted seemed to involve a lot of licking and sucking and lapping and wonderfully swollen and aching nipples and fingers that found those nipples irresistible and played with them delightfully.\n\nSecond base? I wanted Craig to stay on second base for as long as he liked. All night if he wanted to. I'd never imagined a guy sucking and licking and kissing my nipples could be so exciting. Well, it was. I lay there, making little noises, one hand stroking his head as he suckled on my boobs, as his hands ran over me everywhere above the waist. Not just my boobs now. My stomach, my sides, my shoulders, my arms, he was touching me everywhere and now and then his mouth would leave my boobs and we'd play tonsil hockey again. When his hands started running over my hips and my legs, I was glad I'd worn jeans. Third base? Nope. Not going there. Off limits.\n\nI could feel how hard he was. Pressed against my hip, I could feel that hard bulge that I knew was his erection. I could feel it even better when he lay on top of me kissing me, his now naked chest hot against my equally naked skin, crushing my boobs, that bulge pressed against me where I was so amazingly sensitive. So startlingly hot and wet. He moved, against me, little rubbing movements as he kissed me.\n\n\"Oooohhhhhh ....oohhhhhhh.\" I was moaning into his mouth. It felt so good. But third base was out. Out out out. Mom had said so, and Chinese Mom's know best. No third base. No way.\n\nFifteen minutes later. \"Oh god ... Craig ... we shouldn't .... We shouldn't ...oh god ...\" then \"Let me\" as I unzipped my jeans and pushed then halfway to my knees.\n\n\"OOOHHHHH,\" as his hand slipped inside my panties five minutes after that and just like that third base was in serious play. I was looking up at him and he was doing things to me. Amazing things. Exciting things. Five minutes after that my jeans were completely off and on the floor somewhere and his hand was once again inside my pretty little black panties. I'd never expected him to see them but they came as a set with the bra and now I was glad I'd worn them. \n\nExcept the way Craig was moving, I wouldn't be wearing them for much longer. He'd gotten everything else off me and now he had one finger inside me, busily exploring. I was panting like a bitch in heat and I knew if I didn't do something fast, my panties would be going the where the rest of my clothes already were and someone was going to not just get to third base, where he was already firmly established, someone was definitely going to score a home run because I was fast losing any ability to say no to anything. \n\nTwo frantically squirming, squealing and moaning minutes later I was on my knees on the floor, kneeling in front of him as he sat back on the couch, still wearing my panties, holding his cock in one hand and giving him a desperate and very inexpert blowjob. He came in my mouth, coating my tonsils with his cum. I swallowed with wide-eyed excitement. I wasn't sure about the taste, but okay, it wasn't bad and it was exciting when he shot off in my mouth and, well, no home run. \n\nThe noises he made as I blew him, wow! Not only that, there was that sense of accomplishment, of success. I'd done it. I'd not only satisfied Craig, I'd successfully kept my panties on, preserved my virginity and I'd done something I'd heard the gweipoh girls talking about but had never expected to do. At least, not until I had that ring on my finger. \n\nThat was just a few weeks ago, and it pretty much set the precedent for every date we'd been on since them. And we dated a lot. I actually enjoyed blowjobs right from that first one, unexpected as it as. Craig gave me lots of opportunities and I got better at them fast. Hey, I'm Chinese, I'm a fast learner, and my parents pushed me hard to overachieve. There was always that parental drive for me to be good at everything I did. So of course I studied. I wanted to be really good at blowjobs, just like I was good at everything else I did. I wanted to be the best. I watched video clips online, I picked up some ideas. I read everything I could find. I even jumped on a couple of chat boards and asked. Under a pseudonym of course. I was amazed at some of the answers. My educational horizons were certainly expanded.\n\nBut honestly, those online chat boards were more useful than any other resource. I tried out whatever I picked up right away, on Craig, and I found he enjoyed my little experiments. Hands-on experience is definitely valuable and I filed that one away. I was going to apply for the co-op program at College, for sure. Hands-on was good, in this context, mouth-on experience was even better. \n\nLots of little things like licking him very slowly before I started using my mouth on him. Holding his balls and licking them, making lots of little noises while I sucked on him. Coating his cock with saliva and jerking him off at the same time as I used my mouth on him. How to use my hand on him with all those little variations. How to take as much of him as possible into my mouth. Having him cum on my boobs. \n\nLulu and I compared notes all the way. Conflicted or not about sex, Lu's first date with Harry had gone much the same way as mine. And Lulu is as competitive as I am. It was Lulu that told me that Harry liked to shoot off on her face. I already knew she was giving Harry blowjobs just like she knew all about my first date with Craig. I know what Lulu does with Harry, she tells me everything. She and I've been friends from Grade One. I know her life. I know everything she and Harry do, just like she knows all those little details about Craig and me. She's very religious, she goes to Mass. She helps teach Sunday school at our Chinese Catholic Church. Back then she was totally conflicted over sex with Harry. \n\nShe hasn't gone all the way but I know she wants to. I know that because she's told me. She's in love with Harry. She's struck a balance by giving him blowjobs. She's conflicted about that too, but she's somehow managed to convince herself that a blowjob is only a little sin, not a big one, and as long as it prevents the bigger one, it's okay. Whatever, we'd swapped a lot of tips and techniques on blowjobs since we started dating Harry and Craig. Whatever one of us learnt, we shared and the other was soon trying out. \n\nShe's told me she swallows now when Harry shoots off. To start with she wouldn't let him finish in her mouth, so he'd shoot off on her boobs or her stomach and later on, on her face. Sometimes it'd get in her hair or on her clothes and it was so hard to get out of her hair. So now she swallows. \n\n<center>* * *</center>\n\nSipping my vodka and coke, I wonder idly if Craig will want a quick blowjob tonight. Probably. Actually, almost certainly. He always does when we date, even if it's just a quickie in his car when he drops me off home. I'm not sure that I want to now, but if I don't he'll think something's wrong and he might even try and sneak into our bedroom later. I don't want that to happen. I know we'll have time, even if it's a quick blowjob in the bathroom before bed. \n\nLulu and I have done that before when we've slept over at Harry's or at Craig's. Taken turns in the bathroom with them or just split the bedroom's for a while. Craig likes it when I kneel on the floor and use my mouth on him. So does Harry with Lulu. We compare notes afterwards. Once we even compared how much cum each of them shot off, but it was hard not to swallow and just hold it in our mouths until afterwards. We could only see what was in each other's mouths' as well, so that didn't work too well. It was kind of exciting though, seeing Lulu's mouth full of Harry's cum. \n\nAt the time, I'd half thought it would be fun for us to kiss each other and share that cum. Lulu had said that was disgusting but I still thought it'd be kind of exciting. I find myself wondering if Harry tastes the same as Craig. Now, I wonder what Andrew will taste like. Thinking about that, and about what's going to happen tonight if Andrew does come to my bed, which I'm rather sure he will and which I'm feeling more and more nervous about, I decide I'm a bad girl. A very bad Chinese girl who's totally shameless and who will be a disgrace to her parents. \n\nThe thought makes me giggle. Yes, I realize I'm also slightly drunk but I decide that if I'm going to be a bad girl, I may as well be a really bad girl. If Craig wants a blowjob I'll give it to him so he'll go to sleep. It's a risk reduction strategy, I tell myself, still giggling. Lulu will probably do the same for Harry and then she'll sleep. Once she's out, she's out. She sleeps like a rock. Nothing wakes her. Not even rolling her out of bed onto the floor. I've done that to her and she didn't wake up. I'm not that worried about Lulu.\n\nAndrew won't come until later, there'll be time. Better safe than sorry. I'd hate for Craig to tip-toe in and find Andrew in my bed. Probably so would Andrew.\n\n<center>* * *</center>\n\nCraig and Lulu find me at the bar, sitting there giggling to myself. Both of them are flushed and smiling. Craig sees me, shoots me a guilty look. He's probably thinking I'm annoyed coz he's been dancing with Lulu for the last hour. Well, I'm not annoyed at all. Lulu is looking guilty as well. She probably think's I'd rather it was me dancing with Craig. I can see she's not wearing her bra anymore either. She must have been off making out with Harry earlier. \n\nThe party is thinning out now, people are leaving. It's midnight and tomorrow's not a holiday. By twelve everyone has gone and Lulu and I are done with our quick cleanup. We go upstairs and grab the bathroom first, before the guys. I undress in our bedroom, follow Lulu into the bathroom. We shower quickly, one after the other, a couple of minutes each. I'm not at all shy with Lulu, we've grown up together. She's like my twin sister almost.\n\n\"Do you want first?\" I ask, nodding in the direction of Harry's bedroom as we slip into our pajamas. There's no need to say what first is about. We both know, we've done this before more than once or twice now. What's nice about Harry's parents' house is these two bedroom's share this bathroom. There's a door from each into a little foyer with the bathroom on one side and a small washroom on the other. Very convenient. I'm not sure if that's why we're in this bedroom. There are a couple of other bedrooms but we've always had this one when we've stayed over. \n\nLulu blushes. Shakes her head. \"You first.\"\n\nI giggle. She's still conflicted about this, even after we've been dating Harry and Craig for almost three months and she knows I know she gives him blowjobs. It's always me that goes first. I find that amusing because she's the one that's in love, not me. \"You know what, Lu, I don't want to get sore knees. Why don't we just go into their bedroom and turn the light out and given them both their blowjobs and get it over with and then we can come back and go to sleep. I'm really tired.\"\n\n\"Together?\" Lulu is shocked. We know what we both do, but we've never done it in the same room before. But tonight, I'm in a hurry. I want to get this out of the way. And I want Lulu asleep as soon as possible. What if Andrew turns up before she's done? Sometimes Harry likes to take his time.\n\nI giggle. \"Yeah, why not, it's dark. It's not like they'll see us or we'll see each other.\"\n\n\"But...\" Lulu looks at me. Shakes her head. \"Yeah, okay,\" she says. Sometimes she does surprise me. She's blushing as she follows me out of the bathroom. The light is still on but guys are both in bed. Talking. They look up when we walk in. Surprised? \n\n\"Yours is over that side,\" I say to Lulu, pointing at Harry. Lulu giggles. I turn the light out. Actually, it's not that dark. There's light from the streetlight outside and I can see Lulu's shape as she walks to Harry. Never mind. I slide down on my knees next to Craig's bed. Find his head, kiss him. \"Time for your goodnight blowjob, big boy,\" I breathe in his ear.\n\nMy hand is already under the duvet. He's wearing boxers, my hand slips inside, finds him. I tug at his boxers, push the duvet back and climb up onto the bed. He helps remove his boxers and now he's naked and I'm kneeling between his legs, cupping his balls with one hand while the other takes hold of his cock and peels his foreskin down. He's already hard as I stroke him slowly, tightly. \n\nHe gets hard fast. He always does. It's fun feeling him expand in my hand, lengthen, thicken, harden until he's big and hard. Well, usually it's fun. Tonight it's something I want to get out of the way so I can go back to my bed and wait for Andrew. It doesn't even worry me that I'm cheating on Craig. I'm more concerned that I'm cheating on Andrew, which is silly. Andrew isn't my boyfriend. \n\n\"Take your top off,\" he whispers.\n\nI don't want that. I want to give him his blowjob and then get back to my bed and wait for Andrew. I ignore him. His cock is seriously erect, jutting stiffly upwards. It's not that dark, I can see his cock, pale in the darkness. It's really not so dark as I thought it would be in their bedroom. When I glance across the room, I can clearly see Lulu on her knees between Harry's legs with her pajama top open and I can see her breasts as her hand glides on Harry's cock.\n\nSeeing Lu is like watching a mirror image of myself, we're almost stroking them in unison. Craig and Harry exchange brief glances. Craig doesn't see so happy, but Harry does. He has both hands on Lu's boobs and she's making excited little noises. Craig looks with me. He sees what I see. I feel his muscles go all taut. He's excited looking at them? Well, so am I but really, I need to take care of Craig quickly.\n\nMy attention returns to Craig's cock. I take him in one hand, drag my tongue from the base of his cock all the way up his shaft to the very tip. There's a small drop right at the tip that I lick off with a swirl of my tongue. I lap at him, lap him like his cock is an ice-cream cone, enjoying the taste of him, enjoying the way his breath hisses out, the judder of his hips as my tongue slides over and around the swollen head of his cock. I know how sensitive he is and I'm enjoying doing this to him.\n\nIt's weird. I'm almost sure I'm going to let Andrew make love to me later tonight if he comes to my bed and here I am, enjoying giving Craig a blowjob and I'm not feeling in the slightest but guilty. Should I? I think I should but I don't. I like what I'm doing.\n\nIt's Harry's voice that brings me back to the moment. \"Oh yeah, that's good, Lulu.\"\n\nI glance across. So does Craig. Lulu is in the same position I'm in now, kneeling between Harry's legs, his cock jutting upwards, her mouth sealed to him, her head bobbing up and down. She's not wearing her pajama top any longer. Go Lulu. \n\n\"Regan,\" Craig breathes, one of his hands stroking my hair. I know what he's after. I give my big lollipop one last lick, open my mouth wide, flatten my tongue against my bottom lip and slide my lips down over the head of his cock. Down his shaft. All the way down until the head of his cock brushes the back of my throat. Then a little further. I've done this often enough now that I can control that gag reflex.\n\nFor a couple of weeks now I've been working on getting my lips all the way down to the base of his shaft but I still can't quite do it. I close my eyes now and concentrate on using my lips and tongue and mouth on him. Up and down his shaft, up and down, again and again, coating his cock with my saliva. My lips slide down his shaft, he touches my throat, I push down a little more, each time just a little further, swallowing now and then, tasting cock-flavored saliva.\n\nCraig is breathing hard, one hand stroking my hair as I kneel between his legs, my mouth moving slowly on him. Andrew coming to my room later or not, I like giving Craig blowjobs. I like sucking on his cock, feeling him so swollen and hard and excited in my mouth. I like it when he lies there and I have him under my control. Usually, but right now it's something I want to get out of the way. I'm sucking on Craig's cock wondering what Andrew's cock will taste like. ",
        "I wonder how Lulu is doing with her blowjob for a moment and want to giggle. Instead, I draw my mouth back, sucking on Craig as my lips slid up his cock to just below the glans, swirl my tongue over him, enjoying the way his hips quiver, his hand tightens in my hair. \n\nAbsolutely, I know what Craig wants to do. He wants to fuck my mouth. I like it when he does that, I like his excitement, I like his cock. One of my hands cups his balls. I fondle them gently as I work my mouth and tongue on his length, swirling the tip of my tongue along the ridged glans as I come up, knowing he enjoys that. I'm giving Craig pleasure and I enjoy that. \n\nI'm also enjoying the knowledge that I'll be giving Andrew pleasure later tonight as well but that doesn't stop me wanting to give Craig a good blowjob right now. I feel wicked and sexy and excited and naughty and a little scared at what might happen later with Andrew. I mean, Andrew told me he wanted to fuck me. I told him yes.\n\n\"Jesus, Regan,\" Craig gasps, \"suck my cock, suck me off, baby.... Suck me off...\"\n\nHis hips are jerking now, he's thrusting his cock into my mouth, both hands holding my head and I know he's close and I welcome his eager plunges between my lips, into my mouth.\n\n\"Suck it, Regan. Suck it.\" Craig's voice is louder. His hips are jerking and I know he's so close. Across the room I can hear Lulu slurping noisily and I know Harry is close too.\n\n\"Uggghhhhh .... Uuughhhh ....uuughhh.....\" Harry grunts.\n\n\"Mmmppphhhh.\" Lulu makes a funny noise. I can hear her sucking and swallowing. She's gulping down Harry's cum and Craig turns his head to watch them and he groans and then it's my turn.\n\n\"Fuck,\" Craig grunts, \"fuck.\" His hands hold my head tight, his cock pushes in, he's playing tonsil hockey with his cock and my throat and it's definitely a goal as his cum spurts down my throat. I gulp and gulp and gulp, not quite choking as his cock throbs hotly in my mouth. I'm used to this now. Swallowing. Tasting him as he floods my mouth. Salty, astringent and a little acrid. I like that taste now.\n\n\"Nnnnuuughhhhh.\" A long sigh, a last trickle in my mouth and he's finished, his hands release their grip on me. I lift my head, gasping for air. Lift myself up a little, lick my lips, swallowing as his cock pops from my mouth. The last thing I want now is cum in my hair.\n\n\"You guys done?\" Harry is laughing.\n\n\"Harry.\" Lulu squeals quietly. I hear her hit him. I hear his laugh.\n\nI lick my lips. \"Yeah, we're done, Harry. Come on, we better get some sleep, Lu. Goodnight Craig.\" I don't kiss him. He doesn't like me to kiss him after he's cum in my mouth. I've told him it's his cum, he shouldn't mind but he doesn't agree. Oh well. Guys. \n\n\"Goodnight, Regan.\" His hand strokes my head. I slide off the bed. Harry is kissing Lulu. He doesn't seem to mind that he's cum in Lulu's mouth. Lulu doesn't seem to mind that Craig and I can both see her boobs as she picks her pajama top up off the floor. Guess she's not as shy as she used to be. Time to sleep. For a while anyhow. Until Andrew comes to my bed. If he does. Lulu and I both head for the bathroom. I want to clean my teeth and wash my mouth out. I'm making sure my mouth tastes of toothpaste and mouthwash when Andrew joins me, not cum. If he does visit me in my bed, the last thing I want is for him to kiss me in the middle of the night and taste Craig's cum on my lips and in my mouth. Lulu is still licking her lips but she does clean her teeth as well. \"Well that was fun, wasn't it,\" I say, giggling.\n\n\"Uhhhh,\" she blushes. She sounds flustered.\n\n\"Lights out.\" I'm smiling.\n\n\"Okay,\" she says. Within a couple of minutes she's fast asleep. I can hear her breathing.\n\n<center>* * *</center>\n\nI'm not asleep. I'm too nervous. Wired. I lie there with my heart pounding. Waiting. I give it a few more minutes before I climb out of bed. I make sure the door connecting our bedroom to the bathroom is securely locked. I pack two towels along the bottom to block the gap at the bottom of the door. Only then do I open the door into the hallway slightly. Lulu is a very sound sleeper. Once she's out, it takes a lot to wake her up so I'm not worried about her at all. I'm counting on that as I stand beside my bed and take my pajamas off. \n\nThe bondage top is right where I placed it. I slide it on, adjust the straps. Fasten them behind me. The leather straps are cool on my skin. Now that this is all I'm wearing, I'm far more aware of those straps than I was before. Where did Lulu get it from? Wearing this and nothing else, I somehow feel even more exposed than I would if I was completely naked. After a moment's thought, I find the black and silver choker I'd been wearing and fasten that around my neck. Andrew didn't ask me to wear it, but somehow I think he'll like the addition. I'm ready the way he wanted me when I climb back into my bed.\n\nMy fingers trace the leather straps that fit me tightly. Tightly, but not uncomfortably. There's a ring at the center, just between and below my breasts. Straps run beneath my breasts and then all the way around my back. Straps on each side outline my boobs in a triangular frame, joined by a ring above each boob to another strap that runs over my shoulders, just like a bra.\n\nThere's another ring below my throat, with a strap running straight down to the one at the base of my boobs, while two more straps angle across to join the shoulder straps above my boobs. There are three straps across the back and there's a couple more that run up my sides almost to my armpits. It's complicated. I'm lying there trembling as I explore those straps, wondering what I look like wearing nothing but this. I'm excited. Wet. Hot. I want to touch myself so badly but I don't. I'm saving that for Andrew. Anticipating his touching me there. It's so hard not too though. \n\nThe bondage top thing makes me feel, I don't know, all sorts of things. Sexy. Shameless. Obscene? Dirty? Wildly excited. What do I look like wearing only this? I try to picture myself as I look to Andrew and it's exciting. I mean, I've tried it on at home. I know what I look like to me, but what about to Andrew? He must like it, otherwise he wouldn't want me to wear it. Under the duvet, I spread my legs wide apart, draw my knees up. It's so hard not to touch myself as I remember what Andrew did to me in his office. My nipple that he squeezed so hard is still sore. \n\nMy sex remembers his finger and I'm wet. I remember his cock in my hand and my heart pounds the way it did when I held him. Is he really going to come? I remember the intensity of that look on his face when he said to me that he wanted to fuck me and I shiver. He wants to do that to me in this room that I'm sharing with Lulu? With my boyfriend and his son the bedroom next to us? With wife asleep in their bedroom at the other end of the hallway? I'm scared, but still, I hope that he comes to me.\n\nI close my eyes, drifting off to sleep despite my nervous excitement. I wake up with a jolt when the door into the hallway begins to ease open. I glance at the bedside clock. It's three a.m. It's silent, maybe it's the air movement that wakes me? The door is wide open, I see a shape in the darkness backlit by the hallway nightlight. It could be anybody. I can't tell. Maybe it's Craig? I hope not. My heart pounds as the shape enters, the door closes, snicks shut very quietly. The lock clicks. If I wasn't listening for it, I wouldn't have heard a thing. \n\nThe shape comes towards me, silently. Closer still. He sinks to his knees beside the bed. A hand strokes my face. I can now see that it's Andrew. I can smell him now as well as see him. His scent is different from Craig's and now he's a little sweaty. He smells of Pamela now too. There's still a hint of Armagnac. I remember how it tasted on his finger.\n\nHis mouth is close to my ear, his voice whispers. \"Regan? Are you awake?\"\n\n\"Yes,\" I whisper back. I'm so nervous. Trembling. Nervous. Scared. Excited. Terrified. Now that he's here I don't know what to do. I'd left the bedroom door open. It has a lock. I hadn't locked it. I could have but I didn't. And now he's here, in the guest bedroom, with me. I'm scared. What if he does things to me and I can't help myself making noises? What if we wake anyone up? I have no idea what to do. I'm breathing hard, my heart is pounding wildly. I'm so wet.\n\n\"Do you remember what I said earlier, Regan?\" Andrew whispers in my ear. \"About what you should wear? About what I want from you?\"\n\n\"Yes,\" I whisper back. My heart is beating beating beating. I turn my face towards him, breath in. the scent of his sweat and there's definitely a scent of Pamela on his skin. Has he made love to her before he came to me? I'm not jealous at all, she's his wife and after all, I've just given Craig a blowjob but I'd like to know. It's exciting to think that he's left Pamela in their bed and come to me. That he wants me that much. That he's taking a huge risk because he wants me. I want to moan with excitement now and he hasn't even touched me. He's not even in bed with me and I'm on fire, I'm burning. I'm wet and I'm ready for him and he hasn't even touched me yet.\n\n\"Everything I said?\" Andrew whispers. He doesn't wait for an answer. His hand leaves my face, slides under the duvet, over my shoulder, my arm, down to my waist. I'm naked but for that bondage top I'm wearing for him. His hand slides all the way down over my hip, confirming that I've done exactly as he asked before moving back up to cup one of my breasts. He's touched my breast before, during the party. His hand had slipped inside my top, cupped my breast, his skin hot on mine. Exciting. Now I'm hot and with no clothing intervening, it's so easy for his hand to cup my breast.\n\nHis touch is fire on my skin. My nipples are swollen hard, aching and rubbery. He toys with one, touching it, teasing my nipple with his fingers, holding it lightly between finger and thumb. I suck in my breath, bite my bottom lip, stopping myself from moaning out loud as that aching engorgement becomes almost painful. There's an almost silent chuckle against my ear. He knows what he's doing to me. He lifts the duvet, his head slips beneath it. His mouth replaces his fingers on my nipple, my breast. His tongue wetly slides across my skin. His hand slides downwards.\n\nI lie on my back, unmoving, feeling his hand running slowly over me. Under the duvet I'm naked. I'm exposed. I've done as he wanted me to. I've removed my clothing, I'm wearing nothing but these little strips of black leather. I'm naked and I'm available for his hand to explore. He explores. I lie there, on my back, motionless, breathing hard as he touches me. My fingers clutch nervously at the sheets on either side of my body as his mouth engulfs first one breast, then the other.\n\nHis mouth and lips and tongue assuage that painful swelling at least temporarily. While his mouth runs over me, he takes full advantage of my near nakedness. One roams gently over my stomach, my waist, my stomach again. My skin tingles, glows, burns at his touch. I'm swollen and wet for him. Still; I haven't answered his question. I've forgotten about it.\n\nHe repeats it, his whisper muffled by the duvet. \"Everything I said, Regan?\"\n\nI close my eyes. My heart pounds. I remember what he said? Do I want this? He's as old as my Dad. Older maybe. Am I really going to do this? My first time. Do I want it to be with him? A flood of wet heat inside me, a throbbing need to surrender myself is my body's answer. I may be scared, timid and uncertain. My body isn't. My knees fall a little apart as his hand slides over my inner thigh. I'm limp now, there's no tautness in me. No resistance. His hand is high on my inner thigh, caressing and stroking, almost touching me where I want his touch so much. He has my hips twitching.\n\n\"Yes,\" I whisper. My heart swells, choking me. I can see his smile. \"Everything.\"\n\n\"Can I slide in bed with you?\" he whispers.\n\nMy heart pounds wildly. Drumming. I swallow. \"Okay,\" I whisper in reply. \n\nI'm suddenly aware that he's wearing very little as he eases himself up onto the bed and under the duvet next to me. I can feel him against me. His body. His skin. No top, just loose cotton boxers. He's hard. I can feel how big and hard when he presses against me right where he's lying propped up on his elbow looking down at me. It's not like I'm unfamiliar with a hard cock. I had Craig's in my mouth only an hour ago. I had Andrew's cock in my hand three hours ago.\n\nAndrew's cock isn't in my hand now. It's pressing against my thigh. Hot and hard. Big. I can feel his balls against me as well. I'm next to naked. All that separates us is one thin layer of cotton, a hindrance that I wish would vanish. I'm so very wet now. Wetter than I was earlier and that wetness is slick on my inner thighs. I'm melting and it's just him and me and the soundly sleeping Lulu in the other bed. He says nothing. His hand is back on my breast now, caressing me there. \n\n\"They're small,\" I whisper, looking up at his face. I hope he's not disappointed. They're very small and very firm and I like them. I think they're a lot prettier than those big boobs my classmates are over-endowed with. But guys don't always share that preference. Most guys I know like big boobs. Andrew's wife is blonde and a lot taller than I am. She's far curvier but still in good shape for someone in her forties. Her breasts are large and full and they bounce. Mine are small and firm and really, I don't even need a bra. The best my boobs will do is quiver slightly. I've always wanted bigger boobs but short of a silicone implants, it isn't going to happen.\n\n\"They're gorgeous,\" Andrew whispers, sounding like he means it. I hope he does and he's certainly interested in them. I arch my back as his mouth finds them again. He's greedy now, his mouth is moving from one to the other and back again, sucking at my nipples, taking my entire breast into his mouth, lapping and licking, coating my skin with his saliva. \n\nI turn just a little; slide my hand into his boxers. My searching fingers find his cock. Clasp it with my fingers. It's a little sticky. Like Craig's after I've given him a blowjob and he's cum. Did Andrew? With Pamela? I wonder, but I'm not jealous. I'm curious.\n\n\"I love your nipples, Regan,\" he breathes. He must, he's giving them lots of attention. I wonder if he'll pinch them again. That hurt when he did that. My shiver is a mix of trepidation, fear and excitement.\n\n\"What's wrong?\" he whispers, his mouth lifting from my boob. He's looking down at me, his hand toying with the nipple he wasn't kissing, his thumb sliding over my nipple, backwards and forwards, sending little shocks of pleasure all the way down to where I'm so wet and ready for him to touch me. \n\n\"It hurt me, before,\" I shiver. \"Before, when you squeezed them.\"\n\n\"Did you like it then,\" he whispers in my ear. His cock twitches under my fingers. I stroke him gently, without thinking, savoring his hard length in my clasp.\n\n\"Yes,\" I say, without thinking. I did, then. Now though, now I'm not sure.\n\n\"When I do that to you again, you'll enjoy it, I promise,\" he breathes. \"I'll only do that to you again when you say I can, Regan. Is that okay?\"\n\n\"Yes,\" I whisper. I'm still shivering, but now I think it's with excitement.\n\nHe smiles. His lips brush mine, pull away when I try to kiss him back. \"Now, there's something I need to do.\" He frees his cock from my hand, moves, lifts, pushes. He's taking his boxers off, dropping them on the floor beside the bed. He's naked in bed with me, his cock freed, resting hugely on my thigh. I can feel his balls against my thigh as well, where he lies on his side, propped up on one elbow, looking down at me. He's naked in bed with me and the duvet has worked its way down to our waists.\n\n\"God, Regan,\" he breathes. \"You're even more beautiful than I remember.\" His fingers trace the straps of that bondage top I'm wearing, brushing across my skin. \"I love this, Regan, it suits you.\" He traces the choker around my neck. He smiles. \"You look perfect like this.\"\n\n\"I do?\" The way he's looking at me, I know for sure he thinks so. He's not just being polite or nice or anything. He really does. I lie there looking up at him, nestled in against his body. I'm so small and delicate compared to him. He's six feet tall, one eighty pounds, he's fit and strong. I weigh one ten soaking wet, I'm five foot two, and I'm slender and tiny compared to him. He's not a boy like Craig or Harry. Andrew is a man. A real man who wants me. He wants me the way a man wants a woman and I can feel his cock on my leg, big and hard. Rampantly hard. Hard for me.\n\n\"You're beautiful, Regan,\" he says again.\n\nI swallow nervously. \"You haven't seen all of me yet,\" I whisper. \n\nThere's a long moment where my heart seems to stop before I take all my courage in my hands and do what I've been wanting to do. I swallow and tug the duvet off both of us, push it to the side of the bed behind me, against the wall. I'm naked on the white sheet beneath me. Naked but for that little black leather harness and my choker and its light enough that he can see me. \n\nHe can see all of me and I watch his face as his eyes roam over my body. He's drinking me in and my skin is burning, I'm on fire with a strange mix of embarrassment and excitement and I'm so wet and my nipples are so painfully hard again. So hard and swollen that they're hurting me, they're standing up begging for his touch, begging for his fingers to assuage the aching fullness I feel.\n\nI look up at him and, very slowly, my eyes watching his face, I move the leg furthest from him sideways, parting my thighs, raising my knee, drawing my foot up the bed, displaying myself to him. As he looks at me there my hand finds his cock. I don't stroke him. All I do is hold him, feel his silky rigidity. It is a little sticky. He's looking at me there. I feel myself so swollen and wet and ready, parting a little, throbbing. My clitoris is swollen, my hips twitch under his eyes.\n\n\"Regan Wong,\" he says, very slowly, his gaze burning into me. \"I. Am. Going. To. Fuck. You.\" He's breathing hard, enunciating his whispered words very clearly and slowly. Like he could lose control any second. His nostrils flare as he breathes in and out. He looks like a bull in the arena after a red flag's been waved before him. \"Hard.\"\n\n\"Oh,\" I whisper, my heart drumming. He hasn't even touched me and my excitement is growing in surging ripples. My breasts are swelling, where they were taut and firm, now they're fuller. Firmer. I didn't think my nipples could swell further but they do and it's like they're so hard they're going to burst. My hand squeezes his cock as he lowers his head to close around one nipple and tug with his lips. I want to scream. It's so good.\n\nHis lips and his fingers are setting me on fire, he's working on my nipples and I'm making little noises and my body is singing, and he's not stopping. The pleasure goes on and on and all he's doing is kissing and touching my nipples and my breasts. I'm holding his cock but I'm not stroking him, I'm not doing anything except clasping him in my hand and lying there for him. \n\nMy boyfriend, Craig, his cock is almost always hard when he's with me. His is the only cock I've had any experience with and I know he likes me stroking him. Andrew doesn't seem to mind that I'm not doing anything. It's not that I don't want to. I do. But I'm helpless under his mouth and his touch and I can't think of anything except what he's doing to me and I've never felt so helpless and so out of control before in my life. It's so good and I love it.\n\nAndrew's hand leaves my breast, slides downwards to rest on my stomach. His hand is big, as big as the rest of him, his fingers splayed wide. I'm feeling tiny next to him and that scares me. His hand circles slowly, stroking me, relaxing me, tantalizing me. I'm still scared and nervous but I'm no longer tense. One arm slides under me, around both my shoulders, moves me closer to him, we're pressed together, his body hot and hard and big. Bigger than Craig. A lot bigger. I shiver as his hand roams freely over me, running down to my hips and my thighs.",
        "He's watching me now, looking down at me. There's no question at all that he knows what he's doing. I'm on fire wherever he touches me. My sex is so hot and swollen and wet and I want him to touch me there and my thighs are wide apart and I'm open to me but he's not touching me there and I'm shy. I've never asked Craig to touch me and I'm scared to ask Andrew. I'm not in control of this, I have no idea what to do, how to act. I've never done anything, not like this. \n\nCraig's a couple of years older than me. Twenty. He's had sex, I know he has and I know who with too, but he's not very confident. If he was, I probably wouldn't be a virgin. Sometimes I've been so excited that if he'd pushed it, I'm sure I'd have said yes. Now I'm happy Craig didn't push it. What he didn't get, Andrew will and I just know it's going to be better than good.\n\nAndrew kisses me at last. Gently, taking possession of my lips, my mouth. Before I know what's happening my mouth is wide open, his tongue is deep inside my mouth, exploring me, tasting me. His lips are sealed to mine, his hand cups my breast, his thumb brushes my nipple again. I arch my back, push my breast up against his hand, gasp into his mouth. My heart beats like a butterfly's. I'm making little noises, I'm trying not too but I am. Helpless little noises as that excitement within me builds and builds. Thank god it takes an explosion next to her to wake Lulu once she's asleep.\n\nHis mouth lifts from mine, there's that questioning look on his face and somehow I know what he wants.\n\n\"Yes,\" I gasp. We both know what I'm saying yes too. \n\nHe smiles. He bends his head, engulfs one breast, sucking, licking. His teeth close gently around one nipple. He's biting me lightly as his thumb and finger find my other nipple, squeeze, twist, tug, tug harder. Something inside me bursts, a golden rushing wave sweeps through me, my back arches, my body stiffens, my eyes stare blindly at the ceiling as pleasure wracks me in an endless wave that leaves me limp and shattered, barely able to gasp for breath and he's kissing my lips again, his mouth on mine, muffling my sobs as I fall apart and slowly come back together again.\n\n\"Ohhh,\" I gasp, when his mouth lifts from mine. \"Ooohhh ... oh Andrew ... how? ... How did you do that to me?\" The best. That was the best orgasm I've ever had and all he was doing was playing with my breasts and my nipples. I can't believe what he just did to me and I'm glowing. I'm just glowing. I'm melting for him. \n\nAll he does is smile. Smile and run his hand down over my stomach to my thighs. My inner thigh. He's stroking slowly upwards and I'm on fire again, my knees falling apart so naturally, opening myself to his hand. There's no conscious thought as I spread myself for his hand. He touches me, his finger presses against my slit, one fingertip eases inwards between my slippery labia. I'm so wet. I can feel that wetness on my inner thighs as he teases my labia with his finger, caressing me. The sensations his finger generates as he touches and teases me there have my hips jerking, my knees falling further and further apart. My hips jerk, lift a little. My body instinctively knows what it wants from him, knows what my role is in this.\n\n\"Wet,\" he whispers. \"You're so wet for me, Regan.\"\n\nI am, I know I am. Now I want his finger inside me. Craig has touched me like this and I know what it feels like and I like it a lot but the way Andrew touches me is better. Far better. Far more exciting. I'm panting. He's breathing hard, his lips brushing across my face, tasting my skin as his finger finds my entrance. I jerk, gasp as his fingertip pushes inwards. Pushes through the tightness of my entrance. His finger very slowly slides up inside me. His finger is thick. Thicker than Craig's and I can't help it, I moan softly, experiencing his digital penetration, his finger inside me, my channel gripping him everywhere he's touching me inside.\n\n\"You're mine tonight, Regan,\" Andrew whispers, his finger easing up inside me. I can feel his digital penetration, his finger caressing my inner walls and I'm so wet and tight around him and I stroke his cock slowly now, wanting to do for him what he is doing for me. He begins to move over me, his knees sliding in between mine, pushing my legs wider apart. He doesn't have to push very hard. As soon as I realize what he wants, I part them eagerly for him. \"I want you right now. I want to fuck you, Regan.\"\n\n\"Yes,\" I gasp. \"Oh yes.\" He's between my legs, his thighs push against mine, spreading me. Opening me to him. Positioning me to be taken. He's going to fuck me. That's what he intends to do to me. His finger moves in me continuously as he positions me, thrusting in and out, palming my clitoris, my labia and I'm wet all over his hand and his finger is sliding in and out so easily and I want to sob and moan and cry out but instead I whine, trying desperately not to make too much noise and still holding his cock in one hand, still stroking him as he kneels between my legs.\n\nI look up at him and I have to know. \"Did you do it with Pamela before you came here?\" I blurt it right out as I stroke him slowly.\n\nHe looks down at me, his finger still moving in me. I want to moan. I'm spreading my legs wide apart for him as he kneels between them but it doesn't feel like I'm in the right position somehow.\n\n\"Move your knees back for me,\" he breathes, looking down at me, his finger easing out from inside me. He looms over me, large, heavy on me even though he's supporting most of his own weight. His chest crushes down against my breasts, his stomach is firm against mine, his thighs press mine back and apart but he wants more.\n\n\"Like this,\" he whispers, one of his hands moves my knee back until it brushes his ribs, my foot trails against his hip. I move my other knee back myself, quickly. \"Now you're wide open for me.\"\n\nI am. I'm so aware of how I'm lying beneath him, flat on my back looking up at him. My knees are drawn back. Far far back, opening my sex to him. I'm exposed, vulnerable; available. He looms over me. I hold his cock, brushing it across my stomach. He's so big and I'm so small and I'm just a little frightened now, my eyes wide as I look up at him. All of a sudden his cock feels much much bigger.\n\nHe half smiles, but his eyes are burning as he looks into mine. \"Ohhh, Regan, you don't know how hard it is not to shove my cock inside you right now.\" One finger eases high inside me. He's watching me.\n\nFor a moment I think it's his cock beginning to enter me and I whimper but it isn't because his cock is still in my hand and I'm still stroking him. \"You're so big,\" I gasp.\n\nHe smiles again. \"Don't worry, Regan,\" he whispers, \"it'll fit inside you just fine. You'll stretch for me. Won't you?\"\n\n\"Yes,\" I whisper. Will I? God, I hope so. I can't imagine how and I'm scared. \n\n\"Pamela?\" he whispers, reminding me of my question that I'd already half-forgotten as his finger explores inside me. \"Yes, I fucked her after we went to bed. Does that matter for you?\"\n\nI look up into his eyes. \"No,\" I whisper, happy that he's telling me honestly. At least, I think he is. \"It doesn't matter, not to me. She's your wife.\" \n\nActually, it does matter, but only to hear him being open with me. If he tells me that he made love to her when it means I might change my mind, I think I can trust him. Really, it excites me to think he fucked Pamela before he came to me. He must have been doing that around the same time I was giving Craig a blowjob. I decide I'll be honest about that if he asks, but if he doesn't, I'm not saying anything.\n\nAfter all, it's Craig who's my boyfriend and I'm cheating on him, I'm not cheating on Andrew. Being honest though, to me it feels like it's the other way round. That's really weird, but it's also weird that I'm doing this with Andrew. He's as old as my Dad. I've imagined myself making love any number of times, but I've never imagined myself doing this with anyone as old as Andrew. It's going to happen though, I know it is.\n\n\"Are you sure, Regan?\" he breathes. \"I want to fuck you, but Pamela's my wife and I don't you getting jealous on me.\" He smiles. \"I just want to fuck you.\"\n\nI guess you can't get more honest than that. I almost giggle but instead it comes out as a gasp. He's so big and hard in my hand. I stroke him with my fingers, working his length, savoring that rigid hardness, knowing what he wants to do to me with it. \"I can tell that you do,\" I whisper.\n\nHe chuckles silently. \"Do you really want this, Regan?\" He kisses my nose. I try and find his lips, I want to kiss him. I don't succeed but he does, he kisses me for a second. \"We won't if you don't want to,\" he says. \n\n\"Yes,\" I whisper, \"I want it.\" I do. I'm scared and I do and I don't but I'm excited and I'm wet and I'm ready and he's so hot and hard in my and he wants me and I want this. I want him to do this to me. \"I do, Andrew,\" I breathe. \"You can do what you want to me,\" I add, releasing his cock, moving my hands to clutch at his back. \"I know you're married. I don't care. Just do it to me.\"\n\n\"Jesus, I'm going to fuck you now, Regan Wong.\" His voice is one long soft groan. He looks down into my eyes. I feel something push against me. Something bigger than his finger and I know it's the head of his cock positioned against me and I'm parting for him. Opening. He moves one hand down, between us. His cockhead brushes my labia, circles, brushing up and down the slickness of my slit, parting me so that I want to squeal out loud with excitement but I know I can't. I bite my bottom lip hard instead.\n\n\"Mmmmmmm.\" Instead of squealing, I moan, very quietly. I love what he's doing to me, brushing me where I'm so sensitive, smiling as he watches my face. I'm so transparent, my expression is changing as he teases me. With every touch I want him inside me more and more. Any fear I had has evaporated. He knows. \n\n\"Please,\" I whisper. I want it in me. \n\n\"Please, what?\" he says, still circling his cock against me. I'm so wet now, his cockhead slips between my labia so easily, so wetly, part for him so easily.\n\nI remember. \"Please, Sir,\" I whisper. \"I want it in me, Andrew ... Sir.\"\n\nHe smiles, he moves against me, his cockhead eases inwards. I feel myself part for him. My back arches. I shudder. My mouth opens wide as he pushes. I'm stretching around the solid girth of his swollen cockhead. It's the first time a man's cock has touched me there and I'm trembling as he pushes up against my entrance. My hands clutch at his back, my fingers dig into him. He pauses, holding himself there, pushing gently. My sex gives under his pressure, slowly opening for him. It's indescribable. Exquisite. Feeling him there where I'm so sensitive, knowing his cock intends to enter me there, that soon he's going to be inside me.\n\nHe's watching me, watching my face, his body heavy on mine. I'm spread for him. I'm there for him. I've held him in my hand. I've seen him. I know how big his cock is and I know my own body. I know how small I am. How delicate. I'm stretching around him, he's pushing gently against my entrance, pushing gently into me as I slowly open for him. My wetness floods over him, I'm limp, I'm looking up at him, watching his face, transfixed by the desire for me that I see there. The want. The passion. He wants me. He wants to fuck me so much.\n\n\"Uuughhhhh.\" My entrance stretches and stretches some more to encompass that swollen bulbous head. He's so big. Huge. Oh fuck, he feels enormous and so hard. There's no give in him. It's me that's giving. Surrendering my body to him. He's taking possession of me. He's making me his.\n\n\"Nnnnuughhh .... Nnuggghhh.\" I jerk and groan as his cockhead eases through my entrance. Except it's not easing. He's huge and as he pushes inside me, he feels even larger. Oh fuck, it's so big inside me. My back arches, I groan and groan again. I'm stretching for him alright, he's not just pushing up against me now, he's inside me and he's still pushing into me. Deeper. He`s huge. How can he fit in me?\n\n\"Give me your hands,\" he whispers, \"above your head, please, Miss Wong.\"\n\nI look up at him, wide-eyed. A little scared. My hands slowly leave his back. I place them above my head, on my pillow. He's on his elbows, his arms slide under mine, his hands seize mine. Hold them. I'm spread and pinned beneath him. His cock is poised at my entrance, partially inside me now.\n\n\"You're about to become mine, Regan Wong,\" he breathes. His mouth covers mine. He kisses me hard. Brutally hard, crushing my lips against his, possessing my mouth. I surrender my mouth for his use just as I'm surrendering my body for his use. I know what I'm here for. I'm here for Andrew to take. I'm here for him to fuck. I'm here for him to make me his. My heart races furiously.\n\n\"Do you want to be mine, Regan?\" His mouth lifts. His eyes search mine.\n\nI gasp for breath. He's in me just a little, I'm stretched so wide open for him to take me. \"Yes,\" I gasp, \"Yes ... Do it to me ...\" My hands clutch tightly at his where he's pinned them above my head, leaving me so helpless and vulnerable. I`m at his mercy, I know I am. And there`s no mercy on his face. Just desire for me.\n\nHe smiles. \"I want to do it to you hard, Regan.\" His voice flows over me like syrup, thick and lascivious, full of enjoyment. I know he's enjoying me. \n\n\"Yes,\" I gasp. I want him to enjoy me. \"Please ... do it to me how you like.\"\n\n\"Don't worry, Regan,\" he breathes in my ear, \"it might hurt you a little bit to start with but you can take this.\" He moves his hands now, he's resting his weight on his elbows, his hands take hold of mine and pin them to the bed above my head where they'd been resting. His hands keep mine pinned tightly while his body pins mine. I'm positioned for him to take. \"Move your knees back further, I need you wide open for me.\"\n\n\"Uuughhhh,\" I gasp, obeying, drawing my knees back as far as I can. My movement results in my channel sliding on him. It's a sensation that almost stops my breathing. It's exquisite.\n\n\"Nnnghhhhh.\" This time I groan, very softly. My heels rest against his hips. He lifts his hips slightly, my heels move with him, rise just a little.\n\nHe smiles down at me. His lips brush mine tenderly. \"I'm going to take you hard now, Regan.\"\n\n\"Yes,\" I whisper, melting on him where he's already partially inside me. \"Oh yes, take me hard.\" His face tells me this is going to hurt me. He's going to enjoy doing this to me, I can tell. One of his hands brushes my hair back from my forehead. He kisses my lips again, so gently. There's no warning. He thrusts. Thrusts himself into me. His cockhead abruptly pushes up inside me. \n\n\"Ooohhhhh.\" There's a sudden searing pain as he abruptly tears through my hymen and I realize what has just happened in that same instant of time. It sears. It hurts. I jerk, my back arches. My head arches back, my breath hisses from my mouth. Beads of sweat break out across my forehead. He pauses now, his cockhead and a little of his shaft now forced into me.\n\n\"Uuuughhh,\" I groan, feeling him within me. It's not hard to believe some of his cock is inside me. I can feel him in me. He's thrusting into me, taking me and I'm clenched so tightly around this huge hard intrusion within my body.\n\n\"Ohhhh that's good, Regan,\" he murmurs, pausing at my hiss, at the sudden buck of my body beneath him. The girth of his shaft fills the juncture between my inner thighs, solid, thick, an enormous shaft of hard male flesh that brooks no resistance. I offer none. That searing pain is fleetingly sharp, ephemeral, already passing. He lifts his hips, pauses, eases down, his cock pushing up inside me, again and again, slowly, exquisitely, always pushing, easing gradually inwards. My channel expands within to admit him deeper inside me. Little by little he possesses me and I'm straining beneath him, back arching, stretching inside, not quite painfully but almost.\n\n\"Nnughh .... Uughhh .... Nnnghhhh ... Uuughhh.\" I groan with every movement, my hands clutching at his where he pins them down above my head. I'm looking up at him, seeing his enjoyment of what he's doing to me written across his face. Helpless. I`m so helpless and it`s amazing, I never expected it to feel like this and I`m reveling in my surrender and what he`s doing to me and his control over me.\n\n\"Oh fuck, you're so tight, Regan,\" he breathes in my ear, his face buried in my hair for a moment. \"Such a tight little cunt.\"\n\n\"It's yours,\" I whisper, \"my cunt ... it's all yours.\" That whisper is strained. He's so big inside me, moving up deeper within me and I'm stretching around him. I feel his cockshaft inside me, easing backwards and forwards. My channel shapes itself around him. My knees brush his ribs, my heels ride his hips as he moves on me, lifting and lowering in the valley between my legs. His shaft stretches my inner lips around his girth, he's sliding in and out, tugging at my lips as he eases out, pulling at them as he eases back inside me and he's so thick in that opening. It's as if someone has taken the handle of a baseball bat and is impaling me with it, driving it up inside me.\n\n\"Are you okay, Regan?\" He's paused in me. More of his cock is in me, I don't know how much more but my channel tells me there's a lot of him inside me. It hurts but I want him to keep moving. I want all of him.\n\n\"Don't stop, Andrew,\" I whisper, my back arching of itself, \"keep doing it to me.\"\n\n\"Do you really want this, Regan?\" He's looking down into my eyes, his nose brushing mine. His look so intent, penetrating. \"Because, Miss Wong, I really want to start fucking you harder now and it might hurt you a little when I do.\"\n\nHurt me? He's hurting me now but it feels ... I don't know how to explain it. There's pleasure and there's a little pain and there's the exquisite knowledge that he's taking me and I want him to. \n\n\"Uhhhh,\" I gasp, \"please ... please Andrew, I want it.\" I do. I want this so much. I've never wanted anything more in my life than this. I don't care that he thinks he's going to hurt me. It hurt when his cock tore my hymen open but now it doesn't. Now it feels a lot better. In a strange way it`s good.\n\n\"Okay,\" he breathes. I can feel him, so tense. His muscles taut. \"I'm going to take you completely now, Regan, I want to give it to you hard.\"\n\nI know he wants that. \"Please,\" I gasp. \"Do it.\" Abruptly, I'm limp, helpless. I want him.\n\n\"Please, Sir,\" he says. His voice is gentle but firm. \n\n\"Please, Sir,\" I gasp. I like obeying Andrew when he speaks like that to me. It's as if I'm his slave or something. I like that thought. I put it into words. \"I'm your slave,\" I gasp, \"do whatever you want to me.\" His cock seems to throb powerfully inside me. So powerfully that I stiffen, arch beneath him, gasp. \"Sir,\" I whisper, belatedly. Calling Andrew \"Sir\" sends a strange ripple of emotion through me. It's strange and maybe it's weird but I like calling him \"Sir,\" especially now, when he's on me and in me and he's making me his. Taking me. He's taking me. \"I want you,\" I whisper.\n\nHe smiles. \n\n\"Take me now, Sir,\" I whisper, heart fluttering as I call him by that title.\n\n\"I will, Regan,\" he whispers back, \"Soon. I'll tell you when.\" He's moving in me again.\n\n\"Oh god,\" I gasp, \"oh god ... ohhh ....nnnnhhhhhh ...nnnnggghhhh.\" I'm biting my bottom lip, hard, whining softly, trying not to make any noise as Andrew's cock very gently eases in and out of me. He's not pushing deeper into me. Not yet. Just easing in and out where he's already penetrated. Where I've had him inside me. My hands clutch at his. My back arches, I try to spread myself wider for him, my heels slide on his butt as he moves. His cock moves inside me. Exquisite friction against the slippery walls of my channel where I clasp him. \n\nHe's not just hard inside me. He's a solid bar of steel inside my channel, stretching me around him where he's entering me and I want him all the way inside me so badly and I'm scared of the unknown, all at the same time. What will it feel like when all of him is inside me? When all of him is in me and he`s making love to me? I don't know. It's hard, so hard not to make any noise, I mean. I've never done this before and I'm scared. Scared and very very excited. It's happening. I'm about to lose it completely and Andrew isn't who I expected to lose it to, although I know him well."
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "chinese",
        "18 year old",
        "virgin",
        "asian",
        "first time",
        "mild bdsm",
        "chloe tzang",
        "romance",
        "sugar daddy",
        "high school"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-wolf-with-the-red-roses"
}