{
    "title": "Duplicity Ch. 04",
    "pages": [
        "The thick smoke swallowed any possibility of a clear view.\n\nThe persistent beep was an alert that something had gone terribly wrong.\n\nThe events unfolded at lighting fast speed and at the same time; moved at a snail's pace. A split second was sliced into a million sections.\n\nAn unidentified bloodcurdling scream echoed throughout but soon he realized it was him. He was trapped... He couldn't breathe. The toxic black smoke invaded his lungs.\n\nThere was the most exquisite reddish orange light barreling toward him. It was so beautiful he wanted to touch it.\n\nIf he could only touch it, everything would be alright.\n\nThere were shards of metal flying in every direction.\n\nHe was being sucked in and pulled apart at the same time.\n\nThere was a little girl off in the distance, in the middle of the white flame. She was wearing a pink lace summer dress. Her brown braided pigtails swayed unaffected by the heat.\n\nShe was talking to him, laughing at him.\n\nHe couldn't understand what she was saying but he wanted to call out to her; and tell her to take cover.\n\nThe perpetual beep continued resounding in his mind.\n\nHe reached out and touched the small picture stuck next to his controls. It was of a beautiful woman and a little girl. It was the girl in the flames smiling at him through the photo. He opened his eyes wide as he caught his reflection in the small mirror next to the picture.\n\nSuddenly his reflection transformed into a young woman. Her features were familiar but he didn't know her.\n\nThe persistent beep resounded throughout the cock pit again.\n\nThe last images were vivid and familiar... and terrifying.\n\nThrough the windshield there was a flying metal bomb hurled directly at them both.\n\nAnd then there was blackness... followed by a beep.\n\n\"Aaaahh!!!\" Layla woke up gasping and panting. The beeping sound was her alarm making her aware it was time to wake up. She cursed under her breath since she forgot to turn off her alarm the night before.\n\nShe hadn't had a nightmare like that in a long time. She was disturbed and disorientated. Her sheets were soaked from sweat. She huffed until her breathing regulated.\n\nAfter a long cold shower she was able to get back to normal. She felt so drained and tired as if she didn't sleep at all.\n\nIt was Sunday and two weeks until the wedding. Sienna and Jason told her that today she was explicatively prohibited from doing anything related to the wedding. Apparently, she had been working so hard, she earned a mandatory day off.\n\nLayla didn't believe in days off when there was a deadline but she had to admit she was grateful for it. She thought she might sleep in and read all day. But apparently the sleeping part wasn't working out for her.\n\nShe decided to go downstairs, make a light breakfast and maybe go back to bed. There was a cool breeze so she wore her new purple velour hoodie pants set. She bought it when they were in town one day. It just looked so comfortable; she thought she might wear it in her room.\n\nToday she was tired and it was technically her day off. Despite her better judgment, she wore it downstairs. She grabbed some bread for toast and poured herself some coffee.\n\nThere was no one there which she was grateful for. It was still early in the morning and she figured Jason and Sienna were still asleep. That only left Merle.\n\nMerle...\n\nEver since that kiss she had been avoiding him like the plague. Merle would go one way and Layla made sure to go the other way. But it seemed like he was avoiding her as well... which was fine by her.\n\nShe didn't know what had gotten into her that day. Not only could she not understand why it happened, she couldn't understand why she couldn't stop thinking about it. That kiss... She shuddered from the memory. She hadn't been kissed like that in... well never. If he could make her feel that with one kiss; imagine what his talented mouth was capable of. What was she thinking? No, she would continue to avoid him at all costs.\n\nIt was just a little odd that Merle would avoid her. Wasn't she the one that supposed to play hard to get? What is she talking about?! Playing hard to get? She didn't mean that. Did she?\n\nLayla sipped her coffee while her thoughts ran wild. She didn't even hear the shuffling as it entered the kitchen.\n\n\"Morning.\"\n\nLayla snapped out of her daze. She looked towards the greeting; even though she already knew who the deep voice belonged to.\n\n\"Good morning.\" She replied quietly. She continued to sip her coffee as she tried to adjust her thoughts. She was surprised how quickly she was affected by just his voice and presence. She felt the moist heat between her legs begin to form.\n\nMerle poured himself a cup of black coffee and sat down across from her. He'd slept horribly and was in a sour mood... even more so now that Layla was there.\n\nHe tried to avoid her ever since the kiss but it was damn near impossible.\n\nIt was as if her presence haunted him wherever he went. And even now before coming into the room, for a couple of minutes he observed her from the shadows... entranced by her.\n\nHer expression showed her to be deep in thought. He was surprised to see her in casual clothes; he didn't think she owned anything remotely comfortable. Her curvy body was even more pronounced through the soft fabric.\n\nShe wore no makeup and looked much younger... and so beautiful. Her plump lips gently touched the mug as she sipped her coffee. He felt his anger rise as he had this unreasonable pang of jealousy with the mug. He could still remember every detail of those sweet lips; he could easily feast on them all day long.\n\nBut that wasn't possible. And he was not happy about it.\n\nIf only their circumstances were different. It was extremely dangerous to play with this kind of fire. But he was drawn to her like a moth to a flame.\n\nHe could not get involved with her, especially since he was undercover. Everything was already complicated and he didn't need any more complications. He needed to stay focused. So the only thing that was left was his frustration.\n\n\"Did you sleep well?\" Merle grumbled.\n\nLayla looked at him and shrugged her shoulders. \"Not really. You?\"\n\nMerle shook his head.\n\nSilence.\n\nMerle waited until she finished eating her toast to pour them both another cup of coffee. He got up and said, \"Come with me.\"\n\nLayla looked at him in confusion. It wasn't a question or a request. It was a statement, an order. It annoyed her but she was so tired; she didn't have it in her to make a snarky reply. But above all she was extremely curious. She got up without a fuss and followed him out.\n\nOn the way up, he stopped by his room and grabbed a large blanket. He led her all the way up the stairs until they reached the rooftop.\n\nIt was still very early in the morning and it looked like the whole island was still sleeping. The soft fog glazed over the spectacular view. The sparkling ocean and mighty cliffs fused together. The whitewashed clustered buildings were huddled together as if keeping each other's company. And it made the bright colors of the sky even more clear.\n\nThey were so high up, they could only look down. The height made you feel so powerful but completely peaceful at the same time. Suddenly, a brisk wind traveled through her. Layla didn't mind since this was the most beautiful view she had ever seen... and now she was a little more awake to appreciate it.\n\nShe looked around and there were a couple of pool lounge chairs set off to the side.\n\nMerle walked ahead and motioned for her to lie down. She looked curiously at him but did just that. Merle then moved his chair close to hers and laid down as well. He then covered them both with the warm fleece blanket. That simple gesture felt so intimate.\n\nThey continued laying side by side in comfortable silence.\n\n\"So why aren't you sleeping?\"\n\nThe question caught her off-guard. Not because it was a strange question but because she felt like she could tell him the truth... the unfiltered truth.\n\n\"I don't usually sleep well. I haven't slept ever since-\" She stopped herself; it was an automatic halt to her emotional release.\n\n\"Ever since what?\"\n\nSilence.\n\nLayla looked into Merle's eyes and felt this quiet unspoken trust. She felt safe with him.\n\n\"When I was 7 years old my father was killed...\"\n\nMerle kept quiet and let her continue at her own pace.\n\n\"He was a Navy pilot, Lieutenant commander Nathan Coldwell. He was a volunteer as a Blue Angel. He was so proud of it... we all were.\n\nIn an air show his jet collided with another one mid-air. The other Lieutenant survived because he ejected in time but my dad didn't make it. I always loved going to the show. That day I convinced some of my friends to go see him. I remember every detail, how the air smelled, what I was wearing, the horrified expression on my mother's face... So ever since then, I have the same nightmare, hence the lack of sleep.\"\n\nThere it was. The whole truth.\n\nShe was surprised she didn't hold back, there were very few people who knew that about her. Layla looked at Merle and was relieved when she didn't see pity in his eyes.\n\nHe reached for her hand under the covers and instinctively kissed the back of it; he rested it on his burly chest.\n\n\"What was he like?\"\n\nLayla smiled at the memory. \"He was funny and sweet. He always had these great adventures to take me on. Whether we were pirates, cops and robbers or astronauts; we always had fun. We didn't need much but always had the best time.\"\n\n\"And your mother, how did she handle it?\"\n\nLayla's expression turned solemn. \"Dad was the center of our universe. When he passed, my mom just gave up. She didn't know how to cope on her own... She took to drinking and that quickly moved to drugs. She's been sober for 6 years now... which is great. But as a kid I had to grow up really fast. I had to be my father, my mother and take care of her all before I hit puberty.\"\n\nMerle still hadn't said anything in response but he pulled her by the hand until she was lying in the same lounge chair as he was. She was partly lying directly on top of him. She snuggled and laid her head on his strong chest. He had a fresh masculine scent that calmed her. Her heartbeat synched in harmony with his.\n\n\"It took me a year to let my ex, Pierre, know about my past...\" Layla whispered. \"And how is it that I just told you my deepest darkest secrets and I don't know anything about you?\"\n\n\"Add good listener to my growing number of irresistible qualities.\"\n\nLayla smiled. She muffled a chuckle into his shirt. She slowly moved her head and propped her chin up. There was a chill in the air but his chest was warm and comforting.\n\nMerle lightly traced a finger down her nose as he observed her.\n\n\"So all these years you've had to be so strong... all by yourself?\"\n\nLayla shrugged. \"I just did what I had to do.\"\n\nMerle sighed. \"Do you forgive her?\"\n\nLayla cleared her throat and let out an uncomfortable laugh. \"You get right to the point don't you?\"\n\n\"I try to.\"\n\nLayla sighed. \"I do forgive her,\" she said pensively. \"My mother is all I have left so I should forgive her... but it's easier said than done.\"\n\n\"It'll happen when it supposed to happen.\"\n\n\"You seem to know what you're talking about.\"\n\n\"Something like that,\" Merle whispered.\n\n\"Tell me about you... anything.\"\n\n\"What do you want to know?\" Merle asked already formulating his back-story.\n\n\"Well... How old are you?\"\n\n\"35,\" he said without missing a beat.\n\n\"Really? I thought you might be a little older.\"\n\n\"Are you calling me old, little girl?\"\n\nShe shook her head and chuckled; although somehow she found herself aroused by his words.\n\n\"Anything else?\" Merle asked patiently.\n\nLayla sensed hesitancy as he spoke but continued. \"Ever been married?\"\n\n\"Nope.\"\n\n\"What do you do for a living?\"\n\n\"I'm a retired marine.\" Not exactly but close enough, he thought.\n\n\"A marine... really? I wouldn't have pegged you for a marine.\"\n\n\"Well I wouldn't have pegged you for a navy brat either.\"\n\n\"Hey!\" Layla playfully smacked his shoulder.\n\n\"Ok, so you're not a brat?\"\n\nLayla rolled her eyes and pursed her lips. \"No, I am not a brat.\" She smiled and continued, \"Ok so what else? You were a marine, and?\" It was beginning to feel like pulling teeth to get him to talk.\n\n\"Like I said, I served my country. But like many soldiers, you leave pieces of yourself there. When I came home, it wasn't the same. My family kept trying to make me open up. But that will never happen because if they knew, even a little, of what I went through they... they-\"\n\n\"Wouldn't be able to sleep either.\" Layla finished his thought.\n\nMerle cleared his throat. \"Right. And I find myself having to pretend I'm something I'm not for their sake,\" he admitted. He was surprised how true that statement was.\n\nLayla rubbed his chest lightly.\n\n\"I don't know why I feel so drawn to you,\" she confessed.\n\n\"My charming personality and good looks of course.\" Merle chuckled and Layla followed along. There was an innocent tinkle in her laughter that held his interest.\n\n\"You have a nice laugh...\" He gazed into her eyes to capture her response.\n\n\"You're beautiful, you know that?\"\n\nLayla smiled shyly but slightly shook her head. \"Ah, you're just saying that.\"\n\n\"No I'm not.\" He whispered. His rough thumb traveled under her cheek bone while his four fingers rested at the nape of her neck.\n\nTwo solitary tears fell one after the other from her eyes. They collided with his large thumb still stroking her cheek. She gave him a sad smile. He pulled her hoodie over her head as if shielding her vulnerability from the world... he would be the only one who could see her.\n\n\"And so brave... you're so beautiful and so brave.\" He said as he continued caressing her cheek.\n\nLayla sighed, \"You make me believe you.\"\n\nMerle brought her face towards him while he possessively held on to her. Her face met his willing... yearning to taste him again.\n\nTheir lips met in greeting as if they were meant to fit perfectly, melded into each other. His hands settled on her neck and her waist, completely overpowering her. Layla's tongue caressed his, while he expertly delved deeper into her mouth. His lips were soft yet firm. She let out a surprised moan.\n\nThere was a spark that ignited her very soul... and dragged hope right out of her. Hope for joy, hope for love, and hope for inner peace.\n\nWhen their lips parted, they were out of breath. Their hearts beat erratically.\n\nMerle felt himself harden painfully under his thick layers. He had to change the mood quickly before his dick exploded.\n\n\"So what plans do you have for the rest of your day off?\"\n\nLayla was in a daze from his kiss. \"Huh? Oh, nothing really. I was just going to spend the day reading and relaxing.\"\n\n\"Have dinner with me.\"\n\nLayla was surprised how easy it was to accept. She had come to the realization that she felt something inexplicable toward Merle. And whatever it was, she wanted to explore it. She didn't want to be afraid because he was different; she just wanted to be happy. She had dated gorgeous men before and they all left her hurt and empty inside so maybe Merle was exactly what she needed.\n\nWhen she saw him, she didn't see an unattractive older white man; she just saw Merle... her Merle.\n\nMerle told her to be ready by 6pm for dinner. They would go out on the town.\n\nShe decided to wear something flirty and sexy. She wore a white halter dress with a blue band at the waist. She didn't wear a bra because of its plunging back. She hoped he approved. Her soft makeup enhanced her alluring features. She chose to wear silver dangle earrings and an ultra-thin necklace. She gelled the ends of her short hair up to give it a slightly spiky look and it accented her graceful long neck.\n\nThey were to meet downstairs in the courtyard.\n\nMerle threw back a couple chugs of his favorite drink. The liquid courage happily scorched his throat all the way down. What was he doing with this girl? He was supposed to be focused; she was becoming a distraction.\n\nBut he just couldn't help himself. What the hell... fuck the consequences.\n\nLayla emerged and walked towards him. Merle blinked a couple of times and quickly became completely lucid and completely numb at the same time. Merle brazenly stared at her form; up and down he stared, as if memorizing every curve.\n\nLayla smiled radiantly at him. He actually cleaned up pretty good. He wore black slacks and a long sleeved white button up shirt. He was sitting on a bar stool.\n\nSilently, he called her to come with his index finger seductively.\n\nHe kept gesturing until she came to stand directly in front of his open legs. He then made a twirling motion with his finger.\n\nShe slowly turned around for his viewing pleasure. Just as he imagined, her sinful body was made just for him. Her breast were large but not overly so, they sat high up on her chest. Her back's touchable soft skin was completely exposed. There was a thin sliver necklace that dangled down her spine; it was nestled between her shoulder blades. The slope of her neck begged to be kissed. Her small waist tapered off into her womanly hips and ended up on her round plump ass.\n\nShe caught his steady gaze and felt herself get wet. She wondered what he was thinking. Her nipples became hard and swollen, pointing sharply through the fabric. She felt the heat of embarrassment flutter through her cinnamon colored skin. But she somehow wanted him to see how he affected her.\n\n\"Damn.\" Merle cleared his throat. He got up slightly in a trance and gave her a simple kiss on the cheek.\n\n\"You look beautiful.\" He offered her his arm.\n\nLayla smiled and said, \"What a gentleman.\"\n\nMerle chucked. \"Not even close, sweetheart.\"\n\nThey drove to a seaside restaurant called Dionysus. People were bustling coming and going. There was a lot of laughter and loud chatter. They were seated in a round booth towards the far end in a quiet corner.\n\nAfter light conversation and a couple glasses of wine, Merle put his arm around the beauty by his side.\n\nShe fit perfectly in the crook of his arm. Layla felt flushed with heat, she didn't know if it was from the wine or from being held by him.\n\nShe was relaxed.\n\nShe wasn't thinking about the things she needed to do or tasks she needed to delegate, she was just there with Merle... her Merle. She quietly observed him. He was like a big teddy bear with a sexy predatory gaze.\n\n\"Are you having a good time?\"\n\nLayla smiled and nodded. \"I am. You?\"\n\nHe nodded as the waiter approached with their meal and they ate in comfortable silence. Merle looked at her from the corner of his eye. She was just so damn beautiful. And she was somehow attracted to what he looked like in this disguise. He couldn't understand it. He wondered how she would react if she saw what he really looked like.\n\n\"Sooo.... how does an ugly bastard like me, end up on a date with a gorgeous woman like you?\" He asked between mouthfuls.\n\nLayla smiled at him and shrugged. \"I think you're too hard on yourself. I like the way you look.\"\n\n\"Right, sure you do.\"\n\n\"No. Really I do.\" She slid toward him and purred. \"I find you to be so sexy.\" She bit her lip. \"I love a little extra something to work with.\"\n\nMerle looked at her expectantly. \"Come again.\"\n\n\"I've always had this white daddy fetish... and you're just the man to help me out with that.\"\n\nMerle's mouth dropped open.\n\nLayla busted out laughing. She was laughing so hard, you could probably here her throughout the restaurant. Tears ran down her face as she continued to giggle.\n\nMerle chuckled, \"Ok, ok I see. So you're using me?\"\n\nLayla's laughter subsided but she still had the biggest smile on her face. \"No... not yet.\"\n\nMerle narrowed his eyes and his gaze turned predatory. Suddenly he kissed her. He muffled a groan and continued to feast on her lips. His hands traveled everywhere throughout her body. She was on fire... and she wanted more of his flame. Her small hands moved toward his pants.",
        "That touch brought Merle back to reality.\n\nHe couldn't let her feel him up because his cock was buried under his thick body suit. Imagine her surprise...\n\nHe softly grabbed her hand and kissed the back of it.\n\nWhat the hell was he thinking? He couldn't continue this charade. He had to tell her the truth. He was sure she could be trusted with the secret. But when she found out the truth, he could risk losing her...\n\n\"It's ok Merle; I want to be with you. You don't have anything to feel ashamed of.\" Layla incorrectly assumed Merle was self-conscious because of his body.\n\nMerle sensed the opportunity and took it.\n\nDistractingly he kissed her softly and peppered kisses toward her cheek until he reached her ear. He tenderly sucked her earlobe. In response Layla felt herself gushing wet.\n\n\"Later, sweetheart... I promise.\" He whispered hoarsely.\n\nLayla shuttered and sucked a breath in as her body vibrated and spasmed. He hadn't even touched her and she was on verge on cumming.\n\nSomehow they gathered themselves together and walked out hand in hand.\n\nThey decided to take a walk by the pier to get some fresh air. It was a popular spot for locals and tourists, but at the moment it was deserted and dark.\n\nThe streetlamps stood guard and lit their path as they strolled down the boardwalk. The fresh sea air was cool and calming as the crashing waves resounded confidently. Merle's arm curved around Layla's shoulders protecting her from the chill.\n\n\"Hey look! It's the asshole I was telling you about.\" A voice called out in Greek.\n\n\"Where?!\" Two voices said in unison.\n\n\"And that stuck up bitch is with him.\" He whispered.\n\nNico and four other men emerged from the darkness. He was obviously tipsy but his friends looked completely lucid.\n\n\"It's because of you motherfucker! You got me fired!\"\n\nMerle and Layla looked at him in confusion. Merle understood what he said but was confused by what he meant. And Layla was just confused because she didn't understand Greek.\n\n\"What do you want Nico? You're not making sense.\" Merle said as he slowly moved Layla behind him.\n\nNico angrily said, \"Someone told the tailor we had gotten lost and that's why we were late for the tuxedo fitting...\"\n\nMerle looked at him impassively and shrugged his shoulders. \"So what.\"\n\n\"The tailor is my uncle you asshole! He knew I was lying and I only had one more chance to prove myself. And now I'm fired.\"\n\n\"Well that's your fault isn't it?\" Merle said.\n\n\"No fucker that's your fault. I should kick your fat ass and embarrass you in front of your little girlfriend.\"\n\nMerle calmly sighed. \"Nico, you're drunk. Why don't you go home and sleep it off, huh?\" This guy was already grating Merle's patience. Although he was focused on Nico; he had already sized the other men up. He saw one of them had something long in his hand, while the other had a pipe which he probably just found on the street.\n\n\"Umm Merle, maybe we should just get out of here.\" Layla whispered in a concerned voice.\n\nNico stepped up to him and raised his finger in his face.\n\nBut before he uttered a word Merle said, \"Get your finger out of my face. And don't be stupid enough to touch me.\"\n\n\"Why- don't- you- make- me?\" Nico said as he poked Merle's chest after every word. Merle quickly grabbed his finger and twisted it. It made a distinct popping sound right before Nico screamed in agony.\n\n\"You broke my finger, you motherfucker!\" He screamed and hunched over, inspecting his hand.\n\nMerle seemed un-phased, \"I warned you.\"\n\nBy this time the other men were forming a circle, ready at any moment to jump in.\n\n\"Here let me help you. You really shouldn't do stuff like that.\" Merle calmly said as he tried to help him.\n\nBut Nico let out a warrior's cry and bum rushed him. He was like a bull barreling toward him. Given Merle's large pot belly and squishy arms, Nico thought it would be like tackling a plush pillow.\n\nUnfortunately he wasn't counting on Merle's unmovable stance... that felt like he hit a brick wall. Nico bounced back, fell on his ass and let out a loud groan.\n\n\"So predictable.\" Merle shook his head and chuckled. He looked over his shoulder and smiled at Layla.\n\n\"You ok, sweetheart?\"\n\nLayla's mouth hung open at the scene but nodded in reply.\n\n\"Why don't you do me a favor and go stand over there? I'll be there in a minute.\" Merle said like it was the most normal thing in the world.\n\n\"No.\"\n\n\"Layla...\"\n\n\"No, I'm not going to leave you alone with these thugs.\"\n\n\"Trust me.\"\n\nLayla glared at him but realized there was no convincing him. She muttered something under her breath but walked over to a safe distance. She was genuinely concerned Merle would get hurt.\n\n\"She must be blind and a stupid bitch to be with your ugly ass.\" Nico ground out through clenched teeth.\n\n\"What... did you just say?\" Merle's tone was serious as he spoke in English.\n\n\"I said your little girlfriend is a stupid... blind... bitch...\"\n\nWith lighting speed, Merle's right fist collided into Nico's left cheek while his left fist wasn't far behind as it struck his right side. Nico didn't even have time to form an attack because Merle's right fist barreled into him again and that was it...\n\nNico's whole body spiraled into the direction of the hit; his eyes fluttered up and his whole body involuntarily fell to the ground with a loud thud.\n\n\"That's what I thought.\" Merle said. He looked up and saw the men completely confused at the scene. Nico didn't even get one punch in and was already out cold.\n\n\"Anyone else?\"\n\nTwo of the men looked indecisive while the other two were ready for their turn. A tall thin man with brown hair stepped forward. He was carrying something that looked like a paddle; it must have been a rowboat's oar.\n\nMerle rolled his eyes. \"Really? This idiot... alright come on, I don't have all day.\"\n\nThe man started swinging the paddle at him. He kept swinging getting closer and closer to Merle's face... taunting him.\n\nMerle didn't move an inch.\n\nLayla flinched and partially covered her face as she thought for sure Merle would get his head bashed in.\n\nBut suddenly Merle grabbed it right out of his hands and gave him one good swing in the gut. As the man bent over, Merle quickly clocked him in the face and he fell back and was out cold.\n\nThe next contender was a dark haired man who was actually impressive in size. His bulging muscles would have made anyone run for the hills. He wore a tank top and his thick neck displayed his throbbing veins while his large fists were ready to crush anything in sight.\n\n\"Oh you? Ok twinkle toes come on.\" Merle taunted.\n\nThe man let out a sound that sounded like a growl.\n\nNo one knew how but in less than a minute, the man was on his knees begging for Merle to let him go. Merle was holding tightly to a pressure point behind his ear that caused maximum pain. Merle finally let him go and pushed him away.\n\n\"Go. And take your friends with you.\"\n\nThe last 2 men were already dragging Nico and the other man with them while the strong man followed in defeat.\n\n\"Oh my God Merle! What... How did you do that?\" She witnessed how he went through those guys without breaking a sweat.\n\nMerle shrugged. \"It's not a big deal, they were harmless.\" He said as he pulled her into an embrace.\n\n\"You are the most unexpected man I've ever met.\" She whispered.\n\n\"You have no idea.\" He mumbled before he kissed her. He needed to taste her lips since he found solace in them. He angled his head as he delved deeper. He held her tight and felt her squirm beside him. Their tongues continued to meld into each other... in their own erotic battle. He ran his hand down her back and rubbed her ass gently.\n\nMerle felt himself painfully harden. They needed to get back quickly. But before they left, he couldn't resist letting his hands roam freely on her chest. His thumbs lightly brushed her nipples. Layla felt a current ride through her while her pussy gushed in response.\n\n\"Let's get back sweetheart and do this right.\" His deep voice rumbled.\n\n______"
    ],
    "authorname": "partial2passion",
    "tags": [
        "romance drama",
        "black female",
        "disguise",
        "secrecy"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/duplicity-ch-04"
}