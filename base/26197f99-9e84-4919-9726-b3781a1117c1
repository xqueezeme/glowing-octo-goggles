{
    "title": "But Now One Soul",
    "pages": [
        "Disclaimers: The characters are my own creation. This is part 2 of \u201cTwo Halves, One Soul\u201d. This story picks up where the last one ended. Constructive criticism/feedback is much appreciated. \n\nA heartfelt thanks goes out to my beta reader. I couldn\u2019t have done this without your input, support, and corrections.\n\n~~~~~~~~~~~~~~~~~\n\n\nThe sleek black Harley hugs the turns on the busy streets. The figure clad in black leather with a black helmet and darkened visor is determined upon reaching her destination. Grateful for leaving work early, a sinister smile covers her face as she remembers calling the strawberry blonde informing her to be ready. A few more miles and she eases the bike into the driveway. Parking it, she takes long strides to the front door. Once inside, the helmet and jacket are thrown onto the couch. She takes the stairs to the second floor two at a time and enters the bedroom. \n\n\n\"Did you touch yourself?\" she asks the prone figure on the bed.\n\n\"No,\" is the response from the young blonde.\n\nThe dark figure kicks off her boots. She grabs the young woman's wrists and binds them together with the strip of cloth she pulls out of her pocket and brings them over her head. Forcing the woman's legs apart, she kneels between them and shoves two fingers into the exposed cunt.\n\nThe strawberry blonde jerks her hips off the bed at the intrusion.\n\n\"Hmm, you're nice and wet. What were you thinking about?\"\n\n\"You,\" she whispers through clenched teeth. She is so ready for this blue-eyed goddess to take her into the unknown. The long fingers move in and out in a rhythm that matches her undulating hips. \"Gods Jesse\u2026please\u2026take me. I\u2026can't wait\u2026any longer.\" \n\n\"Anything you want my dearest.\" She removes her fingers to unbuckle her pants. \"Roll over and get on all fours.\"\n\nDani obeys immediately. She leans on her forearms awaiting the ecstasy her lover will give her.\n\nJesse pulls out the cyberskin dildo from her pants and dons the cock with a condom. Inching her way forward, she touches the opening of Dani's sex with the tip of it. She snakes a long arm around the blonde's waist and reaches the wet aching nub with her fingers. At the onslaught of stroking it, Dani impales herself onto the cock. Dani climbs to her climax quickly, and just before she reaches the precipice, Jesse grabs her by the back of the hair with her free hand. The act intensifies Dani's entire being and shoves her over the edge.\n\n\"Oh\u2026 fuck\u2026 ah\u2026 aahh!\"\n\nJesse rides the waves with her until the young woman stops her hip movement. They lay down with Jesse still inside. Jesse wraps her arms around her lover as her breathing calms. The tall woman then pulls out. Dani rolls over to give her a passionate kiss.\n\n\"Hmm, I love you Jesse.\" She continues her kisses along the distinguished jaw line and down her neck.\n\nJesse removes the binding from the wrists. She tosses the cloth to the floor. With a loving gentleness she rubs the wrists to make sure the circulation is flowing evenly. She then removes the rest of her clothing including the strap-on. Returning to the bed, she lies next to her lover on her stomach.\n\nDani straddles the back of the dark woman's thighs and begins a firm massage of the strong shoulders. Jesse relaxes under the ministrations. After some time, the massage becomes erotic, igniting the fire at her core. The tall woman rolls over and pulls her down for a kiss. Tongues dance slowly. A moan escapes Dani's throat.\n\n\"I need to have you again.\" Jesse says in a sultry voice.\n\n\"But I want my turn,\" Dani responds with a playful pout.\n\n\"Then let's sixty-nine,\" she answers in a whisper.\n\nA fire glows in those emerald green eyes. Dani licks her bottom lip and smiles. She turns around quickly to face the damp black curls of her lover.\n\nJesse spreads her legs for the young woman while she inhales the sweet scent that is Dani. Grasping the buttocks firmly, she pulls the wet blonde cunt to her mouth. Finding Dani's nub she licks it in long steady strokes.\n\nDani arches her back while moaning then buries her face in Jesse's dripping pussy. Locked around each other, hips begin to buck. The room is filled with moans and guttural groans. Jesse reaches the precipice first and before falling over the edge she plunges two fingers in Dani's sex, rapidly pumping in and out. \n\nDani momentarily breaks contact on Jesse's nub and screams. \"God\u2026 fuck.\" She returns to her task and they ride the crashing waves together.\n\n*************\n\n\nSpent and sated for the moment, they lie in each other's arms. Jesse begins dozing when suddenly she feels something cold and wet touching her arm. She turns to see a black nose and bright hazel eyes looking at her with that 'I'm so cute' face. \"Hi Arty. Were you playing outside?\" The ten-month-old Shepherd wags her tail and playfully pushes her snout onto the bed to touch Jesse's arm again. The tall woman reaches over and scratches behind her companion's ear.\n\n\"She sure is growing by leaps and bounds,\" interjects Dani.\n\n\"Yep. Soon I'll bring her to the clinic more often. You know, it's been rather simple in training her. I'm actually surprised. I almost wonder\u2026\" She looks into Arty's eyes.\n\n\"You wonder what?\" Dani looks from the Shepherd to her lover. \"You think she has a human quality about her.\" It wasn't a question but more of a confirmation for Jesse's thoughts.\n\n\"Yeah, or that\u2026 it's\u2026 Tommy's spirit inside her.\" Jesse looks at her mate. \"I know my thoughts are crazy.\"\n\n\"Well\u2026\" She rolls her eyes playfully. \"I agree that there is something about Arty. Sometimes I get the feeling she understands what we're saying.\" She lays her head on Jesse's chest. \"See? Now my thoughts are sounding crazy.\"\n\n\"Nah, you're just crazy, period. Right Arty?\" Jesse says sarcastically. Artemis wags her tail furiously. \n\n\"Hey,\" Dani responds with a swat to the dark woman's hard stomach.\n\n\"What would you like to do tonight?\" Jesse asks changing conversation.\n\n\"Are you asking me or Artemis?\" \n\n\"Ha, ha. You of course, unless\u2026you\u2026prefer I go out with her?\" She points to the Shepherd. \"Well, anything going on at the Exit tonight?\" \n\nThe Exit. One of the local S & M bars that hosts a wide mix of folks from all over. Not necessarily a private club, just a bar holding weekly \"play\" events that are usually light in nature. It\u2019s a fun place to go when you want to keep things low maintenance. \n\n\"There is a boot licking contest tonight.\" Jesse says with an arched eyebrow. Over the past couple of months, she has been amazed with Dani's sense of adventure and enthusiasm in such \"games\". I love that we can engage in such play, and grateful it's not a desired lifestyle for either of us. Ugh, that would be so draining. I don't know how others who take their S & M more seriously do it, but good for them. The occasional adventures are enough for me.\n\nDani looks at her to communicate. I love engaging in those so-called 'games' too. You bring out the primal urges in me. Jesse gives her a lopsided grin. \"I think that would be fun. How about dinner beforehand at that Italian restaurant you told me about.\"\n\n\n\"You mean Club Lucky?\" The tall woman asks as she stretches.\n\n\"Yeah, it's not formal wear is it?\" Dani asks realizing leather gear isn't accepted everywhere.\n\n\"I think we'll be fine.\"\n\n******\n\n\"Jesse, have you seen my corset?\" Dani pilfers through the dresser drawers to no avail before checking the closet. \"Never mind, I found it.\" \n\nThe tall woman walks into the bedroom and leans up against the doorframe with her feet crossed at the ankles. She is wearing blue jeans, black leather chaps, black biker boots, black T-shirt, and a black leather vest. She watches her lover get into the corset. Naked breasts sway each time the young woman moves. Jesse's mouth goes dry as she gazes at the beautiful young body clad only in thigh high black stockings, and black lace panties with a matching garter belt. \"God, you're gorgeous.\" \n\nDani spins around as she clasps the last hook on the black leather corset. Her breasts are pushed up and held firmly in place. \"Have you been watching me?\" she asks with a smile.\n\n\"Not for long. I can't help it. I love you, and I love your body.\" She wiggles a dark eyebrow.\n\nDani gives her lover a bright smile. \"I love you too, and your tall, strong, handsome\u2026\" she saunters over to the dark woman and rakes a finger down an exposed arm, \"\u2026and sexy body.\" Bringing her hand up behind her lover's neck, she pulls Jesse down for a kiss.\n\nThe tall woman encircles her arms around her, then slides her hands down to firm butt cheeks as she pushes a solid thigh between the smaller woman's legs.\n\n\nDani breaks the kiss. \"Now, now\u2026\" She moves her hips without thinking, reveling in the wonderful sensation against her sex. \"We have\u2026a\u2026date\u2026tonight and I need to finish getting dressed.\" With great difficulty, she forces herself to stop. Emerald green eyes glowing with passion lock with her lover's passion filled cerulean blue eyes. \"Later,\" she says in a whisper. \n\nJesse nods. Oh, yes, I have plans for you\u2026 later. She thinks, and Dani smiles in response. Jesse let's her go and decides to lie on the bed while Dani finishes dressing. She watches her under hooded eyes. \n\nDani dons the short and snug black leather skirt that falls on her thighs just above the edge of her nylons. If she bends over, the succulent naked flesh of her legs is exposed. She sits on the bed to pull on her knee-high black leather heeled boots and zips them up. Checking herself in the full-length mirror to make sure everything is in place, she puts on the last of her make-up then grabs her small black purse. She turns around to face her lover. \"Okay, I'm ready.\"\n\nJesse's eyes travel up and down the small body. \"Have I told you how beautiful you are?\"\n\n\"Yes, but I have not grown tired of it yet.\" She says with a sparkle in her eyes.\n\n\"Good, cause I'll be saying it a lot for the rest of our lives.\"\n\n\"Come on, my handsome knight. My stomach is beginning to growl.\" \n\n******\n\nAt the Exit.\n\nJesse closes the Pathfinder's door, crosses over to the passenger side and opens the door for the young woman.\n\n\"Will you help me with the collar and cuffs?\" Dani asks with a puppy dog look as she steps out. \n\n\"Sure,\" she responds with a smirk. Taking the collar, the tall woman lovingly straps it around the alabaster neck. She pulls the chain out of her vest pocket and clasps it onto the ring at the front of the collar. She then helps Dani adjust the buckle on the wrist cuffs. Azure eyes lock onto sea green. Jesse takes hold of the strap at the end of the chain and gives it a quick tug while wiggling her eyebrows. \"Ready?\"\n\n\"Yes\u2026 Master.\" Dani answers scrunching her nose with a smirk as she falls into the role. \n\nThe dark woman smiles in return and plants a light kiss on the sensuous lips before her.\n\nAs they walk into the club, Dani is being lead by the chain that Jesse had attached to her collar. The place is not overly crowded but crowded enough. The flashing lights keep time with the rhythm of the booming music. Jesse pulls the young woman close. She leans over to her ear. \"I'd like a Guinness. Get whatever you want.\" She pushes a twenty-dollar bill into the small hand, and unclasps the chain from the metal ring.\n\nJesse walks over to the stage area to find out more about the contest as Dani heads toward the bar. \u201cHi, a Guinness and a Midori Sour, please?\u201d\n\nThe burly bartender gives her a laughing smile for her politeness. \n\nShe returns to Jesse with the drinks. Giving the beer to her lover she says, \"I don't have a place to hold onto the change since I left my purse in the car.\" She places it in the outstretched hand.\n\n\"I found out about the contest.\" Jesse snakes an arm around the blonde's waist and speaks into her ear. \"They're going to use whip cream. Basically the first submissive to clean the boot wins. But their winning also depends on how good of a show they put on.\"\n\n\"You mean how much I gyrate my hips and show that I'm loving what I'm doing?\" \n\n\"Right. That's the gist of it.\" Jesse takes a drink of the beer. \"I didn't sign you up. I wanted to be sure of how you feel about the whole thing. It's okay if you don't want to do it.\"\n\n\"But I want to,\" Dani quickly says. \"I think it'll be fun. Plus, how can I resist whip cream?\"\n\nA dark eyebrow shoots up. \"You always surprise me, you know that?\"\n\n\"Gotta do something to keep you on your toes,\" Dani says teasingly. She then quickly feels the slap on her behind. Ouch! Damn. She tries to shoot her lover a look but before she gets the chance, a soft pair of lips covers her own. \n\n\"Be nice, Dani.\" Her partner scolds playfully then walks away to the table to sign her up. \n\n\nSince the contest won't begin until another hour, they pass the time on the dance floor. Their seductive dance lights a fire at Dani's core. She can't help but melt into the strong arms of the tall butch who owns her heart and soul. At the end of a song, they take a break to get another set of drinks.\n\n\nJesse watches her lover at the bar. God, I don't think I could ever get enough of her. She notices a figure approach Dani from behind. The young man looks like he could be a top, but his outfit indicates he could be a switch or just an idiot who doesn\u2019t really understand the s/m scene. Hmm, usually switches dress very neutral or at the least, lean towards one side or the other. He sports jeans, white T-shirt, black vest, wrist cuffs, and a spiked collar. She watches the brief interaction.\n\nDani walks off shaking her head with almost a laugh on her face. She hands Jesse the Guinness.\n\n\"What was that all about?\" Jesse asks casually.\n\n\"Oh, that guy? He wanted to know if I'd play with him. He wasn't taking 'no' easily. I told him three times I wasn't interested.\"\n\n\"You alright?\" Jesse asks with some concern not liking what she just heard. When someone you've never engaged with says 'no', it means 'no'. Everyone in the scene knows that, or at least should. Hmm, that guy must be a very fresh 'newbie'. He obviously doesn't know proper etiquette.\n\n\"Of course I'm alright,\" Dani says gently. \"It's okay, Jesse, he's harmless. I've met far worse guys in my time.\" She puts a hand up to the dark woman's chest.\n\nIce blue eyes meet emerald green. \"Didn't mean to get so\u2026\"\n\n\"Protective?\" She smiles.\n\nJesse returns the smile. \"I just don't like that he didn't understand the meaning of 'no'.\"\n\n\"Ladies and gents, slaves, submissives, and respective masters\u2026\" The male voice is heard loudly as the music quickly dies down. \"Tonight we have a special treat for you. It is time for our boot licking contest.\" The crowd hoots and hollers. \"Will all of those signed up to do the licking, please line up next to me.\" \n\nThe crowd roars again as men and women begin filing into line. \"Now in the past, the winner is the one who finishes first, but tonight we want to play a little differently. For tonight, the winner is the one who cleans up the best and shows us the best.\" Hollers and screams from the audience just about bust Jesse's eardrums. \n\nThe speaker motions with his outstretched arms for the crowd to hush. \"Okay, now will all of the those who will be on the receiving end of the licking, please come up to your respective partner. And all the lickers need to be on their knees.\"\n\nJesse saunters over to the young blonde. From Dani's position, she notices for the first time this night that Jesse is packing, and she finds the bulge in those blue jeans to be enticing. Licking her bottom lip, she doesn't notice that Jesse picks up where she is staring.\n\n\nThe tall woman thinks for a moment. I figured you knew I'd be packing. Guess this is a surprise. \n\nIt sure is a surprise, Stud. Dani communicates in return.\n\nJesse stands with her feet shoulder width apart and hooks her thumbs behind the leather belt of the chaps. Watching Dani in such a submissive position, resting her firm butt on her heels and her hands on her lap makes the tall woman's mouth dry. She wishes she had her Guinness with her at that moment.\n\nA muscular 'gym bunny' of a man wearing a leather collar and matching leather thong, comes up on stage with two cans of whip cream. He begins spraying a generous amount on one boot of each person standing. The voice of the middle-aged man comes out again from the microphone over the speakers. \"Alright lickers, you all know what's to be done. On your mark, get set, go.\"\n\nDani spreads her legs shoulder width apart. She gently places her hands on the dark woman's thighs as she locks onto azure eyes. Sliding her hands down, she bends completely over to begin the licking. Her rear partially faces the audience and the snug leather skirt inches its way up her thighs to give the crowd a lovely view of the lace panties between her legs. She rocks her hips back and forth to simulate doggie-style sex and the crowd goes wild. Upon hearing their cheers, she decides to spread her legs as far as they would go, lifts her head, and arches her back as if she was in the midst of ecstasy. She meets her lover's eyes.\n\nJesse's mouth just about drops at the display in front of her. She attempts to keep a straight face but has a hard time. The tall woman watches Dani return to the task of cleaning her boot with long broad strokes of her tongue. After each stroke Dani lifts her face to sensually slide the whip cream into her mouth with her tongue and swallow. Jesse is lost watching this woman on her hands and knees. The cream is now all gone, and Dani begins to slither up her lover's strong thighs. She stops right at the bulge in the jeans. Opening her mouth seductively, her teeth grab at the dildo under the denim. Jesse feels the pull forward, and just about falls onto the stage to ravish the small woman in front of everyone. The crowd hollers and stomps their feet.\n\nThe announcer chimes in. \"Well, it looks like everyone has chosen the winner. Jesse and Dani win tonight's prize.\" He hands Jesse an envelope. \"Thanks to all of you for participating.\" People are then escorted off the stage.\n\nJesse takes a seat on the edge of the platform and runs her hand through her hair. Whew. That was fucking something.\n\nDani sidles up next to her. \"I take it you were pleased\u2026 Master?\"\n\nTurning her head to face the blonde, she says, \"Very.\" She gives her a searing kiss. \n\nThe young woman knows her lover's response is not from them having won. She feels exhilarated at having done a good job. It was her first time engaging in such an activity in public, and they are both very surprised at how well it turned out.\n\n\n\"I guess we should see what our prize is.\" She tears open the envelope and reads the contents.\n\n\"Well?\" Dani asks curiously.\n\n\"We\u2026you just won us a paid weekend stay at the Wilderness Resort in Wisconsin Dells.\"\n\n\"That's awesome. Kris has told me about the Dells. This'll be exciting.\" She reaches around and cups the bulge in her palm.\n\nLooking down at the small hand fingering her cock, she asks in a sultry voice, \"You ready to head home? I have something to give you.\"\n\n\"Oh, yes,\" is Dani's purr like response.\n\n******\n\n\"Take my clothes off without touching me in any particular places.\" Jesse states calmly while standing at the edge of the bed. The back of her knees is barely touching the mattress.\n\n\"Yes, Master.\" Dani begins with the vest, T-shirt, and sport bra. She then unbuckles the belt of the chaps, unzips the zipper along the sides, and as it falls she places it off to the side where there will soon to be a pile. Resuming her task, Dani undoes the jeans and slides them down. She gently motions for Jesse to sit on the bed. As Dani kneels, she unlaces the boots, pulls them off along with the socks and then removes the jeans completely. With her eyes downcast, she asks, \"Do you want your shorts off too Master?\"",
        "\"Later,\" comes the response. \"Now put on some music and strip for me. Take off everything except for your collar and cuffs. And you are not allowed to touch yourself.\"\n\n\"Yes, Master.\" She walks to the stereo and puts in a burned CD of mixed music Jesse once made. Strutting back to the bed, she begins her seductive dance. Her boots are removed first and then the skirt. Loosening the garter belt to join the pile of clothes on the floor, she comes close to Jesse, places a foot on the edge of the bed and begins to slide down the nylon.\n\nJesse clearly sees the dampness of the lace panties at the blonde's core. She licks her bottom lip in anticipation of tasting Dani's essence on her tongue. The young woman almost loses her resolve from seeing the pure lust in Jesse's eyes. \n\nDani finishes with the nylons and begins unhooking the corset until it falls to the floor. Her full breasts bounce a moment after being released from their confines. She turns her back on her lover to remove her panties. Thrusting her rear almost into Jesse's face, she hooks her thumbs in the elastic band and slides them down. Upon seeing the swollen wet lips in front of her as Dani bends over, Jesse could no longer restrain herself. She slides a hand up the back of the tantalizing flesh of the thigh in front of her and two fingers enter the folds of the small woman's cunt.\n\nDani loses her concentration. \"Oh\u2026god.\" Without realizing it her hands reach up to her breasts to knead them. Suddenly her head is jerked back.\n\nJesse has her by the hair. \"What do you think you're doing?\" she hisses viciously in the blonde's ear. With her free hand, she searches quickly in her vest for the chain.\n\n\"I'm\u2026 I'm\u2026 sorry\u2026 Mas\u2026\"\n\n\"NO. There is no 'sorry'. You were given clear instructions. Now you will face the punishment.\" She spins her victim around. \"Hold out your hands,\" she commands. Jesse threads the chain through the metal ring of each cuff and then through the small leather loop at the one end of the chain. With the other end of the chain, she clasps the hook onto the metal ring of the collar. She jerks the young woman onto the bed. \"On your hands and knees.\"\n\nDani obeys. She begins to tremble when Jesse leaves her side without a further word. The sea green eyes search around without actually moving her head for fear of incurring the dark woman's wrath. Not seeing her tormentor, she tries to stay as still as possible. \n\nHearing some rustling in the background and then all is quiet, she wonders if Jesse left the room. Something cold and wet touches the tight pucker of her ass. The movement of a thumb massages her opening and she relaxes into the sensation of it. A slight moan escapes her lips and slowly the thumb is replaced by something harder. The first ring of muscles contract in order to prevent the foreign object from entering.\n\n\"Relax,\" comes the soft voice of her predator. \"Push out Dani.\" \n\nShe does so, and the object slides in, filling her. Thinking that her punishment has been forgotten, she revels in the sensations she receives from the butt plug. Suddenly the chain is roughly jerked down. Her eyes snap open.\n\n\"Why are you going to be punished, Dani?\" she asks through clenched teeth upon the young woman's ear.\n\nStammering to find the words, she says, \"Because\u2026I\u2026I\u2026touched myself\u2026and\u2026was told not to beforehand.\"\n\n\"That is correct.\" \n\nSlap.\n\nImmediately Dani registers that her punishment is with the paddle. Tears form in her eyes at the first strike on her butt cheeks then the warmth overcomes her.\n\nSlap.\n\nShe flinches. Not the initial contact with the paddle but the sting afterwards is what hurts. Dani tightly closes her eyes to brace herself for the next one.\n\nSlap.\n\nThis time the paddle gets nearer to the butt plug. The vibrations bring a new sensation to the small woman's tight ring of muscles around the object. She moans briefly at the feeling.\n\nSlap. Slap. Slap.\n\n\"Ah\u2026 aahhh.\" A tear rolls down her cheek. Her eyes are crossing. Not expecting the quick succession of strikes and the burning pain following along with the vibrations arousing her.\n\n\"Spread your legs.\"\n\nDani obeys quickly.\n\n\"Further.\" She feels the voice at her ear. \"As far as you can get them.\"\n\nHer sex is fully exposed. She feels a trickle of her wetness on her inner thigh. Suddenly\u2026\n\nSlap.\n\n\"Oh, fuck.\" She cries out. The paddle strikes her swollen lips.\n\n\"You like that, don't you?\" Jesse asks. \"You like it when I punish you.\"\n\nSlap.\n\n\"Fuck\u2026yes\u2026yes.\" Dani exclaims.\n\nSlap.\n\n\"Ohhh\u2026make me come\u2026please.\" She pleads to her dark lover and pushes her ass up higher.\n\nSlap. Slap.\n\n\"Ohhh god Jesse.\"\n\nThe tall woman immediately slides herself underneath her prisoner and takes an aching nipple into her mouth. Biting and sucking hard she strokes the rock hard clit with her thumb. Dani's hips begin to buck. After a minute the clit stroking comes to a halt. Dani whimpers. Jesse latches onto the other nipple then slowly guides the blonde onto her cock. Being exquisitely filled Dani rides' the cock hard while Jesse bites her shoulder. Reaching the peak of her climax, she throws her head back in ecstasy to scream out Jesse's name over and over. She collapses on the hard body beneath her panting for air.\n\nJesse caresses her back drawing idle patterns with her fingers as her breathing returns to normal. She then gently rolls the small woman from on top of her and places a soft kiss on small lips. \"Let me get some salve to put on you.\" \n\nShe hops up to ruffle through a drawer. Returning to the bed having removed the strap on and shorts, she sits down. With gentle fingers she extricates the butt plug, and removes the chain, collar and cuffs. She leans over facing her love, and rubs a thumb softly over Dani\u2019s tear-stained cheek, and then places tender kisses over the same area. She then applies the salve to Dani's reddened butt cheeks and outer nether lips. \n\n\nThe feeling of the tall woman's fingers brings on a stinging sensation at first, but the coolness of the salve calms her. Once finished, Dani turns to her lover. \"Thank you\u2026\" She brushes a finger along the sculptured cheek. \"For everything. You\u2019re wonderful. You notice every detail. I love you for that.\"\n\nJesse gives her a lopsided grin. Suddenly, her lips are assaulted with a passionate kiss. Dani pushes the dark woman back onto the bed. \"I want you.\" Green eyes are smoldering. \"I need you\u2026\" She straddles Jesse's hips. \"To taste you.\" Dani's mouth nips along the long neck below her. She flicks her tongue at the pulse point and Jesse shivers. She cups the dark woman's hardened pierced nipples rubbing her palms into them as she leaves a love bite on Jesse's left shoulder.\n\n\"God, Dani. I\u2026can't take much\u2026more.\" Jesse's already heightened arousal from the spanking and seeing and feeling the young woman impale herself onto the cock was enough to bring her over the edge earlier.\n\nDani slides down the lean muscular body and stops to flick the pierced nipples with her tongue before continuing on her trek. Reaching Jesse's curls she buries her face into the wet lips.\n\nJesse's back rises from the bed at the delicious contact and she undulates her hips. \nDani inserts two fingers at first, fucking fast then slows her actions to add a third finger. She matches the tall woman's rhythm. Sucking the nub into her mouth holding it between her teeth she strokes the clit with force as she feels Jesse's inner walls contract announcing her impending orgasm.\n\n\"Aahhh\u2026 Danielle\u2026 FUCK!\" Her hips rise once more before falling to the mattress. \n\n\nDani crawls up, taking her lover into a heartfelt embrace and just holding her there. Jesse is too weak to wrap her arms around the young woman on top of her but she is grateful for the embrace. After a couple of minutes she rolls them over onto their side. Dani snuggles into the crook of her neck and drapes a leg over the tall woman's hip. Jesse lays her leg between Dani's thighs and drapes an arm across her back. They fall to sleep. \n\n******\n\nThe brown and blond Shepherd wakes up from her short nap in the grass. The early morning sun warms her coat just the way she likes it. Hazel eyes look up into the sky after hearing a cardinal chirp. She decides to head indoor to see what her parents are up to and see if they'll feed her soon. \n\nWalking through the doggie door flap she heads to her bowl. No food yet, so she takes a drink of water. She sprints up the stairs to the bedroom. Upon entering, she sees them sprawled out on the bed. She cocks her head to the side listening intensely. The only sound is the calm even breathing. She reaches the bed and pushes her snout under the large hand at the edge of the mattress. A mumble is heard and she wags her tail. The hand does not attempt to move further. She pushes again. Feeling flustered, she paces back and forth at the foot of the bed. Her moans turn into whines and then to short quick howls. \n\n\"Okay, Arty, okay. I'm up. What's wrong?\" Jesse sits up rubbing her face. Artemis gets her front paws onto the bed seeking affection from her mother. Jesse grabs her head playfully and scratches behind her ears. She looks at the time. Ugh, 9:30am. \"So, you're trying to say you're hungry?\" she asks as she looks into those hazel eyes. Arty's tail wags furiously.\n\n\"I'm hungry.\" Says the sleepy voice from under the covers. \n\nArty's ears perk up upon hearing the voice. \"Arf,\" she barks once.\n\n\"You're always hungry,\" says Jesse. A pillow swings towards her head knocking her back onto the bed. She laughs. Arty begins turning round and round as she chases her tail with the excitement that everyone is up.\n\nJesse pulls the covers back a bit. Dani has her back turned to her. She leans over to kiss the small woman on the cheek. Wrapping an arm around her waist, she slides her hand down to blonde curls. Fingering them gently she hears a moan escape Dani's throat. She dips her fingers into the slick center briefly and then the contact is gone. \n\nDani turns around to see her lover sucking the essence off of those two fingers. She feels a flutter in her stomach watching Jesse do this.\n\nJesse looks at her with a sly grin and says, \"Is there ever a time when you're not wet?\" \n\nSmiling in return, she wiggles her eyebrows and shakes her head 'no'.\n\nArtemis barks once again.\n\n\"I had better get up. Bet she knows she's coming with me today.\" \n\n\"I'm sure she does.\" Dani responds.\n\n******\n\nIn the kitchen, Artemis goes round and round again knowing Jesse is fixing her favorite. Jesse smiles at Arty's goofiness as she puts down the bowl of Iams dry dog food mixed with a can of wet food.\n\n\"I know you love it when I mix wet food in there. You're such a goofy girl.\"\n\nArtemis barks happily wagging her tail from side to side then digs into her meal.\n\nJesse takes out some ingredients from the fridge to start breakfast. Grateful that the coffee timer was set last night, she pours herself a large mug of the brew and takes a gulp. \"Ah, elixir of the gods.\" \n\nShe begins beating a few eggs in a bowl, adding mushrooms, diced tomatoes and thinly sliced zucchini. Pouring the concoction into the already lightly oiled pan, she turns down the flames a bit. \n\nSuddenly arms come from behind her to wrap themselves around her waist. Small hands take hold of her pierced nipples through the T-shirt and tug on them a bit. Jesse has an intake of breath at the contact. She turns around giving the smaller woman a steamy kiss. They stop to catch their breaths. \"Well, good morning.\"\n\n\"Good morning,\" Dani says shyly. \"What are you making?\"\n\n\"Omelets and turkey sausage links. There's coffee.\"\n\n\"I'll have juice first.\" Walking to the fridge, she pours a glass of pine-orange banana juice. \"Hmm, I love this stuff.\" She decides to set the table.\n\nJesse slides an omelet on each of their plates and then a couple of links. She joins her lover.\n\n\"Looks like Artemis has eaten.\" She notices the Shepherd lying against the bottom cabinets near her empty bowl with a full belly. \"Mmm, I love it when you make breakfast.\" She puts another forkful of the omelet in her mouth. \"I really lucked out having a butch that can cook.\"\n\nJesse laughs and shakes her head.\n\nThe young blonde thinks for a moment. I better talk to her about my tentative work plans. Now or never --- and never is not an option, so here we go.\n\nJesse looks up at her with piercing cerulean eyes that indicate she knows something is up. \"What do you need to tell me.\"\n\nDani freezes a moment. Relaxing her shoulders, she says, \"I hate when you do that.\"\n\nA smirk crosses her dark features. \"Do what?\"\n\n\"Already know what my thoughts are.\"\n\n\"You don't hate it. You're just frustrated because I beat you to it.\" Jesse moves out of her seat to kneel right next to her lover. She strokes the soft cheek with a long finger. \"I can't help being so connected to you. You know I'm not purposely invading your thoughts, right?\"\n\nDani nods in understanding. Sea green eyes lock onto blue. I so love you Jesse.\n\nJesse smiles. And I love you. You are my very soul as I am yours. She brings up a small hand within her own to place a gentle kiss on the back of it. \"Now, what's up?\"\n\n\"Have a seat first.\"\n\nThe tall woman returns and grabs her fork to finish breakfast.\n\n\"I want to have a different job.\" Dani begins. \"I was thinking about quitting my position at Northwestern so I can devote my time to writing. But I do plan on at least working part-time, so that I don't deplete my savings.\" She pushes a sausage link around on her plate.\n\n\"I'm glad you're going to do more with your writing. I'm sure the short stories you've written so far will be a success.\" Jesse smiles as she gets up to pour another cup of coffee. \n\n\"Is that all you have to say?\" Dani asks hesitantly.\n\nJesse gives her a confused look. \"What else do you want me to say?\" Then it dawns on her that Dani is seeking some reassurance that her not making such a good salary will not hinder their relationship. The tall woman takes Dani's hand and pulls her up to stand. She wraps her arms around the small waist. \"There is nothing to be concerned about here. We're partners. I will support you in whatever you desire to do. Thanks for telling me of your plans. I appreciate being included in your thoughts; and there are no worries about finances. Okay?\"\n\nDani nods, and then lays her head upon Jesse's chest. Letting out a sigh, she says, \"Thank you\". She feels the top of her head being kissed.\n\n\"I better get dressed. I agreed to come in today to look over some patients' documents for Janice. But I'll be back soon and maybe we'll take Arty to the beach. \"\n\n******\n\nAt the clinic, Artemis makes it her job to greet all patients and respective parents with a happy-go-lucky bark and playfully wagging tail. The other employees comment that she is the best dog next to the late Tommy they knew long ago. \n\n\"Hey Arty,\" Janice the receptionist says. \"You sure are playing host today.\"\n\nArty responds with a bark, seeming to understand Janice\u2019s words.\n\n\"Give me your paw.\" Arty happily complies. \"Good girl, Arty. Here's a biscuit.\" Janice tosses it up in the air for the Shepherd to catch in her mouth.\n\n\"If you keep feeding her biscuits, I'm going to have to put her on a diet plan.\" Jesse leans up against the front office doorway with a smirk on her face. Taking the stethoscope off her neck, she places it inside the pocket of her white lab coat.\n\n\"She's a growing girl,\" says the middle-aged receptionist. \"She'll be fine.\"\n\nJesse shakes her head and laughs as she walks down the hall. Entering the back room, she checks on a four-year old Persian with a broken leg. \"Hey buddy, how you doing? Feeling better today?\" The heartbeat is strong and the cat is alert. \"I bet you can hardly wait to go home.\"\n\nThe door opens and enters a young Latino wearing scrubs. \"Hey Boss, I'm just checking up on the animalitos.\" \n\n\"Hello, Miguel. How are you?\"\n\n\"Good, good, thank you.\"\n\n\"And the Mrs.?\"\n\n\"Oh, her belly is getting big. She says she feels like exploding. It'll be another month before the baby is here. Otherwise she is doing great.\"\n\n\"That's good.\"\n\nJanice pops her head in the door. \"Jesse, there's a bloodhound with an eye infection in room two.\"\n\n\"Thanks.\" Jesse follows the receptionist.\n\nOpening the door, a very unhappy face looks at the tall doctor. \"Well, what do we have here?\"\n\n\"Hi Dr. Chandler.\" The gruff voice of the middle-aged man responds. \"Charlie is sick. I don't really know what's wrong but there's a lot of goop coming out of his eye.\"\n\n\n\"Hi Charlie, have you been missing me? Did you get yourself sick just to come and see me?\" The dog's tail wags happily. Jesse scratches behind his big floppy ears. \"Who's a good boy? Is Charlie a good boy?\" The tail wags again, but then Charlie lays his head down with a whimper. Jesse takes out her stethoscope to check the dog's heartbeat. \"How's he eating?\"\n\n\"Well\u2026 he's not been eating much. He'll nibble at his food and then walk away.\"\n\nWith a Q-tip, she swabs Charlie's eye of the excretion. \"How long have you been noticing this John?\"\n\n\"Well, Doc, I'd say a couple of days already.\" He runs a thick arthritis laden hand through his salt and pepper hair.\n\n\"I'm going to take this in the back to get tested. I'll be right back.\" She walks out and down the hall. Upon entering the back room, she sees Miguel cuddling a female Chihuahua who just got neutered. \"Hey Miguel, I need you to set this up for testing. Looks like Charlie the Bloodhound has an infection.\"\n\n\"Sure thing Boss. Charlie you say? I'll get everything ready for you. I don't know what Mr. Hoffman would do without his Charlie.\" He takes the specimen and sets it on a piece of glass. Turning on the microscope and grabbing other items, he then says, \"You know, Boss, sometimes I think those two keep each other alive.\"\n\n\"You're probably right,\" she chuckles. \"I'll be back later.\" Returning to the room, she says, \"Okay Charlie now for your favorite part of the exam.\"\n\n\"Aw, Doc, let the poor fella have some dignity.\" John speaks for his companion. They both hate the thermometer, even if Charlie is the only one on the receiving end of it.\n\nShe pulls the instrument out of the drawer and dips it into the large jar of Vaseline. \"Sorry, John. I need to make sure he isn't running a fever. You know I only do it when it's necessary.\" \n\nShe faces Charlie. Looking at the device in her hand, he groans and puts his head down again. She cocks her head to the side. Come on Charlie. You know I only want you to get well. The dog looks at her for a second then turns away. \"Okay, here we go.\" \n\nGrabbing Charlie's tail, she inserts the instrument as gently as possible. She keeps time on her watch then smoothly removes the device. With a paper towel, she wipes it. \"Hmm, a bit of a fever but nothing serious.\" Placing the thermometer in a jar of alcohol, she turns around and wipes Charlie's rear. After removing the rubber gloves to toss in the trash, she asks, \"How are his bowel movements?\"\n\n\"They look fine,\" he responds as he pushes his glasses up his nose with a thick finger.\n\n\"Charlie, are you going to let me look in your mouth?\" She rubs his chin to get him relaxed again. She inspects his teeth, and then opens his jaw. \"Hmm, nothing unusual. That's good.\" Washing her hands at the sink she says, \"Alright, John, this is what we're going to do. It seems we're just dealing with a viral infection. I'm going to give you an ointment to put in Charlie's eyes twice a day, morning and evening. It won't bother him. Also, I'm going to give you five days worth of Clindamycin. Give him the pill once a day in the morning and see if you can get him to eat right after otherwise the antibiotic will unsettle his stomach. Take him off his regular food and give him cooked white rice and ground beef for a couple of days. Just make sure you don't add any spices to it. I know how spicy you like your own stuff, but that won't help Charlie. Okay?\"",
        "John nods and chuckles at the warning of spices.\n\n\"You can call tomorrow to see about the lab results. I don't believe we'll find anything further, but I just want to make sure. You know how I am.\" She says with a lopsided grin.\n\n\"Oh, I know. That's why I keep coming to you and telling everyone I know about what a great vet you are. There is no one else around who cares so much for her clients and their owners.\"\n\n\"Thanks John. I had a wonderful teacher. Janice will have everything set for you at the counter.\" She reaches out to give him a firm shake of the hand. \"Have a good day.\" She then turns to Charlie. Holding out her hand, Charlie gives her his paw. \"You too Charlie, and you take care of John here.\" She scratches his head then walks out of the room. Heading down the hall to the back room, she wonders if Miguel found anything with the specimen. \n\n\nArtemis is at the other end of the hallway, watching her mother. Suddenly her ears shoot straight up, and she lets out a warning bark.\n\nJesse turns. \"What are you barking at girl? Are you being goofy?\" Looking at the Shepherd she shakes her head with a smile. She opens the lab door. Why do I smell gasoline? \"Miguel? I smell gas, what are you doing?\"\n\nThe lights of the room are off. The only movement she hears is of the animals in some of the crates. She tries the light switch to no avail. Walking over to the lab counter, she finds him slumped on the floor. \"Miguel?\"\n\nWhack. \n\nEverything goes black before her for a minute. She grabs her head to stop it from spinning. Bloody hell. What the fuck just happened? She opens her eyes slowly and notices a dark figure a couple of feet away with a container. Feeling the stickiness of blood on the side of her head, she struggles to get up without drawing attention.\n\n\"Hello, you fucking dyke.\" The figure moves towards her. \"Remember me? You ruined me.\"\nJesse looks, and in the semi-darkness of the room she makes out his face. Realization hits her. Oh, fuck.\n\n\"I see you remember. Now you're gonna pay. It took me a long time to find you but I did, and I'm going to ruin you permanently. And I'll find your bitch girlfriend too. When I do, I'm gonna fuck her good for a long time then slit her throat.\"\n\nJesse's rage got the better of her. Lunging forward she punches him square in the nose. He stumbles backward. She then throws a sidekick at his ribs. He falls into the counter with a thud. \n\n\"You stupid cunt.\" He goes to backhand her across the face and misses. She ducks in time and throws a straight punch to his groin. \"Aarrgh!\" He grabs his manhood as he falls to his knees.\n\nJesse heads for the door, and he trips her. Grabbing her by the neck, he smashes her head through one of the glass cabinets. The dogs in the room begin to bark from fear, and the cats screech and hiss. \n\nThe figure pulls a lighter out of his pocket and lights the waste paper basket. He throws it where he poured the gasoline. The room ignites immediately in flames. \n\nTrying to get a hold of her barring, she struggles to stand. Seeing the flames erupting, Jesse begins to frantically open the doors to all the crates. She grabs the handle to the main door again and then something solid encounters her arm. The intense pain shoots up to her shoulder. From the corner of her eye she notices the baseball bat, but too late when it strikes her leg. As she falls to the floor, she hears ferocious barking coming from the other side of the door and a scratching noise. \n\nSuddenly the door opens, and she sees a dog jump at the dark figure and another dog trailing behind. As her vision becomes blurry from the excruciating pain and the blood seeping from her head wounds, she calls out to Dani. I love you Dani. I'm sorry baby. Everything\u2026hurts. I\u2026love\u2026you\u2026my dearest. Blackness surrounds her. \n\nDani decided to surprise her lover at the clinic by taking her out to lunch. As she turns the corner, an intense heart wrenching pain clutches her chest. She hears Jesse's last words. The pain splits her heart and tears roll down her cheeks. \"Something's terribly wrong.\" \n\nShe guns the accelerator for the last two miles almost causing a couple of accidents. Jesse? Jesse, talk to me baby. Silence is returned. \n\nA police car notices the reckless driving so he turns on the sirens and chases her. Screeching her tires into the parking lot of the clinic, she and the officer see a dark gray cloud of smoke emerging from it. The officer gets on the radio to make sure the call has been made to the fire department and paramedics. \n\nSuddenly the fire trucks arrive at the scene. Seeing Janice out front, Dani runs up to her. \"What happened? Where's Jesse?\"\n\n\"Honey, they're in the back, Jesse and Miguel. John went after them but didn't return.\" The receptionist says frantically. \"We don't know what happened. A fire broke out somehow.\"\n\nDani yells out to the firemen. \"There's a rear emergency exit.\" She runs around the side of the building and jumps the fence. Others quickly follow. Horror stricken, she sees two prone figures. One clearly is Jesse. There are four dogs lying surrounding her in a circle. Artemis is directly on top of her mother's chest. A low painful howl is begun by Arty and the other dogs follow suit. \n\nMiguel is sitting in the grass holding his head while an older man tries to hold him upright. A bloodhound lies next to them. The other prone figure lies alone. \n\nShe runs to Jesse. The dogs look at her and begin to growl. Artemis let's out a bark and begins pushing the other dogs aside with her head. Dani falls to her knees to see her lover's bloody and swollen face. Pulling Jesse's unconscious body into her lap, she cries uncontrollably. Don't you leave me. Don't you fucking leave me. I know you can hear me Jesse. Please, I love you. I need you. Artemis comes and lays her head on Jesse's lap. Those nearby hear her low howl. \n\nThe paramedics come with a gurney to take the injured parties. The police begin asking questions to Miguel and the man with him.\n\n******\n\nGreen eyes flutter open to the bright lights in the white room. The heart monitor beeps normally. She lifts her head from the edge of the mattress where she fell asleep in the chair. The nurse smiles briefly at her then resumes changing the IV bag. Dani rubs her face with her hands, and asks, \"What time does the cafeteria close?\"\n\n\"At 7pm.\" The young nurse replies and walks out.\n\nDani traces her index finger softly over the injured woman's still face. She avoids going near the stitches above Jesse's temple and the ones along her jaw line up to her left ear.\n\nThe doctor walks in. \"She's a strong one.\" The middle-aged man says.\n\n\"Is she going to be alright?\" Dani asks with tears welling up in her eyes.\n\n\"I believe she will. She was fighting to be here, you know? While we were fixing her, her weakened heartbeat suddenly shot up. I take it there's something\u2026or\u2026someone important she doesn't want to leave.\" \n\nHe crosses his arms in front of his chest and casually taps his index finger on his mouth. Soft brown eyes look at her with gentleness. He smiles from the love clearly visible between these two. He then says, \"As you can see, she has a broken leg, broken arm, and a concussion. We were able to get the bits of glass out of her face and scalp. The stitches above her temple may leave a light scar. The gash was deep and she lost a lot of blood. Her arm has three breaks in it. Both the radius and ulna near her elbow are affected. I'm guessing a baseball bat or something similar used with great force did that. There is only one clean break in her leg affecting the femur bone. We reset her broken nose. She'll look like a raccoon for about a week.\"\n\nDani holds the sleeping woman's hand. \"Thank you for helping her.\"\n\n\"It's my job.\" He touches her shoulder. \"I'm sure you'll take good care of her from here.\"\n\nShe looks up at him and nods.\n\n\"I'll come by later to check on her.\" He walks out.\n\nBlue eyes open very slowly to small slits. The brightness of the room is stinging to her eyes. There is no way she could open them further especially with the terrible pounding in her head. She sees blonde hair. Dani is looking out the window at the sky. Hi Beautiful.\n\nDani shoots her lover a glance. \"Oh my god, you're awake.\" A tear rolls down her cheek. \"I've been so worried.\" She chokes on her emotions.\n\n\"Shh, s\u2019okay\u2026 I'm here.\" Jesse says in a raspy voice. She wipes at the young woman's tears with the thumb of her good left hand.\n\nDani takes the hand showering kisses on the palm.\n\n\"Can I\u2026have\u2026water?\"\n\n\"Yes.\" She pours a cupful of the icy water. Bringing the straw up to Jesse's lips, she holds the cup for her.\n\nThere is a knock on the door.\n\n\"Come in,\" Dani calls over her shoulder.\n\nIn walk Miguel, John, and a police officer.\n\n\"Hey Boss. Girl, you look like shit.\" Miguel chimes in.\n\n\"You don't look so pretty either.\" Answers Jesse. Miguel sports a head bandage and an awful black eye and bruising on the right side of his face.\n\nJohn interrupts. \"We're here hoping to get the whole story since the three of us each played a part in it.\" He sits down in a chair on the other side of Jesse. \"How ya doin Doc?\"\n\n\"I've been better, John.\"\n\nHe pats her shoulder. \"Ya think yer up for talking?\"\n\n\"Yeah,\" she responds.\n\n\"Alright, Miguel you start.\"\n\nMiguel scratches at his nose a moment, then starts, \"Well, I was in the back room examining a specimen that Boss brought in to me. I was looking into the microscope and taking notes. I didn't give it a second thought when the door opened. Oh, you know what? I had just come from being in the yard with one of the puppies because he had to go bad. I can only guess that the stranger followed me in through the yard door, I mean 'emergency exit'. So, anyway, this shadow came up behind me and I thought it was the Boss. As soon as I turned, I realized it wasn't and everything went black.\"\n\n\"Doc? I take it you came in next?\" asks John in his gruff voice.\n\nJesse nods. \"I went to the back room to see if Miguel had any results. As soon as I got to the door, I smelled gasoline. I walked in and noticed the lights were off. I called out to Miguel and didn't get any answer. The gasoline smell was stronger now. I went over by the work counter and saw Miguel slumped on the floor. At that moment everything went black. I don't know how long I was out; it couldn't have been long because when I opened my eyes, I saw the figure with the can of gasoline. He walked up and started talking to me.\"\n\n\"Uh, Miss Chandler?\" interrupts the officer. \"Can you identify this man?\"\n\nShe looks over at Dani who is still holding her hand. Jesse squeezes it. \"Yeah\u2026he\u2026was the guy that attacked Dani in Michigan. We pressed charges against him. I don't know his name. All I know is that he was a new cook at the hotel. When the owner found out what happened to us, he fired the cook immediately and assured us he wouldn't find another job in the state. Anyway, he was informing me of all the things he was going to do to Dani and I just snapped. I punched him. He tried to hit me back but I ducked and got him in the balls. Since he was on the floor, I attempted to get to the door. He tripped me, got me by the neck and smashed my head into one of the glass cabinets. He stumbled off to torch the place. As soon as I was able to clear my head a bit, I saw the flames. The animals back there were starting to get frantic in the crates. I struggled to open all the crate doors to get them out, and then went back towards the main door. As soon as I grabbed the handle, he got me in the arm with something and then in the leg. A baseball bat, maybe. I got so dizzy from the pain and I guess the injuries to my head that I couldn't see straight. I do remember though, the door opening suddenly and two dogs barking and running in. Then it all went black.\"\n\nDani's tears are unstoppable. She couldn't believe that bastard found Jesse. It was his fault that his life was ruined, not Jesse's. She wanted to just choke him with her bare hands. \n\n\"Alright, here is where I come in.\" John chimes in. \"I was in the front of the clinic with Charlie, my bloodhound. We're getting ready to leave when Artemis, that's Jesse's German Shepherd, began barking ferociously towards the end of the hall. She bounded to the back room and just started scratching with all her might at the door. My Charlie perked up quick and immediately followed Artemis, he always had a thing for her, anyway both of them are barking and scratching like the devil is on their tail. Janice, that's the receptionist, and I look down the hall wondering about the commotion and we see smoke coming out from under the door. She goes to call the fire department and I jog down the hall. I decide to prop open the emergency exit door for an easy escape. Upon opening the back room door, both dogs dash inside. The other animals in the room came running out and into the yard. I see the man, and I see Artemis jump up at the man's chest. My Charlie runs up to the guy too, growling like I've never seen him do before. I see Doc lying there half behind the door, so I grab her by the shoulders of her shirt and coat and drag her out into the yard. Going back in, I see two other dogs whimpering and struggling with something by the counter where the flames were getting the hottest. It was Miguel that they were trying to pull across the floor. I got down on all fours, reached out, and grabbed him by the foot dragging him out to the yard also. Finally went back in a third time for the other guy. I couldn't see what condition he was in because of all the smoke and flames so I just pulled him by the arm. Once outside I rolled him over and saw all the blood covering the front of his body. I figured he was gone. I tried to get to Doc, but the dogs wouldn't let me. They were protecting her from anything coming near. They were all growling and getting ferocious with me. Only my Charlie came near, so we went to check on Miguel. That's when the cops and ambulance came.\"\n\nThe officer finishes taking his notes. Looking up, he takes a moment to eye each person in the room. He rubs the back of his neck and lets out a huge sigh. \"When the paramedics got to that man, he was already dead. His jugular vein was torn open and his penis\u2026well\u2026it was\u2026merely hanging by a thread.\" \n\nJohn gave a loud clap that made everyone jump. \"Hot damn, you mean ta say my Charlie took off that man's nuts? And Artemis got his neck? Whew! We got ourselves some dogs, eh?\" He nudges to Jesse.\n\n\"Apparently this was all in self-defense. I appreciate the testimony from each of you. Good day.\" The officer walks out. \n\nFresh tears roll down Dani's face. She buries her face into Jesse's neck. The testimonies made her realize how close she had almost lost her Soul. Jesse brings her good hand over the young blonde's head to run her fingers through silky hair.\n\n\"Boss, we're gonna get going, okay?\" Miguel turns to Mr. Hoffman.\n\n\"Wait,\" Jesse says in a raspy voice. \"How much damage is there to the clinic?\"\n\nMiguel scratches the back of his neck. Trying to think of how to tell his boss, he looks out the window in silence.\n\n\"John\u2026you tell me.\" Her eyes are pleading with him.\n\nHe harrumphs, and then says, \"The back half of the clinic is gone. The only thing left is the front exam room, reception area, and your office.\"\n\nA tear threatens to spill over. \"What about the animals?\"\n\n\"All of them got out. A Persian with a leg cast was slightly burned but nothing too serious. Apparently Charlie picked her up to help her out. They are with their respective owners. Janice took care to all of that, and she also is caring for Artemis.\" He gives her a toothy smile.\n\n\"Thank you.\"\n\n\"We'll be going now,\" John says. \"Come on Miguel.\" They walk out. In the hallway, John asks, \"Hey, how come you call her Boss?\"\n\nMiguel looks at him with a furrowed brow. \"She is my boss, right?\"\n\n\"Yeah, she is.\" Responds John.\n\n\"Okay, so why do you call her Doc?\"\n\nJohn busts out with laughter. \"Okay, okay you got me.\" He claps a hand over the Latino's shoulder.\n\n*************\n\n\"Why don't you go home and get some rest?\" Jesse gently asks her lover.\n\n\"No. I'm staying right here,\" she says in an almost frog like voice. She cannot make herself to stop crying long enough. Blowing her nose for the umpteenth time that day, she tosses the tissue in the garbage can and says, \"I heard you.\"\n\nJesse looks at her silently with wonder.\n\n\"I heard you call my name. I know what you said before I found you.\" The tears cascade down her face once again. \"It was such a horrendous feeling in my heart. Like something was ripping it in two. I clutched at my chest knowing something was terribly wrong.\"\n\n\"I heard you too Sweetie. I know I heard you speak to my heart, begging me not to leave you. I knew I had to fight.\"\n\nDani sobs harder, squeezing the hand she is holding.\n\n\"Baby girl, lie with me.\" She pats the mattress. \n\n\"No, I don't want you to be in any more pain.\"\n\n\"I don't care. I want to feel you.\" Blue eyes lock with emerald green. \"I want you to feel me right here with you.\"\n\nDani climbs up and lays her head on the tall woman's good shoulder. Bodies are pressed up against each other. With the exhaustion of the past couple of hours, they both fall to sleep.\n\n******\n\nThree days in the hospital was too long for Jesse. Looking out her window, she can hardly wait for Dani to come and bring her home. She swings her legs off the bed, wondering if she can at least stand on her own. Putting all her weight on her left leg, she tries to straighten up.\n\n\"What do you think you're doing?\" Dani asks, standing in the doorway with a wheelchair.\n\nFalling back onto the mattress, Jesse responds. \"Nothing.\"\n\n\"Uh huh.\" She places the backpack on the bed next to the tall woman. \"I brought some clothes since I didn't think you'd want to leave the hospital in your beautiful gown.\"\n\n\"Ha ha.\" Jesse shuffles through the bag. Navy blue cotton shorts and a black T-shirt. She smiles. You sure know what to get.\n\n\"Let me help you put them on.\" Dani kneels in front of her holding up the shorts. \n\nOnce clothed, Jesse reluctantly sits in the wheelchair.\n\nThe doctor walks in. \"Ahh, I see my patient is ready to leave. You come back in six weeks and we'll remove the cast. And you make sure you behave.\" Smiling, he shakes his index finger at Jesse. \"Don't give this young lady any trouble like you did to these nurses.\"\n\n\"I won't.\" They shake hands. \n\n******\n\nAt home, Jesse plops down on the couch. Her leg encased in the plaster cast rests on the coffee table. She lays the crutches at the end table. Artemis comes barreling through the house sensing her mother is home. The young dog barks happily, tail wagging side to side. Jesse grabs her by the head to scratch her ears and neck. \"Hi Arty. How's my girl? You've been a good girl? I bet you have.\" Artemis hops up with her front paws onto Jesse's lap and begins licking her face. \n\n\"I'm going to make some lunch. Are you hungry?\" Dani asks from the kitchen.\n\n\"Yes.\" She flips through the TV channels with the remote. Artemis lies next to her with her head on a naked foot.\n\nAs the Crocodile Hunter comes to a close, Dani walks in with lunch. Sitting down next her lover she places the plate on her lap. \"Turkey and Swiss sandwiches on wheat with all the fixings just the way you like it, and pasta salad.\"\n\n\"Thank you.\" She takes a large bite of the sandwich. \"Hmm. Wonderful. So much better than anything they could come up with in the hospital.\" The dark woman leans over and gives the young blonde a kiss on the cheek. \"Will you take me later to the clinic?\"\n\nDani hesitates in answering.\n\n\"Please. I want to see the damage for myself and start making some calls to get it rebuilt. I don't want to waste anytime.\"\n",
        "The young woman places a hand on her lover's cheek. \"Sure. Janice took care of the business with the insurance company. You'll be able to talk to her regarding the details. She told me to give her a ring when you come home. She wants to visit.\"\n\n\"I'll call her tonight after we see the clinic.\"\n\n******\n\nThe next morning, Dani is in the kitchen making coffee. Jesse tries to sit comfortably in her computer room chair. Going through the clinic's building title and other paperwork after talking with Janice, she is ready to make another call to her attorney.\n\nDani comes in with a cup of coffee for her. She gives the tall woman a kiss on the temple, sets the cup down, and waits for her to get off the phone.\n\nJesse hangs up. \"Hey, you don't have to work this morning?\"\n\n\"I decided to take a couple of days off to be with you. Is that okay?\"\n\nA long arm snakes around her waist to pull her close. \"Of course. It will be nice.\"\n\nThey kiss tenderly. \"I am making pancakes. You wanna come down?\"\n\n\"Yeah.\"\n\nIn the kitchen, Jesse sits at the table and takes another sip of coffee. Artemis comes through the doggy door from the yard. She nudges her mother 'hello' with a wet snout. Jesse scratches under her chin.\n\n\"I fed her earlier,\" Dani says as she flips three pancakes on her lover's plate.\n\n\"Great.\"\n\nThe doorbell rings.\n\n\"I'll get it.\" Dani opens the front door. \"Hi Janice.\"\n\n\"Hello, I hope this is not too early for you two. Jesse said to drop by any time this morning.\" Janice pushes a lock of her curly dyed brown hair behind her ear.\n\n\"No, it's fine. Come in. We're eating breakfast. Would you like some pancakes?\"\n\n\"Oh, no dear. I've already had my breakfast. But some coffee would be great.\"\n\n\"Sure.\" She motions for Janice to sit at the table.\n\n\"Hey Janice. Glad you dropped by.\"\n\n\"Wow,\" is all she could say at the moment as she clasps her hand to her mouth. \"I'm sorry. I didn't\u2026I mean\u2026\"\n\n\"Don't worry Janice, hopefully my face will be all healed in a couple of weeks.\"\n\nHer eyes become watery with the threat of tears. \"Oh, Jesse, no one deserves to go through this. I'm sorry it happened.\"\n\n\"Come on, let's talk about other things.\" The dark woman says.\n\nDani sets a coffee mug in front of the older woman, and then kisses her lover on the cheek before sitting down.\n\n\"Now, I've talked with the insurance company and with my attorney. It's going to take about four to six weeks for the reconstruction of the new clinic to be finished. In the mean time, you can consider yourself as having an extra paid vacation. The same goes for Miguel, Danica, and Keith. I will call Miguel. If you don't mind contacting Keith and Danica, I'd appreciate it.\" She looks up from her paperwork.\n\nJanice's mouth just about dropped on the table at the news she was hearing.\n\n\"Janice? Are you okay?\"\n\nWith her eyes bugged out, she says, \"I don't believe\u2026I mean\u2026this is very generous for you to give us paid leave.\"\n\n\"Actually, the insurance company is covering all of your salaries. I have really good insurance.\" She says with a lopsided grin. \"Now, I'll keep in contact with you about when the clinic will be ready to re-open. I'd also appreciate you creating a voicemail message on the clinic's line that will inform people we are temporarily closed blah blah blah. You can also leave them my pager number if they really need to get in touch with me.\"\n\n\"Oh, I forgot,\" Janice, says suddenly, \"I have something for you. I stopped by the clinic to check the mail, and found this.\" She pulls out a thick manila envelope from her purse.\n\nJesse grabs it and rips it open. From inside she pulls out a stack of checks all written out to either herself or the clinic's name.\n\n\"Oh my god, Jesse, what is all this about?\" asks a curious Dani.\n\nShe unfolds the letter and begins reading a loud.\n\nDear Dr. Chandler,\nWe are all grieved for the damage you, your staff and the clinic have suffered. This means we all have to be extra careful about our pets becoming ill while you are closed. So many people came by the afternoon of the fire once they heard it on the news, and while there, they decided on a collection to help out in some way. Here is everything that was for some reason given to me to give to you.\nThank you for being such a great Doc. We look forward to you returning to work.\nJohn Hoffman\n\nDani begins sorting the checks and adding up the amounts written on each one, with the help of Janice. Jesse runs a hand through her hair not believing that her clients have done this. \n\n\"There is $45,385 dollars here, Jesse.\" Dani says.\n\n\"My god, I don't believe it,\" Janice chimes in.\n\nA tear threatens to spill down Jesse's cheek.\n\nJanice looks at her watch, \"Oh dear, I need to get going. I'm meeting with my daughter today. I'll let myself out. You two take care. I'm so happy to see how much your clients love you. I'll be sure to carry out your requests, and thank you for the vacation.\"\n\nDani gets up and hugs her lover from behind. \"Isn't this wonderful?\"\n\n\"Yeah. I'm just\u2026shocked.\" She turns her head to give the young woman a heartfelt kiss. \"I hope to meet with an architect this afternoon. I better go ahead and make some more calls.\" She finishes her coffee then says, \"Would you like me to help you clear the table?\"\n\nDani turns from putting some dishes in the dishwasher. \"Of course not. I'll be fine.\" She says with a grin. \"Do you want some help upstairs?\"\n\n\"No, I'll be alright. I left the crutches by the stairs.\"\n\n\n******\n\nThe weeks go by with Jesse healing quickly and the clinic's construction coming together nicely. \n\nIn the mid-afternoon, Jesse is taking a nap. The sun shines brightly into the bedroom window. The tall woman begins to toss and turn as a dream invades her mind.\n\nThe shadowy figure manages to clasp his meaty hand around her throat. His laughter echoes in her ears. She kicks him in the groin. He let's go. Suddenly the swing of a baseball bat makes contact with her arm. The animals in the crates are terrified. The flames are rising higher. She must save them. The pain in her arm makes her dizzy. The dark figure curses her.\n\n\"I'm going to fix your bitch up good. Give her a taste of my dick. I'll fuck her raw and then cut her open from her cunt to her throat.\" He laughs.\n\nThe tears run down her cheeks. She wipes at her face only to find blood on her hands. Lunging her body at him, she punches him in the neck and then a sidekick to his ribs. \n\nOnce again, the swing of a bat comes in contact with her leg. The pain is becoming unbearable. \u201cDani, I love you. I love you, don't forget me.\u201d\n\n\nJesse wakes up in a sweat. \n\nArtemis sits next to the bed watching her mother. With ears perked up, she cocks her head wondering what's going on.\n\nWiping her face, she looks at Artemis. \"Hey Arty. Are you watching me? It's okay, girl, I'm alright.\" She scratches behind the big floppy ears. \n\nGetting up, she heads to the bathroom. She turns on the light and looks in the mirror. \"I think it's about time to move along and get rid of some of this stuff.\" She says to no one. \n\nShe retrieves her medical kit from the towel cabinet. Setting everything up she needs, she looks closely into the mirror and begins removing the stitches. Very little bleeding occurs of which gets dabbed away with a cotton pad soaked in hydrogen peroxide. \n\nGoing back in the room she shuffles through a drawer searching for a particular item. \"Aha, here it is.\" \n\nBack in the bathroom, she flips open the razor sharp blade and begins working on her arm cast. She pries the cast open with her good hand and it breaks away falling to the floor. Holding up her arm, she inspects it closely. \"Looks good.\" She flexes her hand and bends at the wrist. \"Feels good.\" Her nose senses something. \"Ugh, smells awful. God, I can't wait to soak in the tub with lots and lots of soap.\" \n\nPicking up the blade again, she puts down the lid of the toilet and takes a seat to begin the leg cast. This one takes a bit longer. She winds up breaking the thing in two pieces before actually getting the offending material off. She flexes her leg. \"Ah, finally free, and very stinky.\" \n\nShe turns on the tub water and pours in the sandalwood oil soap. Inspecting her leg, she notices a light bruise on the outside of her thigh. \"Hmm, nothing serious.\" She removes her clothes and steps into the bath.\n\nDani pulls into the driveway with a sigh. Grateful for having left work early, she is anxious to check in on her lover. She smells barbecue smoke. Hmm, that smells great, wonder who is grilling at this time. \n\nAs she nears the front door, the scent of the grill is stronger. Curious she decides to head around to the back. Reaching over and behind the gate, she undoes the latch. Artemis runs over to give her a bark of 'hello'. \"Hi Arty. Where's your momma? Is she barbecuing?\" \n\nAt the end of the walkway, she turns the corner to see Jesse stretched out in the lawn chair in a pair of maroon silk boxers and black sport bra. Gods she's gorgeous. Her eyes take in the long succulent body. Wait a minute. The casts\u2026are gone.\n\n\"That's right. I took them off earlier.\" Jesse gets up and saunters to the young woman. Cupping her lover's cheek, she leans over and kisses her passionately.\n\n\"I should've known you wouldn't follow the doctor's orders.\" She leans in to nuzzle the strong neck. \"God you smell wonderful.\"\n\n\"Makes a big difference when I can soak in the tub for two hours.\" She kisses the crown of the blonde's head. \"Are you hungry? I'm grilling salmon steaks.\"\n\n\"Awesome. I can make those mashed potatoes you love so much.\"\n\n\"Great, and maybe those candied ginger carrots?\" Jesse asks with her best puppy dog look.\n\n\"Sure.\" Dani gives her a light kiss on the lips.\n\n\"Oh, I'm planning on going to the gym afterwards. I want to get my muscles worked on. You want to join me?\"\n\n\"Sounds like a plan.\" Dani walks inside to change.\n\n******\n\n\"Ugh, I need a shower.\" Dani exclaims as she enters the house. \"I can't remember the last time I ever spent two hours at the gym.\" She heads upstairs.\n\nArtemis comes barreling through to say hello to her parents. \"Arf.\" She barks happily.\n\nJesse gives her hugs and kisses before she also goes upstairs. Walking into the bedroom, she hears the shower running. She walks into the bathroom completely naked. Surprising Dani, she steps into the shower. \"Would you like some company?\"\n\n\"Mmm, definitely.\" Dani answers with a purr. She pours a generous amount of the Lever 2000 liquid soap onto the loofah and begins to gently stroke her lover's skin. Their shower quickly turns into an erotic play session. \n\nAfter soaping each other's bodies, Jesse turns the young woman to face away from her. Wrapping an arm around her waist, her other hand slides down to wet blonde curls. She takes the flesh of her lover's neck between her teeth and sucks hard. Dani moans at the contact in both areas. A strong hand spreads her nether lips and a long finger dips into the folds. Dani grows weak in the knees and is grateful the tall woman has a firm grasp on her. \n\nRealizing she is losing her resolve, she says, \"God Jesse, I won't be able to stand much longer.\" Her hips begin to buck as Jesse strokes her clit rhythmically. The actions bring on a small orgasm to the young woman to satisfy her temporarily.\n\nJesse turns off the water and leads her lover out of the shower. They towel each other dry. This time Dani pulls her into the bedroom and pushes her onto the bed. Climbing on top she straddles the long legs. She slides up a little farther and slowly grinds her wet mound onto that of her lover. Small hands play with pierced nipples that are painfully erect. \n\nJesse takes hold of the young woman's hips to pull her down harder. Moans and grunts fill two sets of ears. Dani lowers herself to capture succulent lips with her own. Their humping continues until Jesse lets out a loud grunt through her teeth. Her orgasm brings Dani over the edge with her. They lie side by side panting.\n\nDani rolls onto her side and strokes the dark woman's cheeks. A small finger lightly traces the currently evident scars on the beautifully sculptured face. \"God, I love you.\" Her hand finally lies over the left clavicle near the pulse point. \"I\u2026want us to grow very old together.\"\n\nAzure eyes lock onto sea green. \"We will.\" Jesse instinctively understands what her small woman is getting at.\n\nA lone tear rolls down. \"I\u2026almost\u2026\"\n\n\"Shh, s'okay. I'm here. I will always be here for you.\" Jesse takes the delicate yet strong hand and brings it up to her lips for a kiss. \"Dani, even in death I will be with you. There is nothing that can separate us\u2026what we have. I believe it. Our souls are so entwined, it has been since the beginning of time.\"\n\nDani cries softly into the sturdy shoulder. Jesse wraps her arms tightly around the young blonde. They fade into a deep slumber. \n\n******\n\nJesse is frantically trying to open the crates. \u201cThe animals, I have to get them out.\u201d The flames surround them and the smoke darkens the room. \n\nAn evil laugh is heard. \n\nFinally the last crate is open. She heads for the door. \n\nWhack! The bat strikes her arm. Then once again. Whack! The bat strikes her leg. The pain is too much. The blood is pouring down her face blinding her eyes. She can't think straight. \n\n\u201cI need to\u2026 help\u2026 the animals.\u201d She falls to the floor. \n\nThe figure looms over her. He bends down to lick at her face. \u201cOh, god, what is he doing? The blood. He's licking the blood off and enjoying it.\u201d She hears his laughter again. \n\n\"Just wait until I get your bitch.\" He spits out at her. \n\nSuddenly Dani appears. He has her by the hair. With his free hand he rips her shirt off. She cries out for Jesse. \"Jesse, where are you? Help me!\" \n\nJesse's vision is clouded. \u201cWhat is he doing to her? NOOO!!\u201d She sees him plunge into her with a knife slicing her from the apex of her sex up to her neck.\n\nThe tall woman jerks awake in a sweat.\n\n\"Jesse, what's wrong?\" Dani sits up and touches her lover's shoulder.\n\nThe dark woman shudders at the contact.\n\n\"Jesse, you were dreaming.\" They look at each other. Dani sees a battle taking place in the steely blue gaze. \"Talk to me.\"\n\nThe tears streak down Jesse's face as she relays the nightmare. \"This is not the first time. I've been having this nightmare for some time already. And it won't stop.\"\n\n\"Oh, Jes,\" she says endearingly. \"I'm so sorry.\" Dani cradles the head on her shoulder soothing her distraught lover. She whispers words of comfort.\n\nAfter a few minutes the dark woman sits up again. She rubs her tear stained face with a hand. \"I'm going to the gym to try and work off some of this frustration. Do you want to come?\"\n\n\"Isn't it kind of early, Sweetie?\" She looks at the clock. \"It's 5:30am.\"\n\n\"They're open.\" With the response, Jesse dons her sweatpants. Grabbing a T-shirt, she pulls it over her sports bra.\n\nAt the gym, Jesse set out to work on the weight machines first. Determination is on her face to push her muscles that haven't been used in the past several weeks. Only until her arms and legs burn will she cease and move on to something else. \n\nDani starts out at the treadmill. She begins at a fast walk, then to a jog, and then to a medium run. The gym wasn't very crowded and she was grateful. It's a pain in the ass when all the machines are being used. Afterwards she heads over to the weights. Passing Jesse on her way out of the weights area, she gives her a wink. \n\nSmiling at the flirtatious gesture, Jesse gets on a treadmill.\n\nAfter an hour, Dani is more than ready to leave. Everything on her body aches, and all she can think of doing is soaking in the tub. Walking out of the locker room, she passes the tall woman once more and says, \"I'll wait for you outside\".\n\nJesse nods slowing down her run into a jog before she stops altogether.\n\nDani sits on the bench around the side of the building watching the sunrise. The fiery orange glow surrounding the flaming ball is a beautiful sight. Thoughts on the sky and soaking in the tub are all she can think of.\n\nOn their way back, Dani decides to ask a question that's been on her mind all night. \"Jesse, would you consider talking to Kris about these dreams?\"\n\nThe tall woman's grip on the steering wheel tightens. \"You want me to see a therapist?\"\n\nDani reaches over to touch her shoulder. \"Please\u2026just talk to her. See what she says. She might have some insight into the dreams plaguing you.\"\n\nJesse sighs heavily. Maybe she's right. \"It will be kind of weird since she's good friends with you.\" \n\n\n\"I'll go with you\u2026if you'd like. I'll sit there and you can hold my hand. I know it's not going to be easy. I want to be there for you.\"\n\nThe dark woman runs her hand through her hair. Her body relaxes a bit. \"Alright. I'll go. And yeah, it'd be nice to have you there. I'll call her tomorrow.\"\n\n\"Thank you.\" Dani smiles.\n\n***********\n\nThe next day, Jesse finds herself walking into Kristen's office.\n\n\"Hello Jesse. Dani. I'm glad you are here.\" She motions for them to take a seat on the loveseat. The office is small with only enough room for the couch, a plush chair and the desk. A couple of paintings of serene landscapes and one of the ocean adorn the walls. The water cooler makes its bubbling noise in the corner. The large plants on the floor make the room look cozy. Kristen takes a seat in her usual chair across from the couple. \"Now what is it that you hope to get, Jesse?\"\n\n\nJesse relays the story of the nightmares and the obvious link they have to the recent situation with the clinic fire. She also recaps the story of their incident in Michigan and how they came across that man. \"So, I know how the nightmares are linked, but what I don't understand is why I keep having them. I mean, the incident is long gone. You know what I mean? The guy is dead. Dani and I are alive and well. So why these constant nightmares?\"\n\nKristen scribbles a few more notes then reclaims the eye contact with Jesse and Dani. \"It seems that the nightmares are something deeper you may be struggling with.\"\n\n\"What do you mean?\" Jesse asks.\n\nShe crosses her legs then continues. \"Well, it's possible that you feel a sense of failure. Because you didn't finish that man off or put him away for good the first time, you feel you've fallen short in protecting Dani.\" She looks at Dani, knowing the small woman's questions were ready to fly. \"Jesse, you have a very protective instinct when it comes to those you deeply love. Your subconscious is berating you for not fully living up to that protective nature.\" She watches the wheels turn in Jesse's head. A battle is evident in the steel blue eyes. \"You told me a bit about your family history. Do you remember?\"\n\nJesse nods. With a squint of the eyes, she wonders what Kristen is getting at.\n\n\"Alright, in the stories that I do know of the Chandler family, each Chandler has an inherent nature to protect their loved ones. You told me about your grandfather, who you are named after, that he was a soldier in the war. When he came back, he returned a changed man being very protective of his children and his wife. He worked himself almost to death to provide food, shelter and clothing during the Depression. Your great-great-great-grandmother was very protective of her siblings during the Civil War. She found a way to hide the younger ones and keep them out of harm's way. And what about your father, you said he was your hero. Do you see what I'm saying Jesse?\" She waits, in order to let her words sink in. \n\nDani looks at her lover. Oh my god, I think she has a point. The young woman squeezes Jesse's hand.\n\nYou may be right, my Love. With all of the intensity of emotions and thoughts, there was no way Jesse didn't hear her lover. She runs her free hand through her hair. \"So, if you are correct, what do I need to do to stop the nightmares?\"",
        "\"It's possible that until your protection is needed again, is when the nightmares stop.\"\n\n\"So you're saying that if another situation arises and the protectiveness kicks in and I successfully come through it is when I can sleep in peace?\"\n\n\"Yes.\" Kristen looks over at Dani. The blonde's face is downcast. \n\nSuddenly, Jesse stands up. \"Um\u2026\" Knowing she would say the wrong thing, she stops herself and just walks out. \n\nDani and Kristen look at each other. \"I'm sorry.\" Dani says.\n\n\"No, maybe I'm the one who should apologize. This discussion has been rather intense. Please, go see to her. I'll see you later.\" Kristen stands up. \n\n\"Thanks Kris. I'll be in touch.\" She extends her hand for a shake. Stepping out of the office she sees Jesse leaning up against the wall staring at the ceiling. She walks up and gently wraps her arms around the tall woman. Laying her head upon the chest, she listens to the heartbeat. Are you mad?\n\nJesse returns the hug. Yeah, but more frustrated than angry. I just don't know what to believe. Her words sounded a little far fetched but then again, maybe there is something to be attained in them.\n\nDani looks up into sapphire eyes. \"Let's go home. We'll talk.\"\n\n******\n\nTwo days later finds Jesse packing a duffel bag for a trip. \"Are you sure this is a good idea?\" The tall woman asks.\n\n\"It'll be great. We could use a vacation, and my parents have been pestering me about meeting you.\" Dani throws a second suitcase onto the bed and unzips it. \"They are not going to leave me alone about this. You know ever since I came out to my family, that they have all thought it was just a phase. Now they see how serious I am.\" Standing in front of the open drawer, she starts flinging clothes over her shoulder directly into the open suitcase.\n\nJesse looks on bewildered. \"Um\u2026 Dani, if we're only going for three days, then why are you packing a second case?\"\n\nShe responds with a smirk to her lover. \"These are the 'in case' items.\"\n\n\"Huh?\"\n\nPlacing the last of the items into the suitcase she turns to the tall woman. \"These clothes are 'in case',\" she motions in the air with her fingers the sign of quotation marks, \"I need them for something.\"\n\nJesse shakes her head in disbelief.\n\n******\n\nThe flight into Denver was uneventful. Dani's brothers are waiting for them at the gate.\n\n\"Danielle.\" The voice booms out for everyone to hear.\n\nShe looks around and spots the shaggy blonde hair of her brother Michael. She is embraced in a big bear hug as her feet dangle in mid air. \"Hi Mikey. It's so good to see you.\"\n\n\"It's great to see you. How've you been?\" He asks enthusiastically.\n\n\"Wonderful.\" Once he puts her down, she takes Jesse's hand in her own. \"This is Jesse. Jesse this is my baby brother Michael.\"\n\n\"Aha, the Vet.\" He extends his hand with a smile. \"Jesse, nice to finally meet you.\"\n\n\"Where's Kenny?\" Dani asks as she looks around the terminal. \"I thought he would be with you?\"\n\n\"I'm right here, Inchworm.\" The tall figure with a darker shade of dishwater blonde hair crew cut style sweeps her off her feet. He is the same height as Jesse and his features are that of a hardworking farmer. \"So is this Jesse?\"\n\n\"Yes. Jesse this is my big bully of a brother Kendall.\"\n\n\"But Kenny and Mikey are fine with us,\" interrupts the younger brother.\n\nKenny gives Jesse a toothy grin and they shake hands.\n\nStanding between her two siblings, it looks as if she should be the youngest one. Even with Mikey being a couple of years younger, he still stands above his sister by five or six inches.\n\n\"So, Inchworm, you finally decided to come for a visit and show off the Vet, huh?\"\n\nThe dark woman's eyebrow rises upward. So Inchworm is your nickname?\n\nLet it lie, I'll explain later. Dani takes her lover's hand again. \"Shall we go?\"\n\nThey pull into the driveway of a ranch style cabin nestled between pine trees. Two Labrador Retrievers come barreling down the front lawn to say hello. Dani is almost knocked down by the Labs as they excitedly wag their tails and lick her hands and face. She laughs from all the attention. \"Jesse, these are my brothers dogs. The chocolate Lab is Shiloh and the black one is Cujo.\" \n\nJesse mouths the word, \"Cujo?\"\n\n\"Yeah, that's one of Kenny's favorite movies.\" Dani responds and pulls the tall woman along to the house.\n\n\"Mom? Dad? We're finally here.\" \n\n\"Dani, it's about time.\" A somewhat plump gray haired woman comes into view and gives Dani a tight hug. \"Honey, you look so thin. Have you been eating right?\"\n\n\"Yes, Mom. I'm eating just fine. In fact, if I don't keep an eye out with all that Jesse feeds me, I won't be able to get through the door.\" Dani winks at her lover. \"Mom, this is Jesse.\"\n\nThe older woman looks up to a pair of intense blue eyes. \"Oh, my. Jesse\u2026hello.\" She smiles. \n\nJesse extends her hand. \"Nice to meet you Mrs\u2026\"\n\n\"Oh, please, no formalities around hear. We're just country folk. You can call me Brenda.\"\n\n\"Nice to meet you Brenda.\"\n\n\"And it's sure nice to meet you Blue Eyes.\" The steel gaze entrances the older woman again.\n\nA dark eyebrow arches up Jesse's forehead. She shoots a questioning look to her love.\n\n\"Mom, don't you dare start flirting with MY man when you have your own!\" \n\n\"Who's flirting with who?\" A gruff voice comes from the direction of the kitchen. There stands a gray-haired man with a full bushy beard and glasses. He has a bit of a gut, but other than that he looks like an older version of Kenny.\n\n\"Daddy!\" She runs up and hugs him fiercely. \n\n\"Is your mother captivated by your chosen love?\" he asks teasingly as he sidles up to his wife. Extending a thick-calloused hand, he says, \"Ah, Jesse. I'm Tyler. I see your obvious stunning beauty and those soul-searing eyes captivate my wife. Welcome.\"\n\nJesse now feeling a little uncomfortable at the attention is appreciative when Dani's arm snakes its way around her waist.\n\n\"Why don't you two settle in and then meet us out on the deck. We're having a barbecue for dinner.\" Brenda motions for them to skid addle.\n\nDani pulls her lover along through the house and up the stairs. At the end of the hallway, they come to a door very familiar to the small woman. She opens it. The room still looks the same as when she left about a year ago. It most definitely screams out 'girlie'. There is a flower-covered comforter and matching pillows on the four-poster bed with a teddy bear lying right in the middle. The oak vanity table with drawers is laden with a hairbrush and a few small bottles. One painting of a sunset beach and footprints in the sand hangs over the bed. \n\nDani closes the door and pulls the tall woman down for a long needed kiss. Lips part and tongues dance slowly upon each other. A moan escapes Jesse's throat. A small hand reaches up to feel jet-black silky strands of hair through her fingers. \n\nLarge hands slide down to firmly grab a tight round ass. Jesse picks up the small woman who now has her legs wrapped around a strong waist. Walking over to the bed, she lays the bundle down without breaking the kiss. Jesse starts a slow grind into the young woman's sex.\n\n\"Yes.\" Dani hisses breaking from the kiss as her hands find its way under the tall woman's shirt.\n\nAll of a sudden the door bursts open. \"Oh shit!\" A shaggy blonde holding two suitcases turns beet red.\n\nJesse flies off her lover instantly and rubs the back of her neck without making any eye contact.\n\n\"Goddamn it Mikey! Can't you knock?\" The frazzled woman tries to compose herself as she sits up.\n\n\n\"I was just bringing your bags up. Jeez, how am I supposed to know you two would be in here sucking face?\" He drops the suitcases and storms out.\n\nShe looks at Jesse and mouths, 'sorry'. The tall woman nods. \"I'm going to check on him. I'll be right back.\"\n\nJesse nods again. She grabs the suitcases and places them over by the dresser. Taking her duffel bag, she rummages through it retrieving her cell phone. After checking messages, she lies back onto the bed. She closes her eyes for a few minutes. Her family seems nice and rather accepting. For some reason I didn't think it would go so well. Hmm, it looks like the family now believes Dani's preference and is happy for her.\n\nDani returns to the room quietly. Closing the door, she saunters to the bed and climbs on top of the long body. Straddling her hips, Dani bends down for a kiss.\n\n\"This is how we got in trouble the last time.\" Jesse says with a tease before she opens her eyes.\n\n\"This time I locked the door, and I told mom and dad we were going to freshen up a bit before coming down.\" She pulls off her shirt then her bra. \"Please Jesse. I'm so horny right now. You've got to help me out. Just a quick one. Please?\" She begs as she kneads her breasts to entice the dark woman. \n\nJesse knows she cannot deny this angel's request. Sitting up, she devours the decadent neck as her fingers unbutton and work free Dani's jeans. Reaching a hand down the front of the pants, she quickly finds the nether lips engorged and very wet. She slides two fingers between the blonde's lips and up inside of her. Her thumb strokes the bundle of nerves. Jesse sets a rhythm and begins nipping along Dani's chest.\n\n\"Oh, god Jesse. Mmm. It feels so good.\" Dani rocks her hips as her hands start to undo her lover's jeans. She manages to get her hand down the front. Her fingers search the entrance of her desire. As soon as her thumb comes in contact with Jesse's clit, the tall woman's hips buck. Dani holds herself with her free arm around Jesse's neck while the dark woman has her free arm wrapped around the smaller woman's waist. They grunt and moan into each other's mouth, neck, and hair. \"Yes, fuck me Jesse. Ahh\u2026Come with me baby. I\u2026want to feel your release.\"\n\nThe young woman's words almost bring Jesse over the edge. They thrust into each other's mounds frantically as their arousal climbs higher and higher. Finally, a guttural groan comes out of Jesse as her inner walls tighten around small fingers. Her body tenses with the impending orgasm. The actions carry Dani over the abyss with her. They ride the waves together until hips stop moving.\n\nDani collapses on top of her lover. \"God, how I love you.\" She looks into cerulean eyes. \"And what you do to me.\" Her eyebrows wiggle playfully.\n\n\"I love you too Sweetheart.\" \n\nDani begins to rub her wrist.\n\n\"Are you alright?\" Jesse asks somewhat confused as to why Dani is doing that.\n\n\"I think I sprained my hand while inside your jeans.\" They bust out laughing.\n\n\"God, I hope not. I would hate for your mother to be asking what happened to your wrist.\" Jesse continues laughing.\n\n\"I can just see her face as I try to explain.\" \n\nThe laughter goes on for another minute until Jesse gives the young woman an endearing love infused kiss.\n\nThey make their way out to the yard.\n\n\"Danielle,\" Brenda calls out, \"what took you two so long? I was just about to send Michael up to get you. The food is ready dear, and you know how your father gets when he's hungry.\"\n\n\"Sorry Mom.\" Dani tries to avoid any further explanation.\n\nTyler calls Jesse over for a beer.\n\n\"Honey, your hair is somewhat tousled.\" Brenda jumps in again then notices something on Dani's neck. She gently grabs her daughter's face and turns it to the side. \"Danielle. You have a hickey.\" She whispers for just the two of them to hear.\n\nDani turns ten shades of red.\n\n\"That wasn't one on your neck earlier when you first arrived.\" Brenda gives her daughter a stern look.\n\n\"Mom, please.\" Dani tries to walk away but the older woman holds her arm. \n\n\"Now, just a minute. Did you forget your mother is talking to you?\" She scans the yard for the taller woman. \"JESSE!\" \n\nEveryone's heads turn. Jesse tenses.\n\n\"Jesse. Come here.\" Brenda firmly states.\n\nThe tall woman walks over. \"Um, yes?\"\n\n\"I see you can't keep your hands\u2026or should I say your mouth off my daughter since she is sporting a hickey that wasn't there before.\"\n\nJesse clutches the beer bottle until her knuckles turn white. She isn't sure if she should be pissed at this arrogant woman or just be scared. She takes a quick look at Dani searching for an answer.\n\nPlease, Jesse, be nice. I don't know what she's doing. I'm sorry. Don't be angry. The young woman's pleading emerald eyes brings Jesse to a calmer state. Looking back at Brenda, Jesse nods.\n\nIn a gentle voice, Brenda says, \"Well, then I can also see that you love her very much.\"\n\n\"With all my heart and soul.\" Jesse responds.\n\n\"Good.\" She pats the tall woman's cheek playfully. \"Okay, let's eat.\" She smiles brightly.\n\nThe two let out a breath they didn't know they were holding.\n\n\"Mom, how\u2026why\u2026ugh, you scared the hell out of me.\" Dani says exasperated.\n\n\"Well dear, I still do have a sense of humor. Grant it, it may be evil but it's still a sense of humor.\"\n\nDani and Jesse look at each other not sure if they should laugh.\n\nThe evening continues with the Sheridan family sharing stories about a certain Inchworm when she was a little girl. Jesse enjoys the playful banter between siblings. As the night comes to a close, Brenda begins to collect the remainder of the dishes to bring inside. Jesse decides to help. She sets the leftover food on the counter. \n\n\"Thank you for your help Jesse.\"\n\n\"Sure.\"\n\n\"I hope you are not upset about the incident earlier.\" Brenda turns to face the tall woman. \"Come have a seat. I'd like to talk to you briefly.\"\n\nJesse sits at the table.\n\n\"Danielle is my only daughter. When she told us that she was gay, well we were a bit surprised, but we also knew it was coming. She never really liked boys as more than friends. So, when she moved away to a big city and then writes us to say she has found her true love, we were frightened. As she continued to write and call, I could clearly see how much she loves you. But I was concerned that the depth of her love would go unrequited. Now, today here you are. As soon as I looked into your eyes, I knew beyond a shadow of a doubt that you would love her and protect her until your dying breath.\" She reaches across the table to take Jesse's hand in her own. \"I am happy for the two of you. You see, when I was young I had my share of boys and girls.\"\n\nJesse's eyes widen at this new knowledge.\n\n\"I once loved a girl but she didn't share the same depth of feeling. We went out for a year and I thought we'd be together forever, but one day she left. She left me a note saying she was getting bored with me and needed to go find something new. The next time I saw her, she was living with another woman. Then I met Tyler, and he showed me an undying love and devotion. I thought in my head that women just don't make a good long-term match. But that is really not the case, is it. It depends on the individuals.\"\n\n\"Hey, what's going on in here? Mom, are you making a pass at Jesse?\" Dani steps in next to her lover.\n\n\"Dear, if I was twenty something years younger, I would definitely make a pass at Jesse. But now, I'm content with your father.\" Brenda gets up to begin washing the dishes.\n\n\"Is everything okay?\" Dani asks quietly to the tall woman.\n\nJesse nods. She takes the small hand and they walk outside.\n\n\"What were you two talking about?\" The young woman asks.\n\n\"I'll tell you later. Inchworm.\"\n\n\"Oh, great, now I have to be subject to you calling me that too?\"\n\n\"Well, it does suit you.\" Jesse gives her a lopsided grin.\n\n\"Everyone, I'm going to turn in for the night.\" Tyler says. \"You boys make sure the fire is out and carry all the heavy stuff inside for your ma.\"\n\n\"Yes Sir,\" they reply in unison.\n\n\"Dani, Jesse, sleep well. Tomorrow at breakfast we'll talk about some sightseeing the two of you can do.\"\n\n\"Thanks Daddy.\" She kisses him on the cheek.\n\n\"Goodnight Tyler.\" Jesse adds. She looks over at the guys. \"Would you two like any help?\"\n\n\"Naw, we're fine. Thanks though.\" Kenny responds.\n\nInside their room, Dani slips into a long T-shirt for sleeping. Jesse keeps her boxers on and tank top. They slide into the bed.\n\n\"Hmm, kind of small.\" Jesse comments.\n\n\"Well, growing up, I was the only one in the bed,\" Dani responds while snuggling onto her lover's shoulder. Her arms wrap securely around the human pillow and her left leg drapes over the front of Jesse's thighs.\n\n\"Are you comfy?\" Jesse asks sarcastically.\n\n\"Mmm, very. But I do wish we were naked.\" She looks up into blue eyes. \"I love the feel of your skin touching mine.\"\n\nJesse smiles and tenderly strokes a cheek.\n\n\"So, what were you and my mom talking about?\"\n\n\"Why didn't you tell me your mom was bisexual?\"\n\n\"W-h-a-t?\"\n\nBoth of them have surprised looks on their faces.\n\nDani starts, \"I\u2026I\u2026always knew Mom was open but I didn't know she's bisexual.\"\n\n\"Now, now, she didn't say she is actively bisexual. She told me a story of a young woman she fell deeply in love with during her college years, but that intensity of love was not returned. After a year the woman left, leaving your mom's heart very broken. It was then she met your dad, and so on and so forth.\"\n\nDani rubs her face for a moment. \"I\u2026didn't know that story. That explains so much.\"\n\n\"Like what?\" Jesse asks curiously.\n\n\"Like why she was so upset when I told her I loved you. And why my parents weren't too happy for me when I first told them of you. I guess in some way, she is still living with a broken heart.\"\n\n\"She told me that she once believed same sex couples couldn't have long term relationships, but that recently she's changed her mind, especially since she saw me.\"\n\n\"How do you mean?\"\n\n\"She said when she looked into my eyes, she could clearly see how much love I have for you.\"\n\n\"She's right. It is evident in your eyes. Whenever I see it, it makes my heart skip a beat.\" \n\nJesse hugs her tightly. \"Let's get some sleep Inchworm. Tomorrow you can tell me about your nickname, unless you want me to ask your brothers.\"\n\nDani snickers into the shoulder she is perched on.\n\nMorpheus claims them within minutes.\n\n******\n\nNature is screaming at Jesse's bladder to get up. Blue eyes open feeling a dead weight on her lower abdomen. Looking around briefly, she recalls where they are. Half of Dani's body is on top of her. Hence the pressure on her bladder. She tries to untangle herself from the little blonde octopus. Octopus? Oh, yeah, she'd love being called that. The sarcastic thoughts continue as she heads into the bathroom. Returning to the room, she dons a pair of cotton drawstring shorts, sweatshirt and her Nike's. She whispers into a small ear. \"I'm going for a run.\" She kisses the soft lips. \"I'll see you at breakfast.\"\n\nDani groans her response and rolls over.\n\nJesse stretches in the front lawn while two Labs wrestle with each other a few feet away. She finishes up her jumping jacks when a voice calls out.\n\n\"Mornin Jesse. I see the early bird is out to play.\" Brenda stands in the front door way with her robe on holding a steaming mug of coffee.\n\nShe gives the older woman a lopsided grin. \"Morning Brenda. I feel the need to loosen up from the cramped flight. Plus, I'll get to sightsee along the way.\" \n\n\"Why don't you take one of the dogs with you? God know Shiloh could use a good run seeing how he is getting a little chunky from all the snacks Michael throws his way.\" She takes a sip of the coffee. \"If interested, the leashes are hanging on a nail by the backyard deck. Shiloh is very obedient and attentive.\"\n\n\"Thanks Brenda. It'll be fun to bring him along.\" She heads over to get the leash. From a distance she hears the older woman.\n\n\"Cujo, come boy. You need to help your master on the farm.\" The black Labrador runs up to the house and through the door.\n\n\"Well it looks like just you and me, Shiloh.\" She holds up the leash and the chocolate Lab barks. Familiar with the routine, he sits immediately awaiting the attachment of the leash. \"Hmm, it seems you are a rather good boy.\" Getting onto the road, they take off at first in a slow jog then speed up.",
        "An hour later Jesse and Shiloh lay sprawled out in the backyard. Huffing and puffing, the tall woman looks at her running companion and says, \"You wore me out.\" \n\nPanting with his mouth open and tongue hanging out, it looks like he is smirking. She scratches his neck. The Lab quickly rolls onto his back to expose his belly. \"Oh, you want me to rub your belly.\" \n\nAfter a couple of minutes she addresses him. \"I guess I better clean myself up for some chow.\" She heads into the house and up the stairs. On her way up, she smells the enticing aroma of coffee and bacon coming from the kitchen. Showering quickly and donning fresh clothes, she heads back down and into the kitchen. \"Good morning.\" She beams with her greeting.\n\nTyler looks over his newspaper. \"Mornin Jesse.\" He pushes his glasses back up with a thick index finger.\n\n\"Would you like some coffee?\" Brenda asks the tall woman.\n\n\"Yes, thanks.\"\n\nShe pours it and points to where the cream and sugar are. \"The children should be coming in any minute now. Dani wanted to help feed the horses this morning.\"\n\nAt that moment the kitchen door opens. In walk the three siblings. Dani still looks half-asleep. She sits down next to her lover and lays a head upon a strong shoulder. \"I don't know how you got up earlier to run.\"\n\n\"Okay everyone, foods on the table. Don't be shy Jesse, just dig in.\" Brenda begins piling some food on her husband's plate.\n\nDani leans in close. \"Would you like me to prepare your plate?\"\n\nJesse smiles and nods. She watches wide-eyed as the young woman scoops a hearty portion of scrambled with cheese, bacon, and hash browns mixed with onions, red peppers, and spices. Dani then grabs the small bowl at their place setting to fill it with the fresh fruit salad.\n\n\"How's that? Enough?\" Dani asks.\n\nJesse leans in to whisper. \"More than enough. In fact I may need your help to finish it.\"\n\n\"Oh, I'll definitely help.\" Dani responds as she rubs noses with the dark woman.\n\n\"Aw, come on, you guys aren't going to start sucking face at the table, are ya?\" Mikey feigns gagging. \n\n\"Michael,\" Brenda snaps. \"They can be affectionate if they so choose. If they want to, as you say, 'suck face', then let them.\" She looks over at the couple. \"As long as you don't get carried away and start other things at this table.\"\n\n\"We won't Ma.\"\n\n\"Good, because that is only reserved for your father and I.\" She adds suddenly.\n\nTyler looks over his paper again, and then continues eating silently. The rest of them at the table are all bug-eyed.\n\n\"Ma, I don't want to know what you and Pops do.\" Mikey starts in.\n\n\"And why not? You're the one who was conceived on this table.\" Brenda responds.\n\n\"Oh, god, I think I'm gonna be sick.\" He adds.\n\nTyler says nothing, hoping he won't be dragged into her twisted sense of humor.\n\n\"Ma, you know Mikey can't handle this. He's too sensitive.\" Kenny says with laughter.\n\n\"You leave your brother alone, Kenny. You want to start something? Ever wonder why you love the farm and the horses so much? Try the loft in the barn.\"\n\n\"Aw, Ma.\" Then Kenny shuts up just as quick so as not to provoke her.\n\nJesse doesn't know what to think. She stares at her food. Her and Dani are wishing they could crawl under the table.\n\nThe table conversation has died. Tyler stands up to leave. \"I'm going out for a pipe smoke. Honey, you care to join me in the laundry room later?\" He wiggles his bushy eyebrows for effect.\n\nDani and Jesse can't hold the laughter in any more. Mikey groans covering his face with his hands.\n\nAs breakfast comes to a close, Brenda asks the couple what they plan on doing today.\n\n\"I thought we could do some hiking at Red Rocks.\" The strawberry blonde answers.\n\n\"Oh, I'm sure Jesse will enjoy that. Why don't you prepare a picnic basket and make it a day?\"\n\n\"That's a great idea Mom. Thanks.\"\n\nJesse helps clear the table. \"Um\u2026would you like me to help with anything?\"\n\nDani walks up to her lover. Giving her a kiss on the cheek, she says, \"Nope. Why don't you go check out the farm? I'm sure Kenny will show you around a bit. I'll prepare our lunch. I want it to be a surprise.\" She scrunches her nose with a smile.\n\n\"Alright.\" She returns with a kiss.\n\n******\n\nA hawk flies overhead. The afternoon sun shines brightly in the clear blue sky. The cool air is pleasant as it caresses the skin. Dani pops another orange segment between her lips. Leaning over, she offers the juicy bit of fruit to the dark woman.\n\nJesse leans back on her elbows on the blanket they have spread out for their picnic lunch. The food consisted of boneless, skinless chicken breasts marinated in a Caribbean jerk sauce topped with lettuce, tomatoes, and red onions on a wheat and oat bun. The side dish was Brenda's famous cold tortellini salad. For dessert they had some oranges and raspberries. They washed it all down with a couple of beers. Jesse takes the offered fruit. Biting down, she then kisses the young woman softly.\n\n\"Do you like it up here?\" Dani asks tentatively.\n\n\"It's beautiful. Thanks for showing me the view.\"\n\nDani looks around for a second wondering if she can pull off what she has in mind. Looking back at Jesse, she says, \"I know of a much better view you may enjoy.\"\n\n\"Oh yeah? And what would that be?\" She asks in a seductive tone.\n\nThe small woman straddles her lover's hips. Unbuttoning her shirt and unclasping her bra in the front, she pushes the material aside. Breasts now exposed, her nipples become erect from the cooler air. She cups them in her hands.\n\n\"Oh, that is definitely a wonderful view. I like it very much.\" Jesse sits up placing her hands on the hips before her. She looks into sea green eyes filled with a primal passion.\n\nDani slowly rocks her hips as she kneads her breasts pulling on the nipples with her thumb and forefinger. \"God, Jesse\u2026yesss.\" She begs through half lidded eyes.\n\nA crushing kiss passes between them. Dani adjusts her position to have her right knee up against Jesse's crotch. The tall woman bends at the knees to have her left knee pressed to the young woman's sex.\n\nThey kiss and Jesse begins the slow grind while taking over where Dani's hands were on her nipples. Dani grabs the hips before her to grind herself in harder. Her climax is near. \"Oh, Jesse\u2026. mmm.\" Holding her weight upon her hands now she leans forward to give her the leverage to grind into the tall woman's crotch. Kissing again, their climaxes are screamed into each other's mouth. They lay there panting and basking in the warm sun.\n\n\"I thought we could drive into the town, walk around and have dinner there.\"\n\n\"Sounds good to me.\" Jesse responds.\n\nDani props herself up folding her hands on the dark woman's chest and laying her head on it. \"I love you.\"\n\nJesse smiles. \"I love you too.\"\n\nIn town Jesse feels as if she stepped back in time about fifty years. The storefronts are somewhat rustic in architecture. The cobblestone sidewalks add to the feel of a time long passed. Passing a country western store, Dani pulls the tall woman inside. \"Ooh, let's go in. I've wanted to get a new pair of boots. Maybe they'll have the style I want.\"\n\nInside, the soft tune of a country western song plays over the speakers. Dani excitedly walks up to a hat rack. Checking out a soft brown suede hat, she puts it on. \"What do you think?\"\n\nJesse turns her attention to the small woman after looking over the belt rack. Instantly she experiences d\u00e9j\u00e0 vu. The brown hat brings her into another time period. She hears horses and the crack of a whip. Dani and herself are on horseback chasing after a stagecoach. She comes back to the present and shakes her head.\n\n\"Are you alright?\" Dani asks.\n\n\"Yeah, I just had some kind of flashback. It was weird. Never mind.\" She looks at the hat again. \"It looks great on you. Brown works well.\"\n\n\"Here you try this one.\" Dani hands her a black leather fedora style cowboy hat. The tall woman tries it on and looks in the mirror nearby. \"It looks great on you. It'll be perfect with your vest and chaps.\"\n\n\"Ya think?\" Jesse questions.\n\n\"Definitely. Lay it at the counter. I told the cashier we'd be piling stuff there.\"\n\n\"Now you want me to dress as a cowboy?\"\n\nDani leans in to whisper in a tantalizing ear. \"It'll be so hot when you fuck me from behind in full cowboy gear and strap-on. I'll be your cowgirl and wear a short skirt and no panties.\" \n\nJesse licks her lips at the visions. \"Well, then, what else are we going to get here?\"\n\nThe strawberry blonde pats Jesse's cheek. \"Boots.\"\n\nThey each pick out a pair of boots. Again, brown for Dani and black for Jesse. The young woman also gets a couple of shirts. Jesse returns to the belt rack to pick out the one that caught her eye earlier. She then glances at the various buckles in the glass case at the counter.\n\nSuddenly the tall woman feels something wrong in her gut. She straightens to her full height and looks around. The brunette cashier looks at her when the tension in the room is evident. Jesse begins to weave her way between the aisles of the store. Dani is nowhere in sight.\n\nJesse, I'm in a bit of trouble. Please hurry! \n\nUpon hearing her Love's spirit call to her, Jesse sprints to the back of the store. The cashier curiously follows wondering what is going on to make the tall woman act in such a way.\n\n\"Well, well, aren't you a pretty little thing?\" The man says with a partially toothless smile.\n\nDani turns. Goddamn, why do they always come to me? What the fuck am I? Fly paper for freaks?\n\n\"Hold on there cutie.\" He grabs her by the arm. \"I'm not going to hurt you, unless you want me to.\"\n\n\"Get your filthy hands off me.\"\n\nHe slaps her across the face. \"I said I wasn't going to hurt you but you're a feisty one. Maybe the only way you'll understand is if I do smack you around. Seems the only way you bitches listen is if you get hit. You're all the same.\" He squeezes his hold on her upper arm.\n\n\"Ow, you're hurting me! Let go!\" She tries to pry his fingers off. \n\nJesse turns the corner into the dressing room where the supply room is also located closer to the back end. She sees the young woman trying to get out of this brute's grasp. From behind, Jesse throws a back swing punch to the side of his head. He stumbles against the wall. Jesse takes hold of Dani. \"Are you okay?\" She notices the red mark on the young woman's cheek. \n\n\"You fucking cunt.\" The man yells. Pulling out a knife, he wields it in front of Jesse. \n\nInstantly in the heat of her rage, she kicks it out of his hand and comes at him full force. She knees him in the groin. As he bends forward, she drives an uppercut to his jaw. When he falls to the floor, she kicks the man's face in. The loud crunch that is heard indicates the seriousness of the injury as the blood spurts out of his nostrils and mouth to pool onto the floor. She doesn't care if she broke his nose, jaw, or even killed him.\n\nThe look Dani witnesses in her lover's eyes sends a shiver down her spine. She has never seen a look of pure anger, violence and battle lust. The young woman gently touches her lover's arm. \"Jesse, let's go.\" Not getting any kind of a response, she moves around to the front of the tall woman. With one arm around her waist, she raises her other hand to cup the sculptured cheek with her palm. \"Jesse, please look at me?\"\n\nA flicker in the icy silver blue eyes brings her back. Jesse looks at the young woman. Her eye color returns to their normal cerulean blue.\n\n\"Please, let's leave?\" Dani asks again.\n\nJesse comes out of her rage and nods her head. As they turn around, they come face to face with the sheriff.\n\n\"What's going on here?\" He asks roughly.\n\nThe cashier steps out from behind him. All four sets of eyes look at each other for a moment. Dani starts. \"That man attacked me, and my girlfriend came to my defense.\" Dani hooks an arm around Jesse's.\n\n\"Oh, really?\" He questions sarcastically.\n\n\"It's true officer,\" the cashier interrupts. \"That man did attack her, and he is also the one responsible for the rapes in this town.\"\n\n\"And how do you know he is?\" the officer asks.\n\n\"Because\u2026\" she bows her head in shame, \" he is my husband, and some of the women he has raped were close friends of mine. I\u2026was scared of him. Too scared to ever press charges when he raped me on occasion. And he knew it. That's why he ventured out further because he believed I would never tell. But never telling was my greatest mistake. These women have done nothing wrong. I'm not pressing any charges against them and I know Henry won't do it either because of his pride. But your evidence is on the store video camera. You can take that if you want.\"\n\n\"I just will. Thank you Ma'am.\" The sheriff calls on his radio for an ambulance to come by as he bends down to check the man's pulse.\n\nThe three women walk to the front of the store. The cashier says, \"I'm sorry this has happened. If I had pressed charges against him months ago\u2026\"\n\nDani cuts her off. \"No, please. It's over now. Thank you for coming to our defense. And thank you for your bravery.\" She lays a gentle hand on the woman's arm.\n\n\"Well, um\u2026 I'll ring up your stuff.\" The brunette cuts the tags off all of the items on the counter that the couple placed there. The two take no notice as they hold each other tightly and revel in each other's warmth and safety. Jesse hands her a Visa Card. The cashier only rings up the boots. Jesse looks at the receipt and then up at the brown eyes behind the counter.\n\n\"Please, I owe you so much more. I wish I had someone to care for me as you do her.\" She nods towards Dani.\n\n\"Thank you.\" Jesse says and they walk out.\n\n\"What happened there?\" Dani asks.\n\n\"She only charged us for the boots.\"\n\n\"But\u2026 we have a couple of hundred dollars worth of stuff here?\"\n\n\"I know. This is the way she wanted it. She said she wished she had someone to care for her the way you have me.\"\n\nDani hugs her. \"I'm so grateful I have you.\" They pile their bags into her brother's Jeep Cherokee. \"Hey, do you think you'll stop having those nightmares now?\"\n\n\"Hmm, maybe.\"\n\n******\n\nThey pull into the driveway of the ranch. Jesse grabs all of the bags while Dani opens the front door. Tyler and Kenny are on the couch watching the game.\n\n\"Hi, we're home.\" Dani says.\n\nThe men notice the deep purplish red bruise on her upper cheek.\n\n\"Sweetie, what happened to you?\" Tyler asks as he gets up to make a closer inspection.\n\nBefore she has a chance to answer, Kenny being the irrational one advances towards Jesse. \"What the fuck did you do to my sister??\" In a flash, he punches her in the eye. She falls to the floor and sits there holding her face silently.\n\n\"Kenny! NO! She didn't hurt me.\" Dani rushes over to her lover. On her knees she cradles Jesse's head to her chest. \"You goddamn idiot! Why do you always have to jump to conclusions?\" \n\nBrenda steps in from the kitchen. \"What is all the racket in here?\" She sees the two women on the floor. Kenny is just a couple of feet away huffing in anger. \"Tyler, what is going on?\"\n\nHe turns to her. \"Honey, I don't know, but I'm sure we'll find out.\" Looking at Kenny, he says, \"Kenny, go sit down before I knock your ass.\" Green and brown eyes lock for a moment. \"Now.\"\n\nKenny quietly sits.\n\n\"Mom, I need some ice for Jesse's eye. Please, it's swelling up quick.\" Dani pleads.\n\n\"I'll get you a steak, dear, it will be more effective.\" She hurriedly goes into the kitchen.\n\n\"You think you girls can get up and come into the kitchen also?\" Tyler asks.\n\nThey nod. In the kitchen they all sit at the table. Brenda gestures for Jesse to put her head back. She then gently places the piece of now half frozen meat that she ran under cold water, on Jesse's eye. \"I know it's disgusting, dear, but it will really help. Just don't let the dogs near you or they'll lick your face all night long.\" She tries to lighten the mood with her comment. \"Dani, here's some ice for your bruise.\"\n\n\"Thanks Mom.\"\n\n\"Why don't you tell us what happened?\" Tyler jumps in.\n\nDani sighs then begins explaining. \"We were in a western shop picking out some things. I went into the dressing room to try on a skirt. When I came out, there was a man standing there. He attacked me when suddenly Jesse came and beat him unconscious. He was the one who gave me the bruise when he backhanded me.\"\n\nKenny stood listening by the fridge. Upon hearing what happened, he stormed out the back door.\n\nAll of them see him leave. \"You know he feels bad about this.\" Brenda mentions. \"You'll need to forgive his rash temper.\"\n\n\"You sure have been coming to my daughter's rescue on more than one occasion.\" Tyler says to Jesse. \n\nJesse looks at him with her one good eye. \"I love her with my life.\"\n\n\"Yes, I see that. Thank you Jesse. And I'm sorry Kenny gave you that shiner.\" He takes his glasses off. \"To my shame, he and I have been skeptical of you.\"\n\n\"Daddy how can you say this?\"\n\n\"Now, Dani let me finish.\" He looks at the tall woman again. \"We're a bit old fashion, and we believed that Dani needed a good strong man to settle down with. Do you get my drift?\"\n\nShe nods slowly.\n\n\"Well, I clearly see you are the man for the job. And I thank you greatly for loving her the way you do. Forgive us.\" He stands and puts his glasses back on.\n\nJesse nods again then looks at her Love.\n\n\"I'm going out for a pipe smoke and check on Kenny.\" He walks out.\n\nDani kisses the dark woman tenderly on the lips.\n\n\"Why don't the two of you go upstairs and rest up a bit. Dinner will be ready in an hour. And don't you take that steak off until it's completely defrosted. I'll cook it later and feed it to the dogs.\" Brenda checks the pot of gravy on the stove. As the two women walk off, Brenda calls over her shoulder. \"Jesse, thank you for being there for my baby.\" With that she returns to cooking.\n\nJesse lies back on the bed. Dani perches herself on a muscular shoulder, and they hold each other. \"When we return home, I'm going to look into taking self defense classes.\"\n\n\"Are you sure?\" Jesse asks.\n\n\"Yes, of course. I need to learn how to defend myself. You can't be next to me twenty-four hours a day.\"\n\n\"If I could, I would.\" Jesse responds.\n\n\"I know, and I love you for that. How about we take classes together?\"\n\n\"Sure, have you ever thought about Aikido?\" The dark woman spreads her legs to allow Dani the room to settle herself between them.\n\n\"Oh, isn't that the martial art where you use your opponents strength against them?\" She snuggles further into Jesse's neck.\n\n\"Yep.\"\n\n\"Sounds good, I like it.\"\n\n\"It's also a great art because even if your opponent is three times bigger than you, you can still take him down without a problem.\"\n\n\"Oh yeah, I will like that.\"\n\nThey take a nap before dinner.\n\n******\n\nSome hours later, azure eyes flutter open. The moonlight shines brightly through the sheer curtain windows. She looks over at the bright red numbers on the alarm clock. 12:30am. Damn, have we slept so long? She puts a hand up to her black eye. Wait a minute. The steak is gone. Ugh, I hope I'm not laying on it. She feels around the pillow and finds nothing. She also notices the ice pack Dani had earlier is gone too. Kissing the strawberry blonde crown, she tries to stir the young woman awake.\n\nDani mumbles something unintelligible and snuggles deeper into the tall woman's neck.\n\n\"Baby, wake up,\" Jesse wiggles her body to move Dani, \"you missed dinner.\"\n\n\"Wha\u2026?\" Emerald eyes slowly open to look into her lover's face. \"Dinner?\"\n\nJesse smiles. \"Yeah, dinner. We haven't eaten. Aren't you hungry?\"\n\nSuddenly the young woman's stomach growls loudly. \"Yeah, I am.\"\n\n\"Figures. Come on, we'll have to raid your mom's fridge for scraps.\" She reaches out to turn the nightstand lamp on. At that moment she notices the note attached to the lampshade. Grabbing it, she reads:",
        "I came to check on you two when dinner was ready but you were dead to the world. I decided to leave you be. When you awake, I'm sure you'll be hungry, especially Inchworm. So I left two plates of food prepared for you in the fridge. Oh, and don't worry, I took the steak and ice pack.\nLove,\nMom\n\n\"Baby, you're mom left dinner for us in the fridge.\"\n\n\"Great.\" Dani gets up and straightens her clothes.\n\n\"I'm going to wash my face from the meat smell. I'll meet you in the kitchen.\"\n\n\"Alright.\" In the kitchen, Dani opens the fridge to see what's available. \"God, Mom, you sure didn't spare us anything.\"\n\n\"Are you talking to yourself?\" Jesse asks peeking over Dani's shoulder.\n\n\"Don't scare me.\" She sticks one of the plates in the microwave.\n\n\"So, what are we having?\" She asks as she grabs two beers.\n\n\"Country fried steak, mashed potatoes with pepper gravy, sweet peas with mushroom, cornbread, and Mom's famous cheesy ginger cauliflower.\" She places the hot plate in front of Jesse.\n\n\"Damn, your Mom sure piled it on. I don't know if I can\u2026\"\n\n\"I know. I know. Don't worry, I'll help you.\" Dani scrunches her nose with a smile. \n\n\n\"I'm sure you will.\"\n\nAfter eating, they leisurely sit back patting their stomachs.\n\n\"I think we should go for a walk to help the food digest.\" Jesse says.\n\n\"If I can get myself off the chair.\" Dani comments.\n\nThey go out into the moonlit night. Millions of stars shine in the blackened sky. Walking down to the barn, they suddenly hear a commotion with the horses. Going inside to check on it, Dani turns the light on. The noise is coming from the last stall on the left. As they peer over the gate, they notice the horse lying on its side snorting loudly and whimpering.\n\n\"Shit that's Kenny's mare. It looks like she's decided to give birth now.\"\n\nJesse steps into the stall to look at the mare. Running her hands gently over the horse's belly, she sighs.\n\n\n\"Is something wrong, Jes?\"\n\nThe dark woman looks at her with concern. \"The horse's breathing shouldn't be this labored. She is having complications, and it feels like the colt is turned in the opposite direction. It looks like a breach.\" \n\n\"Can you help her?\" Dani asks.\n\nCerulean eyes look into emerald green. \"Yes. I'll need a few things and I'll need at least another pair of hands to assist with the birth.\"\n\n\"Okay, I'll get the stuff and wake the others.\" Dani sprints back up to the house.\n\nSome minutes later she returns with the whole family. \"Okay, here are some supplies and Dad said he can help. He's assisted with a breach before.\"\n\n\"Great.\" Jesse responds. She takes off her watch and tosses her shirt to the side. Only in her tank top, she sits behind the horse. \"Tyler, I need you to cradle her head. Keep her calm and facing away from what I'm doing.\"\n\nHe nods and sits at the mare's head. Dani joins him by gently stroking the animal's neck.\n\nJesse quickly applies a thick layer of Vaseline to her right hand all the way up to her elbow. She reaches inside carefully and as gently as possible pushes the colt's legs back in and around.\n\nKenny stands by the gate with Brenda. There are beads of sweat on his forehead. His face becomes ashen at watching Jesse's actions.\n\n\"Okay, now for the hard part.\" Jesse says. Everyone looks at her. \"Tyler, go ahead and straddle her neck. Dani, move to the center of her belly. Her breathing is very labored, so when she exhales, I need the two of you to firmly push down on her belly and towards me. She has exerted all of her strength, and needs help now to push the colt out.\" They both nod and begin pushing. \"Great, keep going. Give her a chance to inhale first. The colt is coming out.\" She takes it into her arms as the rest of the baby slides out. \"It's a boy.\" She smiles at the group. \n\nBrenda claps her hands thanking the heavens. Kenny moves closer to them.\n\n\"Would the Daddy like to hold his new baby?\" Jesse asks the tall farmer.\n\nHe nods and gets on his knees. With outstretched arms he takes the colt. \"Are they going to be okay?\" He asks.\n\nJesse nods and gives him a lopsided grin. \"Why don't you see if she'll nurse him?\"\n\nHe brings the colt up to the mare and she immediately takes to her baby. They all smile at the sight.\n\nDani stands up and kisses the tall woman firmly. \"You were wonderful.\"\n\nJesse smiles in return.\n\n\"Jesse,\" Kenny starts, \"thank you. And\u2026I'm sorry. Truly.\"\n\nShe clasps her large hand on his shoulder in friendship. \"Well, I think I'll go clean up.\"\n\n******\n\nThe couple sleeps in each other's arms while the late morning sun outside shines down on the ranch. The two figures are oblivious to the outside world. The late night birthing incident wore them out. A soft knock comes to the door. The tall woman stirs. Someone's knocking. Ugh, I don't want to get up. Go away, it's too early.\n\nThe door slowly opens and Brenda pops her head in. Walking to the bed, she sees a tangle of arms and legs.\n\nJesse senses someone is staring at them. A blue eye pops open. As her one-eyed view comes into focus, she says, \"Yeah?\" in a raspy voice.\n\n\"I know your flight leaves this afternoon, and well\u2026 it's already noon. I have lunch prepared. I figured you two need to get up and get ready.\" Brenda states casually.\n\n\"Thanks.\"\n\nShe walks out of the room closing the door behind her.\n\n\"Baby, it's time to wake up.\" Jesse softly says into a small ear.\n\nDani does her usual mumble and is silent once again.\n\n\"I know you must be hungry. Lunch is ready and waiting for us.\" Jesse smiles as the strawberry blonde\u2019s head pops up.\n\n\"Food? Yeah, I'm ready to eat.\" Dani then falls back onto the shoulder.\n\nJesse extricates herself from the small woman's grasp then picks up a foot and begins a gentle tickle. \n\n\"I'm up. I'm up.\" Dani exclaims as her upper body shoots off the mattress.\n\n\"It's late and we need to pack up.\"\n\n******\n\nThey pull up the drive to their home. Jesse begins removing the packages and suitcases from the Pathfinder. Dani opens the front door and grabs the mail. \"Hey, we got a package in the mail.\"\n\n\"Oh, yeah? What is it?\" She places the bags down in the foyer.\n\nDani tears open the box addressed to her lover. From inside, she pulls out a brown suede skirt and a note. She looks up at Jesse with a raised eyebrow.\n\nJesse shrugs. \"What does the note say?\"\n\nThank you once again Miss Chandler for the work you did on Henry. He was hospitalized in stable condition. He will be transferred to the state prison once the court date is over. There is enough evidence to put him away for good. That means freedom for me. My lawyer will be sending him the divorce papers.\nThis is the skirt I can only presume your mate was trying on that day. I decided to send it to you. I hope she will enjoy wearing it, and you enjoy seeing it on her. Thank you once again.\nSincerely,\nKathy\n\n\"Wow, can you believe this?\" Dani asks.\n\n\"So, is it the skirt?\"\n\n\"Hmm?\" She looks at the article of clothing. \"Oh, yeah, it is. I was going to add it to our purchase. What do you think?\"\n\nJesse takes a step closer and wraps an arm around the young woman's waist. \"Oh, I think I'm going to like it very much on you.\" She kisses her tenderly, and then going into the kitchen she checks the voice messages.\n\nDani looks in the fridge for something to eat.\n\n\"Janice called and said Artemis is doing great. Said she loves spending time with the fur ball. And, guess what?\" Jesse asks as she leans on the counter.\n\n\"What?\" Dani starts making a sandwich.\n\n\"We've been invited to a costume party.\"\n\nDani looks at her lover. \"Explain.\"\n\nJesse chuckles. \"Since the clinic is going to reopen on Monday, Janice said they decided to have a party to celebrate it. According to Janice's message, we are to show up tomorrow at 5pm to partake of the festivities at the clinic's backyard area.\" Jesse eyes her mate. The smirk she sees is a tell tale sign something is up. \n\nDani continues to eat her sandwich in silence. \"You knew about this, didn't you?\" She takes a seat next to the young woman. Dani refuses to make eye contact. \"In fact, you planned this with them. You set me up. The trip to your family all of a sudden was to get me away from finding out about the party. You little weasel.\" She begins to poke Dani in a tickling manner in the ribs. \n\n\"Ah, Jesse, it tickles. Don't. Ah.\" She holds her lover's hands at bay and can't help but laugh at being found out.\n\n\"And let me see, I bet we're going as cowboys to this event, huh?\" Jesse gives her the look.\n\n\"Yes?\" Dani squeaks.\n\nThe tall woman pulls her up into her lap. \"I love you Inchworm.\"\n\n******\n\nThe grill is hot. Hot dogs, burgers, brats, and chicken breasts cover the surface. Four large coolers filled with ice contain plenty of beer and soda. People talk in small groups. A couple of dogs run around enjoying any scraps they could possibly get. The couple walks into the yard. Everyone cheers upon their entrance. \n\nDani sports her cowgirl get-up. Brown suede skirt with matching boots and hat, and a white button-down blouse. Jesse wears blue jeans with her leather chaps, matching boots, hat, and vest, and a blue jean shirt. \n\nArtemis barks and runs up to her parents.\n\n\"Hey Arty, how ya doin? Did you miss us girl?\" Jesse scratches behind the Shepherd's ears and around her neck. \"Did you have fun with your Auntie Janice?\"\n\nDani receives the welcomed licks from her furry friend.\n\n\"Hey you two. It's so great you came.\" Janice comes up dressed as a Cubs player. \"Oh, it's so nice to see you again. How was your trip?\"\n\n\"It was fine,\" Dani, answers, \"my family just loves Jesse.\"\n\nMiguel saunters over looking like Zorro. \"Hey, hey Boss. How you doin?\"\n\n\"Hey Miguel. You're looking rather daring.\" Jesse responds.\n\n\"You like? Makes me look sexy huh?\"\n\n\"I wouldn't go that far Miguel, but if your wife thinks so, then that's good enough.\" The tall woman says playfully.\n\nThey all laugh. He hands the two women a couple of beers. \"Hey Dani, have you been beating the Boss? Isn't that a bit of a shiner you have there?\" \n\nDani decides to answer. \"No, I'm not beating her up. She just had a bit of a run in on the farm. That's all.\" She ends it there without giving further information.\n\n\"Well, how about some food for you two?\" Janice asks\n\n\"Sounds great. I'm hungry.\" Dani responds. The small group laughs again. \"What?\" Dani asks.\n\n\"Sweetie, when are you not hungry?\" The tall woman inquires as she snakes her arm around a small waist.\n\nAs the night wears on, azure eyes turn almost a violet color as she watches her Love slightly bend over to reach for some strawberries at the food table. You sure are looking good.\n\nWithout turning around Dani responds. Oh yeah? You see something that appeals to you?\n\nHmm, everything on your luscious body appeals to me Baby. Jesse quietly walks up behind her. She places a large hand on a firm butt cheek.\n\nDani leans into the contact. Mmm. Should I take your word on it?\n\nJesse leans over and kisses the spot just below the earlobe. How about I show you? The tall cowboy takes the small hand in hers and leads her inside the clinic. They head to Jesse's office. She unlocks the door, turns on the light, and pulls her lover inside.\n\nDani moans at the crushing kiss that passes between them. Tongues duel for control. Finally the kiss breaks when they need some air. \"My, my.\" Dani states in a southern type drawl. \n\nJesse leads her to the desk. She sits in her leather chair with Dani facing her. She hoists Dani onto the desk and parts her knees. \"I've been watching you tonight in this skirt. And every time your hips sway my mouth would water. You've been torturing me and I can't take it anymore. I've got to have you now.\"\n\nDani strokes the dark woman's cheek. With lust in her sea green eyes, she says, \"Then take me.\" She bends for another kiss then leans back on her elbows placing her heels on the edge of the desk. \n\nJesse grows weak at the sight. Pushing the skirt further up, her eyebrows shoot up at the sight of Dani's pussy already glistening with moisture. She looks up into emerald green eyes. \"So, you didn't wear panties. How nice.\" She dips her head to lick at the moisture evident on the outer lips. Using her thumbs, she spreads Dani's folds to expose the hidden treasures she desires. An erect nub faces her. She blows on it gently then dips her tongue into the hot center.\n\nDani throws her head back at the contact. \"Oh, yes.\" \n\nJesse digs her tongue in deeper causing the small woman's hips to start a rhythmic grind onto her face. Jesse then replaces her tongue with two long fingers as she moves up to stroke an aching nub. Taking it between her teeth she sucks harder. \n\n\"Fuck, yeah\u2026right\u2026there. Don't stop.\" Dani grabs the back of Jesse's head to push her in further as her hips begin to buckle. \"Oh, yeah Jesse, fuck me. Fuck my pussy. Mmm\u2026 Aahhh.\"\n\nJesse feels her own wetness on the inside of her boxer briefs. The young woman's words are driving her crazy. She grabs Dani's legs to throw them over her shoulder. Pumping her fingers deeper, she feels Dani's walls tighten.\n\n\"Ah\u2026 ah\u2026 AHHH JESSE.\" She collapses onto the desktop as Jesse licks the remaining juices away.\n\nThe tall woman unzips her pants to pull out the hidden dildo. \"I have a surprise for you.\"\n\nDani gets up on her elbows again. \"So far, I love surprises.\" She looks down at the cock. \"Are you going to use that on me?\"\n\nJesse nods with a smile. Suddenly she remembers something. Opening one of desk drawers she rummages through the bottom of it, and removes a package. \"I forgot I had purchased this before the fire.\" She rips open the package and holds it up for Dani to see. The cock she holds is like none she's seen before. Instead of having a flat base on the one end, it extends further and curves up.\n\n\"Mm, a cock for both of us to enjoy.\" Dani wiggles her eyebrows.\n\nJesse turns to the side to replace the dildo she's wearing with the new one. With a minor adjustment she inserts the curved end into her own now sopping pussy. She grunts as it fills her, and then faces Dani again.\n\nThe strawberry blonde sits up. Reaching a small hand behind Jesse's neck she pulls her in for a passion filled kiss. Her free hand slides down the jean shirt until she reaches the dildo. Giving it a tug, she smiles at the reaction she receives.\n\nJesse moans while her hips jerk forward. Without breaking the kiss, she quickly unbuttons the young woman's white blouse and unclasps the front of the bra. Strong hands stroke nipples steadily growing hard. Taking them between thumbs and forefingers she twists and tugs causing the young woman to gasp and throw her head back. She then pushes Dani back onto the desk and slides the cock inside.\n\n\"God, yes.\" Dani cries out.\n\nJesse sets the pumping motion. Groans fill the small office. \n\n\"Oh, it\u2026feels\u2026so good.\" The blonde confesses. \"Tell me\u2026you feel it.\"\n\nThe dark woman's eyes are tightly closed. \"Ugh\u2026 YES.\"\n\n\"God, harder\u2026 harder\u2026 Ahh, fuck my pussy good Jesse.\"\n\nJesse begins slamming herself into Dani's cunt. She sees explosions behind her eyelids. A guttural groan rips from her chest as her inner walls tighten around her end of the cock. \"Fuck\u2026 YEAH!\"\n\nDani reaches the precipice at the same time. \"Oh, JESSE.\"\n\nThey ride the waves together until hips stop bucking. Jesse falls onto her lover exhausted. Moments later she slides out. Quickly undoing the harness strap, she removes the dildo completely and lays it to the side. Looking over at the small woman she notices the tears. \"Hey,\" she says softly. She scoops her lover up in her arms and places her on her lap as they sit back into the chair. Jesse wipes the tears from the young woman's eyes. \"What is it, baby. Did I hurt you? Was I too\u2026\"\n\n\"Sshh,\" Dani shushes her tenderly with pouting lips. \"You could never hurt me. I've known that from the first day we met. And you should know by now your loving could never be too rough or kinky for me. I love living to please you and have you please me. I am crying because I'm just\u2026so damn happy. We almost lost each other at one point and it scared the life out of me. But now I understand we'll always be together. We've known each other since the beginning of time and we'll continue to do so until the world ceases. I can't recall when I have ever been so filled. You make my heart sing every time I look into those icy blue eyes and see your passion.\" \n\nA tear slides down Jesse's cheek. \"Dani, I am so in love with you that my brain fails me at times when you are near. I love you and will always love you clear through all eternity.\" She reaches into her vest pocket. Covered in the palm of her hand, she holds the small object she has wanted to present to her Love for some time already. She lifts the small chin to look deeply into sea green pools. \"Danielle Sheridan, would you do me the honor of becoming my wife?\" She opens her hand exposing the silver band.\n\nNew tears roll down the strawberry blonde's face. She smiles ever so brightly, and says in a choked up voice, \"Yes\u2026 of course.\" \n\nJesse leans down seizing the soft sensuous lips before her with whispers of undying love.\n\n\nTHE END"
    ],
    "authorname": "Alex the Cat",
    "tags": [
        "jesse dani",
        "jesse responds",
        "jesse asks",
        "jesse sits",
        "inside jesse",
        "face jesse",
        "dani grabs",
        "jesse takes",
        "head jesse",
        "hmm love"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/but-now-one-soul"
}