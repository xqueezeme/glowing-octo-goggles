{
    "title": "How to Analyze Your Scores",
    "pages": [
        "In order to profit from this note, you must be able to read and use simple algebraic formulae. You might want to have your calculator handy to follow the examples as you read.\n\n*************************\n\nIt might seem that your Literotica scores don't tell you very much, but there's more in them than meets the eye. You can extract more information from them than you might expect&#8212;although probably not as much as you'd like. We'll look at some specific examples, involving particular cases, and using specialized reasoning, first. Then we'll move on to some general statements. The latter don't say as much as one might hope, but they have the virtue of always applying.\n\nTo begin with, let's remember that each voter can assign one, two, three, four, or five stars to a story. Literotica counts up all the assigned stars for a given story, divides that total by the number of people who voted on that story, and then rounds the resulting number to the nearest hundredth. It appears that Literotica's computer rounds so that the second digit past the decimal point gets bumped up by one if the third digit past the decimal is a five or larger&#8212;and otherwise doesn't change. This is typical of rounding done by computers, and we will assume throughout that Literotica's computer behaves this way. Thus, for example, if 97 readers have awarded 405 stars to your story, your score is 4.18&#8212;which is the result of rounding off the quotient 405/97 = 4.17526&#8230;.\n\nWe can work this backwards to some extent, but the score calculation destroys information in two places. That is, if all we have is the pair of numbers that Literotica gives us for a story&mdash;its score and the number of readers who voted&mdash;we can't reconstruct all of the information that went into finding that score.\n\nIn the first place, the number of voters who awarded your story five stars is concealed. Literotica knows, but we can't tease that information out of what it gives us. The same is true of the number of voters who awarded your story four stars, three stars, two stars, or dreaded one-bombs. Generally speaking, we can't reconstruct those numbers from the information that Literotica gives us. This effect is complicated by the fact that Literotica periodically removes story votes that are highly inconsistent with the general pattern of voting that it believes it sees for the story in question. These periodic removals are called \"sweeps,\" and only the folks at Literotica know what criteria they use to decide what votes to discount.\n\nThe second place where information gets lost is in the rounding. If, for example, I have a story whose score is reported as 4.01 with 412 readers, I can't reconstruct the exact number of stars my story has earned from that information. In fact, that story might have anywhere from 1651 stars to 1654 stars. Try it: 1651/412, 1652/412, 1653/412, and 1654/412 all round off to 4.01.\n\nSometimes, by following a story score's behavior for a little while, we can recapture missing information. In the example of the previous paragraph&#8212;a story with a score of 4.01 from 412 voters, for example, let's suppose that a day later I find that story's score reported as 4.02 with 413 readers.\n\nNow it might be that a sweep is in progress. In that case, it's entirely possible that several votes were discounted but replaced by other votes between the two times I checked my score. Because we don't know much about sweeps except that they do take place, there isn't much we can say about what has actually happened in the voting on my story.\n\nSuppose, for example, that I had 1654 stars yesterday. It could be that Literotica swept away three one-star votes&mdash;only to have four new voters each give me a two-star vote. So today I have 1659 stars and 413 voters, which gives the expected score of 4.02. On the other hand, it is also possible that Literotica swept away a single one-bomb, and that one new voter gave me three stars while another gave me four. Then I'd have 1660 stars and 413 voters&#8212;which also gives the expected 4.02. And there are many, many other scenarios under which a sweep could produce the behavior I've observed in my score.\n\nSo sweeps further cloud the picture. But it's usually fairly easy to tell when there's a sweep in progress, because they take several days and folks on the Literotica Bulletin Board frequently remark on the way the number of votes they've gotten for some of their stories has decreased. (You may even see that the numbers of votes for some of your own stories have gone down when a sweep is going on.) Most of the time, we seem to be justified in believing that no sweep is under way.\n\nAnd if we don't believe that a sweep is in progress, we can say some interesting things about the example we're currently discussing. We know, to begin with, that voter number 413 gave me a five. That's because my score went up from 4.01 to 4.02, and, in the absence of a sweep, a score can't possibly rise unless a voter has given me a vote that's bigger than the score was to begin with.\n\nBut, in this case, we can say even more. We saw above that, yesterday, when I had 412 votes, I must have had from 1651 to 1654 stars. Today, my score is 4.02, with 413 voters, so now I must have at least 1659 stars, but no more than 1662 stars. We are assuming that sweeping isn't going on at the moment, so there's only one way this could happen: I must have had 1654 stars yesterday, and I must have 1659 stars today.\n\nOne-bombs are often easy to catch this way. Suppose that my story had a score yesterday of 4.50 with 112 votes, and today I see a score of 4.47 with 113 votes today. There just isn't any way that could happen unless that single vote was a one-bomb. (Remember&mdash;we've assumed no sweep.)\n\nBut these examples are all rather special; they involve particular lines of reasoning that are specific to the numbers in question. Now I'll give some principles that we can always apply. Then I'll give an extended example.\n\nI won't give here the reasoning that underlies these principles. I have two reasons: One the one hand, most readers won't want to slog through the mathematics, while, on the other hand, it's not at all clear that Literotica will permit the formatting and the HTML code that's necessary to discuss the mathematics in readable form.\n\nReaders who want to know where these principles come from can use any of the methods that Literotica provides to request the details from me. But do be sure to give me a way to get them back to you if you tell me you want them. Anonymous requests won't work&#8212;and I won't even be able to tell you why I haven't responded! A warning: Please don't be surprised to find that the reasoning involves some algebra&mdash;nothing advanced, but algebra nonetheless.\n\n*************************\n\nIn the following statements, N stands for the total number of voters for your story, and S stands for its score as reported by Literotica. All of the principles listed below are true generically&mdash;regardless of whether or not a sweep is in progress.\n\nFive-star Principle:\n\nLet n denote the number of five-star votes awarded to a story. Then\n\na) n is no smaller than (S&#160;&#8211;&#160;4.005)&#160;&#215;&#160;N, and\n\nb) n is at most N&#160;&#215;&#160;(S&#160;&#8211;&#160;0.995)/4.\n\nFour-star Principle:\n\nLet n denote the number of four-star votes awarded to a story. Then\n\na) if S does not exceed 4.00, n is at most N&#160;&#215;&#160;(S&#160;&#8211;&#160;0.995)/3, and\n\nb) if S is 4.01 or larger, n is at most (5.005&#160;&#8211;&#160;S)&#160;&#215;&#160;N.\n\nThree-star Principle:\n\nLet n denote the number of three-star votes awarded to a story. Then\n\na) if S does not exceed 3.00, n is at most N&#160;&#215;&#160;(S&#160;&#8211;&#160;0.995)/2, and\n\nb) if S is 3.00 or larger, n is at most N&#160;&#215;&#160;(5.005&#160;&#8211;&#160;S)/2.\n\nTwo-star Principle:\n\nLet n denote the number of two-star votes awarded to a story. Then\n\na) if S does not exceed 1.99, n is at most N&#160;&#215;&#160;(S&#160;&#8211;&#160;0.995), and\n\nb) if S is 2.00 or larger, n is at most N&#160;&#215;&#160;(5.005&#160;&#8211;&#160;S)/3.\n\nOne-star Principle:\n\nLet n denote the number of one-star votes awarded to a story. Then\n\na) n is no smaller than (1.995&#160;&#8211;&#160;S)&#160;&#215;&#160;N, and\n\nb) n is at most N&#160;&#215;&#160;(5.005&#160;&#8211;&#160;S)/4.\n\nRemark:\n\nThese principles don't give very tight estimates for the number of votes of a particular kind. They are, nevertheless, the best general estimates available from the information that Literotica gives us. The uncertainty is built-in and can't be avoided.\n\n*************************\n\nExample:\n\nAs I write this note, I have a story whose score, with 73 votes, is 4.53. Let's see how the principles just given apply to this story.\n\nFive-star Analysis:\n\nAccording to part a) of the Five-star Principle, the number of five-star votes that this story has received is no smaller than (4.53&#160;&#8211;&#160;4.005)&#160;&#215;&#160;73, or 0.525&#160;&#215;&#160;73 = 38.325. But 0.325 votes is impossible, and 38.325 is the smallest possible number of five-star votes my story could have. Therefore, my story has to have at least 39 five-star votes.\n\nOn the other hand, part b) of the same Five-star Principle says that my story has no more than 73&#160;&#215;&#160;(4.53&#160;&#8211;&#160;0.995)/4 five-star votes. That's 73&#160;&#215;&#160;3.535/4 = 64.51375, and I can't have any more five-star votes than that. But, again, fractions of a vote aren't possible, so the highest number of five-star votes I could have on this story is 64.\n\nConclusion: The number of five-star votes I have for this story falls somewhere in the range of whole numbers that begins with 39 and ends with 64.\n\nFour-star Analysis:\n\nMy score of 4.53 is \"4.01 or larger,\" so I will use part b) of the Four-star Principle now. It says that I have at most (5.005&#160;&#8211;&#160;4.53)&#160;&#215;&#160;73, or 0.475&#160;&#215;&#160;73 = 34.675 four-star votes for this story. Fractional votes are still impossible, so there can't be any more than 34 four-star votes.\n\nConclusion: I have no more than 34 four-star votes for this story.\n\nNotice that if there are 34 four-star votes, the other 39 of the 73 votes must all be five-star votes, or the average doesn't work out right. And if there were 35 (or more) four-star votes, there couldn't be enough five-star votes to make a score of 4.53 with just 73 votes.\n\nThree-star Analysis:\n\nAccording to part b) of the Three-star Principle, there are at most 73&#160;&#215;&#160;(5.005&#160;&#8211;&#160;4.53)/2 three-star votes for this story. That's 73&#160;&#215;&#160;0.475/2 = 17.3375 of them.\n\nConclusion: There are no more than 17 three-star votes among my 73 votes.\n\nThis time, we notice that if there are 17 three-star votes, then we can reach the score of 4.53 with 73 votes only if there are exactly 73&#160;&#8211;&#160;17 = 56 five-star votes. And 56 falls well within the range we determined in our five-star analysis.\n\nTwo-star Analysis:\n\nPart b) of the Two-star Principle tells us that there are at most 73&#160;&#215;&#160;(5.005&#160;&#8211;&#160;4.53)/3, or 73&#160;&#215;&#160;0.475/3 = 11.558333&#8230; two-star votes.\n\nConclusion: This story collected at most 11 two-star votes.\n\nIf there happen to be exactly 11 two-star votes, the only way to get the books to balance is to have a single four-star vote and 61 five-star votes. These numbers are consistent with our earlier analyses. Any more than 11 two-star votes, and balance isn't possible.\n\nWhat about the one-bombs?\n\nPart a) of the One-star Principle assures us that there must be at least (1.995&#160;&#8211;&#160;4.53)&#160;&#215;&#160;73 one-bombs amongst our votes. But that's a negative number, so part a) of the One-star Principle doesn't tell us anything we didn't already know: The number of one-bombs is at least zero. A good look at the principle tells us that this will happen any time a score exceeds 1.99. So, if our writing is any good at all, part a) of the One-star Principle isn't very useful. (A similar phenomenon is attached to the Five-star Principle, half of which isn't very useful if a score less than 4.01)\n\nOn the other hand, part b) of the One-star Principle says there can't be any more than 73&#160;&#215;&#160;(5.005&#160;&#8211;&#160;4.53)/4 = 73&#160;&#215;&#160;0.475/4 = 8.66875 one-star votes for this story.\n\nConclusion: I know that this story can't have been trolled more than eight times.\n\nNotice that if eight of the nasty critters are among my voters, then I must also have collected either 1 three-star vote together with 64 five-star votes or 2 four-star votes together with 63 five-star votes. (And, either way, I'm pleasing&#8212;really pleasing&#8212;a lot of people in spite of my rather moderate score.) Nine trolls isn't possible, because that would leave room for only 64 five-star votes&mdash;and that would give me a score of only 4.51.\n\nDo the troll votes have much of an effect on my score? Unfortunately, they might. I can't know how many of them there really are, but there might be as many as eight. If there really are eight, my score would be a very impressive 4.97 once they and their votes were removed from the pool.\n\nThis alone suggests that eight is a very high estimate, and that it is much more likely that there are zero to three one-bombs amongst my 73 votes. You can check that if there were a single one-vote and it were to be removed, my score from the remaining 72 votes would be 4.58. If there were just 2 one-votes and they were removed, the remaining 71 votes would give me a score of 4.63. Three one-votes, 4.69.\n\n*************************\n\nFinal Remarks\n\nThe fact that Literotica conducts periodic sweeps shows that they retain a good bit of voting information&#8212;much more, in fact, than running counts of stars awarded and numbers of votes. We can wish that, instead of reporting the minimally informative average score for a story together with the number of voters involved, Literotica would tell authors how many voters assigned one star, two stars, etc., to each story. Then none of the analysis described above would be necessary, and authors would have better information about how many people they're pleasing and how much.\n\n*************************\n\nPlease leave your comments and your suggestions. I'll happily reply to questions for clarification, etc.&#8212;at least for a few months after this note appears. And, even if a lot of time has passed, you can always try.\n\n&#8212;CarlusMagnus"
    ],
    "authorname": "CarlusMagnus",
    "tags": [
        "author how-to",
        "feedback",
        "feedback",
        "author",
        "scores",
        "writer"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-analyze-your-scores"
}