{
    "title": "Getting to Know The Neighbors Ch. 03",
    "pages": [
        "I apologize for the long delay between chapters. I was pleasantly surprised by the response to the first two chapters and trust this installment will do justice to them.\n\n++++++++++++++++++++++++++++++++++\n\n\"Is there any more coffee?\" I finally asked. \n\nI really didn't need another cup, but it was an excuse to move. From the moment I stripped off in the bathroom and walked naked out into Nancy's home, events had taken on a life of their own. There wasn't a great deal of thought. Things just seemed to flow. Nancy and I delivered a masterful impromptu performance. Initially, we set out to deceive Gina, hoping that we could convince her there was something going on between the two of us. It could have ended when Gina drove off and we left her to decide what was going on. Instead it reached its climax (pun intended) with Nancy and me collapsing in a heap of sweaty limbs on her living room floor. \n\n\"There should be,\" Nancy responded making no effort to move.\n\nShe looked incredibly sexy lying there on the floor. She'd brought her arms up to rest her head on as she remained on her stomach. I took a moment to capture the scene in my memory banks before moving towards the kitchen. \n\n\"Did you want another cup?\"\n\n\"That would be nice.\"\n\nI found our mugs and walked into the kitchen. The last of the coffee provided a bit less than two full cups but I really didn't need any more anyways. I returned to the living room and found that Nancy had taken that time to walk back to her bedroom and grab a short robe to put on. That didn't detract from her sexiness in the least. She thanked me as I handed her the coffee. The phone rang, which averted what would likely have been an awkward pause. \n\n\"Excuse me,\" said Nancy as she moved to get the phone.\n\nI took that opportunity to return to the bathroom and slip on my shorts again. I paused for a moment to consider whether or not to put my shoes and socks back on. Once again I found that Miss Manners had failed to provide appropriate guidance for a situation such as this. Just how is one supposed to act after exposing themselves to a neighbor and her friend, and then sending that friend on her way before wildly fucking the aforementioned neighbor? It's shocking how incomplete these etiquette guides can be. It wasn't a question of spending the night or not. There was no appropriate amount of \"cuddle time\" to observe. Does one cuddle after thrashing about on the living room floor? Neither one of us had to rush home because we had an early meeting the next day. Had I just come by to fix the sink I wouldn't have been pondering how long I had to stay after finishing, yet this was different. It was 10:30 in the morning...now what?\n\nNancy appeared from behind the wall in the kitchen with the phone still to her ear, but she was clearly wrapping up her call. She said goodbye to the caller and set the phone down on the counter. \n\n\"That was my friend Terri. We're getting together for lunch today and she wanted to know if we could meet earlier than we had talked about. It's a bit of a drive so I need to start getting ready. I hope you don't mind.\"\n\n\"Not at all...your sink is all fixed and that's why I came by, right?\" I grinned.\n\nAs usual, I intended to use humor to deal with what could be an awkward situation.\n\n\"Right...the sink...I really appreciate your help with that. You're a very handy guy to have around.\" \n\n\"One does what one can...I enjoy helping out wherever possible...sometimes I enjoy it more than others.\"\n\n\"I'll keep that in mind. You never know when something around the house will need some attention.\"\n\n\"I'll just grab the rest of my stuff from the bathroom and be on my way.\"\n\nI found my still damp shirt and put it on before gathering up the few tools I had brought with me. Both hands were full as I walked to the door. I guess that provided me some cover as we reached the door as it would have been awkward to initiate a hug or anything else. Nancy opened the door but was still blocking the way as she turned to me. She lightly put a hand on my chest and rose up on her toes to give me a light kiss on the lips. \n\n\"That was fun. I'm dying to talk to Gina. I've never seen her so totally unprepared to deal with a situation. I'll let you know how it turns out.\"\n\n\"I hope it gets her off your back.\"\n\n\"I'll catch up with you later,\" Nancy said as she moved aside to let me pass. \n\n\"Have a good day.\"\n\nReturning home, I put my tools away and headed for my study. I slumped down in my chair and fired up my email. There was nothing of import there and I found myself just staring at the screen for a while as my mind kicked into overdrive. I had woken up that morning wondering if there would be repercussions from my adventures at Bay to Breakers. On the plus side, that resolved itself nicely. I got to indulge a fantasy and suffered no negative consequences, even though it certainly hadn't gone the way I'd imagined. \n\nOnly a few hours had passed since getting up that morning and now I had an entirely different situation that I was unsure about. When we were talking in her front yard, Nancy had said that she wasn't looking for another relationship after losing Steve. What were her exact words? It was something about never living with another man again...though she said she missed the physical aspects of having a man around. With all due modesty...she seemed to enjoy having a man around this morning...twice. So was this a one-time thing? Would we succeed in getting Gina off her back?\" No amount of reasoning on my part would provide an answer to these questions, so they would have to wait until Nancy and I talked again. \n\nThere was one question I could ponder on my own. What did I want? It was strange that I had been such a total planner in every other aspect of my life. I weighed the pros and cons of nearly every decision and yet here I was over the last few weeks, letting my dick do most of the thinking for me. I guess I wasn't as different from most guys as I would have liked to have thought. \n\nSo what did I want? The sex with Nancy was amazing. She was attractive and intelligent. Under normal circumstances I would likely want to pursue a relationship with her...but then she wasn't looking for a relationship. I had no reason not to take her at her word on that, though one often finds people say that but don't really mean it. What if Nancy did want to get something going? She was smart, sexy, stable and not bitter from some ex who acted like a prick. There was no ugly custody hassles with an ex-husband. She got along great with her daughter...Holy Shit! She's got a daughter. She's got Samantha. Samantha is her daughter. Nancy is Samantha's mom.\n\nUp until that very moment I'd conveniently been able to block that connection from my mind. Oh this is SO not good. What the hell was I thinking? Clearly I hadn't been thinking. Usually when I get involved with a female I get caught up in all the day-dreaming and date planning and all the wonderful stuff that comes with a new woman in my life. None of that had happened with Samantha (other than that blowjob to win a dare) because I never conceived of starting a relationship. I was more than twice her age. There was an entire lifetime between us. I had been confident that I would have been able to keep her at arm's length...I'd just been helping out with some reasonably harmless dares right? How would Samantha react if she learned that her mom and I had been together. Could I hope that this could remain a secret? I wouldn't think that Nancy would tell her. The only other person to have a clue about this was Gina...who was Rhonda's mom...and Rhonda was Samantha's best friend...and the other young girl that had recently been feasting on my cock. It's hard to imagine any outcome where this doesn't end incredibly badly. At least I don't have jealous husbands or boyfriends to deal with. \n\nI decided to remain the optimist or maybe it was just that I decided to delay the inevitable and trust to luck that I wouldn't get too much shit on me when it all hit the fan. I'd been amazingly fortunate so far. Could my luck hold?\n\nI awoke the next morning feeling very lazy. I'd worked out (sort of) on Sunday when I did Bay to Breakers and had run on Monday. Sunday was my usual rest day for the week but, being king of my domain, I declared Tuesday to be my rest day this week. I made some coffee and took a nice long shower. I even managed to not abuse myself this time. I spent some time on the computer and sipped at my coffee. I really considered it a daily luxury to be able to relax with my morning coffee rather than pounding it down while fighting traffic to get to a job I hated. Perhaps, that was the best thing about being retired. \n\nMy peace and quiet was interrupted around nine o'clock by a knock at the door. I opened the door and found Nancy standing there. She looked like she was heading out on or coming back from her morning walk. She was wearing gym shorts and had a t-shirt over a sports bra. Those shorts really showed off her toned legs. As I said good morning I looked into her eyes and saw they were puffy and red. Even a single guy like me can recognize the signs of a woman that had been crying.\n\n\"We need to talk.\"\n\nMy natural inclination was to quip that no conversation that began with those words ever turned out well. I managed to keep my tongue in check, other than to invite her in. \n\n\"Are you okay?\"\n\n\"I'm fine.\"\n\n\"Your eyes would seem to indicate that things aren't fine.\"\n\n\"Oh that...yes, I got a little weepy this morning. That's nothing to worry about.\"\n\n\"Really? It's rare that a crying woman isn't something to worry about and even more rare that \"we need to talk\" isn't something to worry about.\"\n\nObviously, you couldn't expect me to hold my tongue more than once, could you?\n\n\"Seriously, it's okay and you're not in trouble. I guess I could have chosen a different way to begin our conversation but we really do need to talk.\"\n\n\"Okay, so what is it that we need to talk about that I shouldn't worry me?\"\n\n\"I spoke to Gina last night on the phone. Would you believe she never once called me \"Ice Queen\"?\"\n\nNancy giggled as she said that and it was good to see some light-heartedness.\n\n\"Well, at least we accomplished something. Do you think it will last?\"\n\n\"I'm pretty sure it will last, so long as she doesn't figure out we pulled a fast one on her. That's what I wanted to talk to you about. You see...she started asking questions about what was going on between us and how it got started and stuff.\"\n\n\"And what did you tell her?\"\n\n\"I tried to avoid giving her a straight answer but she was really persistent. I told her that we were good friends who just happened to enjoy having sex from time to time. Is that okay with you?\"\n\n\"Are you asking me if it's okay that we would be good friends that have sex from time to time or that it's okay that you TOLD GINA that we were good friends that had sex from time to time?\"\n\nI said this with a big grin hoping that if she were to reject the notion I could play it off as trying to be funny.\n\nShe grinned as well and responded, \"Maybe both?\"\n\n\"Let me assure you then, I'm fine with both. So how did you tell her we got together?\"\n\n\"I didn't really answer that one. You know how we ladies are with our how did you meet stories. We've been neighbors for years and I was married a good part of that time. I didn't know how to transition us from just neighbors to neighbors who have sex sometimes. Do you have any ideas?\"\n\n\"I hadn't given it any thought until just now as you mentioned it. We're doing this for your position with Gina and your friends so I'm fine with anything you want so long as it still appears that I still have my testicles.\"\n\n\"You needn't worry about that. I'm not looking for a story out of a harlequin romance novel...quite the opposite in fact. I don't want this to appear like a courtship otherwise the girls will hound me with questions about where our relationship is going and are we going to get married. That would be as bad as being called Ice Queen.\"\n\n\"So somehow our coming together for the first time is supposed to play like a seduction without a bunch of romance?\"\n\n\"That would be perfect but I'm not quite sure how to manufacture that and make it believable.\"\n\n\"Do you have any fantasies along that line? Guys have all kinds of sex fantasies that are unencumbered by romantic notions but we're rarely too concerned with believability...and the women often come off as rather slutty, too.\"\n\n\"We gals have our own fantasies that can skip the romance, too. They suffer from the same lack of believability. They are fantasies after all.\"\n\n\"Hmmm...so no prior neighbor fantasies that you can draw on, eh?\"\n\n\"Well, maybe one...but it's not one that works for telling the girls.\"\n\n\"Now I'm intrigued. What's this fantasy you've been holding on to?\"\n\n\"You'll think I'm terrible but do you remember a few weeks ago when you helped me with that tree out front?\"\n\n\"The Crepe Myrtle...yes, I remember.\"\n\n\"I don't know where you'd been or what you were thinking, but your gym shorts were having a tough time hiding a very nice bulge between your legs. I was on my hands and knees and that thing was practically in my face. I wanted to pull those shorts down and suck you dry right there.\"\n\nNancy looked a little sheepish, having made that admission.\n\n\"Why you naughty girl,\" I exclaimed playfully. \"I had no idea you were such a tramp.\"\n\n\"What can I say?\" She shrugged. \"What about you? Have you had any neighbor fantasies?\"\n\n\"Not until very recently, but I'm coming around.\"\n\n\"Now you have to tell.\"\n\n\"Wait a minute. I've got a couple questions first. This might be something we can work with. I know you walk a great deal...do you ever go hiking?\"\n\n\"I do sometimes.\"\n\n\"Now here's the key...do you ever go hiking alone?\"\n\n\"I don't very often but I have hiked on trails that are well populated. I don't feel safe on ones without too many people.\"\n\n\"Have you taken the trails out near the reservoir?\"\n\n\"Not at the reservoir itself, but I've hiked next to it, sure. There are lots of people there.\"\n\n\"There aren't any formal trails to the actual reservoir. People really aren't supposed to go down there but there are some trails that lead to some coves out of sight of the main trails if you know where to look.\"\n\n\"And I'm guessing you know something about these trails, right?\"\n\n\"Actually, I do. Do you feel up to a field trip? I want to see if this scenario might serve as a setting for our first get-together.\"\n\n\"Let's go...I needed to get out for a walk this morning anyway.\"\n\nI loaded up some bottled waters and a couple of towels in a backpack while Nancy ran next door and locked up her house. I backed out of the garage and Nancy got in the car and we were on our way to the hills. She tried to goad me into revealing what was on my mind but I wanted to see how the situation would play out. \n\nIt didn't take long to drive to the trailhead but the reservoir was a couple miles in. There was some pretty good elevation changes along the way but Nancy had no trouble keeping up with my pace. She was in good shape and we covered the distance in about thirty five minutes. The trail from this direction descended down to a gated service road. The gate only served to stop vehicle traffic, not foot traffic, but there was no legitimate reason to walk out to the reservoir. If you ignored the gate (as you should), the trail gradually rises again deeper into the hills and works its way around to the trailhead again. The road down to the edge of the reservoir was only about fifty yards long. There were no facilities of any sort. This just provided access for maintenance vehicles for the small dam. The reservoir really wasn't terribly large but it safely caught the runoff from the hills in the area. It was less than a mile to the back shore. There wasn't much of a shore to speak of as the scrub came right down to the water's edge most of the way around. There were a couple of coves tucked away in the back though that offered shelter from prying eyes and a strip of shore thirty yards long and maybe fifteen deep. \n\n\"Okay, we're here. Now what?\"\n\n\"Did you notice that as we walked down the path to the gate that we had a pretty clear view of the gate and a section of trail leading to it from the other direction?\"\n\n\"I wasn't really paying attention but now that you mention it, I know what you're talking about.\"\n\n\"So imagine you're out here on a hike by yourself one day and you're descending that trail. In the distance, you notice a guy jogging in the opposite direction and you recognize him as your neighbor. You don't bother to call out because you know you'll soon cross paths. You're then surprised to see him stop at the gate and make a quick left disappearing into the brush. I'm guessing you'd be curious, right?\"\n\n\"I would be curious...yes.\"\n\n\"You'd walk down to the gate and see if you could see the path he took.\"\n\n\"Probably...yes.\"\n\n\"You likely wouldn't follow right away because you figured he might just be looking for a tree to pee on, right.\"\n\n\"I suppose.\"\n\n\"After a few minutes pass, he still hasn't returned. Might you follow him?\"\n\n\"I might.\"\n\n\"Let's see where the trail leads.\"\n\nI took her by the hand and led her down a very obscure path that ran about thirty feet above the water line. We covered about three hundred yards and found ourselves looking down on one of the coves I described. You couldn't see it from the gate or any of the trails. It was probably visible from the far side of the dam but nobody was ever out there. Nancy was starting to catch on now that she saw the small patch of shore.\n\n\"Is this where I find my neighbor?\" Nancy asked.\n\n\"Why, I believe it is. What is your neighbor doing,\" I asked, wanting her to take it from here.\n\n\"I think he might have come down here to cool off from his run. It looks like a nice place for a dip.\"\n\n\"He might go for a swim. He probably didn't bring a swimsuit though. Would he go swimming in his running shorts?\" I asked.\n\n\"I can't imagine that he would. He'd want them dry for the run back wouldn't he? And he wouldn't expect anyone else to be out here, I'm sure. No, I'm quite certain he'd be naked,\" said Nancy.\n\n\"And would you walk right down and talk to him?\"\n\n\"\"Hmmm...I'm having trouble visualizing it.\"\n\n\"Excuse me?\"\n\n\"I said I'm having trouble visualizing it. It would be much better if I could actually see my neighbor naked down there. Then I'd have a better idea what I'd do.\"\n\nI had really been hoping she would get into the spirit of this and that we'd come up with a story together...talking it through. I hadn't expected Nancy move past talking about it. Still, getting naked here was tame relative to some of my recent antics so I figured, why not? I looked at her again to make certain she was serious and she merely pointed to the shore and confidently returned my look. I shrugged my shoulders and picked my way down to the shore. \n\nI looked around for the best place to do this. The vegetation was pretty dense along the back and on the right side of this little beach. I'd hiked down through that and was grateful for the small break in the brush that I'd come through. Off to the left there was a good sized boulder...maybe three feet high and somewhat longer than it was wide...probably eight by twelve. It was rather flat and I made a mental note that it would be a nice place for a picnic, should I ever be inclined. I made my way to the boulder and put my backpack down. I kept my back to Nancy and brought one foot up onto the rock and then the other to remove my shoes and socks. I paused for a moment before reaching behind my neck to grab my t-shirt and pulled it over my head. I took a breath, unbuttoned my cargo shorts, dropped the zipper and let them fall to the ground. I stepped out of them, turned around and settled my naked ass back onto the edge of the boulder. I made no attempt to hide the huge erection I had. I'd gotten incredibly horny thinking about what we were doing. ",
        "I looked up to where I'd left Nancy and saw her smiling broadly. She worked her way down the trail and stepped out onto the shore. She didn't come any closer. She just stood there. \n\n\"Are you still having trouble visualizing your neighbor naked down next to the reservoir?\"\n\n\"No, no...I can see him just fine. I'm trying to decide if he was out in the water when I walked down or if he was simply looking out on the water from the edge.\" She took a few steps towards me. \"Or better still...he might have been leaning back against that boulder stroking his big, hard cock.\"\n\n\"Wait...no...I'm sure he was not stroking his cock.\"\n\n\"I'm almost certain he was.\"\n\n\"No, no, no...we're not telling your friends that I was down here jerking off.\"\n\n\"We can dress up the story however we like later. Right now...I want to watch you stroke your cock.\"\n\nI'd always thought that guys masturbating in front of women was strictly a flasher in a trench coat activity. Now I was standing completely naked next to a reservoir with a beautiful woman and I found myself desperately wanting to grab my cock. I paused for a few more moments, hoping that it at least looked like I was reluctant to comply with her request. Finally I reached for my dick. As I started running my hand up and down the shaft, she continued to look me right in the eye. I amazed myself in that I didn't turn away. She took a few more steps towards me and then joined me leaning up against the boulder. She didn't touch me. It seemed like an eternity that she just sat there watching my fist go up and down on my cock. Finally she put an arm behind me and I turned to face her as she leaned in to kiss me. We continued our kiss and I felt her hand slip under mine and nudged me out of the way. Now she was stroking me up and down. I couldn't let that go on for very long because I was so excited. I tried to slip a hand under her top and roll over on top of her, but she caught my hand and moved out of the way. \n\n\"I promised you yesterday that I would devour you at another time...this is another time. I'm going to suck you dry.\"\n\nShe knelt down between my legs and placed her hands on my thighs. She looked at my cock and then my eyes and then my cock again. I reached down and began stroking myself again. Finally she leaned forward and I pushed the head of my cock down until it was touching her lips. She rose up a bit and put her mouth over the tip of my cock. She paused briefly and then slowly slid down nearly the entire length of my shaft before returning to focus her attention on the head. Her right hand left my thigh and wrapped around my shaft. She varied her pace and points of focus. Sometimes she'd lick my balls and then concentrate on the tip of my cock. Always she'd bring me right to the edge and then back off to lick and kiss the inside of my thighs. Just when I thought I couldn't take any more, she looked me in the eyes and wrapped her tongue and then her lips around the head of my cock and moved at a frenzied pace to finally release the explosion in my loins. \n\nThat was one of the most incredible blowjobs of my life. The build-up I'd been feeling as we plotted the script for our first sexual encounter was enormous. As you might imagine, I was feeling much better just then but we weren't anywhere near done. We couldn't be. Our tale was unfinished.\n\n\"Oh my god, that was amazing.\"\n\nNancy grinned impishly, \"I'm so glad you liked it.\"\n\n\"How much of that winds up in our story?\"\n\n\"Not too much, I'm afraid.\"\n\nI adopted my best British accent. \"No? 'Tis a shame for it would make an epic tale. Were I a king I would send for a bard to put it to verse and have it sung throughout the land.\"\n\n\"That has to be the most pathetic accent I've ever heard,\" said Nancy while giggling.\n\n\"Okay, so the blowjob winds up on the editing room floor. How do you see our encounter taking place. Am I the aggressor or do you instigate it?\"\n\n\"Given that you were already naked when I found you out here, we can safely say that you got things moving. You were standing there, next to the water's edge, looking out on the cool, blue-green surface. I had no idea what I was doing but when I saw you nude I had to make my way down here. I stood silently for a moment checking out your ass and then kicked a small stone which announced my arrival. You turned and saw me but there was no scramble for your clothes. You calmly and confidently walked towards me.\"\n\n\"It's hard to imagine me not making a mad dash for my clothes in that scenario.\"\n\n\"I thought we agreed this was my story. I say you were strong and calm.\"\n\n\"Have it your way. What happened next?\"\n\n\"You walked towards me and I admired your strong chest before working my way down the rest of your body. Your cock wasn't erect as yet but for some reason you were already half hard. You stopped a couple feet away from me and asked me what I was doing there. I told you I'd seen you on the trail above and got curious when you turned towards the reservoir. When I asked what you were doing here you said that you loved the quiet of this place. You took me by the hand and led me out closer to the water. You stood just behind my left shoulder and encouraged me to take in the feeling. I dropped my hands to my sides and when I did so I brushed against your cock. At first I pulled my hand away but soon I relaxed and let my hand fall naturally. You were no longer half hard. You had an erection and my wrist rested against your shaft.\"\n\nI rose from the boulder and took Nancy by the hand and led her out near the water and began to follow each action as she described it. \n\n\"You then stood directly behind me and pressed your hard cock against the small of my back. You reached around and your hands slowly worked their way up my stomach to my breasts. No word was spoken. You began kissing my neck and one hand wormed its way down to my gym shorts and disappeared under the elastic band. My pussy was already soaking wet and a finger entered me easily while your thumb worked my clit.\"\n\nTrue to her word, I found that when I slipped my hand into her panties she was drenched. I rubbed her swollen clit for a time and then removed my hand to pull her shirt and sports bra over her head in one smooth motion. I casually tossed them onto the ground.\n\n\"Hey, you're improvising...\"\n\n\"Do you mind?\"\n\n\"No, but let's not get ahead of ourselves.\"\n\n\"Then I anxiously await your next instruction.\"\n\nI resumed masturbating her from behind. She was grinding herself back against me. Despite very recently having a mind-blowing orgasm I was fully hard again. Soon she slipped her fingers under her waistband and slid both her shorts and panties off her hips. It was a little awkward as she tried to step out of them without catching them on her shoes. She nearly lost her balance but I grabbed her by the hips and pulled her back towards me. This wedged my cock against the crack of her ass which inspired her to grind against me even more. \n\n\"That was when she grabbed him by the hand and led him over to the rock.\"\n\n\"Did he stretch her body out on its surface and eat her until she screamed?\"\n\n\"No, he intuitively knew that she needed no more foreplay or teasing. He simply bent her over the rock and ravaged her from behind.\"\n\nThere were no more instructions that followed. Each of our bodies knew exactly what the other needed. Our sexes came together in urgent thrusts. Each stab of my cock was met by a hungry pussy and soon we both convulsed with an intense orgasm. We collapsed next to each other on the rock and struggled to catch our breaths. Nancy was the first to speak.\n\n\"I think I like our story.\"\n\n\"Will they buy it?\"\n\n\"I think so. It will be fun telling it regardless.\"\n\n\"If they don't believe it we could act it out for them...\"\n\n\"I'll bet you'd love that, wouldn't you?\"\n\n\"Actually, it's not something I've ever done and it hasn't been one of my fantasies. It's not anything I've ever thought I'd have a chance to act on anyway.\"\n\n\"Well, I don't think it will be necessary.\"\n\nI was content to lay there and relax in the sun but soon Nancy stirred.\n\n\"Suddenly, I'm feeling rather naked. I can't believe I'm just lying here wearing nothing but tennis shoes.\"\n\n\"Personally, I think it's a good look for you. You should try it more often, Nancy.\"\n\nNancy walked over to her clothes and began to dress again. I did the same and we began to hike back to the car. We talked some more about Gina and what her reactions might be. It was clear that Nancy was pretty comfortable now and would have no trouble facing any interrogation that might follow from her girlfriends. When we got back to the car and started our drive home I asked a question that had been nagging at me.\n\n\"I'm reluctant to bring this up again because the day has gone so well...even though it started with the dreaded \"we have to talk\" phrase. You explained that part well but there was something you either forgot or ignored.\"\n\n\"What's that?\"\n\n\"You didn't tell me why you'd been crying. I'll shut up if it's none of my business but crying women make me uncomfortable...particularly if I suspect I might have something to do with it.\"\n\n\"I'll tell you but you have to promise not to interrupt me and let me say everything I have to say. Agreed?\"\n\nI nodded in reply. She took a deep breath and let it out slowly before she began. \n\n\"I want to get this right because I don't want to hurt you. Actually, this should make you feel good but you might not see that right off.\"\n\nShe paused for a moment to let that sink in and to see if I'd honor her request to not interrupt her with questions. When she was satisfied, she continued.\n\n\"I did cry this morning and I cried some yesterday afternoon, too. You're the first man that I've been with since Steve died. I thought I would feel horribly guilty and that I wouldn't be able to enjoy sex again. That wasn't the case. But I realized that it was because we were having sex...not making love. As good as the sex was with you...and it was great...it was nothing like being with Steve. The love we shared was indescribable and I won't ever have that again. I have no interest in ever being Mrs. Somebody ever again. I don't want to be someone's girlfriend. The only role I intend to play is to be Samantha's mom. I want to see her safely through college without her falling in love and getting pregnant. I want her to get a degree and be her own person. When she's done that, I would love for her to find a good man and settle down and give me a couple grandbabies. That's my agenda for the rest of my days. That doesn't mean I'll cease to be a woman with physical needs. I'll still want to scream out with pleasure from time to time with a great lover but I have no interest in pillow talk and Valentine's Day. I've had that and that chapter of my life is closed. My tears were tears of happiness as I thought about the times I had with Steve. I have no regrets and certainly don't want any in the future. Don't feel like you're ever in a competition with Steve because you'll never be competing for my love... you can't. That belongs to Steve and Steve alone. This is not a knock on you in any way. You're a great guy and some day you're going to tell me that our days of \"hiking to the reservoir\" are over because you'll have found the love of your life and she'll be an incredibly lucky woman. I hope that makes sense and I hope that we can write a few more chapters from time to time. If it doesn't work for you I'll understand and will have no hard feelings.\"\n\nWe sat there in silence for a few moments. I took my eyes off the road briefly and looked over at her. Her eyes were glistening and if I was forced to be honest, I'd admit that mine were likely a little misty as well. I turned back to the road again.\n\n\"You can talk now.\" Nancy managed a little grin.\n\nI cleared my throat before I began because I didn't quite trust my voice to come out clearly. \n\n\"Steve was a very lucky man...and I suspect that you were a pretty fortunate woman to have him in your life for as long as you did. On one level I think I understand what you're saying but on another level I'm sure I don't completely get it as I've never experienced the kind of love you described. I've been close to marriage a couple of times but stopped short because it's something I only intend to do once and wanted to get it right. I guess I've always held out for what you described but wondered if I was asking for too much. Hearing your words confirmed that I was right to hold out because now I'm sure it exists. Whether or not it's out there for me remains to be seen but I'll keep looking for it with an open mind. In the mean time, I would be more than happy to take the occasional hike or fix a sink or whatever other excuse we come up with to have great sex. I wouldn't be surprised, though, if I'm not always just a bit jealous of Steve. You're a special lady.\"\n\n\"Thanks,\" said Nancy quietly.\n\nWe fell silent for far too long and it got uncomfortable.\n\n\"Well, aren't we both just incredible people.\" \n\nNancy laughed at that and all was good again. It had gotten far too heavy for a while there.\n\n\"You really have done a great job with Samantha. She's turned into a nice young woman.\"\n\n\"Yeah, Sam's a sweetie. She's done well at school and the swim team has been very good for her as well. It's not like she's headed for the Olympics but she's pretty fast and wins her share of races. It's hard to believe that she's off to college in the fall. It seems like she has grown up awfully fast. I just hope college doesn't change her too much. I want her to have fun but it's important that she focus on her studies. There's time enough for boyfriends later. The last thing she needs is to fall in love and get pregnant and drop out of school. I'm not na\u00efve and I'm not a prude, obviously. I know she's going to want to have sex and party with the guys but I don't want anything serious. I'd love it if she could find something like we have. Hey, there's an idea...maybe she could just drop by your place a couple times a week.\"\n\nNancy punched me in the arm and started laughing. I joined in her laughter but with less gusto because it wasn't nearly as funny as she thought.\n\n\"Oh, yeah, that's great idea. Maybe I should start running a stud service. Do you think the other neighbors would mind if I put up some sort of sign on the front lawn.\"\n\nThe idea was ridiculous enough that it fueled our conversation for the rest of the way home. We bandied about a variety of ideas about what the sign might say. None are worth repeating here but it saved us from any awkward silences or any more discussion about Samantha. I pulled into my driveway and we exited the car. Nancy was the first to speak.\n\n\"You had a great idea. This story will work for Gina and any of the other girls who care to know how we started fucking each other's brains out. I know I'm going to have a good time telling the story. I might need some relief when I get home though,\" Nancy looked at me slyly.\n\n\"I'll be curious to see how your friends react. Have fun with it but try not to make me out to be too much of a pervert, eh?\"\n\n\"You needn't worry about that. You're going to come off great. In fact, you might want to hire me as your publicist.\"\n\nThat was a good light comment to end things on. We kissed briefly and she returned to her home and I walked into mine. \n\nThe rest of the week was uneventful and when Saturday rolled around I headed off to the beach once again. I'd not had any contact with Samantha or Rhonda since Bay to Breakers. I wondered if Gina had said anything to Rhonda. It seemed unlikely that Gina would come right out and tell her but she might ask questions about if Rhonda had seen me around the house or anything like that. In my favor, Rhonda would likely try to steer any conversation away from me in order not to betray any of her own secrets. I really didn't like worrying about stuff like this. I'd been so free of being dependent on anyone else or worrying about what others thought that the little voices in my head seemed particularly unwelcome. What happens if this and what happens if that? I'd been remarkably free of that for years. Was it worth it in exchange for the great sex I'd been enjoying? For the moment, the answer was a resounding yes but nothing had really blown up in my face as yet. Would my luck hold?\n\nIt was another typically gorgeous day at the beach. The cost of living and real estate prices were ridiculous in Northern California but we really did enjoy some of the best weather in the country. I set up my spot under the bluff and grabbed my book. I'd written off that last novel and thought I'd try my luck with a new author. \n\nIt seemed to work rather well and split my time between the book and watching the comings and goings on the beach for a couple of hours. Somewhere around 1:30 I saw Samantha and another young woman coming down the trail onto the beach. I thought it might be Lori, the girl that had been with them a few weeks earlier. They headed off to the left to seek out their usual haunt. \n\nI let another hour go by before I took off for one of my walks to the other end of the beach. I stuck to the edge of the surf on my way out. I enjoyed the feeling of the sand running out under my feet as each wave receded but the water really was too cold to think about going for a swim. I figured I'd stop by to say hi to Samantha and her friend on the way back. I'd been nervous about that in the past but now it would be more remarkable if I didn't stop by than if I did. \n\nBoth girls were lying on their stomachs as I approached. I was a little surprised to see that Lori was wearing a thong. She'd seemed rather shy the last time I met her so it seemed out of place. Actually, Samantha was wearing a new bikini too...she was wearing the bottoms anyway. It wasn't a thong but it was cut very high on the hips and covered far less of her ass than the last one I'd seen. I cleared my throat as I approached so I wouldn't startle them. They both looked over their shoulders to see who it was. Samantha was pleased to see me...Lori was less so. Samantha rolled over right away. No longer was she timid about displaying her breasts in front of me. Damn, she looked good. Lori rolled over about half way. She propped herself up on the arm that was closest to the ground while she brought the other arm across to cover her breasts. I think that was the best way for her to hide her nearly bare ass and her tits from me as well. Samantha greeted me warmly but Lori was much less enthusiastic. I remained standing and found a spot where they didn't have to look into the sun to see me. \n\n\"Good afternoon, ladies. You seem to be travelling light today...no Rhonda?\"\n\nSamantha rolled her eyes as she replied, \"Rhonda has a new boyfriend so she's far too busy to hang out with us now.\"\n\n\"Ah...I see. She probably wouldn't be bringing him down here anyway. She probably doesn't trust him around beautiful, near-naked women...seems like a prudent decision, actually.\" \n\n\"She has nothing to fear. We don't have any interest in him. He's an okay guy, I guess.\"\n\n\"So did school wrap up last week or is that this coming week?\"\n\n\"Friday is our last day. It seems like a waste. We've got a few more finals between now and Wednesday. I think Thursday and Friday are going to be career day things.\"\n\n\"That might be interesting. If nothing else it will make for a couple pretty easy days right there at the end.\"\n\n\"That's true. Then I'll have to start looking for a job for the summer. It's pretty tough to find a job right now...even a lame one.\"\n\n\"Things are pretty tough out there, but I think the worst of it is over. Something will turn up for you, I'm sure.\"\n\nLori hadn't said a word though any of this and really looked uncomfortable. I decided to remove myself and let the girls enjoy their afternoon. ",
        "\"I should go. I just wanted to say hi and wish you a good afternoon. I'll see you later.\"\n\nSamantha said goodbye but Lori just rolled back onto her stomach. I guess she was less cool with having an old guy around than Samantha and Rhonda. I couldn't blame her for that. I went back to my spot under the bluff. I spent another hour or so with my book and then headed back to my car and drove home. I thought about looking in on Nancy to see if she had a leaky sink but Samantha might come home early, so I thought better of it.\n\nI took a shower to rinse off the sand from the beach and masturbate while replaying the romp I had with Nancy at the reservoir a few days before. Maybe it's just because we're getting a bit older but Nancy was wonderfully uninhibited. There's a point where the brain is as important a sexual organ as any other we have and Nancy certainly knew how to use hers. Combine that with the fact that she still had a wonderfully trim and gorgeous body and you had a near perfect sexual creature. Jerking off in the shower thinking about Nancy wasn't nearly the same as being with Nancy but it was still pretty good. \n\nLater that evening I fired up my grill and started working on dinner. I had a nice, thick rib-eye steak waiting for the grill while I baked a potato. Throw in an ear of fresh white corn and you've got one heck of a meal. I loved the smell of good food on the grill. The fact that it often made the neighbors jealous was a bonus. I was about to put the steak on when Samantha's head popped up over the fence.\n\n\"Hey Bill...what time should I be over for dinner?\" She said with a grin. \n\n\"Give me a couple hours notice and you and your mom can come by for dinner anytime. I'd love to cook for you ladies.\"\n\n\"I was teasing, but we might take you up on that sometime now that you offered. I know you're about ready for dinner but I wanted to see if you were going to the beach tomorrow.\"\n\n\"I planned on it...why?\"\n\n\"I was wondering if I could go with you. Lori is busy tomorrow and Rhonda is always busy these days but I still want to go. None of my other friends are into that beach.\"\n\n\"I take it your mom isn't home right now.\"\n\n\"No, she's at the store. I didn't think she'd understand so I waited until she was gone to ask you. If it's okay with you I could drive over to the pizza place and you could pick me up there. Is that okay?\"\n\nWarning bells began to go off in my head. Part of me realized this was probably a very bad idea. Another part of me loved it. I expect you can imagine which part of me that was. The very fact that we were meeting elsewhere before driving over made it clear that this was something to hide...and thus not a smart idea. I have a very strong rationalization muscle though, and it quickly displayed its strength. I reflected on the fact that we'd seen each other there a number of times now and nothing had gone on...except sharing a bunch of sex stories that I suspect turned the girls on as much as they did me. We would be in a public place so nothing would be going on. We should be fine, right? Before I had the chance to muster a counter-argument I found myself responding.\n\n\"I suppose that would be okay. What time would you like to leave?\"\n\nWe made arrangements to leave around 10:30 and said goodbye. I grilled my steak and tossed it on the plate with the corn and baked potato and sat down for what should have been a very nice dinner. As it turned out I ate rather mechanically as my mind speculated about the coming day. This could really turn out to be a spectacularly bad idea. \n\nI slept rather fitfully that night and spent much of the morning drinking coffee and watching the clock. Finally it was about time to leave so I made sure I had everything we needed for the day, locked up the house and drove over to the pizza place. Samantha was already there, leaning against her car. She was wearing flip-flops, her Stanford Gym shorts and a white t-shirt. She had a beach bag with her and immediately walked to the car when I stopped. I popped the trunk and she put her bag inside. I resisted the inclination to open the car door for her. My upbringing told me I should but the less this resembled a date the better off I was. Of course, I had packed twice as much water and snacks as I would normally take but that didn't mean anything, right? I consciously made certain not to bring any beer. \n\nWe hopped in and I started the car. \n\n\"Did you bring any music for the drive?\" I asked.\n\n\"It never occurred to me. We can listen to your stuff. I love the OLDIES.\" She laughed immediately.\n\n\"Is that really the way you wanted to start this trip? Whatever happened to being respectful of your elders?\"\n\n\"I'm sorry...I'll be good.\"\n\nActually it was a pretty good way to start the trip. A little humor that emphasized how many years difference there was between us was a good thing. I thought this might work out okay after all. We talked about her plans for college on the way to the beach and the time passed rather quickly. That turned out to be a good thing because all the coffee I drank that morning was killing my bladder so as soon as we pulled into the parking lot I walked down to the restrooms and took a much needed pee. Second best feeling in the world and it all comes from the same place, I thought to myself.\n\nI returned to find that Samantha had unloaded the trunk and had everything ready to go down to the beach. That was thoughtful. I grabbed my stuff and we worked our way down the trail to the beach. We had talked about it on the way over and decided that we would hang out in my usual place. I emphasized the shelter from the wind as my reason but it was as much the fact that there were more people there than at the far end of the beach. I figured there was safety in numbers. \n\nI spread out the blanket and we arranged our towels. I had opted not to bring my beach chair since Samantha wouldn't have one and I figured it was best to have identical conveniences. I put my cooler near the top of the blanket and then looked around. Satisfied that everything was as it should be I pulled my t-shirt over my head and then reached for the snap on my cargo shorts. Those quickly fell to the ground and I kicked them up next to the cooler. \n\n\"That didn't take long,\" grinned Samantha. \n\n\"I like to travel light.\"\n\nUncertain quite what to do at that point I opened the cooler to grab a bottle of water and asked Samantha if she'd like one. She said yes as she slipped her fingers into the waistband of her gym shorts and pushed them to the ground. She stepped out of them as she reached to arrange the little strings that held her bikini bottoms high on her hips. This was the same white bikini she wore the day before and it didn't cover any more of her ass than it did then. She turned towards me and took the bottle of water I offered her. The little triangle in the front was pretty damn small as well.\n\n\"Is that a new bikini?\" I asked.\n\n\"Yeah, I wore it for the first time yesterday. We changed the swimsuits we use for the team. They used to be cut much lower on the hips but these new ones ride much higher. There are some pretty ridiculous tan lines on display right now. You can see some of mine now but other girls have it far worse. Some of them don't care but I don't like it. I figure a couple of days in the sun and I won't have to worry about it anymore.\"\n\n\"It's a nice bikini.\"\n\n\"You really haven't even seen it, silly. I still have my t-shirt on.\"\n\n\"If you'll recall I saw it briefly yesterday.\"\n\n\"I wasn't wearing the top yesterday. I'm a little hurt that you don't remember I was topless. Was it that forgettable?\"\n\n\"I'm trying to behave myself here and you're not making it easy, young lady.\"\n\n\"But am I making it hard...that's the question.\"\n\nI decided to frown and wag my index finger at her to show displeasure. In truth, I would have loved to play along but didn't want things to get out of hand. I lied down on my towel and she dropped to her knees and pulled her t-shirt over her head. Then she reached for her bag and pulled out some suntan lotion. She began working it onto her legs, hips and the cheeks of her ass. She untied her bikini top and tossed it next to her gym shorts and t-shirt. She rubbed lotion onto her arms and over her stomach and breasts. \n\n\"You don't use lotion, do you?\" She asked.\n\n\"After the first couple of times out in the sun each year I never have to worry about burning.\"\n\n\"You should use it anyway. Old people like you need to protect their skin.\" She giggled.\n\n\"Did you want to walk home?\"\n\n\"You wouldn't dare!\"\n\n\"You never know. It would be safer to behave yourself, missy.\"\n\n\"Alright, alright...would you put some lotion on my back?\"\n\nGulp...I should have seen that one coming.\n\n\"Sure...turn around.\"\n\nShe was kneeling down and I took up a position behind her. I was grateful that she had already done her ass cheeks so I didn't have to be nervous about that. I knelt behind her and took the bottle of lotion. I squirted some into my palm and rubbed my hands together before starting in on her shoulders. She really was in great shape. Her skin was smooth and yet her swimmer muscles were apparent right under the surface. I stuck to applying lotion and avoided turning it into a massage and then slowly worked my way down her back and sides. I thought about giving her a playful swat on the ass when I was done but stopped short. I needed to behave myself, too. \n\n\"There you go...all set.\"\n\nShe thanked me and then lied down on her back. There weren't too many people around as yet so there was no fear of our conversation being overheard. I suspect that was a good thing. \n\n\"Bill, do you think people here are upset that I don't strip fully naked?\"\n\n\"I don't think anyone gets upset about that. I think if a guy came down here and didn't get naked they'd think he was just a pervert scoping chicks. Women are granted far more latitude.\"\n\n\"What do you suppose people think about me just being topless...are they bothered by it?\"\n\n\"I doubt anyone is making any judgments about it at all. If you're asking me to read minds, I'll give you my best guess. Half of the women are enlightened and will accept things as they are and not give it another thought. The other half are going to hate you regardless because you're a young hottie and all the guys are staring at you. Of the guys on the beach...maybe ten or twenty percent of the guys are enlightened and see an attractive young woman and are appreciative and leave it at that. The rest of the guys are dying to see you without the bikini bottoms. Truthfully, you'll attract more attention with the bikini bottoms on than off. As long as you're wearing them they'll be wondering. Once they're off, their curiosity will be satisfied and they'll go back to the realization that they have zero chance with you and the world returns to normal. Why all the questions?\n\n\"I'm not doing this for attention. I like the atmosphere here, but it's mostly to get rid of tan lines. I do like to keep that part of me private, though. Only two guys have ever seen me...down there. That's not for public viewing. If someone gets to see that, I mean something else entirely, you know?\"\n\n\"I understand what you're saying. You needn't worry about being thought a tease if you don't strip completely naked here. Don't let anyone else's opinions sway you. You should only do what is comfortable for you. You're the one that has to live with your actions.\"\n\n\"Thanks, I feel better now.\"\n\nWe made small talk and I shifted my position from front to back a number of times. I really preferred my beach chair as I found it difficult to get comfortable in either position lying on the sand. When on my stomach I rested my head on my arms and looked towards Samantha. She looked incredible lying there in those tiny bikini bottoms. I wasn't part of the small enlightened percentage of men on the beach. I really did want to know what she looked like without those bottoms. It kept me half hard all afternoon. It never got to the point of a full erection but I wasn't truly flaccid either. If someone was trying to avoid an erection (and thus looking like a pervert) yet wanted enough blood flow to show off their size suitably, they couldn't have asked for better conditions. \n\nSamantha had turned a couple times but seemed completely at ease. I think some women are just born sunbathers. Samantha was blessed with both the figure and the temperament for sunbathing. She seemed to pick up on my restlessness though. \n\n\"You usually go for a couple of walks when you come down here. Did you want to do that today?\"\n\n\"I might...did you want to join me?\"\n\n\"Sure...why not?\"\n\n\"I thought you might not want to be seen walking with a fossil.\"\n\n\"Don't be ridiculous.\"\n\nWe got up, brushed off a little sand and started angling towards the surf. The crowd had filled in nicely and we had to walk through quite a few people. We'd only gone about fifteen yards when Samantha moved closer to me and slipped her hand into mine. I jumped a little as I had not expected that. I don't know if Samantha knew it but I felt like everyone on the beach was watching us...and more specifically her. She was gorgeous. We'd walked that way for about another twenty yards when she leaned into me a bit and quietly spoke. \n\n\"You know what they're all thinking, don't you?\"\n\n\"Sure...that you're the most beautiful girl they've ever seen.\"\n\n\"No...but thanks...I meant what they must be thinking seeing us walking together like this.\"\n\n\"They're either thinking that it's strange that a father would hold his daughter's hand on a beach like this or that you're not my daughter and that I have to be one of the richest guys in the world.\"\n\n\"Maybe...but I'll bet most of the women are just looking between your legs and not thinking about money as the reason at all.\"\n\n\"Well, aren't you just the sweetest little thing for saying something like that. Although, I should put you over my knee and spank you for talking like that.\"\n\n\"Oooohhh...would you?\"\n\nWe laughed but soon fell into a rather awkward silence as we continued our walk to the far end of the beach. Before we got past all the sunbathers I turned and started us heading back. I really didn't want to get away from people. I still felt like every eye on the place was on us as we walked back to our towels. Once there I grabbed us another couple of waters from the cooler and offered Samantha some of the almonds I'd packed. She took the water but declined the snack. I took a few long pulls from the water bottle and lied down on my back to get a bit more sun. \n\nAfter a while I sat up and was going to turn over onto my stomach. When I did, I glanced over at Samantha. She was lying on her back as before but she had quietly untied the strings at her hips and laid them on top of the small triangle of material that hid her pussy from the world. It was still completely covered, her modesty intact, and yet it was one more small hint at what was beneath. Her intention may not have been to tease but that was the reality. She opened her eyes to confirm that I had noticed the alteration but then she closed her eyes again. I knew better than to obsess on it so I rolled onto my stomach and closed my eyes as well. After a while she asked me what time it was and I reached up to grab my watch out of my shorts. \n\n\"It's after three. Do you mind if we get going soon?\"\n\n\"We can go now if you'd like.\"\n\nSamantha was able to reach down and grab one of the ties from the sand and then reach across with her other hand to grab its partner and tie a knot at her hip. She did the same thing on the other side and then sat up. She then got onto her knees and retied each knot more securely this time. I'll admit that I had watched the process...probably as much in hopes of a fumble as curiosity as to how she would accomplish the feat without exposing herself to the world. \n\n\"That's a neat trick.\"\n\n\"Are you impressed or disappointed?\"\n\n\"Maybe a bit of both?\"\n\n\"Pervert,' she said good naturedly. \n\nWe finished getting dressed, loaded up and walked back to the car. I'm sure we talked about something on the way home but I couldn't tell you what it was. When we got back to her car I popped the trunk and helped her transfer her stuff to her car. She moved fast and gave me a quick peck on the cheek as she opened her car door. \n\n\"That was fun. Maybe we'll do it again sometime.\"\n\n\"Just let me know if your friends desert you again. I'm always up for some beach time.\"\n\n -------------------------------------------------------------------------------------- The next morning my phone rang around ten. It was Nancy calling to tell me that her Mom had a stroke that morning. Nancy's dad was understandably upset and Nancy was going to fly back to Virginia the next day to be with them. Samantha wasn't yet done with school so she'd stay behind and finish out the week. Nancy would be able to get a better sense of her mom's condition and know how long she'd stay back there and if she'd fly Samantha out when school was done. She explained that Samantha would spend nights over at Rhonda's place but might be around the house some of the time as well. Nancy asked me if I'd keep an eye on the house while she was gone. \n\nOf course, I told her I would and asked if there was anything else I could do to help. She really didn't have enough information at that point and would know more once she got back there and saw her mom. Her folks might need help for a while depending on how bad her mom was. I offered the usual good wishes that everyone does in such circumstances and hoped it didn't sound as inadequate as I thought it did. \n\nI saw Samantha briefly the next afternoon after school as she was loading an overnight bag into her car. She was headed over to Rhonda's home for the evening. Her mom had just landed safely and had called to check in and let her know that she was on the way to the hospital to look in on the folks. Samantha seemed uncomfortable talking about the whole thing. She said she'd be around other than at night and when she was in school. Her summer plans were now totally up in the air until they knew what was happening back east. She told me she'd keep me in the loop as to what was happening and then we said goodbye. \n\nI didn't see Samantha on Wednesday at all but she poked her head over the fence on Thursday afternoon to say hi. I was out gardening again and had just a pair of gym shorts on. \n\n\"There you are...this explains why you didn't answer the door when I knocked.\"\n\n\"Yeah, I wanted to tend to the roses for a while and get some sun. What's the latest on your grandmother? Have you heard anything more?\"\n\n\"She's not going to die or anything but that stroke messed up her left side. She'll be in rehab for a while after she gets out of the hospital and they're not sure how much mobility she'll get back. Grandpa is having a tough time since she took care of most of the house stuff. Mom is planning on staying back there for a while. I'm going to fly out on Monday to be with them and then we'll see what happens from there.\"\n\n\"That's good news on your grandma. They can really do amazing things these days with modern medicine and proper rehab. That certainly messes with your summer, though.\"\n\n\"It does. I'm kind of bummed but sort of excited too. I've never been to Virginia so there will be lots to see and do when I'm not helping out but it will certainly change my tanning habits.\"\n\n\"I suspect it would. I don't know about Virginia's feelings on nude beaches. You probably wouldn't go exploring on your own anyway.\"\n\n\"That's true enough. I guess I'll just have to take advantage of the few days I still have here. Do you mind if I come over and get some sun?\"\n\n\"What's the matter...you don't have sun in your yard?\"\n\n\"Sure I do but I was hoping you could put lotion on my back for me. Of course, if you don't want me to come over...\" \"I was teasing. Get your suit and come on over. I'm just about done here anyway.\"",
        "Samantha knocked at the door just a short time later. She was wearing a white t-shirt and some blue running shorts that were cut very high on the sides. She carried a beach towel and a bottle of suntan lotion with her as well. She'd pulled her hair back into a pony tail that emphasized her youth. \n\nWe grabbed some water out of the refrigerator and made our way back into the yard. Not that we were there for a garden tour, but I was pleased with how well tended the yard was. Samantha commented on the roses as we made our way to the deck in the back corner where I usually did my tanning. \n\n\"Isn't that wood a little uncomfortable for tanning?\"\n\n\"I don't mind it too much. I'm rarely out here all that long and it's the only place in the yard that offers complete privacy. We could set up on the lawn if you prefer. There's nobody at your place and that's the only place that can see into the yard.\"\n\n\"Yeah, let's do that. You know you really don't have to worry about being nude back here. I'd love it and after seeing Mom's reaction to the naked guys at Bay to Breakers I know she'd enjoy it. I don't know if she'd admit it, but she'd enjoy it.\"\n\nWe stretched out our towels next to each other and then looked at each other rather awkwardly. We'd been naked together plenty of times before but there were always other people around. It seems strange that fewer people made it more awkward. It shouldn't have, right?\n\nI was the first to break the stalemate saying, \"Oh, this is silly.\" I unbuttoned my shorts, pulled the zipper down and let them fall to the ground. I kicked them out of the way and then stretched out on my towel. \n\nSamantha pulled her t-shirt over her head and slid her running shorts off her hips before stepping out of them. She was wearing that same white bikini she wore at our last beach outing. She removed the top right away and tossed it on the ground. \n\n\"I think you were being too much of a gentleman when we were at the beach to really appreciate my bikini when we were at the beach. You can feel free to check it out now if you'd like.\"\n\nIf I'd like? Like wasn't the word for it. What I really wanted to do was to kneel before her and run my hands over her ass and stare for a time at her hips and the little triangle of white material that hid her pussy. I wanted to slowly tug at the little strings on her hips and free her. I'd want to drink in the vision of her exposed sex but I knew it would only be moments before I'd bury my face between her legs. \n\nI cocked my head a bit as if only then I was appraising the sight before me. I motioned with my index finger, instructing her to turn around for me. She did so slowly and stuck her ass out and wiggled it back and forth when she was facing away from me. That caused some nervous laughter on her part and she turned to face me once again.\n\n\"Do you like?\"\n\nI'd felt a familiar tingling in my groin as this little scene had played out and despite my efforts to restrain myself I was already about three quarters hard. Samantha was staring appreciatively at my cock and I thought I saw her tongue dart out briefly to wet her lips. \n\n\"What do you think?\" I asked in reply.\n\n\"I'm thinking maybe you do. I was hoping you would. Almost all of the tan line from my old suit is gone now but I still have some lines from the strings on these bottoms. They show up when I wear my competition suit.\"\n\n\"They're probably not all that noticeable. You spend most of the time in the water anyway so it's probably not a big deal. I'm sure the other girls struggle more with it.\"\n\n\"That's true for now. When I get back east I'll probably not be able to tan the way that I want. Oh well, I can enjoy it now.\"\n\nWith that she laid down on her blanket on her stomach. She rested her head on her arms and closed her eyes. That pose really accentuated her defined shoulders and back. The muscle tone was obvious without the extreme you can find with female body builders. Swimming is wonderful for sleek bodies. \n\n\"Would you put lotion on for me?\"\n\n\"Of course... I'll be right with you. Did you want to sit up so I can get at your back.\"\n\n\"I'm feeling lazy. I'm going to stay right here. In fact, you can give me a back massage at the same time.\"\n\n\"Oh you think so, do you?\"\n\n\"Please...\"\n\n\"Oh all right.\"\n\nThis was a really bad idea. I slowly moved towards the bottle of lotion. I was trying to take my time in hopes that some of the swelling in my cock might recede. I didn't want to be poking her while I did this. I delayed as long as I could and I was still more erect than I would have liked. I decided to kneel alongside to avoid straddling her. That worked for a little while as I applied the lotion but she wasn't content to let it go. \n\n\"You can use more pressure. I won't break. Why don't you put your knees on either side of me. That will give you more leverage.\"\n\nThat's not all it will give me, I thought to myself. \n\n\"Don't be so timid. I'm a big girl.\"\n\nTruthfully, I was getting sort of tired of being so timid. If she wanted to act like an adult and be treated like an adult then that was fine with me. I swung a leg over and rested my ass lightly on hers while I rubbed some more lotion into my hands. I worked my palms and fingers up from the middle of her back and began working her shoulders. After a while I began massaging her neck as well. This moved me up her torso a bit and rather than having my cock resting on the material of her bikini bottom it often grazed the small of her back. She never flinched, though she couldn't fail to notice the contact with my dick. I was pretty much fully erect by this time and did nothing to try to restrain it. She made appreciative noises beneath me. \n\n\"That feels great. Can you move down a bit? My lower back has been awfully tight lately.\"\n\nI slid down a bit and reached for the lotion. In this new position the tip of my cock resting at the base of her cheeks and exerted the lightest of pressures. I could have moved but it amused me that it had found this resting place. I squeezed more lotion into my hands and rubbed them together to heat the lotion. As I did so she stirred beneath me. Her arms moved from under her head and down to her sides. Her fingers reached out and grabbed the end of the strings at her hips and pulled the knots loose. \n\n\"Are you sure that's a good idea? Your suit can hardly be expected to stay in place now.\"\n\n\"You're right. Let's get rid of it.\"\n\nShe raised her hips and grabbed hold of one side of the bikini bottoms and pulled them free. \n\n\"I'm going to ask you in a minute to put lotion on my butt so it doesn't burn anyway so we might as well.\"\n\nI was speechless. I wasn't expecting that at all. I figured I'd finish putting lotion on her back and then she'd finish putting lotion on the rest of herself and the real tanning would begin. With the removal of that last bit of material, the tip of my cock was resting on her ass cheeks. I didn't say anything. I worked lotion into the small of her back and continued the charade of a massage. While doing so my cock rubbed up and down the crack of her ass. I was tempted to shift in such a way to slip between but I resisted.\n\nI moved lower on her legs and began putting lotion on her ass. I loved the feeling of her beneath my hands. I kneaded her tender flesh and as I gripped her my thumbs spread her cheeks ever so slightly. At times I was rewarded with a glimpse of her tight little anus. \n\n\"Mmmm...I love the feeling of your hands on my ass. But what I really want is your tongue in my pussy.\"\n\nSamantha rolled over beneath me and managed to pull her legs out from under me. She spread her legs and reached up towards me. Before I had the chance to think through my next actions I found myself dropping onto my elbows and sliding my hands beneath her ass. In another moment I had buried my face between her legs. It was passionate and rather frenzied at first but then I slowed down and began to savor her young flesh. Alternately I teased her clit and then would plunge my tongue inside her. It was glorious. I had always enjoyed eating pussy and the way Samantha writhed beneath me was making me insane. I worked one finger and then a second between her lips and worked my way in and out of her. My tongue could now concentrate on stimulating her nub. I don't know if it was for swimming or personal taste, but she was completely shaven. I wondered for a moment if that surprised me but soon the signs of her imminent orgasm brought me back to the task at hand. She let out a scream and grabbed the back of my head. Her legs had tensed up and her ass rose off the ground to meet every thrust of my tongue. She collapsed back onto the ground and breathed heavily. \n\n\"Oh my god I needed that. That was amazing!\"\n\nI smiled and crawled up next to her. For the first time we shared a real kiss. It was tender at first and grew more passionate before backing off once again, ending in tenderness. It seemed odd that so much had occurred before a kiss. She nuzzled up against me and I put an arm around her. She ran her fingers through the sparse hair on my chest and then slowly moved her hand down. Soon she moved through my pubic hair and ran a finger up and down my cock. I had an incredible hard-on and almost immediately she had wrapped her fingers around it. Lightly she moved her hand up and down before reaching down to grabs my balls. There's nothing quite like the tender touch of a woman's hands on my balls. Samantha had quite the gentle touch, clearly taking pleasure in her exploration. \n\nBefore long, I sensed Samantha moving out from beneath my arm. She kissed her way down my torso and crawled between my legs. She was on her knees and had a wide grin on her face as she contemplated my cock jutting up into the air. There was no trace of the shy girl who timidly took my cock in her mouth as she had when she and Rhonda acted upon their dare. This was a confident young woman who knew what she wanted and had no qualms about getting it. I knew that I would certainly replay the propriety of our actions later but I surrendered to the moment and allowed myself no misgivings.\"\n\nSamantha licked at the tip of my cock and playfully bit at it. She looked me squarely in the eye as she took the head between her lips, swirled her tongue around it once and then moved it into the back of her throat and took me almost all the way down to the base of my cock. I don't know how she managed it. She didn't choke or gag. It seemed effortless and my pleasure was extreme. She gripped my balls in her hand and began working her way up and down my shaft with her mouth. \n\n\"I was jealous of Rhonda the last time because she got to taste your cum but I have something even better in mind.\"\n\nWith that she moved out from between my legs and edged further up and placed her knees on either side of my waist. She put her hands on my chest and lowered her face to kiss me. The passion built as our tongues entwined and explored each other. My cock ached and I longed to bury it deep inside her but Samantha was in total control of this. I'd had no thought that this might happen, let alone an expectation. What remained of my morals would have prevented me from initiating this for fear of taking advantage of this young woman, but I was perfectly content to be a willing participant in whatever she had in mind. Samantha finally ended our kiss and leveraged her hands on my chest to assume a more upright position. She stared deep into my eyes and let out a soft moan.\n\n\"I've wanted to do this ever since I saw you naked that first time at the beach. You don't know how many times I've fingered myself thinking about your cock inside me.\"\n\nSamantha reached between her legs and grabbed my shaft just below the head. She dropped her hips slightly and rubbed the tip back and forth a few times against her slit. Thinking she'd found the right spot she dropped again slightly, as if to test her aim. The head just entered her before she backed off. She looked up at me and held my gaze as a broad grin spread over her face. Confident that all was the way she wanted she slowly lowered herself onto my cock. She dropped about a third of the way down and reversed course. Once again with the tip just barely inside her, she started back down nearly reaching the base. Returning to her starting position, she paused briefly before fully impaling herself on my erection. She was incredibly tight but she was so wet that it seemed to cause her no discomfort. I put my hands on her hips but allowed her to control the pace of our joining. Her motions were deliberate but there was no undue urgency. She'd already had an orgasm and wanted to extend the pleasure she was feeling. I was determined to last as long as I could but I couldn't believe I was making love to this gorgeous young woman, that she desired me and had sought me out. If I'd allowed myself to include the fact that she was my young neighbor and the element of taboo that brought, I'm quite certain that I would have shot my load almost immediately.\n\nI wanted to move her onto her back and drive myself deep inside her. I wanted her on all fours in front of me so I could spread her ass cheeks and pound her pussy from behind. There were so many things I wanted to do to and with her and yet my will hardly mattered. She had a vision for how this would play out and she was firmly in control. \n\nHer breath and her pace quickened a bit and she was more insistent as she bounced up and down on my cock. Her whole body tensed up as she was wracked with another powerful orgasm. She moaned and moaned and finally cried out as she crested. Rather than slowing down and catching her breath she looked down at me with a still hungry expression. \n\n\"Now...now damn it...I want to feel you explode inside me.\"\n\nI was more than happy to comply. My grip tightened on her hips and I drove myself upwards, thrusting to meet her as she plunged down against me. I'd love to tell you that I lasted a respectable amount of time beyond this but I'm quite certain that was not the case. Soon I was lost in an eruption that threatened to drain me of every ounce of fluid that remained in my body. I'm not usually terribly vocal during sex but I let out a sound that could only be described as primal. I gasped for air and Samantha collapsed against me. Our bodies had been on autopilot since she walked through the door but now that our bodies were sated (at least for the moment) we once again had to think. \n\n\"I'm starting to think you didn't come over here to work on your tan.\"\n\n\"Gee...ya think?\"\n\nWe both laughed and then she rolled off my chest and nestled in next to me. That didn't last all that long. Cuddling in bed after sex is natural and comfortable. Sex outside is an incredible turn on but I've always found myself feeling very naked and exposed while trying to cuddle after sex outside. I found myself suggesting that we get something to drink. I loved the fact that she made no motion towards her clothing before we walked into the house. \n\nWe stood in the kitchen sipping at our bottles of water and laughed at how impossible it was that we came together the way that we did. It wasn't awkward or uncomfortable. I couldn't believe this beautiful creature was standing naked before me with no trace of discomfort. That, as much as anything else, spoke to the fact that she was a woman and no longer a girl. After a time, it was another comment from Samantha that set us in motion once again. \n\n\"You know in all this time, I've never gotten a full tour of your home.\"\n\n\"No? Have I not been a good host?\"\n\n\"It's just an oversight, I'm sure. For example, I don't believe I've ever seen where you sleep.\"\n\n\"Are you really interested in a tour of my home?\"\n\n\"Yes, in exactly the same way I wanted to come over here for a tanning session.\"\n\nShe said this as she closed the small gap between us and rose up on her tiptoes to give me a kiss. Her tiny hand dropped to grab my cock. I was a little surprised at the way that it immediately responded as I gathered her in my arms and kissed her. \n\n\"My bedroom is down the hall.\"\n\nSamantha grabbed me by the cock and led me to the back of the house and through the door into my room. We spent the remainder of the afternoon exploring each other. Before we were through, we had each tried every preposition we knew. We alternately were on, under or behind trying everything we could to give the other pleasure. \n\nSamantha never spent the night in those last few days but we spent many hours screwing our brains out. On Monday she got on a plane and flew back to help care for her grandmother. As it turned out, she and her mom spent most of the summer back east before returning home but that's a tale for another time."
    ],
    "authorname": "largefan",
    "tags": [
        "ffm",
        "two women one man",
        "neighbor",
        "threesome"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/getting-to-know-the-neighbors-ch-03"
}