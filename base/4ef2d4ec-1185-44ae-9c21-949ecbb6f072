{
    "title": "While Courting Our Demons Ch. 02",
    "pages": [
        "J\n\nWhen I lay gasping against my raw throat, M sat up, sniggering madly through his closed lips as he wiped them on the back of his hand. Oh God, the collar of his shirt was soaked through from catching the wave of my cunt mixed with their leftover semen.\n\n\"Welcome to your new home,\" M said warmly, spreading his hands to indicate the room. \"Now you get to meet your new Masters, and we get to meet our pet. We've been waiting for this a while, love.\"\n\n\"I'm honored, I'm sure,\" I snorted out. But I trembled, and they smiled, surrounding me, pinning me. All I had was sarcasm, and they knew it. For the most part I planned on watching, waiting, anticipating. They wouldn't all be around to keep me down forever. I just had to keep my fucking wits about me and make my stance on everything clear. At the end, at least no one would be able to say I wasn't honest.\n\nR and C kept me close, and I was in no hurry to try and make them move. My options here were limited.\n\n\"We all will need time to adjust to this, baby.\" M hummed, probably thinking that I was just emotional because that's what the ladies were like, and that he could fuck all my perceived daddy issues away. \"Right now, we have to show you what we're offering and get to know the little girl we're going to take care of together. We won't let you go, but we won't hurt you either, will we, boys?\" The other two grinned.\n\n\"Not gonna put a single mark on my pretty little cum slut,\" R sing-songed. \"Just pretty panties.\"\n\n\"I will.\" C leaned over me as he spoke. \"I'm going to mark that ass of yours and you'll beg me for it.\"\n\n\"What they both mean,\" M chuckled, \"is that we each want to play with our girl how we like, but since we all have to share, we're going to play nice.\" Blondy stroked my thighs. \"You won't want to leave us, baby. I promise.\" I'm sure he thought he was gentling me, making me more receptive to his touch. He was the 'straight man', I reasoned. The one who would chiefly \"handle\" me until they thought they had control. \"We want you to give us a chance.\" Hands touched me all over.\n\n\"Oh, of course! How rational! I should give my rapists a chance to prove how nicely they can keep me captive!\" I hissed, without moving. My whole body shook with rage, but it was impotent for the most part. M's smile faded and he looked me over with a touch of hurt in his eyes. I pressed my mouth in incredulity and glared. \"Oh no, Romeo. You don't get to abduct me, rape me, and then expect me to play house. I don't care how much you planned and prepared to take me. I'm still your fucking victim.\"\n\n\"I know that, baby.\" To my surprise, he sighed, and cast a glance to each of his friends. \"But what woman would want the three of us?\"\n\n\"What? Are you kidding?\" I snapped, half-laughing. \"You think there's no kinky bitch out there who would love this? You realize erotica is full of multiple men relationships, right? Fuck, I read one where this chick was a werewolf coming into heat who had to fuck eleven guys before she mated permanently with two of them!\" The stress, frustration, absurdity and helplessness of my situation finally hit me, and I lost control of my laughter. I giggled helplessly, my body thrashing against them. \"I mean, Jesus fucking Christ, you could have found me online when I was looking for a Master!\" My laughter continued. M's sadness broke.\n\n\"So... You could be ours?\" he said, brightening up.\n\n\"I could have,\" I emphasized, still bucking a little bit as I both chuckled and sobbed. M picked up the corners of his mouth again.\n\n\"And you still could,\" he responded. \"I know women just want good dick, baby. Even if we had to steal you, we can give you the best dick you ever had. Just give us a chance, ok?\"\n\n\"It's gonna have to be some really good dick,\" I forced out sardonically, trying to break my fit. Now they all grinned.\n\n\"From the way you were screaming as you came on me, I think we already proved what we can do,\" R teased. The guys began to shift. M came up to my head, swapping with C. Both of them took their new post quickly.\n\n\"We've barely warmed up, slut,\" C grunted, pulling my legs apart so he could crawl between them and re-pin me. He ground the bulge in his jeans against my bare pussy and I could only shudder against him. \"You will call me Master C. I'm going to use you rough and you're going to love it. When I make you come, it will be devastating. I'll redden your ass and fuck you hard, and you'll scream my name when I want you to. I'm going to tie you up and hold you down and you will never be on top of me. Do you understand me?\" He leered down at me, and I watched M crawl closer to my torso. He got into position to help R keep my arms useless. I nodded weakly, still heaving without voice. My chest was wracked with sobs of frustration, my emotional state crashing in on me.\n\n\"Whatever you say, buddy,\" I gurgled weakly. I didn't want to be there anymore. I closed my eyes and slackened. They might as well use my body and let me sleep. I could regroup in the morning. If I broke now, they'd think I was a pushover. Maybe they'd be disappointed I put up such a lame fight, but if I broke myself into pieces now, I could refashion them later, and I would be stronger. It would take more and more to rebreak me, night after night. I wouldn't let them win, couldn't- out of pure spite.\n\nA hard slap came down across my left tit.\n\n\"Ahhh!\" I howled, my hips bucking upward.\n\n\"Answer me right.\" C growled, raising his hand above my breasts.\n\n\"I understand, Master C,\" I answered back, without energy or anger. Surprised, he pulled back, posing upright on his knees. He frowned, and gave my right breast a slap too, though not as hard.\n\n\"That was for denying me my fun,\" he told me. Then he looked at his friends. \"Get me that new vibrator we bought. We charged it, right?\" R nodded.\n\n\"You fucking bet we did.\" M took control of my upper body as R scrambled away, raided the bedside nightstand, and returned with a slim purple vibe. He handed it to C who immediately turned it on to a high, steady setting. I began to wriggle helplessly but weakly. I hadn't enough energy to thrash my nervousness out the way I wanted to, but I couldn't prevent my body from reacting.\n\n\"I like the fear on your face,\" C sneered. He set the vibrator onto my clit.\n\n\"Ohh God!\" I cried out, my cunt immediately responding despite how much I ached. The result of M's tongue work hadn't even faded and my cunt twitched hard before he even started moving the damn thing over me. \"Ooooh fuuuck!\" I pushed my hips upward, gyrating against C's action. I started to fall down into subspace. Through sheer fatigue alone they were taking possession of my body.\n\n\"Tell me how you want me to use this vibrator to make you come, you little slut.\" He dug it into my most sensitive flesh.\n\n\"C-circles,\" I gasped, tightening up against M and R, \"make... little circles on my...\" I faltered.\n\n\"On your what?\" C demanded. \"Say it.\"\n\n\"C-clitoris, Master C.\" He slapped my breast again, sending a spike of pain into my pleasure, and my cunt gushed.\n\n\"Tell us all of it.\" As he pressed further, asserting his dominance, I warbled a moan.\n\n\"Rub little circles on my clitoris, please, Master C,\" I choked out through my teeth. The persistent buzz and pressure had taken me most of the way there.\n\n\"Good slave,\" he growled in a somehow sweet, soothing way. \"I think actions speak louder than words with this one, guys. Look at her right now.\" He began stroking me in circles and I clenched my eyes and howled. My peak began climbing almost as soon as he started doing what I told him.\n\n\"She talks big, but the second we start fucking her, she melts,\" M observed wryly. \"Like a goddamn dream.\"\n\n\"Look at her nipples,\" C said, pointing with his free hand. \"They're like pebbles. Her cunt's gushing with every word. After she cums get some fucking water into her before I take her.\" R jumped up to find a bottled water from a stash they apparently had in the room. I only half-paid attention to their conversation. At this point I was at their mercy and operating under 'speak when spoken to'. I felt my orgasm cresting and tightened up in M's arms. He seemed to notice.\n\n\"She's going to come, C. See how she tightens up?\"\n\n\"Perfect. When you cum, little slut, you will tell us, and I expect to hear you scream my name.\" Breathless and wound tightly, I only nodded to show my comprehension. A few minutes of growing tenser and tenser later, I felt the transition from pleasure to climax and my pussy prepared to let go.\n\n\"Ohh fuck I'm going to come Master C I'm cumming!\" The climax broke over me and my pussy started pulsing wildly around its emptiness. C chuckled, staring down at my spread crotch as he watched my juices spill and my vagina spasm.\n\n\"God, look at that,\" he hummed, pleased with himself. \"You would turn this down, you slut? I think not.\" I yowled, screaming his title over and over as my pussy exploded; eventually winding down. When it was over I was limp, breathing raggedly. I felt a straw touch my lower lip.\n\n\"Drink, baby.\" M said, lifting the back of my head. I gulped down a good amount of the bottle gratefully, my throat parched. It felt like all the moisture had left my body through my cunt. \"Good girl,\" he soothed me, \"good girl.\" M stroked my head. Fucking bastard. Their three-party harmony was going to wreck me.\n\nWhen C was satisfied, he leaned forward, eyes gleaming.\n\n\"Flip her. Now.\" The boys moved to action abruptly, startling me out of my stupor. I was turned onto my belly, and M and R shifted to hold my arms, one each, across their laps. My left cheek touched the naked bed, and I could breathe. C grabbed my skirt and tore it off at last. He grabbed the stockings/panties on the way, and the other two pulled off my shirt and undid my bra. My purse was already on the nightstand; I didn't even realize they'd taken it off. I was naked to them- body now, soon-to-be soul. They would soon know the blackest depths of me. This was nothing.\n\nI felt C's hands running up my ankles and calves until he rested them on my rather full ass.\n\n\"A lot here for me to redden,\" the serious one proclaimed, gripping me tightly. I flinched.\n\n\"Wouldn't you all rather have a prettier, skinnier, quieter bitch than me?\" I croaked. C's palms came down upon my ass savagely and I yelped.\n\n\"A little extra padding is what I want in a slut,\" C said, running his hands across the prints he'd made. \"A smaller girl wouldn't fit me and wouldn't be able to take as much punishment as I suspect you can.\"\n\n\"Oh baby, don't be so negative about yourself,\" M scolded me. \"You're a pretty little busty girl and we think you're perfect just how you are.\" He ruffled my hair affectionately with his hand. C began bringing his palms down on my ass, over and over, stinging me with increasing fervor. I moaned choppily and relaxed into the spanking. The burning strikes sent heat all the way into my womb. I couldn't deny they all held streaks (or seemed to) of natural Dominance... Perhaps that's what the three of them were. Undereducated, desperate Dominant men struggling to find themselves and understand their needs and urges. I almost laughed from the irony considering my own struggle. Lying there helpless, I began approaching a fit of sheer madness. Pain, humiliation, degradation, rape and restraint are all major aspects of my kink, and they were hitting every single one all at once. They used my body against me. They took what they wanted without my consent.\n\nToo bad for them I cannot fear what arouses me. I was not afraid of them, and I never would be. I am always my own worst enemy.\n\n\"Babyslut is perfectly pretty,\" R said, rubbing my reddened flesh after C left off. \"Just wait until you see all the pictures I take. You'll never believe you're ugly again.\" M continued to cradle my head as he lay down to be nearer to me.\n\n\"I know our culture puts a lot of pressure on girls to be thin and made up, but we don't care about that shit, baby,\" he said to me, like the 'good boyfriend' he was pretending to be. \"We want you thick and soft and horny just as you are.\" His coddling was really getting on my fucking nerves. I opened my mouth to say something in return when C spoke suddenly.\n\n\"Wait. Why did you ask that, slut? You don't give a shit how you look to other people.\" My surprised gasp made M look at me in confusion. \"You picked a smarter bitch than I thought, M. This has become interesting.\" C shot forward, finally diving onto my body and seizing my hair from behind. His hard bulge pressed right into the cleft of my ass. \"Answer the question.\"\n\n\"I'm also curious to hear this,\" M said, bringing himself up on one elbow.\n\n\"I asked that to see how you would react, Masters,\" I replied with schoolgirl simpering. \"Isn't it obvious?\" C gripped close to my scalp and pulled.\n\n\"What did our reaction tell you?\" he growled, tugging my head while crushing me into the mattress. I hissed, my body bucking (or trying to) beneath him.\n\n\"Something...\" I choked out. \"Not enough for more than theories. Master C.\" Moving himself to the side enough to expose my thigh, C reached down and slapped the side of my leg hard enough to make me cry out loud.\n\n\"Don't hold back your answers when I ask you a question!\" He slapped me again. I let go a dry sob beneath him.\n\n\"You act like I'm supposed to be your girlfriend! I am NOT your fucking girlfriend! I'm trying to figure out why the hell you didn't just go look for a polyamorous kinky submissive live-in girlfriend! Why abduct ME?\" I shouted hoarsely at them. I turned my head to M. \"And STOP treating me like some insecure, helpless bimbo!\" To my great shock, C let go of my hair, picked himself up a bit, and began roaring with laughter. He shook bodily on top of me as he belted out loud. M sat back up, his face glowing, his mouth flat in embarrassment. R kind of stared, aghast at the picture before him.\n\n\"Seriously, M,\" C said, still shaking with fading laughter. \"You're trying way too hard, man, and the girl here knows it. But don't take it badly. She's not going to let us forget what we're doing to her, and she doesn't know what we're all about yet. Just relax.\" I let my head rest again, as my neck was hurting, and the big stoic rapist covered me fully with his body again. \"M's going to tell you all about us, and you'll find out amlittle bit about each of us as we fuck you tonight. Mostly, we'll ask you things we want to know and we want your straight answers. If you don't cooperate nice, I'm going to spank your ass crimson. Understand, slut?\"\n\n\"Yes, Master C.\" I sighed.\n\n\"You loved it though, didn't you?\" I couldn't see it, but, I knew his hand was hovering above my flesh, waiting for me to bite out some vitriolic response.\n\n\"Yes Master C,\" I answered in a half sob. He finally lifted himself off me partially, to undo his pants.\n\n\"Let's get naked, boys. The best way to get close is skin to skin.\" M and R held me down while C stripped, after which he got back on top of me to both fuck me on my belly and keep me imprisoned. The other two stripped and threw their clothes onto the floor. I was covered and surrounded by naked male flesh and my whole body cried in a kind of perverse joy. My arms were extended above my head and both the other two boys picked a hand and pulled it into their laps. Each of them curled my fingers around their erect cocks and I let them. I gripped them and let them use my hands to stroke themselves. C positioned himself, slipping his cock into my hole as he angled my hips. When he thrust into me deep, his mouth came down close to my right ear. \"You're understandably pissed off about this. But... you're unbelievably aroused by this, too.\" He started thrusting, and I wailed aloud. \"Why? Why? Tell us and we'll tell you why you're here.\"\n\n\"I don't know! I don't know!\" I screamed out, my pussy hot and swollen, my body crying for more more more more more. \"Feels so good! So good to be uuuuused!\" Sobs tore out of me as he took me hard and deep. His cock rammed into me with the steady mechanical rhythm of a train. Tears drenched the sheets beneath me.\n\n\"Why are you crying like that?\" M said anxiously.\n\n\"Am I- hurting you, slut?\" C grunted, not stopping.\n\n\"Noooooo!\" I wept. \"I do that during sex!\" Sobs took me again. He was overwhelming me with his dick and wearing down my barriers.\n\n\"Because it feels good?\" C asked.\n\n\"Y-yes! And because... it's overpowering... and I don't cry easy!\" My sobs continued to wrack me, and tears poured onto the bedspread. Submission is my nature. I have given it in the past, to different men, and to myself. What I gave these guys was not the same as I had given the Master I chose, the one whose collar they'd stripped from me. The submission I was showing them as they did this to me was for myself. I let them drive me to tears because I had no choice. The release would only help me, in the end, and none of them would ever know they did not truly have control.\n\n\"So this is like a catharsis- for you?\" C continued, fucking me hard.\n\n\"Yes!\" I howled. \"Exactly!\" \n\n\"Interesting.\" M said, thrusting his hips slightly, letting my hand stroke him so rigid. \"You're a complex little girl.\" If his pride was still stinging from my chastisement, he didn't show it. \"We picked you because of me, baby. I saw you in your store and liked how cute you were right away. But it was more than that. I saw how sweet and helpful you were, and how you laughed and smiled when people got to talking with you about stuff you were interested in. And... I saw this depth in you, so fast. The way you talked about books really hit me.\" My moans quieted as M started telling me the story, but C did not let up his fucking to make sure I listened. \"I wanted you. So I started coming in to watch you and try and figure out who you were. That's how I recognized your collar, and found out you were into erotica and BDSM. See, I was going to ask you out, until I figured out you were already taken. That wasn't good enough for me, though. I still wanted you.\"\n\n\"M showed us pictures he took of you on the sly,\" R said, using his hand to grip over mine on his cock. \"Cute little girl. You like to wear lots of pretty dresses and shit too. My god what a fucking rack you have,\" he laughed. \"I liked the look of you too.\"\n\n\"The second I saw the curve of your ass I wanted to smack it,\" C said. \"You redden up real nice.\" C ramped his pace up, running his hands down my thighs as he drove himself toward climax.\n\n\"We all agreed you would be ours, baby. No matter what, you looked like a perfect fit for all of us, and we wanted you. So we decided what we had to do, and planned how we would take you.\"\n\n\"But you don't really know me,\" I sobbed. \"You just did this based on what I looked like and how I acted at work!\"\n\n\"We got lucky,\" C growled against my ear, before he bit me. I howled, and allowed it to smother in the bed. \"We want to know all your kinks and turn-ons, you slutty bitch.\" \n\n\"Look in a mirror,\" I panted. He struck my g-spot, and I yelped. \n\n\"I'm serious,\" C growled.\n\n\"So am I!\" I snapped back. \"I can cross 'ravaged by Viking' off my fantasy list now!\" C chuckled in my ear, and gripped my hips tightly.\n\n\"I'm Celtic, not Nordic,\" he told me, suddenly amused.\n\n\"Figures,\" I answered beneath him, \"Even better.\" He fucked me hard and furious for a solid few minutes. I sang his praises with four letter words and unabashed moans. Then, he slowed again, and nipped my neck.\n\n\"Do you like role play and costumes, babyslut?\" R asked me eagerly.",
        "\"Yes, Master R!\" I groaned out.\n\n\"Obviously you like pain and being degraded,\" C grunted.\n\n\"Master C!\" I gasped, feeling him stab my insides deliciously. \n\n\"Will you let me pamper you with roses and massages and candlelit dinners, baby?\" M asked giddily, stroking the back of my head.\n\n\"As you wish, Master M!\" I felt C jerk, his body losing control at last, and his cock twitched inside me.\n\n\"Fuck!\" he groaned, giving me his load as deep as he could. I yelped and panted beneath him, waiting for his weight to come off me. Dimly I wondered who was going to be next. Frissons of delight ran up my spine moments later, when I felt the stubble on C's chin rasp along the back of my neck. \"If you don't tell us everything that turns you on, right now, I will keep you pinned like this until my dick gets hard again, at which point I will fuck you again. Plus, if nothing comes out of your mouth, then we'll find something to put in it.\" C's quiet threat made me arch beneath him.\n\n\"It's a long list, Master C,\" I muttered. \"And you've already made significant headway.\" His weight shifted.\n\n\"Oh have we?\"\n\n\"If you want to write them down, you've got bondage and restraint, sensory deprivation, gang bangs, humiliation, objectification, dirty talk, spanking and, oh yeah, taking your sperm in my cunt.\" I replied dully. \"It'll probably be easier if you ask more targeted questions, Masters.\" M wasted no time.\n\n\"Alright baby, what's your strongest kink? Start us there.\" I laughed bitterly. \n\n\"You started us there,\" I scolded him. \"You're doing it right now.\" M frowned, his brow wrinkling. It didn't seem to be a look of shame, like when I'd blindsided him earlier, but maybe regret.\n\n\"You like to be... raped?\" C said with a sudden surprised clarity.\n\n\"To be specific, I have a paraphilia. An intense fetish, basically, that is central to my sexual arousal and pleasure.\"\n\n\"Shit, I feel stupid,\" R interjected. \"It's fucking obvious when you think about it.\"\n\n\"Most of my various kinks come from that,\" I continued, almost by rote. \"Other things stem from my aesthetic and proclivities. For example, and this might pique your interest,\" I told R pointedly, \"I never feel sexier than when I'm wearing a corset.\" To surprise the skinny one, I jerked his cock expertly, making sure to catch the underside of the head on my palm.\n\n\"Corset?\" M tilted his head in curiosity. \"Aren't those things super uncomfortable and like, symbolic of women's oppression?\" I snorted. Imagine, my desperate prince charming rapist's take on women's lib!\n\n\"A, only if you tighten them until you can't breathe, and B, it's not oppressive if no one makes you wear it.\" C finally pulled off me, as if he'd decided I was cooperative enough. I leaned upward, not rolling over, but pushing up my shoulders with my elbows, now jerking both R and M smoothly but lightly. I smiled at R, trapping him in my mischievous gaze. \"You think my tits look good in a tight shirt? Imagine my waist nipped in a bit, and the glorious softness of these fucking things molded and pushed upward, filling out a low cut blouse with cleavage deeper than the Mariana trench...\" The boy gibbered at me, his dick thrusting into my palm, his eyes popping. I heard a sharp intake of breath though teeth from C, slightly out of my peripheral vision. \n\n\"My my baby, you've got a silver tongue on you,\" M purred, loving my effort at his dick, clearly wanting more of me.\n\n\"I'll buy you as many fucking corsets as you want, babyslut,\" R panted. C's hand gripped my left ass cheek.\n\n\"Clever girl, aren't you?\" he stated so quietly I almost didn't hear it. I flicked my head back toward him.\n\n\"You have no idea, Master C,\" I teased. I hoped he realized it was a warning, not a glib bit of stroking my ego. More fun that way. I felt his fingers dig in, enough to bruise, and I shuddered.\n\n\"New game, slut girl. We ask questions. You answer directly, you answer promptly. I think you're stalling, you get spanked. I think you're dodging, you get spanked. You cooperate, you get pleasure. More than you can handle. Complaints? Grievances?\" he spat this all out brusquely. \n\nI quirked my eyebrow. \"It's flattering you offer me a chance to object.\" He scowled. Verbal point me. Physical point him. I squeaked as his hand clapped the side of my thigh.\n\n\"Smartass fucktoy.\" Then he grinned. His face turned to his bros. \"Any additional stipulations for the slut, boys?\" R leaned over me.\n\n\"If I like what you say, my sexy tart, I'll let you pick where you want my tongue.\" The dark haired nerd boy opened his mouth and wriggled the tip of it at me. I shuddered remembering it on my nipples and tangling with mine. He definitely had skills there, and part of me wondered what his oral would feel like.\n\n\"Ooh, I like this!\" M suddenly interjected. \"I'll give you a question to every three we ask, baby,\" he said. \"Better make 'em count.\"\n\n\"Hands and knees, slut,\" C ordered. I complied readily, taking him at his word. Once I was up, I gyrated my ass for them.\n\n\"As you wish,\" I said coolly. I felt the big guy's hot palm cover practically half my ass. R and M pulled their cocks from my hands and got on their knees. Cocks bobbed at mouth and cunt level now. Their hands reached to my swaying, heavy tits.\n\n\"Number one...\" C began. \"Why the fuck do you get turned on by rape?\" I sighed. Of course he'd ask that first.\n\n\"There's no easy answer to that question, Master C. Best I can tell you is that my earliest sexual fantasies could be described as 'rape' fantasies, and that this is something that's been building up in my psyche for years. I've asked myself that question more times than I can possibly count and I believe it is a combination of experiences, inborn submissiveness, and my own high strung, highly libidinous, 'extreme' personality. I am an intense person with high levels of energy and extreme emotional and physical needs.\" Without missing a beat, he continued:\n\n\"What 'experiences'? Have you been raped before?\"\n\n\"I have been molested, sexually harassed, sexually assaulted, and I have several unsettling half-memories which suggest at the very least the aforementioned molestation but may have been long-running abuse or rape.\" M looked pale and slightly sick. R looked at me like he was thinking hard about what I was saying, or perhaps what he wanted to ask me. C reached between my legs and placed his fingers on my clit. He started rubbing little circles over my heated flesh, and I moaned.\n\n\"We'll talk about these 'experiences' more, later,\" he told me. He leaned down to my ear. \"I don't care how uncomfortable or reluctant you are, I am going to know everything I want to know eventually.\"\n\n\"Ask and ye shall receive, Master C.\" He nipped my earlobe and I felt goosebumps erupt down my back.\n\n\"Do we... always have to do that to you for you to enjoy sex, baby?\" M asked reluctantly.\n\n\"Not necessarily, Master M,\" I answered calmly, failing to point out every sex act they put me through was rape anyway. \"I self-medicate my paraphilia with BDSM. I am a slave/pet type sub, and I do very well with a Dominant partner.\" I added a pointed look at C over my shoulder, and let him see me smile. \"I'm going to get all the rough sex I need from that one.\" It was fleeting, but for a moment I thought I saw a blush pop up right across the bridge of C's nose. My eyes followed the color up a stark slash mark on his face. It made him look like a fucking warrior and I felt myself gush.\n\n\"Whoa, baby, what made you so wet just now?\" R said, dipping his fingers in my slit. I yelped.\n\n\"I- I looked at Master C,\" I said. R chuckled.\n\n\"Oh really? Why did that make you cream, little baby slut?\"\n\n\"He's beautiful,\" I responded without a qualm. Now a blush really did light up C's face. Score!  I kept that to myself.\n\n\"Ooooh! Lookout M, maybe C will be the next hot prettyboy,\" R taunted. C cleared his throat, retaining his stoic dignity. \n\n\"Restraining and raping you is an act of absolute control we take that you are forced to submit to, which satisfies the extreme need for helplessness inside you. BDSM is supposed to be your healthier alternative.\" C said ponderously, still rubbing me. I felt myself sinking into my arms as he made everything below my waist tight.\n\n\"Absolutely correct, Master C,\" I hissed through my teeth.\n\n\"What's the best part of the fantasy to you, babyslut? What part of this makes you hottest?\" R jumped in, tickling along the back of my neck. I immediately began quivering, and moaned so loud they all looked at me in confusion. My body writhed uncontrollably as he kept touching along my spine and shoulders.\n\n\"How you- use my body against me!\" I cried, veering hard toward orgasm. \"I don't even know if I can keep cumming the way I've been!\" It was getting hard to talk, and I'm sure I sounded like a weird high pitched phone answering service, all stilted and gaspy.\n\n\"Are you really sensitive to me doing this?\" Skinny boy continued, now running his hands into my lower back, which by then was extremely sensitized.\n\n\"Yes yes yes!\" I screeched. No matter where they touched me, the feeling inevitably shot down my body to my clit. R made goosebumps appear all over me and I was so close to detonation I couldn't think. \n\n\"Ok baby, so tell me, what do you think is the sexiest thing a man can wear?\" I knew immediately, and my eyes darted back to C. Oh my god, yes. I could see him in Outlander, alright. I pictured C in just a kilt and I know my whole body lit up like a Christmas tree. R's eyes roved my skin with delighted understanding. \"C'mon baby, knock my fucking socks off!\"\n\n\"It's kilts,\" I blurted. \"I can't resist men in kilts. If you want to talk accessories, oh God, wearing a sword. And leather boots.\" I wriggled and my body just gave out. Just the idea of C in a kilt and nothing but those accessories sent me roaring over the edge. \"Ohh I'm cumming!\" I wailed. All three of them made noises of surprise at my sudden climax; I just heaved several dry sobs until I collapsed under the weight of my pleasure. The waves took me down. C let me fold gently as the peaks crashed, and R scooped me into his arms. He stroked the back of my head as he held me close and it was so sweet I couldn't help snuggling in.\n\n\"Ooh little slut, you're gonna tell me who. Which one did you picture? All of us? Or one of us?\" He kept me in the game as I recovered. That orgasm had almost knocked me out.\n\n\"Master C,\" I conceded. \"I pictured Master C. If he were wearing a kilt right now, I could lift it and just suck his cock...\" I panted, my body getting needy again, and I gyrated my hips. Lust was taking over, which was good news for them. \"Oh God one of you fuck me, please somebody fuck me!\" The guys moved, surprised but obviously pleased, and it seemed the rotation continued. M came between my legs and rolled me so that we were in a slightly inclined missionary, with R holding me from behind. M wrapped his arms around me and entered me slowly, while he slipped his tongue into my mouth with precision. I moaned and let him hold me. I returned his kiss and wrapped my legs around him.\n\n\"You have to do it, bro,\" R teased C above me. I let M have my passion but I listened.\n\n\"I'm not getting into this,\" C hissed.\n\n\"Dude she came just thinking about it!\"\n\n\"That is beside the point!\"\n\n\"This isn't about the kilt, and you know it,\" R said, a little quieter. M was making love to me so passionately, and I was so into it, he probably thought I wasn't paying them any attention at all. M seemed not to hear anything as we made out shamelessly. \"You don't want to think about something she said, C, and you want to think about everything.\" Ooh, what a juicy bit of gossip. I reacted to nothing but M, making a series of animal grunts as I thrust my hips into his. Also interesting to note R could be serious sometimes, when it counted, and he was unwilling to see his friend compromise something. I didn't know what, but why would C seem sensitive to such a fantasy? Surely women fell all over themselves for a guy practically paranormal-romance-cover-hero sexy?\n\nM trailed his mouth from my lips down my chin to my neck, and I gasped for breath as he began to change positions. He lifted my left leg up, and took himself to his knees. He threw my ankle on his shoulder and helped me adjust to his angle beneath him. I shifted my hips lower and reclined. R slipped a big pillow under my shoulders and head. I wiggled into a comfortable place and waited. M slipped back inside. I reared my head back and moaned.\n\n\"So why did you say C was beautiful, and why did picturing him in a kilt make you cum so hard, baby?\" R said loudly, clearly unwilling to let it go.\n\n\"He's beautiful! What else can I say? That's he's handsome, fair, pleasing to the eye, eye candy, hunky, walking perfection, comely, a girl's wet dream? He's hot! And oh fine I have a fetish for long hair on guys!\" I told them with no control, my body grinding into M's. \"AND C's Celtic... I love Celtic men. Especially thick, large men. He's so fucking beautiful I can't stand it.\" Above me, M frowned, wounded.\n\n\"Not me, honey? Am I less beautiful than C?!\" M played it campy, but I could tell he was at least a little affronted. I shook my head.\n\n\"Oh no, Master M. He's rugged and you're princely. Different archetypes. You are easily the most gorgeous man I've ever seen.\" M's whole face pinkened and a big goofy grin stretched his mouth. R sniggered loudly and rubbed my cheek affectionately. \n\n\"When M's done with your hole, where you want my tongue, babyslut? Where do you want my tongue?\" He reached down and took two huge handfuls of my tits.\n\n\"I want to feel you lick my pussy, Master R!\" I screamed, as M touched the right spot inside me.\n\n\"Ready for my cum, baby girl? You feel better now?\" M soothed, and I reached up to place my hand on his chest.\n\n\"Please give me your cum, Master M,\" I whimpered. \"I need you to complete me...\" M moaned, and his body melted. C stood rigidly back, presumably thinking about thinking about what I'd said and what R had said. C didn't like to be complimented on his appearance? Perhaps because of M and because of...\n\nM cried out as he spurted deep inside me, and god was I getting sore and losing my mind, but I had to last. Their Q-and-A was keeping me centered even as my whole reality seemed like a hallucination. M huffed his release and pulled out to watch his sticky fluid ooze from me.\n\n\"Good baby girl,\" my prince told me. \"I'll get you some more water, ok?\" He left me being held by R, and just as M turned and walked off, C stuck his head over me, scowling.\n\n\"What about the fucking slash on my face?\" He spat out, quietly. \"Did you not see it?\" I rolled my eyes.\n\n\"Of course I saw it. It adds to the warrior aesthetic like a fucking charm. You're a good-looking man, C, why does it hurt you to hear that?\" The look on his face was like I'd coldcocked him. Before he could respond, M was back, and his timing proved my other hypothesis after a minute. C clammed right up. He didn't want M to get involved in the conversation for some reason.\n\n\"Drink up sweetheart,\" M told me, apparently oblivious to the tension. Or maybe he just didn't want to stray too far off his course with me. I sat up and took the water he offered, and he gave me a granola bar. I looked at it.\n\n\"Did you know my favorite is chocolate peanut butter?\" I whispered.\n\n\"Maybe,\" M told me mysteriously, and I wondered how long he'd watched me. Ugh, the idea was so creepy.\n\n\"I should have some questions now, Master M,\" I reminded him.\n\n\"Yeah, you do, sweetie. I kept track pretty accurately, I think. We asked ten or eleven questions about you... So you have three.\"\n\n\"When you're raring to go again, you pretty little whore girl, I'm going to make you scream on my tongue and then fuck you to sleep.\" R promised.\n\n\"You wanna ask now, baby, or wait?\" M asked me, rubbing my shoulder as I drank and ate.\n\n\"I'll ask now,\" I said, taking another quick sip. I'd spent a lot of energy. \"What's your deal, formally? I want to know about you, and this house. I want to hear your plan.\" They looked at each other, having a conversation with glances and gestures that was so sudden and rapid I had trouble following it. They seemed to be miming out what they each considered to be important in answering me.\n\nThe silent conversation ended about as abruptly as it began.\n\n\"Ok, baby. Me and the boys here, we go way back.\" M started, taking the lead as the grand marshal of their scheme. \"I was an only child to really well off parents and all I ever wanted was brothers. I met these guys under individual and somewhat heroic circumstances and we became a trio for all time. They're my best friends, and any woman who loved me needed to love them, too. When I was a kid, I pictured it more like Full House, you know? Where a dad is raising his kids with his two best friends? But when we became teens, it was different. Suddenly I wanted one wife to keep us all happy. One special little girl whose heart was so big, she could fit us all inside. I could never give up my bros. Letting separate wives and families split up our family just... would never be right.\" What a romantic he was. I felt sorry for him. How'd it come to this desperate abduction? For the right woman that sounded like heaven. I kept listening, intently, and M seemed encouraged. \"We all have dated and hooked up, and I've... broached the subject with a few prospects, but the 'details' didn't always blend.\" Analyzing each of their personal quirks and physicalities, I saw what he meant.\n\n\"I will admit, I get it. You're all very different. It would be hard to find a woman that sexually adventurous who got on with each of you,\" I said, after swallowing the last bit of my snack. I drank more.\n\n\"Now that you mention it...\" C suddenly came alive. \"She's actually attracted to all three of us. You get aroused for and desire all of us. I saw your body respond, and you aren't pulling toward any one of us too hard.\"\n\n\"You are so right, bro,\" R said. \"Shit baby, do you find me sexy? Do I turn you on, baby?\" I grinned.\n\n\"I love a filthy mouth, Master R,\" I teased. \"I also have this inexplicable thing for wiry dark-haired dudes like you. You know you all have the biggest cocks, right?\" R laughed hysterically. \n\n\"You're damn right we do!\" he cackled, triumphant. \"God I love this bitch!\"\n\n\"It's like you were made for us, baby,\" M told me with a fond glow. \"It's all worth it. You've gotta be our true love.\"\n\n\"Tell me how you did it.\" I urged. M cupped my cheek.\n\n\"I first ran into you accidentally baby. Overheard you talking about 'damsels in distress'. Then when you caught me just spacing out, you asked me if I was ok, and I asked you to recommend a book.\"\n\n\"The Night Circus!\" I suddenly recalled. I'd seen him there but I see so many people at work, and I don't get to know all of them. But you better believe I told all of my female coworkers about the looker in the fiction aisle, alright. I nicked-named him 'The Dreamboat'. Sightings were rare. I hadn't even made the connection 'til right then. He smiled bright.\n\n\"You remember! How sweet, baby. We didn't ever talk again, but I was there a lot. At least once a week, and I watched for you.\" He'd been watching me and I didn't see him? I suppressed a shudder and kept my focus. \"I began to get a taste of you when you there was nobody watching, too. You showed such a sweet, helpful person to customers and with coworkers and certain people you were totally relaxed and sooo naughty. I've also heard you talking to yourself and singing to yourself from a shelf over.\"\n\n\"Pining for me from afar, Master M?\"",
        "\"For a long time, baby girl.\" He lifted my chin with his fingers and gave me a quick peck on the lips. \"We bought this property and planned the house ourselves, waiting to fill it up with someone. We just didn't know how long we'd be waiting. Let me tell you, I couldn't take it anymore.\"\n\n\"None of us could,\" R said. \"And when M brought home pictures and videos of you, we couldn't resist.\"\n\n\"No shit,\" I answered flippantly. \"You actually decided this was your preferred option.\" Sheepish grins erupted on two out of three faces. One remained tight-lipped.\n\n\"We monitored your routines and isolated the window of opportunity we'd have to snatch you without too much fuss and not much evidence,\" C grumbled, sitting apart from the knot of the rest of us. \"And let me reassure you right now, I am not sloppy when it comes to security. We didn't do this on a fucking lark.\"\n\n\"Crazy and ballsy, aren't you all?\" I sniped, shaking my head.\n\n\"We know you probably hate us right now,\" M said quietly. \"But we didn't do this because we just wanted to get laid, or because we don't think women are people, or something. We did this for you. For us.\"\n\n\"There is no 'us',\" I told him. \"There never was- there was me, living my life, and you guys, living yours.\" R's hands came down on my shoulders.\n\n\"We know baby, but we needed a chance with you. We could all be really fucking happy together! Don't you get that we had to break the rules for you?\"\n\n\"You didn't have to do anything,\" I said icily. \"Least of all break the law.\" A finger came under my chin, and R tilted my head back. The emotion surging through his hazel eyes silenced me. His gaze was white-hot.\n\n\"Yeah, we did, babyslut,\" he said in a supremely serious tone. I felt M grip my hand as he drew my attention back to him. His perfect lips came down on my knuckles as he leaned in.\n\n\"For what it's worth, sweetheart, I'm sorry it came to this. I had this whole plan to take you out with these guys and treat you like a queen, and when I realized you weren't single I was crushed. This was a desperate shot, but you gotta believe us, we did it for romance.\" And there it was. Fucking romance. Curse the movies, TV and books that made huge, insane, borderline obsessive, stalkery gestures look 'romantic'. Motherfucking male sexual entitlement and socialized rape culture in action in the brains of My Three Abductors. \"Hey it's ok to kidnap and rape a woman if we love her enough!\" The saddest part? The number of erotic novels I'd read with this exact storyline.\n\nTheir insanity paired well with my internalized misogyny. Boy were these dudes in for a ride. My attention shifted over to the behemoth, curious, and expectant. He was closed off, his ankles crossed further down the bed, his arms folded on that magnificent, broad, nicely fuzzy chest. C looked as if he wasn't paying attention, but once he saw me looking, he turned his head, brooding in his stare.\n\n\"If you expect me to be as sappy as the two of them, you're gonna be waiting a long time,\" he told me flatly. \"I like to fuck, I want my friends to be happy, and I like control. So here you are.\" I arched an eyebrow, but nodded his way.\n\n\"Alright,\" I said, sitting up a little and getting wrapped in the two's arms for my effort. \"You can consider question one satisfied.\" The two cuddly boys rubbed me all over.\n\n\"What next baby?\" M said.\n\n\"Have you thought about me getting sick or injured, severely enough to need medical attention? Or childbirth complications? What will you do, if something happens?\" My query was firm, and this was a test to see how they thought, and the limits of their compassion.\n\n\"We have a pretty vested interest in keeping you alive and well, honey,\" M said. \"If you need a doctor we'll take you to a doctor.\"\n\n\"No matter the potential consequences of doing so?\" I pressed. He smiled, thinly.\n\n\"Yeah. We're not going to risk your life.\"\n\n\"I've been reading up on pregnancy, childbirth and midwives just in case too,\" R told me, stroking my hair. \n\n\"Getting a little ahead of yourselves eh?\"\n\n\"Never too soon to plan for kids, girlie,\" the playful one laughed, nuzzling me afterward.\n\n\"Is that really what you wanted your second question to be, baby?\" M asked.\n\n\"Yup.\" When I didn't offer any further explanation, M cocked his head. C unfolded himself and tilted in.\n\n\"One more,\" he warned. \"Don't you want to know where you are? What we're gonna do? Who we are? Something important to your own fucking kidnapping?\" I shrugged and gave him a devil-may-care grin.\n\n\"Right now I'm only interested in some specific information. I presume I'll know the answers to all those questions eventually, but there's more pertinent things right now.\"\n\n\"Like what?\" he asked, studying me.\n\n\"Like why didn't you just put up some profiles online? On dating sites for kink or polyamory or something? You did not need to do this just to find a woman. What if your real 'true love' is still out there waiting for you?\" This question made M open his mouth, pause, and then furrow his brow in thought. R made a noise like he hadn't thought about that. C just peered at me.\n\n\"Why the hell did you ask that? What difference does it make?\" I snorted.\n\n\"Because if I hadn't put up some very specific profiles on BDSM dating sites, you crazy fucks never would have met me. That's how I wound up with my fianc\u00e9. You could have written out exactly what you were looking for and put it out there and met somebody.\" Using my finger I made a big circle in the air that encompassed all of us. \"This didn't have to happen. You made yourselves a bunch of serious criminals just for a bit of pussy. Pussy some lucky woman could have given you by choice.\"\n\n\"I keep telling you, baby, for us, it's you and only you,\" M whined just enough to sound like a puppy and not enough to grate. I rolled my eyes.\n\n\"It's not that we didn't, actually,\" R started. \"We just got no serious bites. And what attention we manage to get I-R-L, either they aren't interested in a long-term thing, or they only really want one of us.\" He shot a dark look at M. Even C inclined his head toward the extremely pretty man next to me. \"It fucking hurts to hear a chick tell your best friend you're a 'creepy weirdo' who she wants nothing to do with.\" Behind M, C's face was black like he was occupied with something in his head. \"She also called him, and I quote, 'Like the Hulk and Frankenstein had a baby'.\"\n\n\"Bitch,\" I said, genuinely sympathetic. \"And stupid. Frankenstein's the doctor, not the monster.\" I actually heard C snort, and looked over to see him fighting back a smile.\n\nBy that point, I felt I had a pretty solid grasp of their basic personalities and desires, and I had learned enough to start twisting the whole situation in my favor. I just had one last leg of the rape-cathalon left to run. The break had given me enough energy to finish.\n\n\"That's all your questions for now, slut,\" C said dangerously, nevertheless more relaxed. \"It's almost your bedtime.\" Getting to his knees, he pulled me out of R's lap and laid me down. R moved, coming to my legs. M also repositioned, joining C around my torso. The two of them split my thighs apart.\n\n\"Been waiting for this,\" R said huskily. \"I want to whisper all the dirty things I'm going to do to you right in your ear, then run my tongue over every inch of your sexy body, girl. We're gonna have so much fun playing together.\" He bent to exhale his hot breath on my exposed pussy. I trembled as he parted my labia with his fingers. M and C were holding me down, fondling me everywhere. \"You have such a gorgeous pussy, little slut,\" R told me in a reverent voice. His fingers traced up and down on the lips, just lightly rubbing and exploring me. After a minute, he slipped two of his fingers in my soaked but tender hole. \"So tight, and you just fucking gush juice everywhere while we play with you. You love sex, don't you baby?\"\n\n\"Yes Master,\" I choked, unable to hide my need. \"I love sex. I want it all the time.\" He chuckled, and finally brought his tongue out to flick over my clit. I moaned aloud.\n\n\"We are going to give you all the sex you can handle, you delicious fucking whore,\" R told my pussy. I warbled another moan and he fell onto my clit, flicking just the very tip of his tongue against my over-sensitized bud. I was already so worked up it didn't take much. The pressure he was applying was so light but it felt so strong, I arched my hips into his mouth. C and M both took a nipple each into their mouths and started suckling me too, and I shrieked until I strangled on it.\n\n\"Fuuuuuuuuck!\" I howled. R's tongue garnered a little more rhythm, and his fingers dug into my walls as he searched for my g-spot. When he found it he stroked me insistently, keeping my clit humming. It was enough to make me start crying again. C and M started chuckling against my tits. Their tongues and lips did their own things and the clash of sensation made my body even hotter. God it was one of my dirtiest and most far-fetched fantasies come to life! Three men at once touching me, three men sharing my cunt, filling me with cum... I couldn't take it. R's licking and nibbling proved to be just as hot as his kissing. I heard myself begging him for more, totally lost in the moment and the overwhelming pleasure of being held prisoner, licked and sucked to what felt like my fiftieth orgasm that night. And I still had to take his cock one last time! I wept, continuing to beg, gyrating myself against his mouth.\n\nR used the flat of his tongue in circles against me, driving his fingers inside expertly, and with the two others at my tits, running hands along my body, I couldn't hold out. Between my legs R hit just the perfect spot and I screamed.\n\n\"Right there, right there! Yes oh fuck yes Master R!\" My body tightened against them. I could feel my breasts swell as I neared climax, and my lower half was curled up, shaking. R swirled his licks on me with incredible precision and consistency, and I lost my mind. \"I' m coming!\" I shrieked, blindsided by the orgasm as it destroyed me. My spasms tore through me so hard I swear I almost blacked out. R kept licking and fingering me, and I screamed until I was breathless. My body went limp in stages. I felt boneless. R finally stopped driving me into oblivion when I was little more than an overcooked noodle, and even then, my pussy was still throbbing and rippling with aftershocks when he climbed up and speared me. I whimpered raggedly, barely able to move to reciprocate him.\n\n\"You are so fucking swollen around me right now, it almost hurts,\" R crooned, giving it to me hard and deep. \"God what a fucking pussy you have. Tight, deep, sensitive, and so goddamn wet and hot.\" I moaned. \"What feels better, slut girl? Coming before, during, or after I fuck you?\" R pounded me hard, and I angled myself weakly to feel as much as I could.\n\n\"Feels... best if I cum before,\" I uttered. \"I'm really sensitive that way...\" I stared up at him in a haze of pleasure, only able to keep my eyes half open. \"Ssoooo good, Master...\" I panted. My body was so worn out by then I could barely lift my arm to touch him as he ruthlessly fucked my cunt. \"You're so big...\" and he fucking was. Thick, and long. I didn't know how I was even taking it. I was stretched around him so much I got why he said it was tight enough to hurt. R grinned down at me, enjoying himself thoroughly. His cock worked ceaselessly in my hole.\n\n\"You take me so well, cumslave,\" he grunted. \"I don't think I've had a pussy I've liked half as much as yours.\"\n\n\"You do feel incredible, baby,\" M said, running his hands through my hair. \"Like velvet.\"\n\n\"A hot, tight fucktoy indeed,\" C added in. \"Perfect for taking loads of sperm.\" I could only moan in response. I was fucking exhausted. It was a huge effort just to keep my legs wrapped around R's waist as he drove himself hard in and out of me. My head was between M and C, and M started stroking my hair. I was beginning to pass out, despite the pleasure. My knees were shaking around R's thin frame.\n\n\"Hurry up dude, she's not going to last much longer,\" M chastised his friend. He kept stroking me softly, cupping my cheek. \"You're doing so well, baby. You can make it.\" To what? The end of my rape?\n\n\"I'll give her all my spunk soon,\" R grunted, picking up his pace. \"God she's fucking hot inside. Six fuckings, five orgasms, is there anything this bitch can't take?\" R laughed above me, and his cock struck the back of my cunt. I sobbed, clutching weakly at the other two. Sleep was calling my name. My pussy was aching with use and the unsated greed of its own arousal. I both wanted and didn't want more. Didn't know if I could stand another orgasm, but my clit was throbbing, and I felt nothing but pressure, pressure dying to be released by climax. I dragged a hand down my body and set my fingers on my clit. Above me I could see R grin through my half-cracked eyes. \"Need another one, sexy slut girl?\"\n\n\"Need... to come...\" I whimpered. M slid his hand over my body and gently pulled my own fumbling fingers away.\n\n\"Let me, honey. You're so wrecked. Let me pleasure you while R finishes up.\" My head rolled to see him, smiling softly down. I gave a sob, and felt a tear roll down my face. M shushed me and pulled one hand to his mouth. He kissed my knuckles as he started stroking me with two fingertips, rolling circles over my clit. I was so tired I couldn't even tighten up to take my orgasm like I usually did. R fucked directly into my g-spot, lifting one leg up onto his chest. Everything in me started to quiver, and I closed my eyes, letting M and R do their work. I descended into subspace, with a dick in my snatch and some asshole's fingers on my clit. My arousal was at such a fever-pitch I began to cum moments after M started stroking, and having lost all conscious control of my body, I felt nothing but the molten explosion that started my contractions around the prick inside me.\n\nI came voicelessly, not even strong enough to moan. The waves pounded me, and I heard R curse, though he sounded unclear.\n\n\"Fuck I feel her cumming! Oh God I'm gonna shoot!\" I could barely tell his cock from the sensation of orgasm. Both parts of the feeling heightened and complimented the other, and I rode it all out as R filled me with his warm spunk.\n\nAs I began to pass out, my thoughts were of these men holding me, and what I was going to do. \n\nR wants to play. M wants to woo. C wants a challenge. I can deliver all their fantasies.\n\nI want to fuck. I want to play. I want to kill. I'm going to make their dream a bloody fucking nightmare."
    ],
    "authorname": "PhilippaMaQuente",
    "tags": [
        "abduction",
        "bdsm",
        "non-consent",
        "mmfm",
        "paraphilia",
        "polyamory",
        "revenge",
        "dark erotica",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/while-courting-our-demons-ch-02"
}