{
    "title": "A Handyman's Memoir Ch. 47",
    "pages": [
        "Final\n\nThere were a number of changes to my life after the engagement was official. I told Ron I couldn't take any more female customers unless they were non-sexual, and the only sexual contact I had with my loving women friends was when Lee was with me, either in our own bed or at a special party. They were hardly difficult things to do. Lee and I were blissfully happy, and our sex lives were full and rich. There was an occasional new customer that I had a feeling could have blossomed into 'something more,' but I had no problem keeping things under control.\n\nThe wedding plans came together nicely. Early on Lindsey wanted to host it at her house, but it grew too big, and then Chrissy offered her big beautiful home or the lodge in Lake Placid for our use. All of those options had difficulties associated with them, so we went with a wonderful little 'boutique' hotel in the city. The ceremony would be in a nice courtyard in the back, we'd take over the restaurant section for the reception, and most of the guests would reserve rooms and stay right there. We hired Lexie's funky jam band to kick the party into overdrive, and Johnny and Marta arranged their touring schedule so they could perform for us and share in the celebration.\n\nJohnny and Marta played New England and the Adirondack region for three weeks before the wedding, and Penny invited us up to Camp Heaven the weekend before the wedding to see them. Lee and I were busy with wedding plans, but we decided to go up for an overnight for a much needed break. Penny kept the gathering to just the five of us because she knew Lee and I just wanted a relaxing getaway. Lee had met Johnny up there the day Connie passed away, but hadn't had a chance to get to know him. Of course I had told her all about Marta, who I kept in touch with regularly.\n\nWe arrived Saturday afternoon, walking the half-mile wooded trail to the cabin in warm, sun-dappled light.\n\n\"Steve!\" I heard Marta yell, and she ran to us as we emerged from the woods.\n\nShe jumped into my arms completely naked and kissed me, hanging on tight with her legs wrapped around me.\n\n\"My sweet Marta!\" I said in her ear. \"How are you?\"\n\n\"I'm wonderful Steve!\" she said. \"My life is so beautiful thanks to you.\"\n\nShe got back on her feet, hugged me tight again and saw Lee standing there.\n\n\"Oh, I'm so sorry, that was probably inappropriate,\" she said embarrassedly as she let go of me.\n\n\"Not at all Marta,\" Lee said with a smile. \"I'm used to it. He's a popular boy. Anyway, I feel like were old friends.\" She hugged Marta and Marta relaxed and smiled.\n\n\"I know,\" Marta said. \"I hear so much about you from Steve. You've filled his world like a big warm sun. I'm so happy for you both.\"\n\n\"Thank you Marta,\" Lee said as they broke off their hug with big smiles. \"It's so nice to finally meet you.\"\n\n\"Stevie my man!\" Johnny said as he and Penny approached, also naked. \"Love looks good on you man!\" He gave me a big bro-hug and turned to Lee. \"I'd forgotten how gorgeous you are Lee!\" he said and he gave her a big hug.\n\n\"I'm beginning to feel left out,\" Penny said. \"You guys all found your soulmates and I'm still looking.\"\n\n\"You've got four soulmates today sweetheart,\" I said and I gave her a kiss and a big hug.\n\n\"Are you already for your big day honey?\" Penny asked Lee as the hugged.\n\n\"Pretty much. As long as all our friends and lovers are there, we're ready,\" Lee said.\n\n\"Is that all you brought with you?\" Penny asked, looking at out small overnight bag.\n\n\"Yup,\" I said with a smile. \"Don't need many clothes around here.\"\n\n\"Darn right,\" Penny said. \"You know the drill, strip 'em off, grab a drink, and we'll see you down by the pond.\"\n\nThe afternoon progressed in a most relaxing manner, just what Lee and I needed. Sunbathing on the lounge chairs, sipping cool drinks and catching up with old friends.\n\nPenny overheated in the hot sun and plunged into the pond to cool off. Johnny jumped in after her and they embraced in the cool water. Before long she was on her knees in the shallows, moaning as Johnny's fat cock stretched her pussy. The sight and sounds brought my cock to life and Marta noticed it.\n\n\"Looks like someone needs some attention Lee,\" she said.\n\n\"Ooo, isn't that nice,\" Lee said with a smile when she saw my growing, throbbing member. \"Care to join me Marta?\"\n\n\"I was hoping you'd say that,\" Marta said.\n\nThe two girls converged on me from both sides. Lee kissed me and Marta caressed my cock and my balls, bringing me to full rock hard status in no time.\n\n\"Don't tell Johnny,\" she whispered to Lee, \"but this is the best cock in the world.\"\n\nShe licked and sucked in my balls before engulfing my length in her small mouth. The sensations of our time on the boat came flooding back to me and I moaned deeply.\n\n\"Good memories?\" Lee asked, seemingly reading my mind.\n\nI kissed her hard, knowing what a special woman she was for letting me relive those memories in such a way.\n\nLee kissed her way down to join Marta, and the two of them gave me the best double team blowjob I've ever experienced. They were relentless, and it ended with me exploding gushes of cum deep in Marta's throat while Lee sucked on my balls. It was massively intense, and rocked me to my core.\n\nAfter an evening feast of grilled chicken, grilled asparagus and potato salad we sat around a campfire and reminisced about our lives together and the great parties at Camp Heaven. Johnny and Marta pulled out their guitars to play for us, Marta beaming with pride as she showed me the beautiful Collings guitar that I bought for her when she and Johnny arrived in Texas. When darkness fell we moved inside the cozy, oil lit cabin. It was late summer, and a nice warm weekend, so Penny had it set up to sleep on the screened porch. There were two double beds out there, right next to each other to make one big sleeping surface.\n\n\"Isn't it great?\" Penny said. \"Ronnie set it up for me. One of the platforms folds over onto the other one, so I can have room for chairs out here if I want. He said he was inspired by the giant bed in Lindsey's playroom.\"\n\nAs it was, with both beds set up, it was like one huge mattress surrounded by windows and forest, and Penny loved it.\n\n\"I just love fucking out here,\" she said. \"It's like a fairy tale room.\"\n\n\"Do they write fairy tales with fucking in them?\" Lee asked with a smile. \"I'd like to read those.\"\n\n\"That's what Julia should do!\" I laughed. \"Remember that so we can tell her. It's perfect for her.\"\n\nWe settled in for the night with tequila shots and a pipe full of good weed Johnny brought. Lee had already quit her job in preparation for us leaving on the boat for the winter right after the wedding, so she didn't have to worry about drug testing anymore. We all got as high as kites and made love with a freedom I wish everyone in the world could experience. There was laughter and intensity and love and pure sexual bliss all rolled up into one magical night that Lee and I will never forget. It carried us through the week leading up to the wedding as if we were on a cloud, and the plans and preparations seemed to fall in place effortlessly, sweeping us into the big day as if the universe had predestined it all.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe day of the wedding went way smoother than it had a right to, with everything falling into place like clockwork. The courtyard at the hotel was beautifully decorated, thanks to Carol's artistic vision and Julia and Lindsey's help, and Johnny and Marta played instrumental guitar music as the folding chairs filled up with friends and family. I watched people file in from a quiet corner with Ron. \n\nMy mom and dad and Lee's mom took places of prominence in the front row, along with Becka's husband, who was a terrific guy, and Lexie. Our moms looked beautiful, Lee's blonde haired blue eyed mother looking particularly ravishing, giving me a glimpse of the gorgeous patina Lee would undoubtedly achieve as we aged together. My dad looked handsome as hell, and I hoped Lee would see my future in him with the same enthusiasm. \n\nBehind them were aunts, uncles, cousins, and a full house of dear friends. I smiled when I though about how many of them I'd seen naked. It was easy to imagine because the women all looked so sexy. They dressed to impress, that's for sure, and I knew my dad would enjoy mingling with them all at the reception. As they filed in my memories with them flooded back... \n\nGreta and her boyfriend came in with Antony and Donald, Greta's long brown legs on full display. Sinking my tongue into the beautiful pink pussy at the top of those legs next to Lindsey's hot tub overtook my thoughts as she sat down, laughing with Donald. \n\nBarb and Liz came in, Barb with her longtime boyfriend Ed and Liz with a gentleman I hadn't met. They sat behind Antony and Donald and Greta, all of them laughing hysterically within moments. Liz's big beautiful body was in a red dress, sexy and proudly displaying her lovely curves. Her massive tits looked like they could bust out at any moment, which would undoubtedly have been a whole lot of fun if it had happened. Barb looked sexy too, so much more so than the somewhat timid woman I had first met. Her screams of pleasure echoed in my head as I remembered her riding me in Lindsey's exercise room, the first orgasm she had had in a very long time.\n\nChloe and Bobby came in. They looked around and took seats near the back. Chloe had on a skin tight turquoise blue dress that set off her glowing red hair, and stockings with horizontal black stripes. She looked slightly slutty and oh so marvelous. I hadn't seen her in a while and her stunning beauty was becoming even more defined. Our first night together came back to me in a rush, fucking ourselves to oblivion with Julia watching us through the lens of the computer on Skype.\n\nMy old buddy Mark came in, escorting his two dates, Margie and Bonnie. I wasn't sure how I was going to explain my two high school teachers being at my wedding to my mother later at the reception, especially with them looking so god damned sexy.\n\nPenny and Mary came in arm-in-arm, looking like a super hot lesbian couple. Thank God they're bi-sexual and let me play with them once in a while, 'cause damn they looked good. Kathy ran over to them when she saw them and the three of them sat together, Kathy doing the 'little black dress' thing, which looked spectacular on her little yoga body. As I stood there admiring her the vision of her peering over the balcony railing at Penny's camp filled my head, Penny fucking me in a blatant display to get Kathy and Ron to loosen up and play along. They certainly loosened up.\n\nCarol, Julia and Lindsey gathered in a corner and chatted for a few minutes before taking their seats. They looked insanely hot too, all three of them, and I smiled and shook my head, realizing it was a vast conspiracy for all my women to dress super hot, probably so they could embarrass me in front of my mother. Lindsey saw me looking at her from across the room and turned to show me the sexy backless ruby-red dress, which dropped all the way to the crack of her ass. She turned back with a smile and blew me a kiss. Carol and Julia each blew me one too, and I blew one back to each of them. My mom saw me, turned to see the smiling girls and whispered something in my fathers ear. They both smiled.\n\n\"You hear what they're doin' man?\" Ron asked me quietly, gesturing toward Johnny and Marta.\n\nI listened to the lovely instrumental melody they were playing on their acoustic guitars and it suddenly hit me where I had heard it. It was a song from my childhood, when I use to listen to top 40 radio. A huge hit for Willie Nelson and Julio Iglesias, \"To all the girls I've loved before,\" and it was the perfect soundtrack to the parade of lovers filling the chairs in front of me. I smiled and shook my head, and Johnny smiled and nodded when he saw that I'd got the beautiful joke.\n\nChrissy's luminous presence snapped me out of musical memory lane when she and Ally and Nicki came in, Nicki with a boy. He looked a bit like her old boyfriend Bix, with long dreadlock hair and a nice smile. Nicki still looked like an innocent high school girl, even though she was a highly sexed college girl, to a point most college girls only dream of. Her mother Ally looked crazy hot in a light green dress. I had never seen her dressed up before and it was quite a sight. Why her husband ignored her and had a mistress was one of the great mysteries of the world. The same could be said for Chrissy's husband. I mean come on! She was in a little black dress, and this one topped them all. The way it fit her it wouldn't surprise me if she had it custom made. I've said it before and I'll say it again, Chrissy could be Sofia Loren's daughter, she's that kind of Italian beauty. A shimmering necklace made the light dance in her stunning cleavage, and her radiant smile filled the room with warmth.\n\nAntony's sister Lucia came in with a very handsome man on her arm. She looked beautiful and confident, and waved at me when she saw me, pointing at her man like a giddy teenager showing off her catch. I gave her a thumbs up and she smiled a lovely smile as they sat down.\n\nMiscellaneous relatives and other friends came in, quite a few I hadn't met yet, and the seats were mostly full. Just before zero hour Denise came in, wearing a skin tight lizard print dress and fishnet stockings, with a leather clad biker boy on her arm. They looked outrageously wonderful, and made me smile.\n\nJohnny and Marta played the wedding march, and Ron and I took our places, along with Becka and Emma, both sharing maid of honor duties. Lee's father walked her down the aisle, and she knocked my socks off in the sexiest little wedding dress I'd ever seen.\n\nThe ceremony was beautiful, with vows we wrote for each other and a song from Johnny and Marta that Marta wrote for us called Big Warm Sun. There was so much love in the air I couldn't stand it, and I had to wipe away tears from my eyes on more than one occasion. The proceedings ended with great whoops and cheers and applause from all our loved ones. Lee and I kissed each other again, deeply and passionately, and the deed was done \u2014 the rest of our happy life together had begun.\n\nWe took over the entire restaurant at the hotel, and the dinner was fabulous. After the food was cleared away Ronnie stood up to give his best man speech, his big body looking uncomfortable in his rented tuxedo.\n\n\"Steve and Lee. What can I say. You guys are the best. Steve, I'm just one of so many people whose lives you've affected in a positive way, everyone from the elderly men and women who trust you to take care of their homes in an honest, caring and highly skilled way, to your friends who love you dearly, you've made a huge difference in so many lives. I sorta knew it on my own, but it really hit home as more and more people realized I was gonna be your best man. They told me so many stories, stories about, well, everything. From how happy they are to have found the best handyman in the world to how you've turned lives completely around. The funny thing is, none of us know how you do it. You just show up in our lives and things get better for us. Lee knows what I'm talkin' about, right Lee?\"\n\nHe smiled at her and she smiled and nodded, sniffling as she wiped a tear from her eye. \n\n\"I'm gonna get all fancy now and quote someone a lot smarter than me,\" Ronnie continued. \"Henry David Thoreau said, \"Most men lead lives of quiet desperation and go to the grave with the song still in them.\" Holy shit that's somethin' isn't it? So true. And he didn't mean just men when he said it, he meant women too I'm pretty sure. Go to the grave with the song still in them. Sad. Sad as shit right? Well not when Steve's around. He doesn't let that shit happen.\"\n\nEveryone laughed, and Ron smiled.\n\n\"You're gonna sing when Steve's around, one way or another,\" he continued. \"I found my voice. Lee found her voice. So many of us here in this room found our voice and are singing our song because of Steve's presence in our lives. Lee, she makes people better too. An emergency room nurse for many years, she's saved countless lives and healed countless people. That's an amazing thing I can't even hardly fathom. She's gorgeous and funny and sweet. Smart as a whip and someone you could be around every day and be happy. Steve's the lucky guy who gets to do that. You guys are so perfect for each other. Raise your glasses everybody . . . here's to the happiest life possible for these two great people. Steve and Lee, you're the best.\"\n\nThe room erupted in cheers and then applause.\n\nWe cut the cake, and Johnny and Marta took the stage to start the evening's entertainment. I went up to Marta's microphone and got everybody's attention.\n\n\"Everybody, I'd like to introduce to you two dear friends of Lee's and mine,\" I said. \"They've been touring all over the country making their wonderful music, and they insisted on changing their schedule so they could be here with us tonight. They're gonna kick things off before the dancing music starts later, and they're gonna sit in with that band to. Johnny and Marta everybody!\"\n\nThe whole crowd quickly fell in love with their lush guitar interplay and lovely vocal harmonies. You could hear a pin drop in the room during their quieter songs, and they had everyone clapping and singing along with the louder numbers. They were awesome, and Bonnie took all their information so she could book them at her cafe in Pennsylvania.\n\nLexie's funk band took the stage, the drinks flowed freely, and the party was quickly at full boil. Lee and I mingled, meeting each other's guests that we hadn't met yet, and generally having an awesome time.\n\n\"I don't know if it's the booze or what, but your mom sort of hit on me man,\" Mark said at one point.\n\n\"I think you've had a couple too many buddy,\" I said.\n\n\"No, for real man,\" he said. \"She said she used to think about me, back when we were in high school and I used to hang around your house a lot. She said I've 'become a beautiful man' and she'd love it if her dreams came true.\"\n\n\"What the fuck! I think she's had a couple too many!\" I said.\n\n\"Wow! Don't tell me it runs in the family!\" Lee said with a look of happy surprise.\n\nI scanned the crowd looking for my mom and saw her talking to my Aunt Katherine, both of them laughing and looking like they were under control and normal. I looked for my dad and saw him across the room at the dark end of the bar, chatting up Chrissy. She was laughing at something he was saying, his mouth right up against her lovely ear, the two of them standing closer together than they probably should have been, Chrissy looking hotter than anyone in their mid-fifties had a right to. I suddenly realized she and my dad were the same age.\n\nI looked back at my mother just as Aunt Katherine was walking away. Mom stood alone with a drink in her hand, turned toward the band and her body started moving to the groove, shimmying in a way I'd never seen. She suddenly looked twenty years younger, and reminded me of all my other women friends \u2014 a frightening thought.\n\n\"Mom, are you okay?\" I asked when I approached her. \"You're not drinking to much are you?\"\n\n\"No honey I'm fine,\" she said, still shimmying to the beat. \"Just enjoying your beautiful day.\"\n\n\"You need to watch what you say to my friends,\" I said. \"Everybody's had a few, and they might get the wrong idea.\"\n\n\"What wrong idea,\" she said with a smile. \"That I'm not a dried up old hag?\"\n\n\"Mom!\" I said quietly.\n\n\"Your father and I are . . . let's just say we understand. I don't know why I'm worried about shocking you, with all these women of yours here,\" she said.\n\n\"Mom!\" I said again.\n\n\"What honey, you thought I wouldn't know?\" she asked. \"I'm your mother. I know when a woman loves you, and at least a dozen women here love you. And they have no connection to you other than your work, which brought you into their homes. I can put two and two together, after looking into all their beautiful eyes.\"",
        "\"Mom, I . . .\"\n\n\"No need to explain honey,\" she said with a loving smile. \"Contrary to what you might think, your father and I are sexual creatures too you know. I understand. Not only that, I don't think I've ever been prouder of you. To have all these women here with you today, all friends with each other and all beaming with love for you and Lee. You father and I certainly did something right.\"\n\n\"Mom, I don't know what to say,\" I said.\n\n\"Don't say anything honey,\" she said. \"Just don't be surprised when you learn that your father and I are human too.\"\n\nI looked over at my dad as I tried to decipher what my mom seemed to be dancing around, and he was still deep in a smiling conversation with Chrissy. As I looked at her the little black dress vanished and she stood there naked with her hand rubbing the crotch of my fathers pants. I shook my head and they were standing normally again. Maybe it was me who had had a few too many drinks.\n\n\"You look much too serious,\" my mom said as she pushed me away. \"Go! Have fun!\"\n\nI went back to Lee, and within moments my mom was dancing with Ron in the middle of a happy group on the dance floor.\n\n\"My mother just blew my mind,\" I said to Lee. \"I'm definitely not a kid anymore.\"\n\nLee laughed. \"So did she really hit on Mark?\"\n\n\"I think maybe she did,\" I said. \"She didn't go into too many details about she and dad, but she knows about all our women friends here, where they came from. And dad's over there practically making out with Chrissy and mom not only seems cool with it, she's dirty dancing with Ron. My mind is officially blown.\"\n\n\"What's that old saying, the apple doesn't fall far from the tree?\" Lee laughed. \"Come on sweetheart, I want you to meet some friends from the hospital.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nHalf an hour later Lindsey and Julia came over while Lee and I were having a quiet moment.\n\n\"Steve, you parents are a delight,\" Lindsey said. \"Why didn't you ever tell us they're swingers? I would have invited them to the playroom.\"\n\n\"Oh my God!\" Lee said in a near whisper, and I stood silently, unable to speak. \n\nLee tried to muffle a chuckle, but it broke through into a silent belly laugh. I looked at her with big eyes, astonished at what was happening.\n\n\"Apples and trees sweetheart,\" Lee said, still chuckling. \"Apples and trees.\"\n\n\"Don't tell me you didn't know?\" Lindsey said, with a look of happy surprise on her face.\n\n\"Wow,\" Julia said with a smile. \"This is too much! I think I've finally got the perfect erotic story to write. I'll post it on that Literotica website you showed me, right Steve?\"\n\n\"I need a drink,\" I said as all the blood drained out of my face. \"My mother and father? Wow . . .\"\n\n\"I should have known it was genetic,\" Lindsey said. \"You're way to good at this for it to have just sprung out of nowhere. So can I invite them over sometime, or is it to weird for you?\"\n\n\"It's way to weird,\" I said. \"You understand, right?\"\n\n\"Of course sweetheart,\" Lindsey said. \"That father of yours sure is hot though. Be sure and let me know if you change your mind. You might want to mention your discomfort to Chrissy. She and your dad . . . oh, I don't see them, do you? And your mom seems to be missing too.\"\n\n\"Oh my God,\" I said quietly as I scanned the crowd to no avail.\n\n\"Deep breaths baby,\" Lee said, and she kissed me. \"This day's all about love and happiness. You know as well as anyone it can happen lots of different ways. Your mom and dad love each other deeply, anyone can see that.\"\n\n\"Absolutely,\" Lindsey said. \"They're a wonderful couple. You should be very proud of them.\"\n\n\"I am,\" I said. \"It's just a surprise. I'm good though. I need a drink, and I need to dance. You guys in?\"\n\n\"We'll dance with you two any time you want us,\" Julia said.\n\n\"Abso-freakin-lutely,\" Lindsey said. \"Let's get this party rockin.\"\n\nLexie's band was rockin' indeed. She had brought an extra amp and extra electric guitars for Johnny and Marta to play, and they were jamming up a storm, with the Hammond B3 organ driving the groove higher and higher. The dance floor was a frenzy. \n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nLee and I left in a cab three hours later in a shower of rice. We wanted to spend a quiet night alone in the boat cabin, a clean beginning to our new life together. I reclined on the bed while she stripped for me, the hot little wedding dress sliding down her perfect body, showing me that she had worn nothing underneath but a lacy white garter belt holding up her stockings.\n\n\"God you're a sexy little thing,\" I said, chuckling at her boldness.\n\nShe climbed onto the bed on her hands and knees like a cat.\n\n\"And you're a sexy big thing,\" she said as she unfastened my tuxedo pants. \"I'm surprised at your restraint, not fucking me right there on the dance floor or something.\"\n\n\"Oh I wanted to,\" I said, and I moaned as she took my big cock in her mouth. \"If I had known your pussy was naked it would have been a wild scene for sure.\"\n\n\"Does my husband want to fuck me now?\" she asked in a delightful little voice between sucks.\n\n\"I do,\" I said. \"I want to fuck my sexy wife until the end of time.\"\n\nShe straddled my still fully clothed body and lowered her beautiful pussy onto me. My cock swam into her velvety depths, deep into the warm ocean of her soul. We looked into each others eyes and it felt like the first time all over again, an incredibly exciting feeling that washed over us both like warm rain and summer wind. It was the most amazing feeling I had ever had with a woman, a deep interconnected love that tied us to the heavens like a mainline shot of heroin.\n\nWe fucked our brains out that night. There's no better way to put it than that. We were tired when we started, and exhausted halfway through, but we didn't stop. We couldn't stop. It was just to perfect, a night to remember, a night of lovemaking we'll remember for the rest of our lives together.\n\nThe next morning we woke to sunlight streaming though the portlights. We had slept the whole night spooning, just as we were when we had fallen asleep. I slipped my morning wood into Lee's pussy and slowly fucked her.\n\n\"You're insatiable,\" she purred.\n\nQuiet orgasms brought the day into focus, and we snuggled in each others arms for a while, rocked gently by wakes from passing boats. My phone buzzed with a text.\n\n\"Holy shit, it's after noon!\" I said when I looked at it. \"Mark's wondering when we're leaving.\"\n\n\"We're all ready, right?\" Lee said.\n\n\"Yeah, my camp'll be closed up with about a half-hour's work,\" I said. \"Yours too I think. What should I tell him, four o'clock? That'll give us a few hours to say our goodbyes.\"\n\nAn hour later people were showing up in droves to bid us farewell. Mark made a beer run and an impromptu party broke out in the yard of Camp Silver Beaver. At one point I actually looked up toward the heavens and thanked Connie for everything she had done for me\u2014the place I live, the boat I love, and my incredible wife\u2014none of it would be in my life if I hadn't met Connie.\n\n\"I don't know if I should tell you this man, but the party in your parents room at the hotel last night was off the charts,\" Mark said, snapping me out of my sentimental thoughts.\n\nI stood there like a spectator at a car crash, wanting to see, but knowing you probably shouldn't look. Mark could tell I was curious, so he continued.\n\n\"They had a nice big room, and it was rockin' man. Everybody was comin' and goin'. Mostly cummin', if you get my drift,\" he said.\n\n\"I get it,\" I said with an embarrassed smile. \"Please don't tell me you got with my mom.\"\n\n\"No man, I won't,\" he smiled. \"Your Aunt Katherine's got a new hobby though I think. I'm pretty sure she was new to it all.\"\n\n\"Oh my God!\" I said quietly, with my face in my hand.\n\n\"What's the matter sweetheart?\" Lee said as she joined us.\n\n\"Mark's just filling me in on the 'off the charts' party in my parent's room last night,\" I said.\n\n\"Oh no!\" Lee said with a chuckle and a smile. \"Do tell!\"\n\n\"It appears my Aunt Katherine has a new hobby,\" I said embarrassedly.\n\nLee started laughing. \"This is too much! So who was there?\" she asked.\n\n\"Pretty much everybody,\" Mark said. \"It was some wild shit.\"\n\n\"You know, weddings have that effect on people,\" Lee said. \"I guess ours was a good one.\"\n\n\"Best wedding ever,\" Mark said, glancing over at Margie and Bonnie. \"I hope mine's even half as good.\"\n\n\"Dude!\" I said. \"Bonnie?\"\n\n\"Just thinkin' about it,\" he said quietly. \"Is it crazy?\"\n\n\"Hell no it's not crazy!\" I said. \"You guys are awesome together. And think of all the jealous guys at our next reunion when you walk in with her on your arm. Keep me posted all right?\"\n\nI gave Mark a big hug, one of many throughout the gathering that afternoon.\n\nMy mom and dad showed up about an hour before we left, looking sheepish as they walked across the lawn towards Lee and me.\n\n\"No need for that look you guys,\" I said. \"If anybody can appreciate peace and love and naked bodies it's me. It would have been nice if you had eased me into this revelation though.\"\n\n\"Sorry honey,\" my mom said. \"but it's not an easy thing to talk about with your child.\"\n\n\"Tell me about it,\" Lee said sarcastically. \"I'm guessing my girls were there last night.\"\n\n\"They're wonderful young women Lee,\" my mom said, skirting the question nicely. \"You did a marvelous job raising them.\"\n\n\"Please tell me my mother and father weren't there,\" Lee said.\n\n\"No honey,\" My mom said. \"They left right after you did.\"\n\nMom and dad made the rounds, hugging all their new very close friends. Lee and I gathered the last of our provisions for our nine month journey, and we walked around the two camps with Ron and Becka and Emma to make sure everyone was up to speed on looking after the two places.\n\n\"Don't worry buddy,\" Ron said reassuringly. \"It's all cool. We got it handled.\"\n\nAfter giving tours of the boat to those who hadn't seen it, I fired up the big diesel engine and let it warm up. Lee and I stood on deck, looking over all the loving faces that had changed and defined our lives over the last two-and-a-half years.\n\n\"I gotta say,\" I said loudly, \"You're the best friends anybody could ever hope to have. We're gonna miss you guys. We love e-mails and phone calls, and there's spare bunks anytime anybody wants to meet up with us. We'd love it. We'll be in New England for two months, and then south for the winter. Come see us please!\"\n\n\"Thanks for the great send off everybody,\" Lee said. \"We love you!\"\n\nLee hugged her daughters, Ron and Mark untied our lines, I engaged the big propeller and water churned under the big wooden boat. Connie was underway again, and a chorus of goodbyes and a yard full of waving hands sent us on our way.\n\nLast fall when I left on my boat for the first time, I felt like I was starting a new life. This time, with Lee at my side, I well and truly was.\n\nThe End"
    ],
    "authorname": "riverboy",
    "tags": [
        "older woman",
        "younger man",
        "wedding",
        "outdoors"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-handymans-memoir-ch-47"
}