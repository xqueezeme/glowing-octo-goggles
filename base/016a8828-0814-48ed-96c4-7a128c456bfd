{
    "title": "Flower Girl Ch. 04",
    "pages": [
        "A case of nerves combined with sexual tension settled upon Tracy as the cab pulled up in front of an industrial building that had been converted to residential lofts. William put his hand on the Tracy's back and guided the way, even though it was obvious which way to go. \n\nAs he led the way to the front door, it was now Tracy's turn to curious about William's living space. She had a few of her own hang-ups, but they mostly had to do with taste. On the ride up the elevator, she prepared herself for the worst. She didn't think William could not possibly be a slob, but what if his home was clich\u00e9 or gauche? She once met a man she really liked until she saw his apartment which was overly decorated in a Goth manner that resembled a Hollywood set. She smiled at the memory of the tacky apartment, and William, not knowing the reason for her smile did not respond. He was not one to fill in silences; to him they were just another part of the conversation.\n\nWhen he opened the door to his apartment and held it open for Tracy, she entered and almost teased him by speaking her assessment out loud as he had done earlier that morning. Instead she simply stated, \"Very nice place, William. Not what I expected at all.\"\n\n\"Oh?\"\n\n\"Well, no. If asked to predict what your apartment would look like, I would have guessed very modern. Sleek. Minimalism. Your home has a very comfortable and warm feel.\" \n\n\"Why thank you Tracy. I admit I do not have your way with color, but I do feel very comfortable here. \" \n\nWilliam took her purse and sweater and put them on the table, \"What can I get you to drink? Wine?\"\n\n\"That would be really nice, thank you.\" \n\n\"Red or White?\"\n\n\"Red. Do you mind if I check my email? I want to see how the girls did today at work.\"\n\n\"Of course not. You may use my computer if you wish.\"\n\n\"Oh, that's okay. It'll be faster on my phone.\"\n\n\"Then you won't mind if I do some quick reading?\"\n\n\"Of course not,\" Tracy smiled. She wondered if William would always remain so gracious and polite, or if he was merely trying to impress her.\n\nShe surprised William by lying on his couch with her feet propped up on the arm. He was pleased that she felt relaxed enough to do so, and the sight of her crossed ankles was titillating. He picked up the stack of papers from his desk and sat on the chair perpendicular to Tracy.\n\n\"Oh, I didn't mean to hog your whole couch. Please, sit here,\" Tracy said as she kicked off her shoes and bent her legs, turning on her side to make room. William was tickled by how feline she seemed, how comfortable in her own body. And she looked incredibly sexy on her side. The position made her hip curve out and her bent legs made an 'S' shape leading down to her gorgeous ankles. \n\nHe fought the urge to tell her how beautiful she looked on his couch. He felt he had already revealed too much and he was somewhat rattled by the intensity of feeling he was having towards her in such a short time. So, instead he sat down at the end of the couch and stared at the papers in his hands, but he was not reading, he was thinking. He realized most people are not accustomed to a person saying, \"Excuse me for a moment, I would like to think and not talk. I will join you again shortly.\" But that is exactly what he wanted to do. \n\nTracy sent a text to Rachel to make sure everything went well at the shop, but she was also using the opportunity to look around William's apartment. It was tidy and masculine, not overly decorated but with a few pieces of quality furniture. It was decent sized, but the high ceiling made it feel larger. The loft was one narrow rectangular room, so from the couch Tracy could see everything except the bathroom. She could see where he sat, where he ate, and where he slept. The bed was covered in a simple white comforter and pushed up against a brick wall that was painted a dark color with a few areas of red brick showing through where paint had rubbed off. Wood floors contributed to the warm masculine feel, and the neat kitchen with an island for eating made it seem homey. A desk perpendicular to the couch divided the living and sleeping areas.\n\n\"Where are all your books, William?\"\n\nWilliam looked up from his papers and said, \"Excuse me?\"\n\n\"I assumed you would have a lot of books?\"\n\n\"I would if I allowed myself to,\" William laughed. \"I refrain from buying or saving books, although I still have a large collection at my parent's house. I do have a few here, but I keep them in the closet.\"\n\n\"Tell me about them.\"\n\n\"My books or my parents?\"\n\nTracy laughed and said, \"Parents.\"\n\nWilliam said, \"Oh, well my book collection is much more interesting.\"\n\n\"Oh William! That's mean! Are your parents boring?\"\n\n\"Ah, I wouldn't say that, but there is not much to tell. My father is a structural engineer, self-employed so he works from home. My mother was a stay-at-home mom. I have an older sister who remained in St. Charles and I will probably see them all for Thanksgiving. Oh, and my sister is married, with a two-year-old boy and another on the way.\"\n\n\"Are you close with any of them?\"\n\n\"I would say my sister and I are very close. We don't talk very often, but we have a strong bond and understand each other.\"\n\nTracy sensed that he was not that keen to talk about his family, so she asked, \"May I ask what you are reading?'\n\n\"Oh, just a little something by Cami Wright.\" \n\n\"What? You can't read me when I'm sitting right here!\"\n\n\"Why not?\"\n\nTracy pouted and kicked him gently with her foot because she could not come up with a good reason, other than it made her feel self-conscious.\n\n\"So this pen name?\" William asked, \"A flower - a Camellia - and the homonym for 'Write'?\"\n\n\"Oh my god,\" Tracy moaned, \"I am so obvious!\"\n\nWilliam laughed and assured her, \"Most people don't overthink it. I was actually concerned that you would see through my pseudonym when I ordered your flowers.\"\n\n\"Mr. Reed Moore? Oh my god, William, I didn't! Not until I just said it aloud,\" Tracy laughed.\n\n\"Yes, well that is what I mean. Our eyes skip things over in print that we are more likely to catch if spoken aloud.\"\n\n\"Well, Mr. Reed Moore, I am going to let you get back to it and I am going to answer a few emails.\" Tracy grinned and actually sent a text to Beth that read \"On William's couch, trying so hard not to jump his bones. He is irresistible!\"\n\nWith no work drama, an empty wine glass she did not wish to refill too quickly, and William focused on reading, she decided to rest her eyes for a moment. \n\nAndy was completely out of money and unable to see Vera that week. He hated to lie to her, but he told her he was sick, afraid if she knew he had money problems she might give his spot to someone else. He did feel sick at the thought that he would not see her for another week. And then he had to make some tough choices, things like keeping the phone turned on and eating, or seeing Vera. \n\nShe was incredibly sweet on the phone, telling him to get well and come see her next week, and that she was actually going to miss him. She even kept him on the phone for a while, telling him about taking her brother to the doctor and finding out he had developed a kidney stone.\n\nAndy was working at his lousy new job with part-time hours that did not make him any more money than he would make sitting at home collecting unemployment. He still spent his days off looking for work, and hoped that his new employer might offer him more hours, but one of the other part-timers informed him that they never would. They would rather have two part-timers do one job and not have to pay out any benefits. Of course, Andy saw that fact himself, since he was hired to do payroll. Almost three hundred people were on the payroll, and two-thirds of them were part-time. Then Andy had an idea. What if he added someone to the payroll? Like Joe from his previous job. This company was so big and the boss was hardly ever here, so he wouldn't notice \"Joseph Klien\" added to the payroll. One more employee wouldn't raise any red flags. And he could get Joe to split the money with him. \n\nWilliam rose and went into the restroom. He returned wearing a white t-shirt and jeans and for the first time, Tracy could really see the shape of his body, his toned chest and slim abdomen. Seeing that her eyes were opened, he said, \"Hey gorgeous, I meant to ask if you are vegan?\" \n\n\"Nope. A very hungry omnivore,\" Tracy stood and walked over to the counter and to watch as William placed garlic, onions, spinach and oranges on the counter.\n\n\"You cook!\" Tracy exclaimed, with a fretful expression.\n\nWilliam stared at her, not sure what she meant, and she tried to explain, \"You actually cook, William! That is after looking at art all day and reading my writing and buying me flowers, and...and...you were dressed so nice and now you look totally fucking hot in a t-shirt and jeans and now you're cooking for me William! Don't you get it William? You're scaring the hell out of me!\"\n\nA dark cloud crossed over William's face as he realized he had come on too strong, but then he approached her and took her elbows in his hands and tried to put things back in perspective. \"After you have a chance to eat, you will see that my cooking is not that impressive and neither am I.\"\n\n\"Pffft, yeah right,\" Tracy said, although his diffidence lightened her mood.\n\n\"Oh it's true Tracy. I am a complete ass. I even snuck a peak under your dress while you were on my couch. Very sexy panties you have on.\"\n\n\"Liar! I don't even wear underwear,\" she teased back at him.\n\nWilliam still had his hands on her elbows, but at that comment his eyes narrowed and he quickly dropped a hand that went under her dress to feel her butt.\n\n\"Who's the liar!\" he exclaimed, smacking her ass after feeling her panties, then scooted away before she could get a smack back to nonchalantly ask her if she would like a glass of wine while she helped him cook. He had a proud little smirk on his face. Tracy stood stunned with her mouth open and shook her head. It all happened so fast, and then he darted away so quickly\u2014oh, he exasperated her.\n\nWilliam started peeling garlic and then chopping onions before he asked Tracy, \"Would you boil some water? The pot is right there,\" he gestured to the counter top. He didn't really need her help, but he liked working together in the kitchen rather than just being watched. He was thinking about what she said about how the day was too perfect and he was feeling self-conscious about perhaps coming on too strong, but he found cooking very relaxing and was surprised at how comfortable he felt in her presence. \n\nTracy started the water before excusing herself to the bathroom. William thought about the other thing she said; the fact that she called him fucking hot in his t-shirt. He smiled, pleased to hear this because his attraction to her was overwhelming. Everything was going far better than he expected, he was comfortable, yet intensely turned on too. There was ease coupled with tension and this was making him feel hyper-sexual. Almost everything she did oozed sexual connotation, but he wondered if it could be just his perception.\n\n\"Wow, you have a full sized bath tub!\" Tracy exclaimed when she returned. \"Do you have any idea how lucky you are?\"\n\n\"Yes? Well I don't use it much. I mostly shower.\"\n\n\"Oh my god, I would use it every day. You didn't see mine, but it is so short I can't even stretch my legs out all of the way. I would love to stretch out in the warm water. \"\n\n\"Well Tracy, you are more than welcome to use my bathtub.\"\n\nTracy blushed because she wasn't sure if he meant right now, tonight, or anytime. She did kind of put him on the spot and she regretted it. In fact, the thought crossed her mind that now that she was in his apartment, how would she know it is time to leave? She did not want to leave, but worse was the thought that she might overstay her welcome. Would William be too polite to say the date was over? William asked Tracy to drain the pasta, and he set the small table for two.\n\n\"More wine Tracy?\"\n\nTracy was conscious of how much wine she consumed. It had only been one glass so far, so she answered, \"Yes, that would be nice.\" \n\nWilliam poured two glasses and served two plates of pasta. \"This looks and smells fantastic! I didn't realize how hungry I had become.\"\n\nWilliam smiled at her and started eating. He had prepared pasta with chicken, spinach, garlic, onions, garnished with diced oranges. He did not ask her preference, other than to confirm she did not object to eating meat which he could have left out. \n\n\"Wow, you're a really good cook,\" Tracy commented between bites. \n\nWilliam was extremely pleased, not by her compliment, but by her appetite, and she laughed when he told her so. \n\n\"Well yes, I do like to eat.\"\n\n\"My sister suffered from an eating disorder, and I find your appetite extremely refreshing.\"\n\n\"Really? Well yes, I do eat just about anything. Except olives and bivalves.\"\n\nWilliam laughed and said, \"I think that was the influence of your Biology-teacher mother. Most people would simply say 'shell fish'.\"\n\n\"Yes, but that would be misleading, since I love shrimp and lobster. It is the texture of bivalves that I don't like,\" she said, as she ate the last morsel on her plate. \n\n\"Do you want more?\"\n\nTracy laughed and reminded him, \"You said you wanted to hear me say 'more', Mr. Moore.\"\n\n\"Actually, I want to hear you moan it in my ear.\"\n\nTracy laughed and leaned over the table. She put her hand on the back of William's neck, pulled him closer and quietly moaned into his ear, \"Mmmmmmmore, please.\"\n\nShe backed up and flashed a sexy smile, but William was not smiling. He wore an intense predatory expression that made her shiver, and then he stood and came to her side of the table and pulled her up to standing. He took off her glasses and placed them on the table, pulling her close with one arm and while he used the other hand to lightly touch her face, tracing the orbitals of her eyes, the place where her glasses had just been. He traced over her eyebrow, down around her eye, across her cheek bone, then slowly to her bottom lip, focusing on his fingers the entire time, as if he was studying and memorizing her face. \n\nHer hands gently rested on his shoulders and felt she might pass out from anticipation. His patience was driving her mad for she had never wanted to be kissed by anyone this much, ever. Yet she half expected him to pull away, for he seemed to love teasing her. His thumb gently rubbed her bottom lip as he studied her mouth. She wanted to bite that thumb and devour him, but she waited patiently until he looked her in the eyes, then back to her lips like he just came back from somewhere else in his mind. His eyes closed. \n\nShe felt weak in the knees and thought she might fall if it weren't for his firm grip around her waist, and then she felt it; the gentle touch of lips. She willed him not pull away again, not to tease her or torture her any longer. He didn't pull away. With his hand still on her face, his lips parted and his tongue came out to invite hers out to meet. She greeted his tongue gently with hers, and they both retreated back to their own mouths, but then came out to meet again, gingerly, softly rubbing into each other, then becoming more daring, circling and caressing each other. The kiss grew in passion and intensity as his hand slid down to her bottom and pulled her in closer. She completely lost herself in the kiss, giving in to desire, unconscious of any urge to regain composure. \n\nWilliam released her and backed up to look at her face. She was panting, and flushed, with a fire in her eyes. His lust matched hers, but he took a deep breath before stepping back towards her. He placed both hands on the sides of her face, met her forehead with his and remained there for a moment, foreheads united and both looking at the ground. Her hands found his waistband and pulled him in close, creating full body contact. \"Fuck, William,\" she whispered.\n\n\"I know,\" he whispered back, \"that...was...intense.\"\n\nTracy allowed her hands to wander up his back, underneath his t-shirt, feeling the warmth of his skin. William's hand slid up her leg and massaged the back of her thigh as his mouth found her neck.\n\n\"William?\" she whispered.\n\n\"Yes?\"\n\n\"Can I take a bath?\"\n\nWilliam laughed and said, \"Of course you can.\" He kissed her near her temple and held on to her for a moment, before releasing her and saying, \"Of course you can take a bath Tracy. I'll get you everything you need.\"\n\nAs he turned to go to the bathroom and Tracy watched him. She felt like a wild cat wanting to pounce, but she needed to catch her breath and gather her senses. William started the water, and then went to the closet, back to the bathroom again, and then he came out and approached her. She had not moved from that spot. He took her hand and walked her into the bathroom where the tub was full of water and burning candles glowed. \n\n\"I'm sorry I don't have any bubble bath.\"\n\n\"Oh, I don't need it. It dries out my skin anyway.\"\n\n\"Well, here are some towels, one of my t-shirts if you want it. Or my robe is hanging here on the back of the door, in case you don't want to put your dress back on.\"\n\n\"Thank you,\" she said. She was staring straight ahead.\n\n\"Are you okay, Tracy?\"\n\n\"Fuck yes,\" she said in a dead pan voice.\n\nWilliam laughed and left her to bathe.\n\nTracy wanted to be alone with her thoughts for a moment and this gave her the chance. She undressed and sat down in the warm water to have a talk with herself, but she imagined she was talking to Beth about how her \"three date rule\" didn't apply in this situation. The average date is three to four hours and we have been together for nearly twelve hours, so that is equivalent to three dates, she reasoned. But it wasn't just that. She wanted William. She wanted him more than anyone she had ever wanted before. But she didn't want to just have sex with him. She was feeling things she couldn't sort out in her own mind, things that conflicted with her idea of herself as a feminist. She wanted to offer herself to him and let him have his way with her. It did not feel wrong. Going home felt wrong, felt very wrong, in spite of her self-imposed rules for dating. But this wasn't dating; this was experiencing passion at a level she had only dreamt off. She remembered her grandmother telling her to test the soil, but she also remembered her saying don't fuck up a free lunch. Tracy made a conscious decision to tune out her catholic-girl mind; it was not invited to this party. Tracy was going to listen to her body, not her head.\n\nShe stood and dried herself off, but did not put her clothes back on. She did not put on William's robe or his t-shirt. She walked out of the bathroom with just a towel covering the front of her body.\n\nWilliam sat on the couch with a reading lamp on and a book in his hands, classical music playing softly in the background.\n\n\"William.\"\n\nHe looked up and saw her standing nude but holding a towel.\n\n\"I thought I would show you my tattoos.\"\n\nWilliam smiled a very sexy grin and put the book down. \"Show me.\"\n\nShe kept eye contact and walked to where he was sitting, \"Well, you've seen the flowers on my arm. This one hanging in front of my shoulder is wisteria,\" she purred, moving the towel over to reveal the outer curve of her breast, but not her nipple. \"And this pink one,\" she said, lifting her arm, \"Ranunculus.\" William traced the flower with his finger very lightly and repeated, \"Ranunculus.\"\n\nThe flowers that followed the outer curve of her breast were different daisies, then under her breast, \"Roses, of course,\" moving the towel over further but still covering most of her front side. \"Of course,\" William echoed, still admiring the flowers and tracing them with his finger. \"Peony, poppy, petunia,\" Tracy recited as he leaned forward and to gently kiss the three p's that wrapped from the front to the back. She turned so that her side was presented to him. \"Lily, jasmine, tulip,\" she went on as he kissed each one slowly. ",
        "\"Gardenia, um, camellia,\" Tracy panted through ragged breath and turned completely as his lips paused at the pink camellia, then he backed up to look where he had just kissed. She shivered before continuing the tour that now had him at the back of her hip and there was only one more; a round, dark flower. \"And dahlia. The Arabian dahlia.\" Tracy was now standing with her back to William, her entire backside bare for him to view. He touched the Arabian dahlia at the top of her butt cheek and traced a circle around it with his forefinger. It was a very dark purple, with a touch of yellow and lime green highlights. William gently kissed the dahlia, and then backed up to look at Tracy's beautiful long body, and the display of artful flowers. \n\n\"Absolutely stunning. I now have a second favorite flower,\" William said.\n\n\"The Dahlia?\" Tracy whispered. \"Then what is your favorite?\"\n\nWilliam put his hands on her hips and turned her around. He gently pulled her by the arm so that she was on the couch, then leaned over and kissed her mouth passionately, pushing her on to her back. The towel was still between them, but then William sat back up and lifted it and tossed it aside. A split second of self-consciousness passed over her, as she was lying nude on the couch while William was still dressed, but the adoring look in his eyes erased any feeling of awkwardness. She felt beautiful under his gaze. \n\nWilliam looked down at the narrow trimmed strip of hair that led between her legs and allowed his fingers to drag from the side of her body, over her hip down to the apex between her legs. \"This is my favorite flower,\" he whispered as his fingers gently traced the hair down. His hand continued to move down past her sex, down her thigh to her knee. He stopped and wrapped a hand around her ankle and pulled it up towards them, causing her knee to bend. \"I'm so pleased you didn't remove this piece of jewelry. It has been driving me out of my mind all day long,\" he said. He closed the gap between his mouth and her ankle.\n\nTracy shuddered. His patience was completely disarming. Just when she thought he would move in a linear fashion, he completely caught her off guard and did something unexpected. He was driving her mad as he continued to kiss around her ankle, and then very slowly kissed his way down the inside of her calf. She watched in amazement, in awe of his patience. He paused when he reached her knee and looked up at her expectant face, then smiling, drew back to admire her body, her pale skin, the little strip of hair, and the breasts she probably considered too small but he thought were perfect. Dark little nipples begged for his attention, as her chest rose and fell with each breath. Her long graceful neck led up to a defiant little chin. And those lips. Those moist, full, heart shaped lips that were parted. Her lids were heavy and she stared at him with hunger as William pulled his shirt off and watched her eyes narrow even more. \n\nHe moved his gaze between her legs and began to gently tickle the highest point of her inner thighs, and then traced her lips with his fingertips, noting her wetness. He began to play with her, to explore the folds, first with his fingers, then with his mouth. He kissed around, and then licked her, a long slow lick from bottom to top. He heard her gasp as he increased the firmness of his licks, then he slowed and inserted a finger into her tight wet hole. \"Mmmmmm.\" It was he that moaned as he slid his finger back out and inserted a second digit. He watched his fingers disappear inside her, then slide out wet. She was slick and hot and as much as he wanted to be inside of her, he was completely mesmerized by her body and wanted to know her completely, like an explorer finally on the shores of a beautiful beach, knowing there was a whole island to explore, but content to enjoy the feel of sand in his toes, or pussy on his lips.\n\nHe began light licks around her clit, and then paused long enough to look up at her and saw that her eyes were still open and she wore an expression of amazement. He had to kiss her.\n\nWilliam stood up and unbuttoned his jeans which had become incredibly uncomfortable and watched Tracy's reaction as he stepped out of his pants. She bit her lip and her fists were clenched as if she were trying to restrain herself. He returned to his knees between her legs and leaned over to kiss her. He did not linger at her mouth, instead he went down to her neck to kiss her more, while putting his hand back between her legs and rubbing the front of her mound with his palm. Two fingers found a spot on her inner wall that caused her to pant in his ear. Then he slowed. He heard her whisper \"more,\" but he maintained his slow pace and brought his mouth down to her pert nipple and sucked firmly. Hearing \"more\" again, he increased his tempo and pressure very slightly. Ah, how he loved her body, not only for how it looked, but for how she responded to his touch. He knew he could easily make her cum, but he wanted to play with her longer. \"More,\" she whispered again, and William whispered, \"Patience, Kitten.\" \n\n\"You're driving me crazy!\" she moaned. William smiled with a nipple between his teeth, for this was exactly what he wanted; to drive her to the very edge of insanity and then catch her before she plummeted over the side. \"Please,\" she whimpered. Her voice moved him so that he gave her what he had already learned she loved; firm rhythmic nipple sucking, two fingers moving inside, lying on top of her and applying pressure to her clit with his palm until she cried out and squeezed her legs around his hand, grabbed his wrist, pulled his hair and jolted several times. His fingers felt her clamp down over and over and her pleasure brought him more satisfaction than he anticipated. As the twitching ceased, she made a sound like a feline growl, then shuddered, and held him close as her breathing gradually returned to normal.\n\nOvercome with emotion and vulnerability in her post-orgasmic state, Tracy remained quiet. The combination of feelings and emotions were so contrary that she didn't trust herself to speak. She felt satiated and turned on at the same time. And completely naked, as she was. William just made her cum with his hand and she was embarrassed to admit, no one else had ever done that to her before. She was used to being the one in power, the sexy one, the seductress, but it was obvious that William had more sexual experience than her and it made her feel very insecure.\n\nAnd here he was lying next to her, stroking her skin gently, like he doesn't even need to cum himself? Yet she could feel his hardness pushing into her thigh at that moment and had even noticed a wet spot of precum. How was he so cool and reserved? She remembered what her Nana had said, \"Interested without urgency.\" William was unlike any man she had ever known.\n\n\"Is it obvious how much I adore your body?\" he asked.\n\n\"Yes and no. You scare me, William.\"\n\nWilliam felt disappointed. He had come on too strong and she was getting cold feet is what he thought, so he apologized, \"I didn't mean to make you feel uncomfortable, Tracy.\"\n\n\"Uncomfortable? Are you fucking kidding me? You just made me cum and ...I feel really embarrassed right now.\"\n\nWilliam quickly propped up on his elbow to look at her and say, \"Why? Why would you feel embarrassed by that?\"\n\n\"I don't know,\" Tracy spoke slowly. \"I lost control. I am not used to that. I feel like the less experienced person here and ...it scares me. If you can make me feel that intense...well, it makes me feel like you have a lot of power over me.\"\n\nWilliam laughed in a reassuring way and said, \"Tracy, do you remember when I first met you at the library? How I stuttered and stammered and could not get my words out?\"\n\n\"Yes,\"\n\n\"Well you scare the hell out of me too. And you are not a scary person, but ... I knew I was meeting someone extraordinary and I didn't know if I was ready. But as I got to know you I was completely drawn in by how warm and genuine you are. I could not pass up the chance to know you. I am very attracted to you, you must know that.\"\n\n\"Yes, but you were attracted by my writing too. It must have given the impression that I have a lot of sexual experience?\"\n\n\"No, it didn't actually. Your writing reveals a charming level of naivet\u00e9.\"\n\n\"What!?!\"\n\nWilliam laughed and said, \"Don't be offended. You write a forty-three year old hooker beautifully, but not as one who has been tarnished by the experience. And your exploration of BSDM does not make you sound phony, but curious. What your writing does reveal is that you are a playful, curious, and passionate woman. You are not judgmental, but you believe sex is a very bonding experience. Both of your hookers form strong connections with one john in particular. That says quite a lot about you.\"\n\n\"Wow,\" Tracy conceded, \"you really know how to read between the lines.\"\n\n\"Yes. And so I was not worried about being able to satisfy you physically, if you could let yourself relax with me, and you have. I have been so incredibly aroused by you all day. You have had such a confidence around me that is an incredible turn on. Do you know some people find me intimidating?\"\n\nTracy laughed and said, \"Nooooo,\" in mock tone.\n\n\"Well I'm sure you hear it too. Yet I feel very comfortable around you, aside from having to hide my hard on throughout the day.\"\n\n\"Really?\" Tracy smiled, \"I got you hard at the museum? I wish I would have known that!\" Her demeanor had changed and she was sitting up, with a playful sparkle in her eyes.\n\n\"Oh really, why?\"\n\n\"Because I would have loved to make it even harder,\" she whispered and began kissing William's beard. \"I would have rubbed my ass into you every chance I got. And then I would have pulled you into a doorway where no one was looking and stroked you through your pants like this.\"\n\n\"Really? Like that?\"\n\nWilliam then surrendered his body to Tracy, and allowed himself to be her plaything as she explored his chest with her mouth while stroking his cock gently, and when her mouth paused at his nipple, his cock twitched which she took as an invitation to play with his nipples. William placed a hand firmly on the back of her head as he realized she was getting turned on by playing with his nipples. She sucked firmly and tightened her grip around his cock. Her mouth rose to find his and her bare chest rubbed into his, gentle nipple rubbing on nipple that sent a current down to his cock and caused it to twitch. She kissed him over and over, and stroked his cock for so long that he had just accepted this was as far as she was willing to take it, when she suddenly stood up and asked, \"Can we move this party to the bed?\"\n\n\"Of course,\" William said as he followed her, and then she stood next to the bed and gestured with her hand for him to lie down. As he lay down on his back, Tracy crawled on her hands and knees up to him in a way that confirmed his feline impression and pretended she was about to kiss him, but didn't. She stopped right in front of his mouth, then with full eye contact, crawled back until her mouth was right above his very hard cock. He felt her hot breath on him. Then she licked him.\n\nTracy was extremely pleased when William shuddered for it gave her confidence that she could bring him such pleasure. And then there was the matter of the gorgeous cock that she now held firmly in her hand. There was a glistening drop of precum on the head, which Tracy greedily lapped up before deftly lowering her mouth on his long shaft. She brought him close to the edge and he was in ecstasy, but would not cum. When he got close, he gently pulled her up for a kiss, and then let her go back down. She tried to emulate his patience, but realized he was the master of self-control. \n\n\"Don't you want to come?\" she asked after the third kiss-full interruption.\n\n\"Do you want me to?\"\n\n\"Yes!\"\n\n\"In your mouth?\"\n\nTracy paused and looked at him and said, \"Yes please.\"\n\n\"Okay Kitten, but you must understand that I have a two-to-one policy.\" \n\n\"You can explain that later,\" Tracy replied, and then gave one of her sexy smiles as she lowered herself back down. This this time William gently held her jaw and guided himself in and out of her mouth, marveling at how beautiful she could look even in this position, and how erotic her lips looked and felt. He let himself go this time, allowing himself to plunge over the edge of ecstasy. His cock throbbed in her hand and she squeezed firmer as his orgasm rippled out of him and surged into her mouth. She did not back off and milked every drop from his shaft, marveling that he was still semi-hard. Only when she was sure that she had every drop did she raise her mouth and smiled at his cock rather than his face.\n\nShe crawled up the bed and faced him, obviously very pleased with herself. \"Thank you,\" she said, grinning. \n\n\"Thank me?\" William laughed.\n\n\"Yes, for relaxing with me and letting me be the sexy one, although you were obviously very much in control.\"\n\nWilliam laughed shook his head, \"You are too much, Tracy. You are always the sexy one.\"\n\nTracy placed her head on his shoulder as he wrapped his arm around her and kissed her head. They were quiet for a moment, then Tracy said, \"I really enjoy being with you William.\" She was running her hand over his chest, marveling at what a fantastic body he had. Long, lean, muscular, with just the right amount of hair trickling down his chest and becoming a row down the center of his abdomen. \"You are not what I expected at all.\"\n\n\"Oh?\"\n\n\"Yes, well...you came across as so intellectual, yet you are so sweet and easy to be with. You excite me and calm me down at the same time. This day has been incredible.\"\n\nWilliam was quiet and Tracy wondered if she said something wrong. After a few moments of silence, she looked him in the face and gave him and inquisitive look. \"Don't go home!\" He blurted out, looking momentarily vulnerable. \n\nTracy smiled reassuringly, \"I wasn't planning on it! I want to spend the night with you!\"\n\n\"Good. I got worried that you were thinking of leaving and I still need to teach you about the two-to-one ratio,\" William laughed and pulled her on top of him. \"The gentleman code, making double sure your woman is satisfied.\"\n\nTracy's eyes got big as she realized what he meant and her lips curled up in a sexy expectant smile. \n\n\"I need your cooperation,\" he said. \"I need you to crawl up here and sit on my face.\"\n\n\"What!\"\n\n\"You heard me Kitten, get up here. I've been thinking about this all day.\"\n\n\"You have? All day? At the museum?\"\n\n\"Yes, except when I was thinking about biting your ankles.\"\n\nA low sexy laugh escaped her lips, \"Oh my god, William. Wow. You are blowing my mind. How could I say no to you?\"\n\n\"Don't. Get up here.\"\n\nTracy let out a sigh and kissed him first, and then, still feeling self-conscious, crawled up over his face but did not lower herself. William admired the view and used his fingers to explore her until Tracy could no longer hold out and lowered herself down on his mouth and from that angle she could feel his beard on her inner thighs, something she had already fantasized about several times. William had a hand on her butt and was licking her and then gently sucking on her clit in a slow rhythmic manner until Tracy said, \"oh my god, William,\" and it didn't take long until she once again lost control and threw her head back as she clutched her own breast and William pulled her down by the hips and tasted her increased wetness, his own cock very much awake again as he stroked himself to the rhythm of her pulsating muscle contractions until they subsided and she lifted her leg over him and giggled.\n\nLying on her back, looking at the ceiling, Tracy panted, \"Oh my.\" He was looking innocent except for his shiny beard and that made her laugh, \"What am I going to do with you?\"\n\n\"Pretty much whatever you want,\" he admitted.\n\nHe pulled her close and they both giggled into the others' necks in blissful contentedness, speaking in whisper tones, and laughing before finally settling into a comfortable silence.\n\nWilliam remained on his side looking at Tracy as she rolled on to her back and stared at the ceiling. He could not believe his good fortune. Of course he had wondered what she would be like, but she exceeded his imagination and was full of surprises too. She looked so confident and in control, strutting through the library in her red boots with attitude for days. But it was this side, this playful, sweet, affectionate kitten-quality that was melting his heart. And turning him on. \n\nHis gaze followed his hand as he stroked her pale skin, gliding down the trail of flowers. He admired her long legs and wished for a moment she had not tattooed her thigh. It was different than the flowers in that it almost seemed like a sticker placed on her upper right thigh, where the flowers followed her curves. At least it wasn't too big, but what a shame to alter these beautiful legs in any way. He ran his finger along that tattoo, marveling that he could feel it, like a scar. Then he admired her breasts, and allowed his fingers to trail each, circling her areola, watching it change shape in reaction to his touch. Tracy turned on her head and looked at him with a shy grin, as she let her own hand wander. \n\nShe looked like she was about to say something, so William kissed her in recognition of her tendency to get to cerebral when the situation did not call for it. Her expression was revealing, but after a sweet gentle kiss, it changed from affection to lust. If there was any doubt or if the look on her face had been misleading, the action of her hand grasping his hardness would have made it clear. She stroked him with a ferocity that implied intention, and he knew that she wanted him.\n\nRather than interrupt the moment with a discussion, William simply reached into the nightstand to retrieve a condom, and heard her let out a little whimper. It almost made William want to draw this out even longer, but in truth, he was also very anxious to be inside her. After rolling the condom onto himself, he rolled over on top of Tracy. It was time. She looked up at him expectantly as he positioned himself between her legs and placed himself at her entrance, and then paused before entering her with one very slow but complete stroke that caused her to make a sound that was half giggle, half growl. Gently stroking her face with his beard, he pulled out almost completely before sliding into her again. Tracy gasped and wrapped her legs around him.\n\nWilliam felt overwhelmed at just how amazing she felt. He had entered a warm and tight cocoon and enjoyed the sensation of just slowly moving around inside of her, feeling every side with himself, rubbing and stroking her on the inside and reveling in how she responded. Moving with him, hips undulating in response to the tempo he set, they rocked together slowly. William was grateful for the condom, although he usually hated them, there was just enough reduction in sensation to keep him from being overwhelmed, and he wanted to enjoy this coupling with Tracy for a long time. Sliding in and out, gently, he noticed that she was moving more from the bottom. He slowed and kissed her passionately, open mouth, tongues yearning, hands stroking, hips thrusting. Tracy's hands roamed across his back and when he stroked her face, she turned her head and began sucking his fingertips.\n\nThis caused William's throbbing cock to twitch in response and Tracy began a sideways movement with her hips. She was sucking on his fingers with increased velocity and bucking her hips now, and William understood she was rubbing her g-spot on the upper base of his cock, so he repositioned himself slightly to provide more pressure. Tracy began moaning, with his fingers still in her mouth, not wanting to let go of his hand, his butt, or his cock which she now squeezed with her pulsating pussy. Her teeth came down on his fingers, just distracting enough but not overly painful, as he felt Tracy climax, and jolt, her back arching as her body became tense. He was hypnotized by the sensation as he felt her orgasm, shudder, and finally relax. But he was not done with her.",
        "Her climax caused him to slow momentarily, and then with her increased wetness and relaxed state, William allowed himself to become temporarily selfish and plunge into her with a strength and force that caused her to squeal. He drove into her at a rate that drove him to the very edge of climax, and then he slowed again.\n\nTracy looked at him with big eyes and he knew she had not experienced this level of control from a lover before, and it made him want to please her even more. He pulled all the way out of her and turned her over. Tracy made a tiny squeal noise again, barely discernable, but was grinning as she was all too compliant, pulling up her knees with her chest still on the bed, presenting her precious pussy to him from behind. He could have cum at that moment, with his dick in his own hand, seeing Tracy on her knees like that. But he entered her again and she felt so tight he was overcome, but so was she. The little minx was already wiggling back into him and pulsating on the inside so that when he felt her cum again, he allowed himself to completely release and ride out his very long orgasm inside of her, spurting again, and again, and again, until he felt the last pulse of cum leaving his body. He still had his hand on her hip, but very carefully pulled out, keeping one hand on the condom, and removed it before collapsing on the bed next to her. \n\nTracy was on her stomach, looking at William in amazement. He smiled at her, and then pushed her on her side to hug and hold her from behind. He kissed her shoulder and wanted to say something about how he felt, but did not want to overwhelm her, so he gently stroked her arm, while staying in contact with the entire back side of her body. \n\n\"This is the best first date ever,\" she said, almost as if thinking aloud.\n\n\"The best ever,\" William agreed. \n\nShe brought his hand under his arm and to her mouth and kissed it. \"Sorry I bit you.\"\n\nWilliam laughed, \"It's perfectly okay, Kitten. You were in the throes of passion.\" He nuzzled his nose into the back of her hair. \"And so was I.\" He kissed her neck again, and she relaxed into his arms but felt too wound up to go to sleep, but also self-conscious about talking too much, especially after sex, so it surprised her when William asked, \"Will you tell me about this ex-boyfriend? The one who lacked appreciation for beautiful works of art?\" \n\nTracy laughed and said, \"Oh, that was Kevin. We were together for three years. We even lived together for the last two.\"\n\n\"It must have been serious then. What happened?\"\n\n\"Well,\" Tracy said, \"I met Kevin when I was still in school and things started out great, but we wanted different things out of life. We were good friends and hardly fought, but our relationship lacked passion and, well...the worst thing for me was when I finally decided I wanted to break up, he didn't even put a fight up about it. He just said, 'Okay Tracy, I want you to be happy' and we had the most undramatic break up you can imagine.\"\n\n\"Hmmm,\" He was running his fingers through her silky hair, \"Go on.\"\n\n\"Well, it made me so mad because it was really hard for me to muster up the courage to break up with him and he was so nonchalant about it. I couldn't believe he was so passive about my leaving and it infuriated me that he was okay with it. I mean, why didn't he break up? He was lazy, that's why. The only hard part about disentangling our lives was deciding who would get the cat. I let Kevin keep Hemingway.\"\n\n\"And why did you let Kevin keep the feline Hemingway?\"\n\n\"I don't know. I guess at the time I did feel guilty that I was the one instigating the break up. Plus, I didn't want to allow him to visit the cat and wonder if he wanted to see me or the cat. I don't know, does that even make sense?\"\n\n\"Yes. It does.\"\n\n\"I miss Hemingway sometimes.\"\n\n\"And Kevin?\"\n\n\"Well, sort of, at weird times. I mean, we were good friends more than anything else, but when we broke up we took off in opposite directions. Kind of a rubber band effect, like we had been holding each other back in some way and we shot off in different directions. He went back to playing in a band and partying, I opened up Petals.\"\n\n\"Ah...and since then? Other boyfriends?\"\n\n\"Well, that was two years ago. I have dated since then. The longest was for four months, but...that didn't work out. What about you?\"\n\n\"I have had a few long term relationships, a lot of meaningless sex, and for the past year, neither.\"\n\n\"Really?\" Tracy rolled over to see his face, \"No dates for a year?\"\n\n\"I've had dates, but no sex for over a year. Until today.\"\n\n\"Wow,\" Tracy said and her mind was busy processing this. \"Why?\" \n\n\"I've had a few bad experiences. Stalkers. I don't know why I have attracted a few women with obsessive natures, but I have. My friend John attributes it to my aloof nature, that I am an enigma and I make women crazy.\"\n\n\"Well if you did to them what you just did to me in bed, it is your own damn fault. I think you've made me crazy.\"\n\nWilliam laughed and said, \"One was a woman I dated for a while, the other one I never slept with, therefore, the situation cannot be blamed on my sexual prowess. Besides, what we just experienced was extraordinary for me too. You sparked my desire in a way that borders on excruciating.\"\n\nTracy turned her head and grinned at him and said, \"So I make you extra sexy, huh?\"\n\n\"You do. You inspire me.\" William grinned at her, \"In fact, I am getting inspired right now,\" he said, referring to his hardening member pressing on her back side.\n\n\"I can feel that Mr. 'More'. And you are inspiring me in turn.\" Tracy giggled and rolled on top of him for another sweet, slow, lovemaking session that left her limping to the restroom afterwards, before she came back and flopped on the bed and fell into a deep sleep in William's arms."
    ],
    "authorname": "DonnaBeck",
    "tags": [
        "romance",
        "romantic love",
        "romantic sex",
        "first time",
        "fellatio",
        "oral sex",
        "librarian",
        "writer"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/flower-girl-ch-04"
}