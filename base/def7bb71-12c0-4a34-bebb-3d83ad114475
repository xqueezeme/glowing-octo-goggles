{
    "title": "Showing Myself Ch. 03",
    "pages": [
        "Thank you for the comments. Some people gave suggestions for the story, but you have to remember I am just writing what happened, not a piece of fiction. If I'm not sexy enough, then look elsewhere. :) Also, some people asked how I am now and what I do to satisfy my cravings. As I mentioned, I am just a regular person, but I still need to satisfy myself several times a day. I do this alone or have my husband take care of me, and I take care of him whenever he asks. Sometimes if we are not having real sex, I perform oral on him, or just stroke him while we watch tv, or ask him to masturbate for me. Or sometimes I'll just lean against the countertop in the kitchen while he is having coffee in the morning, and masturbate casually while talking. Sometimes he films me or us (he has dozens of movies), but I think I like it more than he does. :) He knows how I am and doesn't complain.\n\nAnyway, as the summer wound down, I would alternate between Renate's store and Andrea's theater. Not only did I enjoy the erotic play, but I truly liked them both. And, I know Andrea liked me more than a friend, and even though I would not get physical with her, I didn't mind when we would greet with a warm hug and she would maybe pull me a little closer or let her hands linger a little longer than two girlfriends normally would. Having had kind of a sheltered, innocent life before, she was the first lesbian I had ever known, and it sometimes made me tingly to know she was looking at me sexually when I approached. It's different from the way men look at me, but I can't explain it. And the nicest thing about Andrea and Renate is that they fully understood and indulged me, and above all protected me. Although people are more easy going in Europe, I have no doubts at all that they would know how to deal with anyone who threatened or bothered me. I can't describe the feeling of knowing I could do what I did without worrying about a thing.\n\nI went to each place for different reasons. At Renate's, I would go just for the pure lust of men watching me while I teased them. Often I would just masturbate while watching the screen as though I was the only one in the theater, knowing they were staring. Other times, I encouraged them to stand as a group and focus on me as I watched them orgasm. I knew I had the power, and I really enjoyed it. If you only knew how many orgasms I had there! I also discovered a way to make myself able to orgasm several times. When I arrived, I would often undress in Renate's shop and go into the theater completely naked while Renate kept my clothes downstairs. That way, after I teased myself to an orgasm, I wouldn't immediately have the nerve to walk down through the lobby again. But by the time I calmed down, I didn't want to leave anymore and would start masturbating again. Sometimes I spent all afternoon like this, with each orgasm being more intense than the previous. \n\nAt Andrea's, I went for different excitement. Although in two summers I never saw another woman at Renate's, I saw many at Andrea's. Obviously some were her friends (I would tell you about them, but this story is about me :) ), but many male-female couples came there too. Renate's was more for the business man who was coming in at lunchtime, whereas Andrea's was more of an erotic getaway, as she explained it. \n\nOne day, Andrea said she wanted to show me a different place, and that I should wait for her at a little coffee house nearby while she arranged for someone to cover for her. After we met, we walked to another adult place across the street, and although by then I had considered myself an expert at exhibitionism and voyeurism, I didn't expect this. It was a large building that had a large theater on the top floor, a smaller theater on the second, and a stage with booths on the first. \n\nShe wanted to show me around, and we first went to the large theater. The lobby was all red velvet and very nice. In the theater, at the front of the screen, there was kind of a stage where a stripper would come out between movies and perform for a few minutes, and there were perhaps one hundred seats. On the second floor, there was another small theater, similar to the small theater Andrea had. \n\nOn the first floor, it was something new, at least to me. There was a round room, surrounded by small booths with windows, and inside the room was a rotating platform where nude women would show themselves to the men. The men put money in the slots, and the window would open for a little while. Andrea told me that although she would love to keep me all to herself, she knew I could have fun here. She introduced me to the manager, and they spoke for a while. She then told me that she had explained everything about me to him, and that he should let me indulge myself. She explained that his place is a little different, in that he has girls working there and they might resent a pretty young girl coming in to play for free, but Andrea told him I was very nice and would make sure I wasn't a bother.\n\nThe first thing we did was go into the back room where the girls were waiting to take their turn on that rotating platform. They were of different ages, and all were quite attractive. The younger ones spoke English, and I told them I just wanted to see how it worked. She said bluntly, \"It's easy. We go in, take our clothes off, spread our legs, and the men masturbate.\" They took turns all day, spending about five minutes out there each time. Andrea told me I could watch from the little entryway to the stage and see exactly what they meant. She also smiled and said she doubted she could ever get me out of there again after I saw. At first the girls were afraid that I was going to be an additional girl, which would mean they would make less money, but I assured them I had no interest in money.\n\nWe went over, and it was exactly how they described it- a girl was on her knees, rubbing her breasts, and there were several windows open with men obviously masturbating as she revolved around. Oh, how I envied her! I asked Andrea if the girls also liked doing this, and she laughed and said for the most part they were very bored. It was just a job for them, whereas I did it for the sexual excitement. An announcement came up on the speaker that I didn't understand, but I soon saw it meant that the girls were switching, and the girl that was on the platform stood and put on her robe as another girl entered. The new girl dropped her robe, laid down, and spread her legs. Immediately windows started opening, since the men were waiting for a new girl. Honestly, I was so wet, and I told Andrea as much. She said she knew me better than I knew myself, which is why she brought me here. \n\nWe went back in where the girls were, and she told them something in German, and they kind of nodded and shook their shoulders in agreement. She explained that she had just told them that I was a very wild exhibitionist (gee, thanks Andrea!), and would gladly take the place of any girl that wanted to have a break, and that I wanted no money. She also said she would tell this to the manager to make sure it was ok, and also to tell him to warn me if any Americans came in, although that was unlikely during the day. I told her that I really liked the idea, but that these girls were so beautiful and the men paying money would be disappointed in me. Andrea laughed and said I had no idea how sensual I was. We agreed that I would come back the next day and spend some time with the girls and I could do what felt comfortable.\n\nWe then went back to the big theater on the top floor. In the lobby there was a real bar, and Andrea talked to the bartender, and she introduced him to me. By now I knew she had just told him all about me (can you imagine that in a regular setting? \"Oh, this is Jennifer, she has a strong exhibitionism fetish and thrives on public masturbation\"), and we walked into the theater for a peek. We had timed it right, because the movie was just ending. As usual, the lights came on a little bit, and the men waited. Then, the music came on and a nude dancer strolled in, walking back and forth across the stage. Andrea and I were sitting in the front row, and the dancer noticed us and raised her eyebrows and smiled. Andrea asked me, \"Do you see the difference between you and her?\", and I immediately knew what she meant. This girl wasn't feeling the lust I did, and it showed. She was just acting, and although I'm sure the men liked looking at her, it was nothing like looking at me. Already I was planning a trip up here if Andrea would come with me. She had to get back to her place, so we left, agreeing that we could come back tomorrow.\n\nThe next day, Andrea once again brought over to the new place. The first thing I wanted to do was go back to that theater on the top floor. Because I had never played there before and it was a man running it, I asked Andrea to stay me for a while if she could. She agreed, she had some words with the bartender, and we walked in. I chose to sit in the back row so I could get used to it, and we settled in our seats while the men's eyes followed us through the room. Once my eyes adjusted to the darkness, I saw that there were at least 25 men scattered through the theater. Some were masturbating, but the rest were just there to see the stripper at intermission I think. Again, the people who came here came for a different reason than at Renate's or Andrea's, and the good thing is that everyone would be new and few would recognize me. Just the thought that I would soon be looking at the surprised looks of the men made me so wet. I turned towards Andrea, stood, and pulled my dress over my head, telling her I felt warm. The bra and panties soon followed, and Andrea tucked my things in her bag. By now, three or four men had noticed me, and their eyes latched onto the naked woman whispering to her female friend, probably wondering what was up. Andrea then said something that nearly made me orgasm right there- she said, \"I have to go back now. I'll take your clothes with me and come back later, and I'll tell the dancer to expect to see a beautiful woman sitting in the front row waiting for her.\" Before I could say anything, she stood and walked away, taking my clothes with her, smiling.\n\nSo here I was, in a new place I had never been before, completely nude except for my sandals, sitting among a large group of men. I started my routine of sliding down into my seat and spreading my ankles apart so I would be exposed, and let the tips of my fingers start to explore. I stared straight at the screen, occasionally glancing around to see one man after another gradually notice me until nearly all were either staring or regularly looking to see what I was doing. I can only say that this is one of the most exciting times I had had so far, and I knew that I wanted one strong orgasm right away. I put my feet up on the seats in front of me, and let my hand slide briskly through my wetness. This time I wasn't interested in teasing myself, and I think it was because Andrea had taken my clothing and I had no place to go anyway. If I still wasn't so unsure about this place, I would have gone down to the front and displayed myself to everyone, but instead I stayed where I was, with one hand flailing wildly and the other pinching one of my nipples. Finally I felt it coming on, and my body shuddered over and over. I had had fantastic orgasms before, but that was one of the best. \n\nI put my feet back down, and I could see that many more men now were masturbating, not even trying to hide it. One came over to sit near me, but just like the other places, all I had to do was wave him off. I leaned back and just ran my hands over my body a little bit, and kind of wished Andrea hadn't left. But shortly the urge set in again, and I stood, and strolled down to the front, with eyes all over me. I found a seat right in the middle of the front row, and just sat there twirling the brown hair between my legs. Another man came towards me and I told him in English that he can only watch me. He spoke perfect English and said ok, but asked if it would be ok if he sat a few seats away and pleasured himself. I told him I love it when men do that, and he can tell the others what the limits are if he wants. Soon I was surrounded by about a dozen men that were sitting on either side of me and behind me, most of them masturbating, until the credits came on for the movie which signaled that the dancer would be coming out soon. The men quickly zipped up, as though they were afraid of being caught, but I had no idea who would even care what happened in there. \n\nAs the lights came on and the music started, the dancer strolled in. She saw me surrounded by all of those men, and said, \"Ahh, you are the girl I was told about. It looks like you have made some friends\", and laughed. I told her, \"Yes, it seems they like me. Do you mind that I sit here like this?\" She replied that she didn't mind at all, and it's a nice change. She started moving her hips and rubbing her body just like I always did, but she didn't masturbate. I suppose that would be against the rules, plus this was her job. But that didn't stop me, as I was excited watching another woman show off without the men being allowed to touch. I let my finger slide gently through my wet lips, and then brought them to my other lips to taste myself. I asked if it would be ok if the men satisfied themselves too, and she said something in German which caused at least ten of them to stand and pull their cocks out. It was just so amazing and funny how much power two young women could have! I told her to tell them they weren't allowed to orgasm yet, because I had some things I wanted to do first. She explained it to them, and they all smiled and nodded.\n\nThe music ended, and the woman came over and told me to have fun, and left. After a few minutes, the movie started again, and true to my word, I wanted to give the men something to see. Honestly, I had never been so aggressive before, but this time it felt right. I stood, turned my back to the screen, and sat down on the walkway that the dancer used. It was about three feet high, giving everyone a good view. Raising my knees, I laid back, continuing to masturbate. I told the one that spoke English to tell everyone that they could come closer as long as they didn't touch or cum on me. Soon, there was a group huddled around me, most of them with their hands sliding back and forth over their cocks. True to their word, they behaved and orgasmed one by one. By this time, although I had seen so many cocks and so many orgasms over the last couple of months, I was still amazed at how they were all so different. Some cocks were small but produced a lot of cum, and some were very large and produced just a little. But they all seemed happy when they were done. \n\nBy now I had been there over two hours, and I looked up to see Andrea walking in. She said, \"Well, I see you have made yourself comfortable\", and sat down in the front row too. Immediately the men started asking her questions, and she then told me they were asking if she and I were going to play together, but she told them as much as she wishes that would happen, I just like to play by myself. I devilishly told her she could show herself too, but she said she had no interest in men looking at her. I told her I was ready to leave anytime, since I wanted to relax at her theater for a while. I just pulled by dress over my head without the bra and panties, and we left together, waving to the smiling bartender in the lobby. It was only a short walk across the street, but it still felt exciting to be walking out in public with just a thin layer of cotton between me and the eyes of the men glancing at us.\n\nIn fact, it made me so excited that I pulled the dress off the moment I walked through the door to Andrea's lobby, not even caring anymore. Of course, it never occurred to me that she couldn't just leave her theater alone, and a friend of hers I had never met before was standing at the counter watching over things as we strolled in. It's kind of funny though, after so many times masturbating in full view of crowds of people, being naked in a more normal setting where I was to be introduced to a new friend was more embarrassing. But Anja, Andrea's friend, said she was pleased to meet me and said I wasn't half as strange as a lot of people who came in. In a way, I was glad to hear that because I didn't really think I was kinky, although I can imagine some people would think so. It turned out that she had studied in England and spoke perfect English, and was also a lesbian like Andrea, but they were never lovers. \n\nAnja and I took seats in the little lobby, and we talked about where I had traveled, what I liked to do in my spare time, and other normal things. Of course, I was still nude, but by then it was so natural for me and I appeared fully at ease, but on the inside I was still so excited knowing that she was glancing at my curves and soft skin. I asked her about what kind of kinky things she has seen, and she laughed and said it wouldn't interest me at all and anything I would enjoy would happen in good time. She then asked if I ever was in a threesome, and I told her the closest I had come was in the theater with that couple a few weeks ago, and that I actually had never even been touched by any person, ever. \n\nShe then told me to come back on Friday, and I would be able to see someone really kinky. I told her I never come at night, but she said it would happen in the early afternoon. She wouldn't tell me what to expect, but did say she wouldn't be surprised if I was excited by it. I said I would be there, but then something else occurred to me- I turned to Andrea and said, \"You know that couple I met here? She said I could call her and she would help me buy some new clothes, something sexy like she had. I feel so boring, and would like to wear something new on Friday. She said you have her number?\" She laughed and replied, \"Oh, and once you call, what will you say to her? Monika doesn't speak English very well, you know.\" So, I had Andrea call her then and there, and I arranged to meet Monika in two days, on a Thursday. \n\nBy then I was deciding what to do with the rest of the day. Although I had already masturbated several times, the visit across the street really had me worked up. You probably know by now that I had (and have) a ferocious sexual appetite, and it was normal for me to masturbate when I awoke, showered, went to bed, or just went to my room to read. You would think I would be the type of girl that also was very promiscuous, but as I said, I was still a virgin at the time. But no one could masturbate better than me. :) \n\nSo, I asked Andrea if anyone was in the theater. She looked through the viewing hole where the projector was, and said there was one younger man, about 20 years old, sitting in the middle. I asked if he was stroking himself, and she said she thought so. I didn't want to shock him, so I slipped my dress on again, and walked in the theater, pretending that it was too dark to see anyone.\n\nI strolled down to the same row he was in and sat three seats away, not looking at him. His hands were very still, folded across his lap, obviously hiding his open pants. I could see him glance over to me from the corner of my eye, and I reached up and unbuttoned the top button of my dress and slid my hand in to fondle my breast. I then looked toward him and acted shocked, saying \"Oh, I'm sorry! I didn't see you! Wait, do you speak English?\" He was nervous, but nodded his head, saying, \"Yes, a little\". \n\nI told him he could sit beside me if he didn't touch me, and he slid over. His pants were open, but he was no longer hard, but that would change. I told him that I just came there to visit my friend in the lobby, and that I came in the theater sometimes just to relax. He said he did the same, so I asked him if he ever masturbates there. He nodded, and I told him I did too, and asked if he would mind if I did it right now.",
        "I don't think he could believe his luck, and he of course nodded that I could. I stood and pulled my dress off once again, leaving myself completely naked, and told him I would place my clothes down at the front out of the way. I walked down the aisle and back again, and sat next to him. I placed my hands under my breasts, pushing them up, squeezing my nipples. I told him that if I was nude, then he had to undress also. He seemed very hesitant, so I told him that I would ask my friend if it was ok, but he said, \"No, don't tell her, I'll do it\". He peeled off his clothes, and placed them next to his chair. By then I was really in the mood to tease, so I said, \"No, take them down front where mine are. If someone comes in, I don't want to have you getting dressed while I'm naked here all alone\". \n\nHe did as he was told, and then came back and sat next to me. I told him again that he couldn't touch me, and he was ok with that. I told him to take his cock in his hand and make it hard, and he started stroking it. I spread my legs apart and started feeling myself, and I could see his cock growing harder and larger. I asked him if he minded if I told him what to do, and he shook his head, saying he didn't mind. I said, \"Ok, then you will stop stroking when I tell you to. I want you to enjoy this as long as I do\".\n\nI don't think he quite understood, but after a couple of minutes I told him to stop, and to take his hand off himself. I slid further down in the seat, lifting my lower half off the seat slightly as my fingers slid back and forth through my wetness. I then told him to start again, but that he couldn't cum until I told him he could. After a couple of minutes more, I told him to stop again. This time he moaned, clutching the arms of the seat. I brought my wet fingers to my lips as he watched, and his hard cock pulsed up and down waiting for more attention. \n\nI then told him to stand in front of me, and to start stroking while watching me, and if he did exactly as I said, maybe I would let him give me instructions too. He stood and started stroking, but much too fast. I didn't want him to cum yet, so I said, \"No, much slower. Bring your hand way back, stop, and then way forward again. Very slowly. I'll do the same.\" I let my fingers slid back and forth over myself, also slowly. I seemed in control on the outside, but I was beside myself in lust on the inside.\n\nSo, I asked him, \"Is there anything that you want me to do? Remember, I won't touch you and you won't touch me.\" He asked if he could kneel down and look closer, and I nodded. He knelt down, and then asked me to rest my legs on the arms of the seats to expose myself even more. I did as he told, and he then asked me to slide my fingers deep inside. I usually don't do that, preferring to stimulate myself on the outside, but he had been so good that I wanted to please him. So I pushed two fingers inside, moving them in and out, asking him if he wished that was him sliding in and out.\n\nI heard talking in the lobby, and I told him \"Someone will be coming in, but pretend we are still alone. Andrea knows me well and doesn't care. Whoever comes in may want to watch, and that's ok, but ignore them. If you do this, then we can meet here again sometime.\" What could he do but just nod in agreement?\n\nWe continued as we were doing, and the door creaked open, letting some light from the lobby seep in. He stayed on his knees, slowly moving his hand back and forth, watching my hand pleasure myself. Neither of us looked at the visitor, but we heard him pull a seat down some rows behind us, trying not to make a sound.\n\nI told my new friend to sit beside me again and slide down in the seat like me. Again, I cautioned him to stroke only very slowly, and to make his cock stand straight and hard for me. I asked him all kinds of questions, like if he masturbates often, where and when, if he has ever met anyone like me, if he is having fun, and things like that. I was also making him start and stop, as it made me excited to see his cock standing straight up, pulsing back and forth while begging for release.\n\nI knew we both wanted to cum soon, so I asked him if he usually produced a lot of semen. He said that sometimes he did, and I told him that I was sure he would produce a lot this time. I also said I'm sure he would love to stand in front of me and cum on me, but not this time. Instead, I told him I wanted to see it spray on his bare chest, and I would masturbate and cum at the same time. And, he was now allowed to stroke any way he wanted to make himself cum.\n\nHe started stroking harder, and I told him to tell me when he was close. He nodded, and within ten seconds he said \"Now!\", and his hand stopped. His cum erupted over and over, even hitting himself on his cheek, his cock pulsing each time. My hand started flailing away as well, and within seconds my nipples grew hard and I was shuddering in an explosive orgasm for about the fourth time that day!\n\nAs we calmed down, he seemed a little unsure about what just happened. I told him if I was his girlfriend, I would be licking his cheek right now, but that he would have to take care of it himself this time. He stood, with his cum running in little streams down his chest and belly, and I told him to follow me. Not saying a word, he followed me to the door, but hesitated when he saw that I was going to walk into the lobby. I grabbed his hand and pulled him and said, \"Come on. It's ok.\" I saw Andrea and told her that he did a very good job but needed to clean up. She said something to him and he walked to the men's room, and then she told me that she had just told him that he was one of the very lucky ones. \n\nI smiled and went back into the theater, pulling my dress back on. By the time he came from the restroom, I was leaving the theater and I told him that we would surely meet again, and thank you. I took my bra and panties from Andrea and put them in my bag, excited to be riding the tram home in such a state.\n\nI will close this for now, and if you like, I'll continue it with the final part. "
    ],
    "authorname": "IndianaWoman",
    "tags": [
        "public",
        "exhibitionist"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/showing-myself-ch-03"
}