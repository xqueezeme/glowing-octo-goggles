{
    "title": "High Stakes, Hard Sell Ch. 06",
    "pages": [
        "Author's note:\n\nAllow me to present the sixth chapter in this series, a little delayed but a longer chapter than usual to compensate. I'd intended this to be the final chapter but there will be an epilogue in a couple of weeks for anyone still interested. Many thanks to the readers who have taken the time to read the story, and to those who have encouraged me with their votes, comments and emails. Reader response is one of the best parts about writing a story and you folks have been really fantastic so THANK YOU! Also, the esteemed author karaline has patiently and insightfully provided her feedback and editing, ruthlessly hunting down every unnecessary adverb she could find (although a few snuck back in stealthily and sneakily after she was done). Many thanks, karaline, I'm in your debt!\n\nThis is a story about fictional adults in a consenting relationship.\n\n*****\n\nJane lay in a hospital bed. The dopey peace of the painkillers had faded she was starting to feel the full after-effects of the appendectomy. She'd have to buzz the nurse for more drugs.\n\nThey'd told her she was lucky her appendix had only perforated and not burst. The open surgery and clean up of her insides had gone well. Even the ugly incision on her abdomen would eventually fade into a thin white line. They'd keep her for another day to be sure there was no issue with the wound, then send her home.\n\nShe didn't feel lucky, just numb. And lurking beneath that numbness lay a growing sense of horror. The curse was in its final stages, ripping chunks out of her body, taking her a piece at a time. She'd be dead by spring, eight days away, unless she could find a way to wipe away the stain of a terrible betrayal and five years of indifference. \n\n'Regain the trust most cruelly betrayed or die before spring'. That's what the old lady had said when she'd uttered the curse.\n\nAnd Jane had tried. Over the past month she'd tried every angle she could think of, every trick, every tactic. She'd made progress; Mike was warming to her again and the spark between them was still there, promising to flare into the passionate love they'd once shared. But the sins of the past remained, making a full reconciliation challenging. \n\nOr maybe impossible. Maybe it couldn't happen. Maybe some bonds, once broken, were forever irreparable. Maybe the upcoming week would be her last.\n\n\"Hey.\" Mike poked his head in through the privacy curtain that surrounded her recovery bed. His voice was low; she shared the room with three other people who didn't want to be disturbed.\n\n\"Hey,\" she said, giving him a grateful smile. He'd stayed with her the whole night after she'd been admitted, Nessa sleeping on his lap. He'd been there when she'd woken after the surgery and stayed with her most of the day and part of that night, even though she'd been too doped up to supply much in the way of conversation. She was glad to see him again, but concerned, too. \"Where's Nessa?\"\n\n\"At her friend's house. The mother said she could watch Nessa until three.\"\n\n\"You should be training. Your fight's in less than a week.\"\n\nHe shrugged, then pulled a chair close to the head of her bed and sat down. \"The nurse says you can have coffee. Want me to make a run to the cafeteria?\"\n\n\"I was just about to buzz for more drugs.\"\n\nHe nodded, then stood. \"That's a good idea. Get some sleep. They're saying you'll be discharged tomorrow.\"\n\n\"Wait...stay a while?\"\n\n\"I don't want you in pain.\"\n\n\"It's manageable. Your company would make me feel better than the drugs, I think.\"\n\nHe smiled, then reclaimed his chair.\n\n\"I don't know any jokes appropriate for a hospital recovery room,\" he said.\n\n\"It hurts to laugh anyway.\"\n\nHe held her hand and squeezed. They passed some time in silence. \n\n\"How freaked out is Nessa?\" Jane asked.\n\n\"She's handling it. I told her you got sick, now you're in the hospital getting better. She gets it.\"\n\n\"I should have done a better job.\"\n\n\"She's fine.\"\n\n\"I didn't want to let you down.\"\n\n\"You didn't. You kept her safe and healthy. It's all good,\" he said.\n\n\"I'm relieved.\"\n\nThere was a pause.\n\n\"Janey, I think you should let your sister know you're here.\"\n\n\"No.\"\n\n\"She'd want to know.\"\n\n\"I don't want her to know. She'd find some way to blame you,\" Jane said.\n\n\"For appendicitis? Even Betty wouldn't go that far.\"\n\n\"I can't trust her.\"\n\nHe sighed. \"I won't say anything if you don't want me to, but I'd like you to at least consider it.\"\n\n\"I appreciate you keeping it to yourself,\" she said.\n\n\"In that case, we need to talk about the next couple of weeks. The doc said you need to be careful - no lifting, no exertion. Probably wouldn't hurt to have someone else around in case there are problems.\"\n\nHow awful would it be to spend her final week alone in her apartment, waiting to die? She shuddered.\n\n\"You could stay with us, but a lumpy, old couch probably isn't the most comfortable arrangement for you...\"\n\n\"I'll take it, and thank you. I really don't want to be alone.\"\n\n\"Well, Nessa still has to go to school, and I still need to get to the gym, but at least there would be someone there in the evenings.\"\n\n\"We might have to modify our deal,\" she said. \"I won't be scrubbing any floors or carrying any laundry for a couple of weeks.\"\n\n\"It was fun while it lasted. Guess I'm back to being Mr. Mom.\"\n\nHis tone was lighthearted but Jane realized how disastrous her position was. Her final week - the week where she should be making a strong push and working hard to close the deal - she'd be lying on the couch uselessly, watching Mike do all the housework. Not only useless but actually burdensome. How could she demonstrate her trustworthiness when she couldn't even get off the couch? \n\nEven the sex option was off the table - the doctor had been clear about it. Nothing strenuous meant NOTHING strenuous. During the most important week of her life she'd be a sexless blob on Mike's couch. She wouldn't even be able to shower or wash her hair.\n\n\"No, seriously, Mike. We can extend the deal by a few more weeks. When I'm better I'll more than live up to my end. Make up for lost time, you know?\"\n\n\"The focus right now is on you getting better. Forget about the deal. I'll accept a cash settlement instead.\" \n\n\"Will you take a personal cheque?\"\n\nHe chuckled and gave her hand another squeeze. She'd been right; his warmth felt better than codeine. She felt a sleepy wave wash over her.\n\n\"You've got four or five hours. Get to the gym. The fight's on Friday and you're an underdog as it is,\" she said.\n\nPerhaps hearing the fatigue in her voice he stood up and put the chair back. She was drifting when she felt him lean in close and kiss her forehead. It brought a smile despite her distress. He really was better than drugs.\n\n**\n\nEarly Monday afternoon Mike picked her up from the hospital in her own car. Getting from the hospital-supplied wheelchair into the passenger seat of her car was agonizing - it felt like someone kicked her in the stomach. The fact that her left ankle and right wrist were still sprained and mostly useless didn't help matters. She was a basket case.\n\nAt his building he carried her from curbside up three flights of stairs to his apartment. Even with his powerful physique he was trembling and winded by the time he set her gently on the old couch.\n\n\"Do that four or five times and call it your workout for the day,\" she said, gingerly re-positioning her hips to find a comfortable posture. \n\n\"I figured you'd be lighter with no appendix,\" he said, gasping for air. \"Do you need anything? Water? Coffee?\" He got the fleece comforter and draped it over her legs.\n\n\"I'm good for now. I'll snap my fingers when I need service.\"\n\n\"You'd better be a generous tipper.\"\n\n\"No joking, Mike, I hope you realize how much this means to me. I don't know if I can ever thank you enough.\"\n\n\"No problem. What are friends for?'\n\n\"Friends?\" The word startled her - were they friends? His assessment left her feeling both hopeful and strangely unsatisfied, even if it was better than she deserved.\n\n\"Too much?\" he asked, reading her expression. \n\n\"No...not at all. I'll take it, happily. Friends with benefits, right?\"\n\nHe grinned and her spirits soared. Maybe there was still a chance.\n\n\"Do you need anything from your apartment? You know...clothes or female things?\"\n\n\"Maybe I could get you to swing by there tomorrow when Nessa's at school? I can't wear these clothes for a whole week.\"\n\n\"The car will make it easier to do a grocery run, too. For now, I've got to return some calls. Promotion stuff for the fight.\"\n\nHe turned to leave and she grabbed his hand. \"Could we talk a bit more?\" She knew she sounded needy but she was past caring. \n\n\"Sure. What's on your mind?\" He sat on the edge of the couch.\n\n\"Well, it's March thirteenth. Spring is only a week away.\"\n\n\"You're worried about your curse?\" There was no mockery in his voice and she was grateful for that.\n\n\"The last few days demonstrate that I've still got a ways to go to earn your trust.\"\n\n\"Janey, this wasn't a curse. It was appendicitis. It's common.\"\n\n\"You know I'm completely at your mercy here, Mike. I will literally do anything you say if it means helping you trust me again.\"\n\n\"I do trust you. I left you with Nessa, right?\"\n\n\"And it was a disaster!\"\n\n\"Why? Because you got sick? How is that your fault? Besides, Nessa ended up safe and healthy, so you did fine.\"\n\n\"There's got to be something more I can do. Can you think of anything? Anything?\" Her voice was going shrill and she tried to regain control.\n\n\"Okay, relax a second. Take a breath. Let's just talk...figure this out,\" he said.\n\n\"Maybe...maybe a punishment of some kind?\"\n\n\"What?\"\n\n\"To make things even, I mean. You could...punish me. I'd do it willingly - anything you said.\" Her deep blush was impossible to hide. To even suggest such a thing...\n\n\"I don't want that. I never wanted that.\"\n\n\"I mean, I hurt you bad, humiliated you, right? Maybe if you did the same to me?\"\n\n\"I did punch you, remember?\"\n\n\"Maybe that didn't do it. Maybe it wasn't enough?\"\n\n\"No. Absolutely not.\"\n\n\"Then what? Just name it. Even if you think it's a long shot, I'll do it.\" This wasn't sales anymore, not negotiation - it was shameless grovelling. Jane tried to reign in her panic but wasn't able to shake the sense of impending doom.\n\n\"Sit back. You're supposed to be relaxing.\"\n\nShe felt frustrated tears welling up and she willed them away. She didn't need his pity, she needed his trust. \n\n\"I hope you understand...you don't need to be shy about asking for things or making demands. Don't hold back just because you're a nice guy.\"\n\nHe rose form the couch and pulled a chair up, then sat facing her. He leaned forward and looked at her. His expression had gone serious.\n\n\"Tell me why you betrayed me the way you did,\" he said.\n\nThis again? She looked away. \"I told you - I was protecting you.\"\n\n\"From who?\"\n\n\"I'd rather just leave this in the past, Mike.\"\n\nHe leaned back in the chair. \"If you don't want to tell me, I won't insist. But this question isn't going away. It's always going to be there, standing between us.\"\n\nShe was silent a few moments. The significance of his words wasn't lost on her. \"Even if I explained it, you wouldn't understand.\"\n\n\"I'm not stupid, you know.\"\n\n\"I don't mean it like that. It's just...you're wired differently. It wouldn't make sense to you.\"\n\n\"How about you try?\"\n\n\"Okay,\" she said, then paused, trying to arrange her scattered thoughts into a coherent explanation. She'd never tried to relate the concept to anyone before. Where to begin? \n\n\"Love creates a powerful bond. You'd agree with that?\" she said.\n\n\"Yeah, of course.\"\n\n\"Whose responsibility is it to keep that bond strong?\"\n\nHe paused. \"I guess both people are responsible. It takes two, right?\"\n\n\"I agree. And since both people share the responsibility for keeping it strong, both people are responsible when the bond weakens or breaks, right?\"\n\n\"Well...\"\n\n\"Maybe they're not equally responsible when things go bad, but each person bears some portion of the responsibility. Are you with me so far?\"\n\n\"Yeah...I suppose it makes sense.\"\n\n\"And if we're both responsible when the bond is broken then we're both responsible for the consequences that directly result from that. Maybe not equally responsible, but each person bears some responsibility, right? Some percentage of the blame for the consequences?\"\n\n\"What consequences?\"\n\n\"Well, like you hitting me for example. That was a consequence of me ruining our relationship - breaking that bond.\"\n\nHe was quiet for half a minute, thinking through her words.\n\n\"So because we were both responsible for our bond, you were partially responsible for me punching you when the bond was broken? That doesn't sound right.\"\n\n\"Because you can't accept that hitting me was an emotionally valid response to the collapse of our love. A collapse that was entirely my fault.\"\n\n\"Hitting you was wrong.\"\n\n\"I didn't say it was right; I said it was an emotionally valid response.\"\n\n\"You weren't at fault for me hitting you.\"\n\n\"Yes, I was,\" she said in a patient voice. \"Not completely, but a large part of the blame was mine.\"\n\n\"No. People are responsible for their own actions,\" he said.\n\n\"People share responsibility for maintaining a loving bond, and they share the blame for what happens when that bond is broken,\" she said.\n\n\"I can't accept that.\"\n\n\"I told you you'd never understand. You're blinded by rationality and can't see that humans are emotional creatures first and foremost. You'd be a terrible salesperson.\" She smiled sadly. It had been her best attempt to explain, but not good enough.\n\nMike stood up as if to pace, then thought better of it and resumed his seat. \n\n\"Okay, let's pretend I agree with you, just for the time being. That doesn't explain why you did what you did - why you destroyed our relationship.\"\n\n\"I was protecting you.\"\n\n\"That doesn't make any more sense than the first time you said it.\"\n\nShe looked down and fidgeted with the edge of the comforter. The tears came and this time she didn't try to hold them in; it was going to be that kind of conversation. \n\n\"My mom killed my dad.\"\n\nHer words hung thick in the air, choking the conversation for at least a full minute. She could feel Mike's eyes on her but he was quiet, doubtless lacking a response for her revelation. She sobbed but didn't look up. The tears felt hot on her cheeks. Hearing the words aloud - even in her own voice - had been wrenching.\n\n\"But...how? What happened?\" He leaned forward and grasped her hand but she yanked it back. She didn't want to be comforted or consoled. She fought to steady her voice.\n\n\"They were in love. For seventeen years they were inseparable, but mom suddenly decided she wanted more. Dad was blindsided when she filed for separation. She started seeing other people right away. Dad hung himself in the garage. I was fourteen.\"\n\n\"I'm sorry,\" he said. What else was there to say?\n\n\"I hate her for what she did. I swore I'd never do that to anyone - make them love me and then destroy them. For a long time it was easy - meet a new guy, go on a few dates, end it before he could fall in love. Everyone had fun, no one got hurt. A couple of guys would get clingy and make it awkward but cheating on them was a good way to break things off nice and clean. I didn't want to run the risk of ruining them completely.\"\n\n\"Janey, I don't think...\"\n\n\"But then YOU had to come along and screw everything up,\" she said, giving a laugh that ended in a whimper. She wiped away tears with the back of her hand.\n\n\"What did I do?\"\n\nShe continued to worry the comforter with her fingers, determined not to meet his eyes. \n\n\"I knew I was in love with you by the end of our second date. It was unexpected. It felt so good - I didn't want it to stop. I kept hoping it would get stale and we'd drift apart but it just got better and better. I could see you were falling for me too...and I knew I needed to break it off...but I was so happy when I was with you. So I kept putting it off, delaying the inevitable. We were practically living together and I still couldn't find the will to end it. I knew it was wrong, Mike - I knew the longer it went on the more dangerous it became. But I was so selfish...selfish and happy.\"\n\n\"You were entitled to be happy.\"\n\n\"Not at your expense. Not at the risk of killing you. Anyway, I stumbled on the engagement ring while putting away your laundry. I was horrified. I knew then I'd let it go too far - way too far. You were in love with me and I had the power to ruin you. It was a terrible realization.\"\n\n\"Or we could have had a happy life together. Wasn't that an option?\" Mike said.\n\n\"But we were young, Mike. I was starting a career and so much about the future was uncertain. I couldn't guarantee my feelings for you would last, and if they didn't you might have ended up dead. It wasn't worth the risk.\"\n\n\"So to protect me, you cheated.\"\n\n\"I cheated...then rubbed your face in it. I wanted it to hurt as much as possible. I wanted you to be furious with me, to hate me with every cell in your body.\"\n\n\"Why?\"\n\n\"Because...\" Her voice broke and she had to start again. \"Because anger is safe. Angry people don't kill themselves - only depressed people do. If you were angry at me, you'd have a reason to live. So I made sure you were angrier than you'd ever been. I made you hate me. I didn't want you end up like dad.\"\n\n\"Janey, that's crazy!\"\n\n\"And it worked. You survived, you fought through. Now you've got Nessa and you're building a great life here. In the end, my mistake didn't cost you too much.\"\n\n\"You think because I didn't kill myself it means you were right to do what you did?\"\n\n\"I'm sure of it.\"\n\n\"Bullshit. How can you be sure?\"\n\n\"Because...a few years later I saw you were on the fighting circuit again, doing okay, so I figured maybe I'd been wrong. You'd survived, so maybe my dad had been a one-off, a tragic fluke. Maybe I could enjoy love and not worry about the consequences. I met this musician, Pierto. He was fun and there was a spark so I decided to go all-in. I wanted what I'd had with you, that same feeling.\"\n\n\"Good.\"\n\n\"Not good. The feeling wasn't the same. He was nice and we got along well but he didn't make me feel the way you did. Not even close. We'd only been dating a few months when I tried to break it off. He pursued me...wouldn't take 'no' for an answer.\"\n\n\"So you cheated.\"\n\nShe nodded and sniffed. \"But Pierto didn't get angry - he didn't have that temperament. He tried to kill himself...like dad...and it was MY fault. I was right all along. Love leads to ruin.\"\n\n\"That wasn't your fault. He made his own choices.\"\n\n\"And we're back to the beginning again,\" Jane said. \"With you being Mr. Rational and failing to see how people truly are.\"\n\nHe took a breath and exhaled loudly.\n\n\"Love doesn't lead to ruin. Thousands...millions...of people are in loving relationships. They can't all be idiots.\"\n\n\"Some of them are ignorant of the risks. Some know the risks but choose to minimize them, or rationalize, or delude themselves into thinking they're immune to destruction. Some are just selfish, like I was, and want happiness regardless of the cost.\"\n\n\"I was in love with you. Which category was I in?\"\n\nShe knew she was walking into a verbal trap, but forced herself to answer anyway. \"You didn't see the risks. You were completely unguarded. That's why I needed to protect you.\"\n\n\"That wasn't your choice to make!\"\n\n\"Yes it was. Love gave me the right to make that choice.\"\n\n\"Janey...\" he started, then stopped and shook his head. \"Well, now I know, at least.\" He stood, and she couldn't tell from his sour expression if he was frustrated or angry. \"I need to get Nessa.\"\n\n\"You've got more than an hour,\" she said. Had she pushed it too far? Had she set them back again, so close to the deadline?",
        "\"I'll get a brisk run in first. Clear my head. Make some calls.\"\n\n\"I can pick up Nessa. I've got the car.\" She realized immediately she'd never be able to act on her offer. She couldn't even stand without assistance.\n\n\"It's okay. The doc says you should rest, so rest. I'll be back soon.\"\n\n\"I'm sorry, Mike. I didn't mean to...\"\n\n\"Don't be sorry. I asked for the truth and you gave it to me. That's what I wanted, right?\" \n\nShe didn't know what to say to make him stay. She struggled in agony to get up off the couch. She got her feet under her just as the door banged closed behind him.\n\n**\n\nHe returned late with Nessa and an armload of groceries. Mike made the dinners while Nessa consumed Jane's attention with questions. Was Jane okay? Could Nessa see the bandage? Did they give her ice cream at the hospital? \n\nJane answered as patiently as she could, while keeping a surreptitious eye on Mike, trying to gauge his mood. He didn't seem angry. Distracted, maybe. Distant. That alarmed her. She needed him close, now more than ever. \n\nDinner was lively, with Nessa supplying the conversation as Mike and Jane took turns indulging her. Jane ate on the couch, and afterwards she watched a movie and read a picture book with Nessa as Mike did the dishes and cleaned up. \n\nAfter he'd bathed Nessa and put her to bed, he returned to the living room and began picking up the toys and clothes that littered floor.\n\n\"So...you've been quiet,\" she said, deciding to ease into the conversation.\n\n\"Just trying to figure things out. Figure YOU out.\"\n\n\"Do you want me to leave? I'd understand.\"\n\nHe forced a smile. \"You're fine where you are.\"\n\n\"Are you angry with me?\"\n\nHe sat on the couch next to her, then surprised her by taking her hand in his.\n\n\"Confused. Conflicted, maybe. But not angry.\"\n\n\"I'm sorry. How do I make this better?\"\n\n\"You've already made it better. It was good to hear your side of it, even if it was insane and stupid.\"\n\n\"You're the only one I've ever told. Even my sister doesn't know.\"\n\nThey sat in silence for a few minutes. He stroked the back of her hand idly with his thumb - the gesture seemed oddly intimate.\n\n\"What will you do when you beat the curse?\"\n\nShe was grateful he'd said 'when' and not 'if'. She didn't share his confidence - she could still feel the weight of the curse upon her.\n\n\"To be honest I hadn't thought about it. Go back to work, I guess. I had three or four deals on the go when I took my leave. They might still be salvageable.\"\n\n\"Going to patch things up with Betty?\"\n\n\"No.\"\n\n\"No? She's your sister.\"\n\n\"Bottom line, I can't trust her. She had no right to make decisions on my behalf or treat me like I was mentally incompetent. She didn't even apologize - she still thinks she's right.\"\n\nHe paused. \"So you're pissed because she treated you the same way you treated me back then?\"\n\n\"That's not the same thing at all,\" Jane said, though her voice lacked conviction.\n\n\"Look on the bright side. She broke your sisterly bond. Now you can punch her and it'll be her fault, according to your logic,\" he said.\n\n\"How is that the 'bright side'?\"\n\nHe laughed. His thumb continued to caress her knuckles and the contact reassured her. She sighed heavily and turned to face him.\n\n\"I'm sorry for everything, Mike. And I'm not just saying that because of the curse. Making you hate me was the most painful thing I've ever done.\"\n\n\"And you didn't even succeed.\"\n\n\"What?\"\n\n\"You failed. I never hated you.\"\n\n\"Come on. I saw the look in your eyes back then...when we fought.\"\n\n\"That was anger.\"\n\n\"It did a good impersonation of hate, then.\"\n\nHe shook his head. \"Anger.\"\n\n\"What makes you so sure?\"\n\n\"Because it faded,\" he said, meeting her eyes. \"And because most of my memories of those days are good ones. I don't think hate works like that.\"\n\nThey sat quietly for a while. He continued to hold her hand.\n\n\"Are we still friends?\" Jane asked. \n\n\"Are you going to forgive your sister?\" Mike countered.\n\n\"Doubtful. Well...perhaps. Maybe.\"\n\nHe smiled at her stubbornness. \"We're friends.\"\n\n\"Thanks. My offer still stands, by the way. If you can think of anything I can do for you, name it.\"\n\nThere was a longer silence.\n\n\"I'm going to need someone to look after Nessa this Friday when I'm fighting. Probably all day Friday, maybe into Saturday morning. If I get injured, might be late Saturday or even Sunday before I get back. Do you think you'll feel up to it by Friday?\" \n\n\"After what happened last time, maybe Gina would be a better choice,\" Jane said.\n\n\"I'll leave Nessa in the apartment all by herself before I let Gina look after her. Gina hit her.\"\n\n\"No!\"\n\nHe nodded. \"Nessa said so after the last time I left her there overnight.\"\n\n\"What did you do?\"\n\n\"Not as much as I wanted to. Went over there. Greg got between Gina and me. I told Gina what I thought of her. Threatened to call the cops. Said a whole bunch of stuff I probably shouldn't have. Not too bright of me, I suppose, but I was pretty upset about it. Nessa has a hard enough time with trust as it is.\"\n\nJane couldn't suppress a smile. Nessa had changed him, matured him, but underneath it all there was the same reckless spontaneity that had first drawn her to him. Difficult to deal with sometimes, but never boring.\n\nHe caught her smile and flashed a sheepish grin. \"Anyway, Nessa likes you and I trust you to look after her. If you'd rather not, I could always try to arrange a sitter.\"\n\n\"No...I mean, you don't need to find a sitter. The doctor says I should be almost pain-free by Friday. I'm happy to look after her, if you're sure you're comfortable with me doing it.\"\n\nHe shrugged. \"At least we know your appendix won't be an issue this time, right?\"\n\n\"Very unlikely.\"\n\n\"Okay, I'll count on you for the weekend, then,\" he said.\n\nShe smiled, pleased that he'd consider her an option. Any sign of his trust was welcome and desperately needed. \"For tonight, I need your help. I haven't washed since the day you left for Calgary...and I'm beginning to notice,\" she said.\n\n\"Want me to take you out back and hose you off?\"\n\n\"Or you could give me a hand in the bath tub,\" she said. It felt awkward to ask him for help with such an intimate function, but somehow not as embarrassing as she'd expected. \"I'm not supposed to get the bandages or stitches wet, my stomach is really sore and maneuvering on the crutch is tricky.\" \n\n\"I'll go run the water.\" \n\nHe returned a few minutes later to assist her off the couch and into the steamy bathroom. He helped her off with her clothes and in moments she was naked in front of him, although the bandage on her abdomen and the fact she hadn't bathed - or shaved - in several days left her feeling more gross than sexy. \n\nHe eased her into the bathtub. It was only filled to a depth of a few inches but he'd made the water near-scalding to make up for the lack of immersion. He stripped to his underwear and sat on the edge of the tub facing her. \n\n\"You do the front, I'll do the back?\" he said, squirting some shower gel onto a washcloth and handing it to her.\n\n\"It's a plan.\"\n\nShe washed her arms and underarms, then wiped her breasts and stomach, careful to avoid wetting the bandages. He dipped a second washcloth and stroked it slowly over her shoulders and neck. The heat and friction felt wonderful and she felt herself starting to relax. \n\n\"That feels beyond amazing,\" she said, her voice a low purr. He responded by wiping hot water over her shoulder blades, drawing a groan. \"Forget mixed martial arts. This is your true calling.\"\n\n\"Washing hot, naked chicks? I'll take it. I'll work overtime.\" He doused her with more hot water, then began rubbing the rough washcloth between her shoulder blades and down her spine. She felt like melting. For several minutes she sat and enjoyed his hot, wet caresses.\n\n\"Hey,\" he said.\n\n\"Yes?\" She looked up and found him gazing at her with serious eyes.\n\n\"I forgive you. For cheating with Rob, I mean. It was shitty and it hurt a lot, but it sounds like in some messed up way you did it because you loved me, so let's put it behind us. You're forgiven.\"\n\nShe was caught off guard by the sentimentality of the gesture and by the impact his words had on her. She felt something inside her unbind. \"Mike...that means a lot. Really. Thank you. Thank you so much.\"\n\n\"And I apologize for hitting you. Regardless of what you say, it was cowardly and there was no excuse and I've regretted it ever since.\"\n\n\"I never blamed you for it, but I accept your apology.\"\n\nHe swiped the hot washcloth over her back again. She closed her eyes and sighed. She loved the contact, the heat. She loved the closeness. She loved the intimacy.\n\nShe loved...him? \n\nThe possibility surprised her. It had been five years since they'd parted ways. Long enough to have moved on, emotionally. She'd dated plenty of men since her breakup with Mike, enjoyed several lovers, traveled the world, built a career to die for. She hadn't spent her time pining for him, that was for sure.\n\nAnd yet, there was no denying he heated her in a special way, brought her alive in a way that none of the others ever had. His eyes and his smile seemed to reach inside and affect her at the deepest levels of her being. Being close to him made her happy. He'd been her first and last true love, and she knew she'd never allow herself to love that way again. The risks were too great.\n\n\"And I trust you. Completely,\" he said.\n\n\"You don't have to say that. I know I still have work left to do. I'll keep trying until the very end.\"\n\n\"You don't believe it? Test me.\"\n\n\"What?\"\n\n\"Test me. Ask me to do something I'd only do if I trusted you.\"\n\n\"Like what?\"\n\n\"I dunno. You're the smart one. Think of something.\"\n\n\"Come on.\"\n\nHe held her eyes and his expression was determined. \"I guarantee I'll pass any test you can think of. Anything.\"\n\nHis tone made it sound like a challenge and she considered the idea. How to test for trust? It couldn't be something trivial like 'lend me money' or 'loan me your car' - especially because he didn't have money or a car. Anyway, he'd already entrusted her with the safety of his daughter, so any test of his trust would have to start with something of similar magnitude.\n\n\"This will take some thinking,\" she said.\n\n\"Take your time.\"\n\n\"You may regret your guarantee.\"\n\n\"Nope.\" He seemed sure of his feelings, and Jane almost dared believe they were true.\n\nHe continued to bathe her until the water started to cool, then he helped her out of the tub and dried her carefully. She brushed her teeth while he prepared the couch for her. Jane's own clothes were filthy so he gave her a t-shirt and a pair of gym shorts and got her settled on the couch. The emotion and stress of the day had left her feeling worn out, and the hot bath made her sleepy.\n\nHe brought her some water so she could take her pain meds, then left the remaining drink on a nearby chair within easy reach.\n\n\"Do I get a kiss goodnight?\" she asked. She expected a smart-ass response, something sarcastic or maybe goofy.\n\nInstead, he knelt next to the couch and kissed her. It was a slow, warm, gentle kiss and she returned it eagerly. When it was over he caressed her cheek with his palm then stood and went in to bunk with Nessa without another word.\n\nShe closed her eyes. Maybe things weren't as bleak as they seemed. Maybe, somehow, there was still a chance.\n\n**\n\nJane woke early Tuesday morning facing a conundrum - she was a salesperson with no product to sell but a desperate need to close the deal. The first day of spring was six days away.\n\nShe felt a little stronger; the pain had diminished overnight and she could stand and even hobble slowly without too much discomfort, but that was all she had to offer. Sex was out of the question. So was housework - lifting, bending and scrubbing would be impossible - even getting into and out of her car unaided would be challenging and perhaps painful. She needed so much from Mike, and had so little to offer in exchange. \n\nBut there was hope. \n\nHe'd let her stay with him in the apartment. He'd forgiven her for her betrayal. He still trusted her with Nessa. And there was a growing warmth in Jane's relationship with him, a playfulness, even a tenderness. He'd told her he trusted her completely, though that likely had been to make Jane feel better. Regardless, it was progress. Late in coming, perhaps, but significant. She was determined to make whatever contribution she could in her final days. Jane Willow would go down fighting!\n\nIt didn't take her long to realize that looking after Nessa would be the best way to help Mike. His fight was Friday evening and preparations were consuming most of his time and attention. Babysitting the well-behaved girl wouldn't be physically taxing. The pieces all fit.\n\nHe seemed genuinely grateful when Jane offered to look after Nessa in the evenings, freeing him up for five or six extra hours per day. Quite a change from his earlier reluctance to accept her help. Even Nessa seemed pleased by the development, wondering out loud whether it would mean another trip to the Disney store at the mall. The kid was too cute. Jane vowed to take her on Friday when she felt a little stronger.\n\nJane had never been maternal - the time demands of her job kept her on the move and minimized any contact with children. She wasn't a mother or even an aunt and her relationship with her own mother had gone south when Jane was fourteen so there wasn't much experience for her to draw on. \n\nBut if these were going to be her final days, she decided to go all in and give Nessa everything she could offer. Maybe she'd never be 'mom', but she wanted to be remembered as more than the nice lady who did the housework!\n\nSo on Tuesday night, Jane took a page out of Mike's book and made the little girl her cause. When Nessa talked, Jane listened. When Nessa looked up, Jane was paying attention to her. It was hard at first, and required a conscious effort to maintain her focus. But as the evening went on it became a little easier to immerse herself in the child's world, to see things from a child's perspective. \n\nAs she was helping the kid pick out pajamas it suddenly occurred to Jane that parenting and sales used similar skill sets. Nessa had needs and wants, had her own agenda - sometimes a rational one but more often based on emotion and impulse. Jane had an agenda too - she had to feed the child, keep her safe and happy, get her bathed, send her off to sleep. The trick was in negotiating an arrangement that satisfied both parties. Jane could do that. Jane was amazing at that!\n\nMike returned late Tuesday night to find Nessa sleeping soundly. Good thing, too - he was so fatigued by his training he was asleep within minutes of getting home. \n\nWednesday followed the same pattern. \n\nJane knew from her time with Mike that his focus narrowed as the fight grew nearer and she was happy to be able to take Nessa off his mind, at least for the week. And truth be told she enjoyed the evenings with Nessa - focusing on the little girl relieved Jane's mind of the oppressive weight and stress of the curse - if only for a few hours.\n\nWednesday night Mike had a bit more energy when he returned and the two of them sat together on the couch. Mike ate almonds and tuna from a can while Jane enjoyed some popcorn.\n\n\"That girl of yours is a treasure. She didn't give me a moment of trouble,\" Jane said.\n\n\"She's an angel now, but she used to be a real handful.\"\n\n\"I can't imagine that.\"\n\n\"Oh, the first few weeks alone with her were a nightmare. Brynn's death really affected her, caused all sorts of problems. She'd wail if I left her alone for even a moment. I couldn't be out of her sight. I couldn't train, couldn't leave her at daycare or with a sitter. She had nightmares, wet the bed. It was awful for both of us.\"\n\n\"Her mom had just died. Nessa would have felt vulnerable and confused.\"\n\n\"That's an understatement.\"\n\n\"Did you ever second-guess your decision to take her?\" Jane said. \"I mean, there must have been doubts, right?\"\n\nHe pondered the question as he chewed a couple of almonds.\n\n\"I'd be lying if I said there were no doubts. I was in way over my head. What did I know about raising a kid, anyway?\"\n\n\"I admire you for sticking with her.\"\n\n\"Other than her mom, I was the only adult Nessa trusted. She'd known me for a couple of years at that point and she knew I'd be kind to her. When things were really bad, Greg and Gina thought I should give her up to a foster home, but how could I? To betray her trust like that would have been awful.\"\n\n\"I can see how you would have been sensitive to betrayal.\"\n\nHe shook his head. \"Betraying a kid's trust is a thousand times worse than betraying an adult. A million times worse. Adults can forgive, forget, get over it. But a kid? When a parent betrays a kid it sticks with them forever, changes them. It damages them in ways that don't heal.\"\n\nJane could hear how adamantly he believed it. She found herself nodding in agreement as he spoke.\n\n\"It took Nessa a long time - months - to get her feet under her and start trusting people again. But if I'd given her up to a foster home? Betrayed her trust when it was already so badly shaken? She'd never trust anyone again.\"\n\n**\n\nJane had never seen Mike fight. Ever. She found even the idea of mixed martial arts repugnant and savage, and the idea that someone she cared about would be on the receiving end of a brutal beating filled her with nervousness bordering on fear. \n\nHe'd left Friday morning to get ready for his evening match, and Jane had given him a kiss and a tight hug, wished him luck and uttered a silent prayer that he'd escape injury. The fight was scheduled to start at eight o'clock and the result would be known shortly afterwards. \n\nTo distract herself and to amuse Nessa, Jane took the kid to the Disney store in the early evening. As the doctor had said, the pain from the appendectomy had almost disappeared; even her wrist and ankle felt a bit stronger. The going was slow and a little awkward, but she could function.\n\nThere was no sing-along this time, but Nessa had a great time trying on princess dresses and she looked so cute as Belle that Jane was compelled to purchase the ensemble. If nothing else, it would make a great Halloween costume down the road. \n\nIt was late evening, after Nessa had been fed, given her story time and put to bed, that Jane got around to checking the fight results on her phone.\n\nMike had lost. \n\nHe'd gone the full three rounds but lost a unanimous decision - all three judges gave the fight to the other guy. \n\nJane's feelings were mixed. Mike was still standing at the end of the fight, which likely meant no serious injuries and that was by far her biggest concern. He'd be coming home in one piece, body and mind intact.\n\nShe knew from experience he'd be a little bummed about the loss, and in a bit of a funk for a couple of days as he processed it and got himself re-focused for the next battle. She'd gone through it with him before and knew how to help him get back on his feet again. A big, greasy, bad-for-you brunch on Saturday morning would help; a rare and decadent departure from his normally strict eating routine to mark the end of one training cycle and the start of another.\n\nA bit of sexy flirting would help his mood too, so she washed as well as she could without wetting the stitches or bandages. She had an appointment the next day to get them removed and she couldn't wait. She decided to greet him wearing one of his own t-shirts...and nothing else. \n\nMike returned shortly after eleven. \n\nJane met him at the door and embraced him eagerly, but the hug and kiss she received in returned seemed unenthusiastic. His heart wasn't in it.\n\nHis face was swollen and welted in places and a small cut on his left cheekbone had already stopped bleeding and was on its way to scabbing over. Considering he'd just gone three full rounds with one of the best fighters in the country, he looked pretty good.",
        "Except his eyes. In his bright green eyes she could see real pain. He was hurting bad. Hurting in a way she'd never seen.\n\n\"Everything went okay with Nessa?\" he asked, nodding in the direction of her room.\n\nHis voice wasn't right, either. Unsteady, strained. He was trying too hard to sound casual and it was having the opposite effect.\n\n\"Flawless. We had a great time. She's a really good kid. She obviously didn't learn that from you.\" She floated the lame joke, hoping to lighten him up a bit.\n\nHis lips curled into a mockery of a smile but his eyes didn't sell it. He walked past her, limping slightly on his left leg, and sat down heavily on the couch. \n\nShe decided a little flirting might snap him out if it, so she straddled him on the couch, her knees on either side of his hips, her breasts - unconstrained under the t-shirt - tantalizingly close to eye level.\n\n\"So, when's the rematch?\" she asked.\n\nWrong question. His fake smile faded. He wouldn't meet her eyes. After a few uncomfortable moments, he sighed the most depressing sigh she'd ever heard.\n\n\"No rematch. It's over. I'm quitting the circuit.\"\n\nIt took some time for the words to register. Quitting? Ever since she'd known him he'd been dreaming of the championship, pursued it with the kind of single-minded determination that sometimes left her in awe. \n\n\"But...this is your dream,\" she said, lowering her head to try to catch his eyes, but he evaded her gaze.\n\n\"Time to find another dream, I guess.\" His tone didn't match the optimism of his words.\n\n\"Hey, maybe this isn't the right time to make any decisions. You're emotional. Take a little time, get your head right...\"\n\n\"I decided this a while back. I knew going in it would be my last fight if I lost.\"\n\n\"But...why?\"\n\nHe finally managed to drag his eyes up to hers. \"Losing tonight means a big-money fight is three years away, at least. And that's if everything shakes out perfectly. I'm almost thirty now, and even that's on the old side for a fighter. Chances of me winning big in my mid-thirties are slim-to-none.\"\n\n\"If anyone can do it, you can. The way you train there's no reason...\"\n\n\"I can't put Nessa's life on hold for that long. I can't raise her in this shit-hole apartment, in this kind of neighborhood. And I can't bend my training schedule around her, either. It's not too bad when she's five, but soon she'll have lots of school friends and want to have them over. She'll want to do extra-curricular stuff at school. I can't train like I need to and still devote the time that Nessa deserves. And Nessa's more important.\"\n\nJane looked at him, unsure what to say or how to react. This wasn't his typical bummed-because-he-lost disappointment. She'd seen that before and knew how it looked and sounded. This was something else entirely.\n\nThis was the death of his dream. \n\n\"Anyway,\" he shifted on the couch and she reluctantly climbed off him and allowed him to stand. \"I really appreciate you looking after Nessa. I knew I could trust you with her.\" \n\n\"Any time - she was an angel. But I really think you should give this a little more thought.\"\n\nHe tried to manufacture another smile but it didn't go well.\n\n\"I'm going to hit the sack. I'll figure something out in the morning.\" He caressed her cheek gently, then pecked her on the forehead before limping into the bedroom, not even bothering to brush his teeth.\n\nJane turned out the lights, leaving one on in the bathroom for Nessa, then set out her own bedding on the lumpy couch. But sleep wouldn't come.\n\nShe couldn't imagine Mike not being a fighter - he'd been fighting since he was fifteen. She'd always assumed he'd win big at some point, but now what? There wouldn't be many job opportunities out there for a thirty year-old with no marketable skills and a high school education. Life would be hard for him, and for Nessa. \n\nBut surely Mike would persevere. Jane consoled herself with the thought that his physical and mental toughness would be enough to pull through. He was a warrior at heart, and he'd withstand whatever life threw at him. No need for her to worry about him. He was proud. The last thing he would want was her pity. \n\nShe settled into the cushion and tried to force aside the nagging sympathy inside her, tried to focus on the immediate future. Her future. The first day of spring was less than forty-eight hours away. Had she done enough to save her own life? She started to brainstorm ideas - there had to be more she could do to secure his trust...\n\nBut the memory of the misery in his eyes wouldn't leave her. The tremor in his voice. His dream had died...and he was grieving. Alone. For some reason, it was this that bothered her most of all, that he was alone with his pain on one of the worst nights of his life. The idea of it gnawed at her, and the more she thought about it the worse it got. Soon it became unbearable.\n\n\"Mike? Could you come here?\"\n\nThe words were out before she'd realized it; a half-conceived idea had escaped her lips on its own.\n\nShe heard the bed creak in the bedroom and his lopsided limp as he came to her in the living room.\n\n\"What's wrong?\" His voice, though weary, still registered concern for her. \n\n\"I'm in pain.\"\n\nHe sat on the edge of the couch cushion and looked down at her, and even in the dim light from the bathroom she could make out the serious expression on his face.\n\n\"What hurts?\"\n\nShe struggled into a sitting position, then wrapped her arms around his neck and drew him close.\n\n\"Just hold me.\" Jane felt him hesitate but she didn't release him. Soon his arms wrapped her up too, gently at first but before long he was squeezing her tight. \"I'm sorry. I know how much it meant to you. I know it was your dream,\" she said. It was all she could think of; her words had deserted her.\n\nHe sighed then, a long, miserable sigh; a sob with the sound removed. She felt her own tears brimming. His pain was hurting her. She hugged him harder.\n\n\"Yeah,\" he said, and that was all.\n\nShe hoped he wouldn't cry. She'd never seen him cry and didn't know if she'd be able to deal with it, didn't know if she could bear the pain of his tears. Let him be angry, or accusing, or smug or caustic. Anything but tears.\n\nA long time time passed as they clung to each other. Half an hour, maybe more. She wouldn't let him go and he made no effort to pull back.\n\n\"I'm going to miss you,\" he said. His voice sounded stronger. The worst had passed. \"When you go back to your old life, I mean. I'll miss you.\"\n\nHer old life. Without Mike. It didn't feel right - something inside her recoiled at the thought of it. But she knew she couldn't be part of his future - not in the way she had been before. The risks to him were just too great. And in any case, he'd never trust her enough to let her back into his heart. Not after all the sins of the past.\n\n...Or would he? He'd said he trusted her. He'd gone so far as to guarantee he'd pass any test she could name. Maybe this was the test? \n\n\"What if,\" she started, then paused, uncertain and frightened of what was coming. She didn't want to promise what she couldn't deliver, didn't want to over-commit. \"What if that wasn't what I wanted?\"\n\nHe broke the embrace but held her hands in her lap.\n\n\"What do you mean?\"\n\n\"I mean...what if...I wanted to keep you in my life?\"\n\n\"You mean get back together?\" His voice sounded both disbelieving and...hopeful? Or did she imagine that last part?\n\n\"I don't know, Mike. I'm just testing the waters here. Would you be open to something like that, hypothetically?\"\n\n\"I don't know. I always kind of assumed this was a short-term thing. But having you in my life again, long-term?\"\n\n\"I know. Crazy, right?\" she said with a nervous smile. \n\nHe was quiet and regarded her intently. She forced herself to hold his gaze. She'd put the idea out there and there was no graceful way to retract it. More than that, she wasn't sure she wanted to take it back; the more she thought about it the more the idea made sense to her. This was the ultimate test.\n\nHe gave a wry smile - a genuine one this time. It was a welcome sight.\n\n\"Me marrying a dying woman and adopting her little girl is crazy. Believing an old woman put a fatal curse on you is crazy. You fucking another guy to prevent my suicide is crazy,\" he said. \"Spending more time with you, having you in my life again? That's not too crazy. Sounds pretty nice, actually.\"\n\n\"You'd be willing? Even after all that happened? You'd trust me?\"\n\nHis eyes didn't leave her. \"Yeah, I would.\"\n\nHer spirits soared. He'd passed the test! Or she'd passed it - either way it was incredible news! If he trusted her enough to let her into his heart again, surely there was no higher level of trust than that. Jane had 'regained the trust most cruelly betrayed'. She'd won! She'd beaten the curse!\n\n...And yet...\n\n...And yet the shadow of the curse remained, looming over her. She could still feel its weight, undiminished, pressing down on her. \n\nConfusion and panic set in. How was that possible? What had she missed? Surely there was no one she'd betrayed more cruelly than Mike. She'd been positive he was the one - it hadn't even been a close contest. Had he lied about trusting her? Been bluffing to make her feel better? Impossible - Mike was terrible at bluffing. She'd know if he were being less than completely honest. So why did the curse remain?\n\n\"Jane?\" Mike said, and she realized he'd been talking all the while and she'd been too preoccupied with her own thoughts to hear his words. She gave him an apologetic half-smile.\n\n\"Sorry...say that again?\"\n\n\"I said the real question is: would you trust me?\"\n\n\"Trust you? I trust you with my life, literally.\"\n\n\"But you don't trust me with MY life. That's why you ended it the first time. You figured if things went south...\" he said, leaving the thought unfinished.\n\n\"I trust you completely. It's just...I've seen what happens, and I love you too much to-\"\n\n\"Wait...what?\"\n\nShe stopped and replayed the words in her head. Had she really said 'love'? She had - and she realized it was true. She DID love him. Had he re-captured her heart, or had he possessed it all along? She supposed it didn't matter - the love was there now and that's all that counted.\n\n\"I said I love you too much to put you at risk,\" she said, doubling down on the word. It was the right word - why not use it?\n\n\"So what kind of relationship would we have? You love me but don't want me to love you or I might kill myself? How's that going to work?\"\n\n\"Well...the first time around you were unguarded. I was protecting you. But maybe now you see where I'm coming from so you can keep your guard up and-\"\n\nHe smiled and shook his head. \"Nope. I don't want that. If it's going to work, I need you in close, not held at arm's length. I'll trust you to play fair, and you'll trust me to handle myself if things go bad. That's how trust works. That's the deal.\"\n\nIt seemed almost reasonable when he put it like that. Almost. But there was no way she'd take that risk. Never again. Not with Mike, not with anyone. Not after what had happened to Pierto...and to her dad.\n\n\"Anyway, give it some thought. I should get some sleep - I have a busy day of unemployment tomorrow and I don't want to be too tired to enjoy it,\" Mike said. He leaned in and gave her a kiss on the lips, then nuzzled her gently with his cheek. \"Thanks for this. For being here, I mean. I was having a rough time.\"\n\n\"What are friends for?\" she said, pulling him down for another hug.\n\nBut even as he squeezed her tight the awful reality set in. She'd failed. She'd won Mike's trust but the curse remained and there was no time left to find a different solution. The next two days would be her last. The curse would kill her before Monday.\n\n**\n\nThere had been many times in the past few months that Jane had contemplated how she'd spend her final days. She'd composed elaborate 'bucket lists' in her head, itemizing all the ambitious and exotic adventures she'd enjoy in her final hours. \n\nWaiting in a doctor's clinic on a Saturday morning to get stitches removed hadn't appeared on any of those bucket lists. \n\nShe'd told Mike she had errands to run and that she'd be back with dinner. There was no point in telling him the curse was still active - he'd only worry about it and couldn't do anything to fix it anyway. He'd tried his hardest and given her more than she could have hoped for going in. Ultimately, the failure was on her, not on him.\n\nPart of her wondered why she was bothering with the stitches - she'd be dead before Monday, so what difference did it make whether her appendectomy stitches were in or out? But she had plans for her final evening with Mike, and she wanted to look her best for him. It was vain, without question, but surely a condemned woman was entitled to a little vanity?\n\nFrom there she met with her lawyer to review her will, then returned to her apartment for a long-awaited shower and to write a sentimental, forgiving letter to her sister. In truth she hadn't decided whether or not to forgive her older sibling, but given that Jane would be dead soon, it didn't cost her anything to be gracious. \n\nIn the afternoon she treated herself to a spa, massage, sauna, facial treatment and manicure/pedicure; four hours of absolute heaven. That HAD been on the bucket list!\n\nThrough it all she was surprised by how calm she felt - almost serene. Maybe the reality of her doomed situation hadn't hit her yet, or maybe she'd been subconsciously preparing herself for this possibility for weeks and had made her peace with it. Maybe she was just tired of fighting it, tired of the worry, panic and stress, and was ready for it to be over.\n\nShe brought pizzas back to Mike's apartment in time for dinner, along with doughnuts, soft drinks and, in one last act of rebellion against Mike's strict diet, a tub of rocky road ice cream. She noticed that Mike indulged himself as enthusiastically as Nessa did - now that he wasn't training for a fight he'd loosened up a bit. She hoped he wouldn't put on weight and ruin a truly breathtaking physique.\n\nAfter dinner Mike did the washing up and grabbed a shower while Jane and Nessa cuddled up on the couch to watch Cinderella. Watching a Disney movie with a five-year-old wasn't on the bucket list either, but Jane enjoyed it so much she resolved, in the event of reincarnation, to put it on her next one. \n\nJane bathed Nessa and got her into bed, then sat with her and read three stories. Mike was home and he could have done it, of course, but it would be her last night with Nessa and Jane wanted to leave the child with only good memories of her. Nessa fell asleep part-way through the last book and Jane carefully covered her then bent and gave her a gentle kiss on the forehead. She prayed the kid would have a good life. Jane felt a pang of regret that she wouldn't be around to see it.\n\nShe admired the little girl's spirit - Nessa had handled the death of her mother a lot better than Jane had dealt with losing her father. Different circumstances but no less traumatic, she imagined.\n\nJane hit the shower next for a quick rinse and took extra time to shave, wanting everything to be exactly perfect for Mike. When she shut the water off she brushed her teeth and checked her appearance again in the mirror. Her appendectomy scar was unsightly but she knew Mike wasn't the type to be squeamish about such things. In any case, it felt revitalizing to be clean.\n\nMike stopped his cleaning when Jane emerged naked from the bathroom and limped slowly in his direction on her crutch. She could see his eyes were drawn to her breasts, the way they bounced and swayed with her uneven gait. She basked in his hungry gaze even as she blushed at her own brazen display. \n\nIt felt sexy and exciting to approach him this way - to offer him everything, with nothing held back. Tonight, finally, she could come to him with no agenda, no ulterior motives, no dark secrets and no fear of the consequences. On their last night together, her only focus would be on him and the feelings they had for one another. The certainty of her fate had liberated her.\n\n\"Well this is a treat,\" he said in a quiet tone, his eyes roaming over her body.\n\nShe slowly closed the distance between them, then stepped into his embrace. His arms went around her as she gently pulled his mouth down to hers. The first kiss was quick; the second lasted longer and she sought his tongue with her own. She hadn't French kissed since college and had forgotten how intimate, how reckless it felt. It was several seconds before she pulled back and locked her eyes on his - by far the loveliest eyes she'd ever seen.\n\n\"I love you, Mike. I loved you then and I love you now. You're my first, last and only love.\" Her own words delighted her, the fact that she was speaking them thrilled her. At last she could confess her feelings with no hesitation or reservation. For the first time in her adult life, love carried no risks. \n\nHe seemed taken off guard by the bold and uncharacteristic declaration, but broke into a grin and raised an eyebrow, amused. \"If this is a sales pitch, it's the greatest one in human history.\"\n\nShe laughed, then pulled him in for another leisurely kiss. There was no rush; they had all evening and she'd been kiss-deprived for weeks.\n\n\"Good to know. Next time I'll lead with this,\" she replied at last.\n\n\"Does this mean we're back on? An item? Are we giving this another shot?\"\n\n\"I don't know what it means. I just need you to know how I feel.\" She wouldn't give him false hope; tonight was about the present, not the future and - for once - not the past.\n\nHe held her eyes with his. \"I love you too. Maybe I never stopped, I'm not sure. But having you around makes me happier than I've been in years.\"\n\nShe kissed him again, tasted his tongue. She could feel her body heating, her breath coming faster already. \n\n\"I don't believe you; I'll need to see a demonstration,\" she said with a grin. She took an awkward step toward the couch, pulling him with her.\n\n\"Have you been medically cleared for penis-related activities?\" he asked.\n\n\"The doctor today said it's okay, just be gentle.\"\n\n\"You won't even know I'm there.\"\n\n\"Okay, not THAT gentle.\"\n\nHe chuckled and kissed her again. His hands came up to cup her breasts and give a firm squeeze. He pinched and rolled her nipples between thumb and index finger. A wave of arousal coursed through her.\n\nShe couldn't get enough of his lips, his tongue. She'd refrained from kissing him earlier, concerned it was too intimate after how they'd left things in their relationship. That had been a mistake - she chastised herself for avoiding the pleasure and thrill of his embrace.\n\nThe two of them shuffled to the couch, exchanging kisses and caresses as they moved. His hands hadn't left her breasts, continuing to tease her nipples fully erect. When they reached the end of the couch he lowered her to the cushions gently.\n\n\"How do you want it tonight?\" he asked, his voice thick, his eyes hungry.\n\n\"Anything. Everything. Just...I want to see you. I want to see your eyes on me.\"\n\n\"On your back,\" he said, helping her recline. He knelt on the floor and lowered his mouth to her smooth pussy, stroking her clit with slow licks, his eyes still fixed on hers. \n\nHis gorgeous eyes and the sensation of his tongue on her most sensitive nerve centre boosted her arousal. She sighed and gasped and squirmed. Her hips wouldn't stay still, lifting to chase his wet caress, eager to capture every millisecond of contact.  \n\nHe obliged her by slowing down, running the full length of his tongue over her with every lick. She could feel the tightening inside her as a climax began to build, the flush on her skin, the pounding of her heart. She welcomed it, letting the wash of sensation carry away her worries.\n\nHe pulled back, delaying her peak, then stood up and quickly shed his own clothing, revealing his impossibly well-defined body and beautiful, erect cock. She dropped her hand to her sex and stoked the fire there with skillful strokes of her fingertips. She didn't want to come, not without him.",
        "\"Purse?\" he asked, looking left and right urgently. She kept the condoms there.\n\n\"Just go inside. I'm...protected. I want to feel you,\" she said. Pregnancy was not a concern anymore and she wanted to feel him flesh-to-flesh. Wanted him to feel her pussy enclose his cock; wet, tight and yielding. Wanted to see in his eyes the pleasure she was giving him.\n\nHe hesitated for a moment but the offer was better than he could pass up and he quickly positioned himself on the couch, strong arms holding his torso above her, careful not to put too much weight on her still-tender abdomen.\n\nShe felt his erection nudging the soaking entrance to her sex. She reached up with both hands, cradled his head, determined to capture his eyes as he claimed her pussy for all time. \n\n\"Jesus,\" he breathed as he slowly sunk his full length into her. She lost herself in his gaze, emerald irises with dilated pools of black in the middle. She could read the ecstasy in his expression as he pushed himself in to the hilt. He breath left her in a rush - his cock filled her perfectly.\n\n\"Please...not too fast,\" she said as he pulled back and prepared for a second push. There was no pain, no discomfort yet but she didn't want anything to detract from the pleasure of his penetration.\n\nHe rocked forward again and she could see the muscles in his arms, shoulders and chest flexing and tightening. So much strength there, so much power, yet his thrust was deep and smooth and gentle, sending quakes and ripples of pleasure through her core.\n\nHe slowly built up the speed but not the force of his thrusts. He was coming in at just the right angle and she could feel the friction driving her closer to the brink with every stroke. She could see he was close to his own release but kept her palms on either side of his face, staring up into his eyes.\n\n\"Don't close your eyes. When you come, I want to see it,\" she whispered, her breathing ragged and fast. \n\n\"Okay.\"\n\n\"I love you. I love you so much.\" She couldn't say it enough - the words felt too good to hold inside her and there was no need to keep them pent up anymore.\n\n\"I love you too.\" His thrusting was a little too hard now but she welcomed it, loved feeling his control slip, seeing it in his eyes as he started to lose himself.\n\nHer orgasm hit hard and unexpectedly and she hoped the wanton moan that escaped her hadn't been as loud as it sounded to her own ears. As her tight sheath contracted around his cock, it brought on his climax too. She could feel it in her sex, could see the intensity of the pleasure reflected in his face. It filled her with a boundless joy to have brought him that kind of sensation, one last time.\n\nHe dropped his foot onto the floor and supported his weight on his elbows as he recovered, his body stretched out on top of hers but not pressing on her too heavily. His cock remained inside her and she enjoyed the pleasant fullness of it. Slowly, their breathing slowed and returned to normal.\n\nShe pulled him down for another deep, wet kiss.\n\n\"That was beyond incredible,\" she said. \"Thank you, Mike. For everything - your care, your trust, your patience. These last few weeks have been more than I could have hoped for.\"\n\n\"Well stay tuned, there's plenty more where that came from,\" he said, winking then nuzzling her neck with his lips.\n\nShe didn't have an answer for that, and she suddenly knew she had to leave. Urgently. It felt too good, too comfortable, too safe to be lying underneath Mike, and if she didn't get out now she might lose her nerve entirely. \n\n\"Let me put myself together,\" she whispered, and Mike slowly pushed himself up. His cock slid out of her and she immediately wished she'd stayed where she was. Leaving him would take all the will she could muster.\n\nBut it was time.\n\nJane retreated to the bathroom on her crutch. She didn't wash; she wanted to feel him - sticky and warm - on her thighs. She never wanted to lose the memory of what they'd shared. She dressed in a hurry and grabbed the purse she'd stowed on the bathroom floor earlier in preparation for a smooth exit. She left the washroom and slowly limped her way toward the front door. \n\nShe couldn't meet his eyes. \n\n\"What are you doing?\" he asked. He'd pulled his track pants on but remained topless.\n\n\"I'm going back to my apartment tonight.\"\n\n\"What - my lumpy, old couch isn't good enough for you?\" \n\nShe finally looked at him and smiled. \"If I had my way, we'd spend a lot more time on that couch.\"\n\n\"So stay. I want you here,\" he said. A puzzled expression was beginning to form, as he got the first sense that there might be a problem.\n\nShe shook her head. \"It's going to happen tonight or tomorrow, Mike. The curse, I mean. I can't be in your apartment when it does. How would that look, especially given our history? Every finger would point at you. I've stayed too long as it is.\"\n\n\"Nothing is going to happen. There is no curse. And even if there was, I already told you I trust you. Totally, one-hundred percent.\" Despite his dismissal of the curse, his tone was serious.\n\nShe continued to hobble to the door, regretting the need for such an obvious and awkward retreat. \"I know you do - I believe you. And you have no idea how happy that makes me, how great it was to be able to fix things with you and to get to know Nessa a little. I'm grateful you opened your home and your heart to me.\"\n\n\"If you know I trust you, then I don't see the problem here.\" He walked toward her slowly.\n\n\"The curse is still there. I feel it. Maybe we're too late, or there's something else I was supposed to do. Maybe it was a no-win situation from the start and the old lady just wanted to torment me with false hope. I don't know, and I'm out of time.\"\n\n\"Why didn't you say anything?\"\n\n\"Because what we shared tonight was important to me, and I didn't want to spoil it.\"\n\nHe caught up to her and grabbed her left wrist. His grip was firm and she was forced to face him again. He clearly intended to make this harder than it already was. She needed to get away from him before she lost her nerve, before she ended up a terrified, sobbing mess. She didn't want that to be his last memory of her.\n\n\"If something is going to happen - IF, is all I'm saying - it's better if I'm around. I could call an ambulance or protect you in some way,\" he said.\n\nShe sighed but made no effort to break his hold on her wrist. She'd never be able to overpower him and certainly not while limping on a sore ankle.\n\n\"Think about Nessa. Do you want her to see what's going to happen?\" she said.\n\n\"NOTHING is going to happen,\" he insisted.\n\n\"Okay. Nothing is going to happen. Let's do this: I'll go back to my apartment tonight and we'll meet up again on Monday morning, if possible. How does that sound?\"\n\nShe could tell he wasn't happy with the idea; the expression on his face left no doubt of that. But he couldn't object without conceding the curse was real and her death was imminent. \n\n\"How could the curse still be in effect?\" he said; a clumsy effort to switch tactics. \"The old lady said 'regain the trust you most cruelly betrayed', right? And that was me, right? And you regained my trust so the curse is broken. What am I not seeing?\"\n\nJane was about to correct him - those weren't exactly the old lady's words - but she thought better of it. Mike's version was mostly correct; why quibble over the fine print? It wouldn't change his mind, or hers. \n\n\"Mike, it doesn't make...\" Jane stopped mid-sentence. The salesperson in her was waving a red flag, sounding a warning. She mentally retreated a few steps to consider - she trusted her instincts and had learned through bitter experience the folly of ignoring them.\n\nMike's version of the old lady's words was mostly correct. Why quibble over the fine print?\n\nWhy quibble over the fine print?\n\nThe fine print could make or break the deal, that's why. The fine print was where the danger lurked and where the opportunity lay. No salesperson worth her salt would EVER ignore the fine print!\n\n\"That's not what the old lady said, exactly. She said 'regain the trust most cruelly betrayed',\" Jane said, frowning, deep in thought. \n\n\"Yeah, and the one you most cruelly betrayed was me, right?\"\n\n\"But she didn't say 'the trust YOU most cruelly betrayed', she just said 'the trust most cruelly betrayed'.\"\n\n\"I don't get it. Isn't that the same thing?\"\n\nIt wasn't, not at all. One word in the wrong place could ruin a contract or suck all the profit out of a venture. Every word counted, even the short ones. \n\n\"It's not the same thing. In the old lady's version, there was a cruel betrayal, but it wasn't necessarily me doing the betraying. The word 'you' makes a big difference in interpretation.\"\n\n\"But if it wasn't you doing the betraying, how could you be expected to regain the trust?\" Mike said. His furrowed brow told her he was struggling to keep up.\n\nUnderstanding slammed into her all at once. She wanted to slap herself for not seeing it sooner.\n\n\"Because it was MY trust that was lost as a result of the betrayal,\" she said. \"You could interpret the curse as 'I have to regain the trust that I lost when I was most cruelly betrayed'.\" \n\n\"Hold on...the old lady was mad at you because you betrayed her nephew. Why would she curse you to regain your own lost trust?\"\n\n\"Maybe she wanted me to die and was trying to trick me with words. Maybe she figured it would be harder for me to change my own mind than for me to change someone else's,\" Jane said, and she felt a growing excitement. This might be an eleventh-hour reprieve!\n\nMike caught her excited tone.\n\n\"Are you sure this is the answer?\" he said.\n\n\"It has to be. Regaining your trust didn't break the curse, so the other interpretation has to be the correct one.\"\n\n\"Okay, so you just have to regain your trust. When were you most cruelly betrayed? Was it when I hit you?\"\n\nShe considered, then shook her head. \"I goaded you with the intent of being hit, so it would be a stretch to say I felt betrayed by it.\"\n\n\"Did the nephew - Pierto - did he damage your trust in some way? A previous boyfriend maybe? Someone you work with?\"\n\nShe considered each possibility. She couldn't recall her trust having been unduly affected by any of those candidates.\n\n\"It was my mom,\" Jane said at last, unable to conceal the disgust in her tone. \"It has to be. She killed my dad, tore the family apart. Ruined my childhood. She cruelly betrayed my trust, no doubt.\" The conclusion had her close to tears. Mom had killed her dad and was on the verge of killing her, too. How much damage could one person do?\n\nShe glanced up at Mike and found him watching her. She recognized the look; something was on his mind and he was trying to come up with the right wording. Finally he let go of her wrist and put his hand on her shoulder gently.\n\n\"Janey...your mom didn't do anything wrong,\" he said, and his tone was gentle even if his words were an affront to decency. \n\nFor a moment she just stared at him. Hadn't he understood anything she'd said earlier about shared responsibility and shared consequence? Surely he wasn't that dense!\n\n\"Come on, Mike! We've been through this. She and dad shared the responsibility for keeping their love strong, so when she dumped him, his suicide was mostly her fault. That's what ruined my trust.\"\n\nHe shook his head. \"The reason you ended it with me, the reason you've kept your other boyfriends at arm's length, is that you don't trust MEN to handle the pain when the relationship ends. It wasn't your mom who ruined your trust in men.\"\n\n\"No, that's...\" she trailed off, horrified. She'd already followed his line of thinking to the end and was met with the dreadful realization that she couldn't refute it.\n\n\"Your dad's suicide was the cruelest betrayal of all.\"\n\nShe wanted to lash out, tear into Mike for even suggesting something so offensive, so hurtful. But his words resonated rationally, if not emotionally. Refusing to believe the truth didn't make it go away.\n\nOvercome, she covered her face with her hands and wept. Wept for wasted opportunities. Wept for lost time. Wept for the father who'd left her too soon.\n\n**\n\nShe wasn't sure how long she'd stood leaning on the crutch crying before she allowed Mike to help her to the couch. They sat together in silence for a long time as her tears gradually petered out and her sniffles abated. \n\nTo his credit, Mike stayed silent. She knew a lot of men would have tried to say something to make it better or to lighten the mood, but he just held her and let her process the pain and regret on her own. He knew how to be supportive but not intrusive. More than anyone else, he knew her and understood her.\n\nAn hour passed before she felt strong enough to speak again.\n\n\"All along I've been trying to get you to trust me and it turns out I was the problem,\" she muttered, shaking her head. \"I spent all that time doing housework, laundry, cooking for you. I even cleaned the crud around the base of the toilet with a toothbrush!\"\n\n\"Uh, thanks?\" he said in a guilty tone.\n\n\"If I'm still alive Monday morning, I will have my revenge,\" she said, not entirely joking.\n\n\"Speaking of which, we think we know what the curse means, so how do we beat it?\"\n\nShe breathed a deep sigh. She'd figured that part out already.\n\n\"Trust. I have to trust a man I'm in a relationship with. I have to accept his love, and somehow trust him not to...to hurt himself...if that love goes sour. Even though I know that's what happens - I've seen it happen. It goes against every instinct I have.\"\n\nShe was under no illusions abut how difficult it would be to achieve the kind of trust it would take to dispel the curse. A lifetime of doubt and bad experiences couldn't be overcome as easily as flicking a light switch. It would be scary to let go of the lessons history had taught her.\n\nOf course, the alternative was death, so she had every incentive to try her hardest.\n\n\"Sounds like a tall order. Did you have a man in mind?\" Mike asked lightly.\n\n\"It would have to be a man who loves me, who wants a relationship with me. A man who's worthy of my trust and who trusts me. A man who understands me. A man I can love.\"\n\n\"And you have...about twenty-seven hours to find this guy, so he'd better be close by.\"\n\n\"Unfortunately, the only guy I can think of is an unemployed single dad with no money and no car who lives in a dump,\" Jane said. \"He has a history of domestic violence and my family despises him.\"\n\n\"I'd stay away from that loser, he sounds like trouble.\"\n\n\"He IS trouble. But he's got a cute kid. And pretty eyes.\"\n\n**"
    ],
    "authorname": "North200",
    "tags": [
        "consensual",
        "romance",
        "oral",
        "final",
        "romantic"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/high-stakes-hard-sell-ch-06"
}