{
    "title": "New Girl in Town Pt. 05",
    "pages": [
        "All characters are at least 18 years old.\n\nAgain a special  Thank you  to my proofreader who is helping make me look less dumb. She rocks! Any errors found are my own. \n\n**** \n\n\"He caught it,\" Jessica shouts as the entire visitors bleachers are standing up watching the pass.\n\n\"Touchdown, they win,\" Shelly shouts holding up her arms.\n\n\"Yes,\" Sarah shouts pumping her arms.\n\n\"High five Sarah,\" Roxie says putting her hand up. Sarah slaps it then Bobby who also put his up.\n\n\"Jake is going to be so...\" Jessica begins to say but stops as her eyes drift back to the line of scrimmage. She sees Jake lying on the ground and he doesn't appear to be moving. She then jumps down the bleachers and runs to the fence. \"COACH,\" She shouts trying to get his attention. \"COACH PENNINGTON!\"\n\nHe turns to her with a smile on his face and begins to give her a thumbs up but then notices the look on her face. She points emphatically towards the field and his eyes follow her finger.\n\n\"Trainer,\" He shouts as he runs onto the field.\n\nJessica turns back to the bleachers and now that everyone has noticed what she had, the cheering has turned to silence. \"Mom,\" She shouts. \"He needs help!\"\n\nDr. Golden nods and hurries to meet her daughter at the fence then the pair run towards the gate at the far end zone.\n\n\"Jake, don't try to move,\" Coach Pennington orders as he reaches me.\n\nI've already pushed myself up to a seated position with my good arm.\n\n\"Get... get me... to the bench,\" I manage to tell him.\n\n\"Don't move I said,\" He reiterates but I'm already struggling to get to my feet. \"Damn it Jake, stay still.\" \n\n\"Can't let them... see me... like this,\" I argue trying to get my breathing under control.\n\nHe sighs and orders the trainer to help me get to the bench. When we get there Jessica and her mom are there waiting for us.\n\n\"Jake, where are you hurting,\" Dr. Golden asks kneeling in front of me.\n\n\"It's... my shoulder... and... can't feel my... hand,\" I answer.\n\n\"He looks dazed,\" the trainer reports after shining a light in my eyes. \"Jake, do you know where you are?\"\n\n\"Bench,\" I answer.\n\n\"He's still a smartass,\" Coach Pennington states. \"Jake, what happened?\"\n\n\"Dunno,\" I answer trying to think but it's just making my head hurt more.\n\n\"We'll get you fixed right up Jake,\" Dr. Golden says then proceeds to help get my jersey off. She hands it to Jessica who looks worried but is trying to put on a brave face. \"Jake this might hurt, but we need to get these pads out of the way.\"\n\nI nod and grit my teeth. She's right, it does hurt. Thankfully it's over quickly and she begins checking over my shoulder then she reaches down to check my pulse. Dr. Golden then looks at Coach Pennington and nods to the side.\n\n\"Jess, get him some water,\" She tells her daughter who quickly complies.\n\n\"Did we win,\" I manage to ask Jessica after I take a sip of water.\n\n\"Yes,\" She answers. \"You don't remember throwing the pass it Ray?\"\n\nI shake my head and quickly realize that was a bad idea as a wave of nausea rolls over me. \"I remember being in the huddle.\" I answer after I'm sure I'm not going to throw up.\n\n\"It's going to be okay Jake,\" She assures me. \"My mom's going to help you.\"\n\n\"How bad,\" Coach Pennington asks after the two step away.\n\n\"The memory loss is worrisome but his shoulder is the immediate concern.\" She states. \"His pulse is that arm is weak and his hand is cool to the touch.\"\n\n\"The bone slipped out and is putting pressure on the vein,\" He asks catching her by surprise. \"I've seen too many dislocated shoulders Doc,\" He explains.\n\nShe nods. \"That seems to be the case. I'd need x-rays to make sure there's not a break but I need to put his shoulder back in its socket now. Otherwise he could have permanent damage.\"\n\n\"Just tell me what you need me to do Doc,\" He answers.\n\n\"You said you've seen a lot of theses. Have you ever seen one put back in place?\" She asks. He shakes his head and she continues. \"He could very well pass out from the pain so I'll need you to catch him if that happens. I can't risk another blow to his head.\"\n\nWhen they return my parents, joined by our friends are standing at the bench with Jessica and I.\n\n\"How bad is it,\" my dad asks looking concerned.\n\n\"His shoulder is dislocated,\" Dr. Golden states. \"I have to put it back in... quickly.\" She answers.\n\nI can tell it's going to be bad by her tone and look up at Jessica. \"Hey Jess, how about you and my mom take Sarah up the concession stand.\" I state, my breathing now under control. \"I'll bet they have some pink cotton candy waiting for her.\"\n\nOne look at his face and that of her mother's tells her that she needs to do as he asks. She nods and takes Sarah by the hand. \"Let's go get you some cotton candy Sarah. Mom's going to help Jake.\"\n\n\"I want to stay,\" Sarah argues.\n\n\"How about I come along with you and we can discuss what colors I'm putting in your hair,\" Roxie asks grabbing Sarah's other hand. Reluctantly Sarah agrees to go and soon the foursome is making it's way around the track.\n\nAs soon they out of earshot, Dr. Golden orders her husband to kneel down on my left and my dad to do the same on my right. When my dad asks why, she tells him, \"This is going to very painful. He could pass out and I don't want him to fall.\"\n\nMy dad nods and gets into position. \"We've got you Jake,\" he assures me.\n\n\"Jake, this is going to hurt but I've got to do it,\" Dr. Golden tells me taking hold of my arm. I nod in understanding.\n\n\"Don't think less of me if I pass out,\" I ask her.\n\n\"Never sweetie,\" She answers then takes a firm grasp on my arm. \"I'm going on three. One... two... three,\" She calls out then rotates my arm. There's another pop and my world goes black.\n\n****\n\nThe team, along with some cheerleaders and students are still in the end zone celebrating when Ray notices someone is missing. He turns to Staci, \"Have you seen Jake?\" He asks.\n\nShe shakes her head and looks around. \"I don't see him anywhere.\"\n\n\"Something's wrong,\" He states.\n\nStaci looks around and spots Jessica, Roxie, Sarah and Jake's mom walking back towards the bench. \"There's goes Jess. They've gotta know where Jake is.\" She states and the pair run over towards the group. \n\n\"What's going on,\" Ray asks as they reach them.\n\n\"Jake's hurt,\" Mrs. Gibson answers.\n\n\"What,\" Ray asks confused. \"What happened?\"\n\n\"No one's really sure. We watched you score, turned back and Jake was on the ground.\" Roxie explains.\n\n\"Is it okay if we come and check on him ma'am,\" Ray asks Mrs. Gibson.\n\n\"Of course,\" She answers.\n\nStaci takes Jessica by the arm and hugs it to her. \"He's going to be fine Jess,\" She assures her.\n\n\"I'm not so sure Staci,\" Jessica answers quietly. \"You haven't seen him.\"\n\n****\n\nThey arrive back at the bench just as Dr. Golden is finishing taping Jake's arm to his chest. \"This will keep the pressure off and keep things in place on the ride to the hospital,\" She's explaining as they approach.\n\n\"Damn Jake, are you all right,\" Ray asks kneeling down.\n\n\"Not really,\" I answer.\n\n\"His shoulder was dislocated,\" Mr. Gibson informs Ray and Staci. \"Dr. Golden put it back in it's socket but we need to get him to the hospital and see if anything's broken.\"\n\n\"I'm riding with Jake and his parents and dad is taking you girls home.\" Dr. Golden tells them.\n\n\"Mom, can't I,\" Jessica begins to ask but stops when her mom shakes her head.\n\n\"Jessica, even with me there to hurry things along this will still take several hours,\" Dr. Golden states then nods at Mr. Gibson.\n\n\"We need to get going.\" He states. They help me to my feet and we start to walk towards the parking lot.\n\n\"Ray, we need to let the team know,\" Coach Pennington tells him and Ray nods.\n\n\"Jessica do you want me to come home with you,\" Staci asks but Jessica shakes her head. \"Okay, but I'll call you later tonight.\"\n\n\"Okay and thanks Staci,\" Jessica answers.\n\n\"It's what friends are for Jess,\" Staci says as she hugs her. The rest of the group also promise to call Jessica later as they load me into my parent SUV. I manage a small wave at them before my dad drives away.\n\n****\n\nIt's close to one in the morning when Dr. Golden arrives home to find her husband waiting up for her. He puts down the book he was reading as she enters the living room.\n\n\"How is he,\" He asks.\n\n\"Nothing was broken but he's got a few bruised ribs, a mild concussion and he thinks his playing days are done.\" She sighs as she slips off her shoes and makes to sit beside him but he stops her.\n\n\"You need to check in on your daughter first,\" he tells her.\n\n\"She's still up?\" Dr. Golden asks.\n\n\"She was down here about ten minutes ago looking for you out the windows,\" He answers.\n\nDr. Golden sighs. \"All right, I'll check in with Jess and meet you in bed.\"\n\nHe nods and puts away his book as she climbs the stairs. She knocks quietly on Jessica's door then enters.\n\n\"Dad said you were still up,\" She says finding Jessica propped up in her bed.\n\n\"How bad is it,\" Jessica asks.\n\n\"No broken bones,\" She answers as she takes a seat beside her daughter. \"He does have a concussion and a few bruised ribs as well.\"\n\nJessica is quiet for a long minute then asks, \"Mom, what am I doing?\"\n\n\"What do you mean honey,\" She asks.\n\n\"With Jake,\" she answers. \"I mean, I told you before school started that I wasn't going to date this year and yet when I saw him lying there on the field it felt like my heart broke. I was so scared for him and I still am but I'm also mad that he sent me away when he was hurting.\"\n\n\"He sent you with Sarah and I'm so glad that he did.\" Dr. Golden tells her.\n\n\"Why mom,\" Jessica asks.\n\n\"Baby, you've never seen anyone get their shoulder put back into socket. It's violent looking and causes a lot of pain. Now while Jake may have sent you away so you didn't see him pass out I also happen to think that he did it so that my girls didn't have to see me relocate his shoulder.\"\n\n\"He passed out,\" She asks.\n\n\"For just a moment but it's not unexpected so don't think less of him for it.\"\n\n\"I don't,\" Jessica answers. \"I'm just sad about how much pain he was in. He's not my boyfriend so why does it feel like he is?\"\n\nHer mom puts her arm around Jessica and pulls her into a hug. \"Jess, when you made that declaration it was easy for you to say that you weren't going to date. You hadn't really met anyone at the school yet. I'm not saying that you have to start dating if you still don't want to but it's understandable that you've developed feelings for your friends.\"\n\n\"I just... I wish I knew more.\" Jessica answers. \"He's holding something back from me and I don't know what it is or why he won't tell me.\" \n\n\"Is there someone else you can ask? Shelly perhaps,\" Dr. Golden asks.\n\nJessica shakes her head. \"I doubt I'll get anything out of Shelly or the group we hang out with though that does leave me one possibility.\"\n\n\"I think that I can guess who you're thinking of and I'm not sure that I like it,\" Dr. Golden tells her.\n\n\"I'm not entirely sure that I like it either but I have to know the truth before I know what my next move should be.\" She explains.\n\nDr. Golden hugs her daughter. \"If it helps you make the right decision then you do what you have to do sweetie.\"\n\n\"Thanks mom,\" Jessica states. \"And don't worry about making breakfast in the morning; I owe you so I'm planning to make all of your favorites.\" \n\n****\n\n SATURDAY \n\nIt's a little past ten in the morning when the doorbell rings. My mom answers it and I hear her escorting whoever it is back to my room.\n\n\"Jake, you've got a visitor,\" she announces as she opens my door.\n\nRay steps past her into my room. \"Thank you Mrs. Gibson,\" he tells her then turns to me. \"How are you feeling Jake?\"\n\n\"Sore,\" I answer as my mom closes the door.\n\nHe nods. \"Staci tried getting an update from Jessica last night but that was just before midnight and her mom hadn't got home yet,\" He explains.\n\n\"We weren't done at the hospital until a little before one,\" I answer.\n\n\"So what did Jess's mom say,\" he asks.\n\n\"Three weeks until I can throw a ball again, five more for my ribs to be able to take a hit and then there's the fact that I don't know what happened at the end of the game.\" I answer.\n\n\"Fuck man, are you serious?\" Ray asks.\n\nI nod. \"I remember being in the huddle but nothing else until I'm lying on the field trying to breathe.\"\n\n\"Fuck,\" Ray repeats.\n\n\"Pretty much,\" I answer then to change the subject. \"They tell me that you're the big hero of the game.\"\n\nHe shakes his head. \"It should be you Jake. Shit, you put us in the position to win, I just caught the pass.\"\n\n\"Yeah but my passes are ugly and no one wants to cheer those,\" I joke. \"Speaking of cheers, where's Staci? As a matter of fact, why aren't the two of you still celebrating the win?\"\n\n\"Watching one of your best friends get carted off in pain kind of puts a damper on any celebrations.\" He answers.\n\n\"Hey don't let this stop you guys,\" I tell him nodding towards my sling.\n\n\"There's always tonight,\" Ray tells me.\n\n\"Treat her right Ray,\" I tell him then shake my head. \"What am I saying; of course you'll treat her right.\"\n\n\"I wish I had your confidence,\" he sighs.\n\n\"Come on Ray, I know that you know what to do. I'm the virgin here, not you.\"\n\n\"I may have gotten laid Jake but that doesn't mean I had any idea what I was doing. Jump, pump and dump as Patrick would put so eloquently at the time. Hell, half the girls I was with saw me as an audition to join Patrick's inner circle. They went over the top with acting because they knew he was always nearby. I have no idea if anything I did felt good to them or if it was all just an act.\"\n\n\"You didn't ask any of them,\" I ask.\n\n\"I didn't much care at the time,\" He answers. \"Damn, I was a piece of work huh?\"\n\n\"Hey, you care now and that's important.\" I assure him.\n\n\"That's part of the battle I suppose but what about the rest of it? How am I supposed to figure out what to do to make her feel good?\" \n\n\"You can always ask her.\" I tell him and he laughs.\n\n\"Yeah, I can see that going over really well. Hey Staci, what do I need to do to make you feel good?\" he states.\n\n\"I don't see a problem with you saying exactly that.\"\n\n\"Jake, girls like guys who know what they're doing. They don't want to dictate to us while we're getting hot and heavy.\" He informs me but then looks puzzled. \"Do they?\"\n\nI shrug with my one good shoulder. \"Virgin, remember,\" I say while pointing at myself. \"That said, when the opportunity comes up, I plan on asking all sorts of questions. Do you like this? How about this? Should I do this faster or slow down?\" \n\nRay thinks for a minute. \"You know that doesn't sound as crazy when you put it like that.\"\n\n\"Just give it a shot and if it doesn't work for you guys you can always blame me.\" I laugh.\n\nHe nods and smiles. \"That is true. I think I'll try it out tonight.\"\n\n\"After the party of course,\" I state.\n\n\"I nearly forgot about that stupid party,\" Ray answers. \"Do you think Patrick will still throw it even though he lost?\"\n\n\"Of course he will, it's became an annual event and he knows it's expected. That and any excuse to get drunk.\" I answer.\n\n\"As much as I'd love to show up and rub his face in his loss, I have an adorable cheerleader to thank for all she's done for me.\"\n\n\"Anything she asks you for, remember that.\"\n\n\"Oh I will and don't think I won't throw you under the bus if she finds it weird.\"\n\n\"I'm injured Ray. How can you say such things to your favorite quarterback?\"\n\n\"Easily,\" He states and we both crack up laughing.\n\n****\n\nAt a little past four in the afternoon the doorbell rings at the Golden house.\n\n\"I've got it,\" Jessica calls out as she hops to her feet. Opening the door she finds Patrick there waiting for her.\n\n\"Hey Jessica,\" he says.\n\n\"Patrick,\" Jessica nods.\n\n\"To say that I was surprised when you called me earlier would be an understatement.\" Patrick tells her.\n\n\"I explained that,\" She answers.\n\n\"Yeah,\" he nods with a smirk. \"You want to know about Jake and that big secret of his.\"\n\n\"That's what I asked you for so go ahead and tell me.\"\n\n\"It could take awhile,\" he responds. \"There's a party tonight. Come with me to it and I'll tell you the truth about Jake.\"\n\nEverything in her is screaming that this isn't a good idea but her curiosity outweighs her instincts so she nods. \"Fine, but you'll tell me everything on the ride to this party and when I'm ready to go, I go. Got it?\"\n\n\"Of course Jess,\" Patrick answers. \"I just want to let you know what kind of a guy you're friends with.\"\n\n\"I think that I already have pretty good idea.\" She answers.\n\n\"Yeah but you know there's more going on otherwise you wouldn't have called me.\"\n\nUnable to fault his logic Jessica simply shrugs as she follows him out to his car.\n\n\"So start talking,\" Jessica tells him as soon as he pulls out of her driveway in his brand new, fire engine red Camaro.\n\n\"This thing between him and I goes all the way back to kindergarten if you can believe it.\" Patrick begins. \"One day at recess, Jake grabbed this girl Molly and started to drag her towards the slide. I later found out that he wanted to kiss her but she didn't want him to. I ran and got the teacher and saved her from him.\" \n\n\"Okay,\" Jessica answers then waits from him to continue.\n\n\"He's had it out for me ever since. In middle school, he tried to sabotage my science fair project but I managed to win anyway. It was when high school started when he earned his nickname \"Shadow\". Everywhere I went he'd show up right behind me. He wanted to be me so bad Jessica but I knew he was nothing but trouble.\"\n\n\"How did you know that?\" Jessica asks.\n\n\"He was always so friendly with the losers and hanger-on's. Like he knew that he just wasn't good enough to hang out with us so he stayed as close as he could. Then last year he took his shot at joining us but I saw right through it.\"\n\n\"You did huh,\" She asks.\n\n\"Of course,\" he continues. \"See Jake got this girl, Jenny, I think her name was. Anyway, she wasn't bad looking and Jake knew it so he sent her over to flirt with me all the time. I figured out that his plan was to get her in with me and that would bring him along but I was too smart for that.\"\n\n\"So you didn't screw her?\"\n\n\"Oh no, I did I just made sure that everyone knew what their plan was afterwards. That's why she transferred. I guess I can't really blame her for doing what Jake asked her to but since it didn't work out like they thought it would.\" He pauses and looks at Jessica before continuing. \"That's why I wanted to tell you what he was like Jess. If he could do something like that to his girlfriend... well I wouldn't want you to wind up the same way Jenny did.\"\n\n****\n\n\"Are you sure that it's cool for me to be in here with you? I don't want to get you grounded or anything,\" Ray nervously asks as Staci leads him into the living room.\n\n\"I won't be in trouble,\" She assures him. \"My mom is gone to a conference in Virginia this weekend so we've got the place all to ourselves.\"\n\n\"Oh,\" he answers. \"So, uh... what do you want to do?\"\n\n\"Let's sit down and talk for a bit. You went to see Jake earlier. How's he feeling?\" She asks as the pair sit down on the enormous couch that dominates her living room.\n\n\"He told me that he was sore.\" Ray answers.\n\n\"Hmm, I wonder if we should invite him over so he can soak in the hot tub,\" Staci asks.\n\n\"It's not a bad idea but he's probably got company now,\" he answers. \"I wish I had brought a suit with me. I could use a soak myself.\" \n\n\"We can always go skinny dipping,\" She answers with giggle.\n\n\"Uh... yeah we... uh... could...\" Ray stammers for a moment.\n\n\"Too much,\" Staci asks.\n\n\"It's like I don't want to see you naked, I do, God do I ever want to, I just don't want to screw up.\"\n\nStaci smiles, gives him a brief kiss, then says, \"You won't screw anything up but we'll hold off on that for now. Let's kiss some and see where that leads.\"",
        "Staci pushes Ray onto his back and climbs aboard as he happily complies with that request. Tentative kisses give way to more passionate embraces. Soon wandering hands join in and Staci begins to massage Ray through his jeans.\n\n\"Oh fuck,\" he groans as her hand squeezes his organ.\n\nThrough his lust-filled haze, he remembers that he wants to please her tonight. He wraps his hands around her waist then lifts her small frame off him then lays her on her back.\n\n\"Oh,\" She sighs as he lies between her spread legs. Having been in the position before, Staci prepares to be stripped of her clothes in moments but once again is surprised as Ray leans back to look into her eyes. \"What's wrong,\" She asks confused.\n\n\"Nothing,\" he answers quickly. \"Everything's great it's just...\"\n\n\"Just what Ray,\" She prompts him.\n\n\"I want to please you but... but I need you to tell me how,\" He manages to tell her.\n\n\"Really,\" She asks.\n\nHe hesitantly nods then asks, \"I messed this up didn't I?\"\n\n\"You just caught me off guard,\" She answers. \"I'm not used being asked that. I think that I like it.\"\n\nHe starts to ask her something else but Staci pulls him down and attacks him with her tongue. They passionately kiss for a few moments before Staci pushes him back slightly.\n\n\"My neck,\" she purrs. \"Kiss my neck.\"\n\nRay complies kissing his way down her slender neck then reverses direction back up towards her ear.\n\n\"Like that,\" She sighs. \"Suck lightly then more tongue.\" \n\nRay goes from one side to the other slowly as she instructs him when she suddenly pushes him back.\n\n\"What... what's wrong,\" he asks confused.\n\n\"I need less clothes on,\" Staci informs him. \"So do you.\"\n\nShe sheds her shirt revealing one of her sexier bras.\n\n\"Wow,\" Ray utters.\n\n\"Shirt off now Ray,\" she giggles tugging at his collar to remind him what she wants.\n\n\"Right,\" He answers and hurries to slip out of it.\n\n\"Nice,\" She smiles and runs her hands over his nicely developed chest.\n\n\"Beautiful,\" He responds looking down at her nearly exposed treasures.\n\n\"Kiss here,\" She tells him point to a spot on her collarbone. He hurriedly kisses there and begins to move down as she directs him. His hands slide up her smooth skin leaving goose bumps in their wake. Staci moans as his lips graze over her barely covered nipples. Soon they're poking out begging for his attention and he doesn't deny them.\n\nWhile he nibbles, Staci begins to work the clasp on her shorts urgently.\n\n\"Oh God,\" she groans causing him to pull back slightly.\n\n\"Is everything okay,\" he asks.\n\n\"Uh huh, just move a sec,\" She tells him. He moves back and watches in awe as she skims her shorts down her long tan legs. \"That's better,\" She states as she giggles at his reaction to her body.\n\n\"That's perfect,\" He states. They go back to kissing and after a few moments, Ray extricates himself from between her legs to kneel on the floor.\n\n\"Where are you going?\" She asks.\n\nHe kisses her then slides his hand down her taut tummy until he's cupping her womanhood. \"More room this way,\" He says marveling at the wet heat he can feel coming from her.\n\n\"Oh fuck,\" she shouts as his fingers bump her clit.\n\n\"Tell me what to do,\" he whispers in her ear before sucking its dangling lobe into his mouth.\n\nStaci moans in pleasure then reaches down to guide his fingers. \"Like... this,\" She urges him.\n\nHe does as she guides him and soon she's bucking her hips and moaning in pleasure.\n\n\"Ray... Ray... oh God Ray,\" She groans as he continues.\n\n\"You're so beautiful Stace,\" he tells her.\n\n\"Kiss me,\" she orders and once he complies, she pushes his hand away from her throbbing sex.\n\n\"Did I... did I do something wrong,\" he asks.\n\nShe shakes her head and she begins to rub herself as he watches enthralled. \"Ray... will you... will you kiss me... down here,\" She asks.\n\n\"Don't deny her,\" he hears in his mind so he nods. \"I'd love to.\" He answers.\n\n\"Oh god,\" She sighs as he kisses his way down her fluttering stomach. His tongue slides down her covered slit and he tastes her arousal through her underwear. Staci tries to direct him but her words are broken up amid shouts of bliss.\n\n\"Just... like... that,\" She manages to convey before burying her hands in his hair, her hips bucking against his face until she explodes while shouting his name.\n\n****\n\nThe slamming front door announces Jessica return at a little after eight that evening.\n\n\"Jessica, what's wrong,\" Mr. Golden asks as she storms into the living room.\n\n\"Nothing,\" she answers curtly.\n\n\"Well your mother is looking for you. She's in the kitchen I believe,\" he tells her.\n\nWhen she goes into the kitchen, the first thing she sees is a large arrangement of flowers sitting on the counter.\n\n\"Those are pretty,\" Jessica says to her mom.\n\n\"I certainly think so,\" Dr. Golden answers. \"Did you find out what you needed?\"\n\n\"I found out some stuff but as to how much of it is true is up for debate. I guess that it's too late to go see Jake now huh?\"\n\n\"He looked pretty tired when he was here a little while ago so my guess is yes.\" Dr. Golden answers.\n\n\"Jake came by here?\" Jessica asks.\n\n\"Yes and bearing gifts,\" She tells her. \"He brought me these.\"\n\n\"He did,\" she asks looking at the flowers.\n\nDr. Golden nods. \"They're his \"thank you\" for my helping him last night. Now come with me, I've got something to show you upstairs.\"\n\n\"Did you tell him who I was out with?\" Jessica asks.\n\n\"I just told him that you were out.\" She answers.\n\n\"Thanks mom,\" Jessica says as she follows her mom but they're stopped by Sarah when they're passing her door.\n\n\"Jessica, you missed Jake,\" Sarah informs her.\n\n\"I heard that Sar-bear,\" Jessica answers putting on a smile for her sister.\n\n\"He brought me this,\" Sarah states thrusting a plush shark at her. \"His name's Terry the Tiger Shark. Did you know why they call them that?\"\n\n\"Do you,\" Jessica asks giggling at Sarah's eagerness.\n\n\"Uh huh,\" Sarah answers and points to the stripes on her plush shark. \"See, they have stripes and really sharp teeth just like tigers.\"\n\n\"Just where did you learn so much about sharks,\" Jessica asks.\n\n\"Jake told me all about while he was here.\"\n\n\"Sarah, I need to show Jessica something in her room but you can tell her all about it in a few minutes okay?\" Dr. Golden asks.\n\n\"Promise,\" Sarah asks and Jessica gives her a pinkie promise.\n\nDr. Golden opens Jessica's door and flips on her light. Jessica looks in a sees a vase of lilies sitting on her desk.\n\n\"Those are your thank you gift.\" Dr. Golden states.\n\n\"Lilies,\" Jessica says stunned. \"He... he brought me lilies? He remembered.\"\n\n\"What did he remember sweetie,\" Dr. Golden asks.\n\nJessica steps over to the vase still looking at them when she answers. \"He made this dumb joke about throwing roses at me and I told him that I prefer lilies over roses. He brought me lilies.\" She reiterates.\n\n\"Why would he throw roses or lilies at you?\" Dr. Golden asks.\n\nJessica explains the reason and Dr. Golden laughs. \"That is too cute. I can't believe he remembered something from a couple of weeks ago.\"\n\n\"I can't either,\" Jessica answers. \"That was really sweet of him and I missed it. I was at some stupid party and I missed it.\"\n\n\"Party,\" her mom asks confused.\n\n\"I agreed to go to one with Patrick if he told me what Jake was hiding from me.\" Jessica explains.\n\n\"Oh Jessica,\" her mom sighs.\n\n\"Yes, I know it was stupid and I shouldn't have gone but I'm kind of glad that I did because I now know exactly how Jake got hurt.\"\n\n****\n\n SUNDAY \n\n\"Jake, do you need any help,\" My mother calls out from downstairs.\n\n\"I think I'm getting it, thanks,\" I call back as I slip my arm carefully from the sling and into the arm of a button up shirt. Once I have the shirt in place and my sling back on I take a moment to allow my shoulder to stop throbbing.\n\n\"You look like you need help,\" A voice says from my doorway.\n\nLooking up I find Jessica standing there with a serious look on her face.\n\n\"You're here early,\" I note as I begin to button up.\n\n\"We need to talk Jake,\" She states.\n\n\"The four words no one ever wants to hear. Nice way to start my day,\" I tell her.\n\n\"I'm serious Jake,\" she says though I see her eyes stray from mine to my slightly exposed chest for a second.\n\n\"I can tell,\" I answer. \"So talk.\"\n\n\"Not here, I want you to take me to the drive in.\"\n\n\"Jess, that's really not a great idea.\"\n\n\"We don't have to climb it, I just... I promised your mom that I'd get you out of the house more so this is me getting you out of the house.\"\n\nFor a moment, I nearly continue the argument but something in her eyes stop me so instead I nod. \"Fine,\" I answer.\n\n\"What do you need to take,\" She asks.\n\n\"Grey bag, in my closet on the right,\" I tell her.\n\nShe hefts the bag over her shoulder then follows me downstairs. My dad is seated at the dining room table reading the morning paper while mom is in the kitchen cleaning up the breakfast dishes.\n\n\"Mrs. Gibson, I'm taking Jake out for a little while if that's okay,\" She tells my mom as we stop in the kitchen.\n\n\"That's fine dear,\" Mom tells her. \"He could use some fresh air I think.\"\n\n\"Hi Mr. Gibson,\" Jessica calls out with a wave.\n\nDad grunts in response and goes back to his paper. Jessica gives me a confused look but I just shake my head.\n\n\"Mom, I should be back soon,\" I tell her.\n\n\"By lunch at least,\" Jessica adds.\n\n\"Well call if you're going to be later or if anything changes and be careful in that old place.\" Mom tells us.\n\n\"We will Mrs. Gibson,\" Jessica assures her then leads me out to her mom's waiting SUV.\n\n****\n\nI input the general location into the GPS while Jessica is backing out of my driveway.\n\n\"What is it that we need to talk about?\" I ask.\n\n\"Not until we get there,\" She tells me.\n\n\"So we're just going to sit here in this awkward silence until then?\" I ask as she makes a left out of my neighborhood as instructed.\n\n\"We'll just talk about something else until then,\" She states.\n\n\"Such as,\" I ask.\n\n\"Such as, how are you feeling,\" She asks.\n\n\"Awkward,\" I answer without missing a beat.\n\n\"Funny,\" She states.\n\n\"Hey you asked,\" I point out.\n\n\"Yes and I ran right into that answer but seriously how are you?\" \n\n\"Sore, confused, angry, anxious but also a little relieved,\" I answer her.\n\n\"Whoa, okay that's a little more than I expected,\" She tells me. \"What are you angry about?\"\n\n\"Let's not go there Jessica,\" I tell her.\n\n\"It might help to talk about it,\" She says. \"I know that not being able to play football for awhile sucks but you'll be back in no time.\"\n\n\"That's the part I'm relieved about.\" I state.\n\n\"Really,\" She asks.\n\n\"Not remembering throwing that pass to Ray that won us the ballgame scares the hell out of me,\" I answer her. \"I'm kind of glad to be done with it before I do anymore damage to myself.\"\n\n\"Oh,\" she answers. \"Then what are you angry about?\"\n\n\"Do you see that dirt road off to your right? Take that,\" I point out instead of answering.\n\n\"Is it me,\" she asks after making the turn.\n\n\"Maybe angry was the wrong word,\" I tell her.\n\n\"Then what's the right word?\"\n\n\"Inevitable,\" I answer.\n\n\"That doesn't make sense,\" she states.\n\n\"Doesn't it,\" I ask. \"I play the game of my life and they lower the boom on me. They messed up shoulder, messed up ribs, a concussion that's put an end to my season. I meet an incredible girl that's smart and stunningly beautiful but now they've taken her away too. It was inevitable. I'm not supposed to come out on top and for a couple of amazing weeks I forgot that. They took this weekend to remind me.\"\n\nJessica has brought the SUV to a stop just outside a dilapidated fence that closes off the drive in.\n\n\"Is... is this it,\" she asks.\n\n\"I think that's pretty clear don't you?\"\n\n\"I meant is this the drive in,\" She corrects.\n\n\"It is but what's the point Jess,\" I ask. \"Why did you have me bring you out here? You could have done this via text or at school on Monday. Why are we here?\"\n\n\"From what you're saying I know that you know that I was with Patrick last night but it's not what you think Jake. I promise you that it's not and that it never was.\" She tells me. \"I wanted to know what you were keeping from me. I wanted to know what was going on between you and Patrick and why none of our friends would talk about it.\"\n\n\"So he explained it all then,\" I ask.\n\n\"He told me,\" She answers then gets out of the SUV. I follow her out and over to the fence. \"How do we get in?\"\n\nAfter showing her the hole in the fence and leading her through the underbrush until it opens up to the old parking lot.\n\n\"Wow,\" She exclaims looking up at the large and mostly intact screen.\n\n\"It's something isn't it,\" I ask.\n\n\"It's amazing,\" she states. \"You can really climb it?\"\n\nI point towards a door at the base and nod. \"There's stairs inside that take you up to the top.\"\n\n\"Cool,\" She nods. \"Let's go.\"\n\n\"Jess,\" I begin to say but she interrupts me.\n\n\"I'll explain when we get to the top. You've trusted me this far so I'm asking you to trust me just a little longer. Can you do that?\" She asks then gives me a smile.\n\n\"The way you wield that smile of yours isn't fair. Do you know that?\" I ask shaking my head.\n\n\"I do,\" She answers then makes for the door but I stop her.\n\n\"Hold up, you need a few things first.\" I tell her. She stops and I take the bag from her. I open it and hand her a headlamp, a surgical type paper mask and a blue hooded jacket.\n\n\"Jake, it's nearly ninety degrees out here. I don't think I'll need a jacket.\" She points out as she slips the headlamp on.\n\n\"Bats roost in there,\" I tell her. \"The hood will keep them out of your hair if we spook'em. There are also the millions of cobwebs in there not to mention what drops out of bats from time to time.\"\n\n\"Ew,\" she shivers. \"I'm going to need a shower after this aren't I?\"\n\n\"Between the webs, bats and the possible asbestos inside I'd say that's a must but then we don't have to go up.\" I point out.\n\n\"I didn't come out here to not go Jake. Besides we have a talk that we need to finish,\" She states as she pulls on the jacket. I help her tuck her long hair away so no strands are loose and get another smile before I back up. \"Can you do this with your shoulder and all?\"\n\n\"I've never had to put this stuff on one handed before but the climb itself shouldn't be a problem.\" I state.\n\n\"Good thing I'm here then,\" She says then proceeds to help me get my headlamp on and surgical mask affixed.\n\n\"There's not a jacket for you.\" She points out after rummaging through the bag and coming back with just an old ball cap.\n\n\"The ball cap's fine,\" I tell her. As I tug it on, the last time she saw me in a cap flashes in her mind causing her to smile. \n\n****\n\nAfter a few minutes ascending the metal stairs, we reach the hatch to the upper level without disturbing any bats. Jessica helps me shove the wooden attic like door open.\n\n\"This place is great,\" She exclaims as we climb back out into the sunshine.\n\n\"You haven't seen anything yet,\" I tell her then nod off to our right.\n\nShe turns spotting the small lake just a few hundred yards out into the woods. \"When are you taking me there?\" She immediately asks.\n\n\"Don't we have a talk to get to,\" I ask nodding towards a pair of lawn chairs that have been here since my sophomore year.\n\nShe nods and takes a seat. \"So, you know that I talked to Patrick and I got his version of what is going on between you two. Now I want you to tell me the truth of it all.\"\n\n\"Is there some reason that you think Patrick didn't tell you the truth,\" I ask.\n\n\"Because I don't consider myself a horrible judge of character,\" She answers simply.\n\n\"You don't huh,\" I ask.\n\n\"Nope,\" She answers while staring out at the lake. \"So tell me about this girl in kindergarten.\"\n\n\"Wow, he really went that far back,\" I ask.\n\n\"Yep,\" She answers.\n\n\"Okay so one day at lunch Molly Callahan came up to where I was sitting and told me that she wanted to kiss a boy. It took me a minute to realize that she meant me but she was so matter of fact about it that I agreed. It didn't hurt that she has this curly, flame red hair and this cute splash of freckles across her nose.\" I tell her.\n\n\"She sounds cute,\" Jessica comments.\n\n\"She was probably the cutest girl in class,\" I add. \"Anyway recess starts and Molly makes a beeline right to me, grabs my hand and starts pulling me towards the slide. We didn't make it five steps before Mrs. Roseland grabs me by my shoulder stopping us. She wasn't happy to say the least. So I got in trouble and had to spend the next two months worth of recesses inside practicing writing.\"\n\n\"Aw, that sucks,\" Jessica says. \"You never got to kiss Molly then?\"\n\n\"I didn't but Patrick did.\" I answer. \"The room I had to spend recess in had a window that overlooked the playground. The next day I watched him take Molly behind the slide and kiss her. Looking back, I would swear that he did it just to show me that he could but I know how crazy that sounds.\"\n\n\"Does it,\" Jessica asks noticing a pattern in Patrick's behavior.\n\n\"Does it really matter,\" I ask. \"What do you want to know about next?\"\n\n\"Well he mentioned something about you sabotaging his science experiment in middle school.\" She shares and I laugh.\n\n\"I wish I had,\" I tell her. \"He still won anyway despite his baking soda volcano not doing anything.\"\n\n\"How did he win if his project didn't do anything?\"\n\n\"At the last minute the principal decided to bring in different judges for the science fair. One was a car dealership owner, another was a sheriff's deputy and the other was the principal himself.\"\n\n\"Yeah but still even they wouldn't vote for a project that failed, would they,\" She asks.\n\n\"They would when they were all on Patrick's dad's payroll.\" I tell her.\n\n\"No way,\" Jessica exclaims.\n\n\"The dealership guy sold a few cars to Patrick's dad's company a few days after the fair. The deputy ran for sheriff the next year and can you guess who made a major contribution to his campaign?\"\n\n\"All that just to win a middle school science fair,\" Jessica asks.\n\n\"Science fair winner looks good on college transcripts or so I've been led to believe and the Greene's hate to lose at anything,\" I tell her then motion towards my injured arm, \"in case you couldn't tell.\"\n\n\"You know,\" Jessica asks looking surprised.\n\n\"I have my suspicions but it's not like it takes a genius to figure it out. Patrick probably told Jamie to give me a shot at the end of the game and Jamie, as usual, went a little overboard.\" I explain.\n\n\"You call that \"a little overboard,\" She asks nodding at my sling.\n\n\"They didn't break any bones,\" I point out.\n\n\"Not funny,\" she states.\n\n\"It's a little funny,\" I answer. \"So where does that bring us to?\"\n\n\"Jenny,\" she answers.\n\n\"Of course,\" I sigh. \"What do you want to know about her?\"\n\n\"The end is all he told me about so I guess that.\"\n\n\"Patrick threw an after prom party last year. Jenny wanted to go to it but I didn't for obvious reasons. She got very insistent about it leading up to prom. I ended up telling her that if it was that important to her then she should go but I wasn't going with her. She dropped it after that or at least she did until we got to prom. Patrick strolled over to us and asked her if she was still coming. It took almost a half a second to tell him yes. I told her to have a good time and I left.\"\n\n\"So do you what happened at the party,\" Jessica asks.\n\n\"The whole school knows what happened,\" I answer a little angrier than I should. \"I've heard that it was game of Truth or Dare that got out of hand but I think that was told to me just to spare my feelings because everyone knows what happens in Truth or Dare doesn't really count.\"\n\n\"Sarcasm suits you,\" She points out.\n\n\"It's been a good defense mechanism for me over the years.\" I tell her then go on with the story. \"We officially broke up though I considered us broken up when she left the prom with Patrick instead of me. I spent the next month of school being the butt of about a million jokes and everyone whispering behind my back. Sometimes I think Jenny had the right idea about changing schools.\"",
        "\"Well I for one am glad that you didn't Jake,\" She says patting my hand.\n\n\"Yeah because who would have shown you around and told you about Mrs. Harper's extra credit,\" I ask with a grin.\n\n\"I'm being serious Jake,\" she tells me then looks out at the lake and sighs. \"We should be getting back. I promised your mom I'd have you back by lunch.\"\n\n****\n\n\"You know, you never told me about how my version of events lined up with Patrick's.\" I tell her as we begin driving away from the drive in.\n\n\"Jake, I know now that you could have lied about all of it and it really wouldn't have made any difference to me.\" She answers looking over at me. \"I knew who you were the moment my little sister took you to her room. You went right along with her and didn't treat her like some dumb little kid you had to endure just to get into my pants. And before you ask, yes that's happened before, no they didn't succeed, and yes I got my revenge.\"\n\n\"I'm sorry. I'm glad and good for you.\" I answer garnering a smile from her.\n\n\"This smile doesn't mean that I'm not mad at you Jake,\" She warns me.\n\n\"But you just said...\" I begin to say but she stops me.\n\n\"I know what I said and the reason that I'm mad is because you could have told me all of this stuff way before now and avoided all of this drama.\" She explains.\n\n\"I was having too much fun being around you to bring any of that up.\" I state.\n\n\"There you go again being all sweet again,\" she sighs as we pull to stop in my driveway. \"Jake, I wasn't planning on dating anyone this year. I didn't see the use in it since I'll be leaving for college in the summer so what's the point? That said; you are making it very difficult for me to stick to that plan.\"\n\n\"So we're just staying friends,\" I ask confused.\n\n\"For now,\" She answers biting her bottom lip. \"I just need a little time to wrap my head around this if that's okay with you Jake?\"\n\n\"I'd rather have you as my friend than nothing at all Jess,\" I tell her and manage a smile.\n\nShe smiles back and nods. \"Good. So I'll call you tonight to see how you're feeling then and see you tomorrow then?\"\n\n\"That sounds like a plan.\" I answer. I get out of the SUV and make towards my front door but before I get too far she calls out to me.\n\n\"Jake, I almost forgot something,\" She says waving me back.\n\nI step over to the driver side window. \"And what would that be,\" I ask.\n\nShe leans out and gives me a soft but too quick kiss on my lips. The brief brush of her lips warm me like a ray of sunshine on a cold winter day. \n\n\"That... that's my way of thanking you for my lilies,\" She explains as a blush creeps up her cheeks. I can tell that she felt the same warmth I did and it's all I can do not to lean in and kiss her again but I tell myself that she wants to wait. I just hope she doesn't want to wait too long.\n\n****\n\n Thanks to all the readers for their patience during this story. It's taking me longer to write than I thought that it would. I'm trying to write in every bit of spare time that I can get. I appreciate your comments, feedback and votes. You're the reason I'm still typing away. "
    ],
    "authorname": "AuroraIncident",
    "tags": [
        "virgin",
        "oral",
        "bullies",
        "high school",
        "football",
        "confession",
        "foreplay",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/new-girl-in-town-pt-05"
}