{
    "title": "Women's Studies Ch. 15",
    "pages": [
        "*** Kennedy ***\n\nKennedy's hand brushed against Abigail's as they walked side by side down the wide corridor. Feeling guilty, she forced her thoughts back to the moment. Skylar had told them that a signal from the plane's transponder popped up on a receiver, but only for a moment. Surely that meant someone was still out there to rescue. She refused to think of it as merely a malfunction, or some sort of glitch. As to why the advisors weren't taking it more seriously, she hadn't a clue.\n\nHer fingers touched at her back pocket unconsciously. The picture of her and her father rested there. It was still weird thinking about him so, her father. Once she had found all of those pictures of her in that secret room, all of her reluctance to think of him as her father evaporated. He might not have been there physically, but it was clear that he loved her. That thought threatened to fill an empty place inside of her, and she held onto it, trying to shut out another emotion. Guilt.\n\nHer father was still missing, but after last night's events, and waking up next to Abigail in the morning, she felt as if she were walking on a cloud. She knew she should have been focused solely on finding her father, but that was a strange new concept. Abigail, on the other hand, was something familiar and precious that she had thought she'd lost. Knowing that their relationship was just as strong as ever lifted her heart.\n\nEven Skylar walking in on them naked in the same bed couldn't brush away that sensation. There was something there that Kennedy wasn't seeing though. How was Skylar taking their relationship so casually? You would think she saw siblings sleeping together all the time.\n\nAs they approached the door to the Grand Parlor that had been set aside for these meetings, loud voices could be heard from inside. \"Do none of you have any balls?\" Skylar's commanding voice came. \"I would have thought between the five of you, you could put a set together.\"\n\nWithout hesitating, Abigail swung the door open and strode in with a commanding grace. As imposing as she was, it didn't slow their argument one bit.\n\n\"You listen here!\" an older man in a gray suit with a receding hairline spoke, his face red with anger. \"We've had enough of your mouth! You have no say in how we conduct this search. Your authority begins and ends with protecting those girls,\" he said firmly. \"Everything we know puts the crash site in quadrant 26F. From their last known heading, and the flight path, it puts them here.\" He jabbed his finger on the map. \"We're not moving the entire search just to investigate some static.\"\n\n\"I've heard that there has been a new development, Dillan,\" Abigail said too casually, addressing the man. Her sudden appearance seemed to have startled them as several men jerked around at her voice. Not Skylar though, she was an unshakable rock.\n\n\"I'm sure what you've heard was embellished,\" Dillan said carefully. \"It was just a glitch from the receiver.\"\n\nAs he spoke, Abigail walked across the room and took a seat in what was obviously her father's chair facing away from an empty fireplace. It was the largest and most extravagant chair in the room, and certainly the most comfortable. After she sat, she studied the five men for a moment before speaking again.\n\n\"Our father is missing, and there was a glitch with the transponder...and you're not going to look into it?\" Abigail said flatly.\n\n\"The search area...\" another man, slightly younger in his years, said stepping forward. \"Your father has to be there. If we move airplanes and helicopters to another location, we could risk missing your father.\"\n\n\"Hire more planes, more helicopters,\" Abigail offered.\n\n\"Miss, it's not the aircraft, it's the snowstorms. We have every pilot willing and capable of risking those conditions,\" Dillan explained, defending his decision to stay the course. \"I've personally gone over the data that we recorded, as have other experts, and they all agreed that it must have been a glitch. It wasn't even a real signal. Look for yourself,\" he said quickly grabbing a tablet.\n\nAs uncomfortable as it was to be in the room, presenting herself to them as George Lockwood's daughter, Kennedy moved closer to Abigail so she could watch from her shoulder.\n\nThere was a map overlay and the recording was set to a loop. Dillan was right, there was something wrong with the signal that popped up on the screen. Instead of the expected blip pinpointing a location, it was more of a fuzzy blob that covered many square miles.\n\nIt wasn't until the eighth viewing that Kennedy found herself speaking up. \"What's wrong with that signal? Why does it look like that?\"\n\n\"It looks like that because it's not a signal, it's a glitch,\" Dillan said with an exasperated sigh.\n\nUnwilling to let Dillan crush her hope, Kennedy looked to Skylar. She didn't know a thing about this man, but she trusted Skylar, and her judgment.\n\n\"The transponder could be damaged,\" Skylar offered with a wave of her hand. \"It could also be iron deposits, or weather. There is really no telling. We don't know exactly where they went down, so that blip is as good of a place as any to look.\"\n\n\"Experts have marked this quadrant,\" Dillan protested. \"Experts! Why don't we leave it to them to know what to do?\"\n\n\"If I had a dollar for every time an expert fucked up when I was in the Marines...\" Skylar said shaking her head. \"Well, I would have more money than you.\"\n\nDillan spared an unforgiving look for Skylar before turning his attention back to Abigail. \"I'm sorry Miss, but I can't in good conscience move the search. I just can't.\"\n\n\"Could we?\" Abigail asked thoughtfully. \"Could we make that decision?\" she said nodding to Kennedy.\n\n\"You could,\" he said hesitantly. \"but I would recommend staying the course. These people know what they're doing.\"\n\nAbigail stared silently at the empty fireplace for a few moments. \"You can leave us now. My sister and I have to discuss the matter,\" she said, dismissing them. \"Skylar, you can stay.\"\n\nOne by one they filed out of the room without another word. Dillan did look back as he was leaving, the argument for staying the course plain on his lips even if he didn't speak. The moment the door clicked shut Abigail spoke.\n\n\"What are our options?\" she asked Skylar.\n\n\"We have three as I see it,\" she explained, taking a seat in the chair Dillan had once occupied. Lounging back, she crossed her feet casually, even discussing such a serious topic she appeared cool and collected. \"We can stay the course, move the entire search, or only move a few resources to check out the new area.\"\n\n\"How many aircraft do we have total?\" Abigail asked. \"Is splitting them up a viable option?\"\n\n\"It's hard to say,\" Skylar said. \"Dillan wasn't wrong, there is risk involved. If your father is in 26F, moving planes and helicopters could slow his rescue, or they could miss him entirely. It's hard enough to see anything with the storms. Then again, if he isn't there at all, all we've been doing is wasting time. The decision is up to you though. You know what I think.\"\n\nIt took longer than Kennedy thought for them to actually make a decision. It didn't even come down to the logistics of how many aircraft would be diverted. Abigail wouldn't make the decision unless Kennedy agreed, and it terrified her. For that amount of responsibility to be dropped into her lap, a person's life, it wasn't something she was prepared for. If she guessed wrong, her and Abigail would lose a father. When the decision was actually handed to her, she began to understand why the advisors were hesitant to change the search area. None of them wanted to hold the responsibility for failure.\n\nIn the end, it was Skylar's calm confidence that made her agree. It was a strange thing to put so much faith into someone she barely knew, but there was just something about Skylar, now that she had dropped the party girl act, that made you want to trust her.\n\nWhen all was finally settled, six planes and four helicopters were reassigned to the new search area to look for any signs of their father or the airplane. It was only a small fraction of their resources, but it was enough to start. While the advisors didn't agree with the action Kennedy and Abigail had taken, they all seemed relieved that they were no longer responsible for the decision.\n\n*** Lexi ***\n\nI had spent hours in that brightly lit holding cell with its concrete walls and steel benches. I had no clue as to exactly how long though. It surely couldn't have been more than a day, but it felt like a week. Without any windows, or a clock, time seemed to drag on with a slow cruelty.\n\nHow had this happened? Two weeks ago, I was the happiest I had ever been. I felt like myself more than I had ever felt in my entire life, and my friends...my friends knew everything about me and loved me still. How was it that I was arrested and named a pervert, and someone like Decker was allowed to walk free?\n\nThinking of Kennedy and Abigail only worsened my mood. I still hadn't heard from either of them, and the last I had seen on the news, Mr. Lockwood was still missing. I had wanted to use my phone call to try and reach one of them, but with them dealing with their own problems, I didn't want to add my own to the mix. Instead, I called my sister, Audrey. As fate would have it, it went straight to voicemail. She either ignored an unrecognized phone number from the police station, or she just couldn't answer. How was she supposed to know that it had been the most important phone call of my life so far? I left a message, explaining what had happened, all the while a police officer watched on with amused scrutiny.\n\nAs far as the police were concerned, I was a filthy pervert, no matter what I said, or what I acted or appeared like. I am a woman, was only met with scornful laughter, even as I was ushered into a large open cell with half a dozen men, most looking like hardened criminals. They all lit up like it was Christmas as I was shoved in with them, their eyes crawling all over my body.\n\n\"Good luck,\" the officer whispered to me before addressing the other men in the cell. \"Be careful with this one, he's got a cock under that dress!\" With that, he slammed the door closed, the sound echoing through my bones like the closing chapter of my life.\n\nTheir hungry gazes turned skeptical as they undoubtedly tried to see the man underneath, but as if they all had some secret conversation through the silence, they all looked away at nearly the same time. Them studiously ignoring the elephant in the room didn't exactly put me at ease, but it was far better than the other options.\n\nOne by one, men left, and a few more came in. When the newcomers arrived and saw me, they gained that glow in their eyes, but a not so subtle shake of the head from a heavy-set man with tattoos set everyone straight. I wasn't sure if he was protecting me, or the other men from embarrassment, but I was as grateful as I could have been while sitting in a jail cell. I wasn't sure what I would do once he left, and I was left alone with only the newcomers that hadn't heard the officer out me.\n\nEvery so often that officer would stroll by and peer into the cell, and every time he looked disappointed to see that I wasn't being raped, or at the very least a mass of bruises.\n\nMy stomach was gnawing at my insides from hunger when I heard the unmistakable click-clack of high heels making their way down the hall outside. There was a scraping of metal and a loud thunk as the lock turned before the door slid open. Standing outside was my tormenting officer, and a tall woman in an expensive skirt suit and power heels, holding an expensive briefcase.\n\n\"You put her in with the men?\" she asked in a scandalized tone.\n\n\"He's a man,\" the officer replied, emphasizing the word.\n\n\"Get her out of there,\" she demanded coolly as she reached into her purse to pull out a small recording device. \"Friday, 11:47am, client Alexis Allen is found to be in a cell accompanied by several men. Note that I passed two empty holding areas on my way to her cell,\" she finished, clicking off the recorder.\n\n\"Wait, what are you doing?\" he asked defensively as he reached for her recorder.\n\nShe recoiled only slightly from his attempt and stared him down defiantly. \"If you reach for my property again, without legal cause, I will file a formal complaint with your Captain, the DA, and anyone else I can think of, and once I have your badge, I'll stop being civil. I will hire six private investigators to comb through your life and find every last thing you've ever tried to hide, and after that I might just make a few phone calls to some people at the IRS and make sure you receive a thorough audit every year for the rest of your life.\"\n\nBy the time she was done with her calm tirade, he was frozen on the spot, until he finally withdrew his hand.\n\n\"And if you must know, I'm making notes for what I imagine will be a splendid misconduct lawsuit against your department.\" She paused with a satisfied nod of her head when she noticed the sick look on his face. \"Come along Miss Allen, we have a long day ahead of us, I'm afraid.\"\n\nIt was only when she addressed me that I realized I was still seated. I quickly got to my feet and followed her out, only making a quick glance back at the tattooed man who was still lounging on a bench in the corner. I had to suppress a shudder, not for how terrifying he looked, but for the fact that whether or not he intended it, he was the only reason I was still able to walk out of that cell, and not being carried out on a gurney, or worse.\n\nDown the long hall, I followed the woman and the sturdy clacking of her heels. Everything about her was immaculate, from the fresh press of her suit and blouse, to the perfectly placed curls of hair streaming down her back. Confidence and command emanated from her, letting everyone in sight know that she was in charge. The officer must have felt it as well because he followed behind us, only closing the distance long enough to open the next set of security doors before falling back again.\n\n\"I don't mean to sound ungrateful, but who are you?\" I asked.\n\n\"I'm Patricia Shaw, and I'm your lawyer,\" she said coolly. \"Don't answer any questions without me present, and if you have any problems or questions about anything call me first.\"\n\n\"Did my sister call you?\" I asked.\n\n\"Your professor, Gale...or Mrs. Holland as you know her,\" she replied. \"She was afraid you might have gotten into a bit more trouble than the two of you could handle,\" she said with a slight shake of her head. \"In here.\" She opened the door to the women's restroom.\n\nI followed her inside, and without wasting any time, she set her brief case on the counter and clicked it open. Resting between two thick folders, lay a carefully folded dress: black with silver pinstripes slashing across the bodice and skirts. Lifting it by the straps, she held it out for me.\n\n\"Put this on. I think I have a pair of heels that will fit you as well. And we need to do something about your hair.\"\n\nI was a bit confused why we weren't running out of this police station as fast as we could, and she must have seen it in my face.\n\n\"Somehow the press got ahold of this. There were at least six reporters outside when I came in. With Abigail Lockwood being your roommate, and the allegations of perversion on your part, you have become quite the story,\" she sighed. \"It's not the coming out party anyone would wish for, but it's the one you're getting.\"\n\n\"Once we step outside, every picture they snap, and every word they write will be the world's first impression of you. Are you a boy in girls' clothing, or are you a woman? Because right now, you're pretty enough, but you look and smell like you've been crawling around the floors of a men's locker room.\"\n\nI was in a daze as I took the dress from her, hardly even noticing the expensive feel of the silk. When I decided to fight back, I had known that my secret would be out, that people would finally know, but I had no idea that everyone would. I had already pretty much written my mother off, she was a horrible woman, but she would know. People I knew growing up, and everyone from high school would know. Potentially everyone I would ever meet from this point on would know. I was happy with who I was. I had hoped for a day when I could just be myself, but this felt like too much, and all too fast.\n\nPatricia continued giving me instructions as I donned the dress and slipped into a pair of black pumps, and even while I touched up my makeup and hair. I hardly heard a word of it. The only thing that held my focus was the cold feeling I had inside.\n\nOnce I was finished, she gave me a quick once over before giving a nod of approval. With nothing more that we could do, she hooked her arm in mine and escorted me out of the bathroom and towards the exit of the police station. Once the doors opened, there was only a brief pause before chaos ensued. The sounds of almost a dozen camera shutters flashing were drowned out by many voices calling out at once.\n\n\"Why are you dressed as a girl? Are you really friends with Abigail Lockwood? Does she know you're a pervert? Do you think you will be going to prison?\"\n\nThe questions were a flood, and some of the things they were asking were nearly staggering. Someone asked if I was trying to sleep with all the girls at Mayweather. Patricia never flinched. Her arm firmly around mine, she guided me through the mass of reporters and to a car waiting just out front for us.\n\n\"You can expect more of that,\" she sighed once we were both safely in the back seat and the driver was pulling away. \"You did great though. Never answer their questions, and if you can, don't even acknowledge that they exist.\"\n\n\"Where are we going?\" I asked the first thing that popped into my head.\n\n\"First, my offices, and after that I've had a nice room set up for you at a hotel,\" she informed me.\n\n\"Not Mayweather?\" I knew it was a long shot that they would let me stay.\n\n\"I'm afraid not. Not for now at least,\" she said gazing out her window. \"They had some staff collect what they could of your belongings from your closet shortly after the police took you away. I've had the boxes brought to your hotel room. If anything is missing, just make a list.\"\n\nPart of me knew it was just a school, but it had grown to mean so much to me. It was where I found out who I truly was, where I found my friends, and where I learned that family isn't something you're born with, it's something you find along the way. Everything good in my life happened because of that place. Now it was gone.\n\nThe law offices of Shaw and Teller were located on the 18th floor of a skyrise in downtown Phoenix. I hadn't taken the time to make any expectations, but it was more than I would have imagined from a lawyer who just showed up out of the blue. Black granite tile swept out from the elevator, opening up into a wide entryway. To the left and right of the reception desk spread wide hallways lined with large offices made of glass and steel. Expensive furniture dotted a lavishly open waiting area that mocked the expansive space allotted for such a place. Clearly, aesthetics had been prioritized above economy.\n\nPatricia led me into a conference room with a long mahogany table and fogged glass walls. She quickly took a seat, setting her briefcase on the table, and opened it as she gestured me to take the seat next to hers. Before she could even speak, a younger man with boyish looks rushed in to greet us.\n\n\"Here are the documents you asked for,\" he said, slightly out of breath as if he had run quite a distance. \"Both the Charter and the Bylaws. I'm still looking for some kind of precedence.\"",
        "\"Miss Allen, this is Ryan, my associate,\" she said offhandedly as she scanned the papers. \"If for whatever reason you can't reach me you can call him as well.\"\n\n\"It's a pleasure to meet you, Miss Allen,\" Ryan said, giving my hand a quick shake.\n\n\"I'll need you to look up anything you can about intentional endangerment of a detainee by law enforcement, as well as any lawsuits that succeeded,\" she added, flipping to another page.\n\n\"In Arizona or the whole country?\" he asked.\n\n\"Start with Arizona, but don't be afraid to branch out if you need too. Also look into any misconduct complaints, specifically with the Scottsdale Police Department. Focus on any kind of discrimination,\" she said, setting the papers aside and finally looking up.\n\n\"Are you trying to make a case against them, or just looking for leverage,\" he asked.\n\n\"I'm keeping my options open,\" Patricia replied, dismissing him with a shooing motion.\n\nAfter Ryan left, Patricia turned her attention back to me. \"He doesn't look like much, but he is very good at his job. Now, in order to defend you to the best of my abilities, I need to know everything. If you lie about something, or leave something out, it will only make my job harder, if not impossible. If I don't know what I am supposed to be defending you against, and I'm blindsided...well let's just say I would rather be prepared for anything. So, let's start from the beginning,\" she said, flipping open a notepad.\n\nEverything. I knew she wasn't joking about her need to know, but it was a hard ask. When I tumbled down this rabbit hole, it wasn't exactly with the best of intentions. I hadn't expected to find myself along the way, nor were my intentions perverted by any means. I just wanted to go to college. Life, it seemed, had a way of taking you in directions you didn't expect. It felt even harder to tell her my story than it had been to tell Dr. Price, but with a resigned sigh I began. \"It all started when I received an acceptance letter from Mayweather College...\"\n\nAs my story unfolded, Patricia never gave any clue as to what she thought, her face never betraying emotion. She only listened quietly, jotting down notes as she saw fit. The only things that I held back were about my sister and I, and anything involving my sexual relationship with Kennedy or Abigail, or their relationship with each other. That was nobody's business. Whatever rumors might be spreading, I would not encourage them in the slightest.\n\nBy the time Patricia finished with me I felt wrung out. We had spent nearly four hours going over everything. After I had finished telling my story, she focused back in on certain spots, digging for details, anything that I might have missed. The questions seemed endless, and the whole time I wondered what she was thinking about me.\n\nOn the bright side, Ryan returned with takeout from an Asian Fusion place that I had never heard of. The food was delicious, but then again anything would have been welcome after a night in jail.\n\nOnce everything was said, and documented in Patricia's neat handwriting, Ryan called for a car to take us to the hotel. Having been awake for nearly 36 hours, I hardly noticed where we were, or how I got into that comfy bed. I didn't even remember Ryan leaving before I fell into a thankfully dreamless sleep.\n\n*** *** ***\n\nWaking up in a strange place, when you can't quite remember how you got there, was not a feeling I would recommend. A slight panic set in as I bolted upright, trying to figure out where I was. After my brain began working, everything came flooding back, and I let myself fall back onto the bed in exhausted frustration.\n\nSo many feelings swam through me\u2014fear, anger, shock, shame\u2014as well as others too complex to describe. I wasn't sure what I was ashamed of, but feelings weren't exactly something you can control.\n\nJudging by the light pouring in through the window, it was the next day, Saturday, and at least mid-day already. After fighting with myself about whether or not to stay in bed, suffocating in my emotions, I eventually pulled myself back up and climbed out of bed. The dress Patricia gave me was a wrinkled mess from sleeping in it, and my heels were kicked across the floor. Brown boxes filled with my belongings were stacked neatly on the far end of the large room, containing everything I owned. It took emptying three boxes, all of which were haphazardly filled, clothes mostly bunched up and still on their hangers, before I found my phone charger.\n\nI had to wait a minute before my phone would even power on, but once it connected with the network I was bombarded with a massive stream of voice and text message alerts. My heart immediately leapt, and I quickly searched through them for word from Kennedy or Abigail. From them there was nothing, but it seemed that somehow my phone number had been leaked. Most of the messages were hate mail from people all over the world, judging by their area codes, others were from reporters looking for an interview, and offering money for an exclusive. Buried in all of the chaos, and almost missed, was a single text message from Audrey. It was only two simple words, but in that moment, they meant everything, I'm coming.\n\nWith all that had been happening around me, I had begun feeling more and more alone. I still hadn't heard from Kennedy or Abigail, and with them gone, I felt naked, exposed to the world. Vulnerable. Audrey's text lifted a weight off of me. My problems were still there, but I felt I could breathe a bit easier. My sister was coming to save me, and failing that, to stand at my side as everything came crumbling down. Elated, I immediately called her, and after three long rings the phone answered.\n\n\"Awe shit!\" I heard my sister's voice, followed immediately by the crashing sound of her cell phone hitting the ground. \"Son of a bitch! Hello? Lexi, are you there?\" Wherever she was it was loud, and I was barely able to hear her.\n\n\"Yeah, I'm here,\" I answered.\n\n\"Thank God! Are you okay? You're not still in jail, are you?\" she asked before answering her own question. \"Of course you're not in jail. You wouldn't be calling on your cell phone.\"\n\n\"I was bailed out sometime yesterday,\" I told her.\n\n\"I guess it pays to have friends in rich places, huh?\" she asked.\n\n\"It wasn't Abigail. Her and Kennedy are in Colorado with a whole mess of their own problems right now,\" I explained. \"One of my teachers hired a lawyer.\"\n\n\"That was nice of them,\" Audrey said. \"I heard about Mr. Lockwood on the news, but why is Kennedy there?\"\n\n\"It's a long story. I'll tell you all about it when you get here,\" I said, not wanting to go through it over the phone, especially with all the noise. \"Where are you? It's really loud.\"\n\n\"I'm at JFK, running to catch my connecting flight. I was in Morocco when I got your voice mail,\" she replied. \"Have you seen the news? You've gone viral.\"\n\n\"Shit, is it really that bad?\" I asked. \"There were some reporters outside the jail when I got out, but...I don't know. I thought it was just local news.\"\n\n\"You're not a local news story anymore,\" Audrey sighed. \"I saw your mugshot photo on a TV when I was running past the airport bar. As far as mugshots go, yours is pretty good.\"\n\n\"Thanks, that was the biggest worry on my mind,\" I said sarcastically.\n\n\"You're very welcome!\" she said in an overly sweet tone. Less than a second later she was swearing like a sailor at someone else. \"Out of the way jackass! You think that's the best spot in this whole fucking airport to search through your carry-on? Oh yeah? Fuck you too buddy! Sorry about that,\" she said, her tone changing back to normal. \"I'm gonna have to let you go, I'll be in Phoenix in about four hours.\"\n\n\"Great, I can't wait,\" I told her.\n\n\"Speaking of not waiting,\" she said, her sweet voice returning. I could almost see her puppy-dog eyes through the phone. \"Would you be able to pick me up from the airport?\"\n\n\"Ugh, if I have to!\" I feigned annoyance.\n\n\"You're the best!\" she laughed. \"See you soon!\"\n\nAfter we hung up, I began thinking about what Audrey said about me being on the news. Curiosity quickly overcame me, and I switched on the TV. It didn't take long to find someone talking about me. A lot of it was unkind. Both left- and right-wing outlets were decrying the story of a boy who snuck his way into an all-girls school so he could see naked girls in the showers. Every outlet seemed to be focusing on using the most unflattering picture from my high school yearbook. Just seeing the old me was enough to make me cringe, and if it wasn't, the things they were saying did the job.\n\nOccasionally, there would be a brief shot of me leaving the police station, or the flatteringly good mugshot photo that Audrey had mentioned, but it seemed as if they were more focused on showing the world that I was a socially awkward boy, and not a pretty girl. Frustrated, and growing even more depressed by the second, I shut off the tv.\n\nTrying hard to put that all out of my mind, I began going through the boxes. Those first few were not the exception; all of my things were thrown in haphazardly without any thought. I found my laptop between some dresses and shoes, and my books were scattered between three boxes, and one of the covers was nearly torn off. There were some things missing, and more than a few that weren't mine. With basically three of us sharing a room, it had gotten to the point where closet space was closet space, putting all of our clothes wherever they would fit. I wasn't worried, when Kennedy and Abigail returned, we would sort it out. At least they had the good grace to pack my flat iron and my big makeup case, even if it was upside down.\n\nSorting through my belongings took a lot less time than I thought it would, and with nothing else to do, and no desire to risk the TV again, I ordered some room service and began taking my time getting ready to pick up my sister. I didn't really need four hours, but I still had to scrub off fourteen hours of county jail, as well as find a way to pick up my car, which I was assuming was still sitting in student parking at Mayweather.\n\nWith literally nothing else to do, I began getting ready. I tried to drag it out as long as possible, taking a long bubble bath, and even changing my nail polish on my fingers and toes to a nice ruby red. Three hours later I stood in front of the mirror without a single excuse left to keep me from going outside. I looked perfect.\n\nI was wearing a cute layered black skirt that went down to mid-thigh, with a mystery bustier top. It wasn't something I had seen from Abigail, or Kennedy, but it was mixed in with my things. It was white, with black ribbon lace-ups beneath the cups. It fit my body like a glove and did something to my breasts that could only be called magical. I wasn't falling out, but they looked fantastic. And of course, I couldn't say no to my open toe Louboutin's. I had tried my best with my hair, but it had grown so much since the beginning of the school year. The cute asymmetrical bob was now well down to my shoulders in the back, and teasing into my cleavage in the front. I ended up going with soft, barely-there curls that made the jet-black bottom layer pop against the blonde in a fun kind of way.\n\nThe hair could have been a little better, but with that top...no one would notice if my hair was on fire. Damn that top made me look incredible. Whether it belonged to Kennedy, Abigail, or someone else entirely, they would have to fight me to get it back. I couldn't even stop the smile tugging at my lips as I checked myself out, and I didn't want to. I looked fantastic.\n\nAfter a few more moments of ogling myself, I received a short call from Ryan, Patricia's assistant, letting me know that he was coming to pick me up. I had needed a ride to retrieve my car, and Patricia had said to call if I needed anything. Slipping my phone into a small black clutch (one of Abigail's nicer ones), I took one last look before heading down to meet him.\n\nI had only made it two steps outside of the hotel to wait for Ryan when I was accosted by camera flashes and more questions. The onslaught stunned me. I felt like Bambi staring into headlights. I barely heard what they were asking as they closed in around me.\n\nI should have known better. Patricia had told me that I was a big deal, as far as the current news cycle was concerned, and from what Audrey had mentioned about going viral, but I didn't believe it would lead to all this. It wasn't like I had been the first boy to realize that she was really a girl. I couldn't have fathomed that there would be this much attention all centered on me.\n\nMy initial shock had doomed me. For every second those reporters snapped pictures and shouted questions, more and more bystanders gathered around to watch the scene. Once some of them realized that I was the girl, or boy rather, that had been on the news, the situation turned from unsettling to frightening rather quickly.\n\nOnly a handful of the gathered were shouting obscenities and threats, but it was enough to make me wish I was anywhere else. I also regretted my heels. I wanted to make a run for it, but not in four-inch torture devices.\n\nWith every heartbeat, it seemed like the world closed tighter around me, and I was beginning to feel lightheaded. The shouting voices seemed like they were coming from farther and farther away.\n\nAll of a sudden there was a loud whistle cutting through the noise, and someone shouted my name. My name, not Alexis, but Lexi. The mob around me turned to look, and with that subtle shift of the crowd, I saw him. At first, I thought I had already passed out. There was no way it could be him. He was standing just off the street next to a white motorcycle with blue decals, even more gorgeous than I remembered in his dirt stained jeans and thin white undershirt, damp with sweat and stretched tight across his broad chest and bulging muscles.\n\n\"Trevor?\" I asked.\n\nMy voice was so quiet, I doubted that he could even hear me at that distance. Still, his eyes locked onto mine and I could see a nervousness there, especially as he glanced quickly back to his bike.\n\nMaking a split-second decision while everyone was momentarily distracted, I ran to him as fast as my thousand-dollar heels would allow. I didn't care how or why he was here, only that he was. He must have seen the anxiety all over my face, because by the time I reached him, he was already on the motorcycle and starting it up. Not even thinking about modesty, I hopped on the back, swinging my leg over, and held on tight. As soon as my arms were around him, he dropped the clutch and gunned it, making the tires squeal as we sped away from the hotel, and the prying mob that had formed.\n\nEven after we slowed to a normal speed, I continued to hold onto Trevor for dear life. I still couldn't believe it was him, that he was here. Just when I needed someone the most, he had shown up to rescue me. If I couldn't feel his hard body against mine, or smell that delicious scent, I would have thought it was a dream. I had forgotten how he smelled, but being this close to him again, it brought back a flood of memories, playing them back in even more vivid detail than I had remembered. I felt giddy, and nervous, and like a little girl right before her first date. What did all of this mean? Why was he here? My heart fluttered uncontrollably as I clung to his broad muscled back.\n\nTogether we wound our way down one street and then another. I couldn't tell how long we had been riding, and from what I saw around us, I wasn't familiar with the area. We weren't in the downtown district any longer. Things were a little more spread out here, and quieter. After a while, Trevor made another turn, and finally slowed to a stop.\n\nThe bike tilted slightly as he put down the kickstand. One of his hands grabbed mine, easing my grip from around him as he helped me down before climbing off the bike himself. Nervously, I brushed at my skirt and made sure my top was in place while simultaneously trying to do something with my windswept hair, until I caught Trevor watching with a small smile.\n\n\"Are you all right?\" he asked.\n\n\"I'm fine,\" I answered awkwardly. I didn't even know why this felt so awkward. It wasn't like he didn't know about me, or like we hadn't already spent one of the best nights of my life together. Hell, I had even dreamed about him more than a few times since spring break. Now he was here, like a knight in shining armor. \"What are you doing here?\" I asked, before realizing that I might sound ungrateful. \"What I mean is, why were you outside the hotel...were you...what I mean is...\" I was beginning to feel like a complete idiot.\n\n\"I saw the news, and I was worried about you,\" he explained, saving me from my floundering vocabulary.\n\n\"Uh...yeah. Things have sort of taken a turn for the worst,\" I admitted, trying not to fidget with my skirt, and failing miserably.\n\n\"I've been kicking myself for never getting your number,\" he said, holding out his hand smoothly.\n\n\"Really?\" I asked, smiling up at him.\n\n\"You sound surprised.\" He guided us away from the bike. Somehow my hand was in his, and I couldn't even remember him taking it. \"You made quite the impression.\"\n\nWe were at a park. Green and yellow sunbaked grass spread out in fields, broken up by paved walks. Large trees with sprawling canopies dotted the landscape, bringing the only shade in sight. With the coming summer heat, there were only a few people in sight braving the sun.\n\n\"Oh, you made an impression too,\" I smiled, before blushing at the possible double entendre and quickly changed the topic, \"I didn't know you rode a motorcycle.\"\n\n\"I don't normally,\" he said, walking us toward a bench in the shade. \"It's Zach's bike. I borrowed it to come down here and find you.\"\n\n\"So, are you stalking me or something?\" I asked jokingly.\n\n\"No, of course not! Nothing like that at all,\" he defended. \"I just saw what was happening on the news and wanted to see if you were okay. I had to look on social media for a while to see where you were staying, now that you're not at Mayweather. The receptionist at the hotel wouldn't tell me your room number, or send up a message, so I thought I'd just wait out front to see if I could...Oh my God, I'm stalking you!\" he finished, turning away, running his hands through his hair.\n\nI couldn't help but laugh. The way he rambled, and his embarrassment at how hard he worked to find me, it was a relief to know that I wasn't the only one that felt completely smitten. With Trevor, there was just something about him that cut right through me to my heart. Even if he was stalking me, I couldn't say that I minded. I'd thought about trying to track him down a few times myself. Hearing my giggles, Trevor turned to look at me questioningly.\n\n\"Thank you for coming,\" I said, wrapping my arms around him in a hug to show him that I wholly approved of him coming to find me. After a moment of contemplation, I rose up on my tippy toes, and pulled him down for a kiss. Our lips touched and a warmth spread through me. I only meant it to be a chaste kiss, but his big arms engulfed me, lifting me up. My feet dangled almost a foot off the ground as he held me tight. I felt so small, so vulnerable in his arms, but I also felt safer than I'd ever felt before.\n\nAs much as I'd replayed the night we had spent together, I had forgotten what it felt like to be in his arms, to feel his lips against mine. Something stirred inside of me, and that chaste kiss became something more. My tongue slipped out to meet his, and the longer they danced, the hungrier I became for something more.\n\nI seemed to be moving on autopilot, my body being controlled completely by my desire. I lifted my legs to brace my knees on his hips and pressed our kiss even harder. Trevor took two steps back and sat down on the bench with me on his lap. With his hands freed up, they began to move over my body, teasing my skin and sending shocks of pleasure through me. Lost in the moment, I began to grind slowly on the large lump forming in his pants. I could feel my own cock, desperately hard, fighting for freedom. I kept kissing him, relishing in the feel of his hard bulge against my bottom, vividly replaying those sensations he had brought out of me all those weeks ago. I didn't even try to stop my aching cock as it strained bit by bit before finally breaking free of my panties beneath my skirt.",
        "No longer fighting against the discomfort, I pressed down harder. I could feel his hands resting very safely above my ass, holding tightly to my hips, but letting me do all the work. It was sweet, and just the kind of gentlemanly thing I should have expected from him, but I needed more of him. I reached back, and grabbed one of his hands, moving it lower. He caught my hint, I could almost feel his desire to slip his hands underneath to my ass, but instead, he squeezed me through the fabric causing me to moan into his lips.\n\nHe felt so good! I felt incredible in his arms. Feeling this great, it only showed me how bad I'd been feeling recently, how alone, and it felt wonderful to have this again.\n\nOne of his hands slid from my ass, around to my hip, and then down to my bare thigh. He held it there for a moment while we kissed, but as I gyrated on him, he let his hand travel up the top of my thigh in infinitesimal increments. He was so slow that I might not have even noticed it, had I not been aching for him to move a little faster. I was so hard that I hurt, and I was sure he knew it as well. Ever so slowly, he worked his way underneath my skirt, and up my smooth thigh. He was so close I could almost feel his touch on me. Just a little more...\n\n\n\n*BRRRINGG!*\n\nThe sound of my phone ringing broke the spell surrounding us and I nearly jumped out of my skin. Remembering where we were, I quickly looked around to see if anyone was watching. Thankfully, it seemed as if no one even noticed us. Kicking myself, I climbed off his lap and grabbed for my clutch as I sat awkwardly beside him, carefully crossing my legs over my erection to keep it from tenting my skirt. I wanted to keep going, to lose myself in that moment with him, but I needed to get ahold of myself. I couldn't just fuck him right there on the park bench, could I?\n\n\"Sorry, I should take this,\" I blushed, pulling out my phone. \"Shit!\" I exclaimed, seeing the caller ID. \"Hello?\"\n\n\"Hey Lexi! I just got off the plane, where are you?\" Audrey asked. \"I might need some help with my bags.\"\n\n\"I am soooo sorry!\" I said. \"I was leaving to go and pick up my car from campus, and then there were all of these people shouting...\"\n\n\"Are you okay?\" she asked quickly.\n\n\"Yeah, I'm fine,\" I said, smiling at Trevor. \"Someone came to my rescue.\"\n\n\"Is he hot?\" Audrey asked. \"Or is it a she? Are Kennedy and Abigail back?\"\n\n\"It's not them, and it's definitely a he,\" I said. I felt like I was stalling, and I didn't know why. I had told Audrey about Trevor, we had talked about him several times, and in great detail. Taking a deep breath, I told her. \"I'm with Trevor!\"\n\nThere was an ear-splitting squeal of excitement from the other end of the phone that I was sure Trevor heard quite clearly.\n\n\"What? How? Is he as hot as you remembered?\" Audrey kept firing off questions, making me blush the more personal they got until she finally asked, \"Are you two fucking? Did you fuck? Is he inside of you right now?\"\n\n\"Stop. Stop. Audrey, STOP!\" I shouted, unable to take the onslaught while I was sitting next to Trevor. I hoped to God he couldn't hear what my sister had been saying. That she squealed at the mere mention of his name was embarrassing enough. \"Listen, I'm sorry I'm not there, but I think you're going to need to take a cab to the hotel. I don't know where we are, but we'll start heading that way so I can let you in and get the front desk to make you a key.\"\n\n\"Fine, I'll take a cab,\" she agreed. \"But I want some details on this when I see you.\"\n\n\"Whatever,\" I mumbled, trying and failing to control my embarrassment. Audrey didn't find my response to her liking because a second later her voice came through the speaker even louder and in a sing-song voice, \"Lexi's in love! Lexi's in love!\" It was all I could do to hang up as quickly as possible before Trevor could hear.\n\n\"I'm sorry, but would you be able to take me back to my hotel?\" I asked Trevor. The last thing I wanted was for this to end, whatever this was, but I had to meet Audrey. \"My sister just flew into town. That's where I was going when...all this happened,\" I finished, gesturing awkwardly.\n\n\"Of course,\" he said, getting to his feet. \"But I would like to see you again, you know, without having to stalk you.\"\n\n\"I'd like that too,\" I smiled.\n\nWe quickly exchanged numbers before either of us forgot, like the last time. Afterwards, I realized that I was still poking out of my panties. It was a little embarrassing when I had to reach underneath my skirt to tuck myself back away, but for some reason the way Trevor watched me, as if it wasn't anything out of the ordinary, and a little amusing, made it less so. When I was finally settled, he took my hand and we walked back to the motorcycle.\n\nThe ride back seemed to rush by quickly, as with all things when you don't want them to end. I enjoyed holding onto him, and not just because of his hunky physique. He was everything I wanted, and I didn't want him any farther away from me than necessary. He made me feel safe and powerful, and loved all at the same time.\n\nI tensed up as we pulled up to the hotel. Some of the reporters had stuck around waiting for my return. Trevor brought the bike to a stop and squeezed my hand comfortingly as he shut off the engine. Together we dismounted, and ignoring the reporters completely, Trevor took my hand.\n\n\"Can I walk you inside?\" he asked.\n\n\"I'd like that,\" I told him, giving his hand a small squeeze.\n\nTrevor walked with such a purpose that the reporters easily made way for us to get inside. As intimidating as he was though, it didn't stop them from asking questions of him as well. Who was he? How did he know me? Basically, what you would expect from vultures.\n\nAs soon as we entered the lobby, I spotted Audrey sitting on one of the sofas, guarding a neat pile of luggage stacked haphazardly onto a trolley. The second her eyes caught mine she jumped up and raced to meet me, the force of her hug nearly toppling us both.\n\n\"God, I missed you!\" she exclaimed before planting a wet kiss on my cheek and dropping her voice to a whisper. \"He is so hot!\"\n\n\"Thanks, Sis,\" I smiled back, trying to maintain my balance as she rocked us back and forth like a dance. \"I missed you too.\"\n\n\"Ugh! You're too cute!\" she smiled pulling away. \"And you must be Trevor,\" she said, finally pulling her attention from me. \"I've heard good things about you. I'm Lexi's sister, Audrey.\"\n\n\"It's nice to meet you,\" he smiled, shaking her hand. \"So...what exactly have you heard about me?\" he asked, sparing a teasing smirk for me.\n\n\"Oh, something about Cancun, and how large your...hands are.\" The pause before hands was so brief that it was possible he missed it, but I wouldn't have bet on it. Audrey was having way too much fun with this.\n\n\"I'm sorry Trevor, but I need to get my sister settled,\" I cut in. \"She's had a long flight, and she's probably delirious and still suffering from the effects of valium. I'll call you though.\" I needed to get Audrey away from him before she started blabbing about everything I had said about him. I wouldn't put it past her. She would find my embarrassment a high class of entertainment.\n\n\"Wait,\" he said, grabbing my hand gently before I could drag my sister away. \"Lunch, tomorrow.\" Oddly, it wasn't a question.\n\n\"Not dinner?\" I asked.\n\n\"I can't wait that long to see you again,\" he said. \"I'll pick you up outside at twelve.\"\n\n\"Okay,\" I agreed shyly.\n\nBefore I saw it coming, he leaned down and gave me a kiss. This one lacked the raging passion of our kiss in the park, but neither was it subtle. His arms wrapped around my small body, holding me gently to him and his lips lingered against mine, once again taking my breath away. When he pulled away, I was sure I was grinning stupidly up at him. His confidant swagger was back in full swing as he turned to leave.\n\nIf there was one thing my sister, or my girlfriends had taught me, it was to never let a guy know how completely wrapped around their finger you were. I knew I should at least play a little hard to get, but every time he touched me my resolve evaporated, and my body gave up to him completely. It now seemed that Trevor was beginning to see exactly what effect he was having on me.\n\n\"You are in so much trouble, girl,\" Audrey said, coming to stand next to me as I watched him walk away. People were taking his picture as he walked out the front doors and climbed back onto his bike.\n\n\"Shut up,\" I sulked, turning towards the elevator. \"Grab your shit.\"\n\nAudrey smirked at me the whole way up to my room. I didn't know why I was so snippy towards her. It wasn't like she hadn't been this way my whole life, always with a playful jibe, but only in good fun. It just felt different, and I was beginning to think it was because of Trevor. When it had been Danny I'd been crushing on, I was able to brush off the teasing. With Trevor, it was as if I was constantly teetering on the edge of a cliff, and it was even odds which way I could fall at a given moment.\n\nAfter Audrey dumped all of her luggage off the trolley, I rolled it to the end of the hall while she kicked her bags inside. When I returned to the room, she was sitting on the edge of the bed with a commiserating smile.\n\n\"You're in love with him, aren't you?\" she asked.\n\n\"What? Of course not,\" I denied. \"I barely know him.\"\n\n\"That's not how love works, Sweetie.\" Audrey got up and walked over to me, taking my hands in hers. \"You don't really get a choice about when it happens, or with who.\"\n\nI wanted to keep denying it, but I knew she was right. It wasn't even a deep-down feeling that I was hiding from myself. It was bursting through the surface and I was trying desperately not to let anyone else see it. I was in love with Trevor. That mountain of a man owned me, heart and body. Audrey could see it in my eyes too.\n\n\"At least you picked a good one to lose your shit over,\" Audrey said. \"He's even hotter than I thought he would be.\"\n\n\"He is fun to look at,\" I admitted. \"God, what am I going to do?\"\n\n\"What we're going to do is order some room service, preferably something that involves ice cream, and you are going to tell me everything about this Trevor guy that you've been holding back, and then we're going to come up with a killer outfit for you to wear tomorrow so that he knows exactly how lucky he is to be going on a date with you,\" Audrey smiled mischievously.\n\n*** Kennedy ***\n\nKennedy and Abigail sat on a stone bench in the gardens watching the last of the sunset together. Perfectly cultivated rose bushes and hedges gave them a semblance of privacy, and the gravel path ensured that they would have warning if anyone were about to come upon them. At this moment, nothing too immodest was occurring. They both sat shoulder to shoulder holding hands, but a closer look could show evidence of something more, like Abigail's damp fingers, or the slight, sweet smell of Kennedy's sex creeping in through the garden scents.\n\n\"Do you think he's okay?\" Kennedy asked, finally breaking a long silence.\n\n\"He's fine. I'm sure of it,\" Abigail insisted. It didn't need to be said which he she was referring to. There was only one man on either of their minds right now. \"I would know if something was wrong.\"\n\nThey had been talking more about their father over the last day. Ever since Kennedy had seen that room with the walls papier-m\u00e2ch\u00e9d with her photos, she began to feel a kinship with him, a man she had never known. She had thought about telling Abigail about the room, but hadn't for some reason. There were just so many pictures. It was almost obsessive, like a shrine. Sure, Mr. Lockwood didn't need photos to see Abigail, but she worried that the sheer amount might make Abigail jealous.\n\n\"What's he like?\" Kennedy asked.\n\n\"He's funny, and kind, and smart...\" Abigail said. \"He always let me try to do something myself before showing me how it was done. He liked watching me try to figure things out. And he was always there to laugh with me, or hold me when I cried.\"\n\n\"Sounds nice,\" Kennedy said quietly.\n\n\"He was also overprotective, and overbearing,\" Abigail added. \"I thought he must have had a stroke when he let me go to Mayweather on my own. Turns out I wasn't as alone as I thought.\"\n\n\"Don't be too hard on him about that,\" Kennedy confided. \"Skylar told me that he may have sent her there to keep us safe, but he made sure that they knew to keep our secrets, even from him. Apparently,\" Kennedy smiled, \"he thought we needed room to run free. Either that, or Skylar pushed him into it.\"\n\n\"That's good to know,\" Abigail mused. \"The last thing I want dad to know is what we've been getting up to.\" And after a thoughtful pause, \"What do you mean Skylar pushed him into it? No one pushes him into doing anything.\"\n\n\"I have a feeling she might,\" Kennedy said. \"I think there might be something going on there.\"\n\n\"He's old enough to be her father!\"\n\n\"Let's hope not!\" Kennedy laughed. \"One surprise is enough!\"\n\n\"Still, do you think they're fooling around?\" Abigail asked.\n\n\"I can't be sure,\" Kennedy said. \"It's just a feeling I have from some things Skylar's said.\"\n\n\"Well, what did she say?\"\n\n\"It's not exactly what she said, but more of how she said it,\" Kennedy tried to explain. \"I don't know how else to say it.\"\n\nBefore Kennedy could think of the right words, or Abigail could press farther, the sounds of gravel crunching underfoot alerted them to someone approaching. Before the footsteps turned the corner around a hedge, they had separated to a more modest distance. Kennedy expected it to be Skylar or Owen maybe, but not one of the advisors, and not the youngest of the lot.\n\nKeenan was barely thirty with a baby face, and a little heavy around the waist. He was usually the last to speak in their meetings, if he spoke at all, and not the one that would bring important news, still, Kennedy asked anyway.\n\n\"Has there been word?\"\n\n\"Not of your father,\" he said uncomfortably. He kept looking around as if he was worried someone might hear. \"It's about Alexis Allen...I am to believe you were friends?\"\n\n\"What's happened to Lexi?\" Abigail demanded. \"Is she hurt?\"\n\n\"She has been arrested, or he rather.\" he said carefully. \"Apparently he was masquerading as a girl. I thought this was something you would want to know.\"\n\n\"Shit!\" Abigail and Kennedy hissed together.\n\n\"I'm sure that our legal department would be more than willing to file a lawsuit against him, as well as quash any indecent materials he might have of either of you,\" he assured them.\n\n\"What?\" Kennedy asked. \"What are you talking about?\"\n\n\"Who found out?\" Abigail asked no one. \"How? Nobody else knew!\"\n\n\"You two knew about him?\" Keenan asked.\n\n\"It's she,\" Kennedy corrected him. \"And of course we knew. She's our best friend.\"\n\n\"I...ah...\" he fumbled.\n\n\"Is there anything we can do for her?\" Kennedy asked. \"What about the legal team you were talking about?\"\n\n\"I'm sorry miss,\" he said, turning to Kennedy. \"He might have been a good friend, but the search for your father is the only priority right now.\"\n\n\"Is our legal team flying the aircraft?\" Abigail asked.\n\n\"Well, no. But-\"\n\n\"Then it shouldn't be a problem,\" Abigail assured him. \"Give them Lexi's information and have them contact me as well. If that is all, we could use a little privacy.\"\n\n\"Of course,\" he said, giving the impression of a bow before turning to leave.\n\n\"And Keenan,\" Abagail stopped him as he turned to leave.\n\n\"Yes, Miss?\"\n\n\"Don't ever call Lexi a he again,\" she said sternly, her eyes cold and threatening. \"And the next time my sister makes a request, you had better well take her as seriously as you do me.\"\n\nKeenan gulped, visibly shaken by her tone before finally turning away and making a much less dignified exit than he intended.\n\n\"What the hell!\" Abigail nearly shouted once she was sure he was out of earshot, her voice full of frustration. \"Don't we have enough going on right now? How did this happen?\"\n\nKennedy shifted her feet nervously. She had a fairly good idea of who had outed Lexi, and it wasn't a topic she wanted to share. It was a secret that Lexi had asked her to keep. Despite what she wanted, Abigail sensed her agitation and pounced on it.\n\n\"What do you know?\" she demanded. \"I can see it all over you.\"\n\nWith Abigail's eyes boring into her, she slowly broke. \"Decker. He found out. He was blackmailing her,\" she spoke in short sentences.\n\n\"Blackmailing her for what?\" Abigail asked. \"What does Lexi have that he would want?\"\n\nKennedy's stomach clenched. As easy as Lexi had been taking her predicament, Kennedy had a hard time even thinking about it. She didn't even want to say it out loud, but Abigail could see the answer written all over her face.\n\n\"No!\" she gasped.\n\n\"She didn't want you to know,\" Kennedy said quickly. \"I'm sorry. She said she could handle it, but I think it was hard enough for her with just me knowing about what was happening.\"\n\n\"Jesus!\" Abigail cursed, running her hands through her hair in pained frustration. It took her a moment to collect herself, but when she did, her voice was steely calm. \"Tell me everything.\"\n\nIt was hard to get it all out, and she felt like she was betraying Lexi, but from what Keenan had said, she was in serious trouble, and if she didn't get help things could go badly for her. Once it was all told, they both went upstairs to try and figure out how to help their friend.\n\nThe information they had gathered from Keenan was limited, they didn't even know if Lexi was still in jail or not. Kennedy felt horrible. With all that was happening in her own life, she had shut out the rest of the world. She hadn't even thought to call Lexi. She hadn't thought to call anyone except her mother, and only to yell at her. As soon as she got into her rooms, she began searching for her phone. She couldn't even remember where she saw it last.\n\nAbigail pulled out Kennedy's laptop and went to work there while Kennedy searched through the mess of clothes on the floor. One of the maids had kept trying to come in to clean, but Kennedy kept shooing her out. She had insisted that she could clean her own room, and like usual, had never gotten close to the task.\n\nShe finally found it next to an end table underneath some discarded clothing. The screen was cracked from when she had thrown it, but it still managed to turn on once it was plugged in. She found herself stalling when it came time to dial though. She felt like a shitty friend. Had she really not called her friend once? Reminding herself that waiting even longer wasn't going to improve the situation, she sat on the bed with Abigail, and dialed.\n\n\"Hello?\" Lexi nearly shouted through the phone. \"I've been trying to call you guys forever!\"\n\n\"Sorry,\" Kennedy apologized quickly. \"We've been a little distracted. Are you okay?\"\n\n\"I'm fine,\" Lexi assured them.\n\n\"How are you fine, you were arrested!\" Kennedy exclaimed, putting the phone on speaker for Abigail.\n\n\"Professor Holland got me a lawyer, and Audrey is here with me now,\" she said. \"Say hi to Kennedy.\"\n\nAudrey's voice carried through the phone as she shouted hello. Despite the situation, they both seemed to be in good spirits.\n\n\"Seriously, what's going on? Can we help?\" Abigail asked. \"I've been looking at the news and it seems bad.\"\n\nThere was a slight scuffle on the other end, and afterwards Audrey was holding the phone. \"What happened was, Trevor raced all the way down here to rescue her, and she's in love!\" Audrey laughed. By the heavy breathing, it sounded as if Lexi was chasing her down.\n\n\"Trevor!\" Kennedy and Abigail exclaimed together. \"Ooh la-la!\"",
        "\"Cut that out! No biting!\" Audrey shouted, laughing. \"No! Ahhh!\" Audrey squealed during another scuffle.\n\n\"Sorry about her. She's been incorrigible since she got here,\" Lexi said, returning. \"How is everything there? I've been trying to watch the news when I can, have they found your dad yet?\"\n\n\"Not yet, but we're not giving up,\" Abigail said. \"We might have caught a break this morning, but it's still too early to know if it will pan out. What about you, do you need anything? Where are you staying?\"\n\n\"The lawyer Mrs. Holland hired put me up at this hotel for now,\" Lexi informed them. \"The staff at school put a bunch of my stuff into boxes, and she had it all sent here. Some of my stuff is missing, and I've got some of your things as well. I think they just raided my entire side of the bedroom, thinking it was all mine.\"\n\n\"I'm not worried about the stuff; I'm worried about you,\" Abigail said. \"I'm going to call your hotel and make sure they take care of you.\"\n\n\"You don't need to do that, honestly,\" Lexi assured her. \"Everything is being taken care of.\"\n\nAbigail let it go for the moment, but Kennedy had a feeling that Lexi was going to get her help whether she wanted it or not. With a little prodding, Lexi told them how she came to be outed and arrested. Kennedy was sure she was holding back some details but didn't press for the full account. Her friend deserved to keep those secrets. She couldn't see how the school could allow Decker to continue working there, much less how the confrontation ended with Lexi being arrested, especially after they had heard the blackmail tape. From what Lexi said, her lawyer was confident that she wouldn't be charged.\n\nKnowing that she was as okay as she could be, and that she wasn't hurt, as well as in surprisingly good spirits, their conversation turned to more uplifting things in their lives. Kennedy revealed the mystery about Skylar\u2014that she had been sent to watch over her and Abigail\u2014which after you knew, seemed like it should have been more obvious, like knowing how a magician does his tricks. Lexi told them about Trevor showing up and sweeping her away on his motorcycle. Audrey made sure to tell them about a certain kiss in the hotel lobby that left Lexi weak in the knees. The four of them talked for over two hours before calling it quits for the night with promises to keep in better touch from now on.\n\nAfter hanging up, Abigail made a few phone calls to put some things in motion before retiring to the bed to join Kennedy. The events of the day, and the emotional rollercoasters, had taken their toll. Within minutes, they had both drifted off to sleep, fully dressed and on top of the covers.\n\nIt seemed like she had just fallen asleep when Skylar was shaking her awake once again.\n\n\"Wake up!\" she called, giving Kennedy and Abigail another violent shove.\n\n\"What!\" she said, sitting up so quickly that she shoved Abigail off her shoulder. \"Whas wrong?\" She said rubbing her eyes.\n\n\"What time is it?\" Abigail asked.\n\n\"It's only 9:30pm,\" Skylar said. \"We got some good news.\"\n\nWith those words, both Kennedy and Abigail were wide awake.\n\n\"There was a plane that stayed out searching a little late, and he lost the sun on his way back. He's pretty sure he saw a small fire on the mountainside, near where you sent the new search party,\" Skylar said. \"It isn't definitive, but the evidence says that someone is alive up there.\"\n\nIt was a stroke of luck, and Kennedy knew it. The search was suspended during the nights because there wasn't any way to see. For that plane to be in the right spot, just after dark, and for them to see the glow of a small fire...lucky indeed. Now she just had to pray that it was her father. He hadn't been the only person on that plane.\n\n\"We have to wait until morning to do anything, but the pilot logged his GPS coordinates, and the heading where he saw the fire, so we should be able to zero in on the location sometime tomorrow,\" she said. \"I wanted to tell you right away, but you still need to manage your expectations.\"\n\nWhatever Skylar meant about managing expectations, it was an impossibility. After she left, Kennedy and Abigail stayed up the entire night, in near silence, waiting for the sun to come up so the search could commence.\n\nAt 5am they both made their way downstairs to the parlor, where everyone would eventually gather to wait for news. Even the house staff were on edge. Usually still asleep at this hour, one of the kitchen staff brought in a cart filled with coffee and muffins in anticipation of their arrival.\n\nKennedy and Abigail were only alone for a half hour when advisors started showing up and quietly helping themselves to the coffee. No one spoke a word, not even Skylar when she arrived. She just took her place next to the door, leaning back in her chair and closing her eyes. Her arms and legs were crossed, and she almost looked as if she were sleeping, except for the white-knuckle grip she had on her cell phone in her right hand.\n\nMinutes ticked by, and those minutes turned into an hour as the sun rose. One hour turned into two, and the only people that moved were the advisors, constantly refreshing their coffee. Kennedy still sat next to Abigail by the empty hearth. The coffee cup in her hands had gone cold, untouched, long ago. The only sound in the room was the steady click of the grandfather clock against the far wall.\n\nEvery moment that passed without word seemed to increase the tension. No one had heard a thing, but all of a sudden, Skylar's eyes shot open, and she sat bolt upright to answer her phone.\n\n\"Rhoades,\" she answered quickly. \"Did you get eyes on? If he can't land, make sure they give a few low passes, so they know we found them. And call Los Alamos and tell Colonel Davis that I'm calling in a favor. I'm going to need a chopper with some lift, a wench, and a medic.\"\n\nAs soon as she hung up, she jumped to her feet. Dillan and the other advisors tried to bombard her with questions, but she ignored them, speaking directly to Kennedy and Abigail.\n\n\"He's there. They couldn't get close enough to get a good look, but they saw someone moving around and waving at them. There are some tall trees, and nowhere to land where we could get to them, so we're gonna have to do a winchline rescue. None of the helicopters we have can hover in place at that altitude, but we're gonna get one that can.\"\n\n\"Is there anything we can do?\" Abigail asked anxiously.\n\n\"I need your helicopter to give me a lift to the airfield, and the jet to get me to Los Alamos.\"\n\n\"You're going?\" Kennedy asked.\n\n\"Yeah,\" she said with a smile of determined excitement. \"I'm gonna go get him.\"\n\nShe didn't say anything else to them as she turned to leave. Halfway out the door, she was back on her phone shouting. \"Owen, grab my gear and meet me at the helipad!\"\n\nIt took barely an hour for Skylar to make it to the Air Force base in New Mexico. As soon as she got into the chopper to go and get Mr. Lockwood, they were patched in so they could listen to the radios in real time.\n\nIt was nerve wracking listening to. Everyone was so calm as they called out positioning and wind speed, and negotiated the trees while they maneuvered around for the best spot to send someone down. It turned out that Skylar was that person. When she said she was going to get him, she wasn't joking.\n\nIt seemed as if Skylar was in her element. Kennedy was squeezing Abigail's hand as they listened to her call out direction, so she didn't crash into any of the trees on her way down. Apparently, the wind was fighting them at that altitude. Kennedy could almost see it in her mind and didn't think she could ever be that calm under the circumstances.\n\n\"Touchdown!\" she called through the radio. \"George! Is there anyone else with you?\"\n\n\"Lenny, he's messed up bad. He can't walk. He's hunkered down in what's left of the fuselage.\" Their father's voice came faintly over the radio. \"Can you help me get him? I...\" static cut through his voice.\n\n\"Not a chance George,\" Skylar said. \"Get in the harness, you're going up first. I'll come back down and get him.\"\n\nThere was more technical chatter as he and Skylar were lifted back up to the chopper. As soon as he was secured inside, a cheer filled the room coming from everyone, even Kennedy. True to her word, Skylar went back down for the pilot, but it was hard to pay attention after finally knowing that their father was safe, and coming home.\n\nWhen the pilot was secured, and the medic was tending to them, Skylar announced that they were heading back to the base, and the radio feed ended. Kennedy hugged Abigail, and a wave of relief filled her. By the tears in Abigail's eyes, she had been putting on a brave face for a long time.\n\nKennedy felt silly, but a short while later she was back in her room, changing her clothes and fixing her hair. She wanted to look just right when she met her dad for the first time. She was having an impossible time deciding on what to wear though. Should she wear a dress, and try to be the sweet daughter that Abigail was, or should she wear her jeans and boots? Which one would he like more? Taking a chance, she finally forced herself into one of the snug fitting pairs of jeans that Skylar bought her, and a tight-fitting long sleeve top with her jacket. She already knew that he loved her, and he obviously knew she wasn't exactly a dress kind of girl. If she was going to meet her dad, she would do it as herself.\n\n\"Cutting it close, aren't you?\" Abigail asked as Kennedy rushed to meet her outside on the wide front steps. It felt crowded with the advisors, and most of the staff gathered to welcome back Mr. Lockwood. Abigail was wearing a white and blue summer dress with cute flats and a butterfly clip in her hair. She looked every inch the dutiful daughter, making Kennedy begin to second guess her own attire. She looked like a renegade, or a stray next to all of these finely dressed people. It was too late to do anything about it though. The sounds of cars approaching through the trees announced their arrival.\n\nA four-car convoy of SUV's rolled through the gates and down the gravel path before circling around the fountain in front of the steps. Doors opened and people began getting out, but it was the third car that held Kennedy's attention. Skylar rushed out of the front seat to open the rear passenger door.\n\n\"I can get it myself, Sky,\" Mr. Lockwood protested. \"I don't see why we needed four cars anyway.\"\n\n\"You let me worry about protocol until you can take care of yourself properly,\" Skylar admonished. \"You do see the irony, don't you? A man who made a fortune in the aerospace industry by making better and safer airplanes goes down in a crash...in one of his own planes. Stock prices are gonna tank,\" she joked.\n\nMr. Lockwood's arm was in a sling, and he had a bit of a limp to his walk, but other than that and a few scrapes, he looked unharmed. As soon as Skylar got him out and onto his own two feet, advisors began clamoring to get to him. All he did was hold up a hand and they stopped in their tracks, falling silent.\n\nSeeing his gaze scanning past the men who worked for him, Skylar released the protective hold she had on his good arm, letting him make his way slowly towards Kennedy and Abigail. He stood halfway between the two of them, his fatherly smile taking them both in. There were tears in his eyes threatening to fall as he looked at them both, his daughters. No words were spoken, there were no right words for a moment like this. He just pulled them both into a hug, ignoring the pain from his injured arm.\n\nTogether, they held onto each other, and Kennedy listened as her father and Abigail wept. Her chest felt tight, like something had been stuffed inside. It was a new sensation, and it was quite overwhelming. It was only when the embrace finally came to an end that she realized she was crying too.\n\n\"It's so great to meet you, Kennedy,\" Mr. Lockwood smiled.\n\n\"It's nice to meet you too...Dad,\" Kennedy said, the word still feeling awkward in her mouth.\n\n\"I think I might start crying again,\" Abigail laughed.\n\nSomehow, everyone else that had been waiting for Mr. Lockwood's return had vanished leaving only the three of them, and Skylar standing outside.\n\nAfter spending years searching for him, Kennedy didn't want to let go of him any time soon. Together, she and Abigail helped him up the steps and inside the manor. It only took a few quick, sharp words from Skylar to disperse the advisors from the Grand Parlor. Every one of them seemed to think that now that he was back, everything needed to be done this instant. Apparently, the company had been in shambles with stock prices dropping more with every day he had been missing. None of that mattered to Skylar though. She seemed to hold his health at a high premium.\n\nMoments after the last advisor reluctantly left, a doctor swept in carrying his black bag, and wasted no time before examining Mr. Lockwood. Besides a little malnutrition and his broken arm, he was in rather good health. Kennedy and Abigail had to leave the room when it came time to break and reset his arm, and put it into a cast, but returned just as soon as it was over.\n\nThe tale of the plane crash was a harrowing one, like something out of a story or movie. Hydraulics had started failing as they were coming over the mountains. They had tried to divert just in case they needed to make an emergency landing. In the end, Lenny, the pilot, eased the plane down one of the flatter parts of the mountain, but the snow had prevented them from slowing, allowing them to skid over a steep slope and through a large stand of trees. They eventually stopped, but only part of the cockpit and cabin were still intact. Lenny couldn't walk, and George wouldn't leave him. The radio had been trashed, but the transponder was still working.\n\nWhen no one had come for them in the first couple of days, they had begun to worry that the signal might not be reaching anyone. Mr. Lockwood removed the transponder and wired it to a portable battery and began making treks up the mountain in different directions, in an attempt to get better range for the signal.\n\nAs far as there not being visible debris or other indications of a crash site, the trees took care of most of it, and the heavy snowstorm obscured the rest.\n\nAfter his accounting, they talked of other things. They even got a little insight into his and Skylar's relationship. It didn't seem as if they were sleeping together. Despite the large age gap, Skylar seemed to treat him like an older brother who still needed someone to look after him. They joked and laughed, and together they seemed to brighten the room with their banter.\n\nFor Kennedy, it felt like torture, sitting there four feet from her father and not being able to ask the questions she'd been dying to her entire life. Her heart thumped in her chest, and inside it felt like she was racing a mile a minute while the seconds dragged out.\n\nAbigail sat right next to her father, looking so happy and relieved to have him back. She was the reason Kennedy was able to keep quiet. Even before they were sisters, they were best friends, and she wouldn't do anything to hurt her, and any question Kennedy asked would inevitably lead to the fact that her father had cheated on her mother. If Abigail hadn't already realized that little detail, she eventually would, but Kennedy didn't want to rub her nose in it. So, instead of bursting, rambling out her questions, and risking another emotional breakdown, she waited for a better time.\n\nEventually, they had to let the advisors have some time with him now that he was back. There were a great many things that had happened since he'd gone missing and needed his attention. Most of their troubles would be fixed with the announcement of his safety, but Skylar insisted that he have at least a day to rest before thrusting him back into the spotlight.\n\nAfter an early evening meal, Kennedy and Abigail retired to different rooms that night. Neither of them felt right sharing the same bed with their father home. It wasn't a change in feelings for each other, they just didn't want to risk him finding them in an uncomfortable position. That was how Kennedy found herself unable to fall asleep. She felt exhausted, having been awake since the day before, but her mind wouldn't quiet. Added to that, ever since her, Abigail, and Lexi begun sleeping together, it had become increasingly harder to fall asleep without one of them there.\n\nIt was nearly midnight when Kennedy slipped from her bedroom to wander the house. She headed straight for the second-floor kitchen, telling herself that she was looking for Skylar. It was a lie though. She was hoping to find someone else, but the kitchens were empty. Restless, she continued walking the halls, even visiting Abigail's tower. It wasn't until she was walking down a first-floor corridor that she realized what she was actually looking for. A rustling sound accompanied by the clacking of keys caught her ear from a cracked door ahead.\n\nIt was her father's study; the room Skylar had shown her. Her heart beat a little faster as she stepped softly toward the door to peer through the crack. Behind the desk sat her father. He was glancing at papers through a pair of glasses perched on the end of his nose while he typed away on a laptop with one hand.\n\n\"Come in,\" he called, not even looking up from his work, startling Kennedy.\n\nShe slowly opened the door and stepped inside, feeling embarrassed for spying.\n\n\"Kennedy!\" he sounded surprised, setting aside his papers and closing his laptop. \"I thought you were someone else.\"\n\n\"Sorry,\" Kennedy apologized automatically, whether it was for spying, or not being the person he was expecting. She wasn't sure.\n\n\"Don't be,\" he smiled awkwardly. \"Come in, have a seat.\"\n\nKennedy did as he asked, sitting in the chair opposite of him. Every question she had thought of asking him abandoned her the moment she sat down, leaving them both in an uncomfortable silence. Her hand drifted to her pocket, and she could feel the folded-up picture through the fabric. Not thinking, she pulled it out and set it on the desk between them.\n\nHer father picked it up and slowly unfolded it. His eyes lit up with recognition and darted to the bookshelf concealing the hidden room.\n\n\"Skylar,\" he grimaced, shaking his head. \"That woman will be the death of me, I swear.\"\n\n\"It wasn't Skylar,\" Kennedy lied, feeling guilty for breaking Skylar's confidence.\n\n\"Please,\" he said wryly. \"She's been trying to get me to tell you for two years.\"\n\n\"Why didn't you?\" Kennedy asked. \"Why didn't you want me to know who you were?\"\n\n\"I wanted to tell you every day,\" he sighed. \"When I met your mother, I was still married. We were on the rocks. We'd been trying to get pregnant for years, and the failure had brought up some bad feelings between us. I was out of town on business for a few weeks and I met your mother. She made me feel alive again. With her, my problems seemed distant, and we fell in love. She knew I was still married, but it wasn't one of those loves for the ages, it burned hot and quick, and when it was over, the passion was gone. We still liked each other, but we knew it was done. When I returned home, Mary told me she was pregnant, and a few months later, your mother called and told me she was pregnant as well.\"\n\n\"Were you ashamed of me?\" Kennedy asked.\n\n\"God, no!\" he said. \"I was ashamed of myself. Your mother thought it would be a good idea if we just kept it quiet for the time being, for her sake as well as mine. I agreed, and promised to help her out since I couldn't be there for you. Later, after Mary passed, we thought about telling you.\"\n\n\"Why didn't you.\"\n\n\"A short while after her mother's death, someone tried to abduct Abigail,\" he confided. \"We never learned the reason behind it, only that it had happened.\"",
        "\"Abigail never told me about that,\" Kennedy said quietly. They had shared so much about their lives with each other, all three of them, this was something she was sure she would have heard about.\n\n\"Abigail doesn't remember,\" he said. \"I never told her. One of our security staff shot the man outside of her bedroom. She never saw, and when I got to her, she was sitting up in bed, asking me what the loud noise was. After that, I had to quadruple security just to make sure she was safe. I started buying, and bribing news companies to keep her photos out of the press, and those who couldn't be bought were blackmailed. When your mother and I discussed it, we decided to wait until you were older, until you could make the decision if you wanted the world to know that you were my daughter. We wanted you to have a safe, normal life. You know how Abigail has lived, private schools, security everywhere. She may have had a pampered life, but she's never gotten the chance to be a kid, or even gotten the chance to go out into the world on her own. The closest she's gotten is Mayweather, and let's face it, she hasn't exactly been alone there either.\"\n\n\"You said you were waiting until I got older,\" Kennedy said. \"Exactly how old were you waiting for me to be? 20? 30?\"\n\n\"Your mother and I thought sixteen would be old enough,\" he sighed heavily. \"When sixteen came we thought it would be better if we waited until you graduated.\"\n\n\"And what happened then?\"\n\n\"I...\" he started, then shook his head. \"The truth is, I was scared,\" he admitted reluctantly. \"Your mother had told me about the fights you two were having about me, and then there was Abigail...would you two get along? What would I do if you hated each other? We decided to put it off a little longer, and then Skylar thought of a great idea, put you both in the same school, just close enough to get to know each other, and go from there. She practically brow beat me into doing it too. Wouldn't take no for an answer on anything.\"\n\n\"What's the deal with the two of you?\" Kennedy asked. \"Are you guys dating?\"\n\n\"It feels like it sometimes,\" he barked a laugh. \"No, she's just...\" he began. \"Have you ever met someone, and your personalities just click? We came from two different worlds, I was a spoiled billionaire, and she'd fought in wars, but we just seemed to click from the moment we met. I was so used to people walking on eggshells around me, always tentative, trying to feel out what I would think about something, and she just says whatever she thinks. Sometimes I think she even forgets that I'm her boss, and I kind of like that.\"\n\n\"I think I know what you mean,\" Kennedy said smiling. She'd had nothing in common with Abigail when they met, but they clicked. The same with Lexi. Abigail might have thought that Skylar was too young for him, but Kennedy was beginning to think that that girl was exactly what he needed. It was clear that they cared for each other. She would let that go for now though, not that she felt awkward setting up her new dad with a woman half his age, but hearing him talk about Skylar made her remember Lexi.\n\n\"This might not be the right time, but I was wondering if you could do me a favor,\" Kennedy asked awkwardly.\n\n\"What's wrong?\" he asked leaning forward, his gentle eyes holding concern.\n\n\"It's our friend, Lexi,\" Kennedy began. \"She's gotten herself into a bit of trouble.\"\n\n\"I remember her,\" he said. \"She spent some time with us over Thanksgiving and had a bit of luck at the casino. Beautiful girl.\"\n\n\"Well, there's something you don't know about her,\" Kennedy began.\n\n*** Lexi ***\n\n\"I received word last night that your arraignment will be tomorrow morning at 10am,\" Patricia Shaw explained. It was Sunday morning and we were back in the Shaw &amp; Teller law offices downtown. \"From there, they will set a trial date to determine if you should be sentenced.\"\n\n\"Will this really go to trial?\" Audrey asked. \"I've heard that recording. This Decker should be the one in jail.\"\n\n\"This will most definitely be sent to trial. She did technically misrepresent her situation when she enrolled, and for a trial to happen, all they need to do is show that there was a possibility of wrongdoing. It won't be until the trial that they will have to make their case,\" Patricia explained. \"His offenses will not excuse Lexi's, no matter how vile. But rest assured, he will be on trial one way or another.\"\n\n\"So, what now?\" I asked, not looking forward to a long court case that might end with me being in jail\n\n\"We make them realize that a trial is the last thing they want,\" Patricia smiled. \"In truth, the verdict could go either way depending on the jury and the judge. The best and surest path to victory is to convince your opponent that they have already lost.\" She sounded as if she was quoting someone. \"With your permission, I will set up a meeting with the school, and their in-house council. From there we can go about putting this all to rest,\" she said with a casual confidence.\n\n\"You really think it will be that simple?\" I asked, disbelieving.\n\n\"I don't know, everyone seems hellbent on giving her the chair,\" Audrey interjected, before giving me a guilty look. \"Sorry, Lex, but the news hasn't exactly been your friend these last few days.\"\n\n\"That will change shortly,\" Patricia assured us. \"I've been making some arrangements and reaching out to some people I know. By tomorrow morning, the world will have a completely different picture of Lexi Allen.\"\n\nPatricia wouldn't elaborate on the subject any more than she had, but she seemed overly confident in her strategy. Almost enough to make me forget about my troubles. Almost. There was nothing that could shut out that constant worry, and anxiety completely.\n\nWe still had two hours before my date when Audrey and I left to return to the hotel. My outfit, per Audrey's assistance, had been constructed meticulously with the objective to display all of my assets, while also playing into the hard to get mentality. It was also constructed to be suitable for riding on the back of a motorcycle. As fun as it was, a skirt wasn't exactly proper attire for such an adventure.\n\nTogether we decided on tight black stretchy pants that held a bit of shine, resembling leather, but feeling soft and breathable, with heeled boots, a small tank top that stretched tight over my breasts and left some skin showing around my waist. It was capped off with a short light jacket that barely reached the bottom of my breasts. It was something of Audrey's. Functionally, it was worthless as a jacket, but it was cute as an accessory.\n\nThe final piece to my outfit were hair extensions. I had been feeling awkward about my hair as of late, it being past the cute bob phase, but not long enough to really do anything with. Audrey, like usual, found us a solution. After she finally finished fitting them into my hair and began brushing them out, I was sold. I couldn't tell the difference between my hair and the extensions, and now my hair flowed down and around my shoulders in waves of blonde with black highlights. I had been contemplating cutting my hair short again, but seeing myself like this, my mind had changed. It was fun and cute with my sexy bob, but there was so much more I could do with long hair. And I had to admit, I looked gorgeous with long wavy locks.\n\nI had flashbacks to the beginning of the school year when Audrey insisted on applying my makeup for me. We both sat on the edge of the bed, listening to music as she ran brushes across my face and applied liquid eyeliner.\n\nWhen it was time to leave, Audrey gave me a kiss good luck, and smacked my ass on my way out the door playfully. I took the elevator down to the lobby, loitering as best as I could until I received a text from Trevor telling me that he was out front.\n\nAs I stepped outside, I immediately noticed the reporters. They were all looking around in anticipation. They recognized Trevor and were looking for me. One even leaned around me to peer through the glass doors behind me. I had to bite my lip at the absurdity. Did I really look that different with long hair? As casually as I could, I walked between them, and made my way up to Trevor's bike, he was still sitting astride with the motor running, anticipating the need for another quick getaway. Unlike the reporters, it only took him a quick double-take to recognize me as I approached. He shot me a quick smirk, and a shake of his head.\n\nWhen I was close enough, I ran the last few steps and jumped on behind him, laughing giddily. The moment my arms were around him he peeled away, and I never looked back.\n\nOf all the places I thought he might take me, the last would have been Killjoy's Raceway. I was expecting a movie and a meal, or something close. What I wasn't expecting, was an event at the world's largest indoor go-kart track and laser tag park. The structure was all made out of metal with no windows, closely resembling a massive aircraft hangar. Inside there was a winding half mile multi-level racetrack with karts that could reach 50mph, and required a health waver, and on the other side, a blacked-out laser tag arena under black lighting in a maze of buildings, corridors, and towers. The place was so popular that you had to buy entry tickets two months in advance.\n\n\"How did you get tickets to this place?\" I asked excitedly.\n\n\"So, I made a good choice?\" he asked, looking a little relieved.\n\n\"Yeah, this was a good choice!\" I told him. \"But how, it takes forever to get tickets.\"\n\n\"I bought them off craigslist,\" he shrugged, trying to play it cool, but I could see a little smugness for picking such a perfect place. It had only opened with the new year, and Kennedy and I had been talking about going for some time. Running around all day and getting sweaty wasn't Abigail's sort of thing.\n\nThe price tag on this caliber of fun didn't come cheap, but the best part about the high cost was the limited number of entry tickets they sold a day. That meant less time spent waiting to have fun. If you timed it right, you could sign up for a laser tag match, and run the track while you waited, and bounce back and forth with practically no time in between. There were absolutely no lines either. They gave you little wristwatch things that you scanned to sign up for an event, five minutes before the event started, it would buzz you. If you didn't show on time, they would give your spot to the next person who wanted it who was already there waiting. It was pretty ingenious really. Without the lines, it freed people up to pay for arcade games, or sit in the caf\u00e9 spending more money.\n\nWhat I thought would be a couple hour date, ended up being an all-day event. In the laser tag arena, we were back to back, slaying enemies like a well-oiled machine of death, and on the track, we zipped through turns and tunnels side by side or right behind one another. I couldn't remember the last time I'd had so much fun. It was hands down the best date that I had been on. Not that I had that much to compare it to. The only other real date I'd had was with Danny, and that ended in disaster. Somehow, I didn't see anything of the sort happening with Trevor.\n\nAt the moment, we were taking a breather from our latest laser tag match and grabbing a bite to eat at the Killjoy Caf\u00e9 separating the racetrack from the arena. I was dividing my attention between my food and the scorecard for our latest match. I had 37 kills with 18 team assists, and only two respawns. Trevor had done even better, only having to return to respawn once. Our team name, decided by Trevor, Mr. and Mrs. Smith&amp;Wesson. It was just a fun play on words, but the Mr. and Mrs. part did produce a funny feeling in my chest.\n\n\"So, are you having a good time?\" Trevor asked.\n\n\"Yes!\" I smiled after a pause so I could swallow my pizza. \"This place is great. Thanks for this, I really needed it.\"\n\n\"It was my pleasure,\" he said. \"I kind of wish they had something like this back in Tucson. It would be a great way to blow off steam from school.\n\n\"It would, but the price tag might make it hard,\" I replied. \"Are you sure I can't pay you back for my ticket?\" I asked. He had refused to tell me exactly how much he had spent on the tickets he'd essentially scalped, but I knew a single ticket at ordinary prices was nearly two hundred bucks.\n\n\"I told you, this one is on me,\" he insisted, pushing his fry basket closer to me while he took a sip from my vanilla shake. It was casual, yet familiar, making me feel even more at ease near him.\n\nA buzz from my phone sent a jolt through my breast where I had tucked it away for safe keeping. It was hard to manage a purse in this place. Unused to this new technique, I had to take a couple of seconds digging around to fish it out while Trevor just grinned at the little show.\n\n\"It's just Audrey checking in on me,\" I said as I typed a reply telling her that I didn't know when I would be back.\n\n\"She seems really familiar,\" Trevor commented. \"I mean, I only saw her for a second, but I had the impression that I knew who she was.\"\n\nI had to choke back a chortle, trying to disguise it as a cough. This wasn't the first time someone had recognized my sister but couldn't quite place her.\n\n\"You might know her,\" I replied, having a little bit of fun as I idly played with my phone. \"She likes sitting by the beach, and shopping with friends, and her turn-ons are hard bodies and men who take charge,\" I recited by rote.\n\n\"I don't think I get it,\" he replied looking puzzled.\n\n\"You sure?\" I asked, turning my phone to him. I had pulled up her Playboy profile.\n\n\"Oh!\" he blushed slightly. It was the typical response when people realized that they inadvertently admitted they looked at porn. I found it amusing.\n\n\"You sure you're on a date with the right sister?\" I joked.\n\n\"I'm sure,\" he didn't even hesitate, reaching across the table to give my hand a squeeze. \"I don't think there is another person I'd rather be here with.\"\n\nIt was sappy, and altogether the exact thing I wanted to hear.\n\n\"How did you get like this?\" I asked, wondering how I'd gotten so lucky. \"You never even flinched when I told you about me, and you keep...coming back.\"\n\n\"I guess I get it from my moms,\" he shrugged.\n\nI wasn't sure if I had heard him right. \"Moms?\"\n\n\"Yeah, I have two moms,\" he said, casually taking another sip from my vanilla shake. \"I always thought it was normal, growing up. I figured some people had a mom and dad, some people had two moms, and even some people had two dads. It wasn't until fifth or sixth grade when I learned different. Kids can be cruel. I didn't understand why either. My moms were great. In high school people joked about my hot lesbian moms,\" he said uncomfortably. \"I don't know, maybe growing up knowing that the world isn't so binary, so black and white, made me like this. My parents always told me that one day I would fall in love and to never be afraid of it, even if it wasn't what everyone else thought of as normal.\"\n\nIt explained a lot, and I followed his logic all the way to the end, but that last part made my heart quiver. \"You love me?\" I asked. I had felt it, and I had hoped that he had as well, but we had never spoken about it. Hell, not counting the time apart, we had only known each other for a few days. How could we already be in love? Love was supposed to build from something else, not just happen in a flash. But I did, I loved this man.\n\n\"I...\" he blushed, \"I guess I do.\"\n\nNot exactly the ringing declaration I had been hoping for, but it still made my heart soar. The muscles in my cheeks pulled into a painful smile, and I leapt up and into his lap, draping my arms around his neck and kissing him hard on the lips.\n\n\"I love you too,\" I said, pulling back to look him in the eyes.\n\n\"I know,\" he smiled back.\n\n\"Don't be an ass!\" I said, giving him a little punch in the ribs for his cockiness.\n\n\"All right, all right!\" he said, grabbing my wrist gently to forestall another attack. \"I love you, Lexi Allen,\" he whispered to me.\n\nIt was everything I wanted to hear, and it felt even better than I had imagined. Butterflies raged inside of me, dancing on a warm wind that filled my soul. I pulled him tight to me and held onto him with everything I had.\n\n\"Thank you!\" I said, trying not to test the bounds of my waterproof mascara.\n\nTrevor just held me, rubbing his hands along my back as I sat in his lap with my head nestled in his shoulder. After a while, I finally opened my eyes. I could see people watching us, watching me, and I immediately began to feel self-conscious. Had they recognized me? Were those looks of judgment? I couldn't quite tell.\n\n\"People are watching,\" I whispered, shifting to get off his lap.\n\n\"Let them watch,\" he replied, pulling me back into his broad chest and giving me a gentle, comforting squeeze.\n\nBy the time our date ended, the sun was rapidly falling, leaving an orange and purple cast to the sky that could only be found in Arizona. It reminded me of a cartoon fairytale. It probably had something to do with how incredible I felt. Even with all of the bad things that had happened lately, Decker, being arrested and outed to the entire world, being expelled from school, in that moment my life felt perfect. Sure, everybody knew about me now, and most of them were judging me, and that was all a little intimidating, but I had a man who loved me and didn't care what anyone else thought. And as uncomfortable as it was to receive those judgmental stares from strangers, I felt...free. I wasn't hiding anymore.\n\nWe pulled up to the hotel, and I still felt like I was floating. I climbed off the bike, and ignoring the reporters, gave Trevor a kiss goodnight before walking inside. It seemed that they had just as many questions for Trevor as they did for me now. Questions like was he my boyfriend. I sure hoped so.\n\nI had so badly wanted to bring him up to my room. Our date hadn't lit the same level of passion as the day before in the park, but it came damn close. I wanted him, all of him, and I knew that the second I had him in my room that fire would return like a raging inferno. My only problem was that Audrey was sharing my room. Sure, I could have asked her to give us a couple hours, but what I wanted from Trevor would take much longer than that. I didn't just want to sleep with him, I wanted to sleep with him. I wanted to fall asleep in his arms and wake up feeling him beside me. I wanted that, and so many more things that I couldn't describe.\n\nI'd been more than tempted to ask to stay the night at his motel, however forward it made me look, but I had court in the morning, and something told me that it wasn't the kind of thing you could risk being late for.\n\n\"That must have been some date!\" Audrey exclaimed, hopping up from the bed as I stepped into our room. \"I expected you back hours ago. Did you get lost in his motel room?\"\n\n\"No, but it did cross my mind,\" I admitted, putting down my purse and shrugging out of my short jacket. \"Help me with these pants?\" I asked.\n\n\"Sure,\" Audrey replied. I undid the fasten and tugged them down over my butt before sitting on the bed. Audrey grabbed ahold of them by the ankles and began pulling, with one foot braced on the bed for leverage. \"So how was it?\"\n\n\"He took me to Killjoy's,\" I replied, wiggling my legs in an attempt to help work them off.\n\n\"What's a Killjoy?\" Audrey grunted. These pants were no joke.\n\n\"It's this go-kart and laser tag place across town,\" I said smiling.\n\n\"And he took you there for your first date?\" Audrey asked. \"That was risky.\"\n\n\"It was so much fun,\" I told her, sighing both from remembering the date, and feeling the pants finally pull free of my ankles. With the hard work over, Audrey climbed up on the bed and collapsed beside me to stare at the ceiling.",
        "\"Speaking of fun,\" Audrey said, bumping my shoulder with her own. \"did anything happen on this date?\"\n\n\"No!\" I told her. \"You said to play hard to get.\"\n\n\"Hard to get, not impossible,\" Audrey said. \"You could have at least given him something.\"\n\n\"We didn't exactly have that kind of privacy,\" I blushed. \"We did kiss though.\"\n\n\"Oh no, alert the fourth grade! You kissed!\" Audrey gasped.\n\n\"And he told me he loved me,\" I added.\n\n\"What?\" Audrey exclaimed rolling over to face me.\n\n\"It sort of just popped out, but he said it,\" I smiled.\n\n\"And what did you say?\"\n\n\"I told him I loved him too,\" I sighed. \"It feels so weird. I mean, we barely know each other, right? But at the same time, it feels like he knows me better than anyone. And every time I'm near him I just...\" I trailed off, unable to find the right words.\n\n\"Little Lexi is in love,\" she smiled warmly down at me. \"I'm happy for you.\"\n\n\"You don't think it's too fast?\"\n\n\"Real love happens in the blink of an eye,\" she said. \"Sure, you can train yourself to love someone over time, but the real stuff sweeps you away before you know what's happening.\" The way she spoke about it, I had the feeling she was speaking from her own past experience, but I didn't pry.\n\nWorn out from my day, I settled into bed and Audrey joined me shortly after, stripping down to just a yellow thong before cuddling up to me with her head resting on my bosom. As I lay on my back with Audrey draped across me, I felt a little awkward, like I was doing something wrong. It had nothing to do with the fact that she was my sister, I'd gotten over that long ago. It was the feelings of arousal stirring inside that now felt strange. I couldn't help but wonder what this would all mean. Trevor and I had officially been on a date, and confessed that we were in love. What did that mean for Audrey and I, or for Kennedy and Abigail? I loved them as well. I loved their bodies, and the things they did to me. I loved the sweet kisses and the hungry passion. Was I going to have to give all that up? Did I want to? And what did all of this mean with Trevor? He told me he loved me, but he was in school at The University of Arizona, in Tucson. It wasn't far from Phoenix, but it was far enough to make things complicated. Were we going out now, or were we just in a holding pattern? It was strange feeling so good about the day I'd had, and so confused about my future.\n\nSleep came with difficulty, and the morning came all too quickly. Showing a stunning amount of solidarity, Audrey pulled herself out of bed before I woke and made a coffee run, allowing me to wake to the scent of Italian roast and French vanilla. After my first cup, I took my time in the shower, letting the warm water wake me up before going to work with a razor to make sure everything was silky smooth. Patricia had made a point to send me a message about the importance of my appearance today. My impression was going to mean as much as our defense. I had to look every inch the woman I was for the cameras and the courtroom.\n\nA garment bag was delivered to our room while I was in the shower, containing my outfit for today. It was more formal than anything I had worn before. Sure, that red dress Abigail had given me was pretty formal, but this was of a different kind. It was an expensive skirt suit, much like the ones that Patricia wore. Inside the bag were also undergarments, and a printed out set of instructions about details I should pay attention to.\n\nFollowing her instructions, I dressed. I found it odd that she made notes about how much of my stocking tops should show when I crossed my legs, or how to adjust my white blouse so that I could accidentally show my cleavage, as well as a hint of my black lace demi-cup bra. The black pumps she sent me were adequate, but I opted for my own heels. Louboutin open-toe pumps beat the other pair, hands down. It didn't matter how stylish they were.\n\nI felt like it was a lie, but Audrey convinced me to keep the hair extensions for now. As she put it, it wasn't anything any other woman hadn't done before, much like acrylic nails, or false eyelashes. And besides, my hair looked incredible with it flowing out and around my shoulders like that.\n\nAudrey's attire was a lot more plain in comparison. She was wearing a borrowed gray dress, and a pair of flats that had been buried in the bottom of one of her bags. It felt strange to outshine my sister for once. She had always been beautiful, and even after becoming Lexi, I had always found myself wishing I could be as pretty as her.\n\nAt 9:30am sharp, a town car arrived to pick up Audrey and I to take us to the courthouse. It was a surprise to see the entrance to the hotel clear of reporters. I had steeled myself for the onslaught, but they were gone. Even Audrey commented on the strangeness as we climbed into the car.\n\nThe courthouse was only ten minutes away, and when we arrived, it was clear that every reporter working my story was there. It wasn't just reporters waiting either, there must have been hundreds of people outside, crowding the courthouse steps and the surrounding lawn. Some were holding signs and others chanting. The noise was audible even through the town car's soundproofing.\n\n\"I think I might be sick,\" I announced, feeling a wave of anxiety induced nausea sweep over me. This was a thousand times worse than the mob that had begun forming outside the hotel the other day.\n\n\"Deep breaths, Sweetie,\" Audrey squeezed my hand as she scowled out the window.\n\nI was beginning to wonder why the hell I wore heels today. If these people turned ugly, they could tear me apart before I could stagger two feet in these things. The car stopped, and I realized it was too late to change anything. To be fair, it was too late the moment I had decided to stand up to Decker. Everything had been leading to this moment, at this place. The only thing that could have stopped it would have been me, submitting to a life on my knees for a piece of scum, and I was too strong for that. I am too strong for that! I thought, feeling some small amount of fight returning as I remembered why this all was happening. I was here to stand up for myself, and to make sure a cruel man was punished.\n\nI clenched and unclenched my fists, psyching myself up for the battle to come. I wouldn't let these people intimidate me. I wouldn't. I would hold my head high, and march right past them like the confident, powerful woman that I was.\n\nI opened the door, and carefully stepped out. The moment I was in sight, I was struck by a massive cheer of voices. I nearly staggered back, falling into the side of the car. Those voices weren't angry. The signs they were holding weren't filled with hate. Happy voices shouted my name, and people held signs with messages of love and support. #JusticeForLexi, All Women are Women, We Support Lexi, #LGBTRights, and so many more.\n\nSure, there were a few people that were shouting hate, or holding signs with hurtful messages, but they were overwhelmed by the supporters. There were hundreds of strangers, but some of the faces I recognized. All of my professors stood together, flanked by girls from school. Some I knew in passing, and others I only knew by sight, but they came to support me. Right out in front, stood Trevor in black slacks and a button up shirt, right next to Patricia Shaw and her assistant Ryan.\n\nI didn't know what to do. I stood there with mouth agape, and hand clutching my aching heart. I didn't know something this amazing could hurt so much, but my chest tightened so hard I thought it might tear. I couldn't even prevent the tears from streaming down my face. It was everything I could do to keep myself from breaking down completely into sobs.\n\nTrevor quickly ran to me and swept me up into his arms, holding me to him and rocking me gently back and forth. I didn't know how long it took me to pull it together. The sound of happy voices washed over me as I held onto him, crying into his white dress shirt. When I finally composed myself enough to stand on my own and dry my eyes, Patricia and my sister were standing beside us.\n\n\"I hope you approve of my strategy,\" Patricia said, speaking loud enough to be heard over the crowd.\n\n\"How?\" I asked.\n\n\"Very easily, actually,\" she replied. \"I just posted online that one of our own needed a little support. Your story, and your character did all the rest. Now, if you're ready, it's time to go to work,\" Patricia smiled confidently.\n\nWith Trevor on one side holding my hand, and my sister on the other, we followed Patricia up the courthouse steps. The cheering crowd parted easily before us, creating a bubble of space that quickly closed back around us as soon as we moved forward. When the doors closed behind us, the sound from outside was only muted to a distant rumbling.\n\nThe courtroom was nothing like what I expected it to be. It wasn't like television where everything is impressive, made out of fancifully carved dark wood, and there is a huge gallery for people to watch. It was actually quite plain. Nothing at all like Law &amp; Order. There were two plain desks on either side and a slightly raised area for the judge. The gallery was only three rows deep, and the whole room was lit by harsh florescent lights.\n\nThe hearing went as Patricia had expected. Since I was born a man, and did not disclose that fact to the school, there were questions of legality, especially since I had signed documents agreeing to the student bylaws and charter that heavily mentioned that Mayweather was an all-girls school, not to mention the expectation of privacy of the other students that the prosecution was leaning heavily on. I was, as they had claimed very vocally, a pervert. There was going to be a trial.\n\n\"Don't let that get to you,\" Patricia said as she gathered her documents. \"We expected this, remember. They haven't proven that you've done anything wrong, only that you were born different. We're still in good shape.\"\n\n\"But you didn't even say anything,\" Audrey said, storming up now that the proceedings were over. \"You just sat there why they said all of those awful things!\"\n\n\"Audrey!\" I exclaimed, feeling uncomfortable. I did agree that Patricia should have said something, but I didn't want Audrey to drive her off. She was doing all of this for free after all.\n\n\"Nothing I said here would have changed what happened,\" Patricia explained. \"If I would have argued here and defended Lexi, we would still be going to court, and the prosecution would have a good idea of our defense strategy. As it stands, we can still blindside them, and if we do it right, prevent this from even going to trial.\"\n\n\"The judge just set the trial date,\" Audrey protested. \"How are you going to stop it?\"\n\n\"By making the prosecution drop the charges,\" she said simply. \"We just have to weaken their case enough, and make them look like they're persecuting a victim because of their gender identity. By the time we're done, they will be standing on our side, ready to throw the book at Mayweather, and Decker.\"\n\n\"You seem pretty sure of yourself,\" Audrey observed.\n\n\"This is what I do,\" she smiled, snapping her briefcase shut.\n\nI watched her as she slipped past Audrey and I, and walked out of the courtroom. As I was casting my eyes back to Audrey, they snapped back to a group sitting in the far back row by the door. Four people were smiling back at me, and I felt a wave of surprise for the second time that day. It was Abigail, Kennedy, and Skylar, accompanied by a slightly worn looking George Lockwood. He was alive!\n\nI couldn't even find words as I ran to them. They jumped up as I neared and ran to me. Abigail, Kennedy and I crashed into a stumbling three-way hug.\n\n\"You look amazing!\" Kennedy said, touching my longer hair.\n\n\"You're dad's alive!\" I exclaimed.\n\n\"We came to help you,\" Abigail said, each of us talking over one another.\n\nAs we gabbed like girls, Trevor, Audrey and Mr. Lockwood joined around us.\n\n\"Hey Kiddo,\" Mr. Lockwood said, giving me a one-armed hug. \"I've heard you've been having a tough go of it lately.\"\n\n\"I heard the same about you,\" I said. \"I'm glad you're okay.\"\n\n\"It'll take more than that to keep George down,\" Skylar smiled. \"Sorry we weren't here for you sooner, but this one had to crash in the worst possible place on a mountain.\"\n\nThere was something between Skylar and Mr. Lockwood, but I didn't have time to place it because we were interrupted. Warren Jones, the Dean of Mayweather came over.\n\n\"I only just saw the news on my way over here!\" he said excitedly, holding his hand out to Mr. Lockwood. \"I'm so glad you're okay. About this whole...situation-,\" he began before George cut him off, staring pointedly at the outstretched hand for a moment.\n\n\"That's exactly why I'm here,\" he said, nodding to me. \"I came to support a family friend.\"\n\nThe Dean's eyes flickered towards me, and the color seemed to drain from his face. It appeared that he had failed to read the situation before he rushed over to rub shoulders with the Lockwood's.\n\n\"If you don't mind, our conversation will have to wait until later,\" George said in a clear dismissal. \"There are several things happening at your school that disturb me...and my friends.\"\n\nThe mention of George's friends, whoever they were, seemed to strike the Dean as much as his own disapproval. With a worried look and a nod of deference, he backed away and disappeared through the doors.\n\nI left the courthouse feeling much better than I had when I arrived. The crowd of people showing their support were still waiting outside, and even more news vans than I remembered coming in. That was quickly explained once we pressed through the initial crowd though. It seemed that with the return of Mr. Lockwood, my fifteen minutes of fame had taken a hit. I wasn't upset in the slightest.\n\nAudrey and I caught a ride back to our hotel in the Lockwood motorcade. Four SUV's and at least a dozen or so private security personnel seemed excessive, but then again, it made sense. Nearly everyone in the world had their eyes turned toward George right now. That kind of attention could bring trouble.\n\nI wasn't surprised when I learned that they were staying at the hotel with us, or even that George had booked the sprawling penthouse suite for he and his daughters, as well as an entire floor for his security staff.\n\nAbigail tried to insist that we move up into the suite with them, but I declined. I would have felt awkward intruding on a delicate situation. Their father just went through a lot, and it had to be a little awkward adjusting to a new sister, and daughter. But the real reason, the reason I avoided, was that I didn't know where any of us stood any longer. They knew they were sisters now, and I was in love. I still loved them, and I always would, but Trevor filled a part of me that I hadn't known was missing until he showed me. And what about them? Abigail had very strong views on incest, and her tolerance of my own indiscretions was a far cry from indulging in her own. It was much simpler to stay where I was.\n\nWe had barely made it into the elevator when Patricia called me. With the headway we had gained from our public opinion swing at the courthouse, she had decided to press the schoolboard for a meeting, sooner rather than later. Surprisingly they agreed to meet right away. So, after Audrey got off on our floor, I found myself riding back down to the second floor so I could take the bridge to the parking structure.\n\nWith the drive, and finding downtown parking, I arrived at the law offices on the 18<sup>th</sup> floor only moments before the school board. I was able to catch a glimpse of them stepping off the elevator as Ryan led me into a conference room much larger than we had used before. Patricia was already seated in the center of the long end that faced the doorway; her expression could be called nothing but beaming.\n\n\"Five minutes?\" Ryan asked.\n\n\"Better make it ten,\" Patricia told him. \"Make them sweat a little.\"\n\nAs Ryan left, Patricia pulled out the chair next to her and gestured for me to sit with her.\n\n\"You seem like you're in a good mood,\" I said hopefully.\n\n\"You never told me that you were friends with George Lockwood,\" Patricia smiled.\n\n\"I told you that I was friends with Abigail, and that I'd spent time with them on Thanksgiving,\" I replied.\n\n\"Being his daughter's friend and spending one holiday together doesn't usually make you a family friend of someone like George Lockwood,\" Patricia explained. \"Has he always known about you?\"\n\n\"I never told him, and I couldn't imagine Abigail telling him either,\" I said honestly.\n\n\"However it happened, it's put them off balance,\" she explained. \"In a few minutes, Ryan will bring them in. Try to let me do all the talking.\"\n\nAfter several minutes of waiting in silence, Ryan led in a long line of people. Seven men and two women filled all but one seat on their end of the table. I found it strange that there were only two women on the board of an all-girls college. It was a little overwhelming, so many of them on one side, and only Patricia and I on the other, but when I looked over to her, she was still wearing that self-assured smile.\n\n\"I'm glad that you decided to meet with us,\" Patricia said welcoming them warmly, as if they were close friends.\n\n\"We could hardly decline,\" an older gentleman directly across from us spoke. \"One of the school's biggest contributors threatened to remove his support if we refused.\"\n\n\"Whatever your reasons, I'm still glad that we could have this time to discuss the situation as it stands,\" she continued. \"You have filed charges against my client for fraud and voyeurism because, as you have very vocally told everyone, she is a man.\" Patricia paused for a moment, slipping a sheet from the folder in front of her. \"Have you read your bylaws, or your charter?\" she asked curiously. \"Because I have. Do you know how many times the sex of a student is mentioned? Zero. Sure, it mentions girls and women, and uses pronouns like she and her, but it doesn't mention the sex of students once!\"\n\n\"Now hold on, Mayweather was established as an all-girls school,\" one man said, with sounds of agreement coming from all along their side of the table. \"It is clearly stated.\"\n\n\"You're confusing gender for sex,\" she countered. \"The definition of gender, by Merriam Webster: the behavioral, cultural, or psychological traits typically associated with one sex,\" Patricia read. \"Not the sex of a person, but their traits. Now if you try to say that she doesn't have those traits, just remember, she was an enrolled student, and accepted by her teachers and peers for the better part of a year before anybody noticed a thing.\"\n\n\"Gender is how we identify ourselves, whereas sex describes the physical characteristics we are born with. While my client might have been born male, she clearly identifies as female,\" Patricia argued. \"Here is a signed testimony from a licensed therapist, affirming Lexi's identity. There is also the surgery. No simple pervert would go so far just to spy on girls,\" she added. \"What this is beginning to look like is gender discrimination. So, exactly what side of this does Mayweather want to fall on? Your school was, after all, founded to empower a group of individuals who were disenfranchised during the time period. Will you be turning your back on that sentiment now?\"\n\nBefore they had a chance to react, Patricia stood up and collected her folder, tucking back in a loose sheet of paper. \"We will give you a moment to discuss,\" she said.\n\nFollowing Patricia's lead, we left the room while they discussed it amongst themselves. I was amazed, Patricia had been like a bulldozer, rolling right over them. Her argument was brilliant too. One of the only things I knew about laws was that the wording meant more than the intent the framers had when they wrote them. If Patricia was right, and their bylaws and charter never mentioned a student's sex...it was almost too much to hope for.",
        "Their conference lasted several minutes before we were invited back in. Every face on their side of the table either looked disappointed, or like there was a bad odor in the air. Only once Patricia and I sat, did they speak.\n\n\"We have agreed to drop all of the charges,\" their representative spoke. We will notify the court within the hour. Now that that's done, I think we will be going.\" With his last word, they began to rise.\n\n\"Not so fast,\" Patricia said firmly, halting them in their tracks. \"That may cover my client's legal troubles, but it doesn't finish with yours. My client was blackmailed and assaulted by a member of your faculty on multiple occasions. When she had the courage to come forward, at great risk to herself, you ignored her claims and her evidence, and buried her in slander.\" She sounded angry now. \"We plan to file charges with the state and request a full investigation.\"\n\n\"We never heard anything about blackmail, or assault!\" one of them objected.\n\n\"Really?\" she asked. \"Because my client was being sexually exploited by Assistant Dean Decker, and when she took her evidence to Dean Warren, instead of protecting her, they had her arrested and thrown into jail.\"\n\n\"I assure you, none of our staff would assault any student. That is a very serious accusation!\" One of the women stated, appalled.\n\n\"I've heard the tape,\" Patricia said. \"It is quite clear, and completely damning.\"\n\nFrom there, civilized discourse began to break down. Either they were unaware of the tape, or they were all superb actors. Once the accusation was made that the blackmail tape was a ploy, Patricia casually set her recorder on the table and pressed play. Thankfully she only played the first minute before shutting it off. It was all that it took though.\n\nThe demands Patricia laid out over the next half hour were a complete surprise for me. I had only hoped she could keep me out of jail, which it seemed like she had succeeded in doing. Now she was going for the throat. Decker was to be fired and arrested on charges of sexual assault and blackmail. The Dean would resign for protecting him, and a sum of money would be paid to me for what she called damages: the assault, the public shaming, the arrest and stress of court, as well as the discrimination. The amount of money was shocking, and the surprising part was how quickly they agreed. The hardest concession was to let me remain at Mayweather.\n\n\"I just don't see how we could allow it,\" one of them said. \"What about our other students? They deserve to feel safe.\" He had the good manners to blush at his choice of words. \"Men are forbidden entrance to the dorms for good reason. Sometimes the girls go around in next to nothing. When maintenance is required, we post a notice days in advance so they are prepared. And what about the showers? He...she has a...\"\n\n\"And?\" Patricia asked. \"Exactly what does that have to do with it? She has been using those showers all year. Have you had a single complaint?\"\n\n\"Well, no,\" he began before Patricia continued over him.\n\n\"If your reasoning is that my client might gain some sexual gratification by seeing naked women, then by that logic you would have to ban every last lesbian and bisexual student enrolled at your school,\" Patricia stated wryly. \"I don't care what you do, but you'll make it happen. Build her her own bathroom if you have to.\"\n\nAfter much hemming and hawing, they finally acceded. I sat stunned as they stood up to leave. I hadn't spoken a single word during the entire meeting. As soon as the door closed behind them, Patricia let out a loud sigh, and began giggling uncontrollably. The sight finally pulled me out of my daze.\n\n\"Are you okay?\" I asked.\n\n\"Oh, I'm fine,\" she assured me, collecting herself. \"I just didn't expect to get everything we asked for. I was really only hoping to get Decker arrested and fired. The rest was just wishful thinking. I expected them to push back more than they had.\"\n\nI had a feeling I had George to thank. I hadn't known that he had even called the school until they mentioned it. By the way they acted, he must donate a small fortune to the school every year. With the meeting over, Patricia walked me to the elevator.\n\n\"Is it really over?\" I asked. I still felt like I was waiting for another shoe to drop. Could all of my troubles have ended so quickly?\n\n\"It's really over,\" Patricia said, hitting the call button for the elevator. \"I'll be in touch once they start working their way through our demands, but in the meantime take it easy. You're a free woman.\"\n\n\"Why did you help me?\" I asked, curiosity catching me just as the elevator doors opened. \"You went way out of your way. Posting my bail, the hotel, the clothes...everything.\"\n\n\"Gale was there for me when I needed someone. I'm just paying it forward. Besides,\" she winked, nudging me into the elevator. \"us girls gotta stick together.\"\n\nIt wasn't something I'd seen coming. Patricia Shaw was like me. I was stunned as the doors closed on the elevator, but the closer I got to the ground floor the more I began to feel great about my future. All year, my thoughts had been focused on surviving Mayweather without being found out. Every now and then though, I would think about what would happen after. Who would I be then? What would I be? How would what I was effect who I would become? If Patricia could find a place, and succeed in such a spectacular fashion, so could I.\n\nIt was five in the afternoon when I reached our hotel. Some of the reporters had gotten wise to my driving and were waiting at the foot of the bridge from the parking structure, but not even their intrusive and rude questions could dampen my mood. I even smiled at them as I passed. Today I was a winner. Today, I was free.\n\nI made it all the way up to the eighth floor when I ran into Audrey coming down. She looked dressed to impress in a fashionable black cocktail dress that lacked the usual sexiness that I would have expected from her. Instead, it looked rather cute.\n\n\"I've been trying to call you!\" my sister said, surprised to see me.\n\n\"Damn, I had my ringer turned off for the meeting,\" I explained, reaching into my purse for my phone. \"Where are you going?\"\n\n\"Mr. Lockwood has put together a little celebration in the lounge downstairs,\" she said, switching places with me in the elevator.\n\n\"What's he celebrating?\" I asked.\n\n\"You getting the charges dropped, dummy!\" she said, throwing a hand out to stop the doors from closing. \"What else would we be celebrating?\"\n\n\"How did you guys hear?\" I asked. \"It only just happened.\"\n\n\"Billionaire clairvoyance?\" she shrugged. \"Get changed and come down,\" she smiled, moving her hand and letting the doors close.\n\nIt didn't take me long to change. My hair and makeup were still good, only requiring a quick touch up. I even kept the black stockings, only swapping out the skirt and blouse for a strapless white dress with small black polka-dots.\n\nBack downstairs, I followed the signage to the lounge. Mr. Lockwood had apparently rented it out for a private event. The only people in attendance were a few staff, and our little group. Skylar was there as well, and to my delight, Trevor. He looked just as magnificent as earlier in his starched white shirt and black slacks.\n\n\"Here's to the girl of the hour!\" Mr. Lockwood cried, lifting a glass of champagne the moment he saw me. As if on cue, a glass appeared in my hand from one of the waiters, and everyone raised a toast. \"To a great friend, and someone we can be proud to call family. To Miss Lexi Allen!\"\n\n\"To Miss Lexi Allen!\" everyone cheered.\n\nAll of the furniture had been cleared away except for one large table in the center of the floor for us to dine at. Without all of the chaos from the courthouse earlier, I found a chance to introduce Trevor to Skylar and Mr. Lockwood. It was the first time I saw Trevor look intimidated by anyone. I guess I never really told Trevor that I knew him, or that Abigail's last name was Lockwood. George was a great host though, quickly putting Trevor at ease and making him feel comfortable. He seemed to have a way about him that made you feel like you were old friends, even if you barely knew each other.\n\nWhen the meal arrived, it wasn't individual plates, but a wide assortment of dishes, all laid out like a big family dinner. Together, we all sat around the table, enjoying delicious food and telling stories. Kennedy told of our secret agent exploits while we were trying to find out who her father was. George only gave her a wry, fatherly smile and an exasperated shake of his head, making her blush. It seemed that she had forgiven him for keeping his secret. Skylar reminisced about the hassles we three had put her through with our shenanigans, and how she hoped it would be easier to look out for us now that she didn't have to keep it a secret. And finally, Mr. Lockwood regaled us with the tail of his survival on the mountain, and Skylar's heroic rescue, and how she swept down from the sky like an angel to whisk him to safety. As traumatic as it must have been, he was in good spirits, and humor. He even managed to make some of it seem rather funny.\n\nAfter we'd had our fill of food, music began to play, and more drink began to flow. Trevor asked me to dance, and that started things. As he spun me effortlessly around the dance floor, others followed. George led Kennedy by the hand, and Skylar and Abigail came as well. It was nice to see Kennedy having a slow dance with her father. Every time I caught a glimpse of her, she looked happy, and in a way I had never seen before. After a couple dances, Audrey cut in, sending Trevor to grab more drinks so she could dance with me.\n\nEventually, I found myself sitting at the bar with Kennedy and Abigail. Skylar and my sister were still dancing away, and George and Trevor were off by the dining table, talking over a glass of scotch. Abigail pulled out a small wad of hundreds and placed it on the bar, telling the bartender to impress us. What happened next was nearly a half hour of spinning, flipping bottles, and other bar tricks, most involving fire.\n\n\"Well this has been a hell of a year,\" Kennedy said, blowing out the flame from her shot before slamming it back.\n\n\"And it's not even over with yet,\" Abigail said, trying to shake off the taste. \"You know, my life used to be ordinary before I met you guys.\"\n\n\"You're welcome,\" Kennedy said, leaning to bump Abigail with her shoulder.\n\n\"What do you think they're talking about?\" I asked, peering once again over to Trevor and George. They were still talking, and by the looks of it laughing about something.\n\n\"Probably trying to figure out if Trevor's good enough for you,\" Abigail said. \"I think he's unofficially adopting you.\"\n\n\"He better, the three of us are kind of inseparable,\" Kennedy quipped.\n\n\"Do either of you know what the deal is with him and Skylar?\" I asked. \"Are they a thing?\"\n\n\"We haven't figured it out yet,\" Abigail said.\n\n\"Hell, I don't think they've figured it out yet,\" Kennedy added.\n\n\"By the way, Dad is looking into buying us a house this summer,\" Abigail said. \"Something spacious, and close to campus. With all the new attention, and his plans to formally acknowledge Kennedy as a Lockwood heiress, he thinks we might enjoy a little more privacy.\"\n\n\"That's really nice of him,\" I said. I had grown to enjoy living in the dorms, but it would be nice to have more privacy, especially for Kennedy and Abigail. No one else could see it, but Kennedy's hand was stroking the inside of her sister's thigh, dangerously close to her pussy. Which answered my question from earlier about whether or not they were still sleeping together now that they knew they were related. That was definitely the kind of thing they'd want to keep under wraps.\n\n\"Listen,\" I said uncomfortably as I caught myself glancing over to Trevor yet again. \"Things with Trevor and I might be getting serious,\" I told them. \"What I mean is, I don't think I can build something with him, and keep sleeping with you guys.\"\n\n\"We know,\" Abigail said comfortingly. \"Audrey said this might happen. We will always be here for you though.\"\n\n\"You know,\" Kennedy said, obviously having just made contact with Abigail's pussy by her gasp. \"You could always just tell him you want to share. You think he would really say no to that?\"\n\n\"The thing is, the problem wouldn't be sharing you with Trevor. I don't think I would be able to share him with anyone,\" I sighed. \"Does that make any sense?\"\n\nThey both nodded in understanding, and a moment later, Abigail gasped again, and yanked Kennedy's hand from under her dress, looking flushed. Kennedy just smiled coyly while licking her fingers. It was hard to close them out of my sex life, but I was sure they would manage just fine without me.\n\nAs the night grew longer, Mr. Lockwood retired. He was still recuperating after all. Skylar made sure that he got to his rooms in the penthouse which sent our curiosity running all over again. While the girls continued to put the bartender through his paces, Trevor and I spent more time dancing. With the alcohol in my system, I was finding it harder to control myself around him. His laugh and smile pulled me in, but the way his hands slid across my skin, stroking my cheek, or holding me against him, sent heat lightning flashing through me that I had to beat back down, lest I lose control of myself right there on the dance floor and become immodest in my dress.\n\n\"Hey, Audrey?\" I asked nervously, finally giving in. \"Do you mind if Trevor and I go up to our room?\"\n\n\"Say no more,\" she grinned, holding up a hand to forestall me. \"Hey, Kennedy. Remember that thing I owe you? Do you want to collect?\"\n\nA bright smile filled her face, before biting her lip and looking to Abigail nervously. After a quick whisper, and a nod from Abigail, Kennedy replied. \"Can Abby come too?\"\n\n\"The more the merrier!\" Audrey laughed, getting up from her stool and grabbing her purse.\n\nKennedy and Abigail were quick to follow, leaving just Trevor and I alone at last. Tingles danced across my skin in the most tantalizing of ways, leaving my heart racing and my palms sweaty. As if my body knew what I wanted to happen next, my blood began to redouble its efforts, trying to make a blitzkrieg on my cock. I squeezed my thighs together in desperation, and I slammed one of the half empty drinks the girls had left behind on the bar.\n\n\"Looks like the party's over,\" Trevor said, coming up behind me to place a hand on my hip.\n\n\"I guess it is,\" I replied, spinning around to face him. His hand still lingered on my side, and the space between us felt like it was shrinking as I stared up at his much larger form. I was not sure how long I gazed into those beautiful eyes, but I finally summoned the nerve to ask the question. \"Do you want to walk me up to my room?\"\n\n\"Sure,\" he replied, brushing my hair back behind my ear before turning and offering me his arm.\n\nThe implication was clear, and I was sure that he could smell the need and desperation coming off of me in waves, but I couldn't out right ask him for what I needed. It felt foolish, having already done it before with him, but this time it felt different. In Cancun, we had been strangers; two ships passing in the night. Now it meant more. It wasn't just some lust fueled need...well it was that, but there was something else, a hope for more. That something more seemed new and scary, but I still wanted it.\n\nI tried to keep myself contained as we rode up the elevator, pressing my thighs together so hard they cramped. I wanted to jump him right there, but we weren't alone. An elderly couple were riding up with us. The doors chimed for the eighth floor and I felt my body trembling in anticipation. Together we walked quietly down the hall to my door and I slipped the key from the cleavage of my dress to open it.\n\n\"I had a great time tonight,\" Trevor said over the beep of the keycard.\n\nI couldn't stop myself any longer. Before he could say more, I grabbed his big wrist, and pulled with all my might, yanking him into my room before slamming the door. As soon as we were alone, I jumped onto him, wrapping my legs around his waist and planting my lips on his.\n\nThere was a moment where I wondered if I was being too aggressive, but it was lost as he kissed me back with an unleashed passion to match my own. Turning us, he pressed me against the wall, holding my head in his hands as his groin pressed hard against me. My legs still around him, I kicked off my shoes, and began fighting to undo his shirt. The snapping sound of buttons accompanied our passion as some of them broke in my haste. As soon as the last was gone, I stripped off his sleeves leaving his hard body beautifully bare.\n\nAs his shirt flung across the room, Trevor pulled me off of him and set my feet down on the floor. His rough hands spun me around, pressing me into the wall as he pulled down the zipper to my dress. An instant later he peeled it down my body, yanking forcefully to get the fabric over my hips. As those black polka-dots hit the floor, leaving me standing in only my black lace panties and hold up stockings, he spun me back to face him again.\n\nMy cock was now fully erect, throbbing harder than I could ever remember and unleashed before me. Unaffected in the slightest, Trever placed his large hands around my waist and slowly lifted me back up to his lips. The way he handled me so easily, sent a pleasurable chill down my spine. I wrapped my legs around him once again, and he slowly walked us to the bed. With one hand between us, I tugged at his belt as we moved, and fought with the fastens on his slacks.\n\nWhen we reached the edge of the bed, Trevor slowed, carefully crawling up and carrying me to the center before leaning forward to ease me down onto my back. With me settled, he quickly kicked off his pants before returning his attentions to me, planting short, wet kisses up and down my body. He started at my neck, working his way slowly down the center of my chest, teasingly avoiding my breasts, and continuing down to my belly button before working his way back up. Desperate, I began trying to move his head towards anywhere that would give me that pleasure I craved, but he grabbed both of my wrists in one large hand and pinned them just above my head.\n\nMy body squirmed, aching for more, but he held me firmly in place. His lips teased every inch of my skin, coming dangerously close to my nipples, and even my cock, but never touching. It was driving me mad. Eventually he let his lips lead him to my nipples, gently flicking his tongue across them before sucking those hard nubs into his mouth. An audible gasp escaped my lips at finally getting even the smallest amount of the relief I'd been hoping for.\n\nWhen his lips began working back down my stomach, my heart fluttered. He reached my belly button but hadn't stopped. His freshly shaved cheek brushed along my throbbing cock as his lips trailed kisses into the crease of my thigh. My eyes squeezed tight and my entire body shuddered as he turned his head to place a sweet kiss at the base of my cock. His hand released me as he adjusted his position, and I clutched my chest. He kissed the base of my shaft once again, and then again before moving up ever so slowly. The higher he got, the longer those kisses lasted. When he reached halfway, I felt his tongue slip out to brush against me and I thought I drew blood from biting my lip.\n\nWhen he reached the tip of my cock, I was a moaning mess, my hips making slight involuntary jerks. His lips wrapped around me, and he let his tongue swirl around my head as he gently sucked. There was no bobbing, it was almost as if he was making out with my cock, or working my clit as it were. As inexperienced as he was, I was in bliss.",
        "With everything that was going on with my cock, I didn't feel his hand slide my panties to the side. It wasn't until I felt his slick fingers teasing my little hole that I knew he had moved down there. I tried to steady my breathing as I felt him putting pressure, trying to slip a finger inside of me. For a moment it resisted, until like a switch it relaxed, letting his digit slide easily inside of me, causing another glorious moan.\n\nReleasing my breasts, I gripped the sheets tightly as he began to slowly fuck my ass with his finger. It wasn't very long before a second, and then a third finger were inside of me, stretching me open in anticipation for his cock. I felt like I had been on the edge of cumming for over an hour, panting like a bitch in heat as he fingered me and slowly teased my cock with his mouth. Just when I thought I might blow, his mouth left my cock, and his fingers slowly pulled out of me leaving me feeling empty.\n\nI almost cursed him until he pulled at the waist of my panties. More than ready, I lifted my hips, letting him ease them over my ass, and then raised my feet straight up together to let him pull them off. I quickly grabbed a pillow from behind me and tucked it underneath my hips to give him a better angle.\n\nMy eyes finally reopened as I felt him edging closer, and his big cock flopped down on top of mine. My eyes widened seeing the comparison. I'd forgotten exactly how big he was. He was several inches longer, and much thicker than I. Next to his, my cock looked downright girly.\n\nMy eyes met his, and I gulped nervously. I had taken it before, I had to be able to take it again, right? He rubbed something onto his cock, and pressed my legs forward to expose his target. I could only see his eyes above my feet as I watched him aiming his cock for my hole. He brushed along it teasingly before lining himself up perfectly. Holding himself steady, he looked back into my eyes before slowly pressing himself inside.\n\nMy eyes widened, and I fought back a scream as he entered. He was so big. Even after all of his stretching I still felt like I was being split in half, but at the same time I wanted so much more of him.\n\n\"Slow!\" I gasped, the first words either of us had spoken since we entered my hotel room.\n\nHe came to a stop, letting me adjust to his girth, and waited for my nod before easing more of himself inside of me. It felt like a lifetime before I felt his hips press against my ass, signaling that I had finally reached the end of his impressive shaft.\n\nI let out big relieved breaths as I relaxed my legs, letting my feet finally ease down to the mattress. Trevor lowered his body down to mine, and kissed me sweetly on the lips, brushing sweat clumped hair from my forehead.\n\n\"Are you okay, baby?\" he whispered.\n\n\"I think so,\" I replied, still trying to calm my breathing. I could feel him throbbing inside of me as his blood surged through his cock, twitching involuntarily as he waited for my signal. After a few more careful breaths I rocked my hips slightly and pulled his chest harder against mine.\n\nHe took my cue and began to make small strokes into me. The more he fucked me, the more relaxed I became, and the pain faded to the background leaving the pleasure filling me pure and untarnished. His thrusts became longer and deeper, stroking against that sweet spot inside of me. My cock rested between our bellies, and his sweat slicked skin brushed along it with every pass.\n\nHis lips kissed my neck and I moaned into his ear as we made love. It was slow and sensual, our bodies undulating together. The pleasure ebbing and flowing in waves, rising and falling, but always rising further. Everything faded away except him and I, and that glorious pleasure.\n\nI could feel it building, swelling to fill me to bursting. My skin felt like it was on fire, and my entire body ached and trembled so good. A high-pitched keen escaped my mouth as I approached my climax. I thought I was there, but the pleasure built even higher, then higher still. It nearly hurt, it felt so good. When I finally burst, it wasn't in a violent explosion but in crashing waves of pleasure. Instead of spurting, cum oozed from my cock, dribbling onto my belly. I couldn't stop the screams of ecstasy or my nails from digging into Trevor's back as my entire body convulsed beneath him. It lasted longer than any orgasm I'd had before, going on and on before finally ebbing down to a warm body-filling glow, leaving me panting and shuddering.\n\nBy the swelling, and quickening thrusts, I could tell Trevor was right behind me. Looking up at him, seeing his eyes locked onto mine, drinking me in as he raced towards the edge, I wanted nothing more than for him to cum deep inside of me. I wanted to be the one he came to.\n\n\"Yes!\" I whispered, pulling his head to my lips, kissing him. \"Cum! Cum for me!\" I urged him, rocking my hips to match his thrusts.\n\n\"Fuck!\" he cried, lifting his body up so he could power harder into me.\n\nHe sat up onto his knees, pulling me with him by the hips so that my ass rested on his thighs, and continued pounding into me with a fury. I could see that painful anguish on his face as he chased his orgasm, and I could see it nearing in his eyes. I had no time to savor that beautiful moment that I made him cum though, for at that same moment, I felt something rise inside myself. I felt that swelling pressure once again, but it couldn't be. As that sensation swelled again, I was sure another orgasm was approaching. Desperate to reach it before Trevor came, I grabbed my cock, still slick with my own cum, and began stroking myself furiously. Trevor saw me, and began thrusting harder, his eyes glued to my cum covered shaft.\n\nA low growl escaped his throat as he fought to last. He looked like a Greek God as he powered into me, muscles glistening in the weak light. With an anguished final cry, he slammed into me with one jerky thrust after another. So close, I continued stroking my aching cock. I could feel a warmth spreading inside of me as he came deep. With his final thrust, I squeezed my cock tight and one violent spurt of cum shot out to streak across my chest.\n\nI'd just had a multiple orgasm. It felt amazing, incredible, and life sucking. I collapsed, every muscle in my body giving up at the same time. I felt Trevor's cock slip from my worn bottom, and the sensation of cold air rushing in as I was left gaping momentarily. An instant later Trevor's heavy mass came crashing down beside me, and our rapid breath filled the silence as he held me.\n\nWhen I woke, it was still dark out, and Trevor slept quietly beside me. I smiled, remembering what we had done, and feeling him beside me. I tried to savor it for as long as I could, but nature called. Regretfully, I slipped from bed and went to the bathroom. Between relieving my bladder, and cleaning up, I noticed how I looked. My makeup was beyond destroyed, and my hair was a tangled mess.\n\nI contemplated reapplying my makeup so he wouldn't see me without it, but after some thought, I just wiped it all off with makeup pads. I didn't look bad without it, and this was Trevor. I trusted him. I did however brush out my hair. There were limits to how bad I would let him see me.\n\nBy the time I had my hair fixed, I was wide awake. I spotted Trevor's dress shirt on the floor just outside the bathroom and slipped it on, looking at myself in the mirror. You always see girls wearing their man's dress shirt after sex in movies. The shirt looked huge on me, and only two buttons were left to hold it closed. Even so, with my stockings. And the way it draped open over my cleavage, it looked hot. I could feel my arousal stirring as I walked out.\n\nOn my way back to the bed, I stopped to check my phone. I was curious if Kennedy or any of them had messaged. It was radio silent though. If I knew them, they were probably still at it.\n\n\"Come back to bed,\" Trevor said, making me jump. He was leaning up on one elbow watching me with an easy smile. I began to oblige, when he spoke again. \"You look good in my shirt.\"\n\nI looked down, following his eyes, and saw that my cock was hard, sticking straight out between the flaps. I blushed but didn't make any move to hide it as I crawled onto the bed, and eased myself down beside him.\n\n\"What did you and George talk about?\" I asked, the question just popping out. I wasn't sure where it came from, but I had wondered about it earlier.\n\n\"George?\" he asked, momentarily confused.\n\n\"Mr. Lockwood,\" I clarified. It seemed that Skylar and I were the only ones that called him George.\n\n\"Oh, he just wanted to know my intentions,\" he said, putting an arm around me and pulling me to him. I let my head rest on his chest and hooked my leg over him.\n\n\"And what did you tell him?\" I asked his chest, trying to hide the hopeful tone in my voice.\n\n\"I told him...\" he began. \"that I wanted to be your boyfriend.\"\n\n\"Really?\" I smiled, sitting up to look him in the eyes. I was unable to keep the girlish glee from my voice.\n\n\"Really,\" he replied. \"I only have one more semester for my degree. I should be able to do those classes online, so if you want, I can move down here.\"\n\nI couldn't contain my excitement. I jumped up to straddle his waist and kissed him hard.\n\n\"I'd love to be your girlfriend,\" I said. I felt like the luckiest girl alive as he kissed me again. I could feel those stirrings building up in me, and I could feel something of his growing as well. I began gyrating my hips, coaxing him back to life while my mind raced with possibilities.\n\nFor the last few weeks, my future had looked scary and bleak. Now, it might be uncertain, but it was filled with possibilities and hope. Out of nowhere, my mind suddenly formed an image of me in an elegant white dress and a veil, standing in front of Trevor, and my heart stuttered. Another image came of the sexy lingerie I was wearing underneath for him, and my cock twitched violently. During my nearly 19 years of life, I had never thought about my wedding day before, and the thought of possibly marrying this man made me so happy, and oh so very horny. I might not have been able to see the future, but in that moment, I knew exactly what I wanted. I wanted to marry this man, but first, I wanted him to fuck me until I screamed.\n\nAnd he did.\n\n*** *** ***\n\nEpilogue.\n\nThe school kept their word, Decker was fired, and I was there to watch him get arrested. It was as satisfying to watch as I thought it would be. The Dean was allowed to resign, but he was eventually arrested as well. It turns out he and Decker were both blackmailing students into sexual favors. More girls began coming forward after they realized they would be taken seriously. Mrs. Holland was appointed temporary Dean until a suitable replacement could be found.\n\nI was allowed to continue at Mayweather, and I even finished out the year in the dorms. Some people were against me staying, but they had been drowned out by overwhelming support. I even got my chance to use the open showers with all the other girls, though it was more awkward for me than it was for them. They all couldn't stop staring at my junk, and then it got hard and it was a whole thing. No one was grossed out, there was plenty of blushing, and some suggestive looks, but I realized that that was one of those things that I'd built up in my head, and it was nothing like what I thought it would be. It was much easier to shower alone, or with Kennedy and Abigail, but only late at night. They had to amend their appearance around other people, what with Kennedy coming out as a Lockwood Heiress.\n\nThere were a few rumors that went around concerning Kennedy and Abigail and their possible sexual relationship earlier in the year. They both denied it, of course. Their story was that they both had an on and off sexual relationship with me, but never each other. It was thin, and most people saw through it, but in the end there wasn't any proof. No one ever saw anything untoward happen between them, and if they did, no one was talking. It eventually blew over and became one of those rumors that everyone knew wasn't true, like the swimming pool on the roof of Chamber's Hall.\n\nMr. Lockwood bought us that house to live in during school, and the times we had there rivaled anything that happened at Mayweather. Skylar lived with us for two more years before her and Mr. Lockwood finally got their shit together and had sex. No one was surprised. Now they're dating and spending all their time together while Owen keeps an eye on us.\n\nAs for me, I continued my degree in Gender Studies, but decided I also wanted to pursue law so that I could fight for others like myself. I was accepted to Harvard, and this time, when they accepted me, they knew exactly who they were getting. And about that money I got from the settlement? I didn't blow it on random stuff, or plastic surgery this time. I asked George to help me invest it and I now own quite a successful portfolio.\n\nPeople still recognize me from time to time, but the national fame has faded. When the real story of my life came out, they made it into a Lifetime movie with all the sex redacted. Kennedy and I still think it would have gone over much better as a Skinamax or HBO series.\n\nAs for Trevor and I, we're still together, and our wedding was just as magical as I imagined it would be. Maybe one day I'll tell you all about it.\n\nTHE END OF WOMEN'S STUDIES\n\nTo you, the grateful reader, thank you.\n\nSoB"
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "anal",
        "incest",
        "jail",
        "lesbian",
        "love",
        "oral",
        "transgender",
        "transsexual"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/womens-studies-ch-15"
}