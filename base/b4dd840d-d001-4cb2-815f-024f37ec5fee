{
    "title": "My Only Talent Ch. 05",
    "pages": [
        "Monday morning I spotted Nora Upman at early breakfast, but as soon as she spotted me she disappeared! As I ate my breakfast alone, I sent Theo Cadwallader an email asking about the PIG Lake Bash and waterskiing. \n\nI finished off my erotic story for Rhetoric and Composition, weaving a tale of two lovers, described unmistakably as me and the hot brunette girl in my class, having a shared fantasy of a nice looking and slightly older girl, described unmistakably as our TA, go down on both of us to get us wet and hard and ready and then having that same girl watch us make each other come and then suck us both clean while we spanked her ass!\n\nI got to class just in time to hand in my paper, and saw the brunette handing hers in, too. The TA scanned both of our papers as soon as we turned them in, and looked up and shivered, with a complex mix of Suzie signals spilling out! I wished I could read the brunette's work, too, but at least she was leaking some of the wild and rapidly changing Suzie signals, also. We reviewed some other topics from our assigned readings, and then the TA promised to have our stories back to us in Friday's class. In Engineering 101, I was again reminded of my need for more calculus refresher work. \n\nI got a text back from Theo Cadwallader, who said waterskiing was practically a required activity at the Lake Bash, and my date and I were invited to ski on his 'personal tow' the 'Ski Cadwaterer III' which was always moored (majestically I assumed!) at the Phi Iota Gamma lake house. He would provide skis and all gear, we just needed swim suits, but the suit was optional for my date! I thanked him and said I was looking forward to it, and he replied that Kevin was also invited, since the PIG's wanted to see Lou water-ski, and who was I bringing? I told him don't worry, you'll be happy! \n\nI saw Janet at early lunch, and she said she wanted me to have some 'lunch dates' with Melanie as prep work for spending the night with her. Janet was going to visit a friend at another college and would be gone all of the coming weekend, including the upcoming Monday holiday, and she wanted me to 'do' Melanie while she was gone. Since I was not going to give up running with Suzanne on MWF, it would have to be early and short lunches MWF or more normal lunches TTH. She said Melanie could do Tuesdays and Thursdays, early, but she had not yet committed to 'doing the deed' with me, although she was interested. \n\nWhen I got to the track, I spotted Suzanne sitting on the steps of the Economics Building nearby in her running gear, gesticulating wildly and arguing with someone. She was talking loud enough for me to tell she was yelling and animated, but not loud enough for me to hear all her words. I moved a little closer and realized she was sitting next to Nora. I froze. Then Nora burst out in tears and ran away! What the heck was going on here?\n\nI quickly moved onto the track before Suzanne could spot me watching, and started stretching. Suzanne joined me and she was sniffling like she had been crying, too! \"What's going on?\" I asked.\n\nShe sniffled again. \"One of my assistant TA's has been way too overprotective of me! I understand that she talked to you about me. What did she say? What did you tell her?\"\n\n\"Nora Upman accused me of 'taking advantage' of you, and said that I was a running dog and that I should be ashamed of myself! I told her that I thought you were wonderful and I had nothing to be ashamed of! She was so pissed off she just walked away from me. I haven't talked to her since, and I thought we were friends! We used to talk almost every day, but she may not talk to me again!\"\n\n\"So you didn't tell her about sleeping with me?\" her eyes were red and she was angry. \n\n\"No! I will never talk to anyone about that. If you want someone to know you will have to tell them, or tell me I should tell them. Otherwise all I will ever say to anyone is that we run together on campus and I think you are wonderful.\"\n\nShe looked thoughtful. \"Someone from the soccer team must have seen you and my improved demeanor and put two and two together. But I still don't know who told Nora.\"\n\n\"Why was Nora so upset? \"\n\n\"She was my major supporter when Mike was hurt. She was wonderful to me, and very protective of me. The funny thing is, she was the one pushing me to start dating again. But when I did, she freaked out! How did you meet her?\"\n\n\"She lives in the freshman dorm, at least for this semester, and then she is moving to a co-op. Our schedules mean we both eat early at most meals, so I see her a lot. We usually sit together and talk. She is very bright and I enjoy talking to her!\n\nSuzanne laughed. \"She's not just bright, she's a freaking genius. Her IQ and SAT and GRE scores are off the charts! Her father is some kind of high dudgeon financial muckety-muck in the British government. She got into The London School and Oxford, but she wanted to come here so she would 'be less parochial, global not just British'. She can go to graduate school anywhere she wants! But maybe she wanted you for herself! Are you attracted to her?\"\n\n\"Well, I sort of was when I first met her, but she made it clear it was not reciprocal, and I believed her. Now that you mention it, she did slip into a British accent when she chewed me out! \n\nSuzanne snorted. \"She gets all British and formal when she gets emotional! But I set her straight on that! I told her what you offered me and that you were totally honest and above board with me, and I accepted willingly. I also told her you made me happier than I have been in years, and that you are a wonderful lover! That's when she freaked out. Maybe she is jealous and wants you for herself?\"\n\n\"More likely she wants YOU for herself, there, iron woman!\" I said. \"You may not have seen the way some of the women at the toga party looked at you.\"\n\nSuzanne chuckled. \"Your roommate's girlfriend Lou practically drooled on me, like that guy in the conga line! I get hit on all the time by some of the gay and bi soccer girls! If you hadn't come along I might have turned to them for comfort. But I really like men better.\" She looked at me teasingly. \"Of course, if I wanted to swing that way, I could do worse than Nora, huh?\"\n\nI froze for a minute she and caught me mouth breathing and tickled me! I tried to recover. \"She is so pretty and sophisticated that she probably has ten boyfriends and five girlfriends and has to use an app to schedule them all!\"\n\nSuzanne laughed. \"I don't think so. In fact, she told me she was for all practical purposes celibate; she probably sublimates her sexual energy like I was doing. She takes 21 credit hours each semester and she will get three different undergraduate degrees in May. I have never seen her with anyone, male or female, except for study groups. She is pretty hot, though, you have to admit!\"\n\nI smiled. \"Only if it won't get me in trouble with you!\"\n\nShe laughed. \"It might get you in some trouble you would like, Animal!\"\n\nI looked at her challengingly. \"I suspect you can have us both if you want, separately or at the same time!\" \n\nShe looked thoughtful and put her tongue up against her upper teeth and just held it there. That drove me crazy! Did she know that? \"Hummmmmm\" She said. Oh Please! Please make it so!\n\nWe ran 7 miles, plus the sprint lap and cool down laps. I got a great runner's high, and told her that waterskiing was definitely planned for the Lake Bash, including Theo's comment. She smiled brightly. \"I will wear a suit, but I am sure they will not criticize my choice!\" I told her Kevin was driving to the party so we would pick her up Saturday morning, but I was just able to get up and stay on skis, nothing fancy. She said don't worry she could teach me some stuff and with my abs and gluts and recent running work I should do fine!\n\nI just made my afternoon class and then caught up on homework. Janet texted me to meet Melanie at 1130 Tuesday and Thursday for our 'lunch dates' and I replied that I would. \n\nThen Lara texted me saying she was going to be with her dad at the away ESU football game this weekend which was being played near her home, and she would be gone from noon Friday until noon Monday, but maybe we could get together at her place Monday afternoon? I quickly said yes, and that I would be giving her instructions for her preparations for some future training! Then she said that for the following week's Saturday home game her father was visiting here and she wanted me to go to the game with them and dinner after, and I said yes. I studied for several exams coming up Thursday and Friday, which always seemed to happen right before a Monday holiday, and finally went to sleep about midnight Monday night.\n\nTuesday classes were unremarkable except for the review sessions for the exams. The class with no exam on Thursday had a pop quiz today, but I did fine because I was caught up on all the homework. I realized I had no date for Friday night, so I called Chrissie and asked her to a movie. She said she could not go because her sorority, Beta Omicron Theta, was having a dance that night, but would I like to come to that. I said yes. It was a 'fall festival square dance and hayride' with western dress, but she made a point to say it was not a Halloween costume party.\n\nI went to meet Melanie at the appointed time for lunch Tuesday, and didn't recognize her until she tapped me on the shoulder in the line! The black hair and fingernails and multiple earrings and nose ring were gone! She had natural looking light brown hair done up and a really nice looking blouse and skirt outfit that showed off her figure very well. She looked like the hot but virginal ing\u00e9nue in a typical Hollywood romantic comedy. \"Wow!\" I said. \"I hardly recognize you! You look great.\" \n\nShe smiled uncomfortably, but I actually detected a little Suzie signal action from her for the first time! We got our food and sat down. There was an uncomfortable silence, which I tried to fill. \"Looks like lots of people are going somewhere for the long weekend, but I am staying here. Would you like to go to a movie or something Sunday night?\"\n\nShe looked at me uneasily. \"You don't waste anytime, do you? Are you making me the same offer that you made Janet?\"\n\nI smiled. \"Do you want me to?\"\n\nShe did not smile. \"I don't know what I want!\" She looked frustrated.\n\n\"Look, Melanie. Janet and I are completely honest with each other, and I'm going to be honest with you. She told me about your stepfather, and how he hurt you. I can only promise you that I will do my best not to hurt you, I will always tell you the truth, and I will never tell anyone about our relationship, even Janet, unless you want me to.\"\n\n\"Oh really! You are going to be 100% honest with me? You would be the first male ever!\"\n\n\"Yes. I will. You may or may not like what I say, but it will be the truth.\"\n\nShe looked at me really funny. \"How many girls had you slept with before Janet?\"\n\n\"Only one. My family made me promise to be celibate until I turned eighteen.\" I was answering only her specific question. \n\n\"Do you want to sleep with me?\"\n\n\"Yes.\" I was not going to add that it was primarily because Janet asked me to, although she was looking a whole lot better today than she ever had before. \n\nIt was like d\u00e9j\u00e0 vu from my initial conversation with Janet. Melanie's facial gestures and body language said she was going to tell me to go straight to hell, but her Suzie signal had gone from zero to weak to medium! I decided to 'feel her out' so to speak. \"Do you want to sleep with me?\"\n\nHer eyes went wide! Her Suzie signal spiked up. \"I don't know\" she said.\n\n\"Yes you do.\" I said. \"I will treat you very well, and do my best to please you.\"\n\nHer face was a mask, with almost no expression, or perhaps one of fear. But her Suzie was saying she wanted it! I listened for the 'special modulation' that would give me some specific ideas about what she might want to happen. Lots of noise, but no recognizable signal detected. Perhaps it was time for active sonar targeting. I pinged her with a strong image of me kissing her. Strong echo! Pinged an image of taking off her top and kissing her breasts. Strong echo! Then I sent an image of me pulling down her pants and putting my hands on her ass. Echo, echo, echo! Very strong. She fidgeted and coughed, moving her chair around. \n\nShe finally spoke. \"Do you find me attractive? What do you want to do to me?\"\n\nI had to play my hunch, using the data that her Suzie had sent me. \"Sitting her with you now, I am thinking about pulling down your skirt and putting my hands all over your cute little ass!\" \n\nHer Suzie signal went up, down, back up, and all around! Her face went ashen, and then she blushed and looked from side to side. \n\nI continued \"But that's just the start.\" I sent her a strong image of me taking down her panties and spreading her legs with my arms, then kissing her legs. Her Suzie signal rose even higher. I listened again in passive mode, and got a weak signal, and when I concentrated on it, I saw her hands grabbing my head and pushing it down between her legs! \n\nI stood up. \"I've got to go. I'm looking forward to lunch Thursday, and especially to our date on Sunday!\" My dad would have called it a 'presumptive close' and it was. But as I walked away, I knew two things. One, she was watching me all the way out the door, and two, her Suzie really wanted me to take her skirt down!\n\nAfter lunch I asked Kevin about Chrissie's sorority, BOT, and he laughed, and said \"the \"Booty's\" are pretty much the female equivalent of Upsilon Delta Phi, they don't haze, no dope, moderate drinking only, and they have the highest GPA and graduation rate. Half the membership wants to be Amy Grant and date Tim Tebow, and the other half want to marry rich and become leaders of the Junior League. But I also hear that in private, some of them are hot as hell. They have a huge Sadie Hawkins dance every year where the girls ask the guys to the dance, and legend has it that if a Booty asks you to that dance, it's going to be a real 'booty call' for you, because she will wear you out! They do have some great looking girls, elaborate and well planned parties, and they must be smart because lots of their alums are either married to senators and billionaires or become senators and billionaires themselves! They also have the largest and most well decorated house by far, and they do more real charity work than all the other sororities combined!\" \n\nWednesday morning in Rhetoric and Composition, the TA gave the brunette and me some soulful looks, and lots of little noisy and confused sounding Suzie signals, but said nothing else about the erotic stories she had pledged to hand back graded on Friday. I introduced myself to the brunette, who was named Sarah, and said \"This latest homework assignment made me feel a little weird!\"\n\nShe laughed conspiratorially. \"I can see the TA reading them in her bed and playing pocket pool!\"\n\n\"Wow, that's some image to contemplate! You know, I think from the way that she looks at you she would want to play in your pants.\" Sarah's eyes got big, and her little Suzie signal got much louder. \"Does that freak you out?\" I asked her.\n\nShe laughed and looked at me with kind of a sneer. \"Not really. Does it freak you out?\"\n\nI laughed. \"No. I guess I am a typical horny guy. I would like to watch for a while, and then jump in myself!\" \n\nShe laughed. \"Well, at least you are honest about it! Good for you.\"\n\nI hurried through an early light lunch by myself and then warmed up at the track. Suzanne showed up on time and we ran in silence for about 5 miles. Finally Suzanne said \"I spoke to Nora again, and she is going to be talking to you. I will let her take it from here.\"\n\nI was a little worried \"Are you and I still okay?\"\n\nShe snorted. \"Yes, you animal, but you owe me some serious slave time. Take whatever vitamins you need to keep your tongue in shape!\" She laughed heartily. \"Your wind is improving. Maybe you should start running a little earlier so you can do more than 7 miles. If you want to do that I will just join you when I get done with my 1100 class.\"\n\n\"Haven't I seen you running even longer in the afternoons?\"\n\n'Yep! I do 27 miles twice each month to keep my long distance edge, and I also do wind sprints twice a week when I am not doing a 27.\"\n\n\"Well I am glad you do. Leads to a lot of ass worship!\"\n\n\"I chose my slave well. Get ready to serve me!\" She laughed again as we finished seven, plus our sprint and cool down laps, and talked briefly about Saturday. I told her I was looking forward to seeing her suit at the party Saturday. She smiled. \"See you for running Friday!\" and was off. \n\nI made my afternoon class, and got a text from Ralph reminding me about the mixer tonight. I worked on everything and caught up in all my classes except my calculus review plan until dinner, then showered, shaved again, and dressed for the mixer. It was a medium walk to the UDP house from the dorm. \n\nThe house really did look a little different, and I remembered Kevin saying it was a 'zero energy\" design. It was skinned with the same locally quarried limestone that many houses used around here, and had lots of native plants in the 'xeriscaping' around it, but there the similarity to other Greek houses ended. The roof was one big corrugated metal slab dotted with skylights and most of the rest of it covered with solar panels, facing south and tilted at about a 30 degree angle, with gutters at the edge that routed all the rainwater to a cistern system. There were big black hot water collectors that supplied enough for the house, even with the large meal services and lots of college guys taking showers, and also kept the pool warm in the winter. There was a huge patio to the south near the pool that that was made up of another kind of photovoltaic solar panels that let about 20% of the light through and converted the rest to electricity. Huge tubes snaked deep underground for the geothermal loop heat pumps that kept the temperature comfortable year round. A big garden, greenhouse, and second rainwater catch system supplied lots of vegetables for the table, with a big compost area nearby, and a grey water system for the landscape areas. \n\nRalph met me at the door and gave me a walking tour. He said the thick walls were made up of an adobe brick made of local clay and straw with a huge insulation factor, and then faced with limestone on the outside. The roof and foundation were filled with advanced spray foam insulation and the interior of the house had lots of brick, tile, and water tanks for thermal mass. The house was connected to the grid, but the electric bill, even for such a huge house, was about $40 per month, and $25 of that was the minimum monthly service charge. A big LCD monitor in the entry hall displayed all the energy statistics of the house. They had a separate pool house, guest house, and study hall arrayed around the swimming pool. The mixer was being held in a party hall in the main house and spilled out onto the patio around the pool. He introduced me to his pledge trainer, frat president, and the other members of his pledge class, and also to 'Oiler' their resident mathematical genius and calculus maestro, who happened to be from Houston.\n\nThe mixer was a reception line setup like at ZZZ, just in a room with much higher ceilings and better lighting. It was with two sororities I had not heard of before, but that covered most of them! I asked Ralph if it would be okay if I told the guys which girls seemed interested in them, telling him that I was learning to read 'micro expressions' like that guy on the TV show. He said yes, especially for Oiler, because although he was a mathematical genius and normally loquacious he was painfully shy and tongue tied around girls. He was also 6' 5\" with wild curly hair and had so much energy that he terrified many girls!",
        "The girls began to enter and I noticed they were not quite as well made up as the ones at the ZZZ event, but they all had bright, active eyes and looked very aware and were well mannered. These girls all had a hint of the panache that Nora had, and some had a lot of it. I was disappointed several times by some great looking prospects that signaled nothing for me. I also notice by about girl number 30 that none of them so far had even a hint of tobacco on them! I liked that! One striking girl came through in a bright blue dress. She was a little taller than Lara, just as voluptuous, but with black hair and blue eyes that matched her dress! She was gorgeous. But not even the hint of a Suzie signal for me. Damn. The good news was that she sent a strong and recognizable one for Oiler, and even flirted with him in the line, although he ignored it. Come On, Man! You can't miss an opening like that. I took him aside and pointed him out to her. He was incredulous, but promised to ask for her number.\n\nA few minutes later an even taller girl came in, 6' 2\" at least, and very athletic looking. Volleyball or basketball I assumed. But the most striking thing was her unusual olive green eyes! They were on fire and taking in everything in the room like a laser scanner. She sent nothing for any guy that wasn't at least 6' 3\", which left me out, but she did send a medium signal for Oiler. I also made him promise to ask her out. He looked very shy and said \"I like short girls\" and looked embarrassed. I told him I would keep looking but I was pointing out the girls that seemed to like him, which was a much better strategy!\n\nI spotted several girls who were sending for Ralph, and a couple for some of the other guys, and passed on the information to them. I heard a few girls sending for me, and discovered that I was hoping for some moderate signals from girls I could pursue next year, and not strong signals from girls that wanted to do me tonight! I thought about the whole idea of the most efficient scanning and sorting procedures for me, and decided that was an engineering design problem I should think about. Towards the end of the line, I spotted Sarah, the shapely brunette from my Rhetoric and Composition class! \n\nI smiled and we talked as the line wound down into the 'random mixer and phone number solicitation' phase. \"Are you in UDP?\" she asked.\n\n\"No. One of my best friends just pledged and he invited me to the mixer. What sorority are you in?\"\n\n\"None, but one of my friends from high school joined one and she is trying to get me to pledge, too. This mixer is one of the 'benefits' in her sales pitch!\" She laughed. \"This is an amazing house, but the guys seem a little uptight.\"\n\nI laughed, \"Well I only know about my friend, and he is very selective, but not uptight. \"I have a theory that intelligent people make the best lovers.\"\n\nShe looked interested. \"Guys or girls?\"\n\n\"Well, I developed my theory on women, but it might work for guys to, but you will have to tell me. With my admittedly limited sample, my hypothesis is that the brighter a girl is, the better she is in bed!\"\n\n\"Why do you think that?\" She looked intrigued. \n\n\"Smart girls are more creative and inventive, and they give you more surprises and fun! Really brainy girls are also a little bit neurotic, which makes them a little kinky, which sometimes can be fun!\"\n\nShe looked at me very directly. \"You don't seem like a really kinky kind of guy!\" she said almost challengingly.\n\n\"Maybe not, but I am willing to experiment and learn if that's what it takes to please a lady. But I may not be as kinky as our TA!\"\n\nShe laughed and touched my shoulder and said \"I noticed she didn't write an erotic story of her own for the class to read! What do you think would be in it?\" I noticed her hand was still on my shoulder.\n\n\"Well, this is just a hunch, but I think it would involve kneeling in front of you!\"\n\n\"Ooooh\" she said and gripped my shoulder a little harder. \"Maybe in front of you, too, but I would be more interested if she didn't smoke!\" She smiled again and headed for the punch bowl. \n\nI noticed Oiler talking to the first girl I pointed out to him, just as she smiled and enunciated her number so clearly I could almost lip read it. I saw Ralph was having similar success, and chatting up both girls I pointed out to him, and getting numbers. Then I saw Oiler obviously get a number from the really tall girl, and she was flirting with him so obviously that even he couldn't miss it. As the mixer wound down, Oiler slapped me on the back and said \"Let's go check your calculus level, dipstick.\" He certainly wasn't shy or tongue tied about that!\n\nWe went to the UDP study hall, which was completely sound isolated and equipped with walls that were covered with white boards. He handed me a marker and sent me to the board, and proceeded to quiz me on every aspect of my demonstrably dismal knowledge of calculus. Leibnitz and Newton need not feel threatened! He had me lecture him as if he was a high school student trying to learn it from scratch. It made it obvious to me that there were major gaps in my understanding, and that the things that I felt good about came mostly from rote memorization and lots of workbooks. After 15 minutes, he finally stopped asking questions and started talking. \"I knew the state of math education in most high schools was bad, but not this bad! I suspect your calculus teacher never had a decent understanding either! Let's take it from the top!\"\n\nHe went back to geometry and limits, and worked me through things, having me answer his very pointed questions until I was clear on what I did not know. Then he asked more questions that made me understand how to get the answers I did not know. Then he made me derive them myself from stuff I already knew! I learned that three of four things I had memorized without any foundation were better remembered as special cases of one general thing I could derive and thus remember. I lost track of time and tried to follow the logic. Things began to connect for me, and I began to put together logically and conceptually things I had just memorized by rote before. We worked though half a dozen major concepts until I could explain them on the board as a lecture with him seldom interrupting with questions or pointing out errors. \n\nThen he said \"OK, take a 5 minute break\" and pointed me to the little break area and a refrigerator where I grabbed an orange juice. I was thirsty and suddenly hungry, too! When I walked back into the study hall there were four multiple choice questions and four calculus problems on the white board. \"Do your best and call me when you are finished!\" The multiple choice answers are came directly from the basic principles we had worked through, and the problems were straightforward in concept, and I finally worked them and my answers checked! I called out to Oiler and he came in and reviewed my work. \"Congratulations!\" he said \"You just passed last year's differential calculus exam with an 85% score! We need one more session to get you through integral calculus, too!\" I looked at the clock. Two hours total! He was a freaking magician! \n\nAs we walked toward the front door, he said \"I have a date with both the girls you pointed out to me, which exceeds my sum total of dates for the whole last semester! So you get all the math help you need, any time you need it! He slapped me on the back again, and told me call him any time or drop by the house anytime. When I got back to the dorm, I went through the calculus problems for the review session and they suddenly made sense to me. I finished off the assigned problems for the next review, and then went to sleep about 1 AM.\n\nThursday morning at breakfast, Nora approached me. She looked tentative and inhibited, which was very unusual for her. \"I need to apologize to you\" she began. \"Suzanne set me straight about your relationship with her. I was being over protective of her, but mainly I was jealous that both of you have such a relationship and I don't! And I let it carry me off track. Can you forgive me?\"\n\nI got right in her face. \"Only if you forgive yourself and drop the self pity. You knew I was hot for you but you shut me down! Why?\"\n\nShe sobbed. \"I can't tell you that!\" I waited. \"Or more correctly I am afraid to tell you because you will think I am a bigger freak than you are!\"\n\nI got even closer to her. \"Now that is not a statement you can just let hang! I already think you are a freak, but in a good way. You know you can trust me, just like Suzanne did. So tell me the truth!\"\n\nShe shrugged. \"You may be sorry that I did, but I will tell you anyway! I know you can hear the female signals! You are one of the 'talents' my parents warned me about. I was shocked to learn that you can send images, because previously I have only heard of females that can do it! I am a talent too, but a different one. I cannot hear the signals like you can, but I can control the ones I send very finely! I can prevent my signals from going out at all, and I can also send images better than most females. But I can see the images that you project, and that freaked me out! I have been using everything I have to stop my signals for you from leaking out. Yes I am attracted to you! But my parents taught me never to even consider being with a \"talent' male! \n\nI snorted. \"Well maybe that is good advice for me! Maybe I should stay away from a female 'talent' too!\" I thought a minute. \"What is the rationale behind staying away from males with 'receivers\"? \n\nHer eyes flashed. \"Because they may sense my attraction to them and my sexual tension and use it to manipulate and subjugate me!\"\n\nI considered that. \"Or they could use their talent to connect with you and please you and always be in tune with your moods! Wouldn't that be a positive thing? I was not told about my talent until I was eighteen, and one of the first things I was taught was that I should never use my talent for 'one night stands' or to bed girls who liked me but that I didn't really care about!\"\n\nShe looked at me with wild eyes. \"Is that why you said you want to stay in a relationship with your 'sub' at least until the end of the spring semester\"?\n\n\"That's part of it, yes, but also because it will take that long to really understand what pleases her and if it works for me, too.\" \n\nAnother long daisy chain of thoughts suddenly occurred to me. \"How many other people have 'talents'? How long has your family known about them? What happens when 'talents' mate and bear children? Do the talents breed true?\"\n\nShe shuddered. \"Let's slow down. I have been expressly forbidden to discuss these issues for my entire life. It is going to take some getting used to! Let's think about all this and have another discussion later.\"\n\nI wanted to know more, now! \"Two more things before you go! First, are you interested in Suzanne sexually? Second, why don't you want to help with my sub?\"\n\nShe cried like she had been chopping onions! \"You bloody boob! I wanted to wait and see if you were a nice guy or a manipulator because I wanted you for myself. I am functionally bi but have never actually been with a woman, but I think Suzanne is totally straight, so my feelings may not matter. I don't want to get involved with your sub because I don't want to 'queer' my chances with you for the future, you arse!\"\n\nShe got up crying and almost ran away. My talent may let me hear signals from women, but it sure did not guarantee understanding them! I was almost late for my morning classes.\n\nI spotted Melanie early at lunch, and she seemed to look even better than Tuesday and she was practically strutting in my direction! I stared at her openly and sent as strong an image as I could of kissing her. She was smiling when she joined me in the line. Her skin was glowing and her hair was shining. She smelled fantastic! She had on a red 'overalls' outfit that would have exposed her breasts entirely between the 'suspenders' save for the white silk turtleneck she had on. But it didn't hide much, in fact it highlighted and accentuated her breasts, and she was obviously braless. I stared even more frankly and licked my lips. \"Wow. Melanie! You take my breath away!\"\n\nShe seemed very pleased, and so did her Suzie! We went through the line and I went passive and listened carefully for that detailed modulation. I got an impression of some enthusiastic, even rough, fucking and shuddering orgasms on her part. She set down her tray and dropped her book bag, and went over to fill her glass at the drink dispenser. I notice a 'romance novel' entitled \"My Weakness' visible at the top of her bag, the kind that featured a bare-chested body builder male with flowing long hair embracing a prim and proper looking woman, who was saying something like 'I was shocked to find I could not resist him, no matter what he wanted of me!' I could do that for her! It was my duty!\n\nPresumptive close, phase two. \"On Sunday, I thought we could take a walk around the river park downtown, before we come back to your room to spend the evening.\" I sent pings of me grabbing her and controlling her, roughly stripping her and taking her even more roughly. Suzie said 'Bingo'! \n\nShe blushed, but acted coquettish! \"What exactly are your expectations?\"\n\nI laughed and took her hands in mine. \"I am going to take you like Sherman took Georgia!\" I raised her hands to my lips and kissed them tenderly. \"I will be gentle and go slowly at first, mindful of your pleasure, but by the end of the night I will be rough and demanding and get everything I need and want! And you will give it up for me without reservation. Do you understand me? I looked at her steadily, and she did not look away!\n\nHer Suzie signal went absolutely wild! She had gone from sending nothing for me when we met to a loud and raucous roar! Wonderful! Her eyes got big and her face got even redder! She did not speak, but her chest heaved, making her big nipples stand up even more. She had gone from a depressed Goth girl to a little brown haired goddess that made my mouth go dry. I wanted her badly now! \n\nWe ate in silence for a few minutes, both of us lost in thought. Then I said, \"Come on, I will walk you back to your room.\" We put our stuff in the disposal line and she walked beside me as if in a trance, taking the elevator up to the third floor. I knew Janet's schedule and she would be far across campus at this time. \n\nWhen we got to the room, she turned and leaned against the door, and said, \"Well, I guess I will see Sunday about noon, and then...\" She never got to finish because I took her in my arms like a swashbuckling pirate and kissed her hungrily on the lips, putting my hands on the tight little butt checks of her outfit and squeezing her hips against me, pushing my right thigh against her snatch! I then held for a few more seconds in a very tight embrace, then turned and walked away without looking back. Her Suzie followed me all the way down the elevator, and I knew what was going to happen Sunday!\n\nMy afternoon classes were two exams, and I had been studying each of them for three one hour periods during the day, and I thought I was ready, and I was. For Engineering on Friday, I used Oiler's review technique and went to a vacant classroom to pretend to lecture high school students on the concepts for the exams, and that rapidly highlighted where I still needed work. After sitting with Kevin at supper and hearing more tales of the Big Pig Lake Bashes of the past, I was sure that Saturday would be interesting. I capped off my study lists and my engineering 101 homework assignment, and was ready for Friday. I went to sleep about midnight, and dreamed of Melanie!\n\nFriday morning I did not see Nora at early breakfast, but I did see one of the UDP pledges I met at the mixer who also lived at the dorm. We sat together and swapped a few tales, and he said that Oiler had two dates this weekend and he was the talk of the house, thanks to me. I told him that Oiler should do fine, because I thought both of those girls wanted Oiler to chase them, and they wanted him to catch them, too. He laughed heartily.\n\nIn Rhetoric and Composition, the TA heightened the suspense by announcing that she would hand out the erotic short story papers at the very end of the class, and after we received ours we were free to go and she suggested we review our grades and her comments in private. She did say that there were some very interesting and realistic papers, and some others that just seemed to like to use slang words for body parts and showed little story telling ability. We spent the rest of the class analyzing a few great novels from our reading list, with the TA sounding like she thought she could have done better than the authors! \n\nFinally she began handing out papers, in no particular order that I could discern, until everyone had taken theirs and was gone except Sarah the hot brunette and me! \"Mr. Roberts, would you please close the door? I need to have a little talk with Ms. Stevens and you!\" I pulled the door shut and sat back down next to Sarah.\n\n\"I am afraid that there is evidence that you two did not complete the assignment properly. It seems you worked together and collaborated on your story ideas. Did you discuss the stories?\"\n\n\"Yes, but only after we turned them in!\" I said.\n\nShe frowned. \"The how do you explain the fact that both of you wrote stories that ended up with me submissively servicing both of you sexually, in a rather demeaning way?\"\n\nSarah stood up. \"Because we both think you belong on your knees! You want to be on your knees don't you?\" She towered over the TA, and radiated domination! Wow! The TA froze and held her eyes down, and made a little smile that was a hollow imitation of Lara's vitality, but still recognizable. Her Suzie signal said 'whip my ass, please.' \n\nSarah moved even closer. \"Well?\" she said firmly. The TA dropped down to her knees! Wow again!\n\nSarah pulled her chin up to face her. \"Your filthy tobacco habit disgusts me! If you are to serve us, you will have to stop cold turkey. I am a nursing student. When you have gone 4 weeks without smoking, tell me you are ready, and I will give you a medical test to confirm your abstinence. If you pass, I may allow you to suck Mr. Robert's cock! The TA quivered. If he reports that you have pleased him, I may even let you eat my pussy! Until then, you may remember our stories and dream of serving us. Do you understand?\n\nThe TA quivered again. Her humiliation and excitement signals were so loud they were almost painful! \n\nSarah was not through. \"Record an A grade for both of us. Now! Then give me Mr. Robert's story and give him mine! Now!\n\nThe TA hurried to comply. Then Sarah moved around behind her and said \"Down on all fours!\" The TA dropped without hesitation. Sarah spanked her ass, hard, and so many times that I lost count. But the TA's excitement signal grew with each stroke! \"If you don't quit smoking, you slut, then that is all you will have to remember me by!\" Then she grabbed my arm and walked me out with her, leaving the TA sobbing!\n\n\"Holy Shit!\" I said. \"Where did that come from? How did you know it would work?\" \n\nSarah laughed devilishly. \"Read my story! And it's really a public service project I am doing to study smoking cessation techniques! What do you think are the odds that she will comply?\"\n\n\"Pretty good, I think, but then I do not have any nicotine cravings to contend with. I guess it all comes down to one pleasure center over another!\"\n\nSarah laughed again. \"If she passes the test, do you want me to call you?\"\n\n\"Of course! Even if the doesn't!\"\n\nSarah spanked me once, pretty hard, and strutted away. I couldn't help but watch her until she was totally out of sight!\n\nEngineering 101 seemed very tame by comparison, and I tried to concentrate on the calculus review, but found my attention wandering back to Sarah. Suddenly I heard the professor ask for volunteers to 'stand and deliver' a review for the class. He said everyone would have to do it eventually, and I knew my only chance was to be able to use the differential calculus review that Oiler had just given me. I jumped up before anyone else could and said \"I will do a differential calculus review, Professor.\"",
        "I stood and put up the questions that Oiler had used with me, and walked through the key concepts in answering them, then put up the four problems and went through how to work them. It went well.\n\n\"Bravo, Mr. Roberts. You have just elucidated all the key concepts of differential calculus that are required for the review exam next week. The rest of you get ready for Monday, because I will choose someone at random to give an integral calculus review.\"\n\nI was feeling such a high after Engineering 101 that I decided to skip early lunch and go for 9 miles at the running track. I changed clothes, dropped by the dining hall and grabbed a box lunch, then stretched and started running early. The timing worked out because Suzanne joined me when I had completed 2 miles, and we did 7 more plus a sprint lap. \"How many did you manage before I got here?\" she asked as we began our two cool down laps.\n\n\"Two for a total of 9 today, and I will try to get to 10 next week!\" I was really getting a runner's high now and I began to babble. \"I talked to Nora. There is a lot going on with her, but I did learn that she is bi and attracted to both of us, but she has never actually been with a woman!\"\n\nSuzanne almost stopped running. \"Is that all!\" she laughed. \"I suppose we should talk about that?\"\n\n\"Well, she is not ready to act on it yet, but I think she really wants to.\"\n\nSuzanne said \"we will have some interesting pillow talk this weekend, I suppose?\" Boy, Howdy! Would we!\n\nI wolfed down my box lunch on the way back to the room, took a quick shower, and dashed for my final Friday classes. I did fine on my two afternoon exams, and since the BOT party did not kick off until 8, I took a nap!\n\nI had the wardrobe for a square dance covered. My granddad was an accomplished caller and my parents were both square dancers, too. I had been going to them since I was three, and learning the steps since I was 5. I had memorized all of my granddad's 'calls' and 'bridges' and I even had a custom 'Ritter' shirt that my mom had made for me. I put on my best pair of worn Wranglers, and they turned out to be much tighter than I remembered, especially in my thighs and butt, I guess because my running was developing the muscles there. Snakeskin boots and a belt with big silver buckle completed my costume, and I figured I could dispense with my Stetson for an indoor event. \n\nChrissy lived at the last remaining women only dorm on campus, and I walked over to pick her up. She looked fantastic! Jeans twice as tight as mine, practically painted on, and a white silk shirt so sheer that I could see her nipples clearly through it! High snakeskin boots with high heels and just the right touches of makeup to set off her blue eyes and dirty blonde hair perfectly. Life was good! \"You look amazing!\" I told her. \"Do you like to square dance?\"\n\nShe beamed. \"I love it, but I haven't done it a lot.\" We walked over to Greek Row and the BOT house, which was decorated to the nines! The legs of each table were wrapped in rope and each table had a centerpiece of miniature hay bales and flowers arranged in barbed wire. A longhorn steer held court on the front lawn of the house so couples could have their picture taken with him. There was a strong contingent of older alums and parents of sorority members, with most of the males dressed in a 'Texas Tuxedo\" of a black or white tux coat and shirt combined with blue jeans and boots below. A huge buffet of barbeque brisket and boiled shrimp on ice was flanked by 3 bean salad, 'Texas caviar' with black eyed peas, and most kinds of 'local' beer on ice, along with regular ice tea and a 'Long Island Ice Tea' punch. \n\nA full band was up on stage, complete with a horn player, a fiddler, and a slide guitarist! There were playing traditional and 'modern' country tunes and sounding good. We danced a couple of 'Texas Swing' tunes and then had some food and a couple of beers while the band took their first break. Chrissie introduced me to Dr. and Mrs. Ross, an older couple who she described as 'old friends of her family' and said Mrs. Ross was an alum who remained very active in the charity work the sorority did. The band came off break, and an older gentleman, much older than my grandfather, went to the mike and began to call the tunes as the square dancing began.\n\nWhat Chrissy lacked in dance experience she made up in good looks and athleticism! She looked so good that I almost ran into several other folks because I could not take my eyes off her! With each tune she got a little looser and flashier and better looking! I was completely mesmerized, and she was clearly having the time if her life! Then I notice the caller was sounding strange, and the moves he was calling did not make sense! They were disconnected and did not segue smoothly from one to another the way callers are supposed to do it. He looked flushed and started to waiver a bit at the microphone. The band hastily took an early break, and I noticed they had him sit down and drink some water. Dr. Ross went up on stage and examined the man, then shook his head at his wife. Chrissy and I were standing next to her. \"Oh Damn!\" she said. \"That's the end of the square dance!\"\n\n\"Excuse me.\" I said. \"I can call the tunes. My grandfather taught me.\" \n\nMrs. Ross looked at me funny. \"Don't shine me on, young man. Most decent callers are at least twice your age!\"\n\n\"Try me for one song. If you don't think I can cut it, then give me the hook! OK?\"\n\nMrs. Ross talked to the band leader, who shrugged as if to say 'what have we got to lose?' and then motioned me up on stage. I positioned myself at the mike, and the bad leader named off a list of tunes they were planning to play. \"No problem\" I said. They began to play, and I soon got into that familiar rhythm that reminded me of my grandfather and lots of good times. More and more folks ventured out onto the floor, and I really enjoyed seeing them move and have fun. The first tune finished, and Mrs. Ross gave me the high sign. The second song was even more fun. I don't know how many tunes we did, but soon the band leader stopped and announced a break, the dance floor was full and we got a major ovation! \n\nI rushed to get a plain ice tea, and when I was refilling my glass, Mrs. Ross kissed me right on the mouth! \"You saved the party, young man! Thank you.\" Chrissy arrived for a follow up kiss, which left me with stars in my eyes. We did two more long sets and the dance floor was full to overflowing. I jealously watched Chrissy have a ball dancing with several other guys, but she sure was fun to watch! I even made up calls to see her breasts bounce! Soon most of the food and beer was gone, and the band leader was announcing the last square dance, which would be followed by a slow tune for the official 'last dance' of the evening. I got to dance that one with Chrissy, and even though we were both sweaty and almost worn out, it was one of the steamiest dances of my life. Chrissy put her hands in my jean pockets and squeezed my butt, and when the last bars of the tune played out, she gave me a super hot kiss I would never forget. \n\nWe said our goodbyes to the folks at the party and walked out the door, in my mind heading back for Chrissy's dorm. We had only gone about 40 feet when she pulled me into a little alcove near the 'carriage house' style garage at the back of the BOT house. It was apparently a storage area for lawn furniture, which had just been put up for the fall and covered with canvas. She sat on a stack of chairs and repeated the wonderful kiss. Suddenly I was enveloped in her Suzie signal, like being patched right in to the sound system at concert. Everything was crystal clear and I could sense little nuances perfectly. I tuned myself into her and filtered out everything else, as I desperately wanted to know what would make her the hottest! I touched her ass and a few more sweet signals played for me. She was like a giant keyboard, and every little part of her body was a key that sounded a new note. Suddenly, for the first time in my life, I was a musician! I touched her breasts, I kissed her neck, I squeezed her shoulder, I ran my hand down her thigh, and everything worked, everything made her hot! She grabbed my head with both hands and kissed me like a wild woman, running her tongue all around inside my mouth. Suddenly she stopped and gasped for breath, but her Suzie signal was still bellowing loudly!\n\n\"I need to stop for a second and talk to you!\" she said. So much of my circulation was going to my dick that I was not sure I could speak anyway, so I just listened. \"Like you did, I made some promises to my family! I promised to remain a virgin until my second year of college, and even though you are driving me crazy and I want you to fuck my brains out, I have to keep my promise!\" I tried to think through the hormonal fog. My great grandmother used to say that 'a man's got two brains, one between his ears and one between his legs, but unfortunately he only has enough blood supply to run one of them at a time.' I could now understand perfectly what she meant! \n\n\"I understand, but define virgin!\" I was still breathing pretty hard. \"Do you mean virgin in the 'no sexual activity whatsoever' sense, or virgin in the 'intact hymen' sense?\"\n\nShe looked at me with a shocked expression on her face, and then recognition dawned. \"Do you mean like Bill Clinton's narrow definition of intercourse?\" Then she blushed and shook a little bit.\n\n\"Well, sort of, but with full reciprocity, so to speak, and perhaps some things that have not occurred to you yet!\" She looked at me for a long time and I could see her methodically thinking through what I said. Then she gasped and covered her mouth with a wide eyed expression. But her Suzie said she thought it was a brilliant idea, and scandalous enough to sound a few new notes! Since I was so plugged in to her, I saw twinkling images right away: her unzipping my zipper, me nuzzling in between her thighs, and in a final brief but glorious vignette, her up on a kitchen table on all fours while I spread her ass cheeks with my hands! She quivered again, and one of those foghorn style Suzie signals sounded and I thought I was in like Flynn!\n\nBut suddenly she drew in a slow breath, and I heard the foghorn drop away and all those little Suzies fading to silence. Boy did she have self control! She smiled at me, and said \"That might be the letter of the law, but not the intent! But very nice try, you almost had me!\"\n\nI smiled, \"Not a try, beautiful, but a very genuine and heartfelt offer! And here's another one, a frank proposition actually. Next fall semester, starting on the first day of classes, and running until summer break starts, let's go out one night each weekend and go to dances, parties, football games, whatever, and then afterward cheerfully fuck like little bunny rabbits! I will do my absolute best to figure out what pleases you, and I will tell you what I like and you will cheerfully do it for me!\"\n\nHer shocked expression slowly turned to a naughty kind of smile. \"When do you need an answer?\"\n\n\"Let me know at least one day before school starts. But do not take this lightly! If you say yes, I expect you to give it all up for me. I will go slow and be very tender, but before the first set of exams, you will have given me everything, and I do mean everything that a woman can give to a man!\"\n\nShe continued to grin like a kid who knew what she was getting for Christmas. \"And will you do everything I want? What happens at the end of that school year?\"\n\nI smiled. \"Almost anything you want.\" I gave her my now standard line about children, animals, and feces. She looked calm for a minute, as if saying 'well of course' but then her eyes grew wide as she realize all the things that were not precluded! All those Suzie signals came up in fits and starts like an orchestra tuning up! I continued. \"At the end of the year, each of us may decide to continue or discontinue the arrangement, with no recriminations or hard feelings either way.\"\n\nShe smiled, and then looked even craftier! \"Well, I suppose my old high school dating rules still apply until next year! Do you like baseball?\" I stared and her uncomprehendingly. She smiled \"You may take second base!\" That I understood! \"And I will give you an answer on your shocking proposition before classes begin next year.\"\n\nI was the happiest guy in North America! I took my time, slowly touching and exposing her, and then using my Suzie receiver to fine tune my caresses to her responses. I soon had her naked from the waist up, and was liberally interpreting the dating rules to mean I could work with anything I could get to. She had never encountered a Suzie receiver like me in the back of a car in high school, and was soon shocked to discover how effective I could be! She shuddered with her first orgasm from nipple stimulation, and I kept up the barrage. Soon she came again, and I detected the incredible aroma of her arousal as her pussy came to life. I began tonguing her belly button, not so much to stimulate her but to get myself closer to her amazing smell. Nature's design principles were proven once again, and my little monkey brain now was desperate to move from smelling that fine pussy to tasting it and plunging myself into it! \n\nI stood up and grabbed her head in my hands, conveniently bringing the lump in my tight jeans into direct contact with her nipples! Oh man that felt great! She put one hand on my cock and felt it through my jeans, and her Suzie signal went off again, hitting on all cylinders! Then she clamped down her control again, and the signals subsided. She looked up at me with wide eyes, and gave me a little kiss right on the head of my cock through those now even tighter jeans, and then smiled and said \"maybe later!\" \n\nI took a couple of deep breaths to calm myself and then pulled her up and kissed her on the mouth again. \"I'll look forward to your call next year!\" She put her top back on and rearranged herself a bit, and we walked on toward her dorm. She gave me another deep kiss at the dorm, and I walked back toward mine, still with drastically altered circulation. I guess I was setting things up for meeting my dating goals next year, but I was sure suffering from a lot of back pressure right now! \n\nThere were some other parties winding down on Greek Row, including a loud and raucous keg party that was obvious as I walked by the Kappa Kappa house. There was shouting, bellowing, and the sound of breaking glass, in addition to drunken laughter and the chanting of dirty, if not clever, limericks. There was the sound of something large hitting the swimming pool, followed by another round of loud curses. The Kappas were controversial to say the least. They had been banned from campus several times for over the top hazing, hiring hookers for their parties, flying the Confederate Flag (leading many to call them the KKK), and at one point years ago for firing a canon ball towards campus from what was supposed to be a strictly ceremonial cannon mounted on the front porch of their house! They had avoided the permanent 'death penalty' for their ESU chapter only because one of their powerful politician alums had been on the University board of regents at the time. The contrast with UDP was not lost on me! \n\nWhen I made it to the dorm, there were lots of guys still hanging out on the steps and in the lobby. There were probably just as horny and frustrated as I was! I took a shower and hit the sack, looking forward to the Lake Bash tomorrow and to bonking sweet Suzanne tomorrow night.\n\nI went down to early breakfast and found that sexual frustration made me just as hungry as a night of satisfying activity. No sign of Nora, or anyone else I knew, except a couple of the 'lounge lizards' from our floor. These were guys who spent most of their time hanging out in the lounge watching TV and playing cards. The rarely went to class, and were pretty good bets to flunk out at the end of the semester, and return to life as a 'Hometown Harry' forever. Back at the room, I pulled my trunks and a tee shirt out of the duffel bag at the back of my closet. I found I had to tie the waist a little tighter than I remembered, but the tee shirt was much tighter than before. I guess running was good for me! Kevin came out of the shower and said he needed to grab some food before we left. Theo sent me a text saying I could invite all the hot single independent girls I wanted to the bash! Apparently they were a little down on their babe production from the current pledge class. I called Suzanne and she said the 'iron women' soccer bunch had no game today so she would invite them. At least they would shake up things at the lake!\n\nKevin and I drove to Suzanne's apartment and she bounced perkily down the steps with a basket, a beach towel, and big sun hat on. Kevin opened up the trunk and she put the hat and her picnic basket in, along with the towel and her cover up. She sat in the back seat with me. She had on the tightest, skimpiest, thinnest, most revealing white bathing suit I had ever seen. Strictly speaking, it was a demure one piece suit, but you could see every wonderful little bump on her nipples through it, see each incredible abdominal muscle in her six pack through it, and even see the outline of her little 'landing strip' of pubic hair! When it got wet, it would be even better! Kevin was just looking up into the rear view mirror and not even thinking about starting the car. After a few minutes waiting patiently, Suzanne said \"Where's Lou?\" \n\nKevin finally awoke from his reverie and started the car. \"She's always late getting ready, so I decided to pick her up last!\" We drove to her sorority house, and she came out in a cover up and big hat too. Kevin opened the trunk and she stowed her stuff and sat in the front seat. She had on a plum purple tiny bikini that showed off her 'cocoa butter' tan to maximum effect. She looked great. She turned around and looked into the back seat at Suzanne. I was not sure what hit me first, the incredible spike in her Suzie signal that said she wanted to worship Suzanne as much as Kevin and I did, or the click of her eyeballs as she did a double take! She finally spoke, in an unmistakably catty tone. \"Wow, Suze that is certainly a revealing suit. It really takes balls to wear something like that!\" \n\nSuzanne smiled like a she wolf! She spread her legs about two feet apart while she sat on the edge of the back seat, ensuring Lou an unbroken view of Suzanne's perfect landing strip and six pack, albeit through the thin suit, and said breathily \"Do you see any testicles, Lou?\"\n\nLou's jaw dropped open and she was mouth breathing just like any guy would have! Her Suzie signal came up and it told me she was ready to pounce and kiss Suzanne's mons veneris, and an instant later I could smell a wet and pungent pussy smell emanating from Lou. The estrogen level rose in the car, and the sexual tension was palpable! Kevin opened a window in an unsuccessful attempt to calm things down. \n\nLou sputtered and said \"N, n, no I don't, but you look nice!\" \n\nSuzanne smiled like a predator again. \"Maybe you can help me with some suntan lotion when we get to the lake!\" Lou froze, but you could almost hear her pulse quicken. Mine sure did. Suzanne was certainly coming out of her guilt-induced shell!\n\nThe Phi Iota Gamma lake house was a major league party pad! There was a stone driveway with a large grass parking space for at least 100 cars to one side, and a set of stone steps down to the boat dock and swimming pool, and another set of steps up to house and big patio that over looked the pool and lake. Dozens of nice looking girls decorated the landscape, in various revealing suits, and lots of guys milled around. I spotted Theo and waved, and walked over to thank him for the invite. He barely noticed, because he was staring at Suzanne. I told him I had invited some of Suzanne's friends, and he just smiled and said \"thank you\" without ever taking his eyes from Suzanne. I told him Suzanne loved to water ski and it only took him about three seconds to see the possibilities. Rich. But not stupid! He quickly organized a crew of Jackson Pollack Jackson III, who had met Lara at the tennis court but had never met Suzanne, and his date, Candy, who had a lifeguard style tan, a pretty face, and looked like she definitely would know how to water-ski, and also suck the chrome off a trailer hitch!",
        "We matched up some skis appropriate for Suzanne's petite height, and it seemed that Theo was very safety conscious and wanted to make doubly and triply sure that her bindings were just right! It reminded me of one of those shoe salesman bits in the movies. One more guy motioned to Theo and joined us, and Theo said he was Terry, the best water skier in the frat, and also the best boat driver. He took us out a little; got Suzanne prepped in the shallows, and moved out at just the right pace to get Suzanne up on her skis. He executed a couple of turns and headed out to the main ski area on the lake. He ran her through a few maneuvers, confirmed she was experienced, and then sped things up considerably. He said \"Man she has balance and control to spare!\" I laughed. He had no idea! He ran her through a complete routine and she nailed each maneuver. Theo and Jackson looked like those lemurs on TV, keeping their eyes glued to Suzanne while the boat and their bodies moved all around. \n\nCandy sat next to me and said \"That chick is really in shape! She makes it look easy!\"\n\nI laughed, and look Candy up and down. She enjoyed to attention and her Suzie signal confirmed that she did. \"You look like you are in pretty good shape too, Candy, and I'll bet skiing is only one of your many talents!\" I pinged with an image of her swallowing my cock! She responded very well with echoes and embellishments of her own! \n\nShe laughed. \"You are quite the sweet talker, Mr. Roberts!\" My leftover backpressure from last night returned quickly. She looked at my trunks, and said \"And you know how to make a girl feel appreciated!\"\n\nI smiled at her. No one else was even looking at us. I gave her a little kiss and said \"Candy, if I didn't have a date, I would be trying to get you to go home with me instead of with Jackson!\"\n\nShe smiled back. \"Me, too!\" and she gave me her number, then said \"Booty calls okay!\" I considered her my insurance policy against future back pressure build up!\n\nMeanwhile, Suzanne's skiing was receiving high scores from all the judges! She made the cut off sign to Terry and he looped around tangential to the boat dock and she dropped the rope and skied perfectly up to the dock. There was disappointment from the gallery that she did not get fully wet, but enough spray had hit her to make her suit effectively translucent. Candy got on her skis, and Terry backed in and threw her the tow rope. Soon Candy was up and skiing beautifully. They returned to the dock a while later, and someone else took the boat out with another set of skiers. \n\nI found Suzanne sitting at one of the patio tables, with three guys hitting on her. I couldn't really blame them for trying. I offered to get her some food and to refill her drink, and she smiled and said \"hurry back!\" Theo, Jackson, Candy and some other guys sat at the next table and started going through the buffet line. Just as I returned, a big black van that I had seen before at Suzanne's pulled up, and out stepped seven or eight girls who were not only in spectacular shape, and ranged from average to great looking too. None of them were as spectacular as Suzanne, but they were all hot and the freshest meat at the party. A murmur went through the crowd and I heard some of that 'massed male desire signal' that seemed to turn up a lot at parties. The tallest and best looking girl, whom I had seen drop Suzanne off twice, smiled at me and said \"Thanks for inviting us!\" I took her over and introduced her to Theo, and she introduced the rest of her 'crew' to us. \n\nDown by the pool, the sound system began to play and most of the girls received initiations to either dance or sit down for lunch. The laughter and frivolity level climbed appreciably. Suzanne signed up Terry again and they took me out for some lessons. Neither of them were as good an instructor as Oiler, but my skiing went from tentative to confident pretty rapidly. We danced a bit after the sun went down, and about 11 PM things got pretty raucous, including naked beer pong and lots of naked cannonball dives into the pool. Kevin wanted to stay, but Suzanne's friends were ready to go, so we all piled in a very crowded van and headed back toward Suzanne's place. There was some good natured kidding about Suzanne 'robbing the cradle' and 'taking advantage of a young and inexperienced kid' and Suzanne just laughed. \"He is not as innocent as he looks girls! He can sure curl my toes!\" I began hearing Suzie signals on many wavelengths from all corners of the van. With everyone so close by, it was easy to read the signals, or maybe I was continuing to get better at it. Several of the girls wanted to curl Suzanne's toes themselves, and a few others wanted to see if I could curl theirs! And several of them wanted to do both, separately or together! It was quite a wonderful thing to contemplate! \n\nThey dropped us off at Suzanne's place, and as we walked up the stairs she said \"Your bill has come due Mr. Roberts! You are now my slave until dawn!\"\n\nI decided to go with it. Although it had never been one of my fantasies, I couldn't think of anyone I would rather 'serve' than Suzanne. I realized it would be a little weird to not be active, using her Suzie signal as a guide. Instead, I would be 'blind' and probably get a lot of surprises myself! \n\n\"Yes, mistress! How may I serve you?\" At least Lara had taught me the proper responses. Wait a minute! Was Suzanne planning to whip me?\n\nShe laughed. \"Off with your clothes!\"\n\nI could do that. She did the same. She had me kneel between the couch and coffee table. \"I want you to pretend to be Lou!\" That was a little weird! She gave me a smoldering look and put one leg up on the coffee table. \"Eat my pussy, bitch!\"\n\nWow, Suzanne was really into this! I had a pretty strong memory of the Suzie signals that Lou had been sending in the car earlier today, so I just tried to play the role as best I could. I looked up at Suzanne with a mixture of trepidation and lust. I tried to ignore Suzanne's signals and just act like I thought Lou would. I maintained eye contact and just barely touched Suzanne with my tongue. After a few licks her incredible pussy scent began to affect me. I tried to act out what I thought would be Lou's progression of emotions. I inhaled deeply and looked into Suzanne's eyes with my version of Lara's humiliated but turned on look. Then I closed my eyes and begin to lick her in earnest. I shut out her signals and discovered her with my mouth, assuming this would be Lou's first taste of pussy. I tried to be surprised at how much I liked it, and humiliated by how much I wanted more!\n\nSuzanne adjusted her leg on the table, leaned forward a little more, then grabbed my head with one hand and pushed me a little closer into her. \"That's it! Eat that pussy! Swallow my juice!\"\n\nWow, she was into it! Her Suzie signal was incredibly loud, but I still tried to act like Lou instead of using Suzanne's signal. I just explored her pussy like it was my first taste and my goal was just to enjoy it, not get Suzanne off! It was wonderful! I don't know how nutritious it was, but it was delicious! I don't know how long it took, but soon Suzanne shook and came, and I made eye contact with her again as I savored the juices she was squirting into my mouth. I tried to do my best version of Lara's little smile. Suzanne opened her eyes and shivered against my mouth, and then grabbed my head and said \"again!\" I was happy to oblige! \n\nAfter one more orgasm, Suzanne had me lay on the couch with my head on the armrest, and then she put one leg up on the couch and the other on the floor, and her pussy hovered just above my face. \"You are about to get you face fucked, you cheeky little bitch! And you are going to like it!\" She proceeded to do exactly as she promised. I knew this drill, and I loved it. I played the Lou role and tried to avoid it at first, and then just passively lay there. Suzanne came once, and then said \"Stick that tongue out and keep it stiff for me!' and I did. Three more orgasms followed, and I was proud of being able to breathe enough to stay conscious!\n\nI decided to use my knowledge of Lara a little more. I kneeled on the floor, cast my eyes down, and said \"Should I draw your bath and prepare for your message, mistress?\" She laughed.\n\n\"I'll take a shower, and I will need a thorough tongue washing before my massage, do you understand me!\n\nSuzanne did insist on some thorough going ass worship! I may have created my own monster, but at least it was a hot and tasty one! Several more orgasms took the edge off her slave driver act, and after a strong massage we were cuddling in bed and having some pretty interesting pillow talk. \"So, Mistress, do you still want Lou to serve you or did my acting fulfill your lesbian lust?\" I asked.\n\nShe actually turned around and looked right at me. \"I thought the acting was my only real option! Are you saying that I could actually do something with Lou and not freak you out?\"\n\n\"Yes, as long as I get to watch and play too! As a matter of fact, Kevin and I have been discussing some other possibilities with regards to 'Lou Baby'. You see, she has been trying to play us two roommates off against each other, getting us to compete for her. We think she would get off on that, but we also think she would get off on something else!\"\n\nShe looked intrigued. \"What would that something else be?\"\n\n\"We are going to tell her she can have us both! But she must take on both of us at the same time and only if she gives it all up for us!\"\n\nSuzanne's Suzie signal had been in that contented, almost quiescent realm for the last hour or so, but now a huge spike appeared. Strong, raw, and raucously vibrating so hard it made my teeth hurt! I felt her breathing change, too.\n\n\"You mean you are telling her she has to take you on two on one, and let you two do anything to her you want!\" Her Suzie signal increased even more, and her legs vibrated! She was completely and involuntarily excited at the idea of such a scene! \n\nSo I was going to see how much more excited she could get. \"That's right! We are going to tell her she can have us both, but we can have her pussy, her mouth, her ass, anything we want, anyway we want it!\n\nShe did get even more excited! Her Suzie went all foghorns on me. She took two deep breaths before she spoke. \"You mean double penetration, too!\" Oh Ho! Now we find out one of her 'things'!\n\nI decide to egg her on and see how wild she really wanted things! \"We are convinced that is something she really needs and wants, and that eventually she would find two guys to give her what she wants. But we figure why wait, when we can have her now and she can get her fantasy now.\" I adopted a matter of fact tone. \"When we start out, we will probably make her get on her knees and blow us both.\" Another row of trumpets joined the Suzanne Suzie orchestra! \"Then one of us will fuck her doggy style while she continues to blow the other one, and then we will switch!\" Oboes and clarinets joined in! \"After she has had several orgasms and relaxes a bit, I will get into her ass and Kevin will fuck her pussy, since his cock is a little bigger than mine.\" Basses, cellos, and percussion were added. \"After she has several orgasms from the initial dual penetration, and is loosened up a bit, we will switch, and make her take the bigger cock in her ass!\" Her Suzie signal now sounded like the old THX sound trailer in the theatres, with all the instruments seemingly playing at their maximum volume and all at once! She quivered, and she actually grabbed my thigh hard enough to make a mark, although she seemed completely unaware that she was doing it. \n\nI decided to fire for maximum effect! \"Do you think she would rather have us come inside her, one in her pussy and one in her ass, or would it be hotter for both of us to pull out and come in her mouth?\"\n\nSuzanne's powerful muscles were now all clinching and unclenching. She felt like a caged tiger stirring next to me. All the instruments were still playing in her loud Suzie signal, but with tremolo! She answered without hesitation \"In her pussy and ass the first night you do her, and in her mouth the second night you take her!\" \n\nI was almost dumbstruck! I kissed her and she was hot and quivering all over, and her pussy smell took over the room. I didn't feel like a slave. I didn't even listen to her signal anymore. I just topped her and fucked her, as hard as I could! Suddenly I realized her Suzie signal was loud as hell and she was coming! I stopped for a second, waiting out the little gap in her signal, and then started stroking her again. She came very quickly, and I was ready too. I pulled out and finished off in her mouth. Her Suzie exploded and she sucked me dry!\n\nSuddenly we were cuddling and kissing again, and she went into one of those 'female logic' conversations that you could never really follow, even though you would later learn that she remembered clearly that you had agreed with everything that was being said. \"Robby?\" That was the first time she had ever called me that! \"Would you really have a threesome with Lou and me and be okay with that?\"\n\nI sighed. I had thought this one through. \"Yes, beautiful. Besides the three things I told you I would not mess with, I have already promised to do whatever you want and whatever gets you hot. Doing otherwise would be stupid. If you really want it, I can either do my best to help you make it happen, or otherwise, you will either stop telling me what you want, or resent me, or do things behind my back, and it would drive a wedge between us. Honesty is whole basis of our relationship!\"\n\nShe kissed me for a long time, and then used a tone like a little girl. \"Would the same thing apply to a threesome with you and Kevin?\"\n\nI sighed again. \"Yes, beautiful, except we might have stay close by a medical facility, because Kevin would be so excited at the prospect that he might pass out!\" She hugged me again. She kissed me again.\n\nThen she said \"You are a wonderful man! What kind of threesomes would you like?\"\n\nOh brother! My life was going to get complicated. \"I have a few ideas, but there are some complications. We can discuss them later, including Nora!\" She gasped. \"Right now I am in the mood for some more Suzanne.\" She was in the mood too!\n\nI awoke to the smell of eggs cooking. I remembered that Suzanne's cooking for dinner had been gourmet grade, so I bounced up and brushed my teeth and headed for the table. She was serving Eggs Florentine, with fluffy spinach, perfect Hollandaise, and crispy muffins, with homegrown tomatoes and some cantaloupe on the side. Unbelievable!\n\nAfter breakfast, she dropped me back at the dorm and headed home for a nap before she did one of her 27 mile runs this afternoon. I took a nap, too, and went to sleep considering many possibilities. I woke up too late for lunch, but put on my running clothes and did another 9 miles plus sprint and cool down. I could tell I was getting stronger and feeling better at the end of each run, and the runner's high was fantastic! \n\nJanet's still virginal roommate, Melanie, sent me a text saying she wanted to walk down to the fall street festival being held downtown, and have dinner down there since the dorm was not serving supper, and then come back to the dorm. I guess she was really ready to be deflowered. I was about halfway hot for her, and halfway feeling just like it was a duty because I had promised Janet to do it. I told her I could be ready in 30 minutes and she said she would meet me in the lobby. I took a quick shower, dressed, and headed down.\n\nMelanie looked scrum-diddly-umptious! She had on tight jeans and an even tighter top. With some high heel boots, and all traces of the Goth look gone, she looked hot as hell! Sunday was looking up. We walked down to the street than was closed off to vehicular traffic for the festival, and she picked through tables of arts and crafts, jewelry, and various knick knacks. I spent half of my time watching her and half watching people in general. I tried to stay tuned in to her Suzie signal, and it seemed clear that she was committed to losing her virginity this afternoon. It was sending strong and self confident excitement, buoyed by the fact that I was constantly complimenting her and pawing her, which she clearly liked. \n\nShe would occasionally hold up a tie dye or crochet top and ask my opinion. I would move closer and use it as an excuse to lightly touch her breasts, and her Suzie signal said she liked the extra touches. We covered most of the arts & crafts stuff, and arrived in the food tent area, where there was an amazing variety of options from local restaurants, caterers, food trucks, and charity groups. Melanie said she just wanted to 'graze' here instead of going to a restaurant, and we had bite sized everything and it was all tasty. We even split a few big chocolate covered strawberries mouth to mouth ending in a kiss, and I was reminded that Melanie was a great kisser. We held hands most of the way back to the dorm, and when we arrived at her room, her Suzie signal was vibrant and alive with anticipation. \n\nAs we went up to Janet and Melanie's room, I remembered reading somewhere that women are more likely to have sex for the first time at their place than at a guy's place. I also noticed that all the Goth posters and other weird shit was gone from her walls and ceiling. I decided to play it cool like I had with Janet's first time and just act like making out after a date had escalated. I had almost a direct connection to her Suzie signal, and she was such a great kisser that I felt no time pressure at all. In fact, all the pressure came from her! I very gently moved to stimulate her breasts, and touch her ass, and put my hands all over her. Her Suzie liked it all. I moved to take off her blouse and she helped me! I settled into a phase locked loop with her Suzie signal connected to my hands and lips and soon she was getting the most stimulation from her breasts she had ever experienced. Her Suzie signal told me she was right on the edge of coming, so I started putting my hands on her legs, and she spread them to let me. It wasn't long until I slipped a hand inside her panties and all indications were that she was very pleased. A few minutes later I slipped them off and slipped her hips toward the edge of the bed. Her Suzie modulation was now clearly carrying that image of her putting her hands on me head and urging me to eat her. I lowered my mouth to her outer lips and kissed them gently. She moaned, and her smell increased. It was overpowering! I took one little lick with my tongue and got the surprise of my life!\n\nHer pussy tasted like nothing I had never even dreamed of! I remember Mrs. Douglass telling me to always tell a girl that her juices tasted like the nectar of the gods, but Melanie tasted even better! It was a m\u00e9lange of caramel, super light olive oil, a hint of salt, and lots of tangy rhubarb like my grandma's best pie! It almost overwhelmed my brain. It was like those descriptions of wine enthusiasts talking about a flavor like a 'wet red velvet pillow exploding on the tongue'. I had never understood their ebullience until now. I didn't need a Suzie signal or anything else. I just needed more of that nasty, tasty juice, and the best way to get it was to make her come!\n\nI devoted myself to the cause. Her Suzie was so loud I could not ignore it if I wanted to. But even my monkey brain would avidly use tools to get more sweet fruit! And I got it. She came with a grunt and a sigh and a delicious squirt. I hummed like I was listening to beautiful music in my head. I waited out a one second gap in her signals and then began to lick her outer pussy lips again, and soon got another wet and wonderful reward! I waited another second and began to gently nibble and bite them, and got some more. I was in a complete trance, a pussy snorting sexual rave! I systematically worked her inner lips, then her clit, then plunged my tongue into her pussy. She had at least four more orgasms! She seemed to be seeping beautiful fluid like a leaky faucet and still I wanted more. She was sobbing and wailing and sniffling and I loved it all!",
        "Suddenly her voice cut through my fog. \"Fuck me!\" There was no mistaking that message, and I was already hard as a rock. I spread her legs, and moved up so she could see how excited I was before feeling how excited I was. I touched both her nipples with it and her eyes got big. I moved it to her mouth and she licked it once and smiled. Then I positioned myself at her entrance and moved in a little bit. She grabbed my ass and pulled me in! Just like with Janet's first time, I felt some resistance, a pinch, and then a slippery wet parting. She screamed a hoarse little scream that coincided with the pinching feeling, and her Suzie had a little gap, and then it wailed! I pushed slowly all the way in. She bit my neck with bared lips like a filly taking an apple!\n\nI stopped for a minute and just savored the feeling. She was tight and hot as you would expect, and when I kissed her I think she tasted her own pussy juice for first time, and she shuddered and clamped down on me ever more strongly. I pushed in a little more and she gasped, and then I slowly pulled out and slowly pushed back in. Her Suzie was pulsing, and I just slowly began plowing in and out of her. She moaned, she groaned, and then she came. It was stronger and deeper, clearly differentiated from what I supposed were the purely clitoral orgasms she had before. She raked my back with her nails, and then grabbed my ass and willed me to start moving again. I increased my pace and she began to thrust against me perfectly. I kissed her even deeper, and in just a few strokes, she came again! \n\nI listened to the fine modulation of her signal, and shifted my weight down on her even more. She liked it, a lot. I held myself up on my elbows, and just watched her face, and began stroking again. I had achieved that Zen state again, really hard, but not close to coming. Maybe this was another talent! I just varied my moves and watched her face. She was beautiful, and the expressions that moved across her face were captivating! An hour ago I was just going to fuck her once as a favor to Janet, now I was falling in love with her, and I wanted her every night from now on! She opened her eyes and looked at me with a really funny expression. Was I sending without knowing it? The she smiled and said 'I want to feel you come in me!\"\n\nIt was like she jacked right into my spine. Her wish was literally my command! I picked up my pace and depth and pounded her. She looked surprised, and then bewildered! I fucked her like my life depended on it. Suddenly I felt a tide roaring through me, and somehow I remembered Mrs. Douglass' advice, and when my hot glue gun went off I said 'Melanie' with each shot, and jammed myself as far up inside her as I could. She gasped and gaped and shuddered as I filled her up with pure devotion. I wanted to do this every night! That could be a problem. Her taste, her skin, her looks, her feel, and her natural need for hard penetration had captured me!\n\nI kissed her tenderly; glad to find some tears I could lick. Suddenly she laughed, but I kept kissing her all over her face. Finally my erection subsided and I reluctantly slipped out of her, and lay next to her. She began to giggle! She grabbed me by my ears and kissed me really hard. \"Janet was right!\" she said. \n\nI just looked at her, with perhaps a dumbfounded look. She spoke again \"I was afraid it wouldn't live up to all the hype, but it was pretty damn good!\" Just pretty good! What the hell! She began to toy with my cock, and it responded instantly. Her fingers were charged with electricity because I was so attracted to her. She could just wave at me and get me hard again in an instant. She moved down close to it and looked at it from all angles, and seemed to enjoy seeing it grow. I know I did. \n\nI listened to her signals, and found a strange mix of competing emotions. She was curious, she was getting turned on again, and she wanted to get fucked again! But right now, as I was very happy to learn, she wanted to suck my cock. Since I was hopelessly enamored with her, I decided it might be a good time to try to build up some power in the relationship, so I said \"Hey, beautiful, suck my cock!\" I put one hand on her head and guided her mouth onto my now super hard member. There was a brief gap in her signal, and I thought maybe I had pushed it too far! But then that raucous tone that I loved to hear from Lara made its way into Melanie's sweet signal and they rose together to a loud Suzie roar! \n\nShe was turned on and I was in my glory. Oh what I night I had to look forward too! \n\nBut what the hell would I do about the rest of the year? I had my little country Chrissie on a back burner until next year; I was hoping I had hot and sassy brunette Sarah in the on deck circle, and I had tanned and horny little Candy the water skier ready to take my booty calls. But how could I possibly juggle Janet, Suzanne and all the threesomes she was suddenly interesting in, not to mention Nora, Lara's increasing need for kink, and my new found devotion to the lovely Melanie, too! \n\nI thought my talent was supposed to give me some control, some advantage, some security! But here I was falling for a weird girl with a messed up family background that a week ago was running screaming from me and wearing black fingernails and a nose ring, and all of a sudden nothing made sense anymore! But as my dad would say, if you have to have problems, it's better to have high quality problems!"
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "oral",
        "lesbian",
        "square dancing",
        "oral",
        "threesome",
        "domination"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-05"
}