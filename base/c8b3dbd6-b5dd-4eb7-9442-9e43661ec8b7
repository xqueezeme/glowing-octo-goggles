{
    "title": "The Twelve Vitali Ch. 21",
    "pages": [
        "Authors note: Hello everyone. Thank you, everyone, for the positive feedback and comments they mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nMatteo stepped off the plane in Kuala Lumpur. He'd dozed on and off during the flight, his mind going over details of all the revelations he had over the last few months since Cat came into his life and turned it upside down. The fact that not only his mother, but Nik Donati, were alive and living an isolated existence haunting his dreams. Roberto had told him that only Joseph and Andreus had known that Nik's life had been saved at the last moment when the attempted escape had gone so wrong. The grief of losing so much had overwhelmed Joshua after the death of his family and the damage to so much property that it had been decided to keep the information from the new Donati table.\n\nThe more he thought about that, the more it bothered him. It bothered him even more that his fathers had kept his mother's survival a secret from him and his siblings as well. How could they not see the old wounds that continued to fester in him, if not his siblings? He rubbed the scar on his chest. \"Would knowing have made any difference, or just made it worse?\" he asked himself as he approached the waiting car.\n\n\"Can you take me straight to the hotel?\" Matteo asked, looking at the watery grey sky of predawn.\n\n\"No can do, buddy,\" Phillipe Sergi said casually, making Matteo turn to look at him.\n\n\"Phil! What the hell are you doing here?\" Matteo embraced his old friend. \"I thought you were in Italy!\"\n\n\"Moonlighting as a chauffeur, it seems. Get in, and all will be revealed,\" he chuckled, returning the embrace.\n\n\"All what?\" Matteo was genuinely pleased to see his friend, but confused as to why he was here in Malaysia.\n\n\"It's five a.m. Matt. I barely know what country I'm in. Just let me be mysterious and leave it at that. You can ask Massimo when we get back to the house,\" Phil shook his head.\n\n\"Mo is here too?\" he asked incredulously.\n\n\"Shit, I probably wasn't supposed to tell you that. Can we erase this whole conversation?\" Phil grumbled. \"You weren't supposed to be here until this afternoon, you realise. It's most inconvenient of you to change plans at the last moment.\"\n\n\"Change plans? I only made the plans yesterday!\" Matteo was starting to think this was some elaborate scheme by his fathers' and couldn't get his brain to work out why. \"So how was Roberto when you spoke to him?\" Matteo asked.\n\n\"It wasn't Roberto, it was Stefano, and he sounded grouchy,\" Phil sighed. \"Look, just roll with it, okay? It's not as bad as you think.\"\n\n\"Who else is coming?\" Matteo asked.\n\n\"We all got here last night, you're the slowpoke,\" Phil shrugged, evading the question.\n\n\"I thought you said I was early? You realise I have work to do while I'm here, right?\" Matteo tried not to smile. He would have liked to be pissed about his friends being here, but he wasn't, it had been too long since he had spent time with them. He'd spent years nursing his humiliation and broken heart, cutting himself off from love, even the love of close friendships. He'd been a fool, he admitted, not for the first time.\n\n\"Yeah, you can work, we'll come with you. I want to check out this building. Dante said you're advising on one Josh is building,\" Phil said.\n\n\"Dante's here?\" Matteo asked even more incredulously. \"Wow! How did anyone get him to leave Peri's side for more than a day?\"\n\n\"Shit!\" Phil spat. \"How about we just don't talk for the rest of the ride?\"\n\n\"How about you just tell me what's going on?\" Matteo laughed.\n\n\"Here,\" Phil tossed him a phone. \"Why don't you call home and ask Stefano? I'm sure he'd be happy to hear all your whining. You'd think a guy would be grateful to have an old friend pick him at sparrows fart in this weird ass country.\n\n\"You know who's not here and would have loved picking you up no matter the time?\" Phil asked.\n\n\"'Lio Donati,\" Matteo nodded.\n\n\"Right. So now, for some reason, I've been nominated as the idiot who does this sort of shit. God, I miss that guy,\" Phil sighed heavily. \"This won't be the same without him.\"\n\n\"And this is?\" Matteo asked.\n\n\"Oh, for fuck's sake, give up or call your Daddy and tell him I'm being mean to you!\" Phil grumbled. The Vitali fathers were legendary for their tough love stance, and Phil knew Matteo wouldn't make the call, and looked at him curiously as he punched numbers into the phone with a determined finger.\n\n*****\n\nCat rolled on the bed and stared at the empty space beside her. The indentation in the pillow showed where Ricco had slept, at least for a small amount of time. She wondered at his dual nature. He was good and kind, he was patient and loving, she knew how sweet and tender he could be first hand. He never judged or showed his temper, as she knew his brothers did, and he had treated her as if she were precious and valuable when they had dated so long ago. He wasn't a control freak like Matteo, he was laid back in comparison, and laughed in situations that would frustrate and anger others. She never would have guessed at the darkness that lay beneath it all. She doubted anyone would have guessed that beneath the reliable, trustworthy and loving family orientated man lurked a Master. A Prince of Darkness, as he called himself.\n\nRicco stood in the doorway and watched her as she woke, a cup of coffee in his hand. She was even more than he had hoped from reading her file from the Battaglia. He watched her stretch her limbs and grimace slightly. He smiled knowing she would be reminded of him and their first night together all day. He stepped into the room and greeted her.\n\n\"Good morning, Beautiful,\" Ricco said cheerily. \"I brought you some coffee. You're meeting Aria at the penthouse this morning at nine, right?\"\n\n\"Gosh, yes,\" she sat up, blinking away the last vestiges of sleep and her dreams of the night before. \"What's the time?\" she asked before accepting the mug of coffee and a gentle kiss from him.\n\n\"It's only seven thirty, you have plenty of time to dress and have breakfast before you leave. We can drive in together if you like,\" Ricco offered. Cat tilted her head and looked at him. This was the Ricco she had always known, kind and sweet, looking after her in his non-authoritative way.\n\n\"I'd like to drive myself; I have a lot of appointments today. Pulling a wedding together this quickly is hard work, I don't know how Theresa does it all, especially with the gathering starting this weekend,\" she admitted.\n\n\"She has good people around her, and she knows how to delegate and ask for help. Something you're finally learning. It's nice that you asked Aria to help you with the artwork. I think, as the youngest girl, she often feels like Vanessa is asked about that arty stuff more than she is, and that's her thing,\" he said.\n\n\"Her thing?\" Cat asked with a smile.\n\n\"We all have a thing,\" he shrugged. \"Mia is an events manager and has been handling most of the Gathering issues with Mama and our Aunts. Matt is all eco-friendly buildings and materials. He built his business up from nothing to become a global entity, but I imagine he will allow subsidiaries to run with the overseas stuff now. Cobi and I are lawyers, the same as our fathers, but I stayed in criminal law, and Cobi specialised in corporate contracts, though we can cross over, we have our own specialities. He's a troubleshooter, and I am a protector, of sorts, so they amount to the same thing, it just depends on which side of trouble you find yourself on,\" he grinned. \"Vanessa is interior design, as you know.\"\n\n\"And the others?\" Cat asked.\n\n\"Lucca is an engineer, like Matt, and has been taking over a lot of the running of the company while Matt has been distracted by love,\" Ricco chuckled. \"Zion has degrees in economics and international relations, I think he is heading towards a political career once Aria gets married and moves away. They've been pretty much inseparable their whole lives. She has an arts degree and probably the best knowledge of our family history than even the older members of the family. She and Zion have been working with Peri to compile an accurate history. Art and the old Masters are her first love and where, way back in history, our family's original wealth and fame came from. We are loosely related to the Borgia family, but we don't advertise that as much as the direct links to the great master, Raphael.\"\n\n\"Wow!\" Cat said blinking.\n\n\"Trista wants to be in fashion design, and I think she is starting to take your suggestion about doing a men's line seriously, if this wedding is anything to go by,\" he chuckled. \"The babies are virtual geniuses and could do anything they wanted. Before Matt and I found out about the table, I would have bet they would have become lawyers, but now,\" he paused to consider. \"I wouldn't be surprised if Leonardo becomes a vet, and Raphael, well, he could become the next Pulitzer prize winner if he was brave enough to show people his writing. It's probably more likely he will blog or become the king of social media somehow.\" Ricco chuckled talking about the youngest brothers of all his siblings, because they brought him the most laughter and fun.\n\n\"I probably know the youngest brothers the least. I should make more of an effort where they are concerned if I plan to be part of this family,\" she admitted. \"Not today though, I have a lot to do,\" she sighed and pulled back the covers, unconcerned about her nudity in front of Ricco anymore. She swung her legs to the floor and stood up.\n\n\"Beautiful,\" Ricco murmured, admiring her curves and remembering the night before. \"Even without any trace of the marks you wore for me last night.\"\n\n\"I'm sorry I passed out in the end,\" she said quietly. \"I don't think I'd felt anything quite like that. The tremors and waves, well, they just kept coming.\" She blushed, a soft pink hue colouring her cheeks.\n\n\"I know. I was there, remember?\" Ricco laughed and stood to gather her in his arms and kiss her properly.\n\n\"Do you wonder what might have happened if I'd told you the truth when we were dating?\" she asked, softly returning his embrace.\n\n\"I would have still been an asshole and honoured my commitment to my brother, and I probably would have tried to push you even harder into being a Kept. It's better this way for all of us, not just the three of us, the whole family. You gave us back Matt, who had isolated himself from everything and everyone except work,\" Ricco explained. \"Never second guess the reasons you dumped me, I deserved it, and it led us to this place, and we, the three of us, are going to do amazing things together.\"\n\n*****\n\nMatteo could tell there was more going on here in Kuala Lumpur than anyone was saying. Ricco had been no help at all in figuring out why his closest childhood friends had shown up in Malaysia, though he didn't seem surprised by the fact. Ricco had quickly changed the subject to Cat, who had been sleeping off the effects of what Matteo could only assume was a long, hard night after having moved past the final hurdle of their relationship.\n\nSurprisingly he wasn't jealous. He couldn't stand the thought of Pete Donati using her in that way, but with Ricco, he just wanted to see it for himself. Watch her the way Ricco watched them. He had allowed himself that fantasy on the plane, imagining the way her body would move within the rope coiled around her and her face as she came, not just for Ricco, but for him too. If he were there, it would be for both of them. It wouldn't matter who was touching her, fucking her, manipulating her body, it would be for both of them.\n\nThe idea that the three of them could finally move into their new home as equals in the relationship had made him want to rush through the inspections he had to make and the handing over ceremonies. Then there was this. He entered the luxurious mansion and was immediately welcomed by the staff and his friends. The giant Massimo scooped him up in a massive bear hug, threatening to break his ribs.\n\n\"Fuck, man, you got skinny!\" Massimo grinned.\n\n\"You got bigger, more likely,\" Matteo said, standing toe to toe with him. While almost as tall, Massimo had the huge solid build particular to his family.\n\n\"More than likely,\" he laughed loudly. \"I'm an old married man now. I don't have to look fabulous anymore. She likes more of me to love.\"\n\n\"Lucky Connie,\" Matteo agreed. \"Where's everyone else?\" he looked curiously past the giant man.\n\n\"Sleeping, mostly, we got a bit rowdy last night,\" Massimo shrugged as if he hadn't been affected by the amount of alcohol they had consumed.\n\n\"How drunk were you when you nominated Phil the designated driver for today?\" he asked as if they were all crazy.\n\n\"We drew straws!\" Massimo defended the choice.\n\n\"I feel so special,\" Matteo drawled and followed the big man through the house to the room he'd been assigned.\n\n\"Which room's D. in?\" Matteo asked.\n\n\"How'd you know he was here?\" Massimo frowned.\n\n\"You sent Phil to pick me up,\" Matteo chuckled as if that was all the explanation he needed. He tried the knob of the door his friend indicated. \"He locked it?\"\n\n\"He knew you were coming in early,\" Massimo shrugged but jangled a master key from his hand and proceeded to unlock the door. Matteo walked in and climbed onto the bed, stretching out next to his oldest and closest friend.\n\n\"You are not the woman I was dreaming about,\" Dante grumbled, coming instantly awake.\n\n\"I certainly hope not! Put that weapon away, would you? You're worse than Ricco in the mornings!\" Matteo said disgustedly.\n\n\"Hey, you walked into my room unannounced, you get what you deserve. Jealous?\" He chuckled.\n\n\"Sure, if it helps your ego, but Massimo is standing right there. So, it's a bit hard to take you seriously,\" Matteo said casually.\n\n\"It's his wife who deserves our amazement. Can you imagine seeing that on the wedding night and not running away screaming?\" Dante grimaced. \"I never know whether to congratulate her or pity her.\"\n\n\"She's quite happy, I assure you,\" Massimo said drolly.\n\n\"Congratulations it is then,\" Dante sat up. \"I'm guessing you woke me up for something important?\"\n\n\"Matt's here,\" Massimo said with a straight face. \"Thought you'd want to know.\"\n\n\"You're coming to work with me,\" Matt informed him. \"So, get up and get dressed, you ass. You could have had the decency to warn me about this.\"\n\n\"Why would I do that?\" Dante frowned. \"It's much better this way. Better go wake up Xman then, he wants a look at your building.\"\n\n\"Xavier is here as well?\" Matteo was surprised. It was difficult to get him away from his family at the best of times.\n\n\"Where else would he be?\" Dante chuckled, \"In the desert racing camels?\"\n\n\"Well, yeah,\" Matteo chuckled with him. \"So, there's you, Phil, Mo, X-man. What about Zach, Nate and Solly?\" he questioned, leaving off the one name Phil had mentioned in the car... Lio.\n\n\"All present and accounted for,\" Dante said. \"Why don't you go an annoy them while I have a shower and try to look as good as you do for someone who just flew through the night.\"\n\n*****\n\nAria hadn't just come to look and advise in a casual friendly way. When Cat had gone up to meet her, Aria had already spread out several catalogues on the table and bookmarked several recommendations for Cat to choose from. She was professional and business-like in every sense of the word, so much so that when Vanessa finally walked in the two other women were already making decisions about the artworks statues, and even decorative antiquities that would look perfect in the space.\n\nVanessa tried to make a few minor suggestions, and even when suggesting something for a particular spot, Aria would go back to her catalogues and find exactly what she wanted. Cat was amazed at the depth of knowledge the woman had for such a large collection. She could name the artist, date and where each piece came from, and in some cases even its providence. Vanessa was eventually stunned into silence. She hated the dark and dusty depository, preferring to purchase what she needed, but seeing the catalogues that Aria and Zion had worked on so tirelessly over the years, she had to admit, Aria was an asset to the family and their businesses.\n\nWhile Aria loved the pieces themselves for their sheer beauty and history, she had told Cat that Zion was the one behind the cataloguing system and albums she had bought. He loves the investment potential on a worldwide stage of antiquities, particularly European during the renaissance period. His focus was squarely on providence and profit, while she loved the beauty of classic pieces. Their great uncle had managed the auction house until they had taken it over after their gap year, he had since retired, grateful to finally rest knowing it was in good hands.\n\n\"Aria, you're amazing!\" Cat gushed. \"I can't believe we got this done so quickly. Thank you!\"\n\n\"Thank you for asking me,\" Aria grinned delightedly at the success the morning had been. She even thought she had impressed her older sister.\n\n\"Do you need a lift home? I'm going there to meet Theresa again this afternoon,\" Cat said. \"Maybe we could grab some lunch on the way.\"\n\n\"Lunch sounds great! I'm starving,\" Ricco said, walking into the penthouse closely followed by Lucca, and passed his phone to Cat.\n\n\"You're always starving,\" Aria rolled her eyes at her brother.\n\n\"Hello?\" Cat said, frowning at the phone.\n\n\"Hello, Kitten. Care to tell me why you're not answering your phone?\" Matteo's voice rumbled.\n\n\"Matt! I didn't hear it! Gosh, I'm so sorry!\" she walked away from the others to talk to him. \"I miss you so much!\"\n\n\"Yeah, Ricco said the same,\" he chuckled. \"I get the feeling, though, that you worked through that issue.\"\n\n\"Yes,\" she admitted. \"Without all the baggage we both had it's very different,\" she said uncertainly. She didn't want to have this conversation over the phone.\n\n\"Good different?\" Matteo asked.\n\n\"Amazingly different,\" she said honestly.\n\n\"That's great, and makes what I'm about to say easier. I'm being held up in KL for an extra day. Some old friends are here at Papa's request, and I haven't worked out what that request is yet,\" he chuckled.\n\n\"Old friends, just before you get married? I'm thinking bachelor party,\" she laughed as he swore, wondering how the idea hadn't occurred to him. \"That was nice of your fathers, just don't let your friends put you on a plane to Timbuktu or wherever, I miss you too much already.\"\n\n\"I have work to do here, so no chance of that, I have to be back by Friday the latest,\" he laughed with her. \"The wedding seems so far away still, but I guess with the Gathering I wouldn't have had a chance to catch up with my friends in this way.\"\n\n\"Does that mean you'll have another bachelor party with your brothers and cousins?\" she asked.\n\n\"I guess that's up to Ricco, he's the best man,\" Matteo said noncommittally. \"I have to go, but don't have too much fun without me. Remember, it's me you're marrying,\" he chuckled. \"I love you.\"\n\n\"How could I forget. I love you too,\" Cat grinned and turned back to face her soon to be family as Matteo ended the call.\n\n\"Oh, sorry, did you need to talk to him again?\" she asked as she handed back Ricco's phone.\n\n\"That's the second call I have gotten today,\" Ricco laughed. \"You were still asleep when he called early this morning.\"\n\n\"I only had the one. I guess I'm not the favourite little brother anymore!\" Lucca lamented in an exaggerated way.\n\n\"You could never be my favourite little brother,\" Aria said helpfully. \"But the competition for the older brother is pretty tough and changes with my mood. At the moment Matt's got it, but be on my team for the hunt and I guarantee you favouritism rights.\"\n\n\"They're not letting me help this year with teams or anything. Seems Papa is determined to do everything himself,\" Lucca said unhappily.",
        "\"I know, that's why I know you will be in the hunt for real this year instead of not being able to compete properly,\" she said as if he was an idiot. \"It's got an old-school theme, no tech, so even Sebastian is in this year.\"\n\n\"This just got a whole lot more interesting,\" Vanessa said. \"I might reconsider joining. It may very well be my last year to do it. Can't stay engaged forever, and with Mia and Cat getting married, I may as well set a date after the gathering.\"\n\n\"Shit, next you'll be telling me you're getting married!\" Lucca accused Ricco.\n\n\"Not me,\" he chuckled. \"Marriage is definitely not in my immediate future.\"\n\n\"What's the hunt?\" Cat asked, feeling lost in the conversation.\n\n\"Oh yeah, I was supposed to explain it to you the other night, but I got distracted by something I saw, and my mind went down a totally different track,\" Lucca said easily, but his eyes darted to Ricco. He'd seen the playroom and hadn't been able to get it, or that fact that Cat liked kinky sex, out of his head. Even now his mind threw up visions that threatened to undo him in front of his siblings. \"We can tell you about it over lunch if you like. Do you know where you want to go?\" he asked. \"The new restaurant downstairs is pretty good if you haven't had the chance to try it yet.\"\n\n\"I was thinking something light. A caf\u00e9 maybe?\" Cat said, looking at Aria for confirmation.\n\n*****\n\nMatteo arrived back in the mid-afternoon from his final inspection of the building and hand over ceremony. He sat back in a comfortable chair nursing a beer and looked at the other men who had flown for eight hours or more from their respective parts of Australia to be here with him.\n\n\"If this is a bachelor party, you guys suck,\" he said in such a casual register it took the group time to react.\n\n\"This is a bachelor party?\" Phil looked at Dante as if he had been the brains behind the gathering. \"Where are the strippers?\"\n\n\"Not as far as I know. Did I miss a memo?\" Dante chuckled.\n\n\"Why are you all here then?\" Matteo looked confused.\n\n\"I think I can clear up the confusion,\" Nathanael cleared his throat.\n\n\"Oh god, seriously, at least get another bottle if Nate's going to tell us a bedtime story so I can try and keep my eyes open,\" Soliman grumbled and shook the bottle of Sambuca on the table.\n\n\"Get it yourself, you know what I'm going to say anyway,\" the serious man from the Gambaro family rolled his eyes and turned back to Matteo. \"Instead of the long version that started with a friendship formed by our fathers and our united destinies, I will point out who and what we have in this room, Oracle,\" he pointed at Dante and then went around the group listing Oracle or Chair until coming back to Matteo, and then he tilted his head. \"Rumour has it you know your fate, which is why you are rushing to marry a girl you've known for only a few weeks.\"\n\n\"You know the thing with rumours,\" Matteo chuckled, not finishing the sentence or admitting that he knew his fate.\n\n\"The Vitali Gathering starts Friday. When will they announce it?\" Phil asked. \"Before or after the wedding?\"\n\n\"My fathers' asked you all to come here, you tell me,\" he acted as if he had no idea what they were talking about.\n\n\"Joseph Donati's death rattled the thirteen. Each of the tables has named their successors except the Vitali's, and we have reason to believe we're all here because they are about to do just that. Theo's wife is about to give birth to their first son, so he couldn't make it. We know what happened to Pellegrini. The Battaglia do things a different way, but Marcus was invited and declined. Rick's just had his appendix out. The rest of us are here, think about it,\" Nate said in a challenging tone. \"We were forced together on annual camps from the time we were twelve, we were always the next generation of leaders.\"\n\n\"I don't know about that, I think I just tagged along with Lio,\" Dante said thoughtfully. \"I doubt anyone ever saw me as a leader, even you clowns. Let's face it, none of us would have predicted Phil would be nominated any more than me.\" He teased.\n\n\"Makes sense,\" Matteo nodded, still not giving anything away. \"None of your fathers have retired yet, so D. is the only one actively leading a table. Well, Josh is, and D.'s doing a good job of pretending to be helpful,\" he chuckled.\n\n\"Hey! I keep that little control freak grounded, thank you very much! And let me tell you, that is more than a full-time job! This trip couldn't have come at a better time,\" he sighed exaggeratedly as if he was exhausted just thinking about it.\n\n\"That's the thing we've all learned since being named, what we do doesn't matter a great deal, it's all about the Mother. In a patriarchal family, it's funny and disheartening to know that the real power doesn't lie with us and never has. She keeps the family bonded, especially those of the table. She creates the next generations. Without her we're just CEO's, she is what makes it a family,\" Zachariah finally weighed into the conversation.\n\n\"It's an interesting choice you've made in Cat,\" Dante said. \"Not that I can point fingers. Peri wasn't from a table either, and everyone loves her.\"\n\n\"Far better than the first woman I proposed to,\" he admitted. All of these men knew what had happened between Nik and himself. \"I knew within the first hour of meeting Cat that she was the one.\"\n\n\"Oh yeah, that's a great story,\" Dante chuckled, earning him a scornful look from Matteo.\n\n\"You're the one getting married, so I am assuming you're a chair. Did you leave Cat behind with the soon to be Oracle?\" Nathanael asked. He had struggled to accept the three-way relationship and had opted for a Kept, only joining his brother and his wife on occasion, which suited them as well. His brother, too, continued to struggle with jealousy over the close relationship between his wife and brother.\n\n\"Yeah,\" Matteo admitted. \"But I'm surprisingly good with it. They've been dancing around each other for weeks. I guess I was the reason. I told them last night to just get over it already, and this morning I believe her words were, \"Amazingly good\", and he was just as happy,\" he said cheerfully.\n\n\"You really are good with it, aren't you?\" Soliman asked.\n\n\"Why wouldn't I be? Do you know something I don't?\" Matteo asked.\n\n\"It's not that easy for all of us,\" Soliman grumbled.\n\n\"I didn't think it would be either, but, like D., my brother fell in love with Cat on his own before either of us knew what was coming. He's not with her because it's expected, he's there because he loves both of us, in different ways, but with equal strength. You can't just rock on in and expect an instant connection or relationship,\" Matteo tried to sum up all the conversations he'd had with Ricco.\n\n\"Yeah, I'd agree with that. Date nights and making your own memories with both of them separately and together,\" D. said, considering Matteo's words about him falling in love with Peri before he knew that a relationship with her would be possible. \"He's right, though, I fell in love with her long before I even dared to dream that she might love me back. When you feel like that it's easy to accept that the love includes your brother, and make an effort to almost date him and get to know him on that intimate level too. I know how wrong that sounds, but it's like that without the incestuous sex.\"\n\n\"Or, in my case, I trust both of them implicitly and have no insecurities about what they are doing without me. I hate the fact that he's probably encouraging Cat to eat junk food the whole time I'm gone a whole lot more than the idea that they're fucking every minute of the day,\" Matteo said to the sceptical looks he was getting.\n\nThey continued talking about their own situations, giving personal stories and advice to their friends from their different perspectives. It dawned on Matteo why his father and those of the other men in the room had done this. Roberto was dying, and Stefano wasn't well. Like Josh, he would have to step up sooner rather than later, and he would need these men, all of them, as advisors and sounding boards when dealing with such a large empire.\n\n******\n\n\"I know you don't have long this afternoon, so I just wanted to go over a few things with you,\" Theresa said as Cat walked into the living room.\n\n\"Theresa,\" Cat said, taking a deep breath. \"I need to talk to you about something, and I realised it would be easier if I showed you, and I was wondering if you'd come visit a friend with me this afternoon.\"\n\n\"Is something wrong?\" Theresa asked, frowning, wondering if she had pushed Cat too far in their argument over cake yesterday.\n\n\"Quite the opposite, really,\" Cat smiled. \"I realised yesterday that I have been unfair to you and I'd like to rectify that if you'll let me.\"\n\n\"Unfair to me?\" Theresa frowned in confusion.\n\n\"It's hard to explain, I'd rather show you, if you will come with me,\" Cat invited again.\n\n\"Okay,\" she agreed warily. \"Just let me tell Roberto we are going out so he can keep an eye on Stefano. He has a nurse, but the poor thing is terrified of him,\" she gave a small laugh.\n\n\"Roberto knows I was inviting you out this afternoon. I was talking to him about the hunt when I arrived,\" Cat said easily. \"You will enjoy what I have in mind; at least, I think you will.\" She reassured her soon to be mother-in-law. \"Would you like Knox to drive, or are you brave enough to come in my new car?\"\n\n\"If Knox drives maybe we can go over a few things in the car. Will it be a long drive?\" Theresa considered the question. \"You could stay for dinner tonight before going home and get your car then.\"\n\n\"It's not far, but we can go with Knox if you like,\" Cat wanted this afternoon to go well. Matteo's sisters' reactions yesterday had bothered her a lot, and she realised that, while she had thought of her arguments with Theresa as minor disagreements that she could grumble about and get over, others were walking on eggshells around her in case she called the whole thing off. Given her history with both Matteo and Ricco, she couldn't blame them, but she wanted Theresa to know how much she valued everything she was doing, even the arguments they had and why.\n\nCat called Knox as Theresa gathered her purse and phone and went to see Roberto about supervising Stefano, so he didn't scare away another nurse. Unsurprisingly, Knox was close by, having assumed he would need to pick up Ricco later that afternoon. Then she went to the library where Theresa was talking to Roberto and Ricco.\n\n\"Where are you going?\" Ricco asked.\n\n\"Secret wedding business, but Knox is taking us, so you don't have to track me,\" she laughed. \"Theresa invited us for dinner,\" she said, hoping to distract him.\n\n\"You are invited to dinner every night. Why would tonight be any different?\" Roberto frowned.\n\n\"Theresa asked me personally?\" Cat said, unsure of herself in the face of his frown.\n\n\"Will you be gone that long?\" Ricco asked disapprovingly.\n\n\"I doubt it, but I imagine we may have other things to discuss when we get back. This wedding is getting closer, and poor Theresa is dealing with organising the Gathering as well. I'd like to say I could do more about the wedding, but the truth is I'd be lost without her organisation of me and... well... everything. I can't even begin to imagine feeding so many people, and most of the RSVP's have begun coming in as well. Lucky, I don't come from such a big family,\" she grimaced. The look on Theresa's face told her that she had no idea Cat felt that way, and she knew she had made the right decision about this afternoon.\n\n\"Keep your phone on you,\" Ricco advised. \"Have you got a power pack just in case?\"\n\n\"No, but I'm sure Knox does. He's a boy scout about being prepared for everything,\" she laughed again trying to keep the conversation light-hearted and seeing Ricco's concern that she was going out alone with Theresa.\n\n\"She's a grown woman, Ricco, stop fussing. Even if she wasn't, I am more than capable of keeping her safe for an hour or two,\" Theresa stepped in to chide her step-son.\n\n\"I have no doubt that you could, but if one hair on her head is out of place when Matt returns, I'm the one who has to deal with him,\" Ricco said with a pained expression.\n\n\"Do look in on your Papa, won't you?\" Theresa patted his hand. \"You two make a good pair at the moment,\" she rolled her eyes at him, making Roberto chuckle.\n\nThe two women left a few minutes later, both sitting in the rear of the car after Cat told Knox where they were going.\n\n\"I never had a mother, in the traditional sense,\" Cat said softly, unsure how much Theresa knew about her past. \"I never had to argue with her, or even have a small disagreement about anything I did because she was always so focused on her next fix that she didn't bother worrying about David and I. If I'm honest, she wasn't conscious most of the time she was at home.\"\n\n\"Oh, Cat, that's awful!\" Theresa gasped.\n\n\"It made me pretty independent and self-sufficient, so having so many people weighing in on my life and the decisions I make is a new experience for me. To tell you the truth, I hadn't actually thought about it from your perspective until yesterday. You're doing so much for me, and I have been totally unfair not sharing my vision of the perfect wedding with you,\" Cat tried to explain.\n\n\"What happened yesterday?\" Theresa asked, nervously going over the disagreement about cake and other smaller issues.\n\n\"Mia overheard Matteo's warning to be nice to me or we would elope,\" she laughed lightly.\n\n\"He wasn't serious though!\" Theresa put a hand to her cheek in horror at the thought.\n\n\"No, he wasn't serious,\" Cat reassured her. \"But I had been joking with Chase that morning when he dropped off the car and tried to tempt me to elope with him as part of that joke. So all four of your daughters staged an intervention yesterday because they were worried that our... disagreements were getting too much for me.\"\n\n\"Oh no!\" Theresa gasped again, the look of horror not leaving her face. \"Cat, I...\"\n\n\"Please don't apologise,\" Cat stopped her. \"Everyone walks on eggshells around me lately except you, and I love that. I love that you will advise me and disagree with me, and even though we haven't fought, as such, I'm sure if you truly thought I was making a huge mistake you would fight with me.\"\n\n\"You love the disagreements?\" Theresa didn't know whether to laugh or cry.\n\n\"I know you just want the best for your family, for Matteo. If you didn't you wouldn't care enough to argue for what you think is the right choice, but after yesterday I realised you didn't have all the information you needed to help me make those decisions, and the arguments were probably my fault, not yours,\" Cat said looking guilty. \"So, I'm going to try and fix that this afternoon and introduce you to some friends of mine.\"\n\n\"I don't understand,\" Theresa said in obvious confusion.\n\n\"You will,\" Cat grinned and turned the conversation back to the fact that she was more than a little overwhelmed by the size of the family and how much she had to learn about them all. Fifteen minutes later they pulled up in a small street in a nearby suburb.\n\n\"Keep an open mind, please,\" Cat said before she knocked on the door of the small cottage style house that belonged to the Vitali family.\n\n\"Of course,\" Theresa nodded. She was amazed by what Cat had said in the car. None of what she had said about the family being overwhelming had ever occurred to Theresa. The fact that Cat looked at her as a mother figure already, and was seeing their disagreements as some sort of bonding process, stunned her. This was how she worked with all of the women in her family, and even though she realised now that Cat had never been included in a real family, it was still hard to accept her words at face value. Jacobi's wedding to Maryanne had been completely different, with Antonia gently suggesting and Theresa following those suggestions to the letter, because Antonia, though wonderful, was a force to be reckoned with, and Theresa had no wish to be on her bad side as some of the other mothers had been from time to time.\n\n\"Kate, Edith, this is Theresa Vitali,\" Cat introduced the women. \"Marina and Marcus were good enough to release them from the Battaglia for a month to make my wedding dress,\" Cat said as they walked into the main living area where her dress was on display on a headless mannequin. \"It's not complete yet, but this will give you a good idea and maybe make you more aware of why I have been making the decisions I have.\"\n\n\"It's not white,\" Theresa said, and Cat couldn't tell if that was a rebuke or not.\n\n\"Given my history and past, I don't think white was ever going to be my colour,\" Cat laughed self-consciously.\n\n\"It's beautiful,\" Theresa said, moving forward to inspect the intricate beadwork on the bodice. \"It's far more traditional than I thought you would choose.\"\n\n\"Matteo is the one who wanted the traditional wedding, and I want him to have that too,\" Cat said softly. \"All the choices I have been making are the fantasy wedding dreams of girls who want to be princesses for a day, or, in Matteo's case, Prince Charming,\" she giggled. \"This is his fantasy wedding, and he is going to have a Cinderella bride walking down that aisle if it kills me,\" she laughed. \"The weight of that dress is amazing.\"\n\n\"Ladies, I can see why Cat asked for you specifically; this beadwork is so intricate and delicate. Marina has been keeping you a secret for far too long,\" Theresa gave the ladies the praise they deserved. \"I don't suppose you'd consider trying it on for me.\"\n\n\"If you promise not to breathe a word to anyone about it,\" Cat agreed.\n\n\"I'm going to have to say something to Trista, she has the men's outfits all wrong,\" Theresa turned a worried look on Cat as if the thought had just occurred to her.\n\n\"No you don't, she is doing exactly what Matteo has asked her to,\" Cat said gently. \"This is his fantasy wedding, trust me, he has told her what he wants. He asked if there was any colour scheme he needed to know about before talking with her. That's when I made my decision about the bridesmaid's dresses. Champagne gold,\" she said, pointing to the gold and ivory dress on the mannequin.\n\nTheresa sat and thought about all the decisions Cat had made about the wedding and could see the Prince Charming theme emerge with the gold and ivory and hints of navy blue and burgundy here and there rather than the black and white traditional theme she had been working to. Red would definitely not have worked with this theme, and Cat had been right to stick to her decisions. Now that Theresa knew, however, it changed a few of the things she had planned alone, including her own Mother of the groom outfit. She was grateful that Cat had shown her the dress, it made everything so much clearer now, and she doubted they would find much to argue over. Considering what Cat had said about those disagreements, however, she was sure she could come up with one or two minor quibbles.\n\n*****\n\nIt was getting late, and Matteo and his friends had drunk far more than was good for them during a long multi-course dinner, and now, as he relaxed, he looked around at the men he had grown up with. Fate, destiny or sheer force of will on their fathers' behalf had made them the men they were today and the leaders of the twelve wealthiest families in the country. Individual families didn't even come close, it was the combined wealth that made them all so affluent.\n\n\"Hey, got a minute or two?\" Phil said, coming to stand in front of him.\n\n\"Sure, buddy. You want to go out on the deck?\" Matteo asked as Phil remained standing. He always liked the man who hid his keen indigence and uncanny foresight behind a fa\u00e7ade of social awkwardness that made him seem one step behind everyone else when, in fact, he was often three steps ahead.\n\n\"Yeah, let's go for a walk,\" Phil nodded. The house was more like a resort than a home, with extensive grounds and a large pool off the back deck. Matteo stood and walked toward the back with Phil, pulling his jacket around him as the crisp night air wrapped around him.",
        "\"There's a lot of security here, even by our standards,\" Phil nodded his head toward the garden wall where the dark shape of a man was clearly outlined. \"Want to know my theory about why we're all here together?\"\n\n\"I do,\" Dante said from behind them, making Phil jump. \"Chances are they all do,\" he said, indicating the rowdy men in the house playing cards and reliving misspent childhoods together. \"You know we don't believe the dumbass act you put on anymore, right?\" he challenged Phil.\n\n\"Lio never believed it. Fuck, I miss that guy, he'd know what to do with what my gut is telling me right now,\" Phil complained.\n\n\"Yeah, he was a bossy bastard,\" Matteo chuckled, \"Until D. went dark and he had to become the good guy in their duo.\"\n\n\"Good times,\" Dante said with a roll of his eyes. \"I miss him too, every day. It's nice at least one of you talks about it actually. People tend not to bring him up around me, but I like to know people remember and miss the belligerent bastard. Alright, tell me what's in your gut, and I'll have a go at telling you what to do with it.\"\n\n\"I was going to test it out on Matt, but since you're here now, and probably have some sort of sixth sense too,\" Phil licked his lips. Outside of his own close-knit family he hated pushing his own ideas and agenda onto others, but his gut was so twisted he needed to speak. \"All us, including the ones who couldn't make it, have been named the next-generation leaders. What are the odds of that? I mean, Josh, my brother, your brothers, none of them had holiday camps like we had to endure every year. There is something bigger than us going on at the moment, and I think I've worked it out.\"\n\n\"The seconds all had a camp, Ben went off to meet with them all the time,\" D. said.\n\n\"One or two of them even led with our friends, but not in my family, or yours, and, well... Matt is complicated, he's a second, but he was never treated like one, Jacobi was part of that second's group,\" Phil sighed.\n\n\"Only when he got older, and only because he forced his way into that group by befriending a few of them. He never grew up with them the way we did,\" Matteo considered what Phil was saying.\n\n\"Okay, and I'm sure Josh had a group of friends too, but the fact is every single one of us, our group of friends, leads. I imagine we were all destined to be Oracles until the mothers had different ideas about who they married. You heard the guys this afternoon talking about the mothers, you know it's probably true.\"\n\n\"Alright, I'll go along with that. I was being pushed to Oracle until I threatened to walk away. It's odd that all of us lead, I give you that too. Something bigger than us, that's where I need more convincing information,\" Matteo said.\n\n\"Okay, each time a family moved to name its new table, whether the old one was ready to retire or whether they were just circumventing what almost happened to the Donatis', there was some sort of event, if not attack. Most of the families hushed it up because no one wants to be seen as weak or vulnerable to the others. No one couldn't hush up what happened to the Donatis', but the other families have all made wholesale changes to the way they do business,\" Phil tried to explain. \"The attacks have generally happened after the announcement, so they knew who to target. I don't think Rick had appendicitis, I think something big is going down with the Papillo and we have all been moved out of the way as insurance.\"\n\n\"So, Nate was right, we are here because we're leaders, but you think there's something else. You think the Papillo was attacked already and this is the thirteens reaction? To get us all out of the country?\" Dante asked.\n\n\"Okay, let's say I go with you on this; that something happened to the Papillo the day we all left in a hurry. Roberto had a ready-made excuse to send me, one that I wouldn't question. How did your father get you to pack up for these fun few days?\" Matteo challenged Phil's thinking, and Dante considered his conversation with Josh.\n\n\"There's a hacktivist group who've been data mining in a few of our flagship businesses for personal details and such. We traced them to a company in Indonesia, I think a few of the tables are having similar issues, and meeting you here was a jumping point. If I tagged along to Timor, then I'd be close enough to make contact with some of our suppliers and leave a watch behind in the country legitimately,\" Phil admitted.\n\n\"Similar concerns, but no data mining yet, our tech is a wizard when it comes to that stuff, especially after the attack when we lost all the servers. It's a pain in the ass to jump through all his hoops for access, but worth it if we're contending with hackers,\" Dante said. \"The plan to get us all to come meet you before the wedding and announcement of the table was a good one, given that probably everyone up there has his own agenda for being here.\"\n\n\"Secret's and lies!\" Matteo spat. \"The thing I love most about Cat is she is honest, regardless of the consequences. I think our fathers have done us all a favour without even knowing it. I think it's time we stopped all the bullshit and laid everything out on the table. If they've compromised the Papillo there are bigger things at stake than our businesses,\" he looked at Dante. \"Have you heard of the Ghost Town?\"\n\n\"Rumour, legend, myth type of stuff. The Papillo has a hidden underground facility where the secrets of the Twelve go to die,\" Dante nodded.\n\n\"It's real. I went there when Cat was at your gathering doing that painting,\" Matteo said with a sad sigh. \"If the hackers have gotten into the Papillo system, we aren't the only ones in danger. I think we need some collective answers from everyone here tonight. I'm not saying Phil is right, it's only his gut, but I'm not willing to take that chance. His gut has never let us down before, but whether Phil is right or not, we need more concrete information, strong hot coffee for the guys and then a roundtable discussion.\"\n\nMatteo immediately took charge of the situation. He'd have to tell Dante about Nik, but knowing how he felt about Peri, he knew that once Dante believed her in trouble he wouldn't be able to think of anything else.\n\n\"For what it's worth, I believe you, Phil,\" Matteo said as they started back toward the house. \"I'm going to call home and make sure everything is locked down. I'd also like to talk to Ben if I could, D.\"\n\n\"Emily?\" Dante asked, considering his friend.\n\n\"I don't know for sure, I was hoping he would. I saw two dead people in Ghost Town, neither of them people I expected nor wanted to see. I'll tell you about it another time.\" Matteo said and walked back into the house.\n\n*****\n\n\"I don't know what you said to Theresa this afternoon, but she looked happier and more relaxed than I have seen her in months,\" Ricco said on the drive home after dinner.\n\n\"Just wedding stuff,\" Cat smiled softly. \"She just wants the best for you and your siblings, like any mother, and we just bonded a little more over the wedding and Matt wanting the big traditional wedding, that's all.\"\n\n\"I somehow think there's more to it than that, but I'll let it go,\" Ricco chuckled. \"But only because you both look so happy.\"\n\n\"I am happy,\" Cat admitted. \"That doesn't mean it isn't weird and strange being part of this family with all your rules and traditions. Just that I am happy to be part of its weirdness.\"\n\n\"Have you ever meditated before?\" he asked, abruptly changing the conversation.\n\n\"No, not really. I mean, I know about it, but everyone seems to do it differently, so I'm not sure I understand the how or why of it when some deep breaths and counting can calm you down just as easily,\" Cat shrugged.\n\n\"Breathing is a major part of proper meditation. I'd like to teach you, if you're willing,\" Ricco said tentatively.\n\n\"I guess,\" she frowned. \"It's always good to learn a new skill. Is there a particular reason you'd like me to learn to meditate?\"\n\n\"The Mastery I have with rope goes by many names, most commonly Shibari, but also, when eroticism and pleasure are involved, Kinbaku, though they are only two of the names given to different aspects of the skills,\" he began to explain.\n\n\"Like what you did last night?\" She turned to look at him, truly interested in what he was saying.\n\n\"Last night was rushed and urgent and not at all what true Shibari is about,\" he smiled. \"I had wanted you for so long that my desire and need drove my actions rather than the rope.\"\n\n\"I'm not sure I understand,\" Cat admitted, frowning.\n\n\"Shibari is considered an art form. It is not only about immobilising the subject, but also the aesthetic result of the rope, and it's application. The object is not only to bind, but to make the binding pleasing in the way an artwork is pleasing. Even a five-year-old can use paint on canvas, but only those with skill and knowledge can create an artwork worthy of a gallery or museum,\" he explained, glancing at her from time to time as she looked at him curiously. When she said nothing, he continued.\n\n\"For many Masters, myself included, we believe that we should seek to create stillness and serenity in the subject that allows for a state of detachment. This state is often reached through meditation, where they are absorbed in the sensation of being bound with intricate and tight designs of the rope to the exclusion of all else but what their Master wants them to feel. It can be a very deep connection when done properly,\" he said softly and reached out to take her hand momentarily. \"Would you like to see my meditation retreat?\" he asked.\n\n\"Yes, please,\" she smiled, imagining a cabin surrounded by trees and flowers. 'Wildflowers,' she corrected herself, and smiled remembering her early fantasies about the man beside her.\n\n\"How did you get into it? I mean, it doesn't sound like a typical choice for a master,\" she asked curiously.\n\nAs they drove, he talked about his trial and finding himself as a teenager. He had developed an interest in photography and had been introduced to the artwork of a Japanese Shibari Master. He travelled to Japan and did an internship over several of his breaks from university. He fell in love with the artform and the discipline it took to Master both himself and the ropes.\n\n\"This is my Uncle Salvatore's place. I have a space here, for meditation,\" he explained as he pulled up a circular drive in front of a club called Spanky's that was attached to a larger building at its rear. \"Looks like Sebastian's here,\" Ricco said with a little surprise.\n\n\"Your cousin?\" Cat asked as she stood from the car. She was a little disconcerted that his meditation space was not as private as she had thought it would be.\n\n\"Sure, Sal is my Uncle and Sebastian is his son,\" Ricco chuckled. \"Makes sense if you think about.\"\n\n\"I haven't had time to get all the families' straight, give me a break,\" she laughed, opening her door to get out of the car.\n\n\"Why would you have a meditation space right next to a club?\" she asked, suddenly nervous about how it might look walking into an obviously private club with Ricco.\n\n\"I don't,\" he shrugged, \"But this was closer than taking you to the real space.\"\n\n\"I don't understand,\" she looked at him as he helped her out of the car and took her hand to walk towards the building. They skirted around to the side of the club and down a seemingly endless path to an impressively large door which swung open as they approached.\n\n\"Good evening, Master Enricco,\" The large man who opened door greeted him.\n\n\"Always so formal, Baron,\" Ricco grinned. \"Who's home tonight?\"\n\n\"The Master and his son are in the living room, if you'll follow me,\" Baron let the door swing shut behind them and abruptly turned around and walked into the living room.\n\n\"Ric!\" Salvatore looked up in surprise as they entered the room before Baron could announce them by name. \"And Catriona, so nice to see you again.\" He stood and came to kiss her cheek.\n\n\"Hi, Cat,\" Sebastian followed suit after greeting Ricco.\n\n\"I wanted to show Cat my studio, if that's okay,\" Ricco checked with his uncle. \"I know you let a few of the Dom's practise in there. Is it free?\"\n\n\"You're taking Cat to your studio?\" Sebastian frowned. \"Without Matt?\"\n\n\"I just want to show her the art on the walls, not make her one,\" Ricco rolled his eyes.\n\n\"Wouldn't matter if you did,\" Salvatore grinned. \"It's good to see a woman interested in the arts.\"\n\n\"Where's Zia?\" Ricco looked around the room.\n\n\"Some emergency secret women's business with your Mama,\" he waved his hand.\n\nCat only half listened as she took in the room. She'd only met Salvatore once at the engagement party. He was a tall and impressive man, and his wife was just as imposing. They had an aura about them of power and privilege, and now she understood why. The artwork and the furnishings told of their lifestyle, and Cat was taken aback by the overt and lewd pictures of submissive men and women that decorated the walls of this room. It was as if she had stepped back in time into a wealthy men's club or high-class bordello complete with perfect nineteen twenties art deco design.\n\nA young woman in one of the black and white sexy French maid costumes entered and offered the guests refreshments, which Ricco declined after a small shake of Cat's head. She realised Ricco was eager to leave for his studio and she hastily gathered her wits.\n\n\"It was so nice seeing you again,\" she smiled. \"I'm sure we'll have more time to catch up during the gathering.\" She said as pleasantly as she could, and was grateful her voice sounded normal, despite the fact that her skin felt heated, and she was sure she was blushing slightly. \"You'll probably have to come and show me how to work everything in the penthouse once we move in, hopefully, Friday, if Matt is back,\" she spoke directly to Sebastian.\n\n\"Sure, just give me a call, happy to help out anytime,\" he said easily, even though he was still giving Ricco a disapproving look.\n\n\"We'll let ourselves out when we're done,\" Rico said, raising his eyebrows first at Sebastian and then his Uncle. \"Unless you feel the need to supervise me while I am here with my brother's fianc\u00e9?\" He turned his look back to Sebastian.\n\n\"No need for that,\" Salvatore said, clapping Ricco on the shoulder. \"It's obvious I need to educate my son in hospitality and good manners, even at his age,\" he chuckled and walked with them towards the door leading from the room.\n\n\"I didn't even think about seeing Bastian here tonight,\" Ricco said in a quiet, apologetic voice.\n\n\"Once he gets a clue he'll apologise. He loves Matt, you know,\" Salvatore chuckled. \"He just has a problem using his head rather than his heart when it comes to people.\"\n\n\"Everyone does,\" Ricco laughed with his uncle. \"Including me... us.\" He looked down at Cat and squeezed her hand. Ricco gave his Uncle a look of gratitude and walked her through a corridor to an elevator.\n\n\"My Uncle is the High Lord of the family, much like Romy Donati or Francesco Battaglia. This is a clinic and training facility for those wishing to gain a contract with one of our families,\" he explained as the slow elevator rose through the large building to the fourth and final floor. \"Girls like your friend, Nymph, come here rather than make their way to Canberra, although sometimes we send them on. Sal has made this place more about the Kept than domestic help, though they do receive training here on occasion.\"\n\n\"That explains the living room,\" she said softly, still feeling the heat of embarrassment at seeing such an overt display of dominance and submission. \"They are quite open about their lifestyle. Is your Aunt submissive? She didn't strike me as the type, but I only met her once.\"\n\n\"No!\" Ricco laughed loudly. \"They rule this place together, and she is far fiercer than Uncle Sal.\" He continued to laugh at the idea of his Aunt being submissive.\n\n\"It must have been weird for Sebastian to grow up here with all of this on show all the time,\" she said.\n\n\"They stayed in the nursery or the back of the house until they went to boarding school, and then spent holidays travelling or with family. I don't think they spent much time here until they were teenagers,\" Ricco said thoughtfully. \"Sebastian and Matt went to school together, they're closer than most of the cousins, which is why I expect he helped Matt out with... so much in the penthouse,\" he stopped himself from mentioning the fantasy room Matteo had created for her.\n\n\"Oh, that makes sense, I guess,\" she nodded. They came to a large heavy looking wooden door which had a keypad lock. Ricco punched in a series of numbers, and the light above the keypad turned green and the door slid across into a pocket in the thick wall.\n\nLights flickered to life, bathing the room in a warm golden glow, and she walked into what she imagined a historical Japanese home might have looked like. The walls were covered with bamboo and rice paper screens of varying sizes. Panels of rice paper had been replaced by black and white or grey, with just a hint of colour photographs she acknowledged without looking at them closely as she took in the padded floor and the low furniture and cushions that sparsely decorated the space. The room was an exercise in simplicity, but, rather than feeling spartan or austere, it held a warm and calmness within its walls.\n\nRicco stood back allowing her to explore on her own, smiling as she found movable screens and bent to touch large soft looking cushions on the floor before taking time to study the photography on display. He remembered well the photographs and models that had led him along this path. They were almost landscapes in their beauty and proportion, but always a figure bound in stillness and serenity within that landscape drew the eye, and, in his case, arousal and pleasure. He had done his best to carve his own place among the Masters of this art form and had spent years perfecting his craft.\n\nHe knew a few of his pictures had found their way into the homes of the men he called friends and Masters both here and overseas. He was proud of what he could do, but Mastery took time and discipline, something Jacobi had lacked, and therefore didn't understand his fascination. He hoped, given the time, that Matteo might come to understand, although, of his younger brothers, only Zion had seemed interested enough in the art form to view this room during his trial, not knowing which Master it belonged to. It was rare that the Dominant alpha men of his family reached Mastery in any discipline after their trials, preferring to concentrate on dominating the business world and, in Jacobi's case, their family.\n\nThis place always brought out the stark differences between himself and his twin. They were close and had planned their future together from the youngest age, aspiring to be like their own fathers and share a life and a family. He had been committed to that vision, even when he had finally acknowledged he had remained passive for too long under Jacobi's demands. He had decided to make his own needs known with Matt from the earliest moments, and now, standing here in this place after so many months away, he knew Matt would accept, even praise his expression of art and try to understand it for him, just as Cat was trying to do now.\n\nHe walked to the screen Cat stood in front of and thought back to that day. He'd captured a winter landscape as dusk threatened to fall, the sun low on the horizon bathing the land in shadows and a single denuded tree, stark and dark against the dull muted glow in the grey sky. It was a lovely picture, just for the landscape, but, as you looked closer, you saw it. Not obvious at first, but with increasing awareness, a sturdy low main tree limb jutting out from the trunk several meters rising a few degrees from the horizon along its length. A beautiful naked woman, quite alive and well, but perfectly still, tranquil, serene even, hanging suspended, mirroring the limb less than half a meter above her. She is held in place by the beginnings of a rope cocoon as if a caterpillar had chosen that exact spot to sleep and transform.",
        "\"She looks peaceful,\" Cats whispered into the silence, awestruck by the calmness and serenity of his photographs.\n\n\"She dreams of being a butterfly once the cocoon is removed and flying away,\" he said in a soft voice, enjoying the memory and the concept of the piece.\n\n\"That's almost poetic,\" Cat smiled, looking up at him and realising there was far more to this man than she had ever realised. There were so many questions she wanted to ask, but found herself not wanting to ruin the moment with facts and statistics, so to speak, but she understood the patience and care he must have taken to create this. To wait for the perfect day, the perfect moment, the perfect model, all to come together for this. She can't even imagine how he managed to get her to that exact position with no sign of scaffold or hoist, perhaps he had others there on the day to help him.\n\n\"What is it called again?\" she asked. \"The proper term, not what Matt calls it.\"\n\n\"The more common word in English speaking countries is Shibari, and I use that most often when speaking to people, but Kinbaku is the preferred term for what I do. My title would not be Master, but Bakushi, were I with my friends who also practise the art form,\" he said in a quiet voice to match hers.\n\n\"You bind men as well?\" she asked, coming to stand before yet another screen.\n\n\"I have done, yes,\" he smiled. \"You have to admit he looks particularly attractive in rope,\" he pointed to the man who seemed to strain against the web of ropes holding him immobile. The straining man stared at a woman who appeared to be wearing almost a dress made of rope and impossibly high shoes as she stood before him. \"At first glance his desire is clear, and though we cannot see her face, we assume she is beautiful, and it is she that he desires, but look closer.\"\n\nRicco illuminated the screen from behind with the flick of a switch, making the dark background to the two figures less so and revealing what her initial viewing of the screen didn't pick up. Beside the woman, a black suit and longish black hair told of a tall man standing in the shadows. Looking at the figures now, they both turned towards the shadowy figure, and the desire she thought she saw on the man's face didn't seem as lustful as it once had.\n\n\"Would you like me to tell you the story of this?\" Ricco asked, switching off the backlight. \"We could be here all night if I told you each story,\" he chuckled.\n\n\"Without the light, the shadow person remains now, like once seen he can't be unseen. He is malevolent, isn't he?\" she asked. Everything in the picture told her that now.\n\n\"We all have darkness within us. He is facing his, as well as the rewards and consequences of letting it loose,\" Ricco nodded and pressed his fingertips to the screen.\n\n\"That looks like a dress almost, the rope,\" she indicated the woman.\n\n\"It is, though the term I would use would be karada,\" he explained patiently. \"Come,\" he guided Cat to a panel beside a large landscaped screen and presented her with a woman in a karada.\n\n\"It's beautiful,\" Cat said softly as she gazed at the image. \"Does it take long to create something like this?\" she asked.\n\n\"Hours,\" he chuckled, \"Though I have improved with practise since then, and I am not as fastidious when it is not for display. Even still, it can take hours.\" He guided her to the far wall with a hand on the small of her back and opened a large sliding door to reveal a room with glass walls that displayed the night sky and a view of the surrounding neighbourhoods.\n\nCat walked slowly and carefully, afraid to disturb the silence and serenity of the space. A fountain came to life and began to tinkle melodically as she took in what she assumed to be a Zen garden. She had seen miniature models in stores and had always found them interesting, in a kitschy way.\n\n\"This is amazing,\" she said softly, turning back to look at him. \"It's a shame you told Sebastian you weren't planning on making me part of the artwork up here,\" she teased.\n\n\"Plans can change, he'd be the first to understand that,\" Ricco said carefully, unsure if he wanted to use her here when his need was still so urgent and raw. He wanted to spend hours with her here one day creating the perfect moment in time for her and him, and, if he was honest, for Matteo even more so.\n\n\"Where do you keep all your rope?\" she asked and tilted her head coyly.\n\nRicco could feel every nerve in his being strain toward her. He stalked toward her and took her in his arms, kissing her roughly, deeply, passionately showing her what a dangerous game she was playing with a man like him. \"You're playing a very dangerous game, brat!\" he growled at her. \"This is a room for quiet meditation and art, not what you're making me feel right now!\" his growl got darker and huskier.\n\n\"Oh,\" she said, disappointment lacing her voice. What happened between them the night before had stayed in her mind and slightly bruised ass all day, and she had thought they would revisit his love of rope again tonight. She was more than a little aroused being here in this space and viewing his art.\n\n\"All of this area that you see and beyond used to be an attic storage space. My Uncle allowed me to renovate it for my own use in exchange for teaching a series of classes to his trainers,\" he moved behind her and guided her quite forcefully back into the original room and the right side. \"I have a series of little-used rooms that mean I can stay here overnight when necessary, or if I wish to escape the world. Very few people know about this place.\"\n\nCat looked curiously as a wall slid away, and she could see a small bedroom and adjoining bathroom created in the same Japanese style. She listened to his explanations as once again he guided her across the room to the opposite side and slid another wall panel away. Cat took in the dark space, waiting for her eyes to adjust to the dim light. Large solid beams of dark wood dominated the room. They were studded with large metal discs, and, while the rice paper screens ran around the top half of the walls, its framing was the same heavy dark wood rather than the lighter bamboo. The dim golden glow from behind the wooden framed screens seemed somehow duller and was the only light illuminating the space. Cat quivered and looked up at the now silent Ricco.\n\n\"Whenever there is light there is shadow,\" he murmured close to her ear and kissed her neck. His hands worked gently but with purpose as he rained light kisses and touches on each new part of her body as it was exposed while he undressed her. Eventually, she stood naked and panting in the centre of the room. Ricco retrieved a stool from the corner of the room and positioned her beneath the main beam in the dark ceiling before allowing her to sit.\n\nRicco had said nothing from the time they entered this space. He would, as he said, display her in all her glory in the other rooms and in nature itself, but his need outweighed the patience needed for his art, yet he wanted to give her the experiences she deserved with him. Torn, he stalked away from her, gathering some well used and pliable coils of rope, dropping them at her feet. He took a large breath and began uncoiling a length of rope, feeling the familiar texture and weight in his hands and allowing his mind to appreciate the beauty of the woman before him for a moment, deciding how he would bind her tonight.\n\nCat watched as Ricco threaded a rope through an almost invisible eye bolt and brought it down behind her shoulders until it was perfectly proportioned in half before tying it off at the bolt. As she looked up, she could see a row of the black eyebolts along the long dark wood beam. He moved behind her and ran his hands down the length of her arms, slowly lifting them until she held them out from her sides at shoulder height. His lips touched the back of her neck in a soft kiss before he moved away again, only to return with a piece of bamboo which he laid against the back of her neck. He encouraged her to twist her arms so she could curl her fingers up and over the long piece of bamboo that reached from one hand to the other.\n\nDespite his raging need, Ricco slowly and carefully laced the rope around her arms to her wrists in a network of diamond patterned rope, tying the rope off in an ornamental knot near her hand so she could let go of the bamboo rod she held in place for him. One half of the original rope was used on each arm, and Cat hung like a puppet from the first eyebolt in the ceiling when he had completed the second knot. The stool still supported her weight, but her upper body was securely bound, with the bamboo distributing the weight between the four points of suspension about a meter and a half above the floor level.\n\nThe kiss Ricco gave her was deep and passionate as he held her safely on the stool. He enjoyed her momentary struggle against the binding holding her arms before she realised she couldn't touch him in return, and he smiled as he withdrew, his fingers grazing down her cheek and neck tenderly. He took another rope, passing it through the far eye bolt and tying it off before moving to retrieve the second piece of bamboo of similar length. He bound her lower legs and ankles similarly to her arms, the bamboo keeping her legs in a wide-open position but not tying it off to the eyebolt yet.\n\nRicco worked as quickly as he dared to place the rope around her hips, lower back, beneath and above her breasts before repositioning her on the stool to balance precariously between her supporting arms and the stool wedged beneath her hips. He was careful with his knot work, making it intricate and beautiful, but also designing it to keep her safe and secure as well as comfortable.\n\n\"Just breathe,\" he whispered in her ear and kissed her softly. He moved to finish the bindings and lift her from the supporting stool, her legs doubling as the bamboo rested on the back of her upper thighs. The four eyelets held her body suspended in mid-air, and he moved around to cup her face, giving her head support as his lips took hers again. They were both breathing heavily from the teasing arousal the ropes gave them, and he smiled.\n\n\"One more rope, beautiful,\" he murmured and felt his cock jerk as he heard her answering soft purr. It was the first sound she had uttered since he began, and it sounded so sexy at that moment that he almost lost all restraint. Taking a short rope, he tied her hair back into a long ponytail before plaiting it with the rope and eventually tying it off in an eyelet to keep her head supported.\n\nRemoving the stool, Ricco walked around her, stroking her bound and immobilised body. She was perfect, and the fact that she hadn't spoken at all without him having to request silence pleased him enormously. To someone who knew nothing of Shibari, it might appear that she was being tortured, but he could tell by the suppleness and lack of tension in her muscles that she was comfortable, despite her position. The position and height were purposeful, in that she was at the perfect height for the desire and need he felt and was barely holding in check.\n\n\"Would you like to see how beautiful you are?\" he asked softly, picking up an old-style Polaroid camera from a hidden nook.\n\n\"Please,\" she whispered in a soft purr, finding herself unable to nod her head. She listened to the click and whir of the camera and the slapping of photographs against the floor below her as they were left to dry. She whined softly, trying to move her head to look down, and he finally took pity on her and moved to crouch before her, picking up each photo and shaking it so that the image on the instant film dried and became clearer before he turned them to her. The dim photo in the dim light of the room showed her little, but she knew eventually she would see what Ricco saw and why this aroused him beyond other kinks. She would need to remember to ask him after the painful pleasure she knew he would give her in full measure now.\n\n\"What I wouldn't give to have Matt here now,\" Ricco said, surprising her, and she gasped, her eyes opening wide. \"I would love to see how you move and strain against the ropes when being fucked to orgasm over and over again. I imagine you are already close to orgasm,\" his hand glided over her breasts as he said it, his fingers gripping her nipples and pulling them, making her whimper and try to bring her shoulders forward without any success. \"So good,\" he smiled, twisting the swollen pink buds to hear her whimper grow louder into a mewling cry that made her eyes glassy. \"If I weren't going to fuck you, I would have placed knotted ropes between your legs to give you the relief you crave right now, but, as I didn't...\" he stood and stroked his hand down her side, enjoying the touch and feel of her swaddled in the rope.\n\nStepping behind her, he pushed her knees further apart and adjusted the ropes to lift the bamboo rod holding her feet apart further up so it moved to rest higher on her body, allowing him full access to her pussy and a small amount of discomfort as her body bowed to his manipulation. Her answering whimpering sung to him as his hand smoothed over her ass, smacking it hard to make her sing louder for him. His hand drifted down to tease her pussy, his fingers rubbing and seeking out her clit as he used his free hand to remove his pants and underwear.\n\nCat felt her thighs quiver already with the barest touch from him as he stroked her legs and adjusted the ropes. The smack, when it came, surprised her, and she cried out, not from pain, but the absolute need she had for him. Her body was immobile, and even the minuscule movements she managed to make were so unsatisfactory that her whimpers and mewls were loud in response to his teasing fingers. The difference in texture and pressure made her realise that he had replaced his fingers and was rubbing his hot hard cock over her wet pussy, and the quivers in her legs became intensified so that her body shook in need as she climbed even higher toward the climax she knew would blow her mind.\n\nRicco massaged her ass with both hands gripping the firm flesh as he moved slowly forward, impaling her with his cock. She was shaking and mewling loudly, and he had barely managed to get half of his cock into her tightness. He smacked her again and thrust forward as her body made a slight bucking movement, and he groaned loudly as she took him all and began easing out of her slowly. He listened to her moan as he withdrew completely, her body sagging slightly before he thrust into her hard, burying himself to the hilt, making her cry out.\n\nCat was beside herself as he played with her, varying the depth and thrust and timing of his fucking. She was so close to falling over the edge, yet he held her on the precipice time and again. Another smack and his large hands kneaded her soft flesh before he finally lost his methodical tortuous mojo and began to slam into her, fucking her hard and deep without any holding back. She felt her body stiffen in the ropes that cocooned her as she came almost violently, a high pitched keening spilling from her open mouth.\n\nThe sound filling the room drove him harder, and he sank into her pulsing pussy, allowing himself the same pleasure he had denied himself all day. He came for what seemed an eternity before staggering back and falling onto a large cushion on the floor. He watched her jerk and spasm as she continued to orgasm in little waves of pleasure brought on by her position and state of mind. She was beautiful, and he had no doubt that she was his as much as Matteo's."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "shibari",
        "brothers",
        "rope",
        "master",
        "submissive",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-21"
}