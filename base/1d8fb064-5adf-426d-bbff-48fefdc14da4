{
    "title": "Down at the Twist and Shout Ch. 05",
    "pages": [
        "This is the fifth and final part of this story, serious illness and family crises' have meant this story has had to take a long hiatus while things got back to normal, and I apologise for the long wait, I hope you think it was worth it!\n\nAs always, I caution you, this is just a story, set in my world, not the real one, although they do overlap occasionally, so please just read, and enjoy, hopefully as much as I did writing this.\n\nBB1958\n\n*****\n\nThe battered old truck slowed to a halt, suspension squeaking and bouncing over the uneven trail.\n\n\"Why we stopping, Johnny?\" yawned Justine, shaken awake by the shuddering as the vehicle traversed the flattened flood debris, old and new, scattered thickly all over the trail, or half-buried in mud by recent storms and localized flooding.\n\n\"Gals've come to halt; looks like we on foot from here, Sugar-Pie; you-all feelin' like a li'l hike, Minou? Don' look me like that; y'all knew we not gonna be getting' down to where we goin' on no open roads, why you think I got you all that trail-gear? Come on, Minou, there's city-folk willin' to pay small fortune fo' hikin' trail like this, you ever stop to think that?\" \n\nJustine grinned and hefted her backpack from between her feet.\n\n\"Alright, alright, I get it, time to hit the woods, I hear you loud and clear, Daniel Boone, let's go break a trail! Just lemme get changed first, huh?\" \n\nJohnny wandered over to have a few words with Od\u00e9lie and M\u00e9lette as they unloaded their packs and camp-gear from the bed of the nondescript old farm truck they'd borrowed from Lubin. Od\u00e9lie flashed him a quick grin as she finished stuffing gear into her pack and shrugged on a military surplus tactical vest with a myriad of oddly-shaped pockets.\n\n\"You reckon she gon' be OK trekkin' through to the lake, Li'l Jean? I know she a spunky gal an' all, an' she smart, but it ain't easy coming up from this way, lot o' wild country to git through, she city gal, an' she prolly gon' be stretched, you reckon she up to it?\"\n\nJohnny spun his little cousin around and settled her pack square across her shoulders.\n\n\"Baby-girl, that li'l gal work hard, twelve hour nights, six, se'bm night a week, when the goin' get tough, damn' if'n she don' jes' keep right on goin'; she do that over a year, I reckon she plenty tough enough where it needed. I just wisht I was tough as her; she gon' surprise us all, I guarantee you that. There, that comfortable now?\" \n\nM\u00e9lette looked up from her packing and grinned, then gave a wolf-whistle. Johnny spun around, and smiled broadly at Justine dressed in a tight cut-off white T-shirt, with a plaid shirt over it with the sleeves rolled up and the front knotted just under her breasts, and a pair of the shortest, tightest Daisy Dukes he'd ever seen, making her long, creamy legs look even longer. Even with her trail boots and folded tube socks, she looked knock-down, drag out gorgeous, like an old-school Playboy centrefold, or what those California dudes imagined hot country girls looked like. Her long black hair, tied in sexy pigtails just added to the picture of hotly alluring young femininity.\n\n\"Will this do, kind sir?\" she grinned, posing artlessly for him, making him grin even wider.\n\n\"Minou, there ain't nothin' I want to do right now 'cept mebbe sit here an' jes' look at you, but you cain't go trekkin' this country dressed like that; come dusk, maringouin's (mosquitoes) gon' eat you alive 'fore you gone ten feet! Them things the Louisiana state bird, they bigger'n buzzards out here, you-all surely don' want them things on you! I 'preciate the show an' all, but you better go put them Dockers on, you gon' thank me later.\" \n\nJustine grinned cheekily.\n\n\"I know, Johnny-Bear, I just wanted to show you these just once before I have to put on those hot old things!\"\n\nJohnny smiled as he nodded.\n\n\"If I had the time..! We got a long way to go, honey; we pretty much retracin' our steps, Lubin and Audh\u00e9mar reckoned we should be decoyin' them fellers on into the Atchafalaya, not South into Ghost Lake; up inta th' Atchafalaya the way they 'spectin' us to run, so we ain't gonna dis'point them none. We gonna pick up boat an' supplies the gals got stashed an' head up 'long the waterways, past Baton Rouge an' west into the Atchafalaya reserve, comin' in from the west, jus' north o' the Basin Bridge;.\"\n\nJustine looked puzzled, so Johnny explained the change in direction.\n\n\"I reckon they gon' be watchin' fo'us up along Whiskey Bay Pilot Channel, that the quickest way river traffic get up the Atchafalaya, so we gon' go round them an' cross the river over to the north bank, that where noncle Lubin, Audh\u00e9mar, an' Tante Amice's boys, few frien's waitin' for us an' loaded for b'ar; it's a long way, so move it along, sugar-pie, we got places to be!\"\n\nJustine looked concerned.\n\n\"Johnny, won't they be watching all the main routes into the Atchafalaya? Noncle Lubin said that Sheriff Broussard's going to let the Orleans Sheriff's office know where we're going, that means those people will know right away, what if...?\"\n\nJohnny shook his head reassuringly, grinning at how easily she'd slipped into calling Lubin 'noncle'.\n\n\"We gon' use the Atchfalaya river, that's true, but the river splits at Bayou Chene, we take the left branch, Bayou Chene itself, goin' west an' north, it's longer, we gon' be goin' agin the current, an' it go through some pretty wild country, you got to be local to know your way 'round there to get anywhere; ain't no city-boy gonna be doin' no trackin' through that, an' if me 'n the gals don't see them comin' out there then we deserve to get caught. The plan is: we make sure they know which way we goin', then we make sure they lose us out here, so if they smart, they go to plan b: get to where they know we goin', an' jump us there.\"\n\nJohnny grinned and rubbed his hands through his increasingly shaggy hair.\n\n\"An' that when they plan B turn into my plan A, an' me an' the family an' friends we got waitin' for them idjits to show their hand gon' have us a Twist 'n' Shout like th' Isle never seen before; I reckon with what we got waitin' fer them, we make them fellers jump an' holler! They think they all that; all I c'n say is, they ain't seen cousin Jean-No\u00ebl all het-up yet!\"\n\nJustine grinned and spun on her heel, heading back to change into something more suitable, while Johnny stared hungrily at her tight little bubble-butt twinkling enticingly at him under those skin-tight little jeans shorts. She reappeared a few minutes later with a new pair of khaki cotton Dockers tucked into her boot tops, looking like a movie star playing a jungle explorer; even the girls smiled and winked at her as she posed for her man.\n\n\"This do, you picky man, you?\" she giggled, arms akimbo, her hip thrust out in an overdone catwalk pose. Johnny clutched his chest and pretended to swoon dead away, making her giggle again.\n\n\"Y'all look like the reason the war ended early, honey-chile! Just let me get some o' this on your skin 'fore we set out, Minou, 'skeeters, chiggers, an' no-see-um's really hate this stuff, jes' take that shirt off fo' minute.\n\nJohnny sprayed something on and under her arms, in her pits and all the way up to her shoulders, between her shoulder blades, and coated her hands, neck and upper chest, down the neck of her t-shirt, and puddled some in his hands and rubbed it into her face and inside and behind her ears.\n\n\"What is it Johnny-Bear, it smells lovely?\" she asked and Johnny held up the bottle.\n\n\"Repel; lemon an' eucalyptus, 'skeeters really hate this, they gon' keep away; it do smell nice though; you-all smell like one o' Maw-Maw Lucianne's lemon cough drops, but don't try lickin' it, it taste a whole heap different what it smell like!\"\n\nJohnny tossed the spray bottle over to Od\u00e9lie so she could do M\u00e9lette, hitched up his pack, and pointed west.\n\n\"We goin' that way, not much open water to cross that way, an' then we c'n strike north an' get up to Lake Palourde; the gal's got two pirogues stashed there, we cross the lake an' change over to th' boat gals got docked an' waitin' at the Atchafalaya river inlet north-west side o' the lake.\"\n\nJustine looked puzzled, so Johnny explained.\n\n\"Pirogue flat-bottomed boat, fine for polin' through swamps or across lakes where it don't have much of a main current to fight agin, but ain't no pirogue gonna make it far on the Bayou Chene this time o' year, not with all the rain we bin havin', need a boat with a keel for that, which is why we gonna change over to the gal's charter-boat. Even if we had airboat it couldn't get up there, airboat only good for swamps an' flat water, current on Bayou Chene kinda unpredictable right now with the amount o' water comin' down from higher up the watershed, that why we need something' little more robust. Way we are, I reckon it take us mebbe eight days to get to Lake Palourde, an' mebbe three, four days to get up Bayou Chene 'gainst the current, so mebbe twelve days all told, so when you ready...?\"\n\n\"Sure thing, Johnny-Bear. What about the trucks, are we just gonna leave them here?\"\n\nJohnny shook his head.\n\n\"Lubin know which way we goin', Minou, folks 'roun' here know who they b'long to; Lubin mos' likely get someone to come on down to collect 'em and take 'em back tomorrow or next day, don' pay them no mind. Now, let's get movin', we got a lot o' ground to cover an' not much time.\"\n\n*\n\nMax Zeigler stared at the GPS locator and scratched his face, by now a mass of red and swollen mosquito bites.\n\n\"Problem, Ziggy?\" asked his partner, Roberto Carvalho, who hadn't seemed to be troubled by the biting insects one little bit.\n\nZeigler hitched up his belt and adjusted the SUNVP Molle Modular Tactical Holster strapped to his right thigh, running his thumb over the Glock 22 clipped in there as though checking it was still there. He was dressed in a weird array of military surplus camo gear, including an improvised body-armor vest made of a MOLLE tactical vest modified to take a front trauma plate, his insurance against taking a body-shot from one of the local hicks; Carvalho wondered how he managed to stand-up in this heat with all that crap strapped on him, but Zeigler was adamant; stories about how good Bastine was were beginning to circulate among the teams, and he wasn't taking any chances.\n\nZeigler shook the locator again.\n\n\"This fucken thing says we're on-top of Bayou La Boeuf; you see a bayou anywhere 'round here?\"\n\nCarvalho scanned their limited horizon, standing as they were in a sort of hollow, with low hills forming a bowl all around them.\n\n\"If that thing says it's here, then it's here, so we wait right here; those hicks 'r supposed to be headin' this way, so we stick to the plan, we scoop 'em up, take that big bastard's head like we're 'sposed to, grab the gal, and get the fuck back to civilization and that million-dollar bounty; the sooner we're outta here the better I like it, this shithole gives me the creeps. We start second guessin' 'em and they slip through, well, I for one don't wanna hafta explain that to Felipe, he really ain't in a listenin' mood!\"\n\nA sudden trilling birdsong made Carvalho look around uneasily; these woods had been silent as the grave the whole time they'd been trekking here, day after day no sound of birds, small animals, nothing except the occasional 'plunk!' of a bullfrog leaping into the water as they passed, shockingly loud and startling in the eerie silence; he'd become used to the dead silence, and the bird-call came close to spooking him. Without conscious thought he swung the lethal-looking HK33 on its neck sling into the ready position and flicked off the safety. \n\nThe call came again, from off to his right this time, and Carvalho spun again; this time he was certain; that had sounded like a signal, and then there came from behind him what he'd been dreading.\n\n\"Drop your weapons, turn round, and put your hands behind your heads!\"\n\nCarvalho made like he was complying, then suddenly snapped his rifle up and fired from waist height at where he thought the voice had come from. A shot rang out from an entirely different direction and he was flung backwards in a spray of blood, dead before he hit the ground, most of the left side of his face missing.\n\nMax Zeigler carefully put down his rifle, keeping his holstered sidearm on the other side to where he thought the shot had come from, and silently tugged open the Velcro clasp. As he stood, making out as though he was raising his hands, he spun to face his attackers even as his right hand flashed down and clawed at the butt of his handgun. Before he even drew the pistol, two shots rang out. Blood and brains sprayed as the back of his head exploded from the two bullets, one each through the lenses of his flashy Porsche sunglasses.\n\nA head in a NEXUS tactical helmet rose cautiously from behind a dense clump of foliage. The soldier stood up, keeping his M4 carbine trained on the two motionless bodies, and two more helmeted heads appeared.\n\n\"Sergeant...?\" he called, and one of the other soldiers lowered his carbine.\n\n\"Good, clean kill, Uncle Sam's trained you well! Hillier, Sloane, get down there, check and search those two, and secure their weapons. Huber, Slenke, on my six, rest of you keep spread out and keep your eyes peeled, don't bunch up; there might be others on their way in, don't give them easy targets. Mister Deaucette, any word from your people yet?\"\n\nA man who, by the look of him was obviously one of Johnny's close kin, stood up and safetied his hunting rifle, and spoke in rapid Creole dialect into a clunky-looking sat-phone, then nodded at the sergeant.\n\n\"Tante Amice's boys tell me they jes' kinda made some o' these Noo Yawk boys up on the banks o' th' Atchfalaya lose interest real quick, another four so far; way they keep losing men you think they be smart an' jes' pack-up an' go home, they mus' know by now they ain't making no kind a friends hereabouts! An' by the way, my name Jean-Martin, soldier-man; roun' hyah, you-all call a man 'Mister' once, you jes' bein' polite; call him 'Mister' twice, less'n you six years old, it mean you don't like him too much an' he might take to dislikin' you right back!\"\n\nSergeant Jones unclipped his helmet, pulled it off, and grinned.\n\n\"I'll bear that in mind, Mister- I beg your pardon, Jean-Martin, and my name's Everett. What do you want to do with these fellers?\"\n\nJean-Martin grinned wolfishly.\n\n\"Why sergeant Everett, I'm s'prised you-all had to ask; din't yo mamma never teach you nuthin' 'bout takin' out the trash? Way I see it, them fellers' mamma's ain't gon' come lookin' fo' them; they got no business hereabouts 'cept to go murderin' my kin, so they got whut they askin' fo, an' this their just reward; the book say live by the sword, die by the sword, so my conscience clear. Them 'gators down bank-side look fair famished to me, why don' we jes give them po' boys sumthin' to chew on, they God's creatures too, I reckon they be real grateful!\"\n\nSergeant Everett Jones grinned just as wolfishly.\n\n\"Jean-Martin Deaucette, remind me to never get you pissed at me! You fellers heard, get it done, and remember; this didn't happen, we were never here, and we've never seen these douchebags before, got that?\" \n\nA chorus of ' Yes Sar-junt!' met his words, and Sergeant Everett Jones grinned again.\n\n\"We'll get them stripped and their weapons and personal effects removed and dumped in the bayou somewhere downstream, anyone comes looking for them, they're gonna have to argue about it with those ugly critters, that OK by you?\"\n\n\"A-ffirmative!\" smiled Jean-Martin, \"You already thinkin' like bayou folks, Sergeant Everett Jones; when you done bein' soldier, you-all might wanna come back, I reckon we could have us a time down the bayou; there some fine surf-fishin' and real han'some, friendly gals down Dulac way!\"\n\n*\n\nEven as Johnny and the girls prepared to start their trek, a world away, in an expensive penthouse in one of Manhattan's most exclusive apartment complexes, the two remaining Ribeiro brothers were not having a good day. Joao-Luiz Ribeiro, suave and handsome, but with a hint of the depraved savagery he was capable of showing in his eyes and the curl of his lip, was behind his priceless 18th century English Chippendale desk, leaning back in his decadently luxurious executive chair, while Felipe, his hulking, brutal older brother paced back and forth across the jewel-toned, hand-knotted antique Persian Sarouk Farahan carpet that was such a feature of the elegant, tastefully decorated office.\n\n\"Six teams, Meu, six teams, more than twenty of our top-guns, your best people, OUR best people, and nothing, no word, no call, nada; it's like they vanished, those swamps just swallowed them whole. What are you going to do about it? We keep losing people like this the Cartel is going to start thinking things, can you give them answers? Because I cannot; they show up now, and I tell them we've got our best people on it, they will want to see what we are doing, and if they think we are doing nothing, then maybe they will think it is because we can do nothing, have you thought of that? What that could do to us? A peasant, an ignorant, inbred campon\u00ea, the dirt and filth of those bayous and swamps, is making us look weak and powerless! He has already killed our little brother, mama needs to have payment for her filho beb\u00ea (baby boy), her soul will not rest until we have bought our blood back, and we cannot even do that, and you sit there cleaning your nails!\"\n\nJoao-Luiz pursed his lips in annoyance at Felipe's bluntness.\n\n\"We have many more men, Felipe, more than the cartel knows about, but I'm not wasting them on pointless manhunts; our friends in the Orleans sheriff's department have told us where that swamp-rat and the girl are going, we will have people there waiting for them, as many as we can spare, all of them, if necessary; let's see them slip through our net there!\" \n\nFelipe's lip curled in a sneer.\n\n\"You think those fools are going to be any more successful? So far, those swamp campon\u00eas have made us look like foolish amateurs; what makes you think this plan will be any better? I think it's time we start thinking about taking care of this ourselves; there's only two of them, maybe we should finish them ourselves. There's an old saying, little brother; 'if you want a job doing well, then do it yourself'; perhaps the time has come to show those fools we have trusted to do our work for us how it should be done, and then we will thin them out a little as an example of what it means to fail us...\"\n\n*\n\nJohnny and the three girls made good time that first day, finally pitching camp a good ten miles from their starting point, no mean feat, given the rough country they were traversing. Justine had had no problems keeping up with them as they broke a new trail, keeping off the game trails and more obvious paths and tracks, justifying Johnny's confidence in her, and Johnny grinned as he caught the approving looks passing between his two woodsy little cousins. They pitched camp, rudimentary tents consisting of lightweight plastic tarps draped over para-cord stretched between two handy saplings, a groundsheet, and a mosquito net thrown over and tucked under the whole thing, and Johnny and Justine set about sorting through their packs for the camping rations packets while Od\u00e9lie and M\u00e9lette built a small fire and unpacked camp utensils. \n\nThe food was filling, that was the best thing to be said for it; dehydrated corned-beef hash, fried Spam, hardtack, and coffee, and a pack of dried peaches each. Johnny grimaced as he wolfed down his portion, and winked at M\u00e9lette.\n\n\"Tomorrow, you-all un limber that there bow o' yours, honey; many more meals like that an' I gonna be surrenderin' just to get fed right!\" ",
        "M\u00e9lette smiled winsomely, batting her eyelashes at him.\n\n\"Why Sugar-Pie, don't you-all like my cookin', honey?\" she drawled in a voice sweet as honey and false as a tin nickel. \"I slave over hot stove got to be at leas' several minutes to feed yo' ungrateful ass an' this the thanks I get? I should let you surrender! Jes' 'cos you older than me, don' mean you get to go makin' no bahbin (pouting) at me, I still knows how to make you squeal like a hog, jes' you 'member that!\" \n\nShe glanced over at Justine and winked at her.\n\n\"He allus like this this, or he sickenin' for somethin'? I reckon Tante Eulalie spoil him when he petit boug, ain't no other 'splanation; if he allus gonna be like this then you gonna need to keep skillet handy an' dent his big ole flat head once in a while jes' to make him mind his manners!\"\n\nJustine grinned widely and leaned over to kiss Johnny on the cheek.\n\n\"I wouldn't hit you, baby!\" she smiled, then leaned in to stage-whisper in his ear \"I've got better ways to make you whimper...Big Boy!\" \n\nJohnny choked on the swig of water he was taking, spraying it all over himself while Od\u00e9lie and M\u00e9lette guffawed with laughter. Johnny stared at Justine's impudent raised eyebrow and 'say something, I dare you...' expression, before starting to gather up his stuff, muttering to himself; even in the dim twilight the girls could see the his flushed neck and ears as he avoided their arch looks and amused glances.\n\n\"Y'all finished now?\" he managed to say, \"we got a lot o' travellin' ahead of us, best turn in now; I'll take first watch, Odie, wake you in 'bout three, four hours if nuthin' show up, then you follow, Mel, an' I'll spell you after, OK, honey?\"\n\nThe girls nodded and started turning in. Justine nudged Johnny instead of climbing into the igloo tent.\n\n\"What about me, Johnny-Bear, I want to take my turn too...\"\n\nJohnny grinned and quickly kissed her cheek.\n\n\"Sure you do, Minou, but you ain't woodcrafty yet; sumthin' come sneakin' up on you ain't no guarantee you gon' see or hear it 'til it too late; yo' turn come soon 'nuff, I promise, jes' soon as you start pickin' up what the gals doin'. Now you-all scoot in that tent an' get cosy, I be in 'fore you know it. Love you, Minou-Minou!\"\n\n\"Love you too, Big Bear!\" grinned Justine, her smile turning into a jaw-cracking yawn.\n\n\"Wake me up when you come in, Bear, I wanna talk to you, and maybe work out where I'm gonna lay that skillet if I need to!\"\n\n*\n\nJustine had been asleep for what felt like only a few minutes when Johnny sliding into the old-fashioned lightweight cotton bed-roll next to her roused her. She twisted around to wrap her arms around his waist and hug him close, feeling his skin cool against hers, warmed as she was by the cotton bedding. As her hands explored further, she realized he was naked, just as Johnny discovered she was also buck naked.\n\n\"This feel real nice!\" he whispered, cupping and gently squeezing her warm little buttocks, warming his hands with the sleep-warmth radiating from her.\n\n\"Really?\" whispered Justine, grinding against him, \"how 'bout this?\"\n\nIt was too much for him; despite their cramped quarters, the male reflex took over, and Justine smiled that sexy, bottom-lip-biting smile of hers as she felt him hardening against her. Johnny stared at her, helpless in the face of that smile, as she continued to grind away, his cock stiffening even further each time she rubbed against him.\n\n\"What you doin', Minou, this ain't the time or the place...?\" he began, but once again she did that thing with her fingers, clamping his lips shut to shut him up.\n\n\"Don't over-think it, Big-Bear, just go with it; trust me...\" she murmured, barely on the edge of hearing, before once more grinding her mons against his stiff cock. Johnny responded by rolling onto his back with his arms around her, taking her with him, so now she was on top of him, with his cock sandwiched between them.\n\n\"Reckon that what you want, ma petite suce-fleur (my little hummingbird), jes' go quiet, Odie ten feet away, so keep it down!\"\n\nJustine grinned minxily and slid her damp pussy up and down his solid erection.\n\n\"You want me to keep this down? Why Jean-Basti\u00e8nne Deaucette, I only just got it up, for shame!\" she teased as he gasped at the feel of her damp heat. Johnny opened his mouth to correct her, but then her lips were on his, and her tongue was fencing with his, and in one smooth motion, she impaled herself on him, his eyes wide as she took him in and clasped him tightly.\n\n\"Sacre Dieu...\" he managed to gasp, and then he was losing himself in the rhythm as Justine rode him, slipping herself up and down him even as she rhythmically squeezed him, her warm, wet, clasping walls massaging him as she rode him. Johnny kissed her as frantically as she kissed him, their tongues lashing and teeth clashing as they fucked so strenuously, but in almost complete silence, only the occasional gasp or whispered endearment breaking the silence in the little tent as they pumped and heaved. \n\n\"Joneeee-e-e-e-e...!\" gasped Justine, her orgasm swamping her, and Johnny pulled her head down into the hollow of his shoulder to muffle her gasps as she shuddered and trembled atop him, his own climax so close, so close, finally blazing through him as Justine, in the final throes of her own gigantic climax, once more sank her teeth into his shoulder. \n\nJohnny groaned as his cock lurched, swelled, and convulsed, firing stream after stream of spunk deep into his sister's clasping pussy; the feel of him coming so hard set her off again, another wave of pleasure crashing through her, her entire world shrunk down to the pleasure they were giving each other, to the feel of him clutching her to his chest as his rigid cock pulsed and threshed inside her like a live thing, filling her so completely, his sweat-slicked skin hot and damp as it moved against hers.\n\nJustine finally slumped down, completely spent, her Johnny-Bear the most comfortable bolster and bed she'd ever slept on, and grinned as his big hands once more cupped and squeezed her butt-cheeks, gently massaging them, probably not even aware he was, just enjoying the feel of the two smooth globes as he held his girl tightly. He was still deeply embedded in her, but she could feel him shrinking away, so she gave him a squeeze, just to make him jump.\n\n\"Don' do that Minou, you-all know how sens-...\" once more he shut up because she was holding his lips shut.\n\n\"I know, Big Bear!\" she grinned, \"I just wanted to be naughty; I know you love me when I'm good, but I like the way you fuck me when I'm bad!\"\n\nJohnny grinned as he kissed her and squeezed her bottom, making her gasp when he pulled the two cheeks apart.\n\n\"Where you get stuff like that from, heh? Mama was right, she warn me agin an' agin 'bout not havin' no truck with gals like you, I shoulda listened to her!\" \n\nJustine pinched his earlobe for that, and grinned at his overdone, 'good ole boy' accent.\n\n\"So what kind of girl am I? Do tell, Swamp-Thing,\" she murmured\n\nJohnny wrapped his arms around her waist, holding her tightly to him.\n\n\"The kinda girl I want to marry one day, one day real soon. I been thinking, way we are, it's just what Miss Cassie calls a 'Place-Holder', something we come back to and sort out one day down the line. I don't want to be in no place-holder with you, Minou; when this nonsense done an' we in the clear, you an' me gonna make this official; I wanna marry you, make babies, live a good long life, an' put all this behin' us, so I guess what I'm tryna say is: Miz Justine, will you marry me?\"\n\nJustine smiled wistfully, her eyes bright.\n\n\"Johnny Bear, you've always been my ideal man; you're my best friend, the best man I know, and the only man I've always loved. Yes, of course I'll marry you, we'll fix this mess we're in, and then we'll have the best damned wedding these parts have ever seen!\" \n\nJohnny nibbled her ear, and gently squeezed, then patted both of her butt-cheeks.\n\n\"Now that settled, you-all need to get offa me, I got to be up an' on lookout in few hours, an' I'm bushed. Sleepytime, Minou!\"\n\nJustine chuckled and slid off him, so Johnny spooned her against him with his arm around her waist.\n\n*\n\nJohnny woke with a start, aware that it was full daylight. He cursed softly and slid out of the bedroll as quietly as possible so as to not disturb the sleeping girl next to him. He pulled on his pants and crawled out of the makeshift tent, to see M\u00e9lette brewing coffee in the fire, and the smell of frying bacon made his stomach rumble.\n\n\"Mellie, Mel!\" he whisper-shouted, \"Whyn't you wake me, baby-girl? How long you been on lookout?\"\n\nM\u00e9lette grinned and flipped the bacon in the skillet.\n\n\"John-boy, I had me a good eight hours, while you an' Odie took your turns, time I got woke I was fully rested, an' I thought you, Justine, Odie, you-all looked like you needed a good night's sleep, so I let you be; don' worry 'bout me, I'm good an' rested.\"\n\nJohnny shook his head.\n\n\"You still shoulda called me, fair's fair, baby-girl...\"\n\nM\u00e9lette grinned as she slid the bacon onto a small aluminum plate and dropped some more in the hot grease.\n\n\"Husha Johnny, I'm good. Now you-all want some breakfast? There's coffee, an' hard-tack fried in bacon grease coolin' on that rock, it still hot, so go easy. Eat-up boy, you mus' be hungry, night you had!\" \n\nJohnny gaped at her knowing grin.\n\n\"Close your mouth, boy, you catchin' flies, or what?\"\n\n\"How...?\" he managed, and M\u00e9lette gave him a sly grin.\n\n\"Odie tole me, an I heard 'nuff my own self; this a small campsite, boy, word git aroun'!\"\n\n*\n\nTheir trek took the full eight days Johnny had predicted. The pirogues the girls kept at Lake Palourde for their hunting and fishing business were still there, and they wasted no time in loading up and setting off. Justine sat dreamily watching the lake as Johnny poled them across, sticking to the shoreline shallows as they headed for the mouth of the Atchafalaya River. She'd never been more relaxed, this gentle progress so soporific, almost idyllic, while the motion of the flat-bottomed craft lulled her, and almost without thinking she went to trail her hand in the calm water.\n\n\"Justy! No!\" barked Johnny, startling her out of her semi-trance state. Justine jerked upright, causing the pirogue to wallow. Johnny kept his balance easily, years of using the craft had made handling them almost instinctual with him.\n\n\"Don' put your han's in the water, baby-girl; looka there!\"\n\nJustine looked where he indicated, seeing a few ripples, but nothing unusual.\n\n\"What am I looking for, Johnny-Bear?\" she asked, puzzled at his reaction.\n\nJohnny continued to scan the water.\n\n\"That there's a big ole bull-gator, been following us since we set out, an' he ain't th' only one; this waterway full a' them things, they thicker'n ticks on a brush-hog in here, an' trailin' your han' in the water jus' askin' for trouble. Keep your han's inboard, honey, han's, feet, everythin'; don' even let your shirt trail in the water, one a them things grab ahold o' your shirt and take it down, you goin' with it, and it gonna be 'adios muchacho', so be careful!\" \n\nJustine stared wide-eyed at him, and Johnny tried to hide his grin at the sight of her trying to make herself as small as possible dead-center in the craft, huddling as far from the gunwales as she could get. Justine caught his expression, and smiled winsomely at him.\n\n\"You'd save me, wouldn't you, Big Bear?\" she simpered, trying to look like a helpless, wide-eyed girly-girl. Johnny wasn't fooled for one second.\n\n\"I'd surely try, Minou, but I ain't Tarzan, an' I sure ain't no Crocodile Dundee, an' I rather keep you safe in the boat than try wrassle one o' them damned things, so you be careful, Honey-Chile!\" \n\nOnce they reached the far shore of Lake Palourde, and beached the pirogues at the small landing-stage there, they transferred to an altogether more substantial river craft, an Apreamare Smeraldo 9 cruiser. Johnny whistled when he saw the sleek river cruiser.\n\n\"Damn, baby-girls, where you get boat like this from?\"\n\nM\u00e9lette smiled at his reaction.\n\n\"We got her as a salvage at damage auction; after 'Sandy' finish with her, she all stove in and stuck prow-first under the jetty. Owner got his insurance on her, an' we pick her up for five thousand dollars, keel was clean an' strong, just the sides stove in, an' noncle Lubin, Jean-No\u00ebl, an' Pop Richeleaux fix her up an' get her certified again for us. She a sweet handler, fit us four an' gear no problem, there's even a stateroom so you an' Justy git a little privacy. You-all get seasick Justy? Reason I ask, the Bayou Chene channel get kinda choppy this time a year, no proper pilot channel cleared there, so we liable to get a mite shook about, you handle that?\" \n\nJustine shook her head. \n\n\"I'll be fine, let's just get our gear aboard and get out of here, I don't like this place, there's something wrong here...\"\n\nOd\u00e9lie cocked her head curiously at Justine, her eyebrow raised in query.\n\n\"You feelin' it too, hun? Damn, you gettin' good at this. Li'l Jean, I got a bad feelin' too, an' where Pop Richeleaux? He should be right here, where he at? Somethin' ain't right; watch my back, I mo take a look aroun', an' Mellie, you an' Justine get the gear stowed, I think mebbe we need to get outta here real soon...\"\n\nM\u00e9lette clambered onto the moored boat and stared; the awning was still furled back, and so the small fly-bridge and prow were covered in sticky sap from an overhanging tree, and littered with leaves and wind-blown debris. The same dripping sap had also stained and streaked the forward cowling and windscreen, and coated the custom sport-rod harness rails, superstructure, and brightwork with a sticky layer of tree sap mixed with trapped bugs.\n\n\"Odie, what happen here? Pop Richeleaux usually keep it so clean, why he stop?\" murmured M\u00e9lette.\n\n\"I wuz jes' thinkin' same thing, baby; where he gone, an' why? You stay with Justine, an' stay out of sight; Li'l Jean an' me poke aroun' some, somethin' bad wrong here, we need to find out whut; you keep this handy.\"\n\nShe handed M\u00e9lette a Beretta 9 mm, and grinned at the girl's questioning look.\n\n\"Got it offa that gunnie I shot down to noncle Lubin's place; reckoned he warn't gonna need it, him bein' dead an' all. I stripped an' cleaned it, she good to go; anyone show up ain't me nor Li'l Jean, you-all take no chances, these people mean business, so do we, got that?\" \n\nThe little blonde nodded grimly, shoving the handgun in her waistband and urging Justine down into the forward compartment and away from prying eyes, while she scanned the surrounding terrain.\n\nOd\u00e9lie jumped back onto the landing-stage and ported her rifle, jerking her head at Johnny to tell him they were going to look around. She was afraid she was going to find what she was looking for, and sure enough, before they'd gone more than a few yards into the verdant foliage, her nose was assailed by a sickly, rotten smell, the ripe stench of decay and corruption. Johnny had caught it too, and now they also heard the buzzing of flies, lots of flies, clouds of flies.\n\nJohnny pushed through between two Honeysuckle bushes, and there, tied on the ground, was the small, wiry body of a very old man. He'd been shot in the back of the head, and most of his face was missing, but Johnny couldn't help but see how cruelly the plastic ties had bitten into his frail wrists and ankles, the circular burn marks from either a cigarette or cigar dotting his torso, and the huge, ugly bruises on his thin ribcage, the marks of fists and boot-soles clearly visible. He tried to shield Od\u00e9lie from the sight, but it was too late. She gasped in horror, and spun around, her fist in her mouth to hold back the howl of anguish at the sight of what had been done to a helpless old man, what his attackers had put him through.\n\nOd\u00e9lie hugged Johnny's arm like a drowning man holds a lifebelt, clinging to him like she never meant to let go, while angry tears coursed down her cheeks.\n\n\"Why they do this, Jean-boy, he jes' a harmless ole man, he help anyone ask for it, he do anythin' for anyone, why they got to do him like this? He ain't never hurt no-one his entire life, he jes' work here, help out, clean an' patch-up boats, sell bait, nuthin' to get killed over; all he do is be here an' be helpful, he don' know nuthin 'bout nuthin' an' they do...this to him? I swear Jean-Basti\u00e8nne, God is my witness, I find them, I gon' kill them for this, but first I gon' make them bleed an' scream; they gon' pay for whut they done here; no-one need to die like this, not fer nuthin'!\"\n\n*\n\nInterlude:\n\nEven as Odie and Johnny were staring aghast at a scene of torture and cowardly murder, a conversation was taking place on a deserted stretch of dusty blacktop about ten miles west of Elida, New Mexico, almost a thousand miles west of them, that would have far-reaching implications for both Johnny and Justine.\n\n*\n\nGina Machado aka Gina March (and various other aliases) was sitting in a dusty old LeBaron off the side of the road with a map of New Mexico spread open before her, trying to look like she was checking their route, although she already knew where she was going and what she was going to do; Carlo was oblivious, as usual, preferring instead to whine and complain, and she was trying her hardest to sound like the sweet little woman he believed her to be; it was a difficult acting job; her patience with the fat idiot was stretched to breaking point, and she was sick of biting back what she really wanted to say.\n\n\"Why are we out here in the middle of nowhere, Gina?\" he snivelled, \"we could have flown in to Las Vegas, hit the tables, found a place, and we'd be set; why are we here? It's so hot!\"\n\nGina's lip curled (behind his back, through; no sense tipping the fat loser off just yet...) but she now fully understood why Justine had loathed him so; she'd explained a thousand times why they'd had to take such a roundabout route to get where they were headed, but her voice was calm, placating, none of her anger and contempt coloring her words when she spoke, once more going over what should have been engraved in his brain by now.\n\n\"I told you, honey; if they're looking for us, the airports are the first place they'll check; those places have cameras everywhere, supposing Justine and her brother have filed charges, do you really want to get picked up now, when we're so close? Just a little longer, baby, I promise...\"\n\nMollified, Carlo subsided; Gina loved him, she was taking care of him, she was looking after his best interests, and all was well in his world. How could he know Gina had her own reasons, some very sinister reasons indeed, for bringing him on this long, meandering trek through the deserted badlands of the sun-baked south-west? \n\nWith Carlo settled and unsuspecting, Gina made an excuse to go around to the trunk of the nondescript old beater, and, with the trunk-lid up, hiding her from Carlo's sight, she poked a bobby-pin into the tire valve on the left rear tire, watching the tire settle as it deflated. When it was down enough, she slammed the trunk, and, in a voice dripping with phony concern, called out:\n\n\"Honey? We got a flat; come help me find that foot-pump thing an' get it connected so we can at least get into town and get a new tire.\"\n\nGrumbling at being disturbed, Carlo climbed out of the car and shambled round to the rear to inspect the flat. \n\n\"Where's the pump, baby?\" he whined, and Gina, pretending to examine the tire, said \"I think it's somewhere in back of the trunk, I'm sure I saw one in there.\"\n\nWith much bad grace, Carlo leaned over the lip of the trunk, shoving stuff around ineffectually as he searched for the foot-pump. His constant muttering and grumbling completely drowned out the soft 'snick' as Gina cocked the slide of the wicked little nickel-plated .25 caliber Baby Browning pocket pistol he knew nothing about.",
        "Gina waited until his attention was fully fixed on rummaging through their stuff piled in the trunk, whining and complaining continually as he searched, before closing in behind him and taking careful aim at the back of his head. Perhaps some sixth-sense, some instinct of self-preservation finally kicked in, but even as he began to turn his head, Gina fired, squeezing off three rounds, one each in the back of his head, at the base of his neck, and between his shoulder-blades. Carlo never felt a thing as his lifeless body pitched heavily forward into the trunk, to lie motionless, half in and half out of the trunk, which suited her fine; if she'd shot him in the car, or even by the roadside she'd never have got his bulk into the trunk unaided; now, all she had to do was swing his legs over the trunk lip, cover the body with the blanket she'd bought for that very purpose, and close the trunk.\n\nGina smiled happily; that pointless fat fuck was out of the way, his wife and her hick brother didn't know her and couldn't identify her, and she had two hundred grand to spend as she pleased, with no Carlo to claim it and throw it around like he'd been planning on doing. Life was good; she had the money, she was free and clear, and best of all, no more Carlo and his pudgy, sweaty hands pawing at her.\n\n*\n\nJohnny called Sheriff Broussard on the untraceable Sat-Phone to get whoever had jurisdiction up there, and arrange for the body to be collected and any next-of-kin to be notified. That done, he reverentially wrapped the body in a tarp and carefully carried it to the shack the old man had lived in, and laid him gently on his bed, securely fastening the door to prevent scavengers disturbing the remains; leaving the body where it was found was the correct thing to do, but protecting the old man's mortal remains from scavengers was the right thing to do, in Johnny's mind, not leaving it out like random roadkill. A shocked and outraged M\u00e9lette was all for trailing and killing whoever had done it, but Od\u00e9lie reminded her they had a rendezvous to make, and most likely the killers would show up there in due course, and then they could hand them some bayou justice for what they'd done to a helpless old man. M\u00e9lette gave in with bad grace, seeing the sense of her words, but promising herself the man who'd done it was going to die the way he'd made that poor old man die; screaming in agony and begging for mercy.\n\nJustine was silent, pale and shocked at the turn of events; so far this odyssey of hers had been a big adventure spiced with a little danger, bad guys getting their just deserts, and a certain amount of fun and games; now it was real; innocent people were being killed over her, and it jarred her in a way nothing and no-one ever had before. Johnny saw her withdrawing, guilt and horror plainly written on her face, already blaming herself for what had happened, and he gathered her in, along with Od\u00e9lie and M\u00e9lette, hugging the three girls, letting them cry out their horror, grief and anger. Justine cried for what she'd caused, for what that poor man had gone through, and the sudden understanding that more was yet to come, and it was all because of her\n\n\" Husha, now, y'all be still, we gonna fix this, we gon' fin' them paralanguas done this an' we gon' take somep'n back for what they done here, you got my word; I swear on my mama's heart we gon' make them pay, so y'all hush now, we gotta leave this place now, an' when we catch up wi' them there gon' be a reckonin', I promise you; you-all my baby-girls an' I never oncet lie to y'all, so you better believe it!\" crooned Johnny, swaying as he rocked the three girls. His voice was soothing, calm, but Justine could feel the deep rage bubbling inside him; what had happened here, the senseless, cowardly way it had been done, had angered him almost beyond bearing, and his promise to give a reckoning for what had been done was no idle threat, she knew him too well to believe that for a single second. \n\nFor a heartbeat Justine found herself pitying the men who'd done this, because when her Johnny-Bear caught up with them they were going to pay with their lives; forget the law, this was a true blood-feud now, and she knew, from what Johnny had told her, the law of the feud was simple; you get back what you dish out, you repay an eye for an eye, a tooth for a tooth, a life for a life, old-school, pure and simple. Johnny had promised it, and she knew vengeance and retribution was going to happen. \n\n*\n\nThe trip up the Atchafalaya River Bayou Chene branch was everything Johnny had said it would be. The normally sluggish, slow-moving bayou was deceptively swift and choppy, swollen from recent heavy rains further up the watershed, the tricky, swirling currents and eddies would have swamped a pirogue in seconds; it took all of Johnny's skill and watercraft savvy to keep them making headway against the current that first day, finally mooring-up for the night under a thick canopy of foliage in a deep little inlet out of the main current. Johnny had jumped ashore and tied-up to a sturdy tree bankside of the eroded, crumbling levee, then started to build a fire, while M\u00e9lette had taken her bow, quiver, and a reel of high-tensile fishing line and slipped off into the gathering gloom of the forest canopy. \n\nJohnny had a nice blaze going in a depression shielded with flat stones, all but invisible from just a few yards away, when she returned with a pair of fat catfish, and a brace of rabbits, which she and Od\u00e9lie began skinning and dressing while Johnny gutted, skinned, and filleted the fish. Justine kept watch with M\u00e9lette's Remington ready, her ears and habits now attuned to the normal night noises. Johnny grinned to see her looking so competent and vigilant, completely at-ease with the long-gun, and a far cry from the city-girl who'd started out on this trek just days earlier. Justine caught him watching her, and so she smirked naughtily and licked her lips suggestively, making him grin and duck his head to hide his smile from the other two girls. \n\nAfter their meal of fried fish and roasted rabbit, followed by a dessert of California raisins, dried apricots, and a juice-box, they got ready for bed. Johnny tried to claim first watch, but Od\u00e9lie overrode him.\n\n\"Li'l Jean, you'all spent mos' all day at that wheel, I reckon you need what rest you got comin'; me 'n' Mellie gon' bed down a li'l way out, it too close in that cruiser, an' I wanna be out an' about in case someone decide to come sneakin' up. You look bushed, pair o' you get some sleep in the for'ard stateroom, Mellie an' me be fine out here. Go on now.\" \n\nJustine didn't object too loudly; most of the stateroom was actually a bed, and after days on the ground she was feeling the need for a mattress. Johnny looked doubtful, but M\u00e9lette kissed his cheek and swatted his butt. \n\n\"Go on, now, we sleep out six days outta seven, this where we live, you 'n' Justy go get some proper rest, we be fine.\"\n\n*\n\nAnd so the pattern for their journey up the Bayou Chene loop of the Atchafalaya River was set; during the day, they made as good time as they could against the current, moored-up at night in a sheltered creek or inlet for the night, and rotated the watch so it didn't fall to just one or two people, Johnny made sure of that. \n\nJustine's first solo watch was a creepy, eerie experience. The silence of their mooring site was at first almost deafening, with just the occasional splash of a fish or 'plop!' of a frog leaping into the shallows to startle her, and the reasonably well preserved levee was still high enough to limit her line of sight and give her the creeps over whatever imaginary swamp-creatures like the ones Johnny had told her of when she was younger were peering at her over it, but then she began to tune into the ambience, to realize what she was hearing. She wondered at the almost subliminal background sibilance of the wildlife, the soft cheeping, burping, and clucking of frogs, the rustling of small animals moving through the undergrowth, the constant, low-level white noise of millions of stridulating crickets away somewhere in the swampy woods, and the buzzing of countless of insects going about their lives. When it all began to make itself felt, she marvelled that she'd actually thought they were moving through a sterile, soundless, lifeless landscape; on the contrary, they were surrounded by busy life living on the very edge of hearing. \n\nJustine was beginning to feel once more that this part of their journey was almost idyllic, that they were in the clear, when it all came to an abrupt halt. Three days after they'd set out from Lake Palourde, and one day out from the Basin Bridge rendezvous, just after dawn, as they were preparing to cast off, Johnny froze, as did M\u00e9lette. When Justine would have asked what the problem was, Od\u00e9lie clamped a hand gently around her mouth.\n\n\"Sshh, don' say nothin', an' don' move; someone up ahead!\" she whispered almost inaudibly in her ear.\n\nJohnny and M\u00e9lette were both casting around, like hounds on the trail, then M\u00e9lette grabbed his arm and pointed slightly West of North, holding up two fingers. Johnny nodded, and gently, but firmly, pushed the girl behind him. He looked up at the two girls in the boat and made a patting gesture.\n\n\"You pair, get down real silent, like; someone's on the trail ahead of us, least two of 'em, mebbe two hundred yards up that way, I mo take a look,\" he whispered. \"Mel, you-all come with me an' keep me covered, Odie, you an' Justy stay back, stay down, an' cover us both; you still got that handgun, baby?\"\n\nJustine nodded, her face pale but set, and Johnny smiled tightly.\n\n\"Remember, if you gonna fire, point it away from you, safety off an' cock it, you know how, then put yo' finger on the trigger on'y when you ready to fire; that gun got a real light set-trigger, jes' hold it tight, point yo' han' an' squeeze, don' yank, the trigger.\"\n\nJustine nodded again, flashing him a quick smile, and Johnny nodded approvingly, before cat-footing along the bank, keeping to the underbrush and out of sight as much as possible. M\u00e9lette flitted through the trees behind and to one side of him, covering him with an arrow nocked and ready.\n\n*\n\nJohnny and his shadow threaded through the trees, keeping to cover as much as possible, following the faint scent of cigarette smoke that had alerted them both. Two hundred yards or so along the bank, they both stopped dead, crouching in the cover of a clump of lilac bushes, watching the two men squabbling on the river bank.\n\n\"I dunno, they said lay-up by the bridge 'case they tried to cross, you see a bridge around here anywhere?\" grumbled one, a tall African-American man in jungle camo fatigues with what looked like a standard, military-issue M4 carbine with a 3-D sight and a Glock 26 compact in a MOLLE tactical holster. The other man, sitting on a stump with what looked like a Ruger Hawkeye Compact hunting rifle with a sniper scope held carelessly across his lap and a cigarette between his lips, grinned at his companion, his mirror shades flashing blankly in the morning sun.\n\n\"GPS says this is the Atchafalaya River, Mac, but look here; the map shows it splitting down at some place called 'Bayou Chene' south of here; I think we're on the Bayou Chene branch, not the main river channel, that's where the bridge is. You wanna head north an' lay-up on the main channel, near the bridge itself? Scuttlebutt says they're heading that way anyway, we should wait for them this side of the bridge in case they try to do an end-run around the teams watching the pilot channel; gotta be worth a shot, that's a million-dollar bonus on top of what we're already gettin' paid.\"\n\nMac smiled nastily.\n\n\"Maybe we should; that girl they say headin' this way supposed to be a real looker; might be able to have a little fun with her once the big bastard's out of the way!\"\n\nHis companion shook his head sadly.\n\n\"You lay a finger on that chick and Joao Ribeiro's gonna cut our dicks off an' hammer them up our asses; he's a crazy, sick fuck, he wants her intact, not you all over her, and I'm gonna make sure that happens, you getting this? That ole geezer said there was prolly two gals travellin' now with Bastine, there was a picture of them in his shack, they look like they'd be worth grabbin', so if they're along, you an' me can have some fun with them, but the gal with Bastine is strictly outta bounds, got that? You touch her, I'll shoot you myself, I ain't about to tangle with the Ribeiro brothers; keep it in your pants, or take it out on them two other gals, whatever, long as you keep your hands off of the one Joao wants. Far as I'm concerned, we get what we came here for, get our money, an' wait for the next job; there's enough pussy in Baton Rouge to drain your balls properly, wait 'til then!\"\n\nMac licked his lips.\n\n\"That blonde one looked real sweet an' tasty; the old man was real reluctant to tell us who they were, but he squealed in the end, I made sure of that; damn, that was fun! If those two gals are along, we're gonna have all kinds of fun with them, know what I mean? Yessir, they're some pretty little gals, I hear tell these Cajun gals know tricks make porn-stars look like beginners, it'd be almost a shame to kill 'em after, seems like such a waste!\"\n\nJohnny saw the murderous rage at the big man's words rising in his cousin's eyes; those two had tortured and murdered that defenceless old man, and now they were laughing about it, and their deaths were in her eyes. He held her arm and caught her eye, staring levelly into her eyes until the rage died away, and sanity returned. She quickly squeezed his hand to show she was back together again, and nodded when Johnny pointed at Mac, calm and collected, once again the consummate huntress, and carefully lined up her shot on the big man in the camo gear; he was the most obvious target; with the automatic rifle, he was the most dangerous of the two, and he was gloating over what they'd done, and what he was going to do to her when he grabbed her. \n\nAs far as she was concerned, he was less than the vermin underfoot, the world didn't need trash like him, and he was going to die like vermin he was, but her anger never translated to her hands, the lethal compound bow remained stock-still in her hands, the heavy, razor-sharp broad-head hunting arrow pointed unerringly at her target. His companion had a bolt-action single-shot carbine, it would take him time to bring it up, aim, and fire, so Johnny was going to take him out while M\u00e9lette took out Mac. \n\nMoving stealthily through the undergrowth, silent as though they were stalking deer, they moved up to maybe ten yards from the two men, easily close enough to take them both out. Johnny's original plan was to launch himself at the man with the Ruger, but as he looked down to check his footing he saw on the ground a large round rock about the size of a softball, rounded and smoothed by years of grinding along the channel bed before flooding had tossed in onto the bank, polished into a smooth, hand-fitting shape, with enough heft to make it lethal in the right hands. He glanced at M\u00e9lette, nodded at her to indicate what he was doing, seeing her sudden understanding of his intent, and slowly fitted his hand around the rock, turning and turning it in his hand until he was sure of his grip. They waited until both men were looking away, then, on his signal, M\u00e9lette stood and released all in one fluid movement beautiful to behold, skilled and deadly as some pagan Goddess of the hunt, all her anger and thirst for revenge concentrated in her lethally accurate aim even as Johnny stood and threw the river-stone as hard as he could. \n\nMac died without a sound; the heavy arrow slammed into his head with incredible force, through one temple and bursting out through the other, while his companion didn't even have time to gape before the heavy rock crashed into his forehead. Johnny and his cousins had been hunting small game with slingshots and cast stones since they were small boys, and his aim was as deadly as ever; the man with the mirror shades never even knew what hit him, and he dropped without a sound, dead before he hit the ground, his skull staved-in by the crushing impact. \n\nJohnny was the first to move, taking a step towards the two dead men before he realized M\u00e9lette hadn't moved, she stood still as a statue, her bow still held outstretched, and her arm and hand still motionless after releasing the bow string. Johnny looked curiously at her, at her set features and almost deathly pallor, with only her deep breathing to show she was even alive.\n\n\"Baby-Girl, come help me, we got to strip these jackals an' dump them in the bayou. Mellie! Whut's wrong, Baby-Girl?\"\n\nM\u00e9lette started at his words, stared blankly at him, and dropped her bow as she unsheathed her massive Bowie knife with a steely slither.\n\n\"Whut you-all doing, li'l gal?\" murmured Johnny, and froze at the expression on her face, at the fury burning in her eyes.\n\n\"Leave me be, Li'l Jean, I got unfinished business here; you-all go on back to th'others, I mo gut me a brace o' shit-hawgs! I said leave me be, now, jes' git outta here!\"\n\nJohnny slowly shook his head, barring her way when she would have headed towards the two dead men. M\u00e9lette tried to push past him, but his arm around her held her immobile. \n\n\"Lemme go, they gotta pay for what they done, you said there gon' be a reckonin', well here I am! They animals, an' I gonna gut them like the animals they are, so git outta my way; NOW!\"\n\nJohnny wrapped his arms around her as she tried to escape him, the Bowie knife falling to the ground as she struggled.\n\n\"You ain't gonna do that, Li'l gal, I won't let you; how you gonna make them pay, Baby-Girl? They dead, they already paid the price for what they done; the book say 'take an eye for an eye', we took two lives for one, seems like justice been done; desecratin' their bodies do nothin' but make you no better than them. Don' let the Devil have his way, Baby-Girl, you better'n that. Listen to me, baby! We done what was needful, let the bayou have them; I ain't gonna waste no time givin' them no Christian burial, they ain't got the right; the darkness already got them, they in Hell now for what they done, let the water take them an' that be an end to it.\"\n\nM\u00e9lette stared at him for long seconds, before she sagged against him, and two large tears ran down her cheeks. Johnny hugged her as she sobbed, rocking her and making soothing little noises the way he used to when she was a little girl and the blues came on her. When he sensed the storm had passed, he took her face gently between his hands and looked into her eyes, breathing a sigh of relief that all sign of her killing fury had gone, and only remorse remained.\n\n\"You-all better now, li'l gal?\" he murmured, thumbing dry her wet cheeks the way he used to when she was little, the memory making her smile for an instant, before her face darkened again.\n\n\"Li'l Jean, what have I done? Oh God, I killed a man, I stood there an' I murdered a man in cold blood, what am I gonna do, help me, qu'est-ce que je fait? qu'est-ce que je fai' maint'nant, je suis un tueur, Jean-Basti\u00e8nne, j'ai tu\u00e9 un homme, oh mon dieu, mon dieu! (What have I done? What do I do now, I'm a killer, Jean-Basti\u00e8nne, I killed a man, oh my God, my God!\")\n\nJohnny held the girl tightly as she shook uncontrollably, calming her as the enormity of what she'd just done hit home; she'd taken a life, a human life, it was a mortal sin, she'd taken everything from a man, even any chance of atonement, and it terrified and horrified her. Johnny saw what was happening right away; her Catholic upbringing had come out, and along with the horror and self-loathing came an equal burden of guilt; this was real, it wasn't an exciting jaunt upriver, outwitting the people hunting them, it was no game of bluff and deception anymore, people had died, likely more were going to, and she'd been a willing part of it, a killer, she'd killed a man out of anger and thirst for revenge, no matter that it was needful; now she was paying for her anger and vengeance.",
        "Johnny let her cry and get it out of her system; he remembered the first time, when, as a deputy, he'd had to shoot to kill, he remembered and relived the sick horror and self-loathing at what he'd done, and he could empathize completely with what the little blonde was going through. So he held her close and rocked her as she cried, waiting until the sounds of her crying died away and the trembling ceased. \n\nJohnny held her away from him, and brushed a curl of bright blonde hair off her face so he could look her in the eye. M\u00e9lette stared apprehensively at him, perhaps waiting for him to condemn her for what she'd done, but he just smiled at her and brushed her hair back again.\n\n\"It okay to grieve Baby-Girl; takin' a life's always gonna be a difficult thing to face up to; fust time I had to do it I was sick to my stomach; no matter that I had to do it to save innocent lives, it was still the hardest thing I ever did do in my entire life; Internal Affairs cleared me of any wrongdoing, they said it was justified, but that still din't stop me sittin' in church for hours, for the first time in years, askin' God to forgive me for what I done; takin' a life ain't to be taken lightly, I had to learn that the hard way, now you done learned it too.\"\n\n\"But Odie...\" she began, but Johnny silenced her with a finger on her lip. \n\n\"Odie different to you, baby-girl, what all she feel about killin' that gunny back to Noncle Lubin's place only she know for sure, but I for sure know one thing 'bout her; she was defendin' her family, an' in her mind she know was in the right, so she ain't lettin' it trouble her. Them two scum we killed din't care 'bout no sanctity of human life, they got less honor an' sense o' fair play than you gon' find in a back-alley dog-fight, an' they give no quarter; they kill for money, you seen what they did to that pore ole' man, an' you heard what they plannin' on doin' to you an' Odie, an' if not you, then some other gal gonna be the one they do that to; they fixin' to go to Hell for bein' what they are, you an' me, well, we jes' show them the way.\"\n\nHe took her hands in his and laced his fingers with hers, the way he would when she was small, just one more reminder of how long he'd been in her life and who he was to her. \n\n\"Yeah we killed 'em, an' I dunno for sure how right or wrong we are, but I do know it mean my baby-girls safer for it, an' right now that make it right with me; we made the world a safer place now them two ain't in it, and I'm feelin' it needed to be done; tell yo'self that an' maybe it make it a little better. Now you set here while I strip their weapons an' dump the bodies, turn away you have to, say what you think you need to, I be done in a few minutes, an' we get back to th' others.\" \n\nM\u00e9lette sat huddled on the bank, her back turned to where the two bodies lay, staring resolutely ahead, and squeezing her eyes tight shut when the sound of a double splash told her Johnny had gotten rid of the two bodies. Even as she turned, she saw several V-shaped ripples in the surface of the bayou arrowing towards the bank. Johnny held Max's M4 carbine by the barrel and swung it out in a high arc, tossing it right into the deepest part of the channel. He made as if to do the same with the Ruger, but changed his mind, instead working the bolt to ensure the breech was empty, then disengaging it to peer down the barrel with his thumb in the breech.\n\n\"This a good gun, good an' clean, looks new, prolly never even been used; might come in useful we need more firepower; lessee whether Odie want this'n too.\" \n\nJohnny stuffed Mac's Glock and a Beretta M9 he'd found when he'd searched the other man, both new-looking and, like the Ruger, probably never fired, and a stack of clips and a box of Winchester .308 hulls into his pack, settled his pack across his shoulder and picked up the rifle. M\u00e9lette picked up her bow and hunting arrow, now cleaned and dried, and nodded when looked enquiringly at her.\n\n\"OK, Baby-Girl, let's git outta here, we got a rendezvous up the bayou, an day's getting' on'; you ready to move on out, honey?\" \n\n*\n\nWhen they arrived back at the boat, Justine jumped off onto the bank and ran to Johnny, hugging him, before drawing back and looking from him to M\u00e9lette and back again.\n\n\"What, what happened?\" she asked apprehensively, taking in the girl's drawn expression and red, swollen eyes. Od\u00e9lie joined them, cupping her sister's face and looking worriedly into her eyes.\n\n\"Whut's wrong, Honey, whut happen 'long there, why you bin cryin'?\"\n\nM\u00e9lette stared for one long, silent moment, then her face crumpled as she burst into tears, and Od\u00e9lie hugged her, looking worriedly at Johnny. Johnny put his arm around her, hugging all three girls, and pulling Od\u00e9lie closer so he could murmur in her ear.\n\n\"There was...people waitin' on us up along the bank there, two fellers, they the pair killed ole man Richeleaux, I killed one them assholes, Mellie got th'other 'un, she put a arrow through his haid; it was needful, they was laughin' 'bout what they done, an' plannin' what they gonna do to you girls. She done the right thing, but I guess she ain't seein' it that way right now. You take her below, Odie, she need you right now, me 'n' Justy cast off and set out. Go on now.\"\n\nThe rest of the day was passed in silence; Johnny seemed to be almost in a reverie, basically not there at all, and apparently unaware of Justine's presence. For her part, Justine passed the day with just the thrum of the motors, the thresh of the propellers, and the slap of water against the hull to keep her company; she was bursting to know what had happened, but she knew her Johnny's expressions and moods too well to try and press him; when he wanted to share, he would; until then, he'd hold his mouth and keep his peace, and she'd just have to live with it until he felt like sharing. \n\nAs evening started to shade the water and cloak the banks in shadow, Johnny roused from the almost zen-like trance he'd been in all day; even the sandwich Justine had made him for lunch was eaten almost on autopilot, but when he shook himself and grinned at her, he almost appeared to be himself again. \n\nJustine chose not to say anything; tying-up, getting the camp set up, and checking on the two girls occupied her, while Johnny kept watch and scanned the banks ahead and around them, but once housekeeping had been attended to, and everyone had been fed from their dry rations, Justine waited while Od\u00e9lie and M\u00e9lette set-up their bedrolls and retired until their watch. That left Johnny and Justine staring morosely at the fire, each lost in their own thoughts, until finally it was too much for Justine.\n\nJohnny started when he felt Justine's hand on his arm, followed by a fleeting smile before he went back to staring into the fire.\n\n\"Big-Bear, what happened out there? I know Mel's upset, but why? What's going on?\" she whispered.\n\nJohnny leaned back, pulling Justine closer so he could put his arm around her, sighing deeply as he did so.\n\n\"I killed 'nother man today, Minou; he was holdin' a gun, an' talking 'bout what he an' his buddy done, but he still never seen me kill him; we 'sposed to be the good guys here, but you know what? I ain't so sure what is good an' what ain't no more; I said it was needful, but that was mostly for Mel, she in a bad place an' I din't wanna make it worse, but I never gave that man no chance to defend hisself, he never even knew what killed him, and yeah, you can say he deserve to die for what he done, but still ain't my place to go makin' no decision 'bout that. My head say I done the right thing, but if that true, why does my heart say what I done was wrong? You seen how I can get when th' anger take me, don't tell me that the right way to be.\"\n\nJustine noted that he'd slipped into that 'down-home' accent and word use of his, his carefully maintained, neutrally-accented way of speaking deserting him in his distress. \n\nHe sighed, and lapsed into silence. Justine was just about to say something when he started speaking again, his voice low and throbbing with emotion. \n\n\"I 'member when I was boy readin' 'bout them ole time vikings an' how they fight, an' they useta have these warriors get so bloodthirsty they go kill-crazy, din't feel no pain, nothing, they jes' kill an' kill in a mad frenzy, mouths all foamin' and screamin' like banshees; even th' other Vikings shun them because they too crazy to be safe aroun'; goin' berserk, that what they called it, an' that what happen to me: I see red, I go berserk, an' someone get killed, you seen me do it, jes' few days ago, an' two men died, now I done it again today, an' mebbe I gonna do it agin, an' ag in, an' I can't be doin' stuff like that, that not how normal people are. Mebbe I need help, I don' wanna do that ever agin, I feel dirty inside jes' thinkin' I could do that to a man; Minou, I never even give him a chance to make his peace with whoever...\" his voice trailed off into almost a whisper.\n\nJustine pulled his face around to look into his eyes, her heart wringing at the guilt and misery she saw smouldering there.\n\n\"You listen to me, Jean Basti\u00e8nne Deaucette, and you listen good! The men we're running from are killers from the ground-up; they kill because they like it, they get paid for doing it, and because they get paid for it, they keep on doing it, and they sure as Hell don't see anything wrong with it! Your only fault is you look after everyone else, but you don't take care of you; if you have to kill a man it's because you have no other choice, and you do it because you're defending me, Mellie, Odie, your family, and the people you love, not for the love of it, or for twelve pieces of silver, but because it's the right thing to do; nothing wrong with that, Li'l jean, not a damned thing!\" \n\nShe pulled his head up and made him look at her, into her eyes.\n\n\"This is how it is, Jean-Basti\u00e8nne Deaucette; some people are born to do what most of us can't even imagine; some people are made to be protectors, Big Bear, that's their purpose in this life. They protect their families, other people, the weak and the helpless, everyone who needs it, and what they sometimes have to do is part of that. Because they do what they do, they're special, more special than they ever realize, but the best part of them is that they do what they have to do but they don't revel in it, and they especially don't wallow in it and glorify what they do. That's what you are, Johnny; you, and the special few like you, you keep a handle on your humanity and your compassion, everything that makes you who you are, and that's why all those around you love you so much. You're no superman, and God knows, you're no angel, you're just a man, but you're a good man.\" \n\nShe ruffled his hair and smiled, hoping to see him smile back, but his expression stayed somber, his eyes dark and troubled.\n\n\"You were born to keep people safe, and make the world a better, safer place, even if it's only for a short time; you did what you had to, and those you protect and care for know this and love you for it. Don't sell yourself short, Johnny-Bear; you're the best man I ever knew, and I will never let you forget that, ever!\"\n\nShe looked up, into M\u00e9lette's eyes. Johnny twisted around to see what she was looking at behind him, to see M\u00e9lette's pale, drawn, features. The little blonde dropped to her knees to hug Johnny around the waist, and press her face against his back.\n\n\"She right, li'l Jean,\" she murmured, \"Ever' time I need you, you be there for me, you make me an' Odie you baby-girls, you care for us, keep us safe, teach us whut we need to know, an' we ain't never thought you nothin' but the best big brother in the world; I guess I know how you feeling right now, I feelin' it too, but you know what? Fact you feel like that mean you still Li'l Jean, same big brother who teach me swamp fishin' and 'gator hookin', an' tell me stories, an' sing ole songs from the Isle and La Belle France with his ole Bon-Tee, an' stan' in front o' me when maw-maw mad an' lookin' to hand out a lickin', who take it for me an' never say a word 'bout it or go lookin' for evens after; Justy right about you, Li'l Jean; you born to protect people like me, people who mebbe need more than whut they got. The world a better place wi' people like you in it, so I tell you what; you forgive whut I done, an' I forgive you, an' we both let this go an' move on.\"\n\nM\u00e9lette patted his chest, just over his heart, and hugged him even tighter, and when she spoke again, her whole speech pattern had changed, slow and slurred, almost a patois, as she reached back into her and Johnny's childhoods.\n\n\"When I was tryna pass English class so's I could graduate, Miz Boudreau tole me I need learn how writers from other places think, not jes' Hawthorne an' Poe an' Twain an' such, there more to the world than them, so she give books from other writers, people ain't never heard of, tell me read an' learn; coupla French writers, even one o' them English writers, name o' George Orwell, an' one thing he wrote stuck in my mind 'bove all else: 'Good men sleep peaceably in their beds at night only because rough men stand ready to do violence on their behalf.' I forget why he wrote it like that, seem like he makin' a point 'bout allus bein' world out there mos' folks know nuthin' 'bout, but I allus took that to mean people like me be easy an' safe only because there people like you on-guard an' ready to protec' us.\"\n\nShe paused, and patted his chest comfortingly. \n\n\"I don' think you rough man, li'l Jean, but I do know you good man, best I know, an' I thank the good Lord you who you are. You born to be a protector, li'l Jean, even if it feel like your heart breakin' sometimes, an' now finally I kinda know how much it hurt you inside when you do what you gotta do. But still you do it allasame, because it needful, 'cause that who you are, an' we grateful for that. To thine own self be true, Li'l Jean, sump'n else I read somewhere, an' it true, 'cause you cain't be nuthin' else. Think on 't.\" \n\nJohnny sat in silence, his eyes still distant and clouded, but then his quick smile flitted across his face as he patted M\u00e9lette's hands still clasped around his chest.\n\n\"Thank you, baby-girl...\" he whispered. M\u00e9lette gently butted him between his shoulder-blades with her forehead.\n\n\"Don' need to go thankin' me, Li'l Jean, it all true. An' now I think you an' Justy got some time comin', so I think me 'n' Odie go take us a scout-aroun' an' give you two some privacy; don' you-all worry about takin' a turn tonight, me 'n' Odie got that covered, I know you-all got stuff to say an' do, cher grande fr\u00e8re, bes' get to it, y'all hear me now?\"\n\nM\u00e9lette stood and brushed-down her trail-pants, smiling at Justine and patting Johnny just once on his shoulder before heading back to the boat to join her sister. Justine looked long at Johnny, silent but not disapproving, not judging him, just waiting for him to say something that clued her into what he was thinking. Johnny's eyes finally lost that dim, distant look as he focused on her, on her worried expression and wide, compassionate eyes.\n\n\"You not tellin' me whut I need to hear, right, Minou? You bein' truthful in whut you say, Justy? Don' lie to me to save my feelin's none, that worse thing of all, baby, please don' be doin' that!\" he whispered. Justine slid up against him, grinning when his arm slipped around her waist, so she slid astride him and held him close.\n\n\"I will never lie to you, Johnny Bear, you're my big, horny, Johnny-Bear, the only thing I have in this life worth having, so believe me when I say this: nothing's changed; you did what was needful, because you can't stand by and see wrongdoing go unpunished. Think of it this way, baby: the law was written by men, it's a made-up thing, and it has to be rigid, and follow rules that sometimes make no sense, and so sometimes the guilty go free, because all men are supposed to be equal before the law; I heard someone once say better nine guilty men go free than one innocent man suffer, and there's times when that's unfair, and unjust, and it sucks, that sometimes someone we all know is guilty as sin gets off scot-free because of a damned technicality, but that's how it has to be; all men have to be treated equally before the law, otherwise it's the lynch-mob, the hemp rope, and the cottonwood tree.\"\n\nJustine pushed his head up so she was looking directly into his eyes. \n\n\"What's right and needful, though, Johnny, that's entirely different. Sometimes men must do what the law says is wrong because they have to do what they know is right. In the court of your heart there's no jury, no 'twelve good men, and true' to make your decision for you and share your blame, only you, and so you do what you do because your heart says it's right, and you accept the consequences. You, and others like you, will always do the right thing, because you can't do anything else, you were made that way, and that's why I love you.\" \n\nJustine grinned, wriggling on his lap, feeling him stirring under her.\n\n\"Now take me back to that big soft bed in that boat and let me take away the bad feelings; you've got to admit, Big Bear, I'm kinda good at that!\"\n\nJohnny grinned at her suggestion, his eyes once more bright, clear and gray, no lingering sign of the doubt and self-loathing that had dwelt there all the long day.\n\n\"Damn, girl, you ain't wrong 'bout that, that for sure! What you-all wanna do, Minou?\"\n\nJustine licked her lips and smiled naughtily.\n\n\"We-ell, now that you mention, I do have kind of an itch in several places, why don't you see if you can scratch them all, seeing as you're such a big ole stud, and all that...!\"\n\nJohnny beamed back.\n\n\"I thought you'd never ask, baby-girl, guess we better take last watch, looks like we gonna be busy fo' while!\" \n\nJustine led him back to the cruiser, the roll and quiver of her tight little bubble-butt exciting him as he watched her walk. Clambering onto the craft she disappeared down through the narrow steps leading to the forward 'stateroom', actually, the empty space under the foredeck, just large enough to be fitted with a small bed, with a sealed porthole in the 'ceiling' to give natural light in the small space. Johnny glanced over at M\u00e9lette setting up her bedroll for the night near the fire. Od\u00e9lie was just barely visible, partially concealed in the undergrowth as she was, taking first watch. M\u00e9lette looked up and saw him, and Johnny saw her wink, smile, and the shooing gesture she made, so he grinned and followed Justine down the short step-way and into the small cabin. \n\nIn just the short time he'd paused on deck she'd already stripped down to just panties and a cut-off white singlet, and was posing artfully on the barely adequate bed.\n\n\"This what you mean when you say you got a itch fo' me to scratch, Kitty-cat? I sure hope it do, li'l gal, I reckon I'm in a scratchin' kinda mood!\"\n\nJustine grinned at his ridiculous accent and stretched languidly, staring pointedly at the bulge in his pants.\n\n\"Come here, Johnny-Bear, take me to see the elephant!\"\n\nJohnny smiled slowly, whipping off his T-shirt and unlacing his belt. Justine slid over and grabbed the waistband of his jeans.\n\n\"Mine, I think...\" she murmured, popping open his waistband and sliding his zipper down. Johnny drew in a sharp breath as her hand brushed his urgent, straining erection.\n\n\"Much better,\" she grinned, her lip caught between her teeth coquettishly, \"nice to see you haven't forgotten anything I taught you, Swamp-Thing!\" \n\nJohnny went to slide down his shorts, but Justine batted his hands away.\n\n\"Uh-uh-uh, no! Mine! Just you stand there, Jean-Basti\u00e8nne Deaucette, let me take care of this!\"\n\nJohnny's solid erection sprang out as she whipped his shorts down, and she smirked at his groan as she took hold of it.",
        "\"That's nice, baby-boy!\" she murmured, \"This all for me? Why thank you, kind sir!\"\n\nJohnny gasped as she slipped her lips over the swollen, slick head of his cock, her sly, wanton expression priming him for who knows what, but he knew she had something on her mind. As she suckled on him, she gently squeezed and milked his balls, keeping him fully charged.\n\n\"Oh God, yes...\" murmured Johnny, shuddering as Justine rubbed her tongue along the sensitive tip of his cock. \n\nSuddenly, she slipped her spit-sealed lips off his cock with an audible 'pop'.\n\n\"You taste nice, Johnny-Boy, but I bet you feel nicer! Wanna come try and see?\"\n\nJohnny slipped onto the narrow bunk next to her, kissing her even as his hands explored her firm ass, sliding his fingers inside the her panties to squeeze and fondle her buttocks and glide a probing finger over her tight little anus. Justine wriggled her panties of, assisted by Johnny sliding them down. \n\n\"What you want to do, Minou-Minou?\" he whispered.\n\n\"Just fuck me, Johnny, fill me up, baby, make babies in me, make a baby in me tonight, please!\" she begged.\n\nJohnny quit fondling her, instead cupping her face in his hands, a concerned look on his face. \n\n\"Justy, I know you worried, I'm worried too, but I swear on Mama's heart, I will always be by your side. What's really goin' on, Minou? Talk to me, ma petite souce-fleur.\"\n\nJustine looked at him in an agony of impending loss.\n\n\"Baby-girl, talk to me...\" Johnny murmured, tilting Justine's face up to him.\n\nJustine stared in his eyes, and Johnny, looking deeply into hers, saw the fear she was trying to hide.\n\n\"Hey, hey, it's all gonna be OK, you hear me?\" he whispered, \"whatever gonna happen, tomorrow gonna be the end of it, we got mos' the Atchafalaya jus' a-waitin' on us, they thicker'n fleas on a dawg out there, they got Miss Angel's frien's, mos' everyone I know, Lubin know, an' Audhemar know all jes' waitin' for them idjits to make a move, ain't no-one but them douche-nozzles gonna be feelin' any pain, you hear me, Minou-Minou?\"\n\nJustine shook her head, and grabbed Johnny, kissing him hard, urgently, while her hands stroked his face and her fingers combed through his hair.\n\n\"Make a baby in me, Johnny-Bear!\" she hissed, \"Now, right now, give me your baby, then I can let you go and do this thing. I know you have to do this, but first you have to do that one thing for me, then I can let you go. This is how it has to be, Johnny-Bear, so love me now one last time!\"\n\n\"Ain't no la'last-time' 'bout this, Minou,\" he whispered, concern creasing his face, \"I ain't gonna be no hero, I promise you I'll be back afore mornin's out, and yeah, I'll keep my head down, I got too much to lose; didn' I say I had me some marryin' to do?\"\n\nFor once, Justine didn't grin at his overdone, 'down-home' accent, but when she looked at him, her eyes were glowing.\n\n\"Come here and do this for me, before you have to go do what you need to; make it good, Swamp-Thing!\"\n\nJohnny grinned back as he slid up next to her.\n\n\"Any time you're ready, li'l gal...\" he murmured, smiling as she slid her leg over him.\n\nJustine groaned as once more her man slid deep into her, lighting her nerve-endings with those delightful feelings once again. She tightened around him, making him gasp with pleasure, and then quests and revenge and everything else was forgotten as the old, old rhythm took them, and they moved against each other, pleasuring each other as they built to their final crescendo, a maelstrom of heat, and friction, and slippery, sweaty, velvety wetness, warm and wholly encompassing, a fiery heat that took them into that place where once again all that was existed was their joining, their love burning hot and warming them all the way through. \n\nAnd then they slept, sure and secure in their promises to each other, knowing that the end was in sight, and they were already on the first steps of their way back home. \n\n*\n\nThe following morning, twelve days out from their starting point, Johnny finished checking in with Lubin and his cousins waiting near the Basin Bridge crossing, grinned, and heeled the cruiser over to the right bank and tied up to a stout bank-side Jacaranda.\n\n\"OK girls, we less than three mile from the Basin Bridge, time to get ready, we hoofin' it from here on. Gather up your stuff, we got guide waitin' for us up ahead, sure don't wanna be late!\"\n\nJustine cocked an eyebrow at Johnny.\n\n\"Guide? Who?\"\n\nJohnny grinned at her. \n\n\"Ole frien' o' yours, Minou, jes' up ahead a ways, she bin waitin' since sunup. Bright, shiny, happy face, Minou, you gon' like this!\" \n\nThey grabbed their gear and slipped onto the bank, going single file, Johnny leading, then Justine, then M\u00e9lette, with Od\u00e9lie bringing up the rear. They proceeded in this fashion, stepping silently and carefully, keeping under cover, for about two hundred yards, when a soft whistle-hiss stopped them. Johnny grinned and whispered \"You-all can come out, 's jes' us!\"\n\nJustine gasped as Kelly Delano stepped out onto the trail, her grin stretching almost from ear to ear as she blew Johnny a kiss\n\n\"Hey there, Big John!\" she smiled, \"glad to see you made it this far! Uncle Lubin and some friends are waiting just up ahead, you go join them, I'll take it from here!\"\n\nJohnny smiled happily. \n\n\"You sure are a welcome sight, miz Kelly, you clear on what we doin' next?\"\n\nKelly nodded. \"Lubin and the rest of the boys are laid-up just up ahead there. Me and the girls are going up to your cousin Bouvaise's place, I know the way there, and we'll fort-up and wait for you to come tell us it's all over and done. There are supplies and whatnot stashed there, we can hold out 'til you guys come get us, and yeah, I know, don't worry, we'll keep down and keep out of it, I already had the talk from Jean-Martin, Jean-No\u00ebl, Tommy, Lubin, Audhemar, everyone, really, so yeah, we're cool.\"\n\n\"Jes' so's you know, miz Kelly. Really don' want you-all gettin' hurt, not now this almost over an' done! I gotta go now, you gals, you-all listen to miz Kelly, she know whut she doin', this thing about ready to be done one way or 'nother, an' I don' want you-all in the middle of it, so you mind her, you do whut she say, an' I come get you 'fore the day's out, I promise!\" \n\nThe three girls nodded in agreement, Od\u00e9lie and M\u00e9lette wide-eyed and silent in star-struck astonishment at the fact Kelly Delano, THE Kelly Delano, was a part of this, that she was their Li'l Jean's friend, and she was here, with them, bank side on a minor bayou in the middle of nowhere. Kelly grinned at M\u00e9lette and winked. \n\n\"There's a couple of real cuties looking for you, honey, Hecky and Macky D, with Lubin's boys; they were like to come to blows over you, Lubin and Jean-No\u00ebl had to separate them, now I see you I know why!\"\n\nM\u00e9lette looked astonished.\n\n\"Hecky Lafontaine an' Mack Doubilli\u00e9r part o' this too? How that happen?\"\n\nKelly flicked an errant curl off M\u00e9lette's face and smiled.\n\n\"Seems they both reckon you're their girl, and they're along to rescue you! That's just the sweetest thing; I wish I had a pair of beefcake hotties like them fighting over me, I'm so jealous, honey!\" \n\nJustine nudged the girls back to reality, grinning at Kelly's almost invisible wink, and grabbed her pack. Johnny checked Od\u00e9lie's rifle and the Ruger Hawkeye were both fully loaded and the safeties were on, checked Justine's Glock, and pulled her close for a last kiss.\n\n\"You-all stay outta this, OK? Ain't no reason you got to do anythin' 'cept stay down an' wait it out an' be ready if anythin' go down out your way. I gotta finish this now, Minou-Minou, but I be back; it's time to end this nonsense, an' we gon' do jes' that. Jes' keep yo' heads down, stay outta things, an' watch yourselves, got that?\" \n\n\"Hurry back, my Johnny-Bear!\" whispered Justine, smiling bravely, but with her heart in her mouth.\n\n\"Count on it, you an' me got some marryin' to do!\" he grinned. \"Now I really gotta go, love you, City-Girl, you an' Odie, too, Mellie-gal, an' Miz Kelly, you-all be careful too, you hear me? Y'all get goin' now, an' I see you on th' other side!\"\n\nWith that, he slipped back into the dense cover along the bank and was gone. Justine sighed, missing him already, and shrugged her pack more comfortably. Not for one second had she considered telling him don't go, his place was living with her, not dying in some pointless, unwinnable war with organized criminals who never went away, who ultimately always won, no matter was brought to bear against them; telling him that wouldn't work, because she knew he had to do what he thought was the right thing, and right now that was dealing once and for all with the people who threatened their lives and future.\n\nKelly, intuiting what was going through her mind, took her hand.\n\n\"Justine, he'll be back, he promised you he would, and Big John's never broken a promise to anyone; no sleazy little parasite drug-lord is fit to lick his boots, he's like a force of nature, and when they realize what he's capable of, those fucking parasites are gonna shit and die. Just remember this; God forgives, Johnny doesn't, and they're about to find out what happens when you piss him off and threaten his family. I'd ask God to have mercy on their souls, but why bother? Johnny's gonna send them straight to Hell. His whole family are like that; if you're their friend, they'll hold back the tide, or storm the gates of Hell for you, but if you cross them, Hell's the least of your problems. Let's go.\"\n\n*\n\nThe girls moved in single file through the cane brakes, Kelly confidently leading the way, until suddenly they came out of the cane into a sunlit clearing with a still, serene lake reflecting the cloudless sky, and fringed by verdant greenery, flowering Silverbell and Bald Cypress, and riotous masses of fragrantly vivid Honeysuckle mirrored in the glass-smooth water. A sturdy-looking shack built on a jetty reaching into the lake completed the picture of peaceful serenity.\n\n\"Wow, this is so beautiful!\" exclaimed Justine, \"you say this is Johnny's cousin's place? He's so lucky to live here, what a beautiful place!\"\n\nKelly smiled at the black-haired girl and winked at the other two.\n\n\"I'd hold off on that for a minute, Justine, watch this!\"\n\nWith that, she snapped off a dead branch from a hoary old swamp Cottonwood and threw it out into the lake. As it landed in the water, the surface literally boiled as a multitude of snapping heads rolled and tussled for what they hoped was a prey animal. Justine gaped at the sheer ferocity of the animals as the alligators tried to snap the prey from each other. \n\n\"Water's teeming with those things'\" observed Kelly, \"don't get to close to the water's edge, and don't go anywhere alone; come nightfall it's going to be real risky out here, Bouvaise told me they lie up along the banks \"thicker than bristles on a hog's back\", so let's get inside and get set-up before sundown, we need to be locked-down tight.\"\n\nAs the girls shouldered their packs, three men stepped out from behind the massive Cottonwood trees concealing them.\n\n\"Nobody move,\" said the swarthy, handsome man in the center of the trio, pointing his handgun unwaveringly at Kelly. \"Drop your guns minhas pequenas belezas, (my little beauties) please, hands where I can see them, and don't make me use this, because I will. Do it, now!\" \n\nOdie and M\u00e9lette dropped their rifles as Kelly spread her arms, motioning them back a little. Justine stayed rooted to the spot, suddenly aware of the Glock handgun in the back of her waistband, and the huge saber-handled Bowie knives sheathed behind the two girls' backs. As she froze she noticed that, instead of trail boots like hers and the girls', Kelly wore light mid-calf moccasins, split at the toe like Japanese Tabi socks.\n\nThe man with the gun sighed theatrically as he motioned his two companions forward.\n\n\"Such beauty in a place like this, it's so fitting. You three young ladies will come with us, I know there are people who will be very pleased to meet you, so pleased they will pay me much money for the pleasure of your company. But only after me!\" he smirked. \"But not you, Miss Delano, you are too well known, I'm so sorry, but...\"\n\nHe raised the pistol, and Kelly suddenly spun on her heel in a balletic roundhouse kick, slamming into his hand and sending his handgun flying. Kelly caught her balance, quickly adjusted the distance between them, and bowed backwards in a limber, gymnastic crab, her hands contacting the ground even as her feet flicked up in a perfect one-two scissors kick to the man's face, the balls of her feet crashing one after another into his face and knocking him back on his heels as she sprang upright. Before he could recover his balance, she bounded into the air and landed another flying kick to his solar plexus, but this time his body armor caught the full force of her kick and merely staggered him, not winding him as she'd hoped. Quick as lightning his hand reached out and grabbed her arm, yanking her close even as his fist crashed into her jaw. Kelly folded, knocked out by the savage punch.\n\nAs Kelly launched her attack on Joao Ribeiro, his two cronies made a grab for M\u00e9lette and Od\u00e9lie. Both girls whirled out of their grasp like greased eels and, as the men closed with them, both girls' hands flashed behind them, to the huge bowie knives sheathed at their backs. As the goons grabbed for them again, both girls, as though they'd rehearsed it every day of their lives, acting as one, almost reflexively, lunged out in perfectly timed thrusts at the two men, like trained fencers. The man reaching for Od\u00e9lie gurgled as the giant knife angled upward through his open mouth and into his brain, driven there by every ounce of her strength, while the man reaching for M\u00e9lette sank to his knees, a giant gout of blood fountaining from the huge rent slashed in his throat by her razor-sharp knife; she'd chopped out at him so hard his head was nearly severed from his body. \n\nJustine watch all this almost in time-lapse, clicks of static images unreeling; Kelly's attack, dropping as the man punched her, the blinding speed the two girls had reacted with, taking out the threats to their lives almost instinctively. Justine stepped back as Joao Ribeiro to a step towards her, his handsome face twisted with rage, Justine took another step back he advanced another step, and then it happened; she stepped back, missed her footing and landed on her butt, momentarily winded. Joao smirked in triumph, just as Justine remembered the handgun in the back of her pants' waistband. Time slowed to a crawl as she reached behind her, pulled the pistol, lay back, and, just as Johnny had drilled into her, brought it to bear with both hands steadying it, clicked off the safety, and aimed between her raised knees, feet flat on the ground, lining up on Joao, who grinned contemptuously at her.\n\nFor a split second she quailed; could she shoot a man down, even a piece of filth like Joao Ribeiro? Could she kill a man, just like that, just squeeze the trigger and put a bullet in him? And then her resolve hardened; this pig was going to rape her, he was going to kill Johnny and rape her repeatedly, and when he'd raped her enough times he was going to sell her so even more men could rape her. No, this stopped, right here, right now.\n\nJoao smirked at the little girlie trying to get the courage to fire a Glock pop-gun at him; she had spirit, good, he was going to enjoy making her beg for death, but he was going to keep her alive for a very long time; she owed him, he was out here in this hillbilly shit-hole because of her, and he wanted payback. One more step, and as he took it, she fired, at almost point blank range, a rolling thunder of shots as she blew five jacketed hollow-point slugs into him; the first four rocked him, and the vest he was wearing absorbed most of the impact, injuring but not stopping him. Justine's aim altered as she panicked, and the last bullet hit him under the chin, on an upward trajectory from her prone position, and the massive damage hollow-points can inflict at close range was ably demonstrated as the top of his head exploded in a spray of bone fragments, blood, and brain matter. Joao dropped almost at her feet, an expression of utter shock marring his dead features. \n\nJustine let loose the breath she didn't know she'd been holding.\n\n\"Did that hurt, motherfucker?\" she whispered, staring with no pity or remorse at the staring-eyed corpse, before flopping backwards on the ground, to stare unseeing at the sky as the knowledge she'd just killed a man chimed inside her. She thought she was going to fall into the same frame of mind Johnny had the other day down the bayou but she realized she felt nothing except satisfaction that the man who wanted to kill her Johnny was dead, he wasn't going to hurt her, or try and hurt Johnny, or pay someone to hurt Johnny ever again.\n\nA soft curse from Kelly as she clambered shakily to her feet broke Justine out of her reverie. Kelly shook her head to clear it and blinked, staring at the scene of carnage. Blood stained the ground everywhere, and three staring-eyed corpses made liquid murmuring sounds as organs settled and dead lungs vented their dead owners' last breaths. She took in M\u00e9lette and Od\u00e9lie mechanically wiping off their knives, faces blank and eyes unfocused, and Justine flat on her back and her arms flung out, pistol in hand, staring at the sky. She stared for long seconds at Joao Ribeiro's staring-eyed corpse, at the two men Od\u00e9lie and M\u00e9lette had despatched, and sighed as she shuddered at the image of the three bloody corpses. \n\n\"Guys, snap out of it, bad place, we've got to get moving, NOW!\" she whisper-shouted, reaching down to give Justine a hand up.\n\n\"Quick, search these guys, empty their pockets, grab their guns, and let's get out of here, there's blood everywhere, those things out there are gonna be up here any minute now, shake it!\"\n\nThe four girls quickly went through the dead men's pockets, pulling out any and everything that could identify them, retrieving their handguns and clips, cells, ID's, before Kelly marshalled them. \n\n\"Ok, we need to get up into the cabin and locked down, it's going to get real dangerous out here, look...\" \n\nShe pointed at several 'V's arrowing towards them in the still water of the lake. \n\n\"Grab your packs an' those guy's ID's, bug-out time, let's go!\"\n\nThey quickly stuffed everything into Od\u00e9lie's backpack and made a beeline for the cabin, Kelly hurrying them along and dancing with urgency as she herded the girls inside before darting in and pulling the door to, a surprisingly heavy door for such an innocent-looking cabin, the steel-banded planks of inch-thick seasoned Southern White Oak proof against a battering ram. Kelly dropped the bar and let out a gasp of relief.\n\n\"OK, we're safe now, food, water, bedding, it's all here. We won't be able to go out for a while, so I guess we sit tight and wait for Big John or someone to come get us. Make yourselves comfortable, we could be here a while.\"\n\nThere was a small, pot-belly stove in the corner of the shack, and a pile of stove-wood. Kelly quickly started a fire, and everything they'd taken from the three dead men was thrown inside, destroying all trace of them, and their cells were smashed with a small hatchet Kelly found jammed in the woodpile next to the stove.\n\nKelly finished by throwing the remains of the men's cell phones in the blazing stove and grinned tightly.\n\n\"Now we wait.\"\n\n*\n\nJohnny made his cautious, silent way through the brush, tracking the bayou but keeping low and out of sight, flitting from cover to cover until he stopped, grinned, and straightened up.\n\n\"I know you back there! What, y'all too good to say 'hi' to a ol' frien' now?\"",
        "With an answering grin, Tommy Graves stepped out from behind the slender Jacaranda tree he'd been leaning on. Johnny was once again impressed at the big man's ability to just fade into the background with such sparse cover, and move so lightly, silently, through the crisp and crackling leaf litter.\n\n\"How the hell do you do that, John?\" grinned Tommy, flicking a mock salute at him\n\n\"'s real simple, Tommy,\" chuckled Johnny, \" I jes' listen fo' whut's 'sposed to be there; where it ain't, that where you are, make life much easier! So wassup, Tommy, them fellers stakin' out the crossin' like we reckoned?\"\n\nTommy nodded, and drew Johnny closer into the shade of the trees, indicating the wall of cane -stands.\n\n\"There's two of 'em back in there a ways looking for you, they walked right by me, talking about catching up with you, big ugly bastard with a machete, and a little skinny rat of a guy with an Ingram; dunno what he's gonna do with it, I hear tell you couldn't hit a guy in a phone-booth with it if you were in there with him; maybe it's true what they say about little men and big ole guns...\" \n\nJohnny grinned. \"An Ingram ain't that big!\" and Tommy grinned right back.\n\n\"That's true, but he's a tiny little guy; maybe that's big to him? Anyway, BOLO, isn't that what you cop-types say? Or should I call you 'LEO'?\"\n\nJohnny smiled at Tommy's gentle dig at his law-enforcement past. \n\n\"You a cruel man, Tommy Gra...back up, someone comin'!\"\n\nTommy slipped back behind the tree and Johnny faded into the brush just as a huge, brutal-looking man carrying a wicked Latin machete with a 2-foot blade stepped out of the dense stand of cane, followed closely by a small, skinny man in jungle camo carrying a suppressed MAC-10 in a neck sling.\n\n*\n\nFelipe Ribeiro glared at his companion.\n\n\"So you think they will come this way, do you, Edson? You tell me this is the way they must come, and so I follow you, and there is no-one here; tell me, canalha,(little turd) what is our next move, heh? Where is that campon\u00ea Bastine? Tell me, or tell this!\"\n\nHe waved his razor sharp machete under the sweating, trembling little man's chin.\n\n\"N\u00f3s vamos encontr\u00e1-los, chefe, eles est\u00e3o perto, eu juro (we will find them boss, I swear, they're close!\") gabbled the little man, his prominent Adam's Apple bobbing up and down in his rush to speak.\n\nFelipe sneered at the frightened little man, chucking him under the chin with the point of his fearsome Latina machete.\n\n\"Find them, canalha, find them now, or I will leave this place alone, and you, no-one will miss you...\"\n\nStuttering with fear, the smaller man turned to look back into the cane brakes, and his eyes widened.\n\n\"Chefe...!\" he choked out as Tommy reached out, grabbed him by the gun's neck-sling and yanked him face first into the trunk of the tree. Blood sprayed from his mashed nose and mouth, and he dropped, out cold, as Felipe roared and raised his machete. Johnny tucked and rolled, leaping up inside Felipe's swing, to slam the heel of his hand into the man's face, pulping his nose and staggering him back.\n\nFelipe hissed and spat like a cat, swinging the giant machete in a vicious cut that Johnny hurriedly ducked to avoid. Even as he bobbed up again to close with Felipe, the huge man, moving with blurring speed, reversed his swing, crashing the thick spine of the bolo against Johnny's head with numbing force, dazing him and knocking him to his knees. His eyes blazing with bloodlust, his face contorted with a killing rage, he closed, raising the machete to finish off Johnny, forgetting completely about Tommy in his rage. \n\nAs Felipe raised his machete, Tommy cannoned into him, body-checking him and sending him flying onto the low, flood-damaged levee bordering the bayou. Felipe staggered to his feet, teetered, and slid off the crumbling, mounded earth bank into the bayou as the weakened dirt wall sloughed away under his feet and dumped him in the shallows. Roaring like a bull, he floundered through the water, clawing at the levee-side foliage to grab a handhold, and for a second it looked like he'd succeed, but then, with a hoarse scream, he was yanked back into the water, into a churning, confused maelstrom of flailing limbs and glimpses of dead eyes, wide-open jaws, and a huge, scaled tail; Tommy watched in horror as Felipe surfaced, gasping, streaming water and draped with water-weed and his eyes wide in terror, before the huge alligator rolled over him and took him under again, just a quick glimpse of vast jaws opening and massive, razor-edged peg-teeth clamping around the big man's head before the whole thing was over, and Felipe was gone; all that remained was a scummy froth where a man had been standing.\n\nTommy stared at Johnny in shock.\n\n\"Did you...?\" he murmured, pointing at the frothed-up water, the only sign something had just happened, and Johnny nodded carefully through the ringing in his head.\n\n\"Gotta be fifteen-footer at least; I bin seein' him on an' off couple days now, we prolly in his range; he bin follerin' us fo' while, prolly jes' curious-like; guess he ain't that curious no more...\" \n\nTommy carefully examined the welt on the side of Johnny's head. Felipe had hit him hard enough to daze him, but there was no blood, and he'd never lost consciousness, so, after sitting for a while to let his head clear, the two men set off to the cabin and check on the girls. As they set out, after having taken the time to strip the unconscious henchman of his boots, pants, and machine-pistol, all of which went into the bayou, and wedging him in a fork of the jacaranda tree out of reach of random reptiles, the sound of shots echoed through the brakes, so quickly capped-off they sounded like a drum-roll, five in all. Johnny glanced at Tommy, who nodded back. \n\n\"Yeah, I know, those shots came from Bouvaise' place, c'mon, the girls' got trouble...\"\n\n*\n\nBack in the cabin, the four women were preparing to settle down for the night. Justine had initially been sceptical about the strength of the cabin door if any of those monsters in the lake decided to come calling, but closer inspection revealed the door was made of seasoned oak planks at least an inch thick, reinforced with steel stripping and hinges, set in a sturdy steel frame; it looked like an ordinary wooden door, but a cannon wouldn't get through those tough White Oak boards. Justine was also intrigued at the way Kelly had reacted to the threat, her obvious fighting skills, and she asked her how she'd done what she'd done. Kelly was happy to explain.\n\n\"It was Big Jon's idea,\" she started. \"The first time I met Jonny I was doing something real stupid, some men had hold of me, Jonny rescued me, which is kind of how he ended-up being one of the people who looked after me. He sort of hinted pretty loudly a few times how I needed to be able to look after myself, in case he couldn't be there, so I started karate lessons, which was fine, but then I discovered Taekwondo, and that's when it all came together; I used to be a gymnast and cheerleader in High School, and that helped me pick up the moves and gave me the flexibility; I didn't get the lead in 'Demonslayer' by accident, you know; they needed someone who could at least fake the whole 'martial arts' thing, and I could do it for real. Johnny made sure I kept up my training, I even got my Black Belt 3rd dan.\"\n\nJustine suddenly made the connection. After making her name playing cute, 'sassy little sister/sassy teen girlfriend/sassy sorority girl' parts in several blockbuster movies, and her breakthrough role as the heroine of a fantasy vampire movie franchise based on a best-selling video game, Kelly had made her television acting debut in a supernatural TV show with a huge cult following, 'Stormbringer', playing 'Morrigan', an old-time Death-Goddess banished to Earth and cursed with immortality, now living in Los Angeles and fighting demons and supernatural horrors sent against her and her friends by her old enemies. Now Justine realized the martial arts and action sequences were not camera tricks and CGI, it actually was Kelly doing those roundhouse kicks and high-kicking, spinning, cart-wheeling, athletic moves in the slinky leather outfits the fans and cosplayers loved so much. Kelly grinned at her.\n\n\"If it wasn't for Jonny, I wouldn't be where I am today; he gave me the push to learn what I know and how to use it, and for that alone I love him like the best big brother in the world. He's the real deal, and all his family are just like him. When I used to come down here to the Atchafalaya with him, mostly to get away from Hollywood and Beverley Hills and the gossip and the paparazzi and all that 'fame' crap for a while, his family didn't go all 'she's a movie-star, treat her special' on me, that would have been just as bad. To them, I'm just that little gal Jean-Basti\u00e8nne looks after, they treat me just like family, half his cousins and shirt-tail kin think I'm related anyway, so they just treat me like one of them. \"\n\nKelly smiled wistfully at the memories. \n\n\"Johnny's uncles and cousins take me hunting and fishing and make me take my turn watching the stills just like everyone else, his aunties have me cooking, cleaning, and looking after the kids, I eat the best food in the world, cooked by the best cooks in the world, and when Lubin or Audh\u00e9mar's boys take me off in the swamps and out on the lakes for a little gator-hooking, catfishing, or frogging, it's because they think of me like family, too, and they're teaching me stuff they think I should know. His folks are real, he's real, and I'm glad I'm part of his family.\" \n\nJustine glowed at the description of her Jonny, and once again noted the love and hero-worship in Kelly's voice whenever she mentioned Jonny's name. Not wanting to explore that too deeply, she changed the subject.\n\n\"Kelly, where are you from? I can't place your accent, you sound Southern, then you don't, there's no East Coast or New England, and you really don't sound like you do in the movies, so...?\n\nKelly chewed her lip thoughtfully, before smiling.\n\n\"You're right, well spotted. I'm from a town called Springfield kinda near the Kansas-Oklahoma border, North and west of here, it's a nothing place, the town that God forgot. My real name's Kylie Dolan, and my family, what's left of them, all Dolan's, are probably still there, running mostly everything; it's their own little empire. I didn't like that, my dad was the mayor, but he's an asshole, the sheriff's his cousin, a gross, sweaty fat pig who used to look at me like I was his favorite lunch, he's an even bigger asshole, my whole family are assholes, and they pretty much did what they liked, to anyone they liked. I didn't want any of that, so I left, I just bugged out one day and kept running, changed my name, and thought I'd try and live the Hollywood Dream, because I had nothing to lose, and I sure as Hell wasn't gonna end up on the streets or doing what most girls with no skills end up doing. \"\n\nKelly tossed her head, her black curls tumbling, and the faraway look in her eyes receded as she grinned at Justine.\n\n\"I got lucky, Justine, real lucky, a one in a million chance, I got spotted by the right people at just the right time, most girls don't, you know the rest. I changed my name, my look, the way I speak, I doubt my own family would even recognize me now. I used to be Kylie Dolan, I used to be a redhead, and y'know something? It's amazing how much veneers, a new hair color, and colored contacts will change how people see you; now Kylie Dolan's gone, I'm Kelly Delano, and I like my life, I have real people in my life, real family who keep me straight and aren't afraid to ask me why I'm being so all-fired foolish at times, I like it, it means I belong, right here; I think I'm done with Hollywood now; it ain't all that, as Johnny likes to say, and life here with my family is good.\"\n\nJust then the sound Justine had been hoping and praying she'd hear came to their ears from just outside the heavy door.\n\n\"Hello the house! Justy, Miz Kelly, petites soeurs (little sisters) y'all OK in there? What y'all bin doin' out here, it's kinda juicy, thought I tole y'all sit tight an' wait!\"\n\n*\n\nAfter a confused, teary, excited reunion, and only after Justine had checked the side of Johnny's head and convinced herself there was no serious damage and he wasn't going to die there and then, they grabbed up their gear and trekked up to the Basin Bridge, with Johnny leading and Tommy bringing up the rear. In this fashion they made good time, and thirty minutes after setting out, the bridge came in sight. At first sight, everything looked normal, quiet, too quiet, inn fact; Justine had expected a hive of activity, from what Johnny had said about his family and friends being all over this place, but it was almost eerily normal, not a soul to be seen. \n\n\"'s okay, fellers, we OK, all y'all came come on out, we done here!\" grinned Johnny. Justine gasped as figures appeared almost out of nowhere, from cover she wouldn't have thought a rabbit could hide in, tall men, medium-sized men, small, wiry men, all grinning, all heavily armed, and, much to Justine's surprise, a contingent of heavily armed soldiers in full combat gear.\n\n\"Soldiers, Johnny? Really? Just who don't you know, baby?\" asked Justine, and Johnny smiled at her.\n\n\"They not my idea, Justy, but they cleaned up them scum real fast and efficient like; every 'gator from Basin Bridge to Lake Palourde gonna be stuffed fat 'n' happy tonight, them boys sure took care o' that! They here 'cause Miz Angie an' Miz Cassie ask a favor, an' suddenly whole bunch o' these boys find they need 'specialist' combat trainin', so they CO send them here, they been real useful back-stoppin' us an' keeping maw-maw busy, too; she too damned busy feedin' soldier-boys to come up here an' cause trouble, so let's give thanks for small mercies!\" \n\nJohnny inclined his head toward the knot of people approaching them.\n\n\"Speakin' o' Miz Angie...\"\n\nJustine looked closer at the group of people, spotting two radiant blonde heads, Angie and Cassie, of course they were here too, why not, everyone else was, and then she grinned at the small, black-haired girl waving at her. \n\n\"Johnny...?\" murmured Justine, astonished that all her ex-trustees were there, but he just grinned back at her.\n\n\"Ain't no mystery, Minou; noncle Alby, Tante Amice's son's place 'bout 3 mile east o' here, they all been sittin' there a-waitin' for the 'all-clear' to come on down an' make you welcome!\"\n\nOd\u00e9lie and M\u00e9lette gaped as three of the most famous women in the world bore down on them, Angie Graves, Cassie Matthews, and Moonbeam O'Shaughnessy, and then they were hugging Justine and Johnny, combing her hair back out of her eyes to look at her, slapping Johnny on the arm, all the actions of a group of friends meeting up after a break, while Odie and Mellie stared in silent, pop-eyed amazement; Kelly Delano had been a big enough shock and now this...\n\nSome of Johnny's cousins came bustling up, grinning and giving Justine speculative looks, and Justine was struck by just how similar they looked to Johnny; Lubin and Audhemar' were Johnny's daddy's big brothers, and their sons could easily have passed for Johnny's brothers too, that same heft, dusty blond hair, and pale eyes. Kelly noticed them giving Justine interested looks, and she grinned as she grabbed one by his ear.\n\n\"For shame, Jean- No\u00ebl Deaucette, clean you mind out! This Justine, she Johnny's girl, she gonna be Jean-Basti\u00e8nne's wife an' you cousin, show some respec' or I teach you some!\"\n\nJean- No\u00ebl's face twisted in pain but he deferred to the much smaller girl, promising 'Miz Kylie' loudly that he was jes' being friendly, like, and that he was going to behave around Johnny's gal, of course he was, could she kindly let go please...\n\nKelly noted with interest how Kelly's speech had taken on that same bayou-intonation Johnny fell into when he was making a point, all trace of Hollywood was gone; she really had 'gone native'.\n\nKelly gave him one final twist, and a slap on his arm, with a reminder that any of those other ham-heads try anything she was ready to hand out some more; the looks they gave her were an interesting mix of adoration, amused tolerance, and outright fear; yep, Kelly Delano was right at home here... \n\n*\n\nThe party that night at Tante Amice's son's place, as Johnny had said, just three miles east of the Basin Bridge crossing, was everything the girls could have wished for; it's an unwritten law that if more than 3 Cajuns get together, fais-do-do happens; when dozens of them are together, the party gets loud, everyone gets to do their party-piece, either cooking or music, and so the music and eating and dancing go on far into the night. Odie and Mellie were more than a little shell-shocked to see Cassie Matthews tending the roasting suckling pig and bantering with Johnny's cousins, and Angel Graves, THE Angel Graves, splitting her time between gossiping with wives and daughters who'd appeared from nowhere, wiping young children's mouths, and filling and handing out po' boys; the fact Johnny and Justine knew and were so easy in the company of such people was still only slowly working through them, but they noted how fond they were of Justine, how familiar they were with Johnny, and how easy they were in the family's company; obviously they were more than just passing strangers down here...\n\nMellie and Hecky had gone someplace private, obviously they'd had a conversation, because they were holding hands tightly when they came back. Mack Dubillier's face had fallen on seeing that, a sad, wistful expression flitting across his handsome face, then the three of them had gone off and spoken some more. When they came back, Macky had seemed disappointed, but he'd hugged them both and got a promise from them that he'd be the first baby's Godfather, so that triangle had been resolved. \n\nJustine had been just as interested in the fact Od\u00e9lie and the handsome young sergeant, Everett something, seemed to be hitting it off rather well; there was a lot of 'non-verbal communication' going on there, especially since neither of them had been able to take their eyes off each other since they'd first showed up. The other soldier-boys seemed to have picked up on that too, as none of them even attempted to chat-up the beautiful little brunette, they could see their sergeant had that situation fully under control. Justine smiled to herself; looked like Odie was about to find out there was more to life than hunting, fishing, and poling a pirogue through the swamps...\n\nHer mind went back to a conversation she'd had with Kelly a couple of hours earlier.\n\nKelly had been bantering with Audh\u00e9mar, sassing him when he asked her when she was going to give up all this Hollywood foolishness and come take up with him. She'd replied \"Thanks, but no thanks; I do that and tante Clodille kill you, then she come kill me! I like my life, I ain't finished with it yet, so ya'll better back down an' go fishin', your time o' life that all the excitement you need!\"\n\nThe place had erupted with laughter, and Justine grinned at how completely Kelly had immersed herself in the Cajun ways, all traces of Midwest and California gone from her speech. She and Justine were helping with the food service when Kelly revealed that Cassie had told her that she'd been selected to be UN Women's Empowerment Ambassador, and of course she was going to do it, but when her year was up, she was coming back, the Atchafalaya was her home now, this was her family, and this was where she belonged. \n\nJustine had looked up sharply when Kelly asked her how 'Kylie Deaucette' sounded as her new name, a pang of anguish and her heart sinking when she thought of how Kelly regarded Johnny, and how she couldn't compete with Kelly's looks, her poise and limber athleticism, and her fame, but then she realized Kelly wasn't talking about Johnny at all; watching her closely, Justine saw how she couldn't take her eyes off of Audh\u00e9mar's middle son, Remy, a boyish-looking younger version of Johnny, and almost a dead-ringer for Lubin's boys; she also saw how, every time Kelly looked away, Remy's eyes just seemed to fall naturally on her. Justine smiled and breathed a sigh of relief to herself; she had no competition after all, there definitely was nothing to concern herself with.",
        "Kelly looked sideways at Justine for a second, then she realized what Justine had been thinking, and moved to head that off once and for all.\n\n\"No, Justine, it's not like that; do I love Johnny? Course I do, and he loves me too, he's family, he made me family, and he's who I trust most in the world; but he's your man, honey, not mine, and he never will be. Besides, I've got me another Deaucette boy entirely in mind...\"\n\nShe glanced over at Remy, and Justine, following her glance, smiled too. Kelly smiled secretly. \n\n\"Audh\u00e9mar knows, he told me the boy's kinda slow and shy when it comes to girls, so it's up to me to make him dance on the line and reel him in real slow, but he and tante Clodille approve, they like me, and you know something? That boy can cook, I mean not just grill and plate, he's like a magician in the kitchen, tante Clodille says she doesn't know where he gets it from, but anyone who catches him is in for a well-fed, happy life, hint, hint! I guess now you know, it's no surprise it's gonna be me, he's my kind of guy, he's cuter than all get out, he's just sweet and polite as can be, and he can cook; boy's the perfect package!\"\n\nKelly grinned naughtily at Justine.\n\n\"Thing is, I've been dancing around him for a while now, I think I got him interested, what do you think, maybe it's time cutie-pie R\u00e9my found out I'm a natural redhead?\"\n\nJustine gasped and blushed, then both their giggles rang out, Kelly blushing and ducking behind Justine when R\u00e9my looked her way, gabbling \"he's looking at me, he's looking at me!\" like a teenager with her first crush.\n\n*\n\nEpilogue:\n\nJustine was dozing, tired out from finally getting her fractious baby to sleep, and oppressed by the torrid, crunching heat of New Orleans in August that the air-con did little to alleviate. Her baby, Sandrine-Ysabeau slept soundly in the antique crib next to her, lulled by Justine's automatic rocking of the little rocker. It was Saturday, and Johnny should have been sleeping, he was working that night, settled back into his job keeping the rich and careless from paying for their indiscretions, but he'd been restless all day, dozing only fitfully at the best of times, and she could hear him at the very edge of hearing, prowling restlessly around downstairs in the den.\n\nThe sound of the landline phone shrilling jarred her fully awake. She let it ring, letting Johnny pick up the extension in the den, and the muted rumble of his voice drifting up through the floor grate began to lull her back to her half-asleep state again. Still only partially awake, she heard him hang up, then nothing; obviously it was work-related, nothing for her to worry about. Justine relaxed and let herself slip back to sleep, her foot still automatically rocking the crib.\n\nIt might have been minutes or hours later that she sensed Johnny standing silently in the doorway, staring at her. Her eyes drifted open, and her welcoming smile fled as she saw the expression on his face, and a cold hand gripped her heart; that was his 'bad news' face; something was wrong.\n\n\"Baby, what is it...?\" she murmured, \"What's happened? Tell me, baby, you look like Hell, what's going on?\"\n\nJohnny walked carefully into the room in his sock feet, avoiding the squeaky floorboard so as not to wake the baby.\n\n\"Justy, that was Las Vegas PD, checkin' up on you, they need to know where you were year ago...\" he murmured\n\nJustine stared in puzzlement, before motioning him out of the room so they could talk without disturbing the baby.\n\n\"Start again, baby; why would Las Vegas police be checking up on me? I've never been there.\" she whispered, her puzzlement obvious in her expression.\n\n\"Baby, it's about that...it's about Carlo, baby, an'...\"\n\nJustine's heart skipped a beat.\"What about him, Johnny, what's he done?\"\n\nJohnny grimaced, not relishing what he was about to tell her.\n\n\"Month or so ago, group of desert hikers outside a place called Tecolote, in San Miguel County, New Mexico, come across a shallow grave, pretty much ripped apart by coyotes, whatnot, but no ID, bin there 'bout a year, he'd been shot in back of the head, wrapped in ole blanket, and dumped under a pile o' rocks. County Sheriff's crime scene investigators done what they could, all they found was couple bullets, no proper ID or any kinda prints they could 'dentify, so 's far as they concerned, it jes' one more desert body dump for they cold-case files. Three days ago, police in Las Vegas called to old filling station on th' edge o' town, gangland style killing, woman found bound an' gagged, kneelin' an' shot in back o' the head, also bin dead 'bout a year, forensics say it same gun used to kill the man in Tecolote. The gun, a 25 caliber Baby Browning reported stolen in New York by Georgina Machado was lyin' next to her. Her ID said she was Gina Machado, and she had Carlo's ID in her purse. Thing is, I 'member that woman Carlo livin' with after y'all split up, she called Gina March. It looks like she kill Carlo out in the badlands and carry on to Vegas alone, prolly flashed some cash around, someone musta seen it an' decided they wanted it, an' played for keeps. She wearing your daddy's locket with you name in it, that how they put the pieces together. I'm sorry baby-girl, Carlo and his gal knock you out an' take your money you work so hard for, but they din't deserve to die for it...\"\n\nJustine stared at him silently until he wound down, a single tear coursing down her cheek. She didn't love Carlo, he'd betrayed her and driven her away, but she'd loved him once, she'd been married to him for nearly five years, and she didn't grudge him the money he'd stolen from her; it was a small price to pay for having him gone from her life, but she'd never wanted him dead, she'd never wished any ill on him at all; she was ecstatically happy with her Johnny bear and her baby girl, but it was still a shocking jolt to hear he'd died so pointlessly.\n\n\"Johnny, can we...?\" she began, and Johnny nodded. \n\n\"Way ahead of you, Minou, least we can do is give Carlo Christian burial, he warn't wicked, jes' stupid, an' that no reason to die that way. I spoke with the LVPD, they're arranging the remains be sent back to New York, I think Carlo should be buried next to his mom and daddy, I'll get the funeral home to look up if Gina got any family, otherwise we get her a plot of her own, jes' dumpin' her in some pauper's grave don't sit right with me, there's been enough vengeance takin' with this family, so we jes' put her to rest an' forgive her what she done, an' that be an end to it, okay?\"\n\nJustine hugged her husband tightly, letting the shock and distress ebb away. With news of Carlo's death, that part of her life was gone forever, now it was time to concentrate on the child sleeping in the other room, and the new life growing inside her, here, surrounded by her new life and new family, a long and strange way from her old life.\n\nThe End"
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother-sister",
        "cajuns",
        "incest",
        "louisiana",
        "romance",
        "romantic"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/down-at-the-twist-and-shout-ch-05"
}