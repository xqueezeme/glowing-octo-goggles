{
    "title": "Two Hundred Dollars Ch. 10",
    "pages": [
        "156 Dollars\n\nKent decided to spend Friday night lightly inebriated, thinking about what Bailey had initiated.\n\nShe wasn't the first girl to give him a hand job, but the list of those who had didn't run long. Two short relationships in high school and no opportunities since he had reached university left Bailey's peculiar actions far and above his previous experiences.\n\nAnd neither of those girls had jumped into the shower with me mostly naked.\n\nHe looked up at the whiteboard, which stonily informed him of the remaining one hundred fifty six dollar debt. Bailey had burned through her debt so quickly in the last few days, she'd have no problem getting to the halfway point by Christmas. That spoke to Kent of a surprising level of enthusiasm.\n\nNow, if I owed somebody money, I'd want to pay it back as fast as I could, too, Kent smirked, but I don't think that's what's going on here.\n\nThey had never included hand jobs as part of the deal. Bailey had explicitly intended to pay her debt off by letting him spank her. Something had changed to make her step into that shower, where he too stood naked, rather than just she and her friend.\n\nKent scratched his head.\n\nHe could text her, but that brought a foul taste to his mouth, a visceral burning sensation on his tongue. All of their communication for this purpose had passed through the whiteboard. Sending her a message any other way would, somehow, ruin the thing they had by breaking the rules.\n\nWe don't text or talk about this on the phone.\n\nHe couldn't imagine calling her. What could he say? Bailey sat on a bus somewhere, probably with people all around her. Her current situation didn't seem conducive to well thought out communication.\n\nKent sighed, finally, and loaded up an RPG on his computer.\n\n=============================\n\nHe woke late on Saturday morning with a thoroughly refreshed level of energy.\n\nWith a determination whose source he didn't want to investigate, Kent had decided that while Bailey had developed a healthy habit of creatively surprising him since the very beginning of their joint debt-paying endeavour, he had rarely surprised her as pleasantly.\n\nUnplugging his smart phone from its charging cable, he scrolled through until he found Laura's number with its single text's worth of history.\n\n\"U busy?\" he sent.\n\nKent then went about the business of scaring up breakfast. He had just laid his scrambled eggs on his plate when Laura's text came back.\n\n\"srsly? 2 early for that. Lol\"\n\nMunching on his food, he wrote back, \"not that. Need help w something 4 bai\"\n\nIt took Laura several minutes to reply to that.\n\n\"what 4 bai?\"\n\nHow should I put this?\n\nKent tried several different ways of putting his desires into text before he settled on one simple sentence.\n\n\"something 2 round out her wardrobe\"\n\nHis phone binked at him a moment later.\n\n\"u take me shopping?\"\n\n\"on a bus,\" he replied.\n\n\"I'll come by.\"\n\n\"door is unlocked,\" he wrote back.\n\nThe distance to her house, according to Kent's vague memories of things the girls had said, would give him just enough time to finish up, wash his dishes and brush his teeth.\n\n=============================\n\nLaura, he realized, must have rushed over. Although she looked properly dressed and not at all harried, she showed up ten minutes after his last text to her, tastefully dressed in fall beiges and a nicely set red beret which aesthetically matched with the rosy red flush in her cheeks.\n\n\"No skirt today?\" he nodded to her pants.\n\n\"Too cold. You ready to go?\" she asked.\n\n\"You know where we're going?\" Kent his voice sound amused.\n\n\"White Oaks Mall,\" Laura told him. Her eyebrows wavered suggestively, \"You're looking for like, good stuff, right?\"\n\nThe tawdry tone of her voice managed to convey the goal of finding some type of intimate apparel.\n\n\"Right,\" he agreed.\n\n\"Well, they've got three or four of those kind of stores there,\" she pointed out. \"And it's indoors. Doesn't get any better.\"\n\n\"True story.\"\n\nUnsure if Carson was home or not behind his closed bedroom door, Kent locked the apartment door behind him as they left.\n\n\"The 13 will come by in five minutes,\" Laura said. \"We can catch it if we hurry.\"\n\n\"Or we end up standing out in the cold?\"\n\n\"For twenty more minutes, yeah,\" her eyes went wide with warning.\n\nThey walked briskly then, to make sure of their time.\n\n\"So,\" Laura led on, \"what sort of things are you looking for?\"\n\n\"Well,\" Kent paused thoughtfully, \"that green skirt you lent her looked really good.\"\n\n\"The colour or the skirt?\"\n\n\"Both, actually,\" he admitted, \"But I was thinking more of the colour.\"\n\n\"Okay,\" Laura nodded, \"so you're looking for a green...?\"\n\nKent jogged his head back and forth hesitantly.\n\n\"Panties, maybe?\" he offered.\n\nLaura smiled, \"We're headed to the right place, then.\"\n\n\"Yes.\"\n\n\"So what brought this on?\" she prodded.\n\nA long pause hung between them, as Kent considered what to tell Laura.\n\n\"I want to surprise her with something,\" Kent felt safe in admitting. \"She -- and you -- are pretty good at surprising me.\"\n\nLaura smiled and Kent realized that, all things considered, she might now expect something, at some point, too. He intentionally steered his brain away from examining why he didn't currently feel the same way about the two girls.\n\nSeeing the bus coming, they ran to reach the stop. Since the bus driver didn't feel like a jerk that morning, he brought his vehicle to a stop and waited for them to catch up and board. Out of breath, they waved their university-mandated bus passes over the sensor and took their seats.\n\nThey chatted about anything other than underwear during the long, crowded bus ride to the mall. Laura, fortunately, had a gift for poking and prodding that lent itself easily to pleasant conversation. Kent found himself relax a bit, though a nervousness lingered at the back of his mind, knowing their destination. He'd definitely feel better walking into a lingerie store with Laura for company over going in alone.\n\n\"Alright,\" Laura said when the bus finally reached the end of the line. \"Best bet is to hit the top floor first. The best places are up there. You might find something, put it on hold, and then keep looking. Got it?\"\n\n\"You've done this before,\" Kent observed, following her quick pace as they entered the mall. He nodded with a respect only partially ironic, \"Skillz.\"\n\n\"You have to understand what underwear was like in Utah,\" Laura rang off, a harsh glare in her eyes, directed at some distant foe.\n\n\"Sorry, what?\"\n\nLaura sighed, slowing her pace somewhat.\n\n\"Mormons,\" she said, \"We had to wear this just awful, awful thing under our clothes.\"\n\n\"Really,\" Kent asked. \"Like, all Mormons?\"\n\n\"All the real ones, I guess,\" she said. \"It's like long underwear, but baggy, and a long sleeve undershirt. They tell you it's, like, magic and holy.\"\n\nLaura shivered with some distant memory.\n\n\"I convinced my parents that I needed normal panties when we left the church and came here.\"\n\n\"Only,\" Kent supposed out loud, \"they didn't know what normal was?\"\n\n\"Bingo,\" Laura's voice recalled a triumph of boldness. \"So I convinced my dad to hand over some cash and let me get my own.\"\n\n\"Your dad?\" Kent asked.\n\n\"The last thing a man wants to discuss with his daughter is her panties,\" Laura's voice took on a wise, sage-like quality. \"It worked better than asking mom would have.\"\n\n\"Freedom,\" Kent agreed.\n\n\"Freedom starts in your own pants, it turns out,\" Laura emphasized. \"Or under them.\"\n\nKent thought hard about that, wondering how it must have affected Laura to have a religion underneath her clothing like that.\n\n\"Your church have a thing about masturbation, too?\" he wondered aloud.\n\nLaura choked in shock, coughed twice, then stopped completely to glare at Kent who had walked ahead two paces before he noticed.\n\n\"Yes,\" she said. \"I think every church has a thing about... that.\"\n\nShe started walking again, catching back up to him and directing him to the escalator.\n\n\"But, for the most part, they hammer really hard on the boys, not the girls.\"\n\n\"Ah,\" Kent said. \"I guess that makes it easier on girls.\"\n\n\"On, uh, masturbation, yeah,\" Laura muttered, \"and nothing else besides.\"\n\nThat sufficed to shut the conversation down for the ride up the escalator, while Kent considered what Laura's religious upbringing had done to her.\n\nObviously it hasn't killed her spirit, he glanced sideways at her, and her sexual desires seem fine, if a bit pent up.\n\n\"Over here,\" she announced, catching his glance and raising her eyebrow. \"Best place to start.\"\n\nKent took a deep breath and followed his guide into the dimly lit lingerie shop. The owners had decorated the place into a boudoir, with black walls and a wide array of pink and red up-lights bouncing illumination off ceiling panels and merchandise.\n\n\"Okay,\" Laura led him over a to rack of panties. \"I know you're looking for green, but just have a look at all the styles, too.\"\n\n\"Right,\" Kent stood astounded by the wide variety of styles the store offered.\n\nHe mentally thanked Laura, however, for handling things so simply and naturally, and for picking a store where the lights didn't shine too brightly. Gently moving through the offerings on the rack, he saw thonged and wide backed panties. Some used a lot of transparent or translucent fabric while others had small plastic jewels embroidered into them.\n\n\"Anything catch your eye?\" Laura asked, running through the same hangers he did.\n\nKent shrugged, holding up a frail black number that ran transparent everywhere except the seams, \"The shapes are nice.\"\n\n\"That is very...\" Laura's eyes widened, \"revealing.\"\n\n\"You don't have anything like that?\" Kent grinned at her.\n\n\"No,\" she said. \"I don't think I could ever fool my mother into thinking that's normal when it shows up in the laundry.\"\n\nKent murmured agreement when he put it back on the rack and, somewhat more comfortable, starting wandering around the store.\n\nThe tingling he felt in his body did not result from seeing any of these fantastic articles of clothing for the first time. Anyone who watched porn had, at some point, seen some pretty ridiculous outfits. But the fact of walking through the aisles, around the racks of frilly, lacy and otherwise sparse clothing gave it a realism that Kent had never felt before.\n\nThe price tags, on the other hand, swept most of the reality away like so much water over a cliff.\n\nYes, we'd like something nice. But keep your head on straight.\n\n\"Can I help you with anything?\" a voice called out behind him.\n\nHe turned to see a girl, probably his age, in tight black leggings, a mid-riff baring black top and far too much makeup.\n\n\"Just having a look, thanks,\" he said instantly.\n\nSensing his discomfort, she nodded politely, \"Just let me know.\"\n\nKent nodded and turned back to Laura.\n\n\"Don't worry, boy,\" she said, \"we've got at least three other places we can go.\"\n\nNot wanting to find himself abandoned, Kent let Laura lead him out of the store.\n\n=============================\n\nIt took them over an hour to walk through the three-storey mall and visit the first three stores. While Kent found himself amazed at the wide variety of options available to him, he hadn't yet found anything that matched what he had in his mind as gift for Bailey.\n\n\"Okay,\" Laura declared, \"We need a break. You're buying me a hot chocolate.\"\n\n\"I am?\" Kent looked down at her in surprise.\n\n\"I'm doing you a favour today,\" she said. \"It's the least you can do.\"\n\nKent shrugged and they took the escalator down to the lowest concourse and the food court. He ordered two hot chocolates, with cinnamon and whipping cream, and he and Laura sat down to enjoy them.\n\n\"Still no luck, huh?\" she asked.\n\n\"There's nice stuff,\" Kent admitted, hesitating a moment and then stopping completely.\n\n\"Are you going to get her something anyway?\" Laura asked. Her voice softened, \"Look, you're unlikely to find the actual dead-on thing you're imagining, okay?\"\n\n\"True,\" Kent nodded, \"But I haven't seen anything I can actually imagine her wearing, you know?\"\n\nLaura sipped her hot chocolate and leaned in more closely, \"What do you imagine her in, most of the time?\"\n\nKent's eyes glossed over for a moment while he pictured all the ways he'd seen Bailey.\n\n\"If she has to wear anything,\" he said, \"It's the white thong. That's the perfect shape.\"\n\nLaura smiled, \"So, thongs?\"\n\n\"Yeah,\" Kent looked her in the eye. \"The transparent ones, at least.\"\n\n\"Ah.\"\n\nKent took a deep breath, feeling himself stirring below a little and not needing an erection right then, tried to turn his thoughts away.\n\n\"About Thanksgiving,\" Laura ventured. \"I'm just... curious.\"\n\n\"Uh-huh,\" Kent hid his discomfort behind a sip of hot chocolate.\n\n\"She spent the whole day... like that?\"\n\n\"Yep.\"\n\nLaura looked around carefully before speaking, her eyes lighting up, \"So how many places did you spank her?\"\n\n\"My room, her room,\" Kent spoke slowly, his eyes roaming around in thought, \"Kitchen, the laundry room just before we left. Oh, and one in the park.\"\n\n\"Sorry?\" Laura blinked. \"Where?\"\n\n\"In that park?\" Kent explained. \"Between our place and the grocery store? The place where I go running.\"\n\n\"Outside?\" Laura hissed. \"You spanked her outside?\"\n\nKent waggled his eyebrows.\n\n\"Oh, you mean two on top of her jeans,\" she clarified.\n\n\"Nope,\" Kent exhaled with a hard popping sound on the 'p'.\n\n\"She pulled down her pants,\" Laura enunciated carefully. \"Outside.\"\n\nKent nodded.\n\nLaura sat back in her chair, shoulders dropped in shock. \"I never would have...\"\n\n\"I couldn't tell if it was her idea or mine,\" Kent narrowed his eyes as he peered into the past. \"I feel like she thought I was asking her, and I thought she was offering. It was a little confusing.\"\n\n\"Yeah, probably,\" Laura discovered the bottom of her mug and turned her eyes to Kent, \"you ready to finish this thing?\"\n\n\"Sure,\" Kent finished off his mug as they stood up and he returned their tray to the cafe kiosk.\n\n=============================\n\n\"Alright,\" Laura said, \"this place is a bit skankier, but since you can't really describe what you're looking for, I couldn't tell where we should go.\"\n\nThe place, to Kent's eye, looked more like a strip joint than a store. The entryway forced customers to go around two corners, preventing people walking by in the mall from seeing anything of the store besides what lay out on the headless plastic models in the front display.\n\n\"Cold day at the mannequin factory,\" Kent remarked.\n\n\"Haha,\" Laura ignored him and led him onward. \"Now if you see something...\"\n\n\"That!\" Kent said, pointing.\n\n\"Oh, my,\" Laura replied, reacting to the excitement on his face. She turned and saw what he pointed at and repeated, in a lower voice, \"Oh, my.\"\n\nThe rack at which he pointed held a series of bra and panty sets in orange, green and yellow, but all in the same pattern. While the cut of the bra looked fairly basic, the cups had been made of a sheer material, while the straps and underwire seemed to sparkle just slightly. The panties, hanging just below the bra, matched in terms the transparency of the fabric used.\n\n\"It's not a thong,\" Laura said, indicating the narrow curve of the back of panties.\n\n\"It's transparent, though,\" Kent's eyes went wide.\n\n\"And green, which is why it's on clearance.\"\n\n\"Clearance?\" Kent's eyes turned up to the sign above the rack. \"That's good.\"\n\n\"Yeah,\" Laura snorted. \"Regularly ninety bucks. Now forty-five.\"\n\n\"Christ,\" Kent whispered.\n\n\"Always with the blasphemy,\" she chided him. \"That's a good deal, really. But you have to see if they have it in her size.\"\n\n\"Oh,\" Kent trailed off. \"Oh, right.\"\n\n\"She's a thirty-two, A,\" Laura sighed and rolled her eyes, then thumped her own breastbone with her thumb. \"Thirty-four, C, if you're wondering. Have you really not seen the tags on her bras?\"\n\nKent tried to think about it when he might have handled one of Bailey's bras, but, going back over all of the spankings and other incidents, he realized he really had never had an opportunity.\n\n\"She pretty much always keeps her shirt on,\" Kent said, flipping through the rack and checking tags, \"Except for the time with the towel.\"\n\n\"The towel?\"\n\n\"She came out of the shower and right into my room,\" Kent shrugged. \"Just had a towel wrapped around her.\"\n\n\"Oh,\" Laura nodded in understanding, \"was that right after I, um, came by?\"\n\nKent hummed thoughtfully, \"Yeah, I think so. Why?\"\n\nLaura shrugged, then pulled out a matching green set. \"Triumph, Kent.\"\n\nHe gently took it from her hand held it up to the light.\n\n\"No runs that I can see,\" Laura agreed. \"Good of you to check.\"\n\nKent, who had not been checking for damage to the material, but rather sizing up the garments versus his bank account, nodded sagely.\n\n\"This is my drinking money until December,\" he said, biting his lip and rubbing his forehead.\n\n\"I feel confident it'll be worth it,\" Laura seemed unable to contain a giggle. \"But it is a long way from the panties you came in for.\"\n\n\"Yeah,\" Kent's eyes widened as he looked at the clothing, still held up in the air. \"But look at it.\"\n\n\"Yeah,\" Laura agreed with a nod.\n\n\"I can gift wrap it for you,\" a female voice chirped up from behind him.\n\n\"What's that?\"\n\n\"Tissue wrap and a nice gift bag?\" the salesgirl explained, \"Free with any purchase over thirty dollars.\"\n\nThe girl, in tight leggings and a loose halter top designed to let everyone see the bra she wore, then looked at Laura.\n\n\"Although... you may want to check the size.\"\n\n\"It's for a friend,\" Laura explained. \"It's the right size, don't worry.\"\n\n=============================\n\nThe ride home on the bus had evoked a greater sense of conspicuousness than his visitation of all four lingerie stores put together, but he and Laura had survived that and started their walk back to the apartment in what turned was the middle of the afternoon.\n\n\"It's nice out,\" Laura said. \"Let's walk through the park?\"\n\n\"Sure,\" Kent shrugged, noting that the slightly warm Saturday afternoon October had offered was not in use by any other pedestrians.\n\nLaura steered a course a little wide of his house, cutting through an easement between two apartment buildings, so they could hit the little bit of green space the southern part of the city offered.\n\n\"This is where you run?\" Laura asked when they reached the gravel path circling the park.\n\n\"Yeah,\" Kent said, \"It's a bit less than a kilometre around, so I do seven laps.\"\n\nLaura's eyes scanned the forested sections in the middle of the park as they walked.\n\n\"I don't see where you could hide, though,\" she said suddenly.\n\n\"What?\"\n\n\"Where you can Bailey could have... y'know?\"\n\n\"Oh!\" Kent drawled. Then he pointed off to the right, to a place ahead of them along the loop where a gravel path provided an exit. \"See up there? That's where you come out of if enter the park near our house.\"\n\n\"Right...\"\n\n\"And you cut through that stand of trees there,\" Kent pointed to the left, \"if you want take a short cut across.\"\n\n\"In there?\" Laura's eyes widened, \"you spanked her in there?\"\n\n\"Nobody was around.\"\n\n\"Doesn't look like much cover,\" Laura sounded dubious as they turned off the path and headed to Kent and Bailey's apartment.\n\n\"Oh,\" Laura said, as they crossed the street, \"how are you going to give that to her?\"\n\nKent jerked back as if someone had yanked his chain. \"Hadn't thought about that?\"\n\n\"You can leave it on her bed, maybe?\"\n\n\"Her door's locked,\" Kent said, crestfallen. \"How can I surprise her...\"\n\n\"I have the key to her room,\" Laura said. \"Just in case, y'know.\"",
        "Kent had two keys to his own room, but had never thought to give one out to anybody else for safekeeping.\n\n\"I can let you in, if you just want to leave it on her bed,\" Laura said. \"Or you can give it to me and I'll do it.\"\n\n\"Sure,\" Kent nodded. \"That's be great. Thank you.\"\n\nBy that time, they had reached the side door of the house, which Kent unlocked and let Laura through.\n\nKent unzipped his jacket, thankful to find warm air in his face, and followed Laura down the stairs. She fished for the keys in the pocket of her jacket and came out with a small key much like the one Kent had for his own room.\n\n\"Here,\" she said, holding out her hand for the bag.\n\nKent waited outside Bailey's room, feeling like he'd be intruding if he went past the doorway, and watched Laura set the little black and pink gift bag on the bed.\n\n\"There look good?\" Laura stepped back.\n\n\"Can't miss it.\"\n\nLaura stepped back again, as if sizing it up. She took another step, then another, and eventually bumped right into Kent, pushing her rear into his groin.\n\nKent exhaled, biting his lips.\n\n\"Oh, Kent,\" Laura murmured, sounded disappointed.\n\nHe slid his arms up under the hem of her jacket, touching her hips, his fingers hooking over the belt of her pants.\n\n\"Something wrong?\", he wondered.\n\n\"I promised. I promised. I promised,\" Laura sighed, turned around laid her head against his chest, her red beret rubbing against the underside of his chin.\n\n\"You promised what?\"\n\n\"Bailey,\" Laura slid her hands inside Kent's jacket, around his waist. \"No spankings while she's not here.\"\n\nKent listened to the irregular pattern of Laura's breathing, knowing what it meant, and feeling her push her body against him. His hands slid down, bracing themselves high on her cheeks.\n\n\"Bailey was upset because you pitied her,\" he whispered. \"But you're not pitying her, are you? You're not paying her debt?\"\n\nLaura's body lurched against him, a sudden inhalation that sparked a twitch of muscles.\n\n\"Oh, god,\" Laura muttered, her face still hidden against his chest. \"If only that were it. If only.\"\n\nKent tried several times to formulate a sentence, but couldn't manage it, not with Laura pressing herself against him with such enthusiasm. His hands drifted lower, cupping her cheeks and pulling her in more tightly. When she moaned, he squeezed, sinking his fingertips into the seat of her pants and squeezing the flesh behind.\n\n\"Oh,\" she moaned out one long note, then stopped and pushed him back, disconnecting their bodies.\n\nShe put her hands on his chest, holding the lapels of his jacket, looking down at the floor while Kent waited to get some kind of explanation for the conflict that clearly tore at the poor girl.\n\n\"If it were just that,\" she said, a deep breath to combat the stumbling gasps her body preferred right then, \"I would let you spank me. Here or there or anywhere. But it's not, and I can't.\"\n\nLaura took a deep breath again and managed to raise her eyes to meet his, and released her grip on his jacket. She had enough space, by then, to lock Bailey's door behind her back and close it.\n\n\"Thank you for the company this afternoon,\" she said, and bit her lip on any other further words.\n\n\"Thank you,\" Kent said. \"I wouldn't have known where to go or... what size to buy... or anything.\"\n\nLaura thumped him gently on the chest with her fist. Then a second time.\n\n\"You have a good afternoon,\" she said with a gulp. \"I'm sure I'll catch up with you soon.\"\n\n\"Maybe Monday,\" Kent said.\n\nLaura nodded as she turned away. \"Maybe Monday,\" she agreed, giving a longing glance into his room before she padded onward.\n\nKent watched her pull her phone out of her jacket just before she turned up the stairway.\n\n=============================\n\nBailey laid down on her bed, waiting for dinner to start, taking a break between conversations with her relatives at the giant feast her parents had laid out in lieu of actual being in town at Thanksgiving. Most of her relations meant to do well by her, but they had a bad habit of looking at her suspiciously and then telling her she needed to eat more.\n\nLike it's any of your goddamn business how skinny I am, she glared in the general direction of the noisy living room where they continued their raucous party. Then, Kent thinks I look fine. Two hundred dollars of 'just fine', as it happens.\n\nShe grabbed her phone off her nightstand and checked for text messages. Finding none, she sent one to Laura, \"Too many relatives, here. How are you?\"\n\nBailey lay in bed for several minutes before a reply came back.\n\n\"Walking home. Nice day.\"\n\nA trembling came up from inside her belly, one that had nothing to do with hunger. Bailey carefully worded her reply.\n\n\"Go any place interesting?\"\n\nShe impatiently endured another long pause, before: \"Don't worry. No playing today.\"\n\nBailey took this to mean, because Laura would never commit the word to text, that no spankings had taken place.\n\n\"Just bored here. Relatives on my case.\"\n\n\"u still 2 skinny?\"\n\n\"yep,\" she replied, and sighed.\n\nA long texting void ensued, and Bailey didn't know how to continue the conversation. She didn't want to talk about her aunts and uncles criticizing her body, as if she didn't do that enough herself, and she couldn't talk to Laura about what had happened with Kent -- mostly because she didn't really know what she and Kent had done and what it meant to either of them.\n\nShe set her phone down on her nightstand and stared at the ceiling.\n\n\"Bailey,\" her mother called from downstairs. \"Turkey's ready. Come help with the table.\"\n\nShe sighed, preparing herself for another round of 'helpful' relatives doling food onto her plate every time they thought she wasn't looking, and stood up out of her bed.\n\nHer phone binked at her.\n\nBailey picked it back up and saw the message.\n\n\"Surprise for you, though. When you get back. Later. Hugs and Kisses.\"\n\nShe stared at that message for such a long time that her mother had to call her down a second time.\n\nWhat is Laura up to? I know she won't tell me, but still.\n\nShaking her head, Bailey left the phone behind and went down to dinner. Maybe she could sit between her two sisters and avoid any food-based familial nagging.\n\n=============================\n\nShe endured the ride home on the bus as well as she could -- which came out to mean that she did her best not to grind her teeth in anticipation.\n\nWhat kind of surprise? What has has Kent done? Why does Laura know about it? What were the two of them doing?\n\nThe idea of Kent and Laura sharing some experience in her absence gnawed at her stomach until it ached. She nibbled on the cream cheese laden bagel she'd packed in the early morning hours before saying her goodbyes to her parents.\n\nHe didn't spank her. I'm sure of that. Very, very sure.\n\nThen she went around again, her thoughts spiralling back to the same central problem: why do I care whether or not Laura gets spanked?\n\nBailey acknowledged that their mutually orgasmic session in the shower meant a change in their relationship, but not a very big one. They'd already had orgasms together and she'd already assumed it was no big deal. Other people did friends-with-benefits so often, they'd made an acronym for it.\n\nHe needed it and I needed it and that's fine.\n\nShe tried to keep her frustrated growl on the inside, but her irritation made for a long ride home.\n\n=============================\n\nMonday morning, Kent nervously checked the time on lecture hall's wall clock. He had a vague idea when Bailey would get back to their apartment, just based on the last bus she'd taken and some vague mentions. The bus should reach the stop nearest their house around eleven in the morning. Give her maybe five minutes to get home if she moved her ass, and then she'd come down the stairs and...\n\nGet your head in the your lecture, he mentally smacked himself. Your education isn't that cheap.\n\nBut he couldn't focus. He'd thought about that package, sitting on her bed, all weekend long. Several times, he'd regretted it and wanted to take it back, but he'd always overcome his anxiety. Besides, it would have required calling Laura, making her come over and unlock the door.\n\nAnd what would you tell her? Kent asked himself. That you wasted her time? Or would you lie and say you meant to give Bailey her present later?\n\nShaking himself again, he tried to refocus on the lecture. But jarring his thoughts from the gift bag only left his brain loose enough to attach to the next most obvious thing: the contents of the gift bag.\n\nHe remembered Bailey in the green skirt. He knew how nicely that went with her skin, her hair... with her entire body, now that he thought about it. Then his mind just started imagining various combinations of the clothes she already owned with the ones he'd bought for her.\n\nFuck, he closed his eyes and re-opened them with the determination to bear out the last of his lecture, but his eyes caught the wall clock anyway. She should be getting home about...\n\n=============================\n\nNow, Bailey came into the house, I wonder what this surprise will be.\n\nAfter racking her brain continuously, she'd worked herself around in circles until she'd decided that Kent must have planned something for her. She couldn't imagine what he might plan, given that the whole structure of their relationship hinged upon her deciding when she wanted to be spanked, but how else could he have a \"surprise\" for her?\n\nHe undoubtedly intended to overwhelm her with this surprise at some point in the evening, which meant she had to decide how to react now. Worse yet, despite her impatience, she had several more hours until the two of them would be at home at the same time.\n\nAt the very least, she reminded herself as she unlocked her bedroom door, I'll have lectures and a lab to distract myself from wondering.\n\nAs she committed herself to focusing on her school work, she opened the door and her brain lurched to a stop, an ephemeral hand constricting her heart and preventing its natural beating as she saw the little black and pink gift bag on her bed.\n\nOh, my.\n\nShe stepped inside the door and shut it quickly behind her. Her oversized backpack full of clean laundry found itself dumped unceremoniously in the corner as she strode across the room and opened the bag. Whatever Kent had got for her, it lay in multiple layers of tissue wrap. She laid the little package out on the bed and found herself suddenly lightheaded.\n\nIt's because you stopped breathing.\n\nShe inhaled suddenly, as if surfacing from a long stretch of swimming under water.\n\nIt's okay, she told herself, gently peeling the tape that held the tissue paper in a tight bundle, you can handle this.\n\nSplaying it out on her bed, she soon discovered a bundle of dark green fabric.\n\nThe colour of the skirt, Bailey realized instantly. He meant it to match with the skirt.\n\nShe held up the panties first, noting the comfortable width of the crotch and the complete transparency of the entire piece. Nothing at all would be left to his imagination if she wore this. She tested the frailty of fabric in her hands and knew that it would offer absolutely zero protection against a spanking.\n\nPanties really don't help that much anyway, she acknowledge, holding the fabric up to the daylight coming in her window, but this is definitely the thinnest thing ever.\n\nThe bra came next and she almost let out a low whistle. Without thinking, she checked the tag to verify he'd picked the right size.\n\nGood of him to get that right, she nodded gratefully, knowing how awkward she would have felt trying to exchange it. And, wow, he stuck with the transparent theme here.\n\nThe two pieces obviously constituted a matched set. Styles and fabrics didn't line up that closely by accident.\n\nIf I wear this, and he sees me in it, Bailey shivered, I can stop pretending he hasn't seen my breasts. Because they're just going to be there, right in front of him.\n\nShe checked her phone, decided she had a few minutes yet before she had to wolf down a lunch, and stripped out of her jacket, blouse and plain white bra.\n\nIt's okay. Your chest isn't actually flat. They just say that. You can wear this and it's fine.\n\nShe slipped the ridiculous green bra up her arms and over her shoulders, adjusted the underwire and slipped her fingers around her back to do up the strap.\n\nNice new bra, she thought, In such good condition, I can use the outermost hooks.\n\nBailey twisted it until it fit nicely, feeling satisfied that her breasts filled the little cups once she got the angles comfortable.\n\nA little bit of push-up action which -- she sighed -- let's face it, is warranted.\n\nWith a deep breath, she turned to look at herself in the mirror.\n\n\"Yep,\" she said aloud, her eyes widening as she exhaled, \"I'm naked.\"\n\nHer nipples, small and dark, found no concealment from the fabric of the bra. But with the cool air in the room, they pushed out against the thin fabric.\n\nWith a mental shrug, she undid her jeans and switched her panties out, too.\n\nNothing hidden here either, obviously.\n\nThis exposed her more than her white thong did. That pair, by comparison, could only be called translucent. As Bailey looked in the mirror, seeing all the details of the hair between her legs and the cleavage of her lips, she knew that this counted as transparent.\n\nJust because he bought this for me, does it mean I have to wear it for him? That I have to show him everything all at once?\n\nShe turned herself side on to the mirror, then rotated her body back and forth.\n\nIt's a gift, after all. He made it clear after the coffee shop that he freely gives his gifts and I don't owe him anything for it, Bailey remember that moment very happily, when he had emphatically refused to spank Laura in exchange for her hot chocolate. He's noble and he understands rules. We have always had that between us.\n\nThat meant, above all else, she could show him this outfit, in part or in full, when she felt like it.\n\nWith a reaffirming breath, Bailey put her blouse on over her new bra, her jeans on over her new panties, and pulled her jacket on after all that. If she hurried, she could eat a bagel on the way to campus and still make her twelve-thirty class.\n\n=============================\n\nShe came home at 5:30pm, entirely burnt out from a long weekend of familial harassment, an early morning bus ride spent shaky with anticipation, and a chemistry lab that had mostly gone wrong.\n\nBut at least I didn't get any crap exploding on me this time.\n\nA burst of adrenaline hit her as she came down the stairs, looking forward to seeing Kent's eyes when he saw her, wondering how he would like her in her new clothes. With this weary determination to pay off at least one dollar while sporting her gifts, she went straight to Kent's room and found it empty.\n\nHer body wilted, the day's efforts finally demanding their toll as her breathless anticipation dissipated, leaving her legs leaden and her shoulders barely capable of holding up her backpack.\n\nDamn.\n\nWith an emptiness in her chest, Bailey slouched over to her room, dropped her backpack on the floor and turned on the dim light on her night stand to its lowest setting. She sat on her bed a moment, thinking of curling up under the sheets, her worn out heart wanting nothing more than to pass out and recover from tumultuous weekend.\n\nBut I wanted him to see me. A moan almost escaped her throat. To see me in the things he bought.\n\nShe took a deep breath and stood up, forcing her rebellious legs to carry her back down the hallway to his room. By the light of hallway, Bailey took the marker and made a single, lonely tick mark in the box. That would, she assured herself, bring him to her.\n\nHer own bed, though, seemed too far away, while the darkness of his room tempted her too strongly. Bailey swung his door until it rested against the door frame. Blindly, she unbuttoned her jeans, slid them off and laid them over his chair. At least this way, she surmised, she'd have no complications whenever he decided to come home. She tiptoed over to his bed, pushed back his covers, crawled underneath and pulled them closed over herself again.\n\nBailey remembered nothing after that.\n\n=============================\n\nKent returned at nearly seven o'clock, hungry for a late dinner, delayed at school by the necessity of the clearing up a confusing homework assignment with his fellow students.\n\nThat shit is due tomorrow, he shook his head angrily, and we're just figuring it out now.\n\nHe knew he had a long night ahead of him, but the assignment needed to wait until after dinner. When he came home and saw both his own room dark as well as Bailey's, a wave of relief came over him, knowing that temptation wouldn't get him tonight. He needed focus.\n\nIn his haste to reach the kitchen, he slid his backpack into his bedroom as he went by, only opening the door far enough to fit its bulk into the gap. He passed by Bailey's room and discovered with a passing glance that, first of all, she had left a very dim light on in her room and she had found the gift he'd left.\n\nAlright, he let out a relaxing breath, but what did she think of it?\n\nIt might have occurred to him, right then, that Bailey never left her room unlocked when she left the apartment, but his hunger overrode most of his other thoughts and he proceeded directly to the kitchen with little other thought, still wearing his coat.\n\nLeftovers, fortunately, presented themselves, as Kent tried to perpetually have an emergency serving or two of pasta ready to go. He heated it up to the minimum acceptable temperature and chowed down on it immediately, washing it down with a glass of milk.\n\nBreathing more easily, he sat back in the kitchen chair and relaxed. He had still had a few hours of work to go this evening, but he knew what he had to do. Only time stood between him and the completion of his work.\n\nKent stood up, resolutely fixed upon that work, and cleaned up the table, setting his dishes in the drying rack. Walking back to his room, he stopped at Bailey's open door, feeling a greater disturbance at the unlocked door and abandoned light. He stepped into the space, feeling a bit like an intruder, and took in the scent of her which infused the room.\n\nTravelling a little farther inside her domain, he reached the lamp on the night stand and turned it off, thinking this a reasonable and practical excuse for entering her room. He had seen, however, no sign of the panties and bra he'd purchased.\n\nBut she wouldn't leave them out, would she?\n\nHe could, theoretically, search her dresser, but ruled that out instantly.\n\nToo creepy, he decided, not going to happen.\n\nKent left Bailey's room and returned to his own. He pushed the door open and snapped on the light, then instantly snapped it off again.\n\nOkay, then.\n\nNo question in his mind, Bailey waited for him in his bed, and she appeared to be asleep. He pulled the dimmer on the light switch to its lowest setting and turned it back on.\n\nDid I wake her up? he leaned over carefully. No, still sleeping. So now what?\n\nKent considered his options. A quick glance at the board showed him that Bailey had left a tick mark for him. That meant, as he understood the rules they'd made, that he could wake her up and spank her.",
        "Bit of a douche move, though, he decided, seeing the look on her face, she's clearly spent.\n\nThe other issue, however, lay with his homework. That needed doing. He turned on his computer and drew his notes from his assignment out of his backpack. Checking to see that he hadn't disturbed Bailey, he noted that her face maintained the same soft, serene look as when he'd first come in.\n\nKind of adorable, actually, he admitted, and set down to do his work.\n\nCertain kinds of very urgent, academic stress didn't lend themselves well to sexual relief, and Kent found himself capable of ignoring both Bailey's presence and the tick mark on the board while he delved into his school work.\n\nAs the minutes turned to hours, a strange sense of satisfaction lingered in the back of his mind, knowing that Bailey waited for him. With the covers pulled up to her neck, Kent had no way to know what she wore underneath his blankets, except for the fact that it couldn't include the jeans on the back of his chair.\n\nIt might be nothing, he thought, but probably the stuff I bought her.\n\nHis brain lit up then. At the very least, her presence attested to her positive opinion of his gift.\n\nMaybe focus on your homework?\n\nBy nine thirty, he'd checked over his work enough times to believe he had capably completely the assignment, and he turned in his chair to face Bailey, who had not yet stirred from her place. With academic stress set aside, he could now fully consider her. This allowed him enough space to realize that he didn't know how to proceed.\n\nKent supposed, given that she had just crawled into his bed to wait for him, that he could push the covers back and slip himself in front of her. He didn't like that idea, though, and he couldn't put his finger on why.\n\nMaybe let her sleep for a bit. She'll be more into it if she comes around on her own?\n\nHe needed water anyway, and tiptoed out of the room to go get it, carefully leaving the door ajar as he went.\n\n=============================\n\nWith the disorientation that always came with an oddly timed nap, Bailey stumbled into consciousness and tried to figure where she lay.\n\nKent's room, a voice inside her head told her, you were too tired to go back to your own, remember?\n\nShe felt energized again, though hungry, and scanned the room. Kent must have come home and turned on the lights, though he'd left them dim. His computer, now activated, displayed what she took for school work. Pages of notes covered his desk.\n\nHow long was he working? She wondered. And he just left me sleeping here?\n\nA soft glow warmed at her insides, imagining Kent at his desk, working away while she slept. Bailey smiled as she began to wonder where he'd gone and when he'd come back.\n\nShe heard the water running in the kitchen and a sudden thump struck her chest as her heart skipped a beat.\n\nWith her time deeply constrained, hearing his footsteps coming up the hallway, she pulled her shirt up to the underwire of her bra and turned to lie on her back with the toes of her left foot just on the outside of the covers. The bunching of her shirt felt uncomfortable under her back, but she didn't plan on staying in that position for long.\n\nBailey closed her eyes, thinking, Wait for it...\n\nJust as the door opened, just when Kent might get a look at her, Bailey let out a low, grumbling moan and rolled over to face away from him, letting her toe hook on the blankets to pull them over her body. If she'd done it right, and she had no real way to check except by the cool air flowing over her exposed skin, he ought to be able to see her from her feet all the way up to the small of her back.\n\nHearing the door close again -- this time completely -- she turned her head a little back towards him and let out a long, interrogative moan. \"Kent?\" she murmured.\n\n\"Who else?\" he whispered back. \"You alright?\"\n\n\"Yeah,\" she breathed out, let her neck relax so her head fell back on his pillow. \"Just had a long weekend. Then I made the mark and... sorry I used your bed.\"\n\n\"That's alright,\" Kent laughed lightly. \"I wasn't using it.\"\n\nHe's looking at my butt right now, right through these crazy see-through panties.\n\nBailey let out a theatrical yawn, stretching her legs and arching her back, letting the motion pull more of the covers off her.\n\n\"I did put a mark,\" she invited him over, knowing how much sleepiness still resided in her voice.\n\n\"I saw,\" Kent's footsteps approached her and the bed dipped as his weight settled on to it.\n\nWhen his left hand touched her cheek, she backed into him and noted with a rush that he'd switched into sweat pants at some point.\n\nBut I only put one tick mark on the board, she panicked, Is that enough?\n\nShe shrugged it off, knowing that something would work out. Either she'd come here with him or by herself in her own room later.\n\nKent's left hand worked its way around her hip, pulling her more tightly against him before his fingertips traced over her stomach.\n\nFeel how it trembles inside...\n\nHis erection pushed against her as she pushed her cheeks against him.\n\nIt's pointed down, though.\n\nKent ran his fingers along the waist seam of the panties.\n\n\"Thank you,\" she turned her head back and whispered. \"The clothes are very nice.\"\n\n\"Yes, they are,\" he breathed in her ear.\n\n\"Did you get a good look?\"\n\nKent made a non-committal noise.\n\nBailey shoved him hard with her hips, using her left more than her right so he ended up on his back. She sat up, facing away from him, and swung her left leg over his body, bending her knee to tuck it under her body so she straddled him.\n\nShe bent her right knee under herself as well, then set her weight down, her cheeks over his hips, and leaned her body forward over his knees.\n\n\"Can you see now?\" she asked over her shoulder, feeling the fabric of her panties stretching over her skin.\n\nShe turned her head to look over her shoulder and saw that her shirt had fallen over her cheeks. Grabbing the shirt from the front, she twisted the material and pulled it up her body, exposing her panty-clad flesh.\n\nKent's hands touched her cheeks, palms over the bare skin as well as that part covered in transparent fabric. \"Oh, yeah.\"\n\nBailey moved herself forward, down his body, until she found the tip of his erection -- grateful that in all the tussling around, he'd managed to get it pointed upward. Through his underwear, through his sweatpants, and finally through her frail panties, she let his manhood push her lips apart.\n\nKent grunted in response... and lengthened. Bailey lifted her body to give him a bit of space, then lowered herself again, taking the length of his shaft against her clitoris while the head...\n\nOh!\n\n...while the head pushed against her entrance. Even through three layers of clothing -- generously counting her panties as a \"layer\" -- she felt that slight intrusion.\n\nThat's not exactly what I meant to happen, Bailey gently lifted her hips and slid her ass up his body, pushing the head of his erection back toward her lips and clitoris.\n\nBetter, she supposed, although she knew she'd sacrificed a nice angle. The feeling of his shaft along her lips had brought her a touch of the divine.\n\nI can turn around, she thought, while another voice inside her said, but will you show him your breasts?\n\nSweating, her hips shaking, feeling a wave of heat and a cold sweat come over her body, she cleared her throat.\n\n\"I'm waiting,\" she put a touch of impatience in her voice. \"Can you get me from there?\"\n\nKent's right hand squeezed her right cheek, thumb catching the fabric while the fingers sank into bare flesh.\n\n\"On the right side, yeah.\"\n\nShe considered that, imagining how she looked from his point of view, and knew she'd have to take all five on the one side.\n\nUnless I turn around.\n\nBailey pushed down with her hips, squeezing his erection into his belly, pushing it into her lips. She heard him make a sound behind her, something between a grunt and a moan.\n\n\"Bai,\" he breathed, and she relented in her pressure.\n\nKent inhaled again, hardening against her body, and lifted his hand away from her right cheek. Bailey lifted her hips toward him a little, twisting herself a little to the right to let him know she was ready.\n\nWhen you've been spanked so many times, you know when it's coming,  a flash of realization struck her, the inhalation of breath into his lungs, the tightening of his abs, the sudden movement of his hand through the air. It's just enough for a pang of anticipation before-\n\nKent's hand cracked off the bare part of her ass, striking her in the hollow of her cheek, shaking her body and driving her down on his trapped penis.\n\n\"One,\" she grunted, setting her hips high for him again, keeping their genitals just barely touching.\n\nBailey felt his body twist, his stomach muscles locking, and the second slap soared in, striking even harder than the first.\n\nShe let out a long moan, gliding her hips forward so the tip of his erection gently tickled its way along her lips toward her vagina.\n\n\"Two,\" she whispered between gasps.\n\nThe third followed almost immediately, catching her by surprise. She let out a squeak of indignation as its stinging assault echoed in the quiet room.\n\n\"Jesus,\" she called out, sitting up straight and resting her entire weight on him.\n\nAfter a long thoughtful pause, she closed her eyes and slid forward, down his body, until the swollen head poked again at her vagina.\n\n\"Three,\" Bailey whispered.\n\nShe held her body like that, almost paralyzed, knowing Kent had no way to deliver his next spanking to cheeks now cowering against his own body.\n\nThen she moved, rotating her hips just slightly, grinding against her entrance, feeling an electrical charge fire up her spine to hit her brain so hard she almost fainted.\n\nNow you can do it.\n\nGingerly, she lifted herself up, pulled her left leg over his body beside her right, turned around, and straddled him once more, now facing him.\n\nFeeling the trembling of her lips, the fearful shaking of her chin, she kept her eyes down, focused on his stomach, and laid herself on his chest.\n\nI can't. I can't. I can't, her brain chanted at her. I can't show him my breasts. Not like this.\n\nThe burst of courage she'd ground out of his cock failed her on that score, so she settled back in to him, her knees bent, and let body slide down so his erection touched her lips..\n\n\"Almost done,\" she invited him, wiggling her hips back and forth so she tickled the head of his manhood.\n\n\"Bai',\" he said, gripping her left cheek now.\n\n\"Yeah?\" she teased, wiggling faster.\n\n\"I, uh,\" he gasped. \"I can't-\"\n\nHis hand came down, she thought, very much like the hand of Thor, assuming Thor was into spanking mortals really, really hard.\n\nHe's going to come, she realized, pushing down harder on his erection. He's going to come again, like before. But it's going to happen right up against me.... against my...\n\n\"Four!\" she squeaked, continuing her rotation.\n\n\"Gah!\" Kent grunted out, and she felt his erection twitch right against her vagina. His hand came flying down at the same moment, striking her left cheek with far more force than he'd used so far.\n\nThe pain didn't even phase her, because the sensation of his penis twitching against, knowing that he was right then blowing his load up against her pussy, sent her over the edge as well. Bailey jammed herself down on him, pushing his head against her hole as hard as the layers of clothing would allow, feeling his pulsations fighting against her own.\n\nKent drove his hips upward while his hands gripped both of her cheeks to hold her tight against. Bailey squeaked in surprise, feeling the pressure increase at her entrance.\n\nSlowly, their spasms died away, Kent's grip slackened, and Bailey feel onto the bed beside him, one leg still draped across his body.\n\nGasping and slightly tacked with sweat, she laid her head in the crook of his shoulder.\n\n\"Five,\" she whispered, some seconds later, prompting a burst of exhalation from Kent that might have constituted a laugh.\n\n\"Five,\" he acknowledged.\n\nA long pause ensued. The could be no pretense, between them, of what they'd just done. Of course, the thing in the shower hadn't been vague either.\n\nAlso, that's closest I've ever come to actually having something... inside me. I don't think Kent has been much further in his life.\n\n\"Tough weekend, you said?\" Kent murmured softly.\n\n\"Yeah,\" she smiled. \"Family.\"\n\n\"Feel better now?\"\n\nBailey thought about this and realized the truth of it.\n\n\"Much better,\" she gave him a nod.\n\nThe stress and exhaustion that her family and her worries about Kent and Laura had set in her brain has basically evaporated, and she couldn't even put it down to the orgasm.\n\n\"Clears up the mind,\" she added.\n\n\"It does,\" he agreed.\n\nAnother long, thoughtful pause broke out.\n\n\"The panties do look really nice,\" she said. \"I didn't know that green was such a nice colour on me.\"\n\n\"It is,\" Kent said. \"Wouldn't have known it without Laura's skirt.\"\n\n\"Yeah,\" Bailey tried not to stiffen up at he mention of her friend.\n\nKent inhaled as if to speak, but his words caught in his throat.\n\n\"What is it?\" she asked.\n\n\"You, ah,\" he stammered, \"you don't like her coming here by herself.\"\n\nBailey inhaled, compressing her lips, and tried to pick the right words.\n\n\"I didn't like you spanking her without me,\" she stammered. \"It's... it's mine to pay. She can help when I'm here but... not like that.\"\n\nKent nodded, but she knew by the hesitance in his motion that he didn't completely get it.\n\n\"I can't tell you not to spank her,\" Bailey shrugged. \"But she's my friend and I'd prefer not to... to be the recipient of charity. It's different when I'm here. I just don't like it happening behind my back.\"\n\n\"I guess I see that,\" he acknowledged.\n\n\"Look,\" she said finally, meeting his eyes directly. \"Imagine you're working on this jigsaw puzzle, or a Lego set, and you're almost done. Then you have to go out for a bit, and when you come back, somebody else has finished it for you.\"\n\n\"Oh!\" Kent's eyes widened.\n\nThat seemed to reach him, and she felt more confident in the sudden change in his body.\n\n\"I should go, though,\" she said. \"There's studying to do.\"\n\nShe crawled over top of him and out of his bed, taking a moment to face him wearing her t-shirt and panties. She waited until his eyes met hers and then she looked down at her new panties, inviting. His gaze swept down her body and rested lightly on the new garment.\n\n\"Nice,\" he complimented, taking in a long drink of her practically naked triangle.\n\nBailey smiled, wondering how she could do that and still not show him her breasts. She recovered her jeans, put them on and gave the whiteboard a little tap on the way out.\n\n\"One more dollar,\" she sang out lightly, then let herself out of the room."
    ],
    "authorname": "xtorch",
    "tags": [
        "spanking",
        "gift",
        "exhibition",
        "orgasm",
        "surprise",
        "panties",
        "transparent"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-10"
}