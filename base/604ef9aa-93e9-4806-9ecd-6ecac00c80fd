{
    "title": "I Will Love You Forever Pt. 2 Ch. 09",
    "pages": [
        "Milt's body wasn't discovered until late the next morning. A homeless man looking for a place to spend the day found the body and went to get the police. The man was questioned and then released after his whereabouts for the evening before and that morning were verified. \n\nNews of the body spread like wildfire and it wasn't long before the area surrounding the crime scene was crowded with people wanting a glimpse of the body.\n\n\"Oh my god!\" a woman from the crowd cried out, \"That's Milton Vaughn!\"\n\nFrom that point, things went down hill as people pressed closer to the car trying to verify what the woman had shouted out. Two hours later, the body was gone and the car towed away. Mr. and Mrs. Vaughn had been given the news and their grieving began. By evening, it was all over the campus and the grieving there began as well.\n\nEven Kenji, Patricia, Joel and Penny grieved when they heard the news. None of them had cared for the man but they hadn't wished him any harm either.\n\n\"Who would have done such a thing?\" Penny asked shocked.\n\nJoel and Kenji looked at each other. They knew who had done it as soon as they heard the news and it was a sobering reminder of how dangerous Andrew really was. If he killed one of his own, what else was he capable of doing?\n\n\"What do you think we should do?\" Joel asked. \"The police won't believe us and we have no proof.\"\n\n\"I know this.\" Kenji said softly, \"but we still have to try.\"\n\n\"Andrew? You think that Andrew did this?\" Penny asked.\n\nPatricia didn't believe it either, \"He wouldn't kill one of his own, I just don't see it.\"\n\n\"Kirei, his whole identity is that group. He is now aware that the others know of his weakness and that his position is going to be challenged. The only way for him to maintain his position was to remove the threat. Milt Vaughn was a threat to his position of authority so yes, I believe him capable of murder.\"\n\nThey sat looking at each other thinking the same thing but not saying it. If Andrew was willing and capable of killing one of his own, then he would kill one of them without batting an eye.\n\n\"Kirei, I want you to stay home from school...\"\n\n\"No.\"\n\n'It isn't safe...\"\n\n\"I said no.\" Patricia said softly bur firmly. \"We've waited and struggled too hard to get to this point but I want to say something, I don't think that we should call the police. What could we tell them? And they might think that you were the one who did it.\"\n\n\"She's right.\" Joel said, \"And what could we tell them? We have no proof.\"\n\n\"We must do something.\" Kenji said quietly.\n\n\"Kenji, think about this.\" Patricia said. \"We all know that you didn't do it but if the policed ask people at school, how many of them would back you? What about Andrew and his friends? If anything, they would say that you did it\" \n\nTears filled her eyes as she envisioned Kenji being taken away from them. He put an arm around her and hugged her. He couldn't deny that she had made some valid points.\n\n\"I'll call Nick and see what he says.\" Kenji said after several minutes of silence.\n\nPatricia relaxed but only slightly. She knew her husband and knew that he would do what he felt was right no matter what else happened.\n\n\"Call him.\" she said quietly. He would listen to Nick if he listened to anyone. \n\nShe heard him talking to Nick and then the soft click as he hung up the phone. \n\n\"He's coming over.\" Kenji said as he sat down. \"Kirei, I want your word that you will abide by his advice.\"\n\n\"Only if you do.\" Patricia replied.\n\n\"Kirei....\"\n\n\"I mean it Kenji.\" Patricia said, \"I think that he's more likely to shoot you than me.\"\n\n\"I think she's right Kenji.\" Joel chimed in. \"I can bring you any assignments and...\"\n\n\"No.\" Kenji said firmly, \"he will only come here.\"\n\n\"So you're going to go where you know he can find you?\" Patricia asked, \"I'm sorry but that's just plain stupid.\"\n\n\"Patricia...\"\n\n\"Don't you Patricia me!\" she replied pulling away from him.\n\n\"Kirei, come here.\" Kenji soothed as he moved closer to her. He glanced over to see that Joel and Penny had slipped away to give them privacy. When he was beside her, he wrapped his arms around her and hugged her. \"Alright Kirei, I will do as Nick suggests but we cannot stay here. Andrew knows this house.\"\n\n\"I don't care where we go I just don't want you hurt.\" she replied.\n\nNick was at the house fifteen minutes later with Hana in tow carrying new books for the children. \n\n\"They're in the back with Penny and Joel.\" Patricia said after greeting them with a hug and a kiss.\n\n\"Tell me what you know.\" Nick said as he sat in the chair across from them.\n\nWhen Kenji was finished, he spoke.\n\n\"I agree with both of you.\" he said. \"Kenji, I agree that Patricia needs to stay away from school but so do you. Andrew Kelley is holding you responsible for his problems and if given a chance, he'll kill you and not lose any sleep over it. I know that you're concerned about school so I've already talked with Paul; he's working on that end of it. Now, about the police, I agree that we need to do something but I'm not sure what. I agree with Patricia that if you go to them, no one will vouch for you if for no other reason than they're afraid. \n\n\"But I have to tell someone!\" Kenji insisted, \"If I remain silent, they will also think that I have something to hide.\"\n\n\"That's also true.\" Nick agreed. \"Alright, here's what we'll do, we'll call the police and then my friend Charles at the office. We'll meet here, you'll tell them what you know and suspect. That way we'll cover two bases, federal and local. If they should show up, call me and don't say a word until I get here, if they take you to the jail, don't panic. Patricia you call me and then Will in that order. If we don't answer, keep calling and call Abby and tell her to start calling too.\n\nNext, I want you out of this house. My house isn't an option, its being watched but I don't know by who which leaves Sally and Will's or Abby's house. My preference would be Abby's only because Lawrence Goodman doesn't know about that house.\"\n\n\"When do you want us to move?\" Patricia asked.\n\n\"Tonight but when its time to talk to the authorities, we'll do it here.\" Nick replied. \"I'll call Abby while you get the kids ready to go and I'll call Charles and Will too.\"\n\n\"Go on Kirei, I will come to help you shortly.\" Kenji said. He waited until she was gone to finish his conversation with Nick.\n\n\"She has been through so much and she is so frightened but tries not to show it.\"\n\n\"Both of you have been through a lot and you've always gotten through it.\" Nick said, \"And you'll get through this too.\"\n\n\"I need to go check on Patricia.\" Kenji said.\n\n\"Go ahead; I need to make those phone calls.\" Nick replied.\n\nKenji found Patricia in the children's room. He could tell by the way that she held herself that she was crying but trying to hold her tears back. When she heard him at the door, he watched as she quickly wiped her face and continued packing.\n\n\"Kirei....\"\n\n\"Why is it that for every step forward, we take three back?\" she asked. \n\n\"Kirei...\"\n\n\"All I want is for us to be left alone so that we can go to school and raise our children, am I asking for so much? And now Andrew Kelley wants to kill you...Kenji, when will this stop?\"\n\n\"You aren't asking for too much.\" he assured her as she turned her so that she was facing him. \"I am not afraid of Andrew Kelley...\"\n\n\"But I am! He can take you away from us.\"\n\n\"Kirei, that isn't going to happen, he will be stopped before he hurts another person.\"\n\nPatricia laid her forehead on Kenji's chest and prayed that he was right.\n\n********\n\nAndrew stayed in his room once the gun was cleaned and put away. He jumped every time the phone rang or if someone came to the door. He didn't begin to relax until early afternoon. Once the anxiety was gone, he was filled with a sense of exhilaration. He had done it! He had retaken control of his group! None of them would dare question or betray him again.\n\nIt was dinnertime before he slipped out of his room and down the stairs. He could smell the meatloaf baking in the oven and the potatoes that would be mashed cooking on the stove. What amazed him was that he was hungry and that he had been able to push Milt Vaughn out of his mind so easily.\n\nHis father was in the living room reading the paper when he went downstairs to help with dinner.\n\n\"They found a body over at that old abandoned grocery store.\" \n\n\"Yeah? Whose?\" Andrew asked hoping that he sounded casual.\n\n\"College kid... Milton Vaughn, you know him?\"\n\nAndrew debated as to whether he should lie or tell the truth and went for a mixture of the two.\n\n\"I know who he is; he was in one of my classes.\"\n\n\"Not a friend huh?\" His father asked.\n\n\"No, not a friend.\" Andrew confirmed and that hadn't been a lie. He didn't consider any of the men in his group friends. \"Too bad that he died though, what happened to him?\"\n\n\"Says here a gunshot wound to the head, he didn't stand a chance.\"\n\n\"That's too bad...is there any mention of a service?\" Andrew asked really not caring.\n\n\"Nope.\"\n\nAndrew looked at his father and knew that he wanted to say something more but didn't know if he should.\n\n\"I'll go see if mom needs any help.\" Andrew said and left before his father decided to ask whatever it was that he was thinking. He thought about the gun in his room and wondered if he shouldn't get rid of it and opted not to, no one knew that he had it, not even his gang. The only thing that they could do was suspect him and they couldn't go to the police with suspicions.\n\nHe mashed the potatoes and licked the masher clean. For as long as he could remember, that had been his favorite part of making mashed potatoes. When dinner was ready, he ate heartily, savoring every bite of the delicious dinner set before him.\n\nAfter dinner, he even washed the dishes, shooing his mother out of the kitchen when she tried to help.\n\n\"What's gotten into you?\" she asked as he took the stack of dirty dishes from her hands.\n\n\"Can't a son help his mother?\" He asked, \"Now go and put your feet up.\"\n\nAndrew made quick work of the dishes, said good night to his parents and went to his room under the guise of studying. Once the door was closed, he knew that he wouldn't be disturbed unless it was something urgent. The thought that he should dispose of the gun crossed his mind again but it would mean that he would have to sneak out of the house with it again and then find a place to hide it. Then the issue was what he would tell his father if he asked to see it. That question was the deciding factor, the gun stayed where it was. He really wished that there were a way that he could blame Milt's death on the 'melting pot' but that would involve planting the gun and that brought up the same old issues plus a few new ones.\n\nAround nine, he opened the door of his bedroom and listened for any signs that someone was still awake. The door to his parents' bedroom was closed and there wasn't the tell tale strip of light indicating that anyone was up. He looked in the opposite direction relieved to see that the bathroom door was open and the light off. He slipped back into his room, shut off the lights and tiptoed down the stairs avoiding the step that had squeaked from the time they moved into the house.\n\nFor the third time, the thought to get rid of the gun crossed his mind but he was already out of the house and halfway down the block when the thought came. He kept walking until he reached his destination, Michael Hathaway's house. He hadn't heard from the group's leader for quite some time and wanted to talk with him. He had no idea if the man was home or not and if he wasn't, he would excuse himself and leave.\n\nThe kitchen lights were on when he got there and he could see a pretty blond-haired woman moving around the kitchen. Hathaway's wife he thought and then wondered why he had never mentioned her. Andrew crossed the street, went up to the front door; rang the doorbell and waited.\n\n******\n\nMarji jumped at the sound of the doorbell. It was after nine and she couldn't imagine who could be at her door at such a late hour. For a second, she thought that it might be Michael but Meyer told her that he was in South Carolina stirring up trouble down there. \n\nShe peeked through the curtains and saw a handsome blond haired young man patiently waiting for the door to be answered. She cracked the door open wide enough so that she could speak to the man on her porch.\n\n\"Can I help you?\" she asked warily.\n\n\"Yes ma'am, I'm looking for Professor Hathaway.\" Andrew said politely.\n\n\"He isn't here.\"\n\n\"I see... do you know when he'll be back?\" \n\n\"If there is a god, never!\" Marji replied and slammed the door closed.\n\nAndrew stood at the door wondering what she meant by her statement. He was about to ring the doorbell again when a voice stopped him.\n\n\"Hey kid.\"\n\nAndrew turned around to see the biggest man he had ever seen in his life staring at him. Not only was he huge, he was Jewish.\n\n\"Hathaway doesn't live here anymore now move on.\"\n\n\"Where is he? What did you Jew bastards do to him?\" Andrew demanded.\n\nThe man stared at Andrew unfazed by the insults. He took out a cigarette, lit it and took a long draw from it before answering.\n\n\"We broke his fingers and told him that if he ever came around here again that we'd kill him. Obviously you're one of his kind so let me give you fair warning, if I ever see your ass around here again, I'll break your fingers, you come back after that... you're dead now beat it before I kick your skinny ass.\"\n\nAndrew opened his mouth to say something but clamped it shut when the big man took a step toward him. The man didn't move making Andrew step around him, when Andrew passed in front of him, the man blew a stream of cigarette smoke in his face. Andrew could hear the man laughing as he hurried away. He wondered if what the man said was true; if it was... then he was now the highest-ranking member of the group. Once he realized that, all concern for Michael Hathaway vanished.\n\nHe headed back home whistling a happy tune not at all concerned about Milt Vaughn's family, the gun or his mentor. Things were as they should be for the moment, the melting pot would be dealt with in the not too distant future but first, the commotion about Milt had to die down.\n\nMarji stepped out onto the porch after Andrew left and offered the big man a cup of coffee.\n\n\"Thank you.\" she whispered looking up at him.\n\n\"Taint no trouble.\" he replied, \"Meyer is like a brother to me.\"\n\n\"I made some cookies, would you care for some with your coffee?\"\n\n\"That would be nice... my Anna used to make the best sugar cookies.\"\n\n\"Used to?\" Marji asked.\n\n\"Yeah... She died sometime back having a baby... he died too.\"\n\nMarji heard the note of loneliness in Malachi's voice and it triggered her own feelings of loneliness.\n\n\"Wait here; I'll go get those cookies.\"\n\nAs she put a dozen of the freshly baked cookies on a plate and poured herself a cup of coffee, she wondered if it was possible for her to be happy with someone again.\n\n********\n\nBecca rubbed her growing stomach and in spite of herself began to love the baby growing there. As time passed, she thought less and less of getting rid of it but more and more of how to protect it from its father. Each passing week brought out a new facet of Ty's personality. The only thing that he hadn't done was hit her and she had no doubt that it would happen eventually. Her friend Susan warned her that it would happen and tried to get her to leave with her.\n\n\"And go where?\" Becca asked, \"And besides, as long as dinner is ready and I suck his cock, he's happy. He won't hit me, he wants this baby.\"\n\n\"What about after the baby comes?\" Susan asked, \"What happens when he starts complaining that his food isn't right or that you're not sucking his cock right? Becca, you have got to get out of here before it's too late!\"\n\nBut she hadn't listened. The very things that Susan had warned about were already happening, the eggs were too done or not done enough, the meat was too tough or too salty, she sucked his dick too hard or not hard enough, the bottom line was; the only thing that she had done right was to get pregnant.\n\nBecca jumped when she heard the car door slam shut, he was angry about something and it more than likely had something to do with her father. She was honest with herself, the only reason that Ty still had a job was because of her and the baby and he knew it.\n\nTy only put up with her father because it was a means to an end. She had stopped defending her father weeks ago; it only turned Ty's attention on her. Becca rushed to the oven, took the chicken and potato casserole out and set it on the counter for his inspection. She braced herself for the string of questions that he would ask as soon as he was in the door.\n\n\"That bitch been here?\"\n\n\"No.\"\n\n\"You talk to her on the phone?\"\n\n\"No, you told me not to.\"\n\n\"You talk to anybody today?\"\n\n\"My mother, she wants to take me shopping for baby things and then lunch.\"\n\n\"Who else is going?\"\n\n\"No one, just us.\"\n\n\"What did you do today?\"\n\nAnd on the list went finally ending with, \"Do what you do best.\" as he unzipped his trousers right there in the kitchen. \n\nToday was no different except that the answers to the questions varied and out of consideration for her, he sat in a chair for his twice-daily blowjob.\n\n\"What's wrong with you today? Suck it like you mean it!\" he demanded and for the first time, he hit her. It wasn't a hard hit but a hit nonetheless.\n\nIt surprised her but yet it didn't and she increased her efforts to bring him off as quickly as she could. Afterwards, he helped her to her feet, kissed her cheek and apologized for the slap.\n\n\"I'm sorry darlin' it was a rough day at work with that pain in the ass father of yours. What's for dinner?\"\n\nShe could tell that he wasn't happy with it but he didn't complain until afterwards.\n\n\"The potatoes weren't done but other than that, it was good.\"\n\n\"Thank you and I'll do better with the potatoes.\"\n\nWhile Ty read the paper, Becca cleaned up the kitchen and reluctantly got ready for bed. She hated bedtime almost as much as she hated the time of day when Ty came home. He seemed obsessed with her larger more sensitive breast and insisted on sucking the nipples until she came. In the past, she had loved having her nipples sucked but not anymore. She had come to hate his touch and wished to god that she had lived her life differently and that included her involvement with Andrew Kelley.\n\nWhen she heard about Milt, she knew who killed him even if she had no proof. On some level, she still loved him but she also still considered him a coward because he was too afraid to admit to the truth about the black woman and that he was too afraid to do what she thought needed to be done. Becca had changed her thinking about the small group that had earned Andrew's hatred. The fact of the matter was she didn't hate anyone. The only exception was her husband. She only supported Andrew because she thought that she loved him.\n\nWhat she would have said had Andrew admitted his attraction to the black woman, she didn't know and it no longer mattered. All she knew was that she was trapped in a marriage with a man who hated her parents and who was going to move another man into their home.\n\n\"How do you know this man?\" She asked not two weeks before.\n\nShe had been horrified to find out that Ty had just been released from prison when she met him and that his crimes had included robbery, assault and battery and a murder that he had never been tried for. What amazed her was the pride in which he spoke of his crimes and the crimes of the man who would be coming to live with them. \n\n\"I bet you're wondering why I told you all of that.\" he said, \"it's because no one's going to believe the college slut and you'll be too ashamed to tell mommy and daddy.\"",
        "The sad part about it was that he was right or so she believed.\n\nBecca washed her face, brushed her teeth and crawled into the bed nude as Ty liked her.\n\n\"I want to feel and see those titties bounce.\" he told her once. \n\nBecca blinked back tears as she heard Ty's footsteps approach the bedroom.\n\nGod how she hated him.\n\n*********\n\nKenji, Patricia, Will and Nick sat in the living room waiting for the local police and Charles to come to the house for the interview. Patricia held onto both of Kenji's hands as if she was ready to pull him away from anyone who wanted to take him away from her.\n\n\"Kenji, take Patricia to the library for a few minutes.\" Will said when he saw the local police car pull up. \"We'll come get you when we're ready for you.\"\n\n\"Why? What's wrong?\" Patricia asked.\n\n\"Nothing.\" Nick assured her, \"We just want to make sure that everyone is on the same page.\"\n\n\"Come Kirei.\" Kenji said as he stood.\n\nPatricia hesitated and then followed Kenji into the library leaving the door open.\n\n*******\n\nDetective Oscar Briscoe drove up to the house and wondered how a Japanese man could afford a house nicer than the one he lived in. He also wondered why he was at the home. From what he understood, the young Japanese man that he was interviewing hadn't witnessed the shooting but was going to have two attorneys with him. His curiosity grew when he found out that there was going to be a federal government agent there as well.\n\nHe parked the car, looked around and walked up to the front door that was opened before he had a chance to ring the doorbell.\n\n\"Detective Briscoe, come in.\" Nick said stepping back to let the man into the living room. \"The federal agent isn't here yet but should be arriving shortly.\"\n\nNick introduced Will and offered refreshments.\n\n\"No thanks but I am curious as to why there are two lawyers plus a government agent present for this interview especially if the young man has nothing to hide.\"\n\n\"Let's just say that we're covering our bases.\" Will replied.\n\n\"Southern boy?\" Briscoe asked.\n\n\"South Carolina.\" Will replied.\n\n\"Beautiful state. I've passed through there a time or two.\" Briscoe replied.\n\n\"Charles is here.\" Nick announced and went to the door.\n\nThe two men shook hands and joined Briscoe and Will in the living room. Once again, introductions were made.\n\n\"Now that we've officially met.\" Nick said, \"Let's make sure that we all understand what's happening here and the ground rules. We are all aware of the murder that took place at the vacant grocery store. We are also aware that there are no suspects. Kenjiro Takeda is able to give you a viable suspect but it's up to you to prove it. What that means is that at no time is Mr. Takeda to be taken into police or government custody nor is he to be interviewed without either Will or myself present. If for some reason, you need him either at the government building or at the police station, either Will or I have to be contacted first. Are we in agreement?\" Nick asked.\n\n\"One more thing, \" Will said, \"If by some chance he is taken to either place before we get there, he is to be placed in a secured room and not with the general population, every one of his civil rights had better be honored, are we in agreement?\"\n\n\"Just one question,\" Briscoe said, \"who is this man that he has not one but two lawyers?\n\n\"Someone whose rights have been violated just because of his nationality.\" Nick replied, \"Do we have an agreement?\"\n\n\"From a government standpoint you do.\" Charles said.\n\n\"Oh hell... deal.\" Briscoe said his curiosity getting the better of him.\n\n\"Before I bring them out.\" Nick said, \"I want you to understand something, if anything happens to them or if you renege on our agreement in anyway, you will answer to me.\"\n\nThe statement although made in front of Charles, was meant for the detective.\n\n\"I understand.\" Briscoe said.\n\n\"I'll go get them.\" Will said.\n\nA few minutes later, Kenji and Patricia were sitting side-by-side holding hands as Kenji told them everything that he knew and had experienced.\n\n\"Ok, so he doesn't play nice.\" Briscoe said, \"That doesn't mean that he's a murderer. Have you ever seen him with a gun?\"\n\n\"No.\" Kenji replied.\n\n\"What makes you believe that he did it?\" Charles asked.\n\n\"Andrew Kelley is at heart a coward. On the day of our last confrontation, a member of his group... the man that was found dead in his car, challenged him. The moment that challenge was issued, Andrew knew that he was losing control of the group. He had to make a decision as to how he was going to regain his control and keep it. Killing Milton Vaughn was the only solution.\" Kenji replied.\n\n\"Do you own a gun Mr. Takeda?\" Briscoe asked.\n\n\"No, I do not. I hate guns and we have small children in the house.\"\n\n\"So if I asked to search your home and property, you wouldn't object?\"\n\n\"Now wait....\"\n\n\"I have no objections as long as you do not destroy anything.\" Kenji replied cutting Nick off. \"When would you like to do this search?\"\n\n\"How about now?\" Briscoe asked watching Kenji's reaction.\n\n\"If you wish.\" Kenji replied, \"I have nothing to hide.\"\n\nThirty minutes later, the house was swarming with police who were for the most part respectful of the house and its contents. Two hours later, the search was over and they turned up nothing. Briscoe kept an eye on Kenji as the house was searched and had mixed feelings about what he saw. While he liked and even admired the calm demeanor that Kenji displayed, he also didn't like it. He got the feeling that Kenji could lie through his teeth and no one would know the difference. He also got the feeling that while for the most part he was a peaceful man, if his wife, children or anyone close to him was harmed, he would be extremely dangerous.\n\nAt one point during the search, a crash came from the kitchen. Briscoe noticed that Kenji didn't respond to the crash but responded to his wife who was extremely nervous. In an effort to put her at ease, Briscoe went to the kitchen and reminded the searchers to be more careful. When he went back to the living room, Kenji had his arm around Patricia who was trying hard not to cry.\n\n\"It wasn't the tea set was it?\" she asked.\n\n\"No ma'am, it was a casserole dish.\" Briscoe replied. \"I did see the tea set, it's beautiful...\"\n\n\"Can I go get it?\" Patricia asked.\n\n\"Sure, I'll go with you.\" Briscoe offered.\n\nNick didn't trust him and went with them to the kitchen where an officer was mumbling something about the \"Japs and niggers living better than us.\" as he reached for the blue tea set that Hana had given Patricia several years before.\n\n\"Donnelly!\" Briscoe snapped, \"Get out!\"\n\nThe officer had the sense to look embarrassed when he turned around to see Briscoe, Patricia and Nick standing behind him.\n\n\"I was just saying...\"\n\n\"We heard what you were just saying,\" Briscoe interrupted, \"now get out.\"\n\nHe waited until the officer was gone, apologized to Patricia and began to make excuses.\n\n\"He's a good man but came home from the war with nothing....\"\n\n\"My husband s family had everything taken from them during the war.\" Patricia said, \"he went to one of those camps so don't tell me how hard it was. That's no excuse for what he just said.\"\n\n\"You're right and again, I apologize.\" Briscoe said\n\nNick took the tea set down and handed it to Patricia who took it from him with reverence and walked away. Briscoe watched her and understood why she had been so afraid; she thought that they were going take her husband away from her again. Unfortunately, he couldn't promise her that they wouldn't but he would keep his word and protect him as much as they could if he were to be arrested.\n\nNow that the house was empty of police searching the house, Briscoe turned to Kenji.\n\n\"Thank you and I apologize for the broken dish.\"\n\nKenji didn't reply but gave a slight nod of his head, his light brown eyes fastened onto Briscoe's dark ones. Briscoe returned the look but blinked first and then quickly looked away before speaking.\n\n\"I think that we can rule Mr. Takeda out provided that his alibis check out.\"\n\n\"What alibi?\" Patricia asked, \"I told you that he was here with me and the children.\"\n\n\"I know and I understand.\" Briscoe replied, \"But it's expected that the wife would speak in the defense of her husband. I'm not saying that you're lying, I'm just saying that wives aren't considered to be good alibis.\"\n\n\"He was with us!\" Patricia replied panicked again.\n\n\"Kirei, it's alright.\" Kenji soothed, \"I understand and see his point.\" he added.\n\n\"Did anyone see you here?\" Briscoe asked.\n\n\"I do not know for certain.\" Kenji replied.\n\n\"What about your neighbors? Did you talk to any of them?\"\n\n\"We are not close with our neighbors.\" Kenji replied.\n\nA tap at the front door and the sound of someone coming in interrupted any further conversation.\n\n\"Detective, we found someone who saw him here the night of the shooting.\" Donnelley said.\n\n\"Who is it?\" Briscoe asked inwardly glad.\n\n\"The old guy next door, he says that Mr. Takeda here and he talked about plants and about the Takeda's boy helping him with a little light yard work.\"\n\n\"Is that true?\" Briscoe asked Kenji.\n\n\"That would be Mr. Morelli and yes we did talk that evening about those things.\"\n\n\"Why didn't you say something?\" Briscoe asked.\n\n\"Would you have still searched our home?\" Kenji asked.\n\nBriscoe blushed.\n\n\"And you would have found out that I was here as my wife told you.\" he added.\n\n\"Are you satisfied?\" Will asked Briscoe and Charles.\n\nBoth men indicated that they were and left the house after exchanging phone numbers. Nick peeked out of the window to make sure that the local police had really gone and sat down across from Kenji and Patricia.\n\n\"I know that you don't want to miss classes but I really think that you should stay at Abby's with the kids. Paul will take care of the school end of things but I also think that Joel and Penny should stay away from school too. If Kelley doesn't see you, he may go after them to draw you out.\"\n\nKenji closed his eyes and nodded, so many lives were being affected by the hatred that Andrew Kelley had for him.\n\n\"I will talk to Joel and Penny.\" he said, \"It is because of me that they are in danger.\"\n\n\"No it isn't.\" Patricia said, \"It's because of Andrew Kelley that they're in danger. If it wasn't us, then it would have been someone else that he would have made his targets.\"\n\n\"You are right.\" Kenji conceded as he stood up to call Penny.\n\n**********\n\nTwenty-one year old Isadora Waters looked out of the train window with a mixture of fear, anxiety and excitement. She was the first of her family to leave Greenville, Mississippi and the first of her family to graduate and to go to college. She held the small bag containing food in her lap and patted her pockets to make sure that the ten dollars that her family had managed to scrape together for emergencies was still there.\n\nCollege was something that had always been a dream that she hadn't thought would come true but her she was on her way to California to attend UCLA. Isadora still couldn't believe how it came to be that she was leaving the state of Mississippi. The way that it had happened had convinced her that the hand of god had been at work.\n\nShe had been cleaning the office of one of the attorney's when a client from California came in and caught her looking at the law books. What surprised her was that the client was a tall, handsome, elegant looking older black man. His clothes and hair were impeccable and of the style of day.\n\nShe quickly put the book away and proceeded to continue cleaning hoping that the man wouldn't say anything to Mr. Whitman.\n\n\"Do you know how to read girl?\" The man asked in a clipped voice.\n\n\"Of course I do!\" Isadora snapped irritated that he would assume that she was illiterate.\n\n\"So you can read those books?\" he asked.\n\nIsadora's face flushed with anger, \"I said I could read didn't I?\" she snapped.\n\n\"Good, then prove it.\" the man said as he walked past her and took the first book he saw down from the shelf, opened it and handed it to her. \"Read.\" he said.\n\nIsadora took the law book and began to read the paragraph. When she reached the end of it, she handed the book back to the man with a triumphant smile on her face.\n\n\"Impressive, but what does it mean?\" he asked.\n\nIsadora hesitated for just a moment and gave him her interpretation of what the paragraph said. He didn't respond immediately but assessed her. He took down another book and opened it.\n\n\"Read.\" he commanded.\n\nShe read the paragraph and gave him her interpretation of it without him asking.\n\n\"Do you enjoy learning?\" he asked.\n\n\"Yes sir.\" Isadora replied remembering her manners.\n\n\"If you could be anything, what would it be?\"\n\nIsadora didn't have to think about it, \"a lawyer.\"\n\n\"Really?\" he asked, \"what kind of law?\"\n\n\"Criminal law.\" she replied again without hesitation.\n\n\"That's very interesting.\" he mused almost speaking to himself, \"why that area of the law?\" he asked looking at her intently with dark brown eyes.\n\n\"I want our people to have representation in court and I want the Klan to be held accountable for their actions.\" she replied.\n\n\"Did they do something to you?\" he asked.\n\nIsadora didn't answer, she didn't want anyone to know of the shame and humiliation that she had suffered at the hands of several white boys from town and she hadn't been the only one. She also knew who had killed the Johnson's son Tyler but being where they were and the sentiment about blacks, no one had spoken up even anonymously. She was saved from telling the man none of his business by the return of Mr. Whitman.\n\n\"Noah Jackson! Why didn't you let me know you were coming?\" he said shaking the black man's hand and pulling him into an embrace.\n\n\"I know how you enjoy surprises.\" Noah replied laughing.\n\n\"Where are you staying?\" Mr. Whitman asked.\n\n\"I don't know yet, I just arrived.\" Noah replied.\n\n\"Then you'll stay with us!\"\n\n\"George, I can't do that and you know why.\"\n\n\"If you're talking about Alice, she'll get over it.\"\n\n\"George....\"\n\n\"My mind's made up... by the way, how long are you in town for?\"\n\n\"A few days, I have a legal issue that I would appreciate your help with.\" Noah replied.\n\n\"Care to tell me what this is about?\" George asked.\n\nNoah looked over at Isadora and then back st George.\n\n\"I think that this is best discussed in private.\" Noah replied.\n\nGeorge gave Noah a curious look and then turned his attention to Isadora.\n\n\"Noah, have you met Isadora?\"\n\n\"Yes, we've been chatting.\" Noah said with a small smile.\n\n\"Isadora, \"George said, \"Why don't you take the rest of the afternoon off and don't worry, you'll get your full pay.\"\n\n\"Yes sir.\" Isadora said.\n\nShe put away her cleaning supplies and headed out of the office looking around to make sure that she wasn't being followed. She made her way home without incident calling out that she was home when she entered the house.\n\n\"Package here for you.\" she called out when he heard Isadora come in.\n\n\"For me?\" Isadora asked frowning.\n\n\"You name's on it.\" Betty replied as she came into the living room, \"Why you home so early?\" \n\n\"Mr. Whitman had a visitor and sent me home early.\" Isadora replied as she reached for the package.\n\n\"There's no postage on it.\" she said frowning.\n\n\"It was left on the porch. I found it when I went outside.\" Betty said.\n\nIsadora lifted the heavy package, sat it down again and looked at it.\n\n\"Ain't you gonna open it?' Betty asked her curiosity getting the better of her.\n\nIsadora sat next to the package and opened it gasping in surprise. The package contained several law reference books that she recognized from Mr. Whitman's office. A sealed envelope was lying on top of the stack of books. She recognized the strong handwriting as Mr. Whitman's.\n\n\"Isadora,\n\nI am getting new reference books and thought that you might like these. I wish that there were some way that I could help you more in your education for you are a remarkable and very intelligent young woman. However, as it stands, all that I can do at the moment is give you the books that I no longer have use for.\n\nGeorge Whitman ESQ.\"\n\nIsadora ran her hands over the books not knowing what to think or say. Apparently, he knew that she had been reading his books even though she had been careful to put them back in the exact same place that she found them in. As she touched the books, she realized that the books were probably as close to college as she was going to get.\n\nBetty looked down at her daughter and wished that they could help her fulfill her dream but didn't say anything. What was there to say? Isadora knew and accepted the way things were and never complained about it. Betty saw the books as a mixed blessing. They obviously pleased Isadora but they were also a reminder of what she couldn't have.\n\n\"Want me to make the biscuits?\" Isadora asked tearing her eyes away from the books.\n\n\"Don't you want to read your book?\" Betty asked surprised.\n\n\"I can read later and besides, I still can't get my biscuits to come out like yours do.\" Isadora replied.\n\nBetty smiled at her. Of all of her six children, Isadora was the one who loved to cook with her even when she was busy with school and work. The others, four boys and a girl still lived at home but were busy with their own pursuits with furthering their educations being the furthest thing from their minds.\n\nIsadora had always been different in that she was never truly interested in the opposite sex and what little interest she had dropped to zero after that night. She never said what really happened to her but Betty had a good idea of what happened and had stopped trying to get Isadora to talk about it.\n\n\"You just work the dough too hard.\" she said patting Isadora's shoulder.\n\nThat conversation seemed like it had happened years ago instead of a few months ago and it was barely two months ago when she found out that she was going to college courtesy of Mr. Noah Jackson and Mr. George Whitman. The train sped through towns and cities that she had heard of but had never been to. She kept her eyes peeled to the window and watched the landscape as it raced by. It wasn't until the conductor walked through announcing the next state that it really hit her. She was leaving home. A fit of profound homesickness hit her so hard that tears sprang to her eyes and she could hardly catch her breath.\n\nThe temptation to get off at the next stop and to catch the first train headed back home almost overwhelmed her until she remembered why she was leaving and her goals. One face in particular popped into her memory. It was the face of the boy who would have been...\n\n\"Ticket!\" the conductor snapped glaring at her as if he had been waiting all day instead if just arriving at her seat.\n\nIsadora held out the ticket by the edges not wanting to touch him any more than he wanted to touch her. After he was gone, she settled back into her seat and looked out of the window until it was too dark to see.\n\n******\n\nLawrence was pleased with the way things were going in California and if things continued to go as planned, he would be there in a matter of weeks. He had stopped sharing his escape plans with anyone, his cellmate included. He couldn't take the chance of something going wrong and this was going to be his one and only chance. If he failed, he was dead. He knew this with a certainty that he couldn't shake. He even knew who would kill him, Jacob Lincoln and he even knew why.\n\nThe one thing that he never told anyone was that he didn't know that the family was inside the house when it was torched. By the time he found out about it, it was too late and he wasn't even sure that he would have cared even if he had known about it beforehand. He never said anything because it gave him credibility and made him look strong and willing to do whatever it took to get the job done. That silence had now come back to bite him on the ass.",
        "He rarely went anywhere alone and for all practical purposes turned the leadership of the group over to Duke. He still had the final say in any decisions but for the most part, he remained low key and out of sight biding his time.\n\nHis cellmate 'junior' as Lawrence had taken to calling him had been watching him for several weeks not speaking unless he was spoken to first. He knew that Lawrence was up to something and wanted to know what it was not only because he was curious but also because whatever he found out would help him get out of prison early. The warden had made him that promise the day that he moved him into the cell with Lawrence.\n\nJunior, aka Saul had really come to like Lawrence and felt guilty for his deception but he and his family came first. He had to get home so that he could help his family. As it was, they were barely surviving and the younger boys needed a man in the house.\n\nHe hadn't anything to report to the warden in a few weeks and he was getting nervous. How he was getting information to the warden was ingenious, he worked for the warden doing odd and ends jobs. Lawrence, seeing the advantage of it encouraged it and pumped him for information each time he returned to the cell. That Lawrence never accused him of telling the warden anything was surprising but he really didn't know anything important and he kept up his role of being the grateful kid who needed a friend.\n\nEvery once in a while, Lawrence would call him Kenny to which he always responded which seemed to endear him to Lawrence even more but not enough that he was forthcoming with any useful information. If anything, Lawrence had become more secretive.\n\nSaul stood up, stretched and left the cell for his daily stroll around the yard. He no longer needed Lawrence or anyone else to go with him; everyone knew that to touch him was signing his death warrant. He walked outside, scanned the yard looking for someone in particular, and kept walking when he didn't see him. It didn't matter, he had no more information for him than he did the warden. After walking the yard several times, Saul sat down and waited for the lunch bell.\n\nAll he could do was wait and hope that Lawrence let something useful slip.\n\n*******\n\nJacob saw Saul walking the yard but didn't make himself known. He knew that the boy had nothing to tell him and saw no point in jeopardizing the boy's life any more than he needed to. He went back into his cell and began to finalize his plan for revenge and for his death. \n\nOver the past weeks, he had begun reading the bible again and begging god to understand why he had to do what he was planning to do.\n\n\"You understand don't you? Wasn't it you that taught an eye for an eye?\" he prayed one night as his cellmate snored above him. \"He's got to pay for what he did and if see fit to deny me access to you and heaven then so be it.\"\n\nAfter that prayer, he fell asleep satisfied that he was doing the right thing.\n\nThe weeks passed slowly and he was getting impatient. He had found the perfect spot for his vengeance and even if they were interrupted, it would be too late for either of them. Each day that he walked, he carried a little of what he needed to the designated spot. The small pile of flammables steadily grew and in a few more weeks, he would have more than enough for what he intended to do. He wanted to hear Lawrence Goodman squeal like a stuck pig and beg for mercy. Nothing else would do.\n\n******\n\nThe warden watched Lawrence, knew that he was up to something, and wished that he would just do it and get it over with so that he could be rid of his ass. He also knew that Jacob Lincoln was up to something as well and had finally figured out what it was-he was planning to kill Lawrence Goodman. For several weeks after he figured it out, Ellis pondered over what he should do with his knowledge and decided to use it to his advantage. He had given orders not to disturb Jacob Lincoln, only to keep an eye on him. \n\nEllis found himself to be every bit as nervous as he imagined Lincoln to be as he planned the murder of Lawrence Goodman. When all was said and done, he would be rid of Goodman and he hoped that the subtle message that he was sending out would be received.\n\n*******\n\nPenny and Joel took the news about not going back to school much better than Kenji had anticipated. He apologized repeatedly for the inconvenience and for inadvertently placing them in danger. Joel had finally had enough and spoke up.\n\n\"I think that you're wrong about that.\" he said. \"If I remember correctly, the problem really began when you stood up for me. If you had kept going instead of stopping, we might not be here so if you have to lay the blame somewhere, lay it here.\"\n\n\"Joel, this isn't your fault.\" Kenji said.\n\n\"And it isn't yours.\" Joel retorted, \"So stop acting like it is and put the blame where it belongs and that's with Andrew Kelley and those who think like him. The important thing right now is making sure that everyone remains safe and if I have to miss some classes in order for that to happen, then I will. Penny and I have talked about this and we think that we all need to stay together. The only place that's big enough and will give us all some privacy is Penny's place.\"\n\n\"What about your roommates?\" Patricia asked.\n\n\"Well as you know two of them are out of the country and the other one is gone for a few weeks.\" Penny replied.\n\nPatricia looked at Kenji who was looking at Penny. \n\n\"How many people know where you live?\" he asked trying to make a point.\n\n\"I don't know.... I see what you're getting at so what are you suggesting?\" she asked.\n\n\"That we take the children to Nick and my mother and that we stay here.\" Kenji replied.\n\n\"What?\" three voices said in unison.\n\n\"Think about it, we can take turns keeping watch and we can continue our studies.\" Kenji said. \n\n\"I don't know about this.\" Patricia said, \"We don't know how long this is going to continue and the children will get homesick.\"\n\n\"Then you will go with them.\" Kenji replied calmly.\n\n\"No!\" Patricia shouted. \"I won't do it! I don't know what the answer is but I know that isn't it.\"\n\nThe debate went on late into the night with Kenji and Joel taking turns keeping watch for suspicious vehicles. Finally, Kenji made the decision.\n\n\"The children will stay with mother and Nick until this is resolved one way or another and you Kirei will stay with them.\"\n\n\"No...\"\n\n\"Yes kirei, they will need one of us so that they won't be frightened.\"\n\n\"They might not be frightened but what about me?\" she asked.\n\n\"We will talk everyday and I will see you as much as I can without endangering you. Penny can stay there as well.\"\n\n\"Kenji please, there has to be another way.\" Patricia said her voice tight.\n\n\"I'm sorry kirei but there isn't.\"\n\n\"Umm excuse me.\" Penny said quietly, \"but could you explain to us why you can't or won't come with us? I'm missing something here.\"\n\n\"It is me that he is after.\" Kenji replied. \"He will not come after you if I am not with you.\"\n\n\"Kenji, what if he takes one of the children?\" Patricia asked, \"Please think about this! In addition, what about Ralph? He's perceptive and he would know that something is wrong.\"\n\nAfter arguing for another hour, it was decided. They would all go to Nick and Hana's house. It would be tight but doable. Patricia almost cried with relief and silently thanked Penny for pushing the subject. The next thing was to call Nick and see if it was possible for them to stay there. None of them remembered that his house was being watched as well as Will and Sally's house.\n\nNick reminded them of that fact when they called early the next evening.\n\n\"I still don't know whose watching the house but I do agree that you all need to stay together.\" he said. \"Stay put for now and I'll call you back.\"\n\nKenji hugged Patricia as tight as he could without hurting her. \n\n\"I am sorry that I upset you.\" he murmured.\n\n\"It isn't you, it's the whole situation.\" She replied. \"I just want it to be over with.\"\n\n\"As do I.\" he replied and then had a thought. There was one place that he hadn't thought about going to. He released Patricia with a kiss and excused himself to the kitchen to make a phone call. The time had come for his father to prove what he said about accepting Patricia and the children.\n\n******\n\nHiroshi played with his son while Dai made dinner in the kitchen of their new home. It was much too big for them but the price had been right and he figured that they could close off the part of the house that wasn't being used. As of yet, Kenji, Patricia and the children hadn't been to the house and it wasn't because he didn't want them there. The business had done so well that Hiroshi paid off his employer who had originally bought the business simply because he was bored, bought it from him and had opened another nursery. The holidays were coming and he was especially busy making sure that he was ready for the season. Dai kept after him to invite everyone over but he was just too busy.\n\nTonight was a rare night that he was home early enough to play with the baby before he was tucked into bed for the night. The smells coming from the kitchen made his stomach grumble noisily. Having worked through lunch, he was hungry and hoped that dinner would be ready sooner as opposed to later. He could hear Dai's soft soprano as she sang a song in Japanese as she made their meal of fish, rice and steamed vegetables. There was a break in her singing when she came to the living room and spoke to him.\n\n\"Why do you not call your son while I finish making our dinner?\" she asked quietly.\n\n\"I will as soon as dinner is over.\" he replied.\n\n\"After which you will sit in your chair and fall asleep.\" she half teased. \"Dinner will be ready in fifteen minutes, which is plenty of time for you to speak with your son and the brother to our child.\"\n\n\"You are right.\" Hiroshi conceded as he got to his feet and headed to the small room that he decided would serve as his office. The phone rang just as he reached the door. He frowned and hoped that there wasn't a problem at one of the nurseries. \n\n\"Hiroshi Takeda.\" he said crisply trying not to sound impatient.\n\n\"Father?\" Kenji said.\n\n\"Kenjiro? I was just about to call you! It has been far too long! How are my daughter and grandchildren doing?\" he asked.\n\n\"They are well.\" Kenji replied, \"How are Dai and my little brother?\"\n\n\"They are well,\" Hiroshi replied. \"Your classes are going well?\"\n\n\"Yes, Patricia, Joel, Penny and I are doing well and school is part of the reason that I am calling.\"\n\n\"What is it? Do you need money?\" Hiroshi asked.\n\n\"No but we need something else.\"\n\nHiroshi forgot about dinner as Kenji told him about the group at school, how he knew the murdered student and ending with Andrew Kelley.\n\n\"You must come here.\" Hiroshi said before Kenji could ask the question. \"And Joel and Penny must come too.\" he added grateful that he could do something to help improve the relationship with his son.\n\n\"Are you certain?\" Kenji asked. \"I have no idea of how long this will continue.\"\n\n\"I am sure and you are welcome to stay for as long as you need to. The only thing is that there are no beds in the other rooms but we will figure something out.\" Hiroshi said already thinking.\n\n\"I don't know how to thank you.\" Kenji said the relief evident in his voice.\n\n\"It is I who should be thanking you.\" Hiroshi replied. \"I have not been the best of fathers and I am pleased that you are giving me a chance to help. When will you arrive?\"\n\n\"Is tonight too soon?\" Kenji asked.\n\nHiroshi hung up feeling exhilarated. He was finally doing something to earn back some of the honor that he had lost in the eyes of his oldest son. He practically ran to the kitchen to give Dai the news. She smiled at him when he told her that Kenji, Patricia, the children and their friends were coming to stay with them.\n\n\"Then we had better eat and get the rooms ready.\" she said secretly relieved that they were coming. She was becoming concerned about Hiroshi and worried that he was slipping back into his old mindset. Kenji's phone call had just prevented that and for that, she would be eternally grateful to him.\n\n*****\n\nKenji went back to the living room and announced that they were all going to his father's house.\n\n\"Is he alright with this?\" Patricia asked.\n\n\"He offered before I could ask him.\" Kenji replied. \"Joel, how long will it take you to take Penny home and get back here?\"\n\n\"Two hours tops and that includes stopping at Abby's for my things.\" Joel replied.\n\nKenji nodded, \"That gives us plenty of time to get the children ready and ourselves as well. I don't need to remind you to exercise caution.\" he said.\n\n\"No you don't and we'll be back in two hours.\" Joel said taking Penny's hand and leading her toward the door. \n\nAfter they were gone, Kenji called Nick and told him where they were going.\n\n\"Good thinking although I have to confess that I'm surprised that he offered. When you call John, Hattie and Abby don't give them an exact location. It'll be safer for them that way.\" Nick paused and continued speaking, \"I know that this seems like overkill but I would rather be overly cautious than not cautious enough.\"\n\nKenji didn't disagree with him and said so. After he hung up, he helped Patricia gather their things and the children and waited for Joel and Penny to come back.\n\n******\n\nErnie sat at the dinner table and picked at his food. His stomach churned as he thought about his role in the whole 'melting pot' issue. That could have been him that Andrew murdered. He found that even though he had no friends per se, he was glad that he was out of the group. He also realized that in a round about way, Becca had saved his life. The desire and need to hurt her had long passed and he hoped that she was doing well.\n\nHe pushed the peas around on his plate not noticing the concerned looks that his parents exchanged.\n\n\"Ernie, what's bothering you?\" his father Jack asked after a long silence and a supportive nod from his wife Nora.\n\nHe was going top say nothing but changed his mind. He needed to talk to someone even if it was his parents. He knew that they would be disappointed if not angry but then he could move on.\n\nTwo hours later, they knew the entire story. He left nothing out and by the end of it, he was crying.\n\n\"That could have been me!\" he exclaimed, \"Andrew could have killed me for disobeying him! I guess I got off easy compared to Milt Vaughn.\"\n\n\"Alright son, slow down.\" Jack said gripping Ernie's arm.\n\n\"Tell us why you joined this group.\" he said softly. \n\nThere was no trace of anger in his voice, which almost made it worse as far as Ernie was concerned but he tried to answer the question.\n\n\"I... I guess I wanted to belong somewhere.\" he said looking down. \"I guess I thought that Andrew was it. At first it was just talk, I mean we never hurt anyone other than some name-calling and then things started to change. The thing with Becca Cartwright was the thing that essentially got me kicked out of the group and as odd as it seems, I'm glad that it happened.\"\n\n\"What about the student whose hand you helped break?\" his mother asked, \"is he alright?\"\n\n\"Yes, he's fine... I still can't believe that I did that to him.\" Ernie replied.\n\n\"What are you going to do about this?\" his father asked.\n\n\"I know what I should do but how do I face them after what I've done to them?\" \n\n\"That's for you to work out.\" His father replied. \"But Ernie, we're disappointed. This isn't what we taught you.\"\n\nThe pain of hearing the disappointment in his father's voice was worse than a physical slap.\n\n\"I know and I'm sorry.\" Ernie replied.\n\n\"I appreciate that but we're not the ones that you need to apologize to. You've already started to make things right by going to someone and telling them what happened but I don't think you'll be at peace until you talk to this group that you call the melting pot.\" his father said.\n\n\"I know... do you think that I should tell the police about Andrew?\" Ernie asked already knowing the answer.\n\n\"I think that you should tell someone.\" his father replied.\n\nWhile his mother cleared the dishes, Ernie called the police station.\n\n*******\n\nDetective Briscoe was about to head home for the day when his phone rang. \n\n\"So much for an early night.\" he growled as he picked up the phone.\n\n\"Briscoe.\" he snapped. \"Who is this?\" he asked. \"I'll be there in twenty minutes.\"\n\nHe hung up the phone, grabbed his jacket and headed for the home of the latest person who believed that Andrew Kelley was the one who murdered Milton Vaughn. The first question that came to his mind was whether Nick Alexander or the FBI agent had paid the young man a visit. He hadn't missed the familiarity between the two men even though he hadn't said anything. He also knew that the relationship between Kenjiro Takeda and Nick was much more than it appeared and wondered about it. He didn't get the feeling that it was a homosexual thing and the way that the Japanese touched his wife didn't support that theory but still...\n\nTwenty minutes later, he was parking his car in front of the home of another person who thought that Andrew Kelley was capable of murder.\n\n********\n\nAndrew cleaned the gun and angrily put it back in the box. He had gone back to Hathaway's house hoping to run into the Jew bastard that had humiliated him by sending him packing like a child. It was a big risk but one that he thought worth taking. The difference between this time and when he killed Milt was this time he hadn't been afraid. However, he knew that he needed the element of surprise but he had been the one who had been surprised.\n\nHe took his time getting to the house on constant lookout for his target; he touched the gun in his pocket relishing its weight and the feel of the cool metal against his fingers. He was almost to the house when he heard a voice behind him.\n\n\"Hey kid, you don't listen so good do you?\"\n\nAndrew froze, touched the gun in his pocket and turned to face the man who was smoking a cigarette as if he didn't have a care in the world.\n\n\"Get out of here.\" the man growled as he blew cigarette smoke in Andrew's face.\n\nAndrew pulled the gun out of his pocket and aimed it at the man who didn't even blink but continued to smoke his cigarette as he watched Andrew.\n\n\"That's one of those Japanese pistols isn't it?\" he asked flicking his cigarette ashes to the ground.\n\nAndrew didn't answer as he raised the pistol aiming at the man's heart. Still the man didn't react. He continued smoking his cigarette while keeping his eyes on the gun.\n\n\"You know,\" The man said as he took another puff of his cigarette, dropped on the ground and stomped on it, \"you just lost your opportunity to kill me.\"\n\nBefore Andrew knew what was happening, the man had moved and was holding the pistol in his hand. He removed the bullets, put them in his pocket and handed the gun back to a stunned Andrew. \n\n\"Shooting a man unawares is the work of a coward.\" He said and walked away leaving a very angry Andrew staring at his back.\n\nAndrew stood there for several minutes angry and humiliated before he walked home. He looked at the shoebox that contained the gun and tried to figure out what to do. The only bullets that he had left were in the pocket of the Jew and he had no idea of where he could get more. As he sat on the floor of his room, Andrew realized something; he was impulsive. Everything that he had done was done without giving any thought to the ramifications. Confronting the Jew was a case in point. He had gone in search of the man without a real plan; all he had cared about was the result. It was time for that to change.\n\n**************\n\nTwo weeks had passed since Milt Vaughn's murder. There had been a massive turn out for the funeral that included Andrew and the rest of his gang, Kenji, Patricia, Penny and Joel. The two factions sat on opposite sides at the church each keenly aware of but not acknowledging each other. Ernie sat with his parents staring straight ahead. The thought that it could have been him in the casket beat at him as warm tears ran down his face. He and Milt hadn't been real friends but he had been an ok guy.",
        "It had been Ernie's hope that Andrew wouldn't be at the funeral because he didn't want to show his face or because he had been arrested. But there he sat dressed in a dark suit and supposedly mourning along with everyone else. Ernie's mom took his hand in hers like she used to do when he was a child and upset about something. His father put an arm around him and gave him a gentle squeeze.\n\nHe caught sight of Kenji and Patricia sitting off to his right. He still hadn't apologized to them because they hadn't been at school and he didn't know where they lived. As soon as the service was over, Ernie rushed over to Kenji and Patricia.\n\n\"Please, could I talk to you?\" he asked nervously.\n\n\"What do you want?\" Joel asked.\n\n\"I need to ... can we go outside?\" Ernie asked. \"I want to say something to all of you.\"\n\nKenji looked at Ernie for several long seconds before he nodded his consent.\n\nA few minutes later, they were standing in the back of the church out of sight and hearing range of the other mourners.\n\n\"I...\" Ernie's face burned and his heart thudded but he kept going. \"I know that I did and said some horrible things to you and I just wanted to say that I'm sorry. I know that it doesn't mean much but I really do feel badly about ... everything.\"\n\n\"Did Andrew send you?\" Patricia asked.\n\n\"No, I'm not a part of that group anymore. I should have never been a part of it... I understand if you don't believe me but I just wanted to apologize.\"\n\n\"You are aware that Andrew saw you talking to us aren't you?\" Penny asked.\n\n\"I know.\" Ernie replied, \"And it doesn't matter.\"\n\nKenji finally spoke after a brief silence.\n\n\"Thank you for your apologies but you must forgive us if we are cautious in accepting it.\"\n\nErnie didn't know what to expect but he expected more of a reaction than he was receiving but he understood.\n\n\"Thanks.\" he said and walked away.\n\nOne week after the funeral, Ernie got a visitor. He was studying for an exam when his mother called up to him.\n\n\"Ernie! You've got company!\"\n\nErnie frowned; he had no idea of who would be coming to see him since he had no real friends at school.\n\n\"Send them up!\" he called back.\n\nA few seconds later, Andrew Kelley was standing in Ernie's bedroom.\n\n\"How you doing?\" he asked as he looked around Ernie's bedroom.\n\n\"What do you want?\" Ernie asked ignoring the question.\n\n\"As you know, we're down a man because Ernie was murdered... want back in?\" Andrew asked.\n\nIf Andrew had asked him the same question a few months ago, the answer would have been a resounding yes but now....\n\n\"No thanks.\" Ernie said not giving an explanation.\n\nAndrew was actually surprised by Ernie's answer. While he hadn't expected him to say yes right away, he hadn't expected him to say no either.\n\n\"Why not?\" he asked.\n\nErnie decided to be frank with him.\n\n\"I initially joined your group out of a need to belong somewhere. I never believed that shit you peddle but you're the son of a war hero and it felt good to be accepted. But you know what I finally figured out? You're a friend to no one but yourself and you know what else? Milt was right; you're a coward who hides behind other people. Did you warn Milt that you were going to shoot him? Or did you just walk up to him and do it?\" Ernie asked.\n\nAndrew took a step back, coming here had been a mistake. Once again, he had acted rashly but then again it made him realize something. If Ernie knew that he killed Milt, so did other people other than his group and even they weren't sure. Then the question was, had anyone spoken to the police? He was almost certain that none of his remaining group did, they were too afraid of him but Ernie....\n\n\"Did you tell anyone that you think that I killed Milt?\"\n\nThere was something in Andrew's voice that alarmed Ernie so he lied.\n\n\"Do you think I'm nuts?\" he asked. \"Of course not! Just because I don't want to be a part of your group doesn't mean that I'm a snitch!\"\n\nAndrew gave Ernie a long, hard look before breaking the gaze. He wasn't sure that he believed him but he had no proof that he was lying.\n\n\"I didn't do it.\" Andrew said softly.\n\n\"Alright.\" Ernie replied but said no more.\n\nThey stood facing each other for several more minutes before Andrew walked out without looking back or saying another word.\n\nErnie sat on his bed relived that Andrew was gone; it would be too soon if he never saw him again.\n\n*******\n\nDetective Briscoe sat in the chair across from Captain Marshall's desk. Nick, Charles and will were also in the small cramped office that was not only hot, but also reeked of cigar smoke.\n\n\"What's going on?\" Briscoe asked.\n\nCaptain Marshall leaned back in his chair, picked up a half smoked cigar, looked at it and put it back in the ashtray.\n\n\"Tell us what you know about Andrew Kelley.\" he said.\n\nBriscoe shrugged, \"His name keeps popping up in the same sentence as Milt Vaughn but I haven't been able to prove anything. Why?\"\n\n\"Andrew Kelley is the leader of a group that's based on the teachings of the Klan.\" Captain Marshall replied.\n\n\"Yeah and?\" Briscoe asked not seeing the point.\n\n\"Vaughn was in the same group.\" Nick replied. \"We all know that in and of itself that it means nothing but maybe we can get to another member of his group.\"\n\n\"What we need is someone who saw him with the damned gun in his hand!\" Captain Marshall exclaimed. \"All we've got is the word of two people who say that he did it but have no proof and let's consider this... both of them have a beef with Andrew Kelley... Mr. Takeda because Kelly has tried to make his life hell and his group was after him and the other guy Ernie whatever his name is was kicked out of the group for disobeying a direct order. So... what I want to know is why the government and two lawyers are sitting in my office and why you're so interested in this case.\n\nCharles spoke.\n\n\"I don't know if you're aware of this or not but the President has initiated a commission to investigate the lynching of black people in the south. I happen to be part of a task force that is keeping an eye on things here in the west coast. For the moment, the Klan doesn't have a strong hold out here but it isn't for the lack of trying. Andrew Kelley is the head of a Klan like group. If he killed Milt Vaughn, how soon do you think it will be before he either kills again or has his group do it? \n\nWe're not here to try to tell you how to run your investigation, we're here to help you catch this kid and I think that the best way to do that is to see if we can talk to someone from his group. Now, are you going to work with us on this or do I need to make a phone call?\"\n\nCaptain Marshall bristled at the threat and almost told Charles to make the call but bit his tongue. \n\n\"Hold on.\" he said. \"There's no need for that. I was just stating the facts as I see them and you have to admit that I made some valid points.\"\n\n\"No one is denying that,\" Nick said, \"but we have to keep this kid under surveillance... is there anyone in your squad that can pass as a college kid?\"\n\nCharles spoke up again before Captain Marshall could say anything.\n\n\"Good idea and I've got someone on the way. There's too much of a chance that someone will recognize someone from here. He should be arriving any day now.\"\n\nThe meeting lasted for a few more minutes with the captain agreeing to having an unmarked car watching Hiroshi Takeda's house. As they walked out of the office, Briscoe stopped Nick.\n\n\"The next time you decide to go to my captain, come to me first, is that clear?\"\n\n\"Sure.\" Nick replied and walked away.\n\n**********\n\nIt was time.\n\nJacob Lincoln made one last check of his supplies and talked with his accomplices all of who had nothing to lose or gain by helping other than they hated the white man. Jacob knelt before his cot and prayed one last prayer asking God and his family to understand what he was doing. The last thing he did before leaving his cell for the last time was to pick up the bible, caress it lovingly and lay it on the cot of his cellmate a convict that he had taught to read.\n\nHe left the cell without speaking to anyone; he had already said his goodbyes and started on what seemed to be his usual walk. He took his time getting to his destination and once there, double-checked the small building that had been an outhouse to make sure that there was no way that Lawrence Goodman could escape. Taking no chances, he had covered the wooden toilet seat with a piece of wood and nailed it down. \n\nAfter a final inspection, he took the gasoline that had been so carefully stolen and hidden and poured it over the wooden building. Now all he had to do was wait.\n\n********\n\nSaul watched Lawrence through hooded eyes. He still didn't know exactly what Lawrence was planning only that whatever it was, it was going to happen soon. He also knew that the black inmate was waiting for something too but when he asked about it, the response was always the same.\n\n\"It's better that you don't know.\"\n\nJacob had been the only one kind to Saul when he first arrived. While he wasn't overly friendly toward him, he always spoke to him and tried to teach him how to survive in prison. He hadn't even gotten mad when he found out that he would be sharing a cell with Lawrence and it hadn't taken him long to figure out why- he wanted information.\n\n\"I've been good to you haven't I?\" he asked.\n\n\"Yes.\" \n\n\"It's time for you to return the favor.\" Jacob told him.\n\n\"What do you want me to do?\" he asked.\n\n\"Nothing more than keep your eyes and ears open and tell me what you see.\" Jacob replied.\n\n\"That's it?\" Saul asked not sure of what he was expecting.\n\n\"That's it but I don't want you risking your life, find me only when you have something to tell.\"\n\nFinally, after weeks of nothing, Saul had something to tell Jacob. Lawrence was going to be taking a walk along the west side of the prison-alone. That struck Saul as odd because Lawrence rarely went anywhere alone and if he did, it was always to the west side of the prison. \n\nSaul only knew where Lawrence was going because he followed him once out of curiosity and because he was hoping to have something to report to Jacob and the warden. He even went back once to see what was so special about the place. It didn't take him long to realize that it was where Lawrence sent and received messages from the outside. He not only shared that little tidbit with the warden, he shared it with Jacob as well.\n\n\"Tell me when you know he's going to take that walk again.\" Jacob told him, but what Saul didn't understand was why the warden hadn't said the same thing. He didn't ask about it, it was none of his business as long as it didn't interfere with the warden's promise.\n\nSaul watched as Lawrence left the cell. The thought to warn him that something was going to happen never crossed his mind. He stretched out on his cot and thought about his family who he was sure had to be starving.\n\n********\n\nLawrence ignored Saul. He had more important things on his mind. If things continued to go as planned, he would be leaving the prison in a few days. He had made that he did absolutely nothing to draw the attention of the warden and he was too close to his goal to screw it up now. As he prepared to go for his walk, he thought about the people that he was going to visit. Sally was at the top of his list and then her new husband and then Nick Alexander and the Jap he had living with him. He also did a mental calculation of how much cash he had, one-hundred and fifty dollars. It wasn't much but it would get him to California to that nice new house that Tyrone had managed to get by getting married.\n\nAs he left the cell, he glanced over at Saul. He wished that he could take him with him, the boy had taken the edge off his missing Kenny so much but it was impossible. Saul had to stay but he would make sure that Duke continued to look after the boy.\n\nLawrence nodded curtly at the guards as he passed them. He took his time, taking great pains to look casual when he wanted to run. The ten-minute walk seemed to take twice as long but he was finally at the wall. He looked around to make sure that no one was watching him although for as long as he had been coming here, he had never seen another soul.\n\nHe reached into the overgrowth searching for the smooth rock that didn't belong there. His hand had just touched it when he heard someone behind him and then felt the hard crack on his head.\n\n*********\n\nJacob waited patiently for his friends to bring Lawrence to him. He didn't turn around when he heard footsteps approaching from behind him.\n\n\"We got him.\" a voice said. \"Where you want him?\"\n\n\"In the building.\" Jacob replied.\n\nHe watched as the two men sat Lawrence on the covered toilet seat inside of the outhouse. Jacob walked over to him and slapped him hard across the face.\n\n\"Wake up you miserable son of a bitch, its time for judgment.\"\n\nLawrence slowly opened his eyes, shook his head and finally focused on Jacob.\n\n\"What do you think you're doing?\" he snapped as he tried to stand up.\n\n\"It's time that you paid for your sins.\" Jacob replied.\n\n\"Look you stupid nigger...\"\n\nA blow to his stomach delivered by Jacob silenced Lawrence. Lawrence bent over gasping for breath and sat back on the toilet seat. Suddenly, he sniffed the air and smelled the distinctive odor of gasoline. He looked at Jacob, slowly understanding what was about to happen. \n\n\"Wait!\" he yelled out.\n\n\"Did you laugh when you heard that my family screamed like stuck pigs?\" Jacob asked ignoring Lawrence's pleas that he listen to him.\n\n\"Did my family beg for your men to listen as they doused the house with gasoline?\" he asked as he picked up a gas can.\n\nLawrence ran out of the outhouse and right into the arms of one of Jacob's men.\n\n\"Where are you goin?\" he asked as he manhandled Lawrence back into the outhouse.\n\n\"I didn't know!\" Lawrence screamed. \"I didn't know until afterwards!\"\n\n\"You shouldn't have sent your men there at all, it was me you wanted.\" Jacob said as he doused the contents of the gasoline can over Lawrence's head.\n\n\"Sweet Jesus don't do this!\" Lawrence pleaded.\n\n\"I imagine that my family prayed and begged too. Funny, you don't seem so brave now.\" Jacob said as he backed away from the outhouse.\n\n\"You'll hang for this! Let me go and no one will know... I swear.\"\n\n\"Do you really think that I care if I live or not?\" Jacob asked, \"I died the day that your men killed my family.\"\n\nLawrence watched horrified as Jacob closed the door to the outhouse, screamed when he heard the chains going around it to lock him in, begged for mercy as he heard tree branches and anything that would burn being stacked up against what was to become his funeral pyre.\n\nSeconds later, he smelled smoke and heard the crackling of the flames as they ate the dried wood and moved closer to the wooden building in the center.\n\n\"Please! Help me!\" Lawrence screamed at the top of his lungs. \"Oh God! I'm sorry! Let me out!\"\n\nHis screams resonated through the air, intensifying as the flames licked at the sides of the building. \n\nJacob sent his accomplices away and sat on a tree stump listening to Lawrence's screams for mercy turn into screams of pain and horror. He was oblivious to the sickening sweet smell of burning human flesh and to the fact that Lawrence had gone silent. He sat not moving from the stump long after the screams stopped. It was over; his family was avenged.\n\nHe stood up, took a last look at what used to be an outhouse and walked away not looking back. It was time to own up to what he had done. What surprised him was that he actually felt guilty. This wasn't what his wife would have wanted him to do. On the other side of that guilt was satisfaction. He could die in peace knowing that Lawrence Goodman was no more.\n\n*******************\n\nBy the end of June 1947- U.S. Congress proceedings are televised for the first time. Percival Prattis becomes the first African -American new correspondent to be allowed into the United Sates of Representative and Senate press galleries. Edwin Land demonstrates the first instant camera-The Polaroid Land camera in New York City. Jackie Robinson is the first African-American professional baseball player. He signs a contract with the Brooklyn Dodgers and was the first African-American to play Major League Baseball. Seaman Harold Dahl says that he saw six UFOs near Maury Island in Puget Sound, Washington. The first widely reported Kenneth Arnold near Mount Rainier, Washington makes UFO sighting.\n\n*******************\n\nMusic\n\nTop records: \"Across The Alley from the Alamo\" - The Mills Brothers\n\n\"All of me\"- Frankie Lane\n\n\"Always\"- Frank Sinatra\n\n\"The Anniversary Song\"- Al Jolson and numerous others\n\n*********************\n\nCivil Rights\n\nThe Fellowship of Reconciliation organizes the \"Journey of Reconciliation\". Integrated groups rode interstate busses in Virginia, North Carolina, Tennessee and Kentucky. The goal was to test compliance with the Morgan decision.\n\nJackie Robinson played his first game with the Brooklyn Dodgers on April 15. He was the first African-American to play Major League Baseball since the 1880s\n\nThe Presidential Committee submits its report on October 29, 1947. Among its recommendations are ending segregation in the armed forces and federal legislation making lynching punishable. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "kenjiro",
        "patricia",
        "racism",
        "japanese",
        "andrew"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-09"
}