{
    "title": "The Sex Talk",
    "pages": [
        "Nobody gave me the sex talk. Sex wasn't discussed openly in my family, so I was left to form my ideas about sex from movies and anecdotes from friends. Naturally, I had a lot of unrealistic expectations about sex and it's taken me many years to feel comfortable thinking about and expressing my sexuality.\n\nI don't want the next generation of women in my family to go into their relationships with the same ignorance and misinformation that I did \u2013 so I've started talking. \n\nThis is 'The Sex Talk' I wrote up for my niece when she was planning to pop her cherry. It's not 'advice' as such \u2013 but a list of terms & topics to think about before your first time. It could also be a useful conversation-starter for women who are starting a new relationship or wanting to re-think some aspects of their sex life with their current partner.\n\nINTRODUCTION\n\nSex is not Magical Love Paradise. Just like every other aspect of life, there are times it can be great, okay or downright awkward. Somebody will fart. Somebody will touch a spot that just doesn't feel right. Somebody will orgasm too soon \u2013 or not at all \u2013 leaving one or both of you dissatisfied. It's how you deal with those situations that can turn it into a positive experience and not a negative one.\n\nHere is a glossary of ideas to think about & talk about with your partner, which will help you establish an honest, trusting, satisfying, and exciting sex life together.\n\n1. Holding hands & hugging \u2013 Don't underestimate the value of physical touch \u2013 or even close proximity without physical touch. If you are in tune with one another, these simple forms of intimacy can be emotionally affirming & romantically rewarding.\n\n2. Kissing \u2013 Lips on lips, or lips on other parts of the body. Sex is most fun when your whole body gets involved. There are lots of sensitive parts of the body to discover together \u2013 neck, back, hips, feet, elbows, breasts, etc. You can enhance this experience with scented massage oils or edible body paint \u2013 or go au natural. \n\n3. Foreplay \u2013 Whatever you do to get & stay in the mood. This can range from cues as simple as eye contact, verbal affirmation or non-sexual touch, to any of the items listed in this glossary (and a many more \u2013 use your imagination!)\n\nSide note on Foreplay - Honest Communication: \n\nYour partner wants to please you & might have some good guesses of what you will enjoy, but you have to tell him what does or doesn't work for you. \n\n-If he's doing something you like \u2013 carry on! \n\n-If he's doing something that's nearly right \u2013 guide him so he's spot on. (You can make suggestions verbally or simply move him like a puppet \u2013 whatever works best for both of you.) \n\n-If he's doing something that feels weird or uncomfortable \u2013 tell him (nicely) right away. If you act like you're enjoying it because you don't want to interrupt the moment/offend his ego, he will continue on in ignorance, thinking he's rocking your world. It might even become a standard move in his repertoire so nip it in the bud! \n\n-If he isn't doing something you would like him to do \u2013 ask (nicely) or just guide his hands/body to give him the hint.\n\n-These pointers work on the flipside too \u2013 let him know you're open to guidance in finding ways to make him feel amazing.\n\n4. Penetration \u2013 Will it hurt? Not necessarily. Will you bleed? Not necessarily. Everyone is different. Go with the flow & keep communicating. If it's uncomfortable, ask him to slow down and give you time to adjust. If it's actually painful, reverse a step and go back to foreplay \u2013 your body will work with you better if you are relaxed. Your body produces its own lubrication \u2013 for some girls that is all they need, but you may find you need some extra help. You can buy a bottle of lubricant from the supermarket and keep it in your bag just in case. This can be useful for your first time, or if you are a bit tender after multiple sessions, or just to try out a different sensation. (Tip: lubricant can be sticky. Use sparingly & add more if you need it.)\n\n5. Orgasm \u2013 Women can typically have two types of orgasm. Clitoral (external) & vaginal (internal). If you're very lucky you can get both at the same time. Achieving orgasm is not a guaranteed thing every time you have sex \u2013 sometimes it can take a long time for a woman to achieve orgasm or it may elude her completely. \n\nTips to increase your chances of achieving O: \n\n-Start from a good mental space. If you are annoyed with your partner you won't be in the right frame of mind to relax and be trusting physically and emotionally.\n\n-Indulge in lots of foreplay before penetration. (Women are more likely to reach orgasm from direct clitoral stimulation than penetration \u2013 that said, if your partner is coordinated enough to do both at the same time you have hit the jackpot.)\n\n-Know thyself \u2013 set aside some private time to experiment with yourself. If you are comfortable with the way your clitoris looks/feels, and learn how to use it confidently, then you have hugely increased your chances of showing your partner what to do with it.\n\n-Don't think about it \u2013 Relax. Have fun. If you get there, that's great! If you don't, you can always try again later.\n\nSpecial talents:\n\n-Some women can achieve multiple orgasms in a row. Just because you've had one doesn't mean it has to be over. You can keep going and see if your body gives you another. \n\n-Some women can achieve orgasm from stimulation of the G-spot (essentially pressing on the clitoris from the inside). There are lots of articles online on the mechanics of this if you'd like to try it.\n\n-Some women can experience female ejaculation \u2013 if the orgasm is especially intense you may ejaculate clear fluid from glands near the urethra. It is not wee, but there may be enough to leave a sizeable damp patch on the sheets, which can be quite disconcerting if you are not expecting it.\n\n6. Common Sex Positions \u2013 There are lots of ways to do it. The standard ones are;\n\n-Missionary \u2013 boy on top\n\n-Cowgirl \u2013 girl on top\n\n-Doggy \u2013 boy behind\n\n-Standing \u2013 may be face-to-face or boy behind. If the boy is buff he can carry the girl. \n\nYou aren't restricted to one position during sex \u2013 shift around whenever you feel like it. Once you try the basics, there are lots of ways to vary them. There is no right/wrong way to do it \u2013 though you will find your own favourites. \n\n7. Oral Sex\n\n-Fellatio \u2013 Girl's mouth on boy's bits. You can use this as an element of foreplay to the main event or as the main event itself. The testes/perineum/anus can be very sensitive for some guys so you can experiment with touching if he is comfortable with that. (Tips: Semen can taste somewhat salty or bitter - dependant on diet. Some people are comfortable swallowing it, others aren't. Do what feels right for you.)\n\n-Cunnilingus \u2013 Boy's mouth on girl's bits. You can use this as an element of foreplay to the main event or as the main event itself. In addition to the clitoris, the labia/vagina/perineum/anus can be very sensitive for some girls so he can experiment with touching if you are comfortable with that. Some guys love this activity. Others find it a bit intimidating. (Tips: If you are feeling self-conscious, have a shower beforehand so you feel fresh. If you are worried about flavour/odour, you can use a scented or flavoured lubricant. Trimming/waxing your hair down there can also give you an extra confidence boost, but this is completely down to personal preference. You can lie down, sit on the edge of a bed/chair or even stand - whatever is most comfortable. Visual communication can be limited, so you may need to communicate vocally or physically to let him know if he's doing it right.) \n\n-69 \u2013 Fellatio & Cunnilingus at the same time \u2013 physically challenging, especially if there is a significant height difference, but twice the fun. \n\n-Rimming \u2013 Oral stimulation of anus. Some people find this extremely arousing \u2013 to others it's just gross. If you do want to give it a try, good personal hygiene is imperative.\n\n8. Anal Sex \u2013 This idea may repulse you, or make you feel curious. This may involve external touching, penetration of fingers, penis or another object. In the event that either of you would like to experiment with anal sexual activity, there are a few must-know tips. \n\nHealth & Safety: \n\n-Don't get anything stuck up there. (The human bum has strong muscles that will either push something out or suck it in. If you want to put something in a bottom that is not fingers/penis attached to the other person's body, it is advisable to us an adult toy specifically designed for the purpose. Emergency doctors have crazy stories about what people get stuck in their bottoms. The most disturbing example I heard about was a frozen chicken.) \n\n-It is important that no bacteria from the anus enters the vagina or you can get a nasty bacterial infection. (i.e. don't touch/penetrate the anus and then touch/penetrate the vagina without washing thoroughly first).\n\nComfort: Same advice for first time sex \u2013 go slowly. Use lubricant. Stop if you experience discomfort/pain. \n\nCLOSING THOUGHTS\n\nGood sex is a vital part of a healthy relationship, so make it a part of your normal conversation. Reflect together on what you enjoy the most. Discuss any issues or worries you might have. Suggest new ways you'd like to try it. (When the mind-blowing excitement of just seeing your partner naked starts to wane, there are lots of ways to keep it fresh \u2013 positions/locations/toys \u2013 the possibilities are endless).\n\nReserve the right to change your mind. Something that weirds you (or him) out now might end up being your favourite thing in a few months/years. Be willing to try new things \u2013 and retry them again at a later date to double-check if you might like it.\n\nSo, enough talking... Go and have fun!"
    ],
    "authorname": "Embracingwhatis",
    "tags": [
        "kissing",
        "foreplay",
        "virgin",
        "penetration",
        "female orgasm",
        "female masturbation",
        "sex positions",
        "oral",
        "anal",
        "communication"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/the-sex-talk"
}