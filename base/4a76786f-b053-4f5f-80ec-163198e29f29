{
    "title": "Hampered in His Plans Ch. 05",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 24 - Release of Agony \n\nTeresa closed Amy's eyes and pulled the sheet over her just as the nurses came in. I had Buddy in my arms as we left the room.\n\n\"Commander,\" Teresa said, barely able to speak, \"I... I want to lead the Funeral Procession, and the Honor Guard, for her funeral.\"\n\n\"Of course.\" I said. There was a small unit of Police Officers that served as pallbearers if someone died indigent, and of course for deceased current or former Police Officers. \"And if there's anything else you need, let me know. I'm going to take Buddy home... home.\" I'd blurted it out a second time as I realized that Buddy was now my dog, and his home was with me.\n\n\"Todd, will you take Teresa home?\" I asked.\n\n\"Yes sir.\" Todd said. With that, I headed for the elevator, knowing that Teresa was doing all she could to not break down in front of me. Once I was out of sight, she did indeed break down sobbing in Todd's arms...\n\nLaura was getting off the elevator as I was coming up to it. One look at my face told her everything. I hugged her with one arm (the other holding Buddy), and she held me for a long moment. \"I'm taking Buddy home.\" I finally said.\n\n\"I'll wrap up things here.\" Laura said. She headed down the hallway. I am sure that she would tend more to Teresa than to 'wrapping up things'...\n\n* * * * * * * * * * * * * * * *\n\nGetting to my Police SUV, I noticed I'd left the blue lights flashing. I got into the vehicle, putting Buddy in the passenger seat, and turned the lightbar off. I pulled out, feeling numb. As I got to the road, the striking EMTs were looking strangely at me. One of them waved me down.\n\n\"Is everything okay, Commander? You barreled in here like a bat outta hell...\" he asked when I stopped and rolled down the window. I just shook my head.\n\n\"You heard about that orphan girl whose transplant organ was stolen?\" I asked. The people listening nodded. \"She didn't make it.\" I heard groans as the news was disseminated. I pulled out onto the street and drove home...\n\nI took Buddy up to the kids' room and put him next to his basket under Jim's crib. He chose instead to lie down on the floor. I petted Bowser, who had awakened, looked in on the sleeping kids, then headed for the door. As I looked back, I saw something that I had not seen before, and would never see again: Bowser had left his post by Carole's bed. He went over and lay down beside Buddy, their bodies pressed together. They would spend the rest of the night that way...\n\n* * * * * * * * * * * * * * * *\n\nMy mom was asleep in the guest room, and I chose to let her sleep. I also did not text Cindy; she'd find out soon enough.\n\nI was sitting on the 'front' sofa in the den (which faced the sofa against the wall). Laura came in, and I noticed that 45 minutes had passed since I returned home. She came down and sat beside me, to my left.\n\n\"Teresa finally went home.\" Laura said. \"I gave her a sedative before Todd took her home.\" After a pause, she asked \"Did you get there in time?\"\n\nI nodded. \"She... she got to pet Buddy... one last time. She asked me to take care of him... of course I will...\"\n\nThe dam broke. The pain that had been welling up inside me exploded. I began crying, crying as I had that night at the old Cabin after Pete Feeley had died and I was realizing who the Black Widow was. I felt Laura wrap her arms around me, holding me.\n\n\"Let it out, let it all out.\" I heard her say as she cradled me tightly. And I did. All of the pain, the months of fighting the criminals, the politicians, the desperate attempt to stop the Consultant of Crime without getting good people killed, everything came out as I grieved over a young girl who was now a victim of one of the most brutal crimes of which I could conceive. \n\nIt would take a very long time to 'let it all out'.\n\nPart 25 - Into Darkness \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News.\" Bettina said somberly from in front of University Hospital at 7:00am, Wednesday, January 20th. \"We are heartbroken to report that Amy Croyle, the orphan girl whose transplant organ was stolen before she could receive it, has died.\"\n\nA groan went up in MCD. I had just come in, and had not yet told everyone. They all listened silently as Bettina said \"Lieutenant Teresa Croyle of the TCPD had been granted legal guardianship of young Amy, and the Police Department has announced that she, along with Police Chaplain Father Romano, will be making Amy's funeral arrangements.\"\n\n\"Sir,\" said Joanne Cummings quickly, \"I want to volunteer to be part of that.\" Everyone else quickly volunteered also.\n\n\"Not my call.\" I said. \"It'll be up to Lt. Croyle. I'll be in my office.\" With that, I turned and left for the sanctuary of my office. I sat down behind my desk. I had expended my grief the night before, so now I was feeling numb.\n\nI looked up at the wall to my right. I saw the Laika crowbar, and Pete Feeley's framed police badge below it. As I thought of them, and of others that had died or been wounded, and the near-misses such as the fire at the Cabin, I went into the deepest, darkest reverie of my life...\n\n* * * * * * * * * * * * * * * *\n\nWhen I came back, I was not alone in my office. Captain Cindy Ross was sitting in one of the chairs in front of my desk, her energy focusing on me. If she could feel what I was feeling, then she'd be feeling a cold sense of purpose, dead to all feeling but Justice.\n\n\"You okay?\" she asked.\n\nI shook my head. \"No.\" I said. \"And I won't be until I get the bastard behind this. Tell the Data Guyz to start looking hard for a Steve Moschel. I don't want any public APBs out, that will alert the Enemy, who will tell him and he'll run. Tell the Data Guyz to watch for any strangenesses in the Organ Donor System, which they need to monitor.\"\n\nCindy nodded. \"Anything else? Do you want to be left alone?\"\n\nI exhaled. \"No, that's all right. Thanks for asking, though. How are you holding up?\"\n\n\"Okay.\" Cindy said. \"Todd called me early this morning. He said your wife gave Teresa a sedative, and she was out like a light. He also said you took the dog home, and that you did not look like you were in a mood to talk, so it didn't suprise me that you didn't call me.\"\n\n\"You've had so much going on,\" I said, \"that I decided it could wait until morning. Not much you could do, anyway.\"\n\n\"True.\" Cindy said, getting up. \"Teresa will be here about noon. She called me a few minutes ago. She's going to contact the Hospital and Father Romano and get the funeral arrangements started. I'll tell the Data Guyz about their mission. Paulina will probably want to talk to you about Jimmy Lawson, as well. If you'll excuse me, sir...\" I just nodded shortly in dismissal.\n\n* * * * * * * * * * * * * * * *\n\nTeresa lied, sort of. She was at Headquarters at noon. She was at Headquarters at 10:45am, as well. She endured the condolences of many fellow Officers, then came to my office and knocked on the door.\n\n\"Commander,\" she said, \"I have almost 200 emails in my inbox. Just about everyone but you and the Chief have volunteered to be pallbearers for Amy's funeral.\"\n\n\"Laura and I intend to be there as family.\" I said. \"So, who will you choose?\"\n\nTeresa said \"Sergeant Irwin and Sergeant Rudistan and their people were there on Christmas Eve, and helped save Amy and Buddy from Bryce. They deserve it.\" I nodded.\n\n\"Sounds good.\" I said. \"If there's anything you need from me, don't waste a second asking for it. And Teresa...\"\n\nI then said some ancient words that were allegedly Aramaic, but I wasn't sure. \"That means 'I grieve with thee.'. And I do.\"\n\n\"Thank you, sir.\" Teresa. \"And I know you'll take care of Buddy.\"\n\n\"With my life.\" I said. \"Listen, don't overdo things. The funeral is your only mission right now, okay? Take time off if you need to.\"\n\n\"Thank you, sir.\" said Teresa. \n\nAs she went towards her office, Cindy intercepted her. They went into Cindy's office.\n\n\"How did the Commander look to you?\" Cindy asked.\n\n\"Kind of...\" Teresa started, then said \"Well, it's hard to describe. Somewhere between 'punched in the gut', 'angry', and 'cold'.\"\n\n\"Yeah.\" Cindy said. \"I've only seen him like this one other time... when he realized who the Black Widow was, and was going after her. It is going to be an ugly day for someone if he catches the bastard that stole that organ. By the way, how are you feeling about that?\"\n\n\"Do you want to me to tell you the truth, or what you want to hear?\" Teresa replied. \"All I'll say... is that I hope the Iron Crowbar finds the perp before I do.\"\n\n* * * * * * * * * * * * * * * *\n\nDavid Krueger came to see me. My anti-bugging device was full on: I.A. was listening in on my office, and I was not in the mood to play around.\n\n\"Sir,\" said Krueger, \"we checked out the Boston Medical thread, the only other hospital to claim that organ. They never got it either. But another liver, which would not have been a match for Amy, was delivered to them, and then what they call 'kicked' to this facility in New Hampshire.\" He handed me a file with a few sheets of paper, giving me all the information.\n\n\"I see.\" I said. I did not say out loud what this data was telling me. It was hard enough to not destroy the desk and windows of the office with my crowbar. \"Anything on Moschel and Vauxhall?\"\n\n\"Yes sir.\" said David. \"Another payment came through Vauxhall to the same account. And this time, we worked to the second account as well. The money ended up in an account at City & Counties Bank in the City. They're a small bank with no brick-and-mortar branches, but their legal address on all their paperwork is the Cannon Building, and a suite near the top. Henry Wargrave controlled the top three floors, including his penthouse office, and it was part of that suite of offices.\"\n\n\"I see.\" I said. \"And the account the money went to?\"\n\nKrueger said \"The account name is a 'Hamish Stamford', with an address of 221B Coburg Square in the City.\"\n\nI blinked hard. \"What did you just say?\" I asked, if only to give my own brain time to work.\n\n\"Uh, '221B Coburg Square'.\" said Krueger. \"By the way, it may not be a real address, I couldn't find it on Google Maps.\"\n\n\"I'm not surprised, it's a fake address... and I've heard it before.\" I said, trying desperately to conceal my elation. \"And 'Hamish Stamford', eh? That sounds familiar to you, doesn't it, Krueger?\"\n\n\"Uh, no sir.\" said David. \"No one that I've come across before.\" I called Cindy to my office, and had David tell her the information he'd just given me. I then asked Cindy who 'Hamish Stamford' was. It did not take her long.\n\n\"Let's see, 'Stamford' was the man who introduced Sherlock Holmes to Dr. Watson.\" said Cindy. \"And 'Hamish'... wait a minute. Oh, of course... that's Watson's middle name! John Hamish Watson, M.D.\"\n\n\"And that is why she's a Police Captain with a Crowbar.\" I said proudly to David. \"Very good, Captain!\"\n\n\"Well,\" Cindy said, \"the Canon is required reading for anyone hanging out with you, Commander.\" I smiled for the first time that day.\n\n\"All right, Krueger,\" I said, \"put this stuff and whatever the three of you guy find on it onto password-protected jump drives, which I'll store in Evidence. We can't just put it on the evidence servers; those could be hacked. It is imperative that no one else have any inkling of this. Clear?\"\n\n\"Yes sir.\" said Krueger. \"The Mouseketeers will get right on it.\"\n\n\"The what?\" I replied.\n\n\"The Mouseketeers.\" said Krueger. \"Someone started calling the three of us that, and we kind of like it. Kind of like 'Crowbar's Angels' and 'the Abacus', and...\"\n\n\"Don't you dare say it.\" Cindy said, thinking it was Teresa's very bad nickname.\n\n\"What, the 'Iron Crowbar'?\" asked Krueger, not understanding.\n\n\"M-O-U-S-E.\" sang Cindy. \"I'll get back to work, sir.\"\n\nI thought about it. This was a huge break. We were getting close. Vauxhall, anything with 'Coburg Square'. I told David to look into that address, and also work hard on City & Counties Bank, and to notify Jack Muscone of the FBI. I dismissed him to the tasks and he left the office.\n\nAs I sat alone, going back over this information, a plan began to form in my mind. It was a break for me in more than one way. It was a chance to test something I'd long wanted to test, and a chance to gather even more information. But if the plan to exterminate the late Senator Nathan Allen was going to the Dark Side... this was not just going into Darkness... but into Deepness...\n\n* * * * * * * * * * * * * * * *\n\nAt 11:30pm, still Wednesday, January 20th, the Cabin sensor alarm tripped. I told Laura that I would not take the dogs, and would text her when I got up there. I knew she'd have Police up there nearly instantly if she did not hear from me.\n\nDriving up, I saw a vehicle parked in front of the house. I knew to whom that car belonged. I texted Laura that everything was okay, then went around the walkway to the back deck.\n\nTeresa Croyle was sitting in the metal loveseat chair, looking over the Town. She had a blanket on over her jacket. There was a patio light that was motion-sensor-activated, and it came back on as I walked up. Teresa looked to see who it was, and I could see that tears had been streaming down her face. I came up and sat down beside her, putting the blanket I'd brought from my SUV over both of our shoulders.\n\n\"I must've tripped an alarm.\" she said. \"I'm sorry I bothered you.\"\n\n\"Don't be.\" I said. \"Mi casa, su casa..\" I noticed the light of a train coming out of the western horizon, and I followed it with my eyes. It would be several more minutes before Teresa spoke.\n\n\"Don,\" she said, using my first name for the first time that I could remember, at least in a long, long time, \"why does it hurt so much?\" I knew what she meant.\n\n\"Because, Amy is gone from out here,\" I said, pointing to the Town, then tapping my chest over my heart with my fist, \"but she is not gone from here, inside us.\"\n\n\"I only knew her for a month, maybe less.\" Teresa said, the tears beginning to flow again. \"But it feels like I lost my sister again. Why do I always lose the people I love? That I want to love?\"\n\n\"You don't. Cindy is still here.\" I said. \"And this may not mean much right now, but the way I see it is that you were brought into Amy's life to make her last month happier. She had a Christmas with a new family, her dog has a home and is safe, and she had the dog and people she loved with her until the end.\"\n\n\"Will it ever stop hurting?\" Teresa said. \"Especially the way... someone stealing that organ, and her last chance to live...\"\n\n\"Well, we don't know if she would've lived, even with it.\" I said. \"But to answer your question... the pain will ease, over time. That's what 'Time' is for; it heals all wounds. And you'll have the good memories forever, which will keep her alive in your heart forever.\"\n\nTeresa nodded. \"Thank you. How do you always know the right thing to say?\"\n\n\"I don't.\" I said. \"But Dr. Eckhart would say I'm just speaking my Truth, from the heart and the mind. Which is all I can do.\" Teresa nodded, almost absently as she looked over the lights of the Town below. \n\nAfter a few more minutes I got up. \"I'm going to head back home before my wife gets worried about me. Feel free to stay here as long as you like.\"\n\n\"Thanks.\" said Teresa. She did stay for a long time, wrapped in both blankets.\n\nAs I left, I thought I heard the faint hum of a motorcycle... no, two motorcycles. Now what was going on with that?\n\n* * * * * * * * * * * * * * * *\n\nShe pulled up into the parking area of Promontory Point, and right alongside the other motorcycle. There were no teenagers up here; it was cold, and it was a school night. She saw him, clad in black leather, a black motorcycle helmet, and a black motorcycle to match. He was Darkness, and was dressed befittingly.\n\n\"Don't take off your helmet.\" he said. \"Who knows if that godforsaken Iron Crowbar has put a security camera up here. By the way, the pink in that new motorcycle is too bright, too obvious.\"\n\n\"Yes, that's true.\" she said. \"I was surprised to get your summons. What can I do for you?\"\n\n\"I had to risk it.\" he said. \"We're close to making a move on a few things. Moschel is lining up a new heart for Brownlee. But I am deeply concerned. The Iron Crowbar is understandably furious after that girl's organ was taken. He wouldn't understand that it was for a much higher purpose, that it was more sorely needed elsewhere.\"\n\n\"You are right that he is furious.\" said the lovely Sinon. \"Captain Lezbo said he's been acting weird, too. He did meet with David Krueger today, as well.\"\n\n\"Ah, now that is what I needed to hear.\" he said. \"It tells me some things. Do you know what those pesky 'Mouseketeers' are up to?\"\n\n\"They've put nothing into the Evidence servers.\" she said. \"But they have not been using computers connected to the Police Department system, either. I even tried hacking into Milton's father's School accounts, but they're not using that backdoor, either.\"\n\n\"All the same,\" he said, \"my plans to relocate cannot be sped up. We have to wait until this summer, when Operation Apple Grove takes place. So if the Iron Crowbar begins hampering my plans, I will have to come up against him. The hard way.\"\n\n\"I'm ready to help.\" she said. \"Just give the word. Whatever you need to destroy the Iron Crowbar...\"\n\n\"...and his little dog, too, my Pretty.\" he replied ominously. \n\nWith that, they both cranked their engines and sped off into the night, the sounds of their motors carrying on the wind to another home on the ridgeline...\n\nPart 26 - The Final Goodbye \n\nI have always wondered why bagpipes existed. They are discordant, blaring, and sometimes painful to my ears. But I got my answer today: bagpipes were given by God to play \"Amazing Grace\" at funeral cemetery ceremonies...\n\n* * * * * * * * * * * * * * * *\n\nIt was Thursday, January 21st, 2:00pm. The Police Officers were in formal uniforms, with medals and white gloves, as they carried Amy's casket up the steps and into the Catholic Church, placing it on a rolling gurney. The pallbearers were Sergeant Rudistan, Sergeant Irwin, and Senior Patrolmen Morton, Hicks, Johnson, and McGhillie. Walking behind the casket was the Honor Guard leader, Lt. Teresa Croyle, also in formal uniform, the Purple Order around her neck.\n\nI was not in uniform; instead wearing a black suit with a black tie, to de-emphasize my role with the Police, and emphasize the family aspect. Laura was in black, and wearing a black hat with a veil. Molly (in uniform with ribbons) and my mother (in a black dress and hat and veil) were behind us, and Cindy, also in civilian attire. Lt. Tanya Perlman, in uniform with ribbons instead of full medals, led the Detectives and a rather large contingent of Police Officers behind us.\n\nThe Church was nearly full; many people came to pay their respects for a brave young girl. The Orphanage's young charges were there. That had taken a certain Police Commander's initiative to send a Police bus to pick them up, escorted by some Officers to placate the surprisingly indifferent Orphanage staff.\n\nFather Romano and Father Francisco said the Funeral Mass. As the service proceeded, I furtively looked around at the crowd. I saw the shock of white hair in the back. Dr. P. Harvey Eckhart, founder and great leader of 'The Vision', was there with some of his acolytes. I'd invited him to sit with us but he'd declined, perhaps knowing my mother was sitting with us, or perhaps just to de-emphasize his presence.",
        "After the Funeral Mass, the pallbearers took the casket down the aisle and back outside. An announcement had been made asking only the immediate family and close friends to attend the ceremony at the cemetery.\n\nThere was a section in the southeast part of the Cemetery for indigent burials (and few of those; most were cremations), but someone had bought a plot for Amy very near Dr. Heinz's grave; it did not take a great feat of deduction to know that my wife was the benefactor in that.\n\nTeresa led the pallbearers through the procession. Father Romano poured dirt on the casket in the shape of a cross as he recited the \"ashes to ashes, dust to dust...\" lines. Then he made the sign of the cross and led the group in prayer.\n\nAnd then Patrolman McGhillie was joined by his father, Town & County Councilman Ian McGhillie, in using their bagpipes to play \"Amazing Grace\". It was not discordant, it was not blaring. I let the music flow through my soul, grieving for one last minute for a girl who'd loved her little dog...\n\nOnce done, it was time to get busy. It was time to take vengeance. I was later told that a great many people saw the cold look on my face, and knew that serious pain awaited a criminal. They had no idea how right they were...\n\nPart 27 - Into Deepness \n\nFriday, January 22d. Around 4:00pm I received a call from Dr. Searles. I went up to the Hospital, and to his office.\n\n\"A heart is about to become available for Robert Brownlee.\" said Dr. Searles. \"A young man was severely injured in a motorcycle accident near Midtown. He's brain-dead, and his family is going to execute the living well to have his life support taken off. He matches Brownlee almost perfectly, and I've already received confirmation we'll get the heart.\"\n\n\"What time will that be?\" I asked.\n\n\"Should be in just a few hours.\" said Dr. Searles. \"The living will is being worked through the Court system now. That's pretty routine. And I'm sure you're wondering why I called you to come here instead of just calling or texting you.\"\n\n\"Glad you said it out loud,\" I replied, \"before I had to ask.\"\n\n\"I wanted to show you something.\" said Dr. Searles. \"I got that confirmation... without even asking for it. Usually I get notified, I then look at the organ, see if it matches, and then put in my acceptance for it. Since Brownlee is at the top of the list and it's such a good match, I'm not surprised we're getting it... but this time, they're like 'Hey! Here it is!'.\"\n\n\"I see.\" I said. \"Has this ever happened to you before?\"\n\n\"Just once.\" said Dr. Searles. \"I was once asked to do a heart transplant in Florida. I was flown down there on a private jet, the hospital there had already put in the paperwork for me to do the surgery in their hospital. It was all arranged. And I just checked the records; that heart came in the same way. It was routed to that hospital already. The recipient was one of those new-age Internet billionaires who had a rare heart defect.\"\n\n\"I heard that Steve Jobs just happened to get a pancreas he needed, that kept him alive a few more years.\" I said. \"I'm sure his money helped procure that. Not that I'm complaining, but after what just happened with Amy...\"\n\n\"And that's the second reason I called.\" said Dr. Searles. \"I called a colleague at Boston Medical, Dr. Falkner. He said they expected for us to get that liver over their candidate, but get this, Don: they were told they were getting the liver. And not through normal channels... but just like Brownlee's incoming heart, here.\"\n\nThe puzzle pieces were going into place with every word. I could see what was going on. And because I knew that Vauxhall had just put through a payment, I knew that this was my chance.\n\n\"Doctor,\" I said, \"do you think Dr. Falkner will give an affidavit to the FBI about that? And will you give your own affidavit to what you've told me, about everything?\"\n\n\"Of course.\" said Dr. Searles. \"Think this will help you get the guys you're looking for?\"\n\n\"Oh, yes.\" I said. \"Ohhhhhhh, yesssss. Listen, Doctor, please, not a word to anyone about this. Anyone, not your people here nor the Hospital Staff nor Administration. Let me know when you get word of when that heart will arrive, but do let me know before it gets here. You'll get the heart; just go on in and replace whatever Brownlee has inside him with it. Leave the rest... to me.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Here are the jump drives.\" David Krueger said, handing me a static-proof sleeve with a number of jump drives inside, sealed with evidence tape. \"We added one last thing. When you asked us to check on the Organ Donation System, we saw the confirmation for the heart that is coming here. But the thing is, it was not entered into the regular system. Someone bypassed the system and sent a direct confirmation to University Hospital. It happens from time to time, but is irregular. I can't say if that is legal or not, by the way.\"\n\n\"It's not explicitly illegal.\" I said. \"But that will change if I have my way, both at the State and Federal level. You need to accompany me to the door of the Evidence Rooms with these; once I'm inside there, you can go home.\"\n\nWe went downstairs, where we both signed the jump drives into evidence. I then told the Officer on duty there that I was going to come in and personally lock them into one of the drawers in the safe. There are drawers in there like safety deposit boxes, but with electronic combinations. I set one with the four-digit code '9078', then came out of the safe room.\n\n\"I'm going to check on something before I go.\" I said. \"David, have a good weekend, you can go.\" With that, I went into the room that was for weapons evidence. I turned on my bug-killer, which would cause any tapings to look like Slender Man was coming; the tape would have a hum and start breaking up and whacking out. \n\nI went to the very back, where the manila envelope with my personal seal on it had lain dormant for a long, long time. I opened it, opened the gun case, and took out the packet of four syringes... Ned's drugs that I had not destroyed. I put the packet into the inside pocket of my trenchcoat, which I was wearing as if I were going to go directly home from here. I resealed and put the now-empty gun case back where it was.\n\n\"Have a good evening.\" I said to the Duty Patrolman. I went back upstairs, and secured the pouch in my safe in my office, next to the Red Crowbar whose metal had exterminated the Rev. Jonas Oldeeds.\"\n\n* * * * * * * * * * * * * * * *\n\n\"ETA 10:45pm.\" came the text from Dr. Searles at 10:15pm.\n\nI was in my office. I had met Laura for supper at the Cattleman's Club, then come back to the office hours before. There were no lights on inside. I had worked in the dark, filling two plastic syringes from the Hospital (all too easy to steal, to be quite frank about it) and half-filling them with two of the four drugs from the vials. I hoped they retained their efficacy after all this time.\n\nI put on my trenchcoat. I left my badge and my gunbelt on my desk, and was armed with only a backup revolver, for which I had a concealed-weapons permit to carry... and the current Red Crowbar. Just as I was about to leave, the door to my office opened... and in came Cindy Ross.\n\n\"Going somewhere?\" she asked, her voice almost dripping with cynicism.\n\n\"As a matter of fact,\" I said quietly, \"I am.\"\n\n\"Anything you care to share with your blood kin?\"\n\n\"Not really.\" I said. \"This is personal, not official.\"\n\n\"Yeah, sure.\" Cindy replied. \"Then I'll personally go get my coat, and go with you.\"\n\n\"You are not coming.\" I said, in the tone of an order.\n\n\"Then you are not going.\" Cindy replied fearlessly. \"I swear to God that I will personally arrest you if you try to leave this Station without taking me.\"\n\nWe stared at each other, our blue and gray eyes locked. Then I said \"If you do come, you're going to see some things you should not have to see. I don't know if you can handle it.\"\n\n\"Only one way to find out.\" Cindy said, crossing her arms.\n\nI knew she was going to win this battle of wills, so I said \"All right. We've done everything else together; you might as well come over to the Dark Side with me.\"\n\nI then said \"Leave your gun and badge either here or in your office. Bring a backup gun if you have one, but have nothing on you that shows you're Police. Bring your ID card so we can get back in the building.\"\n\nWe went down the hall, my bug-killer full-on. Cindy stopped by her office and did as I'd instructed. We went out the side exit. I took her I.D. card and mine, and secreted them in a little crevice under the steps. I then led the way to an old, beat-up green car.\n\n\"Nice ride.\" Cindy said. \"Where'd you get it?\"\n\n\"Impound Yard.\" I said. \"I'll tell the Officer at the gate that we're going undercover.\" Indeed, the Officer at the gate was Sergeant Rudistan. He told us to have a good weekend.\n\n* * * * * * * * * * * * * * * *\n\n\"Here's the heart you're waiting for.\" said Steven Moschel at the Nurse's Station, dressed in his courier uniform. The nurse took the ice chest and signed off on the paperwork while an orderly raced with the life-saving organ to the surgical wing, where Dr. Searles had Robert Brownlee prepped. It was 10:50pm.\n\n\"Yes, it's all good.\" Moschel said into his phone as he walked back to his car. \"Just delivered it. Sure... I can do another one in a few days, if the check clears... okay, bye.\"\n\nAs he came up to his car, a brand-new Lamborghini Aventador LP 700-4 Pirelli Edition, he saw a tall, broad-shouldered man in a trenchcoat and Tilley Hat, with only Airborne wings attached, looking at the car.\n\n\"Wow.\" said the man in a low, husky voice. \"That's one heck of a car.\"\n\n\"Thanks!\" Moschel said brightly. \"Got it with the money from my last job. Excuse me.\" He reached for the door handle.\n\n*WHAM!!*\n\nWith lightning speed, the red crowbar had flashed, hitting him squarely in the back. The force of the blow slammed him against the car. As he turned, the bigger man's fist crashed solidly into his jaw, and he crumpled to the ground. \n\nA shorter person was there in a flash as the big man secured Moschel's hands with a plastic zip-tie, which are used as handcuffs when need be. Then the big man put a plastic ball in Moschel's mouth, and secured it with a bandana. The shorter person, who was masked, then half-dragged Moschel down to the end of the parking deck, where an old green car with it's trunk opened awaited them.\n\n\"Watch.\" said the person into his ear when they stopped Moschel watched as the big man in the trenchcoat slid detcord into the gasoline tank of the expensive new car. On the end of the detcord was plastique covering a blasting cap. Another detcord line went under the engine block, where a larger block of plastique had been wired up as Moschel had delivered the heart to the Nurse's station.\n\nAs the big man approached the other two, he stopped at a concrete column. He held up a clacker, to which a thin wire led to a blasting cap that was attached to the near end of the detcord. He clicked the clacker a couple of times. The result was instantaneous...\n\n***WHUMPOOM!***\n\nI felt the explosion from behind the column. Cindy had secured Moschel on the other side of the green car, and there were other cars parked there, too. Shrapnel was flying all over the place. Expensive shrapnel, too; it had once been a Lamborghini.\n\n\"Too bad about the car.\" I said in my 'gruff' voice. We threw Moschel into the trunk and hurriedly got out of there just as nurses were coming outside to see what the noise was about.\n\n* * * * * * * * * * * * * * * *\n\n\"The first thing they're going to do is call you.\" Cindy said. \"And your cellphone is in your office. Mine is in my office.\"\n\n\"Darn, I forgot it there.\" I said. \"My personal one is at home, too. Laura is going to tell them that I'm driving to the City to meet our FBI friends about a lead. That can be your excuse, as well, unless you have a better one.\"\n\n\u2028\"Does Laura know what this is about?\" Cindy asked.\n\n\"Not all of it.\" I said. \"If she did, she would've stopped me... but for different reasons than you were going to.\"\n\nWe drove to an alley and to an empty unit in a strip mall. We hauled Moschel out, and I carried him over my shoulder into the back room, which Cindy noticed had corrugated cardboard on the walls.\n\n\"Soundproofing.\" I said. \"We're going to need it.\" With that, I put Moschel face down on what looked like a massage table, and handcuffed his hands and ankles to the four legs, immobilizing him.\n\n\"Okay, Mr. Moschel.\" I said, squatting to his eye-level so he could see my eyes behind the mask I'd put on. \"You stole a liver meant for a little orphan girl. She died. That pisses me off. So... you are going to tell me everything. You are going to tell me your contacts on both ends, you are going to tell me who's been financing you through Vauxhall.\" I removed the ball gag.\n\n\"Fuck you!\" Moschel shouted. \"HELLLLP!!\"\n\nI slapped his face, hard. \"No one can hear you, fucker.\" I said, still in my gravelly 'gruff' voice. \"Now, talk. Who's your sponsor? Say his name!\"\n\n\"I'll see you in hell!\" gasped Moschel. \"I'd die more painfully if I told you.\"\n\n\"Oh, I doubt that.\" I said, rising back up to my full height. \"But let's find out.\" I went down the side of the table and pulled the back of Moschel's shirt out from his pants, exposing his lower back. Cindy was watching me intently, probably expecting me to hit his kidneys with the Crowbar. He would not be so lucky.\n\nI took out the first of the two syringes in my trenchcoat, took the plastic cap off the needle. \"Watch this.\" I said to Cindy. I stabbed the syringe into Moschel's back, very close to his spinal cord, and injected just a tiny amount of the drug.\n\n\"YEEEEARRRRRRRGGGGHHHHH!!\" Moschel screamed. \"OH GOD! OH GOD! MAKE IT STOP!\"\n\n'Want it to stop?\" I asked. \"Start talking.\"\n\n\"AAAUUUUGGGHHHHH!!\" Moschel screamed, tears running out of his eyes, spittle beginning to drool from his mouth. \n\nThis was the pain-inducing drug that Ned had created. I could see why the CIA wanted it. Moschel was in excruciating, agonizing pain. Even the tiny amount I'd injected was attacking his nerves, the pain going up his spine and all over his body. And part of the cocktail of drugs in this mixture prevented his body from shutting down or emitting endorphins to kill that pain. It would eventually kill him, but not before hours, even days, of the most agonizing pain one could feel relentlessly attacked him. \n\nI then injected a small amount from the second syringe. This was the antidote to the first compound. The pain was still there, but much less than before.\n\n\"Okay, are you ready to talk?\" I asked.\n\n* * * * * * * * * * * * * * * *\n\nMoschel reminded me of Barry Bounel. He seemed incapable of telling the truth. He began giving me information that I knew was false. When I asked questions to trip him up, it worked, but he just told more lies. I'd recorded that, just to see if any truth would be mixed in. But I'd had enough.\n\n\"Okay, asshole.\" I said. \"I am tired of you.\" I injected another small amount of the first drug. I saw Cindy's eyes crinkle; she was wincing as the she saw and heard what was happening. She probably could smell it, too... Moschel had lost control of his bladder and his bowels.\n\n\"AAAAAUGH! Stop the pain! I'll talk, I'll talk!\" he begged.\n\n\"I'm listening.\" I said, making no move to relieve his pain. After a moment, he realized through his agony that he would be talking through the pain. And he broke.\n\nHe gave me Vauxhall. He gave me City & Counties Bank. He gave me his bank accounts, all four of them in the State, and ten more in other States. He gave me Dr. Alcott, the Hospital Administrator, and a Nurse... the one that was Nurse Ratchett's supervisor, that had challenged me and then bitched about me.\n\n\"Pleaseeee! Stop the pain, please!\" he gasped, his body quivering, sweat pouring out of him everywhere, his curly black hair soaked and matted to his head.\n\n\"You know what you have to tell me.\" I said. \"Say his name!\"\n\n\"I don't know his name! I swear to God!\" Moschel yelled out. \"I only know... he's behind City & Counties Bank... he may be connected to the University...\"\n\n\"Okay, I think you need a stronger dose.\" I said, readying the needle.\n\n\"NOOO!!\" Moschel yelled desperately. \"I swear to God, that's all I know!\"\n\n\"What's his connection to the School?\" I thundered gruffly.\n\n\"I don't know! But he has... access to the Hospital... he goes there... to use computers so he can't be traced...\"\n\nI took out the other syringe, and injected enough to eradicate his pain over the next several minutes.\n\n\"Here's the program, Mr. Moschel.\" I said, again crouching so his eyes were looking into mine. \"You are going to be left where the Police will find you. You will tell them, voluntarily, everything you have told me. If you leave out anything, even one word, I will find out, and I'll bring this first syringe back to you... but not the second one. If you don't talk to the Police, they'll release you... and you'll be seeing me again. Figure it out, boy: I found you tonight, and I will find you again. Your only chance to live is to talk to the Police. Do you understand?\"\n\n\"Yeah\" said Moschel weakly, totally beaten, totally broken.\n\n* * * * * * * * * * * * * * * *\n\nPerhaps it's a family trait, as I share my late nephew Ned's sense of irony. We drove Moschel to the Saskia Warehouse, where Teresa had found Amy and Buddy. We left him tied to a fence stake, gagged, on the back side of the building.\n\nAs we drove the green car back to the Impound Yard, taking dirt back roads through farms owned by BigAgraFoods, Cindy was abnormally quiet. Finally she said \"What did I just witness tonight?\"\n\n\"You witnessed your cousin going to the Dark Side.\" I replied. \"I told you that you shouldn't have come.\"\n\n\"Not that.\" she said. \"The drugs. What the hell was that stuff you injected into him?\"\n\n\"That,\" I said, \"I will not answer.\"\n\n\"Oh, never mind, you don't have to.\" Cindy said. \"I did look up the classified stuff on your nephew Ned one time. I thought you destroyed those drugs.\"\n\n\"Which is why I did not tell Laura about this.\" I said. \"She thinks I destroyed them, too. But as you can see, I didn't. I don't want the CIA knowing they still exist, but more importantly, I needed to test them. And getting Moschel to talk was a good way to do it.\"\n\n\"Test them?\" Cindy asked, stunned. \"For what?\"\n\n\"If what I think is going to go down actually does...\" I said, \"... then one other person is going to be the recipient of the pain-inducing drug. Do I need to tell you who that is?\"\n\n\"But... you keep saying you want to arrest the bastard instead of killing him.\" Cindy replied, and astutely. \"So that doesn't make sense.\"\n\n\"I do want to arrest him, put him on trial.\" I said. \"But there is a very good chance he's not going to let that happen. If that's the case, I might need these drugs one more time... to save my blood kin.\"\n\nCindy said no more.\n\nPart 28 - Test and Temptation \n\nI unlocked the gate to the empty Impound Yard near the State Line with a master key (I'm the Police Commander, of course I have a master key!), parked the old green car in the back of the lot from where I'd obtained it. I also emptied the two syringes I used on Moschel at the Impound Yard, then buried the separate parts in some dirt under a car in the junk area.\n\nCindy had already started the engine to the Police Cruiser that was parked at the site and pulled it outside the gate (it looked like a radar trap, other cars were slowing down when they saw it). I locked the gate and got in.\n\n\"The radio is full of chatter about the exploding car.\" Cindy said. \"They're looking for a green car already.\"\n\n\"Yet we drove all over this Town and County in it, and no one saw us or stopped us.\" I replied. \"Methinks we have places we can still improve this Police Force.\"",
        "\"Yep. Where to now?\" Cindy asked.\n\n\"Headquarters.\" I said. \"We've got to pick up our badges and guns.\" Cindy drove there, and Rudistan let us in without question. We got our I.D.s and went inside.\n\n\"Wow, don't tell me you've trusted Rudistan with this.\" Cindy quietly said. \"I mean, he's a good guy and all, but...\" She did not finish the sentence.\n\n\"I only told him we were on an undercover mission.\" I replied. \"He tends to understand these things without being told. And I might as well trust him because he was in the room with me when we arrested Bryan Thatcher, so I'm not really in any worse shape as far as Rudistan having stuff on me.\"\n\nCindy got her stuff out of her office and came to mine. \n\n\"All right,\" I said, \"let's go.\" We went back outside, now that we had IDs, badges and guns back on, and drove in my Police SUV towards the Saskia Warehouse. I parked in an obscured place where we could watch, then took out a burner phone and sent a text.\n\n\"What's happening?\" Cindy asked.\n\n\"A good Citizen is about to call the Duty Desk with an anonymous tip that a man with black curly hair was seen at the Saskia Warehouse. Our guys already know that the bombed out Lamborghini is his; I heard the radio chatter as we were driving. I estimate... oh, about ten minutes...\"\n\n* * * * * * * * * * * * * * * *\n\nA Police cruiser pulled up to the Saskia Warehouse. Sergeant Irwin was driving, and Lt. Teresa Croyle came out of the passenger seat. There were already three other Police cruisers there, blue lights blazing.\n\n\"He's around back, behind the warehouse.\" said Patrolman Culver as they went through the opening in the fence. Memories were flooding Teresa's mind as they walked to the building.\n\n\"Lieutenant Croyle,\" said Sergeant Irwin, \"we'll stay here if you want to go back there alone. And if he tries to make a run for it or attacks you, we'll understand whatever happens.\n\nTeresa stood there, feeling as if nothing else existed in the world. The bastard that had stolen the organ meant for Amy was now around the corner. The temptation was enormous, and the desire to act out of her pain and fury was almost overwhelming. She remembered what she thought Alexis had whispered to her at Amy's deathbed.\n\nAnd then, again seeing nothing else, she saw what looked like not one, but two ethereal forms in the distance, watching her, waiting for her. And she heard in her mind Amy's words to forgive the perp.\n\nExhaling, she made her choice. And suddenly she was seeing everything again, the warehouse eerily lit up by the blue lightbars of the Police cruisers, the Officers standing near her.\n\n\"Thank you, but I'll do this right.\" she said. \"Come around with me. Videocamera, too.\" She led the way around the corner, seeing Moschel tied up. \"Untie him.\" Officers rushed to do so.\n\n\"Would you like to borrow a crowbar, ma'am?\" asked another officer, who had not heard Sgt. Irwin's offer.\n\n\"Those are for the amateurs.\" Teresa said. \"I don't need one.\" She walked up to Moschel, who was still on his knees. She went behind him and pushed him to the ground, but only to pull his arms behind him and handcuff him.\n\n\"Steven Moschel, you are under arrest.\" Teresa said. \"You have the right to remain silent...\" She recited the rights to him, then followed as Officers walked him to a Police cruiser. Someone had put down plastic on the backseat; their noses had told them that Moschel had soiled himself.\n\n* * * * * * * * * * * * * * * *\n\nAs Cindy and I watched from a distance away, I felt very proud of Teresa. She had withstood the test. I had gone to the Dark Side, but she had risen above it. I would not have blamed her if she'd done something to Moschel, beaten the shit out of him as she beat down Dean Allen... or even killed Moschel. No one would've said a word, and the Thin Blue Line would've covered it up. But she didn't. She rose above it.\n\n\"She's a better person than I am.\" I said.\n\n\"No, not necessarily.\" Cindy said. \"Maybe tonight, though...\"\n\n* * * * * * * * * * * * * * * *\n\nWe went back to Headquarters. Moschel was cleaned up and given an orange jumpsuit, and then was taken through booking. Cindy and I tried to sneak in the other side, through the employee's entrance.\n\nIt did not take long before the Duty Desk Sergeant was at my door. \"Commander! Captain!\" he exclaimed. \"We've been trying to get in touch with you!\"\n\n\"Yeah, I left my cellphone here by accident.\" I said, holding it up. \"We went to the City, just got back. So what's going on?\"\n\n\"I'll tell him, Sergeant.\" said a voice behind him. The voice belonged to Lt. Tanya Perlman. She came in, a strange look on her face.\n\n\"Sir, ma'am,\" she said as she sat down in the chair besides Cindy, \"tonight a car was blown up at the Hospital with military plastique and detcord. Extremely expensive car, belonging to one Steven Moschel. He'd just bought it. He also had just delivered a heart for Robert Brownlee. By the way, that operation is still going on, last I checked.\"\n\nTanya continued: \"We started searching for Mr. Moschel, and we found him... tied up behind the Saskia Warehouse. I might add that this warehouse is where Lt. Croyle found Amy, twice, including once on Christmas Eve.\"\n\n\"Yes, I know.\" I said. \"Discipline still to follow. But go on.\" I pretended to ignore the shocked look on Cindy's face.\n\n\"Moschel was a mess.\" said Tanya. \"He still is. He's acting drunk and out of it. We're going to let him sleep it off overnight, then begin questioning him in the morning. Jack Muscone is coming over; he wants to be a part of that.\"\n\n\"By all means.\" I said. \"With what is Moschel being charged?\"\n\n\"We seem to have plenty to take him down for stealing the organ meant for Amy.\" said Tanya. \"We'll see what we get tomorrow, well, later today, I should say. The sad part of this, is that you two missed all of the fun. And so did Sergeant Rudistan. Now why in the world is he doing guard duty of the parking lot tonight?\"\n\n\"No idea, you'll have to ask him. I'm sure that whatever he tells you will be correct.\" I said, my face impassive. \"But you didn't need us here, you handled it, and well. Am I right?\"\n\nTanya just stared at me a second, then turned to Cindy and said \"Ma'am, please remind me to never, ever, play poker with this man.\"\n\n\"Harrumph, 'no shit Sherlock' on that!\" Cindy said. \"And you should never bet a hundred dollars against him, either. FBI humiliation to follow.\"\n\n\"I would've bet that he would never, ever, leave his Police cellphone behind.\" Tanya said meaningfully. \"He never forgets it. Ever.\"\n\n\"First time for everything.\" I said. \"So, is the SBI already here to look into the exploding car at University Hospital?\"\n\n\"Not yet.\" said Tanya. \"Do you want to call in the FBI to stop the SBI from coming in?\"\n\n\"That would be fun.\" I said. \"But the SBI could not even figure out who stole morphine from the Hospital some months ago. So I have my doubts they'll be able to find anything on this.\"\n\n\"In other words: by all means, Lieutenant,\" said Cindy, \"call the SBI in.\"\n\n\"Not me.\" said Tanya. \"Jack would never speak to me again if I did.\"\n\n\"Folks, let's wrap this up and go home.\" I said. \"We'll burn those bridges, pun not intended, in the morning.\"\n\n\"Where's Teresa?\" asked Cindy.\n\n\"She's the Vice Lieutenant.\" Tanya said. \"Why would she be here?\" I realized what Tanya was doing. I kept my face impassive, but could not help Cindy...\n\n\"She made the arrest, didn't she?\" Cindy asked.\n\n\"How'd you know that?\" Tanya asked. \"No one's said a word about it, just to keep her out of any trouble over it. It wasn't on Police radio.\"\n\nWell, Cindy was trapped. But her recovery was about as good as any I'd ever heard:\n\n\"I'm psychic. Like my father before me... Lieutenant.\" Cindy said, her eyes boring into Tanya's. The matter was closed.\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "dark side"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/hampered-in-his-plans-ch-05"
}