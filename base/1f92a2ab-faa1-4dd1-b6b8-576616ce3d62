{
    "title": "Wild Card Memories",
    "pages": [
        "By our final year of college, the Friday night dinner has become a tradition for us. It started late in year one, when some of the more culinarily challenged members of our group, like Nadia and Dani, complained that they haven't had a good home-cooked meal in ages. Nate, my ever-so-useful roommate, volunteered me to cook for them because I apparently impressed him with my ability to make pasta without burning the sauce. Pretty soon, everyone agreed to bring something, and a weird studential potluck has become a reality. We chose Friday, early enough so that those of us who wanted to could go partying, but late enough that we won't feel weird about drinking (Dani's cousin hooked her up with highly believable fake IDs, so getting alcohol was never an issue). \n\nIn year two, Dani, Nadia, and Sarah moved in together, and their apartment became the permanent spot for our weekly dinners. Our group also grew, and even though I just broke up with my long-distance girlfriend from high school, I soon started dating one of the other girls in the group, Becky, who I was sure was going to be the one. \n\nThat didn't pan out. She dumped me right before the finals (she told me she's sorry for the timing but \"there is no such thing as a good time to do this.\" I could think of several better possibilities, but it was too late for that). As a result, I took myself off the roster for the Friday dinner for several weeks in a row. When Sarah called to invite me to the very last Friday night dinner of the year, I initially refused. \n\n\"I wasn't asking,\" She replied back. She always had this 'tribal leader' approach and would boss us around relentlessly, but at least she did it with a smile. \n\n\"Look, Sarah, I just don't think...\" I started, but she cut me off. \n\n\"She's not coming, ok? She and Nadia are going to check out this graduate school this weekend. So you are going to be there. It's time for you to come out of the cave and join the rest of us in society.\"\n\n\"I get it, ok? I miss you guys too, but with Becky and the Finals, I just... Look, it's not like I became a recluse or something,\" I protested.\n\n\"That's not what Nate tells us. He says you NEVER come out of your room.\" Have I mentioned how delightful it is to have a roommate who keeps your secrets as well as Nate?\n\n\"So you're coming, mister, even if I have to drag you myself,' Sarah concluded. I had to chuckle. Sarah was 5'2'', and I'm pretty sure there are toddlers that weigh more than her. The thought of the little blond pixie trying to drag me anywhere was hilarious. \n\n\"I take that chuckle as a 'yes, Sarah, I'm coming and I'm bringing my lasagna,'\" she said. \n\n\"Ok, ok, I'll be there. Don't want you to sprain something trying to carry my heavy ass.\"\n\n\"And the lasagna?\"\n\nI sighed, \"yes, mom, that too.\"\n\n\"Just for that sigh, I'm making you bring those eggplant pastries you made for New Year's too.\"\n\nI said goodbye before she'll make me make even more food. \n\nAnd so Nate and I made our way to the girl's apartment that Friday night. Dani opened the door for us. \n\n\"He's alive!\" she exclaimed when she saw me standing there. \n\n\"Ha, ha,\" I said dryly. \"You saw me at the Statistics final just three days ago.\" \n\n\"Ok, rule one - never mention the S-word in this household again,\" she said. \"And you barely said more than 'hey.' I was worried about you, you know.\"\n\nI felt my face getting redder. \"Sorry, I guess focusing on the finals helped me forget about... other things. I wasn't what you'd call social.\"\n\n\"Well, it's good you decided to come out, then. Though you could do with a haircut,\" she said, wrinkling her nose at the mane of hair I managed to grow in the last six weeks. \n\n\"Thanks, you look amazing as well,\" my tone was sarcastic, but I was telling the truth. Dani was one of those girls who has a near-perfect body without really working for it. She was dressed today in tight jeans and a shirt that hugged her big breasts, making them hard to ignore. \n\nThere was a pool party at one of the frat houses in year two, and she ended the evening with something like six spontaneous offers of marriage. Even though I was with Becky at the time, the sight of Dani in her bikini was forever etched into my mind. Those long legs, that soft, milky-white skin, the tight stomach, that shapely ass that just begged to be touched, the big, beautiful tits that the bikini top could barely contain - Even Becky couldn't take her eyes off her. And she has an excellent smile. It lights up the room and makes her big brown eyes shine. That, coupled with her wavy auburn hair, made her look like some 70's pinup model. \n\nUnfortunately for the frat boys, she was out of bounds for most of college, thanks to having a boyfriend, Mike, who proved how unworthy he was of her by cheating on her last year. It was a complete shitshow, and even though Dani recovered, I heard from Sarah that she kinda swore off men for the time being. Trust me when I tell you that it's a terrible loss. \n\n\"Hey, don't I get a hello? Aren't you happy that I'm alive?\" Nate complained next to me. \n\nDani turned her attention to him. \"Hello, Nate. As for the second question, that depends: did you bring it?\" \n\nNate feigned innocence. \"I brought eggplant pastries...\" he said, raising the box that I let him carry. \n\n\"As if you could make those,\" Dani said. \"You know what I meant.\"\n\n\"There may or may not be a quite-full bottle of vodka somewhere on my person,\" Nate admitted. \"Wanna look for it?\" he added with a wink. Nate, who was perpetually single, never gave up on an opportunity to hook up with anyone, let alone someone as hot as Dani. He had the confident air of someone who never struggled to get a date, which, thanks mostly to his all-American poster boy looks - blue eyes, blond hair, and a height of 6'1'' - was true. Unlike Dani, though, he worked damn hard for his looks. He hits the gym five days a week most weeks, and he even managed to drag me with him a couple of times, which is the only reason my body didn't take the shape of the couch over the last few weeks. Working out is a powerful way to take out one's aggression after a break-up. \n\n\"Oooh, interesting offer,\" Dani replied. \"Maybe I should ask Sarah what she thinks about it?\"\n\nI had to smile. Nate did have some success scoring with the girls in our group early on. I know he and Nadia had a friends with benefits thing going on for a while. But after he hooked up with a girl named Ashley and she started drifting away from the group because he didn't want a relationship, Sarah told him that if she sees him hitting on anyone else from the group she will cut him out of the Friday dinner and make sure every girl in the school thinks he has a tiny dick and a hair-trigger. After that, Nate made sure to set his sights only on girls that none of us knew. \n\nNate shrugged. \"It's the end of the year, I figure I can risk it.\"\n\n\"I heard that!\" Sarah's voice yelled from the hall. \"There's still this dinner you can get kicked out of you know!\" \n\nWe all laughed and then entered the apartment. Sarah and Rita were sitting on the couch, already sipping wine. We said hello and hugged each other, and I asked, \"who else is coming?\"\n\n\"That's all of us, I'm afraid,\" said Sarah. \"I already told you about Nadia, John and Rachel are going on some romantic getaway, Elinor has a date that she apparently can't postpone, and it turns out Aaron is not done with the finals. He says the one on Monday is a big one, and he needs every minute to study.\" Her tone of voice let me know she's not happy with that excuse. \n\n\"Don't blame Elinor,\" Dani chimed in. \"You know she expected to finish college with a ring around her finger. Tonight might be her last chance to snag a boyfriend.\"\n\n\"Oh please! You don't see me running around trying to date anyone with a dick and a good smile! She should have a little bit more respect for herself.\" \n\nRita shrugged. \"I never really understood what's the rush, if she needs regular assisted orgasms that bad, I'm sure there would have been plenty of volunteers.\" \n\nThat was Rita for you. She was always outrageously open about sexual topics. She made it clear from year one that she was going to college to have a good time, and she loved regaling us with stories of her adventures. She had no shortage of partners, thanks to her voluptuous figure. She liked to say she had curves that should be put into good use. She wasn't lying, too. She was shorter than Dani and didn't have her long legs or toned body, but she more than made up for it with her other assets. She was wearing a flowy skirt that accentuated her curvy hips, and her shirt had a plunging neckline, putting her ample bosom on display. \n\nBut it was her face that made her impossible to ignore. Her bright green eyes, coupled with her long raven-black hair, gave her an exotic allure, and her full, luscious lips made even drinking from a straw look indecent.\n\n\"What about Mary?\" I asked. Mary was Rita's roommate. \n\nRita shook her head. \"Art students get to do a project instead of finals, the bastards. She went back home two weeks ago to work on hers.\"\n\nWhich I would have known if it weren't for my self-imposed exile from the group.\n\n\"Well, if everybody's here, can we start eating?\" Nate said. \"I'm starving.\" \n\nWe agreed and sat down around the table. Once again, everyone contributed something to the meal. My lasagna and pastries were the main courses, but we had Rita's pecan salad for a starter and Sarah's ridiculously delicious brownies for dessert. And of course, Dani still supplied the wine, even though she no longer needed her fake ID. \n\n\"Ugh, wine? Can't we have something stronger for the last Friday dinner?\" Rita said. \n\n\"Hold on,\" Nate ran to his bag. \"I thought we'd want it after the meal, but Rita's right, there's no reason that it shouldn't be available right from the start.\" And he produced a near-full bottle of vodka.\n\n\"Nice!\" said Rita. Sarah had a different reaction \"ew, I hate Vodka.\" \n\n\"Just mix it with something,\" Dani told her, \"We have orange juice, we could make screwdrivers.\" \n\nI looked at her in surprise. Dani was never a big drinker. I didn't think she even knew what a screwdriver is. \n\n\"No thanks, I'll stick with the wine,\" Sarah said. \n\nDani brought the orange juice from the fridge and started pouring it into her glass. \"Anyone else?\" \n\n\"Sure,\" said Nate, giving her his glass. \n\n\"I'll go with wine too,\" I said. \"Vodka on an empty stomach is never a good idea.\"\n\n\"Nah, it makes it easier to get smashed,\" Rita said. \"Gimme a screwdriver, too, Dani.\" \n\nDani poured each of us their chosen beverage. \n\n\"A toast,\" Sarah said, raising her glass. \"Cole, you want to do it?\"\n\nI stood up and raised my own glass. \"To finishing the finals, getting our degrees, and starting our life as adults! May we have many exciting adventures and successes!\"\n\nWe all drank, and Rita remarked, \"I wouldn't mind some exciting adult adventures,\" causing Sarah to nearly do a spit take. \n\nWe all laughed and began to eat our meal, which was excellent as always. Dani was the one to break the silence of our chewing. \"So Rita, about those 'adult adventures'... Had any good one lately?\"\n\nRita took another sip of her drink and smiled widely. \"Nah, these finals have done me in. I barely had time to breathe, let alone find a willing partner who's not swamped. I'm afraid I had to rely on battery-powered adventures the past month.\"\n\n\"Just a month? I should throw you out for complaining about that!\" Sarah cried. \"Some of us girls have to do with much less, you know!\"\n\n\"Having a bit of a dry spell, Sarah?\" Nate asked, smiling.\n\n\"A lady never tells.\" Sarah met his gaze. \"But it has been some time. I thought college was supposed to be wild! But if you're not willing to sleep with complete strangers - no offense, Rita - then you barely get to have any fun.\"\n\n\"I don't know why you're complaining,\" Dani interjected. \"At least you were single and could have some fun with strangers if you wanted to. And I know of at least some nights when the sock on the door rule was invoked. Meanwhile, here I am, wasted all my time in college dating one asshole, and now we're graduating, and I've got no crazy story.\"\n\nSarah's protective instincts kicked in. \"Don't be too hard on yourself. You were in love, and he was a jerk who didn't know a good thing when he had it.\" \n\n\"It's ok,\" Dani said. \"I've gotten over him. I just wished I would have gotten over him sooner. I feel like I've wasted even more time that could have been much more memorable. I feel like I missed out on a key part of college.\"\n\n\"I think I speak for all men of the university - and some of the women - when I say that we all feel the loss of that.\" Nate said. The fact that everybody laughed was a testament to the strength of the drinks. \n\nThen he threw me under the bus again. \"Besides, you're not alone. Cole here basically jumped from relationship to relationship for his entire time here.\"\n\n\"Hey!\" I cried in mock-rage. \"I can't help it if I'm a romantic. And Becky and I had enough fun, thank you very much.\"\n\n\"Oh, yeah, some nights you've even stayed up until past ten!\" said Nat sarcastically. \"Face it, man, you've missed out. You were in an old-people relationship before you even left college, you let all the fun opportunities get away from you.\"\n\nWe were all quiet after that exchange. I think Nate figured he went too far because he started saying, \"Oh, shit, I didn't mean -\" \n\n\"No, you're right.\" I said. \"I have missed out. But my mother taught me that complaining about something is useless unless you're going to try and change it, so I guess there's no point in talking about it anymore.\"\n\n\"But do you want to try and change it?\" Rita asked. We all looked at her. She seemed blushed, as though what she's about to suggest makes her nervous, but the gleam in her eyes showed she was also excited. \n\n\"You've got something in mind?\" Dani asked.\n\n\"Well... I noticed that everyone here is currently unattached... and I thought we could try something together...\"\n\nWe all sat stunned while we contemplated the meaning of her words. \"Try something?\" did she mean the five of us having sex together? \n\nI suddenly took a good hard look at everyone in the room. I would be lying if the thought of \"trying something\" with these three ladies didn't get my blood going. Rita was sex incarnate, and Dani is every boy's wet dream. And Sarah, well... truth is, despite all the time we've spent together over the past four years, I never really thought of Sarah in a sexual manner. She wasn't bad looking, mind you. Sitting there in her green dress that would have been short on anyone else, but perfect for her, it made her look all the more like a pixie. Her small breasts fit her tiny frame, and her legs were toned and shapely enough to compete with Dani's, even if they weren't as long. But I was never in the frame of mind to fantasize about her, I guess. Though I did have the occasional naughty thought of what it'd be like to have sex with someone so lightweight, I can throw them around to my heart's desire. \n\nWho am I kidding? Even in my heartbroken state, I'd be lucky to have any of these girls. \n\n\"Define 'try something,'\" Sarah said. \n\n\"Well... I was thinking about maybe playing a little game,\" Rita said coyly.\n\n\"What? Like Monopoly?\" Nate asked. That broke the tension a bit, and we all laughed.\n\n\"No, no...\" Rita giggled. \" I was thinking maybe we should play something a bit more... adventurous.\"\n\n\"Adventurous as in one of those adult adventures you've mentioned before?\" Dani asked.\n\nRita nodded. \n\nSarah was the first one to speak. \"Ok. I'm in.\" \n\nWait, what? Did Sarah just agree to play some adult sex game?\n\nShe looked at her roommate. Something passed between them wordlessly. Whatever it was, it seemed to give Dani some resolve. \"Ok,\" she said, looking determined. \n\n\"Hang on, all three of you girls are on board with this?\" Nate was voicing the exact thoughts that we're going through my head.\n\nRita was about to say something, but Sarah beat her to it. \"It's been a lot of stress for a long time. I don't know what Rita has in mind, but I'm up for anything, and I trust all of you guys. Why? you're not chickening out, are you?\"\n\n\"Heck, no! Just wanted to be sure I'm not dreaming here. Count me in.\"\n\nThey all turned to look at me. \n\nWhat was Rita planning, exactly? It was impossible to read her expression. A part of my brain was saying something about it being too soon after my breakup to be doing something like this, but it was silenced by another part that told me I'd be regretting it all my life if I didn't join in.\n\nHonestly, I barely needed to think about it.\n\nI nodded.\n\nThe meal was mostly over anyway, and no one wanted to eat more, the excitement of what might happen taking over us. We cleared the table and then sat down, looking expectedly at Rita to tell us what she had in store for us. \n\n\"Oh, I almost forgot,\" said Rita turning to Sarah, \"do you have a deck of cards?\"\n\nSarah nodded and went to her room to get it, while Nate asked: \"what, we're going to play strip poker or something?\"\n\n\"Not strip poker,\" said Rita mysteriously. \"Too complicated. You'll see what we're playing in a minute.\"\n\nSarah came back with the cards. Rita took them from, removed the Joker, and started shuffling vigorously.\n\nShe gestured for us to sit around the table and explained the rules as we took our place.\n\n\"Right, so this is really simple. We go in clockwise order, during each player turn, you take one card and show it to everyone. If it's a card that hasn't been drawn, you get to make the rule for that card for the rest of the game. So for example, if I draw -\"\n\nAnd here she stopped shuffling and picked a card. Six of clubs.\n\n\"- The six of clubs, I could make a rule that anyone who draws a six can make another player take a drink. You can't repeat the rules, though.\"\n\nWe all looked at each other, wondering what rules we're going to come up with. \n\n\"So, the rules can be anything at all?\" Dani asked.\n\n\"You're not supposed to make it anything illegal, so no \"tens mean you go rob a bank\" or something, but, yeah, anything goes.\"\n\nWe all sat in silence, wondering all the possibilities that 'anything' might entail. \n\n\"Right,\" said Rita, slightly blushing from all the attention on her. \"There are just a few more rules: if you draw a Jack, the rule you make applies to all men. If you draw a Queen the rule applies to all women. If you draw a King, you can change the rules of an earlier card. And if you draw an Ace -\" and here she gave us all a meaningful look - \"you get to dare any player to do anything you want.\"\n\nOnce again, the word anything had our minds racing.\n\n\"Alright, if we're gonna do this, I need another drink.\" Sarah broke the silence. Dani whipped up Round of screwdrivers for everyone. I noticed Sarah didn't complain about the vodka this time. I guess she, like me, needed the boost of liquid courage that came with the stronger liquor. \n\n\"Alright, everyone ready?\" Rita asked. We all nodded in turn, and Rita gave the deck one last shuffle. \"I'll start us off.\"\n\nShe picked the top card and showed it to all of us. The Two of Hearts. \n\n\"Ok, let's keep it light for now. Twos are for truth. Anyone who draws a two can ask someone else a question, and they have to answer truthfully.\" \n\n\"Oh no, you've fooled us into playing truth or dare! Should we get pillows for a pillow fight next?\" said Nate mockingly.\n\nRita just smiled at him. \"I see we have a volunteer! How nice of you, Nate, to make me pick you.\"\n\nNate shrugged. \"Bring it.\" \n\n\"Oh, I will. I know you're a bit of a man-slut - not judging, mind you, just making an observation. My question is: ever did it in a public place?\"\n\nNate smiled as if he was waiting for this question all night long. \"As a matter of fact... yes, yes, I did.\" ",
        "Dani reached for the deck, but Rita stopped her. \"Oh no, he's not done yet.\" she turned to Nate. \"You need to tell us about it, so we can evaluate how truthful you are.\"\n\nNate rolled his eyes but didn't stop smiling. \"Well, a while back, I was seeing this girl - I'm gonna keep names out of it if you don't mind. Anyway, she was a real freaky English lit major, and she really, really loved her subject, anything to do with literature or poetry just got her going. First time we hooked up, she had me read her this poem by E. E. Cummings, and she nearly pounced me before I could finish.\"\n\nHe took a short breath while giving the girls a look as if trying to see how his tale affects them. \"Anyways, she mentioned she had this fantasy of doing it in a room full of old books, like a library. Well, I figured it could be a good way to take something off the bucket list and fulfil a fantasy for her. So I started figuring out how to make it happen. You know the medieval law section in the university's library?\"\n\n\"The university library has a medieval law section?\" Sarah asked. \n\nNate nodded. \"Exactly. Nobody ever goes there, and on Tuesday nights, when the library is open until 11 pm, the whole floor is deserted. So I told the girl to meet me, and told her to wear a skirt. She figured out what I had planned as soon as she got to the library, and let me tell you, she was like a kid in a candy store. She was practically vibrating with excitement. By the time we got to the floor and had a few bookshelves to hide us, she was so weak-kneed that she had to lean on me. I took off her panties from under her skirt and they were soaked through, I thought that only happens in stories. We ended up just doing it then and there, with her bent over and leaning on the bookshelf and me pounding from behind. It was more of a quickie than real sex, no foreplay and such, but it still counts.\"\n\nWe all sat in silence. I heard the story before, of course, but in the context of the game we were playing, it took on a new shape. Dani and Sarah's face were pink with an excited blush. Rita was smiling like the cat that ate the canary. Finally she broke the silence: \n\n\"That was a very good story, Nate. Who knew medieval law can be so exciting?\" \n\nWe all chuckled nervously, and Rita passed the deck to Dani. \n\nDani flipped the Nine of Spades. \"Um, ok... Maybe we can keep up the theme a bit? Nines are for Never Have I Ever. If you draw a nine, you say something you've never done, and anyone who did it has to take a shot.\" She filled our glasses with just enough vodka to qualify as a shot. \"Um... right, never have I ever... had sex in a roommate's bed.\"\n\nI was surprised to see Sarah timidly take a drink, and alarmed to see Nate do the same.\n\n\"Dude, what the fuck?\" I said incredulously. But Dani's draw everyone's attention when she inquired from Sarah, \"please tell me you mean Nadia's bed!\" she was looking intently at the petite blond. \n\nSarah turned full-on crimson. \"Well...\"\n\n\"Oh my god! You had sex in my bed? When? Why? How?...\" Dani seemed to be at a loss for words. \n\nSarah gulped. \"Well... do you remember that time your cousin was here for that model UN thing, and you told him he can crash here instead of bunking in some crappy youth hostel?\"\n\n\"So what, you wanted revenge on me for volunteering our apartment or something?\"\n\n\"No, that's not it...\" Sarah turned even redder, which I didn't think possible. \"You gave him your bed and shared with me, only I couldn't sleep, so I got up for some water, and he was in the kitchen too. And he... Well, we tried to exit at the same time, and sort of bumped into each other, and I guess he took that as a hint, cause the next thing I knew he had me pinned to the wall and was kissing me, and his hands were kinda roaming, and so I... um... I went with it...\"\n\n\"You fucked my cousin?\" Dani cried. \n\nSarah nodded. \"It sort of just happened, he just lifted me up and carried me to bed, and neither one of us was wearing much to begin with, so he just took off my shirt and my panties, and he... um... he used his tongue, and by then, I wasn't really going to stop him if you know what I mean.\"\n\n\"You cousinfucker!\" Dani cried incredulously, but there was a gleam in her eye that told me she's not that angry. \n\n\"If it helps, most of it wasn't on the bed... more like against the wall, kinda,\" Sarah said, blushing. I took in that mental image, hoping that I might get to relive it tonight. \n\nIt took me a moment to remember something disturbing. \"You had sex in my bed?\" I asked Nate pointedly.\n\n\"Yeah... sorry about that.\" He said, not looking the least apologetic. \n\n\"What, was your bed broken or something?\"\n\nHe looked around the table. \"I think I'll skip telling that story, thanks.\"\n\nSarah looked up, \"what!\" she cried, \"I had to tell everyone what I did.\" \n\n\"And I thank you for that, but it's not part of the rules, so I'm not telling,\" Nate answered stubbornly. \n\nI shook my head in disbelief, but it was clear there was no arguing with him. I reached for the deck and picked a card. The King of Hearts. \n\nDamn, that sucked. There were only two possible cards to change the rules for, and it meant I wouldn't get to make Nate pay for fucking in my bed. \n\n\"Aww man, that's too bad,\" Rita seemed to have read my mind. \"Ok, what rules are you going to change.\" \n\nThere was really only one thing I wanted to change. I lifted the card up and said: \"Hear ye, hear ye, by royal decree, when someone draws a Nine, and a game of Never Have I Ever commenced, those who drink MUST tell their story when asked!\" \n\n\"Hear hear!\" answered Sarah and Rita in unison. Nate shook his head, \"you guys are such nerds.\" \n\nSarah picked up another card. \"Oooh! Yes!\" she yelled as she revealed the Jack of Diamond. \n\n\"Alright, I'm going to keep it real simple, I think we need to get some more excitement here, so now, whenever a Jack is drawn, all men must strip off an item of clothing.\"\n\nRita whooped loudly, and even though I was losing my shirt, I couldn't help but smile. \n\n\"Simple and to the point. I like it!\" Said Nate as he removed his shoes. \n\n\"Hey! Shoes don't count!\" Sarah protested.\n\n\"That was not previously stipulated,\" said Nate. Have I mentioned he's a law student? I don't think navigating an adult card game was the university's intention, but I could only imagine he was doing his professors proud with the way he kept finding loopholes to get his way. \n\nI thought about it and decided my shirt will probably be more in the spirit of the game. I had an undershirt underneath anyway. \n\n\"See? Cole isn't scared to take off real clothing,\" said Sarah accusingly. \n\n\"You'll just going to have to wait for another opportunity to see some skin,\" answered Nate. He was smiling menacingly at her. I could guess why. Sarah may not have realized, but she opened the floodgates to move from drinking and storytelling to showing off skin, and Nate's turn was coming up. I was pretty sure he was going to find a way to strip her bare no matter what he drew. \n\nUnfortunately, that was not in the cards, as Nate revealed the Two of Clubs. \n\n\"Aw man, us guys are never going to get to give out any rules tonight, huh?\" he said. \"Alright, fine. I guess I owe Rita. So, hot stuff, are you ready for it?\"\n\n\"I'm an open book, honey,\" Rita said with a smile. \n\n\"Have you ever had sex with a girl?\"\n\nRita rolled her eyes. \"That's all that guys want to hear about, huh? Fine, yes, yes, I have.\" \n\nEveryone was looking intently at her. We weren't surprised per se. As I've mentioned, Rita was somewhat wild, and she gave the impression that there wasn't much she didn't do, but we've never heard this story before. \n\n\"I guess I should tell you guys how it happened, huh?\" she said, looking directly at me for some reason. I nodded, my throat suddenly dry. \n\n\"Well, I'm sure you won't be surprised to hear the girl was Mary,\" she started, holding her gaze fixed on me as if she didn't want to miss my reaction. Mary was gay, and out from before we even started uni. As fitting for an art student, she liked to color her hair a different color every other month or so, and had piercing blue eyes. She was nearly as tall as Dani, with smaller breasts, but a sexy ass which she knew just how to sway to catch attention. The thought of her and the voluptuous Rita entwined in a naked embrace had my heart racing. \n\n\"So for the better part of a year, I've been sharing a room with Mary, and we agreed from the start we're not going to be shy about bringing other people over. We came up with these curtain thingies that gave some privacy, but they did nothing to stop sound from crossing over and let me tell you, some of the girls she brought over were LOUD. I spent more than one night lying in my bed, listening to them scream in pleasure and wondering what the hell she's doing to those bitches to make them sound like that.\" \n\nShe stopped to take a sip from her glass, licking her lips seductively, then continued.\n\n\"Well, after a few months of this, I had to use all my willpower not to tear open the curtain and jump across the room to join them. And the thought of Mary making me scream like those girls got me so excited I could barely sleep even when she didn't have anyone over. So I started avoiding Mary because every time she looked at me, all I could think of was those blue eyes looking at me from between my thighs. Well, Mary noticed, and she asked me what's wrong, and after a lot of convincing, and a lot of wine, I finally told her how I'd been feeling...\"\n\nShe trailed off. We were hanging by her every word, and she knew it. She took another sip, slowly, and gave a little stretch that pushed her breasts forward. She let the silence linger a little longer, until Dani blurted out, \"and then what happened?\"\n\nRita's attention turned to her, and she continued, this time talking directly to Dani. \n\n\"She kissed me. It was a very good kiss I might add. Soft, with just a little bit of tongue, and she gave me this tiny little caress -\" and here Rita ran the back of her hand on the side of Dani's face - \"which made me shiver in all the good places. And she said she's fine if I want to experiment with her and not to worry about it.\" \n\n\"Then she put her hand on my thigh and slowly moved it up as she continued kissing me, and I guess she knew I won't stop her cause her hand reached my pussy in no time. God, the way she touched me! I was ready to strip right there and let her have her way with me any way she liked. But she took her time. She undressed me slowly and had me undress her too, and she played with my body, teasing and touching, so by the time her tongue touched my clit, I came within seconds, and I didn't stop for a long time.\"\n\nWe were in awe of her description. What won't I give to be a fly on the wall of that room! \n\n\"And did you, um, return the favor?\" Dani asked in a choked voice. \n\nRita licked her lips again. \"Oh, yes. That was fun too. I think it's more of an achievement to get a girl to cum for you. With a guy, you just need to put him into your mouth and go in and out, and even if you're bad at giving head, he'll blow his load eventually. With a girl, it takes... more finesse. It was an awesome feeling Mary cum on my tongue, knowing I brought her there.\"\n\nShe turned to look at the rest of us in the room, stunned in horny silence. \"I think I shared enough for a truth. I'll pick a card now.\" \n\nNo one said anything as she reached for the deck and revealed the Six of Diamonds. \n\n\"Hm... let's see, I think it's time for a little action. Sixes are now for kisses. Whoever draws a six need to kiss someone, and I do mean real kisses - Full on make-out sessions. And just to make it more fun -\" she reached for the vodka bottle and emptied the last shot into her glass - \"we'll spin to decide who's on the receiving end.\" \n\nShe spun the bottle, and we all watched with bated breath as it made two full rotations before stopping pointing directly at me. \n\nRita's smile grew wide as she got up from her seat and made her way to me before I could even make a comment. She straddled me and leaned in for a kiss even faster. Her lips were soft and pillowy, and they pressed against mine with passion. Her tongue came in next, darting out to lick my top lip seductively. My body reacted to hers, my hands roaming all over her soft thighs and curvy hips. Her own hands were digging into my chest, and pulling on my undershirt to get me closer to her as the kiss became more urgent. My hands traveled up almost by their own accord, making their way to her incredible breasts.\n\nBut before they could reach their destination, Rita broke the kiss. We looked at each other panting for a second before Dani broke the silence with \"damn, that was intense. Get a room you two!\" \n\nI felt my face getting hot, but Rita only smiled as she dismounted me. \"Whatever,\" she said, \"don't pretend that you're not jealous.\" \n\nI found it interesting that Dani didn't contradict her.\n\nDani reached for the deck and revealed the Nine of Clubs. \"Again? I was hoping...\" Dani caught herself before we got to hear what outcome she was hoping for. \"Oh well,\" she said, \"never have I ever... Had a one-night stand.\"\n\nThe rest of us all downed our drinks. Dani looked at me in surprise. \"Rita and Nate I figured out, and we all know what cousinfucker here did -\" \n\n\"Hey!\" Sarah protested, but Dani ignored her.\n\n\"When did you have a one night stand?\"\n\nI sighed. Unfortunately, my own rule change meant that I had to tell the story. \n\n\"Right, so you may remember I was in a long distance-relationship throughout year one, and that she broke up with me during the summer that year.\" \n\nSarah, Dani, and Nate all nodded. \n\n\"Well, I was still recovering from the breakup, but there was this girl in my Econ class that made it pretty clear she wouldn't be against me asking her out. She was hot, too, so I figured it would be as good a time as any to get back on the horse. I did the classic date thing: movie, nice restaurant, only while we were eating she kept on saying how she's not really into a relationship right now, and not looking to get attached, and all those sorts of things -\"\n\n\"Ouch.\" Said Nate.\n\n\"Exactly, I was sure I struck out. But then she said she hated that people aren't more direct, and they should just ask for what they want instead of being shy.\"\n\n\"Well, that's a hint if I ever heard one,\" said Sarah. \"Did you pick up on it?\"\n\n\"You could say that. I asked her for a fuck.\" \n\n\"What?!\" Dani looked scandalized. \"Dude! That's kinda douchey!\"\n\nI shrugged. \"It seemed appropriate in context, and besides, it worked, she called the waitress for the bill and basically dragged me to her dorm room.\"\n\n\"What a slut!\" Dani exclaimed. \n\nI shook my head. \"Now who's being inappropriate? I asked for what I wanted, she was into it, I couldn't complain.\" \n\n\"So then what happened?\" Rita asked with a smile. \n\n\"We got to her dorm room, and we basically tore each other's clothes off. I actually had to dump the shirt I wore because all the buttons were gone. The only girl I had been with up to that point was Rachel, you know the long-distance ex, and we both were virgins when we started, so I wasn't what you would have called experienced, but she was kind enough to be patient with me, and give me a quick lesson in eating her out until she came, then she looked me straight in the eye and asked me what I wanted to do to her.\" \n\nLike Rita before me, I paused to make sure I have their attention. Sarah and Dani were visibly blushed. Rita had a mischievous gleam in her eye, and Nate's look was telling me, \"way to go, buddy!\" \n\n\"What did you do to her?\" asked Rita innocently.\n\n\"I bent her over the bed and took her right then and there. She offered no resistance, but I'm pretty sure she got off on being dominated, because the harder I went, the wetter she got. She kept on begging me to use her and tell her what to do. So I directed her to do every dirty thing I could think of. We ended up doing it twice that night, and she even swallowed the second time around.\"\n\nI tried not to look at Rita in the eye as I told the tale. No one in the room knew the girl I was talking about was her. She wasn't part of the group at the time, and we never mentioned it after I got together with Becky. The memory of that night still fueled many wet dreams for me and looking at Rita now, I could see that my story steered up the same feelings for her as well. I suddenly knew without a doubt that no matter what will happen for the rest of the night, she and I will relive our tryst soon. \n\n\"Well, that was an invigorating tale, mate,\" Nate broke the silence. \"Didn't know you had it in you.\"\n\nRita handed me the deck, \"your turn, big boy.\" She flashed me a brilliant smile. \n\nI picked the Three of Diamond. \"Hmm... I think I'll take Sarah's cue and get some skin going. Threes are for strips from now on.\"\n\n\"That's a bit close to my rule,\" said Sarah, \"you're not supposed to repeat rules, you know.\" \n\nThe memory of my one night stand filled me with confidence, and suddenly I had a wicked idea. \"You're right. How about this twist: whoever draws a three gets to choose someone to strip an article of clothing from, and another person to do the stripping, only they have to do it with their mouth.\" \n\n\"Oooh!\" Rita showed her appreciation for my idea. Sarah blushed a deep red. \n\n\"And you know, since you like arguing so much, I think I'm going to choose you.\" \n\nSarah's eyes went wild. \"Wait, no, I'm wearing the least clothes here! You should pick Dani or -\"\n\n\"Gee, thanks, girlfriend,\" said Dani sarcastically. \n\nI shook my head slowly. \"Nah, Dani will get her turn.\" I looked at Nate, \"wanna do the honor?\" \n\nNate's smile was so wide I thought the top of his head would fall off. He stood up and offered his hand to Sarah. She seemed hesitant still. \"But, if you take off my dress...\"\n\nNate took her hand in his and said calmly, \"Come on, you won't be showing more than what we would have gotten to see in a bikini.\"\n\nSarah lowered her head in defeat, then got up. Nate's eyes were glued to her body. He walked around her slowly, as if planning his approach. Finally, he went in from behind, bending in his knees a bit to put his head next to her. Sarah flinched a little when Nate's lips touched her shoulder. He managed to grab hold of the strap of her dress and slide it down to her elbow, exposing the cup of her light-blue bra. \n\nNate went to Sarah's left, this time facing her. When he dipped his head towards her shoulder, Sarah tilted her head up almost as if she expected him to kiss her. He got a hold of the strap of her dress much more easily this time, but moved slowly downwards, pulling the fabric with him until he was face-to-face with Sarah's bra clad breasts. He let go of the dress, allowing it to fall, but the fabric clung to Sarah's hips, so with a smile, he kneeled down towards her midriff. \n\nSarah yelped when his lips touched her body. We couldn't see exactly what Nate was doing because his head was in the way, but Sarah's milky white skin was pink all the way down to her soft breasts, and she squirmed a bit as he tried to get a hold of the dress right above her belly-button, but she didn't push away. Finally, Nate managed to bite down on the dress and guided it down Sarah's toned legs. \n\nShe stood before us in her bra and simple white panties. Her skin was so fair she almost shone, the light blush on her skin accentuating the curves of her body, from her small but enticing looking boobs to her tight stomach, to the soft flaring of her hips and the slight curvature of her mound. I drank the sight in, as did everyone else in the room, especially Nate. He was still kneeling in front of her, looking up at her body in awe. \n\nThen the spell broke, and Sarah suddenly moved her hand to cover herself. Nate got up, still not taking his eyes off her, and she stepped out of the dress and returned to her seat. ",
        "She took a sip from her drink, and wordlessly reached for her card. She looked at it for a bit, as if forgetting the rules of the game. Only after Rita made an \"ahem\" noise did she stop her pondering, and her blush returned with greater vigor. \n\nShe spun the card around to show us the Seven of Diamonds. \"I...\" she began, then shook her head as if to clear it. \"Oh, fuck it. Let's keep it simple. Sevens are for Seven Minutes in Heaven. Anyone who draws one gets to spin and take someone to a room for seven minutes, whatever they can do in that time is up to them.\"\n\nShe spun the bottle. I could see Nate looking at it intently, but his hopes were dashed when it stopped on Dani. \n\nDani just smiled as she got up, saying, \"Come on, cousinfucker, I promise I won't punish you too hard.\" \n\nSarah smiled, getting up herself, and looking at us, said, \"you three be good now, you hear?\"\n\nAnd they both entered Sarah's room and closed the door. \n\nNate, Rita, and I sat down in silence for a minute, trying to hear what's going on inside. We could hear giggles, but not make out any words. \n\nRita broke the silence. \"Go on, I know you're dying to ask,\" she told Nate.\n\nNate smiled guiltily, \"well...since you brought it up... you and Mary, huh?\" he asked Rita. \n\nRita rolled her eyes, but smiled, \"Hey, it's college, we're supposed to expand our horizons and whatnot.\" \n\n\"Did you do it again?\" I was surprised to find out I was asking the question aloud. \n\n\"Oh, yes. Every now and then Mary and I would get together and relive that night. And before you ask, whenever she had a girlfriend, I backed out. Me and her were just having fun, that's all it was.\"\n\n\"Ever did it with someone other than Mary?\" Nate asked, the idea obviously exciting him as much as it did me. \n\n\"Maybe, you'll just have to wait until you draw another two to ask,\" replied Rita Mysteriously. \n\nWe've heard a roar of laughter from Sarah's room. \n\n\"They seem to be having fun,\" commented Nate. \"Should we continue playing to pass the time?\"\n\n\"No point,\" I said, looking at the stopwatch. \"There's less than a minute left, might as well wait.\" \n\nWe waited in silence for a bit, wondering what the hell could be causing so much giggling when the alarm sounded, and Rita jumped off her chair to knock on the room's door and tell Sarah and Dani to come out. \n\n\"Alright, let's get going with...\" Nate started talking and then stopped abruptly. Because Dani came out of the room first, I didn't see what made him stop for a second, and then I too had my mouth open. \n\nSarah had changed out of her regular underwear and into something far more alluring. Her bra was red lace half-cup and made so that it was showing off her small but beautiful breasts almost completely. The lace was laid out in a way that made me think I could see the outline of her nipples, but not quite, so it was impossible not to stare into them trying to take as much of it in. \n\nHer panties were a matching red lace boy-shorts, cut so close to her body I wasn't sure they weren't painted on. They rose only an inch or so above her crotch, and my eyes traced the lines of the lace all the way to the center, where I could see a slight darkening that had to have been her pubic hair. I had to fight off a caveman urge to pick her up and carry her to the room right then and there, and I was sure Nate was thinking the same thing. \n\n\"Damn, boys, droll much?\" Dani said with a smile. \"See Sarah, I told you you look hot in that thing.\" \n\nSarah was blushing hard enough to match her lingerie, but she clearly enjoying the attention. She was smiling glowingly as she took her seat.\n\nI was still looking at Sarah, so I didn't notice when Rita pushed the cards towards Nate. Apparently, he didn't notice as well, because Rita had to go, \"Hello! Earth to Nate! Want to continue the game or what?\"\n\nNate was finally shaken from his stupor enough to pick a card. A six of Spades. \n\nThe prospect of locking lips with one of the beautiful girls in the room seemed to have aroused Nate somewhat, and he reached out for the bottle and gave it so vigorous a spin the thing nearly fell off the table. Nate spun it again, this time a bit more gently, landing on Rita. \n\nNate snuck a look to Sarah, who just smiled reassuringly. Rita was already getting up and straddling him. \"Don't worry, I promise I'm just as good,\" she said sultrily as she leaned in for the kiss. \n\nI was now in the somewhat awkward position of watching someone else making out with a girl I have made out with earlier that night. In hindsight, I guess I should have been jealous, but I really wasn't. My mind was swimming with the events of the evening so far and the possibilities that might happen in the future. After seeing Sarah's body, I was determined to see just as much of Rita and Dani before the night was over.\n\nMeanwhile, on the other side of the table, things were heating up. The way Rita was sitting on top of Nate, her skirt rode up, exposing no small amount of her silky thighs. Nate was definitely getting used to his new role because his hands were all over Rita's body as they kissed. It was a raunchy display of lust the likes of which I've never seen before, and I was half-certain that if things continued much longer, Rita might make Nate forget all about Sarah. \n\nSarah must have thought the same because she gave a loud \"ahem\" which caused the two to untangle. Rita got up wordlessly and turned over a card. \n\nThe Ace of Spades. \n\nThe first Ace of the game had my head swimming with possibilities. Who will Rita pick, and what would she make them do? \n\nRita contemplated the same thing. \"I think that the boys had enough fun lusting after Sarah's tight body,\" she said with a smile. \"It's time for us girls to have some eye candy as well. Cole?\"\n\nI looked up. Rita had a wicked gleam in her eye. \"Won't you be a dear and strip for us? Put on some music too, make it a good show.\"\n\nI gulped. \"How much should I take off?\"\n\n\"Oh, I'll let you keep your underwear, for now. Everything else must go, though.\"\n\nRita searched her phone for an appropriate song, which ended up being some EDM track I've never heard off, and I got up. \n\nI had no idea what I was doing, so I just swayed to the music, gyrating my hips exaggeratedly. Dani and Rita whooped in appreciation. Encouraged, I stepped out of my shoes and moved towards Dani. I placed my feet on her chair, right between her jeans-clad legs, and still gyrating, I took off one sock and threw it over my head. I did the same for Sarah, who obliged me by opening her legs and giving me a view of her panty-clad crotch. \n\nNot wanting to leave anyone behind, I moved on to Nate, and swaying even more widely, took off my shirt as moved closer so that my chest was as close as possible to his face. He leaned away, of course, but the maneuver got everyone laughing. \n\nTime for the main event. I moved as close as possible to Rita. From where she was sitting, her head was only slightly higher than my crotch, and I stood on my tip-toes as I moved my hips in and out so that she'll have as close of a view as possible. I opened my belt to whoops and whistles from the rest of the group, then moved to Rita's other side to open the top button of my pants, and then another, one by one, each time thrusting a little closer to Rita's face. She cheered me on with each button opened, until they were all done, and I shimmied out of my pants, throwing them away as well. I then made my way back to my seat, making a little \"oops\" pose right before while wiggling my ass, drawing more laughter from the table. \n\nRita, Dani, and Sarah all whooped and clapped their hands at the performance. Even Nate joined in. I gave a small bow then sat down. \n\n\"That was fun! I hope I get an ace too, I can think of some nasty thing for you boys to do,\" said Dani as she reached for the deck of cards. \n\nShe didn't. She had the Four of Hearts. \n\n\"Hm... Alright, I've got something,\" she said, pondering. \"But first, I'm gonna choose a victim.\" She spun the bottle, which landed on Sarah. She then mysteriously got up and ran to the kitchen. She came out of it with something behind her back. \n\n\"Alright Sarah, you cousinfucker, here's what going on: Whenever someone draws a four, they spin to choose a player, then they can put this -\" and here she showed us the squeeze bottle of chocolate syrup she had hid behind her back - \"on any exposed body part, then they can have any other player lick it off.\" \n\nBefore Sarah could reply, Dani was already above her, squeezing chocolate syrup all over her chest. \"Eeeek! That's cold!\" cried Sarah. Dani responded by squeezing some on her stomach as well, causing Sarah to jump in her seat. \"Hey!\" \n\nDani leaned down to her and said, \"Just so you know to keep your hands off other people's beds, or cousins. Now we're even, and to show you there are no hard feelings, I'll do you a favor.\"\n\nShe looked up at Nate, \"Come on, big guy, do the work.\" \n\nNate didn't need to be told twice, and nearly leaped out of his chair to bury his face in Sarah's chest. She blushed profusely but didn't resist as his tongue cleaned the chocolate off her milky skin. He traced his tongue over every place that Dani plastered with the syrup quickly at first, but when he reached her stomach, Nate looked up apologetically. \"I think it'll be easier if you lay down.\"\n\nSarah just nodded, and got up and laid flat on the carpet, Nate kneeled next to her and leaned in, getting back to work. From her squirming, it was evident that the experience is tickling Sarah. Still, she was also breathing somewhat heavily, and I had a sneaking suspicion that she was enjoying the \"punishment\" Dani gave her. Her nude legs rubbed against each other enticingly, and every now and then, a soft moan escaped her lips as Nate's tongue touched a sensitive spot. \n\n\"Quite a show, isn't it?\" Dani's voice whispered in my ear. \"I can see you're enjoying yourself.\" She reached down and touched my hard-on through my boxers. I tensed up, the contact, even though the fabric gave me a pleasant shock. \n\n\"You know, I think I might have missed out on more than I realized,\" Dani continued to whisper as she massaged my cock. \"Turns out everyone here has had more fun than me. Hell, even little Sarah here found someone to bang her against the wall for one night. I want a memory like that. I want it all.\"\n\nI tore my eyes off the image of Sarah's nubile body writhing under Nate's ministrations to look into Dani's eyes. She looked.. Determined, but also scared in a way, like she was dreading my reply. I leaned in and whispered, \"I don't know where this game takes us, but I can promise you, I will do all I can to give memory like that or better.\" \n\nDani's smile grew wider at my words, and she gave my cock a squeeze. \"Thanks,\" she whispered, and then leaned in closer so that I could feel the warmth of her breath on my ear, \"with a little luck, we might even have something that will rival Rita's experiences.\" My eyes widened at the suggestion. Dani leaned away, blushing. I snuck a look to Rita, who was looking at the both of us with a knowing smile, then gestured her head towards Sarah and Nate on the floor. I followed her gaze. Nate had apparently finished all the chocolate on Sarah's body and was now leaning in and kissing her hungrily. \n\n\"Hey, that's not part of the rules!\" said Dani, and she let go of my penis. Nate and Sarah stopped what they were doing and looked at us sheepishly. Nate got up and extended his hand to Sarah, and they both returned to their seats. \n\nIt was now my turn, and I flipped the next card. Ten of Clubs. \n\nMy mind was a storm. Watching Nate and Sarah on the floor had me thinking about so many naughty things, but I didn't know if I should go for any of them or not. More than anything, I wanted Dani's hand back on my dick, but I didn't know how everyone would react if I were to just make that the new rule. \n\nThen inspiration came. Something I read about in a dirty story. \n\n\"Ten is for table,\" I said. \"Anyone who draws a ten can send any other player under the table until that player's next turn. They can do whatever they want under the table and cause whatever sort of mischief they can think of.\"\n\nI turned to look at Dani. \"Down you go. Be nice... or not.\" The last part I said in a low voice so that only she could hear. \n\nDani smiled and slid off her seat under the table. Sarah had put on a tablecloth, so it was impossible to see what she was doing down there, but I could feel her moving around and watched as first Rita, then Nate, then Sarah all jumped when Dani did something to them. \n\nSarah was reaching for the cards, just as I felt Dani's weight shift, and Sarah was suddenly startled by something Dani did. Sarah giggled a bit as she made another attempt for the cards. She drew the Three of Hearts.\n\n\"Um, well... Dani's is out, and Cole's almost naked, so I guess I should make either Rita or Nate Strip...\" Sarah seemed to have difficulty concentrating. I looked over at Rita and saw that she, too, was paying attention to something else. What was Dani doing to them?\n\n\"Alright, Nate, you're wearing too much. Time for you to lose something.\" Whatever Dani did to distract Sarah seemed to stop. Nate was about to say something, but Sarah cut him off. \"No protests! Unless you want me to make him do the stripping,\" She nodded her head towards me. I had a terrifying flash of trying to take Nate's pants off with my teeth. \n\n\"Good,\" Sarah continued. \"Rita, you do the honors. Something tells me it won't be your first time.\" \n\nRita smiled widely and got up to the stunned Nate. \"This will be easier if you stood up,\" she said. Nate got up, and as we watched wide-eyed, Rita got on her knees and leaned in to start manipulating his belt with her mouth. \n\nThere something incredibly erotic about watching Rita on her knees giving, loving attention to Nate's crotch. It was even more of a turn on because at that moment, Dani finally started paying me some attention. \n\nUnderneath the table, a hand was lovingly rubbing my boxer-clad penis, sending exciting shivers up my spine. I looked down and saw that Dani's head emerge from under the tablecloth looking at me with a naughty smile. Then she sent her hand up and grabbed the rubber band at the top of my underwear, pulling it down to reveal my erection. Her long fingers caressed me as she looked approvingly at my dick and licked her lips. \n\nI looked at Sarah, worried that she might notice what her roommate was doing, but I needn't worry. Sarah's eyes were fixed on the show Rita and Nate were giving us. I scooted down in my chair to give Dani better access to my dick, and turned my sight to my own roommate and the buxom brunette trying to take his pants off. \n\nRita had somehow managed to get Nate's belt open and was now working on the buttons of jeans. I bet he was thanking God that he didn't choose a pair with a zipper because each button forced Rita to bury her face in his crotch. There was an undeniable bulge in Nate's jeans, which probably only made matters more difficult for Rita, but no one complained. \n\nI was torn from the sight by a new sensation. Soft lips kissing were the head of my penis. I looked down again and met Dani's mischievous brown gaze as she lowered her head and licked the underside of my shaft. Then she grabbed the tablecloth and moved it over my crotch so I could no longer see what she was doing. I could only feel what she was doing, but boy did I feel it. She planted soft kisses and small, daring licks all over the head and the shaft, causing me to go crazy with anticipation. I wanted nothing more at that moment than to feel her mouth take me in completely, but she lingered, teasing me endlessly. \n\nI scooted down even further, hoping that Dani would take the hint and end my torment. I looked guiltily at Sarah to see if she noticed, and to my surprise, found that she scooted down her chair as well. I realized I could only feel one of Dani's hands on me. She was doing something to her petite roommate from under the table! And Sarah was obviously enjoying it - her skin was flushed, and she was breathing heavily. The thought of two girls touching each other intimately mere inches from me sent me off in a spiral of excitement, causing my dick to jump a bit, which drew an appreciating kiss from Dani's talented mouth. \n\nSuddenly, I noticed movement in my peripheral vision and looked up to see that Rita had managed to roll Nate's pants off his legs, and him stepping out of them. I immediately straightened up so I won't arouse suspicion, and Sarah did the same. I guess Dani figured out what was going on, because I felt a hand tuck my hard cock back into my boxers. \n\n\"That... That was hot,\" said the flustered Sarah as Rita and Nate returned to their seats. I wasn't sure if she's talking about the stripping or whatever Dani was doing to her, but I agreed wholeheartedly. \n\n\"Thanks, those buttons were a real pain,\" answered Rita, smiling like a cat that ate the canary. \"Though I think Nate enjoyed it quite a bit.\"\n\nNate shifted in his chair in a manner I recognized as trying to adjust his erection. Who could blame him? He just spent several minutes with a beautiful bombshell having her full lips very close to his dick. \n\n\"My -\" and here Nate jumped a bit. I guess Dani moved to show him some attention right then. \"My turn,\" he managed to complete. \n\nHe flipped over the Eight of Diamond. \n\n\"Hm... what should I do...\" He said, his eyes instinctively drawn to Sarah next to him. \n\n\"Oh, don't look at me, I'm already half-naked here!\" Sarah said. \n\n\"And looking damn good,\" Rita said. Sarah blushed from the complement. \n\n\"That's it! I've got an idea,\" Nate turned to all of us smiling. \"Whoever draws an eight has to make Sarah blush. The deeper, the better!\"\n\n\"What? No! That's gotta be against the rules, you're not supposed to pick on me like that!\" Sarah protested, and looked imploringly at Rita, expecting her to intervene.\n\nHer hopes were dashed when Rita said, \"sorry, but this game is all about making our own rules, remember? Besides, I think it's adorable when you blush all the way down to your chest!\"\n\nI thought of a different problem. \"How are you going to decide when the mission is accomplished? No offense Sarah, but you blush really easily.\"\n\n\"Hey!\" cried Sarah, and blushed deep pink, proving my point. \n\n\"You what? How about I've got one minute to make her blush as much as possible during that time?\" Nate said with a wicked smile. \n\nWe all agreed that's a good idea, except for poor Sarah. Nate got up and stood next to her. He was still hard, and with her sitting down plus their height difference, she was face to face with his erection. She blushed, already fulfilling the challenge even before it has begun. \n\n\"And... go!\" said Rita. Nate kneeled down and began whispering something in Sarah's ear. It was definitely working because a deep crimson began spreading over her pale skin. It was a sight to behold, made even more enjoyable by Dani's hand returning to show it's affection to my crotch. \n\nNate's hand was busy as well. From where I was sitting, I could see his left hand trailing down Sarah's body and slowly caressing her thighs. Whatever he was whispering in her ear, it had a great effect, and I saw her parting her knees a little. Nate took the invitation, and his hand made its way to Sarah's panty-clad pussy. When his fingers touched her, she became even redder and nodded to something he said. \n\n\"Time!\" said Rita. She looked pretty excited herself. There was just something about Sarah's delicate little body being in the mercy of Nate's hands that led the mind into all sorts of lewd possibilities. \n\nNate got back to his seat, his erection proudly tenting in his underwear. Sarah looked embarrassed but also excited. \n\n\"My turn!\" Rita said impatiently. She reached out and flipped the Seven of Hearts. \"Yes!\" she cried and spun the bottle. I watched it slow down until it stopped, pointing directly to me. ",
        "\"Hmm... Looks like me and Cole are going to go for a little trip. You three be good while we are gone!\" Rita said as she got up and nearly skipped as she went towards Sarah's room. \n\nI followed her in and closed the door. As soon as I did, something black and damp hit me in my face. I caught it and looked down only to find it was a pair of black thong panties. \n\nI looked up to find Rita splayed on the bed, her skirt hiked up, and legs open wide, her excited-looking pussy on display for me to see. \n\n\"Eat me, Cole,\" she begged. \"You have no idea how much I need it. Eat me out, now, I'll make it up to you, I promise!\"\n\nI needed no further encouragement. I got on my knees in front of her and dove in, planting little kisses on her inner thighs. I progressed slowly until my lips were right above her clit, and then I breathed over it, causing her hips to jerk up in anticipation. \n\nI decided to let her wait a bit and continued kissing my way around her labia, causing her to whimper, \"please! Stop teasing me!\"\n\nI decided she had enough, and gave her a long, luxurious lick from bottom to top, eliciting a satisfied moan from her lips. \n\nAnother lick. Two licks. Three licks. Five. Ten. I gave her twenty licks in quick succession, causing her to moan louder. I backed out to plant a kiss on her clit and then dove back to another onslaught, lick after lick after lick, each one going just a little bit deeper, a little bit faster. I used the rest of my mouth to cover her mound, and my lower lip added extra contact with her sensitive lips.\n\n\"Oh my Goddd! Oh god! Keep going!\" Rita cried, and I obliged her. I caught her clit between my lips and gave a good tongue lashing while my fingers began playing with her entrance. \n\n\"Oh fuck, fuck, fuck, fuck, that feels good! Keep going! Oh god!\" Rita moaned as my finger entered her. I began pumping in and out with my finger while I continued sucking and licking her clit mercilessly. She was absolutely gushing at this point, and her fluids covered my face and my hand as I lashed lick after lick. \n\n\"Yes! Yes! Yesssss! Oh God! I'm - AHHHHH!\" Rita screamed as she came, and I was rewarded with another gush of fluids as her hips buckled up and down. I kept my mouth on her clit, prolonging her orgasm, and following all the way down. \n\n\"Fuck!\" she panted. And then, \"I needed that.\" \n\nShe eyed my erection with a smile and crooked her finger for me to approach, but I only got one step before there was a knock on the door. \n\n\"Time's up, guys!\" Sarah's voice came through. \n\nWe made our way out to find a blushing Sarah and Nate, Dani still under the table and obviously being pretty active from the looks on the other two faces. I'd hoped that their excitement meant that they didn't notice my raging hard-on or the fact that Rita was still panting a bit from our little activity. \n\nWe sat down, and a satisfied-looking Dani climbed back up to her seat. \n\n\"Whew! That was more fun than I thought it was going to be! Great idea, Cole,\" she gave me a knowing smile. \n\nShe picked a card and said, \"Oh, wow, I don't believe it. What goes around comes around, I guess,\" and revealed the Ten of Hearts.\n\n\"Hmm, I'm tempted to send Cole down there, but his turn is next, and that's no fun.\" Dani then turned to Rita. \"Alright, girl, down you go.\"\n\nRita just smiled as she slid sexily under the table. I immediately felt her hands roaming on my legs and going up my thighs, but then all she did was to give my cock a squeeze and move on to the others. I saw Sarah jump a bit in her seat, then Nate shifted a bit, then Dani's smile went even wider. \n\nI reached out for a card and flipped the Queen of Spades. I now had the power to get all the girls to do something. I knew what I wanted. Sarah's near-nudity had my blood boiling for a while now, and I was excited to see more skin, but simply saying \"all girls get naked\" seemed like it was going too far. I decided on a different approach. \n\n\"Ok, whenever a queen is drawn, all girls must strip down so that they are wearing the same amount of clothes as the girl that's wearing the least clothes. Rita, you can come out for this, but then you need to go back under.\"\n\n\"Finally,\" said Sarah, \"I thought I would be the only girl showing some skin.\"\n\nA gentle squeeze of my erection told me that Rita approves as well, then she climbed out from under the table and stood up. Dani stood next to her. \n\n\"Alright, might as well let you have a look, can't have Sarah have all the fun,\" Dani said as she stripped her shirt, revealing a lacy white bra that seemed to hug her big breasts perfectly. Rita followed suit, moving sensually to reveal her own amazing tits, clad in a black push-up bra that made them look absolutely massive. \n\nDani then moved out of her shoes and began rolling her skinny jeans down her legs. She looked every bit as amazing as she did in that pool party, Those legs just went on and on, and I wanted nothing more than to run my hands over them, feeling every muscle and curve. She wore a tiny pair of cotton panties with hearts printed on it. They weren't as complimenting as Sarah's hot little number, but they hugged her figure well enough to set the mind ablaze. I wanted badly to see what's underneath them. \n\nDani then looked at Rita in surprise. \"Well?\" she demanded. \n\n\"We're supposed to have the same number of clothes as the girl with the least clothes on, no? Sarah has two, and I'm wearing two right now.\" I then remembered that Rita never put her underwear back on after I ate her out. \n\n\"See?\" Rita said as she pulled her skirt down, revealing her lack of panties. She pulled more than was necessary, confirming for the others that she was completely shaved. \n\n\"Oh, fine,\" said Dani. She sat back down, and Rita crawled back under the table, moving her hips seductively as she went. I immediately felt her presence as a hand began moving up my thighs and caressing my crutch. \n\nSarah's reached out and flipped the Eight of Clubs. \n\n\"Umm... How's this work now? Should I draw again?\" she asked.\n\n\"No, the rule is that anyone who draws an eight has one minute to make Sarah blush as much as possible,\" said Dani. \n\n\"But I'm Sarah!\" cried Sarah. \n\n\"So you'll have to make yourself blush.\" Said Nate, smiling from ear to ear. \n\n\"H-how am I supposed to do that?\" Asked Sarah. \n\n\"We'll leave that to you,\" answered Nate. \"You've got one minute, starting... Now!\"\n\nSarah looked flustered but made an effort nonetheless. She began running her hands over her body, but she was clearly too self-conscious to really get going. At the end of the minute, she was barely even pink. \n\n\"Hmm... I don't think that's really making an effort,\" said Nate. \"What about you, guys?\"\n\n\"Oh no, that won't do at all,\" Dani said, smiling. \"What do you think, Cole?\"\n\nMy attention was elsewhere. Rita has managed to release my hard-on from my boxers and was giving me an excellent handjob under the table. \"Um... yeah, you're not really blushing.\"\n\n\"Well, what do you want me to do?\" Sarah asked, dejectedly. \n\n\"I think you should get another try, but this time we expect you to really get into it,\" Nate said. \"And I mean REALLY get into it. Let's say... Three minutes this time?\"\n\n\"You want me to...\" Sarah looked shocked, and then her expression changed. \"Alright, fine. You're on.\"\n\nNate set the timer. \"Go!\"\n\nThis time, Sarah's hand went straight to her crotch. I couldn't see exactly what she was doing since the table was in the way, but it was pretty clear from her hand movements. She was also blushing much more prominently this time, becoming redder in her face and chest as she rubbed herself in front of us. \n\nIt was incredibly erotic to watch, and Sarah had my full attention until I felt someone tug at my boxers, trying to pull them down. I quickly looked around, but everyone seemed to have their attention on Sarah. Dani was biting her lip and squirming, Nate was in rapture, and Sarah herself had her eyes closed and was cooing softly \"hmmm... oh, yesss\" as her hand continued to explore her nether regions. \n\nThinking the coast is clear, I lifted myself slightly from the chair, allowing Rita to remove my boxers and giving her unfettered access to my penis. I was rewarded immediately by the feeling of her warm mouth engulfing me, and had to stop myself from making any noise as she sucked me expertly. \n\nMeanwhile, Sarah picked up a rhythm, her hand was moving rapidly, and she was glowing in an almost full-body blush. She also moved her chair back a little, I wasn't sure if it was accidental or not, but both me and Nate could now see her fingers getting quite busy inside her panties. \n\nRita was determined to get me off in time for Sarah's impending orgasm. Her tongue danced around my shaft as she pumped my cock in and out of her mouth in rapid motion. The feeling was incredible. It was as if my whole body was connected to the tip of my cock, and with each suck, with each lick, Rita was sending currents of pleasure all over me. This wasn't the teasing licks of Dani from before. This was a woman on a mission, and she was well on her way to achieving it. \n\nThen the timer buzzed. Both Sarah and Rita stopped what they were doing. Sarah was flushed and panting. It was clear she was not happy to have stopped so close to cumming. I'm sure I wasn't doing much better.\n\nSarah handed Nate the cards. \"Go!\" she nearly yelled at him, \"now!\" \n\nNate didn't need to be told twice. He picked the card and showed it to us. The Seven of Spades. \n\nWithout a word, he gave the bottle the worst excuse I've ever seen to a spin, guiding it most of the way so that it stopped pointing straight at Sarah. I wasn't about to complain, Rita has concluded the coast was clear and resumed giving me oral attention. \n\n\"Come on,\" Nate got up and grabbed Sarah's hand before she could say anything, and they both ran into Sarah's room. \n\nDani looked at me in the eye, \"I don't think they'll be coming out soon, don't you?\"\n\nI was about to respond, but Rita chose that moment to take my entire length into her mouth, deepthroating me. \n\n\"I ah...\" was all I managed, but that was enough to arouse Dani's suspicion. She grabbed the tablecloth and pulled it up, revealing Rita on her knees, her skirt hiked up, her hand between her thighs, and her mouth on my dick. \n\n\"I knew it!\" Dani said. She stood up and leaned over me, resting her tits on my shoulder. \"So, this slut has been sucking you off while Sarah was rubbing her bean?\"\n\nRita responded by once again, taking my entire length into her mouth, running her tongue on my balls. I moaned. \n\n\"You're not even stopping, are you? You're just going to sit there, on your knees, sucking his dick until he explodes in your mouth?\" Dani's tone sounded more excited than annoyed.\n\nIn response, Rita moved her mouth to the head of my cock, and sucked it in with a loud 'slurrp' sound, causing my entire body to tense from the pleasure. \n\nDani whispered in my ear, \"I want to see you cum in her mouth. I want to see her swallow everything you've got, think you could do that for me?\"\n\nI could barely make a coherent sound as Rita went into overdrive, sucking me for all she was worth, determined on making Dani's request a reality. \"Oh God, look at her go,\" Dani continued whispering sultrily in my ear. \"Are you going to come soon? Are you going to explode in her slutty little mouth? Ohhh...\" \n\nI looked to my side to see that while she was leaning on me, Dani had one hand deep inside her panties, rubbing furiously. The thought of that, coupled with her words and the intense sensations that Rita was causing with her talented mouth, all drove me over the edge. With a deep moan, I came inside Rita's mouth, the sensation in my dick intensifying to the point I thought I'd black out. \"Oh yeah! Cum for me! Cum in her mouth!\" Dani gave her encouragement. \n\nRita, for her part, swallowed every drop and was now planting kisses on my deflating dick. When she finished, she opened her mouth wide to show Dani that she swallowed the entire load. \n\n\"God, you're so dirty!\" Dani moaned at the sight, her hand still rubbing her vagina inside her panties. \n\n\"Takes one to know one,\" Rita replied with a smile. \"Anything else you'd like to ask me to do - you know, while I'm down here?\" \n\nDani bit her lip, then stripped off her panties in one fluid motion, and sat down on the chair next to me, opening her legs and showing both Rita and me her pretty pussy with trimmed brown hair on top. \"Eat me! I want you to show me what you did to Mary!\" \n\nRita didn't hesitate, she crawled to the beautiful brunette's body and began licking her pussy with passion. Dani's body tensed as though she was electrified. \"Oh god, you're... you're really... OH!\" she cried as Rita continued her assault on her clit. \n\nI was still recovering from my own orgasm, but the sight of Dani's lithe body shaking as Rita's talented tongue brought her wave after wave of pleasure had woken me up, and I got up to assist. I gave Dani a passionate kiss, which she returned with enthusiasm, moaning into my mouth as she did. I then continued down her body, planting kisses on her delicate neck, her shoulders, all the while sending my hand to her back to unclasped her bra to reveal her amazing tits. \n\nI took a moment to stare in awe at Dani's perfect nude body. Her breasts were the stuff of dreams, big pillowy and perky, with perfectly sized pink areolas in the center and nipples that were just begging to be sucked. I didn't keep them waiting, I plunged and took a nipple in my mouth. \n\n\"Oh, god! You guys, I'm gonna... eeennnnghhhAHHHH!!\" Dani screamed as she came, but neither Rita nor I gave up. We continued licking her, causing her to buckle and shake under us. Somehow she managed to collect herself enough to send a hand to my shaft and tugged at it gently.\n\n\"God! AH! Bring me your cock! I want it in my mouth while this slut makes me cum again!\" Dani demanded, and I was in no place to argue. I stood up and brought my hardening cock into her mouth, and she immediately engulfed it. She wasn't as good as Rita, and she was somewhat distracted by what the voluptuous bombshell was doing to her to put in a real effort. But the warmth of her mouth and her moans as Rita brought her close to a second orgasm felt incredible on my cock and had me rock-hard in no time. \n\n\"Mmmph! Mmpph!\" Dani's moans became more urgent. Then she released my cock as she screamed in another orgasm, shaking all over. \n\nThis time, Rita stopped and looked up at me and my stiff hard-on. \"Is that for me?\" she asked, unclasping her bra and revealing her big soft tits. \n\n\"Nuh-ah,\" Dani said. She was still panting hard but she managed to blurt out, \"He's going to fuck me with this cock now.\" \n\n\"But what about me?\" Rita seemed genuinely disappointed. \n\n\"You are going to be too busy having my tongue in your pussy. I'm going to return the favor.\"\n\nRita stood up and removed her skirt, standing proud in her birthday suit. She then went to the sofa and sat down, spreading her legs. \"Whatever,\" she said. \"One of you better come here and pleasure me.\" \n\nDani took her cue and leaped from her chair, diving towards the buxom Latina. She plunged her face between Rita's thighs and began licking vigorously. \"Oh fuck, that's one wicked tongue you've got there! Ooh! I think you may have found your calling!\" \n\nFor my part, the caveman part of my brain was in full control. Without even thinking about it, I was already behind Dani, rubbing my dick between the folds of her wet pussy, one hand on her shapely ass, the other guiding my erection inside her. \n\n\"HMMM!\" Dani moaned into Rita's crotch as my cock went all the way in. The feeling was amazing. It was as if all of my consciousness was focused on my dick, which was getting squeezed and massaged by Dani's inner muscles. Every movement in and out was a shot of pleasure up my spine, and I found myself going harder and harder, thrusting into Dani's wet folds.\n\nDani wasn't complaining. While any sounds she might have made were muffled by what she was doing to Rita, she moved her hips to meet me with vigor, her pussy squeezing and spasming around my cock.\n\nRita was loud enough for both of them. She was moaning and crying out profanities as Dani's tongue brought her closer to the edge. The sight of her voluptuous body on display with Dani's perfect guitar-shaped form attached to it made my blood boil all over again.\n\nAnd then I noticed Rita's eyes were fixed at some point behind me.\n\nI turned around to see that Sarah and Nate had come out of the room and were enjoying the show. Nate was naked from the waist down, Sarah's hand going up and down his hardening shaft. \n\nSarah was completely nude, her skin glowing from perspiration and her constant blushing. She had just enough hair on her crotch to prove that she was a natural blonde, and her pink nipples stood proud in the middle of her small breasts, betraying her horniness. \n\nThere was something almost taboo in watching her. She had been my friend for so long, and that, along with her size, always made me think of her as innocent. Seeing her naked body, that freshly-fucked hairstyle, and the look of wanton lust in her eyes, it felt like something forbidden.\n\nForbidden... and incredibly sexy.\n\nI must have changed something in my rhythm in response to Sarah's body, cause Dani stopped her licking for a second to look back at me. When she saw our audience, I could feel her pussy clamping down on me with excitement. \n\nSarah pulled Nate's face down to her and whispered something in his ear. He looked at her surprised, whispered something back, and got another whispered reply from the smiling blond pixie. \n\nI looked away from the hushed discussion to return my focus to the goddess I was currently sliding in and out of. It didn't take long to find out what Sarah and Nate were talking about, as Nate joined us on the couch and was soon feeding his cock to Rita's enthusiastic and talented mouth. \n\n\"She really likes doing that, doesn't she?\" I suddenly heard Sarah purring in my ear. \"Of course,\" she continued, giving Dani a slap on her ass that caused her inner muscles to grip me tightly, \"she's not the only slut in the room.\"\n\nAll this time, I was pounding rhythmically in and out of Dani, and the excitement of everything that was going around me was getting to both of us. I could feel Dani's pussy contracting around my dick. She was no longer paying attention to Rita, but moaning with abandon, signaling her impending orgasm, and I was ready to meet her there. Sarah, however, had different ideas. \"If you can hold on while this bitch cums, I'll make it worth your while,\" she whispered sultrily in my ear. \n\nCould I last? I don't think I was ever so excited in my life. Here I am, with three of my sexy friends naked in the same room with me, and me balls deep inside one of them. I knew of only one trick that will give me even a small chance of clearing Sarah's challenge. \"Scratch my back,\" I grunted to Sarah. \"Hard.\" \n\nShe complied immediately, drawing lines of red hot pain across my back with her nails. The pain helped ease some of the impending pressure of cumming, and allowed me to last long enough to feel Dani clamping down on my cock with a scream of pleasure. I pulled out of her, and she dropped to the floor in a heap. \n\nI was never so hard in my life. I think half the blood in my body was located in my groin area at that moment. Sarah certainly noticed, as her hand immediately went down and grabbed the shaft. The sensation was so intense that it was almost painful. Sarah led me to the couch where I sat down, unable to resist her, and immediately took me in her mouth. I sighed in satisfaction as the wet warm feeling took over me and jerked my thighs up, trying to encourage Sarah to let me cum. Sarah, however, seemed intent on teasing me. \"Ever thought we'd be doing this?\" she purred between licking and sucking on the head of my dick. \"Ever imagined me licking your cock? Ever wanted me to beg for your cum?\" She then barreled down, taking almost my entire length into her mouth, causing me to jump with pleasure. ",
        "Then she straightened up, looking me in the eye, \"or maybe,\" she said as she started standing up, \"you imagined me doing this\" she straddled me and guided me into her, taking my cock into her pussy with one smooth motion. \"Ahhh...\" she moaned, and I couldn't agree with her more. The feeling was just as tight and wet and warm as Dani's pussy, but also different in a way I couldn't quite describe. Each girl's body was just as pleasurable as the other, but they each held my dick slightly differently inside them, resulting in new and exciting sensations as Sarah sunk herself onto my hard-on. \n\nBut the last vestiges of my non-caveman brain alerted me to a possible issue. \"N-Nate...\" I managed to groan. Both Sarah and I looked over to the sofa, where Nate was now pounding a very happy-looking Rita. \"Nate and I will have some things to talk about later,\" Sarah whispered, \"but we agreed not to make any decisions just yet, this night is about having fun.\" She began rocking up and down on my cock. \"Now,\" she said, her voice thick with need, \"fuck me until you fucking explode inside me, I want to feel it all.\" \n\nI obliged her with pleasure, grabbing her small frame, and pumping up into her faster and harder than before. I couldn't think about anything else but the sensations around my dick, the feeling of Sarah's smooth skin on mine, and a burning, unyielding need for release. \n\nI came with a shout of pleasure, closing my eyes from the intense pleasure. \"Happy graduation, Cole,\" I heard Sarah whisper. Then I let my body rest, and fell asleep, coasting on the blissful feeling of sexual satisfaction. \n\nWhen I woke up, the room was dark, and it took me a moment to see that it was mostly empty of people. I was still naked, of course, and there was a naked body lying next to me. I was surprised to find out that it's Dani. \n\nFor a while, I just stayed unmoving, enjoying the feeling of Dani's naked body on me. But I must have alerted her somehow because she started moving shortly after my waking up. \n\n\"Mmm...\" she moaned softly. \"It's nice to wake up next to a guy again.\" \n\n\"It's even nicer to wake up next to a hot chick,\" I said softly. \n\n\"Hmmm... I might need to try that sometime.\" \n\nWe stayed cuddled for a little bit. Then Dani rose and looked me in the eyes. \"Thank you,\" she said.\n\n\"What for?\" \n\n\"The way you looked at me, it's been a while since I saw someone lust after me like that. And then when you fucked me... I guess I forgot how much I miss being desired by someone.\"\n\n\"Are you kidding me?\" I said, careful not to raise my voice. \"Dani, you're one of the hottest girls I've ever met. I should thank you, not only did you make me the envy of everyone in our year, but you've made this one of the best nights of my life.\"\n\nDani kissed me. I was a little surprised, but I kissed her back, of course. We made out for a bit, and then she backed away. \"This couch really isn't built for two. Want to go into my room?\"\n\nI nodded, and we both got up. On the way I could hear some heavy breathing coming from Sarah's room. \n\n\"Nate and Rita are insatiable,\" Dani said with a smile. \"I think our little Sarah is going to have quite a busy night.\" \n\n\"More than just one night, if Nate is not a complete idiot,\" I said. \n\nWe got into Dani's room and under the covers on her bed. \"Any regrets?\" I asked her. \n\n\"God, no,\" she answered. \"Tonight was all I never even allowed myself to fantasize about. I wanted a memory to last me a lifetime, and I could not ask for a better one.\" She kissed me again. \"And I'm happy you guys are the people I got to share it with.\" \n\nI kissed her back. We made out some more. \"Cole,\" she said, breaking our kiss. \n\n\"What?\"\n\n\"I don't want you to take this the wrong way, but I don't want this -\" she gestured with her hand on our naked bodies - \"to be a thing. I want tonight to just be about tonight, is that ok?\"\n\nWas it ok? I honestly didn't know. I was still not entirely over Becky, but I'd be lying if I said I didn't wonder what it would be like to wake up next to this gorgeous goddess some more. In the end, though, there was only one answer. \n\n\"This doesn't have to be anything you don't want to be. If you want this to be just tonight, then it's just tonight. To tell the truth, I don't know what I'll think tomorrow, but I think I've learned tonight that it's best to keep an open mind.\"\n\nDani gave me an excited peck on my lips. \"In that case,\" she said, lying on her back and opening her legs, \"Want to fuck me one more time?\" \n\nI was more than up for that offer. I immediately got between her legs. Before plunging in, I took a moment to admire her body and savor the look of her, fully on display for my pleasure, her breath shallow with excitement and a lustful look in her eyes. \n\nI plunged in, and we both moaned with pleasure. Despite Dani's request that I fuck her, I took my time, entering and retreating leisurely, building pleasure for both of us, and indulging in the sensations her body was causing me. She reciprocated, locking her shapely legs behind my body and pulling me deeper into her, running her fingers through my hair and moaning softly in my ear. \n\nFinally, I could hold no longer. I let my pleasure carry both of us, cumming for the third time that night. And as we laid there in our post-orgasmic bliss, all I could think of was: \"I wonder what will happen next Friday...\""
    ],
    "authorname": "MWater",
    "tags": [
        "cards",
        "college",
        "dare",
        "game",
        "group sex",
        "group"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/wild-card-memories"
}