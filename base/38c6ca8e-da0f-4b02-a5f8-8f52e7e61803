{
    "title": "Molly's Muse Pt. 02",
    "pages": [
        "Authors Note: I have no idea what I'm doing. Here's Part 2.\n\n*********\n\nMolly sat at her kitchen counter dressed only in her bathrobe and typing away at her computer. The words were so vivid in her mind that her fingers were having a difficult time keeping up with her thoughts. She couldn't remember a time when writing had come so easy to her, not even for her other books.\n\nWas it Paul? Or had it just been so long since she had written anything of significance that this flood of inspiration was as much the result of the inevitable downpour at the end of long drought?\n\nShe could feel his eyes on her. He was sitting in her bed alternating between messing with his phone and looking at her. They would eventually have to get dressed and go about their day, no matter how much she didn't want to, but for now she enjoyed the quiet morning intimacy.\n\nA timer went off on her stove top. It made Molly jump slightly, getting lost in her writing and thoughts about Paul causing her to forget she had set it. She was attempting to make breakfast and was oddly nervous about it. She could confidently say she was good at many domestic tasks, but cooking was not one of them. She was one of those people who ordered out for every meal. She could afford it, and it saved her from her own bad cooking.\n\nGetting up, Molly grabbed two bowls and went about serving them both good portions of the mushy oatmeal before walking over to Paul and handing him one. She sat down next to him on the bed with her own but didn't start eating, more interested in Paul's reaction to her cooking rather than eating it herself.\n\nHe looked so cute blowing on each spoonful before eating it. Molly didn't see any negative reaction from Paul, so she calmed down a bit and started eating some for ferself.\n\nShe grimaced. It was awful. She unceremoniously put the bowl down in disgust, preferring to stay hungry rather than suffer her own failure.\n\nPaul didn't seem to mind, causing Molly to seriously doubt the man's ability to taste.\n\nA small amount of oatmeal got caught on his top lip and Molly watched as he crossed his eyes, as if trying to look at it, before reaching out with his tongue and licking it up.\n\nMolly giggled. It was the most adorable thing to watch. Paul gave her a questioning look, but when she didn't say anything, he brushed it off and went back to eating.\n\nNot for the first time, Molly felt concerned at the way things had strayed off plan yesterday and worried how things might progress with him moving forward. She knew from experience that introducing an exclusively straight male to her and her massive girlcock too soon and too fast hardly ever worked out well.\n\nWhat made it more of a worry, was how she could already feel that if she kept spending time with Paul, she was going to want to more than a professional relationship. It had happened once before with a previous editor of hers, and the ending was far from a happy one. She wanted more, he wanted his credit and a fast exit. It had been so long since she'd been interested in a man for more than what they could do for her physically that she was unsure how to handle her feelings for Paul.\n\nHe seemed to like her directness, especially about sex, but would he react the same to romantic interest?\n\nPaul was still a mystery to Molly. It had only been a day and the other men she had history with before him would best be described as 'effeminate' and tended to fetishize being fucked by a 'dominant futa-barbarian', or something just as stereotypical.\n\nThe role-play was fun for a spell. It allowed Molly to scratch some of her more aggressive urges, but the aftercare was abysmal. She wanted to be cuddled, spooned, or otherwise cared for by someone strong, if only for a moment. The only problem with that is the type of guys who were into being dominated weren't the type who could then flip the switch and take control once the sex was over. After they limped home the next morning, Molly could never bring herself to call them again. They were boring.\n\nPaul, on the other hand, was anything but boring. He was insightful, surprising, and oddly pragmatic about meeting a woman who had a bigger dick than he did. She always figured men like him would consider having sex with a dickgirl to be homosexual to some degree. If he did have thoughts like that, he hadn't said anything.\n\nShe remembered him moaning and grunting to the rhythm of her long hard rod slamming into his ass, and briefly fantasized about doing it again. She also fantasized about what it would feel like to have his above average sized cock pounding deep inside her. She didn't think she would have to work that hard to make either fantasy come true, even if it wasn't technically part of his job at this point.\n\nThen there was the titty-fuck thing. Though nothing could replace the ecstasy of burying herself in a warm hole, having Paul buried between her tits, sliding in, out and through her tender melons before soaking them with his seed was quickly becoming her new favorite.\n\nShe still had remnants of his load from earlier drying on her skin and she had no desire to clean it just yet. The smell of dry cum coming from her chest was potent, she wasn't ready to lose that.\n\nIf it was just her, Molly would be happy enough to smell like Paul all day. She thought a man's cum smelled like raw pancake batter, which was a smell she had always liked growing up.\n\nSmelling like sex and cum in an office full of dickgirls, however, was a very bad idea. Molly needed to make sure she and Paul were clean before taking him back downstairs if she wanted to avoid more interaction like the one she'd just had with Grace. Paul would be getting hit on often enough already, she didn't need him smelling like sex and make it worse.\n\nAll the arrangements with her editors before were far from exclusive. As long as they were available when she needed them, they could fuck and suck whoever they wanted. The thought of someone else putting their hands, or other parts, near Paul, however, stirred something in Molly she was very uncomfortable in having to deal with.\n\nPaul must have noticed Molly's inner turmoil, because he had stopped eating and was looking at her quizzically.\n\n\"Where did you go?\" he asked.\n\n\"Just thinking.\"\n\n\"Must have been of something confusing.\"\n\n\"Why do you say that?\"\n\n\"Well, you look upset, but you're also hard again.\"\n\nShe looked down on reflex, and yes, she was hard.\n\n\"I have to say,\" continued Paul, \"I'm a little insulted. Here I am, probably needing an inflatable donut just to be able to sit the rest of the day; and there you are, throbbing and ready for round two. Was it that underwhelming?\"\n\n\"No,\" she hurried, \"It's... I'm...\" She was panicking, wanting to reassure him just how great it was to be with him but not being able to get the words out.\n\n\"Relax,\" Paul interrupted with a smile, \"I was kidding. I may be only a day old into figuring out the fine details of being with a dickgirl, but it's pretty obvious erections come fast and easy for you.\"\n\nHe reached out and gave her cock a quick rub and a squeeze, as if petting her.\n\n\"I find myself very much enjoying the look and feel of your girlcock, Molly.\" Paul may have been speaking to all of Molly when he had said that, but it was apparent he had eyes and attention only for her oversized appendage. Tearing his gaze from it after a moment, he continued. \"There is something inherently sexy about you. A natural quality I can't really describe. It's... overwhelming.\"\n\nMolly smiled. Just like that, Paul had her happy again. She didn't miss the current role reversal, Paul being the confident one while she was the one struggling to catch up.\n\nIt was quiet for a while, both seeming lost in their own thoughts. Molly kept thinking about Paul and what she should do about wanting more. Unknown to her, Paul was thinking about much the same thing.\n\nHe thought the morning had gone well. Taking Molly's giant girlcock all the way to the hilt gave him a feeling of accomplishment. He couldn't make sense of the feeling. Molly did most of the work while he concentrated mostly on not being ripped in half. At best he maybe deserved a cool participation trophy.\n\nSomething that did make sense, but probably shouldn't, was how amazing it felt to have Molly inside him. It hurt, still hurt, but the pain was fading, leaving him only with a feeling of pressure and fullness. Even if it never happened again, it would be an experience he would always remember.\n\nThen there was the care Molly had taken with him to ensure it was as comfortable for him as she could make it. No woman had ever shown him so much effort in the bed.\n\nAs a man with a dick himself, he knew how hard it was to keep yourself controlled once your prick found a warm, welcoming hole. The desire to slam balls deep and hammer away until satisfied was instinctual. Considering how everything in the sex department seemed amplified for a dickgirl, he could only imagine the level of restraint she had shown with him.\n\nThe only other woman who had made him feel cared for like that was his mother. He liked it and wanted more. A great deal more. There was one, big, monster of a problem, however, and he didn't know how to break it to Molly.\n\nHe had been polite up until now, but enough was a enough.\n\n\"Molly?\"\n\n\"Hmm?\"\n\n\"I know a lot has happened over the last day, most of it good, don't get me wrong. but I find myself with a problem I don't know how to approach. All I can think is to come out and say it.\"\n\n\"What,\" Molly replied, sounding worried.\n\n\"I'm not the most traveled man, but I've been a few places, seen and experienced and few things over the years...\"\n\nMolly's heart skipped, did he not like being here? Was this where he told her he wanted to leave and not be a part of this? A part of her? She wanted to stop him before he said the words, convince him how important he was. She should have told him earlier, maybe things would be going better if she had.\n\n\"... but this is the absolute worst oatmeal,\" stated Paul. \"It's like I'm eating wet cardboard. I feel like less of a person for having eaten it. Ashamed even.\"\n\nMolly went quiet, the conversation had taken too hard a turn from what she was fearing that she had to physically regroup.\n\nAfter and extra moment, she burst out laughing, falling back into the bed.\n\nPaul watched as she lost her shit, her laugh pure and melodic.\n\nMolly would laugh, then try and compose herself to speak, before losing it all over again. She started wheezing, trying to catch her breath but started to hiccup instead.\n\nPaul hadn't seen anything so fucking adorable in his entire life. If he managed to keep her when this job was done, he'd make it one of his life goals to see her laugh like this again. She laughed so hard that her robe opened and her tits popped out, jiggling in sync with her rolling laughter. Paul was both proud and happy he could make this all happen.\n\nIt took a few minutes, but Molly calmed down enough to speak, \"Sorry Paul, I suck at cooking.\"\n\n\"It's oatmeal.\"\n\nShe giggled, still trying to catch her breath, \"I don't normally eat breakfast. This oatmeal has probably been in my pantry since the day I moved in... six years ago.\"\n\nPaul put his bowl down on side table with a disgusted look on his face. Molly started to laugh again, unable to control herself.\n\nShe let out one particularly loud snort, said \"fuck, ignore that\" and continued laughing. Paul could no longer help himself and joined the beautiful girl in her laughter.\n\nThey both understood it wasn't that funny, but joy has a domino effect all its own, regardless of the cause.\n\nIt was therapeutic.\n\nTheir laughter was followed by another round of contemplative silence. Something was brewing between them. A conversation, a confession, something, but they didn't know what, and they didn't know when their silence about it would be broken.\n\nTrue to her form, Molly was the one who spoke first, getting back to her direct nature after being so indecisive throughout the morning.\n\n\"I want more from you,\" she said, looking Paul dead in his eyes, \"you've given me so much already I feel guilty saying this, but I need more. Editor Paul isn't enough of you.\"\n\nPaul was not surprised, but he was relieved. She had given hints and signs she felt this way, that it was more than sex, but this was the first time either of them had said anything outright.\n\n\"I don't know exactly what's going on here,\" he said, moving closer to Molly, \"but there's an intensity to it I can't seem to grasp yet. What I can grasp, however, is that it's all about you. You're new and special and wonderful. You say editor Paul isn't enough. I could give you every version of Paul I know how to give and still know it's not enough to deserve you.\"\n\nPaul winced, that was so cheesy he half expected Molly to start laughing again.\n\nShe didn't. She jumped into his arms and tackled him down flat onto the bed, laying on top of him and went about trying to swallow his face, kissing him.\n\n\"That line was worse than the oatmeal,\" she said between kisses, \"You should tell me more dumb romantic things like that. I'm going to play with your dick now.\"\n\n\"There's my sweet girl, so assertive.\"\n\n\"That's the second time you've called me your 'sweet girl',\" she said, dragging her hard cock and giant tits over his skin as she moved down his body.\n\n\"Does it bother you?\"\n\n\"The opposite. Keep calling me your sweet girl and you might just find out how sweet I can be.\"\n\n\"Now who's using terrible lines?\"\n\nMolly lightly scraped her teeth over the top of his cock shaft, causing Paul to yelp.\n\n\"You shouldn't make fun of someone so close to your dick,\" said Molly. She looked up at Paul and started licking the area of his cock where her teeth had just been, as if in apology. \"Besides, I'm a world-famous author, my lines are never terrible.\"\n\nShe started stroking his cock with one hand while bring her head lower, aiming for an even more sensitive part of Paul's anatomy. She nuzzled her nose under his balls and lifted them, taking their weight onto her face. She inhaled his musky scent before starting to lick the usually neglected area where a man's ball sack met his taint.\n\nShe tilted her face up slowly, letting the balls on her face slide down until they were resting on her mouth, where she sucked one in and started messaging it with her lips and longue.\n\nHaving a big set of her own, Molly knew exactly how to draw out the most pleasure from ball-play while avoiding all the potential pain or discomfort.\n\nShe switched back and forth, sucking one ball into her mouth, then the other, exaggerating a small slurping and popping sound each time she did so.\n\nMolly loved having balls in her mouth. It was a texture thing. Something about swirling the tender orbs, encased by soft, wrinkled flesh, inside her mouth and with her tongue scratched some unknown itch she'd never be able to accurately describe to anyone else.\n\nThere was also a power to it she couldn't deny made the whole affair that much more exciting. The amount of pain she could cause with minimal effort, should she ever want to, was a chilling understanding only someone with a sensitive set of balls of their own could know.\n\nHovering on such thoughts, Molly spent more time indulging in her ball sucking kink than she probably should have. Paul squirming brought her back to what she was actually doing.\n\nBall-play had a habit of getting someone revved up without providing the needed stimulation for anything more, resulting in a weird sort of blue balls. Keep it up too long and it might start causing Paul discomfort, turning ball play into ball torture.\n\nSome guys were into that, Molly knew, but she was confident Paul wasn't one of them.\n\nShe quickly adjusted and took Paul's cockhead into her mouth and used her tongue to lick under and around as if announcing her shift in attention.\n\nPaul visibly relaxed. He wouldn't feel better entirely, until Molly made him cum. And, depending on how bad she had gotten carried before realizing what she was doing, even cuming might not be enough.\n\nUsing both her hands and her mouth, Molly intended to make Paul cum as fast as possible. He must have been on a hair trigger from her inadvertent teasing because before she knew it, her mouth was being filled by hot seed.\n\nPaul was moaning and fucking his cock deeper towards Molly's throat with every spurt of cum, Molly never once letting him free of her suction.\n\nHer mouth was filling, and she swallowed down a mouthful of cum to make room for more.\n\nWhen Paul had stopped moving, finally spent, Molly propped herself up on her hands, letting her tits dangle onto Paul's worn cock. She made sure Paul was watching, opened her mouth to show the pool of cum she had been saving, and tilted her head down so it could dribble out and down her chin.\n\nThe thickness of it kept it from dripping. It trailed down Molly's chin, down her neck and into her cleavage where it stopped. She laid back down on Paul and wrapped his cock into her tits. He had been so turned on his dick hadn't found the time to soften yet, even with the intensity of his orgasm.\n\nMolly squeezed her tits hard and started fucking his cock with them. She wanted to make him cum again.\n\nShe pressed her tits down as much as she could so Paul's tip was poking out the top of her cleavage. She dipped her head awkwardly and took him into her mouth again, using her tongue aggressively on his over-stimulated frenulum.\n\nMolly once again noted the advantages of having a man with a big cock, if she had tried this with one of her previous liaisons, it never would have worked. Her giant tits would have swallowed their cock whole with nothing left over to suck.\n\nIt was fifty-fifty on if she could get Paul to cum again so soon after his last orgasm. She would take those odds, however, feeling nervous that Paul might be upset at her for the accidental blue balls. She wanted him too empty to be sore.\n\n\"Oh shit, Molly, I'm going to cum again. How...?\"\n\nThe question trailed off as Molly doubled her efforts, encouraged by the good news. She bounced her tits on his cock, sucking the tip back in her mouth every time it peaked up from between them.\n\nHer tits clapped into his lap and her mouth slurped until once more Paul came. It wasn't as much as the first time, but it was plenty for Molly to fill her senses with his taste again.\n\nPaul groaned and pulled away from Molly, all but tossing her off him and curling into a ball as if protecting his cock from Molly's touch. He was in sensory overload and shivering.\n\nMolly moved up the bed behind Paul and cuddled into his back, spooning and smushing her tits into him. She ran her hand through his hair and waited for him to recover.\n\n\"You're like a sex demon. I didn't know I could do that,\" said Paul.\n\n\"It's not common. I may have worked you up a little too much before I got you off. Sorry.\"\n\n\"Sorry? You suck my balls like a needy slut, get me off twice, then apologize for it? That was so intense I'm pretty sure I know what the color purple smells like.\"\n\nMolly laughed and pulled him tighter into her, her girlcock poking into the back of Paul's legs. He opened them just enough for Molly to slip her dick between his thighs. He was still sweaty and covered in Molly's spit and his own cum down there, which made the area making slick enough for Molly to start thrusting.\n\nPaul squeezed his legs tighter.\n\n\"I thought I might have made you uncomfortable with all the attention on your balls,\" she said, sighing. She hadn't intended for the cuddle to turn into a thigh-job, but she was happy to take advantage of the opportunity.\n\n\"I love how you want to take care of me, it's why you're my sweet girl, but you don't have to do it all the time. I'm not a weak or fragile by any means; and you aren't some big, brutish dickgirl taking advantage of me. I won't break, and I certainly won't be mad because you do something that makes me uncomfortable for a little while.\"",
        "Molly thrust harder; his strong thighs were choking her shaft as she fucked.\n\n\"Fuck, you're so hard,\" said Paul. \"I like your shoving a steel rod between my legs. So erotic. I love you're big, beautiful, hard girl-cock.\"\n\nHis body always felt amazing no matter what she was doing to it, but this time it was his words that were bringing her close to her end. Paul seemed to have a way of saying the perfect thing exactly when she needed to hear it.\n\nMolly ducked her head down and bit into Paul's shoulder, her orgasm close.\n\n\"That's right, sweet girl. I won't break.\"\n\nShe bit down harder on him after hearing his encouragement, making him wince, but loving that she was finally letting go, if only a little. He spat in his hands and brought them down where Molly's cock was thrusting through his legs and grabbed onto her, letting her slide in and out of his palms. She moaned at the addition.\n\nGirlish, whining noises worked their way up from her chest and out her open mouth as she kept biting down harder and harder on Paul. He heavy balls clenched and launched a river of girlcum up through her cock-vein and sprayed out on to the bed in front of their cuddled bodies, soaking the already filthy bedsheets.\n\nHer mewling became ragged and shaky, and her body locked up. Paul used his hands to continue milking her cock as soon as she stopped thrusting, helping her ride out her orgasm.\n\nMolly pulled back and looked down at Paul's shoulder, worried she'd hurt him again. There was a very prominent bite mark, but no blood. She didn't break the skin. Paul was right, she was mothering him too much.\n\nShe couldn't help it. Not only did she like taking care of him, but there was always the possibility lingering in the back of her mind that Paul still didn't fully understand where her dickgirl urges might take them if she wasn't careful.\n\nThe 'barbarian-futa-warrior' might be a myth, a fetish, at least in her case, but stereotypes are born from kernels of truth.\n\n\"I know it's uncommon for men,\" said Paul, bringing Molly out of her thoughts, \"but what about dickgirls? Can you cum twice like I did?\"\n\n\"Yes.\"\n\nPaul rolled his eyes, \"You're taking care of me again. I have a feeling there's more to that answer.\"\n\nMolly put her forehead to Paul's back and sighed, \"As long as I'm hard, which can be always if I let it, and I have a warm hole to fuck, I can cum as much as a I want. Dickgirls don't need to recover like men do.\"\n\n\"Interesting. So, if I told you to put your dick in my ass right now and fuck me as much as you want, you'd just keep periodically cuming until I told you to stop?\"\n\n\"Essentially.\"\n\n\"I can see how that might be both cool and annoying.\"\n\n\"It's controllable. And you get used to it. Though it's more or less why most of my staff are futa... more understanding, less complications.\"\n\n\"You can, you know.\"\n\n\"What?\"\n\n\"Fuck my ass again. It's sore, but I can manage.\"\n\n\"I appreciate the offer, but we do have other work to do. I sent you the pages I have done to be edited, and Cassie is probably annoyed I haven't made my way to the office yet.\"\n\n\"OK, but if we are about to be around people, I'm going to need another shower. We smell like cum.\"\n\n\"Yes, we do. C'mon, I'll wash you.\"\n\nMolly planned for the shower to be all business, but it didn't take much teasing or convincing from Paul to let him get her off again. He used his hands and mouth and quickly worked another load from her.\n\nMolly made it a point when she came to cover as much of Paul in her seed as she could. She really liked the idea of using her soapy body to wash a warm, fresh load off of as much of Paul as she could.\n\nOf all the things he'd done with Molly so far, for some reason, her insistence to wash and dry him was the one thing he thought was the most confusing. It didn't bother him, it was rather enjoyable be doted on in that way, but for someone as sexually charged as Molly, it was a weirdly non-sexual kink.\n\nClean and dry, they got dressed. Molly spent a few minutes on her hair and make-up before she was finally ready.\n\nPaul couldn't help but admire how beautiful she was.\n\nYesterday she had worn jeans and a t-shirt, today she was a wearing a pleated skirt that fell just below mid-thigh with a thin camisole top, which made it painfully obvious to him that she had opted out of a bra. Her top hid absolutely nothing and her tits swayed and bounced with every move she made.\n\nLooking further down, he also found that she was going 'tuck-less', leaving her girlcock to dangle and bulge through the front of her skirt. He could see the barest hints of her cockhead peeking out of the bottom hem when she walked. She was unapologetically lewd about her clothing choices today.\n\n\"You expect to me to get work done with you walking around looking like that? No bra, no panties?\"\n\n\"You'll manage. And when you don't,\" she flipped up the front of her skirt to show off her cock and jiggled her tits for effect, \"easy access.\"\n\n\"As much as I appreciate the thought, what about your other employees? Will they enjoy this look as much as I do?\"\n\n\"Meh. Today is going to be a lot of just me and you stuck in the office doing screen work, but if we have guests, or if I need to venture out, I can always tuck and put on a jacket or something. I like how you ogle me to cover up too much, it reminds of the wide-eyed stare you gave me when I first walked in to meet you yesterday.\"\n\n\"You caught that did you? I thought I covered myself pretty well. I'm a professional after all.\"\n\n\"You did, and you are, but I was looking for it. It was brief, but it was there.\"\n\n\"You've been a step ahead of me since the moment Cassie called to schedule the interview, haven't you?\n\n\"Of course.\"\n\nPaul walked over and kissed her. Pulling away he smiled and said, \"you are so very fascinating.\"\n\nMolly smiled in return but said nothing. He was doing it again, saying or doing something that caused her to lose a step and leave her off-balance.\n\nThey had admitted there was something more going on between them, but not really what that meant. The specifics didn't matter at the moment, though. It was enough that they both knew it was there.\n\nMolly took Paul's hand and led him to the elevator. She pressed a button and it opened. They both stepped in, the doors closed, and they elevator moved down.\n\n\"Out of curiosity, how rich to you have to be to get your own elevator?\"\n\n\"Very,\" said Molly.\n\n\"So... does that make you my sugar momma?\"\n\nHe was obviously joking, but she looked at him seriously, \"I'll be whatever you want me to be.\"\n\nPaul was not expecting that, the way she was looking at him made the statement even more pointed.\n\n\"Ok then,\" he said, not knowing where else to go with it.\n\n\"Sorry, that was more intense than it should have been. I have an embarrassing amount of money, so the topic is weird to me, even when you're joking about it. I don't ever want it to be a thing between us.\"\n\n\"Why would it?\"\n\n\"Money is always an issue, whether you have enough or not.\"\n\n\"I guess that's true. If it makes it any better, you being astronomically more successful than me doesn't make me uncomfortable. I admired you long before you seduced me.\"\n\n\"Let's keep it that way. You need to tell me when, or if, something like that bothers you.\"\n\nThe mood had darkened some with the serious topic change. In a direct attempt to break the tension, he pushed Molly up against the elevator wall, lifted her shirt, and buried his face between her tits.\n\nMolly didn't stop him, instead hugging him closer into her chest and squeezing her tits around him. As if some stupid, unoriginal writer had been designing the scene, the elevator chose that moment to arrive at its intended floor and open its doors. A small group of women were waiting, all having different reactions to their CEO having her tits out, a man buried between them.\n\n\"Oh good, we were just coming to see you,\" said Grace, not bothering to comment on the scene. \"We weren't sure if you'd be coming down today. Cassie has some papers for you to sign. Probably some for Paul too. If he's been hired on, that is.\" She leered at the two of them, \"Something tells me he has.\"\n\nCassie was standing in the group next to Grace, smiling from ear to ear, and gave the elevator duo a quirky little wave.\n\nPaul quickly removed himself from Molly when he realized his attempt at lightening the mood had turned into a show. His face was beet red.\n\nMolly, on the other hand, had the opposite reaction. Not bothering to pull her shirt down and cover herself, she stared out at the small gathering with contempt, like they were the ones being rude by interrupting her.\n\n\"Great,\" she said dryly, \"here I am.\"\n\n\"Here you are,\" said Grace. She turned slightly and watched as Paul tried to compose himself. She found his discomfort at being caught incredibly cute, especially considering she had seen him wrapped in only a few bed sheets a few hours before.\n\nMolly noticed Grace's leer at Paul and her mood darkened once again.\n\n\"You said you weren't serious,\" said Molly.\n\n\"I wasn't,\" replied Grace, still looking at Paul.\n\n\"But not you are.\"\n\n\"Now I am.\"\n\nMollly then looked at Cassie.\n\n\"Cassie,\" said Molly, \"please show Paul to my office where he'll be working. Have him take care of whatever employment documents you need and put the papers I need to sign on my desk.\" She turned her attention back to Grace. \"Grace, a quick meeting in your office, please.\"\n\nPaul had forgotten about his embarrassment for the moment, concentrating more on the tone in Molly's voice as she gave her instructions to the staff. It was incredibly sexy to watch her in 'boss mode'.\n\nPaul briefly wondered if there was going to be any part of Molly he'd see that didn't make him immediately want to tear her clothes off. He'd have to get her to use her boss voice on him at some point. It wouldn't even have to be about sex. People make porn about being ordered around by a crazy hot boss with big tits.\n\nSo, maybe it was about sex. It was hard for it not to be with Molly looking like she did. She oozed sex.\n\nMolly finally fixed her shirt, exaggeratedly took Paul's hand so everyone could see her do it and led him out of the elevator. She looked at him, still serious, \"I have a few things to take care of before getting back to the office, you should have the pages I wrote yesterday in your inbox. Start working on those once Cassie has what she needs.\"\n\nCassie was still smiling at them, though not in the same way Grace had been, but Molly was on edge and took it negatively anyway.\n\n\"What you need legally, Cassie. Nothing more.\"\n\n\"Of course, Molly,\" said Cassie.\n\nMolly frowned. She knew this was coming and should've warned Paul about it. She was confident he could handle himself but didn't feel any better about leaving him. She knew she was beautiful, but there were women in her employ more so, and it made her nervous for Paul to be around them. He was 'broken in' now, so to speak, and dickgirls could always tell.\n\nShe couldn't be around him all the time, however, as much as she wanted to, so she'd need to learn to live with him being alone around these other girls.\n\nCassie left in one direction, motioning for Paul to follow, while Molly and Grace took off in another.\n\nPaul was missing something. Molly was acting weird. Almost possessive of him. He'd have to ask Molly next time he saw her.\n\nWalking behind Cassie, she led him around some corners and down a few hallways before coming to a door that had \"Molly Denton, CEO\" posted on it. He didn't miss the smaller nameplate under it that read \"Paul Becker, Editor\", and felt a swell of pride that he had an office with his name on it.\n\nSure, it was Molly's office, and he was only working in it for now, but it was still a step up from his last job where he was forced to where a company shirt and nametag. Jobs that made you where nametags were always shit.\n\n\"Here we are,\" said Cassie opening the door.\n\nPaul stepped through and stopped. He didn't understand what he was looking at.\n\n\"Where am I? Are you sure we have the right office?\"\n\n\"I know, right,\" answered Cassie. \"Molly is always so fastidious everywhere else, but her office is a disaster.\"\n\nThe room was large, which made it even more of a surprise that it was littered, almost from floor to ceiling, with stacks upon stacks or books, loose papers, folders, files, and just about anything else you can think of that would belong in an office. In one corner there was a small table with six printers on it, none of which looked to be plugged in.\n\nThere was a large desk towards the back of the room covered in clutter. It didn't look like there would be enough room for Molly to use it for anything clerical. There was hardly a space for her to put a computer.\n\n\"It's beautiful,\" Paul mumbled under his breath. Molly had once again outdone herself in being unpredictable.\n\n\"What?\" asked Cassie.\n\n\"Nothing.\"\n\nCassie eyed him \"Sure...\" She said, thinking there was no way she heard him right.\n\n\"Your laptop is over on that desk,\" she continued, pointing to a small desk off to the side of Molly's. \"I'll help you get it booted and walk you through all the onboarding employee portal stuff. It's tedious, but necessary.\"\n\n\"Sounds good.\"\n\nIt was then Paul noticed the chairs.\n\n\"No way.\"\n\n\"What?\"\n\n\"Recliners... as desk chairs. Are those the same ones from the conference room yesterday?\n\n\"Of course not,\" said Cassie. \"Why would we move them in here?\"\n\n\"You know... it's getting kind of old that the people in this office look at me like I'm the weird one for asking questions like that. Who the hell uses recliners as desk chairs?\"\n\n\"Molly.\"\n\nPaul paused, thought about it, then nodded, as if that was answer enough.\n\nThey made their way over to the desk, Cassie pulling an extra, non-reclining chair up to the desk so she wouldn't have to hover over his shoulder. They got the computer up and running and started going through the various motions of new employment.\n\nWhen Cassie had brought Paul to an especially boring and tedious part of the process, her curiosity got the best of her.\n\n\"Hey Paul?\"\n\n\"Yeah?\"\n\n\"Would you mind if I asked you a personal question?\"\n\n\"You can ask, I might not answer.\"\n\n\"That's fair,\" agreed Cassie, \"I was just curious, why did you take this job once it became clear what it entailed? You don't seem like the type.\"\n\n\"What type of person were you expecting?\"\n\n\"I don't know exactly, maybe someone who was already into girls like us? Kind of a 'I know it when I see it' kind of thing I guess.\"\n\n\"You mean dickgirls?\"\n\n\"Is that what she has you calling us? I was always fond of being called futanari myself, sounds more exotic.\"\n\nPaul shrugged. Cassie copied the gesture.\n\n\"You didn't answer my question, why take the job?\"\n\n\"I don't know how to answer it, honestly. It wasn't so much the 'job',\" he said using air quotes, \"as much as it was Molly. Something about her made me want to stay. Don't get me wrong, though, this job is amazing to. Don't think I would have even been considered by anyone but someone like Molly.\"\n\n\"That's... sweet, kind of. Do you think she'd say something similar if I asked why she hired you?\"\n\n\"Not even going to pretend to know what's going on in that girls head. I can say I hope she would.\"\n\n\"I see.\" Cassie sat back in her chair. \"Well, this is new.\"\n\n\"What? Am I doing this form wrong?\"\n\n\"No, you're doing fine with that. It's you and Molly. She and her editors don't usually get... attached.\"\n\n\"Why does that matter?\"\n\n\"It does and it doesn't. I probably shouldn't say anything. I'm surprised Molly hasn't already, though.\"\n\nPaul rolled his eyes at Cassie's dodge. \"You can't lead me on like that just to leave me hanging,\" he said.\n\n\"Yes, I can.\" She gave him a smug smile. \"But I won't. It's nothing too serious. More logistical than anything else.\"\n\n\"Make's sense why you'd mention it then,\" Paul said sarcastically.\n\nCassie smiled, but continued, \"Molly doesn't usually care if her editors stay exclusive to her while she's 'working' with them. It's not uncommon for us other girls to 'sample the goods' for ourselves. We can be a horny bunch, as I'm sure you know.\"\n\n\"And...\"\n\n\"And... something tells me that isn't going to be the case with you. I planned on hitting on you once we were alone. Shoot my shot, you know? You're very cute and 'fresh', so to speak.\"\n\nPaul had no response.\n\n\"Then I saw how Molly looked at you, and especially how she looked at Grace when she started eye-fucking you.\"\n\n\"Is that what that was?\"\n\nCassie nodded. \"Get used to it. We lot can be both territorial and competitive when it comes to sex. You'll probably get hit on by most of the staff while you're here. At least until word spreads that Molly probably has no intention of sharing you.\"\n\n\"Any way we can expedite the news? Not that I couldn't use the ego boost of a few crazy hot women coming on to me, but I'd rather not be the cause of intra-office turmoil. I especially have no desire to upset Molly.\"\n\n\"It'll spread fast enough. Some won't care, like Grace, and try to seduce you anyway.\"\n\n\"And you?\"\n\n\"Molly isn't the only one who could use a little inspiration these days. The look on her face when you had your head buried in her tits was the most peaceful I've seen from her in years. She deserves to be happy. If that means, just this once, I have to beg off, I will.\"\n\n\"Nice of you. One less person for me to turn down.\"\n\nThere were a few minutes of silence before Paul voiced some of his own curiosities.\n\n\"Cassie? Care if I ask something personal?\"\n\n\"Sure,\" she replied.\n\n\"Are all dickgirls as hot as the ones in the office?\"\n\n\"Mostly.\"\n\n\"Any reason why that you know of? Seems unfair to the rest of us mortals\"\n\n\"Evolution, maybe? We are a generally new gender compared to males and females. Then there is the fact most of us have oversized penises and hyper sex drives. Kind of hard to find a 'mate' with all that going on. Being hot might be nature's way of balancing that.\"\n\n\"I can see that. Are you all mostly into men? I don't know many men who'd be into what you girls are offering, regardless of how pretty you are. Though given my new experiences, I could be way off on that mark.\"\n\n\"Hell no. We'll get down with anyone, including other dickgirls. We'd go extinct pretty quick if it were only about mean. In fact, Molly is the only girl I know who is strictly into men.\"\n\nPaul nodded, then indicated his screen, \"I think I'm done,\" he said, meaning both with his questions and with the forms.\n\n\"So you are,\" she said in reply. \"I know Molly has some pages for you, so I'll leave you to it.\"\n\nWith that, Cassie gathered her things, dropped some papers on Molly's desk and made her way to the door. Before leaving she turned back to Paul, needing one more answer from him.\n\n\"Paul?\"\n\n\"Hmm?\"\n\n\"It's more than job to you, right?\"\n\n\"As much as Molly will allow it to be.\"\n\nCassie nodded once and left.\n\n*********\n\nPaul sat back in his desk recliner utterly devastated. He'd read through the few pages Molly had sent him three times since Cassie left, the contents of which sent him into a spiral of self-loathing and depression. If he tried all his life, he would never be able to write something as valuable as what Molly had written in less than a day. His career was over before it had ever even started.\n\nHe was a hack. A poser licking at the teat of immensity. Literally, as the case with him and Molly may be.\n\nHe came into the building yesterday knowing he would never reach the heights of someone like Molly, and he was ok with that. The majority of anything, anyone, drowned in a sea of mediocrity throughout their entire existence, regardless of how well they swam.\n\nIt was the law of averages.\n\nTo have it here, in front of him, unabashedly laughing and shitting on his dreams was an exercise in cruel honesty Paul had not been prepared for.",
        "He started reading through the pages again. He couldn't stop himself. At this point, soaking himself in Molly's talent was all that was making him feel any better.\n\nThe office door opened, then slammed shut, the sudden noise making Paul jump and breaking him out of his brooding. He looked up and found Molly stomping towards some unknown destination in the office with apparent anger. She was mumbling quietly as she walked, Paul not catching much but a few bits and pieces.\n\n\"... stupid fucking whore... cut her tiny dick off... keep her stupid fucking whore hands to herself... cunt...\"\n\nPaul imagined most of what she was saying would be similar so didn't bother to try and hear more. Instead, he sat quietly and watched her huffing around the office. He wasn't sure what she was doing, but he was loving watching her do it.\n\nShe started fiddling with a stack of books across the room, her side facing him, showing off her perfect profile.\n\nHer hair was in a ponytail, but a few loose strands kept falling in her face causing her to swipe at them in a vain attempt at trying to keep them out of her way, all while absently muttering the words 'whore' and 'cunt' over and over again.\n\nNot finding what she was looking for, she started moving around the office again, still not acknowledging Paul as he sat watching her.\n\nHer tits bounced in her shirt. Her flowing skirt flared and twirled at her sharp changes in direction, giving him peeks at the bare skin and curves underneath. Sexy as she was, she had a grace to her that belied her lewd silhouette.\n\nHer body was made for movement. Built to be admired. Every part of her worked together in her tantrum across the office, showcasing her natural beauty as if on purpose, like she was dancing.\n\nIt was hopeless. Paul was hopeless. There was nothing of Molly he didn't want more of. She was greater than him, and suddenly he felt like his own mediocrity could go fuck itself if he could be apart of something beautiful as Molly made the world.\n\nShe must have found what she was looking for because she moved to her desk and sat behind it in her matching recliner to his. She opened her laptop, performed some task or another before moving her attention to the stack of papers Paul remembered being the ones Cassie had set down before leaving.\n\nShe would read, sign her name angrily, mutter something like 'stupid whore', and move on to the next page. The fact she still hadn't looked in his direction was entertaining enough he was tempted to see how long it would go on without his interference. She was probably so used to being alone in her office that it didn't even occur to her someone else might be in the room with her.\n\nHe decided not to wait, selfishly wanting her attention. He cleared his throat. She looked up to the door annoyed, most likely thinking someone was coming in to bother her from out in the hallway. When she didn't see anyone, a look of realization came over her and Paul could see the moment Molly understood where the noise had come from. She turned to him, locking her dark eyes onto his.\n\n\"Paul.\"\n\n\"Yes?\"\n\n\"You're here.\"\n\n\"Yes. I work here.\"\n\nShe scrunched up her face, not liking something she was seeing.\n\n\"You look upset,\" she said, \"I don't like that you look upset. What's wrong?\"\n\n\"Nothing is wrong.\"\n\n\"Was Grace here?\"\n\n\"No. I have been alone since Cassie left.\"\n\n\"Did Cassie say something to upset you? Or do something?\"\n\n\"Of course not. She is very nice. I enjoyed her company. I have just been going over the pages you sent me. They are very good.\"\n\nMolly scrunched her face again.\n\n\"Why are you talking like that?\" she asked.\n\n\"Like what?\" replied Paul, honestly not sure what she meant.\n\n\"You use contractions in your normal speech pattern. You haven't used one since we started talking just now, even though you've had five opportunities to do so. You're speaking formal to me again, like yesterday. I hate it. Stop it and tell me what's wrong.\"\n\nPaul was surprised at the news. He hadn't realized he was doing it. Molly had noticed and even counted the occurrences. Yet another wonder to admire about her, Paul thought.\n\n\"I will if you will,\" he said. \"You've been stomping around this office cussing for the last fifteen minutes.\"\n\n\"Grace is a cunt and wants to fuck you. I told her no and she ignored me. Your turn.\"\n\n\"Oh,\" said Paul. \"That fits. Cassie told me that would be an issue.\"\n\n\"Cassie has a big mouth. Which she probably wants to use to suck your dick.\"\n\nPaul looked thoughtfully at Molly.\n\nShe stood up from her seat and walked over to Paul's desk. She stood in front of him with her hands crossed under her breasts, lifting them up slightly.\n\n\"Do not worry,\" Paul stated reassuringly, purposely not using contractions again just to mess with her, \"I am quite stricken with you. You are a marvel that deserves my undivided attention, I can assure you.\"\n\nMolly rolled her eyes, \"I told you mine, it's your turn,\" she huffed.\n\nPaul really didn't want to talk about this right now, especially since he was all but over his brief bout of brooding, but didn't see any way out of it. He tried to come up with a way to explain it without outright saying 'you're such a good writer the rough draft of your new book sent me into an existential depression'.\n\n\"I'm boring,\" he finally said.\n\nMolly didn't move, waiting for him to continue.\n\n\"I've been sitting here for the last few hours reading and re-reading the pages you sent me. I haven't even begun trying to edit them for fear I'd somehow ruin them, they're so good. Your mind, the way you think and translate it onto the page, it's... elegant.\"\n\n\"Sooo, what? I'm a better writer than you and now you're sad? I'm a better writer than just about everyone. That doesn't make you boring.\"\n\n\"Doesn't mean I'm not, either.\"\n\n\"Which makes this conversation boring, and irrelevant, but has very little to do with you.\"\n\n\"You're the one who insisted on it.\"\n\n\"You're upset. I don't like that you're upset,\" repeated Molly.\n\n\"You said that already.\"\n\nMolly frowned cutely.\n\nPaul laughed. \"Sorry Molly,\" he said, \"I'm being whiney and dumb. I do that sometimes. If it makes it any better, I've been much happier since you entered the room. It's fun to watch you flounce angrily when you're not wearing a bra.\"\n\nShe looked down at her tits and bounced slightly to make them jiggle, then looked back to Paul, still frowning. \"I don't flounce, and you're not boring, so go fuck yourself on both counts.\"\n\n\"I concede the second count, for now, but reject the first. You flounce, and it's awesome.\"\n\nMolly perked up slightly. She tried to hide it and force a frown but gave up when it was obvious Paul wasn't buying it.\n\nHow could he ever say he was boring? It had been a day of one problem after the next since she left his side. One dumb conversation and an absurdly false accusation that she flounced later, and everything was better again.\n\nShe extended her hand to Paul.\n\n\"Come with me, please,\" she said, \"we have work to do.\"\n\nPaul stood and took her hand, following as she brought him over to the space between her desk and office recliner. Molly started undoing Paul's pants. She reached her hand inside to grip him as soon as she could manage it, encouraging his cock to fullness. He stiffened in obedience to her touch, quickly becoming fully erect.\n\nSatisfied by his arousal, she broke away and pulled his pants down, his cock ending up in her face when she had bent to slide the pants to the floor. She got on her knees and took him in her mouth while she fussed with his shoes, as if not sucking his dick while it dangled near her face had never been an option.\n\nIt was an awkward thing for Paul. He tried to remove Molly from his dick so he could more easily undress for her, but she denied him. She pushed his hands away, looked up at him and pinched his leg in annoyance, communicating wordlessly 'figure it out, I'm not letting go'.\n\nPaul gave in and went about shuffling out of his pants dumbly, like a toddler who hadn't figured out how clothes work yet, all while Molly nursed on his tip, ignoring his struggles.\n\nIt wasn't her problem, she had what she wanted.\n\nFinally freeing himself from the entanglement, Paul watched Molly do as she pleased. Her stray hair from before was in her face again. It was Paul, however, that brushed them back so he could watch Molly suck on him more clearly. Molly sighed in pleasure at the intimate gesture.\n\nShe pointed to his shirt and mimed for him to take it off. He did, and Molly started running her hands all over Paul's body, never once taking his dick from her mouth.\n\nShe was playing with him again. She had no intention of getting him off like this. The blowjob was about her and what she wanted. That it also felt amazing to Paul was once again a by-product of Molly's heightened sexual needs.\n\nFor whatever reason, Paul didn't seem to care about Molly's motives.\n\nShe spoiled herself for a few more minutes, spoiling Paul in the process, but also making sure not to edge him too close. When she finally pulled off, she stood and leaned back on the desk behind her, knocking a stack of papers to floor.\n\n\"Sit, please,\" she instructed, pointing at her chair.\n\nPaul sat, his cock sticking up straight, hard and glistening from Molly's spit. He was used to her being direct with him like this when it came to sex, it was a distinct quality Paul very much appreciated about his new boss.\n\nMolly admired his body for a moment, wondering what had taken her so long to move on from smaller men. His cock looked impressive, long and hard, and couldn't wait for what was coming next. She turned and placed her hands on her desk, presenting her ass to Paul.\n\n\"Lift up my skirt, I have something you should see.\"\n\nPaul reached forward, grabbing Molly's skirt and slid it up her thighs. His heart quickened when the first peak of Molly's cock peaked out from the bottom hem, the outline of the underside of her mushroom head curving up as if smiling at him.\n\nMolly was tucked. Her girlcock was lined neatly against the valley of her thighs, pointing down towards the floor. Paul slowed the pace of lifting her skirt, trying to prolong the reveal.\n\nHe admired each vein, each ridge that decorated her thick, massive shaft and couldn't help but reach out and touch it. He slid his hand from her cockhead up Molly's skirt slowly, not lifting it any further just yet, so he could caress her base and the two perfect round bulges that topped her perfect cock. Paul grabbed and messaged Molly's twin orbs, impressed again by how smooth and hairless they were.\n\nFinally, he lifted Molly's skirt higher with his other hand and revealed the rest of her to his eyes. The warmth of her, combined with still somewhat taboo experience of being unquestionably turned on by dick and balls in his hands and face drove Paul to new heights of arousal.\n\nHe stopped lifting when he uncovered the hand that was groping Molly, leaned forward, and gave her balls a tentative lick.\n\nMolly sighed, enjoying the sensation. Oral wasn't part of the plan, however. Not right now anyway. She'd been dreaming of doing this next part since early that day.\n\n\"As good as that feels,\" Molly moaned, \"keep lifting, there's more.\"\n\nPaul, wondering what was more important than Molly's cock right now, flipped the skirt up until it rested on her lower back.\n\nThere, in the middle of Molly's ass, was a blue, jeweled butt plug lodged deep into her tight hole. Paul was glad Molly had told him to keep going. The entire picture laid out in front of him was a visual he'd remember the rest of his life.\n\nIn this moment, Molly was perfect. Her hard, tucked girlcock hung low, faintly pulsing, begging for attention, her balls churning in tune with its larger counterpart. Above it all, eyeing him with menace, and promise, was Molly's filled and sparkling hole.\n\n\"Take it out, please,\" said Molly.\n\nPaul removed his hand from Molly's ball sack and moved to trace his fingers over the smooth gem in Molly's asshole. He grabbed on and twisted, spinning it without trying to remove it.\n\nMolly opened her legs while Paul played and admired, she reached her hand back and brought her girlcock forward in front her, taking it away from Paul's view, then closed her legs tight again.\n\n\"Wait...\" he said, disappointed.\n\nMolly shuddered at Paul's tone. It excited her that he wanted her cock, but she needed something different from him right now.\n\n\"Later. Right now, you need to hurry. I need your big cock in my ass.\"\n\nGetting the picture, Paul grabbed onto Molly's butt plug and pulled. It popped out with a lewd slurping sound and what looked to be a generous amount of lubricant started leaking down her ass and thighs.\n\nMolly bent down towards Paul's lap and leaned back.\n\n\"Guide me in, please. I've been waiting for this since I put the plug in. I've never had a cock a big as yours fuck my ass.\"\n\nPaul felt like he should be saying something, maybe not dirty talk, but something.\n\nHe had nothing. Molly was in control now. She always was.\n\nHe lined up the tip of his cock with Molly's small gape, then let out a low groan when Molly sank down and swallowed his tip with her ass.\n\nMolly gave her butt a small wiggle, shaking Paul's cock like toy joystick, before sinking lower. The slope and curve of her back caused her skirt to fall, making it so Paul couldn't watch what was happening. He was going to move it again so he could see, but when Molly took more of his dick into her it somehow felt dirtier that he could feel what she was doing to him, but couldn't see it, so he left it covered.\n\nMolly put her hands on Paul's knees for leverage and started rocking. He still wasn't all the way in. On each dip downward, Molly would inhale more and more of him with her unseen passage.\n\nWorking him deeper, Molly felt the exact moment Paul reached virgin depths.\n\nThere wasn't much she hadn't done or experienced before Paul, but this, she thought as she sank lower, belonged to him, and only him. The stress of the day, the anger she felt at the other girls in the office who 'wanted a turn', the daily grind of running a business, it all faded away until all that was left was Paul.\n\nHer butt finally touched thigh, and she could feel Paul's balls resting under her. She sat back and rested against Paul, putting the rest of her weight onto to his cock and feeling the last of his length snuggle itself home.\n\n\"You're so tight,\" Paul grunted.\n\n\"You're so big,\" replied Molly, \"No one has ever been this deep in my ass before.\"\n\nPaul wrapped his arms around her, hugging her tight to him and giving his cock a small thrust. He wanted to be even deeper, to touch more of her, to claim more of her as only his.\n\nHe knew he couldn't compare to Molly's girlcock, few probably could, but he still felt reassured to hear her compliment his size. He wished he was above such things like dick measuring, but he wasn't. He was just one more insecure man aching for a hot woman like Molly to validate his masculinity.\n\n\"Fuck, my ass is so full. We should have done this sooner,\" said Molly, stroking his ego even more as if she heard Paul's insecure thoughts.\n\nShe brought her hands up, pulled her shirt down to expose only her tits, the straps still around her shoulders.\n\n\"Hold my tits,\" she said to Paul.\n\nWithout hesitation, he took her mounds in his hands, not caring why she this was something she felt to need to ask for specifically. He understood a few seconds later, however, when she started bouncing on his cock, her tits fighting an epic battle with gravity all their own as she did so. Paul's hands were her acting as a sports-bra, the muscles in his arms working to support the heavy weight of her massive tits as her body rose and fell.\n\nPaul felt himself getting close all too soon. There was too much stimulation, visually and physically, for him to hold out.\n\nMolly must have recognized it because she abruptly stopped.\n\n\"Shit, don't cum yet,\" she told Paul, sounding out breath. \"Shit, uhm, fuck you feel good. Sorry, but... fuck... ok, I'm ok, shit.\"\n\nMolly was having hard time coming back to herself. She had a purpose to what she was doing that involved keeping Paul hard, something that would stop if he came. But he felt so good she was tempted to say 'fuck it' and keep right on fucking until she felt him fill her up.\n\nSteeling herself, she fought the urge.\n\n\"I, fuck... I wanted to get some work done while I had you buried in my ass,\" she said as if that was a normal thing people did. \"But I seem to have underestimated how perfectly you'd fit inside me. My head is so addled it's like you're fucking my brain.\"\n\nPaul let go of Molly and leaned back in the chair, understanding his place in her game and accepting it.\n\nMolly felt bad again. As much as she told herself she didn't like to tease, she had been doing it quite a lot with Paul lately.\n\n\"Sorry,\" she said. \"I know I have you edged; I can finish you if you need me to... I'd just really like to keep you here,\" she said, squeezing her ass.\n\n\"No, it's fine. Just... don't move for a minute. Squeeze your ass like that again and I might blow anyway.\"\n\n\"Fair enough. You sure you don't mind? If it were me, I'd need to finish. I hate being edged. I'd understand.\"\n\n\"It's close, but being balls deep in you while you do fancy CEO stuff sounds like a huge ego boost for me. Again.\"\n\nMolly rolled her eyes, not that Paul could see her do it in this position.\n\nPaul continued. \"Maybe remind me how big I am or how full your ass feels right after signing a million-dollar book deal or something, we'll call it even.\"\n\nMolly laughed, which caused her ass to clench and Paul to wince, trying his best to hold off the tide.\n\n\"Fuck. I felt that. Sorry,\" said Molly.\n\n\"You're doing it again,\" said Paul. \"Stop trying to take care of me and do some work. You feel amazing. I'm going to sit here and enjoy it for as long as I can stand it.\"\n\nThey remained motionless for a few minutes until Paul was reasonably sure he'd calmed somewhat. He just needed to be in a place where he wasn't on a hair trigger.\n\nHe let Molly know she was good to move a around. She leaned forward, resting her elbows on her desk and started shuffling papers around.\n\nPaul closed his eyes as Molly worked, enjoying the feeling of her in his lap and wrapped around his cock. She was warm, and every so often she would clench or grind into him. He wasn't sure if it was for his benefit or hers, or even if she knew she was doing it, but he wasn't sure he cared.\n\nIt suddenly occurred to him that Molly still had all her clothes on, skimpy as they were, while he was completely naked. He'd seen porn like this before. He wondered if the dynamic was intentional, or just coincidental.\n\nHe chose to believe it was on purpose, it made the moment feel kinkier, something about it turning him on more than he already was. He'd have to see if Molly would be ok with playing into this kink more often.\n\nNothing happened for some time, both of them were content in the feel of each other's bodies. The atmosphere was calming, a sharp contrast to the way their sex episodes had been playing themselves out recently. There was no urgency. No interruptions. No worrying about what was next or how to navigate the emotion that permeated much of their short, intense, relationship.\n\nMolly had moved on from paperwork and had been typing away at her laptop. The fast, rhythmic clicks of her keyboard were hypnotic.\n\nIt wasn't clear to Paul how long they had stayed like this, but he was suddenly broken from his trance when he heard Molly moan, stop typing and close her computer. She leaned further forward and laid her head on her desk, sprawling her arms out wide and knocking more clutter from atop her desk onto the floor.\n\nShe started fucking his cock again, slow and smooth, lifting her ass only slightly before burying him fully in her ass again. Every few strokes she would lift herself higher, letting more of Paul out her, before dropping and going back to the smaller motions.",
        "After a minute, Molly stood, letting Paul's cock completely out of her and turned to face him. She knelt down on the chair, straddling his lap and putting her bare tits in his face as she grabbed his cock, that was now behind her, and slid it back in her greedy hole. It had happened so quick Paul barely had time to register the cool air on his slick cock before it was once again warmed by Molly.\n\nShe sank down, her girlcock resting between them and her face coming even with Paul's'.\n\n\"It's not supposed to be like this,\" whispered Molly, \"You aren't supposed to feel this good. It's distracting, hard to get any work done.\"\n\n\"And that's bad?\"\n\n\"I was hiring a sex toy. Someone to use as a tool for work, to help write my new book. Instead, I have you, someone who makes me use work as a tool to have sex... or as an excuse just to be in the same room as you at times.\"\n\n\"Pretty sure I should be insulted at being hired as sex toy.\"\n\n\"Not like I hid my intentions, and I know you're joking, but honestly you should be insulted. I've been a very bad girl to you, Paul. I haven't been fair.\" Molly gave Paul an innocent pout, \"You'll let me make it up to you, won't you?\"\n\nPaul nodded like an idiot, surprised at Molly switching the game, yet again.\n\n\"You're so nice, giving your sweet girl a second chance,\" she leaned up and buried Paul's face between her tits, smothering him, \"I pro-mise you won't regret it.\"\n\nPaul watched, weak and helpless in Molly's care, as she leaned back, planted her hands on the desk behind her, and lifted her ass until only his tip was inside her. She un-straddled herself from his lap and spread her knees wide, placing her feet on the armrests of the chair. The only point of physical contact left between them was Paul's cock lodged in her ass.\n\nMolly's girlcock, in defiance of gravity, floated in the air between them, lifting Molly's skirt and giving Paul the first look at what Molly was doing to his cock since he had first entered her.\n\nShe sank down slowly, letting Paul see her envelope his cock until there was nothing left to see but Molly's cock pointing up into his face. She lifted again, still moving slow, making Paul's dick magically reappear inch by inch.\n\nOnce at the top, she gyrated her hips, lewdly messaging Paul's cock head with her tight pucker, keeping deep eye-contact with Paul as she rode him.\n\nPaul wanted to participate, to thrust up into Molly, to play with her tits, caress her thighs, something, but he couldn't. He couldn't even move himself enough to touch her cock, which was swaying up and down in tandem with the rest of Molly, like pendulum of cockmeat.\n\nShe started fucking Paul faster, the increased rhythm causing her tits to flop down and slap into her chest, and her heavy cock to smack Paul's stomach on each of her downward thrusts.\n\n\"Fuck,\" Molly whined, \"you're going to make your sweet girl cum again Paul. You feel so good in my ass it's going to make my needy girlcock cum all over you.\"\n\nShe picked up her speed more.\n\n\"You're going to cum too, right Paul? Cum deep in my ass? I want you to, so much. That's what good girls do, right? Let nice boys like you cum deep in their ass?\"\n\nPaul groaned, not even mustering enough will power for another idiot nod.\n\n\"Look what you and your big cock have done to me, I should be ashamed. So greedy to be fucked.\"\n\nFaster now, Molly fucked Paul with force, never once looking away from him, holding Paul hostage with her body, and the desperate look of pleasure in her eyes.\n\nThe song leading them to their inevitable crescendo was a cacophony of colliding flesh. Molly's ass slammed down onto Paul's cock, slapping into his lap. Her massive girlcock made clapping sounds with each collision onto his bare stomach from the violence caused by its girth.\n\nMolly's enormous, perfect tits smacked together lewdly to complete the symphony she had composed with her body, just for Paul.\n\n\"SOoooo close,\" she moaned loudly, making sure she was heard over the immoral sounds of her bouncing form.\n\nPaul's knuckles were white from gripping the chair too hard. For a moment he tried to look away from Molly's penetrating stare, irrationally concerned the succubus riding him was looking to steal his soul away, but he couldn't.\n\nHe was hers now, and she needed Paul to watch her consume him.\n\nHe couldn't hold any longer, on pure instinct, Paul thrust up as Molly fucked down onto him on last time and released his seed into her.\n\n\"Oohh fuck! I can feel you cuming,\" Molly yelled, \"It's so much. Don't stop. Fill me up.\" She started bouncing again, feeling Paul fill her up more as she did.\n\n\"Shit, shit, it's coming... I'm cuming. Shit, shh...\" Her mouth remained opened, but no more sounds came out.\n\nShe dropped down, burying Paul as deep in her ass as she could possibly manage, and peaked. Her ass spasmed as it orgasmed, spreading the pleasure all over her body. Her cock joined in, letting loose a down-pour of girlcum. The first few spurts landed on Paul's chest and face before Molly brought one of her hands around and lifted her cock so it was now pointing up at her.\n\nShe stroked, coaxing more cum from her shaft, drenching her tits with her own sex juices, a beautiful pearl necklace of her own making forming around her delicate neck. The torrent of cum seemed unending, and Paul almost passed out from watching it fall in globs onto Molly's perfect body.\n\nThrough it all, Molly held Paul's eyes with her own, promising him this was just the beginning of what she would do for him, to him.\n\nIn the end they were both wicked puddles of sinful excess.\n\nNo longer able to hold herself up the way she had been, Molly adjusted and straddled Paul once again, keeping him firmly lodged inside her ass. She wasn't ready to let him go just yet.\n\nHer cum covered tits mixed with Paul's cum covered chest when she pressed up against him. She shimmied, like she was trying to rub her girlcum into Paul's skin with her sloppy melons.\n\nThe wet noise it made was obscene.\n\nThe ambient noise of two people fucking often went underappreciated. Even though, if done right, it was an event unto itself.\n\nPaul hadn't wavered again in keeping his eyes and attention on Molly since his brief moment of denied submission. Her cum, her sent, her words, her dark, piercing eyes overlaid atop any sexual memory that didn't already involve Molly.\n\nA dark fantasy made real.\n\n\"You've made another mess of me, sweet girl,\" Paul said quietly.\n\n\"Oh my,\" she moaned back, still in her sexy 'sweet girl' voice. \"I just can't help doing these dirty things to you. I suppose I'll need a third chance, won't I?\"\n\nHe kissed her. No play, no game. Just need, longing, and regret that this moment couldn't last forever.\n\nGetting back to himself, Paul's dry humor returned, \"You could always make up for it by explaining what it is with these recliners,\" he patted the chair they were in, \"or why, of all places, your office looks like it belongs on an episode of Hoarders.\"\n\n\"What do you mean?\" asked Molly.\n\nPaul looked at her face, searching for any hint that she was being indignant, or that she knew what he was talking about and was only messing with him, or just about anything indicating she understood his flippant curiosities weren't the most outlandish or unreasonable issues going on right now.\n\nHe found nothing. She either didn't understand what he was asking her, or she had no idea it was crazy weird to use recliners as office furniture. He wanted to explain further, push for an answer, but thought better of it.\n\n\"Nothing. Never mind. It's me that isn't making any sense, I guess,\" he said, rolling his eyes internally. \"Must be cum drunk or something.\"\n\n\"Come back to my place and I can wash you, you'll feel better,\" said Molly. She had dropped her sweet girl act and sounded oddly concerned.\n\n\"I wish, but I really need to go home. It's been almost two days.\"\n\n\"Just a wash, then you can go home.\"\n\n\"Ha,\" Paul laughed, \"Sure. First it will be 'just' a wash, then it will be 'just' a suck, next thing I know you're spreading my ass and pinning me to the bed with girlcock.\"\n\n\"Maaaybe. Is that so bad?\"\n\n\"It sounds perfect, actually, but I really do need to go home.\"\n\nMolly pouted.\n\nShe looked so adorable when she did that, Paul almost caved.\n\n\"You really have no interest in playing fair, do you?\" he asked.\n\n\"No.\"\n\n\"How about this then. I go home, take care of what I need to, pack a few things, then show up for work tomorrow prepared to stay for as long as it takes for you to grow tired of me.\"\n\n\"Might take a while.\"\n\n\"I'm hoping.\"\n\nMolly smiled.\n\nRelenting, she said, \"Ok, but Ms. Denton, your boss, says the workday isn't over yet.\"\n\n\"Isn't there some labor law against working me this late, Ms. Denton?\" Paul said, lacing his last words with intentions.\n\n\"Oh, I like the way you say my name like that, we'll have to use it later.\"\n\n\"Speaking of... this whole 'clothed female, naked male' thing you have going on right now is really working for me. You should do it again sometime.\"\n\nMolly looked at herself. Other than her tits and a portion of her girlcock too big to be covered by her skirt, she noticed for the first time that she did indeed still have all her clothes on, even her shoes. She looked back to Paul, and sure enough, he was completely naked.\n\n\"Interesting. More fun for later though, I really need to get some writing done while I have you here. How about you get between my legs and play with my cock? No preference on how, I just like having you touch me. Please\"\n\nMolly's cock hadn't softened and was pulsing as it rested on Paul, all but begging for more attention. Paul but his hands on Molly, stroking her lightly.\n\n\"I feel tempted to see if you can last the way you say you can,\" he said.\n\n\"We'd probably pass out from exhaustion before I stop being hard.\"\n\n\"Do you stay hard when you sleep?\"\n\n\"I feel like I'm answering the same question now, just phrased differently.\"\n\n\"That's a yes then.\"\n\nMolly got up off Paul to let the two of them rearrange, Paul dutifully making himself comfortable on the floor. Molly situated herself so he was able to access any part of her girlcock and balls he had an interest in.\n\nShe wrote, he played, and they talked over the next few hours about nothing in particular. Paul found himself being able to tell by the firmness of Molly's girl-balls when she needed more than just play and made her cum when needed.\n\nNeither one of them could remember the last time they'd been this relaxed.\n\n*********\n\nIt was well past dark by the time Paul left the office. He was thankful for it because it meant the staff had gone home for the day and the halls in the building were mostly empty. The only person left to witness what was essentially his 'walk of shame' after two days of fucking his boss was the receptionist, Amy, he had first met after arriving here the day before.\n\nShe didn't say anything as he walked by her desk, only giving him a playful wave and a knowing smirk on his way out.\n\nIt was going to be weird over the next few weeks with his co-workers knowing he was getting railed by his big-dicked boss. It was a small price to pay for Paul if it meant he was getting railed by his big-dicked boss. Somethings were turning out to be their own reward when it came to Molly.\n\nThe night was cold and clean. The crisp, fresh air feeling great on Paul's face after not being outside for so long. Getting into his car he rolled the window down and tuned his radio to music instead of the talk-radio he had been listening to the day before and pulled out of the parking lot.\n\nA dream-like fugue washed over him as he drove, the empty streets and stoplights a soothing blur in his vision. He played over his time with Molly in his head. It didn't seem real. The past forty-eight hours was an earthquake of happenings that played better on black water websites rather than in his memories.\n\nMolly ran like a mirage in his head, like something his mind had painted to cope with how miserable his life was before she had walked into that interview room.\n\nA rush of air washed over his face from the open window, bringing with it the scent of Molly that still permeated his entire body. Molly had spent some time cleaning him up, wiping down the worst of what she had left on them both, but he was too saturated in her for it to make much of a difference in the end.\n\nIt was the scent that made her real again. He felt her perfect tits hugging his cock, being inside her, hearing her sweet little voice begging him to cum. Moaning for him to fill her up deep in her ass until she couldn't hold any more of him.\n\nHe remembered how it felt to have her buried and hilted in his virgin ass, her balls slapping against him shamelessly each time she drove her girlcock down into the far reaches of his body.\n\nThat feeling, the fullness of it most of all, dominated his thoughts.\n\nHe pulled into his apartment complex and parked the car. He didn't move to get out, however. He remained in his seat with the engine still running, tempted to pull back out and turn around and drive back to Molly.\n\nHe missed her. He should have stayed and dealt with the real life that waited for him in his crappy studio apartment another day. But that would only delay the trip, and the sooner he sorted himself out, the sooner he could be back with Molly.\n\nShutting off his car, he got out and made his way inside.\n\nEntering his apartment, it immediately felt small. It wasn't the size that was small. It was a studio. The space had always been small.\n\nIt was the dimness. There was no shine here.\n\nHe moved about, going through the motions like anyone would after arriving back home after being gone for some time. Putting things away, taking things out, cleaning and organizing. All of it mundane. All of it useless.\n\nHe didn't want to be here. What was a room without Molly in it?\n\nA decision came to Paul without consciously trying to make one. He could pack up the things he needed in a few minutes, shove it in his car and be back with Molly in less than an hour if he hurried.\n\nSo why not do it?\n\nHe grabbed a duffle from his closet and started filling it with anything he thought he might need, trying to be thorough enough not to forget something that would cause him to have to come back. He didn't own much to begin with, so it took him less time to pack then he thought it would.\n\nAs badly as he needed one, he wasn't going to shower since it would just waste time and wash away what little of Molly was left on him. He changed his mind, however, when he thought about how eager she would be to mark him all over again. Best to give her a clean slate to work with.\n\nAlone, no soapy tits sliding over his naked body, no hard girlcock to play with, it was the stupidest fucking shower Paul had ever experienced.\n\nClean and dry, he pulled on some underwear and a pair of comfortable gym pants. Before he could grab a shirt and pull it on, a knock sounded loudly coming from his apartment door.\n\n\"Who is it?\" Paul asked. He was confused. It was late for visitors, not that he got many visitors during the day either.\n\nThe answer he received was another round of knocking.\n\nInstead of yelling, Paul went to answer it. In the back of his mind, he was hoping it was Molly, just as desperate and pathetic as he was with his need to be with her.\n\nHe opened the door with high hopes, only for them to be dashed and replaced with confusion and disappointment.\n\n\"Grace?\" he asked, surprised to see her here at his apartment.\n\n\"Hi Paul,\" Grace replied, smiling.\n\nShe was dressed in yoga pants, sports bra and a light jacket like she had come here straight from the gym. She looked amazing, each piece of clothing form fitting, revealing, and sexy as fuck.\n\nSomething was off about her though. Nothing about her besides her clothes made it look like she had been working out. Her make-up and hair were still perfect, and she was wearing casual footwear as opposed to sneakers. The outfit, combined with the house call, reeked of trying too hard to accomplish something Paul wasn't sure Grace knew how to do.\n\nNot to mention that women dressing in work-out clothes with no intention of working out or performing any sort of physical activity was the universal uniform of the basic suburban housewife. A stereotype that didn't seem to fit Grace in the least.\n\nThe semi-erect bulge riding down one of her pant-legs was also a red flag. It didn't look to be as big as Molly's, but it was impressive non-the-less.\n\nPaul knew this wasn't going to go well.\n\n\"What are you doing here? How do you know where I live?\" asked Paul.\n\n\"I'm the director of HR, it's my job to know where you live,\" replied Grace evenly.\n\n\"Ok, then let's go with my first question,\" he said dryly. He didn't like her being here, not after what Cassie and Molly had warned him about.\n\nGrace stopped in her response, and gasped.\n\n\"Damn, what happened there?\" she asked, pointing to Paul's shoulder where Molly's bite mark was starting to bruise.\n\n\"Molly bit me,\" he replied, not having a reason to lie. They all knew what he and Molly had been getting up to.\n\n\"And from behind from the looks of it. That wasn't very nice of her.\"\n\n\"Not her fault. I'm very tasty.\"\n\nGrace laughed, entering Paul's apartment without being invited.\n\nPaul was surprised at her brashness. By the time he thought to stop her, she had already passed him moving deeper into his apartment. Short of physically picking her up and throwing her out, there wasn't much he could do about it.\n\nHe could yell or scream for her to leave, but she was technically someone he worked for and wasn't sure how to navigate kicking her out tactfully. He also didn't want to take advantage of him and Molly blurring the lines of business and pleasure so soon in their relationship. It was unfair to her and looked terrible on him.\n\nHe went to shut the door behind her on impulse, then decided against it. It felt too intimate to be in a small, enclosed space with Grace and he wanted no part of it. Instead, he opened it wider and left it.\n\n\"I thought I would come by and chat a little,\" Grace said, taking a seat on his couch, \"Molly's been keeping you so busy we've hardly had a chance to get to know one another.\"\n\n\"Shame,\" responded Paul, not meaning it.\n\nGrace paused and smirked. \"Molly said you were funny. I see what she means.\"\n\n\"Does she know you're here?\"\n\n\"No. Should she? She's a busy girl, and this is part of my job. Not hers. Come, sit, let's talk. See if Denton Publishing can't be a better home for your career growth.\"\n\nPaul blinked and watched Grace subtly move her hand to her cock when she emphasized her last word. It occurred to him that Grace might have never had to work very hard to get someone in bed and therefore had no idea how to put effort into seducing someone.\n\nThe theory explained the overt choice in clothing and her not-so-subtle emphasis towards her cock. Not to mention she was easily one of the most beautiful women he had ever met in his life, showing up and pointing at whoever she wanted to take home was probably the extent of whatever dating skills she had ever needed to evolve.\n\n\"Most of my work is directly involved with Molly, I'm not sure there's much to discuss without her being here.\" Paul said, trying to end the conversation quickly.\n\n\"There's more to this business than being Molly's... editor,\" she said, meaning something completely different.\n\nHer passive aggression was grating. That last quip almost sounded like she was insulting him. Or Molly, which would be worse.\n\nGrace made a show of taking off her jacket, jutting her chest out showing off her impressive bust. Paul rolled his eyes at the overdramatic gesture.\n\n\"I'd prefer you not get comfortable; I was just leaving. Molly asked me to come in to help her with a part of her book she's stuck on.\" A truth, and a lie.",
        "\"That sounds like her, burning the candle at both ends. A workaholic if you ask me. I can be similar at times, but I try and go out of my way to enjoy the better things in life when I can. Work-life balance is important, don't you think?\"\n\nPaul said nothing. Her subtle jabs at Molly caused him to have an off-brand desire to kick her in the balls.\n\n\"Part of my department's purpose,\" she continued, oblivious to Paul's violent desires, \"is to ensure our employees don't get lost in the nine-to-five grind corporate life can sometimes become. I've seen enough cases of burn-out not to understand the reality of it.\"\n\n\"I've only been working for a day.\"\n\n\"You know what they say, an ounce of prevention is worth a pound cure.\"\n\n\"They do say that,\" Paul replied. He honestly thought the phrase was quite apt for this situation, though not in the way Grace meant it. He needed her gone before this went any further.\n\n\"Not to be rude,\" he said as he walked closer to the door, leading her out with his body language, \"but I really was on my way out. Maybe if Molly can spare me at some point later this week, I can come by and we can finish this conversation.\"\n\nGrace looked annoyed. She wasn't used to being dismissed so easily. The objects of her attentions were usually on their knees sucking her fat cock by now.\n\n\"Your dedication to Molly is admirable,\" she said, \"but don't you think you can accomplish so much more, professionally speaking, by finding something better than being some has-beens fuck toy?\"\n\n\"Ok, nice,\" Paul said curtly. \"Thanks for coming. Get the fuck out.\"\n\nHe was happy to have the work pretense over.\n\n\"Don't play hard to get with me, sweetheart, Molly was breaking in your ass in less than a day. I saw you staring at my cock, be a good little boy and come get a closer look.\"\n\n\"Rather not. Molly's is bigger, I don't play in the kiddie pool.\"\n\n\"Fuck you!\"\n\n\"Too late, not so much into women these days. I love big, fat girlcock.\"\n\n\"What the fuck is that supposed mean,\" Grace yelled. She involuntarily looked down at her package as if to confirm it was there.\n\nA feminine cough came from the doorway. Paul spun.\n\nUpon seeing Molly standing there, in his wide-open door, his heart sank down into stomach.\n\n\"I believe,\" Molly said calmly, \"Paul meant your dick is so small you might as well have a pussy, for all the good it would do in satisfying his needs.\"\n\nShe was addressing Grace but had eyes only for Paul. He was expecting anger, or betrayal, or some other negative emotion at finding him alone in his apartment with Grace. The only thing he saw, however, was lust.\n\nIf a woman could fuck with her eyes, Molly would be balls deep in Paul.\n\n\"Did I get that right, sweetheart?\" Molly asked, speaking to Paul, but mocking Grace's use of the pet name.\n\n\"Uh, yeah,\" said Paul. His eloquence around Molly was uncanny.\n\nTo be fair, he was more concerned with what Molly was wearing. Her hair was down and covered by a white-nit beanie, her cheeks and nose red from either the cold outside or the blood rushing around from the unexpected scene in front of her. An oversized hoodie fell over most of her body, down to mid-thigh, where it met a hint of bare skin.\n\nBelow that, as if she had ripped it straight from the pages of a journal written by a horny, undersexed, sixteen-year-old Paul, one he had never written, Molly had on dark, navy blue, thigh high socks, crowned at the top with three white stripes matching her hat.\n\nCall him clich\u00e9, but the comfy-yet-sexy girl next door look could leave him stuck to the bed, dick first, all night long.\n\nA small suitcase sat upright next to where she stood. It had a bumper sticker on the front that read 'Oxford Commas Are For Cowards'.\n\nShe was so god-damned adorable Paul couldn't believe how deep in his strike zone this girl was. Molly was riding his wet-dreams like she lived in his brain.\n\n\"How are you doing this?\" Paul blurted without realizing what he was saying.\n\nMolly hitched, not expecting the question, \"Doing what?\"\n\nGrace took this moment to cut in, \"What are you doing here Molly? Shouldn't you be working?\"\n\n\"Go fuck yourself, whore,\" said Molly.\n\nPaul laughed.\n\n\"I thought I told you this morning to lay off,\" accused Molly.\n\n\"And I said I'll fuck whoever I want,\" said Grace, annoyed at the interruption.\n\n\"Said the whore with the little dick.\"\n\n\"Oh. You get a boy-toy with a sense of humor and all the sudden you have jokes too? Stick to writing books where all the characters die like the sad bitch you are.\"\n\n\"He's mine. Only mine,\" said Molly. She looked over to Paul, a look of shame on her face after she said that.\n\nPaul shrugged, not giving a fuck at being claimed by her.\n\nGrace looked to Paul, then back to Molly, and like she had been doing since arriving, she missed the tone of the conversation, taking Molly's aggression towards 'owning' Paul as her in.\n\n\"Claiming him like an object? That's fucked up, even for you, Molly. You may like hiring living fuck dolls for 'inspiration', but you never pretend to own them like this. Is that why you bit him? Branding him like cattle? He's hurt because of you. What's next? You going to carve your name into his skin?\"\n\nMolly fidgeted with her hands and pouted innocently at Paul.\n\n\"You'd never think such terrible things of your sweet girl, would you Paul?\"\n\nPaul shivered, remembering what she had done to him the last time she used that tone of voice on him.\n\nHe tore his eyes away from Molly towards Grace.\n\n\"See? That's how you seduce someone,\" he said to her.\n\n\"That's what you like?\" asked Grace, put out.\n\n\"What he likes,\" asserted Molly, back to being angry, \"is fucking my huge tits. Yours are small enough I'd be surprised if you could fully wrap them around his big cock. Like trying to fuck a table.\"\n\nAs much as he was enjoying two hot dickgirls fighting over him, Paul backed away from the confrontation for a moment, starting to rifle through his kitchen drawers before finding something and pulling it out.\n\n\"My tits have swallowed plenty of cock,\" said Grace, lifting her bra and letting her tits drop in the open.\n\n\"Awe, look how cute,\" said Molly.\n\n\"Haven't had any complaints.\"\n\n\"Hard to complain when you're too busy shoving your cock down their throat. Whether they want it there or not. You always were the rapey type.\"\n\n\"They beg me for it. And as soon as Paul gets a taste, he'll be begging for it too.\"\n\n\"Those tiny femboys you're so fond of must be something special to last in your bed, all ten seconds of it you tiny-cocked cunt.\"\n\n\"Cow.\"\n\n\"Sex offender.\"\n\nThe two women's fists were balled as if they were ready to come to blows.\n\n\"Hey!\" yelled Paul, reasserting himself. \"As sexy as this girl fight is, and as curious as I am to see if you'll both end up naked and comparing dick size, which would be awesome by the way, maybe this will settle things...\" Paul jutted out both of his arms, each inner forearm sporting the word 'MOLLY'S' in all caps.\n\nHis right arm looked more like 'MULPY'5', but the intent was the same. Paul had never been good at writing with his off hand.\n\nHe looked at Grace, \"It's not carved, but I can get it tattooed on my dick if you need something more official, not that you'll ever see it.\"\n\nBoth Molly and Grace were standing there with their mouths hanging open.\n\nGrace was the first to snap out of it, hiccupping out a snort before she started laughing outright. She hadn't bothered covering herself yet and her tits bounced beautifully. Paul was having a hard time not staring. He had no interest in Grace when he could have Molly, but her tits were amazing. After all, he was only a man.\n\n\"Oh my god, he's so damn cute,\" said Grace through her giggle fit, \"I kind of hate you right now for not sharing,\" she said to Molly.\n\n\"I think I'm falling in love with him,\" blurted Molly.\n\nThe room fell into silence, Molly closed the distance between her and Paul and grabbed his covered arms, inspecting them. She rubbed her thumb over her name.\n\n\"Jesus Paul, did you use permanent marker?\"\n\nShe took the pen that he was still holding in his hand and looked at it.\n\n\"You did. You used permanent marker. It's going to take forever for me to wash this off.\"\n\n\"Falling in love with him?\" Grace asked, shocked.\n\n\"Yes.\"\n\n\"It's only been a day.\"\n\nMolly licked her thumb and tried rubbing off some of the marker. \"So?\"\n\n\"Are... are you sure he's not just a good lay? I've gotten love and good ass confused a couple times.\"\n\nMolly took her attention away from Paul to acknowledge Grace, \"It can't be both?\"\n\n\"Well shit, if this is about more than sex I think I might feel bad now.\"\n\n\"You didn't before?\" asked Paul after he'd recovered from Molly's sudden admission.\n\n\"No. I thought she was being selfish, hogging a good piece of ass and keeping him to herself.\"\n\n\"Again, can't it be both?\" asked Molly again.\n\n\"That's the dream, I suppose,\" Grace said in a sigh. Then she perked up. \"Can I interest you in a threesome?\"\n\n\"Not this time,\" said Molly.\n\n\"This time?!\" interjected Paul. \"Wait, let's talk about this.\"\n\nMolly pinched his arm. Hard.\n\n\"Ow, fuck. I was joking.\"\n\nWith Molly's attention back on Paul's arms, she led him to the kitchen area, such as it was, put his arms over the sink and went about using soap and water to try and scrub her name off his skin.\n\nShe looked up at Paul, \"Stop staring at her tits.\"\n\n\"But they're right there.\"\n\nMolly pinched him again.\n\n\"Ow. Stop doing that. Maybe if you took your shirt off, I'd stare at yours instead. Don't blame me because I'm taking a few glances at the only pair of uncovered tits in the room.\"\n\nMolly rolled her eyes, but for a second, she almost did as he suggested, if only to have his eyes only on her again.\n\n\"Molly,\" said Grace.\n\n\"What?\" she replied, sounding agitated.\n\n\"Is this for real?\"\n\nMolly had calmed herself by now. She knew this was over. Grace had no chance with Paul. A fact that had been evident since she had arrived at his door and saw the panicked look on his face when he saw her. Arguing with Grace was more out of anger at her in general, rather than at her being here alone with Paul.\n\n\"You know me well enough to know I'd never say something like that just to win a fight.\"\n\n\"Yeah, that was my thought. I never had a shot here, did I?\"\n\n\"No,\" said Paul, beating Molly to it.\n\nHe leaned in and nuzzled her neck, whispering words only she could hear. She kept scrubbing at Paul's arms, not looking at him. He must have said something Molly particularly liked because she blushed. She never blushed, which said much about the vulnerable state she was in.\n\nMolly laid her head on Paul, continuing to scrub at his arms. The moment had gone from angry and volatile to tender and loving in an instant.\n\nGrace nodded to herself. She was an extra now, a lump in a room occupied by only two people. Neither of them noticed as she gave them both an adoring smile, and, true to her name, gathered her things and left gracefully. Closing the door behind her.\n\nShe was sure there would be more to come between her and Molly, she did try to snake her boy after she had asked her to back off, but that was a problem for another day.\n\nShe was still crazy horny, which was unfortunate. Maybe Amy was up for a spin, her love of girlcock wasn't as singularly focused as Paul's.\n\nBack in the apartment, Molly turned off the water and huffed.\n\n\"It's not coming off,\" she mumbled, mostly to herself even though Paul was right next to her. She grabbed a towel and dried them both off. \"You're wearing long sleeves to the office until this crap comes off. If people start calling me Mulpy, you're fired.\"\n\nShe kept avoiding looking at Paul for too long, choosing to ramble and keep the subject off her impromptu 'I think I'm falling for you' declaration.\n\n\"You're going to have to look at me eventually,\" Paul said.\n\n\"No. I can smell your smugness.\"\n\n\"What is there to be smug about?\"\n\n\"Two women fighting over you, one going topless, the other... maybe in love with you even though they barely know you. Not that I don't blame you. I'd be smug if I were you.\"\n\n\"Oh. That. I hardly noticed,\" Paul lied, smugly. \"Are you and Grace going to be ok?\"\n\nMolly nodded. \"Grace has been my best friend since before I was published. She's the only reason Denton Publishing ever got off the ground. We've been through a lot. This isn't the first fight we've had a fight, and it won't be the last. We'll be back to normal after we yell at each other some more.\"\n\nPaul had a thought that 'normal' between those two wasn't too much more peaceful than what had just occurred in his apartment.\n\nHe took Molly's hand and moved them over to sit next to each other on his bed. Molly immediately went to fish out his cock but was stopped by Paul. Confused, Molly finally looked into Paul's eyes, still nervous, but unable to delay any longer. She was hoping a little foreplay would distract them both for a while longer.\n\nWhat if he didn't feel the same? Grace was right. It hasn't been nearly long enough with Paul for the 'L' word to start being thrown around.\n\n\"My dick hurts,\" said Paul.\n\nNot what Molly was expecting. She was thankful for the brief reprieve, though.\n\n\"I'm not surprised.\" Molly replied, \"I've been using it almost non-stop. Your virility is impressive... for a man.\" She winked at him. \"So, is that your way of saying you don't want to fuck tonight?\"\n\n\"That's my way of saying I don't want to use my dick to fuck tonight.\"\n\nMolly shivered. It would be a lie to say she hadn't been thinking about his warm, tight ass all the way over to his apartment.\n\nShe'd packed up and gotten in her car to come see Paul not sure what type of reception she'd receive. She had a certainty it wouldn't be negative in any regard, but beyond that, she didn't know. Sex would be nice, but not required. She would've been happy just to sleep next to him. She had no desire to sleep alone after knowing what it was like to have Paul there, even once.\n\nWhat was the point of a bed without Paul in it?\n\nPaul reached over and moved Molly's large hoodie up and over her rapidly stiffening member.\n\nNo panties, just bare girlcock.\n\nHe watched in awe as it grew, like there was no limit to it. He was almost jealous. Not at her size, because what was the point of that, but at her constant readiness. He hadn't even touched her and she was ready to fuck.\n\n\"Sex demon,\" Paul muttered, repeating himself.\n\nMolly giggled, then stopped as she saw Paul go uncharacteristically serious.\n\nHe was glaring at her, all hints of sarcasm and humor gone from his face. He reached out and grabbed her massive cock possessively.\n\n\"Mine. Only mine,\" declared Paul, mimicking Molly's claim on him.\n\nMolly nodded quickly in agreement, wilting at his words. She could have cum from his tone alone. No man had ever made her feel like more of who she was while holding her big fat cock the way Paul was doing now. She was a woman with big dick, and Paul was somehow stroking both of those opposed parts of her.\n\nIt made her both want to cuddle into his arms like his sweet girl should; and throw him down on the bed and fuck his tiny boy hole with her monster girlmeat until he screamed for her to stop.\n\nPaul let go of Molly and slid deeper onto the bed, removing his pants in the process.\n\nMolly stood and faced him, admiring his naked body in a new way. It had a unique quality that could only be explained by the exclusivity of it. If this worked out, she would be the only person to ever look at him the way she was now. An owning of him, if only for the moment.\n\nLust and anticipation shot down from her heart to her cock, and it jumped as it hovered out over the bed. Reaching down, she grabbed the hem of her shirt and dragged it up, holding it tight to her body as she lifted, carrying her heavy breasts up along with it.\n\nIn one final move, Molly jerked the sweater off, letting her tits drop. They slapped down against her chest and each other as they moved and tried to settle. They bounced, they jiggled, they swayed. They sung harmonies of the flesh that almost made Paul clap and demand an encore.\n\nMolly was ever the showman.\n\nReaching into the front pocket of her shirt before discarding it, she pulled out a bottle of lubricant.\n\n\"Why do you always seem to have lube nearby?\" asked Paul, bemused.\n\n\"Same reason a normal girl always carries tampons... just in case things happen.\"\n\nShe smirked. Paul glowered, if only to give Molly the satisfaction that he was bothered by the implied promiscuity of the statement.\n\n\"Besides,\" Molly added, \"every room you and I have been in together since we met has included the use of lube to some degree. I hedged my bet your apartment wouldn't be any different.\"\n\n\"That does seem the pattern.\"\n\nMolly started lubricating herself, coating her girlcock from base to tip in a generous amount of the slick substance.\n\nPaul watched, a thrill shooting through him knowing where Molly intended to put her hard, needy prick. He looked up into Molly's eyes in question.\n\n\"Lay flat on your stomach,\" she said in answer.\n\nPaul did, and as soon as he was in place, Molly got onto the bed and crawled until she was positioned over his prone form on all fours. She used one of her hands to line her cockhead up with Paul's entrance and pushed forward sharply, lodging her mushroom tip through Paul's tight pucker with force.\n\n\"Ahh, fuck!\" yelled Paul, losing his breath.\n\nHe hadn't been expecting the abruptness of Molly's thrust. He was so used to her trying to take care of him he half expected some long-drawn-out session of stretching and loosening.\n\n\"I know, sweety,\" said Molly, trying to overcome how good it felt to be back inside Paul's ass, \"I know that hurt. Sorry. From our previous conversation, I thought you might prefer the more direct approach.\"\n\nPaul nodded in agreement. It hurt far more than the first time she fucked him, most likely due to the small plug he'd been using at the time, but this way got him to the good parts far quicker than if he or Molly insisted on 'proper' foreplay.\n\nHe added in his own mind a budding concern that he might actually enjoy the pain and ache that accompanied being opened wide by Molly in such a violent manner. As much as having a small penchant for masochism would never be a fun self-realization to anyone, and assuming he wasn't romanticizing the moment, enjoying the feeling of being ripped in two by giant dicks would be helpful in the long run during a time with Molly.\n\n\"There's more. Much more,\" assured Molly, as if intentionally petting Paul's quiet concern, \"Take a deep breath, Paul.\"\n\nPaul inhaled fully. When he reached the peak of his lungs, Molly pushed, forcing the air back out in a rush. She didn't thrust or jab, start and stop, or wait for him to adjust. She trusted in gravity and the slickness of her coated cock to guide her in one insistent, steady movement until she was fully buried.\n\nPaul gasped, regardless of his preemptive deep breath. The invasion of his body made him sweat and shiver from the pressure he felt. He moaned. His body throbbed, carried away by the internal rearrangements inflicted by Molly's sledgehammer of a cock. He was relieved it didn't hurt like he thought it would, at least not in the same way it had when Molly had first entered him. It wasn't the most comfortable his ass had ever felt, but it was manageable.\n\nAnd if this morning taught him anything, it was that buttholes are adjustable, given time and effort.\n\nHe felt Molly grind a bit, take herself out a few inches before shoving herself completely inside him again.\n\nMolly was holding herself up by her arms and had her knees frogged out to either side of Paul's waist, her cock at rest inside his ass. She fell down to her elbows and pressed her soft tits into his back in a way she knew he would appreciate before she continued stretching him out.",
        "He felt warm. Paul's insides kept clenching and releasing her cock like they were unsure what to do with the invader.\n\nShe started to piston in and out of him slowly, taking long, full strokes, still only moving in ways meant to stretch him out more than any outright fucking. The hard part of initial penetration might be over, but Paul wasn't fully accepting of her size, and if she started going as hard as she wanted to, it was possible to she could hurt him.\n\nIt was why she used the butt plugs in the first place, not that such musing did Paul any good at this point. The sounds he was making beneath her, however, told her the experience was benefitting everyone involved no matter how they had gotten to this point.\n\nShe curled her body up and around him, trying to bring as much of herself in contact with Paul as she could manage. She wanted to feel him.\n\nPaul welcomed her touch and even began participating by lifting his ass slightly, more to let Molly know he was into this and less because he thought Molly needed any help from him.\n\nShe kept up her methodical pacing for a while longer. She could feel the stirrings of her first orgasm somewhere in the background of her mind and body. That part could wait, she would get there eventually, right now she wanted to make this time with Paul last as long as she could.\n\nIt was more than a business relationship now. The days of unenthusiastic fucks with guys who cared little for her and more about what she was providing for them was going to be a thing of the past. All she had to do was not fuck this up and she could have Paul like this, or he could have her, without the nonsense of some stupid book coming between them.\n\nStupid book? That was an odd thought for Molly. Her writing was all she ever had, her first and only love, her obsession.\n\nNot only. Not anymore.\n\nSo, what then? Did she still even want to write this book? Paul had done his part. Molly had been so full of words and ideas since meeting Paul it was a crime towards her career that she wasn't spending more of her time writing as much as she was playing with Paul.\n\nIt was only one day, though, wasn't it? She could wake up tomorrow and spend hours doing nothing but putting words to paper.\n\nShe tried that already. The reason she was here, at Paul's apartment, in the first place was because she was more interested in being with him than she was in progressing any other part of her life.\n\nThis wasn't like her.\n\n\"Fuck Molly, you're going to make me cum,\" said Paul, who was now pushing himself back faster and harder onto the girlcock impaling him.\n\nMolly hadn't even noticed he was doing it she was so lost in her thoughts.\n\nThen his entire body clenched around her. Paul moaned her name, and all but begged Molly for more as he came into the sheets.\n\nHe begged for her cock. No one had ever done that. Hearing him beg for her triggered something in Molly she thought she was too mature, too successful, too in control to ever let happen again.\n\nShe dug her face into the pillow next to Paul's and lost herself, pumping faster and harder.\n\nGirlish moans escaped from Molly's lips, muffled as they were by the bedding. She nailed him into the mattress with her weighty cock through Paul's fuck-hole. She clenched her ass, thrusting her pelvis hard, trying to reach deeper.\n\nSlow and methodical was gone now. Her pace and force had quickened to an animalistic level Molly could no longer slow even if Paul needed her to.\n\nThe pinnacle approached fast and against her will. She wanted this to last longer, but she also wanted to destroy Paul's ass and leave him heaving in a puddle of her seed.\n\nThis is what she was meant for, right? To fuck? To give in to her base desires and breed everyone like a filthy fucking whore? That's what all dickgirls did, why should she be any different?\n\nShe looked down and saw Paul was sliding further up the bed every time Molly thrust into him. His hands were against the wall, but they looked too weak to keep himself from hitting his head against it. He'd stopped thrusting back into her and had almost gone limp. If it wasn't for his groaning he could have been thought to be passed out.\n\nShe knew once she came Paul would need her out of him, if only to recover from what she was doing to him.\n\nShe was hurting him. She had to be. Normal people weren't meant to take cocks as big as hers up their ass, especially not with the force and violence she was using.\n\nStill, she didn't stop. Her mind was screaming at her to relax, to get control, but her body was doing anything but.\n\nHer orgasm started to rock her, making her lose it even more. She was running on instinct now and fucked Paul with pure, undiluted dickgirl aggression, penetrating the man she was falling for with full, violent strokes she knew would be too much of a violation for Paul to withstand on only his second time with her.\n\nShe wasn't ready for Paul to see this part of her yet. Who would love a monster that could lose control and hurt him because she was too weak to slow down, too base to care for his wellbeing?\n\nIn the normal world, with normal people, Molly was barely more than raw lust and sex reaching for a dream of love and comfort she thought she didn't deserve. She was going to lose something precious after this, but there was nothing for it. Strip a person down to their base desires and they will always become a monster.\n\nThere was no stopping it.\n\nThat dirty, instinctive urge to fuck drove her on regardless of feelings. Her breath heaved, her cock thrust, her balls boiled, and when she came, the lights in the room around her shone brighter and clearer than she had ever known they could.\n\nFlood.\n\nFlood was the only word on Molly's mind as she filled Paul's ass. Each new spurt of girlcum caused what she had already unloaded to squirt and drip out of Paul's hole onto the sheets below. Each uncontrollable thrust of the animal between her legs squelched and sprayed the evidence of her weakness into everything she had ever wanted, mocking that she could ever think she deserved something peaceful.\n\nMolly hammered down on the bell of debauchery and sin, ringing out a dirge to the lewd primacy she couldn't help but indulge.\n\nIt took minutes for Molly to stop. The cuming had waned some time ago, but she refused to let go of the orgasm. Refused to accept that this was the end, and that her poor, greedy girlcock would once again be alone and unloved in the cold air of the apartment.\n\nPaul could never love her after this.\n\nShe fell into herself at the shame of what she was doing. It was disgusting. It was everything she told herself she'd never be. A walking, raging hard-on with no self-control.\n\nShe finally slipped from atop Paul and rolled to her side, bringing her cock with her, and releasing Paul from the prison she had forced him into. Her cock was still hard, and she ached for more.\n\nShe closed her eyes and struggled to catch her breath, almost letting her gasps turn to sobs, afraid of what Paul would say or think of her.\n\nHer lamentations were interrupted by a warm body snuggling itself close, cozying its way into her sweaty form. A hand reached between them and grabbed her hard cock and started doing something with it, but Molly wasn't sure what. The body in front of her shuffled, adjusting itself in some way, and like that, she felt warm again.\n\nShe heard a whisper.\n\n\"Please Molly, I need more of you.\"\n\nPaul. He wasn't mad or hurt or screaming condemnations at her for taking advantage of his willingness to have her.\n\nHe sounded... desperate.\n\nHe moved again, and more warmth enveloped Molly's cock.\n\nIt finally hit her what was happening.\n\nPaul had curled himself into her spent body, taken her into his gentle hands and guided her back where she so selfishly wanted to be.\n\nShe thrust, probing to see if it was true. She sunk deeper. Paul moaned and pushed down, forcing even more of her hard cock inside of him.\n\nMolly questioned everything. There was no way this was real.\n\n\"We can stop if you want,\" said Paul quietly, as if ashamed of what he was doing, \"I just... you said you could keep going, you know, longer.\"\n\nMore? Longer?\n\nMolly didn't understand. She was a ravager, a taker, someone willing to forsake another's body for the pleasures of her own... and yet?\n\n\"Please Molly? Just a little longer. You're still so hard.\"\n\nHe sounded almost guilty to Molly, like it was his lusts that were ruining everything.\n\nShe felt Paul wiggle again, but the positioning and her own hesitancy prevented him the leverage he needed to sink any lower onto her.\n\nPaul sighed at his failure, too cock drunk to understand Molly's non-involvement in his efforts as anything other than rejection.\n\nEven the ever-insatiable dickgirl, Molly Denton, his perfect, sweet girl, didn't want him after he had lost his usefulness.\n\nNo good as an author. No good as an editor. No good as a lover.\n\nPathetic.\n\nHere lies the quake, drowning in the stillness of its own insecurity to shake the earth.\n\nWhat a waste.\n\nEverything was quiet for a few more moments, both lovers seemingly lost on their own fears or inadequacy.\n\nIt was Molly who moved first, thrusting her hips and driving her cock deeper into Paul.\n\nHe rippled, the force breaking him from his thoughts.\n\nMolly dug her arms under Paul's and gripped his shoulders, holding him tight while thrusting again and pulling his body low to meet hers.\n\nShe curled her knees up until they met the back of Pauls' and locked her ankles with his, intertwining their legs. She thrust her hips again and buried her girlcock fully in Paul's hole.\n\nPaul brought his free hand back around their bodies and grabbed Molly's ass, his hand gripping into her soft, pillowy cheek. He squeezed hard and did his best to pull her even closer into him.\n\nThe action accomplished little, Molly was again in control here. The gesture of grabbing her ass, however, meant more to Molly than she knew how to comprehend.\n\nPaul needed her as much as she needed him.\n\nShe'd gone so long believing love and sex were separate things. That in order to have one, she needed to control the other. Paul's hand on her ass all but begging her to destroy his body, again, with her giant girlcock told her that here, with him, love and sex knew nothing of a superficial boundary.\n\nThe only regrets she would have when they finally tore themselves away from each other were the few empty minutes she had wasted letting Paul feel like she could ever have enough of him.\n\n\"You feel perfect,\" Molly said reassuringly.\n\nAnd to show him how much she meant it, Molly brought her hips away until more than half of her cock slipped out of Paul and drilled back into him without mercy.\n\nShe did it again and again, bringing them up to an unforgiving rhythm that only intensified when Molly heard Paul moan and grunt for her to fuck him harder.\n\nThe frenzied dickgirl kept Paul locked in place with her arms and legs and fucked with her entire body behind each thrust. She wanted to penetrate so deep into him she could see her cockhead escaping from his mouth on the other end.\n\nSweat poured from her and her muscles ached from the constant strain she had them under. None of it mattered. The thought that she had been 'out of control' before was laughable. In her arms was a release from denial and she used him to vent a lifetime of unfulfillment.\n\nPaul clenched his ass around Molly as he came. His body had gone submissive to Molly's desire save for his hand on her ass, which held on to her as if it were the only tether keeping him grounded.\n\nMolly rammed herself home a final time and unleashed a new wave of her cum into Paul. She locked herself inside of him, not needing the added stimulation of continued thrusts to help her ride out her high.\n\nThe two of them now looked so still, if anyone were to see them from the outside the two of them would look like two normal lovers cuddling in bed after a stressful day.\n\nOn the inside, however, Molly's cock bathed in a pool of her own juices, twitching and convulsing with each additional spurt she unloaded, Paul milking her as best he knew how with his used ass.\n\nMolly refused to let go of Paul this time and kept her once 'evil' appendage lodged deep inside the only man who had ever made her feel this good, this accepted.\n\nPaul had come into her life a whirlwind of inspiration and fun. He was interesting and funny and looked at Molly as if she were a goddess made real. She yearned for his presence near her, so much so she had driven to his shit apartment so she wouldn't have to be away for even one night.\n\nShe had tried to settle herself in at home and write her new book while Paul was gone, knowing he would be back soon enough in the morning. The words had been in her mind pushing to come out onto the page, yet none did.\n\nShe thought it was just the newness of it. That eventually she would get used to having him around and her priorities would reset. It would become less about him and more about the book.\n\nPaul untangled himself from Molly's embrace. She whimpered as her cock slipped fully from his ass in the move.\n\nThe disappointment didn't last long, though. Paul was moving only so he could turn around and bury his face in her sweaty tits. Molly held him close and squeezed her massive mounds around his head.\n\nThe only place she may love having Paul as much as when he's sheathed on her cock is having him buried in her tits in whatever way he pleased.\n\nHe spent some time sucking and licking and teasing her nipples before coming up for air and bringing himself eye level with Molly. He smiled and took all of her into his arms, embracing her tightly.\n\nMolly would have been happy to stay like this, laying together calmly until they both fell asleep, but Paul had other ideas.\n\nHe threw a leg over her ample waist and his hands went to her hard cock and brought the tip back up to his entrance. Molly didn't hesitate this time and immediately thrust herself inside, the rest of her body still snuggled close into his.\n\n\"That's my sweet girl,\" said Paul, sighing as he held Molly in his arms and in his ass, \"my turn to take care of you.\"\n\n*********"
    ],
    "authorname": "Severall",
    "tags": [
        "futanari",
        "futa",
        "futa on male",
        "anal",
        "cfnm",
        "titty-fuck",
        "dickgirl"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/mollys-muse-pt-02"
}