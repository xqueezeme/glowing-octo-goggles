{
    "title": "Lisa Ch. 07b: Jessica",
    "pages": [
        "\"They should be.\" Riley said but Scott fired his rifle into the air. When the three men at the fence looked over, he waved them over. Raising their guns in acknowledgment, all three turned their horses and disappeared momentarily only to come sailing over the fence moments later and then taking off toward Jessica and Ebony who were nearing the dog and horse.\n\n\"What the hell?\"\n\n\"We need their help.\" Scott said, \"Jim and Josh are just crossing the river now, look.\" He pointed over where they crossed. \"I'm going over too, you guys come as fast as you can. And remember, be nice. We don't want to make the neighbors suspicious ... plus Jessica will be really pissed.\"\n\n\"Yeah, yeah.\" Riley said.\n\n\"I'm serious.\" Scott said turning his eyes on Angus, \"And I mean real nice not lightly veiled hostility.\"\n\n\"I got it.\" Angus grumbled. \"I've been fine when we've gone out haven't I?\"\n\nScott nodded and then pointed in the direction of the river crossing, \"Come on then.\" He said over his shoulder before spurring his horse to a break neck speed. \n\n\"Jesus Christ ...\" Riley muttered as he spurred the old horse beneath him to a speed that seemed just the right mix between doable for the horse and one that Riley could actually stay in the saddle.\n\n\"Now I remember why I stopped riding.\" Angus grumbled behind him as he too clung to the saddle while the horse struggled to run.\n\nAs they finally made it into the clearing they saw Scott, Jim, Josh and two of the neighbors riding around and corralling the scattered horses. They drove them into a bunch and continued to circle them. The horses were nervous but it seemed that the closer they bunched the calmer they got. The riders were whistling quietly and murmuring to the horses which seemed to expedite the process. \"Where's Jessica?\" Riley asked as he and Angus stopped their horses near Scott, who had dismounted from his horse and was examining the back end of a horse who moved around in a nervous side to side motion. One of the neighbors, an older man wearing a cowboy hat, leather jacket and cowboy boots, was holding the horse by a rope that had been lassoed over the horses head, and he was patting the horses neck and talking quietly too it.\n\n\"Scott ...\" Angus said when Scott hadn't heard Riley or even noticed their arrival, \"where's Jessica?\"\n\n\"She and Ricky are chasing down the other dogs.\" The neighbor said.\n\n\"Riley, Angus,\" Scott said finally satisfied with his examination and moving to stand next to the man, \"this is Peter. He lives up the road.\"\n\nPeter moved forward and extended his hand to Riley. Riley looked at it for a moment and then lent down from the horse and shook it.\n\n\"Did the dogs do a lot of damage?\" was all he could think to say.\n\nAngus nodded and shook Peter's hand when he was done with Riley.\n\n\"No, thanks to Peter and his son and grandson. They were able to shoot that one before he did more than scratch Rusty here.\" Scott said, nodding his head toward a mound of fur on the ground, and then at the horse standing next to him.\n\n\"That's great.\" Riley said, looking off into the distance, trying to see Jessica. \n\n\"Well, we're real sorry we didn't get them earlier. We almost had them back on our land but somehow or another they got away. The good news is that the body we took to the vet last time tested negative for rabies. Seems they have some degenerative brain disease.\" He added, nodding at the dog's body, \"makes them crazy but not contagious.\"\n\n\"If it's not contagious then how the hell do all these dogs have it?\" Scott asked.\n\n\"Vet figures it's from something they ate ... kinda like mad cow.\"\n\n\"What, like mad rabbit or something?\" Scott asked.\n\n\"I guess. In all my years ... and they've been a few, I've never seen nor heard of anything like it.\"\n\n\"That's disturbing.\" Riley said finally paying enough attention the conversation to realize the implications. \"Dogs don't live as long as people ... mad cow doesn't take affect till adulthood for people. What the hell are they eating that affects them that fast?\"\n\n\"Probably not squirrel.\" The other man, whom Riley and Angus deduced had to be Peter's son, said as he walked his horse up to them. \"Steven ...\" he said extending his hand to Angus.\n\n\"Angus ..\" Angus grumbled and then scanned the tree line again for Jessica.\n\n\"We found a few dead squirrels in our fields.\" He continued after introductions with Riley. \"Took them to the vet ... no sign of the brain deterioration in any of them.\"\n\n\"We haven't noticed any dead animals on our land.\" Scott said but then added, \"We haven't really been looking for any.\"\n\n\"We figure there were only four sick dogs. One, your ... Jessica, shot.\" Peter said, clearly deciding that he wasn't going to probe into the men's relationship with Jessica. \"One Steven shot and the two Jessica and Ricky are after. If they get them, then this should be over.\"\n\n\"Unless some other animals eat whatever they ate.\" Scott added.\n\n\"Hopefully that's all gone too.\" Steven said. \"And given the way Jessica rides ... and shoots ...\" he added looking very impressed, \"the other dogs are as good as dead. Has Jessica ever tried her hand at barrel racing? Ricky does it, competitively. I know of a couple girls teams that could sure use Jessica's speed.\"\n\n\"As far as I know she's never tried it.\" Scott said and then followed Riley and Angus' gaze when they both visibly relaxed. In the distance he could see two riders coming toward them.\n\nJim and Josh, still patrolling the horses kept an eye on the riders too.\n\nJessica and Ricky seemed to be chatting in a relaxed happy way, as if they'd always known one another. And then, as if by some unseen signal, they both spurred their horses into full run and thundered down on the horses and the men. When they pulled up both looked very excited.\n\n\"We got the wounded one.\" Jessica said pointing at the dead dog that Ricky had draped in front of him.\n\n\"But the other one lost us in the underbrush.\" Ricky added in the same breathless voice that Jessica had used.\n\n\"We were so close!\" Jessica said.\n\nRicky was nodding, \"Jessica nearly ran over the thing.\" The awe obvious in his voice and expression, \"But then we got to the Bendal property and that's practically all bush.\"\n\n\"Bendal property ... \" Peter said, \"You made it to the Bendal property?\" \n\n\"That's over ten miles away ...\" Steven added.\n\n\"You're kidding, right?\" Jim asked. He and Josh had come closer, keeping an eye on the horses.\n\n\"Nope.\" Ricky said and looked at Jessica and Ebony with unmistakable worship.\n\n\"Ricky does race barrel racing.\" Jessica said looking around at Scott, Jim, Josh, Riley and Angus. \"Every weekend. Can we go see him?\"\n\n\"Sure, when we have some time.\" Jim said into the silence that had begun to stretch, \"Things are a little crazy lately. Even today.\" He added, pulling his cell phone out to check the time, \"Your friends will be here in two hours Jess. We'd better head home.\"\n\n\"Oh yeah!\" Jessica exclaimed and looked perplexed as to how she ever could have forgotten that.\n\n\"Well, we won't keep you then.\" Peter said, moving toward the body on the ground. \"If it's okay with you, we'll take the bodies to the vet again. You can never be too safe.\"\n\n\"Sure, go ahead, and thanks again for your help.\" Scott said, helping to hoist the dog onto Steven's horse.\n\n\"I guess we'll have to show you Ebony race another time.\" Jessica said, after the three neighbors disappeared from view, and looking at the horses milling around.\n\n\"We pretty much saw it.\" Riley said.\n\n\"And I can see why you'd want her to race.\" Angus said to Scott. \"I think I can handle watching her at the track ... but I never, never, never, want you to jump that river again.\" Angus said turning his attention to Jessica. \"You scared the shit out of me.\"\n\n\"Sorry ...\" Jessica said, \"So I really can race?\" she asked, clapping her hands.\n\n\"You don't sound very sorry Jess.\" Riley said but laughed despite himself. She looked ecstatic and despite the terror he'd felt as she sailed over the water he was reconciling himself to the fact that this was what made Jessica tick. \"But that's okay. I'm realizing that the scarier something is the more you seem to like it. Just please, use some judgment okay?\"\n\nJessica was nodding, \"So I can race?\" she repeated. And squealed when Riley and Angus nodded. Scott looked like his face would split open and Jim and Josh looked pretty pleased too.\n\n\"If we don't get these horses home and get you cleaned up you're going to be late for your shopping and spa trip.\" Jim said, bringing Jessica back to reality quickly.\n\n\"Jessica, Jim, take the lead.\" Scott said, getting onto his horse. \"Josh and I will flank the horses, and Angus and Riley can take the rear.\"\n\n\"Can you keep up?\" Josh asked, laughed, and then turned his horse and spurred him out of Angus' reach when Angus made to go after him.\n\nAn hour later Angus eased himself away from the table where he'd put his newly cleaned saddle.\n\nThey'd returned quickly enough, Scott had gone about taking care of the injured horse. Jim and Josh got the other horses into the corral and calmed. And then began cleaning out the stalls. Riley'd gone to take care of his dogs and Jessica had been cleaning saddles with Angus. \n\nBut now she was rubbing Ebony down. And remembering the thrill of thundering down the field on Ebony's back. The thrill she felt as she and Ricky sped after that poor, starved, crazed, dog. Her heart had pounded with excitement. She loved that feeling. And it suddenly occurred to her that usually when she felt that kind of a thrill, the men responded with sex. Rough sex, wild sex, make her scream kind of sex. But so far they hadn't which both surprised and disappointed her. But, it was friend time so maybe it would happen later. Now she just had to shake her overwhelming horniness before going out with some girls she didn't know. Actually, just the thought of that was enough to do it. She was excited about hanging out with girls only. Make-up, clothes shopping, those were all clich\u00e9 girl things to do and she was finally going to do them!\n\nScott came up behind her and slid his arms around her, not noticing Angus in the corner or the fact that Jim and Josh followed him in, and that Riley trailed in a moment later. Jessica pressed her back against Scott, her body melting to conform and fit perfectly against him. He loved it. \n\n\"I wish you'd rub me down like that ...\" Scott said into her hair, \"Hell, I wish you'd ride me like you ride him too.\"\n\n\"That can be arranged.\" She said laying her arms over top of his around her waist, and squeezing. \"Do you want the saddle, bridle, and boots? The whole thing?\"\n\n\"Sounds tempting.\" Scott said, \"But I think we should start slow ... first you ride horseback naked ... feel that hard rhythm pumping between your legs.\" He slid his had between her legs and pressed rhythmically, \" ... and then we fuck while riding the horse ... and then maybe we'll pretend I'm the stag and you're the mare ... get some good rear entry action going.\" He pressed his thigh against Jessica's butt \" ... what d'you think?\"\n\nJessica shivered with pleasure. \n\n\"I think that sounds great.\" She said pressing her pelvis against his hand and when his other hand moved to her breast, she moved her hand over his and pushed it harder against her.\n\n\"So do I.\" Angus growled, moving from the corner.\n\n\"Amen.\" Josh added. Scott turned with Jessica pressed against him. Jessica looked at the men and felt every part of her quiver with anticipation.\n\n\"Bareback ... naked ... \" Jim repeated, stepping forward, looking like the idea more than appealed to him.\n\n\"I have a feeling friend time may be heading for an intermission.\" Scott said, sliding his hand down her shirt, into her bra. \"Are you okay with that?\"\n\nJessica nodded with enthusiasm.\n\n\"Well then ... I guess we'll have to proceed with operation bare back .\" Jim said, moving past Josh and Riley to place his hand on her pelvis and let it slide south ... so his fingers slipped between the V of her thighs. Jessica sighed and then moaned. The pressure of Jim's fingers helped elicit the moan but the toothy grin Jim was wearing made Jessica's heart pound. Jessica had seen similar expressions on the other men ... right before they devoured all of her sensitive parts. But Jim had always been less prone to such animalism. But it looked like he'd gotten over his reserved nature and that just made Jessica wet. Jessica's eyes locked on Jim's eyes, as they locked on her lips, while she licked them in anticipation. And then from the corner of her eye she saw Josh, Angus and Riley undressing before moving closer. \n\n\"Oh my God.\" Jessica murmured as anticipation threatened to make Jessica explode out of her skin. She leaned back against Scott, letting him support her weight as she started to part her legs, her hand sliding against him, looking for his manhood.\n\n\"Jessica ...\" Scott growled catching her hand, \"do you really want to go there? Just watching you ride Ebony like that ... like he was a part of you ...\" Scott revisited the image of Jessica thundering down the field, sailing over the river... again. He felt the urge to control her course through him. \"Put your hands behind your head. Now!\" He barked.\n\nJessica raised her hands and laced her fingers behind her head. \"Maybe a lesson is in order.\" Riley murmured, remember how he'd felt watching her jump the river too. He couldn't stop her then, but he could take the terror he'd felt then and channel it into the sex they were about to have. And since she'd conveniently broken a slave rule ... the opportunity was there without him having to explain that he was really trying to control her. Somehow he didn't think she'd feel too good about that at this point. \n\nRiley took one of her wrists, and pulled her arm out straight and snaked her arm out of her sleeve.\n\nAngus chuckled a slow, guttural laugh and the expression on his face made Jessica's knees weak. \"Jess, somehow or another you always end up needing a lesson.\" He was ready to teach her a lesson alright, and so were the others. Jessica shivered in anticipation. Jessica managed a nod between gasps.\n\n\"Jesus Christ!\" Angus growled when Jessica's expression told him and the other men that she wanted that lesson, wanted it bad. \n\n\"Get her pants off!\" Josh growled, receiving her message loud and clear.\n\nScott pulled her back against him and lifted her while Josh and Jim struggled to pull her pants off.\n\n\"Skirts!\" Riley said as they maneuvered the pants over her legs. \"You should only wear skirts and no underwear and then we can take you whenever and wherever we want! No muss, no fuss.\" \n\nOnce Jessica was out of her pants, Riley and Josh each took one of her legs and pulled them back at the knees, opening her. Jim slid his hand between her legs and rubbed. Jessica arched with the pleasure. Angus slid one hand between her bum cheeks and pressed his thumb against her anus, Jessica gasped with pleasure. \n\n\"Get her up on the fence.\" Scott ordered. The men moved as a group, and Jessica found herself standing on the first rung of the stable gate. \"Hang on ...\" Scott paused reaching for the riding blanket and hung it over the gate, \"lift her onto it.\" \n\nJessica was lifted and draped over the gate. \n\nScott slid into her anus and she gasped. \n\nAngus knelt beneath her and thrust his fingers into her pussy, thrusting hard.\n\nJim and Josh stood on either side of her, holding her knees. Each guided her hands to their respective cocks and she rubbed. Riley came around to her head, and thrust his cock into her mouth.\n\nJessica tried to concentrate on not biting Riley, but it was nearly impossible and waves of pleasure rolled over her. Riley gasped as she nipped him, but he didn't remove himself, and second later he erupted in her mouth and it took all Jessica's remaining strength to swallow without choking.\n\n\"Angus ...\" Scott said, pulling out of her anus, and switching places with Angus. Jessica twitched as Scott continued Angus' ministrations to her pussy, only this time concentrating most of his efforts on rubbing her clitoris. Her convulsions brought Angus, Jim and Josh to climax. Jim and Josh spraying Jessica with their sperm. \n\n\"Holy fuck that was great!\" Angus commented when everyone was spent. They stood panting, looking at Jessica, who lay on the gate, panting.\n\n\"Let's get her off of there.\" Jim said suddenly realizing that it was probably not all that comfortable.\n\nRiley, Josh and Jim lifted her front and handed her back to Angus who still had his softened cock between her butt cheeks. Angus pulled her against him, and then sank to the floor. \n\nThe other men came to join Angus and Jessica, and they ended up in a pile, Jessica in the middle.\n\n\"Fuck I love you.\" Scott muttered, pulling her against his chest. \"It's funny.\" He added with a chuckle ... bringing his lips to the top of her head. \"I've never needed to touch a woman as much as I need to touch you. Of all the women I've been with ... I never wanted, needed, someone so much.\"\n\nJessica stiffened in his arms and turned to look at him through narrowed eyes. Jessica was overcome by an emotion that she didn't recognize or know how to deal with. It felt like the twisting of her stomach she'd felt with Nina at the track and Janice at the auction but much stronger and growing stronger. Images started running through her head. That Allison woman at the pool hall ... the way women looked at all the men. The lipstick on Scott's cheek the other night. And Scott's words ... how it was common in the clan for husbands to have affairs. Had he been trying to tell her something? Tell her that he still intended to be with other women even though she and he were ... committed? She could feel her cheeks turning red and she felt a sort of fury within her. She looked at the other men. They hadn't seemed interested in any of the attention other women paid them. But neither had Scott when she was there with him. Were they all doing it? Were they all with other women when they weren't with her? Suddenly, all Jessica wanted to do was be alone. \n\n\"What?\" Scott asked. \"Are you okay?\" he added when she brought her eyes back to him.\n\n\"How many women have you been with?\" she demanded. \"Oh, lots.\" Scott said in an offhanded way. \"But none of them compare to you\"\n\nJessica felt a strange pain inside and it seemed to grow and then mutate into something bigger. Jessica pushed away from Scott. \n\nHe and the other men were taken by surprise and too slow to grab her as she sprang to her feet, scrambled out of the mess of limbs that surrounded her, and moved to pick up her pants and shirt where they had been discarded. After pulling her shirt on, she tried to walk and pull her pants on at the same time. She hadn't gotten far when Scott caught up to her.\n\n\"Where are you going?\" Scott asked moving in front of her and watching her struggle with her pants. The other men surrounding her. Scott reached out and began helping her, but Jessica pulled away from him.\n\n\"I'm fine!\" she said in a controlled voice. \n\n\"No you're not.\" Scott said when she almost lost her balance and he caught her by the arm. The other men all laying supporting hands on any exposed portion of Jessica they could find. \"Just let me help you ...\"\n\n\"No, I'm fine!\" she insisted, wrenching her arm from his grasp, contorting her body so none of the other men could continue to touch her, and trying to organize her underwear so she could successfully pull it and her pants up. \n\n\"Jessica, what's going on?\" Jim asked dumbfounded. Jessica gave up on her underwear and stumbled for the barn door pulling her shirt down to cover her private parts.\n\n\"Jessica!\" Angus growled passing her in two long strides and grabbing her arm. \"What's going on? Why are you trying to get away from us?\"\n\nJessica tried to get around him but he held her firmly in place. Finally she sighed and glared at him and the other men who had surrounded her again. Then settled her eyes on Scott.",
        "\"I'm glad you have lots of other women to sleep with!\" Jessica said with anger, and as the words left her mouth sadness began to intermingle with it. She lowered her face and tried to move around Angus again, \"I hope you enjoy them ... now let me go. Please!\" She was so angry, and so sad, she felt like crying. And that made her feel embarrassed. Obviously that wasn't the reaction the men would expect. It seemed like they expected her to have the same attitude the clan women did and just ignore the indiscretions ... or ... a more horrifying thought occurred to her, they expected her to accept them? It was true that being monogamous had not come up in the oath. The men made it clear that they expected her to not see anyone else. But she already had five men. Was there a limit to the number of partners a woman was to have in the clan rules somewhere? Or worse yet, maybe the extra marital affairs were only okay for the men and not the women. Jessica fought hard to keep the tears from coming. She didn't care what the clan norms were. She did not share her spouse ... spouses, with anyone. And even though that obviously wasn't fair to the men since she had multiple spouses and they only had one ... that was too bad. That was their decision. God she had to get out of the barn and be alone! Jessica tried to move around Angus again.\n\nThe men gaped at her, completely at a loss to understand what was going on. But then Scott's confusion change to horror as he realized what she had assumed. But then he realized why she was acting the way she was so when he lifted her chin he couldn't help but smile.\n\n\"Jessica, are you jealous?\" He asked, euphoric at the thought. So she did care enough about him to be jealous! \n\nBut then anger washed over Jessica's face again and she wrenched her chin from his hand. \n\nAnger, ten times worse than what she'd felt earlier coursed through her. Her suspicions were true ... he was still seeing other women and for some reason that knowledge made her feel like she was being shredded from the inside out. She pushed Scott as hard as she could and tried to move past him.\n\n\"I didn't mean it like that!\" Scott said trying to contain her flailing arms as she tried over and over again to move away from him. Hot tears stung her eyes.\n\n\"Let me go!\" she repeated as she continued the struggle, tears falling now.\n\n\"Listen to me Jess,\" Scott said, \"Jess, listen ...\" but the more he spoke the more she cried and tried to push him away. \n\nThe other men stood watching Scott and Jessica, trying to determine exactly what was happening.\n\nFinally she gave up on pushing and took a step back and tried to lunge around him. \n\n\"Fuck it!\" he said as he caught her around the waist and pulled her to him. \"I guess I have to find a better way to get your attention.\" He grasped her head in his hands and brought his mouth down on hers, hard. She tried to pull away but he held her so tight her efforts were futile. He pushed her down on the ground, thrust his way between her legs and entered her with a hard thrust. Still kissing her hard, he held her shoulders in place and held the thrust as far into her as he could. Against his lips, she gasped. He brushed his lips against hers as he pulled back with his pelvis and slowly but firmly thrust as far into her as he could again. \"Do ... \" he said, pulling back and thrusting again, \"I ...\" he used his right arm to move Jessica's right leg up onto his shoulder, and then he did the same with her left. He was pressed right up against her, his face touching hers. He could feel himself pushing against her cervix. \"have ...\" he thrust again and Jessica gasped again. The sensation of his cock sliding against her cervix brought a mixture of pleasure and discomfort. \"your ...\" thrust again, \"attention ... now?\" \n\nJessica nodded. \n\n\"Good. Then listen to me. You are mine Jessica, just like I am yours. Nothing will ever change that.\"\n\n\"What about the other women? I ... I know it's not fair ...\" she said, searching his eyes but then embarrassed by her selfishness she dropped her gaze to his lips. \"I mean you share me with the other men ... but ...\" her voice trailed off.\n\n\"Jesus Jess,\" Scott whispered. He couldn't believe how good it felt to know that she wanted him to herself. \"I could never be with other women when I'm with you. There's only you Jess. You are all I want, all I've ever wanted. And I haven't been with a single other woman since we've ... been together.\"\n\nJessica exhaled and brought her forehead to his chest. \n\n\"Really?\" she asked quietly.\n\n\"Yes really. And a long time ago, when I was with them ... before us ... it was nothing like this. There was never anyone who made me want to do the things I do with you. There was no kink and no emotion. I love you Jessica.\"\n\n\"I love you too.\" Jessica murmured. \n\n\"Someone want to tell us what the hell is going on?\" Angus demanded. Jessica looked up and saw the other men standing around her and Scott, looking down at them.\n\n\"Jessica was under the mistaken impression that I ... that we were still seeing other people.\"\n\n\"Really?\" Josh asked.\n\n\"How could you think that?\" Jim demanded.\n\nJessica's eyes slipped back down to Scott's chest. She was embarrassed. \"For some reason, when Scott made that comment about all the other women he slept with it just kind of occurred to me that maybe he meant it was a current thing. I mean, everywhere we go women notice you guys. Notice you a lot. And then Scott's comment the other day about affairs and the lipstick on his cheek ... I just suddenly got really upset. I mean, I don't really care about what happened in the past. The past is the past, right? But now ... when we're married ... And I know it's not really fair. I'm not sleeping with only one of you. I mean, you have to share so why shouldn't I, right? But I just can't.\" Jessica looked up when silence followed her explanation and she wasn't sure what she expected to see, but it certainly wasn't the huge smiles plastered on the men's faces.\n\n\"You're ... happy?\" Jessica asked in surprise.\n\n\"Happy that you want us to yourself.\" Riley said, \"But not so happy that you'd really think we'd cheat on you.\"\n\n\"Well, I guess I thought that maybe you didn't see it as cheating.\"\n\n\"Jessica.\" Angus growled, dropping to his knees next to her and Scott, \"Do you not remember what we said about you going with other men? Did that give you the impression that we'd condone cheating?\"\n\n\"Well ... I guess I thought that maybe you thought that different rules applied to you than applied to me.\"\n\n\"You're wrong.\" Angus said.\n\n\"Really wrong.\" Jim added.\n\n\"Angus, get behind Jess, let her lean up against you.\" Scott said. Angus lifted Jessica against him and she was pressed between her and Scott, her legs still sticking up over his shoulders.\n\n\"And to prove it, I'm going to continue where I left off.\" Scott said. \"I never want you to forget me inside of you ... I want you to feel it forever. When you look at me ... I want you to feel me pressing all the way into you ...\" his voice was husky. \n\nHe pulled back and firmly pushed into her again pushing as hard as he could against her cervix. When she gasped and looked at him with that look between ecstasy and a silent plea for sexual release it took all of his self-control to refrain from assaulting her with a volley of thrusts. \"Do you feel it\" he growled as he pulled back and thrust again.\n\n\"Yes.\" Jessica panted.\n\n\"Again?\" he demanded as he thrust again.\n\n\"Y ...es.\" She moaned and when her pussy began to pulsate he did lose it and he thrust into her over and over again until he exploded, and then collapsed on top of her.\n\n\"Sorry ...\" he said when he realized that Jessica's legs were squished between their chests. \"Who's next?\" he asked holding her legs up with his hands and pulling out of her.\n\n\"I am.\" Riley said, and took his spot, sliding into her with as much force as he could muster and from the expression on her face he wondered if maybe he'd pushed too hard. But then her pussy tighten and Jessica moaned.\n\n\"Jessica ..\" he gasped. \"Look at me.\" He said when she closed her eyes and arched her back. \"Our parents may have been awful role models.\" He said when she was staring into his eyes. \"But I'd never expect you to settle for less from our marriage than what I expect. I've had very few relationships in my life Jess. And there's only one that has ever mattered, or will ever matter, and that's my marriage to you.\" And Riley thrust again, \"Do you understand?\"\n\n\"Yes ...\" Jessica said, and this time when Riley thrust he came, the pressure of his cock on her cervix sent Jessica into waves of orgasm as well.\n\n\"My turn.\" Josh said, tapping Riley on the shoulder when it looked like he was going to collapse on Jessica.\n\nRiley kissed Jessica on the lips and pulled out ... Angus holding her legs up from behind her.\n\n\"Oh God Jess.\" Josh said thrusting into her. He followed with a volley of thrusts that sent both of them into simultaneous orgasm. \"I ...\" Josh began, panting over Jessica as the pleasure continued to roll over them ... Jessica's pussy pulsating with surprising strength on his shaft. \"I was nothing but a rapist in the past, as you know. The only real relationship I've ever had or ever will have is with you. You know that, right?\"\n\n\"Yes ... yes ...\" Jessica moaned, closing her eyes.\n\n\"Josh ...\" Jim said. Josh slid out of her and someone new slid in. Jessica opened her eyes to find herself face to face with Jim. He looked sad, hurt and Jessica felt guilt roll over her.\n\n\"I didn't really mean it about you.\" Jessica said feeling doubly guilty now. As much as she tried to treat Jim and the others equally ... and as easy as it was becoming to do so, she honestly couldn't believe that Jim would ever cheat on her. Ever.\n\nJim smiled. \"That makes me feel better. But just to be perfectly clear, and so you don't ever forget ... you ...\" Jim said, thrusting into her hard and almost holding off on the next thrust when Jessica looked at him in complete surprise, but he couldn't. \"Mean ...\" he thrust again, \"everything ... to ... me. Don't ... ever ... forget ... it!\" Jessica gasped with each thrust and when Jim's expression transformed into the horny, sexually charged one he'd had earlier she came. Jessica's obvious pleasure brought Jim to his own explosion.\n\n\"I'll take her.\" Scott said to Angus. Jessica head lolled as Scott and Angus switched places, Jim pulled out and Angus slid in.\n\nJessica forced her eyes open when Angus didn't move after pressing as deep into her as he could. She found Angus watching her.\n\n\"I'm sorry ...\" Jessica began thinking that maybe he thought she trusted him less than Jim. But Angus put a finger over her lips.\n\n\"I only had one other real relationship.\" Angus said, \"And Beth betrayed me ... she killed my kid. She had an abortion that she never expected me to know about and then she tried to tell me that it hadn't been mine ... when I'd found out of course. So she was either the killer of my child, or a two timing whore and killer of some other bastards' kid.\" Angus said in an unusually calm voice.\n\n\"Angus!\" Jessica gasped, bringing her hands to his face, caressing it. Her heart broke for him.\n\n\"It's okay Jess.\" He said turning his face so he could kiss her palm. \"That's all ancient history. The only reason that I mention it is to say that I know what it feels like to be betrayed. And I'd never, ever, do that to you. I may not be able to promise you total equality ... the way that you want it, but in this you are completely equal. I expect from myself the same that I expect from you. Complete and utter devotion. Do you understand?\"\n\nJessica nodded and kissed him.\n\n\"And I'm sorry Jess, but I'm real horny and kinda want to make the same impression on you that the other guys did ... can you handle some more thrusting?\" Jessica nodded, and Angus didn't waste a second before thrusting hard and deep.\n\n\"Did that hurt?\" Angus asked when Jessica made a noise.\n\n\"Only a little.\" \n\n\"I can't stop Jess.\" Angus said delivering another hard and deep thrust. Jessica shook her head.\n\n\"Then don't.\"\n\nSo Angus thrust again, and again, and within minutes Jessica felt an orgasm growing.\n\n\"Come on baby ...\" Angus urged, \"come on, cum now ... now ... before I do!\" and he thrust harder and faster and a second after Jessica exploded, Angus did. Angus' grinding slowed, and he collapsed on top of Jessica, which meant on top of Scott too. He fought to keep his eyes open.\n\n\"Christ. Half an hour before you're going out Jess.\" Josh said.\n\n\"What?\" Jessica squeaked.\n\n\"Shit.\" Scott mumbled into her ear. \"You go get cleaned up.\" He said, \"We'll finish up in here.\n\nAngus kissed Jessica and then rolled off of her.\n\nRiley held out his hand. Jessica took it and he pulled her to her feet. \n\n\"Here.\" Jim held her pants out in front of her.\n\n\"Can I help you put these on now?\" Scott asked taking her elbow to stabilize her. \n\nJessica laughed. \"Thanks.\" She said sliding her leg into the pant hole that he held out for her.\n\nTogether with Jim, Scott pulled her pants up, buckled them and then his own as Jessica headed for the house. \n\nJessica had showered and dressed as quickly as she could. She was impressed to find that it had only taken her twenty minutes. She emerged into the living room with time to spare.\n\n\"What's wrong?\" she asked when she saw the men sitting around the living room looking unhappy. Her heart dropped, maybe her day out was cancelled.\n\n\"Nothing.\" Riley said, getting to his feet. \"It's just a possible change in plans. We figure we'll let you decide what you want to do.\"\n\n\"Sean called.\" Jim said, \"He, Corey and some of the other guys thought they'd come with the girls and hang out here with us while you go out. And then maybe stay for a bit when you get back and jam.\"\n\n\"Really?\" Jessica asked. Surprised, excited, but wondering why the men didn't look very excited.\n\n\"Yeah. But that'd mean we can't do our romantic dinner tonight.\" Scott said.\n\n\"Oh.\" Jessica said. \"And, we couldn't do it tomorrow night. We have plans already, remember?\" Jim said. \"I mean, I've asked the guys to come motor biking with us, but later, friend time ...\"\n\n\"We can do it on my night.\" Riley said, \"I don't mind, but that puts it off for a couple of nights.\"\n\n\"So, what do you want to do?\" Josh asked.\n\n\"Would you be too upset if I said I'd like to jam tonight and do the dinner on Riley's night?\"\n\n\"No ... whatever you want to do is what we want to do.\" Angus said but Jessica was pretty sure she detected some disappointment in his tone. \n\nJessica went to Angus and slid into his arms. \"Are you sure?\"\n\n\"I won't say that I'm not a little bit disappointed.\" Angus said. \"I was looking forward to tonight, but hey, what's a couple more nights?\"\n\n\"Thanks.\" Jessica said, kissing him.\n\n\"So Jess, I told the guys that I also wanted to ask you what you've always wanted to try, but haven't? I want to try and fit it in tomorrow morning too, with the guys.\" Jim said.\n\n\"What I've wanted to try?\" \n\n\"Yeah, you know. Like riding horses, motor bikes, racing cars, that kind of thing.\"\n\n\"Oh. Okay. Parachuting or sky diving.\" Jessica said. \"I've always wanted to try that.\"\n\n\"Fucking figures.\" Angus said.\n\n\"Okay ...\" Jim said gulping. \"I honestly didn't see that coming. But, okay. I'll set it up.\"\n\n\"Really!\" Jessica asked, running over to Jim and hugging him. \"I can't wait!\"\n\n\"Neither can we ...\" Josh said and looked a little green.\n\n\"Are you okay?\"\n\n\"Just have a little thing about heights. But don't worry, I'll get over it.\" \"Okay.\" Riley said flipping his phone shut. \"They're on their way. Should be here in about twenty minutes.\"\n\nJessica couldn't sit still for the next twenty minutes. Finally cars pulled into the driveway and Jessica ran to the front door.\n\n\"Hey Jessica,\" Corey said, slamming his car door shut and pointing at the four women standing near another car off to his right. \"This is my sister Sara, that's Sean's sister Leah, and her cousins Amanda and Justine.\"\n\n\"Hi,\" Jessica said to the women and moved toward them. Jessica was relieved to see that they looked friendly. Very friendly. They were eyeing the men ... particularly Riley and Angus in a weary way, but when they looked at her, they smiled.\n\nJessica was also relieved to see that they were about her age. One, Leah, looked a little older, but not by much.\n\n\"So ladies.\" Angus said from behind Jessica, who jumped because she hadn't realized he'd followed so closely behind her. \"Rather than take two cars, maybe Jessica wouldn't mind if you all went in her SUV. It's brand new, and big enough.\"\n\n\"Um, it's okay with me.\" Jessica said when the girls didn't respond but gaped at Angus. \n\n\"Us too.\" Leah finally said speaking for the girls.\n\n\"Good. So you'll be back around ... five, six?\" Riley asked, sauntering up next to Angus. \n\n\"Yeah. Probably.\" Leah agreed.\n\n\"Okay. Well, have fun.\" Riley said. And Angus nodded.\n\n\"See you later, Jess, have fun.\" Jim called from where he and the other men were helping Sean and Corey unload instruments. They all waved and returned to what they were doing.\n\nThe girls climbed into the SUV, and Jessica backed out onto the dirt road.\n\nAs soon as they were out of sight of the house, Leah looked over at Jessica.\n\n\"I don't know how you did it honey.\" She said, shaking her head, \"But you tamed those two assholes.\"\n\n\"I can't believe it!\" Sara said from the back seat, throwing her arm over the back of the front seat and leaning against it to look at Jessica, \"Corey and Sean swore they'd changed but I didn't believe it for a second. And if I hadn't witnessed what I just did with my own two eyes and ears ... I still wouldn't believe it. How did you get past all their anger and meanness?\"\n\n\"I, uh ...\" Jessica stuttered when all the girls were looking at her.\n\n\"I swore I'd never go near those two again ... especially Angus.\" Amanda said. \"I almost didn't come today. But. But ... they were actually civil.\"\n\n\"I don't know ...\" Jessica said when they looked at her again.\n\n\"I heard that you married them.\" Justine said, \"All of them.\"\n\nJessica nodded and held up her ring finger.\n\n\"Maybe that was it.\" Leah said.\n\nJessica shrugged.\n\n\"What's it like, being married to them? Scott, Jim and Josh, well they're okay I guess ... but Riley and Angus ...\" Justine shivered, \"Are they mean? Do they make you do things you don't want to do?\"\n\n\"Ah, no.\" Jessica said. Surprised at first by how much fear they had for Riley and Angus, but then reflecting on how they'd used to be ... she could understand it. And in a way she felt relief. Relief because their meanness had not been reserved for only her. Others had felt it too.\n\n\"Well, you're braver than I ever could be.\" Amanda said. \"If I'd had to marry them, I would be sitting in a corner crying.\"\n\n\"Amanda ...\" Leah warned noticing how uncomfortable Jessica was beginning to feel. \"None of that matters. They're obviously very happy with their marriage ... they've definitely become ... nicer. Let's leave it at that and focus on the fun we're going to have today instead.\"\n\n\"Good idea.\" Sara said. \"Whatever you did to make them more human, I'm thankful. And welcome to the family!\"\n\nJessica smiled, and from that point forward, as Leah had suggested, all they focused on for the rest of the afternoon was having fun. \n\nFour hours later, when they pulled into the driveway Jessica was so happy she thought she'd burst. It had been the best afternoon ever. They'd shopped for clothes, and makeup, and accessories, and shoes ... and they'd barely fit it all into the back of the SUV. Then they'd gone to the spa where they'd had everything waxed, massaged, cleaned, and relaxed. They'd sat in the hot tub for so long Jessica had barely been able to walk afterward. They'd talked about girl stuff. About boys in the clan that the girls liked, boys they wanted to kiss. And then they asked Jessica about kissing. Leah had rolled her eyes, but apparently she didn't have much experience in that department either so she listened intently when Jessica described the different kinds of kisses that existed ... and how they made butterflies swarm your stomach. Jessica had asked their ages and found out that her earlier guesses about their ages had been pretty accurate. Sara was twenty-one, like Jessica, Amanda and Justine were twenty-two and Leah had just turned twenty-three. ",
        "As Jessica gathered her bags from the back of the SUV, and the other girls transferred theirs to their respective cars Jessica smiled so much she thought her face would break. She felt like she had known these girls her whole life ... almost like they were her sisters ... which according to them they practically were. By virtue of being in the clan ... and Jessica hadn't considered herself part of the clan but, by marrying clan members apparently she was a clan member, Jessica was now related to these girls.\n\n\"Hey, how'd it go?\" Jim asked. He and Josh showed up out of nowhere and took her bags.\n\n\"Great! Absolutely great!\" Jessica exclaimed.\n\n\"You look great!\" Josh said noticing the light smattering of make-up Jessica wore. \n\n\"You do ...\" Jim agreed.\n\n\"You don't know the half of it.\" Jessica said, wondering what they'd say when they saw her perfectly coiffed pussy ... and felt her incredibly smooth from waxing, legs.\n\n\"Really? ... Really?\" Josh asked suddenly getting her meaning and letting his eyes stray to her crotch. \"You didn't ...\" Jim asked.\n\n\"Not completely.\" Jessica said. \"But let's just say, it's neater now.\"\n\nJim glanced around at Leah, Amanda, Justine and Sara who were still putting away their loot ... oblivious to the conversation that he Josh and Jessica were having.\n\n\"Can we see?\" Jim asked.\n\n\"Of course you can ... oh, but not now!\" Jessica added when Jim reached for her and she realized he'd literally meant now.\n\n\"Not here, in the bathroom ...\" Jim said, licking his lips.\n\nJessica giggled. \"We have visitors ... wouldn't that be rude?\"\n\n\"They don't have to know ...\" Josh said.\n\nJessica giggled again and realized that Jim and Josh were serious.\n\n\"Um ... how about later, once everyone's gone home?\" Jessica flicked her eyes at the girls who were now closing their trunks and about ready to return. \"Please?\" she added when it seemed nothing was getting through Jim and Josh's one track minds.\n\n\"Okay.\" Jim finally said, \"Sorry ... I guess I got a little carried away ...\"\n\n\"That's okay. But let's not say anything to the others until everyone's gone home. I'm not sure I could get them to see reason.\"\n\nJim and Josh nodded but didn't seem interested in giving her any space.\n\nIn fact, when Leah asked, \"where is everyone?\" Jim and Josh practically glued themselves to either side of Jessica, wrapped their an arm around her back, each sliding a hand into one of the pockets on her the bum cheeks of her jeans.\n\n\"Out back.\" Josh said, \"We're building a fire ... having some roasted sausage for dinner. We figure we can have a campfire jam after.\"\n\n\"Cool.\" Leah said, and looked from Jim to Josh, and back again. Waiting for them to do something. The other girls did too.\n\n\"Go ahead on back.\" Jim finally said, \"we'll take Jessica's things in and join you in a minute.\"\n\n\"Okay ...\" Leah said, looking suspiciously at the huge nervous smile Jessica had plastered on her face. \"Are you going to be okay?\" she asked Jessica.\n\n\"Oh yeah, yeah, fine never better.\" Jessica said in a rush. \"Go on back, we'll be there in a minute.\"\n\n\"You realize.\" Leah said, looking pointedly at Jim and Josh, \"that by marrying Jessica you made her part of our family. Which means, her happiness and well-being is of great importance to us. You're not going to do anything that Jessica may not like, are you?\"\n\n\"What?\" Jim asked in surprise. \"Of course we're not.\"\n\n\"Okay, fine. Just remember that no means no.\" she said. \"Come on, let's go find the others.\" She said to the other girls. With what could only be described as warning glares, the other girls fixed their eyes on Jim and Josh, winked at Jessica, and then moved past them to toward the back of the house.\n\n\"What the hell was that?\" Jim demanded.\n\n\"I don't know.\" Jessica said equally, but pleasantly surprised.\n\n\"I do.\"Josh said, \"Jessica you look like you're about to be eaten alive by a couple of sharks. They probably think Jim and I are going to ravage you against your will.\"\n\n\"Oh, sorry.\" Jessica said looking from Jim to Josh, \"But I did kind of get the feeling that maybe you would want to have sex. And right now, I really don't. To me this is friend time.\"\n\n\"Right.\" Jim said, \"Guilty as charged and not really proud of it. I guess I'm curious about what you look like down there now, but we'll wait. Look the real reason we came down here was to warn you that Corey and Sean don't have exactly the same repertoire as we do. They play more country slash old rock type songs ... some are almost hickish.\"\n\n\"That's fine.\" Jess said, \"I don't care, just so long as we're playing and singing, I'm happy.\"\n\n\"Alright. Well head back with Josh then. I'll take your stuff in.\"\n\n\"Thanks.\" Jessica said, kissing Jim. \"And I promise, it'll be worth the wait.\"\n\nJosh took Jessica's hand and they went behind the house to the field where a huge fire danced in a fire pit and a surprisingly large group of people surrounded the fire.\n\n\"Jess, this is Don, Mark, Stan and Chris.\" Josh said, introducing her to four men who sat near Corey and Sean.\n\n\"Hi,\" Jessica said and looked at Justine tilting her head toward Mark. The boy that Justine said she liked was named Mark, and this guy looked young enough to be closer to Justine's age. The other three looked to be the same age as Jim or Josh and Scott. Justine nodded. \n\n\"Pleased to meet you.\" Jessica said and wondered how she could make it so Justine was sitting next to Mark.\n\n\"So how was your day?\" Scott asked pulling Jessica onto his lap. \n\n\"Fine.\" Jessica said and then noticed Angus and Riley staring at her. She vaguely wondered if they had some kind of built in pubic hair detectors because their eyes were raking over her as if they knew something was different. And Jim was still in the house, Josh had come with her ... they couldn't possibly have heard from either one of them about her modified pubic hair. \"Better than fine actually.\" She added.\n\n\"That's great.\" Scott said and squeezed her thigh. They knew. They definitely knew. \n\n\"I ... I have some things to show you ... later.\" She added emphasizing the word later.\n\n\"Hey, are we going to roast those sausages or what?\" Corey asked, \"I'm fucking starving!\"\n\n\"The sausages are in the cooler there, sticks are next to the coolers.\" Jim said walking into the light of the fire pit. He had Jessica's guitar in one hand. \"Jess.\" He lifted it, \"I'll put it over here till after dinner.\"\n\n\"Thanks.\" \n\nEveryone was gathering around the cooler.\n\nWhen Jessica moved to join them Scott wrapped his arms around her and held her in place. She looked at him in surprise, but he just winked at her.\n\n\"I got yours Jess.\" Riley said so Jessica settled back against Scott.\n\n\"So, the girls mentioned some interesting wax jobs that you all had done.\" Scott said into her ear.\n\nJessica nodded, took a deep breath, and brought her hand up to cup Scott's cheek. \"Scott, can we talk about that later? I'd really like to just hang out with our guests right now.\"\n\nHe looked at her for a moment and then nodded. \"Okay. This is your time ... got it. But later ...\"\n\nJessica smiled. \"Later. Anything you want. I promise.\"\n\n\"Here Jess.\" Riley brought her a roasted sausage.\n\n\"You know what?\" Scott said when Jessica looked over at the fire with longing. \"Can you roast mine for me?\" Scott asked. \"I'll hold onto yours till you get back.\"\n\n\"Sure!\" Jessica said springing from his lap and moving to the fire pit. \"She didn't want me to roast it for her?\" Riley asked.\n\n\"I think maybe we're smothering her a little.\" Scott said. \"Let's hang back, let her enjoy herself. I have it on good authority that there's some good sex time coming our way later.\"\n\n\"Did she really wax her pussy?\" Angus asked coming to sit next to Scott with his cooked sausage.\n\n\"Apparently.\" Scott said.\n\n\"And we're supposed to make it through the night knowing that?\" Angus demanded.\n\n\"Apparently.\" Riley said.\n\n\"She's sure having a good time.\" Jim said finding a space on a chair next to Riley and watching Jessica standing around the fire, joking and laughing with all the others who were roasting their sausages.\n\n\"Yeah ...\" Josh agreed, also finding a chair to plop into.\n\n\"She's definitely smiling a lot.\" Scott agreed.\n\n\"Okay, no smothering.\" Riley said. \"But I'm not promising anything once everyone leaves.\"\n\n\"Ditto.\" Angus said and bit into his sausage.\n\nAn hour later Jessica put her guitar down. They'd been playing and singing for an hour straight and were now taking a break for food, drink and bodily functions. Jim had gone to get her a rum and coke so Jessica had time to herself. She looked over at the far side of the campfire circle and saw the men still sitting there. They hadn't moved for the whole hour. They watched, seemed to be having a good time but Jessica had the distinct impression that they were removing themselves from the evening. \n\nJessica moved to them. \n\n\"Hey.\" Scott said. He'd watched her approaching and Jessica could see that he was steeling himself for something. The others seemed to be doing the same. Angus had downed his drink and produced a bottle of whisky to pour more.\n\n\"Hi,\" Jessica said. She took the glass from Angus' hand and slid onto his lap. He looked worried, holding his arms away from her and then waving them around parts of her body as if he couldn't decide where to put them. Finally he settled on the small of her back and her knee. Jessica sniffed his drink, and took a sip. \"Yuck ...\" she said handing it back to him.\n\n\"Here Jess.\" Jim said arriving with her rum and coke. \n\n\"Thanks.\" Jessica said taking it. \"So are you guys okay?\" she asked. Angus sat at the end of their row of chairs, so sitting like she was she could see all of them.\n\n\"Yeah, of course.\" Riley said.\n\n\"And you're awesome.\" Josh added. \"You're all real talented.\"\n\n\"They are good aren't they?\" Jessica asked looking toward the now vacated chairs. \n\n\"You're having a good time, right?\" Scott asked.\n\n\"A great time. But it would be a lot better if you guys were having a good time.\"\n\n\"We are.\" Scott said.\n\n\"A great time, we're having a great time.\" Angus added.\n\n\"But you're not really participating.\" Jessica said. \"It's kind of hard to have a good time when you're sitting on the outside watching.\"\n\n\"Yeah, well ... \" Riley said and Jessica got worried. \n\n\"You're okay with this right? I mean, it was your idea.\"\n\n\"Sure, of course we are. Do you really think any of this would be happening if we weren't okay with it?\" Angus asked.\n\n\"Then why are you guys sitting over here when all the fun is over there?\" Jessica asked. \"Are you mad at me?\" Jessica asked when the men didn't answer.\n\n\"Mad at you?\" Angus barked, \"Just how do you draw that conclusion?\"\n\n\"I don't know. You're acting kind of weird, like you're staying away from me on purpose. Maybe I did something? The jealousy thing, or the wax job? I promise, not all of the hair is gone ...\"\n\n\"Oh my God!\" Angus growled, tightening his arms around Jessica and closing his eyes. Jessica looked at him in surprise.\n\n\"It'll grow back ...\" she added quietly.\n\n\"That's not it.\" Angus said opening his eyes and Angus' desire was smoldering in them ... and Jessica could feel his erection against her. \"All I want to do is jump you Jessica. Yes we're staying away from you ... so you can have fun. There's nothing that I want to do with you right now that is appropriate around company.\"\n\nJessica looked at the others and they looked equally aroused.\n\n\"Well, I guess you're not mad at me then.\" Jessica said with a light laugh.\n\n\"Not even close.\" Riley said.\n\nJessica sighed.\n\n\"Isn't there a way that you can think of me as just a friend for a while?\" She asked. \"Like you do when we work out? I mean, I really want you guys to join us. And have fun. These are your friends. Please?\"\n\n\"I don't think I can just be friends with you Jess.\" Scott said. \"I need to touch you all the time. I can't just turn it off.\"\n\n\"Could you just pretend that I'm a guy? One of you? Just for a few hours?\"\n\n\"A guy?\" Josh asked. \"You're kidding right?\"\n\n\"No.\" Jessica said, \"I can even talk in a real low voice.\" She added, lower her voice several octaves.\n\n\"Oh no, no.\" Riley said, \"Don't ever do that again! Ugh.\" He shook his head and shuddered.\n\nJessica giggled.\n\n\"Does this really mean that much to you?\" Scott asked.\n\n\"Yes. I really want you guys to join us. I mean, Jim can do it.\" Jessica said waving her hand at Jim who was standing and watching the whole exchange.\n\n\"But Jim also feels like he's your brother half the time.\" Angus said. \"It's easy for him.\"\n\n\"I think you're missing the point entirely.\" Jim said.\n\n\"Then enlighten us oh wise one.\" Angus grumbled.\n\n\"You can be in a relationship and have separate friendships too.\" Jim said, \"It all boils down to a little self-control. You don't have to pretend Jessica is just a friend, or a guy, or your sister. Just let her make her friendships while you're maintaining yours. If you concentrate on your friends then you won't be horny all the time. Wise enough for you?\" He asked when the men stared at him.\n\n\"Wise ass.\" Riley mumbled.\n\n\"So what you're saying.\" Scott said, \"Is that we treat Jessica as our wife but in a social setting ... which translates to stop thinking about her being naked.\"\n\n\"Ding ding ding ... you get what's being door number two.\" Jim said pointing his finger at Scott.\n\n\"Hey guys, you coming?\" Don called. Everyone had returned to their seats and had their instruments ready.\n\n\"Come on!\" Jessica said jumping off of Angus' lap, grabbing his hand and pulling.\n\n\"Okay, okay.\" Angus said getting up and grabbing his chair. \"I'll try ... but don't blame me if I jump you in front of everyone. I'm kidding!\" he added when Jessica looked back at him in horror.\n\nAll of the men moved closer and Jessica moved her seat between Angus and Josh before they started playing and singing again. For Jessica, the rest of the night went by in an ecstatically happy blur. \n\n***********************************************************\n\nJessica didn't even hesitate. She just stepped right out the plane door.\n\nJosh was glad he was attached to an instructor because if Steve hadn't pushed him out the door right behind Jessica and her instructor, Josh wouldn't have left the plane until it was safely on the ground. As it was, it took all of this self-control to keep from screaming as he and Steve plummeted toward the earth.\n\nJosh watched the small dot below him, that he knew was Jessica and Ronald and his life flashed before his eyes. Oddly it seemed as though his life had started when he and Jessica began to get along because that's all he could think about.\n\nAnd foremost in his mind was how much fun they'd had singing and hanging out the night before. And then the mind blowing sex they'd had once everyone left, and in the morning. They'd pulled out all the stops ... using vibrators, fucking machines, ropes. It'd been wild. And they'd had to skip their work out in order to get to the parachuting instruction on time.\n\nJosh reflected on that. He looked up and saw the other men hurtling towards him and couldn't help but be proud of them again. The instruction of the parachuting had included some very close bodily contact between them and their instructors. Not to mention strap adjustments that had been in the chest area. Jessica had worked with her instructor as if it was the most natural thing in the world. And luckily for her, the men were able to control themselves. Not once was there a tense moment. He didn't know how they'd done it ... but they had. \n\nSuddenly he felt the jerk of the parachute as Steven pulled the chord, and the rest of the ride down was relatively peaceful and Josh could enjoy it rather than worry about impending death.\n\nWhen Josh landed he could see Jessica helping Ronald roll up the parachute and she was laughing. \n\nShe stopped to watch the other men land and then she ran and jumped into Josh's arms.\n\n\"Wasn't that great?\" she yelled and she had a crazed look in her eye that Josh was sure other people would mistake as being the result of a large ingestion of drugs. Cocaine likely ... or maybe LSD. \"And I'm so proud of you! You're afraid of heights but you jumped anyway!\" and she peppered him with kisses.\n\n\"To be honest, I was pushed.\" Josh said and Jessica laughed.\n\n\"That was incredible!\" Scott said, coming to join them. \n\n\"What a rush.\" Jim agreed.\n\n\"I shit my pants.\" Angus grumbled.\n\n\"Yeah. Jess that was an experience I'll grant you that.\" Riley said, \"But next time I'll be watching from the ground.\"\n\nJessica jumped up and down, clapping her hands. She was so psyched.\n\n\"You sure have the right instincts.\" Ronald said to Jessica, coming to join them with the other instructors. \"You knew exactly when to pull the chord, you're a natural.\"\n\n\"You pulled your own chord?\" Angus barked.\n\n\"She asked to.\" Ronald said, \"But I was the back-up ... which turned out to be unnecessary. Great job.\" Ronald said and patted Jessica on the shoulder. Jessica beamed.\n\n\"Okay.\" Jim said, snapping his phone shut, \"We gotta pay up now or else we won't have time for the track.\"\n\n\"Come with me.\" Ronald said and Jim followed the instructors while Jessica and the men removed the overalls they were wearing over their clothes.\n\nTen minutes later Jim, Riley, Jessica and Scott piled into one of the cars, Josh and Angus were in the second. As they shut the doors Riley rolled his eyes at Jim again, and Jim winked at Jessica. Jessica for her part was very confused. \n\nWhen they were leaving the house that morning everyone assumed they'd take Jessica's SUV. But Jim insisted that they would not, arguing that after the track they would have to go their separate ways and so they needed a second vehicle. So the men agreed to take one of the cars, and the SUV. But again, Jim insisted on two cars. The men argued that the SUV was more fuel efficient than either of their piece of shit cars, but Jim had insisted, throwing in excuses like someone would throw odds and ends into a stew consisting of nothing but left overs. At one point he'd said something about the SUV getting too dirty on the dirt roads to the airport and the motor bike track.\n\nFinally in exasperation, and due to lack of time for arguing, the men gave up and they'd taken the cars. Jim had winked at Jessica then too. And she had absolutely no idea why.\n\n\"So, sorry again.\" Jim said as they turned onto the paved road, \"But I only have two bikes. One of you can ride mine if you want.\"\n\n\"It's okay Jim.\" Riley said, \"I think we had enough excitement for one day. We'll just watch.\"\n\n\"I'm just worried about this track.\" Scott said, \"The clan uses it a lot. I don't really want to run into anyone we know here.\"\n\n\"They're usually on the track.\" Jim said, \"Not usually too many spectators standing around. It should be okay.\"\n\n\"If you say so.\" Scott said.\n\nAn hour later the men had been watching Jessica and Jim circle the dirt circuit. Jessica certainly knew how to handle a bike. And as expected, she had no issues with speed. She had this funny habit of circling on the spot before taking off which created just enough dust that once it settled observers would get the impression that she had disappeared into thin air, when in reality she'd gotten so far so fast that it took a while to find her slight figure in the green and white riding suit, flying over the ridges of the moguls. Watching the riders whiz by and handle the less than hospitable terrain held the mens' attention and time slipped by unnoticed. At one point Jim pulled up alongside Jessica and motioned at his wrist. Jessica nodded and they slowed, and pulled over to the side. And then a group of four riders pulled alongside them and seemed to be speaking to them. Jim shook his head a few times but then Jessica seemed to be saying something and Jim looked like he was resigned to something. And then the four men took off. Jessica spun in a circle and took off after them. Jim shook his head, and followed her. To the men watching it became pretty clear that Jim and Jessica were involved in a race of some kind. The four other riders kept trying to stay in the lead. Jessica, with Jim struggling to keep up, made her way past three of them and then seemed to be having a standoff of sorts with the fourth. They were going at incredibly high speeds that in no way looked safe. Finally, rounding a corner, Jessica pulled through the turn, but the other rider slid out and hit the bales of hay that lined the inner wall of the track. Jessica looked over her shoulder, slowed and turned around. Jumping off her bike she ran over to the other rider and helped him up.",
        "The rider dusted himself off, and Jessica lifted his motor cycle. Jim pulled up and said something that had Jessica holding her hands up to the dusty rider as if in apology and heading for her own bike. Soon she and Jim coasted over the entranceway to the track. The men went to meet them.\n\n\"What the hell was that about?\" Riley asked. \"You could've been killed!\"\n\nJessica pulled her helmet off and shook her hair out. \"It was just for fun. Honest Riley, it was safe.\"\n\n\"Jessica ...\" Jim grumbled and that caught everyone's attention. Jim didn't often grumble. \"I don't care how good you are at riding. I don't want to see you doing those speeds again, do you understand?\"\n\nJessica nodded. Privately she was glad that she'd decided to play things down and not show off with some of the trick jumps she usually did. The way Jim was looking at her she was beginning to wonder if he was ever going to let her ride again.\n\nJust then the four riders who had raced Jim and Jessica pulled up and removed their helmets. Jim groaned, and the men were instantly tense. Jessica looked at them in surprise.\n\n\"Gentlemen.\" The rider who had wiped out said to the men.\n\n\"Kurt.\" Riley said in a tone that did nothing to hide the hostility that he felt. Jessica blanched. \"How's Paul doing these days.\" He added, planting his eyes on Jessica and he was glad to see that she understood what he was trying to convey. For all intense and purposes this was the enemy.\n\n\"Fine.\" Kurt replied, \"If you ever bothered to talk to him you'd know that for yourself. But, I'm not here to discuss Paul with you.\"\n\n\"You're not?\" Angus asked in obvious surprise.\n\n\"No. Do you remember Anthony? Of the central clan?\" \n\n\"Yes.\" Riley replied, not liking where this was going. He slid his eyes over to Jessica. He didn't want to discuss clan business in front of her.\n\n\"Well, lately his crew has been around. A lot.\" Kurt said. \"And they're always challenging us to races. I don't know if you're aware but Paul' sister married Anthony ...\" Kurt paused. Finally Riley nodded. He'd heard. \"Well, ever since that development there has been a redirection in hostilities. It seems now they consider the winning of motor bike races as the appropriate way to settle disputes.\"\n\n\"Are you saying that because of Paul' sister, Anthony no longer wants to whack Paul and his clan?\" Scott asked.\n\n\"Our clan.\" Kurt said emphasizing the word our and sweeping his eyes over the men to include them. An amused look played on his face. \"And that is what I'm saying. They're always just little impromptu challenges, but Anthony's riders are ... good.\" Kurt said. \"They're always kicking our asses.\"\n\n\"What does that have to do with us?\" Angus demanded.\n\nKurt turned his eyes on Jessica. \"Jessica is good.\" Kurt said. \"The kind of good that would kick their butts.\"\n\n\"No!\" Riley thundered as he moved to stand between Kurt and Jessica. The other men moved too and Jessica couldn't see anything but their backs ... and she was distressed to see that their entire bodies had gone rigid. It reminded her of the times they'd been furious with her ... except this time they were straining their tightly coiled muscles at someone else.\n\n\"Why not?\" Kurt asked.\n\n\"No.\" Riley repeated. \n\n\"It's just for fun.\" One of the other men said.\n\n\"You come anywhere near her again and I'll kill you. Do you understand?\" Riley growled. Jessica shrank. Riley sounded absolutely terrifying. \n\n\"Get out of here!\" Angus yelled in an equally terrifying voice, and Jessica flinched. \"You're making a mistake.\" Kurt said.\n\n\"You're the one making the mistake.\" Scott said in a calmer but strained voice, \"If you don't leave now, you'll see what kind of a mistake you're making.\"\n\n\"This isn't over.\" Kurt said and Jessica could hear the crunch of their bike tires on the dirt.\n\nThe men stayed rigid as they watched the four move away.\n\n\"We'll move to another track.\" Jim finally said.\n\n\"You bet you will.\" Riley said. \n\n\"I'm sorry.\" Jim added.\n\nSuddenly the men relaxed.\n\nThe men turned to look at Jessica.\n\nRiley half expected her to be angry about how rude he'd been but Jessica seemed pretty shaken. Good. At least she'd understood the gravity of the situation.\n\n\"If you ever see any of those men again,\" Riley said, his eyes boring into her, \"you turn around and run. Do you understand?\"\n\n\"Yes.\" Jessica said.\n\n\"We're not fucking kidding Jessica.\" Angus said advancing on her and grabbing her arm, \"Those men are dangerous. Incredibly dangerous. Do not let them anywhere near you. Do you understand?\"\n\n\"Yes, Angus I understand. Do they want to hurt you?\" Jessica asked, fear gripping her. The fact that the men considered Paul and his men dangerous terrified Jessica.\n\n\"Angus you're scaring her.\" Jim said, getting off his bike.\n\n\"Good.\" Angus said, but loosened his grip on her arms and rubbed where he'd squeezed. \"Sorry if I hurt you.\"\n\n\"You didn't.\" Jessica said, getting off her bike too and moving into Angus' embrace, \"But I am worried. Do they want to hurt you because you haven't been working?\"\n\n\"I don't think so.\" Angus said, but looked over at Riley.\n\n\"They're supposed to be on our side.\" Scott said kicking the dirt. \"But I'm not so sure.\"\n\n\"They ... they took over Sean's control, right?\" Jessica asked.\n\nThe men looked at her in surprise.\n\n\"You have a good memory.\" Josh said, exhaling, trying to get rid of some of the tension that he felt.\n\n\"Yeah, they muscled in ... in a quiet way. No one got hurt. Physically anyway.\" Riley added.\n\n\"And now this Anthony guy is trying to muscle in on Paul?\" Jessica asked.\n\n\"Jesus ... you picked up a lot.\" Angus said blinking down at her.\n\n\"It looks like it Jess.\" Jim said. \"But I guess Paul' sister is making it hard for Anthony to do an all-out take over.\"\n\n\"Good for her.\" Jessica muttered. \"Sorry ...\" Jessica added when the men looked at her in surprise.\n\n\"You have an interesting way of looking at things Jess.\" Scott said shaking his head.\n\n\"I'll come back later and move our bikes to another track.\" Jim said, \"But right now Jess and I have to go, or we'll be late.\"\n\n\"Okay.\" Riley said, eyeing Jessica. \"So if you see those guys again you'll...?\"\n\n\"Run away.\"\n\n\"And the next time you ride, you'll ...?\" Angus asked.\n\n\"Um ... slow down?\" Jessica asked with uncertainty.\n\n\"Never mind riding.\" Riley said, \"Anything. Anything you do Jessica, don't take any unnecessary risks. Got it?\"\n\nJessica nodded.\n\n\"Repeat it.\" Scott said.\n\n\"No unnecessary risks.\" Jessica said, \"I promise.\"\n\n\"Okay. Well, we'll hang out until you leave.\" Riley said, \"Just in case Kurt and his goons try anything else.\"\n\nFifteen minutes later Jim was watching the men get smaller in his rearview mirror. Jessica sat in the passenger seat, thinking.\n\n\"Don't let Kurt ruin your day.\" Jim said reaching over and taking her hand.\n\n\"That'd be easier to do if I knew you guys weren't in some kind of danger.\"\n\n\"We're not. Really!\" he said when Jessica looked at him with a raised eyebrow. \"Whatever is going on is between Paul and Anthony. Trust me.\"\n\n\"Okay.\" Jessica said, thinking it over. Jim seemed pretty sure. So she decided to push her concerns away, and a huge smile replaced her concerned expression.\n\n\"That's better. Having a good day?\"\n\n\"The best!\" Jessica exclaimed. \"I can't believe this is all real! Everything is so ... so, great!\"\n\nJim chuckled, and brought her hand to his lips. \"I'm glad that you're happy.\"\n\n\"You're happy too, right?\"\n\n\"You better believe it!\"\n\n\"So, what was all that stuff about the SUV this morning?\" Jessica asked, \"And all that winking?\"\n\n\"Oh. Well, those new cars all have built in GPS systems. So, you're traceable. Not what we want until we're ready.\" Jim said.\n\n\"You didn't want the men to be able to follow us?\" Jessica asked, guilt rolling over her.\n\n\"No, not yet.\" Jim looked at her, obviously confused. \"Are you upset by that?\"\n\n\"Well, I thought we weren't trying to hide things from them. Not actively hiding things from them. Jim, we have to tell them. And soon. Please. I don't think I can take the betrayal that I know they'll feel when they find out that we kept this from them already.\"\n\n\"Okay, look. We'll make the CD today, have our night out and tomorrow we'll tell them. Okay? If they flip, then I guess Tracy will have to deal with not having a lead singer for the competition.\"\n\n\"Oh drat.\" Jessica said feeling guilty again, \"Do you really think they'll get mad? I mean, we jammed with the guys from the clan, went sky diving, motor biking ... \"\n\n\"Kept it a secret from them ...\" Jim added.\n\n\"It wasn't a secret.\"\n\n\"They'll see it that way though. I think they'll be at least a little ticked.\"\n\n\"You're right. Okay. We'll wait until after the competition ...\"\n\n\"Sorry Jess.\" Jim said looking at her guilty expression. \"I should never have put you in this position.\"\n\n\"It's okay. I decided that on my own.\" Jessica shook her head. \"No use worrying about it. Let's go make a cd!\" Jessica said forcing a smile. Jim smiled back but felt guilty too. He figured he was probably in for another good beating. And he deserved it. Crap.\n\n************************************************************\n\n\"Hey Jess.\" \n\n\"Great job Jess.\"\n\nJessica waved her hand in an embarrassed way as the two waiters patted her shoulder as they passed by.\n\n\"Looks like you made quite an impression.\" Jim said with a smile. \n\n\"We ... we made an impression.\" Jessica said.\n\n\"Hey, I only sang with you. You're the one who managed to fire everyone up into an angry mob of second rate singers.\"\n\n\"Second rate?\" Jessica demanded, \"They were great!\"\n\nJim chuckled, \"They were, I'm just kidding.\" \n\nIt had taken three hours but they had managed to cut a great single for the charity event. All of the staff had assembled at the studio and the first couple of takes had been on the pathetic side. People not used to singing, and others who were shy, simply hadn't put any heart into it. Jessica had urged them to feel the emotion behind the words, and then she and Jim had actually done a run through of the song on their own to demonstrate the intensity required. By the end Jessica had hyped them up to a screaming mass of protestors furious with the injustices done to disabled people. And the single had been great. And then to make the cd even more worth buying, the two bands had worked together to put a few more songs on it.\n\nThis seemed to lead to an uneasy truce between the bands, and they now sat around a long table back at the restaurant, eating dinner. And staff kept greeting, congratulating or joking with Jessica as they went about their business. \n\n\"So we'll alternate playing tonight?\" Carl asked Tracy, getting up from the table.\n\n\"Okay, sure.\" Tracy said standing also. Carl held out his hand, and after a moment of hesitation Tracy shook it. Everyone around the table grinned.\n\n\"Let's go practice.\" Carl said to his band and Jim pushed his chair back from the table. \n\n\"Have fun.\" Jim said kissing Jessica on the forehead, \"See you later.\"\n\n\"Bye.\" Jessica said and went back to concentrating on the food on her plate.\n\n\"Jess, do you know this chick?\" Tracy asked elbowing Jessica.\n\nJessica looked up to see a red head standing with her hands clenched, staring at her.\n\n\"Um, no.\" Jessica said.\n\nHer expression looked sad, and strained, and nervous.\n\n\"Where's Jim?\" she asked in a tense tone, her eyes flickering around the room, but always settling back on Jessica as if expecting her to disappear.\n\n\"You know Jim?\" Jessica asked in disbelief. The woman nodded.\n\n\"Okay. I'll go get him.\" Jessica said starting to get up.\n\n\"No, no, no,\" the woman said reaching out as if to grab Jessica's shoulders but then pausing and simply holding her hands out. \"that's okay. I'll just sit here with you.\" She said and dropped into the chair next to Jessica that Mark had just vacated. The woman watched Jessica sit, her eyes constantly slipping away and flitting around the room in a nervous way.\n\n\"So, what's your name?\" Jessica asked, studying the woman. Jessica couldn't guess an age for her. Something told Jessica that she was supposed to be a young woman, but the dark circles under her eyes, the worry etched onto her face, made her look much older.\n\n\"I'm Be ... Anne.\" The woman said, \"I'm Anne.\"\n\n\"Hi Anne,\" Jessica said,\"I'm Jessica and this is ...\"\n\n\"I know. I know you're Jessica.\" The woman interrupted.\n\nJessica exchanged glances with Tracy, Dave, and Rachel. Something was off about this woman. A scary off.\n\n\"Are you okay?\" Jessica asked finally seeing nothing else that could be said, \"You seem a little off.\"\n\n\"No. I'm not okay. My boyfriend's best friend raped me. Got me pregnant. I did what I thought I should ... but it was wrong. Everything was wrong, and now I'm the outcast. Again.\"\n\n\"Holy cow.\" Jessica said, reaching out to grab Anne's hand. \"Did you call the police?\"\n\n\"The police?\" Anne asked her, looking at her in obvious confusion, \"I couldn't call the police. No, no police.\"\n\n\"Jesus Christ!\" Jim suddenly bellowed from behind Jessica, making her jump.\n\nJessica looked over her shoulder and saw Mark standing next to Jim. Mark looked like he was ready to hurl himself in front of a bullet. His eyes were on Anne and Jessica realized that he had gone to get Jim. \n\n\"Beth what the fuck are you doing here?\" Jim demanded.\n\n\"Beth?\" Jessica asked turning back to the woman, her mind going blank.\n\n\"Beth-Anne actually.\" The woman said, and she was now holding tight to Jessica's hand. \n\nSuddenly Jessica felt things falling into place ... practically hearing a clicking sound as each reality became clear. This was Beth. Angus' Beth. And she'd been raped by his best friend. \n\nOh no. \"Jim ... Jim.\" Jessica said looking back at him, but he was moving forward. He reached down, pulled Jessica's hand out of Beth's and yanked Jessica up by her arm and shoved her behind him.\n\n\"You have a lot of fucking nerve!\" Jim was yelling at Beth. Beth stood up too but she looked broken. Tears welled in her eyes, Jessica peeked around Jim.\n\n\"Jim, I think Josh may have raped her!\" Jessica said.\n\n\"Josh?\" both Jim and Beth said at the same time.\n\n\"You know ... he used to have some issues. At night ... controlling himself ...\" Jessica said quickly.\n\n\"It wasn't Josh.\" Beth said between sobs. \"Josh wouldn't hurt a fly. It was that asshole Kevin. Kevin raped me and said he'd kill Angus if I told him.\"\n\nA collective gasp came from those around the table, and in the general vicinity. Jim swore under his breath as he looked at all the people who had overheard the conversation.\n\n\"You stay here!\" Jim said over his shoulder to Jessica, \"And you come with me!\" He grabbed Beth's arm and dragged her to the front door. Jessica followed.\n\nOutside he dragged her over to an empty corner of the parking lot.\n\n\"What the hell do you think you're doing? Discussing clan business in a public place like that?\" Jim growled sounding so angry that Jessica hesitated to let him know she was there.\n\n\"It's not clan business, it's my business.\" Beth said. \"Angus hated me when he found out about the abortion. Hated me. And so did everyone else. And now I finally worked my way back into their good graces, and now everyone is friends with Jessica.\" Beth noticed Jessica and looked around Jim. \"And now they hate me again. Angus told them to not talk about me to you, to not invite me anywhere. I love to shop, I love spas, I love to sing and dance ... They all came to your place last night and left me home alone! Please, please, I can't go through this again!\"\n\nJessica felt tears pooling in her eyes as she stepped closer. \n\n\"I told you to stay in the bar!\" Jim said turning on Jessica.\n\n\"Jim, can this be true?\" Jessica asked, going into his arms. Jim looked like he was going insist that she go back into the bar but then he exhaled and pulled her against him.\n\n\"I don't know.\" He finally said eyeing Beth who was now full out crying. \"But it's convenient that the would-be rapist is behind bars where we can't ask him.\"\n\n\"He was an asshole!\" Beth yelled, \"He was an asshole, and Angus became an asshole too. But, now I hear that he's changed ...\" Beth looked at Jessica again.\n\n\"Did you tell Angus any of this?\" Jessica asked.\n\nBeth shook her head. \"I tried. I tried but he wouldn't talk to me and then when he got wind that it hadn't been his baby ... it was a thousand times worse. I swear, if he could have killed me by looking at me, I'd be dead right now.\"\n\nJessica nodded and mumbled. \"I know what you mean.\"\n\nJim looked down at her in surprise and then looked angry again.\n\n\"What do you want Beth? Other than to fuck things up for Angus again? And how did you find us?\"\n\n\"I, I followed you. Last night when I couldn't come to the party ... I followed Don and them out to your place, parked the car off the road and waited for you to leave. I've followed you all day.\"\n\n\"Why?\" Jim demanded.\n\n\"Because. Because I'm lonely ...\"\n\n\"Oh my God. You can't honestly think that we're going to ... to, hang with you?\" Jim asked in disbelief. But as he spoke, Jessica began to pat his chest.\n\n\"She could Jim. Not with us specifically, but with the crowd.\"\n\n\"No!\" Jim said.\n\n\"I'm sorry Beth, but I don't think I can be your friend.\" Jessica said and her heart broke to say it. \"To be honest I think you and I being friends will lead to more problems when Angus finds out. But ... I'll see if Tracy will let you onto the band. You could hang out with them whenever you want.\"\n\n\"Thank you!\" Beth wailed.\n\n\"Are you crazy?\" Jim demanded.\n\n\"Maybe.\" Jessica said, \"But honestly Jim, do you think that Angus would have done what he did to Beth if he'd known the truth? His heart was broken for the wrong reasons Jim. Here's a chance for him to know the truth.\"\n\n\"He's going to kill us.\" Jim said in surrender. Jessica tried to smile, stood on her tip toes to kiss Jim's cheek, and then moved to put her arm around Beth.\n\n\"Come on. Let's get you cleaned up, and then I'll introduce you around.\"\n\n\"Thank you.\" Beth sobbed.\n\nJim followed close behind the pair wondering what the hell they'd gotten into.\n\nWeeks had gone by in a blur. They were the happiest days of Jessica's life, despite the fact that the men had gone back to work. Doing surveillance only, but battling with Paul about it all the time. They took turns going out, each one rotating out. \n\nAnd despite the joy in Jessica's life, her guilt grew more and more each day. Guilt because she hadn't yet told the men about the bar ... or Beth. The competition had come and gone, and their group had won. Beth had fit in like a duck on water and was great friends with the band. She'd even kind of started dating Tom. She didn't play an instrument or sing but she had a natural talented for choreographing dances. She would lip sync on stage and dance with the band. And Jessica had been unsuccessful in keeping arms-length from Beth. She was a very nice lady, once her nervousness was gone. It turns out she was the same age as Angus and she seemed to take the age difference between Jessica and herself as a reason to mother Jessica. She always seemed to be hovering over Jessica. And Jessica, to her shame, kind of liked it. It was like having an older sister, or a mother again.\n\nTo add to her guilt, Jessica wondered if Angus would love Beth again, once he knew the truth. Maybe Beth was Angus' true love and the only reason he was allowing himself to share Jessica with the other men was because he was so heartbroken that he thought that was the best he could do. Over and over Jessica tried to find ways to tell Angus about Beth. Until that came out, she and Jim couldn't tell the men about the bar. \n\nJessica sat on a rock in her overalls, drinking water and watching Angus work on his car. She contemplated again how to tell him everything. If she wasn't such a big chicken she'd just blurt everything out and be done with it. But deep down inside she was terrified that Angus would turn his back on her just like he'd done with Beth.",
        "\"What's with you?\" Angus asked.\n\n\"Huh?\" Jessica asked. Angus lay under his car, looking at her.\n\n\"You're looking at me funny.\" Angus said, sliding out from under the car, wiping his hands with a cloth while he stalked toward her. \n\n\"I am?\" Jessica asked.\n\n\"Yes. Yes you are.\" Angus said reaching her, sliding an arm under her pit, and another under her knees he lifted her, took her seat on the rock and balanced her on his lap. \"So what's wrong?\"\n\n\"Nothing's wrong ...\"\n\n\"Jessica ...\" Angus said in a warning tone.\n\n\"Okay, okay. Lately I've just been wondering something.\"\n\nAngus cocked an eye at her.\n\nJessica took a deep breath. \"What if ... what if the reason Beth had an abortion isn't what you thought it was? What if it was something else entirely and you had no reason to hate her, and you could live happily ever after with her?\"\n\nAngus stared at her. He looked so utterly surprised that it took him a full minute to begin to look taken aback. And another minute before his face began to turn red.\n\n\"Are you okay?\" Jessica asked bringing her hands to his face.\n\n\"I never, never, ever, want to hear her name come out of your mouth again. Got it?\" Angus bellowed.\n\n\"But Angus ...\"\n\n\"No. No. I said never again. Do you understand Jessica?\"\n\n\"Yes I do. But that's not really fair.\" Jessica said.\n\n\"Not fair?\" Angus demanded.\n\n\"Please Angus.\" Jessica said, kissing his cheek, \"That was part of your life. You went through a lot of pain. I want to be able to share that with ...\"\n\n\"No.\" Angus said and stood up suddenly, catching Jessica just before she fell. He righted her in front of him. \"I'm not going to talk to you about this. I think you'd better go get cleaned up. I'll be there in a minute.\"\n\n\"Angus ...\" \n\n\"Go! Jessica, now!\" \n\nJessica took a step back. Angus was furious. Furious. Jessica noted with some relief that he didn't look like he hated her, but he was definitely not happy with her.\n\n\"I'm sorry.\" Jessica muttered, took the risk to step in and peck his cheek and then turned and headed toward the house.\n\nAngus closed his eyes, feeling rage, and pain and hurt, rolling over him.\n\nJessica was right. It'd been the blackest time of his life. And he couldn't bring himself to share it with her. Maybe that was wrong. He just didn't know anymore. But he couldn't let her go like this. He'd taken his hurt and turned it on Jessica.\n\n\"Jessica.\" He said, \"Jessica ...\" he strode in the direction she had gone and rounded the car in time to see her nearly halfway through the clearing. She hadn't heard him. He decided to pack up and go in to talk to Jessica.\n\nHe was about to turn back toward the car he'd been working on when he heard a growl. Spinning he scanned the area. And then he saw it. A dog ... or what used to be a dog. Right now it looked like a demon straight from hell. It stood in the tree line, not far from him. It was looking at Jessica, growling, teeth bared. His skinny body, bones protruding, fur sparse, was quivering. \n\nHe couldn't believe he'd left the gun leaning against the car he'd been working on. Maybe if he ran he could make it to the gun and come back ... but a second look at the dog was a reality check. It seemed to be salivating as it took a step forward.\n\n\"Jessica, run!\" Angus yelled as the dog lunged forward in a dead run.\n\nJessica looked back just in time to see Angus fly through the air and tackle a dog as it ran toward her. Instantly the dog grasped Angus' arm in its mouth and tore at it.\n\n\"Angus!\" Jessica screamed and began to run to him.\n\n\"No! Jessica! Run away ... go get help!\"\n\nJessica slid to a stop and bent down to pick up a rock. She hurled it at the dog. It bounced off his head he didn't seem to notice it.\n\nAngus looked up and saw Jessica running toward the cars they'd been working on. What the hell? She was screaming for help while she ran.\n\n\"Mother fucker!\" he swore as the dog seemed to sink its teeth even deeper into his arm. Luckily it was his left arm. Now that Jessica was safely out of the dogs reach Angus let go of its body with his right arm and began punching it in the head, with as much force as he could muster. Despite the situation and the loud growling of the dog, Angus could still hear the sound of running feet. The men were coming.\n\n\"Just a minute more ...\" Angus was muttering to the dog, \"and you're going to be nothing more than a dead sack of dog shit. Maybe I'll stuff you and keep you as a memento ... \"\n\n\"Angus!\" Jessica's voice shrieked from behind him ... nearby. He looked up. Jessica stood not a foot away from him, legs planted a foot apart, a rifle raised to her eye, nozzle point at him. No, not at him, but just near him. Suddenly the gun jerked, a shot echoed through the air, and the tugging at his arm stopped instantly. He heard a thud. Looking down he saw the dogs' body lying beside him, legs twitching. He looked at the blood pouring out of his arm, and then back up at Jessica who was now walking toward him with the rifle lowered. From behind him he heard Riley say, \"Shit!\" in a surprised tone.\n\nAngus watched Jessica walk up to the still twitching dog, put the rifle to its head and fire. There was a final convulsion and then the dog lay still.\n\n\"Angus, are you alright?\" Jessica was crouching beside him, clutching his damaged arm. She looked up as Riley came to kneel beside her.\n\n\"He's losing so much blood!\" she said.\n\n\"He'll be okay!\" Riley said, taking his belt off and then looping it around Angus' arm above the torn flesh, he pulled it tight.\n\n\"Are you crazy?\" Jessica muttered to Angus, leaning over and laying a volley of kisses on his cheek. \"You can't just tackle a wild dog!\"\n\n\"It was coming after you Jess ... you were supposed to run. What the hell were you doing with that rock? And the gun ...\"\n\n\"You attacked the dog?\" Josh asked. He was staring at Angus.\n\n\"Yeah, well. It not a big deal .\"\n\n\"Are you kidding?\" Jessica replied. \"The dog was running at me and then from nowhere Angus flew through the air and tackled it! It was definitely a big deal!\"\n\nAngus smiled at Jessica's colorful account.\n\nHe looked up to see Josh staring at him in awe. \n\n\"It wasn't that big a deal, really.\" He said not sure he deserved the reverence that was settling onto Josh's face.\n\nRiley patted Angus on the shoulder of his uninjured arm.\n\n\"Let's get this fixed up. At least we don't need to worry about rabies.\"\n\n\"There's that.\" Angus agreed and kissed the top of Jessica's head when she stuck it under his arm and tried to shoulder his weight.\n\nInside Jessica helped Riley clean the bites, disinfect them, and then bandage it.\n\n\"Jess.\" Jim said motioning her over with his head. \"We're going to be late to play if we don't get out of here in at least an hour.\"\n\nJessica looked over at Angus. Feeling guilty again.\n\n\"Okay.\" She said. She sighed. She liked going to the bar. She liked her friends, she liked Beth, she liked the music, the dancing. She was so selfish that she just couldn't give it up, even when Angus lay on the sofa, arm torn up because he'd protected her. \"I'll get cleaned up.\" \n\nShe went to the sofa and crawled onto it, right next to Angus.\n\n\"I um, I have to go get ready for my friend time, with Jim.\" She said. \"Will you be okay?\"\n\n\"Do you mean, 'would I prefer you stayed here with me and coddled me for the night but I'll live with the fact that you'll be out?' Then yes, I'll be alright.\" Angus said.\n\nJessica giggled, kissed him on the lips and headed to the bathroom. \n\nShe smiled while she showered. Now that Angus was injured, maybe she could finally get him and Riley to watch the last two Twilight movies with her. Something always seemed to interfere with that. Not that she minded because it was always something exciting and fun, but she was beginning to realize that unless something like this happened, she'd never get around to watching the movies with the men.\n\nExactly an hour later, Jessica was chatting with Tracy and Dave at the bar. Jim had disappeared with his friends.\n\n\"Jessica ...\" Beth said, out of breath.\n\n\"What's wrong?\" Jessica asked eyeing Beth. She looked scared.\n\n\"What's going on babe?\" Tom asked reaching out for Beth.\n\n\"Oh ... nothing.\" She said looking at Tom in surprise. She hadn't noticed his presence at all. \"I just need to chat with Jessica for a second ... excuse us.\" And she pulled Jessica with her over to the wall near the bathrooms.\n\n\"What is it?\" Jessica asked.\n\n\"It's Paul, and his men. They're coming here. Now.\"\n\n\"What? Why?\"\n\n\"Anthony has challenged Paul for his territory.\"\n\n\"Oh no!\"\n\n\"In a motor bike race. Whoever wins, wins everything.\"\n\n\"Oh no ...\"\n\n\"Yes.\"\n\n\"Why are they coming here?\"\n\n\"Kurt told them about you. Said you were really good on a bike.\" Beth said and looked Jessica up and down as if she had a hard time believing it. \"They're going to ask Jim to let you ride for them.\"\n\n\"What? That's crazy. He'll never agree ... and how did they know we were here?\"\n\n\"I told them.\" Beth said.\n\n\"You what?\"\n\n\"They were going to go to your place. Talk to Riley and Angus. Can you imagine how that would have ended?\"\n\n\"Oh my God!\" Jessica said. \"Oh my God! But Beth, Jim won't say yes either. They'll kill him too! Maybe they'll let Jim ride for them?\"\n\n\"They don't want Jim. They want you.\"\n\n\"He won't agree!\" Jessica repeated.\n\n\"But Jim brings you here. He's different with you ... he might say yes.\"\n\nJessica shook her head. Remembering how upset Jim had been with her race against Kurt, she was certain he'd say no.\n\n\"They can't talk to Jim Beth ...\"\n\n\"They're right there ...\" Beth said motioning toward three large men who had stopped several tables away and stood staring at Beth and Jessica. \n\n\"Fine.\" Jessica mumbled, took a deep breath, set her shoulders back and marched towards the men.\n\n\"Mr ... Paul,\" Jessica said at a loss for what to call him. \"I'm Jessica. I believe we have some business to discuss?\"\n\nPaul looked behind her.\n\n\"Where's Jim?\"\n\n\"He's busy but not necessary for this discussion. I make my own agreements.\" Jessica said, impressing even herself with how self-assured she sounded.\n\n\"Okay.\" Paul said after Beth had nodded her agreement. \"Where can we talk?\"\n\nJessica looked around the bar. \"Maybe outside would be best.\"\n\n\"After you then.\" Paul said and swept his arm past him, toward the door.\n\n\"I don't know what Beth told you, but this contest is very important.\" Paul said once they'd found a quiet place outside the bar to talk. Jessica studied Paul. He was old. Well, not old, but older than any other clan member she'd met. He had grey hair and was surrounded by two brick walls who were younger than he was by far, but looked no less serious them him.\n\n\"Beth mentioned that.\"\n\n\"There are no rules ... it's to the last man ... person, standing.\" Paul added.\n\n\"And it's just me?\" Jessica asked.\n\n\"No. I have a team of my best riders. I believe you've already met Kurt ...\" Paul said with a smile.\n\n\"When is it?\" Jessica asked.\n\n\"Two days from now.\"\n\n\"That soon?\"\n\n\"Yes. Is that a problem?\"\n\n\"No.\"\n\n\"Good. Abe here will give you the directions.\"\n\n\"You haven't heard my terms yet.\" Jessica said. Paul froze and his eyes took on a dangerous glint.\n\n\"You have terms?\" he asked, his voice ice cold.\n\n\"Yes I do. If I win this for you I want you to leave my men alone. Let them out of the clan.\"\n\n\"No one leaves the clan Jessica.\" Paul said in a terse tone. \"Not alive anyway.\"\n\n\"Okay fine. Then let them do surveillance only. That's what they're doing now but I hear them arguing with you about it all the time. No more field work for any of them. Agreed?\"\n\n\"I don't negotiate.\" Paul said in a cold, hard voice. His expression changed entirely to one that radiated danger. Paul had Angus and Riley beat in the intimidation department and every fiber of Jessica's body told her to get the hell away from him. But the likely outcome of her leaving kept her there. And the thought of the men getting hurt stirred a fury in her that overpowered her fear. She jutted her chin out and squared her shoulders.\n\n\"Then I don't ride.\"\n\n\"I'll go to Jim and he'll make you ride.\"\n\n\"Maybe Kurt didn't relay the nature of the response he got from Riley when he suggested I race with him. But it was an emphatic no.\"\n\n\"This won't be a suggestion and it won't be Riley.\"\n\n\"Then expect a fight. It doesn't matter who you ask, they'll say no.\"\n\n\"Is that so?\" Paul demanded and stepped forward, pressing up against Jessica and glaring down at her.\n\n\"Back off Paul.\" Beth said and moved next to Jessica.\n\nPaul snapped his eyes over to Beth. Fury rolled off of him and his two goons moved beside him. Beth and Jessica were surrounded. Jessica could only see Beth out of the corner of her eye but it didn't look like she was wavering. \n\nFor her part, Jessica thought her heart was going to pound its way right out of her chest. \"Your services are no longer required.\" Paul finally growled out to Beth. \"Leave.\"\n\n\"I'm with Jessica. Where she goes, I go.\" Beth said and there was a tense moment where Jessica was certain that the goons would tear Beth and her into tiny pieces. But then Paul turned his gaze back to Jessica.\n\n'Well, in for an ounce in for a pound.' Jessica remembered her father's favorite saying. She leaned closer to Paul, and shoved her face close to his.\n\n\"Those are my terms. Accept them, and you'll win the contest. Go to the men, expect violence.\" She said. \n\n\"Then your 'men' will end up dead.\"\n\n\"Maybe. But they'll take a few of your men with them.\" Jessica said. \"Seems a waste considering that the race is supposed to avoid bloodshed. I wonder what your sister would think of that? I know Anthony would be thankful to you for killing off your own followers for him.\"\n\nPaul blinked. \"I think you're overestimating your husbands' abilities. They'll be dead, and you'll ride for me.\"\n\n\"Then you'll have a fight with Sean and Corey's faction.\" Beth said. \"Jessica is under our protection as are Riley's men.\"\n\nPaul didn't bother acknowledging Beth. He stared at Jessica but Jessica sensed that he was calming down.\n\n\"Then we'll take you right now. Talking to Jim was for courtesy sake only.\"\n\nJessica shrugged. \"Same result. You don't think they'll find me? And quite frankly Paul, a willing participant does so much better than an unwilling one. It's your call. Your territory at stake. For a minor inconvenience to you, I can guarantee your victory.\"\n\nPaul stared at Jessica for a long time. Finally he sighed, stepped back and looked at his goons. \"Do you believe the balls on this girl?\" \n\nChuckling he looked back at Jessica. \n\n\"Okay. Deal. But what do you get out of this?\" Paul asked.\n\n\"Peace of mind.\" Jessica said.\n\nPaul nodded.\n\n\"Abe will give you the instructions.\" He said nodding to the goon on his right.\n\n\"And I need riding gear and a bike.\"\n\n\"You have your own riding gear and bike.\" Paul said.\n\n\"And I can't use them without the men knowing.\" \n\n\"Fine.\"\n\n\"And helmets with communication devices in them. The team and I have to be able to communicate.\"\n\n\"Done.\"\n\n\"And the men can't find out that I'm racing for you.\"\n\nPaul nodded. \"Only the five of us know. I'll keep it that way until the race.\"\n\nJessica nodded. \n\n\"You may want to keep it that way after the race too.\" Jessica said. \"There's no accounting for what might happen out of anger.\"\n\nPaul paused but then nodded.\n\n\"Later.\" Paul said and turned away. \n\nAbe handed some papers to Beth and then he and the other muscle man followed Paul. \n\nJessica forced herself to stand until their car disappeared into the distance and then her legs gave out on her.\n\n\"Holy shit Jessica.\" Beth said, grabbing her before she hit the ground. \"What have you done? No one talks to Paul like that and gets away with it. I thought he was going to kill us for sure.\"\n\n\"Well, he didn't. But I'm not worried about Paul. Do you know what will happen if the men find out about this?\"\n\n\"I can imagine.\" Beth said.\n\nJessica shuddered. \"I need help. You have to tell Leah and the others to invite me out to go shopping again. They have to be my excuse to disappear for a few hours.\"\n\n\"You think you can do this without the men knowing?\"\n\n\"I intend to try.\"\n\n\"Okay. Okay. I'll talk to them.\"\n\n\"Tonight. You have to tell them tonight. Plans have to be made by tomorrow at the latest.\" \n\n\"Consider it done.\"\n\n\"Now let's go pretend like we're having a good time.\" Jessica said heading back into the bar. \n\n*************************************************************\n\n\"Is everything okay?\" Jim asked, leaning on his elbow looking down at Jessica. \n\nIt was three in the morning and they were all lying in a jumbled mess on the mattresses in the living room. \n\nJessica had made it through the motions of singing and dancing without much effort. And then they'd gotten home and the sex had been great even if Angus was limited to using one arm. Jessica had managed to forget about the lie she was planning to pull on the men. But then, as they lay together in a mound, enjoying the afterglow, Scott had mentioned that Paul' men had come by the house earlier for an odd visit and Jessica almost hyperventilated.\n\n\"What time were they here?\" Jessica managed.\n\n\"Around nine. Look Jess, I'm sorry I said anything.\" Scott said, \"It was nothing really, just weird that's all.\"\n\nNine o'clock. She figured that was around the time Paul came to the bar. That jerk had sent his men to the house as insurance. \n\nJessica closed her eyes. Maybe she'd gotten in over her head. What if she lost the race? What would happen to the men?\n\n\"Jessica.\" Angus said and he had a tone to his voice that made Jessica's eyes snap open. \"I'm sorry about what I said earlier about ... her. I don't know why I have such a hard time sharing ...\"\n\n\"It's okay Angus.\" Jessica said reaching up for his good hand. \"Don't worry about it at all. I'm sorry I said anything.\" God she was an awful person. She had so many lies going on at the moment that she felt beyond guilty. How were the men ever going to trust her again?\n\n\"Jess ... what's going on? You sound ... nervous.\" Josh said.\n\n\"I do?\" Jessica asked surprised. Well, if she ever had any delusions about being a secret agent or spy in a future life, they were gone. She apparently was an open book.\n\n\"Guys, it's almost four in the morning and Jessica started her day yesterday at seven ... and it included parachuting, motor biking and God knows what else.\" Riley said. \"I think she may be tired.\"\n\n\"Yes ...\" Jessica agreed quickly, \"Yes, that's it, I'm tired, beat, wiped. Can we go to sleep?\"\n\n\"Okay ...\" Jim said slowly and Jessica could tell from his expression that he wasn't buying it.\n\n\"Oh Jess, we almost forgot to tell you. Leah called earlier and asked if she and the girls could have another shopping and spa day with you tomorrow.\" Scott said.\n\n\"Really?\" Jessica asked but her surprise sounded fake to her. Jim narrowed his eyes. \"I'd love that, if you don't mind?\" Jessica said.\n\n\"Not a problem.\" Angus said since it was his day with her, \"Maybe another jam session later that night. What do you think?\"\n\nJessica swallowed hard and felt like crawling in a hole. Angus was trying so hard to make her happy. Even the other men looked away, feeling for him as he struggled to make whatever he thought was wrong, right. \n\n\"Sure Angus, that'd be great. Thanks.\" Jessica said and then faked a yawn, \"Can we go to sleep now?\"\n\nEveryone settled down and despite Jessica's worries, she fell to sleep instantly.\n\nThe next day Jessica was more in control of herself. The men took that as a sign that she'd truly been fatigued but they were still worried that it could be something else ... like disappointment. They had conferenced while Jessica showered and realized that there were a few things they'd promised her that still hadn't happened. ",
        "The general consensus was that Jessica would be back to normal after what had been promised her was delivered.\n\nOne promise was Josh publishing his comic book. He'd submitted it weeks before but not told anyone. Expecting an answer any day, Josh took Jessica with him to the post office. He parked in front of the building.\n\n\"Be right back.\" Josh said and closed his door.\n\nAnother was the race with Ebony. They just hadn't gotten around to rescheduling it. That morning Scott announced that it was rescheduled for two days from then, and Jessica had shown the expected joy about it.\n\nAngus had decided to officially create a racing company. A company of two. He told Jessica he'd call it J and A for Jessica and Angus, and split the wins with her fifty-fifty. Jessica had been running trial heats, and doing really well. And to Jessica's joy but Angus' annoyance the woman who had approached Jessica earlier about racing, continued to do so. After a while Angus realized that this woman thought that having Jessica race for her would give Jessica a sense of girl power. Angus had experienced great satisfaction when he informed the woman that Jessica was part owner of the company and raced for herself. He was pretty sure he'd never seen a jaw hit the ground so hard before. But Angus hadn't booked her into a full race yet. He'd hesitated because even in the trials Jessica seemed almost too hungry for it. Ready to do anything to win. It had worried Angus at first but he finally concluded that Jessica was exhibiting signs of a great racer. So now, within a week, not only was Jessica going to race a horse, but a car too. \n\nJessica was excited about all the upcoming activities but even they couldn't wipe away the guilt she felt. Looking at the building that Josh had disappeared into she berated herself again. She was a bad, bad, wife. She was lying to her husbands. She contemplated what she could do about that. And it dawned on her that there was only one thing she could tell the men about. The bar, and what she did there. As far as the race went, she realized that they could never, never, know about it. They'd pick a fight with Paul and get themselves killed. Okay. Jessica felt better about that decision. Now she knew what she would and would not tell them. And the reason for not telling them about the race was good enough that Jessica could let the guilt about it go.\n\nThe bar though, she had to tell them about the bar and about Beth. But how? How would she tell them. Then she realized the only option she had was to go to the bar after the race. To go to the bar, text the men about where to find her and then just hope that what they saw would be enough to minimize the anger they'd feel toward her, and Jim. Jim. Crap. She'd have to get him to the bar too. It wasn't their normal night to go. Well, she'd text him too. It was the only way it would work. They had to see it with their own eyes, words wouldn't be enough. Suddenly Jessica realized that Josh was back. He slammed the door behind him and waved an envelope in front of her face.\n\n\"We did it ... We did it!\" Josh said, excitement oozing from every pore.\n\n\"Did what?\" \"My comic! Penthouse is going to publish it!\"\n\n\"What? What? Really?\" Jessica asked grabbing the envelope from Josh's hands.\n\n\"Dear Mr. Smith, we are pleased to offer you a two year one hundred thousand dollar contract to publish a series of your comics ...\"\n\n\"Mr. Smith?\" Jessica asked looking up at Josh with a smile. \n\n\"Too much?\" Josh asked. \"It's not like my first name is John ...\"\n\nJessica laughed and threw her arms around Josh.\n\n\"You did it, you did it, you did it!\" she peppered him with kisses. \"I knew you would! I'm so proud of you!\" \n\n\"I only did it because of you. I can't believe it! You and I will split the money!\"\n\n\"What? No. Josh, you wrote the comic, it's your money.\"\n\n\"I never would have if you hadn't pushed me to. So half is yours. No more arguing!\"\n\n\"Okay ... okay ...\" Jessica said with a laugh and kissed him some more. \n\n\"Hmmm.\" Josh said planting his hands on Jessica's head and holding it still for a long, tongue involved, kiss. \"You know, I need some new material for my comics ... why don't we start working on it now ... in the back seat.\" He tilted his head to the back of the SUV.\n\n\"In front of the post office?\" Jessica asked.\n\n\"Er, right. Okay, let's go find a back road somewhere.\"\n\n\"Okay.\" Jessica said, more than game. And they headed for the closest deserted road they could find.\n\nAfter having sex for the better part of two hours, Jessica and Josh finally went to the comic store that they'd wanted to shop at earlier. Finally by dinner time they returned home. Josh opened the door for Jessica, and she walked through and froze. The lights were out, candles decorated the entire room, and all the men except for Josh stood looking at her, in tuxedos. Jessica's heart, knees, and conscience melted in successive order. \n\n\"You guys ...\" she whispered. \"You guys! Everything is so, beautiful. And you guys ... you're so handsome! And ... yummy.\" \"I'm glad you think so.\" Angus said with a chuckle, moving to her and taking her hand, \"But this is the romantic, no sex night we promised you ages ago. So yummy, while flattering, is not exactly what we were going for.\"\n\n\"Sex free?\" Jessica squeaked. \n\n\"That's what the man said.\" Riley said, smiling a crooked and cruelly sexy smile.\n\nJessica turned to look at Josh who winked at her. He'd known it was going to be sex free but got his and her sex in. And Jessica was thankful that she'd gotten her rocks off because it would have been downright painful if she had to spend the night with the men looking like they were without any sexual release.\n\n\"Let's go get cleaned up.\" Josh said taking her by her elbow. \"And you can put your fancy dress on, I'll squeeze into my tux.\"\n\n\"You knew ...\" she whispered to Josh while they went down the hallway.\n\n\"Course I did. Why do you think I insisted on giving you all those orgasms, including the three in a row ... I mean other than the fact that I'm a considerate lover.\"\n\nJessica laughed. \"Thanks Josh. I think I'd go crazy tonight otherwise.\"\n\nJosh pecked her on the lips. \"Glad to be of service ...\"\n\nLater that night, Jessica twirled on the living room floor with Scott. It had been a spectacular evening. She couldn't believe how special the men were making her feel. They treated her like a princess. They'd pulled chairs out for her, stood before she did, sat after she did, they were completely debonair. \n\n\"I love you Jess.\" Scott said, kissing her on the lips, pulling her tight against him, but continuing to circle the floor.\n\n\"I love you too Scott. A lot. More than anything.\"\n\n\"Thanks Jess, ditto for me.\"\n\n\"And um, if you thought that there was a chance that maybe you were going to be mad at me soon, for an indeterminate amount of time is there something in particular you'd want me to do for you?\"\n\n\"Mad at you?\" Scott asked holding her away from him so he could look down at her. \n\nJessica nodded. \"Nothing serious. At least I don't think it'd be serious. But you know, maybe you won't want to look at me for a while ...\"\n\n\"Jessica, what the hell are you babbling about?\" Scott demanded. \"I'm always going to want to look at you.\"\n\n\"Okay. Then, can we kiss for a while?\" Jessica asked. \"No sex, just kissing?\"\n\n\"I'm game.\" Scott said and pulled her against him. Jessica melted against him and enjoyed Scott's tongue exploring her mouth. If he wasn't going to say what he wanted to do, Jessica decided to go with what she wanted.\n\nBy the time Riley cut in, Jessica was breathless.\n\n\"Hey you.\" Riley said pulling Jessica to him.\n\n\"Hey. Thanks for this evening. I love it.\" Jessica said.\n\n\"I'm glad.\"\n\n\"And, I'm sorry.\" \n\n\"For?\"\n\n\"Um. For anything that I have ever done to hurt you. And anything that I may do in the future ... like in the next twenty four hours or so ...\" Jessica added when Riley stared at her. \"Never mind.\" Jessica said. \"Can we kiss?\"\n\n\"Are you sure you're okay?\" Riley asked starting to look concerned. \n\n\"Great, great.\" Jessica said, panicking when Riley slowed the dance to a stop and looked at her. Jessica latched on to Riley's lips and melted against him. After a moment of hesitation, Riley began kissing her back. It didn't take long for Jessica to wish that they hadn't called off sex night.\n\n\"Hmmm, hmmm, hmmm.\" Jessica and Riley parted to find Angus standing next to them, clearing his throat. \"I thought I'd wait for you to finish but you weren't coming up for air. So ... may I?\" he asked Riley.\n\n\"Right ... thanks Jess.\" Riley gasped and went to get his glass of wine, downing it in one swig. \"How are we going to sleep tonight?\" he asked the others who were also drinking.\n\n\"I don't know, but after all the build-up we've been giving this, we better stick to our word.\" Jim said.\n\n\"Shit.\" Scott said, and watched Jessica melt against Angus.\n\n\"Jessica, can you accept that I just can't talk to you about ... her?\" Angus asked. He'd debated bringing her up again but he felt like he had to.\n\n\"Sure Angus. Sure. And, um, I'm sorry.\" \n\n\"For what?\"\n\n\"Nothing.\" Jessica said and then shrugged when Angus looked at her funny. \"Everything? Just, tomorrow, promise you'll remember that I said sorry, okay?\"\n\n\"Jessica ...\"\n\n\"Can we kiss now?\"\n\n\"Are you trying to distract me from some ...\" Jessica covered his lips with hers and slid her tongue between them.\n\n\"My turn.\" Jim said after Jessica and Angus kissed for a good fifteen minutes.\n\nAngus turned hoping Jessica didn't notice the bulge at the front of his pants.\n\n\"Okay, what's going on?\" Jim asked pulling Jessica to him.\n\n\"What do you mean?\"\n\n\"The guys are saying that you're apologizing to them for everything and nothing at the same time. Are you feeling that guilty about the bar thing?\"\n\nJessica exhaled. \"Yes. But I feel more guilty about Beth. Angus is going to be furious.\"\n\nJim nodded.\n\n\"And Jim, what if Angus and Beth breaking up was a mistake?\"\n\nJim did a double take. \"What are you talking about Jess?\"\n\n\"Do you really think that Angus would have broken up with Beth if he'd known the truth?\"\n\n\"Are you suggesting that Angus may want to go back to Beth when he learns the truth?\"\n\nJessica nodded and dropped her head.\n\n\"Are you worried that Angus will leave you for Beth?\" Jim demanded, lifting Jessica's chin so she'd look him in the eyes.\n\nJessica nodded.\n\n\"Have you been paying any attention at all to what Angus has been saying to you, and proving to you, over and over again over the past few months? Angus has completely changed ... for you. Not the kind of behavior usually exhibited by a man in love with someone else.\"\n\n\"But Jim, he's been operating under the wrong assumptions. He has no reason to hate Beth now. And ... I've known about this for almost two months now and haven't told him. What do you think he'll think of that?\"\n\n\"Jess ...\"\n\n\"And as much as I don't want to lose Angus, I want him to be happy Jim. But I'm scared that I won't be strong enough to do what's right. What if I make it harder on him?\" Jessica asked, tears welling to her eyes.\n\n\"Jessica, listen to me ... Angus is a grown man. He can make his own decisions now, just like he could have then. He obviously didn't dig far enough into everything that happened. He just chose to take what he saw on face value and crucify Beth for it. But he has come a long way since then. He's a very different man. And he loves you. He may be upset at first, but he'll get over it. Trust me. And he'll still want you. Understand?\" Jim asked, wiping the tears away with his thumbs.\n\nJessica nodded. Sniffling she leaned her face into Jim's chest. She considered apologizing to him in advance, for what was to come, like she had with the others but decided that she was a blubbering idiot at this point. And, given how involved he was in the bar and Beth fiasco, he of all people would have to understand what she did and why.\n\nInstead she looked up at him.\n\n\"Can we kiss for a while too?\"\n\n\"Thought you'd never ask.\" Jim said and set about making Jessica forget about why she was crying in the first place.\n\n\"May I?\" Josh asked, tapping on Jim's shoulder.\n\n\"Already?\" Jim asked.\n\n\"It's been half an hour.\"\n\n\"Oh, sorry. Thanks Jess.\" Jim said, kissing her forehead and switching off with Josh.\n\n\"Don't tell me that you expect me to be mad at you too.\" Josh said after looking at her for a moment or two.\n\n\"Um, well, maybe.\"\n\n\"Care to tell me what I'm supposed to be mad at you about?\"\n\n\"Well, I guess there are several possibilities.\"\n\n\"Seriously Jess? Me? The bastard rapist. Mad at you the sweetest, kindest, most loving person I've ever met?\"\n\n\"We'll talk again tomorrow.\" Jessica said, giggling despite herself. \"But for now ... kiss me?\"\n\n\"About time ...\" Josh said and devoured her mouth.\n\nAnother hour later and the candles were half burnt. The wine was almost all gone, and Angus and Josh had begun to set their bed up on the floor.\n\n\"Good night sweetheart.\" Scott said when Jessica emerged from the bathroom, her beautiful dress, gone, now clad in comfortable pajamas. Jessica climbed in under the blanket.\n\n\"We'll be with you in a minute.\" Riley said, \"Just need to change.\" And the men disappeared down the hallway. \n\nJessica snuggled down under the blanket and in moments was fast asleep. The men returned and arranged themselves around her.\n\n\"We can have sex in the morning, right?\" Angus muttered.\n\n\"Right.\" Riley agreed and soon they'd all passed out.\n\nBut the night wasn't a good one. Jessica kept having nightmares that the men were furious with her. That Angus accused her of lying about Beth so Jessica could keep him to herself. Jessica was devastated. She cried, and begged for forgiveness. She tried to explain things but they wouldn't listen. \n\nJessica awoke exhausted. And she found the men already awake, watching her.\n\n\"You were having nightmares Jess.\" Josh said and his tone and the haunted look on his face made it clear to Jessica that they thought they were the same dreams she'd had when they'd kidnapped her.\n\n\"Oh no. They weren't those kinds of dreams.\" Jessica said quickly, sitting up. \"Honest ... they weren't.\"\n\n\"You were crying Jess. And begging for forgiveness. And you kept saying please over and over again.\" Angus said.\n\nJessica nodded. \n\n\"They were just bad dreams.\" Jessica said, running her hand lightly on Angus' bandaged arm. Angus looked down at his arm.\n\n\"Were the dogs in them? Attacking you?\"\n\n\"No.\" Jessica said, \"But it was kind of that idea. Sorry if I kept you up all night.\"\n\n\"Not all night.\" Riley said, sliding his hand under the blanket and finding one of her breasts. \"Do you think some morning sex might help you feel better?\"\n\n\"Oh yeah.\" Jessica said and smiled. But Jim, Scott, Angus and Josh still looked at her with concern. \"Really, it will help. I'm sure being sexually frustrated didn't help me sleep better ...\" she added.\n\n\"Okay.\" Jim said, reaching for her other breast, \"But just remember the sacrifices that we're willing to make to help you out.\"\n\n\"Okay, I'll try.\" Jessica giggled as Josh stuck his head under the blanket and worked his way up Jessica's thighs.\n\nThe morning went by quickly. Great sex, a hard work out. Jessica put her everything into the fighting and felt the satisfied exhaustion of her muscles. She pushed thoughts of what was to come out of her mind as she got ready for the girls to come and get her. She just kept reminding herself... when her thoughts slipped in, that the men would never know about the race. That was the important thing. \n\n\"Are you sure you don't want to take the SUV?\" Riley asked, obviously surprised when Leah said they'd take her car.\n\n\"No, we're good Riley, really, thanks. See you later.\"\n\nJessica kissed the men good bye and got in the car, breathing a sigh of relief when they were finally on the road. \"Everything that you need is in the trunk.\" Sara said. \"The helmet. Your race suit. You can put it on before we get to the track.\"\n\nLeah snapped her phone shut. \"Corey is about to call the guys to tell them about the competition. He was waiting to hear that you'd left ... just in case they get overly cautious. You may want to turn your phone off.\" She said to Jessica. At just that moment it rang. Jessica looked at the call display ... it was Jim. Jessica pressed the power button.\n\n\"Thanks.\" Jessica said.\n\n\"No. Thank you.\" Amanda said, \"For doing this for the clan. No one wants another blood bath ...\" her voice trailed off.\n\n\"No biggy.\" Jessica said, \"This will be a cake walk. Really. It's just real important that the men don't find out. I'm afraid that may lead to a blood bath.\"\n\n\"Gotcha.\" Leah said. \"They'll never know.\"\n\nJessica nodded and relaxed into the car seat.\n\nA few miles from the track, Leah pulled over and Jessica dressed. She got back in the car, even putting her helmet on. She couldn't take any chances on being recognized.\n\nHalf an hour later Jessica was at the track, meeting the team. Leah and the girls stayed down at the garage, to avoid being seen also. But they could see the track from the garage door.\n\n\"Hey Jessica. It's good to have you on board.\" Kurt said. \"Guys, this is Jessica. She'll take point.\"\n\n\"What the hell? Some chick?\" A black haired, pock faced man said. \"No fucking way.\"\n\n\"Fucking way.\" Kurt said. \"Paul has made her the lead, and you'll listen to her.\"\n\n\"Forget it.\" Jessica said to Kurt. 'We don't need him. He can get himself killed if he wants to ... but the rest of us need to ride loose but in formation. Everyone has to have someone to guard.\"\n\nJessica looked at the remaining men, the black hair man shaking his head but not leaving.\n\n\"This is what I suggest we do.\" Jessica said moving to the blackboard and picking up a piece of chalk.\n\n\"God damn it, her phone's off.\" Jim said again, snapping his phone shut in anger and almost hurling it to the ground.\n\nAngus, Riley, and Scott also closed their phones.\n\n\"The others aren't answering either?\" Jim asked. The men shook their heads.\n\n\"Well, they went shopping. They probably turned off their phones on purpose.\" Josh said.\n\n\"I can't believe this shit.\" Riley said looking over the track. He finally dropped onto the bench. \"Thank God Jessica isn't here. Can you imagine if they decided they wanted her riding in this bullshit competition?\"\n\n\"It's kind of weird though, don't you think?\" Josh asked. \"The day we see Kurt at the track he mentions wanting her to ride to beat Anthony's riders, and all of a sudden the territory competition is a motor bike race? Seems off.\"\n\n\"Yeah. Seems Paul' sister didn't want her brother killing her husband and her husband killing her brother.\" Angus said.\n\n\"Speaking of which.\" Jim said, nodding at some seats closer to the track. The men looked down and saw the back of a man that they recognized as Anthony, sitting ramrod straight in the stands. Next to him was a slight figure. A woman. And she was holding his arm. And then to her left, sat Paul. And the woman was clutching his arm too.\n\n\"Great. We get to stare at them all afternoon.\" Scott grumbled.\n\n\"You do realize that if we off them both, right now. We'd save us all a lot of time.\" Angus said.\n\n\"As tempting as that is.\" Riley said, \"We're trying to simplify our lives, not complicate them. Let's just hope this goes the right way, and we can go home and fuck Jessica without so much as a second thought.\"\n\n\"And if it doesn't go the right way?\" Angus asked.\n\n\"We brought our guns, didn't we? But I doubt anything will happen here. Anthony won't make a play here, now. Just like Paul won't. It'll come later.\" Riley said.\n\n\"Hey.\" Corey said, sitting down next to Scott.\n\n\"Hey.\" Scott said, and nodded at Sean who sat on the other side of Corey. Both raised binoculars to their eyes. Suddenly a cheer went up as the riders came out."
    ],
    "authorname": "JadenL",
    "tags": [
        "owned",
        "gangbanged",
        "group sex",
        "master",
        "slave",
        "shared by men",
        "stockholm syndrome",
        "sex",
        "blowjobs",
        "authoritarian"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/lisa-ch-07b-jessica"
}