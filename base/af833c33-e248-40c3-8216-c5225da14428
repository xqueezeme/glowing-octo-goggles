{
    "title": "Colleen Ch. 03",
    "pages": [
        "Copyright &copy; 2007 Texas Refugee. All rights reserved. \n\nAuthor's Preface: Yes, I am well aware of the fact that it has been a year and a half since I submitted Chapter 2. But I told you before you agreed to go into this reader/writer relationship that I was lazy. There are parts of Chapter 3 that you will not understand unless you read Chapter 2 and there are parts of Chapter 2 that you will not understand unless you read Chapter 1. So here is what you need to do. Because it has been so long, go back and re-read Chapter 1 and then Chapter 2 (or read them for the first time if you haven't already done so,) before you read Chapter 3. Go ahead it will be fun&hellip;try and see if you can read all three chapters in one setting.\n\n I dare you.\n\nI double dog dare you.\n\n(Don't make me issue a triple dog dare.)\n\n~~~~~ * o0o * ~~~~~\n\n\"I'm ready for the rest of my birthday present.\"\n\nColleen closed the bedroom door behind her and watched at me lying on the bed. If I didn't love her so much I would have been terrified at the grin on her face. The look in her eye was that of a starving predator and I was tonight's entr&eacute;e. She slipped off her shoes and walked over to stand by the side of the bed looking down at my mid-section.\n\n\"Oh my, and you went to all the trouble of wrapping it too.\"\n\nI lay on the bed, hands clasped behind my head, completely naked except for a large red ribbon tied in a bow around my cock.\n\n\"I wonder what could be inside. I guess I better unwrap it.\"\n\nWith that she bent over and grabbed the end of the ribbon with her teeth. She raised her head to untie the bow and pulled the ribbon the rest of the way off with her hands.\n\n\"It looks absolutely lovely but what am I supposed to do with it?\"\n\nFrom the second she had told me earlier at the restaurant that she was not wearing any panties, my brain started pumping blood into my dick. At this point it was about to burst as Colleen slowly stroked it with her warm smooth hand. She said nothing, her eyes smiling as she waited for my answer.\n\n\"I don't know. It didn't come with an instruction manual.\"\n\nColleen turned her head slightly, looked at the alarm clock on the nightstand biting her lower lip, and then looked back at me. She climbed up onto the bed, straddling my ankles. She walked on her knees up my body until she was directly over my cock. Colleen bent over and placed her hands on either side of my head and whispered in my ear.\n\n\"I love you so much Bobby.\"\n\nColleen took a soft nibble of my ear lobe and began gently kissing down the side of my neck until she reached the crook of my neck and shoulder. She straightened back up then reached down and took hold of the hem of her dress. With agonizingly slow movements Colleen raised her dress until it was up over her hips and around her waist. Her silver stockings were thigh highs that were held in place by a large band of black elastic lace. This was in contrast to the creamy texture of her thighs and stomach. \n\nBy this time all of her pussy hair had grown back after having been shaved off for Brigid's birth. Once again there was the thick mass of dark silk threads that covered her pubic area and continued down between her legs. My cock had been hard since the restaurant and now I was about to pass out from lack of blood to my brain.\n\nColleen reached down between her legs and wrapped her fingers around my cock. My cock was so stiff that it almost hurt as she gently pulled back until it was pointing straight up towards her. She lowered herself until the tip of my cock came into contact with her pussy. She slowly rocked her hips back and forth, pushing my cock through the thick forest until I could feel the lips of her cunt. Still holding my cock, she slowly slid it back and forth against herself until I could feel the juice begin to drip out of her. Slowly her pussylips opened and I slid the tiniest fraction of an inch up inside of her.\n\nColleen kept her eyes focused on mine and continued to rock her hips, slowly working my cock deeper inside of her. I felt her cunt begin sucking on me as the head moved past her pussylips, following the path to its home. Colleen's eyelids made small fluttering movements as she pulled her hand away from my dick. With a sigh she relaxed her leg muscles and slowly let gravity pull her down forcing me further up inside of her. When I felt my balls nestled in the dense forest of her hair I knew that I was deep as I could possibly get.\n\nColleen stopped moving and was breathing deeply. She bent forward again, leaning on one arm. With the other hand she kissed the tips of her fingers then gently pressed them against my lips, slowly stroking my face then sat back up. \n\nShe began a small slow gentle rocking motion with her hips, back and forth, not even an inch in distance. I slowly slid my hands along the tops of her thighs. Colleen placed her hands on top of mine and slid one of my hands to the inside of her thigh and pulled it up until it was tangled in the thick mass of her hair. She pushed down on my middle finger until it lay between the lips of her pussy, rubbing against the nub of her clit. Colleen showed me the slow rhythm she wanted then let go. \n\nAs she continued the slow undulation of her hips, Colleen looked to the side and studied the clock again for a moment. She turned her face back to me and smiled. Still rocking back and forth, she raised herself ever so slightly and then lowered herself back down. Her cunt kept a slow rhythmic sucking, gently squeezing and releasing. I could feel the pulsating motions of her cunt walls against my cock.\n\nI raised my hips to drive my cock deeper into her as she pushed herself down. Her hips were constantly in an agonizingly slow movement, her cunt grasping and releasing my cock while my fingers slid around and against her clit. I placed my hands on her hips to pull her down tighter against me and began to force myself even harder and faster into her.\n\nColleen put her hands on my wrists and pulled my hands away. She was breathing deeply and her eyes were starting to glaze over when she looked at the clock again. She looked back to me and panted, \"Not yet&hellip;it's not time yet&hellip;slow down.\"\n\nShe stopped the movement of her hips but I could feel her increase the pressure of her cunt gripping my cock. Her silk clad thighs closed even tighter on my hips as she reached around behind and I heard the sound of the zipper on the back of her dress. Slowly the shoulder straps began to slide down her arms and the bodice of the dress gently fell away from her breasts. She pulled her arms free from the dress and pushed it down until it lay at her mid-section. The dress was now just a band of black velvet wrapped around her waist.\n\nColleen's breasts were full and heavy with milk for Brigid. The slightest movement, each breath, each twitch of her body as her cunt continued to suck my cock caused the breasts to ripple and wobble before my eyes. I raised my head up until I was close enough to kiss and lick along the side of each breast. Colleen put both of her hands on the back of my head and pulled me to her until my face was buried in the valley between those two glorious fountains of motherhood.\n\nDear God I love doing that.\n\nGently she pulled me away from her chest and quickly glanced at the clock. Slowly, ever so slowly she began the rhythmic rocking of her hips again, raising herself up on my cock and then sliding back down in an effort to push me even further, deeper inside of her.\n\nI could feel the pressure building in my balls, ready to explode large streams of sperm deep into my sister. The pace of pushing ourselves against each other was becoming more rapid. Colleen's breath was deep and heavy and her eyes were starting to become unfocused. Her head started wobbling around on her neck when she looked at the clock again. In a voice filled with frustration and anguish she said, \"Not&hellip;time&hellip;yet&hellip;oh God&hellip;\"\n\nColleen stopped all of her movement and looked into my eyes. Her look was one of hunger and need and she was almost incoherent.\n\n\"Not time yet Bobby&hellip;oh sweet Jesus I love you&hellip;\"\n\nAs her breathing began to slow down I made my cock twitch inside of her. She moaned and began the gentle undulation of her hips again. Again she started the torturously slow rhythm of our fucking, building up the tension inside of us both until we were both ready to explode. Again she looked at the clock and with voice filled with pain that came from deep inside of her soul she wailed, \"Not time yet&hellip;not time&hellip;\" and almost began to cry as she stopped all movement.\n\nIf I had been capable of rational thought at that moment I would have gotten up and thrown the clock out the window but the only thing my brain could process was my need to cum.\n\nThat was the pattern of our love making over the next hour. The slow gentle cadence of pushing our hips together as Colleen slid up and down my cock, gradually picking up speed almost to the breaking point and then stopping all motion just before the explosion when Colleen would look at the clock and her voice would weep as she moaned, \"Not time yet&hellip;\"\n\nOver and over we did this until I was ready to throw her onto her back and continue fucking whether she wanted to or not. I placed my hands on her hips and pulled down in an effort to shove my cock deeper inside of my sister when she looked at the clock and grunted, \"Now Bobby&hellip;now&hellip;it's time&hellip;put your sperm inside me&hellip;oh God yes cum inside me&hellip;\"\n\nThat was all it took. I don't know how many orgasms I have had in my lifetime, but none have ever been as intense as that one. So intense that it was almost painful.\n\nThe second Colleen's cunt felt my sperm rocketing out the end of my cock, it clamped down hard to squeeze the life out of it. Her thighs gripped me tighter as her hips began uncontrollable spasms and her body began to convulse. She frantically grabbed the pillow that was lying next to her and brought it to her face. She bit down hard and began screaming into the pillow in an effort to not wake the girls that were sleeping just across hall from us.\n\nColleen's body gave one last major shudder and then stopped all movement completely. The pillow fell from her hands and she slumped forward to lie on my chest. I wrapped my arms around her and held her close. Slowly the blood began to drain from my cock and return to my brain. The only thing I was physically capable of doing was the slow stroking of my hands on her back while her face was buried in crook of my neck. Gradually my heart rate began to slow down and the ringing in my ears stopped. \n\nMy hands slid up until I could cradle her head between my two palms. I kissed her on the lips and looked deep into her eyes. All of the love that we have for each other could be felt in that look.\n\n\"What the hell was going on with you watching the clock?\" I asked.\n\nColleen began to grin and then laugh. She placed her lips next to my ear and through the laughter she said, \"Let's just say that right now Mike and Jimmy are two very happy campers.\"\n\nColleen woke me in the middle of the night by pulling on me until I was laying on top her.\n\n\"What are you doing?\"\n\n\"I want to play with my birthday present again.\"\n\n\"Ok&hellip;but don't you dare look at the clock&hellip;\"\n\nI was down in the depths of a well deserved sleep when someone dropped a 20 pound sack of sugar onto my chest. The air rushed out of my lungs and my eyes popped open. There in front of me, no more that two inches away were the dark smiling eyes of Noelle. She threw her arms around my neck and began chanting half of her thirteen month old vocabulary.\n\n\"Daddy&hellip;DaddyDaddyDaddyDaddy&hellip;DADDY!\"\n\nShe bent her head down to give me a kiss and in the process smacked her forehead into the bridge of my nose. My eyes immediately unfocused and one eyelid slammed shut as I moaned out something that sounded like \"owgranabunakeek.\"\n\nNoelle began sliding away from me as Meghan grabbed her ankles and pulled her backwards on her tummy. When she was close enough, Meghan picked up her sister and held her on her lap. \n\nMy eyes were tearing as I struggled to sit up and look around. Colleen was still next to me but she was propped up by a large pile of pillows leaning against the headboard. She was smiling as she held Brigid to her breast and I could hear the quiet sucking noises as mother and daughter continued to cement their bond. Meghan and Molly were sitting at the end of the bed with their legs crossed Indian style. Noelle was settled into Meghan's lap, leaning back against her chest. She would occasionally bounce up and down while babbling something and then settle back down against her big sister.\n\nEveryone was smiling except for me. I was struggling to get my brain and both eyes to focus on the same thing while uttering a series of unintelligible sounds. I was finally able to wiggle and scoot around until I was sitting up and leaning against the headboard myself. By the time I got my body into a comfortable position the girls were snickering at my efforts.\n\n\"Mom, is daddy always this funny when he wakes up?\" Molly asked.\n\n\"Yes, he is and now you see what I have to put up with every morning,\" Colleen replied.\n\nBrigid had finished nursing so Colleen handed my daughter to me. I held her on my shoulder and was gently rubbing and patting her back. Brigid made a sound like a small hiccup and then let loose with a belch that was loud enough to rattle windows in the next block. This sent everyone into an explosive fit of giggles and laughter. Even Brigid had a smile on her face.\n\nAs everyone began to settle back down I looked at my family and made an executive decision.\n\n\"All right campers, everybody up. Girls, take your sisters and get dressed while your mother and I take a shower. We'll meet you at the front door in exactly thirty minutes. We're going to Waffle World.\" \n\nMeghan and Molly popped up and began shouting and jumping on the bed. Noelle just laid back laughing and clapping her hands.\n\n\"OK girls, get going. Let's get this show on the road.\"\n\nThe girls headed out of the bedroom, Noelle hopping while holding onto Meghan's hand and Molly holding Brigid on her shoulder.\n\n\"Bobby, we don't need to go out, I was going to&hellip;\"\n\n\"Nope, not going to happen,\" I interrupted Colleen. \"There's a stack of waffles out there with my name on them. I'm going to find them and eat them and not think twice about it.\"\n\nI got out of the bed and walked around to Colleen's side. I reached out and took her by the hand, tugging until she stood in front of me. She slid her arms around my waist and pulled me close, slowly rubbing her nipples against my chest.\n\n\"Watch it woman, don't get anything started. The girls could come back in here any second.\" \n\n\"Ok, but you're going to owe me big time tonight.\"\n\nI reached down and squeezed one of her ass cheeks. \"You know that I always pay my debts.\"\n\nHolding hands, we walked into the bathroom and got in the shower.\n\nMeghan and Molly had Noelle and Brigid dressed and were waiting for us at the front door by the time we came out of the bedroom.\n\n\"What took you guys so long? You said thirty minutes and we've been waiting forever. We're hungry.\"\n\nColleen leaned over and whispered loud enough for the neighbors to hear. \"We would have been here twenty minutes ago but your father couldn't make up his mind about his wardrobe.\"\n\nMeghan looked at me with total amazement. \"And that's what you picked out? Dad you need some serious help.\"\n\nI had grabbed the first pair of jeans and sweatshirt I could find. \n\nColleen was wearing my favorite pair of jeans, the ones that hugged her ass and thighs and always left me imagining naughty thoughts about my sister. She was wearing sandals that left her toes bare for me to see the red nail polish and a light blue scoop neck T shirt. She was still wearing the necklace and earrings that I had given her the night before. Meghan and Molly were buckling Noelle and Brigid into their car seats while I was locking the front door.\n\nAs I pulled the key out of the lock Colleen whispered in my ear.\n\n\"I'm still not wearing any panties.\"\n\n\"Wife, you're trying to kill me.\"\n\nColleen just smiled and pulled me towards the minivan.\n\nBreakfast at Waffle World was uneventful except when Noelle discovered that the metal tray on her high chair made an interesting sound when she slammed her spoon down on it. She found this so intriguing that she began slamming it down repeatedly until we had to take the spoon away from her. This brought a collective sigh of relief from the rest of the patrons in the restaurant. Noelle crossed her arms on her chest then stuck out her lower lip and pouted for the next ten minutes until Molly began poking her in her ribs and made her start laughing. \n\nWe finished eating our late breakfast and got out of the restaurant just as the lunch crowd started showing up. When we got settled into the van I asked the question, \"Where to?\" The vote was 5 to 0 in favor of the park (Brigid was abstaining because at two months she didn't care where we went.) \n\nIn the van we always kept one of Meghan and Molly's soccer balls and an old blanket that we used for picnics. After we got to the park, Colleen and I spread the blanket out in the shade of a tree while the girls began practicing some of their soccer drills. At the tender age of thirteen months Noelle was able to demonstrate that she had a firm grasp of the three basic fundamentals of soccer.\n\nOne - chase the ball until you collapse on top of it.\n\nTwo - grasp the ball firmly in both hands and throw it straight up in the air.\n\nThree - chase the squirrel that just ran in front of you.\n\nAfter an hour of chasing the squirrel and her two older sisters, Noelle toddled over and sat down next to me on the blanket. She very slowly crumpled over sideways until her head was in my lap, her eyes closed with a tiny line of drool escaping from the corner of her mouth. Colleen carefully picked up Noelle and laid her next to Brigid who was already passed out on the blanket on the other side of me. Colleen sat between my legs and leaned against me, her back against my chest and my arms around her as we watched Meghan and Molly play a pickup game of tag with several of their friends from school.\n\nWhen the girls began to show signs of running out of steam, we packed up and went home. After getting a snack and resting for a few minutes, Colleen stayed home with Noelle and Brigid while I took Meghan and Molly downtown to the library so they could get the books they needed for their school projects. By the time we got back, Colleen was minutes away from having dinner ready for us.\n\nIn twenty-four hours we had gone from a limousine and dinner at Gypsy Sally's to hotdogs and chips at the kitchen table. If I am given the choice I will choose Caf&eacute; O'Conner every time. \n\nAfterwards I cleaned up the kitchen while Colleen supervised personal hygiene activities for the girls. Finally all four kids were tucked into bed and it was time for Colleen and I to turn out the lights and head for bed ourselves.\n\nWith the door firmly closed we began to undress each other, all the while kissing and gently stroking, caressing. Colleen folded the sheet and covers back and then lay down with her legs spread. I carefully lay on top of her, my hips settling between her thighs.\n\nLast night the sex had been about celebration, celebrating Colleen's birthday, celebrating the closeness of family, celebrating the end of two months mandatory celibacy. As I slowly slid inside of her, we recognized that tonight was about experiencing the love just between Colleen and I. There were no wild gyrations or bouncing around on the mattress, just slow and gentle movements and soft murmurs of unconditional love for each other. When our orgasms came they were slow, small and barely noticed, but the emotional exchange was greater than anything that happened the night before.",
        "The next morning was Sunday and we actually made it to church with five minutes to spare.\n\nFollowing her birthday, Colleen began spending a lot of time talking with Sharon and Mi Lin. At first I didn't pay any attention to it but when I saw the phone bill and the long distance charges were almost ten times higher that they were the month before, I knew something was up. When I asked her about it, she just gave me one of her half smiles and was very evasive saying, \"Oh you know, some times I just feel like talking to my sister-in-law.\"\n\nTwo months after her birthday I was woken up by Colleen getting out of bed. With one eye barely open I glanced over at the window to see that the sun was just beginning to come up. Colleen went into the bathroom and I heard the now all too familiar sounds. I lay on my back staring up at the ceiling waiting for her to come back to bed. She came in and sat on the edge of the bed and I reached out to place my hand on the small of her back.\n\nAfter a moments' pause Colleen scooted back then twisted around and cuddled against me, her head on my chest and my arms around her. Her head was just below my chin so I bent my neck slightly and kissed her on the top of her head. Her lips were against my chest and I could feel her begin to smile. After several moments I whispered.\n\n\"Pregnant?\"\n\n\"Yep.\" She whispered back.\n\nI continued slowly stroking her back and then whispered again, \"Ok, I'll take the girls to school this morning.\"\n\n\"Thanks,\" she replied.\n\nAfter several minutes Colleen spoke.\n\n\"Don't.\"\n\n\"Don't what?\"\n\n\"Don't take the girls to school today.\"\n\n\"Why not?\"\n\n\"Today is Saturday and they'll be the only ones there and the cafeteria will be closed and the entire world will know about it after they write their Mommy and Daddy Dearest books.\" \n\n\"Ok,\" I said as I kissed the top of her head again. \"Do you want a test kit? I think we have one left over in the bathroom cabinet.\"\n\n\"No, there's no point. I'll call Dr. Chan on Monday for an appointment.\"\n\n\"Ok,\" another kiss on the top of her head. \"Go back to sleep.\"\n\nColleen lay still for a second and then turned over onto her side, her back to me. She reached back and took hold of my wrist, pulling on my arm until I was lying spooned against her, my arms around her just below her breasts. In unison we quietly said to each other, \"I love you,\" then we both faded off to sleep.\n\nA couple of hours later we were up and had breakfast with the girls. Afterwards I was sitting on the couch in the livingroom with my cup of coffee reading the morning paper. The weather was nice so Molly took Noelle out to the backyard for a little while. Meghan was heading out to join them when she stopped and looked through the doorway into the kitchen. She walked over and hugged me then kissed me on the cheek. She put her finger against her lips in a signal for me to be quiet then took my hand and pulled me after her. When we were in the place where she had been standing before, she signaled again to stay quiet and pointed into the kitchen.\n\nColleen was standing in front of the kitchen cabinets pulling out the ingredients to make a batch of oatmeal cookies, a particular favorite in our household. She had her gentle half smile and was softly humming to herself. Meghan tugged on my arm until I bent over so she could whisper in my ear.\n\n\"Isn't mom beautiful? I think you make her happy.\"\n\nThat said, Meghan turned and went to join her sisters.\n\nI looked back into the kitchen and watched Colleen. Meghan was right; her mother was beautiful, so beautiful it literally made my heart ache. I must have made a sound because Colleen turned her head and looked over her shoulder. Her smile got just a tiny bit bigger.\n\n\"What? Did you need something?\"\n\n\"Yes&hellip;I do.\" I walked into kitchen and stood in front of her. \"I need this,\" and kissed her. \"You've been ignoring me and I haven't had a kiss in at least twenty minutes.\"\n\nColleen placed her hand against my chest and laughed as she gently pushed me away.\n\n\"Get out of here and let me get my work done.\"\n\nWhen I turned around to go back to the livingroom, she reached out, pinched my butt and said with her half smile, \"We'll take care of this later.\"\n\nOnce the cookies were in the oven, Colleen came into the livingroom and pulled the newspaper out of my hands. She turned sideways and sat in my lap with her arms around my neck and my arms around her waist. She gave me a little kiss on my ear lobe and said, \"Hey, you know what? If this one is another girl, you'll be able coach your very own women's basketball team.\"\n\n\"Well, if she's can't pass the ball any better than Noelle, we'll never make the playoffs,\" I told her as I kissed along the side of her neck.\n\nActually the odds were pretty good that we would have another girl. Jimmy had two children &ndash; daughters. Mike had three children &ndash; daughters. Colleen and I had four children &ndash; again, daughters. Mom had nine grandkids, not one grandson. This didn't bother any of us except when it came time for dad to deal with the public restrooms. Why can't those kids ever go before we leave the house?\n\nMonday morning I passed Miss Jennings' desk on my way into my office. She stuck out her arm and handed me my cup of coffee without looking up. It doesn't matter what time I arrive in the mornings, Miss Jennings is already at her desk and hands me my coffee as I pass by. I have tried varying my arrival time by as much as an hour either way&hellip;unannounced&hellip;I have even tried sneaking in the back door&hellip;and she is still there with hot coffee.\n\nI sat at my desk and was studying my appointment calendar when Miss Jennings came in and dropped some papers into my in-basket. She was about to turn and leave when she looked at my face and did a double take. She placed both her hands on the edge of my desk and leaned over to take a closer look.\n\n\"Jesus, Robert, you just can't keep it in your pants, can you. Honestly, I don't know how Colleen puts up with you.\"\n\nHow in the hell does she do that?\n\nI opened my mouth to speak but she held up her hands to stop me.\n\n\"I know...I know, I won't say anything but have you guys EVER talked about birth control?\"\n\nThen she turned and went back to her desk.\n\nThere was something different about Colleen being pregnant this time. I couldn't put my finger on exactly what it was, just different somehow. When Colleen was pregnant the first time with Noelle we were ecstatic with joy and anticipation. I was so excited I wanted to do back-flips all the time. The second pregnancy came as such a shock to us that we were both in a state of confusion for weeks after we found out. And now a third pregnancy&hellip;\n\nEverything about it had a feeling of&hellip;I don't know, maybe predestination is the only word to describe it. It felt as though this is the way the universe wanted things to be. We had a sense of serenity, of contentment almost to the point of casualness about the whole thing. Don't get me wrong, I was excited and very, very happy, but there in the background was a voice saying, \"Yes, but don't worry, this was meant to be.\"\n\nJust like before we waited awhile before telling anyone about being pregnant. But by three months we couldn't put it off much longer and as always we started with the kids. We flipped a coin and Colleen won (or lost depending on your perspective) and got to tell Meghan and Molly. Noelle and Brigid's language comprehension skills were not advanced enough to understand just yet.\n\nOne evening after diner, Colleen brought out the lemon meringue pie again. She set the plates down in front of us and then sat down in her chair with Brigid in her arms. Meghan and Molly looked down, staring at the pie and then looked up at each other. Noelle watched this from her high chair, leaned over and stared at their pie just like her sisters then looked at their faces when they looked up. In unison all three kids turned and looked at me then Colleen with questions written all over their faces.\n\nColleen opened her mouth to speak when Meghan raised her hand just like she would in school. Colleen looked at her for a second and then said, \"Yes Meghan?\"\n\n\"Mom, are you pregnant again?\"\n\nMeghan, Molly and Noelle sat staring at Colleen, waiting for her answer. Colleen was caught off guard and had a startled expression on her face.\n\n\"Uh&hellip;yes, I am.\"\n\n\"OK\"\n\nMeghan and Molly looked at each other again then shrugged their shoulders and began to eat their pie in silence. After a few moments Molly looked up at me and quietly said, \"Dad, it's OK if we have a brother this time.\"\n\nOur kids will always amaze me.\n\nNext was telling Mom and the twins. When I brought it up, Colleen got her slow, soft smile and said, \"Don't worry, I'll take care of it.\"\n\nThe next day when Colleen was kissing me good-bye at the door in the morning she informed me that she was going to call mom and give her the news. Just before lunch Miss Jennings stuck her head in the door and said, \"Your mother is on line 6.\"\n\nI picked up the receiver but before I could say anything Mom spoke. \"Robert, this is your Mother.\"\n\nThis was not a good sign. \n\nMom only calls me Robert when she is upset; and when she identified herself as my mother I knew the ship I was sailing was going down fast.\n\n\"What exactly do you and your brothers talk about when no one else is around?\"\n\nMy brain was scrambling to make sense out of that question.\n\n\"Is something wrong Mom?\"\n\n\"I didn't say anything was wrong, just that you and your brothers have a very strange sense of humor.\"\n\n\"Mom you're losing me here. What are you talking about?\" \n\n\"Sharon and Mi Lin are here with me and I just got off the phone with Colleen. How long have you boys been planning this?\"\n\n\"Planning what?\"\n\n\"Making your wives pregnant on the same night?\"\n\n\"WHAT?\"\n\nIn the background I could hear Sharon and Mi Lin giggling.\n\n\"Mom, I don't know what you're talking about. Are you saying that Sharon and Mi Lin are pregnant?\"\n\n\"Of course they are. Now which one of you boys first had this bright idea?\"\n\n\"This is all news to me.\"\n\n\"Are you saying that you didn't plan this?\"\n\n\"If this was planned I had nothing to do with it...and tell them to stop laughing so loud, I'm having trouble hearing you.\"\n\nThere was a moment of silence and then Mom said, \"I have to call Colleen back.\" \n\nI could hear hysterical guffaws in the background then a click followed by a dial tone. I sat paralyzed at my desk staring at the receiver in my hand.\n\nWhen I got home after work that day, I found Megan and Molly on their hands and knees in the dining room chasing Noelle who was laughing and running around the chairs and under the dining table. Brigid was sitting in her highchair with a pacifier clinched between her gums, watching all the action taking place in front of her. She looked like the line judge in some obscure game that only children could understand.\n\nThose that were capable of speech yelled, \"Hi Daddy.\" Noelle darted out from under the table and hugged my knees before running back under the table.\n\n\"Hi girls, where's your mother?\"\n\n\"She's working; we're watching Noelle and Brigid until dinnertime.\"\n\nI headed down the hallway towards the back of the house. Colleen had converted the small bedroom across the hall from ours into a small studio where she could work on her illustration projects and still be close at hand to keep an eye on the kids. The door was open and I stopped to watch her at work for a second before I interrupted her. \n\nShe was sitting on her stool with her back to me, leaning over her drawing table. She sat up and put her hands on the small of her back and pushed in an effort to get her spine into a straight line up and down. When she did this I walked in and put my arms around her from behind and rested my chin on her shoulder. She turned her head slightly and gave me a quick kiss on the cheek.\n\n\"Hi sweetie, I didn't hear you come in.\" She glanced at the clock on the wall as she stood up. \"Oh Lord, I didn't realize it was so late, the girls are going to be staving.\"\n\nColleen started to pull my arms from around her waist but I kept them there so she couldn't get away. I slid one hand down to her lower belly and started to slowly stroke the small bump that was growing there. You could only see the bulge if you knew to look for it, but I loved to touch and feel what would soon be our next child. I nibbled along her neck for a moment before I whispered into her ear.\n\n\"I doubt the girls are in danger of passing out from lack of food any time soon.\"\n\nI kissed along the other side of her neck before I spoke again.\n\n\"I had an interesting phone call from Mom this morning.\"\n\nI could hear the smile in Colleen's voice as I continued kissing towards her ear.\n\n\"Is that so...what did she have to say?\"\n\n\"Turns out that Sharon and Mi Lin are both pregnant too. You wouldn't know anything about that would you?\"\n\n\"I don't know...I might have heard a rumor to that effect somewhere. Why do you ask?\"\n\n\"Mom accused me and the twins of planning this...I don't remember exactly...she may have used words like sick, and what was that other one...oh yeah, perverted.\"\n\nColleen gave a soft giggle and pressed back against me. My other hand slid up her chest until it was caressing and gently squeezing her breast.\n\n\"I assured her that I was still her baby boy and didn't know anything about where babies come from. I always thought they came from the cabbage patch. Do Mike and Jimmy know any thing about this?\"\n\nColleen turned around inside my arms until she was facing me. She put her arms around my neck and gave me a quick kiss before answering.\n\n\"They do now.\" Colleen punctuated this with another kiss.\n\n\"So neither one knew about the other's wife being pregnant?\"\n\n\"Nope, not until today; just like you.\"\n\n\"And what you're saying is that Mom was right. This group pregnancy thing was planned all along, just not by her sweet and innocent sons.\"\n\n\"Well DUH.\" Colleen pulled her head back with a look of concern on her face. \"You're not upset are you?\"\n\n\"Hardly...\" this time I kissed Colleen. \"...is it safe to assume that you and Sharon and Mi Lin came up with this little plan all on your own?\"\n\n\"Actually Sharon and Mi Lin had already decided to do it before they talked to me. Sounded like the thing to do at the time so I said 'what the hell,' count me in.\"\n\nI couldn't stop myself from grinning. I already knew the answer to my question but I had to ask it anyway.\n\n\"And exactly when did all this planning take place?\"\n\n\"My birthday party at Gypsy Sally's. Remember when we took so long in the restroom?\" She put her lips next to my ear and whispered. \"Now you know why girls go to the restroom in a group.\"\n\nColleen gave me a short kiss under my earlobe, then took me by the hand and led me into the kitchen so we could start fixing dinner.\n\nOne Tuesday night we decided that we needed to have some grown-up alone time for ourselves. When there are this many kids in the house you have a constant craving for adult conversation with your lover. Debbie the teenager across the street was available to sit with the girls so we headed out for dinner.\n\nWe didn't have to discuss where to go, it was the Shanghai Garden. The restaurant was the scene of our first date and had become our favorite destination for date nights. Just like the first time, the waiter was showing us to our table, Colleen following the waiter and me following behind, watching Colleen's backside. She was about seven months along; her stomach was huge and her hips had begun to widen but she had not yet reached the waddling stage. Once again I was reminded of what I had observed on our first date.\n\nMy sister has a fantastic ass.\n\nAfter dinner we were relaxing over coffee and talking. The conversation was meandering all over the map when it ventured into the subject of our dating experiences in high school. We pondered what the reaction would have been back then if we actually had dated each other...probably not very positive. But according to Mike, everyone in school thought we were doing it anyway, so it probably wouldn't have mattered.\n\n\"Bobby, I know that I had a lot of dates, but they never went any where. I never had what you could call a real boyfriend, just guys that would take me out a couple of times and then move on to someone else. I bet I was the only girl in high school that never got taken out to Miller's Pond.\"\n\nMiller's Pond was a small body of water outside of Santa Teresa that was somewhere between a large pond and a small lake. Every Friday and Saturday night all of the available parking spaces would be taken by cars filled with teenage couples and steamed up windows. It was estimated that Miller's Pond was responsible for half of the teen pregnancies in Santa Teresa.\n\n\"Of course you didn't, no guy in his right mind was going to take you Miller's Pond.\"\n\n\"Was I that ugly?\"\n\n\"No! You were gorgeous. It's just that none of the guys in school had a death wish.\" \n\nColleen was frowning.\n\n\"What, were they afraid I might have cooties?\"\n\n\"Of course not.\"\n\nColleen was beginning to show her irritation.\n\n\"Then what was it? Is there something you're not telling me?\"\n\nI had to laugh.\n\n\"You mean you don't know?\"\n\n\"Bobby, you had better tell me right now what you're talking about or you're going to regret it tonight when you try to go to bed.\"\n\n\"You don't know, do you? Everybody else in school knew.\"\n\nColleen had the same expression on her face that Mom always had just before she lost her temper.\n\n\"Bobby, I'm going to count to three and then...\"\n\n\"Ok, just calm down. No guy would take you to Miller's Pond because they were all scared to death of Mike and Jimmy.\"\n\n\"WHAT!\"\n\n\"I'm guessing that means that you don't know about Butch Woodcock.\"\n\nColleen sat back with a confused look on her face.\n\n\"Butch Woodcock? Are you talking the about that jock from high school?\"\n\n\"That's right, he was a senior when you were a freshman. Do you remember what happened to him?\"\n\nColleen knitted her eyebrows together as she thought.\n\n\"I think I remember. He was a quarterback and had a scholarship to one of those big name football schools then he got beat up by a gang from another school. His knee was banged up pretty bad and he lost the scholarship. The last I heard he was working on his dad's dairy farm.\"\n\n\"Yeah...only the other school was the junior high and the gang was Mike and Jimmy.\"\n\nColleen sat with her mouth open in astonishment.\n\n\"Why would they do that?\"\n\n\"Butch was an asshole. He was bragging to the football team and all of his friends that he was going to take you to the homecoming dance then out to Miller's Pond and turn you into his personal slut. Mike and Jimmy found out about it so one evening after practice they explained to him that was not the sort of thing they wanted to hear about their sister.\"\n\n\"Why didn't Mike and Jimmy get into trouble over this?\"\n\n\"Because Butch didn't want any one to know that a couple of eighth graders beat the crap out of him. So he made up the story about the gang, but everyone knew anyway. Once the story got around, every guy in school knew what would happen if they didn't show you a whole lot of respect. They didn't care who you went out with but anybody that tried any funny business was dead meat. I'm surprised you never found out.\"\n\n\"And you knew about all of this?\"\n\nI was a little sheepish when I answered her.\n\n\"Well, I guess you could say I was sort of a lookout for them...and I might have kicked him the balls once or twice. But Mike and Jimmy did most of the work.\"\n\nColleen smiled then leaned over and patted my cheek.\n\n\"My big strong hero.\"\n\n\"Besides, I don't know why you're complaining. I never got to take a girl to Miller's Pond either...and it wasn't because I didn't ask.\"",
        "Colleen sat back in her chair with a smile and began to laugh. Her laughter made me smile along with her.\n\n\"What's so funny?\"\n\n\"It's the irony of it all. I told the cheerleading squad that I would hunt down and scratch out the eyeballs of any girl that went to Miller's Pond and defiled my innocent brother.\"\n\nColleen had a thoughtful look on her face.\n\n\"Funny thing is, I only said that about you, not Mike or Jimmy.\"\n\nWe were both sitting quietly, contemplating what we had been discussing when an idea began to form in my mind. I looked at Colleen and almost telepathically I knew that she was having the same thought. She raised her eyes and looked directly into mine. Her small smile began to grow until it was spread across her face and up into her eyes.\n\n\"Are you thinking...\"\n\n\"...the Bluffs.\"\n\nI stood up and threw a fistful of money on the table.\n\n\"I'll bring the car around. Call Debbie and tell her we'll be an hour late...no, better make two hours...oh hell, just tell her we'll be late.\"\n\nThe Bluffs was San Miguel's version of Miller's Pond. Outside of town was an old farm road that was lined with large oak trees. At one spot there was a break in the line of trees and the ground fell away sharply, almost straight down about twenty feet. At this particular location there was enough room for about ten or twelve cars to park and look out at the lights of San Miguel in the distance.\n\nIt was very popular with the high school crowd.\n\nWhen we pulled up to park at the Bluffs we were pleased to see that we were the only couple there. Colleen looked around with a grin and muttered, \"School night.\"\n\nShe looked at me expectantly. \"What do we do now?\" she questioned.\n\n\"How am I supposed to know? I've never done this before.\" I thought for a second. \"How about a kiss? You can never go wrong by starting with a kiss.\"\n\n\"Works for me. Come here baby,\" she said as she started to slide her arms around me. We got only as far as touching lips when we both pulled back.\n\n\"Just a second, let me get this out of the way.\"\n\nColleen leaned back and I pushed the center arm rest up and into its' place between the two seat backs. Once again we came together with our arms around each other and moved in for a kiss when Colleen yelped.\n\n\"O-W-W-W!\"\n\n\"What?\"\n\n\"The gearshift just poked me in the stomach...see if you can turn a little more sideways and scoot closer towards me.\"\n\n\"Can't, my legs are trapped under the steering wheel.\"\n\n\"Well this is not working. Why did you have to buy a Japanese car?\"\n\nWe sat back in frustration. I was trying to visualize the correct positions our bodies would have to be in to achieve this endeavor when I looked at Colleen. We both said the same thing in unison.\n\n\"Back seat.\"\n\nI got out of the car and went around to the passenger side; lately I had to help Colleen get in and out of the car. We both stood at the open rear door looking in.\n\n\"Now what?\"\n\n\"One of us has got to get in and lay down...you do it.\"\n\n\"Me? Why me?\"\n\n\"Because dear brother, you know that you can't get far enough inside me any more unless I'm on top. Now get in there before I loose interest. I'm getting cold standing out here.\" Colleen issued this last command as she stood stroking her distended belly.\n\nI backed into the open car doorway and sat down, then leaned back and scooted towards the other side of the car. When I was far enough in I lay the rest of the way down and with a loud thump and a muffled groan I smacked the back of my head on the armrest.\n\n\"Are you ok in there?\"\n\n\"I'm alright but let's get this show on the road. Just remember we're paying Debbie by the hour.\"\n\nColleen crawled into the car headfirst and wiggled forward until she was lying nose to nose on top of me. She put her lips against mine then her tongue slithered out and began exploring the inside of mouth. My left arm came up and embraced her, stroking her back and caressing her ass. My right arm was pinned between my body and the back of the seat. Colleen pushed her hand between us and gently stroked the front of my slacks. My cock was standing rigid by this point. \n\nColleen brought her hand up a few inches and began to fumble with my belt buckle. After several very unsuccessful attempts to undo my pants she said, \"There's just not enough room. I'm going to back out and you pull your pants down.\"\n\nOnce she was out she bent over at the waist and peered in to watch what I was doing. I undid my belt, the buttons on my pants and pulled down the zipper. I raised my butt off of the seat and begin to shove my slacks and jockeys down my legs. When I got them as far as my knees, Colleen stuck her head in and started to crawl back on top of me. She gave me a long and deep kiss and began moving her hips around to find the best position when I screamed.\n\n\"STOP! GET OFF ME QUICK!\"\n\nColleen scrambled backwards until she was out of the car and looking back in at me.\n\n\"What? What happened?\"\n\nI raised my butt up and began to feel around underneath. After a second I found it. It was a large narrow piece of plastic that was wedged down between the seat and the back sticking straight up. I yanked it free and stared at it for a moment before I handed it to Colleen.\n\n\"Here...Barbie just tried to shove her head up my ass.\"\n\nColleen looked at the doll in her hands. \"Why that cheap slut. I have a good mind to tell Ken what a tramp his girlfriend is.\" She tossed the doll onto the front seat. \"Thanks, Molly's been looking for that all week.\"\n\n\"Considering where it's been you should probably soak it in some disinfectant for a while before you give back to her.\" I was gingerly massaging my ass check where I found a large dent in my skin.\n\nOne more time Colleen began her entry to the backseat. She was part way in when she stopped and backed out. This time I asked the question.\n\n\"What now?\"\n\nIn the moonlight I could barely see the smile on her face.\n\n\"Just thinking ahead this time.\"\n\nColleen raised the hem of her skirt up over her hips. She hooked her thumbs into the waistband of her panties and began to wiggle her hips as she worked them down her legs. When they were at her ankles she stepped out of them and picked them up from the ground. Given her lack of balance that was caused by her large stomach, this was no mean feat. She balled up the panties and tossed them onto the front seat on top of Barbie. Colleen left her skirt up around her hips and crawled back on top of me.\n\nWith a grin on her face she said, \"I think we're ready to do this now.\"\n\nColleen was finally in place on top of me and with some strange twisting and reaching behind her she managed to get the car door shut. She settled her hips against mine and my cock that was still hard as a board could feel her thick mat of hair. She wiggled her hips until my cock slipped up between her thighs. Slowly she began humping her ass backwards until I felt the tip of my dick start to slide between the lips of her cunt. With one last push of her hips backwards I was buried to the hilt inside of her.\n\nMy neck was bent, my head on the armrest. My knees were going straight up with my heels almost touching my ass, toes touching the door. Colleen's knees were almost in my armpits and her ass was wedged into the angle formed by my hips and thighs. Very slowly she began to rock her hips up and down, and side to side. This time I had kept my right arm out so that I would be able to use it. Even with Colleen's huge belly I could still get my arms around her...but just barely. I tried to push my hips up in an effort to drive my cock deeper into her but I was pinned in so tightly that I wasn't having much luck. We were jammed together, we couldn't move and I was starting to get a cramp in my right leg.\n\nThis was one of the greatest sexual experiences of my life.\n\nThe only movement was the rocking of Colleen's hips and the flexing of her cunt muscles as it sucked and pulled on my cock. The slightest movement sent shock waves of pleasure racing up my spinal column to my brain and looped back down to my testicles that were now trying to crawl up inside Colleen's cunt all by themselves. Colleen was moaning into my ear as she began experiencing the same intense sexual pleasure. Even though her hips could only slide up and down on my cock an inch or less, she began increasing the cadence of her movements. Soon we were vibrating at ninety miles a minute until we both screamed out \"OH FUCK\" in an explosion of orgasm. My balls were pumping sperm out the end of my cock toward Colleen's womb that was already occupied by our baby.\n\nEvery muscle in our bodies contracted and we lay rigid, smashed together in the back of the small car. Gradually we relaxed, melting together and I could feel the mixture of my sperm and Colleen's juice begin to ooze out of Colleen's cunt and around my cock that was still stuffed up inside of her. Colleen was giving me small delicate kisses on my neck and face then whispered in my ear.\n\n\"Damn, if I had known it would be this good I would have dragged you out to Miller's Pond myself when we were in high school.\"\n\n\"I would have been the happiest boy in the freshman class.\"\n\n\"I would have made a permanent reservation for a parking spot and had you between my legs every night...oh Jesus, now I'm talking like a slut...I'm as bad as Barbie.\"\n\nI gave her a kiss on the end of her nose. \"Sweetheart, nobody can be as bad as Barbie.\"\n\nAfter several minutes of wiggling around and breaking the plastic cover on the dome light with my elbow, Colleen and I were sitting upright in the backseat putting ourselves back together. Colleen rose up a fraction of an inch and was able to work the hem of her skirt back down over her ass. I pulled my pants up and got them fastened but I couldn't find where my belt had gone.\n\nWe were sitting there in the dark, in the back seat of my car, resting, catching our breath and letting our heart rate drop back down to normal. My arms were around Colleen as she leaned against me. She turned her head towards me and gave me a gentle kiss.\n\n\"Bobby...\"\n\n\"Yeah?\"\n\n\"Have I ever told you I love you?\"\n\n\"And you waited all this time to tell me? You could have at least...\"\n\nI didn't finish my sentence because she had slid her tongue into my mouth. We spent the next ten minutes enjoying some plain old fashioned necking and fondling of each other. The interior of the car was suddenly filled with a bright light and there was a sharp rap on the window of the door next to me.\n\n\"Sheriff's Department, would you step out of the car please.\"\n\nI very nearly wet myself.\n\nI got out the car and stood next to the door. There were two patrolmen standing there, their flashlights shining as bright as air raid searchlights. Colleen had one leg out of the car when the officer spoke.\n\n\"You can stay inside the car miss.\"\n\nColleen pulled her leg back in and sat still. The officer shone his light up and down my body and as he did so I looked down at my disheveled appearance. My collar was unbuttoned and the tie was shoved to one side. The shirt was completely wrinkled and the shirttail was half way tucked in the front and hanging out in the back. My belt was missing and my pants had started to sag down around my hips. The zipper on the fly was partway down and a corner of the shirt was sticking out.\n\n\"You folks having any trouble here?\"\n\n\"No, we just stopped to see the lights of the city. Never been here before and thought we'd stop see what it looked like.\"\n\n\"I see. May I see some identification please?\"\n\nI pulled my wallet out of my back pocket, fumbled around with it then handed my license to the officer. He shown his flashlight on the license, up into my face and back down to the license again.\n\n\"Mr. O'Conner are you aware that...wait a minute...Robert O'Conner...I know you. You're Sergeant O'Conner's brother. And the young lady in the car is...?\"\n\n\"My wife.\"\n\nThe patrolman switched off his flashlight. In the moonlight I could see a smile on his lips and after a moment he handed the license back to me. Trying to suppress a laugh he said, \"You folks be careful out here, we don't want any accidents to happen...\"\n\nHe looked over at the open car where his partner's flashlight still shown on Colleen. Her face was hidden by the roof of the car but her seven month pregnant mid-section was shining like a beacon. He turned back to me to finish.\n\n\"...but we may be too late for that. Phil, there's nothing here for us, let's go.\"\n\nAs the two men walked back to their patrol car I could hear them talking quietly to each other then start laughing as they got in. By this time Colleen had gotten out of the car and was standing next to me. We stood in the moonlight and watched as the car pulled back onto the road and continued off into the night. We turned to face each other and Colleen slid her arms around my waist. \n\nWith a kiss she said, \"The next time we come up here we're bringing the minivan.\"\n\nThe next time?\n\nThe next morning I got into the office and sat at my desk with my cup of coffee. I heard a noise and looked up to see Miss Jennings standing in the doorway with a panicked look on her face.\n\n\"The Sheriff's Department is on line three and they asked to talk to you.\"\n\n\"Relax Miss Jennings; it's probably just my brother.\"\n\nShe gave me a look of relief then went back to her desk as I picked up the phone.\n\n\"This is Robert O'Conner.\"\n\n\"Bobby, it's Jimmy.\"\n\n\"That's what I thought; you just scared the hell out of my secretary.\"\n\n\"Oh&hellip;sorry about that. Listen, I had a very interesting conversation with one of our deputy's this morning. Fellow by the name of Shaffer, you know him?\"\n\n\"Don't think so.\"\n\n\"Tall blond guy, working the night shift this month...patrols the area just south of San Miguel...ring any bells?\"\n\n\"Oh...\"\n\n\"Yeah...oh...\" \n\nThere was silence on the line before Jimmy continued.\n\n\"...I can't believe that I'm about to say this. If that was not Colleen in the car with you last night you're a dead man.\"\n\nI started to laugh.\n\n\"No, that was Colleen. You can call the house and talk to her if you want.\"\n\n\"What the hell were you guys doing out there in the middle of the night?\" \n\nThere was a tone of exasperation in his voice. Still laughing, I replayed the evening to Jimmy, except for all the intimate details about Colleen and I in the back seat of my car. By the end of the story Jimmy was laughing along with me.\n\n\"How could she have not known? Everybody in school knew. And you're not any better; even I knew when Colleen told the cheerleading squad what would happen if you went out to Miller's Pond. You two were just oblivious to rest of the world around you.\"\n\n\"Listen Jimmy, if you're smart, you won't mention to Colleen that we had this little conversation. She was ok with it last night but I don't want you or Mike to set her off about it. Remember, I have to live with her.\"\n\nThere was silence then with a quiet voice Jimmy replied, \"Please...don't remind me.\"\n\nMiss Jennings had begun working for Willis, Goldman &amp; Reed the week after she graduated from high school. She is smart and dedicated in everything that she does and in less than three years she had been promoted several times until she was my personal secretary. Miss Jennings is living proof that the universe has a sense of humor.\n\nMiss Jennings' full name is Sarah Jane Jennings. The manager in the Accounting Department is named Sara Jane Jennings, the only difference being the letter H. To the delight of everyone in the building, on her first day of work, Sarah Jane Jennings was introduced to Sara Jane Jennings. It was quickly decided that during working hours, Sarah would be Miss Jennings and the other would be SaraJane. They agreed to have lunch together that first day and thus began one of the great friendships of all time.\n\nMiss Jennings is tall, slender, and graceful with very small breasts and to this day still looks as though she had just graduated from high school. The word willowy was created just for her. SaraJane is five years older than Miss Jennings and much shorter, probably five foot two with large breasts and is three pounds away from being classified as plump. One look at her and you think earth mother. \n\nThey are both reserved in their public persona but each one possesses an imposing presence that commands attention and respect. Both are intelligent and exact in all that they do. SaraJane always seeks consensus and is a team builder while Miss Jennings has a sharp and biting wit and is not afraid to use it, wielding it like an ice pick. On more than one occasion I have seen grown men back away from Miss Jennings with a look of fear in their eyes and their hands unconsciously protecting their groin area.\n\nBoth women have a quiet demeanor but when they are in the company of the other they become animated and down right garrulous. They have so much fun entertaining each other that soon anyone around them gets sucked into their joy. Whenever they attend any type of social event, their dates usually end up being an after thought.\n\nSeveral months after their first meeting, the lease on Miss Jennings studio apartment was up and SaraJane invited Miss Jennings to move into her three bedroom apartment and split the expenses. By paying only half of the rent, it was a cost savings for both women. Then one year later, they surprised everyone when they announced they were going to jointly purchase a four bedroom house on the edge of town as an investment. Everyone in the office volunteered to help, showed up with their vans and pick-ups and moved the two Sara's in a single day. That evening they hosted a barbeque in the back yard of their new home.\n\nWith the encouragement of SaraJane and the direct orders of Harold Peterson, Miss Jennings began taking evening and weekend classes until she graduated with a BA in Business Administration. When she had finally achieved this goal, Miss Jennings and SaraJane celebrated by taking a well deserved vacation and left for two weeks in the Bahamas. They returned well rested, relaxed, tan and wearing matching gold bands...third finger, left hand.\n\nWhat can I say, this is California.\n\nNot long after returning from their vacation, Sarah and Sara had a long term visitor. SaraJane's younger brother Ryan had recently graduated from college and had a six month break before starting Princeton Medical School in the fall. Because all of his med school expenses were being paid for by their grandparents, he came to California to relax and enjoy life because he knew it would be his last chance for the next eight years.\n\nLike his sister, Ryan was a quiet and easy going person and everyone at the office quickly adopted him as part of the family. He had an infectious smile with a willing ear to listen and walking away from him you felt that you had a new best friend. Sarah and Sara were gently teased about being Ryan's harem and they responded with a quick smile and said that we were all jealous. At the end of the summer, SaraJane and Miss Jennings held a barbeque at their house to both celebrate and mourn Ryan's leaving for New Jersey the next day. \n\nThe week after Ryan left, I was coming back from the conference room and noticed that Miss Jennings was not at her desk. This didn't mean anything and I walked into my office when the phone on my desk rang and I picked it up.\n\n\"Robert, it's Harold, would you come down to my office for a few minutes?\"\n\nBeing summoned to Peterson's office was nothing out of the ordinary, he did it at least twice day, but there was a tone to his voice that implied this was something important. When I stepped into his office he said. \"Close the door if you would please and have a seat,\" pointing at the chair at the side of his desk. Miss Jennings and SaraJane were sitting in front of the desk directly across for Peterson. He made a small gesture with his hand and said, \"Ladies, go ahead.\"",
        "SaraJane and Miss Jennings were quiet for a moment and then SaraJane spoke.\n\n\"Thank you for letting us meet with you Harold. There is something we need to discuss with you and since it will affect both you and Robert we thought it would be simplest if we told you both at the same time.\"\n\nPeterson and I looked at each other and it was obvious from the expression on his face that he had no better clue than I what was going on. We looked back at the two ladies and waited. Finally Harold said, \"Yes...what is it that you wanted to say to us?\"\n\nSaraJane seemed to be struggling to find the right words so Miss Jennings, being Miss Jennings, jumped right in.\n\n\"We're pregnant.\"\n\nPeterson sat there expressionless then he suddenly sat up straight and looked as though he had been slapped in the face.\n\n\"Whoa, whoa, whoa, would you back up there a minute and repeat what you just said?\"\n\nThe two Sara's looked at each other and then back at Harold and I with that same soft smile that I recognized from Colleen's face each time she was pregnant. Again, Miss Jennings spoke.\n\n\"SaraJane and I are both three months pregnant.\"\n\nFrom the corner of my eye I could see that Peterson was trying to do the same mental calendar calculation that I was trying to perform. I opened my mouth to say something but Harold caught my attention and with a sharp negative shake of his head indicated that this was not a direction the conversation should take. We sat waiting for the other shoe to drop when SaraJane spoke.\n\n\"Since Sarah and I are both due on the same day...\"\n\nPeterson's jaw visibly dropped.\n\n\"...and we will be going on maternity leave together, we thought we should give you enough time to prepare for our absence.\"\n\nHarold's shoulders relaxed and he slumped back in his chair.\n\n\"Oh thank god. I thought you were going to imply that Robert and I were responsible for this.\"\n\nThis time it was the two ladies who jerked up straight in their chairs with a startled look, then started to giggle.\n\n\"Harold&hellip;perfect gentleman&hellip;you and Robert&hellip;best bosses anyone could ever hope to have&hellip;the idea that you and I could...that we would ever...I mean...ridiculous...\" the sentence just faded off into uncontrolled laughter.\n\nThey certainly knew how to build up a guy's self image.\n\nThe two Sara's were wiping the tears from their eyes as they stood to leave. When they reached the door they turned and opened their mouths to say something else then stopped and looked at Harold and I. This sent them into a new round of giggles and we could hear them reach a crescendo of laughter as they walked down the hall.\n\nPeterson and I sat there staring at each other, uncertain as to what to think.\n\n\"Who do you suppose was responsible for...\"\n\nHarold raised his hand to cut me off before I could speak any further. He looked me square in the eye and spoke.\n\n\"Robert, there are some subjects that are best left alone.\"\n\nLater that night after the kids were in bed, I shared the news with Colleen about Miss Jennings and SaraJane. Although we could only speculate about who the father might be, I remembered the relaxed and satisfied expression I had seen so many times on Ryan's face. But as Harold said \"&hellip;there are some subjects that are best left alone.\"\n\nColleen and I had always enjoyed the company of the two Sara's and had frequently socialized with them outside of the office. But now that the three of them were pregnant at the same time, it was like there was some type of tribal bonding thing going on. Because Colleen had the most experience, this being her fifth time around, they were constantly talking, sharing even the slightest nuance of the experience. It got to the point where it felt like Colleen was conducting a pregnancy support group meeting every Saturday in our living room. Our neighbor Linda was also pregnant and then there were the times that Mi Lin and Sharon would show up and the six of them would be there and...\n\nSweet merciful crap, I was drowning in a sea of pregnant women.\n\nI found myself spending a lot of Saturday afternoons next door, having a cup of coffee with Frank on his back deck, desperate for the company of an adult that didn't possess a uterus. I was so desperate I began accepting the invitations to pay golf with the twins and Harold, an activity I loath with every fiber of my being. But everytime I came back into the house, Colleen would stop what she was doing, kiss me on the cheek and whisper in my ear, \"I missed you.\"\n\nMiss Jennings going on maternity leave did create a problem for me, a huge problem. When she returned she would no longer be my secretary. She would still be working for me, but because she had obtained her college degree, she was being promoted to an account rep position. Finding a new secretary was going to be one horrific pain in the ass.\n\nI was spoiled. The entire time I had been working for Willis, Goldman &amp; Reed I had only two secretaries, Mrs. Lopez in Chicago and Miss Jennings here in San Miguel. They were two distinctly different personalities but they shared a common trait. They knew exactly what needed to be done and could probably do my job better than I. They anticipated every thing I ever needed or wanted. I could have skipped going to the office for six months and no one would have known the difference. Miss Jennings took her leave about two months before Colleen's due date and this started the process of finding a replacement.\n\nAnd so the nightmare began.\n\nI am a flexible and easy going person. I don't think I'm a difficult boss to work for, but with the responsibilities that I had, the person who sat at the desk outside of my office door had to meet the standards set by Mrs. Lopez and Miss Jennings or it just wasn't going to work. At the end of six weeks I had gone through eleven secretaries. Two of them simply went to lunch on their first day and never came back.\n\nOn Friday afternoon I was leaving for the day when Peterson called out to me from across the lobby.\n\n\"Your new secretary starts Monday morning, don't be late.\"\n\n\"Ah geez, is this never going to end? How long is this one going last?\"\n\nPeterson's face was one large grin.\n\n\"Don't worry Robert; I think this one is going to be a keeper.\"\n\n\"Why, who is it?\"\n\n\"Don't even worry about it. Just go home and have nice weekend. I'll see you Monday morning.\"\n\nI followed Harold's orders and didn't think about it that weekend, knowing that the situation was hopeless.\n\nMonday morning I decided to go into the office an hour early to try and get some work done before I had to greet the next batter up in the endless line of minor league players known as \"Robert's Secretaries.\" As I headed towards my office door I noted that someone was already sitting at the desk. Her head was bent down as she was going through the desk drawers. I thought that I would dump my briefcase inside before I sent the new person off down the path of failure. As I walked past she raised her head and smiled.\n\n\"Good morning Robert.\"\n\n\"Good morning Mrs. Lopez.\"\n\nI got as far as the door when I dropped everything in my hands and literally sprinted back to her desk.\n\n\"Mrs. Lopez...what are you doing here?\"\n\n\"I wanted to get settled in a bit before I started work.\n\n\"But...but you're in Chicago.\"\n\n\"No, unless we took a wrong turn somewhere I believe that I'm here in San Miguel. I am still your secretary aren't I?\"\n\n\"Oh please dear God, tell me this isn't a dream.\" I grabbed a chair and pulled it up next to her desk. \"Now tell me everything, exactly what's going on here?\"\n\nAfter thirty years with the Chicago City Police Department, Detective Sergeant Ramon Lopez retired, turned in his badge and his gun and told his wife to start packing.\n\n\"Where are we going?\"\n\n\"I don't care; as long as it's sunny and a thousand miles away from this frozen corner of hell.\"\n\nJohn Gordon didn't want to loose his secretary and trusted friend but he made the necessary phone calls and Mrs. Lopez was transferred to the San Miguel office. Harold Peterson had kept it a secret from me for the past five weeks saying, \"It will brighten his day.\"\n\nIf only he knew.\n\nI heard a sound behind me and turned my head to look. Peterson was standing there grinning from ear to ear.\n\n\"Harold you rotten bastard, why didn't you tell me Mrs. Lopez was coming. You could have saved me all this grief.\"\n\n\"What, and miss the expression on your face? It was worth every minute of it. Welcome to San Miguel Mrs. Lopez, I believe you already know this fine gentleman that just sullied my family's good name.\"\n\n\"Yes I do Mr. Peterson...\"\n\n\"Hey now, none of that, my name is Harold.\"\n\n\"Ok Harold. Yes I do know him and he's always had a potty mouth so don't listen to anything he says.\"\n\n\"What makes you think I listen to him now?\"\n\nHarold and Mrs. Lopez were enjoying a good laugh at my expense but I didn't care. Now my life at the office would regain a sense of stability.\n\n\"Robert, introduce Mrs. Lopez around and then we can get back to business. If John Gordon was telling me the truth, your unit should be back to normal by lunchtime.\"\n\nStill smiling, Harold clapped me on the shoulder and headed off to his office.\n\nHarold wasn't far off the mark. By the afternoon break Mrs. Lopez was functioning as if she had spent the previous twenty years here in San Miguel instead of Chicago. During our conversations through out the day we were both surprised to discover that she and her husband had bought their new home just five blocks away from Colleen and I. Somehow we had missed running into each other after they had moved in last week. I called Colleen to let her know that we would be having two guests for dinner. She immediately picked up on my excitement.\n\n\"Sounds like the new secretary is going to work out.\"\n\n\"Sweetheart I'll explain it all to you when I get home, but yeah, this is the one.\"\n\nWhen I got home, Colleen was putting the finishing touches on dinner and Meghan and Molly were setting the table. I barely had time to get my welcome home hugs and kisses from what Colleen and I were now calling the \"Gang of Four\" when the doorbell rang. I ushered Mrs. Lopez and her husband into the livingroom where the kids were lined up to greet our guests.\n\nMolly has holding Brigid who was squirming but immediately settled down and smiled in the presence of the new adults. Noelle was standing and holding on to Meghan's hand, hiding halfway behind her but still peeking out with her smile as I began the introductions.\n\n\"These are our children. That's Molly holding our youngest, Brigid. This is Meghan, she's oldest and the shy one is Noelle, but this is the last time you will see her standing still tonight. Girls, I want you to meet Consuela and Ramon Lopez.\"\n\nAt that moment Colleen came in from the kitchen.\n\n\"And this charming yet provocative woman is my wife, Colleen.\"\n\nAt this point Colleen was one week away from her due date. She was dressed in her maternity overalls and her stomach had that beach ball look as she waddled over to shake hands.\n\n\"Mrs. Lopez, it's a pleasure to meet you.\"\n\n\"Please, I'm Connie and he's Ray. Colleen? What a coincidence, that's the same name as...\"\n\nMrs. Lopez stopped mid-sentence as she turned her head towards me with a puzzled look. Colleen and I glanced at each other quickly then back at Mrs. Lopez. I could see the wheels turning inside Mrs. Lopez' head as a sudden feeling of panic gripped the pit of my stomach. I had two photographs on my desk in Chicago, one was a picture of Barbara and the other was my favorite photo of my sister Colleen taken when she was in college. Mrs. Lopez had seen the photo of Colleen a thousand times. Colleen and I were holding our breaths.\n\n\"Connie, what were you saying? It's the same name as who?\" her husband asked.\n\nMrs. Lopez was still staring at me with her mouth open then she broke into a smile.\n\n\"I have a very dear friend who has a sister named Colleen...\"\n\nShe turned to Colleen and instead of shaking hands; she put her arms around Colleen in an embrace.\n\n\"...but I never had a chance to meet her. I am so glad to meet you.\"\n\nThere was an audible sigh of relief from Colleen and I as Ray stood there looking confused.\n\nBy the time we had finished eating dinner; our immediate family had increased by two. The Lopez's had no children of their own so our girls instantly adopted Connie and Ray. The die was cast when Ray got down on his hands and knees in the middle of dinner to give Noelle a pony back ride. The Gang of Four insisted on good night hugs from Uncle Ray and Aunt Connie before they would head for bed.\n\nOnce the kids were down for the night, we were sitting in the livingroom talking. Colleen and Connie were talking as though they were best of friends who had not seen each other for years. I went into the kitchen to make a fresh pot of tea and Ray wandered in behind me a couple of seconds later.\n\n\"So Ray, how do you like San Miguel so far?\"\n\n\"Very nice place. You know, I've never lived anywhere but Chicago, and now I'm starting to wonder why we stayed there so long.\"\n\nRay turned his head and watched Connie and Colleen through the kitchen door for a moment then turned his attention back to me.\n\n\"Listen Robert, there is something I want to tell you but you can't let Connie know about it. She won't talk to me for a week if she finds out I told you.\"\n\n\"Sure, what is it?\"\n\nRay quickly looked at his wife again before continuing.\n\n\"I thought you should know about Derrick Andrews.\"\n\nMy insides immediately tightened up.\n\n\"What about him? I haven't heard anything about him since...since that day.\"\n\n\"Connie said everything happened so fast that she barely saw what happened but you must've done a number on him, he was in the hospital for four days. When he got out and went home to his apartment I was there to greet him.\"\n\n\"What? Why would you do that?\"\n\nRay smiled. \n\n\"Strictly business. John Gordon had the auditors working night and day going over Andrews' accounts. The morning he was released from the hospital the D. A. issued an arrest warrant and I got assigned to pick him up. Nobody at the station knew that my wife worked for you.\"\n\n\"Arrest? What for?\"\n\n\"Embezzlement, he stole over three hundred thousand dollars from the company. Gordon said that it would have been spotted immediately during the next annual audit. The fool left his tracks all over the place. I only met him once before that day but I knew then he was an asshole. The auditors were with me and we had a search warrant. They found a complete set of his records five minutes after we walked through the door.\"\n\n\"I didn't hear anything about this.\"\n\n\"Nobody did. It's not the sort of thing the company wanted the stockholders to read about on the front page of the Tribune; it would be bad for business. Anyway, Andrews tried to blame it all on Barbara and the other women in the office, but he was such a moron about how he did it that the D. A. didn't bother to interview anyone else.\" \n\n\"So what happened? Did the company get the money back?\"\n\n\"In cash and assets, they got it all except for about twenty thousand. Apparently Derrick Andrews was a big tipper. John Gordon must have a lot of influence in the company. He found out who sent Andrews to Chicago and some vice president in New York was fired the week after you left town.\"\n\nI had to stop and digest this. I was feeling a little overwhelmed.\n\n\"So what was the end result? How did it all end?\"\n\n\"Well, my partner and I took him in. We were taking him up to the second floor to be booked and when we got to the top, he slipped and fell down the stairs...broke his leg in a couple of places.\"\n\n\"Bummer,\" I said with a tight grin of satisfaction.\n\n\"Yeah...everyone at the station house felt real bad about it. We took up a collection to send flowers when he went back to the hospital.\"\n\nRay said this without cracking a smile. Then he continued.\n\n\"The schmuck was going to plead innocent but there was no way he could beat the charge. His lawyer finally convinced him to accept a plea bargain. He got five years and that meant he would get parole in two.\"\n\n\"So is he out now?\"\n\nNow Ray smiled.\n\n\"No...well, sort of. You know those cheesy prison movies where they tell the new guy to grab the first person they see and start pounding on him to prove that he's not somebody to mess with? Andrews actually fell for that crap and punched out some scrawny dude in the yard the day he went in. Only problem was he picked the wrong guy. They found Andrews' body in the exercise yard the next day with a three foot piece of pipe sticking out of his chest. He was such an asshole that the prison doctor put down natural causes on the death certificate. The arrogant prick didn't even last twenty-four hours. Just in case you're wondering, no one came to the funeral.\"\n\nThere was silence while I tried to take this all in.\n\n\"Thanks for telling me Ray, I appreciate it. I promise I won't let Connie know you told me.\"\n\n\"I hope knowing helps a little bit.\"\n\n\"Yeah, it does...a little bit,\" I said as we returned to the livingroom.\n\nA while later Connie and Ray were standing in the door way making their good byes when Connie stopped and looked at Colleen. She was smiling when she spoke.\n\n\"Robert, you have a beautiful family. I think coming to San Miguel may be the smartest thing you have ever done.\"\n\n\"I couldn't agree with you more,\" I replied.\n\nNow Colleen spoke, \"I'll call you Saturday morning. You can't possibly be finished settling in until you and I do some serious power shopping.\"\n\n\"It's a date. Good night guys, Robert I'll see you in the morning.\"\n\nAs the door closed, Colleen slid her arms around my waist and pulled me close.\n\n\"I love you husband.\"\n\n\"I love you wife.\"\n\n\"Bobby, you have some very loyal friends.\"\n\n\"I can see that. It's nice to know.\"\n\nColleen took my hand and began slowly pulling me towards the bedroom.\n\n\"Come with me husband. We have some serious cuddling to do tonight.\"\n\nThe next morning I was in my office thinking about the things Ray had told me the night before. I suppose that I should have been feeling happy or satisfied that Derrick Andrews had ended the way he did. But I wasn't, the news left me feeling numb and a little depressed. I simply can't find any joy at anyone's death although I probably had every right to. It was revisiting in my memory all of the incidents that led up my leaving Chicago that had resurrected that small piece of depression. Mrs. Lopez brought in the morning mail and was returning to her own desk when I stopped her.\n\n\"Mrs. Lopez, wait just a minute. Can I ask you something?\"\n\n\"Sure, what do you want to know?\"\n\nI waited for her to sit in the chair at the side of my desk before I continued.\n\n\"After I left Chicago, you were John Gordon's secretary...how well did you know him?\"\n\n\"You can't be someone's personal secretary without getting to know them pretty well, why do you ask?\"\n\nI paused, staring at the picture of Colleen on my desk, the same picture that had sat on my desk in Chicago, before I spoke.\n\n\"The last time I saw him I asked him why he was helping me. He said, 'Because I was in your position myself a long time ago.' I've always wondered what he meant. If it's not betraying any confidences, do you know why?\"\n\nMrs. Lopez sat looking down at her lap, a look of concentration on her face. Her head was making a slow, small nodding motion as she was internally going through the decision making process. When she looked at me again she had a small smile and her eyes were focused over my shoulder at a memory.\n\n\"A couple of days after I started working for him, I asked the same question, why was he helping you, and he told me the story. It's not something he wants the entire world to know, but I don't think he would mind you knowing. You're probably not aware of it but John Gordon has a very high opinion of you.\"",
        "\"He does...why?\"\n\n\"John is always on the lookout for smart and talented people that can be an asset to the company. He told me he had been watching you even before Derrick Andrews showed up. When everything blew up, he recognized his own story in yours so he made arrangements with Harold for you to come to San Miguel. Do you know about Harold and John?\"\n\n\"Harold mentioned that they had been roommates in college but that's all he's ever said.\"\n\n\"And they've been best friends ever since. They were even married to their college sweethearts in a double ceremony right after they graduated. They started the same day at Willis, Goldman &amp; Reed in the Omaha office.\"\n\n\"What happened was almost a clich&eacute;. John came home early from a business trip and Harold picked him up at the airport and took him home. John and Harold both walked into the house and found John's wife and his supervisor on the couch, right in the middle of...in the middle of doing it. I guess the affair had been going on for some time. From John's description the supervisor was the same type of arrogant jerk as Derrick Andrews and he started laughing at John. That was when John threw the supervisor out of the bedroom window...oh, and the window was closed at the time. John and Harold packed up all of John's clothes and personal belongings and moved John into Harold's guest room.\"\n\n\"What happened afterwards?\" I asked.\n\n\"Everything turned to crap for John before it got better. Apparently his wife thought the supervisor was the better meal ticket. She called John a loser and said that she was going to marry the supervisor. Unfortunately for her the supervisor's wife didn't see it the same way. By the time the wife's lawyers finished with him in divorce court the supervisor was bankrupt and penniless. Harold had some very heated discussions with management in the Omaha office, but in the end the supervisor was fired and would never be able to get a job anywhere in the industry again.\"\n\n\"What about John's wife?\"\n\n\"Oh, she tried to get back together with John but John is not a fool. They had only been married for a couple of years so they didn't have many assets to speak of, and because John and Harold had caught her in the middle of an adulterous act, plus some of the things she had testified to in the supervisor's divorce trial, she got no alimony. Basically John walked away from his marriage without it costing him a penny. But it did cost him a lot of pain...but you probably already know what John was feeling.\"\n\n\"Yeah, I know exactly what he was going through.\"\n\n\"Well, John lived with Harold and his wife Caroline for a long time and they helped him keep going. But there is that one good thing about crap.\"\n\n\"What's that?\" I asked, slightly confused.\n\n\"It helps beautiful things to grow. Couple of years after the divorce, John married Caroline's older sister Diane. They've been happily married for over thirty years now.\"\n\n\"Oh wow, John Gordon is Harold Peterson's brother-in-law? I had no idea.\"\n\n\"Not many people do. Do you know about Harold's wife Caroline?\"\n\n\"Only that she passed away, he doesn't talk much about his personal life.\"\n\n\"I'm not surprised. According to John, Harold and Caroline had decided to wait a few years before having children but before they could, she was diagnosed with ovarian\n\nMrs. Lopez stopped for a minute and looked at me before continuing.\n\n\"And that's why Harold is here in San Miguel.\"\n\n\"Ok, you just lost me there.\"\n\n\"John knew Harold well enough to know that he needed a change of scenery and something to focus on if he was going to keep his sanity. John had worked his way up in management far enough that he was able to pull some strings and get Harold transferred here to San Miguel as head of the office. At the time this office was leaking red ink like a sieve. Harold was given one year to turn things around or they were going to shut the place down. He did turn it around and in a big way. Harold has been here for twenty-five years and refuses to leave. The company has been after him for years to go to headquarters at probably twice or three times the salary but he won't budge...\"\n\nMrs. Lopez smiled.\n\n\"...and sometimes he's not very polite when he declines their gracious offer.\"\n\nI had to smile at this because it was exactly what I pictured Peterson's reaction would be to the suggestion of moving to New York.\n\n\"Thanks for telling me Mrs. Lopez. You know, I'm probably the closest thing to a friend that Harold has here in the office and I hardly know anything about him. After twenty-five years no body knows anything at all about his personal life; you've just explained quite a lot about Harold. I'll respect his privacy and keep this to myself.\"\n\nWe both sat quietly for a few moments, wrapped up in our own thoughts, when Mrs. Lopez looked directly into my eyes.\n\n\"Robert. Is there anything else you want to know about Chicago?\"\n\nI knew exactly what she was saying. In a perverse sort of way, I did want to know, but I also knew that if she told me, a lot of memories I didn't want to see again would come back to haunt me. Sometimes, ignorance is bliss. I turned my head to look at the picture of Colleen again. When I finally answered her my voice was barely above a whisper.\n\n\"No. I think I have every thing I need to know about Chicago.\"\n\nShe sat for a minute studying me before she spoke.\n\n\"Well then, I guess I better get back to my desk.\"\n\nMrs. Lopez stood up and started to leave my office but stopped at the door. She stood with her hand on the doorknob for a moment then turned back around and stared at me. She came back and sat down once again at the side of my desk. She didn't say anything, just sat watching me. She then looked at Colleen's photograph as she spoke.\n\n\"When John Gordon arranged for you to come to San Miguel, neither he nor Harold knew anything at all about Colleen...\"\n\nAt this point Mrs. Lopez paused and looked directly at me.\n\n\"...and as far as I know, no one is aware of it to this day...\" \n\nAgain she paused for a second before continuing.\n\n\"...and no one ever will.\"\n\nI opened my mouth but she continued before I could speak.\n\n\"Robert, you don't owe me any explanations. In Chicago you were like a son to Ray and I and we will never say, or do, anything that might harm you or your family. And especially after last night, I can see that you and Colleen love each other very much.\"\n\nI took a deep breath and exhaled before I spoke.\n\n\"I can't tell you what a load off of our minds that is.\"\n\nMrs. Lopez stopped and looked at Colleen's picture again before speaking.\n\n\"Last night I told you that coming to San Miguel was the smartest thing you have ever done. That was my opinion when you left and that's my opinion now. If you had stayed in Chicago it would have been a complete disaster for both you and Barbara...and everyone else around you. Your children are delightful and I can see that Colleen loves you very deeply. Robert, you are a lucky, lucky man. I hope you realize that.\"\n\nShe was smiling as she said that.\n\n\"I do, I realize it every morning when I wake up next to her.\"\n\nNow it was my turn to smile.\n\nShe gave a small laugh.\n\n\"I think that's all the personal information I need to know. And now I really do need to get back what to work.\"\n\nShe stood up and then did something totally unexpected. She placed both hands on my shoulders then leaned down and kissed me on the forehead. She smiled and walked towards the outer office. When she got as far as the door I stopped her again.\n\n\"Mrs. Lopez...\"\n\n\"Yes?\"\n\n\"Thank you.\"\n\n\"You're welcome...oh, and by the way, Ray confessed to me he that he told you about Derrick Andrews. He may have been the toughest cop on the force but I can still break him like wet paper bag.\"\n\nStill smiling, she exited the office and closed the door behind her.\n\nI don't think Colleen knew anything about what Ray and Connie had told me. But for some reason she was a little more attentive than usual that night when I got home...or maybe I had been reminded once more of just how special she is. It is amazing to me how she can tell Molly to eat her green beans and no funny business young lady; and lovingly stroke the back of my hand at the same time.\n\nAfter dinner I was sitting on the sofa enjoying a brief period of \"Brain Dead\" time when I was invaded by the Gang of Four. Noelle and Brigid both ended up in my lap. They were playing a private game of their own that involved taking turns touching each other's nose then both them touching my nose at the same time and laughing hysterically. This kept them occupied for at least twenty minutes. Meghan and Molly were on the floor at my feet doing their homework. Eventually Noelle and Brigid were asleep in my arms and Meghan and Molly ended up on the sofa, leaning against me as we watched a little bit of television.\n\nColleen came in after cleaning the kitchen and stood in front me, her protruding belly in my face, smiling down at the kids.\n\n\"Here, let me take one of those so you can relax.\"\n\nI pulled the two sleeping bodies a little closer to me and smiled back at her.\n\n\"It's ok; they feel pretty good right where they are.\"\n\nColleen sat in the rocking chair. She watched, contemplating me and our daughters with her contented half smile. We sat there in silence for a while and by the time the TV program was over, Meghan and Molly were also asleep, slumped against me like matching bookends. Colleen stood and walked from the room. As she was coming back into the room, I was leaning my head over sideways and kissed Meghan on the top of her head.\n\nClick\n\nI looked up to see Colleen holding the camera.\n\n\"What are you doing?\" I whispered, trying not to wake the girls.\n\n\"That's a picture I want to look at forever,\" she whispered back.\n\nThree days later, I was coming back from a meeting in the conference room when I saw Mrs. Lopez walking out of my office. In one hand she was holding my jacket and my car keys in the other. She saw me and started speaking in an excited voice.\n\n\"Good, you're here. I was just coming to get you.\"\n\n\"What's going on?\"\n\n\"Colleen just called and her water broke.\"\n\n\"Oh shit, I've got to go.\" I grabbed my jacket and keys.\n\n\"Just calm down for a second. Your neighbor Linda is there and will stay with the girls. I called Ray because he's at home and can get there quicker. He'll take Colleen to the hospital and they'll meet you there. I'll close up here then Ray and I will be at your house and stay with the girls, don't worry about them. Just call later and let us know what's happening...now GO!\"\n\nBy the time she had finished saying this I was already on a dead run for the front door.\n\nWhen I walked through the doors of the maternity ward I saw Colleen and Ray standing at the admitting counter. Colleen was filling in forms and Ray saw me first.\n\n\"Robert, over here. Colleen was...\"\n\n\"A-A-A-H-H-O-O-W-W-W...\"\n\nColleen had cut off what ever Ray was starting to say with a sound that was somewhere between a moan and a scream. She was holding her stomach and had a panicked look on her face. Two nurses were there instantly putting Colleen into a wheelchair. They began pushing her down the hall as quickly as they could without braking into a run. As they turned the corner one of the nurses yelled out, \"Let's move it people. It's show time.\"\n\nI was right behind them.\n\nThe birth process for Noelle and Brigid had been leisurely affairs; go to the hospital, sign forms, get settled into the pre-natal room, shave Colleen as part of the pre-op preparation, suck on some ice chips, do Lamaze breathing, time the intervals between contractions...\n\nScrew that stuff this time around.\n\nThe nurses were lifting Colleen onto the delivery table as I followed them through the doors. A second behind me was the doctor. He was moving in low speed casual mode and asked, \"How far is she dilated?\"\n\n\"Twenty-one centimeters.\"\n\n\"HO-LY CRAP!\" he yelled and jumped to the stool that was positioned at the end of the delivery table. \n\nThe nurse looked at me and barked, \"You...get a mask on.\"\n\nThere hadn't been time for Colleen to get into a hospital gown; she was still wearing the dress she had on this morning when I left for work. The nurses lifted Colleen's legs into the stirrups and raised the hem of her dress onto her stomach. The doctor was sitting on his stool and looked between Colleen's legs when he screamed.\n\n\"Somebody get a catcher's mitt&hellip;NOW! Ok mom, when I count three I want you to push, but not until I tell you.\"\n\nAs soon as someone shoved something into his hands he looked at Colleen's face with a smile in his eyes.\n\n\"Here we go; it's time to become a mother. Remember; wait until I tell you then push as hard as you can. One...two...three...push.\"\n\nColleen was holding my hand and when she squeezed I thought I could hear bones cracking. Her eyelids were clamped shut and she emitted one long loud combination grunt and groan through gritted teeth. When she finished she was panting heavily and her bright red face was covered in a heavy film of sweat.\n\nI was deliriously happy.\n\nColleen's eyes were glazed and she asked in between her labored breaths, \"How soon before I have to push again?\"\n\nThe doctor gave a short laugh.\n\n\"We can wait a minute before the second act. Here, I've got something you might want to see.\"\n\nOne nurse laid a towel across Colleen's chest then the other laid down a tiny bundle of humanity that had a thick coating of disgusting body fluids.\n\nI have never seen a more beautiful sight in my life.\n\nColleen looked down at who was lying on her chest then she looked at me, her face beaming. She spoke with a large grin.\n\n\"Sorry Bobby, your basketball team is going to have to be co-ed.\"\n\nI grinned back at her.\n\n\"That's ok wife, every team needs a good outside shooter.\"\n\nJust then a nurse lifted our son...our son...I would have to get used to saying the word son...off of Colleen.\n\n\"We need to send this little fellow out for dry cleaning. We'll have him back to you in ten minutes.\"\n\nThey whisked him across to the other side of the room where they began cleaning the goop off of him then measuring and weighing and all of the other stuff that had to be done following a birth. True to their word, ten minutes later Colleen was holding our son as they wheeled the gurney down the hall to her room.\n\nColleen was sitting up in bed watching our baby's face as he slept while I sat in the chair next to her. She was smiling and without looking up she said, \"He looks like Daddy.\"\n\n\"Good, maybe he'll get a date in high school.\"\n\nColleen looked at me with a smile.\n\n\"Oh come on, you had dates in high school.\"\n\n\"Yeah, but I was a horny teenager, I could've used a lot more.\"\n\nColleen only grinned at me.\n\nI sat in the chair holding our son and glanced over at Colleen. She had closed her eyes and her soft regular breathing told me she was asleep. Looking down into the face of this little miracle my thoughts were wandering all over the place.\n\nA son...I'm going to have to learn a whole new parent vocabulary...coaching little league can't be all that hard...maybe his sisters will teach him soccer instead...can't coach soccer, don't understand it well enough...we have a minivan, I can drive on field trips...Colleen is right, he does look like Dad&hellip;I wish he were here to meet his grandson&hellip;he has four sisters; he's either going to be the little prince or the goat boy...we're out of bedrooms, where is he going to sleep?\n\nI don't know why, and I suppose there is some deep psychological explanation, but no matter how many children you already have, that first time you hold your new child...in the quiet by yourself, you begin to think about your own past and your child's future. We all begin with a clean slate and we almost never end up where we thought we were going to be.\n\nEvery child deserves to have parents and family that love them. Parents that are Married/Unmarried/Gay/Straight, it makes no difference. The child should grow up knowing that they are loved and cherished and in a home where they feel safe. In the end, I hope that our children know how deeply Colleen and I love them, and how much we love each other.\n\nThere is a simple elegance to every aspect of Colleen, but especially in the way she loves me. We were inseparable as children and now as adults we were continually learning together what true happiness and love is all about. I was the pillar that she leaned on when Bill died and she was there to hold my hand in the aftermath of my marriage to Barbra crashing down in flames. We had helped each other survive our own individual separate corners of hell and our love for each other grows stronger every day. \n\nOur life together has been nothing but a blessing for both of us, but we have also had to make some sacrifices too. By making our choices we have had to cut ourselves off from our past in Santa Teresa so that we can have a future together. We will never be able to attend any of our high school reunions. Friends that were so dear to us we could no longer stay in touch with, only keep them locked away in our memories. But our love for each other and our children is so great that none of that matters. Any part of the individual hell that we went through, any loss of our past; we would go through it again a hundred times over if we had to so we could end up where we are today, together with our children.\n\nThere has been a rapid turnover of the people in our neighborhood. One generation dying, or retiring and moving away to make room for the next generation of young families to move in. By this time no one in San Miguel had any memory of us as anything other than Mr. and Mrs. O'Conner.\n\nThere was a country western song on the radio years ago; I can't remember the name of it and don't ask me who the singer was. But I do remember one line... \n\n\"Don't ask me where she came from; \n\nAll I know is she gave me back my life.\"\n\nI am thirty years old...I am married to my sister...We have five children; I have adopted my nieces and my sister and I now have three children together under the age of twenty-two months...\n\nI am the luckiest man on the face of the earth.\n\nThe nurse came and took the baby back to the nursery so that both he and Colleen could have their much needed rest. While she was sleeping, I decided to go downstairs to get a sandwich and coffee plus call home to tell everyone the news that there would now be two males in the O'Conner house. Mrs. Lopez answered the phone and was excited to hear that Colleen and the baby were doing well. She told me not to worry; she and Ray would spend the night at our house with the girls and would see us tomorrow. Then she handed the phone to Meghan.\n\n\"Hi daddy, what's our new sister look like?\"\n\n\"Sorry sweetie, it's not a sister. You have a brother.\"\n\nThere was a second of hesitation as Meghan processed what I had just told her.\n\n\"Really?...Molly, we have a brother!\" she yelled across the room to her sister. In the background I could hear Molly's laughing cries of \"yippee\" and the squeals of Noelle and Brigid as they mimicked their sisters.\n\n\"Listen sweetheart, I'm going to stay here tonight with your mother and the baby, but Aunt Connie and Uncle Ray are going to spend the night with you guys. We'll bring your brother home tomorrow.\"\n\n\"That's ok, Aunt Connie promised she would make tacos and Uncle Ray is being funny. Daddy, I have to go now. Molly and I need to help Aunt Connie get the girls ready for their nap but Grandma called and wants you to call her back. She's at the hospital with Aunt Sharon and Aunt Mi Lin.\"\n\nHospital?\n\nWe ended the phone call with Meghan promising to spread hugs and kisses all around. I immediately called the hospital in Santa Teresa and got passed around and put on hold for a long time before I finally got a hold of Mom.",
        "\"Mom, is everything ok? Meghan told me Sharon and Mi Lin are in the hospital.\"\n\nMom laughed. \"Didn't she tell you the rest of it? They had their babies this morning, two new granddaughters. How's Colleen? Meghan said that Colleen is having her baby too.\"\n\n\"Had...she already had the baby. Mom, are you sitting down? You have a grandson.\"\n\nI could hear the surprise in her voice. \"Are you sure? Did you look? I don't know how to buy presents for a grandson.\"\n\n\"Yes I looked; the doctor looked too and he was almost positive it's a boy.\"\n\n\"Eleven granddaughters and one grandson, the poor boy's going to have his work cut for him.\" Mom paused and I could literally hear her thinking.\n\n\"Bobby, what time was your baby born?\"\n\n11:07...eight pounds eleven ounces, twenty-two inches.\"\n\nThere was silence on the other end then Mom laughed.\n\n\"They really planned this right down to the minute didn't they?\"\n\n\"Planned what, what do you mean?\"\n\n\"Bobby, Sharon's baby was born at 11:11 and Mi Lin's baby was born at 11:17.\"\n\nMom stopped talking to let this bit of news sink in. I was stunned; all three babies had been born within a span of ten minutes.\n\n\"Bobby, you need to get back to Colleen. Tell her I'll call her at home tomorrow.\"\n\nWith that, we ended the conversation and I went to tell Colleen about the other babies.\n\nBy luck of the draw, we had the same nurse three years in a row for the birth of our children. The next day as we were gathering up our things to leave she said, \"So will we be seeing you folks again next year?\"\n\nColleen looked at her with a straight face and responded, \"I don't think so, we just found out what's been causing all these babies.\" \n\nThe look on the nurse's face was priceless.\n\nColleen and I had decided that we had added enough to the world's population and would take steps to insure that we would not be returning to visit the delivery room any time in the future. During the period that we would not be having actual sex, I would get a vasectomy and Colleen would have her tubes tied.\n\nAlthough not enthusiastic about getting a vasectomy, I was willing to do it without complaining or whining. However I could not see any good reason for Colleen to go through the process of getting her tubes tied, a much more difficult and complex procedure. But she was adamant.\n\n\"I don't care how many vasectomies you have. If you so much as sneeze in my direction I'm going to end up pregnant. This uterus is going out of business for good.\"\n\nThe trip home was uneventful. Meghan and Molly were excited about meeting their brother, and Noelle and Brigid were too young to understand what was going on, just another baby in the house. Even with all the excitement around the three births at the same time, it was the next weekend before we could get to Santa Teresa so that Mom could meet her only grandson.\n\nIt was quite a family gathering that weekend. We met at Mike's place because he had the largest house. When you own the construction company, you get a pretty good deal on the house of your dreams. Even Harold Peterson was there. Ever since meeting at the wedding, Harold had been playing golf with the twins once or twice a month. They had forged a friendship that seemed to be based a competition to see who could play the worst round of golf in the history of the game. He was playing with them that morning and they convinced him to stick around and have lunch with us.\n\nWhen we arrived Mom was already there with Sharon and her kids and Mi Lin arrived just minutes behind us with her kids. We were waiting for the twins to finish their game and get back before starting lunch. The cousins were running in all directions without any obvious purpose, but they were having one hell of a good time. Needless to say, babies were being passed right and left by the adults.\n\nMom immediately latched on to her grandson and took him into the livingroom. She sat down on the sofa and was rocking him gently back and forth in her arms. She was smiling and rubbing the back of her forefinger on his cheek when she asked her question.\n\n\"What did you name him?\"\n\nThe ship was filled with immigrants as it steamed from Dublin toward New York and Ellis Island. On board were four children named, Brigid, Fiona, James and Michael who had never met before the journey. They were five years old and like all five-year-olds quickly formed an alliance to protect themselves from the older kids. Shortly after landing and then another long day of train rides, they were ecstatic to learn that all four of the families had ended up living on the same block of an Irish neighborhood in Boston.\n\nThe four became inseparable and basically indistinguishable to the rest of the world. At St. Catherine's School everyone, including the teachers, thought of them as a single entity. The future held little promise for people in their position, to be servants or day laborers like their parents. The day after graduating from high school, they met on the banks of the River Charles to discuss what they were going to do. They talked all afternoon and late into the evening and didn't stop until everyone was in agreement. It was settled.\n\nOne week later, with their families' blessings, James married Fiona and Michael married Brigid. They packed their bags and headed west, eventually settling in San Francisco, living in houses next door to each other. After a while James and Fiona had their only child, a son they named Christopher. Ten years later Michael and Brigid had their only child, a daughter named Margaret. As the infant Margaret became aware of the world around her, the first face she began to recognize other than her parents was the face of Christopher. For some inexplicable reason it made Christopher very happy every time that Margaret smiled at him.\n\nWhen Margaret had graduated from college and began her career as a second grade teacher, the agony of waiting was over and Christopher Patrick O'Conner and Margaret Louise Murphy were married. They had four children; Colleen, twins James and Michael, and Robert.\n\n\"What did you name him?\"\n\n\"Mom, this is your grandson, Christopher Patrick O'Conner.\"\n\nMom held him on her lap looking down at his sleeping face, not speaking. Colleen and I watched as two tears fell onto the blanket tightly wrapped around Chris' tiny body. Mom raised her head and with the happiest smile I had seen on her face since Dad had died, silently mouthed the words, \"thank you.\"\n\n\"Grandma, why are you crying?\"\n\nMike's daughter Patricia, now five years old, was standing in front of Mom with a look of deep concern on her face. Holding Chris in one arm, Mom pulled Patricia into a hug with the other.\n\n\"Because sweetheart, sometimes Grandmas cry when they are happy.\"\n\nPatricia's face showed confusion at this bit of information but accepted it with out comment. She turned her head and looked at Colleen and I.\n\n\"Aunt Colleen, can I hold Christopher?\"\n\n\"Of course you can honey. Sit down right here beside Grandma.\"\n\nPatricia sat on the sofa between Mom and Colleen. Mom placed the sleeping Chris onto Patricia's lap and arranged him carefully to make sure that he wouldn't slide off. Mom, Colleen and I started talking amongst ourselves when Patricia squealed.\n\n\"He's smiling, he's smiling at me. Uncle Bobby, Christopher is smiling at me.\"\n\nShe was literally shaking with excitement. We all looked down at Christopher and Patricia was right. Chris's eyes were wide open and he was studying Patricia's face. He had that open mouth, toothless grin that only looks good on a newborn. Chris closed his eyes with a small sigh and began to wiggle around trying to burrow in closer to Patricia. She turned her head and looked at her Grandmother with a tear in her eye.\n\n\"I'm happy too Grandma.\"\n\nAbout a year after Chris was born I was promoted to Senior Manager. This made me second in command of the San Miguel office of Willis, Goldman &amp; Reed. One morning Harold Peterson called me into his office. As I walked into his office and sat down, Harold was staring out the window with a frown.\n\n\"Harold, you're not wearing your happy face. What's going on?\"\n\nPeterson slowly turned to face me. He seemed to be studying me for a moment and then he spoke slowly.\n\n\"I just got off of the phone with Jamison. Corporate is sending me a new Senior Manager. He will be here on Monday the 17<sup>th</sup>.\"\n\nI opened my mouth to say something but he cut me off.\n\n\"I don't know what's going on but I intend to find out. We'll talk about this after I know more, but I wanted to let you know right away because it will directly affect your position here. Right now I need to make some phone calls.\"\n\nWith that I understood it was time to return to my office.\n\nJamison was a vice president at corporate headquarters in New York and head of the Human Resources Division. This was a highly unusual move on the part of headquarters. Under normal circumstances, it would be the field office that requested a new senior manager, not the other way around. Something was not right.\n\nThat night I told Colleen what was happening and she was as concerned as I about what it might mean to my job with Willis, Goldman &amp; Reed. She pulled me into her bosom and was gently stroking the back of my head when she said, \"Try not to worry. Everything will work out all right and we'll be fine.\"\n\nBut I did worry, and the next few days were not productive for me. The memories of Derrick Andrews being suddenly thrust into the Chicago office came rushing back to haunt me and sleep was a precious commodity.\n\nThe next afternoon, Harold walked into my office and sat in the chair next to my desk. He leaned back and stretched his legs out straight. He clasped his hands behind his head and stared up at the ceiling for a moment before he spoke.\n\n\"The new guy's name is Jack Cartwright and is supposed to be a hot shot at management. He's already been to the Atlanta and St. Louis offices and now some jackass thinks we need to have him here. This corporation has ninety-seven offices and San Miguel isn't even half the size of most of them. We have the highest profit margin in the company and we're number eleven in terms of real dollars generated. The idea that we need management help is horseshit. I don't like what's going on but I guess that we'll have to wait until he gets here and see what happens.\"\n\nAt 7:55 AM on the morning of Monday the 17<sup>th</sup> Harold and I were in the lobby of the office. The office begins work promptly at 8:00 and we were waiting to greet Cartwright. Mrs. Nelson is a charming lady in her sixties and had been our receptionist for almost forty years. She had already settled in behind the counter and was preparing for the new work week to begin. By 8:20 Harold was fuming when we heard someone walk through the front door.\n\nHe appeared to be in his late twenties and made a quick visual survey of the lobby then walked towards us. Even from ten feet away we could tell that his suit was incredibly expensive and with his hair slicked back he looked like he had just stepped off the cover of GQ Magazine. He regarded us with the beginnings of a sneer at the corner of his mouth and stood there saying nothing. Harold put out his hand and said, \"Good morning...Jack Cartwright?\"\n\nCartwright looked down at Peterson's hand but didn't shake it. \"You must be Peterson,\" was the only thing he said.\n\nHarold pulled back his hand and I could see the color of his face slowly begin to turn red. He gestured towards me and said, \"This is Robert O'Conner. He is the Senior Manager here.\"\n\nCartwright glanced over at me for less than a second then back at Harold and spoke.\n\n\"We'll see about that. Now let's get started, there's a lot I want to get accomplished today.\" He turned and leaned over the reception counter and spoke to Mrs. Nelson who was smiling sweetly at him.\n\n\"Listen sweetheart, why don't you make yourself useful and get me a cup of coffee. I take it cream no sugar and you're going to want to remember how I like it.\"\n\nHarold was standing directly behind him. He reached out and grabbed the back of Cartwright's pants at the waist and yanked up as hard as he could. This produced a wedgie of epic proportions. Cartwright went up on his toes, eyes bugging out, and he emitted a shrill screech that began going up in pitch until it reached a frequency of sound that only dogs could hear.\n\nStill holding Cartwright up on his toes, Harold grabbed his coat and shirt collar at the back of his neck and pushed down until his torso was parallel to the ground. Keeping him in that position, Peterson spun him around and began marching him across the lobby towards the front door. Marie from housekeeping was polishing the glass and stopped to open the door as they approached. Harold bodily threw Cartwright out the door and we watched as he bounced once on the sidewalk and skidded towards the gutter. Harold pointed to his left and said, \"The unemployment office is six blocks that way,\" then came back into the building.\n\nAs soon as Harold had grabbed Cartwright, Mrs. Nelson picked up the phone and began punching in numbers. By the time Harold got back to us he was breathing heavy and reached out to take the receiver that Mrs. Nelson was offering to him. \n\nThis was obviously a routine they had participated in before.\n\n\"Hello, Jamison? This is Peterson...that's right, your boy Cartwright showed up...no, I fired his ass and threw it out on the street... Jamison, you're stuttering again. Just shut the hell up and listen...I don't give a rat's ass what you think...well whose bonehead idea was it...listen very closely; I have two things to say to you. Derrick Andrews and Tony Patterson...just calm down before you wet yourself...if they've got a problem with it, tell them to call me directly...listen; don't ever send me an asshole like that again. If you do, I am personally coming to New York and explain to the Board why that's not such a good idea...that's right, I knew you would see it that way once I explained it. You have just a peach of a day.\"\n\nAt that moment I truly and absolutely knew that Harold Peterson is one of the good guys.\n\nHarold hung up the phone then rubbed the bridge of his nose, lost in thought for a moment.\n\n\"Mrs. Nelson, if you would be so kind as to file a sexual harassment charge against Mr. Jack Cartwright, I would greatly appreciate it.\"\n\nDuring this whole time, Mrs. Nelson had been smiling pleasantly as she watched the proceedings.\n\n\"Right after lunch Harold,\" she said, and then she smiled in my direction. \"Usually they last until at least Thursday. This one was a record.\"\n\nBy this time Harold had calmed down and turned to me.\n\n\"Did anyone else smell liquor on his breath? Robert, I'm going to need you to sign the claim form that you witnessed Jack Cartwright sexually harassing Mrs. Nelson. By the way, I'm playing golf with your brothers on Saturday and we need a fourth, do you think you can make it?\"\n\n\"Uh...yeah...sure...I'll have to check with Colleen but I think I can make it.\"\n\nAs much as I get nauseous from the mere thought of playing golf, at that moment I would crawl on my hands and knees bare assed naked across a field of broken glass for this guy.\n\nI begged Colleen to not let me play golf but I ended up going and actually had a blast. For the first time in my life I scored below 220 for eighteen holes and still won the match. Mike and Jimmy spent the entire morning laughing after I told them what Harold had done to Cartwright.\n\nMom and Dad were each the \"only child,\" so Colleen and the twins and I grew up without any aunts, uncles or cousins of our own. Because we live in San Miguel and out of necessity had to limit our contacts in Santa Teresa, our extended family grew through adoption.\n\nMiss Jennings and her partner SaraJane became the sisters that Colleen never had growing up. When we are at the office she will always be Mrs. Lopez but our kids love their Uncle Ray and Aunt Connie to death. And Harold Peterson&hellip;\n\nHarold is a smart businessman with a gruff exterior and when the need arises, can exhibit a take-no-prisoners approach. But he is fair and gracious in all his business dealings, highly respected by his peers. He is an intensely private person with a crusty exterior as a public face, but in reality he is a considerate and compassionate man, especially regarding his employees. When Linda Stewart's husband was injured in an industrial accident and hospitalized for eight months, Harold authorized a ten thousand dollar third quarter bonus for Linda that kept their home out of foreclosure. \n\nBut his particular weakness is children.\n\nHarold has spent countless hours pulling strings and calling in favors to get the children of his employees into the college of their choice or arranging scholarships for those that had no hope of going to college at all. Every three year old that wanders into the building knows that Harold is a soft touch and keeps a dish of chocolate drops on the corner of his desk.\n\nBut there is a special connection between Harold and our kids. Even with the grumpy look on his face and his habit of barking out his sentences, the kids knew instantly that on the inside Harold is as tough as a chocolate souffl&eacute;. The second time she met him Meghan called him Uncle Harold and he has been that ever since. \n\nMom and the twins had met Harold and the two Sara's at the wedding and accepted them as part of the family. Mike and Jimmy immediately bonded with Harold over an irrational love of the game of golf. Mom and Sharon and Mi Lin simply pulled the two Sara's into their circle as if they had always been there. After Connie and Ray moved here from Chicago, the circle grew a little bit larger. With law enforcement as a commonality, Jimmy and Ray instantly connected and as always, Mike came along for the ride.\n\nOne day the twins and Harold cornered Ray and was trying to harass him into playing golf with them. Ray did not have a look of amusement on his face when he said, \"I shot the last guy that asked me to play golf with him.\"\n\nThere was a brief moment of silence until Mike responded, \"So-o-o&hellip;can we take that as a maybe?\" \n\nYou would think that living in a house with five kids would be sheer bedlam twenty-four hours a day but this was not the case. From the very beginning, all five worked together, running like a well oiled piece of machinery. I have never seen another group of sisters and brothers establish a set of relationships quite like theirs. Colleen and I did not overtly push them into any particular behavior pattern; they just worked it out on their own. There were squabbles and the typical sibling flare ups, but the pouting and hurt feelings never lasted more than a couple of hours and then the participants were back to helping each other finish the household chores and struggle with tonight's geometry homework.\n\nMeghan and Molly were inseparable, constantly finishing each others' sentences. Noelle and Brigid are the same way. Two pairs of best friends completely devoted to each other. Meghan and Molly took their role as older sisters very seriously. They were constantly there for Noelle and Brigid, holding hands, kissing boo-boo's, offering comfort and teaching them how to fold napkins for dinner. All four of them insisted that Meghan and Noelle share a room and Molly and Brigid share the other. They wouldn't have it any other way. I don't think anyone of us would have survived if the Gang of Four had not had the bond that they do.\n\nThe Gang of Four absolutely adored their brother and worshiped the ground he walked on. But they were not at all hesitant to slap him on the back of the head and tell him to \"stop acting like an idiot!\" This kept him from developing any exaggerated sense of self importance. \n\nWith the Gang of Four paired up this left Christopher as the odd man out but it never seemed to affect him. One day when he was about four, Chris was sitting at the dinning table, deeply engrossed in drawing pictures on the back of some used sketch paper that Colleen had given him while his sisters were having a conspiracy meeting in one of the bedrooms. As I sat down next to him, I studied him for a moment wondering how he fit in as an individual into this web of best friends."
    ],
    "authorname": "Texas Refugee",
    "tags": [
        "incest romance",
        "siblings",
        "brother",
        "sister",
        "pregnant"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/colleen-ch-03"
}