{
    "title": "Blind Date Ch. 02: Blake's Story",
    "pages": [
        "I landed in San Francisco late Friday morning and checked into my hotel. It was the first time I'd been anywhere since Glenn died. It felt strange traveling alone.\n\nI ignored my thoughts and got ready to meet up with my Navy buddy, Ernie Shuler. We were going fishing, which wasn't really my scene.\n\nErnie was getting married tomorrow and I was in town for the wedding. I hadn't seen him in several years, but we'd become brothers in RTC and we'd stayed close ever since.\n\nI met him and his two groomsmen at the dock and we climbed aboard. The captain of the fishing boat thought it was amusing to have four Navy men on board. We joked back about how tiny his boat was.\n\nAfter several hours and a few beers, we were back on land and hanging out in Ernie's Best Man's backyard. It was nice to catch up and I forgot about the actual wedding the next day for a while.\n\nI'd seriously considered not coming to this wedding. I loved Ernie and his fianc\u00e9e Nicole was amazing. But I lost my husband to cancer six months ago. A wedding was going to be hard.\n\nFriday with the guys was great and I was so glad I had come after all. But back in my hotel, looking at my uniform, I was starting to get stuck in my sorrows all over again.\n\nAt the last wedding I'd attended, Glenn's uniform had hung beside mine on the night before. We'd celebrated alongside his sister and her new husband.\n\nI hadn't spoken to any of the McGuiness's since right after the funeral. They'd been my family and then they just weren't. I didn't contact them and they didn't contact me.\n\nThere hadn't been a falling out, there just wasn't any reason to stay in touch. Our connection to each other, Glenn, was gone. We didn't have kids or own a house or anything like that, so the family ties died when he did.\n\nI still saw his sister's Facebook posts and I knew she was pregnant, but I didn't even \"like\" the photos. I lurked where she couldn't see me. I'm not entirely sure why.\n\nI slept fitfully and awoke filled with apprehension. I walked across the street and got a giant hot coffee. Back in my room I very slowly pulled on my Full Dress Blue uniform. I imagined Glenn fussing over my medals and my gloves and hat.\n\nI pulled myself back into the present and stared in the mirror at Lt. Commander Blake Cameron, decorated Naval Junior Officer. I needed to be this version of myself today and put Blake, the husband of the deceased Lt. Glenn McGuiness-Cameron aside. My training would keep me calm. It had to.\n\nAt the Temple I milled around with other sailors and guests until it was time to take our seats. Ernie and Nicole were married and a glass was stomped. I stood and clapped and cheered as they walked back down the aisle, married and glowing with possibility.\n\nThere were shuttles provided to take guests to the hotel where the reception was being held. I sat at the hotel bar with some other guests while we waited for the party to start. I made small talk, but I couldn't tell you what it was now.\n\nI wanted another drink, but I wasn't going to get drunk in uniform. That was just not done. I nursed a Coke with lime that looked like a cocktail instead.\n\nIt was a typical wedding reception with a nice luncheon buffet. The cheerfulness was starting to get to me though. I returned to the hotel bar for a break from the general celebratory atmosphere. I was starting to flag.\n\nErnie found me at the bar and asked how I was doing. I smiled and hugged him again, telling him I was doing great. It was his wedding day. I wasn't going to drag him down no matter how much I wanted to talk to my buddy about my pain.\n\nBefore he headed back into the party, I told him I was going to call it a day. I was tired from traveling and a little overwhelmed. We hugged again and we promised to catch up soon. I made my escape.\n\nBack in the hotel, I removed my stiff and heavy uniform and hung it with care in the closet where I didn't have to look at it. I pulled on jeans and a t-shirt and ventured out into the city. It was only three in the afternoon and I might as well see San Francisco while I could.\n\nI walked through The Castro and enjoyed the Saturday afternoon bustle among the rainbow painted streets and buildings. I compared it to Boystown back home. The fact that it wasn't flat was the main difference.\n\nI had a late lunch in a little caf\u00e9, sitting outside to enjoy the California weather a bit more. A couple walked past, kissing and squeezing each other tightly. I missed Glenn again.\n\nGlenn had been as white and as vanilla as you could get. He was so straight-laced, I'm surprised he could actually be gay. But he loved me and I loved him. He promised to be faithful and to stay with me forever. I took that offer and it lasted five short years.\n\nWe'd met at a training event and dated long distance for a few months. He was able to transfer to my location and we dated in person for eight more months. We got married after a year of having met and we were married for five years before he passed.\n\nGlenn wasn't feeling well for a few weeks when we started seeing doctors. We were told repeatedly it was an infection of some sort and he was put on heavy antibiotics. He felt so sick taking those meds.\n\nWhen he'd finish a course, he'd feel better, but only the symptoms of his reactions to the antibiotics would go away. His original illness persisted. Many doctors and many frustrations later, he was diagnosed with Stage 4 brain cancer. No one had found it in six months. I was so angry.\n\nBefore we had time to come up with a plan, Glenn took a turn and died just two weeks after his diagnosis. I wanted to beat the crap out of every one of those doctors that gave him medicines for an infection. My anger was unbearable. My sorrow was absolute.\n\nSix months later, I was still sad and mad, but it was manageable. I'd seen a doctor at the VA and they had given me some antidepressants. I had bi-weekly counseling for a while. I was still seeing the therapist, weekly now.\n\nI was starting to feel like myself before this trip. I hoped I hadn't set myself back by coming here to attend a wedding. According to my mom, I needed to start dating again. I needed to have sex. I'm sure she could hear my eyes rolling over the phone when she'd told me that.\n\nMy mom was originally from Mississippi and she lived in Atlanta, which is where I was born. She knew I was gay before I did. She was an advocate and an ally, even when that was a difficult thing for a Christian southern single black mother to be. She was my number one supporter in everything I'd ever done.\n\nThe happy couple continued to grope one another on the street and I thought about her words. Maybe I really did need to get laid. Now would be the perfect time. I was on a mini vacation a half a world away from home. Anonymous sex sounded tempting.\n\nI slowly headed back to my hotel, turning everything over in my mind. Thinking about sex made me think about my relationship with my husband.\n\nGlenn was a boring lover. We had sex on schedule, twice a week. We used the same position almost every time. Glenn would fuck me doggy first and then he'd finish with me face down, flat on the bed, underneath him.\n\nHe'd come without much fanfare and then he'd jerk me off if I hadn't come myself yet. I nearly never did come from fucking. Glenn didn't have a big dick or much skill, so he didn't get me off from penetration. I'd take over jerking myself off at some point and he'd quietly watch until I came.\n\nIt hadn't always been that boring, but it was that way for the vast majority of our relationship. I truly loved Glenn and he was enough for me. I hadn't really had a lot of boyfriends or hook-ups even before I met Glenn.\n\nGlenn was my type. He was white, thin and pale. He had reddish blonde hair and green hazel eyes. His dick was a little over six inches, but he could get hard quickly, so that was something.\n\nWhen we'd been transferred to Great Lakes, we'd met a few other gay couples. They immediately assumed I was the top in our relationship.\n\nI was an inch shy of six feet and quite muscular. My arms and back were covered in tattoos. I'm black, with closely trimmed hair and a clean shaven face. I was the more outgoing of the two, the more confident personality in our marriage.\n\nI had a big dick, bigger than Glenn. I was about seven and half inches. I could top, but I loved to bottom. Glenn was a closet top, which always made me laugh. He'd rather tell people he was the bottom than deal with the surprised looks when people learned the truth.\n\nI dated a few black guys, but they always thought I acted too white to be a black guy. My skin is medium brown and my features are unmistakably African and Caribbean. But I was highly educated, well spoken and militant in my behavior, as befitted my rank and position in the Navy.\n\nI went into the Navy at eighteen. I'd gotten my bachelor's and master's degrees while in the service and I'd become a commissioned officer. I climbed the ranks steadily and I worked as a mid-level administrator at the VA Hospital in Waukegan, IL.\n\nGreat Lakes was located just north of Chicago. It was home for the last two years. I planned on staying here until I retired. I liked the area and it didn't remind me of Atlanta. Glenn hadn't wanted to stay here, but now that he was gone, I was ready to settle in.\n\nI had started the house search before I came to San Francisco for this wedding. I wanted out of the housing I'd shared with Glenn. I needed to move on physically and emotionally.\n\nSpeaking of physical, I thought about having sex again. Glenn and I stopped having sex when he was ill. Neither of us had the energy for it. It had been close to a full year at this point. I only masturbated when I absolutely needed to, which sadly wasn't often.\n\nI'm thirty years old. I'm a virile, young black man. I should be jerking off daily, or at least almost daily. I should be having hot sex. Why was I so boring and old feeling? I needed to listen to my mom. I should have sex. Now.\n\nI looked online for a hook-up, but nothing really tempted me. I closed the app due to the random guys that kept reaching out. Nothing appealing presented itself. I decided to take a shower and chill out for a while. Maybe someone better would show up online in an hour or two.\n\nShowered and relaxing on the big hotel bed, I let two hours drift by and I considered just calling it a night. But my mom's voice rang out in the back of my mind again and I decided to try one more time. I should seize this unique situation and get laid.\n\nI got on Grindr and checked out the available men. I was about ready to give up when a new guy, really close by, popped up online. I checked out his profile. He was incredibly good looking and a top. He called himself a \"hung top\" which was intriguing.\n\nI sent him a text. \"Hey, I'm Blake. I'm looking to get laid and you're fucking gorgeous. Want to meet up?\"\n\nI twisted my hands nervously while I waited for him to answer.\n\n\"Hey Blake. You're pretty attractive yourself. What are you looking for tonight?\"\n\n\"A vacation hook-up. I'm in town for the weekend for a wedding. I like your pictures.\"\n\n\"Where are you staying?\"\n\nI gave him my hotel info and room number and paced nervously for the next twenty minutes. I looked at his profile over and over.\n\nHis name was Dex and he was twenty eight. His pictures showed off his perfect body, while still decently clothed. There weren't any pictures of his naked dick online, which was refreshing.\n\nHe was tall and thin, blonde and blue eyed. He looked like a model with perfect hair. He worked at a salon, so that made sense. He was a white guy that wanted to top a black guy. That was good enough.\n\nWhen Dex arrived, he seemed nervous, which actually made me feel less so. I smiled and invited him in. Before I could stop myself I blurted out TMI.\n\n\"Thanks for coming. I just wanted to let you know I've never done this before and I'm a little nervous. I hope that's okay.\"\n\n\"Yeah, that's more than okay. It's also my first time doing this and I'm pretty nervous too.\" He paused and looked around the room and then back at me. \"Is that a wedding ring?\"\n\nWhat? I hadn't realized I was fiddling with the gold band on my left hand. \"Yeah, it is. My husband died of cancer six months ago. I'm still not ready to take the ring off.\"\n\nOh crap. I'd probably killed the mood with that confession.\n\n\"Oh shit, I'm sorry.\" He mumbled something else, but I was nearly panicking so I missed it.\n\n\"Sorry, that's a lot of baggage for a hook-up. I didn't mean to ruin the mood.\" I needed to let this poor guy off the hook. What a moron I was.\n\n\"No, you didn't. I'm sorry. I'm recently off a divorce myself. I was cheated on and I didn't want to be the guy someone cheated with.\" Dex looked at me with compassion, understanding maybe.\n\n\"Sounds like we both need this.\" I hoped this could turn around. Dex was beautiful and I wanted him.\n\n\"Yeah, we do.\" Dex smiled and stepped closer to me.\n\nHe ran my hands down my arms and then pulled my shirt off over my head. His eyes were glued to my tight and toned bare chest. I moved closer and kissed his neck. He was so perfect, I needed to feel him.\n\nI undid his buttons as we pulled at each other's clothing. Finally, we were getting down to the task at hand. I was going to have sex! Thank goodness.\n\nWe moved onto the bed and kept kissing and caressing until we were both totally nude. It was more passionate than anything I'd experienced in years and years. His soft lips explored my body, lightning up all my nerve endings.\n\nI needed to touch him, taste him. I moved until he was on his back, spread open for my pleasure. His penis was enormous. He'd said it was just shy of ten inches and I almost thought he was underselling it. I craved it as I reached for him.\n\nI sucked Dex into my mouth and deep throated him. I hadn't done this in years and never with a man this large, but I was so into it, it felt amazing to choke on his thick white shaft. I was lost in the sensation when he stopped me.\n\n\"You're going to make me come, Blake. I need your ass, now!\" His hands were pulling at me, signaling me to change positions. I smiled at him as I climbed into his waiting lap.\n\nHe'd brought condoms and lube so I grabbed one from the night stand and rolled it down his rigid pole. I lubed my ass hole and his erection. I felt more turned on than I could remember ever being before.\n\n\"I want you to fuck me hard, Dex.\" My words surprised me but I was lowering myself onto his huge cock and I knew it was true. It was so big I had to really work to take him in. It stung and burned and I wanted all the pain and the pleasure.\n\nI closed my eyes and concentrated on taking him inside me. His hands held my waist to support me as my legs shook with the effort. I felt my bottom meet his lap and I opened my eyes. His blue eyes stared into mine and I smiled at him. His grin made me dizzy and squirmed on top of him, causing jolts of pleasure to shoot through both of us.\n\n\"Fuck, you feel amazing Blake. I'll fuck you as hard as you need.\" He said it so lovingly and like it was a promise. He looked at our connected bodies with a satisfaction that made my heart race.\n\nI started to ride his dick, up and down his thick length. It felt amazing, even with no real rhythm to it. The friction was intense and I needed more and more. He must have felt it too because he started to take control.\n\nDex gripped my hips and started to thrust up to meet my movements. The pace got faster and faster, the sensations were now incredible and nearly too much, but I wanted it all.\n\n\"Fuck! Dex, yes, fuck yes! Ohhhhhhh, fuck me!\" I had to brace myself against his shoulders for support as he did just what I asked. He fucked me harder and faster until I was screaming.\n\n\"Take it, Blake! Take that cock!\" His words and movements pointed to his impending climax.\n\nI took all the cock he could give me. I felt my own orgasm racing through my body and I let it crash over me. I know I threw my head back and screamed as my cum shot out. My body was clenching and throbbing everywhere as I came in massive spurts.\n\nI was barely aware when Dex came beneath me. He pulled me down onto his giant cock as his body filled the condom inside me. Limp, I fell forward onto Dex's heaving chest. I rolled off him and nestled into his warm, sweaty body. His cologne and our sex filled my nostrils. It felt life changing.\n\n\"I haven't come that hard since I was in boot camp.\" I admitted.\n\n\"That was amazing. I've never seen anyone shoot a load like that. It made me come just watching it.\"\n\n\"I haven't had sex in close to a year and I barely masturbate anymore. I think the last time I came was two weeks ago, maybe longer.\" Again I offered way too much info.\n\n\"No wonder you hit the fucking wall behind me! You said we needed it and clearly you were right. Fuck, Blake, that was fucking hot.\" Dex smiled down at me. He was not what I expected from a vacation hook-up.\n\n\"Do you want to get some delivery and then maybe have round two?\" I asked him tentatively.\n\n\"Fuck yeah! I'm starving and I could definitely go for another round or two with you.\" His grin made my body throb and my heart race again.\n\nWe had fresh sushi delivered and it was incredible. We sat on the bed, smiling and laughing while eating our late dinner. Dex was kind of perfect. Beautiful, funny, smart and charming. I was glad I'd met him, even if it was for this one night.\n\nWe talked a little bit about our past relationships. Glenn's death and Dex's messy divorce. It felt good to talk about it, oddly enough. He changed the subject and talked about his twin sister, which was interesting.\n\nAfter we ate, we both cleaned up from dinner and I was totally ready for another hard fuck. Twice in one night was a record for me. I'd never ever done that before but I needed it badly.\n\nWhen he came out of the restroom I was waiting for him. I watched him from my reclined position as he stalked towards the bed. His gold hair reminded me of a lion and I was his willing prey.\n\nHe climbed on the bed and immediately took my erection into his mouth. I touched him everywhere I could reach as he devoured me. But I needed more.\n\n\"Fuck me, Dex. I need you again.\" I said it softly but he heard and he came up and started to kiss me tenderly. He quickly lubed up my hole and put on another condom.\n\n\"I'm going to make you scream my name again.\" He moved in closer as he said it and pushed into me, filling me with his huge manhood.\n\n\"Fuck! Yes, Dex. Oh god, I need you!\" My whole body quaked and I lay back and enjoyed all of it.\n\n\"I need you too, Blake.\" He said it sweetly and then he started to fuck me furiously. It felt........ indescribable.\n\nHe shifted between several positions, changing the angle until he was making me scream in pleasure. He knew how to hit all the right spots and I tried to take even more.\n\nHe was like a machine, keeping his intense pace until I was thrashing and screaming. He grabbed my cock, pumping it in time with his brutal thrusts. I came extremely hard again just as he did too.\n\nHe gently pulled out and let me relax back into the mattress. I reached for him and pulled him into my arms. I probably shouldn't have, but I didn't care right then.\n\n\"Thank you.\" I whispered my gratitude into his warm skin. It was all I could think to say as my body hummed with deep satisfaction.\n\n\"Thank you, Blake.\" I heard his raw honesty. We both had needed each other more than I think we realized yet.\n\nWe lay tangled together, enjoying the silent aftermath of our incredible sex. I enjoyed it as long as I could. I knew it was over though.\n\nSure enough, Dex must have had the same thought. \"I need to head home. You have an early flight tomorrow.\" He sat up and moved to the edge of the bed.\n\n\"I really can't thank you enough for tonight Dex. I needed this and you have been so kind and amazing. Not to mention the best fuck I've probably ever had.\" Honest and accurate. Very me.",
        "\"I needed it too. Thank you, Blake. I had an amazing time. Look me up if you're ever back in the bay area.\" He was nice until the very last second. I walked him to the door and hugged him goodbye.\n\nAfter he left I felt numb. Within seconds I was crying uncontrollably. I decided to shower and try to get some sleep. I cried during the whole shower.\n\nIn the dark, I lay awake thinking about a million things. I loved and missed Glenn but I didn't want to be alone. I'd just had the best sex of my life and I felt so relieved. It was a strange mix of emotions. I finally fell asleep at some point.\n\nI flew home on Sunday morning, my head higher in the clouds then my plane. The late April weather in Chicago was as crazy as I'd grown to expect. It was sunny when I landed and it felt like it might snow by the time I made it home, less than an hour north of the airport.\n\nI was glad to get back to work and my regimented military life. For a time. But it didn't last. I felt like it was time to change. I was scared and excited. I called my mom to talk about it.\n\n\"My baby!\" She screamed into the phone upon answering.\n\n\"Hey, Mom, how are you?\"\n\n\"I'm fine. How are you? How was that wedding in California? I haven't gotten to talk to you since then.\"\n\n\"I'm alright, back to being busy at work and still looking for a house. The wedding was good. I left a little early, but otherwise I did alright.\"\n\n\"That's good, sweetheart. You sound different. Did you have sex?\"\n\n\"What the hell, Mom? Geez.\" She could be so creepy sometimes.\n\n\"That's not an answer, Blake. Tell me what happened.\"\n\n\"Mom, I love you but I'm still not telling you about my sex life.\"\n\n\"I don't want details, smartass. Did you meet someone? Tell me what happened and you know what I mean.\"\n\n\"I met a nice guy in California and we hung out. I came home the next day. That's all that happened.\"\n\n\"I'm happy for you, sweetie. Is he military?\"\n\n\"No, he's a hairdresser and he manages a salon. I'm never going to see him again though, so it doesn't matter.\"\n\n\"Okay, fine. Do you feel better?\" Or guilty? She didn't ask that but I knew that's what she meant. We'd had this discussion before and my answers evolved over time as I healed.\n\n\"I actually do. I felt better right away. You were right. Happy now?\" I just said what she wanted to hear. She would have dragged it out over the next fifteen minutes, so I just dropped it right in front of her and moved on.\n\n\"Your mother is always right, boy!\" I could hear the smirk in her voice. Just like she could hear my eyes rolling all the way in Georgia.\n\nI told her I was ready to go out with friends, but not necessarily ready to date. But getting back to my social life sounded and felt right. My friends hadn't stopped inviting me out, but now I was ready to accept instead of declining.\n\nA few days later I reached out to my usual gym partner, Tom. He and his wife Gia were locals and the people I still saw more often than anyone else. We set up a small get together at their family lake house in Wisconsin for the upcoming Memorial Day weekend. I had something to look forward to.\n\nWhen the time came, I drove up to the tiny cabin on a small, private lake. It was quiet out there and that didn't scare me like it had months ago. I used to fear being totally alone with my thoughts, but that was getting better all the time.\n\nThe weekend was fun and laid back. We cooked out for every meal and we caught up without rehashing ancient history. It felt good and not stunted and awkward like all my conversations had been right after the funeral.\n\nI actually didn't want to head back to work on Tuesday, which was a lot more like old times, too. I always went to work, but I'm human so I didn't always want to.\n\nAs June began I decided to reach out to my gay friends in the city. It was harder to hang out with them without Glenn as everyone was in a couple. But I missed them and I really wanted to put myself out there, in a fashion.\n\nTom and Gia were great, but they were more reserved and \"normal\" than my gay family. Not that my friends were wild, but they were a bit more out there than the suburban straight couple.\n\nRob and Dirk were ecstatic to hear from me and to hear that I wanted to hang out. I was glad they were glad, but also suspicious, because time had taught me to be suspicious of that pair. They always had something up their sleeves.\n\nThey invited me to dinner at their place, which sounded safe enough. I got dressed in nice clothes and put on cologne for the first time in forever. Glenn never really liked cologne, so it was rare that I wore it. But I liked it, so I dabbed it on.\n\nI stopped and bought a good bottle of wine and a giant bouquet of carnations, which I knew Dirk loved. They were all bright colors and variegated varieties. Seeing them on my passenger seat gave me mixed feelings.\n\nI was excited about a nice dinner with friends, but Glenn used to fill that seat and hold the flowers and wine. I took a deep breath and blew it out. I didn't want to cry, which was a big step forward. I was healing, slowly. That made me smile to myself.\n\nI arrived at the brownstone that they'd been renting for twelve years. I knocked and heard excited screaming as Dirk ran from the kitchen to open the door.\n\n\"You're here!\" He yelled as he pulled me into a crushing hug. \"We're so glad to see you, Blake. Come in, come in!\"\n\nBy the time Dirk released me and took the wine and flowers, Rob had arrived at the door to welcome me as well. He smiled brightly and hugged me, saying nice welcoming things into my ear quietly.\n\nLuckily dinner was nearly ready so there wasn't time to get stuck in a weird conversation. Instead I helped finish setting the table, which had four place settings on it. What were they up to? I fought the desire to interrogate or run away.\n\nDirk placed the carnations, now in a gorgeous art glass vase on the table as the doorbell rang. He grinned at me mischievously and darted to the door. I tried to calm my surge of nerves. It felt like a trap.\n\nI could hear him screaming at the new arrival, just as he had when I'd arrived a few minutes before. I headed back into the kitchen where I hoped to find the calmer Rob. But I just missed him as he also went to greet the person at the door.\n\nSoon my hosts and the new guest came into the kitchen. The new arrival was a good looking guy, of course. I tried desperately to not roll my eyes at this whole setup.\n\n\"Bradley, this is our dear friend Blake. Blake, this is Bradley.\" Dirk introduced us, grinning like the Cheshire cat the whole time.\n\n\"Nice to meet you Bradley.\" I shook his hand.\n\n\"Likewise, Blake.\" Bradley smiled politely.\n\nOn the surface, I understood this whole scene. Bradley was a thin white guy with light brown hair and big blue eyes. He seemed nice and I'd have to assume, single. This was a set up, in which I had no interest. But I decided to play it cool and see where this dinner went.\n\nEveryone sat at the table and Rob and Dirk carried the conversation at first but then it shifted. Dirk started asking loaded leading questions to both Bradley and I. He alluded to our shared single statuses with no subtlety whatsoever.\n\nBradley seemed like a really nice guy, but I didn't want any part of this right now. I'd barely gone back to being somewhat social and I'd had a one night fling while all the way across the country. But dating, I wasn't ready for that at all.\n\nI felt no attraction to Bradley. I'd been instantly attracted to Dex. Whether that was because of the fact that I'd sought out a hook up with purpose or if Dex just had that \"thing\", Bradley was nothing like that.\n\nBradley was a slightly darker version of Glenn and right now, that was the last thing I wanted. Can you imagine trying to hook up with a man who could have been cut from the same cloth as your recently dead husband? I couldn't and I didn't want it, in any way.\n\nBy the time dinner was over and we'd moved into the living room to enjoy our wine and an after dinner cheese plate, I was already over it. No one had flat out said \" hey, you and Bradley should get together\", but it was all over all three of their faces. I was sure they'd prepped Bradley before he'd arrived tonight.\n\nI excused myself to the kitchen to top off my wine, which was just an excuse to get away from it all for a few seconds. I was startled when Rob addressed me from the doorway.\n\n\"So...........what do you think about Bradley?\" He smiled innocently.\n\n\"Honestly?\" I was ready to fight and he must have sensed it or read it on my undisguised angry face because he blanched.\n\n\"Are you okay?\" He stepped closer.\n\n\"No, I'm not. I haven't seen you guys socially like this in eight months and you think the first time we get together is the right time to try to set me up? You couldn't even give me one opportunity to catch up with you two without pulling this shit?\"\n\n\"Dirk and I thought this is what you wanted.\"\n\n\"Why would you think that, Rob? Tell me why that sounded like a good idea?\" My voice had gotten louder by now and I heard Dirk headed our way. I imagined Bradley wouldn't be far behind.\n\n\"Hey, what's going on in here?\" Dirk asked with Bradley right behind him, peering into the kitchen over his shoulder, just as I expected.\n\n\"Nothing, sweetie, we were just discussing dessert.\" Rob smiled and lied outright.\n\n\"No we weren't. What the fuck? I was asking Rob why you guys thought setting me up the very first time you'd seen me was a good idea?\" I rarely swore, but this was a good time for it. I was upset and getting angrier by the second.\n\nBradley disappeared behind Dirk, probably to avoid the drama he'd agreed to be part of. I looked between the two and they both looked worried and a bit guilty.\n\n\"Well? Nothing, huh? What a waste of my time. And Bradley's. I just buried Glenn eight months ago. What's wrong with you two?\" I felt tears fill my eyes. \"I'm going home.\" I deflated and moved down the hall into their bathroom and locked the door.\n\nI used the bathroom and washed my hands trying to calm myself so I could drive. I looked in the mirror and I didn't really recognize myself. And yet I looked exactly like Glenn's widower that had haunted my mirrors months ago.\n\nI was so angry. I knew these two were crazy but this was beyond crazy, it was actually cruel. I nearly jumped out of my skin when someone knocked on the door.\n\n\"I'll be out in a minute.\" I called out to the intruder. I looked back down at the sink and waited to hear them walk away, but they didn't.\n\nI finally turned and whipped the door open to find Dirk standing there. \"Can I talk to you in my office?\" He seemed really contrite, which I'd never thought he could pull off. I nodded and followed him down the hall.\n\nHe closed the office door behind us and he looked at me from his perch near the door. \"This is all my doing. Rob tried to talk me out of it.\"\n\nThat was completely believable. \"Why, Dirk? Why do this on the very first social call we've had since Glenn died? Why?\" I couldn't hide the hurt in my voice.\n\n\"I just wanted you to be happy. But I'm an idiot.\" He sat in his desk chair and I sat across from him.\n\n\"Seeing you two would have made me happy. This makes me sad and pissed off.\" I couldn't think of what else to say. I was tired and I really just wanted to go home. But I didn't want to go home. To my house I'd shared with Glenn.\n\n\"I'm so sorry. I didn't even think. I was treating it like a break up, but it's nothing like that. I knew that and yet I still thought it would help. I really am sorry, Blake.\"\n\nI released a huge frustrated breath and sunk further into the chair in a deep slouch, which I never did unless I was totally spent. And I felt exactly like that right now. Spent.\n\n\"Hey guys, I sent Bradley home. Do you want to come into the living room so we can talk?\" Rob had opened the office door as he asked his question calmly.\n\n\"Fine.\" I said with no inflection at all. I stood and followed Rob, Dirk came along behind me.\n\nI sat on the edge of the couch, ready to leave at a moment's notice. I didn't know how to feel, but I was mostly numb.\n\nI listened as the two of them apologized and promised to never do anything like this ever again. I just watched them as they tried to fix their mess. My life was the mess and they had meant well, but I couldn't really just let it go yet.\n\nRob grew concerned at my despondent posture and demeanor. And I finally found my words and let some of it out.\n\n\"I'm so disappointed and sad, you guys. I was really looking forward to coming here for a nice dinner with friends and now it's this whole upsetting thing instead. I know you meant well, but I'm the one who's losing traction. I feel worse now than I have in over a month. I just can't believe you did this.\" I put my hands over my face and tried to disappear.\n\nI heard Rob growl under his breath at Dirk, something along the lines of \"I told you\", but I just wished the whole day had never happened.\n\n\"Blake, what can I do to fix this?\" Rob was earnest in his desire to make it better. In this situation, right at that time, there was nothing that could fix anything.\n\n\"Nothing. I shouldn't have........I wish I'd........\" I couldn't come up with anything to say that wasn't completely rude and/or mean. I deflated even further. \"I really just need to go home.\" It was barely louder than a whisper.\n\nI looked at them and then I stood. They both shot up to stand as well. They both looked almost panicked. I think the real damage done was finally sinking in for them. They'd set me back, stalled my healing, fucked up my progress.\n\nThey could tell I was worse off than I'd been when I'd arrived. They both looked nearly as bad as I felt. I felt bad that they felt bad. It was such a big dramatic mess that didn't even have to happen. Maybe I should have just bit my tongue. No! I shouldn't have to. Not with family.\n\nI barely remember saying goodbye and there were no hugs. Everyone was quiet and it was super awkward. I walked to my car with my head hanging low. I went to Tom's house the next day and chopped firewood for two hours by myself while he and Gia stayed in the house.\n\nExhausted and sore felt so much better than angry and sad. As I swung that ax over and over, I thought it all through. I wanted to fix things with Rob and Dirk. They deserved one more chance and I wasn't ready to give up on them and the rest of our crew.\n\nA few days later, I sent out a group message inviting them and six of our closest friends to have breakfast at our usual spot. Maybe a public place would work better for this. Everyone replied quickly.\n\nThe nine of us had firm breakfast plans. Me and four couples. I couldn't avoid this any longer. If I was ever going to be able to hang out with any of my old friends, Glenn's old friends, I needed to just go for it. It might not work, but I was prepared for that this time.\n\nI did prepare myself. If anyone tried to set me up or get me to date online or whatever, I was ready with practiced responses. I would explain I wasn't ready and I needed them to give me my space and time to deal with it. I would ask them to just be my friends, not my therapists or a matchmaker.\n\nSomewhat to my surprise, they were all on their best behavior. I instantly knew this was Rob's doing. He'd learned his lesson and he had shared that lesson with our family group, clearly. Dirk sat as far from me as possible, which I was okay with right at the moment.\n\nEveryone was happy to see me and asked how I was doing without dragging the day down. They four sets of gay men caught me up on what they'd been up to lately. And then talk turned to Pride, which was next weekend.\n\nI was happy when the conversation turned to the upcoming festivities. Leon and Frank were hosting a BBQ since they lived right on the parade route. They always did it up big, decking out their condo, especially the balcony that overlooked the street where the whole celebration would occur. We'd have burgers and hot dogs and plenty of drinks while the parade passed by. It was always fun.\n\nAfter the parade a bunch of us were going to the festival to see the vendors and all the craziness first hand. Glenn had always hated that part as it was so crowded and hot, but I always wanted to go. This year I would go and enjoy myself. Alone. I was actually starting to be okay with it. Really okay.\n\nThat night we'd club hop and end the evening at the biggest, best club in Boystown, where our buddy Stephan was DJing several sets over the weekend. We would all be there when he took the stage. It all sounded fun and I was ready for it.\n\nThe week went by quickly and I planned my outfits for the different events. I packed one small backpack and smiled to myself about only having that one bag to deal with all weekend.\n\nGlenn was an over-packer. He'd bring twelve outfits but only wear the three he'd originally planned to wear in the first place. He'd bring six bottles of sunscreen but only use a portion of one bottle. His bags were always heavy and ridiculous. It sometimes felt like it was just to make me crazy. But this time everything was different.\n\nAt the BBQ I did get some uncomfortable questions from the friends in the outer ring of our group and some acquaintances. Luckily, none of the questions really upset me. They were just strange and often nosy and unnecessary. At least they seemed that way to me.\n\nThe people that didn't know me at all were actually nice to talk to since they just saw me as Blake, black, gay, single Navy guy. Those conversations were wonderful. I had hope that the weekend wasn't going to be a total disaster for me after several of those chats.\n\nThe festival was extremely enjoyable. The food and drinks were crazy and delicious. The vendors were selling everything you could imagine. Some were racier than others, but the bright rainbow colors everywhere just made me feel good.\n\nI'd taken the train down so I didn't have to figure out where to leave my car or what to do with it if I was too drunk to drive home. Leon had picked me up at the train station while getting last minute supplies for the party that afternoon.\n\nAfter the parade and festival, I went back to Rob and Dirk's place along with a few others to rest and get ready for the clubs later on. Rob was totally normal and I felt happy about that. Dirk was still avoiding me a bit, but I knew it was something he did for me, not because he wanted to stay away.\n\nDirk had severe foot-in-mouth disease, so he probably just kept his distance to ensure he didn't say something stupid now that we were working towards moving past everything. Dirk deferred to Rob all weekend, wisely.\n\nI took a nap on the couch in Dirk's office while some of the others had more cocktails. I was a lightweight, not really much of a drinker, so a nap to recharge was much better for me than more alcohol. I would have been done for the night if I'd tried to drink more now.\n\nIt was extremely warm and humid as we started to get ready to go out. I decided against the jeans I'd planned to wear and instead I wore the black, tight fitting shorts I'd worn at the BBQ.\n\nI wore a white, square neck tank top that framed my muscular neck and stretched over my large pecs. It showed off my tattooed arms and the white was a good contrast to my dark brown skin. I wore a thick silver chain that fell in the exact right spot on my neck. It was about as \"gay\" as I ever dressed. I felt kind of sexy, which was good.\n\nWe met up with some of our other friends in front of the leather bar that some of the guys wanted to go to. For those of us not into that, we went to a regular old gay neighborhood pub. We got appetizers and ice cold beers. The music was loud and the party atmosphere was everywhere.\n\nI followed two of the couples around until it was time to go to the big club event where Stephan was DJing. Most of our group found each other outside and we invaded the dance floor en masse. The set was great and I forgot all about my real life as I bounced along with the whole crowd for a while.",
        "As the set wore down, I needed to drink something so I headed to the bar to get a Coke with lime. The crowd was so thick by now, I had to turn sideways to slide between the men filling the space. It was starting to smell sweaty and like stale beer, which I didn't enjoy at all.\n\nAs soon as I was able to get up to the bar, I patiently stood and waited for a bartender, refusing to give up my spot to the pushing and shoving mob that surrounded me.\n\n\"Can I buy your drink?\" An extremely deep voice said from above me.\n\n\"No. Thanks.\" I answered without looking at the tall man that asked.\n\n\"Are you here with anyone?\"\n\n\"My friends are right over there.\" I gestured to the left, randomly.\n\n\"Are you military?\" The deep voice persisted with the questions. This one caught me off guard and I finally looked over, and then up at him.\n\nMy eyes started at his foot that was propped up on the back of a barstool of another patron beside us. I saw a massive black combat boot with camouflage fatigues tucked into it. As I traced up the long legs, I found the largest thighs I'd ever seen. A military style belt wrapped around the waist of the giant by my side.\n\nHis chest and arms were bare, with only a thick, studded leather harness on his upper body. He was the largest, most muscular man I'd ever seen in person. He was covered in dark fur. His neck must have been 24 inches around.\n\nFinally, I saw his face. He was bearded with a shaved head. His dark eyes and thick black lashes watched me closely as I took him in. He was freakishly large. His face looked calm as he awaited an answer. What had he asked me?\n\nI finally remembered he'd asked if I was military so I answered. \"Yes, Navy. You?\"\n\nHe smiled warmly. \"No, I just like military surplus.\" His deep voice rumbled through my chest.\n\nI just nodded and turned back, hoping a bartender would finally get over to this side of the bar. He still stood beside me, but I ignored him, which wasn't easy.\n\nHe was the antithesis of my type. He looked Hispanic or middle eastern. His dark eyes and lashes made me think it was the latter. He towered over me and I'm five foot, eleven inches tall. He must be six foot six and over three hundred pounds. All of which was muscle from what I could see.\n\nHe must work out for hours every day. While I liked fit guys, this was obsessive and strange looking. He was older than me, probably forty or older. He was the poster guy for Muscle Bear Leather Daddy types. No thank you.\n\nI finally ordered my drink and when the bartender passed it to me, the giant dropped a twenty on the bar and told him to keep the change. He'd bought my drink but I still wasn't into any part of this. I turned to walk away. I didn't even say thank you since I'd told him I didn't want him to buy my drink.\n\nI found a fairly open space near a wall so I stood and sipped my drink and looked to see if I could find my friends. They didn't seem to be where I'd left them. I'd find them later, so it was fine. I just tried to enjoy the music and the atmosphere.\n\nAs I finished my drink I felt a presence behind me. I turned and sure enough the giant bear was there. He smiled at me and took my empty cup and tossed it into a nearby garage can.\n\n\"Would you like to dance?\" He asked, his deep voice surprising me all over again.\n\n\"No, not really. You do know what no means, right?\" I quirked my head to the side, challenging him.\n\nHe put his hands up in surrender and smiled warmly at me. \"Sorry. I'm not trying to be a jerk, I swear. I just had to talk to you.\"\n\n\"You did talk to me. And I declined.\"\n\nMy even, determined tone only seemed to draw him in, instead of push him away. \"I'm Deen.\" He stuck his enormous hand out in a friendly gesture.\n\nI just stared at his hand. Why wouldn't this guy just bug off? I leaned around him and looked into the crowd to find my friends.\n\nHe put his hand back down to his side. \"I can see above everything. Can I help you look for someone?\" He stepped back a little to give me space while offering his assistance.\n\n\"I'm good, thanks.\" I used the slight space he'd given me to turn and walk away. I needed to find one or more of my friends.\n\nI did spot one couple but they dissolved into the dark beyond the dance floor before I could fight my way through the crowd to get to them. Maybe it was time to call it a night. It was late and I'd lost six people. It sucked to be here alone right now.\n\nAs I stood on the edge of the dancefloor, trying to decide, I saw the giant coming my way. Deen, the persistent giant. He walked right up to my side.\n\n\"You look lost. Are you sure I can't help?\"\n\nI shook my head no.\n\n\"Dance with me?\" The music had changed to something poppy and peppy. I was tapping my foot unconsciously, which must have been his sign to try again.\n\nIt worked. \"Fine. I'm Blake.\" I walked away, onto the dance floor. He followed immediately.\n\nI let the music take me and I moved to the beat. I'd always had great rhythm and I was a good dancer. I let loose since I had a riveted audience of one. His eyes were all over me, but he kept a safe distance between us, respectfully.\n\nThe next song was a club banger as Dirk would have called it and the dance floor filled with sweat covered, horny homosexuals. I was shoved forward until I was pressed into Deen's humongous body.\n\nHe wrapped his arms around me and our bodies moved together in perfect time with the music. I lost myself in the feeling and rubbed against him suggestively. It probably wasn't the smartest idea, but I was done thinking and overthinking everything. Tonight was an escape.\n\nHis body was rock hard everywhere. I could feel him through his pants and he appeared to be as large there as everywhere else. It made my stomach flutter with need.\n\nSince I'd been with Dex, I'd been consumed with big dicks. I had been watching BWC on black bottoms porn videos. That big cock in California had changed me and I craved more dicks like that. This one felt even bigger.\n\nWe were just dancing and it felt like clubbing before I'd met Glenn. You danced with a hot guy and you imagined fucking him but you didn't actually bed them though. I had no intention of sleeping with the giant, but the fantasy was kind of exciting.\n\nSong after song played on into the night and Deen was right beside me for all of it. He could move that massive body in ways that I knew I'd be thinking about way into the future. I was shocked when the lights came on. It was four in the morning already?\n\nDeen reassured me it was only two. But this club was closing now, so it was time to find my friends and decide where I was going to crash. I hadn't come up with a firm plan before we'd gone out, which was unlike me.\n\nHe'd asked for my number but I said no as nicely as I could. I told him tonight was fun but I was going back to the real world.\n\nThis wasn't real. This was a fantasy night in an alternate reality. I slipped away from him as soon as I found an opening. I moved out onto the street where the humid air actually felt refreshing. I searched for anyone I knew.\n\nI pulled out my phone and I saw that Dirk and Rob had gone home over an hour ago because Dirk had gotten messy drunk. I sent messages to some of the other guys to see where they were. But no one answered.\n\nI was going to have to find an Uber at two in the morning to take me to an expensive hotel or all the way back to the northern suburbs. I wanted to be mad at someone, but I had no one to blame other than myself. I'd let the \"let loose for once\" attitude go too far and I didn't have a plan.\n\nI started to walk towards Frank and Leon's place as that would be my next best option. I could try to wake them or maybe I'd climb their balcony and sleep on one of their longue chairs. I could afford a hotel, but it sounded like such a hassle right now. There weren't any hotels with vacancies for miles around Boystown during Pride.\n\nI stopped and looked up at the street sign, confused. That wasn't where I thought I was. I thought I knew the neighborhood pretty well, but I was all turned around now. Maybe it was back the other way. I headed back towards the club to hopefully get my bearings.\n\n\"You really look lost this time?\" Deen's deep voice came from the darkness next to the club as he stepped into that light.\n\n\"I'm fine. Just got turned around.\" I tried to play it off but it was weak, at best. I decided to change the subject. \"What about you? Why are you standing around out here?\"\n\n\"I'm waiting for the valet.\" He pointed to the line that wrapped around the corner. \"I'm standing over here until the line is gone. I'm in no hurry.\" He leaned casually, but still looked like a caricature of a real person.\n\n\"Have fun with that. It was nice meeting you.\" I turned and walked away. Again.\n\n\"Blake, wait!\" His big booming voice stopped me in my tracks.\n\nI turned back, oddly hopeful. For what, I'm not really sure.\n\n\"Can I give you a ride somewhere?\" He stepped closer to me, looking concerned.\n\n\"I'm really fine, but thank you.\" I didn't move.\n\n\"Do you really have a place to go or not?\" Wow. He'd called me out, just like that.\n\n\"Not exactly. But I'll find a way home.\" I nodded as I made my decision. I just wanted to go home.\n\n\"Let me give you a ride. Please. I'd feel better knowing you got home safely.\" He was a gentle giant, apparently.\n\n\"I'm capable of taking care of myself. I'm a trained officer in the Navy, after all.\" I smirked to indicate I wasn't actually offended.\n\n\"I know you're capable. But even the most capable need help. It makes you stronger to accept help sometimes, not weaker.\"\n\n\"Okay, I get it, but I don't live in the city. I live an hour and a half away. I couldn't ask you to drive me all the way home.\"\n\n\"North? I'm heading north myself. Lake Forest. Heard of it?\"\n\n\"Seriously. Lake Forest? My place is in North Chicago, near the base.\"\n\n\"Great Lakes! Of course that's where you'd live.\" He laughed and shook his head like he'd just figured out something obvious. I guess he had. \"It's barely out of the way and I'm your very best option. Please let me drive you home, Blake.\"\n\nI relented. We stood and talked easily while we watched the line finally dwindle. We got in the back of the now very short line and he handed the valet his ticket. As they ran off to fetch his car, I wondered what kind of vehicle this guy drove. I bet it was a big military style Hummer. It fit his whole \"thing\" he had going on.\n\nI was surprised when a vehicle pulled up and Deen stepped up to the passenger door and opened it for me. I climbed into the luxurious interior and looked around in disbelief. Deen climbed in and as he exchanged keys with the valet, I saw him slip him a stack of bills as a tip. The tired valet smiled happily at the very last customer, who'd just made his whole night.\n\n\"Nice Cadillac.\" I said as I looked around the interior of the very new smelling Escalade. \"Not what I was expecting.\" I bit my tongue, wishing I hadn't said all that.\n\n\"I'm never what people expect. I'm used to it.\" He said it amused, but honestly.\n\nOur conversation flowed as we drove north towards the suburbs where we both lived, ironically enough. It wasn't really that ironic. The northern suburbs of Chicago was one of the most populated places in the country after all.\n\nI guess I just assumed he lived in the city, not way to the north. And in Lake Forest too, which was a wealthy area. I'd looked at one place in Lake Forest several weeks ago but the property taxes were astronomical. I didn't plan to look at anything else in that area as it was too pricey for my taste, even with my hefty salary.\n\nI learned that Deen was middle eastern and Deen was spelt with two e's not an ea. His family was originally from Saudi Arabia, but they'd been in Michigan for nearly a hundred years. He was born in Detroit. He had been a professional body builder for more than twenty years. He still worked out every day.\n\nI told him about being born in Atlanta and joining the Navy at eighteen. I told him about my Lt. Commander rank and what I'd done to accomplish that by thirty years old. I told him about my daily workouts. I avoided relationship info all together. He didn't mention any partners either.\n\nHe said something about his hotel room which struck me as odd, so I asked him about it.\n\n\"I'm having the plumbing redone at my place. I tried to live in the construction but that lasted four days before I couldn't take it. I'm in a hotel until my house is completely back together. It's going to be at least eight weeks.\" He shook his head to show his disappointment in the whole situation.\n\n\"That sucks. Is it an extended stay place, with a kitchenette and stuff?\" I'd stayed in those places several times while traveling for the military and while awaiting base housing to be ready.\n\n\"Yes. It's actually really nice, but it's not home, you know?\"\n\n\"Yeah. I'm looking for a new place myself. My current place is haunted. I'm staying in the area permanently, so I'm looking to buy for the first time.\"\n\n\"Haunted? You're moving because of ghosts? Really?\" He seemed curious and amused.\n\n\"It's haunted with memories and stuff like that. Not actual ghosts.\"\n\n\"Did you live there with an ex?\" Deen asked in the dark as we hit the northern suburbs and the lights of the city faded away.\n\n\"Yeah. He died.\" I didn't offer more. I had no intention of offering more.\n\nDeen was quiet as he processed all of that. When he did speak, he took me totally by surprise. \"Don't go back there tonight.\"\n\n\"I'm sorry, what?\" I asked before my brain could process what he meant. But then I figured it out. I sat very still in my seat.\n\n\"Stay with me. I can drive you home in the morning.\" His voice was so deep when he suggested I stay. It gave me shivers.\n\n\"I really should just go home.\" I should, but did I want to? I wasn't into this guy so why was I even considering this. I knew it was because he was so kind to me. That and he had that big cock I'd been craving.\n\n\"Can I convince you to stay? Should I quit before I upset you?\"\n\n\"You're not upsetting me.\" I avoided the other question.\n\n\"Blake, please stay with me tonight. I'd love to touch you and make you feel good.\" His intense words vibrated around the interior, deep and rich and seductive.\n\nI wanted to stay. It could be another anonymous hook up, I told myself. It would be nothing more. Yeah, it was way closer to home, but I'd never see this giant man again.\n\n\"Let's go to your hotel room.\" I committed to this one night stand with those words.\n\nHe asked if I was sure, still being a nice guy. I said I was sure and he smiled as he drove on. We exited the highway and wove our way to the extended stay hotel he was living in. I was nervous and excited. I also felt calm because I knew exactly where I was and how to easily get home from here if needed.\n\nHe parked his Escalade and we walked into the hotel, side by side, silently. It was nearly four in the morning now. After waiting for the valet and then the drive, it was so late that it was now actually early.\n\nHe held the suite door open for me. His room was nice and cool, the air conditioning cranking out icy cold happiness.\n\n\"Would you like to take a shower? I know we were both getting sweaty on the dance floor.\" He sat and took off his boots as he asked.\n\n\"Yeah, a quick shower sounds good. I feel kind of gross.\"\n\n\"Want to shower alone? Or I can help you get clean, if you'd like.\" His deep voice got deeper with his flirty words.\n\n\"In the interest of saving time and water, you should join me.\" I said it over my shoulder as I walked into the bathroom. He was behind me in a split second.\n\nWe each undressed ourselves in the cramped bathroom as the shower ran, getting hot and steamy. His body was unnatural looking and I tried not to stare at his odd shape. When his pants and underwear dropped I had something new to focus on. Holy shit.\n\nDeen had said in the car that he was six foot, five inches and he currently weighed three hundred and fifteen pounds. He didn't have any fat on his entire giant body. He was covered in hair, everywhere. I'd never touched a man that looked like him.\n\nI focused on his growing erection again. His balls were huge and I instantly thought about anabolic steroids and testicle shrinkage. He either didn't use drugs or his balls had been the size of softballs before he did. I assumed it was the former.\n\nHis hard-on was thick and long. It looked big, even in proportion to the rest of him. He answered my unasked question as I gawked at his crotch.\n\n\"Nine inches. You're quite large, too.\" He asked me without asking how big I actually was.\n\n\"I'm seven and a half. But I'm a bottom, so it's just decorative.\" I joked with him, feeling giddy with excitement but trying to act cool and collected.\n\n\"I'm sure I could find lots of uses for it, beyond its aesthetic beauty.\" He licked his lips as he said it.\n\nHe stepped into the shower and offered me a hand. In the shower over tub set up, we barely fit in there together.\n\nI'm a large man in the average world. Just shy of six feet and hovering around two hundred pounds, built bulky while being fit and lean. And Deen. He's not even human sized. I couldn't get over how small I felt standing next to him. It was so weird.\n\nWe quickly showered, washing the hot, sticky club off of each other. We had to change positions because he blocked every drop of water from getting to me with his mass. Our focus was on balancing and getting clean so we could get out of there.\n\nAs we dried off, he laughed about our idea not working so well. I told him we'd need a custom bathroom with a huge walk-in shower to ever try that again. Not that there'd ever be an \"again\" for us, I couldn't help but think to myself.\n\nClean and mostly dry, we went back into the bedroom. He sunk down, sitting on the bed and for the first time, I was at a height advantage. I walked up to where he sat with his tree trunk thighs spread wide, his long legs stretched out to either side.\n\nAs I stood between his legs, I could feel the heat coming off his furry body. He looked up at me with those dark brown eyes and his incredible, thick black lashes. I moved even closer and draped my arms over his massive shoulders. I leaned forward and he met me in a heated kiss.\n\nHis hands on my body made me feel small again. The sensation was so bizarre, but it was also exhilarating. I liked submitting sexually, but I'd never been with someone who could physically make me submit if they'd wanted to. The thought made my blood boil in my veins with desire.\n\nI threw caution to the wind and told him to dominate me. \"I've never been with a man that is so much bigger than me. Dominate my body with yours, Deen.\" I whispered it against his lips.\n\n\"Oh, fuck yes, Blake. I'll be careful, I promise. If I hurt you, please tell me.\" He stopped and said it seriously, so I knew he meant every word.\n\n\"I will. Don't be too careful, though. I need to be dominated.\" He responded to my words right away.\n\nHe stood and wrapped his hulk-like arms around me and lifted me off the floor, easily. He turned us around and crawled onto the bed, still moving me along with him. He settled me into the blankets and pillows and sat back to admire my nakedness, my brown skin surrounded by the bright white bedding.\n\n\"You are stunning, Blake. I'm going to dominate you until you can't take it any longer.\" His deep voice gave me goosebumps with his promise.\n\nDeen bent over me and kissed my chest and down my flat stomach until he reached my raging erection. I was so turned on. His mouth closed over my head and he sucked so hard I nearly screamed.\n\nHe sucked and sucked and sucked. It felt unbelievable. It was unlike any blowjob I'd ever had or had given. I was sure he sucked my entire soul out of my body through my penis. When I thought I'd scream in surrender, he started to probe my entrance with his huge fingers.",
        "He had me panting in seconds. The sucking and the touching, stroking, probing all brought me to new heights of pleasure. I heard myself yelling out all sorts of things, but it sounded like someone else. It felt like I was having an out of body experience.\n\nHe pulled away long enough to grab a condom. I noticed it was a brand new box of twelve as he opened it. I wondered how quickly he went through a box of twelve condoms. Before I could think about it much more, he was back between my legs, touching me, preparing me.\n\n\"Blake, look at me.\" He stopped just as he was poised to enter me.\n\nI shook off the fog and looked into his amazing eyes. \"I'm ready, Deen. Please.\"\n\nAs we maintained eye contact, he pushed his body into mine, slowly but steadily. I gasped as he invaded me. It felt massive and I wanted it all.\n\nHis eyes held mine. I couldn't look away. He slid the rest of the way into my body, filling me so completely I nearly cried. I felt fulfilled at that moment. Not just filled.\n\nCareful to support his huge body over mine, Deen started to move within me. Slowly at first, he kissed me slowly, matching his pace between my legs.\n\n\"Deen!\" I yelled his name as he started to move faster. His giant frame hovered over me as his muscular hips, thighs and ass pummeled me into the bed. It felt amazing.\n\n\"Come for me, Blake. Come hard on my cock. Fuck!\" He was moving so quickly now, it was all a blur of mind melting pleasure.\n\nMy orgasm was building, my penis held tightly in my hand, I pumped it along with his thrusts. I squeezed my eyes shut and yelled out as I started to come. His mouth covered mine as he pounded into me even harder.\n\n\"Blaaaaaaake!\" His baritone turned to a growl as he started to come. He pulled out and pulled the condom off. He squeezed his head and milked even more semen onto my stomach. His breath was ragged and he looked like a wild beast above me.\n\nUnbidden, some of the animated monster porn I'd seen popped into my mind. A soldier, separated from his unit, lay beneath a massive raging bull man with a glistening cock nearly half as large as his entire monster body. He forces his way inside, pounding into the man, so deeply you can see the bulge of his massive erection as it fills the soldier's belly with each thrust.\n\nI shook off the mental imagery and became aware of Deen moving closer, bending to lick our mixed seed off my torso. Shortly after that he went into the bathroom and came back with a warm washcloth and a fluffy towel. He cleaned me up, so gently and reverently, it almost made me cry.\n\nHe came back and scooped me up, holding me like a big baby in his arms as he pulled the blankets back. He gently placed me back on the bed and then climbed in next to me. He pulled me close, holding me gently so I could pull away if I chose to.\n\nWhat I chose to do was cuddle up against this giant teddy bear of a man and inhale the scent of him and the smell of our sex. I fell asleep seconds later.\n\nIt was close to noon when I finally awoke. Deen was dressed and sitting at the table looking at his laptop. When he noticed I was awake, he smiled at me.\n\n\"You looked so beautiful sleeping in my bed, I didn't have the heart to wake you. Are you hungry?\"\n\nI nodded as I stretched and yawned. I felt exhausted from the long day I'd had yesterday but I also felt rested and exhilarated. It was so foreign feeling.\n\nHe came to the bed with a cup of coffee. \"Do you want cream or sugar?\"\n\n\"You have cream and sugar? I assumed you ate nothing but lean protein.\" I kidded as I took the coffee from him. \"Black is fine, thank you.\" I smiled at him in gratitude.\n\n\"No, I eat everything and anything I want. It's just about balance and activity level.\"\n\n\"You make it sound so simple.\" I kind of chuckled to myself as I sipped the rich coffee.\n\n\"It isn't, as you clearly know already. You're in great shape and you must work hard to stay in shape. I would know.\" Deen smiled as he moved around the room, looking enormous in the confined space.\n\n\"I guess being a bodybuilder would make you an expert.\" I moved to the edge of the bed and stood. I was still naked so I moved into the bathroom to find my clothes and use the facility.\n\n\"Amongst other things.\" He replied to me but he was looking at his computer again, politely avoiding staring at me as I moved to the restroom.\n\nI pulled cleaner clothes out of my backpack and put on my jeans and a different t-shirt. I shoved my damp, sweaty club outfit into the bag, mentally preparing to do laundry as soon as I got home. Now I needed to get home.\n\nAn Uber in the middle of the day on Sunday, from one suburb to another would be much easier to find. I planned to pull up the app as soon as I went back into the bedroom area.\n\nDeen was watching me as I came back, fully dressed with my backpack on my shoulder. \"You didn't answer before. Are you hungry?\"\n\n\"Yeah, but I'll just eat when I get home.\" I replied noncommittally as I pulled on my shoes.\n\n\"Okay, I can drive you home, if that's what you want. Or we could stop somewhere for a big breakfast.\" Deen stood and grabbed his keys and phone, clearly planning to give me another ride.\n\n\"I can call an Uber.\" But even as I said it, I could tell he wasn't into that idea. He'd relent if I insisted, but he preferred to drive me, it was plain to see on his face.\n\n\"An Uber? Really? Please, Blake. Just let me drive you home.\" He looked oddly innocent as he asked.\n\n\"Okay, thank you. That's very nice of you.\"\n\n\"Breakfast or no?\" He asked as we walked out into the parking lot towards his black SUV. He opened the door for me.\n\n\"Yeah, that sounds good.\" He seemed so eager to spend time with me. No one had seemed eager to spend time with me in the last decade or longer. Not even Glenn. Not like this.\n\nWe stopped at a family style restaurant owned by a Greek family, like many of the local places in our area. We ordered massive breakfast plates for lunch and chatted easily as we devoured it all.\n\nI found out that Deen was a nutritionist of some sort, which made so much sense. He asked me about the military and what had made me decide to stay here, of all the places I'd been and lived.\n\nHe seemed to be able to navigate the less comfortable topics without hitting any of my tender nerves. It was nice to talk to someone new, who already seemed to care about my feelings.\n\nIt was obvious to me that Deen was extraordinarily intelligent. He told me he was forty five and he'd been single for most of his adult life.\n\n\"I've always been focused on one goal. At first it was getting out of Detroit. I did that by becoming a bodybuilder. I focused on my body and career for years.\"\n\n\"You didn't date?\"\n\n\"I dated, yes, but nothing serious. I tried relationships several times when I was young, but I couldn't be the kind of partner anyone needed. It wouldn't have been fair to any guy I cared about.\"\n\n\"That's how I felt when I joined up and then got my degrees while in the service. I needed to be the best sailor, the best student, the best officer. Then I met Glenn.\"\n\n\"What changed?\"\n\n\"At the time, I thought everything had changed. But now, in hindsight, I realize nothing changed. My whole relationship was second to my career and Glenn was fine with that.\"\n\n\"Were you fine with that?\"\n\n\"I thought so.\" Was I fine with it? What the hell?\n\nMy relationship with Glenn was easy and comfortable. I hadn't needed to change nearly anything in my life to incorporate him into it. It was secure but passionless.\n\nWe'd both put our military careers first. We came home to each other at night and shared space and friends. But it was lacking that big love that I'd wanted to find, but never had. It was convenient and effortless, but not in a good way.\n\n\"You alright over there?\" Deen's deep voice brought me back from my memories.\n\n\"Yeah, I'm good. Since Glenn died I feel like I've learned more about myself and my relationship with him than I did the whole time we were together. Is that weird?\"\n\n\"Not really. It sounds like it was pretty routine, which I assume as a military man, is a safe feeling. People like to feel safe.\"\n\n\"Yeah, you're right. It was routine and safe. It was boring. I feel bad saying that though. I was married to him and I loved him.\" I stared into my coffee cup on the table.\n\n\"It's okay to feel all those ways, all at once. It's normal.\"\n\nI looked at the mountain of a man that sat across from me. I noticed people looking at him as we talked. He was too big to miss. I'd nearly forgotten he was so unusual.\n\nWe paid the bill and got back into his car. I gave him directions as we neared my neighborhood. I stared at my rental I'd shared with Glenn as we sat in the driveway for a moment.\n\nI wanted to be home, but this place didn't feel like home anymore. It never really had, but it was as close as it got for me. How did this happen? How was this my life?\n\n\"What are you thinking over there?\" Again, Deen called me back to reality.\n\n\"I'm so sorry, I keep spacing out. I guess this whole weekend gave me a lot to think about.\" I thought Pride would help get my mind off everything, but instead it helped me see everything through different eyes. I hadn't expected that at all.\n\n\"Can I text you later?\" Deen asked after I'd rejoined the current world in his vehicle from my mental detour.\n\n\"Give me your number. I'll text you if I decide I want to.\" I offered him something without giving him the control. I needed the control right now.\n\n\"Sure.\" He put his contact info into my phone and handed it back. \"I really hope to hear from you, Blake. Really.\"\n\nHe looked lost. Or sad. He looked like he wanted to beg me to text him since I wouldn't relinquish control of this situation to him. It looked like he was struggling with giving up the control. I imagined he was a man used to being in control of everything around him. He seemed the type.\n\nI smiled at him and nodded to acknowledge his request. I just couldn't answer him because I didn't know what I was going to do. I opened the door and started to get out of the Escalade.\n\nHe came around and walked me to my door. He bit his lip, looking like he wanted to say a lot, but also unsure what to say. I needed to throw this guy a bone.\n\n\"Thanks for the ride, and everything else Deen. I had a wonderful time. Last night was especially incredible.\"\n\n\"I hope we can do it again.\" He smiled and tried to relax.\n\nI nodded again and then I pushed up onto my toes and kissed him quickly. As I sank back to the ground, he reached over and put his big hand on my shoulder, touching my neck gently. He looked into my eyes.\n\nI had a feeling he was trying to memorize my face. He was sure I wasn't going to contact him. I just knew it. And I couldn't confirm or deny it. I just didn't know.\n\nHe left and I went inside and I looked around the house I'd shared with Glenn for two years, since we'd been stationed here. The whole place was painted white and we'd never hung anything on the walls since we were renting.\n\nIt was so dull and boring. It felt lonely and reminded me of Glenn. The nothingness reminded me of Glenn. I needed to get out of this place. I needed to start over or try again or something.\n\nI needed to have color in my life. Color, excitement, fun, lust, love, passion. Anything! I needed to fucking live. I had yet to live. Even with my travels and my marriage, I still felt like I'd never started to live.\n\nI decided to call my mom. And when I did, she instantly knew something was off, it wasn't just a normal Sunday afternoon social call.\n\n\"So, what's up?\" She cut to the chase.\n\n\"I just got back from Chicago Pride. I had a really nice time, which pleasantly surprised me.\"\n\n\"I'm so glad you went. How was everyone?\"\n\n\"Fine. It's still weird with some of them, but I'm ready to move on. I'm rethinking everything.\"\n\n\"Are you coming back to Atlanta?\" She asked hopefully.\n\n\"No, that isn't changing. I love my career and I love this area. I'm still buying here, but everything else has changed.\"\n\n\"Okay, well explain it to me. What is this \"everything else\" you're referring to?\" As usual she knew what to ask to get me to open up. She was kind and patient, which I loved so much.\n\n\"Glenn. I'm ready to move on, mom. I need to get out of this house. I need to maybe hang out with some different people, doing different things. It's time and I'm really ready.\"\n\n\"I'm so happy to hear that, Blake. I know you loved Glenn, but you're so young. You have so much life to live. So much love to share.\"\n\n\"I know.\" I got quiet as I thought about sharing that life and love with someone new. Deen popped into my mind, but he wasn't what I wanted. He was just on my mind since it was all so fresh.\n\n\"Did you meet someone?\" How did she do that?\n\n\"No. Not really.\"\n\n\"Don't lie to your mother, boy!\" Her church-lady voice came out.\n\n\"Mom. I met several people this weekend, but no one I want to date, so let's move on please.\"\n\n\"You're awfully defensive for a guy who didn't meet someone. Tell me about him.\"\n\n\"You're impossible, you know that?\"\n\n\"And you're stalling, Blake.\"\n\n\"I danced with a guy at the club and then my friends disappeared, so he gave me a ride home.\"\n\n\"You said you just got home. What happened between the club and now?\" She never missed anything.\n\n\"Do you want details?\" I threatened to overshare to get her to back off.\n\n\"So there are details? I knew it!\"\n\n\"Oh my god, mom. I hooked up with a stranger. He's not my type, so I'm not going to see him again. He shall remain a stranger. Happy?\"\n\n\"And what is your type? You just said everything needed to change. You wanted to try something different. You were talking about this guy, so just cough it up.\"\n\n\"I wasn't.\" I wasn't. Right?\n\n\"You can lie to yourself, but not your mother. Tell me about this guy. Why isn't he your \"type\"?\"\n\n\"He's a literal giant. He was a bodybuilder. His body is freaky looking. We had breakfast at a restaurant and everyone was staring. It was uncomfortable.\"\n\n\"Okay, but you like him.\"\n\n\"No, I liked spending one night with him, but it wouldn't ever work. Wouldn't it be weird to date someone I'm embarrassed to go out in public with?\"\n\n\"It sounds like you need to get over yourself, Blake. You sound just like those black boys you tried to date in high school that didn't want to date you because you were \"whitewashed\". I'm surprised at you.\"\n\n\"What? I'm nothing like those guys!\" I was on the defense now.\n\n\"You are exactly like those guys. You like this man but you're worried about what other people will think. It's exactly the same.\" She snapped the last sentence.\n\n\"It's different. I'm telling you why I'm not leading him on. I didn't tell him any of this, just to hurt his feelings like those guys did to me.\"\n\n\"Now you're just splitting hairs, son. Other than the fact he's different and attracts attention, what else do you know about him.\" She changed tactics.\n\n\"He's forty five, six foot five and he weighs three fifteen. He's enormous. He's really smart and very nice. He's from Detroit and he's Saudi. His family has been in Michigan for a number of generations.\"\n\n\"My goodness, he is big. It's he handsome? You know I love a nice dark skinned man, from anywhere.\" I could hear the smile on her face. Dirty old lady.\n\n\"He's got the prettiest eyes I've ever seen, but I'm not really attracted to his looks. He shaves his head and has a dark, full beard which he wears trimmed. He looks like a \"daddy\" type, which isn't my thing.\"\n\n\"I'll pretend I know what a \"daddy type\" is. How can you think he has the prettiest eyes but then say you're not attracted to him?\"\n\n\"I don't know.\" I really didn't.\n\nI had never liked that type of guy. He was probably into leather bars and piggy porn. His eyes were beautiful, but the shaved head and dark beard, on top of the massive body and all the hair, on every inch, just didn't do it for me.\n\nEven if I wanted something different, like I'd just claimed, it didn't have to be that different. Maybe I could date someone that wasn't Navy. Someone like Dex. He was my type and still very different from Glenn.\n\nDex was a hairdresser and flamboyant compared to guys I'd usually be attracted to. Someone like him was different enough. I just needed to find someone like that. Someone that wasn't Deen.\n\nLost in my thoughts for the moment, I realized my mom was yelling into the phone.\n\n\"Blake!? Are you judging this guy based on his looks? That seems unfair.\"\n\n\"Mom, please. He's not what I want.\" Even as I said it, Deen's words from last night came back to me. He'd said \"I'm never what people expect. I'm used to it.\" I'd said that same thing my whole life.\n\nI wrapped up the call with my mom and moved the laundry I'd started earlier into the dryer. I was ready to get back to my routine and let my Pride adventure be a fond memory.\n\nI met up with Tom and worked out at the gym that evening. He asked about Pride and I told him about everything in general, but I didn't mention Deen at all. I was done explaining that situation.\n\nI showered before bed and made sure my uniform was pressed and ready for work in the morning. But I couldn't fall asleep as I lay in my bed in the dark.\n\nMy mind worked over my conversation with my mom and my time with Deen. I tried to convince myself it was exactly the same as what I'd gone through after my hook-up with Dex. But it still felt different. It was different but I wasn't sure why.\n\nI tossed and turned for several hours. I had the strangest craving for a big teddy bear to cuddle up to. That thought upset me. I was sure it was just because I'd done that just last night. That's all it was.\n\nEven if I wanted to see Deen, I didn't want to BE seen with him. And that was terrible. He deserved better than that. I was a black man discriminating against another man because of his size and the shape of his body. I felt despicable.\n\nI'd been treated differently by black people and white people my whole life, and I was no better than any of them. I was too black for most white folks. I was too \"white\" for most black folks.\n\nIn the Navy, I wasn't a color, I was a sailor and we were all the same. But that was a rose colored view, too. I was treated as less than during pretty much all stages of my naval career, just like in my life before. I already knew I'd never make \"them\" happy. And yet I wanted to avoid dating someone because of how \"they\" would react.\n\nThe alarm rang a scant few hours later and I had to go to work. Exhausted and feeling like a piece of shit, I dragged myself into the office, as much as I could in my stiff uniform and my drilled in good posture.\n\nBy lunchtime I was distracted and completely out of sorts. I changed in my office and went for a jog. I showered when I got back to the hospital, and tried to press on for the rest of the day.\n\nOne of my civilian coworkers, who I'd grown fairly close to, stopped by an hour before the end of the day. She asked if I was thinking about Glenn? She pointed out that I looked upset and tired.\n\nI looked at her in shock as I realized I hadn't thought about Glenn all day. Not even at home this morning. I had such mixed feelings about that that I almost started to cry and laugh all at once. I felt like I might be having a small mental breakdown.\n\nI brushed off my work friend and told her I was just hung over and tired from Pride all weekend. She looked skeptical but eventually left so we could finish our workday.\n\nWhile driving home from the hospital I considered texting Deen. He'd been so sincere about hoping to hear from me. I felt bad about not reaching out. But I didn't want to date him, so what would be the point?\n\nMaybe I should just text him to check in and give him closure. I could just let him down easily if he asked for more. Because that's totally normal, to contact someone to let them know you're still not interested, for their benefit. What a load of bullshit. I was an ass hole.",
        "The only good thing to happen today was the new batch of listings my realtor sent over had several houses that looked good on paper. I called her from home and set up a few viewings for tomorrow after work. There was one house in Winthrop Harbor that I really liked.\n\nThe rest of the evening dragged by and I couldn't stop thinking about Deen. I finally threw up my hands and typed a text. I looked at it for twenty minutes before I hit send. So ridiculous.\n\n\"Hi Deen, it's Blake.\" I stressed over that for nearly a half hour. Was I in high school? What the hell was wrong with me? I was still kicking myself mentally when my phone buzzed with an incoming text. I nearly flung the phone across the room as it startled me.\n\nI finally got my butterfingers under control and opened the message.\n\n\"Hey, Blake. I'm so glad you texted. How was your day?\"\n\nI felt my body relax as I texted him about the houses I wanted to see. I told him that work was long and tedious. He told me about his day. It was so easy to communicate with him.\n\nBefore I knew it, several hours had passed and I was grinning at my phone over the most mundane conversation. I felt like I was sixteen, talking to a crush. This was bad, but I kept smiling at the damn phone anyway.\n\nThe rest of the week flew by. Deen and I texted each other good morning messages everyday. We'd check in at lunch and then we'd talk, via texts, all evening. He never pushed for more, but I knew he was dying to ask to see me.\n\nI told him about the house in Winthrop Harbor that I liked and how it sold overnight before I got to view it. Everything was either hideous and too much work or it sold in hours. It was frustrating, especially because I wanted out of this place so badly.\n\nHe was a good listener, which is exactly what I needed from him right now. I almost believed it when I told myself that. Almost. I really wanted to touch him again. Maybe we could hook-up just once more. Lies. I was lying to myself left and right.\n\nI loved talking to him. I wanted to sleep with him, sexually and cuddled up next to him afterwards. I still couldn't see myself dating him though. I was so confused.\n\nFriday afternoon my confusion reached a peak as surprise after surprise assailed me. First, a dozen red roses were delivered to my office. I'd never gotten flowers in my life. I was giddy and I knew Deen had sent them even before I opened the card.\n\n\"Thinking of you. As usual.\" -- Deen\n\nI sat at my desk and stared at the flowers trying to think of what to say to him. I held my phone at the ready to text him once words and thoughts started to make sense again. I decided what to say and I was typing when I heard a knock.\n\n\"Blake, who sent these?\" My boss stood at my door. Dr. Pollard stepped into my office and looked at the card. Before I could answer, he looked up at me with an odd look on his face. \"Dr. Nazari sent these? Why?\"\n\n\"Dr. Nazari? I'm not sure who that is. My friend Deen sent these.\"\n\n\"Yeah, Dr. Deen Nazari, over at Lake Forest Hospital. I've known him for years.\" I'm not sure who looked more confused now, him or me.\n\n\"I didn't know you knew him.\" I wanted to say I didn't know he was a doctor. I didn't know he worked at Lake Forest Hospital. I didn't know we knew some of the same people.\n\n\"We met when he consulted on a patient years ago. He's a really sharp guy. Real smart, good doctor.\" Dr. Pollard rambled on, as he was wont to do. He talked his way back out of my office and then he was gone.\n\nWhat the hell? Deen was a doctor? The old mental picture I'd made up of his life crumbled into dust. His words came back to me again. \"I'm never what people expect.\" He'd clearly been judged, had his identity assumed, many times. I'd been doing it since I'd met him.\n\nI finally put all that aside and texted him. I thanked him for the flowers.\n\n\"Thank you. The roses are beautiful. I've never gotten flowers before.\"\n\n\"That's a crime. I should send you flowers every week, just because.\" I read Deen's sweet words.\n\n\"Bill Pollard said he knows you. I didn't know you were a doctor.\" That sounded less accusatory than just sending the second sentence.\n\n\"I thought I told you, I'm sorry. Yeah, I'm a physician nutrition specialist at LFH. I really thought I said that on the trip back from Pride.\"\n\nI did remember him saying something about being a nutritionist, but I didn't know what he was talking about exactly, so maybe I missed it since he didn't use the word \"doctor\" to describe himself even now.\n\n\"You probably did. It was late and I was tired and nervous so I probably missed that detail.\"\n\n\"I might not have explained it well enough.\"\n\n\"It's fine, I was just surprised that he knew you just from your first name, but it is unusual.\"\n\n\"Pollard is a secret spy type. Bumbling, rambling but he's watching everything and no one suspects anything.\" Deen really did know my boss. I smiled to myself.\n\n\"That's totally true. I'm going to get back to work, but thank you again for the roses. They made my whole week.\" I almost added a heart emoji, but I resisted and held onto some of my dignity.\n\n\"Come over this weekend. Tonight.\" He clearly cut to the chase since I was ending the conversation. My heart leapt into my throat when I read his text.\n\n\"What would we do if I did?\" I felt flirty and my whole body reacted to my own dirty thoughts.\n\n\"We could eat. Watch a movie. Hang out. Fuck like animals. Whatever you want.\"\n\nOkay then. He was a mind reader or maybe he was just another horny man that needed me like I needed him. I didn't want to read into it. He just wanted company and this hot black ass. Who even was I right now thinking about my ass at all? Oh my god, I was such a mess.\n\n\"That all sounds interesting.\" I finally replied, noncommittally. He called my bluff immediately.\n\n\"Great. See you around seven? Any thoughts on food?\"\n\n\"I never said yes.\" I pushed back.\n\n\"You didn't need to. I know you're coming. And I'll make you come, too.\" He was so bold and it turned me on. My whole body throbbed at his promise to make me come.\n\n\"Surprise me. I like all kinds of food.\"\n\n\"Perfect. Seven. Come hungry. For everything.\"\n\nSweet baby Jesus. I was sweating, sitting at my desk. He made me want all kinds of things. I finally caught my breath and replied.\n\n\"See you at seven.\"\n\n\"I can't wait, Blake.\"\n\nWe finally ended the conversation and I was pretty much useless for the rest of the day. Thankfully it was Friday afternoon. I left work about an hour early, which I never, ever did.\n\nI carried my bouquet of red roses through the employee locker room, getting some unusual looks that I thought would make me nervous, but instead I felt excited and happy. I thought about how recently my husband had died and now I was getting red roses delivered to work. Would they judge me? Did I care?\n\nYes. I did. I always cared what other people thought. I always had. All my choices were safe and over-thought. I always considered what everyone would think and I didn't really know why. I kind of did know why I started doing it, but why did I keep doing it?\n\nI was doing it with Deen. I was so into him in so many ways but I also didn't want to date him because of what people would think about it. About me. About us as a couple.\n\nI had so many preconceived ideas about who he was and they were all proved wrong. I tried to convince myself that he wasn't my \"type\" and therefore he was not datable. It sounded so flimsy right now. I needed to figure this out.\n\nBut right now, I needed to go home and shower and shave. I needed to find something to wear that was comfortable and casual but yet attractive. I needed to pack a bag. My hands shook as I put some soft clothes into the bag.\n\nI decided to call my mother since I had extra time, having left work early. She answered on the first ring.\n\n\"Hi, baby boy! What are you doing this weekend?\" She didn't even let me say hello.\n\n\"Hi, Mom. How are you?\"\n\n\"Fine. I asked you a question.\" Why did I call her? I enjoyed torture, clearly.\n\n\"I'm hanging out with friends. Nothing special.\"\n\n\"You're still the worst liar I've ever met. You're going to see the guy with the beautiful eyes. Good for you.\"\n\n\"Honesty Mom, do you have my house and office bugged? My phone? What?\" My sarcasm was ironic, at best.\n\n\"Nonsense. I'm glad he makes you so happy. I can hear it in your voice.\"\n\n\"Mom, I just met him. We're new friends, hanging out to get some food.\"\n\n\"Oh, Blake. Just stop.\"\n\n\"Stop what?\" I snapped it a bit too harshly.\n\n\"Playing dumb. You can lie to your friends and your coworkers. Hell, you can even lie to yourself. But you should know better than to lie to me.\"\n\n\"Mom. I'm not. It's too soon to date. And....\" I stopped myself before I claimed he wasn't my type. It was so pitiful at this point. My type or not, I liked him. A lot.\n\n\"Where does it say it's too soon? A week would be too soon, but it's been over eight months. Even stuffy old ladies at my church only mourn publicly for six months.\"\n\n\"Can we change the subject, please? Can I please first catch up with my mother without you railroading me into a relationship with a man I just met. We're going to have gay sex, probably lots of it. Are you happy now?\"\n\n\"At least that's honest, baby. How was work? The house search still going nowhere?\"\n\n\"Work was fine. I shouldn't even tell you this, but I got roses delivered to my office today. It turns out some of my coworkers know my new friend since he's a doctor at another local hospital.\"\n\n\"Oh, now that's interesting. Red roses?\"\n\n\"Yes, red roses. The house search is frustrating. I need to get out of here. I'm thinking about renting just to be done but I don't want to move twice.\"\n\n\"Don't rent unless you can do it month to month. You don't want to get stuck in another place for a year. You could always find a nice house down here.\" I sensed reverse psychology coming on, so I didn't take the bait.\n\n\"I won't sign a lease for a year, no matter what. I need to finish up my laundry before I go out, but I'll talk to you later, Mom.\"\n\nWe said our goodbyes and I paced around my bland, white house for another forty five minutes before leaving for Deen's hotel. It was only twenty minutes away, but I gave myself close to an hour.\n\nI ended up sitting in a parking lot of a McDonald's about a mile from his hotel for a half hour to kill time and not be early and appear over eager. The weird nerves actually felt nice. I hadn't felt much of anything for a long, long time. Way longer than eight months. Way longer than five or six years.\n\nIt was two minutes after seven when I knocked on the hotel room door. Deen answered the door in nothing but a towel. He looked freshly showered and smelled a bit like heaven. I tried not to look goofy as I smiled at him.\n\nHe welcomed me in, saying he'd been on a work call that ran long and he'd just gotten out of the shower. His nervousness made me less nervous and he looked so adorable all flustered, which is hilarious to think about.\n\nHe ran into the bathroom and came back out in a t-shirt and a soft pair of grey sweatpants. They didn't disappoint at all. It was my favorite man-lingerie trend and they looked really good on his big thighs and muscular ass. His package looked massive.\n\nI stepped close to him as he stopped and finally relaxed a bit. He read my body language, meeting me halfway. He leaned down and kissed me softly, tenderly. It made me lightheaded for a second.\n\n\"I'm so glad you're here. I've been thinking about kissing you since I dropped you off at home on Sunday afternoon.\" He smiled down at me, his dark eyes full of lust and something else I couldn't identify.\n\n\"I'm glad to be here. Really.\" I pushed up onto my toes and kissed him hard. He lifted me and moved us both toward the couch. I still wasn't used to being picked up and generally being smaller than my partner. It was nice and strange all at once.\n\nOn the couch he told me food was already on its way and he was excited about surprising me. We chatted easily and I asked him more about his actual job at the hospital.\n\nEventually we got a notification that the food was outside the door. Deen grabbed it and brought it back to where we were sitting. I could smell the deliciousness before he even opened the box.\n\nIt was deep dish pizza from Lou Malnati's. We'd talked about pizza while we were at lunch on Sunday and he remembered that I said this was my absolute favorite. I told him it was a good enough reason on its own to stay in Chicagoland. He'd laughed, but here it was.\n\nI wasn't used to anyone being this thoughtful in a relationship. I wasn't. Glenn wasn't. Guys I'd dated before weren't. Deen was the opposite of my type, right? I guess that was true in every way. And maybe I needed a new type. This was incredible.\n\nWe laughed and ate and it was easy and delicious and I didn't even mind when I got sauce on my face and didn't realize it. He just wiped it off my chin and continued to tell me his story. I should have been so embarrassed to look foolish in front of a new guy. But I just wasn't. And it was because of his reaction, or lack thereof.\n\nAfter we ate, we curled up on the big bed and watched a newer movie that neither of us had seen. I didn't say that it was because Glenn didn't like the lead actor. I just enjoyed the movie with my gentle giant.\n\nAs the movie wound down, Deen started to touch me in a less cuddly way. His hands explored under the blankets and under my clothes. His palm skimmed over my penis, causing me to make a low, desperate sound in my throat.\n\nDeen looked into my eyes, his dilated and even darker than usual. The movie credits barely started to roll before we were touching and kissing while pulling at each other's clothing.\n\nSoon we were both nude and he was above me, pressing me into the bed while he stroked my growing erection. He watched my face as he touched me, reading my reactions and adjusting as needed to take me beyond my control.\n\n\"Deen! Please! I need you.\" I whined out the last few words. His hands were incredible but I wanted him inside me. I really did need him.\n\n\"I've got you, honey. I'm going to give you everything you need, don't worry about that.\" He assured me with his words as he moved his body, positioning himself between my widely spread thighs. He lined up to my entrance and then he was pushing into me.\n\nI gasped as his huge cock invaded me. It was perfect, so completely perfect. He watched my reactions as he slowly sunk into me, until he was fully within my tight hole. I was panting with desire and the shock of his massive manhood filling me completely.\n\nHe patiently helped me relax and calm and then he started to move above me. His strokes were sure and the tempo drove me wild. It felt even better than last time. I was less nervous this time and he had gotten more attractive to me since then, too.\n\n\"You ready for more, honey?\" Deen asked calmly as his hips continued thrusting deeply, fully into me.\n\n\"Yes! God yes. Please!\" He smiled at my reply and his body tensed slightly and then he was pounding into me, pushing me down into the bed repeatedly.\n\n\"Blake!\" He called out my name as his pace got nearly frantic. I could barely hear him over my own moans and sounds of cresting pleasure.\n\nEvery stroke out and thrust in rubbed across my prostate, making my eyes cross and my toes curl. I didn't even recognize the grunting, trembling body that thrummed with intense pleasure, as my own. I felt like I was outside myself as I exploded into my climax.\n\nDeen's thrusts matched my body's clenching as I came so hard I forgot to breathe. It was the most intense orgasm of my life and he'd done that to me with anal. It was incredible and mind blowing, to say the least.\n\nSoon he was tensing and then I felt him throb inside me. I heard someone beg \"breed me!\" without realizing it was me. I'd never called that out during sex, even when I was raw with Glenn all the time. We hadn't yelled out anything.\n\nHis eyes locked with mine as he pulled out, pulled the condom away and plunged back into me. He thrust twice more and then he was filling me with his molten seed. He made the sexiest, most animalistic sounds with his booming, deep voice. My body responded to his mating call and I wrapped my arms and legs around him, holding him deeply inside me.\n\nHe finally released his massive muscles and his big body relaxed, crushing me into the soft bedding. He was still inside me and I still clung to him with everything I had. I loved the feeling of him on top of me.\n\nHe lifted his head and found my lips. He kissed me with so much passion as we lay there connected. I felt tears running down over my temples into my short hair. I felt relieved. I felt alive. I didn't feel guilty, not even a little bit. That's what made me cry these happy tears.\n\nHe just kept kissing me and touching me and whispering sweet things against my lips. He let me cry without drawing attention to it. It made me cry a little bit more, but I felt a hundred pounds lighter after shedding those tears.\n\nI don't remember falling asleep, but I awoke in Deen's arms. He was sound asleep, his warm breath against the back of my neck. His huge arm was wrapped around me and mine was on top of his. I stretched my legs a bit and then cuddled even closer to him as I fell back asleep.\n\nMaybe an hour later I felt the giant behind me moving about and I heard a big yawn. My groggy brain made me yawn in reply.\n\n\"Good morning.\" Deen said it as he kissed my neck.\n\n\"Mmmmmmm. Yes, it is.\" I rolled so I was on my back so I could see his face.\n\nHe smiled. \"Waking up with you is my new favorite thing ever.\" He kissed me softly.\n\nI wrapped my arms around his neck and pulled him closer, kissing him deeply. I didn't even think about morning breath. I needed to connect with him. Physically and emotionally. I didn't want to dwell on the implications of those needs.\n\nHe eagerly kissed me back, his big hand running over my chest and down my abdomen. He brought his hand back up and gently cupped my face as he pulled back.\n\n\"You are so beautiful, Blake.\" His deep voice was full of emotion. His eyes matched his voice as they filled with his feelings, showing me how much he meant those words.\n\nWe finally got out of bed and took turns using the restroom and brushing our teeth. I got my phone off the charger and then sat back on the bed.\n\n\"Let's go get breakfast. My treat.\" Deen grinned at me as he stood outside the bathroom.\n\nI had a flash of those fears about being seen with him and judged but I pushed it away. Deen was an amazing person and I needed to stop caring about \"them\" and focus on him.\n\n\"I'm starving. Let me put on my pants.\" I climbed off the bed in my underwear and t-shirt. I moved past Deen with purpose, kind of strutting and puffed up, giving him a sexy smirk.\n\n\"You keep that up and we'll never make it to breakfast.\" His growl made my body ache. I seriously considered skipping breakfast. Then I heard Deen's stomach rumble and I refocused on the task at hand. Literally feed the beast.\n\nI was pleasantly surprised when Deen looked more normal to me in the busy restaurant, surrounded by people. In the bar at Pride and at the restaurant the next day, he'd seemed impossibly large. Now he just looked big. And extremely handsome.\n\nOh wow. When did that happen? I had convinced myself I thought he was okay looking, but not \"my thing\" so hard that I made myself believe it. Now I knew him and I liked him. A lot. He was incredibly good looking and he was focused completely on me, like no one else existed.\n\n\"You alright over there, Blake?\" Deen's deep voice called me back into the present.\n\n\"Yeah, just figuring some things out.\" I smiled and finally picked up my menu. I felt so different and it was nice. I smiled like a fool as I read my menu. I'm sure I looked somewhat blissfully unhinged but I didn't care one bit.",
        "Breakfast was great. The food was satisfying and the company made my heart race and my brain fuzzy. I had a big crush on Deen. I felt like I was sixteen.\n\nWe kissed goodbye after lunch as he dropped me off at my car at his hotel. He had to go to his house to deal with a problem. His contractor had called and I could hear him yelling through the phone.\n\nThe week went by slowly, but I texted with Deen on and off all day. We usually talked on the phone in the evenings for at least an hour. I was smiling all the time.\n\nThursday morning Deen texted me. \"I've got a consultation with Dr. Evans at 11:30. Want to get lunch after?\"\n\nDr. Evans was a department head here at the VA. Deen was coming here and he wanted to take me to lunch. I fought a small wave of panic. I'd been alright, better than alright out in public, but this was my workplace. I knew everyone and I had to come back here every day.\n\nI stopped and cleared my mind for a moment. I thought about my options and the only real option was lunch with Deen. I didn't care what my coworkers thought. At least not enough to not see Deen. I was already looking forward to it and I hadn't even replied.\n\n\"Do you know where the admin offices are? I'll be working until you get here. Can't wait.\" I hit send and grinned to myself. He texted back that he did. I tried to focus on work until lunchtime. It didn't go too badly.\n\nBy noon I was nervous. Glenn hadn't ever come by my office for lunch. We'd eat lunch together a lot, but we always met at one of our usual spots.\n\nI straightened my uniform as I waited. Seconds later Deen filled my doorway. I looked him over, seeing him in work clothes for the first time. When I stood, he clearly did the same to me in my uniform.\n\nHe had on dark grey slacks that fit surprisingly well over his huge legs. His white pinstripe dress shirt had to have been custom made, because his chest to waist ratio was not standard for any clothing retailer. It fit him too perfectly to be anything other than custom. The tie he wore added the right amount of vibrant color to this vibrant giant.\n\n\"Damn, you look gorgeous in your uniform, honey.\" His eyes trailed over me just as mine did to him.\n\n\"You look incredibly handsome, too.\" I stepped closer and he pulled me in, kissing me gently.\n\nWe walked out of the hospital and drove to a local favorite for lunch. It was so wonderful to see him in the middle of a Thursday. The hour went by way too fast. I wished I could see him everyday. I was falling fast and it felt brand new. It was exciting and terrifying.\n\nBack at the office, my afternoon dragged by. I texted Deen a few times, but we were both too busy to really talk. I nearly jumped out of my skin when a department assistant crashed into my office waving her phone in my face. She was always drama-filled.\n\n\"Blake! Was your man here for lunch? Gloria said he looked like The Rock. Does he actually look like this?\" She shoved her phone in front of me.\n\nThe Rock, Dwayne Johnson was in the gym, wearing only shorts and covered in sweat in the photo. I realized almost immediately that yes, Dwayne and Deen were nearly the exact same size. Deen was somehow wider at the shoulders and not as lean as Dwayne in this picture, but yeah, they were the same.\n\n\"He does. Just with more hair everywhere. And a beard. And no tattoos.\" I answered the skeptical young lady standing next to me. I almost made a comment about her calling him \"my man\", but I left it alone. It was easier that way.\n\n\"Why didn't you bring him around? I want to see him!\"\n\n\"First of all, he's not a thing to be seen, he's a respected doctor who also happens to have been a professional bodybuilder. And it's new, so I wasn't going to put him through meeting the whole office on our first lunch date.\"\n\nShe grumbled and threatened that I better introduce him next time.........I tuned her out as she bitched her way back out of my office. I got up and closed the door against any further intrusions.\n\nAs I sat back down I pulled out my phone and Googled The Rock. I scrolled through a ton of pictures of him in gym clothes and all dressed up. The ones of him wearing his wrestling bikini caught my eye. But all I could see was the comparison between him and Deen.\n\nDwayne was an A-list celebrity. He was an action movie star and a well known WWE personality, amongst a ton of other accomplishments. Everyone generally loved The Rock. He was gorgeous, men and women lusted after him. Deen was the same size with the same build.\n\nI let it percolate for a few minutes. I thought about the few people I'd noticed glancing our way at lunch today. A table of women had looked at him with clear interest. Deen was the most incredible specimen in the whole room. In every room he entered. And he was with ME. He had eyes for only me.\n\nA few weeks ago he looked like a freak to me. He was so extreme and so different from my usual taste. But then I got to know him and I could start to see him with clear eyes, not resistant eyes.\n\nHe was the most amazing guy, lover and friend. Oh my god. I was in love with Deen. It scared me. Not for the reasons it had a few weeks ago. It wasn't about his appearance or what people thought. Now I was scared of getting hurt or everything fizzling out. This hot spark between us couldn't last. It never did. Only in books and movies.\n\nI tried to stop overthinking. I should focus on the fact that I was pretty much over my aversion to Deen's extreme physique. I was into him in every way. I'd worry about the inevitable end a little bit later.\n\nThat night, as Deen and I talked on the phone he suggested I pack a bag and just come straight over to his hotel after work tomorrow, for the whole weekend. I quickly agreed and happily packed a bag with extra things, thinking about leaving some stuff over there for later. It felt crazy, but nice.\n\nAssuming I'd miss my Saturday call with my mom, I called her Friday during my lunch break. I locked my office door and hit the call button on her contact.\n\n\"It's a day early, is everything alright?\" Not even a hello. Nice.\n\n\"Hello, Mom. Everything's fine. How are you?\"\n\n\"Then why are you calling a day early?\"\n\nThis topic was clearly unavoidable, so I just bit the bullet. \"I have plans for the weekend, so I won't be able to call. It's not the first time this has ever happened, don't act so suspicious.\"\n\n\"You're spending the weekend with the gorgeous eyes guy, aren't you?\"\n\n\"Why do you assume that? It could be Tom and Gia or the guys in the city.\"\n\n\"Seriously? We're having this conversation again about your mother knowing you and when you're full of bull? Just stop.\"\n\n\"You are the worst, Mom. I shouldn't even bother calling since you know everything anyway.\" I jabbed back.\n\n\"You're play fighting with me again. It's about damn time, boy!\" She choked up all of a sudden.\n\n\"What do you mean? Are you okay?\" I gentled my voice, worried about what was going on.\n\n\"I'm just so glad my baby is back. You were so sad for so long, you lost all your joy for life. You'd really fight with me instead of joking back and forth like now. I'm just so happy, love.\" She sniffled into the phone as she fought her tears.\n\nI felt like crying too. I was relieved and I hadn't even realized how much. Things had been changing and it was because of Deen. It was how he treated me. How he looked at me and how he touched me. It was how he made me feel.\n\n\"His name is Deen, Mom. And yes, I'm spending the weekend with him. He's a really great guy. He treats me incredibly.\" I fought the urge to compare him to Glenn to my mom. I needed to stop doing that even to myself.\n\nShe went on and on and assumed way too much, as moms do. I actually felt happier after sharing some things about Deen and my feelings with her. It was a good thing to be sharing and that scared me all over again.\n\nThat night after Deen and I had some dinner, we lay on the bed watching TV and chatting. My fears about this not lasting reared up and before I could stamp them back down, Deen sensed something was up.\n\n\"Where'd you go just now?\" He was always so gentle when he asked anything that could lead to talking about my dead husband and my messed up feelings.\n\n\"This feels too good to be true.\" I couldn't explain it any better though. Not out loud. Not yet.\n\n\"Well, get used to it, because it is real.\" He smiled down at me.\n\n\"Yeah, but for how long?\" Weeks? Months? This burning attraction and desperate desire to be near him couldn't last.\n\n\"For as long as we want. I really love being with you, Blake. I thought you were feeling the same way.\" He didn't sound hurt, just calm which anchored me.\n\n\"I am. But I've never felt this electricity with anyone. It's so amazing, but it can't last. I'm afraid of when the spark goes out.\" I answered honestly and cast my gaze down, hiding my eyes.\n\n\"I've never felt it either, honey. But who says it can't last? Don't we get some say in that? I think it will last. I feel it so strongly, it feels right and real to me.\" His eyes were filled with feeling and softness.\n\n\"I want it to last, too.\" I looked into his eyes, searching for the answer.\n\n\"Then we'll work together to make it last. Look at us. We can accomplish anything we set our minds to. I have no doubts about that. I have no doubts about us, or about you, Blake.\"\n\nMy doubts about Deen melted away more and more as each day went by. I was holding on with just my fingernails now, nearly ready to let go and just fall. I was falling and I was tired of fighting it.\n\nI still had it flash in my mind that it had only been nine months since Glenn died. He'd been my everything for years. I grappled with the thought that even though he was my everything for that time, was he everything I deserved? Did I deserve more? I sure wanted more.\n\nDeen was waiting. So patiently. He waited while I sorted it out, every hour, every day, one at a time. He never pushed or rushed. He supported and he cared. It was unlike anything I'd ever experienced.\n\nDeen held me while my mind worked through my feelings. I fought with my preconceived ideas. I tried to hear my mom's voice in my head telling me I was worthy of finding real love. Maybe for the first time.\n\nI tried to remember that just because Glenn wasn't quite the man I tried to revere, that I tried to mourn with my whole being, he was a good man and he'd been good to me. He'd been good for me. For a time. And then that time had ended.\n\nI was lucky enough to find something different, something incredible, right after my loss. Maybe Glenn had sent him for me. I thought about fate.\n\n\"Do you believe in destiny?\" I asked it out loud before I had a chance to overthink it.\n\n\"I don't practice, but Muslims believe in divine destiny. Yes, I believe in destiny.\"\n\nI looked into his eyes. The color of brown was so rich and mesmerizing. I could stare into those depths forever. I wanted to. Was this my destiny?\n\n\"I don't know if I believed it for most of my life. But now it seems real to me. Is that weird?\"\n\nDeen smiled at me again, making my heart skip a beat. \"It's not weird. I think you start to understand destiny once you start to feel it in your own life. Are you feeling your destiny lately?\" He smirked, but I heard the slight caution in the question.\n\n\"Yes, I am. It scares the crap out of me. The timing and the completely different path than I expected has caught me off guard.\" I answered honestly without telling him about my struggles to accept him and being with him.\n\n\"Fate is like that. It catches you by surprise and throws you for a loop. Do you want to fight it or go with it or somewhere in between?\" He asked another vague question that was actually a very particular question again.\n\n\"The old me would have fought it, tried to negotiate with it.\" That was totally true.\n\n\"And the new you? How do you feel about it now?\"\n\nI looked at Deen again. I really looked at him. I saw the few white hairs in his mustache and beard. I saw the smile lines around his eyes. His thick, shiny black lashes were glistening in the low light of the hotel room. He was so beautiful to me now.\n\nI didn't see the muscle bear leather daddy I'd seen at the bar. He was a totally different person to me now that I knew him. Now that I loved him.\n\n\"I don't want to fight my destiny. I want to accept my fate. I want to be happy. You make me happy, Deen.\" I felt the tears starting to gather in my eyes.\n\n\"You make me happy too. The kind of happiness I never knew I could feel but I always wanted. It feels like destiny to me.\"\n\nI reached for him and he leaned in and kissed me so sweetly. It turned more passionate, but still gentle. It felt perfect.\n\nBefore I realized it, I whispered against his lips. \"I love you.\" I didn't even freak out after it was said.\n\n\"I love you, Blake. I love you so much it scares me.\" Deen pulled back so he could see my face.\n\n\"Me too. I'm scared but I don't care anymore. I just want to love you.\"\n\n\"Then love me, honey. I'm going to love you back. I promise you.\"\n\nWe lay on the bed together and kissed and shared our words of love to one another for a time. It slowly turned hotter and hotter until Deen was peeling away my clothes and then his own.\n\nSoon we were both naked but still attached at the lips, unwilling to stop kissing. I needed this emotional connection with him like it was air or water or food. It was essential to life.\n\nDeen moved behind me and pulled me up against him. His hand found my crack and explored along the crevice. He pushed a large finger into me and started to stretch me open. I could feel his massive cock against my bare cheeks and I wanted him inside me as much as he wanted to be inside me.\n\n\"I'm going to love you, Blake. The way you deserve to be loved.\" I felt his slippery manhood push into me and I gasped. I moaned in pleasure as he pushed further in.\n\nI arched my body so my ass was tilted just right for him to thrust into me. He gripped me tightly as his hips started to move. Our needful bodies lay side by side, spooning, with him taking me from behind.\n\nHis strokes were slow and steady. He held me close and told me how much he loved me and how good it felt to be inside me. I answered with my soft moans and words of love and encouragement.\n\nI realized that the goal of this coupling wasn't our climaxes. The goal was sharing our bodies and souls. This was real love making. I focused on how perfectly we fit together and how much I wanted him to have everything he needed from me. I know he did the same. I could feel it.\n\n\"I love you, Blake!\" He was panting softly behind me as his hips moved steadily, filling me again and again.\n\n\"Yes, Deen! I love you!\" My words grew frantic as his hand closed over mine on my erection. He and I stroked my length together, my pleasure floating higher and higher.\n\nI felt my body release just as his big body went rigid behind me. I felt his hips push against me, the curly hair all around his manhood and lower abdomen tickled my sensitive skin as he started to fill me.\n\nHe held me close for a long time, our bodies joined as our breathing slowed back to normal. I pushed back into him as much as I could. I never wanted to separate from him.\n\nSeveral hours later we cuddled under the covers with something on the TV that neither of us were really paying attention to. Deen's large fingers trailed over my skin under the blankets, exploring, touching, learning my every curve and edge.\n\nI slowly touched every inch of his big body, feeling the hard muscles under the furry, warm skin. His body hair was soft as I trailed my fingertips through it. Even in a relaxed state, all his muscles bulged with strength. The muscles I used to find so strange now seemed perfect to me. Deen was perfect to me.\n\nThe rest of the weekend passed in our euphoric bliss filled with words of love and acts of passion. It was unlike anything I'd ever experienced. It was wonderful.\n\nBy the time Monday came, we were both so reluctant to leave each other's sides. But we dressed and left for work, promising to see one another again that night.\n\nI stopped at home a few times that week, but I spent every night with Deen. I looked forward to Friday night all day. I wouldn't have to leave his side for several days and I couldn't wait.\n\nDeen was particularly happy on Friday when he and I both arrived back at the suite. He held me close and kissed me with utter abandon.\n\n\"Come, sit with me, honey.\" He held my hand and led me to the couch.\n\n\"You seem happier than usual. What's going on?\" I asked him as we sat down next to each other.\n\n\"My contractor finished up the main construction and repairs. It's time to pick the finishes.\" His smile was so big. He looked like a kid on Christmas morning.\n\n\"That's the best part! You must be so excited.\" I fell into the happiness with him.\n\n\"I am. I want you to go see the house with me tomorrow.\"\n\n\"I'm excited to see it. I know you've been so ready to move back in.\"\n\n\"Blake, I want you to help me pick out everything. And I want you to move in with me.\" He paused and watched my reaction. \"I know your lease is almost up and you still haven't found a place. Move in and if you decide you still want your own place, you can look without a tight deadline.\"\n\nI pondered his words for a second. I had two months left on my lease. I still hadn't found anything and truthfully, I'd pushed it out of my mind lately. I just hadn't wanted to keep looking in vain. I was here all the time. I wanted to be here all the time.\n\n\"I may still look at houses, but I do want to stay with you. You won't be upset if I decide to get my own place?\" I had planned on buying my own house for so long, it was hard to let go of the idea.\n\n\"Of course not. All I want is for you to be happy and to stay in your life.\" He smiled brightly and I could tell he was being open and honest. I still think he hoped that moving in would be permanent, but he'd never push this issue.\n\n\"You better stay in my life. I've grown quite attached. I'm pretty sure I can't sleep without you any more.\" I confessed my truest thoughts.\n\n\"Good. I can't sleep without you either. I never thought I'd share my bed, after so many years alone. I always thought that if I found someone, I'd still want my own space to sleep, even if it was just on one side of a big bed. But now........now I need to touch you at all times when I sleep. I love having you in my arms.\"\n\nIn the morning we got breakfast sandwiches and coffee and headed over to his house. I recognized the neighborhood as the one I'd looked at a house in, but couldn't afford. I knew the style of the houses around here and I loved them.\n\nIt was an established, old money infused neighborhood. The houses were mostly Tudors and Colonials. Everything was very traditional and well cared for. The landscaping was all professionally done and the biggest houses sat back on the properties, shielded from view by mature trees.\n\nI saw the dumpster in the driveway of the house before he pointed it out. He looked so proud as we pulled up behind the giant metal container full of old construction materials. He took my hand and led me to the massive front door.\n\nDeen's house was a stone Tudor with turrets and very traditional black and white plaster and wood details. It could have been a sixteenth century manor house in England.\n\nHe opened the door and I was pleasantly surprised to see that so much of the original charm was still intact. The staircase and light fixtures dated to the early 1920's when the house was built. He was very pleased to have preserved it all.\n\nThe kitchen had been redone in the 1980's and had been dated and horrible according to Deen. He'd had the \"updated\" bathrooms and kitchen completely torn out and he'd updated all the plumbing, HVAC and had all the original stained glass windows refurbished and protected with modern, nearly invisible storm windows.",
        "The hardwood floors were sanded and ready to be refinished. It was one of the decisions that needed to be made right away, hopefully today.\n\nAbout fifteen minutes after we arrived and toured the whole empty house, the designer/preservation specialist showed up with finish options for the floors, the kitchen and all the redone bathrooms.\n\n\"Hey, Marie. This is Blake, he's helping me pick out everything since he'll be moving in once the house is ready.\" Deen introduced us and boldly explained our situation.\n\n\"Hi, it's nice to meet you.\" I offered my hand. Marie shook it and greeted us warmly and without a second thought. I smiled to myself as she started to lay out tile and countertop options.\n\nWith her knowledge and guidance we were able to pick out cabinets, countertops and a backsplash that would blend nicely with the original details of the home. We also picked the stain color for the floor.\n\nThe floor would be a dark color that matched the other woodwork perfectly. The cabinets were a similar dark color, slightly darker than the floors, to look like antique furniture. The countertops were thick cut, heavily veined Carrera marble that was a perfect classic look for the home.\n\nWe picked very similar finishes for several bathrooms with reproduction faucets and light fixtures that could have been in the house when it was built, but brand new and much more efficient.\n\nThe powder room and the main suite bath were both going to look period to match the house. The two full baths in the hall and downstairs were going to be slightly art deco influenced as it was the style when the house was built. All the finishes were selected and then Marie left.\n\nDeen showed me to his office on the first floor, which we'd passed and he'd pointed out on my earlier tour. He pulled the protective plastic away from one side where it was Velcroed closed. I stepped into Deen's private man lair. I was excited to see it.\n\nA huge desk sat near a carved stone fireplace. There were two chairs in front of the hearth that doubled as visitor chairs for the desk as needed. I glanced around and saw all his diplomas and certifications framed on the walls. I read them and tried to comprehend what I was seeing.\n\nDeen was a doctor, I knew that. He'd told me he was a Physician Nutrition Specialist, but I didn't really know what that meant. I saw another huge, embellished and double matted diploma behind the desk and I walked towards it.\n\n\"My proudest moment.\" He commented as he watched me move to the diploma.\n\nI turned and looked at him and then focused back on the document on the wall. I realized it was a PhD in nutrition, which I didn't know he even had. He was a medical doctor and a doctor of philosophy.\n\n\"I didn't know you had a PhD, too.\" I smiled at him as I turned to face him. He looked almost nervous, like he was waiting to see how I would react. \"I guess your brain is even bigger than your muscles.\" I joked with him.\n\n\"Yeah, I'm a bit of an overachiever.\" He smiled at me like he was thinking something else.\n\n\"You think?\" I stepped up to him and put my hands on his big chest and smiled up at him. As usual, he read my body language and leaned down and kissed me tenderly.\n\n\"I have a tendency to focus on big goals. First it was bodybuilding. Then I went to medical school. I became a specialist and then I got the PhD. I think I might become a professor in the next ten years.\"\n\n\"Is that the big goal you're focused on right now? Becoming a professor?\"\n\n\"No, I'm already qualified. I'll do it when I'm ready to slow down and enjoy my success. I have a new big goal right now that I'm putting my all into.\"\n\n\"The house?\"\n\n\"No. I'm paying other people to do the house. It's not my area of expertise.\" He smiled at me again, that oddly curious smile.\n\nI just shook my head at him to indicate I didn't know what his current project was if it wasn't the house.\n\n\"My focus right now is you, Blake. My life with you. Us. I'll be the first to admit I never assumed I'd have anything like this with anyone. But I saw you at the club and that was it. I just knew.\"\n\nDeen moved towards his big desk chair and pulled me down onto his lap when he sat.\n\n\"Then I actually got to know you and I tried my best to be supportive and patient. I tried to give you time and space to heal and to fall for me. I couldn't believe it really worked.\" He grinned at me.\n\n\"I fell. That's for sure. I'm still falling. Hard.\" I looked right into his incredible dark eyes as I said it. It felt like I'd confessed my deepest secrets, but it felt safe with Deen.\n\n\"I will always catch you, my love. When I make something my focus, it's my whole world. You are my whole world and I will focus on making you happy, with me, for the rest of our lives. I promise you that, Blake.\"\n\n\"You're my whole world, too. I love you.\" I felt like I might cry so instead I leaned in and kissed him hard.\n\nDeen had me stand and then he sat me on his desk. He undid my pants while I leaned back and watched. Soon I was completely naked. He spun me around and gently pushed me down onto the desk, face first.\n\nI wanted whatever he wanted so I gave him all the control and I lay on the desk while he ran his hands down my ink covered back over my nude, wide spread ass.\n\n\"Stay there.\" Deen's deep voice rumbled through me. I made a sound of agreement and I relaxed as I listened to him unzip his pants. It made my body grow hard with anticipation.\n\nDeen stood after pulling off the rest of his clothes, pressing his thighs and his hard erection to my ass as he leaned over me and whispered in my ear.\n\n\"I've wanted you here, in my office, on my desk, for so long. Do you like this?\"\n\n\"Yes, I love it. I'm yours for the taking.\"\n\n\"Good. I'm definitely going to take you Lieutenant Commander Cameron. Hold on, honey.\"\n\n\"Yes, doctor.\"\n\nWe didn't have any lube so Deen spit onto my crack and used his big purple head to spread it up and down. He slowly pushed into me, filling me so deeply, I was standing on my toes.\n\n\"Ohhhhh. Yes!\" My hands were in fists, my head pressed against the cool surface of his desk.\n\n\"You look so gorgeous like this. At my mercy, spread wide, filled with my cock. Fuck, Blake.\" He gritted out the words as he started to move behind me.\n\nSoon he was thrusting against me, making me yell out with pleasure as he filled me repeatedly. My whole body throbbed with my need for him.\n\n\"Please! Deen! I need you! Oh god!\" I gripped the far edge of the desk and held on for dear life as he answered my pleas.\n\n\"I love you! I love you! FUCK!\" He punctuated each powerful thrust with his own yelling and grunting.\n\nDeen held my waist even tighter and started pounding into me at a mind-numbing pace, pushing us both to the edge of our joint climaxes. I screamed in pleasure from his incredible fucking.\n\n\"I'm going to come!\" I screamed out.\n\n\"Come for me! Come on my desk! Fuck yeah!\"\n\nI did just that. I came hard as he kept using my hole. I felt my rigid length under me as it twitched and started to spill my semen onto the smooth wood surface.\n\nI was trembling from my orgasm when I felt Deen tense behind me, going still and breathing hard and loudly. Then he yelled out, a guttural cry of pleasure as he bred me right there on his desk.\n\nHe pulled out and flopped back into his huge leather chair. He pulled at me, trying to get me to join him. I stood and then I sat down in his lap and leaned my head back onto his shoulder.\n\n\"I made a big mess on your desk, professor.\" I said once I caught my breath.\n\n\"Oh fuck, I like this game, honey. Should I punish you for making a mess, sailor?\"\n\n\"Yeah, you probably should. Teach me a lesson for being such a messy little squid.\"\n\n\"I wish there was a bed here, but I donated everything to a women's shelter since I planned on buying all new stuff that fit the house. I'm sure you noticed, the office is the only room that has furniture and stuff on the walls.\"\n\n\"Maybe we should go back to the hotel. I'll be ready for more by then.\" I twisted my head and kissed his thick neck.\n\n\"Get dressed.\" He sounded determined, so I stood and wiped the desk off with a few tissues and then I dressed and followed him back to his SUV.\n\nWe happily chatted about furniture shopping and donating my old things to the same women's shelter as we drove back to the hotel. The whole day was perfect.\n\nWe made love in bed at the hotel and then we went out for an early dinner and to see a movie. I held his hand as we waited in line at the theater without even thinking about it. I was finally over it. Completely.\n\nIf anyone looked at us, I assumed it was because we were two large men holding hands or that they thought my gentle giant was hot. He was hot. Huge and hunky and all mine. I felt hot myself, when I was with him.\n\nA week later we got a move-in date of four weeks. We went furniture shopping and started having rugs, beds and everything else for upstairs delivered. I packed up my personal belongings and several things I wanted to keep and the rest got picked up by the charity.\n\nWith a month left on my lease, I moved out and turned in my keys. I didn't live in Glenn's and my house anymore. I took my things to Deen's and I stayed with him at the hotel until the house was ready.\n\nIt felt like we'd been together forever even though it had only been three and half months. If any of my friends had met someone, moved in and designed a house with them on this timeline, I'd have told them to have their head examined.\n\nBut it worked for us. Everything was working for us. However, I did get fearful as the one year anniversary of Glenn's death was only a week away. I told Deen it was coming and that I might have a hard time. He assured me he'd be there for me, no matter what.\n\nWhen the day came, Deen was there for me. I cried on and off all day and he just supported me in any way I needed. He let me reminisce and talk about the last two weeks I had with Glenn, when he'd been so sick and then he was just gone. It felt good to talk about it with him.\n\nHe held me close as we lay in bed for a nap in the afternoon. I felt raw and tired but I didn't sleep. I turned the focus to Deen instead.\n\n\"You don't talk about your family much. I had Glenn and I have my mom, but that's it for me. I've heard you bring up both of your parents and your sister or sisters.\"\n\n\"Sisters. Three of them. And two brothers. Six of us in total. My mom and dad aren't together and I don't have much of a relationship with either of them. And several of my siblings.\"\n\n\"Can I ask why?\"\n\n\"Of course you can. I'll always share everything with you. My parents split when I was twenty and just about ready to leave home. They haven't divorced for appearances sake, even after twenty five years.\"\n\n\"That sounds crazy.\"\n\n\"It is, but I'm glad they broke up. My father was very abusive to her. She was always cruel to me, but I still didn't want her hurt anymore like he'd done to her. She turned both of my brothers against me, even as I stood up to my dad for her.\"\n\n\"I'm so sorry, Deen. That sounds awful.\"\n\n\"I got out soon after and I've never been back. Mother couldn't reconcile her religion and my homosexuality. My brothers are horrible husbands and fathers, just like our dad, but she's proud of them because they follow her religious beliefs.\"\n\n\"Remind me to thank my mom for being on my side when I call her tomorrow.\"\n\n\"I will.\" He kissed the top of my head and held me a little tighter.\n\n\"What about your sisters?\"\n\n\"Two of them still live in the neighborhood, but they both call on my birthday and when something big happens with one of their kids. They keep me informed about the rest of the family even though I don't really care to know.\"\n\n\"Where do you fall in the birth order?\"\n\n\"My eldest sister, then me, then two girls and then two boys. My eldest sister is the one I've always been close to. Cala lives in New York. She's divorced and has no kids. She's a lawyer.\"\n\n\"Are all the kids in your family as successful as you two?\"\n\n\"Nope. We're the only two. My brothers own a run down gas station and my sisters don't work. They're stay at home wives and mothers, as is proper for the \"inferior sex\". Cala and I couldn't stand that way of thinking so we encouraged and supported each other to get out and make something of ourselves.\"\n\n\"I'm glad you have her. I can't imagine where I'd be without my mom. She's always stood by me, no matter what it cost her. It sounds like Cala does the same for you.\"\n\n\"She does. I can't wait for you to meet her.\"\n\n\"My mother is going to smother you with affection when she meets you. She tells me every single time we talk that she can't wait to hug the man that makes me this happy.\"\n\n\"A mom hug sounds good to me.\" I could hear the smile in his voice. It made me happy.\n\n\"She's got plenty to go around, trust me.\" I snickered as I thought about my tiny mom hugging my giant. She was five foot, four inches when she was younger and I swore she'd shrunk an inch already. She'd hit me on the arm when I mentioned it. I always mentioned it just to rile her up.\n\nBefore I realized it, it was well after midnight and Glenn's death anniversary day was over. I'd forgotten about it for a while as I learned about Deen instead. It felt so nice to be allowed to mourn openly and then be easily distracted. Deen was amazing like that.\n\nThe last few weeks of construction at the house finally went by and Deen and I were able to officially move in. It felt like moving into a new house together, instead of moving into his existing house. He said it felt the same way to him, too.\n\n\"Let's give the neighbors something to talk about.\" He smirked at me as we unloaded the last bags from the hotel from the Cadillac.\n\n\"Oh? And what would that be, Dr. Nazari?\"\n\n\"Wait here.\" He grabbed the bags and took them into the garage and came back out through the front door. He grinned at me as he walked towards me. My stomach twisted as I watched him lick his lips as he stalked me.\n\nWhen he was by my side, he scooped me up, bridal style and carried me up the walk and through the front door. I'm a two hundred pound man. I'd never expected to be carried over a threshold in my entire life, but it was incredible.\n\nHe set me down in the foyer and wrapped his big arms around me, kissing me hard. He pushed me back until I was against the wall, pinned by his mass. I held onto his neck and met all his kisses with my own passion.\n\n\"Let's go upstairs and christen our new bed.\" I whispered between kisses.\n\n\"What a great idea.\" He grinned at me and stepped back, took my hand and led me up the stairs to our freshly decorated room.\n\n\"Should we start with a shower since this one is big enough for both of us?\" I started to undo my pants seductively, his eyes riveted on my every move.\n\nHe nodded and kept watching my hands as I pushed my pants down my legs. He continued to watch, like a starving man, as I slowly stripped for him.\n\nNude and fully aroused, I moved towards him. I started to unbutton his shirt as he continued to stand still and watch me.\n\n\"Blake. I can't begin to tell you how much I love you. Do you have any idea?\"\n\nI pushed his shirt off his shoulders, tugging to get it off over his massive biceps. I looked into his emotion filled eyes and I smiled at him.\n\n\"I do. I know because I feel the same way about you. I love you more than words could ever describe. I feel it when you look at me like that.\"\n\n\"Good, I want you to feel it. I want you to always know that I love you more than anything else in the whole world. You are the most important thing in my life.\"\n\n\"Show me. I need you, Deen. I'll always need you.\" I pushed his unfastened pants down his thick thighs.\n\nI'd gained a whole new appreciation for denim with spandex in the fabric blend since meeting this mountain of muscle. He looked sexy as fuck in his tight fitting jeans. But he looked even better out of them, like right now.\n\nTo answer my request, he showed me. He pulled me into the giant walk in shower and slowly lathered my whole body, running his huge hands over every inch of me. He kissed my body as each new spot was rinsed clean.\n\nI soaped him up in between his ministrations on me. Somehow we both got clean and rinsed before the touching grew too hot to control. Deen slammed me up against the wall, making me gasp in surprise. It was the perfect amount of erotic roughness without crossing a line into something else. It was intoxicating.\n\nHe pressed his huge, hard body against me while he kissed my neck and then he plundered my mouth with his own. I held him around the chest, digging my short nails into his back to steady myself as he devoured me.\n\nHe found my thighs with his big hands and reached around to lift me. I jumped and wrapped my legs around his waist as he pressed me back into the tile wall, keeping me supported with his big body pinning me in place and his hands under my ass. We kept kissing furiously.\n\nI felt him shift and take himself in hand. He found my entrance and impaled me on his rock hard cock. I clung to his shoulders and relaxed to accept his huge length and thickness. He slid home and filled me completely.\n\nHis hips started moving and he fucked me relentlessly against the shower wall. I moaned and shuttered as he gave me pleasure beyond my wildest dreams. It seemed to get better and better, every single time we made love. I was addicted to this man. He seemed equally afflicted by me.\n\nDeen came inside me first and then as my own climax overtook me, he pulled out and set me down on my feet. He then fell to his knees and took my throbbing erection into his mouth and down his throat. He sucked hard while I pumped out more and more cum between his luscious lips.\n\nWe made it to the bed shortly after and just lay side by side, staring into one another's eyes. I couldn't have imagined this bond before I experienced it myself. It was intense and comfortable all at once. This man was the most beautiful thing I'd ever seen.\n\nThe days and weeks went by and our love grew even stronger. When I was alone, usually driving to work, I'd compare this relationship to my marriage. I simply could not believe that I thought what I'd had before was enough. I literally didn't know what I was missing.\n\nI'd never have wished harm to come to Glenn and I would still be with him and unaware of the bigger love I'd found, if he were still here. But he wasn't. And the two things weren't really related, I'd finally come to understand.\n\nI was fully committed to Glenn when I was with him. Finding Deen after him didn't reflect on who Glenn was or what our relationship had been. One thing had ended and then I'd found a different thing. The fact the different thing was so much better in every way, didn't take away from what I'd had in my marriage.\n\nI felt everything change once I understood and accepted that. I felt free and alive, young and in love. I'd found my soulmate. My life mate. My one true love. I gave every part of myself to Deen without holding anything back.\n\nAs the holidays neared, we invited my mom and Deen's sister Cala to come and stay with us for a long weekend. They both accepted and we were so excited to see our family and have everyone in one place for the first time.\n\nCala felt like a big sister immediately and she loved on Deen and I equally. My mom fell in love with Deen the second she met him. He was her favorite son within hours. If I didn't love him so much myself, I might have been jealous. Instead, it made me happier than anything.\n\nThe two women hit it off as well and they went off exploring together on several occasions. They went shopping for gifts and to the grocery store. Then they went and got their nails done. They planned to stay in touch after they went back to New York and Atlanta.\n\nIn the new year we got together with my local friends and my gay friends in Boystown. Deen introduced me to his work friends and his chosen family that he'd gone to Pride with that fateful night.",
        "When I introduced Deen to Rob and Dirk, I warned him about Dirk's inability to think before he speaks. I knew Deen would roll with it, no matter what, but I still felt he deserved a heads up. Nothing really flustered my big, handsome boyfriend.\n\nDirk asked to touch his muscles which grew strong reactions from both me and Rob. Deen just laughed and followed my lead. Dirk kept his damn hands to himself, his husband made sure of that.\n\nRob made a flimsy excuse to get me alone in his room, away from our guys. \"Deen is incredible. I'm not even mad that we've barely heard from you. I wouldn't have wanted to share him with anyone either.\" He teased and smiled.\n\n\"Yeah, we kind of got wrapped up in each other pretty quickly. He was what I needed in my life, but I didn't really understand it at first. But now........I know I'm the luckiest man in the world.\"\n\n\"He's so gorgeous. He looks like a superhero. Is his dick big, too?\" Typical Rob. At least he knew to ask things like this in private.\n\n\"Yes, it is.\" I smirked and answered honestly.\n\n\"A doctor that looks like that and has a big dick? How is he even real?\"\n\n\"I don't actually know, but he is real and he's mine. I'm so completely happy for the first time in my life. I didn't know I could be this happy.\"\n\n\"You deserve it. I'm so glad you met him. We were very worried about you. Anyway.... We should head back before Dirk scares him off.\"\n\n\"Luckily, Deen's not easy to scare. Trust me, he should have been scared off a long time ago, but instead he just gets stronger. He makes me stronger.\"\n\n\"Yes, I can tell.\" Rob agreed as we went back into the living room. Deen was telling Dirk about his bodybuilding career and Dirk hung on his every word.\n\nMy man was always going to be the most admired guy in the room. The most attractive, the biggest, the strongest, the sweetest, the smartest, the bravest.\n\nJust then he turned to look at me as we came back to the sitting area. Everything else stopped when his eyes met mine. He looked at me like I was the most attractive, the smartest, the most devoted, the most lovable, the sexiest.\n\n\"I can't wait to get you home.\" He whispered to me as I sat next to him. \"I can't get enough of you.\" The spark between us was brighter than ever.\n\nIn June we went to New York to see Cala and to attend Pride in the city. We decided to go to Pride in a different city every year. Next year we'd go to Atlanta. Luckily many of them had their celebrations on different weekends in June, so we could go to the Chicago festival as well.\n\nIn the blink of an eye, several years had passed. I never did look for a house. If Deen wasn't there, it wouldn't be home anyway. I was home already.\n\nWe discussed getting married and I told him I'd love to marry him. He nodded and smiled and dropped the subject. I knew he would ask sooner than later and I was in no hurry because our commitment was already solid.\n\nOn a random Tuesday night, I got home from work and Deen came out of the kitchen to kiss me hello. He'd been home for a half hour and had started dinner. He kissed me passionately and held me close for a long time. We always needed to touch after long days apart.\n\nI remembered thinking that Deen was right. The spark didn't go out. We did get to have a say in that. We never neglected our relationship. We put each other first, over everything else and we kept burning bright. I still got butterflies and we still craved each other as much as before, maybe even more.\n\n\"How long until dinner?\" I asked when he finally let go of me.\n\n\"I put chicken and veggie pouches in the oven to bake, so about forty-five minutes.\"\n\n\"Set a timer and meet me upstairs.\" I turned and walked up the stairs, knowing he watched me the whole way.\n\nHe set the timer and then flew up the stairs to find me in our room where I was nearly naked. He stepped up to me and ran his hands over my chest and back, down my arms. His touch still drove me wild.\n\n\"Get naked please. Now.\" I pushed him away so I could finish undressing and so he could catch up.\n\nI reclined on the bed as he finished undressing himself, nearly tripping as he tried to walk before getting his pants off over his feet. I giggled at his urgent fumbling.\n\n\"You think this is funny, huh? I'm going to make you regret that.\" His grin was wicked and his eyes were dark with desire.\n\n\"Yes, please. Make me regret it, big boy.\" I rolled over and shot him a hot look over my shoulder. His eyes jumped from my face to my ass and back again.\n\n\"You don't play fair, honey. You know I can't resist that fine, black ass.\" He mounted the bed and moved over me. He kissed the backs of my thighs and then my firm, round butt.\n\nHe pushed my cheeks open and ran his tongue over my tight hole and down to my taint. His hot breath and soft kisses made me impatient and needier than ever.\n\nHis tongue found my anus again and he pressed the tip into the hole. He worked my entrance with his wet mouth until I was pushing back into him and begging him to fuck me.\n\nWhen Deen finally pulled away, I whimpered. I wanted his mouth back on my ass and yet I wanted his big cock in me even more. I needed something, anything!\n\nHe moved behind me and pulled me up on my hands and knees and thrust into me, all the way into my guts, in one swift movement. Nine, thick inches filled me and pleased me instantly.\n\nHis strong body moved against me, driving our pleasure higher and higher until I was screaming for release. He always made me come hard and scream out loud. He loved his sexual effects on me. My reactions drove him to his own release. He craved my pleasure to help him reach his own.\n\nDeen and I made love nearly everyday. We never skipped because of a fight. We never fought, really. We had spirited debates, as he called them, about certain things, but we never ever made it personal and the subject was never \"us\". We'd debate about which brand of garbage bag or what time we needed to leave the house for dinner with Tom and Gia. Small, insignificant things.\n\nDeen was the best friend I'd ever had. He was the most incredible lover and partner. We fit together in every way. Our lives, our families, our bodies, our minds, our beliefs, everything lined up and complemented each other. It seemed unreal sometimes, but I didn't waste time worrying about it. That was the old Blake. New Blake just enjoyed being happy with his true love.\n\nI only compared him to Glenn on the rarest occasion and only in my mind. I'd have the thought, smile about how great Deen was and leave it be.\n\nI'd recently thought about my old sex life. Twice a week, Saturday and either Tuesday or Wednesday. Doggy style until Glenn came silently and then a halfhearted hand job which I'd finish myself if I really wanted to get off. Every time it was the same.\n\nNow, I had sex constantly. It was always different and exciting even with the regularity. We tried a hundred different positions and we both got off without issue. Sometimes I'd even top him. We always focused on our love for each other as the most important thing and everything else fell into place.\n\nMy mind had fought this attraction out of guilt and because of my fear of what \"they\" would think. The timing seemed so bad. I had assumed so much about Deen based on his appearance. All of which was dead wrong.\n\nLuckily, this gentle giant seemed to know exactly what I needed, when I needed it and how much of it I needed. He saved me from myself. He gave me the love I deserved even when I didn't believe that I deserved anything. I believed it now. I've believed for a long time.\n\nI'll never leave Deen's side and you couldn't pry him away from me for anything in the world. I had settled for good and he'd believed he was destined to be alone. Now we were the envy of every couple and single person we knew.\n\nDeen is my destiny and I am his. I wish everyone could feel love like this at least once in their life. I know how lucky we truly are. What we found is incredibly rare and we cherish and nurture it daily. We actively love each other every minute of every day. Hours of passionate love making doesn't hurt either."
    ],
    "authorname": "YodaandLumiere",
    "tags": [
        "love again",
        "romance",
        "deepthroat",
        "oral sex",
        "blowjob"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/blind-date-ch-02-blakes-story"
}