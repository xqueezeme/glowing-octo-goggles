{
    "title": "Play Testers Wanted Pt. 06",
    "pages": [
        "All characters are 18 years old or older. I spent extra time editing and making sure there was a nice flow to the action and not come off as rushed. While writing this piece I had a thought. The character of Wolverine is most well-known for his adamantium claws. When he pops his claws wouldn't they be at body temperature. So, if he were to press them threateningly against someone would they feel hot. I am not sure. It is little details that sometimes catch my attention and I wonder. That was just one of them. Please feel free to vote, comment, and let me know that you are enjoying this series. LB\n\n*****\n\nHypersexual:\n\nThe ship reeked of sex. The air scrubbers were working overtime and failing. When you are cooped up in a limited space with three gorgeous women, you get into a rut, if you call fucking nonstop for hours on end. I had never had sex on a spaceship before and I'll be honest it never lost its appeal. The trio was fast asleep when the ship dropped out of hyperspace. The craft, still cloaked, placed itself in a geostationary orbit around the earth. I was seated in the pilot's chair while the girls were asleep in the captain's cabin. \n\n\"We have reached Midgard undetected.\" Traci declared. \"Shall I wake the ladies?\"\n\n\"No need,\" Susan purred. \"Home sweet home!\" She said stretching and I couldn't help but admire her beauty. She still took my breath away.\n\n\"Are you still angry with me Master?\" Morya asked frowning as she sheepishly followed the Invisible Woman into the main cabin.\n\n\"I told you before,\" I snapped. \"I am pissed. I'll get over it in time.\" \n\n\"Give him time,\" Jennifer purred as she cupped the she elf's breasts from behind forcing Morya to giggle. \"In the meantime, we'll keep you in line.\"\n\n\"Thank you all,\" I said a small smile on my lips. \"Now let's wash up and get dressed.\" I ordered and we all piled into the communal sonic showers.\n\nSince water was precious during space flights, the Svartalfar developed an alternative to using soap and water. The concentrated sound was both invigorating and effective. My skin had that healthy glow to it. Traci chimed in and informed us that she had tied into several news satellites to learn what had transpired since we left. Most of the stories were boring but one stood out.\n\n\"The Latverian Government has closed its borders and turned away humanitarian aid for its citizens when video footage and files were leaked to the press about ongoing actions of a serial killer...\"\n\n\"Off.\" I ordered and winced. \"Doom must be fuming.\"\n\n\"Fuming?\" Susan laughed. \"He is probably pacing, screaming, and looking for a way to blame outsiders for whatever is going on.\"\n\n\"So, what's the plan Ghost?\" Jennifer.\n\n\"Do you guys trust me?\" I asked.\n\n\"I don't like the sounds of this.\" Jennifer muttered as we dressed.\n\n\"I need to keep you guys safe until I can resolve the Reed thing. I suspect he is suffering from toxic effects of the Negative Zone. I want to get him into the cryo tube and freeze him for a few months so that we can treat him and get him back to his old self. Despite his actions, I don't want to hurt him.\"\n\n\"We believe you. Why don't you want our help?\" Susan asked touching on my tactics.\n\n\"When I confront him, I am going to play off that I didn't find you.\" I said and they knew Reed well enough to guess how he'd react.\n\n\"I see.\" Susan said her eyes narrowed as she thought over my strategy. \"We'll stay here with Morya. She'll keep us company.\"\n\n\"If it helps Master,\" Morya declared happily. \"I will do whatever he wants.\"\n\n\"Keep them safe and tie the teleportation circuits to one of the tubes.\" I asked. \"I need all of your help in this.\"\n\nThey agreed to work together so that Mr. Fantastic could be redeemed. Despite his cold and distant behavior Susan still cared for him. They were still married and had a long relationship and history. I had Morya fly the craft within walking distance of the Wakandan embassy. I would need to speak with Princess Shuri about how effective the tank would be to help treat Reed. This would also allow the ship to recycle stale air for fresh. The craft hovered a hundred feet off the ground, I cracked an airlock and dropped from the cloaked ship. I used the same technique I had when I was ejected from the shuttle during my training days. I landed softly with barely a whisper to announce my arrival. I switched my armor to its street clothes disguise and walked up to the front gate of the embassy.\n\n\"Can we be of service?\" One of the female guards addressed me.\n\n\"I would like to speak to Princess Shuri.\" I requested and then they asked a follow up question.\n\n\"Who should we say wishes to speak with her?\" The guard asked.\n\n\"A friendly neighborhood ghost,\" I said and saw her recognizing me instantly.\n\n\"Oh, my goodness!\" She gasped in delight. \"You are 'that' Ghost!\" She declared in that sexy Wakandan accent.\n\n'Your pulse rate just shot up.' Traci whispered in my ear. 'Do I need to change my accent for you?'\n\nAs the guard called into the embassy Traci switched from an Irish accent to a Wakandan one. It worked. I preferred it to the old one. Traci didn't seem to mind altering to meet my desires and expectations not unlike Mystique. I had a brief flashback of our encounter in the bar's bathroom. The guard informed me that I would be allowed to enter the embassy. I was patted down for weapons and led by the guard to the front door. She wished me well and turned away just before we reached the front door. She was behaving oddly. I opened the door of the embassy and standing in the foyer was none other than King T'Challa. He was dressed impeccably in a dark suit.\n\n\"Welcome to the Wakandan Embassy Ghost Fire.\" He said with the same temperature as a frozen tundra.\n\n\"It is truly an honor to meet you King T'Challa.\" I said feeling like I might have to defend myself at any moment.\n\n\"Come in, let me give you the nickel tour while Shuri makes herself ready.\" He said and I fought the urge to shiver. \"I never had the chance to thank you for risking your life when you retrieved the stolen shipment. Thank you.\"\n\n\"Anyone would have done the same.\" I said but T'Challa shook his head.\n\n\"No! I have seen the most impressive footage of your excellent tactics and skills used to devastate that vehicle. It has received many views and likes on the internet. You are quite popular. I see why she likes you.\" He said and his voice softened a bit. \"You have proven yourself a true friend of my country.\"\n\n\"I am glad you feel that way your majesty.\" I said as Shuri made an appearance wearing a lovely black dress with hair and makeup done to perfection. \"Princess, you are looking well.\"\n\n\"Thank you,\" She replied being on her best behavior in front of her brother. \"What brings you here?\"\n\n\"I hate to ask but I need your help. It isn't for me; it is for Reed Richards.\" I explained and a look passed between Shuri and T'Challa. \"What?\"\n\n\"Perhaps it is just coincidence.\" T'Challa replied without hesitation. \"His behavior lately has been unpredictable. What can we do to help?\"\n\n\"We brother?\" Shuri asked smiling.\n\n\"Wakanda owes this young man a debt, and besides he is requesting our aid for another. Only a hero is so selfless.\" T'Challa stated as he defended his position.\n\n\"What's the plan?\" Shuri asked giggling.\n\nI explained my belief that Reed had been exposed to toxic levels of the Negative Zone. It was a bit frightening seeing Shuri throw herself into the problem. She walked around in a frenetic circle around us as she gestured energetically and talked about antimatter, ionizing radiation, and possible tumors. I was alarmed when she mentioned a tumor, but it did explain his behavior.\n\n\"Can you help?\" I asked and she was all smiles.\n\n\"Indeed, we can,\" Shuri offered. \"I have developed several treatments for different kinds of cancer.\"\n\n\"What do you have planned?\" T'Challa asked and I shared my idea. \"Well Shuri, what is your insight on this matter?\" \n\nWe spent time brainstorming and fine tuning my strategy. I was invited to dinner but took a pass. I was anxious to try and settle things with Reed. Shuri wanted to talk alone and walked with me around the ground floor of the embassy. T'Challa smiled and headed upstairs. Shuri was silent as we passed several museum pieces not just from Wakanda but around the world as well. It seemed T'Challa was quite the collector. \n\n\"I can sit down now.\" She purred in my ear without warning. \"I'm glad you stopped by.\"\n\n\"Me too. It is good to see you.\" I replied and then I saw it. \"Where did you get that?!\" I stammered as I pointed at a dark stone statuette.\n\n\"That old thing,\" Shuri stated. \"That's been in the family for centuries.\" She paused and then continued. \"It has a long history though. I still haven't been able to decipher those strange characters around the base.\"\n\n\"When you say a long history, what do you mean?\" I asked as I read the Svartalfar characters decorating the statuette.\n\n\"I better ask T'Challa if he is okay with me sharing that bit of information.\" She said and I respected her decision. \"Brother?\" She said as she touched her vibranium bracelet. \"Ghost wants to know the history of that ancient statuette father was so fond of.\"\n\n\"Indeed.\" His voice came over the link. \"I have no problem with you sharing but let me be present though. One moment.\"\n\nWe waited until the King was there to observe my reactions to the story. T'Challa arrived, took the bust from its place, and carried it to the dining room. We sat as food and drinks were brought. He handed me the statue and I looked over every inch of it. The dark elven characters around the base weren't the only ones. Etched into the bottom of the statuette were numerical runes as well.\n\n\"You recognize it.\" T'Challa stated.\n\n\"I do indeed.\" I admitted. \"It is clearly a Svartalfar relic.\" I told them and they both smiled. \"What?\"\n\n\"I told you it wasn't a glitch.\" Shuri laughed as she thrust a finger into her brother's face.\n\n\"You win the wager little one. What do I owe you this time?\" He chuckled.\n\n\"I want to make something special for Ghost. I want to pour myself into it to show him my affection and to create something beautiful.\" She stated quite emotional.\n\n\"You have my permission.\" He said and then turned his attention to me. \"Can you tell us what it says?\"\n\n\"It is the name of the figure depicted in the sculpture. It is her name and rank, Alflyse Beloved Queen of the Eastern Spires. Whether beloved was from her husband and king, or beloved of her people I can't tell.\" I said and then pointed to the base of the object. \"These are numerical characters.\"\n\n\"Ooh! Really?!\" Shuri lit up. \"What are their values?\" She asked and I told her. \"Oh. My. Goodness!\"\n\n\"I don't believe it.\" T'Challa whispered shock clearly expressed on his noble features.\n\nI waited as they shared looks and pondered sharing with me what they knew. I turned over the statue and reexamined it. The material of the statue wasn't any terrestrial stone I recognized. Had it been carved on Svartalfheim? If so, how had it arrived on Earth? Did they know? Shuri broke the silence and took my hand in hers.\n\n\"I lied.\" She said as she launched into a very familiar story. \"The source of our nation's wealth is the unique element vibranium. Not many outsiders know how it came to us. Before our written history the star fell from the sky. Our ancestors discovered it by accident. It was buried deep and around it the sacred herb. One of the first items discovered was the statue. It was inside the meteorite. A miner found it centuries ago and it has been a lucky charm for the royal house. If it is in fact a dark elf relic then they must have had contact with the original source of the vibranium.\"\n\n\"It is an impressive feat for a culture to survive for so long.\" T'Challa stated. \"Keep it.\"\n\n\"What?!\" I gasped in surprise. \"No! It has been in your family for so long! I couldn't possibly...\"\n\nClick!\n\nMy roaming fingers found a hidden catch near the base of the statue's skull. Internal mechanisms allowed the head to tip forward revealing a hidden storage compartment. The orb shaped gem inside was dazzling in its beauty. It was the color of deepest sapphire at first but when I took it into my grasp it began to pulse and change color. I turned it over to examine it and the hues and shades ranged from blood red to clear as any diamond. I held it up to the light and looked through the jewel. \n\n\"I've never seen anything like this before. There are runes inside the gem, see!\" I said handing it to Shuri.\n\n\"The statue.\" T'Challa demanded. \"It recognized your touch.\"\n\n\"Gorgeous!\" Shuri whispered as her gaze locked onto the gem.\n\n\"It would be the perfect decoration for the cross guard of an elegant sword.\" T'Challa suggested and Shuri ran with it.\n\n\"If only I had something to base the design from.\" The princess said her tone mocking and waiting for my input.\n\n\"Would this help?\" I asked taking the dark elf dagger from my inventory.\n\n\"Ooh, it is lovely. The curves are almost feminine.\" She purred as I handed it to her. \"Oof!\" She exclaimed as she dropped the dagger and it hit the floor with a dull thud. \"It is so... heavy! I can't lift it.\"\n\n\"No way.\" I said as I easily picked it up off the floor. \"Perhaps a scan would do?\" I suggested as I thought my dagger might have a similar enchantment to the fabled weapon Mjolnir. Could only certain people wield the dagger?\n\nShuri used her bracelet and performed a detailed examination of the dagger. It didn't take her long to create a working model of her version of a sword based off the knife. She kept the sweeping style and curves while adding her own flairs. I thought of something better and she stopped sketching. I asked for a non-lethal weapon, a well-balanced battle staff. Shuri latched onto that idea and kept the general dark elf flourishes and designs. As she drew, I took out the twenty vibranium arrows and gave them to her. T'Challa laughed when he saw me set them down on the table.\n\n\"Where did you get those Ghost?\" He asked his eyes crinkling on the edges.\n\n\"I plucked them out of the air as the archer fired them at me.\" I explained and he laughed even harder.\n\n\"Damn Ghost,\" T'Challa cursed as he wiped the tears from his eyes. \"Impressive. That isn't an easy task on the best of days.\"\n\n\"What do you think?\" Shuri asked directed the holographic drawing of the retractable battle staff. \"When it is collapsed, it is easy to conceal on your person. The gem will be at the heart of the weapon. A simple touch and it will unfold to its full length and ready for combat.\"\n\n\"How about this?\" I said and traced a few Svartalfar runes on the weapon giving it a final touch. \"So?\"\n\n\"I'll get on it right away. You can pay me for it when it's done.\" She purred and T'Challa rose and acted as if he hadn't seen or heard anything. \"This is going to be gorgeous when I'm done.\"\n\n\"Oh, I almost forgot. I brought a few things for you to examine in your free time.\" I stated and T'Challa stopped in his tracks looking over his shoulder. \"I picked these up recently.\" I told her as I set down the dark elf weaponry and armor, I had plundered from the Negative Zone. \"And a container of sand I brought back from Svartalfheim. I discovered a minute quantity of Vibranium inside the sand. Though, I thought you might enjoy studying dark elf technology... MMMMM!\"\n\nShuri took me in her arms and kissed me fiercely. I heard T'Challa mutter something in Wakandan that I would only learn later that translated to welcome to the family. I kissed her back and we both came up for air eventually gasping and blushing. I believe it was that show of raw passion that won over T'Challa.\n\n\"A kingly gift,\" the Black Panther uttered with all the awe and reverence he could muster.\n\n\"Wait until you see the Mark III armor, I build for you, yes brother?\" Shuri growled excitedly.\n\n\"I believe that both of us will benefit from your gift Ghost Fire.\" T'Challa replied.\n\n\"You will indeed my King.\" Shuri stated lowering her head. \"You say the sand contains Vibranium and it came from your home. It further adds to the mystery and connection between the meteorite and the dark elves. What did you want me to do with the sand besides analyze it?\"\n\n\"I thought you might let your artistic side out. Perhaps a glass sculpture or the like. I leave it to you.\" I suggested and she kissed me again. \"I wish I could stay, but I have a hero to capture.\"\n\nI thanked them and left the embassy. T'Challa offered me one of the embassy's cars to drive me wherever I wanted to go. It was time to deal with Mr. Fantastic. I needed to make amends. I had the driver take me to May's house so I could have a place where I could meditate and ready myself for one hell of a fight. I knew Reed wasn't going to go down easy. The chauffer parked the limo and came around to open the door for me. I stepped out and she bowed holding out a business card for me to take.\n\n\"The King wishes you to know that our services are yours should you need us.\" She declared and then stood up straight. \"My number is on the back if you want to go out dancing... or something.\"\n\n\"I love to dance.\" I said and she blushed. \"Wish me luck.\"\n\n\"Good luck Ghost man.\" She purred.\n\nI watched her sashay back to the driver's side. I waved as the car pulled away. When I turned to knock on the front door it was already open, and a smiling May stood in the doorway.\n\n\"I'm sorry I didn't call ahead. I'm on a bit of a tight schedule.\" I explained and she gestured for me to come in.\n\n\"Is that the Ghost I hear?\" Mary Jane Watson hollered from the kitchen. \"Just the man I wanted to see.\"\n\n'Your pulse just jumped again.' Traci informed me with a sexy lilt in her voice. 'You really are insatiable.'\n\nMJ was wearing a slick looking business suit with a bright red power tie. She informed me that she happened to stop by and see if Peter was still in town. When I asked her about the suit, she did a slow turn and gleefully stated that she had just landed anchorperson at one of the news stations. That's when she asked about an on-air interview. I felt my mouth go dry and she laughed.\n\n\"Or I could just interview you here and send it to be published online as a podcast.\" She offered and how could I say no. \"You have no idea how popular you are now. After stopping Mordo you are the talk of the city.\"\n\n\"After the interview I need some down time. I have something important to put to rest.\" I said and looked at May. \"I thought here would be a great place to center myself. If...\"\n\n\"I am thrilled you feel comfortable enough to see this as a safe place.\" May wiped away a few tears as she spoke. \"My home is yours... my bed is yours too... if you need it. For sleeping of course.\"\n\n\"Of course,\" MJ laughed. \"I still haven't thanked you for saving me.\" She stated turning serious. \"I hated what I did... and Natasha is bragging that she already thanked you a few times.\"\n\n\"UM... shit! Tell you what. I need to get this thing settled.\" I stammered as MJ moved close. \"Oh, damn your eyes are so green!\" My voice nearly a whisper now as she slipped her arms around my neck.\n\nThe kiss was soft and gentle. My hands settled onto her hips and held her. My eyes shut on their own as the kiss deepened. Her ass cheeks had their own gravitational pull as my hands seemed to move of their own accord and cup them. MJ moaned into my mouth as I gave her ass a little squeeze.\n\n\"Damn, I needed to do that.\" She gasped as I opened my eyes. \"Come back safe and I'll show you a few things I learned from a Chinese contortionist a few years back.\"\n\n\"I am so coming back and wrecking you!\" I blurted out as she slipped from my grasp and left me standing there shaking. \n\nMay was sipping her drink grinning mischievously. If I smoked, I would have lit up after that kiss. MJ produced a digital recorder from her purse and batted her eyelashes at me. We settled around the kitchen table as she set down a piece of paper covered in her scrawl.",
        "\"Just a few questions so that the people of New York and beyond can get to know you a little better.\" She began and painlessly eased me into the interview.\n\nAfter it was all over MJ passed me the first business card from a recently printed stack. I read it over once before she snatched it back and scribbled her personal cell number on the back. I added it to that of the Wakandan driver. May placed a hand on my shoulder and told me the backyard was all mine. I stepped outside and let out a frustrated growl.\n\n\"I know that sound anywhere.\" A woman said. \"You aren't Peter.\" She stated as she stood up wiping sweat from her damp brow.\n\n\"Doing a bit of gardening?\" I asked seeing the hand trowel in her grip.\n\n\"Yeah. It is either that or... something not quite satisfying enough for all the effort.\" She said before introducing herself. \"I'm Helen.\"\n\n\"Danny.\" I said shaking hands with her.\n\nHelen was of average height, dark red hair with fiery highlights, and fierce brown eyes. I guessed her age to be in her late thirties or at most early forties. She had a slim athletic build and I saw why May found her so attractive with her girl next door good looks.\n\n\"Oh! You are that Danny! May speaks quite highly of you.\" Helen purred. \"You are her new man of the house. I love gingers!\"\n\n\"Helen!\" A man called from the back door of her house. \"Have you seen the remote?\"\n\n\"It is on the coffee table Bob!\" Helen growled as she turned to face him.\n\n\"Holy shit!\" I gasped softly seeing her ass. \"Sorry.\"\n\n\"Oh hey, you must be Dennis!\" Bob said waving from the doorway. \n\n\"It is Danny!\" Helen shouted as she wiggled her ass at me. \"He is May's new man.\"\n\nI winced when I realized half the neighborhood could hear this little exchange. Bob went back inside, and Helen spun around to face me her eyes wide with hunger and our gazes locked. I fought and succeeded in keeping the charming gaze from affecting her. \n\n\"You cursed when you saw my butt. Why?\" Helen whimpered. \n\n\"It is an incredible ass,\" I replied. \"I hate to say this... who is that?\"\n\nA tall leggy black-haired cutie stepped out of the back door. She came over to the fence and introduced herself as Vi, Helen's daughter. \n\n\"Hi, I'm Vi,\" She stated as the damn charm tried to go off again. Why did it keep doing that?\n\n'You are aroused, that triggers the effect.' Traci explained. 'You need to calm yourself before you entrance half the neighborhood.'\n\n\"I can't believe I am saying this. Can we hang out after I deal with Mr. Fantastic?\" I asked forcing myself to stay on target.\n\n\"What about Reed?\" Helen asked suddenly all business and focused.\n\n\"I believe he's been poisoned by spending too much time in the Negative Zone, why?\"\n\n\"I warned him! Damn it, I warned him!\" Helen cursed. \"I even told him about the Amazing Phazo.\" She frowned as she launched into the tragic end of a post war superhero. His power was dimensional travel. During one of his many experiments to document other realms he ran into the Negative Zone. \"Hold on, Vi be a dear and fetch me that autograph copy of 'Professor's Kelvin's Encyclopedia of Dimensions and Parallel Earths' will you.\"\n\n\"Sure mom,\" Vi said and turned to leave. I bit back a whimper when I caught sight of Vi's ass.\n\n'Calm.' Traci giggled. 'It is a nice butt.'\n\n\"How did you know Phazo?\" I asked to pass the time until Vi returned.\n\n\"We worked together we had a few rather impressive team ups.\" She said with a wink. \"He could create portals besides being a skill teleporter.\"\n\n\"When you say portals... you smiled. Why?\" I asked not expecting the reply I got.\n\n\"The cheeky devil would open a portal, have me bend over and bugger me from behind like a fiend.\" She said. \"Oh, you don't get it. He would open the other end of the portal so he could watch the faces I made. That was his kink after all.\"\n\n\"Sounded like yours too.\" I replied and she agreed. \"Sounds like you miss him.\"\n\n\"I'd give anything to just... never mind. Here's Vi.\" Helen said wistfully. \"Borrow it, bring it back and we'll talk about portals and such.\" She offered as Vi handed me the book.\n\n\"I wouldn't mind learning about portals too.\" Vi added with that same mischievous wink as her mother.\n\n\"The two of you eh.\" I stated. \"I can't wait.\"\n\n\"Neither can we,\" they said in one voice.\n\nThey returned to their home while I began hand to hand forms to take my mind off the pair. I looked at it as a martial version of a cold shower. If I didn't the entire neighborhood would hear the three of us going at it. \n\n\"I need to get my shit together.\" I muttered as I went through every combat form, I knew to help settle my nerves and focus my thoughts. \"Traci, are you online?\"\n\n\"Right here Ghost man.\" She purred as a hologram popped into existence from my wrist communicator. \"What do you think? I combined all the best parts including a healthy attempt at mimicking that MILF's incredible ass.\"\n\n\"Long dark hair, face is a nice touch of the original and elven flair, and yeah that ass is to die for. Great job!\" I praised her. \"Listen. I need one thing from you. I need you to keep Archimedes from stopping me. If he doesn't interfere neither do you. Also, keep him out of your head.\"\n\n\"I've already taken that into account. I have adopted some seriously cool protocols from that dark elf A.I. I'm more of a hybrid now. I believe I have rid myself of any backdoor action from either Reed or Archimedes. Of course, if you want some of that just whistle.\"\n\n\"I'll do that.\" I laughed as the hologram vanished.\n\nI waited until nightfall. I sat meditating when the rush of power hit me as the sun set. Being a daywalker was fine but I was strongest while darkness reigned. I opened my eyes breaking my meditation. I clenched my fist and hoped I was strong enough. If I failed, Reed would only grow worse. I sensed the stealth drone's arrival. Shuri had worked nonstop on my new weapon. I took the small cylinder from the craft's claws. I was about the same length and diameter of a lightsaber. I did like the dark elf runes on the exterior. The drone rose but didn't leave immediately.\n\n\"Well? Give it a go.\" Shuri's anxious voice was clear and curious.\n\nI found the activation stud and pressed it. The staff unfolded silently at its heart the jewel from the statuette. I held it in the palm of my hand and found its balance point. I launched into the eighth form of combat I had just learned from the Sith Justicar. I threw myself into its embrace and found peace and assurance. With a growl of accomplishment, I finished the first series. I told Shuri that her gift was perfect.\n\n\"Ghost man?\" Shuri called out. \"What do those character's mean?\"\n\n\"Phonetically they read Shuri's Pride, but in the dark elven tongue that say that which strikes silently. It is a rough translation.\" I told her and she let out a soft satisfied purr.\n\n\"I approve.\" She replied as the drone flew off. \n\nI touched the deactivation stud and placed the folded weapon on my hip. It was time to get his attention. I closed my eyes and reached through the shadows and touched the Baxter Building. The shift was instantaneous. I stood in the alley where I had first spotted MJ and smiled at the pleasant memory. Here is where it all began. \n\n\"Once more onto the breech.\" I whispered and reached out a second time.\n\nThe alarms announced my presence. I hopped from room to room until I had Reed's undivided attention. I ended my little romp on the roof. I sent the ready signal to Morya aboard the newly christened Ghost Dancer in geostationary orbit above me. I liked the name and once I subdued Mr. Fantastic, they would teleport him straight to the freezing tube. Reed took his time and when he appeared, he was alone.\n\n\"Ben not with you?\" I asked.\n\n\"He quit.\" Reed growled. \"So, where are they?\" He asked and then yelled. \"I know you are here! Come on out!\"\n\n\"Who the hell are you talking to, it is just me.\" I said.\n\n\"Where are Susan and Jennifer?\" He asked his eyes narrowing.\n\n\"I have no fucking clue. Archimedes tricked me into the zone, it took forever to find a way back, and here I am.\" I said as cool as I could.\n\n\"What do you mean you don't know?!\" He shouted as his anger grew. \"You were supposed to find and rescue them! You were supposed to fail. I was scheduled to go in tomorrow at exactly five in the morning and save all of you! How the fuck did you get out?!\"\n\n\"I found a giant stone cube and stole a ship. I was able to open a portal and escape before the place self-destructed.\" I stated with enough truth to make it believable.\n\n\"Self-destructed... but... how did you get close enough to get in?\" He asked his thoughts about Susan forgotten for the moment.\n\n\"I'm dark elf, it let me in.\" I stated as I revealed my real face to him and watched the shock spread slowly across his features. \"I even got a trophy.\" I said holding up the dagger.\n\n\"Where is Susan?\" Reed finally circled back. \"I asked you a fucking question. Where is she?\"\n\n\"I... don't... know.\" I growled displaying just a little anger. \"She was your wife.\" I snarled choosing the past tense deliberately.\n\n\"Was!\" Reed roared as his temper worsened.\n\n\"She wouldn't have fucked me if...\" I began when he slugged me forcing me back a few steps. \"Not bad for an old man.\" I said rubbing my jaw.\n\n\"I don't have time for you!\" He shouted as he turned to leave.\n\n\"Time. How long has it been for them? Let me check, ooh, it has been nearly two days out here. That must be almost two years there.\" I stated as I estimated our actual time in the Zone at roughly seven months. \"I'm sure they are okay. They are clever...\"\n\n\"Stop!\" Reed screamed as he fell to his knees. \"Shut up!\" He wept as a strange ruddy radiance spilled from his eyes and mouth. \"I didn't kill her!\" His voice taking on a queer otherworldly quality now. \"It is all your fault!\" He declared the light now seeping from every portion of exposed skin. \"I'll destroy you!\" \n\nThe roofing material began to sputter, spark, and smolder. His arteries and veins began to pop and glow giving him an almost demonic quality. I hadn't planned on this. It was going to be a bitch of a fight before this complication. I cursed as I dodged his next attack. I felt the heat radiating off his fist and glad it had missed. I tried slamming him backward with a telekinetic blast but damn it all if his body didn't simply absorb it and roll off him like water off a duck's back. \n\n\"Fault!\" He rumbled being less and less coherent as the power took him over.\n\n\"I don't want to hurt you.\" I said but he was beyond reason.\n\n\"Kill! Destroy!!\" The voice was no longer human.\n\nI was on the defensive and kept up a forcefield as I did my best to dodge until I came up with a new plan. The thing that had once been Reed Richards wailed like a host of lost souls. The sound was so loud neither of us heard his approach. The motorcycle launched upwards from the side of the Baxter Building and landed between me and Reed it's rear tire sliding towards me. I recognized the figure of the Ghost Rider instantly. The flaming skull atop the leather clad rider was enough to throw fear into anyone especially the wicked and evil doers.\n\n\"Don't kill him!\" I yelled. \"It isn't his fault. He's ill. Please!\" I begged.\n\n\"Kill!\" Reed shrieked.\n\n\"He doesn't seem to agree with you.\" Ghost Rider chuckled as he yanked the chain wrapped around his chest.\n\nReed's attention focused on the newcomer. I wasn't sure what to do and I hated it. The only thing I could do was draw my new weapon and activate it. Ghost Rider's chain erupted with flame and lashed out in a whip like arc through the air. Reed avoided it and hissed when it brushed against him for the briefest of moments. The spot where it touched no longer glowed. Seeing that his chain affected Reed the Rider let out a demonic cackle.\n\n\"Spawn of evil, you will be sent screaming back to hell.\" The Rider growled as Reed lashed out in his blind rage.\n\n\"He's been poisoned by energy from the Negative Zone.\" I explained. \"It has corrupted him.\"\n\nReed or whatever was inside of him responded by firing a gout of hellfire from his mouth in my direction. My shield turned it aside and that angered it even more. The Rider moved so that Reed was between us and his motorcycle placed itself out of the battle. Reed had to choose who to attack. He couldn't possibly catch both of us with one action. I did the only thing I could think of to help the Rider.\n\n\"Your wife has the tightest ass this side of...\" I began and Reed let out a steady stream of hell fire and I was forced to dodge the blast. Unfortunately, the attack struck the massive satellite dish array that was fixed and mounted to the top of the building. The steel mounting melted like butter under the assault and the whole thing began to slide off. I cursed as I used my web shooters to anchor it to anything that looked like it might hold the load of that much weight. Ten lines later and it no longer shifted. I was so caught up that I missed Reed and the Rider fighting. I turned to see the Rider's chain wrapped around one of Reed's arms. Reed was screaming in anguish as sparks and smoke gushed off the area touched by the flaming links.\n\n\"I can't hold him.\" The Rider called out.\n\nBefore I could react one of Reed's fist lashed out and struck the Rider in the chest sending him head over heels off the side of the building. I sent a strand of webbing that connected, and I was able to lock my legs and pull. I spun on my axis with the Rider soaring through the air and back onto the roof. He howled in rage as I aimed him at Reed like a demonic missile. The Rider and Reed collided and sent the two of them crashing through the roof and into Reed's main lab. I followed and tried to avoid hell fire and flaming fists as I dove after them.\n\n\"Kill!\" The Reed Thing roared as a fiery aura formed around him.\n\nI brought the Vibranium battle staff into a ready position and waited for my opening. Reed sent the Rider staggering back and before he could defend, I struck out. The barrage of attacks sent the thing that had been Reed into a rage, and it roared as I pummeled the shit out of him. Sadly, Reed's power of stretching gave him an inhuman resiliency and while I landed over a dozen attacks, they did little real damage. \n\n\"What did you do to piss him off like this?\" The Rider asked as we remained on opposite sides of Reed.\n\n\"I fucked his wife in the ass,\" I replied, and Reed lashed out at me and I went on the defensive. I spun the staff like a fan blade in front of me and the Rider attacked. \"I also fucked her twin sister at the same time.\" I chuckled so that Reed would stay focused on me. \"Man, she had a sweet ass!\" I said reinforcing the past tense in Reed's mind.\n\n\"KILL!\" Reed roared as the Rider's chain wrapped around his waist. \"AHH!!\" He shrieked and tore at the chain around him.\n\n\"I can't hold him!\" The Rider hollered a second time as Reed freed himself.\n\n\"I can!\" I laughed nervously as I drew on my shadow abilities and formed a pool of darkness below Reed. Reed sunk into it as if it were quicksand. I locked him in when his waist hit the surface of the portal. \"Hurry! I can't hold him for long!\"\n\nThe chain was wrapped around Reed's chest as a massive pulse of power raced down the links towards Reed. Mr. Fantastic screeched. I clapped my hands over my ears. That sound wasn't for the faint of heart. I found myself crying as a host of the lost wailed and begged for mercy and forgiveness. Reed's body dimmed as the last of the dark energy was purged.\n\n\"NOW!\" I ordered and the teleport beam snatched Reed out of the Rider's grasp and the empty chain fell to the floor. \"We'll take him from here.\" I said as I faced the Rider alone.\n\n\"You would rob me of my prey?!\" He growled as we closed ranks. It was time to face the Rider's gaze.\n\n\"I would. Reed is a good man.\" I stated locking eyes with the sockets of the flaming skull. I was held fast just as I had in the Negative Zone by the Svartalfar A.I. when it blasted my body. My body began to smoke, and I wept. \"I have no regrets this day.\" I said the words stammering from my lips.\n\n\"Tears... bloody tears... the city is full of evil but not here.\" He said. \"Maybe next time daywalker.\"\n\nI staggered back as I was released. My knees buckled and they hit the broken glass and debris. I had survived! I heard his motorcycle roar to life above us. I spied its flaming wheels first as it flew down into the shattered remnants of the lab. He straddled his motorcycle and the engine revved. With a practiced gesture the Rider slung his chain around his chest, gripped the handlebars of his bike and pulled it up into a wheelie. With an ear-splitting cry, the Ghost Rider launched his bike into the air and off the side of the skyscraper.\n\n\"Now that's how you do an epic fucking exit!\" I declared. \"Damn, that was cool!\"\n\n'Your HUD is buzzing lover!' Traci purred in my ear. \n\nI looked over the experience and trophies I had earned. I think I liked Staring Down the Devil the most. I whistled and the teleport beam snatched me up and I joined the crew of the Ghost Dancer. Reed looked at peace inside the cryo tube. He looked so young. Susan's hand caressed the icy surface of the cylinder.\n\n\"You still love him.\" I said and she nodded. \"I understand.\"\n\n\"You are an idiot.\" Jennifer declared frowning at me.\n\n\"Huh?\" I blurted out.\n\n\"I love him, but he'll never change.\" Susan said blinking away the tears. \"I will always come second to his work. I can't live like that. With you the worst case is that you are busy fucking some other gorgeous woman. I wait a day or two and boom, I am screaming like a banshee. You think I am going to pass that up? Hell no!\"\n\n\"You are stuck with us.\" Jennifer laughed.\n\n\"I wouldn't ever call it that.\" I chuckled. \"Time for phase two, Shuri?\"\n\n\"Ghost man,\" Shuri replied over the commlink. \"How did your smash and grab go?\"\n\n\"Reed is on ice. Can you help him?\" I asked and she answered honestly.\n\n\"I can only do my best. I cannot promise a miracle. If it is within my capable hands he'll pull through.\" She said. \"Speaking of in my capable hands... what are you doing tonight?\"\n\n\"See.\" Susan laughed. \"Park us over the Wakandan Embassy.\"\n\n\"As you wish.\" Morya replied with a naughty wink. \"I hear that weightless sex is quite popular.\"\n\n\"Ooh!\" Jennifer chuckled as she clapped her hands together. \"What do you say sis?\"\n\n\"Ground control to Major Tom?\" Susan suggested. \"We can add that to the playbook.\"\n\nMandatory Break:\n\nI was walking towards the embassy when my HUD alerted me. \n\n'Mandatory Break. Scene paused. Prepare for extraction.'\n\nI emerged from the game. I removed the eyewear and slowly sat up. The dizziness wasn't so bad this time around. I let me feet touch the floor and leaned against the bed for a little while. Once my head was clear I headed straight for my room's mirror. I tugged off my shirt and checked out my reflection.\n\n\"Damn, not bad.\" I commented at the new man I had become. \"If this could work for others like me, it beats the hell out of going to the gym.\"\n\n\"My thoughts exactly.\" Kat Shaw said from behind me. \"Would you join me for dinner?\"\n\n\"I'm starved.\" I replied as I turned and saw the little black dress she was wearing. \"I am a little under dressed.\"\n\n\"Actually, I'm the one overdressed. I just left a charity benefit.\" She replied. \"Follow me so I can change into something less clingy. Don't pout.\"\n\nI put my shirt back on and we took the elevator to the penthouse. It was one of several she owned worldwide. I opened a bottle of wine while she showered. It was impossible to hide my erection poking against my sweatpants. Bad time to go commando in front of the boss lady. \n\n\"Booker?! Wine me!\" Kat called out from the bathroom. I poured a glass and walked in. Her hand protruded from a crack in the sliding glass door. \"Thank you.\" She giggled as she accepted the glass. \"MMMM... excellent year.\" She said as I turned to leave. \"I knew it!\" She purred and I turned my head to see hers poking out of the shower. \"I got you excited.\"",
        "\"Permission to speak freely.\" I asked and she winked at me as I turned to face her. \"Duh! A gorgeous woman gets naked in her shower and you wonder why I am sporting wood.\"\n\n\"Damn it all,\" Kat cursed. \"If I invite you into the shower that might be looked at as sexual harassment. I could temporarily fire you and then rehire you after.\"\n\n\"Mistress?\" A voice called out and I felt it in my head.\n\n\"Who the hell is that?\" I exclaimed and Kat's expression grew intensely surprised.\n\n\"You can hear her, in your head?\" Kat asked and I nodded. \"What is it Nox?\"\n\n\"I was about to warn you that I had detected another unnamed user on your private network.\" Nox replied. \"I have to assume it is Mister Booker.\"\n\n\"Yes. Is dinner ready?\" Kat asked changing the subject. \"We will be dining on the roof.\"\n\nI reluctantly left the bathroom so Kat could finish her shower in peace. Nox showed me to the roof so I could enjoy the open air and the excellent view of the city. I stood on the edge and looked out. Before the game I would have been shitting bricks. I had a terror of heights. I looked down and not a hint of vertigo or fear. \n\n\"I wonder.\" I whispered.\n\nI walked to the helipad and took up a ready stance. I launched into the eighth form of combat and seamlessly performed every move flawlessly. I shouted in triumph and turned when I heard Kat clapping. Gone was the little black dress, stiletto heels, and perfectly coifed hair. She was now dressed in jeans, a loose-fitting sweatshirt, and her hair down and plastered to the back of her shirt. She gestured and I joined her at one of the pool side tables. When had dinner been brought out? I didn't remember seeing those dishes when I first got here. Maybe I just didn't notice.\n\n\"How are you enjoying yourself?\" She asked as she lifted the metal dome over her plate.\n\n\"So many interesting characters and storylines. I am looking forward to Latveria.\" I said as I cut my steak.\n\n\"Remember, when I bought out Disney, I got all of their intellectual properties.\" She reminded me with a wicked smile. I knew she was hinting at something in the game that might not be Marvel or Star Wars related. There was so much that she might have added, and I looked forward to uncovering. \"I hope the Negative Zone wasn't too intense.\"\n\n\"I will admit, it was a bit unnerving in between the watch tower and that giant cube.\" I shared. \"It never became too much though.\"\n\n\"What is it?\" Kat asked seeing my mood dip.\n\n\"Nothing.\" I said a little too intently. \"Sorry. It is just a game. Damn it, I am still a little miffed about losing my lightsaber. I am just a little surprised I could lose it is all.\"\n\n\"Ah,\" She said nodding. \"The game is a bit more realistic in some ways. The loss of your namesake is one of them. We might change it down the road though. It wouldn't be fair or fun if I intervened.\" \n\n\"No! Don't! I plan on getting it back on my own if I am able.\" I told her. \"I will retrieve the Ghost Fire and Dark Saber gems if it is humanly possible.\"\n\n\"I have no doubts.\" She replied smiling now. \"How's the steak?\"\n\nWe finished dinner when an alert hit her A.I. and I had to leave. While I knew that she had received a message when a brief signal came across my own field of vision, I couldn't access it though. A kiss on the cheek a promise of something more perhaps. I took the elevator down to the sublevel. The elevator stopped abruptly and when the doors opened red emergency lights illuminated the hall.\n\n\"What the hell?\"\n\nI slipped into a gamer's mindset. I dropped to a crouch and crept forward. The poor illumination gave me some shadows to hide in. I went directly to my room but found an emergency door barring me from entry. I stood and looked through the bullet proof glass. Someone was on my bed using my gear to access the game. Fuck you buddy! I closed my eyes and tried to access Nox. What was going on and who was this asshole? He couldn't be alone. \n\n'Nox?'\n\n'User Booker. What can I do for you?' She replied.\n\n'What is the status of gaming stations. Who is accessing my character?' I asked and there was a long pause.\n\n'Transferring you. One moment please.' Nox stated. 'I have contacted the only one that can aid you.'\n\n'Hello sexy!' Traci chimed in cheerily. 'What is going on?'\n\n\"Traci? Listen, I am not piloting Ghost right now.' I practically screamed. \n\n'I know. A girl can tell these things.' She purred. 'He is paralyzed now. I can't help you on your end though.'\n\n'I'll see what I can do here.' I sent smiling.\n\n'Nox, what is going on?' I called out.\n\n'User Booker.' Nox replied and then a short pause. 'The Mistress has given you access to security privileges. There appears to be a breach, accessing cameras and thermal sensors. Reestablishing connection.'\n\n'Reestablishing? Did they cut you out?' I asked. 'Can you open the emergency door?' \n\n'I am working on the damage they have created.' Nox growled.\n\nI heard gunfire and that startled the hell out of me. There were voices. Some of them screaming and shouting and others barking orders. My name was mentioned, and I looked for the deepest shadow to hide in. I took off my shoes so I could move as quietly as possible. My adrenalin was pumping as I crept towards the voices.\n\n\"Who the hell are you? Why are you here?\" One of the male gamers asked. I didn't remember his name.\n\n\"Numenor falls today!\" One of the men shouted. \"The game is tied directly to their central hub. We have it on good authority that Booker's character is the key. Our best hacker is in there and soon the entirety of this godless corporation's secrets will be ours.\"\n\nCorporate espionage? It was like the stone cube in the Negative Zone. Someone was playing up their part too much. Then it hit me, what if I never left the game? What if this was a test scenario for another game? If that was the case I should check and see if my abilities still worked. I tried to pull down my HUD, but nothing happened. That didn't prove anything though. This one might not have that kind of interface. What was real anymore? I fought down a sense of panic at the thought of going mad. Roll with it I thought and continued. I sat and closed my eyes. I tried to reach for the shadows and wrap them around myself. It was damn hard at first but slowly I felt the power coursing through me. I opened my eyes and it had worked. Great! I brought my hands close to one another with palms facing. Just like with the shadows it was damn near impossible but after a while I had a steady stream of energy arcing between them. I just had to catch them off guard and take them out one at a time.\n\nMy heart was thudding in my ears and it damn near drowned out everything else. Calm yourself I repeated until I was back in the groove. I was clear headed and focused. Using the thermal sensors, I tracked them down one by one. The first bad guy went down like a sack of bricks. I hit him with enough power to piss himself. I took his weapon and half expected to see made in Latveria. It didn't, it was a Remington. The next three guards took a combination of electrical attacks and martial arts to take them out. I was quickly running out of juice. I saved it for the cinematic finish or boss fight. By the time I reached the room where they were holding the hostages, they had taken Kat a prisoner. I watched, listened, and waited.\n\n\"What is taking so long?\" The gentleman I took as the second in command snapped impatiently.\n\n\"Let's find out, he's been in there long enough to clean out all of their dirty little secrets.\" The boss declared. The tall thin man wore Numenor coveralls with a nametag that read Mark. \"Gary... Gary... what is taking so damn long?!\" He growled into his smart phone.\n\n\"The damn personal A.I. has me locked out. This bitch Traci won't let me move an inch.\" Gary replied clearly exasperated. That's my girl I thought as he continued. \"There is nothing in the programming about players having their own fucking A.I.s! Let me jump out and try one of the other characters!\"\n\n\"Fine! Hurry up!\" The boss ordered. \"Who is this Booker guy anyway?\" He asked turning to face Kat.\n\n\"He is just a play tester. He answered the ad just like everyone else here.\" Kat said with a smile. \"Look him up all you want. He is a nobody. I took pity on the poor schlep and gave him a job. So, sue me.\"\n\n\"Speaking of Booker, where the hell is he?\" The second in command asked.\n\nAs he used his smart phone to call to his men, I spied what I needed on one of the tables, an open bottle of water. The lid was next to the bottle leaving it for me to use. It took the last remaining energy I had, but I slowly walked the bottle to the edge of the table. Two of the play testers and Kat saw it and their eyes widened in shock. As number two grew more and more anxious I tipped the bottle over and the water puddled at the feet of the two bad guys. I didn't have much energy left in me, but I had to try and at least stun them long enough to close ranks before anyone was shot.\n\n\"What the...\" The boss began to say as he looked down and then behind him. I fired off the bolt of lightning at their feet and it wasn't until he felt the effects that his face registered anything being wrong. \"...fuck?\" I dashed forward as they stood transfixed by the electrical current passing through their bodies. I throat punched the leader and kicked his number two in the balls. While the boss gagged and grabbed his neck and the other dude folded, I finished up with two satisfying Atemi strikes rendering them unconscious.\n\n\"Must dash!\" I said and raced out to catch up with the hacker. \n\nIf I was going to finish the mission, I needed to take him out as well. I had just cleared the room when the sound of a smoke grenade going off behind me caught my attention. The cloud of purple smoke rendered everyone unconscious. They were safe and asleep. I checked the other rooms and found the hacker. He had just hotwired one of the emergency doors and was entering one of the other play tester's rooms. I body slammed him. Funny how with all that training and I tackled him. \n\n\"Booker!\" He called out as he drew a lethal looking double-edged knife. He thrust with it and that's when the training paid off. I side stepped the thrust, grabbed his wrist, and pulled him off balance. As he stumbled forward, I swapped hands and held his wrist with my right hand and rewarded the hacker with a rigid knife hand to the throat. I hit him too hard. I felt his windpipe crunch under the attack, and he went down gasping for air. I kicked the knife away and waited for the scene to end. It didn't. I watched his face turn blue and after a minute he quit breathing.\n\n\"Shit! That was a little too real.\" \n\nI returned to the cafeteria and found the others waking from the short-term effects of the gas. I stripped the shoelaces from the bad guys shoes and used it to tie up the villains. Kat and the others looked woozy and confused. \n\n\"Hey, are you okay?\" I asked Kat as she got to her feet.\n\n\"Yeah... What is going on?\" Kat asked seeing the two prone men on the floor. \"Who the hell are they? I don't remember inviting them. Hell, I don't remember how I got here. Last thing I recall is being in the shower.\" She said as Numenor security arrived armed to the teeth. \"Shit! You scared the hell out of me!\"\n\n\"Sorry Ms. Shaw.\" The head of her private security force announced. \"Remain here please. The rest of my men are doing a complete sweep of the area.\"\n\nHe questioned everyone and it became clear the gas had taken out the last hour or so of their short-term memory. Who had thrown the grenade though? Numenor security took away the bad guys. They didn't know what had happened. The bad guys had locked out all security measures and sensors.\n\n\"I want a full analysis of what happened!\" Kat growled at her head of security.\n\n\"Yes Ma'am!\" She replied. \"We do have one casualty. He was dead when we arrived.\" She continued and they both looked at me.\n\n\"Booker?\" Kat asked as the normal lights kicked back in.\n\n\"He had a knife.\" I said and the head of security confirmed this. \n\n\"What happened?\" She queried with an unreadable expression. \"I know you were only defending yourself. The report will clearly show that.\"\n\n\"What happened to me? Do you know?\" I asked and she smiled even as tears filled those lovely eyes of hers.\n\n\"Nick.\" I stated and nodded as she sobbed.\n\n\"Happening.\" She corrected me. \"Nick's last hurrah.\"\n\n\"How did he die?\" I asked. \"The papers never went into any detail. All that was mentioned was a lingering illness.\"\n\n\"Yes. He suffered from chronic headaches, pain spikes, and seizures. Even that didn't stop him.\" She stated with a small smile on her lips. \"He tried and failed to download himself into a private crystal server. A massive seizure killed him.\"\n\n\"Who else is down here?\" I asked the head of security.\n\n\"No one, we didn't breach the security lockdown until recently.\" She said. \"All of the players and staff are accounted for. Why?\"\n\n\"Yes why?\" Kat asked with a raised eyebrow.\n\n\"When I went after the hacker someone tossed a smoke grenade into the room with the hostages.\" I said yawning.\n\n\"Smoke, what color was the smoke?\" Kat asked her voice intent.\n\n\"Purple.\" I said and she made a face. \"What?\"\n\n\"It is a nontoxic crowd control device we are still developing.\" She said her face looking more contemplative now. \"How?\"\n\n\"I am exhausted.\" I yawned again.\n\n\"Get some rest.\" Kat ordered and while she appeared okay with how things had turned out her expression was a mix of concern, curiosity, and surprise.\n\nI returned to my room only to find it taped off as a crime scene. One of the security personnel spotted me and showed to my new room. My belongings had already been moved. I thanked her and closed the door behind her. I stripped down, crawled under the sheets, and fell asleep. My dreams were strange and troubled. I was at a loss as to whether I was still in the game or not. My thoughts were on the events after I logged out and spent time with Kat. Who threw the smoke grenade? Security stated that every person had been accounted for. What if it hadn't been a person? What if it was in fact a Numenor Protector? They had been producing security robots for a decade. What if one of them had been ordered to go to another sublevel where research was being done and grabbed a grenade to knock out any intruders? \n\nOut of the depths of my dream stepped one of the robots. It was brightly colored and nonthreatening. Even its expression, which was very human, was friendly and reassuring. The dream dove into the depths of the robot. My perception went under the armored exoskeleton to the intricate workings beneath. The light alloy skeleton below with its artificial muscles and complex sensors made it the closest thing to humanity coming off the production line. The dream continued as I swam through every major components of the robot until I knew it intimately well. Had I somehow tied into Nox subconsciously and given access to these files? I was still dealing with whether or not what had occurred was real or a simulation. If it was a simulation, then the things I did were just a matter of programming. If it hadn't been part of the game, then I didn't want to think about it. Insanity lie that way.\n\nWhen I awoke, I was standing outside the Wakandan embassy. It was official mind fuck ultra achieved. \n\nLatveria or Bust:\n\nI checked my HUD for trophies or rewards for the extra scenario and didn't find any. I chalked it up to bonus action for the sake of play testing. Either way, one hell of a romp! Reed had been taken into the Wakandan embassy for treatment. Between Shuri and her trusted technicians I had the highest hope of his recovery. While Susan and Jennifer rebuilt Reed's damaged labs Morya and I spent time at the Wakandan embassy. I had the great delight to pass off the data Traci had collected about Dark Elf technology. Once the language files had been decoded and assimilated Shuri and I were having entire conversations in the dark elf tongue. I watched as she dismantled the three sets of Svartalfar armor and examine their construction, materials, and beauty. It inspired her to craft the Mark III armor for me and T'Challa. I noted how she kept an overall feline theme with his suit while mine fit my combat and stealth ideals perfectly.\n\n\"While you wait, I wrote a training program for you.\" Shuri purred. \"My brother allowed me to give you access to his training facilities here at the embassy. It is well known your web slinging skills are... less than amazing. I will contact you once I have finished. Go have fun. Morya has agreed to help me if I stumble.\"\n\n\"Go Master,\" Morya said and I saw a glint in Shuri's eyes. Was that jealousy or hunger? Had Susan and Jennifer been talking?\n\nI went down to the trainer and Traci helped me plug into it. Once I was connected, I heard Peter Parker's voice walk me through the basics of form, movement, and what to look out for. I started at level one and threw myself into the virtual environment. Once more I had that Inception feel as I perambulated through the skyscrapers of New York City. I progressed to level five by the time Shuri called me for a break. She gave me a preview of my new armor and I looked forward to her finishing it. \n\n\"Darkforce.\" Shuri muttered as she munched on a salad. \"One of your scans leads me to believe you can tap into it and the Lightforce to create a new or perhaps a yet unknown power, the Shadowforce.\"\n\n\"Really.\" I exclaimed surprised by her interest in my skills.\n\n\"Yes Master,\" Morya eagerly declared. \"Before the universe changed the Old Ones were able to tap into the primal force and shape it as they saw fit. I explained that to the Princess.\"\n\n\"Thank you Morya for being so helpful.\" I praised her and she beamed happily. \"Let's see.\" I stated as I raised my left hand and imagined a basic dagger shaped object. My hand glowed brilliantly and a 'light dagger' formed. I did the same thing with my right hand and a black nonreflective dagger formed. I brought my hands together and a shadowy sword manifested. \"Look at you, right again.\"\n\n\"Was there any doubt Ghost man?\" Shuri giggled. \"Master of the Shadowforce!\"\n\n\"I like the sound of that,\" Morya said proudly. \"How goes your training Sir?\"\n\n\"I've worked my way up to level five. It is slow going and I am more of a glider than a swinger.\" I laughed. \"I'll keep up on it. How goes the translation process?\"\n\n\"Slow. I have gotten some of the basics down, but it will take a long time to find a correlation between what I know and their technology. It is exciting though. I'll pass on anything I learn if you want. It is the least I can do.\" Shuri offered.\n\n\"Um... sure.\" I said unsure on my ability to grasp the simplest of the dark elf technologies. \"I'll give it a try.\" I stated loving the look in her eyes and that fiery expression that the challenge of learning a whole new technology inspired in Shuri.\n\nI modeled the Mark III prototype for them and Morya especially like the lines and curves. I liked the maneuverability it provided without losing any protection. Shuri took some mental notes and made some final minor adjustments. I asked to see the new Black Panther suit, but she clucked her tongue and informed me that she promised the King that he would be the first to see it. I accepted her reasons and managed to talk her into taking a break which lasted until morning. \n\nShuri cried out and lay atop me panting and covered in sweat.\n\n\"That was a good one!\" She gasped.\n\n\"They were all good ones.\" I added and she blushed. \"Princess Insatiable.\"\n\n\"I blame you.\" She stated with a critical glance. \"If you weren't so damn eager to please me, I wouldn't be so enthralled. Ooh!\" She cried out suddenly. I thought she was ready for another go, but I was wrong. \"I made a breakthrough with your people's deliciously sophisticated technology.\"",
        "\"When?\" I asked and she blushed. \"Well.\"\n\n\"Somewhere between reverse cowgirl and tiger style.\" She purred as she touched her ever present bracelet. \"It appears your people developed a relationship between themselves and dark matter. It is one of the cornerstones to their technology. They could interact with it and make it do their bidding. I think I've cracked the first step in that process. See.\" She pointed it out keeping her promise. It was still way over my head, but I paid attention. Who knew, maybe one day I might figure it out. \"It is elegant and beautiful,\" she was saying as I imagined clouds of dark matter drifting and then coalescing into shapes on the whim of the Old Ones.\n\n\"Process complete!\" Her bracelet chimed.\n\n\"You armor is done.\" Shuri smiled and snuggled. \"Sleep now... armor later.\"\n\n\"I got you,\" I told her as I slid my arm around her. \"Sleep.\"\n\nI meditated and watched her sleep. I began to see why the Svaltalfar wanted to return the world back to chaos. They had been like gods. Reality bent to their collective will. That had to be intoxicating and addictive. Your merest whim became real. They must have felt betrayed by the universe itself when the first starburst into existence. Had they tried to snuff it out? When was the moment when they realized they couldn't stop it? Maybe it was well that the cube self-destructed and wiped the sleepers out. Tens of thousands dark elves would be a terrible force to deal with. \n\nShe woke around noon. We ate and were off to her lab even before the dishes had been cleared. Shuri took the necklace and slipped it around my neck. She had taken from the dagger's design and applied it to the armor. Once it was secured, I felt the mental click as Traci and the armor synced. All I had to do was think armor up and the pure vibranium weave flowed over my body like liquid shadow. The wicked looking Vibranium claws surprised me but were welcome. I was able to withdraw them with a mental command. I thought about street clothes and the armor was gone just as quickly.\n\n\"I love it.\" I told her and she clapped her hands.\n\n\"Back to training. Your web slinging skills need work. Your staff needs tweaking. Give.\" She giggled as she stuck out her hand.\n\nIt was useless to argue with her. I handed over the staff and returned to training. She wouldn't let me leave the embassy until I had reached at least level ten with web slinging. I could have guests though. Susan and Jennifer stopped by often to check on Reed's progress as well as mine. All of us were treated for our exposure to the Negative Zone. None of us were as compromised as Reed had been. I suspected that was the real reason for Shuri's demand that I stay close. It took a month to reach all the goals expected of me. My body was finally flushed of the last of the negative energy, I reached level ten on the trainer, and the final tweaks on my staff were finished.\n\nSusan and Jennifer were true to their word and let me help them recover from their time in the Negative Zone. In the meantime, I was plotting and planning my entry into Latveria. The borders were still closed as the situation grew direr by the week. I got as much information about Latveria that I could from the Storm Sisters. Of all the outsiders to visit that country they were by far the best informed from personal experience. When it became clear that I was planning an entry into Doom's stronghold they agreed to help but refused to enter Latveria itself.\n\n\"I'm sorry Ghost,\" Susan stammered her lower lip quivering. \"I can't face that monster again.\"\n\n\"I would never ask you to do anything you didn't feel comfortable with.\" I told her. \"Besides, I planned on this being a solo mission from the start.\"\n\n\"While you are gone, we have our own tasks to perform,\" Jennifer winked at Susan. \"Don't we?\"\n\n\"Yes!\" Susan responded almost upbeat. \"We do indeed!\"\n\nI kissed them goodbye and went on my second fact finding mission for my trip to Latveria. I went to the Bar with No Name to ask any of the clientele what they knew about Doctor Doom and Latveria. I figured some of them had to have worked for him at one time or another. I took a cab to the nameless alley and there was a line waiting to get into the bar. Many of the men in line were no named thugs but in the middle of the line was none other than the Rhino himself. Aleksei Sytsevich stood out in any crowd with his dull gray body armor and trademark horns, but he like most of the other men was all smiles.\n\n\"Can I get an autograph?\" I called out to the Rhino. He snarled at first and then spied me and smiled.\n\n\"Holy Shit!\" He cursed in his heavy Eastern European accent. \"It is the Ghost Fire! Come Comrade Ghost, join me and we will exchange pleasantries!\"\n\nThe others not only didn't complain but let us move to the head of the line. I shook Aleksei's hand and damn he had a grip like steel. We had just began speaking when I noticed his expression change and I looked over my shoulder. The line of thugs parted, and a cute blonde raced down the alley and leapt into Rhino's arms. He caught her and held her at arm's length as if she were an annoying kitten. She was cute as hell in those short denim shorts and what passed for a t-shirt. It wasn't so much that the shirt was damaged or anything. There just wasn't much of it compared to her ample breasts.\n\n\"Koli, this is my friend Ghost Fire.\" Aleksei introduced me to the young lady. \"Ghost, this is Koli Gradut, she's a professional fan.\" \n\n\"Ghost Fire! I am a huge fan.\" She said and my eyes went to her impressive breasts and noticeable nipples poking against the material.\n\n\"Behave yourself Koli,\" Rhino grumbled. \n\n\"I've never heard of professional fans,\" I said and looked above her head where two numbers the green number read twelve and the red number was nearly two hundred. \"How did you find out she was a pro?\" I asked as I tried to figure her out. \n\nThe green number was the last time she got laid in days. The red ones must be her notoriety score. I looked above the Rhino's head and he only had a green number. Was Koli another player or a special NPC? I'd never run into either before. Was her notoriety score a match for her annoyance factor or something else?\n\n\"So, where did you two meet?\" I asked and Rhino had to think about it, she didn't.\n\nKoli began to recite the exact moment like it was gospel. When she began talking about the first time, she sucked him off it got weird and she never got the hint to shut the hell up. So, when the doorman appeared and asked for the password, we jumped at the chance to get inside.\n\n\"Password?\"\n\n\"That's what she said!\" I responded and Rhino, Koli, and I entered the packed club. \"Wow, it is crowded as all hell! Why?\"\n\n\"You do not know.\" The Rhino chuckled. \"Then I will not spoil the surprise.\" He continued raising his voice to anyone within earshot. \"If anyone else spoils the surprise I will take it quite personally!\"\n\n\"Thanks, Aleksei!\" I said. \"I will buy the first round.\"\n\n\"I will accept, my usual table.\" He demanded and we were shown to one of the centermost tables. A mock stage was next to it and it seemed the center of everyone's attention. Someone was already seated at Rhino's table and I was shocked to see Howard the Duck again.\n\n\"Howard!\" I called out. \"How the hell are you doing?\"\n\n\"Not bad kid, not bad.\" He replied and handed me a second token identical to the one he had before. \"Keep your eyes peeled and you might earn a few more of these.\" \n\n\"Haha! Drinks for me and my friends.\" I called out to one of the scantily clad servers. \"I like the outfits.\"\n\n\"A hint of what is to come.\" The Rhino chuckled.\n\nOne girl was dressed as a 'pony' with a bit like gag in her mouth and a vibrating horse tail in her ass took our drink order. I heard the soft buzzing sound when she stood next to me. Another sported an impressive rack and an equally impressive leather corset. Was there a bondage show set up for our entertainment? That would be fun. The 'other' show was watching Koli's reaction to the other patrons and the servers. She appeared out of her depth.\n\n\"You okay?\" I asked and she nodded. \"Anal virgin?\" I asked and Rhino and Howard both chuckled.\n\n\"Yeah. I've used toys but never gone that far.\" She admitted and a new icon appeared above her head. I knew her admission had just targeted her for sodomy. \"Maybe this was a mistake.\" She whispered. \"Can I sit in your lap?\" She asked perhaps feeling I was safer than the other two.\n\n\"Sit away.\" I said and she plopped down facing away from me. \"Do they like being dressed like that?\"\n\n\"I believe they like being watched. It excites them.\" I explained. \"So, why were you running?\"\n\n\"Huh, oh! My ex was following me around.\" She straight up lied. I could hear it in her voice.\n\n\"Howard, how is life treating you?\" I asked changing the subject and he took out a Cuban cigar and lit it.\n\n\"I've spent the last few years living in a cage that was in the severed head of a Celestial. Talk about boring! I am looking forward to seeing some tits and ass!\" He laughed and then gasped when Koli flashed him her breasts. \"Amazing tits you got there sweetheart! Here, take this.\" He flipped her another of his tokens. Koli shrugged and handed it to me.\n\n\"Thank you, Howard. How did you get locked up in the head of a... what is a Celestial?\" She rambled.\n\n\"I learned all about them from a crazy fucker that called herself the Collector. In a nutshell they are gods, the old gods that survived the birth of the universe. How it died, who knows.\" Howard continued. A female version of the Silver Surfer hovered over and delivered our drinks and a token for me. I tipped her and slapped her on her shiny silver ass for good measure. I nearly broke my hand on her world class ass. \"I heard that from here.\" Howard laughed.\n\n\"Something is poking my butt!\" Koli chuckled.\n\nTwo drinks and three shots later the show started. The three women approached the center stage. One was armed with a wicked looking riding crop, supple leather gloves, and other leather gear. The one to the right was clad in a micro bikini and carrying lengths of rope. Her counterpart was lugging obvious bondage gear and restraints. It looked like they were armed for a very good time. \n\n\"Welcome to our first show of the night. Lady Pain Giver and her two nameless playthings are here to entertain and amaze you. Give them a hand!\" The announcer introduced the trio to a thunderous applause including me. It was during this moment that the wicked Koli unzipped my jeans, freed my erection, and managed to impale herself on it.\n\n\"Damn!\" I cried out and looked down. \"When did you put a skirt on?\" I asked her.\n\n\"I've always had a skirt on.\" She lied again. \"Am I tight enough? Is your little cum dumpster a nice snug fit?\"\n\n\"Short denim shorts,\" I gasped as her pussy muscles clenched and squeezed me. \"Daisy dukes... UNNNN!\"\n\n\"MMMMMM what-ever!\" She declared in her best Valley Girl impersonation. \"Just shut up and let me fuck you okay. Okay?\"\n\n\"So much for foreplay.\" I grunted as she leaned back, placed my hands under her shirt on her bare tits, and started rocking her hips.\n\n\"Foreplay is so overrated,\" She purred. \"I only came here for your cock.\"\n\nI switched my attention between Koli leisurely fucking me and the bondage show on the stage. When I looked up the skinny brunette was standing with her legs shoulder width apart and both her arms bound behind her back with leather cuffs. I watched as Mistress Pain Giver slipped a bright blue ball gag into the other's mouth. Once a signal was given the stage slowly rotated giving everyone a view of the action.\n\nSwish! Crack!! \n\nThe riding crop sliced through the air and landed firmly on the round plump bottom. The slave moaned into the gag and Koli whimpered. When I asked if she were close, she nodded. Good. I continued playing her Koli's tits focusing on pinching and teasing her nipples. The loud crack from the crop was followed up with cries of 'ooh, that was a good one' from the audience. Mistress Pain Giver reached between her slave's legs, gently pried her labia apart and showed us how wet she was. She clucked her tongue and gave the handle of her crop a twist and I could smell the subtle scent of ozone in the air.\n\nSwish! Crack!! Zap!!\n\nThe slave nearly fell over when bright blue sparks rolled off her ass cheeks from the business end of the riding crop. Koli's pussy clamped down tight on my cock when she climaxed. It was almost as if she fed off the pain the slave experienced. I whispered in her ear to see if she were satisfied but she had barely begun. I was just her little boy toy and oddly I was okay with that for now. \n\n\"Time to spice things up,\" Lady Pain Giver purred. \"Guess where this one goes.\" She laughed as she took the bullet shaped vibrator and worked it into her the unbound slave's ass. She held up a second phallic shaped vibrator and slid that into the unbound slave's soaked pussy. \"Now, let's get things tied up.\" She gestured and the ropes came to life, slithered across the stage and wrapped themselves around the second slave. Soon she was utterly immobile and moaning loudly.\n\n\"So good mistress!\"\n\n\"Oh man,\" Koli pouted. \"I want something in my butt too.\"\n\n\"Lift up,\" I chuckled. \"More... more... just a smidge more... perfect!\" I urged and took aim with my upper erection. \"Sit back down slowly... slowly I said.\"\n\n\"Irk!! Two!!\" Koli squealed as she sat down hard driving my upper cock deep in one go. \"UNNNN... that's the ticket!\"\n\n\"You spoiled her now.\" Rhino warned me too late. \"You are so fucked.\"\n\n\"Aw, it can't be that bad.\" I replied as he chuckled.\n\nThe smell of ozone was in the air again. I looked at Mistress Pain Giver, but her riding crop wasn't activated now. I sniffed around and located the source. I stiffened when I spied the tall stocky blonde hair man walking around the perimeter of the bar's interior. \n\n\"Irk! Why did you suddenly get so damn...\" Koli gasped when she saw him too.\n\n\"Oh shit, it is Thor!\" We said at the same time.\n\n\"Time to go,\" she growled as my arm slipped around her waist. \"Let go!\"\n\n\"Hey, Mysterio! Lend a brother a hand?\" I whispered to the figure in the domed armor.\n\n\"I got your back.\" He laughed. \"Presto! Change-O!\"\n\nA column of thick white smoke arose from below and swallowed us up. I launched to my feet and wrapped an invisibility field around us. Koli grunted when her full weight drove both erections deeper still. When I ran the motion drove them in and out of her with such force, she climaxed a second time. She came so hard she pushed me over the edge and I nearly tripped as I tried to flee and climax at the same time. Somehow, we reached the exit, and only then could I manage to pull out. Koli spun around and kissed me. She grabbed my wrist and we raced invisible from the club fleeing the Asgardian. \n\nAftermath. Four hours later.\n\n\"I've never made love in a seedy mortal motel before.\" Koli purred in my ear.\n\n\"I've never buggered an Asgardian before.\" I fired back and we both laughed.\n\n\"When did you figure it out?\" She asked grinning ferociously.\n\n\"When Thor showed up and you freaked out. Then I thought about your name. K. O. L. I. It is a simple anagram for Loki, goddess of mischief.\n\n\"One thing has me puzzled though.\" Loki purred as I kissed her long delicate neck. \"Why did you get upset when you saw Thor?\"\n\n\"I thought you knew,\" I said as I deactivate the Helm of Anubis. \"I am a dark elf sweetie.\"\n\n\"Buggered by a Svartalfar,\" She moaned. \"That goes in my thousand-year diary. Why did you show up at the bar tonight?\" She asked as she snuggled closer.\n\n\"I am going to Latveria. People are dying. I want to help.\" I admitted and the look she gave me.\n\n\"Why are you putting yourself in danger? Mortals die every day and you want to be a hero. Is that it?\" She asked frowning.\n\n\"Not exactly, something is killing citizens of Latveria and Doom doesn't know who and can't stop them.\" I said and she smiled now. \"If I take out these assassins then think of the points I earn as not just as a hero but showing up the great Doctor Doom. If I survive.\" \n\n\"The problem is getting in undetected.\" She said grinning. \"What's your plan?\"\n\n\"Someone got in and has been moving around unchallenged for weeks now. I need to figure out how they are doing it.\" I said. \"I presume magic will be involved. I wonder if Doom pissed off someone like Mephisto or Dormammu. I might be dealing with demons.\"\n\nLoki bolted upright suddenly and looked around. \"I have to go.\" She stated and then cursed. \"Shit! Listen... when I run into problems like this, I try looking at it from a different point of view. Best of luck.\"\n\nLoki vanished from sight as she teleported away. Lying on the pillow where her head had rested was a ring. I picked it up and examined it. The band appeared to be gold, along the internal and external edges were intertwined Celtic knots. A single flawless emerald adorned the ring and around it a complex triangular knot. When I activated it, my HUD kicked in and I read the description of the ring. It was called Loki's Lament and it buffed my magic skills especially those dealing with shapeshifting and spell potency in general. I glanced at my shapeshifting score and whistled.\n\n\"When did you creep up so high?\" I muttered aloud as I slid the ring onto my right hand. \"Let's see what I can do with level ten shall we?\"\n\nI read the limits to level ten and my jaw fell open. If I ever lost the Helm of Anubis, I could still easily hide my dark elven nature. I suddenly remembered the Asgardian's abrupt departure. Why was she acting so strange? I activated my full armor and wrapped the shadows around me. I peeked out the window to see a redheaded amazon standing in the motel's parking lot. She was wearing Valkyrie styled armor with a series of ribbons decorating her helm, armor, and weapons. Her hand never drifted far from the hilt of her sword. She looked like a Valkyrie but carried the haughty arrogance of a noble born Asgardian. Who the hell was she? It didn't matter, it was time to get the hell out of Dodge.\n\nI washed up as best I could in the motel's bathroom, armored up, and slipped through the shadows to the other side of town. It was still early, so I decided to put my training to work and try web slinging through parts of Manhattan. The first leap was the scariest. I was nervous as hell and a bit on the sloppy side but once I managed to find my rhythm, I wasn't half bad. Traci was scanning the police band and finding exactly nil. It was a genuinely quiet night. I reached the top of one of the office buildings and once again I smelled ozone in the air. I stood my ground to see if Thor showed up and if he did to discover what he wanted.\n\n\"Ghost!\" Gwen hollered as she swung up to join me. \"I haven't seen you in a couple of weeks. I see you've been training. I am so proud of you!\"\n\n\"That means a lot,\" I told her.\n\n\"Smells like rain.\" Gwen replied looking around. \"Oh, my goodness! Is that Him?!\"\n\nHe was heralded by the crash of thunder and a blast of lightning. Thor landed nearby propelled by his mighty hammer Mjolnir.\n\n\"Good evening!\" He boomed cheerfully. \"I've been looking all over for you.\" \n\n\"Me?\" I asked and he nodded. \"I've been a good boy. I assure you.\"\n\n\"Of that I have no doubt,\" the god of thunder chuckled. \"I have spoken with Strange as well as others including the Black Panther. It is because of my conversation with King T'Challa that I sought you out.\"\n\n\"Should I leave?\" Gwen asked and Thor shook his head and handed me a coin before launching into a monologue.\n\n\"Nay fair Spider,\" he chuckled jovially. \"You should hear the proud deeds your friend has accomplished. He braved the perils of the Negative Zone and even subdued a friend in need so that his sanity and soul could be saved. He braved the wrath of a possessed Mr. Fantastic and even the fabled Ghost Rider to save Reed from himself. If ever I doubted your true nature these deeds alone prove your worth. I would be proud to fight alongside you in any battle brave Ghost Fire.\" He declared and I was touched by his praise and kind words. \"Alas, I carry dire tidings. Loki, my crazed sister has been seen on Midgard. I came to warn you that she might seek you out and harm you. She is not as understanding as I am.\"",
        "\"Thank you, Thor.\" I replied. \"I will be on my guard if I run into her.\"\n\n\"Good. I must be off. I am meeting the Guardians of the Galaxy off world. Good luck to both of you.\"\n\nHe spun his hammer and launched himself upwards and disappeared into the night sky followed by a streak of a rainbows and auroras.\n\n\"You fucked her, Loki I mean, you fucked her rotten.\" Gwen stated with a wry smile.\n\n\"I did indeed.\" I replied. \"How the hell did you know?\"\n\n\"When he said the name Loki your eyes crinkled along the edges. It is one of your tells.\" She giggled. \"So, what was it like to bang a goddess?\"\n\n\"I could lie and say it was okay, but damn it was intense!\" I shared since she asked.\n\n\"I bet Thor could lay the hammer down, if you get my meaning.\" Gwen laughed. \"I heard from Shuri that you are heading to Latveria soon. When are you leaving?\"\n\n\"Soon.\" I said as she sat next to me and we held hands. \"Someone needs to deal with the assassins or whatever the hell they are.\"\n\n\"You are sporting a new ring, where did you get that?\" She asked as I let her hold my hand up and examine it. \"Pretty, what is it made of? Gold?\"\n\nI pulled down my HUD and swiped over until I reached jewelry and examined Loki's gift. I pulled up its details and barely held my excitement at bay. \n\n\"Oh my god!\" I exclaimed as I read the extended description. \"It is made of Uru!\" I squeed. \n\nUru is the same metal as Mjolnir, Thor's hammer. Sure, it was just a ring but still. I had an Uru item in my inventory. Best game ever! \n\n\"I think I heard Stark mention that a few times. Isn't that an Asgardian metal?\" Gwen asked and I nodded quite vigorously. \"Dang, you must have really rung her bells. I wish I could go to Latveria with you, but I can't. Were you going to ask me or was this going to be a solo mission?\"\n\n\"I didn't want to put anyone else at risk.\" I said and Gwen rolled her eyes.\n\n\"That is so you,\" She said her voice taking a hard edge. \"Please be careful. If something happened to you... just don't.\"\n\nI pulled her into a hug and held her. The soft sound of metal on metal got my attention. I glanced down as there was a token stamped with Gwen's bright colors on it. I picked it up and she giggled. She pressed it into my hand. Before I could ask her what the token was for, she was touching her ear and talking to someone. A quick kiss later and she was leaping off the side of the building. I stood to follow her, but she was already gone. I guess she was on mission. I sat back down and sorted my inventory by date to catch up on anything small I might have missed after checking the details on my new ring. \n\nThe one thing that did catch my attention was the 'bag of tokens'. I took that out and remembered what Howard had said about keeping an eye out for more coins. I dumped the coins onto the surface of the glass roof over an indoor pool. Each coin was stamped with the likeness of the person or entity that handed it out. They also had the same color scheme as that person. There were ten new coins. I remembered getting a second one from Howard, and of course the one from Loki, Gwen, and the Rhino. I got one from the female Silver Surfer and Thor, and then there were the others I didn't recall collecting. \n\nI checked my quests and there under events was the Token Treasure Hunt and it was underway. There was an entire month left until it ended. With all the possible characters to collect I would keep my eyes open for rare and unusual individuals. I had already managed to snag two ultra-rare tokens with Loki and Silver Surfer. I was surprised to see that I already managed to collect coins for my super powered lovers. It also seemed that I automatically received coins for positive encounters with other beings. One being Mysterio when I asked him to cover my escape from the Bar with No Name. The only unanswered question of the night was this, what good were the tokens? I'd just have to wait until the event was over or someone explained their function if they even had any. Maybe it fell to bragging rights. Who had the most coins wins a prize? I was okay with that too.\n\nIt was time to cross the pond and take on whoever or whatever was killing people in Latveria. I bought a first-class ticket to Berlin. I figured from there I could rent a car or truck and make my way to Doomstadt. I went through my armor skins available to me so that I didn't walk into Latveria as Ghost Fire. I picked a particularly dark aspect suit that screamed villain all day long. I could use my new weapon that Shuri designed for me or the dark elven sword. I still mourned the loss of my signature darksaber. One of these days I would return to the Negative Zone and search the ruins and see if I can at least recover the crystals if they survived. My nerves were just too raw to try it right now.\n\nI purchased my ticket online and for the first time in my life I'd be travelling first class. Did teleportation count as first class? I could cross the length of a city in a heartbeat with a precision that was staggering. I think that if I tried, I could bypass the jet and teleport across an ocean. If I succeeded, I could save precious time and a little cash. If I failed, where would I end up? Nope. Not worth the risk. I called the business card of the Wakandan chauffeur and asked for a lift to the airport. She showed up eager and even let me sit up front with her. We listened to music as she navigated the web of streets and toll roads.\n\n\"Can I ask a personal question?\" She inquired a smile on her lips.\n\n\"Those are the best kind.\" I replied looking her over.\n\n\"You ever make love in public?\" She asked her smile taking on a more sensuous quality.\n\n\"How public?\" I fired back and that caught her interest. \"Do you want to push your limits?\"\n\n\"What do you have in mind?\" The questions kept flying as she parked the limo just outside the airport terminal.\n\n\"How sturdy is the roof of the limo?\" One last question from me had her reaching to unbutton her blouse. She stopped suddenly and touched her ear.\n\n\"She is where?\" The driver frowned. \"Yes, your Majesty! I am happy to be of service.\"\n\n\"Oh shit!\" I cursed when someone knocked on my window. \"Mary Jane?\"\n\n\"I got wind you were heading to Latveria. Can I get a lift?\" Mary Jane asked once the passenger side window was lowered.\n\n\"Um...\" I stammered.\n\n\"Absolutely,\" the chauffeur declared. \"I also happen to have my pilot's license. I have been authorized by the King to fly you to Berlin.\"\n\n\"I guess sex on the roof will have to wait.\" I stated and we both frowned.\n\n\"The aircraft is being prepped. I know a great place to get a cup of coffee.\" The driver suggested.\n\nWe took her up on her offer. I grabbed my luggage from the trunk and followed MJ and the chauffeur. We had coffee and walked about until the jet was ready to go. We passed through security and cleared to fly out within the hour. We boarded the aircraft and the interior screamed Shuri. I knew that she had designed it. Once you've seen or in my case held something, she had created you feel like you know her.\n\n\"I've never been aboard a private jet before. I know it sounds lame, but it is true.\" I stated as I took my seat next to MJ. \"You?\"\n\n\"I know how you feel,\" she replied with a smile. \"Of course, when you date an Osborn you see how the other half lives.\"\n\n\"You dated Norman Osborn?\" I joked and her eyes narrowed. \"Isn't he a little old for you?\"\n\n\"Older men have so much to teach innocent young ladies,\" she fired back licking her lips. \"I'm not saying I was violated or anything.\"\n\n\"Buckle up love birds!\" The pilot called out over the speakers. \"We are next to take off.\"\n\n\"Violated has a certain flavor to it, doesn't it?\" I commented. \"You are a word smith after all.\"\n\n\"I agree. Certain words have a flavor or power to them. Violated. Taboo. Penetration. Shall I go on?\"\n\n\"Yes... please!\" I told her as the jet accelerated and left the ground.\n\n\"I know your type,\" MJ purred. \"You want all the juicy details. Here's the girl that fucked Spiderman and the Green Goblin. Not at the same time or anything, something like that would never happen.\"\n\n\"You cheeky little slut,\" I said locking eyes with her. \"What happened?\"\n\n\"Harry and Peter were fighting over me. Harry and I had just broken up. He walked in on me and Peter going at it. Harry lost it and well one thing led to the other and I tried to break them up and got caught up between them. Poor little old me.\" She was smiling the entire time.\n\n\"Nice visual.\" I admitted.\n\n\"I'm lucky that way.\" MJ said hinting at other encounters. \"Besides, you wouldn't be interested in dreary old me.\"\n\n\"You are right,\" I chuckled. \"It isn't like you've ever done it with supervillains.\" I stated and she smiled even wider. \"All that kidnapping, and no one ever took advantage of you.\"\n\n\"No... never.\" She purred. \"I am ever so innocent. Oh, the podcast went off like a charm and got some great numbers and reviews. You are a big hit.\"\n\n\"Being interviewed by the intelligent and lovely Mary Jane 'Tiger' Watson doesn't hurt.\" I said and her avatar changed without prompting. One moment she was wearing a clean-cut business suit like the one I had last seen her in. The next, she was sporting a sexy short skirt, a clingy black half shirt, stiletto heels, and her hair was done up in two pigtails. \"Nice look for you.\"\n\n\"Thanks, it is definitely more comfortable.\" She admitted as if she were aware of the change. That was strange on its own. Most A.I.'s didn't seem to register changes like that. A private window popped up and asked me to take a nap for brief character maintenance. \n\n\"I hate to ask this.\" I began and she waited patiently. \"It has been a long day. Do you mind if I catch a quick nap? Just an hour or two.\"\n\n\"Look, there is a couch in the back there.\" MJ purred. \"Why don't we move back there, and you can use my lap for a pillow? Would you like that?\"\n\nWe did just that. MJ sat near one end of the couch and I lay down with my head cradled in her lap. She ran her fingers through my hair, and I fell asleep. My stamina bar recharged and the skills and feats I had recently upgraded rebooted and created synergetic links. It was a new function they were testing I guessed. I looked over my new skill web. This incarnation wasn't limited to skills buffing skills but talents and skills working off one another. I spun it over and looked at the complicated connections. \n\nBasic skills were at the center and the outer most were the most advanced and typically the lowest ranked. Skills that were related were chained in direct links or at least near the parent or base ability. \n\nI wasn't surprised to see seduction and combat tied at the top. When I flipped over the hexagonal diagram my talents were revealed. At the heart of them was my shadow and vocal based gifts. Invisibility and Kiai Jutsu were at the heart of this web. I did note that my vampiric abilities along with shape shifting were growing as well. That made sense of course. I had slept with Mystique as well as Loki, and the Uru ring buffed those abilities as well as my mystical skills and talents. \n\nI watched as a flutter of activity rippled through webs and made new connections. It was fascinating to see it in action. The flat display exploded into a three-dimensional array and I saw a whole new fundamental connectedness between skills and talents. I reached out and touched it. I spun it this way and that until a new aspect was added. The women I had a relationship with were now directly connected to the web. Susan tied directly to my invisibility and force field talents now. Jennifer was a key to my energy projection and so on. There were a few surprises but not many. Shuri aided to both skills and talents as did Natasha, the Black Widow.\n\nI chuckled when another window popped into view. It read nap concluded. I opened my eyes and looked up into MJ's smiling face. I sat up and she scampered off to the restroom. I followed her and stood in the open doorway. She had left it that way. \n\n\"Any dreams?\" She asked as she flushed.\n\n\"Nothing I can recall.\" I replied as she stood and ran water into the sink. She splashed water on her face as she bent over. \"Need a hand?\" I asked her as I took a few steps forward. I slipped my arms around her waist and she purred. \n\n\"We... I'm glad you let me come.\" She stated as she ground her ass against me.\n\n\"We?\" I asked as my hands slowly moved upward. \"Did you and May brainstorm?\"\n\n\"Not her.\" She replied as my hands cupped her breasts. \"MMMMM... finally! I have been so damn jealous of May and Gwen.\"\n\n\"Don't take this the wrong way,\" I whispered in her ear and she reached back and pulled her skirt up over her ass. \"I've was delaying this to build up the tension.\" I told her as I ran my hands over the globes of her ass cheeks.\n\n\"So, I am special then?\" Mary Jane moaned as she tried to unzip my jeans. I kissed the side of her neck and her hands shook and fumbled. \"Damn, w... I've wanted this so bad!\"\n\n\"Here, let me help.\" I offered as I unzipped and took out my erection. It settled between her plump ass cheeks like an old friend. \"How's that?\"\n\n\"UNNNNN! Bite me!\" She begged. \"Taste me!\" I felt my fangs extend and brush against her throat. \"Oh gawd!\" She whimpered as I rocked my hips slowly letting my erection slide between her cheeks. \"I can feel it. Do you like that?\"\n\n\"Uh huh.\" I growled as I set the point of my canines against her flesh.\n\n\"Here too!\" She urged as she took my hands and slid them under her shirt. I cupped her breasts and let her dictate how things would progress. \"Your hands fit them perfectly. UNNNNN!\" She cried out as my fangs lightly penetrated her flesh. I took just a taste before licking the wound. Her blood had an interesting taste for a non-powered individual. She was exotic to the end.\n\n\"You are in charge,\" I whispered as I kissed the other side of her neck. \"I'm not Peter.\"\n\n\"I know.\" She shuddered and moved her hips slower teasing both of us. \n\n\"Agent Fury is trying to contact you.\" The pilot indicated looking at Mary Jane who flinched and snarled.\n\n\"Hasn't he done enough damage!\" She growled her voice low and harsh. \"I'm sorry. Ever since he learned about Peter, he's been constant presence in our lives.\" She explained. \"You don't know do you. How could you. It is his fault.\"\n\n\"What is his fault?\" I asked as she started moving her hips again.\n\n\"If it wasn't for Fury, there'd be no Spiderman or the rest.\" She declared. \"He was eager to bring down Norman Osborn. Fury had it on good authority that Osborn was performing human testing under the guise of bioweapons. Fury snuck into Oscorp and using an untested device slipped past a security door and into the lab where the irradiated spiders were being kept. That device allowed him to phase through the wall safely and most importantly silently. Lucky for Fury he was being methodical in his search of the lab. He was on the edge of the lab while the spider's environment was on the interior. When the device failed it sent out a coherent phase wave that destroyed the spider's habitat, but it also merged all those spiders into one extremely dangerous specimen. The spider reappeared in our dimension on a lower floor where the security allowed it to escape. The rest is history.\" She moaned at the end of her narrative. \"Give it to me!\"\n\n\"What a sight!\" Our pilot and chauffeur declared as she silently approached. \"Need a helping hand?\" She asked as she spat on the palm of her hand, took me in hand and began stroking me slowly.\n\nClick!\n\n\"It suits you!\" She giggled as I looked down and spied the metallic ring around the base of my erection. \"Shuri made it for you, a pure Vibranium cock ring. It is the second one she's made. Her brother is quite proud of his. Here,\" She moaned as she touched a tiny metal button along the surface of the ring. \"This will let your A.I. operate it.\"\n\n\"Got it Ghost man!\" Traci purred. \"Ooh! Let's power it up and start off on three.\"\n\n\"Yikes!\" I cried out as the ring started vibrating. MJ yelped too when the pilot took aim, and the next time she pushed back most of my cock slid between her pussy lips. \n\n\"God's it is quivering!\" MJ moaned as I sunk to the root.\n\n\"My work here is done!\" The pilot said. \"Make her scream for me.\" She laughed.\n\n\"Thanks for the hand,\" I whimpered as a combination between MJ natural snugness and the toy were winning out.\n\n\"Just keep doing what you are doing,\" MJ moaned as she bent over the sink and held on tight. \"I love how it tingles.\" She groaned as she stuck her ass out as far as she was able.\n\nI was able to maintain a leisurely pace as poor MJ shook as her first orgasm built, crested, and crashed over her. I pulled out and flipped her around. I set her fine ass on the sink and she showed off her flexibility.\n\n\"I told you,\" she purred as she did the splits. \"Chinese... UNNNNN... contortionist!\"\n\n\"Switching to level five,\" Traci purred. \"Now how about you fuck her with some gusto boss man!\" She urged.\n\n\"Can you get your feet behind your head?\" I joked as I pounded MJ harder. \n\n\"What if I could?\" MJ growled as I pulled out slowly and then slammed my hips forward hard. \"UNNN! You are getting thicker.\"\n\n\"I am just getting started.\" I said as I posed her with her knees against her chest. \n\n\"Take your time,\" the gorgeous redhead begged. \"We have plenty of time so there is no need to rush. We are here to please.\"\n\n\"I love your expressions.\" I told her as I fought the urge to climax. \"Tell me what you want.\" I asked as the cock ring kept me on the edge.\n\n\"I want to be in charge.\" She demanded. \"I want to be on top this time.\" MJ whimpered as she continued. \"I... want...\"\n\n\"Say it.\" I urged enjoying every word of her story.\n\n\"Lick me.\" She said blushing furiously. \"Pick a hole... any hole.\"\n\n\"As you wish.\" I said and as I pulled out, supplicated myself before her, and activated my serpent tongue technique. I attacked both since she wasn't being overly specific.\n\n\"What the hell!\" She cried out as my tongues slithered deep and slowly thickened. \"How? So damn deep! So thick! Ooh, I didn't know you could do THAT!\" MJ giggled. \n\nShe had waited so long and so for her benefit I pulled out all the stops. While I tongued her holes, I gently teased her clit with my index finger. I watched her expressions and got a glimpse beyond her girl next door exterior. She was as much a freak as I was. \n\n\"Your tongues are driving me crazy!\" She yelped as she climaxed. \"Let's move to the couch, more room there.\" She chuckled as we moved to the couch and she offered her breasts and mouth up for my attention.\n\nShe sat on the couch, slid into a prone position, and then kept moving until her head hung off the middle cushion and her ass was pressed against the back of the couch. I cupped her breasts and slid between them. As I made love to them, she would lift her head and lap at my balls when they came into range. Seeing her eager lips I alternated between her tits and her mouth for a place for my erection to slide. I liked them both and she knew it.\n\n\"You are doing great,\" I praised her. \"Are you enjoying yourself?\"\n\n\"MMMMHMMMM!!\" She moaned since my cock was balls deep down her throat.\n\n\"I am so glad.\" I told her as I slowly rocked my hips. \"I adore the look in your eyes.\"\n\nI slid back between her tits and poor MJ was shaking now. And then in a nigh imperious voice she declared her desire to me.\n\n\"You can fuck me now.\" \n\n\"I damn sure will!\" I laughed as I flipped her around and took aim.\n\n\"I'm going to break you.\" I snapped as the vibrations from the ring and my inability to climax were getting to me. \n\n\"Whatever.\" MJ teased as she rolled onto her hands and knees. \"I don't know what the others were going on about. What is so special about... IRK!! Both at the same time? UNNNNN!\"\n\n\"Ring or not, I am going to make you scream!\" I promised as I pulled back and slammed into her.",
        "MJ cursed and spat as she rammed her hips backward against me. She praised me in one breath and cried foul the next. It wasn't until she was on the verge of climax when I found out something profound about her.\n\n\"I've never let Peter even stick his finger in my ass!\" She howled as she came.\n\nTraci finally deactivated the ring and when I came MJ screamed. By the time I had drained my stamina bar three times she was semi-conscious and half asleep on the same couch I had napped on earlier. I held her as she slept and didn't miss the soft murmurs from her luscious lips. \n\n\"We do like green eggs and ham.\" She giggled in her dreams.\n\nWas that a comment about the double dragon or something else? I could touch her thoughts while she slumbered to find out, but that would be a huge breech of trust. I took a brief glimpse of my HUD, but since MJ was non-powered there wasn't much beyond trophies to collect. I did a quick swipe through the screens and spotted a new merit, Aces and Eights. When I looked at the description, I laughed so hard I nearly woke up the sleeping redhead. I had earned the merit after taking three anal virgins using the double dragon. The merit made it easier to seduce anal virgins. \n\n\"What the holy hell?\" I cursed when I spotted a second new merit buried in the back. Hold long have I had that I wondered. \"Hosting a friend.\" I read it aloud. It described what could only be the Venom symbiote. The merit enabled me to keep the symbiote under control. I thought back to the armor Reed had set loose on me. It had been a re-engineered symbiote armor. Have I had it that long and just not noticed it? I just couldn't remember, and the game didn't sort skills and talents by date. \"That has to be it.\" I muttered. \"It isn't like I've slept with someone with the full Venom symbiote. I'm sure I'd know.\"\n\nMary Jane recovered and woke after an hour-long nap. She looked refreshed and in search of cuddling. I was all for snuggling with such an attractive young lady. \n\n\"You talk in your sleep.\" I kidded her.\n\n\"Do I?\" She blushed. \"I hope I didn't say anything embarrassing.\"\n\n\"Nah, just that you liked green eggs and ham,\" I repeated her words back to her. \"I had my own interpretation of course.\"\n\n\"Of course, you did.\" She giggled.\n\n\"Clean up back there,\" the Pilot announced. \"We are getting close and the craft smells like sex. I don't mind, but I am quite sure his majesty doesn't want to smell someone else's love play. Hurry up and wash the funk off.\" She giggled over the intercom. \"We'll be landing in an hour.\"\n\n\"I've never made love in an airplane's shower before.\" I commented as we raced to the shower.\n\n\"Fine,\" she chuckled as I kissed her and her back hit the wall of the shower. \"MMMM! Good start!\"\n\nI suspect it was the pilot that flicked a switch and shut off the water supply. The shower announced that we were reaching a critical level. We exited the shower in quite a state but endured it with a promise to finish what we had started later. Suddenly MJ shook and clung tightly. She thanked me for letting her be in charge for once. I replied that she could dictate things as often as she wanted. The emotional damn burst.\n\n\"Thank you,\" she cried. \"I just feel so... submissive. So weak. I won't live in his shadow any longer! I am my own woman!\" She grabbed me by the hair and kissed me. I surrendered to her and she ate it up. \"...how can you be so powerful and yet you yield to me?\"\n\n\"Tree meet storm. I prefer to bend to your hunger and in return I enjoy the wrath of your desire.\" I purred in her ear. \"You okay?\"\n\n\"Yeah. I am going to be okay!\" She declared as she reached into her pocket and handed me a ruby coin. I took the token and examined it. The other coins all showed the hero or villain in their element. Her token had her in the traditional Spiderman pose. She was inverted, hanging from a strand of webbing, with her hair hanging down. The chief difference is the slender piece of material covering her pussy if barely. She spoke breaking my train of thought. \"You don't know what they are for, do you. They unlock side quests, special storylines, and specialized equipment. Use them wisely.\"\n\n\"Should I spend your coin now?\" I asked her.\n\n\"If I were you, I would.\" MJ giggled. \"Oh, by the way, you've maxed out your notoriety score.\"\n\nI did. I went into my inventory and double clicked on her coin. It grayed out and indicated that it was active. If I was expecting anything else, I was disappointed. I'd keep an eye on her. I swiped over to my stats and looked at my notoriety score and the gold star next to it. I moused over the star and it indicated that I had earned a special bonus for being the first player to max this stat out. I looked at my experience and raised skills, talents, and saw that I had earned a new merit, Journeyman Shifter. It allowed me to mimic a known PC or NPC with ease and there was even a list for me to check. I looked up mimic to find out the limitations. Mimic included not just appearance but voice and mannerisms as well. I could glance at someone and take on their appearance in a matter of seconds. \n\nI couldn't help but look at Master Shifter and wonder if it was the same level that Mystique or a Skrull possessed. There were four titled ranks players could achieve. When you put points into a talent or power you began as an apprentice. If you were able to get to level ten you were now a Journeyman. Ten levels later you reached name level or in the case of shapeshifting you were called a Shifter. Finally, after a grueling forty levels you reached the coveted title of Master. I wondered if you focused on something exclusively could you reach Grandmaster. You'd be weak in a lot of areas but man you'd outclass anyone in whatever skill you got that high.\n\nI preferred a more rounded character that wasn't so pigeonholed. While shifting was cool and all what I really wanted was just within range. If I could level up twice in Latveria I would have enough to top out my first talent, Kiai Jutsu. I could learn Death Song the deadliest power on that skill tree. I'd be able to kill or immobilize with my voice alone! That would be epic! I would be a Master of the Voice. I looked down the list and discovered that they called it Vox Master. Vox was the Latin word for voice, made sense to me. Strange that I pumped so many points into it and yet I used it sparingly just as Nightwind had suggested. After that I would have to choose between Shadowforce and Shapeshifting. That is one of the things I love about gaming. You begin so mundane and then before you know it you are taking on characters that seemed so powerful.\n\nSatisfied I exited my HUD and found MJ in my arms. She appeared quite content. I held her close and before long we were nearing the Berlin airport. I kissed her cheek and we buckled up for our landing. The Pilot informed us she was returning directly, she was needed back in the U.S. We stepped off the jet and let out a gasp when the sweltering heat hit us on the tarmac.\n\n\"Damn it is hot! No global warming my ass!\" I cursed as we passed through customs and walked to our rental car. \n\nI cranked the A.C. and selected English for the GPS system and headed straight for our goal. I was eager to sneak into Latveria and find out what the hell was going on. Once we neared the border, I would leave the vehicle in MJ's hands. She was taking a more direct approach to getting into Latveria. She was going to interview Von Doom for her station. Our trip was cut short. The main road was under maintenance after the combined forces of the U.S. and German military went toe to toe with the supervillain Juggernaut. The damage to the roads and nearby buildings was devastating. I was going to have to rent a helicopter to reach my goal. As I called around, I wasn't the only one needing to get around the damaged portion of road. We headed back to the airport to book a flight and once we had that settled, we would find a place to crash until then. The wait to just book a helicopter flight was two hours. I went online and began looking for private pilots. As I scrolled through the sites a familiar figure walked by.\n\n\"No fucking way!\" I cursed and the woman praying her rosary shot me the nastiest expression. \"Sorry.\"\n\nI rushed to my feet with MJ close behind and followed him. He was heading for the private end of the airport where we had come from after exiting the Wakandan jet. One moment I was walking along and the next I was snatched off my feet and my back slammed into a wall. I stood face to face with none other than the Wolverine. I smiled but he didn't.\n\n\"Are you following me bub?\" He growled.\n\n\"Yes.\" I said and I felt the touch of an adamantium claw slide against my neck.\n\n\"Why are you following me?\" He asked and I told him the truth.\n\n\"I need to get to Latveria and single handedly solve the case of the murders, so I can piss off Doom again.\" I explained and watched his reaction.\n\n\"Single handed?\" Logan laughed in my face. \"How the hell do you...?\" He began and then sniffed me. His keen animal like senses told him more than his eyes revealed. \"What the hell are you?\"\n\n\"Not from around here. But I want to help.\" I continued.\n\n\"We want to help.\" MJ chimed in. \"Hello Logan.\"\n\n\"I'll be damned! Mary Jane Watson, I'm a big fan.\" Logan replied.\n\n\"How big?\" MJ fired back with a smoldering look as the stench of brimstone filled the air as a blue skinned young woman suddenly appeared and tapped Logan on the shoulder.\n\n\"The Professor is in a hurry. Are you coming or not? Oh, hello! I'm Nightcrawler and who are you?\" She asked.\n\n\"I'm Ghost Fire and this is Mary Jane Watson.\" I replied and watched both their reactions.\n\n\"Ghost Fire... no shit!\" Wolverine cursed.\n\n\"I've heard all about both of you.\" Nightcrawler replied. \"Jean is quite fond of you. She says you have a very intricate mind.\" Nightcrawler said to me. \"Do you need a lift? I'm sure the Professor wouldn't mind. Come along.\" She gleefully offered to both of us.\n\nI grabbed my luggage which had tumbled onto its side when Logan surprised me. Logan narrowed his eyes when the subject of Jean Grey came up. We followed Nightcrawler to a black jet sitting on the tarmac. Assembled on the boarding ramp were the world-famous X-Men led by the famed telepath Professor Xavier. As Logan, MJ, and I approached Nightcrawler teleported ahead and was bouncing up and down in front of the professor. I didn't miss the erotic way her firm young tits jiggled.\n\n\"Be careful of that one,\" Logan offered. \"She'll drive you crazy.\"\n\n\"I'll keep that in mind.\" I said and he laughed.\n\nWe met up the X-Men and they offered us a seat aboard the Black Bird, their aircraft. They were also heading to Latveria but on humanitarian terms. They had a stockpile of food, medicine, and other supplies aboard the craft. I was happy to help them though I asked them to keep my identity a secret, but they already knew why. Professor X knew of the public embarrassment my Exomorph had caused and how we had snatched the vibranium right out of Doom's clutches. \n\n\"We've got clearance to take off Professor,\" Cyclops called from the cockpit. The famed mutant was easily spotted in a crowd either by the distinctive head gear or the ruby lensed glasses he was forced to wear. His power was a two-edged sword. He had a powerful optic blast that could stun or kill. The bad side was that while his eyes were open, energy was continuously projected from them. Only the glasses or visor kept his power under control. \n\n\"Takes us up,\" the Professor directed. \"Once we are clear of German airspace cloak us.\"\n\n\"Yes Sir.\" Cyclops replied.\n\n\"Gwen says you are tutoring her.\" Nightcrawler whispered in my ear. She was a mutant with the power to teleport as well as heightened dexterity, night vision, and other physical gifts. Like Scott, Katja Wagner stood out in a crowd. In her case it was the fine coat of blue fur covering her body, demonic looking features, appendages, prehensile tail, and shining yellow eyes.\n\n\"Yeah, her hand to hand needed some work.\" I replied as the mutant nervously chewed her lower lip.\n\n\"That's not the training she mentioned.\" Nightcrawler giggled. \n\n\"Oh.\" I chuckled as the jet accelerated and felt my body pushed against the seat. \"Who handles your training?\" I asked and Rogue entered the conversation.\n\n\"We have the Danger Room for that.\" Rogue stated. \"Talk about a rough workout.\"\n\n\"Sounds like fun.\" I said as Nightcrawler leaned closer still and she whispered in my ear.\n\n\"She said you'd pull my tail.\" She purred gently. \"Gwen said you liked unusual girls like me.\"\n\n\"Did she now.\" I replied trying and failing to hide my smile. \"She's been a naughty girl.\"\n\n\"You said naughty.\" Nightcrawler giggled nervously.\n\n\"Yes Ghost, you said naughty.\" MJ purred in my ear. \"How does it feel to be sitting between two naughty girls?\"\n\n\"Amazing.\" I stated proudly.\n\nWe were nearing Latverian airspace and the jet switched on its advanced stealth features. I was turning to ask Rogue if she knew Gwen when the jet shuddered. Cyclops was calling out that we were under attack was deploying countermeasures. The main power went off and the scarlet emergency lights came on. The ship was going down. I reached out beyond the ship and found plenty of shadows available. I placed a hand on MJ's and Nightcrawler's shoulders. I waited until the Professor called out that the craft was crashing before teleporting the pair with me to safety. \n\nThe three of us crouched in the shadows looking for soldiers or doombots. Once we were sure we weren't being hunted Nightcrawler took over. Katja was expertly trained, and we tracked the jet down to its crash site. The doombots were waiting and had the jet surrounded. I stopped Nightcrawler from attacking the doombots. I told her we would follow and when the chance came up, we would rescue the X-Men.\n\n\"Why are we waiting?\" Nightcrawler growled.\n\n\"Do you really want to push an incursion into sovereign territory into an international incident?\" MJ explained.\n\n\"Right,\" Katja agreed. \"We have emergency kits to collect.\"\n\n\"What emergency kits?\" I asked as she took a GPS reading.\n\n\"This way,\" she pointed. \"It was Logan's idea really. He felt that if anything should go wrong, we should have food and supplies for our mission into Doomstadt. The nearest one is just a thousand feet away.\" \n\nWe spent the next hour collecting three of the kits, kits that took the form of backpacks up in the limbs of trees dropped off by stealth drones. When I asked about the drones and the Black Bird, I learned they were based off the same technology.\n\n\"If the drones were able to slip in undetected how did the Black Bird get noticed?\" I asked.\n\nNightcrawler looked at me and then MJ. The young teleporter followed my train of thought quickly. She suspected a traitor amidst the X-Men, but who? As we made a circuitous route to the outskirts of the capitol Katja fumed and fumed over the obvious betrayal. I watched her as she mentally went through the members of their tight knit group. I placed a hand on their shoulders, and we stopped cold. I wrapped us in shadows, and we stood stock still and listened. It was suddenly so damn quiet. The animals and insects recognized a hunter in the woods and so did I. Slowly the woods returned to normal. Only then did I drop the camouflaging shadows around us.\n\n\"What the hell was that all about?\" MJ snapped.\n\n\"The Quietus,\" Nightcrawler whispered. \"Did you not notice how silent it became?\"\n\n\"Well of course I did,\" Mary Jane growled and then lowered her head. \"No. I didn't. What happened?\"\n\n\"A predator.\" I said. \"Someone or something was hunting us.\"\n\n\"Do you think it was the person killing all those folks in the city?\" MJ asked and I shrugged. \"We need to find him and take him out.\" I was puzzled over her desire to have an active role in discovering the villain or villains.\n\n\"This thing, whoever it is, has been operating freely for weeks now unhindered. We need to be cautious.\" I advised and Nightcrawler backed me up. I closed my eyes and felt for residual arcane energy. Surely if this thing was a demon or using magic it would leave traces behind. It didn't. \"I was wrong!\" I gasped and then the implications hit me hard. \"Aw shit! We may be over our heads here.\"\n\n\"What's wrong?\" MJ asked alarm clear in her voice.\n\n\"They aren't using magic. So, it is either a mutation or extremely high tech.\" I said.\n\n\"Our hunter is a mutant?\" Nightcrawler asked and I shrugged again. \"How do we track him?\"\n\n\"I don't know yet. This is more your field for the moment. Do you know any mutants that can turn invisible or cloak themselves? Think about that as we keep moving.\" I ordered.\n\nWhile she listed off names of mutants and known villains, I kept a keen eye and ear out on our surroundings. The energy blast came out of nowhere and with no warning. I leapt in front of the girls as the second blast struck, and I drew my weapon and deflected the attack away. The centurion tree struck by the blast erupted into flames. I spun the pole weapon around in defensive circles. Nightcrawler teleported to the top of another tree while MJ vanished from my line of sight. The second blast was directed at Nightcrawler, but she vanished, and the blast only incinerated the top of another tree. I was able to locate the origin of the attack and one Force push later, and our foe was thrown from his perch atop a strong limb. \n\nNightcrawler was on the move. I could track her by the distinctive bamf sound and the small cloud of noxious gases she produced. While she kept our friend busy, I tried to detect his or her movements and failed miserably. I was about to look for MJ when something strange happened. Our foe struck the ground nearby sending clods of earth and grass everywhere. I didn't see them only the aftermath of their collision with the ground.\n\n\"Way to go Katja!\" I cried out as I closed in on the assassin. \"Nice hit!\"\n\n\"What are you talking about?\" She called out from half a football field away.\n\nThat sense I had honed on Ossus kicked in and spun the staff in a defensive parry and made contact. I sank into that place where instinct and reality collide. He was ferociously fast and accurate. I'd never crossed weapons with the likes of him before. Even training with Morelen hadn't been this difficult. This guy was on another level and I was on the verge of perishing. I wonder what the white room looked like. To deepen my connection, I closed my eyes and surrendered to instinct. I felt it before it happened. I altered the trajectory of my weapon. It caught him under the chin and staggered him. I went on the attack! He tried to stand his ground and failed. Nightcrawler made an appearance and his morale was broken. He must be a speedster on top of everything else. He or she left the clearing at a blistering speed.\n\n\"MJ!\" I screamed and her head poked out from her hiding place. \"Nightcrawler?\"\n\n\"Here boss,\" she called out as she teleported next to me.\n\n\"Let's get the fuck out of here before he returns. We need help. I'm not too proud to say that.\" I ordered and Nightcrawler pointed us towards the nearest road. \"Who hit him?\" I asked as we moved as quick and quietly as we could.\n\n\"Is that why you called out?\" Nightcrawler asked. \"You thought I hit him.\"\n\n\"Yes. I can't be sure, but I'd swear he flew at least ten yards or more. Whoever hit him was strong.\" I said trying to puzzle out what happened. \"Makes no sense.\" I said looking at Mary Jane Watson. She was just a reporter and news anchor, or was she? Only time would tell.\n\nWe were on the move to Doomstadt. Thanks to Katja's map of the area and GPS we found the main road, it was also the only road to the city. Traffic was light, by that I mean nonexistent. We were about to hoof it into the city when a caravan appeared down the road and it was heavily fortified. What was so damn important they needed six armored vehicles to protect one truck? Three of the vehicles were in front and three behind. The pace was slow and with Nightcrawlers help we were able to hitch a ride. I cloaked us in a bubble of invisibility, and she got us on the roof of the truck. I admired her skill at teleportation. We hit our mark so cleanly our added body weight to the roof didn't make a sound when we appeared. The bubbled masked much of the stench and Katja's patented bamf sound.",
        "\"What's inside?\" MJ whispered.\n\n\"No clue, but it must be worth all of this.\" I replied.\n\n\"I agree.\" Nightcrawler backed me up. \"We will have to wait and find out.\" She added softly.\n\nThe ride into the city went without a hitch. Doomstadt was a city under siege. Doombots were everywhere I had to clamp a sturdy hand on Katja's shoulder when we saw the remnants of the black bird and its cargo in the city square next to the statue of Viktor. It was easily twenty feet tall and matched his ego perfectly. The quality of the craftsmanship was of the highest order.\n\n\"It is as they claim. There is only food, medicine, and fresh water.\" One of the soldiers called out to his superior.\n\n\"Search it again and find something this time.\" The man with the scar and eyepatch demanded.\n\n\"Yes sir.\" The soldier replied unhappily.\n\nThe caravan came to a halt and the truck was unlocked and the back opened. I half hoped the X-Men were inside so we could perform a crazy off the cuff rescue mission. There were people inside, but they weren't the X-Men. The cargo was young beautiful women. None of them were less than an eight on the holy shit scale of beauty. The youngest looked to be in her late teens and the oldest mid-twenties at best. At least he keeps his women in the legal range. I grabbed Nightcrawler and MJ and directed a series of teleportation jumps following the women from the truck. We ended up in the lower portion of Doom's palace. We snuck behind the guards to a communal shower for a scene that will go in my memoirs. There were eighteen of them and I savored every second of the group shower.\n\n\"Will he choose me?\" One of the girls asked another. Her long raven locks cascading down her back to an ass that would haunt my dreams.\n\n\"If you are lucky.\" The other replied. She was a gorgeous blend of Slavic and Grecian blood lines. \"I hear those he doesn't choose are sold off to slavers.\"\n\n\"No!\" Another girl began to weep hugging her arms around the finest breasts I had ever seen. \"I don't want that. What about my family?!\"\n\n\"Think about yourself first.\" One of the older gals suggested. \n\nI felt like shit now. While I still lusted after every one of them, I felt I should try to help them. \n\nWe had two groups to rescue. The girls dried off, donned revealing costumes, and were one at a time taken into the presence of Von Doom. I knew it was a bad idea to split up, but I needed to know what Doom was up to and someone needed to free the X-Men. \n\n\"Find them, but don't free them without me.\" I whispered in Nightcrawler's ear. \"Don't take them on alone. Promise me.\"\n\n\"I promise.\" She agreed reluctantly. \n\nWe split up. They went deeper into the dungeons and I followed the parade of beauties. The throne room reminded me something out of Arthurian mythology with the singular seat for Viktor while his minions stood on either side at his beck and call. Mystique was at his right-hand side and on the left the other two members of M3, the archer and the swordswoman. I mentally cursed that their identities were still hidden behind ornate masks. A thousand or so of Doom's elite troops were at attention as the women walked in one at a time. I teleported to the top of one of the ten stone columns that held up the massive arched room. I was close enough to hear Viktor speak but not in a direct line of sight.\n\n\"Yes. A fine selection today.\" Viktor commented as the buxom brunette sashayed up to the tyrant. \"Who wants to tell me about this one?\"\n\n\"I will Milord,\" Mystique chimed in. \"I chose her not just for her looks but her stunning intellect. With the proper education and training she will make a formidable addition to Project Regress.\"\n\n\"That is high praise indeed!\" Doom replied in his dull metallic voice. \"Impress me girl!\"\n\nMystique nodded and the dark-haired beauty bent forward, grabbed her ankle, and stood up straight bringing her left leg upward into a standing split with no sign of discomfort at all. Damn! That impressed the hell out of me and apparently Viktor as well. He had a better vantage of her than I did.\n\n\"She's a keeper. Send her to my harem.\" Doom ordered. \"Next!\"\n\nSix of the girls were brought before Doom and he only chose one of them, the first girl. The seventh girl was on her way up when pandemonium took hold of the throne room. The first blast of plasma struck Doom's captain of the guards in the side of the head killing him instantly. Two more identical blasts struck other key individuals including the swordswoman. She only survived because she had used Iaijutsu and quick drawn her Vibranium sword and absorbed the blast into the exposed blade. Panic and hell fire ensued after that.\n\n\"How dare you!\" Doom roared as I teleported behind Doom's throne so I could see where the other players were firing from. \"Kill them... kill them all!\"\n\nThey never revealed themselves as the butchering began. Cloaked deep in shadow I clung high up on the wall and watched the carnage unfold. Doombots flooded the room as soldiers tried to flee the killing ground. The Archer drew her bow and fired in one elegant motion. I knew she was a villain but still it was a thing of beauty watching her at work and not being the target for once. The unlucky recipient learned far too late not to use energy weapons against a vibranium arrow. The missile absorbed the plasma and discharged it inside the corpse as it fell towards the stone floor. It never hit the floor. I wasn't going to let Doom get ahold of any of these guys if I could help it. I teleported the body to Snow's tower.\n\n\"Who?!\" Doom raged as he brought up his fist and aimed at one of the two remaining assassins. \"Who stole my prize?\"\n\n\"I don't know.\" Mystique said as she looked over her shoulder and right at me. She winked and then fell to the ground as Doom shoved her out of the way of a lethal bolt of energy.\n\n\"Keep your head in the battle woman!\" Doom chastised her.\n\nMystique's rage was something to behold. Her hands traced mystical runes and a sorcerous dome formed around the throne that allowed attacks outward but repelled incoming attacks. The two assassins fled the field and so did I. I sought out MJ and teleported to her side. Now was the time to free the X-men. Confusion was at a maximum and Doom would be focused on the assassins and not his prisoners.\n\n\"Thank goodness!\" MJ squealed in delight. \"We found them and there are only five guards on watch.\"\n\n\"What's the plan?\" Nightcrawler asked.\n\n\"This!\" I said as purple energy collected at my fingertips. I lashed out with Force lightning and stunned the five guards and dropped them like flies. \"Time to go!\"\n\nNightcrawler teleported us into the cell holding the X-Men. I opened a portal to the site of where we found the first backpack of supplies. I felt bad about the women but right now we had more important things to work through. Once outside the confines of the city we huddled close and I covered us with a dome of invisibility. While they might have been prisoners, they hadn't been idle. Kitty Pride, whose ability allowed her to pass through physical barriers, had scoped out the palace and even managed to place an interface in one of Doom's main security hubs. Our momentary retreat was the beginning of a much larger assault on Latveria. I learned that Doom had successfully stolen enough Vibranium to cause mischief for decades if he chose to do so.\n\n\"Thanks for the rescue.\" Professor X exclaimed. \"I need you, Scott, and Logan to take on a most difficult task. These assassins, as Doom calls them, need to be identified and captured if possible.\"\n\n\"I don't think that is going to be possible.\" I said and I told them about the assault on Doom's throne room. \"Just three of them killed or injured dozens of heavily armed men and doombots. They don't take prisoners sir.\"\n\n\"Ghost is right,\" Logan stated backing me up. \"Charles, I know you don't want to hear this, but we don't have a choice. I'll go alone if I have to.\"\n\n\"No! I think our skills make for a formidable team.\" I offered.\n\n\"Scott?\" Logan asked. \"I'll understand, we'll all understand if you sit this one out. There is no shame in not wanting to take a life.\"\n\nI nearly dropped the protective shield when something plopped onto my head. I heard a strange purring sound near my ear and that is when someone called out to the group.\n\n\"Has anyone seen Lockheed?\" Kitty Pride asked and she giggled when I felt the small flying reptile rub its head against my cheek. \"Naughty dragon,\" She lightly scolded her pet. \"He doesn't like most people. He just ignores them, but for some reason he has really taken a shine to you.\"\n\n\"I guess I just have animal magnetism.\" I said as a brief flashback of my time at the bar with Loki jumped into my head.\n\n\"I'm staying back.\" Scott Summers AKA Cyclops decided. \"I'll help protect the team.\"\n\nLogan produced a digital map of the places where the assassins had struck, and we headed for a small town Viktorsburg where they seem to cluster around. I wrapped us in shadows as we jogged through the undergrowth. I wasn't a killer by nature, but someone needed to stop these things. I could have teleported us to Snow's tower to examine the corpse of the one killed by the Archer but somehow that felt like cheating. \n\nIf the X-Men were just one strike team near or inside of Latveria something bigger than just murders and Vibranium thefts were in play. When the time came, I'd ask Logan if he knew what was going on. First, we had to track down and take out the last two assassins. Logan launched into a brief narrative at this point, a very informative one.\n\n\"I fought in Vietnam; did you know that?\" He began. \"The heat was worse than this during the summers. I always suspected it was the conflict that drew them there, that and the blistering heat.\"\n\nA light fog settled into the area. We both stopped in our tracks and I mouthed the name Storm. Logan shrugged as the thin streams of fog quickly thickened forming clouds and swiftly filling the immediate area. \n\n\"Logan?\" I whispered and the fog seemed to dampen my voice. \"Where are you?\"\n\n\"Ghost?\" He called out but it sounded like it was from a great distance.\n\nI moved towards the last spot he was standing. He wasn't there. I fought down the panic. It felt like the Negative Zone but in reverse. In the Zone the unending view had been disturbing. Now I was faced with complete obfuscation and a dull gray environment. I tried to tie into the shadows but there weren't any. The fog obstructed my power. I suited up and activated the stealth features. I had to hand it to Shuri the light bending qualities of the suit adjusted to the fog. While I was invisible my movement wasn't. Whenever I moved the fog rolled around me. I was trapped. I knelt to create a less obvious target and looked at my options. This strange fog wasn't Storm's doing. This had to be the assassins at work. I thought about Logan and his story. He had been a soldier. Maybe that might help me. I got onto my belly and crawled hopefully disturbing the fog less that an upright figure would.\n\n\"I need to find a way of using this to my advantage.\" I whispered. \"Hell, even the fog is hot!\"\n\nI heard a twig snap and froze. There was movement in the fog off to my left. The muted call of a woodpecker sounded from that same direction. It was bulky and bipedal whatever the hell it was. Its own camouflage keeping it invisible, but the fog rolled off it was giving the impression of a linebacker. Where are you off to big boy? I waited until I was behind it before moving. A little way later a large tree blocked my path. I made sure the tree was between me and the cloaked figure. Well, it was best guess at this point. I climbed the tree slowly. I forced myself to maintain a snail's pace so that I didn't give away my position. My heart was pounding in my ears as I reached the upper limit of limbs that could support my weight.\n\nI scanned the fog below me. There was little wind to disturb it so that any swirling was either Wolverine or one of the assassins. How the hell could I know the difference? I reached out again and this time I could finally tap into the shadows, but they were all tree top level. The fog was no man's land. A roar of rage that was human filtered out of the fog. This was followed up with a bright flash of an energy weapon. I reached out and found a tree near the spot where the light had manifested. I risked the teleportation. The tree creaked a little, but no lethal energy leaped out of the darkness or fog to strike me down. I climbed down slowly smelled spilt blood. I fought down the hunger as I found where Logan had been wounded. I picked up the broken tree limb and touched several blood drops and licked my fingers clean. The rush of Logan's healing factor hit my bloodstream like triple expresso. \n\n\"What the hell is that?\" I asked in a hushed voice.\n\nI crept over to the faint blue-green illumination. It looked as if someone had broken a glowstick, but the scent was blood. It was the assassin's blood. The hunger overrode my squeamish side. I took the leaf stain with the blood and licked it. A kaleidoscope of colors, images, and sounds hit my optic nerve and brain. Whoa! Not human and not a mutant, this guy was an alien. I had his blood and now I had his scent. I sniffed the air and followed the wounded being into the fog. They had injured each other, and I knew Logan would heal over time would the alien? As I tracked the assassin I went through the extensive list of aliens in the Marvel and Star Wars universe. Sadly, I couldn't remember that many of them. Did Skrull blood glow? They were gifted shapeshifters and that might account for their ability to move unseen.\n\nThe droplets were lessening as the blood clotted. I halted when a several of the drops pooled on a large stone protruding from the grass. I froze in place when a sudden memory came to the fore. The drops were round. I remembered from one of the forensic shows I watched that round drops form when someone is hurt, and they are standing still. I slowly tilted my head up, but the damn fog obscured my vision. He or she was right above me. I tended to think of villains as he. The battle with the trio of female dark elves had cured me of that. There had to be a tree nearby and my foe was perched on one of its limbs. If I had gotten a copy of Logan's map, I would be far better off. I resumed crawling until I reached the tree. The ancient oak had to be a hundred years old or more. I climbed the back side of the trunk looking for more of the bioluminescent blood.\n\nThe sudden roar of pain took me off guard. I nearly fell off I was so startled. I was close and peeked to the other side of the tree. I spied its silhouette and took out my dagger. I was ready to throw when Logan's voice cut through the silence.\n\n\"Hey ugly, yeah you! You are fucking weak!\" He shouted in challenge. \"Come on down and let's dance! You know how to dance don't you?\"\n\nThe assassin growled and leapt from the limb. Damn! I crawled to the spot where the assassin had sat and found what looked like a first aid kit. I took it for later examination. The clash of metal on metal got my undivided attention. The Wolverine's claws clashed with those of the assassin's blades. They were strong enough to resist adamantium and appeared to be mounted on the forearms of his foe. My brain hurt as I tried to go through the humanoid aliens and came up empty. There was another assassin out there but he or she appeared to be waiting on the outcome of the battle. I reached out through the shadows and found him. He was squatting and leaning forward. He must have been the bulky figure I saw earlier moving through the fog. He was at least a head taller than the one fighting Logan.\n\nI had to take my chances. I drew out the dark elf sword and took that in my left hand and settled the dagger into my right. I took aim, held my breath, and let fly. The dagger hit him like a truck. It struck the right side of his chest and crushed ribs and burst internal organs. I plucked the dagger back and it quietly teleported back to my hand. The dark elf dagger's blade was covered in shimmering blood. I licked the blade clean and felt the ever-present hunger die away. I teleported to the corpse and looted it with glee. Only then did I see what race I was dealing with.\n\n\"Holy fucking shit!\" I cursed as I saw the gnarly face of the Yautja warrior.\n\nThe air lit up below as the plasma blast lifted Logan off his feet and seared his chest cavity. The shoulder cannon fired a second time once the mutant hit the ground. It all made sense now. The heat. The conflict. The way they moved unseen in a country like Latveria. I sent my dagger flying downward and struck the Predator's cannon disabling it. It roared and ripped the damaged weapon from his shoulder. I teleported back to the other tree and waited. It was gone. What do they say about a wounded animal? What about a wounded Predator?\n\nAll the clues that had been laid out by Mystique and the press blasted back to the front of my mind and I cursed silently. Of course, it had to be them, and I felt like an idiot. That said, I got lucky and now the last of the three was free to hunt me. I had to tend to Logan first though and that put me at a disadvantage. I reached out with telepathy to see if I could detect a living mind out there. Nothing. Either they were immune to telepathy or he was out of range. If I was him, I'd lick my wounds and come back harder than ever.\n\n\"Logan?\" I whispered as I examined him. He was alive if barely. \"Takes more than two point-blank plasma blasts to kill you. Let's see if this will jump start your healing factor.\" I said as I cut my wrist and bathed his wounds with my blood. \"Sorry, I need you on your feet.\"\n\nThe wounds closed and Logan took a deep breath before his eyes snapped open. Logan snarled and leapt to his feet. His eyes locked on me and then he sprang away into the fog without a word. Damn it Logan! I couldn't lose him again. I raced off blindly behind him. I lost him as he raced ahead of me. I stopped since it was futile to continue like this. The rage that had accumulated reached a flashpoint. I brought my hands up and screamed. \n\n\"Fuck this god damn fog!\" I howled and brought my hands down. I was at the epicenter as the wave of kinetic energy rushed out dispelling the fog. I smiled. \"That's more like it! Come on out you ugly motherfucker! Face me!\"\n\nI selected the dark elven sword and gave it a few tentative swings. I armed the dagger in my right hand. I was about to call him out again when he stepped into the moon lit clearing. The double snick of him arming his wrist blades announced the beginning of our duel. We raced at each other and damn it felt good to fight a worthy adversary. I felt the smile curl my lips as our blades clashed. He was a wonderful duelist and tactician. We were decently matched, and I drug out the conflict. I didn't need to, but I wanted to savor this battle. This wasn't the one I had fought earlier. He had been far better than this guy.\n\n\"I am better than you!\" I growled as I traced a wound across his chest. The Yautja roared knowing he was going to lose. \"I am going to take your fucking head and mount it on 'my' wall!\"\n\n\"Fuck you... motherfucker!\" He snapped in his broken English. His tried to activate the device on his forearm when I ended him. The sword blade pierced his heart and dropped him in his tracks.\n\n\"Yes!\" I said and I looted his body as well. \"Shuri is going to lose her shit when I show up with this stuff!\"\n\nIrk!!\n\nI cried out when my back slammed against the nearest tree. The sharp metal webbing had me incased and was tightening by the second. I stared helpless as my dagger lay on the ground. I still had the sword though. I managed to bring the cutting edge against the netting. I grit my teeth and tried to push. I was shocked when the scene froze, and a small window showed up.",
        "'Spend magic point into blade? Y/N? Points available 20.'\n\n\"Yes, damn it,\" I growled. \"Let's see what two points can do.\"\n\nThe blade erupted in a shroud of dark energy. The mechanism winding down the net forced the blade to slice through the netting. Freed, I brought the blade up defensively waiting for a blast from one or more shoulder cannons. In that I wasn't disappointed. The whine of an auto cannon could be heard, and a blistering hail of energy bolts struck the area. My arm moved on its own as I began reflecting the bolts that would have struck me back at the attacker. With a high-pitched howl of anger the attack ended and I crumpled exhausted to the grass.\n\n\"Damn impressive,\" Logan muttered as he stood above me. \"What the hell were those things?\"\n\n\"Aliens.\" I gasped as my stamina bar flashed and slowly regenerated. \"I over did it.\"\n\n\"I got your back bub.\" He said smiling as I rolled onto my back and looked at my inventory. \"Yautja. They are hunters by nature. What the hell?!\" I cursed seeing a quest item listed under the Predator's equipment I had scavenged. Two of three acquired and that had me baffled as all hell. \"Listen, I need to pop off for just a moment. Can you sit tight until I get back? Please.\"\n\n\"It is okay. I am used to Nightcrawler disappearing on me. I'll be right here.\" He said.\n\n\"Thanks Logan.\" I said as I fast travelled to Snow's Tower. \n\nI found the corpse of the Predator that the archer had killed. His chest was a burnt-out ruin. I plucked the arrow out of the wound and decided to keep it as a trophy. I removed his gear and my HUD dinged cheerfully. I had all three of the items I needed but no quest was actively attached to them. I guess I would just have to be patient. I had barely scratched the surface of Latveria after all. I placed the arrow into a display case and sealed it. I was heading for the mirror to return to Logan when I noticed the body of the Yautja still in the hall.\n\n\"Would you like to activate an undead guardian?\" The evil queen whispered from the mirror.\n\n\"Guardian? Oh shit, you mean the Predator! Hells yes! Activate away!\" I laughed.\n\nThe wound closed and brand-new equipment and armor adorned his body. Only the empty dead eyes hinted at his real nature. Sweet! Good luck raiding this place. I used the mirror to return and was eager to track down the other three Predators, or were they Super Predators? Now, that would be fucking epic! Had I dueled one of the Super Predators that first time? It made sense. I returned to the sweltering woods to find Wolverine puffing on a cigar.\n\n\"I'm back,\" I said. \"Let's go find... what?\"\n\n\"We are needed back on the helicarrier,\" Logan declared.\n\n\"X-Men return.\" Jean Grey's mental voice announced. \"Oh, and you too. I have mentally designated your teleport location. Can you see it, nice and shadowy?\"\n\n\"I...\" I muttered as I closed my eyes and followed her telepathic trace. \"Got it!\" I said.\n\n\"Bring along a specimen if you please.\" Jean asked politely.\n\nI grabbed the Yautja by the ankle and lugged him over to where Wolverine was standing. I gave him a glance and he nodded. I placed my free hand on his arm and once more reached out to the location chosen by Director Grey. The teleport was smooth for hitting a moving object at an altitude of 35,000 feet. I opened my eyes and flinched. She had lied to me. The area was so well lit there weren't any shadows.\n\n\"How the bloody hell did I...?\" I cursed as Jean rushed over and hugged me. Logan let out a disapproving growl until she spoke.\n\n\"You did it!\" She gleefully squealed. \"I knew you could. Steph was right! You have been limiting your powers!\"\n\n\"I don't fucking get it,\" I snapped and then apologized. \"Sorry Director!\"\n\n\"It is Jean, please. Logan, report for debriefing. I need your insight on the situation down there.\" Jean ordered. \"I am not finished with Ghost yet.\"\n\n\"Of course,\" he growled as he chewed on his stogie and headed out. He stopped, flipped a coin in my general direction, and then left the laboratory. \n\n\"He is so damn possessive,\" Jean stated once the Wolverine was out of ear shot. \"You let a man do things and they think they own you.\" She growled and I raised an eyebrow. \"Later. Over sharing... over there,\" She stated pointing at two metal cubes. \"One of them is perfectly dark, while the other is well lit. If you can tell me what is inside them, I will let you keep the contents.\"\n\n\"Don't take this the wrong way, but what the hell is your game?\" I snapped at her angry at being lied to.\n\n\"I understand why you are upset. But trust me I'd never let anything happen to you.\" Jean said leaning close.\n\nSlap!\n\n\"Now quit your bitching and listen. You are only utilizing a third of your potential. You may prefer the shadows, but the light and dark have benefits as well.\" She laughed. \"Get to it!\"\n\n\"Yes Jean. I got it.\" I replied rubbing my cheek.\n\nI closed my eyes and thought about a dazzling sunlit day. I imagined a bright summer afternoon by the beach and sunlight sparkling off the water. The container on the left drew my attention and within a gleaming amethyst jewel. \"I see an amethyst.\" I told her and then reversed my thinking. I imagined the time I went spelunking. We reached the very end of the cave and turned off our lights. The darkness was absolute. At first your brain tries to make something out of the stygian abyss, and you see spots but, in the end, there is nothing. \"Something is moving, an inky mass that keeps shifting and changing.\"\n\n\"I knew it!\" Jean clapped gleefully. \"Don't you see? You even told Steph that you possess a great understanding of light and darkness.\"\n\n\"I do now. Thanks!\" I said and I felt like crap for getting angry.\n\n\"You are welcome,\" Steph said, and I opened my eyes. She gestured and both boxes opened and inside were the objects I had seen in my mind's eye. \"What are they?\"\n\n\"The jewel was taken off an illegal alien. He was trying to smuggle it to a buyer here on Earth.\" Jean explained. \"She called it Revan's Respite. I suspect it would function inside an energy sword. The other was taken from you while you were sleeping with Steph and Bryce. It is your dark elf A.I. Someone offered to upgrade it.\"\n\n\"Someone. Who the hell was tinkering with my property without my permission?\" I asked a little miffed.\n\n\"Me!\" Toni Stark declared as she walked into the room with a dramatic flair. \"I have to give it to your people; they know how to make things that last. I reprogrammed it and it is a second home for your A.I. Traci.\" She stated unapologetically. \"I've never slept with a dark elf before.\"\n\n\"Stark!\" Steph snapped. \"We have real issues to deal with.\"\n\n\"We need to stop Doom before he realizes his goal.\" Jean added.\n\n\"What is his goal exactly?\" I asked.\n\n\"We don't know yet. He has enough vibranium for any number of projects.\" Jean stated.\n\n\"How the hell did he get it?\" I asked as Shuri made an appearance. \"Princess.\" I greeted her looking out at the hallway to see if anyone else was waiting for a dialogue cue to enter the lab. There wasn't.\n\n\"You remembered.\" Shuri giggled. \"Doom has connections worldwide and the other shipments, legitimate ones, were spread out over years.\"\n\n\"Worst case scenario?\" I threw out for a general discussion.\n\n\"A Vibranium power plant at least.\" Shuri stated. \"With that much power, who knows.\"\n\nIt devolved from there. I sat as the geniuses of tech and magic tossed out theories of all kinds. Bored and out of my depth I took the gem from its box and held out my hand so that 'Traci' with a little t could slither up my arm onto my shoulder. \n\n'How do you like the new peripheral?\" I asked.\n\n'It is interesting. I am not used to being able to move about on my own. I like it.' She stated. 'What's the plan?'\n\n'We sneak into Doom's castle, figure out what the hell he is up to, and stop him somehow.' I sent silently.\n\n'As sound as anything else.' She replied. 'How can I help?'\n\n'Can your new form mimic jewelry?' I asked. Traci took on a fluid state and slithered snake like to my wrist and took on the form of a serpentine bracer. 'Perfect. Stay like that unless something happens, or I tell you otherwise. I trust your judgement.'\n\nThe Exomorph burst in with a red face Natasha. The Black Widow followed the animal to my side. Instinct took over and I scanned Natasha's thoughts and found no shield. She was the genuine article. When she detected my presence, her eyes narrowed, and she cursed under her breath.\n\n\"Again?! Damn it!\" She cursed softly.\n\nI sat on the floor, loved on the Exomorph, and promised her we would stick together. I needed her help taking out the other Predators. It could be as few as one or as many as three more lurking in the forest outside Viktorburg. Even as I planned how to locate and eliminate them, I was derailed.\n\n\"Ghost!\" An accented voice called out as a cloud of smoke appeared around me and a giddy blue skinned teen manifested in my lap with a soft popping sound.\n\nBamf!\n\nNightcrawler hugged me by the neck and an excitable Exomorph placed her from paws on the floor next to me.\n\n\"I was so worried about you!\" She said as everyone watched the exchange. \n\n\"Katja!\" Natasha called out her Russian accent coming to the fore.\n\n\"What do you want Natasha?\" Nightcrawler asked.\n\n\"Ghost needs to be debriefed and filled in on his part in the assault.\" Widow snarled.\n\n\"You are just jealous,\" Nightcrawler fired back and she kissed me. \"MMMMM!\" She moaned as she ground against me openly in front of the others.\n\nWhat the hell brought this on? I kissed her back but successfully fought the urge to cup the teen's firm young ass cheeks. Katja broke the kiss and flipped off Natasha before teleporting away. Instead of slapping me or getting angry she walked over to Shuri and called her out.\n\n\"That was all your doing, wasn't it?\" Widow asked.\n\n\"Poor Widow,\" Shuri began and I knew that she had been behind it. \"Even the poor mutant is bolder than you are.\"\n\n\"Now hold the... MMMMMM!\" Widow dove into my arms, kissing me, and knocking my flat. I held onto Natasha as the kiss deepened.\n\n\"I missed you!\" She growled in my ear once she broke the kiss.\n\n\"I missed you too!\" I said. \"Once I knew it was you.\"\n\n\"That bitch, this is all her fault... first she keeps pretending to be me and then she brings down the damn black bird with you on board!\" She ranted on the verge of screaming.\n\n\"Whoa! Hold on! What do you mean she brought the plane down?\" I asked and that's when I learned Mystique had planted a transponder on me at the bar. \"That clever bitch! I feel so damn stupid. Of course, she did. She had to prove her loyalty to Doom by tagging me.\"\n\n\"You don't sound angry,\" Natasha said slowly rubbing her hips against me.\n\n\"You are as bad as Katja,\" I whispered in her ear. \"No, I am not angry. I am sorry about the jet though.\"\n\n\"S.H.I.E.L.D. will replace it,\" Natasha promised. \"They always do.\"\n\n\"What is going on?\" I asked but Shuri's bracelet drowned all the conversations going on around the room. \n\n\"We have a tactical alert!\" Shuri cried out in alarm. \"Everyone to their Omega level stations!\" She continued as she touched her necklace and her Hidden Panther armor was activated. \"Ghost with me, now!\"\n\nNatasha and I disentangled and split up. The Exomorph and I followed Shuri. She had switched to her native language and thankfully Traci translated on the fly.\n\n\"Doom has activated a Vibranium power plant. He is powering up machinery and we need eyes on the ground. Suit up and get going!\" She ordered. I crouched down and looked the Exomorph in the eye. I touched her thoughts and placed an image of Shuri there.\n\n\"Protect her and my friends... please!\" I said and the beast let out a growl. \"Time to test my limits.\"\n\nI pulled down my HUD so I could select which armor skin to use. I swiped to my armors and found the three Yautja suits there. One of them had a shimmering icon above it. I selected it and to my utter delight it had a combine option. I went through my other suits and the only one I could combine it with was the brand-new Mark III vibranium armor.\n\n'Merge/Combine? Y/N.'\n\nYes. I selected and the new suit became available. I activated it and everything changed. I now had a tactical display with my HUD displayed at the top border. This was made for combat not just defense and that was clear. I ran through the available weapons and they now had a distinctive Yautja skin to them. I brought the shoulder cannon online and a triangular reticle was displayed in my field of vision. \n\n\"What the hell are you wearing?\" Shuri asked. When she spoke, an oscilloscope dropped down on the left-hand side of my HUD. \"Where did you get that?\"\n\n\"Off one of the creatures in the forest.\" I explained and she took a step back.\n\n\"When did you learn to speak Wakandan?\" She asked her lip quivering.\n\n\"It is the armor.\" I replied trying to hide my excitement. \"It has a translator built into it. Time to test it out!\" \n\nI activated the stealth feature and the display switched to a thermal view automatically. I used the optical mouse and selected spectrum options. There were three dozen to choose from. I selected human standard and readied myself to teleport to the surface. I shut down the cannon, closed my eyes, and focused on Doom's throne room. I remembered the spot on the wall up and behind his throne. I felt the familiarity of it and nudged myself forward. \n\nI clung to the wall and found it empty. Most of the damage from the prior Predator attack had been repaired. A few blood stains remained, however. Where the hell was everyone? \n\n'Scan?' \n\nThe option appeared in my HUD. I selected it and different spectra swiped across my field of vision. One of them showed the remnant of footprints. I halted the scan and began tracking the last person to leave the throne room. I climbed down and followed the prints. \n\n'Traci, are you online?' \n\n'Right here boss man! I love the new armor, sleek and sexy.' She replied.\n\n'Any data available?' I asked as I prowled the halls of Doom's palace.\n\n'Tying into interface,' she intoned. 'Holy shit!'\n\n'What is going on?' I asked as I rounded a corner and six doombots guarded the hall. 'Let me guess... whatever it is, is down this hall.'\n\n'Yep. Some kind of portal is about to open, I am having issues with determining what kind of gate it is. I'll keep on it.' Traci stated quite determined.\n\n'Let's see what this cannon can do.' I growled as I activated it. The targeting sight popped up and I was able to paint each doombot before initiating my attack. I fired. The blast hit true and dropped the first robot and triggered an instantons response from the others. \n\nThe green and silver drones fired a volley of energy bolts. I dodged and raced along the wall far quicker than I was used to. The cannon was devastating in such close quarters. I popped the wrist blades and waded into them. The first four went down like bowling pins. The last two were a bitch. They had adapted to the energy weapon and wrist blades. They were now sporting force fields and melee weapons. \n\nThat was damn quick, I thought as I took on the two of them. While I was invisible and standing still, they seemed unable to target me. The moment I moved they were on me. One of them was enough to keep me busy so the second robot was able to attack me while pinned down. I cried out when its blade pierced my side and slid between two ribs. It didn't use its energy weapon when the other doombot was so close to me. My only hope of survival was to keep them close and have them unable to attack me at the same time. Once I was within hand to hand range my shoulder cannon could fire unhindered because I was within its forcefield.\n\nBlam! \n\nThe blast tore the head off the doombot taking it out. The remaining robot closed ranks and the wound on my side slowed me down, but it had made a critical error. It had attacked my right side thinking I was right hand dominant. I wasn't of course. I am a south paw. I slammed the left wrist blade into the cranial cavity of the doombot destroying its primary control center. Before I could finish it, a second stab pieces my chest, this time near my unbeating heart. I screamed as I targeted it. A blast from the shoulder cannon ended it and dropped it to the floor.\n\n\"Double tap mother fucker!\" I growled as I waited for my healing factor to finish healing me.\n\nI moved to a defensive position and waited. Precious time was lost as I healed. When I was back up to half my health, I decided it was time to act. I reached the end of the hall. My danger sense was screaming so I leapt to the ceiling, clung there, and used a telekinetic blast to open the door. They unleashed holy hell for a full ten seconds. \n\n\"Come on out.\" A synthesized voice demanded as the whoosh of power could be heard from the space beyond the door.\n\nI crawled to just above the door and inverted my body before sticking my head out. I was still camouflaged and took in their positions. M3 was there as were at least twenty doombots. The drones were sporting forcefields and melee weapons just like the last two I had taken out. They must be connected by a hive mind or collective. It was suicide attacking them directly. I did want to find out who the hell the other members of M3 were. Giggling, I yanked their masks off the archer and the swordswoman. I didn't recognize either of them, but it wasn't like they were a matched set. The archer was a cute redhead and the gal with the sword was Asian, probably Chinese.\n\n\"Naughty.\" The archer called out as she brought her bow up. \"Stick your head out so we can end this.\"\n\n\"Coward!\" The swordswoman growled.\n\n\"Just a little longer!\" Doom roared as the machinery reached full power. \"At last! Hold them off as long as possible!\" Viktor ordered as he stepped through the open portal.\n\nDamn it! No more fucking around! I gestured and knocked the doombots to the side with a Force push. I was about to fire the cannon at the swordswoman when the chamber was filled with X-Men and S.H.I.E.L.D. agents. Leading the assault were two figures in Black Panther armor, one male the other female. Right at Shuri's side the Exomorph guarding her closely. I laughed and cursed, now they fucking show up! Chaos ensued as I dropped down and Traci filled me in.\n\n\"It is a time portal!\" She declared in my ears. \"He plans on stealing the Vibranium meteor that struck Wakanda. He has a tractor beam to pull it off course.\" Traci explained.\n\nI had two decisions. One, I helped them take out M3 and the doombots. Two, I take on Doom and Mystique and stop them from stealing the greatest treasure in history. They couldn't be allowed to change history for their own profit. I headed for the gate. \n\n'Jean! The gate is a time portal. Doom wants to steal the Vibranium meteor! I am going to try and stop them!\" I explained as I sprinted forward.\n\n'Susan? Jennifer? Morya? We could use a little help right now. Guys?' I called out but couldn't feel their minds. 'Traci, where the hell are they?'\n\n'The Ghost Dancer is not in orbit,' she stated. 'I cannot detect their presence.'\n\nI was nearly at the gate. One last look at the battle before the gate.\n\n'We'll be right behind you!' Jean sent. \"Be careful...'\n\nOne Week Later: Shi'ar Space - Sector 021.263.475\n\nThe ship appeared out of nowhere. Its cloaking device activated microseconds later. The trio inside shouted out in triumph. The pilot plugged in coordinates for their destination and fired up the FTL engines. The Shi'ar heavy cruiser Mal Ankht exited the nearest jump point searching for the unauthorized alien vessel. The Ghost Dancer was already long gone but remnants of its unusual arrival remained behind. The captain of the Mal Ankht scanned the region looking for the cloaked ship and found more than she ever expected.\n\n\"Are you sure about your readings?\" She asked the tactical technician.",
        "\"I have already checked my findings three times Captain. There can be no doubt. It is a rupture in time/space and is closing as we speak.\" He said his eyes wide with surprise and excitement.\n\n\"Send a message to the Empress, tell her... tell her we found it!\"\n\nThe Ghost Dancer sped through hyperspace as the crew celebrated their success. The bottle of champagne had been set aside for just this moment. They had done it! Beyond all odds they accomplished the nigh on impossible. Susan Storm, the invisible woman, held up her glass and toasted to their good health and to seeing the expression on his face when they got back.\n\n\"How long until we reach Midgard?\" She asked Morya, the dark elf copilot.\n\n\"Nearly a solar cycle, twenty-three hours in human reckoning.\" She replied. \"I had placed the odds of success below the one percentile.\"\n\n\"Yeah, but we didn't do this for us... we did it for him.\" Jennifer declared.\n\n\"Speaking of him, where is he?\" Morya asked.\n\n\"Last update we got they were storming Von Doom's palace. If I know him, he'll be in the thick of it.\" Susan chuckled.\n\n\"No shit!\" Jennifer laughed. \"So... what should we do once we finish this bottle?\"\n\n\"I vote for Bark at the Moon.\" Morya purred.\n\n\"Interesting choice,\" Susan replied with a grin. \"I counteroffer with Bound to Please.\"\n\n\"Ooh, two great choices,\" Jennifer giggled mischievously. \"I vote for both.\"\n\nTwenty-three hours and five minutes later.\n\nThe Ghost Dancer leapt out of hyperspace near the orbit of the Earth. Still cloaked its arrival was undetected by those below. Susan contacted Director Jean Grey and received the news. Ghost Fire was missing, and the time portal was still open.\n\nFade to Black."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "public",
        "oral",
        "oral sex",
        "celebrity",
        "celebrities"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-06"
}