{
    "title": "Still Wet From Her",
    "pages": [
        "This is my entry for the \"Love the One(s) You're With\" CV19 competition, May 2020. All characters above the age of consent -- and sadly completely fictional. The subject matter is somewhat new territory for me, so fingers crossed. As ever -- votes and comments are very welcome.\n\nMy divorce was finalised a few weeks before the lockdown.\n\nUp until that moment my ex-wife had probably been congratulating herself on the outcome: she got the house in the city and I got the much more modest and rather run-down cottage in the countryside. But if you were looking at weeks in isolation, I was very happy with where I was. It was fairly remote, for one thing, with just a sprinkling of other dwellings around. I had plenty of land, so if things did turn really bad, I could at least grow a few vegetables and maybe even keep some chickens. And I could exercise relatively often with minimal risk to myself and those around me - long rambling walks or runs in the countryside, sometimes taking slightly more than the approved government \"hour\", but I was pretty sure nobody was keeping tabs.\n\nThe few people I met when out and about nodded politely at me and occasionally we exchanged brief pleasantries. \"Strange times\" was the phrase I tended to hear most, and it was hard to disagree with that.\n\nI'd been worried about food supplies, but soon found that a number of local farm shops had started offering delivery services. Once a week I received a box of fresh fruit and vegetables, some bread, some milk and a dozen eggs. Financially, although I was smarting from the divorce, I was in a better position than many. I was self-employed, able to work from almost anywhere, and most of my clients seemed to need my consultancy services at least as much as they did before the crisis hit. I had never minded being on my own, and I had already done my mourning for my marriage long before the paperwork had been finally finished. In a selfish way I relished the newness and strangeness of it all.\n\nSo, yes, I had nothing really to complain about. But as the days turned into weeks, and the weeks, amazingly, into a month, I realised I was more than a little tired of my own rather limited cooking. There was no chance of Deliveroo out here, for sure, but I thought perhaps I could find a local pub or restaurant within a short drive that was offering a takeaway service, even if from a limited menu.\n\nI found several, but the one that was closest was a wedding caterer who said they were now offering a limited delivery service in my area. Their website was a bit sparse on details but I thought I'd try them.\n\nThe lady who answered the phone sounded rather harassed, but I liked her voice. Clear and well-spoken but with a hint of sensuality.\n\n\"Sorry to ask, but are you vulnerable or elderly? We're putting them at the top of the list, you see.\"\n\n\"Certainly not vulnerable,\" I said. \"I'm probably elderly compared to you, I suspect.\"\n\nShe laughed at that. \"Good job you can't see me then! But flattery isn't going to get you anywhere, I'm afraid.\"\n\n\"I understand. Well... best of luck to you. I'm not far away, so if you ever expand your vulnerable list to include bad cooks living on their own who are tired of poached eggs, perhaps I could leave my number?\"\n\nShe laughed again. \"Yes, I think we could do that.\"\n\nAfter she took my number and rang off I found myself smiling. As limited and basic as it was, our very mild flirting had been enjoyable. But I didn't expect I'd ever speak to her again. I found another restaurant in a local village who did a takeaway service, and I booked a meal that evening with them instead.\n\nIt was when I was returning with my food that my phone rang. I hastily pulled the car over and answered.\n\n\"Is that the bad cook who's tired of poached eggs?\"\n\n\"It is! Is that the nice lady with the very youthful voice?\"\n\n\"Ha! No need to flatter me any more... we took pity on you and did a bit extra. We can deliver it sometime in the next hour, if that's convenient?\"\n\nI glanced guiltily at the plastic bags beside me. No problem - I could put them in the fridge and have them tomorrow instead. And, I confess, I wanted to meet this lady. She'd probably be a disappointment compared to my fevered imagination, but still...\n\n\"That would be great,\" I said. \"That's really kind of you.\"\n\nI gave her my address and credit card details and then hung up and hurried home. I thought I'd shave and tidy myself up before she arrived. Pathetic, I know, but there we are.\n\nIt was only as I was glancing at myself in the mirror and adjusting my shirt that I remembered she'd said \"we can deliver\". Who was \"we\", I wondered? Boyfriend? Husband? Lesbian partner? I found myself faintly down-hearted at the thought. And yes, I agree - I had clearly been on my own a little too long, and out of the dating scene for considerably longer.\n\nThe answer, I'm happy to say, was d) None of the above.\n\nWhen I saw the car pull up outside my gate I hurried downstairs and opened the door. I ventured to within the permitted two meters of my entrance and watched as a very attractive brunette lady of about forty got out of the car and then extracted a cardboard box from the back seat. Sitting in the passenger seat was a young blonde girl, not out of her teens yet, also very pretty.\n\n\"There's a table just there you can leave it on,\" I said, gesturing rather pointlessly at the enormous wooden table I'd positioned for deliveries, which she couldn't possibly have failed to spot.\n\n\"Perfect,\" she said, smiling at me.\n\n\"I was wrong about your voice.\"\n\nShe cocked her head inquisitively, amused.\n\n\"You're clearly even younger than I thought. That must be your sister in the car.\"\n\nShe snorted, but I think she was pleased. \"Now you're really over-doing it! That's Stella, my daughter.\"\n\n\"I'm David,\" I said.\n\n\"Helen,\" she said, and our eyes met briefly. They were friendly but challenging eyes.\n\n\"Nice to meet you.\" I really wanted to prolong the conversation, but the girl seemed to be staring at me a little aggressively from the car and I imagined they still had a number of deliveries to make.\n\nShe smiled again. \"Enjoy your meal.\"\n\n\"I will,\" I said, and watched as she got back in and drove off. I thought I heard them giggling as they bumped off down my track, but perhaps that was my imagination. I did feel strangely lifted by having met them, and deflated by their departure. But, as I said, I'd be alone on my own too long. You can read too much into things.\n\n**\n\nThe food -- a chicken and mushroom pie, with some assorted vegetables -- was delicious. I left them a five-star review on Google saying as much, and made reference to the fact that they were a \"lifesaver for a bad cook like me.\"\n\nA few days later, I got a text from her.\n\nThanks for the review. Very kind of you, and glad you liked it. Helen.\n\nI texted back almost immediately:\n\nHope it gets you some extra business. If you ever have any left overs, I'll take whatever you can spare! All the best. David.\n\nA few minutes later:\n\nSadly we're having some car trouble today otherwise you'd be welcome to some Roast Chicken. Might be a few days before we're back in action -- so frustrating! H.\n\nFew things appeal more to the male ego than a damsel in distress. And this was TWO damsels in distress.\n\nCan I help? I could do deliveries for you? Happy to. D.\n\nIt seemed like a long wait for her reply. At least a minute.\n\nThat's kind of you, but I couldn't impose on you like that. And there's all this social distancing and it's all such a palaver. Shame. Thanks anyway!\n\nI didn't think this was an entirely convincing rejection, so I persevered.\n\nI've been in isolation for five weeks and not so much as a sniffle. You could hose me down beforehand if you want! Really, I'd be glad of the distraction. Tell me what time you want me?\n\n(\"Want me\" sounded a bit forward, but \"need me\" sounded even worse.)\n\nWell... OK. Thank you. I hate letting our customers down. 4.30pm?\n\n**\n\nI drove up their drive a few minutes early, freshly shaved, in blue jeans and a checked shirt that my wife had always said she found attractive. Their home was a modest cottage with a garage attached, surrounded by farmland. It was even more isolated and remote than my own place.\n\nThe door opened as I parked the car and Stella came out. She was wearing a skirt that showcased some admirably toned and tanned legs and a simple green t-shirt that hugged her figure very agreeably. When I'd seen her in the car previously I'd thought she was pretty, now I realised she was actually stunning.\n\n\"Hello,\" she said. \"Thanks for helping.\"\n\n\"Not at all,\" I said. \"Happy to. Glad to have something different to do, if I'm honest.\"\n\nHelen appeared behind her. \"I'm afraid we've got a few more orders than usual today... we're up to twelve now. I can probably cancel a few if that's too many?\"\n\nI shook my head. \"Not a problem... ready to start whenever you are.\"\n\nThey'd split their orders into two delivery runs. I was to do the first five deliveries while they were cooking the second batch, then I'd come back and collect and deliver them. There was some hesitancy over whether I should come into the house or not to help them load everything up, but Helen eventually decided it was fine.\n\n\"There's hardly any cases in this area anyway,\" she said. \"And you've been on your own all this time, haven't you... I think we have to just assume we can do this safely. Just wear your gloves while touching all the food boxes.\"\n\nTheir house was rather sweet, if cramped. Most of their living space had been given over to boxes of catering supplies, and every surface in the kitchen was covered with either cooked food or food that was about to be cooked or ingredients of some sort. But it was a kind of controlled chaos, Helen and Stella knew where everything was and worked together with a determined, good-humoured efficiency that was impressive and rather touching.\n\nI was soon on my way with the first of the deliveries. They were scattered over an area of several square miles. I thought I'd got to know the vicinity quite well but these houses were often down tiny lanes and rough tracks that I had never noticed before. Without the SatNav on my phone I'd never have found half of them. I have to say I rather enjoyed dropping the food off -- several elderly people who were clearly rather lonely chatted to me for several minutes over their fences and hedges or from their front door steps. It was good to be doing something that made a tangible, if brief, difference to their lives.\n\nThat first run took me the best part of an hour, and then it was back to Helen and Stella's little cottage to get the second load. Everything was ready for me -- each order neatly labelled and packaged up with clear handwritten notes summarising what was in each order, who it was for and their address.\n\n\"You guys are brilliant,\" I said, quite sincerely. \"Seriously brilliant.\"\n\nHelen smiled at me. She looked a little weary, but still lovely.\n\n\"Thanks,\" she said. \"It's always such a relief when it's done. And thank you again for helping.\"\n\n\"Yes,\" said Stella, a little more shyly. \"Thank you.\"\n\nHelen looked at her daughter. \"Why don't you go with David? You've not been out of the house today.\"\n\nShe blushed slightly. \"Oh no... I'll stay with you and help clean up.\"\n\n\"Nonsense. I can do all that. Go on... I'll see you in about an hour.\"\n\nWe set off, Stella a little timid and awkward in the passenger seat beside me. I chatted rather inconsequentially about the beauty of the countryside and some of the conversations I'd had with their customers earlier, and slowly she relaxed a little.\n\n\"You're quite new up here, aren't you?\" she said.\n\n\"Yes... I suppose so. My wife -- ex-wife -- and I bought the cottage a couple of years ago, but we only used it for weekends really. We explored a little -- but I know it a lot better now.\"\n\n\"Will you go back to London when it's all over?\"\n\n\"I don't know,\" I said thoughtfully. \"I've realised recently... I don't really want to. I like it here, though I don't know many people. I thought I liked the bustle of the city, and the cinemas and the restaurants... but actually these last few weeks have made me think about things differently. So... maybe I'll stay up here.\"\n\nIt was quite a long speech, and it was almost as much to myself as it was to her. I think she recognised this, and it seemed to encourage her to share a little more herself.\n\n\"Mummy likes it here too, and I love it, but she thinks I need to be somewhere where there are more people. She wants me to have a... social life, whatever that is.\"\n\nShe said this with such intense contempt that I laughed.\n\n\"What? I don't see what all the fuss is about. I hate parties and... all that and... pretending to be interested in people.\"\n\n\"You're not interested in people?\"\n\n\"Well... some people. People I like. You're nice. Well, you seem nice. And a few others. But... a lot of it seems so false.\"\n\nI was flattered by this.\n\n\"I know what you mean,\" I said carefully. \"But I suppose your mum wants you to be with people your own age. To enjoy yourself while you're young. It goes pretty fast, you know.\"\n\nShe stared ahead. \"Yes. Mum keeps going on about making the most of being young.\" She seemed about to say something else, then stopped.\n\n**\n\nWe chatted a little more as we drove around, and I found myself liking her more and more. She was intelligent, witty, thoughtful and utterly devoted to her mother. I gathered there had been a particularly unpleasant and bitter divorce, and she rarely saw her father now. She asked a few insightful questions about my own marriage break-up, and I answered them as honestly as I could. I think she was glad to learn that her own experience wasn't that uncommon, and to be able to compare notes with someone who'd gone through something similar.\n\nAt one house she refused to come out to help with the unloading.\n\n\"The man who lives here.... He's so creepy. Always looking at us, making smutty little jokes. Mummy doesn't like him either, but he's on his own and he's quite old... so we feel like we have to.\"\n\n\"OK,\" I said. \"No problem. Leave him to me.\"\n\nI left his tray on his doorstep, rang the doorbell and retreated a respectful distance.\n\nThe door opened and a thin, balding man in his sixties peered out. He was wearing a dressing gown and, I strongly suspected, nothing underneath it. He peered at me suspiciously.\n\n\"Oh. Where are the lovely ladies tonight?\"\n\n\"Sorry,\" I said. \"They're a little busy. I'm doing the deliveries for them now.\"\n\nHe regarded me for a long moment. \"Hot little bitches, aren't they?\"\n\nI didn't quite know what to say to that. I wanted to punch him, but that would have contravened social distancing guidelines.\n\n\"Enjoy your meal,\" I said, starting to walk away. \"It might be your last one for a while, I'm afraid.\"\n\n\"Are you fucking them? Lucky sod. Two lovely, wet, fuckable pussies they've got. Tell them from me that if they want...\"\n\nBut luckily for both of us, I never heard the message he wanted me to convey. I got back in the car and Stella stared at me.\n\n\"You're all red,\" she said.\n\n\"I can see why you don't like him,\" I said, and started the car.\n\n\"What did he say?\"\n\n\"Nothing.\"\n\n\"He did, didn't he?\"\n\n\"It doesn't matter. But you're not to make any more deliveries to him, OK? I'll do all his deliveries from now on. Not that he deserves any.\"\n\nShe nodded.\n\nThe atmosphere in the car for the remainder of the journey was a little less relaxed. I didn't tell her what he'd said but she could obviously guess the approximate content and it infected the mood between us. There was an awareness now of more adult, more explicit overtones. I had been aware of her sexually beforehand, of course, but it had seemed rather charming and innocent. Now I felt cheap and sordid for even entertaining such thoughts.\n\nWhen we returned to their house Stella exited the car quickly and scurried inside. I unloaded the empty plastic trays from the back of the car and walked a little wearily towards their kitchen door. Then I realised it had been blocked by Helen, and she looked furious. Murderous, even.\n\n\"What happened?\" she asked icily. \"What did you do to her?\"\n\nI was taken aback. \"I didn't do anything!\"\n\n\"She went straight into her room without a word. I swear, if you so much touched a hair on her head... I trusted you!\"\n\n\"I promise you, I didn't touch her!\"\n\n\"You expect me to believe that? I'm calling the police. You stay right there!\"\n\n\"Mum! Don't be stupid!\"\n\nStella had appeared behind her. She looked pale but determined.\n\n\"He didn't do anything! He's... very nice. Just like you said.\"\n\nEven in these fraught circumstances, I was pleased by this revelation.\n\n\"So - what exactly happened? I want to know EXACTLY.\"\n\n\"It was Mr Miller. He said... something.\"\n\n\"What did he say?\" Helen was slightly calmer but still clearly wanted to hit or attack something and I still seemed the most likely target.\n\n\"I don't know. He wouldn't tell me.\"\n\nHelen glared at me. \"So - what did that horrible man say to you?\"\n\nI spread my hands appeasingly. \"Nothing I want to repeat. But, as I said to Stella, I'd be happier if I did his deliveries from now on. If you'll let me keep helping you.\"\n\nHelen considered this, chewing her lip. At that precise moment she had a very low opinion of men in general, and I couldn't exactly blame her.\n\n\"Go inside, Stella,\" she said.\n\n\"It wasn't his fault, Mum!\"\n\n\"Yes, I understand that now, but please go inside. I want to talk to Mr... I want to talk to David for a moment.\"\n\nStella looked at her, then at me, then back to her mother. Then she shrugged and retreated back into the house.\n\nHelen looked at me. \"So - tell me what he said.\"\n\n\"I'd really rather not.\"\n\n\"I insist. If you want to keep helping us, I insist.\"\n\nI sighed. One thing I had observed over the years was that women, much more than men, seemed to hate things being kept from them, even if it wasn't in their best interests.\n\n\"He said... he said you were a pair of... hot bitches.\"\n\nShe coloured slightly.\n\n\"I see. Anything else?\"\n\n\"No,\" I said, hoping I looked convincing.\n\nShe looked at me for a few seconds.\n\n\"OK,\" she said. \"OK then.\"\n\n\"I should be going,\" I said, rather awkwardly. \"You'll want to have your own dinner, I expect.\"\n\n\"I set the table for three,\" she said. \"You should stay, if you'd like to.\"\n\n**\n\nIt could have been a very awkward meal, and the first few minutes were a little stilted, but Helen and I both made an effort and it helped that I was ravenous, and was able to heap fulsome and entirely warranted praise on the food. Helen opened a bottle of wine and said Stella could have half a glass and that also helped to relax the mood. We carefully kept the conversational topics general and safe to start with, but both women seemed genuinely curious about me and my background and what I did and I gradually found myself sharing more about my personal history than I could remember doing for a long time.\n\nAfter it was over, I helped to load the dishwasher and thanked them for a very pleasant evening.\n\n\"We're going to watch a film now,\" said Stella. \"We always watch one after dinner. Mum's trying to broaden my horizons. Lots of arthouse movies and dreary foreign films with subtitles.\"\n\n\"Sounds great,\" I said. \"I'm going home to watch something mindless and probably violent that requires no thought whatsoever.\"\n\nShe pouted. \"Mum! Can I go to David's house? His taste in films sounds much better than yours.\" She was joking, of course, but I noticed she also blushed slightly, which was charming.\n\n\"Certainly not,\" said Helen briskly. \"But he's welcome to stay and watch something with us, if he'd like.\"",
        "\"Quick, run while you can!\" said Stella. \"It'll be something awful.\"\n\nI laughed. \"I'm happy to sit through whatever she wants to inflict on us,\" I said. \"But I don't want to intrude any more than I have done already.\"\n\n\"Nonsense.\" Helen was dismissive. \"But I'm afraid if you're a cinema purist, we eat quite noisy popcorn and Stella often shouts at the screen when somebody does something she doesn't agree with.\"\n\nI hesitated. I did really want to stay -- I liked them both, very much -- but I really didn't want to overstay my welcome.\n\nStella saw me trying to make up my mind. \"How about if David stays, but he chooses the film? Then there's a half decent chance it won't be totally awful.\"\n\n\"All right,\" said Helen. \"It'll be nice for somebody else to be on the receiving end of Stella's grumbling for once.\"\n\nI looked at them both. The still-beautiful mother and her slightly coltish, awkward but oh-so-lovely daughter. Both at that moment shared a slightly mischievous look.\n\n\"God... the pressure,\" I said. \"I really have to choose?\"\n\n\"It's even worse than you think,\" said Stella. \"You can't just go onto Netflix or Amazon and choose what you want. The internet is so bad here it glitches all the time. You have to choose something from our DVD collection.\"\n\nHelen disappeared into the kitchen to get the popcorn and Stella led me to their living room where one wall was almost entirely taken up by a bookcase filled with DVDs. It was an eclectic selection, with horror films, romantic comedies, thrillers and even some smutty 70s sex comedies mixed in together.\n\n\"You can get boxes of them for hardly anything at car boot sales,\" said Stella. \"So it's quite a weird collection. We've probably only watched about a quarter of them.\"\n\nI scanned the shelves looking for something that I hoped wouldn't earn the scorn of a teenage girl and also be an acceptable choice for her mother. I was surprisingly anxious about getting it right.\n\nI pointed to a title. \"You watched that one yet?\"\n\nStella wrinkled her nose. \"No, don't think so. It's quite old though, isn't it?\"\n\n\"1950s. But... it's more fun than you think. And quite exciting.\"\n\nShe looked doubtful, but shrugged. \"Can't be worse than what Mum would choose.\"\n\nWhen Helen came in she approved of my choice, so we settled down to watch Rear Window, with James Stewart and Grace Kelly. Stella took the big armchair to my right, which just left the sofa. I settled myself at the far end and tried to look as if a night in with two lovely females was perfectly normal for me.\n\n\"You'll never get to the popcorn from down there,\" said Helen, coming into the room with a large bowlful. \"Move into the middle. I don't bite.\"\n\n\"Mum! Don't be embarrassing! Honestly a couple of glasses of wine and she gets all... flirty. So gross!\"\n\nHelen wagged a finger at her. \"Don't embarrass our guest. He looks uncomfortable enough as it is.\"\n\nStella smirked at me and I smiled weakly back. I was relieved when we started the film and we could focus on that.\n\nAs Helen had warned me, Stella did keep a commentary going, though Helen wasn't averse herself to chipping in. Both of them cooed when Grace changed into her nightgown. Both of them simpered at the lusty enthusiasm of the two young newly-weds. And both of them seemed more than a little distracted by the age gap between the two leads.\n\nI thought that was a little strange at the time. I don't now.\n\nWhen the scene came when Grace Kelly had to search the suspected murderer's apartment, with James Stewart helplessly watching from the apartment opposite, the tension was too much for Stella. She scurried over and inserted herself between us on the sofa, her thigh pushed agreeably against mine as she squeaked and hid behind a cushion on her mother's lap. Helen patted her hair and smiled over at me. Then, very lightly, she reached over and stroked my face for a second, before returning her attention to the film.\n\nI stared at the television, but although it's a tense and brilliant final ten minutes, all I could think about was Stella's leg against mine and the fading sensation of her mother's fingers on my cheek.\n\n**\n\nThe following week I went over and helped them out again with their deliveries -- their service only ran on Fridays and Saturdays, which Helen said were the days when most people had had enough of their own cooking and fancied treating themselves. Helen and Stella worked well as a team, with a lot of good-natured bickering and laughing that made them seem more like sisters than mother and daughter. I did the Friday deliveries on my own, as Stella was needed in the kitchen to help prepare the meals for Saturday. I enjoyed the feeling of being part of the team, of doing something worthwhile in its own modest way, and of course I liked them both.\n\nOn Saturday Stella joined me again for the delivery run. She'd put on some denim shorts that fitted her very snugly and I found myself struggling not to steal glances at her legs as we drove along. You're twenty years older than her, I scolded myself.\n\nWhen we got to Mr Miller's house she glanced at me and grimaced.\n\n\"Don't worry,\" I said. \"He's just an unpleasant old man. Be back in two minutes.\"\n\nI got his order out of the back of the car and walked over to the front door. It opened before I arrived and that unpleasant face peered out at me from the darkness of the hallway.\n\n\"You again,\" he said.\n\n\"Me again,\" I agreed cheerfully, putting the food down on the ground a few feet in front of the house. I turned and began walking away.\n\n\"Do you come in their mouths? Do they swallow it all down like greedy bitches? I bet they fucking do!\"\n\nI stopped, retracted my steps and stared at him. Then I lifted my food and ground my heel down into the cardboard box which held his food, crushing the lid down and squashing it almost flat.\n\n\"Do your own cooking from now on,\" I said.\n\nBack in the car Stella looked at me.\n\n\"Did you... did you just squash his food with your foot?\"\n\n\"Yup,\" I said, and started to turn the car around. \"Any objections?\"\n\nStella grinned.\n\n\"None at all,\" she said. \"I hope it chokes him.\"\n\nBut as I drove away, feeling rather virtuous and noble and manly having protected my women, I did have a mental flash of Helen and Stella kneeling in front of me, mouths open and eager.\n\n**\n\nThe following Saturday I was again asked to choose the film. I played it safe again and thought I'd go for a Hitchcock classic. I couldn't decide between Vertigo and Psycho. Then I remembered how pleasantly scared Stella had been by the finale. Of the two, Psycho was the much scarier film, and I'm ashamed to admit that's what decided me.\n\nI went for my usual end of the sofa but this time Stella went for where Helen had sat the week before. I thought I saw a brief exchange of glances as Helen came into the room, but perhaps it was my imagination.\n\n\"You move into the middle, David,\" she said. \"Stella's such a noisy fidget it distracts me.\"\n\nI shuffled awkwardly along and Helen settled herself onto the other side of me. I pressed \"Play\" on the remote and we started watching.\n\n\"God, even the credits are scary,\" muttered Stella. \"This is going to be awful.\"\n\nWhen Marion Crane was stabbed in the shower, Stella shrieked loudly and buried her head in my chest. Instinctively I put my arm around her and hugged her. Then I glanced awkwardly at Helen, who just smiled. Then she leaned her head in and rested it against my shoulder. I thought about putting my other arm around her too, but thought that might be pushing my luck.\n\nI expected Stella to recover her poise and to somewhat shame-facedly withdraw after a few minutes, but instead she nestled in and watched the rest of the film from the safety of our embrace. Though when we reached the final scenes, with Vera Miles creeping through the spooky house, I think she had her eyes shut the whole time.\n\nEven with everything that followed, I think that will always be one of my favourite memories of that time. Helen on one side, Stella on the other, and me between them feeling very happy and content -- and, I admit it, more than a little lustful - even as the world outside seemed to be descending into bewildered chaos.\n\n**\n\nI was finding the other days of the week rather empty without their company, but I didn't want to impose on them too much. I have never suffered from the delusion, apparently common to many, that my company is such a delicious treat that it's impossible to have too much of it. Possibly I also reasoned that my rationing my visits I would enjoy them more, but if so I was kidding myself. I missed them.\n\nSo when the phone rang on Wednesday evening and it was Stella, I was initially pleasantly surprised. Then I heard the fear in her voice.\n\n\"It's Mr Miller...he's come here! And he won't leave!\"\n\n\"What? Why?\"\n\n\"We wouldn't take his order... and he was rude to Mum and she hung up on him.... And now he's driven over here and he's outside, shouting... terrible things! I wanted to call the police but Mum says no... can you come over?\"\n\n\"On my way,\" I said. \"Don't let him in, Stella. Keep him outside.\"\n\nI hung up and sprinted to the car. Normally it takes me fifteen minutes to get to their house. I think I did it in half that time. Lucky for me there were no cars coming the other way on those narrow country roads, otherwise one of us would have ended up in a ditch.\n\nI screeched to a halt and jumped out of the car. Miller had been peering in through one of their windows but he turned as he heard me approach.\n\n\"Why don't you fuck off,\" he said. \"You're so fucking greedy. You don't need both of them. Why don't you let me have one of them? I'll take the youngster, I bet she's got a lovely...\"\n\nThat was the time it took me to reach him.\n\nI have never been much of a fighter. A few scraps in the playground, that would start with wildly thrown punches and then descended into angry wrestling. But I have played quite a lot of football, and for a while I was the penalty taker for my school team. My foot connected hard with his groin -- to my disgust I could feel he was hard beneath his trousers -- and his face went white. Then he slumped to his knees, gasping for breath.\n\n\"If you ever come within a mile of this place again, I'll fucking cut them off with fucking garden shears, you disgusting pig,\" I hissed at him. \"You nod if you understand, all right?\"\n\nSomehow, gasping, he nodded.\n\nI dragged him to his feet and man-handled him over to his car. \"Get in and fuck off,\" I said. \"Now!\"\n\nIt must have been agony for him to even move, but somehow he got in, started the car and reversed away. I watched him go, suddenly feeling rather shaky myself. I'd been pumped up on adrenaline and now that it was beginning to fade I felt surprisingly light-headed.\n\n\"Are you all right David?\" Helen had emerged from the house, her pale face full of concern.\n\n\"Sure,\" I said. \"I just need to sit down for a minute.\"\n\nShe held out her hand to me. \"Come here.\"\n\nShe led me into the house and I collapsed onto the sofa. Stella came over and put her arms around me. She'd been crying.\n\n\"Thank you,\" she said. \"We were really scared.\"\n\n\"He's unpleasant but probably harmless,\" I said. \"You'd have been fine.\" Truth be told I didn't feel terribly manly at having dispatched a sixty-something-year-old man with a kick in the privates. If he'd been my age, or younger, probably the women would have been scraping me off the driveway around now.\n\nHelen came in with a cup of tea and for a few minutes we sat quietly.\n\n\"Can you stay here tonight?\" Stella's lovely blue eyes were beseeching.\n\n\"We can't ask David to do that.\" But Helen didn't sound her usual confident self.\n\n\"I don't mind sleeping on the sofa, if you'd like,\" I said. I didn't much fancy the drive home. I still felt strangely nauseous. The rush of threatened violence, the brief execution of it, the slight sense of self-loathing for having reacted so viciously. I realised I felt very proprietorial towards these two, and Miller's incursion into my territory, my group, my pack... had triggered something deep and primal in me. I wasn't sure I liked it, but it was unmistakably there.\n\n**\n\nThey found me some blankets and a spare pillow and after a quiet supper together -- none of us were very hungry -- we said our goodnights and I bedded down on their sofa. It was barely long enough for me and a little lumpy but I fell asleep almost immediately.\n\nI was awoken by the sound of somebody coming into their kitchen. The light went on and I could see Stella standing in the doorway, her body outlined by the light. She was wearing something short and sheer and, with the light behind her, almost completely transparent. Her body was ripe and young and lovely.\n\n\"Sorry,\" she whispered. \"I needed to get a drink.\"\n\nI nodded dumbly and continued to gaze at her. She didn't move. I think she knew exactly what I was seeing. Perhaps it was a thank you of some kind. Then, after a few more seconds, she disappeared into the kitchen. I heard the sound of the tap running. Then she was briefly in the doorway again, silhouetted sideways this time. I could see the curve of her young breasts and even, I thought, the outline of a nipple. I didn't think I had ever been harder in my life, my cock felt so swollen it was on the edge of bursting.\n\n\"Sleep well David.\" Was that a tease?\n\nThe light clicked off, and I heard the sound of her footsteps retreating slowly up the stairs.\n\nI lay awake for a long time after that. I was desperate to give myself some release, but the etiquette of masturbating in a stranger's house is complex and fraught with risk, so I simply tried to think of other things. For several seconds over the course of the next hour, I think I succeeded.\n\nAnd then, somehow, miraculously, I fell asleep.\n\n**\n\nI awoke to the smell of coffee and light streaming in through the window. Helen was sitting beside me in the armchair, watching me with a strange expression in her eyes.\n\nI sat up and rubbed my eyes.\n\n\"Good morning,\" I said.\n\nShe didn't answer. She just kept on looking at me. Slightly self-consciously I ran a hand over my chin and grimaced.\n\n\"I need a shave,\" I said. \"And possibly a spare toothbrush, if you have one.\"\n\nShe nodded.\n\n\"Come upstairs,\" she said, and held out her hand, as if I was a six-year-old child, rather than a man in his forties.\n\nI took it, and I followed her up the stairs. I hadn't been up there before. But my eyes were glued to Helen's backside, which swayed and twitched invitingly as we ascended.\n\n\"The shower in my room's the best,\" she said, and we turned left at the top of the stairs into a small but comfortable room with a double-bed and a small en-suite bathroom at the far end.\n\n\"There's a towel in there, and some razors and a new toothbrush,\" she said. \"The water's hot, but it runs out after about five minutes, so don't take too long. And use the big white robe -- I'll wash your clothes for you.\"\n\nThe shower was vigorous and almost unbearably hot, which was just what I needed. Five minutes was just long enough to get the worst of the stubble from my face. Then, still steaming, I brushed my teeth and combed my hair. I felt wonderful now, full of life and vitality. The mood of the conqueror, I mocked myself.\n\nWhen I opened the door and stepped out Helen was lying in her bed, the covers over her, just covering the tops of her breasts. She was naked beneath the covers, I knew.\n\n\"I sent Stella for a walk,\" she said. \"She knows what I have in mind, but I don't care.\"\n\nMy throat had suddenly gone dry. \"And... what did you have in mind?\"\n\nShe slowly drew the covers back. Her breasts were full and heavy and with startlingly red nipples. Even as I watched they seemed to pucker and rise as the cooler air reached them. Between her legs was a small, neatly trimmed patch of brown hair.\n\n\"I thought I'd get you to fuck me,\" she said softly. \"I'd really like that David.\"\n\nI gazed at her body for a long, long moment, drinking it in greedily. Sometimes the anticipation of sex can be almost as intoxicating as the act itself. Knowing that in a few moments or minutes I would be inside this gorgeous woman was a wonderful thought.\n\nI slipped off the robe, and her eyes dropped to my groin.\n\n\"Oh, it's been so long,\" she murmured. \"So lovely... I'd forgotten.\"\n\nA moment later I was in bed beside her, kissing her hungrily. Her arms went around me and she pulled me on top of her.\n\n\"Quickly,\" she said. \"Oh please... quickly!\"\n\nShe reached down and I gasped as her hand encircled me.\n\n\"So hard,\" she whispered. \"Fuck me with this now, please, god, fuck me.\"\n\nIt was my turn to reach down and to explore a little more with my fingers. She was soaking wet, and I found this hugely exciting. With my ex-wife foreplay had been a long, drawn-out and occasionally frustrating prelude to the act itself. She found it difficult to become aroused, or perhaps it was simply a failing in me. But Helen was more than ready.\n\nSo I slipped into her, feeling strangely guilty that I should be inside her so early and quickly, literally just a few seconds after joining her in bed. She jolted and gasped and her arms went around my back.\n\n\"Oh yes,\" she said. \"Oh fuck yes. Now fuck me, David.\"\n\nI kissed her deeply again and began that familiar rocking movement, sliding myself back out of her until I was almost three-quarters withdrawn, then pushing back down and feeling that delicious welcoming embrace around me.\n\n\"Yes,\" she said. \"Harder!\"\n\nI moved a little more quickly inside her, back and forth, my mouth still seeking hers at every opportunity. Her beautiful full breasts were crushed against my chest and I wanted them in my mouth too, so I began to slide out of her, intending to suckle them for a few glorious seconds before once again entering her.\n\nTo my surprise I felt her legs go up around me, encircling me, keeping me inside her.\n\n\"No... please... just fucking now. Anything you want later... but fuck me now.\"\n\nI did as she asked, and kept up that relentless rhythm, back and forth, as her nails gently raked my back.\n\n\"Oh yes.... I love your cock David... fuck me harder please... I need it harder.\"\n\nIt had been many, many years since I'd been with anybody but my ex-wife. In addition to being slow to arouse, I don't think she'd much cared for the act of penetration itself. Quite often it seemed to hurt her. I don't think she was particularly small, and I'm no more than average, but for whatever reason that part of love-making was something I always felt she endured rather than enjoyed. And so I had learnt to be gentle and tender and to treat her as something delicate.\n\nIt was proving hard for me to escape that mindset now. Part of me still saw all women as being as fragile as my wife had been. Certainly I saw the key to their pleasure as being gentle caresses and movements, soft murmurings and brushed kisses.\n\n\"Harder... use my cunt David, fuck it hard.\"\n\nThat jolted me. My wife had also had an aversion to the \"c word\", as she called it, and to hear Helen use it in such a desperate tone was hugely erotic. I began to lose control, and to pump at her more energetically and vigorously.\n\n\"Fuck yes... that's it. Fuck me nice and hard with your fucking lovely big cock.\"\n\nI moaned, and began to pound her even more brutally. This was primal, animal fucking, like a dog mounting his bitch and using her. Part of me still protested this was wrong, this was not how modern men behaved, but a larger part of me loved it, and I couldn't have stopped if I wanted to.\n\n\"Talk to me... tell me what you're thinking David... you fucking dirty lovely man...\"\n\nOh Christ. I wasn't sure what to say -- a verbal accompaniment had never been part of my married sex life either -- but I took my cue from her.",
        "\"I love fucking your tight cunt, Helen.\"\n\n\"Mmm yes. Keep fucking it. Just... like... that...\"\n\n\"I'm going to fucking come so much inside you... can I come inside you, Helen?\" Even then, a moment of anxiety. Was she on the pill? Shouldn't we be using a condom?\n\n\"You fucking use me just how you want,\" she hissed. \"I'm yours to do what you want with. As long as you fuck me hard, you can come in me whenever you want.\"\n\n\"Fuck Helen... fuck... you make me so fucking hard.\"\n\nI was close now, dangerously close. Alarm bells were ringing -- this had only been a few minutes, and to come inside her now, after so short a time -- surely she'd be disappointed.\n\n\"Come in me now, David. Fill up my cunt with your lovely hot come.\"\n\nThat pushed me over the edge. I couldn't help but cry out as I came, the most intense, almost painful orgasm I could remember having for years. It felt like I was never going to stop, shooting ropes and ropes of my seed deep inside her. I felt her clench beneath me and cry out too, her pussy tight around me, muscles rippling as her own orgasm overtook her.\n\nThe room span for a while. I remember lying slumped on top of her, taking most of my weight on my arms as I gasped for breath, feeling my juices trickling out of her. Then her hand went around the back of my head and she stroked my hair.\n\n\"Oh god,\" she said. \"I really needed that.\"\n\nI pushed myself up so I could look at her. \"I'm sorry... I couldn't last a bit longer.\"\n\nShe put a finger to my lips. \"It was perfect,\" she said. \"I hope I didn't shock you.\"\n\n\"Not at all.\"\n\n\"I can be a really... foul-mouthed needy little bitch sometimes. Sorry.\"\n\n\"It really turned me on,\" I said. \"Hearing you... talk like that. With your lovely voice. It was just... wow!\"\n\nShe laughed at that. \"You like me talking dirty?\"\n\n\"I really do, yes.\"\n\nShe wriggled provocatively beneath me.\n\n\"It gets your cock hard?\"\n\nI nodded.\n\n\"That cock of yours which is still buried balls-deep in my soaking wet cunt.\"\n\nMy whole body twitched again at that, and she smirked.\n\n\"Well... that's good to know,\" she said. \"And I'd love you to fuck me again, and I bet if I sucked that lovely sticky cock of yours I could soon get you hard again... but Stella will be back soon. So we'll just have to wait until next time, won't we?\"\n\n**\n\nStella was still a little spooked after the incident with Mr Miller -- I think they both were -- so we agreed that I would fetch a camp bed from my house and for the next few days I would stay with them each night. It was discussed as it was a temporary arrangement, but somehow none of us ever suggested when it should end, and so it became an accepted routine. On non-delivery days, that is every day apart from Friday and Saturday, I would rise quite early and head home. There I would work in my study until about six, when I would drive back to them for an evening meal and, more often than not, a film before bed.\n\nExcept I didn't always work. Some days, at least twice a week, sometimes three, Helen would drive over to my house, and we'd go to bed for a couple of hours.\n\nWe learnt a lot about each other, both as people and as sexual partners. Initially I still felt traces of guilt that Helen wanted me to use her quite as roughly as she liked. I never hurt her -- she wasn't into pain or anything like that -- but she loved the feeling of being used for pleasure. That was what really got her off, and after a while I forgot my misgivings and began to lose myself in the sheer animal pleasure of taking her.\n\nI wanted to try other things too, which initially she wasn't sure about. She was surprisingly hesitant about my going down on her, for example. She said the few times she'd had it done to her, she hadn't really enjoyed it. It didn't fit her mental model as the female being the one to provide pleasure, rather than being the sole recipient of it. I assured her that few things turned me on more than making a woman come with my tongue, so she relented. It took a while for her to relax enough, but one thing my wife had taught me was to be patient and slow and persistent, and eventually she was crying out and grinding herself into my face, both hands on my head, forcing me down as her body shook.\n\nWe talked a lot about sex. She was disarmingly frank and open about it, as well having that wonderfully dirty mouth.\n\n\"I always regretted not starting when I was younger,\" she told me, her hand gently stroking my cock as we nestled together in my bed. \"I didn't get fucked until I was twenty. Such a fucking waste!\"\n\n\"Who would you have wanted to fuck when you were younger?\" I was curious.\n\n\"God... loads of people. There was one dad of a school friend of mine... he was always looking at me. Mmm, he was sexy. Looked a bit like you, actually. Maybe that's why I love you fucking me so much now... reliving that old fantasy.\"\n\n\"He never made a move?\"\n\n\"No! So disappointing! If he'd have given me the slightest encouragement, found any opportunity for us to be alone together.... God, I would have been his eager little slut, no question.\"\n\n\"Poor guy,\" I said. \"Never knowing what could have been if he'd just had the nerve. I bet he used to daydream about you all the time.\"\n\n\"Mmm... yes. Picking me up and going somewhere so I could suck him off in the car. That would have been so hot!\"\n\n\"You wouldn't have felt used?\"\n\nHelen sighed. \"I wasn't in love with him, David! I didn't expect him to leave his wife and run off with me and I'd have his babies. I just wanted him to fuck me! You men, you think we're all sentimental and gooey.... You're the sentimental ones, most of the time.\"\n\n\"So you'd have been happy being... his little fuck toy?\"\n\n\"God yes! Bending over whenever he wanted me, feeling his cock, all hard because of me, fucking me and using me... Christ, I'm getting horny again thinking about it.\"\n\nShe was too. She rolled over and straddled me, trapping my cock between the lips of her pussy as it lay flay on my stomach. She began to grind against me. She liked doing that -- she said the sensation of my cock against her clitoris was better than any vibrator.\n\n\"You thinking about me as a teenage slut, David?\"\n\n\"Certainly not,\" I said, with as much sincerity as I could muster. Which wasn't much.\n\n\"Ha! Then why are you getting hard?\"\n\n\"Because you're doing that.\"\n\n\"Uh-uh. Pretend it's my little teen cunt pressing against your cock. Eighteen years old and ready to spread my legs so wide for you.. such a wet little pussy, all yours... whenever you want...\"\n\nI forced her up so her body lifted slightly, allowing my cock to spring up and probe her wetness. Then I pushed her back down, driving myself into her as I did so. She moaned again, but kept up her teasing commentary.\n\n\"Fuck yes... you like being in my teenage cunt mister?\"\n\n\"It's so fucking tight.\"\n\n\"Mmm... you can fuck it whenever you want, mister. And if you want me to suck you off, I'll do that too. You can do anything you want to me. What was it you said? Fuck toy? Am I your fuck toy, David?\"\n\nI rolled her onto her back. She always came hardest there. Again, she liked the feeling of being dominated, her man pressing down on her.\n\n\"Yes... now shut up and let me fuck you.\"\n\nI kissed her as I fucked her with increasing urgency. Any worries I had about hurting her had long since evaporated. It was almost impossible to fuck her too hard or use her too roughly -- the size of her own orgasm was nearly always proportional to the vigour with which she was taken. For my part I loved the feeling of our mouths being locked together, hearing her breathing get more ragged as I pounded her with that rising sense of need. I felt almost lost in her.\n\nI had a faint concern though. I had already come twice, and I doubted a third time was going to be possible. Helen always loved it when I came inside her, and the few times I hadn't been able to had felt like slight disappointments to us both.\n\nWe fucked in our usual aggressive way for several more minutes before I murmured rather breathlessly to her. \"I don't think I can... come again.... not so soon.\"\n\nShe didn't reply immediately. Her eyes were closed and she seemed lost deep inside herself.\n\n\"Fuck that... little teen cunt,\" she said in my ear.\n\nShe pushed hard and upwards, forcing me deep inside her, as if she was trying to make sure I couldn't escape her clutches. Her arms were tight around my back.\n\nI pounded her harder still. But I knew it was still no good, and she sensed it too. And she knew what to do. She'd known for a long time, as it turned out.\n\n\"Fuck Stella. Fuck my daughter's cunt, David.\"\n\nI exploded inside her.\n\nA few second later, Helen came too. Her nails dug into my back with a ferocity that I'd never felt before.\n\n**\n\nAfterwards, as we got dressed, I sensed there was an unusually awkward silence between us. Something had changed that could never be put back as it was.\n\nI was worried that she'd felt we'd gone too far, and she would now retreat to safety and banish me from our lives. Even after our few short weeks together, I couldn't imagine life without them.\n\nShe came over to me, turning me so that we stood face to face. I couldn't meet her eyes.\n\n\"It's ok,\" she said.\n\n\"Is it?\"\n\nShe nodded.\n\n\"I took us over that line, David. But it was a line I wanted to cross.\"\n\n\"Are you sure?\"\n\nShe nodded again, smiling faintly this time.\n\n\"Did that turn you on -- what I said? I know it did.\"\n\nMy turn to nod.\n\n\"Good. It turned me on too, shocking you like that. Saying something so... terrible. I know that probably makes me a wicked mother, but I don't care. At least I'm honest. And the truth is... \"\n\nShe paused. \"The truth is... the idea of you being with Stella really turns me on.\"\n\nI didn't say anything at first. I just looked at her.\n\n\"It's just a fantasy,\" I said eventually. \"It's... a very sexy fantasy.\"\n\n\"For now,\" she said. \"But... these are strange times, David. Aren't they?\"\n\n**\n\nI was still staring at her. I wouldn't have been surprised if my mouth was hanging open.\n\n\"But... it's not something that could actually happen.\"\n\n\"Why not?\"\n\n\"It's just... it wouldn't be right!\"\n\n\"Says who? We've established it turns you on. It turns me on, too. And Stella's certainly up for it.\"\n\nI stared at her, open-mouthed, and she laughed.\n\n\"You've... discussed it?\"\n\nShe looked down at the floor and shrugged. I have learnt since that when she does that, she's often about to lie. But I didn't know that then.\n\n\"Well... not exactly. But she knows we're fucking all the time. And she has got quite a crush on you, you must have noticed that.\"\n\n\"Really?\"\n\n\"God... it's amazing men ever get laid, they're so dense. Of course she has.\"\n\nI considered this. My head was spinning.\n\n\"So... you think she'd be happy to... just come over here and hop into bed with us?\"\n\n\"God no! I'm not talking about a threesome. There are some lines even I won't cross. Well, probably not. But... she'd go to bed with you, any time you ask her. She's seen how I am when I get home after seeing you... she's a lot like me in that respect.\"\n\n\"Hang on. Wait. Seen how you are? What do you mean?\"\n\n\"I mean -- she sees how good I feel. How happy. Contented -- except that doesn't do it justice. I feel like every thing's as it should be. You have no idea how wonderful it feels to be a woman who's really well fucked by her man... it's hard to describe... somehow, the whole world just seems brighter and better and lovely.\"\n\nI was silent, absorbing this.\n\nShe reached up and touched my face, turning me to look at her.\n\n\"And I want that for Stella. She's very similar to me. Very passionate, very sensual... and a little on the submissive side.\"\n\n\"Jesus H Fuck,\" I said. \"I can't quite believe what you're saying. And -- you wouldn't be jealous?\"\n\n\"No... not of my own daughter. I don't want her to waste some of her youth in the same way I did. Sex is such an important, fundamental part of life, David, and we dress it up with fancy terms and ideas about love and respect and decency -- and those are all good things, of course they are... but at the end of the day...\"\n\nShe trailed off. \"At the end of the day... I want us to be your women. Because I know you're good and decent and kind and you won't take advantage of us... and the idea of being totally yours, and my daughter as well... I just find that incredibly erotic and... somehow right. For all of us. Does that make any sense?\"\n\n\"Not really,\" I said.\n\n\"OK,\" she said. \"Try this. Does the idea of being able to fuck a hot mum, and her hot teenage daughter, whenever you want, make your cock really, really hard?\"\n\n\"Fuck yes,\" I said.\n\n\"Then focus on that. And let us worry about the rest of it.\"\n\nThere have been worse suggestions.\n\n**\n\nHelen said she would talk to Stella as soon as she got home. I watched her drive away, feeling excited and nervous in equal measure. Was she really serious? It would be a total male fantasy come true if so... but I couldn't quite believe it would happen. And my heart sank when I got a text message from her later that evening.\n\nDon't come and help with deliveries tomorrow, OK? Need a bit of time here, just the two of us. H. x\n\nDamn! She'd spoken to Stella and she'd freaked out and now... now it was going to be horribly awkward the next time I saw them. If I even saw them again. Maybe she'd be so mortified at her error of judgement she'd move the two of them away, to another part of the country. That was an appalling thought.\n\nI texted back.\n\nI really hope everything is OK. I assume Stella horrified? We should have left it as fantasy. Sorry. X\n\nWhen her text came back, a few minutes later, I could almost hear her amused exasperation.\n\nJust relax. All good. We'll see you next week. X\n\nWell, that made me feel slightly better. But -- the idea of a few days without seeing them didn't appeal at all. I was so used to being around them, hearing them laugh and tease each other and flirt with me... suddenly my little house seemed very lonely indeed.\n\nMy phone buzzed again.\n\nOh... and if I were you... don't masturbate for the next few days!\n\n\"Jesus Fucking Christ,\" I said to the empty room. \"Jesus H Fucking Christ.\"\n\n**\n\nShe'd said \"we'll see you next week.\" I took that to mean towards the end of the week, when they'd be gearing up once again for their weekly mammoth cooking sessions and subsequent deliveries. So when Monday came after a rather dull and frustrating weekend, I was resigned to another few empty days without them.\n\nIt was that evening when I heard a car pull up on the road outside my house. My study was upstairs and on the opposite side, and by the time I'd made my way downstairs and opened the door to look out, the car had gone. I was disappointed. Even an Amazon delivery driver would have been a welcome distraction. Then I noticed the girl standing in the garden, a small bag at her feet, looking at me and smiling.\n\n\"Hello David,\" she said.\n\n\"I've missed you,\" I said. It was the first thing that came into my head, and of course it was true.\n\n\"I've missed you too,\" she said. \"Mum just dropped me off. She said I should stay here for a few days. You're to bring me home on Thursday, in time to help with the cooking. That's OK, isn't it?\"\n\nThere was a quiet humour in her voice as she looked at me.\n\n\"Yes,\" I said. \"That's OK, Stella. Come inside.\"\n\nShe picked up her bag and I held the door for her. As she brushed past me I caught a trace of her perfume. She smelt of spring flowers.\n\n**\n\nShe made supper for us both, moving comfortably around my kitchen, tutting occasionally at my rather basic utensils and pots and pans. She made us a delicious omelette each, with some fresh asparagus and broccoli both of which she got just right -- not overcooked and soggy as it tended to be when I cooked. I poured her a half glass of wine and a much larger one for myself. We ate at my dining table and chatted easily enough about this and that -- I can't honestly remember what. I was very conscious, however, of the evening creeping on and the hour approaching when we would head upstairs. And then what? I had a spare bedroom. Would she prefer to be alone in there, for tonight at least?\n\nI suppose what I was expecting was a quiet, careful, friendly and loving seduction scene. She would be nervous and I would be kind. We would start slow, if and when the moment arrived, and if she just wanted to do more than some gentle touching to start with, that would be fine. I would be the epitome of a sensitive, considerate, older lover, teaching a young girl the ways of love.\n\nOf course, it was nothing like that. Stella was more like her mother than I'd realised.\n\nWe moved into the living room after we'd eaten, sitting together on the sofa as we drank our wine. We'd been talking about how their business had started early in the lockdown, of how she and her mother had got lost so many times trying to find houses tucked away on obscure lanes.\n\n\"But it was fun,\" she said. \"Everything with Mum is always fun.\"\n\nI nodded, thinking of my times in bed with her. That was an understatement, I thought.\n\nI don't know if she somehow picked up on my thought or if her own mind was running in that direction anyway. Probably the latter.\n\n\"She invented this game,\" she said. \"She told me that if we were two guys, driving around like this, we'd score all the women we saw out of ten. On how ... fanciable they were.\"\n\nShe hesitated on the word \"fanciable\". I suspected her mother had actually used another word.\n\n\"Not all men,\" I said.\n\n\"No.... perhaps not. But we all think like that, don't we? We can't help it. Looking at people and thinking if they're attractive or not. Looking at old people and thinking what they were like when they were younger.\"\n\n\"Yes, I suppose it is.\"\n\n\"So, we started doing the same thing. All the men we saw, we marked them out of ten. Based on how much we fancied them.\"\n\nShe looked at me mischievously.\n\n\"The problem with this place is... lots of retired couples. The average age must be about a hundred and twenty.\"\n\n\"At least,\" I agreed.\n\n\"So... you know. Lots of twos and threes. The occasional four or five. But... really disappointing, you know?\"\n\n\"Yes, it must have been.\"\n\n\"And then you called Mum. And she said, based on your voice, you sounded like at least an eight. And just the idea of there perhaps being an eight out there -- well, we cooked some extra straightaway, just so we could see if she was right.\"\n\nI closed my eyes. \"Go on. Get it over with. The tension is killing me.\"\n\n\"So when we met you... as we drove up and I saw you for the first time I said yes, definitely an eight, and when Mum got back in the car having spoken to you properly she said maybe you were even a nine.\"\n\nI don't think I've ever been more flattered in my whole life. Of course, I pretended to be offended.\n\n\"Only a nine!\"\n\n\"Yes,\" said Stella, looking at me quite seriously. \"A nine based on looks. But then, after you went to bed with her, she said you were a ten. And that you'd be perfect.\"\n\n\"Perfect? Perfect for what?\"\n\n\"To be my older lover, of course. We'd talked about it loads, but we never thought we'd find the right person around here. And when the lockdown started, well, the whole idea went on hold. But actually that made it even better, because of you helping us and everything and us getting to know you properly.\"\n\nMy head was spinning a little.\n\n\"So... you'd been on the lookout, both of you, for a man to... go to bed with you?\"\n\n\"Yes. Mummy always wished somebody had arranged that for her. She's very... open-minded about all that sort of thing.\"\n\nAnother fairly colossal understatement, I thought.\n\n\"So... she went to bed with me... as a kind of road test?\"\n\nStella nodded. \"Yes. And then I think she got a bit greedy, actually. She kept teasing me and telling me she was going to keep you all to herself. And that hadn't been the plan at all!\"",
        "I just stared at her. Stella smiled back, more than a little pleased at my obvious discomfort.\n\n\"So... why the last few days... when I wasn't allowed to see you?\"\n\n\"Oh... that.\" For the first time Stella looked slightly embarrassed. \"It was my time of the month... I was just at the end of it. So we didn't want you to come over and get your hopes up and then be disappointed. But the good thing is, for the next few days I'm completely safe. You know, if you wanted to come inside me.\"\n\n\"Jesus,\" I said.\n\nShe looked at me solemnly. \"You would like to come in me, wouldn't you David?\"\n\n\"I would,\" I said. \"Very much.\"\n\nShe smiled, took a large, final swallow of her wine, and put the glass on the table beside her. Then she got up from the sofa and stood in front of me. She slipped off her shoes and then lowered her skirt and stepped out of it. With a single graceful motion she pulled off her top and threw it aside. Underneath she wore simple white matching underwear. But that she didn't need anything fancier. Her body was flawless -- long lean legs and perfect teen breasts, not as heavy and full as her mother's but firm and delectable. Then she slowly turned for me, taking her time so I could admire her perfect rounded backside too.\n\n\"Marks out of ten, mister?\" she asked softly.\n\n\"Twenty-seven,\" I said, a little hoarsely, and she laughed. Then she held out her hand to me.\n\n\"Come on David,\" she said. \"Take me to bed, please.\"\n\n**\n\nWe went into the bedroom and I quickly undressed as she watched me. I sensed she was actually a little more nervous than she let on, so I walked up to her and kissed her on the forehead.\n\n\"You're so beautiful, Stella,\" I said.\n\nI ran my fingers up her arms and felt goose bumps forming under my touch.\n\n\"I'm not a virgin,\" she said quietly. \"But I haven't done it lots.\"\n\n\"Hush, and turn around,\" I said. When she did so I unhooked her bra and let it fall to the floor. I reached around and cupped her breasts gently in my hands. She gasped, and I felt her nipples hardening. Then I reached down and tugged her panties down so she could step out of them. I pressed myself gently against her, my swollen cock nestling between her buttocks. I continued to stroke her breasts for a few more moments before letting one of my hands drift lower, raking my fingers delicately across her flat stomach before descending lower and caressing her inner thighs.\n\n\"Mummy said you had lovely hands,\" she murmured. \"This is so nice... so nice.\"\n\nI turned her back to face me, and I kissed her properly for the first time, my mouth hungrily latching onto hers. I felt her moan deeply from the back of her throat and she pressed herself firmly against me, as if she was trying to get as much physical contact between us that she could.\n\nWe kissed like that for what seemed like a long time, perhaps minutes. Then she broke the kiss, backed away slightly, and knelt down in front of me. My cock jutted out in front of me, and she tentatively reached out to encircle it with one hand, putting the other underneath my ball sac.\n\n\"I love your cock,\" she said.\n\nShe looked up at me. \"Tell me what you want me to do, David. I'll do anything. Mummy says you like dirty talk -- would you like that from me? I'm not as good at it as she is...\" She paused, and took a breath. \"Do you want to fuck my young cunt with this lovely cock, David?\"\n\nShe blushed as she said it, and I smiled at her. \"You don't have to pretend to be someone you're not, Stella. But if you wanted to suck me with your beautiful mouth, I'd like that very much.\"\n\nShe stroked my cock a few more times and then pressed it against her face. As I watched she rolled the tip of it across her cheek, which left a small sticky trail of pre-cum across her perfect skin. Then her mouth was on me, and it was my turn to gasp at the hotness of her mouth. She was slow and gentle and loving, sucking me almost in slow motion, long, drawn-out strokes with her mouth, in and out. I could feel her tongue brushing the underside of my cock, teasing and probing. It was exquisite. How did she know to do that, I wondered? Did Helen teach her? To have been a fly on the wall that day...\n\nI closed my eyes and surrendered to the sensation. Almost without realising I began to rock back and forth, almost imperceptibly at first, working with the motion of her head.\n\nSuddenly an image of Helen came into my head. Watching me with her daughter, eyes bright, lips wet.\n\n\"Fuck my daughter's mouth. Yes, just like that David. Fuck her little mouth with your hard cock.\"\n\nI noticed Stella's hand had slipped between her legs and she was touching herself as her head bobbed back and forth. She was moaning with pleasure. My cock gleamed as it slid in and out of her welcoming mouth. If I wasn't careful, I would soon lose control, and I wasn't ready for that yet.\n\n\"Get on the bed, Stella,\" I said, reaching down to touch her hair. \"My turn now.\"\n\nAlmost sulkily, she stopped what she was doing and rose to her feet. We kissed again, the faintest trace of saltiness on her lips.\n\n\"Lie down,\" I said.\n\nShe obeyed, and I took a moment to drink in the perfect contours of her young body, lying there on my bed.\n\n\"You're perfect,\" I said. \"So absolutely perfect -- you have no idea.\"\n\n\"Please,\" she said. \"Don't make me wait.\"\n\nOf course, I immediately resolved to do so. At least a little. I began to kiss her legs, first her calves, then her knees, then higher onto her thighs. She began to wriggle.\n\n\"Oh god... that's... you're going to make me... please could you just...\"\n\nWhat she wanted me to do was never made clear, though I had a good idea. But at that point I had arrived at the top of her legs, her smoothly shaven slit gleaming and ripe. I let my tongue trace an outline around it, from the top of one thigh and over and down the other. Her body clenched and she bucked upwards with her hips, trying to force my tongue into contact with her clit. But I firmly pushed her back down.\n\n\"Hush,\" I whispered. \"Be a good little girl.\"\n\n\"Oh god... I don't think I can be... please David... oh!\"\n\nMy tongue connected at last, and her whole body seemed to spasm. I paused for a moment to let her recover, then resumed my tracing with my tongue, this time passing intermittently over her lovely small clit, each time accompanied by a deep sigh or moan from her.\n\nOnce again I imagined Helen in the room with us.\n\n\"Lick my daughter's sweet young cunt, David. Does it taste good? Can you make her come for me? Make her come, David.\"\n\nThe thought of saying this made me re-double my efforts. My mouth became more vigorous now, more relentless in how my tongue tormented her. I lifted one hand up to drag it down the slightly parted lips of her pussy, and Stella groaned again.\n\n\"Fuck... I'm so close... oh god...\"\n\nI carefully inserted a single finger into her, just the tip, and began to finger fuck as I clamped my mouth over her clit. At the same time I carefully positioned my shoulder so they pinned her legs to the bed, so she was effectively immobilised and at my mercy.\n\n\"Oh fuck I'm cumming now! David! I'm cumming.... Mummy!\"\n\nAnd with that the dam burst for her. With a low howl her whole body shook, and I raised my mouth so I could watch her. If there are better sights than watching a beautiful teen girl writhing with a massive orgasm that you've given her, I'd like to see them.\n\nI gave her a few moments. Just a few. Before, with my previous notions of what women wanted and liked, I would have given her a longer recovery time. Perhaps I'd have fetched her a drink, stroked her hair, kissed her, and felt smug and proud. But Helen had taught me to be more selfish, that sometimes the best thing to do is to keep riding the same wave rather than letting it slip away and hoping you can catch the next one. So when Stella's breathing had recovered slightly, I simply moved on top of her and reached down and guided my cock into her.\n\n\"Oh God David... that feels so amazing... god I think...\"\n\nBut what she thought was also lost forever. I began to fuck her, greedily and selfishly, using her body for what it was designed for. Focusing now on my own pleasure, my own sense of possession. I felt Stella's arms go around me and pull me tighter. I felt her spreading her legs even wider, to ensure I could get even deeper into her. But these were things I was only distantly aware of. I was in a more primal, animal state\n\nThat's it David. Fuck my little girl good and hard.\n\nI think I felt Stella cry out again with a second orgasm. The old me would have been counting these a little anxiously, each ecstatic response a reassurance that I had done well. Now I used Stella's willing body as ruthlessly as I'd learnt to use her mother's. My flesh pressed against hers, my cock deep inside her.\n\nIt still wasn't enough. I wanted it to be even more raw and savage.\n\nI pulled out of her with a single movement. She whimpered, and tried to pull me back inside her with her legs and arms, her instincts as basic as my own.\n\n\"No. Get on your knees,\" I told her. \"I'm going to fuck you from behind.\"\n\nShe scrambled up and positioned herself, that perfect pert backside open and exposed to me.\n\n\"Quickly,\" she said. \"Oh god please... quickly!\"\n\nI needed no encouragement to do just that. I moved behind her, dragged the tip of my cock once up and down the soaking lips of her pussy, then plunged back inside her.\n\n\"Oh god... yes David... fuck me as hard as you can.\"\n\nI took her at her word. Sweat poured off me as I hammered into her. She was so tight and hot and perfect, fitting me like a wet velvet glove. I put my hands on her shoulders so I could push deep inside her, pulling her backwards as I thrust forwards.\n\nI could feel the tension building in my balls. I didn't want to come, not yet. Perhaps not ever. I felt I could keep doing this forever.\n\nBut my body had different ideas. And so did my imaginary Helen, still watching us.\n\nFill up her cunt, David. Come in my daughter. \n\nI gasped as my orgasm engulfed me, an explosion of pleasure that raced from my groin and outwards to every corner of my body. I felt my cock shoot what seemed like buckets of my seed deep into her tight warmth. Stella cried out again, her body shuddering once more as she felt me unload into her.\n\n\"God... fuck yes... give it all to me. I want it all.\"\n\nI don't honestly remember slipping out of her. What I remember next is lying beside her, our heads on the pillows, holding her close. Her hand was gently stroking my cock, which was still leaking slightly onto my stomach. As we talked and giggled and teased she would occasionally lift her fingers to her mouth and lick them clean. And then her hand would be back on me again, as if reassuring herself that my cock was hers and nobody could take it away from her.\n\n\"God,\" she said. \"Imagine if all this had never happened. The virus -- the lockdown -- I know it's all awful for lots of people... but I'm so glad.\"\n\n\"Me too,\" I said.\n\n\"It's only Monday. We have all of tomorrow, and all of Wednesday, and some of Thursday. And then you're coming to live with us, aren't you?\"\n\n\"I don't know,\" I said. \"We'll have to talk about it with your mother.\"\n\nShe scoffed. \"We already have, silly. She says as long as I approve, you definitely are.\"\n\n\"And you approve?\"\n\n\"You know I do. God -- I can't quite believe we can do that whenever I want.\"\n\n\"Um,\" I said. \"I think we might have to settle for 'quite often', if that's OK. And don't I get a vote in this.\"\n\n\"Of course. Do you want to stay here living on your own, all sad and miserable and eating terrible food, or do you want to come and live with two depraved sluts like us who just want you to fuck us all the time - and can cook you amazing food?\"\n\n\"It's a tough one,\" I said. \"But on balance, I think your plan is better.\"\n\n\"Goodie,\" she said. She swung a leg over mine and then and raised herself up so she straddled me.\n\n\"Can we fuck again now please?\"\n\n\"Absolutely,\" I said.\n\n**\n\nLast night they announced the end of lockdown and what they called \"the slow return to normality\". Except normality for me will never the same again. My life now is entwined with Helen and Stella's. I didn't know how long for, and neither do they, but I sense it will be many, many years.\n\nAn hour or so after we'd gone to bed I got up to get myself a drink of water from the kitchen. It was my turn to be with Stella that night, and we'd just finished an intense and very agreeable fuck in her bed. As I walked past Helen's door I saw her light was still on. Hearing me outside she called to me.\n\n\"Hey there.\"\n\n\"Hey yourself,\" I said, and pushed the door open.\n\n\"That sounded lovely,\" she said. She was lying in her bed. I couldn't see clearly in the half-light, but it looked like she was naked. \"I had no idea Stella could be so vocal when she was being fucked.\"\n\n\"Mum! Don't be embarrassing!\" An indignant voice from the other bedroom.\n\nI shrugged. \"Kids these days. No sense of decorum.\"\n\nHer voice was low and seductive. \"Any chance you could do a little something for me, before you go back to my daughter's bed?\"\n\n\"Mum! It's my turn! I want him back in half an hour -- it's getting late!\"\n\n\"Of course, darling.\" Helen returned her attention to me. \"Do you think you'd like to slide your cock in me now?\"\n\nMy cock twitched. \"Just like this? You don't want me to shower first?\"\n\n\"Oh no,\" she said. \"I want you just as you are.\"\n\nAnd so I walked over, and got into her bed. And a few moments after that, to sighs of pleasure from us both, I slipped inside her, my cock still wet from her daughter.\n\n**\n\nStrange times? Yes. Unsettling times? In many ways. But also, for me... wonderful, exciting, magical times.\n\nWith thanks to BJ and VM for proof-reading and encouragement."
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "cv19",
        "mature",
        "mother daughter",
        "older man",
        "taboo",
        "teen girl"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/still-wet-from-her"
}