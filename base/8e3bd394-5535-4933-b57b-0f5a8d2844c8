{
    "title": "A Union Consummated",
    "pages": [
        "They were roommates busily studying at their desks. The dark one, Nina, got up from her desk and got behind where Renee was seated. She wrapped her arms around her lover and kissed her neck. \n\n\"Mmm..\" purred Renee.\n\n\"Want to fuck?\" Nina whispered, her breath warm in Renee's ear.\n\n\"You know I do,\" said Renee, with obvious remorse, \"but I have to study.\"\n\n\"We have to study,\" Nina corrected, slumping down in disappointment. She flung herself on her bed and writhed on her back, touching herself through her thin undergarments. After a few stimulating caresses she froze and angled her head to watch her lover's response, then asked, \"How bout a quickie?\"\n\n\"There are no quickies with you and me,\" sighed Renee, turning the pages of her professor's book.\n\nNina groaned with frustration.\n\nThe girls were roommates in college. Both were about to complete their freshman year. Both had several papers to write, books to read, and exams to study for.\n\nNina was 19 years old, with bobbed, jet black hair and tanned skin. She had a cute face with full, sexy lips and striking green eyes. She was slender, 5'5\" and endowed with a firm pair of generously proportioned tits that just begged to be fondled. Now, feeling relaxed and horny, she was squeezing and rubbing them under her shirt with both hands. She ran her fingernails over her pert brown nipples and caressed her body all over. It was a body that guys on campus could not ignore. Her cappuccino complexion was perfect, her figure was slim and curvy around her tits and ass. \n\nWhile Nina loved cock, she loved Renee even more.\n\nRenee was a shy girl normally, she had dated one boy all throughout high school and tried to keep up the long distance relationship after she went to college. But after spending time with her roommate Nina, they discovered a mutual attraction that they could only satisfy by long sessions of fingering and licking. Nina literally got turned on every time she looked at Renee. Who could blame her?\n\nRenee had just turned 19, she had brilliant blonde locks and porcelain skin. She was only a tiny bit taller than Nina, and a bit less curvy. Her big blue eyes were framed by luscious long lashes, and her pink lips were even more kissable than Nina's, according to some.\n\nNina and Renee only met two months earlier. At first, Renee confided in Nina about her distant boyfriend, and that helped mute the sexual tension. However as Renee grew disappointed with his apparent lack of commitment, she and Nina grew closer. They made a few jokes about keeping each other warm at night, as winter was cold and windy in the city. Then one night, which happened to be Renee's birthday, Nina brought a bottle of wine up to celebrate. They talked, and hugged, and held the embrace.\n\nThe embrace turned into pecks on the cheek, and pecks on the cheek turned into kisses on the neck. Passion inflamed, they kissed on the lips. Their tongues intertwined, and they frantically groped each other. That night, they enjoyed ecstasy that they would never forget, but it was only an taste of things to come. Each mind-blowing lovemaking session was better than the one before. They grew closer and more intimate as the weeks passed.\n\nRenee loved Nina and loved the sex they were having, but she sometimes wished she had a penis, so she could really give Nina a good fuck. Yet they always enjoyed each other, which made Renee wonder if a strap on dildo would really make an adequate substitute. Renee not only wanted to fuck Nina with a long, hard, cock, but she wanted to feel every inch of that shaft inside Nina's tight holes. While it was only a fantasy, she dreamt of it often.\n\nSince they had started going to college, the girls had their eyes opened to many quasi-political and social movements. From socialism to vegetarianism, feminism and sexual liberation, they had found sympathy for a wide range of causes. As in many things in their relationship, Nina led and Renee followed.\n\nThe green movement was perhaps the most important movement to the two of them. For them, saving the environment was a no-brainer. They tried to avoid big corporations (\"big polluters\") whenever they shopped. So when Nina decided to buy Renee a strap on dildo, she found herself in a dimly lit curio shop in Chinatown. In the back of the store there was a black curtain and a little red sign that said \"Adults Only Please!\" It seemed no one was around, not even the store owner. So, after looking over her shoulders, Nina stepped behind the curtain.\n\nShe found herself in a small, closet-like space, brightly illuminated by three fluorescent bulbs. On one shelf were rows of home-dubbed video tapes. She couldn't read the lettering on the spines, so she ignored them. On the other shelf were an assortment of books, all in Chinese. Below that were a few typical vibrators and pocket rockets. There were even a few Chinese versions of popular American porno mags.\n\nNina was curious about the stroke mags. The Asian girls on the cover were sexy, Nina couldn't help but quickly examine each one. Before she knew it, she felt a twinge of excitement in her pussy and she reached out for one of the mags. Remembering her anti-corporate convictions, she pulled her hand and her gaze away from the cover girls. Instead she reached for what she assumed was some sort of book on the Kama Sutra. As she cracked open the pages, she heard a feeble man's voice gently call from the main room. \"Can I help you?\"\n\nNina flushed. \"Get it together, girl,\" she chided herself. \"You're here to buy a strap on. Don't bother trying to give him a good impression.\"\n\n\"Um, hello?\" she said. She chided herself again for her hesitance. She stepped past the curtain back into the main display area. There she found a short, stooped man in a black silk outfit standing just six feet away. His face was old and wrinkled and his eyes were nearly shut. His hands were folded inside his sleeves in front of his stomach. He stood as motionless as a statue. Even the gentle smile on his wrinkled lips seemed as unmoving as the thick bark of an old willow tree, so still was he. He must have been over eighty. When he saw Nina however, his eyes moved, and he looked her up and down, from her sexy almond eyes, to her lovely rack, to her pert hips and long legs and back again, to her slender neck and graceful jaw line. \n\nNina felt emboldened to see the old pervert checking her out. \"Hi, um.. I'm looking for a.. for something.. for my friend. I'm.. do you have a strap on?\"\n\n\"Your.. pardon?\"\n\n\"A strap on dildo? You know,\" Nina gestured to her crotch, moving her hands as if to stroke a giant invisible erection.\n\n\"Ah, ha ha ha ha ha,\" the old man said, chuckling so softly that Nina could barely hear him over the muffled, steady din of cars and traffic ever-present on the city streets. He smiled at her, and Nina smiled back.\n\nWell, at least I didn't beat around the bush, she said to herself.\n\n\"Wait here please,\" the old man said. He went behind the counter and straight into a back room. He returned moments later with a smooth, glossy pink box the size of a cat.\n\n\"Oh wow,\" Nina exclaimed, intrigued already. She opened the box and saw inside a remarkably lifelike dildo, complete with straps and connections, resting on satin cushioning. The cock had to be nine inches long, and it was complete with a pair of bulging testes. Just looking at it made Nina horny. She had to get back soon anyway, so she decided to purchase it.\n\n\"How much?\" she asked.\n\n\"Fifty?\" said the old man.\n\nNina held out two twenty dollar bills. \"Forty.\"\n\n\"Deal!\" he said, as his wrinkled smile grew broader. He took the money but held on to the box. \"On one condition. No return policy. Okay?\"\n\n\"Sure thing,\" Nina replied as she scooped the box into her arms. \"See ya!\"\n\n****\n\nNina took the subway back to the dorm. She couldn't wait to present the new toy to her lover. Renee was thrilled, and both were happy that the item was not a mass produced piece of corporate plastic but truly a unique item. \"No occasion, just something for my blonde bombshell.\"\n\n\"Thank you, Nina,\" Renee cooed, grasping the dildo by the shaft.\n\n\"So can we take a break from studying?\" Nina asked.\n\nRenee nodded, her eyes bright and grateful. \"Just a short break though. I have a test tomorrow.\"\n\n\"I have two,\" Nina said in a sultry voice. She leaned forward and their lips met in a kiss. Their mouths opened, tongues slipping into each other's lips in a passionate french kiss. Nina pulled Renee into her embrace, running her fingers through Renee's long hair and probing with her tongue into the blonde's eager mouth. Nina straddled Renee's thighs and pressed her breasts against Renee's.\n\nRenee was getting very aroused. \"I can't wait to fuck you with this thing!\" She put the strap on on the bed and began pulling off Nina's clothes. In seconds Nina was wearing just her fishnet stockings, and Renee had removed all of her own clothing. She had little trouble getting the snap-on in place. \"In the shower,\" Nina said, still wanting to freshen up a little after her trip to China town. She practically jumped into the bathroom like a pouncing jaguar and turned on the water. By the time it was warm, Renee had arrived at the curtain's edge, wearing her strap on.\n\nOnce the water was warm, they both stepped over the rim of the tub and left the curtain half open, never mind the splashing water. Hot water streamed over their lithe naked bodies. The enormous nine inch dildo jutted up from Renee's pelvis. Nina was pleased to see that the color actually matched Renee's pale skin tone quite well.\n\nNina turned around and stuck her ass out, spreading her legs slightly, as she looked back at Renee. She spread her pussy lips with her left hand and leaned against the wall with her right.\n\nRenee placed one hand on Nina's tiny waist and with the other, soaped up Nina's ass and pussy. Then she guided the head of her strap on to Nina's wet, soapy slit. Nina arched her back, pushing her hips back towards the toy. At the same time, Renee slowly pushed the head of it forward. It went in easily enough, so Renee slowly pushed inch after inch into Nina. Nina could feel every vein and bump pushing into her tightness. Renee took it slow but at the last two inches, she lost her patience and thrust the rest in.\n\n\"Oh!!\" Nina gasped as the phallus filled her deliciously.\n\nRenee moaned at the hot sight of the shaft disappearing below Nina's pert backside. Water and suds cascaded down her bare shoulders and tan skin, to splash between their loins and run down their thighs. Nina's fishnet stockings were soaked but tightly clung to her upper thighs. Renee began pushing the dildo in and out, in and out, drinking in the sight of Nina's perfect figure getting nailed from behind. It was a perspective she had never had before, and it set her pussy on fire.\n\nShe loved being able to fuck Nina with a thrust of her hips, and decided to take full advantage of it. She reached under Nina's arm with one hand and fondled her tits, and with the other hand she started playing with Nina's clit. Renee's hips kept perfect rhythm, and Nina trembled and moaned. Each thrust brought Nina closer to climax.\n\nRenee's heart was beating hard and fast in her chest as well. She was so turned on she could hardly stand the heat of the shower. She focused on her rhythm while playing with Nina's clit, and watched in awe as Nina cried out and shook with orgasm. Renee pulled out slowly and Nina shakily turned the shower knob to off.\n\n\"Renee, that was-- you are.. \" she panted, slowly turning.\n\n\"I know. I almost came too!\"\n\n\"Really!?\" Nina gasped. \"More!\" she grinned, and turned around again, this time spreading her ass cheeks wide. \"Come on, do me up the back door, you horny slut. You know you want to shove that big dick of yours up my tightest hole.\"\n\nIndeed, Renee had told Nina about her anal fantasies more than once. \"You are a cock slut and a dirty whore,\" Renee replied, instantly feeling nasty.\n\n\"Come on, fuck me.\"\n\nNormally when Renee had sex, she thought mostly about how her partner was feeling. This guided her and made her a better lover. She had a sensitive touch, because she concentrated on how what she was doing was making her lover feel. She recalled the way that certain touches made her feel, like light but furious licks to her clit, or what it felt like when her boyfriend sucked on her hard nipples. Now she felt something different. She was thinking of filling Nina's holes with cock, filling each hole and blasting her load.\n\nRenee had no thought but the urge to shove her cock violently Nina's ass and pussy and fill her with cum. She imagined that this must be the exact thought any guy in her situation would have. She caught herself at the last moment, realizing she would have to take it slow with such a large dildo.\n\n\"Hey, Renee,\" Nina said, still bent over with her ass cheeks spread wide. \"Are you going to fuck me or what?\"\n\nRenee took a moment to compose herself. \"Bitch, you better watch what you ask for. I am going to turn you into a fucking shish-kabob with tits.\" With that, she slapped Nina's ass cheeks violently for several seconds. \n\nSlap! Slap! Renee's hands hit Nina's ass cheeks loudly.\n\nNina moaned and flexed her cute little ass. The sting only made her more impatient to experience some of the pain and pleasure of anal sex.\n\n\"Now, spread em,\" Renee said, and Nina obeyed. She pulled on her tight, round ass cheeks and relaxed her anus. Renee put some body wash on her hands and soaped up Nina's ass crack, paying special attention to her anus. She squatted down behind Nina, teased her anus with her middle finger, and eventually plunged her finger in. After fingering Nina's ass for a few moments, Renee could see the rosebud opening. She pulled her finger out and stood up. She pushed her strap on up to the hole.\n\n\"Don't hurt me,\" Nina said. She was being serious, Renee's dildo was huge.\n\n\"This is what you get for forgetting your place, whore,\" Renee countered. \"Good luck walking to class when I'm done.\" And with that, she pressed the head against Nina's asshole. It gave way easily, and soon Renee was halfway in. She moaned with glee and began thrusting once more.\n\n\"Oh god, oh god,\" Nina moaned. The dildo's girth was almost too much. She felt so naughty and dirty, the sheer rebelliousness of the act had her body singing. She turned on the shower again, and hot water splashed down on them both, rinsing white suds down their smooth, nymphish bodies.\n\nRenee grabbed Nina by the hips and began thrusting full force. She could tell that Nina's ass was gripping the phallus somewhat tightly, and this turned her on even more. She could feel her \"man instincts\" taking over again as she plowed Nina's ass with abandon. She wondered what it would actually feel like with her own hot, stiff cock. What do guys feel, she wondered for a brief moment.\n\n\"Oh fuck!\" Nina screamed. \"Keep fucking me, fuck me harder!\"\n\nRenee kept at it. She could feel her own orgasm building once more. She remembered a story Nina one fondly recalled. Nina had been visiting her boyfriend's house. That boyfriend had several other guys over, and all of them had gone out to the barn. There in the hay, all six had fucked Nina in every hole until all of them were spent. She pictured this while using both hands to grab Nina's short black hair. She pulled hard while pushing the cock deep into Nina's ass. As soon as she felt Nina shudder and climax, Renee started cumming.\n\n\"Ohh god.. I'm cumming, I'm cumming!\" Renee panted. It felt like the universe opened up inside her legs. She gently let go of Nina's hair. Warmth spread from her loins, up to her chest, down to her knees, then, like the ripples of a puddle, it filled her from head to toe.\n\n\"Renee, oh my god,\" Nina said, her heart racing, \"I am so in awe.\" It was unspoken, but the hair pulling was a move Nina had taught Renee. The young blonde was a great lover and student of the art of lovemaking. Her young teacher was impressed.\n\nShe pressed her breasts up against Renee's and slipped her fingers under the strap on and into Renee's sopping wet pussy.\n\n\"So, is it my turn?\" Nina asked, as her other hand fumbled with the clasp.\n\nThe pair did not study at all that night. Renee and Nina were so horny that their screams of passion actually kept others nearby up past midnight. They took turns using the strap on, and in fact when they finally realized they had better settle down and get some sleep, Nina was too tired to even bother to take it off.\n\nWhen she awoke, Nina had a strange sensation of warmth between her legs. Actually it seemed to come from without, it definitely came from outside of her body, and yet it felt like the most awake, alive part of her. It was long and hard, a stiffness that gave her pleasure as she pressed it against the bedsheets. Was it a dream?\n\nShe got up with a start. There, standing straight up between her legs, was a real cock. It had a long, thick shaft complete with a bulging head and two balls. If the throbbing hardness hadn't felt so good, she might have been horrified.\n\nBut ooh, it felt magnificent to touch. She unconsciously began stroking the shaft with both hands. She had never had a boyfriend with a cock anything near this size, it had to be as long as one of her math textbooks and almost as thick! The light brownish color matched her cappuccino skin tone perfectly. She wanted to suck it so badly.\n\n\"What the hell is going on?\" she wondered. But an instant later her only thought was \"I need to fuck, now!\"\n\nShe squeezed her throbbing dick with both hands and looked at Renee, her sexy hips rising and falling slowly under the covers. Renee was still fast asleep, although soon their alarms would go off and it would be time to get ready for class, and -- the test!\n\n\"Oh no,\" she thought. Neither of them had studied very much the night before! Hopefully they had absorbed enough during the semester to pass.\n\n\"Well, this hard-on isn't going anywhere,\" Nina said under her breath, noting that the tip was slowly dripping with precum. \"Renee, oh Renee,\" she softly called.\n\nRenee, groggy, did her best to animate at the call of her lover. When she saw Nina's ten inch throbbing cock, too realistic to be a mere dildo, her eyes nearly popped out of their sockets.\n\n\"Agh!\" she cried. \"Oh, oh my god Nina!\" She leaned forward to take a closer look.\n\nNina groaned. \"Renee, it feels amazing. This must be what it feels like to have an actual dick.\"\n\nRenee looked closely. Sure enough, it looked like a very well endowed, perfectly gorgeous penis. Only this time, the color matched Nina's dark complexion perfectly.\n\n\"Wow, now I know why boys always want to fuck,\" Nina breathed, focusing her gaze on Renee's mouth.\n\n\"How do we get it off of you?\" Renee wondered. \"You don't want that permanently, do you?\" she added.\"I mean, you did give it to me after all.\"\n\n\"Baby I don't know, but I feel like a dog in heat!\" With that, she pulled Renee's face closer. She guided the cock to Renee's lips. She pushed it forward, and Renee took it into her warm mouth with some apprehension. The taste of the precum was sweet, and she tried to take it all in. She she only got about half way before gagging.\n\nNina however was beside herself with lust, and began pushing her cock hard against the back of Renee's throat, thrusting insistently. \"Oh god, oh god,\" Nina chanted.\n\nRenee flipped over on her back and let her head fall off the side of the bed, and Nina stood on the side of the bed so she could skewer her massive shaft down Renee's throat. Renee did her best to open up for the huge cock, and Nina forced it down Renee's throat.\n\nNow, Renee had never imagined she could deep throat a cock this big, but that is not to say she didn't have some experience. She tried not to panic as her air supply was cut off. She went limp as Nina thrust her cock into her mouth. After just a few seconds, she felt hot cum spurting into the back of her throat. Nina cursed and groaned in ecstasy. Jet after jet of cum splashed down Renee's throat. As the brunette climaxed, she pushed deeper and deeper into Renee's throat.",
        "That is when Renee saw it. There was an odd green tab protruding from Nina's taint. It was mostly hidden by her swinging balls but from this angle, Renee spotted it. She started to black out from lack of oxygen and pulled off of Renee's thrusting dong, allowing a mouthful of her cum to splatter out of her mouth and run down her chin.\n\nNina kept cumming and cumming. She could see Renee was unable to take it all so she pulled out of Renee's cum-splattered face mid-orgasm. She stroked her spasming cock and shot a few more loads out, hitting Renee's face, hair, and tits with a several generous blasts of jizz.\n\n\"Mmm, so delicious! Tastes like caramel!\" said Renee. She used both hands to scoop the cum off of her luscious tits and her face and licked it off her palms.\n\nSeeing this, Nina scooped some cum off of Renee and tasted it.\n\n\"Tastes like sugar cane!\" said Nina.\n\nRenee then bid Nina to get on her back.\n\n\"Now, spread your legs, honey,\" she said. She reached for the tab under Nina's nuts and gave it a tug.\n\n\"What, what's down there?\" Nina asked, worried.\n\n\"There's this tab, I didn't see this here last night. It's coming like.. right out from under your nuts.\"\n\n\"Let me see,\" said Nina. As Renee held the cock, Nina reached down and pulled on the tab. As if by magic, the huge phallus detached itself. Both girls gasped, as they saw tendrils withdraw from Nina's pussy. Remarkably, however, Nina did not throw the phallus across the room or even drop it.\n\nSure, the girls were both startled and they both screamed, but they relaxed quickly, the afterglow helping to numb their surprise.\n\n\"What do you think it is?\" Nina pondered aloud. Renee was the studious one, she half hoped that perhaps Renee had heard of such a thing. They watched as right before their eyes, the huge, veiny cock shrank and returned to its original size and color.\n\nRenee looked at the life-like peach dildo, then at Nina's pussy. It was red and seemed a little swollen. Was it magic? Or some kind of alien symbiont?\n\n\"Are you okay, Nina?\"\n\nNina began frigging herself. \"Oh my god Renee, Renee, something is happening to me.\"\n\n\"What!?\" Renee cried, panicking a little. \"Horny?\" she added.\n\n\"I.. am.. extremely.. horny!!\" Nina gasped. \"Fuck me with that thing, quick!\"\n\nRenee fumbled and put it on quickly. Nina was writhing on the bed, and squirmed onto her stomach, her ass high in the air.\n\n\"It's not changing,\" Renee said, disappointed.\n\n\"Fuck.. Mee...!\" Nina panted.\n\nNina's snatch was already very wet, and Renee pushed in easily. She buried the strap on in Nina's hungry pussy and began thrusting rhythmically. Nina started moaning and howling. In less than a minute she was cumming. She hit wave after wave of orgasm for about ten minutes before finally slowing down. Then they looked at the time.\n\n\"Oh my god, we're about to miss the test!\"\n\n\"We're going to be late,\" Nina said. \"There's no way we can make this one.\"\n\n\"My parents are gonna kill me..\" Renee said. She took the strap on over to the sink and washed it off, then dried it and brought it back to the bed. She opened the case and put it back in the case, too agitated to notice the text embossed into the top of the cushioned interior of the case.\n\nRenee felt an uneasiness in the pit of her stomach. She also didn't know what to think about Nina, who was sprawled naked on the bed, enjoying the afterglow of her massive multiple orgasm. Renee was too upset about missing a test to feel good about anything though. She jumped in the shower, dried and brushed her hair, and went out alone for breakfast.\n\nWhen she came back, Nina was out. She left a note on a little magnetic whiteboard that let Renee know where she was. \"Sociology test, 1pm\" she wrote in cute girly letters.\n\n\"Oh, the poor thing, I hope she studied enough,\" thought Renee. If the test was at one, Nina wouldn't be back for at least two more hours.\n\nOn her desk sat the pink case containing her strap on dildo. She decided to take a closer look at it. She picked it up and ran her fingers along the supple leather straps. They were made of a thin, supple white leather resembling rabbit, but they were extremely strong.\n\nAt first Renee just chalked up the quality of the straps to the exacting standards of foreign workers making hand-made goods to sell to the West. Now, she was baffled.\n\nRenee looked for any sign of the strange tendrils she had seen popping out of the dildo's base. She turned over the flaps of the crotch and peered carefully at the plastic ring that connected the dildo's base to the leather. There was nothing to see.\n\n\"Hellooo,\" Renee said, softly. She rubbed the base from the inside. Then she turned it around, squeezed, and stroked the shaft. Nothing.\n\nShe noticed the inscription on the inside of the case. There, embossed in the plush, pillowy velvet, were the words \"For sex between two lovers.\"\n\n\"Well, duh,\" Renee thought to herself. \"Must be something lost in translation there.\"\n\n\"But wait,\" Renee thought. \"This is no normal strap on. The thing had a life of its own, did it not?\" Renee pondered how this normal looking, inanimate object had for a time been a real, pulsating hot cock. It had sprayed her with cum that took at least twenty minutes to wash out of her hair. She hadn't any idea how to remove the cock or switch it off until she spotted the green tab.\n\n\"Lucky we found a tab at the bottom!\" Renee thought. It might have been hard for Nina find something she could wear that could hide a ten inch boner. And yet, when they pulled the tab, something snapped in Nina that made her go crazy. I mean, within seconds she became even hornier than she had been during that epic night before.\n\nRenee read the inscription over and over.\n\n\"For sex between two lovers.\" The letters were stitched into the plush cushioning. She wondered where it came from. It came off sounding like a warning label. Renee stroked the phallus and ran it over her t-shirt and thighs. She slipped it under her shirt and nestled it between her breasts. She had to figure out the secret of how to make it activate again. She wanted to experience her fantasy with Nina.\n\nFinally, Renee stood up, placed the dildo on the table and shucked off her clothes. She put the dildo on and tightened the straps just the way she felt they ought to be. Then she admired herself in the mirror, turning left and right. She slipped her fingers around the shaft and stroked it. She began to squeeze and stroke, playing with her full breasts with her other hand. She watched herself in the mirror and felt herself getting very turned on.\n\n\"Oh, fuck,\" she moaned, lying back on Nina's bed and stroking herself. She pretended she was stroking a cock, stroking and stroking the dildo. Nina's scent from the bed filled her nostrils.\n\nShe closed her eyes. She didn't know why she kept the dildo on, but she kept stroking it and playing with it. She imagined it was real. It started to feel real. In fact, her fingers were creating pleasurable sensations she could feel. And she was getting super horny.\n\nShe looked down, amazed. She was stroking a real cock sprouting from between her legs. Reaching down, she felt a pair of balls as well. The entire phallus was a massive ten inches in length, with considerable girth as well.\n\nShe wrapped both hands around the shaft, one hand near the tip. She began moving both hands in time, allowing the sweet friction to send a stream of pleasure into the shaft and throughout her entire body. Precum began oozing from the tip. She squeezed eagerly with her upper hand as she stroked, and the pleasure intensified. Precum dribbled in a constant stream, and within moments Renee found herself stroking her cum-slickened cock with abandon and lust. She came, sending ribbons of cum high into the air.\n\nAs soon as she came, however, she just felt hornier. The cock she had been stroking was not sated either. Instead, it grew several inches longer and somewhat thicker.\n\nRenee's arousal grew tenfold.\n\n\"Oh fuck, oh fuck, oh my god,\" she moaned, unable to stop herself from stroking her cock. \"I fuck I fuck I fuck I fuck I need to get this off me,\" she panted, \"fuck oh fuck oh god, I --\" she moaned, spurting another load of cum. The thick ribbons of cum shot up high into the air, nearly hitting the ceiling. They splattered the wall and the whiteboard where Nina had left her note. \n\nHer straining, throbbing cock grew even bigger, too big for her to really jerk off with her hands. It was at least two feet long, and dribbled a constant stream of precum. Renee reached down between her legs to feel for the tab, but couldn't find it at all. She was still horny and what was worse, her stomach felt empty, she felt starved. She ran to the fridge and began eating whatever she could find. A few fresh tomatoes were gone in seconds. A quart of soy milk, Renee gulped down as fast as she could. She began eating a pack of strawberries, stems and all. They had some nuts in the cupboard, she swallowed clumps of them whole.\n\nFinally she felt somewhat full. Her cock was still jutting out in front of her, and she was so horny she couldn't help herself. She threw on a big white T-shirt and tucked her cock up inside it and rushed out into the common room. She knocked on the door of Bonnie, one of her suite-mates.\n\nBonnie was also a freshman. Renee didn't know her well, she only knew that Bonnie had a new boyfriend in her dorm room every few weeks. She was attractive enough, with a narrow waist gently sloped out to round, supply hips. She had pert C cup tits, and Mediterranean features framed by wavy dark hair. Her jaw dropped when she saw Renee at the door in her current state.\n\n\"Bonnie,\" she panted, holding the cock with both hands as it tented her T-shirt. Precum soaked the part of the shirt where her glans pressed against the fabric, and Bonnie could read every wrinkle and fold.\n\nNina could smell that Bonnie had been smoking something in her room. She spotted half a joint on the table in front of the couch. Without another word, she burst into the room and freed her cock.\n\nBonnie tried to speak but she was dumbfounded. Renee grabbed her and threw her face down on the bed. She aimed her cock at Bonnie's thighs, using both hands to spread her legs wider. Bonnie was a loose girl who had her share of big dicks. However, Renee's penis was far, far too large to fit into Bonnie. Nevertheless, Renee had to fuck and she had lost all control of her senses.\n\nAs if by magic, the phallus somehow squeezed down into Bonnie's pussy, its size contracting like a balloon until it could squeeze in. Bonnie's vagina stretched to accommodate Renee's cock, and every millimeter of her inner walls slid against Renee's bulging cock-head and veiny shaft. Renee began thrusting with abandon.\n\nBonnie was high on weed and a bit slow to react to what was going on. She looked back and saw Renee boffing her from behind. She never felt her pussy stuffed so full.\n\nShe watched as Renee's eyes close and she threw her head back. Then the hot, sticky cum started filling her. Bonnie's vagina was stretched so tight that the cum could hardly burst out. Instead it flooded through Bonnie's cervix into her uterus. Renee came and came, and Bonnie's belly started to expand a little. Finally Bonnie was inundated and she popped off of Renee's cock like a cork from a champagne bottle. Renee's orgasm was nearly done, and she spurted a few thick dollops of cum onto Bonnie's shoulders, back, and legs.\n\nCum poured out of Bonnie's pussy. Renee's cock, while remaining big and hard, slowly began to shrink down in size.\n\n\"More,\" Bonnie moaned, too rocked to even move.\n\n\"Really?\" Renee asked with glee. She pushed her dick back into Bonnie's sopping pussy and started fucking her again. This time Bonnie began crying out. She arched her back and moaned when her orgasm hit. This in turn pushed Renee over the edge, and she began shooting her load deep into Bonnie's pussy once more.\n\nThe warm, wet cum coursing through Bonnie's insides squelched and streamed over her vagina's inner walls with each thrust from Renee. The sensations brought on another orgasm right on top of the one before. She could feel Renee's cock spasming and new jets of cum filling her inside. The cum, which seemed endless, was now getting pushed out of her vagina with each thrust. She could feel the cock-head battering her cervix and spraying cum right at the tiny opening. She felt another orgasm wash over her. It was as if she was cumming three orgasms at once. It was a pleasure overload. She arched her back and convulsed, impaled on Renee's huge cum fountain.\n\nFinally Renee stopped cumming. The bed was sopping wet and slimy in a large patch under Bonnie, and a large puddle of cum was on the floor between Bonnie's knees. Renee pulled her cock out. Bonnie drifted off to sleep, too spent and high to move.\n\n\"Thank you, Bonnie,\" Renee said, this time careful not to stroke her cock. It was still very hard and real but had shrunk down to its original ten inches. \"You're a true friend.\"\n\nRenee cracked open the door, hoping no one was in the common room. The coast was clear. She bounded back into her room and locked the door.\n\n\"This thing is incredible!\" she thought. \"I can't wait for Nina to get back!\"\n\nThere was still at least an hour to go, and Renee's mind kept wandering back to the thought of Nina getting the same deep fucking she just administered to Bonnie. Nina wouldn't be jealous, she thought. After all, it had been an emergency.\n\nRenee could feel her arousal getting stronger. She wanted to stroke her cock, to suck it, to stick it in any hole she could find. She lay down on her stomach and pressed it between her mattress and her body.\n\nOh god, that feels good.\n\nRenee was afraid that she was losing control of this part of her body. Maybe it was time for her to remove it? She reached down and checked for the green tab. There it was. She pulled it, and it came right out. However, the phallus remained attached.\n\n\"What the--\" she said, looking at the tab. There in small letters was a web address and a password.\n\nRenee's jaw dropped. \"Holy shit!\" She wondered what she could find. Could she order more of these from that website?\n\nRenee was a bright girl. She had a hunch that she had been merged with some kind of alien symbiont, and she was right. Shortly, she would access the website and confirm her hunch. As for whether she could detach the symbiont or even pass her first year at college, is a story for another day.\n\nThere was something truly exciting about her new cock. It was magical and powerful, it gave her incredible orgasms, and it would be her ticket to more mind-blowing ecstasy with Nina.\n\nPossibly sex with many, many other girls.\n\nRenee smiled, logged onto the website, and registered. She was about to learn what this symbiont was all about."
    ],
    "authorname": "wet_special",
    "tags": [
        "big dicks",
        "lesbians",
        "masturbation",
        "chicks with dicks",
        "eating",
        "college",
        "co-ed"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/a-union-consummated"
}