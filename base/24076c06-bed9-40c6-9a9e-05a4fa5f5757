{
    "title": "The Pirate King Ch. 19",
    "pages": [
        "Hello, all. First things first, this is part of an ongoing series. I recommend going back and reading the previous chapters before jumping in here. Don't worry, we'll still be here when you get back :)\n\nAlternate title - \"that's the death shit taken care of\"\n\nHope your holiday seasons are treating you with gentleness and compassion. Stay safe and remember your power - you have a right to be happy. Find that happiness and hold onto it. In a world that tells us our joy should come in very specific ways, we are all varied and beautiful individuals who deserve our own distinct paths. Don't let people tell you that your path doesn't exist just because they don't want to see it. \n\nPeace, love, happiness. Joy and a family that loves you and is willing to take care of you at your worst as well as your best.\n\n*****\n\nThe days passed. \n\nThey did not pass slowly or quickly, they simply stretched out, endless and eternal, the beginning of one blending into the end of another, no start and no finish in the endless turning of the sun. It would have been tolerable if we had been on our way somewhere, if we had a destination. If we had set our bow North and held our revenge tight in the palm of our hands until it drew blood. \n\nWe did not sail north.\n\nWe did not sail anywhere, not truly. We merely moved through the seas in a meandering path, catching what currents would carry us and whatever winds filled our sails. We took no ships, docked at no ports, had no clear objective and yet still we sailed. \n\nThe men seemed content with this. Their days were the same no matter our destination, tasks the same, duties constant. Their nights were filled with training, led now by the Russian at the request of Thron. I came to watch, worried that he might take this as seriously as he took anything else, but he seemed manageable. The men at least did not seem frightened of him as he lifted them above his head and threw them across the deck, choosing to come back for instruction rather than run for cover. In fact, they seemed satisfied enough by his tutelage that I heard not a single man complain about our current movements,\n\nCookie, too, held no anger at our current course. \"Near no work for me,\" he told me happily. \"Only protections we need here are the ones we need near everywhere. And,\" he added, a knife suddenly pointed in my direction, \"the ones we took on when you came aboard.\" \n\nI shrugged. I was not concerned for the men on my behalf. They would find a way to be safe or they would not. \n\nI was, however, concerned about the Captain. \n\nOf all the people on the ship, he had the most control over our actions. In truth he had complete control; any other Captain would have had to rely on the winds and the ocean waves to comply, but I was the winds and the ocean waves and so much more besides and all he had to do was ask and a path would be made for him. He could go anywhere. He could do anything. \n\nHe did not. At night he sat up, staring at his maps, one hand on his sextant and the other on a compass that was so battered I trusted it innately. When the oil ran so low in his lamp the light was flickering, when he could no longer see for the darkness that surrounded him he would sigh, leaning back in his chair. He would sit like that for some time. Silent. Alone. And then he would come to bed. \n\nI wish, how I wish that him coming to bed meant coming to me, that he would return to my arms and my warmth and find comfort in my presence. A week ago, it would have. Before he had found out about my past, certainly. But now?\n\nSince that night in the riggings he did not touch me after dark. He would come to bed so late he must have thought me already asleep and lay his body down a perfect distance away from mine. I was not asleep; I could not sleep without him, not anymore. It was foolish of me to even try. And so I would lay awake and listen to him rustle maps and scratch notes, the sea outside rushing against our tiny home, the wind brushing the tops of reaching waves. I would listen to the Captain sit alone, so alone, and I would will him to hear the stars sing. \n\nIf he heard, he did not show it. He would come to bed, settling in so that the bed creaked and we did not touch and I would hear him sigh, would wait until his breathing settled, and then, only then could I try to find sleep for myself. \n\nHe was not a morning person, my Captain. He had not been a morning person so long as I had known him. Yet every morning in that week I woke to find myself alone in an empty bed. \n\nThe distance was dizzying. It was painful. We would interact in the day as if there had been no change, he would laugh and smile and flirt, his hand would dance across my forearm or my shoulder and the world would stop but it couldn't stop, not truly, and night would fall and he would close himself to me as if I had never held him, as if we had not found each other on the endless sea. As if he did not love me. \n\nI begged the stars to sing louder and settled exhaustion in my bones. \n\nWe sailed like that for days. In the day, all was well. I fought with the men when I needed release and listened to the way my Captain could laugh at other's jokes. At night I pretended to sleep while he laid too far from me, and in the morning I woke alone to begin it all again. \n\nNatch offered no advice. \"He's working through some things,\" was all he would say. \"Be patient with him.\" And I was patient but I was also worried, and he did not sleep nearly enough and he did not touch me and I could only wonder at the reasons why. \n\nOne night I could no longer take it. When he came to bed I turned to him, opening my eyes. He froze, body half in and half out of bed. \n\nSomething began to hurt deep within my stomach. \"My love,\" I murmured.\n\nHe did not look at me. \n\nI sat up, the bed moving beneath my form. I had taken to sleeping in clothes, hoping that this would make the Captain more comfortable with me, noticing that he no longer undressed before coming to bed and dreaming, wishing the solution was so simple, and so my shirt rustled as I made my motion. The Captain did not move in reaction; he was a statue, a dent in the bed that I wanted to smooth out. \n\n\"My love,\" I called to him. \n\nHe did not respond. \n\n\"Love.\" This was more insistent. Still, nothing. Then, quietly, so quietly I could allow myself to believe I had not said it at all, \"What have I done wrong?\"\n\nThe Captain did not turn. His body did not respond. I waited long, so long I thought I would burst, and then I took my wishes and love and expectations and wrapped them up tight within my chest, laid back down, and tried to sleep.\n\nWhen I woke the next morning, the Captain was already gone. \n\n****\n\nThe Captain had fallen into a routine with breakfast. He would brush in, grab his food, brush a kiss over my cheek, and brush back out. This was one of the few times I got to touch him in those days and it was something I clung to like flotsam. \n\nThat morning, the Captain forsake this routine and left me to drown.\n\nThere were a thousand reasons why this might have happened. Natch was also missing, as was Ichor and Finn and Hamms, any of which might have had a meeting with the Captain or might have met up with him and delayed him or all of which might have been isolated incidents. I ladled oatmeal and tried very hard not to read into his absence. \n\nThron smiled up at me when I sat down across from him, Gret sliding over to make room for my musculature. Beside him, the Russian was halfway through a tale that I did not think to pay attention to until I realized that it involved me.\n\nWhen he finished, he looked at me expectantly. \"That,\" I told his grinning form, \"is not how that happened.\"\n\nThe large man merely shrugged. \"Does it matter?\"\n\nOf course it did not. What was the truth in the face of a story? I turned back to my breakfast and wished I had never spoken up at all. \n\n\"The men need more practice with arms,\" Gret was telling the Russian. At some point in the past weeks the two had become fast friends. I hoped Gret was prepared to fall out of friendship as quickly as he had fallen into it; there was no stable footing around a man such as the Russian. \"We've been doing strength for too long.\"\n\n\"Da, and strength is good!\" The Russian spread his hands wide, nearly hitting the man to his left. \"A strong man is a good swordsman!\"\n\nThron took the hand the Russian had placed in his face, drawing to down to their sides. I watched how this drew the Russian down, too, how the slightest touch from Thron made this man's wild energy somehow seem more tamable, on the boundary of something you could hold.\n\nSomething Thron could hold. He held it then between their palms, in his smile, in the way the Russian's eyes softened than sharpened then softened again. \n\n\"But they also need to learn how to use their swords,\" he said and it was such a gentle reminder, a ribbing that could have been taken from the body of the Russian it was so familiar and the Russian smiled back with such an air of comfort and joy that it hurt. \n\nWithout another word, I stood up and walked away.\n\n*** \n\nI knew the Captain would not be in his chambers; he avoided them during the day. And he was not in the mess, and the deck was abandoned but for the men who were cleaning and coiling and mending, and the meeting room was empty but for a stack of papers held down by an empty cup, and Ichor said that no one had been down in the storage chambers but he and Sneg. \n\nI was lost, I was alone. I needed my Captain and he was nowhere to be found. \n\nAnd so I turned to his first mate.\n\nI didn't have to ask anything of Natch before he began nodding. He glanced up at the mainsail, his hands busy on a particularly stuck knot. \"Been up there all day. Won't come down for anything, and won't say a word.\" He turned his eyes to me. \"You guys alright?\"\n\nI nodded my thanks and turned to the sky. \n\nThe Captain was sitting on a crossbeam, one leg dangling on either side of space. He heard me arriving and sighed, head pressing back against the main mast.\n\nI rested my arms on the beam a few feet from his form. \"Hey.\"\n\nHe patted the wood between his legs, inviting me into his space. My brain hesitated, cautious not only for my own sake but also for him, but my body moved before I could think to stop it. I settled into his arms, my back against his chest. He put his arms around my waist and I heard him sigh. \n\nWe sat there in silence, far above the decks. The sun was behind the sail and so we were in semi-shade, a translucent shelter that felt intimate. Personal. I sat and felt the Captain breathe behind me and knew there was nowhere else I would rather be. \n\nHe was planning on speaking before he did. I knew it from the way his breathing picked up, his heart beat. His fingers picking at the fabric of my shirt. I waited to see what would come from the oxygen he was so studiously pulling from the air and into his body.\n\n\"I'm sorry,\" was what he had to say. I turned my head slightly against him so that I could look up at his face. \"I always end up being so unkind to you.\"\n\nI wanted to tell him no, that this was no the truth, but the storms of the last week did not allow the words to form in my lungs.\n\n\"I'm sorry,\" he repeated.\n\n\"You needed space.\" \n\nHis arms tightened around me. \"I needed you.\" His head dipped to the top of mine, lips resting lightly on my forehead. \"I need you, and I keep pushing you away.\"\n\nMy hand came up to cover his lightly, fingers brushing against the back of his worn skin. \"My love...\"\n\n\"Nights are so hard,\" he told me. I felt his heart, felt its rapid pace. \"Nights are so fucking hard. I can do it in the daytime, I can pretend everything's okay. But.\" \n\nMy fingers continued to slip over his skin, feeling scars and blemishes span out under my touch.\n\n\"I can't stop thinking about him, Sailor. Can't get him out of my head. He used to tell me that if I ever touched anyone else, he would find them and.\" I felt him shudder behind me. \"Fuck. He said the most fucked up shit, Sailor. He'd say the most horrible, fucked up shit and he'd tell me, he'd say, 'You'll do it too. I'll make you do it too.' And he'd laugh.\" I felt the Captain shiver behind me and pressed into his body. I was here, he was safe. He would always be safe with me. \"And I know he can't, I mean, I know he isn't here and we're not even in the North yet but shit, love. Shit.\" He drew in a shaky breath. I tried to smooth out the skin beneath my fingers. \"I keep having these nightmares, you know? Nightmares with him in them, with Val, with crew members I used to know. Crew members I know still.\" He paused; I felt his breath pause. \"With you.\" \n\nMy fingers froze.\n\nHe continued, his voice rushed. \"And I know they're not real, I know you'd never do those things but fuck they feel so, so. And gods, Sailor, it's so hard to know what to think anymore or how to feel, there are stories that I used to define who he was, that I believed told me things about him but now I just, I don't know because what if that wasn't him? What if that was someone else?\" Another one of those shaking breaths rocked against my back. \"What if it was you?\"\n\nI turned my head into his chest. \"I am not the King.\"\n\n\"I know, I know.\" And I believe that he did. I believe that he understood exactly what I meant when I said those words, how hard I tried to move away from the stories others had placed on my back. \"But how am I supposed to look at you now and not see shadows of the crown?\"\n\nWe sat there in the silence that came after a large truth, the calm after a wave you didn't see coming. I felt knocked down. I felt shaken. \n\nI felt guilt, because I had caused - was causing him - pain, and I did not know how to make it stop. \n\n\"I'm sorry,\" I told the Captain. The weight of my past life threatened to push me from the sky, send me crashing back down to the decks. \"I am so sorry.\" \n\nBut the Captain, the Captain. Always binding me in ways I did not know I needed. His arms held me tight, then tighter still, anchoring me to our home far from the mundanity of the earth. Small noises of comfort dropped from his mouth to land in my hair, dripped into my eyes, my mouth. I opened my lips and breathed them in, hoping they could find a permanent home in my body.\n\n\"Love,\" he was saying to me, \"my love, I don't blame you, please don't think I blame you for any of this.\"\n\nHow could I not? I breathed him in and tried to feel the shape of truth. \n\n\"I'm the one who should be apologizing for how I've been acting.\"\n\nHe should apologize for nothing. He was the endless sky to the horizon I created; I had not been complete until he had stepped into my life. I felt him settle against me and knew there was only one truth that mattered. \"I love you.\"\n\n\"I love you too.\" This time his breath felt much more stable. \"It's going to be alright. We'll get through this.\"\n\nI made myself ask the question I truly wanted answered. How did this man make me feel so meek? \"Does this mean you'll come back to bed?\" \n\nHe paused for a moment. \"I don't know.\"\n\nI nodded, but he understood that this was not the answer I had wanted to hear. \"The nights are hard. The nights are so hard, and I just don't know. I don't...\"\n\nHe sighed, his mouth burying in the top of my head. I could feel his breath. He might have said more words to me after that but they were lost in quiet and the brush of my hair. We stayed that way for hours, just us and the moving sun until the sun began to take its leave and the men came out on deck to practice arms. \n\nI slipped down the ropes to join them, leaving the Captain, radiant, in the setting sun. \n\n***\n\nWhen I came to the room that night the Captain was already at his maps. \n\nHe had slipped down from the riggings and past the men without a word when true dark had fallen. A few of the men noticed, calling out for him to join in the sparring, but a quick laugh and a wave of his hand was all they received before he was gone below the decks. \n\nAt the sound of the door closing behind me, he glanced up. \"Sailor.\" Brightness slid over his face, a flicker that contrasted and enhanced the dark in his eyes. \"Will you come look at this?\"\n\nI had never seen the maps the Captain had laid out, or almost any of the maps he used. I held the currents they tried to pin down in two dimensions roaring in my soul and whispering at my fingertips. What use were maps to me?\n\nStill, these papers the Captain presented now impressed me. I raised my brow as I took in the handwritten notes, the annotations in various inks. The physical representation of an intangible thing. \"You've mapped the border.\"\n\n\"As best I could.\" He was staring intently down at the sketched lines that demarcated the North from the South. \"I don't quite understand it, but I know where Dreyfus wouldn't sail and I knew...\" He trailed off, eyes tracing the marks that he must have used to keep him safe for years. \"He gave me more information than he thought he did.\"\n\n\"It's mostly right,\" I confirmed. His eyes came up to me quick, but he did not seem surprised that I would know such a thing. \n\n\"Where am I wrong?\"\n\nWhere was he wrong? I ran over the map again, searching for any egregious errors. \"Here,\" I pointed to a small atoll. \"It runs on the other side of this, although that is something that warmer currents bring about seasonally. And here, this island no longer exists at all. And here...\" My finger paused on the map, feeling the smoothness of the material. \"It is not a thing that holds well to paper, the border.\"\n\nThe Captain sighed. \"I had a feeling.\" Then those dark eyes were back on me. Staring. Waiting. \"But you know where it is, yes?\"\n\nThis felt like a test, somehow. What would be the right answer? I desperately wanted to be correct, but all I had for the Captain was the truth. \"Yes.\"\n\n\"Good.\" He pointed at the map. \"Is this still in the South?\"\n\nIt was only by leaning around his arm that was able to see to which island he was pointing. It was then another moment of orienting myself against the map, landmarks I understood and could place in my body, but when I finally understood what he was asking of me.\n\nThis, this was why I had no use of maps. If he has pointed to the island in the sea, or if he had pointed the ship toward that bit of land, placed us in the currents to take us there, I would have recognized it immediately. How could I not? It was as much a part of my legacy as the crown. \n\n\"That island,\" I told the Captain, my eyes frozen on the small point all but hidden by his index finger. How could a piece of paper reduce something so dangerous to a vision so trivial? This was how captains ran their ships aground on shoals when they should know better, trusting the safety of paper and ink. \"That island is a trap.\"\n\n\"Of course it is,\" the Captain responded immediately. His relaxed attitude calmed me, but not by much. \"It got its reputation somehow.\" His eyes flicked over the map, intense beneath knitted brows. \"They say it holds the key to killing the King, immeasurable power, and still no one goes there. There's got to be a reason. Now, they all say it's haunted - \"\n\n\"It isn't haunted,\" I told him with certainty. Or if it was, the ghosts were less of a threat than whatever killed the vessels they used to inhabit. \"And there is no power to be found there.\" \n\n\"Well.\" The Captain turned so that his back was against the table. His eyes were on me now. My body relaxed to find itself in the power of his gaze. \"What is there?\"\n\n\"Rum.\"\n\n\"Rum?\"\n\n\"It's a rum port.\" And old one. Perhaps one of the oldest. \"But it's a trap.\"\n\n\"Well,\" the Captain repeated. \"Rum isn't all that bad, is it?\"\n\nI stared at him.\n\n\"And a trap is better than haunted, I suppose. What kind of trap?\"\n\nA hereditary one. My father had used that island, and his father before him. \"One that kills those foolish enough to step inside.\"",
        "\"And who set it?\"\n\n\"The King.\" \n\nThe smallest smile slipped over the Captain's lips. \"Excellent.\"\n\n\"No,\" I reminded him, suddenly concerned at what he was planning. \"Dead. For naught but old rum.\" \n\nHe shrugged. \"The older the rum, the better it tastes.\"\n\nMy eyes narrowed. Why did he want to go to this island, of all the places he could travel? And why now? \"There are other rum ports.\"\n\n\"Not owned by Dreyfus.\" The chill in his voice called to the oceans within me, made them stir without my having to ask. I waited to hear more. I waited for the words that could create my storms.\n\n\"I'm going to take his rum,\" he told the map. He told my soul. Parts of me were churning, churning, churning. \"I'm going to take his rum, I'm going to take his island, and then.\" He looked up at me. \"And then we're going to take his fucking life.\"\n\nHis eyes met mine, black sky meeting with grey waters. All the power in the world, all the love in the universe. What was an island to eternity?\n\n\"Okay.\" He nodded to hear my agreement. \"But it will kill you before he knows you were there.\"\n\nThe Captain frowned to hear this. \"All traps can be disabled. Wasn't it your trap at one point? Can't you take it down?\"\n\nIt didn't work like that, not in the slightest. I had not set the traps, but had instead inherited them. My father had not even set all of the traps. Some of the more deadly ones had been his, true, but most had been the King before his, or before even that. The spells would have as many layers to it as perhaps there had been Kings. It was a complex and perilous island, one that only the strongest spell casters had any hope of setting foot upon alive. And for all my power, I was not a strong spell caster. \n\nBut there was someone on the ship who was. \n\nMy sigh was deep and long, a diversion as I tried to keep my body from doing what I knew I would need to do. But there was nothing for it; I knew where he was, and I knew he could help. The Captain had asked and so we would have to go. When my hand reached out and took the Captain's I did not try to stop it, simply allowed my body to pull him through space. \n\nThe Captain did not try to stop me either. When we left the room and began descending, however, he spoke up. \"Where are we going?\"\n\nI did not answer him. I did not know how to do it while keeping all the promises I had made. When we turned into the mess hall, the Captain pulled me to a stop. \"I know I skipped dinner, love, but is this the best time?\"\n\nBut we were not there for his dinner. We were there for Alan. \n\nI left the Captain in the mess, conscious of what types of things happened in kitchens after hours. It was a prudent move, as I found Alan crouched over a small sigil marked out on the floor in charcoal, a bowl overflowing with smoke in his hands. I watched as the intangible clouds fell onto the lines below, catching everywhere but where the charcoal lay and staying even in the drifting breeze of the open window. Cookie passed the bowl over the marks three times, murmuring quiet words and laying layer after layer of thick, pungent smoke. It hung thick and unnaturally still against the wooden grains until the shape of the charcoal lines was apparent only as negative space. \n\n\"Love,\" the Captain called from the mess. Cookie started, the bowl jerking in his hands. Smoke began to drift away from its place on the floor as if remembering it had no obligation to the gravity that had been placed upon it. Cookie's eyes flew open and locked on me. \"Let's just go.\"\n\n\"Shit,\" Cookie hissed, and at his words the smoke dissipated fully. I watched it flood the room, most heading towards the window and the freedom the sea breeze offered. Some slipped up my arms and legs and threatened my nostrils with a sneeze. \n\nI accepted it into my body, hoping that would ward off any rejection my system might otherwise present. The scents were cataloged without conscious thought, Minnie's teaching making the action automatic. Myrrh, sandalwood. I raised my brow as I recognized the bite of juniper. \"Are we hexed?\" \n\n\"Nay, lad. Nay. Just.\" He cast a baleful eye out the window where the smoke had dissipated. \"Doesn't hurt to be too careful.\"\n\nI waited a moment to see if he would say anything more. When he did not, I leaned back around the doorframe and caught the Captain's eye. \"Captain, could you come in here please?\"\n\nCookie panicked immediately. \"Boy,\" he whispered frantically, one foot working at rubbing out the charcoal on the ground, eyes searching for a hiding place for his pewter bowl, free hand flapping as if he could coax the rest of his incense from the room with his fright. The Captain's entrance found him frozen in place, legs splayed and a look not unlike fear on his face, one hand in the air and the other tucked behind his back to hide his bowl. \n\n\"Sailor.\" The Captain had stopped in the doorway, aware that more was going on here than was immediately clear. \n\n\"Captain.\" My eyes remained on Cookie's frozen form. I wanted him to make this choice for himself, to tell the Captain what he had been doing for the ship, for him. \"Cookie.\"\n\n\"Why are we here?\" The Captain sniffed at the air. \"Is something burning?\"\n\nCookie shifted uncomfortably.\n\nI chose to answer his first question rather than his second. \"We're here about the protections.\"\n\nCookie froze again. The Captain sent a strange look in my direction.\n\n\"Cookie.\" I spoke calmly and clearly. I needed him to hear this through the things he was going in his own head - this was more important than his panic, than his mystery. \"The Captain wants to go to Baum Port.\"\n\n\"Baum fucking -\" Cookie realized that his shock had brought his pewter bowl into view and cleared his throat, shifting so that his hand was again hidden behind his back. \"Oh, no, lads. You don't wanna do that, respectfully, Cap.\"\n\nThe Captain was giving me a strange look, which I ignored. \"I told him about the traps.\" \n\nCookie stared at me angrily for a moment, then softened his gaze as he turned back to the Captain. \"Then you should know why we can't be going there.\"\n\n\"Well -\" started the Captain, but I cut him off before he could get any further.\n\n\"He asked me if there was any way of disabling the protections.\"\n\nThere was a long moment of silence. Cookie stared at me. The Captain stared at me. I watched Cookie, evenly, wondering how this would play out. \n\nIt was sudden and it was quiet, but there was an intensity that could not be missed. \"No,\" Cookie muttered. The bowl came out from behind his back to jab at me. I think that in his concern about this new threat, he forgot about the things that he was trying to hide. \"No, no, no.\"\n\nI crossed my arms, silent. Waiting. \n\n\"No.\" Ash fell from the bowl as it made another sharp movement in my direction. \"I ain't goin' up against that.\"\n\nThe Captain took the smallest step forward. \"But you can?\"\n\n\"I.\" Cookie's head snapped over in his direction as if he had forgotten he was there. His next words held an air of defeat. \"I don't want to.\"\n\n\"But he can.\" That was not a question, and it was not directed at Cookie. \n\nBut it should have been. \"Ask him.\" It was not my secret to tell, and as willing as I was to force this conversation if Cookie denied it all now, with ash falling on my feet from his spell bowl and incense slipping out the window, I would not contradict him. His name and his past were his own. The truth that I knew might fit my needs, but it did not mean it was the truth that needed to be told. What else could I do but allow him to set his own narrative? No one had ever given me the option. \n\nAnd so I gave it to Alan, or Cookie, the spell master or perhaps the simple cook who made a very good porridge. \"He is the only one who can answer you that.\"\n\nThe Captain looked me over for a long moment, his eyes dark and searching. I let him search. He would not find answers on my form. \n\nPerhaps I was wrong. Perhaps he found all the answers he needed; perhaps he was not asking the questions I thought he was. Whatever the case was, when he turned his attention to Cookie his body had relaxed, his gaze less intense in his excitement. \n\n\"Cookie,\" he said. \"I'm not going to ask what kind of work you've been doing or what kind of work you can do.\" Cookie looked down at the bowl in his hand, his lips pursed tight. \"I just want to know if you can get us onto that island alive.\" \n\nCookie did not answer right away. Instead he stood staring down at the bowl he held in his hand. Wisps of smoke wrapped around his hands, the contents of the bowl clearly still burning. He watched the remnants of his spell as if looking for an answer. \n\nWhen he spoke, it was directed not at either of us but at the bowl he held. \"Aye. Aye, I can help you. But.\" His head snapped up, his hand with it, a single finger extended towards the Captain. The Captain looked taken aback by the force of Cookie's directed point; I did not bother to hide my smile. \"I don't want to be more than a cook, you hear? I want to stay here. I don't want the others knowin'.\"\n\n\"That can be arranged,\" the Captain agreed. \n\n\"Okay.\" The hand came back to the bowl. \"Okay.\" Now Cookie turned to me, glowering. \"Your father put some nasty, nasty things on that island.\"\n\nI saw the Captain cross his arms at this understanding of my past. I merely shrugged. \"What do you need to get through them?\"\n\n\"I got everything I need. Gods.\" Cookie turned away from us and busied himself with cleaning out his bowl out the window. I watched ash flutter in the breeze. \"Them protections, boy. And did you add any? I know your brother will have, gods all protect us from that man. Shit. Baum fuckin' Island.\"\n\nThe Captain's eyes were on me and only on me, an intense stare that I steadfastly ignored. It was only when Cookie brushed past me and bent down to his cabinet, when he opened the doors and the Captain caught a glimpse of the things he had been keeping locked away next to the onions and potatoes that those eyes jumped from me to take in the myriad of dried and drying herbs, the stacks of incense, the pewter bowls and knives with handles too decorative in too specific of ways to be of any use to a cook or even a fighter. \n\nThe door slammed shut, causing the Captain to blink hard. \"Gonna have to make a few questions, lad, ask some people I don't like to ask.\" The bowl jutted in my direction, incense clattering. \"Shoulda left the ship when you came aboard, nothin' but trouble and work.\"\n\nI felt no need to stay and be berated by this man, even if he was a brother of Minnie's. I turned and headed for the door, collecting the still-staring Captain along the way. \"We'll leave you to it.\"\n\n\"Aye, boy, you will. And you'll be back in the morning to bake my fuckin' bread,\" he shouted after me as we moved through the mess.\n\nI was shaking my head still, smile tugging at my lips, when the Captain overtook me and pulled me through the hallway at a faster speed than I had expected. He kept the pace until we reached our room, when he pushed me through the door, closing it firmly behind us.\n\n\"What,\" he said before he had even locked the door, \"the fuck was that?\"\n\nI sat down on the bed and leaned back, trying to decide how much I could tell him. \n\n\"Cookie is going to get us onto the island,\" I landed on.\n\n\"Well, no shit.\" Door locked, he made his way over to me. \"How? Why?\" He stopped a few feet before me, arms crossed and lips tight. \"He knew who you were.\"\n\nI shrugged.\n\n\"He knew who your father was. Your fucking family.\"\n\nI shrugged again. I should hope he knew who my father was; after all, he had known my father. \n\n\"Does he...\" The Captain swallowed words, found new ones, swallowed those as well. I wondered at the capacity of his stomach, the number of questions that must be sitting on his tongue. I did not feel good to watch him fill with unresolved tension and yet I knew that so many of those questions I would be unable to answer and I thanked him silently for not making me refuse him. \n\nInstead of speaking, the Captain moved forward. He pushed my legs apart until he could fit between them and drew my arms around his waist, moving me until I was where he wanted me. I held him as he requested, feeling his hands run over my back, the ridges of my scars, my past, tingling beneath his fingers. When the Captain finally found words worth speaking, they dropped from his lips onto those scars and scattered, dripping over my back and sending a shiver down my spine. \n\n\"Do you trust him?\"\n\n\"With my life,\" I answered immediately. But I did not have a life, not anymore, and so I amended that thought. \"With my name.\"\n\n\"Okay.\" Fingers found the remnants of questions and chased them away, wiped at my back until our bodies were the only thing that occupied this space. \"Okay.\" \n\nMy face rested on the Captain's chest, my cheek against the ever-bare skin where his shirt lay open. The proximity gave me warmth, and not just from the closeness of his body; there was a warmth that came just from his touch, his heartbeat. I could feel his breaths as his lungs filled and deflated, filled and deflated. \n\nI wanted to be closer. I needed to be closer. My fingers began to tease at the loose folds of fabric that rested at the top of his breeches. \n\n\"Jesus,\" he suddenly muttered above me. \"And all that shit in the cabinet. What the fuck has he been doing?\"\n\n\"Hmmm,\" was my response. My fingers worked at the hem of his shirt. \n\n\"Has he been doing spells the entire -\" the Captain fell silent as I turned my head and pressed my lips to his chest. His shirt finally gave up the fight and allowed my fingers access to the skin of his back, and I ran both palms up the warm expanse in exultation. I felt the Captain's breathing catch, his hands arrested in their movements across my tumultuous back. \n\n\"You,\" he said softly. My teeth grazed his chest in response, eliciting a quiet gasp. One of his hands made its way up to my hair where it sat, cording through the short locks. I kissed his chest in thanks, then kissed it in love, then kissed it again just because I could. Each time my lips brushed against his skin his fingers tightened in my hair, encouraging me to continue until he was in control, until he held me so tight I would never be able to leave.\n\n\"You,\" he repeated, and this time there was an edge to the call. The hand in my hair tightened until my instinctive response won out and I tilted my head back to lessen the pressure, my chin resting against his chest. I looked at him like this, pressed between his beating heart and controlling hand and found his eyes so dark, so full of love that if not for the fact that my heart beat for him it would have stopped. \n\nHis free hand came up, fingertips tracing over my skin and setting my world alight. The back of his hand brushed over my cheek, then his thumb over my mouth, dragging my lower lip open just enough that his finger teased at entering. I pushed my tongue to meet him there, let it trace the whirls and spirals of that thumb and saw his eyes darken further, his gaze eternal, watched him build whole worlds for me within the galaxies he contained and dreamed of living in every single one of them with him. \n\nIt was a dangerous thought, even for me, especially for me, for I could barely keep myself together here in this world. This man, this endless man, how he reduced me to the things I wanted to be with only the touch of his thumb and how I wanted to be reduced further, boiled away until I was nothing but the pure essence of passion and raw energy of the ocean because that was how he made me feel.\n\n\"You,\" he breathed a third time, and then he took me to bed. \n\nHis hand in my hair guided me back, his other hand pressing on my stomach in a gesture that made my lungs feel too small. He half-climbed over me as he moved me to horizontal, swinging his leg over my thigh and placing a knee beside my hip. This kept the slightest distance between us, our bodies only touching where that touch was an intentional choice by him. \n\nHis hand pulled up the hem of my shirt, finding easy access to skin made sensitive by proximity and distance. By him, always by him and the contradictions he served me like delicacies. He moved the fabric, distracting me for a moment, but a quick tug at my hair brought me back to him. \n\n\"Want this off,\" he murmured, fingering the hem of my shirt. I nodded, not daring to break eye contact. The only time I was not looking in his eyes, searching those dark pools for hints of what would come, taking comfort in their endlessness, was the instant my shirt moved over my head. \n\nHe watched me back hungrily, gaze never leaving mine. He took my shirt with the hand that had been in my hair and held it for a moment, and I saw a thousand possibilities crash through those eyes. \n\nI wanted every single one of them. My hips slid up on their own accord until my hardness pressed against his. \n\nHis eyes flashed. I waited for the inevitable punishment, but he merely smiled. \"You're right.\" He ground against me, pushing a moan from my lips. His fingers dripped down my arms, my neck, pooled for a moment in my collarbones then trickled past my ribs. \"These need to come off too.\"\n\nHe left me mid-motion, leaving me pressed into the air and gasping at the suddenness of it all. I cursed quietly and heard him laugh from where he sat to my right. \n\nHe leaned down, resting his weight on his elbow. This brought his head directly next to mine. I tried to turn and look at him, but he pushed my head away and I caught only a glimpse of a smile that made my heart race. \n\nI felt his heat as he came closer to me, then his skin, then the press of his lips to my ear. \"Take them off,\" he whispered. I tried to nod but his hand was holding my chin firm where he wanted it and so I merely did as he asked, my hands shaking, curses falling from my lips as he bit and teased my earlobe. It took longer than I wanted, so distracted was my body, but in the end my breeches joined my shirt on the floor.\n\nHe caught my hands on their way back to him, guiding them to his own clothing. \"Mine,\" he whispered as my fingers caught in his shirt, and I do not know if he was telling me what to remove or telling me what I was and I loved him for both statements. My hands were no more steady in this than in disrobing myself, not with his hands on my stomach, dancing so close to my hips, my cock, his breath hot and whistling in my ear until it was all I could understand. His lungs, his breathing, his rhythm and it was so natural, so complete that it did not take me by any sort of surprise when he began pushing my head down.\n\n\"Pants,\" I heard him tell me, but I knew where he wanted me to be, where I wanted to be. His hand was firm in my hair, the pressure sure of my direction but I managed to steal tastes of him along the way, my lips grazing along his chest, his sternum, his stomach as my body sunk to the floor beneath his knees. He held my head against the bone of his hip as I struggled to unlace his breeches, the weight of his hand a suggestion that I could not, would not, ignore. \n\nFinally I loosened the cords. My heart raced to see my prize, his cock hard for me, but before I could make my way to it he pushed my head away. I think I moaned, a quiet noise of anticipation and disappointment that was lost in the rustle of the bed as he sat up. \n\n\"All the way.\" His voice was quiet, had to be quiet with the way it slipped so soft into my stomach and made me churn. His hand pushed me down, down, down. \"All the way, Sailor.\"\n\nHe pushed me slow and so I undressed him slow, kissing the bare skin I uncovered as I went. The soft hair on his legs tickled my lips and he tasted like desire. \n\nHe had to let go of my hair near the end, his body unwilling to bend in the ways he was asking it. I kissed the instep of his foot lightly, drawing a gasp from his lips, and pulled his breeches from his body. ",
        "\"Fuck,\" he muttered. I began kissing my way up his leg, my destination clear in my mind and my actions. \"Fuck.\" \n\nHe leaned back as I reached his cock, my tongue snaking out for a taste before my lips could even touch. His hand reached my head just as my lips reached his cock, and the moan I made at the feel of his fingers in my hair caused his whole body to shudder. \n\nMy head bobbed up and down on his cock, my tongue moving over the veined underside and the ridge just below his head, his slit, anything that could make him moan and tense. He allowed me this exploration, his hand on my hair tight but making no attempt to change my movements.\n\nMy motions might have been my own, but I had no illusions of control. In that moment I was his, and I acted on that knowledge and that desire as fully I knew how. \n\nHe did not look away from me for the whole of it. Each time my eyes drifted up and found his, looking down and watching me with intent as if I were the only thing left in the world, as if he could not look away, my spine would tingle and my cock jump until I was blind to anything but those eyes, my passion, his cock. His eyes again. The worlds they created for us and us alone.\n\n\"Oh, fuck.\" His hand suddenly tightened on my hair, holding me in place. I could not help myself, however, and continued to trace patterns on the underside of his cock with my tongue. \"Oh, fuck.\" \n\nHis entire body convulsed around me as he flooded my mouth with cum. I swallowed what he had to give me and continued to lick at him, hoping he would let go of my head. I wanted more. I needed more.\n\nInstead, he pulled my head back. The tip of his cock traced over the ridges on the roof of my mouth as it left my mouth. I was made so sensitive by him already that this simple touch drew from my lips a moan and from my body a shiver.\n\nHe stared down at me for what felt like eternity. I would have stayed there longer, on my knees between his legs, in the darkness of his starlight eyes and bottomless gaze. I wanted to be his forever. I wanted this to last.\n\nBut he moved, his hand in my hair the force that commanded my motion. I obeyed without thinking, pulling my body up as he lifted me towards his frame. \n\n\"C'mere.\" He pulled me up onto the bed, kissing me fiercely as I climbed atop him. My limbs shook from what he had stirred up, what he had caused me to contain and I know that he saw it, that he felt me quiver against him and I saw the way it made him smile. His hand pressed tight against the back of my neck, locking me against him. When I felt his touch against my cock I made a noise that he captured with his tongue and pressed back against me. He made me taste my own desire on his lips. \"Come here,\" he whispered. His hand worked my cock. My body shook, my soul, our world. \"Come right here.\"\n\nWhat else could I do at his command? Locked there against him, my breaths mixing with his as our lips pressed together, our hearts symmetrical and balanced. My body shaking with desire. I came. \n\nHis hand moved up to my face, softly stroking my face as I shook through the last of my pleasure. His took my pants into his lungs and calmed them, sent them back gentled until I too was a gentle thing, until my body collapsed beside his. Even then he did not let me go, his body tangling with mine as he kept me close. It took only the smallest forward motion for him to lean in and kiss me.\n\nI loved this man. I loved him and I would give myself to him again and again and it still would not be enough to fill the endless expanse of his soul, of his being. Of our love. I kissed him back and felt the way the universe made space for us.\n\n\"I love you,\" he whispered against my lips. I wrapped my arms around his waist and held him, his breath contained my arms, his words settled within my chest. \n\n\"I love you,\" I returned, and he tucked his head beneath my chin and like that, we drifted off to sleep.\n\n****\n\nI had never been to this island before. I had never had a reason. Men came here. Men died here. Their deaths had been brought to me, ordered by me, the King, and I? I had turned away and towards things I thought myself capable of changing. \n\nIn the end, nothing had changed. The slave trade was back, the debt-brothels still prospered. Men I had returned from death cowered on land in a new purgatory. What had I done with all my power? Why had I ever thought change to be possible?\n\nThe Captain made anything possible. I was capable of eternity with him by my side. And so I should have known, should have guessed we would end up here, side by side in our transport with only Alan here for company. \n\nAlan, the sea, and a small chest of supplies.\n\nWe told the men we were going to the island first because it was our right as owners of the ship. They had grumbled but had consented, happy and surprised that we were offering a rum port at all. Cookie's presence was explained away with an excuse about checking to make sure the rum had not gone bad, that we did not want to waste the men's time if there was naught on the island but vinegar and piss. \n\nThere was no vinegar on the island. Or perhaps there was, but it would not have come from the rum - it was spelled for protection, to last. I could feel the strength of the preservation magic from where we sat, rocking in our small vessel still feet from land. It was old, and it was strong, and it was leaking. \n\nIt was probable that the first application of this spell had been only on the rum itself, that it had been done so loudly as a mistake or perhaps as part of the trap. Minnie had once told me that old magic was different, that we had once dealt directly with magic rather than ask the gods to act as intermediaries. That we as a species had needed time to learn why subtlety and communication are just as important as raw power. \n\n\"It's a living thing,\" she used to tell me. \"It's got its own type of thinking, magic does. Spells remember, and they aren't kind. Better to let someone else do the talkin'.\"\n\nPerhaps, then, this spell was simply so old and the original deal maker so dead it no longer felt the need to listen. Whatever the reason, the spell no longer affected only the rum. Coconuts lay on the ground everywhere, fresh after all their time from their trees. Where there should have been piles of shells and swooping gulls on the shoreline, there was nothing, just a pristine black beach ground from the nearby volcanic range. Grass swirled in the sea breeze, unnaturally green and growing where I knew no fresh water had run in years. \n\nAnd lying in the grass were the corpses. \n\nThey were too clean, those corpses. That was what bothered me the most about them. I had seen many a dead man in my lifetime, had made many a man dead by my own hands, had stood close and watched as life fled bodies unable or unwilling to contain the soul desperate for release. I was comfortable with death; I was not comfortable with this. Not a single wound could be observed, no blood marked the ground. They looked as if they had simply lain down and never gotten back up. \n\n\"Sailor,\" the Captain muttered. He reached out and I reached back, placing my hand in his. \"Is this recent? Did they just arrive?\"\n\nI shook my head. These were old deaths, piled atop each other like entries in a guest book. \"Look at the clothes.\"\n\nHe took a moment to take in the varied fashions, marking the men from different parts of the world, different centuries. \n\n\"There are men here,\" I told the Captain, and this was not something I knew from clothes but instead something I understood as part of me, as the things I had once been, \"as ancient as the Kingdom.\"\n\nThe Captain took this in, his eyes skimming over bodies as if he were reading characters on a page. \"Why do they keep coming? They must see what we see, they must know. Why not turn around?\"\n\nThere was a man near the shore dressed in plain clothes that would mark him in any age as a being who did his own labor. He clutched a ruby in his hand, the gem pulsing slowly with the kind of light the mind does not wish to acknowledge. \"They thought they were different.\" The man beside him wore an intricately knit fishnet over what looked to be fine silk. The spell had been meant to catch bad energy and protect the one contained. \"They thought they had power.\"\n\nBeside me, the Captain frowned. \"How is that different than us?\"\n\n\"We're different.\" I looked down at him, smiling into those bunched eyebrows, those down turned lips. My finger rose to trace the sweep of his cheek. \"We have power.\"\n\n\"And me,\" Cookie reminded us from where he knelt. He held up the piece of wood he had been working on for my inspection.\n\nThe markings he had laid down meant next to nothing to me. I shrugged, and he shook his head, scowling. \n\n\"You're right, you're right. Mith'ai isn't right for this at all. Gods, if only they hadn't killed the Gentle One, I could really fucking, fucking use, but that would just complicate Irate's contribution...\" He looked up from his scribbling, eyes sullen. \"I get the sea, right?\"\n\nI raised a brow. Cookie threw up his hands and went back to work.\n\nThe Captain pressed his lips to my cheek. \"Does he know what he's doing?\" \n\n\"He's the best,\" I answered evenly. Feeling how that did not calm the man standing by my side, I went a step further than perhaps I should. But I trusted the Captain, and he had already promised to keep Cookie's abilities in confidence. \"This is what he does, my love. What he is best at.\"\n\nThe Captain nodded, once, then leaned more fully against my body. I put my arm around his waist and waited. \n\n\"Ready?\" Cookie asked. I nodded without looking. As soon as I made the motion I could feel it, the familiar drain as someone close to me, someone deeply powerful, pulled on the threads that wove through my very being. It was a sensation that made me nostalgic and homesick and my version of nervous all at once. For so long that person had been my Minnie, and then it had been my brother, Val, and then it had been Cass, and when it was not them it was important that I knew who it was, for someone who could take hold of parts of me like this was someone who's face I needed to know. \n\nBut it was someone I did know this day. I heard the sizzle that meant Cookie had cut open his arm and begun the ritual, his blood acting as offering or guard or gateway for the various spirits and gods and energies he was reaching out to. \n\n\"Shit,\" the Captain muttered. I followed his gaze and found small ripples moving out from our boat, lit from within in a way I found I could not understand. More and more of these ripples passed through the water until we were surrounded and glowing, our faces taking on shapes less common in the shadows they cast upwards. \n\nThen, suddenly, the glow was gone. I wondered for a moment if that was it, if that quiet show of force was all that Cookie had called up, when a massive shadow fell on us from above. \n\nWe didn't need to turn, and yet we did, we had to with the way that shadow moved so quick. It was not there and then it was and then it was not, and we turned with it and watched as a wall of water as tall as a ship and as serene as the sea at calm passed over the island, sparkling in the sun like the sapphires from which Cassandra had taken her name, and when it reached the opposite side it sunk slowly back into the waves and only the slightest swell reached our tiny boat. \n\n\"Did -\" The Captain pointed. \"Did that thing just go over us?\"\n\n\"Alright.\" I turned to find Cookie bandaging his arm even as he began to write down more runes and markings. He looked pale and drained, and the bandage he hastily attached to his wound was quickly growing red. \"That's the death shit taken care of. Nasty shit, nasty shit, washed away now and shoulda took those bodies with it...\"\n\nI turned back and found that it was exactly as he said. The coconuts, the bodies, they were swept from the shore and out to sea. For you, Dave, I thought. A present. A gift, after years of being denied. Let this sate you and may you leave me alone. \n\n\"But that'll have left a mark.\" Cookie leaned on the side of the boat, eyes closed. \"Noisy work, what I just did. Lots of deals to break many an agreement, and some of them old as time. Nothin' for it, woulda liked it a little more quiet but it is what it is.\" \n\n\"Dreyfus will know that we're here?\"\n\n\"Shit.\" Cookie had not even bothered to look at the island. \"He'll know someone is.\"\n\nAnd he'd have a pretty good guess at who. Cookie had found a way to name me, or at least invoked a part of me that was recognizable to those who were in the know. There were very, very few who could do such things. I placed a hand on Cookie's shoulder. \"I'm sorry,\" I told him softly. He did not respond, but whether that was from his exhaustion or because he did not want to hear what I was saying was unknown to me. \"I know you did not wish to be identified.\"\n\nThe Captain turned to him, looking concerned. \"This could identify you?\"\n\n\"No,\" Cookie corrected. \"Fuck no, I'm not so fucking sloppy as to leave a trace like that.\"\n\n\"But there are not many that could do this work,\" I explained.\n\nHe sighed, pressing his wounded hand to his face. A drip of blood worked it way out from under the bandages and dripped onto his shirt. \"Aye.\" Another sigh, another drip of blood. \"Aye, that's true, my boys.\"\n\nI had to ask, had to know. \"Did you name me?\"\n\nHe gave me a strange look, one half of confusion and half pride. \"A name is just a word, lad. Just a made up word like the rest of them.\" \n\nIt was not, and it worried me to hear someone as powerful as he express this sentiment. Rather than think on it too much then, I took his arm from him and began rebandaging his wound. It was a sign of exhaustion that he did not protest this action. Instead, he frowned down at the marks he had been making on the back side of his now-singed wood. \"Gotta do the second,\" he muttered. His free hand moved up to scratch at his cheek thoughtfully. \"Still haven't taken off those damn warning bells, wasn't all tied together -\"\n\n\"You're in no shape,\" I interrupted him. He scowled up at me, but before either of us could turn this into an argument the Captain spoke. \n\n\"I want him to know that I'm here.\"\n\nMy heart began to beat faster of its own accord. \"My love.\"\n\nHe understood the question in my words and nodded, once. My head mirrored the motion on its own, my body again deciding for me how I should feel about this. \n\nDreyfus should not guess at who disabled his traps; he should know. He should be frightened. He should sit at the table my father had built and know that every meal, every moment, every passing breeze in his sails only brought us closer to him. Brought all of us closer to his death. \n\nI turned back to Cookie. \"What else is there on the island?\"\n\n\"Preservation.\" The poor man looked drained. I wondered what he had offered up to gain us the favors we had just enjoyed. I wondered what he had given up, what he would give up, to fight this fight that was not his. \"Preservation and those damn warning bells, which I shoulda been able to -\"\n\n\"Leave them.\"\n\nHis head jerked up. \"What?\"\n\nThe Captain's hand squeezed in mine. \"Leave them,\" he said. \n\n\"Fuck. What? Gods, fuck no.\" Cookie was looking more and more animated as he began to understand what we were asking. \"He'll know you're alive. Both of you. And after all the shit I've done too, I've done a lot of work, a lot of work to keep this from happening.\" This was more like the firey cook that I had come to rely on. It calmed me to watch his rage return to his body. \"It's your call if you want to throw all that away, Captain, but I'm gonna be pissed.\"\n\n\"It is better to decide when he finds out,\" I told him, while the Captain said, \"I'm fucking done hiding from that asshole.\" \n\nCookie threw up his hands. \"Fuckin' fine. Your fuckin' funerals. I'm not saying the fuckin' rites, don't expect me...\"\n\nI rowed us to the shore as Cookie continued to mutter in frustration, getting us as close as I could get to the calm of the black beach. When the small boat ran aground, I moved to get out.\n\nCookie put a hand on my arm. \"The moment you step out,\" he told me, eyes searching mine. I nodded my understanding. \n\nAnd then I stepped into the water. \n\nIt was a flash, the magic placed there, quiet and fast and bright as only true magic could be. I felt a warmth around my feet at the same time as I felt a small ping against my soul. It was an odd sensation to feel it here, so close to the source. I had felt this very spell many times, had known many men's deaths by the ghosts that they sent. I did not bother to watch as the light sped off, knowing that it had taken my shape, knowing which direction it would have gone. \n\nI heard a splash as the Captain stepped down beside me, and this time I did turn to look, pointing out the bright silhouette darting away just below the azure surface of the water to the man standing at my side. We watched it speed away until it was lost to the glint of sunlight against the waves. \n\nHis hand once again found mine. We stood there, in the shallow water of the cove, salt water lapping against our legs and an island that had forgotten how to die and instead killed all that came ashore at our backs. We faced the direction the brightness had gone.\n\nWe faced, as we always would, North. \n\n\"Gonna take that shit off now.\" Cookie interrupted us, causing the Captain to jump. \"Unless you want all your men sent off in that way to that King o' yours.\"\n\nI waved a hand, indicating that he was free to do as he wished. The Captain leaned on my arm and we waited in the shallow water for something to happen. \n\n***\n\nWe brought the men over boatload by boatload. They did not know why we were stopping here, nor did they care so long as there was rum. Most did not even speak to us as we stood on the shore, watching strong arms row the distance from the island to our ship and back again. \n\n\"Capitan.\" I turned to find the Russian striding towards me, smile on his face. \"Brat.\" \n\nI sighed at the familiar greeting. The Captain smiled back, bumping me as he waved. \n\n\"I am glad to see you cleaned up the beach!\" the booming man told us. The Captain paused in his motion of greeting. \"And spacibo for bringing me back, it has been too long, too long since I was here last!\" He clapped the shocked Captain on his shoulder, causing him to take a half step forward.\n\n\"To treasure!\" the man roared, and walked away after the rest of the men.\n\nThe Captain looked up at me. I gave a long, deep sigh.\n\n\"Who is he?\" he asked, but before I could think to answer there were more men and more greetings and more fingers pointing towards where the rum would be found.\n\nIn time, they set up a fire on the beach. There were no fallen logs, no wood that was not green and this frustrated them but they gathered grass and burned that within a palm log that the Russian had felled and Hamms had hollowed and soon there was a blaze going, smoke billowing forth with gusto. \n\n\"Well,\" the Captian said as he approached me. He held out a cup in my direction. \"If he didn't know we were here before, he does now.\"\n\nHe knew. He would know, and so would everyone in the fifty miles around us. It was dangerous to burn wood this way; but it was not as dangerous as me. \n\nSo long as I stayed sober. \"I'm not drinking tonight.\"\n\nHe sighed as he settled beside me, arms draped over my legs and cup still proffered. \"I know.\"\n\nI took the cup, sniffing it carefully, then tasting it on my lips. It was water, fresh and clear. The Captain must have had it brought from the ship. \"Thank you.\" \n\n\"Of course.\" He rested his cheek against my leg, arms hugging my knees. I noticed he held no cup of his own and chose not to comment. \n\n\"Did you and Cookie sail together? He knows a lot about you.\"",
        "The question surprised me. \"Jealous?\"\n\n\"A little.\"\n\nI looked down. That had surprised me even more than the question had. \"You have nothing to envy.\"\n\n\"No, no. It isn't like that. I just.\" He sighed, eyes on the men before us. They moved through the smoke like wraiths, like phantom revelers at a wake of ghosts. Each time the wind shifted, men would disappear as if they had never existed and new landscapes of drink would be unveiled.\n\n\"It isn't that I'm jealous of him, really,\" the Captain finally explained. \"I'm jealous of what he knows. Or what you two have, you know?\"\n\nI didn't know. I rested my hand on the back of his neck and felt him move into the gesture. \n\n\"You two speak of a world that I wasn't part of and that hurts.\" He looked up at me, eyes made slightly red from the smoke. \"I feel like he has access to this part of you that I never got to saw, will never get to see. And that hurts even I know it shouldn't, even if I know it's unreasonable.\"\n\nMy finger ran lightly over the back of his neck, feeling the small hairs that lived there, the smallest parts of him that I loved, that made him whole. \n\n\"I want to be part of all your worlds, Sailor. If you hurt, I want to be the one who healed you. If you found victory, I want to be the one who cheered you on.\" \n\nI opened my mouth to create an answer to this, but before I could find the words a being crashed out from the smoke. \n\n\"Shit.\" The Captain pulled away from me in his surprise, hand going to his knives and legs drawing back. I too started, my own hand dropping to find a handful of sand.\n\n\"Captain,\" Natch slurred. I released the sand slowly, watching Natch's body and the way it lurched. I could feel the Captain's sigh against my leg as he moved his hand from his weapons. \"Juss wanted to tell you, I just. Oh, it's Ghost.\" His smile was so sloppy that I looked to the Captain with concern. \n\nThe Captain merely sighed. \"Natch, it's good to see you.\"\n\n\"It is so good.\" The boy collapsed across the Captain's legs, a mess a limbs and gravity that did not look possible. \"You're so good, you're the. The best Capt, did you, did you know that you're the best?\"\n\nI opened my mouth to ask the Captain what we should do when another figure crashed out from the smoke.\n\n\"Oh, there he - Cap, Ghost.\" Sneg nodded their head in an acknowledgment. \"Sorry, didn't mean to bust in, I just wanted to make sure -\" They waved towards Natch.\n\nThe Captain ignored their words, focusing instead on their face. Blood was smeared on their chin, stemming from a small gap in the smooth skin of their lip. \"He do that?\"\n\n\"Yeah.\" Sneg sighed. \"I was pulling him off of Gret.\"\n\nThe Captain swore quietly. \"Fighting or -\"\n\n\"Fucking,\" Sneg told him. \"Definitely intended to fuck.\"\n\n\"Damnit.\" The Captain looked down at the boy laying half-asleep in his arms. \"You can't do these things, lad. You know what it does to you, and you know what it'll do to Gret.\"\n\nNatch burrowed his head further into the Captain's leg and ignored his words. \n\n\"I can take him back,\" Sneg offered. \"He probably shouldn't stay here.\"\n\n\"Aye.\" The Captain began pulling Natch up, ignoring the small sounds of protest that pressed from his lungs. \"Thank you, Sneg.\"\n\n\"Of course.\" They slung Natch's arm over their shoulder, taking his weight with no trouble at all. \"What's family for?\" \n\nThe Captain watched them go with a frown. I waited for him to relax again, to come back to me, but what just occurred clearly hung on him. \"My love,\" I called.\n\nHe took a quick breath in. \"I'm sorry.\"\n\n\"No need.\" My hand slid into his long locks as he leaned back against my leg. \"You're concerned?\"\n\n\"Yeah.\" He sighed. \"He gets like this when he drinks sometimes, it's like he can't let himself touch anyone when he's sober so he get's fucking trashed and tries to touch everyone. It is not a good thing for anyone involved.\"\n\n\"He never tried with you.\"\n\nThe Captain paused for a long time. \"Of course he didn't,\" he explained quietly. \"I'm the captain.\" He turned, eyes searching mine. I watched him try and decide which walls were climbable and which had to stay. \"How much do you know of his past?\"\n\nNow it was my turn to pause. I also did not want to give more of Natch's story than was necessary. \"The man we killed,\" I said. \"Yarrick.\"\n\nThe Captain nodded, once. \"I thought that's what that was. He never told me, wouldn't tell me the name. He said he didn't want a revenge mission, didn't want any sort of repercussions. Just wanted to get out and he'd done that.\" He shook his head. \"Get out. He considered where I found him to be getting out of something.\"\n\n\"He said you found him in a brothel,\" I tried when it became clear the Captain had become lost in something within himself. \n\n\"Aye. Old enough to make decisions for himself but too young to be -\" He shook his head. \"And I told him, I told him that it was not right for him to be there, but when you get like that. When you're told for so long that you're nothing but that.\" Another shake. I softly began to cord my hand through his hair and watched him relax, if only slightly. \n\n\"You bought out his service.\" My statement was as much a reminder of his good deed as it it was a question. I wanted to know more, but only if he was willing to share.\n\n\"Well, I wasn't just going to leave him there.\"\n\n\"Others would have.\"\n\n\"I'm not others.\" There was a moment of silence after that cold proclamation. Then the Captain sighed, all of the anger in his body leaving his body at once. I felt him collapse against my leg and supported him. \"It was one of his.\"\n\nI knew he was speaking of Dreyfus. I continued to run my hand through his hair, reminding him I was there. \n\n\"I knew. I mean, I know what they do in those places. What they make you do.\" There was a pause so long I thought that would be the end of the conversation. I passed my hand again and again through the Captain's curls, parsing out ringlet from ringlet. When he spoke again it took me by surprise. \n\n\"He found me there, you know. Bought out my service. Only he didn't, not really because he owned the place, you know? So he just took me.\" The Captain's voice was low and clear. \"I found out a few months in and confronted him about it, and he just laughed. Told me that should be incentive to be.\" He took a deep breath. I breathed with him, lived with him. \"To be good. That he could send me back whenever he wanted.\" Another breath. \"That he owned me. And that I should be grateful that he was as lenient as he was.\"\n\nI leaned down to kiss the top of his head. \"I'm glad you got out.\"\n\n\"Me too.\" He smiled up at me, a glint in his eye that settled my stomach even as it made my heart leap. \"I paid for Natch's freedom with gold I stole from his hold.\"\n\nI smiled back at him until he reached up to guide my lips to his. Above us the stars shone clear but for the point where they were obscured by grey billows coming from our proof of presence, our source of warmth. From within the smoke the men began to sing a chanty I had not heard in years as they drank the King's rum, the only thing on this island worth coming here for, the thing so many men had died for without even knowing it.\n\nPerhaps there was power on that island. Perhaps I found it in that kiss, in the smoke of green and ever-living plants, in the knowledge that we as humans survive even the worst things this world can give us. \n\nOr perhaps that knowledge was with me already, and I had only needed the right man to unlock it. Whatever the case may have been, as I kissed the Captain I had never been so happy to be in a place, and I knew I was exactly where I needed to be. \n\n***\n\nThrough of all this, Ichor refused to go ashore. He stayed on board, and Sneg told me later that he spent all night on the floor of the deepest storage room, his ear pressed to the boards, listening as if he could hear souls returning home."
    ],
    "authorname": "nakamook",
    "tags": [
        "pirates",
        "gay",
        "blow job",
        "domination",
        "submission",
        "plot",
        "romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-19"
}