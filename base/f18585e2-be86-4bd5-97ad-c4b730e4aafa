{
    "title": "Massage Apprentice Ch. 05",
    "pages": [
        "After The Spa\n\nAs Jen and I headed home after our couples massage we initially didn't talk. For my part, I was re-thinking what we'd just experienced; I assumed that Jen might be doing the same.\n\n\"So ...\" I said, just to get a conversation started.\n\n\"So,\" Jen replied, \"what did we learn today?\"\n\nI had to laugh a bit, which elicited a giggle from Jen.\n\n\"Quite a lot\" I said. \"But a better question to ask is what did we learn today that you can apply to your business, right?\"\n\n\"Right\" said Jen. \"I'm going to have to think that over a bit. Perhaps we can offer some variation of the couple's experience, as well as a 4-hand option. I know there are probably a few clients that would want to try that.\"\n\n\"But for now,\" she continued, \"we have to get you more involved with the clients.\"\n\n\"Fine with me,\" I replied. \"How do you see that happening?\"\n\n\"I'm thinking that I can call you my apprentice, or assistant. Initially you can be responsible for getting the clients settled in, supplying towels and sheets, water afterwards, whatever. And, if I clear it with the client ahead of time, you can be a silent observer during the massage.\"\n\nThis sounded good, and reasonable, to me. I told Jen that I could do that.\n\nJen continued. \"That way you can observe how I deal with clients. How much pressure they want, how I address any special issues, and how much, or how little, conversation there is. Once you get a better understanding of that, I don't see any reason why we can't get you more hands-on experience.\"\n\n\"You mean 4-hands and couples?\" I asked.\n\n\"Yes, initially.\" she replied. \"Eventually you can fly solo with new clients, or take over some existing ones. And you could also fill in for me when I'm not available.\"\n\nJen smiled and then, after apparently thinking of her response, said \"Do you remember us talking about ethics? About there being a line that each masseuse has to set for themselves, and then decide if they are willing to cross that line?\"\n\n\"Yes,\" I said. \"I remember.\"\n\n\"Well, after what we experienced today, I might be rethinking where that line is for me,\" she said, with a hint of a smile. \"And whether or not I'll be crossing it.\"\n\n**************\n\nFor the next couple of weeks Jen wanted me to be more visible to the clients. In the past she had requested that I be out of the apartment before a client arrived. There were a few occasions when I had met a client, usually if Jen was running late, but I was always gone by the time the massage was over. Now I was being introduced by name, as her trainee. Primarily I led the clients into the room, supplied a towel if they were going to shower, made sure that all of the supplies were there (some clients had specific requests for types of oil or cream, fragrances, music, etc.) and, afterwards, led the clients out. I also took care of the payments and bookings, although most of the regulars paid in advance. I got to know some of the regulars by name and they became accustomed to seeing me. \n\nOne day Jen called and asked if I was available. Christine, a long term client of Jen's, had agreed to let the 'trainee' sit in on her massage. Jen also cleared it with Christine that if an opportunity arose that she thought would be a good teaching moment, she'd get me involved. She had offered her a \u00bd price discount as incentive to be the 'test' subject.\n\nI quickly changed into shorts and a T shirt and headed over. Once at Jens I had some time to research Christine's background in the database I had set up for her business. I found out the Christine was 37 (we had started keeping birth dates in order to give the regulars a free birthday massage), saw that she scheduled a massage more or less monthly, and had only once reported an injury (lower back). In Jen's additional notes I saw that Christine preferred medium pressure, had on a couple of occasions requested a shower prior to her massage and was an avid golfer, which was how she had hurt her back.\n\nWhen Christine arrived I greeted her, led her into the room, then left while she got undressed and laid under the covering. She knew the routine of course. In a couple of minutes, after checking the she was ready, Jen and I entered the room. \n\nChristine was laying face down and had covered herself with the draping, from the small of her back to mid-thigh. She looked up at us as Jen asked \"So how are you feeling today? Any aches or pains that we should be aware of?\" Christine replied that she was feeling good, with no issues. Jen said \"OK, just a nice relaxation massage today\".\n\nI took a seat off to the side of the table. With her face back down in the doughnut I took some time to evaluate Christine. I knew her age, but if I didn't I would have guessed she was just hitting thirty, seven years younger than she was. She wasn't thin, nor heavy, but solidly built with muscular definition in her shoulders, upper arms, and calves. She had noticeable tan lines, most likely from golfing. I could see the side of her breast, pushed into the table. It was hard to tell from that position but it seemed that she had average size breasts.\n\nThe massage progressed as usual, as Jen had massaged and taught me, starting on her shoulders then down her back. At one point Christine let out a moan and I could visibly see her body tighten. Jen had hit a knot in her back above the right shoulder blade. Jen motioned me to come over. She took my hand and placed it where the knot was. Christine tightened again, this time most likely because a different hand was on her. I then watched as Jen manipulated the muscle and worked out the knot.\n\nThe only other incidents of interest during Christine's massage was when Jen worked on her butt and when she turned over. \n\nJen's normal massage routine was to work on the legs, from the feet up, then undraping the butt cheek on the side she was working on. Before she did this with Christine, she softly asked her if it was OK, thinking that she might have an issue being exposed with me being in the room. \n\nChristine, who might have actually been dozing off, just murmured that it was fine. Jen folded the draping back over her cheek, almost, but not, exposing her crack. At that moment I wished I had a seat at the foot of the table. I'm sure that would have been a fine sight.\n\nThe other interesting moment was after Christine had flipped over and Jen started working on her from the head of the bed. At that point Christine was covered from neck to mid-thigh. Jen asked me for an extra towel. She held it over Christine's breasts and asked me to slide the draping down to her waist. This move exposed Christine's belly but kept her breasts covered. I found out later that usually Christine went bare breasted when on her back, but had requested some more modesty with me in the room.\n\nI sat in on a couple of other client's massages. As with Christine, I'd participate if Jen saw an opportunity to show me something special, any unusual issues, but mostly I just observed. One client wasn't shy about showing her breasts when she flipped over. And neither was Christine when I sat in for a second time, so I had the opportunity to reevaluate her breasts. They were probably smaller than average, but because of the size they seemed very pert for a woman of her age. She also had noticeably erect nipples. Was she cold? That's doubtful as the room was always kept on the warm side. Was she excited? Perhaps she has a streak of exhibition and got some thrills from finally showing. Or perhaps, more likely, she was blessed, or cursed, depending on who you ask, with naturally prominent nipples. Either way, they were mesmerizing. And it was nice to know that clients, or at least Christine, could relax with me around.\n\n**************\n\nJen had starting telling a few select clients about a new offering, a 4-hand massage performed by her and her assistant. As with the observations, she offered a discount rate on the first one. She told me that Sue had immediately taken her up on her offer. I had met Sue briefly at an appointment when Jen was running late. That meeting, when I showed her into the massage room, she had started to undress before I left the room, and was down to her bra in no time at all. That image had stayed with me for quite a while. \n\nJen had described her as a 'free spirit'. When I asked her what she meant by that, she told me that Sue had been a client for a while now, one of her first clients, and they had shared a lot of information with each other.\n\n\"For years Sue was stuck in a love-less marriage.\" Jen said. \"She found out that her husband had been having an affair with a coworker. She took him to the bank; when the divorce was finalized she ended up with the house, a car, a huge settlement and an obscene alimony payment. It was then that she had decided that she still had some oats to sow and was not going to waste any more time. So now she is pretty much living her life according to her own rules. Some of the stories she has told me are, well, very interesting to say the least.\"\n\nJen continued. \"And, not surprising I guess, Sue prefers not to be covered on the table. She might rethink that with you there, but I doubt it. Are you OK with that?\" I'm pretty sure she knew that I would be, but felt she had to warn me.\n\n\"I think I can handle that\" I said with a smile. \n\nJen smiled back and reminded me that it's not polite to stare.\n\nWhen Sue arrived for her massage, she was obviously excited; she seemed somewhat giddy with anticipation. Jen offered her a glass of wine, to relax her, and Sue accepted it. We all went into the massage room to discuss the massage. Jen told Sue that she should think of it as a regular massage, with just an extra set of hands working on her. She and I had already discussed that we would split the body work down the middle, with Jen taking one side of the table and I the other. That would allow me to mirror Jen's moves, similar to how Jodie and Rick had done at the spa. \n\nJen said to Sue \"Take some time to enjoy the wine and get prepared. We'll go wash up.\"\n\nI had done my research into the database and knew that Sue was 42 years old. When I saw her the one other time I remember thinking that she seemed to be in good shape for her age. She was shy of what I would have called full figured, and around 5 \u00bd feet tall. She had blonde hair, shoulder length but pulled back in preparation for the massage. I had also read Jen's notes about Sue's massages; the only thing that was memorable was that Jen had written the Sue enjoys some post massage down time. I thought about that for a moment but realized that was actually pretty common. Many clients take quite a while to get up and moving after their massage. We actually encourage them to take their time.\n\nThe first thing I noticed when we returned was that the wine glass was empty. The second thing I noticed was Sue, lying face down on the table, naked and uncovered. Jen was right about that; Sue wasn't going to change her massage choices just because I was in the room. Without clothing Sue was much thinner than I had thought. She had broad shoulders, tapered down into a narrow waist. I could see that she had fairly large breasts, as they were overflowing from being pressed against the table. Her ass was full and round with no sign of sagging or cellulite. And her legs were shapely and well defined. My guess was that she spent time working out, and with her money I wouldn't have been surprised if she had a personal trainer. She had an allover tan, from top to bottom. Tanning salon... tropical vacations... perhaps clothing optional beaches? I had to take a moment to get my head back into the game. Jen noticed me looking and, smiling, she shook her head.\n\nI took up position on the right side of the table as Jen started the massage by drizzling some of the warmed oil into Sue's back. Sue let out a low moan, \"Mmmm\", which turned out to be the first of many that day. She visibly relaxed as Jen laid her hands on Sue's back spreading the oil to cover her half and I did the same on my half.\n\nWe started by kneading her shoulders in unison, and then moved down past her shoulder blades to her lower back. We did sweeps, with one hand on either side of her spine and the other on her sides, from the small of her back up along her backbone to her neck and shoulders. My outer hand, along her side, brushed against the side of her breast. With their size I really couldn't avoid the contact. Rather, I didn't try to avoid the contact. And it was ok; I could tell that Jen was doing pretty much the same move. Another \"Mmmm\" from Sue; this one seemed deeper and throatier. We repeated this move a couple of more times. On each pass I extended my fingers a bit more in order to brush more of her.\n\nWe moved on to her tanned ass. First I poured a small amount of oil on her lower back, right above her cleft. Then we each took a cheek and, using the heels of our hands, pushed deep into the muscles. \n\nIn the course of massaging her ass, Jen did a push/pull move on the cheek she was working on. As I mirrored the move, the effect was that Sue's cheeks were spread wide open, exposing her asshole and 'taint', or rather, her perineum. I noticed that some of the oil had flowed down between her cheeks.\n\nAt the moment of this exposure I quickly looked over at Jen. She silently mouthed 'Oops\" and gave a shrug of her shoulders. Looking back down at Sue I now saw that she really didn't have an all-over tan. The sun had missed a spot. \n\nTo my surprise, instead of moving on to a different body part or move, Jen repeated this spread move, so of course I mirrored her. This time we paused after the push out move, resulting in a longer exposure of her untanned area. Sue let out another soft moan and arched her back, trying to raise her ass off the table. Jen and I both pushed back at her.\n\nOn the next spread move, Jen held the position with one hand, but reached back with the other and gently massaged the exposed area. I did the same. We didn't touch her asshole, but came very close to it. Sue tensed up for a second as we first made the contact, then I felt her relax under our touch.\n\nMy mind began to wander. Would Sue welcome a finger or two in there? I think so. How about my dick? Perhaps. I visualized oiling myself up, then easing my cock into her right there on the table, slowly pounding into her inviting ass.\n\nA nudge from Jen's hand snapped me out of this reverie. She gave me a quizzical look. I gave her a smile and the same type of shrug she had given me a moment ago. Did she know what I was thinking? If she had glanced down at my shorts she would have been able to see how turned on I was getting.\n\nWe moved to the end of the table to start working on her legs. Jen applied more oil to each leg. We started on her calves, kneading the muscles from side to side, pushing and pulling. We worked up past the knees to her thighs using the same motion. These moves alternatively pushed her legs together and pulled them apart. I noticed that Sue seemed to slightly resist the pushing together but seemed to assist in the pulling apart, so that her legs were gradually spread farther apart. Jen and I worked out way up higher until we were just below her ass. My hands on the inside of her thigh were so close that with the smallest deviation I'd be touching her taint. I resisted that temptation.\n\nThen, as my hand met Jen's, she nudged it up so I did brush against Sue, right above her pussy. As Sue let out another \"Mmmm\", I looked over to Jen who, once again, shrugged and smiled.\n\nWe reset ourselves back at the foot of the table. Jen put her hands around Sue's ankle; I followed her lead on the other ankle. Using firm pressure she swept her hands up the leg. I was familiar with this move from Jen's massages. She would run one hand up the inside of the leg and the other up the outside. As her hands got to my upper thigh the inside hand would swing over and join the other to sweep up to my ass cheek. To me, as a receiver, it was a very sensuous move. To me, as a massage therapist, it was used to increase the blood flow from the extremities toward the heart. \n\nI recognized this move as soon as Jen started it so I was able to do it along with her. However, when I slid my inside hand out to join the other, Jen kept hers pressed against Sues inner thigh and used just the outside hand for the butt sweep. I picked up on this and followed Jen as we repeated the move. On the next pass, Jen didn't sweep the outside hand up, but slid it in to join the other and used them both to push out. When I did the same, this motion had the same effect as it had with her ass, spreading Sue open. We held our hands there for a moment, our thumbs almost touching her vaginal lips. Sue moaned and squirmed even harder against our hands while I took in the sight there below me. Her pussy was well lubricated. Whether it was from the massage oil, or sweat, or from within, I couldn't tell. And from my view from behind she looked like she kept herself shaved. Her lips were protruding and looked a bit swollen. My mind once again wandered. Would she welcome a finger in there? My guess at that moment would have been yes. More than a finger? Yes. My tongue, my dick? Yes and yes. I was getting harder thinking about the possibilities. \n\nAfter holding this spread for a moment, Jen once again brought me back to reality when she softly said \"Sue, it's time to roll over\".\n\nSue replied \"OK. Give me a moment.\"\n\nHer voice sounded different. I couldn't tell if I heard disappointment or excitement in it. \n\nPersonally I felt both. I would have enjoyed to have worked more on her pussy from behind. I knew then that if I was ever asked to give her a personal massage I'd spend more time doing just that. But I was also anticipating working on her face up.\n\nSue waited until her breathing slowed down before she flipped over. I tried to discreetly check out her body. Starting from her feet, my gaze went up her shapely legs, which she had already spread more than was necessary for a massage. I saw now that she was not totally shaven, but kept her hair trimmed into a V, ending right above her vulva. I think that her pubic hair was probably curly when dry, but by now it was a bit matted down with moisture. As I had noticed from behind, her lips did indeed seem engorged, as was her clearly visible clitoris. I could have stared longer but I knew that there would be more opportunity in a couple of moments, so I continued my gaze up her belly. She had just a bit of a tummy. I took my first look at her breasts. They were as full as I expected, with just a bit of sag to them, and with large nipples that also looked like there was some excitement going on in Sue's head. I continued up to her face...busted! She was watching me looking at her. So much for being discreet. She had a slight smile on her face so I had to assume she didn't mind me looking.\n\nJen took a position at the top of the table and started to massage Sue's neck, scalp and face. This was a one-person procedure, so I stood off to the side and observed Jen's technique. OK, so I might have been watching Sue just a bit as well.\n\nJen moved to one side and started on Sue's shoulder; I joined in on the other shoulder. Standing over Sue gave me a different view of her body. I was aware that her breathing had seemed to slow down. Prior to the flip she was pretty worked up and now seemed much more relaxed. Her nipples had seemed distended when she first turned over but were not now. When I looked down onto her face, Sue was looking back at me. We made eye contact. I held her gaze and gave her a smile. \n\nWe worked our way down from the shoulders towards Sue's chest. I didn't know if a breast massage was something that Jen offered; I hadn't see her do it before, but it seemed that with Sue anything was possible. I followed her lead, massaging down her upper chest. As we got closer to her breasts we first circled down past them. Then, using both hands, we held her tits firmly, applying pressure as we worked our way around them. I was in heaven. I had to remind myself that this was a massage and that massaging and fondling were not the same. I saw that Jen was avoiding direct contact with Sue's nipple, so I did the same. Perhaps that was where Jen's 'ethical line' was. It took a lot of will power on my part to not brush across the nipple that was now once again standing out very prominently, but I held myself in check. I saw that Sue still had her eyes on me, even as she let out another low 'Mmmm'.",
        "Again, I would have been fine with working on her breasts for quite a while, but eventually Jen moved down to Sue's belly. She lightly rubbed her clockwise from below her breasts to right above her pubic line, just short of where her V started. This was also a one person procedure, so I stood off to the side. As I watched, I felt Sue's hand on my bare leg, just above my knee. I looked down at her and this time her eyes were closed, but she had a slight smile on her face. She moved her hand higher and was almost to the point where she would have gone up into the leg of my shorts, when Jen motioned to me that I should take over the belly rub. I did, but I couldn't help but go just a bit lower, rubbing my hands through her pubic hair, which was soaked with oil. As I rubbed her belly, Sue moved her hand higher up my leg. I didn't know what to do. Not that I wouldn't have minded Sue's hand on my dick, but I was very sure that this was definitely beyond the line of Jen's ethics. My own line was still to be determined. When I looked over at Jen I knew that she was aware of Sue's wandering hand.\n\nWhen Jen moved to Sue's foot, I moved as well, breaking contact with her hand. We repeated the moves we had done on the back of her legs, using firm pressure on both the outside and inside of her leg and sweeping up. Of course, as we got closer to Sue's now visibly moist pussy, it was tempting to continue up, and, truth be told, my inner hand did brush her lips a couple of times. And of course Sue let out another soft moan. Jen's hand came close as well, but I didn't see any contact. \n\nAfter the sweeps we repeated the push/pull move on her calves, then her thighs. Just as on the back of her legs, the movement with two sets of hands caused her thighs to be spread even more apart. To me this was the most erotic part of the session so far. Her lips were being spread apart and everything was on display. The lips were red, flushed with blood, and her clitoris had come out to play. It too looked swollen. I would have loved to see how much it would take to give Sue an orgasm right then and there. I think a slight breeze would have done it. Sue looked far from being relaxed.\n\nAs expected, Jen didn't provide any contact there and I followed suite. But I did file away that image in my memory bank for later use. Eventually Jen gave Sue a few long body sweeps, toe to head and back, which I knew signaled the end of the massage. \n\nShe told Sue \"Take your time getting up. There's no rush; we do not have any more appointments today.\"\n\n\"Is it alright if I take a shower?\"\n\n\"Of course it is dear. You know where everything is.\"\n\nWe left the room. I needed to clear my head and try to evaluate everything that had happened. I poured myself some cool water thinking 'What really did happen? It was just a massage more or less. Body parts were exposed more than normal, but part of that had to be because of the relationship Jen and Sue had. Jen knew how far to go and Sue knew how far Jen would go. I guess I was the unknown in the situation. One thing was very clear - I was going to have to think about what my ethical stance would be. I enjoyed Sues wandering hand and it would have been interesting to see where that would have led, but fortunately it was stopped before it got too far.'\n\nJen interrupted my musings. She had a glass of water and a clean towel and washcloth. \"Can you take these in to Sue? I didn't have time to stock the linen closet earlier.\"\n\nStill lost in thought I took them from Jen and went back into the room.\n\nI expected that Sue would have been in the shower by now, so I was a bit startled when I saw that she was still lying on the table. Speaking from experience I knew that after a massage, with your body totally relaxed, it's easy to slip off to sleep. I really didn't think that Sue was that relaxed, but I went over to check that she was OK. \n\nShe was more than OK. With her eyes closed, she was playing with a nipple with one hand and had the other buried two fingers deep in her pussy. She was well on her way to that orgasm. I wanted to stay there and watch, but I knew that wasn't right, so I started to back out of the room. But Sue must have heard me come in, as she opened her eyes. I froze and then tried to apologize, stammering out something incomprehensible. \n\n\"Sue... sorry... didn't know ...\"\n\nSue didn't stop jilling herself, but with her free hand she motioned me over. I hesitated, then set the water and towels down and approached her.\n\nAs I should have expected, Sue's hand went right to my crotch. She felt my dick getting harder, because of the view of her pussy being worked over and of course because of her hand. She fumbled with my zipper, never stopping her piston\u2014like fingers in and out of her now soaked pussy. I helped her with unzipping me, but then let her hand continue. She freed my erection from my underwear and without any hesitation, started jacking me off rapidly, as if I could catch up and come with her.\n\nI couldn't catch up; as excited as I was she was much further along than I was. I reached over and pinched her nipple, which apparently was all she could take. She released me and clamped that hand onto her clitoris, arched her back, and for the last time that day let out another moan. This time there was nothing soft about it.\n\n\"MMMMMMMM!!\"\n\nShe didn't stop with that one. Her hands kept moving and she pretty quickly came again, thought not as powerful or loudly, as her first one. \n\nI backed away and tucked myself back into my pants. The sheet below Sue was pretty well soaked, so I laid the washcloth over her pussy and covered her with the clean towel.\n\n\"Thank you\" she said, once her breathing returned to normal.\n\n\"My pleasure\" I replied. \"Stay here as long as you need.\"\n\nWhen I left the room, Jen was sitting on the sofa with a smile on her face. She asked me \"Did you give Sue what she needed?\" \n\nI thought for a moment, and then the light bulb came on. \"You set me up, didn't you?\"\n\nWith a wide grin she repeated her question. \"Did you give Sue what she needed?\"\n\n\"Yes, I gave her the towels.\" I replied. \"Was that a test? If so, did I pass or fail?\"\n\nJan paused. \"It wasn't a test for you,\" she said. \"Sue almost always ends her massages that way. I knew that having you help massage her would get her especially worked up. Sending you back in was just icing on the cake.\"\n\nI was speechless; I didn't know what to say.\n\n\"Speaking of that... did you?\" Jen asked.\n\n\"Did I what?\" I asked.\n\n\"Did you supply some icing for her cake?\"\n\n\"No, she didn't need my icing.\" I replied. \"Her caked was baked all on its own.\" \n\n\"Well, I thank you, and I'm sure Sue thanks you as well.\"\n\n\"You're both welcome I guess.\" I said, then as an afterthought added \"You owe me one.\"\n\n\"I pay my debts. Care for a massage after Sue leaves?\"\n\n\"Sure thing\" I answered without any hesitation.\n\nYes indeed. Payback can be a bitch..."
    ],
    "authorname": "ManosHands",
    "tags": [
        "massage",
        "4 hands",
        "masturbation"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/massage-apprentice-ch-05"
}