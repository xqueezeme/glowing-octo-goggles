{
    "title": "Table for Two Ch. 08",
    "pages": [
        "On Wednesday, Stephanie spent most of her time in school attending her classes, but really thinking about her experiences with her sister and what was bound to happen today.\n\nShe couldn't bring herself to think of their plan as a date, even if she was as anxious about it as any date she had in the past. She remembered Emily's words, that they are not in love and not a couple. Emily was right, Stephanie knew what being in love felt like and this wasn't it. At least not exactly like it. She was just going out with her big sister. She knew she'd have a good time, like she always did with Emily. It wasn't a date.\n\nHer past relationships were different in that she never really knew the guy she was with. She always idolized them, and sooner rather than later she ended up being disappointed. What she had with her sister was so different she couldn't even compare the experiences. Emily was just there for her, always and unconditionally.\n\nAnd if their newest argument from two days ago told her something, it was that they were still normal siblings. They were similar in many ways and they still competed with each other, fought one another. And like always, in the end they apologized and made up, because inside there was something between them. She also had similar fights with her past boyfriends, but that deeper connection just wasn't there then.\n\nStephanie just couldn't wrap her head around the whole situation with Emily, to figure out what was happening or what she wanted to happen. She was never good at resolving issues just by thinking and she probably wouldn't be able to do it now. It would help to have someone to talk it over with, to reflect her thoughts off of. Emily had Sam, but Stephanie didn't dare to bring it up with her own friends.\n\nThere was also that uneasiness, that conflict her mind brought up the moment the teen tried to view her sister as someone to hook up with. On some level, she felt like things weren't supposed to be like this, that her big sister wasn't supposed to view her in a sexual way, or do sexual things to her. Their encounter at the club was breathtaking, but no one could really blame them for what they did. What happened this Saturday was different. It felt amazingly good and she wanted it at that time, but looking back, in a way it was very wrong. A big sister should be protective and supportive, she should not masturbate her to orgasm.\n\nOn some level, Stephanie couldn't help feeling like they made a mistake. In a dark corner of her mind, she even asked herself if the older girl took advantage of Stephanie. Everything she knew about Emily told her that wasn't the case. Was it possible that the lonely 20 year old would do such a thing subconsciously? But they both wanted it. Stephanie was sure she wanted it.\n\nTwo days ago, Emily confessed she was scared, but the whole thing scared the teen just as much. After Emily's calm offer to go out she was probably even more scared than the older girl. Before then, when Stephanie wanted to be with Emily, she had the control. Emily's previous resistance was a comforting barrier, keeping Stephanie safe in case she decided she wanted things to stop. But now it felt like that was slipping from her.\n\nSill, Saturday with Emily was wonderful. Their trip to the park, an intimate art session and especially what happened after lights out. Back then, she was simply happy.\n\nThese thoughts, both good and bad came throughout the day. The sisters had agreed to return home from school, get ready and go out then. But by the time she left school, Stephanie was about ready to cancel their plans.\n\n--\n\nEmily was sitting sprawled in the living room sofa, idly watching TV.\n\nReally though, she was waiting for her sister. Just like Stephanie, she spent most of the day rehearsing what they'd do and say once school was over. Emily was surprisingly calm though, willing to let the chips fall where they may.\n\nShe heard the door and unconsciously sat up. She didn't even realize that she wanted to look her best as she straightened her back and stuck out her chest.\n\n\"Hi,\" Stephanie greeted her with a brief glance as she entered the room.\n\n\"Hi,\" Emily smiled at her.\n\nStephanie dropped her bag next to the couch and sat down to the 20 year old's left, still in school clothes - jeans and yellow T-shirt with stylized black emblem on the front.\n\nA few seconds later, she slowly said, \"Em, I was thinking about today-\"\n\nEmily noticed the murky tone.\n\nShe turned the volume down and looked at her sister, \"You don't want to go?\"\n\n\"I guess I'm just a bit scared of this,\" Stephanie confessed uneasily.\n\n\"That's not like you, Steph,\" Emily said, concerned, \"Is there any way I can help?\"\n\n\"Tell me it's going to be OK,\" Stephanie suggested.\n\n\"Steph, nothing's going on,\" Emily smiled, shook her head and shrugged, \"I just wanted to check out the new amusement park and didn't want to go alone. We can go another time if you don't feel like it now. Or I can take Sam.\"\n\nStephanie smiled gently, \"I'd like to go to that park.\"\n\nShe seemed really relieved now, but Emily still felt like she was persuading her sister to do something she didn't want.\n\n\"You know you can say no, and I'd understand, right?\" Emily continued, \"It wouldn't mean anything.\"\n\n\"Nothing?\" Stephanie asked jokingly, \"It's starting to sound like you want me to say no.\"\n\n\"Of course. Why would I want you to say yes?\" Emily said, lifting her hands and shaking her head in a theatrical way.\n\n\"Because I'm awesome?\" the teen smiled.\n\n\"OK, you got me, that's true,\" Emily replied, nodding her head.\n\nStephanie couldn't hold back a happy chuckle.\n\n\"Well, say what you want, I'm not letting you off the hook so easily,\" Stephanie stuck out her tongue and stood up quickly, \"Let's get ready.\"\n\n--\n\nStephanie couldn't stop giggling as she devoured the delicious cotton candy, her left arm linked with Emily's right.\n\nThey were walking down the main pathway of the park, her gaze wandering between the kiosks on both sides. It was already getting dark but the whole park was lit up brightly. Colors, sounds and smells were attacking their senses from all sides.\n\nFor once, she wasn't the only one of them to be like this. First they went to ride the bumper cars, smashing into everyone, each other especially, then devising collaborative tactics to smash into the cars of the two guys who tried to literally hit on the two cute girls. After the ride, it was unilaterally decided that the girls won the fight and the two guys were not worth hanging out with.\n\nAfterwards, Emily suggested to relax on a small ferris wheel, only to be shot down by the teen with allegations of being a boring grandma. Stephanie of course wanted to ride the main attraction, a giant frisbee pendulum seating more than 30 people. After a lot of begging and more than a bit of suggestive pinching, the 20 year old agreed, and the girls spent almost all of their remaining cash on the monster ride.\n\nThe teen was ecstatic. The ride kept swinging and turning, up became down, and back again, her hair flying in all the directions her body wanted to go. She had to hold down the skirt of her yellow summer dress not to flash her white panties at everyone nearby. No doubt, her sister was forced to do the same with her black skirt. Still, the teen couldn't help it and let her hand slip a couple of times to let them see anyway, feeling a warm tickle between her legs every time.\n\nAll the feelings were overwhelming and she couldn't stop screaming with excitement at every swing, soon to be joined by her sister. Halfway through the experience she felt Emily's hand grabbing hers and she latched onto it tightly. Now she was screaming and laughing with joy as well, her eyes watering with tears. The ride was amazing, but being able to share it with her sister made it that much better.\n\nStephanie couldn't remember when was the last time she ate cotton candy. It must have been when she was a child, before she even found out she had a sister. The ephemeral treat was now dissolving at the slightest touch of her tongue, vanishing into pure sweetness. Like every experience Stephanie had with her sister recently, even the candy tasted much better this time. Now there was no hint of her earlier worries about their strange relationship. She couldn't imagine being more happy than when she was with this girl.\n\nBut a different thought occurred to her when she noticed Emily's mouth lined with the pink goodness of her own candy. Stephanie couldn't help but wonder what would happen if she tried to lick those full lips. She was sure that, like the candy, the kiss would be sweet. But she reminded herself of being a good friend and sister to Emily first and foremost. Because just like with the candy, that kiss might also make her sister vanish from Stephanie's life.\n\n--\n\nEmily was sitting on her bed, cross-legged, muted house beats coming from her laptop sitting on her desk. The shower did wonders and even after the whole day at school, followed by all the excitement at the amusement park, she felt fresh and invigorated again, still feeling the citrus scented of shampoo in her hair. She heard the water in the shower fall quiet.\n\nShe smiled, her right hand now making quick movements. Now she was reliving the excitement again as she listened to her sister singing in the bathroom. She didn't hear everything through the two doors, but even the hint of melody told her the teen was singing Wrecking Ball, an uptempo remix of which the sisters listened to while riding the frisbee pendulum. Just as Emily started to enjoy the song, the young girl's voice was drowned out by the sound of the hair dryer.\n\nBy the time Stephanie was done, Emily was almost finished too. Her sister's voice was more pronounced once she left the bathroom. And she had a really nice voice too, just a bit higher than Emily's. She probably also had the lung capacity to be a great singer, she just lacked the training to make all those assets work together in a perfect way. Her performance was still very impressive and even if it wasn't, Emily simply enjoyed listening to her sister's audible happiness.\n\n\"I came in like a wrecking ball!\" Stephanie screamed as she bust into their room just as Emily pulled her shirt down.\n\n\"You did,\" Emily nodded, smiling back innocently.\n\nStephanie was wearing only a long black T-shirt with a yellow skull printed up front, her armpit length brown hair loose and messy falling all over her shoulders. She looked really cute, with her naked slim legs sticking out from underneath the shirt and an explosion on her head, but to Emily her most attractive feature was the wide smile on her face.\n\n\"Hey, I can see you!\" Stephanie said, pointing down at Emily's body.\n\n\"You don't see anything!\" Emily stuck out her tongue. She was shy, but also kind of wanted to show her sister.\n\n\"Don't make me take your top off,\" Stephanie warned with a lifted finger and shaking her head as she approached Emily's bed, \"You know I'll do it. I don't care if you're not wearing anything underneath.\"\n\nStephanie was of course right. Emily didn't wear anything under her white shirt. Neither of the girls needed a bra in bed, or even when being casual at home. Just throwing a shirt on was simply more comfortable and no one made a big deal out of a little jiggle or some nipples poking through fabric. On top of all that, Emily knew the thin T-shirt, which she was now wearing over her dark pajama shorts with a multicolored floral motif, made it pretty obvious her firm breasts were bare underneath.\n\n\"I know you won't take it off,\" Emily continued the game, laughing and waving her hand.\n\n\"I promise, I'll get that shirt off of you tonight, one way or another,\" Stephanie said jokingly, pointing her finger at Emily's torso as she sat down on the bed in front of her sister, her left leg still on the ground.\n\n\"And what if you don't?\" Emily teased.\n\nThe teen probably expected something to happen between them that night, most likely courtesy of Emily's behavior the day before. Originally, so did Emily, but now that the event was getting more real by the second, she felt a bit apprehensive. She hoped Stephanie wouldn't be angry if Emily didn't want to do anything sexual.\n\n\"If I don't,\" the young girl thought for a second, then continued, \"I'll pose for you naked.\"\n\n\"What? Naked?\" Emily was too surprised to react.\n\n\"That's right, like the day I was born,\" Stephanie winked, \"And you get to tell me exactly what to do.\"\n\nThe 20 year old found herself unexpectedly excited at that idea.\n\n\"You'd do that for me?\"\n\n\"I would. But only for you,\" Stephanie replied with pointed finger and a warm smile, \"This would help you with your figure studies, right?\"\n\n\"Y- Yeah,\" Emily stammered.\n\nHer mind was occupied with several ideas at once. One was the seductive image of her naked, teenaged sister stretching her perfect body, only for her sister's benefit, into the sexiest poses Emily's twisted imagination could come up. And Emily's mind, for better or worse, could be very creative when it came to these things. She felt goose bumps when she realized all the stuff she could make the young girl do.\n\nThe other idea, throwing the 20 year old's mind into conflict was, that she still was, and wanted to be, this girl's big sister. Stephanie was part of her closest family and from deep within Emily's core came an intense desire to protect and care for the cute smiling teen sitting in front of her. That's how she always felt about Stephanie. And one of the few things she was sure about in her life was that this desire would never change, no matter what happened. That motivation was stronger and more important than any other feelings that might arise.\n\n\"Em?\" Stephanie carefully asked.\n\nEmily smiled and relaxed. She knew how she felt. She confidently lifted her shirt enough to take out the sketchbook she was trying to hide underneath, then handed it to the glowing teen. The girl started lettering through the sketchbook, looking for the most recent picture.\n\n\"Oh, and by the way,\" Stephanie said with a grin as she fingered through the pages, \"When I said I can see you-\"\n\n\"What?\" Emily asked, confused.\n\n\"I mean, I don't really mind, and wouldn't mind if I was in your situation,\" the teen kept teasing, \"Really, this is OK with me-\"\n\n\"What is it already?\" Emily insisted.\n\n\"Let's just say, maybe you don't want to sit like that in those shorts,\" Stephanie giggled as she kept looking into the sketchbook, but used one finger to point downwards. She continued, grinning, \"I mean, the shorts look lovely and comfortable and everything, but maybe just a bit loose for that pose.\"\n\nEmily finally understood and looked between her splayed legs in horror. The loose legs of the shorts rode up and left wide gaps between her thighs. Stephanie probably wasn't lying when she implied she could see Emily's intimates. Instinct made the 20 year old quickly cover her crotch with her hands, then close her thighs and straight her legs. She felt her face blush in embarrassment at the sudden exposure.\n\nStephanie giggled, shrugging, \"I really don't mind, it's not like I haven't seen it before, Em.\"\n\nThe 20 year old could only spit out, \"You ass.\"\n\n\"No wait, wait, I've got a better one,\" Stephanie said as she held up a finger and looked up, past her sister and Emily knew it was Stephanie's poem time.\n\nAfter a few seconds of Stephanie silently nodding her head while mouthing words, she cleared her throat and recited in a serious voice.\n\n\"Emily's shorts have blossoms all over,\n\nyou can't help but wonder what they hide.\n\nAnd sometimes, you see one more blossom.\n\nInside.\"\n\nEmily couldn't help but giggle at the teen's poetic description. She was still embarrassed, but that analogy was at least a compliment. An uncomfortably intimate one, but Stephanie was allowed to say something like that, because she knew the girl meant well.\n\n\"That was pretty good,\" Emily complimented her.\n\n\"You liked it?\" the teen beamed.\n\nEmily nodded, \"You're quite talented, if you come up with more, maybe you should write it down.\"\n\n\"Maybe I will,\" Stephanie said as she continued flipping through the sketchbook.\n\nFeeling bold, the older sister asked, \"So, you like the smell of blossoms?\"\n\nThe teen reacted in a mock shocked gesture, \"Me? No way sir!\"\n\nThe smiling Emily continued, \"But you're still a brash ass.\"\n\n\"And you're an amazing artist,\" her sister said, admiring Emily's latest sketch, \"This is brilliant.\"\n\nThe older sister looked down at the sketchbook. It was an angled action shot of the two of them strapped in the frisbee ride, hair flying upwards, mouths screaming wide. Even to Emily's critical eyes, the sketch actually looked good from upside down.\n\n\"Thanks,\" she replied quietly.\n\nStephanie nodded and hummed in agreement, looking down and studying the sketch.\n\nEmily was really humbled by her sister's admiration, never feeling like she deserved praise from this girl. She felt like hugging her, but stopped herself, not wanting to make things awkward.\n\nBut she noticed Stephanie jerking her head upwards and blowing on the messy bangs falling into her eyes. All her hair was a mess and Emily was glad she thought of a good way to do all she wanted at the moment - be close to the girl, express her affection towards her and be a caring big sister. She stood up and walked around the bed towards the door.\n\nWhen Stephanie looked up, she said, \"I'll be right back.\"\n\nShe picked up the hairbrush from the bathroom, then sat down on her bed, behind her sister.\n\n\"Hold still,\" Emily instructed, then used her left hand to separate a section of her sister's dark brown hair and started slowly brushing it with her right, using the brush to also give her a gentle head massage at the same time.\n\nStephanie made a content moan, \"Talented and caring. What did I do to deserve you?\"\n\nEmily smiled, looking at her sister's hair, now less messy by the second. She shook her head, \"You do more than enough. But I'm supposed to look after you.\"\n\n\"I don't know,\" Stephanie said in a slow suspicious tone, \"It's starting to feel like you want something from me.\"\n\nEmily could only giggle and again shake her head at her sister's little games. She moved to Stephanie's left side, moving hair away from her face. She could see Stephanie's eyes were closed now.\n\nThe teen took a deep breath and continued talking, \"I really love this.\"\n\n\"Me too,\" Emily agreed.\n\nWhat they were doing was simple and relaxing, but she also couldn't imagine doing this with anyone else. It was too intimate to do with a friend, and it would feel just wrong to do this to a boyfriend. But with Stephanie, caring about each other intimately like this felt natural and right.\n\n\"Actually this is so nice I would be down to anything,\" Stephanie said, slowing down as she smiled, \"Really. Anything.\"\n\nEmily giggled again as she focused on the teen's right side, \"You dork.\"\n\nA few minutes later, Emily was done, \"There. Smooth as silk.\"\n\n\"Thank you,\" Stephanie said in a small voice. When Emily's hands left her hair she turned around, \"Now let me do you!\"\n\nEmily smiled, nodded and handed Stephanie the brush.\n\nWhen she turned around, she heard her devious sister add, \"I'm not necessarily talking about brushing your hair.\"\n\nJust then she felt Stephanie's fingers tickling the back of her neck as the teen started brushing a section of her hair. The small tickle traveled all the way down her spine, making her shiver. She said, smiling, \"You're still a dork.\"\n\n\"We're both dorks,\" Stephanie replied.\n\n\"We are,\" Emily was forced to agree. Even if she wanted to, she physically couldn't disagree with a person who was doing what Stephanie did to her now. Just like her sister, Emily closed her eyes, relaxing. The small tickles on her neck and continued massage on her head felt amazing and she understood how Stephanie felt when she said she'd do anything for this. A few moments later though, she noticed a pleasurable tickle as well. With each gentle stroke and each touch of the teen's loving hands, the excitement grew, echoing throughout her whole body.",
        "\"I want to thank you for today,\" Stephanie said from behind her, \"I had a wonderful time.\"\n\n\"I did too,\" Emily could only agree, \"But so far this feels like the best part.\"\n\n\"Yeah, that's how I feel too,\" Stephanie replied, finishing up Emily's hair at her sides, \"Almost done. So what's next?\"\n\nEmily shrugged casually. She took a deep breath, trying to hide the rush she felt as she said, \"So anyway, dad isn't home tonight.\"\n\nStephanie's hands stopped moving, \"No shame, huh?\"\n\nEmily's hormones were taking her for a ride now. She might be confused otherwise, but now all it took was the memory of what she experienced at the club to know exactly what her body wanted.\n\n\"Hey, we're both thinking about it,\" Emily said. She reached down with her right, using just her index finger to draw crazy shapes on Stephanie's naked right knee coming up from behind her, \"You were offering a helping hand a few days ago, remember? I'm just taking you up on your offer. No backsies.\"\n\nWhen the teen's right hand came to touch Emily's, she quickly took hold of it and moved it forward, under her top, resting it on her bare stomach. Emily couldn't help but compare it to her previous boyfriends - her sister's hand was small, warm and gentle.\n\nStephanie was still both a girl and Emily's sister, making her pretty much the last person that would naturally come to the 20 year old girl's mind as a potential hookup. But her excited young body said otherwise and Emily didn't have enough willpower to fight it.\n\nShe felt the teen scoot closer from behind, her hot breath tickling her neck and shoulders as she whispered, \"Do you really want to do this?\"\n\nJust a couple of weeks ago, Emily would have laughed at anyone who would suggest that. But their experience at the table in the club was more life-changing than she originally thought. It was clear Sam thought of it as an accident, but what happened between the sisters back then was much more than that. Emily tried to forget it and tell herself it was nothing special. But she couldn't think of anything more exceptional. Being as turned on as she was now, the need for stimulation brought back all the blissful details of that evening. Both the teen's affectionate lovemaking and the ecstasy she felt with Stephanie's head between her legs were forever burned in the 20 year old's mind, now fresh as if it was yesterday.\n\nBack then she didn't know it was her sister. Now every piece of her mind screamed how wrong this was. She would reject Stephanie, go to the bathroom, finger herself and be done with it.\n\nShe took a breath to say it. A brief flash of a girl's mouth against her pussy and she heard herself say, \"Yes.\"\n\nEmily still thought they were going to stop. But before she realized what she said, she could feel her sister's left hand pull her hair away to reveal her neck. The older sister opened her mouth to object just as a pair of soft lips connected with the sensitive tissue, sucking gently.\n\nThis was nothing like the boys she was with. They barely even kissed her anywhere, and when they did, it was quick, clumsy and emotionless, making her feel almost nothing. Eventually, she convinced herself that even though she was attracted to them physically, she was probably one of those people who don't enjoy sex.\n\nThe lips on her neck were so warm and loving, Emily could only close her eyes, biting her lip, inhaling through her nose as she enjoyed the sensation. Her head moved forward on its own to reveal more of her neck.\n\nThis was one of the ironic things about their strange situation. Emily herself wouldn't believe it if someone told her. That it took her own sister, the person whom everyone would regard as the least suitable for Emily in a sexual way, to convince Emily of the opposite what boys taught her, those people who would widely be considered the best matches for the 20 year old. Stephanie taught her that the 20 year old actually loved physical affection, that she craved intimate closeness and the sex it naturally lead to. That all of this was an unquestionably positive thing that would become an important part of her life.\n\nThe younger sister moved her mouth up to her ear, then lower again, kissing and licking all over the older girl's neck. Just like when she had her hair brushed, the tickles traveled down her spine, all the way, until they reached her center, getting more moist by the second.\n\nShe felt the teen's left hand joining her right on Emily's stomach, then moving up to cup her breasts. Stephanie held them firmly, slowly squeezing and releasing them without touching her nipples. It felt nice, but the 20 year old's attention was now on her back. When the teen took hold of her breasts, she pressed her own ones against Emily's back. She was surprised to feel her sister's nipples, as hard as her own. Just the realization that Stephanie enjoyed doing this to the point of getting turned on sent a jolt to Emily's pussy, making her long to be touched there.\n\nAfter a few more moments of the gentle erotic massage, Stephanie's hands suddenly left Emily's breasts. She thought about objecting, but knew her sister well enough to trust her. Sure enough, a bit later Stephanie's delicate hands returned to being the best bra Emily ever had, a far cry from the insensitive paws of her ex-lovers. Then she felt the tips of the teen's fingers connect with her nipples, gently at first, then gradually working up a rhythm of rolling them around in tiny circles.\n\nEmily wasn't much for nipple play, but this was unexpectedly enjoyable. She found herself breathing deeply, moaning occasionally as Stephanie's fingers seemed to glide around her nipples with just enough smooth resistance to maximize her pleasure. Stephanie must have licked them. The warm slippery friction was incredibly stimulating, more than Emily thought was possible.\n\nThen Stephanie started gently nibbling the side of Emily's neck between her kisses, slowly moving her mouth higher. That's when the 20 year old got a strange feeling she missed something. This all felt beautiful, but something didn't fit. The teen's mouth never left her neck. How could she lick her fingers? She took a deep breath through her nose and smelled a sweet female scent, filling her pussy with warmth. Now she understood why her nipples felt more sensitive than ever before. But it was the thought that she enjoyed having her nipples massaged with the teen's juices that made her pussy twitch, spreading warmth all through her abdomen. Emily took a sharp breath, fists clenched on her own legs, her thighs flexing by instinct.\n\nThe tension rose gradually, and just as it was peaking, continuing the wonderful massage on her nipples, Emily felt the teen's wet breath on her right ear as Stephanie softly bit down on Emily's earlobe, then started pulling it away with a gentle moan. Stephanie's teeth as well as her obvious pleasure sent yet another twitch into the 20 year old's pussy. This was one signal too many and her young body reacted the only way it could, releasing a flood of pleasure as Emily's involuntary nervous system took over. The 20 year old's mouth opened silently. She was breathing in waves as her pussy spasmed repeatedly, her pelvis twitching around, searching for contact.\n\nWhen the waves of pleasure ebbed away, she exhaled slowly and opened her eyes, relaxing a little.\n\nThe teen released her ear, \"Did you just-\"\n\n\"Yeah, a little, sorry,\" Emily interrupted her.\n\n\"No, I'm just surprised,\" Stephanie explained.\n\n\"Me too, it never happened like this before,\" Emily said, shaking her head slowly, \"I didn't think it was possible.\"\n\nEmily couldn't hold back a chuckle.\n\n\"What?\" Stephanie asked.\n\nEmily shook her head again, \"You just seem to have this effect on my body. I just can't-\"\n\n\"Maybe I'm just that good,\" Stephanie said jokingly, \"It was good, right?\"\n\nEmily nodded, \"It was really good, thank you.\"\n\nWhen she felt Stephanie removing her hands from Emily's breasts, she took hold of them through her top.\n\n\"Wait,\" she breathed, her desire even stronger than before, \"Please don't stop, this was just- I need more.\"\n\n\"OK,\" Stephanie said quietly and continued with the breast massage.\n\n\"Thank you,\" Emily sighed, eyes closing, losing herself in the sensation.\n\nA while later, both sisters knew Emily's body was ready to move further and this time nipples and ear wouldn't be enough. The little orgasm released enough pressure to keep her body under control for now, but only gave her more energy and passion. Emily felt Stephanie's right hand leave her breast, traveling lower along her stomach.\n\nIt felt nice, but the older sister took hold of the hand. She wanted it all.\n\n\"I- could you do ... oral?\"\n\nShe could hear her sister reply in an insecure tone, \"Really?\"\n\n\"Yeah, please, Steph,\" Emily begged for her release, \"I'd really love it.\"\n\nA few quiet seconds passed with no movement. Emily knew Stephanie was struggling with an uneasy decision.\n\n\"I'm sorry,\" Emily continued when she saw it wouldn't happen, \"I understand if you say no-\"\n\n\"I'll do it,\" the younger sister said, making Emily's heart skip a beat as her pussy spasmed in anticipation. Her sister continued as she let go of Emily and stood up next to the bed, \"Just remember, there is a give and take to these things.\"\n\n\"Thank you, I know,\" Emily agreed as she expectantly looked to her right at Stephanie, \"I'll do you next, I promise.\"\n\nShe did want to make Stephanie happy, even if it would be difficult for the straight girl. Right now, her lust got the better of her, making her crave her own release.\n\nShe wanted to put her legs on the ground to get up from the bed, only to be stopped by her sister.\n\n\"Wait,\" she said with her hands on Emily's shoulders, \"get on your knees and turn around.\"\n\nEmily was wondering if Stephanie understood her earlier request, but did as she was told.\n\nOnce she was facing the center of the bed with her feet hanging off the edge, Stephanie pushed on her shoulders, \"Lean forward.\"\n\nAs Emily did it, Stephanie added, \"All the way, just lay your cheek on the bed.\"\n\n\"This is really embarrassing,\" Emily complained, her heart beating fast as she waited in the undignified position with her ass up in the air.\n\nHer white shirt hiked up her body, leaving her lower back and flat stomach uncovered. The shirt only stopped on her breasts, their firm shape almost undisturbed by gravity as they pressed against her bed. But she was so turned on she would do anything just to feel those tender lips on her pussy.\n\n\"Jesus Christ Em,\" the girl behind her exclaimed as she looked at Emily's bottoms, \"I've never seen anyone so wet.\"\n\nThe older sister felt it too. The wet garment clung to her form closely, and already the teen must be able to see most details of her sister's intimates. Then she smelled a wave of her own arousal.\n\n\"I'm sorry, Steph,\" Emily apologized immediately. She knew she was wet, but now after moving around, the overpowering smell released from her core told her how much her first orgasm creamed her pants earlier. She could only imagine what the teen saw between her legs now and how strong the smell was down there.\n\n\"Don't apologize,\" the younger sister said slowly, \"But, do you really want me to stick my tongue in there?\"\n\n\"I'll do anything, Steph. Sorry, I know it's ugly. I'll do anything, just please-\" Emily almost begged. She was so close, she really would do anything.\n\nShe stopped talking when she saw Stephanie crawling up her bed and looking in her face. Emily got up on all fours, then sat down on her heels, seeing it won't happen tonight.\n\n\"First of all, I'll take you up on that offer,\" Stephanie smiled warmly, then surprising her again as she looked deeply into Emily's eyes, \"But second of all and more importantly, I need you to know that you are beautiful, everywhere.\"\n\n\"I guess, but not down there,\" Emily smirked nodding in the direction of her bottom.\n\n\"You are. Especially down there. I've seen you before Em. And I could see the outline now. It's like a juicy peach,\" Stephanie smiled, nodding in the same direction, \"Trust me, you have a beautiful body. I was just surprised that you were so-, ready. Just give me a few moments, OK?\"\n\nEmily nodded and her sister returned back on the floor as the 20 year old leaned against the bed again, trying no to think how weird this was.\n\n\"OK, let's look at that blossom,\" her sister said deviously and she leaned forward, kissing Emily's naked side as the older sister felt gentle finger take the hem of her floral bottoms. She felt her face flush when the shy 20 year old realized in this position, her sister would see absolutely everything.\n\n\"No, wait!\" she said and took hold of Stephanie's right hand with her own right as she raised from the bed.\n\nThe teen gave her a questioning look.\n\n\"I'm actually a bit uncomfortable with you down there,\" Emily started.\n\n\"A different position then?\" Stephanie asked, \"You wanted oral, right?\"\n\nEmily looked away and nodded, embarrassed as much at her confusion as what was happening, but held on to her sister's hand.\n\n\"Em, I can't really do that if I'm not 'down there',\" Stephanie sighed, \"Is there any way I can make you comfortable? Like more foreplay?\"\n\nEmily shook her head while trying to ignore the casual way her sister was talking about having sex together, an event she still couldn't wrap her head around. Foreplay wasn't necessary now, Emily's body was as ready as ever, screaming for her to let go, while her mind was saying just the opposite.\n\n\"Can we turn off the lights? At least you won't be disgusted by looking at me down there,\" Emily suggested.\n\n\"I'm not disgusted,\" Stephanie calmed her, \"But this won't work unless you're comfortable. Of course we can turn them off.\"\n\nEmily breathed a sigh of relief as the girl stood up and walked over to the door, flipping the switch. Clad in comfortable darkness, Emily could relax a bit. There would only be a bit of light, coming from their window, barely enough to move around once their eyes adjusted to the darkness. She laid her face down back on her bed and waited while the teen blindly stumbled her way back to Emily's feet.\n\n\"Better?\" she heard her voice from behind her.\n\n\"Yeah, thank you,\" Emily replied.\n\n\"Is this OK, now?\" Stephanie asked as Emily felt her fingers once again on the edge of her garment.\n\nEmily nodded, then realized Stephanie couldn't see her, \"It's OK now, you can take them off.\"\n\nAs the teen moved the garment, Emily could feel the fabric cling to her wet nethers. She could even hear the wet sound as the two separated and a wave of fresh air kissed her down there.\n\nShe was forced to remember what Stephanie said moments earlier.\n\nHer sister found the 20 year old's nether regions attractive? Even to say it's beautiful? When she was all wet and messy like this? Just the thought it was about to happen made her pussy twitch, releasing more juice. She could feel it slowly trickle towards her pubic hair. Emily was lucky she naturally had very little hair around her lips and bottom, so it wasn't difficult to keep the whole area entirely clean. She still kept a few sparse trimmed wisps up on her pubis because she found it sexy, but her sister wouldn't get any hair into her mouth. This would be all skin on skin.\n\nThinking about the shape, Emily realized her sister wasn't lying. Her small inner lips, packed between the plump outer ones would form a neat vertical slit, giving her intimates the look of a peach right now. Even as a straight girl, she agreed with Stephanie those features might even look attractive. It was entirely believable the teen liked the looks and for a split second she was almost sorry for turning off the lights. In her state of high arousal, Emily found herself very curious about Stephanie's own 'blossom'. Would she also look like a neat peach?\n\nBut the smell was a different thing.\n\n\"And you don't mind the smell?\" she asked uncertainly.\n\nStephanie kissed Emily's right butt cheek in response.\n\n\"-you kidding?\" her sister asked, \"Your scent is the sexiest part about this. Just feeling it makes me want to do all sorts of stuff.\"\n\nShe shivered as she felt Stephanie's hands take hold of her sides, her thumbs slightly spreading Emily's butt cheeks. Then Stephanie's breath closed in, almost connecting and Emily closed her eyes in anticipation. When she felt her sister withdraw, she opened them again.\n\nDespite Stephanie's bold manner, the girl still seemed conflicted. To Emily, this was more than understandable - the girl's desire to please her older sister was probably countered by the discomfort of putting her mouth in a place it was never meant to be. The 20 year old's rational mind understood even now that, going by what's natural, that place isn't supposed to be against anyone's mouth at all, let alone someone putting their tongue inside there.\n\nIt made her remember, that if their actions followed just natural habits with full knowledge of consequences, nothing sexual would have ever happened between them. But that one freak accident set the ball rolling and now they were unable to make it stop.\n\nEmily's head was almost spinning when she thought of all the levels on which what was about to happen was wrong and unnatural. Those fluids that were coming out of her for the past 30 minutes should never come close to, let alone inside anyone's mouth. Let alone a girl's mouth. Let alone her own sister's. The instinct not to do that was always present, even Emily felt it now and couldn't even imagine how it felt to the teen.\n\nFinally, Emily felt the teenage tongue connect, dead center of a very sensitive place.\n\nShe yelped in shock, her bottom shaking as she screamed, \"Wrong hole!\"\n\nHer sister removed her tongue and giggled, \"I know.\"\n\nStephanie did this on purpose? She had damn good aim in this darkness. And in a weird way, this was just like Stephanie. In her place, Emily would have chickened out, backed off and apologized, knowing she'd find forgiveness in her sister's arms. Stephanie's approach was way different and she solved the dilemma in her own way.\n\nEmily could only grin and shake her head. The teen hesitated to put her tongue on her sister's pussy, so she put it on her butt instead.\n\nStephanie continued, \"I just wanted to try it.\"\n\n\"Not me,\" Emily argued.\n\nStephanie patted her on her bottom.\n\n\"Come on, don't be a spoilsport, you're getting the better end of this deal anyway,\" she heard the younger sister, before feeling the soft tongue once more. Wrong place again.\n\nThe 20 year old shivered and squirmed, struggling to hold still as the young girl wiggled her tongue all over her sensitive anus. The sensations were almost overwhelming, but the older sister managed to keep quiet this time.\n\n\"So, how does it feel?\" the teen asked.\n\n\"Just weird. It's like, like you're licking my spine,\" Emily replied, breathing in a moment of relief. She tried to pick her sister's spirits up, \"But it doesn't feel bad. I might grow to like it. Maybe.\"\n\n\"Funny,\" Stephanie said, smacking her mouth and swallowing, \"That's exactly how it tastes.\"\n\n\"No,\" Emily cringed audibly.\n\nShe always washed herself properly and now, freshly out of shower, she knew she was as clean as can be, but it was still an uncomfortable image.\n\n\"Don't worry,\" Stephanie calmed her, \"I won't make you do this to me. Just relax and enjoy it.\"\n\n\"Well. I said I'd-,\" Emily started, then was interrupted by her sister once again.\n\nHer wet lips locked around her anus, sucking. Trying to forget what was happening, Emily had to admit it actually felt good and, closing her eyes, she finally managed to relax and enjoy it. When she both felt and heard the teen finish the most intimate kiss Emily ever experienced, she felt her pelvic muscles contract involuntarily, her anus and pussy twitching in unison.\n\n\"I said I'd do any-\" Emily continued, unsuccessfully, as the teen kissed the sensitive ring again. Emily relaxed once more, expecting just another kiss, then suddenly felt pressure dead center. Before she knew what was happening, she felt the younger girl's tongue penetrate inside of her.",
        "Face against bed, Emily couldn't move her hips forward easily and was forced to feel a split second of shock mixed with bliss, as if Stephanie directly connected with a sensitive nerve. The 20 year old's body shivered at the overwhelming feeling, being held by the teen's hands and she tensed all the muscles around her anus and pussy.\n\nShe yelped, \"Nope! Nope,\" as she felt herself expelling the soft intruder with a wet noise.\n\nStephanie giggled.\n\nEmily got up to all fours again, \"Steph, sorry but-\"\n\nThe teen added, stroking Emily's bottom, \"No, I'm sorry, you didn't want this. I'll be a good girl now, promise.\"\n\n\"You better,\" Emily replied and lied down again. She liked Stephanie's playfulness, but this was Emily's body and she got a vote in this too.\n\nShe felt Stephanie lean lower and carefully place a gentle kiss on the correct opening now. Emily knew that 'correct' wasn't the word people would use in this case, she felt that in a way this was even more wrong than Stephanie kissing her anus. But it felt so beautiful she didn't care anymore. Just the thought of what was coming her way made a wave of desire wash over the 20 year old's body, making her shiver for a moment.\n\n\"Was that better?\" the younger sister asked from between Emily's legs.\n\n\"Yeah, much better, please don't stop,\" Emily replied, feeling herself swell and get wet again as she felt the girl's hands hold her hips, \"And thank you again.\"\n\nEmily closed her eyes and for the second time in her life enjoyed the most beautiful gentle lovemaking she could imagine. The teen was in no hurry at all, her soft, teasing, tickling touch just barely connecting with the 20 year old's outer lips, avoiding the most sensitive areas. She could feel her sister's breath on her intimates as the younger girl hovered there, barely touching Emily's skin, just brushing her tongue, lips, nose and chin over her sister's increasingly wet sex.\n\nAll her memories from the club came back, stronger than before. This was more proof than she needed that Stephanie definitely was the girl beneath the table. No one was ever this good at making love to Emily, it was impossible to imagine how anyone else could even come close to this.\n\nAnd it wasn't just the physical aspect that was enjoyable. What Stephanie did to her and the way she did it proved how much she loved not just the act, but also the person she was doing it to. It was the overwhelming sensation of being adored that made Emily not just float higher than ever before, but also have the wonderful warmth spread from her nethers into her tummy as well, strengthening the already powerful emotional bond with the teen loving her.\n\nSlowly, and perfectly in tune with Emily's need, the young girl was getting bolder, with longer and deeper licks closer to the center, but still avoiding her clitoris. Both sisters knew well they still had a while to go before that. In regular intervals, the teen withdrew her tongue to swallow, making Emily's heart skip when she realized Stephanie was now actually drinking her fluids.\n\nThen the girl would return with her whole mouth, placing slow, sucking kisses all over her lips. Stephanie would press her mouth against the slit, spreading the 20 year old's outer lips to get to the inner ones, sucking them and gently tugging on them. She loved that the teen managed all this without using her fingers to spread the tight slit - her sister's hands never touched Emily's pussy, the girl did all of this with her soft, wet, warm mouth. The older sister requested oral and the young girl delivered more than she ever hoped for.\n\nOccasionally Stephanie switched to a combination - Emily would feel a long, slow lick, then the teen's soft full lips would close around it, sucking for a couple of seconds and finally withdrawing with an audible smack. The only sounds in the room were the beats of house music from Emily's laptop and the wet sounds caused by the meeting of two pairs of soft wet lips. Her sister's mouth on Emily's pussy felt so wonderful, she wished for these moments never to stop.\n\nThe part of Emily's juices that wasn't licked up by her younger sister flowed in all directions from her pussy. Some of it down her thighs but in this position it felt like most went through her wet pubic hair, then started a tickling trail along her stomach. She was sure it would stop soon enough, or that her shirt would soak it up once it reached there, but as her loving sister continued the slow stimulation, the wet trail slowly became longer. Showing no signs of slowing down, it actually accelerated, gaining more flow from Emily's sweat forming along her body, quickly passing along the almost vertical side of the bottom of her ribcage, then under her shirt and between her breasts. \n\nIt was then when she realized that her head was actually at the lowest position. Sure enough, the juices continued past her collarbone, and along her neck. Being so close, she suddenly felt the perverted urge to taste herself and lifted her torso slightly, allowing her to turn her head so that she faced her bed. The warm trail stopped at her chin, forming drops.\n\n\"Wow, it's flowing all the way to my chin,\" she remarked, more for herself.\n\nBefore she could change her mind, Emily used her finger to swipe her neck and chin to bring the juice the rest of the way to her lips, finally tasting it. A part of her was relieved and a part really disappointed that by that point it tasted just salty, with no hint of her sexual tang.\n\nShe could hear a giggle from between her legs.\n\n\"Do you like it?\" the teen asked.\n\nHer sister could hear Emily's mouth and in some weird way even now she found a way to be embarrassed, feeling her face flush again.\n\n\"I think it's just sweat by now,\" Emily replied.\n\n\"Aw, I'm sure we can find a better way,\" Stephanie said between her legs.\n\n\"Thanks, but what you did until now worked really well, just go on please.\"\n\n\"I'd like to,\" the younger sister said but moved away, and Emily heard her stretching with a moan, \"just give me a sec. You're a bit hard to reach like this. My knees hurt and my neck is killing me.\"\n\nJust hearing that, Emily forgot all about her excitement. Only now she realized how far her bottom was from the edge of the bed and that her sister had to bend over forward and lean her head way back to reach her crotch with her mouth. The darkness obscured what an uncomfortable position Stephanie had to endure. It was almost unbelievable how slow and gentle the teen's kisses were, despite the strain on her body.\n\n\"Oh god Steph,\" Emily got up on all fours, then turned around and sat on her heels to face her sister, the floral shorts still at her knees. Dressed in black, she could only see an outline of Stephanie's face, the skull on her shirt and her arms as Emily continued, \"Why didn't you tell me sooner?\"\n\n\"You seemed like you were enjoying yourself,\" her sister replied casually, standing up, her white thighs coming into Emily's view as the girl rolled her head around and flexed her legs.\n\nEmily could only shake her head.\n\n\"Nothing's worth you getting hurt over it,\" she said in a concerned and frustrated voice.\n\nStephanie casually shrugged and suggested, \"We can just change the position. Maybe something more relaxing?\"\n\nEmily thought for a second. She never thought she'd use her spatial visualization skills for something like this. She smiled when she found it.\n\n\"I have an idea,\" she grinned, all excited.\n\n--\n\nStephanie heard rustling from Emily's bed as the 20 year old moved around. She could barely see her white shirt, legs, arms and head. Emily was laying on her side towards Stephanie, her head around the middle of the bed, feet hanging off the bottom.\n\n\"Come lie down next to me,\" Emily said.\n\nThe teen's heart started beating hard. Until now, she was in control, but now the tables seemed to turn. The older sister had something in mind and Stephanie had no idea what. She had to trust her.\n\n\"How are we going to do this?\" the teenage girl asked as she lied down next to her sister.\n\n\"I really liked what you did before,\" Emily suggested, \"So if you turn around so that your head is towards my feet, you could go on.\"\n\nStephanie finally understood and started moving as Emily told her, saying, \"OK.\"\n\n\"Put your head here,\" the older sister said as she raised her right knee, the leg closer to the bed, then patted her right inner thigh.\n\nStephanie laid down, her left hand on her sister's side, she relaxed her head on the 20 year old's soft thigh and sighed with content.\n\n\"Comfy?\" the older sister asked.\n\n\"Yeah,\" the younger girl replied, rubbing her cheek on Emily's inner thigh, \"I could stay like this forever.\"\n\n\"Don't tempt me,\" Emily joked, \"Also, you could bring your right leg up too. My neck was getting sore against the bed.\"\n\nStephanie slowly slid her right knee upwards, careful not to kick her sister's head. She could feel Emily's hair hanging over it as she said, \"Like this?\"\n\n\"Yeah,\" Emily replied and Stephanie felt her sister's ear and soft cheek as she used her thigh as a pillow, hair tickling the younger girl.\n\nBoth sisters took a couple of moments to relax, then Stephanie felt her sister's other leg move up too. Her sister knew better than to put that weight on Stephanie's head, instead coming to rest on the young girl's left shoulder as 20 year old closed her legs around the teen. This also opened Emily's sex and brought it much closer to her sister's face. Now she could clearly smell her arousal again, she even felt the heat coming from that place.\n\nStephanie bit her lip as she carefully replicated the same motion, putting her left leg on her sister's left shoulder, finishing their symmetrical, sideways sixty-nine.\n\nShe closed her eyes, feeling herself grow even more wet when she felt Emily's breath down there. This would be the first time anyone would kiss her down there and she couldn't wait for the experience of Emily's lips against her pussy.\n\n--\n\nEmily's attention, just as Stephanie's, was now on her sister's crotch. It was actually all over it, because even though she expected this when she though up this position, the girl was still closer that she though she would be. Her head was in the middle of the teen's thigh, leaving just inches between her face and her sister's most intimate area, even more so now when the girl moved her other leg up, naturally opening and turning the region towards her face.\n\nShe felt her heart beat fast as she realized that with the exception of carrying each other on shoulders when they were kids, never before was she this close to this part of her sister's body. Or any girl's actually. She was definitely close enough to clearly smell the sweet scent coming from that black area framed in her sister's pale thighs.\n\nShe took a deep breath through her nose. It wasn't as bad as she expected. In fact, she couldn't remember why she was so apprehensive about it. Stephanie's natural smell was really similar to Emily's own - it was familiar and it felt like home. She definitely preferred this to the smell of any of Emily's past boyfriends.\n\nBefore they turned the lights off, Stephanie's long black T-shirt was covering all of this and Emily couldn't see what her sister was wearing underneath. As she thought of this position, she hoped for some sort of underwear. It seemed reasonable, since her sister was dressed for bed and wouldn't go without undies simply for hygienic reasons. The older sister might have had a chance to peek when her sister was moving around on her bed, but didn't think to do so at the time, since the straight 20 year old naturally wasn't in the habit of casually checking out her sister's crotch.\n\nLuckily, Emily guessed right. She couldn't see much in the darkness, but now her view was filled with a pure black patch, framed by her sister's pale thighs. Emily never saw her sister's pussy, only felt it a couple of days ago with her hand, so she was sure she didn't have enough hair to make the region this dark. As far as she could tell, Stephanie was still wearing black panties under her long shirt. She confirmed her expectations by running her left hand along the girl's side, feeling a ridge just where the hem of her panties should be. She pinched the ridge with her fingers and pulled on it, just to make sure it wasn't a fold in the shirt. Sure enough, the rubber band in the panties offered comforting resistance and the 20 year old could relax.\n\nUnfortunately for Emily, her sister felt all of it and misunderstood her intentions.\n\n\"I got it,\" she heard the girl say from down between her legs. Before Emily's mind had time to process what her sister meant, the teen straightened her legs, rolled to her back and away from Emily, threw her legs up in the air, bending them almost to her head as she lifted her bottom and slid the small black garment off, then threw it in the other direction as she lowered her legs again, all in one quick motion.\n\nShe could only admire the young girl's smooth, limber way she did that, like a trained acrobat.\n\n\"Wow,\" the 20 year old reacted.\n\n\"Impressed?\" Stephanie asked.\n\n\"Yeah, actually,\" Emily continued. Her sister was laying on her back, but her shirt now rode up and Emily looked up and down the blur that was her sister's naked lower torso, just making out its shape.\n\n\"You know I'm pretty flexible,\" Stephanie said and rolled to her right side, towards the wide eyed Emily.\n\nEmily could now see the outline of her sister's gently flaring hips in front of her, but her attention was of course drawn to the triangle between them. Unless she was imagining it, she could just barely make out a darker patch just where the teen's mound should be.\n\nAlmost transfixed by what she couldn't see in front of her, she said the line she prepared beforehand, \"Maybe you just have more practice in dropping your panties.\"\n\n\"Hey! Bad Emily!\" the girl scolded her and playfully patted Emily's side, \"You're lucky I'm horny so I'll let it slide this time.\"\n\n\"Let it slide, like those panties?\" Emily reacted almost immediately as the sisters brought up their legs again, getting into their sixty-nine again.\n\nEmily closed her eyes and giggled at her own joke. It was helping her relax, her mind barely even registering how close she was to her sister's naked sex.\n\n\"I'm going to have to shut you up somehow, won't I?\" she heard Stephanie.\n\nAlmost immediately Emily felt something unexpected as her smiling mouth sunk into soft, smooth and warm flesh. It was slowly gliding along her lips in the direction of the slit. The 20 year old's confused mind only connected the dots when she heard a passionate gasp escape her sister's lips, her whole body shaking in pleasure.\n\nThe older sister recoiled immediately, opening her eyes and moving her head back, the softness lightly sticking to her mouth. Finally the two sets of lips separated with a soft smacking sound.\n\nShe felt a retch coming on, and started breathing deeply, her heart beating, feeling the teen's sweetish arousal stronger than ever before. She did all she could to not feel disgusted at what just happened. It was important that she not have that reaction to Stephanie's body.\n\nShe never wanted to be this close to any pussy. She closed her eyes, trying to come to terms with all of this, repeating to herself that it was OK. Despite her initial revulsion, the realization of where her face just rubbed against her sister's body and especially Stephanie's reaction made Emily's pussy twinge in twisted desire. Her teen sister loved that disgusting action and the pervert in Emily did too.\n\nShe couldn't help but lick her lips, tasting Stephanie for the first time ever. A salty, slightly buttery taste with a metallic twinge, all colored in her sister's sweetish tang. It wasn't up there with Emily's favorite tastes, but the knowledge that it came from her own sister's sex made her shiver in twisted delight.\n\n\"You OK?\" Stephanie asked.\n\nNow she's asking? First she pushes her leaking slit into Emily's face, then she's suddenly concerned for her well-being? A twinge of anger flared in the 20 year old's chest.\n\n\"Well? Are you?\" Emily spat out.\n\n\"What do yo-\" Stephanie started, then was interrupted mid-word as the older sister pushed her own hips against the teen's face, rubbing her sex from her nose to chin. It felt better than Emily expected and she had to bite her lip not to moan.\n\nWhen she moved back, the younger girl continued, \"So that's how we handle it? Well, game on then.\"\n\nWith that her rival's pussy was back on Emily's face. This time she moved her head back quickly, the teen barely connecting, as she pushed her own hips forward again. Her younger sibling moved her head away too, before Emily could even reach her.\n\n\"Em, I got you on Mario Kart, you think you even have a chance with this?\" she heard Stephanie bragging.\n\nThat started the fire anew. She'd do almost anything to win against her sister.\n\nEmily replied quickly \"This isn't Mario Kart, is it?\"\n\nAbandoning the rest of her dignity as well as caution, the 20 year old crossed her ankles behind the teen's head and used her calves to hold the head in place as she buried her sister's face in her sex, grinding forward and backward and making wet slapping noises.\n\nA few seconds later, just when she felt Stephanie learned her lesson and wanted to release her, she felt the young girl do the same, forcing her own sex against Emily's lower face while holding it in place with her legs.\n\nNow both sisters were grinding their hips into each other's faces with abandon. Rather than romantic sex, this was more like they were wrestling, trying to one up each other. Despite the unusual position and intimate way they touched, to Emily this relationship with Stephanie was well known. These were normal, old rivalries that the sisters engaged in just like all siblings since they were children.\n\nEmily didn't care that all she could smell and taste was her sister. That, along with the carnal pleasure radiating from her sex, only fueled on her resolution to continue, as she ground her hips relentlessly against into the face between her legs.\n\nLuckily Stephanie's silky pussy still left either Emily's nose or mouth free occasionally, so the 20 year old could breathe when she needed. Emily eased up and extended her sister the same courtesy.\n\nIt was then when she realized her sister didn't actually fight her anymore. Stephanie's arms were holding Emily's bottom to hold her close, her firm teenage breasts pressed against the 20 year old's stomach. Even her head pressed into Emily's core on its own. Her hip movements weren't angry either, rather her sister's pussy was smearing against Emily's face in a fluid and passionate manner, from the bottom of her labia all the way up to the hard and sensitive clit. Stephanie wasn't wrestling, she was making love to Emily.\n\nThe 20 year old matched her sister's slower, more deliberate motions. Both their mouths were open now, tongues extended. Rather than conquest, the girls now focused on delivering and receiving pleasure. Both sisters were rather quiet during sex as the smell of arousal and sounds of wet flesh gliding around spread through their room, only occasionally being complemented by a muted moan of pleasure when one of them couldn't hold it in.\n\nEmily's anger now being blown away by affection for her sister, all that was left was love. The girl really loved Emily more than anyone, it was all so obvious to the 20 year old now. More than anything the older sister now wished to stay in this blissful embrace forever, always gently making love to each other.\n\nSadly, she realized it couldn't last. Already she felt the stirrings of an orgasm deep inside of her, fueled by her thoughts about Stephanie's feelings for her. She was obviously further along than her sister, her hips already naturally picking up pace. Despite her best effort to delay the itch, the pleasure was about to overtake her as Emily's body decided it was time to reward the 20 year old with a beautiful orgasm. She knew this one she wouldn't be able to just shrug away like her first one.",
        "In the most difficult decision Emily could remember, she used all her willpower to force her hip to move back while she brought her left hand down and held back the teen's head.\n\n\"I'm too close,\" the 20 year old explained between breaths, holding her pelvic muscles to stop her pussy from spasming, \"Let's try and come together.\"\n\n\"OK,\" she heard Stephanie from between her legs.\n\nNow Emily redoubled her efforts. Her pleasure in the background but need stronger than ever, she could focus on the 18 year old. She spent a few moments just licking along the whole slit, alternating with kissing along it, making her sister breathe deeply and gasp from time to time. Stephanie was more than ready, but Emily wanted to show her affection for the teen, just like the younger girl did.\n\nOnce her sister was so stimulated she couldn't hold back thrusting her hips, Emily took hold of the teen's tight bottom with her hands and wrapped her lips on her clit, trying to push it out of it's hood as far as possible, then gently sucking it in rhythm with Stephanie's movements.\n\nHer sister's reaction was immediate, the girl breathing deeply, barely holding back her moans as she held on to Emily's waist and pressed her breasts into Emily, her hips always grinding into the older sister's mouth. Emily added her tongue, flicking across the sensitive nub and heard her sister gently moan in response.\n\nStephanie didn't say anything, possibly lost in her bliss. But she didn't need to either. It couldn't have been 30 seconds before Emily felt the teen's pelvic muscles starting to tense up. She was also surprised that she recognized her sister's high wailing moan as a clear signal that Stephanie has just finished climbing the hill and would start falling any second. It was almost funny how already the sisters knew each other sexually better than anyone else.\n\nEmily let go of the clit between her lips, Stephanie instinctively pressing it into Emily's chin, trying to get the ball rolling. The older sister pushed her hips into Stephanie's face, holding her head with her legs until her sister latched on and started sucking the 20 year old's sensitive nub. Emily's pleasure now brought her back within moments, her own muscles rigid. She almost forgot about Stephanie's need. In a final moment of clarity, she managed to put her lips around her sister's grinding clit, then closed her eyes and sucked relentlessly, starting the ride of her life.\n\nBoth sisters were now acting merely on instinct as their young bodies bathed them in blinding pre-orgasmic pleasure.\n\nThen it happened. Emily heard a muted moan and thought Stephanie reached the peak, only to realize it was coming from her own throat as her body first shook, then froze in ecstasy. Her legs automatically pushed the head between her thighs deep into her sex until she felt a nose penetrate her. It was like a perpetual motion machine, her little sister's face continuously stimulating her most sensitive areas as her pussy contracted again and again, sucking in and squeezing the invader. Her hips pushed forward on their own, thrusting with each contraction, seeking more penetration. She was in the heaven she sought ever since she met the girl at the club.\n\nHer orgasmic haze now in full power, only barely she registered her sister's legs pressing Emily's face into her own silky hot flesh. Stephanie's vaginal muscles were massaging her hard and releasing even more fluid as her sister's pussy tried to swallow her. For a while, both sisters' orgasms synchronized and every time Emily's muscles contracted, she felt the young pussy squeeze the 20 year old's nose and mouth too, almost like it was her own.\n\nIt was several moments before Emily's contractions subsided, the pleasure finally falling away as she relaxed her legs and arms, being replaced by a satisfied contentment. She could only take a strained breath through her mouth, her sister's strong legs still holding her close. The older girl's face and chest started to flush. She was now acutely aware of the teen's shivering sex, still enveloping Emily's face in a way that was too close for her comfort as the young girl squeezed the final bits of pleasure from her orgasm.\n\nHer post-orgasmic bliss, along with the focus on Stephanie's pleasure, helped Emily to hold out, but she was still glad, when a good 10 seconds later, her sister finally took pity on the prisoner between her thighs and relaxed her legs, allowing the 20 year old to separate with a wet sound.\n\nBoth girls rolled away, laying on their backs next to each other, breathing deeply to the subdued sounds of house music.\n\n\"Wow,\" she heard Stephanie say between breaths, \"That was. Incredible.\"\n\n\"Yeah,\" Emily could only agree. The orgasm was amazing, but the emotional connection with Stephanie made it even more exceptional. In the end, this was up there with her experience at the club, \"Got a bit carried away there.\"\n\n\"You call that a bit?\" Stephanie joked, then continued, \"But you mean you or me?\"\n\n\"Both of us I guess?\" Emily mused, \"This wasn't normal, right?\"\n\nStephanie chuckled, \"Em, I don't think anything about this whole thing is normal.\"\n\nEmily smiled widely, listening to her younger sister as Stephanie's chuckle continued into an almost silent laugher. \n\nWhatever this was, the only thing that mattered was that it made both of them happy."
    ],
    "authorname": "JessicaS",
    "tags": [
        "lesbian",
        "lesbian incest",
        "cunnilingus",
        "analingus",
        "orgasm",
        "sister",
        "sisters",
        "sixty nine",
        "poetry",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/table-for-two-ch-08"
}