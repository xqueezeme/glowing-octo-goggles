{
    "title": "Bad Day at the Greasy Grass",
    "pages": [
        "Wow!! I grew up reading stories about the wild west. Now I get the chance to write one. I want to thank Randi for her vision and leadership, in setting up this event, as well as for her super editing. Toss in my buddy Pixel the Cat, too. He catches things that mere mortals miss. I hope you enjoy my little tale. \n\n*\n\nI hated O'Brien. The fucker came over in fifty-two, just at the end of the Great Hunger. And, by sixty-three he had recruited every Fenian thug in Five Points. So, he was \"Boss O'Brien\" now. And there wasn't a pie in the Sixth Ward that he hadn't gotten his corrupt fingers into. \n\nI was a twenty-year-old copper back then. Molly and I had been married for a year and we lived in a twenty by fifteen, tenement shack. It was on Mulberry, right behind the Church. Nobody in lower Manhattan had to ask, \"Which church?\" For we Irish, it was Transfiguration Catholic. \n\nOur place was drafty in the winter, and broiling in the summer. But we loved each other and that was good enough for both of us. \n\nMolly was the light of my life; beautiful, winsome oval face, high cheekbones, a long Irish nose and full kissable lips. But, it was her wealth of copper colored hair and her mischievous, laughing eyes that were her real glory. She was always happy and smiling and she never met a person she didn't like. She was the prettiest girl in the whole of Five Points. And she was mine.\n\nShe worked hard, doing washing for Myrtle O'Byrne. Myrtle laundered bed linens for the toffs. Molly didn't make much money doing it. But she wanted to contribute. She was like that, you know; very loving and loyal.\n\nWe were young then, and we had more than our share of urges. The Church told us that what we were doing was sinful. I didn't believe it. Nothing that felt THAT good, and brought us so close together, could be evil. Father Flynn said that he abstained from sex. So, what would he know about it, anyhow?\n\nMolly had a sturdy crofter body, wide hips, strong legs and the best tits in lower Manhattan. We'd fuck every night. a lot of the time, Molly started it. She really didn't have much else to do in the evenings. She didn't know how to read. \n\nFucking was a pleasant way to end the day. That's probably why her friends were constantly pregnant. Molly never was. There must have been something wrong with one of us. But I, for one, thought it a blessing. I had Molly all to myself. \n\nMost evenings, she'd just stand up, unlace her dress and drop it off her lovely round shoulders. That was a sight to behold, because she didn't wear anything but a petticoat under the dress. Her big, round, Mick tits and those delightful pink nipples were like the sun rising over Galway Bay. You might see it every day. But the vision still moves you. \n\nThen she would turn and climb up into our bedroom loft. The only thing more spectacular than Molly's boobs were those two muscular buns as they disappeared up the ladder. I'd be right behind her with my personal truncheon in my hand.\n\nMolly was a different woman in the loft. Everywhere else, she was bright and cheerful; with a sunny nature and a lot of Irish humor. But, she was a wild Celtic lass up there, serious about her satisfaction; demanding and aggressive. Her family came over from the Burren, in County Clare and those girls are all as fierce and relentless as the stormy Atlantic. \n\nShe was a true daughter of Ireland though. A powerful woman, built to work and birth babies. We didn't do anything elaborate up there. There wasn't enough room for fancy stuff anyhow. She would just lay back panting with lust, and slowly open her legs. I would slide my cock into her hot, slippery hole. She would utter a loud groan of sensation and we would set to it. \n\nShe took and gave in equal measure. She didn't get tired and our moments together were long and passionate. She always seemed like she was starving for sex. \n\nThe oddest part about Molly were her frequent out-of-control spasms. It was the one thing that she did during the act, that none of the other husbands talked about. I was thinking maybe, she might need to visit a doctor. But, she assured me that those fits were natural and enjoyable for a woman. \n\nI walked a beat out of the Franklin Street Station, which is near the Collection Pond. It was along Worth to Mulberry and back. It paid a little extra since Mulberry was the dividing line between the Dead Rabbits and the Bowery Boys. \n\nThe Rabbits were a bunch of Mick thugs who worked for Tammany, and the Boys were the muscle for the nativist Know-Nothings. Tammany recruited every Irishman they could find. While the nativists, wanted all of us Hibernians shipped back to the Ould Sod. So, there were frequent get-togethers between the Rabbits and the Boys. And we coppers had to attend every one of them. \n\nThe nativists had gotten here first, and they didn't want to share. So, saloons had signs that said, \"No Dogs or Irishmen;\" and they meant it. Their justification was that the Irish couldn't control their drinking and fighting. They might have had a point. But as far as I was concerned, lumping all of us in the same category was nothing but ignorance. We Irish worked hard doing jobs the toffs were too grand, or too lazy to do. \n\nMichael O'Doul shot Bill Poole at one of those affairs and Chief Schwartzwalder sent seven of us boys to \"apprehend the miscreant;\" his words not mine. I was wondering why a Heinie was running a station full of Micks. Maybe it was because, he spoke better English. \n\nWhen we got there, O'Brien was standing in the doorway of O'Doul's shanty. It didn't take a genius to figure out that the Boss was putting on a show for the Rabbits and the rest of the bog-trotting scum loitering about. \n\nI was a junior guy. So, Sergeant O'Toole did all the talking. He said, \"Now don't be givin' us any trouble Shamus. We gotta arrest that boy, and that's all there is to it.\"\n\nO'Brien got up on his high horse. He didn't give a shit about O'Doul and everybody knew it. But he was pushing his cred with the Sixth Ward crowd. So, he puffed up like Saint Patrick driving out the snakes. It played well to the throng of itinerant Irishmen, and it was a big crowd indeed. \n\nEverybody was angry back in those days. Work was hard to find. And of course, we all blamed the newly freed blacks, who were making their way north into the City. None of us Micks ever thought that demon rum had anything to do with it. \n\nThen somebody threw a rock. It hit Timothy O'Higgins and the fun began. I might not be the tallest Paddy. But I am built like a bull and I love to fight. O'Brien stepped off the porch with a brickbat in his hand. O'Toole had his back turned, facing the crowd. It was clear that O'Brien was going to hit the sergeant over the head. So, I belted him in the ribs with my truncheon, just as he raised his arm. \n\nI had the satisfaction of hearing a crack and O'Brien bent over wheezing in agony. The fight didn't last long. It was truncheons and saps against fists. We dragged O'Doul out of his house. And we added O'Brien to the pile, just for good measure. He wasn't going to be doing anything for a while, anyhow. \n\nIt didn't take Tammany long to spring them both. That was as sure as the sun coming up in the mornin'. I had to hand it to O'Brien. He was on his feet. But, he was bent over holding his ribs. He turned to me, as he walked out of the station-house, and said, \"This ain't over Riley, not by a long shot me bucco.\" And he was right. I had made an enemy for the rest of HIS short life.\n\n***** It was a gorgeous Spring day on Mulberry. I was whistling as I finished walking my beat. I strolled into our little downstairs room with a cheery smile. That quickly changed. Sitting there large as life was Shamus O'Brien. His sneer told me everything. He was going to return the favor through Molly.\n\nMolly is preciously na\u00efve. She just doesn't recognize that true evil exists. So, she was excited. She bustled over to plant a chaste kiss on me and said, \"Councilman O'Brien has honored us with a visit dear. He wants ME to be the Maid of Erin, at the Tammany reception for Councilman Tweed.\"\n\nThe choice was understandable. Molly was really a very special woman. And she was the embodiment of pure Irish femininity. But it was clear by the glint in O'Brien's eye that he had more in mind than Molly presenting Boss Tweed with a bouquet of shamrocks and roses.\n\nO'Brien stuck out his big meaty paw without missing a beat. He said, \"No hard feelings about that little disagreement last fall Patrick.\" I thought, \"I'll bet.\"\n\nHe continued with, \"I wanted to smooth things over by nominating Molly for the Maid of Erin. She's goin' to be a perfect specimen of Irish womanhood.\" The glint in his eye told me that he wasn't going to rest until he'd fucked my wife. \n\n***** The War had been going on for two years. And it was never far from anybody's mind. That's because the casualty lists from foreign places like Antietam and Fredericksburg kept reminding us. Everybody lost a brother, son, or nephew. \n\nThe motto of the Irish Brigade was, \"f\u00e1g an bealach - clear the way.\" So, the \"Fighting 69th\" New York had been at the forefront of grisly places like, the Bloody Lane, and the Stone Wall. And Colonel Meagher had lost a lot of good Irish boys. Worse, the way things were going it was for no apparent gain. \n\nThe Union needed more men for the meat grinder. So, the damned Congress instituted something called The Draft. The \"Enrollment Act,\" as they called it, said that you could be yanked out of your life and made to serve in Mr. Lincoln's army. Any able-bodied man between the age of twenty and thirty-five was on that list. \n\nOf course, they wrapped the whole thing in the American flag. It might have appealed to every fella's patriotism. Except, the toffs immediately bought themselves out. The cost was absurd; three-hundred dollars. That, left nobody in the pool but the Heinies, and us Micks. \n\nMonday, the thirteenth of July was a hot and clear summer's day. We were expecting trouble. The casualty lists were just comin' in from a place called Gettysburg. And, the anti-war rags spent the weekend whipping up people; with stories about how us poor white folks were paying for the Republican's war with our lives. \n\nThey had us coppers guardin' the platform in front of the Provost Marshall's Office, up on 44th. That was where they were drawin' the names. The first couple of boys just shrugged and walked over to the Provost Officers; who were there to welcome the draftees to their fate. The boys who'd been drafted probably didn't have anything to do anyhow. \n\nThe next had his arm around a pretty girl who was obviously his wife. He said, \"But I'm married.\" I heard a voice from the podium say, \"Doesn't matter boy-o. That's your name and you're goin'.\" Both man and wife burst into tears. The provost guards dragged him off, with his wife clinging to his arm. It was pathetic. \n\nThe crowd begin to grumble dangerously. Then they drew the next name. I heard, \"Patrick Timothy Riley.\" There were a lot of Rileys in New York and most of them were named Pat. Then I heard that same irritating voice say, \"That's him over there, boys.\" \n\nI turned to see who had said that and it was O'Brien. The sneering smirk on his face said it all. Molly's beautiful face flashed across my mind and a sense of dread enveloped me. I said, \"Wait, I'm married too; and I'm a copper. You can't take me.\" \n\nO'Brien said mockingly, \"Yes we can me bucco, and we will!! Seize him boys!!\" With that, four men in blue grabbed me right out of the police line and started dragging me toward the rest of the unfortunates. \n\nIt was between O'Brien and me, now. My first instinct is always to fight, and I am stronger than most people. So, I shook off the two soldiers holding my arms, shoved the other two to the ground, and started toward O'Brien. \n\nI raged, \"You won't get away with this O'Brien. Where are the Knickerbockers? Where are the rich? You're a traitor to the Irish O'Brien. You're sending your own people off to die. How many pieces of silver did they give you?\" \n\nThe gutless bastard was cringing behind the Chief of Police.\n\nAt that point, a gang of soldiers caught up with me. The punch to the stomach drove the wind out. The sap knocked me unconscious. But, I saw the first brickbats and stones start to fly. Apparently, I'd started the New York Draft Riot. \n\nThe riot went on for two days. A lot of the City burned, a couple of thousand citizens were injured and another hundred were killed. I had no knowledge of that, since I was chained up and hustled over to Camp Astor, on Riker's Island. My Irish temper was boiling, and they kept the chains on until they threw me in a cell. \n\nI spent a week in the dark. They fed me once a day. All I could think of was my Molly and what was inevitably going to happen to my bright shining lass. Shamus O'Brien was not far from my thoughts, either. I would survive to kill him. \n\nFinally, the door opened and a couple of big beefy soldiers in sergeant's stripes dragged me out. I was weak as a kitten by then. So, they didn't have trouble doin' it. A couple of dandies surveyed me, while I hung by the arms between my two jailers. \n\nOne was in a military uniform. He was a neat little man, brown haired, clean shaven. Best of all he looked intelligent. That was a contrast to the other guy. I knew him. His name was Jenkins and he was the Provost Marshall. \n\nThe guy in the uniform inspected me. It was like he was buyin' a horse. He said, \"I witnessed what you did at the Draft meeting. I hear from your Chief that you're a pretty good fighter?\" \n\nI said, \"Let go of me and you'll find out.\" \n\nThe guy in the uniform laughed uproariously and said, \"He'll do. We need men who can fight.\"\n\nThe two sergeants frog-marched me over to a table. There was a paper on the table. Jenkins said put your \"X\" on it. \n\nI said, \"I can write.\" \n\nThe military guy looked surprised. Jenkins said, \"Okay Spud, sign your name.\" \n\nI said, \"Not until these two let go of me.\" \n\nJenkins said, \"Release the prisoner.\" The minute they did I went after Jenkins, only to be stopped by a sword point at my belly. The military guy was holding it. \n\nHe looked very cool and calm as he said, \"Sign the paper.\"\n\nI knew I was signing up for the duration. I wasn't going to be able to protect Molly if I did. But they were going to spit me like a chicken if I didn't. The little voice in my head said, \"Live to fight another day Paddy.\" So, I signed.\n\nAt that, the military guy, whose name was Merritt said, \"Escort Mr. Riley to the cars and chain him up there. He has an appointment in Buffalo and I want him to keep it.\" He knew I would jump off the train if I wasn't chained to it. So, I rode the entire way up to Buffalo in a box car carrying boots and other military gear.\n\nAfter a day and a half without sleep, I arrived at a bare patch of land in Lockport. It was a place that they laughingly called a \"recruit training\" camp. As we passed the encampment, they literally threw me off the train. \n\nI rolled down the embankment, right at the feet of sergeant Michael Brennan. He picked me up and said with a big leprechaun grin, \"Welcome to the army Boy-o;\" that, as he was unlocking my handcuffs. \n\nMost of the belligerence had been beaten out of me. I had finally accepted that my life in Five Points was over. And that for better or worse, my wife was now in the clutches of a guy whose only aim was to humiliate me. Killing him in creative ways was the only thought that was keeping me going. \n\nI grieved for Molly. She couldn't write. So, we weren't going to be exchanging any flowery love letters. None of my friends could read, or write either. So, it was pointless to try to hold on to my old life. I might as well be on the moon as far as she was concerned. I hoped she was alright. I feared she wasn't.\n\nI am one very tough Mick. But I cried a lot in the deepest, darkest hours of the night. It was SO unfair. I told God that he could forget about seeing me at the Pearly Gates. Because, any deity that would let this happen was no friend of mine. \n\nI coped because I knew that there would be vengeance at the end of my rainbow. And the Devil was my Master. My heart was hard, and cruelty was my best mate. Molly was too good for me now. \n\nBrennan dragged me off to a filthy collection of tents. Three guys were in the nearest one. None of them looked any happier to be there than I was. \n\nHe said, \"I'll be givin' you lads a bunk-mate, make him feel right at home.\" \n\nThat must have meant beat the shit out of the Mick. \n\nLike I said, I'm a good fighter. I got plenty of practice growin' up in the Points. I'm short. But, I have a neck like a bulldog and the rest of me is thick and powerful. I can also take a punch. That's because my skull is thick and Irish and I'm an ugly wall of muscle. I didn't go out of my way to get that way. It was just handed down through generations of Hibernian potato excavators. \n\nI reached an understanding with those boys; once they had been revived. Hence, I had my pick of places to spread my new army blanket. There was also more room. Since, they had to send the one whose jaw I broke, home. He thanked me profusely for getting him out. \n\nI could barely sit on a horse, let alone ride one. The only horses that I had encountered in the Points were pulling carts. And I hadn't fired a gun. They fixed all that in the four weeks before we were shipped down south. In the meantime, I fell off a lot of horses. \n\nI hated the horses. Most of us were drafted from the City itself. So, I had plenty of company falling off the things. But I adored the gun. I've got a steady hand and I love the power a gun gives you. By the end of the month I could regularly hit a target at 300 yards. They hung a sharpshooter medal on me and then shipped me south. \n\n***** That was how I came to be sitting on a moth-eaten nag in Northern Virginia; in the spring of 1865. The Second Mounted Rifles, better known as The Governor's Guard, were not the hoity-toity cavalry. We were a collection of shantytown misfits trained to ride to the party. \n\nWe fought on foot; like infantry. So, I was toting a 58-caliber Springfield rifle with an almost two-foot bayonet, instead of a sword and a fancy Sharps carbine. Colonel Fisk, was our commander. He was a fellow who got crosswise with his superiors a lot. In short, he was just like me.\n\nThe guy who'd made me sign the paper was in charge of the whole Brigade. I liked Wesley Merritt. He could fight. And, unlike Custer, he seemed to care whether the rest of us got killed. \n\nFor some reason, he liked me too. He made me a sergeant. Here I was, twenty years old and bossin' around a bunch of older guys in my troop. \n\nSometimes, I'd run into a trooper who didn't hear so well. That's where my bareknuckle skills came in handy. In the two years after I was coerced into the army I never lost a fight. Eventually the whole troop came to respect me, even if I was a kid.\n\nWe were in some real battles, Spotsylvania, Cold Harbor, Petersburg. But, the generals didn't know how to use us. We were too much like the cavalry, to be trustworthy as infantry. And we were way too untrained to be much good in a cavalry fight. Most of the time we just scouted and guarded the backs of the people who were doing the actual fightin'. \n\nWhat was particularly unfair about my situation, was the fact that all the other boys got time off to go back and see their folks. I never did. It was Merritt's doing. He knew I would run away if he ever let me out of camp. He was right. \n\nThe guy who'd been drafted before me was something of a friend. His name was John Blake and he was a good steady guy, quiet, decent and trustworthy. He'd been a mechanic on the docks before he'd been ripped out of his life. His wife Nelly, was an Irish lass, and he loved her as much as I loved Molly. ",
        "We talked a lot about how one-sided the whole thing was. He had been making a good living before he got drafted and they were thinking about buying a house. Fortunately, they had been living with Nelly's folks. So, she had a place to stay. \n\nMolly was all I had and vice-versa. Her parents had died on the voyage over. And I was found in a basket in front of the church. So, our situation was different. They let Blake go back home for a whole week after the fiasco at the Crater. They just laughed when I asked. \n\nMaybe, it was for the better. Blake came back a lot sadder. He really missed his wife. But he said she was still alright, without him. I asked him about Molly. He said he hadn't heard anything about her. I had the feeling he was holding something back. But, I never got another word out of him. \n\nWe finally get our opportunity at a place called Marshall's Crossroads. They needed all the mounted help they could get. They had found a hole in the rebel line and we were pouring through it to surround them. The distance was too great for infantry to march. So, they called on every mounted regiment in the Army of the Potomac; even us.\n\nOnce we got around behind them they had to try to break back out. It was the first time I killed a man in battle. I had no regret. It was a Reb officer. I shot him off his horse from over 350 yards. THEN I put paid to a few his men. \n\nThe Rebs tried to break the cordon around them. They were desperate to escape. We were behind a rail fence. We stood up and volley-fired into them. The field was swathed in black powder smoke. So, you couldn't see more than thirty yards. Dim figures emerged out of the fog and we shot them down. \n\nWe couldn't miss from that distance. It was like watching corn stalks fall in front of the reaper. They kept coming and we slaughtered them ruthlessly. The sound was indescribable; the crash of our rifles, the shrieks of the dying and that infernal rebel howl. \n\nI was prominent in the fight, remaining standing and calmly yelling the, \"LOAD!! PRESENT!! FIRE!!!\" volley commands. \n\nI wasn't being brave. The only reason I was doing that, was because I figured that the faster we ended this thing, the quicker I could get back to my Molly. But, they thought I deserved to be an officer. So, they promoted me on the spot to Lieutenant. I didn't do anything different as a lieutenant. But, I DID get my own tent.\n\nI was only \"officially\" a combat officer for a week. Then, the whole thing ended at Appomattox. It didn't matter. I knew that I'd never be anything but bog-trotting Irish scum in the eyes of my \"betters.\" But then again, being an officer DID make my separation pay a little bigger, since the Mounted Rifles were the ones who bagged Wilkes Booth. So, we got the biggest share of the reward money. Maybe I could buy a real house for my Molly when I got back. \n\nWe were mustered out after the usual folderol. It was in a big parade in Washington City, where the great-and-good polished their credentials for political advancement. I had been away from my former life for exactly two years and one month. \n\nI hadn't heard anything from anybody in all that time. I had a few friends on the police force. But they were as illiterate as Molly. And Blake had claimed that Molly'd disappeared. She was probably stayin' with one of her many friends.\n\nThe boys had a little farewell party at the National Hotel over on Pennsylvania. There were some toasts, none of which I shared. I was nurturing a red-hot, burning coal of resentment. Then I hopped the Baltimore and Ohio back to New York. It took us almost three days to go down to Virginia on that line. It took a day going back. There wasn't a terminus in Manhattan, like there is now. So, I just jumped off at Paulus Hook.\n\nIn the morning, a waterman took me across to the docks on the Manhattan side. I walked the mile or so from the Battery, to The Points. It was a warm sunny day in late August. The City was buzzing with excitement like I remembered it. I was in my full Lieutenant's fig with the cavalry yellow trim. \n\nAs I got into the old neighborhood, I discovered that people didn't recognize me. That was understandable. If I had been a bit of a hard case when I left, I was something entirely different now. I wasn't the innocent twenty-year-old who had been dragged out of his boyhood life in chains. I had spent two years enduring danger and hardship. I had commanded men in battle and I had killed the enemy. I had seen acres of horribly mutilated bodies at the Crater and watched men die for every conceivable reason. \n\nNow, I was death on a pale horse and I was looking for O'Brien.\n\nI walked up to our little shanty. My heart was in my throat. It had always been a happy place, full of peace, joy and love. Now it was an abandoned wreck, much like my life. There wasn't anything inside, but a litter of cheap whisky bottles; no doubt left by squatters seeking a handy place to drink. In many ways, the desolation of that place was a perfect analogy for my soul. \n\nMolly was nowhere to be seen. I didn't expect her to be there. She had to live somehow. I had no idea where she was. But I knew where O'Brien lived. He had a fine house on Broadway near Washington Square. \n\nIt was late afternoon when I arrived at his doorstep. I could have probably gotten my business done right then-and-there. I looked trustworthy in my cavalry finery, even if I was really nothing but a mounted infantryman. But I preferred not to be hanged. So, I wanted fewer witnesses. \n\nI just loitered around doing reconnaissance. I wanted to get the routines down. I would normally have seemed suspicious to the neighbors. But, I got a lot of approving looks. They appreciated the uniform.\n\nIt was finally nightfall. At that point, the gas lamps were on. I was across the street from O'Brien's house, just watching the traffic going into and out of the house. A lot of politicians, whose faces I recognized, were coming to kiss the great man's ring; or whatever part of his anatomy he so desired. \n\nThere was a stirring and a fine coach pulled up. The front door of the house opened and out walked O'Brien. He was dressed in top-hat and tails, obviously headed for a night on the town. \n\nHe had an absolutely sensational woman on his arm. She was all dolled up for the evening, in a tight-fitting emerald green gown that contrasted beautifully with her wealth of copper curls. \n\nThe dress showcased a spectacular pair of tits. I knew those tits intimately. They belonged to my wife. That explained everything.\n\nShe was nothing like my bright little bird, now. She was a painted New York society lady. O'Brien put his arm around Molly's waist, as the slimy Mick bastard escorted her to the carriage. She leaned into him intimately. She looked cool, relaxed and content. \n\nWitnessing that infuriating display, I felt nothing. No jealousy, no anger. I had already cried my way into a state of emotionlessness. At least I knew Molly was well, now. She would inherit a lot of money soon.\n\nI had been out there all day observing. I counted four servants in residence; a butler, two parlor maids and a cook; three women and one older man. The rest of the large household was clearly day-help. \n\nI rapped on the door after everybody had gone. The old butler answered it. I was hoping that the servant women had retired for the night. I didn't want them to witness what was going to happen. It would be gruesome. \n\nThe butler surveyed the full uniform and the military bearing and said dismissively, \"The Master is at the symphony. He'll see you in the morning.\" He was used to turning away people who were a lot more important than a humble cavalry lieutenant. He began to close the door.\n\nI stopped the door with my foot and said in my best authoritarian voice, \"This won't wait my-man. It comes directly from General Wool. I have to deliver it tonight.\" Wool had been put out to pasture just after the riot. I didn't know that. Fortunately, neither did the butler.\n\nThe man was starting to protest. So, I said sternly, \"I just told you; friend! This must be delivered tonight!\" I added menacingly, no argument expected, \"I'll wait in his office?\" as I bulled past him. \n\nThe butler was an old man. He reluctantly stepped aside and pointed to a room that was slightly more opulent than Lincoln's. I went in, turned to him, and said peremptorily, \"Send him in as soon as he arrives!!\"\n\nThen I slammed the door and began to explore the office. O'Brien had made it big that's for sure. I didn't realize how big until I opened his bottom desk drawer and discovered a huge leather bag full of gold eagles. \n\nIt was just lying there like the money was nothing to him. It must have been O'Brien's stash of bribe money. It was a vast fortune. I dropped it in my satchel. Added to my mustering out bonus, I had a huge pile of cash. \n\nO'Brien arrived home three hours later. I was sitting in his plush leather office chair, smoking one of his expensive cheroots and enjoying his Napoleon brandy. The rest of his cheroots were lining my pocket. \n\nI heard a brash angry voice in the hallway and the butler's deferential answer. He said loudly, \"I'll be up as soon as I throw this intruder out, my dear. We still have some unfinished business tonight.\"\n\nThe implications of THAT, caused a real pang. I guess my heart wasn't as hard as I thought it was. But it DID seal the bastard's fate. He flung open the door and came striding into the room, looking like a bear with a thorn in his ass. \n\nI was sitting relaxed in his desk chair, feet on his desk, smoking his cheroot and holding a snifter of good brandy in my left hand. The thing that got his attention though, was the big Army colt that I was holding in my right.\n\nI said, \"Close the door Shamus, and sit down. We really need to catch up.\" \n\nHis eyes narrowed, his face darkened with anger and he looked like he was about to explode. I made a \"close the door\" gesture with the gun. There was something in my eyes that convinced him to do that. \n\nHe stormed over to confront me. I stared at him calmly. The thing I had lived for was about to happen. I was utterly serene. Then he recognized me. His eyes bugged out, and his face screamed his terror. \n\nHe flopped in a chair and said placatingly, \"Now, now, don't be doing anything you'll regret Pat.\"\n\nI said, \"And what would that be Shames? Do you think I'll regret killing the man who shipped me off to be slaughtered? And then, stole my wife?\"\n\nHe said smoothly, \"Now Pat, you know it was just one of those things. You hurt me, I hurt you. It's over, now. We're even. We can shake hands and go our merry way.\" That was a hoot. O'Brien was ever the Irish politician.\n\nThe premise was so absurd. I threw back my head and laughed loudly. But the gun didn't waver. I had killed good men in the war. I didn't have the slightest misgiving killing this piece of shite. \n\nI said conversationally, \"Are you going up stairs after I leave? Molly's a great fuck isn't she, Shamus? How long did you wait?\"\n\nI could see it in his eyes. But, he was STILL searching for a way out. He looked exactly like a trapped rat. \n\nHe said, trying to sound noble, \"After you left, the poor lass didn't have anybody to take care of her. I just did the Christian thing and took her in. I can't help it if she fell in love with me.\"\n\nI believed him. At heart, Molly was a simple soul. She depended on people to take care of her. I suppose she was more-than appreciative when O'Brien showed up on her doorstep. I also imagine it didn't take long for him to lure her into his bed. Molly was always a hot-blooded Irish lass.\n\nI said, \"When did you tell her I was killed?\"\n\nHe looked miserable as he said, \"After Spotsylvania. There was another Patrick Riley on the casualty list.\" He thought he saw a ray of hope. He added, \"We ALL thought it was you Pat. I was just takin' care of your widow. No hard feelings, hey?\" \n\nMy eyes told him that I knew THAT was bullshit. I said, \"When did you two marry?\"\n\nHe said, \"We were married right after that. It was in the church. So, it's legal and all. You'd been declared dead.\" I thought, \"That declaration wouldn't be hard for O'Brien to arrange through his political friends. Now, it would ensure that Molly'd be a rich woman.\" \n\nI said wearily, \"Well, that's all water over the dam Shamus. I would really like to stay and make your death long and excruciating. But I have a train to catch. So, I guess I'll just have to get down to business. Do you have any last words?\" \n\nHe said, \"Please Pat?\" He had tears in his eyes. The guy really wanted to live. But of course, he was rich, and powerful. Better yet, he had the most beautiful woman in New York City to fuck senseless every night. \n\nI understood; If I had Molly, I'd want to live too. But I didn't have her. She was O'Brien's wife now. So, it was time for him to go.\n\nIt was ironic. It only took a determined man and a gun to topple his empire. I said, \"I'll see you in hell Shamus.\" And I pulled the trigger. \n\nThe slow moving, 44-caliber slug, tore the center out of his chest. I watched it with fascination. Shamus O'Brien slumped, lifeless. I stood, and calmly packed the brandy bottle in my satchel. I put it next to the heavy bag of gold. My heart was suddenly lighter. \n\nThen, there was a frantic scrambling in the hall and the door flew open. She was standing there in a shift and long black stockings. I fondly remembered her bright red bush. She looked gorgeous and terrified. \n\nThe room was full of the haze from my cigar and the gunsmoke. She saw the big hole in the back of the chair; where her husband's head was lolling lifelessly. She put both hands over her mouth in a horrified gesture. Then she turned her panicked eyes toward me. \n\nI said with jaunty irony, \"Hello Molly my-lass. I'm back from the war. Did you miss me?\" \n\nFirst, she looked bewildered. Then her look changed to utterly aghast, as the recognition washed over her. She whispered weakly, \"But, but, you're dead??\" Then those beautiful emerald green eyes rolled up in her head and she fainted.\n\nI looked down at her voluptuous body. She was lying sprawled open legged, with nothing but a pair of thigh high silk stockings covering her nakedness. A brutal pang of regret seized me. It was so heartrendingly, powerfully disorienting, that I almost joined her passed-out on the floor. \n\nBut I could hear the old butler beginning to stir below stairs. So, instead I walked out into the night, making sure to carefully close the office door behind me. I had to get to the Jersey side before the hue and cry started. That would require stealing a rowboat. But there were plenty of watermen's boats down by the Battery. \n\nI had wanted to stay and hold her, love her and tell her that it was all right. But it wasn't. She had betrayed me, even if she had been tricked into it. She was the widow of my hated enemy now. And she would inherit O'Brien's fortune, thanks to me. \n\nI was free now. I had accomplished the thing that I'd come to do. Molly might not be able to read. But, she was canny. It would cost her the inheritance if she told the authorities that I did it. So, she had one million good reasons to make up a story about a mysterious intruder. \n\nI was the nameless ghost of the former Lieutenant Patrick Timothy Reilly. I had a pocket full of cheroots, a huge bag of gold coins and my substantial mustering out pay. I was only twenty-years old and I thought I'd try my luck out west.\n\n***** A new man emerged when I pulled that trigger. It was like dying and being reborn. Even in the depths of my despair, in all those rainy nights in Virginia, I held onto hope of resuming my old life with the woman I loved. \n\nDiscovering that, Molly had spent that entire ordeal pleasuring the man who had put me in harm's way would have killed me; literally. No wonder Blake kept his mouth shut.\n\nI knew she had been tricked into it. Molly was sweet and beautiful. But she was also simple and trusting. Her gullibility changed nothing about my present situation. The irrefutable fact was that I was on my own now.\n\nSome men might weep, some might brood. I just got harder and more pitiless. It was like all the joy of life, and my humanity, had been boiled out of me. The West was a vast space full of nothing but buffalo and Indians. It seemed like the perfect spot for a man who wanted nothing to do with humanity.\n\nI had my ear to the ground for several weeks after killing O'Brien. I was wondering if they might be comin' after me. Eventually, I learned that O'Brien's widow had told the police that she had witnessed a \"foreign looking fellow\" murder her husband and then disappear into the night. \n\nThat settled it. I would never know whether Molly protected me out of greed, or a residual sense of loyalty. But I cherished the thought that she did it for love. I was Timothy O'Hara now, a Mick who had made a lot of money in the Boston bar trade, and wanted to make a lot more in the wild west.\n\nI traveled by rail to St. Louis. It only took two days. It was an amazing example of the modern world of steam. \n\nI bought a good horse in St. Louis. It cost to get kitted out, horse saddle and saddle bags. I spent almost two-hundred of O'Brien's dollars doing it. But the horse was young, and sound and it could go all day at a reasonable clip. \n\nAfter two years in the mounted infantry I was as good a horseman as anybody, even if I was a city boy. I could also live under any tree where I could unroll a blanket. I had no idea what I was going to do, perhaps join the miners out in California. It was more a direction, than an intention. I already had an enormous stake in gold thanks to O'Brien.\n\nIt all sank in on the ride down to St. Louis. I had been numb when I left New York. But green-eyed jealousy was eating me up now. I couldn't stop visualizing Molly gasping and quivering, legs spread wide, while O'Brien pounded her. Her willingness to give her body to him utterly crushed me. \n\nI never had parents. I was brought up in the hardship of an orphanage. By the time I was seventeen, my ability with my fists was obvious to everybody. Tammany ran the police force. So, they used that. They made me a copper. Working the streets of Five Points, you quickly learn to trust nobody but yourself. \n\nI first saw Molly when I was walking my beat. She was with a group of Irish washer women. She stood out from the rest like a swan among geese. Her fiery copper hair and laughing green eyes and that perfect round figure were like a beacon calling to me. I knew that I could love and trust this woman. Our marriage was a foregone conclusion.\n\nI never had a reason to doubt her, all the time we were married. Even though, I knew about her highly sexed nature. Other men tried. But she was a devoted, loyal and supportive wife. Still, I thought that her bottomless passions might work against us. That is, if we were ever apart. \n\nO'Brien snatched her away because he could. I knew that Molly believed that I was dead. I imagine that she grieved for a while, like all the widows. But, Molly was a simple woman and she had deep urges. She loved with all her heart and she gave everything to her man. So, she gave herself to O'Brien.\n\nI knew that O'Brien's treachery was what caused her to fail me. He was a dishonest and scheming son-of-a-bitch. He was quick to take advantage of Molly; that is, as soon as he engineered my \"death.\" So, it SHOULD have been easy for me to forgive her. But I couldn't. \n\nLikewise, killing O'Brien wasn't sufficient to heal my mortal wound. The pain of loss, sat at the bottom of my soul and festered. It was fate, and there was nothing I could do about it now. Hence, I was one grim piece of work as I set off west. \n\nI was traveling on my own. I hated the world. I had no direction in mind. I just wanted to get away from my old life. Maybe I could eventually forget. ",
        "***** The Oregon trail was the acknowledged route to the Golden West. The problem was that it crossed Indian territory. And, by 1866, the Indians seriously resented our presence. \n\nI had ridden all the way through Kansas and up to Omaha by myself. Now, it just made sense to join up with one of the wagon trains. \n\nThat was largely for self-protection. Because, once-in-a-while, large groups of Indians would appear as we bumped along the rutted trail. Wagons moved a lot slower than I did. But, there was safety in numbers. \n\nThe train I joined was happy to have a skilled hand. Two years in the horse infantry had given me the tools. I was handy with a gun, and I could ride and scout. Scouting was mainly what the Rifles did in the war. \n\nHorizons are disorientingly vast out west. But, I had come a long way from the crowded streets and shanties of lower Manhattan. \n\nI was good at describing topography and the threats to the wagon master. I knew how to use pistol and rifle. I had no scruples about killing. I could ride a horse like I was born on one; even sleep on it, while it plodded along. \n\nPlus, I was used to living off the land, and in any weather. Enlisted soldiers, especially draftees weren't exactly coddled in Mr. Lincoln's Army. The cavalry had taught me all of that. \n\nI was built like a bull, strawberry-blond hair and freckles, with a long, classic Mick face, wide set blue eyes, thin nose, high cheekbones and sturdy chin; the better to take a punch. My mouth conveyed all the ironic humor and larceny of the Irish soul. I smiled a lot, but it never quite got to my eyes. \n\nThe rest of me was pure rawhide. I ate plenty. But, I exercised more. It was the nature of living on a horse. I thought it was pretty ironic that a former Five Points tough guy was scouting for wagon trains. But it also served my purposes. \n\nMainly, I didn't want to be around any other human being. Riding ahead, meant that I only had to come back to the company at night. \n\nThe Immigrant Trail basically follows the course of the Platte River through the Nebraska territory. It had been in use as an \"improved\" route for twenty years. It traversed the lands of the Sioux and Cheyenne, until you get to the Oregon territory west of Fort Laramie. \n\nBy 1866 there were a lot of splits; which mostly led to the gold mining towns that were popping up in Colorado and Nevada. My job was to scout along each of them, to see where the best trail and terrain was. \n\nI had found a young couple I could stand. Or perhaps more accurately, who could stand being around me. They let me unroll my blanket under their wagon. I also put an Army issue gum blanket underneath my bedroll. That way I was completely out of the elements when I slept.\n\nThe fellows name was Ezekiel, or Zeke. He hadn't been in the war. I had. So, it seemed like he was a kid, even though he was actually a couple of years older. He was one of about a dozen children of an Ohio farmer. His old man had given him a Conestoga wagon and sent him west with his blessing. That made one less mouth to feed at home. \n\nHis wife was a good German girl. She was blond with a pretty face. She had one of those aggressive bodies, all tits and hips. It seemed to beg to be fucked. Most nights I would lie under the wagon while the two of them banged around above me. Molly was vocal. But this girl could wake up the buffalo.\n\nShe was also the reason why I left the train. The trail crossed a lot of rivers, which we either had to ford, or take a ferry to get over. In fact, there were so many rivers that the ferries were big business back then. We were waiting for the Green river to calm down. The Green is a main tributary of the Colorado and it can be a bitch to cross. It was fordable, in all the usual places. But the spring rains had made it too deep for a Conestoga. \n\nI had just gotten back from a trip to the other side of the river, and I told the wagon boss that we could make it tomorrow. It was past bed-time for the settlers and I was beat. So, I unrolled my blankets, rested my head on my saddle bags, and laid my trusty Army Colt by my side. I never wanted to let those bags out of my sight. They were my future. \n\nI had a Henry rifle. But, I also had a Hawken. That was for long range work. The Hawken cost me a chunk of O'Brien's fortune. It was a muzzle loader, not a repeater. But it was deadly in my hands, even out to 600 yards. They were always in a scabbard on my saddle. \n\nI was getting to be a real hand with the .44. That was my weapon of choice. I practiced a lot, just for the price of the powder. The Colt didn't use rim-fire cartridges, like the Henry, so the rounds were cheap. I got so good that I could pull and nail a prairie dog, coyote, or rattlesnake in one smooth motion. I could do the same thing to a man if I had to.\n\nSometime in the middle of the night I had to piss, so I wandered off into a nearby buffalo wallow. I was just giving it the last couple of shakes, when a pair of arms circled me, and I felt huge, naked, pillow-tits pressed into my back. \n\nI nearly jumped out of my skin. There were plenty of savages who'd slip a knife into you for no other reason than you were handy. I turned like lightning and there was Gretchen. She stepped back, startled. \n\nI looked into her cornflower blue eyes and they were full of lust. I didn't think twice. I had had some women since Molly. Generally, they were prostitutes. But I DID bed a couple of Indian maidens. The Indians don't have the Puritan hang-ups of the white girls. So, they were an adventure, even if they smelled like bear- grease. But, I had to go back three and a half years to remember what a really superb body looked like. \n\nI have found that the women you fuck are a lot more appreciative if you behave like a gentleman. So, I said, \"Please dear lady,\" and gestured toward the nearby prairie grass, which the bison had matted into a nice soft bed. \n\nShe lay back looking like she couldn't wait. She had been wearing a flannel nightgown, which she had shucked before she approached me. That revealed an exceptional pair of tits. They were so big and full that, now; whenever I see a pair of ripe, luscious watermelons, I think; \"Buffalo Wallow!!\" \n\nGretchen had a surprisingly narrow waist and big, solid, round hips. Her legs were a little too sturdy for my taste. But, I wasn't marrying her, I was fucking her. \n\nThere were no preliminaries with this girl. As soon as I knelt between her widely spread legs, she grabbed me and shoved me into her red-hot love-nest. She let out an unearthly groan and rocked her hips up to take me to the hilt. Her insides were churning like the ocean. \n\nShe grabbed her own knees and we started that age-old motion. She was making loud, \"Ugh! Ugh! Unnnnhhhh! Unnnnhhhh!\" noises and gripping me with those strong legs. I looked into her face and she was totally lost in her passion. \n\nThen she commenced vocalizing, \"Ahhhh!! Ahhhhhhh!! Ahhhhhhhhhh!\" and she started to writhe in a fit. Even Molly couldn't match her convulsing and twitching. I just continued on my merry way pounding her. I had yet to get my own satisfaction. \n\nBy this point she was scratching and clawing like a wildcat, making a keening animal noise and pounding back at me in response. Finally, she made a loud grunt and began to flop like she had lost control of her body. Her insides literally fizzed. Her eyes were wide open, and she actually looked frightened. \n\nI came at that point. So, I was too busy to keep track of what was going on with her. But I have to say that the build-up from a three-year layoff might have contributed to her excessive frenzy. \n\nAfterward, I looked at her lying there. It was like she had been knocked out. Finally, she opened her eyes and wordlessly removed me from herself. It made a sucking noise. \n\nShe stood and without a word donned her modest cotton nightgown and walked back into the dark toward the wagon. Barely a word had been exchanged in all that time we were together. \n\nThat was perhaps the strangest bout of sex I had ever had. We fucked almost every night after that. Gretchen was an amazing piece of ass, wild as the prairie wind. But except for those moments of pure unadulterated sex, we acted like we didn't know each other. \n\nThe wagon train had finally gotten down to Rawlins. Chappie Clayton, who was the boss of the train, greeted me as I rode in from a scouting expedition. We were a little way in front of the train itself. He said, \"You've been a good scout Tim. So, I'm going to give you fair warning. A few of the boys are going to kill you if you go back to the wagons.\" \n\nHe didn't need to tell me why. I'd been rumbled. I didn't know what was happening to Gretchen. But she wasn't my problem. She had started things. I figured that a girl with her kind of abilities would probably influence her husband into believing whatever story she had concocted.\n\nWithout a word I tipped my hat, turned my horse and said, \"Thanks for the warning Chappie.\" Then I headed off toward the Yellowstone Country. \n\n***** I spent the next couple of months backtracking up the Yellowstone River. I had no desire to tackle the mountains to the west. And I had had enough of the society of the wagon trains. The Great Plains were awful; far too dry at times, and too wet in others, too hot and too windy and the horizon was infinite. I loved the beauty of the area along the Yellowstone. \n\nBut the leaves were turning, and winter was coming. I needed a place to wait it out. They had struck gold along Grasshopper Creek, north of the Yellowstone. I had all the gold I would ever need. But someone had established a town along the Bozeman trail that was ideally suited to service the frenzied pack of would-be miners; headed for the gold fields in western Montana. \n\nThe town itself was pretty-rough. It was five years old and it had every conceivable kind of person in it; from cowboys, to cardsharps, to tenderfoot easterners, to businessmen, and even some foreigners, who were there to hunt and fish. It sounded like just the place for a Mick named Timothy O'Hara. I wanted to see what opportunities a Paddy could find in a booming cattle town like Bozeman. So, I decided to make my way up there. \n\nThere were plenty of Indians in the Yellowstone. They were no worry to me. By that time, I had their sign-language and could speak some Cheyenne. They were decent people if you left them alone. \n\nThey had their warrior societies, like the Dog Soldiers. You had to steer clear of them. But I'd been out in the wild long enough that I knew all the rules of the wilderness. I would even occasionally go into one of their villages to trade for pemmican, or a little black powder.\n\nIt was at one of those villages that I first saw Anovoo'o. That is a Northern Cheyenne word that means, \"Girl Beautiful.\" It was a perfect description. \n\nTo me, Cheyenne women come in two varieties. Most of them are moon faced, with high cheekbones, almost oriental eyes and a prominent nose. Or, they have longer, oval faces. Combined with the same high cheekbones and eyes, those types of faces can be exotically, heart-stoppingly beautiful. \n\nAnovoo took that precept to the absolute limit. She had a stunningly beautiful face with satin skin. Combined with a wide sensuous mouth, her odd, very light skinned coloring, and her perfectly proportioned features, gave her an almost unreal aesthetic attraction. \n\nHer body was lean and pantherish with full and ample boobs on a long-waisted, long legged frame. To me, she was even more beautiful than Molly.\n\nThe first time I saw her, I just stopped and gawked. I asked the man I was trading with, \"Who's that?\" He spoke decent English. But he used a Cheyenne word that meant \"undesirable,\" or sometimes, \"unclean.\" \n\nI said, \"She's beautiful. Why would you call her that?\" My friend said, \"She is not one of us. Her father was a white man.\" \n\nI understood what he was saying. A white man meant that, as stunning as she was Anovoo'o was not a full-blooded Cheyenne. They had accepted her into the tribe. But It must have been very difficult for a lovely young girl to grow up with the stigma of white blood. \n\nI finished my transaction, packed the pemmican in my saddle bags and departed the village. On the way out, I locked eyes with the woman. She was pounding clothes in the river. She gave me a glance that was equal parts wretchedness and despair. \n\nI nearly fell off the horse. Her eyes were bright blue! No wonder she had a hard time fitting in, I almost stopped to talk to her. But I realized that would violate every social convention in the Cheyenne culture; and probably get me called-out and shot by her husband, or father. So, I rode on.\n\nSeveral days later I was working my way up the Gallatin toward where I heard Bozeman was located. It was a beautiful fall day in the high country. All the colors were out, and the air was crisp. There was a V of geese flying overhead and the hint of winter was in the air. I had just started along the river bank trail, when I heard a commotion across the river. It was in a red and yellow leafed grove of trees to my right. \n\nThe struggle was followed by a muffled cry of anguish. It was a woman's scream. I hastily galloped across the shallow river and directly into a stand of cottonwoods. \n\nThere were three people there. The first two were scruffy looking cowboys. The third was a woman with her hands tied in front of her, being led by a long rope. She was wailing and crying, and her two captors were laughing at her. \n\nThey stopped laughing when the shot hit the ground in front of them. Their horses screamed and reared in panic. The cowboys spent a little time calming them down. Then they both faced me angrily. \n\nI said in a voice as calm as death, \"Where are you two going with that woman, fellas?\"\n\nThe first of them snarled, \"None of your business,\" and pulled out a Remington. \n\nThe thing about gunfighting is that you have to kill without thinking. People like this guy had never seriously shot at a man before. So, his brain ruled his aim, not his hand. He fired two wild shots before I got one off. Both of his missed me. Mine blew his head to pieces. \n\nThe one who had been leading the girl dropped the rope and spurred his horse in a desperate effort to escape. He knew that judgement day was nigh. \n\nThe problem was that witnesses can be inconvenient. And he made the mistake of riding in a straight line. I took a second to sight the Hawken. It was no different than the sighting I did when I was sharpshooting. \n\nThe guy was only 300 or so yards away. It was an easy task for the Hawken to administer the death sentence. The birds and animals would take care of the rest. \n\nThe girl had collapsed on the ground in a weeping pile of deerskin. She had clearly been taken captive by those two. They were leading her back to their lair for a little fun. That is, before they killed her. After all, she WAS just an Indian. \n\nA lot of the high-plains trash consider Indian women fair game. The crazy part is that they never understand why the Indians were hostile. \n\nI dismounted and walked over to the woman, trying to look as non-threatening as possible; even though I probably seemed like Satan in buckskins. I had no idea how to handle a crying female. In fact, I'd rather deal with a diamondback rattler. But this one was my concern, now.\n\nI squatted down next to her and said, \"It's okay little lady. You're safe. Those two scoundrels have gone to their maker. All I want to do is get you back to your people.\" \n\nShe stopped crying for a second and looked at me. The eyes in her pathetic little face were a stunning shade of bright blue. It struck me like a thunderbolt. This pitifully crying bundle was the woman from the village!!! \n\nI began to sign that I was a friend. She said resignedly, \"I speak English.\" Of course, she would. Her daddy must have been a trapper, or trader. \n\nI said, \"Where are your people? I can return you to them.\" \n\nShe was beginning to get her composure back. The speed of her recovery was miraculous; since, she had to know what was in store for her if I hadn't come along. It showed a lot of personal strength. \n\nShe said resignedly, \"They don't want me. I was digging roots when those two captured me. It wasn't THAT far from the village. Nobody even came after me. I'm all alone now!!!\" And she went back to weeping.\n\nWell, that made two of us. We were both outcast for reasons beyond our control. So, we were going to have to face the world alone together. \n\nShe was beginning to shiver as she wept. It was part from shock, and part from the cold. I retrieved my blanket from the back of the saddle. I brought it back and wrapped it around her. She looked at me gratefully. Her eyes were astonishingly beautiful, and deeply intelligent.\n\nI made an instant decision. It was partly out of charity. But it was also partly because I felt an inexplicable affinity for this woman. There was just this incredible sense of attraction. It was more than I had ever felt for anybody, even Molly. She compelled me. \n\nIt might have been her incandescent beauty. It might have been her obvious intelligence. She spoke excellent English and she radiated determination and strength. It might have been her courage. Most women facing rape, torture and death would be in hysterics. This woman was crying. But, she was still in control of herself. \n\nI said tentatively, \"You aren't alone. I'll take care of you until you can find your way back to your tribe.\" Her look of sheer relief and gratitude told me how she felt about that. \n\nBoth of her captor's horses had run off. So, all I had was my horse. I didn't want to tire it. Hence, I walked and Anovoo'o rode. Like all Cheyenne, she rode astride; as if she was part of the horse. She was wearing a lovely soft deerskin dress with intricate beading and feathering and sturdy moccasins. \n\nThe dress hugged her fabulously nubile body. It also put the lie to any misconceptions about the Cheyenne being savages. It wasn't an item of clothing. It was a work of art, fitting to be displayed in any museum in the world. \n\nI asked her if she knew where her tribe was. She said that she was a member of Black Kettle's band and that they sometimes drifted south for the winter. That was all she knew. There is a lot of empty space out west. So, that didn't help at all. \n\nI said, \"How did you get separated?\" \n\nShe said, \"I was digging camas in a field on the other side of the river. I was by myself, because none of the other women would work with me.\" Camas was a root that was a staple in the Cheyenne diet. But, it was harder to find at this time of the year. \n\nShe added, \"They must have been hidden in the tree line. They rode up to me, grabbed me and threw me over a saddle. I struggled but it was futile. \n\nThey traveled all day. I think they wanted to get as far away from my village as possible. They tied me up last night. But they didn't touch me. Today, they led me with a rope. One of them stopped to make water. I tried to break away then and that's when you rode up.\"\n\nI said, \"So your Band may be miles away?\" She nodded glumly.\n\nThe solution was obvious. I said, \"You are welcome to come with me. I am going to a town called Bozeman. I intend to winter there. You are welcome to stay with me. Then in the spring we can find your Band.\" \n\nShe recognized the salvation I was offering. She said in a voice dripping with gratitude, \"I'm a hard worker. You will never regret taking me in.\"\n\nWe camped the first night near a little creek. I had been following the Gallatin because it led directly into Bozeman. Neither of us talked much. We were both solitary people, for our own good reasons. But the bond between us was so intense it was almost tangible. \n\nI had never felt a greater sense of well-being in my life, even with Molly. It was like this woman, Anovoo'o, completed me. I was whole again. ",
        "She was contemplating me across the fire. Her eyes were shining. Those eyes and her beautiful face took my breath away. She was light skinned for an Indian. Of course, the Caucasian blood, which she was so ashamed of, would have some influence there. \n\nHer eyes were huge with long thick eye-lashes. The intense blue was probably the result of her mixed heritage. But I have never seen anything like them before, or since. Her hair was thick and soft. She wore it in a pigtail, which extended to her butt. \n\nShe was probably younger than me. But, it was hard to tell. The Cheyenne don't use calendars. She had a beautifully proportioned body, full where it ought to be, and lithe in all the other places. Everything about the way she walked reminded me of the perfect symmetry and balance of the big mountain cats. \n\nI said, \"What are you thinking about?\" \n\nShe said, \"I was just thinking how noble and handsome you look.\"\n\nI laughed heartily and said, \"You don't have to flatter me. I'll take care of you anyhow.\"\n\nShe got an angry look and said, \"I will always be honest with you. I will work hard for you. You will never regret my being your woman.\" \n\nWell, there it was. She was declaring herself my woman. What that meant to a Cheyenne was that I would feed and protect her. In return she would serve me with her life. If sex was involved, it was just part of the service.\n\nI had fucked, whores, other Indians and of course the inimitable Mrs. Schmidt. So why didn't I fuck Anovoo'o on the spot? It was because her situation was totally different. I felt a deep-seated tenderness toward her, and that feeling scared me to death. In less than twenty-four hours, this girl had worked her way past all my defenses, and was now deeply embedded in my heart. \n\nI have no idea how a female, who was born and raised in an Indian tribe, and a Paddy from the wildest reaches of lower Manhattan, could bond with each other like we did. But I felt closer to Anovoo'o than I had ever been with Molly. If you want to call it love at first sight, then so be it. \n\nTherefore, a lot more than sex was involved. If we got together, it could only be for love. I had loved just one woman, Molly, and that had ended very badly. I lost her to fate and an evil man. The last thing I wanted to do was tempt the gods by falling in love with a refugee from an alien culture. That was my instinct. But the attraction was there, and we could both sense it. \n\nI put all those vacillating thoughts behind me as I tried to go to sleep. It got colder as the night progressed. She was wrapped in my blanket, teeth chattering. But, she wasn't complaining. I was freezing to death lying on my gum-rubber blanket without covering. I thought, \"This is stupid,\" and patted the ground next to me.\n\nShe eagerly scrambled over, molded herself to me, pulled the blanket over us and sighed with contentment. Then she fell asleep. I was left with a supple body pressed against me, hard round buns pushed into my rapidly rising interest and my right hand draped over one full, round breast. \n\nHer breathing quickened and she snuggled closer. Of course, that made me harder than an iron bar. We were fully dressed. But my bulge was finding its way between those two delectable globes. Anovoo'o moaned and began to pant. \n\nThis was getting ridiculous. I really didn't want to follow through with what was about to happen. But it was getting inevitable. So, with a final exercise of will, I rolled around so that we were back to back. She emitted a loud whimper of complaint. Eventually the panting and moaning died down. \n\nHowever, In the middle of the night I had to go over behind a beech tree and relieve my distress. \n\nShe was bathing naked in the river when I woke up. I later discovered that Anovoo'o bathed daily. She was singing a happy little song as she scrubbed herself. She carefully rubbed her bounty of raven hair with a bouquet of lavender that she had picked. That explained why it was so silky, and smelled so nice.\n\nThe washing took a while because her hair was very thick, and it hung down to her butt. She had her back to me. I marveled at her long sleek legs and those two jutting round buns. Then she turned. \n\nIt was an astonishing sight. Her body was perfection. She had high round breasts. They didn't look particularly large with her dress on. But they were so broad and full that they covered most of her chest. Her big brown nipples were standing out in rigid points because of the cold river water. \n\nShe looked delighted. She said, \"You woke up.\" She started to walk toward me, dripping, unashamed and just perfectly gorgeous. The Indians do not have white-man's hang-ups about their bodies. So, she was splendidly natural, without the slightest embarrassment. \n\nShe walked past me and bent at the waist to pick up her dress. The vision of that incredible tight ass and the lips that lay between it was not helping my state of mind. I thought to myself, \"Lord give me strength.\"\n\nWe breakfast on the supplies I had bought in her village. But, I quickly learned the value of Anovoo'o' s heritage. I shot a rabbit early in the day's trek. I left Anovoo'o at our evening campsite while I tied up, fed and groomed the horse. We needed to take very good care of that animal. It made the travel so much easier. Since, it carried all our supplies, and of course, Anovoo'o. \n\nAnovoo'o was nowhere to be seen when I came back. I began to panic. Then I detected the mouthwatering smell of something cooking in a low stand of poplars. I sauntered over with an amused smile on my face. She was squatting down tending to our supper. \n\nShe gave me a delighted look and said, \"Good, you're back. I just finished getting our campsite ready.\"\n\nI had only been gone for forty-five minutes. In that time Anovoo'o had gathered firewood, started a fire, skinned and begun cooking the rabbit, dug up some camas to accompany our meal, and laid a fresh layer of leaves and branches next to the fire, as a soft foundation, for our blankets. \n\nHer eye for terrain was excellent. We were completely hidden from everybody. So, we were safe. But we were also above the surrounding ground levels in case it rained. I thought to myself, \"Every other woman I know would have just sat there and waited for ME to do all of that.\"\n\nAnovoo'o, made our lives pleasant and comfortable for the entire trip. Both of us were private people. So, we didn't talk much. But we could sense the intense attraction we had for each other. \n\nWe filled in our history as we walked. She told me about her life. She had been part of the Band of Black Kettle, who was a well-known Cheyenne pragmatist and peacemaker, even after half of his Band was massacred at Sand Creek. \n\nAnovoo'o had missed out on that party, only because she had been visiting her half-brother on the Crow reservation. Her dad got around. \n\nThe White blood would normally have made life in any tribe difficult. But she said that. Black Kettle was different. He had taken her in when all the other Bands refused her. He was very kind to her. And she loved him like a father.\n\nShe told me that Black Kettle was much more of a diplomat than a war leader, preferring negotiations over military action. But the White-Man was making relentless efforts to force the Cheyenne onto a dry, and arid reservation, far away from the buffalo. \n\nSince buffalo were the Cheyenne's life's blood, it had driven her Band further and further south. That was what they were doing when she had been captured. \n\nAnovoo'o knew nothing of world events. She only knew the simple world of her village. I might have been like she was, if I hadn't been dragged off to war. But since I'd \"seen the elephant,\" I knew that we were both part of a shift in the realities of the west. That change would eventually extinguish every aspect of traditional Cheyenne life and culture.\n\n***** Bozeman is in a high-plain between a number of tall mountain ranges. Most of those mountains had gold in them. Hence, Bozeman was a jumping off place for every grizzled prospector, tenderfoot miner, and shifty speculator. \n\nOnce I arrived I saw that it was also an ideal spot to settle down and make a little money. O'Brien's gold was going to be put to good use here. \n\nBozeman had been laid out five years prior to our arrival, and it had a reputation as a wild and lawless place, especially, since they started pushing herds along the Bozeman trail . \n\nEvery cow town attracts its share of rascals, ne'er-do-wells, gunslingers and bad actors. But, Bozeman was also the key to controlling the Yellowstone territory. So, the Army set up Fort Ellis, three miles out of town. The aim of the Fort was to get the whole region under the Army's control. \n\nI walked around the grounds of the new Fort looking for opportunities. There were infantry and five companies of the Second Cavalry garrisoned there. The Second had incorporated my old unit after the war. And, I thought I might know some of the boys. \n\nI was walking across the parade ground when I heard an elated, \"Pat!!!\" I didn't realize that voice was talking to me, since my name had been \"Tim\" for the past three years. Then, a burly soldier grabbed me by the arm. \n\nHe looked keen. I was gobsmacked. I said, \"John!! John Blake, how the hell are you lad??!\" \n\nI am not a person who likes to socialize. In fact, I go out of my way to avoid talking to people. But Blake was a good fella and he had been a pal during the war. So, we did a little catching up standing there. \n\nHe had the same problem that I had. He got home to discover that his wife Nelly had come down with the fever and died. That was no more than a week before he got out. \n\nHe said the sense of injustice and loss nearly killed him and he figured that he had nothing else to live for. So, he decided to stay in the Army. At least it was a square meal and a job. He was a sergeant now.\n\nHe said, \"Did you hear that Shamus O'Brien was killed right there in his own house. It was a Russian anarchist that done the deed. I lit a candle at Assumption Church for him.\" I could tell from the tone of Blake's voice that the anarchist was the guy he was memorializing, not O'Brien.\n\nBlake added puzzled, \"They gave all his money to his wife, Molly O'Brien. It's funny, I thought she was YOUR wife?\" \n\nI threw my arm around his shoulder and said conspiratorially, \"She still is me bucco. But I'm officially dead. I've done a whole lot better with the new one. She makes Molly look like a Dublin fishmonger.\"\n\nWe parted. But Blake had given me an idea. He had told me that there were no sutlers at the fort. I had a big bag of cash to buy victuals and other sundries. All I had to do was get Colonel Brackett to let me sell to his men and I could double O'Brien's stake. A little gold might have to change hands. But I knew I could do it. \n\nI was mulling that over as I rode back to find Anovoo'o. I thought I could buy a Conestoga from one of the immigrants. Some turned back when they saw how high the mountains were, or just settled down where they were. \n\nI could, stock it with all kinds of tempting things and wheel it up to the gates of the fort. I'd been a soldier. I knew what would sell to horse cavalry troopers.\n\nMy only problem would be getting the things to sell. But there was regular river traffic up-and-down the Yellowstone and I could ship things in on the steam boat Far West. That was the paddle wheeler that brought in goods for the Army. \n\nMeanwhile, Anovoo'o was visiting the Cheyenne encampment. The Indians were congregated around the Fort, hoping that the Army would protect them from the local White settlers. The settlers were looking for any excuse to exterminate the Cheyenne; because they viewed them as \"foreign.\" \n\nThe Army was no better than the settlers in terms of attitude. They saw all Indians as belligerents. But the politics back in Washington dictated that the Army do its duty. \n\nHence, there was an uneasy truce between the Indians and the soldiers. That was mainly based on each side acting like the other didn't exist. \n\nI wanted a home base. I had lost any illusions about life the instant I saw O'Brien and Molly together. It's easier to just drift if you have gold in your saddle bag. But eventually the money would run out. So, it was time to think about the future and Bozeman seemed like as good a place as any. \n\nAnovoo'o had managed to plant a small seed of optimism. We had finally made love. And it was as spiritually uplifting as I had imagined it would be. So, I had a glimmer of hope now.\n\nIt happened as we made our way north. And it was natural and spontaneous. I had shot a buffalo, which was no feat of marksmanship. Since, there were about 700 of them just standing around in a herd. it would have been harder to miss.\n\nThen, in a single half-day Anovoo'o turned the creature info tasty provisions, useful implements and a waterproof sleeping blanket. She did that using nothing more than my Bowie knife. \n\nSo, we were no longer sleeping in a blanket that smelled of horse. The following week I added a black bear to our bag. Thanks to Anovoo'o' s skills our nightly bed was now as grand as the ones at the Astor. \n\nEven though the frost had begun to appear, and it was snowing in the higher elevations, it was toasty luxuriating under all those animal skins. In fact, it was so warm that we began sleeping in the nude. \n\nThe first night was all it took. There was no ludicrous wavering. We just fucked like animals.\n\nAnovoo'o has a particularly nubile rump. Most Indian women have muscular butts. They work hard from sunup to sundown. But there was something in Anovoo's heritage that turned her ass into a perfectly round little work of art. \n\nLooking at her in profile you could see her substantial breasts and her jutting buns, and she looked like the letter p joined at the bottom to the top of the letter d. So, the instant the smooth naked skin of her two solid globes pressed against my front, I sprang an erection for the ages. And I found myself almost instantly knocking at her door. \n\nShe could feel it. Because she gave a desperate cry of long-suppressed need and shoved herself back so hard that I was instantly buried to the hilt in the hottest wettest two centimeters of heaven on this earth. \n\nShe groaned and said something in Cheyenne extended her arms over her head in front of her and began to shove back frantically. I thrust forward, and we coupled like that for a couple of minutes, just totally out of control. Then I needed to see what she was thinking. \n\nI said, \"Wait, wait, wait.\" She stopped trembling like she thought she'd done something wrong. \n\nI said, \"Roll on your back. I want to look in your eyes.\" She instantly moved onto her back and I climbed between her widely spread thighs. I was amazed by how hard her body was. I had never touched a woman who was so thoroughly solid. \n\nThe fire highlighted the planes of her beautiful oval face, her high cheekbones, and her little pointed chin, with her exquisite lips. Her huge eyes were compelling me, overflowing with emotion. \n\nYou could see her profound reaction to the sensation as I slid back into her. But she was imploring me. She wanted to be totally committed to somebody. That was the bond we were sealing.\n\nShe must have spent her life utterly alone. Her odd blue eyes would mark her as different. And no matter how beautiful and accomplished she was, she could never be completely accepted by the people around her. \n\nShe must have tried hard to fit in; done all the things that a Cheyenne woman could do in order to please the members of her tribe. She must have worked harder than the rest, been more attentive to her elders obedient and responsive to the men in her life. But there was always that sense of not quite being Cheyenne enough. \n\nI understood what she was feeling. In everybody else's mind I was Irish scum. I saw it in the way they treated me. To the nativists and toffs, I was a drunk, and a trouble maker, lazy and shiftless, no matter how sober I was and how hard I worked. \n\nThey were more-than happy to use my muscle to keep themselves safe. But they didn't want me in their neighborhoods, or saloons. Guys like O'Brien made it big. But they weren't going to be getting any invitations to the Vanderbilt's Fancy Dress Ball. So, I knew what senseless bias felt like. \n\nAnovoo's soul was wide open to me and I felt nothing but tenderness and caring. I sensed her eagerness to please just one man. And I instinctively knew I could trust this woman with my heart. \n\nShe might be from an entirely different world, with a completely different set of life experiences. But we were fundamentally the same person. She would always be my other half and she would never betray me. \n\nAll of that came in a flash of insight. Just as, her eyes clouded and then rolled slowly up into her head. Anovoo'o was brought up in a culture that worshiped nature. She was not constrained by the Puritan limitations of western morality. So, she had none of its inhibitions. She expressed her sexuality naturally. And she was driven by two atavistic needs; to please me, and to please herself.\n\nAs soon as I entered her she threw her head back and gave a wild shriek. Her hips came up to meet me. Then she wrapped her strong legs around me. She wanted to hold me as deep inside her as she could. \n\nShe was lost in her passion now, absolutely driven by her need. She was moving her hips in tight little circles, rotating me within her tightly clenched passage, making crooning, \"Hungh, Hungh, Uhhhh, Uhhhh!\" effort noises. \n\nIn all that time she had me locked motionless between her muscular thighs. It was clear that Anovoo'o was on a mission and she was going to do all the work herself. She knew what she wanted, and she wasn't going to stop her insane movements until she got to her goal. That happened almost immediately. \n\nHer eyes flew wide with surprise. Like she hadn't expected it to happen so soon and she yelled something unintelligible in Cheyenne. Then she bent her body into a bow and began to quiver all over. Every muscle in her body was locked rigid. While she was doing that her eyes were staring at me with an indescribable complexity of passion. It was almost worshipful.\n\nWhen her insides began to calm, she nimbly reversed our position. Now, she was looking down at me with the same adoring look on her face. She was doing everything she could to get me to the finish. Her hips were a blur of activity as she rocked back and forth, making little sounds of pleasure. \n\nThen she began to move up and down. The sensation of her hotness and tightness, rising and falling, was indescribable. \n\nShe has very broad and full breasts that sit solidly on her rib-cage. They are so meaty that her bouncing caused them to move en-masse, without flopping. I took one of her big brown nipples in my mouth and bit lightly. The shriek came from the depths of her soul, her insides went crazy and she began to writhe once more, fingers gripping my shoulders in a total frenzy. \n\nThat pushed me over the edge and the two of us howled our passion to the starry mountain sky. She flopped senseless next to me. I gazed off into the infinite cosmos trying to get my sanity back, staring at the bare branches of the poplar tree that formed our love nest. \n\nAfter a short while I turned on my side, propped my head on my arm, and looked down at her. She was panting like she had run a very long distance. I was equally winded. But I said the thing that I knew was true, \"I love you Anovoo'o, I will love you forever. We will die in each other's arms. Promise me that.\" \n\nShe looked at me just as lovingly and said, \"I've been searching for you my whole life. I finally found you. I will bear your children and take care of you. I will never leave your side.\" \n\nSo, the Paddy and the Indian maiden were joined forever under the brilliant stars of the high plains. It was as binding a vow as any that had ever been exchanged in front of the Pope. And the surrounding mountains, the scrub pine, and the infinite sky were a much grander stage than St. Peter's.",
        "***** We wintered in the Cheyenne village. That was because, I was NOT interested in staying in Bozeman itself. That was motivated by an incident that occurred the day after we arrived. \n\nThe Cheyenne had no problem putting the two of us up for the night. Hospitality to strangers is part of their culture. But, we needed another horse and so Anovoo'o and I went into town to buy one. \n\nThey had a livery stable that was really just a lean-to shed and a corral. They kept a herd of horses there. Most of them had come up on the cattle drives as spares. I found a likely looking chestnut. It was big and sound and on the respectable side of young. I walked in to see what the man wanted for it. \n\nHe was an older fellow, just sitting there on a barrel. He was holding forth to two other guys who looked like they might be sons. All of them were dirty, unshaven and grubby. I said, \"How much for the chestnut?\" \n\nThe man looked at Anovoo'o with pure contempt and said, \"Get that squaw out of here. We don't allow savages in this place of business.\" \n\nMy Irish temper went through the roof. But I needed a horse. So, I looked around skeptically at the collection of boards, that he called a \"business,\" and said mildly, \"I'll give you fifty dollars gold for it, saddle and all.\" \n\nThe guy got off the barrel, both of the other guys came up next to him. He said, \"We don't sell to Indians, or Indian lovers.\" \n\nI took the bag of gold pieces that I had brought with me and said, \"Good, then we have a deal,\" and tossed it at him.\" He instinctively grabbed it. The sale was complete. So, I hit him with a hard left-hook to his stomach. \n\nHe emitted a loud, \"Ooooooof!!!\" As he doubled over, I brought an uppercut off the floor. It caught him full on the point of his chin. I heard a satisfying crack and he literally flipped backwards. He lay there looking dead. But then, I imagine a creature that primitive was never very conscious.\n\nThe other two just stood there looking astonished. I pulled out my .44 and said, \"Now which one of you fellas wants to write me up the bill of sale?\" They could see that I would have gladly shot both of them. So, they were more than eager to get me out of the place. \n\nI was even happier to put that town behind me. I didn't need anybody in my life but Anovoo'o. So, parting from that collection of ignorant, low-life scum was no hardship.\n\nI bought some canvas at the Fort and a few of the Cheyenne helped set up a tepee. Anovoo'o proceeded to make it into a warm and comfortable habitation for the winter. The snow had come, and we were quickly a part of life in that village. \n\nFor the first time in four years I was happy and contented, living with the woman I loved. Anovoo'o pampered me in the same dedicated and dutiful way that every Indian woman takes care of her man, and our regular bouts of sex were extraordinary. \n\nAnovoo'o's physical beauty made us the talk of the Cheyenne encampment. As a result, a warrior would occasionally drop by to ask me how much I wanted for her. \n\nIt was laughable really. The Indians didn't have the slightest concept of western tenets about marriage and adultery. In fact, it was considered simple hospitality to offer an overnight visitor your wife. \n\nI never feared losing Anovoo'o. First, she was devoted to me and I was devoted to her. So, whatever the cultural norms, we were exclusively bonded to each other. In fact, Anovoo'o got very uneasy if I left her alone. \n\nI think that was a consequence of her bleak life growing up. She was terrified that I would leave her for a white woman. Of course, that was totally preposterous. Anovoo'o was the sweetest, most intelligent and best-looking woman I had ever known, white, red, or any other color of the rainbow. \n\nSo, we were rarely apart. But I DO recall an incident that winter. It served to reinforce her absolute commitment to me. \n\nI had gone into town to finish buying a Conestoga and team. As I arrived back, I saw Anovoo'o and a Brave having a heated discussion. I didn't have to understand Cheyenne to recognize what was going on. \n\nHe had tried to do what was common in that village, which was spend a winter's afternoon fucking her. She, on the other hand, was trying to stick my Bowie knife in him. I arrived just as she was reaching for the Sharps. \n\nThe poor guy just wanted to let bygones-be-bygones. I explained that to her. She was still wild with rage. She spluttered, \"He tried to have sex with me!! I told him I was your woman and that you were the only one who had the right to my body. He accused me of adopting White-Man's ways.\"\n\nShe chambered a round in the Sharps and said, \"I told him that I didn't care about White-Men, or Indians. I was going to kill him!!!\" My response was to laugh as I relieved her of the weapon. \n\nAnovoo'o was still spluttering like an angry wildcat. She looked so brave and feisty that I wanted to fuck her right there in front of the tepee. I waved to the guy to get lost. He took off running. Then I steered my intrepid and beautiful wife into our home and helped her work out her anger issues. That was in a number of interesting positions. In fact, getting her riled up nearly killed ME. The woman had boundless passion and amazing stamina. \n\nColonel Brackett and a few of his boys finally came over to discuss the incident at the corral. I presented the bill of sale, which showed that I'd paid a fair price for the horse. I told him that the man had insulted my wife so what else did he expect? I mentioned my service with the Mounted Rifles. Then, I offered him a hundred of O'Brien's gold eagles to let me set up a sutler's business at the Fort. \n\nThe Colonel decided that I was indeed a credit to the Second Cavalry, while he discreetly took my little bag of coins under advisement. Now all I had to do was arrange the rest of the enterprise. Nothing was ever heard of my friends from the livery. Maybe it was because I told them I'd kill them if I ever saw them again. And they knew I meant it.\n\nThe Great Northern had a spur down to Bismarck and the Far West hauled supplies from there up the Yellowstone to Fort Ellis. So, it was a matter of making the right connections in Chicago and Minneapolis and I was in business.\n\nThe only dark cloud on our horizon was the news that in the prior November, Custer had caught Black Kettle's village on the banks of the Washita River in Indian Territory. He'd used cannon and his entire regiment to wipe out all 250 of its residents. \n\nI'd never served under Custer, thank God!!! He didn't care what happened to the rest of his command, as long as he got good mentions in the newspaper. But all of us knew that he was a vainglorious fool. So, what he'd done wasn't a surprise. His \"victory\" made him a big hero in Bozeman and Billings. The Cheyenne just dealt with the news stoically. They didn't expect mercy at that point. \n\nNaturally, Anovoo'o was devastated; even though it had happened months earlier and miles away, Black Kettle had been like a father to her. \n\nFor three days, she did all of the Indian mourning rituals. She daubed her face with red paint and ashes, fasted and sang funerary songs as she rocked back and forth in a little tepee, which she had built to signify her grief. She sacrificed to the Great Spirit at sunrise, and sunset each day. \n\nI didn't comment or try to interfere, nor did any of the other Cheyenne. They understood that this was personal between Anovoo'o, her father, and the Great Spirit. She emerged after three days looking haggard. \n\nShe slept for almost a day and a half after that. Then she quickly returned to her devoted self. It was as if she had made her peace with Black Kettle's spirit and was ready to move on. She had confirmed that her father was in a better place. In many ways it was reminiscent of the way we Irish see off our dead.\n\n***** By 1876, my sutler business was paying off handsomely. I had built an actual commissary inside Fort Ellis and we had another set up at Fort Parker. \n\nThe proceeds from that business let me construct a big, sturdy, log house on 300 acres of land, which I had bought on Pitcher Creek. It was, about ten miles due east of the Fort, toward the Yellowstone. I wasn't going to farm that land. I just wanted a lot of distance between us and our neighbors.\n\nI needed the space because, in those short eight years the love of my life had already produced a healthy and hearty boy and two beautiful, and spirited girls. We baptized them at the little Catholic church, which had sprung up in Livingston, down by where the Great West docked. There were a lot Irish moving west and a bunch of them worked for me in the sutler's business. \n\nFather McCarthy married us. I wanted to make sure that my fortune went to my partner and helpmate. That is, if anything untimely befell me. A small fee persuaded him that the marriage of a White man and an Indian woman was acceptable in God's eyes. \n\nThe fact that he had hesitations convinced ME that he hadn't read the bible. John 7:24, and Galatians 3:28, are more than clear about what God thinks about skin color. \n\nWe gave our children Christian names. But of course, each of them also had a spirit animal and name granted by the Cheyenne priest of Maheo. We didn't want to lose their ties to that culture either.\n\nAnovoo'o was a devoted mother and a superb wife. She made it her duty to satisfy my every need. She denied me nothing. Every night, her exquisite body was mine to explore. More importantly her wisdom and guidance was the rock that our family was founded on. \n\nHer beauty was legendary in the area. So, we had occasional visitors. I wasn't as stupid as some of those guys thought. I knew that they were there to confirm the stories, and maybe try their luck with the sutler's wife. But then again, Anovoo'o was also very smart. She used her exceptional looks and charm to help us expand our business.\n\nIt wasn't like she didn't know what was going on. Indian women learn about men very early in life; and unlike Molly, she never had any illusions about the male mind. Anovoo'o was hospitable to all of them. But she never allowed the slightest impropriety. \n\nShe adroitly avoided every circumstance where she would have to draw the line. I didn't have to say a word about that. The awareness and decision was solely my wife's. And, with one notable exception, I never had a reason to get my Irish up.\n\nHowever, there was a particularly persistent fella. This guy wouldn't leave her alone. Sutton was an Indian Agent from back east. He was a \"college man,\" with all the arrogance and condescension that implies. \n\nHe thought that Anovoo'o, being a Cheyenne, and me being an ignorant Mick; we should be honored to have him lavish his attention on her. Needless to say, he was a pest. \n\nThen, when Anovoo'o wouldn't give him the time of day, he got aggressive. He had stopped by to supposedly discuss us setting up a post at the Crow reservation. That would be a nice piece of business for us. So, he got the royal welcome. \n\nHe must have mistaken our hospitality for permission to try-it-on with Anovoo'o. Maybe the other sutlers did business that way. But, not us. \n\nIt was early evening. He had been with us for almost a half day. I noticed that he couldn't take his eyes off Anovoo'o as she bustled around preparing dinner. But a lot of men did that. So, I didn't give it a second thought. That is, until I came back from our storehouse with some samples of our goods.\n\nI found Anovoo'o squawking and struggling in the fellow's arms. She turned to me and said indignantly, \"He tried to KISS me!!!\" \n\nI looked at Sutton. He glared contempt at me and said, \"What's the matter with THAT? She's just an Indian?\" \n\nI don't get in fights much, anymore. But it doesn't mean that I don't still enjoy a little light exercise then the opportunity arises. I took the fellow out into the stable and \"vigorously reasoned with him about his transgressions.\" He was crying and begging for mercy at the end. \n\nI told him, \"I'm going to be talking to General Gibbon tomorrow. And he isn't going to like what I'm going to say about you. So, get on that horse. I never want to see you again. If I do, I'll kill you.\" We put the man on his horse and he clip-clopped away, woozy and bleeding. \n\nI talked to Gibbon like I said I would. He was at Fort Ellis, mustering troops for an expedition that the Army had in mind that summer. \n\nBy 1876, I was a reasonably influential member of the community. So, the day after my talk, Sutton found himself on a train headed back east. We got the commissary contract without a problem and all was well. But NOW I owed Gibbon a big favor. \n\nThat debt led to the adventure of a lifetime.\n\n***** It was a hot and rainy June day when I decided to ride over to see why a shipment I was expecting hadn't arrived. I followed the Yellowstone looking for the Far West and found it sitting at Rosebud Creek. It didn't seem to be grounded there, like it occasionally was. Then I spotted a lot of horses and uniforms on the other bank. \n\nI knew Grant Marsh well. He was the Captain and Pilot of the Far West, and a very smart guy. We had been doing business for almost four years. But his main source of income was the Army. And, it looked like he was hosting a gathering of military brass on his ship. \n\nI saw Gibbon. I'd already given him some of my premium Virginia tobacco, as thanks for his help with Agent Sutton. He had been at Petersburg with us. And his Corps was the one that captured Fort Gregg. But he had always had higher command. So, I didn't have a feel for him as a military man. \n\nBut, I certainly knew the other fella. That was George Armstrong Custer. His friends called him, \"Autie.\" The only thing that kept the rest of us from calling him a conceited clown, was his notable success in battle; nurtured by his relationship with the press. \n\nMostly, his fame was due to his willingness to risk other men's lives, as well as an incredible amount of \"Custer's luck.\" He wasted a lot of good soldiers and nobody wanted to be posted to his brigade. \n\nThat was because, throughout the war Custer would charge, where anybody with common sense would wait for reinforcements. The Rebs nearly caught him at Trevilian Station. But Custer always escaped and with all his rash actions he, personally, never got a scratch. \n\nI knew a lot of officers Like Custer. They were all brought up on florid Victorian tales about knights errant. And they ALL thought that they were the hero of the story. He sported long flowing locks. \n\nThroughout the war he wore a gaudy velvet uniform; which, he had designed himself. It looked more like something out of a comic opera, rather than real military dress. But that was Autie Custer. \n\nHe was laughing and carrying-on with his superiors, like he was one of them. But the fact was that \"General\" Custer was actually, \"Lieutenant Colonel Custer,\" Commander of the Seventh Cavalry. \n\nThe third man was the real person in charge. That was Alfred Terry. He had been down in the Carolinas for most of the war. But, I had heard he was a steady and reliable hand. He must have just loved being saddled with Custer. The one thing I was sure was that he wouldn't let Autie get far out of his reach.\n\nI asked Marsh what was going on. He was leaning on the rail next to the pilot house, calmly smoking his pipe and surveying the hubbub on the deck below. He told me that the Sioux had been causing trouble in the Big Horn territory and the Army had decided to settle them once and for all.\n\nThey were going to send three powerful columns to trap the Indians and use force if necessary to get them back on the reservation. He said that George Crook's column was somewhere down the Rosebud. But, that Gibbon and Terry were meeting on the Far West to coordinate their efforts. \n\nI gestured toward Autie. He was tricked out in a set of shiny new buckskins, which made him look like a store-bought version of Kit Carson. I said, \"What about Custer?\" \n\nMarsh said, \"He's doing the scouting for Terry. His cavalry can move faster than the infantry columns.\" \n\nI said, \"You mean they're going to let him go off on his own? They ought to send Gibbon and the Second Cavalry with him. At least Gibbon understands the situation.\" \n\nMarsh said, \"You know Custer. He wants the glory. He has Mitch Boyer and the Ree and Crow scouts to guide him. He won't get into any trouble. \n\nI asked Marsh about my shipment. He said it was on-board and he would drop it at the Livingston docks once he dropped the Army shipment at the Big Horn confluence with the Yellowstone. He promised me no later than a week. \n\nThat was satisfactory. So, I bade him farewell. As I was starting down the boarding plank I heard a voice call, \"You!! Riley!!! Can I speak with you for a minute?\" I turned, and it was John Gibbon. \n\nI knew that I owed him a favor, and I wasn't going to ignore the most important military man in the entire Montana Territory. So, of course I scurried back up the plank. \n\nJohn Gibbon was a no-nonsense kind of guy. Unlike the rest of us he wore his hair cut short. But, he DID have the bushiest mustache I had ever beheld. He said, \"You know this territory, don't you?\"\n\nI said, \"Of course, my wife's Cheyenne, and I've been trading at Fort Ellis and Fort Parker, and on the Sioux and Crow reservations for the past five years. Why do you ask?\"\n\nGibbon looked at me shrewdly, and said, \"I want you to go on a little errand. It will pay back the favor I did for you with Sutton. I'm sending Custer off up the Rosebud to meet up with Crook. He has plenty of Indian scouts with him. But he's a reckless idiot. So, I want a trustworthy hand to go along with him and help him understand what he's getting into.\"\n\nHe saw what I was thinking and hastily added, \"Custer's only job is to chase the hostiles toward Terry and me. The infantry and Gatlings will do the fighting. There's no risk. And, if you do that for me, then I'LL be in YOUR debt.\"\n\nI knew what he was offering. Every Fort in the Montana territory would be mine for the plucking. I thought about it. Anovoo was expecting me back tomorrow, which was the 24th of June. I asked Gibbon, \"How long do you want me with him?\"\n\nGibbon considered for a second and said, \"We're going to join back up with him on the 25th, or no later than the 26th. So, three days would be sufficient.\" \n\nThat wasn't a lot of time for such a big reward. I thought some more. There were a bunch of Indians lounging on the river bank. One of them looked to be a Crow in his teens. Anovoo'o speaks Crow so I told Gibbon, \"I'm all yours, if I can get that boy down there to take a message to my wife.\"\n\nThe kid was a son of one of the Crow scouts. Both spoke some English. I handed him a note for Anovoo'o and a gold piece, which overpaid him. But, I wanted the message delivered. \n\nCuster wouldn't leave until he had paraded the entire 7th Cavalry past the Generals. Like I said, he was a show-off. Then all 600 of us headed off down the Rosebud whistling Garryowen; while Terry and Gibbon took their infantry in the direction of the Big Horn.\n\nGibbon had made sure that Custer knew who I was. He had told Custer to listen to me. So of course, I was shunted to the back of the column; riding with the rest of the people Custer didn't want to listen to. I didn't care since I was going to make a lot of money, by just going on a simple three-day jaunt. \n\nI rode with a pale-eyed killer named Benteen and Myles Keogh, who was truly Irish. Both hated Custer with a passion that was only rivaled by Custer's second in command Marcus Reno. Naturally, like most self-important fools, Custer had his acolytes. Yates, Weir, Calhoun and his brother Tom all rode in a little adoring pack around him. He even had a guy named Kellogg, who was his own pet newspaper reporter. \n\nI hadn't been with that outfit for more than a half day and I could see that we would be in real trouble if we got into a fight. Because half the command structure wanted Custer dead. ",
        "So naturally, trouble found us. \n\nThe scouts rode in bright and early the next day to report a big Indian encampment in the next river basin west, which was the valley of the Little Big Horn. Moving there was completely counter to what Terry had told Custer to do. Custer had been ordered to scout the Rosebud, not chase off after reports of hostiles in another river valley. \n\nIf Custer had done what Terry told him, he would have eventually run into Crook. Things would have been different if he had. But that wasn't Autie's style. He smelled glory. So, he took off headed west. \n\nAll that day we worked our way over hill and dale, looking for Indians. It was extremely hot and dry in the arid high-plains and most of us were ready to drop. \n\nI was thinking that Gibbon owed me a BIG favor for all the grief. It was a total waste of my time. Custer never acknowledged me. So, I was useless to him. And his sycophants spent most of their time looking thoroughly amused whenever I said anything.\n\nBoyer was friendly. Of course, we knew each other from all the time we had spent in that neck of the woods. He said that Custer was determined to do the same thing to the village that we were chasing, as he had done to Black Kettle; meaning total annihilation. \n\nThe night of the 24th, we camped southeast of the Little Big Horn Valley while Custer and the scouts surveyed the situation. He came back full of himself. \n\nThere was a big village sitting on the river. And, it looked like it might contain the entire Sioux Nation. If Custer had thought about what that implied, he might have been with us today. But thinking wasn't Autie's strong suit.\n\nAfter dinner, the Officers had a little confab. I joined them just to see what was going on. All of Custer's little gang wanted to attack the next morning. They were afraid that the Indians would get away if they didn't. \n\nI said, \"Didn't Terry order you to push the Indians toward him, not attack them by yourself?\" Reno and Benteen were nodding their heads vigorously in agreement.\n\nThe entire clan turned hostile eyes toward me. Custer said with condescension, \"We've finally got them where we want them and I'm not going to let them slip through our fingers. Terry's too slow and cautious. They'll get away If we wait for him.\" His little claque all nodded agreement.\n\nWhat Custer was really saying was that he wanted all of the glory for himself. I heard him mutter under his breath, \"If we polish them off tomorrow I'll still have time to announce my victory at the Centennial Exposition in Philadelphia.\" \n\nSo that was it. He was hurrying things along because he wanted to kick off his political career at America's 100-year anniversary celebration. We were attacking tomorrow because Custer needed to hop a train , in order to get back East on time.\n\nMy Irish temper flared. I said, \"This isn't the Washita Autie. There aren't going to be old men, women and children down there. There are going to be Sioux and Cheyenne warriors, the best they've got. And there's gonna be a whole lot of them.\" \n\nHe and his gang laughed contemptuously. He said, \"Indians won't stand up to cavalry. The minute they see us they're going to turn tail and run. I'm more worried about the redskins gettin' away, than I am about any of them fightin' us.\"\n\nThen he got a shrewd look and said conspiratorially, \"That's why we're going to grab their women and children first. They'll come back and fight if we have their families.\" \n\nI thought to myself, \"This guy's totally clueless. His only concept of Indian fighting is wiping out defenseless villages. Going after Ogallala, Hunkpapa, or Brule families, is going to make their warriors nuts.\"\n\nI said, \"You've never seen Lakota Aki'cita, or Cheyenne dog soldiers in action. I have. They're born on a horse and brave beyond reckoning. If we threaten their women and children, they won't stop until we're all dead.\"\n\nCuster laughed again and said, \"Well, if you're scared you can ride out of here any time you want.\"\n\nThat put me in a difficult spot. I'd endured this clown and his delusions for two days. That time would all be wasted, if I wasn't with him, when we joined up with Gibbon. \n\nI didn't like the idea of attacking my wife's people. But, I thought maybe I could convince Custer to be a little more humane afterward. That was a really stupid assumption; as the next day proved.\n\nJust after sun-up, I was riding with Myles Keogh. I liked Keogh. He was my kind of Irishman. He was handsome and charismatic, with a glint in his eye for the ladies and that classic Irish sense of humor.\n\nHe was wearing the medals that the Pope had given him for his services in the Vatican's Army. That happened prior to his coming over to serve in our Army. His men loved him. \n\nCuster had split his command in two. He sent Reno's 300 troopers to attack a huge collection of tepees in a bend in the river about three miles in front of us. I could see the village in the distance, in the early morning heat haze. It was laid out in neat circles. There were so many tepees that it looked like New York City. I had my first sense of foreboding. But I rode along anyhow. \n\nCuster took five companies up into the hills and ridges across the river. Keogh's company was in that section. It was a bright and sunny Sunday morning and getting hot. The choking dust from our movements was oppressive and it was hard to see much in front of us, as the long line of horsemen rode along the ridge-line of the bluffs. \n\nCuster's rashness motivated some men. But most of his command, including his senior officers, didn't trust him. So, a disquieting number of troopers were dismounted and leading their seemingly exhausted horses as the column passed. \n\nI'd seen that trick a lot during the war. I'd even pulled it once myself, at Cold Harbor. It's a handy way to avoid a fight, when you don't have any confidence in the people in charge. In the end, those fellows were the lucky ones., They eventually joined up with Reno, and lived. \n\nThe heat was so oppressive that Custer had taken off his buckskin shirt. And he was acting crazy. He kept yelling to W. W. Cooke, his aide-de-camp, that he, \"Finally, had those savages.\" Then he would spur ahead excited. My foreboding increased. This guy was not taking any of the danger seriously.\n\nDown below, it looked like Reno had launched his charge. There was a seething mass of Indian warriors streaming out of the village. The last thing I saw as we rode up the bluffs and around a promontory, was that the line of Indians, who clearly outnumbered Reno's forces three, or four to one, were beginning to lap around his flanks. \n\nAt which point, Reno appeared to dismount his men to form a skirmish line. That was not what Custer had planned. Reno was supposed to drive right through the Indians and directly into the village. It would provide the necessary anvil for Custer's hammer. It was obvious that Autie had way underestimated the number and determination of the warriors in that encampment. \n\nI could hear the firing from Reno's group as we moved along on the bluffs. So far, we were undetected. Keough, who was an experienced hand yelled, \"Reno's in trouble. We ought to double back to help him.\" But, Custer ignored him. Autie was a man on a mission. \n\nHis objective was to keep the Indians from running away. He would do that by threatening their women. The problem was that, the only running that the Indians were doing was TOWARD the fight. Nevertheless, with all evidence to the contrary, Custer pressed on. The sounds of the firing faded behind us. \n\nWe had gone a couple of miles further, when we came to a coulee that allowed access straight down into the middle of the encampment. Custer had clearly planned to attack from the far end of the village, to drive the Indians back toward Reno. But, It, was a much bigger village than he had expected. \n\nBe that as it may, he started the charge down the Coulee, anyhow; right into the middle of the village. I wasn't involved because Custer had split his command again, and I was sitting up on the bluffs with Keogh, who was commanding the second group. A few warriors met Custer at the river and the charge stopped right there. \n\nI still don't know why they stopped; and then retreated up the bluff to our right. It looked like somebody shot both Custer and his guidon bearer right off their horses. That might have been the reason, Custer made a big splash, as he hit the water. Then a bunch of his men ran to retrieve him. They left the guidon bearer where he fell.\n\nThe other reason might be that Custer saw the huge force of Indians who were running along the river bank and through the village. They appeared to have disposed of Reno and were returning now to confront him. Whatever the reason, the charge stopped right there, and none of the participants lived to say why. \n\nI was still calm. It seemed like we had things under control. There were nearly 250 well-armed and well-trained cavalrymen around me. Custer was moving toward our right, up the bluffs in the direction of the ridge line. Keogh urged his unit in that direction as well. \n\nWe were clearly going to dig-in on the bluffs and let the Indians throw themselves on our rapid firing Springfield '73 repeaters. But the Indians were coming on so fast that we didn't have the time to consolidate into one defensive position. \n\nWe might have survived. If we had been able to get all our soldiers onto one hill, like Reno did. But Custer had signed his own death warrant when he divided his force again. So, Custer's group; Smith, Yates and Tom Custer were on one promontory. Keogh and Calhoun were on another; perhaps 100 yards away. \n\nMost of Tom Custer's troop was with Keogh, since Tom was with his brother. So, we dug in with Calhoun's L and Tom Custer's C troop forming a skirmish line to our front. Keogh's I troop was behind with the horses. Cavalry tactics dictate that every fourth man hold the horses of the other three men. So, Keogh's group was bigger than the thin blue line in front of us. \n\nThe Indians were swarming like bees. But, we should have been able to make short work of them if we had had a clear field of fire. The problem was that, the bluff had all sorts of ravines and crevices and the warriors were working their way through them like they do when they're hunting buffalo. They were invisible until they popped up at the last second to shoot us at point-blank range. \n\nEven worse, the Springfield's were starting to jam, like they always did when they got hot. So, the volume of our fire was not what it should be. Worse, the Indians appeared to be using Sharps and Henry's, which were both longer ranged, and more rapid fire than ours. \n\nThe skirmish line under \"Handsome Jim\" Calhoun fired a couple of hefty volleys. He had promised Custer, who was his brother-in-law, that he wouldn't let him down. He didn't. Calhoun's fight was the only organized resistance on that day. The rest was just soldiers taking individual pot shots through the enveloping haze of black powder gunsmoke. \n\nThe skirmishers were overwhelmed before they could get a third volley off. There were just too many warriors and they simply overran our boys. There was a frenzy of shooting, stabbing and hatcheting. Then the Indians turned their attention to the last of us. \n\nEverybody in the circle around Keogh was banging away except me. I wasn't armed, and I had no desire to shoot at those people, even to save my own life. They were just reacting to an unprovoked attack on their village. Everybody knew that. Nobody expected any mercy.\n\nThe troopers had shot enough of the horses that they had formed a breastwork of sorts. Most of the troopers hunkered down behind the dead horses. Time had slowed, and I was oddly at peace, I knew that I was going to die. But I had led a good life with a wonderful woman and she would be well-set-up in my absence. Sooner or later we all pass-on. \n\nThere was a final rattle of gunfire and a gang of figures appeared out of the powder smoke. The Indians were rolling up our flank from our right, which was in Custer's direction. The soldiers around me all turned and fled, trying to mount as they did. \n\nI didn't see who fired the shot. But I felt an intense pain in my right shoulder and everything went black. My last words were \"Anovoo'o.\"\n\n***** I awoke to a familiar voice yelling something in Cheyenne. There was still chaos all around me. There was a terrible pain in my shoulder. But I was alive. I was lying on the grass, where I fell.\n\nSomebody was standing protectively over my body. It was a woman and she would occasionally shout a fierce warning to anybody who approached us. \n\nThe firing had diminished to occasional shots. All that you could hear were the cries of the wounded and the occasional \"Hoon!!\" When a Sioux makes that noise, somebody dies. \n\nI heard Anovoo's voice say in English, \"Lie still my love. The warriors are beginning to calm-down and leave. We'll get you help as soon as they do.\"\n\nI was confused. The last thing I remembered, was being in a gunfight with what seemed like all the Indians in the world. The next thing I knew, I was with my cherished wife. I had no idea what had happened and what she was doing there. \n\nIt was pretty easy to guess that Custer and all of his men were dead. But why was I still alive and where did Anovoo'o come from? \n\nShe was wearing her beautiful deerskin dress, instead of the fashionable linen dresses she normally wore. I instinctively understood that she had put that dress on, because she wanted the Indians to understand that she was one of them. It allowed freedom of movement among them. \n\nA couple of Indians appeared. I was expecting them to finish me off. Anovoo'o seemed to be asking them about the situation. \n\nWhatever they said was apparently satisfactory because Anovoo'o said something in return and they both hunkered down with rifles, like they were guarding us. I was astonished to see that it was the kid, who I had paid to take the note to Anovoo'o, and his father.\n\nAnovoo'o tore open my shirt and began to examine my wound. It hurt but it was not bleeding badly. Apparently, there was no serious damage. She reached into a pouch and began to dress it with ground willow leaves, moss and long strips of carefully softened deer-hide. She had used those things in the past and it worked wonders on wounds. Suddenly I felt much better.\n\nAs she worked she explained that she had gotten my note. Every Cheyenne in the Montana Territory knew that the annual sun-dance was held in the Big Horn country. All of the tribes would be there; since, their sun-dance is like the Christian Easter. So, she also knew that I was riding directly into a deadly-dangerous state of affairs. \n\nShe assumed that sooner or later I would get to the big encampment. Otherwise there would be no problem. So, she hired the two Braves to ride with her, up the Little Big Horn. Riding hard, they covered the almost 90 miles between our home and where we were situated, in two days. \n\nThey arrived just as the fight started. Without hesitation, Anovoo'o rode through the village, jumped off her horse at the river, and ran up the bluff with the attacking warriors, directly into the cavalry guns. It was the most steadfast act of raw courage and personal loyalty I had ever heard of.\n\nHer heroism saved my life. It was obvious who was going to win the fight at that point. So, she rushed to find me before the mopping up started. The warriors were walking around shooting any wounded troopers. And the Indian women were busily killing and mutilating the ones the braves didn't shoot. \n\nCuster had indeed, kicked over the hornet's nest, and the Indians were wild with anger. I would have been the target of that rage, if it weren't for my valiant wife. She stood over my body like a mother grizzly, protecting her cubs. \n\nAnovoo'o had an Arkansas Toothpick strapped at her supple waist, and one of Mr. Colt's new .45s in each hand. She would chase off any Brave who came near us; yelling threats in Cheyenne, Sioux and Arapaho.\n\nThe entire fight, from river to aftermath, took no more than an hour. Abruptly, the place was still as death. All of the warriors had moved off upstream, to where there was a lot of gunfire. That must have been Reno. \n\nThere were only a few of the women left, chatting like they were doing the wash and busily stripping the dead troopers. Anovoo'o and her escort got me on a horse. There were plenty of the cavalry horses still standing around. Then we rode off to the east, out of that valley of death, and looped around north toward home. Nobody paid us any attention.\n\nI asked Anovoo'o what had EVER motivated her to do such a crazy thing. I said, \"You had no real idea where I was and what was going to happen. As far as you knew, I might ride in tomorrow and wonder where you'd gotten off to.\"\n\nShe looked at me with her intelligent blue eyes and said, \"Would you do the same thing for me?\" \n\nShe was right, of course. I said, \"If I thought you were in danger I would ride, walk, or crawl through any imaginable hazard to get to you. But how did you know I was at risk? And how did you find me?\"\n\nShe said, \"Your note said that you were going down the Rosebud with Custer. I knew he'd find this encampment. It's our chief gathering of the year. It didn't take a fortune teller to see that, THAT would be the outcome if Custer attacked it.\" And she swept her hand back in the direction of the massacre. \n\nShe looked at me with absolute certainty and said, \"So I KNEW you were in danger.\" \n\nShe added blithely, \"I also knew that you might have left Custer before anything happened. But you're a man of our word and pig-headed, stubborn as a mule. So, I figured I'd find you exactly where you were.\"\n\nI said, still puzzled, \"But I was with two-hundred-and-fifty other men.\"\n\nShe said, like I was being silly, \"You think I wouldn't recognize my man? I saw you up there before I even got to the river. You were the only person on the ridge dressed in a top hat and frock coat.\" She laughed gaily and added, \"You didn't look very military.\"\n\nShe was right. I had been wearing my business attire when I went off on Custer's little jaunt. I probably stood out like a peacock among chickens.\n\nShe added lightly, \"Of course, getting to you was a problem, what-with all the shooting, and it got foggy with the gunsmoke. But I knew where you were, and I wasn't going to stop until I got to you.\"\n\nShe added grimly, \"I didn't have to guess what my people would do to every soldier up there. And I wasn't going to let that happen to you.\" \n\nI thought to myself, \"THAT, is what my woman is capable of. And THAT is what true love and devotion looks like.\"\n\nWe rode home, just the two of us. That was the way it had always been. And it is the way it will always be; a man and a woman living a life together, both unselfishly caring for the other at any cost. \n\nIt didn't matter a whit that we'd come from two different worlds. What mattered was that we loved each other in this one. And a deep and abiding love between two people, is the recipe for a happy life.\n\nEPILOGUE\n\nSo THAT, my friends, was how I became the sole survivor of the fight that the dime novels call, \"Custer's Last Stand.\" \n\nNobody else lived to record my survival, and I wasn't going to enlighten anybody. My only aim was to live a quiet, private life with the woman I loved. The LAST thing I wanted was to be deluged by people wanting me to, \"Tell my story.\" \n\nThe world has changed since 1876. \n\nThe plains Indians are all gone. We've fought much bigger wars. Paved roads and train tracks have replaced the rutted wagon trails. Lucky Lindy has flown all the way from New York City to Paris, France. And, I rode down from Billings, to the Greasy Grass, in one of those newfangled automobiles. It only took a few hours. ",
        "I found Keogh's marker. It indicated the spot where he fell. Keogh himself is buried out east. It was exactly where I recalled it, since I was standing next to him when I was wounded. I still feel it, even at age eighty-six. \n\nThere's a much more grandiose marker over on, \"Last Stand Hill.\" It's next to where Custer was found. I was pretty sure he'd like that. \n\nI remembered where the big village was. Looking down the bluff toward the Crow reservation, I could still visualize it there. \n\nThe weather in the fading light was hot and dry, just like it had been on that momentous day. The shrieks of the Indians, the shouts and cries of the dying troopers and the crash of the guns still echo up there; at least, for an old man. \n\nIt was quiet as death on that bluff, just the wind. It was getting dark. I turned and walked slowly down the back of the hill, to where my grandson's automobile was parked. \n\nThe only people left in the dirt parking area were my grandson and his wife. It was the spot where the Seventh Cavalry held its horses fifty-four years earlier. \n\nMy beloved Anovoo'o passed away a couple of weeks ago. She died an honored and cherished matriarch of a big and important family. It was what we built together. \n\nNow it's my turn.\n\nI just wanted one last visit to this place, to commemorate our eternal love. As the Indians say, \"Today is a good day to die.\" And I have no desire to live without her. I have no fear of my body turning into spirit. My only desire is to come to her, like she came to me, on that fateful day at the Greasy Grass. "
    ],
    "authorname": "dtiverson",
    "tags": [
        "literotica writers go west story",
        "loving wife",
        "western"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/bad-day-at-the-greasy-grass"
}