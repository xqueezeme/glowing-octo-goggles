{
    "title": "Happy Birthday to Me!",
    "pages": [
        "The Usual Disclaimer: This is a work of fantasy. All characters featured in sexual situations are over 18. The characters in these stories are fictional. Any resemblance to actual persons living, dead or undead is purely coincidental. Do not try this at home.\n\nThis story was written specifically for \"Mike\" as a birthday present. I only put this onto the site at his request, since he felt that many of you would share his enjoyment of this fantasy.\n\n* * * * * \n\nI thought my brother-in-law was exaggerating when he had called to warn me. \"Mike, I appreciate you and Cathy offering to help,\" he'd said. \"I just have to warn you, man. Tamara is trouble with a capital T. I love her to death, but that girl is a walking nuke when it comes to men. I'm just worried how having my daughter at your place will affect your marriage.\"\n\n\"We'll be fine,\" I had chuckled.\n\nI really had no clue what lay in store for me and my wife.\n\nNow I was in the airport with my wife, waiting in the baggage claim area, and I was glad I was sitting down. There was Tamara, riding down the escalator surrounded by five guys. I heard her breathy giggle before I looked her way, and I sucked in my breath. Ho-lee shit. She looked like the hottest stripper-slash-pornstar imaginable, and those guys were glaring at each other as they jockeyed for her attention.\n\nI shook my head and realized my brother-in-law had not exaggerated. If anything, he had understated his daughter's impact on men; she was TROUBLE in all-caps, not just a capital T. She wasn't even scantily clad, and she was drawing that kind of attention. Her massive tits were glaringly obvious, even with a bra and blouse, and her jeans emphasized the perfect curves of her hips and thighs. I felt my dick stirring in my boxers and realized my mouth was hanging open. Fortunately, my wife was closer to Tamara and was looking that direction so she didn't notice my reaction.\n\n\"Oh, good lord,\" she murmured, shaking her head. When she looked at me, I gave her a little frown and shook my own head.\n\nWe hadn't seen Tamara in six or seven years. The gangly young teenager we had pictured bore almost no resemblance to the sizzling fuck-doll that was now bearing down on us. As soon as I stood up, it was obvious all five of those younger guys were sizing me up. Damn. They looked like they were ready to start some shit right there in the airport, and they couldn't have met my niece more than a couple hours earlier.\n\nThis is going to suck, I thought.\n\nClever woman that my wife is, she put on a happy face and laughed, walking right up to Tamara. \"Look at you!\" she said, shaking her head. \"I can't believe you're already sixteen years old.\"\n\nFive sets of eyeballs shot open, and those guys scattered like a flock of startled pigeons.\n\n\"Oh, Aunt Cathy,\" Tamara laughed, hugging my wife, \"you're hilarious.\"\n\nIn fact, Tamara was already twenty-one. She was legally old enough to drink and to take as much dick as she wanted. She licked her lips and looked at me over my wife's shoulder. It didn't look like it was a calculated move, like she was flirting with me or anything like that, but it was arousing nonetheless.\n\nAs soon as my wife released her, she scooted around Cathy and spread her arms wide, giving me an eyeful of her jaw-dropping cleavage before hugging me. Her breasts felt as incredible as they looked, mashed against my chest. Tamara's hair and faint perfume smelled too good to ignore, and I held my hips back from her carefully to keep my hardening cock from poking into her.\n\n\"Uncle Mike,\" she breathed right into my neck. \"It's been so long. How are you?\"\n\nRock fucking hard, I thought to myself, even though I wasn't quite. Out loud, I said, \"Just fine, Tamara. It's so good to see you again.\" Then I released her and stepped back, carefully keeping my eyes on her face. I gave her a serious expression. \"I hope staying with us helps keep you out of trouble.\"\n\n* * *\n\nTrouble had followed our sexy-as-fuck niece around like a constant shadow the past couple years, and now I understood why. The police had to be called in three times to break up violent confrontations at my wife's sister's house. All three times it was fights between Tamara's would-be boyfriends. She had finally been arrested and charged with instigating a riot for wearing a bikini top to the mall. Tamara was given probation, and the judge had threatened to place her under house arrest if there was another incident.\n\nWhen I had heard about it, I thought it sounded completely ridiculous. Now that I saw her in person, I understood why the police had felt the need to take her into custody. I couldn't help but picture her in a bikini top, and had to quickly squelch that thought before I got a full-blown erection.\n\nI turned and led the way over to the baggage claim carousel, chewing the inside of my cheek as my mind worked frantically to figure out how I would deal with this new situation. I was replaying the recent phone calls with my brother-in-law in my head and understood his concern clearly. He had held back, unable to describe his daughter's physical impact without sounding like a lecher. That was understandable, but now the rest of those conversations\u2014the part he had been able to share\u2014did nothing to put my mind at ease.\n\nWithout saying it in so many words, he had let me know Tamara loved having sex. All the time. And I was bringing this sexpot into my home.\n\nI also understood now why Tamara's parents had enrolled her in online college courses. Shit, I had seriously considered taking her to the college where I taught part-time. I had to shake my head at that thought. How fucking na\u00efve had I been? I suddenly felt like that character in a horror movie, the guy who is full of bravado saying, \"Yeah, yeah, I hear you. Scary monster in the woods.\" Then he craps his pants when he actually sees the monster.\n\nI tried not to stare at the monster tits lurking in my niece's blouse when she slid by me at the luggage carousel.\n\nInstead, I tried to focus on her face. That wasn't very much better. She was gorgeous, with slightly pronounced lips that looked like they were made to suck cock. She had slightly curly red hair, and I'm a sucker for redheads. My wife knows it is a weakness of mine, which is why she dyes her hair that color. When Tamara abruptly turned and bent over in front of me to grab her first suitcase, I knew I was a dead man. Oh my god, what a perfect ass!\n\nI managed to tear my eyes away immediately, and looked over at my wife. She had seen me, and was looking right at me. I expected her to be upset, but instead she looked amused. She just smiled and shook her head slightly. I picked up the suitcase and took the second one from Tamara when it arrived. The entire way out to the car and all the way home I was dreading what she would say.\n\nI tried to focus on the road and had to pay close attention once we hit the turnpike. As always, there were assholes who felt the need to make the drive challenging. It was a relief to hit our exit and yet I was getting more anxious by the second as we approached our house. I got Tamara's bags out of the trunk and did my best not to flinch when my wife patted me on the cheek.\n\n\"Relax, honey,\" she murmured quietly. \"I'm not mad. You did your best not to stare, and I know it was hard for you.\"\n\n\"Um, thanks,\" I gulped. I still expected her to change her mind and chew me out at some point, but that never happened.\n\n* * *\n\nWhat did happen was that Tamara went into the bathroom right after we got inside, and came back out with her bra in her hand just a minute later. She sighed happily and spoke to my wife. \"That feels so much better. I swear, I hate wearing these things.\"\n\nFuck! Just shoot me now!\n\nI turned to my wife and shook my head helplessly. She actually snorted trying to contain her laugh. I took Tamara's suitcases into the guest room we had prepared for her, leaving it up to Cathy to give her the tour of the house. While they were doing that, I retreated to my home office and checked my e-mail. I had some work stuff there, which was good. It meant that I could work from home\u2014barricading myself in this room if I needed to.\n\nI gave an involuntary little jump in my office chair when the door opened behind me. \n\n\"This is Mike's home office,\" Cathy said. I swiveled in my seat and kept my eyes carefully on their faces as I smiled at them. I was relieved that I actually had work stuff up on my screen at the time. I often look at porn or read dirty stories in my home office, which doesn't go over well with my wife. Tamara looked around the room briefly.\n\nI felt like I should try to have a normal conversation with them, so I pointed out the wi-fi router. \"We have pretty good internet service here,\" I said. \"This is the wi-fi. When you're ready to use your laptop or your phone, just let me know and I'll type in the password for you. It's a really long, gibberish thing my work computer generated. It's a pain in the ass, but my job makes me use it to work from home. They send me some sensitive information, so they have to be careful.\"\n\nTamara was looking right at me, nodding as I explained it to her. It took all my self-control to keep my eyes locked on hers when she nodded\u2014her massive tits bobbed up and down with every movement. Even out of my peripheral vision her hard nipples were obvious where they poked out the front of her blouse. Then she looked up at the ceiling and chewed her lip thoughtfully for a second. When she did, she turned her torso from side so side and her magnificent breasts swayed hypnotically. My eyes shot over to my wife's face, and she was also biting her lip, struggling not to laugh.\n\nI let my shoulders sag and gave her my best, \"Oh, come on!\" look. Her amused grin and the way her abdomen flexed as she silently laughed at my discomfiture did nothing to help me.\n\nTamara abruptly looked back down at my face and she smiled. \"Why don't I grab my laptop and have you set that up right now, while I'm thinking about it?\" she asked. I nodded, and she turned and scampered out of the room. There was nothing I could do; my eyes took in her bobbing breasts as she turned, and then that fabulous ass when she hurried out the door. I swallowed heavily and looked at my wife again. She busted up laughing.\n\n\"I'm glad you think this is funny,\" I growled, shaking my head.\n\n\"Would you rather I was mad at you?\" she asked, still smiling at me.\n\n\"No,\" I replied, then I cocked my head. \"Why aren't you mad at me? I figured you would be chewing me out for staring at your niece. I mean, I don't want you to be mad, but that's what I expected.\"\n\n\"Oh, baby, I know you're trying your best,\" she replied. That amused smile never left her face. \"I had no idea Tamara looked like that, but now that she's here I understand all the problems she's had and why she needs this fresh start.\"\n\nShe looked like she had more to say, but then Tamara came bobbing back into the room and leaned over right next to me with her laptop. I gave my wife another piteous look, and she struggled not to laugh again as I turned my attention to my niece's laptop and tried my best not to stare at the incredible cleavage right next to my cheek. After I set up her internet connection, I couldn't help it. I got an amazing eyeful of those fantastic tits when she leaned down to take her laptop out of my lap.\n\nThen she leaned down again and planted a wet smooch on my cheek. \"Thanks so much, Uncle Mike,\" she said in that sexy, breathy voice.\n\n\"You're welcome,\" I said, swallowing heavily.\n\nI was pitching a tent in my shorts, and my wife looked from it up to my face and blew me a kiss. Since she was standing behind Tamara, she didn't notice the way her niece's eyes widened when she noticed my obvious erection. They left me alone to work after that, and I managed to calm down and actually get some work done before dinner.\n\nTamara had changed clothes before I joined them in the kitchen. I was relieved to see the baggy sweat shirt, even though it didn't completely hide her breasts. It just made it easier for me to keep from staring. I managed to joke with the two of them as we ate, and they both laughed at my lame jokes. I got Tamara to share her college plans with us, and it was a relief to hear her thoughtful response. She had given her education some serious thought and planning, so it wasn't some air-headed bimbo reply.\n\nAlso, her courses sounded like something I could help her with. My wife was the one who pointed it out, though. Tamara looked genuinely relieved when she looked over at me and I nodded.\n\n\"Oh, that's such a relief,\" she said. \"I've had a really hard time finding tutors who were actually helpful.\"\n\nShe shook her head and her expression made me wonder what those tutoring sessions had been like. In my mind, it immediately turned into porn. I studiously focused on the food on my plate for the rest of the meal, but every time I looked up Cathy was grinning at me knowingly.\n\n* * *\n\nThat night, my wife was all over me as soon as we went to bed. Her pussy was soaked, and she couldn't get my hard dick inside her fast enough. Almost as soon as I started thrusting in and out of her, I felt her shudder and come. Her sweet pussy gripped me and spasmed around my shaft, and her juices soaked my shaft and dribbled out onto my balls.\n\n\"Oh my God,\" I breathed. \"It's turning you on, isn't it?\" I didn't have to explain that \"it\" was me struggling not to stare at Tamara's incredible body.\n\n\"Yes!\" she gasped.\n\nI was just relieved she wasn't mad. She knew I was impossibly hard from being around Tamara all evening, but she was happy to take care of my throbbing boner even though she wasn't the one who had gotten me so worked up. I took full advantage of my horny wife and fucked her hard. Even after I came inside her, I was still almost completely hard. She shuddered through a second orgasm and then panted up at me.\n\n\"I love this! God, you are so fucking hard. Are you thinking about Tamara now?\"\n\n\"Dammit!\" I groaned. She moaned as she felt my dick throbbing inside her in response. \"I wasn't until you said that.\"\n\n\"Oh, but now you are, aren't you? You're thinking about fucking Tamara's tight little pussy right now.\" She moaned again as I resumed fucking her cum-filled pussy. Her voice rose and she imitated her niece's breathy voice. \"Mmm, Uncle Mike,\" she purred, \"You have such a nice, big dick! Give it to me. Fuck my horny little pussy with that huge, hard cock!\"\n\n\"Damn,\" I groaned, pumping her even harder as she continued teasing me and taking every thrust eagerly.\n\n\"Yes!\" she growled. \"This is just what I needed, Uncle Mike. My pussy is so full. Oh! Did you just get harder? Are you going to come inside me again? Do it! Give me that hot cum!\"\n\n\"Oh, fuck!\" I gasped. I tried to hold back, but it was impossible. We both moaned as I filled her with that second massive load. She cried out with her own intense orgasm as soon as I started coming, and it just made mine last longer. My dick was still pulsing inside her after she finally stopped shaking beneath me.\n\nWhen I slumped down onto her in the aftermath of that intense orgasm, Cathy planted kisses all over my cheek, neck and up to my earlobe. \"Damn, baby, that was so hot,\" she whispered. \"I'm sorry if I've been enjoying this too much, but I just knew tonight was going to be incredible.\"\n\nShe pushed lightly on my shoulder and I rolled off of her. Cathy's legs shook as she made her way into our bathroom and I licked my lips as I stared at her ass. When she closed the bathroom door, my eyes shot open. I heard someone walking away from our closed bedroom door.\n\nOh, shit. How much of that had Tamara heard?\n\nI thought about telling Cathy, but when she came out of the bathroom I went in to quickly clean off my sloppy cum-coated dick. You know how it is; I didn't want it to be all sticky and crusty in the morning. It only took four or five minutes for me to wash up my \"nether region\" and dry off my cock and balls, but when I opened the bathroom door afterwards Cathy was asleep with a content smile on her face. I sighed and turned off the light, and then spooned up against her in the bed.\n\nDespite my concerns, I fell asleep right away.\n\n* * *\n\nI stumbled out of bed the next morning and groggily made my way out to the kitchen for coffee. I went through my usual routine of getting the pot rinsed out, dumping the used grounds and filter into the trash, adding a new filter and fresh coffee grounds, and filling the reservoir on the percolator. I breathed in the heavenly aroma as the coffee brewed, and gradually came awake. Cathy had already left for work, and I had managed to forget that Tamara was even there until she came stumbling out of her room. \n\nThat was an image I will take with me to my grave, thank you very much. She wasn't naked, but she might as well have been. The thin, completely see-through top of her babydoll pajamas did nothing to obscure the amazing view. There was a single button between her mouth-watering mounds of tit flesh, and the gauzy material hung straight down from her puffy pink nipples. It draped open below her tits, letting me see her belly button and the matching see-through bikini panties. The tiny landing strip of red pubic hair pointed the way to her pouting pussy lips, which were pressed firmly against the transparent fabric. \n\nI blinked and stared at her in disbelief, unable to take my eyes off her sexy body as she groaned and rubbed her eyes. Her breasts rose and fell alluringly when she took a deep whiff through her nostrils. \"Mmm, that smells good,\" she moaned, snapping me out of my trance.\n\nWhen I looked up at her face, she was smiling at me. Clearly, she had seen me staring at her body, and I wondered idly if I was drooling.\n\n\"Good morning, Uncle Mike,\" she said brightly.\n\n\"Good morning,\" I replied automatically. After a second I felt the need to blurt out, \"Sorry.\"\n\n\"For what?\" she asked. She cocked her head and that caused a new round of jiggling. My eyes were irresistibly drawn down to her bobbing nipples, which hardened noticeably under my gaze.\n\nI licked my lips and shook my head as I looked back into her eyes. She was smiling. God, what a gorgeous smile that was.\n\n\"I couldn't help but stare,\" I replied.\n\n\"Oh, that's okay,\" she replied lightly. \"I don't mind.\"\n\nThen her gaze swept down my body to my boxers and she let out a soft sigh. I looked down and was only relieved that my boner hadn't popped right out of the front of my underwear. Thank God for that little button in the front, or she'd have been looking right at my dick. As it was, my erection was obvious. I turned away to check on the coffee. It was halfway done.\n\nBrew faster! I thought desperately.\n\nTamara came up behind me and wrapped her arms around my midsection. She sighed into my shoulder and I swallowed hard when I felt her breasts pressed against my lower back and my right side. I turned my head and looked at her over my shoulder. Her eyes were looking up at my face.\n\n\"I guess I should go get dressed,\" I sighed.\n\n\"You don't have to,\" she replied breathily. Then she blinked and added, \"Unless you have to go to work.\"\n\nI shook my head and said, \"I'm working from home today.\" \n\nAs soon as I did, I wondered if it was a mistake. I could have gotten dressed and gone into the office to work. I kept it in mind as a potential excuse, just in case this got too uncomfortable. Speaking of uncomfortable, though...I felt like I had to say something about that \"Come fuck me Uncle Mike\" outfit she was wearing.\n\nI cleared my throat and turned to face her. \"Tamara, it's probably a good idea if we both get dressed.\" I shook my head, scarcely able to believe I was trying to put a stop to the marvelous show she was giving me. But I had a good reason. \"If your Aunt Cathy had to come home for some reason, and saw you wearing that outfit in front of me, I would catch hell for it.\"",
        "Tamara gave me an impish grin. \"Are you sure about that, Uncle Mike? She seemed awfully amused whenever she saw you looking at me yesterday.\"\n\n\"Well, you were fully dressed yesterday and she was right there the whole time,\" I countered. \"If she saw you like this, she wouldn't be as understanding. Normally, she's extremely possessive and she does not like me looking at other women at all.\"\n\nTamara reached up and teasingly fiddled with that one button between her breasts. I couldn't help but stare, and I noticed her nipples were now completely hard.\n\n\"So you want me to take this off?\" she breathed.\n\n\"No!\" I replied, far louder than I intended. She jumped a bit, which was distracting as all hell. I shook my head and tore my gaze from her magnificent tits. \"Tamara, you know how amazing you look. If I'm going to be honest with you, I have to say I would love to see you dressed like this all day long. But if you parade around the house dressed like this, there's no way I'll get any work done, AND my wife will kill me the second she walks in the door. Okay?\"\n\nShe nodded and gave me a soft smile. \"Thanks for being honest with me,\" she said. She glanced down pointedly at my crotch before adding, \"Aunt Cathy is a lucky woman.\"\n\nI blew out a long breath as I retreated to my bedroom. It wasn't cold in the house, but I thought it would be a good idea to wear sweat pants as long as Tamara was staying with us. I put on a loose t-shirt and made my way back out to the kitchen to get that coffee. Tamara had beaten me there and was already mixing creamer and sugar into her coffee. I breathed a sigh of relief when I saw the baggy sweatshirt she was wearing. My relief was short-lived.\n\nWhen I walked around the kitchen counter, her shapely bare legs drew my attention. I didn't see any shorts. I thought about asking, but shook my head. It was probably best if I didn't know what she was wearing under that sweatshirt.\n\nI managed not to stare at her legs while I fixed my coffee and took that first blessed sip. \"Ohhh,\" I sighed. I leaned back against the counter and regarded Tamara as I took a second sip. She was smiling at me and once again looked amused. \"What have you got planned for today?\" I asked after I had swallowed.\n\nShe gave me an impish smile and shook her head. It looked like she thought about saying something and then changed her mind. Instead, she took a sip of her coffee while she thought it over. After she swallowed, she said, \"My online classes don't start until next week. I was thinking about going out, figuring out where everything is around this neighborhood. Maybe you'd...\" Tamara had been looking at my face, but she stopped and looked deeply into my eyes. \"Uncle Mike,\" she said softly, \"I really appreciated it earlier, when you were honest with me. If I tell you something deeply personal, can I trust you to keep it a secret?\"\n\n\"Of course,\" I replied.\n\nShe sighed and shuddered at the same time. \"I really need to get laid,\" she breathed.\n\nI spluttered on the sip of coffee I had just taken, and turned quickly to set the mug down on the counter. I leaned over the sink and splashed some water onto my face to get rid of the coffee that had run down my chin. After I had rinsed my face, I snagged a paper towel and wiped my face dry. Tamara was still staring at my face when I did that. I wadded up the paper towel and tossed it into the trash.\n\n\"Okay, Tamara,\" I said slowly. \"I can keep it a secret that you need to get laid.\"\n\nShe looked annoyed and chewed her lip for a moment. \"Uncle Mike...I wouldn't have gotten into all that trouble if I wasn't so damned horny all the time. I haven't been laid in a week and a half, and I can't tell you how bad I need it right now.\" She stepped closer and her hand squeezed my shaft through my sweat pants. Her eyes held me spellbound. \"Please, Uncle Mike,\" she whispered. \"I heard you and Aunt Cathy last night. I know you want to fuck me. Will you please take care of me?\"\n\nI was going to say no, until that last part. Then I thought, You know, I promised her parents I would take care of her. It sounded lame, even inside my head. I couldn't actually go through with it, could I? Then I groaned and closed my eyes. Tamara had reached into my sweat pants and now she was stroking my hard dick. I looked at her face, at her helplessly horny expression, and I knew I had to have that same expression at that moment.\n\nWhen she whispered, \"Please?\" again, I nodded.\n\nShe held onto my throbbing shaft, pulling me along behind her until we were in the guest bedroom. Then she turned and pulled my sweatpants down. Her eyes widened and she moaned, \"Oh!\" when my erect cock sprang free of the elastic waistband. Then she quickly pulled her sweatshirt above her head, revealing that she hadn't worn anything else. She pulled me with her onto the bed, spreading her sexy legs wide and guiding the tip of my rock-hard dick between her drenched folds.\n\nHer breathy, high-pitched voice was irresistible when she begged, \"Please fuck me.\"\n\nThere are certain key moments in every man's life that he looks back on with regret. Some are things you regret because you wished you hadn't done them. Others are opportunities you wish you had taken advantage of when you had the chance. Theoretically, I could have still stopped at that moment. I could have pulled back from Tamara's incredible body, pulled my sweatpants back up my legs, and refused to give in to this delectable temptation. I looked down at my throbbing cock, poised at the entrance to paradise and shook my head.\n\n\"I would never forgive myself,\" I murmured.\n\nI pushed forward and watched as my cock sank into her moist, velvety embrace. We both groaned and I looked up into her eyes. Tamara's eyes and mouth were both wide as I gave her what she wanted. The shock in her expression told me she was getting more than she expected. After the stories I had heard about my niece, I was surprised that her pussy felt as tight as it did.\n\n\"Oh, God yes,\" she breathed.\n\nI had to go slowly and exercise careful control, or I would not have lasted six strokes in her impossibly perfect little pussy. Fucking Tamara was visually spectacular as well\u2014the way her heaving breasts bobbed hypnotically on her chest with each thrust was stunning, and her pussy looked incredibly arousing as it stretched obscenely around my thick shaft. It was almost as much of a turn-on to see her aroused expression as I filled her with my cock.\n\nShe gasped out loud when I leaned into her body and took her breast in my mouth. I was still looking into her eyes when she bit her lip, closed her eyes and shuddered through her first orgasm. The combination of stimuli nearly pushed me right over the edge. The only thing that stopped me was her tightly gripping sheath holding me fast and forcing me to stop fucking her until she finished shaking beneath me.\n\nI slowly worked my full length into her, only to feel her coming explosively a second time. Once again, her pussy held me tightly and prevented me from thrusting until her orgasm passed. We slowly managed to build up speed over the next fifteen minutes and she came twice more. I savored her breasts the entire time and loved how inflamed her nipples became as I sucked them greedily.\n\nI finally released her breast and held her legs wide open so I could watch my dick pistoning in and out of her. I looked up at her face and asked, \"May I come inside you?\"\n\n\"Yes!\" she cried out, shoving her sexy butt up off the bed to urge me on.\n\nIt felt like her pussy was milking me when I finally exploded deep inside her. The way her body shook all over, I knew she was coming just as hard as I was. I kept my entire shaft buried inside her as my sperm shot out of me, leaning down to kiss her mouth hungrily the entire time. She was unable to kiss me back, gasping into my mouth through her own intense orgasm. When we had both finished coming and she could breathe normally again, she attacked my mouth with hers.\n\n\"Oh, thank you, Uncle Mike!\" she gasped between frantic kisses. \"That was incredible! None of my boyfriends ever made me come like that!\"\n\nWe both shuddered when I pulled my spent shaft out of her. Tamara shocked me by flipping around onto her hands and knees and slurping my dick into her mouth. I shivered all over when I felt her throat taking in the head of my cock. I shook my head to let her know I was too sensitive for her to actually suck me, since I couldn't speak at that moment. She gave me one long suck as she released me, and then licked her lips. Her eyes didn't leave my dick as she groaned, \"I love your dick.\"\n\nBefore I had a chance to say anything, she pressed her palm to her freshly-fucked pussy and hopped out of the bed. She gave me a peck on the cheek as she brushed by me and headed into the bathroom. I shook my head and blew out a long breath. Wow. That really just happened.\n\nWhen I heard her start her shower, I pulled my sweat pants back on, grabbed a fresh cup of coffee in the kitchen, and headed into my home office. It took me a while to clear my head and get some work done.\n\nI left my office door ajar. Normally, I close it for extra privacy, but that seemed rude with Tamara there in the house. When I heard her come out of the guest room, I rolled my chair back and leaned over to peek out the door.\n\n\"Hey,\" I called, \"Are you okay?\"\n\nShe came sauntering over with a huge smile on her face. The t-shirt she wore over her shorts was loose, but it still clung to the topside of her breasts and hung down from her stiff nipples. \"I am sooo much better,\" she replied gratefully. \"That was exactly what I needed.\"\n\nI smiled up at her. \"Glad I could help,\" I chuckled. Then I sighed heavily and added, \"It was pretty incredible for me, too. Thank you Tamara.\"\n\nShe gave me a dazzling smile and nodded, which of course made her fantastic breasts bob up and down right in front of my face. I groaned.\n\n\"Okay, I really need to get back to work,\" I said, shaking my head. She giggled as I rolled my chair back over to my desk. When she turned around to walk back to her room, her soft workout shorts displayed her fantastic ass and made it clear to me she still wasn't wearing underwear. \"Fuck,\" I groaned softly, turning my attention back to my computer.\n\n* * *\n\nI managed to knuckle down for the next three hours and got one of my projects done. I wrote a quick e-mail and attached the file, sending it off and leaning back in my seat with a satisfied sigh. That was half of what I had hoped to accomplish for the day. I had taken a pair of breaks to get more coffee, and my cup was once again empty. I stood and stretched before heading to the kitchen, but realized halfway there that I really ought to eat something.\n\nI hadn't had breakfast, and it was closing in on lunch time. This wasn't all that unusual for me when I worked from home; taking a break to grab something to eat sometime between ten and noon gave me lots of options. It wasn't really too late for a late breakfast or brunch, or I could just grab an early lunch if I was in the mood for it. I set my empty coffee mug on the counter and stepped over to the open door of the guest bedroom.\n\n\"Hey, Tamara, are you hungry?\" I asked.\n\nShe was lying on the bed facing away from me with her laptop open in front of her. Her head turned so that she was looking over her left shoulder at me just as she pushed herself up onto her hands and knees. Naturally, that pushed her perfect backside toward me and my eyes were drawn there irresistibly. It was only a fleeting glimpse before she rolled into a sitting position on the side of the bed, and then my eyes were drawn to her breasts shimmying beneath that loose t-shirt before I brought my gaze up to her face.\n\nShe was smiling and looking at the growing bulge in the front of my sweat pants. \"Yes,\" she replied.\n\nI really was still thinking about food when I asked, \"What are you in the mood for?\"\n\n\"I'd really like to suck your dick before you fuck me this time,\" she purred.\n\nI opened my mouth and almost said, \"I meant food.\" Instead, what came out was, \"Okay!\"\n\nTamara slid to her feet and glided over to me. Even though I had said \"Okay,\" I hadn't moved. She wrapped her arms around my neck and pulled me down for a kiss, then guided me back toward the bed while hungrily sucking on my tongue. We stopped moving when the backs of her thighs touched the edge of the mattress, but didn't stop kissing. Tamara's hands slid down my body and her fingernails grazed my chest, causing me to groan into her mouth. She broke off the kiss and looked up at me.\n\n\"God, I love that,\" she murmured.\n\n\"What's that?\" I asked as she untied the drawstring and pulled my sweat pants open.\n\n\"Seeing you so turned on like that,\" she replied. She lowered to a squatting position as she pulled my sweat pants down my legs. \"It really turns me on when you look at me like that.\" Then she looked from my face to the rampant erection in front of her face. \"And this...mmm,\" she opened her mouth and took half my cock between those marvelous lips.\n\nI felt her tongue swirl around the head of my dick, and then she applied firm suction and worked her lips up and down my shaft. Her nostrils flared and she looked up at me, giving me three more vigorous sucks before she pulled her mouth off.\n\n\"Don't get me wrong, Uncle Mike, I love the manly smell of your sweaty balls. But I have to ask why you're wearing sweat pants when it's so warm in the house.\"\n\nI shook my head and had to smile a little. \"When I said we should both get dressed earlier, I thought it was a good idea. I thought if I wore shorts, it would be way too obvious how hard you would get me. I didn't want to be parading around with an obvious boner all day.\"\n\nShe giggled and stroked my slick shaft with her right hand. \"Oh, don't you worry about that, Uncle Mike. I'll be happy to take care of every one of your boners for you.\"\n\nThen she took me back in her mouth and reached around to squeeze my ass cheeks in her hands. She ran her nails down both cheeks, and then grabbed them firmly, encouraging me to fuck her mouth. It was quite possibly the best blowjob I ever received. Tamara moaned when she sucked the first pre-cum from my dick, and then she released my ass and brought her right hand around to once again stroke my shaft when she pulled her mouth off of me. She sucked in a breath as she looked up at me.\n\n\"If you get close when I'm sucking you, just let me know. I don't mind if you want to come in my mouth.\"\n\nI nodded, but then said, \"Okay, but if I do that I probably won't be able to get it up again right away. I thought you wanted me to fuck you again?\"\n\n\"Hmm,\" she said thoughtfully, still stroking my cock and looking at it. \"I do want you to fuck me, but I really wanted you to come in my mouth.\" She squeezed my shaft from the base up to the middle, and a clear drop formed at the tip. She licked it from me eagerly and swallowed it. Then she stood up and slid her shorts down her legs, looking into my eyes. \"You should probably fuck me now, before I get carried away sucking that wonderful dick. Just promise me you'll pull out and come in my mouth when you get close, okay?\"\n\nI nodded and pulled my shirt over my head as she did the same. \"I'll try,\" I promised.\n\nI managed to deliver on that promise, but it was really fucking close.\n\nTamara got up on her hands and knees on the bed, looking over her shoulder at me as I took her from behind. Oh my god, her ass looked so sexy! She moaned as I grabbed her fantastic ass cheeks and spread them open. I loved watching my shaft sliding in and out of her snug little pussy.\n\n\"Damn, you got even harder,\" she groaned appreciatively. \"You really like looking at my ass, don't you?\"\n\n\"Hell yes,\" I replied.\n\nWe both moaned as I picked up speed and pounded her from behind. Twice she gasped, \"Wait!\" and spun around to suck me insistently. Both times I shuddered uncontrollably\u2014it looked and felt so fucking intense. Tamara licked her lips and turned back around, and her wet pussy was ready for more. I grabbed her hips and jack-hammered my dick in and out of her after that second time, and she cried out deliriously.\n\nWhen she came, her pussy flooded with her juices and gripped me tightly. I nearly lost it, but managed\u2014just barely\u2014to pull out of her. My voice sounded strangled when I gasped, \"Coming!\"\n\nHer eyes were wild when she spun around and took me in her mouth, and she moaned loudly as I erupted between her lips. There was so much of it shooting out of me that some of it escaped her lips and ran down her chin. I felt a little of it running down the base of my shaft and onto my balls. When I finished coming, she licked up all of it.\n\nI was breathless after that intense orgasm, and flopped onto the bed next to her to catch my breath. Tamara leaned over and took my balls in her mouth one at a time, working them over with her tongue. When she was satisfied she had gotten all of the cum off of them, she took my spent cock back into her mouth and nursed it gently. I shuddered again as she pulled the residual sperm out of my shaft.\n\nWhen my breathing was back to normal, I pushed her onto her back and dove in to feast on her juicy snatch. In no time she was bucking against my face and pulling my hair. Her shapely thighs pressed against my ears, keeping me from hearing what she cried out. I heard her muffled voice, though, so I knew she was being very vocal. After she finished and her thighs relaxed, I pushed two fingers into her molten depths and pulled my face back.\n\n\"Shh,\" I cautioned. \"The neighbors will hear you.\"\n\nShe nodded and I lowered my head to begin sucking her hard little clit.\n\n\"Oh, fuck!\" she groaned.\n\nI looked up at her face and opened my eyes wide in warning, and she nodded and bit her lip. Tamara looked spectacular when she came all over my fingers and my mouth. Her big tits shook all over and her nipples were completely hard. She was still biting her lip and she shook her head and whimpered. I made her do it twice, and she was panting when I sat up and kissed her breasts. Then I sat back and gave her my wry smile.\n\n\"Not to sound like I'm complaining, but I actually came in to see if you wanted some food,\" I murmured. \"This is usually when I have either a late breakfast or early lunch, depending on what I'm in the mood to eat.\" I looked her sexy body up and down before looking back into her eyes. \"I loved the appetizer, though.\"\n\n* * *\n\nBecause it was warm, we just had sandwiches and chips for lunch, with soda. Well, I had soda. Tamara had a rum and coke. After we'd eaten I changed into comfortable lightweight shorts. I got a lot of work done the next hour, and then I took a break to drive Tamara around so I could show her the neighborhood. We have a couple of good-sized grocery stores just a few blocks from our house, plus the usual smattering of fast-food restaurants, a pair of strip malls, and a decent movie theater. We stopped and grabbed milkshakes at a drive-through and sipped on those while I pointed out useful places to know.\n\nCathy called while we were stopped at a traffic light, and I handed the phone to Tamara. \"Would you mind taking this?\" I asked. \"I didn't hook it up to the Bluetooth before we started, and it's illegal to talk on the phone while driving here.\"\n\nShe nodded and answered the phone. \"Hey, Aunt Cathy, how are you?\"\n\n\"I'm alright,\" my wife replied, \"just thought I'd call and check in. Where's Mike?\"\n\n\"He's driving me around to show me the neighborhood,\" Tamara answered.\n\n\"Hi, honey,\" I chipped in.\n\n\"Oh, that's nice,\" Cathy said. \"Are you going to the campus?\"\n\n\"I wasn't planning on it,\" I replied. \"I figured the three of us could head out there one of these evenings, when the traffic and parking aren't so bad.\"\n\n\"That makes sense,\" Cathy said. I grinned, because I could practically see her nodding into her phone. \"Tamara, is there anything you need?\"",
        "Tamara looked at my lap and licked her lips. \"Um...I can't think of anything at the moment, Aunt Cathy,\" she replied. \"I'm sure if I think of something I need, Uncle Mike can help me with it.\"\n\nAs soon as the phone call ended, Tamara put my cell phone into the console and then leaned toward me. \"Can I suck your dick?\" she asked breathily. \"It really turns me on to suck a guy's dick while he's driving.\"\n\n\"That's a really bad idea in this neighborhood,\" I replied. I nodded toward a police cruiser parked in a driveway ahead of us. \"There are five or six cops who live in our neighborhood, and two of them live on our street. They're awesome neighbors, but Cathy knows all their wives and they pay attention to every car driving through here.\"\n\nTamara reached over and fondled my cock through my shorts. \"Oh, that's a shame,\" she murmured.\n\nI made the next left turn and headed quickly back to the house. I parked in the garage and Tamara had my dick in her mouth before the garage door even had a chance to close. I reached down her back and squeezed her sexy bottom through her shorts. She moaned around my dick, unfastening her seatbelt so she could kneel on the passenger seat and spread her legs for me. Her pussy was soaked when my fingers reached it.\n\n\"We should go inside,\" I growled, but she didn't hear me. She was moaning and slurping my dick too loudly and only got more insistent when my fingers slipped inside her.\n\nI was shocked at how quickly she made me come in her mouth. I barely had time to croak, \"Coming!\" and then my dick was pulsing rope after rope of my semen. Tamara's moans reached a crescendo and I felt her juices gushing around my fingers. She gulped noisily and continued sucking until I shivered and begged her to stop.\n\n\"Please, Tamara,\" I shuddered, \"You're sucking it too hard, and I'm way too sensitive right now.\"\n\nShe gave me one last spine-tingling slurp and released me, sitting back on her seat. \"Sorry,\" she whispered with an impish grin on her face. \"I was really enjoying your dick in my mouth.\"\n\n\"I could tell,\" I chuckled. \"Believe me, I wish it didn't get so sensitive. You were amazing.\"\n\nI finally unbuckled my seatbelt and took my milkshake to my office with me.\n\n* * *\n\nTamara brought her laptop out to the living room so she could sit on the couch and work on it, while setting her drink on the coffee table. That put her squarely in my line of sight every time I glanced out my office door. Every time I looked that direction, I couldn't help but notice how her shorts failed to cover her pussy. It was peeking out at me invitingly from that leg opening. I was salivating and had a tough time focusing on my work.\n\nAbout the sixth time I turned my head her direction, Tamara grinned at me and pulled her leg opening to the side to give me an unobstructed view of her tasty little clam, and then I knew she had done it on purpose in the first place.\n\n\"You're so bad,\" I groaned at her. \"I'm never going to get my work done.\"\n\nShe never stopped grinning. She picked up her milkshake and noisily sucked on the straw, draining the last little bit of it before getting to her feet and sauntering over to stand next to me. Dropping her empty cup into my trash can, she turned her head and looked at the screen of my computer. Then she shook her head and looked back into my eyes. \n\n\"I can't even tell what you're doing,\" she said. \"I was hoping to take one look and see how close you were to finishing.\" She looked down at my lap and then back up at my face. \"I figured if you were at a good stopping point, I could slide into your lap right here, take your hard dick into my pussy, and have you suck my tits for me.\"\n\nMy dick lurched in response and I groaned again. \"Damn, that sounds amazing,\" I said, blowing out a big breath. \"But even if I could get it up for you right now, I would be so drained afterward that I would need a nap. Then I wouldn't be done with my work when Cathy gets home, and she would know something was up.\"\n\nTamara leaned down and kissed me on my lips softly. Then she kissed my cheek and whispered into my ear. \"Well, maybe this will motivate you. I'll be waiting naked in my room. As soon as you're done, call me in here and I'll come running.\" She bit my earlobe and I shuddered. She was still grinning when she stood upright and asked, \"Okay?\"\n\nI nodded eagerly, not trusting myself to speak. I just knew I would say something stupid. Instead, I just feasted my eyes on her as she turned and walked away.\n\nDamn, I have never been as motivated as I was after that! Unfortunately, it didn't help me overcome the technical shortcomings of the program we were using for that project. When I finally finished and sent off the e-mail, I had to groan in frustration when I saw the time. Cathy would be home in ten minutes or less. I got up and hustled over to the guest bedroom.\n\nTrue to her word, my niece was gloriously naked in her bed. Her fingers lazily worked their way in and out of her pussy, and she had her eyes closed as she bit her lip and whimpered. Holy fuck, did she ever look sexy! Her eyes shot open when she heard my lusty groan.\n\n\"I thought I was going to ride you in your office?\" she panted.\n\n\"We don't have time,\" I said, spreading my hands helplessly at my sides. \"Cathy will be here any minute.\"\n\nI crawled into her bed and lapped at her irresistible little pussy until I heard my wife pull up in the driveway. Tamara shuddered and came a second time before I stood up. \"Thank you!\" she hollered at my retreating back. \n\nI washed my face quickly, and was drying it when I heard Cathy come in the front door.\n\n* * *\n\nWe shared a nice dinner and Cathy and I sat on the couch to watch television after we had washed the dishes. Tamara had put the same t-shirt and shorts on before joining us for dinner. I was shocked when she came over and sat in my lap. My eyes shot over to my wife's face, and she grinned and shook her head. I held up both hands and pantomimed pushing Tamara out of my lap, and Cathy snorted at me.\n\n\"Oh, relax Mike,\" she said, reaching over to brush my cheek with the back of my hand. \"I don't mind.\"\n\nI'm sure my eyes were huge. I could not believe this was actually my wife sitting next to me. \"I'm getting hard!\" I mouthed at her. Then I licked my lips and whispered, \"This is a bad idea,\" loudly enough that both of them could hear me.\n\n\"It's okay, baby,\" my wife cooed. I could tell from her expression that she was aroused.\n\n\"Thanks, Aunt Cathy,\" Tamara said softly, and she pressed her bottom right into my throbbing cock.\n\nIt wasn't like she was grinding in my lap, but she was moving around enough that I thought I was going to come in my shorts before that movie was over. After the movie ended, Tamara leaned over and kissed my wife right on the mouth. All I could see was the back of her head, but she ground her butt in my lap while they kissed. They both let out a soft gasp when they broke it off, and then Tamara got up and gave me a peck on the lips.\n\n\"Thank you,\" she whispered, and then she walked into her room and closed the door.\n\nCathy turned off the television and kissed me hungrily before dragging me into our bedroom. She practically tore my clothes off of me after she closed the door. \"Oh, God, I am so turned on!\" she panted. \"I can't wait for you to fuck me!\"\n\nShe had changed clothes after work, while I was cooking dinner, so it didn't take long for her to shed her nightgown and panties. Cathy was absolutely soaked when I slid my cock into her. She gasped again, \"Oh, damn baby! You are so fucking hard! Fuck me! Fuck me! Fuck MEEE!\"\n\nI didn't give a damn if the neighbors heard me fucking my wife, so I gave it to her as hard and as fast as I could. She came like crazy all over my dick, again and again. Finally I stopped pounding her horny pussy when she grabbed my shoulders. Cathy took a bit before she caught her breath and could speak.\n\n\"I need a little break,\" she finally panted.\n\nI leaned down and kissed her. \"Okay,\" I replied, pulling back onto my haunches.\n\nHer eyes drifted down to my wet, throbbing dick before returning to my face. \"Was Tamara wearing that outfit around you all day?\" she asked.\n\nI nodded.\n\n\"And you could tell she wasn't wearing any panties,\" she growled.\n\nI bit my lip and nodded again. She smiled when she saw my dick respond by lurching up and bobbing up and down. Cathy sat up and then rolled over onto her knees, pointing her shapely butt back at me.\n\n\"You should go get the lube,\" she growled at me, a little louder. \"I think it's time for you to fuck sweet little Tamara in her ass.\"\n\nI cocked my head, looking at her face, and she nodded. I slid off the bed and stopped in my tracks when I heard Tamara gasp on the other side of our bedroom door. For a fraction of a second, I thought about saying something to Cathy, but when I turned my head all I could focus on was her swaying, sexy ass. I hurried into the bathroom, turning on the light so I could find the lube under the counter.\n\nNow, I guess I should explain that my wife simply isn't into anal sex. She knows it is my favorite fantasy, but her tight little butthole just wasn't designed to take my fat dick. Even though I tried my best to be gentle and take my time, it had hurt her both times she let me fuck her ass before. And it was only those two times. So I was really, really surprised she was offering me her tight asshole. I also wasn't about to question my good fortune.\n\nIt looked so fucking incredible when my wife's lubricated asshole spread around the head of my cock. Her filthy talk just made it more unbelievable. \"Oh, Uncle Mike!\" she groaned. \"Your cock feels so fucking huge in my ass! Unh! Oh, how did you know? Uh! I LOVE it in my asshole! Unh! Unh! Yes! Fuck my ass!\"\n\nI did not last long at all. When I exploded in my wife's sweet asshole, it shocked me that she actually came. From her expression\u2014after she rolled over\u2014it was clear she was just as shocked.\n\n\"I can't believe that!\" she whispered.\n\nI leaned down and peppered her mouth, neck and breasts with kisses. \"Thank you so much, baby,\" I whispered. \"That was incredible.\"\n\nI helped Cathy into the shower and washed her back for her. She pulled down the shower nozzle and rinsed me off, then shooed me out of the shower. I didn't need her to tell me that she was going to wash out her asshole and didn't want me watching.\n\n* * *\n\nAfter she had dried herself and put on a nightgown, Cathy joined me in the bed and we held and kissed each other tenderly. It took me several minutes, but I finally remembered that I had heard Tamara gasp just outside our bedroom door. \"Oh, shit,\" I muttered. \"I completely forgot to tell you last night.\" I shook my head.\n\n\"What?\" she whispered.\n\n\"I'm pretty sure Tamara was outside our bedroom door last night,\" I said. \"I thought I heard her walking away from the door when you went into the bathroom last night, after we had finished having sex. I was going to say something then, but I had to go to the bathroom. When I came back to bed, you were already asleep.\"\n\nI felt her nod her head on my shoulder. \"Okay,\" she said sleepily. \"So she heard us having sex. That's not a big deal.\"\n\nI turned and growled in her ear, \"It is if she heard you saying, 'Fuck me Uncle Mike! Fill my pussy with that huge dick!' and all that other stuff you said.\"\n\n\"Oh, shit!\" Cathy hissed. \"I totally forgot I said that.\"\n\n\"It gets worse, potentially,\" I said. \"I could swear I heard her gasp right outside our door when you told me to get the lube.\"\n\n\"Oh, dammit,\" Cathy murmured, shaking her head on my shoulder. She sounded upset, but not with me. \"Dammit! That was so fucking stupid of me. Mike, I am really sorry.\" She kissed my shoulder.\n\n\"Why are you apologizing to me?\" I asked. I was genuinely perplexed.\n\nShe sighed and rolled onto her side, rubbing her hand over my chest. \"Baby, I should have said something earlier but I just didn't think it was a good idea.\" She let out a long sigh. \"My sister told me Tamara is severely oversexed. She is just incredibly horny all the time.\"\n\nI nodded. \"Troy told me something similar,\" I said, referring to her sister's husband. \"Why is that such a big deal?\"\n\n\"It's a big deal because that was how Tamara got into so much trouble in the first place,\" Cathy replied, sounding sad. \"That poor girl...\" she sighed. Then Cathy rolled away from me and turned on the bedside lamp, making me squint my eyes.\n\nCathy was shaking her head and looking into my eyes. \"I can't believe I'm telling you this, Mike, but Tamara needs to get fucked, thoroughly and regularly, and I need you to do that for me.\"\n\n\"What?!?\" I yelped. It was high-pitched, strangled, and sounded nothing like my voice. I carefully cleared my throat. \"Sorry,\" I said. Then I repeated, \"WHAT?!?\"\n\nCathy chuckled and kissed me. \"I'm sorry, baby. I hadn't really thought it through before we agreed to let her stay with us. Somebody needs to give my horny, sexy niece a good pussy-pounding on a regular basis. You're the only one I trust to do the job.\"\n\n\"You're shitting me,\" I snorted. \"Cathy, if this is your idea of a joke\u2014\"\n\n\"No, Mike,\" she said. Her expression was completely serious as she shook her head. \"You know the guys who live around here. Would you trust any of them to have sex with Tamara? You know damn well any one of those immature bastards would run their mouth off, and then she'd be right back in the same mess\u2014there would be a line of guys ready to fight for their turn to get into her panties.\"\n\nI thought about it and nodded. That sounded entirely accurate. But still...\n\n\"Cathy, if you are setting me up\u2014if you just want me gone and you want the house, all you have to do is say so. I know I've said it before, but you don't need to drag Tamara into it if that's what this is about.\" My voice sounded subdued even to my own ears.\n\nMy wife leaned down and kissed me hungrily on my mouth. She was chuckling out of her nose as she did. When she pulled her head back, she said, \"No, baby. I want you now more than ever.\" Her hand slid down and squeezed the shaft of my dick. \"I can't tell you how fucking hot it has gotten me thinking about this wonderful pussy-pleaser of yours going into my busty little niece. You should...\" She trailed off and lifted her head, turning toward the door.\n\nMy wife's hearing is much better than mine. I didn't know what she was doing when she abruptly slid out of the bed and hurried over to the door, and I didn't hear Tamara sobbing until after my wife pulled open the bedroom door. She was on her knees just outside our bedroom door, and there were tears running down her cheeks. It was impossible to miss that she was once again wearing that gauzy, see-through babydoll nightie with the tiny matching panties.\n\n\"Tamara, why are you crying?\" Cathy asked.\n\n\"Did...did my parents tell you that?\" Tamara stammered, so softly I could barely hear her. I sat up and scooted closer on the bed.\n\n\"Tell us what? That you were...\" Cathy swallowed, \"oversexed?\"\n\n\"No, not that,\" Tamara sniffed. \"Did my parents tell you I love it in my ass? I tried to be careful, but...I guess they must have heard me.\" Her voice got quieter as she spoke, and was barely a whisper at the end.\n\nMy wife turned and shook her head, and I shrugged helplessly in reply.\n\n\"Wait. What are you talking about, Tamara?\" Cathy was obviously confused, as was I.\n\n\"I heard you tell Uncle Mike,\" Tamara said, looking up from the floor at my wife and then at me. She swallowed heavily and then added, \"I get that you were just role-playing or whatever, but you told him I love it in my ass. My parents told you that, right?\"\n\n\"No,\" Cathy replied, shaking her head slowly. \"I said that because it's his favorite fantasy. He's just too big for my ass or we'd do that a lot more often.\"\n\nI was surprised to hear her say that. It wasn't something she had ever confessed to me in the seven years since we had last tried anal sex. Tamara seemed equally shocked to hear my wife's words, and her eyes were huge when she looked over at me.\n\n\"Really?\" she squeaked.\n\nI nodded. Cathy shot me a smoldering smile and then reached down to help Tamara to her feet.\n\n\"So, did you hear the rest of our conversation, after the part about your horny asshole?\" Cathy asked. Her voice was throaty and she sounded aroused. I guess Tamara thought she was angry.\n\n\"I'm sorry, Aunt Cathy,\" she stammered. \"I shouldn't have been eavesdropping.\"\n\n\"Did you hear what I just told your Uncle Mike?\" Cathy demanded.\n\n\"No,\" Tamara replied. \"I thought my parents must have heard me getting...you know. And then I thought they told you about it, and I had to wonder who else knew.\" While she was getting all that out, my wife had wrapped an arm around her and was steering her toward the bed.\n\n\"Oh,\" my wife said lightly. \"So you didn't hear when I told him you needed to get fucked, thoroughly and regularly, and I wanted him to do that for me?\"\n\nTamara blinked and looked at my wife in disbelief. \"No,\" she said. \"I definitely did NOT hear that. Oh, you're kidding me, right?\"\n\n\"Nope,\" Cathy replied.\n\nTamara's eyes were huge when she looked over at me. I shook my head and bit my lip.\n\n\"I just have one favor to ask you,\" my wife continued. \"Tonight, when my husband fucks you, can I watch?\"\n\nTamara looked at her and once again blinked in disbelief. She looked from my wife's face over to mine, and then down to my throbbing dick. She licked her lips and then looked back at my wife. Her voice was once again breathy with her arousal.\n\n\"Aunt Cathy, are you serious?\" she asked. My wife nodded. \"You want your husband to fuck me with that beautiful dick, and you want to watch while he does it?\"\n\n\"Yes!\" Cathy gasped.\n\n\"May I use your shower? I promise I'll be quick.\"\n\n\"I guess so,\" Cathy said, but she looked curious. \"You smell fine, sweetheart. Why do you think you need a shower?\"\n\nTamara looked embarrassed, and leaned up to whisper in my wife's ear. Cathy's eyes shot open and she nodded in response. Tamara hurried into our bathroom and closed the door, and the shower started a moment later. I must have looked insatiably curious. Cathy chuckled and slid back into the bed with me. She was up on her knees, pulling me up and kissing me as she stroked my hard cock.\n\n\"Happy Birthday, baby,\" she growled.\n\nI shook my head and looked at her. We both knew my birthday was still months away. Before I could ask, she shoved her tongue into my mouth and kept right on stroking my shaft. When Tamara came out of the bathroom and slid into the bed, I was still confused. When she turned around and presented me with her lubricated little puckered asshole, I understood what my wife meant.\n\nShe was giving me Tamara's asshole as a present. Happy Birthday to me!\n\nI was impossibly hard when Cathy guided my throbbing dick between Tamara's sexy ass cheeks. All three of us groaned in unison when she pushed the mushroom head into that inviting little pucker. \"God, that looks so hot,\" Cathy panted into my ear. \"Is that what it looks like when you push your dick into my ass?\"\n\n\"Yes,\" I gasped. \"So fucking hot.\"\n\nUnlike my wife's tiny asshole, though, Tamara's felt like it was made to take my thick cock. It spread open beautifully to let the head and first four inches of my shaft slide into that hot, slick embrace. Tamara shivered all over and let out a lusty moan. Again and again she moaned and pushed her hips backward to ease more of my length inside her.\n\nMy wife had her right hand on my left shoulder and she kept squeezing it as she panted and watched. Her left hand slid down her belly and I heard her playing with her wet pussy. \"Oh, damn, the whole thing's inside her!\" she groaned. \"Fuck! That looks amazing.\"\n\nI nodded in agreement, but couldn't tear my eyes away to see what she was doing. The sight of Tamara's asshole swallowing my cock had my undivided attention. When we started actually fucking my shaft in and out, I finally looked up her back and saw her lust-filled face peering back at me over her shoulder. Our eyes met and she nodded eagerly, encouraging me to take her.",
        "I nodded in response to Tamara's flushed face and grabbed her hips, using my thumbs to spread her cheeks apart. Then I looked from her gorgeous ass up to her face again and started to really fuck her. Tamara had not lied earlier; she loved getting her ass fucked. Cathy hadn't lied either. This was my favorite fantasy come to life and I took full advantage of this opportunity to live it out. I can't remember ever being as hard as I was.\n\nThe biggest surprise was how much Cathy got turned on watching while I fucked Tamara in the ass. When I finally turned my focus to my wife, it was only because I saw Tamara staring at her wide-eyed. Cathy's nipples were rock-hard and her face was a picture of undisguised lust. She was whipping her pussy into a lather as her fingers plunged in and out of her, and her juices ran down the insides of both thighs.\n\n\"Wow,\" I whispered, driving my dick in and out of Tamara's welcoming asshole.\n\nI was surrounded by the intoxicating aroma of wet pussy, my dick was sliding in and out of the sexiest ass I had ever seen, and my wife was putting on a one-woman sex show right beside me in our bed. It was a miracle I lasted two minutes. The only reason I didn't immediately erupt was that I had filled my wife's asshole with a load of cum just a few minutes earlier.\n\n\"Wow indeed,\" my wife croaked. When she heard her voice, she cleared her throat but then we both turned to look at Tamara's face when she cried out in orgasm.\n\n\"Ohhh!\" she wailed, \"so fucking perfect! Please don't stop.\"\n\nAs if! The only reason I would have stopped was if I had been hurting Tamara, and that was obviously not the case. I shuddered all over twice in the next few minutes, just because it felt so impossibly intense. We were all working up a light sweat, so there was a smacking sound every time my groin slapped into Tamara's ass cheeks. Cathy shook spectacularly to my left as she came all over her fingers, and Tamara watched that before lowering her face to the mattress and screaming into the sheets.\n\nIt was just too much for me, and I felt my own orgasm bearing down on me like a locomotive. \"I'm coming!\" I bellowed, and then I saw stars and fireworks filling my vision. Without a doubt that was the most intense climax I ever had in my life.\n\nAfterward I watched my spent cock slide out of Tamara's thoroughly violated butthole. I shivered and collapsed back to my right, pulling a pillow under my head even as I shook my head in disbelief. Cathy was shaking all over after she collapsed forward onto the bed beside Tamara, and our niece fell forward onto her belly. We all panted helplessly in the aftermath of that impossibly perfect moment for several minutes.\n\nTamara was the first to speak. She managed to roll onto her side facing my wife and reached out a shaking hand to Cathy's shoulder.\n\n\"Thank you so much, Aunt Cathy,\" she managed in a ragged whisper. \"I love you so much.\"\n\nShe leaned forward and kissed my wife on the lips.\n\n\"Mmm, you're welcome,\" Cathy purred. Then she moaned, \"Mmm\" again as Tamara kept kissing her. When I heard her voice rise, \"Mmm!\" in protest, I lifted my head to see what was going on. \n\nAll I could really see was Tamara's sexy backside. Her curly red hair was still slightly damp following her earlier shower, and her head was rotating as her mouth worked over my wife's. Even though she was protesting, my wife lifted her right knee upward. From the wet sounds and the way I saw the back of Tamara's left arm moving, I knew she was playing with Cathy's pussy.\n\nThey finally broke off the kiss and my wife weakly moaned, \"Oh, Tamara, I'm your aunt. You shouldn't have your fingers in my pussy, baby. That's just so wrong.\"\n\n\"I'm sorry, Aunt Cathy,\" Tamara murmured. She gave my wife another peck on the lips and then I finally got a glimpse of my wife's aroused face.\n\nI shot her a weak smile. \"Hey,\" I said softly.\n\nShe looked confused for a moment until her eyes met mine and she returned my smile. \"Hey,\" she replied. Then her eyes went wide and she looked down in shock.\n\nTamara's mouth had found my wife's wet pussy and she started noisily eating her out. Cathy shook her head helplessly and her trembling hands reached for Tamara's head. I think my wife was planning to push Tamara away, but then her eyes rolled up in her head and she moaned through what looked like a really intense orgasm. My eyes were drawn from my sexy wife's \"O-face\" down to Tamara's sexy ass which was once again pointed right at me while she slurped that juicy pussy.\n\nIt seemed grotesquely unfair that I couldn't get hard again. I looked down at my traitorous spent dick and growled in frustration. As much as I wanted to join in, all I could do was watch as my sexy-as-fuck niece forced my gorgeous wife to come all over her face again and again.\n\nThe helpless, horny expression on Cathy's face was almost as arousing as anything else I had seen that night. When I had the strength, I crawled over and kissed that impossibly sexy face. She moaned into my mouth as she came again and again. Finally, she pulled her face back and whimpered, \"Mike...please...Make her stop!\"\n\nI nodded, but I still waited for her to shudder through one more orgasm before I tapped Tamara on the shoulder and pulled her up off of my wife's tortured little snatch. \"That's enough, Tamara,\" I said gently.\n\nHer eyes were still wild as our niece looked up at my face and she licked the pussy juice off of her lips and chin. It seemed to take her a minute to figure out where she was and even who I was before she nodded. She moaned when I pulled her up to me and licked my wife's tangy juices off of her face and neck. Then Tamara abruptly scurried into the bathroom. My sperm was draining out of her ass and she didn't want to soak the bed with it.\n\nWhen Tamara came back to bed, the three of us fell asleep within minutes.\n\n* * *\n\nThe next morning, Cathy called in to work to take the day off. She told her boss that we had held my birthday party the night before, and that we had \"partied a little too hard.\" I heard her boss laughing over the phone as she told my wife to take it easy and get better. Cathy just smiled as she looked over at me. I was once again enjoying my \"birthday present.\"\n\nI can never get enough of Tamara's sweet, horny little asshole. Best! Present! EVER!\n\n \n"
    ],
    "authorname": "LexxRuthless",
    "tags": [
        "anal",
        "big tits",
        "incest",
        "niece",
        "uncle niece incest",
        "older man",
        "younger woman",
        "attraction",
        "oral",
        "threesome"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/happy-birthday-to-me-15"
}