{
    "title": "Savage Desire Ch. 07",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nJeremy Stanton vs. Ryan Hicks\n\nAnd there I was, thinking we would all patiently wait in 'purgatory' for the duration, in solidarity with Jeremy. smh@y'all! Please don't forget to add your e-mail addresses when you send me private messages/feedback. To be able to send responses to all your mails...even the threatening ones, I need you to add them. Love you guys.\n\nDedicated to Leannimal\n\nThe battle!\n\n***\n\nRyan stretched and turned his head to look at the clock on his bedside table. It was already half past seven. He usually slept in on Saturdays but he had scripts to mark so he had to get out of bed. He reached out to pick up the framed photo of his and Jeremy's wolves from the bedside table like he did every morning, and stared at it. It was a beautiful picture. Ryan smiled, remembering the day his and Jeremy's wolves had spent the night in the suite. Though he'd been out most of the time thanks to their naughty wolves, that day had been special. Philip had brought him that framed photo the morning after Jeremy's departure. He told Ryan that their wolves had looked so sweet cuddled up together when he entered Jeremy's suite that morning after the arena combats, he hadn't been able to resist taking the shot. Philip had captured it like a pro. It could easily win the national geographic picture of the year award. Ryan ran his fingers over the image of the red wolf in the shot...his mate. God, he'd missed him.\n\nJeremy had been gone for three months. And although Ryan felt no pain as he should have, he missed him terribly. Most times he either woke up with his pillow wet with tears or with Jeremy's name on his lips. Ryan didn't get why he seemed to cry in his sleep almost all the time but always woke up okay. Gloria had tired explaining that much as his pain had been cloaked, subconsciously he was miserable. It was therefore no surprise that he actually cried in his sleep. Ryan didn't really get it but hey... he was no expert in the werewolf shenanigans. All he wanted was to see his Jeremy again. \n\nRyan remembered that time, a week after Jeremy left for the Fort, when he'd gone to the council and requested an audience with Luna. He'd met only four of the council members including the High Priestess. Somehow he'd been glad that Gloria, Joel and Deloris...Camilla's warlock mother who he'd come to respect after she'd apologized to him for her daughter's actions against him, were not around at the time. His plan was to be rude and adamant if he had to. The council members he'd met had given each other incredulous looks, wondering what he wanted to discuss with Luna. \n\n\"Is there a problem Ryan?\" The high priestess had asked, looking worried. Ryan understood why she looked worried. After all, if he was in any kind of pain over his mate after she'd used an indestructible cloaking spell on him, then there was a big problem.\n\n\"Yes, there is.\" Ryan had replied quietly. \"I want my mate back.\"\n\n\"Are you in pain Ry...\"\n\n\"I don't need to be in pain to want my mate.\" Ryan's voice had raised. \"He's admitted he's erred. He willingly accepted his punishment. I'm the one he wronged and I've forgiven him. Shouldn't that count for something?\" Ryan had finished, panting harshly.\n\n\"But Ryan, you're not the only one he wronged.\" The high priestess said quietly. \"The fact that you've forgiven him does not mean the other parties...\"\n\n\"You mean Luna.\" He'd growled. \"I just want to talk to her please. Pick up your wands and do the circle thingy and summon her so I can talk to her. This has gone far enough.\"\n\n\"It doesn't work like that Ry...\"\n\n\"Then how the fuck does it work?\" He'd bellowed, watching the council members tense up. \"Help me understand because I'm tired of this crap. Where do you get off fucking up someone's life...\" Ryan saw relief on the faces of the council members when he heard the door of a car slam shut outside. He smelt her before she entered. \"Please.\" He pleaded, unable to keep the desolation off his face. \"Just tell me what to do and I'll do it. I'll do anything.\"\n\n\"Ryan?\" Gloria hugged him from behind and rested the side of her face on his back. \"Easy honey.\" She crooned softly. \n\nRyan knew that she could feel him shaking. He'd covered his face in his hands and taken deep breaths. Then he'd heard Paige shout his name just before bursting naked into the council quarters. She'd obviously shifted to track him. Paige came to stand in front of him, removed his hands from his face and wiped at his moist eyes. Then she'd hugged him.\n\n\"I hear you hate nudity.\" She'd murmured into his ears. \"Take it as your punishment for waiting till I left the room, before putting your plan into motion. Do you think you're the only one who wants to murder these old farts?\" She'd hissed, and then added insincerely, \"sorry Mama G\", drawing soft laughter from both him and Gloria. \"Anyway, you shouldn't even see this as punishment. After all, this is a hot Triple B body.\" She'd purred.\n\n\"What's a triple B?\" He'd asked before he could stop himself.\n\n\"Brunette, boobs, and buns.\" Paige had purred and then burst into laughter when he blushed. \"You look so damn adorable when you blush.\" She'd teased.\n\nIn the end, he'd apologized to the council members and followed Gloria and a still proudly naked Paige, out. \n\n\"Next time you feel like confronting the council, talk to me first.\" Gloria had said as she sped towards the mansion. \"Please?\" \n\n\"But I only wanted to make a request.\" He'd groaned. \"I want him back.\" He'd added in an anguished whisper.\n\n\"All in good time, handsome.\" Paige had murmured in a weird voice. \"All in good time. Let's just get this Alpha threat out of the way first...\"\n\n\"Paige, don't you dare do anything stupid.\" Gloria had growled. She'd later told him that she'd known the feisty woman since she was a baby. And she knew how headstrong she could be. \n\nWhen Paige said nothing after Gloria's warning, the elder had actually stopped the car and turned to look at the naked beauty sitting in the back seat with stern eyes. \n\n\"Paige?\" The warning in Gloria's voice couldn't be masked or ignored. \"What are you planning on doing?\" But Paige wouldn't respond. \"If you don't answer me now, Paige Harrington so help me God, I'll...\"\n\n\"Alright, alright I won't do anything stupid. Jeez.\" Paige had murmured but he could see from her eyes that she hadn't meant it at all. \n\nShe'd later admitted to him that her plan was to kidnap the council members who had been part of the circle during Jeremy's sentence and scare them into somehow getting Luna to bring Jeremy back. Ryan couldn't see how that plan could be successful but at least it was a plan. He'd tried talking to the council and it hadn't worked, right? Maybe Paige's way would yield a better result.\n\nRyan had never gone back to the council again, however. He felt helpless. He sometimes wondered whether they'd really cloaked his pain because there was nothing painless about missing Jeremy. But deep down, he knew they had because he remembered how he'd felt when Jeremy stayed away from him that time. He'd almost gone insane. He'd been literally sick. Maybe he needed that feeling now, Ryan couldn't help but think. Maybe that kind of pain would push him to unleash hell on the council and the ruthless Luna, to push them to bring his Jeremy back. \n\n\"Fuck.\" Ryan almost jumped out of his skin when the phone on his bedside table began to ring. He'd been so lost in thought the sound of the phone had sounded abnormally loud. He placed the framed photo on his chest and picked up the phone. It was Clara.\n\n\"How's my favourite alpha doing this morning?\" Clara purred, making Ryan smile. Some of the pack members referred to him as alpha because they said being the alpha's mate made him an alpha too.\n\n\"I'm good Clara. How about you?\"\n\n\"Couldn't be better.\" Came her cheery voice. \"Paige said to tell you she's on her way up.\"\n\n\"Okay. I'm up.\" Ryan said, wondering where Paige was coming from. \"Thanks.\"\n\nSince Jeremy left, everyone who came to the suite to see Ryan made it a point to announce themselves first. Even after Clara alerted him, they would still announce themselves by pressing the bell at the entrance of the suite before they actually entered. When a surprised Ryan had asked them why the change, Philip had told him how Jeremy had left a strong warning the day he'd left, that no one was to barge into that suite without alerting him first. And that was the exact moment Ryan knew without a doubt that he'd lost his heart to his mate. That night he'd cried himself to sleep. He wished he'd been able to tell Jeremy that he loved him too when he'd told him the day he left. Maybe knowing that he loved him too would have made Jeremy's pain more endurable. But he'd been so shocked at the words, he'd literally gone speechless. To know he was madly in love with his mate and his mate didn't even know... How fucked up was that?\n\nWith a sigh, Ryan left the bed and went to open the door. By the time the elevator opened on his floor, he was leaning against the door, waiting for Paige. She stepped out with her arms full with breakfast. Ryan couldn't help the grin that brightened his face when he saw the name on the paper bags. His favourite breakfast joint.\n\n\"Somebody likes what he sees.\" Paige drawled, landing a loud smack on Ryan's cheek. \"Just woke up huh?\"\n\n\"Uh-huh. Why didn't you call me to go with you?\" Ryan asked, closing the door behind them. \n\n\"Because I knew you would be sleeping and didn't want to disturb you.\" Paige answered, depositing her goodies on the dining table. \"Tell you what, why don't you go take a shower whilst I set this up?\"\n\n\"Alright, let me just fix the bed...\"\n\n\"I'll do it.\" Paige cut Ryan off.\n\n\"Paige...\"\n\n\"Go on, go on.\" She waved him away with her hands. \"Get out of here before I drag you in there myself and give you that bath.\"\n\nThat got Ryan rushing towards the bathroom. But before he got to the bathroom door, he turned back and went to give Paige a fierce hug. Then he ran to the bathroom to do as he'd been told. He and Paige had gotten very close since Jeremy's departure. He'd woken up the morning after Jeremy incarceration to find Paige, busily arranging his stuff in Jeremy's suite. By noon, she'd converted his room into a state-of-the-art study. Ryan had been pleasantly shocked. When he'd expressed his gratitude, she'd only shrugged and told him she'd needed something to occupy her so she wouldn't drown herself in the misery that was threatening to swallow her up. They'd become fast friends. Maybe it was because she'd started lecturing in his school but they virtually did everything together and he'd grown to love her so much. Though she was like his best friend, she acted like a mother hen around him. She would sometimes call him in the middle of the night just to check up on him. And if he told her that he couldn't sleep, she would come over and sit with him till he slept. \n\nPaige had become even fussier over him since Ryan told her, about two weeks after Jeremy left that he had a niggling feeling he was being watched. Paige never left his side for more than an hour after that. The only times she felt comfortable enough to leave him for longer hours was when they were within the safety of the pack house. Ryan hadn't been surprised when she'd actually moved onto his floor, claiming she just wanted to keep him company till Jeremy got back. He knew better. He didn't have to be a genius to know that the feisty beauty was only watching out for him. Ryan didn't mind at all since he loved being in her company. He adored Paige Harrington. \n\nWhen Ryan went back into the room, the bed looked temptingly immaculate and Paige was sitting at the dining table with a glass of juice in her hand. He quickly went to the closet, got dressed in jeans and t-shirt and then went back to the bathroom to hang his towel.\n\n\"Couldn't wait, could you?\" Ryan gave a mock growl as he took a seat beside Paige.\n\n\"Damn, this croissant is just sinful, Ryan.\" Paige moaned as she bit into the buttery, flaky, pastry.\n\n\"I can see that.\" Ryan chuckled, reaching for a custard-filled doughnut with maple glazing...his favourite. \"I almost don't want to bite into this.\" He moaned. \"It's so beautiful it should be hanging on a wall.\" \n\nPaige laughed as she poured some hot chocolate for Ryan. \"Blow on it before you drink it.\" She warned. \"It's hot.\"\n\n\"Oh this is so good.\" Ryan closed his eyed as he savored the yummy sweetened dough in his hand.\"\n\n\"I know right.\" Paige chuckled. \"Ate one whilst you were in the shower. It's better than sex.\" \n\n\"No it's not.\" Ryan countered, taking a sip of his hot chocolate. \"Two totally different feelings. Both pleasurable I admit. But whilst one gives tasty pleasure, the other gives a mind-boggling, explosive pleasure.\"\n\n\"I see he redeemed himself.\" Paige smirked, looking at Ryan teasingly from beneath her lashes.\n\n\"He sure did.\" Ryan murmured, feeling a delicious shiver run through him at the thought of how Jeremy had felt inside him. His blush gave away what he was thinking.\n\n\"Ohh someone's mind is in the gutter this very instant.\" Paige purred teasingly. \"That good huh?\"\n\n\"You have no idea.\" Ryan breathed, completely lost in some erotic trip down memory lane. \"When I think of the way he takes me... The way he would suddenly slow down, right in the middle of a hard fuck, look deeply into my eyes with those beautiful blue eyes, and then slowly close the distance between our mouths and then start kissing me passionately. It literally makes my toes curl.\" He whispered. \n\n\"Oh shit!\" Paige gasped, making Ryan's head shoot up. He'd obviously forgotten he wasn't alone.\n\n\"Oh my god, I'm sorry.\" He blushed even harder, making Paige laugh.\n\n\"Hey don't be.\" She leaned back in her seat and looked at Ryan with a wide grin. \"I must admit you're making me crave cock though.\" She rasped.\n\n\"Oh, so you've...\"\n\n\"Been there, done that.\" She said dryly. \"Good to know you got it good.\" \n\n\"He's amazing.\" Ryan murmured. \"God, I miss him.\"\n\n\"I can see that.\" Paige grinned. \"I don't know about you but thinking along those lines would be way better than...you know...\"\n\n\"I know.\" Ryan said softly. It sure did feel nicer thinking about his steamy sessions with Jeremy than dwelling on the pain he knew his mate was going through. \n\nSurprisingly, he hadn't had his usual sexual urges since Jeremy's departure. Yes, he did grow hard whenever he thought about their final day, but it never pushed him to seek relief as he normally would. That was rather strange, taking into consideration the fact that he was naturally highly sexed and needed frequent release.\n\n\"Do you love him?\" Paige asked quietly. She lowered her cup of tea and watched as beautiful green eyes rose to meet hers. The unguarded look in those eyes literally stole her breath.\n\n\"I'm madly in love with him Paige.\" Ryan whispered. \"And I fall harder and deeper with each passing day.\"\n\n\"You should have told him that day.\" Paige said, lowering her eyes to stare into her cup. \"It would have been good for him to hear that.\"\n\n\"I didn't know then, Paige.\" Ryan's voice was quiet and filled with regret. \"Even if I had, I don't think I could have uttered a word after that bombshell he dropped. You see, no one has ever told me they loved me before. Not even my mother, though I knew she did. You have no idea how it felt like to hear those words from him.\" He sighed and took a sip of his hot chocolate. \n\n\"He's crazy about you.\" She grinned. \"But then, you already know that so...\"\n\n\"The feeling is mutual.\" Ryan responded shyly. For some reason he was feeling tingly all over just talking about his mate. \n\n\"Do you ever dream of him?\"\n\n\"Wish I could say yes but since he left, never.\" Ryan took a sip of his hot chocolate. \"I'm sure that whatever they did to me has taken that possibility of dreaming about him away.\" He muttered. \"If only I could see him in my dreams...touch him...talk to him...\" He gave a deep sigh. \"On the other hand, it might be too painful to bear. I don't think I can handle seeing him and then waking up to nothing. Maybe it's for the best.\" He sighed.\n\n\"But you want to.\"\n\n\"God, yes.\" Ryan groaned. \"But...\"\n\n\"Are you...\" Paige started to speak but trailed off when her cell phone began to ring. \"Lip?\" She reached for another croissant. \"Yes, I'm with him.\" She listened for a moment, frowning at a point. \"We'll be there.\" She hung up and got to her feet.\n\n\"Is there a problem?\" Ryan asked, taking in Paige's demeanor.\n\n\"I think so.\" Paige started packing what was left of their breakfast, their conversation forgotten. \"We're all to converge in meeting room two in ten minutes.\"\n\n\"Who and who?\"\n\n\"You, me, Lip, Stan, Mama G, Dad, Deloris, George, Pete...you know George and Pete don't you?\" \n\n\"George is the head hunter right?\" At Paige's nod, Ryan smiled smugly and added... \"And Pete is the head assassin.\"\n\n\"Good job.\" Paige moved towards the cute kitchen in the suite. \"It's an emergency meeting of sorts. All the other Betas will be there too.\" \n\n\"Whatever it is must be serious.\" Ryan murmured, following Paige into the kitchen. \"Why do I have to be part?\"\n\n\"You're the alpha's mate, Ryan. You need to know what's going on.\" Paige explained as she washed her hands.\n\n\"Philip is the alpha Paige.\"\n\n\"Lip is only acting.\" Paige sighed. \"When will you get it into that head of yours that being an alpha's mate makes you an alpha too? Come on, let's go.\" Paige grabbed her cell phone off the dining table. \n\n\"Philip is doing a brilliant job.\" Ryan shut the door behind them.\n\n\"I haven't said he's not. In fact, I've been told he's actually evolved into a real alpha and that's great.\" Paige said, steering Ryan towards the stairs since the meeting room was on the eleventh floor which was right beneath their floor. \"It happens sometimes. Jeremy can either keep him on or assign him to another territory when he gets back.\"\n\n\"I'm happy for him.\" Ryan looked thrilled. \"But I don't think those two would want to live apart.\" He chuckled.\n\n\"I know right.\" Paige laughed. \"Stan would hit the roof 'cause that would mean he'd have to divide himself into two.\"\n\n\"Did somebody mention my name?\" Stan shouted with a mock scowl just as they got onto the eleventh floor.\n\n\"You mean Stanislav?\" Paige asked innocently and promptly burst into laughter when Stan slowly extended his middle finger.\n\n\"Will the lady kindly sit on this, please?\" Stan asked, making Ryan laugh too. \"You good, Ryan?\" He asked, drawing a laughing Ryan into his arms.\n\n\"Yeah, Stan. You?\"\n\n\"Been running around like a dog chasing its tail, thanks to those alpha killers.\" He growled, pushing open the door to the meeting room. \"When we finally catch up with those bastards, I'm going to suffocate them in their own shit.\"\n\n\"Ryan?\" Ryan heard Gloria call his name just as he was about to enter the meeting room. She and Joel had just stepped out of the elevator. \"I didn't see you the whole of yesterday. I've missed you.\"\n\n\"I've missed you too mum.\" Ryan moved towards Gloria, laughing at the contented look that appeared on Gloria's face at his words. \n\nThe joy that always appeared on the face of Jeremy's mum whenever Ryan addressed her as mum, never ceased to bring an answering joy into Ryan's heart. Gloria had told him before he'd mated with Jeremy that she didn't want him to address her as Gloria after fully mating with her son. Though he'd been devastated after Jeremy's departure, Ryan had remembered Gloria's words and started referring to her as mum. And he would never forget the look on Gloria's face that first time. \n\n\"Paige and I got back very late last night.\" Ryan said, giving Gloria a bear hug. \"Didn't want to come and disturb you.\" He held Gloria at arm's length to admire her gorgeous outfit. The woman had style. \"Damn woman, you look fine.\" He murmured, making Gloria laugh.",
        "\"Aw stop it.\" Gloria took Ryan's hand into hers and turned him towards the meeting room. \"You work too hard.\"\n\nRyan sighed. \"I need to, to get my mind off... Hello Uncle Joel.\"\n\n\"How are you doing Ryan?\" The elder asked, giving Ryan a sympathetic look.\n\n\"Can't complain, Uncle.\" He murmured. \"I literally can't.\" \n\n\"Hey, hang in there son.\" The elderly man patted Ryan on the back. \"So...have any idea why we're here?\" Joel asked as they entered the meeting room.\n\n\"Nope. No idea.\" Ryan responded, smiling at an already seated grim-faced Deloris, Camilla's warlock mother and a member of the council. \n\nRyan, Joel and Gloria went round, greeting and hugging those who were already seated. The room was supposed to be the smallest meeting room in Jeremy's mansion. Basically, it was a boardroom which had exquisite modernist furnishings and was equipped with a projector and polycom, perfect for delivering messages during meetings. The meeting room seated a maximum of twenty people. Thirteen people currently sat around the huge mahogany table, with Philip at the head. When Gloria got to Paige, she leaned down and asked with concern;\n\n\"How is he doing?\"\n\nPaige smiled. \"He's okay Mama G. Did you know he's actually never dreamt about Jer since he left though?\" Paige asked curiously.\n\n\"He can't.\" Gloria responded firmly. \"That will mess with his head. Cause him too much pain. We have to prevent that from happening.\"\n\n\"Yeah but...shouldn't he at least be able to feel some...pain?\" Paige muttered. \"I mean, is all this shielding really necessary? I can't help but feel he's being robbed of some of the important emotions in life that connects us to our human soul.\"\n\n\"You have a point there, honey.\" Gloria sighed. \"But Jeremy didn't want him to feel pain. Besides, he does feel, doesn't he? He misses him.\"\n\n\"It's not the same thing.\" Paige groaned.\n\n\"It is.\" Gloria countered. \"It's only that the intensity has been reduced, thereby eliminating the pain. Remember, we don't know the level of powers that he wields. One can't really tell what he'll do if he's in pain. Remember the portal? For all you know, he might be worse than the Ojah we already have on our hands. Think about it.\" Gloria kissed Paige on the cheek and moved on.\n\nBut from the skeptical look on Paige's face, she didn't look convinced by the elder's explanation. Had it even occurred to any of those uptight elders that Ryan feeling pain, might rather lead to something positive, Paige thought. With a sigh, she turned to look at her brother who was loudly clearing his throat to get everyone's attention. She would talk to Gloria again after the meeting.\n\n\"Thank you all for coming.\" Philip began. \"We have a big problem. What we all thought was a war against the werewolf community just became a personal pack problem.\" He paused to look at all the faces around the table. \"You all know how we've all been trying to trace who is behind the attacks. Anytime we think we have a solid lead, we get thrown off. The best trackers in all the various packs in the world came together and tracked our attackers to where we were sure they were. But what did we find? A stretch of bare land. It was obvious we were up against a great force. Well, now we know who it is. I'm sure the old folks amongst us have heard of the Wyatt Clan.\"\n\nGloria gasped. \"Shit!\" She muttered just as Joel swore darkly.\n\n\"Yes. They are the ones after the strong alphas. I say the issue just got personal because they've kidnapped one of our own. Camilla. She was kidnapped about three days after Alpha Jeremy travelled.\" \n\nNot everyone around the table knew the exact whereabouts of Jeremy. He sometimes took unannounced trips since as second in command to the head of all alphas in the world, he had other duties. So no one questioned his absence. Besides, Philip always managed the affairs of the pack just fine so there was no problem at all. At Philip's words, all eyes turned on Deloris.\n\n\"Why haven't you said anything till now Del?\" Gloria gasped but the warlock didn't even raise her head to acknowledge the question.\n\n\"I'll explain everything Mama G.\" Philip said. \"The Wyatt Clan kidnapped Camilla to blackmail Deloris. They wanted Jeremy but couldn't find him anywhere. So they decided they needed an insider to help them. And what better person than a fellow warlock who knew all about how nasty they could be? She's not supposed to tell anyone about the kidnap otherwise Camilla dies.\"\n\n\"Oh my god.\" Gloria's hand flew to her throat.\n\n\"They've sorta tapped into her brain to ensure they know immediately Deloris tells. Camilla was made to apply for leave from the hospital so no one thinks there's foul play. Deloris has been trying to come up with a spell that would shield her brain. She's...\"\n\n\"Hold it, hold it...\" Stan rasped, cutting Phillip off. \"You mean it's taken you three months to come up with a fucking spell?\" His question was directed at Deloris, who winced at the disbelief in Stan's voice. \"I mean since we were kids we knew that spells are Deloris' specialty.\"\n\n\"If you could just allow me to finish, Stan.\" Phillip said calmly. \"I did say they'd tapped into her brain. To work on a spell, she had to use her brain, right? So she had to be extra careful in order not to be detected. She's managed to shield her brain long enough to write down what we need to know down. She hopes we can rescue Camilla before the Wyatt Clan catches on. We have to move fast. She can write down answers to whatever questions we have for her.\"\n\n\"Fuck.\" Pete, the head assassin growled. \"What are we waiting for if she's already written down where those fuckers can be found?\" He sounded pissed. \"Just point us in the right direction. We have to hit those bastards hard.\"\n\n\"We have to plan before we move Pete.\" Joel rasped. \"This is the Wyatt Clan we're talking about son. If we don't proceed cautiously, we will be wiped out before we say Jack. Now what I want to know is...\" He turned to look at Deloris. \"How sure are you that this spell of yours works? Wouldn't want that bloodthirsty bunch to do anything to Camilla. God knows Reynard Wyatt never bluffs.\"\n\n\"And that's the scary part, Dad.\" Philip said with a deep sigh. \"She doesn't. She needed more time to make sure it works but it looks like she doesn't have any choice but to act now. You see, the clan has decided that if they take Ryan, Jeremy will come back from wherever he's gone. So they're coming for Ryan.\" He turned to look at Ryan. \"Now I understand why you've felt like you're being watched. It must be them.\" He said quietly. \"What scares me even more is the fact that they seem to think that since Ryan is mated to Jeremy, Jeremy's blood runs through him and therefore they can use Ryan for their silly ritual even if they don't get Jeremy. And that is what pushed Deloris to risk her daughter's life by spilling the beans. She's not a hundred percent sure her spell will work.\"\n\n\"We have to move now before anything happens to Camilla.\" Stan breathed. \n\n\"We sure do.\" Phillip nodded. \"At least thanks to Deloris, we know exactly where to find them. They can no longer fool us with all that cloaking they've been using to throw us off their location. In the meantime, Ryan will have to be sent to a safe...\"\n\n\"They want me, right?\" Ryan spoke up. \"So why don't we take me to them?\"\n\n\"No, Ryan.\" Gloria said sternly. \"If anything happens to you...\"\n\n\"Hold it, Mama G.\" Phillip quickly cut in. \"Guys, we need to get ready to move. Dad, Mama G, Paige, Stan and Deloris can you kindly wait behind so we can quickly decide on what to do with Ryan, whilst the rest go and get ready?\"\n\n\"Good.\" Pete growled as he got to his feet. \"Those stupid warlocks are going down.\"\n\n\"That's what I'm talking about.\" Stan chuckled, slapping his raised palm against Pete's. Warriors and Assassins had a lot in common. They both got off on violence. \n\nWhen the others left the meeting room, Philip got to his feet and addressed Ryan.\n\n\"Now listen to me Ryan.\" He began. \"The last place we can take you is where there is bound to be violence. If touchwood, you die, that's the end of Jeremy. That will be the fastest assurance to us that he's not going to return to us.\"\n\n\"And if you get physically hurt in anyway, he's going to feel it.\" Gloria added. \"We can't add that to his pain.\"\n\n\"What?\" Ryan gasped, staring at Gloria. \"What do you mean he's going to feel it?\"\n\n\"It was his wish, Ryan.\" Gloria said quietly. \"His wish was to give you his mark. But my son did have his own conditions. By giving you that mark, he was to automatically bare any physical pain that you're meant to feel.\"\n\n\"What the fuck!\" Ryan whispered.\n\n\"Your emotional and mental pain was cloaked but not your physical pain. Everybody feels physical pain at a point, right? Not a big deal. But Jeremy wouldn't even accept that. He insisted that he wanted to bare any physical pain of yours.\"\n\nRyan suddenly understood why he hadn't felt any physical pain in months. He clearly remembered that time he'd stretched and felt that familiar spasm in his thigh that was usually meant to be accompanied by pain. After all, muscle pulls were meant to be painful. He'd watched as his thigh had tightened rhythmically and wondered why he couldn't feel the usual pain. He'd been both fascinated and shocked at the strange development, thinking it probably had something to do with his new found power. And that wasn't the only time he hadn't felt pain when he knew he should. Damn Jeremy.\n\n\"Why didn't you tell me?\" The wretchedness in his voice couldn't be masked. \n\n\"If we had told you, you wouldn't have accepted his mark.\" Gloria said simply, watching Ryan's eyes fill with anger. \"Hey, calm down. For as long as you stay away from harm's way, Jeremy is okay.\"\n\nJeremy is okay? Really? Ryan couldn't feel pain but he sure as hell could feel anger. And at that very moment, he was so furious he felt himself shake. \n\n\"When you get to know that someone you love is going through so much unnecessary pain...\" Ryan's voice sounded dead, \"...pain that you could have prevented or reduced if you'd known about it, anger hits you hard. Anger floods. I'm flooded.\" \n\n\"Ryan please...\" Gloria groaned.\n\n\"From the way you talk about this Wyatt Clan, I believe you need all the help you can get.\" Ryan went on as if Gloria hadn't spoken. \"What's the use of power if you have it but can't use it when it's most needed?\" Ryan asked with a careless shrug. \"I guess we just have to make sure I don't get hurt or die, wont we?\" \n\n\"He has a point.\" Stan said.\n\n\"Shut up Stanislav.\" Paige growled.\n\n\"What? I think Ryan is exactly who we need for this battle.\" Stan insisted. \"You didn't see what he did to Katie, Slip.\" An admiring twinkle appeared in his eyes. \"Having him on our side will be a big advantage if those people are as ruthless as Deloris says they are. What's all this about anyway?\" His eyes turned onto the warlock. \"What does that clan need the blood and bone marrow of the top alphas for? Do you know why, Deloris?\"\n\nDeloris looked at Stan helplessly and gestured for a pen. But even as she was being handed a pen and a writing pad, Ryan felt something push him. He suddenly felt suffused with so much energy. Was it because he was angry, Ryan wondered. He couldn't help but observe that every time his power had manifested itself, it had been triggered by anger. Was that it? Did anger trigger whatever powers that he had? That wasn't a good thing, he frowned. But at that very moment, he had an urge to do something...\n\n\"Wait, Deloris.\" Ryan said, getting to his feet. \"I feel like trying something.\" He moved to sit beside Deloris. \"Please. I just want to try...\"\n\n\"Go ahead.\" The warlock said with a smile. She felt the power emanating from her alpha's mate and was curious to know what Ryan wanted to try. \n\n\"Thanks.\" Ryan murmured. \n\nAnd with everyone looking on with bated breath, Ryan reached up with both hands and held the sides of Deloris' head. Then he closed his eyes and willed whatever the Wyatt Clan had done to connect Deloris' mind to their radar, off.\n\n\"Oh my god!\" Deloris gasped. \"I can't feel it anymore. It's gone.\" She breathed. \"There's been this painful tightness in my head for the past three months. It started immediately after they told me that if I tell anyone, Camilla dies. Oh god!\" She began to cry, obviously overwhelmed by her feeling of relief. \"Oh god...\" \n\nRyan kissed her on the cheek and moved away from the seat to make way for Gloria, who gathered Deloris into her arms. The warlock sobbed out her joy and relief, continuously saying how grateful she was to Ryan. Gloria rocked her as she sobbed. As a mother, she knew how relieved the woman felt to know that her actions were not going to result in the death of her only child. \n\n\"Thank you Ryan.\" Deloris finally sat back and said with a breathless laugh. \"You have no idea how grateful I am.\" She stood and went to give Ryan a hug. \"I don't know how you did that but thanks. Now, what do y'all want to know?\" She laughed, making everyone laugh too.\n\n\"Why is the clan going to all this trouble?\" Stan asked.\n\n\"Before I answer that, I want all of you to know that I didn't tell them where Jeremy was. Fortunately, everyone knows that the council doesn't really keep tabs on an alpha's whereabouts so they believed me.\" She drawled, wiping at her eyes with a tissue Gloria gave her. \"Now to your question; The Wyatt Clan is the deadliest clan of warlocks that has ever been in existence. Know the usual myth where good always triumphs over bad?\" She waited till the younger people in the room nodded before going on. \"Well, that's usually not the case when good comes up against Reynard Wyatt and his clan. Hope you get the picture. There's no word to describe them. Over a century ago, there was a prophecy that Reynard Wyatt, the head of the clan, would be defeated by one of his offspring, which would lead to the end of his clan. Reynard killed all his six children after that prophecy and made sure he never fathered another child.\" At the collective gasps around the table, Deloris nodded. \"Yes, that's how ruthless Reynard is.\"\n\n\"And their mother allowed it?\" Ryan sputtered.\n\n\"What mother would?\" Deloris gave a humourless laughter. \"She raised hell when Reynard made his intentions clear to her. But she was no match for him. He killed her. But according to the prophecy, this is the year that his offspring is to defeat him. I knew about the prophecy but I didn't know it was this year. But his chatty, cocky, albino, hit man told me. I did cast a small truth spell on the idiot.\" She chuckled. \"According to him, although Reynard has made sure that there's no offspring to defeat him, he wants to fortify himself with a very potent potion made out of the blood and bone marrow of powerful alphas.\"\n\n\"Fuck.\" Phillip cursed. \n\n\"That potion is to give him an unlimited source of strength should any battle come his way. Werewolves are noted for their strength, ferocity and agility when it comes to battles. Reynard's plan is therefore to tap into that strength by using that potion as a link to all werewolves. He's not taking any chances. You guys are basically to become roadkill.\" \n\n\"Fuck me.\" Stan breathed.\n\n\"They were the ones who tried to attack the alphas at that conference all those years ago.\" Deloris went on. \"But thanks to Jeremy, they were not successful.\"\n\n\"What did he do?\" Ryan asked.\n\n\"He went Ojah on their arses.\" Paige said with so much pride.\n\n\"Which was very stupid because he didn't leave even one person alive for questioning.\" Gloria added angrily. \n\n\"He sorta didn't have the time Mama G.\" Phillip automatically came to his friend's defense. \"This is how it went down Ryan. As the conference went on, the alphas began to collapse one after the other for no reason at all. Jeremy got very weak. Knew he was going to pass out too but his Ojah took over. Every alpha in the conference room was out cold. Jer said he felt so much power surrounding them. He said it was bad energy. When he stepped out of the conference room, all the werewolves outside were dead. Then he saw about thirty men and women chanting. He turned all of them into ashes instantly. Fortunately, the alphas were okay.\"\n\n\"Wow!\" Ryan breathed.\n\n\"According to the albino, Reynard usually has an eye through which he sees everything whenever he sends people on missions.\" Deloris informed them. \"So he saw what Jeremy did and he knows just how powerful he is. He has studied him and his Ojah powers and thinks he knows how to render those powers ineffective when he eventually gets Jeremy. Knowing Reynard, I won't be surprised if he actually does know how. In a way I'm glad that Jeremy is not around. He would have gotten angry, attacked without thought, and probably ended up...\" She didn't complete the sentence but everyone in the room knew what she'd been about to say. \"Reynard has had years of practice. He's over four centuries old. He's powered himself with countless number of souls of both the innocent and the wicked. He is very powerful. I mean I pride myself on being a pretty powerful warlock. But compared to Reynard, I'm a toddler. The type of magic he uses can actually take good people and turn them dark. That's how powerful he is. If he says he can render Alpha Jeremy powerless, he can. But if for whatever reason Jeremy doesn't show, Ryan will be used because when a werewolf is powerful or unique in a way, it rubs off on their mates due to the mating process.\"\n\n\"But we didn't even go through the ceremony.\" Ryan pointed out.\n\n\"But you had sex, right?\" The warlock shot back.\n\n\"Oh they so did.\" Stan drawled, making Paige and Phillip burst into laughter despite their worry over Deloris' news. \"Everybody felt it too.\" He added teasingly, making Ryan and Joel blush whilst Gloria squirmed in her seat.\n\n\"That's all that's needed.\" Deloris said. \"They're going to use your blood to scry for Jeremy. And of course we all know they won't be able to locate him since he's nowhere on earth. They will probably give him some days to come after you. And if Jeremy doesn't show up, they're going to use you. Those people don't play Ryan. Human sacrifice to them is like taking coffee in the morning. It's not a big deal at all. And immediately they're able to complete the potion, they can channel the life force of all werewolves whenever there's battle, in order to ensure their victory. Succeeding in completing that potion therefore means you guys become their bitches. As you grow weak, they will grow stronger and stronger. Reynard needs that to win whatever battle that's coming. At least that's what he thinks. What becomes of your species doesn't really matter. Call it the annihilation of the werewolf species. Sorry but that man is a ruthless killer who'll stop at nothing to get what he wants.\"\n\n\"Well, neither will we.\" Ryan growled. \"Phillip, you have to take me.\" He rasped, feeling so angry. \"The mere fact that he wants to kill Jeremy...and can kill him if he wants to, gives me the right to face this Reynard guy.\"\n\n\"I can cast a general weakening spell when we get there.\" Deloris said. \"They can still use their powers but it will be weak so we can fight them. We won't stand a chance if we take that clan on whilst they're on their full magic.\" \n\n\"That's good to know.\" Phillip liked what he was hearing.\n\n\"But the spell will not work on Reynard.\" The warlock sighed. \"He's too powerful to be affected by my weakening spell. And if he survives our attack, he can restore everything. The clan's fortress...that's the seat of all their powers. For as long as that fortress stands, Reynard can always restore everything. It was built on a Spiritual Nexus that can be used for either good or evil. The Wyatt Clan, headed by Reynard, made it their home just to claim the Nexus for evil and it has been the seat of power for the clan. We need to destroy that fortress. And to do that, we need a really high level of power.\" She said quietly. ",
        "\"Dad?\" Philip addressed his father. \"What do you think?\"\n\nThe elder gave a deep sigh and reached for the hand of a worried Gloria. \"I have to agree with Ryan and Stanley, son.\" Joel said gravely. \"Ryan is our best bet. If we don't go after them, they will come after us. And we don't have the juice to face them as wolves. With Ryan and Deloris, we stand a better chance.\"\n\n\"Joel...\" Gloria gasped with a haunted look in her eyes. If anything happened to Ryan, she was definitely not going to see her son again. But more importantly, she didn't want to risk Ryan's life because she'd come to see and love him as her son too. And no mother would be okay with risking their son's life. \"Please don't allow this.\" She whispered shakily.\n\nJoel turned and wrapped his arms around the trembling woman. \"Remember the prophecy about Jeremy's mate?\" Joel murmured into Gloria's hair. \"It said he would be important to not only our pack, but to werewolves everywhere. We already know how powerful he is. What if he's meant to save all of us, honey? You have to believe. What we have to do is guard him. Be his protective shield and allow him to do what he can.\" By then, Gloria was crying softly.\n\n\"I'm so scared.\" She sniffled. \"He's so innocent. He's been thrust into all this supernatural stuff which is still so new to him. I may not get my son back, Joel. Ryan's all I have for now.\"\n\n\"Don't say that.\" Joel admonished. \"Jeremy will be back. You heard Deloris. This is the worst time for Jeremy to be anywhere on the face of earth. We both know how headstrong he is. He would have gone to face Reynard or been captured just as Sasha and co were had he been around. I shudder to think what Reynard would have done to him. Luna might not be so cruel after all.\"\n\n\"You think?\" Gloria muttered.\n\n\"Think about it, darling.\" Joel insisted. \"His incarceration might just be a blessing in disguise. Now let's go with them and make sure no harm comes to Ryan. That's the best thing you can do for both Ryan and Jeremy right now. Alright?\"\n\nGloria nodded. \"Alright.\"\n\n\"That's my girl.\" With a finger, Joel tilted Gloria's chin up. And right there in front of everyone, he gave her a light but sweet kiss that drew wolfish whistles from Stan and Paige, and chuckles from Philip and Deloris. \n\nRyan didn't react at all. He still looked so angry, upset and depressed. He obviously hadn't gotten over the realization that his mate was going through so much because of him. When Ryan felt Paige's hand on him he almost jumped out of his skin. He was so lost in thought he hadn't even seen Paige move towards him.\n\n\"Come here, baby.\" Paige murmured as she hugged Ryan to her, tightly. \"I know you're upset. But know that you would have done same had you been in Jer's shoes. When you love someone, you want to do everything in your power to keep them safe and comfortable.\"\n\n\"Yeah?\" Ryan asked quietly. \"Then I'm sure you know how I feel right now. Not only am I unable to keep the one I love safe and comfortable, I'm actually the cause of his pain and discomfort. Just great.\" He muttered.\n\n\"Aw Ryan.\" Paige sighed as she rubbed Ryan on the back. She knew that Ryan was hurting but couldn't come up with anything better to say to soothe him. \"This whole thing is fucked up. Come on, let's go get ready. Time to kick arse.\" They both stood up and turned towards the door.\n\n\"Ryan?\" Gloria called out shakily and started towards Ryan and Paige. \"I'm so sorry, baby.\" She said when she got to them. \"Come here.\" She drew Ryan into her arms.\n\n\"He's your son.\" Ryan muttered. \"Why did you let him do it?\" Ryan's voice was filled with so much anguish. \"I feel terrible.\"\n\n\"You know Jeremy, honey.\" Gloria said softly. \"When he makes up his mind, nothing sways him. And when it's about you, no one has the right to attempt to sway him. I would have done same if my mate's comfort was on the line. Don't be angry. It's what it is.\"\n\n\"I'm not happy with it but I get it.\" Ryan sighed. \"Let's go get those sons of bitches before that crazy mate of mine walks out into a world without werewolves. That would definitely kill him if nothing else does.\" He squeezed Gloria lightly and then stood back. \n\n\"Still angry?\" Gloria smiled up at her gorgeous son-in-law.\n\n\"Hell yeah.\" Ryan growled. \"But still love you to bits.\" He grinned. \"Going up to get ready.\"\n\n***\n\nPhillip, the acting alpha of Stanton Pack and his warriors stood at marked points around a large stretch of bare land. There were forty pack members, standing in groups of fives, with each group standing at a distance from the other. It was dawn and all was quiet. Apart from the alpha and his squad, there was no evidence of life on the land. After making sure that all the vantage points were covered, Alpha Philip raised a hand to signal someone in the group that was made up of four women and a man.\n\nDeloris saw Phillip's signal and nodded. She had in her right palm eight coins, each representing a group. Their strategy was to first rescue Camilla, bring down the invisible barrier shielding the fortress, and then attack. Camilla had to be rescued first because should the clan see or sense any intruders, Camilla would be killed. Although they didn't know the exact powers that Ryan had, the squad from Stanwood Pack hoped to use it to their advantage. Deloris had assured Ryan that she'd never felt so much intense energy as she was feeling from him. She believed that Ryan could do anything he set his mind on. On their way to the Wyatt Clan's hidden fortress, Deloris had therefore taken the opportunity to tell Ryan about some of the magical possibilities that she'd seen and heard happen in her years on earth. Her main aim was to plant those thoughts and possibilities into Ryan's mind, so he could use them during their face-off with the Wyatt Clan. She encouraged him to simply believe in himself and feel confident to try anything. \n\nDeloris' hope was that Ryan could somehow reach quietly into the invisible fortress and bring Camilla out before the real action began. It had been done before. And she just knew that Ryan could pull it off. If all went according to plan, The Wyatt Clan wouldn't know what hit them. The clan's oblivious state was the pack's strategic advantage. \n\n\"Ready?\" Deloris's question was directed at Ryan. \n\n\"Let's do this.\" Ryan breathed, pulling up his hoodie to cover his white tresses. \n\n\"Try not to get hurt honeybuns.\" Gloria said softly. \n\n\"That's the plan.\" Ryan grinned at the woman he'd come to love so much. \"Don't worry too much. Deloris has already seen to that, remember?\" \n\nApart from casting a general weakening spell over the Wyatt Clan, Deloris had insisted on casting an immunity spell on Ryan, to protect him and in extension, Jeremy. The immunity spell did not only make Ryan immune to physical harm, it also prevented him from being affected by spells, charms and potions. \n\n\"I'll still worry.\" Gloria gave a tremulous smile. \"That's what mothers do.\" She murmured as Ryan kissed her on the cheek.\n\n\"You look gangster.\" Paige grinned at Ryan.\n\n\"And you look like a dominatrix.\" Ryan shot back, making Paige laugh. \"Okay, I'm ready to penetrate this...whatever.\" He said gruffly. \n\n\"Stop saying penetrate.\" Paige drawled. \"It's a rescue mission not a sex act.\"\n\nKatie couldn't hold in her laughter at Paige's words. \"Seriously Paige.\" She laughed. \"All the best, Alpha.\" The warrior addressed Ryan. If anybody had the power to do what Ryan was about to attempt, Katie knew that it was her alpha's mate. After all, she'd been at the end of that power some months earlier. As her wolf dangled in the air...that day she'd gone to challenge Ryan, she'd felt Ryan's power. And it was like nothing she'd felt before. \"You can do this.\" \n\n\"Thanks Katie.\" Ryan gave Katie a smile.\n\n\"Remember, be conscious of your surroundings at all times.\" Deloris instructed. \"Yes, we are taking them by surprise but we can't underestimate Reynard Wyatt. Now concentrate.\" \n\nRyan bowed his head and reached out to Camilla with his mind. His aim was to zero in on her exact location inside the fortress. That was real easy. He could see Camilla sitting on a narrow bed inside a dark room. He pushed his thoughts onto her.\n\n'Camilla, it's me, Ryan.' Ryan said on the mind-link when he connected with Camilla, his mate's ex-lover who had once handed him his arse.\n\n'Oh my god, Ryan...' She screeched. 'How...'\n\n'Don't do anything to give yourself away Camilla. Are you alone?'\n\n'Yes. I am.'\n\n'Good. Just stay connected. I'll be there soon.'\n\n'Oh no, Ryan don't.' Camilla gasped. 'These people are dangerous and ruthless. I don't want something to happen to you on my account. Jeremy will kill me. Just don't come here... \"what the fuck?\" Camilla gasped out load when Ryan suddenly appeared beside her.\n\n'Shhh...' Ryan still communicated on their mind-link. 'Okay, stand up. We just have to wait for your mother to bring the barrier down. Then we will teleport outside the fortress.'\n\n\"How did you get in if the barrier is still up?\" She hissed, looking completely shocked.\n\n'Don't talk out loud. I don't want them to get suspicious.' Ryan groaned. 'And I'm not here. I've astral projected here that's all. But when that barrier comes down, I can just teleport you out of here.' Ryan had projected his consciousness into an astral form outside his body, to enable him go through the magical barrier around the fortress, undetected just as Deloris had directed. \n\n\"What are you?\" Camilla breathed.\n\n'What's so difficult about not talking out loud?' Ryan looked both exasperated and amused at the same time.\n\n'Sorry.' Camilla said. 'What now?'\n\n'We wait.' Ryan said and then opened his mind-link to every pack member on the property. 'We're ready, Deloris.'\n\n***\n\nOutside the magically invisible fortress, Deloris turned to look at Ryan who stood beside her with his head bowed. She couldn't suppress her smile of admiration. She recited some words onto the coins in her palm and threw all against the barrier with all her strength. And instantly, the fortress of the Wyatt Clan was revealed in all its gargantuan glory.\n\n\"Now, Ryan.\" The warlock commanded.\n\nCamilla appeared before them instantly. She immediately threw herself into her mother's arms and held on tightly. But when Deloris hugged her daughter back, she flinched and groaned.\n\n\"Oh god, what did they do to you? Where does it hurt?\" Deloris held her daughter at arm's length and stared at her with eyes filled with pain.\n\n\"You mean where doesn't it hurt?\" Camilla drawled. \n\n\"They will pay for this.\" Deloris vowed.\n\nAnd even as mother and daughter embraced, all the werewolves except for Phillip, Gloria, Paige and Ryan, shifted into ferocious looking wolves.\n\n\"Move!\" On Phillip's command, the wolves charged onto the compound.\n\n***\n\nThe Jackal's head shot up from the herbs in front of him when he heard the name that fell from the boy's lips. He turned his head to stare at twenty-one year old Troy who was relaxing in a lazy chair with his eyes closed. The boy was an early riser. That was because of what he was...a werewolf. But he didn't even know that himself, thanks to the Lord Command. He was supposed to be down in the dungeon with the other prisoners but Reynard had instructed that he should rather live amongst the warlocks for closer monitoring. \n\nAccording to the Lord Command, Troy had a really powerful aura around him and was therefore very important to him. Since he was kidnapped and brought in as a child, he'd mingled with the warlocks and been taught whatever he needed to know. The Jackal knew that the Lord Command would relish sacrificing Troy when the time suited him. He claimed that the more powerful the soul, the sweeter it was to absorb them. So Troy was bound to be sacrificed at a point but till then, he was one of them. \n\n\"What did you say?\" The Jackal asked, watching as Troy stretched and yawned. \n\n\"Deloris.\" Troy repeated. \"I just heard someone say, 'we're ready, Deloris'.\"\n\n\"Heard how?\" The Jackal's eyes narrowed. In his line of work, there was nothing like coincidence. He only knew one Deloris. And she was the warlock whose daughter he'd kidnapped to blackmail her into divulging information about her alpha. \n\nTroy shrugged. \"I just heard it in my head.\" He turned his head to look at the albino. \"Why do you look like you've seen a ghost?\" He never knew the albino could actually look whiter than he already did.\n\nThe Jackal stared at the boy, hoping that somehow, there was nothing to what Troy had said. Then he suddenly heard it... the growls and the screams. \n\n\"Wolves.\" The Jackal gasped. \"Stay here.\" He instructed Troy and then dashed out of the room.\n\n***\n\nReynard Wyatt looked up when the door to his sanctuary burst open. He was in there, going over the final plans with his Trusted Seven as he called his top strategists. The best time to come up with strategies was at dawn, when their minds were relaxed and fresh after a good night's sleep.\n\n\"I thought I told you not to disturb...\" \n\n\"We're under attack, Lord Command.\" The Jackal said urgently.\n\n\"How...\"\n\n\"Wolves.\" The Jackal rasped. \"They're on the compound. I don't know how they got in. Somehow, our strength and magic has gotten very weak. Some of our people are already dead.\"\n\n\"Go out there and find out who they're working with.\" The Lord Command roared. \"Those mangy mutts could not have penetrated our shield unless they had help from a warlock. I don't think someone from within can betray us. That warlock you're working with...\"\n\n\"It can't be her, Lord Command.\" The Jackal couldn't look his Lord in the eye. \"She wouldn't risk the life of her only child.\" He sure as hell couldn't tell the Lord Command that his contact might have caused their current predicament. That would be like signing his and his wife's death warrant.\n\n\"Maybe she would.\" Reynard Wyatt barked. \"People can be stupidly loyal. Seen the girl?\"\n\n\"I will check up on her.\" The Jackal turned to go.\n\n\"Bring her to me, if she's still alive.\" Reynard bellowed. \"Petra, Zack and Frank...to the heights.\" He instructed three of the seven seated around the table. \"Try to get the power strengthened.\" The three instantly shimmered and disappeared from the room. Then the Lord Command looked at the remaining faces around the table and gave a sinister grin. \"Let's show those werewolves what we do with dogs who don't know their place.\"\n\n***\n\nOutside, it was a blood bath. The wolves tore to pieces any warlock they came into contact with. The warlocks somehow realized that besides the fact that their sleep had been rudely interrupted, their powers were not working as they were supposed to. They knew that their best bet was the use of fireballs. And those deadly balls rained down on the wolves. Unfortunately for the warlocks and fortunately for the wolves, the warriors of Stanwood Pack received their training from the very best. If you were taught how to fight by an alpha who is an Ojah to boot, you don't have any choice but to be smart and fast. The warlocks had the shock of their lives. The wolves were always so quick to dodge those deadly balls, the warlocks would have applauded their skill if they could take a time out. About four wolves got injured but they were still strong enough to fight. Some of the warlocks ran, others cloaked themselves. But thanks to the spell that Deloris had cast, cloaked warlocks couldn't stay cloaked for long. They just weren't that strong.\n\n'Group two, take the west wing.' Stan screamed on the link of the werewolves. 'Don't leave any of those psychos alive. Vincent, take the east wing with your team. I hear there are some prisoners in the dungeons down there. Release them. Hopefully, they're strong enough to help us.' \n\n'Roger that, boss.' Vincent responded as he charged towards the east wing with his team. They were having a blast.\n\n'Pete, let's take the south wing?' Phillip bellowed onto their link. 'Looks like the majority of our filthy friends are hiding out over there.'\n\n'Sure.' Pete responded as his wolf charged forward. 'I saw a young boy throwing fireballs from that side. He's the one who wounded Malik and Alex. His arse is grass.'\n\n'I'm coming with you guys.' Stan rasped as he jumped and tore out the throat of one scary looking warlock who was in the process of levitating off the ground whilst reciting some incantations.\n\nBut just as Phillip, who was still in his human form started forward, Ryan appeared beside him.\n\n\"Deloris and I are going after Reynard.\" Ryan informed Phillip. \"Gloria, Paige and Camilla have already joined the fight.\"\n\n\"Okay. Be careful at all times, Ryan.\" Phillip advised. \"Stay close to Deloris. She's experienced and knows how these people operate. Get out if it gets too hot.\" He growled. \"Promise me...\"\n\n\"Watch out.\" Paige, who was also still in human form screamed, making both Ryan and Phillip look up just in time to see two purplish fire balls hurtling towards them.\n\nRyan raised his hand and sent the balls right back to the warlock who had thrown them, causing her to explode instantly. Just at that time, a young boy with a full crop of blond hair stepped forward with a big fire ball in his hand. His intention was clear.\n\n'The boy.' Pete screamed and charged towards the boy. 'I'm going to enjoy this.'\n\nStan charged towards the boy at the same time. Phillip turned his head to look at the boy and froze when their eyes locked on each other's. The boy, who couldn't seem to tear his eyes off Phillip, seemed to have completely forgotten about the fireball in his palm. For Phillip, time stood still. Although the boy arrested his attention, he could see from the corners of his eyes that Stan and Pete's wolves were almost upon the boy. And that was when he screamed for the very first time in an alpha's voice;\n\n\"Don't hurt him.\" An alpha's command. The wolves froze. \n\nThe boy, who'd been the target of both wolves, looked so focused on Phillip he seemed not to notice the confusion around him. When he heard someone mention the name of the gorgeous man who had stopped the wolves from attacking him, he finally tore his eyes away from the man and looked down at the fireball in his palm. He suddenly didn't feel like using it... couldn't bring himself to hurt that man standing about ten meters away from him. He knew that Mary would be pissed after all the trouble she'd gone through to ensure that he could handle a fireball without getting burnt. After all, he wasn't like them. \n\nTroy closed his palm and instantly put out the ball of fire inside. Then with one last look at the man whose eyes made his heart flutter inside his chest, he turned around and ran off.\n\n'What the fuck was that?' Stan growled on their link.\n\nPhillip turned his eyes from the spot the boy had disappeared and looked at his friend. \"He's not a warlock.\" He said aloud, simply.\n\n'So what?' Stan growled angrily. 'This is a battle, Lip. And everyone inside this fortress is an enemy. Well, except the prisoners. You heard what Deloris said. Their plan is to annihilate us. That boy has wounded...\"\n\n\"Let it go, Stan.\" Phillip said quietly. Too quietly. None of the pack members gathered around knew the struggle that was going on between Phillip and his wolf at that particular moment. In the end, however, the human won. He made his wolf understand that there were more important matters to handle which couldn't be ignored. The survival of his pack came first.\n\n\"Phillip?\" Ryan murmured.\n\n\"Don't ask.\" Phillip rasped. \"See you later.\" With that, the alpha shifted into a large grey wolf and charged towards the south wing. He was confused, he was restless, he was angry, and he needed to vent. What better way than to unleash terror on the people who wanted to wipe out his entire species? \n\nNo warlock was left standing in Phillip's wake.\n\n***\n\nThe jackal stared at the bed on which he'd expected to see Camilla and felt his heart drop. She was gone. That meant only one thing... His death. He'd assured the Lord Command that Deloris was under his control because he had her daughter. Not only was there no daughter, but it looked like Deloris had led the pack straight to them. Oh, his death was so assured. There was only one thing to do at that point. Get his wife and run!",
        "He closed the door, turned around and came face to face with a...sex worker? The Jackal didn't know what to make of the woman standing in front of him. She was dressed in a sexy black leather outfit and had a whip in her hand...like a dominant about to work on a submissive.\n\n\"You, my friend, are a hard one to find.\" Paige said in a husky voice. \"Going somewhere?\"\n\n\"Look lady, I don't know who you are or what you think you can do but trust me, you don't wanna go up against me.\"\n\n\"Is that so?\" Paige started circling around the sweating albino. Somehow she didn't think the cause of the man's terror was her presence. He looked really terrified. \"You look scared. Hmmm...\" She tilted her head and looked at the albino. \"I don't think a wicked soul like yourself is scared of a bunch of wolves. I think it's something more. What could it be? Who are you so afraid of, pray tell?\"\n\n\"You bitch.\" The Jackal hissed. \"Thank your stars for whatever you idiots have done to weaken the fold. I would have...\"\n\n\"Would have done what exactly?\" Paige looked amused. \"You think you can handle me?\"\n\n\"Oh I can handle you little girl. I've been doing this since before you were nothing but an itch in your daddy's pants.\"\n\n\"Oooh I'm shaking in my boots.\" Paige purred. \"Big words for someone who looks like you've already shit your pants. I still want to know what has you so spooked. I heard you're dangerous and cunning. Oh Deloris filled me in. Kidnapping the woman's only child. Now, that was a very wicked thing to do don't you think? Oh and she told me about how you used your...gift...I'd call it a curse but hey, if you think it's a gift, let's call it a gift. Anyway, back to what I was saying. She told me about how you actually changed your appearance to look like Camilla when you initially went to her, in order to get her guard down and get her exactly where you wanted her. What do you call that? Copy Cat? Wait, wait...I've remembered what she said. Glamouring.\" Paige looked like she'd won a quiz contest. Glamouring was the ability to change one's appearance to look like another person, though it could also be used to change a person's age or clothing.\n\n\"Alright, I'm out of here.\" The Jackal said and then began to shimmer into nothingness but Paige's whip flew so fast his world spun out of control. \"Oh fuck.\" He groaned from his new position on the ground. \n\n\"I don't remember saying you could go.\" Paige drawled. \"I'll like to have a...chat if you don't mind.\" Her smile was so sweet and innocent one might have thought she was talking about how great the weather was.\n\nThe Jackal groaned. He knew that the end had come.\n\n***\n\n\"What do you see?\" Reynard Wyatt asked his Seer who was deep in a trance. She was one of the seven seated at the table. \n\nReynard could hear the screams of his people outside but he wasn't worried because he knew that even if everyone perished, he could bring them back. He was that powerful. The most important thing was to stay alive. He knew that despite the determination and obvious strength of whoever was attacking the clan at that particular moment, nothing could happen to him. After all, he had to have a kid to get defeated, right? Well, he had none. But he still needed to know who had the nerve to attack his clan. And what better person to tell him than his Seer? Raj was an upper-level warlock who had the power to perceive the past, present and future events through premonition and divination. She'd served Reynard for centuries as his primary advisor and was very good at what she did. To say Reynard was shocked that Raj hadn't been able to predict their current situation would be a huge understatement. He planned on dealing with that later. At that moment, he needed to know who they were up against.\n\n\"It's the Stanwood Pack.\" Raj said in an eerie voice.\n\n\"Damn that albino.\" Reynard's angry voice rumbled through the room, rattling every loose object. \"No wonder he's still not back. Tell me, is Jeremy Stanton here?\" Something good could come out of all the chaos after all, Reynard thought. He needed Jeremy.\n\n\"No he isn't.\" Came a voice that made everyone turn to look towards the door. \n\nReynard Wyatt looked up and did a double take when he saw the young man standing inside his sanctuary. The fact that he was with a woman didn't really register in the warlock's brain. His attention was completely arrested by the white-haired, green-eyed man looking at him.\n\n\"Who...who the hell are you?\" The Lord Command actually stuttered. \"And how did you get in here?\" \n\nReynard's face was filled with shock. Shock that he hoped the people in the room would assume was due to the fact that the two people standing before them had actually managed to enter a warded sanctuary. The only way anyone who wasn't his close confidant could enter was if he allowed it. Could the man and woman standing in the room be gods, Reynard wondered. He hoped they were. Because that would make everything more...acceptable. \n\n\"Name's Ryan. I just heard you ask if my mate was around.\" Ryan responded quietly.\n\n\"Ryan?\" Reynard looked even more shocked. Then he gave a sigh of relief. For a moment he'd thought... Never mind what he thought. \"You mean the faggot who's mated to the coward Stanwood alpha?\"\n\n\"My mate is no coward.\" Ryan said icily, taking in the scene in the room. The four people in there were obviously having some sort of a meeting with the white-haired man who he'd assumed was the wicked Reynard. Couldn't they hear the battle raging outside?\n\nReynard gave a cocky laugh. \"Well, I thought so too but then...what brave alpha would up and run simply because his fellow alphas have been...killed?\" He looked at the faces around the table with mock surprise. \"Strange huh?\" Then he looked up at Ryan again. \"What kind of alpha allows his pack to go into battle without him?\"\n\nRyan shrugged nonchalantly. \"An alpha who thinks the battle in question is too...insignificant to waste his time on.\" Ryan replied.\n\nReynard Wyatt's eyes widened. Damn these cocky werewolves, he thought laughing uproariously. \"Listen boy, I admire your bravery and all but... You're just a small man who took a wrong turn in the theatre and somehow wandered onto the stage. Don't dare think yourself a player.\" He turned glassy green eyes on Deloris. \"You must be the warlock the albino was talking about. You obviously squealed. Too bad. Seen your dead daughter yet?\"\n\nDeloris managed a comically confused look. \"You mean the one who's kicking arse out there? She didn't look dead to me when I saw her some minutes ago.\" She gave the Lord Command a sweet smile. The only thing that betrayed Reynard's anger was the insistent tick in his temple. Deloris turned to look at Ryan. \"How do you want to do this, Ryan?\"\n\n\"Alright, alright, I'll give it to you.\" Reynard chuckled. \"Deloris right? I don't know how you did it but, good job. I love it when warlocks who think they are powerful come up against me. I enjoy bringing them down a peg or two. I enjoy even more, hearing them beg for their lives. But watching the life die out of their eyes is always the best part.\"\n\n\"Oh wait...you thought all this was me?\" Deloris looked downright amused. \"No Reynard. Today is going to go down in history as the day the great Reynard Wyatt got his arse handed to him by a wolf. Not even the alpha himself you asshole. The alpha's mate.\"\n\nReynard looked stunned for a moment. Then he burst into laughter and turned to Ryan. \"Listen boy, you're not really the one I'm after. It's Jeremy I want. If you give me your mate's location, I could at least make your death quick. What do you say?\"\n\n\"You arrogant son-of-a-bitch.\" Deloris couldn't believe the warlock had actually suggested that Ryan betray his mate. \"You're so stupid if you expect him to betray his mate. Are you for...\" \n\n\"I don't have time for this nonsense.\" With that angry growl, Reynard shot out of his chair and directed a beam of highly concentrated, torch-like fire towards Deloris and Ryan. \n\nDeloris gasped in fright but that fire never got to them because Ryan's hand shot out to deflect it, sending it back to Reynard who reflexively extinguished the fire by shooting a thin blast of powdery ice from the tip of his fingers. The Lord Command stared at Ryan with a shocked expression.\n\n\"Shit.\" Ryan muttered, looking down at his fingers. \"Almost as if we were playing tennis.\" \n\nDeloris would have laughed at that had it not been for the fact that her heart was pounding so hard. \"Great reflexes.\" She breathed, still reeling from what had almost happened. But for Ryan, the two of them would be toast.\n\n\"Well, thanks to you I have immunity, remember?\" Ryan responded, still staring at his hands. \"Why are my fingers cold?\" \n\n\"They are?\" Deloris asked with widened eyes. And at Ryan's nod, she gasped. \"Oh my god.\" \n\nDeloris wasn't exactly sure what power Ryan had just displayed. It could either be the power of absorption or mimicry. If it was the latter, then it meant Ryan had the ability to permanently copy powers that were used against him by other magical beings. If on the other hand, it was the former, then not only could Ryan copy the powers of others, but he could actually absorb it from the original owner, leaving the owner without that particular power. That also meant that Ryan would then become immune to that particular power. Deloris prayed it was the power of absorption that Ryan had because if it was, then Reynard was fucked. Deloris looked up to see Reynard staring at Ryan's fingers. He knew. Deloris couldn't help the smirk that found its way onto her face.\n\n\"Told ya!\" Deloris sneered. \"You're going down, old man.\"\n\n\"Enough!\" Reynard roared, his face darkening in anger. He'd felt himself lose some of his powers just seconds earlier when he'd used them against the boy. Hell, the cold dust on the boy's fingers was evidence enough. He obviously had the power of absorption. A warlock? Obviously, all wasn't as it seemed. \"Raj, tell me who he is, now.\"\n\n\"I just told you who he...\" Deloris began but got cut off by the scream that tore out of one of the women around Reynard's table.\n\n\"This is not good, Reynard.\" The woman shook hard as she addressed her clan head. \"He's your...he's your son.\"\n\nA collective gasp went up from everyone in the room, with a shocked Reynard breathing; \"What?\"\n\n\"The fuck?\" Ryan gasped in shock, staring at the woman who had dared uttered those silly words.\n\nThere was a long, terrible stretch of silence during which Ryan took a good look at Reynard Wyatt. He noticed the hair and the eyes. Well...strange, he thought, taking in Reynard's white long-sleeved, high-necked t-shirt and white pants. He almost laughed when John Webster's 'The White Devil' popped into his mind. \n\n\"I have no children and you know it.\" The Lord Command rasped, clenching his fists to hide how badly they shook. He was visibly seething.\n\n\"You mean you killed them.\" Deloris hissed and then actually grinned when a furious Reynard let fly a fireball in her direction.\n\nToo late, Reynard realized he'd been tricked into using another power against Ryan. Although his target had been Deloris, the bitch was standing so close to Ryan it was just as though he'd used the power against Ryan. Meaning, his power of conjuring fireballs was also gone...absorbed by Ryan. And of course, Ryan sent the ball hurtling right back at him. Reynard saw the smug look on Deloris' face waver when the fireball bounced harmlessly against him and went off. Yes, he'd activated his shield. Nothing could touch him from then on for as long as he remained within that shield. Ryan looked clueless but Deloris didn't look happy with the latest development. The Lord Command couldn't pass up an opportunity to gloat. \n\n\"Eat that bitch.\" Then he turned to look at his still terrified Seer. \"Raj?\" He didn't have to spell out what he wanted to know. \n\n\"Pierre Part.\" Raj began shakily. \"Thirty one years ago. Emma...\"\n\n\"Emma Hicks?\" Reynard bellowed. \"Pathetic Emma Hicks?\"\n\n\"Hey, you can't...\" Ryan began but got cut off when Reynard went right on raging as if he hadn't spoken.\n\n\"You mean that bitch got pregnant?\" Reynard roared, causing glasses and mirrors in the room to explode into shards. His angry eyes remained on the seer. \"How come you never saw this?\"\n\n\"I don't know Reynard.\" The seer groaned. \"There's more...\" She looked like she was going to be physically sick.\n\n\"Tell me.\" Reynard demanded.\n\n\"He...all the...your six children...\"\n\n\"What of my six children?\" Reynard snapped.\n\n\"They had divine powers, Rey...\"\n\n\"Everyone knows my kids had great powers.\" Reynard growled. \"They were given to them by a fucking god.\"\n\n\"He...\" Raj swallowed audibly. \"As your only living child, the powers of all your children have been transferred to him.\" She pointed a shaky finger at Ryan. \"He has all their powers. With all those powers he's almost as powerful as a god. Which makes him...\" She looked terrified. \n\n\"Makes him what?\" Reynard bellowed, making everyone at the table jump in fright. \n\n\"That makes him stronger... Stronger than you.\" The seer breathed.\n\nIn a fit of rage, Reynard stretched forth his hand towards the Seer, with an obvious intention of killing her with that beam of highly concentrated fire that he'd attempted to kill Deloris and Ryan with moments earlier. The Lord Command looked at his hand in surprise when nothing happened. In his rage, he'd completely forgotten he'd been stripped of that power by Ryan. He quickly conjured an energy ball and angrily hurled it at Raj, who immediately exploded into fiery pieces. With that close a hit, it was no surprise she exploded.\n\n\"You're supposed to see everything and tell me before it happens.\" The furious warlock screamed at the empty space where the Seer used to be. \"What's your use if you can't do your job?\"\n\n\"Are you out of your mi...\" One man around the table began but he never completed his sentence because with a snap of Reynard's finger, his neck snapped in a weird angle, killing him instantly.\n\n\"Anyone else have something to say?\" The Lord Command looked at the remaining two around the table. Both fearfully shook their heads. \"Good. Now to you, boy. I don't believe what my very dead Seer just said but...let's give her the benefit of the doubt. You're the only person who can prove that you're my offspring.\" He went quiet for a moment. Then breathed; \"Show me your deformity.\"\n\nRyan couldn't suppress the gasp that tore out of his mouth. \"What?\" He whispered, heart pounding.\n\n\"Aw come on, don't be shy.\" Reynard gave a smile that didn't reach his cold eyes. \"You see, each of my children had...how do I put this? A unique feature. I made a pact with one of the most powerful and wicked gods that ever existed. That was before I started making babies. I was young and naive then. Among other things, every child of mine was to receive two very unique and very high level powers. But that stupid god loved to play pranks. He decided that for those powers, each child of mine was to receive a unique feature. I readily agreed, thinking they were probably going to be born with unique coloured eyes or hair or something like that.\" He gave a humourless laugh. \"Imagine my surprise when Slater, my first, was born with four eyes. Four fucking eyes!\" He bellowed, pounding his fist on the table. \"Then came Harry. A boy. Had all the features of a boy except for the most important feature of all. He had no penis. Next was Nina. My beautiful Nina.\" He shook his head slowly. \"She had three legs. Then the twins came. One had only one leg with two feet, the other had no legs at all. The last was Suzie. A girl. Well, she looked like a girl. Had breasts, feminine curves, voice... A girl. But she came with the dick that Harry left. Didn't have a vagina, didn't have a womb. Freaks of nature...all of them. But I got the last laugh. I literally laughed as I watched the very essence drain right out of that god. You see, nobody crosses Reynard Wyatt.\" He growled. \n\nThe Lord Command didn't add his greatest regret though. He'd never regretted more, not giving another entity a quick death. If he'd done that with the god, he wouldn't have been in his current predicament. He'd been so angry at the god when his sixth child was born he'd decided to acquired enough strength and power to seek revenge for what he'd done to his children. And no one stood a chance if Reynard Wyatt went out of his way to plan and prepare for them. Not even a god. When he finally held the life essence of that god in his palm, Reynard couldn't help but gloat, taunt and goad. On hindsight, he shouldn't have drawn it out...made fun of the god as he struggled in his final moments. He shouldn't have given him the chance to speak. Because that was when the god had given that stupid prophecy. According to the prophecy, one of Reynard's children would wipe him out of the world and bring his clan to ruin. He'd been given the year and told to expect his end at the end of that year. Well, the year was finally here but it wasn't even the end of the fucking year yet. Even in death, the wicked god had fooled him again. \n\n\"So back to you son.\" The sinister smile was back on Reynard's face. \"What freaky feature do you have?\"\n\n\"Was it easier to kill them because you saw them as freaks?\" Ryan asked in a cold voice.\n\n\"They had to die for the greater good.\" Reynard said dryly. \"I mean hey, they were my kids, right? I had the right to decide their fate. I sure as hell wasn't going to wait around for one of those freaks to kill me. Now, that would have been downright foolish don't you think?\" He laughed. \"But you...you managed to slip into the world and go unnoticed.\" He laughed again as if something was really amusing. \"That pathetic, dull-faced, slip of a girl. Emma. Interesting.\"\n\n\"Don't you dare talk about her in that way.\" Ryan growled, taking a step forward.\n\n\"I'll talk about her anyhow I want.\" Reynard growled right back, relaxing in his seat. \"The one time I decided to show some kindness and then this happens. You see, no one wanted her. No man would touch her with a long pole. I'm actually surprised she's your mother. 'Cause she was one ugly bitch.\"\n\nAt Ryan's angry growl, Reynard smiled. The boy was getting angry which was a good thing. Anger made people make mistakes. He could have bet his last cent that the boy had some sort of deformity but he didn't need to see it to know that the boy was his son. That hair, those intense green eyes...all his children had them...just as he did. And if he was indeed his son...as he already knew within his bones that he was, then his end had indeed come. Prophecies somehow always found a way to come true. But the warlock also knew that a person's actions could change his destiny. Well, he could change his by turning the table and defeating Ryan. If he'd known about the existence of a son, he would have prepared for him and beat that prophecy, just as he'd prepared for that god and Jeremy Stanton. \n\nThe alpha of Stanwood Pack would have been dead already, if he'd had the balls to come and face him. But the coward had sent his mate, who happened to be his son and potentially, his killer. He had to use his experience to beat the boy otherwise that prophecy would come to pass. And what better way to go about it than to get Ryan so angry he fucked up by making mistakes? In fact that was his best bet because much as he'd been ready for Jeremy and his Ojah nonsense, he had no idea how to handle Ryan. His plan was to get to his prisoners and absorb their souls, to give him the strength he needed to face his son. The soul of the young werewolf, Troy, especially, would help a lot since Reynard was not fighting against just any pack. He was fighting against werewolves from Troy's pack.\n\n\"I took pity on her and showed her how good it could be, having a man inside her.\" Reynard continued his chatter. \"You should have heard her...screaming like a nympho.\" He laughed.",
        "Ryan couldn't take it anymore. He opened his hands and let loose an incredibly powerful blast of bright white kinetic energy, which went directly towards Reynard. But of course it hit against his shield. The blast didn't touch Reynard's body at all. Rather, its great concussive force violently sent the two seated at the table, flying through the air. One unfortunately ended up on the sharp edge of the mirror that had exploded earlier as a result of Reynard's scream. He died instantly. \n\n\"Well, well, well...the little wolf is angry.\" Reynard applauded with a wide grin. \"Don't bother wasting your energy on me. You can't touch me.\" He looked so smug. \"Now, where was I? Yes, your nympho of a mother. Oh I gave it to her hard.\" Reynard's hands went behind his head in an even more relaxed state. It was almost as if he was sitting amongst friends, discussing the economy. \"Know what surprises me though? I'm sure I pulled out before I...released my precious essence.\"\n\n\"I guess the great Reynard Wyatt is not that intelligent after all.\" Deloris hissed. \"'Cause if you were, you would know that coitus interruptus doesn't guarantee...\"\n\n\"Spare me the sex education, bitch.\" Reynard snapped. \"I'm talking to my son. Well, you still need to tell me about your deformity though.\" He directed that statement at Ryan. \"I can't see any deformity on your person. Does it have anything to do with your penis?\" He asked with a mock curious look on his face. \"Do you have any at all?\"\n\n\"Shut your mouth.\" Ryan breathed, his heartbeat quickening with anger and shame. He tried to control his breathing but he was quickly losing control.\n\n\"Don't let him get to you.\" Deloris muttered. \"He wants you to get angry. Use your anger to strengthen your focus. He's the enemy. We're here to get him. And shield or no shield we're going to. Focus on how to do that?\"\n\n\"Typical.\" Reynard taunted. \"Very easy to make you stinky mutts angry. Judging by your tone and bulging forehead vein, you're boiling. I can hear your heart beat quickening. I hear the blood rushing through your veins...your muscles tightening...your teeth grinding. Ooh...the fury!\" \n\nReynard knew that all he had to do was keep talking...goading Ryan...and he would somehow fuck up. If he played his cards right, he would just sit and watch the little wolf do all his work for him. Divine power or not, Reynard Wyatt was older and wiser. And he was going to beat Ryan and change his destiny.\n\n\"You spineless toad.\" Ryan growled. \n\n\"No need for name-calling, boy.\" Reynard grinned. \"I might be your father after all. There's no reason for us to be enemies. This is our chance to get to know each other, don't you think?\"\n\n\"I've seen all that I need to see. I'd rather die than have anything to do with your sorry arse.\" Ryan began to move slowly towards the arrogant warlock.\n\n\"Go to hell.\" Reynard hissed, finally showing signs of stress.\n\n\"Why bother? I'm going to bring it to you.\" Ryan didn't sound anything like the sweet man the Stanwood Pack knew. He sounded lethal. \n\nAnd that voice immediately amplified the fears of Reynard's remaining warlock. Reynard's shield again saved him from being affected by Ryan's fear projection. Had the other warlock been human, she would have been literally so scared she would have died of an instant heart attack. But since she was a magical being, she rather panicked so much she automatically began to chant with the aim of defeating the enemy. They enemy in that case, being Ryan. Every sharp edged object in the room elevated into the air, with the sharp points directed towards both Ryan and Deloris. Inside the sanctuary, the warlock's power was obviously still strong. \n\n\"Ryan...\" Deloris gasped, her eyes going to Reynard's happy face. \"This is not good.\"\n\nRyan stared hard at the warlock, using the same technique he'd used on Isabel when he'd found her naked in Jeremy's arms. He crushed her from inside but this time, he didn't hold back. The warlock began to scream just as the sharp objects cluttered to the ground. Within seconds, blood began to ooze out of her eyes. Then she began to choke. Finally, she crumpled to the floor, dead. \n\n\"Alright old man, why don't you spare us the bullshit and take your death like a brave man?\" Ryan rasped. \"I mean you've already been told this day was coming. You don't really know whether I'm your son or not because you haven't seen any...deformity, right? But...if it looks like a duck and acts like a duck, I think we've got to get ourselves out of denial. It's a fucking duck!\"\n\n\"You arrogant prick.\" Reynard's face was red with anger. \"I could crush you.\"\n\n\"Why don't you hit me with your best shot?\" Ryan drawled. \"And whilst you're at it why don't you come away from that force field you've surrounded yourself with?\"\n\n\"Do I look like a fool to you?\" Reynard didn't look amused. \"Hit you with my best shot? So that you can steal it from me?\" At Ryan's confused look, Reynard gave a humorless chuckle. \"You don't even know, do you?\" He pointed at Deloris. \"She knows. I won't attack you to enable you absorb my power and gain more ammunition. And this shield is not coming down. You may be safe from me for now. But can your dogs out there say the same?\" He sneered. \"You will be sniffing at the entrails of your beloved wolf pack come morning. Catch me if you can.\" With that last dig, Reynard disappeared.\n\nDeloris and Ryan stared at the spot where Reynard had occupied mere seconds earlier as if they were in a trance. Deloris recovered first.\n\n\"Oh god, Ryan.\" She wailed. \"The pack. He'll kill them all.\"\n\n***\n\nGloria circled the three warlocks, staring at the cloud of fiery smoke that swirled around them. She couldn't go too close to them because the smoke gave forth some serious heat. Although Gloria had been busy fighting, she'd noticed exactly when the three warlocks had appeared on top of the building out of nowhere. And from the way they'd been chanting, it was obvious that their aim was to restore the clan's dark energy to its full power. Well, Deloris wasn't called the queen of spells for nothing. That spell she had cast, according to her, could only be broken if she died because she'd tied it to her life. Fortunately, those silly warlocks didn't know that so Gloria had ignored them and gone right ahead with the battle. After all, their chanting wasn't and couldn't harm anyone. Besides, from the frustrated look that appeared on their faces after some extensive chanting, it was obvious they were not making any headway. Gloria hadn't planned on wasting her time on the three chanting warlocks initially. But when Camilla told her what one of them had done to her, she saw red. Camilla was the daughter of a fellow council member and an ex of her son. But most important of all, she was pack. And no one fucked with her pack. After making sure that the pack had the upper hand, Gloria had immediately gone after the three warlocks on the rooftop. \n\nCamilla stood back with an excited smile on her face. The pack never passed up an opportunity to see Gloria Stanton in action. It had been said that she was the most graceful warrior that the Stanwood Pack had ever had the privilege of having as pack member. Since they'd both been busy fighting side by side, Camilla hadn't been able to watch Gloria do her thing. The half warlock, half werewolf, pretty doctor therefore decided to enjoy the rare opportunity of watching Gloria Stanton fight. Besides, she'd had the misfortune of meeting the warlock called Frank during her three month stay in the Wyatt fortress. And she would never forget the pain the warlock had inflicted on her. He would torture her till she shifted into her wolf, and then throw darts at her. The asshat claimed he was bored and wanted to have some fun. She couldn't wait to watch Gloria kick his arse.\n\n\"Which one of you is Frank?\" Gloria asked, looking at the faces of the warlocks. The smoke covered from their feet up, stopping at their chests. They could only be seen from their shoulder up. \n\n\"Who wants to know?\" The woman amongst them, who looked no older than thirty sneered.\n\n\"The name's Gloria Stanton.\" Gloria responded, stopping in front of the three warlocks. \n\n\"The runaway alpha's mother.\" The woman chuckled. \"Aren't you too old to be fighting? I mean you're no spring chicken.\"\n\n\"Well, I shudder to know what your real age is darling.\" Gloria responded coolly. \"But don't let us talk about age. You don't really know me or know what's up here.\" She tapped a finger to her temple. \"But what you don't know about me should frighten you.\" \n\n\"What are you? The boogie man?\" One of the men smirked.\n\n\"Worse.\" Gloria gave a brilliant smile. \"I'm a woman. And what I can think of, a man...boogie or otherwise, can't hold a candle to.\"\n\n\"Ooh feisty.\" The man drawled, looking at Gloria with lecherous eyes. \"I like. I've always wondered how it would feel like to mount a queen bitch. Maybe this is the opportunity I've been waiting for.\" He actually licked his lips. \n\n\"Eww...\" Camilla couldn't help the nauseous feeling that came over her at Frank's words. \"That's Frank, Mama G.\"\n\n\"Is it?\" Gloria sounded amused. The thought of having that warlock anywhere near her sexually, made her skin crawl. Her foremost instinct was to shift and tear his throat out. But that would fuck up her plan. \"You see, there's a bitch that lives in me that I'm struggling to hold back.\" She began to move backwards, away from the three warlocks as she spoke. \"I'm so tempted to make her come out to play.\" \n\n\"Why don't you?\" The other man responded. \"I'd love to see your stupid bitch roast in this hot cloud.\" He added, making the other two laugh.\n\n\"You would, wouldn't you?\" Gloria actually sounded bored. \"I'd better keep her in and handle this myself then.\" Her hand went to her chin and her face took on a curious look. \"What exactly are you doing up here by the way? Trying to strengthen you weakened powers?\"\n\n\"You think you're so powerful don't you?\" The woman hissed. \"Wait till we restore the fold.\"\n\nGloria shook her head sadly. \"You know, I could have told you for free that you're wasting your time. Ever heard of Del-the-Spell?\"\n\n\"What has Del-the-Spell got to do with anything?\" Frank snapped. \n\nAlmost every upper-level warlock knew about the warlock whose expertise, when it came to spells, was legendary. Over a century ago, she'd fallen in love with a wolf and caused a massive uproar between her clan and the werewolves. There had been a fierce battle which had resulted in the death of the wolf that Del-the-Spell was in love with. Del had disappeared, never to be heard of. \n\nGloria grinned. \"You don't know, do you?\" She locked gazes with Frank. \"Looks like your evil clan is fucking up with the wrong bitches. Not only do you want to capture and kill my son for your silly rituals or potions or whatever. You actually kidnapped and tortured the only child of Del-the-Spell.\" Gloria noticed how all three pairs of eyes widened in fear. \"Yes, yes. Oh and Mr. Whatever-your-name-is, thanks for the advice. Because if my bitch had come out, I wouldn't have been able to do this...\"\n\nWith those words, Gloria, in a classic fluid move, flipped into the air, her legs arcing over the heads of the woman and the man who she'd thanked for his advice. Without touching the swirling hot cloud, she landed in a crouch behind all three warlocks. The sickening crunch of bones breaking couldn't be masked. Gloria remained in her crouching position, with a finger touching the ground and her head bowed. For a second or two, nothing seemed amiss. Then both Camilla and Frank's eyes moved to the headless bodies of the female and male warlocks. Both bodies crumpled to the ground before their heads had even stopped rolling on the floor. The cloud of smoke immediately disappeared, leaving a terrified Frank unprotected. \n\n\"Have fun Camilla.\" Gloria said a split second before the brown wolf tackled Frank to the ground and tore him to shreds even as his heart continued to beat inside his chest. \n\nBy the time Camilla was done with the warlock who had tortured her, all that was left was a bloody mess. She shifted back to human and stood, looking down at her handiwork. \n\n\"We may not be murderers,\" Gloria said softly, \"but we're no angels either.\"\n\nThe two women turned around and left.\n\n***\n\nVincent looked up when he heard sudden screams from the people that he and his team were leading to safety on the pack beside the Wyatt fortress. They were prisoners of the Wyatt Clan. Vincent had thought the prisoners would join them to fight the Wyatt Clan but they all seemed so weak he'd decided to rather keep then away from the fortress till the battle ended. Besides, the plan was to burn down the fortress after the battle so the prisoners needed to be taken off the property. Some had been prisoners for centuries, some were mortals, and some were even children. There were fifty-seven prisoners in all. \n\n\"What's going...\" But Vincent never completed his question. He was hit by an energy ball that threw him high into the air and sent him hurtling onto the ground. He was dead before he hit the ground.\n\n\"Run.\" Another werewolf screamed at the prisoners even as he shifted into a large wolf and bared his teeth at the white haired warlock who suspended in the sky not too far above them. \n\n\"And what do you think you're going to do, wolf?\" Reynard Wyatt roared as he let loose a succession of energy balls, instantly killing all four remaining wolves who were all part of Vincent's team. \"Hello my lovelies.\" The smile he directed at the frightened prisoners would give anyone the shivers. \"Where do you think you're going?\" Reynard couldn't believe the audacity of the werewolves. How dare those mutts release his souls? When he'd seen the empty dungeon, rage had burned through him, igniting a vicious bloodlust And when he rushed outside and saw those werewolves leading his souls away, he'd seen red. He'd never enjoyed killing more. With a wave of his hand, a number of long thick steels appeared and surrounded all the prisoners, keeping them confined. \"I still have use for...\" He trailed off when a loud anguished scream split the air. \"Look who decided to grace us with his douchedom.\" Reynard laughed.\n\nRyan stared at the dead werewolves on the ground and felt rage that was laced with grief. When his eyes landed on Vincent's still form, his fists clenched and he had to fight down the rising bile in his throat. He slowly turned to look at the crazed warlock suspending in the sky across the field. Ryan's chest heaved as an icy lump settled in his gut, guilt eating through him like acid. He felt responsible for what had happened. If that man was his sperm donor, then he was just as guilty as he was. He had to make things right. He had to avenge the dead...his pack. Rage, the magnitude that Ryan had never felt, filled him. And that was when he noticed that the prisoners were actually dying one after the other. They would scream in agony and then fall down, dead.\n\n\"Don't look so surprised boy.\" Reynard grinned. \"They are all linked to me. I use them as my source of strength.\" Where the fuck was Troy when he finally needed him to make himself useful...give up his life force to enable him deal with his fellow wolves, Reynard thought. Now, that was some aura. \"You have no idea what you're up against, do you?\" A child's spine-chilling scream split the air, followed by another. \n\nSomething broke free inside Ryan. \n\n'Everyone should stay out of sight immediately.' He instructed his pack on their mind-link even as he directed a force field in the shape of a bubble, towards the prisoners who were already sealed within the confines of Reynard's magical steels. The shield was not only meant to protect those inside from magical attacks, but it was also meant to deflect any magical attack back to the enemy.\n\n\"Hey come on, those souls are mine.\" Reynard shouted when the energy he was drawing from the life source of the prisoners instantly ceased. \n\n\"Ever created life?\" Ryan couldn't help but retort.\n\n\"Yes. You.\" Reynard laughed. It was obvious that he was intentionally trying to irritate Ryan. \n\n'Don't let him get to you, Ryan.' Deloris said over their link. \n\n'But he already has, Deloris.' Ryan responded. 'I'm boiling right now. No one is to show themselves unless I tell you it's okay to, please.' \n\n'Ryan...' Gloria began but Ryan cut her off.\n\n'This is my fight.' He said quietly. He could feel his wolf going crazy inside him. It wanted to come out and face the enemy. But Ryan knew that for the battle at hand, his human form was needed.\n\nDeloris had just one advice though. 'You can do anything you set your mind to. Just believe.'\n\n\"You really shouldn't have come, son.\" Reynard said smugly. \n\nThe head of the Wyatt Clan knew that for as long as he remained within his protective shield and refrained from sending any direct attacks Ryan's way, he was okay. All he had to do was frustrate the wolves till they left the fortress. Then he could get everything back to its original status. \n\n\"You've sentenced all these people to their early graves like those five dead mutts down there.\" Reynard had a look of mock concern on his face. \"Why don't you just give up now and leave? Unless of course you lot are ready to meet your maker...Luna, right?\" \n\n\"That's a chance I'm just going to have to take.\" Ryan growled and then opened his hands to direct an unending powerful wave of energy at Reynard. \n\nInitially, Reynard kept laughing. He didn't seem bothered. But soon, his laughter began to fade when he realized that he had to direct all his energy into keeping his shield intact, thereby losing his control over his levitation. Before long, his feet were on the ground. That wasn't good, Reynard thought to himself. The power that Ryan was packing was even greater than he thought possible. But Reynard knew that although Ryan was supposed to have the powers of his six dead siblings in addition to his own...which made him very powerful, he was also unknowingly drawing strength from the land on which they stood, thanks to the Spiritual Nexus. \n\n\"Damnit.\" Reynard muttered to himself.\n\nHe hated to admit it but it would be better to live and fight another day, he decided. But when he attempted to disappear, he realized that he couldn't move his feet. If felt as if his feet had been encased in concrete, rooting him in place. He looked up in alarm. What the fuck? The only positive thing was that his shield was still intact. Well, he was the great Reynard Wyatt. And he couldn't just stand there and do nothing, could he? It was time to manipulate the elements, he decided. \n\nWith a loud cry, Reynard looked up and raised his hands to the heavens. Lightning split the sky, followed by the roar of thunder. The sky filled with thick, dark, stormy clouds. He almost burst into laughter at the look of surprise that appeared on Ryan's face. His bastard son obviously didn't know what he was up against, Reynard thought as he heard the frightened shrieks of the prisoners. Next time, the faggot would choose his battles wisely. With some weird chanting, Reynard directed the dark clouds towards the prisoners, smiling evilly when the heavens opened and the bubble began to fill with rain water. Yes, he couldn't get to the prisoners by using his magical powers, but rain was a natural phenomenon. It could do the job just fine. \n\nRyan stared at the prisoners in horror. If he removed the bubble which was shielding them, they would become easy pickings for Reynard. And if the rate at which the bubble was filling up was anything to go by, the prisoners would drown in some few minutes...which would still give Reynard the powers he needed. Ryan knew he had to act quickly but had no idea what to do. Reynard Wyatt was obviously not only strong, but smart too. And the only way to defeat him, would be to drain him of his powers. But how? ",
        "'His blood runs within your veins, moron.' Ryan heard his wolf say inside him. 'Be creative.' \n\nRyan's eyes widened at his wolf's words. What was that Deloris had said? He could do anything, right? Well, what if he summoned Reynard's powers, using his own blood? He could create a point of contact, focus on that, and then drain the bastard. Ryan shrugged out of his hoodie, leaving on the t-shirt beneath. The monster's blood ran through him, right? Why not put that blood to good use? He looked around for something to cut himself with...like a knife. Immediately he thought of it, a knife appeared in his hand.\n\n\"Cool.\" Ryan muttered to himself. \"Sorry, Jeremy.\" He groaned. From what he'd leant recently, he was about to inflict pain on his mate. \n\n'Hey,' Ryan heard his wolf, 'how about we do this together? The pain will not be too bad and you can heal faster.'\n\nAnd that was when Ryan began to transform into a wolf man, right before the eyes of the prisoners, Reynard and unbeknownst to him, his pack who were watching him from behind the protective circle that had been created by Deloris and Camilla. His clothes fell off his hairy body in tatters. The wolf man then made a deep cut in his palm and allowed his blood to pour onto his hoodie which lay on the ground, to the shock of his pack. \n\n'Ryan?' Gloria gasped at the amount of blood that Ryan was losing. 'Whatever you're planning on doing with that, don't you think it's enough?' She asked sternly. \n\n'I think the more, the better, mum.' Ryan murmured. 'Hey Deloris, shouldn't there be a spell or poem or whatever that I could recite to transfer that monster's essence into this blood soaked hoodie?' Ryan asked. \n\nDeloris' eyes widened in awe when she finally figured out what Ryan meant to do. As a warlock, she appreciated the art of magic. And Ryan looked like he knew what he was doing, which impressed the hell out of Deloris. Although she had faith in him, she'd still feared for him. After all, that was Reynard Wyatt he was going up against. The man was experienced and cunning. But Deloris realized she had nothing to fear. Ryan was in total control. Deloris couldn't help the grin that brightened her face or hide the pride in her voice when she responded to Ryan;\n\n'Damn, I love the way you think.' She chuckled. 'You don't need a spell, honey. Your powers are above that of a warlock. Just will it.'\n\n'Just will it.' Ryan repeated. 'Okay...here goes...' And he willed his wish with all his might. \n\nThe wolf man's his eyes glowed bright blue as he stretched forth hands that suddenly lit up, towards his blood soaked hoodie. A pulse of energy which looked like a mixture of ice and fiery dust, shot outward from both palms and began to swirl at the speed of light, around the hoodie. Ryan's goal was to squash and neutralize any power that Reynard had. It was time to crush the man once and for all. \n\nReynard's eyes widened when the cloud began to clear and the torrential rain reduced to drizzles. He could feel himself becoming lighter. He was losing his powers...and fast. He had to do something...anything, Reynard thought desperately. Well, time to solicit for help from his allies... Demons!\n\n\"Kazimi!\" Reynard roared with all his energy to summon the Kazi Demon and his minions. \n\nEach minion of the Kazi demon was known to possess incredible strength and could exert high pressure on the skulls of its victims, which usually caused the victim's veins to engorge till they exploded. Reynard needed that kind of strength to face the wolf man who was hell-bent on defeating him. He smiled excitedly when about twenty slimy-green creatures suddenly materialized out of nowhere. The Lord Command didn't think Ryan stood a chance against Kazi and his troop. The demon owed him. It was time to collect.\n\nA surprised Ryan stared at the creatures but never stopped what he was doing for even a second. The biggest amongst the slimy creatures who was obviously Kazi himself, ambled close to Reynard and asked what he could do for him. Reynard pointed at finger at Ryan and screamed;\n\n\"Kill him!\"\n\nThe Kazi demon immediately gave a command to his minions to attack even before he turned around to look at who he was attacking. But just one look at the wolf man with glowing eyes and the demon was ordering his minions to abort.\n\n\"What?\" Reynard screeched. \"You owe me.\" He sputtered. \n\n\"Yeah, and I will pay.\" The demon responded in an inhuman voice. \"Just call me when you're faced with a more...killable adversary. We don't do gods.\"\n\n\"What do you mean, gods?\" Reynard bellowed, feeling himself shake with anger. \"He's no god. He's just a boy. He's my son.\"\n\nThe confused look that appeared on the demon's face was almost comical. \"I thought you killed all your...\"\n\n\"Yeah, yeah, yeah listen, you have to help me. Please...\" Reynard couldn't believe the slimy, ungrateful scum was actually making him beg. He could feel himself weakening by the second for fuck's sake. \"Please...\"\n\n\"But...I don't have a death wish, Warlock.\" The demon pointed his four thumbs at himself. \"I'll definitely be vanquished one day.\" He added with a careless shrug. \"Just not today. Sorry pal.\" With that, the demon and his minions disappeared.\n\n\"No, no, no...\" Reynard looked desperate. Time to make a deal with his son. \"Hey Ryan...\" He called out shakily. Could the massive creature even hear him, Reynard wondered. \"Ryan...listen to me...\" When the wolf man turned his head to look at him, Reynard managed a beseeching look. \"Imagine what we can do together if we join forces. We're both obviously deliciously twisted. Let's work together. From the look of things, you're the only person who can match me blow for blow.\"\n\n\"No deal, old man.\" The wolf man said in a deep, inhuman voice. \"You just have to blow yourself...straight into oblivion.\"\n\nWith that, Ryan threw in more energy from his palm. Reynard felt his shield begin to disintegrating. Shit! In a final attempt to save himself, he conjured an earthquakes that ripped the very ground under his feet. He then began to levitate, still attached to that piece of earth. But he came crushing back down with a force that left him dazed. At that point, his protective shield had completely disintegrated. But the wolf man kept doing what he was doing. \n\nReynard felt completely drained. It was almost as if all his very life force had been sapped out. He felt powerless and useless. He was mortal. He was nothing. But there was still hope. All he had to do was get inside that house. Then he could restore his powers, he thought desperately. Reynard began to move tentatively towards the wolf man. \n\n\"Please Ryan...\" Reynard pleaded. He suddenly looked ten times more than the age he appeared to be when Ryan first laid eyes on him. \"Surely you won't hurt an ordinary mortal. Besides, I'm your father. Surely that should mean something to you...\" If only he could... \"Please. At least allow an old man to lie in his bed and rest.\"\n\nThe wolf man closed both palms, instantly cutting off the energy dust. His hoodie had turned to ash. He raised his head to look at the fortress. 'Is anyone in there?' He asked his pack on their mind-link.\n\n'Lip is in there.' Stan responded. 'Ah here he is.' The pack turned in unison to look at their alpha. 'Did you find anyone?' Stan asked. A few of the warlocks had managed to escape. The number wasn't significant though. \n\n'No.' Phillip looked devastated. Everyone assumed he was devastated because he'd lost his men. Well, he had more to be distraught about.\n\nThe wolf man stared at the first person he'd seen as a friend in Stanwood Pack. He didn't have to be a genius to know why Phillip looked so devastated. He'd seen the look in his eyes when he'd stopped the wolves from tearing apart that boy. Ryan reduced his link to only Phillip. \n\n'You will find him.' The wolf man assured his mate's best pal. 'Don't worry. When the time is right, he'll come back to you.'\n\nPhillip could only nod. 'Can we touch it now?' He asked with a deep sigh.\n\n'Allow me.' Ryan said. To everyone, he instructed; 'Stay back.' Then with a wave of his hand, a great inferno engulfed the fortress. \n\n\"No, no, no...\" Reynard wailed, crumbling to the ground. \"Not my home, no...\"\n\nBut Ryan ignored the wailing man and headed towards the prisoners. Both Reynard's confining steel and his protective shield had disappeared, leaving the people wet but relieved. Ryan wanted to take a closer look to assure himself that they were alright. Apart from about six people that had lost their lives as a result of Reynard's channeling, the rest looked okay. They all looked at him with grateful eyes, with some voicing out their gratitude.\n\n\"Ryan?\" Ryan heard Deloris calling his name from behind him and turned around to see the warlock, holding in her hands a change of clothes for him. \"You need to shift and dress up. Gloria gave me these for you. Come.\"\n\nThe wolf man stared at the clothes, then at the woman who he had a feeling had figure out his secret to an extent. After all, he had no outward deformities. With a grateful nod, Ryan took the clothes and followed the woman to a shed where no one could see him. She left him and went back to join the pack.\n\nRyan heard the shouts before he finished dressing up. He wondered what was happening. He took his time though because he had a feeling it wasn't anything serious. Gloria was waiting for him when he emerged from the shed.\n\n\"Reynard killed himself.\" She said without preamble. \"Used that knife you left lying on the ground.\"\n\nRyan nodded and draped an arm around Gloria's neck. \"Can we go home now?\"\n\n\"Sure. Are you okay?\"\n\n\"No.\" Ryan responded quietly. \"I need Jeremy.\"\n\n\"I know, baby. I know.\"\n\n***\n\nFor the next few days, the freed prisoners of the Wyatt Clan were sent to their various families. Those who had nowhere to go remained with the pack. Phillip assured them that they were part of the pack and would be looked after and provided for. The few children whose families they couldn't trace were enrolled in school.\n\nVincent and his team were buried in a solemn ceremony that was attended by almost every alpha in the world. It was the least they could do to show their gratitude and respect for the pack that had saved the hind of werewolves worldwide. Ryan couldn't hold back his tears at the funeral. He cried his heart out not just for Vincent who he saw as a friend, but for the other four as well, some of whom had left behind mates and children. Gloria did her best to soothe him but he couldn't be consoled. He still felt guilty for not having the good sense to do what he'd done in the end earlier when he was inside the sanctuary with Reynard. If he had, those werewolves would be alive. He felt an arm go around him from behind. Deloris. He knew her scent.\n\n\"Take a walk with me alpha.\" The warlock said softly. \"We'll be right back Gloria.\"\n\n\"Sure.\" Gloria said with a grateful smile at Deloris. They both knew that Ryan was on a guilt trip. \n\n\"Stop blaming yourself, Ryan.\" The warlock said when they started walking away.\n\n\"They would have been alive if I'd acted earlier, Deloris.\" Ryan groaned.\n\n\"Let me ask you this. When Reynard's protective shield went up in that room, did you know how to defeat him? Did you have any idea, how to proceed?\" She asked softly.\n\n\"No.\" Ryan sighed.\n\n\"Exactly.\"\n\n\"But I could have thought harder.\" He said gruffly. \n\n\"Has it occurred to you that seeing those bodies and those innocents in danger, had rather forced you to figure out how to defeat Reynard?\" \n\n\"But did we have to lose them to trigger that drive?\" Ryan asked quietly. \"Do I always have to get angry before I can access my powers?\"\n\n\"No Ryan.\" Deloris said softly, remembering how Ryan had complained to her after the battle with the Wyatt Clan that his powers were always triggered by anger. \"For now, that's what it seems like because anger has been your trigger so far. You just have to work on it. It's an art. In order to control and perfect it, you have to practice. For someone who's new at this, I must applaud you Ryan. You've been spectacular. All you need is a little prac...\"\n\n\"Will you help me?\"\n\n\"It will be my privilege.\" The elder grinned. \n\n\"Thanks Deloris.\"\n\n\"No. Thank you.\" She'd patted him on the back. \"We can start next week. For now, you need to relax.\" At Ryan's nod, Deloris turned him towards Gloria. \"Now smile for you mama. I swear she's gotten an extra wrinkle or two, thanks to you.\"\n\n\"No she hasn't.\" Ryan chuckled. \"I think she grows more beautiful each day.\"\n\n\"You need to tell her that and stop making everybody unnecessarily sad.\" Deloris retorted but her sweet smile took the sting out of her comment.\n\n\"Sorry. And thanks.\" Ryan murmured and leaned down to kiss Deloris on both cheeks. And even before the warlock turned to leave, Ryan drew Gloria into his arm for a fierce hug? \"Have I told you how beautiful you look today?\"\n\n\"Del told you to tell me that.\" It wasn't a question. Gloria looked so amused Ryan laugh.\n\n\"I told her that you are beautiful. She said to remind you.\" Ryan kissed her cheek.\n\n\"I love you Ryan.\" Gloria murmured shakily. \"And I'm always here for you. Never forget that.\"\n\n\"I know mum. And I love you right back.\"\n\n\"You guys done?\" Paige asked, coiling her arm through Ryan's. \"Come on, let's go get smashed. It's not every day we lay to rest badass warriors. We can do that whilst we work on our lecture notes for tomorrow.\"\n\n\"Really?\" Gloria gave a mock scowl. \"Work and booze? Luna have mercy on your souls.\"\n\nPaige laughed. \"Have a good meeting with those alphas Mama G.\" She said. \"Know what to say when Jer's name comes up?\"\n\n\"We sure do.\" Gloria murmured, smiling at Joel who had just gotten to where they stood. \n\n\"Going to lie your arses off huh?\" Paige smirked.\n\n\"Not a lie.\" Joel countered, drawing Gloria out of her chair. \"Just a small untruth.\"\n\nSometimes, it was necessary to be stingy with the truth. At the end of the day, they were animals. Rebelling, though frowned upon, was an attractive trait amongst wolves. It was just like the bad-boy syndrome amongst humans. If the alphas got to know what Jeremy, their friend and colleague had done, they would be amused initially, probably admonish him lightly, and then hail him for having the balls to rebel and then accepting that punishment. In their eyes, that whole issue would make Jeremy seem even more badass. They might on the other hand resent Ryan for being the cause of Jeremy's woes and even worse, look down on him for not being able to fight back. Of course they would conveniently forget that the man had been up against an alpha who was also an Ojah. Alphas had always been chauvinistic pricks. That was reality. Werewolves were no angels. \n\nThe elders therefore had to protect Ryan by telling the alphas a little untruth about the whereabouts of Jeremy because revealing the truth meant divulging the proximate cause. For now, they all acknowledged what Ryan had done for them and respected him for it. The elders wanted to keep it that way. Ryan had been excused from attending the meeting although as the mate of the alpha and the one who had saved the day, he was supposed to be there. The elders wanted to spare him the agony of having to sit through the recounting of the battle. They also didn't want to tell an untruth about the whereabouts of his mate, in his presence. \n\n\"Ready?\" Joel asked. It was going to be a long meeting because they were to give a detailed account of the battle to the alphas.\n\n\"I am.\" Gloria smiled.\n\n\"Let's do this.\"\n\n***\n\nThe albino looked at the photo in his hand, his face etched with grief. The love of his life. His wife. The woman he'd been with for over a century. She was no more. Killed by the bloody wolves of Stanwood Pack during the battle that saw to the collapse of his clan. That little girl had no idea what she and her savage bunch had taken from him. If she did, she wouldn't have made a deal with him. His thirst for vengeance was definitely more intense than the need to live.\n\nThe Jackal had been given an assignment. An assignment that was supposed to be very simple and easy. An assignment that was going to give him a second chance at life. A second chance? Really? Who said he wanted to live? How could he, after everything had been taken away from him? In any case, he was not fooled for even a second. Definitely not by some arrogant little bitch. The Jackal knew that the silly girl didn't have any intention of allowing him to live. He didn't need to consult zoltar to know that she was going to kill him immediately after he was done. He knew her kind. Well, he no longer wished to live anyway. All that he had was gone with the defeat of his clan. What better way to go out than to stick it to his enemies. At least he could make up in his own small way for causing the collapse of his clan by not being diligent in his duties. He couldn't wait to see the look on the bitch's face when he made his move. The Jackal always had the last laugh.\n\n***\n\n\"Oh my god, I can't believe I'm actually laughing at that.\" Ryan gasped, clutching at his stomach. \"It hadn't been funny at the time, Paige.\" He laughed.\n\nHe'd changed into sweatpants and a t-shirt when they'd gotten to the suite. Then he'd gone to the adjoining room that was now his study, to work on his lecture notes. Of course Paige had joined him with a bottle of whiskey, insisting he indulged even though he'd told her he wasn't a good drinker.\n\n\"Like I said, we're getting shit-faced.\" She'd purred. \"I've been known to do some pretty good job whilst under the influence.\" She'd said, making Ryan laugh. \n\nWell they'd gotten into it. And at that very moment, Ryan was feeling no pain. In fact, from the way he was sprawled lazily on the plush couch, he sure as hell wasn't going to get any work done. Damn Paige. \n\nThe last time Ryan had gotten slightly drunk was when he'd spent time with Jeremy in the Jacuzzi. And he couldn't help but miss him. If Jeremy had been around, he would have taken him into his arms and comforted him in his time of great grief. He'd lost a friend and despite all that Gloria and Deloris had drummed into his head, he still felt guilty as hell. He would give anything to feel Jeremy's strong, heavenly arms around him that very moment. Thinking about Jeremy's arms was causing a delicious tingle to pass through Ryan. He thought about how Jeremy had taken him to heights that he hadn't even known existed. He remembered the amazing feeling when Jeremy hit that sweet spot inside him and how his eyes always rolled back in his head at that exquisite feeling. It was hands down the best feeling in the world. He remembered when Jeremy had given him so much pleasure he'd begged him for mercy, whimpering, 'no more'. And he remembered Jeremy's sexy voice when in response to his pleading, he'd rather spread his legs further apart and husked, 'one more'. That response... Ryan had come so hard, he'd almost passed out. \n\n\"Oh fuck, this wasn't a good idea, Paige.\" Ryan groaned when he realized how hard he'd gotten. \"Why did I have to listen to you?\" He whimpered, turning his head to look at Paige who was lying on her back on the rug, with her legs crossed at the knee. She didn't even look drunk. \"Lady, are you even drinking with me?\"\n\n\"I am.\" She sounded very sober. \"I just have to take in a hell of a lot to get to your current level.\"\n\n\"Oh fuck off.\" Ryan growled groggily, hurling a throw pillow at Paige and covering his groin with another. \n\nPaige wasn't fooled even for a second. When Ryan heard her laughter, he threw an arm across his eyes with a groan, wishing he had the energy to flip her a well-deserved bird. He felt too lax to even manage that. When he felt his eyes drooping sleepily, he wasn't surprised at all.\n\n\"Ryan?\" Paige called out softly.\n\n\"Yes Paige.\" Ryan sounded drunk and sleepy. ",
        "\"You know I love you right?\"\n\n\"I know.\" Ryan responded in a hoarse voice. \"And I love you right back.\"\n\n\"Thanks.\" Paige said. \"You can sleep now. I'll be right here.\"\n\nRyan hadn't been able to have a good sleep since the day of the battle with the Wyatt Clan. The booze had its advantages after all, he couldn't help but acknowledge. Ryan didn't fight it when he felt himself drifting enticingly toward sleep. He needed it. \n\n***\n\nRyan felt warm lips moving against his neck in a sensuous caress. He felt a hand moving under his t-shirt, gently stroking his skin. Jeremy? Ryan opened his eyes and lo and behold, his Jeremy was lying on top of him on the couch.\n\n\"Oh god, Jer...\" He breathed. It all felt so real, Ryan thought. But it was obviously a dream and nothing more. How else would Jeremy be there with him that very moment? When his gorgeous mate smiled at him, Ryan's heart literally missed a beat. \"God, I've missed you.\" He gasped.\n\nRyan couldn't believe it. He'd thought and fantasized about Jeremy so hard he'd managed to conjure him up in his dreams. Finally! He'd wished to see his mate in his dreams since his departure but had never dreamt about him. He'd finally given up, thinking he would never get that privilege, thanks to whatever the council had done to him. But from what was going on at that very moment, wishes did come true when a person wished hard enough. He had a lethargic feeling in his limbs though, which was rather strange but hey...in dreams, anything could happen, right? The most important thing was that he'd gotten his wish. \n\nBefore he'd slept after downing all that booze with Paige, his thoughts had been filled with Jeremy. He remembered it being so intense, he'd popped a boner. Well, all that sexy thought had clearly resulted in his mate coming to him in his dream. And Ryan planned on staying in that dream for as long as he could.\n\nRyan moaned when he felt Jeremy's fingers lightly caressing his stomach. That felt good. He arched his back and gave himself up to the sensations. He didn't close his eyes even once because he couldn't tear his gaze off his gorgeous mate. When Jeremy began to drop tiny kisses along his jaw, Ryan began to tremble in anticipation of the kiss that he knew was coming. He wanted to move his hands up and grab Jeremy's head so he could take that kiss that he craved but he couldn't move his arms. Once more it crossed his mind how weird that was but again, he ignored it.\n\n\"Kiss me.\" A whisper. But the desperation behind it was so intense it was palpable. \"Please...\"\n\nJeremy raised his head and looked down at Ryan. He had an odd look on his face...almost as if he didn't want to. But then he leaned down and began to kiss Ryan. Ryan thought he heard someone...Paige? Well, it sounded as if the person hissed, \"don't\", but Ryan ignored it. Although he couldn't feel the usual heat that was always present in his and Jeremy's kisses, he wasn't bothered because it was only a dream after all. One couldn't possibly expect a kiss in a dream to be as intense and real as it usually was in reality...right?\n\nAgain he thought he heard Paige hiss, \"enough\" but it was so faint, he thought he'd imagined it. Then Jeremy broke off the kiss and raised his head to look down at Ryan. For a split second, Ryan thought he saw a sinister look on Jeremy's face. \n\n\"Jeremy?\" Ryan breathed. \"Why are you...\" But he never got to complete his sentence because in a swift move, Jeremy leaned down and bit into his mark. \n\nThe pain slammed into Ryan so fast and so hard, he felt dizzy. What the fuck! And he'd thought that the bite Jeremy had given him on his first night in Stanwood Pack was agonizing? That was nowhere near what he felt at that very moment. The pain was so excruciating his entire body felt as if he'd been thrown into a tub filled with hot needles. And his chest felt as if it was going to explode. It was like no pain Ryan had ever felt. Ryan screamed!\n\n***\n\nThe Jackal smiled with satisfaction when he heard Ryan's hair-raising scream. He'd always wanted to go out with a bang. Well, what a bang. He was finally ready to meet his maker. \n\nHis mission had been a simple one. With his gift of glamour, he was supposed to disguise himself as the Alpha of Stanwood Pack...Jeremy Stanton. Then he was to manipulate his mate, Ryan, to think he was having a dream. He wasn't supposed to say a word to Ryan. All he had to do was give him a smile, a light caress and a few pecks along the jaw. That was it. Although his powers had drastically diminished after the battle between the Wyatt Clan and the Stanwood pack, the Jackal wasn't worried at all because he was supposed to be in and out of there in not more than two minutes. That was a piece of cake. He was The Jackal after all. \n\nBut what the little bully didn't know was that he had his own plan. His plan was to stick it to the Stanwood Pack who had wiped out his clan, by taking out both its alpha and his mate at once. They were mated after all. All he had to do was break that bond. For whatever reason, the alpha was nowhere to be found. Although the pack seemed tight lipped as to his whereabouts, the Jackal felt there was more to it than what met the eye. Wherever Jeremy was, he wasn't going to come back anytime soon. Well, all the better for his plan. All he needed was one demonic bite. And thanks to that bitch, he was in the best position to administer that bite. \n\nHe'd been so pumped he'd almost given himself away. He'd seen the shock on Ryan's face at whatever expression he'd seen on his face. He knew he had to make his move at that instant. Chanting with all the strength he had...calling upon every dark magic that was left within him, he'd swiftly leaned down, pushed Ryan's t-shirt off his shoulder, exposed his mark, and bit into it...hard. He'd instantly severed the bond between Ryan and Jeremy. And if that scream from Ryan was anything to go by, he'd accomplished his mission.\n\nThe Jackal rolled off Ryan and smiled evilly at a white-faced Paige. She looked almost frozen on the spot as she watched Ryan writhe on the couch. Her eyes welled up.\n\n\"What did you do?\" An anguished whisper. \"What did you do?\" Paige turned her head to look at the albino she'd made a deal with.\n\n\"I told you as clearly as I could, that you don't wanna go up against me.\" The Jackal sneered. \"Who's laughing now, you stupid, arrogant, shit...\" The next sound that came out of his mouth was a horrible gurgling sound...\n\nA still dazed Paige had torn out his throat. \n\nThe Jackal's death instantly released Ryan from his lethargic state. He shot off the couch and clutched at his chest. He gasped for breath. His eyes watered. He was actually surprised he was still alive. The level of pain he felt was absurd. Not only did his heart feel as if it was being ripped out of his chest, his whole body was throbbing with pain that was so excruciating he was literally going insane. Immediately after he'd been bitten, he'd felt his wolf go crazy inside him. The wolf had struggled to burst free...escape the agony...but then Ryan had felt him begin to weaken. And that was when Ryan felt something that scared the bejesus out of him... His mate was slipping away.\n\n\"Jeremy...\" Ryan gasped, his face flushed with agony. \"He's dying Paige...\" Ryan couldn't breathe. He fought for air as a horrible sound ripped from his burning lungs. \"He's...I have...Jeremy...what...\" He couldn't seem to string a sentence together. \n\n\"Oh my god.\" Paige breathed, snapping out of the haze she seemed to be under. Her arms went around a trembling Ryan from behind even as she reached out to her father and brother on their mind-link. 'Dad, Lip, I've fucked up. Ryan is, oh my god...Dad...' She screamed.\n\n'Slow down, baby girl.' Joel said softly, trying to get a sobbing Paige to calm down.\n\n'Take a deep breath Slip.' Phillip added even as he shifted and sprinted towards the mansion.\n\n'He's dying!' Paige screamed. 'Oh god, I thought I was helping...' She sobbed. 'Jer...he can feel Jer slipping. Help!'\n\n**\n\nRyan could hear Paige screaming but it seemed to be coming from a very faraway place. He wondered how he could feel her arms around him and yet her screams seemed so far. That wasn't normal at all. As for his wolf, he could feel it weakening by the second. Everything seemed to be slipping away. His mate, his wolf, his sanity, his life... Was he still dreaming, Ryan wondered. If he was, he needed to wake up from the nightmare. But somehow, he knew it wasn't a dream. It was real. Ryan just knew that death was near. He'd never been so scared in his life. And that was when he prayed. He didn't know whether the Supreme Being he'd known of since he was a kid, listened to the prayers of supernatural beings too. Ryan hoped for his sake and his mate's, he did. He'd never been one to pray but in that instant, he felt that it was all he had. \n\nRyan prayed for strength. \n\n***\n\n\"What's going on?\" Gloria asked worriedly, taking in Joel's flushed face. \n\nThe last of the alphas had just left. The briefing had gone very well and everyone was happy and grateful. The various heads, betas and elders which included the council members, were on the beautiful lawn outside the conference hall, staring admiringly at the enormous wolf fountain. The fountain had always been the pride of the Stanwood Pack. It was a dynamic fusion of architecture, sculpture and running water which gave birth to a spectacular display. The classically beautiful solid sculpture displayed an alpha wolf standing on top of a platform, with water flowing from its howling mouth onto about fifteen howling wolves that stood beneath him. The wolves, some of which were smaller than others, also had water spraying out from their mouths. Above the alpha wolf was a big brightly shining moon, at which the alpha seemed to be howling. The classic arrangement of colourful lights added a wonderful whimsical touch to the setting. The werewolves believed that there was something magical about the fountain and that Luna filled their hearts with peace whenever they stood around it. They therefore never passed up an opportunity to stand around the fountain after any major event. Burying their dead colleagues and having a successful meeting with powerful alphas was definitely a very big deal. \n\nThe people standing around heard the worry in Gloria's voice and gave their full attention to Joel. They all waited for his answer.\n\n\"It's Paige.\" Joel responded gruffly. He'd never heard his daughter sound so distraught. \"She's not making sense but it had something to do with Ryan and Jeremy. Phillip is on his way to them. Whatever it is, it sounds bad.\"\n\nEven before he finished what he was saying, Stan shifted and sprinted away towards the mansion.\n\n\"Deloris?\" The High Priestess turned to the only warlock they had on their council. If anyone could get to Ryan faster, it was Deloris. \"Check it out.\" She instructed. \n\n\"Right away.\" Deloris responded, bowed her head and then disappeared.\n\n**\n\n\"Ryan?\" Paige breathed through her tears as she watched Ryan's demeanor change right there before her eyes. Although she could still see the pain in his eyes, he suddenly seemed to have developed a...thick skin of sorts. He didn't seem as he had just moments earlier...as if he was about to die. He looked...dangerous. \"Ryan...\" Paige wasn't afraid of Ryan. She just felt uneasy. \"I've called Dad and Phillip. I'm sorry for causing all this but we will fix it.\" She spoke softly, trying to calm Ryan. She didn't know whether it was working, but that was all she could do. \"I don't know how but I promise, we...\"\n\n\"Alpha?\" Deloris called out softly when she appeared inside Ryan's study, cutting off Paige's tirade. \n\nThe warlock's eyes widened when she took a look at Ryan. Just one look told Deloris that something was very wrong. There was a wildness about him...almost as if he was having a hard time holding on to his control. He paced like a caged bull. The Ryan pacing before her looked nothing like the Ryan that she'd come to know and love. Even when he'd gone up against Reynard Wyatt, he looked grounded...in control. This Ryan...\n\n\"What's...\" Deloris started to speak but trailed off when her eyes landed on the dead albino. \"What is he...I thought he died on the day of the battle.\"\n\n\"I brought him here.\" Paige sounded like she had a thousand frogs stuck in her throat. And she looked terrified, regretful and defeated...she looked terrible. \n\n\"What?\" Deloris screeched just as Phillip's wolf burst into the room. \"We'll deal with that later, Missy. Now, tell me what the bastard did to him?\"\n\n\"He broke Ryan's bond with Jeremy.\" Paige sniffled. \n\n\"What?\" Deloris gasped even as Phillip's wolf shifted back to a very naked, very sexy human.\n\n\"What?\" He roared. \"How the fuck did that happen?\"\n\n\"Not now, Phillip.\" Deloris muttered. \"Something has to be done, and fast.\" She looked lost in thought. The warlock had a bad feeling. The council couldn't bring Jeremy back unless Luna willed it. And unless Luna wanted to communicate with them herself, summoning her wasn't an easy feat. It could take a minimum of two days. \"Oh my god, this is bad.\"\n\n\"I need to get to him.\" Ryan suddenly growled. His eyes began to glow. It was obvious that he'd completely lost it. \"I need to do it now.\" Ryan's voice didn't sound like his at all.\n\n\"Meet us at the conference hall, Phillip.\" Deloris said just as Stan's wolf burst into the room. \"You too.\" She addressed the wolf as she grabbed Paige's hand. \n\nWithout another word, Deloris touched Ryan on the shoulder and then disappeared with him and Paige, leaving behind Stan's wolf and Phillip.\n\n**\n\n\"Ryan...\" Gloria gasped when Deloris appeared on the lawn with Ryan and Paige. Her hand went to her chest when she took in Ryan's glowing eyes. Everyone could feel the sheer force of power emanating from Ryan at that moment. \"Honey?\" But Ryan didn't even spare Gloria a glance. His focus was completely on the high priestess. \n\n\"I want my mate back now.\" Ryan's voice cracked like a whip, the sound reverberating through everyone present. That voice didn't sound human at all. \n\nFor a moment, the high priestess stared blankly at Ryan as if she hadn't heard him. Her mouth was opened in awed shock and her hands were visibly trembling. She knew that she was in the presence of a higher being. And the one person, who was seen as the most spiritual and closest to Luna in the pack, felt like bowing. She snapped out of her daze when Ryan snapped his fingers to get her attention. \n\n\"Err...I...we...\" She stuttered, looking completely overwhelmed. \n\n\"Did you hear what I just said?\" Ryan tilted his head to the side as he stared at the woman. \"This is life and death.\" Ryan could feel the presence of Phillip and Stan behind him but didn't turn to look at them. Just knowing they were there was okay for him. \"If I don't get to him now, he dies.\"\n\nA collective gasp went up at Ryan's words. With the exception of Phillip, Stan, Paige, Ryan and the elders...eight of whom made up the council members, no other pack member knew about Jeremy and the Fort. But Ryan's words sent a shiver of dread down the spine of each person present. The feeling was so intense that the high priestess sprang into action. She didn't need to be Einstein to know that whatever was going on was very serious. And she sure as hell didn't want to go against the being standing in front of her. He definitely didn't look like someone who could be reasoned with. She valued her life too much to attempt to reason up with him anyway. The high priestess knew that she needed to consult with Luna immediately. And even as she turned and began to move towards the council quarters, which was opposite the conference hall, her high command was heard;\n\n\"All council members, to the quarters, now. We need to...\"\n\nBut before she could complete her instructions, Ryan stretched out his right hand and pointed his index finger at nothing in particular. A purple ray of light shot out of the tip of his finger. And then right before the eyes of the people gathered, the portal that appeared to take Jeremy away months earlier, reappeared with its dreadful whoosh sound.\n\nEveryone present gasped. The high priestess stopped in her tracks when she heard that sound...that sound which only meant one thing. She slowly turned around and stared, her eyes bulging out to the extent that they looked as if they were going to pop out. Ryan slowly turned his head to look at the trembling high priest and uttered in a voice so guttural it was almost seductive; \n\n\"I don't think you understand the word, now.\" Then he turned to look at Phillip and Stan. \"Ready?\"\n\n\"Do it.\" Phillip growled whilst Stan grinned like a simpleton. \n\nRyan focused on the swirling portal. Then in a loud and authoritative voice that rumbled across the clearing like thunder...demanding instant obedience, he called out Jeremy's name.\n\nA second. Two seconds. Three seconds. The answering roar...\n\nWhoever was answering to Ryan's call, sounded damn pissed! "
    ],
    "authorname": "adjoaq",
    "tags": [
        "battle",
        "grief",
        "powers",
        "broken bond",
        "jeremy",
        "ryan"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/savage-desire-ch-07"
}