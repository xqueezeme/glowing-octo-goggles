{
    "title": "Alex & Alexa Ch. 14",
    "pages": [
        "Disclaimer: You know the drill. \n\nChapter 14- Well, That's Not Good... \n\nYet another wedding. And once again, not Alexa's and mine. Okay, granted, we live in a country where avunculate marriage is illegal, but after a while, going to other people's weddings can be frustrating, even if they're people you care about very much. \n\nFreja was marrying Jeanie and it had turned into quite the whirlwind of activity. Jeanie was rushing around, not accomplishing much, but to her credit still finding plenty of time for spontaneous sex and orgies. Alexa usually got sucked into the vortex of depravity, and they included me when they could, but they had to be a little more careful about that for obvious reasons. Mom and dad expected my aunt to be apart of that maenadic frenzy, they couldn't know about my involvement. \n\nA lot of times, I was chauffeuring Alexa to the hotel where Freja was staying while I supposedly headed out to the university to continue with our summer internship for the Languages department. When I did make it to the university, I worked like a madman, to make up for the time I was spending with Alexa, Jeanie and Freja. No one seemed to have caught on, thankfully. \n\nThis afternoon I'd been playing hooky from my duties and found myself in a sweaty, slippery tangle of female flesh as we all churned, writhed and moaned on the hotel bed. Freja was lying on her back with her legs spread wide while I knelt between them, pumping my cock in and out of her strongly. She was moaning loudly into Alexa's pussy, who was grinding on her friend's face while kissing Jeanie greedily. Jeanie's body was suspended over Freja's, her arms wrapped around Alexa's shoulders while I held her by her hips, supporting her weight and lapped at her gooey slit. \n\nAlexa's and Jeanie's tongues tangled and they moaned into one another's mouths. Alexa and I were more than strong enough to support Jeanie comfortably in what would otherwise be an awkward position. Freja was the slenderest of the three girls, while Jeanie was in the middle and Alexa was the tallest and most athletic. This isn't to say she was big, of course, because my aunt couldn't even be called husky, but she had the largest tits and her body was exquisitely toned all over. \n\nJeanie shuddered and wailed into Alexa's mouth, cumming on my tongue. This seemed to set off Freja, who squirmed on my cock and clenched it fiercely, bathing my hips in her essence. Seconds later, Freja's tongue sent Alexa into orbit, her face glistening with my aunt's cum. Now that all the women had climaxed, I surrendered to the overwhelming urge to orgasm, pumping my creamy offering into Freja's wanton pussy. \n\nHeaving and panting, we all basked in the afterglow of our shared climax. We gently set Jeanie down onto Freja and they wrapped their arms around one another and began kissing and cuddling. I laid Alexa on her back and sank my cock deep inside her, both of us sighing in pleasure and relief. I felt truly contented and at home now. We kissed lovingly and she wrapped her legs around me to keep me deep inside her. \n\nAs couples in love, we laid side-by-side, enjoying our moments of bliss. Jeanie and Freja were pressed into us, but we didn't mind. After making out for several minutes, Freja sighed. \"It is a pity we must relinquish Alex to the university, because I could really stand to be fucked some more.\" \n\n\"Sorry, darling, you'll just have to make due with Jeanie and I using strap-on's on you while he's gone,\" Alexa said soothingly, reaching over and caressing her best friend's cheek. \"How ever will you survive without cock?\" \n\nJeanie giggled. \"I kinda like doing the ol' bump'n'grind when there's no guy around. It's something only we girls can do, sorta like a secret club thing.\" \n\n\"True, I do love to scissor,\" Alexa agreed. \"But it's a two-girls-only sport and that means one of us is always only watching, or at best getting eaten out.\" \n\n\"Huh?\" I asked somewhat obtusely. \n\n\"Well, I wouldn't expect a guy to understand, since you can't do it or even simulate it,\" Alexa replied. \"But it just occurs to me that there's three of us and tribbing only has room for two. There's no way for us all to get in on the action.\" \n\nI frowned. \"Bull.\" \n\nMy aunt raised an eyebrow at me. \"Alex, it's been that way for thousands of years, trust me.\" \n\nI knelt up now, my cock still inside her, but thinking. Alexa almost frowned at me, taking exception to interrupting our tender moment to disagree about the logistics of tribadism. \n\n\"Alex, we've thought about this before.\" \n\n\"Well, yes, but thinking is for the gloopy ones,\" I replied, channeling my inner Anthony Burgess. \"While the oomny use, like, inspiration, and what Bog sends.\" \n\nFreja gave Alexa a sour look. \"Is he using A Clockwork Orange against us?\" \n\n\"Well, his name is Alex...\" my aunt sighed. \n\n\"Ooh, I've seen that movie,\" Jeanie said, trying to contribute. \"I cosplayed as the main guy one year. I think I fucked a girl as him, too. Didn't kick her in the stomach, though. Drank a lot, felt like barfing.\" \n\n\"Jeanie, darling, hush,\" Alexa said gently, touching her fingers to her friend's lips. \"Continue, Brainiac.\" \n\nTo my regret, I pulled out of my aunt and studied the three of them, as well as the bed. Alexa propped herself up on her elbows, clearly considering this a waste of good cuddling and fucking time. However, she allowed me to ruminate, so props to her. Jeanie was absently humming 'Singing In The Rain' to herself. \n\nI began pointing. \"Freja, lie on your side in the middle of the bed.\" The Danish girl complied and then I motioned to her fianc\u00e9e. \"Jeanie, do the same and press yourself into her as hard as you can.\" \n\nJeanie scuttled down, lying on her side and pressing herself as hard as she could into Freja, their breasts and pussies squashing together. \n\n\"Now can you two girl-fuck one another like that?\" I asked. \n\nIn response, they looked into one another's eyes while Jeanie slung a leg over Freja's waist and began squirming and grinding their hips, their wet slits mushing together. They both nodded in the affirmative. \n\nI looked at my aunt. \"Alexa, since you're the tallest and have the longest legs, just kneel between them and push in, holding on to their upper legs if need be. Go on, try it.\" \n\nAlexa made a wry face, but did as I asked. While Freja and Jeanie kept their pussies squished together, she told hold of their legs as she knelt over them. Her longer limbs allowed her to scissor herself in, her wet womanhood pressing into theirs. The shuddered as she began to squirm in rhythm with them. \n\n\"Fuck,\" she grunted, her eyes squeezed shut. \"You motherfucker, you were right! This can work if you try!\" \n\n\"Maybe, but I wanna try something else,\" I replied, smiling evilly. \"Freja, Jeanie, lie in opposite directions from one another on your backs, but keep girl-fucking.\" \n\nThe two of them pulled away from one another while Alexa disengaged and watched. They laid on their backs and scissored their legs past one another until their pussies squashed again. Holding one another's wrists, they began squirming, moaning in pleasure and clearly enjoying the experiment, whether it failed or not. \n\n\"Can you arrange yourself on top of them and sorta nestle in there?\" I asked. Alexa snaked herself over the other two and pressed down onto them, her pussy squirming into theirs. Her long legs allowed her to steady herself while writhing. She closed her eyes and sighed. \n\n\"Gnnnn, you bastard,\" she sighed. \"I oughta be so mad at you about this. You proved three-way fucking for girls exists.\" \n\n\"I know,\" I said, pleased with myself. \"Before my dad did, possibly. It's like finding the theory for infinite energy. An engine powered by a lesbian flywheel.\" \n\n\"Klamt,\" moaned Freja, shivering as their three pussies mingled against all odds. \"Is he always this insufferable?\" \n\n\"Only when he's right,\" Alexa panted, leaning down and reaching for their breasts, which she groped eagerly while fucking them. \"Guess he takes after my sister that way.\" \n\n\"I got one more,\" I said, beckoning to them. \"C'mon over to the chesterfield.\" \n\nThe three girls disentangled themselves and followed me to the indicated furniture. I then took Alexa by the hand and began positioning her. She allowed me to do whatever the Hell I was doing, because she trusted me implicitly, no matter how crazy it seemed. I made her lie on her shoulders and upper back at the foot of the chesterfield, resting against it with her legs in the air. I then pulled her legs apart gently until she was almost doing a perfect split upside down. \n\n\"Freja, Jeanie, stand over her and you can grind against her and each other now.\" I said to them, pointing at my aunt's splayed legs and available privates. They both eagerly clambered over her, one of their feet near her head while the other leg knelt on the cushions above. The two now pressed their pussies down onto hers and into one another's. It worked because Alexa's hips were the widest and she was the most flexible. Freja and Jeanie grappled onto one another and began kissing hungrily while squirming their slits together and down onto Alexa's. All three moaned in pleasure. My aunt sighed and fondled her breasts while the two above fucked shamelessly. \n\nI just watched smugly, using my phone to get some up-close and personal recordings of the action, especially when all three of them strained and groaned loudly, cumming on one another before Freja and Jeanie collapsed on the chesterfield, exhausted. They pulled Alexa up to join them in the slick, warm tangle of female flesh and cuddled into her. I nodded in satisfaction and stopped recording. \n\n\"Well, my work here is done,\" I said simply, but my tone of voice had the quality of a grand bow. \"I suppose I should get dressed and head off now, gotta keep up appearances at the university, after all.\" \n\n\"Yeah, that's right, you'd better run...\" Alexa murmured rather feebly, flopping a hand in my direction. Y'know what's good for you... smug bastard.\" \n\n\"Thanks, by the way!\" Jeanie called out as I gathered up my clothes and headed into the bathroom to change. \n\n\"Jeanie, no!\" Alexa hissed. \"If you compliment him, then he's won! Never let the male think they've won!\" \n\n\"Oh, shit, I've been doing it wrong my whole life, then.\" I heard the air-headed brunette say in distress. \n\n*** \n\nSeveral weeks had passed since my dad had been stabbed and he was working out again regularly, with mom watching carefully to make sure he didn't overdo it. I made the mistake of pointing out that he would probably only overdo if it he was trying to impress her, so her presence might be counter-productive. \n\nThe look she gave me made it abundantly clear that she wasn't too old to have more children. If she killed me, she'd just make another, and tell them what an idiot the last kid was. I stopped talking. \n\nSo, there we were, in the campus gym, watching my dad use the curl bar to help peak his already ridiculously peaked biceps. Mom was sitting nearby, drinking water and reading a treatise on dark matter. Dad invited me to work out alongside him, but I wasn't feeling it at the moment, having done some exercise that morning, and just spotted for him instead. \n\nAlexa showed up after a while and my mom got up and hugged her before bringing her to sit. \n\n\"Where are Flopsy and Mopsy?\" mom asked. \n\nAlexa smirked. \"I'm sure they'll be here soon, I told them Mike was working out and Freja hasn't really seen your husband's shredded bod yet. They can't be far off.\" \n\n\"Which one's Flopsy and which one's Mospy?\" I asked my mother. \n\nShe shrugged. \"Well, which one is likely to end up on her back first? That'd be Flopsy. The one you'd use to sponge up all the fluids after would be Mospy.\" \n\nAlexa shivered and made a grossed-out face. \"There's some imagery I didn't need. Even worse, I still can't decide which is which.\" \n\nWe all laughed, including dad from his place nearby. Alexa gave him a wry look as she observed the amount he was curling. \"I'm pretty sure that's more than Jeanie and Freja weigh combined, bro. You're scary.\" \n\n\"You think I convinced them to give me the department head post in Astrophysics when I retire with my intellect alone?\" he replied cheerfully, doing his eight-zillionth rep. \n\n\"Probably,\" Alexa said. \"I'm just surprised you didn't pull a Milton Berle and flop your johnson out on the table to intimidate them all.\" \n\n\"Oh, you didn't actually do that, did you?\" mom asked in distaste, giving him a wry look. \n\n\"Not without you being there,\" dad answered. \"Can you imagine how that would've gone?\" \n\nCan we please stop talking about my dad's weenie?\" I pleaded. \"First it's my aunt's jugs wiggling in my face, then mom's nude in my hotel room, guilty of streaking, and now dad owes his senior position in the university hierarchy to the size of his shmoo? Why can't this be made up?\" \n\nThey were all laughing at me when Flopsy and Mopsy arrived. Jeanie was giving mom and Alexa squishy hugs (the only kind she knew) while Freja had simply walked up to dad and was staring at his muscles in fascination. \n\n\"You're too big,\" she muttered, poking his abdomen. Dad had been exercising without a shirt, so his muscles were quite visible beneath his gleaming skin. \"What would have been so wrong with being a normal size?\" \n\n\"More me means less biomass available to cultures who inflict Aqua on the species,\" he answered, smirking. \"Consider it a world-wide service, hopefully worthy of a Nobel Prize.\" \n\n\"Here we go...\" mom muttered under her breath. \n\n\"Don't make me come up there.\" Freja said in what she hoped was a dire tone. \n\n\"Or what?\" dad asked carelessly, continuing to work with his curl bar. \n\n\"I'll teach you,\" she shot back. \"I have taken ju-jutsu, I will have you know.\" \n\n\"Huh,\" he grunted with mild disinterest. \"What school?\" \n\n\"Gracie.\" \n\n\"Oh, I'm sorry,\" he said, his voice oozing sympathy. \"How many participation trophies did you get at local martial arts tournaments?\" \n\n\"The bigger they are, the harder they fall!\" Freja said hotly, her body stiffening. Her little fists were bunched up at her sides. \"Would you care for a demonstration, Grendl?\" \n\nDad considered for a moment and shrugged. \"Why not,\" he said finally, putting down the curl bar. \"I've got a few minutes before I start my next set.\" \n\nHe gestured toward the area where the wrestling mats were set up, allowing Freja to stride purposefully toward them, leading the way. I looked at mom warily and she shrugged and stood up, putting down the treatise. \n\n\"You can always find a new bestie, right, Alli?\" mom asked her sister. \n\n\"I dunno,\" Alexa replied. \"Freja's pretty good, she actually got her Second-Dan black belt in ju-jutsu.\" \n\n\"Uh-huh,\" mom said somewhat disinterestedly, leading us over to the mat. \"Alex, you know where the squeegee mops are in the supply cabinet, right?\" \n\n\"Yup.\" I said grimly. \n\nWe stood at the edge of the mats while Freja stared up at my dad in the middle of them. The height disparity between them was nothing short of amusing, since she barely reached dad's sternum. To her credit, she didn't budge as he towered over her. \n\n\"So, how do you want to do this?\" dad asked, looking down at her. \n\n\"It's your funeral, why don't you choose?\" she said in a challenging tone. \n\nDad shrugged and laid down on his back. \"How about this? At least you can reach me from here.\" \n\nFreja cheeks coloured quickly and she bolted in and grappled onto one of dad's arms, locking it up and wrapping her legs around it, like she was going to wrench it out of the socket. Dad just waited patiently. Freja grunted and strained with the effort. Almost a minute passed and nothing seemed to be happening. \n\n\"How's it going over there, Reepicheep?\" Alexa called to her friend. \n\n\"Gnnnnn, he... will submit...\" Freja growled. \n\n\"He will?\" dad asked, looking up over his shoulder, pretty much directly at Freja's booty shorts-encased butt. \"Why is he always the last to know?\" \n\n\"I... am... your... God!\" she gasped as she strained, pulling for all she was worth. \n\nAnd then dad lifted his arm- not quite ninety degrees, but right off the mat, with Freja still grappled onto it. She squeaked in surprise as she realized she was no longer in contact with the floor. \n\nThen he dropped his arm. Not hard, he just let gravity do the work for him. Master of physics and all that. \n\n*THUMMMMP!* \n\nJeanie and Alexa both winced while mom watched impassively. Now back on the mat, Freja didn't move at all for several seconds. She just stared at the ceiling blankly, her limbs still locked around dad's arm. Then her arms and legs slowly uncurled and she lay very still, gazing off into space. Dad stood up and walked away. \n\n\"Puny god...\" he rumbled, heading back to his curl bar. \n\nWe all stared at Freja for several seconds before Jeanie went over and knelt down next to her, concern playing over her features. \n\n\"She's not dead, is she?\" the brunette asked. \"Because getting another fianc\u00e9e on such short notice would be a real pain in the ass.\" \n\n\"Seriously, girl, what were you thinking?\" mom inquired as she went and knelt next to Jeanie and helped the Danish girl sit up. \"I didn't know being uppity was a national trait for you people.\" \n\n\"It's not,\" Alexa sighed. \"It just is for her. I'll be honest, though, I thought she'd last a little longer than that.\" \n\n\"Oh, now you're just being dumb, Alli,\" mom chided. \"You remember the fight in the bar. He's at least as good at breaking things as he is at weird physics.\" \n\n\"My cunt can attest to that.\" Jeanie said, earning her a look and a swat from my mother. \n\n\"Why didn't you warn me?\" Freja groused as she let my mom and Jeanie help her stand. \n\n\"Why bother?\" Alexa replied, shrugging. \"Not like you would've listened. Having him shatter every bone in your body is as close as you'll ever get to having sex with him, so you just went for it. How the Hell could anyone stop that?\" \n\n\"Fine, fine,\" Freja grumbled. \"You got me. Worth it, though.\" \n\n\"I'll never understand women.\" I muttered, making the four of them giggle. \n\n*** \n\nTwo days before the wedding, Freja's family arrived at the airport. Alexa had explained to me about who everyone would be and any details I should readily know. The first thing that made my head spin was the sheer number of them who were showing up. It was beginning to sound like half of Denmark was going to be at the wedding. \n\nFreja's parents, three grandparents, a younger sister and brother, six cousins, three aunts, two uncles, two step-cousins, twelve cousins-once-removed or something... there were well over thirty people arriving, and chaos ensued. \n\nThere were endless cries and screams of delight when everyone saw Freja and equally as much noise when they saw Alexa, who was apparently one of the family. Freja's parents hugged her tight and there were tears shed. \n\n\"I swear, Alexandra,\" said Freja's mother in heavily-accented English. \"I thought for years it would be you that she married. Your mother never agreed, but she knew how close you were. I guess Miranda was right.\" \n\n\"It's okay, Anna,\" Alexa said, with tears in her eyes. \"You know I love Freja, but Jeanie is going to make her very happy, I promise you.\" \n\n\"And now let us meet your family.\" Anna announced. \n\nIntroductions were made, and it was sort of surreal, to be honest- everyone was clamouring to know Alexa's older sister, whom they had never met, even though they knew my grandmother, Miranda. Add to this the complication of mom's maiden surname being Gordon and Alexa's being Blackwell and you had a recipe for confusion. \n\nAnd then everyone gawked at my dad, who was, once again, far taller than everyone. One little girl about age three hid behind a cousin and cried, at least until dad gave her a treat; then he was her boyfriend and couldn't get rid of her. She rode around on his shoulders, lording it over everyone else. ",
        "Several members of Freja's family expressed an interest in Alexa as a mate, now that she was back on the market, and when she made it abundantly clear that she was not available, many of the women began inquiring about me. \n\n\"You should consider it, Alex,\" Freja teased. \"Danish families can be fun!\" \n\nThe mingling was likely to continue, but we were taking up a great deal of the room inside the terminal, so mom announced that we should head out to meet Jeanie's family. Vehicles had been rented, hotel rooms reserved, and they followed us out. Dad and I led the way, since mom, Alexa and Freja were the center of attention. \n\n\"That was strange.\" I mused as I walked with him at the head of the pack. \n\n\"Get used to it where Gordons and Blackwells are concerned, boyo,\" he said cheerfully. \"They attract a weird crowd.\" \n\n\"So, all of Denmark is weird, then?\" I posited. \n\n\"Aqua.\" \n\n\"Right, right,\" I muttered. \"They sure like mom and Alexa.\" \n\n\"They're happy to see Alli again, rightfully, and your mom represents a missing piece of a puzzle for them. Your aunt told us one night exactly how close they were to Freja's family when they lived in Denmark. I guess we'll be treating them like an extension of our clan now.\" \n\n\"D'you think they'll like Jeanie?\" I asked. \n\n\"She's a likeable girl, Alex,\" dad replied. \"Good-hearted and well-meaning like few people are. To be honest, it was kind of a curse for her to be born wealthy, because she can't just be a normal girl. It's gotten in the way of her happiness. Yes, she's dumber than a bag of hammers, but Freja doesn't care. I don't think Freja really cares about the money, either.\" \n\n\"So you think they're a good match.\" \n\nHe considered. \"I think they'll beat the odds, yes. And I'm happy for them. They're luckier in that sense that you'll be.\" \n\nI tilted my head as I looked at him. \n\n\"Something I realized a long time ago, when I fell in love with your mother,\" he explained. \"And the same will apply to you. If you ever take any piece of advice I ever give you concerning marriage, Alex, it's this- marry someone who is your intellectual equal.\" \n\n\"Like you and mom.\" \n\nHe nodded. \"Your mother is every bit my equal, no question, she's just not as overtly bombastic. I may have hoped to marry her, but she decided to marry me. And it was the best thing that ever happened to me. Except possibly you, of course.\" \n\n\"That's me, everyone's favourite afterthought.\" I laughed. \n\n*** \n\nI'll give her credit, Jeanie was a big hit with the Kjaer clan. She was genial and courteous, even if it was obvious that she didn't have a lot going on upstairs. She was constantly getting names wrong or mixed up, but no one was offended and the laughter wasn't derisive. It was good to see her getting along with people who weren't after her for sex or money. \n\nHer parents, who I was now meeting for the first time as well, were stand-offish initially. The Kjaers seemed to not notice the derisive tone Jeanie's parents were taking with them, almost as if their disdain for peasants could be barely be contained. \n\nBut then mom took them aside. They weren't gone more than ten minutes, and when they returned, their attitudes had changed entirely. They were every bit as genial and welcoming and pleasant as their daughter, almost feverishly so. \n\n\"Okay, how the Hell did you manage that?\" Alexa asked as we stood nearby with my mom and dad, watching the new dynamic. \n\n\"Simple,\" mom said somewhat sternly. \"I spoke in the language they understand, money. I let them know that you and I were Blackwells, a family that could buy theirs about ten times over, and that if they didn't start treating Freja's family with respect, we would buy them. And I'd adopt their daughter and make sure she couldn't even remember their names two weeks from now.\" \n\nAlexa giggled. \"Nice bluff, seeing as how you and I aren't heirs to the Gordon or Blackwell fortunes.\" \n\n\"No, but we could be if we wanted to be,\" mom pointed out. \"Don't forget, darling, at the end of the day, you and I are the crowning achievements of both those families. What we say would be law, if we chose to assert ourselves, just like mom could have.\" \n\n\"Never really considered it, because I've never really dealt with them.\" Alexa admitted. \"I guess you guys are getting to know my Kjaer family and I've got to learn about the Blackwells and Gordons. And the De Bournes, of course.\" \n\n\"Of course.\" dad said, nodding. \n\n\"I don't need to become a business magnate or anything now, do I?\" Alexa asked, making a wry face. \"I mean, I like drinking whiskey and I like using software, but I don't want to focus on them.\" \n\n\"No, it won't come to that,\" mom said dismissively. \"You're perfect the way you are.\" \n\nWe'd actually nabbed some facilities at the university for this big get-together, courtesy of mom and dad, so that Jeanie's parents didn't feel put-upon for having to rent a hall. The university had even agreed to let the reception be held on the grounds, while the wedding would be held in the nearby botanical gardens. Dad arranged all of this, as long as everyone promised no Aqua would be played at any point during the reception. You take victories where you can get them, I guess. \n\nCatered food arrived, much to my surprise, but when it turned out that Jeanie's parents had ordered it on the fly and I remembered mom's threat, it all made sense to me. Dad and I corralled the Kjaer men into helping us set up tables and chairs for everyone, which they did readily. I kept working steadily while dad had to stop on a regular basis to hear stories about Danish men of impressive size and strength. Pretty sure I got the better end of the deal. \n\nMom, dad, Alexa and I mostly sat and watched while Jeanie's family and Freja's began getting to know one another and make arrangements. The Kjaers promised they weren't moving here en masse, while Jeanie promised to continue her education, in whatever field would have her. Mom and dad, as the power brokers for this whole thing, simply made sure that everything kept on track. A Lutheran minister was found to do the ceremony through the university's faculty of religious studies. \n\n\"I can't decide if this is gonna be a big thing or a small thing.\" I mused as I watched the proceedings. \"Yeah, there's thirty weird Danish people here, but only Jeanie and her parents on the other side.\" \n\n\"Jeanie's whole family will be there,\" mom said, nodding. \"And I've invited the Blackwells and Gordons, at least the ones nearby. It's a great way for them to meet Alexa, but more to the point, it'll really make this a dream-come-true wedding for Jeanie.\" \n\n\"You really have a soft spot for her, don't you?\" Alexa said, putting her hand on mom's forearm and giving it a squeeze. Her eyes were shining. \n\n\"It's hard not to,\" mom replied. \"She's a sweet girl, genuinely nice and well-meaning. She spent most of her life terrified that she'd be alone, emotionally if not physically, that people would only ever want her for money or sex. Making sure this happens for her is the least you can do for someone who's so nice.\" \n\n\"As long as you don't have to talk to her,\" Alexa giggled, looking at my dad. \"What was it you said once about conversing with her?\" \n\nDad shrugged. \"Talking to Jeanie is like masturbating with a cheese grater- slightly amusing, but mostly just painful.\" \n\n\"The things that come out of your mouth, mister...\" mom sighed, shaking her head. \n\n\"Freja's rather smart, so this should be interesting,\" Alexa added. \"But you can't choose where the heart leads you.\" \n\n\"No argument there.\" mom muttered. \n\n\"I'm glad Jeanie said she'll continue her education,\" I said, diverting the conversation. \"But do we even have graduate programs to become a paperweight or a speedbump?\" \n\nTheir laughter was drowned out by the general merriment of the festivities around us. \n\n*** \n\nJeanie's parents had gone home for the night, leaving their daughter in our care. We ended up at the hotel room of Freja's parents, which just happened to be in the same one their daughter was staying at. Freja told them quite bluntly she had no intention of being quiet at night just because her parents were nearby, to which her dad replied that some things never changed. \n\nPeople seemed to have divided up into little groups to talk at this point- dad, mom and Freja were sitting with her parents, mostly getting to know one another. Mom's eyes were often glistening with tears as she listened to them talk about Miranda, my grandmother, and how much she and Alexa meant to them. \n\nAlexa had been stolen by the young children, who had apparently missed her horribly. Alexa, inhumanly flexible creature that she is, had her feet hooked behind and over her shoulders, and was walking around the room on her hands, making growling noises as she chased them. The kids were squealing in delight and they stampeded around, ignored by everyone else. That left me sitting in a corner with Jeanie, occupying two comfy chairs. \n\n\"D'you really think it's gonna be okay?\" she asked in a quiet voice as she watched. \"I mean... I'm getting married. I'm scared, Alex.\" \n\n\"I would be worried if you weren't,\" I said easily, looking at her. \"It's only natural to be scared, Jeanie. But I'll be honest, you got really lucky. I don't mean that you're lucky because you're marrying up, what I mean is that you're lucky someone like Freja literally just dropped into your life. And she's lucky too.\" \n\n\"I guess,\" she murmured, looking at everyone. \"I could've fallen in love with Alexa, because, well, who wouldn't, right? And Freja wrestled with her feelings over Alexa for years, knowing that they couldn't ever truly be together. She may've wanted it, but she knew she wasn't the right person for Alexa.\" \n\n\"They're best friends, no doubt, but that doesn't mean they're in love,\" I agreed. \"I'll tell you what my mom and dad said about you and Freja, and I'll be honest- true love comes around probably only once, if you're lucky. Maybe Freja's smarter than you, Jeanie, but she also doesn't care. You've got a whole world of love to offer her, so don't squander it. I'm pretty sure Alexa will tell her them same thing.\" \n\n\"Sorta seems unfair, Fre and me getting married just like that, while you and Alexa can't even be found out,\" she said, a note of regret in your voice. \"You're a perfect couple, just like the profs. I wish I knew how to help you, but there I days I don't even get your name right. I only remember Alexa's because she spelled it out in my cunt about two hundred times with her tongue.\" \n\n\"I don't need you to remember my name that badly,\" I chuckled. \"But for what it's worth, we're all in your corner, and we're all very happy for you.\" \n\n\"Thanks,\" she said, smiling at me warmly. \"That means more to me than you'll ever know.\" \n\nShe went back to looking at the proceedings around the room. I couldn't tell if she was actually paying attention or had just spaced out. Probably two minutes had passed before she blinked and looked back at me. \"This may be a strange question, but, um... after Fre and I tie the knot, d'you think that... y'know, you, Alexa and us can still, well, have fun?\" \n\nI ignored her grammar and nodded. \"You are absolutely welcome to with Alexa if she's okay with it.\" \n\n\"What about you?\" \n\n\"If Alexa's involved, then yes,\" I said. \"I would be happy to, you girls are the best sex I've ever had.\" \n\n\"That makes me happy,\" she said, beaming. \"Life's changing so much, I don't want all the little joys in life to suddenly go away.\" \n\n\"I somehow doubt that marrying Freja means spontaneous sex is no longer an option for you.\" I pointed out. \n\n\"Oh, I know that,\" Jeanie agreed. \"We've talked about a committed marriage that is still open, we decided that we'll simply share anyone we're going to fuck.\" \n\n\"Sounds perfect for you both.\" I said, grinning. \"I'm happy to be a part of it.\" \n\n\"Well, you're kinda the go-to dick now, with your dad out of the picture,\" she admitted, making my skin almost crawl. \"Not that I'm complaining, you're really good at what you do.\" \n\n\"Just don't let it get around,\" I said somewhat uneasily, with my mom and dad sitting not too far away, even though they were deeply engaged in conversation. \"They know you two fuck Alexa, trying to explain how I fit in would ruin everything.\" \n\n\"Oh, that's true,\" she said, as if that hadn't been apparent already. \"My lips are sealed. You sure the secret's safe with Fre's family? She said they know.\" \n\n\"I sure hope it is...\" I sighed, watching my aunt waddle around the room on her hands, chasing the children. \n\n*** \n\nWe'd returned home. It had been a long day, so my parents had gone up to bed, with Alexa yawning and doing the same. She waited until after my parents had drifted off and then came down to the basement to see me. She melted into my arms and we kissed deeply, moaning in relief at finally being together. Our naked bodies pressed and she caressed me lovingly as I ran my fingers through her hair. \n\n\"I've wanted you all day,\" she whispered through the kiss. \"All day, I've been wet for you, Alex. Desperate for you. Even while I was having fun with Freja's family, who I've missed so damn much, there was always this deep yearning to just be with you, to have you inside me, to make love to you.\" \n\nI rolled her onto her back and undulated my hips against her. She squirmed her gooey pussy against me until my cock was throbbing and hard, at which point I slid it deep inside her. She sighed in pleasure, her eyes shining with love as she looked up into my face. \n\n\"And welcome to my happy place,\" she cooed, her hands caressing up and down my back now as she pumped against me slowly. \"I love you so much, Alex.\" \n\n\"I love you too,\" I whispered, meaning it with all my heart and soul. \"I've been wanting you all day as well.\" \n\nWe stopped talking and continued to make love, words becoming unnecessary. She held me close as I slid my cock back and forth inside her and we kissed deeply and lovingly. She squeezed her pussy around me, making me shudder in pleasure. We kept the lovemaking slow and sensual, not at all eager to cum any time soon, but simply to be lost in one another. These moments between us were far too few, and we were desperately in love. \n\nShe sighed loudly, crushing herself against me as she came, her womanhood clenching and fluttering around me. I made her cum two more times before she smirked at me and poked my nose. \n\n\"You take such good care of me,\" she purred. \"How about you take good care of my ass now?\" \n\nI nodded and pulled out of her. She felt no need to switch positions and simply tilted her hips up, exposing her puckered knot to me. Still slippery with her cum, my cockhead pressed against the little ring and popped through, making us both shiver. She moaned softly as I pushed myself deep inside her, finally bottoming out and holding myself there. \n\n\"Mmmmmmmm,\" she sighed, her eyes closed while she reveled in the feel of me. \"I'll never get tired of this...\" \n\nI rocked back and forth on top of her, rolling her hips slightly while she churned and squeezed me with her ass. Her arms were hooked around my neck and she clamped her legs around my waist, pulling me in even deeper. We kissed feverishly, one of my arms propping me over her while the other squeezed and groped her breasts. The feel of her incredible body beneath me, the unreal delight of making lover to her... how could I ever give this up? \n\nWhy must I? \n\nAlexa was panting beneath me and bucking her hips rhythmically, flexing her ass around my throbbing tool. She pressed her forehead to mine, gripping me tight. My thrusts were strong and steady, bringing us both closer to the bliss we now sought- a mutual ecstasy that we could not do without. \n\n\"Yes, Alex...\" she whispered, her fingers caressing my neck. \"Cum in me, my beautiful husband. Cum in your loving wife...\" \n\nHer words sent my heart soaring and I pushed down deeper inside her, making her gasp. She pressed her mouth to mine and kissed me feverishly, using her legs around my waist to pull her hips off the bed and crush herself to me, straining. I pushed down into her with all my might, my body shaking with effort before the dam burst- we moaned into one another's mouths as we came together, my pearly essence flooding deep inside her ass. We writhed, bucked and churned together, lost in rapture. The tingling fire of orgasm blossomed through me, touching ever fibre of my being. \n\nShe collapsed onto the bed and I went with her, both of us panting in exquisite exhaustion. I could feel my cock throbbing inside her and the beat of her heart around me. My eyes were closed, the darkness punctuated with unreal scintillating colours and a deep bliss. I don't know how long we were holding one another, just that this moment never needed to end. \n\nAlexa finally sighed in contentment and found her voice. \"Love me?\" \n\n\"I gots no other way to be.\" I replied, smiling and rubbing my nose against hers. \n\n\"Let me stay with you tonight, Alex,\" she whispered, caressing my face. \"My door upstairs is closed, Mike and Karen will just assume I'm sleeping in after a long day. I already told Freja and Jeanie to let me contact them and not the other way around, so they won't message me. Your parents won't come down here, will they?\" \n\nI shook my head. \"They never have. That one night my dad called down and turned on the lights was as close as it's ever gotten. They respect my privacy, especially since they know I sleep in the buff.\" \n\nShe giggled. \"That's one of the principle reasons that I like to come and bother you in the mornings. May I stay with you tonight, then?\" \n\n\"I'd love that more than anything,\" I said with complete honesty. \"If you never left my side again, I'd be the happiest man to ever live.\" \n\nShe kissed me again and then allowed me to pull gently out of her ass. We took turns using the bathroom and then cuddled close, arms wrapped around one another. We kissed and whispered words of love before drifting off to sleep, both of us dreaming about a future we knew could never be. \n\n*** \n\nI was yawning and scratching as I stumbled upstairs, clad in boxer shorts and a t-shirt with a Clan Wolf logo on it. The kitchen and dining room smelled of strong coffee, bacon, eggs and toast. Sure enough, dad was sitting at the table, reading a paper while mom was shovelling a few kilotons of eggs onto a large plate. \n\n\"Good morning, Cinderfella,\" dad said cheerfully, looking over at me. \"Nice to see yesterday's insanity didn't wipe you out completely.\" \n\n\"I got off lucky,\" I said, shrugging. \"All I really had to do was talk to Jeanie for a few, literally a no-brainer. At least I didn't spend two hours walking around on my hands with my knees latched beside my ears.\" \n\n\"Good Lord, that girl is unreal,\" mom muttered, pushing a few pigs' worth of bacon onto dad's plate. \"She belongs in Cirque Du Soleil with that flexibility.\" \n\n\"I wonder if we could turn that into a sex position...\" dad mused as he put down the paper and reached for the Tabasco sauce for his eggs. \n\n\"Dear!\" mom exclaimed, shooting him a look while I scowled and clamped my hands over my ears. \"It's too early to troll your son like that.\" \n\n\"If we don't talk to our son about circus freak sex, who will?\" dad laughed, making mom roll her eyes and sit down, resigned to my mental corruption. \"But Alex is right, I'm sure Alli is completely dragged out after all that activity. She's still sound asleep up there, her door is shut tight.\" \n\n\"Well, even if she weren't exhausted, she sleeps in the buff, so the closed-door thing is a courtesy,\" mom pointed out. \"She must really be zonked, though. Even the coffee isn't waking her up, and this is her favourite roast.\" \n\n\"She messaged me last night before she crashed,\" I said as I poured a cup of coffee for myself. \"Told me that she would get up eventually and that she told Fric and Frac to let her sleep, that she'd call them. She gave me a heads-up in case they decided to bug me by proxy.\" ",
        "\"Nice to know she's thorough before she goes comatose,\" dad mentioned, already halfway through his first plate of food. \"Your mom and I will be somewhat busy today, we convinced some Hospitality students from the nearby tech college to coordinate the planning for the events.\" \n\n\"How'd you do that?\" I asked. \n\nMom shrugged. \"We know the profs at the college and they agreed to let this count as practicum for any students who volunteered. There's four of them working on it now. Brute labour'll be provided by the Kjaer men, your father and yourself.\" \n\n\"This is turning into quite the event.\" I said. \n\n\"Well, once we knew it was actually happening, we subtly began planning,\" mom explained. \"We had no idea how involved Jeanie's parents would be, and the Kjaers were still in Denmark. We had to be ready for a small ceremony or a big to-do, so we kept our options open. And it didn't cost us a penny, so win-win.\" \n\n\"But Alli'll need to get up at some point,\" dad mentioned. \"We have a rehearsal dinner and all that. Which reminds me, would you be okay with standing in as part of the wedding party, if necessary?\" \n\nI shrugged. \"For who? I mean, Alexa's probably gonna be the Maid of Honour for Freja, and there's plenty of women on the Kjaer side, not to mention men. How would I fit in?\" \n\n\"Jeanie invited a few of her friends in addition to family,\" he replied. \"One of whom is Heather, who you already know biblically. I imagine you'll be paired off with her for convenience.\" \n\n\"Beats getting stuck paired with my aunt again.\" I sighed. \n\n\"Oh, be nice, Groucho,\" mom chided. \"You could do a lot worse than being matched off with Alli for a wedding party. People get stuck with relatives all the time, they're just never as spectacular as she is.\" \n\n\"Spoken like a true big sister,\" I grimaced. \"Look, whatever needs to happen, whatever part I need to play, that's fine. If there's an open bar, it's all good.\" \n\nWe ate and discussed the day's plans over coffee before dad announced his intentions of going for a swim. Mom followed him out, deciding they would be skinny-dipping together and leaving me to finish my breakfast. The sliding back door had barely closed before Alexa came padding quickly up the stairs from my room, dressed in the see-thru nightie she'd been wearing when she came down to see me, along with see-thru panties. She pulled me against the wall and we kissed and ground hungrily against one another for several seconds before we broke the lip-lock, panting heavily and staring into each other's eyes in barely-restrained lust. She then hurried upstairs and quietly closed her door. I sighed heavily and sat back down, trying to calm my raging hard-on. \n\nMom and dad came back in finally, wet of hair but thankfully wrapped in their plush robes. Mom made a wry face and looked up the stairs. \n\n\"That girl still not awake? Alex, go get her, will you?\" \n\n\"Uh, no, she sleeps in the buff, remember?\" I replied. \n\n\"Yes, the sheer trauma of seeing your gorgeous aunt naked,\" she said dryly, shaking her head. \"What ever would you do? Fine, wait here, Pollyanna.\" \n\nMom went upstairs while dad and I drank coffee. We heard her knock and announce herself, then open the door to Alexa's room and head in. It was maybe five minutes before they came downstairs together, with Alexa wearing a long t-shirt and some panties beneath them. The t-shirt did very little to restrain her opulent breasts and I did my best to make a point of not looking, as my parents had come to expect. \n\n\"She's clothed, Lord Autumnbottom, it's okay to look up.\" \n\nI sighed and greeted Alexa, resolutely making eye contact and looking nowhere else, to the amusement of my parents. Under other circumstances, I would find the amusement annoying, but it was better this way, for obvious reasons. The plans for the day were laid out again, and Alexa finally messaged Freja and Jeanie. Within moments, her phone was blowing up with endless messages. Her head thunked against the dining room table in despair. \n\n\"Is it too early for absinthe and champagne?\" she groaned. \n\n*** \n\nTradition was mostly thrown out the window for the day, since there was much to do. I ended up playing chauffer for the brides and closest associates as they went for their final wedding dress fittings. Neither girl was assuming a 'groom' role in the marriage, so two elegant bridal gowns were in order. Not surprisingly, neither gown was all that modest. Both were backless and the bodices enhanced Freja's and Jeanie's cleavage to the place where they almost looked like they were Alexa's size. \n\nI was sitting on a small padded bench and watching the proceedings, while Alexa was fussing over her friends, who stood side-by-side on a small dais for viewing. Two of the shop's attendants were making sure all the alterations were in place. Freja and Jeanie mostly just stood there and giggled, trying to not feel one another up. \n\nMy eyes were closed and I was lost in thought when I felt someone sit down next to me- I opened my eyes and saw Freja's mother, Anna, smiling at me. She was a kindly-looking lady, about my mom's age, with greying hair and cheerful hazel eyes that reminded me of her daughter. \n\n\"It is very good of you to be patient with all this, Alex.\" Mrs Kjaer said. \n\n\"Oh, uh, thanks,\" I replied somewhat lamely. \"It's no big deal, I'm happy to help.\" \n\n\"Yes, but you misunderstand me,\" she said, placing her hand on top of mine. \"Freja told us about you and Alexandra, remember. Do not worry, my dear boy, your secret is safe with us.\" \n\n\"I... thanks...\" I murmured, no doubt a few shades paler than I needed to be. \n\n\"I admit I thought for years that my daughter and your aunt were destined for one another,\" she said quietly, still smiling. \"I would have thought I'd be disappointed at a different outcome, but I am not. Jeanie is a very good person, and a good match for my daughter. They will be very happy together.\" \n\n\"But more than that,\" she continued, leaning in and still squeezing my hand. \"Alex, you and Alexandra, I see it- you are so perfect for one another, in a way that is so rarely seen. And it is so unfair that you cannot marry, my friend. So unfair.\" \n\nI said nothing, but nodded, looking at her hand on mine. I didn't rightly know what to say, to be honest. \n\n\"It is not an easy thing, your situation. You could absolutely be married elsewhere; even little Denmark would allow it. But the cost to your family, the stigma of it, of breaking the law, even if the law is unjust... I understand how you feel trapped. Alexandra does not wish to cause problems for her family that she just came home to. And you do not wish to complicate matters for your parents, who are upstanding citizens and could be compromised by such a scandal.\" \n\n\"Yeah...\" I said uselessly. \"That's pretty much it. Marrying Alexa comes at a cost I have no right to inflict on my family. I wish I knew what to do.\" \n\n\"Many people would say you should take a chance and just tell your parents,\" she said gravely. \"But even that is still fraught with endless complications. If your parents approved, it would still need to be kept a total secret. If they fought for you publicly, it might cost them everything. And while any parent loves their child enough to make such a sacrifice, no child could live with that guilt.\" \n\nI nodded. \n\n\"And if they approved, you would still need to leave the country and go elsewhere, to a European country that allows avunculate marriage, or Australia, or one of the American states where it's allowed, and then you would have moved Alexandra away from the family she's missed for nineteen years.\" \n\n\"And that's not fair to her, either,\" I sighed. \"There's no good answer, is there?\" \n\nShe shook her head sadly. \"No, my friend. There is only today's answer.\" \n\nShe now turned her head and looked at Alexa. \"And that answer is for you to take her away from distracting herself up at the front there with her friends and to be with you for a few precious moments.\" \n\nI blinked. \"What, right now?\" \n\nMrs Kjaer nodded. \"Freja has been giving me subtle looks and hints to get Alexa away from the platform. She knows your aunt very well, my friend, probably better than you do. Alexandra is delighted to be helping her friends, but she is distracting herself, do not doubt it. She needs you. Right now.\" \n\n\"What... what would I do?\" \n\n\"Take her out to your car and do what people in love do,\" she said kindly, smiling. \"You're our chauffeur, it's not like you can take off on us. Just look after her while I see to my daughter and her bride, okay?\" \n\nI took a breath and nodded. She squeezed my hand again and stood up, walking over to the platform. She put a hand on Alexa's shoulder and they began speaking in Danish. Alexa initially seemed to protest, but then both Freja and Jeanie chimed in, agreeing with Mrs. Kjaer. They all hugged her and scooted her away gently. She walked up to me, smiling weakly and wiping at her eye. \n\n\"Guess it was pretty obvious,\" she said, trying to not sound emotional. \"I'm sorry.\" \n\n\"I'm the one who should be sorry,\" I said, rising and taking her hand. \"I thought you were perfectly happy doing what you were doing, but Freja and her mom know you so well that they could tell what you really wanted.\" \n\n\"Having people who know you inside and out can be a real pain in the ass,\" she agreed. \"They said we're gonna go sit in your car and be together while they take care of all this stuff?\" \n\nI nodded and hugged her. She wrapped her arms around me and just sighed. We walked back to the platform, hand-in-hand, thanking them for their kindness and consideration. Freja and Jeanie stepped down and hugged us both before we exited, heading to my car, which was around the back of the building. I clambered into the back seat and then Alexa followed me in, straddling my lap, her forehead pressed to mine. \n\n\"Freja's mom's a smart cookie, isn't she?\" my aunt whispered to me. \n\n\"Seems to be,\" I agreed, my hands resting on her waist. There was nothing sexual about what we were doing, it was strictly an emotional response to the stresses we'd been feeling for weeks now. \"I see bits of Freja in her, but they're different in more obvious ways.\" \n\n\"True,\" she said, smiling. \"She loves her daughter, no matter how promiscuous she might be. Mom was the same with me.\" \n\n\"I never knew grandma,\" I sighed. \"I think she raised you differently, at least somewhat, from mom. Probably had to do with where she was in her own life, I guess.\" \n\nAlexa considered my words. \"I haven't really asked Karen enough about how she lived her life when she was younger,\" she said. \"I mean, she's certainly a subtle libertine now, as we well know. I don't know yet about earlier. She's always been an empowered woman, clearly. She'd have to be, to keep up with your dad.\" \n\nI nodded. \"Dad and I were talking yesterday about how to be happy in marriage and he said the most important thing was to marry your intellectual equal.\" \n\nShe smiled. \"And your dad considers my sister his intellectual equal?\" \n\n\"If not his superior,\" I mused. \"He's pretty fanatic about her.\" \n\n\"And you, good sir?\" she cooed, her hands on the back of my head. \"Did you marry your intellectual equal?\" \n\nI shook my head. \"Not even close. In every single way, I married up.\" \n\n\"Oh, you...\" she giggled, booping my nose. \n\n\"I'm serious,\" I said. \"I'm pretty damn sure your psychic dick is bigger than my actual dick.\" \n\n\"I've got an absolutely titanic psychic dick, then...\" she purred, squirming on my lap and sending shivers through me. \"So, did momma Kjaer have any words of wisdom for you that make our lives easier?\" \n\n\"No, unfortunately,\" I sighed. \"Just to seize every moment with you while I can.\" \n\n\"Like I said, she's a smart cookie.\" Alexa whispered before pressing her lips to mine. \n\n*** \n\nRehearsal day went off without a hitch, and I found myself at home, wishing Alexa was with me. Not surprisingly, she was at the hotel with Freja and Jeanie, along with Heather and a few other girls who made up the bridesmaids on both sides. There were some groomsmen in the wedding procession for form's sake, even thought there was no groom. \n\nIf it had just been Alexa, Jeanie and Freja, she no doubt would have Skype-called me, but there were a few people there who didn't know about Alexa and I, so we relegated ourselves to texting until we said our goodnights and went to bed. I lay awake for some time, lost in thought and, predictably, coming up with no satisfactory answers. \n\nMorning arrived and before I knew it, the ceremony was upon us. I was technically paired up with Heather, my former flame, who was delighted to be included in the proceedings. As much as I wanted to be with Alexa during the reception, I was pretty much obligated to be glued to Heather. I shouldn't complain, she's a nice girl, as I've mentioned before, and getting laid by her is easy, at least for me. She made it abundantly clear that she intended to fuck me before the night was out. I sighed inwardly, knowing that fucking Heather would be a good thing in terms of throwing everyone off where my aunt and I were concerned. \n\nAnd it occurred to me that my feelings for Alexa, my aunt that I could never have, were ruining my enjoyment of sex with girls I was perfectly capable of having a relationship with. \n\nI just... didn't care. \n\nI didn't resent Heather wanting to have sex, it was perfectly reasonable for her to want to- we'd done it several times before and enjoyed ourselves immensely. Her desire for sex was hardly an imposition, so why did it feel that way? Alexa had already told me that if I needed to have sex with Heather to keep up appearances, that she really wouldn't mind. And I believed her. But that didn't mean I didn't feel like I was betraying her. \n\nIf Alexa could hear me having this argument with myself, she would have laughed and told me I was silly, since she often had to sleep with girls so that everyone thought she was a lesbian. But in my mind, that was different. Alexa fucking girls genuinely didn't bother me, because it was a desire of hers I couldn't fulfill. More than that, she was all too willing to share said girls with me, when it was safe to do so. Me fucking other girls, that was different in my books. \n\nI looked around the breathtaking botanical gardens we were standing in and wondered at how my life had ended up here, at this point- in love with my aunt, unable to marry her and keeping our relationship a secret, even if it was doomed to a bad end. \n\nBeautiful flowers everywhere. Endless bushes of grandiflora roses, trellises and archways burgeoning with lilacs and lavender, the delightful scents mingling as they were carried on a zephyrian breeze. A string quartet was playing 'Jesu, Joy of Man's Desiring' as the girls walked down the aisle together, followed by their fathers. The music had been chosen by Alexa, who was allowed to pick the procession music as a thank-you from Freja and Jeanie. \n\nAnd I felt sad, because she had once told me that it was what she would have picked for our wedding procession music, if such a thing had been allowed. It wasn't just a thank-you from her friends, it was a tribute to her, to what might have been. Should have been. \n\nDon't look at me, Alexa. Not with tears in your eyes... \n\nI went back to concentrating on the event at hand. Considering how quickly it had been thrown together, the ceremony went off without a hitch. \n\nWell, almost. Jeanie couldn't find her ring to give to Freja, looking around in confusion for several seconds, to the consternation of many in attendance. \n\n\"Well, that's not good...\" I thought to myself, seeing Alexa standing across from me and frowning slightly. \n\nBut then Jeanie made an 'Oh!' face and pulled it out of her cleavage, making everyone chuckle. Except her parents. \n\n\"Could've been worse,\" I saw my mom whisper to my dad nearby. \"She could've pierced her clit with it...\" \n\nI really wish she'd been kidding, but it was a distinct possibility, I had to admit. \n\nThe wedding vows were exchanged, once Jeanie had fished Freja's ring out of her boobs, and all those attending applauded loudly as the brides kissed one another. Many children were turned away or their eyes covered as the brides kissed, their prominent breasts squashing together. Alexa laughed and rolled her eyes. I just applauded the rampant public indecency. \n\nLineups to kiss the brides continued for some time, and champagne was served before everyone headed back to the reception at the university. Heather used this time to pull me aside to a well-concealed area some distance away, which was considered rented by us for the day and therefore not open to the public. Before long, she was bent over a stone bench and I was pushing my cock in and out of her from behind, making her hiss and moan, trying to keep her voice down. \n\nIt felt good, of course, and I was determined to make her cum. But I was wearing a condom, which cut down on my sensitivity and made the experience last a little longer than I would have liked. Determined to not draw this out, I began fucking her harder, closing my eyes and thinking of Alexa. \n\n\"Nnnffff, oh yes...\" she panted, squirming her ass back against me. \"You're really strong today, Alex, are you- gnnnnnn- are you fucking another girl who likes it rough?\" \n\nI didn't answer her but pushed inside even harder, my hand now snaking into her hair and gripping it tight, pulling on it and making her moan rather more loudly than I would have liked. I knew she liked having her hair pulled, but I was pulling it how Alexa liked it. \n\n\"Ahhhhhhhhh, Alex, you... gnnnnnnn, you bastard, yessssssss...\" she moaned. I forced myself to open my eyes staring down at my glistening cock as it slid back and forth inside her. She was beginning to shake and I could feel her pussy tightening around me. I knew she expected me to cum and I began fucking her harder and faster, both my hands now reaching forward and clamping over her mouth, to muffle the scream I knew was imminent. \n\nAnd scream she did. I was pulling back slightly, clamping my hand over her mouth and bowing her spine while I pushed in as hard as I could. She convulsed as we came together, my cum pumping deep inside her, stayed by the condom. Her pussy bathed my hips as she squirted on me. Thank God the wedding party had been dress casual. \n\nI let go of Heather's mouth and she sagged against the stone bench, breathing heavily, her eyes wide and her body trembling. My cock was still throbbing inside her and she stayed still, just feeling me. My hands rested on her ass, caressing it absently as I tried to catch my breath and compose myself. A few moments passed before she reached behind and pulled me forward, slowly turning herself around. I sat on the bench and Heather sat on top of me, facing away. Her hands brought mine up to rest on her breasts while we sat quietly, recovering. \n\n\"Holy shit...\" she said, still breathing heavily. \"Whoever the Hell it is you're fucking, remind me to send her a thank-you card.\" \n\nI rested my forehead against her back, trying to remember to not give the secret away. \"Maybe... I was just excited to see you.\" \n\n\"Yeah, no,\" she said shaking her head. \"I'm not an idiot, Alex. You're smarter than me, but that doesn't make me a moron, you know. And I'm not unhappy about it- you fucked the shit out of me, to the place where I nearly screamed and ruined a wedding. How many girls can say that?\" \n\n\"Glad to be of service,\" I mumbled, reaching under her blouse and giving her boobs a squeeze and making her giggle. \"Always happy to be a part of the problem instead of the solution.\" \n\nShe squirmed on my lap for a while, enjoying the feel of my hard cock inside her before standing up and turning around to kneel in front of me. She stripped the condom off and sucked the cum off me, licking me clean while smiling up at me dreamily. Discarding the prophylactic discretely, she began dressing herself and then pulling my pants up to make me look presentable. ",
        "\"That aunt of your is pretty hot,\" she mentioned as she straightened her skirt out. \"I'd fuck her and I'm not even bi.\" \n\n\"First of all, ew, she's my aunt,\" I said, making a wry face. \"Second, she's a lesbian, so you'll have more luck with her than any guy ever will.\" \n\n\"Oh, c'mon,\" she said, palming a crease out of my shirt. I had to admit, she liked taking care of whatever guy she was with. \"Can't you at least objectively admit that your aunt is stupidly attractive?\" \n\n\"Yeah, I see it, but there's always the squick factor,\" I insisted, returning the favour and smoothing out her blouse. \"So yes, she's attractive, I just don't know why everyone, my own mother included, insists on asking my opinion.\" \n\n\"Betcha wish she wasn't your aunt, though.\" Heather said slyly, reaching down and cupping my cock though my trousers and making me shiver. \"Y'know, I've been thinking... I'm on birth control, and I know you're a straight-up kinda guy who would always be level and never give me anything. I might break my condom rule for you one day and let you start cumming in me. Because I'll bet that'd feel really good for both of us.\" \n\n\"It usually does,\" I agreed, trying not to squirm as she fondled me. She was really good at what she did. True, she wasn't Alexa, but she knew how to turn a guy on. Why was I so conflicted by all of this? \"And yeah, I would agree. Cumming inside you would feel really good.\" \n\n\"Then that's what we'll do next time, slugger,\" she whispered in my ear as she leaned forward. \"Now let's get back before too many people notice we're missing.\" \n\nShe turned around and led me back by the hand, clearly pleased with how her afternoon turned out. \n\n\"What can I say, weddings make me horny!\" she said cheerfully. \n\n*** \n\nThe reception proper back at the university hall had begun, with a DJ providing the music. People danced and laughed, drinks flowed freely, there were many toasts, and people tapped their forks on their glasses endlessly, simply because people loved watching Freja and Jeanie squash their boobs together when they kissed, something they were only too happy to do. \n\nAnd because this was Freja's wedding, karaoke was inevitably involved. She sang some Danish love song to her bride, which, frankly, sounded like a cat being strangled. It was probably just Freja, because if that had actually been how Danish love songs sounded, the race would have been extinct. People applauded loudly, my mother because Freja had finally stopped singing. \n\n\"Hey,\" Alexa said, sidling up to me and speaking quietly. \"Wanna help me troll your dad?\" \n\n\"Like you even need to ask?\" I replied, grinning. We assumed our place by the microphones and dedicated the song to dad, on behalf of the nation of Denmark. Everyone (except dad) was roaring with laughter as we sand the Aqua song 'Dr. Jones', with me providing the male vocals while Alexa sang the female lead. We concluded the song to much applause, especially from the Kjaer family present. Alexa went back to her place at the head table while I visited mom and dad, sitting down next to him. \n\n\"Forr\u00e6der.\" he grumbled at me. \n\nMore people butchered more songs, the karaoke occasionally punctuated by dancing. I ended up dancing more than I normally would, with mom, Alexa, Heather, the brides, Freja's mother and a few of the younger girls, who blushed and giggled as I asked them to join me. I guess having a few absinthe drinks in me helped. \n\nSpeeches were given, some in Danish, with Alexa providing comical and often intentionally inaccurate translations. She was really enjoying herself up on stage. It occured to me that she was a lot like my dad that way, whereas I took after mom, usually avoiding the spotlight unless called upon. It's not that mom was any sort of a shrinking violet, of course, she just found people gawking at her annoying. She could give lectures to intellectuals like nobody's business, but drunk crowds were not her thing. \n\nFreja and Jeanie were both rather inebriated at this point, and had been convinced to read each other's vows out loud. This caused endless laughter, since Freja couldn't read Jeanie's terrible handwriting or atrocious spelling, while Jeanie was trying to read her wife's Danish. She sounded like she was having a stroke with a potato in her mouth. \n\nOne of the highlights of the evening was the bride throwing the bouquet tradition. There were two bouquets, so Jeanie and Freja tied them together, giving whomever caught the bouquet extra-good marriage karma, I guess. Dozens of women gathered in the middle of the dance floor while the brides turned the backs. Freja and Jeanie counted to three and tossed the bouquet back over their heads. \n\nEvery woman on the floor scattered away, leaving a very confused Alexa by herself in the middle. She'd caught the bouquet before she had fully realized what was happening. Everyone laughed and applauded and cheered for her, while she looked around in initial confusion and then dismay. \n\nI glanced over at mom, who was smiling and winked at her sister. Damn, she'd convinced everyone to not grab for the bouquet so Alexa would get it by default. I'd heard of people doing that before, singling a girl out to get married in the near future. Everyone laughed and called out best wishes and hoping she'd meet the girl of her dreams. If they'd only known. \n\nOur eyes met and locked. I couldn't look away, I had no reason to, I was supposed to be laughing. So I clapped and forced a laugh at the farce. \n\nDammit, Alexa, look away... \n\nThe evening continued with much gaiety and revelry, drunking singing and dancing. Everyone listened reverently while Alexa sang the Edith Piaf song 'Je ne regrette rien', assuming it was dedicated to her best friend Freja. But I knew who the tears in her eyes were for, as they had been that night a few weeks earlier in the karaoke bar. \n\n\"So are you two off on some grand honeymoon?\" my mom asked Freja and Jeanie as they made the rounds and came to sit with us. \n\n\"Nothing grand,\" Jeanie answered, shaking her head and then wobbling and nearly falling over because she was drunk. \"We're just gonna visit our little cottage in Muskoka for a few days. We might do something a little more special over Christmas break, like visit Europe, see her family and so on.\" \n\n\"Just a few days alone will be nice for you,\" mom said cheerfully. \"A little quiet serenity is never a bad thing for a couple. Even newlyweds.\" \n\n\"And we can be as loud and nude as we like,\" Jeanie continued, offering too much information. \"My family owns the land for almost a kilometer in each direction, and most of the shoreline our cottage sits on.\" \n\n\"Just watch out for mosquitoes and try not to get molested by bears,\" mom reminded them. \"That means no honey on naked bodies while you're outside.\" \n\nJeanie nodded dutifully and pulled out a notepad out from between her boobs to write that nugget of wisdom down. They then hurried off to the next table. Music started up again and I found myself dancing with mom. \n\n\"So, you got a little from Heather, hm?\" she asked, smirking as I blushed. \"Don't worry, I'm pretty sure only half the attendees heard her.\" \n\n\"She was insistent,\" I said somewhat lamlely, like I was not allowed to say no to sex. \"Pretty sure it was the main reason she agreed to attend. She said weddings make her horny.\" \n\n\"I'm not blaming you one bit, after all, your dad and I found some time to get freaky earlier,\" she said, to my surprise. \"Pity you didn't know ahead of time you'd need to gag her.\" \n\n\"Yeah, that girl is full of surprises.\" I muttered. \n\n\"She's not entirely a bad fit for you, you know,\" mom said in a pensive tone. \"I'm not trying to matchmake, I'm just saying there might be something there to explore.\" \n\n\"I've considered it,\" I admitted. \"But something dad told me the other day sorta makes me discount the notion.\" \n\n\"And what's that?\" she asked. \n\n\"Always make sure you marry your intellectual equal.\" \n\n\"Smart cookie, your father...\" she said cheerfully. \n\n*** \n\nFreja and Jeanie had clambered into a car and headed out for their mini-honeymoon, with everybody calling and waving after them. The Kjaer clan was heading out the following morning, so Alexa stayed with Freja's parents overnight, since we weren't certain when she'd see them again. I laid awake in bed, hoping she would Skype-call me or at least text me, but she didn't. I guess she was really involved in talking with them and I couldn't say as I blamed her. \n\nWe met them all for breakfast and saw them off at the terminal, waiting around until their various flights had departed. We all piled into dad's vehicle and headed home. It had certainly been an eventful two weeks. \n\nAlexa and I returned to our duties at the university, taking every opportunity we could to make love. We had just finished a round of intense fucking and were laying side-by-side on a gym mat when I reached over and stroked her cheek. \n\n\"I'm sorry.\" I said gently. \n\n\"What for?\" she asked. \n\n\"Because I fucked Heather at the wedding.\" I replied. \n\nShe smiled and turned in to face me, caressing my hair. \"Alex, you had to. I know that. Not fucking her would have been awkward, to say the least, with everyone asking why you didn't do it. What purpose can that possibly serve?\" \n\n\"I know,\" I sighed. \"That doesn't mean that I didn't feel like I was cheating on you.\" \n\n\"Oh, you,\" she purred, leaning in to kiss me. \"Really, Alex, it doesn't upset me. Not one bit. You need to believe that.\" \n\n\"I do, it's just my own demons I'm wrestling with.\" I admitted. \"She's still interested in fucking. And she's upped the ante, she says she wants me to start cumming in her.\" \n\nShe was silent for a moment as she considered. \"That's still okay, Alex. I'm assuming she's not psycho and trying to get pregnant.\" \n\n\"No, I don't think that's it,\" I agreed, shaking my head. \"I just don't like the level of intimacy she's trying to take us to. Sounds stupid, I know, since any guy would love to nut in a girl with no condom or consequences. But it feels like cheating.\" \n\n\"I understand how you feel.\" Alexa said gently. \n\n\"But, there can't be anything between us.\" I stated. \n\n\"Why?\" \n\n\"She's nowhere near my intellectual equal.\" \n\n\"God, I love you...\" my aunt said as she pressed herself to me and kissed me hungrily. \n\n*** \n\n\"So, I was thinking that if you're going to continue with Heather as a cover, maybe we can use that for some fun.\" Alexa said as we talked over Skype. She was up in her room and I was down in the basement, but both my parents were home so it wasn't really a conversation we could have face-to-face. \n\n\"Oh? Go on.\" \n\n\"Well, it would involve some risk, certainly, because we'd have to tell her about us.\" Alexa explained. \"But if she was cool with that, maybe we could share her. I saw her looking at me, I know she wants to try me on for size.\" \n\n\"Everyone wants you,\" I chuckled. \"She's straight and she said she'd fuck you.\" \n\n\"Oh, the curses of being a daughter of Aphrodite,\" she said dramatically, putting her the back of her hand to her forehead. \"Perhaps I'll-\" \n\nShe paused in what she was saying and put her finger over her lips, indicating that I should be quiet. I listened and could hear footsteps in the hallway arouside her door. \n\nThen there was a knock. \n\n\"You awake, Alli?\" I heard mom asked from the hall. \n\n\"Sure am!\" Alexa said, winking at me and then touching a button on her laptop to make the screen go black. I couldn't see anything, but I could still hear everything. I heard her pad over to her door and open it, letting mom into her room. \"Hey, Kar, what's up?\" \n\n\"Thought we could talk for a minute,\" mom said. \n\n\"Sure,\" my aunt said, easing herself onto the bed. \"Anything you like!\" \n\n\"I'm glad to hear that,\" my mom said quietly. \"Because I'd like to know how long you've been in love with my son...\" \n\n*** \n\nAuthor's Notes: Dun dun DUUUUUNNNNNNNN!! \n\nWell, that's not good. \n\nFor people who were bitching about the pace lagging and the plot development, that should shut their cake holes quickly. And thank God, I'm a little tired of the endless PM's on the subject and Anonymous reviews whining. \n\nNot to vent, but I'm glad Lit has a button where you could turn off Anonymous reviews, since they tend to be of little or no use when it comes to constructive criticism and are usually the domains of trolls in any event. I like it when people have the kishkas to sign in and critique, they're a lot easier to take seriously. Usually. \n\nI'll never quite understand people going into rage mode and giving a story (any story, not just mine) a low rating because they hate something that happened and their rating has nothing to do with the technical side of the submission. Someone was recently raging on this story because they were angry that Alex and Alexa were sleeping with other people to cover their tracks. \n\nOkay, so what if they were? The question is, was it believable? People have squawked and given low ratings for My Naughty Neighbour because they don't like watersports. Why are you reading it, then? People have (I kid you not), complained about the pregnancy fetish in Expecting &amp; Expectations because it turned them off. Once again, why on Earth are you reading it then, you nitwit? \n\nTantrum ratings are very strange to me. I almost never rate or critique stories unless I actually like them. Let's face it, there are more than enough people browsing this site who obviously have PHD's in erotic literature who are willing to crap on authors, so they don't need me doing it. \n\nOkay, enough about my issues. \n\nUp next is Like A Daughter To Me, which I am quite looking forward to. There'll also be a submission in the Humour/Satire category in the near future, a little somethin'-somethin' I've been working on and quite enjoying. \n\nKeep your stick on the ice! \n\nManagement"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "aunt nephew incest",
        "incest romance",
        "humour",
        "lesbian",
        "group sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alex-and-alexa-ch-14"
}