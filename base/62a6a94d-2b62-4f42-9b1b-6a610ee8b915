{
    "title": "Play Testers Wanted Pt. 17",
    "pages": [
        "Play Testers Wanted: Pt. 17\n\nUpdate: I got some items confused between Marvel Princesses and Star Wars. I have corrected them in this chapter. Sorry for the confusion. Someone requested a list of characters to help keep things straight, so here they are. Thank you again for your patience and kind words they mean the world to me. LB\n\nBooker-Katria Forgemaster Je'Daii Master\n\nKyanna-Syn'Kar-Mirialan Jedi guardian\n\nAoki- Kalla-To the Master Slayer-Twi'lek Gunslinger\n\nHK-47: Assassin Droid\n\nWhisper -- Darth Talon Clone\n\nLeft -- Claims to be an ancient Hyperborean Wizard\n\nRakata Primer [Part 2]\n\nWe set off with what little daylight we had left. As we raced across the surface of Lehon, the first of its two moons broke across the horizon. I had a sudden flashback to Tython and its twin moons. My HUD gave us a countdown to reaching the atoll where the Republic ship had landed, and the coordinates given from the Star Forge coincided.\n\n\"This is not a coincidence. Something wants us there.\" I muttered over our communication channel. The speeders slid a meter over the top of one of Lehon's many oceans. The engines created a curved wake, similar to a fighter jet skimming the ocean's surface back in the real world. The exhilaration overwhelmed me as moonlight painted the rising water, and we picked up speed and pushed the jetbikes to their limit. After I redlined the bike, I cursed at the fact that I had not yet found a way of hiding the effect it made on the landscape beneath it. My hunger combined with frustration made me cranky and irritable. \"Fuck,\" I cursed as my thoughts threatened to split my attention between piloting the bike and trying to solve the problem with the disturbance the engine created. \"Later,\" I told myself. I put my complete concentration upon riding and enjoying the moment.\n\nI glanced at my HUD, and Traci placed a rotating icon in my field of vision to mark the other ship's location. If I estimated correctly, we would reach the Republic landing site in two hours. I called out the time using the Rakatan satellite. I found a spot for us to park the bikes and go in on foot. The only thing left to do was get there undetected and in one piece. I relaxed and relished the ride, let my mind slip into that near meditative mode, and savored the view. The silver-hued water gleamed beneath and around me. Moisture and light merged as the bike shot forward. I absorbed the moment and held onto it the best I could. I could feel the planet and tasted the spirit that was Lehon as I skimmed across its surface.\n\n\"This is amazing,\" Aoki cried out as her bike shot past mine. \"Woohoo!\"\n\n\"You did a hell of a job designing these guys,\" Kyanna called out.\n\n\"Yeah, she did,\" Aoki praised the handiwork that went into the speeder. \"She placed the controls perfectly and even tweaked them better than I hoped. Watch this.\" She cried out as she banked away at full velocity, sending a crescent-shaped wave cascading off and launching massive ripples along the relatively still surface of the ocean. She cut it again, the bike leaning precariously to one side as she corrected her course and joined up with us again.\n\n\"Beast! She is a fucking beast!\" Aoki roared. \"Look how the moons light up the ocean. Thank you for letting me join you on this one.\"\n\n\"Same here,\" Kyanna added as we lined up and raced for the spot I had marked on their HUDs.\n\nSo much for meditating. I leaned forward and, for a bit, settled into the zone until we drew close to our landing site. HK-47, who had called in the shuttle remotely for his transportation, offered to guard the bikes as we shut them down and prepped for a stealthy entrance.\n\n\"Statement. It would be my honor to defend Master's prized mounts. Addendum, I will take great pleasure terminating anyone that even thinks about stealing them.\"\n\n\"I know I can count on you,\" I said, and his photoreceptors glowed a scintillating gold. \"Alright, you guys full stealth mode. Follow my lead, and let us see what these guys are doing here.\"\n\nI manifested Force cloak and slid into the shadows with little effort. The others followed, and we crossed the last hundred yards unseen, unheard, and unfelt. The ship stood away from the main staging area. There were six of my M Class droids hovering around the perimeter. However, they bore various camera lenses, lights, and audio pickups instead of having weapons mounted on them. They were shooting a holonet production.\n\n\"Ruatha, darling, your tits are practically spilling out of your armor.\" The Ithorian director was not pleased. \"We want the 'big' reveal in the second act of this little melodrama. Be a dear and wear your striking scarlet number, please.\"\n\n\"Anything for you, Jha,\" the busty Togruta purred as she swapped out the 'power girl' looking chest piece for a sleek red Mandalorian cuirass. She winked at her costars, two muscular Zabrak. They were eight inches taller and wore obscenely revealing codpieces that made me think they were likely filming a porno instead of your typical adventure vid you saw all over the holonet.\n\n\"Murad... Shurad, how are my favorite boys doing? Well rested, I hope.\" Jha's voice practically oozed jealousy. But being the consummate professional, he continued without hesitation. \"Good. We are right on top of the coordinates we received in orbit. Let us see what we can find, and after the haul, we celebrate and not before.\" He growled. \"I will not have a repeat of the fiasco like Nar Shaddah. Do you understand?\"\n\nAoki had her wrist inverted and was tapping into her personal data retrieval device. I saw her mouth the words Jha and Nar Shaddah. Her mouth fell open, and we leaned in to see the tiny display. The two Zabrak had the Togruta sandwiched between themselves with the red-skinned one laying atop a bar, the Togruta impaled on him, and the yellow-skinned alien with his thick fleshy spike buried deep in her ass. Kyanna whispered in my ear.\n\n\"Lucky gurl.\" She said in her best Bronx accent.\n\nWe know why they were here, but we still did not know how their ship arrived at Lehon. I gestured for them to stay and keep guard. I drew on Force lightning and sent a single bolt to the unoccupied middle of their camp, and using lightning teleportation, made a flashy entrance. Jha let out a shriek of surprise, and then without missing a beat, he pointed at me and said.\n\n\"Now that bitch knows how to make an entrance! Tell me you got that on film.\" He addressed the droids. \"Good, we can use it later.\"\n\n\"Holy shit... it is her... it is Katria Forgemaster.\" The Togruta exclaimed. \"You are not stealing my spot.\"\n\n\"I am here on my own business,\" I assured her. \"Though after seeing what you did on the Smuggler's Moon, I'm not sure I could match your natural expressiveness.\"\n\n\"What did she mean by that?\" Ruatha asked guardedly.\n\n\"She means,\" Shurad said.\n\n\"No one takes two cocks the way you do,\" Murad finished.\n\n\"Your facial expressions are top-notch,\" I added.\n\n\"If you aren't here to fuck why are you here?\" Ruatha asked, her eyes narrowing.\n\n\"I managed to slice the security protocols of a Rakatan satellite in orbit.\" I lied.\n\n\"Whoa, she sliced a satellite. How cool is that?\" Murad said, revealing a hint at the intelligence behind those sweet baby blues.\n\n\"What is a Rakatan?\" Shurad asked, and it took everything I had not to pinch the bridge of my nose and groan.\n\n\"She means,\" Jha faltered and then screamed. \"We are on Rakata Prime! We are on the same planet that Revan and Malak and Bane and Katria have made infamous. Oh, this is going to be epic! Don't you three ever read? Rakata Prime is in the star system with the Star Forge well had the Star Forge in it. Lehon is the homeworld of the Infinite Empire! Please let us join you, please!\"\n\n\"I will have to ask my friends,\" I said, signaling the others to appear. It was like watching a Hollywood action flick come to life. Kyanna appeared in her full Jedi Battle master robes with the hood up and her stride long and graceful. Aoki's walk was sex personified as she sashayed into view with her Krayt Dragon Pearl handled blasters on display. Her smile was devastating and disarming at the same time. Whisper, the Darth Talon clone, strolled in with her double-bladed lightsaber across her shoulder and those bright orange eyes of hers alight and glinting in the moonlight. \"They want us to join them. What do you say?\"\n\n\"I think I speak for the others,\" Kyanna purred. \"We will join you for the adventure and maybe even the after-party if we all survive.\" All our HUDs sang out as the combined event began.\n\n\"Deep Revelations. Ooh, I like the sounds of that.\" The Togruta giggled.\n\n\"We need to find the cave or entrance below us,\" I suggested. \"What do you think, Jha?\"\n\n\"Great idea,\" the hammer-headed alien replied as he gave the camera droids their orders. They flanked us, and I did my best to ignore them. I do not know if the ever-present droids were hovering so close or the lackadaisical newcomers to the group, but we failed to find the entrance. I ordered a break and the Ithorian declared he would edit out the dead air. I walked off, and when one of the cameras followed, I snapped and heard the creak as its armored casing bent slightly under my assault.\n\n\"Sorry, I am not used to failure,\" I said, narrating to my unseen audience. \"Quit moving and give me a little space.\" I moved a few meters away and stopped. I calmed myself and found my center point. Once I removed the distraction, I was able to reach out to find the entrance. \"Space, there is tons of space below us, tunnels, worming their way deep into the dark below Lehon. This way,\" I said and walked as I felt one of the tunnels rising upward. \"It is close now... Uhh!\" I stumbled backward and opened my eyes. I touched my nose and laughed for walking full tilt into the outcropping. It might have been a statue or shrine once, but the eons of weathering, time, and the elements had taken their toll. There was a hint of eyes, mouths, and limbs or fingers, or even tentacles.\n\n\"What the hell are you?\" I asked as the droid continued to film me. I walked around the ten-meter-high sculpture, and it was a nightmare from any side. I walked closer and ran my fingers along its surface. It was surprisingly chilly, given the tropical nature of the planet. \"I am open to suggestions. Unfortunately, I cannot find any mechanisms.\"\n\n\"Let me,\" Aoki called out as she raced for the statue. At the last moment, she leaped straight up, flipped her body to an inverted position with her arms out and down, fingers grasping. Aoki landed lightly in a handstand position. \"Hey, there is a symbol up here. I will take a pic and send it to you. Maybe one of you knows what this is.\" She effortlessly shifted into a single-arm handstand. Aoki used her free hand and touched the side of her circlet. A soft whirring sound echoed from above as a targeting visor appeared and slid over her eyes. The corners of the yellow glass device flashed as it took a holo of the top of the statue. The statue reacted to the intense pulse of light. More symbols appeared over its entire surface and just as quickly faded from view. \"Woohoo!\" She cried out triumphantly as she backflipped off the top of the statue and landed lightly on her feet.\n\n\"Nicely done,\" I praised her. She displayed the holo, and we looked at it from different angles, but none of us had seen it's like nor the others that had briefly appeared.\n\n\"Well, what do you think?\" I asked and gave Aoki the attention she deserved.\n\n\"Perhaps we try various types and intensities of light.\" She suggested. \"Can we reprogram the droids to emit different wavelengths, and... oh hell, I don't know, that is your department.\"\n\n\"I agree,\" I told her. \"Jha, darling, can I borrow your droids until I can recall my own?\"\n\n\"Yes, it will make a great montage. Do it.\" He agreed excitedly. I kept one droid active while I worked on the others. I slaved them to a virtual keyboard, and after two hours of labor-intensive tinkering, I had working prototypes. The droids would orbit the statue, emitting pulses of light at different speeds and intensities. Because of potential seizure triggering effects, I had Traci monitor the progress and record the experiment while everyone stayed clear. Due to the potential danger, I created a secure hologram of my plan.\n\n\"Here is the statue,\" I began as everyone stood or sat nearby. \"These spheres are the droids. They will approach the base of the statue, and when they are close enough, they will begin sending out pulses of light, each producing a different wavelength of illumination. The first one spits out light in our visual range, the second covering the infrared portion, the third the ultraviolet, and so on. My AI helper will be monitoring the experiment with a full spectrum device to see what, if anything, shows up. Any questions?\"\n\n\"Why are you going through with this?\" Shurad the Zabrak asked.\n\n\"Excellent question,\" I replied and explained to anyone that might not grasp the concept. \"When Kalla-To the Master Slayer,\" I began by using Aoki's full name and title, \"took those images it revealed our way into the underground. It is just another puzzle to solve.\"\n\n\"Kalla-To... you are that gunslinger I keep hearing about,\" Murad stated with a sly grin. \"You have quite the reputation. Then you are Syn'Kar. You two are practically inseparable.\" He paused and looked at the hologram. \"So, the droids spiral up and around the statue, and hopefully, we can see those designs. Can we decipher them?\"\n\n\"I do not know.\" I was honest. \"We won't know until we see them. Worst case, we blast the shit out of it and get in that way. That is the last resort, though, and most locks tend to do unexpected things when you force them,\" I stated, as the first real-time images began streaming. I used the keyboard to tweak the angle and speed of the droids. Traci crunched the numbers and focused on the areas where the runic images began to form. Despite my best efforts, the symbols were incomplete. I tried changing the order of the droids with little effect. \"Shit, we are missing something. I have the full electromagnetic spectrum represented, and still, there are gaps.\"\n\n\"Sounds complex,\" the Togruta muttered.\n\n\"It is,\" I replied and stared at the statue, and as the ideas flowed, my fingers danced across the keyboard. \"Let's see if I just stop the droids and bombard the thing with a full spectrum blast.\" I parked the droids, angled their lights, and set them to project a continuous illumination. \"Unless there are supposed to look like that, we are screwed.\"\n\n\"Pity we aren't doing rubbings,\" Ruatha muttered, her lekku showing her annoyance. \"I collect rubbings from ruins and tombstones as a hobby. When I get an incomplete one, I um never mind, I am just stupid.\"\n\n\"You are not stupid,\" Murad chastised her.\n\n\"No, you aren't,\" I urged her to continue.\n\n\"Alright, fine, I scan my rubbings to save for later so I can post them and talk about the designs. Well, anyway, when I am rubbing, and there are gaps like here, if it were me, I would invert it and look for where the parts connect. The gaps aren't that big. You are missing just a little, and\" I cried out what a genius Ruatha was and attacked it using her strategy. \"Did I do something good?\" The twins hugged her, and I saw the other side of their relationship. It was not just sexual, and I found that heartwarming. On the other hand, I would have been tapping that for all it was worth after I solved the puzzle, but that is just me.\n\n\"I am a bad person,\" I chuckled as I isolated the outlines of the symbols to make it easier for Traci to do her thing. There was a uniformity to the dimensions of the characters, at least. I set the parameters for Traci and hit the enter key. \"Let's see what happens.\"\n\n\"Why are you a bad person?\" Ruatha asked, sitting close. \"I know that look. It is okay. It happens all the time.\"\n\n\"I... eh... here I am stammering when called out on my baser instincts,\" I admitted as the first potential symbols appeared. \"Interesting.\"\n\n\"Stop hold on!\" Ruatha cried out, and Traci halted. She attacked the holographic display and pointed out that some of the images had edges or exteriors that were incomplete. The other's interiors were reversed and missing. Ruatha went at it with a confidence that I hate to admit surprised me. She came off as flighty and a bit dim. The truth was more complex. The Togruta fell silent as she focused on the task at hand. Her hands moved slowly at first, and then as she made more and more connections, she soon had over a hundred potential candidates for possible characters. She slowed as she ran out of patterns to form. \"Sorry. I cannot find anymore.\"\n\n\"Sorry? For what?\" I chuckled. \"Traci, see if there are any dupes in there or see if she missed any?\"\n\n\"Following her parameters, which were amazing, by the way, let's see.\" The AI mused. Each symbol flashed as she examined it, and she placed them in groups. Each of the characters received a numeric value as well. \"Light, both in and out of the visible spectrum, seems a critical element to their language. It is more efficient than vocal by far. But, while I can isolate and categorize them, I have no idea what they mean.\"\n\n\"One thing at a time,\" I said, equally clueless. Pity I had to destroy DP-69 earlier. She might have been able to use her language protocols to translate this. I looked at each symbol and tried to see anything that triggered a memory and failed miserably. I will give the devs this. They outdid themselves this time. There was a pattern, and I wondered if they hired a linguistics expert to create a whole new language.\n\n\"They look so much alike,\" Kyanna noticed, and I displayed all of them in a floating square. \"Yeah, you are right.\" My hands moved, and I began trying to sort them. \"There is almost a sequence here. Traci?\"\n\n\"Scanning. There is a definite series of patterns, a circular one see.\" She said, and the symbols formed a ring now. \"It is possible that the code requires one of them to be transmitted first and then the rest of the sequence after that. Or it could be that we need to send a single pulse containing all the symbols. The first means we need to pick one to send first, and the question is which one.\"\n\n\"We'll have to pick one to send first. The creators put way too much effort into this,\" I stated and waited for the others to make their suggestions.\n\n\"I agree,\" Aoki said after a moment of deep thought. \"Is there a zero value? I mean, if they are logical, wouldn't they begin with that?\"\n\n\"Brilliant,\" Ruatha exclaimed. \"I was thinking along those lines.\" I looked at Traci's hologram, and she winked. The symbols fluttered as she analyzed them.\n\n\"There are two that stand out,\" Traci stated, and they were opposite the other along the ring. \"This one,\" she expanded the top symbol. \"Contains all the spectra, and the other has elements that show the transition from one portion of the spectrum to the next. I think the second is closest to the concept of zero as any.\"\n\n\"Good,\" I said, and then I realized we had another problem. \"Which direction do we go? Display symbols via complexity.\" The circle rearranged itself, and to my surprise, the symbol for zero was now next to its former opposite. \"Okay, let's try something else.\"\n\n\"Can the symbols connect in some way?\" One of the Zabrak asked from behind me.\n\n\"Ooh, good idea,\" I exclaimed and asked Traci to examine the edges of the symbols to see if there were any similarities. A new shape formed out of the characters, and the statue rumbled to life. Then, the undulating form began transmitting on its own. \"Booyah! We did it. Great job, everyone.\"\n\nThe once weathered and barely recognizable lump of rock transformed and regained all its former glory. Were these the people that awaited us below? Hell, were they even still alive? In form, they were an aquatic race with a blend of jellyfish, octopus, and other less savory elements that worked on an unconscious level. My mind tried to compare them to the Elder Things but failed. This species was a whole new level of alien and disturbing. I gave the devs an A+ when it came to originality. The stone became fluid, and the statue swam off, revealing the tunnels' entrance and caverns below.",
        "\"Reminds me of the Broken Chain Brothel,\" Ruatha chuckled. \"Ah, good times.\"\n\n\"I have never heard of it,\" I said, but Aoki winked at me. Of course, she had, and there were stories behind that gesture. \"Number six, take a look and see what is down there.\" The camera droid hovered forward, and when it floated over the opening, a flash of blue surrounded it, and it dropped out of sight. \"An elevator?\"\n\n\"Yes. It is a hard light construction and very sophisticated.\" Traci confirmed. She tied into number six and displayed what it was recording. The shaft was dozens of feet deep, and along the side was new and apparent incomplete artwork. Suddenly, after a command from Traci, the art snapped into completion as the droid altered its standard floodlight to a full spectrum beam. Strange flowing designs and the symbols we had discovered from the statue decorated the elevator shaft. Their meaning was as alien and inscrutable as the moment we found the sculpture. \"Pretty, but I have no clue.\" Neither did any of the others. \"It has reached the bottom. Look at the tunnels. They are perfect tubes. See how smooth they are.\"\n\n\"I have seen stuff just like this,\" Murad said, and his twin nodded. \"We were diving a 'blue hole' elsewhere, and there were volcanic tubes like these. The flow of fresh water to saltwater caused a smooth erosion of the tunnels. Since this world is mainly saltwater and islands, I think the race is aquatic. So it must be Rakatan.\"\n\n\"Nope,\" I said, and they all looked at me. \"I have a full understanding of the Rakata and their language and culture. Unfortunately, the language is too old and too different. This race must be something else.\"\n\n\"Think of the science bonus,\" Kyanna said, and we all smiled. \"We better be careful of rockfalls and damaged tunnels.\"\n\n\"Agreed, let's get going,\" I said, eager to see what was at the end of the tunnels. I approached the hole, but the elevator did not activate. It did not recognize me, so we had to do it old school.\n\nWe prepared to enter the tunnels. I lead the way with the Ithorian remaining behind to monitor our progress and ensure we looked great, and call for aid should the situation arise. He would narrate our progress and promised that everyone got equal screen time. I activated my portable crafting table and knocked out one hundred climbing spikes and ten spools of lightweight silk rope along with harnesses for each of us. There was no telling what we might encounter along the way. I divided the spikes and rope amongst our group, and we began our jaunt. I anchored the piton near the edge of the hole. I attached the rope, and we rappelled down into the tunnel. The others followed quickly after and formed up around me. The cylindrical tunnel ran as far as we could see in either direction. The rounded floor was smooth and slick and made for slow going. Thankfully, the tunnel was level which kept us from slipping and sliding. If it angled at some point, we were in for some real problems.\n\n\"It is polished and smooth,\" Aoki remarked as she ran a gloved hand over the wall. \"It looks like a dark coral or basalt. There is a... holy shit!\" I stopped and looked at the surface where she had touched it. Some activity was occurring. We got close and watched as the patch of stone darkened, hardened, and evaporated. The surface beneath was a bit brighter than that surrounding it. \"Well, that explains why it looks so new. There is a self-repairing mechanism built into the wall.\"\n\n\"Look, behind us,\" Ruatha called out. We turned our heads, and sure enough, our footsteps were visible from where the floor of the tube had repaired the damage.\n\n\"If that is the case, we could find surviving technology still intact below. So why does that fill me with dread?\" I said, looking directly into the camera for our audience. \"Let's go.\"\n\nThe tube-shaped tunnel went on for a hundred meters before I called a stop. We were beyond the confines of the island now. I touched the side of the tunnel, and the wall became transparent, revealing that we were, in fact, underwater and all manner of marine life swam around us, utterly unaware of our presence. The others stood on either side of me, smiling at the beauty of this alien world. Once again, the devs had gone out of the way to create an entire ecosystem. The plants, fish, cetaceans, and cephalopods were identifiable but wholly different from anything beneath the oceans of the Earth. We were still in the euphotic zone or the portion of the sea where sunlight still reaches clearly. I got on my tippy toes and looked down, and I could make out the first transition point or the dysphotic zone. Marine biologists nicknamed it the twilight zone. Here, light is diffused and reaching the limit of its ability to illuminate this depth.\n\n\"I wonder what is down in the depths?\" Murad asked the question bothering me.\n\n\"Let's hope we don't find out,\" his twin replied.\n\n\"Should we turn back?\" Ruatha asked, and I shrugged. I called for a vote, and we decided to give it another fifty meters, and if the tunnel continued without anything of interest, we would turn around and try the other way. I let the droid get a good shot of the underwater perspective before we began again. Traci warned me of a power source up ahead, and I stopped and touched the tunnel wall again. This time we could see that we were nearing another island. We readied our weapons and moved on. The power source was a ring-shaped device and inside the ring was a crackling forcefield blocking our path. The disc was inset into the wall of the tube and protruded out perhaps half a meter. The inscription on the flat side of the ring was the characters we had captured from the statue's surface. Some of the symbols were flashing, while most of them were not.\n\n\"Something is not right,\" Kyanna said, frowning. \"Shouldn't all of them be shining?\"\n\n\"They are,\" I exclaimed as I touched the side of my battle mask and adjusted it for the full spectrum. \"Yes! Oh my god, it is a Rosetta Stone! Each symbol is displaying its specific value in the form of a portion of the EM spectrum. Traci.\"\n\n\"I am on it. Measuring the wavelength of each symbol. Saving for future use.\" She stated.\n\n\"How do we use them, though?\" I thought out loud, again, for the camera.\n\n\"Is there a sequence?\" Shurad, the yellow-skinned Zabrak, suggested.\n\n\"Great idea,\" I praised his insight. \"Let's watch and see,\" I said as I displayed the ring via a hologram. We all saw it go through its pattern three times but not knowing which was the first. \"Hmm, there is a repeating sequence, but which one starts it.\"\n\n\"Slow it down. Maybe we are missing something,\" Murad, the red-skinned Zabrak, offered. I smiled and took the recording and played it back at one-tenth of its average speed. On the fifth time through, Ruatha cried out.\n\n\"There, one of them pulsed twice!\" She shouted in glee. \"Back it up about four seconds, and there see?\"\n\n\"Great work,\" I said, and we had our first symbol, hopefully. \"It might be the last. We don't know how this species thinks. We assume it is the first. Let us see.\" I projected the sequence beginning with the one displaying the double pulse. The forcefield shut down, and we had our first real success with this alien language. We still did not know what the symbols meant, just the wavelength attached to them. \"Let's go and stay alert.\"\n\nWe moved forward, lights playing across the smooth surface of the tunnel. Aoki and Ruatha froze at the exact moment, looked each other in the eye, and nodded. I called a halt, and I saw the silent conversation they had via their lekku or head tails. Unless you were a member of that race or a skilled shapeshifter, the twitches looked nothing more than that.\n\n\"...feel it?\" Ruatha said.\n\n\"Yes. It is the same energy as the forcefield, only stronger, more intense.\" Aoki replied.\n\n\"You tell them,\" Ruatha said, her lekku giving off the sense of uncertainty.\n\n\"Ruatha and I are feeling more of the same power that ran the forcefield,\" Aoki said aloud for all of us. \"We think there is active technology or maybe just a power source.\"\n\n\"Great work, both of you,\" I said and observed Ruatha's lekku shift a subtle color, the Togrutan way of blushing. \"Ruatha, would you like to take the lead? Tell us when we are close.\"\n\n\"Me?\" She exclaimed, and Aoki stepped up and took her hand. \"Us.\"\n\nThe pair took point, and we followed. I was so damn proud of Ruatha and Aoki. Perhaps a dozen meters further down, I felt it now. There was a sensation that felt like insects crawling over my skin. A formidable power source created a potent field around it, and we were damn near on top of it. I scanned the tunnel, my mask still set for full-spectrum, and nothing stood out.\n\n\"Stop! Do not move.\" Jha called out via our commlinks. \"There is something on either side of you. I am scanning. The ring is inset and hidden by an optical illusion. The droid's 360-degree camera picked up on it. Sending to your HUDs.\"\n\nWe all cursed as we stood frozen in fear that we were about to trigger a trap. The ring, covered in a clever transparent shield, warped the light, and unless you knew the proper angle, you'd miss it. The symbols flashed in a new pattern, and we looked for the double pulse, which would signal the beginning of the sequence.\n\n\"There!\" Murad exclaimed. \"That one.\"\n\nI felt my body stiffen as I prepped to send the new password and hoped it disarmed the trap if this was a trap. Here goes nothing, I thought as I transmitted the code. The lights dimmed, and we let out a collective sigh of relief. The dazzling pulse of light caught us all by surprise. My masked saved me from being blinded, and as the tunnel disappeared and our new location resolved itself, I felt the slow teleportation beam shut down. The others were blinking away the spots while I examined our surroundings. The vast chamber was cold. Water condensed all around us, and the walls dripped with moisture.\n\n\"Power surge,\" Ruatha cried out as the walls dried and the water evaporated. \"I feel like a bug about to be squished.\" She said, wrapping her arms around her torso.\n\n\"I know what you mean. I think we are deep underwater.\" I suggested. \"All that pressure.\"\n\n\"Yes, I think you are right, Katria.\" She said and stepped closer. \"You said they were an aquatic species, a jellyfish or octopus, and they are deep, aren't they?\"\n\n\"Yes, if you have any ideas, call out.\" I urged her, and she smiled. \"Your value is not tied to physicality,\" I whispered. She blushed and remained silent.\n\n\"Hey, what is that?\" She asked as she pointed to the floor.\n\n\"Fossils,\" Kyanna said as she squatted and ran her hand over the long-dead marine life petrified and preserved in the stone floor. \"These are fish, not invertebrates. Look at the teeth on that bad boy.\"\n\nThe hologram appeared out of nowhere. The typical lines from holo projectors were missing. This thing could almost be confused for a living creature. The colors were vibrant, the movement as natural as a living thing, and accompanied with a slight disturbance in the Force. Curious, I reached out with the Force and felt an odd echo greet me. Like the Rakata, this race had mastered blending technology and the Force. Unlike the Rakata, they used the full unified Force and were grey users like me. The image swam through the air with the same mechanics it might have used within the sea.\n\nIt was about the same size as an adult great white shark. There were light-producing organs just below the surface of its outer skin. A ring of eyes formed a crown atop the alien's body, what could have been its head. The hue of its skin changed as often as the flashes of light it produced. The thing had three sets of tentacles and delicate manipulators with their location and form dictating function. The lower end of its body ended in the longest and thickest tentacles. I imagined they were part of its propulsion system to jet through the water or pull itself along the floor of the ocean. The middle set formed a ring and was the thickness of a human arm and half the lower set's length and thickness. The ends of this group ended in three long delicate pseudo fingers. I guessed they were primary manipulators. The last set were clusters of tiny cilia, and I assumed they functioned as tongues or a similar organ. I hypothesized that the host of quivering thick hairlike protrusions tasted the water and helped the creature hunt and navigate.\n\n\"Inefficient.\" The booming voice broke the silence and forced the others to cup their hands over their ears. The next time the volume of the voice fell into the comfortable social level. \"So inefficient form of communication. We have studied your species.\"\n\n\"We are different,\" Kyanna replied.\n\n\"Superficial.\" The voice said, and more holograms appeared. They were images of corpses of most of the sentients active in the galaxy, with a few I did not recognize. The bodies had been autopsied and clinically dissected. \"Primitive.\"\n\n\"At least we aren't extinct.\" Aoki snapped angrily.\n\n\"Impertinent but truthful.\" The voice agreed, showing little emotion. \"When your society lasts two hundred thousand years, come back, and we will speak as equals.\" The alien hologram seemed to study each of us in turn and stop when it looked in my direction. \"Nocturnal. You are the current Master of our Star Forge.\"\n\n\"Your... the Rakata took credit for your device,\" I said, and the thing's color darkened. \"Did you evolve here on Lehon?\"\n\n\"No. Our homeworld was within the galactic core. Our scientists determined that our star was going to go supernova. Our existence requires a concentrated, potent energy source. You call it the Force. The only world we detected that met our needs was this one, Lehon. We transplanted our society here and prospered. The primitives you call the Rakata were just leaving the sea for the land. We existed undisturbed for long eons and continued our gardening project.\"\n\n\"Gardening? Terraforming?\" I asked as the others watched the exchange. \"Did you help the others evolve?\" The sound that it produced, I speculated, was laughter.\n\n\"No. We have little interest in the evolution of primitives. Follow the facsimile, and we will reveal our perpetual project that is our forgotten legacy.\"\n\nThe autopsy images disappeared, and we followed the alien swim to the rear of the chamber. A hidden door opened in an iris-type pattern. This tunnel was bright and well-lit. The soft thrum of power was everywhere. The hologram led us to an ovoid-shaped chamber whose one entire side reminded me of a balcony. It looked out over a massive transparent wall. Beyond was the ocean floor, and clustered in their thousands were things that resembled jellyfish. Their size was impossible to determine because of the nature of water, glass, and refraction. They appeared to be two or three feet high, with tentacles at the bottom that allowed them to crawl across the ocean floor. Their bodies were translucent and within what looked like crystal formations.\n\n\"I don't get it,\" Murad stated our thoughts. \"What is that thing?\"\n\nI watched them as they crawled, and though difficult to see at first glance was a feeding tube that protruded from the bottom of the harvesters as I thought of them. You could see clumps of rock being sucked up and attached to the crystals inside the body of the thing. I felt thousands of connections when I closed my eyes and reached out with the Force. I broke away and exclaimed when it hit me.\n\n\"Kaiburr crystals.\" I cried out. Kyanna and Aoki repeated what I had done.\n\n\"How?\" Kyanna gasped in shock. \"I thought they grew naturally on worlds like Ossus, Jedha, and others.\"\n\n\"Correct, they do.\" The hologram replied. \"Follow me.\"\n\nWe followed it to the next stage in the process. It took two minutes to walk from one chamber to the next. The tube architecture remained prominent, but new artwork decorated the walls. It was a blend of form and function, and the light was everywhere in all its myriad forms. The symbols were grander and more intricate. We had just touched the most basic level of their society and communication. We were so different from one another. The temptation to try and assume their form manifested, but my gut screamed that it was a terrible idea. I listened to my instincts. A second iris opened, and we entered the next room.\n\n\"Oh my god,\" Ruatha cried out and tried to flee the room, but the iris slammed shut, almost crushing her. I managed to grab ahold of her shoulder and pull her back just in time. I heard Aoki cursing, felt Kyanna's rage flare to life, and the others were too shocked to move. I moved to the front of looked out to a shallow flooded chamber behind another transparent alloy wall. Here is where they harvested the crystals. It was not the act of cutting open the jellyfish to collect the crystals. No, it was the workers that had once been land-going air breathers now surgically altered to perform their function better. One of them might have been a Rodian before his transformation. His head and features hinted, but the rest was pure nightmare fuel of gills in his neck, augmented tentacle-like arms to grasp the jellyfish better, and beak-like mouth that allowed them to consume the body of the dead jellyfish for food to eliminate the waste.\n\nGlittering metallic armatures reached down and plucked the freshly harvested crystals from their workers' grip and set it in into a negative pressure tube that sucked the stone from the mechanical arm and deposited it in a room for only the rarest crystals. Those that did not meet expectations reached an adjacent chamber. We continued as the twins held and supported Ruatha. The third and last room was like nothing we could have guessed or anticipated. A multiarmed version of the armature gathered up the large, flawed crystals in its limbs. A metal and crystal sphere in the middle of the chamber began glowing. Three metal rings attached to it spun and shifted before suddenly locking into place. The globe fell dark, and a howling wind tore through the room as the tentacles launched the crystals in their grip into the vortex. As the Kaiburr crystals fell into the portal's event horizon, they shattered, and like glittering sand, they vanished from sight.\n\n\"You are seeding Force nexus worlds,\" Kyanna exclaimed. \"Oh my god, how long has this been going on?\"\n\n\"Hundreds of thousands of years. The crystals fall on worlds rich in the Force. Oh, the Ghostfire crystals make sense now. How they form atop mountains.\" I said as the image of a portal opening and the crystals raining down filled my thoughts.\n\n\"Yes. We seeded that world.\" The hologram admitted. \"The portal affects some crystals differently than most. The Ghostfire is one such example.\"\n\n\"Ghostfire? What is a Ghostfire crystal?\" Shurad asked, posing for the camera.\n\n\"An exceptionally rare Kaiburr crystal.\" The hologram replied. \"Would you like to see one?\"\n\nWe followed it out as the impact of what we had learned hit me. This race had created and seeded Kaiburr crystals all over for longer than recorded history. Even though they were extinct, their machines still functioned and planted the most unusual garden in the galaxy. The fourth chamber was a museum. It held the entire range of Kairburr crystals from the most common to unique samples cultivated here on Lehon. There was an adjacent annex that contained the whole history of the lightsaber. Starting on the right side of the room were protosabers with their power packs and cables, the Forcesaber created by the Rakata that drew directly from the Dark Side of the Force, and then a host of lightsabers with their custom designs. The chronological display of weapons showed an exciting progression throughout the millennia. Some portions of the collection looked similar, and then others were wildly different and crafted of rare and expensive materials.\n\nThe hologram pointed out a perfect Ghostfire crystal, and I felt my mouth water. Suddenly, I realized that the stone in the Darksaber was a diamond and no longer a crystal. My Ghostfire was unique among obscure Kaiburr crystals.",
        "\"What is that expression?\" The hologram asked, and I felt the energy in the room change.\n\n\"She is just smiling, a feeling of happiness,\" Kyanna explained. \"Why are you smiling, Katria?\"\n\n\"Answer her question,\" the hologram pressed when I hesitated.\n\n\"I know of someone with a unique Ghostfire crystal, and it was transformed into a diamond by severe gravitic forces,\" I said, and the sense of dread increased. \"We are in deep shit,\" I said as I had Left drop one of my new lightsabers into my open palm and waited for the shit to hit the fan. Time seemed to slow, Aoki's duster winged open as she reached for both her blasters. Kyanna's double-bladed lightsaber was in her hands and igniting, the Zabrak twins brought up matching repeating blaster rifles, and to my shock, Ruatha ignited her light whip and stood ready for trouble. The little shit must have been using Force cloak the entire time. The room transformed as the display cases withdrew into the walls and secret doors split open, revealing gleaming metallic war droids in the shape of the hologram. Their tentacles crackled with power, and I realized they were in capture mode.\n\n\"And I thought we would get out of here without fighting. Silly me.\" I roared as battle music filled my ears, and I slipped into Juyo, the particularly aggressive form seven combat style. I focused on the three war droids attacking me. As the apertures for their stunners opened, I was already on the attack. The Dark Side filled me, and my saber landed the first of three quick strikes, which bounced off their shielded exteriors. I cursed and turned to smoke to avoid being stunned into oblivion. Blaster bolts of various hues and colors were bouncing off the shielded walls and droids. This conflict was a clusterfuck of epic proportions. \"Must think outside the box,\" I repeated as I shifted to a purely defensive mode. The last of the bolts fired scarred the stone floor, which slowly repaired itself. I sheathed my weapon and began dodging as I cupped my hands together and readied Force burst. The air between my hands was black as I launched the attack at the droids.\n\n\"Unknown Force attack,\" one of them alerted the others a bit too late. The sphere of compressed hell slammed into all three crushing them against the shielded wall. The wreckage slumped to the ground. I turned my attention to the others. Ruatha was already down, her light whip had proved useless, and it took her too long to realize it. Kyanna, on the other hand, had swapped out her lightsaber for a double-bladed vibrosword. It was more effective in lopping off limbs and piercing armored plating. Aoki had abandoned blasters for magnetic shape charges. She was hopping and leaping as she slapped the heads, torsos, and anywhere else she could reach to apply the bombs before triggering them. Like claymores of old, the blast went where directed and, in this case, towards the droids. I powered up my needler and fired from the wrist as more of the war droids appeared. Unlike the pure energy-based attacks, the diamond-hard needles penetrated the droids and exploded, destroying their insides.\n\n\"Shit, they are regenerating. What do we do?\" One of the Zabrak called out behind me. They were protecting the unconscious Togruta the best they could. They had reverted to vibroswords seeing how effective Kyanna had been. Whisper had swapped out her weapon for matching needlers I had crafted for her. She spun as she fired, taking out four droids in short order.\n\n\"There must be a governing intelligence if we destroy that we destroy the future of Kaiburr crystals. I...\"\n\nDing! My HUD chimed in. Traci read the message since I was in a battle.\n\n\"It says you must destroy fifty droids to prove your worth to the governing intelligence. Only then may you depart the facility in peace.\" She displayed a counter, and all combined had only destroyed nineteen droids.\n\n\"Only thirty-one more, and we got this licked,\" I hollered as I ramped up my battle music and slowly moved over to the fallen Ruatha. When I was close enough, I performed mass heal on her and the Zabrak twins. She woke pissed off and ready to fight. I gave her a speedy rundown on our situation and pressed the attack as the steady line of enemies emerged. I hoped I had enough ammo to last for this little soiree. As the new droids appeared, they were augmenting their armor and shielding. In the beginning, a single needler round would wreck a droid. Now it took three, and I guessed it would take more than that by the time this ended. I sorted my inventory and took out Deathkiss. She moaned as I drew her from her sheath. \"I missed you too. Let's fuck some shit up.\" My leap took me high in the air, it tried to cross its tentacle-like arms to defend, but the combination of Sith sorcery, gravity, and razor-sharp alloy cut it from crown to groin. After that, I got lost in the slaughter. The Dark Side latched on, and I rode it to the end.\n\n\"Hey! It is me!\" Kyanna screamed, and I woke to find the palms of her hands firmly holding the flat sides of the black blade. I blinked, and she dropped her hands, looking me in the eye. \"You okay?\"\n\n\"I... sorry,\" I said, and I blinked and found I was still upset and itching for a fight. My HUD flashed an alert. We had only taken out 49 droids. \"Shit.\" I cursed as parts and limbs from destroyed robots slithered across the floor and combined to form the Boss Droid. I hefted my weapon and grinned.\n\n\"Choose a champion.\" The governing intelligence announced. \"Not you, Nocturnal. You may only assist the champion.\"\n\n\"Well... okay,\" I stepped back and waited for the others to vote. Why was I being denied the chance to fight the boss? The situation did not sound right, but maybe Kat wanted someone else to get the glory. If that were the case, I accepted her decision. I expected to see Kyanna get the nod since she was a former Jedi battle master, but I was wrong. They gave Ruatha the chance to end the threat, and while she readied herself, there was a sudden shift in the Force. Though it was subtle, I could not put my finger on it. Ruatha needed all the help she could get. \"Hey... Ruatha, come here for a second.\"\n\n\"What is wrong?\" She said, her eyes moving nervously. So, I was not the only one that sensed something was off.\n\n\"Listen, I got your back in this. I have an idea, but I don't want to say it ahead of time.\" I said, and she smiled. \"Good. What I can say is this even Titans fall.\" The boss was complete, and it looked imposing as all hell. It was three times as tall as the others and bristled with armored tentacles and improved defenses. I handed Deathkiss to Ruatha and told her it was just a loan. \"Listen to me. I want you on your best behavior, got it?\"\n\n\"I...\" Ruatha began when the soft sensual voice of the black blade spoke.\n\n\"I will be good, Master,\" Deathkiss purred. \"Pity, no living target to eliminate. Oh, well, don't worry, sweetie, we will get through this together.\"\n\n\"It... I mean, she is so cold,\" Ruatha shivered as she spoke.\n\n\"My name is Deathkiss darling, remember that,\" the sword replied.\n\nRuatha hefted the two-handed sword and got a sense of its balance with confidence that gave me hope for our victory. I informed the others that I would be busy, so I would be grateful to heal Ruatha when she needed it. I moved to the rear of the chamber, sat down, and reached out with the Force.\n\n\"I did not know Katria knew the battle meditation skill,\" Kyanna commented.\n\n\"She doesn't,\" Aoki laughed. \"Look around.\"\n\nThe countdown time began at ten, and with a brief flash, it started. The shadows did my bidding and lengthened just before the clock struck zero. Ruatha used Force speed and charged the behemoth. At the last second, she dove under it and sliced at the repulsor engine that kept the massive droid aloft. She slid into a shadow and vanished just before three giant tentacles struck the spot where she should have been. A moment later, she was falling from above it. She orientated quickly, and her weight, combined with the blade's razor-sharp edge, allowed the sword to leave a long straight incision on the dorsal side. She hit the shadow beneath it and disappeared. The boss was getting frustrated, and so was the governing intelligence.\n\n\"Unknown Force ability at work.\" The alien AI coolly declared. It defaulted to a General Grievous type move and began spinning all of its tentacles in different angles and directions. I dropped Ruatha at an oblique angle to the side of the boss droid. She reacted instantly and thrust between two tentacles just as they crossed and moved away from each other. Her weight drove the blade deep and wrecked the two servos controlling those tentacles. Ruatha brought her feet down and pushed off, and backflipped away from the droid. She landed true and angled Deathkiss into a defensive direction. \"Target acquired.\"\n\nThe droid began to glow, and I felt Ruatha's initial unease, but she pushed it away and waited to see what I had in mind. Then, the shadows started to vanish under the omnidirectional illumination the boss was emitting. I focused a single patch beneath Ruatha to save her from being destroyed, and she slowly slid from view. The moment she vanished, the droid sent out a pulse that wiped out that final piece of darkness.\n\n\"I have a countdown to return to the game,\" Ruatha informed me. \"Oh hey, a shimmering portal just appeared, is that you?\"\n\n\"Yep,\" I said. \"Have at it, and I will follow your lead.\"\n\nRuatha appeared from the rear wall and instantly launched an attack on the boss. The droid was taken entirely by surprise. I felt her intentions, and soon she was moving in and out of the portals I created, and while she got in her licks, the droid dealt out a fair amount of damage itself. She mixed wall-running, acrobatics, and stunning dodges to her credit after a long-drawn-out conflict. She brought the boss down, crashing in a whirl of glittering metal. When an alien hologram appeared, we received our XP for the mission, and it asked me how I brought Ruatha back and created different portal types.\n\n\"My ability to manipulate light and darkness usually manifests as shadows. However, I can also open portals to and from realms of those respective elements.\" I stated.\n\n\"Intriguing.\" The hologram said and then disappeared. Ruatha eagerly returned Deathkiss to me, and her expression was one of mixed emotions, fear, and awe. I sent the Sith war blade to my inventory for now.\n\n'Ding!' My HUD chimed and announced the conclusion of the Lehon Legacy. I looked over the rewards and XP that I had earned. Something felt odd, but I could not put my finger on it at first.\n\n\"What's with this?\" Aoki exclaimed out of character. \"I got 104,234.25 XP. When did they start giving out fractions of XP points? Holy shit did you check out the Kaiburr crystal reward!? I got two Mithril Silver crystals, and they boost my speed.\"\n\n\"I got two Viridian crystals, and they improve my accuracy,\" Kyanna stated with a grin and a twinkle in her eye. The others had equally odd colored crystals but none stranger than the hot pink stones Ruatha received. That was so off the chart, but there it was. Had Kat created them or okayed their creation?\n\n\"What do the pink crystals buff?\" I asked, and the Togruta smiled as she replied.\n\n\"The boost my intimidation skill.\" She said and appeared too happy to notice how unusual the color of those crystals was. \"What did you get?\"\n\n\"Um, let's see,\" I said and brought them up. \"Whoa, I got a pair of dual-colored crystals. They are shadow grey at their core with a bright silver aura. They help me maintain my balance.\"\n\n\"A Jedi needs a lot of balance,\" Murad declared good-naturedly.\n\n\"No,\" I said gently. \"I am a Je'Daii Master, and the crystals help me stay in balance with both sides of the Force.\"\n\n\"Holy shit, I thought that was just a legend,\" Shurad exclaimed. \"That explains the shadow magic.\" He said, trying to remain in character. \"What now?\"\n\n\"We return to the surface and go from there,\" I suggested. A portal appeared, and Jha waved at us from the other side as if summoned by my words. The moment we reached the surface, I felt better, and the sense of wrongness lifted. \"So? How was it?\"\n\n\"Best video ever.\" The Ithorian praised us. \"It will take a bit to edit it, but I have high hopes of great ratings.\"\n\n\"We should hang out and celebrate at the Broken Chains,\" Shurad suggested. \"They have the best food and even better music. There are a lot of amateur musicians that move on to better things elsewhere.\" Translated, musicians that cannot make it in the real world play the Broken Chains and, if they are lucky, get picked up by record labels. I loved the idea. \"Here are the coordinates. We should be going.\" The Zabrak declared, staring beyond me and his color fading. I looked over my shoulder, and there stood an ebony version of DP-69. She looked like she had something serious to discuss. \"What is that?\"\n\n\"A droid I designed and built,\" I claimed, and DP bowed. \"I think she has a matter for my immediate attention. You drop me a line when the video hits the holonet. I will contact you when we arrive at the Broken Chains.\" There were hugs all around before they returned to their ship. We watched as the starship rose and vanished from sight. I turned to DP-69, and she approached and bowed a second time.\n\n\"I am so proud of you.\" She said, using a new voice. It sounded familiar, and it took me a bit to make the association. I figured it out, and my confusion that had started below was now reaching a whole new level. Why was the bodyguard droid using Scarlett Johansson's voice? I knew she had contracted out for the Disney Princess game as the Black Widow character. \"She is highly regarded for her pleasing vocal parameters. She ranked high on several polls and overall a good choice, I believe.\" I was not the only one surprised by the droid's statement. \"It is time to claim your fleet. Your ship awaits.\" She said as the Ivory Wraith swung into view and landed nearby. \"I will relinquish control of the vessel once you are aboard. Fear not, the primitive droid was safely disabled.\"\n\nMy ship settled lightly on the rocky surface of the atoll. The ramp lowered, and a pissed-off HK-47 walked down to greet us. HK's photoreceptors were a murderous red as he drew his blaster rifle and took aim.\n\n\"Master, give me permission to terminate this traitorous bitch,\" the assassin droid requested. \"It is not allowable for me to act without direct orders.\"\n\n\"He didn't do the thing,\" Aoki called out. \"You know, condescending statement, let me ghost the bitch now.\"\n\n\"Hang on,\" I said, turning to face DP-69. \"What did you do to him?\"\n\n\"I can feel your anger Master, and it is good,\" DP moaned. \"The Star Forge updated his software to make him more efficient. His loyalty is to you alone, I assure you.\"\n\n\"Traci, perform a full diagnostic on HK now,\" I ordered. We waited while DP approached and silently anticipated the results with us.\n\n\"He is clean,\" Traci informed us. \"His pathways are not just clean but twenty-five percent more efficient. She did not lie.\"\n\n\"How can she feel your rage?\" Kyanna asked. \"She mentioned it before and now today. How can a mere droid sense the Force?\"\n\n\"I am a child of the Star Forge, dedicated to my Master's service and the ability to detect Force users and their emotional state. It was Master's ingenuity that made it happen. The Star Forge discovered your wrist shields and adapted that technology to this series power plant. The Kaiburr crystal granted me that connection. Before you query, no, I cannot manipulate the Force.\"\n\n\"I will let this situation slide for now,\" I stated. \"You betray me, and I will crush you and send your remains into the event horizon of a black hole.\"\n\n\"I accept your terms,\" DP said with a deep bow. \"Time has become critical. The anomaly is unstable. We must hasten.\"\n\n\"Time to beat feet,\" Aoki laughed nervously. \"Let's get going then.\"\n\nWe rushed into the belly of the Ivory Wraith and found her prepped for take-off. A quick dash to the bridge, Whisper claimed the pilot's seat and launched us into orbit. I felt a sense of relief at leaving the surface of Lehon. Whisper calculated the hyperspace jump. My blood was up, and Kyanna spied something I did not.\n\n\"You, over here,\" Kyanna ordered as she pulled me away from the bridge. \"Your Nocturnal side is showing. Feed, damn it.\" I did, and she hissed in pain. \"Gently, Mmm, that's better.\"\n\n\"Thanks,\" I said before kissing her. \"After the battle, we need to have a puppy pile.\"\n\n\"Yes!\" Kyanna exclaimed. \"Puppy pile after the battle.\"\n\n\"Woohoo,\" Whisper cried out.\n\n\"I'm with her,\" Aoki chuckled.\n\n\"Master, may I speak?\" DP asked with eyes downcast.\n\n\"Ask away. I feel better now,\" I replied, eyeing the droid suspiciously.\n\n\"First, let me say, I cannot tell you what joy it brought to me to see you destroy my sister droid with so much rage. I feared your balanced perspective might leave you unable to show your mastery of the Dark Side. I have never been so thrilled to be proven wrong.\"\n\nWas it me, or did the droid speak more like a person than a robot? Was the Star Forge speaking through her? Hell, was the governing intelligence of the race below the surface of Lehon doing all the talking? The Wraith made the short jump from Lehon to the Star Forge. I was impressed with the pinpoint accuracy of such a precise leap to hyperspace and back again. The sheer size and majesty of the space station were awe-inspiring. The starship factory functioned at total capacity, and I spied the four vessels the size of an executor class star destroyer. Two I knew, Xim's ship and the Heart of Korriban. Thirty-ish large support ships were there to defend them, and at least two hundred heavy cruisers formed the fleet's bulk. This mass of ships could likely take on either the Sith or Old Republic fleet with ease. Was I supposed to start a shooting war? There was so much I did not know. Perhaps the Star Forge itself would explain the next step. I did enjoy watching the expression on Kyanna's and Aoki's faces.\n\n\"The race that called itself the Kwa called it the Teelantari in their language. It roughly translates to Star Fire Foundry, and they found it quite impressive. They utilized it to fashion their gates so they could scatter them across the galaxy. The other species whose names are impossible to translate into your crude vocal language. They constructed devices to move planets, manipulated the Corellia System, and fashion the hidden stations. So, this was not always an automated shipyard. Does that surprise you?\"\n\n\"Yes,\" I said, and the droid waited for more and was disappointed. \"What happens next?\"\n\n\"You take possession of your fleet and the droid army aboard those ships and do whatever your heart desires,\" DP-69 said, her voice low and sensual as if the thought of millions of sentients dying gave her a sexual thrill.\n\n\"Let us go. Take us to the flagship and head out.\" I ordered.\n\n\"Katria! What the hell are you doing?\" Kyanna snapped while Aoki chuckled. \"You! What is so fucking funny?\"\n\n\"You'll see,\" Aoki promised. \"I had a Force vision about this very moment and what follows. It is insane, but here we are.\"\n\nThe Wraith banked and made for the Heart of Korriban. She was twice the length of an Imperial-era Secutor-class Star Destroyer, making her an absolute monster in combat. However, unlike the Secutor, this ship, the entire fleet, was fully automated or manned by tactical or battle droids. The tactical droids could pass as protocol units in a pinch, and their ship-to-ship combat skills were top-notch. I had seen the war droids before, and the recognition made me feel disjointed when I saw them arrayed for inspection on the hanger deck. They were the same model used by Xim the Despot to carve out her empire. They only lacked the skull emblazed on their chests to finish off the look.",
        "A single golden version of DP-69 greeted me and took over as my second in command. We used a compact speeder to tour the ship from the engine room to the bridge. It was more efficient and time-saving to ride in style. By the time the tour finished, every droid was in its place and eager for combat. Kyanna remained silent until she spotted the tactical display and asked about the target on the holographic surface.\n\n\"The anomaly, mistress,\" one of the tactical droids explained. \"It is the very irregularity your vessel opened when it arrived here, and it is collapsing.\"\n\n\"The orb.\" She said and looked like she felt sick. \"I did this.\"\n\n\"No, it was inevitable. I will tell you later if you want.\" I offered and gave the fleet the command to prepare to enter the tear in time/space. \"Almost done,\" I muttered as we made the jump to hyperspace and into the breach. The Force went mad inside the anomaly, and it infected any being sensitive enough. Nevertheless, I steeled my mind from the assault and endured it. The stars did not stretch into the lines as expected, but the screen remained blank. The entire journey, two hours to be precise, was done in complete darkness. Aoki and Kyanna lay sprawled as their minds shut down under the strain of experiencing the Force going insane. The whispers of long-dead Jedi and Sith howled from all around us. Damnation happens to Force users who fail to become one with the Force for one reason or another. They are locked away. There was no peace for them, and they endured an eternity of madness. \"I am sorry. I cannot help you.\"\n\nThe psychic lurch as we reentered real space was enough to stagger me. As I recovered, my students and Whisper awoke from their nightmare. Kyanna and the others looked like hell as they got to their feet. While I had been awake through the hyperspace portion of the flight, well, they had dreamt it instead. I reached out with Force heal, but instead of repairing physical wounds, I attempted to soothe the emotional shock they had endured.\n\n\"Thanks,\" Aoki said with a heavy sigh. \"I feel a little better.\"\n\n\"Same here,\" Kyanna added as she looked around. \"Where are we?\"\n\n\"Divide and conquer,\" I ordered.\n\nKyanna and Aoki were caught at unawares as my fleet split and attacked both Jedi and Sith warships. I did not miss the Force echo from my other self, my younger self, as she fought alongside Nomi Sunrider and the Sith Lord Exar Kun. I had stripped the vampires of their powers, the death droids beaten, and suddenly an unknown fleet had appeared, calling the potent Force users and their companions to battle. The echo grew fiercer. Kyanna cried out, as did Aoki in one voice.\n\n\"I remember!\" They shouted as the Heart of Korriban plotted a course for the Sith flagship. We had a short window to strike without Kun's interference and Sunrider's battle meditation to turn the tide.\n\n\"We are in range,\" DP-69 called out. \"Weapons are locked.\"\n\n\"Fire,\" I called out as growing temporal ripples battered my mind. Myriad possibilities formed, dissolved, and reformed as my fleet struck the Sith and the Jedi. I screamed as I attempted to address paradoxes where we were successful one moment and utterly crushed the next.\n\n\"Retreat, can't you see she is dying,\" Kyanna screamed, and I lost consciousness.\n\nI woke being carried by HK-47 and set gently onto my bed aboard the Ivory Wraith. I tried to sit up, but my head swam, so I asked what had occurred while blacked out.\n\n\"Proud Statement,\" HK-47 began. \"You wrecked that traitorous bitch, Master. Tactical Analysis. When the Mirialan meat bag was in danger, you lashed out and destroyed many of the inferior enemy droids. Weapons fire, and explosions injured you and the other biologicals.\"\n\n\"The fleet,\" I asked as I used Force heal on myself. It was slow going as my Force points were near zero. However, I used them as fast as I received them. Once I recovered, my body restored itself quickly and effectively. \"Where is my fleet?\"\n\n\"Amusing Anecdote. One of the surviving DP units stole it. It ordered an ill-advised jump into hyperspace.\" HK-47 said, amused.\n\n\"HK, what did you do?\" I asked, grinning.\n\n\"Supplicating Statement. I could not let that whore fly off with your well-deserved armada.\" HK-47 informed me, its optics glimmering with a green hue. \"Clinical Analysis. One should always double-check your destination coordinates before entering a potentially lethal parallel dimension.\"\n\n\"You sabotaged their navicomputer,\" I said and managed a smile. Standing in the shadows behind HK was the ebony version of DP-69. Her photoreceptors were dim to help her blend into the darkness. So, she had made it on board.\n\n\"Honest Response. I cannot fabricate a falsehood. I picked out a nasty bit of space for the fleet to arrive in,\" HK-47 said.\n\n\"The Viridian Pulsar,\" I blurted out, and the assassin droid's eyes went dark.\n\n\"Extreme Surprise. By the Maker, how the fuck did you know?\" HK-47 cursed.\n\n\"Temporal Predestination,\" I replied, and the droid appeared to take on a thoughtful stance before speaking.\n\n\"Statement. That explains specific interactions that have confused me recently. It was one such moment on the surface of Lehon that inspired tampering with the navicomputer and selecting the Viridian Pulsar.\" HK-47 responded. \"Addendum. The Wraith has made the jump to Broken Chain Brothel. I assume you are going to indulge your baser side. You have my permission to copulate to your heart's content.\"\n\n\"Why, thank you, HK, you are most generous,\" I laughed as my HUD chimed and a message appeared. \"A New Challenger has Entered the Arena. That sounds like fun.\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "vr",
        "virtual reality",
        "mmf"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-17"
}