{
    "title": "Beneath the Ice Ch. 03",
    "pages": [
        "All day Friday, Charlotte couldn't concentrate at work. Alexei was going to be home today, following the team's game in Nashville the night before. He might already be home, she thought as she wandered around checking with the few customers browsing the store shortly after noon. She had no idea how flights and travel time worked for the hockey players. All she knew was that she'd never looked forward to going home as she did now.\n\nWe'll talk when I get home.\n\nAbout many things, he'd texted. Charlotte shivered as she recalled. She even tugged her phone out of her pocket multiple times through the day to look at their exchange again. It had been late the night before, following his game, and she devoured the words over and over again, trying and failing to read between the lines.\n\nThey'd talk. He'd promised.\n\n\"Put your phone away, Char.\" Sarah's tone wasn't sharp as she passed by with an armful of luxury pillows. \"You'll see him soon enough.\"\n\nCharlotte blushed and sighed but did put her phone back in her pocket. She walked to the back storeroom to grab some more of the pillows, helping Sarah fill the big bin near the center of the store.\n\n\"So.\" Sarah faced her a few minutes later across the front counter, her elbows resting on the surface and her chocolate-brown eyes sparkling. \"What do you think he wants to 'talk' about when you see him?\"\n\nCharlotte swatted at her friend's hands. \"Stop that. It will only be talk because Zoe will be with us.\"\n\n\"I could swing by later, pick her up for a sleepover?\"\n\nFor a second, Charlotte considered that. But she didn't know what talk Alexei intended to have, not really, no matter how much her hormones hoped for one thing specifically. \"No. It's fine.\"\n\n\"You sure? You might change your mind once you see him. How many days has it been since you cuddled in bed?\"\n\n\"God, I wish I'd never told you about that.\"\n\n\"Who else would you tell?\" Sarah snickered at Charlotte's embarrassment. \"For the record, my dear, I think it's great.\"\n\n\"You think what's great?\"\n\n\"If he's into you. If you start to see each other properly. I think it's great. You deserve to have some fun.\"\n\nCharlotte might agree but no matter how she felt about it, there was Alexei's thoughts to consider. Maybe he didn't feel a thing and their talk was going to be how to move forward with the noise levels.\n\n\"I don't know if he's going to suggest we see each other, Sarah. I mean, really, let's be honest. What hot, eligible, single man is going to seek a relationship with a frumpy single mom?\"\n\nSarah rolled her eyes. \"We could take care of the frumpy any time you want. Why you insist on dressing like an excommunicated nun, I'll never understand.\"\n\nCharlotte frowned and touched the collar of her button-down shirt. \"I didn't think I was that bad.\" She dressed in clothes that she mostly purchased from the consignment shop down the block from her apartment, when she bought anything at all. She was lucky enough to fit into a large portion of her wardrobe from years before her family had cut her off. So maybe her fashion sense was a little dated but its not like she had a ton of disposable income to waste on current trends.\n\n\"It's not bad, per se.\" Sarah looked her up and down and waved a hand in dismissal. \"But no matter. Alexei has clearly seen the way you dress and still crawled into bed with you on Sunday, so I'm guessing he's fine with it.\"\n\nCue the blushing. Damn her fair skin. \"Sarah--\"\n\n\"Look, all I'll say is this: give him a chance to talk before you shut him out, okay? Maybe he's interested, maybe not. Just don't jump to any conclusions. Some men, the really good ones, wouldn't overlook a single mom. Some guys are man enough to step up when no one else is.\"\n\nLike Alexei had on Friday night, coming when Zoe had 'called', no questions asked. Charlotte turned as a customer approached and both ladies got back to work.\n\nLater, Charlotte was nervous all over again as she walked down the hall, Zoe's hand in hers. Her daughter was quiet, no wild tales from daycare for now. She had been more subdued since she'd been ill so maybe she just wasn't back to her old self again.\n\n\"Do you want to make some muffins when we get inside?\" Charlotte jiggled Zoe's hand as she asked.\n\nZoe glanced up and shrugged one slender shoulder. \"Okay.\"\n\n\"Okay?\" Charlotte squeezed her fingers. \"Just okay? What if we make those ginger ones you love?\"\n\n\"Yeah. They're good.\"\n\nAt their door, Charlotte went to put her key in the lock only to see that it was already unlocked. Only a few people had a key, and only one person would be able to get into the building without buzzing, but this still didn't seem like something he'd do. Heart jumping, she twisted the knob and peered inside.\n\n\"Hello?\"\n\n\"Hi.\" It was Alexei who answered and relief dropped over Charlotte, leaving a weird sort of elation behind.\n\nShe swung the door open to see Alexei sitting up on the couch, a book in his hands. He smiled --a real smile!-- and closed the book as she stepped inside, Zoe beside her.\n\n\"Grumpy!\" Zoe dropped Charlotte's hand and bolted across the apartment, throwing herself at the big man.\n\nHe chuckled as he caught her, lifting her onto his lap, where she promptly snugged herself right against his chest, her face pressing to his neck. \"Hello, zaya. How are you?\"\n\n\"I thought you'd never come back.\"\n\nHis eyes shot to Charlotte's face as she closed the door and set her things down.\n\n\"I told you every time you asked, Zoe. He was always coming back today.\"\n\nZoe lifted her head and clamped her palms on either side of Alexei's face, startling him. His eyes wide, he watched her as she leaned so close their noses touched, her little face screwed up in a serious frown.\n\n\"Will you always come back?\"\n\nCharlotte's heart squeezed, guilt flooding her. There was that terrible-mom feeling again. She was failing Zoe at every turn. Clearly she wasn't giving Zoe everything she needed that she was so anxious about their upstairs neighbor going away.\n\n\"Zaya.\" Alexei rubbed her back and his eyes went soft at Zoe's question. \"I will always come back for you.\" His gaze lifted to encompass Charlotte, all the warmth and something stronger hitting her square in the chest. \"For both of you.\"\n\nWas this it? Was this the talk they were due? Charlotte swallowed around a suddenly dry throat, her mind scattered.\n\n\"How did you get in here?\" She managed to get out a moment later, then felt stupid immediately. He didn't say anything about it though.\n\nHis expression turned sheepish and he jerked his chin at the coffee table as Zoe released his face. \"I still had the spare key I took last weekend.\"\n\n\"Oh.\" Charlotte eyed the key, her gaze lifting to his, then down again. \"Um. You might as well keep it.\"\n\n\"Okay.\"\n\nDon't look at him again. Focus on something else. Anything. \"Would you like some coffee or tea?\"\n\n\"Sure. Tea, please.\"\n\n\"I'll make it!\" Zoe launched herself off his lap and hurried across to the kitchen to drag a chair up to the counter. \"I can make it myself.\"\n\nCharlotte supervised as her daughter filled the electric kettle with water and put it on the base. Then they grabbed mugs and dropped tea bags in each, one for all three of them.\n\n\"You're drinking tea too?\" Alexei had joined them and leaned against the counter. He pointed to Zoe's unicorn mug and the tea bag inside.\n\n\"It's special tea.\" She beamed up at him. \"Mommy says it's for active little girls.\"\n\nCharlotte bit her lip, hiding a smile. She pointed to the box of decaffeinated berry tea in the cupboard and Alexei nodded.\n\n\"Can I try some when it's ready?\" he asked.\n\nZoe nodded. \"Yeah. I can share.\"\n\n\"I bet you can.\"\n\n\"We're going to make muffins. Will you help?\" Zoe's little face was lit up now, more animated than she'd been all week.\n\nCharlotte's heart skipped around in her chest as she watched Alexei and her daughter talk. He was so patient with her, so gentle, so matter-of-fact. Some people thought you needed to talk down to children, give them baby-talk, or treat them like they're not smart enough to carry on a conversation. Alexei spoke to Zoe without any inflection, didn't dumb down his words, and conversed with her as he would with any adult.\n\nWell, almost any. She wondered what Alexei was like around his teammates. She imagined it was much the same as now, maybe with a few more expletives added in.\n\nAs she smiled at the thought, his eyes lifted to hers and she froze at the heat she saw reflected back at her. For a long moment, she couldn't breathe, couldn't move. She was caught and let the heat wash over her.\n\nTalk, indeed. She was ready for any kind of talk he wanted to have.\n\n\"Mommy?\"\n\nCharlotte started at the sound of Zoe's voice. She looked at Zoe and managed a smile. \"Yes, sweetie?\"\n\n\"The muffins?\" Zoe's exasperation let Charlotte know she must have been lost in Alexei's gaze for far longer than she thought.\n\n\"Right! Yes, let's get all the ingredients out.\"\n\nZoe jumped off the chair, landing on the floor with a thud, which made her glance at Alexei again.\n\nHe was grinning. Full-on, cheek-to-cheek, eyes sparkling grin. Good Lord, he had dimples. \"That's the noise, isn't it?\"\n\nCharlotte laughed and nodded. \"One of the many, yes.\"\n\nHe slid along the counter while Zoe dug through the pantry, tugging out containers of flour and sugar. Charlotte didn't watch her daughter. Instead, she watched Alexei slide closer to her, one of his big hands coming up to brush her hair from her face. He cupped her chin in his hand and leaned over her, his head and shoulders blocking out the entire world.\n\n\"Hi.\"\n\nHer lower lip trembled but she managed a smile. \"Hi.\"\n\nHis thumb brushed along the line of her jaw, something flashing in his eyes. \"You're feeling better?\"\n\n\"Oh, yes. I'm great.\" So long as he continued to look at her like that, his touch so soft and warm, she would never not be great. When had this happened? When she'd slept through last Saturday? Had that been the moment everything changed?\n\n\"Can I spend the night with you?\"\n\nHer cheeks warmed as she processed his words. The night? The whole night? With her? Or was something lost in translation, and he meant the evening, with both her and Zoe?\n\nAs if sensing her confusion, Alexei slipped his hand behind her head, still holding her in place. \"I'd like to have dinner with both of you.\"\n\nAh. Okay. She gave a jerky nod. \"I-- I'd like that. I'm sure Zoe would, too.\"\n\nHis eyes darted back and forth between hers, his lips parting as if he had more to say. Zoe chose that moment to climb back onto the chair beside them, slamming the little carton of molasses on the counter.\n\n\"Mommy!\" She sounded panicked. \"I think the molasses turned to rock!\"\n\nCharlotte jerked out of Alexei's hold at Zoe's appearance and she turned to her daughter. She lifted the carton of molasses and jiggled it. It was fairly solid, but she turned to the taps over the sink, starting the hot and letting it run. \"We might be able to save it.\"\n\nZoe watched with worried eyes as Charlotte filled the sink with scalding hot water and set the carton in the middle of it.\n\n\"And if not, I'll run to the store for more,\" Alexei said.\n\nZoe lifted her face to look at him. \"Can I go with you?\"\n\n\"Of course. You'll have to carry it.\"\n\nShe nodded, all seriousness. \"Okay.\"\n\nCharlotte and Alexei shared a smile over her head. It turned far hotter in seconds, and Charlotte had to look away before she melted into a puddle.\n\n\"Well, let's get everything out and see if we need anything else from the store.\"\n\nZoe nodded and climbed down from the chair. Charlotte and Alexei followed her to the pantry, digging out all the other ingredients they'd need for ginger muffins. Charlotte pushed Alexei's eyes and the way he'd held her head out of her mind.\n\nMuffins now. Talk later.\n\n\u2500\u2500\u2500\u2500\u2500\n\nIn the end, they did need to run to the store for molasses. Alexei and Zoe went alone, Zoe chattering the whole way. Alexei didn't mind. In all his time playing hockey professionally, all the road trips he'd taken, this was the first time he'd ever had something, or someone, to look forward to after all the games were done. Two someones.\n\nHe recalled the way Charlotte had all but melted before his eyes when he'd greeted her in the kitchen earlier. His body let him know in no uncertain terms that they were long overdue for a talk.\n\nBut he was a grown man in control of his urges. Mostly. He made ginger muffins with Zoe and Charlotte, planned and helped make dinner -- tortellini and meat sauce -- and then watched a cartoon movie on the couch with them.\n\nOnce Zoe started to drift off against him, he lifted her into his arms and carried her to bed. She didn't stir once and he smiled as he ran his hand over her hair, smoothing the waves. She looked so innocent, and silent, all tucked in bed. He found he didn't mind the noise so much when he was there to share it with her.\n\nOut in the living room, Charlotte was tapping on her phone, yawning as she did.\n\n\"She's out cold.\" Alexei crossed back to the couch and sat beside her, slinging one arm across the back of the cushions.\n\nCharlotte looked up, clicking her phone off. \"That's good.\"\n\n\"And you? Are you tired?\"\n\nShe shrugged and leaned forward, setting her phone on the coffee table. \"I'm all right. It wasn't too busy at work.\"\n\n\"Work.\" He huffed out a laugh. In spite of how much he wanted her, they really didn't know a lot about each other's lives. \"What do you do for work?\"\n\nShe smiled as she settled back again, drawing one leg up to hug to her chest. \"We've never talked about our lives, have we?\"\n\nThey hadn't had a chance. Most of their conversations had been rather focused on something else. He shook his head, shifting to be more comfortable, facing her a bit more head-on. \"Tell me.\"\n\n\"Well, I work in a store called Heart and Home. We sell everything home-related. Bed linens, towels, bed sheets, bath items, and living room d\u00e9cor. Candles, curtains, knick knacks, all that kind of stuff, but it's not big chain store product. It's all more unique in design, and higher quality than what you'd find elsewhere.\"\n\nHe nodded. \"Maybe I'll come visit one day. I don't have much in my place.\"\n\n\"You could. There's lots to choose from.\"\n\n\"And you like working there?\"\n\nShe smiled. \"Yeah, and the people are why. Ursula, she's the owner, she hired me with zero experience when I had a baby to take care of almost four years ago. She's always been accommodating and willing to work with my schedule.\"\n\n\"That's great.\" And it must be, for a single mother working and living alone with a child. To have any kindness would mean everything.\n\n\"Sarah works there too. She's my best friend. We get along so well, have since we met.\"\n\n\"She sounded nice when I spoke to her last week. Hopefully I can meet her in person one day.\"\n\nCharlotte's cheeks turned a pretty pink. \"Yeah, hopefully. I don't know where I'd be without her or Ursula. They've been like family to me ever since-- Well, for a long time.\"\n\nHe knew there was more to her story but he didn't want to push her. Clearly not having Zoe's dad in the picture was a sore spot, and it was obvious she had no close family to lend a hand either.\n\nThey fell silent for a moment, her looking down at the table, him watching her. Staring at those perfect freckles.\n\n\"What about you?\"\n\nHe blinked at her question. \"What about me?\"\n\n\"Yeah. How did you get into hockey? Where did you live in Russia?\"\n\n\"I was born in Novosibirsk. Do you know where that is?\"\n\nShe shook her head. \"No, geography was never my strong suit.\"\n\nHe smiled and pulled his phone out of his pocket. He brought up the maps application to show her. \"Here. It's a big city, though not as big as Moscow.\"\n\nShe nodded as he set the phone down beside hers. \"Do you visit often?\"\n\n\"Never. I haven't been back since I left to play hockey in North America.\" He counted in his head. \"Fifteen years ago. I applied for citizenship here a few years ago.\"\n\nHer eyes widened. \"Wow. Don't you ever want to visit your family? They must miss you after all this time.\"\n\nHe shrugged and ran a hand through his hair. It was getting long. He needed a cut, or so he thought until he saw the way Charlotte nibbled her lower lip, watching his fingers move through the longer locks.\n\n\"I don't have family there.\"\n\nShe blinked, her attention shifting back to him and their conversation. \"What?\"\n\n\"My parents died when I was little and I have no brothers or sisters. I was raised in an orphanage.\" He held his hand up between them. \"Or, what do you call it here? Foster care?\"\n\n\"Well, sure. I don't know for sure--\" She'd certainly never had to deal with that part of the world. \"But, Alexei, I'm so sorry.\"\n\nHe shrugged again. It was old news to him. \"It's okay. Was a long time ago.\"\n\n\"But you have no one? No grandparents? Aunts? Uncles?\"\n\nHe shook his head. \"Don't you?\"\n\nShe blinked and huffed out a breath. \"Oh, they're out there, it's just that no one wants to talk to me since I was knocked up at age nineteen and had to drop out of college to raise Zoe because I refused to give her up.\"\n\nAlexei leaned closer to her, picking up one hand in his and rubbing his thumb over her knuckles. He smiled when her breathing hitched at his touch.\n\n\"You are incredible.\"\n\nHer face turned red all over at his words and he smiled wider.\n\n\"I don't-- I'm not--\" She shook her head, words escaping her.\n\n\"You are.\"\n\n\"But you are too.\" She leaned closer to him as well, the brilliant aquamarine of her eyes capturing him in this dim, quiet living room. \"Growing up alone like you did, coming here all on your own. That must have been terrifying.\"\n\n\"It was.\" Or at least, he supposed it was. It had all been so long ago since he came to Canada first, and lived with a host family while he played major junior hockey there until he was drafted. \"I managed. I did a lot on my own to pass the time.\"\n\n\"No friends? Even once you were in hockey?\"\n\n\"Some. I am still fine doing my own things. Reading, yoga.\"\n\nHer eyebrows lifted. \"You do yoga?\"\n\n\"Yes. It's good for the body, helps me focus.\"\n\n\"Wow. I'm learning so much about you tonight, Alexei.\"\n\nHe let go of her hand and slid his fingers through her hair. She'd pulled it all out of her braid and it hung loose over her shoulders. Her breath caught again as he shifted closer, sifting his fingers through her hair, again and again.\n\nThey fell silent as he did it, her eyes drifting closed and he watched her face, the way her soft lips parted, the blush that stayed in her cheeks.\n\n\"Alexei--\"\n\nHe smiled at the breathless quality of her voice. \"Hmm?\"\n\nHer eyes fluttered open, her pupils large and shining. His body answered with a less than subtle surge of heat to his groin.\n\n\"You wanted to talk tonight?\"\n\n\"We are talking.\"\n\n\"This is what you wanted to talk about? Our families, or lack thereof?\"\n\nWell, no. He'd wanted to talk about the two of them. How much he didn't want to spend any more time alone. Not when he could be right where he was, putting Zoe to bed after dinner and a movie, or sitting on the couch with Charlotte, touching her like he was now, sliding his hand down her neck to that fluttering pulse point under her chin.\n\nFast? Yes. Wrong, not at all.\n\n\"I wanted to talk, yes. About all of that.\"\n\n\"Okay.\"\n\nAlexei wondered if she realized she was leaning into him, into his hold, her face turned up as she sank against his chest. He opened his arms and hauled her closer, his arms going around her properly. Her warmth sank into his skin and he wanted to lick her all over, see if she was just as warm and soft everywhere.\n\n\"Charlotte.\" He put his hands on either side of her head, tilting it back. \"Krasotka.\"\n\nHer eyelids lifted again. \"What does that mean?\"\n\n\"Beautiful girl.\"",
        "And he kissed her.\n\nShe gasped into his mouth and he licked his way into hers, tasting her and the slight flavor of the tea she'd had after dinner. Her hands tangled in his shirt and her body shuddered as he slicked his tongue against hers, teasing her, tasting her over and over. He dropped one hand to her hip, dragging her right onto his lap, her soft curves molding to him in an instant, as if they were made to fit together.\n\nHe clamped his hand on the back of her head, her soft hair all around his fingers. He tilted her head one way, angling his kiss deeper, wanting more of her. She shifted against him, restless, her body hot and pliant in his hold.\n\nShe broke the kiss a second later, her hands pressing on his shoulders. Her gaze was foggy as she tilted her chin down to look at him and he knew he was half-wild for her. She licked her lips and he let out a groan, chasing that pink tongue with his.\n\n\"Alexei--\"\n\nAt her weak plea, he relented, stealing one more kiss before sliding his hands down her back to a slightly looser hold around her waist. Even as she moved back to better see his face, she swayed towards him. He grinned, letting her, content to let her kiss his lips, his cheek, his chin. She rubbed her cheek against his, making some little purring noise when his whiskers scratched her.\n\nJesus, if she liked it that much, he'd never shave again.\n\n\"Krasotka.\" He squeezed her waist, swallowing hard when she shivered in his arms. \"You don't want to get carried away?\" Really, he couldn't blame her. But, as much as he wanted to explore the whole licking every inch of her skin thing, Zoe was asleep thirty feet away.\n\n\"No, I suppose not.\" She pressed her forehead to his neck, right where Zoe usually set up camp as well.\n\nHe held her as he turned, reclining on the couch until she was sprawled out over his body. She let out a deep breath and relaxed on him. He kept his grasp firm around her with one arm holding her in place, and the other hand rubbing in long, slow strokes from her neck to her backside. Her perfect backside, to go with the perfect freckles and those perfect eyes. All of her was perfect, he was rapidly discovering, from her perfect smile to the perfect heart inside her.\n\nHe let out a breath and brushed a kiss over her head. \"We talked, krasotka.\"\n\nShe nuzzled his neck, a light laugh huffing over his skin. \"We did?\"\n\n\"Yes. You're mine now.\"\n\nAnother shiver, another squirm, before she let out a breath. She didn't respond but that was okay. He didn't need her to.\n\n\u2500\u2500\u2500\u2500\u2500\n\n\"Nothing happened?\"\n\nCharlotte's cheeks burned. \"Well, not nothing.\" There had been a whole lot of something.\n\nSarah arched her eyebrows at her and they both started giggling like schoolgirls at the same time.\n\n\"Okay, so some things happened, but not all the things.\" Sarah looked around even though they were alone in the store before opening on Saturday morning. The Saturday morning after Alexei had kissed her. Had claimed her. \"Did you want things to happen?\"\n\nCharlotte bit her lip but nodded. God, yes, she had wanted all the things to happen between her and Alexei. She'd been dying for it. On the other hand, she'd remained aware of their surroundings and the fact that Zoe was only separated from them by a door. She wouldn't have been able to fully let go. He had to have known that, or shared her thoughts on the matter, and had left her apartment after a half hour of snuggling on the couch.\n\n\"I see.\" Sarah drew herself up straight and gave Charlotte a mock-stern look. \"Do I need to have a birds and the bees talk with you?\"\n\nCharlotte burst out laughing. \"I think that ship has sailed, don't you?\"\n\nSarah snickered and nodded. \"Just checking. But buy condoms on your way home tonight, just in case.\"\n\n\"Sarah!\" Charlotte gasped and swatted her friend.\n\n\"What? I know you love Zoe, and I do too, but do you want your next kid to be an oopsie?\"\n\n\"No.\" Charlotte could admit that much. \"I don't know how we'll even find some time alone together. It's not like I can hang a sock on the doorknob so Zoe doesn't come out of her room.\"\n\nSarah laughed at that and Charlotte joined her, the levity good after the revelations of the night before. The fact remained, she had zero privacy as a single mom. She had no idea how to date as one either.\n\n\"Look, my offer to take Zoe for a sleepover stands. Just let me know when.\" Sarah winked and walked off to head to the storeroom.\n\nCharlotte watched her go, her mind spinning. Could she do that? Ask Sarah to take Zoe for a Sunday night sleepover just so she could have some alone-time with Alexei? Her entire body burned at the possibilities, even as she yo-yoed between desire for that intimacy and guilt that she'd shuffle her daughter aside to get it.\n\nThe rest of their workday passed by and Charlotte collected Zoe from the babysitter, Mabel, before they headed home. Zoe was full of conversation about everything she and the older lady had done over the day, including painting with watercolors.\n\n\"You liked that?\" Charlotte was amazed that Zoe sat still long enough to even try.\n\n\"Oh, yeah, it was so cool. The colors mushed together but it was pretty at the end.\"\n\nSmiling, Charlotte asked about what else they did. Zoe chattered on the rest of the way home and up to their apartment. Once inside, she tried to keep Zoe quiet, since she wasn't certain of Alexei's schedule. They hadn't worked their way around to discussing that. She knew he had a game tonight but not what he'd be doing right now.\n\n\"What should we bake today, sweetie?\" Charlotte hung her jacket up with Zoe's and walked to the kitchen sink to wash her hands.\n\n\"I want to make chocolate chip cookies.\"\n\n\"A classic. Good call. Go grab everything. I'm going to change.\"\n\n\"Okay.\" Zoe was already digging through the pantry.\n\nCharlotte smiled as she walked into her bedroom. Thank God the little girl loved baking with her. It was one of the few things she could get Zoe to focus on. She knew Alexei had a point about getting her into some sort of group activity or sport, and she wished with all her heart that she could afford it. Maybe she could look into charities or support programs for underprivileged kids. She hated to think she'd have to rely on that, but she'd do anything for Zoe, if it made her happy.\n\nShe changed into some cropped cotton pants and a long-sleeved shirt. It was getting cooler faster than ever now, and she hated the thought of having to drag out all her winter clothing. The previous year hadn't been kind to her and she only had a few nice heavier shirts and pants left in good condition. Another expense to add to the list.\n\nShe was just scooping her hair up to a pile on her head -- Sheesh, do I ever need a haircut. Another expense she couldn't afford right now-- when she heard Zoe let out an excited squeal followed by a familiar deep voice.\n\nCharlotte's heart stuttered in her chest and she stared at her reflection in the mirror, watching her own cheeks turn pink. Drawing in a deep breath, she walked out to join her daughter and Alexei in the kitchen.\n\n\"Mommy!\" Zoe was clutching Alexei's neck, secure in his big arms, and faced her mother with a grin. \"Can I show Grumpy how to make the cookies?\"\n\n\"Of course, sweetie. If he's got time and wants to learn.\" Charlotte managed to lift her eyes to Alexei's, her heart skipping around again, making her breathless. Well, that and the look in his eyes. Would she ever get used to it? \"Hi.\"\n\nHis lips quirked on one side and her insides went molten in a rush. She had to turn away from him, pressing one palm to her cheek, as Alexei set Zoe down, leaving the little girl to finish gathering the ingredients.\n\nGet a grip, girl!\n\nHe joined her at the counter where she was pulling out the stand mixer, and bent close. His fingers slid down her neck and around to cup the back of her head, forcing her to look up at him.\n\n\"Hi.\" The word was barely spoken before he brushed his lips over hers.\n\nShe sucked in a surprised breath and her hands came up to rest on his chest. Her eyes darted to the side where Zoe had her head buried behind the pantry door.\n\n\"Alexei--\" She didn't know what else to say but at the sound of his name, his lips came down on hers again, firmer this time. Her palms stopped pressing on his chest and lifted, curling over his shoulders, tugging him closer.\n\nHe turned his head his lips brushing over her cheek to her ear. \"We will talk later, after my game. Will you be up?\"\n\nHe wanted to 'talk' again? Or actually talk? As Charlotte pulled back to look into his face, she couldn't tell but she didn't care. She'd quickly come to love spending time with him. Had it really been only a week since he'd saved her bacon while she'd been ill?\n\n\"Even if I'm not, I'll wake up for you.\"\n\nSomething she couldn't identify glittered in his eyes and she shivered. He pressed a kiss to her forehead and stood back as Zoe arrived, shoving between them with a kitchen chair.\n\n\"No kissing while we make cookies.\"\n\nA strangled laugh escaped Charlotte and she nodded before bending to plant a loud kiss on Zoe's head. \"You got it, sweetie. Why don't you two do the work and I'll get some laundry started?\"\n\nAlexei's eyes widened when he glanced at her. She grinned and reached up to tap the little rack hanging from the cupboards above. \"Here's the recipe, but we've done these so many times, I think Zoe almost has it memorized.\"\n\nZoe nodded with enthusiasm, drawing Alexei's attention back to her.\n\nSo the afternoon passed in an unfamiliar cloud of domestic ease. Alexei made the cookies with Zoe, asking serious questions that Zoe answered with equal solemnity. Charlotte gathered up the laundry and stopped by to see how the cookies were progressing once or twice, but otherwise, Alexei and Zoe got on like gangbusters. Not that she should be surprised anymore.\n\nZoe had taken to Alexei from the first moment, and now that he was over his noise-aversion, he seemed happy to spend time with the energetic child.\n\nAt last, the final tray of cookies came out of the oven and Alexei reached over to shut the heat off.\n\n\"Mommy, we're finished!\" Zoe's voice reached Charlotte in Zoe's closet, where she was hanging some clean clothes. \"Come see!\"\n\nCharlotte walked out to see Zoe waving a flourishing hand over the racks of cooling cookies. \"Ta-da!\"\n\n\"Excellent work, you two.\" Charlotte grinned at her daughter and lifted her eyes to see Alexei smiling back. Good heavens, he was so handsome when he smiled.\n\n\"I don't mean to rush out, but I have to get going.\" Alexei jerked his thumb over his shoulder. \"Game night.\"\n\nZoe pouted as she turned and lifted her arms at him. He bent to pick her up, drawing her close for a tight hug. \"Thanks for helping.\"\n\n\"Thanks for teaching me, zaya.\" He pressed a kiss to her messy hair and set her back on her feet.\n\nCharlotte clutched her hands together in front of her, desperate to reach for him, to hold her arms out as easily as Zoe had done. A part of her wanted to hold back anyway, torn between nerves and concern over being too demonstrative and affectionate in front of Zoe. Alexei's lips twitched as he met her gaze, as if reading her mind. He gave her a nod and turned for the door.\n\n\"I'll see you later, krasotka.\"\n\n\"Have a good game.\" She walked to the door and held it open as he walked out to the hall. \"We'll watch and cheer for you, right, Zoe?\"\n\nZoe nodded, one arm wrapping around her mother's leg. \"You'll win for sure.\"\n\nAlexei's eyes softened as he looked down at Zoe. \"Of course.\"\n\nWith that, he turned and walked away. Charlotte let out a breath and backed into her apartment.\n\n\"Well, now. What should we do for dinner, sweetie?\"\n\n\"Pancakes!\"\n\nCharlotte laughed and shrugged. \"Why not.\"\n\nLater, they watched the game, sharing a small bowl of chocolate ice cream. Zoe was generous, holding up every other spoonful for Charlotte to taste. On screen, the Chicago Blackhawks were struggling against the Dallas Stars. The first period had already been slowed down by two penalties taken by Chicago players, and the score reflected the poor action, with Dallas leading 2-0.\n\n\"Where's Grumpy?\"\n\nCharlotte smiled. \"He's there, sweetie. They were showing him a second ago.\"\n\nAs she spoke, the camera panned the players milling around on the ice as a play was being reviewed. There he was, stoic Alexei Novikov, number 18 in big black digits on his back. She wondered if Zoe would like a jersey for her birthday or Christmas, not that Charlotte could afford one outright. Perhaps Alexei could get her a discount?\n\n\"There he is.\" Zoe sat up with a grin and pointed, spoon in hand. \"He looks mad.\"\n\nTo be fair, he usually looked mad. His default expression wasn't what one would call joyful. Charlotte nodded though. \"It's been a tough game. He might be mad.\"\n\nZoe nodded and finished the ice cream, forgetting to share any more with her mom. For another half hour, Zoe snuggled against Charlotte as the game resumed. At the intermission, Charlotte managed to get her up and get her teeth brushed. They both changed into their pajamas and resumed their positions on the couch for the second period. A few minutes later, Zoe was yawning and her eyes were blinking long and slow.\n\n\"All right, sweetie, time for bed.\" It was already a little later than Charlotte normally allowed Zoe to stay up.\n\n\"No! I want to keep watching!\"\n\nShe whined a bit longer and Charlotte relented. Five minutes later, Zoe was out cold against her side.\n\nSmiling, Charlotte stroked a gentle hand over her daughter's head as she continued to watch the game. At the next break in action, she carried Zoe to bed and tucked her in, the little girl not stirring a bit.\n\nBack on the couch, alone, Charlotte picked up her phone and checked the sound and vibration before getting comfortable under a blanket. She knew she wasn't likely to stay awake for long. On most nights, she was awake for maybe an hour after Zoe. The child wore her out most days, and Charlotte didn't want to miss Alexei if he called or texted. She wanted to talk to him. Or 'talk', whichever it was.\n\nSmiling, she reclined and rested the phone on her chest, where she was sure to hear and feel it when he called.\n\n\u2500\u2500\u2500\u2500\u2500\n\nAlexei didn't call Charlotte after the game ended. They'd gone all the way to a shoot out in the end, so it was beyond late when he got home to their building. He did walk up to her apartment though and tapped lightly on the door before unlocking and slipping inside. He saw Charlotte across the room immediately, asleep on the couch.\n\nHe approached on silent feet and crouched down beside her head, studying her face as she slept. Those perfect freckles. He wanted to kiss every one and he wanted to cuddle her close while she slept. He wanted everything with a suddenness that should shock him.\n\nGrowing up on his own, he'd never given much thought to having a family. He'd tried dating back when he'd first hit the big league, but nothing seemed right. He'd stuck with shallow hook-ups for a while then, and even that hadn't satisfied. It had been almost a year since he'd last gone home with someone for a one-night stand.\n\nNow he knew it was because of Charlotte and Zoe. He hadn't known them then, hadn't even lived in this building until this season, but his heart told him he'd been waiting for them all the same.\n\nWith one hand, he rubbed the medallion on his chest. It was Saint Christopher, a common enough religious medal that many wore. He'd been given it as a gift from the priest at the church he'd attended while living with his host family in Quebec as a teenager in the major junior hockey league. He wasn't Catholic, wasn't even Russian Orthodox, but he'd enjoyed his time going to church with his host family and had become friends, of a sort, with Father Francis. When he'd told the priest he'd been drafted into the league, the old man had given him the medal and wished him well, and told him not to stay alone forever.\n\nOver the years, he'd never taken it off. Not because he believed so strongly in anything, but because it had been the first gift someone had given him outside of the well-meaning host family, and the first as an adult. The only, really. He touched it to center himself at times when he was angry or frustrated, or confused. Now, he rubbed it because it seemed to him that Father Francis' wishes for him might have come true. At long last.\n\nAs he crouched there, rubbing the medal through his shirt, Charlotte stirred, rolling to one side, the phone on her chest slipping. It would have fallen to the floor, but Alexei caught it, his movement and light touch startling her awake.\n\n\"Alexei!\" She gasped and sat up halfway. \"When did you get here?\"\n\n\"A little while ago.\" Now that she was awake, his heart hammered hard against his ribs and the urge to hold her gripped him anew. He rose from his crouch and pulled her upright with him. \"Come, you need to sleep.\"\n\nHer cheeks turned rosy but she nodded and followed as he led her into her bedroom. There, he tucked her in and crouched down again to look her in the eye. She stared at him, her expression unreadable in the dim room and reached out one hand to touch his cheek. Without taking his eyes from hers, he turned his head to press a kiss to her palm, making her suck in a breath.\n\n\"I thought you wanted to talk.\"\n\nHe nodded and held her hand to his face, rubbing his coarse cheek back and forth over her soft skin. She shivered once, then again, so he kept it up. \"I do, but the game went so much later than usual.\"\n\nShe nodded, her eyes dark and focused on the point of contact between her palm and his face. \"Would you like to sleep here?\"\n\nThey hadn't done that since that one night when she hadn't been feeling well. In truth, he couldn't bring himself to sleep next to her without wanting to taste every inch of her skin and make her scream his name. Which they couldn't do. Not yet.\n\n\"I would.\" He leaned up and pressed his lips to hers in a light kiss. \"But I won't.\"\n\nShe let out a breath, her fingers curling around his chin. \"I understand.\"\n\n\"I will come tomorrow morning. Breakfast?\"\n\nShe nodded then stopped. \"Oh, well, I work tomorrow like usual, and have to leave by nine to get Zoe to the baby-sitter's before my shift.\"\n\n\"I can watch Zoe.\"\n\nShe smiled and shifted, touching their lips together again. He sucked in a breath at the sweet contact and held himself still, all but vibrating with the need to cover her body with his. \"I know you could, but don't you have practice or something?\"\n\nHe shrugged. \"There's an optional skate in the morning but I can stay here.\"\n\n\"Are you sure?\"\n\n\"Yes. Why pay a babysitter when I'm here?\"\n\nHer eyes flickered back and forth between his and he sensed she was about to say something more about it, but she nodded once. \"All right. I'll call her in the morning.\"\n\nHe nodded and stole another kiss before standing up. \"Text me when you're both awake tomorrow morning.\"\n\nAt that, Charlotte grinned. \"I'm sure you'll know without me telling you.\"\n\nHe chuckled. \"Yes, you're probably right. Sweet dreams, krasotka.\"\n\n\"Good night, Alexei.\"\n\nHe backed out of the room, every inch of him demanding he climb into bed beside her, hold her to his chest, touch her all over and kiss her until she sighed his name. Groaning softly, he closed her bedroom door and crossed to Zoe's room before leaving. The little girl was sprawled diagonally across her bed, her hair a dark red halo around her head in the glow from her unicorn nightlight.\n\nAlexei smiled and closed her door as well. Then he left their apartment, locking up behind him, and hurried downstairs where he had to take another shower. A cold one.\n\n\u2500\u2500\u2500\u2500\u2500\n\nThe next week passed by in a blissful blur for Charlotte. She woke each morning to find Zoe and Alexei in her kitchen or living room together. Often, they were getting breakfast ready, or eating it together, or watching a cartoon while they waited for her to rise. How Alexei knew when Zoe was awake, Charlotte wasn't sure, but she loved waking to find them happily spending time together, even on mornings following games.",
        "She asked him about it on the Thursday morning when Zoe was occupied with choosing something to wear for the day.\n\n\"She doesn't come to your door, does she?\"\n\nAlexei shook his head and glanced over his shoulder at Zoe's open doorway before moving closer to Charlotte. He'd just finished cleaning the dishes from breakfast and they leaned against the counter, finishing the last of their coffees.\n\n\"No. I'm awake early every day and I can hear when she uses the bathroom.\"\n\n\"Oh really?\" Charlotte sighed. \"Man, I had no idea so much sound carried. Why do you even live in this building?\"\n\nHe shrugged. \"I don't need some fancy mansion on the lake, or a penthouse downtown.\"\n\n\"But still. You could have bought a townhouse, or something newer, with better soundproofing.\"\n\n\"I don't need that.\" He reached out and brushed a lock of her hair behind her ear. As always, that brief contact had her shivering all over. His eyes narrowed and he bent his head, kissing her. It was short, like so many of their kisses, with Zoe awake and fumbling around in her bedroom.\n\n\"I grew up without a lot,\" Alexei said. \"Even now, I know I have the money to buy something big or expensive but I don't see the point when I'm hardly ever home.\"\n\nCharlotte nodded. That made sense, she supposed. \"I bet you regretted that the first time you heard us upstairs.\"\n\nHe shook his head. \"Never.\"\n\nThat wasn't true but his firm conviction made her shiver all over again. His cup landed on the counter with a click and he leaned into her, caging her to the counter with his arms on either side of her. She stared up at him, her breath coming hard and fast as her heart sped up.\n\n\"You will be awake after my game tonight.\"\n\n\"Are you asking or telling me?\"\n\nHe leaned over her, crowding her and sending all her nerve-endings into overdrive. His lips brushed her ear and she bit back a moan. Jeez, at this rate, if they ever got naked, she'd die of over-stimulation.\n\n\"I'm telling you, krasotka.\"\n\nThat reminded her of the night after she'd been sick, the one and only night he'd spent with her, in her bed. His one word commands had done the same thing to her then as his words did now.\n\n\"Kiss.\"\n\nJust like that one. She lifted her chin and obliged. It was easy when she wanted the same thing. It was all too brief though when they both heard a disgruntled noise from Zoe's bedroom.\n\n\"Mommy! These pants tore!\"\n\nCharlotte leaned back, panting, and Alexei lifted his head. He released her, stepping back as he shoved his hands through his hair. It was growing longer as well, over his ears, and down the back of his neck, but Charlotte loved it. It was so soft under her fingers since he didn't use any product, and gave him a sort of devil-may-care look sometimes that she found downright irresistible.\n\n\"Okay, sweetie. Then pick a different pair.\"\n\n\"But I like these ones.\"\n\nCharlotte recognized that tone and stifled a sigh as she walked to Zoe's bedroom to sort it out. An hour later, Zoe was at daycare, Alexei was at his practice, and Charlotte was at work.\n\nSarah noticed something was off with her mood but didn't bring it up until the quiet period before the lunch hour. With Ursula watching the front end, Sarah cornered Charlotte in the back room and asked if something had happened with Alexei.\n\n\"Did he do something?\"\n\nCharlotte frowned at her friend as she shifted a box around and sank onto it with a sigh. They didn't have an employee break room or anything of the sort, so most of them just found comfortable spots to plant it for breaks in the storeroom.\n\n\"What do you mean?\"\n\nSarah shrugged, shoving a couple more boxes together and sitting near Charlotte, facing her. \"I don't know. You don't know each other that well yet, do you?\"\n\nCharlotte was about to nod in agreement but stopped. She did know Alexei better than she thought. They didn't spend every waking moment amusing Zoe and there were all those evenings when he wasn't working where they'd stay up late talking in quiet tones. Or kissing. So much kissing. She loved kissing him.\n\n\"Okay.\" Sarah smirked and wiggled a finger in a circle in front of Charlotte's face. \"Does that face mean you know him in the biblical sense now?\"\n\nA giggle burst out of Charlotte and she shook her head, pressing her palms to her cheeks. \"No. We haven't done anything but make out.\"\n\n\"Oh man.\" Sarah got a dreamy look on her face. \"I could go for some hardcore over-the-clothes making out. Not enough men are into that. It's always a sprint for the finish line.\"\n\nIn Charlotte's very limited, and outdated, experience, that was true. \"Neither Alexei or I are comfortable with more, not yet. Not with Zoe around all the time.\"\n\n\"I told you I'm totally up for a sleepover now and again. Or why don't you see about putting her into daycare on Mondays occasionally?\"\n\nCharlotte cringed. \"Just so I can have sex with Alexei?\"\n\n\"Well, not just that. You could use the Mondays to figure out what courses you can do.\"\n\n\"Courses?\"\n\n\"Honey, I know you've been thinking about going back to school for over a year.\"\n\n\"Yeah, well, I don't have enough money for that.\"\n\n\"There could be assistance available, you know.\" Sarah leaned back, the box she'd chosen was big enough for her to lounge on her hands behind her. \"As a single mom, there could be countless programs you could sign up for.\"\n\n\"Yeah. I could use some extra time for that research.\" She rubbed her fingers together as she considered. \"But putting Zoe into daycare for an extra day would be an added cost as well.\"\n\n\"Why not ask Alexei to take her for a day if he's free?\"\n\n\"I couldn't do that!\" She shook her head. \"He's not my--\"\n\nSarah arched a dark brow. \"He's not what? Your husband? Boyfriend?\"\n\n\"Well. No.\" Charlotte blinked and stared into the distance behind Sarah. \"I don't think.\"\n\nThere had been that first night when he'd called her 'his', but did that mean they were in a relationship? Could a relationship consist of mornings and evenings together with her daughter, and quiet conversations after said daughter had gone to bed? Make out sessions that satisfied her more than her brief stint as a sexual being in college?\n\n\"Oh my God.\" Charlotte shifted her gaze to Sarah's face. \"He's my boyfriend.\"\n\nSarah snorted out a laugh. \"Great. Now that we've come to that realization, what can we do to move things along for the two of you?\"\n\nCharlotte laughed with her for a second before letting out a groan and rubbing her face. \"I still feel icky about getting rid of Zoe for a night just so I can sleep with Alexei.\"\n\n\"You think you're the only single parent out there, Char?\" Sarah sat upright and waved a hand in the air. \"Never mind being a single parent. Do you think you're the only one who saves the physical stuff and date nights for the times their kids are with someone else?\"\n\nCharlotte had no idea. She'd done everything with Zoe on her own until Sarah and Ursula had come into her life. She'd never even been involved in any sort of new mom classes or made friends after leaving college, and her old life, behind.\n\n\"Because, they do, trust me, girl.\" Sarah sighed and leaned forward, clasping her hand. \"Don't feel guilty for wanting something for yourself.\"\n\n\"It's not that I feel guilty.\" Not exactly. Charlotte couldn't quite put her finger on it.\n\n\"It's also okay to be scared at the prospect of more with Alexei.\"\n\n\"What? I'm not scared of him.\" And she wasn't. He wouldn't hurt a fly. She knew that now, with every fiber of her being.\n\n\"I don't mean that you're scared of him hurting you physically.\" Sarah let her hand go, the gentle smile on her face still. \"I know you've never really dated. Not since high school, and everyone knows that doesn't count.\"\n\nCharlotte giggled and nodded. Yeah, pretty sure her month as Joe Miller's girlfriend didn't count for anything except a lesson in how bad kissing could be.\n\n\"And I know you haven't felt like you can rely on anyone in a long time.\"\n\n\"I rely on people.\"\n\nSarah's look was pointed and Charlotte gave her a mock scowl.\n\n\"Look, honey, I get it. Your family tossed you out like yesterday's trash.\"\n\nWell, that was a blunt way of putting it. And unfortunately true.\n\n\"But don't assume Alexei would do the same. It wouldn't be fair to him, or you. Or Zoe.\"\n\n\"I know that. I don't assume he'd dump me if things got too complicated.\" She really didn't. She got the sense from him that he'd already jumped in with both feet and she was terrified of all it might mean. Some of what Sarah said was sinking in too. Was she frightened of being able to rely on someone new, or at least, scared of taking the chance?\n\n\"I need to talk to him, I guess.\"\n\nSarah nodded and glanced at the time on her phone. \"Yeah. Always talk. Never stop talking, that's the one solid piece of advice I can offer after all my time in the trenches.\"\n\nCharlotte smiled. \"Thanks, Sarah.\"\n\n\"And promise you'll think about me taking Zoe for a night. Whether you spend it with or without Alexei is up to you. It doesn't make you a bad mom for taking a night off.\"\n\nEyes stinging, Charlotte looked down at her hands. \"I promise, I'll think about it.\"\n\nLater, she made herself a full-caffeinated tea after dinner when she and Zoe settled in to watch the hockey game. Alexei had said she needed to be awake tonight and she would do everything she could to stay up.\n\nAfter Zoe was asleep, she did a quick, quiet clean of the place. She sorted the laundry to put in a load first thing in the morning, and folded the clean stuff from earlier. In between that, she finished her tea, cleaned the kitchen, and watched the rest of the game. It finished around nine-thirty, which she was thankful for. Not long after that, her phone buzzed with a text from Alexei, saying he was on his way.\n\nCharlotte: What, no shower?\n\nAlexei: I can shower at home. I want to see you more.\n\nCharlotte made a sound and hugged the phone to her chest, swooning sideways on her couch. Good lord, she was a goner for this man.\n\nA short while later, he was tapping at her door and she hurried over to let him in. As she locked the door, he crowded in behind her, burying his face in her hair and rubbing a hand around to her stomach.\n\nShe gasped when his bare palm connected with her skin and she turned in his hold, her fingers itching to sink into his hair.\n\n\"Your hair is damp.\"\n\n\"I showered downstairs.\"\n\nShe smiled and stroked her fingers through the brown locks, smoothing it over his ears. \"Must have been a quick shower.\"\n\n\"Just enough to not stink.\" His lips quirked as he spoke and she dropped her forehead to his chest, stifling a giggle. Close to his body, she inhaled, smelling soap and shampoo and whatever scent was simply him.\n\n\"You smell good.\"\n\nHe nuzzled her hair and made a low sound that sent a shiver skittering up her spine. \"So do you.\"\n\nThey stayed that way, wrapped around each other with her back still leaning against the locked door. His head turned and his lips brushed her ear. A hot breath skimmed her neck and she bit her lip to hold back any sound she might have made. His kiss landed on her ear lobe, then he slid his lips down her neck and back up.\n\nShe closed her eyes and dropped her head back, letting him. He rubbed his whiskers against her exposed throat and dragged his lips up to her chin. There, he hooked his thumb and forefinger around her jaw and pulled her chin down.\n\n\"Charlotte.\"\n\n\"Mmm?\" She blinked a few times, slow to focus on his face through the fog of her desire for him.\n\nHis dark eyes skimmed her face, touching on every inch of her blushing cheeks and curved lips. He kissed her, those eyes on hers still.\n\n\"I--\"\n\nShe blinked again and lifted a hand to rub her fingers over his cheek. \"Is everything okay?\"\n\nHe nodded and pulled her into his arms, right off her feet. She gasped but clung to him as he carried her through the apartment to her bedroom. He closed her door and dropped them both onto the bed in a tangle of limbs, his mouth on hers a second later.\n\nShe moaned into his mouth, slicking her tongue alongside his. Kissing yes, God, yes. She loved this. His kisses made her forget everything, from her own name to the self-consciousness she'd carried ever since getting pregnant. He loomed over her, one thick thigh sliding between her legs as he angled his lips over hers. He drank down every sound she made against his lips, nibbled on her bottom lip, and tasted every part of her.\n\n\"Charlotte--\"\n\nHer name rumbled against her neck as he moved lower, dragging hot, wet kisses over her skin. She shuddered and tangled her fingers in his hair as he licked a path to the notch at the bottom of her neck. Her shirt was rumpled there, old and threadbare in spots. But Alexei didn't care, or even seem to notice. His hands were busy working their way under the hem at her waist.\n\nHer back arched at his touch, her breath coming in quick, harsh pants. He kissed her again and again, silencing her little sounds and groaning in turn. His hands went around her, slid up her back, and down, sliding beneath the elastic waist of her pants. She jumped at the first touch of his hands on her ass and writhed further when the pressure of his touch grew.\n\nHe shoved a hand through her hair, holding her head still as he hovered over her, his other hand still flexing against her butt.\n\n\"Charlotte.\"\n\nShe tried to lift her head, to put their mouths back together, all of her overheating so fast. God, she wanted more, more of his kisses, more of his hard weight on her body, just-- more.\n\n\"You have to be quiet.\"\n\nShe whimpered and he slid his tongue alongside hers. Their lips stayed together for several long, drugged moments. He moved his hips, all of his hard arousal apparent in the way he ground against her.\n\n\"Quiet.\"\n\nThe single word was hard, low, and spoken against her lips. Charlotte bit her bottom lip as she managed to focus on his eyes, so dark with so much need. For her. Her head spun at the realization.\n\nShe dipped her chin once in a brief nod. His responding grin was feral and he dragged his teeth over her bottom lip before moving down. He kissed her neck, sucked here and there, and then before she could process, her shirt was off and his mouth was on her breasts. Her left nipple first, his wicked tongue circling and teasing before moving to the other side.\n\nHer mouth hung open but she obeyed his earlier order. She panted but didn't make another sound. She writhed under his heavy weight but didn't moan, not when he kissed a path down her belly, his rough thumbs sliding over her hips until they hooked in the waist of her pants. She didn't even make a sound as he dragged her pants and panties down her legs, his face pressing up between her thighs an instant later.\n\nHer fingers clenched in his hair as his tongue slid between her wet folds and she twisted, burying her face in a pillow.\n\nQuiet... quiet... she had to be quiet. Oh, what if he stopped? She'd die. Right there, she'd die in her bed if he ever stopped licking her, flicking his tongue over her and into her. Her fingers tightened and her thighs clamped around his head. His big hands took over, pressing her wide for him, his head bobbing as he worked her over. He didn't relent, licking and kissing and tasting her. Tasting every inch, every slick, soft part of her and he devoured it all.\n\nHeat and wild, fast release slammed into Charlotte and she opened her mouth against her pillow, her legs shaking in Alexei's sure grasp. He didn't stop, just opened his mouth over her, the flat of his tongue rubbing as she bucked against his lips.\n\nAt length, he eased off, releasing her legs to fall open around him. He licked his way back up her body, pausing to press warm, soft kisses to the stretch marks she knew were there low on her belly. Finally, finally, his lips were on hers again and even as she tasted herself on his tongue, she kissed him back, her trembling arms going around his neck.\n\n\"Alexei--\"\n\n\"Shh.\" He kissed her, slower and slower, until her heart stopped threatening to pound its way out of her chest. \"Sleep, lyubov moya.\"\n\nAnother new pet name to ask him about. Tomorrow maybe, when her limbs didn't feel like lead and when she could wrap her head around what he'd just done to her.\n\nIf she asked, would he do it again?"
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey romance",
        "hockey",
        "hockey player",
        "athlete",
        "sports",
        "hockey team",
        "single mom"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/beneath-the-ice-ch-03"
}