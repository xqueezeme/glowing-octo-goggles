{
    "title": "The Weekend Sleepover Ch. 02",
    "pages": [
        "While Mark and I spent the early afternoon in the house, I tried to ignore the beautiful bodies lying out by the pool. Eventually, Mark and I wandered out to the back yard and found four beautiful bodies lounging on the deck. My eyes were drawn to Jenny, as always, wearing a cute but skimpy pink bikini whose triangles of fabric barely contained her large, creamy breasts. Her tits were so huge they were spilling out the side of her top. Jenny was sitting on the steps of the pool talking quietly with Brenda. Carly was lounging in one of the pool chairs, laying on her stomach with her bikini top untied. Sam was actually swimming around the pool in a black one piece.\n\nWhen Sam saw Mark and I walk out onto the pool deck, she swam over to the edge of the pool. \"Mark,\" she called, \"I was thinking about going to the grocery store to pick up some food for dinner. Jenny wants to stay and get a little more sun, but I rather go now. Will you drive us?\"\n\nCarly raised her head and looked over at us. When she shifted up onto her elbows, I got a tantalizing look at a few more inches of her young, firm tit flesh, though she kept her nipples hidden under her. \"I kind of want to go get some groceries too,\" Carly added. \"Would you mind taking us?\"\n\n\"Not at all,\" Mark replied. \"We can leave whenever you two are ready.\"\n\n\"Really?!\" Jenny and I simultaneously responded. We looked at each other and smiled, sharing our surprise at Mark's sudden helpfulness.\n\n\"Sure, I don't mind,\" Mark replied, looking a little annoyed. \"You want to come, Kev?\"\n\nI thought about it for a second, looking at Jenny and Brenda watching me from the steps of the pool. \"Um, no need for all of us to go,\" I finally responded. \"I'll just stay here.\"\n\n\"Suit yourself,\" Mark responded.\n\nFive minutes later Mark was pulling out of the driveway in his mom's car, Carly sitting in the front seat next to him and Sam in the back. Brenda, Jenny and I were left lounging around the pool. Jenny and Brenda were sitting on the steps at the shallow end while I sat on the ledge near the deep end, dangling my legs in the water. I knew something was coming, and I was nervous. Looking over at Brenda and Jenny, looking magnificent in their bikinis, water glistening over all their smooth curves and exposed flesh, only made me more nervous.\n\n\"Alright horn dog,\" Brenda finally said, \"Take off those shorts and show Jenny what you're working with.\"\n\n\"You're not even going to buy me a drink first?\" I tried to joke. My voice rose to a high pitch at the end of my question, completely betraying my discomfort. \n\nBrenda just smiled at my obvious nervousness. She swam slowly over to my end of the pool, her soft tit flesh floating in the water in front of her as she slowly moved towards me. She flashed a sweet, reassuring smile, but I could see there was serious mischief in her sparkling blue eyes. \n\n\"I told you the deal I made, lover,\" she said softly. \"Just trust me and I promise you will completely enjoy this.\"\n\n\"Are you serious?\" I asked, glancing over at Jenny. The smile was gone from her face as she watched our exchange intently.\n\n\"Yes, now strip,\" Brenda ordered.\n\nI was very torn between laughing it off as a joke and walking away or taking off my shorts. After a moment's hesitation, I took a deep breath, stood on the pool deck, and dropped my shorts. In my near terrified state, my cock was a shriveled mess, but that was apparently not the point.\n\n\"SEE!\" Brenda exclaimed loudly, \"I TOLD you he was game.\" Jenny didn't say a word, her eyes were fixed to my cock. Brenda just kept talking. \"He may have been a virgin, which is a shame with that pretty dick of his, but he's willing to play. Go and sit on the steps next to Jenny, Kevin, we have to make this quick.\"\n\nAfter getting naked in front of my biggest high school crush, there was suddenly nothing I wouldn't do. In a haze, I walked around to the steps of the pool. I remember being acutely aware of the warm sunlight hitting my bare ass, but the whole rest of me was in a fog. Jenny shifted off the steps and into the water as I approached. I sat bare-assed on the warm pool ledge with my feet on the first step.\n\nBrenda had already swum back to the steps, and she swam up right between my legs. Beads of water drifted down the top of her exposed cleavage, droplets falling from the tips of her firm breasts. \"Jenny here has been complaining that she's not sure how to give a good blow job and she wants to learn,\" Brenda explained. \"I told her we had a willing test subject right here who would love to help me teach her.\"\n\n\"Seriously?!\" I blurted out.\n\n\"You'll be a good, impartial judge of her talents and help teach her how to improve her technique, right?\" Brenda asked.\n\nJenny finally spoke up. \"You don't have to do this if you don't want to,\" she said quietly.\n\n\"Are you kidding?\" I replied.\n\n\"Yeah dummy,\" Brenda said derisively, shooting her friend a look of contempt. \"What 18 year old wouldn't want a blowjob from two hot, young women?\"\n\n\"Wait, two...\" I said. I was confused. I thought Jenny was giving me a blowjob.\n\nBrenda's soft hand began stroking up and down my thigh. \"Yes, lover. Two,\" she cooed in a sultry voice. \"I'm going to show Jenny some tips, then she's going to give it a try. YOU are going to be a good, honest judge of her talents and NEVER tell anyone about this, right?\"\n\n\"Sounds good to me,\" I said, still in a haze and expecting I would wake up from this wonderful dream at any moment.\n\n\"You promise you won't ever say anything to anyone about this?\" Jenny asked very earnestly. I looked in her beautiful green eyes and realized she was serious. Not only was she not joking about blowing me, she really wanted to do this.\n\n\"I promise,\" I responded.\n\n\"Good,\" Brenda cooed, \"We can't waste time, the others will be back soon enough.\" Her hand slipped up my thigh, gently cupped my balls briefly with her palm, and gripped the base of my cock. Just looking at the two of them, half floating in the water, acres of skin exposed, beautiful faces staring intently at me, I started getting hard. Brenda noticed and the corner of her full lips bent upward in a slight, crooked smile. Brenda bent down and kissed the head of my cock with her soft lips, and then sucked my cock head between her lips. In an instant, my entire, half-hard member was inside her mouth and she was swirling her tongue around and around my shaft. She was obviously serious about not wasting time, and clearly talented at what she was doing. I could feel my teen age dick rapidly swelling inside of her mouth as she squeezed me by sucking in her cheeks. She released my meat with a loud pop, and in two heart beats she was left holding the shaft of my fully engorged member.\n\n\"Mmm, he liked that,\" she said to Jenny. Jenny moved a little closer, her eyes fixated on my pulsing dick. \"I've found guys like a variety of things,\" Brenda continued. \"You can tongue his shaft,\" which she proceeded to do, rubbing suggestively with her tongue along the ridge running under my cock. \"You can suck on the shaft,\" which she did, sucking with her lips at the base of my shaft and flicking the ridge with the tip of her tongue. It was like she was French kissing the underside of my dick, and it felt great. In fact, each tingle felt so good, like a little pulse of electricity shooting up my sensitive member, that I could feel myself getting very aroused. \"You can also just suck on the sensitive head of his cock,\" she continued before slipping the fat crown of my dick between her lips. Her cheeks sunk inward as she sucked and her tongue traced a fast circle around and around just the head of my dick. She released me with another pop before saying, \"Or you can just suck up and down his cock.\" She suck my now raging erection back into her mouth and boobed her head up and down my pole. She took a good four inches at a time, slithering her wet tongue back and forth over the underside of my shaft as her head moved up and down. She paused to say, \"You should also used your hand with your mouth, so you can cover more of his dick.\" She proceeded to demonstrate, Jenny observing just inches away with rapt attention. Brenda's soft fingers closed around my shaft tightly while her mouth sucked the head of my meat back between her lips. Her fingers slid down over my wet pole and squeezed slightly and she brought them back up. Her tongue danced wetly against the underside of my shaft, and I delighted in the feeling of her soft cheeks squeezing against the top of my pole as her mouth went up and down. I realized with alarm that I was getting way too close to cumming.\n\n\"But the best thing to do,\" Brenda continued after releasing my member, \"Is to switch it up. Put in a lot of variety so it never gets boring.\" Jenny nodded like she understood. Brenda went back down on my cock, her lips kissing the underside of my sensitive shaft while her hand pumped the fat knob at its tip. Then she sucked just the head of my cock into her hot mouth and began swirling the tip with the full flat length of her tongue. I gritted my teeth, desperately trying to hold back the intense pleasure I felt churning through my balls. Then she plunged her mouth down my rod, squeezing me with her soft hand while her tongue slid back and forth against the underside of my pole. \n\n\"Oh shit,\" I blurted out softly. \"Oh no, oh no.\"\n\nI couldn't hold it back anymore, this was the best my cock had ever felt and the pleasure was bursting out of the root of my member. I thought Brenda would be mad, but she looked up into my eyes and immediately realized what was happening. Instead of stopping, she bore down on me, sucking intensely with her mouth and pumping furiously with her hand. On top of it all, the sight before me was amazing. Beautiful Jenny, her large breasts glistening in the pool, barely contained in her bikini top. And working my rod was pretty Brenda, red hair tied back in a pony tail, breasts jiggling beneath her as her head and hand bobbed furiously up and down my cock. \n\nI lost all control and came with a vengeance. The cum burst from my cock, pulsating in a hot stream of ecstasy into Brenda's eager, sucking mouth. Brenda swallowed it all as I pumped my sticky load between her lips, her tongue continuing to milk my member as each spurt blew from my tip and was gobbled down her throat.\n\nAs the orgasm faded, I suddenly became aware that my legs were stiffly straight, my toes curled on the top of the water while my fingers gripped the edge of the pool. I let myself relax and felt slightly ashamed as I looked at Jenny. She just smiled her sweet smile back at me.\n\n\"I was afraid that might happen,\" Brenda said with a smile, clearly not upset with me.\n\n\"I'm sorry!\" I stammered. \"It was just my first time...\"\n\n\"Oh honey!\" Brenda responded. Jenny covered her mouth to stifle a laugh. \"If I had known it was your first time I would have given you a good and proper blow. You should have said something.\"\n\nI had no idea what I would have said, or would have been willing to say that didn't make me sound like an inexperienced loser. Brenda excused herself to go get something to drink from the kitchen. I assumed she wanted to get the taste of cum out of her mouth. That left me and Jenny sitting awkwardly together at the pool. It was even more awkward considering I was naked. At one point Jenny looked like she was about to say something, but then she stopped. We ended up sitting in silence while we waited for Brenda to return.\n\nWhen Brenda came back outside, she led Jenny out of the water. I was treated to the sight of their firm young bodies, water dripping from their smooth curves, as they stood on the pool deck. Jenny's firm, round ass, barely concealed by her bikini bottom, looked particularly attractive in the late afternoon sunlight. \n\nWithout any warning, Brenda pulled at the string behind Jenny's neck, the one securing her top. Jenny caught her top with her arm before it could fall away and she gave Brenda a shocked and unhappy look.\n\n\"What?\" Brenda said, casually untying the bow in the back of her bikini. \"Kevin here's been naked for a while now. It would be rude if we just kept our clothes on. It's time to strip.\" Brenda finished untying her top as she finished her sentence. She casually tossed her top away, exposing her round, young breasts. They weren't as big as Jenny's but they were full and firm and capped by light pink nipples. While I was mesmerized by the beads of water dripping down the valley between her exposed cleavage, Brenda had already untied her bikini bottom. \n\nJenny shot me an uncertain look, still holding her top to her chest. \"You promise not to laugh?\" she asked.\n\n\"LAUGH?!\" I responded incredulously. \"I happily promise I won't laugh. I can't promise I won't cum again immediately, or pass out when all the blood rushes from me head to my penis.\"\n\nThat earned an uneasy laugh from Jenny. She had a nice, sweet laugh, and the tops of her firm breasts jiggled seductively as she chuckled. After one more uneasy glance, Jenny removed her arm and her top fell away. For the first time, the objects of much of my teenage obsessions and the subjects of many a masturbation session came into view. They were magnificent, and I couldn't help but stare. Jenny's breasts were big globes, almost perfectly round, topped by dark pink nipples. Her tit flesh was completely smooth, with a porcelain sheen in the afternoon sunlight. I barely noticed as she untied the rest of her top, noting that her breasts had almost no sag and a deep valley between them. I've seen good fake tits in pornos, and I swear the surgeons who made those were aiming to copy the natural pair Jenny had that day at nineteen years old.\n\n\"You see how his jaw just dropped,\" Brenda teased, \"He loves them!\"\n\nJenny still looked uncertain as she removed her bikini bottom, but as Brenda was already completely naked, that too soon fell away. Brenda had a little strip of trimmed red hair running upwards from her pussy, but I was a little surprised to see Jenny was completely clean shaven. Watching me ogle her body, Jenny couldn't help but keep one arm half covering her breast while her other hand half covered her pussy.\n\n\"Now what?\" Jenny asked.\n\n\"Now we give Kevin here some tips on how to eat a pussy,\" Brenda responded, turning her gaze from Jenny to me. \"It's only fair, right? Jenny learns some tips on how to give a great blowjob and you have fun. So now you can practice those pussy eating skills and Jenny can have fun.\"\n\n\"Sure,\" I replied somewhat uncertainly, \"sounds right to me.\"\n\n\"Brenda, I don't know...\" Jenny began.\n\n\"Oh shut up, Jenny,\" Brenda cut her off. \"You've seen us having sex and you just watched me blow him. It's way too late for modesty, AND this is what you told me you wanted. Now sit down on the edge of the pool there.\" Jenny hesitated for just a moment but eventually complied. I was intrigued by the comment that Jenny said she wanted this, but I quickly forgot about that when Jenny's hands dropped away from her body and I was treated to a close up view of her completely naked womanhood. Her smooth, perky breasts, pink nipples, and even her clean shaven, puffy pink pussy lips looked magnificent to my young eyes. Almost unconsciously, I slowly leaned forward, moving my head between Jenny's legs for a better look.\n\n\"See,\" Brenda said, \"He wants to try this. Go ahead and give that pussy a good lick.\" Brenda turned first to Jenny and said, \"Trust me, he's good. You'll love this.\" Then she turned to me and said, \"Jenny here has never had a guy go down on her. Can you believe that? What assholes.\"\n\nI had dreamed of this moment. Like I said, I had read a lot about how to properly eat a pussy, and I had often pictured it with Jenny. Now I was actually going to get to try it. I looked up at her from between her legs and our eyes met. She was chewing on her plump bottom lip with uncertainty, but I also saw the eager anticipation in her sparkling green eyes. \n\nTentatively, I stuck my tongue out and ran the flat tip up one of Jenny's bare pussy lips. All the stories I had read had led me to expect that Jenny's womanhood would taste strange, perhaps like a fish. The only thing I could taste was a slight essence of chlorine from the pool. Emboldened by the lack of a repugnant taste, I more eagerly licked up Jenny's other thigh and tasted her pussy lips on that side. Jenny let out a big sigh as my tongue brushed against the opening of her sex.\n\n\"Poor Jenny, I can't believe this is her first time,\" Brenda teased.\n\nUsing my tongue, I drew her pussy lips into my mouth and sucked up and down her folds gently. She sighed contentedly again. With a flicking motion, I traced my way up over her hole and found the hard nub I was looking for beneath a fold of flesh. Jenny gasped audibly. I flicked at her clit with the tip of my tongue and Jenny's legs tensed around my head. It felt weird, half floating in the water, to feel her thighs close around me, but I was living out one of my greatest fantasies. Jenny began to slide her hips back and forth just a little as my tongue softly lashed against her clit.\n\n\"Unlike most men, Kevin here knows how to find the clitoris,\" Brenda said to no one in particular. \"I'm impressed. He's not going at it too strong, is he?\"\n\nJenny ran her fingers through my hair while I began to swirl my tongue around and around her sensitive spot. \"Ohhh. You're doing a great job Cookie,\" she moaned.\n\nCookie. She hadn't called me that in almost a decade, half my life ago. I kept swirling the tip of my wet tongue around her hard clit, sometimes alternating with a lazy flicking motion directly against her little bud, while I thought about that nickname. She and her sisters had called me Kevin Cookie, for my love of her mom's cookies, when I was nine. I could eat two dozen of those delicious treats in one sitting, and the nickname eventually became just Cookie, although Jenny was the only one who stuck with it. I had an even better delicious treat in front of my face at the moment, and I carefully sucked her clit between my soft lips. \n\nAs I sucked softly on her sensitive bud while flicking at the trapped nub with my tongue, Jenny's reaction was immediate. \"Oh shit!\" she moaned while I suckled on her clit. \"Holy shit that feels good.\" Her hand that had been running through my hair began pulling my face into her pussy. I kept up the steady gentle sucking pressure, using my lips to suck her clit into my mouth while rubbing strongly and steadily against the nub with my strong tongue. \"Ohhh God,\" she moaned, \"Just like that. Don't stop... don't stop.\"\n\nBrenda was suddenly next to me in the pool, speaking softly to me. \"Don't go any harder or any faster,\" she instructed. \"Just keep up that steady, gentle pressure.\"\n\nI was dubious about her advice, but I dutifully obeyed. My mouth suckled gently on Jenny's clit while my insistent tongue kept a steady beat of rubbing against her clit. I didn't think it would be enough pressure to get her off, but to my surprise Jenny was quickly mashing my head against her now dripping wet pussy with both of her hands. \"Oh fuck, I'm going to cum. I'm going to cum... just like that... PLEASE! YES!\" It was getting hard to breath as she smashed my face against her crotch, but I made sure to steadily suck and rub her clit. I felt her smooth thighs tense around me, squeezing my head as she yelled, \"FUCK! CUMMMMMINGGG!\" She gritted her teeth as she squealed, my tongue never missing a beat against her sensitive spot despite her thrashing and pulling. Jenny's body shook for a few seconds, but I could barely tell, buried as I was between her legs. Finally, her soft hands pushed my head roughly away.\n\nAs I fell back into the water, my eyes drank in the sight of her beautiful body. The pale skin of her chest was clearly flushed, and her firm, round breasts rose and fell with her chest as she rapidly sucked in air. Her blond hair fell loosely behind her, framing her glistening naked body and young, smooth flesh. Her head had been back and her eyes closed, but as she calmed down, her eyes opened and she looked down at me. At first those eyes were full of lust and happiness and arousal. But as a smile spread across her pretty face, the sweet mischievous green eyes I had known almost all my life returned. ",
        "\"Wow, I'm impressed,\" Brenda stated. \"The virgin knows what he's doing... or maybe he's not the only person here with a quick trigger.\" Brenda seemed to be considering something for a moment. Then she sat up on the edge of the pool and said, \"Come over here lover and let me try out that talented tongue.\"\n\nBrenda placed her hands on my shoulders as I swam closer, guiding my mouth to her pussy. I was soon licking her folds, enjoying the feeling of her fingers running through my hair. I teased her clit with light licks, using only the tip of my tongue, until she grew impatient and began pulling my head towards her. Then I was flicking and sucking her in earnest. I suckled on her clit softly with my lips, flicking the trapped bud with my tongue. I drew my head back and swirled my wet tongue around her clit, tracing rapid circles around her sensitive spot. I flicked gently but rapidly with the tip of my tongue against her hard bud. Like Jenny, Brenda seemed to like it most when I simultaneously suckled her clit while rubbing it firmly with my tongue. Brenda was soon bucking her hips against me face. I didn't realize she was close until she squealed, \"Oh YESSSSSS!\" and then her legs were also shaking against the side of my head. As she came, I looked up and watched her smooth breasts jiggle as her body shook. Her eyes were closed and her mouth formed an \"O,\" until she gently pushed my mouth off her pussy. \n\n\"Whew,\" she said as she caught her breath, \"He IS good.\" I beamed so much at the compliment that I could almost feel my face glowing. \n\n\"Looks like Kev enjoyed that lesson in pussy eating,\" Jenny said, looking at me in the water. I realized Jenny wasn't looking at my face, and became acutely aware that I was naked in the pool and my cock was half hard once again. \n\nBrenda had floated back down to Earth after her orgasm and said, \"Should we try those cock sucking lessons again?\"\n\n\"What do you think Cookie?\" Jenny asked.\n\n\"Sure,\" I said, trying to stifle the huge grin breaking out on my face.\n\nI eased myself out of the water and onto the steps. My cock was slowly growing, aided by the sight of two beautiful young women on either side of me. Brenda's chest was still flushed, highlighting her smooth breasts. Looking at those globes, it seemed they were just big enough to fill my palm. Curious, I reached out and wrapped a hand around one of Brenda's firm melons, and Brenda smiled as my wet palm closed over her tit flesh. \"Mmm, you like that,\" she said. \n\nI eased myself onto the ledge of the pool and the two women took my place kneeling on the steps in the water. I had assumed it would be Brenda who resumed her lesson, but it was was Jenny whose soft hand reached out for my swelling rod. She firmly grasped my shaft with her thin fingers as her grey-green eyes met mine.\n\n\"Let me see if I can replicate what you loved so much..\" Jenny mused, just before her soft lips closed over the head of my dick.\n\nHer full lips kissed the crown of my cock before she opened her mouth and swallowed the head of my shaft. Her tongue circled my tip and then her soft slips were sliding down the length of my meat. My cock swelled to full size as her tongue tickled the underside of my shaft. Jenny's head bobbed up and down, up and down on my pole as I watched her blond hair fall across my lap. I could see her cheeks sucking against my shaft as I felt her hot, wet mouth tickling my pole. \n\nBrenda eased me onto my back and guided my hand back to her breast. As Jenny paused to suckle on the crown of my cock, my wet, slippery fingers found Brenda's nipples and pinched her tit gently. Brenda gasped as I rolled her stiffening nipple between my fingers. Jenny looked up to see what was happening, and my cock slipped free of her mouth. Jenny lapped with her tongue at the underside of my dick while she watched me play with Brenda's firm breast. I glanced down and thought I caught a hint of jealousy in Jenny's look, before she swallowed my rod again and her mouth slid down over my pole. \n\nI leaned my head back again and Brenda crawled so her chest was over my face. I sucked her dangling nipple between my lips while Jenny's lips slid up and down my cock. Brenda pressed her firm tit flesh against my face while I felt Jenny's blond hair tickling my thighs. Jenny's tongue danced against the underside of my shaft. As I sucked on Brenda's tit, I could feel Jenny's slippery tongue bringing me close to another quick orgasm. I groaned a long, low groan.\n\n\"Wait,\" Brenda said, pulling her breast away from my face. Jenny released my cock from between her lips and exchanged hushed, quiet words with Brenda. I looked up and thought I saw them changing places. But instead of Jenny's breasts, it was her bare pussy that descended over my face. Jenny leaned down and I could feel her large, smooth breasts pressing against my abdomen. \n\n\"Let's see if you two both paid attention,\" said Brenda.\n\nUnderstanding, I flicked upwards with my tongue, tickling the top of Jenny's slit. She tensed a little around me, but her mouth again descended over my cock and I felt her hot, wet mouth again engulf my fully erect member. I couldn't see anything beyond Jenny's round bottom, but I could feel her soft lips sliding up and down my cock skin. I also felt a little electric spark of pleasure as Brenda began to gently tongue my balls. I did my best to suck Jenny's hard little clit between my lips and rub it firmly with my tongue. Jenny moaned in response, I could feel her moan flow through her chest to my chest. Her large breasts were now smashed against my mid section as her sucking mouth bore down on my cock and my tongue danced and flicked against her clit. My face was being coated by Jenny's juices as I suckled on her clit, but I realized I wasn't going to be able to hold back the orgasm burning through my loins. As Jenny's tongue again swirled around my cock head, I released her clit and tried to get her to slow down.\n\n\"Oh Jenny, wait,\" I managed between her thighs, \"I'm going to cum.\"\n\nShe released my cock from between her wet lips only long enough to say, \"Good. Go ahead, give me that cum Kevin.\"\n\nHer hand joined her mouth and now both her lips and her closed fist were pumping up and down my slippery shaft. Jenny began to moan continuously, making delicious sex sounds like she was about to cum. The noises caused constant vibrations that tickled my cock as her hand and mouth worked up and down my engorged pole. Brenda continued gently lapping at my sensitive balls with her tongue, causing little sparks of pleasure every time she touched me there.\n\n\"Oh shit!\" I cried out as I felt the white hot heat of my orgasm boil up from my balls. \"I'm CUMMMMINNNGG!\" I warned. This orgasm felt sharper and hotter as it exploded out of my loins and up through my shaft. I felt my cock spurt a hot load of cum straight into Jenny's mouth as my toes curled. Brenda never stopped tonguing my balls as I began to shake. Spurt after spurt of hot cum flew up my cock as I cried out, Jenny's tongue never stopped sliding back and forth across my cock head. \n\n\"Mmmm, good boy,\" Brenda encouraged as I lay there in the afterglow of my orgasm. Jenny gamely swallowed the load I had pumped between her lips and cleaned my deflating cock with her fingers.\n\nI was just about to resume eating Jenny's pussy when we heard the garage door begin to go up.\n\n\"Oh shit!!\" Jenny and I blurted out simultaneously. Our friends had returned. Jenny vaulted off of my as she sprang to her feet and a comical scene ensued. I found my shorts quick enough and scrambled awkwardly to get my legs into them. Brenda found her bikini bottom and top and struggled to rapidly re-tie her strings. Jenny found her bottom and managed to get it on, but couldn't find her top. By the time Jenny found her top, we heard the car doors closing in the garage. Brenda moved over to try to help Jenny get her top on, but Jenny brushed her off.\n\n\"It's too late!\" Jenny warned. Jenny made a dash for the back door of the house, leaving me with an image of her large, creamy breasts bouncing up and down as she ran. She disappeared topless into the back door, Brenda following closely behind her. I tried to look casual by the pool, but after a minute decided to walk to the back door. Mark was in the kitchen with Carly, unpacking groceries.\n\n\"You guys have fun while we were gone,\" Carly asked sweetly?\n\n\"Yup, just hung out by the pool,\" I replied in a half lie.\n\n----------\n\nIt was almost an hour before I saw Jenny again. I had showered in Mark's room and she had apparently also decided to take a shower. The late summer sun was beginning to set as she walked into the living room. Jenny was wearing a T-shirt and sweat pants and her face lit up in a smile when she found me sitting on the couch. She plopped down right next to me.\n\n\"Hey, thanks for earlier,\" I whispered, trying to sound grateful but casual. \n\nHer smiled broadened as she replied, \"Well thank you too. I hope you had fun, I know I enjoyed it.\"\n\n\"Of course I did,\" replied, returning her smile.\n\nWe sat there in silence for a moment before she began. \"I think something is going on between Mark and Carly,\" Jenny whispered.\n\n\"I think so too,\" I responded.\n\n\"They're in the back by the pool right now.\"\n\n\"You want to go spy on them?\" I asked.\n\n\"Sure, but I think they'd see us. They're hiding from the kitchen window.\"\n\n\"Come with me,\" I said. I tentatively closed my fingers around Jenny's hand. To my relief, her delicate fingers closed around mine and she followed my lead. I couldn't believe I was holding Jenny's hand while we ran through her house and up to Mark's bedroom. She gave me a questioning look when I closed his door behind us, but I continued on and led her into the bathroom.\n\nMy hands dropped to her waist, and I positioned her in front of the window. By standing just behind her, I could see over her shoulder. Sure enough, Mark and Carly were below us. They were standing near the side of the house, where they could be seen from Mark's mother's bedroom, but not from the kitchen window. But looking straight down, Jenny and I could see them. \n\nMark and Carly were playfully slapping each other on the shoulder, until Mark drew Carly into a tight embrace. Carly hid her face in Mark's shoulder, but Mark nuzzled the back of her head.\n\nJenny turned her head up towards me and whispered in my ear, \"I knew it!\" Her lips were deliciously close to my neck. Carly leaned her head back and smiled, and Mark dove right in for a kiss. \n\n\"How did you know about this view?\" Jenny asked.\n\n\"You didn't?\" I replied.\n\n\"I've never been in Mark's bathroom. Wait a minute, how DID you know about this view?\"\n\n\"I pee standing up, I've always known about this view.\"\n\n\"Have you looked out this window before to watch what was happening at the pool?\" she asked, her soft lips brushing against my ear.\n\n\".... maybe.\"\n\nMark and Carly were now making out, but Jenny wasn't looking at them anymore. \"What else have you seen?\" she asked.\n\n\"Your brother is totally making out with Carly. We were right.\"\n\n\"Ewww,\" Jenny responded, \"I don't want to see my brother making out. I want to know what else you watched out this window.\"\n\n\"...um...\"\n\n\"Did you ever watch me and Mandy out this window?\"\n\n\"Well... not Mandy.\" That earned me a soft punch in the arm. \n\n\"You watched me out this window?\" Jenny asked somewhat breathless. She bent at the waist a little, pushing her firm ass against my front. \"You watched me in my swimsuits by the pool?\"\n\n\"Yes,\" I admitted.\n\n\"You watched me from this window, in this bathroom? Did you touch yourself while you watched me?\" My hands slid around Jenny's waist, resting on her hips as she ground her ass softly against me.\n\n\"Yes.\"\n\n\"Did you ever get off watching me?\"\n\n\"Yes.\"\n\nCarly and Mark slipped back into the house as I began grinding my growing cock against Jenny's firm backside. While one hand slid under the waistband of her sweat pants and down between her legs, my other slid up her body and cupped her full breast through her t-shirt. I marvelled at her full breasts, the smooth skin over flowing my fingers. My other hand was under her panties before I even realized it, and my fingertips brushed the lips of her wet sex. She was steamy hot between her legs and dripping with moisture. \n\n\"You got to cum twice this afternoon,\" she said as my fingertip brushed up and down her pussy lips, collecting her wetness. \"I only came once and then you teased me with that tongue of yours. You owe me an orgasm.\" \n\n\"Sounds fair to me,\" I replied, my one hand feeling for her hardening nipple through her shirt and rubbing at it with my rough palm. My other hand found the hard nub of her clit and my finger tip began to trace slow circles around it. She sighed as I teased her most sensitive spot.\n\n\"Did you watch me while you came?\" Jenny asked, her ass grinding hard against my growing bulge. \"What were you thinking? Were you imagining we were fucking?\"\n\n\"I came so hard from watching you,\" I breathed into her ear, my finger rubbing back and forth across her clit. She moaned loudly in response. \"I thought about how soft your lips might feel if I kissed you, how firm your ass might feel in my hands.\" I began rubbing upwards against her clit with just the tip of my finger while my other hand mauled her big, firm breast. \"I imagined how your nipples might taste between my lips, or how your mouth would feel around my cock.\"\n\n\"Oh really?\" Jenny moaned, her eyes closed now as I rubbed a steady beat against her sensitive little nub.\n\n\"I imagined what it would be like to fuck you, to feel you wrap those legs tightly around me as I plowed my cock in and out of you,\" I whispered in her ear, my lips brushing the side of her face. My finger circled and circled her nub. \"I imagined making you cum on my hard cock. I imagined wrapping these big breasts of yours around my dick and fucking them until I squirted all over your face.\"\n\n\"Oh!\" she moaned, \"Oh really?!\" I had her pinned against the window sill, my cock grinding into her from behind while my finger ground against her clit from her front.\"\n\n\"I came all over this window imagining what it would feel like to make you cum, Jenny,\" I whispered, sucking lightly on the soft side of her neck. She began to whimper in response.\n\n\"I want to cum for you, Kevin,\"\n\n\"Then cum for me,\" I whispered in her ear. \"Cum for me, Jenny.\" My finger kept its insistent beat, rubbing against her wet clit, while I nibbled gently on her ear.\n\n\"I'm going to cum...\" she whispered, her voice full of arousal.\n\n\"Cum for me, Jenny. Feel my fingers all over your body like my eyes were all over your body and cum,\" I breathed, grinding hard against her firm ass. Her hips bore down hard against my fingers.\n\n\"Cummmmming!!\" she cried out as quietly as possible. I held her close and felt her shake as she came, her ass rubbing against my crotch, her chest heaving up and down while I held her breast in my hand. And the whole time my finger kept its steady motion against her clit. Her legs shook against mine and her hands braced against the window sill while I both held her up against me and kept her cumming hard. Finally, her hand reached down and stopped my movements between her legs.\n\nI backed away and let her adjust her clothing until she was satisfied she looked right. When her green eyes met mine again, she could see there was a question on my face. \"What?\" she asked.\n\n\"You aren't upset, are you, that I was looking at you like a peeping Tom from this window?\"\n\nShe chuckled softly and said, \"Why do you think I always insisted on wearing tiny little bikinis when you were over here? I barely wore any clothes any time you came over, I think my mom even caught on to what I was doing. I don't wear bikinis all the time, you know. I knew you loved seeing me in them.\"\n\n\"Really?\" I asked stupidly.\n\n\"Yes,\" she replied, embracing me in a soft hug. \"Boys are so stupid. Do you think cheerleaders really practice their routines in swimsuits? And why do guys always assume that they are the only ones dealing with raging hormones and being desperately horny?\" She kissed me softly on the lips.\n\n\"We better get going, no telling where Mark went,\" I said. \n\nHer face registered surprise. \"You sure?\" she asked. \"You don't want me to take care of this thing in your pants?\" She ground her hips softly against my hard on. \n\n\"We're even now, remember?\" I said with a smile.\n\n\"Fair enough.\" She took me into her arms and kissed me lightly on my cheek. \"Thanks sweetheart,\" she said. \"That was AMAZING.\"\n\nWe slipped out of the bathroom and out of Mark's room without anyone noticing we had gone. "
    ],
    "authorname": "spaldan",
    "tags": [
        "outdoor sex",
        "sex in pool"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-weekend-sleepover-ch-02"
}