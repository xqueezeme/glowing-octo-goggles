{
    "title": "Like a Daughter to Me Ch. 02",
    "pages": [
        " Disclaimer: All the usual, all the people portrayed herein are at least 18 years of age at the time of portrayed sexual congress, blah blah blah bling bling blah. If you're looking for something younger, you're using the wrong interwebz. Scram.\n\nChapter 2- It's All Fun And Board Games...\n\n\"Yes, I'll happily attend,\" I said, nodding as I spoke on my cellphone while walking into the house. \"Any army in particular you want me to bring? Hm, everyone else seems to be Smurfs and Bugs, eh? Okay, I've got just the thing to living the party up. See you Sunday!\"\n\nI ended the call while standing in my living room. Anita happened to be sitting deep inside the giant beanbag chair, playing some Bejeweled knockoff game on her phone. She glanced up at me, her expression sour.\n\n\"I was hoping based on your conversation that you were getting a social life, but then it turns out you're just playing that dumb-ass tabletop thing with the plastic figures of bugs and guys with guns.\"\n\n\"Sorry, mom,\" I sighed, rolling my eyes. \"If it makes you feel any better, it's a tournament at the store, so I won't be hosting here.\"\n\n\"Damn right, Sundays are good days for me, lots of people on my viewer list,\" she announced airily. Anita had eventually confirmed that she was indeed a cam girl and she made decent money doing it. I could totally understand why, she had that 'skinny-but-big-titted' scene girl thing going on, with all the dyed black hair and weird makeup and snakebite piercings. \"You're gonna go play toy soldiers when you could be watching me.\"\n\n\"I'm already fucking you for free, I don't need to pay to watch you get naked on cam.\" I pointed out.\n\n\"We'll see about that.\" Anita sniffed as she clambered out of the chair and tried to walk by me, looking aloof. Unfortunately, I lived by the code of the Astartes, which says one does not diss the God-Emperor or the hobby and not pay the price. I reached over and caught her by the middle as she moved past me, hefting her up into the air and carrying her back to the lovesac. She squealed and struggled, but she couldn't get away, I was a lot bigger than her.\n\n\"Gnnnnn, let me go!\" she hissed, struggling to get away, but not too hard. This was a game we played and both enjoyed. \"I've gotta get ready to- ohhhhhhhhhh, fuck!\"\n\nI had pushed her down into the plush seating and slid my hand up the skirt she was wearing to find her pussy. Predictably not wearing underwear, she moaned as I began massaging her netherlips, which got very wet, very quickly.\n\n\"I'd say I'm amazed that you never seem to learn your lesson, but I think you secretly don't want to,\" I said, pinning her with one hand while the other molested her. She kept squirming and pretending to try and escape, but she was also panting and wiggling back against my hand that was under her skirt. \"Anything you'd care to admit?\"\n\nNot surprisingly, she only grunted and continued squirming. She shivered as one of my fingers dipped inside her, starting to slide back and forth. She became increasingly slick with each passing moment. She'd stopped trying to escape and I undid my belt and my pants, letting them fall away to expose my cock. I turned Anita on her side, keeping my finger inside her, but allowing her to reach out and take my swelling member, which she sucked into her mouth greedily.\n\nKneeling over her in the lovesac, I inserted another finger inside her pussy and she moaned around my shaft, her eyes closed. Anita sucked an amazing dick, and it wasn't long before she had me at full mast. Without a word, I pulled out of her mouth and turned her onto her front, wedged below my bulk inside the deep chair. She panted and then groaned loudly as I put myself on top of her and pushed my cock deep inside her eager slit with one long, slow stroke.\n\n\"Goddamn it,\" she grunted, grinding her ass up against me while I slid down inside her pussy. \"Gnnnnnnn, I didn't tell you to do this, you bastard...\"\n\n\"Oh?\" I mused, smiling evilly as I began to move up and down, driving into her. \"Should I stop?\"\n\n\"I'll legit find a way to kill you if you do!\" she gasped, her fingers gripping the material of the plush chair. \"Uhhhhhnnnn, fucking rape me!\"\n\n\"What is it with emo girls and rape fantasies?\" I wondered to myself as I fucked her. Well, whatever. I'd stop if she told me to, but Anita had always told me she was DTF and to just fuck her whenever I felt like it and if she wasn't doing something important.\n\nI began pumping down into her faster, eliciting a loud, guttural response. Her pussy became even wetter, clenching around me like a slick vise. My hands wrapped around her slender neck from above and behind and she shook in shameless delight, since she loved to be choked.\n\n\"Uhhhhhh, fuck!\" she cried out as she strained back against me desperately, so loud I thought our landlady might hear us. She shook violently and then started cumming, seeming to lose control of her body. I had passed my threshold and speared down into her with a great push, pumping my cum into her squeezing womanhood. I squeezed her neck as I arched my back, piercing her to her core.\n\nShe finally flopped into the lovesac, trembling and limp. She didn't move as I finished cumming inside her, thoroughly used and abused the way she liked. Once I had finished, I simply stayed on top of her for several moments, just enjoying the feel of her smooth pussy encasing me. It was a pure, warm and wet Heaven I never tired of. She was a helluva roomie and casual fuck buddy.\n\nOnce she'd milked all the cum out of me, I slowly pulled out of her, my cock leaving with a wet, comical plop noise from her distended pussy. I kept it resting on her pert, milky-white behind while I reached over the side and took several wet-wipes out of a discretely-stored box I had put there for these frequent occasions. I cleaned my cock of our mingled juices and tossed the refuse in a tiny basket before pulling up my pants to dress again. Anita still wasn't interested in moving.\n\nI was walking away from her, dusting my hands off in a gesture of a job well-done, when Cait wandered into the living room. She looked at me and then peered over at what was left of Anita, still boneless in the lovesac.\n\n\"Oh,\" she said somewhat uncertainly, looking at the completely naked and clearly fucked scene girl. \"She's not dead, is she?\"\n\n\"No, your friend is only mostly dead.\" I replied, quoting Cait's favourite movie and making her giggle and clap in delight.\n\nFrom the lovesac, Anita managed to move an arm and display a middle finger to me, even while remaining face-down and turned away from us. Cait snickered and looked up at me, her blue eyes glinting with amusement. \"I need to go to West Side Wally and was hoping you'd be my chaperone.\"\n\n\"As you wish...\" I said with great humility, taking her arm and leading her back outside.\n\n***\n\nWalking through the aisles at Walmart, I was assisting Cait in finding a grocery cart's worth of small items and knick-knacks one might keep around for use during an amateur production at a local theatre. She'd been tasked by the set designer of a show she was involved in to pick up supplies before they began their dress rehearsals. Ergo, I was here to lug the cart around while she concentrated on finding her quarry.\n\n\"So Sunday you're going to a tournament for... whatsit called, 40k?\" she asked as she dumped half a dozen rolls of silvery duct tape into the cart I was following her with.\n\n\"Yeah, sort of an all-day gig,\" I replied, watching as she moved on to masking tape, transparent tape and then hockey tape. \"At least, if I keep winning and moving on to the next round. I'll probably go home if I lose.\"\n\n\"You wouldn't stay to watch?\" she asked, still dumping tape in the cart. \"That doesn't sound like you, you're pretty nerdcore.\"\n\n\"If memory serves, you hung around and just watched for several weeks even after your character got killed in the Firefly RPG we were holding in my place,\" I countered, smirking at her. \"How's that not nerdcore?\"\n\n\"I had nothing better to do anyway,\" she replied, shrugging. \"After all, I was dating Jim, who was still your roomie at the time, so if I got horny, I could just go rub one out in his room while he played.\"\n\n\"At least you weren't always in the damn living room, polluting it with Mika songs and dancing around with Rachel,\" I sighed, remembering the frat-house feel of those first few months I'd lived in my current abode. \"How many damn times can you listen to a song about lollipops?\"\n\n\"Hey, we were all eighteen at the time,\" she said. \"For crying out loud, the biggest song in school that year was Axel F by Crazy Frog. And you kept breaking things up with your Viking metal or your Seventies dinosaur bands, if you recall.\"\n\n\"Give me the Bay City Rollers, Pink Floyd or the Grass Roots over Mika any time.\" I muttered.\n\n\"Hee, you're old!\" she giggled, smirking at me and blowing me a kiss, before returning to her task. I just shook my head and followed.\n\n\"But what about this tournament?\" she continued, scooping up a six-pack of yet another variety of tape. \"Do you have an army picked?\"\n\nI nodded. \"I have several to choose from, but the guy who called me said that most of the players are bringing Smurfs and Bugs, so I'm not gonna bring my Blood Angels or Space Wolves.\"\n\nCait nodded. \"Because Ultramarines and 'Nids are the flavour of the month for all the noobs and teenagers, right? Same as it used to be the Dark Angels?\"\n\nI stopped dead and looked at her. \"Why do you know any of that at all?\"\n\nCait paused in her shopping, realizing she'd outed herself. She slowly turned and looked at me, not quite sure what to say.\n\n\"I... researched it?\" she said somewhat lamely. \"What people are playing, I mean.\"\n\n\"Why?\"\n\n\"Because I've heard you talk about it and you really like it,\" she admitted, blushing. \"And I guess I figured it can't be all that bad if you like it, because you're the awesomest.\"\n\nI tried to control my grin.\n\n\"I mean, you do babble on about it,\" she continued, trying to recover some of her dignity. \"Impossible for a girl to not pick up something along the way. Your Space Wolves are basically Vikings in space, the Blood Angels are space vampires...\"\n\n\"Don't call them that.\" I said, making a pained face.\n\n\"Sorry,\" she said, correcting herself. \"You just enjoy talking about it, I just found some pages talking about the hobby. I still don't know jack shit about it, aside from what people are playing these days.\"\n\nI looked at her with an expression that mingled amusement and appreciation. Cait blushed a deep pink and feel back on her traditional defence whenever she was embarrassed in front of me.\n\nShe lifted her shirt and her bra to expose her pale, perky breasts to me.\n\n\"Boobs?\" she said somewhat uncertainly, holding them up to my scrutiny long enough to make sure I was good and distracted from whatever we'd been discussing. Damned if it didn't work. She must've kept them displayed for a good three seconds before pulling her shirt and bra back down. Walmart had cameras, after all.\n\n\"I'm sorry, what were we talking about?\" I asked, giving her the graceful exit she apparently needed. She giggled and sighed, content with the balance of power restored to our dynamic.\n\n\"I was going to ask if I could come with you.\" Cait announced as she continued down the row. \"To your tournament.\"\n\n\"I'm flattered, by why on earth would you do that?\" I queried, actually having no clue why she would. I thought she was about as likely to want to attend this as I would be to attend a pagan lesbian forum on yeast infections.\n\n\"Well, like I said, I wanted to know why you liked it so much,\" she replied, shrugging. \"And to be honest, I'm pissed with my boy. I'd rather masturbate with a cheese-grater than see him right now.\"\n\n\"What did he do?\" I asked, my blood warming ever so slightly at the thought of someone hurting or even just annoying my Cait.\n\nShe scowled as she examined some wares. \"We had just finished fucking at my place a week ago, and were lying in my bed. He said he needed to use the bathroom, but I heard him gather up his clothes. Then I heard a door shut, but it sounded wrong to be my bathroom door. I waited a few minutes and then got up and left my room, calling for him. He wasn't in the bathroom at all. He'd just gotten up and left after fucking me because he got what he wanted and felt the need to leave without a word.\"\n\n\"I'm sorry, darling,\" I said sympathetically. \"What a douche.\"\n\n\"And then today,\" she continued, a note of anger in her voice. \"I get a text from him saying 'Wanna fuck?' So I asked why the hell I'd want to do that when he up and left without a word last time and made me feel like shit. And you know what his response was? Another text that said 'Oh. Wanna fuck?' I just...\"\n\nI pulled her to me and hugged her tight. Cait buried her face in my chest and tried not to cry. When she looked up at me, her eyes were red.\n\n\"I'm sorry I'm a stupid kid slut,\" she said quietly, pain and remorse in her voice. \"You would've warned me about this guy if you'd been-\"\n\n\"You're not a slut, darling,\" I said gently, wiping a single, stray tear from her cheek with my thumb. \"You're a beautiful young woman who is liberated and he is some undeserving boy-child.\"\n\nShe sniffled. \"Should I dump him?\"\n\nI raised my eyebrow.\n\n\"Right, dumb slut question,\" she sighed. \"Well, that's the kind you get in these parts. Not everyone can be a catch like you, Trekkie.\"\n\nI hugged her again, chuckling. She used Trekkie and Ludo interchangeably when referring to me and I didn't mind one bit. She finally looked up at me, smiling. \"So that's why I want to go to your nerd thing. Because now matter how dorky it is, spending time with you is millions of times better than a moment with that dickbag. Consider him dumped!\"\n\nI smiled. \"You're welcome to come along as my cheerleader. You'll be the hottest girl in the store, hands down, so I'll win no matter how I do in the tournament.\"\n\nShe giggled and hugged me back, squeezing my butt. \"There are lots of girl gamers, you know, you big, hairy misogynist.\"\n\n\"Yes, but very, very few of the genuine ones are hot like you,\" I pointed out. \"Most gamer girls look like they should be dragging catapults to Mordor.\"\n\nShe looked amused and aghast all at once, thwapping me on the chest. \"That's an awful thing to say!\"\n\nI shrugged. \"It's the same for guys. Usually the only way to tell the girls and guys apart is the amount of neckbeard hair.\"\n\n\"You're horrible,\" she sighed, rolling her eyes. \"And I still wanna go with you. It'll be fun watching all the nerds get worked up. I'm a closet nerd, you know.\"\n\n\"Playing Rock Band when you're a theatre major doesn't count!\" I laughed as I began following her down the aisle again.\n\n***\n\nI was checking my army before getting ready for initial deployment. It had been a long morning, because the person running the tournament had it in their head that holding an open-invite event for 2500 point armies would be clever and manageable. The result, predictably, was that the battles were often taking forever, and they were needing to ask people to concede if there was no realistic chance of winning.\n\nI'd waited nearly three hours for my first round to begin, since there was a distinct lack of tables for everyone who'd shown up. They even invented a spur-of-the-moment by lottery to ease up the numbers, and I'd won a spot. So now I was getting ready and looking forward to squashing the guy I was about to face.\n\nCait had, predictably, grown bored quickly with all the set-up time and other logistics and began wandering around the store, looking at games and reading the comics while the tournament happened at the back of the large space. She stopped back in, occasionally, to see what was happening and to check in on me, leaning over my shoulder and pressing her boobs into my back.\n\n\"Whatcha do-in'?\" she asked in her cutesy voice I loved so much.\n\n\"Studying my opponents and how they play,\" I said casually. \"And yes, most of these guys are Smurfs and Bugs, but at least one guy is Space Wolves and another is Necrons. This oughta be fun, considering I decided on my Slaanesh army.\"\n\nShe leaned in and whispered, her lips touching my ear and making me shiver. \"I don't know what that is.\"\n\nI risked standing up, hoping she hadn't given me a raging hard-on and walked away with her, holding her hand. She made a happy sound and snuggled onto my arm as I tooled about with her for a few minutes. I think she was pleased that I was spending time with her, even though she had come to support me at this nerdfest.\n\n\"I'm playing a form of Chaos Marines, dedicated to the god Slaanesh,\" I explained, hoping she was listening. \"They're basically Space Marines with an extreme BDSM fetish, dedicated to sensation and death through pleasure.\"\n\n\"Ooh, kinky,\" she giggled. \"Sounds like something you'd play. Although, so do the Space Vikings. So they're supposed to be all depraved and shit, but how does that show up when you're playing?\"\n\n\"Well, the colours of their armour are the immediate visual effect,\" I said, hugging her from behind as she stopped to look at a graphic novel. She snuggled back against me as she listened. \"Their colour schemes are pinks and pastels and such. Their sorcerers do things like subvert the enemy army's mind and make them dance or surrender. A lot of models are erotic looking and have extra boobs or something.\"\n\n\"I like how it sounds,\" she giggled. She'd worn a sundress today, white with peach accents and blossom patterns all over it. The top enhanced her already considerable bosom and she was really enjoying the endless stares she was getting from the assembled nerds. \"So, your army has like sorcerers and commanders and things?\"\n\n\"Yep.\" I replied, trying not to look down the top of her dress.\n\nShe was silent for a few moments and then nodded. \"Okay. Let me know when you're setting up. I wanna help.\"\n\nI hadn't expected that, but I wasn't about to say no to her, either. I never did. We walked back to the tournament and I resumed my seat, watching, and waiting patiently.\n\nSo here I found myself getting ready to deploy, finally. Cait had asked for my five most important characters, like sorcerers and commanders, which I gave to her. I noticed her sitting in a remote corner, examining them intently, one-by-one. I didn't really think anything of it, since I was busy and knew what each of those models would be doing and where.\n\nWe were about two minutes away from starting when she came bouncing back, trying not to look excited or giggle. She had the models in her hands and asked me where to put each one. I pointed to the places each would initially deploy and she placed them precisely before clapping and grinning.\n\n\"You can do it, Ludo!\" she chirped before pulling me down to give me a kiss on the cheek in front of everyone and then swishing back to her seat and waiting patiently. The stares and glares I was getting were quite enjoyable.\n\nMy round began and I started to notice something strange. It was a scent, earthy and sensual, although I had no idea where it was coming from. I think the other players close by could also smell it, because I could see their noses wrinkling slightly and they shifted from foot-to-foot uncertainly.\n\nI knew now what the smell was, although I still had no idea where it was emanating from. My mind almost wandered, nearly causing me to make a tactical blunder, but I managed to avoid it. Certainty grew in my mind about what the scent was and whom it belonged to. It was Cait. Aroused Cait, but she was nowhere near the table. I knew the scent from watching her fuck the sex dolls she had bought the week before.\n\nI moved one of my sorcerers during a turn and noticed my fingers coming back from handling the model feeling slightly sticky. It was one of the models Cait had borrowed. Subtly, I brought my fingers to my nose, under the pretense of rubbing my face.",
        "The model did indeed smell like Cait's pussy.\n\nAn evil smile crossed my face and I resolved to utterly destroy my foe, now that my models had the Lady's Blessing. I cricked my neck and played with renewed vigour, my opponent and those around me still perplexed by the subtle scent none of them could identify.\n\nThe game was set for five turns, but my foe didn't make it past three, as I'd destroyed or incapacitated so many of his troops that he couldn't take any objectives. I was declared the winner and Cait bounced up and down in glee, clapping her hands and making her boobs dance. She rushed up and gave me another big kiss on the cheek.\n\n\"I knew you'd kick his ass!\" she whispered as she helped me gather up my models to make room for the next game and then lead me away to two chairs. She seemed very pleased, although whether it was with me or with herself, I wasn't sure yet.\n\n\"You really threw off my opponent and the nerds all around me with that stunt you pulled,\" I said quietly, squeezing her hand for emphasis. \"Nice job.\"\n\n\"I'm glad,\" she giggled, blushing slightly. \"I hope you appreciate it, though, sticking those things in my cunt wasn't exactly comfortable. The one with the sword? Yeah, didn't put him up there, I just got myself really wet and smeared him around a little when no one was looking.\"\n\n\"I was wondering why you sat off in a remote corner,\" I laughed. \"I'd say you definitely gave me a tactical advantage.\"\n\n\"I'll do it again for the next round, if you like,\" she offered, clearly pleased to be helping. \"Should I do the same models or some new ones?\"\n\nI grinned and held up the lavender and pink assault vehicle, which barely fit on my hand. Her eyes widened and then she gave me a skeptical look.\n\n\"Very funny,\" she said dryly. \"That's not going in my cunt. I'll grease your command models again for you.\"\n\nI kissed her on the head and let her return to the larger store while I watched the tournament progress. Things moved forward predictably, and it was another two hours before my next game. Cait returned and took me to the remote corner, blushing with excitement. She sat me down facing her, with her back to the crowds.\n\n\"Keep an eye out...\" she whispered as she took the models from my hand. She furtively raised the hem of her skirt, exposing her pussy. I smirked as I noticed the pink folds were already glistening. She was turned on.\n\n\"You little minx, you didn't wear panties today?\" I queried.\n\n\"They're in my purse,\" she replied quietly. \"Once I knew I was gonna get your models wet, I just kept them off. Made sense to not get them sticky.\"\n\nI kept an eye out but also watched as she took the models one by one and slipped them inside her pussy. She apparently felt no embarrassment in letting me see her do this, since I'd watched her fuck a sex doll already. She pulled the first model out, a delightful, glistening string of her lubrication stretching back with it. I took the model and put it aside, watching as she inserted three more, equally sticky.\n\n\"And now this bastard,\" she whispered, taking my army's captain, who was brandishing a large sword. She carefully pulled her sticky lips apart, revealing her inner pink. She then placed the model between the lips, holding it by the sword and letting her netherlips close around it. She swished it up and down between the lips. When she withdrew it, the model glistened delightfully, a perfect accent to any Slaanseshi model. She held the base delicately and gave the blade the same treatment.\n\nI had my models back and she stood, smoothing out the front of her skirt. She seemed a little distracted, a flush to her skin.\n\n\"Where are the washrooms?\" she asked, looking around. \"Apparently having army men in me turns me on and I gotta take care of this.\"\n\nI pointed to the washrooms and she scampered off, leaving me to my set-up. People were once again acutely aware of the scent, but nobody seemed to be able to place it. I just smirked and got ready to play.\n\nTurn One had begun when I got a message on my phone. It was from Cait and it was a video message. What kind of video message could she be sending me from the bathroom?\n\nI turned down my volume before playing it, making sure no one else could see.\n\nShe was whimpering and gasping, biting her lip and getting red in the face as she came. I could only see her from the shoulders up, but what she was doing was perfectly obvious. My game be damned, this had my full attention.\n\nAnother video message moments later. She was smiling at me tiredly and speaking, but the volume was still down, so I had to read her lips.\n\n\"I hope you had your volume turned down to that...\" she was saying, I think.\n\nI returned to my game and began beating the crap out of the Smurf player I was matched against. I was really enjoying the general confusion about the scent of female arousal that permeated the area, especially since there were enough girls around (including some moms for the younger players) to make it unclear where it came from and Cait was rarely near the table.\n\nI won handily, to much applause, since no one else was playing Chaos Marines. Cait clapped enthusiastically and gave me another kiss on the cheek before helping me clear the models away. She returned to the corner we'd been sitting in while I casually looked on at the next game setting up.\n\nI felt a dainty hand on my shoulder.\n\nI turned to look and one of the mothers present was looking up at me. She didn't seem angry, maybe more perplexed. She gave me a wry look and beckoned for me to follow her for a moment. She took me away from the crowd and turned to face me.\n\n\"Look, I didn't want to say anything in front of everyone else, but is it really necessary for your girlfriend to do what she did to your models?\" she asked.\n\nI shrugged. \"I didn't know she was going to do it, initially, although once I'd realized, I approved. It was funny because of my army type and a great distraction. She did nothing wrong.\"\n\nShe sighed. \"I... maybe not, but my son smelled it and he's a horny fourteen year-old boy and he's going to be jerking it hard for days since he got a whiff of it. Like I don't put up with that enough or him stealing my panties.\"\n\n\"Well, I can't exactly wash my models.\" I pointed out.\n\n\"I understand, but does she have to keep refreshing the varnish she puts on them?\" she asked, trying to sound reasonable. \"I'm not trying to be a bitch, I think it'd be funny if I didn't have to deal with it for the next two weeks.\"\n\n\"I think you're the only person who figured it out.\" I mused before looking at the clock on my phone. \"And as much as I hate it, I think I'm gonna need to bow out of the tournament, it's taking too damn long.\"\n\n\"Oh, that's too bad,\" she said, I think genuinely feeling bad for me. \"At least that ups my son's chances of winning, since you're the biggest threat around.\"\n\n\"It's okay, I'd be quite the idiot if I kept playing this game when I could be paying attention to the girl who keeps greasing my models instead.\" I replied, smiling. \"I think I'll go bow out now. Have a good night.\"\n\nThe guys running the tournament were disappointed, but understood. I went and told Cait, who seemed surprised but also did not object. I think she had spent as much time as her endurance would allow, in spite of enjoying giving my models her good luck charms. We gathered up all my stuff and headed out, the sun westering and spraying beautiful colours across the horizon.\n\n\"Beautiful sky.\" Cait said, staring at the sunset.\n\n\"Not as beautiful as my teammate.\" I replied, reaching over and giving her hand a squeeze as I drove. Cait blushed and looked at her feet. \"So how can I thank you for toughing this out with me today, not to mention blessing my models?\"\n\nShe made a show of thinking. \"Hmmmm... wine me and dine me, I guess. And then... will you have more fun with Solitaire and Joaquin with me?\"\n\n\"As much as you like.\" I said easily, looking forward to the rest of my night.\n\n***\n\nWe went for Italian food and enjoyed ourselves. Cait nearly overloaded on garlic bread but still managed to put away all her food and three glasses of wine. She was rather drunk and silly at this point, so I drove to a park and walked her around to keep her metabolism going.\n\n\"N-hnnnnn, I'm drunk...\" she murmured, sagging against me at one point, her face mashed into my torso. She frowned and pulled back a little, scowling at my chest disapprovingly.\n\n\"Yer not soft,\" she stated, poking my rather pronounced and sturdy pectoral muscle. \"S'posed to be soft for me to rest my face on.\"\n\nShe pulled the top of her sundress down, exposing her breasts to me. Fortunately, it was dark and we were in a remote area of the park, so no one saw her. She took my hands and placed them on her breasts, making me massage and squeeze them.\n\n\"See? Soft. Like pillows. Soft, boobily pillows is what I need.\"\n\nShe awkwardly knelt in front of me, lifting my shirt and exposing my abs. She scowled at my segmented midsection and tried placing her face against it, clearly not satisfaction.\n\n\"No good,\" she muttered. \"Every bit as uncomfortable as your dumb chest.\"\n\n\"You've slept on me before,\" I protested, watching her in bewilderment. \"And I was muscular then, so nothing's changed.\"\n\n\"'cept I'm drunk an' I'm a girl an' I can complain if I want because it doesn't suit me right now,\" she announced, poking my abs before looking at my crotch, contained within my jeans.\n\n\"'s the one part of you girls don' want to be soft...\" she mumbled, flicking me with her finger and making me wince. She then used my jeans and belt to pull herself up to a standing position, frowning up at me lop-sidedly. \"You're s'posed to be soft!\"\n\nShe pushed me down by the shoulders until my face was in front of her chest and then she pressed her breasts against me, clasping my head gently while wiggling back and forth.\n\n\"See? Soft! Tha's a pillow. Pillows. Whatever, you need to feel like that, you big jerk.\"\n\nShe turned around and lifted the hem of her dress, exposing her butt to me. With one hand, she pressed my face into her soft cheeks.\n\n\"Soft again! Wha's so difficult about this?\" she demanded.\n\n\"I'm a big, brawny guy and not a cute girl?\" was my muffled reply from between her ass cheeks.\n\nShe huffed in irritation and let me get up, crossing her arms over her still exposed breasts. Her skirt more or less fell back into place, covering her lower half. I reached over and put my finger under her chin, tilting her head to look up at me.\n\n\"Admit it,\" I said gently. \"You're not the least bit interested in me being soft and doughy. You like my big, Viking self just the way it is.\"\n\n\"Yeah...\" she said almost dreamily, looking into my eyes. I was quite lost in the depths of hers, reflecting the starlight on this cloudless night.\n\n\"Poo,\" she said, coming out of her spell. \"Why can't you be even just ten years younger?\" she groused. \"I could explain that away.\"\n\nI chuckled and took hold of the thing straps that went over her shoulders, slipping them back up to cover her again. She sighed and hugged me close, clearly over her drunken discomfiture. I held her for several moments before she resumed walking around, holding my hand and letting the alcohol haze leave her system.\n\n\"I don't wanna go home tonight,\" she said quietly. \"Can I stay with you tonight at your place?\"\n\n\"Of course, darling.\" I said readily. \"You know perfectly well that you're always welcome to.\"\n\n\"That's not a problem, is it?\" she asked, looking up at me, a hint of concern in her eyes. \"I won't be interrupting, if, well... you and Anita...\"\n\n\"It's fine, Cait,\" I assured her. \"After all, I'm bringing you back to fuck the dolls, so I doubt I'll be doing anything with Anita tonight.\"\n\n\"Oh. Right.\" Cait mumbled, remembering the plan. \"Would you if we weren't?\"\n\n\"Not if you're staying with me overnight,\" I replied squeezing her hand. \"You're my priority, not getting my futter wackened.\"\n\nShe tried to avoid snickering at my words and hugged my arm again, pleased with my answer. I finally took her back to the car and began the drive home. We were nearing my quiet residential neighbourhood when Cait unbuckled herself and then wiggled around before pulling her dress up over her head entirely, now completely naked in my passenger's seat.\n\n\"Ummmmm, what?\" I asked, clearly perplexed.\n\n\"I've got just enough drunk dumb and courage to streak to your house from the driveway,\" she said, her voice indicating she was psyching herself up to do something. \"Don't try to stop me.\"\n\n\"Oh, I wasn't going to,\" I replied. \"Being seen on the street with a hot, naked chick can only do good things for my street cred.\"\n\n\"Don't ever try to say that again.\" Cait hissed as we pulled into my driveway. \"You will never see or feel my tits again if you do that.\"\n\n\"That's a lie.\" I stated as I brought us to the halt. \"You couldn't resist showing me your tits if I killed your entire family.\"\n\n\"I'd probably let you suck on them for that.\" Cait muttered, knowing I was right.\n\n\"So why hasn't anyone else had to kill your family to suck on your tits?\" I asked, smirking at her while she sat naked in my car.\n\n\"Oh my God, shut up, you big, hairy troll!\" she groaned, letting her head thunk back against the headrest in exasperation. I stepped out of my side and walked around to open her door. She stepped out and stood, her pale body almost glowing in the moonlight.\n\n\"Not fast,\" she said as she took my arm. \"We're... we're gonna walk.\"\n\nThere seemed to be absolutely no one around on the street, which I suppose was a good thing. Anyone looking out their windows might get an eyeful, of course. She walked with a barely-there control, keeping her eyes directly ahead, toward the side door of my house, which led into the small foyer.\n\n\"Don't speed up,\" she whispered. \"I'm gonna walk the whole distance...\"\n\nI nodded and walked slowly beside her, letting her control the pace. She stiffened as we got closer to the door, fighting the urge to dash. Her face was getting redder with each passing moment.\n\nFinally, we reached my side entrance. Cait fidgeted and waited while I opened the screen door and then fumbled around for my keys.\n\n\"Let's see...\" I said absently, searching through the dozen or so keys on my chain. \"Which one is it?\"\n\nI tried one unsuccessfully. \"Nope, that's not it...\"\n\n\"Hey, wait...\" Cait said, her eyes widening as she realized something. \"You never lock your damn door!\"\n\nShe pushed in front of me and turned the knob, opening the door into the house. She whirled around, glaring at me while I chortled heartily.\n\n\"You are not going to be touching these!\" she hissed as she stood in the doorway, pointing to her tits. \"For... for at least five minutes!\"\n\nShe then stomped inside, leaving me to collect myself after laughing so hard. I finally went in, finding her standing naked in my kitchen, drinking one of my ginger beers out of the fridge. She looked at me sharply, her expression daring me to make one of my blithe or snarky remarks. I just stated silent and watched her, admiring her body.\n\nShe finally finished the bottle and sighed, leaning back against the counter, seemingly recovered from her ordeal and plainly not embarrassed about being completely naked in front of me.\n\n\"I forgot my dress and my little purse in your car...\" she murmured. \"You're not gonna make me go get them, are you?\"\n\n\"Of course not, silly,\" I said cheerfully. \"You've displayed enough bravery for one night. I'll get them for you at some point of our choosing.\"\n\n\"I guess now is good, since I really have to pee,\" she remarked. \"Meet me up in your room?\"\n\nI nodded and turned around to head outside and retrieve her goods and my Chaos Marine army. No more than two minutes later, I was back in my abode and heading upstairs. Sure enough, Cait was waiting in my room for me, smirking as she looked at the sex dolls- I had positioned Solitaire so that she was sitting on top of my dresser with her legs spread wide and Joaquin kneeling between them, seemingly licking her pussy while she clasped his head, her eyes closed in ecstasy.\n\n\"What a dutiful boyfriend,\" Cait giggled as I joined her, shedding my shirt and then my pants and boxers, soon as naked as she was. Being this close to her nude form was making my cock swell, but I didn't get hard, thankfully. \"How long has he been eating her pussy?\"\n\n\"I changed their position every morning, so about sixteen hours now.\" I mused, thinking about the timeline. \"Yeah, roughly sixteen.\"\n\n\"Jesus Christ on a cracker, I'd fucking die,\" she breathed. \"But what a way to go, right?\"\n\n\"Considering the number of times I've nearly suffocated between your tits, I'd have to agree whole-heartedly.\" I confirmed, making her giggle. I pulled Joaquin out from between Solitaire's thighs and deposited him on the bed. I then went to move Solitaire, but she slipped from my grasp and face-planted onto my wooden floor in a tangle of limbs.\n\n\"Ooh, ouch.\" Cait said, making a wry face. \"That'll leave a mark.\"\n\n\"No worries, she likes it rough.\" I said simply, picking the sex doll up and moving her next to Joaquin on the bed. Cait observed the doll for a moment, considering something.\n\n\"So, she'd like it if I did this?\" she asked as she slapped the doll across her surprisingly real tits, making them wobble.\n\n\"I didn't hear her tell you to stop.\" I said, shrugging. Cait smacked her breasts again and then twisted the nipples, giggling as she tortured the doll. She moved over Solitaire, straddling her and pinning her down. She laughed as she began slapping the doll across the face, knocking her head left and right. Gripping her hair, she punched Solitaire in the nose and then elbowed her sternum.\n\n\"This... isn't weird, is it?\" she asked, looking over at me, worried. I shook my head that it wasn't and she grinned and continued abusing the female doll, going so far as to knee her in the pussy. She beat on the doll until she was panting and had a warm sheen of sweat on her skin. She finally looked over at me.\n\n\"Beating the fuck out your doll has made me horny,\" she said, a glint in her eyes. Still straddling Solitaire, she leaned over and took Joaquin's cock into her mouth, beginning to bob up and down on it. I watched in rapt fascination, willing myself not to get hard, although my cock did enlarge considerably. Cait hummed as she sucked on the doll's cock, her eyes closed. I could see her body beginning to squirm on top of Solitaire.\n\nShe sat back up, wiping at the corner of her mouth and looked at me. I could tell there was something she wanted to ask, but she was apprehensive.\n\n\"Something you want to ask?\" I queried, smirking.\n\n\"It's really weird,\" she answered, blushing. \"But, I'm hoping you'll do it for me, if no other reason. I...\"\n\nI waited for her to speak, my eyebrow raised.\n\nShe squeezed her eyes shut as she spoke. \"I want to fuck Joaquin, but I was hoping you'd fuck him with me!\" she said quickly.\n\nThat made me blink. I'm pretty sure she could hear me blinking. I really hadn't expected that. \"You want me to fuck the male doll while you fuck it... like, bury my dick in his ass while you ride him?\"\n\nShe blushed furiously and looked away. \"I know you're not the least bit gay,\" she said in a tiny voice. \"But it's just a lubed hole in a bunch of silicon and plastic, right? It's not like you're putting the doll's dick in you. It's just... it's about as close to you as I can get, you know? Not each of us on separate dolls. You'd be... right there with me...\"\n\nShe was trying so hard.\n\n\"I'll make a deal with you, Cait,\" I said, walking up to her and taking her hands in mine while looking down into her eyes. \"I'll join you tonight. I'll fuck this mass of plastic and silicon on the ass while you ride it.\"\n\nHer eyes lit up in delight at my acquiescence. She plainly hadn't been expecting it.",
        "\"But next time, you bring a strap-on and you ride Solitaire while I fuck her. Deal?\"\n\n\"Fuck yes!\" she squealed, throwing herself forward to wrap her arms around me and bear hug me. Her naked body was now pressed to mine, her pussy squashed to my swollen cock. There was no chance whatsoever of me not getting hard now, but she was too busy being ecstatic to care.\n\n\"Let a plastic girl fuck me with a strap-on? No problem!\" she laughed. \"You've got a deal, big man! Now where's that lube?\"\n\nShe peeled herself off me and scurried to find the lube we used on the dolls, making sure to kick Solitaire contemptuously off the bed as she did so. She returned with the lube, looking excited. She immediately began smearing it up and down the length of Joaquin's dick and then put some between her own legs for good measure. She looked at my cock, seeing it was already hard. She stared for several seconds, watching it twitch expectantly. She then looked up at me. \"You're sure you're okay with this, Michael?\"\n\nI nodded. \"For you, Cait, yes. You're probably the only person, make no mistake. I can do this.\"\n\nHer eyes flooded with a warmth at my words and then the put some lube on her hand and smeared it on Joaquin's butt, sticking her finger deep inside for good measure. I took the doll by the legs and pulled his hips to the edge of the bed, where I'd be standing for this unusual tryst. Cait moved closer, still making sure Joaquin was ready for my cock.\n\nThat sounds so damn unnatural to say...\n\nShe looked up into my eyes and I shivered as she wrapped her hand around my shaft, smearing lube onto it. Her thumb pressed for a moment against the tip of my cockhead and I thought I had gone to Heaven. Then the moment passed and she withdrew the helping hand and turned herself around, facing away from me and up his body. I waited while she positioned herself over the stout fake dick, teasing the head back and forth along her netherlips for a few seconds and then starting to lower herself. I held her sides while she sank down, sighing as the cock penetrated and then went deep inside her. Cait shuddered as she felt herself get filled, trying to adjust once again.\n\n\"Hold me,\" she murmured, not moving yet. \"Please hold me while we do this...\"\n\nI leaned forward slightly and wrapped my brawny arms around her, her hands resting on my forearms. She slowly began to move herself up and down, sighing in pleasure. I loved how soft her skin felt as I hugged her. I had spread Joaquin's legs wide, meaning that he was not supporting her weight behind. I therefore moved close, right up against her back. She could no doubt feel my throbbing dick pressing against her back as I steadied her.\n\n\"Okay,\" she murmured as she slowly rode. \"I think I'm good for a second. You still ready to do this?\"\n\nBy way of response, I took a deep breath, pulled my body back slightly, used one hand to steady my cock and pressed the head against Joanquin's waiting knot. Closing my eyes and thinking of Cait, I pushed against the tight ring slowly, feeling it give around the head, aided by the lube. Then with a pop I was through, sliding deep inside the doll's ass. I wrapped my arms around Cait and held her tight, imagining it was her ass I was deep inside, which wasn't that difficult, since I could feel her ass, right above my cock in any event.\n\nCait moaned, knowing that I was complying with her wishes and loving how close we felt at this moment. She hugged me to her, putting my hands on her breasts and allowing me to squeeze and massage them. I had, of course, held her breasts before, but this was turning into something different- every other time I'd done it, I'd been teasing her or playing with her or even just holding her for comfort. This, though, was becoming sexual, and there was no way for it to not be.\n\nCait was squirming up and down now at a slow rhythm, while I began moving my hip back and forth, ignoring the 'gender' of the doll I was fucking and simply delighting in the feeling of Cait's gorgeous body moving against mine. I almost completely forgot it was Joaquin I was fucking.\n\n\"Gnnnn, your hands,\" she moaned as she helped me massage her tits. \"Oh, God, I love how you feel in me...\"\n\nI was acutely aware of what she'd said and the inherent inaccuracy of it, but this hardly seemed the time to bring the matter up, did it? I squeezed her breasts a little harder, hoping she wouldn't realize it either.\n\n\"Oh, shit,\" she breathed, her skin getting warm and damp. \"Play with my nipples!\"\n\nI was beginning to push in and out of the doll more strongly now as I used my thumbs and forefingers to pinch and manipulate her rosy nipples, making her shudder and gasp suddenly, thrusting her ass back against me. She was so wet I could feel it at the root of my cock, while I continued to fuck Joaquin.\n\nShe let out a shameless groan, clearly feeling no inhibitions. She writhed on the doll's cock, churning in circles even as she rode up and down. Her hands reached back around my neck and anchored themselves there, her chest thrust forward into my hands. Her breathing was slow, loud and heavy, her skin pink and slick with her exertions.\n\n\"Ohhhhh, fuck...\" she panted, slipping one hand down to play with her clit while the other remained latched to me. \"Do you want... do you want me to turn around?\"\n\n\"Yes.' I whispered to her, making her shiver in pleasure. I let go of her and she slowly swiveled herself around on the cock without taking it out. I was still in the doll's ass and she stared for several moments, as if in disbelief. Finally, she sat up straight, her breasts pressed to my torso and putting her hands on my shoulders as she started moving up and down again. Her eyes locked with mine as we fucked the doll together.\n\nI was pushing deeper and deeper inside the doll (who cared if he didn't like it?) while she squirmed closer to me. Our bellies began to meet with our movements and I could feel the wet heat of her pussy directly above my cock, not more than three inches away from me. She fondled her breasts with one hand, her eyes closed as she lost herself in pleasure.\n\n\"You can put your hands on my ass,\" she whispered, eyes still shut. \"Pull me closer.\"\n\nI reached around and gripped her cheeks firmly, pulling her in closer still. She gasped, because the doll's cock naturally leaned in the opposite direction of the way I was pulling her, hitting deep inside her pussy. Belly-to-belly now, we were about as close as we could be without actually fucking. Picturing it was Cait I was deep inside (not a problem since she was right on top of me), I thrust harder and harder inside the doll. It was feeling really, really good, especially since my body could barely tell where Joaquin ended and Cait began.\n\n\"Oh God,\" she murmured, her body trembling as she thrust against me, my hands still on her ass cheeks, squeezing them and pulling them apart to give her a good stretch. \"Oh, you're gonna make me cum so hard...\"\n\nOnce again, there was no point in correcting her. I just kept fucking, watching as her body trembled and began to shake, her hand gripping her breast fiercely while the other started to dig into my shoulder. Her pussy felt so wet against my skin.\n\n\"Fuck... fuck...\" she panted, eyes fluttering. \"Oh, God, it's gonna be big...\"\n\nShe almost began wheezing as she fought to hold on, her skin turning pink. I could feel the boiling indications in my own body of a big orgasm, knowing it was happening soon. Cait arched her back, eyes wide as she looked at the ceiling and her chest now pressed to mine. I pulled her pussy tight against me and she strained.\n\nShe squeezed her eyes shut and gritted her teeth as she screamed, her orgasm rocking her. Cum bubbled and flowed out of her pussy, even squirting me. She ground and rocked in ecstasy, lost to her passion. I fought to hold on, enjoying watching her cum. It wouldn't be long, though, no matter what I did to control myself. There was always the threshold of no return and I was almost on it.\n\n\"You don't need... to cum in the doll...\" she gasped, still pumping up and down on Joaquin's cock.\n\nHer words drove me over the edge and I growled as I pulled my dick out of the doll's ass and pumped the shaft furiously, shuddering through my orgasm. My cum shot up, spattering across Cait's chin, her breasts and her stomach. I even shot a load directly on her pussy, still pinned to the doll cock. Cait whimpered as she felt my hot essence on her skin.\n\nWe collapsed forward against one another, hugging one another wearily and breathing heavily. Steam was practically rising off our skin. We said nothing for some time, simply staying still, chests heaving. Her forehead pressed to mine, eyes closed as she tried to compose herself. Finally, she fluttered open, looking glazed and very sated.\n\n\"Wow,\" she said quietly. \"Thanks, man.\"\n\n\"Thank you, my dear,\" I replied, rubbing my nose against hers. \"Helluva way to top off an evening.\"\n\n\"No kidding,\" she sighed, leaning back and rotating her neck before raising her arms over her head and stretching. I stared at her magnificent rack, noting that she was still covered in my cum, which now dribbled down her form. She saw me looking and giggled.\n\n\"Well? You not gonna kiss and lick it off me?\" she teased.\n\n\"Noooooooo,\" I said, shaking me head. \"I think one deviation is enough for the night. I fucked a guy doll's ass for you.\"\n\n\"That's true,\" she giggled. \"Besides, I don't actually ever want you to do it, the thought of you eating guy jizz gives me a bad case of the jibblies.\"\n\n\"You and me both.\" I agreed, caressing her face. She looked down at her body, covered in my cum and then at my still-hard, twitching cock, which continued to ooze my cream. She slowly reached out and put her hand around the shaft, stroking it gently and squeezing to make sure I was empty of cum. It didn't quite feel overtly sexual so much as reciprocity, if that makes any sense. She sighed as she looked at her cum-covered hand and then smiled at me.\n\n\"You molested my tits,\" she said, winking. \"Naughty boy.\"\n\n\"I wouldn't take it back even if I could,\" I sniffed, smirking at her. We enjoyed our banter, even at moments like this. \"And I somehow doubt you objected.\"\n\n\"I'll never tell,\" she giggled as she climbed off Joaquin's cock and then came down to the floor. \"I think I'd better take a shower. I'll clean me up while, you clean up the dolls.\"\n\nAnd then she left me. I could hear the shower starting and sighed, wondering what to do. I found some wet-wipes to use on Joaquin and myself, putting the dolls in the corner in a new position. A few minutes later, I was lying on the bed when Cait came back in, naked except for the towel around her head. She paused as she looked at the dolls in the corner.\n\n\"Is Solitaire eating Joaquin's ass?\" she asked, giving the deviant dolls a wry look. Indeed, Joaquin was bent over, leaning against the wall, while Solitaire was kneeling behind him, her face between his ass cheeks.\n\n\"Hey, who am I to judge?\" I replied, shrugging. \"I like the Bay City Rollers.\"\n\n\"Well, just about any deviant behaviour is allowed then,\" Cait muttered as she clambered on to the bed and snuggled into me, her legs slung over my middle and her knee against my cock. \"You look like you cleaned up in here pretty good.\"\n\n\"You should see me hide evidence of a body.\" I answered, making her snicker. \"Enjoy your shower?\"\n\n\"Yeah, but I was feeling a little lonely, wish I could've had you in there with me. But I wasn't feeling too in control, y'know?\"\n\nI put my arm around her and brought her in closer. She almost purred as she nuzzled into me, her face against my pectoral, no longer complaining about how hard my muscles were. Her hand gently flexed against my chest while she rested.\n\n\"I'm not a bitch, am I?\" she asked suddenly.\n\n\"Thought never occurred to me,\" I said, wondering what was on her mind. \"Why?\"\n\n\"Because...\" she opened her eyes to look at me. \"We're doing things naked together now, I put your tabletop models in my cunt, we're fucking the dolls together, but I still haven't-\"\n\nI didn't let her finish the sentence, putting my fingers gently on her mouth, shushing her.\n\n\"You're the most amazing girl in the world and I'm very fortunate to have you in my life. No, you're not a bitch.\"\n\nShe made a little happy noise before gently biting my fingers that were over her mouth. Keeping them between her teeth, she seemed to drop off to sleep. Once I was sure she was truly gone, I removed my fingers and simply lay there, content with the moment.\n\nA few minutes later, I could hear footsteps padding up the stairs and then down the hallway. Anita appeared in my doorway, staring as she saw cuddling completely naked on my bed. She looked at me with a raised eyebrow, then made a circle on one hand with her thumb and index finger and began pushing the index finger of her other hand through the hole, clearly asking if I'd fucked Cait.\n\nI shook my head.\n\nAnita threw her hands up and looked at the ceiling in exasperation before trumping off to her room and closing the door, clearly not willing to deal with our bullshit. I chuckled to myself and continued to hold the girl who was like a daughter to me.\n\n***\n\nTwo days later, I was lying on my bed, with Cait snuggled into my side. Both of us were naked, as we now seemed to be completely comfortable with this state of affairs. Not sure how, but I was able to keep myself (mostly) from developing a raging hard-on whenever we were like this, no matter how much of her succulent flesh was pressed to me. And as long as that was all she was doing.\n\nI had my arm around her and we were both just watching the TV screen at the bottom of the bed, zoning out while some random newsfeed played. We'd been doing this for some time, since she'd come over earlier, having nothing better to do. Not that I objected mind. She'd simply walked into my house, begun stripping off her clothes and clambered onto my bed with me, nestling into my side. I was already naked, since I am something of a nudist whenever possible, especially when I'm within my own domicile.\n\nI'd been listening to some classical music when she came in, but she took the channel changer from my hand, flipped on whatever news station this was, and started watching mindlessly. Thinking nothing of it, I joined her in doing so. This probably went on for over half an hour, with not a word spoken.\n\nUntil she thumped me on the dick randomly.\n\n\"OW!\" I yelped rather reasonably (in my opinion), sitting up and almost doubling over in shock. I looked at her with eyes wide in shock and not a little outrage while I grabbed hold of my crotch in pain. \"What was that for?!\"\n\n\"You big, hairy jerk,\" she groused, trying to frown at me. \"Why aren't we doing naked hookah downstairs?!\"\n\nI blinked and shook my head, trying to make sure I had heard her correctly, with a mind unclouded by the throbbing discomfort in my groin. \"What?\"\n\n\"Why aren't we doing naked hookah in your Moroccan-themed living room?\" she iterated, her hand still balled up in a fist for another potential strike if my next answer disappointed.\n\n\"Since when is the demand for naked hookah punctuated with a jab to the dick?\" I shot back, still rather upset about how she chose to make her discontent known. \"Since when did simply informing a person of this desire go out of style?\"\n\n\"You're supposed to know,\" she grumped, folding her arms and making a petulant face. \"How're you gonna have a naked girl in your bed and not know what she's thinking?\"\n\n\"I've been married, squirt, it was made abundantly clear to me by my shrew of a wife that I knew nothing,\" I pointed out. \"Y'want a guy who knows everything, find a boy who hasn't done jack shit with his life, they think they know everything.\"\n\n\"Fuck that,\" she muttered, scowling at some memory. \"They think with the wrong head.\"\n\n\"Gnnn, well rest assured, that's not the case with me at the moment,\" I wheezed, still holding my junk. \"Next time, punch a boy in the dick and then just tell me you want naked hookah. I'll be more amenable, guaranteed.\"\n\nCait pouted a little. \"So... no nakey hookah because I punched you in the dick?\"\n\n\"Just... give me five minutes to recover.\" I sighed, lying back finally and looking at the ceiling, my eyes spiralling.\n\nHer face lit up. \"So we can do naked hookah?\"\n\n\"Your concern for my well-being is underwhelming,\" I said dryly. \"Yes, you little brat, we'll do naked hookah. I can't ever seem to say no to you, can I?\"\n\n\"I'm a terrible person for you to not be able to say no to,\" she giggled, clearly pleased with my submission to the plan. \"But I'm glad you said yes, Trekkie.\"\n\nShe then leaned over me and bumped her lovely boobs against my face. \"Because you're muh fav-ourite...\"\n\nShe caressed my face with her knockers for a few moments, letting me rest. I guess she got bored after nearly a minute, because she asked how I was feeling.\n\n\"Little sore.\" I sighed.\n\n\"You men are such babies,\" she chided, withdrawing her bosom from my face. \"You're so damn sensitive about dick trauma. It's not like you give birth with it or anything. Here, I'll make him feel better.\"\n\nShe then leaned over my midsection and began massaging my cock with her boobs, hard enough that it was sort of flopping around in different directions beneath her mammaries. I'm guessing she was expecting me to start sporting an erection due to her ministrations, but no dice. She'd stunned him but good.\n\n\"Is this thing even on?\" she asked, frowning in confusion, stopping the massage to take a closer look at my crotch. Without so much as asking permission (go figure), she took my cock in her hand and examined it, pumping up and down the shaft experimentally. There was no reaction or swelling worth mentioning, although my mind was absolutely whirling at what was happening.\n\n\"Well, we don't really need him for hookah, do we?\" she concluded. \"As long as you're naked, that's what counts.\"\n\nShe then planted a gentle kiss on my manhood and smiled up at me. \"All better! He got the Cait magic healing charm!\"\n\nSeconds later, she jumped off the bed and beamed at me. \"I'll meet you downstairs. You've shown me how to set up your big hookah, how much different can it be while naked?\"\n\nAnd then she was gone.\n\nI put my hands over my eyes and tried to put my thoughts together, not to mention get control of myself.\n\nAfter all, it wasn't my fault Cait hadn't waited another ten seconds to witness the monstrous hard-on I was now sporting.\n\n***\n\nCait already had the hookah lit up by the time I had gingerly walked down the stairs to my living room. So that you have an idea of what my living room looks like, let me paint a quick picture...\n\nI had indeed gone with a Moroccan theme, with low, long wooden tables, piles of pillows or plush beanbag chairs and lovesacs spaced around the room and seven different hookahs of various sizes. The center of my floor was covered by an elegant Persian rug while silken and gauze fabrics were suspended from the ceiling to give the feeling of a Middle Eastern tent.\n\nMy walls, for contrast, were solid black. Not because of some dumb goth or emo thing, but to enhance the colours around the room and also because I'd put psychedelic designs, images and symbols on top of the base colour in blacklight paint. Turn out the main lights, turn on the UV ones subtly installed in corners, and you had a really trippy display that was perfect for smoking hookah while listening to the Doors or late-era Beatles.\n\nGranted, it was nowhere near night time, yet. It was only about eleven in the morning and Cait was apparently in the mood for naked morning hookah. So be it.\n\nI noticed she'd failed to draw the curtains shut. Thank Sanguinius there were lilac bushes that obscured the view into my house from the sidewalk. That girl...\n\nShe found my natural wood coals and was busy huffing away on the mouthpiece to bring it up to temperature. She was using my biggest hookah, which stood some forty-four inches from base to coal, so it was positioned on the floor while she was sunk into the big lovesac. She waved at me while she huffed and I could already smell that she was using my favourite brand of shisha.",
        "Probably as an apology for the unwarranted and unsolicited dick-punch. I don't like any kind of dick punch, forget that kind.\n\nCait sidled off to the side slightly while I joined her on the oversized plush surface she was adorning with her beautiful form. Even though we were now perfectly comfortable to be naked around one another, I never ceased to marvel at her body and how much it turned me on.\n\nMy hookah had attachments for three more hoses, but Cait was only using one. I guess we were sharing. I didn't mind, I'd shared a hose with her countless times before. She also turned on my sound system and was playing my Arabic synth-techno mix for the occasion. The scent of mango, melon and mint wafted through the room, a relaxing and pleasant sensation.\n\nShe seemed determined to bring the hookah up to temperature all on her own, no small task given the size of the apparatus she was matched against. But, Cait was a theatre major and had really good lungs. Watching her breasts heave up and down while she inhaled deeply was quite fascinating for me.\n\nFinally, she achieved success and blew out a huge, grey-white cloud of sweet-scented smoke. She squeaked in happiness, mission accomplished. She took another, even deeper inhale for good measure before starting to pass the hose to me. I was reaching to take it, but this had obviously been meant as a distraction from the trap she'd planned.\n\n\"Shotgun!\" she called out, somehow not expelling smoke before darting in and pressing her mouth to mine, exhaling strongly. My eyes widened as I felt the mango-mint whirlwind of air and shisha smoke roil down into my lungs. Cait cackled in glee as I sputtered and coughed, holding my throat and trying to sit up straight so I could breathe.\n\n\"What is it with you and trying to kill me today?\" I rasped, my eyes stinging and smoke no doubt coming out of my ears.\n\n\"It must be 'Cait's Evil Twin Day', I guess,\" she replied, shrugging in a non-chalant manner. \"Don't worry, Ludo, you'll enjoy it.\"\n\n\"That which doesn't kill me...\" I muttered.\n\n\"Here, I'll make it up to you,\" she said, turning and clambering onto my lap so that she was straddling me. \"Take a hit and I'll put my boobs in your face. You exhale and I'll suck it in from up here, okay?\"\n\nI had no damn idea if that was going to work, but I was more than willing to try. It also hopefully would help me forget that her pussy was hovering right above my cock, which I was desperately trying to keep from getting iron-hard. I put the mouthpiece to my lip and inhaled deeply, sucking in a great lungful of smoke. Cait then gently cradled my head between her opulent breasts and said she was ready.\n\nI think she was holding me close and tight enough that hopefully it formed a seal, but for once she also wasn't smothering me. I exhaled, keeping my eyes shut so that the smoke didn't get in them. I could feel Cait lean her head down and make an inhaling, sucking noise.\n\nShe released me from my squishy confines and I looked up at her. She smiled and opened her mouth, releasing a rather impressive number of smoke tendrils. I guess it worked reasonably well. Taking the hose from me, she inhaled again and then gently pressed her lips to mine. This time I was ready as she blew the smoke into my mouth. It was as close as we'd ever come to sharing a kiss up to this point. I'd watched her shotgun other girls countless times before, but we'd never done it ourselves.\n\nPerhaps it was a little too much like a kiss, because my cock started getting hard- the combination of the shotgun-kiss, her breasts squashed to my chest and the noticeable warmth of her pussy right above me had him primed and raring to go. The head poked her involuntarily and she squeaked a little as her eyes widened in surprise. She looked down her body between our legs and then back up at me, smirking.\n\n\"Naughty Ludo,\" she whispered, smiling slyly. \"Are you turned on by a younger girl?\"\n\n\"Wouldn't you be if she were plastered to your lap like this?\" I answered, my brain beginning to sweat.\n\n\"Well, fair enough,\" she admitted. \"I guess I'm a little turned on too. See?\"\n\nCait then nestled down a little, pressing my cock straight up flat between my belly and her pussy, which I could now detect was actually somewhat slippery. It felt wonderful, even if it wasn't quite the Heaven I was yearning for.\n\n\"Okay, so now that he's trapped, let enjoy our hookah, shall we?\" she said happily. We took turns on the hose, occasionally shotgunning, but mostly just being silly and blowing smoke in one another's faces. I spent a lot of time caressing and holding her body, while she did the same with my chest and shoulders. Aside from my throbbing hard-on that she'd trapped between us, this was a wonderful way to spend a morning.\n\nThe coal finally needed tamping and she slowly turned around on my lap, her ass now pressed to my cock. I squeezed my eyes shut and tried to keep my mind off my erection while she performed the necessary operation. Finished and with the coal temperature restored, she remained facing away but laid back against me, turning her head to smile up.\n\n\"Think I'll stay like this for a bit,\" she whispered, snuggling back. \"But I suppose we'd better figure out what to do about Mister Happy. Do you want him wedged back against your stomach by my ass like he is now?\"\n\nShe shifted around some and I shivered as I felt him stand up, her thighs closing around him and the top of my shaft splitting her pussylips. \"Or like this? Either way is fine by me, although I think I like this one better.\"\n\n\"You're killing me, you little brat.\" I growled as I reached up and squeezed her exposed breasts. She giggled and squirmed back against me, squeezing her thighs around my hardness. She settled into place and resumed smoking, blowing out great clouds while we listened to music. Cait hummed contentedly while I fondled her breasts. Not sure if she was doing it intentionally or not, but she was beginning to squirm, her ass on my lap and my cock still trapped between her legs. I also could have sworn she was getting a little wetter.\n\n\"You're a bad man, groping an innocent girl's boobies like this,\" she purred, looking up to smile at me slyly. \"While I'm trying to do naked hookah. Gottnything to say in your defence?\"\n\n\"You're a naughty girl, keeping me trapped and squirming on me,\" I replied, giving her tits a squeeze and making her shiver. \"Keep it up and I'm not responsible for what comes next.\"\n\nShe raised an eyebrow. \"Double meaning there?\" She then grinned and sighed, as if this was all a chore. \"Well, it wouldn't be the first time that you've gotten your jizz on me, would it? No worries, just let 'er fly.\"\n\nShe went back to smoking but seemed to be squirming around a bit more deliberately now. I could feel her pussylips against the top of my shaft, her creamy thighs moving around me. I squeezed and massaged her breasts harder, causing her to let out a stifled moan. Cait pressed back against me and I could feel her body getting warmer.\n\nI gently pinched her nipples and she shivered as she inhaled and then hissed, releasing the smoke. Her free hand clenched at her thigh and her writhing became deliberate. She stopped trying to smoke and closed her eyes, concentrating on squirming on my lap.\n\nI felt the familiar tingle building and pulled her back against me, squeezing and almost mauling her breasts. Cait's back arched and her hips strained as she let out a long moan. Her free hand reached down and pressed the palm against my cock, pushing it back against her pussylips. The additional stimulus of her hand was too much and I growled as I began to cum, pumping my pearly essence against her hand and her groin. Cait whimpered and I could feel everything getting wet as she came, surrendering to the pleasure. I hugged her close as she ground on my lap, my cum still smearing us both.\n\nFinally, she sagged against me, sighing in bliss. I stopped gripping her breasts, now caressing them gently. We could both feel the sticky mingling of our cum between us, but said and did nothing about it for some time, choosing to sit deep in the plush chair and say nothing. There wasn't really anything that needed to be said at this point.\n\nShe eventually recovered the hose and pressed the mouthpiece to her lips, inhaling slowly. She then tilted her head to look up at me and pressed her lips to mine, gently releasing the smoke into my mouth once again. But this felt like a kiss, and we were both happy for it.\n\nShe lazily clambered around in my lap, straddling me again as before, but more closely this time, her pussy mashed against my swollen but softening cock. We inhaled and shotgunned several more times, a thinly-veiled substitute for kissing. We noticed that the shisha was getting sharp-tasting and put the hose aside, snuggling into one another. Cait nuzzled my neck and caressed me with her fingers.\n\n\"Mmmmm, I love you, Ludo...\" she mumbled.\n\n\"I love you too, little girl.\" I replied, holding her close.\n\nShe giggled and booped my nose, smirking. \"You got your cum all over my cunt again, perv. I need to shower now. What am I going to do with you?\"\n\nShe then sat up and looked down between us, taking gentle hold of my cock. She squirmed her pussylips against it for a moment before clambering off my lap and kneeling between my legs, still holding my shaft. She wiggled it about in amusement for a few moments before squeezing along its length to get the last of my cum to ooze out of the head.\n\n\"Messy boy...\" she quipped, kissing it gently before she stood up and wiggled out of the room, heading up to use my shower. I laid there quietly for a while, staring at the ceiling and listening to the water running upstairs. I reached down beside myself to grab more wet-naps, cleaning the sticky mess off my groin and abdomen. Some time later, Cait swished into the room, beaming cheerfully and fully clothed.\n\n\"Still naked?\" she asked, feigning shock as she straddled my lap. \"Get dressed, lazybones!\"\n\nBefore I could do or say anything, she leaned in and pressed her mouth to mine, giving me a big smooch.\n\n\"Buh-bye, Trekkie!\" she chirped as she got off my lap and heading out of the living room, waving back to me. \"See you soon!\"\n\nOnce I hard her car drive away, I put my hands over my face and massaged it wearily. How much more did that damn girl I can take?\n\n***\n\nAnita gasped as I pressed her into the wall, her fingernails raking along my back. I had her lifted off the floor of the hallway, her thighs propped on top of mine and my hands on her ass cheeks, holding her steady while I slammed my hips against her forcefully. Her pussy squeezed and clenched around my cock as it slid in and out.\n\n\"Holy fuck!\" she rasped, her eyes wide as she craned her neck back and pushed her hips forward as much as she could. She almost convulsed as she began to orgasm and I snarled in her ear as I pumped my cum deep inside her.\n\n\"Gnnnnnnn, cum in me!\" she choked out. \"Get your fucking cum in me, you bastard!\"\n\nAnita didn't mind it rough and I pounded her back against the wall, driving myself inside her, battering her with my cock. Our mingling cum was almost gushing out of her overflowing pussy, trickling between her ass cheeks and down my legs, a pearlescent mess on the floor below.\n\n\"Motherfucker!\" she panted, her pale breasts squashed to my chest as she continued to criss-cross my back with red streaks. \"Breaking my fucking spine!\"\n\nWithout waiting for her okay, I turned, still holding her to me and strode into her room, just off to our right. I threw her onto the bed and before she could recover, I had flipped her onto her stomach and use my legs to pry hers wide. She scrambled to adjust, but I grabbed her by the wrists and pulled back on them, pinning her in place.\n\nShe drew in a ragged breath and then cried out as I pushed my cock into her ass.\n\nImmobilized in an almost horizontal crucifixion pose, she gasped and wheezed as I pumped in and out of her tight knot, which throbbed around me, incredibly tight. She almost sounded like she was sobbing, her body was in such turmoil.\n\nAnal always made her cum quickly, and she clenched her jaw shut and screeched in agonized pleasure, her ass squeezing me so tight I thought it would push my cock out entirely. Once her orgasm passed, she went completely limp, as if she'd fainted. Her layered back hair fell off her shoulders and around her face, her slender frame sagging over the bed.\n\nI put her down on the mattress, releasing her hands and simply leaned over her, waiting for her to recover. I didn't pull my cock out of her, she liked it best when I waited for her. Anita may have been a thin little scene-girl, but she was tougher than she looked. She loved how much larger than her I was and how I could completely overpower and ragdoll her. She'd admitted to something of a rape fetish, but only under safe circumstances.\n\nAnd she trusted me completely.\n\nIt was nearly two minutes before she stirred, slowly lifting her torso off the bed and taking several slow breaths. She then gently crawled forward on the bed, clenching her ass around me to make sure I followed without pulling out of her. She reached her pillow and put her head on it, slowly turning on her side. We both shivered as her ass shifted around my cock. She finally made it onto her back and pulled me down into an embrace. Our mouths met and tongues danced and tangled as we shared one of those rare kisses. It just seemed fitting at the moment.\n\nShe finally broke the kiss and sighed, looking up at me. \"I can tell from the way you just tried to tear me in half that you and Cait haven't fucked yet.\"\n\n\"Guilty as charged.\" I admitted. \"Even after naked hookah.\"\n\n\"Jesus, Mary, Joseph and the donkey,\" she muttered. \"I hope she puts out soon, I can't take much more of this. Get on that, will you? Literally.\"\n\n\"Oh, please,\" I replied, pushing my hips forward to send my dick deeper into her ass and making her shudder. \"You'd be perfectly happy to get fucked to death. You emo kids are all about beautiful deaths.\"\n\n\"Nothing beautiful about your body exploding from being filled up with jizz,\" Anita grunted. \"I've watched Urotsukidoji with you, I know what can happen.\"\n\nShe reached up and touched my face, looking into my eyes. \"It's so obvious she's crazy about you, I have no idea why she's making you both wait.\"\n\nI shrugged. \"I have no clue, and it's making me nuts. But I can't take that choice away from her, you know that. It sounds fun to just reach over and fuck her, and she'd probably enjoy it, but that's not who I am. The moment she says the buffet is open, trust me, I'm wrecking it. But I'm not diving in before the doors are officially unlocked and I'm invited in.\"\n\nAnita burst out laughing, the action making her sphincter contract suddenly around my cock and nearly popping my head off with the back-pressure. She laughed for almost thirty seconds before wiping away a tear of mirth.\n\n\"I can always tell when you're hungry, you use food metaphors. Get off me, you giant gorilla, and we'll shower and I'll let you take me somewhere fancy for dinner.\"\n\nIt seemed like a fair arrangement, seeing as how she had just finished allowing me to maul her and bruise her brain stem with my cock. And I really was hungry. We showered and got dressed, heading out to a local high-end restaurant. Anita didn't eat much red meat, but she was a total whore for seafood.\n\nFour lobsters and endless shrimp and scallops later...\n\n\"God, I'm so fucked up,\" Anita slurred, holding on to the glass of her fourth daquiri as if it was the only thing keeping her vertical. One of the reasons we came here was because they never checked her ID before giving her alcohol. \"Like, bad judgement fucked up.\"\n\nShe leaned forward, grinning lop-sidedly and whispering. \"Should I crawl under the table an' suck your dick? Maybe then I'll hike my panties down and spike myself on that cock while I'm doubled up under the table. I'm flexible enough.\"\n\n\"I'd love that, but we like it here and we'd never be allowed back in when we inevitably get caught,\" I replied. \"Forget for a moment the public indecency charges involved.\"\n\n\"Pfffft, we could be charged with that for the amount of goddamn lobster we eat,\" she snorted. She looked up somewhat dazedly at our server, who came up at that moment. Drunk and having no filter, Anita asked the obvious question. \"D'you think this place'd kick us out an' have us arrested if I sucked his dick under the table and fucked him?\"\n\nOur server's eyes widened for a moment, but to her credit, she didn't lose her composure and answered readily. \"To be honest, we all assumed that he was your dad. We'd probably all have been too shocked at the incest to remember to call the cops. But yeah, you wouldn't be back, I imagine.\"\n\n\"Damn.\" Anita muttered, scowling at her nearly empty drink, as if it was the cause of her troubles.\n\n\"I mean, I'd've thought it was pretty hot anyway, but still weird,\" our server continued. \"Pretty scene girl and her hot Viking dad? Sounds like a damn good porn movie to me.\"\n\nShe left to get Anita another daquiri and another Guinness for me. I looked at Anita, who was staring at me intently. I could tell the wheels were turning in her head.\n\n\"What?\" I asked warily.\n\n\"I think I have an idea about how to boost my cam numbers...\" she murmured, still studying me.\n\n***\n\nAuthor's Notes: I really do miss Cait and Anita. Le sigh.\n\nDon't feel bad for Solitaire, she likes to get smacked around. Joaquin and I still can't look one another in the eyes. His just seem blank and expressionless to me, ever since that fateful day.\n\nI promise, I'm not gonna go all Overfiend on Anita and made her explode by filling her to bursting with cum. I'd never get my security deposit back.\n\nOn a side note, trying to write erotica while listening to a Bay City Rollers anthology is a very trippy experience. Don't try this at home, kiddies, I'm a trained professional mental case.\n\nNot a lot to mention, I'm enjoying having a consistent schedule working on one show from now on and for the foreseeable future. No, don't ask what it is, I signed a very strict non-disclosure agreement. I'm also hoping to get a little bit of work on Deadpool II, since the big, explodey bits are apparently being filmed here in TDot (environmental concerns about the fish stocks in the water surrounding Vancouver, I guess. Blowing up a freighter will do that). Wish me luck on that front.\n\nWell, gonna proof-read this and submit it. Alex &amp; Alexa are up next. With any luck, they'll be ready in about two weeks. Here's to staying focused on writing you don't get paid for.\n\nKeep your stick on the ice!\n\n- Management"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "romance",
        "age difference",
        "toys",
        "humour",
        "may-december",
        "younger woman",
        "older man",
        "may-december romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/like-a-daughter-to-me-ch-02"
}