{
    "title": "Still You Want Me Ch. 08",
    "pages": [
        "Thank you all for all your encouragement! UK Student, I hope you nailed your test, this chapter is dedicated to you and all the students with exams!\n\nAgain, I cannot thank LaRascasse for helping me with grammar and Oldnakeddad for really polishing these stories and making them shine! Miracle workers.\n\n(All characters are over 18 and this is a work of fiction with a dash of my own life experience. Not the TFB part, sadly.)\n\nKeep the comments and feedback coming in. I love reading and engaging!\n\nEnjoy the show!!\n\n* * COLIN * *\n\n[Charles] Where'd you go?\n\n[Charles] Okay, I'm coming to your apartment.\n\n[Charles] I'm standing outside, come out.\n\nOh, God. I don't want to face him!\n\nEverything happened so fast and I don't know how to explain any of it to him because I don't know what happened or why I reacted the way I did.\n\nWearing sweats and a threadbare shirt, I open the door and step outside. It's fucking cold at midnight!\n\nI casually ask him.\n\n\"What's up?\"\n\nHis concern is obvious and so is the fact he's cold and shivering.\n\n\"Why'd you leave the bar like that? What's going on?\"\n\nI don't understand why he cares? He has a new boyfriend! I lie.\n\n\"I was tired, so I decided to go home.\"\n\nHe looks at me and crosses his arms, he knows I'm full of shit and he's not interested in any of it.\n\n\"I don't think so! Can we go in and talk?\"\n\nShit! I have pictures of my parents everywhere!\n\n\"Uh?\"\n\nCat's got my tongue.\n\n\"Seriously, Colin? We've been friends for seven months. I don't care if your apartment is messy or covered in One Direction posters. I want to go in, it's freaking cold outside!\"\n\nIt's clear that Charlie's done waiting. I hesitate.\n\n\"Okay?\"\n\nI don't have any pictures in the kitchen, maybe we can talk in there?\n\nI lead him upstairs, through the laundry room, and to the kitchen island counter. I point to one of the bar stools that will have him facing away from the living room. Still in a bad mood from watching him and Ben together, I snip at him.\n\n\"Why are you here? Why aren't you with Ben?\"\n\n\"Ben's at the club...I think? I don't know.\"\n\nHis blue eyes relay concern as he continues.\n\n\"You just took off! You left without saying anything to anyone. I was very worried!\"\n\n\"Well, I'm okay and safe at home.\"\n\nI didn't mean for it to come out the way it did. I feel like a stubborn thirteen-year-old girl fighting with her parents, 'OMG, Dad! Stay out of my life! I'm totally a grown adult so I don't need you!', but also like, 'Dad, can I have twenty bucks for the movies and will you drive me there and stay with me because I'm scared?'.\n\n\"God, Colin, shut up! Tell me what the fuck is wrong. I don't want to sit here while you pout like a bitch. If you tell me you're okay, I'll leave, but you can't ignore me or be angry with me.\"\n\nWhoa, this is unexpected behavior. Charlie's never agitated with me, none-the-less when he's at fault, too!\n\n\"Get off of your high horse, Charlie. I asked you to go out with me! It was supposed to be my night, but you hooked up with someone else and left me as the fifth wheel.\"\n\nAll of a sudden I can hear myself and I'm embarrassed! I slouch against the counter.\n\n\"When I say it out loud, it sounds stupid.\"\n\n\"That's because it is stupid! Ben was my college roommate. I ran into him at the bar. He happens to be here for one night so I asked if he wanted to join our table and he didn't have a hotel room, yet, so I invited him to stay in my guest room.\"\n\n\"Oh. If I didn't feel stupid before...I do now!\"\n\nI put my face in my hands and we sit in silence because I don't know what to say or why I'm acting the way I am, either.\n\n\"Is being the fifth wheel the only thing that's bothering you?\"\n\nHe's staring at me, again, with his dark-blue eyes. It's as if he knows something I don't, but he's asking me a question that I don't have an answer to. I quickly nod, and with a false finality, I gently clap my hands together.\n\n\"Uh, yeah, I think that pretty much covers it.\"\n\nHe narrows his eyes at me, unbelieving.\n\n\"Okay. So, can I go back to the club?\"\n\n\"Yes, of course!\"\n\n\"And you won't have a problem if I find another guy and take him home with no intentions of having him stay in my guest bedroom?\"\n\nFuck yes, I'll have a problem! But that's not what I say.\n\n\"Is that what you want to do?\"\n\nI'm flipping the question like a boss. I should be a psychologist!\n\nThe barstool makes a loud noise as he pushes it back and abruptly stands.\n\n\"Alright, Colin, have a goodnight.\"\n\nI panic as he heads for the stairs! I don't want him to leave! I especially don't want him to leave and go find Grindr Guy or anyone else!\n\n\"Where are you going?!\"\n\n\"Back to the club. I think I might pick up a guy\u2014or maybe two? We'll see. The night is young!\"\n\nHe doesn't look at me as he continues to walk away.\n\nShit!\n\n\"Wait!\"\n\nI don't want him to go! I anxiously tap my fists on the countertop.\n\n\"Just stay for a minute!\"\n\nHe turns around and, while standing inside of the door frame that separates the kitchen from the laundry room, stares at me as he waits for me to tell him the truth.\n\nWhat the fuck is the truth?\n\n\"Charlie, I don't want you to go back to the club.\"\n\n\"Why?\"\n\nI'm frustrated. Not with him for asking, but with myself for not knowing why so, because of my frustration, I yell.\n\n\"I don't know!\"\n\nHe's clearly not amused with my response and turns to leave, again.\n\n\"Cool story, bro.\"\n\n\"I'm serious, Charlie! Fuck, I don't know!\"\n\nHe stands silently with his arms crossed and his face has softened some, but not much.\n\n\"Argh! Charlie!\"\n\nI pause before yelling with my arms flailing about.\n\n\"Do you really want to go back to the club and take home a strange guy?\"\n\nHe answers confidently and without hesitation.\n\n\"No.\"\n\n\"Why not?\"\n\n\"Colin, during the last seven months, I've only taken one guy home and I shared my bed with him for a whole month. He's the only person I want to take home and share my bed with, again!\"\n\nHo-ly-shit! I know this is a pivotal moment in my life so I need to choose my next words wisely.\n\n*Two minutes later*\n\nOr just acknowledge the fact that Charlie has confessed his feelings for me and they are sweet and wonderful!\n\n\"Cool beans! This has been a really good conversation. Let's do it again, soon!\"\n\nHis eyes look very dejected as he walks away.\n\n* * CHARLES * *\n\n\"\u2014and he didn't say anything!?\"\n\nRyan and Quinn look horrified.\n\n\"Yep. Two minutes' worth of silence!\"\n\nI take a shot of whatever they bought me and grimace at the taste\u2014and the situation.\n\n\"Fuck!\"\n\nThey nod in agreement.\n\nBen comes back to the table, frowning, he knows that whatever happened was bad but doesn't say anything, he has someone with him.\n\n\"Hey, you're back! This is Tim Hall, my coworker.\"\n\nTim is very tall (maybe six feet, five inches), has brown hair, brown eyes, and is close to my age. He was in very good shape, at one time, but didn't follow through with it. He's also attractive, but not prime anymore. Very forgettable.\n\nThey sit at the table. Ben's watching me and I give him a head shake meaning, I don't want to talk about it, and he respects my silent request.\n\n\"So you were Benny's roommate in college, in Washington, eh? That must've been a riot! I wish he would've been my roommate at UCLA! That would've been a bomb!\"\n\nTim appears to be chill and is eager to hear all about our shenanigans so I'll let Ben tell the tales of our run together. Once they finish he returns his attention to me.\n\n\"So, Ben tells me you work for ClarkeCo.\"\n\n\"Yep.\"\n\nI'm normally a lot more interested in talking about work, sue me for being preoccupied. It's not like I just confessed my feelings to my best friend only to be rejected.\n\nOh wait! I did!\n\nTim continues.\n\n\"I grew up with Mr. Clarke's son, Stan. We went to school together, but I haven't seen or heard from him since graduation. I thought I heard he was working for his dad now and he's gotten a bunch of degrees or something?\"\n\n\"Not that I know of.\"\n\nI look at Ryan to see if he knows something I don't, but looks just as confused as I am. I return my attention to Tim.\n\n\"Actually, I've never heard much about Mr. Clarke's son. What's he like?\"\n\nStans always fascinated me. I mean, I know his parents. I've had dinner at his house several times a year for the last few years, yet, I've never met him and barely know anything about him.\n\n\"He's somewhat of a freak. Maybe not a true freak, but he's super weird! He's like five feet, and some change, tall and less than one hundred pounds. I remember he had long, dark emo hair, thick glasses, and he was super geeky! It's hard to imagine such a loser came from so much money. I feel bad because we gave him a hard time and I do mean a very hard time!\"\n\nHe shrugs apologetically, but a blind person can tell it's not sincere. I've seen pictures of Stan at his parents' house and he was definitely geeky, but not unattractive, just small and insecure looking.\n\n\"The rumor is, his trust fund is eighty-five million dollars. I guess it's more of a trust fund plus inheritance wrapped into one package. After his parents die, he'll get the house and the company, but nothing else. All of their money is going elsewhere. I can't imagine having that much money. My trust fund is only two million. I'm not complaining, but given a chance, I'd try to imagine eighty-five mill!\"\n\nHe smiles with wonder at the thought.\n\n\"All I'm saying is, I don't feel bad for picking on him because he has enough money to do whatever the fuck he wants. Here I am, working, and he's probably sleeping his way through life, wherever the hell he's at, with not a care in the world. Seriously? Eighty-five million!\"\n\nHe whistles with appreciation. I can't imagine eighty-five million dollars. My trust fund isn't shabby, but I don't think my parents are worth anywhere near that much!\n\nI'm aware that Colin would really hate this guy. Even though I think Tim seems nice, I suddenly don't like him. Since when am I the guy that hates rich douchebags? Seriously! Less than a year ago, I was Tim! Luckily, Ben and Tim go somewhere else, the bar or the dance floor, I don't know.\n\n\"What are you going to do about Colin?\"\n\n\"I don't know. There's not much to do. He knows how I feel so either he says something or we forget it happened. Are we done talking about this?\"\n\nI look at them in case they have any objections, but they don't.\n\n\"Alright, I'm going to go take a piss. BRB.\"\n\nThey both chuckle at my lame valley girl impression.\n\n* * *\n\nI go back to find Colin has returned and is sitting at the table with Ryan and Quinn. I stop for a moment before cautiously taking my seat across from him.\n\nThe tension at the table is suffocating. My heart's racing and I don't know if I'm nervous or embarrassed about my confession.\n\nBoth! Definitely both.\n\nWe're staring at each other and I'm trying to read his expression when he finally opens his mouth to say something, only to be interrupted by Ben and Tim's return.\n\n\"You're back, too! This is so cool!\"\n\nBen's officially drunk and lacks all social awareness.\n\n\"Tim Hall, this is Colin Clarke. He works with Ryan and Charles!\"\n\nTim's staring at Colin, which is a normal occurrence because Colin is ridiculously attractive, but I'm not in the mood for it today. He can keep his eyes to himself.\n\n\"Nice to meet you, Colin.\"\n\nHe pauses for a second.\n\n\"You look very familiar! Have we met before?\"\n\nFuck no you son-of-a-bitch! Colin's mine! Try your pick up line on someone else.\n\nI look at Colin, who looks petrified, as he shakes his head no and looks at me.\n\n\"Charlie, can we go and talk? I need to get out of here.\"\n\n\"Yeah, absolutely.\"\n\nI'm getting ready to slide out of my seat when Tim, still staring at Colin, says again.\n\n\"You look so familiar!\"\n\nColin's squirming and asks.\n\n\"Are you ready, Charles?\"\n\nHis eyes are pleading to be anywhere other than here, but Tim's clearly not ready to let Colin go, a sentiment I understand.\n\n\"Where'd you go to college?\"\n\nI feel the need to let Tim know that there's no way they know each other so I clarify for him.\n\n\"He didn't go to school in California, he went to Columbia.\"\n\nInstantly, something in his eyes click and whatever he's been searching for has been discovered.\n\n\"Stanley. Colin. Fucking Clarke the Third! I thought you looked familiar\u2014though, you look nothing like I remember!\"\n\nHe leans back and slaps his hands together with celebration.\n\nCome-a-what?\n\nEveryone, including myself, turns to Colin, who's trying to quickly recover from this monumental revelation.\n\n\"Hey, Tim! I thought the name sounded familiar.\"\n\nHe smiles, unconvincingly.\n\n\"Dude, look at you! Who would've guessed! You're not a shrimp, not anymore! You're a damn lobster! You're hardly recognizable. I'll bet you get all of the ladies!\"\n\nTim's grinning from ear to ear. The rest of us, unsure if we understand what's happening, silently watch this unfold.\n\n\"Uh, not exactly. I'm currently sitting in a gay club for a reason.\"\n\nTim looks around.\n\n\"Oh, fuck! Is this a gay club? That explains so much!\"\n\nHis face is priceless with shock and epiphany. The rest of us can't help ourselves as we start laughing. I don't care what's going on here, that's funny shit! Tim pats Ben's back and says.\n\n\"Ben got me good on that one!\"\n\nColin looks at me and his eyes plead his apology. Suddenly, Tim is interested in this, so-called, freak.\n\nMy freak.\n\n\"So, are you working with your dad?\"\n\n\"No, I don't work with my dad, but I do work for my dad. I'm an associate in marketing, the same as Charles is.\"\n\nColin's looking at me for some sort of approval and jokes.\n\n\"I'm sure he makes more than I do, although I have more degrees and I'm smarter, but he's worked there longer. The same benefit package, the same vacation, and the same one hour lunch.\"\n\n\"You're dad's so lame! I'd be pissed if my dad did that to me.\"\n\n\"I'm sure dad would've let me come in at the top if I'd wanted to, but I didn't, so I'm not!\"\n\nColin looks beyond annoyed by this point and my mind is still reeling.\n\nIs he really Mr. Clarke's son?\n\n\"I do need to get going. Tim, it was good seeing you and, Ben, it was nice meeting you.\"\n\nColin removes himself from the table and grabs his jacket. I'm not sure if he actually wants me to go with him now. Was he only using me to get him out of the club?\n\nAlso, he's Mr. Clarke's son?!\n\n\"Same here. I wish we had more time to catch up. Hey! There's a bunch of us going to Mexico for ten days in November. You should join us!\"\n\nFor a moment I imagine Colin, on a beach in Mexico, with a group of TFB's that use to bully him. I'm sure he'll jump at the opportunity, not.\n\n\"Oh, yeah? I don't think so, I've only been working for seven months so I'm not going to request time off, but thanks for the offer.\"\n\nColin looks at me and nods for me to go with him.\n\nHe do doesn't have to ask me twice. Good-bye, everyone! See you later!\n\nI glance at Ryan and Quinn and they both mouth, good luck!\n\n* * COLIN * *\n\nIt's a fifteen minute walk to my apartment from the club and I'm not sure what to say. I'm not sure I want to talk anymore, not after everything that's happened. Charlie finally interrupts the silence with a question. Well, it's not so much a question as a confirmation statement.\n\n\"So, you're Stanley's son.\"\n\nThere's no judgement in his voice\u2014thank you, Jesus!\n\n\"It would appear so.\"\n\n\"You know, things have been so strange since you started work. Very weird things kept happening and I couldn't put my finger on it\u2014but it all makes sense now.\"\n\nThankfully, there's a little humor in his voice.\n\n\"You're not mad?\"\n\n\"Yes. No. I don't know! I mean, I think I get it. I know you well enough to understand why you did it, but I'm somewhat upset because I feel as though you lied to me. Obviously, you don't owe me the truth or anything...\"\n\nHis voice is soft and genuine, but tainted with a little twinge of hurt, which I hate.\n\n\"If you would've started as the son of the CEO with a big trust fund and all of the privileges, I don't think we would've become friends. l would've tried to befriend you for all of the wrong reasons and I'm sure you never would've given me the time of day.\"\n\nHe's right. It feels great to hear him acknowledge this fundamental difference between us.\n\n\"You know, I was going to tell you! I really was! I even told dad I was going to tell you. I was trying to find the right time, I didn't mean for Tim to beat me to the punch.\"\n\n\"Why would I have been a part of that conversation with your dad?\"\n\n\"Because you're my best friend, Charlie. For that reason alone, I owe you the truth.\"\n\nHe doesn't respond, so we walk in silence. Not much is happening at one thirty in the morning and most of the homeless are asleep.\n\n\"Colin, did you actually want to talk or was it only an excuse to leave? My car is parked at the club and we're currently walking in the opposite direction.\"\n\nHe's analyzing the distance as he looks back toward the club.\n\n\"I wouldn't use that as an excuse, at least not after our earlier conversation. I do want to talk to you, but I'm not exactly sure what I want to say. Can you let me verbally process my thoughts?\"\n\n\"Yes.\"\n\n\"You're my best friend. The best friend I've ever had and I'd hate to lose that. At the same time, I've been feeling more than friendship for you and I'm not sure I can articulate those feelings correctly, but I'll try.\"\n\nI try to collect my thoughts\u2014how do I explain something that I don't understand myself?\n\n\"Do you remember the other day at the gym when that loser was flirting with you?\"\n\nHe laughs.\n\n\"Yeah, I vaguely recall you going crazy.\"\n\n\"Yeah, no shit! One minute, I was drooling over your muscles and your, barely there, gym shirt. I was super confused as to why I was having all of those sexual thoughts about you, my best friend! The next minute, I wanted to rip the face off of that guy for flirting with you, but I wasn't exactly sure why. That day at the gym was beyond confusing for me. Then, that night when we were wrestling on the bed, I kind of wanted to kiss you. No, not kind of, I definitely wanted to kiss you!\"\n\nI want to look at Charlie to gage his reaction, but I can't.\n\n\"And tonight, when we were dancing? I don't know!\"\n\nI toss my hands up. I'm frustrated with my inability to know my feelings enough to communicate them.\n\n\"I guess I always want to be around you, like that. I like being close and intimate with you.\"\n\nWe continue walking.\n\n\"But, I don't know if my feelings are legitimate! Are they because I was living with you and sharing a bed with you? Because I miss Jesse? Because I spend all day and every day with you? All of this after you picked me up from my broken heart? That could confuse anyone!\n\n\"That's why I decided to move back to my apartment, to try and figure myself out. I didn't expect tonight to happen like this! I assumed, or hoped, we'd come out and it would just be us, me and you, like it's been for the last month.\n\n\"It never occurred to me that you'd find a guy. I mean, you haven't paid attention to anyone in months. I know, now, you didn't actually find anyone tonight, but in that moment I thought you did? I know, I'm so stupid.\"\n\nOkay. I think I'm done, which is great because we've arrived at my apartment.\n\n\"What do we do now? I'm all in and you're...undecided? I don't want to do anything that would jeopardize my relationship with you, Colin\u2014friendship or romantic.\"\n\nCharlie's standing in front of me with his hands in the pockets of his red jacket as it highlights his blonde hair, or maybe it's the street light? Either way, he looks incredible! I never imagined we'd be here and talking about having feelings for each other.",
        "\"Would it be selfish of me to ask for us to be only friends for the time being? I want to make sure my feelings for you are legitimate and, also, I was hiding a big thing about me. I want time to talk about it and to share that part of me. I think it's important for me and for you.\"\n\nI've always told myself that my secret doesn't change anything, but I'm smart enough to know it does. There's a huge part of my life that he doesn't know about and it defines a lot of who I am and why.\n\n\"I can respect that, I'd actually prefer it. I don't want to, but I can wait as long as you did if it means that you'll know, without a doubt, that you want to be with me.\"\n\nI can't speak for Charles, but I'm relieved, to say the least, that everything is out in the open and to have all of the truths spoken.\n\n\"Colin, I'm glad we had this talk, but I should be going to go back to the club and get my car.\"\n\nHe looks at me with hesitation and asks.\n\n\"Is this going to be awkward now? I hope it isn't.\"\n\n\"Maybe, a little.\"\n\nI tease and he laughs before asking.\n\n\"Can I give you a hug or is that asking too much?\"\n\nDefinitely, not too much!\n\nThe instant I feel his touch, all of the bottled up emotions of today's events vanish. I can't say electrifying is the word, but it never felt like this when I touched Jesse...this is, different. A good different! We hug and rest our heads on the other's shoulder. I don't want to let go.\n\n\"Okay. Yeah, I needed that!\"\n\nHe smiles a real smile that makes his dimple pop.\n\n\"I'm going to go now.\"\n\nNow that he's here and the door between us is open, I don't want him to go. The hesitations and questions I'd been carrying around evaporated when we hugged. It's not that the hug itself was that good, I mean, I was great, but I think it's more the understanding that my feelings aren't taboo or isolated only to me. I gesture toward my apartment door.\n\n\"Would you like to come up?\"\n\n\"Um, of course I want to. But it's already one thirty in the morning and I need to get my car. I'm not going to get home until two thirty as it is.\"\n\nI laugh at the mix up.\n\n\"I guess I meant, do you want to stay the night? I mean, we've been doing it for a month, I think one more night is okay.\"\n\nI start to press the code to the door.\n\n\"Ah, no. Sorry.\"\n\nI'm a little taken aback, I really didn't expect him to say no. He looks at a me and I can tell it's killing him.\n\n\"I don't want to jeopardize anything. If your confusion is because we've slept together every night and generally spend too much time together, then I want to respect that boundary.\"\n\nHe gives a regretful smile.\n\n\"Goodnight, Colin.\"\n\nI understand his reasoning and it's fundamentally sound, but that doesn't stop the disappointment from overwhelming me.\n\n\"Okay, goodnight. Will you at least text me when you get home? You know, let me know you're safe?\"\n\nHe nods and walks back to the club. I go upstairs and lay on my own bed, alone, for the first time in four weeks. It doesn't take long to realize how naive and stupid I've been, how clear it is that he feels something for me, and how I'd clearly been falling for him.\n\nI'm so stupid! I smash my head against my pillow, repeatedly. I definitely want to be with Charles! I still want to talk to him about me, now that I'm fully out to him about everything, but tonight, I want him in my bed and with our arms wrapped around each other.\n\n* * CHARLES * *\n\nI look at my phone to find out who's texting me at one forty-three a.m.!\n\n[Colin] I'm so stupid! Please, come back!\n\nYes!\n\nWithout thinking, I turn toward Colin's and start walking fast. This is actually happening! I've waited so long for this!\n\nI stop, instantly. No, I can't. If I rush back, and if we rush things, we might make a mistake. I want to be with Colin tonight, but I'd rather be with Colin in fifteen years from tonight. I stare at my phone, happily re-reading his text. Finally, I regretfully respond.\n\n[Charles] Not tonight, Colin. Sorry.\n\n[Colin] I'm not trying to seduce you, asshole.\n\nOh but I wish you were!\n\n[Charles] I know, but the answer is still no.\n\n[Colin] I want to be with you.\n\nOh, fuck. I stop, again, turn around, and face the direction of his apartment as my mind fights itself.\n\nNo? Yes? Maybe? Maybe yes, but only to talk? Nothing sexual. Maybe a kiss? No, nothing! Ugh!\n\n[Charles] I thought you weren't trying to seduce me?\n\n[Colin] I'm not, that's the only thing I want to do. I just want to be with you.\n\n[Charles] Let's wait until after we talk, first, but not tonight.\n\n[Charles] Let the record reflect that I turned down Colin Clarke. I'm so fucking respectful that I hate myself!\n\n[Colin] Yeah, well, I hate you, too. Drive safe.\n\nI don't even recognize myself. Who am I? I just turned down sharing a bed with Colin, knowing we'd probably fool around.\n\nGod, I want to fool around with him! Frustrated at what I've given up, I kick a small pebble on the sidewalk and send it bouncing down the street. I love and hate the person I am with Colin.\n\n* * *\n\n[Charles] I'm home safe. Night!\n\n* * *\n\nI wake up with a start. Is that my doorbell? I grab my phone to check the time and notice three things: first, it's two minutes after seven a.m.; second, I have texts from Colin; and third, I have four missed calls.\n\n[Colin] Six thirty a.m. - I'm coming over.\n\n[Colin] One minute after seven - Wake up, asshole. I'm outside.\n\nShit! Colin's a morning person, but not like this! Something must be wrong so I wrap a blanket around my naked body and hustle to the front door where Colin playfully says.\n\n\"What the hell took you so long?\"\n\nHe looks me over and laughs as he steps past me.\n\n\"Did I miss the toga party?\"\n\nHe's wearing a pair of jeans and a charcoal-grey zip fleece. Simple, casual, and one hundred percent smoking hot! He's also wearing his glasses today, so yeah, my morning wood is at full salute!\n\n\"I was sleeping and my phone was on silent. I thought something was wrong so I hurried to the door.\"\n\nHe eyes me suspiciously.\n\n\"You're naked?\"\n\n\"No, I'm wearing this sheet.\"\n\nI do the Vanna White sweep over my lovely toga then seductively raise one brow.\n\n\"But yes, I normally sleep naked. I wore clothes before only because you were here.\"\n\n\"So, you're telling me you wore clothes when you had a boy in your bed for a whole month, but sleep naked your first night alone? That's a blow to my self-esteem!\"\n\nColin pouts his lips and starts tugging at my toga as he tries to see underneath. I'm tempted to let him have his way, but you know me...Mr. Respectful. I slap his hand away.\n\n\"Get your dirty hands off. I'm saving myself!\"\n\nI go to my bedroom to change into a tight pair of briefs to help control the massive boner I'm sporting, sweatpants, and a long sleeve shirt that will hopefully help cover everything, then return to the kitchen, and Colin.\n\n\"Okay, what's so important that you had to interrupt my eight hours of beauty rest? Some of us had to commute home last night, you know.\"\n\nI start making coffee and silently offer tea, of which he accepts.\n\n\"I can't have Mr. Respectable deny me, again. You know, in the future? I came to talk and get stuff sorted out.\"\n\nHe takes a seat at the table. Colin's full of energy and happy, to boot. I, on the other hand, am barely awake. My brain is struggling to be present, but Colin's bubbly optimism is starting to wake me up. I smile at him, a little teasingly. Mostly, though, I'm very anxious.\n\n\"Okay, talk.\"\n\nMy stomach is a combination of butterflies and sailor knots. I'm giddy about Colin's eagerness to talk, so much so that he felt the need to show up at seven a.m., yet, nervous because I don't know what's going to be said. You'd think, after months of pining over him, I'd be more prepared for this moment.\n\nNope!\n\n\"Oh. Okay. Well, I should've expected you to be straight and to the point. Blah. I'm really nervous all of a sudden.\"\n\nAll of the bravado he came in with has evaporated.\n\n\"I suppose I should explain why I made a big secret about my life although I probably don't have to explain social politics to you?\"\n\nI shake my head that it's not necessary because I'm fully aware.\n\n\"I figured. And I'll bet you were always popular, good at sports, attractive, and outgoing.\"\n\nYep.\n\n\"You and I didn't have the same experiences. My home life was great and my parents were amazing, but I didn't align with the physical or social expectation of wealth. During high school, because I was tiny and unappealing, I was relentlessly bullied. I'm sure there were kids out there that were bullied worse, but you can't justify that to a kid who's being picked on.\n\n\"My dad was the wealthiest of my friends' dads. The kids couldn't join me because I was a social pariah, so they beat me...emotionally, and a little physically. Then, during College, I grew up and wasn't a tiny loser anymore. Out of nowhere, people were noticing me. I was trying to transition away from My old life, to Colin, but my identity wasn't a secret so everyone knew how much money I had.\n\n\"All of a sudden, I was desirable and everyone wanted me. I've always hated the way the social system of the wealthy works. No one ever wants to know...me! They only want to be associated with my money. I hate being used and relationships being propositioned for business or personal gain. It's shitty!\n\n\"But that's the life, I guess. I want nothing to do with it, though. I know there are parts that are impossible and there are a lot of things I can't control, but I can control going to work like a regular Joe and earning respect based off of merit, not expectation.\n\n\"Yes, I'll probably take my dad's place, someday\u2014partially because I'm his son, but mostly because I'm a badass who grew up in the ClarkeCo building, I learned the ropes as a child, I worked hard in college, I'll have learned everything about the company, and I'll have worked from the bottom to the top. I'll be CEO, not because it'll be given to me, but because I'll have fucking earned it!\"\n\nHe lets out a breath of exhaustion.\n\n\"Any questions?\"\n\nNot really, most of what he said is as I'd expected. I'd pieced together those bits, but it's good to have everything confirmed.\n\n\"Yes. If you grew up here and everyone knows you, how'd you hide it for over seven months?\"\n\n\"I have no idea, really. I'm sure the name change and the fact I completely transformed are the two main reasons. My dad had some confidential meetings with the employees, executives, and board members that knew me and basically threatened certain death. It didn't work, not really, they're all terrible with secrets. Brett's the worst, though! No, actually, my dad's the worst, but I see Brett more so he's more of the imminent danger.\"\n\n\"I thought Brett was maybe a closet gay in love with you!\"\n\nWe both laugh because it's true, Brett did love Colin, just not the way I thought.\n\n\"I guess those solo meetings, when you first started, make sense now.\"\n\nI joke.\n\n\"Maybe now, I can finally get over that!\"\n\n\"For the record, I was angry about that. I told Brett, and dad, that I didn't want to do it. Nepotism was exactly what I was trying to avoid.\"\n\nNow that I think back, I do remember him being somewhat frustrated.\n\n\"Colin, can I ask you a question? It's not important. It's more out of curiosity to see how accurate Tim was. Is your trust fund really eighty-five million dollars? I swear, I don't care. I have my own money. More, now that you made me feel guilty about spending too much.\"\n\nHe rolls his eyes.\n\n\"You care, everyone cares, it's part of life. To answer your question, it isn't eighty-five million dollars, but it's close enough that he isn't wrong.\"\n\nHe shrugs. It's obvious he doesn't like talking about this particular subject and more obvious that he doesn't plan to make it a habit.\n\n\"What do you do with it? I mean, you don't spend any money and you live below your salary. Is your money just sitting there?\"\n\nI'm genuinely curious what happens to roughly eighty-five million dollars when you live like a poor person.\n\n\"I guess most of its invested so it's hard at work making more money. I give exactly, a shit ton of money, away every year to non-profit organizations, mainly in Oregon, but not exclusively. I don't buy stuff, but I spend money on experiences. I've been busy this year because of work, but I normally travel when possible, that's the thing I do.\"\n\nWe continue talking about this and more\u2014his life, his family, his painful experiences, and his boyfriends or lack there of. I'm happy to have everything on the table, there's so much I didn't know! So many things he felt like he couldn't share because he wasn't honest about who he was. I should be angry, but I'm just happy to be sitting here with him, talking about everything. Finally, Colin asks.\n\n\"So, do you think we've talked enough? It's almost three in the afternoon and I'm hungry!\"\n\nI tease him.\n\n\"I know you better now than I did yesterday!\"\n\nHe leans forward and brushes his lips against mine.\n\n\"Good, now I get to satisfy my hunger!\"\n\nWait. What? I slightly pull away.\n\n\"What are you doing?\"\n\nHe leans in to capture my lips, again.\n\n\"I'm trying to kiss my boyfriend.\"\n\n\"Boyfriend?\"\n\nI'm so happy and so confused. I don't want to question him, but I thought he said he needed time and space? What if I'm a rebound? What if he's confused because of all the nights we spent together?\n\n\"I thought we talked about everything so, you know, we could start dating?\"\n\nColin shimmies onto my lap, straddles my hips, and presses himself forward.\n\nOh, holy hell!\n\nI don't know what to do with my hands, I feel like such a virgin. His body's innocently, or not so innocently, putting pressure on all of the right spots. I shouldn't. I want to, but I can't. I firmly place my hands palm down on the couch. I want to grab his waist and press out bodies together, but if I do, I'll lose all my resolve and end up raping him, I'd be a total savage.\n\n\"Colin, last night you said you weren't sure if your feelings were legitimate. Those were your words. You wanted us to talk in addition to you sorting out your feelings. That was fourteen hours ago and I don't believe you've figured everything out, yet.\"\n\nOur mouths are so close, I can feel him breathing against my skin, and I'm kicking myself for speaking. Millimeters away from our first kiss.\n\n\"Colin, I want to believe it, I really do.\"\n\nIt's taking all of my willpower not to surrender to his advancement. I remind myself that everything can be ruined if we jump the gun.\n\n\"But I\u2014\"\n\n\"Charlie, I figured it out the second you left last night\u2014I swear!\"\n\nColin's stroking my hair with his hands and his eyes are burning my soul with desire.\n\n\"I want you to be my boyfriend and I want to fucking kiss you. I've been dying to do it for a week now.\"\n\nOne week, huh? Must be so hard! Give me a break! He thinks he's suffering? I'll show him suffering!\n\nI softly brush the tip of my nose across his face.\n\n\"Oh, I'm so sorry. This week has been so hard (emphasis on hard)!\"\n\nI gently draw his hips forward so he can feel the hardness between us.\n\nMmm, so hard!\n\n\"Colin, I've wanted you for seven months\u2014\"\n\nI inhale his scent and gingerly caress my hands up his back. I can feel his body shudder under my touch. Fuck, keep it together!\n\n\"I've wanted you since the first day I saw you.\"\n\nI feel his breath hitch as I continue my exploration.\n\n\"Suddenly, sex seemed meaningless if it wasn't with you, so I stopped.\"\n\nI slowly lay him on the couch, hover over him, and speak with a slow drawl.\n\n\"Then, the same day I found out you were gay, was the same day I watched you slowly fall in love with another man.\"\n\nColin moans and thrusts his hips toward mine as I gently nip at the base of his neck.\n\n\"I heard all of those juicy details for six months.\"\n\nI slip my tongue along his ear.\n\n\"Yummy, by the way\u2014\"\n\nI lace my seduction in a heavy layer of sarcasm.\n\n\"Then, I slept in the same bed with you.\"\n\nI start venturing down his chest and lifting his shirt to expose his incredibly sexy stomach.\n\n\"For. Twenty. Eight. Nights.\"\n\nColin's body is shaking so much with desire, he can't hold still as I run my tongue across his belly button. I follow each of the next five words with a gentle bite.\n\n\"I. Never. Touched. You. Once.\"\n\nAs I run my hands over the love bites, I tell Colin.\n\n\"I've been a very, very patient man. Normally, I would've tried to seduce a man the first night.\"\n\nHe's mewling, nonstop, and his back arches off of the couch as I ever so softly, and barely, brush his jeans as I run my hand across his bulge. His eyes are glazed with lust and fire.\n\n\"But what I feel for you is more than physical.\"\n\nWith that, I abruptly get off of the couch, leaving Colin in a state of, what I hope is, confusion, frustration, and sexual arousal. I casually yell over my shoulder.\n\n\"So, please do me a favor and wait longer than fourteen hours before you try to jump my bones. I'm not looking for a quick fuck\u2014been there, done that!\"\n\n\"Goddamn, mother fucking, fuck, *garble garble*\"\n\nColin's mumbled profanities in my wake cause me to laugh. He quips as he rushes into the kitchen, slamming his palms down on the counter as if to brace himself for a fight. He growls but there's no bite.\n\n\"Are you fucking serious? What you just did was low!\"\n\nI put my finger to my lips as if in deep thought.\n\n\"Hmm, I seem to remember a time when you had a special song request which you wanted us to sing together. I memorized that quirky song. What was it? Garfunkel and Oates' song, Fuck You? I can't remember the details.\"\n\nI smirk at him, as he lays his head on the counter in defeat, before I rub his back.\n\n\"Yeah, I sure had fun that night! There's nothing like helping the man you love by helping him serenade the man he loves, with a song about sex, so they can go home and...Fuck. All. Night. Long!\"\n\nI ruffle his hair playfully because I have no hard feelings. He pops his head up and looks at me in disbelief. His hair's all messed up, again. He's so freaking cute!\n\n\"You love me?\"\n\nDuh.\n\n\"Not very much!\"\n\nI smile and finish washing the vegetables in the sink. Colin walks over to where I'm prepping food, stands behind me, and wraps his arms around my waist.\n\n\"Yes, you love me and I don't think you want to say no.\"\n\nHe starts sliding his hands toward the waistband of my sweats. There's not much room for him to explore since they're already riding low on my hips. I can feel his fingers itching for more as his voice drops considerably.\n\n\"You've already waited so long, it'd be a shame if you had to wait any longer.\"\n\nLittle Charlie betrays me the moment Colin pulls me back and presses his erection firmly against my ass. I'm instantly filled with lust. I spin around, so we're facing each other, and slowly palm my hand toward his rock hard erection. My palm is millimeters away from his pulsing hardness and I feel his breath hitch as I seductively lean toward his ear and whisper.\n\n\"I think it's time\u2014for you to go home.\"\n\nI let go of him and casually return to the vegetables.\n\n\"I fucking hate you!\"\n\nColin grabs his jacket and starts to hastily put it on.\n\n\"You're a real piece of work, Gabett!\"\n\nI look up to see him flipping me off, with a smile, and he yells before slamming the door behind him.\n\n\"Fucking asshole!\"\n\nYeah, I love you, too.\n\nBuzz\n\n[Colin] You suck!\n\nHar, har.\n\n[Charles] That's what she said...or he said!\n\n[Colin] You're not funny.\n\nYet, somehow I know he's laughing.\n\nGlad to see I'm under your skin. \n\nI send one last text, just to tease him a bit.\n\n[Charles] Don't text and drive, it's not safe.\n",
        "* * *\n\nBuzz.\n\nI can feel my phone vibrating while I'm attending an early dinner with some of my father's associates. It's a social call, I invited Colin, but he wants nothing to do with it.\n\nAh, Colin! It's been two weeks since the Club incident and things have been so good. Between work, working out, and Thursday night karaoke, we're spending a lot of time together.\n\nI've been strong about not staying the night or doing anything physical. I'm respecting Colin's need to make sure his feelings are valid. I really want this to work between us and I'm doing everything I can, to not fuck it up. He's starting to get frustrated with me, but honestly, I'm afraid I'm a replacement for Jesse and that terrifies me.\n\nBuzz.\n\n[Colin] There's a water leak at home, can you come help me?\n\nWhat the\u2014?\n\nWhat am I supposed to do? I've never used a screwdriver, let alone fixed a water leak. Where do you even start? I politely apologize to guests for texting at dinner.\n\n[Charles] I don't know anything about that stuff, call a plumber.\n\n[Colin] Shut the fuck up and come. I'm frustrated and need you.\n\nSeriously? I'm literally no help at all, but it's Colin and I can't say no.\n\n[Charles] Okay, I'm almost done with dinner. I'll be there in about forty minutes?\n\n[Colin] Sure, don't rush or anything! It's not like it's an emergency. Damn!\n\nThank God he's cute because once you break his barrier, he's kind of a jerk with a potty mouth. I apologetically excuse myself from dinner for an emergency I can do nothing about.\n\n* * *\n\nColin has given me the code to his door so I can let myself in anytime I want. The door tends to slam so it's become a habit to make sure I gently close it behind me. As I start up the stairs, I can hear an Ed Sheeran song playing, maybe Perfect Duet? I don't know, Colin's the music guy, but this isn't his normal playlist for doing home renovations.\n\nI step into the laundry room, hear voices, and instantly stop when I recognize a voice I don't want to hear. The laundry room is fairly dark, allowing me privacy as I peek into the kitchen.\n\nOh. My. God!\n\nI see Colin standing between the kitchen and the living room and Jesse's leaning forward so his forehead is resting on Colin's. Colin's half naked and there's little candles everywhere, so romantic.\n\n\"I'm such an idiot for leaving.\"\n\nWhat in God's holy name is happening?\n\n\"Yeah, it's true.\"\n\nColin mumbles something else to Jesse, but I can't make it out. The blood is pounding in my ears. Jesse puts his hands around Colin's waist and pulls him closer.\n\nWhy isn't Colin stopping him?\n\n\"I should go before Charles comes. I love you so much! I really really do!\"\n\nGet the fuck out of here!\n\nMy stomach drops as Colin reaches up and cups Jesse's face and, for a moment, I think I might actually get sick.\n\n\"I know, and I love you, too. I always have.\"\n\nMy heart shatters into a million pieces as I can't believe Colin's response! He's still in love with Jesse!\n\nI turn and leave the moment I see their lips touch because I can't watch anymore! There's no point in disrupting what they're doing, either, because Colin has made his choice. I let the door slam behind me because I don't care about being polite anymore.\n\nWhen did Jesse get back? Why? Obviously, for Colin. I never stood a chance. It's always been Jesse. I pull out of the garage as Colin steps onto the street and tries to wave me down, but I pay no attention. I need to get far away from here...fast!\n\nFuck you, Colin.\n\n* * COLIN * *\n\nI yell at Brett.\n\n\"What do you mean he's taking a vacation?!\"\n\n\"He called me Saturday. He has a bunch of vacation and personal time off days and he got a short notice exception from Human Resources. He said he'll be back next Monday. I figured you knew about it since you two are joined at the hip.\"\n\n\"Does it look like I know anything?\"\n\nI roll my eyes and storm out of his office.\n\nAfter Charles left, Saturday, I repeatedly tried to call him, but he continually sent me to voicemail until, finally, his phone died. I'm assuming it died because he never turns it off. He wouldn't, right?\n\nI went to his house, but he want there, so I waited. When he didn't show, I waited longer. I didn't get home until two thirty in the morning.\n\nSunday was a rinse and repeat. I repeatedly called his phone, even though it always went to voicemail, I sent him numerous texts, and I waited at his house.\n\nGod, he looked so hurt. I wish he'd let me explain!\n\nDid he really leave?\n\n* * *\n\nDefinition of Hell Week: When Charlie leaves town, unannounced, for presumably eight days and won't return any of your correspondences or give you a chance to explain things.\n\nLet me explain! It's not what it looks like!\n\nI hate how that sounds. How do you say that without sounding guilty? I swear, I'm not guilty. I can explain and it isn't what it looks like!\n\nI know I've been a total asshole all week. In a way, I wish everyone knew I'm Stanley Clarke's son, maybe they'd leave me the hell alone! Unfortunately, and fortunately, news hasn't had time to travel.\n\nFinally, Bethany begrudgingly gets me to lunch. She wants me to divulge all of the juicy details, which is the last thing I want to do, but she's one of my work besties.\n\n\"I'm sure he's cooled off by now and he'll likely be home Sunday evening. That's only two days away!\"\n\nBethany is trying to give me an encouraging smile, but it doesn't work.\n\n\"He should know I don't want Jesse! I'm frustrated because he wouldn't give me one, single, fucking minute before he jetted off to fucking Hawaii or wherever the hell his trust fund afforded him to go.\"\n\nBastard! I really hate you! I'm only kidding, please come home!\n\nThis is why I don't like rich people. Poor people don't do stuff like this because they don't have the money to afford it.\n\n\"Maybe, but I understand his position. We all see how in love he is with you. It's obvious to everyone, except you!\"\n\nShe hands me an iced tea and we continue walking while she intertwines our arms.\n\n\"The guy was a champ the whole time you were twitterpated over Jesse. He would've been the best man at your wedding if you two would've made it that far! But, Jesse represents Charlie's biggest fear and he was supposed to be seven thousand miles away, not alone with you in your apartment!\"\n\nShe shrugs apologetically and continues.\n\n\"I would've reacted the same way!\"\n\nYeah, me too.\n\n* * *\n\n[Colin] Just two minutes. Please?\n\nIt's Sunday, he should be home or on his way home. I haven't texted him all week. I wait at his house most of the day, hoping to catch him. I finally go home at one a.m. after he's a no show. I'm fucking exhausted and not happy at all.\n\nTomorrow is Monday and Charlie's due back at work. I miss him so fucking much and I really want to straighten everything out. I'm going to freak the fuck out if he's not at work.\n\n* * CHARLES * *\n\nI smile, sympathetically, as I enter Monday morning's meeting.\n\n\"Sorry, I'm late.\"\n\nI'm not very late, only late enough to skip being potentially hounded by Colin, beforehand. I see him in my peripheral vision and I can feel his eyes following me, but I refuse to acknowledge his presence. There's an open seat next to Colin, which I'm sure is intentional on his part.\n\nNo thanks cheater! I'd rather stand in a used porta-potty.\n\nBrett smiles and gestures towards the open seat next to Cheater Peter.\n\n\"No worries, it's always hard returning from vacation. Why don't you take a seat?\"\n\n\"No thanks, I prefer to stand.\"\n\nI see every gaze is fixated on me. This is the first time, since Colin started working here, we aren't sitting next to each other, so yeah, they're all freaking out right now.\n\nThe apocalypse is coming!\n\nAs he hands me a folder, Brett says.\n\n\"As you wish. I'm passing out some new assignments.\"\n\nPerfect, I hope I'm being moved from the Asia project and away from Colin!\n\n\"You're going to work on this project with Colin and Daniel and you'll report to Sharon. It should wrap up within two weeks, after which, you'll return to your previous project.\"\n\nWell, son of a Baptist Preacher! Welcome back, Charles! \n\nWith that business out of the way, he continues talking about whatever. I don't hear anything else he says because I'm too focused on not paying attention to Colin. I'm starting to understand why office romances are frowned upon. They really are a terrible idea. Just awful! What happens when your office romance is the boss' son?\n\nAs a friend, I decide to send Colin a quick text. He hasn't taken his eyes off of me all morning, including now as he watches me text until he notices his phone and looks at it.\n\n[Charles] Work is the only thing we'll be discussing today.\n\nI silently curse myself when I realize it's a line Jan says to Michael, but it's unintentional and I hope he doesn't notice. I'm not trying to be cute or funny. After he's reads it, I glance up and see his facial expression. 'Seriously?!'.\n\nYeah, seriously!\n\n[Colin] Lunch?\n\nI don't respond.\n\n[Colin] Two minutes?\n\nI read the text, but I still don't respond because, obviously, we're in a meeting and I don't want to be disrespectful.\n\nI can feel Colin's tension. I do feel bad, but I also don't care. I waited for him as he waited for Jesse. It's not complicated! I think back to the conversation I witnessed.\n\n\"I really really love you!\"\n\nBleh.\n\n\"I know, and I love you, too! I always have!\"\n\nDouble bleh.\n\nI manage to work with Colin all morning and I'm able to make, completely professional, eye contact with him. In fact, I think I do a pretty good job of keeping everything very professional. Daniel looks a wee uncomfortable, though.\n\nColin looks downright desolate. Even his post summer tan can't hide the dark around his eyes\u2014probably the Greek on his mom's side. Greeks are prone to dark circles.\n\nSucks to suck.\n\nOn the way to lunch, I enter the elevator and hold up my hand to block Colin from entering because it is already full enough.\n\n\"Better wait for the next one, this one's full.\"\n\nImagine my surprise when he's standing at the elevator door when I arrive at the lobby. Criminy, he's fast, too bad he didn't trip and fall down the stairs.\n\n\"Eat lunch at my apartment.\"\n\nIt's not a question, he's demanding me.\n\n\"No.\"\n\nColin gently grabs my arm, but I quickly pull away. I grit my teeth and silently bark at him.\n\n\"Please! Leave me alone! I don't want to cause a scene.\"\n\nI smile for the audience we may have attracted.\n\n\"After work? Charlie, just two minutes. I'm begging you! Hell, I'll take one minute. Just give me sixty seconds!\"\n\nHis face is so sad\u2014I almost cave.\n\nAlmost.\n\n* * *\n\nI avoid Colin all week. I blocked his number so I'd stop receiving his texts and calls. He tries to talk, but I keep myself surrounded by other people who don't know anything about us. Well, mostly.\n\nBethany's helping me with some programming issues, she's pretty savvy and I'm no IT technician!\n\n\"You're coming to karaoke tonight. It's not an option.\"\n\nWhile focusing on the computer screen, I reply.\n\n\"Maybe next week, this week is no good.\"\n\n\"No, Charles. You don't have to sit by Colin, I'll make sure of it, but you're going! Colin made last week hell at work and this week you guys are splitting the blame. You're not ruining Thursday night, also.\"\n\n\"Fine, but I'm not doing any duets with Cheater Peter over there.\"\n\nWe both glance where Colin's sitting, he catches my eye and tries to smile at me, but I pull my gaze away from him.\n\nHe's been wearing glasses all week (he's a real son-of-a-bitch) and his hair's a little messy. I'm sure he's doing it on purpose.\n\n\"I don't want to get in the middle of this, but you should talk to him. I don't know if you guys were ever together in the first place, but you don't have to take him back. You should be respectful and at least hear him out. He's earned that much.\"\n\nShe's talking in such a way that it sounds like total business to anyone around us. We're nothing but professionals over here.\n\n\"He's earned that! What, exactly, has he done to earn anything?\"\n\nI don't have the same ability to maintain a professional comsure when talking about things as serious as Colin cheating on me with his ex, or current, boyfriend.\n\n\"Don't be stupid, Charles. This is Colin we're talking about. If you don't give him a chance, you'll be no better than Jesse.\"\n\n\"That's low!\"\n\n* * *\n\nTaylor Swift/Back to December\n\n[So this is me swallowing my pride,\n\nStanding in front of you saying\n\nI'm sorry for that night']\n\nNothing But Thieves/Sorry\n\n[Maybe I'm defective or maybe I'm dumb\n\nI'm sorry, so sorry for what I've done.]\n\nJudah &amp; The Lion/Take it All Back\n\n[I'd take it all back, take it all back, take it all back.\n\nI'd take it all back just to have you]\n\nColin's laying it on very thick tonight with his song choices. Natalie whispers.\n\n\"It's kind of sweet, if you think about it. He's really trying.\"\n\nI shrug.\n\n\"Call me old fashion, but it would've been pretty sweet to not see him half naked while kissing his ex-boyfriend and exchanging words of adoration while wrapped in each other's arms, but that's just me.\"\n\nColin's singing to me, again. I think it's Kidswaste or something. Honestly, I don't care.\n\n[This time I know everything you need to hear,\n\nAnd this time I know everything you might fear\n\nBaby you know I just need you here.\n\nI need you to come back to me]\n\nI reach for the karaoke book and flip through it until I find the right song.\n\nBingo!\n\nI walk the paper up to the DJ and wait for my turn.\n\n\"Up next is, Charles!\"\n\nWell that was quick!\n\nI decide to go with funny, but to the point, with Adam Sandler's, Somebody Kill Me, from the movie, The Wedding Singer.\n\nI start out sweet and look at Colin in his eyes, but he knows what's coming. Everyone knows what's coming!\n\n[And when I think of you 'Colin'\n\nI hope you fucking choke.]\n\nWhen I finish my song, I bow gracefully to the audience and leave the stage. I see Colin frantically writing down a song and running it to the DJ.\n\nGame on!\n\nJohn Legend/ All of Me\n\n[What would I do without your smart mouth?\n\nDrawin' me in and you kickin' me out\n\nBecause all of me loves all of you.]\n\nNo one dares enter their own karaoke request. The audience is watching me for my next move.\n\nThe Vamps/Cheater\n\n[Baby, let me tell you about your boyfriend\n\nHe's got another 'boyfriend'\n\nI've really gotta let him go]\n\nColin counters with, Celine Dion/Because You Loved Me\n\n[You're the one who held me up, never let me fall\n\nYou're the one who saw me through, through it all\n\nI'm everything I am, because you loved me.]\n\nI hate that I'm falling for this bullshit. There's a part of me that's about to break down (it's been a very emotional two weeks), but I fight back so I don't.\n\nThe whole crowd is silently watching us duke it out. I hated it when Colin and Jesse sang to each other...now look at me! And honestly, this is worst, fighting in public. Yuck.\n\nEamon/Fuck It\n\n[Fuck what I said, it don't mean shit now\n\nFuck the presents, might as well throw them out\n\nFuck all those kisses, they didn't mean jack\n\nFuck you, you ho, I don't want you back]\n\nExcept, I do want him back, but betrayal is too hard to overcome and I'll always be second to Jesse.\n\nI can't stick around for his rebuttal. All of this back and forth bickering has gotten the best of my emotions and I'm not about to break down in front of everyone. I need to go home, so I set the microphone down, exit the bar, and walk toward my car. The next thing I know, I'm being thrown against the concrete wall.\n\nWhat the hell!\n\nColin screams into my face as his hands, pressing against my chest, hold my back against the wall.\n\n\"You don't get to do that! You don't get to do this!\"\n\nHe's strong when he's angry!\n\n\"You don't get to treat me like this. I didn't fucking do anything wrong and now you're treating me like a pariah!\"\n\nHis eyes are welling up.\n\n\"You didn't do anything wrong?!\"\n\nI spit.\n\n\"You did everything wrong! Jesse left you! I was there for you, through it all! Every minute of it! He shows up and it's as if nothing ever happened between you two or between us! 'Sorry, Charles, Jesse's back'. I'm nothing but Jesse's 2.0!\"\n\nWith a sudden burst of control, his voice slowly lowers as he says.\n\n\"It's not what you fucking think.\"\n\nA typical response! Only an idiot falls for that! I roll my eyes and respond.\n\n\"Classic!\"\n\n\"Charles, it's true. I promise!\"\n\nHis eyes are pleading.\n\nThose giant, freaking, hazel eyes!\n\n\"I don't see how that's even possible! It looked like you were half naked, standing in a room with candles and love music, and with your arms wrapped around each other. I definitely heard him say he should go before I got there and that he loves you, he really really loves you. And I definitely heard you tell him the same thing and that you always have. That was all before I definitely saw you two kiss!\"\n\nI feel as though I'm talking too fast, trying to get all of the awful memories out.\n\n\"Yes, I admit it sounds fucking bad, really fucking bad, but Charlie, baby\u2014\"\n\nHe cups my face, he's breathing rapidly with emotion.\n\n\"Only because it's out of context.\"\n\nHe lays his head on my shoulder.\n\n\"I'm begging you! Please, let me explain. Let me tell you all of the events of that evening. Then, if you still want me gone, I'll leave, but not until you listen from start to finish.\"\n\nI cross my arms. I'd like to hear what kind of bullshit he has to say.\n\n\"Fine, explain!\"\n\nHe looks straight into my eyes and takes a deep breath.\n\n\"That evening was for you (he firmly presses his finger to my chest). The candles, the playlist, the new bedding, me half naked, everything! It was for you! I knew my feelings for you weeks ago, but you were forcing me to take all of this fucking time to think it over, which is fucking garbage! Anyway, I was over it and I was ready to move this shit up river.\"\n\n\"You're so romantic. Please, continue wooing me!\"\n\nI roll my eyes and, at the same time, my heart is betraying me. It's fluttering like a field of butterflies. He shoots back.\n\n\"You don't get to talk, asshole! You ghosted me for two weeks! You completely shunned me so don't try to talk now!\"\n\nHis lip curls enough to let me know he's not really mad. I think he's mostly happy to have the chance to talk.\n\n\"This is exactly what happened that night, so listen closely! I pretended to have a water leak so you'd come over, which you almost ruined by suggesting I call a damn plumber, you jackass. I lit exactly one thousand candles, made snacks, and spent all week making the perfect playlist full of the best, corny, love music. I mussed my hair, put on jeans that would sit low on my hips, and lost the shirt to try to seduce you.\"\n\nHis hands very cautiously smooths the shirt on my chest.\n\n\"Charlie, I knew you were on your way. Why would've I decided that would be a good moment for a fling? I had no idea Jesse was stateside. When I heard the door unlock, I thought he was you! I thought you were taking my water leak seriously and arriving in record time!\"\n\nHe watches his fingers fidgeting with my shirt buttons. I'm trying to keep my breathing level, but I'm finding it increasingly difficult. Between his fingers gently teasing my buttons, his body close to mine, and hearing him explain the romantic evening he had planned for me, I'm practically melting into the concrete wall.\n\n\"He told me he came back because he made the wrong choice and he's regretted it every day he's been gone. I told him it's too late, that I'm with you. He didn't seem surprised, by the way!\"",
        "His hazel eyes are softer now, probably because I'm not trying to kill him.\n\n\"I made it very clear that you are my end game. The ball stops with you. What you saw was goodbye, not a sudden and rushed goodbye like before. What you saw was\u2014we had a good run, but this door is officially closed forever, goodbye. I promise!\"\n\nColin rests his head on my shoulder, again. I can feel his fingers gripping my shirt and slightly pulling us together.\n\nIt's compelling stuff. The part of me that wants to push him off of me and leave is also feeling very stubborn and hurt, but I do believe him and I do want him back. I quietly whisper in his ear.\n\n\"I believe you.\"\n\nI can hear Colin audibly relax before I continue.\n\n\"It's Jesse, though. He's my worst nightmare.\"\n\nColin looks at me again and his eyes are full of sympathy.\n\n\"I know, but that's all it is, a nightmare. It's not reality.\"\n\n\"Colin, I sat by your side for months and you told me everything. I know how much you love him. I know so much more than I want to know. It's definitely a reality!\"\n\n\"Please, trust me. Yes, I love him and I'm sure there's a part of me that always will, but he has never compared to you. There's a valid reason why he was threatened by what you and I had\u2014when I was dating him, it was always you!\"\n\nWe're standing here with our bodies pressed together. I close my eyes and relish his body heat against me. This is Colin Clarke, the man I'm in love with! Do I really want to walk away from him?\n\nNo!\n\n\"Charlie, will you please come over tonight? Please, the last two weeks have been stupid.\"\n\nHe looks at me with his big, hazel eyes and any refusal on my tongue is lost. I smile.\n\n\"Yeah, I'll come over tonight.\"\n\nI eagerly lean in and the warm lips I've dreamed about for months are finally pressed hard against mine. I feel his hands move around my neck and he pulls me closer as we open up to each other. I can't believe I'm kissing Colin Clarke and it's better than I'd ever imagined!\n\nIt feels as if he's trying to push me through the wall with his body. My hands slide all over his body, wanting to touch every inch of it. Everything between us is frantic as our tongues finally dual and I can't get enough of his lips and tongue...I want so more! Someone shouts as the group finally leaves the bar.\n\n\"Whoa! It looks as if Colin won the sing off!\"\n\nI try to push Colin off, but he's having none of it and keeps me pinned against the wall. Everyone passes us and congratulates us on the epic song battle until it's only Colin and I, again.\n\nColin smiles at me, teasing my hair with his fingers while his eyes dart back and forth between mine. He doesn't seem in a rush to go anywhere.\n\n\"Okay, um, I need to stop by the store, first, before going over to your place.\"\n\n\"As long as you come, everything else is white noise!\"\n\nHe smiles and gives me a quick kiss before walking to his car.\n\n* * *\n\n\"Hello, Charles.\"\n\nI don't need to turn around to know who's standing there, it's the once voice that can stop me in my tracks.\n\n\"Hello, Jesse, I see you're back.\"\n\n\"Yeah. Actually, I'll be leaving, again, tomorrow. Anyway, I'm very sorry about the other week. I hope you guys figured everything out.\"\n\nHe offers a tight smile, as if someone's forcing him to say it.\n\n\"I think everything's going to be okay. We talked today, so we'll see.\"\n\n\"That's good.\"\n\nThere's a awkward silence between us as we wait together in the checkout line.\n\n\"Jesse, can I ask you something?\"\n\nHis body tenses and his eyes widen slightly.\n\n\"Um, I guess?\"\n\n\"I need know. Do I need to worry about you and Colin?\"\n\n\"Honestly? I wish. If it was up to me, then yeah, but I don't think you have any competition.\"\n\n\"Why do you say that?\"\n\n\"Well, it's been two weeks since I tried to win Colin back and you stormed out of his apartment. You just settled everything tonight? Is it wrong of me to assume that Colin's been pursuing you this whole time?\"\n\n\"Yes, he did. Why does that matter?\"\n\n\"When I told him I was promoted and I'd be moving, he did ask me to stay, once. He never asked me, again, not even a text. He didn't beg or plead. Yes, he cried, I know he was sad and heartbroken, but he didn't fight for me\u2014not really.\"\n\nI put my items on the check stand while he continues.\n\n\"I think if Colin would've fought for me, even a little, I would've stayed, but he made it too easy to go.\"\n\nJesse looks at me with his totally defeated eyes.\n\n\"It was always you, Charles.\"\n\nI don't know how to respond, so I don't try.\n\n\"Thank you.\"\n\nI say as I pay the cashier. Before leaving I turn to Jesse one last time.\n\n\"Goodbye.\"\n\nI'm unlocking my car when I feel my phone vibrate, I slide into my car and look to see who it is.\n\n[Colin] There's a major water leak, come over ASAP. I will not be calling a plumber so shut the fuck up and...hurry!\n\nYeah. He can be sweet when he wants to.\n\n[Charles] If there's another man in your apartment...\n\n[Colin] OMG, you're going to ruin everything!\n\n* * COLIN * *\n\nOperation seduction 2.0.\n\nI rush home to change my bed sheets, light one thousand candles, hook my music up, shower, and put on my pants (no undies and no shirt). I hear the door unlock\u2014if it's Jesse, I'm going to murder the bitch!\n\nCharlie walks into the kitchen and stops in his tracks. He slowly moves forward as he takes in his surroundings. It must be different for him this time, now that I'm not in a compromising position.\n\nI had this whole plan in my head, with lame lines like: I need you to put pressure on this pipe and, I think I should stop that leak with my mouth.\n\nReally romantic, top shelf stuff.\n\nAll of that goes out the window when I see Charlie. Seeing the pain on his face two weeks ago, and fighting every day since to get him back, has put me on the fritz. I desperately need his attention, I need him to desire me, to want me, to feel connected, and I need intimacy with him.\n\nInstead of seducing him as planned, I rush to him and start mauling him. I can't get to him fast enough and it's nothing sexual, just pure emotional need.\n\n\"I've missed you so much, baby!\"\n\nKiss, kiss, kiss.\n\n\"I was such a mess without you!\"\n\nKiss, kiss, kiss.\n\n\"Please don't leave me, again!\"\n\nI feel my chest tighten and I feel something well up inside. It starts in my stomach, and quickly pass through my chest and to my neck before, suddenly, I start bawling.\n\nWhat the fuck is happening?\n\nI can barely breathe because my chest is feeling restricted as I sob uncontrollably. He carefully extracts me off of him.\n\n\"Whoa, whoa! What's going on?\"\n\nI can't respond. Everything in me is panicking. My heart's racing and my breathing becomes quick and shallow. I think I might pass out. Yep, I'm definitely going to pass out!\n\n\"Oh, babe, relax. Breathe slowly.\"\n\nHe half carries me to the couch, acutely aware of all of the candles and the potential fire hazard if we knock them over. He rubs my back as I try to catch my breath and calm down with my head between my legs.\n\nHere I am, finally in the arms of Charles Gabett and having a fucking anxiety attack! How very fifteen-year-old Stan Clarke of me.\n\nI might teach seduction as a profession, #nailedit.\n\n* * * *\n\nCharles is laying on his back and I'm tucked on his side with my head on his chest and one leg draped over his. He's running his fingers through my hair with one hand and drawing lazy circles on my back with the other.\n\n\"Talk to me. What happened back there?\"\n\n\"I don't know. The second I saw you walk in I was so overwhelmed. I don't know, all of the stress, anxiety, and fear from the last two weeks, coupled with relief and worry, came crashing down all at once. I was worried you'd leave, again, and I panicked.\"\n\nLet the seduction continue...\n\nI'd be surprised if Charles sticks around for this shit show, but be assures me.\n\n\"I won't leave, again.\"\n\nHe gently squeezes me.\n\n\"I ran into Jesse this evening when I was at the store.\"\n\nOh good! This'll clear up my anxiety lickity-split! Bleh. I feel my heart speed again.\n\n\"He said you didn't fight for him to stay.\"\n\n\"Sure I did.\"\n\n\"You asked him to stay only one time.\"\n\nI have to think for a second because it felt like I begged him.\n\n\"I don't know, I might have only asked once, I think it was implied though. He made his decision and I don't want to guilt someone into changing their life.\"\n\n\"Huh.\"\n\nHuh?\n\n\"I suppose you didn't have to call and text me obsessively, park at my house repeatedly, pester me at work every day, and leave me notes and memes at my desk? I guess you didn't have to enter a sing off during karaoke tonight to prove your love or chase me out and throw me against the wall to get my attention and yell at me and force me to listen to you, either?\"\n\nHe pauses.\n\n\"Was all of that implied?\"\n\nUgh.\n\nHe sits up to wait for an answer.\n\n\"I guess with Jesse, I didn't want him to leave, but with you, I can't live without you! I did love Jesse, but with you, it's different.\"\n\nDon't make me say it! I just can't, yet, it's too soon!\n\n\"Charlie, you're too good for me, I don't deserve you.\"\n\nI kiss down his neck as my fingers find the hem of his shirt and I slowly start pulling it up and over his head. This ignited a fury and we frantically start pulling at each other.\n\nFor the first time, I have him sitting in front of me and he's mine.\n\nMine!\n\nI raise my brows at him and say.\n\n\"Hot damn! You're fucking perfect.\"\n\nI've seen him in various stages of undress, but this time I have the luxury of noticing all of the details. His skin is light and milky, he doesn't have a lot of chest hair, but he has a light dusting of blonde that goes down past his belly, and several small moles are sporadically covering his body.\n\nI want to crawl into his body. No matter how hard I try, I can't get close enough to him or smell him enough! As I fumble with his buttons, I manage to call out.\n\n\"Pants! Off!\"\n\nWho wears button flies anymore? Fuck!\n\n\"Oh, my god...\"\n\nI growl. Charles is down to a pair of black boxer briefs and his erection is barely contained by the small piece of fabric. It's the most erotic thing I've ever seen! The black perfectly contrasts his milky skin. I run my fingers up his thighs and manage to roam everywhere, except where I really want to go. He huffs.\n\n\"Colin! Shit or get off the pot!\"\n\nI smile at his crudeness.\n\n\"And you call me the romantic.\"\n\nFucking sexy bastard. By request, I palm and manhandle his erection. Charles' hips shoot up and he cries out the moment I make contact.\n\n\"Uhh yesss!\"\n\nI tongue his navel as I slide his boxers down and over his hips and thighs. I can feel the heat radiating off of his cock as it twitches and bounces in anticipation of the moments to come.\n\nCharlie is perfectly endowed with roughly seven and half or eight inches and a nice, sturdy circumference. I think we're comparable in size.\n\nI decide not to play around because I can see his tip glistening and I know he's been waiting a long time for this. I take him into my mouth and proceed to twist, suck, and tongue him. Charlie's fingers are mingling in my hair. The closer he gets, the tighter his fingers clench, which gets my gears grinding and I start moaning against him.\n\nI bob my lips up and down over his smooth shaft and slurp and swirl him closer and closer. I've never loved having a man's cock in my mouth the way I love his. Feeling him hard, because of me, is satisfying as fuck!\n\nI look up and his eyes lock with mine as my lips glide across his shaft. I've never kept eye contact before, it's both intense and sexy. The desire and satisfaction in his eyes only spurs me on, I want to make this good for him.\n\nI lap his balls with my tongue while my hands paw his sexy chest and stomach. I lick my way up his cock until he's back in my mouth, where he belongs. I moan as his smooth slides repeatedly past my lips.\n\n\"Ah, Colin, I'm really close!\"\n\nI double my efforts, happily gagging myself on him. Charlie's fingers lock in my hair and he shoots forward, bending over me slightly and he moans as his orgasm uncontrollably shakes his body.\n\n\"Ah, fucking, hell, Colin. Ahhh!\"\n\nHe firmly presses my head against his pelvis, giving me no choice but to swallow every ounce of his cream, not that I would have declined. I slowly clean him up, I don't want to stop because there's something so blissfully calming about giving this kind of pleasure to the person I love. Charlie leans his completely sated body back against the couch, I pull myself over him, and our tongues softly play as we kiss, again.\n\n\"That was\u2014I mean\u2014fuck!\"\n\nCharlie's eyes are closed. My cock is so hard with need, but it can wait. I straddle his lap and curl into him so we can be as close as possible.\n\nI lay my face against his neck. I can stay like this forever. I feel his pulse against my cheek and smell the salty musk of his post orgasmic bliss. It's so relaxing and arousing to be this close to Charlie.\n\nCharlie motions for my pants to come off so I oblige and strip naked before returning to his lap with my face against the crook of his neck.\n\nMy body jolts with excitement when I feel his hand wrap around my throbbing cock. He strokes me and works hard finding the perfect steady rhythm and I can feel myself tingling with anticipation. I wrap my arm around his neck to brace myself against his onslaught of pleasure. I let the words flow as I feel my body climb higher with each pass of his hand.\n\n\"Oh, fuck! Oh, fuck! Oh, fuck! Oh, fuck!\"\n\nI'm trying to get him to move faster and harder by thrusting my hips to his movements. I can feel my balls drawing up, my toes are tightly curling, and I start moaning into his neck as my whole body grips him like a vice.\n\n\"Ah, Charlie! Charlie!\"\n\nMy abs clench as cum starts shooting from my cock.\n\n\"Fuck! Arg!\"\n\nI hump against Charlies strokes, sending waves of intense shudders. It takes a minute for my mind to come back down. I can feel our bodies mold together and I never want to get up or leave him.\n\n\"That was in-fucking-credible.\"\n\nI feel him nod in response. I finally sit up. I want to look at my Charlie. His messy blonde hair and his warm blue eyes are, relaxed, and full of love and joy.\n\n\"Charlie, I think I love you like this.\"\n\nI softly kiss his lips and, while slowly running his fingers over my back and down to my ass, he purrs.\n\n\"I think I love being like this.\"\n\n\"Hmph!\"\n\nSuddenly, he leans forward and uses the momentum to propel us up until he's standing with my legs wrapped around his waist.\n\n\"Let's go to bed, baby.\"\n\n_____________\n\nOne commenter asked who we pictured (appearance wise) for Colin and Charlie. Answers for Colin were: Antoni from Queer Eye, Joshua Jackson, and Henry Cavil when he plays Clark Kent in glasses. Charles: Ryan McPartlin from the show Chuck or a cross between Chris Hemsworth and Brad Pitt.\n\nWhat are your thoughts? I know who I picture but I'm not going say, yet!"
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "gay drama",
        "gay love story",
        "love",
        "romance",
        "gay romance",
        "drama",
        "gay love",
        "blowjob",
        "gay novella"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/still-you-want-me-ch-08"
}