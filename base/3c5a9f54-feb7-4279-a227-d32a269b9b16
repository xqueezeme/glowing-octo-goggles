{
    "title": "Storm of Shadows Ch. 05",
    "pages": [
        "Merry Christmas to all who celebrate. May 2016 bring you all closer to your dreams.\n\nLove Jaz xxx \n\nEnjoy!\n\n*****\n\nMila stilled in the trees, her head turning to the right. There was a pervading sense of danger, something so dark it was sending a cold chill down her spine. She didn't know what it was, but it triggered her primal instincts, and she remained still, sampling her surroundings. \n\nThere were a myriad of scents on the air, and her brow puckered in a frown. What was confusing was she could scent wolves close by, a larger pack than the small family she had encountered a while back. However, she could distinguish the child from earlier, and that was odd because the girl had been travelling in the opposite direction with her parents. How could she have found her way to this pack, and why couldn't she sense the child's parents?\n\nMila didn't stop to think about what she was doing. She automatically moved towards the pack. Whatever was happening, Dante would need to know. Their survival could depend on it. Moving as silently as she could, Mila had barely travelled any great distance when her breath suddenly caught, and she was still once more perusing the scene below her. He was there, the one she had seen in her vision. The Justice Seeker was watching the child run towards the wolves, his head snapping around as he scented the air. \n\nMila thought her heart might well stop as she watched him, his instincts clearly superior to those she had encountered before. Most would never have detected her presence, but the boy below was on edge, searching for something his senses told him was there. Would he discover her? Could he smell her hiding place? She was afraid to breathe just in case he heard her.\n\nHe stood still as a statue for a long moment, and then the air seemed to shimmer around him and she had to stifle the gasp that threatened to burst from her lips. He was the living vision, the exact replica of what she had seen in the cave that day with Dante. That wasn't what caused her heart to stutter wildly in her chest though. No, her stifled gasp was because of what she was seeing...she could actually see him, though he appeared to be shrouded by a thin veil. \n\nShe could  see him move away, the way the breeze rippled through his hair, his mesmerising animal grace as he moved. It felt like it was taking her stunned brain forever to acknowledge it, but it was mere seconds, and the message was as clear as day. Mila could see the Justice Seeker as if she still had her normal sight! \n\nIt was impossible, and she couldn't understand how it could be, but the boy had done something so amazing it was as if he'd reached into her mind and flipped on a switch to her damaged vision. For a handful of heartbeats, all Mila could do was sit there and watch in fascination as the Justice Seeker vanished in the opposite direction.\n\nHer heart hammering wildly, she had to make the most difficult of decisions. Follow the boy so she could watch him move as if she wasn't blind, or follow the child towards the wolf pack that may be the one she had been searching for? She would have been lying to herself if she didn't admit that she was sorely tempted to follow the Justice Seeker, however, there was too much at stake to allow personal desires to get in the way.\n\nMila slipped soundlessly down the tree, shadowing the little girl, using her forward movement as a means to get a snapshot of her surroundings. They didn't have far to travel before she once more took to the trees and safety. They were almost at the campground of the wolf pack. \n\nMila watched attentively, seeking out each movement so her inner eye would snap a picture of her surroundings and the people in the makeshift camp. She needed to see if the human girl was here, and if she was, she would need to find some way to turn the Justice Seeker around so that they could meet.\n\n*****\n\nThe child appeared from out of the thickets, pale and blonde, with blue eyes that were so haunted the entire group around the fire could only stare at her in silence.\n\n\"What the hell?\" Roland, one of the pack betas, jumped up and moved quickly towards their visitor, ignoring the way the child flinched as he reached for her. \"Colin, Matthew, check the perimeter, see if anyone else is out there.\"\n\nThe child was stiff in his arms, the acrid scent of fear pervading the air. Despite that, he could tell that she was one of them, she was a wolf pup, and she appeared to have been through something traumatic. He wanted to curse but bit his tongue, as the child was so young. Their Alpha had very strict rules about watching their language among their young. It was a pity she was off somewhere on some top secret mission right now, and he was left to deal with this unexpected incursion.\n\nWhat perturbed Roland the most was they had checked out the area before setting up camp. They had ensured there wasn't anyone around them for miles. Now a child just appeared in their midst? Clearly, the area wasn't as safe as they had first thought, and that was concerning. He needed to be out there with the remaining betas of their small pack. It was his responsibility to protect them.\n\n\"Ava.\"\n\nHe didn't need to turn his head to know his mate had come out of their tent at his call. She always knew when his need was great, and never asked any unnecessary questions, but then that was just the way his mate was. Giving her a brief smile, he handed the child over. \"I need to check the area with the others. Look after the child.\"\n\nAva watched her mate leave, and then her warm brown eyes dropped to the child in her arms. The girl was so young, far too young to have blue eyes so haunted. Her heart immediately went out to the child, and her natural maternal instincts kicked in. \"Hello, sweetheart, I'm Ava. Can you tell me your name?\"\n\nThe little girl just stared back at her and then her small fingers threaded in Ava's shoulder length hair, which was loose around her shoulders, and she was surprised when the hand fisted it tightly. \"Mama...Mama.\"\n\nThere was something in the child's voice that sent a chill down Ava's spine; a sense of foreboding coming over her that she couldn't explain. She knew better than to ignore it though, and turned to the other two pack females who were watching her with intent expressions. \"It might be best if you take the children onto the next rendezvous point. The Alpha should head towards there if she's on her way back; otherwise we can meet you there in a day or so.\"\n\nBoth Astrid and Frankie shook their heads before she'd even finished speaking. Ava wasn't massively surprised by their reaction, it was understandable that they wouldn't want to leave their mates.\n\n\"Terra can take the children,\" Frankie countered, her tone brooking no argument. \n\nThat wasn't going to stop Ava from speaking though. With Fox off somewhere on a separate mission for their Alpha, that made Roland the head beta and by rights, she was the senior female in the pack. \"Terra is too young for the responsibility. She's just had her eighteenth birthday. What if there are vampires out there? The children need an adult to protect them.\"\n\n\"Don't take this the wrong way, Ava, but you still think like a human...and that's understandable considering your daughter has yet to make the change,\" Astrid commented, her words tough, but her expression sympathetic. \"\"Terra is a born shape shifter. She's been raised and trained in survival techniques. She's more than capable of escorting the children onto the next site. In fact, you may be as well to send Natalia with them too, and the young one you're holding.\"\n\nThe very thought of sending her daughter away was unacceptable, though Ava had to concede the other women had valid points. She pondered on their words, looking back down at the child who had maintained her silence, apart from when she'd called her mama. Making up her mind, she let out a small sigh. \"Very well, Terra can take the children to the rendezvous point, but Natalia and this little one are staying here. Roland may want to talk to the child.\"\n\nShe could tell the other two women didn't agree with her decision but they held their peace, and both headed over to the larger tent where the handful of children were still sleeping. Ava turned her attention to one of the other tents, the one that contained the most precious person in her world, not counting Roland.\n\n\"Tali...\"\n\nThere was a moment's silence and then a muttering under breath, as her daughter pulled herself out of her tent. She pushed her glasses up the bridge of her nose and blinked into the sunlight, a frown marring her pretty features. Her brown eyes appeared slightly glazed, as was wont to happen when Natalia was dragged unceremoniously away from her science books.\n\n\"Mama? What's happening?\"\n\nAva couldn't help smiling as she stared at her daughter. Her Natalia lived in another world within their own, often being the last to know anything that was happening within the pack. There was no way in hell she would ever be separated from her often-distracted daughter. She relied too much on her mother to guide her through life.\n\n\"This child just wandered into the camp a moment ago. Your father and the others are out trying to find where she came from. Terra is going to take the youngsters onto the next rendezvous point as a precaution.\"\n\nRoland wasn't Tali's real father, though he had brought her up as if she were his own since the day he had found Ava dying from blood loss after being attacked by a vampire. Tali had been less than six month's old, and it had only been her love for her child that had helped Ava withstand being turned to a Were to save her life. Roland had taken them both under his protection, and as time had passed, the mate bond had formed between him and Ava. \n\nThey had been a family ever since, even though Ava could bear no other children. It hadn't mattered to her mate. As far as he was concerned, Tali was his daughter.\n\nWhile Natalia was processing what she'd been told, the child's initial reaction to Ava's hair had quickly waned, and she wriggled in her arms. Ava set her down as she felt the little girl's fear rising. Whatever had happened to her was so traumatic it was as if she couldn't bear to be touched. Her natural maternal instincts were to comfort the girl, but she didn't want to frighten her any further.\n\nAva's heart swelled with pride a second later, as her daughter reacted to the child's distress, her instinctive empathy kicking in as tears well up the little one's eyes. \n\n\"It's okay, sweetheart. That's my mama and she's very kind. She won't hurt you.\" Natalia's tone was soft and soothing as she sat down on the ground to bring herself closer to the girl's height. It was clear she felt sorry for the child, a little girl who was as lost and out of place as she was. \"I'm Tali...what's your name?\"\n\n*****\n\nNatalia held her breath, trying to be as non-threatening as she could. Truth be told, in a pack of wolves, that usually wasn't too hard to achieve. She was worried about whatever may have happened, and what that could mean for their pack, but she wanted to help the little girl, she just looked so haunted and forlorn.\n\nThe child stared at her for a long moment and then she sniffed noticeably, recoiling a couple of step backwards, her mouth dropping open. \"You're not a wolf.\" It came out as an accusation, as was to be expected from one who was so young she hadn't had any life experience with the other races that made up her world.\n\nNatalia didn't let the girl's tone upset her though. She smiled to show her that she understood her confusion as she nodded her head in agreement. \"Not yet,\" she answered. \"I am still human. My mama's a wolf though, and one day soon I will choose to become one.\"\n\nThe unexpectedness of her answer seemed to capture the child's interest, and she moved forward again, sitting down a couple of feet away from the human girl. \"I'm a wolf and my Mama and Papa were wolves. How come you're not one?\"\n\nWere...Natalia didn't look at her mother, keeping her gaze fixed on the child but she knew she would have caught the past tense the girl used. Something had clearly happened to her parents, something bad. \"I was only a baby when I came to live with the pack. Our Alpha is very wise and she decided that I should be allowed to grow up before I made the decision if I wanted to be a wolf or not.\"\n\nWhen she saw she had the child's undivided attention, she decided to press for some more information, trying to maintain the build-up of trust that had begun. \"Are your Mama and Papa close, little one? Can you tell me your name?\"\n\nThe child's face turned sombre at the mention of her parents, sorrow causing tears to well up again, and her voice to drop to a whisper. \"He called me that. The monster who could do magic...\" Though she named this person monster, there was no fear on her face or in her voice. It was as if she was telling a secret, one she didn't want the others to hear.\n\nNatalia could sense the instant tenseness within the pack, and knew that she needed to hide hers so as not to spook the child. She put as much wonder into her tone as possible, leaning a little closer, and dropping her voice down to a whisper too. \"You met a monster who could do magic? Wow, that sounds amazing! Is the monster still here, sweetie? Did he bring you here? I'd really like to see him if I could.\"\n\nBig tears spilled over onto the girl's cheeks and she let out a little hiccup as she tried not to sob. \"He went away again...after he cut up the bad people who hurt Mama and Papa. He told me to come here. He said you would look after me now that Mama and Papa are dead.\"\n\n\"Mama?\" Natalia didn't know what to say. Her heart automatically screamed yes they would look after her, but she knew better than to agree to anything on behalf of the pack. Technically, the decision was the Alpha's, though Natalia was reasonably sure that she would take the child in, it was who their Alpha was.\n\nAva moved to kneel beside the weeping girl, tentatively touching her back and supressing a sigh of relief when she didn't pull away. \"I am sure you must have a little knowledge of pack life, sweetheart. We must speak with our Alpha who is away at the moment. She is a good Alpha though, caring and wise. Most of our pack once travelled alone or in smaller groups. Our Alpha accepts many into the fold, and I see no reason why she wouldn't accept someone as brave and strong as you, little wolf. We will take care of you until she returns. You have our word on that.\"\n\nThe child swallowed hard, brushing a hand against her wet cheeks. \"I can stay here with you? I don't have to go away with the others?\"\n\nNatalia met her mother's eyes, a hint of unease filling her soul.\" \"Why do you need to stay, little one? Is there a reason?\"\n\nNodding her head, the blonde wolf scrubbed at her cheeks once more, her expression lightening a little. \"He said he would come back for me. He said he would remember this place and come and get me when he was finished.\"\n\nThe unease blossomed into full fear, Natalia struggling to keep her face as expressionless as possible. \"The monster said he would come back?\"\n\nWhen she nodded again, Natalia felt a bead of sweat trickle down her left temple. \"Do you know what it was that he had to finish first, sweetheart?\" She held her breath as she waited for the answer, afraid of what it might be.\n\n\"I think he's going to kill some more vampires, though he didn't say that.\"\n\nNatalia gasped out loud, her fear-filled gaze meeting her mother's once more as she was unable to contain her rising terror. If what the child said was true... \n\n\"He's coming back for her, Mama. He's coming back here.\"\n\n\"Frankie! Astrid! Get Terra and the kids moving now!\" Ava barked out, rising quickly as Frankie hurriedly exited the children's tent at the urgency of her voice. \"One of you go find the men, tell them to get back here ASAP. Natalia, grab what you can quickly from your tent. Take the child with you. We need to be ready to move out when the others get back.\"\n\n\"I want to wait for the monster!\" the little girl wailed, her composure slipping and her voice rising shrilly. \"He let me bite the vampire that killed Mama and Papa! I want to go with him!\"\n\nNatalia gagged, all colour leeching from her face. \"Sweet Jesus!\" she gasped, her expression turning horrified. He had let a baby eat a vampire? What kind of a monster let a child eat a...she couldn't finish the thought. Her stomach suddenly lurched, and with another muffled gasp, she ran to the edge of the camp and promptly vomited up her breakfast. \n\nSomething was nagging at the back of her mind, an inner warning that was clambering for attention. She'd had the feeling a few times since she'd reached puberty. It was something akin to an inner awareness when true danger was near. Twice their Alpha had changed the direction of their travel when her fear level had spiked harshly. Twice, it had been proven a wise decision when they'd heard tales of a smaller wolf pack being decimated by a hidden coven.\n\nThis time, the fear was so intense it was nothing short of terror, and that could only mean one thing. The threat to the pack was great, but the personal threat to Natalia was off the scale. It had blossomed the moment the child had said the monster was coming, and that could only mean that she was in close, immediate danger from the man.\n\nNatalia wretched and vomited again the instant the thought crossed her mind. Tears welled up in her eyes as she heaved, sweat trickling down the side of her face. A monster was coming, and he was coming get her. The worst part was, by the way her terror refused to abate, she was certain he was going to find her. \n\nShe turned back around to see her mother glancing sideways at her as she tried to comfort the now distraught child. The look of horror in her eyes just served to increase her own sense of terror, and her certainty that something ominous was coming to get her and it wouldn't be deflected. \n\nIt was evident her mother could tell by her reaction that the threat was directed more greatly towards her. Her eyes were frantic as she watched her daughter, her voice breaking as she spoke. \"Move, Natalia! Now! Don't wait to gather anything. Just run!\"\n\nNatalia's feet wouldn't obey her though, her fear so absolute she could only hunch over once more and clutch at her stomach. She knew it was pointless to run, to try to hide from him. There was nowhere she could run to that he wouldn't find her, of that she was certain, so she was as well as staying with her pack where she had at least a modicum of safety.\n\nFinally straightening up, Natalia wiped her mouth with the back of her sleeve, and fought to find some inner strength. She would stand with her family, with her pack, and she would meet the danger head on. This was the only life she knew, and it was the only life she wanted. Paradoxically, the fear of impending doom had suddenly crystallised her decision about her future. If she made it out of this in one piece, if the pack made it out alive, then she would make the change to Were. She would join the pack properly.\n\n\"There's nowhere to run to, Mama,\" she whispered, crossing back to them and kneeling down beside her mother and the little girl. \"I won't leave you. I'm not going anywhere until we all do.\" \n\nNatalia didn't wait for a response, instead she turned her attention to the child, framing her face in her hands. She brushed at her wet cheeks. \"Come and help me in the tent. We won't be leaving right now, sweetheart, but you can help me get prepared.\" Her words settled the child a little, and she brushed her lips across her forehead. \"What should we call you? I can't keep calling you sweetheart.\"\n\nIt was odd how her own heart was calming a bit too as she spoke. Her fear should have been increasing but it was starting to abate. Did this mean the decision she was making was going to turn out to be the right one? She was still very afraid, but not as bad as she had been. Perhaps it was only because she was taking charge of her own life. Whatever it was, if today was the day that she was destined to die, then she would do so on her own terms, and not by running away.",
        "\"My name's Pippa,\" the child finally answered, her tears drying and her breathing calming now that she knew she wasn't about to be removed from her current location.\n\nNatalia took a moment to lean her face into the gentle hand her mother placed on her cheek, closing her eyes briefly as her Mama accepted her decision. Then she rose and took the little girl's hand. \"Let's go start packing, Pippa.\" \n\nShe gave her mother a brief smile, knowing that her actions freed her up to organise the evacuation of the children. Natalia knew her mother was terrified for her and wished she would leave too, but they were also pack, and that meant the good of the whole must often be placed before the good of the individual. Whatever was going to happen would happen, and she only hoped that if it turned out to be the worst, then she could be as strong and brave as the little girl blindly following her into the tent.\n\n*****\n\nAgony entered the clearing, his head almost swimming with the heady scent of his parents still lingering in the air. They had been here, walked this same path, and just maybe, he might find the answers he was seeking to their disappearance. He was shadowed and silent in his movements, passing by the handful of vampires outside of the main entrance to the coven.\n\nWhile he ignored them for the most part, he mentally catalogued their number, sex and age, dismissing them as any kind of threat. He could easily take them if required. Hell, he wouldn't even break a sweat taking their heads. They were nothing, no obstacle to one such as he. Even Dara wouldn't break a sweat taking them out, though she would be less likely to do so. \n\nHer intoxicating scent was coming closer, her mind seeking a way to connect with his as she did, but it was easy to keep her out. She was trying to reach Kothari, and as long as she remained unaware or emotionally detached enough from Agony, she was no threat to getting inside his head. However, a little part of him admired her determination. He could understand why Kothari had become so infatuated with her.\n\nStifling a sigh, Agony gave himself a mental shake, filing Dara's impending company to the recesses of his mind. He didn't have a whole lot of time to do what he'd come to do before she got in his way, so he had to step up a gear and get further ahead of her again. Striding into the house that was the coven's base, he almost laughed out aloud when he saw the ornate throne dominating the hallway that covered the entire ground level. So, this coven leader thought he was some kind of King, did he? There was only one vampire King and that was Callain. It was going to be so much fun educating the upstart who thought he ruled here. \n\nThere were close to thirty vampires within the building, two of them standing atop the dais that housed the throne. They could have been mistaken for brothers by some their colouring was so similar, but Agony doubted they were closely related despite their comparable age. There were very few vampiric siblings in existence, despite the fact that two such pairs were part of the Armand-Hanlon pack. In truth, there were likely only a couple more sibling groups out there from the old days. \n\nNo, these two were not brothers but there was a level of trust between them that was stronger than most he'd witnessed since arriving on European soil. He filed that away under the label 'important' and considered what he wanted his next course of action to be. He could unshadow and scare the crap out of everyone, but that would likely be met with instant violence and he needed answers more than an invigorating workout right now. \n\nNow that he was here, Agony was considering the possibility that announcing his presence in stages might have been the better course of action for what he wanted to achieve, and he wasn't happy that his thinking might have been so off base. That would only make his goal that little more difficult to accomplish.\n\nOne of the men on the dais turned his head to survey the room as Agony watched them and considered his options. He caught the slight tensing of the male's tall frame and the way his gaze lingered a fraction of a second longer than necessary on his hidden location before it swept on. Could he see him? That should be impossible. No one other than the other V\u00e2rcolac, the Triumvirate or their Alphas or parents could see the hybrids when they were shadowed. If this male could, then he would need to be taken out. He was too much of a threat, not only to himself, but to Dara too.\n\nThe male was talking quietly with the other now, his words so low Agony doubted any in the room would have been able to make them out. The other male stiffened and shook his head, and then listened some more. Agony remained motionless, deciding to watch what would happen, his curiosity piqued by what was turning out to be a heated disagreement between the two men. Finally, the other male moved, sitting down upon the throne and barking out two harsh words. \"Everyone out!\"\n\n*****\n\nDante knew he was there, the Justice Seeker. He couldn't see him exactly, not in the true definition of sight, but he was certain that Kothari was in the coven. When he'd run his eyes over the hallway a few moments earlier, he had detected a faint, shimmering red haze squarely in the middle of the room. His mind's eye had registered it, not fully understanding what it was, but knowing it was something out of place.\n\nAs he'd forced his gaze to move on, his agile mind had worked to catalogue what that haze could possibly be, and the only thing he could come up with was it had to be the V\u00e2rcolac. Kothari must have had a way to bend light around himself, to become invisible to most. It was the only explanation that made any sense, and explained why Dante wasn't completely immune to whatever it was the boy could do. Only Mila knew that he could detect coloured auras around everyone he met. Not even Joshua was aware that he had that ability. He couldn't physically see Kothari, but he could detect his aura which was a deep, dark red whirling around chaotically.\n\nAs Dante considered the likely implications of what would happen when the V\u00e2rcolac revealed himself in their midst, he came up with only one possible outcome, a complete bloodbath. They would lose one of the strongest covens that could help defeat whatever or whoever was out there trying to decimate the vampire nation. \n\nHe couldn't allow that to happen. They hadn't worked so hard to piece everything together and become prepared, to have it all go to hell because a boy was having a tantrum because he couldn't find his parents. No matter how powerful that boy was. Dante had to find a way to defuse the situation before it even ignited, and the only way to do that was to get Louis to agree to letting him take the lead, which wasn't going to be easy.\n\n\"Don't react to anything I say, don't even turn around,\" he whispered, keeping his voice low so his words would remain inaudible. \"Just listen to me, Louis, and trust me when I say that you need to do what I say with no questions asked. Gard and Rayne's son is in our midst right now, and he has crossed over. No one here can see him, but trust me when I tell you he is here and he will decimate this coven if you react with anything that even comes close to being threatening towards him.\"\n\n\"What the fuck?\" Louis growled out, though he kept his tone low, and didn't turn around which showed that he'd picked up the urgency in Dante's voice and hadn't ruled his words out of hand. \"How could anyone get in here undetected, and what is one vampire against an entire coven anyway? He's no threat to us.\"\n\n\"He's not a vampire, Louis. He's V\u00e2rcolac...and he's feral. In his sane state he could wipe out half of this coven...I don't even want to begin to imagine what he'll do in his feral state. If you have ever trusted me, let me deal with this my way. I can reason with him, convince him that we know nothing of his parents' disappearance. We can all come out of this alive if you allow me to take the lead.\" Dante could see the rage and denial begin to cross the coven leader's face, and he felt the first tendrils of real fear that he'd experienced in countless centuries. If he couldn't get Louis to see sense, there was a good chance he would die this day, and there would be no one to take care of Mila.\n\n\"This is my coven!\"\n\n\"And you made me second in command for a reason, Louis! Do not let arrogance and fury lead you into losing everything you've built up your entire life, and quite possibly your very life too. Listen to me this once, I beg of you. Please listen to me, and send everyone away right now.\" For a long moment, Dante was certain his friend was going to ignore him, and then he moved to his throne and barked out the order to send everyone away. \n\nDante wanted to sigh with relief but they weren't out of the woods yet. He still had to find a way to connect with the V\u00e2rcolac and convince him that they were not the enemy, and he wasn't entirely certain how he was going to do that. Taking a deep breath, he moved to the side of the throne as the hallway quickly cleared and there was only himself, Louis and Kothari remaining in the room.\n\n\"You can reveal yourself, Kothari, son of Gard and Rayne,\" he announced, looking directly at the red aura. \"We know you are there.\" He wasn't sure what he expected when the boy revealed himself, but it wasn't what he anticipated.\n\nThe air appeared to shimmer and then the red aura turned into a tall, young man with black hair and dark sunglasses shading his eyes. He appeared relaxed but his aura was swirling wildly, a sure fire sign that the V\u00e2rcolac was barely in control. His hand rose up and he took off his glasses, revealing eyes that were molten fire surrounded by a faint silver circle around the irises. \"Then you know nothing, vampire,\" he answered coldly. \"Kothari isn't here; he hasn't been for a while. You are in Agony's presence now, and you will know my wrath if you do not tell me what you did to our parents. Speak if you wish to live. Where are they?\"\n\nDante swallowed hard, but worked on keeping his expression as neutral as possible. He could sense Louis tensing beside him and prayed he would keep his mouth shut and let him do the talking. \"We are more than aware that you have crossed over,\" he conceded. \"And we do not deny that your parents were here not too long ago. They came seeking knowledge of who or what was behind the European incursion stateside. We didn't have anything concrete to tell them, as we did not know. They left and we have not seen or heard from them again. That is the truth.\"\n\n\"You lie!\" Agony hissed, taken five steps closer and then stopping, his hands clenched at his side. \"You are behind their disappearance. You sent them into harm's way. Confess your part in this and I will allow you to live.\"\n\nIt was hard not to take five steps backwards to put as much distance between himself and the V\u00e2rcolac but Dante stood his ground, working to keep his escalating fear in check at the insanity he was witnessing in the boy's eyes. \"I do not lie, Agony. We shared what we knew with your parents. I told them the earliest indication of the covens working together was in Romania. They listened and then they said they were going home.\"\n\nAgony's talons burst into life, cutting into his palms though he didn't flinch at the pain. The coppery scent of blood pervaded the room as he bled onto the floor. \"You still lie!\" he screamed, a ragged cut appearing across his forehead, more blood filling the room, flowing from the open wound down the younger male's face. \"They did not return home!\"\n\nLouis jumped up from the throne, unease crossing his features as he truly began to understand the threat that was before them. \"Dante tells it true, boy. Why your parents didn't return we do not know. Freya urged that I provide them with my assistance, and I did that. I would never cross Freya Eriksson. You know her; you know the loyalty she can instil in those she deems worthy. Only a fool crosses that woman, and a fool is something I am not.\"\n\nDante held his breath as Louis spoke, watching Agony intently as his head cocked to the side and the wound to his face began to heal. Perhaps urging the coven leader to remain quiet had been the wrong course of action. The mention of Freya Eriksson appeared to halt the V\u00e2rcolac in his tracks as he considered what he heard. A slow smile crossed the boy's face and Dante swallowed hard again at the sight of it. The smile was even more chilling than the overt insanity on display.\n\n\"Yes...Freya is the ultimate vampire.\" Agony almost purred as he spoke. \"Crossing her is akin to committing suicide and you are far too narcissistic to do that, coven leader. If my parents said they were returning home but they did not, then that can only mean one thing...they were talking about a different home.\"\n\nThe surprise that crossed their faces had the V\u00e2rcolac bark out a loud laugh that was devoid of any humour. \"You think you are so smart, the top of your food chain, and yet you don't have the wits about you to reach that simple conclusion on your own. You are nothing. You are inferior. You and your coven are not worthy of my time. I know where I must go now.\" His talons retreated and he put his glasses back on, turning his back on them.\n\n\"Oh, another will arrive here very soon,\" he called over his shoulder. \"She is under my protection. If one hair on her head is harmed, I will return and you will scream for days until I take pity on you and end your worthless lives. Keep her safe or know my wrath.\"\n\nDante knew instantly that he meant Dara but Louis' expression contained only confusion. \n\n\"Take her with you,\" the coven leader growled, anger in his voice. \"I have had enough of you stateside mongrels coming into my territory giving me orders. I don't give a fuck if you all kill yourselves or have your little war with whomever is out there. Just stay the fuck away from me and mine.\"\n\nHis belligerence had the V\u00e2rcolac turning back towards them, and Dante could have smacked his friend in the face. They had almost made it unscathed from this meeting. Now he had no idea what the boy was likely to do just because he felt disrespected by Louis. It was at that exact moment that Dante felt his phone vibrate in his jean's pocket and he stiffened, and paled. Not now... oh, dear Lord, not now. \n\nAgony's attention was instantly diverted from Louis, his dark gaze firmly fixed on Dante. \"Oh please, do answer your phone, vampire. I find myself intrigued to know who would be the cause of your sudden unease.\"\n\nDante couldn't speak, his mouth so dry the words wouldn't come out. He couldn't do it...he couldn't answer the call even if it meant his own death. There was no way in hell he was allowing the madman before him to know his Mila existed. He would die first. \"Fuck you!\"\n\nNo one could possibly move that fast...it was a physical impossibility, however the V\u00e2rcolac did, speeding across the room and backhanding Louis who hadn't had an opportunity to react clear across the room. The coven leader was already slumping to the floor to the sound of bones breaking, as Agony's talons pierced Dante's neck, holding him immobile long enough to retrieve the phone from his pocket.\n\n\"Greet your caller...\" the V\u00e2rcolac hissed, connecting the call and placing it on speaker phone.\n\n\"Mila...\"\n\n\"Dante...Dante I found her! I found our salvation.\" His love interrupted him, her voice so full of excitement, her words tumbling from her lips in quick succession. \"I saw the Justice Seeker too...he was so close to her but then he left. I think he helped a wolf pup in some way, so that speaks volumes to there being some humanity left within him. He took the child to a wolf pack and that's where the girl is. Now we just need to ensure he finds her.\"\n\nAt the mention of the child, the talons in the side of Dante's neck bit deeper. \n\n\"Pray continue, woman,\" Agony whispered, his voice deceptively soft. \"Tell me that the wolf pup was succoured by the pack I sent her to. Be careful of your words though as my talons are deep within your friend's neck at the moment. Should I not like anything you say, I will detach his head from his body.\"\n\nMila gasped loudly, her voice shaking as she answered. \"Don't hurt him...please. We are not your enemies, Kothari. We want the same thing as you, the safe return of your parents and the answers to who is behind this invisible war. Please, you have to believe me. The child is safe, I swear it. The pack has taken her in, she is being well cared for.\"\n\nThe pressure lessened on his neck and Dante held his breath. Maybe, just maybe, there might be positive outcome to this moment. \n\n\"She is very impassioned in her plea for your life. Is she your mate?\" \n\nAgony once more appeared more curious than murderous, and that gave Dante a little more hope. \"No, though I consider her my family. She is mine to protect...as is Dara's yours.\" He could have kicked himself the instant the words left his lips. The talons cut deep at the mention of the other V\u00e2rcolac's name. \n\n\"How do you know her name? What deception are you pulling here? Answer me, vampire...or die!\"\n\n\"Dante! Dante!\" Mila cried over the open phone...\"Oh dear God...no!\"\n\nThe sheer terror in her tone fuelled the vampire into action. He hit out at Agony, trying to free himself from his hold. \"Mila! What's happening? What's wrong? Mila, answer me!\" he screamed, uncaring that he was a moment away from death. He had to get to her...he had to protect her.\n\n\"They're under attack... the pack. A coven's attacking them. They're going to be massacred! I have to help them...I have to, Dante.\"\n\n\"Mila, no!\" he screamed again, dropping to the floor as the V\u00e2rcolac hissed in fury and released him. He was barely aware of Agony vanishing, of Louis coming to his side to help stem the blood from the wound on his neck as he healed. All he could hear was Mila's final words to him before the call terminated. Throwing his head back, Dante screamed into the air...\"Mila!\"\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "werewolves",
        "mating",
        "love",
        "hybrids",
        "paranormal romance",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/storm-of-shadows-ch-05"
}