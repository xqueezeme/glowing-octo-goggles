{
    "title": "The Year of the Cat Ch. 17",
    "pages": [
        "100% Fiction. All sexualized characters are adults. \n\n\"Ladies and gentlemen, this is your captain speaking. We are beginning our initial descent into sunny Miami this morning. Ground temperature is in the mid 70's. We ask that you buckle your safety belts and...\"\n\nJanice looked over her shoulder at Kendra seated across the aisle. Kendra was seated tensely, wrapped in a blanket, wearing earplugs, an eye mask and a neck pillow. \n\nJanice had never seen her friend so apprehensive when they boarded the aircraft. \n\n\"I hate flying. Whenever I'm forced to fly, I swear, I feel like I'm about to fall out of the fucking sky!\" Kendra clutched Janice's hand as they crossed the threshold into their first class seating area. \n\n\"Don't worry, K. It's only a couple hour flight and then we'll be at our resort!\"\n\nKendra sighed, giving Janice's arm one last squeeze. \"Ok... It's ok. I'm gonna close my eyes and ears and just chill...\"\n\nAs the wheels of the plane met the asphalt of the runway, Kendra moaned in trepidation. \n\n\"We made it, Lady!\" Janice smiled to her friend. \n\n\"Oh, thank you, baby jesus!\" Kendra exclaimed. \n\nOnce the women entered the airport, they both immediately gasped. \n\n\"Wow!\" Janice remarked. \"Feel how warm it is! Just think... this time last year I was up to my tits in snow!\"\n\n\"Damn right!\" Kendra exulted as she stood undoing the buttons on her knee length overcoat. \"I came ready for this!\"\n\nJanice giggled bashfully when Kendra's overcoat opened up revealing a tiny, brightly colored, cotton sundress. \n\nThe frilly skirt put Kendra's long, toned legs on full display. The length was just long enough to cover her projecting ass cheeks. The top portion of the dress' low cut allowed almost a foot of cleavage to show. The top halves of Kendra's enormous brown breasts jiggled and quaked with every clacking step from her high heels. \n\nJanice followed a couple paces behind her friend as they made their way to the baggage claim. She observed, with amusement, the reactions of people passing from the opposite direction. Men and women both had to take double takes at Kendra's wild undulations walking towards them. Janice burst out laughing when she watched a man so distracted, that he walked directly into a pillar. \n\nKendra paid absolutely no mind to the spectacle she was creating. \"So, what's the first item on our itinerary?\" She asked over her shoulder. \n\n\"All we have to do is check in and relax. They've got a social mixer scheduled for us later this evening.\"\n\n\"Ooo! Good! I'm gonna wear my little green number tonight!\"\n\nThe word \"green\" triggered Janice's synaptic memory of a lavish party and an arm clad in a green sleeve hovering over a martini glass. The nauseating memory of a spinning room nearly overtook her. Janice shuddered the unpleasant thought away. \n\n~~~~~~~~~~~~\n\nThe women 'Ooo'ed and 'Aaah'ed as the taxi driver wound his sedan towards the entrance of the exquisite resort. \n\nTwo handsome, uniformed men graciously carried their luggage to the concierge counter to check in. \n\nOnce ladies had been welcomed and given their gift baskets, they followed the attendants to their rooms. \n\n\"Look at that! We're neighbors!\" Janice smiled as the door to her room opened. \n\nShe gasped at the lavish beauty of her accommodations; a wide open area with an enormous bed and expensive modern furnishings, leading to a sliding floor to ceiling glass wall. The balcony beyond boasted an astoundingly gorgeous view of the Atlantic waves crashing against a wide, pristine beach. \n\nJanice and Kendra squealed excitedly in unison and strode forward. They happily found that they shared a balcony and had practically seamless access to each other's rooms. \n\n\"Perfection!\" Kendra exulted with arms outstretched, embracing the warm ocean breeze.\n\nJanice noted how comfortable her friend seemed in her summer dress as opposed to her own constricting travel attire. \"Oh boy! Here's my chance to get some sun on my skin! Do you think anyone can see us up here?\"\n\n\"I don't see anyone.\" said Kendra casting her eyes around. The orientation of the balcony walls and the angle which it stood seemed to allow complete privacy. \n\n\"Good!\" cried Janice as she began to quickly undress in her room. Once she was completely nude, Janice cautiously tiptoed out to the balcony and let her skin soak in the warmth of the bright sun. \n\n\"This is so liberating!\" bellowed Janice to the roaring waves. \n\nIt wasn't often that Kendra felt overdressed. She licked her lips, eyeing Janice's sumptuous curvy body. Soon, her tiny cotton dress was being pulled over her head as Kendra's dark silky skin shone in the sun. \n\n\"You're right!\" giggled Kendra, \"Wooo! Feel that wind blowin right up your coochie!\"\n\n\"Oh, I love it!\"\n\n\"Oh look!\" said Kendra, turning to inspect her dwelling. \"We got us a mini-bar. Let's have us a toast!\"\n\nJanice bounced, excitedly from one foot to the other as Kendra poured two glasses of chilled champagne. \n\n\"I feel like we're living in a Hip-Hop video! Cheers!\"\n\nJanice laughed as their glasses clinked. They sipped their drinks, silently taking in the peaceful lulling rhythms of the waves crashing upon the sand. \n\nKendra turned her glass all the way up and smacked her lips. \"You know what? I'm going to shower and take a nap. This mixer tonight might be a rager, you never know.\"\n\n\"Ok, girl. I'll make sure you're up in time. Sleep well.\"\n\nKendra left Janice standing by herself. The sound of the waves guided her into an effortless, slow trance. Time ticked by unnoticed as she stood alone and naked to the world. \n\nFrom behind her, a notice chirped on her phone, reeling Janice back into awareness. Inspecting the screen she saw a photo of her Bubsy cat napping peacefully next to a orange, long haired feline. The text from her neighbor Gracie read: \"Look how well Bubsy and Nathaniel are getting along!\"\n\nJanice welled up, looking lovingly at her sweet cat so comfortable. She quickly texted back: \"They're so cuuuute!! Thank you so much for looking after my baby, Gracie. We just got to our resort and it's INCREDIBLE! See you Sunday evening!!\"\n\nJanice unpacked her suitcases and hung her evening dress up in preparation for the social event later. She chose to bring the elegant dress she was wearing at the New Year's Eve party. \"Hardly anyone got to see me in it before it was replaced by a hospital gown.\" she thought to herself, smoothing out the wrinkles of the blue fabric. \n\nShe frowned at a missed stain on a bottom hem from the liquor that had been splashed from her hand that night. Once again, Janice felt a shudder of horror glide up her spine. Feeling suddenly unclean herself, she decided to shower. \n\n~~~~~~~~~~~~\n\nIt was Kendra who ended up nudging Janice from her seated slumber. \n\n\"Hey, girl! Sun's goin down. We should get ready.\"\n\n\"Oof! Sorry I dozed off on you there.\" said Janice, wiping the sleep from her eyes.\n\nThe women found that one of their bathrooms was more than big enough to both share comfortably as they prepared for the evening event. An hour later they were both looking stunning in their makeup and dresses. \n\n\"Hell yeah! Let's get this party started!\" said Kendra, excitedly.\n\nThe small line of people gathered in front of the conference auditorium waited to receive their name tags before entering. Acoustic music could be heard playing from inside the doors. As expected, heads everywhere turned to do double takes at Janice and Kendra's approach. \n\nThe ladies checked in and affixed the their names to their d\u00e9colletage. Janice felt a slight unease at the attendant's lingering gaze while she patted the name tag's adhesive side to her chest. \n\nKendra led her by the hand through the doors. Inside, a gorgeous room full of tropical decor and soft lighting. A light jazz trio played warm, subtle melodies under blue lights on the small corner stage. Clusters of men and women were scattered throughout the room, conversing with one another on matters of business and otherwise. Shouts of laughter were heard on occasion, signaling the likelihood of an open bar. \n\nDespite the warm atmosphere, Janice couldn't help a creeping sense of dread clouding her mood. When two tall, handsome men wearing business suits and eager smiles approached them, Janice felt a cold chill clutch her heart. \n\n\"Well, hello ladies!\" said the blue eyed man. \"Please tell me you need a drink! Paula!\" the man called over his shoulder to the short bartender nearby. He held up two fingers. The bartender nodded. \n\n\"Hello, there!\" Kendra smiled widely, fluttering her eyelashes at the second man with the dark complexion and brown hair. She attempted to raise her hand to greet the men but found Janice gripping it, tensely. \n\nSurprised, Kendra looked up to see Janice's wide, fear filled eyes darting back and forth between the men and her color becoming increasingly pale. \"Are you ok, girl?\" she whispered to her friend. \n\nJanice stammered. She felt like she wanted to turn around and sprint out of the door. \"I... I... have to go!\" She stumbled backwards. \n\n\"Whoa!\" said the blue eyed man. \"Don't go! We haven't even m-\" The man reached forward to grasp Janice's arm in an attempt to steady her. \n\nJanice's terror filled scream resounded throughout the entire auditorium. Everyone in the room froze in place, craning their necks quickly to see the source of the panicked cry. The blue eyed man was completely taken aback, blinking in stunned confusion.  \n\nWith tears welling in her eyes, Janice stumbled backwards again and then quickly turned to run out of the large room. Kendra cast an apologetic look at the two men and then turned to quickly follow her friend. \n\nJanice could only run so fast in her high heels, but she didn't stop until she was far away from the auditorium. \n\n\"Janice!\" said Kendra approaching, out of breath. \"What happened!?\" \n\n\"I'm so sorry, Kendra!\" Janice cried. \"I... I think I had a panic attack. Oh my god, I'm so embarrassed.\"\n\n\"Oh, sweety...\" Kendra stroked Janice's cheek, sympathetically. \"It's too soon after New Year's. Of course you're freaking out! I wasn't even thinking... I'm sorry, girl.\"\n\n\"It's ok, Kendra. Really!\" Janice said, taking a deep breath. \"I'll suck it up and go back in there. I'm not ruining another party for you!\"\n\nKendra smirked, shaking her head at her friend. \"Not a chance! You're not ready!\" She took Janice gently by the hand, lowering her voice. \"We can have some fun together. Just you and me, like I said...\"\n\n\"No, Kendra.\" Janice insisted. \"You should go have fun at the party. I'll video chat with Matty. I'll be ok!\"\n\nKendra looked at Janice with skepticism. \"...You sure?\"\n\n\"Yes! Absolutely... and tell that guy I said 'sorry'\"\n\nKendra sighed. \"Well... ok. If you need me for anything, I'll have my ringer on. Give Matty some love from me!\"\n\nJanice chuckled. \"I sure will!\"\n\n~~~~~~~~~~~~\n\nJanice breathed a sigh of relief when she felt the lock engage on the closed room door. From the window, the clouds in the sky were clad in beautiful hues of orange, pink and purple. \n\nSlipping out of her dress, she fished out one of Matt's button down shirts and draped it over her shoulders. Janice brought the collar of the shirt to her nose and inhaled his scent deeply as she leaned on the balcony rail, watching the sky darken. \n\nThe soothing sounds of the waves brought the Janice's heart rate back to normality. Stars began to appear in the sky. \n\n\"I bet Matty is awake by now.\" she thought to herself, checking the time. Janice climbed into bed and brought Matt's number up on her phone. \n\nThe screen displayed Matt's sleepy eyes opening and his face breaking into a peaceful smile. \n\n\"Hi, honey.\" Matt said wiping his eyes. \"I figured you would be out partying with Kendra.\"\n\n\"Hi, baby.\" Janice replied. \"I tried to, but... I freaked out. I... couldn't feel safe there with you being so far away.\"\n\n\"Oh... baby. I feel terrible. I wish I was there with you right now.\" Matt said with a sorrowful expression. \n\nJanice looked lovingly at Matt's face. \"Don't feel bad. I'm ok, really. I mean... just look at this gorgeous room!\" Janice panned the camera across the luxurious suite and the astonishing view. \"I mean, seriously! Would you want to be anywhere else?\"\n\nMatt's jaw hung open at Janice's beautifully appointed room. \"Wow! It's amazing! That much space seems almost obscene compared to my place!\" he laughed. \n\nJanice rolled on to her back, holding the phone above her. Matt saw the open buttons of the shirt she was wearing and her enormous piled breasts creating two huge domes pressing against her chin. \n\n\"That shirt looks familiar.\" Matt said with a wry smile. \n\nJanice smiled and let the camera glide down to her torso. Matt bit his lip watching her enormous cleavage appear and the bulbous spread of her giant breasts barely held within the red flannel shirt. \n\n\"I borrowed it from your hamper.\" Janice's voice could be heard off camera. \"I hope that's not weird. I just wanted your scent with me.\"\n\n\"No. That's not weird. It's sweet.\"\n\nOn the screen a dainty hand began toying with the single done up button just below her mid bust. \"Are you sure you don't want me to take it off?\" she said playfully. \n\nMatt watched Janice close her available arm around her breasts and heave them up over the lower half of her face. The massive movement of rolling breast volume overwhelmed the unbuttoned opening of her shirt. Her pink areolas slid into view through the open gap. \n\n\"Fuck yessss.\" Matt hissed. \"You don't have to take it off. Just undo that last button!\"\n\n\"Oh, Matty! Aren't you tired of seeing my boobies yet?\" said Janice, giggling. \n\n\"Never.\" Matt said in a definitive tone. \"Just like I'll never get tired of seeing the sunset.\"\n\n\"Oh my...\" Janice swooned. \"Well. In that case...\"\n\nThe small hand on the screen flicked the button through the eyelet and the lapels of her shirt tumbled down, revealing her perfect huge tits. \n\nJanice's hand seemed dwarfed as it pressed into the luscious softness of her gargantuan breast. She brought the camera lens close to her right areola. Matt gasped as her gorgeous pink titty skin engulfed the entire viewable area on his screen. Her proudly poking nub of a nipple seemed nearly three dimensional. Matt was unable to resist the illusion, pressing his lips to the phone screen until bashful realization brought him back to his senses. \n\n\"What would you do with that if you were here, baby?\" Matt heard Janice's demure voice speak as the camera stayed fixed upon her areola, her fingers lightly pinching the pink nipple. \n\n\"Oh my god! I want that in my mouth! I would bathe those gorgeous tits like a cat!\" Matt moaned. Beneath the sheets his hand was busy applying friction to his swollen cock. \n\n\"Mmm! I love that! Oh god, I want you so badly!\" Janice breathed deeply as she kneaded her round tit. \"I was never so horny before I was with you, baby. You gave me that juicy dick and now it's impossible for me to get enough!\"\n\nMatt felt his balls tingle. \"Oh! Oh fuck, yes! It's yours, baby. This dick is yours forever!\"\n\n\"Give it to me!\" Janice exclaimed, rubbing her clit in rapid, tight circles. Her phone camera focused on the enraptured expression of passionate pleasure on her face. \"Oh fuck! I want to feel it!\"\n\n\"Uhhhngh!\" growled Matt as white liquid issued in spurts out of the purple peak of his cock. \n\nOh... Oh!... YESSS!!\" screamed Janice suddenly, feeling her orgasm blooming throughout her body. \n\nThe only sounds heard afterwards was two people's heavy breathing. \n\n\"Oh, Matty...\" Janice moaned. \"It hasn't even been a week yet! How am I going to survive three more months without you?\"\n\n\"The only way we can, baby: one day at a time.\"\n\n\"I know...\" Janice sighed. \"I hate it, but, I know.\"\n\n\"Maybe a hobby is what you need.\" said Matt. \"I've been keeping myself busy by getting my Goshuin-cho filled out.\"\n\n\"Your what?\"\n\n\"'Goshuin-cho'... it literally translates to: 'Book of Seals'. Almost all the temples and shrines in Japan have their own special seal. You present your book to a monk or a priest. They will stamp a blank page with the unique red seal of the temple or shrine and then transcribe the name and the date in calligraphy. It looks so amazing when it's done!\"\n\n\"That sounds fun!\" Janice exclaimed. \"Hmmm. You know, our neighbor, Gracie suggested I take up indoor gardening.\" \n\n\"Great idea!\" Matt exclaimed. \"I can imagine that really sprucing the place up nicely. Go crazy with it!\"\n\nJanice smiled. \"Might as well. I'm going crazy either way.\"\n\nMatt and Janice happily continued to talk with each other for hours until Janice finally couldn't hold back her yawning tiredness. \n\n\"I better get to bed. Tomorrow I have to sit through a boring seminar.\" she moaned. \n\n\"I hope you get some good sleep, baby. I love you.\"\n\n\"I love and miss you, darling. Have a fun day today.\"\n\n~~~~~~~~~~~~\n\nJanice slumbered peacefully through the night in the most comfortable bed she had ever slept in. She opened her eyes upon the sky through the windows getting brighter as dawn approached. Janice roused herself, donning the resort's fluffy bath robe and stepped outside on to the balcony to feel the brisk, salty air. \n\nOn the horizon, the sky glowed brighter and brighter until a pinprick of sunlight emerged above the waterline, followed soon by growing light too bright to behold for long. Janice breathed deeply, feeling peaceful and inspired. The witness of the day's birth sparked a desire for activity. \n\nJanice decided a brisk walk around the resort would be an ideal outlet for her fix this morning. Janice squeezed into a pair of dark, elastic workout pants, a sports bra she had hoped still fit and a formerly oversized T-shirt which now stretched tightly across her chest. She stepped out of her suite into the empty halls and made her way to the open pavilion resort entrance. \n\nOutside, on the grounds, she kept an active pace along the winding pathway. About ten minutes into her walk, Janice spotted a group of people gathered on the beach. As the path wound closer, she saw that a yoga class was in progress. \n\n\"Hi there!\" Janice heard a voice call out as she was passing by. \"You wanna join us? We're just about to start. There's plenty of room.\"\n\nJanice hesitated for a moment. \"Oh... uhhh. No, thanks! I've never... I wouldn't know what I was doing.\" \n\n\"Don't worry. It's my first time too.\" a middle aged woman spoke up. \n\n\"Same here.\" a man chimed in. \"You're in good company.\"\n\nJanice shrugged, stepping off of the path to an available mat. The instructor began leading the class in a calm, soothing voice. From the last row, Janice observed, attempting to follow the lead given. She was surprised how stiff her body seemed compared to the supple flexibility a few members of the group displayed. Janice tried not to grunt, feeling the stubborn muscles stretching, as she bent her body in half. \n\nThe man to her immediate left was sweating more from Janice's obviously failing sports bra beneath her tight T-shirt than his yoga position. Every time she stood upright after a Downward Dog pose, he saw more and more of her enormous tit mass had seeped out of her already outgrown sports bra. The display her bulging overflow created on the surface of her snug, cotton shirt, which was growing more translucent the more Janice perspired, soon had the man worried about his protruding erection being seen. Janice only half observed him quickly retreat from the group, holding a water flask to his waist.\n\nWhen the class had ended, Janice smiled, feeling refreshed and energized despite being coated in a sheen of sweat. \"I would do this again, no question!\"\n\nJanice concluded her trip by stopping by the lavish continental breakfast station near the lobby. She constructed a plate of delicious, fresh food to enjoy in her room while she prepared for the first seminar of the day. ",
        "Blow drying her hair after her shower, Janice smiled to see Kendra, dressed and ready, walking through the balcony entrance of her room. \n\n\"Hey, Lady!\" Janice paused her drying. \"How'd it go last night?\"\n\nKendra shrugged, nonchalantly. \"Meh. It was ok. Greg and Jeff say 'hi'.\"\n\n\"Who?\"\n\n\"Those guys you scared the shit out of? Remember?\"\n\n\"Ohhh...\" Janice tried to swallow her desire to laugh. \n\n\"Yeah, they felt bad after I told 'em what happened to you... \" Kendra continued. \"but, I cheered them up!\"\n\n\"Uhh... do I wanna know how?\"\n\nKendra's naughty grin spread across her face. \"I bet you can guess!\"\n\n\"Kendra!\" Janice gasped. \"Both?! Really?!\"\n\nKendra nodded, peering into the mirror to check her makeup. \"Yep. But, like I said, it was 'meh'. I couldn't get into it. Maybe because they were constantly high five-ing each other, or... maybe it's because I've just been spoiled rotten by you and your fat dicked roommate.\"\n\nJanice smirked at her friend. \"You're one wild chick, Kendra.\"\n\n~~~~~~~~~~~~\n\nThe ladies sat through the two hour long presentation in the conference auditorium. Looking around the room, Janice noticed she was the one furiously taking down notation on her pad of paper. \n\nThe gathering adjourned for the day, planning to reconvene tomorrow to wrap up the conference and present certificates.\n\n\"Wow! That was it? Kind of a relaxed atmosphere around here, huh?\" Janice nudged Kendra as they sauntered back to their rooms. \n\n\"It sure is! This whole weekend for about four hours of actual work.\"\n\n\"Ooo!\" Janice hopped, excitedly. \"I'm totally gonna get some more sun on that balcony today!\"\n\nKendra stopped in her tracks, grabbing Janice's upper arm. \"I just had the greatest fucking idea of my entire life!\"\n\nJanice looked at her friend with wide eyes. \"What is it?\"\n\n\"Let's go to the beach!\"\n\n\"Uhh. I didn't pack swimwear. Did you?\"\n\n\"Don't need 'em where we're going!\" Kendra winked. \n\n\"You mean a NUDE beach?!\"\n\n\"Yep! C'mon! Don't say 'no'.\"\n\nJanice gulped, nervously. \"I know I'm somewhat brazen, but I don't know if I'm THAT brazen!\"\n\n\"Neither do I! Come on, let's see!\" Kendra pleaded with Janice, clutching both of her hands. \"Please come with me! Pleeeeease!\"\n\nJanice found herself unbelievably nodding her head to Kendra's desperate plea. \n\n\"YOU WILL!?!?\" Kendra screamed. \"FUCK YEAH!!\"\n\nJanice's color was draining out of her face. \"Oh shit... what have I agreed to?\" she silently dreaded. \n\n~~~~~~~~~~~~\n\nJanice cautiously stepped out of the taxi onto the sandy pavement. Kendra was already out of the car, quickly headed for the sign reading \"Haulover Park\". \n\nThe wind swept the fronds of the giant palm trees above, sent a tropical hiss to accompany the crashing of the waves. \n\nKendra reached out and took Janice's hand, hurrying her towards the long, sandy beach. \n\n\"Oh my god! This place is crowded!\" Janice squealed. \n\n\"No it is not! There's only a couple dozen people...\" Kendra lowered her voice, hoping to be drowned out by the din of the beach. \"...but, I don't see any other women here.\"\n\n\"I heard that.\" Janice scolded. \n\nKendra once again stopped in her tracks, grabbing Janice's arm. \"Another great idea just hit me!\"\n\n\"Oh god...\"\n\n\"Let's see how many boners we can coax out of these guys!\"\n\nJanice couldn't help but to laugh loudly at the suggestion. \n\n\"C'mon! I bet we could get every guy out here poppin' a chubby at least!\"\n\nJanice shook her head and pressed on towards the shore. Looking over her shoulder back at Kendra, she smiled. \"You know... I am going to need help applying this sunscreen. I guess we'll just see what happens!\"\n\nKendra whooped in celebration, skipping forward to catch up to her friend. \n\nSunglasses everywhere dipped low to get a clearer look at the two, unbelievably stacked women shuffling through the sand to a clearing. Janice subtly cast glances around at the nude men tanning on their beach towels. \"Wow!\" she silently marveled. \"I've never seen so many dicks out in the wild!\"\n\n\"Pretty nice bunch of cocks!\" Kendra whispered to Janice as she spread her beach towel on the ground. \"I think Matty's got em all beat so far though. We're about to find out...\"\n\nKendra reached behind her and loosened a knotted bow. Her tiny sundress slid from her sumptuous curves to a pile at her feet. Janice gulped regarding her friend's nudity, realizing she was the only clothed person she could see.\n\n\"Let me help.\" Kendra cooed, sensing Janice's hesitation. As she stepped forward, towards Janice, heads everywhere leaned in, rapt with attentive anticipation. \n\nKendra slowly reached up and slipped the straps of Janice's sundress over her shoulders. Janice blushed as the dress fell down her figure a few inches, her enormous breasts halting it's progress. She bit her lip watching Kendra pinch the fabric at her waist. When the top of her dress began to be pulled down, Janice's tit mass bloomed out of the top, escaping from their compression. Janice gasped as her nipples slid into view, growing instantly erect when they felt the warm sea breeze. She could have sworn she heard her gasp echoed from the unsubtly staring audience. \n\n\"Oh my god! It's working already!\" Kendra giggled as she wriggled Janice's dress down over her hips, taking her panties down with it. \n\n\"Eep!\" squealed Janice, feeling more exposed than she had ever felt in her life. As she cast her wide eyes around in a semi-panicked state, she noticed a few men awkwardly covering their laps. \n\n\"This sun is gonna fry your pale ass like a croaker!\" Kendra exclaimed, regarding the brightness of Janice's exposed skin in the unclouded daylight. \"We need to get you lotioned up!\"\n\n\"Sssshhit!\" the girls heard a whispered hiss, nearby. \n\nKendra bent at the hip to retrieve a bottle of SPF 30 sunblock lotion from her bag. \"Here. Hold out your hands.\" Janice's cupped palms received a large glob of squeezed ointment. \"I got your back... as usual!\" Kendra laughed. \n\nJanice swallowed her nerves as she spread the balm across her upper chest and arms. She could feel Kendra's spread fingers pushing the lotion over the skin of her back, down to her ass. Taking a cautious glance around her, Janice saw men everywhere either hiding their engorged penises or proudly putting them on display for her and Kendra. \n\n\"Jesus! Look at 'em all staring!\" Kendra whispered. \"That bald guy over there looks like he's about to nut on himself!\"\n\nJanice heard a slight giggle from behind as she felt Kendra's lotion covered hands come forward and press into her massive breasts. \n\n\"Kendra!\" Janice exclaimed. \n\n\"You know I can't resist these gorgeous titties!\" Kendra breathed in her ear. \n\nA groan was heard from nearby as Janice relinquished and allowed her friend to massage the ointment into her delicate flesh. Soon Janice's skin was glossy from head to toe, the sparkling sun rays glinting from her porcelain colored body. \n\nKendra then spun Janice around and pressed the lotion bottle into her hand. \"Make sure my booty is nice and covered.\" said Kendra, turning to present her bulbous butt cheeks. \n\nJanice smiled bashfully as she squirted a generous amount of lotion on Kendra's lower back. Her hands glided over Kendra's flawless, brown skin, massaging her rollicking curves. Janice felt Kendra reach down and guide her hands to her mammoth mammaries. She giggled slightly as her slippery fingers attempted to caress Kendra's immense bust. \n\nFinally, once Kendra's body shone with a reflective glimmer, the ladies cast their eyes around their immediate area. \n\n\"I definitely see a few big ones!\" Kendra muttered, taking a seat onto her towel to lay out under the sun. \n\n\"I swear, Matty must be from a different planet! I don't see any that are close to his!\" Janice whispered. \n\n\"Goes to show you how rare the big ones are.\" Kendra replied. \n\nThe girls laid on their stomachs, baking in the warmth of the afternoon sun for several minutes before flipping onto their backs. \n\n\"Oh my fucking god!!\" shouted a female voice nearby. \n\nJanice and Kendra simultaneously turned their heads towards the source of the exclamation. They saw two nude females approaching. Both of their mouths hung agape, their eyes fixed intently on Janice and Kendra's extraordinarily massive tits. \n\n\"I can't believe what I'm seeing!\" said one of the girls, laughing. \"You two are in-fucking-credible!\"\n\nJanice and Kendra's confused eyes regarded each other before turning back to the women. \n\n\"Like, who is your surgeon?! Those gigantic titties look so REAL!\" said the thin blonde. Her D cup breast implants looked like two tanned softballs affixed to her distractingly thin frame. \n\n\"That's cuz they ARE!\" Kendra replied with a scoff. \n\n\"Holy shit!\" the two women whispered in unison. \n\nSuddenly, the skinny brunette clasped her hands together, pleading dramatically. \"Please... oh god! PLEASE let me motorboat one of you!\"\n\nKendra reared back. \"The fuck?!\"\n\nJanice couldn't contain her belly laugh at the strange woman's request. \"Why not give her a thrill?\" she smiled to herself. The attention from all the eyes watching proved to be more exhilarating than Janice had expected. Once again, she felt her inhibitions slackening. \n\nKendra had to do an amazed double take when Janice demurely raised herself to her knees with a grin. \n\n\"Here! Have fun!\" Janice giggled. \n\n\"Oh my god!\" Both the brunette and the blonde women dove to their knees before Janice. She lifted her massive, soft globes, jiggling them together, playfully. \n\n\"Jesus! Those ARE real!!\" the blonde gasped at Janice's voluminous breast mass shifting and mashing together in natural splendor. \n\nThe brunette woman took a deep breath and planted her face directly into Janice's cleavage, with a plop. \n\nJanice had to laugh when the woman began rapidly shaking her head back and forth, submerged in the vast slippery softness. \n\n\"... burbleburbleburbleburble...\" went the woman as she rubbed her face against Janice's cleavage. \n\n\"Hurry up! It's MY turn!\" cried the blonde, watching impatiently. \n\nThe brunette raised her head, gasping for air. \"Oh!! Holy fuck! I've ALWAYS wanted to do that to a pair of giant titties! God damn, girl! Yours are fucking PERFECT!\"\n\nThe blonde shoved her friend out of the way and eagerly lodged her face into Janice's plump bosom. She repeated her friend's movements with her head, jostling the massive amount of breast meat with her face. \n\nKendra incredulously observed the whole scene with a shaking head and a smirk. \"Mmm. Look at these crazy bitches here...\" she thought to herself with a sigh. \n\nThe blonde finally emerged from Janice's cleavage, exultant and exhilarated. \"That was fucking amaze-balls!\" She said, catching her breath. \"Thank you SO much!\"\n\n\"You're welcome!\" Janice chirped, happily. \n\nThe two thin women continued on their walk down the beach, waving goodbye as they receded into the distance. \n\nJanice and Kendra watched them saunter onwards. Suddenly they heard a man clearing his throat nearby. \n\n\"Uhh. Hi!\" said the nervous looking man standing near their beach towels. His average sized erection pointed straight ahead towards the reclined women. \"Any chance of ME getting a turn?\" his shaking voice uttered. \n\nKendra's eyes were suddenly alight with anger. \"Hell to fucking NO!! But there's a HUGE chance of you gettin' your ass whooped if you don't carry it on out of here!\"\n\nThe man gulped. His erection deflating rapidly as he backed away in shock. \n\n\"You ready, J-Cup? I think I've had enough of this scene.\" said Kendra, casting daggers from her eyes at all the men watching nearby. \n\n\"Ok, Kendra. We can go.\" \n\n~~~~~~~~~~~~\n\nReturning through the main entrance of the resort walkway, Janice and Kendra noticed a placard announcing a sit down banquet in the main dining hall later in the evening. \n\n\"After what we did today, I think I'd be able to handle a dinner without making a scene.\" Janice said to Kendra as they walked towards their rooms. \n\n\"I'd rather eat out.\" replied Kendra. \n\n\"Oh yeah? That's cool with me. What do you feel like eating?\"\n\n\"Your gorgeous pussy!\" replied Kendra, smiling seductively. \n\n\"Oh!\" Janice exclaimed with a surprised giggle. \"Well, let me get a shower, then bon apetit!\"\n\n~~~~~~~~~~~~\n\nKendra stood by the balcony ledge, holding a cocktail glass aloft for Janice, as she emerged clean from the shower. \n\nThey both giggled at their unspoken decision to remain nude. \"Great minds and shit!\" laughed Kendra. \n\nJanice gently retrieved the glass from Kendra and the two toasted before the evening sun. \n\n\"To a weekend in paradise!\" Janice cheered. \n\nShe sipped her cocktail, observing the somber manner Kendra was staring into her glass. \n\n\"You ok, Lady?\" she asked Kendra, cautiously. \n\nKendra chuckled beneath her breath, shaking her head in disbelief. \"I'm actually going to miss the fuck out of you, J-Cup.\" she said quietly, avoiding eye contact with her friend. \n\nIt was a shock for Janice to see Kendra let her guard down like that. Her surprising vulnerability caused Janice to immediately well up with tears. She quickly set her glass down and rushed to embrace her friend. Wrapping her arms tightly around her, Janice could feel Kendra's body quaking as she began to sob. \n\n\"I'm going to miss you too, Kendra.\" The two women held each other with tears streaming from their eyes. Several minutes passed by, unnoticed. \n\nAs clouds slowly gathered, Janice heard Kendra inhale deeply, letting out a peaceful sigh. Disengaging from her embrace, Kendra took a step back, drying her eyes. \"You better not go running' to Matt- telling him you caught me cryin'!\"\n\nJanice suppressed a giggle. \"Of course I won't!\" She wiped her own tears away. \"Love you, girl.\"\n\nKendra's resolve had one again been gathered. Janice could see her friend's demeanor returning as she gazed into her eyes. Without breaking eye contact, Kendra stepped forward, reaching out to cradle Janice's cheeks. Leaning towards her, she kissed Janice's lips, deeply and tenderly. \n\nJanice closed her eyes, relishing the feeling of Kendra's full lips and tongue sliding against hers. The women's erect nipples prodded each other as their colossal breasts mashed and ballooned in passionate pressure. A strong hand was felt on Janice's mons. Her eyes flew open when she felt Kendra's expertly guided fingers glide across her vulva and begin massaging her clitoris in tight circles. A wave of ecstatic pleasure flooded Janice senses, inhibiting her ability to stand. \n\nKendra steadied her friend upright. \"C'mon. Let's get in bed.\"\n\nWith Kendra's assistance, Janice's wobbly knees carried her to the bed where she splayed herself out on her back, limbs outstretched. \n\nKendra stood above her, licking her lips in anticipation. She bent low, sliding her hands up Janice's torso until her palms were full of jiggling breast meat. Kendra brought both of Janice's massive tits together, causing them to collide in rollicking waves of cream colored flesh. \n\n\"Mmm! Those dumb bitches at the beach were doin' it all wrong!\" said Kendra, breathing against Janice's enormous breasts piled upon her chest. \"THIS is how you appreciate perfect titties!\"\n\nKendra's fingers sank into Janice's warm tit flesh, squeezing her enormous globes together, causing them to bloom upwards. \n\n\"Ooo! Mmmm!\" Janice moaned when she felt Kendra's open mouthed kisses being planted across the vastness of her giant breasts. \n\nKendra squeezed and caressed Janice's softness. She located her areola and latched on with her lips, creating suction. Janice bit her lip as she felt her nipple being lavished by Kendra's tongue. \n\nKendra spent a significant amount of time attending to the pleasure of each of Janice's tits. Janice was nearing the edge of an orgasm when her eyes met with Kendra's. She watched her friend disengage suction from her breasts and begin lowering herself. Janice nervously watched Kendra place kisses on the bottoms of her tits, then down to her belly, then further down to her mons pubis. \n\nKendra paused before Janice's spread legs. She gave Janice a naughty grin, seeing the trepidation on her friend's face. \n\n\"Matty may have been able to give a quality lick job.\" Kendra spoke, quietly. \"...but he can't compete with a woman giving it to another woman.\"\n\nJanice was almost about to question Kendra's meaning, when she felt her friend's mouth press to her wet vagina and began lapping in unabashed fervor. \n\nIt was true. Matt had served as a wonderful introducer to oral pleasure, but Kendra's expertise revealed techniques Janice had never imagined. Before she was barely aware of herself, Janice felt a orgasm thunder through her body, causing a height pitch scream to emanate from her throat, reverberating off of the walls. \n\nKendra sensuously slid her tongue around Janice's clitoris for nearly ten minutes, causing orgasm after orgasm to fall upon her. \n\nJanice was nearly relieved when Kendra finally relented, raising herself from between Janice's legs. \"My turn!\" Kendra grinned. \n\nJanice felt a quick stab of panic, she blinked, rapidly. \"Uhh... I haven't ever... done this before.\"\n\n\"Don't worry, you can't fuck it up, baby.\" Kendra cooed. \"Just do the same things to me that made you feel good just now.\"\n\nKendra rolled onto her back and spread her legs as wide as she could. Her bright pink snatch contrasted with the darkness of her surrounding labia, seemingly illuminated. \n\nJanice lowered herself in between Kendra's legs and nervously bent down to her moist opening. \n\n\"Go ahead, honey.\" Kendra whispered. \"Kiss me.\"\n\nJanice closed her eyes and imagined Matt's face approaching, lips parted. She met him in tender contact, feeling his damp mouth against hers. Her lips wrapped around his as her tongue came forward, seeking her mate. In her mind, Janice passionately made out with Matt's lips, only half aware of Kendra's body writhing and the pleasured moans escaping her throat. \n\n\"That's it, baby!\" hissed Kendra. \"I knew you were a natural! Ffffuck yes! Lick that pussy!\"\n\nJanice moaned into Kendra's snatch bearing down, applying more pressure. She allowed her feminine wisdom to guide her tongue as it wound around Kendra's engorged clitoris, flicking it, playfully on occasion.\n\n\"Oh sssssshiiiit!\" Kendra squealed when the climax from within barreled through her being like a wrecking ball. \n\nA deafening clap of thunder cracked open the sky outside as rain came pouring in rivulets down the window panes. The women took no notice, focusing on the storm of passion occurring inside instead. \n\n\"Oh! OH! Oh my fucking god!\" Kendra cried, feeling the rumbling tremors course through her being, unsure if the thunder she was hearing was coming from outside or inside. \n\nThe storm had abated by the time Kendra finally tapped out. The final rays of sunshine burst from the retreating clouds only to be swallowed by the horizon. Stars soon twinkled into view. \n\n\"Mmm! Damn, I needed that!\" Kendra let a satisfied sighed escape her lips. \n\nJanice smiled, snuggling close beside her friend. \"We could still make dinner, if you you're up to it.\"\n\nKendra's stomach responded with a loud growl. \"Oh! Shit!\" she said, surprised. \"Yeah, let's get dressed and check it out.\"\n\nAs Janice dressed and stood before the mirror, smoothing the wrinkles from her dress, she caught her eyes in the reflection. A satisfied smile spread across her face, involuntarily. \n\n\"You're going to be ok.\" said Janice's reflection."
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "huge tits",
        "big boobs",
        "enormous breasts",
        "slow burn",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-17"
}