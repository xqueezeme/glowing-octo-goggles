{
    "title": "The Twelve Zenati Pt. 07",
    "pages": [
        "Authors note: Hello everyone. Welcome to the new Twelve Tables series and the new family I have for you all to meet. I hope you come to know and like them as much as the families from the past series. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\n***** \n\nIt was close to midnight when Noah walked into the suite at the clinic and found Gideon leaning in the doorway to Olivia's room. Gideon raised a questioning eyebrow and Noah shrugged, not bothering to make the same inquiry of his big brother. It was obvious that neither of them was spending the night with their dates.\n\n\"Why's he not answering his phone?\" Noah asked, his real concern and reason for his late night visit to the clinic furrowing his brow.\n\n\"It's in his pants pocket,\" Gideon chuckled. \"The problem is that our baby brother is not wearing any pants right now!\"\n\n\"Progress?\" Noah asked, hopefully.\n\n\"Seems so. She's not sleeping in her own bed tonight,\" he said quietly.\n\n\"Why are you here?\" Genesis grumbled, coming from a room on the other side of the suite. \"I thought you both had hot dates.\"\n\n\"Not as hot as yours, obviously,\" Gideon grumbled in return. \"Answer your phone. Then we won't have to make these late-night visits and disturb you.\"\n\n\"I was just coming to get it,\" Genesis said, as he continued to grumble and rolled his eyes.\n\n\"Can we assume that there's progress? Or just that you finally gave in to the curse?\" Noah asked curiously.\n\n\"Progress, I hope. I guess we'll find out tomorrow if it sticks,\" Genesis said, picking up his discarded jeans from the floor and retrieving his phone. \"Hector gave me a friendly warning that my absence was making it hard on some of the others, so it's time to get my head back into the family business, sooner rather than later.\"\n\n\"I'll get hold of Zanto and Rigo tomorrow and sort out space I can work from here while Olivia recovers. Have you guys been showing up at the Table when summoned?\" he asked his brothers.\n\n\"We aren't missed as much. Papa and Nunzio have our positions well anchored. You're the one who made yourself indispensable. Now you have to suck it up,\" Noah shrugged. \"There haven't been many meetings that included us. To tell you the truth, the old guard is doing all the chest pounding mighty protector moves like it's their last hurrah,\" he chuckled.\n\n\"I'm pretty sure Xavier and Dom would like to call a meeting of our Table when we are all back on deck,\" Gideon mused. \"I think they are giving us both some time. Dom seems pretty concerned about you and your girl.\"\n\n\"Yeah. He got a reading on her the other day that worried him, and I haven't really seen him since,\" Genesis confirmed.\n\n\"Don't rush things that shouldn't be rushed. We'll all survive, you know,\" Noah advised. \"Some of the Suebi pods have gone to ground, so that's where the real focus is at the moment. I think that the watchmen would just like the media off their back because they're more of a hindrance than help at the moment.\"\n\n\"That's why I want to set up an office here and work remotely. Olivia could still be a target, or at least seen as a valuable commodity by the Suebi who haven't been rounded up yet. I can't leave her, not at the moment. I won't leave her unprotected. Orlando has a couple of watchmen checking in with us here, but they need all-hands-on-deck too, after the attack on Zia and Emma,\" Genesis explained what he planned. \"Once I'm set up I'll be able to video-conference with Zio and Xavier to find out what and where the hot spots are and twist the information feed to our favour.\"\n\n\"Sounds like a plan. I'll touch base with them tomorrow too,\" Gideon nodded.\n\n\"We can talk about it tomorrow then. It feels like months since I've slept in an actual bed so, unless you came to tell me how badly your dates went...\" his voice trailed off and he looked between his brothers.\n\n\"It can wait,\" Gideon said dryly. \"I had words with Viv about giving your Pixie ways to keep hiding. She gets it now, I think, but that doesn't mean she's happy that I had to point it out to her again.\n\n\"It wasn't so bad. Her dumb idea gave me the opening I needed to make some ultimatums and strengthen the bond we've been building. Olivia knows what she needs to do now, so we just have to wait and see,\" Genesis shrugged. \"We'll talk tomorrow.\" He yawned loudly, and his brothers moved toward the door. \"Unless Noah needs consolation from striking yet out again,\" he chuckled.\n\n\"Actually, I'm the one playing hard to get,\" Noah smirked at Genesis. \"We can talk about that tomorrow too. Go to bed, little brother.\" He clapped his hand on Gideon's shoulder as they both left the suite, leaving Genesis with his girl. The lowered tension in his younger brother's demeanour was obvious, and Noah hoped that it was the breakthrough Genesis needed to start moving forward with Olivia.\n\n\"Playing hard to get?\" Gideon chortled, as they walked to the car park together. He assumed his brother was joking, but he was also surprised to see Noah here at the clinic tonight. He and Marcella had seemed so flirty and eager to be with each other all night during dinner.\n\n\"Yeah, she was keen,\" Noah admitted. \n\n\"What's your problem then?\" Gideon asked and raised an eyebrow. \n\n\"She's going to be family once Genesis convinces Olivia of who she is and what she means to him. Could make for weird family gatherings once my curse breaker shows up, especially if it keeps going so well and the only reason I have for dumping her is that some other woman gives me a fucking heart attack.\" He tried to explain his reticence. \n\n\"I guess, but you're both grown-ups, aren't you? Can't you have the friends-with-benefits talk?\" Gideon asked.\n\n\"She already did. She doesn't want a relationship, just casual sex, but when I was flirting with her, and then tonight at dinner, it hit me that we couldn't just walk away. She's going to be our sister-in-law, or at least Gen's sister-in-law. It would just be weird, you know?\" Noah sighed.\n\n\"So, let me recap. You're both single, she likes you even though you're a big nerd, and she wants a casual no-strings-attached fling with you and you are playing hard to get?\" Gideon chuckled. \"You need to turn in your man card,\" he quipped and shook his head disgustedly.\n\n\"Yeah, probably. She didn't look very happy when I kissed her goodnight and left,\" Noah grimaced.\n\n\"Damn. She took the rejection badly, then. I hate to break it to you, but you fucked up big time. Good luck salvaging that friendship,\" Gideon commiserated.\n\n\"What do you mean? I was saving our friendship by not complicating it by jumping into bed with her straight away,\" he argued.\n\n\"You rejected her, or at least intimacy with her, after being so flirty. I'm not sure there's much of a friendship to save anymore,\" Gideon said, seriously.\n\n\"I didn't reject her. Not the way you think. I got a call and said that I had to go because of a family emergency. It will be fine, trust me. She needs me to help her with some stuff, and we can date and have fun until her sister is out of the woods and able to stay in contact with Marcella when she goes home,\" Noah said easily. \"Have a little faith in me. I'm not that much of an arsehole. I just bought myself some time to consider the ramifications.\"\n\n\"If you say so, but if Viv had been ready to move us forward then no way I would be here checking on my baby brother,\" Gideon chuckled.\n\n\"That's different. She's your curse breaker. Mine's still coming, one day,\" Noah shrugged. \n\n*****\n\n\"Would you like to talk about what's on your mind?\" Genesis asked, turning toward Olivia on finding her awake and moving out of his arms.\n\n\"I'm sorry if I woke you,\" she automatically apologised.\n\n\"I would rather if you did when you can't sleep,\" he murmured, pulling her close again, needing the physical touch of her to ease the ache in his chest. He sighed in relief as she snuggled against his side and rested her head on his shoulder. \"Tell me what you were thinking about,\" he commanded quietly, kissing the top of her head.\n\n\"Why did you come to the hospital to look after me?\" she asked. She had known, despite what Kairos had said, that Remy would never have given her to another man. Olivia was under no illusions that Remy would carry out his threat to kill her rather than see her with another man. If he kicked her out, or she tried to leave, she would have nothing and no one because he would stop hiding her from the men who searched for her and her life would be over. Leaving Remy and his way of life had meant death for her, but now he was dead, and she had no idea where that left her except here with this man, and for good or for bad, she had chosen him last night. Now she wanted to know why he had chosen her. He certainly didn't need her. He could have any woman he wanted. \n\n\"I don't want any more secrets and lies between us, Olivia. This story is long. Would you rather wait until the morning to hear it?\" he asked.\n\n\"I'm not tired,\" she whispered nervously. \"I would like to know please, Genesis. Why did you come for me?\"\n\n\"On the day of your wedding, the organisation that Remington was part of, the Suebi, mounted a nationwide attack on all Twelve Tabled families. It went badly for them because, by some miracle, the leaders of the tables got a few minutes warning from the Vitali family, who were the main focus of the attack,\" he began and felt her stiffen beside him at the mention of the Twelve Tables. \"We believe that when it went badly the remnants of the team that Remington had sent to carry out the attack on the Mother of our Table returned to the church. We think that had always been the plan, even if they were successful. The men who survived the doomed attack, however, thought Remington had set them up on a suicide mission and sought revenge. So, they opened fire in the church during your wedding.\"\n\n\"That explains how Remy died, not why you chose to care for me,\" Olivia pointed out.\n\n\"I'm getting there. I did warn you it was a long story,\" he reminded her with a soft chuckle. \"After the shooting, one of Remington's men went to a church near on the docks, close to O'Shaes, where you used to work. He told the priest that a young woman was in terrible danger and would be murdered if he did not help her. He told the priest that Remington had manipulated and brainwashed you and detailed quite a lot about the relationship the two of you had and how it came about. He also advised that priest to seek out my help.\"\n\n\"Kairos?\" she asked. She couldn't think of anyone else who would have details of their relationship, except maybe Landon or Aunty Bea.\n\n\"We believe so,\" Genesis continued. \"Before Kairos's arrest, we understand that he was trying to consolidate his hold on Remington's assets and men, and you were in the way. Whether that was because his enemies could use you like a bargaining chip if Remington recovered or because you were somehow in his way, we aren't sure. He wanted you out of the picture, and the only way to ensure that you got out of his way was to tell us who you really were and the danger you were in. He knew that the Twelve Tables were the only ones who had the resources and people to protect you properly from the Suebi, who were in disarray and looking to exploit what they could from the remnants of Remington's power base,\" he explained.\n\n\"None of them came to visit me at the hospital,\" she stated, having never seen anyone from her life with Remington once her bodyguard, Leila, had been sent away.\n\n\"A woman named April, who was in a relationship with Jay Snell, tried to see you. Also, a young woman named Alaina tried on the first day, but your bodyguard would not let them, or anyone but the doctors, near you,\" Genesis explained.\n\n\"She let you and the priest in,\" Olivia challenged. \"Why not the people she knew?\"\n\n\"Because I threatened to have her escorted from the hospital grounds if she tried to stop Father Bob or me,\" he said and shrugged. \"I have connections there, as you know, but the following day she was arrested, along with the Suebi who were known to us.\"\n\n\"That tells me why you came but not why you stayed, or why you and Kairos lied to me about Remy giving me to you,\" she said.\n\n\"When I saw you in that bed, looking so frightened and fragile, my heart stopped,\" he replied as honestly as he could. \"I knew that I needed to do everything I could to help you. So, I called in an expert in trauma suffered by women used in the way that I knew Remington had used you. Then Vivienne and I called your family, thinking that having familiar people around you would aid your recovery. I can see that was a mistake, but I did what I thought best when you were barely talking to anyone about what you wanted or needed.\"\n\n\"Your heart stopped?\" Olivia lifted her head from his shoulder to look at him.\n\n\"It's a strange thing that happens to the men in my family when they meet the woman they're meant to be with. Their heart literally stops for a minute. It's terribly painful.\" He tried to explain the phenomenon in terms that not only she was comfortable with but he was comfortable with as well.\n\n\"You think that I'm the woman you are meant to be with?\" she asked disbelievingly.\n\n\"Yes,\" he admitted simply, with no further explanation. \n\n\"I knew you had lied about Remy giving me to you, so I thought you were lying about Remy being dead,\" she admitted. \"But then he was dead, and I didn't know what to believe anymore.\"\n\n\"How did you know it was a lie?\" he asked, curious about why she had been so sure that it was a lie when they had first told her. They had set it up to come from Kairos so it was more believable for her, because she wasn't talking to anyone, or eating, or looking after herself, at all. She had been acting as brainwashed as he had been led to believe she was. Now he wondered why she had been acting that way, because he doubted the whole drugging and brainwashing story. \n\n\"Remy told me all the time that he would kill me rather than see me with anyone else. I was his, and he made sure that everyone, especially me, knew that I belonged to him and him alone. He didn't let anyone touch me, not even to shake hands, and I had to be careful in crowds not to brush against anyone. In the beginning, if I made him very angry or unhappy, he said that he would kick me out and tell the men who were looking for me where I was so they could kill me. I didn't have anything of my own. No money, no place to go, no friends, so I did what I was told. There was no way that he would give me to anyone that would care for me the way you were trying to,\" she explained patiently. \"You didn't know him, and if you did, you obviously didn't know him well. He would have killed you for touching me, and then me for letting you.\"\n\n\"Were you scared of him?\" Genesis asked.\n\n\"He taught me how to keep him happy. He put me on a special diet and exercise program. He gave me what I needed to stay healthy and look the way he wanted. I might have been scared in the beginning, but I don't really remember. The special diet made my head fuzzy, and I don't recall much of those early weeks, but I knew that as long as I kept him happy, I had nothing to be afraid of,\" she said slowly, as if thinking about the question.\n\n\"Your head was fuzzy all the time in the beginning and not so much at the end?\" Genesis asked, trying to understand the conditioning that Remington had put her through. Whilst he wanted a Dominant and submissive relationship with her, he didn't want or expect abject slavery because she was scared of what he might do if he was unhappy.\n\n\"He didn't threaten me once my mind started getting clearer and I knew how to make him happy. We were both happy, and I had no reason to be scared,\" Olivia lied. \"Serena loved him, and she was his good girl.\"\n\n\"You were happy?\" Genesis asked, unsure of the odd lilt to her voice.\n\n\"He loved Serena, and she loved him. He gave her everything she needed, and she did the same for him,\" she said easily. It was better that Genesis didn't know about the times they spent the night at Hermione's in the industrial room. Invariably she would be injured there, and Remy would leave her alone for days after those sessions, being looked after by others as she recovered. Those times scared her, but she did as Remy commanded because the consequences were much worse and the love that he had for her shone through when she healed again, and he was tender with her when she was able to serve him again.\n\nGenesis heard her talk about Serena as if she was a completely different person, as she had done with Olivia until last night. He would have to talk to Vivienne about compartmentalising personalities perhaps. He hadn't tested her acceptance of the name Olivia since they had woken in the predawn. It was enough that she was talking honestly with him, for now. He lapsed into silence as he considered what she had told him about her relationship with Remington.\n\nWhat Genesis had described seemed like love at first sight, and Olivia had a sick feeling that he had felt that for Serena, the good girl who could be loved, deserved to be loved. He didn't know how awful Olivia was. He didn't know what he was asking when he asked her to take her name back. The good girl that he had seen, and fallen for, in that first moment was not Olivia, the girl who always messed things up and would only drive him away in the end like she did everyone else. He didn't know what he was asking of her, and she vowed that she would try hard not to let Olivia make the same mistakes she always made. \"The same mistakes I always make,\" she thought sadly, knowing that she had to accept that she was Olivia or risk losing the strong protective man who held her and told her he wanted her, wanted Olivia to be his forever.\n\n\"I am your Olivia,\" she said softly into the silence and felt his arms tighten around her and his lips drop a kiss on her head.\n\n\"Yes, you are mine, and I will keep you happy and safe. You just have to trust me, little one,\" Genesis said equally softly and pulled her to lie on top of him, being careful of the unprotected wound in her side. He kissed her then, wrapping a hand around the back of her neck, holding her in the deep kiss and supporting her with a hand on her lower back.\n\nShe would become his lover, his prot\u00e9g\u00e9, his sub. He would tell her how to live her life, and she'd do just that. If he had to go to extremes and tell her what to wear, what to read, when to masturbate and what to think about when she did, then he would, at least in the beginning of their relationship, if that was the level of control she needed. He just had to get beyond her past experiences and how they had affected her. She seemed to think that they'd made her inferior, worthy of nothing but punishment and degradation and to be controlled. He had a different opinion of her submissiveness, though, and he needed her to see it, and herself, through his eyes.\n\nOlivia wormed her hands beneath his neck as the kiss extended, giving into the need that she felt radiating from him to ignite her own. She moved to press her hips against him and better feel his arousal, but as she moved, her damaged side protested. She grimaced into the kiss, her eyes squeezing shut.\n\nGenesis felt her surrender to him and kiss him back, the small noises she made inflaming his need for her. Olivia's need for him matched his own as she moved but she suddenly stiffened and grimaced, and he drew her back, searching her face.\n\n\"Please,\" she whispered softly and tried to press forward to kiss him again. \n\nFeeling helpless to the whispered word but not wanting to harm her, he moved, rolling Olivia to her back and moving them both to the bottom of the bed, her legs dropping down over the edge of it. She widened her thighs in a lewd welcome, moaning softly as he moved between them and bent over her to renew the feverish kiss. Genesis brought his hand to her pussy and was not surprised to find her wet and ready for him. He rolled his thumb over her clit and pressed two fingers into her, just to swallow her gasp and whimper of pleasure.",
        "With her feet planted firmly on the floor, she pressed back against his hand and the invading fingers that teased her and pushed her towards to edge of her climax. He answered her whimper with a soft growl of his own, and she almost cried out with the loss as he pulled his hand away from her. The cry of disappointment froze on her lips as he suddenly surged forward, filling her completely with a deep hard thrust that knocked the air from her lungs in a loud whoosh of breath. Her legs curled up to wrap around him, and she cried out with the pleasure of feeling him take her and the pain lancing into her side as her body arched, pulling at the wound and the dressings giving it scant protection from his use.\n\nAs his body met hers, Genesis groaned loudly when Olivia tore her mouth from his to emit a fierce, sharp cry of pain, pleasure and surrender. Her legs trembled and stretched out along his sides, then drew up and closed around his hips, locking them together as if wrapping herself around him.\n\nAs if it had been preordained, from that first day in the hospital to this moment right here, Genesis knew that he and Olivia had been tangled together, victims of the stars or Cupid's arrows, the fates, or whatever strange synchronicity that guided the lives of the Zenati men. There was no doubt in his mind that this was right. It was in the way she fitted to his body, the way she melded to him and the way they worked together, seeking the same thing, obliteration in each other's bodies. She'd been drowning in sadness and needed rescue, and he realised now that he was hardly any different. He had needed her to pull him from the complacent, comfortable life that had been killing him since he had returned home permanently.\n\nHe looked down into her face, seeing her submission to the pleasure that he offered her, but there was something new, a wicked gleam in her eyes that told him that even though she enjoyed this rough usage, she would continue to challenge him for more. She was split wide, stretched, totally violated, and she wanted it, but she also wanted more.\n\n\"Yes! Please, more!\" she whispered. \"Harder! Faster!\"\n\nHe began fucking her so hard that the bed shook, and with that, the headboard banged against the wall and briefly drew her eyes up. She looked at the wrought iron filigree and then back at Genesis, who rose above her, and gave him a deep, submissive look. She raised her arms above her head even though the headboard was too far away to grip, and her mouth opened in a long high whine as her eyes closed. She came with amazing force, her body tense and then limp as a rag doll. Spasms in her pussy clutched at his cock as her legs twitched. He paused, savouring the feel of her and holding back his own climax, before instinctively reaching for her wrists, needing her to feel his power over her despite allowing her to come at will. \n\nOlivia felt his hands lock around her wrists through the fog of pleasure that surrounded her. She closed her eyes and moaned in acceptance of his dominance over her and her body. His movements slowed to long shuddering strokes to torture them both as he took his time to enjoy the aftershocks of her orgasm with her. It was like a delicious agony as she felt him move inside her, as if she could feel every detail of his cock. \n\nAs obsessed with her as Genesis had been, he'd had many sexual fantasies of her as he had sated his need alone and unfulfilled while she had recovered in hospital. Now it all clicked into place, the force of their bond, who she was and why there was this powerful attraction between them. Why she was filled with such conflict and doubt. He took her wrists again and held them tight against the bed. Then he levered his upper body up and looked down at her. Her lips were parted and strands of her dishevelled hair were in her face, giving that sweet, angelic face a look of wanton sensuality. She was flushed with sexual excitement, but her eyes, beautiful sea green eyes, were open and looking at him with a mixture of anticipation, need and desire. He saw that wicked gleam in her eyes again and thought he recognised it. \n\nHe knew, at that moment, that she wanted what she would never dare ask for, from a part of her she would never even acknowledge. The greedy, spoilt girl who was Olivia who always wanted more wanted the pain she knew he could give her, the punishment she thought she deserved. Hot, needy, passionate, the secret pain slut, the hidden sexual slave on fire to be taken with all the violence of naked male desire, plundered, fucked, and used, looked at him from the depths of those beautiful eyes as if daring him to use her completely.\n\nOlivia was the first to look away from their locked gaze. She knew that he knew just what she had been thinking, and she felt the flush of her skin increase as she turned her face in, as if to deny that she had been about to beg for him to hurt her. She had challenged him with her reactions to his possession of her, and she remembered his words about trying to manipulate him. As his movements stilled, she dreaded that he would withdraw from her before reaching his own climax.\n\nGenesis knew submissives. He knew what it was like to find a woman who lived to give herself and open her body and heart and absorb all his wild violence and savage passion, whose pleasure was always mixed with a bit of pain and the ache of surrender. But to find one like Olivia, one who he was fated to love forever and one who didn't yet even know the depth of what she was and how he would cherish her for her surrender and submission? This girl, his girl, was ripe for discovery and exploration, and she was a treasure beyond value to him. He began to fuck her again, thrusting into her hard, deep and fast, seeking his own pleasure in the woman who would satisfy his every need given time.\n\nOlivia took Genesis' renewed possession of her, and the pounding thrusts, with a series of little whimpers and excited mewls, his pubic bone grinding against her labia as her wrists twisted helplessly in his fists, testing the degree of his resolve to restrain her hands from touching and holding him, making the act far more intimate. The power and strength that she felt in him pushed her higher again, and she teetered on the edge of yet another orgasm as her body shook and arched into his onslaught.\n\nBending his head to her breast, Genesis sucked her nipple deeply into his panting mouth and chewed on it roughly, revelling in her cries and the feel of her shuddering, straining body below him. He wanted her like this. He wanted the cries and jerking spasms of her body as he gave her the painful pleasures he so enjoyed inflicting on her. He wanted more, just as she did, but she was damaged, and he knew even now that he was using her too hard for her unprotected side. He pushed her higher, biting into the soft flesh of her breast, and felt her convulse as she fell into the dark abyss of the climax that assaulted her.\n\nGenesis let the beautiful body below him milk his climax from him as she bucked and cried out her own pleasure. She pulled it from him. She milked him with her greedy, spasming little pussy, and he watched her fall into her own writhing, slutty ecstasy again and yet again, as waves continued to wash over her. He released her hands, and she clung to him, almost sobbing with her pleasure and the exhaustion of her restless night sleeping beside him.\n\nOlivia had never felt so overwhelmed by sensations and emotions. Not even when she had believed herself truly in love with Remy and he was at his best had she felt the way Genesis managed to make her feel at that moment. Her whole body seemed to answer his call for her to meld with his. Tears sprang to her eyes as the sweetest orgasm began to wash over her before the tidal wave of sensation behind it crashed over her, making her cry out and jerk in spasms that shook her whole body. She had never felt anything like it and fear of the unknown mixed with the pleasure and pain that he gave her.\n\nFinally, Genesis ground to a halt. Drenched in sweat, he slipped from her body and fell onto the bed at her side, gasping for air. He took her in his arms and pulled her tightly to his chest again. He didn't intend for her to get away in any way, shape, or form, and she was too weak to resist his need with her doubts and excuses like she used when he pressed his dominance last night. She seemed so frail as she fought to regain her breath and equilibrium. She seemed so small as he cradled her to him, her features appearing so fine, even in the afterglow of sensual fulfilment and abandon.\n\n\"Shush, my girl. I've got you now, I've got you,\" Genesis whispered soothingly into her ear.\n\n\"What did you...? How did you...? I've never... \" She seemed unable to complete a coherent thought.\n\n\"Don't talk, little one. You don't have to talk. I think we just said it all.\" Genesis held her closer. He could feel her heart thumping against his chest. \"We connected. That's what happens when you connect. When you both know.\"\n\n\"When you know? What does that mean? When you know what?\" Olivia whispered in confusion and pulled back and looked at him, her eyes searching his face.\n\n\"I meant that we know each other, that we're connected in a way that we could never be connected with anyone else. We know each other on a different level, a deeper level few others could ever understand.\" He tried to explain how he felt about her and hated that he had to acknowledge even more of the unbelievable curse that afflicted his family. Today was a new day for Olivia and him, and he planned to make the most of it, bonding her even more tightly to him.\n\n*****\n\nMarcella walked along the path at the top of the cliffs and looked out over the bay. It was beautiful here. She had never expected this town to be so pretty. It was small in comparison to the other capital cities she had visited, but it was one of the prettiest. She looked across the bay to the buildings at the heart of the central business district in town. It would be nice to have a day of shopping and fun with the girls. She had enjoyed Vivienne's company at dinner the night before, and she was looking forward to meeting Sera, Noah's sister.\n\nPulling her phone from her pocket, she sent a text to Vivienne and asked if she wanted to meet for coffee at the caf\u00e9 on the foreshore near their apartments. The answer was almost immediate, and she smiled. She'd been relying too heavily on Noah when she had always prided herself on being independent and self-sufficient. She wasn't sure if it was the shock of Olivia's condition, or just that she had felt like a fish out of water here, that had made her call him every day but she needed to get herself together.\n\nIt was the sudden change in his demeanour as he had walked her to her apartment last night that had affected her the most though and made her realise that she had allowed herself to become dependent on him for more than just his friendship. He'd been so flirty during the dinner, but when she had invited him in he had made the excuse of an earlier phone call from his cousin to decline. It had hurt. She rarely considered any relationship that could be more than just an anonymous one-night stand. She wasn't used to being turned down. In fact, she had never put herself in a position where it could happen before, and she wasn't sure whether to be mad at him or herself for being and feeling that vulnerable.\n\nShe walked toward the caf\u00e9 as she reconsidered her plans and the favours she had asked from Noah. She could live without both. However, it would make her life more difficult and put a strain on her finances and her position in the legal firm she worked for in Perth. Maybe she should just get herself a car and back off from him for a bit, get her bearings and do what she knew she needed to do. Vivienne may be a solid sounding-board, with her relationship with Gideon seeming strained too. The Zenati family were known to be reclusive and strange in some of their beliefs. Maybe having a friend who was in the same boat as her would be a good thing.\n\nMarcella smiled as she saw Vivienne approaching the caf\u00e9 from the opposite direction as she arrived and indicated a small table at the side that was empty for them to sit at. She then went to order coffee and muffins for them, remembering how Vivienne said she took her coffee after dinner the night before. \n\n\"I'm so glad you invited me this morning,\" Vivienne said once Marcella returned with a table number and took her seat. \"I didn't know if I would be disturbing you and Noah if I called too early or if I would miss you if I called too late.\"\n\n\"Me and Noah?\" Marcella gave a soft laugh. \"He didn't stay last night. I'm pretty sure he has friend-zoned me despite all the flirting.\"\n\n\"Oh really? Wow, my radar is way off then. I thought you were a couple last night.\" Vivienne shook her head, wondering how she had gotten that so wrong.\n\n\"I suppose I should have thought of that. I didn't disturb you and Gideon, did I?\" Marcella asked.\n\n\"No,\" Vivienne shook her head and blushed. \"It's all a bit too new and complicated for anything like that,\" she admitted.\n\n\"Something tells me that all three of those Zenati brothers are complicated,\" Marcella laughed.\n\n\"I don't think you're wrong about that,\" Vivienne laughed with her. \"I'm very curious about their sister, Sera. Gideon said that Sera is short for Serafina but that she isn't angelic at all.\"\n\n\"Interesting,\" Marcella said and checked her watch. \"We should call her after we have finished our coffee. What are your plans for the next few days?\"\n\n\"Well, I'm not sure how welcome I will be at the clinic after I told Genesis he could fire me after I interfered in what he was doing for Olivia - again,\" she sighed. \n\n\"You don't agree with the treatment she is getting? You're the expert on these types of neuroses, aren't you?\" Marcella asked, obviously concerned that Vivienne and Genesis had a disagreement over her sister's treatment.\n\n\"Genesis has reasons for the things he does that I don't always see at first. Gideon seems to relish those opportunities to remind me that, even though I have all the background knowledge and research, I don't have the hands-on experience with extreme cases like this. If I am honest, Genesis has been one step ahead of me this whole time and is making a huge difference to Olivia's treatment and care. While I seem to make mistakes. I think it might do us all some good for me to take a break from the clinic today, maybe just call in this afternoon to check on her. I think she needs me there as a friend more than a doctor who keeps messing up,\" she sighed again.\n\n\"But you're the expert,\" Marcella repeated. \"Are you sure that it's not Genesis who is making the mistakes. I mean he isn't a doctor or anything.\"\n\n\"He's been pushing her since leaving the hospital to stop using the false identity that Remington Royce gave her and to take her name back and accept who she is, and she has been fighting him. Refusing to answer to the name and only speaking when called by nicknames, although she isn't insisting she is Serena anymore,\" Vivienne began to explain. \"I didn't understand why he was so adamant about her acceptance of her name, and I suggested she use the shortened version of Liv if she hated Olivia so much.\"\n\n\"That make's sense,\" Marcella agreed. \"I used to call her that all the time.\"\n\n\"I thought so too, until I had the reason that Genesis is so adamant it pointed out to me. Olivia is trying to hide from her past mistakes, all the guilt and self-recrimination she feels about the person she was when she was Olivia. I only gave her another name to hide behind so she wouldn't have to face you or anyone from her past. She uses other names as places to hide so that she can continue to think of Olivia as dead. Genesis wants her to face her past and move forward from that. He's trying to undo all the damage that Remington did to her psyche by showing her that she will still be loved and cared for as Olivia, no matter what secrets hide in her past.\"\n\n\"But Liv is Olivia. Like you said, it's just a shorting of the name.\" Marcella argued the point that Vivienne had tried to last night.\n\n\"It's still not her name. I even told her that if she didn't want to be Olivia because it was too hard, she could be Liv instead. I encouraged her to explain to Genesis how much she didn't like Olivia and tell him that she would be Liv instead for him. I didn't realise I was just giving her another fa\u00e7ade to hide behind. I made another mistake because I was looking at it through a different lens than Genesis. Turns out that I'm not the expert I thought I was, not with these extreme cases of brainwashing or conditioning anyway,\" she admitted. \"The women I usually work with are victims of domestic violence or sexual assault, not the long-term physical and psychological abuse Olivia has suffered.\"\n\n\"I'm sure your treatment is just as valid,\" Marcella said, wondering why this woman would be confessing her short-comings in the treatment of Olivia to her.\n\n\"You know, I never realised just how much I needed to someone to talk to who wasn't so invested in Genesis' agenda. I mean, I know you're invested in what happens to Olivia but...\" Her voice trailed off. \"I'm sorry. I shouldn't have unloaded like that on you. You barely know me. Trust me, if Olivia were my sister, I would want someone like Genesis looking after her.\"\n\n\"You know what? I could use a friend too,\" Marcella said decisively. \"Truthfully, I don't have that many girlfriends. I've been so busy working my butt off to prove myself to everyone that I don't do a lot of socialising.\" She felt for Vivienne and could see the toll that having to admit she wasn't the expert she was supposed to be had on her. \n\n\"You're a lawyer, I remember. I imagine that's a tough world for a woman,\" Vivienne said.\n\n\"Not really. I deal with family law mostly, but I chose not to lean on family support or apply to work in one of the family businesses, so that made it a bit harder, I guess,\" she shrugged. \"I'm like a third or fourth cousin from the Table, so I doubt that those close to the Table even take notice of what my sisters and I have done with our lives,\" she explained without rancour.\n\n\"I know a little about family law, because of the women I work with,\" Vivienne told Marcella. \"It can be a highly volatile space.\"\n\n\"True, but I am also a bit of a bitch at work. People who face me across the settlement table know that I negotiate hard for my clients. Some of them are spoilt and rich and others like the women you treat. I have asked Noah to help me navigate the legal system here. I'd like to know about the differences in Territory Law to state, if there are any.\" Marcella gave Vivienne an insight into her work in return for her confession, putting them back on equal footing again. If they were going to be friends, it was important that they started on equal footing. She knew more than a little about psychological profiling herself, not that she would ever admit that to Vivienne. The woman was the expert after all.\n\n\"Why are you interested in Territory Law? Are you planning on working here while Olivia recovers?\" Vivienne frowned.\n\n\"Maybe, but it's more for personal interest at this stage,\" Marcella hedged. She wasn't sure how much she could trust Vivienne with her plans yet, and she didn't want the Zenati putting obstacles in her way.\n\n\"I have an idea,\" Vivienne smiled across the table. \"Why don't we play hooky from the clinic and the brothers today and do some exploring on our own. I have barely seen this city, and I have been here for over two weeks.\"\n\n\"I was considering hiring a car so I could do a few things for Olivia. I'd like to try and find her boat for her. Maybe we could combine the two things, a bit of sightseeing and a visit to the marina?\" Marcella suggested.",
        "\"Sounds great, but I would like to just call past the clinic. I told Olivia I would be her friend, and I don't want her to think that I won't be there for her the day after I made the offer of friendship instead of being her doctor,\" Vivienne said thoughtfully.\n\n\"Well, why don't you do that this morning while I organise a car, and you can call me when you're ready to go. I might even call Sera and see if she is free for lunch with us today,\" Marcella replied and smiled. She had her own agenda but it didn't hurt to have friends, and she needed information that she wasn't so sure she would get from Noah without awkward questions. Sera was the next best thing, she hoped. \n\n\"You know that the Zenati would probably lend you a car,\" Vivienne pointed out. \n\n\"I guess that I have been so independent for so long that asking for things like that don't even occur to me. None of my friends would be in that kind of position, where they had a fleet of cars available for visitors. I'll call Noah, though I was hoping to just play hooky from the whole family and clinic and everything, and just enjoy the day,\" she sighed.\n\n\"You can. I have to call Gideon anyway, and now that I think about it, I wouldn't mind a little independence too, especially the type of independence a car could bring,\" she said thoughtfully. She would like to go and see Madrina again, by herself next time. She had so many questions about Gideon and his family, and she wanted to talk to the woman about the beautiful clothes she produced.\n\n\"Oh, good. You're corruptible then,\" Marcella grinned and laughed wickedly. \"Gideon doesn't have you totally bewitched yet, is what I meant. He's a man in love. I'm not sure how you are so strong in the face of it and keeping him at arm's length.\"\n\n\"I'm not! He says that too but honestly, I'm not. It's just that...\" She felt a small blush creep up her face. \"It doesn't matter.\" She shook her head, embarrassed at her lack of experience with dating. Being the object of someone's desire was so foreign to her. She just didn't know how to react. She knew what the books said and what she would advise her clients and patients, but it was so different now that she was the one being bombarded with hormones and the adrenaline of falling in love, or at least lust.\n\n\"Of course, it matters,\" Marcella gasped, seeing that she had struck a nerve with her new friend and grimacing. \"Tell me what's going on. I'm your best friend now, remember, and we can tell each other anything, knowing it won't go any further than just us,\" she promised.\n\n\"I just don't have much experience with men like Gideon,\" Vivienne sighed. \"Scratch that. I just don't have that much experience with men in general. I mean, look at me. Men like Gideon Zenati do not fall for women like me.\"\n\n\"I think Gideon is so into you that it's almost too much to watch. That guy couldn't be more in love. Why would you even question that? Are you totally blind?\" Marcella asked.\n\n\"It just doesn't seem real, you know? I keep waiting for that Carrie moment where everyone turns around and starts laughing at the big dumb idiot I have been, and I go all psycho on them.\" She gave a lop-sided smile. \"If it weren't for the fact that he is close friends with my brother Leighton, I wouldn't be taking him seriously at all. But Leighton would never do anything to hurt me, not even as a joke. I'm closer to him than anyone else on the planet.\"\n\n\"Leighton Papillo? The Chair of your Table?\" Marcella asked, shuffling the information in her mind to grasp the name.\n\n\"Yeah, I'm a Table Princess,\" Vivienne sighed. \"I just don't look like one,\" she said sadly.\n\n\"Did you even look in a mirror last night?\" Marcella asked incredulously. \"You weren't a princess, you were a fucking queen! I was so underdressed. I am going to need some retail therapy just to keep up with you if we go to dinner together again.\"\n\n\"That was a once-off thing. Gideon's Madrina made it. She's an incredible woman. Eccentric but incredible,\" Vivienne laughed. \"You should meet her. She would have something that suited you too, I am sure of it.\"\n\n\"Madrina?\" Marcella questioned.\n\n\"Godmother. Apparently the three boys lived with her during high school because their parents' property is so remote. I can't even begin to describe her or her house. It's just something you have to see and experience to believe.\" Vivienne's voice held an air of wonder to it.\n\n\"Better put that on the list of things for us to do this week then,\" Marcella laughed. \"I'm looking forward to meeting her now.\n\n\"A list! What a great idea!\" Vivienne enthused and pulled a notepad from her handbag along with a stylish silver pen. Lists she could deal with, men like Gideon and the feelings that came with that, she couldn't.\n\n*****\n\n\"Val,\" Gideon greeted his cousin as he strode into the newly-purposed suite in the clinic. The suite was across the hall from the one that Genesis occupied with Olivia and now housed a communications hub and a table large enough for the younger men of the Zenati who would make up the next generation Table to meet, while being sensitive to Genesis' needs as Olivia healed. Although he knew that Olivia possibly held the keys to finding the Suebi who had gone underground, after the first of the raids on their illegal businesses.\n\n\"Hey, the girls were great, and they're all set with the cars they wanted,\" Val chuckled.\n\n\"Great. At least with the cars from our lot we can keep track of them. Vivienne said Marcella had been planning on just getting a rental from Hertz,\" he grimaced. \n\n\"That crushing feeling in your chest doesn't get any better until she commits,\" Val said pointedly, looking at the hand Gideon had been rubbing his chest with. \"Try and remember not to smother her though. It will just make her run away faster.\"\n\n\"I'm doing something worse,\" Gideon admitted.\n\n\"Worse than smothering her?\" Val frowned.\n\n\"Valdemaro, you of all people should know that when I want something badly enough there are no holds barred,\" he smirked.\n\n\"You told your mother?\" Val said with wide eyes.\n\n\"Papa would have anyway. Besides, in this case, I think it's the only thing that's going to make a difference. Especially after Madrina's little chat with her,\" Gideon said, unconcerned by the look of disbelief that his cousin gave him.\n\n\"Geez, you're a brave man. Zia Tatiana is a formidable woman. I wouldn't want to be the girl in her sights, curse or no curse,\" Val grimaced. \"What if she doesn't approve of the match?\"\n\n\"Not much Mama can do but love her. Especially because I am having angina every fucking day over the stubborn woman,\" Gideon grumbled and rubbed his chest again. \"She'll say yes. I know she will. I just wish she'd hurry up and do it already.\"\n\n\"Patience was never your forte,\" Val chuckled and moved to the table to take a seat with his brothers and cousins once Genesis had arrived. \n\n\"Firstly, let's make this more of an open discussion than a formal meeting where I direct the proceedings. I have a few agenda items, but you are all welcome to weigh in for good or bad,\" Xavier began. \"The devil's advocate sometimes has more merit than the man who follows directives. After we have dealt with these, you can bring up whatever else has come up in the last few weeks that we, as the next generation, need to address. Each generation of the Table has improved on the one before it and we, no doubt, will have our own ideas on that. Which brings me to my first point of business,\" he looked around at the group, seeing that he had their full attention.\n\n\"I'll get them,\" Dominic stood. went to the door to the master bedroom in the suite and led out six more Zenati men who pulled up chairs to the lower end of the long table.\n\n\"During the recent crisis we learned two important lessons from the Vitali,\" Xavier began to speak again. \"Three, if you consider that I have grown out of the nickname X-man,\" he chuckled and saw a few of his brothers grinning. He knew that he would never fully get rid of that nickname, but he had to try. \n\n\"Get on with it, Eks,\" his oldest brother chortled. \"Fewer words, more talking.\" He used his father's line, which meant get to the point.\n\n\"During the recent crisis, the four leaders of the Vitali were drawn out of Melbourne, leaving the table to coordinate their lockdown and protection of their family. Of the two who had stepped up at the time, one did phenomenally well. The other found that some positions couldn't be shared. The Watchman is needed at his post and informs the leaders so that they can take in everything and disseminate it. So, another stepped up to fill the void without being nominated to do so, such was the nature of the crisis and the needs that arose, and one of the others who had been shadowing him took his usual place. The Vitali had started their new Table with a shadow table, who warmed the bench and attended official meetings but, in general, just did the job they would do anyway, with slightly more responsibility. I think the idea has merit, and I believe we could all use some help occasionally,\" he finished, looking around the table as if expecting a challenge.\n\n\"Alright, I'll be the devil for this one,\" Tullo, one of the cousins, said in a voice loud enough to carry. He was young and brash and didn't particularly care about being liked by one and all. \"I don't particularly mind being Genesis's shadow, especially because he has clearly lost his mind at the moment.\" He gave Genesis an amused look as the older man raised an eyebrow at him. \"Let's just say I do a far better job than him during his prolonged dip into insanity. Why should I have to step back down when he comes out of it?\"\n\n\"There is no stepping up or down, it's more of a sideways thing. If you think you have the skills to match him, I doubt that he would stand in your way of doing what you do best,\" Dominic said diplomatically.\n\n\"Nah, we'd have to duel for it. I'd choose pistols at forty paces because I have a flair for that sort of drama and it always sounds pretty noble,\" Genesis said, with a perfectly straight face. \"Shit.\" He ran a hand through his hair. \"Guns are illegal, how are you with a sword?\" He looked directly at his cousin. He wasn't offended and could see that Tullo was teasing him to make a point.\n\n\"A bit old-fashioned for me,\" Tullo grimaced. \"How do you feel about a cage fight to the death?\"\n\n\"There's no poetry or grace in cage fighting!\" Genesis looked aghast. \"And you expect me to work with this uncouth monster? He who has no depth to his soul!\" He turned a long-suffering look on Xavier and Dominic.\n\n\"He's the devil here, ergo he doesn't have a soul. So just work with what you're given, Gen\" Xavier said and rolled his eyes.\n\n\"Yeah, all right,\" Genesis shrugged, settled back in his chair and smirked at Tullo. They had a good relationship and working with him would be entertaining if nothing else.\n\nThere was chatter amongst the Table as the shadows were aligned with their mentors. Only the two leaders and Gideon were not assigned shadows. Hector's shadow would be Helena, in lieu of any other doctors in their generation, but she would not sit at the Table gatherings. Having a woman on the Table would probably be one step too far for the older generation to accept. Gideon, too, would have a female counterpart, who managed the family bank, but only he would deal with the Table business.\n\n\"You said there was a second lesson learned?\" Orlando asked. He had a fairly good idea what it was, but he was happy to hear Xavier's explanation of events.\n\n\"As most of you know, the early warning system that allowed us to foil the attack on Mama and Emma didn't come through the usual channels. When I was about twelve, I started spending half of my summer with a specially-selected group of boys at various locations. That group was formed by our fathers and included at least one boy from each of the Tables, the Donatis sent twins, Dante and Leo. We formed bonds of friendship that tied us all together, some more than others, but the bonds were real none-the-less. You all know that I went overseas earlier in the year on family business. I met with that group there,\" he explained.\n\n\"Each man in that group is now either an Oracle or Chair of their Family. It was to that group that Ricco Vitali sent his warning, hoping that they would believe him and raise the alarm immediately. He knew the watchmen would take time to investigate the warning, rather than just hit the alarm button, so he went with his gut. I didn't hesitate once I realised who it was from and who he had sent it to, such is the trust I have in his brother Matteo and the rest of that circle of friends,\" Xavier admitted. \"That bond and the trust I have in it saved the hearts of our Table, and I think it bears closer scrutiny about what we could do, if we each chose to connect with our counterparts on the new Tables. All of the Tables have selected their new generation, and many like ours have not taken control of the Table yet. So, we have a unique opportunity here to reach out to each other in a way the Tables haven't in the past. Even to those that we may not always agree with.\"\n\n\"I have to say that if Xavier had hesitated, it might not have been such a successful day for us. We were given a window of minutes to act, and the man who took the time to alert every Table was, at the time, battling to keep his mother and the woman he loved alive. You all know the Vitalis' story and why Theresa now lies in one of our own hospital beds,\" Orlando added to the story. He was a little in awe of Ricco Vitali's cool calmness in the crisis that he was embroiled in. His vision had saved all but one of the mothers of the Tables, and that family had been part of the crisis assailing the Tables.\n\nThe discussion was all positive, and the men could all see the merits of what Xavier was proposing. The option of video conferencing made the idea far more appealing for the men who stayed close to home, especially after finding their soulmate. They also knew that any threat to Xavier's wife Emma, real or imagined, would have made him react far more rapidly than an alert to the watchmen would have, for the same reason. The bond of the curse made the Zenati men overprotective and, at times, overbearing and controlling, where their wives were concerned.\n\n\"New business.\" Xavier ended the discussion to move on with the hunt for several Suebi pods and their leaders that had gone to ground and couldn't be located as yet. The federal police were working with the family, as well as the Tatar psychics, but they were continually hitting dead ends.\n\n\"The only person with the information to help us is in no fit state to do so yet, but we have hope,\" Dominic said and looked directly at Genesis. \"How is Olivia doing now?\" he asked.\n\n\"Better, but I doubt that she knows much. Remington kept her separate from that side of his business, for the most part,\" he said. \"Give me a few more days, and we can get the Tatar to speak to her and see what they can sense. I doubt that she could handle a real interrogation of any sort,\" he said, barely controlling the dark emotion that he felt at having to put Olivia through that.\n\n\"Let us know, but the sooner, the better,\" Xavier suggested meaningfully.\n\n\"Sure,\" Genesis said. \"With the command centre being set up here for us, I'm sure that I can get some investigations done quicker and more cleanly than I would have otherwise.\"\n\n\"This place hardly gets used now that we have the facility out at Coollinminmin. It was on the verge of being closed down anyway. We could look at setting up something more permanent for our Table here if you want, Eks,\" Hector suggested. \"Unless you're in love with that stuffy old library that your father uses.\"\n\n\"Not a bad idea. It's pretty central to us all. Gideon, can you look into it for us? Get Rico and Zanto in on it too. See what we would need to do to convert and work up some numbers for us. Assuming you mean to house a server here, as well as offices for the financial arm of the family business,\" Xavier continued as he considered the proposal. \"Maybe even a permanent media hub, if Gen is setting up a temporary one anyway.\"\n\nThe discussion began around the various needs of each member and their shadow. When Genesis finally looked at his watch again, he was shocked at the amount of time that he had been in the room with his brothers and cousins and came to his feet.\n\n\"I'm just going to check on Olivia. Keep me informed or come to grab me if anything else comes up, but I am not needed for this,\" he said and walked toward the door.\n\n\"Wait, there's something I haven't told you.\" Gideon stopped him with his hand on the doorknob.\n\n\"What's up?\" Genesis turned to look at his oldest brother, realising that there was a small hint of anxiety in his voice as he asked him to wait.\n\n\"Mama is on her way to the city today,\" Gideon said so quietly that Genesis wasn't sure if he had heard right until Noah let out an expletive.\n\n\"Fuck! Even Papa wasn't dumb enough to tell her,\" Noah said and narrowed his eyes on Gideon.\n\n\"I didn't say anything about Olivia, just Viv. I'm just giving you the heads-up in case,\" Gideon replied, trying to justify why he had called their eccentric mother back to the city. \"Besides, Madrina misses her terribly.\"\n\n\"Shit!\" Genesis spat and stalked from the room.\n\n*****\n\nVivienne and Marcella had enjoyed their morning with Valdemaro Zenati, and after dropping Vivienne's car back at the apartment building, they had gone into the city to do a little shopping before meeting Sera for lunch. They were laughing at the fact that Valdemaro had also given them a list of stores where the Zenati held accounts that they could use, saying that Gideon had organised charge cards for them if they wanted anything to make their stay in Darwin more enjoyable.\n\nThanking of her dwindling savings, Marcella had jumped at the opportunity, while Vivienne had been more reluctant to take advantage of his kindness. It had made Marcella more aware than ever that she and her new friend had grown up in completely different worlds, but there was no way she was going to turn down the free loan of a practically brand-new car and access to several charge cards while she was here. She knew that, just like every Table, the Zenati could afford to be generous, and she was intending to help Genesis by helping Olivia, so he owed her in a way. \n\nThey walked into the upmarket restaurant and asked for the table booked under the name of Zenati. They were led to the bar where two women rather than one waited for their arrival. Knowing how nervous Vivienne was to meet what would possibly be her future sister-in-law, Marcella stepped forward and held out her hand.\n\n\"You must be Sera. I have been really looking forward to meeting you,\" she said with a wide smile.\n\n\"You must be Marcella, and you,\" she turned her gaze on Vivienne, \"must be the lovely woman who has turned my big brother's brain to mush,\" she giggled, holding out her hand. \"It's so lovely to meet you, Vivienne. Let me introduce you to Tatianna Zenati, Gideon's mother and mine.\" She grinned again as her mother stared at Vivienne's outstretched hand, not moving to take it for several long moments, then taking it in a limp hold for a second before letting go again.\n\n\"My goodness, you look like a cross between Wonder Woman and Geena Davis. I'll get a stiff neck looking up at you like this. Please sit down, Vivienne,\" she said and looked at the second woman to arrive. \"Hello Marcella, I was so sorry to hear about your sister's plight. It must be devastating,\"\n\n\"Thank you,\" Marcella said, stunned by the larger-than-life version of Sophia Loren that she was confronted with. She was offended on Vivienne's behalf by the woman's rudeness, but her friend didn't seem affected as she took a seat. \n\n\"Shall we go get our table?\" Sera asked. Vivienne only nodded and swallowed, but Marcella smiled, trying to break the tension as they rose and followed the two Zenati women back to the restaurant hostess to be seated. She took Vivienne's hand, showing her support, and saw the gratitude in her new friend's eyes as she turned to face her. ",
        "They sat and made small talk about how the girls liked Darwin and the warmer-than-usual weather. Vivienne barely spoke except to agree that the weather wasn't much different for her in the Kimberley region.\n\n\"I've always been a summer girl,\" Marcella said enthusiastically. \"So, I am loving being here where you name your seasons by whether they are wet or dry rather than hot or cold.\" She looked up as her lunch was placed in front of her and smiled at the waitress. \"Thank you,\" she said keeping the cheerful tone in her voice.\n\n\"You said you've been shopping this morning?\" Sera asked as the waitress moved away. \"You should have waited for me. I know all the best places up here, but they are nothing compared to Melbourne. I love Melbourne shopping.\"\n\n\"Val made some suggestions when we saw him this morning.\" Marcella jumped in once again when Vivienne quickly pushed some food into her mouth so that she wouldn't have to talk. Marcella couldn't work out why Vivienne was so nervous, She was beautiful and accomplished, and it was obvious that Gideon was crazy about her.\n\n\"You're not very talkative, Vivienne,\" Tatianna said, placing her hand over Vivienne's as she went to take another mouthful. \"Perhaps more talking and less eating would be a better idea for you,\" she said, as if giving kindly advice.\n\n\"Honestly, I don't know what to say. I wasn't expecting to meet you here today, and I feel a little off balance. Does Gideon know you are here?\" Vivienne asked. If he had known that his mother would be at this lunch and hadn't told her, she wouldn't forgive him.\n\n\"He knew I was coming to the city. How could I not come when he told me he met his one?\" she smiled widely. \"I'm here just a little earlier than expected and must say you're not what I anticipated at all. Gideon was always so...\"\n\n\"He knew you were coming but not to this lunch?\" Vivienne asked to clarify before the woman could say anything else to directly insult her. She could feel Marcella stiffen beside her, as if ready to pounce and come to her aide. There was no need for them both to be on the bad side of this woman. Noah was obviously into her, and she didn't want her friend ruining her burgeoning relationship with the woman on her behalf.\n\n\"How could he know that I would be hungry when I arrived? I didn't even know I was hungry until I called Sera and she told me she had a lunch date with you,\" Tatianna laughed. \"Luckily, she never minds me tagging along.\"\n\n\"Like I ever have any choice,\" Sera laughed and looked at her mother indulgently. \"You'll find it is just easier to give in where Mama is concerned.\" Sera advised the two women, hoping they would take her eccentric mother for the meddling mischief maker she was, rather than be insulted by her.\n\n\"You came to meet Vivienne, but you made her guarded by the surprise attack. You can't blame her for not wanting to play nice when you didn't,\" Marcella said as she came to Vivienne's defence.\n\n\"You don't seem to have any trouble,\" Tatianna laughed. \n\n\"That's because I don't get intimidated easily,\" Marcella shrugged. \"I'm a bitch, and I have no problem telling you that you just made it infinitely more difficult for your son to get her to accept his proposal, because now Viv is wondering if she can trust either of you to be upfront with her. It's a shame really, because Gideon is head over heels in love with her,\" Marcella spoke as if she couldn't care less about insulting this family matriarch. She was obviously once a table princess who still expected everyone to do her bidding, and Marcella knew those women well.\n\n\"You are delightful,\" Tatianna laughed merrily. \"If a little thing like this lunch can drive a wedge between the lovebirds perhaps it's not fate or destiny or even a love curse that brought them together in the first place.\"\n\n\"Destiny? Fate?\" Marcella rolled her eyes. \"How about just pure attraction and compatibility? Gideon is in love with her. He won't be thanking you, either of you, any time soon for this little ambush.\" Marcella was indignant on Vivienne's behalf and included the brothers' sister, Sera, in her accusation, enjoying the younger woman's horrified look.\n\n\"Stop, Marcie,\" Vivienne said gently. \"Let's just finish the lunch. It's not worth making a scene over.\"\n\n\"That's true,\" Tatianna said sympathetically. \"It's entirely understandable that you wouldn't want to draw attention to yourself in a place like this, Vivienne. You must feel awkward enough already,\" Tatianna continued to make a dig about Vivienne's height and curvy figure.\n\n\"I've lost my appetite,\" Marcella said, ignoring the older woman and forcing her voice into a gentler tone as she heard the resignation in Vivienne's voice. She pushed down her anger with the woman sitting across from them down and spoke quietly. \"I'm sorry Viv, I never meant to upset you by talking like that.\"\n\n\"You didn't upset me,\" Vivienne said and gave a weak smile. \"I don't know how I let Gideon convince me to stay this city in the first place. You can't be mad at Tatianna for pointing out the obvious. If you're sure that you're finished, we might go then.\" She squeezed Marcella's hand. \"It was lovely to meet you both,\" Vivienne said to the other two women, and Marcella could hear the professional tone and see the mask that Vivienne had donned to hide her hurt. \"Maybe we'll meet again one day.\"\n\n\"Vivienne, wait,\" Sera said, seeing too late just what a mess her mother's appearance had made of things. \"You've gone too far this time, Mother! This isn't a teenage crush. Gideon is a grown man who knows the difference between lust and love. He won't forgive you for this, and he won't forgive me, none of them will.\"\n\n\"I didn't say anything that her Mama wouldn't have said many times. That friend of hers did all the talking. She was the one who upset Vivienne, not me, and as I said earlier, if my coming to this lunch is enough to drive a wedge between them then I seriously doubt she was his one,\" Tatianna said dismissively and began to eat her lunch again, as if there was no problem at all with what had just occurred.\n\nSera stood to hurry after the two women but stalled, having barely moved from her seat as Marcella came back to the table and spoke in a low voice.\n\n\"You can act as superior as you like and you don't deserve to know this, but as a mother and daughter, I think you should know. Vivienne's mother never had the chance to say any such things to her, or anything to her at all, as she grew up because she died when Viv was a child. What you said was beyond heartless and cruel, and trust me, Vivienne is a better woman than your son deserves for doing this to her,\" Marcella hissed. Then she swung around and walked to where Vivienne was paying for their lunch rather than be called a gold digger as an added insult. Then they left.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "friends",
        "secrets",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-07"
}