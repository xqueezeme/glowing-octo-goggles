{
    "title": "What Happens with Cousins",
    "pages": [
        "Author's note: When I wrote the first story, I had no idea it would turn into a series but I can't seem to get this trio out of my head. This chapter is much longer than the other ones and is intended to be the final chapter, so be prepared. Also, this story does contain some light drinking, drugs and other questionable decisions. Finally, I have to thank the amazing Literotica members who edited this chapter: alexiskiara and Iris M., their feedback was invaluable. All characters are over the age of 18. Hope you enjoy!!\n\n*\n\nI was having an amazing dream. My sister Lilia was giving me a blowjob. Slow and sloppy, she worked her mouth down my shaft, deep throating me until her lips ground against the base, then slowly worked her way back up to the tip. I felt an orgasm coming and realized I was going to have my first wet dream since I was a teenager.\n\nThat thought snapped me awake, but the feeling of my sister's mouth on my cock didn't go away. I looked down, and sure enough, Lilia's head was bobbing up and down on my cock, the same way she was in my dream. When she saw me looking at her she pulled my dick out, making a wet \"pop\" sound, and whispered to me.\n\n\"Lissy's still sleeping, but I saw you get hard in your sleep and couldn't resist.\"\n\nWith that she lowered herself back down onto me. I closed my eyes and leaned my head back, savoring the feeling of my sister's mouth. I must have died before the party last night, because this must be heaven. Last night's events were just too hard to believe: getting trapped in that tight space and fucking my sister while her friend licked her clit; the ride home where Melissa blew me while my sister fingered her to orgasm before they shared my cum; the frantic threesome when we got home; now waking to find my beautiful sister sucking me to yet another orgasm as her friend snored beside us. It was all too good to be true.\n\nLilia slid up my body, kissing her way to my face.\n\n\"I'll just have to apologize to Lissy if we wake her up, but I can't wait to get your cock in me\" she whispered before lowering herself onto me.\n\n\"Oh.\" she cried, almost in surprise, before working herself up and down my shaft.\n\nThe feeling of my sister's wet pussy clamped around my cock was pure nirvana. I moved my hands up to play with her tits as we kissed and fucked, the whole world reduced to the connection of our skin, the wet slap from the meeting of our sexes, the hot passion of our lips and tongues. Lilia rode me, slowly at first but getting faster and faster as her passion grew.\n\n\"Hey! No fair you two getting started without me!\" Melissa teased, lust quickly pushing out the bleariness of sleep in her eyes.\n\n\"Mmmmm, the early bird gets the worm.\" I said.\n\n\"You mean the early sister gets the brother's cock!\" Melissa retorted before moving in to kiss me, then Lilia. \"Let's see if you eat pussy as well as you fuck.\"\n\nMelissa, without breaking her kiss with my sister, lowered her pussy onto my mouth. I ran my tongue up and down her lips and clit, making sure to spend most of my time on the sensitive nub. I could hear the girls' moans as they kissed each other, smell the mixture of Lissy's arousal and the earthy scent of her ass.\n\nLilia's orgasm crashed into her with no warning, her pussy clamping down on my cock as her body tensed and shivered.\n\n\"Fuck, Jimmy, fuck\" She said, trembling and shaking through her climax.\n\n\"Perfect timing!\" Melissa said \"I really needed some cock!\"\n\nLilia was barely off of my cock before Melissa jumped on, sliding my full length into her in one stroke.\n\n\"Mmmmmmmmm, my turn to get filled with your cum Jimmy.\" She said. \"But I get to cum first.\"\n\n\"You better hurry then....\" I said, not sure how long I could last after my sister's blowjob and fucking.\n\n\"Don't worry, I'll make sure you wait.\" She said and dug her nails into my chest, slowly scratching them down towards my stomach. I sucked in a breath, the slight pain just enough to feel over the pleasure of her pussy.\n\nLissy rode me hard and fast, her big tits bouncing, one hand squeezing her nipples while the other clawed into my chest. My sister, meanwhile, pressed herself against her friend's back, working her hand around to play with her clit as she fucked me.\n\n\"Mmmmmmhh, yes, so close, mmmmm, right there, oh fuck me.\"\n\nI could feel Melissa's pussy start to quiver around my dick as her orgasm approached, making my balls tighten too. Her nails dug harder into my chest, delaying my orgasm just a little more.\n\n\"YES, RIGHT THERE, OH RIGHT THERE, DON'T STOP, DON'TSTOPDON'TSTOOOOOOOOHHHHHH\" Melissa screamed. Some dim corner of my brain worried that my mom had come home from her overnight shift but that worry was drowned out by my own approaching orgasm.\n\n\"I'm gonna cum.\" I yelled\n\n\"YES, GOD YES CUM IN ME! CUM IN ME!\" Melissa screamed\n\n\"Oh I'm gonna cum.\" I yelled again \"I'm gonna cum, I'm gonna cum, I'm cumming, FUCK, I'm cumming.\"\n\n\"YES, I WANT YOUR CUM! CUM IN ME! YES! OH YES! OH!\n\nMy orgasm felt massive, as if I hadn't just cum multiple times last night. I pumped more and more cum into Melissa's twitching, pulsing cunt as she slammed herself up and down onto me through her own climax. After what felt like an eternity, the last spurts tapered off and stopped. Melissa fell over on top of me, panting.\n\n\"BEST MORNING EVER!!!\" Lilia screamed, making us all laugh.\n\n\"OK you sexy bitches, I need a shower and breakfast.\" Melissa said, then pointed to Lilia \"You're coming with me. We didn't get enough girl time last night.\" She pointed to me, \"you're figuring out where we can get some bacon and eggs.\"\n\n\"Yes ma'am,\" I said.\n\nMelissa grabbed my sister's hand and pulled her down the hall towards the bathroom.\n\n\"See you bro!!\" Lilia called, giggling.\n\nI laid back on bed, stretching out and resting my head on my hands. This WAS the best day ever. I soon got up and pulled on some pants before checking my phone. It was almost 10:30, Mom should be home by now, I thought. As if on cue, I heard my mom's car pull into the driveway and thanked my lucky stars she didn't get home a few minutes earlier.\n\nI quickly made my way to the bathroom. I didn't want the girls getting caught in a compromising position.\n\nI opened the door and peeked my head in, suddenly dumbfounded by the sight that greeted me. Melissa was leaning against the back of our shower stall, one leg up on the ledge, with Lilia's head buried in her crotch, licking her friend's cunt as if it was filled with elixir of eternal life.\n\n\"Uhhh, guys, Mom just pulled into the driveway.\" I said.\n\n\"Better hurry Lil, you don't stop until I cum. I don't think you want your Mom to see you like this.\" Melissa said. My sister brought her hand up and worked two fingers into her friend's pussy as she licked her clit, eliciting moans from Melissa.\n\n\"Oh yeah, right there.\"\n\nI reluctantly closed the door and headed downstairs, the sounds of Melissa's orgasm fading as I went down the steps.\n\n\"HEY GUYS I'M HOME!\" My mom screamed as she came in the front door. \"Oh Jimmy, you're here. Is your sister up?\"\n\n\"Hey mom. Yeah, Lil's up, she's in the bathroom with Lissy. She stayed over last night.\"\n\n\"OK. Did you guys have breakfast yet?\" Mom asked, dropping her stuff on the bench next to the door.\n\n\"No, we just got up. We had kind of a late night last night.\"\n\n\"OK. I'm exhausted. I had a brutal shift at the hospital last night. I'll leave some money on the table so you guys can go get something to eat. I need to crash.\"\n\n\"Thanks mom! Go get some rest.\"\n\nI lingered at the bottom of the stairs, crossing my fingers that the girls were either done or being quiet enough that they couldn't be heard. Just as mom got to the top of the stairs I heard the bathroom door open.\n\n\"Hey mom! How was work?\" I heard Lilia say.\n\n\"Phew. Bullet dodged.\" I thought and started up the stairs myself.\n\n\"Brutal. I'm hitting the sack. I left some money downstairs so that you and Lissy and your brother can get some breakfast.\"\n\n\"Awesome! Thanks Mo... JIMMY!!! I'M NOT DECENT!!! TURN AROUND!!!\" Lilia screamed, clutching at the towel wrapped around her body.\n\n\"Oh, uh sorry,\" I said, quickly turning around, barely able to hold back a laugh.\n\n\"GOD!! PERVERT!!\" Lilia was really selling this little tableau.\n\n\"Oh stop it!!\" Mom chided. \"If you don't want your brother to see you like this then get changed in the bathroom.\"\n\nThe bathroom door opened again.\n\n\"Hey Mrs. B! How was work.\"\n\n\"Hey Lissy. Work was brutal. Think you can keep these two from killing each other at breakfast?\"\n\n\"I think I can help them get along.\"\n\n------------------------------------------------------------\n\nThe next couple of weeks were... interesting.\n\nAfter breakfast, Lilia and Lissy went to the mall while I went home. They both gave me big kisses when they left. I tried studying again, but it was useless. All I could think about was the feel of my sister's body, the softness of Melissa's lips, the sight of my cum leaking out from between their kiss. I was thrilled....and ashamed. I'd had sex with my sister, committed incest. Sure it was consensual, but we were both drunk and high and clearly not making the best decisions. With the fog of intoxication and lust cleared by the day, I couldn't stop thinking that what we did last night was very wrong... no matter how right it felt.\n\nThat night, after thinking about it all day, I decided that the night before should be a one-time thing. There's no way we should be having sex all the time. I mean, it's not like I could date my sister. It was amazing and everything but still... it was wrong. I never even asked if she was on the pill. I was laying on the couch, watching a movie and thinking about how to tell my sister we had to stop when Lilia came in.\n\n\"Whatcha watchin' bro?\"\n\n\"300.\"\n\n\"Haven't you seen this, like a thousand times?\" She asked.\n\n\"Yeah, but it's a classic. I could watch it a thousand more.\" \n\n\"Hmph\" Lilia grunted non-commitally and sat between my legs, laying back on top of me. I instinctively wrapped my arm around her chest. She put her hand on my forearm and snuggled a little tighter into me.\n\nI laid there for a few minutes, enjoying the sensation of my sister being so close, maybe for the last time.\n\n\"Listen....Lil....last night was incredible...\"\n\n\"Yeah it was.\" She said.\n\n\"I know, but we really can't keep doing it. I mean, we're brother and sister, it's wrong.\"\n\n\"Yeah, I know....\" she said, sounding a little down.\n\n\"Look, you know I love you and would never do anything to hurt you, but we have to be real.\" Somehow my hand had started slowly stroking my sister's chest, just at the tops of her tits. I felt her hand stroking my thigh. \"It's not like we can date. And what would Mom do if she found out?\"\n\n\"Yeah you're right.\" She said, her hand moving a little higher. \"I was kind of thinking the same thing. Lissy was freaking out all day today but I was trying to calm her down. She's so excited, she wants us to be a throuple.\"\n\n\"Really?\" I said, my hands, seemingly moving on their own, caressing more and more of my sisters chest.\n\n\"Yeah. I never knew this, but Lissy has a BIG TIME incest fantasy. She's really into brother/sister sex so last night was the biggest turn on for her. And you know she's always had a thing for you.\" My cock had started stirring; I could feel the pressure of my sister's ass on it. Almost imperceptibly, she started slightly moving her hips.\n\n\"Wow.\"\n\n\"OH YEAH. She couldn't stop talking about it all day. She was turning herself on so much that she pulled me into a dressing room at the mall so we could fuck again.\"\n\n\"Really?\" I asked. \"I never knew you guys were bi...\"\n\n\"Me neither.\" Lilia brought her hand up to her chest and started slowly rubbing one of her breasts as I rubbed the other. Her nipples hardened as we stroked them. \"Apparently Lissy was, but she just always liked guys more. She had done some stuff with a girl she met on vacation last year, but didn't tell anyone. I've never done anything with another girl before, but Lissy is just so...\"\n\n\"Juicy\" I finished for her.\n\nLilia laughed \"Yeah. Like a delicious fruit that's perfectly ripe.\"\n\n\"Anyway,\" She continued. \"Lissy was going crazy over us. While we were fucking at the mall, she kept talking about how she couldn't wait to see my brother's cock in me again, how she loved watching us fuck and wanted to watch you fuck my ass.\"\n\n\"Wow.\" I said, my cock getting harder and harder. Lilia had idly dropped her hand to her pussy and had started moving her hips more, now openly grinding her ass against my cock.\n\n\"Yeah. I have to admit, it turned me on A LOT, even though I was thinking the same thing as you. I think that's why we have to stop now, because if we don't, I don't think we'll be able to.\"\n\n\"Yeah, totally.\" I said. Somehow, I had started grinding my cock against my sister's ass and was now blatantly playing with her breast and nipples through her shirt. Her breathing had quickened into a breathy pant, her hand now all the way in her pants as she played with herself.\n\n\"I think we should just fuck this one last time to get it out of our system.\" Lilia said \"This way we're not tempted anymore.\"\n\n\"Absolutely.\" I said. Pushing her forward onto her knees and roughly pulling down her shorts and panties, before quickly pulling my pants down, my now hard cock springing up.\n\nI thrust into my sister, hard.\n\n\"Uhnhn.\" She grunted as I bottomed out into her pussy in one stroke\n\n\"Shhhhhhh.\" I whispered into her ear. \"Mom's upstairs.\"\n\n\"I'll...uhnh....try..hngh...but....mmhn...your cock....oh...feels so gooooooood.\"\n\nI growled quietly into her ear and pressed her into the couch with my weight, thrusting roughly into her from behind.\n\n\"Fuck, you feel so good.\" I said.\n\n\"Oh yeah, you love fucking your sister don't you?\"\n\n\"Yes. I love fucking my sister's hot, wet pussy.\"\n\n\"Oh fuck me Jimmy. Fuck your sister. Make me cum. Make your sister cum.\"\n\nIt didn't take long. I felt Lilia start to tremble beneath me as she started to cum. She pulled a throw pillow to her face and bit into it as her orgasm rocked through her.\n\n\"Mmmmmmmh, mmmmmmmh, mmmmmmmh\" She groaned into the pillow.\n\nI kept pumping through her orgasm, my own approaching rapidly.\n\n\"You want your brother's cum in you?\"\n\n\"Yes.\" She breathed \"I want your cum Jimmy.\"\n\n\"You want me to cum in you?\"\n\n\"Yes. Cum in me. Cum in me.\"\n\n\"I'm gonna fill you with my cum. Get ready to take your brother's cum. Oh fuck, I'm cumming.\"\n\n\"Mmmmmh, Jimmy cum in me, cum in your sister. Yes.\" She said.\n\nI growled in her ear again as I painted her pussy with spurt after spurt of my seed. I pushed in as deep as I could, making her cry out, as the last spurts of my cum filled her womb.\n\n\"OH!\" My sister screamed when the tip of my cock hit her cervix, triggering another orgasm. \"OH!\"\n\n\"Lily, you OK?\" My mom yelled from upstairs.\n\n\"Yeah mom! She just stubbed her toe!\" I yelled back, Lilia's body twitching and convulsing as her second orgasm ran through her.\n\n\"Oh no!! Is she OK?\" Mom yelled.\n\n\"Yeah, she's just walking it off.\" I replied\n\n\"I'm fine Mom!\" Lilia yelled, her voice sounding strained. \"It'll be better in a second!\"\n\nI smiled watching as Lilia curled up, twitching all over. I leaned over and kissed her, deeply.\n\n\"Yeah. We definitely need to stop.\" She whispered to me. \"I'll get addicted to that really quickly.\"\n\n------------------------------------------------------------\n\nAfter that Lilia and I touched and flirted like high schoolers with crushes, spending as much time as possible together, sitting close together on the couch, casually making contact as we moved around the house, slipping double entendres into our conversation whenever possible. I was hard almost every waking moment now. \n\nWe were able to keep to our pledge a whole two days.\n\nI had been taking a nap and dreamt of my sister and Melissa. They were in a 69 and I was thrusting into my sister's ass. I pounded harder and faster as I felt my balls tighten. I woke up just before I came, my dick so hard it hurt. I stood up, panting, my mind still filled with the lurid image of my dream. I walked to the window and looked out, seeing the driveway empty.\n\nI needed some water. And a cold shower to get rid of the iron bar in my boxers. I went downstairs and headed for the kitchen. As I walked in, I was greeted by the sight of my sister, bent over the kitchen counter, dressed only in a spaghetti strap top and a pair of white cotton panties so thin they might as well have been see through. She was eating an ice cream cone. She turned to look at me, her eyes full of lust, her gaze taking in my body, clad only in boxers, her stare stopping at my cock straining against the front of my boxers.\n\n\"Want some?\" She asked, her voice honey, and took a lick of the ice cream.\n\nI was on her in a flash, literally ripping off her panties and shoving my cock forcefully into her pussy.\n\n\"UHNH.\" She grunted as I slammed my cock into her. I reached around and roughly grabbed her boobs, pinching her nipples, kissing and biting her neck.\n\n\"FUCK!! FUCK ME JIMMY! FUCK YES!! I NEED YOUR COCK!!\"\n\nI jackhammered into her, sweat starting to drip from my body onto her back. I pulled my hands from her tits, one grabbing a fistful of her hair and pulling her head back sharply, the other shoving my thumb into her mouth.\n\n\"OH!!\" She screamed, slamming her hips back in time to my thrusts.\n\n\"Get my thumb nice and wet for your asshole.\" I growled into her ear.\n\n\"Mmmmmph\" She sucked greedily on my thumb, lubing it with her saliva.\n\nI pulled it out of her mouth and slammed my cock into her, hard, pinning her against the counter. I pushed her head down against the counter as I rubbed my slick thumb against her asshole a couple of times before shoving it in.\n\n\"FUCK!! FUCK!! OH JIMMY YES!!\n\nI pushed my thumb into her ass as deep as it would go then started working it in and out as I resumed pounding my dick into her pussy.\n\n\"OH FUCK!! OH GOD!! OH FUCK!!!\"\n\nFeeling my thumb rubbing against my cock through the thin wall between my sister's ass and pussy triggered my climax, the world turning to bright white as my cock erupted cum into my sister.\n\n\"OH FUCK!! I'M CUMMING JIMMY!!\"\n\nI kept pounding through our orgasms, my cock staying hard even as my cum dripped out of Lilia's pussy, making a puddle on the floor.\n\nEventually, panting and sweaty, we slowed, then stopped. I leaned forward, resting my body on top of my sisters on the counter.\n\n\"Yeah, that should definitely be the last time.\" I said.\n\n----------------------------------------------------\n\nI heard a small knock on my door, then a yelp when the thunder boomed again.\n\n\"Jimmy, are you awake?\"\n\nLilia opened my door and peeked her head in, barely visible in the dark.\n\n\"Yeah. Thunder bothering you?\"\n\n\"Yeah.\" She said, embarrassed. Lilia had always been terrified of thunder.\n\nIt had been nearly three weeks since we had fucked in the kitchen and I thought we were really going to be able to stop this time. The intensity of that encounter had helped, but so had Melissa, who had been fucking us each silly since then. Lilia had told her about our decision to stop having sex and Melissa had said that since she couldn't fuck us together, she would at least fuck us separately and fantasize.\n\n\"Can I lay in here with you for a bit?\" Lilia asked.\n\n\"Yeah, come here.\" She laid down on my bed, draping her body across mine and snuggling in close.\n\n\"Sorry, I was just freaking a little in my room.\"\n\n\"It's ok. It's nice cuddling with you.\"\n\nWe lay there silently listening to the storm pound away. I breathed deeply through my nose, relishing the sweet smell of my sister's shampoo. She sighed against my chest and I felt her body relax. A few minutes passed and I thought she had fallen asleep. The room suddenly flashed bright as lightning struck, followed by a thunderclap as loud as a bomb.",
        "\"EEEE!!\" Lilia jumped and clutched me tightly.\n\n\"Shhhhhh...shhhh...\" I shushed, stroking her hair.\n\nAnother boom of thunder made Lilia squeeze me more, though she didn't scream this time. I could feel her tremble a little as she gripped me for dear life.\n\n\"It's ok...\" I whispered \"I'm here.\"\n\nShe looked up at me and I met her gaze, smiling. She smiled back and brought her lips to mine, giving me a chaste peck on the lips.\n\n\"Kiss me.\" She whispered and pressed her mouth to mine, this kiss far from chaste. Our tongues met as we kissed. Lilia climbed on top of me, straddling me and running her hands over my bare chest. She broke our kiss and pulled her nightgown over her head, leaving her dressed only in a pair of panties. Lilia brought her face close to mine, her lips nearly touching mine.\n\n\"I'm going to make love to you for the rest of your life.\" She whispered and kissed me again. Our hands moved all over each other's bodies, caressing, grasping, teasing. At some point we took off our underwear, but I barely noticed when. Everything was a blur of stroking, kissing, licking, caressing. When she finally guided my cock into her, it was like the whole universe came into alignment.\n\n\"Shhhhhhh,\" she whispered to me \"We don't want Mom and Dad to hear.\"\n\nThe sound of the storm faded into the background as she rode me, slowly and sweetly, sometimes leaning in so we could kiss, sometimes leaning back, her hands on my legs holding herself up. The lightning would flash, giving me glimpses of my sister's perfect body, a thin sheen of sweat forming as we consummated our forbidden love.\n\nWe made love the entire night. The rain masking the sounds of our passion, each of us moaning quietly. My sister was riding me, then she was lying flat on her stomach as I thrust into her, then we were on our sides, my cock working into her sopping wet pussy from behind, then I was on top of her, the two of us getting lost in each other's eyes as we made love. We kept at it for hours and hours, seeming to never take a break. At some point the storm, forgotten by us as we made love, ended. We were both sitting up, Lilia moving up and down as she gripped my neck, staring into my eyes when she wasn't kissing me. Our breath coming out in ragged pants as we fucked.\n\n\"I need a rest. Get on top of me.\" She said, leaning back.\n\nI slowly leaned her back and struggled to get my legs out from under her without pulling my cock out, getting twisted up and tangled in the process.\n\n\"Lil...I think I'm stuck.\" I said.\n\nShe laughed, her laughter the sound of twinkling bells on angel's wings, then leaned up and kissed me. She slowly pulled herself off of my cock while we kissed, moaning with disappointment when the tip finally popped out, springing back against my stomach with a wet slap.\n\nI got on top, our lovemaking transforming reality until we were floating through warm mists in a shapeless void. Counting how many orgasms we had was impossible. We had none and infinity. Eventually, we slept, our waking and dreaming worlds blending seamlessly before fading to the darkness of satisfied slumber.\n\nI woke to the morning light streaming through the window, Lilia standing by my mirror, dressed once again in her nightgown and brushing her long blonde hair with my hairbrush.\n\n\"Jimmy\" I heard my Dad yell. \"Do you know where your sister is?\"\n\n\"I'm in here Dad!\" Lilia yelled back. \"I slept in Jimmy's bed because of the storm.\"\n\nMy door opened and my Dad popped his head in. Luckily, I was mostly under the covers.\n\n\"What a great brother. You guys are so awesome. Breakfast in ten minutes guys.\"\n\nMy dad closed the door. My sister climbed into my bed and pulled the covers off of me, revealing my morning wood. She hiked up her nightgown, her pussy bare underneath.\n\n\"You are a great brother, and an even better lover.\" She kissed me again as she lowered herself onto me. \"We gotta be quick this time so Mom and Dad don't get suspicious.\"\n\n-----------------------------------------------------------------\n\n\"Seriously?!?!?\"\n\nLilia and I rolled our eyes at each other.\n\n\"Yes Lissy.\" My sister said.\n\n\"OH MY GOD THIS IS SO GREAT!!!\" Melissa screamed, drawing stares from the other IHOP diners.\n\n\"Shhhhhh,\" Lilia said laughing. \"You don't need to tell the world.\"\n\n\"I THINK I DO!!\" Melissa squealed, then got quieter. \"This is the best thing ever!! I can't believe you guys are back together!! Oh, my God, are you guys back together with me too?!?\"\n\n\"Yes, of course.\"\n\n\"AIEEEEEE!!!!\" Lissy screamed again.\n\n\"Shhhhhhhhh!!!!\" Lilia said as we all laughed. \"Come on Lissy!! A little quieter!\"\n\nOur waitress came over, \"Everything OK over here?\"\n\n\"Yes, our friend is just a little excited.\" I said\n\n\"Best pancakes ever. I can't control myself.\" Melissa replied.\n\nThe waitress laughed. \"Try to keep it down guys. My manager's here.\"\n\n\"Sorry!\" We all called as she left.\n\n\"Oh my God!! How did it happen?!?! Give me all the details!!\" Lissy whispered.\n\nIn hushed tones we recounted our efforts to stay away from each other, along with our failure. Melissa gasped when she heard about what we did in the kitchen.\n\n\"You bitches were cheating on me!!\" She said with mock indignation.\n\n\"We would have told you yesterday, but we slept most of the day.\" Lilia said as she finished telling her about the storm two nights ago.\n\n\"Mmmmmmhmmmm, SLEPT huh?\" Melissa said\n\n\"Well... slept MOST of the day.\" I said.\n\n\"Oh my God. This is so great. We need to get out of here! Where can we go? My dad's at work but my mom is home. Maybe I could get her to go to the store? I dunno if we'd have enough time though...\"\n\nLilia and I laughed.\n\n\"At least let us finish our breakfast Lissy!\" I said.\n\n\"I'm serious you guys! Here, see.\" She grabbed Lilia's hand and discretely (which was surprising for Melissa) guided it under the table to between her legs.\n\nIt was Lilia's turn to gasp.\n\n\"How are you so wet?\" She whispered.\n\n\"That's what you sexy bitches do to me!!\" Lissy whispered back. \"Fuck breakfast, we can take this shit to go! I need you guys now!\"\n\nLilia looked at me and raised an eyebrow. \"No one's home at our house...\"\n\nI shrugged and held my hand up to get our waitresses attention.\n\n\"Can we have our check and a couple of to-go boxes?\"\n\nMelissa squealed again.\n\n----------------------------------------------------------------\n\n\"OH FUCK JIMMY!!! HARDER!! FUCK ME HARDER!!!\" Melissa screamed\n\nImpossibly, I somehow fucked her harder. I was breathing hard and dripping with sweat as I slammed into Melissa from behind. She was on all fours on my bed, her fingers a blur as they plunged in and out of my sister.\n\nI pulled Lissy's hair, hard, then slapped her ass, leaving a red mark.\n\n\"OH FUCK!!! JUST LIKE THAT!!\" She screamed.\n\nMy sister sprung up, her face inches from Melissa's, and grabbed her friend's throat.\n\n\"Cum on my brother's cock you slut!! Take his cock like the slut you are!!\"\n\n\"UHHNHNH FUCK!!! HUGGGNHNH!!! FUCK!! FUUUUUUCK!!!\" Melissa screamed as she orgasmed.\n\nWe collapsed into a sweaty heap on the bed.\n\n\"Oh my God, my life is perfect now!!\" Melissa said in between labored breaths.\n\nShe had practically attacked us when we got back to the house, desperately pulling off our clothes and making love to us with an urgency I'd never seen before. She seemed to not be able to decide who she wanted more, me or Lilia, moving from one to the other of us, kissing us like it was the last kiss she'd ever give but never letting go of the other one with her other hand. Eventually she got on all fours to eat out Lilia and pulled me by my cock behind her, guiding me to her cunt and slamming herself back right away. This was her third orgasm, each one more intense. I was so drained I hadn't been able to come once.\n\n\"Holy shit.\" Lilia said, breathing heavy as well. \"I guess we can cancel our gym memberships.\"\n\n\"Hell yeah.\" Melissa said. \"All our energy now needs to go towards having amazing sex.\"\n\n\"Sex with you is always amazing!\" Lilia said to her.\n\n\"Awwwww, thanks hon, you're making me blush!\"\n\n\"Oh my God, is it possible? Can Melissa be embarrassed?!?\" I said\n\n\"OH MY GOD!!!\" Melissa screamed again \"I'M IN A THROUPLE WITH MY TWO BEST FRIENDS!!! THIS IS THE GREATEST!!!\"\n\nAnd we were.\n\n--------------------------------\n\nThe next few months were indescribably amazing. We spent as much time as possible together, most of the time all three of us together, but occasionally splitting off into twos. Our parents were seemingly oblivious to our new \"throuple\" though my Dad did comment on how often Melissa was sleeping over at our house. I was able to deflect his concerns away with a comment about how tough it must have been on Melissa's mom raising her by herself.\n\nLife went on. We studied, we worked. Lilia and I had a ton of schoolwork since this was Lilia's first year in college and my last year. Lilia was busy a lot with soccer practice and I had swim team. Melissa split her time between her bartending job and small parts in a local theater company. Oh, yeah, we also fucked like rabbits. We fucked at our house when Lissy slept over (she had somehow learned to be quiet during sex), we fucked at Melissa's house when her mom was working, we fucked in the car, we fucked while hiking in the park, basically we fucked anywhere and everywhere we could. At some point I got the brilliant idea that we should get into camping, so we spent as many weekends as possible in the woods, Melissa's screams scaring away the wildlife.\n\nLife was great. It was so great that my heart sank when I got the news.\n\nWe were eating lunch at a nearby diner, talking, laughing, joking and just generally enjoying each other's company, when the call came in.\n\n\"Hold on a sec guys, it's them.\" I said\n\nLilia and Melissa both gasped, their eyes getting as wide as they hugged each other.\n\n\"Hello. Yes, this is James. Yes. Ok. Uh-huh. And the other position? I see. Yes, I understand. No, none at this time. Thank you so much for reaching out.\" I hung up the phone.\n\n\"WELL?!?\" Lissy practically screamed after a couple of seconds of silence. \"The suspense is killing us!! Did you get the job?\"\n\n\"Yeah I got it.\" I said.\n\nThe girl's screams were ear splitting.\n\n\"OK guys, calm down!!\" I said laughing. \"They might make us pay if you break all the glass in the place.\"\n\n\"This is so amazing!! Jimmy this is your perfect job!! I'm so proud of you!!\" Lissy jumped over, giving me a big hug and kiss.\n\n\"Yeah....\"\n\n\"Jimmy, what's wrong?\" Lilia asked. \"You said being an analyst for this company was the dream. Perfect salary, perfect benefits, tons of career potential. Why do you look so bummed?\"\n\n\"Well....\" I said, not looking the girls in the eye \"Remember how I said that there were two positions open when I interviewed? One was nearby but the other one was three hours away. Well, they offered me the far one. The nearby one was filled by someone else. I'll have to move.\"\n\n\"Oh.\" Lilia said, her face drooping.\n\n\"When do you start?\" Lissy asked\n\n\"In two weeks.\"\n\n\"Pssshaw. Get rid of those sad faces you two! This is great news!!\" Melissa said, giving us both light punches on the arms. \"Jimmy just landed his dream job, and in two weeks we're going to be having the sexiest Zoom sex that ever happened!! Then once Lil graduates we're going to come move in with you and live happily ever after!\"\n\n\"You're right.\" Lilia said, forcing a smile. \"Besides, we have two weeks together, let's make the most of it.\"\n\n-------------------------------------------------------------------------\n\nLilia was on top of me on the couch, laying back on my chest, her head turned to kiss me. Lissy was eating her out as I thrust into her. Thank God our parents weren't home, because Lilia started ripping our clothes off as soon as we got in the door. She made love to us with a desperation I hadn't seen in months.\n\n\"I think I'm ready.\" She said.\n\n\"What?\" I asked.\n\n\"I want you in my ass.\" My sister responded.\n\n\"Really?\" Lissy and I asked in unison.\n\n\"Yeah. I've put it off because I was a little scared, but I'm ready.\" She said. \"Fuck my ass.\"\n\n\"Do you have any lube?\" Lissy asked.\n\n\"Yeah, it's in the drawer next to my bed.\"\n\n\"Be right back. You two don't have to pause, I'll catch up when I get back.\" Lissy said.\n\nMy sister spun around on my cock, turning to face me. She took my face in her hands and kissed me, pressing her lips to mine as if she was trying to force her way inside of me.\n\n\"Lil, you OK?\" I asked.\n\n\"Yeah. I just don't know what I'm going to do without you.\" She said. \"I'm trying to make the most of the time we have.\"\n\n\"You don't have to rush this, I'm...\"\n\n\"Shhhhhh....\" She said. \"I want this. I really want this. I've been thinking about it for a while anyway, so now seems like the perfect time.\"\n\n\"OK. As long as you're sure. I just wanted to check because you know Lissy's going to be all gung-ho for it.\"\n\nMelissa came back in with the lube.\n\n\"Listen Lil, you know I'm usually the devil on the shoulder trying to talk you guys into more stuff, but are you sure about this?\" Melissa asked.\n\nLilia and I laughed.\n\n\"Yes I'm sure!!\" She yelled playfully \"Now get over here and lube up my ass!!\"\n\nMelissa took Lilia's hand and guided her off of my cock.\n\n\"I'm going to borrow your sister for a minute Jimmy, if you don't mind.\"\n\n\"Be my guest..\" I said.\n\nMelissa laid Lilia down on the couch. She took her time kissing her, starting at my sister's mouth, then working her way down her neck, chest, breasts and stomach, until finally reaching her pussy. She licked her way from the entrance up Lilia's pussy lips until she was at her clit again. Lissy licked my sister's clit, making her moan. She brought two fingers to Lilia's pussy, sliding them in easily and working them in and out as she licked her. At the same time, she reached back and grabbed my cock, pulling me over until my dick was pointing at my sister's face. Lilia turned her head and took my cock into her mouth, grabbing the base and stroking as she bobbed her lips up and down over the head.\n\nMelissa had pulled her fingers out of my sister and had started squeezing lube onto them. She kept licking her girlfriend's clit as she started rubbing the lube on her asshole.\n\n\"OH.\" Lilia cried, pulling my cock from her mouth.\n\nMelissa lifted her head. \"Shhhhhhh. Just relax.\"\n\nShe went back to licking Lilia's clit as she slowly pushed a finger into my sister's asshole. Lilia rolled her head and moaned.\n\n\"Oh fuck.\" Lilia said. \"Fuck that's good.\"\n\nLissy worked her finger in and out of Lilia's ass while she ate her out. Lilia's breath sped up and she worked my cock faster, then turned her head and took me in her mouth again. My sister moaned around my cock as her girlfriend fingered her asshole and licked her clit. She suddenly pulled my cock out of her mouth with a pop.\n\n\"FUCK.\" She cried, as Melissa stuck another finger in. Melissa slowly worked the second finger in occasionally lifting her head to whisper encouragement to Lilia as she worked her ass.\n\n\"Lasssst one.\" Melissa hissed as she pushed a third finger in.\n\nLilia bit her lower lip and grabbed onto the couch cushion, breathing quickly through her nose. \n\n\"Mmmmmmm, mmmmmmmm, mmmmmmmm.\" She moaned.\n\n\"That's it. That's a good girl.\" Lissy whispered.\n\n\"Mmmmmmh, right there. Ohhhhhhhh.\" Lilia breathed as she arched her back.\n\n\"Mmmmmmm yeah. I think you're ready.\" Melissa said in a low voice. \"You ready for your brother's cock in your ass?\"\n\n\"Yes.\"\n\n\"Mmmmmmm, yeah. How much do you want your brother's cock in your ass?\"\n\n\"So much. So much. OH!\"\n\n\"Beg him for it. Beg for his cock in your ass.\"\n\n\"Please Jimmy, put your cock in my ass. Please. I want you to fuck my ass. Oh GOD, please FUCK MY ASS. OHHHHHHHHHHmmmphm\" My sister moaned and whimpered as Lissy slowly pulled her fingers out of her ass.\n\n\"Sit down Jimmy.\" Melissa told me.\n\nAs I sat down, Melissa poured a line of cold lube on my cock, then rubbed it all over. She put another generous dollop on the head before guiding my sister over top of me. Lilia reached behind her and grabbed my cock, lining it up with her asshole.\n\n\"Go slow and relax Lil. I'm right here.\" Lissy whispered and held her other hand.\n\nMy sister lowered herself, her asshole pushing against the tip of my dick, resisting briefly before finally opening up allowing my cock to slide into my sister's ass.\n\n\"Ooooooooooooooooo fuck.\" Lilia moaned. She stayed still, only the head of my cock in her ass, as her body trembled and adjusted. \"FUUUUUUUCK Jimmy you're so big. Fuck that's tight.\"\n\nMelissa resumed licking my sister's clit.\n\n\"Oh yeah, Lissy that's good.\" Lilia slowly lowered herself more and more. \"FUUUUUUUUUCK. OH FUCK!\"\n\nInch by inch, my sister worked my cock into her ass until finally, she was pressed tight against my pelvis.\n\n\"That's it sis, your brother's cock is all the way in your ass.\" I whispered into her ear, triggering a small whimper from her.\n\n\"That's the hottest fucking thing I've ever seen.\" Lissy said, before putting her mouth back on my sister's clit.\n\nLilia slowly worked her ass back up my cock an inch or two before lowering herself down again, then back up, a little more this time, then back down. She slowly increased her pace, sliding her asshole up and down my throbbing cock faster and faster.\n\n\"You can push a little too.\" She whispered to me, her breath coming in ragged pants. \"I wanna feel you fuck my ass.\"\n\nI thrust up into her ass as she worked herself up and down. With each stroke we went faster and harder until I was pounding into my sister's ass and she was slamming down on top of me.\n\n\"YES! YES! FUCK ME!! FUCK MY ASS!! YESSSSSSS!!!\" My sister screamed. \"FUCK MY ASS!! FUCK ME!! OH FUCK!! I'M CUMMING!!\"\n\nLilia's asshole squeezed onto my cock as she fell back on top of me. She twitched and squirmed as her orgasm took away control of her body. I kept pumping into her ass, my own climax approaching rapidly.\n\n\"OH FUCK, Lilia I'm gonna cum. Oh fuck, I'm gonna cum in your ass, OH FUCK!!\" I screamed before painting my sister's bowels with my seed.\n\nLissy climbed up next to us as we leaned back, panting, my slowly softening cock still inside my sister's ass.\n\n\"You two are the sexiest people on Earth.\" Lissy said before kissing each of us.\n\n\"Psssh.\" Lilia said, \"We THREE are the sexiest people on Earth. Now I need a shower and a nap.\"\n\n\"A shower and a nap it is.\" Lissy replied.\n\nMelissa took our hands and led the way.\n\n----------------------------------------------------------\n\nAfter our session in the shower, Melissa fell asleep almost instantly, as if a switch changed her breathing from slow deep breaths to gentle snores against my chest. Lilia, snuggled against my other side, seemed as if she fell asleep too, until I felt and heard her softly crying.\n\n\"Lil, what's up?\" I asked\n\n\"I just can't stand to lose you!!!\" She whimpered. \"I know I should be happy you got this great job but I don't know what I'm going to do without you!!\"\n\n\"Shhhhh...shhhhhh....\" I said. \"You'll never be without me. I promise.\"\n\nI pulled her lips up to mine and kissed her. She laid her head on my chest and I started stroking her hair. I stroked her hair until her sobs faded into deep breaths as she fell asleep.\n\n-----------------------------------------------------------\n\nLilia and I were snuggled up on the couch watching Avengers: Endgame for the thousandth time. It had been two days since I got my job offer and my sister had been clinging to me as if she was lost at sea and I was a lifesaver. Since we were both done with school, Lilia for the year and me forever, we had a ton of free time. My parents were home for a couple of days so we didn't really have any chances to have sex, but I don't know if either of us was in the mood for it anyway. We were content to just be near each other for time being.",
        "Lilia's phone chimed with her text message sound, then mine did a second later.\n\n\"It's Lissy.\" She said. \"Here read it.\"\n\nShe showed me her phone.\n\n\"Meet me at IHOP ASAP. INSANELY URGENT!!!\" The message read.\n\nMy brow furrowed. What could be so urgent? And if it was so urgent, why did she need us to meet her IHOP? Lilia's phone chimed again.\n\n\"Why aren't you guys here yet?!?! This is a DEFCON 5 emergency!!!\" the newest one said, then another came in a second later. \"Just kidding, I won't be ready to go for five or ten minutes but seriously, HURRY. I have something important to discuss with you.\"\n\n\"What's got her so worked up?\" Lilia asked.\n\n\"Probably just had a sex dream and booty calling us.\" I answered.\n\n\"At the IHOP? She'd be telling us to come to her house if she was horny. Or coming over here.\"\n\n\"I guess we'll find out soon. Tell her we'll be there in twenty minutes.\"\n\nLilia texted our reply and got up to get ready. Our phones chimed again. \"Awesome, but try to make it fifteen. This is really important.\" She added a kissy face emoji to that last one.\n\n-----------------------------------------------------------\n\nA little over fifteen minutes later, we were walking into the IHOP. Lissy was seated at a table to the left and started waving to us as soon as we got in. As we made our way to the table I noticed that she had papers spread out all over it, along with her laptop which was open. Lilia and I shared a quizzical look.\n\n\"Hey guys!! Thanks for getting over here so quick. I ordered you coffee already.\" Melissa shot out, rapid fire.\n\n\"No problem. Is this a map?\" I asked.\n\n\"Yes! I figured it out! It's PERFECT!\" Lissy replied.\n\n\"Figured what out Lissy? What's going on?\" Lilia asked. She sat down so that the three of us were sharing the booth, me in the middle.\n\n\"This is my brilliant plan to keep us all together when Jimmy starts his new job.\"\n\nI sighed. \"Lissy, I can't commute three hours. I have to sleep sometime.\"\n\n\"I know. That's why we're all going to move in together.\"\n\nLilia and I sat in stunned silence. Lilia broke the ice first.\n\n\"I guess that would work for the summer, but come fall I have to start school again.\" She said.\n\n\"I know. But you don't have to start school at the same campus!\" Melissa said.\n\nShe pointed to the map. \"This is a map of our state.\" She took a red marker and circled the area of our town. \"This is where we live.\" She circled a different area, further away. \"This is where Jimmy's new job is.\" She circled a third area. \"This is the Lincoln Campus of your school.\" Finally, she drew an X over an area near the coast. \"This is the town we're going to move to.\"\n\n\"Uhhhh.....\" I opened my mouth to say something but Lissy cut me off.\n\n\"It's perfect, it's about a 45-minute drive from Jimmy's new work. It's also about a 40-minute drive the OTHER way to the Lincoln Campus. It's ALSO about a two-hour drive to here, so we could visit our parents whenever we wanted and vice versa. ANNNNND it's a beach town. ANNNNNNNNND\" she turned her laptop screen so we could see a list of apartments and condos pulled up. \"I've already done a search and there are plenty of places available for rent year round that we should be able to afford with Jimmy's new salary and Lil and I chipping in. IT'S PERFECT!!\"\n\nLilia and I looked at each other, then Lissy, then back. We were dumbfounded.\n\n\"Come on guys, say something.\" Lissy said, starting to squirm in her seat.\n\n\"Lissy...\" Lilia said quietly \"You're crazy.\" Lissy's face started to droop. \"And brilliant. And you're right! It's perfect!!\" Lilia grabbed Lissy in a giant hug. The girls looked at me expectantly.\n\n\"There's a lot of details to be worked out but, yeah...it's perfect.\" I said. \"Let's move in!\"\n\nOur poor waitress chose that moment to bring our coffees, having no idea of just how high pitched and loud the girls could scream. It was certainly loud enough to make her jump, spilling our coffees all over her hands and the floor.\n\n\"Come on guys!!!\" She yelled at us.\n\n---------------------------------------------------------------------\n\nWe hurriedly made arrangements to move in together. We pitched it to our parents as a way for the girls to get some independence and for me to save some money. Our parents loved the idea, though they were understandably a little sad at suddenly becoming empty nesters. We packed our things. My mom took us furniture shopping. We picked out a condo, just at the top end of our budget, but it was only a ten-minute walk from the beach. The three of us drove there to sign the lease and collect our keys. After giving them a check and signing the lease documents, we took the keys to our new home.\n\nWe paused just outside the door.\n\n\"Guys....\" Melissa said \"This is our house. OURS. No one else's.\"\n\n\"Yeah.\" I said. We took a second to let the enormity of the moment wash over us before I stepped forward and unlocked the door, opening it slightly. Before the girls could react, I grabbed them both around the waist and lifted them over my shoulders.\n\n\"JIMMY!!!\" Lilia screamed. \"What are you doing?!?!?\"\n\n\"Well the man of the house has to carry his brides over the threshold doesn't he?\"\n\nThe girls kicked and screamed and laughed as I carried them through the door, then plopped them down on the carpet of the living room. They each grabbed one of my arms and pulled me down, laughing and screaming as we fell into a heap. Still giggling as we started to kiss, our hands wandering and clothes coming off. Completely nude, things starting to escalate, none of us realized that we forgot to close the door until the mailman knocked on the door jamb and cleared his throat.\n\n\"Um, 'scuse me...\" He said, waving a handful of mail. \"Your door is wide open folks.\"\n\n\"OH!!\" Lissy exclaimed, jumping up. Lilia and I tried vainly to cover up.\n\nMelissa, still buck ass naked, jogged the few feet over to the mailman, adding some extra bounce in her step. The mailman stood there staring, his mouth hanging slack.\n\n\"Thank you.\" She said, leaning up against the door jamb \"We just moved in and we're very excited. See you soon!!\" Lissy pushed the door closed behind her and bounced back to us, Lilia screaming in laughter.\n\nWe spent the next few hours testing out every spot in that condo.\n\n--------------------------------------------------------\n\nWe moved in. It was wild and chaotic and lots of fun. Most of our furniture was delivered but there was still enough stuff between the three of us that we rented a moving van. The three of us, our parents and my cousin Liam helped us move in. After the mandatory pizza and beer, my dad pulled me aside.\n\n\"Here, take this.\" He said, handing me a credit card.\n\n\"Dad, I'm making good money, I won't need it.\"\n\n\"I know, I know, you have a fancy new job. Take this in case of emergency. I want you to be saving money and I want your sister to focus on her studies. I don't want you guys worrying about what to do if your refrigerator breaks or your car won't start. Use it if you need it and I'll cover the bill. Just let me know.\" I could see in his eyes that he wasn't taking 'no' for an answer.\n\n\"Thanks Dad.\" I said hugging him. He patted me on the back.\n\n\"Anytime, son. You're the man of this house. I know it's just your sister and her friend, but you take care of those girls.\" He said.\n\nI looked over at the two girls I loved. They smiled back at me.\n\n\"Oh I will.\"\n\n---------------------------------------------------\n\nI thought my life was perfect during those spring months when I first got together with Melissa and Lilia. I was wrong. Our time during that first year in the condo was perfect. We had two bedrooms, and even had three beds but mostly we only used one. When we bought our furniture, I made sure to buy a king sized bed, knowing that we would need it to fit the three of us. We had a great life. Most nights we had dinner together after I got home from work, then took a walk on the beach or sat together on the couch and watched a movie. The girls both got jobs, Lilia working in a breakfast diner, Melissa working in a gym. Almost every weekend we spent our days at the beach and our nights at a local bar, \"The Naughty Parrot\", that overlooked the ocean; they always had great live music.\n\nWe had amazing sex all the time, our libidos seemingly inexhaustible. The combination of living with us and the sight of so many beautiful people walking around in swimwear seemed to turn Melissa's sex drive up to 11. She was constantly admiring the tourists, pointing out the best specimens to Lilia and me, doing her best to keep us horny as much as possible. We certainly appreciated her efforts.\n\nSummer turned to fall and our routine barely changed. I worked at my office job, Melissa worked at the gym, Lilia kept up her studies in her second year of college. Melissa landed a couple of decent acting gigs, and we drove up to New York to watch her. I was amazed at how much pride I felt seeing her perform. We comforted Lilia when her soccer team made it to the regional championships, but lost by one goal in overtime. Lissy got the flu just after Valentine's day and cried after my sister and I spent the week nursing her back to health. She said that no one had taken such good care of her since she was a little girl. Besides the fact that there were three of us, we had a perfectly normal relationship.\n\nThen my Uncle Kevin died. Though Lilia and I weren't super close to him, it still hurt the way unexpected losses always do. My Aunt Moira and my cousins Liam and Maggie were obviously devastated. We offered our condolences after the funeral and went back to our lives, thankful that we had each other.\n\nIt was a couple of weeks later, right around the start of summer, when my mom called.\n\n\"Hey Mom, what's up?\" I asked.\n\n\"Hi Jimmy. I'm calling because I have a huge favor to ask of you.\" She replied.\n\n\"Anything. What do you need?\"\n\n\"Can the twins stay with you for the summer? They're all going through a really tough time over there and Aunt Moira is barely keeping it together. I thought that spending the summer at the beach with you guys would be great for Liam and Maggie.\"\n\n\"Oh. Wow. Um....are you sure Aunt Mo should be alone right now?\"\n\n\"Aunt Mo would be staying with your father and I. We definitely don't think she should be alone either.\"\n\nI rubbed my forehead. I really wanted to help out my cousins but I was also really worried about them finding out about our living situation and causing problems for us.\n\n\"I dunno Ma....we might not have the space for two more people here...\"\n\n\"Oh nonsense. You have more than enough space. You and Liam can sleep in one room and the girls can sleep in the other. They spent enough time sleeping in the same room when you lived here, they should be fine to sleep together for a couple of months.\"\n\nI looked into Lilia's bedroom where she and Lissy were in the midst of a 69. 'Mom you have no idea...' I thought.\n\n\"Are you sure the twins would be OK with this? We're mostly working and studying so they would be on their own most of the time. It might do more harm than good.\"\n\n\"James Nicholas,\" my mom said in her sternest voice \"I'm asking you to do something kind for your cousins during the most difficult time of their lives and you're trying to weasel your way out of it?!? I thought I raised you better than that.\"\n\nDamn. No one knows how to manipulate better than a mother.\n\n\"Aw Ma, it's not that. I'd be fine with it, I just wanted to make sure you thought it through.\"\n\n\"I did and this is the best thing.\"\n\n\"OK, OK. But I gotta talk it over with the girls. Make sure they're OK with it.\"\n\n\"That's a good boy. I'm sure the girls will be fine with it. Just let me know if they have any issues and I'll talk to them.\" It was clear that my mom wasn't going to take no for an answer. \"I'll arrange everything with Aunt Mo and the twins.\"\n\n----------------------------------------------------------------\n\n\"Ummmmm.....no, no and FUCK NO.\" Lilia said. She was as mad as I've ever seen her.\n\n\"Come on Lil, it's family and they really could use this.\" I said.\n\n\"Family? What about our family? The three of us! What are we supposed to do, just act like we're not in a relationship? This isn't a fucking sitcom!!\" She said, her voice rising.\n\n\"Look, we already keep it hidden when Mom and Dad visit, this is the same thing.\" I said.\n\n\"Are you NUTS?!?\" Lilia yelled. \"Hiding the fact that we're a throuple for a weekend is one thing. Hiding it for THREE MONTHS is something else entirely!!\"\n\n\"OK fine.\" I huffed. I was getting frustrated. \"You explain it mom. You tell her exactly why we won't help out our grief stricken cousins.\"\n\n\"Do you hear yourself?\" Lilia exclaimed, incredulous. \"For three months you want us to be, what? ROOMMATES?!? Like the last year never happened?!?\"\n\n\"Lilia it's not like that...\" I sighed\n\n\"Oh no!?! What is it like?\" Lilia yelled. She turned to Melissa. \"Will you tell him?!?\"\n\nMelissa took my sister's hand. \"I think we should do it.\"\n\n\"What?\" Lilia's jaw dropped.\n\n\"Jimmy's right. They're your family. They're hurting and they need help. We should help them.\"\n\nLilia put her hand on Melissa's cheek.\n\n\"What about us?!? What about you?!? It's not fair to do that to you for three months!! It's not fair!!\" She cried.\n\nLissy kissed my sister gently on her lips.\n\n\"I love you. As far as I'm concerned, your family is my family. If they need help, I'll help them. We have our whole lives together. I can deal with a couple of months.\"\n\n\"But...but...\" Lilia's eyes started to tear up before she fell into Melissa's chest sobbing. Our girlfriend held her, stroking her hair. I sat down on the couch next to them and wrapped them in my arms. We sat there, cuddled close until Lilia's sobs had passed.\n\n---------------------------------------------------------\n\nI sighed as I closed the door to my car. My brutal workday had been capped off by an absolutely awful commute and I couldn't even look forward to relaxing on the couch with a beer because I had to prep the house for the arrival of our cousins the next day. When it rained it poured. I trudged to the front door and opened it.\n\nBefore I was all the way in the door, Melissa grabbed me and slammed me back against the wall, pressing her naked body against me and kissing me deeply, her hand groping desperately at my groin. She dropped to her knees and started undoing my belt and zipper. She pulled down my pants and boxers, freeing my now hard cock and immediately wrapped her lips around it, taking my full length down her throat.\n\n\"Oh fuck, Lissy.\" I groaned, resting my hand on the back of her head.\n\nShe alternated bobbing her head up and down along my shaft and holding my cock all the way down her throat. Even after a year, I was still overwhelmed by how good Lissy was at giving a blowjob. Lissy pulled her head off of my dick and gasped for breath, her face a mess of spit and tears from gagging on my cock. \n\n\"Tonight's the last night we're gonna have alone for a while. We're gonna make the most of it.\"\n\n\"Mmmmmmmm\" I groaned as she plunged her mouth back down onto my cock, taking me into her throat again with a choked gurgle.\n\n\"Lissy, oh fuck, I'm gonna cum....\" I said as she slid her mouth up and worked the head of my dick with her tongue.\n\nShe immediately pushed her face down against my body, holding me as deep as possible while I shot my seed directly into her throat. My dick pulsed and twitched in her throat as I filled her mouth and throat with my cum. She finally pulled herself off of me, gagging and coughing out my cum as she gasped for breath. Breathing again, she licked my cock from base to tip, accumulating a wad of cum and spit and swallowing purposefully. She stood up.\n\n\"There's a cold beer waiting for you in the living room. Lil will be home in a couple of minutes and I gotta clean up my face so I can surprise her.\"\n\n\"Yes ma'am,\" I said\n\nI put my pants back on and made my way to the living room, completely shocked. The house was absolutely spotless, scented candles spread around giving the place a barely detectable scent of vanilla. On the coffee table, a full ice bucket sat chilling a six pack of Sam Adams and a bottle of Lilia's favorite wine.\n\n\"Lissy, did you do all this by yourself?\" I called out to her.\n\n\"Hell no. I knew we were going to have a long night ahead of us, so I hired a cleaner and a handyman to come in and clean the place and move the furniture to prep for your cousins.\" Melissa yelled back from the bathroom. She leaned her head out, her face freshly cleaned, as she re-applied her lipstick. \"We're all going to need as much energy as possible; we can't be wasting any on cleaning and moving furniture.\n\nI plopped down on the couch and grabbed a beer, relishing the ice cold tingle as it passed my lips. I felt the stress and worry of my day fade away as I drank my beer, marveling at how nice our house looked. I was also struck at Lissy's thoughtfulness; arranging this was insanely sweet.\n\nLissy strutted out of the bathroom, her hips swaying. \"How do I look?\"\n\nI took in her nude body, awestruck by how gorgeous, how sensual she looked. Melissa's curves exuded soft femininity and raw sexuality in a way that I'd never seen before in a woman. I don't think anyone on earth would be able to resist her.\n\n\"You look so good I think I'm ready for round two.\"\n\nShe laughed and gave my crotch a gentle squeeze. \"Easy there, big boy. Lil will be home in a minute or two. You just sit back and enjoy the show. Besides, your sister and I are going to need you refreshed and ready for us when I'm done with her.\"\n\nI heard the thump of a car door in our driveway.\n\n\"Wow! Perfect timing!\" I said.\n\nI watched from the couch as Melissa positioned herself near the front door, then waited until Lilia had taken one step through before attacking her in the same fashion that she had with me. My cock, half hard until now, started to stiffen as I watched my girlfriend and my sister kiss. Lissy tore my sister's skirt and panties down her legs, then started eating Lilia's pussy like it was her last meal.\n\n\"Oh fuck, Lissy\" My sister moaned.\n\n\"Heh.\" I chuckled, amused through my arousal that my sister had the same reaction as I did.\n\n\"OhhhhHHHHHHH!\" Lilia screamed as her girlfriend started working her fingers in and out of her cunt while licking her clit. My sister was so wet, I could see her juices shining on her legs.\n\n\"OH! OH! OH! LISSY! FUCK FUCK FUCKFUCKFUCK UHHHHHNH\"\n\nWatching my sister orgasm was like a spiritual experience. I watched as her body tensed, then shook and spasmed, Lissy continuing to lick and finger her while she feebly tried to push the curvy girl's head and hand away. Barely able to catch her breath, she was finally able to pull herself off of Lissy's fingers, though Lissy still slowly licked her as Lilia slid down the wall, unable to hold herself up. Lissy finally lifted her head from between my sister's legs and looked up at her.\n\n\"Don't wear yourself out in the first round lover. You've got a whole night of that coming up.\" Melissa said, then turned to me. \"Hey big boy, come over here and help me get your sister to the bedroom.\"\n\nI was up in a flash, seeming to teleport down the hallway to where my sister was sitting in a heap, panting as she came down from her orgasm. I squatted down and took Lilia in my arms, lifting her as she squealed and giggled.\n\n\"Ok you two, get to the bedroom and get those clothes off. We're wasting daylight!\"\n\nThat night seemed to last forever, images burning out to imprint themselves in my memory. My cock plunging into my sister from behind as she knelt on all fours and ate out our girlfriend. Melissa stroking my sister's hair as she fingered her to another orgasm. Lissy slamming herself up and down on my cock while I pulled her head back by her hair, my sister's hand around her neck and finger working her clit, hissing at her \"Cum, you slut, cum on my brother's cock you fucking whore\". The look in Melissa's eyes as she snuggled against Lilia, Lissy's face tilted up to my sisters as she whispered \"I love you.\" Watching Lissy's ass, red from being smacked so hard as she laid on her stomach on the bed, drinking wine and idly working her feet back and forth, her eyes burning with lust while she watched Lilia work her asshole up and down my cock. Finally, waking up in the dim twilight of morning, my arm numb from my two lovers sleeping soundly on it, the faint blue light turning their skin to marble, frozen in time as the pinnacle of beauty.",
        "---------------------------------------------------------------\n\nI woke to the sound of my alarm blaring and the girls moaning. I lifted my head to see them 69-ing next to me, both of them orgasming simultaneously a moment later.\n\n\"Hey sleepyhead...\" Melissa slurred when she saw me awake.\n\n\"Sorry bro, but we couldn't resist a quickie before the twins get here. Wanna join?\" My sister asked.\n\n\"I'd love to but I don't know if I'll be able to cum again for weeks.\" I said.\n\n\"Oooooooooh, I hear a challenge. Think you're up for it Lil?\"\n\n\"Don't worry....I know the combination to his lock,\" she said and climbed on top of me, lowering herself down and taking my whole cock as she leaned in and kissed me. She turned her head to Lissy. \"Get to work back there.\" She started sliding her pussy up and down my slick shaft while Lissy worked a finger into her ass, massaging the head of my cock. \"I want your cum Jimmy. Cum in me. Cum in your sister. Please, cum for me, cum for your sister. Cum in me.\"\n\nMy sister really did know the combination to my lock. I moaned as I filled my sister for what felt like the hundredth time since yesterday.\n\n\"I love feeling him cum in you.\" Melissa said, slowly sliding her finger out of my sister's ass.\n\nMy sister just moaned into my mouth as she kissed me, the two of us savoring the feeling of being joined.\n\n\"OH!\" Lilia cried as Melissa slapped her ass.\n\n\"Out of bed you two! We've got company today and I don't think you want your family to find you like this!\"\n\n-------------------------------------------------------------------------------------------\n\nWe were barely out of the shower and dressed before our family arrived, our parents' minivan packed with boxes and people. Everyone got out and stretched.\n\n\"Holy shit, your cousins are fucking hot!\" Melissa whispered to us.\n\n\"Shhhh,\" Lilia whispered back, gently elbowing our girlfriend in the ribs.\n\nI'd never realized it before but I guess Lissy was right. Liam was tall, about 6'3\" and very fit. His face seemed to radiate an easy, boyish charm. Maggie was shorter, with skin so pale it looked like milk and the type of fiery red hair that could draw looks from a mile away. She was thin, her waifish figure making her b-cup breasts seem larger than they were.\n\n\"Oh my God! Maggie! Liam! It's so great to see you guys!\" Lilia screamed as she ran over and hugged them.\n\n\"Hey Aunt Mo. You look great!\" I said as I gave her a hug.\n\n\"Hey Jimmy, hey Lil. You guys look great! The beach is treating you well. What are you guys doing to stay in such good shape?\" My Aunt asked.\n\n\"I make sure they stay active.\" Lissy said, drawing a sharp look from my sister.\n\nEveryone exchanged quick greetings before grabbing the twins' luggage and making their way inside. Aunt Mo commented on how nice our house looked.\n\n\"We spent HOURS working together this week to make sure we were ready for you guys.\" Lissy said, drawing another poke in the ribs from Lilia.\n\nWe took the stuff to the rooms and then gave everyone a tour.\n\n\"I really appreciate you guys letting us stay here.\" Liam said. \"I've never spent a whole summer down the shore.\"\n\n\"Don't give it a second thought.\" Lilia said. \"You guys are family.\"\n\n\"You're so sweet Lil.\" Maggie said.\n\nMy dad and I made sure to carry most of the boxes and suitcases into the house, letting Liam and Maggie start unpacking and arranging their stuff with the help of Lilia and Melissa. My mom and Aunt Mo chatted in the kitchen.\n\n\"OK guys, I think you worked enough for the day. Let's go get something to eat huh? Who's hungry?\" My dad said after a couple of hours.\n\n\"I'm starved.\" Liam said. \"I could eat an elephant.\"\n\n\"That's great! They just opened a great elephant place last week!\" I replied, getting a laugh from everyone.\n\n\"So guys, where's a good place to get dinner?\" My mom asked.\n\n\"And some wine!\" Aunt Mo chimed in, drawing another laugh.\n\n\"We know a place.\" Lilia said.\n\n---------------------------------------------------\n\nAfter dinner we said goodbye to our parents. Aunt Mo and Maggie both ended up crying, which made my mom and sister cry. Liam's eyes looked like they got a little watery but he held back any tears.\n\nFinally, back at our house, we all plopped down in the living room. I couldn't help but picture the lewd scene I witnessed the last time I plopped on this couch.\n\n\"So guys, welcome to your new home for the next couple of months. What do you feel like doing?\" Lissy asked.\n\n\"Honestly?\" Liam replied \"I'm bushed. I got up at 6am to pack and start leading the van. Do you guys mind if I turn in?\"\n\n\"I don't blame you, cuz. Get some rest.\" I told him as he headed towards my bedroom. He did look exhausted. \"You hitting the sack too Mags?\"\n\n\"Actually, I'd kind of like to take a walk on the beach. Anyone feel like showing me the way?\" Maggie answered.\n\n\"I don't mind.\" Lilia told her. She turned to Melissa. \"You coming Lissy?\"\n\n\"Sure. But not for too long. I didn't get much sleep last night.\" She said.\n\nLilia shot Melissa a glare, then turned to me. \"How bout you bro?\"\n\n\"I'll stay here. I'd kind of like to chill and have a beer. Plus, someone should stay here in case Liam needs help getting settled. You guys have fun.\"\n\n\"Yeah, some girl time will be nice.\" Melissa said, drawing another glare from Lilia.\n\nThe girls left for their walk and I went to the bedroom to check on Liam.\n\n\"Need anything Liam?\" I asked.\n\n\"Nah, I'm good.\" he said. \"I really appreciate you letting us stay here Jimmy.\"\n\n\"No worries cuz. You guys could really use a good break.\"\n\n\"Yeah. Especially Maggie. She's been having a rough go of it. I'm glad that she's going to get to hang out here with you guys. You and your sister are awesome. Lissy too. I'll never forget you guys doing this for us.\"\n\nAt that moment, I was really glad that my mom talked me into doing this.\n\n\"It's nothing cuz. Good night\"\n\n------------------------------------\n\nThe next few weeks were fun. Really fun. Except for family get togethers, I hadn't really hung out with Liam and Maggie since we were kids. They had both grown into really awesome people. Liam was very laid back, extremely chill, but had a laugh that was infectious and it was easy to get him to laugh. Maggie was quieter, but had a quick wit and an adventurous spirit. She found tons of great stuff for us to do. The twins were great roommates too, helping with the chores and chipping in more than their share for the food (Aunt Mo offered to pay us rent while they were staying and I firmly refused). The only problem was how horny Lilia, Melissa and I were getting. We went from having sex multiple times a day most days, to complete celibacy. It was torture.\n\nThe twins, oblivious to the fact that the three of us were in a relationship, didn't think twice about spending nearly all of their time with us. For the first week, I didn't really notice it. Quickly after that, however, I felt like an addict missing his fix. Naturally I was waking up every morning rock hard, but it seemed that anytime I touched either of the girls in the slightest way my cock turned into an iron bar. I even found myself ogling and fantasizing about Maggie. The girls were frustrated too.\n\n'This is fucking TORTURE. I NEED SEX!!!' Lissy wrote in our group text.\n\n'I KNOW!!' Lilia responded. 'I think if I get much hornier, I'm just going to fuck you right in bed next to Maggie.'\n\n'PLEASE DO! I'm even having a hard time masturbating! Someone is always knocking on the bathroom door while I'm in the shower. Can't these people put two and two together about why my showers are 40 min?!?'\n\n'Yeah. I'm hard so often I'm wondering if I should call my doctor about a persistent erection.'\n\n'We have to figure something out guys. There's only so long I can go without sex.' Melissa sent.\n\nWe figured out a solution the next day at the beach. It was just me and Lilia with the twins; Lissy was at work.\n\n\"What's everyone in the mood for dinner?\" I asked.\n\n\"I dunno, man.\" Liam said. \"I never thought I'd say this, but I think I'm getting tired of pizza and burgers.\"\n\n\"Have you guys ever tried Jimmy's famous pork chops?\" Lilia asked.\n\n\"No. I didn't know you were a good cook Jimmy.\" Maggie said.\n\n\"They're to die for.\" Lilia said. \"How bout Jimmy and I head back and cook up some pork chops and mashed potatoes and you guys hang here?\"\n\n\"Are you sure Lil?\" Maggie asked. \"That's a lot of work.\"\n\nLilia looked at me with a twinkle in her eyes. \"We'll be fine. You guys relax and enjoy yourselves.\"\n\n-----------------------------------------------\n\n\"Fuck. There's no way you can leave?\" Lilia asked.\n\n\"No. I'm the only one here, we'd have to shut down and then Doug would probably fire me.\" Melissa said sullenly. I could hear her disappointment through the speaker phone.\n\n\"Shit. There goes our plan.\" Lilia sighed.\n\n\"No. You guys go and have fun.\" Lissy said. \"This is actually kind of perfect. We'll just split off into twos until the summer's over. It will be easier for one of us to keep the twins occupied while the other two get some alone time.\"\n\n\"Are you sure?\" I said. \"We don't want you to feel left out.\"\n\n\"I'm sure. And don't worry, one of you sexy fuckers is going to be all over me tomorrow. I'll let you guys figure out who's going to bite the bullet and stay with the twins while the other gets an hour or two of ecstasy with this goddess.\" Lissy said.\n\n\"Oh my God Lissy, you're the best girlfriend ever!!\" Lilia screamed. She turned to me. \"I have dibs on her tomorrow!!\"\n\nMelissa laughed over the phone. \"Don't wear yourselves out! I gotta get back to work. Bye!\"\n\nLilia was on me before the phone was even hung up. We were barely able to pull our lips apart long enough to pull our clothes off. When Lilia lowered her hot, wet cunt onto me, I thought I was going to cum right away.\n\n\"OH GOD I MISSED YOUR COCK!\" Lilia yelled\n\n\"Oh fuck, Lilia, you feel so good.\" I leaned forward and sucked her nipple greedily as she bounced up and down on my cock.\n\n\"Oh Jimmy, yes! Fuck me! Oh fuck!\"\n\nShe threw her head back and slammed herself up and down on me. It didn't take long for her to orgasm.\n\n\"Oh Jimmy, oh fuck, oh fuck yeah, right there, oh fuck, right thereohfuckohfuckimcummingoh...UHNNNNNH\"\n\nLilia clamped one hand around the back of my neck and dug the nails of her other hand into my thigh as she rode me through her orgasm, her body shaking and twitching. I felt the walls of her pussy grip my cock as she climaxed and my balls started to tighten.\n\n\"Oh Lilia, I'm gonna cum!\"\n\n\"Oh yes! Cum in me! Cum in your sister! Oh fill me up! Oh I want your cum in me!\"\n\nTwo things happened then. First, my orgasm exploded, bursting out like a dam breaking. I filled my sister with so much cum it was leaking and dripping out of her soaked pussy. Second, I realized that my cousin Maggie was standing in the hallway, her mouth and eyes wide with shock. My mind, unable to function during my massive orgasm, suddenly overloaded as I realized that my cousin just watched me fuck my sister.\n\n\"OH MY GOD! MAGGIE!?!?\" I screamed.\n\n\"MAGGIE?!?\" Lilia screamed, turning around and seeing her. \"MAGGIE!!! WHAT THE FUCK?!?\"\n\n\"Oh my God,\" Maggie cried, her face turning crimson as she brought her hand to her mouth. \"I'm so sorry...\"\n\nShe turned and ran out the front door.\n\n\"Oh shit.\" I said. \"We're fucked.\"\n\nLilia pulled herself off of me, a blob of cum splatting onto the floor as my dick slid out of her. She didn't even seem to register it as she started pulling her clothes on in a panic.\n\n\"How long was she there?\" She asked.\n\n\"I have no idea. I didn't even see her until the end. Oh God, we're so fucked.\"\n\n\"Hang on. You wait here. I'll go see if I can get her and talk to her.\" Lilia said as she pulled on her top and turned towards the door. She stopped for a second and turned back, kissing me.\n\n\"It's going to be ok.\" She whispered, then turned and dashed out the door.\n\nI paced the house in complete panic mode. My head was full of terrible thoughts; our parents disowning us, me losing my job, the three of us getting thrown out into the street.\n\nI pulled out my phone and texted Melissa.\n\n'Maggie just walked in on Lilia and me.'\n\n'OH MY GOD!!\n\nWHAT HAPPENED?!?!\n\nDID SHE SEE YOU TWO?\n\nDID SHE FREAK OUT?\n\nARE YOU GUYS OK?'\n\n'She saw everything. EVERYTHING. We're so fucked.'\n\n'What did she say? Is she going to tell her brother? Your parents?'\n\n'She didn't say anything, she ran out of the house. Lilia ran after her. I have no idea what's going to happen.'\n\n'OH NO. I'm so sorry hun! I've got a break coming up in about 15 minutes. I'll call you then.'\n\nI paced around the house. At some point I noticed the pool of cum from when Lilia pulled off of me and cleaned it up. A little over a half hour later, I heard the door open. Maggie and Lilia were in the hallway, Maggie in front, looking shell shocked. \n\n\"Hey guys.\" I said, trying and failing not to sound awkward.\n\n\"Hey Jimmy. Sorry about earlier.\" She said, meekly. \"I'm going to go to my room ok?\"\n\n\"Yeah.\" I said, sounding overly positive. \"Go ahead. You do that.\"\n\nI turned to Lilia and mouthed \"What's going on?\"\n\n\"It's ok.\" Lilia whispered to me. \"I'll tell you all about it in a minute.\"\n\nWe heard the door to the girls' room close and then Lilia took my hand and guided me to my room, where she filled me in.\n\n----------------------------------\n\nMaggie sat on the beach with Liam for another ten or fifteen minutes after we left. The margaritas we had earlier in the day, combined with the heat of the sun, were making her feel a little nauseated.\n\n\"Hey Liam, the sun's getting to me a little. I think I'll go help Jimmy and Lilia with dinner.\" She said.\n\n\"You OK? Want me to walk with you?\" He asked.\n\nMaggie smiled. She loved how her brother always looked out for her.\n\n\"I'll be fine. Just need to get out of this sun.\"\n\n\"Alright. Text me when you get back to the house so I know you're OK and didn't pass out somewhere.\"\n\n\"I'm not that bad. Just need to get indoors for a bit.\"\n\n\"OK sis. See you soon.\"\n\nShe walked back to the house, staying in the shade as much as possible, eager to get home and drink a nice tall glass of ice water. She heard muffled moaning coming from inside the house as she grabbed the door handle but couldn't really comprehend what it meant. She stepped into the hallway and that's when she saw her two cousins, brother and sister, on the couch fucking.\n\nStunned, she could only stand there and stare. She could see a thin sheen of sweat forming on Lilia's back. She saw Jimmy's cock, shiny with his sister's juices, plunging in and out of her pussy.\n\n\"Oh Jimmy, oh fuck, oh fuck yeah, right there, oh fuck, right thereohfuckohfuckimcummingoh...UHNNNNNH\"\n\nAs her cousin came on her brother's cock, Maggie felt a warmth in her own pussy. She watched as Lilia tensed and twitched, leaning forward into her brother and shaking as she came. Mere seconds later she heard Jimmy cry out as his orgasm approached.\n\n\"Oh Lilia, I'm gonna cum!\"\n\n\"Oh yes! Cum in me! Cum in your sister! Oh fill me up! Oh I want your cum in me!\"\n\nShe locked eyes with Jimmy just as he climaxed. She was frozen watching his face as he moaned through his orgasm. The tiniest whimper escaped her throat as she noticed Jimmy's cum leaking out of his sister's pussy onto his cock. She felt a gush between her own legs.\n\n\"OH MY GOD! MAGGIE!?!?\"\n\nThe spell holding her in place broke. She took a step back, suddenly realizing that her panties were soaked from her own arousal, arousal from watching her cousins fuck in front of her.\n\n\"MAGGIE?!?\" Lilia screamed, turning around and seeing her. \"MAGGIE!!! WHAT THE FUCK?!?\"\n\n\"Oh my God,\" Maggie cried, her face turning crimson as she brought her hand to her mouth. \"I'm so sorry...\"\n\nShe turned and ran out the front door.\n\nShe slammed the door behind her, breathing hard. She couldn't process what she had just seen. Could that really have just happened? Did she really just see her cousins, brother and sister, having sex? Did she really just get turned on by it?\n\nShe stumbled down the walkway towards the street. Her mind was a fog; she had no idea where she was heading.\n\n\"MAGGIE!!\" Lilia called out behind her. \"MAGGIE WAIT!!\"\n\nMaggie turned to her, feeling bovine in her shock and confusion.\n\n\"Maggie. Let me explain.\" Lilia said, grabbing her cousin by her upper arms.\n\n\"Were you and Jimmy...? You and your brother...?\" Maggie sputtered \"What the fuck?\"\n\n\"Yeah.\" Lilia said. \"We were having sex. We're in love.\"\n\n\"What?\" Maggie said, her mind struggling to come to grips with what she was hearing, what she had just seen \"HOW?!?\"\n\nLilia told her the whole story, starting with the night at the club, then their struggles to make that night a one-time thing. Then their eventual surrender and acceptance of their relationship. She told her cousin how the last year, living with Jimmy and Melissa was the happiest of her life, how she loved them both and couldn't live without them. She knew that if anyone else found out they would think it was wrong but she said she didn't care.\n\n\"It'll destroy my family if my parents find out. If your mom finds out.\" Lilia said\n\n\"Well, no duh....\" Maggie said. \"Holy shit Lil. This is crazy. He's your brother!\"\n\n\"I know. I never thought about Jimmy that way until that night. Then it just sort of... happened. And once it happened, I couldn't stop thinking about him like that. To be honest, the fact that he's my brother just makes it a little bit sexier.\"\n\n\"REALLY?!?\" Maggie said.\n\n\"Yeah. It's so taboo, like forbidden love.\"\n\n\"Yeah. I guess I could see how that could be hot. But....he's your brother.\"\n\n\"I can't help it. I just love him and want him.\" Lilia said. \"Are you going to tell anyone?\"\n\nMaggie looked at her cousin. She didn't understand how, but it was clear that she really did love her brother, not in the way that brothers and sisters were supposed to love each other but in a way that lovers did.\n\n\"No. It's weird. REALLY fuckin weird. But you love him. And her. GOD THIS IS WEIRD!!\" Maggie said.\n\nLilia laughed.\n\n\"Yeah it is. But I wouldn't have it any other way.\"\n\nMaggie shook her head, trying to clear it.\n\n\"Holy shit.\" Maggie said. \"What about Liam?\"\n\n\"I dunno. Just because it worked between me and Jimmy doesn't mean it will work for you guys, but clearly I can't judge.\"\n\n\"WHAT?!? No! That's not what I meant!\" Maggie yelled. \"What am I gonna tell him?\"\n\n\"Oh. Well I'd really appreciate it if you didn't tell him. The fewer people who know about this the better.\"\n\n\"Yeah...I guess you're right.\" Maggie looked up at her cousin. \"I'll keep it a secret. I won't tell anyone. I don't know if what you're doing is right, but if you love them, then I won't do anything to mess it up.\"\n\n-------------------------------\n\n\"Wow.\" I said.\n\n\"Yeah.\" Lilia replied.\n\n\"You think she means it?\"\n\nLilia was silent for a minute. \"I think she does.\"\n\n\"So, we majorly lucked out?\" I asked.\n\n\"Yeah, I think so.\"\n\n\"Holy shit. Thank God!!\" I sighed. \"Should we go talk to her?\"\n\n\"No, I think she's better off by herself for now. Let's get started on dinner.\"\n\nLilia texted Lissy that everything was ok, then we got started on cooking dinner. I felt as if I was moving through a haze, my mind an overwhelming mix of emotions; worry about our secret getting out, relief that Maggie said she would keep it, and the lingering high from having sex with my sister for the first time in weeks.\n\nWe were mostly silent as we prepared the meal, but we couldn't help exchanging quick, flirty glances and touches while we were briefly alone. At one point I had to reach over Lilia from behind to get a dish. I pulled her in and hugged her from behind with one arm, relishing the feel of her body pressed against mine. She turned to look up at me, a satisfied smile on her lips. I leaned in for a kiss.",
        "\"Wow. It's really real isn't it.\" Maggie said quietly behind us.\n\nI quickly pulled away from Lilia, startled.\n\n\"You don't have to hide it. I guess this should seem normal after what I've seen.\" She said.\n\nLilia and I both blushed.\n\n\"I'm sorry you saw that Mags. We were trying to be careful,\" I said \"I guess we weren't careful enough.\"\n\n\"It's ok. To be honest I'm almost glad. It must have been torture to hide. With what you guys are doing for us, I'm glad that you can be yourselves around me at least.\"\n\nLilia reached out to lightly take Maggie's hand.\n\n\"That's really sweet Mags.\" She said.\n\n\"Do you guys want some help? My mind's a little frazzled and I could use something to focus on.\"\n\n\"Sure. Extra help is always appreciated. You mind making the salad?\"\n\nWe got busy making dinner and chatting about life, work, music and basically anything else that came to our minds. If you didn't know any better, you would never know that Maggie had walked in on me and my sister consummating our incestuous relationship.\n\n\"Hey guys, dinner smells great!\" Liam said, walking into the kitchen. \"Feeling better Mags?\"\n\n\"What do you mean?\" Maggie asked, a sudden look of panic on her face.\n\n\"From the sun? You came back cause it was getting to you.\" Liam said, looking confused.\n\n\"Oh yeah.\" Maggie said with a laugh. \"I feel so much better that I almost forgot. Yeah, I just needed to cool off for a little.\"\n\nLiam reached into the fridge and grabbed a beer. \"I'm gonna take a quick shower before dinner. Do I have time?\"\n\n\"Sure\" I replied. \"These chops will take about ten or fifteen minutes.\"\n\n\"Word.\" Liam said and headed to the bathroom.\n\nA minute or two later, the front door opened and Lissy came in.\n\n\"Hey guys, hey Mags. You ok? I heard the sun was getting to you.\" She asked, a forced smile on her face.\n\nMaggie rolled her eyes.\n\n\"Yes I know about you guys, yes I'm fine with it, yes I'll keep it secret. My brother's home though so we should maybe not talk about it.\"\n\nMelissa grabbed Maggie in a big hug.\n\n\"You're my new favorite cousin-in- law!!\"\n\nDinner was normal, everyone chatting easily with their meals. After dinner we all sat around in the living room, continuing our conversation and drinking a beer.\n\n\"I could use another. Anybody need a refill?\" I asked, getting up from the couch. Lissy and Liam both said yes.\n\n\"I'll help you carry them, Jimmy\" Maggie said.\n\nMaggie pulled the beers and handed them to me to open them.\n\n\"You ok?\" I asked.\n\n\"Yeah. Just processing.\" Maggie responded. \"Are you? I can't imagine how hard it must be for you three.\"\n\n\"Yeah. It's tough, but we'll be fine.\"\n\n\"So when did you realize that you were attracted to your sister?\"\n\n\"Actually, I never really looked at Lilia like that. That first time, everything just... happened. Lissy gave us a big push too. She sort of oozes sexiness, if you didn't notice.\"\n\n\"Yeah I noticed. I can usually feel the breeze of people turning their heads to check her out.\"\n\nI laughed. \"Yeah, she has that effect on people.\"\n\n\"Lilia told me that you guys tried to make it a one-time thing but you couldn't.\"\n\n\"Yeah...\" I said, blushing a little. \"We tried but sort of couldn't keep our hands off of each other.\"\n\n\"Did the fact that you were siblings weird you out?\"\n\n\"Not really. A little, but in a way that sort of made it sexier. You know how sex is so much better with someone you have a connection with? Well Lilia and I have connections deeper than between anyone else I've had sex with.\"\n\n\"Ummmmm...I really wouldn't know...\"\n\n\"Are you a virgin?\"\n\n\"Yeah...\" Maggie said; it was her turn to blush. \"I think Liam is too.\"\n\n\"Wow.\"\n\n\"So is sex with Lilia better than with other people? Even though you guys are siblings?\"\n\n\"Oh yeah. It might be because we're siblings. The fact that our desire pushes us past that line is such a huge turn on.\"\n\n\"Hmmmmm.\" Maggie said and took a sip. She was staring into the living room. Was it my imagination or was she looking at her brother?\n\n\"You two get lost out there? We're losing our buzz here!\" Lissy yelled out to us.\n\n\"On our way.\" Maggie called back. She turned to me and said, quieter, \"Thanks for the talk.\"\n\n--------------------------------------------------------------------\n\nIt was hard for me to believe, but Maggie knowing about our relationship made it a lot easier for us. She went out of her way to get her brother out of the house so that the three of us could have alone time. She also didn't mind if Lilia, Melissa or I flirted, kissed or touched around her. She asked the three of us a lot of questions, but not so many that it was annoying. I understood her curiosity, since my relationship with Lilia and Melissa was definitely out of the ordinary. Something strange seemed to be going on with my cousin though.\n\n\"Is it just me, or is Maggie showing a lot more skin recently?\" I asked the girls as I pulled on my shorts. Maggie and her brother had taken my car to go get a pizza, leaving the three of us to ourselves, an opportunity we took full advantage of.\n\n\"YES!!\" Lilia cried. \"I thought I was the only one who noticed!!\"\n\n\"You guys are too cute.\" Melissa commented. She was stretched out on my bed, completely nude, her legs spread and a fresh load of cum leaking out of her pussy.\n\n\"What?\" Lilia asked.\n\n\"Uhhhhhhh, she wants to fuck her brother and is trying to get him on board. Did you think you two were the only two siblings in the world who wanted to bump uglies?\" Melissa stated.\n\n\"Stop.\" I scoffed. \"You only think that because you think it would be crazy hot to have two sets of siblings fucking in your house. She's not trying to fuck Liam.\"\n\n\"Have you watched them the last week or so?\" She asked, sitting up. \"First off, she's only wearing the skimpy clothing when he's around; second, anytime we're drinking with the two of them, she brings up some kind of sex talk; third, she touches him SO OFTEN. She can't keep her hands off him. She wants him SO BAD it's crazy.\"\n\n\"Huh....\" Lilia said, pausing for a moment before putting her sundress on. \"Jimmy you don't think...\"\n\n\"No. Maggie is not trying to fuck Liam. She's a virgin for God's sake! They both are!\"\n\n\"WHAT?!?\" Lissy exclaimed. \"THOSE TWO HOTTIES ARE VIRGINS?!?\"\n\n\"Yeah. She told me the day she found out about us.\" I said.\n\n\"OH MY GOD!! That's such a travesty!\" Melissa said. \"If it weren't for you two, I'd fix that tragedy in a fucking HURRY.\"\n\nLilia and I laughed.\n\n\"You really think that Maggie is trying to seduce Liam, Lissy?\" Lilia asked.\n\n\"Oh yeah. Watch them at dinner tonight. It's so fucking obvious.\"\n\nWe watched them at dinner and Lissy may have been right. It sure did seem like Maggie was flirting with Liam. She was sitting so close to him that she occasionally brushed against him. Whenever he made a joke, she would put her hand on his shoulder or thigh as she laughed. Mostly though, it was the way she looked at him, with a longing that couldn't be missed once you knew to look for it.\n\n\"I think you're right Lissy.\" I said. Melissa and I were doing the dishes while Lilia and the twins were picking a movie in the living room.\n\n\"Yeah, I know I am.\" She replied, then looked up at the ceiling. \"I must be the luckiest woman on the planet. I get to live with two hot sets of siblings that are fucking.\"\n\n-------------------------------------------\n\n\"Oh my God! Liam what happened?!?\" Lilia asked when we walked in.\n\nLiam limped down the hallway in a crooked gait, leaning on me and his sister for support.\n\n\"I'm fine, I just pulled a muscle in my back moving that couch.\" He said.\n\nLiam, Maggie and I had driven out to Aunt Mo's house to help her get rid of some furniture. One of Aunt Mo's friends had been helping us and slipped as he and Liam were loading a couch into the moving van, leaving Liam in an awkward position with the full weight of the couch.\n\n\"Oh my God!\" Lilia gasped \"Let me get you a heating pad! Did you take any meds? Do you want some Ibuprofen?\"\n\n\"Actually, that would be great. Thanks Lil.\" He said.\n\n\"Man, that sucks Liam. Do you need to go to the doctors?\" Melissa asked.\n\n\"No, I'm pretty sure it's just a pulled muscle. If it doesn't get better in a couple of days, then I'll go.\"\n\n\"Hey, would you want to sleep in the bed in our room for the night? Our bed is much firmer than Jimmy's and will probably be better for your back.\" Melissa asked. I looked over and saw that familiar mischievous glint in her eyes.\n\n\"I wouldn't want to put you guys out..\" Liam started.\n\n\"You wouldn't be putting us out at all. How bout Lilia and I bunk with Jimmy for a couple of nights and you bunk with your sister? Just until your back is feeling better?\"\n\n\"What do you think Mags?\" Liam asked. \"Mind sleeping with your brother?\"\n\n\"Not at all.\" Maggie answered quickly.\n\n-----------------------------------------------\n\nLissy grabbed a pillow and pulled it tight over her face to muffle her moans. My sister was on all fours eating her out as I pounded into Lilia from behind. Lissy had just managed to squeak out \"I'm cumming\" before she used the pillow as emergency soundproofing. Lilia kept licking and fingering her as she twisted and spasmed.\n\n\"Fuck Lil, I'm cumming too.\" I said, barely above a whisper.\n\nMy sister pulled off and quickly spun around, taking my cock and jerking me off onto her face. I bit my lip and did my best to be quiet as I pumped my seed onto my sister's eager face. The first rope landed just above my sister's eyebrow, running in a line down her cheek and ending just on her upper lip. The next streak hit her mouth, half landing inside her parted lips, the rest pooling on her chin. I shot four, five, six squirts before finally tapering off to small drops, which Lilia eagerly sucked up. She turned her cum covered face to Melissa.\n\n\"Want some?\"\n\n\"Fuck yeah.\" Lissy responded and immediately started licking my seed off of my sister's face.\n\n\"Oh god, I missed sleeping with you guys so much.\" Lilia sighed as we collapsed into each other's arms.\n\n\"Don't worry. I think we're going to be able to do it from now on.\" Melissa said.\n\nI wondered what she meant.\n\n----------------------------------\n\nMy heart skipped a beat when I saw Lilia's text in our group chat.\n\n'Emergency Throuple Meeting After Work.' It said.\n\n'Are you OK?' I texted back immediately. Half a second later Lissy texted the same thing.\n\n'I dunno. Liam saw us last night. The door was open and he was watching from the hallway. Maggie just told me.'\n\n'Yikes.' I responded.\n\n'LOL. Is that all?' Lissy messaged with a laughing emoji.\n\n'LISSY THIS IS SERIOUS!!!' Lilia texted back.\n\n'OK. But don't worry. He's going to keep it secret too.'\n\n'Lissy I'll pick you up. Jimmy meet us at the Parrot after work. We could be in big trouble.'\n\n--------------------------------------\n\n\"Finally you're here.\" Lilia said. \"Can you talk some sense into this nutjob?\"\n\n\"What's going on?\" I asked, sitting down.\n\n\"Your sister is freaking out over nothing. I ordered you a Heineken by the way.\" Lissy said.\n\n\"I'm not freaking out over nothing. You're acting like nothing is wrong. If Liam tells our parents, we're completely fucked.\"\n\nI took my sister's hand and looked in her eyes. \"Hey. Calm down a little. Tell me what's going on.\"\n\n-------------------------------------------------\n\nMaggie and Liam had gone to bed about an hour and a half before we did. Liam wanted to lay down and rest his back and Maggie said that she was tired too. Maggie told Lilia that Liam was asleep almost immediately but it took her a while to drift off (Melissa interjected here 'I wonder why...' drawing a sharp glance from Lilia). At some point, Liam woke up and went out of the bedroom. Maggie thought he was just going to the bathroom but started to wonder when he didn't come back to bed for a while. About 20 minutes later, he came in, white as a ghost.\n\n\"Liam, what's wrong?\" Maggie asked.\n\nHe didn't respond, just sat down on the edge of the bed.\n\n\"Liam you're scaring me. Are you OK?\"\n\n\"I just saw our cousins having sex.\" He said.\n\nMaggie tried not to let her relief show.\n\n\"Really?\"\n\n\"Yeah Mags. Jimmy and Lilia were having sex. And they were having sex with Lissy too.\"\n\nMaggie tried to keep up the appearance of ignorance.\n\n\"Are you sure? Maybe you just saw a trick of the light from shadows or something.\"\n\nLiam turned to his sister, a touch of anger on his face.\n\n\"I saw Lilia on all fours eating out Lissy with Jimmy fucking her from behind. I saw him cum on his sisters face. You think that was a trick of the light?\" He snapped.\n\n\"OK! You saw it! I believe you! What happened?\"\n\nLiam had gotten up to go to the bathroom. When he was done, he thought he heard a scream or a cry coming from Jimmy's room, and walked down the hall to make sure everything was ok. Jimmy's door was halfway open. The noises coming from the room didn't register in Liam's brain, he just approached the half open door and peered in.\n\nLiam was too shocked to make a noise. There in front of him he could clearly see his cousin Lilia, completely naked and on all fours. She had her head buried in her friend Melissa's crotch, licking and fingering the curvy girl's pussy. Lilia's brother was behind his sister, also naked, and fucking her, hard. He stood there and watched their illicit encounter, captivated by the taboo sight.\n\n\"I'm cumming\" Melissa said and then grabbed a pillow and pressed it tight against her face before she started writhing against his cousin's face.\n\nJimmy kept pounding his sister as she ate out her friend.\n\n\"Fuck Lil, I'm cumming too.\" Jimmy said, barely audible.\n\nLiam watched in awe as Lilia spun around and took Jimmy's cumshot on her face, then moved over to Melissa, who started licking Jimmy's spunk off before kissing Lilia and swapping the cum back and forth. The three of them collapsed back onto the bed and Liam slowly backed away before making his way back down the hall to his own room as quietly as possible.\n\n\"Wow.\" Maggie whispered.\n\n\"Wait a minute.\" Liam said \"Why aren't you freaking out?\"\n\n\"What do you mean?\"\n\n\"I just told you that your cousins, who are brother and sister, are fucking their roommate and each other and you're acting like it's just another piece of boring news? Wait a minute...did you know about this already?\"\n\n\"Errrrr... sort of...\"\n\n\"Jesus Mags!! What the fuck! Why didn't you tell me?\"\n\n\"I wanted to! I swear! But I couldn't!\"\n\n\"Why not?\" Liam asked.\n\n\"I promised Lilia I would keep it a secret. She said they're in love and I believe them. Their relationship is weird but it's theirs. I don't want to fuck it up.\"\n\n\"Oh God Mags!! They're brother and sister!!\"\n\n\"So! They're entitled to love each other! They're both grown consenting adults! Who are you to judge?\"\n\n\"Aw Mags.... you can't be serious.\"\n\n\"And by the looks of it there were things about it that you found appealing too.\" Maggie said, pointing to the bulge in her brother's shorts.\n\nJimmy turned bright red and covered his crotch with his hands.\n\n\"Are you gonna tell mom? Or their parents?\" Maggie asked.\n\n\"I dunno... it's so weird...\"\n\n\"Yeah it is. But so what?\"\n\n\"Can we not talk about this anymore? I just want to go to sleep.\" Liam told her.\n\n\"Fine.\"\n\n----------------------------------------\n\n\"I guess Liam had trouble sleeping because he didn't get up until almost noon. Maggie told me the whole thing this morning.\" Lilia said.\n\n\"Wow. Do you think he'll tell?\" I asked.\n\n\"I dunno.\" Lilia responded.\n\n\"Of course he's not going to tell. He's going to have his own secret to keep.\" Melissa said.\n\n\"He's not going to fuck his sister!!\" Lilia hissed at her, a little bit too loudly.\n\n\"Listen, even if I'm wrong, he cares enough about her, and you guys, to keep his mouth shut. I'm telling you baby, you're freaking out over nothing.\" Melissa leaned in and kissed my sister on the cheek, a rare display of affection in public. It seemed to put Lilia at ease.\n\n\"I hope you're right.\"\n\n-------------------------------------\n\nDinner that night was awkward. Lilia and I were pretty much silent the whole meal. Melissa, obviously overcompensating, was extremely talkative, trying desperately to keep the conversation going between the twins. Once the meal was done and the dishes were put away, everyone lingered in the dining room.\n\n\"Well, the night is young and so are we. What're we doing guys?\" Melissa asked.\n\n\"I'm actually still a little sore from moving that furniture yesterday. You guys mind if I turn in?\" Liam asked\n\n\"No problem. How 'bout you Mags?\" I asked.\n\n\"I'm pretty tired too. I think I'm going to call it a night too.\"\n\n\"I'm gonna sleep in Maggie's room again tonight.\" Liam said. \"You don't mind right?\"\n\nLilia blushed, Melissa beamed.\n\n\"Fine by me. Your back still?\" I asked.\n\n\"Yeah.\" Jimmy said with some hesitation. \"My back. Still not 100%. Well...goodnight you three.\"\n\nThings stayed awkward for a couple of days before returning to normal. It seemed that Liam had decided that he would keep our secret as well. He didn't mention his back getting better, but I noticed that he was able to move around a lot easier, and he never suggested switching back to our previous sleeping arrangements. We went back to our normal routine, just enjoying the summer as it slowly inched closer to fall. It seemed that everything was fine, until Melissa's text came in.\n\n'I FUCKING TOLD YOU SO!!' Melissa's text came through our group chat, closely followed by another. 'Both of you guys owe me an orgasm!'\n\nI was at work and Lilia had driven back to our hometown for a doctor's appointment, so Lissy was at home with the twins.\n\n'What are you talking about?' I responded.\n\n'Maggie made the first move last night. She's about to go all Jimmy/Lilia on Liam.'\n\n'Hold on, can we do a three-way call?' Lilia texted.\n\nI closed the door to my office and answered when I saw the call come in.\n\n\"What are you talking about Lissy?\" Lilia asked when we were all connected.\n\n--------------------------------------\n\nThe night before we'd been drinking pretty heavily, killing off two bottles of rum and a bunch of beers. Liam and I did most of the damage to the rum, though the girls helped out some too. When it was time for bed Liam passed out on his back on the bed and Maggie climbed in next to him. She was pretty drunk and REALLY horny, her mind full of images of her cousins' taboo tryst.\n\nShe snuggled up next to her snoring brother, sliding her hand under his shirt and running her fingers up and down his chest. She couldn't take her eyes off of his crotch, imagining how his cock would look. 'It's ok' she thought 'he's sleeping. It's not like we'll do anything.' But she kept rubbing her fingers and hands up and down his chest and stomach, her hand gradually making its way lower and lower. Her eyes hungry with lust, she watched as a bulge started to grow in his shorts. She licked her lips and unconsciously started grinding her hips against her sleeping brother's side. She couldn't stop staring at the shape of her brother's cock thickening through his shorts. She felt her resistance start to melt away as it grew until, suddenly, she saw it twitch. Unable to control herself, she slid her hand down, grasping her brother's cock through the thin fabric of his shorts.\n\nLiam moaned deep in his throat and turned his head but didn't wake up, though at this point Maggie was unsure if that would have stopped her. She massaged the bulge in his shorts, relishing the feel of his cock in her hand, the first cock she had ever touched, even over clothes. It twitched again in her grip, and she started working her hand up and down the shaft, slowly jerking it through his pants. Liam moaned again and thrust his hips up to meet her rhythm, his eyes still closed. Desire burning away all logic, Maggie undid his button and unzipped his fly, reaching in and feeling a bare cock, her brother's cock, against her skin for the first time. Unable to wrap her hand fully around it, she worked her fist up and down, her other hand now in her own pants, her fingers furiously working her soaking wet pussy and clit. She jerked her brother in his sleep until suddenly, she felt his cock swell and his balls tighten up.",
        "\"Uhnh, uhnh, uhnh\" Liam moaned.\n\nHis cock erupted, thick ropes of cum, seemingly endless, spurted out onto his stomach and his sister's hand. The sight and feel of her brother cumming in her hand brought on Maggie's own orgasm. She twitched and spasmed as she continued to pump her brother's cock, the last drops of his cum slowly oozing out.\n\nShe lay there panting for a moment, coming down from her orgasm. Finally, she got some tissues and started wiping up her brother's seed. As she cleaned him up, he opened his eyes. She froze.\n\n\"Mmmmmm. Mags\" He slurred, his eyes barely open. \"Love you.\"\n\n\"Love you too Liam.\" She whispered and kissed him on his cheek. His head lolled back and he immediately started snoring. She finished cleaning him up and then snuggled up against him again, falling asleep herself moments later.\n\nShe woke up with her body draped across her brother, his morning hard-on pressed into her leg. With a flash of guilt, she quickly rolled over. Her movement woke Liam up. He sat straight up.\n\n\"Mags you awake?\" He asked.\n\n\"Barely. Five more minutes.\"\n\n\"OK. Get some rest. I'm going to go for a run on the beach. I feel great this morning.\"\n\nMaggie closed her eyes, feeling shame and pride well up inside her. As soon as she heard the front door close she got up and went into the kitchen, where Lissy was sitting munching on a bagel. Lissy looked at her, seemingly able to read her mind.\n\n\"Have a good night?\" She asked, a knowing grin on her face.\n\n-------------------------------\n\n\"And then she spilled it all.\" Lissy said.\n\n\"Holy shit.\" Lilia said.\n\n\"Wow.\" I said, stunned.\n\n\"Are we OK with this?\" Lilia asked\n\n\"Ummmm...I'm not sure we have a choice.\" Melissa said. \"What are we going to tell them? 'We're the only ones who can commit incest in this house'?\"\n\n\"Lissy...\" Lilia said in a scolding tone but trailed off, unable to think of a response.\n\n\"Listen guys, we all need to think about this some more,\" I started\n\n\"Oh, I'll definitely be thinking about it.\" Lissy cut me off.\n\n\"Lissy!\" Lilia scoffed. I chuckled.\n\n\"We all need to think on this and I have to get back to work. Can we discuss later?\"\n\n----------------------------------------------\n\nWhen Lilia and I got together, it happened quickly, like being struck by lightning. Watching Maggie and Liam was like watching a delicate flower slowly bloom. We weren't sure whether or not anything would happen, but there was definitely a chance. Maggie started dressing much more provocatively whenever Liam was around, which was most of the time. Her normal daytime outfit was a bikini top (her bikinis had gotten progressively smaller through the summer), and a pair of tiny cutoff jeans so short and tight that she couldn't zip them up. At night she would switch to her \"pajamas\", usually a low cut sleepshirt that allowed the tiniest hint of her butt cheeks to peek out. She made a point of bending over in front of Liam as often as possible, as well as squeezing up against him while walking by. She sat close to him all the time and had her hand casually laid on him more often than not. Whenever she was in the shower while Liam was home, she would \"forget\" to close the door all the way; once or twice I saw him in the hallway staring into the bathroom, his jaw hanging wide. All of this was certainly having an effect. On Liam, sure, but also on Lilia, Melissa and me. Lissy had given up any attempts at hiding our relationship, giving us kisses and quick gropes whenever she felt like it. She also practically dragged my sister and I to bed each night, impatient to make love to us after watching Maggie's displays all day. The twins didn't say anything about it, but certainly gave us more space, heading to the beach by themselves often and leaving the three of us home alone. We took full advantage.\n\nIt was a Saturday evening and Lissy and I were snuggling together in my bed having just finished a quick but passionate fuck. Lilia was sleeping on the couch in the living room (\"Have fun guys, but try to be quiet, I really need a nap\" she told us when we started getting handsy during the movie we were watching) and Liam was in his room. I heard the front door open. It must have been Maggie coming back from the beach.\n\n\"Hey.\" Lilia blearily called to her cousin, then cried out with some alarm \"Oh Mags, you're burnt to a crisp!\"\n\n\"Is it really bad?\" Maggie asked.\n\nI got dressed and headed out to the living room. Maggie was standing next to the couch and sure enough, her skin was almost as red as her hair.\n\n\"What happened?\" I asked \"Did you forget to bring sunscreen?\"\n\n\"No, I ran out. I put some on in the morning and figured it would be enough. I guess I was wrong.\"\n\n\"Whoa Mags!\" Liam called out \"You look like a boiled crab! Are you OK?\"\n\n\"Yeah. It doesn't really hurt; it just feels kind of warm.\" She said.\n\n\"Oh it'll hurt later. We've got some aloe gel in the bathroom behind the mirror. Make sure you put it on.\" Lilia told her cousin.\n\n\"I will. I'm going to shower first and eat something. I'm starving.\" She said.\n\n\"Well we have some lasagna that's about to come out of the oven. It'll be ready by the time you get done in the shower.\" I told her.\n\nLilia, Liam and I set the table and pulled out the lasagna while Maggie showered. She came out about fifteen minutes later, wrapped in a towel that was so small it barely covered her. The three of us stopped what we were doing and stared, shell shocked.\n\n\"Hey Lil, where did you say that Aloe was again?\"\n\nLilia blinked and then said \"Oh, yeah. Behind the mirror. Or maybe in the drawer to the right of the sink. One of those.\"\n\n\"Thanks.\" Maggie said and turned towards the bathroom again, the three of us staring again as she walked away.\n\n\"You guys ok?\" Melissa asked, rubbing the sleep out of her eyes.\n\n\"Yeah.\" Liam said, blushing. He quickly resumed setting the table.\n\n\"Perfect timing Lissy, we just finished getting everything ready.\" I teased.\n\n\"Good. I was worried I'd have to go back to my nap to give you guys more time.\" She shot back.\n\n\"Liam!\" Maggie yelled from the bathroom. \"Can you give me a hand?\"\n\nLiam headed that way and we started serving out the lasagna and bread. Maggie and Liam came back a few minutes later. Liam was white as a sheet but Maggie's face looked like the cat that ate the canary. Melissa gave Lilia and I a look that somehow clearly said \"I FUCKING TOLD YOU!! NOW PAY UP THOSE ORGASMS!!\"\n\nAfter dinner we sat in the living room drinking some wine and listening to some music. Maggie kept shifting uncomfortably in her seat.\n\n\"You ok?\" Lilia asked with some concern.\n\n\"Yeah. It's starting to burn pretty bad all over. You guys mind if I turn in?\" Maggie responded.\n\n\"Not at all.\"\n\nThe four of us stayed up for another hour or so before we all decided to hit the sack as well. We made our way to our respective bedrooms. As I climbed into bed Lilia pushed me onto my back and pulled Melissa to her for a kiss.\n\n\"Mmmmmmm. Now let's see what I missed out on while I was napping earlier.\" She said and started grinding on my cock.\n\nAn hour or so later, Lissy got up from our hot, sweaty heap.\n\n\"I need some water. You guys want some?\" She said, heading for the door.\n\n\"Lissy!\" Lilia hissed. \"Put some clothes on!\"\n\n\"Oh come one. They've seen almost all of this this summer anyway.\" She said gesturing down her naked body. \"Besides, it will probably get them riled up enough to get started with each other.\"\n\n\"Lissy!\" Lilia said again.\n\n\"Here.\" I said, throwing her one of my dress shirts. \"Make your girlfriend happy will you?\"\n\n\"You guys are such prudes.\" Lissy said, sticking out her tongue while she put on the shirt. Lilia and I giggled.\n\nMy sister and I lay together, content. I was just starting to drift off when I heard Melissa come back in.\n\n\"It's happening you guys!\" She said, her voice full of excitement.\n\n\"Huh?!?\" I asked, startled out of my approaching slumber.\n\n\"It's happening! They're doing it! RIGHT NOW!!\" Melissa squealed quietly.\n\n\"Maggie and Liam?\" Lilia asked \"How do you know?\"\n\n\"I saw them. I went to get some water and noticed their door was open. I peeked in on my way back and saw her giving him a blowjob!! She was really good at it for being a virgin too!\"\n\n\"Wow!\" I said \"What should we do?\"\n\n\"Hmmmmm. I think we should pull some chairs from the dining room and set them up outside their door. Then we can watch and hold up placards with their score.\" Melissa deadpanned. \"We shouldn't do anything you doofus! Just leave them alone.\"\n\n\"Wait a minute...\" Lilia said, her brow furrowed in thought. \"You went to get water about fifteen minutes ago. How long were you watching?\"\n\n\"Too long.\" Melissa said, climbing on top of my sister and putting Lilia's hand on her pussy. \"I'm ready for round two.\"\n\n\"Don't you mean round three?\" I asked.\n\n\"Shut up and fuck me.\" She said. So I did.\n\n---------------------------------------------------------------------------------\n\nThe next morning, I asked Liam to help me take the bikes to the shop for some maintenance and left the girls at the house. They filled me in on the conversation.\n\n\"Soooooo.....\" Melissa asked, looking at Maggie over her coffee \"How's your sunburn?\"\n\n\"Still pretty uncomfortable, but better.\" She said.\n\n\"And how was it fucking your brother?\" Lissy asked in the same nonchalant tone.\n\n\"What?!?\" Maggie said, her face turning even more red.\n\n\"Well last night I got up to get some water and happened to peek in on you two. You both seemed to be enjoying yourselves.\"\n\nMaggie looked up at the ceiling and let out a deep breath.\n\n\"IT WAS AMAZING!!\" She screamed, before telling them the whole story.\n\n------------------------------------------------\n\nMaggie smiled as she walked back to the bathroom from the dining room. She could feel the three sets of eyes on her as she made her way. She got back into the bathroom and grabbed the bottle of Aloe from the counter where she had left it. She squirted a little onto her hand (her mind recalling the feeling of her brother's cum squirting out onto her hand) and rubbed it onto her arms and chest.\n\n\"Liam!\" Maggie yelled out to the dining room. \"Can you give me a hand?\"\n\nHer brother opened the door and stood there, staring. Maggie was leaned back against the sink, her towel was struggling to contain her breasts and was hitched a little higher revealing more of her outstretched legs.\n\n\"Can you put some lotion on my back?\" She asked.\n\n\"Ummmmm.....wouldn't you rather Lilia or Melissa do it?\" Liam gulped.\n\n\"I'd feel weird having them do it since they're in a relationship. It's like making a move on someone's boyfriend. They don't want their girlfriend putting her hands on another woman. Pleeeease?\" She asked.\n\n\"Fine.\" Liam sighed. \"Turn around\"\n\nMaggie turned around and dropped her towel, eliciting a gasp from her brother.\n\n\"Mags!! What are you doing?\" He asked\n\n\"I just don't want the towel getting in the way. I want to make sure that I get lotion on all the parts that are burned.\" She turned her head and gave him her best \"puppy dog eyes\". \"Please Liam, it's really hurting.\"\n\n\"OK fine.\" He said. \n\nMaggie handed the bottle of lotion back to her brother and scooted back a little closer to him. She drew in a quick breath when she felt his lotion covered hands on her back.\n\n\"You ok?\" He asked.\n\n\"Yeah, it's just a little cold.\" She said. Her nipples hardened and she used all her will to keep from reaching up and pinching them.\n\n\"Mmmmmmmmm.\" She moaned as he rubbed the cool lotion onto the burned skin of her back. \"That feels so good.\"\n\nHis hands continued moving against her body, rubbing the lotion everywhere that was burned. She felt him brush against the top of her ass, then around her sides just shy of grazing against her boobs. As he applied more and more lotion, his hands moved further onto her ass and around her sides. She felt blood rushing to her cheeks and chest and between her legs, where she felt herself getting wetter and wetter.\n\n\"Make sure you get my butt and the top of my thighs.\" She said.\n\n\"What?\" He cried, shocked.\n\n\"I've got some sunburn there too but I can't see it. I want to make sure that there's lotion everywhere I'm burned.\" She thrust her butt back slightly and wiggled it a little from side to side.\n\nShe heard him take a deep breath before cupping her ass cheeks with his hand and rubbing them around, working the lotion into her skin.\n\n\"Ooooooooh. That's nice.\" Maggie cooed, her pussy now soaked.\n\nShe heard his breathing, ragged, as he worked his hands around her ass, then down to her thighs, the tips of his fingers moving closer and closer to her dripping pussy.\n\n\"Ok. I think I got everywhere.\" He said, pulling his hands off her.\n\nMaggie couldn't keep a disappointed whimper from escaping her throat, but she put on her brightest smile before quickly turning around and wrapping her brother in a big hug. She got the tiniest glimpse of his eyes growing wide as dinner plates before she pressed her body against his, the bulge of his cock pressing into her stomach, her hard nipples squashed into his chest.\n\n\"Thanks bro!\" She said, giving him a quick peck on the cheek. \"You're the best. Now turn around and get out of here so I can get changed.\"\n\nHer sunburn didn't really bother her that much while they were eating dinner but not long after dinner, her skin felt like it was being slowly roasted in a rotisserie. \n\n\"You ok?\" Lilia asked with some concern.\n\n\"Yeah. It's starting to burn pretty bad all over. You guys mind if I turn in?\" Maggie responded.\n\n\"Not at all.\"\n\nMaggie went to the bedroom and took off all her clothes, her skin overjoyed at being freed from her shirt. She laid down on her stomach on the bed, the sunburn protesting at making contact with anything but air. She rolled onto her back, then back to her front, unable to get comfortable. The fact that she was insanely horny wasn't helping matters. Her mind seemed to be stuck on a loop, replaying the same three things over and over again: her hand, working up and down her sleeping brothers shaft; the feeling of his cock swelling and his cum exploding onto her hand; his fingers as he put lotion on her, rubbing just short of her aching pussy. She slid her hand down to her slit, her fingers immediately starting to work the hard nub of her clit. Her breathing quickened as she felt an orgasm approaching. Her other hand moved up to pinch her now hard nipples and she imagined that it was her brother's fingers doing the pinching, her brothers fingers sliding their way into her dripping wet hole. She curled her fingers towards the front of her body, pressing against the spongy mass of her g-spot and a climax rocked through her. She kept working her fingers - two inside on her g-spot and one outside on her clit, as her pussy clenched and spasmed through her orgasm until it finally subsided. Rather than leaving her satisfied, however, she now felt even more full of lust.\n\nShe rolled back onto her stomach and pulled the bedsheet over her, staying naked underneath. Laying her head on her pillow, she tried vainly to sleep, but the combination of her burning skin and her burning lust made sleep impossible. Finally, she heard the door to her bedroom quietly open.\n\nLiam was silent as he made his way to the bed. He sat down on the edge quietly and swung his legs up, trying not to disturb his sister.\n\n\"Hey Liam.\" She whispered.\n\n\"Hey Mags. Did I wake you?\" He whispered back.\n\n\"No I can't sleep.\"\n\n\"Sunburn bothering you?\"\n\n'Horniness is bother me.' She thought but out loud said \"Yeah.\"\n\n\"Can you put some more lotion on my back?\" She asked. \"I think the stuff from earlier is all worn out.\"\n\n\"Sure, is it in the bathroom?\"\n\n\"No, I brought it in here in case I needed it.\" She handed him the bottle of lotion from the nightstand and pulled the sheet off of her.\n\nLiam gasped again at seeing his sister's naked body. She was laying on her stomach with her arms propped under her head, giving him a perfect view of not just her incredible ass, but the side of her boobs squished between her body and the bed.\n\n\"Sorry, but my pajamas were bothering my skin.\"\n\n\"It's ok.\" He said. \"You look great... for a crab...\"\n\nShe reached out and playfully slapped him before settling back down into her previous position. He squeezed out a generous dollop of lotion and rubbed it between his hands before gently pressing them against his sister's back.\n\n\"Mmmmmmmmmmm.\" She groaned, enjoying the cooling feel of the lotion and the taboo thrill of her brother's hands on her naked body.\n\nHe rubbed his hands all the way up and down her back, arms and legs, occasionally stopping to squeeze out more lotion. He was bolder this time, his fingers now openly rubbing against the side of her boobs, drawing out moans of pleasure from his sister. He applied the lotion to her ass last, working the cooling liquid onto the perfect globes of his sister's butt in a slow, circular motion. He slid his hands up and down along her ass, moving to the top and insides of her thighs, the tips of his fingers just barely rubbing against his sister's swollen pussy lips.\n\n\"Oh.\" She whispered out, each time his fingers grazed her cunt. \"Oh\"\n\nShe curled her back and hips up and slightly spread her legs, pushing herself towards his fingers and giving him easier access to her waiting sex. She felt her desire approaching a boiling point.\n\n\"Do you mind doing the front too?\" She whispered.\n\n\"Huh?\" Liam asked, stunned.\n\nShe didn't ask again, just rolled over onto her back, giving her twin brother the first view of his sister's perfect, naked body since they were toddlers. \n\n\"My chest is burned too\" She whispered, looking up at him, her eyes burning with desire.\n\nHer brother just sat there, staring at his sister's perfect breasts, until she took his hand and placed it gently on her chest, just below her neck.\n\n\"Oh.\" A deep, breathy moan escaped his lips and he started working the lotion onto his sister's chest. He took his time, first working her upper chest, then her shoulders and arms, before finally rubbing it onto the perfect globes of her breasts.\n\n\"Ohhhhhhhh.\" Maggie breathed, her eyes closed and her body undulating in waves as her brother massaged her breasts. \"Mmmmmmmmm\"\n\nShe opened her eyes and stared into her brother's shocked face. She reached her hand down and grasped his cock through his shorts.\n\n\"Ohhhhhhhhhhh.\" He groaned as she worked her hand up and down.\n\nHe started to pull away. \"Wait Maggie, I dunno.\"\n\nHis sister sat up, putting a hand on his chest and pushing him down onto the bed.\n\n\"Shhhhhhhhhhh,\" She whispered as she undid his pants \"Shhhhhhhhhh. It's ok\"\n\nShe pulled his cock out, gasping at the size of it. She lowered her head down and kissed the tip.\n\n\"Ohhhhhhhhhhhhh Maggie.\" Liam moaned, placing his hand on top of her head.\n\nUnsure what to do, she kept working her hand up and down the shaft, then stuck her tongue out and licked the head, drawing more moans from her brother. Encouraged, she slid the whole head into her hot, wet mouth. She felt her brother's body tense.\n\n\"OH GOD!\" He said \"Ohhhh Maggie that feels so good.\"\n\nThough Maggie had never had a cock in her mouth before, she had watched a little bit of porn and started trying to emulate what she had seen, working her mouth up and down the shaft. Unable to take all of it, she jerked her brothers cock with her hand as she worked as much of it as she could into her mouth.\n\n\"Oh....Maggie...I'm\" She felt his cock swell again and doubled her efforts, increasing the pace of her mouth and hand as she jerked him and sucked him.\n\nThe force of his orgasm surprised her, the first spurt hitting the back of her throat, causing her to gag and pull off, the second and third spraying out in thick jets, one landing on her hair and forehead, one covering her nose and mouth. More and more cum squirted out from her brother's cock, coating her face and hand with his slimy spend. Maggie's pussy gushed as her brother shot his cumshot all over her. After what seemed like an eternity, his orgasm finally slowed and stopped.",
        "\"Oh Mags, I'm sorry....\" Liam started.\n\n\"Shhhhh,\" She said, pressing a finger from her clean hand to his lips. She flicked out her tongue and licked up as much cum as she could get from her face, relishing her first taste of the salty, slightly bitter substance.\n\n\"Here.\" He said handing her his shirt.\n\nShe took it and started wiping the cum off. By the time she was done it seemed like his whole shirt was soaked in cum.\n\n\"Maggie, I didn't mean to...\" He started, but his sister stopped him again.\n\n\"I did. I meant to. I've wanted you all summer, and if I'm honest with myself, longer than that, though I wasn't willing to admit it. If you don't want me then this will be the only time. But seeing what Jimmy and Lilia had makes me think that if you want me, then we might be able to make something work.\"\n\nLiam sat there silent, his eyes faraway. Maggie felt tears starting to form before Liam sat up, took her in his arms and kissed her deeply. She kissed him back, their passion making up for their lack of experience. He rolled on top of her and got between her legs, his cock still hard. Maggie reached down and grasped it, lining the head up with the dripping entrance to her pussy as they kissed. Liam pulled his head back and looked at her.\n\n\"Mags..are you su....OH!\" His words were cut off by a moan as his sister pulled his hips with her legs, driving his hard cock into her virgin pussy.\n\n\"OH!!!\" Maggie cried out as she felt his cock stretch her. \"OH!\"\n\n\"Are you OK?\" He asked.\n\n\"Yeah, just....just stay there.\" She said, breathing deep and adjusting to this new sensation, a cock inside of her for the first time. She felt so stretched she thought she might tear. Her mind felt like a whirlwind. 'I'm not a virgin anymore.' She thought 'Someone is INSIDE me. MY BROTHER IS INSIDE ME!' She took a deep breath and kissed her brother again. She felt his cock twitch inside of her, reminding her of her arousal. She suddenly needed his cock deeper. She wanted to feel him fill her up as completely as he could, fill her whole being. The initial discomfort was still there, but became a fading background noise in the symphony of pleasure and emotion that was washing over her. She put her hands on his ass and pushed gently.\n\n\"A little more.\" She whispered. \"Just go slow.\"\n\nHe did, slowly sliding his cock inside her, inch by inch. Warmth started spreading throughout her body as he filled her, starting at the connection of their sexes and slowly spreading to her chest, her neck, her face, the tips of her fingers and toes. She thought she could feel her hair tingling. She gasped and shuddered as she felt his hips press against hers, her brother's cock now all the way inside of her.\n\n\"Oh God Maggie, you feel so good.\"\n\n\"Oh Liam, this is incredible. Oh god, I never knew...I never knew...I never....mmmmmmmm\" She groaned as she felt him pulling out slowly, her body desperate to feel his fullness, clenching and gripping futilely to keep him inside of her. She felt the entrance to her pussy, to herself, start to stretch as he pulled his cockhead against it, and she felt desperation flood through her, unable to handle not having him inside her, before he pushed back in. She cried out in ecstasy as her brother's cock stretched and filled her again, pushing deep inside her in one slow, strong stroke.\n\n\"Ohhhhhhh.\" She moaned. \"Ohhhhh Liam. Oh God, oh fuck me.\"\n\nShe relinquished control, allowing him to slide his cock in and out of her, the feeling of being at his mercy only enhancing her arousal. She rolled her head back and forth as he fucked her, her arms over her head, barely able to catch her breath. She felt her brother's hand on her breasts again, squeezing them and gently pinching her nipples, sending electric shocks between her nipples and her pussy, causing the feeling of warmth to grow even more. Starting from her pussy, she felt every cell in her body start charging up, pushing out her rational mind and leaving a being of pure sensation, pure pleasure.\n\n\"Oh Liam, oh God, yes. oh OH OH! LIAM! OH YES! OHLIAMOHYES OHHHHHHHHHH\" The world seemed to explode in pink light, every part of her body driven to overload by pure ecstasy, spasming and twitching. She clutched at her brother's back as he drove into her, each stroke of his cock pushing her orgasm higher. Her climax peaked, forcing the breath from her as every muscle fiber in her tensed, then dipped briefly before another orgasm, impossibly more intense crashed upon her. She was beyond sense, feeling as if energy from another world poured through her, turning her into a being of pure pleasure.\n\n\"Oh Mags, I'm close. Oh god I'm gonna...\" Liam's moans brought her back to the world.\n\nShe wrapped her legs tightly around him, somehow forcing him deeper inside her. \"Yes. Yes. Cum in me. Yes, oh God yes.\" Her pussy, squeezing tight against her brother's cock, felt him swell as his orgasm started. 'That is the best possible feeling in the world,' she thought as her brother swelled and then exploded. She felt him pumping inside her THUMP, THUMP, THUMP as his cock shot spurt after spurt of cum into his sister's pussy. She came again, not as intense this time but still overwhelming, as she felt him twitch and pulse inside of her.\n\nThey lay like that, Liam on top of her, both of them struggling to catch their breath, for a long time. He pulled his slowly softening cock out of her, a wet blob of his cum plopping out and running down her ass crack to the bed, and the high of her orgasms was just barely enough to overcome her disappointment at the empty feeling of him not being inside her.\n\nThey lay there, side by side, staring into each other's eyes until they fell asleep.\n\n----------------------------------------\n\nAfter that, we dropped all pretense of having any secrets. We all openly kissed, touched and cuddled as much as we wanted. It was amazing.\n\nMaggie and Liam were essentially joined at the hip from then on, constantly holding each other or kissing, mostly kissing. We all started wearing less clothing around each other too. Liam and I almost always wearing nothing but our boxer shorts, the girls lounging around in just t-shirts, bras and panties or bikinis. Lissy watched our cousins with growing lust, constantly telling them how hot they were. She would stare as they made out on the couch, her hands idly stroking her pussy under her t-shirt or squeezing her breasts, before grabbing me or Lilia or both and pulling us into the bedroom. Needless to say, Melissa gave up on being quiet.\n\nEventually we gave up on privacy as well.\n\nWe were all sitting in the living room, working our way through our third bottle of wine and watching a movie. Well... Lilia and I were watching a movie and Melissa was watching Liam and Maggie as they kissed and fondled each other on the loveseat, oblivious to what was on the TV. Melissa had one hand wrapped around my sister's chest, slowly caressing her tit, the other down her own panties.\n\n\"Are you guys seeing this?\" She whispered.\n\nI turned to look at my cousins. They were certainly being more intimate than they ever had before in front of us. Maggie had her hand down Liam's boxers, pumping up and down his shaft. The tip of his cock was poking out the top of his underwear and we could see Maggie working her fist over it as she stroked him. Liam had pulled Maggie's shirt up to her neck, exposing her nude body underneath; she wasn't wearing any underwear. Liam was sucking on her nipples as she ground her crotch against his thigh while jerking him off.\n\n\"That is really, really hot.\" Lilia whispered to us, her hand wandering to my crotch and squeezing my own growing cock as she watched.\n\nLiam suddenly noticed us staring.\n\n\"We've got an audience.\" He said to his sister. \"Maybe we should go to bed?\"\n\n\"Let them watch if they want.\" She breathed, kissing him. \"I want them to watch us make love.\"\n\nAt that she got on her knees between her brother's legs, pulling his boxers down and freeing his cock. Lissy gasped at the sight. Liam was at least ten inches long and THICK. His sister wrapped her lips around his massive head and started bobbing up down, quickly coating his cock with her saliva.\n\nMy sister, meanwhile, had undone the fly of my shorts and pulled my cock out. She lowered her head to my lap while stroking me, her eyes glued to the scene of her cousin on her knees, sucking her brother's cock. Lissy pulled off her t-shirt and panties, then spread her legs and plunged her fingers into her pussy while she watched Liam and Maggie. My sister looked over at her girlfriend masturbating next to us, then grabbed me and positioned me so my hips were just barely on the edge of the couch, my head leaned back against the back of the couch. She moved over to Lissy and kissed her, replacing the dark hair girl's hand with her own. Lissy moaned into my sister's mouth while they kissed. Lilia then guided Lissy up the couch, pushing her to straddle my face. By now, Maggie had gotten up and straddled her brother, lowering herself onto his giant cock. I watched as she started to ride him, his dick already slick and creamy with her juices. My view was cut off when Melissa lowered her sopping pussy to my eager mouth. A moment later, I felt my sister's hand grasp my cock and guide me into her own hot tunnel as she started riding me.\n\nMaggie spun around on her brother while she rode him. She met my sister's gaze, then Lissy's, then Lilia's again. Watching the three of us fuck while she fucked her brother drove her arousal even further. She slammed herself up and down on his cock, her tits bouncing even as she reached up to squeeze them and pinch her own nipples. Lilia brought her hand down to her clit and started rubbing it as she plunged herself up and down on my cock. Lissy worked her hips back and forth as my tongue flicked on her clit and licked along her pussy lips.\n\n\"Oh FUUUUUUUUUCK\" Maggie screamed, collapsing back on her brother as he continued to pump into her through her orgasm.\n\n\"Fuck, Jimmy, YES! RIGHT THERE! OH FUCK!! LICK ME!! OH FUCK!!! JIMMY YESS!!!\" Lissy screamed out as her own orgasm hit her.\n\n\"Oh GOD!\" Maggie screamed again. Liam was now holding her by her hips and pounding his huge cock into her like a jackhammer. I felt Lilia's pussy start to clench as her own orgasm approached.\n\n\"Jimmy, oh, Jimmy, oh, HNNNH.\" She grunted, her body tensing as her pussy gripped me like a vice.\n\n\"Oh fuck. Mags, I'm cumming.\" Liam cried out.\n\n\"Oh fuck. Yes. Cum in me Liam. Cum in me. Cum in your sister. Oh fuck. Cum in me. Yesfuckcumyes. YES!!\" Maggie called out as Jimmy shot his load into her. She kept riding him as he filled her pussy, his cum leaking out of her and dripping down his balls.\n\nI couldn't take any more. My balls tightened as I approached the point of no return.\n\n\"Lilia I'm gonna to cum.\"\n\n\"Mmmmmm. Yes. Jimmy. Fuck, oh fuck, oh fuck me.\"\n\n\"OH FUUUUUUUUCK.\" I moaned as I came in my sister. Lilia kept riding me, though slowly now, her pussy walls clenching and squeezing, trying to get every last drop of my cum out.\n\n\"Oh my God, you guys are so hot.\" Maggie said. \"This is going to be a great couple of weeks.\"\n\n------------------------------------------\n\nNow that the five of us had gotten past the taboo of having sex in front of each other, it was like the flood gates opened. People were having sex in our house pretty much at all times. Almost every day I would come home to find either Lilia and Melissa, or Liam and Maggie, or both couples fucking in the living room. The doors to our bedrooms were always open and usually you could hear the sounds of sex coming from them: wet slaps, muffled gurgles and gags, moans and screams. Sometimes, one or more of us would sit and watch the other couple as they made love, usually this resulted in the watcher or watchers grabbing a partner (or partners in my case) and start fucking too.\n\nUnfortunately, though, all good things must come to an end. The twins were due to go home a week before they had to go back to school, their second year of college. On our last weekend together, we decided that we were going to have a big celebration to mark the end of an awesome summer. Lilia, Melissa and I took off of work that Friday and we stocked up on steaks, burgers and chicken for the grill. The drinking started early that Friday, just as Liam and I fired up the grill to start cooking lunch. The girls all spent the day in their skimpiest bikinis and Liam and I were wearing nothing but our swim trunks. Melissa helped make it feel like a party atmosphere by pumping a steady mix of dance tunes through our wireless speaker. The whole day we ate, drank and danced.\n\nBy the time we moved to the living after dinner, we were all fairly drunk and in a good mood. All five of us plopped down on our big couch.\n\n\"Guys, this has been the absolute best summer ever. We can't thank you enough for letting us stay here!\" Liam said.\n\n\"It's been really great having you guys.\" I said.\n\n\"A toast!!\" Maggie said \"To the best summer and the best family ever!!\"\n\nWe all raised our shot glasses and drank.\n\n\"I think the best part of the summer has been being around another couple and not having to hide.\" Lilia said \"Even when we're out on the town here we're always being careful, even though people don't really know who we are.\"\n\n\"Wrong Lil.\" Melissa said. \"The best part has been watching these two hotties getting together. I mean, being in a house with two pairs of siblings fucking? It's like a dream come true!\"\n\nWe all laughed.\n\n\"Well you guys certainly helped with that.\" Maggie said. \"I'd fantasized about my brother before but I'd never dreamed that I'd actually get the chance to be with him.\"\n\nMaggie was snuggled up tight to her brother and was casually running her hand up and down his thigh.\n\n\"It had never occurred to me that I could actually try to make a move until I saw Lilia and Jimmy together.\" She continued. \"I mean, walking in and seeing you two, knowing that you guys were brother and sister...and I could see just how much you guys were enjoying it....oh wow I'm getting myself turned on!\"\n\nWe all laughed again, but Maggie didn't move her hand from Liam's leg. If anything, she started moving it a little higher. My sister wrapped her arm around Melissa who was sitting next to Maggie, and started casually caressing the top of her chest.\n\n\"Want to talk about getting turned on? When I saw you and Liam on that first night. Holy shit. Seeing you sucking on that huge cock turned my pussy into Niagara fucking Falls.\" Melissa said.\n\n\"No way.\" Maggie replied. \"The hottest thing is definitely watching you and Lilia and Jimmy together. ESPECIALLY when you play with Lilia's ass.\"\n\n\"I can confirm.\" Lilia chimed in. \"Lissy playing with my ass is the hottest thing.\"\n\nMore laughter from everyone.\n\n\"I could watch any of you guys together all night.\" Liam said. \"It's like living in the hottest porn movie ever.\"\n\n\"Yeah it is.\" Melissa said. She reached over and put her hand on Maggie's thigh. Maggie meanwhile had started openly stroking Liam's thickening cock through his shorts. \"Especially living with two hung studs like you and Jimmy. Did you know your brother had a giant package before you started fucking him?\"\n\nMaggie giggled. \"Not really. I'd seen him in swim trunks and stuff so I knew he was big but I didn't know how big. I didn't even know he was THAT big until you told me about it. He's my first.\"\n\n\"Well he is definitely much bigger than most, and I've experienced my fair share of cocks. Melissa said.\n\n\"That's no surprise.\" Lilia teased.\n\nMelissa turned with a faux hurt face and lightly slapped Lilia on the leg. \"Bitch.\" She said before smiling and giving her girlfriend a quick kiss. Her quick kiss turned into a much longer kiss before Lilia pulled her face away, panting.\n\n\"Jimmy's cock is bigger than most that I've been with but it's more about the FEEL. His cock feels like it was made especially for me.\" Lilia said.\n\n\"And he also knows how to use it.\" Melissa chimed in.\n\n\"Oh yeah.\"\n\nLiam had slid his hand under Maggie's bikini top and was massaging her breast as she stroked his cock through his trunks. Lilia and started doing the same to Melissa.\n\n\"You guys keep talking about us as if we're the hot ones. You three are definitely the hot ones in the house.\" I said.\n\n\"Yeah. We're fucking sexy as hell.\" Melissa said, drawing chuckles.\n\n\"That's one of the many things I love about being in a relationship with these two.\" Lilia said. \"I mean, it's like the best of both worlds. Not only do I get my super-hot brother, but I get this vixen too.\" Lilia said kissing Melissa again.\n\n\"You guys are both super-hot. I'm so jealous of both your bodies. But I think I'm most jealous of your tits Lissy.\" Maggie said.\n\n\"They're yours anytime you want them.\" Lissy said and suddenly grabbed the red-haired girl's hands and put them on her breasts.\n\nLilia and Maggie both screamed with delight, but Maggie kept her hands on Lissy's large tits.\n\n\"You know; this is the first time I've ever felt another girl's boobs.\" She said.\n\n\"Well you can do that as long as you like.\" Melissa purred, leaning back against Lilia.\n\n\"God they're so soft, but firm at the same time. Does that make any sense?\" Maggie asked.\n\n\"Yeah. I know exactly what you mean.\" Lilia said. \"You should feel how she kisses.\"\n\n\"Ooooooooh. Great idea Lil.\" Melissa said and then leaned forward until her lips were almost touching Maggie's.\n\nIt seemed as if every sound in the world was sucked away into a black hole, except for Maggie's quick breathing.\n\n\"Have you ever kissed a girl before?\" Melissa whispered, keeping her lips mere millimeters from my cousins. Maggie shook her head no. \"Ready?\" Maggie nodded yes.\n\nMelissa closed the tiny distance and met Maggie's mouth with her own. She kissed the red-haired girl gently at first, then slipped her tongue out, parting Maggie's lips and drawing her deeper. Maggie reacted eagerly, running her own tongue against Lissy's lips and then pressing it into her mouth. Liam, Lilia and I sat, transfixed by the sight, the room silent except for the wet sucking sound as they kissed. Melissa brought her hand up to Maggie's breast, pushing up her top and revealing her tit. She started massaging the freed breast and pinching her nipple. Maggie moaned into Melissa's mouth and started gyrating her hips. Finally, after what felt like an eternity, Melissa broke their kiss, leaving Maggie nearly breathless.\n\n\"Wow. You weren't kidding Lil. That was great.\" Maggie said.\n\n\"OK. I'm making an executive decision.\" Melissa announced. \"Since this is our last weekend together, we're going to spend it in a three-day drunken orgy. I really need to fuck all four of you guys.\"\n\n\"OK\" Liam and I said at the same time.\n\n\"Sounds good to me.\" Lilia said, her eyes hungry with lust. \"Mags?\"\n\nMaggie looked down, silent. She then jumped onto Melissa, wrapping her arms around the curvy girl and kissing her deeply. Melissa fell back onto Lilia, who fell back onto me as Maggie and Lissy started moving their hands all over each other's bodies. Liam leaned over and started rubbing his sister's pussy through her bikini bottoms, making the redhead moan into my girlfriend's mouth. Maggie brought her hand down and started rubbing Melissa's pussy, who let out her own moans. Lilia reached around and started running her hands up and down Maggie's back and sides. Maggie started kissing Melissa's neck then her chest, then her tits. Lissy pulled off her bikini top, letting her full breasts tumble out. My cousin admired the beautiful sight of Melissa's boobs for a second, then took the left one in her mouth and started sucking the nipple.\n\n\"Mmmmmmmm.\" Melissa let out a hum of approval.\n\nIn the meantime, Liam had pulled his sister's bottoms down, and started working his fingers in and out of her pussy. At the same time, Lilia had wiggled out from under the other two girls onto my lap, where she quickly undressed then pulled my shorts off.",
        "\"Get your cock in me.\" My sister breathed before lowering herself onto my hard shaft.\n\nI could feel Lissy's hair between my legs as my cousin continued kissing and sucking her breasts. Maggie pulled Lissy's bikini bottom to the side and started playing with her clit.\n\n\"Oh yeah.\" Lissy said \"Press harder. Mmmmmmm.\"\n\nMaggie moaned as her brother finger-fucked her, then started kissing her way down Melissa's stomach. She kept kissing her way down to Lissy's snatch.\n\n\"Make sure you tell me if you want me to do something different.\" She said, looking up at Lissy.\n\n\"Oh, I'll make sure you do it right.\" Lissy said before Maggie lowered her mouth to her waiting clit.\n\n\"Ohhhhhhh God, YES. Oh suck my clit.\"\n\nMy sister was so wet, I could feel her juices leaking down onto my balls as she rode me. She leaned forward to kiss me.\n\n\"God this is so fucking hot.\" She whispered as she worked herself up and down my cock.\n\nI saw Liam pull his shorts down and position himself behind his sister, lining up his giant cock with his sister's pussy, before slowly sliding in.\n\n\"OH!!\" Maggie yelled out in surprise from between Lissy's legs. \"Oh fuck!!\"\n\nLiam kept pushing his cock into her, bottoming out and holding himself as deep as he could go.\n\n\"FUUUUUUUUUUCK!\" Maggie cried, before Lissy grabbed her by the hair.\n\n\"No one said you could stop.\" Melissa hissed down to my cousin, then pushed her face back to her clit.\n\nMaggie resumed licking as Liam started slowly pumping in and out of her.\n\n\"Uhnh, uhnh, uhnh.\" Maggie grunted into Lissy's cunt.\n\n\"Put your fingers in me.\" Melissa instructed Mags.\n\nMaggie did, working first one finger, then two into Lissy's waiting hole as she licked her.\n\n\"Oooooooh, yes. You like licking my cunt while your brother fucks you?\"\n\n\"Uh huh.\"\n\n\"Are you gonna cum on your brother's cock while you lick me?\"\n\n\"Uh huh.\"\n\n\"Mmmmmmh. Yeah. I want to see you cum on your brother's cock. You gotta make me cum first. You don't get to cum until I do. Oh fuck.\"\n\nLilia kept riding me, occasionally looking behind her at her two cousins and her girlfriend fucking next to us.\n\n\"Oh Mags. Yes. Right there. Oh work your fingers right there. Oh don't stop licking. Oh fuck, oh yes.\" Lissy said. I could feel her hair whipping back and forth between my legs as she rolled her head back and forth.\n\n\"Mmmmmmm. Yes. Don't stop. Oh god, I'm gonna cum. Oh fuck Mags. Oh fuck yeah! Oh FUCKOHFUCKOHFUCKOHFUUUUUUCK!!\" Lissy chanted as she came.\n\nLissy clamped her thighs around Maggie's head and bucked through her orgasm.\n\n\"Oh fuck. Jimmy, I'm cumming.\" Lilia said suddenly, her pussy gripping my cock tightly as she spasmed on top of me. \"Hmmmmmm. Hmmmmmm. Hmmmmmmm.\" She cried, digging her nails into my back.\n\nLissy climbed off the couch, her legs shaky from her orgasm. Liam continued to pound into his sister. Melissa leaned down and grabbed Maggie by the hair again.\n\n\"Ready to get spit roasted?\" She said, pulled Mags' head towards where my cock was still thrusting into my sister.\n\n\"Climb off Lil. Your cousin needs your brother's cock.\" Lissy said.\n\nLilia climbed off, nearly collapsing onto the floor and Maggie reached out and grabbed my cock, stroking up and down the shaft as her brother fucked her from behind. She started tentatively licking the head and shaft, moaning as Liam kept drilling her. I leaned my head back as she lowered her mouth onto me, taking about half my cock in.\n\n\"Isn't that one of the hottest things you've ever seen Lil?\" Melissa asked\n\n\"Oh yeah. We all need a turn between those two.\" My sister said.\n\nMaggie was moaning on my dick, her brother's thrusts pushing my cock deeper into her mouth.\n\n\"Oh God, Mags I'm gonna cum.\" Liam cried out. \"Oh yeah, oh yeah, OHHHHHHH.\"\n\nLiam kept thrusting as he came inside his sister. Melissa hurried to get her face under Maggie's pussy and started licking her clit as Liam's cum leaked out into Lissy's mouth.\n\n\"OH MY GOD!!!\" Maggie pulled her mouth off of my cock and started stroking me. \"OH GOD LIAM DON'T STOP!!!\"\n\nLiam kept fucking his sister and Melissa kept licking her clit. Maggie was furiously jerking me off and I felt my own orgasm coming.\n\n\"OH!! RIGHT THERE!! OHHHHH!!! OHHHHH!!!! LIAMMMMMMMM!!!!!\" Maggie bucked and writhed in ecstasy as her climax hit her. Unable to help myself, I suddenly started cumming. My first spurt landed on my cousin's cheek, just next to her nose. The next hit her eyebrow and would have dripped into her eye if she hadn't already had them closed from cumming. I spurted more, four or five times onto her lips and chin and into her mouth as she moaned through her orgasm.\n\nLiam slowed and then pulled out, causing a huge load of cum to drip out of his sister's pussy into Lissy's eager mouth.\n\n\"Mmmmmmmmmm\" Lissy moaned as she licked up every drop of Liam's cum from his sister's pussy.\n\nLilia meanwhile had moved over and started kissing Maggie and licking the cum off her face.\n\n\"Holy shit.\" Liam whispered when he saw my sister and Melissa start kissing and swapping our cum back and forth. Lissy held Lilia's face and then moved her own mouth above her, letting the huge load of Liam's and my cum slowly drip into my sister's mouth. Lilia then moved to Maggie and positioned herself to do the same thing. Liam and I watched in awe as my sister spit our combined cumshot into his sister's mouth.\n\n\"Now swallow. Swallow your cousin's and your brother's cum.\" Melissa commanded.\n\nMaggie did, opening her mouth and sticking out her tongue to show us.\n\n\"Good girl.\" Lissy said and then gave her a deep kiss. \"OK, I desperately want some cock, so Lil you get your cousin ready, I'll work on Jimmy.\"\n\nMy sister and Lissy both dropped to their knees, Lilia in front of Liam and Lissy in front of me. Both of us were only at about half mast having just shot our loads at either end of Liam's sister. I couldn't take my eyes off of my sister's face as she wrapped her lips around our cousin's giant cock. Not only was it really long but it had girth. I watched as Lilia's lips stretched to fit as much of his dick into her mouth as she could. She grabbed his shaft and started stroking him into her mouth, first with one hand, then with two when she realized she couldn't fit her fingers all the way around. Lissy meanwhile, started licking my cock from my balls all the way up to the tip, long, slow, wet strokes like she knew I liked, briefly taking the head into her mouth when she got to the top before starting again. Once I was almost all the way hard, she plunged her whole mouth onto me, taking my length into her throat.\n\nMaggie sat between us, one hand working her cunt, the other playing with her tits and squeezing her nipples. She shifted her gaze from watching her brother get blown by their cousin, to her cousin getting blown by his girlfriend. Lissy pulled herself off of me.\n\n\"He ready yet Lil? I don't know if I can wait anymore.\" She said.\n\n\"I dunno.\" Lilia looked up at her cousin \"Liam, you ready to fuck my girlfriend?\"\n\nLiam quickly nodded, his eyes wide.\n\n\"'Scuse us Mags.\" Lissy said as she moved in between Liam and I on all fours.\n\nMelissa stroked and occasionally licked my cock while Lilia lined up Liam to enter our girlfriend. My sister rubbed the tip of Liam's dick up and down Lissy's dripping wet slit before positioning the head at the entrance.\n\n\"Ohhhhhhhhhh fuuuuuuuuuuuuuck.\" Melissa groaned as Liam slowly slid his cock into her. \"Fuuuuuuuuuuuuuck that's big.\"\n\nMaggie and Lilia were on their knees on the floor, their faces right next to where Liam was pushing his huge cock into Melissa's tight snatch.\n\n\"Ooooooh. Hold it right there.\" Melissa said. \"Give me a second to adjust.\"\n\nLiam held still while Melissa breathed deep, her hand still stroking up and down my shaft. She turned to look at him. \"Ok, keep going.\"\n\nLiam pushed his hips forward. It seemed to take forever for the full length of his cock to enter Melissa. Finally, his hips were pressed tightly against her ass. Maggie let out a little whimper.\n\n\"Mmmmmmmmmm.\" Lissy moaned, \"Stay there. Don't move.\" She let out a couple more deep breaths. \"OK, now fuck me.\"\n\nLilia moaned herself as Liam started to slowly pull his cock out of Lissy, her pussy lips clinging tight to his shaft as he slid out. He pulled out until just the very tip was in, then pushed himself back in, a little faster this time.\n\n\"OH FUCK. YESS!!\" Melissa said. Liam bottomed out in her again, then pulled back out, each stroke going a little faster and a little harder. I grabbed Lissy's hair and pushed her mouth down onto my cock, forcing her down to deep throat me. She let out gagged moans as Liam and I filled her from both ends. I pulled her head back by her hair, hard, and made her look up at me.\n\n\"You like getting fucked while you suck my cock?\"\n\n\"Yes. Oh yes.\"\n\n\"Does it make you feel like a little whore?\"\n\n\"Yes, I'm your whore, I'm your slut...\"\n\n\"Do you want us to fill you with our cum?\"\n\n\"Oh fuck yes!! I want your cum in me! Oh cum in me!\"\n\n\"Take it you slut.\" I commanded, shoving her face back down onto my cock as she gagged, Liam's thrusts forcing my cock deeper and deeper into her throat. I held her hair in a death grip and started pumping my cock in and out of her throat.\n\n\"Slap her ass.\" I whispered to Liam. \"She likes it rough.\"\n\nLiam hesitantly gave her a light smack on her ass cheek.\n\n\"Mmmmmmhhh!!!\" She gagged around my cock. I pull myself out of her mouth.\n\n\"Oh yes!\" She cried \"Harder!\"\n\nSMACK. Liam brought his hand down a little harder.\n\n\"HARDER!\"\n\nSMACK!!! Liam smacked her ass so hard he left a hand print.\n\n\"OH YES!! FUCK ME!!! FUCK MMMMPH!!!\" Lissy was cut off as I forced my cock back into her throat.\n\nLiam was plowing into her as hard as he could. His blows as he smacked her ass sounded like whip cracks, leaving the porcelain white of her butt cheeks a shocking, raw red. I felt Lissy, lightly tap me twice on my ass, her signal to let her up.\n\n\"OH FUCK!!! FUCK ME!!! YES FUCK ME!! OH FUCK YEAH FUCK ME!!!! FUUUUUUCK!!!!\" Melissa screamed as she was racked by her orgasm.\n\nLiam didn't stop. He was slamming his cock into her like a jackhammer, sweat starting to drip off him onto her ass, red from his spanking.\n\n\"OH GOD!! YES!!! OH FUCKING YES!!!!\" Melissa screamed through her second climax, her body bucking uncontrollably. She grabbed onto me and pulled forward, her legs feebly trying to push Liam back away from her. He got the hint and pulled out, leaving her twitching and shaking in my lap.\n\n\"Oh my God that was so hot!\" Maggie whispered. She turned to Lilia. \"Do you mind if Jimmy and I....?\"\n\n\"As long as you don't mind if I fuck Liam.\" Lilia answered.\n\nMaggie didn't bother answering, jumping up onto the couch and straddling me so quickly it looked like a CGI effect. Lilia climbed onto Liam. Maggie was breathing heavy. She leaned forward and kissed me, reaching down and taking my cock in her hand. She stroked me while we kissed, then started rubbing the head of my cock up and down, pressing it hard against her clit.\n\n\"Ohhhh.\" She breathed, her whole body shaking.\n\n\"Are you OK?\" I asked her.\n\n\"Yeah. I'm just a little nervous.\" She said. \"You're only my second..\"\n\n\"We don't have to do this if you don't want to.\"\n\n\"No I do. I REALLY do.\" She said.\n\nShe positioned my cock at the entrance to her pussy, then closed her eyes and slowly lowered herself onto me.\n\n\"Ohhhhhhhhhhh.\" She moaned out.\n\nShe took more and more of my cock into her until she had bottomed out, then slowly worked herself back up.\n\n\"This feels amazing.\" She said.\n\nI looked over at my sister, who had just started easing our cousin's cock into her.\n\n\"Oh fuck.\" Lilia said.\n\nI could see Lilia's pussy stretching to take all of Liam's cock. She went slow, only taking an inch or two at a time then stopping to let her stretched cunt adjust. Maggie, meanwhile had started to pick up her pace, sliding herself up and down my shaft, panting as she rode me. She took my face in her hands and leaned forward to kiss me.\n\n\"Oh my God Jimmy, you're hitting exactly the right spot.\" She whispered.\n\nI started thrusting my hips up in time to her motions, timing myself so that our rhythms matched. \n\n\"Oh yes. God yes!!\" Maggie cried out. I could feel her wetness dripping down onto my balls.\n\nI reached up and started playing with her tits as we fucked.\n\n\"Oh Jimmy. Oh right there, oh right there. Yes. Don't stop, don'tstopRIGHTTHEREYESYESYESYES!!\" My cousin's body tensed, her pussy squeezing my cock in fluttering bursts. I kept thrusting up into her, feeling as she spasmed on me. Her eyes flew open and her jaw dropped as another orgasm hit her.\n\n\"Hnnh!! Hnnh!! Hnnh! OH!\" She grunted, breathlessly. With every part of her body, she gripped me tighter, her fingers digging into my shoulder, her legs trying to crush my hips between them, her pussy tightening to a vacuum seal around my cock.\n\n\"Stop!\" She panted, her body quaking uncontrollably on top of me. \"Uhnh, uhnh, uhnh.\"\n\nShe lifted herself off of me and collapsed to the side, twitching. I laid down next to her and started caressing her skin, causing little tremors and shakes wherever my hand rubbed.\n\n'Oh God Jimmy, that was incredible.\"\n\nShe kissed me.\n\n\"I need some water.\" She said and stood on shaky legs to head for the kitchen. I looked across the couch to see my sister slowly riding our cousin, our girlfriend on her knees behind her, licking her asshole.\n\nLissy pushed a finger into Lilia's ass, slowly working it in and out.\n\n\"Oh fuck!\" My sister cried out.\n\n\"Can you take another one?\" Lissy asked.\n\nLilia nodded. \"Yeah I think so.\"\n\nLissy worked another finger in, as my sister and my cousin moaned.\n\n\"God, I can feel her fingers inside you.\" Liam groaned.\n\n\"Do you like it?\" Lilia asked.\n\n\"Yeah, it's like getting jerked off while fucking you.\" He said, causing the three of them to giggle.\n\n\"Jimmy, can you go and get the lube?\" Lilia asked. I went to fetch and was back a moment later.\n\nLiam was thrusting hard up into my sister while Lissy was finger fucking her ass. Lilia was moaning and panting in pleasure. She turned to me.\n\n\"I think I want something more than a finger in me.\" She said.\n\nLissy gasped, her face full of excitement.\n\n\"Are you sure?\" I asked.\n\n\"I think so. I feel pretty full but I also want more.\" She said. \"Are you OK with Jimmy being in my ass while you're fucking me, Liam?\"\n\nLiam just nodded, his face shocked.\n\n\"OH MY GOD!! LET'S DO THIS!!\" Lissy cried. She took the lube and worked a generous amount onto her fingers and into Lilia's ass. She took a minute or two to work the lube in and out of my sister's butt, making sure that it was nice and slick. She then took my cock in her hands and started working more lube onto it. She slowly slid her fingers out of my sister's ass, eliciting a whimpering moan from her, then lined the tip of my cock up with Lilia's clenching sphincter.\n\n\"Are you ready?\" I asked.\n\n\"Yes. Fill all my holes.\" She said.\n\nI pushed forward with my cock. The tightness was unbelievable. Her asshole resisted me until finally, I felt her stretch around my cockhead as I slid into her.\n\n\"HmmmMMMMmmmmMM.\" My sister moaned.\n\nI didn't move, my cock just barely in her ass. She was unbelievably tight; I could feel her stretched around the two cocks inside of her holes. I could also feel the firm pressure of Liam's cock on mine through the thin wall between her pussy and ass.\n\n\"GOD!!\" Lilia cried. \"FUCK!! OH IT'S FUCKING TIGHT!!\"\n\n\"Are you ok?\" I asked.\n\n\"Yeah. Just stay still a minute.\"\n\nLiam and I didn't move. Lilia was between us, panting, impaled on our rods. I could feel her asshole twitching around my cock, Liam's cock twitching and pulsing in her pussy.\n\n\"Ok. Go a little more. Stop if I tell you.\"\n\nI eased my cock a little further into my sister's ass as she was double penetrated for the first time. Every couple of inches she would tell me to stay still, before having me go on. Inch by inch I filled her ass with my cock.\n\n\"You OK Lil?\" Lissy asked\n\n\"Yeah. It's really tight but it feels so good. I feel so full.\"\n\n\"Well you're sure full of cock.\" Lissy said, and everyone laughed.\n\n\"Let me move.\" Lilia said and started trying to ride the two of us. She let out a gasp as both of her holes slid up on our cocks before sliding back down.\n\n\"Never mind. You guys move.\"\n\nI felt Liam's cock slide against mine inside my sister as I started moving in and out. I started to push in, but felt Liam pop out of her.\n\n\"OH!\" Lilia cried out.\n\n\"Sorry.\" Liam said.\n\n\"It's ok, just get back inside me.\" After a little struggle, I felt Liam slide back into my sister's pussy.\n\n\"FUUUUUUUUUUUUCK.\" Lilia cried.\n\nLiam and I started moving again. It took a minute for us to find a rhythm, but we soon found one where one would thrust in as the other pulled out.\n\n\"OH GOD!! I'M CUMMING!!!\" Lilia screamed and I felt her ass get impossibly tighter.\n\nLiam and I picked up our pace, thrusting in and out of her faster and harder.\n\n\"OH FUCK!!!\" Lilia screamed \"GOD!! FUCK!! MMMMMMH!!\"\n\nMy sister collapsed onto our cousin as he and I fucked her. Lilia was barely able to breathe through her moans which were broken occasionally by screamed exclamations and unintelligible grunts. I could feel her insides constantly spasming as Liam and I filled her holes with our cocks. My balls tightened up as I felt my orgasm approaching, the friction from Liam's cock rubbing against mine only speeding it's arrival.\n\n\"Lil, I'm going to cum.\"\n\n\"Hnnnh, hnnnnh, hnnnnnh, FUCK! OH FUCK!\" she replied\n\nIt felt like my orgasm built up from my toes, every cell in my body crowding together to push out the massive load of cum that I shot into my sister's ass while our cousin fucked her pussy.\n\n\"FUCK!!\" She screamed as I spurted rope after rope of cum into her bowels \"FUCK!!\"\n\nLilia twitched and shook between us, her insides gripping us tighter than I thought possible.\n\n\"Oh God. I'm cumming too.\" Liam called.\n\n\"YES!!\" Lilia screamed.\n\nI could feel Liam's cock pulse inside my sister as he filled her pussy with his seed. We both slowed our thrusts until we stopped, Lilia's body quaking between us.\n\n\"You OK?\" I asked her.\n\n\"I dunno\" She panted \"Can you die from too many orgasms?\"\n\n\"Apparently not.\" I chuckled.\n\n\"Too bad. Dying from a perma-gasm seems like the best way to go.\" She said.\n\n-----------------------------------------\n\nWe had just finished packing the last of the twin's stuff into the van. And sat down at the kitchen table to enjoy our pizza and beer.\n\n\"Are you sure you're OK Lilia?\" Aunt Moira asked. She had noticed my sister wincing as she sat down.\n\n\"Yeah. I guess that strain was a little worse than I thought at first.\" She said. \"It's OK though. Some aches and pains are worth it for a good workout.\"\n\nI took a big sip of beer to keep from laughing.\n\n\"I can't thank you guys enough for letting Liam and Maggie stay with you.\" Aunt Mo said.\n\nMelissa responded, \"They were the best houseguests ever. We would love for them to stay with us again.\"\n\n\"We couldn't do that to you guys.\" Aunt Mo said.\n\n\"It would be our pleasure.\" Lilia told her. \"When is your spring break guys?\"\n\n\"Really? It wouldn't be too much of an inconvenience?\"\n\n\"I can honestly say that having them over was one of the best experiences of my life.\" Lilia told her."
    ],
    "authorname": "WhoNeedsAUsername",
    "tags": [
        "brother",
        "sister",
        "cousin",
        "dp",
        "double penetration",
        "orgy",
        "lesbian",
        "threesome",
        "group"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/what-happens-with-cousins"
}