{
    "title": "Tears of the Fallen Ch. 23",
    "pages": [
        "Reasa had hurried back to the compound hours earlier, her thoughts in complete chaos. She hadn't been sure what had frightened her more, Kothari's obvious insanity or the words Michael had spoken to her on the phone. There had been no mistaking what she had to do, and yet, now the time had come she didn't want to do it.\n\nShe was in love with Liam Eriksson, and she couldn't deny that any longer. She also couldn't be with him, that simply wasn't an option. If she chose to ignore Michael's message then thousands of vampires would die. She'd caused enough damage as it was. She just couldn't be responsible for more deaths.\n\nIt had seemed a cruel twist of fate that Liam had been leaving his Alpha's house as she'd re-entered the compound. His expression had lit up at seeing her, and any last lingering thoughts of denial had melted away as she watched him. He was quite simply the most magnificent male she had ever seen. The compassionate, humble side to him, a true balance to the wonderful vampire she had glimpsed in his mind. He was a male worthy of loving, and now she had found him, she had to leave him.\n\nIf he'd found it odd in the least that she had wanted to spend so much time with him, he had never mentioned it. Instead, he had basked in her presence, showing her around the compound as he welcomed her to his home. Even the brief moment when Cassia and Pietro had pulled into the compound late afternoon hadn't dampened the bubbling happiness emanating from Liam.\n\nNo words had been spoken that she was aware of, though the vampire had studiously ignored her. Pietro had nodded in Liam's direction, her redheaded male inclining his head in acknowledgement. No doubt Liam had been thinking that this was a good sign, and that with time, they would be able to live in harmony within the pack. His thoughts couldn't have been further from the truth, though Reasa couldn't tell him that. He would never let her out of his sight if she did.\n\nNow she was lying beside him, listening to his deep breathing and knowing that a handful of hours from now he would wake to find her gone. A lone tear escaped and trickled down her cheek, her heart feeling as if it was about to split in two.\n\n\"Reasa?\" Liam murmured her name, and she couldn't resist twisting her body into his. Thick arms wrapped her securely to his chest, a thigh hooking around hers. \"Why aren't you sleeping?\" he asked sleepily, his eyes opening as he pulled her close.\n\n\"You snore,\" she answered, though it was a lie, but it brought a wry chuckle from the man beside her.\n\n\"Do not,\" he laughed, \"though if we're on that topic of nocturnal noises, you have this habit of making a little mewling sound every now and then.\"\n\nShe doubted that very much, but she smiled at his quick comeback. \"You're not very good at telling fibs, Liam. You wouldn't last long in Europe.\"\n\nIn answer, he rolled over until she was beneath him, supporting his weight on bent elbows. He was more fully awake now, and the gleam she could see in his eyes from the crescent moon's light told her he had other nocturnal activities in mind. She should stop this right now, and yet, he felt so good covering her body. She had an hour before she needed to make her move. That should be plenty of time.\n\n\"Just as well I have no plans to go to Europe,\" he quipped back, his body moving helplessly against hers as he let out a low groan. \"Tell me to stop now, Reasa, otherwise I have other plans that you may not approve of.\"\n\nIt would be that easy, of that she had no doubt. All she had to do was tell him to leave her alone and they would once more be lying platonically beside each other. She didn't want to though, so she wound her arms around his neck and pulled his head down to hers. \"I don't want you to stop, Liam.\"\n\nHis big frame tensed in surprise, and she could feel his eyes burning into hers. \"Reasa? Are you sure, because I can wait for however long you want. There is no rush to be together. I am willing to wait.\"\n\nShe uttered a resigned sigh, amusement lacing her voice. \"First you want to kiss me when I don't want you to and now when I tell you that I do, you decide to question me? Just kiss me, Liam Eriksson. I have a need that only you can assuage.\"\n\nIt was all he needed to hear, his head lowering the last few inches to hers. His lips brushed hers tentatively at first, a slow, lingering, gentle kiss so full of love it made the ache in her heart flare brighter. This beautiful male loved her with a passion so fierce it was staggering, and she was planning to leave him as soon as she could slip away.\n\nIt was wrong of her for wanting this moment with him, when she knew she couldn't give him what he so richly deserved. It was weak and selfish, but if she was going to die this night then she wanted to know what it was like to love with the man who had been fated to be hers since the moment they had both been born. \n\nReasa opened her mouth to him, feeling the ache of having denied them both for so long. Every night they had lain together she had fought her own desire, listening to him sleep until she was too exhausted to keep her eyes open. If only she hadn't been so foolish. They could have had nights like this so many times if she'd only let down her defences and allowed Liam into her heart where he belonged.\n\nHer kiss tasted of that knowledge, desperation creeping into her response as she arched her body into his. She asked him for more without words, but he kept his touch gentle, soothing her desperation with tenderness until she wanted to weep.\n\nLiam pulled his mouth from hers; tracing tiny kisses along her jaw and down her neck. \"Your skin feels like satin, so smooth and soft. I've dreamt of this for what feels like forever, Reasa, and your taste surpasses everything I've ever imagined.\"\n\nThey were the sweetest, most heartfelt words she had ever heard. They made tears gather in her eyes, which she swallowed back. No one had ever loved her with such conviction before. She didn't deserve to have Liam's love but she would take this moment and treasure it for however long she might still walk this world.\n\n\"Love me, Liam,\" she whispered, threading her hands in his auburn hair as he suckled at her neck sending liquid fire racing through her veins.\n\n\"I do, Thereasa,\" he groaned, his lips moving back to her mouth, the heat of passion in his next kiss. \"I love you with every fibre of my being,\" he breathed into her mouth. \"You are my heartbeat and my every breath. You are my soul mate.\"\n\nHow could any woman not love a male who was so tender and compassionate in one breath, and yet, who was darkness and danger hidden beneath his soul? This glorious male would take on the world to protect her even as his fingers trailed down her arm in a touch so tender it was a light as a feather. \n\nHe made her burn with a desire so hot she felt as if she would explode. He teased her with tenderness so sweet it tugged at the softer part of her soul that had only ever craved to be loved. She ached to feel him inside her, to know what it was like to be adored by her beautiful Liam Eriksson. He was intent on taking his time with her. She was intent on disabusing himself of that notion.\n\nWinding her legs around him, she pressed the very heart of her body against the hard, thick shaft that moved restlessly against her. She gasped out aloud and arched again, dragging a tortured groan from her lover.\n\n\"Reasa...stop that. I want this to be...Reasa!\"\n\n\"I want you, Liam, all of you. I will not break. You will not hurt me. You will love me as a woman and not as a china doll you're afraid to break.\"\n\nHe stilled and looked down at her, moving to the right so he could reach out and turn on the bedside lamp. He didn't need the additional light to see her, but was aware that she did. Chocolate brown eyes traced every feature on her face, desire brimming in their smoky depths. \"I want this to be perfect,\" he said softly, trembling fingers brushing down one cheek.\n\nShe smiled at him, grinding her lower body against his and thrilling at the way his jaw clenched and his nostrils flared. \"How could it not be?\" she asked, her need echoing in her voice. \"I want you, Liam. I need you. Please love me.\"\n\nHis answering smile was so lascivious she shivered with anticipation. Had she just tempted that delicious vampiric side to him or was she about to get his lusty wolf. Whichever it was she was sure she was about to be loved within an inch of her life.\n\n\"So be it, beautiful,\" he breathed out, a split second before she felt her nightgown tear and he tossed the remnants aside. Sitting up astride her body, he let his greedy gaze wander over her nakedness, his hands coming to cup her tight breasts. \"So beautiful,\" he murmured, leaning down to capture one hard peak in his mouth.\n\nReasa gasped as wet heat closed over her breast and Liam suckled hard. He tugged at her swollen peak sending tiny sparks of pure electricity shooting down her body to pool in the juncture of her thighs. She had never known her breasts to be this sensitive before, but then she hadn't had Liam laving them with such intent before. Each lick was pure heaven. Each suckle was another jolt of pure pleasure.\n\nShe moaned and writhed beneath him, her thighs aching to open to admit him, but they were clamped shut by his thick thighs sitting astride her. Liam teased her mercilessly, until she was sure she was making that mewling noise he'd mentioned earlier. His soft laughter told her he was thinking the same thing, and she would have given him a smack if he wasn't holding her wrists bound above her head with one hand.\n\n\"Tease,\" she groaned out, her heart thumping wildly as the ache between her legs grew unbearably.\n\n\"I can be,\" he breathed softly, releasing her breasts to slide lower. He trailed wet kisses over her quivering abdomen, continuing lower until he was kissing her mound and her inner thighs, deliberately staying away from where she wanted him most.\n\n\"Liam!\"\n\n\"So impatient,\" he laughed, hooking one of her thighs over his shoulder. One large hand pressed her other thigh apart, pinning her in place so she was open to his greedy gaze. \"Dear God, you're stunning,\" he whispered, his breath tickling against her flesh.\n\nReasa tried to press herself towards his mouth but he held her still, blowing gently against her heated flesh.\n\n\"So wet,\" he whispered. \"So perfect. All mine.\" His tongue rasped over her before he had fully finished speaking and it was so unexpected she cried out.\n\nOh crap, she was getting the wolf. There was no denying that; not from the way he nuzzled at her body, or the long, slow licks he subjected her to. He was taking his sweet time, tasting her essence, scything his tongue over every inch of her sex until she shuddered in a hot mess.\n\nHe flicked at her apex, teased the tiny bundle of nerves that set her blood on fire. She was panting, writhing, aching to feel him buried deep inside her. \"Liam...Liam...please.\"\n\nHis throaty growl was all the warning she got before he suckled against her clit, pushing her that last short distance to her climax. Reasa shattered in a million pieces, bliss making her body tremble as her heart tried to climb out of her chest. She cried out, moving against his wicked mouth, climaxing in mindless pleasure as he lapped against her body.\n\nIt was the most spellbindingly erotic climax she'd ever had and it took her a few long moments to come down from the heady bliss he'd engendered. When she opened her eyes, Liam was naked above her and she swallowed hard as she let her eyes travel down to the thick shaft standing proudly between his legs.\n\n\"Uhm...everything about you is oversized, I see,\" she managed to get out, a faint feeling of concern colouring her words. She was human now and he was huge with a capital H. Perhaps she should have let him take his time.\n\n\"The human body is an amazing thing,\" Liam sighed, his fingers moving to rub against her sex. \"It's very adaptable once you play it perfectly.\" Two thick fingers slid inside her, and she arched towards their wonderful intrusion. \"That's it, beautiful girl, enjoy my fingers. Just like that...\"\n\nLiam pressed his fingers in and out slowly, building up the pace as she closed her eyes and allowed her body to be guided by his. It felt so good feeling him inside her, preparing her for his cock, widening her so she would be ready to take all of him. \n\nThree fingers speared her and she gasped loudly. His thumb rubbed against her clit as his fingers picked up speed. She was mindless, helpless against him, moaning and writhing, as he loved her with his hands. Her breath caught as he pinched her clit hard, another climax rolling over her with such ferocity she was fighting to breathe. \n\n\"Reasa, sweet Reasa...look at me...\"\n\nHer eyes fluttered open to meet his, her breath trapped in her chest at the open adoration she saw in his gaze. \"I love you, Thereasa.\" His cock pressed against her opening, an inch sliding slowly inside.\n\n\"I love you, Liam,\" she gasped, arching up as he pressed down.\n\nHe eased deep within her body, sheathing himself in her wet heat and stilling his movements when they were joined. His hands ran up her arms to gather her wrists together above her head, his free hand gently stroking down her cheek to her collarbone. \"Mine,\" he growled softly, flecks of amber shining in his eyes.\n\nShe knew that he wanted to mate with her, and it hurt that she would have to deny him this. \"Too soon,\" she whispered, seeing the slight hint of hurt that he couldn't conceal fast enough. \"Liam...\"\n\n\"It's okay,\" he reassured her, a soft smile crossing his face as he leaned down for a slow kiss. \"One step at a time, my love. I can wait.\" He withdrew and slid back inside her, his thickness stretching her in delicious ways.\n\n\"Oh God,\" she moaned bucking her hips to meet him. \"It's so good...\"\n\nHe laughed and it was so full of male satisfaction she had to laugh too. Males were universal the world over, and couldn't help being smug when they loved their women to perfection. \"Don't let it go to your head,\" she teased stifling down another moan.\n\n\"No...I'm about to go to your head,\" he quipped back, flexing his hips and driving himself hard into her waiting body.\n\nReasa's toes curled, her breath caught and she was certain stars danced before her eyes. Before she had time to recover he was thrusting deep again and she was helpless against his assault. Her body moved in time to his. He teased her in a dance that alternated between hard and forceful, to soft and gentle. Each time she thought she had detected his rhythm he switched it up again until she was a mindless, quivering wreck beneath him.\n\n\"Liam...I need...I need...\"\n\n\"What do you need, dear heart? Tell me what you want and it's yours.\"\n\nThe deep huskiness of his voice told her that he wasn't unaffected by the sweet torture he was subjecting them to. His own desire was at fever pitch and he needed his release as much as she did.\n\n\"I need to come,\" she gasped, rolling her hips in such a way that his next thrust into her teased him and made him growl loudly. She did it again, and again until he lost control and was taking her hard and fast, pushing her towards that perfect moment of union that was theirs and theirs alone.\n\nReasa climaxed hard, crying out and shuddering beneath Liam as he growled his own pleasure into the night air, his neck straining as he pulsed deep inside her and bathed her with his pleasure. She couldn't think, couldn't breathe, all she could do was soar on a wave of ecstasy that felt as if it would never end.\n\nWhen reason finally returned she was cradled on her side in Liam's embrace, their hearts beating loudly and their skin slickened with sweat. His breathing was as erratic as hers was, and for a long time she just lay there listening to his heart slow down, a feeling of complete safety overcoming her as she lay in his arms. It was without a doubt the most beautiful, staggering lovemaking she had ever had, and she was glad she had taken this moment with him, no matter what the future may hold. \n\n\"You're incredible,\" Liam murmured against her hair, cuddling closer as their skin cooled down on the early morning air.\n\n\"You're not so bad yourself,\" she quipped back, giggling when he gave her a soft pat on her backside.\n\n\"Not so bad? Talk like that will get you into trouble, wench.\" \n\nHis laughter was low and happy, and it wrenched at her heart. She managed to keep her tone light, hiding her sadness from this beautiful male who wanted nothing more out of life but to love her. \"Yes, I tend to excel at that,\" she answered, faking a wide yawn.\n\nIt had the desired effect, Liam reaching for the rumpled coverlet to pull over them. \"You're exhausted. You need to sleep.\"\n\n\"It's so hot too,\" she groaned, and he placed a few inches between their bodies, as she suspected he would. He always put her needs before his, and her eyes filled with tears as he ran a hand down her back as she faced away from him towards the window.\n\n\"Sleep, love,\" he whispered, a yawn escaping him. \"I want you rested for tomorrow so we can do that again, it was so totally amazing.\"\n\n\"It was,\" she whispered back, fighting the tears that threatened to fall. She wouldn't be here when he woke and that would truly break his heart. She deserved every single bit of what was heading her way. Maybe then she would have atoned for all the wrong she had done to this wonderful male and his pack...\n\nReasa evened out her breathing, simulating falling asleep as best she could. It must have worked because he fell asleep within a few minutes, but she lay there an additional ten before she climbed out of the bed as soundlessly as she could. While she may not be a vampire any longer she still retained a lot of her previous skill set, like how to move silently.\n\nLiam muttered in his sleep and rolled over, but he didn't wake. Breathing out a sigh of relief, she gathered her jeans and T-shirt, collecting her jacket as she headed into the adjoining bathroom.\n\nDressing in there served a dual purpose; if Liam woke, it wouldn't be unusual that she be in the bathroom, and there was also a door out to the hallway from this particular room. It was kept locked for the most part, though Liam had told her that when family was visiting from the Hanlon pack, it was open to the rest of the house if required.\n\nNow she carefully turned the key in the lock and cracked the door open. The house was silent but she maintained her stealth as she crept down the stairs and made her way to the back door. It was a testament to the trust the house's occupants had placed in her that no one stirred as she let herself out. That was another black mark on her soul, but then, she had so many now what would one more really matter? Ashleigh's talk with her came to mind and she swallowed hard. Perhaps that black mark did matter just as much as the rest of them.\n\nTaking a shaky breath, Reasa slipped into the trees behind the Eriksson house. There was no turning back from this, thousands of lives depended on her. She had no doubt that Michael would do exactly what he said he would. If she didn't hand herself over to him, a full assault would break out on the North American vampires and countless of them would die from Amort poisoning before the pack and Council could mobilise fast enough to give them the newfound cure. She couldn't be responsible for that, she just couldn't. She hoped Liam would understand...he had to.\n\nShe moved east slowly, making sure to stop and listen as she went. There would be wolves out there patrolling and she had to make it to the rendezvous point unseen. A sound echoed off to her left and she froze in her tracks, holding her breath. She waited a full five minutes before she moved again, certain it must have been an animal she'd heard. If it had been a pack member then they would have dragged her kicking and screaming back to the pack.",
        "She was almost at the road when she heard another noise. This time it didn't fade when she stopped, and her heart sank as she spun around to see who was pursuing her.\n\n\"There is some satisfaction in being proven right though I admit in this instance I wish I had been proven wrong for Liam's sake,\" Pietro hissed, fury dancing in his mismatched eyes.\n\nReasa's heart leapt in her chest, dismay overwhelming her as she gazed at the scarred vampire. \"No! You can't be here. Go back, Pietro. Now!\"\n\nHis face twisted into a grimace, his scar stretching as his eyes bled black. \"And let you get away?\" he sneered, loathing dripping from every word. \"It's a shame Liam has to learn what a treacherous bitch you are, Thereasa. He deserves so much better than you. Fate has truly fucked with his life.\"\n\nShe had to make him leave but she didn't know how. If he was here when Michael arrived, there was no telling what would happen. \"Please, Pietro. Please. For Cassia, for Liam and the rest of the pack. You must go back. You must let me go.\"\n\n\"The only place you're going is back to the pack, so get used to that. Now move, Thereasa.\"\n\n\"No...you don't understand!\" She tried again, urgency making her words tumble over each other. \"You're in danger, Pietro. You have to leave here right now. Please...before it's too late.\"\n\n\"How touching...\" \n\nMichael's cold words echoed around them, and Pietro spun around, talons at the ready. They were completely encircled by close to two dozen elder vampires, the blond vampire lounging against a large tree trunk.\n\nReasa moaned in fear, her gaze flickering frantically around them for some avenue of escape. There was none, and no matter how good Pietro was, there was no way in hell he could take on all of the vampires and win.\n\n\"I didn't tell you to bring a friend, Thereasa.\"\n\nShe moved to Pietro's side, her gaze locking with her former coven member. \"He followed me. He isn't supposed to be here. Forget about him, Michael. I'm the one you want.\"\n\nThe blond vampire moved forward, amusement shining from his eyes. \"You still try to protect this vampire? I never understood why you were so intent on protecting him in Europe and here you are doing the very same thing. Are you fucking him?\"\n\nPietro hissed revulsion crossing his face. \"I am mated,\" he growled, appearing more incensed at being linked with Reasa than being surrounded by so many enemies.\n\n\"Our mission wasn't to kill him,\" Reasa spat out, ignoring Pietro's outburst. \"It was information gathering only. You broke Louis' command. You should have been punished as Bruce was. I was weak to leave you alive.\"\n\n\"No, you were too busy following your own agenda and betraying your coven,\" Michael hissed back, venom in every word. \"You've gone from hero to zero, Thereasa. Louis has sanctioned your death.\" He laughed at her expression, glee blazing from his eyes. \"Yes, you no longer have his protection. You're mine to do with as I please.\"\n\nReasa swallowed down her fear, keeping Michael focused on her and away from Pietro. \"So be it,\" she answered, her voice calm despite the fear threatening to overwhelm her. \"You know how Louis feels about his coven members taking the law into their own hands. My own situation is testament to that. If you harm this vampire beside me and bring his friends to Louis' door, your death will be a certainty.\"\n\nShe could see that had him thinking so she pressed on. \"Think about it, Michael. You know what I say is true. Let Pietro go and you can do whatever you want with me.\" She could feel a subtle tensing of the vampire beside her, and knew without looking that he had glanced down at her. She had to keep Michael engaged though, so she stared straight ahead.\n\nShe thought she had him for a moment and then his expression hardened. \"Do you think me stupid, Thereasa? Do you think I am gullible enough to allow him to leave and bring the rest of his pack down on my head? No, he chose to follow you so he will meet your fate. He should have died in Europe anyway. It's obscene to know one scarred such as he sullies our people.\"\n\n\"Michael...Michael, please don't do this. I'm begging you. You don't want to do this.\" Reasa knew it would appeal to him to have her beg. It would buy her a little time...time enough to try to save Pietro. As she spoke she pulled on her newly learned dream walking skills. She slid into the mind of the vampire standing at her side, whispering a mental apology that she was once more invading his soul.\n\n\"Pietro...we have little time. Forgive me for doing this...\" \n\n\"NO!\" he roared, pushing at her psychic form, trying to dislodge her from his mind.\n\n\"I'm sorry...I'm so sorry but you must call to Cassia. I am too far from Liam to reach him but you have the mate link now with Cassia. Call to her, Pietro. Warn her of this danger, and then try to fight your way through them. I will do my best to keep Michael occupied.\" She slipped from his mind before he could answer, praying he would do as she asked.\n\nMichael was laughing loudly, his confidence so high he didn't consider that possibly there could be wolves close by to hear. \"Oh, you beg so sweetly. I find I like hearing you beg, Thereasa. Are you sure you're not fucking Pietro because you plead for his life as if you were.\" His laughter cut off, cruelty replacing his amusement. \"I think we shall kill him first...seeing as you're so partial to him.\"\n\nHe signalled to his men, and a handful of them raised their arms. Reasa stared mutely at them for a second, her terrified mind trying to register what they held in their hands.\n\n\"I came prepared with Amort.\" Michael's smile was nothing short of insane. \"I really liked watching the flesh putrefy on Pietro's body. I want to see it again.\"\n\nPietro moved then, a bellow of utter rage dragged from the depths of his soul. At supernatural speed he incapacitated two vampires, throwing hacked off arms at a third and decapitating the fourth. \n\nMichael sprang out of his reach, roaring at his men. \"Kill him!\"\n\nThree vampires flew at Pietro, knocking him to the ground. Reasa jumped on one of their backs, holding on as he tried to shake her off. He shook her so hard her teeth rattled but she held on like grim death, trying to buy Pietro some time to defend himself. Sharp talons sliced her thigh and she screamed in pain, releasing her hold and rolling to the forest floor. \n\nThe pain was excruciating but it wasn't half as terrifying as seeing blood spurt all over her and chunks of flesh being ripped from Pietro's body. He was outnumbered and outmatched. There was no way he could fight them all off though he was able to inflict some damage. She prayed he had listened and got a call out to Cassia, because it was only a matter of seconds before they were both done for.\n\n\"Enough!\" Michael roared, and the vampires peeled away to leave them lying bleeding on the ground.\n\nReasa spared a glance at Pietro, tears falling as she saw the damage to his body. His arms and legs were mangled, and it looked like his spine had been crushed. He would never heal in time; the damage was far too great. She had tried to protect him, tried to atone for her past sins and now she was taking him to her grave. \n\n\"I'm so sorry,\" she wept, dizziness threatening as the blood pumped too quickly from her leg wound. Her human body was letting her down, and if her last words were to be to this wounded warrior, then she wanted him to know that she was sorry for all the harm she had ever done to him.\n\nPuzzled, pain filled eyes met hers, confusion warring with his hatred. Pietro stared up at her, willing his body to heal, frowning as he saw her vision blur as tears fell down her cheeks. \"Thereasa?\"\n\n\"Oh, how touching.\" Michael's tone was bored as well as amused his expression a twisted, ugly mask of sincerity. \"Let's end this, shall we?\" He picked up one of the fallen guns, smiling as he pointed it at them. \"Stay with me a little longer, Thereasa. There is enough Amort on these bullets to eat Pietro alive in a matter of minutes. It will be such fun to witness.\"\n\nThe gun cocked, and time seemed to stand still. There was no question in her mind, no second-guessing of what she must do. It felt as if she had waited for this moment to come, so that she might buy him some extra time and she might find some peace in the afterlife. \"Forgive me,\" Thereasa whispered, throwing her body forward as the bullet fired.\n\n\"NO!\" Pietro screamed, his arms coming up to catch her as she fell forward onto his chest, the bullet striking her squarely in the back. Hot, wet, sticky blood coated his hands, Reasa's breath rushing out as her head fell against his neck. Pietro screamed again, and then again, his voice joining with the screams surrounding him.\n\nBreath brushed his neck weakly; a heart beat against his chest slowly. He could hear his name being called. He could hear frantic cries for Reasa, but all he could do was lay there, as a heart slowed with each beat and a breath caught with each gasp. \"No,\" he whispered, tears blurring his vision. \"Stay with me, Reasa, please stay with me. I forgive you. I forgive you...\"\n\n*****\n\nCassia flew out of bed, terror filling her soul. \"Pietro! Where are you?\" \n\n\"East quadrant, beside the road. Two dozen vampires...Reasa is here. Am hurt. Hurry!\" \n\n\"Mom! Dad!\" Cassia ran from her room tears running down her face. \"Pietro and Reasa are being attacked!\"\n\nHer parents were already grabbing clothes as she ran from the house hurrying to Rafe's. She was so distraught she didn't even noticed there were lights on or question why Caleb and Annie were there. \"Pietro...Reasa...the east quadrant. Vampire attack!\" She gasped the words out, stumbling as she swung around and fled back outside.\n\n\"Aaron, lock down the pack now!\" Rafe roared, flying from the house with his sister and her mate beside him. He shifted to wolf form as he leapt down the stairs running at full speed towards the attack. He didn't stop to see what the rest of the pack was up to. They were well trained and knew what to do in the face of an attack. Instead, he ran, fury filling his soul that someone would dare harm his pack.\n\nThe scene was carnage when he arrived, body pieces everywhere, Andrei and Alexei reigning death down on all they could reach. Wolves were hacking at fallen vampires, working in concert to take heads while avoiding being bitten. Off to the right he could hear more vampires arriving, the V\u00e2rcolac and Praetorians were on their way.\n\n\"Reasa! Reasa!\" Liam's anguished scream cut through the night and his head swung to the right so see figures lying on the ground. \n\nThe pack appeared to have the vampires under control, so he shifted back to his human form, kneeling down beside Liam. \"Oh God, no,\" he breathed out, sorrow filling his soul as he stared at the woman cradled in Liam's arms. \"Liam...Liam...she's gone, son. She's gone.\"\n\n\"NO!\" Liam screamed, holding her close, rocking her body against his as tears rolled down his face. His anguish was transmitting to everyone present, his grief causing tears to fall down everyone's faces. \"She's not gone, Rafe. She's not gone. She can't be. She can't be!\"\n\nFrantic eyes searched wildly, finding the one person he sought. \"Help her, Annie. Help her. Make her wake up again...please.\"\n\nThe redhead knelt beside him, gently pushing the Alpha to the side. \"Oh, Liam...I wish I could, sweetheart. I truly do...\"\n\n\"She's there, Annie, I can feel her still there,\" he wept, his eyes pleading with her. \"I can feel her in there, she isn't gone.\"\n\n\"Let me through,\" Mallen ordered, the doctor pulling open his bag as he joined the group. \"If Liam says she's there then I'm not going to argue with him, not after he just brought six seemingly dead vampires back to life. So, I'll work on the physical side and you can do your mental shit. Come on, people, we don't have a lot of time here.\" His stoic pragmatism seemed to shake off some of the stunned grief they were experiencing and the group parted to give them room.\n\n\"Clear up this mess and then do a sweep to make sure we got them all.\"\n\nPietro gently disentangled himself from the bear hug Cassia had wrapped him in since she'd found him among the melee of body parts. Keeping a hold of her hand as he sat up gingerly, his body protested the movement but he had to see the bodies. \"There's no sign of Michael,\" he hissed out, fury invading him that the main instigator had gotten away.\n\n\"Fan out, do a full search of the area,\" Rafe ordered. His gaze fell on Mac who was staring down at Reasa's body. \"Mac, can the Praetorians run a sweep of the city? I don't want any of the pack away from our borders until we're certain the coast is clear.\"\n\n\"We're on it,\" the Praetorian leader answered, glancing down at his mate.\n\n\"I want to stay with Liam,\" Lily said quietly, scrubbing at her wet cheeks.\n\n\"Is that wise?\"\n\n\"He just made us cry a little,\" she sighed, leaning in to give him a hug. \"Liam's in control, Mac. Nothing bad will happen.\"\n\nHer mate wasn't so sure of that but he had to go with what she wanted. Her pack needed her right now, so this was her place to be. \"Stay here until I come get you.\" He kissed her lightly and then turned to gather his people. If this Michael was anywhere in the city to find, then they would find him.\n\n*****\n\nThe pain was gone and it felt so amazing. Reasa slowly opened her eyes, blinking against the harsh whiteness that surrounded her. Where was she? Glancing around in confusion, she tried to clear her head but it felt kind of fuzzy, as if what she was looking at wasn't real. The last thing she remembered was being in the forest and the next she was here. Was this what the afterlife looked like? \n\nMichael had shot her at point blank range. There was no way her fragile human body could have survived that kind of trauma. She only hoped that her sacrifice had given Pietro the precious seconds he'd needed to heal enough to protect himself. Maybe it had been enough time for the pack to get there and help him...if he had called to Cassia as she'd told him.\n\n\"Was it a hard choice?\"\n\nReasa spun around, her mouth opening in surprise as she stared at the beautiful woman standing watching her. Her thick red hair was pulled up in an intricate design, and she wore a flowing deep purple gown cinched at the waist by an ornate silver belt with a crescent moon clasp. Reasa was certain she'd never seen the other woman before and yet, she appeared familiar somehow.\n\n\"Annie?\" Even as she breathed the name, she knew it wasn't Rhianna standing there. They shared the same colouring but their faces were different.\n\n\"Was it a hard choice?\" the woman asked again and this time Reasa listened to her words, understanding what she wanted to know.\n\n\"No,\" she answered quietly, reliving that moment in the forest once more and knowing if she had to do it over again she would make the same choice.\n\n\"Do you know who I am, Thereasa?\"\n\nKnowledge came to her in an instant, awe overwhelming her. \"You are Anakatrine, last of the great Vampire Queens.\" Tears came unbidden and the need to subjugate herself to the woman who had taken everything from her and yet, in the process, had given her back her most precious possession. Reasa knelt down on both knees, bowing her head. \"Thank you, my Queen, for the gift of my soul. I didn't deserve it but I am grateful for your generosity.\"\n\nThe Vampire Queen let out an inelegant snort, so surprising Reasa's head shot up to see open amusement on the other woman's face. \"Oh, stand up, child,\" Anakatrine laughed, holding out a hand. \"Do you want to know a secret that only Callain and Gard know? I used to bespell my audience chamber to turn the tiles into cushioned pillows. It still looked like it was tiled but it was soft when my subjects knelt. It used to confuse the hell out of them but I always worried that their knees would get sore with all that kneeling. I never could abide all that kneeling malarkey.\"\n\nWhen Reasa only gaped at her open-mouthed, she laughed again, pulling her to her feet. \"What? I'm not what you expect of a Queen? I can be many things dependant on the circumstances. Sometimes I am benevolent, others I am a warrior. There are times when I must make the most painful of decisions and then there are times like these, when I can just be one woman talking to another.\"\n\n\"I don't understand what's happening here,\" Reasa whispered, her confusion absolute. \"Am I dead like you are, living in someone else's mind?\"\n\nAnakatrine's gaze turned serious, her hands squeezing Reasa's tightly. \"You are between worlds...in a place only Callain or I can walk. Unfortunately, we cannot walk in the same moment here, but I can feel an echo of him behind me sometimes.\" \n\nShe waved her hand at nowhere in particular, a graceful arching of a limb that was so beautiful it made Reasa catch her breath. \"Out there, Mallen is working to stabilise your body with the V\u00e2rcolac donating their blood to help repair the damage. In your mind, Liam is wading through your shattered hallway, searching desperately for the pieces of your psyche to hold your mind together as they work. In here, it is just you and I, two women having a pleasant talk. Why don't we sit for a while? You've had a busy night and must be weary.\"\n\nBright red, high-backed armchairs appeared out of nowhere, and Reasa allowed herself to sink into one as the vampire Queen settled into the other. \"Why am I here, Anakatrine? Why are we here?\" It seemed like the most important question in the world, one that she had to have answered.\n\n\"Why do you think, Thereasa?\" Was the cryptic response, confusing her further and yet, opening up her thoughts too.\n\n\"I am being judged.\"\n\nAnakatrine snorted once more, laughter dancing across her face. \"I am not judging you, child, I am merely spending some time with you while you make your decision.\"\n\nWhat was she talking about? What decision was she required to make? \"Please...I don't understand...can't you talk without riddles.\"\n\nThe smile the vampire queen gave her was one of fondness though there was more than a hint of ruefulness about it. \"I have spent eons talking in riddles, child. Sometimes it is hard to break the habit. When I stripped you of your immortality, I told you that you had three souls to save, Thereasa. Name those souls and our time here is done.\"\n\nEverything Rhianna had told her was true, it had been the vampire queen who had taken her immortality. She had known it at the time, known it when she knelt before this woman, and she now knew the answer to the question just posed to her. \"Liam,\" she breathed seeing his beautiful face as if he was standing before her.\n\n\"I forgive you...\" a voice echoed in her mind, the last sound she could remember hearing. \"Pietro...\" Tears fell down her cheeks, the emotions within demanding an outlet.\n\n\"Was it a hard choice...?\" The question from the vampire queen, the one she had answered without needing to think...\"No...\"\n\nAnakatrine was watching her closely, glowing lavender eyes brimming with a love that was so fierce it was incandescent.\n\n\"Thank you for my soul...\" Reasa's voice, her words uttered only a few breaths before as she knelt before this wondrous being...\n\n\"My soul...\"\n\nHeat radiated throughout her body, a soft warm glow that wrapped her up and embraced her in a safe cocoon. She wasn't afraid of it, she didn't understand it, she just knew that it would do her no harm.\n\n\"Thank you for Liam's soul, sweet child. Thank you for Pietro's soul, fierce vampire. While I grieved that I had to take such dire steps to lead you home, I had faith that you would one day find your own soul once more. Never forget who you are, Thereasa. Never let mistakes of the past define you. This is who you are now, a woman who has saved countless innocent lives. A woman who was willing to give her life to save another. Welcome home, child.\"",
        "The heat intensified until it was all around her. \"Anakatrine...I'm afraid.\" She couldn't see the Queen anymore, she couldn't drag her eyes open or stop the dizziness from enveloping her.\n\n\"Anakatrine...\"\n\n\"Reasa...Oh god, Reasa!\" Liam's tears were covering her face, her body protesting as he rocked her against him ignoring the irate bellows from the doctor at her side.\n\n\"Liam, let her go...\"\n\n\"No...\" she murmured, forcing her eyes to open, to see her mate's beautiful face above her, tears of joy streaming down his cheeks. She didn't want him to let her go, she wanted to be in his arms forever. \"I dreamed of the vampire queen,\" she whispered, tears falling from her eyes. \"She was so beautiful, Liam. So kind and loving. She helped me find my soul...she helped me...\" Her words trailed off, her body needing the rest, her mind so tired all she wanted to do was sleep.\n\n\"Oh my god...do you see that?\" Mallen's stammer had everyone turning to look at him in surprise. He was pointing at Reasa, at the gaping wound on her leg. \"She's healing herself...\"\n\nCaleb turned to Rhianna, shooting her a puzzled glance. She was pale and looked exhausted, but she was smiling so widely he knew she'd been up to something. He'd known something was happening when she'd told him to hold her and not to let go no matter what happened. Nothing had appeared to be happening so he'd been a but perplexed by her request but he'd done as she asked. \"Annie?\"\n\nShe yawned, snuggling against his chest as Liam dragged his gaze from his mate to look at them. \"Thereasa saved her three souls. Her penance is over.\" Her lavender gaze connected with the V\u00e2rcolac, a happy smile gracing her face. \"Anakatrine returned Reasa's immortality, Liam. She will heal herself in good time now, though it would probably be more comfortable if she wasn't left lying on the forest floor while she did.\"\n\nA hush fell over the clearing, all eyes staring at them. \"Do you mean it, Annie?\" Liam whispered, hope in his voice. \"Reasa is a vampire once more?\"\n\nHer smile widened if that was possible and she rose to her feet with Caleb at her side. \"She is a vampire once more,\" she agreed placing a hand on his shoulder. \"Take her home now, Liam. Cassia, take Pietro home too. There has been enough drama this night. Let's care for those we can and find a way to help those we can't.\"\n\nCaleb gathered her to his side, knowing her thoughts were travelling back to Europe and to what could have happened to her brother and his mate. The rest of the pack wasn't aware of that turn of events as yet, and it appeared they would try to limit that knowledge to those who needed to know for the time being.\n\n\"Back to Rafe's?\" he asked, and she shook her head as she looked at her brother. The Alpha's attention was on his pack at the moment, and the ones he could do something to help.\n\n\"Tomorrow,\" she answered, her heart heavy as her eyes turned to stare off into the distance. \"Be safe,\" she whispered for only Caleb to hear. \"Be safe, brother of my heart. Your work here is not yet done.\"\n\n*****\n\n\"Will you mate with me, Reasa?\" \n\nHow could she deny her fierce male when he looked at her with such adoration on his face? As soon as her body had healed he had loved her with no holds barred, and it had been even more exquisite than their first time together. He hadn't needed to be gentle because she was human. He had been lustful and strong, demanding and tender at the same time. Now they lay together joined, welcoming the dawn's first rays through their open window, her glorious male was asking to join with her forever.\n\nReaching up a hand, she brushed aside his long, auburn locks, drinking in his beauty and wondering how she had ever deserved to know such happiness. Anakatrine's words whispered through her mind and she pushed away the last lingering self-doubt that she had. She deserved this because she had earned it, with every tear that had been wrung from her soul.\n\n\"I have walked through fire to be with you, Liam Eriksson. I have known my greatest weaknesses and shame, and I have known my greatest strengths and compassion. I am honoured to be yours for eternity. Yes, I will mate with you.\"\n\nThe joy on his face brought tears to her eyes, and she let them flow as he moved inside her body, his lips plundering hers, his body worshiping her with his love. Now that she was free from the past, there was hope for this future with her redheaded V\u00e2rcolac, and she was taking it while it was on offer. Nothing and no one would deny her.\n\n\"Liam...my beautiful Liam...I love you so much.\" The words were ripped from her soul as her body soared in ecstasy, and her fangs sank into the side of his neck to nourish her second lust.\n\nShe could feel his life essence filling her body... both his blood and his seed claiming her. It made her heart thud wildly, it beating racing as his teeth sank into her collarbone and he claimed her as his mate. Nothing had felt so good, and she doubted anything ever would. Nothing could ever compare to this perfect moment of being claimed by her magnificent mate, and now she was a vampire once more, it would be a memory that would never pale.\n\nThey danced together in their rhythm of love, true mates joining in a perfect moment of bliss. he gave her his strength and she gave him hers. They were one heart beating, one breath echoing in the early morning air.\n\n\"I love you, my sweet, sweet Thereasa. Now and forever,\" Liam whispered the words with tears of joy in his eyes, complete for the very first time in his life. It hadn't been an easy journey, but he would have walked through endless trials to win his mate's love. She was worth every single tear he'd shed, every single missed heart beat when he thought he had lost her. He was probably going to be a tad overprotective for a little while until the terror of seeing her lying in the forest so lifeless diminished, but he expected she would understand that.\n\n\"Thank you for not giving up on me, Liam. For believing in me when I doubted myself. Fate blessed me when it chose you for my mate. I will do my utmost to be everything you ever dreamed of.\"\n\n\"Silly,\" he chuckled, kissing the side of her neck as he gathered her close. \"You already are and always were, Thereasa. With you I am complete and I can't wait to spend the rest of my existence with you. Thank you for trying to kill me.\"\n\n\"Liam!\" She groaned as he brought that up, shame running through her at the mere mention of it. She tried to hide her face but he wouldn't allow her to, tilted her chin up so their eyes could meet.\n\n\"Do not hide from the past, love. It is what brought you into my life and what helped us learn that the V\u00e2rcolac were immune to the toxin. In a roundabout way, it was also what pointed towards the antidote for Amort too. It happened and it's unescapable, but we can look to the good that came of it and not to the misguided thoughts that created the situation.\"\n\n\"You have a novel way of looking at things, my mate,\" she sighed, a half-smile curving her lips. \"I will try to see things from your perspective. I guess old habits die hard sometimes.\"\n\nHe rolled over on top of her once more, his body hardening as he rubbed against her. \"I could always think of novel ways to re-educate you when you have a lapse...\" He gave her his best leer and she burst out laughing.\n\n\"I'd hold that thought if I were you. If my newly reacquired senses are correct, I think we may have some early morning visitors.\"\n\n\"What the hell? Who would be calling at this time of the morning? It's barely dawn...\" Liam's grumble came to a halt as he scented their visitors, his gaze swinging away from the bedroom door and back to his mate. \"Are you okay with this?\"\n\nReasa sat up reaching for a dressing gown and sliding it on. \"I think I need this, Liam. We need to know if this is going to work.\"\n\nThe soft tap on the door interrupted them, and Liam shrugged into a pair of silk PJ bottoms as it swung open.\n\n\"Hope you two are decent,\" Cassia called out a bare second before her head peeked around the door. She was smiling and looked slightly tousled, but her body language was completely relaxed. \"Sorry for the early hour but Pietro was being a complete pain. He insisted we come over to see how Reasa was.\"\n\nIt was all the woman in question could do not to gasp in astonishment as the door opened wider and the other couple entered. Pietro's mismatched gaze went immediately to hers, and she wondered what he was thinking behind the carefully neutral expression on his face.\n\n\"Liam...would you and Cassia mind?\"\n\nHer mate shot her a perturbed glance, but she smiled at him to reassure him. With a pointed look at Pietro who smiled innocently, Liam allowed himself to be escorted from the room by Cassia.\n\n\"He won't harm her...\" she heard the blonde V\u00e2rcolac say as the door closed behind them and she was left alone with Pietro, who remained where he had stopped in the room.\n\n\"Are you well?\" he asked, when the silence lengthened.\n\nReasa nodded, unsure what to say to the vampire who had almost died twice because of her actions. In her mind she could still hear his voice in the forest, but she didn't dare hope that he had come to repeat those words.\n\n\"You were human. You knew that shot would have been fatal. Why did you do it, Thereasa?\" There was honest confusion in his voice, a need for understanding in his eyes.\n\n\"I couldn't allow you to die because of my actions,\" she answered, fighting to keep her voice from shaking from the wealth of emotions that were suddenly building up within her. \"I erred in Europe and you suffered something so horrific that no one should ever have had to suffer. Whether or not it was I who administered the Amort was a moot point. I was in charge of that mission and you almost lost your life because of my mistake. I could not allow that to happen a second time.\"\n\nHis eyes pinned her so she couldn't look away, his expression one she couldn't quite make out. \"You weren't running to Michael for rescue last night, were you? You were trying to save the lives of your people even though your own immortality had been stripped from you.\" He paused, taking a few steps closer to the bed. \"You knew Michael was here to kill you, didn't you?\"\n\n\"What is one life when a thousand could possibly be saved?\" she asked, her hand touching the cover, inviting him closer. \"Would you not have done the same thing, Pietro de la Rios?\"\n\nYes, he would have, if that had been the only option open to him. Staring down at Reasa, he could see that she had honestly believed that had been her only choice, and he felt a kinship with her that he'd never felt before. She was what he knew, a fierce vampire willing to lay down her life for her people. Yes, she had made mistakes and he had paid for some of them, but deep in her heart, she was of his heart and mind. She would die for those under her protection, or those she classed as being hers to protect.\n\nHe took the two final steps to the bed, sitting down on the edge, as he kept their gazes locked. \"I hated you so much,\" he ground out, his voice rough with emotion. \"You knew that and yet you still threw yourself in front of a bullet meant for me. Do you have any idea how raw it scrapes the inside of your soul to know the person you have hated most in this world would die for you?\"\n\n\"I will answer that should Michael ever choose to die for me,\" she replied, a poignant smile on her face because she knew that day would never come. Michael's soul was lost forever and she would rip his head off before she ever allowed him to try to redeem himself in her eyes. She wondered if that was how the vampire watching her felt...if he wished she hadn't acted as she had.\n\n\"My soul has been crying out since that day we met in Europe, Thereasa,\" Pietro whispered. \"It has shrieked and raged. It has demanded vengeance and retribution. That agony almost lost me Cassia, and despite mating with her, it still cried out. I didn't think it would ever stop, not as long as you walked this planet. But...last night as I held you, as your blood coated my hands and I listened to your heart slow and felt your breath stutter against my neck...my soul shrieked once more and it had everything to do with you. It cried out No. It wept for the fragile human woman who would give her life for me knowing I hated her. You have no debt left to repay me, Reasa. I forgive you.\"\n\nThe entire time he spoke her tears fell and she didn't try to hide them. Though he cried his own tears and his voice was raw with his emotions, there was such peace on his face. \"I'm sorry, Pietro, so very sorry for the hurt I have brought to you.\" She reached out tentatively, touching the scar on his cheek when he didn't pull away.\n\nHe gave a shaky laugh, clearly trying to lighten the moment. \"Cassia is very partial to my scars,\" he admitted with a small smile. \"And they freak the vamps out at the Dive which is also a lot of fun.\" \n\nHis expression turned serious once more and he placed his hand over hers and held it to his cheek. \"We have both walked different roads, Thereasa. Each of us has been damaged in our own different ways, but we have found something amazing along the way. We have found Cassia and Liam, and we have found a new home where we are welcomed and loved. We have both fallen, but we have risen back up. It's time to put the past behind us and concentrate on the glorious futures we have ahead of us. I am willing to do this. Are you?\"\n\n\"Yes, oh yes, Pietro, I am so ready for that.\" On impulse she threw herself into his arms, hugging him tightly when he enveloped her in his embrace and held her close. \"To new beginnings, Reasa.\"\n\n\"To new beginnings, Pietro.\"\n\n*****\n\n\"Do you think I should go up there?\" Liam's gaze slid to the kitchen door earning him a snort from his friend.\n\n\"I told you, they're fine...for now.\" Cassia laughed as his head spun around, his expression startled.\n\n\"Well there's no telling what Rafe is going to have to say to them both about why they managed to land themselves into their predicament in the first place,\" she pointed out, though something told her their Alpha was preoccupied elsewhere at the moment. \"Seriously, Liam...what Reasa did for Pietro last night, it changed everything.\"\n\nAs if on cue, the dark-haired vampire appeared in the kitchen, smiling as he crossed to Cassia and gave her a resounding kiss. All the tension had left his body and even Liam could see that he was at peace with his soul. If he hadn't seen it he had felt it the instant the other male had entered the kitchen.\n\nReasa followed him in a few seconds later, sliding into Liam's embrace as if it was the most natural thing in the world. The smile she gave him was beatific and he kissed her, holding her tightly as she laughed at his anxiety.\n\n\"Do males ever grow up?\" She asked Cassia who was also smiling.\n\n\"I'll let you know if mine ever does,\" the blond wolf quipped back, earning her a harrumph from her mate.\n\n\"Did anyone see Kothari last night?\" Liam suddenly asked, his brow drawing down in a frown. In all the chaos that had happened, he didn't recall seeing the reticent V\u00e2rcolac, and for some reason that made him feel uneasy.\n\n\"I don't think so, but then I was more interested in the fact my mate was lying in pieces and you were with Reasa. He had to have been there though; a full pack alert had gone out.\" Even as Cassia spoke, whatever unease had been trickling down Liam's spine was transmitting to her.\n\n\"He feels so calm,\" Liam whispered, his frown deepening. \"Too calm...\" \n\n\"Dara's agitated,\" Cassia exclaimed, her gaze turning to Pietro. \"Something's very wrong...we need to find Dara right now...\"\n\n*****\n\nDara was pissed with a capital P. She couldn't believe she had allowed Kothari to manipulate her as he had the day before. He had deliberately pushed her buttons, being a complete pig and calling her names to get rid of her. She'd fallen for it too, and that was why she was so mad. She was angry at herself and furious at Kothi. He hadn't shown up for the pack alert and when she got her hands on him she was going to give him a piece of her mind.\n\nStomping up to his house, she was pissed that she'd had to walk half a mile too. Why the hell couldn't he live closer to the main compound? That was something else she would give him a piece of her mind about and to hell if it wasn't really his fault. He was a grown man for God's sake. He didn't have to live with his parents. The fact that she still lived with hers was a moot point.\n\n\"Kothari, get your ass out here now!\" she yelled, standing with her hands on her hips outside his front door. All the lights were on in the house so she knew he was awake. \"Kothari, I mean it! If I have to come in there!\"\n\nSilence greeted her, an eerie silence that sent a shiver down her spine. Why were all the lights on? That didn't make sense. Neither, did Kothi ignoring a pack alert. Had something happened to him? What if some of the vampires had doubled back and attacked him while the rest of them were concentrated elsewhere?\n\n\"Kothi?\" Dara walked up the three steps to the door, her breath catching when she saw it was open a fraction. With a hesitant hand she let it swing open, fear clogging her throat as the main living area came into view. Everything was in complete disarray, every piece of furniture smashed into pieces. The curtains were ripped from the windows, jagged holes in the glass on the back wall.\n\n\"Kothi? Answer me!\" Panic laced her voice as she entered the wrecked room. There was no sign of any blood or body parts, the house just appeared as if a cyclone had taken place inside it.\n\nDara ran into the kitchen to find it wrecked, fear clogging her throat at the destruction. She didn't stop there, she turned and took the stairs two at a time, the same chaos echoed in every room she checked. There was only one exception, and it appeared odd that it remained so pristine. Gard and Rayne's bedroom remained untouched, the only evidence that someone had been there, a leather bound journal resting on the middle of the bed.\n\n\"What did you do, Kothi? What did you do?\" Dara whispered the words, as she reached for the journal, opening it up to the first page...\n\nJuly 8th\n\nDear Journal,\n\nMommy told me to write what's wrong with me. That letting it out in some way was better then not at all. Something is wrong with me. I hear mommy & daddy whispering at night when they think I'm sleeping, even with Antie Annie and Uncle Kaleb.\n\nWhat's wrong with me? \n\nDara's heart clenched as she read the first entry, the lost cry of a little boy who knew that he was different even when he was so young. It was hard not to feel empathy for that little boy despite the wanton destruction in the house. Something had happened to push Kothi over the edge. Maybe there was some clue to what it was in his journal. She turned more pages trying to find some evidence of what had set him off. Her breath caught as she read, her heart pounding as she stopped at an entry...\n\nDEAR AGONY\n\nYOUR HURT HER, YOU HURT OUR ANGEL!! HOW COULD YOU HURT HER.\n\nYOU HURT HER\n\nYOU HURT HER\n\nWE HURT HER\n\nWE HURT HER... \n\nDear God, he was talking of himself as two separate entities! He'd even named the other part of himself...Agony. Who had Agony hurt? Why had it distressed Kothari so much? There were no reports about any pack member being hurt. In fact, the only thing that came to mind was when she'd been with Kothi and he'd lost control. Was he talking about her? She leafed back a couple of pages, re-reading some entries about Kothi's Angel. Did he mean her? It appeared to tie together but maybe she was imagining it.\n\nShe paged forward to the end of the journal, and promptly ran out of the room and threw up in the hallway. The last two entries...oh sweet Jesus...if he wrote them after destroying the house...",
        "GONE!!\n\nTHEY ARE GONE!! \n\nDeep scores lined the page, the words carved into the paper. But it wasn't that which made her throw up...no that was bad enough, but it wasn't that which had turned her blood to ice. It was the very last entry, written so neatly and precisely...\n\nDear Kothari...\n\nI'm here\n\nA\n\n*****\n\nThe End...for now\n\nTo be continued in Storm of Shadows"
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "werewolves",
        "mating",
        "love",
        "hybrids",
        "paranormal romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/tears-of-the-fallen-ch-23"
}