{
    "title": "Bozeman by Christmas",
    "pages": [
        "Emma woke startled by the sound of a horrendous death rattle of a large dying beast. She peered out the window to see steam bellow from below her. Above her a chipped paint sign read: Welcome to Livingston.\n\nShe was familiar with the name. Livingston - the small town just before Bozeman, Montana. She smiled at the notion that she would only need to suffer a couple more hours on the wretched Northern Pacific train ride that she started from Saint-Paul. She went to rest her head against the window again but the loud ruckus of baggage being lifted off the train and people shouting in confusing and hurried language at one another kept her from her attempt at returning to her nap. She frowned with her eyes shut. Is all that awful noise really necessary?  She thought.\n\nShe opened her eyelids and caught the eye of the conductor out the window. He gave her a toothy grin and waved at her. She shot him a weak smile and sat up, averting her eyes towards the front of her compartment. He walked up to the window and rapped on it gently, then curling his hands around his mouth he shouted into the window, \"Ma'am, I'm sorry for the inconvenience, but the train is delayed here at least until morning.\" \n\nA nervous pang shot through her. This was going to be an issue. It was the twenty-third of December, and she had promised Percy, her fianc\u00e9e that she would make it in time for Christmas Eve dinner with his family in Bozeman right before their trip westward to Tacoma. Missing that dinner was not an option.\n\nShe rested her hands in her lap and sat up straight and spoke directly to the conductor through the window, \"there must be a misunderstanding, sir. I bought a ticket to reach Bozeman today .\"\n\nThe conductor leaned an ear up to the window and shouted, \"eh?\"\n\nSteam bellowed with a whistle out from the train again. Emma clucked her teeth and grabbed her handbag and marched off the train.\n\nThe frigid air hit her bare cheeks like a sharp blade as she stepped down the ladder well. The conductor helped her off with a hand. The glaring brightness of the winter Montana sky blinded her. She put the brim of her felt hat down to hide her eyes in its shadows and looked up at bright white sawtooth row of the nearby mountain peaks. When her eyes adjusted to the grandeur, she turned to the conductor.\n\n\"Sir, there must be a mistake. You see, I purchased a ticket to reach Bozeman by today.\"\n\nThe conductor gave her a pitying smile and when she was finished with her statement, replied in a calm voice, \"Yes, ma'am, the train was indeed scheduled to arrive at Bozeman by this afternoon, but you see, there had been an unfortunate turn of events. Boulders fell in the mountain pass. Men are heading there to resolve the issue immediately, but I am sorry to say that it just will not happen by today. If the weather holds up, we might be able to depart by tomorrow afternoon.\"\n\n\" Might depart tomorrow afternoon? \" Emma repeated with a shrill voice. Emma clutched her handbag anxiously and looked around at the other people leaving the train with their luggage, seemingly unperturbed by the very major inconvenience. Her face heated up so that she could not feel the cold biting Montana wind. The conductor looked on her with concern, as if she might faint at any moment.\n\n\"Ma'am, I'll have a boy fetch your luggage for you. There's surely a room available at the inn.\"\n\nHe then looked around her with a frown and asked, \"are you traveling all alone, ma'am?\" \n\n\"Yes, I am now. My aunt took ill in Saint Paul. My cousin is with her. I opted to reunite my fianc\u00e9e and his family for Christmas. So here I am now. And  they are in Bozeman.\"\n\nShe added the last statement with emphasis.\n\nThe conductor nodded in understanding and motioned to a young boy and instructed him to grab her bags.\n\n\"I'm truly sorry for the inconvenience ma'am, but rest assured we will do everything that we can to resolve the delay and get you on your way to Bozeman,\" he said and then carried on assisting other stranded passengers. Emma's mind frantically searched for an alternative to being stuck here another day, and possibly more if the weather does not cooperate.\n\nThe porter boy arrived with both her luggage pieces and looked up at her mutely with rosy cheeks and a runny nose, awaiting her orders. She smiled awkwardly at the boy then waved the conductor back over.\n\n\"Excuse me sir,\" she shouted. The conductor spotted her with the luggage lying at her feet and came at once. \"Ah, there we are.\" He leaned over to the boy and said, \"alright lad, Livingston hotel. Smartly now.\"\n\nThe boy nodded and lifted the suitcases off the ground, one in each hand. Once the conductor had finished tousling the boy's hair, he straightened up, and before he could say a word to Emma, Emma said, \"I will not be staying at the Livingston hotel tonight. I intend to take a coach over the pass to Bozeman. If you will be so kind, please point me to where I may hire one.\"\n\nThe conductor held back a laughter and his face furled into exasperation. \"Ma'am, I -\"\n\nShe interrupted his protest with a stern, \"Sir, the coach station if you please.\" \n\nThe porter boy watched the pair duel with his vacant eyes. The conductor took a deep breath and said, \"Ma'am, there are no stagecoaches between here and Bozeman. Not this time of year.\"\n\nEmma continued to fix her eyes with severity on the conductor, making it clear that no divine will could hold her here in Livingston and miss Christmas with Percy and his family, who she has yet to meet.\n\nThe conductor sighed and said, \"all right, I strongly advise against it, but if you must, I suggest you find Miss River Langtry. She knows these parts better than anyone I can think of. You can find her in her office just around the corner. If there is anyone that could possibly help, it would be her.\"\n\nEmma gave the conductor a grateful bow of her head and left the station with the quiet porter boy in tow. When she arrived at the office, indicated by a small placard stating 'River Langtry -- United States Forestry Service, she tipped the boy with a coin, then entered the sawdusted office.\n\nRiver Langtry sat on the other side of a paper-strewn desk in the small room, warmed by a small franklin stove that crackled cheerily, on top of which was situated a tea kettle on the verge of whistling. She wore a yellow deerskin jacket and wore her bright blonde hair in a tight ponytail. She had a fair, sharp face and sharp eyes. Above and behind her hung a simple evergreen wreath, the sole Christmas decoration in the rustic office.\n\nShe busily scratched away at a piece of paper with a pen and had not looked up to see her guest. Emma gave her a polite moment to finish her writing -- she did not want her to lose a train of thought -- before giving a light cough to catch her attention.\n\nRiver stopped her writing, laid her pen down on the notepad and leaned back in her chair to study the young newcomer in her office.\n\nA pregnant moment passed before she said, \"what can I do for you, sweetheart?\"\n\nEmma's face flashed to a scowl at the word 'sweetheart' but put on a faux smile and replied, \"good morning, my name is Emmaline Finch. I was told that you might be able to assist me in reaching Bozeman by tonight.\"\n\nRiver furled her eyebrows. The tea kettle started to whistle loudly. River let it whistle as she thought over what Emma said. Outside, a gentle snowfall started. Indicating that Emma's request was meaningless to her, she responded with a tangent. \"What's that accent from?\"\n\n\"I beg your pardon?\" \n\n\"Your accent. You're not from around here.\"\n\nEmma turned her smile to impatience and with an upturned chin she responded, \"I'm from London. Now to the matter of reaching Bozeman...by this evening...\"\n\nThe tea kettle continued its ever-strengthening whistle until Emma could not bear it any longer. She marched over to the stove and took the kettle off to place it on River's desk. River watched with disinterest.\n\n\"Huh. London.\"\n\n\"Yes. It's in England.\"\n\nRiver turned her eyes back up to Emma, who stood now next to the franklin stove tapping her foot, but a dignified posture. She smiled at Emma and leaned her chair back to prop her boots on her desk.\n\n\"Lovely accent,\" she stated.\n\nEmma crossed her arms. \"So, will you help me?\"\n\n\"Don't think so.\"\n\nEmma breathed out in exasperation. \"Well, do you mind explaining why not?\"\n\nRiver raised an eyebrow, then looked out the window. Emma followed her gaze to see the glistening, dancing snow-dust that had started to fall outside in the bright morning light. \"Because there's no way I can get you over the pass by night fall. Take the train, sweetheart.\"\n\n\"I was  on that train, Miss Langtry. The only reason I'm asking you to take me is because the train is stopped here indefinitely. From my understanding, Bozeman is just a thirty miles distance. And my name is  not sweetheart. It's Emma Finch.\"\n\nRiver nodded along as Emma made her case. When she finished, River responded, \"I'm fully aware it's a thirty miles distance. Ms. Finch. Twenty-six, actually. But that's twenty-six miles through a mountain pass when a snowstorm is fixin' to cause some trouble.\"\n\n\"What snowstorm?!\"\n\nRiver shrugged. Emma took to rage by River's apparent lack of compassion in a moment of her obvious need. Her face heated up.\n\nShe put her hands on her hips as she thought about how to proceed. If River was not going to help her, she only knew of two other options. The first was to give up and stay at the Livingston Hotel for the night and pray that the railroad repairs are done by tomorrow. She'd be late for Christmas dinner in that case, but at least she'd be there. But what if River was right about the snowstorm. How bad would it be? How long would she be stuck here? Christmas alone?  That was not a realistic option in her mind.\n\nThe second option was to find someone else that would take her. This was a better option. If River refused to be her guide, perhaps she could find someone that would.\n\nRiver kept her impassive gaze on Emma as Emma thought through her two options. Politely, Emma said, \"I understand you're a very busy lady, and that you cannot possibly risk the journey today. Could you point me to someone who is willing and able?\"\n\n\"Well, you can try the saloon. Maybe one of them boys is willing... And able. End of the street.\"\n\nWith that, River picked up her pen and turned her eyes back down to the paper. As she scribbled, she said, \"you have a good day, Miss Finch.\"\n\nThe saloon. The idea frightened Emma. She shuddered as she imagined herself pushing open the doors to the saloon to find there a contingent of drunkards swaying over their whiskeys and beers. A young British lady in a room of savage men that would eat the Oxford boys she was accustomed to for breakfast.\n\nRiver looked up again and said, \"you can leave your bags in here while you arrange your travels, if that's your worry.\"\n\nEmma shot her a contemptuous look, then turned her glare to the kettle that sat on the desk. It rusted around the middle bulging part. It was a tired, ancient thing, bent inwards in some parts, nonetheless still performing its diligent duty. She thought suddenly of an easy gambit. She reached into her purse and took out a stack of bank notes and placed it on the desk. \"I'll pay you good money. Here's twenty dollars. That ought to be more than enough to cover a hard day's work.\"\n\nShe slid the notes towards River.\n\nThe money piqued River's curiosity. She went to pick the banknotes up, and almost accepted, but opted instead to slide the money back towards Emma, responding, \"sorry, ain't doing it.\"\n\nEmma gave a harrumph but did not pick up the money. Instead she reached into her purse again, continuing her glare at River as she did so, to pull out another eighty dollars.\n\n\"A hundred dollars.\"\n\nA hundred dollars to be taken horseback twenty-six miles. It was a considerable sum. A month's forester wage if not more, Emma imagined. Thought she had paid just as much for a first-class cabin from Boston, the money meant nothing to her. Bozeman could not wait.\n\nRiver stared at the considerable wad of bills with a glow in her eyes that betrayed her stolid face. Emma gave the final blow to push her over the edge. An appeal to emotion -- Tears welled in her eyes and she sniffled for affect. \"Please. It's to be our first Christmas together.\"\n\nRiver thinned her lips and took the money, shoving it a jacket pocket.\n\n\"How's your horse skills?\"\n\nEmma's spirits raised. She wiped her eyes and said,\n\n\"I've ridden horseback since I was eight.\"\n\nRiver nodded. She stood and stuffed the papers into her desk drawers messily.\n\n\"Thank you so much. This means a lot to me,\" Emma said.\n\nRiver shrugged and said, \"can't promise nothing. Things can turn quick out there and chances are, we'll have to turn back. But I'll set you up with a good horse, and a pack mule for your bags. You get yourself into something more suitable for riding right quick. We'll get going in an hour. No delays.\"\n\nThe flurrying snow came down livelier once Emma returned from sending an electric telegraph to Percy to explain her predicament. River prepared a pair of tall spotted appaloosa horses and a pack mule. She wore a thick wool overcoat and a coonskin hat, appearing like the goddess Artemis. Emma stood in awe at this divine huntress.\n\nAfter River tied down the saddle on the second horse, she picked up an exceptionally large, by Emma's approximation, rifle. Emma gasped at sight of it.\n\n\"Oh, do you need me to lend you a gun?\" River said as she stuffed the rifle into a holster situated on the side of the horse with the stained butt sticking up like a wooden club.\n\nEmma replied, \"certainly not. Why on earth would I need a gun?\"\n\nRiver laughed. \n\n\"First time in Montana?\"\n\n\"Quite.\"\n\nRiver nodded and hopped up onto her horse. Emma walked up to her horse, a tall stallion with a shimmering, brown-white splotched coat, and rubbed its muzzle. \n\n\"My, aren't you magnificent,\" Emma whispered to it. The stallion gave a courteous snort in reply. Emma could tell it was a kind horse. A well-treated horse.\n\n\"What's his name?\" Emma asked.\n\n\"Don't got a name.\"\n\n\"You don't name your horse?\"\n\n\"The mule's is Annabelle. But the horses don't got names. Could never think of a good one.\"\n\n\"I see.\"\n\nEmma clambered on her horse and clasped the reins apprehensively. River looked her up and down to make sure she was well situated on the appaloosa and ready for the ride through the frigid Montana winter. When she was satisfied, she motioned with her head for Emma to follow along and steered her horse onto the snow-painted clay road and pressed into a calm clopping stride out of Livingston and towards the white sawtooth peaks through which the Bozeman Pass cut.\n\nEmma started to worry when she saw the thickening layers of clouds above and the thickening snowfall. But the air was still, and River seemed unperturbed. If she didn't outright reject the mission, she certainly believed it was possible to make it to Bozeman by nightfall.\n\n***\n\nThe ride to Bozeman was quiet. River led Emma alongside the narrow-gauge railroad that ascended linearly into the mountains. Annabelle the mule followed closely behind.\n\nThe snow had turned into a cotton grey blanket in front of them, hiding the landscape, making the world a tiny place. The only sounds came from the movements of the horses and the mule -- The hooves pushing into the snow and the mud of the road, the constant shifting and rubbing of tough wool and rawhide against horsehide, the metrical silver clinking of River's spurs that seemed to push time forward like a pendulum, and the sound of snow hitting the ground with the hissing of sand in an hourglass. Emma could not bear this sort of silence. She rode up alongside River to strike up a conversation.\n\n\"So, Miss Langtry. I find it extraordinary, and quite a pleasant surprise to find a lady forester here in Montana. How did you manage to take such an office in such a place that seems to exist only for rough men?\"\n\nRiver sat erect on her horse and seemed not to pay any attention to the question, keeping her head pointed towards the things that fell into their short vision. But she had heard the question, and responded, \"I know the land better than most.\"\n\nShe answered no more or less than she was inclined to. Pulling River into a conversation was going to be like pulling teeth but Emma took it as a worthwhile challenge. There was nothing better to do with the many hours of riding still ahead of them anyways.\n\n\"I see. And what does the job entail normally? Besides guiding distressed British women from one town to the next.\"\n\nRiver's face remained unmoved by the quip. A passing fir caught her attention. She took to studying the bark and snapped a short stem from the protruding evergreen branch.\n\n\"Job changes depending on the need. Sometimes I scout good trees for the loggers. Sometimes I stop the loggers from taking too much. Sometimes I help the sheriff track down poachers or fugitives in the swamps or the hills.\"\n\nShe tossed the evergreen stem aside.\n\n\"That sounds exhilarating,\" Emma said. But she noticed that River spoke of her post with a clinical and sterile understanding of her obligations. These were menial tasks she needed to do to subsist her life, as a dog would perform tricks for food.\n\n\"Can be,\" River responded.\n\nEmma glanced at the long gun hanging loosely in the saddle holster off River's right side then up at River herself. She sat on the saddle as an exceptionally competent and confident woman. Her cheeks were rosy from the Montana chill and curved with the perfection of Italian marble statue. She had a sharp pointed nose, a sharp, thin chin, and sharp eyes that were a brown like watered-down coffee. Emma tried to place her background -- she was European certainly, but there was something more to River which she could not place. A comfort with silence not customary in a civilized place.\n\n\"May I ask you about your story?\" Emma asked.\n\nRiver raised an eyebrow at her.\n\n\"My story? Didn't I jus' tell you my story?\"\n\nEmma laughed suddenly, causing her horse to give a startled snort. She patted the horse's neck and replied, \"don't be daft. I mean where are you from? Where did you grow up...? What are your parents like?\"\n\nRiver's face furled. She paused to formulate an answer.\n\nEmma laughed again. \"These are not hard questions Miss Langtry. Of course, you don't have to answer if you prefer not to. I am simply trying to make conversation.\"\n\nRiver stewed in thought about the question. Emma waited patiently.\n\n\"Well, let's see. I was born in Boulder, Colorado but raised all over. My pa was a white man. A gambler. Ma was half-Cheyenne but raised by Christian-folk, I think. Don't know too much about them outside of that. Ma died before I could memorize her face. Pa was a miserable. He left over the Rockies. Didn't see him since. My aunt on my pa's side took me in and raised me alongside my cousins. She was a traveling nurse, so we found ourselves wherever she could find a job. Colorado. Utah. Wyoming. 'til we ended up here.\"\n\nThey had started to ascend rapidly into the mountain pass. The road became winding and narrow and the snow had thickened on the ground as a white cake frosting. The railroad they followed disappeared in the snow. The visibility was no more than fifty feet, but Emma could feel the immense mountains reaching up around them.\n\n\"That's extraordinary,\" Emma said in genuine awe. \"And your aunt and cousins, are they still in Livingston?\"\n\nRiver shook her head. \"Aunt died of consumption. Cousins died in the Sioux wars.\"\n\n\"Oh, I'm incredibly sorry,\" Emma said. But these sorts of tragedy, Emma knew to be common to the people of the wild west. And River spoke of the tragedy just as she talked about her occupation: in clinical terms.",
        "\"And what about a man?\"\n\n\"What about a man? Don't have one if that's what you're asking.\"\n\n\"Surely you've encountered an eligible bachelor worthy of your affection?\"\n\nRiver laughed aloud. The horses jumped. The mule hee-hawed.\n\n\"Shut it, Annabelle!\" River chided.\n\n\"It's a completely reasonable question,\" protested Emma.\n\n\"It certainly is. Unless you know Livingston.\"\n\nEmma frowned at her. \"Simply trying to make conversation, Miss Langtry,\" she said curtly.\n\nRiver nodded. The pair of them stayed silent. The sounds of their shuffling movements through the snow became prominent again.\n\nAfter the brooding moment, Emma broke the silence again.\n\n\"It's rather queer, even for here, perhaps especially here, for a woman not to have a man,\" she commented.\n\n\"Well, I'm sorry you disapprove of my lifestyle,\" River said sarcastically.\n\n\"It's not that I disapprove of your lifestyle. It's just... it's just...,\" Emma became flustered. \"Are you a Christian woman, Miss Langtry?\"\n\n\"I suppose I am.\"\n\nShe studied River again. She rode the horse with the reins wrapped loosely around the horn of the saddle and held in her fingers with her wrists resting against the top of her jeans. She became unsure of why she felt like she needed to ask such a question.\n\n\"And how old are you? If you don't mind me asking.\"\n\n\"Thirty-two... I think. You?\"\n\n\"Twenty,\" Emma answered. \"And soon to be a married woman,\" she added with a tone of smugness that immediately embarrassed her.\n\n\"That sounds great,\" River responded plainly. She observed another passing tree, stopping her horse briefly to check the bark before continuing.\n\n\"Thank you,\" Emma replied.\n\n\"How do you feel about being married?\" River inquired.\n\n\"I'm elated of course.\"\n\n\"Elated, huh?\"\n\n\"Beyond elated. I am in love with Percy.\"\n\n\"Is that right?\"\n\n\"I wouldn't marry him if I wasn't.\"\n\n\"And how did you meet him?\"\n\n\"We studied at Oxford together.\"\n\nEmma smiled as she reminisced her first meeting with Percy. \"He was a charming boy. A great sportsman and a true gentleman. And incredibly smart. He finished at the top of his class at the Harvard Law School just recently, you know. We met at the Christmas ball at Oxford. Two years ago, almost to the day. I had my eye on him the moment he stepped foot into the ballroom. And he had his eye on me. It was love at first sight.\"\n\nRiver chuckled and recited, \"a single man in possession of a good fortune, must be in want of a wife.\"\n\nEmma responded, \"you surprise me more with every word you speak, Miss Langtry.\"\n\n\"That's from...\"\n\n\"Pride and Prejudice. I know.\"\n\nRiver shrugged. \"Just funny to see that people over there really do live like that. So, what's Percy's last name? It's not Darcy is it?\"\n\nEmma turned red. \"I am not a stereotype, if that's what you're suggesting, Miss Langtry. Percy is an American by the way, as much as you are, and a kind man. But your point is well taken.\"\n\n\"Jus' pulling your leg, Miss Finch. Anyway, what's he doing in Bozeman?\"\n\n\"Well, as it turns out, his father, George has significant equity in the Northern Pacific. He attorneys for them. They are on their way presently to establish an office in Tacoma, Washington. They wait for me in Bozeman.\"\n\nA sudden howling burst of wind came through the valley, causing Emma's felt hat to nearly fly off. She grabbed the brim to pull it down on her forehead. The dry snow carried by the gust pelted her like needles. When the wind stopped, she continued talking.\n\n\"Miss Langtry?\"\n\n\"Just call me River.\"\n\n\"River. Do you not wish you had a man in your life to spend Christmas with?\" Emma asked.\n\nRiver shook her head. \"I've had a few in my life. But men don't interest me much. And I don't interest them much. I prefer my own company anyway.\"\n\n\"I see.\"\n\nEmma imagined herself at River's age. At thirty-two. She'd have children then. They'd have family Christmas. Laughing over tea and cake. Opening presents. Singing Christmas carols. Then she imagined River's life at Christmas time, sitting in her home by her lonesome. Or at her tiny office in Livingston scribbling in a ledger. With the kettle whistling on the stove. Or perhaps out in the countryside on a lonesome moonlit ride among the cottonwoods and the endless grasslands disturbed only by a horizon with mountains like distant claws. Out there with the wolves and the bison, and the eagle soaring high in the starry firmament. As beautiful a lady River was, she certainly would have had many suitors. And she had not taken one. Does she pity herself? Does she need pity? Perhaps not, Emma thought.\n\nShouting echoed through the white misted valley. Lively shouting from men. And the clanging of steel and the grumble of machinery. The ears of the horses perked up. River reached instinctively for her rifle, but after a quick moment, her hand relaxed and went back to her horse's reins.\n\n\"Railroad workers,\" River explained to Emma. Emma nodded and drew her horse closer to River's.\n\nGrey figures appeared in the icy grey flurry ahead of them, and as they drew closer, the figures turned into working men.\n\n\"Hullo there!\" A man yelled out to them. He shuffled over in the snow, huffing the cold air. His shoulders were frosted with the falling snow and his face smudged with black powder.\n\n\"Hello,\" River responded. The man walked up and smiled as he recognized the voice. \"I figured it might be River out here right now,\" the man exclaimed. \"Who else's crazy enough?\"\n\nThe man looked over and tipped his forehead at Emma. Emma nodded back.\n\n\"If you're thinking of taking the young missus over the pass, I would strongly reconsider,\" he said to River.\n\nRiver looked up to the sky, letting a few of the largening flakes to hit her on the face.\n\nHe explained, \"we just got the call of a mighty big 'un coming through. We are heading back down before it gets to be too bad.\" \n\nEmma's heart sank. She saw the figures working busily behind the man. They were other men who shoved coal into a miniature steam engine. They were getting the locomotive ready.\n\n\"I suppose you're right,\" River said to the man. The man grunted.\n\nHe turned to Emma and bellowed, \"helluva weather to be wandrin' about ma'am.\"\n\nEmma replied, \"that may be, sir, but we've only Bozeman to arrive to.\" She looked to River, who looked at her with uncertain eyes. She continued with a defiant smile, \"I am not bothered by a little bit of snow.\"\n\nThe man guffawed and shook his head. He replied, \"you can come with us if you' re second guessing your decision. I would if I was you. But we'll be gone in a hot minute.\"\n\nRiver turned her horse to face Emma and said, \"we are taking mighty gamble.\"\n\nTo the man, Emma asked, \"which direction are you heading? To Bozeman?\"\n\nThe man shook his head. \"No ma'am. Crew from Bozeman already left an hour ago. We're down to Livingston.\"\n\nHope extinguished. She looked at River for answers. River only looked back, waiting for her to make a decision. They had ridden for two hours already. Only another six at the most and they would make it. River knew that and knew that if she took Emma back to Livingston, she would have to give the money back. The horses and the mule stood huddled and still with flicking ears and tails swooshing at the snow. Their hides gathered snow-dust, but they seemed unworried.\n\nNot seeing a decision happening in Emma, River finally said, \"I tell you what Miss Finch, let's go on. There's a mountain hut not two miles further on. If it picks up, we can hole up for the night and let the storm pass and see if we can get to Bozeman tomorrow before your Christmas dinner. Sound good to you?\"\n\nEmma nodded. Of course, it sounded good to her. This plan was infinitely better than giving up and heading back to Livingston to wait for God knows how much longer until the railroad is cleared.\n\nRiver clicked her heels and her teeth at her horse to get them moving. Emma's horse and Annabelle fell in automatically and they trudged onward. The coal-faced old man touched the brim of his hat shouted as they passed, \"River, you stay safe out there, you hear?\"\n\nThe road took them higher into the pass. The higher they ascended, the thicker the snow became. The landscape turned from a ghostly grey speckled with grey flakes to a blue and white thicket of streaking ice. Emma had turned her felt hat downwards over her face to protect her from the onslaught so that only the pommel of the saddle and the frosted shoulders of her appaloosa horse were the only things in her vision. White noise, otherwise, filled her world.\n\nIt went on like this for an eternity. But Emma dreaded that the eternity only filled a minute or an hour at most. To manage that dreadful eternity with conversation was out of the question, as was anything else besides simply surviving the pelting snowflakes. Her mind fixated on convincing herself of her own toughness, and of laughing at this misadventure with Percy the following day.\n\nShe had fixated her mind inward so much, that she hadn't noticed that the clinking sound of River's spurs disappeared. Suddenly she felt a vast void. She jolted up and looked ahead and saw no one. River was gone. She swiveled her head around and saw that the mule still dutifully followed. Her own horse still pressed forward, but only in a listless forward direction. \n\nEmma's heart filled with a thumping fright and her throat knotted up. \"Miss Langtry!?\" She shouted out into the blank storm. \"River!\"\n\nThe wind and the snow swallowed her voice. \"River!\" she cried out in vain.\n\nShe stopped her horse from moving forward. The snow had reached the depth of her Appaloosa's knees. The snow inched upwards like seawater in a sinking boat.\n\n\"River!\" she cried again. The only answer was the muffling silence of the howling wind. She was stranded. She cawed at her unbelievable lot: a caricature in a wild west story.\n\nShe waited, as there was nothing else to do, and nowhere to go but into a wall of white. The whistling soundscape blanketed her mind into a terrified calm. Her horse shook the snow from its mane and whinnied impatiently. She rubbed its neck to reassure it.\n\nAnother dreadful eternity passed before the sounds of silver clinking came through the wind. A warm relief came over her. The sound of River's spurs.\n\nOut of the white a grey mass appeared and became River on her horse. She had a serious look on her face. \"Follow me, Miss Finch! Found the hut,\" she shouted.\n\nRiver turned her horse around and the horse trotted back into the storm. Emma snapped her horse into a chase after River. The mule followed close behind. Not a minute later, they found themselves in front of a mossy cabin and a covered stable, sheltered in a grove of dark pines. They put the horses and the mule in the stable, taking the saddles off, and placing heavy matted blankets on the animals to keep them warm, and put in front of their mouths some roughage from the summer, which the animals took gladly. River hauled Emma's luggage, and with a light kick, busted open the cabin door.\n\nWhen the door went shut behind them, the sounds of storm died away to a muffled howling like a pack of wolves beyond the gates.\n\nRiver dropped the luggage on the ground in the middle of the empty shack, rubbed her hands to warm them and pulled some logs from a large pile in the corner beneath the window to lay them into the fireplace. The cold in the still air became apparent. Emma took off her wet riding jacket and hung it, along with her hat and her gloves by the fireplace to dry and shivered beside a kneeling River, watching her flick sparks with a tiny metallic device into a pile of tinder and kindling. \n\n\"Shall I assist with anything?\" Emma asked.\n\nOne of the larger sparks caught the tinder and River blew with cupped hands to turn the glowing embers into a bright candle-like flame in the hairy pile of dried moss and sticks. She fanned it a few times until the flame started to spread, then looked up at Emma to say, \"just get yourself comfortable Miss Finch.\"\n\nEmma crossed her arms and looked around at the small cabin. \"So, I take it we are here for the night,\" she said through chattering teeth.\n\nRiver stood and Emma looked up at her. She stood a half a head taller. Emma hadn't realized the disparity in their heights before, as this was really the first time, they had stood next to each other.\n\nRiver took off her deerskin coat and flung it haphazardly onto the small table nestled against the wall, the only table in the room, then flung her coonskin hat on top of the coat. She opened a large storage cabinet and rolled out a bearskin rug onto the ground, then took out two rolls of heavy wool blankets.\n\n\"Some creature comforts,\" she said. \"Speaking of which...\" \n\nShe reached a hand up into the top shelf of the cabinet, standing on her toes, and pulled down a large glass bottle full of amber liquid.\n\nShe jiggled the bottle at Emma. \"Nothing like a bit of the good stuff to warm your soul,\" she said.\n\nEmma frowned at her.\n\n\"Oh, here's your blanket. You're on the cot. I'll take the floor. 'less you prefer the floor.\"\n\nEmma looked at the shiny black bearskin rug on the floor. It didn't look uncomfortable. Nonetheless she unrolled the blanket on the cot and tucked it neatly into the dusty mattress. \n\n\"You wouldn't happen to have any clean linens, would you?\" Emma asked.\n\nRiver bit the cork off the end of the bottle, and it came off with a cheerful pop. She took a swig of the whiskey and wiped her mouth before answering.\n\n\"You have my sincerest apologies. Left the clean linens back in Livingston.\"\n\nShe offered some whiskey. Emma shook her head and stayed standing in front of the fire, which had grown into a cheerful, crackling glow that radiated a pleasant warmth that pushed out the cold dampness. With her riding skirt and her damp chemisette warmed, she felt serene. She watched as River, who found a seat at the small table, tossed her head back to drink another mouthful of whiskey.\n\n\"Well, there's not a whole lot else to do in here,\" River said. \"My recommendation is to get some drink in you. The time will pass quicker I reckon.\"\n\nEmma gave her a weak smile, then sat on top of one of her suitcases. \"I'm perfectly fine for now, but thank you,\" she said.\n\nRiver shrugged. \"Suit yourself,\" she said and took a small pocketknife out from her jean pocket and used it to carve mindlessly into the table, one hand resting on the bottle.\n\nEmma looked around again at the room and studied it with more intention. Dusted cobwebs in the top corners wafted gently in the draft created by the heat from the fireplace. The window was stained with frost and fog and the mad snowflakes pelted it, and bursts of wind rattled it. A pair of antlers hung from the wall by the door adjacent to a hanging lime-greened brass oil lamp. Beeswax candles were pushed down onto the horns of the antler and were unused. The room smelled of pine resin and damp soil.\n\n\"So, this is your hut?\" Emma asked.\n\n\"I built it, if that's your point. But others use it from time to time. I don't mind as long as its kept stocked with firewood and fatwood. That's the rule. And this is jus' one of a bunch of huts. Good for a predicament like we find ourselves in now. Necessary thing for the mountain.\"\n\nShe drank another swig.\n\n\"I see. It's quite cozy.\"\n\n\"So, you don't drink much, I take it?\"\n\nEmma shrugged and replied, \"I drink wine.\"\n\n\"Oh yeah? What kind of wine?\"\n\n\"Well, all kinds really. I'm quite fond of sweet wines. Like a good sherry.\"\n\nRiver raised an eyebrow. \"Don't think I've had sherry.\"\n\n\"It's a pleasant wine. And appropriate for the cold.\"\n\n\"Maybe I'll try and find one in Bozeman.\"\n\nEmma laughed.\n\n\"What's that laugh for?\" River said, joining her with a short chuckle. She spun the knife on the table.\n\nEmma held her mouth and shook her head. \"It's nothing.\"\n\nRiver grinned and responded, \"don't you think they have sherry in Bozeman?\"\n\n\"I'm sure they do. But it's a bit absurd, don't you think? A lady walking into a bar and ordering a sherry in Bozeman?\"\n\n\"Can't I walk into a bar and order a sherry?\"\n\nEmma walked over and sat in the chair opposite the table and rested her arms on the table and looked upon River with amusement.\n\n\"I guess I'm just not used to the notion.\"\n\n\"It ain't a big deal,\" River said. \"If the bars ain't friendly to women, then I guess they ain't friendly to my money neither.\" \n\n\"I find that something quite admirable about you, Ms. Langtry. That you would be so bold.\"\n\n\"Like I said, call me River. And thanks, I suppose. But you're misunderstanding Montana.\"\n\n\"How so?\"\n\n\"Well. Maybe it ain't appropriate for women to walk into a bar in London. Because you're all so prim and proper over there, maybe you think that's how it ought to be everywhere. But here in Montana, there are two rules. One -- can you handle a gun. And two -- do you got money. That's our version of prim and proper.\"\n\nEmma glanced at the whiskey bottle, and River noticed. She pushed the bottle towards her. \"Go ahead and give it a try. It ain't sherry, but it's damn fine whiskey.\"\n\nEmma's hand reached for it.\n\n\"Go on.\"\n\n\"Fine,\" Emma said and grabbed the bottle by the neck with one hand. She grabbed the bottom of the bottle with the other and strained with its heft as she carefully lifted it up to her lips. She squirmed as the biting, burning liquid went down her throat and filled her with an overwhelming warmth in her gut and in her lungs. She slammed the bottle back down on the table and coughed as she wiped her mouth.\n\n\"That is horrid,\" she exclaimed with a look of disgust on her face. \"How on earth can you drink that?\"\n\n\"Once you get used to it, there's nothing like it in the world.\"\n\n\"Ugh, I can imagine.\"\n\nRiver lifted the bottle up and drank a spirited round. Emma noticed briefly that River's cotton blouse had become unbuttoned at the top, and she had momentary glimpse of the curved, soft flesh of her breasts. She has perfect, motherly breasts, Emma immediately thought then blushed.\n\nShe took the bottle again from River and drank a longer draught.\n\n\"Atta girl,\" River said.\n\n\"I guess it'll have to do,\" Emma coughed.\n\n\"I knew you'd come around, Miss Finch.\"\n\n\"Oh, do call me Emma or Em, if it suits you. I think we can dispense with the formality now.\"\n\n\"I knew you'd come around, Em.\"\n\nThe night seemed to arrive all at once and without warning. The pale blue light turned into an inky black. The wind came stronger. River ran out quickly to check on the animals and rejoined Emma to work towards the bottom of the whiskey bottle.\n\n\"You ought to know, I've not once had too much to drink,\" Emma confessed, red in the face and her forehead dampened with sweat. She swayed as she sat at the table. She giggled and took a shot from the bottle. River laughed with her. \n\n\"Then I promise I won't tell your husband about this.\"\n\n\"You do not dare, this is our little secret,\" she said, then pointed a threatening, swaying finger at River. \"And he's not my husband.\"\n\nRiver laughed and drank, and the bottle slipped from her hand and landed right-side up on the table, making her laugh even harder.\n\n\"He's not?\" River asked, confused.\n\n\"Fianc\u00e9e,\" Emma slurred. \"There's a difference.\"\n\n\"Pretty much the same thing, ain't it?\"\n\nEmma shook her head. \"No, it isn't.\"\n\n\"Ok, you got me with a technicality. But really, you're still the same people before and after the ceremony.\"\n\n\"Its not just THAT,\" Emma said with a hiccup. \"We haven't... we haven't... consumma-\"\n\nShe clasped her hands to her mouth. Her eyes tightened shut and her cheeks blushed at the transgression she was about to commit.\n\n\"Y'all haven't done what now?\" \n\nEmma kept her lips tight and shook her head.\n\nRiver's face brightened when she arrived at the revelation She chuckled and said, \"oh, come on I mean, that's a normal state of affairs for your type ain't it?\"",
        "Emma put her hands on her hips. \"I beg your pardon. Your type? What do you mean your type?\"\n\n\"Your type. Like... I don't know. Fancy. Upper class.\" A sly grin grew on River's face. \"Pure.\"\n\nEmma scowled. \"You say pure as if it were an obscenity.\"\n\nRiver shrugged. \"Nah, nothing wrong with it.\"\n\n\"Of course, there's nothing wrong with it. Yes, I happen to still be pure... a virgin. As you so put it, it's a normal state of affairs for my type.\"\n\nEmma took another shot and stared vacantly into the fire, which had started to die off. River stumbled over to the log pile, grabbed a thick log and tossed it into the flames, causing a constellation of frantic firefly embers to swirl into the chimney.\n\nRiver caught herself as she lost her balance stumbling back to her seat at the table.\n\n\"Practicing for a tight rope act, are we?\" Emma giggled and hiccupped.\n\nRiver fell into her chair and swiped the bottle from Emma. \n\n\"Maybe I intend to join a circus. By the way, has anyone ever told you -- you got the most pretty laugh?\"\n\nEmma hid her face at the sudden compliment. \n\n\"No, I don't suppose anyone has.\"\n\n\"You mean your dear Percy never mentioned it to you? The man don't appreciate you, enough.\"\n\n\"You're too kind.\"\n\nPercy, of course, lavished her with compliments during their courtship, which she, of course, took with the necessary gratitude. But as the whiskey cleared her from inhibition like an ink cloud dispersing in water, she realized that River's simple compliment rang truer to her than any superlative Percy had ever adorned her with. It touched her heart.\n\nWhen River plopped herself down in her chair, Emma looked carefully upon River. River's face was relaxed with the warmth of the fire and her eyes danced with the flickering flames, and shone, despite weather-smoothed edges, with a vibrant wisdom. Emma could not help but think that a lifetime of that wisdom crackled in her soul. A wisdom earned from her life like how a wild horse learns how far the prairie stretched. It was a wisdom Emma knew she did not have, nor would ever gain with her carefully approved of and plotted out life. She was envious of it.\n\n\"So, how do you know he's the one?\" River asked. She spoke the question to the fire.\n\nEmma grasped the whiskey bottle with a tightening hand.\n\n\"It just feels right.\"\n\n\"But y'all never fucked. So how do you know?\" \n\nThe word made Emma cringe. \"Is that necessary for true love?\" She retorted.\n\nRiver turned her attention back to Emma, leaned forward on her chair and stared deeply into her eyes. \"When you have an intimate, physical relationship with a man. And really mean to. You can just tell, there's something special there that you can't just get from just being with him. It's the only way to discover to that 'god I'd die for that man' kind a love. Ain't no other way about it.\"\n\n\"...and you felt exactly that with a man ever?\"\n\nRiver shrugged. \"Maybe once or twice.\"\n\n\"Why haven't you married, then?\"\n\nRiver leaned back in her chair and twirled her hair in her fingers. \"Just because I love a man, why do I gotta marry him?\"\n\nEmma thought carefully about her answer. Knowing that her answer would only sound trite and na\u00efve to River, she nonetheless answered in the only way she knew how to answer such questions. \n\n\"Well of course love doesn't require you to marry. You love your parents for example. Or your children. But marriage is a special commitment. It's a promise to God that you will share a life with another person, and to raise a family. And it's not just about love. It's also an adventure. A beautiful adventure that you get to share with someone else.\"\n\n\"And to have someone you can count on for sex.\"\n\nEmma blushed again. \"Yes, I suppose that's true. If that is your requirement. Anyways, this conversation is bit much for me, even with strong alcohol. What time is it? Is it midnight yet?\"\n\nRiver reached into her pant pocket and pulled out a pocket watch. She shook it a bit and said, \"I reckon its midnight right about now.\"\n\nEmma smiled. \"Then I'll be meeting Percy's family for the first time today.\"\n\n\"Merry Christmas by the way,\" River said.\n\n\"And Merry Christmas to you.\" Emma bowed her head. \"I'm sorry I don't have a gift for you.\"\n\n\"That money to take you to Bozeman works jus' fine for a Christmas present.\"\n\nHaving run out of conversation, Emma joined River in watching the fire. The whiskey made the fire cozier. She sank into her chair and leaned her head against the cool log wall as she watched the flames lick the firewood. It was not a hotel in Bozeman, but there was a sense of real safety and security of the sight and smell of a roaring fire in a cabin in the middle of a snowstorm. And River gave her a sense of safety.\n\nRiver broke the short, pensive silence with another question. \"So, what did you study at Oxford?\"\n\n\"Well, law, I suppose.\"\n\n\"Like Percy?\"\n\nEmma nodded. \"Yes, like Percy.\"\n\n\"that's incredible. So you're going to practice law too?\"\n\nEmma looked on her with amusement. \"Don't be silly. Oxford does not confer degrees on women.\"\n\n\"Why do you need an Oxford degree to practice law in Tacoma?\"\n\nEmma laughed. \"Because I lack the credentials to do it.\"\n\n\"But is it what you wanna do?\"\n\n\"Not in Tacoma.\"\n\n\"... but you wanna practice law.\"\n\nEmma sighed and looked on River half-flustered and half-sympathetic at the honest naivety.\n\n\"What I want to do does not matter!\" she said with an impatient slur.\n\nRiver frowned. \"Well, why the hell not?\"\n\n\"What I mean... What I mean to say is that, ugh, it's not that important. It's not my place to do that sort of thing... Where's that whiskey?\"\n\nShe motioned clumsily for the whiskey bottle from River and took a sip. \"Oh this is better with every sip. But now where's the water. The water will go well with it.\"\n\nRiver pointed up at the wall behind her. Emma spotted the flask hanging by the strap from a nail and tried to reach for it while leaning back in her chair. She yelped as she fell backwards onto the floor and laughed with her legs hanging up in the air and her skirt over her head. River jumped out of her chair and lifted Emma up to her feet with a hand.\n\n\"I reckon the chair has had a bit too much to drink,\" Emma quipped. \n\nThey heaved in drunken laughter together for a long while, and when the laughter died down, they stood there with their eyes gazing into the others', looking from one to the other. Their smiles disappeared from their faces. The storm howled and whispered between the dark pines outside and sounded much like the roaring fire inside. Emma couldn't help but think once again of River's beauty, and she saw that River's eyes contained similar thoughts.\n\n\"Oof, my head is spinning,\" Emma breathed. \n\nRiver swallowed and responded, \"yeah, mine too.\"\n\nEmma looked down and found River's hand still holding her's. Her hands were not at all like a man's, as she might have thought. They were smooth and fit delicately into hers.\n\n\"You're still holding my hand,\" Emma said.\n\nRiver released her clutch and shook herself out of her trance and grabbed the flask from the wall and handed it to Emma.\n\n\"Here's your water,\" River said. Emma took a sip. River went back to sit at the table.\n\nWhen Emma was done with the water, she hung the flask back up on the wall and sat back down. After a momentary hesitation, she said to River, \"I would love it if you joined us for Christmas dinner.\"\n\n\"Don't be ridiculous.\"\n\n\"No, I really mean it. Join us for Christmas dinner. It would make me happy if you did. And Percy's family is very generous. They would love to have you too.\"\n\n\"I'm not looking for anyone's generosity. Besides, I enjoy my own company.\"\n\nEmma smiled pitifully. She swayed as she sat in her chair and hiccupped.\n\n\"So, what's next for you in life, River?\"\n\n\"Head back to Livingston.\"\n\nEmma frowned at her. \"I mean what do you want to do for the rest of your life, silly woman. Surely a free spirit like you mustn't be doing this for the rest of her life.\"\n\n\"What's wrong with doing this for the rest of my life?\"\n\n\"Oh nothing, if it makes you happy.\"\n\n\"It makes me pretty happy.\"\n\n\"That's good. But what is your dream? If money was no issue. If you could go anywhere. Anywhere in the world.\"\n\nWithout hesitation, River responded, \"Hong Kong.\"\n\n\"I'm sorry?\"\n\nAfter finishing a sip of whiskey, River elaborated, \"I'd travel to Hong Kong if I had the wherewithal to do it.\" \n\n\"That is an exciting ambition. Why would you not have the wherewithal? You should do it.\"\n\n\"Hah. I wouldn't know where to start. Now, how in the hell do you get to Hong Kong from Montana?\"\n\n\"Well. You start by taking the train to the west coast. To a port city like Tacoma. Or Seattle. Or San Francisco. Then you take a steamship from there to Hong Kong.\"\n\n\"That's all I got to do?\"\n\n\"That is, in a nutshell.\"\n\n\"Shoot. That ain't hard. I can do that tomorrow.\"\n\n\"Indeed.\"\n\n\"But then who's gonna look after my horses? And Annabelle?\"\n\n\"I'll look after your horses. And Annabelle.\"\n\n\"You'd do that for me?\"\n\n\"I ventured to invite you for Christmas dinner with a family I haven't met yet. Of course, I would look after your animals. But perhaps I'd join you on your trip to Hong Kong. Then... we'd have to find someone else to look after your animal.\"\n\nRiver perked up in her chair and a smile grew on her face. \"Wouldn't that just be swell,\" she said. \"I mean, truth be told, I didn't hold you in the highest regard when I first met you. But you're growing on me Miss Finch... Em. Can you imagine? Me and you going to Hong Kong.\"\n\n\"Sure. I'll just tell Percy to skip the Christmas dinner. And the wedding - that would have to wait as well. I wonder if we'd make it to Hong Kong by the new year.\"\n\nRiver laughed.\n\n\"So besides seeing Hong Kong, what other dreams?\" Emma asked.\n\nRiver's face furled in thought.\n\n\"Maybe write a book.\"\n\nEmma, halfway through drinking from the half-empty whiskey bottle, snorted into the bottle. Embarrassed, she responded, \"I am dreadfully sorry.\"\n\nRiver did not seem to mind or notice. She continued on, \"I'm partial to reading books, as you already know. My aunt was a book lover and she would read to me when I was little. I still have all her books. Anyway, there's this fella by the name of Mark Twain who's got a way of writing about his travels that make me envious. And he's got a good, funny way in tellin' these stories. It gets me excited. I figure I'd live like that man does. Maybe I'd travel. Maybe I'd go to Hong Kong and write a book about it.\"\n\nThat warmed Emma's heart. She replied softly, \"I think you ought to do just that.\"\n\n\"Come again?\"\n\nEmma spoke up, \"I think you should go to Hong Kong. And write about your travels.\"\n\n\"I ain't any good at writing though. Not like that Mark Twain fella anyways.\"\n\n\"Nonsense. I'll help you write your book.\"\n\n\"Is that a promise?\"\n\nEmma nodded.\n\nRiver laughed again deeply. \"Look at us. A couple of drunk women talking about going to Hong Kong and writing books. What do I know about Hong Kong, or writing books?\"\n\nTheir eyes met again in a moment of quiet. But the moment was interrupted by a sudden cracking of wood and crashing shattering of glass and a violent din of winter that was like a thousand hungry wolves right in the cabin.\n\n\"Aw hell, I knew that would happen someday!\" River shouted. \n\nA torrent of snow filled the room in a whipping whirlwind. The fire turned frenzied and threatened to go out. A tree branch had shattered through the window and let in the cold chaos.\n\nEmma scrunched up onto the chair against the violent unleashed wilderness in their small haven.\n\nRiver jumped to her feet and ran to push the pine tree back out the window to no avail.\n\n\"Come on Em, help me here with this branch! We gotta get this window all sealed up.\"\n\nEmma ran to River, and, as hard as she could, she pushed against the tree branch and the bristling wet needles.\n\n\"It won't budge!\" Emma shouted above the howling din.\n\n\"Ok you push here, I'll go to the other side and pull,\" River shouted back.\n\nShe ran out the cabin door, then Emma felt a tugging against the gnarled branch.\n\n\"Push!\" she heard River shout from outside.\n\n\"I'm pushing!\" she yelled back and pushed with all her heaving heart.\n\nIt took all her strength, but the branch moved and she as she felt it slide out the window, an invigorating strength moved her to push harder until it was fully disappeared from the window.\n\nBut with the tree branch gone, the blizzard only came through more fiercely, coating the room in cold, wet slurry.\n\n\"What do we do now!\" Emma shouted.\n\nRiver did not answer, but came back in a few moments later, hoisting with both hands' boards and a hammer, and nails in her mouth.\n\nShe spit the nails onto the floor and dropped the boards and said, \"come on, let's get that window done.\"\n\nEmma stood frozen as River went to put a board up against the broken window.\n\n\"Hold this board up for me while I hammer it in.\"\n\nEmma nodded and hopped over to the window and did as she was told, holding the board up precariously, while River grabbed a couple nails, and swiftly pounded them through the board into the window frame.\n\n\"Ok, grab the next board.\"\n\nEmma put up the next board and River pounded nails into that one. When that one was secure, they worked on the next. Snow blew in ceaselessly. Emma felt her clothes soak through, and her hair dampen with the onslaught. She held her eyes closed as she held the board up while River hammered. Despite the sobering cold, her head was numb with whiskey, and her stomach and lungs burned with a slow whiskey burn and this made her excited. The blizzard invigorated her soul like a jump into an ice-cold lake.\n\n\"Last board!\" River demanded. Emma wiped the slurry of melted snow from her face to clear her vision and grabbed another board and posted it up against the window, holding it as assertively as she could against the buffeting wind.\n\nWhen River hammered in the last nail into the last board, they collapsed into the slush that had collected below the shattered window, both soaked to the skin.\n\nThe biting cold air that had blown in from the bitter storm still lingered in the sealed cabin, but the adrenaline and intense physical exertion kept them panting and sweating hard.\n\nThe wind continued to howl and buffet the cabin walls, but they were safe from the elements.\n\nEmma brushed her water-matted and frizzled hair from her eyes to look at River. River squeezed the water that weighed her hair down. Emma clapped and laughed with the feeling of triumph course through her as she sat in the slush pile, which had started to numb her butt. River's face twisted into dismay when she noticed a growing crimson splotch in the side of Emma's chemisette.\n\n\"You're bleeding!\" River exclaimed.\n\nEmma looked down in surprised amusement. \"Indeed.\"\n\nRiver crawled over to her. \"Let me take a quick look,\" she said. \n\nShe lifted Emma's left arm up and inspected the red gash in the linen.\n\n\"It really doesn't feel awful.\"\n\n\"take your top off.\"\n\n\"I beg your pardon?\"\n\n\"I need to check the wound.\"\n\nEmma did as she was instructed. She unclasped her chemisette quietly, revealing her loose white undergarment. River tossed the chemisette aside, then lowered the straps from Emma's shoulder, causing the cotton garment to fall to around her waist. River found a piece of loose cloth, wadded it into a ball and pressed it against the wound to soak the blood. Inspecting it, River said, \"yeah, it's not bad.\" \n\nEmma watched as River pressed the blouse harder against the wound. \"Just need to stop the bleeding and it'll be fine,\" River said calmly.\n\n\"You've a lot of experience with this sort of thing?\" asked Emma.\n\nRiver shrugged. \"Might have a scar or two. Hey, let's go sit over by the fire and warm you up,\" she said and guided Emma over to the fireplace where the log fire roared and filled the room with orange light.\n\nThey sat cross-legged, opposite each other in front of the fire, River with her hand still applying pressure against Emma's naked ribcage. Emma looked up and noticed the light playing with the shadow against River's sharp face. Flames glinted in her eyes. Her face was streaked with dirt. Emma raised a hand to wipe the dirt streak away. River flinched.\n\n\"You have some dirt on your face,\" Emma explained \n\nRiver smiled at her and let her wipe away. She closed her eyes and leaned her cheek into the hand and sighed.\n\n\"Your hand is warm,\" she said.\n\nEmma pulled her hand back.\n\nRiver looked to the floor timidly. Emma's chest fluttered with energy and all at once an instinct contrary to every moral fiber within her welled up as a pounding heartbeat. As with a snowstorm, she lacked power to subdue it. River dared to turn her eyes back up to meet Emma's and they sat in silent realization of a shared desire. \n\nRiver uncovered the wound. The bleeding had stopped, and what remained was a gash an inch across, but shallow. \n\n\"I'll get some dressing\" she said and went over to her saddlebag. \n\nEmma sat with her arms tightly wrapped across her naked breasts. She gazed secretly at River's body. The jeans curved with her hips and with the taut muscles of her thighs and her calves.\n\nHer blouse, wet from working in the snow, clung to her back and to the curve of her spine and the sharp edges of her thin shoulder blades like a thin veil. River was not prim and proper. Her beauty was of raw feminine form equal to the best fantasies of renaissance poets. \n\nThe flames from the fire licked her with a painful heat. Emma rubbed her arm where the heat was unbearable.\n\nRiver came back with a clean square cloth, a bandage roll, and a chunk of poultice which she moistened by chewing on it a bit and rubbing it between her fingers. Gently, she applied the poultice like a paste into the gash, then wrapped the cloth and the bandage around Emma's ribs just beneath her breasts as tight as a corset.\n\n\"There we are,\" River said with a smile when she finished. Emma touched the bandage over the wound. She felt no pain there. She looked back up to River and said, \"thank you.\"\n\nRiver nodded. The cabin walls stood sturdy against the raging blizzard. The burning log snapped, and ember sparks spewed upwards into the chimney. They were at an impasse. Words were meaningless. The secret night allowed nothing more but action. Emma dropped her arms to her lap so that her breasts were bared to River.\n\nRiver responded in the way that Emma anxiously hoped she would. She reached a hand up. A finger floated hesitantly towards the curving skin. Emma closed her eyes and stuck out her chest to signal permission and felt the timid touch against her nipple. The finger grazed the nipple and traced a line. A touch of sexual curiosity - the first that Emma had ever experienced. She gasped at the electric shock of the cold finger against her sensitive skin. River traced the finger along the curve of her breast, then to her face, where she cupped her cheek in the cool palm.\n\nEmma looked to River again and saw in her eye's excitement and fear, as if she were about to dive from a cliff to the ocean. Emma placed her hand over River's, to assure her of her action, then leaned in further to bring their faces closer. River leaned in as well, so that their lips paused with only the warmth radiating from their faces and their mouths between them.\n\nThe pause served to give a moment to retract and reject as a lifeboat from this frontier if needed, but also to savor the unbearable, momentary excitement before the complete release into the forbidden.\n\nNot able to bear it any longer, Emma plunged, pressing her lips against River's, clasping her hands against the back of River's head, twining her fingers with the thick wet strands of blonde hair and, with her lips, feeling the softness of River's lips. The kiss started nervously but grew passionate with breathless enthusiasm. It was messy and blind. River proceeded to kiss down Emma's neckline, then her shoulders and started to unbutton her own blouse.",
        "When Emma noticed the shirt coming undone, she pulled back and watched River with suddenly fearing eyes. She went to speak, but no words came out, though she knew her lines. A fierce, prudish thought invaded her drunk mind: this needs to stop now. \n\nHaving undone the last of her buttons, River let her blouse come open, revealing her pink breasts and her hard, pink nipples. They filled Emma with a rippling excitement. She wanted them but wanted also to stop herself from wanting them. River sensed this rending battle in Emma's mind and joined the side she knew to be winning. She placed a hand on the back of Emma's head, and drew it down so that Emma could taste them. It was all she needed to cast off the lines of morality. She kissed the breast in one place, then in another. River moaned in pleasure from the sensation of the tender wet lips. She arched her back and pressed her hands against Emma's head to feel her mouth more. Emma kissed it with her tongue. She drew her tongue across the skin until she reached a harden nipple. It was a perfect, motherly breast, she thought as she sucked on the soft flesh.\n\nShe tried to imagine the intensity of the pleasure that River must feel as she grazed the sensitive skin gently with the hardness of her teeth and the sucking with her mouth. She wanted to feel what River felt.\n\nWhen she was finished with one breast, she moved on to the next, and when she was done with that, she moved downwards, kissing with her mouth towards River's thin midriff. River writhed on the bearskin with every kiss.\n\nWhen she arrived at the top of the pants, Emma attempted to remove them but fumbled with the belt. River helped her by whipping the belt off with a snap and unbuttoning the top. Emma did the rest, sliding the jeans down River's legs. She felt the sound that the wet jean pants made as they slid down River's legs like a searing electric sizzle between her thighs.\n\nShe moved to her own riding skirt. Neither had yet spoke, and both were breathing hard, as if to touch each other's bodies was precious fresh air.\n\nFailing at the buttons of the skirt, Emma simply ripped the buttons loose and the buttons fell with a plucking ripping sound from the top of the skirt. The skirt fell loosely around her hips. \n\nHer undergarment came next. River pulled it down over Emma's hips and the ensemble came crumpling down to her knees to reveal her pale tufted vulva.\n\nRiver reached out and with her fingers, touched the skin of her inner thigh. The cool touch caused Emma to whimper. As the finger raked upward, Emma tightened her legs together. The fingers arced around the edge of her vulva to the top and down into the pubic hair and then, into the top of the slit to touch her swollen clitoris. Emma gasped and flinched as River gently rubbed. She rubbed it with her thumb and her forefingers plunged gently into her.\n\nShe squeezed her arms against her breasts and her hands clutched at her hair, and she bit her bottom lip in overbearing pleasure as River rubbed. She moved her hips with the rhythm and closed her eyes to extract the most pleasure from River's fingers.\n\nShe broke the hot silence with a breathless whisper. \"I never...\"\n\nRiver responded, also in a whisper. \"Yeah. Me neither.\"\n\nEmma looked down at River. Her coffee-brown eyes flickered with the spitting flames deep with lust. Her lips were wet apples. Her hair turned auburn in the red-orange glow like autumn maple. A woman from the garden put there by the Lord. Emma moved her hips to feel the warmth of her hand against her clitoris, and inside her vagina, deeper, to rub against her inside, rubbing until the desire to taste her and to feel her skin against her skin flooded her like madness.\n\nShe fell atop River on the bear rug. Their breasts squeezing against each other, their midriffs and their mons pubis rubbing. Their legs entwined. Hands grasping. Their lips touching. Their faces touching. Saliva glistening on cheeks as they held each other so closely that their bodies were one.\n\nEmma kissed down River's neck, and then her shoulder, causing releases of moans. She then went down. Below the breasts. Below the navel, towards the tufted mound, and opened her mouth to taste the forbidden fruit. River moaned louder and spread her legs to open herself to Emma's incursion. Emma went straight to the clitoris with her tongue. River clawed at the back of her head with desperate hands for more of her tongue and Emma gave her more. She slid her fingers into the vagina and felt the muscles squeeze in pulses around her fingers.\n\n\"Oh god!\" River cried and her thigh muscles and her abdominals tightened. This encouraged Emma to continue. She plunged deeper with her fingers, and sucked harder on River's sweet, sticky flesh until River erupted and screamed, and pushed hard in a moment of extreme ecstasy, and then relaxed all her muscles at once, sinking into the rug.\n\nWhen it was done, Emma thought only to stand up to drink water. She was thirsty and the water flask was singularly on her mind. She stumbled trance-like to the flask hanging by a nail on the wall of the cabin. She quenched her thirst then stood unsurely and naked above River while River quivered restlessly on the bearskin from her aftershocks. Spotting the whiskey bottle sitting lonely on the table, she drank from that as well. The whiskey went down her throat in a cool, cleansing burn and she savored the bitter flavor. It paired well with the taste of water, and the taste of River.\n\n\"What now,\" she muttered.\n\nRiver answered, \"you just stand right there,\" and she got onto her knees and crawled to where Emma stood to place a multitude of quiet kisses on her abdomen.\n\n\"Turn around,\" River whispered.\n\nEmma obeyed.\n\n\"Now bend over.\"\n\nEmma obeyed again, placing her hands on the table.\n\nShe felt first the warm breath and River's warm, wet hair against her soft skin, then the wet touch of River's mouth on the fat of her thighs.\n\nHer knees weakened as she felt River's tongue reach in between her thighs and between her labia and she yelped at the sensation. It was like nothing she had ever felt before. No one had ever explained to her the pleasure of another woman's touch. No one had explained raw pleasure. But they warned her for years of carnal sin. She acted sinful now, and it felt like heaven.\n\nShe collapsed downward onto the table and grasped onto the whiskey bottle for balance as the earthquakes of passion surged through her. Sweat dripped from her forehead onto the tabletop. She screamed as she felt River's tongue divide her. The rapturous wave came at her unrelenting like the snowstorm against the cabin, squeezing her on all sides, wanting her to burst like a ripe fruit. She wanted River to taste her for all that she was worth squeezing. Her face scrunched with excruciating pleasure.\n\n\"Yes!\" she screamed like the shrill winter as she felt tongue inside of her. Her grip tightened on the bottle as the rumbling ecstasy came through her to gush outwards. She screamed once more with her quaking eruption and she crumpled down to her knees and onto her back to meet River on the soft bearskin rug.\n\nThey held each other in their rapture. Squeezing each other. Running arms against each other.\n\nNever had Emma felt closer to anyone. Not even to Percy. Percy was her love eternal, of course. But this was something more. It was a primal closeness.\n\nRiver scraped a hand across her naked leg. Emma sighed and watched the calm fire spin. They scrunched into each other. For once, it seemed, Emma's mind was an empty shell. It was a good feeling because often her shell felt filled with busy nervousness. And now it was clean and empty. The storm outside calmed like a dog at the end of the day curling into warmth and sound sleep.\n\nRiver kissed Emma on the back of her head and hugged her tight. The fire hugged them both.\n\n\"What now,\" Emma asked with a wavering voice.\n\n\"Bozeman by Christmas,\" River responded.\n\nThat was not what she wanted to hear, Emma thought at first, but then she thought, with a coldness brought on by the vanishing whiskey spirit within her: that's what she ought to hear. So, she closed her eyes, and put a smile on her face, and pressed her back against River's body. Worried thoughts shot through her mind like hurried, inconspicuous fish for a long while, but eventually, she drifted deep into River's warm security and slept dreamlessly.\n\n~~~\n\nThe next morning, Emma woke in River's arms. She was sober and without a hangover. Her head was clear, and her body rested. They were both wrapped in a wool blanket, which River must have pulled over them in the night. It itched her skin, but she was comfortable there feeling River's body tightly against hers, and feeling her breathing, and her heartbeat.\n\nThe fireplace glowed with ashen embers, and the smell of pine smoke filled the room. Sunbeams snuck through cracks in the boards that they had nailed to the shattered window.\n\nThe sexual adventure of the night came to Emma in vivid pictures. It occurred to her that it should have been calamitous to her life, but with the morning soberness, no emotional outburst came. She found her impartial reaction odd at first but thought that perhaps the emotional outburst did not come because of how apparent it was that the night could be buried. That she could carry on with the rest of her life because River would not be in her life again after today, just as she wasn't in her life before yesterday. She only wondered whether she could bury that part of her soul as well.\n\nBut then River would be gone from life forever. The thought hit her like a heavy weight to the chest. She turned to face River to watch her sleep. There was a peace on her face. She watched until River opened her eyes and yawned and smiled at her.\n\n\"Good morning,\" she whispered.\n\nEmma smiled back weakly. \"Good morning,\" she replied.\n\n\"Quite a night,\" River said.\n\n\"Mmm.\"\n\nRiver sat up and stretched out her arms then stood up slowly. She seemed unshaken. Emma watched from the rug as River moved about the room in the nude. Her firm thighs rippled as she walked. She stoked the fire and placed another log in, then when the fire came alive, she opened the cabin door.\n\nA fresh layer of snow hung half-way up the door. A bright blue morning illuminated the cabin with a pale, smokey light from the doorway.\n\nRiver breathed in the fresh mountain air. \"The storm has passed,\" she declared.\n\n\"Will we be able to make it to Bozeman with all that snow?\"\n\n\"Sure. It ain't too bad.\"\n\nEmma secretly hoped that River would say no that they would have to stay longer in the cabin, that they would be together for another night.\n\nRiver pushed against the top layer of the snow in the doorway with her hand. \"It's a dry snow. It'll be easy to travel through, I reckon.\"\n\n\"I see,\" Emma replied.\n\n\"Alright, I'm gonna go check on the animals, and then put some breakfast on. Go ahead and get dressed, and we can be on the trail before midday, and in Bozeman by sundown at the latest.\"\n\nRiver and Emma dressed. Breakfast was warmed biscuits drizzled with a thick chestnut honey and dried summer berries softened in melted butter over the fire.\n\nThe sun heated up the day. Steam came off the top of the fresh snow and snow fell from the pine boughs as River and Emma fixed their saddles onto the horses. When they were set to leave, Emma turned to River and said, \"River, about last night...\"\n\nShe sighed. There were two competing thoughts that she wanted to articulate. The first, that the night should be buried forever. The second, that she did not want River to disappear from her life. The taste of her still lingered on her tongue, and she wanted to taste more.\n\nRiver didn't give her a moment's chance to decide her next words. She shuffled over through the deep snow and embraced Emma and kissed her.\n\nEmma turned her face downward. River lifted her chin up with a finger and kissed her again.\n\n\"You'll forget all about me when you're with your fianc\u00e9e and eating your Christmas ham, and drinking your sherry.\"\n\n\"I don't think I'll ever forget you.\"\n\n\"I suppose you're right. You never forget your first time.\"\n\nEmma laughed. \"It's not just that.\"\n\nRiver responded, \"It'll have to be,\" and went to her horse.\n\nThey left the hut and back to the trail by the railroad, which could not be seen on account of the snow, but they could tell where it was by the clear cut in the dense evergreen. The horses pushed through the light snow easily, as River had said, and they made their way through, pushing through like a fleet of ships down the mountain.\n\nLonely winter songbirds disturbed the mountain silence to sing echoes from the deep spruce, and every so often the horses would disturb mountain grouse, causing them to fly up from the snow. Emma tried to keep her mind busy with the sounds of nature and the grandeur of the mountain valley, but it was hard not to linger back to thoughts of River.\n\nThey came around one last bend and saw Bozeman in the distance, a glittering square of a city in the flat prairie below them.\n\nThe sun was low on the horizon when they arrived at the city. The city smell -- the burning coal smell, and the smell of horse and wet hay, and the city sounds, the laughing men, the sounds of bells and hammers and the shoveling of snow from the fronts of shops invaded Emma's senses. Even for Christmas Eve the frontier town was lively and jarring to her.\n\nRiver called to her, \"what hotel was it again?\"\n\n\"The Imperial, I believe.\"\n\nRiver nodded. \"That'll be on Central Avenue. We'll be there shortly.\"\n\nWhen they were there, they tied the animals to a nearby post, and a hotel porter came out to help with the baggage and word was sent to Percy about her arrival. The hotel had a grand, luxurious look about it, with tall Italian columns and Italian motifs, a copy of the architecture Emma once saw in Venice. Electric lamps adorned with wreaths and red bows lined the entrance. \n\nA man in top hat and a long coat and with graying sideburns, an employee of the hotel, came out to greet them and inform Emma that her fianc\u00e9e was on his way down and proposed that she head to the lobby to have a hot tea. As she started to follow him in, she spotted River feeding an apple to Annabelle at a horse trough and went to speak to her.\n\nThe evening light casted a golden aura and long shadows through the city streets. Emma sighed deeply as she approached River. River turned to her and winked.\n\nEmma stood politely and said, \"Miss Langtry. I owe you a debt of gratitude. Well, I owe you money. But I... well... thank you for everything.\"\n\nBefore River could reply, a voice rang out from the lobby. \"Emma!\"\n\nEmma swung around to find Percy running towards her. \"My sweet, sweet Emma!\" he shouted.\n\nWith a wide grin on his face, he embraced Emma tightly and lifted her off her feet.\n\nPercy kissed her cheeks exuberantly, and said, \"I got your telegram. You had us so worried when you didn't show last night. Father had to reassure me you would stay in Livingston until the storm had passed. I had half a mind to go up in the mountain to search for you myself. But here you are. What a pleasant surprise!\"\n\nHe spotted River from the corner of his eyes and turned his attention to her. \"And you must be the one that brought Emma. Thank you very much for bringing her all in one piece.\"\n\nRiver nodded and responded, \"don't know about all in one piece but I can assure you, nothing's missing.\"\n\nPercy burst into laughter. It was a gracious laugh. He took out his wallet from the breast of his jacket and thumbed banknotes from it.\n\n\"How much do we owe her darling?\"\n\nEmma glanced sheepishly at River.\n\n\"I've already paid her a hundred dollars.\"\n\nPercy shook his head. \"Well, for your trouble.\" He counted the money and held it out to River. \"Another hundred.\"\n\nRiver shook her head. \"You really don't...\"\n\nPercy pushed the money into her hands and clasped her hands shut with the banknotes in it. \"I really must insist. To do this for us. On Christmas, for heaven's sake, when you could be with your own family.\"\n\nRiver took the money and said, \"thank you. It's really too much but thank you.\"\n\nPercy smiled at her and held Emma tightly to his side.\n\n\"So, Miss Langtry, forgive me for being so nosy, but do you have any plans for Christmas? Do you have family to spend it with in Bozeman?\"\n\nRiver shook her head.\n\nPercy looked to Emma and then back to River and said as if it were obvious, \"you must spend it with us here.\"\n\nRiver laughed. \"Don't think that's a good idea. Nothing personal. I'm just more comfortable in my own company.\"\n\n\"She's a free spirit,\" Emma said.\n\nPercy smiled and said, \"well, I must really apologize again for pushing, but where are you lodging for the night then?\"\n\n\"I haven't figured that part out yet, but they always got room for me down at the... at the...\"\n\n\"We'll put you up here.\"\n\nRiver frowned.\n\n\"I promise we'll stay out of your business.\"\n\nEmma added, \"Please Miss Langtry. It's Christmas. Allow us to be generous. Percy here won't have it any other way.\"\n\nPercy nodded. \"That's right.\"\n\nRiver sighed.\n\n\"Alright, if you're going to twist my ankle.\"\n\nPercy clapped once and exuberantly shouted at the hotel receptionist to find a room for River. A room was found. \n\nIt was dark when Percy and Emma arrived with River to the foot of her hotel room door, which was at the very end of the red-carpet hallway on the same floor as Percy's family. Percy once again urged her to join them for dinner, and River once again politely refused.\n\nWhen it was time to say goodbye, Emma clutched River's hand in hers and said, \"Miss Langtry, it was an immense pleasure. You have a Merry Christmas, and a safe trip back.\"\n\nShe was careful not to look into River's eyes. River squeezed her hand. She squeezed back then turned to walk with Percy to his room.\n\nThat night, they had Christmas dinner in Percy's parents' suite. The room was dressed up in nice Christmas decorations. A twelve-foot fir for a Christmas tree stood by the fireplace blushing with glass Christmas ornaments and candles. The table set out by the hotel's kitchen staff brimmed with rich food - roast beef, roast potatoes with rosemary and butter, browned turkey, and cranberries.\n\nPercy introduced Emma to his parents for the first time at the dinner - George and Mary. George was short and plump like the turkey and wore tiny spectacles that twinkled with the candle glow. Mary was tall, and graceful and wore a satin green tea dress. They were both full of joy and charming people, and this relieved Emma.\n\nThe conversation went immediately to Emma's harrowing overnight journey through the mountain pass, and the family was delighted to hear it and made light of it.\n\n\"You should have seen her. If I didn't know any better, I'd swear my Emma was being escorted down the mountain by Calamity Jane herself.\"\n\nGeorge chuckled and spilled a bit of wine on the table skirt. Mary's eyes went wide with excitement and she touched Emma's arm and said, \"this place will turn you into a savage if you're not careful,\" and drank her wine. Her face flushed.\n\nEmma smiled at her and responded, \"Oh River is not like that at all. I'll have you know that despite her strange appearance, she's a true gentlelady. And an intellectual by the way. She's a lover of literature.\"\n\n\"And she's a quicker draw than every gambler and fur trapper in the state,\" Percy added in jest. George chuckled deeply, and Mary giggled. Emma gave Percy a light-hearted slap on the arm with a 'tsk' and laughed along for posterity. \n\n\"I will say that she was -- you'll forgive me for saying this Emma - a positively handsome woman,\" Percy said.\n\nEmma responded with a nod in agreement, \"she was certainly something.\"\n\nMary turned to Emma and asked, \"did you say she was without a husband?\"",
        "Emma nodded. Mary held her heart and said, \"oh the poor girl.\"\n\n\"A woman here ought to have a husband,\" George said with a pitying shake of his head.\n\n\"Or at least have Christmas dinner with us,\" Mary added. \"Just the thought of her alone tonight. It breaks my heart.\"\n\nEmma's heart ached too. She pictured River sitting in her room. Or alone at the saloon with haggard men and whiskey. The subject matter was too much for Emma.\n\n\"She's a strong woman who seems able to take care of herself. Anyways, why don't we open gifts?\" she said, doing the best from keeping her voice from quivering.\n\n\"Darling, in the middle of dinner?\" asked Percy at the odd suggestion.\n\nGeorge shrugged and said, \"why not? Now's a good a time as any. We're all still sober and in a festive mood.\"\n\nEmma brought gifts that she had packed from England for the parents and for Percy. They were almond Christmas crackers from a popular London confectionary. Emma received a wool shawl from Mary and a delicate and impossibly ornate diamond necklace from Percy. He draped it around her neck.\n\n\"Don't you look just like royalty,\" Mary said as she admired the glittering jewelry.\n\nIn that moment they heard singing voices outside the window.\n\n\"Carolers!\" Percy said. He jumped from his seat and ran to the double door that opened out onto the balcony. Like an excited child, he shouted, \"come watch with me,\" and swung the doors open.\n\nThey joined him at the threshold of the balcony. Emma nestled into Percy's warmth and he wrapped his arm around her as they stood and watched the carolers under the glow of the lampposts in the snowy street. The other hotel guests joined to watch from their rooms. The carolers sang 'Away in a Manger' with a slow cadence.\n\nEmma glanced over to where River's room was but did not see her standing on her balcony.\n\nWhen the carolers disappeared, the family finished their dinner and retired to the hearth. Mary poured hot wine and Percy smoked a tobacco pipe they all sat quietly to listen to the crackle of the logs. George fell asleep in his armchair, and Emma rested her head on Percy's shoulder. The fire helped her thoughts wander back to the cabin. She thought of the whiskey. And the shattered window. The cut on her rib. And the kiss. The kiss that led to the discovery of the wonderful touch of another woman and to ecstasy. She then thought of sherry. That River never had sherry before. And that thought turned into an idea. A conspiracy to see River once more. She ought to be taken some sherry, Emma thought.\n\n\"Do we have any sherry here?\" she asked to no one in particular.\n\nGeorge rustled awake to the word 'sherry'. Mary raised an eyebrow at her and replied, \"I believe we do. Are we in the mood for a glass?\"\n\n\"No. I want to give a gift to River. She told me she never had sherry and would've like to try one.\"\n\nPercy went to the liquor cabinet and grabbed a bottle and handed it to Emma.\n\n\"That is a decent one. Give her our regards.\"\n\nEmma kissed him on the cheek and said, as if she had never said it before, \"Percy, you're a good man,\" and nearly ran out the door.\n\nMary called out after her, \"shouldn't you wrap that, dear?\"\n\nRather than give her an answer, Emma opted to have pretended to not hear her. She marched down the hallway.\n\nWhen River opened her door, Emma's breath stopped. River wiped a strand of hair from her face and smiled at her. She wore a loose linen blouse that glowed white in the blue shadow of the dim room. She looked like an angel.\n\n\"Is that for me?\" River asked.\n\n\"It's sherry.\"\n\nRiver motioned her into the room. The stove was not on, so the air was cold. Emma placed the sherry onto a dresser drawer and faced River.\n\nRiver said, \"well... should we have a drink then?\"\n\nIn response, Emma walked towards River and put her hands on her face and kissed her lips with a long kiss.\n\nRiver returned the kiss and swung the door shut with her foot. She pushed Emma backwards towards the bed and they both fell onto the bed together, kissing still.\n\n\"Drink the sherry tomorrow. I have to leave shortly, or they'll get suspicious,\" Emma said between kisses.\n\n\"Then you'll leave shortly,\" River replied. She reached a hand up Emma's skirt and ran it up her gartered stockings until she found her hot, soft fruit. She rubbed her thumb against the cotton that covered it, and Emma sighed deeply.\n\nEmma took River's blouse off her shoulders and pulled them down over her breasts and touched the breasts with her hands and kissed them wet and stained them red with her lipstick. River's fingers found their way through the underwear to Emma's clitoris. After rubbing her to an appropriate moistness, River carefully pushed her fingers into her and out and continued this motion as they kissed each other madly. As Emma got closer to climax, River stopped to pull off her own blouse and underwear.\n\nNaked, she climbed back on top, hiking Emma's skirt up to her waist to rub her mound against Emma's through her cotton underwear.\n\nClear of alcohol, Emma's mind pulsed with delirium with River's gyrations. She closed her eyes to bring her focus to the feeling of the tufted pubic hair, and the touching of their swollen clitoris through the cotton fabric. She grasped onto River's naked back to bring their bodies closer. \n\nWhen the climax boiled up, she bit her lips to stop her screams, but the sounds came through her shut mouth. River kissed her mouth to quiet her and held her face with her hands as she crashed her naked body against her.\n\nAt the moment of her orgasm, she clasped her arms tightly around River to brace against the tremendous pleasure that surged within her. A moment later, River trembled and screamed out and collapsed on top of her. Emma enjoyed the weight of her body and the thumping of heart against her breasts and the feeling of her stickiness and sweat seeping through cotton.\n\nEmma held River like she had never held another person before. The night was quiet and dark, and Emma wanted nothing more than to stay there forever. But when the remnants of ecstasy subsided, she thought of Percy's suspicion, so quietly she rose to her feet and fixed her dress and her hair in the mirror. River watched her from the bed.\n\nAfter Emma looked herself over a last time to make sure nothing was out of the ordinary, she walked over to River to give her one final kiss. River stood to meet her and ran Emma's diamond necklace through her fingers.\n\n\"Never noticed that before. It's pretty,\" she muttered.\n\nEmma's throat tightened as she took a step back and tears welled in her eyes. She couldn't see River clearly through the burning tears, only an apparition in the shadow.\n\n\"Why did I do it?\" she croaked through burning tears.\n\nAs her answer, River held a compassionate finger to her cheek.\n\nEmma cleared her eyes and looked upon River with one last good look and ran out of the dark room into the lighted hallway and shut the door behind her.\n\n~~~ \n\nThe next morning, Emma woke to find Percy shaving out by the window, where a silver sunlight came through and illuminated him. When he heard her stir, he looked over with a face full of foam and sang, \"good morning, love. Merry Christmas.\"\n\nWith a deft hand slicing a steel blade gingerly on his foam-covered jaw, Percy said, \"my parents asked for us to join them for breakfast. Shall we?\"\n\n\"Mmm... That sounds lovely,\" Emma said.\n\n\"What did Miss Langtry think of the sherry?\" Percy inquired.\n\n\"Hmm?\"\n\n\"The sherry you brought her last night. How did she find it?\"\n\n\"Oh, that. We hadn't opened it, if that's what you're asking.\"\n\n\"Ah. You were there for such a long while, I suspected perhaps that you were having a toast to celebrate your misadventure together in the mountains.\"\n\nEmma's face flushed. \"No, I just wanted to chat with her a bit. She seemed lonely.\"\n\nPercy stopped shaving and dropped his hand with the razor down to his side and he said, looking at her through the mirror, \"that's why I love you so much Emma. You have such a gentle soul. How on earth did I ever find you before anyone else? I must be in God's good graces. Anyways, freshen up for breakfast, will you?\"\n\nEmma blew him a kiss and climbed out of bed.\n\nWith a suitable dress on, she accompanied Percy downstairs. They walked through the lobby and as they passed the reception, the receptionist called out to her. \n\n\"Madam? I have a note for you.\"\n\nShe walked over to the desk and the man there handed her an envelope.\n\n\"Miss Langtry asked that I hand this to you when she left this morning.\"\n\n\"I see. Thank you, sir,\" Emma responded and slid the envelope into her handbag.\n\nShe wrapped her arm around Percy's and walked with him to the dining room.\n\nThey took a bright table by the tall windows that faced the street and waited for Percy's parents with tea. Spotting a friend of his, Percy slid out of his chair.\n\n\"There's Sam. He's with the Northern Pacific railroad. I want to say a quick hello.\"\n\n\"Sure Percy, I'll just be here.\"\n\nPercy gave Emma a quick peck on the cheek and walked over to where Sam was standing with a group of suited men.\n\nEmma took the opportunity to open the envelope. The letter was etched with a concerted pencil:\n\nDear Emma,\n\nAs a fair warning, this letter should be kept in your strictest confidence. \n\nI am not sure how to convey in words exactly how I feel about the past two days. I just hope to be as truthful to you as I can. \n\nI have never before been with another woman. But I always suspected that I was destined to it. So what happened in that shack in the hills was no accident. At least not on my part. It was bound to happen. Just so happened that you were the one it happened with.\n\nIf you feel like I ruined you, I'm sincerely sorry. Please forgive me for the pains I have caused.\n\nBut know that I will be forever thankful for having met you and will be forever in bliss that you came to me again on Christmas night.\n\nToday I make for Livingston. But thanks to you, I have Hong Kong now set in my heart. When I take that steam ship, I will take it from Tacoma. I will call on you there.\n\nRiver\n\nWith joy swelling in her chest and in her eyes, Emma closed the letter. In her mind, she composed a short response letter. Dear River, I will wait for you. Yours truly, Emma \n\n~~~\n\nThe railroad was repaired the day after Christmas and the train came bearing Emma's aunt and cousin. They took a first-class cabin to finish their journey to Tacoma. Emma sat beside the window and rested her head against the glass to watch the city turn to prairie. She tried sleeping but couldn't with the racket of the train. Mary gave her laudanum. It filled her head with effervescent thoughts.\n\nWhen she left London, Emma's parents warned her of this country. They warned her of the frontier. They warned her that the rules here were different than in London. That crossing the great divide between the civilized world, Emma's world, and the wilderness would require a certain amount of courage and grit that most cut from her cloth did not possess. A soft soul that had only known a soft life would perish quickly here. Emma prepared herself by filling her soul with courage and grit before she made the journey westward, but as the civilized world melted away to the east, and the wild mountains and the virgin cedar and aspen and the snow came to meet her, in her short twenty-six mile exposure to it, she discovered more than a rough wilderness. She discovered River. Through River, she discovered something about herself for which she had not prepared for. Something that had been hidden deep within her. A wild, true spirit. Maybe it wasn't River that stirred it from slumber, maybe it was simply an exposure to the things her parents warned her of.\n\nIn any case, with every mile that the train pushed towards the rising Rockies, that wild, true spirit within her waned. As she looked out upon the plains of Montana, to the roaming dots of buffalo, the vultures in the big sky, to the blades of windswept snow that rolled with the train westward, the spirit waned. \n\nAfter the Rockies she would be in Spokane. After Spokane, Ellensburg, and after Ellensburg, Tacoma, where the conquering heroes of the west had settled down to become soft souls, as they had always intended to.\n\nShe imagined River. River was beautiful. Every line on her face and every speckle in her eyes confirmed that she was not of Emma's world. She was of the wilderness. She was of the west. She was with an indomitable spirit. Emma knew that she loved her, and that she wanted more of her.\n\nShe took the letter secretly from within her corset and glanced to Percy to see that he was sound asleep in his seat across from her. She unfolded the letter and read it word by word like every pencil mark was a precious drop of water. Then she read it again, and when the words were memorized, she placed it back within her corset where it secretly warmed her heart.\n\nShe rested her head against the window and with the rhythmic shaking of the train, and the clacking of the wheels on the rails, and the laudanum, she dozed into sleep and dreamt of Hong Kong."
    ],
    "authorname": "Jackie.O.Hikaru",
    "tags": [
        "19th century",
        "christmas",
        "first time",
        "infidelity",
        "lesbian",
        "lesbian kiss",
        "lesbian seduction",
        "montana",
        "tribbing",
        "western"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/bozeman-by-christmas"
}