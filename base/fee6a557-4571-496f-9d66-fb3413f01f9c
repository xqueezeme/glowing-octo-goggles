{
    "title": "Quaranteam: Phil's Tale Ch. 02",
    "pages": [
        "Chapter 2\n\nIt had been almost two weeks since the division had been retasked, and Phil had been dealing with nonstop shit the entire fucking time. Being in charge had eased some of the pressure of it, but the problem had been the serum.\n\nThey'd had both good news and bad news regarding their work with it so far. The good news was that the serum basically did what it was supposed to, in regard to making whatever they grafted onto it incredibly effective. They'd had great luck with most things they'd been combining it with, and it had increased the efficacy of whatever they'd grafted it with. That was even true for the flu vaccination they'd done two weeks earlier.\n\nThat was the good news.\n\nThe bad news was that there were side effects. Not light side effects either, but the kind of side effects they absolutely, positively could not ignore. The kind of side effects that, Phil had to admit, were more of effects than side effects. Hell, in other circumstances, they could be the entire point of the serum, but these were not those circumstances, and this was not that time.\n\nThe worst of the side effects was that it had a high level of toxicity in male subjects. They weren't entirely sure why, but something about the Y chromosome was interfering with the serum. The working theory was that it was a mix of the suspension, the serum and the fundamentals of the Y chromosome, but whatever it was, it was making men even more sick than the baseline flu they were using in testing. And that was just a regular old flu vaccine. What they were going to have to use to combat the DuoHalo was going to have to be far stronger, which meant that the side effects were going to be far stronger.\n\nAnd while that was the worst part of it, the other thing was what making the most rounds in the gossip around the office. The side effect, no, the effect it was having on women, those without a Y chromosome. It was accelerating their libidos like nothing anyone had ever seen, and nobody had any idea why. Phil, Charles, Wes and their whole teams had been doing everything they possibly could to try and decipher what the hell was happening, but nobody had any clue what the fuck was going on or why the fuck it was happening.\n\nPhil and Bill had been doing what they could to isolate and identify the problem, but so far they hadn't had any luck. What was even weirder was the other thing. They'd found a way to convey the effects of the serum to men, but indirectly, and none of that had been intentional.\n\nThey'd been doing what they could to understand how anything was working, but they'd turned from science to blind faith and guesswork. What they did know was this -- the treatment was transmissible.\n\nSexually.\n\nThe test subject had gone home to her husband, basically immune to the flu and horny as all hell, and had immediately fucked her husband until his legs wouldn't work, and in the morning, he'd said he'd felt better, having been a little sick the night before. So, as per the agreement the test subject had signed, she'd called the base and let them know, and both her and her husband had come in the following day, only for them to find that the woman's husband had some sort of amplified modified form of the anti-flu vaccine running through his veins.\n\nNot only that, there were dead flu cells in his body, the modified formula having done its job exceptionally well. But the formula was unique, custom tailored to the man personally. It wasn't anything they could replicate; it wasn't anything they could use. It was almost like the man's body had generated the antibodies itself, and the secondhand vaccine had only just enabled his body to do that.\n\nNobody had told the serum to do that.\n\nIt just went ahead and did it.\n\n\"So what the hell do we do with this?\" Phil said to the gathered room of scientists. \"Whatever we're going to do look at in terms of combating this DuoHalo virus, I don't know that we can give it to men directly. I hate this, but we've got a working solution, even if it only works indirectly. So I suppose the question becomes how important our timeframe is here?\"\n\nIt was Major General Fielder's turn to take over the presentation. \"Extremely,\" he said with a sigh. \"We've had our first couple of cases here Stateside as of this morning, and while we're hoping that we've got them contained, we are almost certain that we don't.\" He pushed the button on the remote to shift the screen over to his computer, showing a map of the US with red spots in Boston, DC, NYC and Los Angeles.\n\n\"That's not good,\" Phil said, rubbing his eyes.\n\n\"Oh wait, it gets worse,\" Fielder sighed. \"The reports about the lethality of the virus? They may have been underplayed, at least partially.\"\n\n\"I don't know that I like the word 'partially,'\" McCallister said. For the last two weeks, the former project chief had been nothing but doom and gloom, convinced that they were looking at an end of the world scenario, and more than a couple of times, Phil had needed to ask the man to store his bad attitude away so it didn't affect team morale.\n\n\"On one hand, the lethality of the virus seems to be between the 60-80% rate, but that seems like that is only for men. The lethality of the virus in women seems like it's only 20-30%,\" Fielder said. \"We don't have any answers on why, but we're hoping that the Doctors Varma will be able to work with this team to give us a better understanding into that particular wrinkle in the virus.\"\n\n\"So basically, we've got the start of a solution that only works in women, and a virus that's more lethal to men,\" Phil said. \"This is not where I wanted my day to be headed.\"\n\n\"The solution would probably work,\" McCallister said with a chuckle. \"We'd just have to give it to women and convince them to fuck all the men, something I'm sure the government wouldn't exactly be onboard with.\"\n\n\"Gentlemen,\" Fielder said, \"at this point having a workable solution is better than not having one, so while we're going to look into other possible solutions, if there's any chance this is a viable treatment, we're going to need to start looking into it.\"\n\n\"You've got to be kidding me,\" Phil said. \"We've got a serum that makes women horny, and you want us to take advantage of that, just to cure a virus?\"\n\n\"No, not to just cure a virus,\" Major Peters, the only woman in the room, said. \"To keep the United States from losing 150 million men within the span of a year. I can't say I like it any more than you do, but if it's a workable solution, we can't rule it right out.\"\n\n\"Great. Swell. Just fantastic,\" Phil said. \"Okay, well, the Doctors Varma are showing up in a few hours, and I'll meet up with them first, talk them through what we know and what we don't, and get them up to speed, so when we meet again on Monday, they'll be ready to assume command of the project, assuming that's what you still want, Major General.\"\n\nFielder nodded again. \"I do, but if they need more time getting spun up, you can remain in command of all the teams until they're ready to take control.\"\n\n\"Sure, okay. Anybody got anything else?\" Phil waited and nobody said anything. \"Okay then, get back to work everyone, and we'll see you on Monday when I'll introduce the new Doctors.\"\n\nThe members of the team filed out, the Major General first naturally, leaving Phil alone in the room, with Major Monica Peters standing in the door, looking back at him. \"If it's all we've got, Phil,\" she said, her face looking frustrated, \"then it's all we've got.\"\n\n\"Yeah, that's what I'm very much afraid of.\"\n\nAn hour or so later, when Phil was back in his office reviewing the data for what felt like the fiftieth time, there was a knock on his door. \"C'mon in,\" he said, just before the door started to open.\n\nIn walked a member of the Air Force, a good looking Native woman in her mid twenties with a nameplate that said Redwolf on her chest. She was new on base, having been part of the group that came in a few days ago to double down on security and protection for the base itself. Two weeks ago, the Air Force presence had been twenty people, tops, but now, they were over fifty strong, and Phil had barely had the chance to meet most of them. Security was Major Peters domain, and he trusted the woman to make sure that all of his people were being kept totally safe. Standing just behind 2<sup>nd</sup> Lieutenant Redwolf were a mismatched couple that Phil could only assume were the Doctors Varma. \"Mr. Marcos, the Varmas are here, and Major General Fielder said I was supposed to bring them straight here,\" she said, glancing over his office a bit. \"Cool Ryu statue. Should I just leave them with you, sir?\"\n\nHe chuckled, appreciating the fact that the soldier recognized the large fighting game icon, then nodded to her. She seemed nice and friendly enough that he didn't feel the compulsive need to correct her that it was Doctor Marcos, not Mister. Some people he was happy enough to let it slide. \"Yeah, just go ahead and show them in.\"\n\n\"Yes sir,\" she said before turning back to the door, gesturing for the two to enter his office before stepping out, closing the door behind her.\n\nThe two Doctors Varma presented quite the contrast from one another. The man, Doctor Dev Varma, was a tall man of Indian descent, a thick black beard over his long, slender face. He had jet black hair cut short, and a heavy black rimmed glasses over his eyes. If Phil hadn't been told that the man was a doctor, he might not have known, as he was dressed in a rather expensive looking Armani suit that the man didn't look entirely comfortable in.\n\nThe woman, Doctor Charlotte Varma, was clearly of European descent, with light blonde wavy hair that hung down past her shoulder blades and light blue eyes behind golden wire framed circular glasses. While Dev wasn't a bad looking man, Phil thought to himself that the good Doctor must have had mad chat up skills to land a woman as lovely as Charlotte, who, despite being in her early forties, could've easily been a model.\n\n\"So Doctor Marcos,\" Charlotte said to him, her voice dripping with a French accent, \"I understand you've been managing the team here prior to our arrival? The Major General said you'd had some success, although that success has come with some surprising things along with it?\"\n\n\"Doctor. Doctor. Why don't you take a seat and I can start going over the data with you?\"\n\nFor the next few hours, Phil went over the serum with them, as well as the information they had regarding the DuoHalo virus. The more they talked, the more horrified the two Varmas seemed, as if they hadn't been told almost any of it in advance of showing up, and finally, Phil just asked.\n\n\"Sorry, didn't they tell you what you were going to be working on before they brought you here?\" he asked them. \"You all seem quite taken aback by this.\"\n\n\"I thought we were coming to work on something for the Coronavirus, not this... DuoHalo virus,\" Charlotte said. \"This thing sounds extremely deadly. I feel as though we should have been given far more warning about this prior to our arrival.\"\n\n\"I'm sorry about that, but there's nothing I can do other than tell you what we're up against,\" Phil said. \"And then tell you about the other thing.\"\n\n\"What is 'the other thing,' if I dare ask?\" Dev asked, his voice still layered in some of his native Indian accent, although it had a strong whiff of British blended into it.\n\nPhil chuckled, shaking his head. \"They really didn't tell you?\"\n\n\"Why would they tell us?\" Charlotte. \"You almost seem amused by all of this dire news.\"\n\n\"I mean,\" Phil said, smiling wide, throwing up his hands. \"If you can't laugh about this, then I don't know what you can laugh about. The serum we've developed is incredibly effective at delivering whatever it's grafted onto, almost supernaturally so. We can splice all kinds of things onto it and it amps that up a great deal, but it has a very strange side effect when combined with a vaccination suspension.\"\n\n\"You're very much dancing about whatever the side effect is,\" Charlotte said.\n\n\"I'd better just show you.\"\n\nA few minutes later, after watching the video of the first test subject from a few weeks ago, both of the new doctors were absolutely speechless, to Phil's amusement. He kept waiting for them to say something, but neither of them said anything, even as he looked on with a curious smile. Before saying anything, Charlotte picked up the remote and set the video to play again.\n\nThey watched the entirety of the video, mostly on 4x-32x speed, but both doctors stopped the video several times and wrote down some notes on their iPads, both with handwriting so cryptic that Phil couldn't make out any of the words. After a few minutes, though, he realized it was hopeless anyway. Dev was writing in Hindi and Charlotte was writing in French.\n\nAfter they'd finished the video the second time, Charlotte removed her glasses, rubbing the bridge of her nose with a smile. \"Utterly remarkable,\" she said. \"In attempting to build a high speed delivery base serum, you seem to have invented a kind of aphrodesiac.\"\n\n\"What sort of lingering effects have the subjects seen?\" Dev asked.\n\n\"We've only seen this sort of thing when it's mixed with vaccine suspensions, but it doesn't seem to matter what kind of suspension we use -- it's always doing this, with women anyway. We're hesitant to try it with men, after the initial attempts have resulted in the subjects being incredibly ill because of it. On top of that, the serum has seemed to have the opposite of the intended effect.\"\n\nFor the next several minutes, Phil walked them through all they'd learned since then, including going on a long tangent about how the serum had given antibodies to the man who'd been sleeping with the woman they'd injected with the serum. That one detail fascinated both doctors, and the barrage of questions they hammered Phil with seemed endless.\n\nWhat started as a brief conversation turned into dinner catered in, while the two Doctors reviewed all of the data Phil and his team had built over the last two weeks. By the time midnight rolled around, Charlotte had a theory, and while it wasn't one anyone was thrilled about, it offered at least the barest glimmer of hope.\n\nIf they developed some kind of vaccine for the DuoHalo virus, they could counteract the problems men were having resisting the virus by implanting the vaccine in women and then encouraging them to have sex with men.\n\nThe properties of transference with the flu vaccine had amplified the efficacy of the vaccine so much, it might, just might, do enough to counteract how the DuoHalo virus seemed to target the Y chromosome.\n\nThen things started to get a little wild, even for Phil's personal tastes, because Doctor Varma, er, Doctor Charlotte Varma, had a theory on how to amplify the strength even further, although it certainly wasn't a scaleable solution.\n\nCharlotte posited that that if a single man had unprotected sex with two or even three women who'd been treated with a serum designed to counteract the DuoHalo virus, it would amplify his resistance to make him nearly impervious to the virus, if they could develop something to counteract the DuoVirus in any way. They couldn't imagine how any practical application could come of it, but it was somewhere to start, anyway.\n\nAround 1 a.m. they all left the office, then came back the next day. Nobody liked working on Saturday, but Phil needed to make sure the doctors were getting spun up as much as they could as quickly as they could, and as much as he expected the office to be empty, Major Peters was also in the office, giving a tour to another handful of new people to the base.\n\nThe Major had hired a staff psychologist, Dr. Audrey Percy, a tiny curvy Hispanic woman who seemed to have a perpetual smile on her face, and she would be working independently on the base to make sure that nobody was feeling undue pressure from the amount of stress they were under to solve this thing. She was cute, Phil thought to himself, but he needed to learn all three of the new people's names, so that he would know who was working on the base.\n\nThe second was a man named Miguel Cunningham, who was going to be the liaison between the base and whoever they were going to use to mass produce whatever they came up with. He was tall, lanky, ratlike, with a pencil mustache that made Phil hate him immediately.\n\nThe last was a new member of the military team, Captain Linda Hayes. She reminded him more of a model or an actress than someone in the Air Force. She was gorgeous, blonde, with light blue eyes the shade of a bright blue sky. She had an easy going way about her, a wide and open smile, but her eyes were constantly moving around the room, and Major Peters seemed to want to make sure that she and Phil got along.\n\nAfter introducing them, Major Peters told the new hires to wait in the break room for a few minutes while she talked with Dr. Marcos, and Phil saw nervousness in Major Peters eyes. It was something he'd been seeing a lot of lately. \"So what do you think of Linda?\" Peters asked him, shifting a little bit back and forth.\n\n\"I don't know,\" Phil said. \"What should I think of Linda?\" He chuckled a little bit. \"You trying to set me up on a date with her or something?\"\n\n\"Even worse,\" Peters sighed. \"She's going to be your shadow from now on.\"\n\n\"My... my shadow? What the hell are you talking about, Monica?\"\n\n\"She's your new bodyguard,\" Peters said. \"Wherever you go, she goes. Whatever you do, she's going to be there with you. You got a spare bed at your place?\"\n\n\"Jesus, Monica, you're kidding, right?\" Phil exhaled heavily, running his fingertips through his jet black hair. \"What the fuck do I need a bodyguard for?\"\n\n\"Phil, right now you the biggest brain trust we have on combating this thing, and the people above all of us want to make sure you do not lose that in an accident or something going wrong,\" Major Peters said. \"So, for the time being, you need to get used to the idea of Linda being a few steps behind you at all times. Once we're on the other side of this...\"\n\n\"Other side of this? Other side of this?!\" Phil shook his head. \"This is scary shit, Monica! I don't know how soon we're going to be on the other side of this, but it's sure as shit not going to be any time soon! And I'm gonna be saddled with a bodyguard for months? Years?\"\n\n\"Phil, look, I don't expect you to be any happier about this than I am, but right now, this is the way the world's going to work for the time being.\"\n\n\"Jesus, okay. Okay. Okay okay, I get it,\" Phil said, putting a hand up in surrender. \"I have a bodyguard now. At least she's a good looking one, I guess.\"\n\n\"Don't hit on her, Phil,\" Peters said with a soft laugh.\n\n\"I won't, but hey, all I'm saying is that with my incredible good looks, she's gonna hit on me eventually,\" he said with a grin.\n\n\"She's a trained professional, Phil,\" Peters chuckled. \"She's not gonna hit on you, I promise.\"\n\n\"You say that now, but...\"\n\nHalf an hour later, Captain Linda Hayes was following him everywhere he went, even as the Varmas started doing deeper dives with him into the data, and Charlotte was already starting to think about how she could make the serum they'd developed even stronger.\n\nIt was exactly the kind of thing Phil was afraid of.\n\nWithin a week or so of working with the Varmas, Dev was making headway onto a rapid detection test, but so far they hadn't been able to get one that worked without drawing blood, and even then, it wasn't anywhere near as accurate as they'd like, partially because they were having difficulty testing their test.\n\nThe idea of bringing people infected with the disease into their lab scared the living crap out of everyone, and even if they followed the strictest of protocols, they were still increasing their chances of contracting the virus exponentially.",
        "But at this point, Phil knew they were going to have to do it sooner rather than later.\n\nThe Varmas had assumed control of the project, as was expected, but Phil had still found himself doing more than the lion's share of coordination. The Varmas were brilliant researchers, but they certainly hadn't been working collaboratively for some time, and the level of insidiousness of this virus was beyond anything they'd ever seen before.\n\nIt hadn't surprised Phil to see Dev fall into believing the virus from beneath the ice theory, but Charlotte had dismissed that early on, claiming that the DuoHalo virus looked like two different viruses had somehow combined together and then mutated, forming something entirely new from the building blocks of the old.\n\nTwo weeks after Varmas had shown up, the government began deploying the early stages of the smokescreen about the lesser virus, Covid, and the more deadly virus, DuoHalo, had managed to slip under the radar, despite a couple dozen fatalities. They'd gotten lucky that those contaminated with DuoHalo in the US seemed to have missed the windows in which they were contagious, and at the moment, it was looking like they had it under control.\n\nPhil refused to be optimistic about it. He knew the danger optimism was going to get him in.\n\nHe mostly kept his head down and worked, but he'd also made sure to let himself have the basic human contact he needed to not go crazy. He still went down to the Golfland arcade every Friday night to bash out a few matches with the local fighting game crew. He still went to poker nights on Tuesdays with Andy, Eric and the rest of the guys. But other than the basic touchstones he needed, he ended up finding himself spending more and more time at the base.\n\n\"Can I ask you something, Mr. Marcos?\" Captain Hayes, no, Linda, asked him late on Thursday evening, as Phil tapped away at his keyboard, having set her copy of James Clavell's \"Shogun\" down on the couch in his office where she found herself spending more and more time. She'd asked him to call her Linda, since they were spending so much time together, and he'd agreed, as long as she called him Phil, but she was having a lot more trouble with that than he was.\n\n\"Linda, if you don't start calling me Phil, I'm going to start calling you Captain again.\"\n\nShe smirked a bit. He liked when she smirked. \"Right. Right. But lemme ask you this, Phil -- if the Varmas come up with something to counteract the DuoHalo virus, and you can't solve the problems with the serum, do you think the team's just going to use it anyway?\"\n\nPhil sighed, leaning back in his chair, folding his elbow over his eyes. \"Probably, those that can, anyway. I mean, it's not like everyone's got a partner here in the office, but those who do could at least start getting inoculated from the damn thing, giving them a bit of protection.\"\n\n\"I mean, that's true, but it's just sex, right? Forgive me for saying this, but I think people around here could stand to have a couple of fuck buddies if it meant it would save their lives,\" she said, folding one of her legs beneath her.\n\nIt was one of the things he liked most about Linda. She always spoke her mind, straight to the point, with no filter, no subtle undertones or subtext. She was all text, direct and to the point, like a bullet. It wasn't that she was always putting her foot in her mouth, either. She knew when to voice her opinion and when not to, but when it came to the two of them, they'd agreed no secrets and no doubletalk, an arrangement that had been working out for both of them.\n\n\"Sure,\" Phil laughed, \"but how the hell do you mandate that? 'Attention everyone. From 4-5 every day is now designated Fucking Hour, so pick a partner and get to it! That's an order!'\"\n\nLinda laughed, holding her hand over her mouth.\n\n\"Besides, there's more than a handful of folks on this base that identify as gay, and I'm certainly not about to go around telling lesbians they just need to accept a little dick in their lives.\"\n\n\"Oh god,\" Linda said, looking ashen, \"I hadn't even thought about how this whole thing wasn't going to protect gay men and women. That's horrible.\"\n\nHe nodded. \"Like I've been saying for a month now, we're approaching a workable solution that will help protect a large part of the most at-risk portion of the population, but it doesn't cover everyone and it doesn't protect nearly as many people as I want it to.\"\n\n\"Do you think the stay-at-home order's going to do enough to keep people safe?\" she asked him. \"I heard the Major General and the Major talking about how that it was likely to happen within the next six to eight weeks, based on projections.\"\n\n\"It'll do a lot,\" he said with a nod. \"DuoHalo's airborne and doesn't last too long outside of the human body, so if we can reduce the amount of human contact for a while, that'll keep us from seeing too many casualties, but you've seen what the attitude's been like in this country for the last few years. I'm only half a decade from forty, and this is the most anti-science I've ever seen this goddamn country, and it's making me sick. People talking about 'the elites' like that's a bad thing. Talking about how they think science is trying to control them. And this utterly insane set of claims that vaccines cause autism, when that's been actively disproven time and time again. In that environment, we're going to come out and tell people to trust the science.\"\n\n\"Jesus,\" she groaned. \"We are so fucked.\"\n\n\"Well,\" he chuckled, \"we as individuals aren't, but we as a country certainly are.\"\n\n\"What about you, Phil?\" she said, grabbing her cup of coffee to take another sip from it. \"You think maybe you can convince Audrey to be your pair partner, if it comes to it? I've seen the way she looks at you.\"\n\nPhil tilted his head to one side. \"Wait, what? How does she look at me?\"\n\n\"Oh come on,\" she groaned. \"Don't tell me you haven't noticed. Don't tell me the reason you haven't asked her out is because you haven't noticed, because if that's true, that's just sad, and I mean sad with a capital S-A-D.\"\n\nThe Filipino man chuckled, gesturing at his computer terminal. \"Little busy trying to save the species here, maybe you've noticed?\"\n\n\"It's Thursday, and she's asked you to join her for lunch three times this week already, Phil,\" she laughed. \"Jesus, make the effort, would you?\"\n\n\"What about you, Linda?\"\n\n\"What about me, Phil?\"\n\n\"You got somebody lined up to be your designated fuck buddy, if it comes to that?\"\n\n\"Oh I'm sure I could probably throw a football down the hall and hit half a dozen people who'd volunteer in this office alone,\" she sighed. \"Not that many of them would be anything more than a sympathy fuck.\"\n\n\"No interest in me, huh?\" he said with a grin, meaning it to be a joke.\n\n\"Well, tell you what, Phil,\" Linda shot back. \"You, me and Audrey sounds like a nice little threesome, so if you can make that happen, then I guess I'm in.\"\n\n\"I'm going to hold you to that,\" he teased, knowing they were both kidding.\n\n\"Oh don't you worry,\" she answered. \"I'll remind you in case you forget.\"\n\nThe second week in February was when literally everything went to shit, just when everything in Phil's world had felt like it was starting to get better. He was having lunch with both Audrey and Linda in the mess hall when his iPad flashed the emergency alert at him, instructing him to get down to the main portion of the lab designated for detection tests.\n\nLinda and Audrey had insisted on coming with him, and by the time he'd reached the lab, he was already panicked. The red contagion klaxons were lit up, and when he got to the lab, he could see that part of it had already been sealed off, officers standing outside, Charlotte screaming at them at the top of her lungs to let her by.\n\nDev stood on the other side of the glass.\n\nAlong with twelve other men, including McCallister, Bridges, and Wilson.\n\nMajor General Fielder moved to intercept Phil before he could get too close to the lab. \"Easy there, Dr. Marcos. There's nothing we can do for them now except to buckle down and continue work on our vaccine treatment,\" the older man said, pressing a hand to his chest, keeping him from moving forward.\n\n\"What the fuck happened?\"\n\n\"One of the sample transport cases apparently wasn't secured, so when they went to open it, the vials came tumbling out, and everyone...\" He stopped and sighed, then forced himself to continue. \"Everyone in that room is now definitely infected with DuoHalo. We'll need to quarantine them until they're through it or...\"\n\nThe Major General didn't need to fill that in. Everyone knew what he meant.\n\nThe intensity that everyone was working on the project amplified after that, even though that hadn't seemed possible. More than a couple of times, Phil would wander by the quarantine area and see wives, brothers, daughters and sons standing outside of it, talking to their fathers on the other side of the glass. As much as Phil wanted to counsel them, to tell them everything was going to be alright, he couldn't, because he knew he'd be lying to them. Audrey did her best to keep spirits up, the visitors and Phil's, but the minute they had their first casualty on the base -- Hunter Wilson -- it became much harder for everyone to stay optimistic.\n\nBecause the day of the first casualty, they lost two more, including Doctor Dev Varma.\n\nPhil spent much of the evening sitting crying on his couch, both Audrey and Linda holding onto him, assuring him that he'd done everything he could do, and that all he could do now was to keep moving forward, keep trying to keep things on task, trying to find a way out of this for all of them. Phil had told Audrey to go and make sure that Charlotte, and the Varma's daughter Asha, were doing okay, but Audrey insisted she'd already delegated that to her assistant, and that since Dev had passed away, Phil was back in charge of the project again, and they needed him at his best.\n\nThe weight of the world felt like a million tons, and Phil just wanted the whole thing to go away, but there wasn't time, there was never any time, not any more.\n\nWithin a couple weeks, nearly all the men that had been in quarantine had died, and only one person who'd been in the room had survived and come through the other side of it -- Adam McCallister, the former project chief.\n\nAll of that meant they had a starting point now, because McCallister's body had developed antibodies, and from there they could begin working on the building blocks of something that would help those uninfected develop those antibodies before ever encountering the virus.\n\nBut it also meant that everyone on the base had seen first hand what the DuoVirus could do to a man, to leave him bleeding from the eyes, ears and nose, gasping for his final breath before his lungs collapsed in on themselves. And the survival rate in their sample had been a paltry 8%.\n\nPhil tried convincing Doctor Charlotte Varma to take some time off, to grieve, to mourn, to process the passing of her husband, but the woman was adamant that she wasn't going to let anyone else die on her watch.\n\nThe US went into quarantine the last week in February, as there were starting to be reports of both Covid and DuoHalo outbreaks in major metropolitan areas across the country, although Covid was getting most of the headlines at first, simply because everyone had been instructed not to talk about DuoHalo.\n\nBut there were confirmed cases of DuoHalo in New York City, San Francisco, Los Angeles, Miami, Chicago, Seattle and Houston, and nobody was taking it seriously enough.\n\nThe second week in March, they felt like they were ready to test the serum and Nate Campbell's wife Sharon had volunteered to be one of the test subjects.\n\n\"You're sure about this, Nate?\" Phil asked Nate, as both he and his wife sat in the testing area. \"I know you want to get immunity from this like nobody's business, but this serum's still basically experimental, and I don't know how strange the side effects might get. You and your wife are signing up for a hell of a risk with this.\"\n\nNate was a pragmatist, and while Phil would've been hard pressed to describe the man as a friend, he was certainly the friendliest member of the original task force. He was a large bulbous man with a history of asthma, which meant he was in the highest risk group. \"Phil, I get it, but we're going to need first hand experience of how this is all going to work, and if it stands a chance of getting me immunity to this damn thing, then I need it now, not later.\" He shook Phil's hand with a smile. \"I don't know that I've ever said this, but I'm glad you're in charge these days. You've done a hell of a lot better job managing the team than McCallister ever did, so... thanks for that.\"\n\nNate's wife Sharon was an African American woman who also loved to eat a bit more than was good for her, but with the body count starting to skyrocket in the US, they just couldn't afford to wait, so they isolated Nate and Sharon in a room together, injected Sharon with the treatment, and waited.\n\nThe idea was that Sharon would wait a day or so and see how the serum affected her, and if it seemed like she was feeling fine at the end of it, she could try and have sex with her husband, and see if it transferred the immunity to him.\n\nThat had been the plan, anyway.\n\nSix hours after injection, Sharon had described how she was feeling to the team as \"the horniest I've ever been in my fucking life,\" and it was clear that she was quite worked up, unable to sit still, fidgeting constantly.\n\nThe team had instructed her to try and be strong, to try and hold out as long as she possibly could, because they needed to make sure she came through it okay before they wanted to risk her introducing it to Nate.\n\nIt had been a great plan, but no plan survives contact with the enemy.\n\nAt hour eight, Sharon had basically ripped her clothes off, and the clothes of her husband, shoved him into a chair, climbed atop his lap, and shoved his cock inside of her, giving the man no choice in the matter, as she bounced and bucked.\n\nPhil felt odd, watching the whole thing from the other side of a one-way mirror, but he and the rest of the key members of the team couldn't look away, watching the woman have one of the most intense orgasms they'd ever seen just climbing onto Nate's cock.\n\nSharon had, at least, had the decency to position Nate's back to the mirror, so they didn't watch the actual penetration, but even with their restricted view, it was some of the most vigorous and carnal sex Phil had ever seen in his life, and he'd watched more than his fair share of porn and hentai.\n\nNate was clearly at least a little reticent to have sex in front of his colleagues, but Sharon had been merciless, and seemed hellbent on getting her husband to cum. Eventually, Nate didn't have any more resistance and clearly had an orgasm, because it had set off a chain reaction inside Sharon, and the woman had the most intense orgasm Phil had ever witnessed.\n\nAs she slumped forward against her husband, she looked completely unconscious, her body limped draped over Nate's body, her head resting on his shoulder, her arms hanging slack down at her sides, as Nate did his best to try and get her to settle in atop of him.\n\n\"Is... is she talking in her sleep?\" Charlotte said, noting the woman's mouth was moving ever so slightly. \"Can you turn up the audio levels?\"\n\nThat was the first time Phil Marcos heard it, but it certainly wouldn't be the last.\n\nOver and over again, Sharon Campbell was muttering a single word over and over again.\n\nImprinting..."
    ],
    "authorname": "CorruptingPower",
    "tags": [],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/quaranteam-phils-tale-ch-02"
}