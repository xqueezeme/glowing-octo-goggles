{
    "title": "Head Above Water Pt. 02",
    "pages": [
        "Author's Note:\n\nA warm 'thank you' to my fantastic beta, Laura, without whom this part in the series would not exist. She advocated for character growth, and so Celine has become one of my most fleshed-out characters. This isn't a story for the strokers, but there is sex. \n\nSpecial shoutout to Spyauth: sorry about the H in Aston Martin.\n\nHope you all enjoy. Cheers, \n\nNora\n\n\u2014\n\nI was rubbing my temples, grimacing as I looked down at the referral reports thus far, overall six percent behind goal. At this rate we might just barely hit goal by the end of the month, and that was unacceptable. I'd never, ever, ever finished a month below goal. Even one percent set off the Dragon Lady.\n\n\"Celine\u2014\"\n\n\"Get out,\" I said. \"Get out of my face.\"\n\nIt was one of the supervisors, Paul; another one of those that needed too much hand-holding. I really wasn't in the mood to answer some question that I'd probably answered a hundred times before. \n\n\"It's important,\" he said, his voice so small that I almost felt a little bad for him. Almost.\n\nI looked up, knowing that I was probably glaring. I didn't bother composing myself. These numbers were the supervisors' responsibility to maintain. What the fuck were those team meetings for? It was his job to teach his agents how to approach our policy holders with referrals, how to make it sound like they were doing them a favor, how they were experienced and knew insurance so well that they knew exactly what the policy holder was missing. It probably wasn't Paul's fault since his agents typically hit their team goal, but his face was annoying me.\n\n\"This better be good,\" I muttered. \n\n\"I need you to walk someone out.\"\n\n\"Who'd you fire?\"\n\n\"Felicity Copeland... except I haven't fired her yet.\"\n\nSeriously? Did I have to do everything?\n\n\"Get her off the phones and send her to my office. And the next time you ask me to do something that you're perfectly capable of doing yourself I'll consider firing you too. Email me her referral stats and her employee record. What's the reason for the termination?\"\n\nPaul had visibly paled. \n\nYeah, yeah, Dragon Lady. Whatever. \n\n\"She showed up late again. She's already had three write-ups. This would be her fourth.\"\n\nWe always fired after three write-ups, regardless of the reason behind it. It may sound like I enjoyed this aspect of my job, but I really hated dealing with hysterical people. Felicity was probably going to cry. She was sweet, but shit at keeping track of time. I didn't have enough of a bleeding heart to let anyone affect efficiency though. \n\nI checked my watch. \n\n\"Get her off the phones. Now. I'm going to pay her through the end of the day but I really don't want her working more than she has to. It's insulting. Get going.\"\n\n\"Right away.\"\n\nI knew Paul was going to have trouble sending me her employee record because he still struggled with navigating the hub, so I looked it up myself, clicking through my computer screen and trying to compose myself this time. I really wasn't a bitch when it came to these things. I knew how much it sucked to be out of a job. I'm not as completely cold as people think I am. Just hardened. And easily annoyed. \n\nThere was a soft knock on my door. \n\n\"Come in.\"\n\n\"You wanted to see me?\" \n\n\"Take a seat.\"\n\nFelicity took a seat in one of the white leather armchairs across from me, wringing her hands, looking around my office. There wasn't much to look at. Most employees had pictures, superhero figurines, and stickers and whatever shit hung up in their cubicles. I didn't have anything. I didn't like looking at anything that could distract me. \n\n\"You know why you're here,\" I said, printing out her record. \n\n\"I'm so sorry. My class got let off late. I tried to make it here as fast as I could.\"\n\nJesus fucking Christ.\n\n\"Did you ring the employee Call-Out line? A late counts as one occurrence and you're allowed six before you get a write-up.\"\n\nShe looked relieved, like she'd been saved. I held up a finger and picked up my phone to dial the Call-Out line. \n\n\"Employee Call-Out line. This is Addie,\" said one of the few supervisors that I actually liked\u2014no, loved. I loved this girl. That was saying a lot because the list of people that I loved was really, really, really short.\n\n\"Hey, Addie. It's Celine.\"\n\n\"Oh honey, you sound mad. Don't tell me. It was Paul. David. Rita. Bethany?\"\n\nI actually laughed. She was such an adorable idiot. \n\n\"Keep that up and it'll be you,\" I said, but not in a serious tone. \n\n\"Dragon Lady this morning, huh? Do you want anything from 7 Leaves? I'm on the coffee run today after George gets here. Might perk you up. You sound moodier than usual.\"\n\nShe could read me better than anyone.\n\n\"You're a godsend. You know my order.\" \n\n\"I sure do. That revolting black sea witch cream whatever drink. Disgusting.\"\n\n\"Stop judging me.\"\n\n\"Nah, never. What's the reason for your call?\n\n\"I need you to check the Call-Out roster for this morning.\"\n\n\"Sure thing. Who am I looking up?\"\n\nI glanced at Felicity. She didn't look so relieved now. \n\n\"Felicity Copeland. Do you have any record of her calling in late before her shift this morning?\"\n\n\"Mm, let me check,\" Addie said. I could hear rustling papers on the other end. \"I don't think so. I'll double check, though. Rita was on the line this morning, too. Can I put you on hold for a minute?\"\n\n\"Take your time.\"\n\nFelicity was now fidgeting in her seat.\n\n\"You want to tell me or am I going through this whole thing for nothing? You know I don't like having my time wasted.\"\n\n\"I don't think I did,\" she practically whispered. \"I might have forgotten to.\"\n\n\"You might have? Well, let's make sure.\"\n\nPaul's email came through as I was waiting for Addie. I was surprised he'd figured it out. He was so scatterbrained half the time. I wouldn't have promoted him in the first place, but he was especially gifted with his referral guidance, and he really did have a way of motivating his agents. Felicity's numbers proved it. She was the second highest producer on her team, eleven percent above goal only halfway into the month. She was five weeks away from a pay raise and a bonus. Fucking hell. \n\nI printed out Felicity's stats, and filled out a termination letter on Adobe while I waited for Addie to get back on the line. \n\nThere was a knock on my door. \n\n\"Come in.\"\n\nI could tell from the heels alone who it was. And the pencil skirt that just barely passed the dress code. And the blouse that probably should be buttoned two more buttons up. And that red hair. And those emerald green eyes. And that bright fucking smile. \n\nIt was Addie. \n\n\"I couldn't reach Rita on the phone. I think she went to the bathroom or something. I picked up the roster from her desk.\"\n\n\"I really do love you,\" I said, holding out my hand. \n\nAddie beamed and handed me the roster sheet. \n\n\"Anything else? There are some donuts in the break room. Want one?\"\n\n\"I'm trying to watch my figure.\"\n\nShe snorted. \n\n\"You have fast metabolism. You can eat whatever you want so don't give me that crap. I'll bring you one of those chocolate donuts with the rainbow sprinkles. I know they're your favorite even though you pretend like they aren't.\"\n\n\"If I get diabetes I'm sending you my hospital bills.\"\n\n\"Take it right out of my 401k. Have the donut. You need a little sugar to sweeten up your morning.\"\n\n\"Okay, but just one. And clear up your lunch schedule today. Feeling In N Out?\"\n\n\"I'm trying to watch my figure.\"\n\n\"Shut up. Meet me at one thirty.\"\n\nAddie left grinning with a little wave. \n\nI looked over the roster, checking it twice, three times and then four. Yeah, no surprise. Felicity hadn't called. I put the roster down. \n\n\"So,\" I said. \"How many write-ups have had so far, Felicity?\"\n\n\"Um,\" she said, breathing heavily. \"Three, I think.\"\n\n\"And they're all attendance-related.\" \n\nIt wasn't a question. We both knew the answer.\n\n\"Yes.\"\n\n\"Okay, I'm going to explain this very carefully so you understand. Listening?\"\n\n\"Yes.\"\n\n\"You've worked here, what?\" I checked her record. \"About ten, eleven months now. You know how a call center works. Do you know what happens when an employee doesn't get here on time?\"\n\n\"Yes,\" she said, looking down at her hands. \n\n\"I'll explain it in depth so you understand. You affect our hold times when you miss even a minute off the phones. The hold times are one of our monthly goals. You bring that down, and you affect everyone else's incentive payouts. You also put a strain on your fellow agents. They have to pick up the slack for you. We know exactly how many agents to schedule on the floor to handle the volume for the day. When you don't show up\u2014or even show up late\u2014your coworkers end up getting no breathing room between calls. Does that seem fair to you?\"\n\n\"No.\"\n\n\"You know I hate to do this. And you know what I have to do.\"\n\nShe put her face in her hands, crying. Fucking hell. \n\nI printed out the termination letter and slid it with a pen across the desk. \n\n\"I need you to sign this. I'll pay you through the end of the day and you'll get your last paycheck on the next payday. It'll have any accrued vacation time cashed out for you. Unfortunately, the incentive payout won't be on there since you won't be finishing the month with the department.\"\n\nShe lifted her head, her watery eyes bothering the hell out of me. I really didn't like doing this. \n\n\"Is there nothing I can do? I'm so, so, so sorry.\"\n\nI shook my head, feeling like absolute shit. \n\n\"You're a good agent and I hate to lose you, but you know the three write-up policy. I'll write you a recommendation for your next job and I'll give you my business card so you can have them personally call me. That's about the most I can do. I'm sorry.\"\n\n\"Okay,\" she said shakily, reaching for the pen. She signed and dated the sheet of paper sloppily. \n\nI took the termination letter back, signed and dated it as well, and scanned and printed her a copy. I made a third copy to put aside to have run down to HR later.\n\n\"Here's my business card,\" I said gently. \"Honestly, if there's anything else you need just call me. I'll mail you the recommendation letter.\"\n\n\"Okay,\" she said. \"Thank you, Celine. I really am sorry.\"\n\n\"What's done is done. Come with me. I'll take you to your desk so you can clear it out and then I'll walk you down. Make sure to take your badge to turn it into security.\"\n\nI knew the kind of humiliation that came from being walked down the Floor after being fired. I fucking hated it, but it was protocol. Not everyone was cut out for the stress that comes from working in a call center. Our turnaround rate wasn't too bad since our agents received a whopping four months of training off the phones to prepare them, but it still happened every once in a while. \n\nAgents stiffened as I walked the Floor with Felicity. The look of fear in their eyes didn't bother me. It was just going to push them to be on their best behavior and perform their job to the best of their ability. This was why I routinely did Floor walks. The supervisors did too, but they more or less just helped agents. I breathed down a lot of necks. Dragon Lady. \n\nFelicity sniffled as she gathered her things. Paul brought her an empty box and gathered up her headset to take back to storage. He gave her a very heartfelt goodbye and told her to call him if she'd forgotten anything so he could get it back to her. I turned away because I didn't like watching shit like that. Instead, I checked in with the agents beside her desk, talking to them between calls to see how their morning was going. I could be scary when pissed, but I wasn't really mean to my agents. Their supervisors usually caught the worst of it.\n\nFelicity had her head down as I led her down the elevator to the security desk. Every entrance had security, but I needed to go to the main one for the head security booth. It was a long walk. A long, humiliating, excruciatingly painful walk for a girl who really wasn't a bad person, just a bad employee. I put on my bitchiest face so that no one would dare to stop and talk to me. Even people I was on good terms with ended up walking past with a panicked look in their eyes\u2014people that weren't even from my department. I guess I was Dragon Lady everywhere. \n\nI didn't really have any words for Felicity but to wish her luck in her future endeavors. I watched her turn in her badge and leave the doors for the last time. Then I sighed and headed back up, knowing that I needed to go up to my office and let my hair down. Bobby pins were digging into my scalp from my elegant, twisted knot. I dressed like a serious woman at work, but I really wished I could just let my hair down more often. It was a deep rich brown color that some people even told me they were jealous of because of how thick, sleek and long it was. I guess it was coming down today. To hell with serious. \n\nThere was a donut, a styrofoam cup of shitty breakroom coffee, and a note from Addie on my desk. \n\n'Sorry about the coffee! It's the best I could do. I'm heading down to 7 Leaves now so don't worry, you'll be on cloud nine soon. xoxo Addie' \n\nGod, I really did love that woman. \n\nI was just barely settling into my chair when my office phone rang. I checked the extension and groaned. As if my morning wasn't already shit enough. \n\n\"Yes, David,\" I said. \n\n\"Hey, you lady, you.\"\n\nGod, what the fuck was wrong with this guy? What the hell kind of greeting was that?\n\n\"What can I do for you, David?\"\n\n\"Just need for you to double check this amendment change request I got this morning. It's a pretty high liability increase request so you'll have to pull the call recording unless Audit has a transcript, but I doubt they've gotten around to it yet or will at all,\" he said. \n\nWell, at least it was work-related. \n\n\"What's the policy number?\" I asked, pulling up the insurance system on my computer. \n\n\"I just PM'd it to you. Check your Messenger.\"\n\n\"Got it,\" I said, and read out the name of the insured and their address from my screen when I'd entered it into the insurance system.\n\n\"That's the one. Check the most recent amendment request.\"\n\n\"Two million for a home policy liability limit? Are you even going to approve this?\"\n\n\"We might. I'll have to see. Do you need to put me on hold while you pull the call?\"\n\n\"Looks like the call is twenty-three minutes long. That's pretty short for a liability increase call. The insured probably called in for it. We don't have the agents referring this high of a liability increase. You and I both know the approval rate is five percent at best. I'll have to call you back. I'll need to give this one a good listen.\"\n\n\"Sounds good. You know more than anyone I know, Celine. And hey, how was that date? Was he a good guy?\"\n\nUgh. \n\n\"Yeah, it went really well, actually. He's great.\"\n\n\"Is he smart? Only a really smart guy can keep up with you, Celine.\"\n\nDouble ugh. \n\n\"He's very intelligent.\"\n\nAnd annoying. And arrogant. And sweet. And kind. And disgustingly good-looking. All things I didn't need to tell David.\n\n\"A lot of guys use Google these days to appear smarter than they are. You sure he's not one of those?\"\n\n\"Pretty sure he's smart, considering that he's a surgeon.\"\n\nI could almost hear David sputtering. This was kind of satisfying actually. \n\n\"Wow,\" he said, even though I could tell he was upset. \"Good catch. On his part, that is. Any man would be lucky to have you.\"\n\n\"Thanks, David. Hey listen, I need to go listen to that call now. I have a busy morning. I'm barely going to be able to fit this in.\"\n\n\"Sure thing. And let me know if you ever wanna hang out. That offer's still there. Not as a date or anything. Just maybe catch a movie or something. As friends.\"\n\n\"I'll let you know if I'm ever free. Bye, David.\"\n\nI hung up before he could drag the conversation any further. I knew he'd been gearing up to making me pity him enough to hang out with him. I didn't have time for it, this morning or any morning.\n\nI rang Rita. \n\n\"This is Rita.\"\n\n\"Are you off the Call-Out Line route yet?\"\n\n\"Yeah, just got relieved a few minutes ago. Why, what's up?\"\n\n\"One of your agents sent an amendment request for a high liability increase. It bounced back from Underwriting. I'm going to need you to pull the call.\"\n\n\"Got it. Email me the policy number and I'll get right on it. Do you need me to follow up with Underwriting for you?\"\n\n\"Rita, you are one of my favorite people right now. This is one of David's.\" \n\nShe groaned. \n\n\"Get him the answer when you're done,\" I said, trying not to laugh. \n\n\"You owe me a lunch for this.\"\n\n\"One thirty today. Addie and I are getting In N Out. You in?\"\n\n\"Hell eyes. Just the thought of animal style fries has me salivating already.\"\n\n\"Stop saying 'hell' on my Floor.\"\n\n\"Come on down here and make me, boss lady.\"\n\nI laughed. Like Addie, Rita was another one of my supervisors that I could call a friend. I wasn't as close to her as I was to Addie, but she did come in as a very close second. The three of us had a good understanding. Our friendship wasn't allowed to affect our work. They hardly ever overstepped those boundaries, save for times like these where Rita would try to get away with cursing on my Floor. I knew she hadn't said it loudly enough to carry over to the phones though.\n\n\"I'm firing you.\"\n\n\"Oh shut up. I'll see you at lunch. I'll take care of David in the meantime. Ughhhh bye.\"\n\n\"Bye, Rita.\"\n\nI tried to keep a good relationship with my other supervisors as well. Some of them still pissed me the hell off, but I tried to include them when I could manage to deal with them without ripping my hair out. A dinner and drinks once a month was about all I could handle with the whole team together. The ones I actually considered my friends would hang out with me outside of work from time to time. \n\nI tried to show my appreciation where I could though. I knew how important the supervisors were in all of this. They didn't need to be pushed as hard, save for the select few. They understood the importance of their jobs. Plus, their quarterly incentive bonuses were pretty generous. I made sure of it. I like to take care of my people. \n\nI finally took my hair down after getting a chance to breathe. \n\n\"Ahhhh,\" I practically moaned. I'd needed this so bad. I'd done it at work before, but I never left my office without putting it back up. Everyone's jaw would probably drop to the floor so I didn't bother walking out like this. It'd just distract them. \n\nI spent the rest of the morning doing actual managerial work, not bullshit phone calls and things that the supervisors could handle, like firing people. Delegating David's request out to Rita had really lightened my mood. \n\nSomething else lightened it even more. \n\nMy cell phone rang. I reached for it absently, finishing up an email, answering without even looking at the caller ID. \n\n\"Hello?\" I said, distracted. \n\n\"How's my favorite mean avocado lady?\"\n\nOh my god. \n\n\"Wes,\" I breathed. \"Hi.\"\n\nI felt like an idiot. I was suddenly feeling shy. We'd ended the night with too many kisses, too many \"okay, I'm gonna go now\"s that just ending up with us making out in the parking lot. He'd walked me to my car, and then he'd kissed me against the door until I'd gotten weak in the knees. \n\n\"Are you busy?\"\n\n\"No,\" I lied. I checked my watch. \"You're up pretty early.\"\n\n\"It's almost noon. Why is that always early to you?\" His laugh twisted all my insides so pleasurably that it took me a moment to recover. \n\n\"You have a late shift. You should be sleeping.\"\n\n\"Aw,\" he said, and I could tell he was smiling. I could hear it in his voice. \n\n\"You care this much already, Celie?\"\n\n\"Don't call me that,\" I said, even though I was smiling too. Hearing his voice was making my heart race. ",
        "\"I miss you. Just wanted to hear your voice.\"\n\nMy stomach flopped. God, I felt like a little girl having her first schoolyard crush. \n\n\"It's nice to hear your voice, too,\" I said. I didn't know if I was capable of telling him that I missed him. I'd never said that to a guy before, even though I really did miss Wes. It'd be stupid to lie and say that I didn't like this guy. I did. Probably more than I should, but whatever.\n\n\"About Saturday\u2014\"\n\n\"I'll come over,\" I said, pulling some lunatic courage out from under my ass. \"I mean, you have to be on your best behavior so don't take this as an invitation for, you know, whatever.\"\n\n\"Duly noted. No invitation for 'whatever'. Best behavior, Scout's Honor,\" he said quickly. I could hear from the tone of his voice that I'd surprised him. \n\n\"What time should I come over?\"\n\n\"About that,\" he said, and I could tell he was working up to saying something. \n\n\"I was wondering if you'll let me push my luck a little more. I have a proposition.\"\n\n\"I'm listening.\"\n\n\"I have to be back at hospital Saturday night so we don't actually have the full day together. So I was thinking you could\u2014\"\n\n\"Hell no.\"\n\n\"Come on, just think about it. I'll take the couch.\"\n\n\"If you expect me to spend the night Friday and not know that there'll be some 'whatever' planned then you're seriously insulting my intelligence right now.\"\n\n\"You know I'm going to be a zombie Friday,\" he said, and I heard him sigh. \"I won't even have the energy to try 'whatever'. I just want to be around you.\"\n\nI'd already come up with my argument, already figured out ways to make him feel ashamed for even bringing up such a crazy idea, but after those words...I paused. \n\nI knew how it felt to be needed to run an entire department. I knew how it felt to be needed to make sure that things were all in order, that all the numbers were being hit, that all the agents were upholding themselves to company standard; so yeah, I knew what it felt like to be needed; but Jesus Christ, I've never been wanted. \n\nWes wanted me. \n\nAnd I wanted him. \n\n\"One condition.\"\n\n\"Name it. Anything.\"\n\n\"I'm taking the couch.\"\n\n\"Anything but that.\"\n\n\"Those are my terms.\"\n\n\"No.\"'\n\n\"Fine then. I'll see you Saturday.\"\n\n\"Slow down, Celine. I have an alternate solution. You don't have to take the couch. I have three rooms. One of them is a guest room.\"\n\n\"Is this where I find out about the wife and the kids? And why the hell did you say you were going to take the couch if you had another room?\"\n\n\"It's just an expression. I wanted to make sure you'd end up in my bed instead of the one in the guest room.\"\n\n\"Your bed without you in it.\"\n\n\"Of course. No 'whatever' planned. Scout's Honor, remember? That's sacred.\"\n\n\"Right. No wife and kids then?\"\n\n\"Not yet. Still working on getting the girl to agree to sleeping over at my place. One step at a time. I'll let you know how it goes. Pretty sure I'm gonna marry her.\"\n\n\"Wes.\"\n\nHe laughed. \n\n\"I miss you. Please?\"\n\n\"Let me think about it. What time would you want me to drop by?\"\n\n\"Actually, I don't know. I have my set shift hours, but I'm always going over. It's hard to say. I don't want you waiting around all night for me though. My neighbor has a spare key. She can let you in.\"\n\n\"You want me to go into your apartment and stay there alone until you come home?\"\n\n\"Don't make a big deal out of this. Just shut up and come over whenever you want Friday. The fridge is stocked. You can watch TV, shower, relax; make yourself at home.\"\n\n\"Wes.\"\n\n\"I'll be home before nine if I'm lucky.\"\n\n\"Wes, you can't be serious.\"\n\n\"Does it make you feel weird?\"\n\n\"Well, yeah.\"\n\n\"Why?\"\n\n\"I've never been in someone's home without them in it.\"\n\n\"Another one for the bucket list.\"\n\n\"Wes.\"\n\n\"Relax. It'll be okay. Are you scared of being alone?\"\n\n\"I live alone. That's not the problem.\"\n\n\"If that's not the problem then there isn't any real problem. Suck it up. This is what people in relationships do.\"\n\n\"We're not in a relationship.\"\n\n\"Consider it a trial run.\"\n\nI had to laugh. Jesus fucking Christ. This guy was so pushy. \n\n\"Do you ever take 'no' for an answer? To anything?\"\n\n\"You already know that I don't.\"\n\nThere was a knock on my office door, and it was opening before I could say anything. Two full cardboard takeout trays of iced drinks came into view, held up by Addie who had a huge paper bag of pastries between her teeth. She was holding the door open with her ankle.\n\n\"Helf fe,\" she was saying. \n\n\"Oh, shit, Addie,\" I said, getting up. \"Wes, can you hold on for a minute?\"\n\n\"Sure.\"\n\nI helped Addie carry the trays to my desk. She reached up and took the pastry bag out from her mouth and let out a sigh of relief. \n\n\"Did you go to 7 Leaves by yourself?\" I asked. \n\n\"Yup.\"\n\n\"There are like twenty people in the department that usually order these.\"\n\n\"This was my second trip. I'm beat,\" she said, plopping down on one of the leather armchairs in front of my desk. \"Can you radio in the rest of the supervisors? And the secretary channel. I don't think I can survive delivering these around the Floor.\"\n\n\"Hold on, just let me finish this call,\" I said. \n\nAddie did a rather dramatic motion of showing that she was zipping her lips and reached for one of the drinks. She sat back on the chair, sipped her iced coffee and pulled out her phone to get lost in the exciting world of her Instagram feed. \n\n\"Wes?\"\n\n\"I'm here. Sounds like all the people you work with are just as addicted to their morning drinks as you are.\"\n\n\"You heard all that?\" \n\n\"I'm nosy.\"\n\nI laughed. \n\n\"So. Come over Friday.\"\n\nAddie was now looking up at me curiously, a sly grin on her face. Ugh. I needed to get off this call as soon as possible. \n\n\"Fine,\" I said, lowering my voice \"Text me the\u2014the everything.\"\n\nWes laughed. \n\n\"Is someone there with you?\"\n\n\"Yes.\"\n\n\"I'll text you 'the everything'.\"\n\n\"Okay,\" I said, trying to avoid looking at Addie. \n\n\"I'll see you Friday then.\"\n\n\"Okay.\"\n\nHe laughed.\n\n\"You're beautiful. Bye, Celine.\"\n\n\"Bye,\" I practically squeaked. \n\nI reached for my iced coffee, already recognizing it because nobody else in the office could wrap their minds around a sea cream black coffee. It was incredibly bitter black coffee that had just a little foam of sea salt sweet cream at the top, but I was the only one who liked that too. 7 Leaves was technically a boba tea cafe, but they did brew some damn good coffee. There were plenty of pink and green and yellow drinks on the trays. Too much sugar. Yuck.\n\nI stuck a straw in my coffee, moved it a round a little in the ice, and then took a deep, refreshing sip. \n\n\"Sooo,\" Addie said. \"Tell me what that was all about.\"\n\n\"I'll radio the sups,\" I said, ignoring her. I sent out the message, getting a few responses back like \"finally\" and \"thank god\" and \"hell yeah\". I had to half-seriously remind Rita not to use \"hell\" on my Floor again. My office, the conference rooms and the break rooms were all acceptable places to curse, but Rita was always getting away with shit I shouldn't be letting her get away with. Whatever. I guess that's what I get for fraternizing with my employees.\n\nWithin moments they were shuffling into my office, reaching for their drinks, patting Addie on the back for a job well done. They were all digging through their wallets. \n\n\"Hold on,\" I said, reaching for my purse. \"This one's on me. And don't any of you thank me or I'll fire you.\"\n\nI passed Addie a hundred dollars, knowing that the drinks and pastries had cost her just a little over ninety. The rest was to compensate her for the gas for her two trips. I technically could put this on my expense report, but I wasn't going to. This one really was coming from me. Plus, what the hell else was I supposed to spend my money on? I didn't really shop for anything but avocados (joke, in case you missed it. I can joke sometimes). \n\nSome of the supervisors giggled into their straws. I let them hang around a little bit to use my office as a temporary break room. They were only half my sups with the rest out on the Floor so I figured they could take a few minutes. I did this from time to time, just to let them have an actual place to take a break; somewhere private where their agents couldn't bother them. They helped themselves to pastries, chatted with each other and were overall having a great time until someone pointed out something that I really wished they hadn't.\n\n\"Hey Celine, I don't think I've ever seen you with your hair down before. It looks so nice! Why don't you let it down more often?\"\n\nUgh. Fuck off Bethany. \n\nI just shrugged, taking a sip of my coffee to avoid having to answer. But everyone was staring at me, expecting the very answer I was avoiding to give. Jesus fucking Christ. \n\nI had to remind myself that most of these people were good friends of mine. I didn't have any friends outside of work, and although I didn't exactly call these people up to cry on their shoulders, some did cry on mine. I needed to 'let my hair down', in the non-literal sense this time.\n\n\"I'm just used to having it up. I feel weird with it down at work.\"\n\n\"Your hair is gorgeous,\" said Rita. \"I've been telling you for years. Put it down at work.\"\n\n\"You could be in a Pantene commercial,\" Bethany said. \n\n\"Alright,\" I said, opening my door. \"Go earn your bonuses. Get the hell out of my office.\"\n\nThey knew me well enough to know when I was saying things out of harmless fun and when it was out of genuine rage. They smiled on their way out, several of them covering their mouths to keep from accidentally thanking me. Rita flipped her hair, winking like the smug little brat I knew she was. The only person who didn't leave my office was Addie. \n\nI rolled my eyes. \n\n\"Get back to work.\"\n\n\"I'm on the early bird shift this quarter, remember? Most of my agents are on the lunch rotation by now. The other sups are nearby if they have any questions.\"\n\n\"Fine. What do you want?\"\n\nUgh. I hated shit-eating grins. \n\n\"Who's the guy?\" \n\nAddie was kind of the closest thing I had to a best friend. I knew she had her own real best friends outside of the workplace, but for me she was it. She knew things about me that I hadn't shared with anyone. She knew about my past, knew a lot of things that I hadn't been able to say out loud in years. \n\n\"Nobody.\"\n\n\"Bull. Don't insult our friendship.\"\n\n\"Just a guy,\" I said with a sigh. \"We met at the farmer's market.\"\n\n\"Is he cute?\"\n\n\"Are looks everything?\"\n\n\"Yes.\"\n\n\"If looks are everything then yes, he's the cutest.\"\n\n\"That good, huh? Got a picture?\"\n\n\"I actually don't.\"\n\n\"What, he's not on your social media?\"\n\n\"Addie, I barely use anything.\"\n\n\"Shut up, I get those middle of the night Candy Crush requests from you,\" she said, pulling out her phone. \"I'll look him up. What's his name?\"\n\n\"Um.\"\n\n\"Please tell me you know his last name.\"\n\n\"I do. It's weird.\"\n\n\"So you won't change your last name when you get married. Who cares? I want to see the guy.\"\n\n\"His whole name is weird.\"\n\nShe laughed. \n\n\"Just tell me.\"\n\n\"Westley Spenrath.\"\n\nAddie burst out laughing. \n\n\"Ooh,\" she said wagging her finger. \"This guy better be good, with a name like that. He's got a lot to make up for. Spell out his name for me.\"\n\nI remembered the spelling from his badge and told her. She spent a minute scrolling through Facebook. \n\n\"Does he go by Wes by any chance? It's the only guy with that name I can even find in this state. Looks like he's in Anaheim Hills actually. This guy's gorgeous. Holy crap.\" She was scrolling through the pictures for a minute before she realized what she'd originally set out to do.\n\n\"Uh, right, let's get the 411 on this guy. Oh, his birthday's close. It's next month. He's a blood and organ donor. Voted in the last election. And let's see, he's got a sister tagged. Janie. A mom too, Elena. No Dad though. Maybe he just doesn't have a Facebook. Let me check this guy's work and education.\"\n\nOh god. Here it comes. \n\n\"Celine.\"\n\n\"What?\"\n\n\"Celine.\"\n\n\"Jesus Christ, what?\"\n\n\"Please tell me you're not dating a surgical resident of the Children's Hospital of Orange County.\"\n\n\"Um.\"\n\nShe held up her phone to show me the profile. \n\n\"This him?\"\n\nShe was right. He really did look gorgeous in his profile picture. It was kind of nice to see him how I'd first met him\u2014just a t-shirt and jeans. That stupid Hollywood smile was starting to look less and less stupid to me. His black hair was longer in the picture, looking even more wind-swept than usual. And those eyes. I didn't even want to look at his eyes. It'd be hard to look away if I did. \n\n\"Yeah, that's him,\" I said.\n\n\"Holy shit. I need to go down to the farmer's market more often. Which one? By the Packing House?\"\n\n\"Yes.\"\n\n\"I know where I'm spending my weekend.\"\n\nI laughed. \n\n\"I would ask if he has a brother but according to Facebook he doesn't. Ask him for me in case he's got one that doesn't use Facebook.\"\n\n\"I'll move that to the top of my list.\"\n\n\"A surgeon,\" she said dreamily. \"At a children's hospital.\"\n\nI felt uncomfortable. I knew this was exactly the kind of reaction that Wes said made it hard for him to make any friends. I was watching it happen right before my eyes. No wonder he liked that I treated him like shit half the time. Or 'human' as he'd called it. Written off as a surgeon, like there was nothing else to him, like he's just a medical degree with a scalpel in hand, not a person, not human. \n\nMy heart ached for him. This was why I'd had to push and prod to get him to tell me about his profession. This was why he hadn't wanted to talk about why he was wearing his uniform scrubs. This was why he was afraid to mention the hospital where he worked. He wanted people to know him first, but no one ever gave him the chance. Hell, I almost hadn't. I'd practically bullied it out of him. It was just lucky that I happened to be a person who didn't turn out idolizing him. I just respected him. \n\nI got it now. I understood. \n\n\"Oh, shit,\" Addie said suddenly, getting up. \"I have a team meeting at twelve forty-five. I'm like five minutes late already. Gotta go. I'll see you at lunch. Tell me more about him later!\"\n\nShe waved and ran out of the room, practically slamming the door behind her. Addie wasn't a bad person. She hadn't done anything wrong. She was just appreciating his appearance and accomplishments. She had no idea that she was doing it all wrong. It wasn't really her fault. There would be no use trying to explain anyways. \n\nWes and I kind of existed in our own little bubble of understanding. We just got each other. He'd looked past my hard exterior, fighting me, cracking me wide open until he found me inside\u2014the real me, the broken me, the drowning me. He'd been so gentle, handling me with such care, supporting me with strong arms, letting me fall back, letting me look up at the sky to see what was out there. Wes had been there to protect me when I'd let my guard down. He showed me how to trust, how to give in.\n\nI suddenly wanted to hear his voice. Badly.\n\nSo I called him.\n\n\"Celine?\"\n\n\"Hey.\"\n\n\"Don't tell me you're calling to cancel.\"\n\n\"I'm calling to tell you that I miss you.\"\n\nHe paused, registering my words. I'd probably surprised him.\n\n\"I miss you, too. So much,\" he said, recovering. I could hear that warmth again. It took me until now to figure out that it was a tone of adoration. God, was my heart going to burst?\n\n\"I've never told a guy that I missed him before.\"\n\n\"Another one off the bucket list. Glad to be of service.\"\n\nI laughed. \n\n\"Will you take a nap?\" I asked. \n\n\"I'll try if you ask me to.\"\n\n\"I'm asking you to. Get some sleep so you can prepare for that shift.\"\n\n\"Nothing can prepare me for that shift. Except you.\"\n\n\"What do you want me to do?\"\n\n\"You already did it. You told me you missed me.\"\n\nOh, yes. This was what it meant to melt. Melt.\n\n\"Friday,\" I said breathily. \n\n\"I can't wait.\"\n\n\"Me neither.\"\n\n\"I'm glad you called.\"\n\n\"Me too. Go take your nap.\"\n\n\"I'll dream of you.\"\n\n\"Nothing perverted.\"\n\n\"Can't make any promises.\"\n\nI laughed. \n\n\"Bye, Wes.\"\n\n\"Bye, Celine.\"\n\n\u2014\n\n\"Can we, just this once, not take your fucking car, Celine? It freaks me out,\" Addie said, pulling her purse close to her side as the wind gusted outside of the main entrance. \n\n\"Seriously,\" Rita said, smoothing down her curly black hair. \"It's fucking scary.\"\n\nThese girls really had no filter outside of the office. Sailor mouths just like me. That's probably why I liked them so much. They were both just a little older than me, in their late-twenties. Neither of them were married, but Rita did have a boyfriend she's been dating for the past eight years. Don't even get me started on having to agree that her boyfriend was a jackass every Christmas, Birthday, Anniversary, and whatever, that passed without a proposal. \n\n\"No,\" I said. \"The supervisor lot is too far and I hate your cars.\"\n\nAddie rolled her eyes. \n\n\"Not everyone can afford a fancy new Tesla.\"\n\n\"Keep that attitude up and I'll use the autonomous feature on the way to In N Out.\"\n\n\"Oh hell no,\" Addie said. \"I'll jump out at forty miles an hour. I'd rather die.\"\n\n\"Stop being such a baby,\" I said, fishing my keys out of my bag. \n\n\"Don't do that summon thing,\" Rita said. \"I hate seeing a car driving without a person in it.\"\n\n\"Just get in,\" I said, approaching my car. \n\nThey both fought over who shouldn't take shotgun. \n\n\"You can both sit in the back, fucking babies.\"\n\nAddie ended up feeling bad enough to sit up front with me. I'd started the AC from the app on my phone upstairs so it was pleasantly chilly in the car. \n\n\"You should live in Antarctica,\" Rita said. \"Everything's always cold. Your car, your office, your apartment.\"\n\n\"And her heart,\" Addie added, laughing. \n\n\"Thanks,\" I said, pulling out of my spot. \n\n\"No wait,\" Addie said suddenly. \"Her heart ain't so cold no more. Celine's got a boyfriend.\"\n\nRita leaned forward, her head appearing between the two front headrests. \n\n\"Come again?\"\n\n\"He's not my boyfriend,\" I said, setting the self-driving feature as I drove to In N Out. I hoped they wouldn't notice. My feet were killing me. I slipped my feet out of my heels and rubbed them together to ease some of the soreness. \n\n\"Keep telling yourself that. Rita, he's fucking perfect,\" Addie said, like this was the most delicious gossip she'd ever had the pleasure of sharing. \"And he's a surgeon. At CHOC. And gorgeous. So fucking gorgeous. Like cream in your pants gorgeous.\"\n\nI rolled my eyes. \n\n\"Let me see!\" \n\nAddie was already on her phone, pulling up Wes's Facebook. \n\n\"You guys are such stalkers.\"\n\n\"Everyone does this, Celine. Welcome to the future,\" Addie said, passing her phone back to Rita. \n\n\"Holy shit fuck son of Zeus.\"\n\nI laughed. Rita. Glorious Rita. \n\n\"This is the boyfriend?\" Rita asked, her eyes glowing from the phone. \n\n\"He's not my boyfriend.\"\n\n\"Girl, lock him down,\" she said, tapping through his pictures. \"He's got a total runner's body. I'm lucky if I can get Brian to eat a stick of celery.\"\n\n\"Just give him a blowjob. He'll eat anything you want. Even you,\" Addie said, pulling out a compact mirror from her bag. She blotted around her nose and temples with a tissue. \n\n\"Why don't things like this ever happen to me?\" Rita asked, going back years in his pictures. I had only barely glanced at his display picture and these girls had probably seen what he'd looked like in college. \n\n\"It's easily achievable. Step one: have a body like Celine. Step two: have a face like Celine. Step three: have an attitude like Celine. And step four: be Celine,\" Addie said, smacking her lips after applying a new layer of lipstick. I didn't know why she bothered. She was about to eat a fucking sloppy, greasy burger. ",
        "\"You guys are so full of shit. You're not getting pay raises for buttering me up.\"\n\n\"If you'd stop dressing like a fifty year old accountant you might see what we're talking about,\" Rita said, passing Addie back her phone. \n\nI was used to this. Rita and Addie were my friends. They always felt obligated to compliment me, as if I was some sad little pathetic pariah that needed a confidence boost to find a boyfriend. They were both absolutely certain that I had a stick up my ass because I didn't get laid often enough. They were right about the laid part, but I've always had a stick up my ass, even when I had regular sex. \n\nThe two of them spent a few minutes talking me up like I should be on the cover of Sports Illustrated while I told them to fuck off. I tried not to think about what Wes had said, about how I was beautiful and had just convinced myself otherwise. \n\nWhy didn't anyone understand? \n\n\"We're never going to find parking,\" Addie muttered. The drive-thru line had wrapped right out into the street and the lot was full. It wasn't really surprising. In N Outs were this busy at all hours, day and night. Best burgers in California. Best burgers anywhere, but that's probably just my little inner Cali-girl voice talking. \n\nWe ended up parking across the street in front of a Target and walked over. The girls were in pencil skirts and tight blouses and heels with perfect hair and makeup. I was in a business pantsuit with makeup so simple that you might not even notice that I had on any at all. You already know about my hair. It's down, and right now it was bothering the hell out of me because the wind was whipping it everywhere. Addie passed me an elastic hairband from her wrist and I gave her a grateful smile. \n\nI tied up my hair while I waited in line. I was looking up at the menu to figure out my order when someone bumped into my back.\n\n\"Her boyfriend's a surgeon,\" Addie snapped. \"Back off.\"\n\nI glanced over my shoulder. It was just some guy. It had probably been by accident but Addie's reaction had been enough to make him look ashamed.\n\n\"Sorry,\" he said putting up his hands. It reminded me of how Wes had done the same thing when I'd glared at him for grabbing my bag.\n\nWes. Wes. Wes.\n\nIt was like he was everywhere, like I was seeing him in places that he'd never been to, seeing him in my head, in my mind, in my eyes. I felt a deep sense of emptiness, like there were pieces of me missing, like Wes had taken them and kept them for himself. I didn't even want them back. I just wanted him.\n\nWe walked back to my car to eat. My car still had the AC running, and for once Rita and Addie didn't complain about how cold it was. They both settled in the seats, sighing and opening up their paper bags. Rita had gotten an animal style burger and fries with a Neapolitan milkshake. Addie had a cheeseburger, regular fries and a cup of lemonade. I was the worst of all. Two double doubles with cheese, extra onions, animal style fries, and a coke. Yeah, two cheeseburgers. So sue me.\n\n\"I don't know how you can eat so much,\" Rita said jealously. \"What the hell do you even do?\"\n\n\"I work out,\" I said. What a stupid question. \n\nAddie was back on her phone. \n\n\"Hey, boyfriend's at the grocery store,\" she said. \"He just checked in at Vons.\"\n\n\"What?\" I peered over her shoulder to look at her phone. She was right. \n\n\"Great. He was supposed to be sleeping.\"\n\n\"Call him up. Tell him off. Argue. Have great make up sex,\" Addie said. \n\n\"We haven't\u2014\"\n\n\"Jeez, what the fuck is wrong with you, Celine?\" Rita said from the back seat. \"Fuck his brains out.\"\n\n\"Shut the hell up,\" I said, digging in my bag for my phone. \n\n\"Oh, shit,\" Addie said, shushing Rita. \"She's about to let him have it.\"\n\n\"I'm not letting him have anything. I just want to check that he's okay.\" \n\nRita and Addie shared a look. \n\n\"Goner,\" Rita said.\n\n\"Yup,\" Addie said.\n\n\"Whatever.\"\n\n\"Just don't tell him that you saw the check-in on his Facebook. It's creepy. People aren't supposed to know that you stalk them,\" Addie said.\n\n\"Thanks for that,\" I said, scowling. \"You guys act like I don't know anything.\"\n\n\"You don't,\" said Rita.\n\n\"Yeah, you really don't.\"\n\nI flipped them off and dialed Wes's number.\n\n\"Can't get enough huh?\" Ugh. So full of himself.\n\n\"Shut up.\"\n\n\"You called me to tell me to shut up,\" Wes said with a laugh. \"What are you up to?\"\n\n\"Having lunch.\"\n\n\"Yeah? What're you having?\"\n\n\"In N Out.\"\n\n\"Ah yes, the cheeseburgers. I remember you mentioning something about that. Engorging yourself appropriately?\"\n\nI bit back a laugh. \n\n\"Yes. What are you up to?\"\n\n\"Couldn't sleep. I'm picking you up some avocados.\"\n\nThis time I did laugh. \n\n\"You're an idiot.\"\n\n\"I can be. Miss me?\"\n\n\"Maybe.\"\n\n\"What a shame. I definitely miss you.\"\n\nMy stomach did that stupid flop thing again. I hated that Addie and Rita were watching me so closely. \n\n\"You don't have to buy me avocados.\"\n\nAddie was making one of those dreamy faces, putting her hand to her chest and letting out a stupid little sigh as quietly as possible. God, I was starting to hate that everyone knew about my avocado addiction. \n\n\"I want to. Anything else you want me to pick up for you? I don't know what the hell you eat besides that and cheeseburgers. All the food I have at home is for people on healthy diets.\"\n\n\"I can bring food.\"\n\n\"You'll make me look like a horrible host. My mother would kill me.\"\n\nElena. I hated that I had that information in my brain. Fucking Addie. \n\n\"Seriously. I'm not a baby. I'll be fine.\"\n\n\"You're kind of my baby. Let me take care of you.\"\n\nI rolled my eyes. \n\n\"You were supposed to be sleeping.\"\n\n\"I said I'd try. Hard to sleep without you there.\"\n\n\"I've never even been in your bed.\"\n\n\"Yeah, but it's all I can think about now.\"\n\n\"Pervert.\"\n\n\"Only when it comes to you.\"\n\n\"You're impossible.\"\n\n\"So are you.\"\n\nI let out a frustrated sigh.\n\n\"You really should have tried to sleep. I don't know why the fuck you're out buying avocados or whatever. It's stupid. You'll be exhausted. How are you even going to make it home safely tomorrow night?\"\n\n\"I guess I'll have to buy Accidental Death and Dismemberment insurance from you.\"\n\n\"I work in Personal Lines so I don't even sell that shit\u2014and fuck you, Wes. That's not funny.\"\n\n\"Don't be mad,\" he said, even though he was laughing. \"I Uber for on-call shifts. I'll be fine.\"\n\n\"I don't know why I'm even bothering to care,\" I muttered. \n\n\"I'll go home. Right now. I promise.\"\n\n\"No, do whatever you want. I'm not your mother.\"\n\n\"I don't want to upset you,\" he said, finally sounding serious.\n\n\"Too late.\"\n\n\"I'm my way to the check-out line. I live only five minutes away. I'll go home and take a nap, okay? Don't be upset.\"\n\n\"Well, as long as you don't die on the way home.\"\n\n\"I'll find a company that sells A.D.D. insurance and name you as my sole beneficiary. I'll set you up for life. How much do you think you'll need? Surgeons probably get something like a couple million.\"\n\n\"You are so annoying, Wes.\"\n\nHe laughed. \n\n\"I'll make it up to you. What do you want? Flowers? Chocolates? Both?\"\n\n\"I can't be bought.\"\n\n\"Not even with a couple million?\"\n\n\"I'm gonna go now.\"\n\n\"I'll try not to die until I buy that policy.\"\n\n\"Bye, Wes.\"\n\nHe laughed again and I hung up on him. \n\n\"Oooh, girl,\" Rita said in mock sympathy. \"You really are a goner.\"\n\n\"The chemistry,\" Addie said with a sigh. \"Have you ever heard chemistry like that before, Rita?\"\n\n\"What, you guys heard everything?\" I asked, reaching for my second burger. \n\n\"Your call volume was up pretty high. Heard it all,\" Rita said. \"And yeah, that chemistry. You two need to bang already. It's going to be fireworks like the fucking Fourth of July. All that tension.\"\n\n\"Hey,\" Addie said suddenly. \"You're on the pill, right?\"\n\n\"Obviously.\"\n\n\"Why the hell would that be obvious?\" Rita asked. \"You have cobwebs in your vagina, Celine.\"\n\n\"I take it to regulate my periods,\" I said. \"And fuck you, Rita.\"\n\nShe laughed. \n\n\"You two would make some seriously cute babies,\" Addie said. \n\n\"Don't start.\"\n\n\"Maybe he'll want kids.\"\n\n\"Then he'll find someone who wants kids.\"\n\n\"Seriously? You're not planning on marrying this guy?\" Rita asked. She sounded genuinely disgusted. Whatever. \n\n\"I met him Sunday. Would you stop planning my fucking wedding?\"\n\n\"Celine. This guy is loving husband and father material. What the hell is wrong with you?\" Jesus Christ. Rita could be so touchy about that husband shit. She wanted it so badly that she couldn't comprehend why I didn't.\n\n\"I'm not exactly in the market for a loving husband and father. I'm happy with where my life is right now.\"\n\n\"No, you're not,\" they both said together. \n\n\"You two need to learn how to mind your own fucking business. I don't want to get married or have kids. You guys already know that.\"\n\n\"People always say that,\" Addie said. \"But it just means they haven't met the right person.\"\n\n\"You don't even know him. Why the hell are you guys assuming that he's marriage material?\"\n\n\"Because you don't like anyone, Celine,\" Rita said. \"And you obviously like him.\"\n\n\"Oh, right. That must mean that I want to marry this guy,\" I said sarcastically. \n\n\"Six months?\" Addie said, turning to Rita.\n\n\"Eight,\" Rita said. \n\nThey shook hands. \n\n\"What the fuck are you two doing?\"\n\n\"Making a bet,\" Addie said, grinning. \n\n\"I don't know why I even talk to you guys,\" I said, stuffing my mouth with my cheeseburger. It was kind of making me feel better. Greasy, cheesy, meaty, delicious.\n\n\"So,\" Addie said, wiping her fingers with a napkin. \"Tell me about Friday.\"\n\n\"What's happening Friday?\" asked Rita. \n\n\"She's going over to the boyfriend's place.\"\n\n\"How do you even know these things?\" I hadn't even told her that. \n\n\"I was in the room when you planned it. Do I have to remind you what Rita said about your call volume? Consider lowering that if you don't want people to know about your sexcapades.\" \n\n\"Unbelievable,\" I muttered, starting the car up. Everyone had finished eating and it was time to get back to work. We couldn't leave the Floor without two of the supervisors for too long during lunch hours. The other sups would be leaving for their lunches soon and that would leave the Floor understaffed. During this time of day I liked to have at the very least eight walkers on the Floor, even though at least twelve was typically the ideal. They had to eat though. \n\n\"I know you don't own any lingerie. Want to go shopping after work?\" Addie asked. \n\n\"Jesus Christ, no. We aren't going to have sex.\"\n\n\"Why the fuck not?\" Rita asked.\n\n\"Just\u2014not yet.\"\n\n\"You're scared it's going to ruin it,\" Addie guessed. \"He's not going to lose interest after you guys spank the monkey and choke the chicken. Some guys do, but this one sounds really into you.\"\n\nSpank the monkey and choke the chicken. What the hell was that?\n\nI'd avoided thinking about it, but that actually was kind of something I'd planned to put off for as long as possible. Just how Wes had wanted to keep his profession a secret, I wanted to keep a secret how bad of a lay I was. I didn't know how to engage. Not that I just let guys do all the work, but I didn't make enough noise or sound enthusiastic enough to let any guy know that I was really enjoying myself. Guys like having their egos stroked. Whatever. \n\nWes and I had technically only been on one date. I didn't really count the weird coffee exchange we'd had on Sunday. How long did people wait before having sex?\n\n\"There's a third date rule,\" Addie said, practically reading my mind. \"What number date is this?\"\n\nFucking hell. \n\n\"Friday would be two, technically.\"\n\n\"Technically? What the hell does that mean?\"\n\n\"We had dinner last night, but the day we met we had coffee together. I wouldn't exactly call that a date.\"\n\n\"Did you guys establish that the coffee thing was a date?\"\n\n\"He did, but it wasn't really a date. It was just coffee.\"\n\n\"Most first dates are 'just coffee'. Jesus, Celine.\"\n\n\"Like I said,\" Rita said. \"Fuck his brains out. It's time. Don't make the poor guy wait. Sometimes they lose interest if you don't put out. It's a lot more likely that they leave because you won't put out rather than leave because of bad sex. You can always try again when it comes to bad sex. You can work on that shit. You can't work with a sexually frustrated hot guy who can easily get his relief from literally anywhere else.\"\n\n\"Really?\" Ugh, my voice was so small. \n\n\"Shopping,\" Addie said, cutting in. \"Victoria's Secret after Rita and I get off. Leave early, Celine. Delegate or whatever. We can go down to the mall. It's like a twenty minute drive. Maybe forty minutes with that hellish five o'clock traffic though.\"\n\nI'd already told Wes that there would be no 'whatever'. He'd sounded okay with it. Maybe he was just getting it from somewhere else. We were just dating. We'd never said we were exclusive. Hell, we'd only been on technically 'two' dates. He was within his rights to get it from wherever he wanted. I usually wouldn't have cared. I'm a casual dater. \n\nBut I kind of cared now. \n\nScrew it.\n\n\"Victoria's Secret,\" I said, pulling onto the street. I wasn't going to use the self-driving feature this time. I had a boost of energy from my lunch and from the thought of Wes getting his 'whatever' from someone else made me want the satisfaction of actually putting my foot down on the pedal. God, what the fuck was wrong with me?\n\n\"I'll get Lisa to manage after five,\" I said.\n\nAddie practically gagged.\n\n\"Why the hell is she senior supervisor anyways? She's ancient and useless. She isn't up to date on current regulations. And she pronounces 'comprehensive' as 'comprehension'. It makes no sense. She's been in insurance for like half her life. She should know this.\"\n\n\"Because she's been with the company the longest. It'd be insulting not to give her the position,\" I said, annoyed that I was having the explain this for the millionth time.\n\n\"Since when do you care about feelings?\"\n\n\"I'm not going to set that standard. She's been with the company almost twenty years longer than I have. I may be a bitch, but I'm not going to pass up giving a promotion to someone who has serviced this company for years. She'd never applied for the position until I became manager. I had to give it to her.\"\n\n\"I just don't get why we have to have a literal senior citizen as senior supervisor.\"\n\n\"Age discrimination lawsuit,\" Rita piped up from the back. \"Celine's right. If she hadn't given Lisa the promotion then it would've looked like she was passing her up because of her age. On paper she does have the most years of experience even though she doesn't know shit. I think she's a dinosaur with dementia. She barely knows how to use Portal.\"\n\n\"Stop talking shit about your senior supervisor,\" I snapped. \"She's directly above you, which makes her your boss. Treat her with respect and listen to what she tells you to do. She'll answer to me later. And she's not an idiot. She does know insurance. She just doesn't know how to apply herself in a position of power yet. That's my fault. I'll have to make time for her and give her more some more guidance one-on-one. But remember, I may be your friend, but that doesn't give you a pass to talk shit about your boss to me. That's inappropriate and you know I've told you a hundred times not to do it. Talk shit about her with each other. Not with me.\"\n\n\"Dragon Lady,\" Addie said, rolling her eyes. \n\n\"You're damn right I am.\"\n\n\u2014\n\nTraffic was as hellish as Addie had predicted it would be. I was lucky she and Rita had taken their own cars. I couldn't stand her blabbing and complaining in my ear about parking. She got particularly moody about shit like that. \n\nI met them in front of Yogurtland because Rita really, really wanted frozen yogurt. There was a plain tart flavor that wasn't too sweet so I bought a small cup. Rita and Addie piled up large cups miles high with chocolate and vanilla and cookies & cream and cheesecake and pecans & pralines and honeydew and raspberry flavors with so many toppings that it gave me a sugar rush just looking at it. All I got as a topping was unsweetened coconut flakes. Theirs was all chocolate sauce and candy and chocolate chips and sugary cereal. Ugh. \n\n\"We should stop by Sephora too,\" Addie said, sucking on her spoon. A guy started following her just so he could watch her with his tongue hanging out of his disgusting mouth. \n\n\"Fuck off, creep,\" I said. He looked away and scattered off into the mall. \n\nAddie laughed. \n\n\"I'm never going to find a boyfriend. You scare off all potential prospects.\"\n\n\"You don't want a boyfriend like that,\" I muttered. \"And I don't want to go to Sephora. I already have makeup.\"\n\n\"You don't even look like you're wearing makeup,\" Rita said, squinting as she looked at my face. \n\n\"That's the point.\"\n\n\"That's not the point of makeup,\" Addie said. \"Let's go. If I had your face I'd be accentuating my features every damn day.\"\n\n\"Seriously, Celine,\" Rita said, rolling her eyes. \"You look like Gal Gadot's Mexican cousin. Stop trying to downplay your features into Rosie O'Donnell's Mexican left buttcheek with that pathetic makeup job.\"\n\n\"What do I have to do to shut you two the hell up?\"\n\n\"Go to Sephora,\" Addie said, dropping her empty yogurt cup into a trash can as she passed it. She'd finished it in like five minutes. \n\nSo we went to fucking Sephora. \n\nThe girls bought close to four hundred dollars worth of makeup with my credit card and then forced me down into a chair to have one of the makeup artists do my makeup before we left the store. I just sat there with my arms crossed and maintained a face that wasn't too bitchy because I didn't want to be rude to the makeup artist. She showed me how she applied all the makeup step by step.\n\n\"So, what do you think?\" the makeup artist asked, stepping away so I could see myself in the mirror in front of me. \n\nWhat the fuck?\n\n\"What'd I say? Gal Gadot's Mexican cousin,\" Rita said smugly. \n\n\"Trade your face with mine if you don't fucking like it,\" Addie said, smiling. \"I'd take it in a heartbeat.\"\n\n\"You two shut your fucking mouths,\" I said, tipping the makeup artist. \"Sorry about our French. We've had a long day.\"\n\n\"No problem,\" the makeup artist said. \"If I could cuss after a long day I would too. And hey, thanks for the tip. It's way too much but I'm not gonna refuse it.\"\n\nShe waved as we left the store. I couldn't believe I had a small bag of almost four hundred fucking dollars worth of makeup. There were only like ten things in there. Why the hell was makeup so expensive?\n\n\"Fuck off, creep,\" Addie started saying to guys every few feet. She was really enjoying getting back at me. \n\n\"Yeah, her boyfriend's a surgeon. Try and compete with that!\" Rita yelled at a guy that scowled from being told off. \n\n\"Will you guys shut the fuck up about him being a surgeon? It's embarrassing. And he's not my boyfriend.\"\n\n\"Okay, first of all, he is a surgeon so reap the benefits,\" Rita said. \"And secondly, you don't have to marry the guy but you better not come into work on Monday without locking down a certain hot surgeon over the weekend. We'll disown you. We'll shun you. Burn the witch\u2014burn the bitch.\"\n\n\"Come on, Mexican Wonder Woman. We still have lingerie to buy,\" Addie said, grabbing my wrist. She led me through the mall, navigating it in a way that gave me a headache. The South Coast Plaza was pretty big. I wouldn't have come here alone, but Addie and Rita have dragged me here before. I still didn't know my way around it though. \n\nI don't even want to talk about the spectacle I had to sit through at Victoria's Secret. I spent enough time as possible sitting on one of those plush armchairs outside of the dressing room that nervous and perverted husbands/boyfriends sat at while they waited for their significant other to try on some frilly shit that they definitely didn't need for a night that they could've had without it. ",
        "One of those nervous perverted husbands/boyfriends sat too close to me, just one armchair over, leaning over to try to look down my shirt. I don't know what the fuck he was looking for. I had it buttoned up all the way. I was about to tell him off, but Addie beat me to it.\n\n\"Fuck off, creep,\" she said, marching over. \"Or I'll take a picture of you and show it to every woman in the dressing room until I find yours.\"\n\nHe got up and left. \n\n\"Okay, we've got a selection,\" Addie said, yanking me up off the armchair. \"Come see.\"\n\n\"Absolutely not,\" I was saying a minute later. \"What the hell is this? This is just a string. I'm not paying eighteen bucks for that.\"\n\n\"It's called a thong, Sister Mary,\" Rita snapped. \"And it has a matching bra.\"\n\n\"I know what a fucking thong is. I just don't want one.\"\n\nAddie rolled her eyes. \n\n\"Here,\" she said. \"This is the only thing I can imagine that you'd actually agree to buying with only fifteen minutes of arguing and convincing.\"\n\nShe handed me a satin cami crop top, matching shorts that were a little too short for my liking and a pair of bra and panties that still looked remotely close to what a bra and panties were supposed to look like. All of it was in a very light coral color. \n\n\"It suits your skin tone,\" Addie explained. \"One of these days you'll ask us to help you find a teddy, a corset or a bustier when you have an anniversary or something, but for a first night this looks innocent enough. It isn't too desperate.\"\n\nI highly doubted I'd ever ask for any of that, but it didn't take her fifteen minutes to convince me that this was the right outfit. She was right. It really didn't look too desperate. It looked like something that could've passed for something I would've worn at home anyways, not something that I'd bought specially for the occasion. I really didn't want him to know I'd bought these to encourage him to do 'whatever'. That was just too embarrassing. \n\nI got fitted for the bra, paid an ungodly amount of money for clothes that weren't even made of that much material, and then I tried cutting Addie and Rita loose. No dice. They wanted dinner. \n\nWe went to a little sushi place, sat at the bar and drank just enough peach sake to feel tingly and fought with chopsticks over the last piece of fatty bluefin tuna sashimi. The stress from the day just kind of melted away. I forgot about the shitty referral reports and firing Felicity and dealing with David and spending hundreds of dollars at the mall. None of that mattered anymore. \n\nWes swam into my mind. \n\nTomorrow. I would see him tomorrow. \n\nIt was like my heart didn't know how to slow down. \n\n\u2014\n\nFor the first time in the entirety of my career, I participated in casual Friday. It was weird to wake up in the morning and not pull out a hanger with a business suit, but I reminded myself that it would be stupid to wear a business suit to the office, change into casual clothes for Wes's place and change yet again into the sleeping outfit I'd bought from Victoria's Secret. \n\nI put on black skinny jeans, a tight knitted black turtleneck with a triangular cut in the back that wasn't low enough to be considered anything close to suggestive, black ankle boots, a dark cranberry-colored wool infinity scarf and a long navy blue coat for the rain. It doesn't always rain in Southern California, but when it does, we act like a bunch of babies and get all our warm clothes out like it's the middle of winter in the Arctics. \n\nI curled my hair with a one-inch curling iron, brushed it out into beach waves, put it up into a messy ponytail and sprayed some hairspray to give it some volume\u2014something that I usually did, but never for the office. Then I spent a good forty five minutes putting on that makeup that had cost me more than I'd wanted to spend. \n\nWhen I finished and looked in the mirror I saw that I wasn't myself. \n\nI was Gal Gadot's Mexican cousin. \n\nWhatever. It wasn't like I was ugly. I'd never said I was. Putting on makeup to look like this felt like a lie to me. This wasn't who I was. I'd always been a straight-forward person. What you saw was what you got. Looks had never been important to me. Some light makeup to cover up the dark circles underneath my eyes and even out my skin tone was usually all I needed, and even that I only did to look presentable at the workplace. There was a certain amount of professionalism that came from looking like I hadn't just rolled out of bed. \n\nI liked that my brain was my best attribute. I didn't have to go to medical school like Wes, or even go to college like all the other people my age to know that I was smarter than average. I'd been an excellent student in high school, but somewhere between changing schools too many times I'd ended up barely having enough credits to graduate. That was not my fault, but I'd learned to accept it. I'm sure there were grants and scholarships for foster kids, but I'd jumped right into career mode after high school. It was possible to make it without a college degree. These days experience mattered more, and I hadn't even had to go into thousands of dollars of debt to get where I am. I'm living proof that sometimes grit and dedication is all you need.\n\nStill, maybe a guy like Wes deserved Gal Gadot's Mexican cousin. Tonight he was going to have that. I was going to offer 'whatever' exactly in this lie, but I wasn't going to give myself shit for it. I wanted to do this for him. I just hoped I was enough. \n\nI packed an overnight bag. All my toiletries, the clothes I'd bought from Victoria's Secret(with the tags cut and discarded), a pair of slippers, knee high socks, my long black plush fleece robe with sherpa lining to wear over my sleeping outfit in case his apartment would be cold, an extra set of casual clothes for tomorrow, a fucking business suit just in case I had to go into the office, plain black heels for just that fucking outfit, an extra pair of bra and underwear because you never know, and all the makeup from Sephora. I'd need to touch this shit up. It was going to be a long day. Fridays always were. \n\nThen I grabbed my umbrella and headed out into hell. \n\nI let my Tesla do most of the work to drive because fuck all, Californians were bad drivers to begin with, but on rainy days they were especially horrendous. Accidents lined up the freeways every few miles, but I'd been prepared for that. I'd left a half hour earlier than normal, but on the road I realized that I should have left even earlier. It was pouring, and people were driving like assholes to get to work. I didn't let myself get distracted. I stayed alert so I could take control of the car at a moment's notice if I had to. That was the law anyhow. You can't read or text or whatever in a self-driving car. You just drive with your eyes. \n\nIt was barely twenty minutes to seven when I pulled into my parking space. As manager, I could technically walk in any time I wanted, but I preferred to be there at opening. I liked to boost people into starting their day in full swing. Dragon Lady was really enough to get people awake, with or without their morning coffee. I didn't accept anything less than perfect. \n\nBut maybe this morning I should have come in late.\n\nFucking hell, I felt like I was in one of those movies where the nerd shows up to high school with a makeover. Starting all the way from the main entrance I got all stares, all whispers, all \"Celine, you look amazing\" and all the shit I really didn't fucking need because I just wanted to get to my Floor to walk it before the early bird shift got on the phones. And the last thing I needed was to run into David. That thought alone had me lowering my head to conceal my face, snooping up to the elevators like I was fucking Sherlock Holmes in his trench coat. \n\nThe elevators that led to my department were located in our break-room. God, that was the fucking worst. Watching a handful of my agents spit their coffee into their cups was not how I wanted to start my morning. If they were my supervisors they might have stopped me to chat and say something about my look, but the agents were wee little babies with no balls whatsoever. They knew they weren't allowed to talk to me unless I talked to them\u2014well, that wasn't really true. I'd help any of them if they needed it, but I didn't mind letting them believe otherwise... at least for this morning. \n\nI dropped off my bag, my laptop case, my trench coat and my umbrella in my office and did a quick check of my emails to see if there was anything that needed urgent attention, but thankfully nothing had really happened since five yesterday. Lisa had managed to hold her own for the night. I planned to treat her to dinner sometime.\n\nI grabbed my walkie, started a transmission to check if all the scheduled supervisors were ready to start their day and then started my Floor walk. \n\nHeads. Turning. Everywhere. \n\nFucking hell. \n\nI checked in with some of the agents that I knew were struggling, walked them through a few suggestions to boost their referral counts and improve their call stats, and checked on some of my favorite agents that I'd promoted to Floor-walkers. I'd hand-picked the agents with the most knowledge and leadership qualities to walk my Floor when my supervisors were short. They got a small pay bump and it got them off the phones. They loved it, and I appreciated them for their help. They were always the ones passionately defending me, saying that I wasn't really Dragon Lady, just misunderstood. Ha, if only they knew. \n\nStill, I was appropriately touched (for a Dragon Lady) whenever I heard what they'd done. I'd been grooming them to promote them to supervisor positions when they opened up. I'd seen quite a few of my supervisors transfer to other departments over the years. My people were highly sought-after. Underwriting especially loved cherry-picking through my staff. What-the-fuck-ever. I would've told them to fuck off if it wasn't for the fact that it was furthering my staffs' careers. I only wanted the best for them. \n\nThe day started at seven o'clock sharp. The phones started ringing, and I began to check in with all the supervisors in their cubicles. Just my regular morning routine. I felt like I was in my zone. This job had a way of sucking the soul out of me, but I lived for these moments. The day was starting perfectly, the agents were working hard, it was raining outside (which I loved), and I was going to see Wes tonight. So many good thoughts. I hoped it would last me through the day. \n\n\"Holy\u2014I can't cuss. I'm on the Floor. But holy\u2014ugh. Celine, girl,\" Rita said when I tapped the raised glass of her cubicle window as I entered into her line of vision. \n\n\"Don't start.\"\n\n\"Oh, I'm going to start and then I'm going to finish too. I feel bad for every single man and lesbian in this entire building today. You unattainable babe.\"\n\nI rolled my eyes. \n\nAddie walked in carrying a tray with three iced coffees. One for herself, one for Rita and one for me. Sea Cream Black coffee. I fucking loved Addie. \n\n\"Thanks,\" I said gratefully. \n\nDon't ask why we were drinking iced coffee at eight in the morning on a rainy day. It was just the way we functioned.\n\n\"I'm not on the coffee run today, thank God,\" Addie said with a sigh. \"George is on it when he gets here at ten, but I thought I'd get us some for the morning. God knows we need it. Traffic almost killed me this morning.\"\n\n\"Tell me about it,\" Rita muttered. \n\n\"So,\" Addie said, giving me a one over. \"Gal Gadot's Mexican cousin is on the prowl today.\"\n\n\"Shut up. Get back to your desk,\" I said, getting into manager mode. \"Listen in on your agents' calls this morning. The insureds are going to be annoyed over the traffic too. Expect a lot of claims calls. Make sure you watch the call volume. Stop routing new claims at the mark and route to your manual claims trained agents to take some of the load off the claims adjusters.\"\n\n\"There aren't enough of those manual claims agents. I've been telling you forever,\" Rita said.\n\n\"I'm working on setting up another training class after the new hires rotate out of the bull-pen.\"\n\nThe bull-pen was the term we used in our call center for where the new junior agents were grouped. They usually spent a month there with two highly experienced supervisors to answer all questions and guide them into becoming fully-functioning agents. That first month is one of the most trying times for a new call center employee. It's their first time on the phones dealing with customers live outside of training. You could usually see them sweating when walking by their section.\n\n\"Thank god,\" Addie said. \"Our claims hold times are through the roof these days. I'm gonna go check in with my agents. See you guys later.\"\n\nI sipped my coffee as I checked in with the four other early bird supervisors. No surprise, their eyes bulged too. \n\n\"You need to start doing this every day,\" Bethany said, taking her headset off. \"You're the best looking thing to have ever walked in through these doors.\"\n\n\"I'm considering firing you. Right now.\"\n\nShe laughed. \n\n\"When are you going to learn how to take a compliment?\"\n\n\"When you get those numbers where I want them,\" I said, looking over her agents. Some had been staring at me and quickly averted their eyes. \n\nOne of them was shuffling over, looking like he was going to pee his pants.\n\n\"Good morning,\" he said to the both of us. \n\nAh, Ralph. I knew this kid. He'd impressed me when he'd mastered auto so fast that he'd gone into training for home, watercraft and umbrella within the first three months out of the bull-pen. Almost as good as me. Almost.\n\n\"What's up, Ralph?\" Bethany said, beckoning him into her cubicle. \n\nI slurped my drink, watching in mild interest. I had nothing else to do on the Floor now. I could just observe the morning happenings for a little while before heading back to my office to tackle some reports. \n\n\"Just wanted to double check something I couldn't find in the product line manual,\" Ralph said, glancing at me nervously as he talked to Bethany. God, I scared everybody.\n\n\"Shoot,\" she said. \n\n\"So the first driver's record point is forgiven after traffic school and the DMV removes it, right? Like we can't even see it on their record?\"\n\n\"Yup.\"\n\n\"But the second isn't,\" he continued. \"How can I make sure that it's a second? Do I count it as if it's a first?\"\n\n\"Yes,\" I said, cutting in. \"Let me see the record. I'll show you how to recognize what's the first point excused from traffic school and what to do if it's a second.\"\n\nI followed Ralph back to his desk. \n\n\"Do you have the insured on hold?\"\n\n\"Yeah,\" he said. \n\n\"What's the hold time so far?\"\n\n\"Five minutes,\" he said. \"I've been looking for the answer.\"\n\n\"Okay, remember to check in once every three and a half minutes to keep from going over the hold time. Check in now and put them back on hold.\"\n\nRalph checked in with the insured, assured them that he was working on it, and pulled up the drivers record for me to look at. \n\n\"Okay,\" I said, pointing out the driver's record point. \"This one for speeding, right?\"\n\n\"Yes.\"\n\n\"How did you find out this was a second point?\"\n\n\"The insured told me. He was calling to see if it was going to affect his rates.\"\n\nI dropped my empty coffee cup in his trash can and got a closer look. \n\n\"That's the only way we'll know. If they tell us themselves,\" I said. \"The second will always show as a first, as if the first had never happened. Even if the insureds tell us they had a first we won't charge them for it because whatever isn't on the record we can't charge. You have to treat the second as if it's the first. Any after that would be counted as second, third, and so on. Act like the first never happened because it's not on his record. The Department of Motor Vehicles doesn't exclude points on their reports starting from the second, regardless of if he goes to traffic school again so we do start charging from there. You can't advise him whether or not to go to traffic school though. That's the judge's job. Let him know the rates will stay the same until the policy renewal, but if he switches insurance in the meantime that company is within their right to charge it because the speeding ticker is viewable on his record now. We have an obligation to tell him that or he'll call back and complain that we hadn't mentioned it. Other companies have to charge what they can see. We don't change our rates in the middle of a policy period. Underwriting will apply it only upon renewal. This information actually is in your product line manual, but it kind of gets convoluted in all the lawyer jargon. I know the exclusions can get confusing.\"\n\nI could tell from the hungry look in his eyes that he was drinking all this information in. I knew for a fact that this kid was never going to ask this question again. He was storing it in his brain for future use. He reminded me so much of myself when I'd first started out. He was just like me too\u2014fresh out of high school. And hungry. So hungry for a chance.\n\n\"Okay,\" he said slowly. \"I think I've got it.\"\n\n\"Come see me in my office after this call. Don't worry, you're not in trouble. I'll have Bethany adjust your times so it doesn't affect your call stats.\"\n\nHe looked scared, like he was in trouble even though I'd just said he wasn't. Whatever. He'll find out in a few minutes that I was giving him a promotion and pay raise. \n\nI walked back to Bethany's cubicle. \n\n\"I'm promoting that kid to Floor-walker. He's good.\"\n\n\"Yeah, he is,\" Bethany said, smiling dreamily like he was her own biological child. It was kind of cute. I liked this level of dedication and care from my supervisors. This was what made their agents trust them. Which, in turn, boosted efficiency. The agents should always be able to feel comfortable enough with their supervisors to ask questions. A hundred questions asked to a supervisor was better than one wrong answer given to an insured.\n\n\"Adjust his time with a twenty minute exclusion after he gets off this call. I told him to come by my office.\"\n\n\"He'll be so happy.\"\n\n\"Don't ruin the surprise. Let him continue to think he's in trouble.\"\n\n\"You're horrible.\"\n\n\"I know.\"\n\n\"I'll send him over as soon as he gets off, supermodel Dragon Lady.\"\n\n\"Shut up. Get back to listening in on those calls.\"\n\n\"Yes, boss,\" she said with a grin.\n\nI walked the Floor back to my office, pausing only briefly to answer questions for the few agents who had the balls to seek my help as I walked by. Some had been with the company long enough to know that I wasn't always a bitch. I was helpful and even kind where I needed to be, but at the same time I really was that bitch when I needed to be. I didn't let my mood affect how I treated my agents too often, but I always let their supervisors have it. I held them responsible for most mishaps on the floor. \n\nBy the time I was back at my office I had a few emails to review and answer. Some from payroll, one from security downstairs about a wallet turned in that belonged to one of my agents, and two from underwriters that thankfully weren't David. I was halfway through typing up an email to have security send up the wallet when there was a knock on my door. \n\n\"Come in, Ralph.\"\n\n\"You said you wanted to see me?\"\n\n\"Yes, I did. Take a seat.\"\n\nRalph took a seat, and I swear to God the poor kid looked like he was sitting on a toilet rather than a plush armchair. He was about to shit his pants. I didn't want to beat around the bush. \n\n\"You're a gifted agent, Ralph. You're always up to speed with the handbooks and both your call and referral stats are impressive.\"\n\nHe let out a shaky sigh and smiled.\n\n\"Thank you.\"\n\n\"You know I'm always looking for the right people to help me run this department,\" I said, watching for his reaction. \"I'm starting to think that you're on your way to becoming one of those people.\"",
        "He was practically beaming now. The kid was just as hungry as I'd suspected and this conversation was quickly becoming winner-winner-chicken-dinner.\n\n\"I'm promoting you to Floor-walker. Do you know what that is?\"\n\n\"Yes,\" he said immediately. \"I know exactly what they do. I was hoping to get picked. I asked Bethany and she told me to be patient.\"\n\n\"You've only been here thirteen months so I can see why she would say that. Most floor-walkers don't get offered this position until they're at least two years in. What do you think that tells me about you if I'm offering it to you now?\"\n\n\"That I'm... good?\"\n\n\"Exactly. You're good. Very good,\" I said, giving him one of my rare smiles. \"Bethany will train you over the next week on how to work the walkie-talkies. She'll give you a sheet to learn the codes we use and the channels. Study them. She'll test you after you're ready. We'll put you on the Floor-walker list after you've passed. You'll be pulled from the phones whenever we need you. Your job will be to walk the floor, keep us updated, let us know how the agents are doing and help them with all of their questions. Sounding good so far?\"\n\n\"Yeah,\" he said, grinning. \n\n\"There is a pay bump of seventy-five cents more per hour. You'll get that for all hours, regardless of how often you get called to walk the floor. Consider it a perk with your promotion. So I guess all I have left to do is to ask you if you'd like to accept the position.\"\n\n\"Yes! Yes, please, thank you,\" he said, smiling his goddamn ears off. God, had I looked like this when I'd gotten my first promotion? Maybe not as outwardly excited, but internally it had probably been the same. \n\n\"Good,\" I said, smiling. \"Remember all the advancement opportunities within this company. Floor-walker experience is taken into consideration during the selection process of hiring a new supervisor. I hope you will consider applying the next time a position opens up.\"\n\nGod, the look in his eyes was melting my ice-cold heart. He just looked so happy. \n\n\"Thank you,\" he was saying over and over. \"I'll definitely be applying.\"\n\n\"Alright,\" I said, checking my watch. \"That went by fast. I have you scheduled for a full twenty minutes off the phones for this meeting. There are still fifteen minutes left. Go enjoy it as an additional break.\"\n\n\"Thank you,\" he said again, standing up to shake my hand. \"Thank you, Miss Gutierrez. I'm so thankful for this opportunity. I promise not to let you down.\"\n\nI stood to shake his hand. \n\n\"Please don't call me that ever again. Celine is fine. I prefer to be on a first-name basis with all of my employees. People would know that if they talked to me. I'm really not as scary as people think I am.\"\n\n\"I never thought you were scary. I just didn't want to bother you. I know your job is stressful.\"\n\nThis kid. I probably would've adopted him right there. I could see why Bethany adored him. \n\n\"I appreciate that and I appreciate you. Keep it up. I hope to see you as a supervisor in one of my team meetings in the future.\"\n\nHe smiled, thanked me yet again and excused himself from my office. \n\nYes, this was definitely one of those great mornings. I loved giving promotions, loved giving people opportunities and chances. I'd struggled my whole life. I knew what that felt like. I knew what it was like to want to get further, to climb to a place higher than where I was. I didn't want these people to drown. I wasn't going to let them. They were my responsibility. The whole world had flooded me, had drowned me for the last twenty-eight years, but I was not going to let that happen to the people that I could save.\n\nAs if my morning couldn't get any better, my cell phone rang. \n\nIt was Wes. \n\nGod fucking damn it. My heart was already light from that meeting with Ralph. Now it was completely weightless. Just from seeing Wes's name on the caller ID. \n\nRita was right. I was a goner. \n\n\"Wes?\"\n\n\"Celine. God, I needed to hear your voice,\" Wes said from the other end of the line. He sounded exhausted.\n\n\"Are you okay?\" I asked, shifting upright in my seat.\n\n\"Yeah, I'll be alright. I'm on my second Red Bull of the morning.\"\n\n\"You'll get a heart attack and die.\"\n\n\"I'm a doctor. I know my limit.\"\n\n\"You're also an idiot so I'm not too sure about that.\"\n\nHe laughed. \n\n\"How are you?\" he asked. \"You sound happy.\"\n\n\"I'm in a good mood. I just gave a kid his first promotion.\"\n\n\"You really aren't that much of a Dragon Lady, huh?\"\n\n\"Oh no, I definitely am. Just not all of the time.\"\n\n\"God, Celine,\" he said, laughing. \"Your voice. Your voice is everything right now.\"\n\nI blushed and felt extremely grateful that he wasn't here to see it. He'd probably get all smug about it. He's full enough of himself as it is. \n\n\"How's your morning been?\" I asked, leaning back in my chair. His voice was doing things to me too. I just wanted to go home, snuggle up under my comforter in bed and talk to him for hours, which was absurd because I loathed long phone conversations. \n\n\"Kind of shitty. I spent half of it yelling at a first year.\"\n\n\"How does that work? Like you're in charge of them?\"\n\n\"Yeah, something like that. Junior residents answer to senior residents. Senior residents answer to the attending.\"\n\n\"So you're a senior resident then?\"\n\n\"Yeah. That makes me responsible for the junior residents and the interns below them. They usually don't deal directly with the attending.\"\n\n\"I don't know what an attending is.\"\n\n\"A board certified physician higher up on the hierarchy. They're technically everyone's boss. Kind of like you, but a practicing surgeon in their specialty instead of a hot insurance manager.\"\n\nI laughed. Hot. Whatever.\n\n\"So the attending is like a manager, you're like a supervisor and the juniors are all the bottom feeders?\"\n\n\"That's a very, very basic way of putting it, but yeah, it's a lot like that. Kind of imagine it like you're in high school except the set up is the senior teaching the junior, the junior teaching the sophomore and the sophomore teaching the freshman. Attending, senior resident, junior resident, intern. We learn and we teach as we go. There's a saying 'see one, do one, teach one'. Pass down the knowledge. That's how it works in residencies.\"\n\n\"I'd be pretty pissed having a sophomore teaching little freshman me in high school.\"\n\n\"That's my life right now. I'm dealing with freshmen like you. Sophomores too.\"\n\n\"So tell me about the first year that's pissing you off,\" I said. \n\n\"He's an idiot. There's not much to tell.\"\n\n\"What makes him an idiot?\"\n\n\"Literally everything. He disobeys every one of my orders. Some first years are like that in the beginning. They think they're hotshots. This one has an especially big head. I'm going to have a lot of fun popping it.\"\n\n\"Hope you gave it to him real good.\"\n\n\"I'll give it to you real good tonight.\"\n\n\"Wes.\"\n\n\"I'm kidding. The no 'whatever' rule. I'll be a perfect gentleman. Did you get the text with my address and my neighbor's apartment number?\"\n\nI wasn't ready to tell him that I'd made some adjustments to that no 'whatever' rule. I was considering just letting it play out. If it happens, it happens. If it doesn't, it doesn't. Ugh, but that comment about giving it to me real good. That made my insides turn to jelly. \n\n\"Yeah, got it all. What kind of old-ass name is Agatha anyways?\"\n\n\"She's an old-ass lady. Sweet though. You'll like her.\"\n\n\"What's she like?\"\n\n\"I've been living there for about two years so that's about how long I've known her. She's kind of like my honorary grandmother. Bakes me cookies and comes over to air out and clean my apartment when I'm gone even though I've told her a thousand times not to go through the trouble. She even does my laundry in secret. I should probably take away her key, but I know she enjoys doing it. Her family doesn't really visit her.\"\n\n\"That's sad about her family. A lot of old people just get forgotten. She really does sound sweet though.\"\n\n\"Like I said, you'll like her. And she'll like you. She's very excited to meet you.\"\n\n\"What'd you tell her?\"\n\n\"All good things.\"\n\n\"I'll find out if that's true when I meet her. And how are you calling me right now?\" I asked. \"Aren't you 'on-call' or whatever?\"\n\nWes laughed. \n\n\"I finished my morning rounds a while back. I'm taking a little break until I get paged, which I hope I won't because at this time of the morning it usually means there's something up with one of my patients or that an intern is pissing off a nurse or something.\"\n\n\"You guys seriously still use pagers? I thought that was only in the movies.\"\n\nWes laughed. \"Yeah, we still use them.\"\n\n\"Why?\"\n\n\"They're cheap, and they protect patient confidentiality. A text message wouldn't be able to comply with HIPAA.\"\n\n\"It's still stupid.\"\n\n\"I agree.\"\n\n\"There's so much about your life that I don't know.\"\n\n\"That's why I'm telling you.\"\n\nI smiled.\n\n\"I'll tell you things about mine too.\"\n\n\"That's what I'm hoping for. I keep having to fight you just to get even one little detail about your life.\"\n\n\"You are not.\"\n\n\"I am. I got a 'none of your business' vibe when we went to dinner.\"\n\n\"I'm not giving that vibe anymore.\"\n\n\"Why? Because the date went well? Am I finally in the clear?\"\n\n\"It was terrible. Worst date I've ever had in my life.\"\n\n\"Back to first base then.\"\n\n\"I'm just teasing you, Wes.\"\n\n\"When aren't you?\"\n\n\"Shut up. Since you have some time why don't you sleep?\"\n\n\"Why don't you shut up? This is better than sleep.\"\n\n\"You're a moron. You sound exhausted.\"\n\n\"Sleep isn't as satisfying as hearing your voice.\" \n\nGod, why did he say shit like this? He came on so strong. \n\n\"I still don't like the idea of you getting by on Red Bulls just to keep from falling asleep.\"\n\n\"Don't worry. I'll be fine. And I can't sleep anyways. I'm assisting in a surgery at noon. I need to study.\"\n\n\"That sounds scary.\"\n\n\"I got used to it. I'm reasonably comfortable in an OR now. And I study. A lot. You'd be surprised how much time I spend with my nose in a book.\"\n\n\"Nerd.\"\n\n\"You wound me, Celine.\"\n\n\"Good thing you're a doctor. You can fix yourself right up.\"\n\nHe laughed.\n\n\"Can I just talk to you forever?\"\n\n\"Not when you're operating on kids.\"\n\n\"I guess not. You probably wouldn't want to hear what it sounds like in an OR.\"\n\n\"What's it like?\"\n\n\"Nothing like Grey's Anatomy.\"\n\n\"I don't watch that stupid show.\"\n\n\"Good. It's insulting to real surgeons.\"\n\n\"Oh, then I guess I'll start watching it on Netflix from your TV tonight.\"\n\n\"It wouldn't bother me. I don't even care if you burn down the whole apartment as long as you're there when I come home.\"\n\n\"You won't have an apartment to come home to if I burn it down.\"\n\n\"That's okay. Just be there. Fuck the apartment.\"\n\nI laughed.\n\n\"I\u2014Hey, Celie. Hold on a sec.\"\n\nI could hear some talking in the background. \n\nI kind of didn't care that he'd called me Celie. It sounded like it had just come out naturally. How the fuck was I supposed to give him shit for that? \n\n\"Celine?\"\n\n\"I'm here.\"\n\n\"Listen babe, I gotta run. I'll try to call you later, but if I don't get the chance then I'll see you tonight.\"\n\nBabe? Jesus Christ. Take it one step further. Ugh. I hated that I kind of liked it. \n\n\"Okay. And hey, Wes?\"\n\n\"Yeah?\"\n\n\"I miss you.\"\n\n\"I miss you too,\" he said. I could hear the smile in his voice. \n\n\"I'll see you tonight.\"\n\n\"Can't wait. Hope the rest of your day is as amazing as your morning has been.\"\n\n\"Hope yours gets better.\"\n\n\"It already has.\"\n\n\"Bye, Wes.\"\n\n\"Bye, Celine. Can't wait to see you.\"\n\nI leaned back in my chair, smiling like an idiot. His voice alone had left my body a hot, tingling mess. It was bizarre, feeling this much for a person. Before I'd met Wes, I'd forgotten how to laugh, but now I was laughing naturally, not even having to think about it. The sound was strange yet familiar, like an old friend, meeting again now years later. \n\nDr. Westley Spenrath had already changed me. He did what doctors do best. He was healing me. \n\n\u2014\n\nThe day passed like any other rainy Friday with the phones ringing off the hook, the sheer volume of the calls so high that we began calling up agents on their day off, begging them to come pick up a shift to help take the load off. I ordered in pizza for the department, offered overtime to anyone that was willing, and walked the Floor to offer my assistance. \n\n\"You're going to have to leave at some point,\" Addie said around five in the evening. She'd stuck around to help with the call volume, but now she was finally headed home. For some reason, most of our insureds just assumed we closed at five so around this time it got slower with less calls coming in. It was a good time for breaks, or in Addie's case, ending a shift. She'd stayed long after I'd already told her to go home. \n\n\"I still have a meeting with Lisa. I have to make sure this department can make it through the weekend without me.\"\n\n\"The weekend?\" Addie said, grinning. \"Planning to have a lot of sex, are we?\"\n\nI threw an empty coffee cup at her. \n\n\"Get out.\"\n\n\"You get out,\" she said, picking up the cup and depositing it in the trash. \"You don't know when his neighbor lady might want to go to bed.\"\n\nI'd told Addie about the call, and she was right. I hadn't thought about that.\n\n\"Fuck,\" I hissed. \"I forgot about that. I need to find Lisa right now.\"\n\n\"Lisa will be fine,\" Addie assured me. \"She's perfectly capable of running this department. She's done it before.\"\n\n\"On rare occasion.\"\n\n\"Let this be the rare occasion then, for fuck's sake.\"\n\n\"Alright,\" I said, picking up my phone. I dialed Lisa's line. It rang for so long that I thought no one was going to pick up, but then\u2014\n\n\"This is Lisa,\" she said breathily, like she'd just run a mile.\n\n\"Is this how you answer all of your phone calls?\"\n\nLisa made a choked noise. I guess she hadn't expected her boss to be the one calling her. \n\n\"I-I was on the Floor, Celine. I had to run to answer\u2014\"\n\n\"You ran?\" \n\n\"Yes,\" she said in a small voice. \n\n\"There are rules against running on the Floor for a reason. Do you have any idea how dangerous that is?\"\n\n\"I'm sorry, Celine. I-I forgot.\"\n\n\"Don't forget again,\" I said, rubbing my temples with my free hand. \"Anyways, I'm calling to tell you that our meeting is canceled. I have to leave the office now.\"\n\n\"Now? But what about the\u2014\"\n\n\"Please don't tell me that you need me to walk over there and tell you how to do your job. Again.\"\n\n\"I\u2014\"\n\n\"We've been over this, Lisa. You should be able to take over within a moment's notice.\"\n\n\"Can I still call you if\u2014?\"\n\n\"Absolutely not. You're going to rely on the books tonight. You also have the key to my office, Lisa. Use my resources. I have every product line manual known to god in here.\"\n\n\"Okay,\" she said, breathing shakily. \n\n\"Prove to me that you can do this.\"\n\n\"I can,\" Lisa said, surprising me. \n\n\"That's what I like to hear.\"\n\nAddie looked smug. Whatever. \n\n\"I'm going,\" I said, grabbing my bag, laptop case, coat and umbrella. I ushered her out of my office and locked it up behind me. \n\nHeads turned as I left the Floor, visible relief washing over the agents' faces. A long time ago it would have hurt my feelings, but it wasn't a long time ago. It was now. \n\nAnd now I was Dragon Lady.\n\n\u2014\n\nI didn't think residents made much money, but I guessed he was making a modest salary by where he lived. I knew this area, knew these zip codes. I serviced many customers that lived in Anaheim Hills. They had some of the highest insurance premiums in the county. It was a nice place to live. Rolling hills, beautiful trails, a breathtaking view of the mountains. It was the kind of place that made you feel like you weren't in Orange County, like you were somewhere far away even though it was right there, just a twenty minute's drive from Disneyland. \n\nImperial Highway was a long stretch, a drive that usually led out to Corona and Riverside, where the areas were truly isolated. Wes's exit was going to be just two exits shy of the middle of nowhere. He was just barely on the cusp of civilization, leaving the absolute best view of the mountains right there to the left, his apartment complex to the right of the freeway. \n\nThe Cascades Apartments. I was willing to bet there wasn't a single waterfall there. I was right. The complex was on a hill, or part of a mountain, it was hard to tell. The apartments looked more like townhouses than apartments, each made of three stories, the bottom taken up by the garage. It was a big complex. There were even streets with their own names inside, and winding roads that went higher up the hill to houses probably owned by the same company.\n\nI parked in the carport number that he'd texted me\u2014well, I didn't really park. His neighbors were apparently assholes. There was hardly two inches of space and it would box me in the middle like the stuffing on an Oreo. If I didn't have a Tesla I probably would have kicked their bumpers. I got out of my car, muttering under my breath to use my key fob to have the car self-park. \n\n\"Technology these days.\"\n\nI jumped, turning around and finding a little old lady standing just a few yards away, her hand rested on the head of a golden retriever who sat calmly staring at me. The both of them looked curious. \n\n\"Are you Agatha?\"\n\nShe turned her attention to me and smiled. \n\n\"I am. And you must be Celine,\" she said, walking over. The golden retriever followed at her heels, its tail wagging as she made her way over. \"This is Kevin.\"\n\n\"Your dog's name is Kevin?\"\n\n\"I named him after my son-in-law,\" she said with a chuckle. I cracked a smile. \n\n\"Sorry about the parking situation,\" she added. \"No one really parks in that spot. Westley parks in his garage.\"\n\nWestley. I tried not to laugh. Wes fit him like a glove, but Westley sounded posh and unfeeling. \n\n\"It's okay,\" I said, popping my trunk. I lifted my duffel bag and swung the strap over my shoulder, my face reddening. I didn't know how this little old lady was going to be feeling about me spending the night at Wes's after having just barely met him. I knew there was the whole 'whatever' rule, but I'd already planned to break it. \n\nBut Agatha was one with the times. \n\n\"Come well and prepared, that's what I always say,\" she said, motioning for me to follow her up the street. \"Let's go, dear, before the coyotes come out to play.\"\n\nThat got me going. Living in SoCal made me no stranger to coyotes, but that didn't mean I wanted to face one head-on. You can never tell what to expect when it comes to wild dogs, especially ones that run in packs. \n\nAgatha led me up past two buildings, and then pointed out Wes's apartment. We took the stairs on the side leading to the second story, which was the first story of the living space. The bottom story was the garage. \n\n\"This is for you,\" Agatha said, reaching into her pocket. She pulled out a key and placed it on my palm, the cool metal heating from my touch. \"I do want it back, though. Make sure Westley gets it to me.\"\n\nI nodded, remembering what Wes had said about her looking after the place. \n\n\"Would you like to come in?\" I asked, putting the key in the lock and turning it. \n\n\"Oh no, dear,\" she said, patting my back. \"You settle in. I'll take Kevin in for his dinner.\"\n\nI turned the doorknob, opening it to a dark home. I don't know why it spooked me, but it did. Something about being in a strange place brought memories back to my childhood, back to moving from home to home, lugging a trash bag of all my clothes. I swallowed, casting the thought from my mind. Those times were gone now. \n\n\"Thank you,\" I said to Agatha. \"For waiting up for me.\"\n\n\"It was no trouble at all,\" she said, smiling warmly. \"You make him happy. So very happy. You were all he could talk about. Keep him happy, dear. That's all this old woman wants.\"",
        "Then she left, Kevin following at her heels, wagging his tail. \n\nWes had been right. She really was sweet. \n\nI found the light switch to the right of the door. I switched it on to an open-floor home, finding myself in the living room. The dining space and kitchen were all in view. Opposite it was a hallway with two doors and a set of stairs leading to an upstairs floor. It looked eerie and dark up there. I decided I wasn't going to be exploring. \n\nI took off my shoes by the door and put my duffel bag off to the side. His carpet wasn't plush, but it was clean. I made my way to the fridge, feeling thirsty. I was about to pull it open when I found a note there, set in place by an avocado magnet. I couldn't help but laugh. \n\n'I'll be lucky if I'm home by 9. Make yourself at home. Mi casa es su casa. Miss you, Dion.\n\n-Wes' \n\nMy eyes misted. In all my life, no one had ever written to me that they missed me. Other kids got it in notes in their packed lunches, but I never got anything but the free lunches at school. I hadn't realized how much it still hurt me deep inside until I read Wes's note. He made my heart feel full, so full that the feelings were spilling to the brim, falling as tears from my eyes. I wiped them away hastily and opened the fridge to help myself to a bottle of water. \n\nI took stock of the kitchen after that. I'd decided on the drive over that I was going to have dinner ready for him when he came home. It was the least I could do after he spent all day saving small lives. I found all the ingredients for a vegetarian lasagna so I got started on that. I wasn't a very good cook (I didn't have the time), but lasagnas were easy. \n\nI set my phone on the kitchen counter and started a playlist of some of my favorite music. I sang and rapped along as I prepped the veggies, doing my best to stay away from the avocados that he'd laid out for me on the counter. I suspected he had them counted, and I knew for a fact that he'd laugh if he knew I'd eaten one within hours of getting to his place. Still, it was tempting. \n\nOnce the lasagna was in the oven, I danced in the kitchen, singing along to songs and thankful that all the curtains were drawn. It was only seven in the evening, still too early to be worried about being caught by Wes. I was an idiot, of course. I should have known better. \n\n\"House so empty, need a centerpiece. Twenty racks a table cut from ebony. Cut that ivory into skinny pieces. Then she clean it with her face, man I love my baby. You talking about money, need a hearing aid. You talking 'bout me, I don't see a shade. Switch up my style, I take any lane. I switch up my cup, I kill pain.\"\n\nDon't ask me why I know all the lyrics. I listened to this song on repeat when working out. Right now this was practically a workout. I swayed my hips as I pulled the lasagna out of the oven. \n\n\"Look what you've done. I'm a motherfuckin' starboy.\"\n\n\"Are you?\"\n\nI almost dropped the pan. \n\n\"Holy shit,\" I said, putting it quickly on the burner. \n\nI turned to find Wes leaning against the doorway, arms crossed and with the most amused expression on his face. \n\n\"I thought you weren't coming home until nine,\" I said, walking over to my phone to turn off the music. \n\n\"I said I'd be lucky if I got out by nine. I was luckier than I thought.\"\n\n\"Don't talk about this ever again,\" I muttered. \n\nHe laughed. \n\n\"Oh, no. I'm never gonna let you live this down.\"\n\n\"Fuck you.\"\n\n\"I thought we had a no 'whatever' rule tonight.\"\n\n\"I'm leaving.\"\n\nWes walked over and put his arms around me. I didn't fight it. God. It felt so good. He was warm, impossibly warm, and the way we fit was right, just right.\n\n\"Don't leave,\" he said, rubbing my back. \n\n\"Still considering it.\"\n\nHe tipped my head back.\n\n\"Let me change your mind.\"\n\n\"No,\" I said stubbornly, looking away. \"You nearly scared me to death.\"\n\n\"I would've performed CPR immediately. I'm not letting you die on me.\"\n\n\"You're not funny. Some warning would have been nice.\"\n\n\"I only give warnings to women that sleep with me.\"\n\n\"I hate you. Pervert.\"\n\n\"Why are you smiling then?\"\n\nBecause you're here. \n\n\"Because you're an idiot.\"\n\n\"I missed you and your meanness, Celine Dion,\" he said, looking at me with those dark ocean eyes, a soft smile playing on his lips. \n\n\"My last name isn't Dion.\"\n\n\"We can pretend,\" he said, leaning down. He kissed my neck, making me gasp. \n\n\"I thought you said you weren't going to come onto me.\"\n\n\"You have all your clothes on.\"\n\n\"You act like you don't want them to be.\"\n\n\"I don't.\"\n\n\"Wes.\"\n\n\"I'm kidding. What's for dinner?\"\n\n\"Vegetarian lasagna.\"\n\n\"You didn't have to,\" he said, but I could tell that he was touched. \n\n\"I wanted to.\"\n\n\"However can I thank you?\"\n\n\"You'll think of something.\"\n\nWe were smiling at each other, grinning our ears off, and I can't say that I could even find it in me to hide how fucking happy I was to see this guy. I'd spent a lifetime putting up walls and protecting myself, but Wes was showing me that it was okay to let my guard down sometimes, that there were some people in this world that weren't going to hurt me. He'd taken my barren, empty heart and breathed it back to life. \n\n\"I really did miss you,\" he said softly. \n\n\"Show me.\"\n\nWhen his lips met mine, he was impossibly gentle, his mouth moving with mine, slow and sweet. We took each other in, kissing to make up for the time lost, drawing closer, holding on tight as we relinquished all control. His lips were already familiar to me, like kissing was muscle memory, like I'd done this a thousand times. \n\nBecause I wasn't drowning anymore. \n\nI was floating. \n\n\"I missed you too,\" I admitted when he pulled back. He cupped my cheek in his hand and kissed me again, tenderly, like I was someone special to him, like he'd loved me for a thousand years. It scared me.\n\nI untangled myself from his arms and made myself busy finding plates. Wes didn't say anything, probably sensing my unease. He helped me set the table, and then carefully took the lasagna to serve. He didn't ask me how much I wanted. This guy had already seen how I eat. He cut me a big slice, and I had to hand it to him, it was the perfect size. \n\n\"I'm starving,\" he said, picking up his fork after we'd seated ourselves at the table. Somehow I'd ended up at the head of the table with Wes to my right. It was almost comical, like he was my right-hand man and I was a mob boss or something. \n\n\"What's so funny?\"\n\n\"Nothing,\" I said, quickly filling my mouth with a forkful of lasagna. Ugh. It was good. So good.\n\n\"Is this legal?\" he asked after he'd swallowed a few bites. \n\n\"What are you talking about?\"\n\n\"What did you put in this? It's a crime for food to be this good.\"\n\nI rolled my eyes. \n\n\"Just shut up and eat.\"\n\n\"Yes, ma'am.\"\n\nWe were probably halfway into our meal when his cell phone rang. He patted around his pockets until he found it, and then checked the caller ID. \n\n\"I don't mind,\" I said. \"Take the call.\"\n\nHe gave me a grateful smile and answered his phone.\n\n\"This is Dr. Spenrath,\" he said. \n\nThat was enough to make me almost drop my fork. Obviously I knew he was a doctor, but it was still so weird that some people out there called him that instead of Wes.\n\n\"Oh hey, Mama Bear. How's your night going?\"\n\nWes leaned back, smiling. \n\n\"Yeah, she's here,\" he said, glancing at me. \n\n\"Now you're just being mean. I thought you had some faith in me,\" he said, holding my gaze. \n\nWes laughed and ran a hand through his hair. I could hear some talking on the other end of the line, and then the conversation got serious. \n\n\"I had a talk about that with him this morning,\" Wes said with an annoyed sigh. \"Is he still there? Put him on.\"\n\n\"Sorry,\" Wes said, covering the phone with his hand. \"You're about to see my version of the Dragon Lady. Plug your ears if you don't want to hear it.\"\n\nOh, I definitely wanted to hear this. \n\n\"Stevens,\" Wes said, already sounding angry. \"Jesus Christ, I shouldn't even be surprised that you're up there again. And what did I tell you about staying the hell away from my patients? No, don't argue with me. You have no idea what you're talking about.\"\n\nThe more the person on the other end talked the more Wes tensed. His jaw was locked as he listened, his eyes blazing.\n\n\"Don't say that ever again. The nurses know what they're doing. They have years of experience on you\u2014shut up, Stevens. You know I was on-call today so yeah, I'm pissed. I've had this talk with you too many times already\u2014no, that's not your fucking job. Stop. Stop. Let me talk.\"\n\nOh, God. He was almost as bad as me. \n\n\"I don't care. Disobey my orders again and I'll get you kicked off this program.\"\n\nI could see why Wes had liked hearing me give it to Lisa. This was kind of hot. \n\n\"I'm putting you on scut work with the interns\u2014don't complain because I don't want to hear it. Now get the hell out of the PICU. And make sure I don't see your face tomorrow.\"\n\nWes hung up the phone and sighed. \n\n\"Fucking idiot,\" he muttered. \n\n\"Was that the first year?\"\n\n\"It's always him. Sorry you had to hear all that.\"\n\n\"Oh, I didn't mind. It was kind of hot.\"\n\nWes cracked a smile. \n\n\"So, what's a PICU? And who's Mama Bear?\"\n\n\"It stands for Pediatric Intensive Care Unit. Some of my patients end up there after surgery. And Mama Bear is our very highly skilled head night nurse up at the PICU. Her name's Kathleen, but everyone calls her Mama Bear because she mothers the hell out of us. Which is why that idiot first year pissed me off more than usual. She has eons of knowledge over him, but he's always walking in there and acting like he owns the place. He undermines her authority and disobeys my orders so I'm just about ready to smother him in his sleep.\"\n\n\"This is all sounding so familiar,\" I said. \"Except I can actually fire people that piss me off.\"\n\n\"Even if I was in a position to do that I probably wouldn't. He's new so he's still in an adjustment period. He could still end up making a good doctor after his head deflates. I'm just hoping he learns that before he really does get himself kicked off the program. I don't have the patience for half the shit he does, but he's still my responsibility. I'll look like a failure if I let it get that far.\"\n\n\"Politics in the workplace,\" I said. \"Exists everywhere, huh?\"\n\nWes sighed. \"Can't escape it no matter where you go.\"\n\nI placed my hand over his and gave him a gentle squeeze. His gaze softened, eyes kind and thoughtful, like I'd just told him I was donating him my kidney or something. \n\n\"Well, if you ever need someone to be mean to your guys, you call me,\" I said, smiling. \"I'll make them all cry.\"\n\n\"I don't doubt it, Dragon Lady,\" he said, leaning over. He kissed me briefly, his lips warm and his breathing controlled, though I could see that he was struggling with something. \n\n\"What's wrong?\"\n\n\"I'm trying to dial it back, but I don't know how,\" he admitted. \"I told myself I was going to take it slow because I'm scared of spooking you, but I just\u2014I can't control myself around you.\"\n\nI snorted. \n\n\"You? Control yourself?\" \n\nHe cracked a smile, his deep dimples making my insides twist, making me want to reach out the trace the lines, feel his happiness in its physical form. \n\nWe didn't eat in silence. We talked about how we'd made the time pass, how we'd made it through those last few hours, how we'd managed to make ourselves deal with the fact that we weren't around each other. He talked about it freely, telling me how missing me had been the hardest thing he'd faced since his MCATs, which made me laugh and kick him under the table. He caught my feet between the two of his and played footsie with me for the rest of dinner. \n\n\"I need to shower,\" he said when we'd cleaned up after dinner. I was standing beside him, wiping my wet hands on a washcloth. \n\n\"Go shower then.\"\n\n\"You can shower first.\"\n\n\"I didn't come here to shower.\" I tried not to smell my armpits. I didn't understand why he wanted me to shower.\n\n\"Yeah? What did you come here for?\"\n\n\"You tell me,\" I snapped. \"You're the one who made me come here.\"\n\n\"I didn't make you do anything,\" he said, grabbing my wrist. He turned me to face him, guided my arms around his neck and then swayed with me in the kitchen. I rolled my eyes. \n\n\"If you hum that damn song\u2014\"\n\n\"Relax, Dion,\" he said, twirling me. \"We don't need music to dance.\"\n\n\"Why are we even dancing?\"\n\n\"To get you sweaty so you'll shower.\"\n\nI tried to pull out of his grasp but he wouldn't let me. He wrapped his arms around my middle, chuckling as I struggled. \n\n\"You're a jerk,\" I said. \n\n\"And yet you like me.\"\n\nHe wasn't wrong. \n\n\"I hate you,\" I lied. \n\n\"Liar.\"\n\n\"Jerk.\"\n\n\"Savage, insufferable woman,\" he said. \"All I'm trying to do is show you a good time.\"\n\n\"You are such a creep, you know that?\"\n\n\"You might've mentioned it before.\"\n\n\"I'm still not taking a shower.\"\n\n\"Suit yourself. I am,\" he said, releasing me and walking away. \n\n\"You're a terrible host.\"\n\n\"I offered you a shower. That's very generous, especially in this drought.\"\n\n\"Whatever.\"\n\n\"I'll leave the bathroom door unlocked if you change your mind.\"\n\nMy mouth hung open in shock. I recovered quickly. \n\n\"When you offered me a shower you couldn't have honestly expected to take it with me.\"\n\n\"Drought, Celie. Gotta conserve water.\"\n\n\"No thanks,\" I said, trying not to laugh at the goofy expression on his face. He was just joking, but I liked treating him like he was a nuisance. And something told me that he liked it too.\n\n\"Remote's on the coffee table. Feel free to watch Netflix or something. I won't take long. If you get hungry then help yourself to whatever's in the kitchen.\"\n\n\"I just had dinner. With you. You were there.\"\n\n\"You could have a shower. With me. In there,\" he said, pointing to a door down the hall.\n\n\"Do you want to make it to your thirty-second birthday?\"\n\n\"I have every intention, yes.\"\n\n\"Then get out of my face.\"\n\n\"Yes ma'am.\"\n\nAfter Wes left to go to the bathroom down the hall, I started to wonder if I should've taken up his offer on the shower. I thought about how I'd been wearing my clothes for fourteen hours, about the strain of my bra, about just how uncomfortable I was standing there in the kitchen of a guy who had clearly entertained every last one of my antics, kissing me even though I was plain, even though I was mean, even though I was difficult and brash and broken. I thought about all of my emptiness, of all that drowning, of the past twenty-eight years I'd spent building walls miles high, protecting myself, withdrawing, hardening, becoming cold and ruthless and miserable, so miserable. \n\nFuck this. Fuck everything. \n\nI undressed in the living room. It wasn't slow\u2014it was hurried. Blouse unbuttoned. Bra unsnapped. Pants unzipped. Underwear on the floor. \n\nAnd then I met fate at the bathroom door. \n\nI walked out of my skin, out of my shell, out of my fear and walked into the steam, into the haze, into the chaos. \n\nHe saw me before I reached him, his mouth parted, his eyes darkening, his face flushed from the hot water. He picked me up before I'd even stepped into the shower, pushing me against the tiled wall; mouth on mine, hitching my leg over his forearm, touching me places that made me gasp, made me moan, made me wet. \n\nWe didn't say anything our eyes couldn't. We didn't talk, didn't speak, didn't listen to any of the voices, any of the warnings, any of the things that could take this away from us. \n\nWe. Just. Gave. In.\n\nThe water rained down on us, the only witness to what we were about to do, the only thing that could touch us without drowning us. We didn't have to ask permission, didn't have to say that we needed this, that we were crazy, we were mad. We were just too dizzy and delirious and desperate to care.\n\nHe hissed, clutched me tighter, gripping with such force that I knew I was going to bruise, inside and out. I couldn't feel anything but the thickness that was entering me, filling me up, making my very bones tremble. My body accommodated him, stretching, getting slicker, reacting to the friction, clenching around him as the pleasure ruptured through my nerves. He didn't stop, his knees buckling, smacking his hand on the wall to steady himself, changing the angle.\n\nI gasped, clutching at his forearms, my body trembling with the desperate, wild need to come. He'd found it, the place inside of me that was enough to tip me over the edge. I let out a strangled cry as he fucked me, harder and harder, hitting that spot over and over again until I exploded, my pussy contracting around his cock, fluttering and clenching, making him groan as he came, filling me and filling me with ropes of liquid heat. \n\n\"Celine,\" he said, kissing me in the steam, the water raining down on us, tasting like sex. His movements were all tender and firm, using those gentle surgeon's hands on me, his fingers on my scalp, massaging shampoo into my hair; the soap in his hands, covering every inch; behind the ears, behind the knees, behind the feelings and the emotions, cleaning all of it, stripping all the ugly from me, making me feel like I wasn't plain, like I wasn't hard to look at. Because the way he looked at me convinced me otherwise; the way he touched me, the way he kissed me, not even knowing that when he did it he was kissing all the scars inside. \n\nAnd now they were healing. \n\nHe dried me first, kissing my legs, my shoulders, my neck. Everywhere the towel touched, so did he. Such tenderness that it made my eyes water, made me remember that no one had ever done this for me before. No one had ever cared.\n\nHis bathrobe was too big for me, but it didn't matter because he took me upstairs to bed and took it off of me, parting my thighs and showing me again what it meant to come so hard that I could stars. We spent ourselves in each other's bodies, fucking and making love and all the things in between. There were no empty spaces, just skin to skin, transferring warmth, transferring heat and fire. \n\nThen we tangled together in the sheets, tethered by arms and legs and limbs, settling into each other's arms. \n\nAnd we slept."
    ],
    "authorname": "norafares",
    "tags": [
        "businesswoman",
        "doctor",
        "head above water",
        "healing",
        "romance",
        "romantic comedy",
        "romcom",
        "strong female lead"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/head-above-water-pt-02"
}