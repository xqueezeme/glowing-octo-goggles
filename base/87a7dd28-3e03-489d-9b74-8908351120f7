{
    "title": "Autumn's Chores and Pleasures",
    "pages": [
        "Many thanks to my editor for helping me to be a better writer.\n\n*****\n\nTwo hundred thousand leaves. A mature maple tree has roughly that many, and in the part of the world where Marla lives, they all end up on the ground in October. She couldn't believe it when she read the number. \"I've got over a million leaves in my yard!\" she said. There was no one there to hear her but her cat, and Twinkles was unimpressed. \"I've got to hire some help!\"\n\nShe was looking out her window at the colorful carpet of fallen leaves on the lawn of her big back yard, out behind the little house she'd moved into a few months before. It was nice quiet country property, her reward to herself for surviving a messy divorce from a man she'd despised for the past few years. Her life had been a tangled mess for a while, but it had finally sorted itself out. She was looking forward to peace and quiet, and maybe a man now and then for some carnal pleasures but nothing more. A friend with benefits. She loved that idea.\n\nMarla was forty-nine, dreading the coming birthday with the five and the zero, angry at herself for spending the best years of her life with a jackass. She hated the anger. Her two best friends were divorced and quite bitter about it, so she'd reluctantly cut back on the amount of time she spent with them. More alone time meant more quiet time with Twinkles, and she found it was just what she needed; lots of meditative peace and quiet.\n\nShe found her fun at weekly auctions that offered estate sale items and antiques. It was an enjoyable way to slowly fill her house with treasures, most of them inexpensive, with the occasional splurge on a wonderful mid-century couch, dresser, or chair.\n\nGetting a job was on her agenda but it wasn't a priority. The divorce settlement was sizable, enough to keep her going long term if she was wise about her spending, but she thought a job at an antique store might be fun. There was always the University if she needed a more serious job, her alma mater, looming on a hill just six miles or so from her quiet home. She knew they liked to hire alumni, and with the town being relatively small she thought she might have a good chance at a job up there.\n\nUniversity Hill. It was a campus full of memories for Marla. She studied biology when she was a student there, went to all the sporting events and concerts, and lost her virginity in a cute boy's dorm room when she was a freshman. She ended up dating him for a year, and then another boy when she was a junior, virtually living with him in a dingy apartment just off campus. They were formative years in the best kind of way, freewheeling and full of laughter and good times. A year after graduation she met the man she'd marry, and it was all downhill from there.\n\nA million leaves on her backyard lawn was definitely a step in the right direction. It was her lawn, and they were her leaves, and she could do whatever she wanted about the situation. Let them rot, rake them up, or hire some help.\n\n\"What do you think, Twink?\" she asked her purring cat as she scrolled through Craigslist ads. \"Here's a college boy looking for yard work. Should we take the chance?\"\n\nMarla replied to the ad and texting ensued. The boy, Jesse Summers, corresponded quite maturely, so Marla threw caution to the wind and gave him her address. She lived on the bus route between the campus and the next town to the East, so transportation wasn't a problem. Jesse said he'd have to use her tools, so Marla went and bought a rake. While she was at the store she bought some hedge clippers, and a shovel, and a pruning saw. If the boy did a good job with the leaves she had some other projects for him.\n\n\u2014\n\nJesse arrived right on time and first impressions were made, as they usually are. Marla, standing just outside her front door, saw a confident looking nineteen-year-old walking up her driveway. It was hard to judge his height but he was shorter than she expected, with dark brown hair styled trim and neat. Long, baggy shorts hung to his knees and he wore bright white sneakers that she feared were going to get dirty.\n\nAs Jesse approached the house he saw a woman his mother's age, or maybe a few years older, taller than he expected. Her hair was sandy brown, close to blonde but not quite, hanging thick and slightly wavy down just past her shoulders. Feathery bangs concealed her forehead, with just a hint of eyebrows peeking through. Her black jeans were tight and her t-shirt loose. She looked leggier and leggier the closer Jesse got.\n\n\"You must be Jesse,\" she said as he approached. \"I'm Marla.\"\n\nHer suspicions were confirmed when she reached for Jesse's hand for a handshake \u2014 he was a good three inches shorter than her stately five-foot eleven-inch height, and he was a very handsome young man overall. Jesse's first impression was also correct \u2014 his new employer's legs, shown off nicely in her tight jeans, were kind of awesome. One of his mother's friends has a very nice older ass, and he was pretty sure he was going to enjoy looking at Marla's. She had a nice face, too, kind and welcoming, with crinkles around her eyes when she smiled, just like his mom.\n\n\"Are you ready to rake a million leaves?\" Marla asked.\n\n\"Sure,\" Jesse said.\n\nMarla walked him around the house and the scope of the big project came into view. \"I realize it's going to take you a while. Just work steady, and ten dollars an hour should add up pretty good. When you get some piles made I'll help you get them onto an old sheet and we can drag them way out back.\"\n\nMarla got Jesse started, and then she went in the house. She sat at her kitchen table, sipping coffee, watching him work. He raked like he'd done it before, probably at home, she thought, or maybe other folks had hired him for the same task. \n\nIt wasn't long before he took his shirt off, tossing it casually onto freshly raked grass. Marla sat up straighter in her chair when he did it, and thoughts of the lamp she missed out on at the auction the night before disappeared from her mind like a puff of smoke. It was the first attraction she'd felt for the boy; a pleasant, full-body jolt that made her fingertips tingle a little.\n\n\"What do you think, Twinkles?\" she said to her purring companion. \"Cute, huh? If you and me were back in college...\"\n\nMarla watched Jesse rake. He was a little ways away but she could see his muscles flexing, arms and chest working in harmony, with assistance from a flat stomach that was perfectly adorned with a happy looking bellybutton. She sipped her coffee and hardly blinked at all.\n\n\u2014\n\n\"I guess I should have bought two rakes,\" Marla said. She stood next to an old bed sheet that she'd spread out on the grass, watching as Jesse flicked rakefuls of colorful maple leaves onto it. It was a new kind of thrill being close to him while he worked, her eyes darting around nervously, trying to glean the close-up details of his topless body without him seeing her doing it. His muscled arms and chest were just as smooth and perfect up close as they were from a distance; even more so, with more twitching, flexing life in them. His skin had a subtle sheen of perspiration that looked like satin paint in the most perfect shade of 'flesh' imaginable. The sheet filled up quickly with leaves. \"Wow, this is going to take awhile, isn't it,\" she said. \"I'll drag and you rake. How about that?\"\n\n\"Okay,\" Jesse said.\n\nMarla smiled. \"You're a man of few words, huh?\" she said.\n\nJesse blushed and smiled shyly. Marla was amazed at the shift in skin tone \u2014 his entire upper body, neck and face turning a pinker shade of that luxurious looking satin. She gathered the corners of the big flat sheet and dragged the huge, bulbous mass of leaves away. It was Jesse's turn to watch without being seen, his eyes on the middle-aged woman's ass, tightly packed in her jeans; an ass that's a little big but nicely proportioned for her statuesque, long-legged body. It was definitely worthy of a thumbs-up, if a friend had been there to give one to.\n\nHe kept one eye on his work and one eye on Marla, watching as she dragged the leaves out through a gap in an old hedgerow at the back of her property. She was out of sight for a half a minute and then she returned, walking toward him with the empty sheet in one hand. The front of her was more of a mystery than the back of her, the loose t-shirt she had on hiding her true shape. There was definitely some shape there, though. Quite a bit of it, nicely proportioned, it seemed, just like the rest of her. Breathing harder when she returned, she snapped the sheet with a quick flick of her wrists and let it settle to the ground like a dirty white parachute, right next to one of Jesse's neatly raked piles.\n\nAfter another round of muscle-watching as Jesse raked and ass-watching as Marla dragged, she parachuted the empty sheet into position again, and then she took off her t-shirt. Another top was under it, a smaller one of ribbed cotton that fit tighter to her body. Cut straight at the top, with little spaghetti straps holding it up, it wasn't a garment that showed off her cleavage in a deep V kind of way, but it did show the tops of her nice breasts, smooth skinned ones that were firm enough that she got away without a bra most days at home, always with a tight shirt under a looser one. Stripping down to just the inner layer wasn't something she'd thought through; it was the oddly humid day and the sweat of work that had made her do it. Once the quick, thoughtless movement had been made she realized her predicament. She'd given Jesse a peek at her bellybutton, a happy-looking one much like his, and she was shocked that her body was giving away her arousal, complete with goosebumpy arms and nippley breasts that hadn't come to life in front of the opposite sex in years. A few things to say crossed Marla's mind, but she decided on silence, standing there more titty than she wanted to be, watching Jesse scoop another pile of leaves onto the sheet.\n\nWhen she bent to gather the corners the next conundrum was immediately apparent: her weighty breasts overloaded the little shirt's ability to support them. It was a barely acceptable 'bra' when she was upright and it was under another shirt, but when worn alone it was no match for gravity.\n\nThe bend for the first corner was the eye opener, Marla's eyes and Jesse's. When she straightened back up there was only two or three seconds for her to decide how to handle the situation \u2014 squat at the remaining corners, or bend at the waist each time and give the nice boy a show. Squatting seemed ridiculous. She knew he'd know why she was doing it, and that would be just as embarrassing, so she did a bit of a squat and bend combination. Jesse liked it. Tight black jeans pulled even tighter on her nice thighs, crotch and ass, and a healthy dose of healthy breasts on display with each bend. He was suddenly really happy Marla had hired him. As she gathered the four corners of the old sheet together, twisting them together so she could get a solid hold of it, her breasts wiggled and jiggled and looked even more aroused than before, the out-of-control nippleyness threatening to turn the work session into a soft-core porn. All that was needed was a beer pitcher full of ice water to pour on her little shirt and it'd be Girls Gone Wild.\n\nMarla was glad to be heading away from the situation, pulling the big awkward satchel behind her. She'd noticed how Jesse had looked at her, his young eyes taking in all of her womanliness, and she wondered if he was still looking at her as she dragged the leaves away, watching her ass as she made her way to the hedgerow. She looked back to see if she was losing any leaves and sure enough, Jesse had been watching. His head swiveled back to his raking, but not before she'd caught him looking.\n\nOut behind the hedgerow, where he couldn't see her, she quietly scolded herself and pulled the front of her shirt out to have a look at things. Her nipples were more aroused than she could ever remember and she didn't know what to do about it. She couldn't slap them into submission, and she couldn't just hide there for five minutes. She realized she was stuck looking like a horny old broad in front of a nice young college boy. She had to roll with it and hopefully have a laugh about it with Twinkles over a glass of wine later that evening. \n\nShe dragged the empty sheet back to Jesse's freshly raked pile, feeling his glancing eyes on her again. It did nothing to soften her arousal. If anything, it firmed things up even more. It surprised her that her predicament didn't bother her as much as she thought it would. It was oddly exhilarating.\n\n\"Looks like we'll be here all afternoon. Are you all done with classes today?\"\n\n\"Oh, yeah,\" Jesse said. \"Nothing 'till morning.\"\n\n\"Just girls tonight, probably, right?\"\n\n\"Nope. Nothing...this year...yet.\"\n\n\"Really? How about last year's girls; nothing worked out?\"\n\n\"No, there was just one. That ended.\"\n\n\"The same thing happened to me when I was your age,\" Marla said. \"I had a boyfriend my freshman year, and then nothing sophomore year. I moved out of the dorms junior year. That was a better boyfriend. We shared an apartment with some others over on Glenn Street.\"\n\n\"Oh, really?\" Jesse said, watching as Marla spread the sheet again, her breasts moving softly. \"I went to a party over there a few weeks ago.\"\n\n\"That neighborhood was party central back in my day,\" Marla said. \"Is it still?\"\n\n\"Yeah, I think so,\" Jesse said, raking another leaf pile onto the sheet. \"I was there on a Saturday and there was stuff happening all up and down the street.\"\n\nThe sheet was so damp and dirty it had become a tarp. It got caught in Jesse's rake so Marla went to her hands and knees to fix it up. Her breasts were hanging and swinging gently. She knew Jesse's eyes were on them. Her nipples had softened a little due to the nice conversation, but down there on her knees she was hit with another dose of sexy juice and they swelled up like a porn star's again. She wouldn't have minded so much if they'd just picked an appearance and stuck with it, but the back and forth thing was more than a little noticeable, and the way she was showing herself off was more than a little surprising to her. It crossed her mind that topless wouldn't have been a whole lot different \u2014 the little shirt seemed almost pointless \u2014 and then she snapped back to reality; leaves needed to be moved and the nice boy helping her wasn't interested in her mid-life, post-divorce reinvention. She gathered the corners and dragged a few thousand more leaves out beyond the hedgerow.\n\nBack at Jesse's perpetually huge pile, she stood still, breathing hard. \"How come you're so clean and I'm filthy,\" she asked. Her pretty, slightly crooked smile made Jesse smile, too. He shrugged his shoulders and loaded up the tarp with more leaves.\n\n\"I'll drag a few loads,\" he said.\n\nMarla watched him go, his strong arm pulling his dragging load, his bare shoulder and back muscles flexing with more power than Marla had expected to see. Five foot eight but strong, she thought to herself. I'll bet he could hold me down.\n\nIt was a nipple tingling thought, and her ribbed-cotton-covered breasts were in full display mode when Jesse returned. Marla was raking, but it was mindless. Jesse's presence was affecting her, and the surprise of it was scrambling her thoughts.\n\n\"You have a roommate probably, right? Does he have a girlfriend?\" she asked, hoping to get back to casual conversation.\n\n\"Yup.\"\n\nMarla smiled at the short answer. \"She cute?\"\n\nJesse smiled a little. \"Yup,\" he said.\n\n\"Does she flirt with you? I used to flirt with my boyfriend's roommate.\"\n\nJesse looked happily surprised. \"You did?\"\n\n\"Sure,\" Marla said. \"It was harmless. Although these days, with your friends with benefits and your porn and everything, maybe it's different. Does she flirt with you?\"\n\n\"Yeah.\"\n\n\"I'm not surprised.\"\n\n\"She's older. A junior,\" Jesse said, finally opening up a little. \"She thinks our dorm building is too noisy, but she's there all the time, so she must like it.\"\n\n\"Does she spend the night when you're there?\"\n\n\"Yeah, a lot. She said she'd rather be...in front of me than her roommate's boyfriend.\"\n\n\"In front of you? You mean, like...sexual? With your roommate?\"\n\n\"Yeah. She was real quiet about it at first, under the covers, you know? But now...sometimes I wonder if she gets off on it or something.\"\n\n\"Wow. Showing off in front of you, you mean? Yeah, she might get off on it. I knew a girl like that when I was at school. Do you mind it? You could always say something.\"\n\n\"No, I don't mind,\" Jesse said, smirking.\n\nMarla smiled and kept raking. As she loaded up the sheet for Jesse she wanted to ask more questions about the exhibitionist girl and what types of things Jesse had seen, but she didn't ask.\n\nShe handed him the rake when he got back and she went to her knees to spread the sheet. She caught herself arching her back a little to show off her ass and scolded herself for it, but the situation with Jesse was just so sexy she felt like she wanted to enjoy it while it lasted, because she knew it wouldn't last. Her breasts were moving freely under her and they'd gotten all tingly again, and they were fully aroused when she stood up. She wondered why it all seemed so new, why she'd never noticed how much that little ribbed cotton shirt tickled her. Had she never had hard nipples while wearing it before?\n\nThe conversation turned to the more mundane topics of school work and majors and job prospects. After dragging a few more loads to the hedgerow, Marla was sore and she could tell Jesse's arms were tired. They decided to finish the job another day. Jesse turned down an offer to wash up in the house, rinsing his hands under the outside spigot instead. He pulled on his shirt, Marla paid him and he was gone, on a bus back to campus.\n\nMarla made a cup of coffee and sat for a few minutes in her kitchen; her clothes dirty, her muscles sore. Twinkles was sprawled on the table with a magazine under him, purring. \"I met a boy, Twink,\" Marla said to him. \"God I wish I was younger.\"\n\nThat night, Marla watched the news on tv as she lay in bed. It was bad news \u2014 ugly politics, wildfires, shootings. Twinkles purred at her side and she petted him. Her other hand was under the covers where it was warm. She thought about how badly her breasts had behaved during the day, in front of a guest she barely knew. Her nice warm hand slipped inside the oversized t-shirt she slept in and she touched a nipple. They'd always been easily aroused, but she couldn't remember a time when they'd been so out there, so flagrantly show-offish in front of someone before. She touched them both as she lay there in bed and they came right back to life again, tingly, triggering deeper, nearly orgasmic impulses that were more electric than she'd felt in years. She closed her eyes and a vision of Jesse was suddenly there, his mouth where her fingers were, his tongue and teeth playing with her nipples like an experienced man.\n\nHer other hand left Twinkles' warm fur and tunneled under the covers. She found her own fur, soft and warm between her legs. She was wet where her fingers wanted to go, slippery, and her fingertips slipped into the warmth, squishing through the fleshy cleft, quickly going deep. Marla moaned and Twinkles rolled, pressing his body tighter against hers.\n\nShe pinched her swollen nipples and the fingers between her legs moved at the speed of her heartbeat. Her hips began to move, matching the rhythm, and Twinkles rolled again, unhappy with the quiet commotion. Marla's exhales came in sharp huffs, with a whispery but excited \"Oh yeah!\" floating on each one. She was close, and her body was rocking and rolling like a hormonal teenager. \"Ohh ffuuckk!\" she huffed. \"Ohh ffuuckk!\"",
        "\u2014\n\nTwo days later, Marla was smiling. Two nights in a row she'd had solid, incredibly satisfying orgasms. That hadn't happened in...maybe forever, or at least since her college years. Jesse was a player in both of them. Marla wasn't forcing him to be there, he just showed up when she closed her eyes so she went with it. She was pretty sure she wouldn't be able to control her smile when he showed up for real that afternoon to finish the raking, but she would do her best to try to not make a fool of herself.\n\nWhat to wear for his visit was the morning's big question. She felt like she should throttle back on the tittiness, but she knew Jesse had liked it, and much to her own surprise she'd like it, too. She had a bra in her drawer that she didn't wear too often because it was so flimsy. She'd always assumed bras were supposed to contain her jiggle and mask her happy nipples, and that particular one did neither of those tasks well at all. It was also pink, a color that never seemed to work the way she wanted it to. She rummaged in her drawer for it, found it way down in the bottom, and held it up in her hands, marveling at how insubstantial and loosely elastic it was. She opened another drawer and rummaged through her summer shirts \u2014 t-shirts and spaghetti straps and dressier camisole style tops. One of those caught her eye, a camisole style undershirt that was pretty enough to wear on its own; pure white with a body-hugging form, minimalistic straps, and a lowish v-neck with some embroidered lace trim along its edge. On its own, with no bra, it would scream \"Look at me in my underwear!\", but maybe with a bra under it...\n\nMarla tried it on. She normally wasn't one for exposed bra straps but everybody seemed to be doing it, and when she saw the pink straps mingling with the white ones on her shoulders she thought it was kind of cute. There was a bigger problem, though, and it was a higher hurdle to jump: the little camisole wasn't as opaque as she thought it would be. The pink color showed through the white, giving away the entire shape of the stretchy, sexy bra. Marla assessed the situation in the mirror for quite a while, looking at her front and her back. \"Well,\" she said to Twinkles, \"at least he won't think I'm a braless nut job.\" She shimmied her chest from side to side like a stripper. \"Whoa! Those babies move, huh, Twink?\" She watched as her nipples came to life and poked out the front of the camisole, and she smiled at herself in the mirror. After a moment or two she shook her head. \"What the fuck are you doing?\" she said to her reflection. \"He's nineteen! He's not interested in you and you shouldn't be interested in him!\"\n\nShe tried on six pairs of jeans before settling on her most faded pair, old favorites that had molded to her over the years and fit like a thick coat of latex paint. They were a bit worn and frayed, but that made them perfect. It was yard work, after all. \n\nJesse showed up mid afternoon, right after his last class of the day. He was excited to see Marla again, even though he knew the past two days and nights of masturbating to visions of her tits and ass were just fantasy. She was fun to talk to, and he liked her smile. The money was good and she gave him a nice tip. All in all it had been an afternoon that he'd enjoyed, and he was glad there was going to be another one.\n\n\"Hi, Jesse,\" Marla said, waving from her front steps.\n\nJesse was disappointed when he saw the pink outline of her bra under her shirt, but when he approached he realized Marla looked just as sexy as the last time. The tight, faded jeans caught his eye, too. He'd never been a leg man before, because leggy girls were usually taller than he was, but Marla was changing his mind.\n\n\"How's school going?\" she asked. \"You hittin' the books hard?\"\n\n\"I guess so,\" he said.\n\nMarla mindlessly crossed her arms under her breasts, forcing them up a little. \"Were you as sore as I was the other day? I guess I'm not used to using my arms that much.\"\n\n\"Yeah, a little,\" Jesse said. \"It's a bigger yard than I'm used to doing.\"\n\n\"I made some cookies. Would you like a little energy before you start?\"\n\n\"Sure.\"\n\n\"Come on in. I'll introduce you to my cat.\" Marla led the way to the kitchen, glancing in a big mirror, happy to see Jesse's eyes were on her ass. \"This is Twink. He owns the place. I just sorta hang out with him.\"\n\n\"Yeah, our cat at home is like that.\"\n\n\"Oh, you like cats?\" Mara said, smiling. \"I knew I liked you. Help yourself to these. They're chocolate chip, I hope you like that kind.\"\n\nJesse took a bite and moaned. \"Oh, man, that's, like, real chocolate in there.\"\n\n\"If you're gonna do it you might as well go all the way, right?\"\n\n\"Wow,\" he moaned, chewing up a mouthful. \"That's so good.\"\n\n\"Eat 'em up. You can take some with you when you leave later, if you want.\"\n\nJesse had two more, and a half a glass of water. Marla's tight jeans led the way out to the backyard. Work commenced and both Jesse and Marla were happy to be there. Marla was especially happy when Jesse warmed up and took off his shirt. The conversation was about his classes, but Marla wanted to steer it in a sexier direction.\n\n\"So, you got me wondering about your roommate's girlfriend. Has she been around the last couple of days?\"\n\n\"Yeah, she stayed over last night.\" \n\n\"Did she show off for you? That's probably a question I shouldn't ask, but, I've always been fascinated by girls who like to do that.\"\n\n\"No, it's okay. Yeah, she's, like, naked and they're, like, doin' it, usually.\"\n\n\"Really?\" Marla said, her eyes wide with curiosity. \"Both of them naked naked? And doin' it doin' it?\"\n\nJesse smiled. \"Yup.\"\n\nHe was raking leaves onto the sheet, but he was keeping an eye on Marla's happy nipples. They weren't quite as blatant as they'd been without the bra, but her breasts moved every bit as nicely, maybe even nicer because they were riding a little higher, with more cleavage. \n\n\"Wow,\" she said. \"How much do you watch them? Is that too personal of a question?\"\n\n\"No. I watch...a lot, I guess. I mean...I think she sorta wants me to.\"\n\n\"It sounds that way, yeah. I guess...I'd watch, too.\"\n\nJesse looked intrigued. \"Really? Are you...into that?\"\n\nMarla blushed. The conversation had steered toward the sexy, that was for sure, even more so than she'd expected. \"I mean...I've never seen that kind of thing in person,\" she said, \"but...we all watch porn, right?\"\n\n\"Do you? That's cool!\"\n\nMarla smiled. She slid her fingers into the tight front pockets of her jeans and tried to look casual. \"Doesn't everybody these days? I hope I'm not...odd, in that way.\"\n\n\"No, I didn't mean that,\" Jesse said. \"It's just cool that you like porn.\"\n\n\"I wouldn't call myself a connoisseur,\" she said. \"It's just...once in a while.\"\n\n\"Have you ever seen Dare Dorm or College Rules? There was a clip from my dorm last year.\"\n\nMarla looked surprised. \"What do you mean? Someone made a porn there? At my school?\"\n\n\"They do 'em at lots of schools. Lots of times it's porn girls that they bring. Those are sorta cool, but when it's real college girls it's hotter I think.\"\n\nMarla smirked. \"Your roommate's girlfriend should try out.\"\n\nJesse smiled. He watched Marla's tits move as she twisted the corners of the dirty old sheet together and dragged it away. His eyes were on her ass until she went out of sight behind the hedgerow. When she returned a minute or so later she was moving confidently, the flimsy, stretchy pink bra giving her breasts a nice bounce with each step she took.\n\n\"I don't think I believe you,\" she said. \"A real porn, right in your dorm building?\"\n\n\"They're not, like, fancy porn. They're from phone cameras, like amateur stuff.\"\n\n\"Oh, okay,\" Marla said. \"Right here though? That's, kind of...\"\n\n\"Hot, right? It was a Halloween party last year. I missed it, I was at a different party upstairs.\n\n\"With costumes?\"\n\n\"Yeah, that's how the girls got away with it. I know them.\"\n\nMarla was fascinated. She wanted to know all the details but she didn't want to seem overly enthused. It was porn, after all, the kind of thing adults like her should be discouraging college kids from getting involved in. She took the rake from Jesse for the first time that day and quickly realized her softly stretchy bra made her cleavage move like it was in a Playboy video. She went with it, trying to hide her smirking smile as she reveled in the sensual feeling of having a handsome, horny young man's eyes on her. She loaded him up with leaves and he dragged them away.\n\n\"How old is Twink?\" he said when he returned. \n\nMarla smiled. \"He's eleven. I think he liked you. He can tell when someone's a cat person.\"\n\n\"Yeah, ours can, too. My mom says he knows people better than people do.\"\n\nMarla found herself angling her body so Jesse would get a good view of things, and then she turned and put a little swing of her hips and ass into her raking; not too exaggerated, she hoped, but she was having fun with it. After she watched the topless boy drag two more loads, they switched again, Marla down on her hands and knees to get the sheet spread out nice and flat. They made a good team and the work went smoothly, but by the time they were done Marla's middle-aged body was sore.\n\n\"That looks so good!\" she said, gazing out across the nearly leafless lawn. \"You're a good worker. I've got more jobs for you, if you're interested. The first one's that big overgrown hedge next to the driveway. I want that cut way back.\"\n\nJesse looked pleased that his time with Marla wasn't about to end. \"Sure, I can start on it right now.\"\n\n\"Oh, no, this is enough for today. Aren't you sore?\"\n\n\"Yeah, but, I'm used to it.\"\n\nMarla's eyes twinkled. \"I'd offer you a back rub, but I'm sure you don't want an old lady's hands on you. I'm actually pretty good at it.\"\n\nJesse got a jolt of horny juice and his cock started to grow. \"You're more sore than I am,\" he said, \"so I should be...givin' you one.\"\n\nMarla was thrilled with the little courtship dance. She never dreamed he'd actually be interested in her, but she'd never spent much time around boys his age. Her breasts had always attracted men, but still \u2014 forty-nine years old! And he's only nineteen! Am I going to let this happen, she wondered?\n\nShe hung the damp, dirty sheet over the deck railing to dry, leaned the rake up against the house and led Jesse into the kitchen. Twinkles was there, circling her ankles, rubbing up against them.\n\n\"Hungry, Twink?\" she said. \"Say hi to Jesse.\"\n\nJesse squatted down and petted the happily purring cat, his body still bare from the waist up, his t-shirt hung over his shoulder. \"Hi Twink,\" he said, in a gentle, cat friendly voice. Twinkles purred even louder.\n\n\"He really likes you,\" Marla said, smiling as she spooned cat food onto a plate. She loved the way Jesse's hands looked, dirty from work, gently massaging Twinkles' soft fur. She had a sudden hot flash, imagining his dirty hands on her own patch of soft fur. \"Cookies? Help yourself,\" she said. \n\nJesse watched gravity play with Marla's breasts when she bent to put Twinkles' plate of food on the floor. He went to the plate of cookies on the counter and ate one almost as ravenously as Twink was gobbling down the cat food.\n\n\"God these are good,\" he mumbled, his mouth full of soft cookie and melting chocolate.\n\n\"I was hoping you'd like them,\" Marla said, smiling. She ate one while Jesse had his second. \"Wow,\" she said. \"Chocolate and a massage? This may be the best day ever.\"\n\nJesse smiled. A massage sounded much more serious \u2014 and much more real all of the sudden \u2014 than the backrub she'd mentioned when they were in the backyard. He was glad of it and wondered how it was going to work. \n\nMarla was wondering the same thing. She decided to go all in. \"Shall we just throw caution to the wind and go to my bedroom?\"\n\nJesse fought back a huge smile, but a cute one made it through. \"Sure,\" he said.\n\nMarla's entire body felt alive, and she was surprised she could still breathe normally. \"All right then,\" she said, looking a little stunned at how things were going. \"So easy. I don't mean you, Jesse, just...everything. I'm newly divorced, and I didn't know...if I was still...attractive.\"\n\nJesse's smile got even cuter. \"You are,\" he said.\n\n\"That's good to know,\" Marla said, feeling the powerful pull of Jesse's youthful allure. \"Attractive enough to...kiss? Or would you rather just stick with...a more hands on approach.\"\n\nJesse's big smile finally got loose, lighting up his face. \"Kissing's nice.\"\n\n\"All right then,\" Marla said, her eyes twinkling above a curious little smile. \"We'll both taste all chocolatey.\"\n\nShe was already close to Jesse, so she reached for his hand and they both moved in for the first kiss. It would have been sinfully nice on its own, but the chocolate! \n\nJesse wasn't shy with his hands, moving them with surprising skill, from Marla's ass to all the way up her back, and then back to her ass. Marla did some of the same, her hands soaking in the fleshy warmth of Jesse's bare skin and sneaking down for a squeezing grab of his tight young ass. It was a pretty wonderful first kiss; the first real, passionate kiss Marla had shared with anyone in years.\n\n\"Wow,\" she whispered, when their chocolate-flavored lips parted. \"Let's go upstairs.\"\n\nShe took Jesse's hand and nearly dragged him behind her, moving fast for the stairs and then up them and into her bedroom. Clothes were shed and then two naked bodies were tangled on the bed; moaning mouths kissing deep, arms and legs intertwined, noses breathing sweaty flesh, hands finding wet pussy and hard cock. Marla pushed Jesse flat on his back and she mounted him, quickly and decisively, and she was fucking. Jesse lay mostly still and let her do her thing. She kissed him wild and wet as her hips moved fast, fucking his cock, and then she sat up and let him see her, the tits he'd dreamed about for the last two nights right there for his dirty hands to take.\n\n\"Oh god yeah!\" Marla said when he claimed them, her body rising and falling with urgency. \"Fffuuck you feel good!\"\n\nJesse's hips started matching her rhythm and they were both fucking as one, electricity flowing between them at a high current. They both knew it was explosive and they welcomed it, two bodies rocketing toward the fiery finish. They both lost control together, with a powerful, forceful urgency that was intoxicating.\n\nMarla could barely believe what had happened. Breathless and stunned, she gripped her bed's headboard in her clenching fists, her hips moving slowly, her freshly orgasmed pussy on sweet, honey-like fire, moving smoothly on Jesse's hard young cock. She could feel him throbbing inside her, still pulsing the last drops of his offering. Her breasts hung on his warm face, his mouth moaning quietly on the soft flesh, his teeth gently nibbling one of the nipples that fueled his dreams.\n\n\"Wow,\" Marla said, breathless. \"That was better than...anything.\"\n\nJesse reluctantly gave up his mouthful of wonder. \"Really?\" he said.\n\n\"Really,\" Marla said, breathing hard. \"I'm gonna need to do that some more. Would that be okay? Want to be my lover for a while?\"\n\n\"Yeah! It was better than anything for me, too.\"\n\nMarla arched her back deeper, teasing Jesse's mouth with the weight of her hanging breasts. \"Suck my tits some more,\" she said, still slowly fucking his mostly hard cock. \"I love it when you suck my tits.\"\n\nShe closed her eyes and lost herself in the tingling warmth, the sensuousness so deeply overwhelming it felt all-enveloping. Jesse's hips got back in the act, slowly thrusting his cock up into her.\n\n\"How can you still be hard?\" her breathy voice asked.\n\nJesse couldn't imagine not being hard with a woman like Marla naked on top of him. The inside of her felt amazing, even more amazing than the young girls he'd been with. He decided it was because of how Marla moved, her body moving fully, in such a sensual, experienced way. His tongue circled the aroused hardness of her nipple, and he adjusted his slow moving hip thrusts so every millimeter of his cock fucked her deep.\n\n\"God, you're gonna make me cum again,\" she said.\n\nJesse sped up to try and make it happen.\n\n\"No! Slow, baby!\" Marla said, showing him the speed she wanted with her body. \"Just like you were doing. After that you can fuck me hard.\" Marla felt wonderfully wicked, telling a young stud just what she wanted, using the \"f\" word in bed with him. \"Christ!\" she said, amazed that her body was responding the way it was. \"I've hardly ever cum once with a guy let alone twice. If you can do it I'll never let you out of my sight.\"\n\nJesse was hopeful. He wanted to please the first real woman he'd ever been with. He fucked her slow, deep and deliberate, just like she wanted, for a blissfully long time, and her rising exclamations were music to his young ears...\n\n\"Ohhh!... Ohhh!... Ohhh!...\"\n\nJesse's face showed his wonderment as he unhurriedly fucked the beautiful woman, lifting her to a second orgasm, one that was so deep and guttural she sounded like an animal. He'd never seen or heard anything quite like Marla.\n\n\"All right,\" she said, trying to gather her fragmented wits. \"What the hell!\"\n\n\"Was it okay?\" Jesse asked, his rock-hard cock still slowly slithering in and out of Marla's warm, velvety insides.\n\n\"Oh, darlin',\" she said, \"that was so much better than okay. I've never...ever...felt anything like that before. I know you don't have much experience, but damn you're good. It's that...cock of yours. Do you mind if I call it a cock? It's so ridiculously hard.\"\n\nJesse smiled. \"No, I don't mind,\" he said. He was thrilled that Marla liked it. He felt like he was harder than usual, like some sort of supernatural sex power had inhabited him. Marla made him so horny he could barely stand it. He wanted to devour her tits some more and fuck her for hours.\n\nMarla stayed on top, luxuriating in the feeling of a young, perpetually hard cock deep inside her. After a long, sensual kiss, she smiled at her young lover's happy-looking face. \"You're gonna think I'm a pervert or something, but I want you to tell me about watching your roommate and his girlfriend. Describe them to me. What's her name?\"\n\n\"Morgan.\"\n\nMarla smiled. \"Ooo, I like that look in your eyes. Do you like having your cock in me when you think about her?\"\n\n\"Yes.\"\n\n\"You said she's cute, right? Describe her to me.\"\n\n\"She's, like, five-two I guess, and...\"\n\n\"Go on, don't be shy. Does she have a nice body?\"\n\n\"Yeah. She's big, sorta like you.\"\n\n\"Her breasts, you mean? Do you call them breasts, or tits?\"\n\n\"Tits.\"\n\n\"They're probably nicer than mine, because she's young.\"\n\n\"No, they're not. Yours are...really nice.\"\n\nMarla smiled. \"Squeeze 'em in your hands,\" she said. \"That's it. Pretend they're Morgan's. How would you fuck her if you had the chance?\"\n\n\"How?\"\n\n\"Yeah. What position would you put her in?\"\n\n\"Probably...doggy, maybe?\"\n\n\"Does she have a nice ass?\"\n\n\"Yeah, really nice. Probably the best of all the girls.\"\n\n\"What's your roommate's name?\"\n\n\"Derek.\"\n\n\"Have they ever done it doggy style in the room when you're there?\"\n\n\"Yeah.\"\n\n\"Really! Wow, they really are putting it out there for you. They knew you were watching?\"\n\n\"Yeah. I mean I'm not just sitting there staring at them, but yeah, they know I'm awake and can see.\"\n\n\"Wow,\" Marla said. \"Does she...cum? I mean, does she really get off on being seen like that?\"\n\n\"Oh yeah. She loves it. Up until today, I've never been able to make a girl act like she does. My old girlfriend never did.\"\n\nMarla smiled. \"Well if it makes you feel any better, up until today I never did either. God, I can't believe how hard you are! Jesus!\" Marla rubbed her pussy grindingly hard against Jesse's crotch, feeling his cock way up deep inside her. \"Wanna fuck me doggy style?\"",
        "Jesse smiled. \"Yes.\"\n\nA few moments later he was behind his horny older woman and his rock-hardness was making her moan again.\n\n\"Fuck me fast and hard if you want, baby,\" she said. \"Whatever you want.\"\n\nJesse groaned loud, a surprising noise that made Marla smile. It was the start of an unleashing of his youthful energy that quickly took her breath away; a fast, hard, ass-pummeling round of doggy style that had them both yelling out their excitement, noises and words that nearly echoed in the quiet room.\n\n\"Yeah!...Fuck!...Oh, fuckin' Yeeeaahh!\" Marla bellowed, absorbing her boy-toy's lusty, full-throttle exuberance like an old pro. \"Fuck me, Jesse!\" she screamed. \"Fuck me!\"\n\nMarla didn't cum again, but Jesse did, her breathless cries morphing with happy laughter when she felt him lose his excited young mind. It was such a joyous thrill she let the laughter take over, rolling and gathering her sweaty boy in her arms, giggling breathlessly as she frantically kissed his neck and his strong shoulder.\n\n\"God this is fun!\" she said. \"You'll come back, right? You're not going to tell your friends some desperate old lady raped you, are you?\"\n\n\"No! Yeah, I'll come back! I want to!\"\n\n\"Good,\" Marla said, holding his warm body tight against hers. \"I want us to be on the same page here. If you get uncomfortable with anything, you'll tell me, right?\"\n\nJesse nodded. He looked like he wanted to kiss her, so she moved toward him and his lips met hers, not chocolaty anymore, but wonderful enough to make Marla moan. She felt the smooth muscles in his upper arm, and her other hand touched his naked ass for the first time. It was smooth, too, ridiculously so, and she moaned again when she felt it's powerful muscles flex. The kiss was less frantic, a low smolder of tongues and warmth that gave her ass-caressing hand time to explore. Jesse's legs were splayed in a way that gave access to his manhood. With Marla's wrist pressed in the warmth between his ass cheeks, her gentle hand found his balls, sneaking up on them from behind. Her kissing mouth smiled when Jesse moaned. She caressed the soft, smooth things, marveling in how taut they felt, how young. Without letting go of them, her fingers tickled the underside of the cock that had done such wonderful things to her, its rock-hardness finally dissipated, resting, recharging she hoped, for at least one more round of blissful fucking. She moaned into Jesse's mouth, telling him how happy her warm hand was to be playing with that part of him.\n\nThe kiss was incredible. It made Jesse's mouth water. The way Marla's tongue flicked playfully, the way she smiled when she did it. He'd never kissed a smile before, that he could remember. It was kind of amazing. The kiss was so wet and juicy it made him think of her pussy. He badly wanted to have his mouth on it, to taste it, and the thought of doing it hardened his cock again. Marla moaned when her playful fingers felt it grow.\n\n\"Someone's incorrigible,\" she said, the nearly whispered words fluttering across Jesse's lips like a warm breeze.\n\nIt was the first time he'd heard anyone use the word, but he knew what it meant. He smiled and tried to think of a way to find out if a woman Marla's age would be interested in having him lick her pussy.\n\n\"Derek and Morgan do something else,\" he said.\n\n\"Do they now,\" Marla said, smiling. She reached her arm farther in, between warm ass cheeks and past tight smooth balls, so she could squeeze Jesse's reinvigorated hardness in her happy fist. It felt amazing to have a hold of him that way, from behind. Jesse thought so too, and he moaned. \"Just what do they do that excites you so much?\" Marla asked.\n\n\"Sixty-nine. Do you know what that is?\"\n\nMarla smiled wider. \"Yes, I know,\" she said. \"It's been around a lot longer than I have.\"\n\n\"Really? I thought, maybe, it was kinda new.\"\n\n\"There's nothing new,\" Marla said. \"People have been doing naughty things to each other for as long as there's been people. But that doesn't mean everybody's done everything. I've never been with anybody who wanted to try sixty-nine, so I've never done it. You'll have to help me figure it out, okay?\"\n\nJesse smiled. \"Okay. So...I go on my back, and you...turn around.\"\n\n\"I'm pretty sweaty down there,\" Marla said. \"I could take a shower first. We could take a shower.\"\n\nJesse liked the idea, but he was already hard and didn't want to put off tasting Marla's pussy. He rolled onto his back and reached for her hand.\n\nMarla giggled. \"I guess we're gettin' down and dirty.\" She repositioned herself and giggled again when she lifted her long leg over Jesse's head. She twisted around so she could see what was happening, amazed that she was spread so wide right over his face. \"Wow. You're right in there, aren't you. Yikes.\"\n\nHappy sounds flew out of her lungs when Jesse's mouth made contact with her slippery softness. \"Oh-h-ho!...Fffuck!\" she said. Her hips started moving, dragging her tingly, wet pussy across Jesse's tongue. She wrapped her hand around his hard young cock and breathy words floated from her mouth. \"Oh, yeah...I like this...Fffuuck...\"\n\nJesse liked it, too. Watching Morgan sixty-nine his roommate always made him extra horny. Something about seeing a girl's ass that way, moving just the way Marla's was, it was the most perfect of all the sexual visuals he could imagine. It said 'this girl likes sex' better than any other position, at least that's the way Jesse saw it. And the way Marla was reacting to her first time trying it was thrilling.\n\nShe took Jesse's cock into her mouth and was moaning loud, moans that came one right after another, on every breath. Her hips moved more forcefully, grinding her pussy harder and harder against Jesse's hungry, surprisingly skillful mouth. It wasn't long before she came, cock in squeezing hand, head thrown back, her open mouth spewing otherworldly noises toward the ceiling. Twinkles jumped on the bed, agitated, checking to see if Marla was okay. She was. She was very okay.\n\n\"Fffuuck!\" she exclaimed, when she was able. She filled her mouth with young cock again. Hungy. Voracious. She felt the breath of Jesse's deep moan on her pussy.\n\n\"Why have I never tried this?\" she asked herself out loud, teasing the hard cock in her hand with her tongue as she reveled in the tingly pussy licking. \"It's like the best thing ever. You like it, babe?\" she asked, smiling lustily, moving her hips again, smearing her post-orgasmic wetness all over Jesse's nose, mouth and chin. \"You like it like this?\"\n\n\"Mmm hmm,\" Jesse mumbled. His lips and tongue were too busy to form words.\n\n\"Do I taste dirty?\" Marla asked. \"Do you like your women all sweaty and dirty?\"\n\nJesse reluctantly separated his lips from Marla's juicy pussy so he could speak. \"You taste...better than chocolate.\"\n\nJesse's mouth made contact again, and Marla moaned through an open-mouthed smile. She couldn't ever remember sex feeling so thrillingly good, so deeply soul-satisfying. A fleeting thought of her ex-husband drifted through her mind, the first time she'd thought of him with a smile on her face since they'd fallen out of love. He'd made his messy exit and the puzzle pieces of her new life were falling into place. A wonderful little house in the country, and sex with a guy who really loved it. So what if he was a boy; he was old enough, he wanted to be there, and she did, too.\n\nThey stayed in that sixty-nine for the longest time. Marla had another orgasm, a deep, guttural one that thrilled Jesse so much he had one, too. The first spurt of his young cream went halfway to the ceiling, and then Marla took his pulsing cock into her mouth, the first time she'd ever tasted a man's warm cream. The moans that emanated from her were agitating Twinkles again, but Marla didn't notice. She was lost in the dream of perfect sex for the first time in her life. Lost in the soul of the perfect boy.\n\n\u2014\n\n\"Hi Jesse!\"\n\nMarla was sitting on her front steps, waving at her young lover. Twinkles was sprawled up against her thigh, his furry body soaking in the mid-day sun. He wasn't an outdoor cat, but every once in a while he was allowed to lounge in the fresh country air.\n\nJesse was arriving to work on the hedges, but both he and Marla anticipated another bedroom session after the yard work was done; more of the blissful, naked, warm and wild sex that had overtaken both of their imaginations for the last twenty hours or so. He waved as he walked up the driveway, the smile on his face just as big as the one on Marla's.\n\nShe looked him over as he got closer, picturing him naked. \"How was class today?\"\n\n\"Good.\"\n\n\"How 'bout last night? Was Morgan around?\"\n\n\"Yeah. It was better, though.\"\n\n\"Better? Why, what'd she do?\"\n\n\"Oh. Just the usual. But...I just thought about you and it wasn't so...\"\n\nMarla smiled. \"I'm happy I could help. You really thought about me? I thought you said she has the nicest ass at the school.\"\n\n\"Yours is nicer.\" Jesse blushed after he said it and looked shy.\n\n\"Oh my gosh,\" Marla said. \"That's the nicest compliment I've ever gotten. And you're just too adorable for words.\"\n\nJesse blushed even pinker. \"So, you want me to cut those bushes?\"\n\n\"Yeah,\" Marla said. \"I talked to somebody that knows about them. She said we can cut a lot off of them and they'll come back nicer. They're just too close to the driveway; I'm always afraid I'm going to scratch my car. There's, like, fifty of them, though, so it might take a few days. Think you can stand spending that much time with me?\"\n\n\"Sure. Maybe you can find more for me to do after that?\"\n\nMarla smiled. \"Oh yeah, there'll be jobs. A big yard like this always has something to do. We'll have to work around your school work though. That always comes first.\"\n\nJesse smiled. 'Always comes first' made him think of the amazingly intense and beautiful orgasm Marla had when they were on her bed for the first time. He'd expected it to be more of a challenge, making an older woman cum.\n\n\"What?\" Marla said, when she saw his mischievous smile.\n\n\"Nothing,\" Jesse said.\n\nMarla got tingles from the sexual tension. She was tempted to drag Jesse into the house and fuck him first and do yard work later, but she knew that once they got started they'd just stay in bed all afternoon. \"All right then,\" she said, trying her best to stay composed. \"The long-handled cutters are in the garage. I thought we could put the cuttings on that old sheet and drag them out where the leaves are.\"\n\nJesse's face brightened. \"You're helping me?\"\n\n\"Sure. We make a pretty good team, don't you think?\"\n\n\"Yeah!\" Jesse said.\n\nThe work commenced and Marla was sweating before Jesse was. Earlier, before Jesse had arrived, she and Twinkles had decided she should wear her jiggle bra again, the pink one with the loosely elastic fabric that made her breasts bounce. She'd debated about going bra-less and extra nippley, like their first day raking leaves, but she was starting to like the extra lift and bounce of the jiggle bra, and it was so thin her nipples still made themselves known. It was the best of both worlds.\n\nJesse was in shorts and a t-shirt again, but the shorts weren't quite as baggy. Marla liked the way they showed off his young ass; it had a perky curve to it that she loved \u2014 young muscle in perfect form. Jesse broke a sweat soon after Marla did, and he took off his t-shirt and tossed it on the grass. Marla wanted to comment but the two of them were still feeling things out, not yet the say-anything-do-anything lovers that she hoped they'd someday be.\n\n\"Did you eat all those cookies I sent home with you?\"\n\n\"Oh, yeah,\" Jesse said. \"My roommate liked them. He wanted to know about you.\"\n\n\"What'd you tell him?\"\n\n\"Just...that you're hot.\"\n\nMarla smiled. \"I'm hot? Wow...that's...so nice to hear. I'm not even gonna tell you how old I am.\"\n\nJesse smiled. \"He wondered if I was gonna...try and get with you.\"\n\n\"Ha! What did you say?\"\n\n\"Nothing. I was trying to look normal, but...it wasn't easy.\"\n\n\"Thank you. I'd hate to get a reputation around here, not that he knows me or anything.\" Marla thought about the situation and realized Jesse might someday find himself in a difficult situation of trying to cover up her indiscretions. \"You know, don't worry about it too much. I mean, I'd rather you didn't go around bragging about banging me, but if you ever say something by mistake don't worry about it, okay? I'm a big girl, I can deal with it. Who knows, maybe I'll even tell someone about you. I'm kind of proud of this, actually; the fact that I'm attractive to a handsome young man like you.\"\n\n\"You are!\" Jesse said, a little too enthusiastically.\n\nMarla giggled. \"I feel like a kid again when I'm with you. You have no idea what a big deal that is for me at this point in my life.\" She paused, looking into Jesse's eyes. A smirking smile curled her lips. \"And you make me so fucking horny. I've never felt anything like this, never enough to say those words to anybody.\" She paused again, and then she let him know just how horny she was. \"Can I give you a blowjob, like, right now?\"\n\nShe was on her knees unfastening his shorts before Jesse could answer, but of course his answer would have been yes. He looked over his shoulder at the country road. There wasn't a vehicle in sight, but it was a bus route, and a truck route into town, and...\n\n\"Shouldn't we go somewhere?\" he asked.\n\nHis call for sanity was too late. Half hard already from the jiggle bra and Marla's smile, his cock was out and Marla had inhaled it into her mouth, like she needed it. She pulled his shorts down past his knees, so she could get her hands on her favorite tight young ass. A car went by, but it was from the direction that couldn't see them until it was already whistling past the house, so the driver was oblivious. Jesse had hardened up as quick as a wink, and Marla let the young cock bounce free of her wet lips, the suddenly beautiful, suddenly rock-hard shaft pointing up toward the blue sky.\n\n\"I want you to cum in my mouth,\" she said, her eyes looking up at Jesse. She mouthed the hard flesh again, two times. \"Will you do that for me, babe? Hmm?\"\n\nShe sucked him in again and went a little wild, the first time a blowjob had felt so good to her, so vital, so important. She hooked an arm around Jesse's thigh and played with his balls with her fingers, and her other hand slid on the slippery cock the same way her lips and mouth were doing. It was happening at a frenetic pace, and Jesse's hips started fucking. Marla was moaning, Jesse was moaning, the sound of a big truck's horn cut though the quiet country air. Jesse was cumming, and Marla was drinking it all in \u2014 the cum, the moans, the trucker's approval. It was magic, and then it was over.\n\n\"Fffuuck!\" she said, sitting back on her heels, her chest heaving with gasping breaths. She swirled the slippery taste around in her mouth, and her eyes drifted up to Jesse's. \"Whoa,\" she said, quietly breathless. \"Sorry, I...got kinda carried away.\"\n\nJesse smirked. \"You're not sorry,\" he said.\n\n\"Pull up your pants!\" Marla said, her breathless smile mischievous again. \"What are you, an exhibitionist?\"\n\nJesse smiled and pulled up his shorts. Marla was still down, sitting on her heels, watching him as he fastened them. She stayed like that, with his taste still in her mouth, watching as he picked up the hedge clippers and got back to work. He glanced at her a few times, smirking, wondering what she would do next.\n\n\"Do all girls give blowjobs these days?\" she asked. \"Is it just...normal sex?\"\n\n\"Not the way you do it,\" he said, clipping branch after branch. \"That was way better than normal.\"\n\nMarla smiled. \"Really? I'm not...experienced at that, at all. So do all girls do it these days? Back in my day it was kinda rare.\"\n\n\"I guess...maybe...I don't know. I don't have much to go on.\"\n\n\"When did you lose your virginity?\" she asked, still sitting on her heels on the grass at the edge of the driveway.\n\n\"Two years ago.\"\n\n\"So, senior year at high school?\"\n\n\"Yup.\"\n\n\"Was it good, or was it not so good?\"\n\n\"I was really good, but nothing like...you.\"\n\nMarla smiled, stood up and started gathering branches. \"Was she a cute girl? How did you do it?\"\n\nJesse smiled and didn't answer. He kept on clipping.\n\n\"What, you don't want to tell me?\"\n\n\"You're very curious, about...things.\"\n\n\"This is gonna sound stupid to you,\" Marla said, \"but...I feel like I never had a sex life. Not a real one. The kind where people really love it, you know?\"\n\n\"Really? But you're so...sexy.\"\n\n\"Ha! It's all an illusion, my sweet boy. All an illusion. You're helping make it real, though. What's happening between us, this is big for me. You came into my life at the perfect time.\"\n\nJesse glanced at his sexy lover. He was glad he was important to her and not just a fling. \"Her name's Haley,\" he said. \"We grew up together, just a few blocks apart. She hung out with different friends, though. The partiers. They drank and got high and stuff.\"\n\n\"Is she cute?\"\n\n\"Really cute. I always thought so. She's, like, really small, and, I'm not too tall, so...I always liked those girls.\"\n\n\"Not a giant like me, huh?\"\n\n\"You're not. Your legs are way nicer than the shorter girls.\"\n\n\"So what happened? Did she get you drunk and take advantage of you?\"\n\n\"No. Sort of, I guess. We were at the same party. This guy from school, his parents were away. I drank more than I was used to; there was this strip drinking game a lot of them were playing. Haley was already in her underwear, and she looked super hot. It sort of messed up the way I was thinking, you know?\"\n\n\"Yeah, I know,\" Marla said. \"So did you join in the game?\"\n\n\"Yeah. I did really bad. I remember only having my underwear on, and I didn't want to take them off, because I was...hard, you know? And she came over and pulled them down. I didn't stop her because I guess I wanted her to do it. It was weird, everybody was looking and cheering, but I didn't mind because she had a look on her face that was...nice.\"\n\n\"Wow. Sexy story. Did you go all the way from clothed to naked before she did?\"\n\n\"Yup. She still had her bra and her thong thing on.\"\n\n\"So what did you do, just stand there all hard?\"\n\n\"No. She said 'I won!' and she took my hand and she brought me upstairs to one of the bedrooms. It was big and fancy, the parent's one, I think. She was naked really fast. The kiss was amazing.\"\n\n\"Wow,\" Marla said. \"Tell me.\"\n\n\"She had her hand on my...cock, and we kissed. We just stood there, kissing. I could feel her...tits against me. She pulled my head down and I...sucked on them. They're big like yours.\"\n\n\"Really? Wow. A little petite girl with big tits. You hit the virgin jackpot, didn't you.\"\n\nJesse smiled. \"It was pretty hot.\"\n\n\"Tell me.\"\n\n\"We kissed some more. She put my cock between her legs. Have you ever done that? Standing up?\"\n\n\"I don't think so, no. We'll try it later. So you were like, thrusting between her thighs?\"\n\n\"Yup. Super hot.\"\n\n\"Could you hear the party? Were there other people up there? Was the door shut?\"\n\n\"Yeah, the party was loud. It was kinda wild. There was other people in other bedrooms. We could hear 'em.\"\n\n\"Really? You could hear sex? Wow, I've always wondered about that.\"\n\n\"You never have?\" Jesse asked.\n\n\"No. Like I said, shitty sex life that's hopefully just starting. So the door wasn't closed?\"\n\n\"No. I kind wanted it to be, but...\"\n\n\"Haley wanted it open?\"\n\n\"I think maybe, yeah.\"\n\n\"Wow, what is it with girls these days? Haley and Morgan both doin' it out in the open. Do you know if anyone saw you guys?\"\n\n\"Yeah. A bunch of people. It was kind of...exciting.\"\n\n\"Haley thought so, too?\"\n\n\"Yeah, I'm pretty sure. She was smiling when people were yelling in at us.\"\n\n\"Wow. Wild party. I was never at anything like that. How much could they see of her?\"",
        "\"A lot. She was sitting up riding me, sorta facing the door, and then she sorta turned us, I think so they could watch my...cock going in and out of her.\"\n\n\"Shit! That girl is wild! Your first time? Christ!\"\n\n\"Yeah, it sorta hasn't been as good ever since then, until you.\"\n\n\"Aww! Come here, that deserves a hug.\" Marla wrapped her arms around Jesse's bare torso, and felt the lump in his shorts against her thigh. \"God you feel good. But we better get some work done. We'll go inside later? Do you have to get back for anything?\" \n\n\"No, nothing 'till class in the morning.\"\n\n\"Good. We'll work up an appetite and then I'll make you dinner.\"\n\nJesse pruned ten of the overgrown bushes, and Marla dragged pile after pile of clippings out behind the hedgerow, to the place where the dead leaves were slowly decomposing. She decided they'd done enough \u2014 four more days of ten bushes each would finish up the project.\n\n\"Let's get cleaned up,\" she said. \"My gosh, you're all scratched! Your beautiful skin!\"\n\n\"It's all right. It's no big deal.\"\n\n\"Ohhh,\" Marla said softly, touching Jesse's scraped and scratched chest and arms gently with her hand. \"I'll need to kiss every one of these boo-boos, to make them better.\"\n\nJesse smiled. There were moments when Marla reminded him of his mother. It was an odd feeling, but he liked it.\n\nInside the front door, when Marla commenced the boo-boo kissing, all thoughts of his mother vanished from Jesse's head. Twinkles was rubbing up against his ankles, happy to see him, and Marla was already moaning, a sound Jesse loved. Her soft, kissing lips and her wet, warm tongue took loving care of every scratch, every scrape. Clothes were shed, right there in the living room, and Marla was down on her knees again, giving a more playful blowjob, not far from the wide-open door and the big window. She glanced at the cars going by and silently wished she had ordered something that would have brought the UPS man to the door at that very minute.\n\n\"You didn't tell me much about last night,\" she said, tonguing the swollen tip of her young lover's cock. \"You said Morgan was there. Did she turn you on again?\"\n\n\"Yeah. She started out under the covers, but, I don't know, I think the heat was stuck on high or something.\"\n\n\"So she was all naked again? Out in the open?\"\n\n\"Yeah. They were doin' it, like a spoon thing, you know?\"\n\n\"Show me.\"\n\nMarla took his hand and pulled him down onto the living room rug. Jesse guided her into position on her side, arranging her just the way Morgan had been, and then he positioned himself behind her, his arm draped over her side, his hand on her breast, his cock poking between warm thighs.\n\n\"Wow, you're so hard,\" Marla cooed, basking in the warm, fleshy feeling. \"So was she facing you?\"\n\n\"Yeah.\"\n\n\"How far away?\"\n\n\"About...like where that table is.\"\n\n\"Close! I guess they're small rooms. I've sort of forgotten. So, wow, you can probably...hear it, too, right? I mean more than just her voice.\"\n\n\"Yeah.\"\n\n\"Wow. A live porn show almost every night. That's gotta be...wild.\"\n\nMarla reached between her legs and pushed Jesse's cock between the squishy lips of her pussy. Two slow thrusts and he was nicely inside her.\n\n\"Does she look right at you?\"\n\n\"Sometimes. Last night she did,\" Jesse said, his voice breathy.\n\nMarla moaned. Jesse's cock felt heavenly inside her, moving slowly. \"So, I can picture her the way you told me, petite, with big tits and the best ass of all the girls, you said, right?\"\n\n\"Yeah.\"\n\n\"What does her hair and face look like?\"\n\n\"Sort of reddish blonde. She's got really pale skin.\"\n\n\"Blue eyes?\"\n\n\"Yeah.\"\n\n\"And Derek? Describe him to me.\"\n\n\"He's black. Tall...\"\n\n\"He's black? Wow, I didn't...think of that. I hope that doesn't sound...odd or anything, it's just my generation, I guess.\"\n\n\"No, that's cool. Yeah, my mom's the same way.\"\n\n\"Oh, baby, do me a favor and don't talk about you mom while you're fucking me, okay?\"\n\n\"Okay. Sorry.\"\n\n\"Don't be. It's just a little weird for me. I'll get used to it. So...Derek's black and he's tall. You've seen his cock plenty of times, probably, huh?\"\n\n\"Yeah, he's sort like me.\"\n\nMarla smiled. \"That's 'cause you're a big boy. Did you know that? You're bigger than average.\"\n\n\"I wish all of me was.\"\n\n\"Oh, no. You're as handsome as anybody. Don't ever forget that, okay.\"\n\nJesse smiled. \"Okay.\"\n\n\"God you feel good in me,\" Marla purred. \"Who knew the living room rug was such a great place to have sex!\"\n\nJesse went as deep as he could and Marla moaned. She put her hand over his and held it tight to her soft breast, helping him squeeze it. \"How did Derek fuck Morgan?\" she purred. \"Lets do it just like they did.\"\n\nJesse found the rhythm and his thrusts moved freer and a little faster, long strokes that Marla loved. He pulled his hand out from under hers and placed hers back on her own breast.\n\n\"She touches herself?\" Marla asked, her words breathless from the first glimmer of a building orgasm.\n\n\"Mmm hmm,\" Jesse breathed, the warmth of it tickling Marla's neck.\n\nHis hand went to the front of Marla's crotch and his fingers, still dirty from the yard work, slipped between the lips of her pussy. He could feel his cock there, moving, and he felt around on her slipperiness for what he thought he might be looking for, Marla's special place, the place he hoped would trigger her the way Derek's fingers so often trigger Morgan.\n\nMarla liked it.\n\n\"Ohhh!...Oh, God!...Fffuuck!\"\n\nJesse smiled. He'd found Marla's pleasure spot, and he worked it with gentle pressure, with his dirty fingertips, and he fucked the length of his cock in and out of her with newfound confidence. It was a beautiful, steady build-up, and then Marla slipped into the other-world for a few blissful moments, orgasming with a warmth and a heat that seemed unbelievable. It was a better orgasm than Morgan's had been, and Jesse smiled again.\n\n\"Wwwoww,\" Marla said. \"He does that to her? And she cums? Right in front of you?\"\n\n\"Uhh huh,\" Jesse breathed. She loved the way his answers tickled her neck.\n\nThe blissful couplings continued, mostly right there on the living room floor; cock sucking between Jesse's outspread legs, cowgirl riding with bouncing breasts, sixty-nine that smoldered and made Marla cum twice. The sun had set and the evening was slowly dimming. Traffic on the road was more frequent; it was the rural rush hour, with headlights newly on. Marla got up, switched on the living room lights and stood in front of the window; her happy, naked body was easy to see for anyone who cared to look.\n\n\"Fuck me right here, baby,\" she said, \"and then I'll make us some dinner.\"\n\nJesse was fascinated by Marla. He was pretty sure she was transforming herself, although he couldn't be sure because he'd only known her for a few days. Her interest in Morgan's exhibitionism, the blowjob out by the driveway, and the way she was positioning herself right against the front window; it was all exciting and Jesse was happy to be along for the ride. She had her hands on the glass and she widened her stance and arched her back to get her ass out for him. There was a table lamp just off to her side, low enough that it lit up the front of her, casting deep shadows from her big, hanging tits. She turned her head, looking at Jesse as he joined her, his cock rock hard as always, pointing high.\n\n\"Fuck me, baby,\" she said. \"I'm all tingly.\"\n\nJesse's cock sunk into her, all the way deep where she loved it to be. Where he loved it to be. Marla watched herself and him in the reflection, and she watched the cars and a truck going by. She'd never done drugs, but she knew what she was feeling was what a junkie would feel, right after shooting up. Heroin in the brain. Sex with a loving, delicious college boy. Sex in the open. Sex that wasn't hidden away.\n\n\u2014\n\nMarla slept soundly, her body still, breathing loud through an open mouth. About two hours into the restfulness a dream took over her brain, and her body started moving, twitching, muscles firing. Twinkles preferred stillness so he pressed his four paws against Marla's side to let his feelings be known, but the dream was deep and not to be denied. \n\nMarla was with her realtor, the nice man who'd helped her find her house, but they were at a different house, an empty one in a residential neighborhood, a tightly packed suburb with families coming and going and husbands out mowing lawns. Marla was wearing the little white ribbed-cotton undershirt, the one with the thin spaghetti straps, the one that let her braless breasts jiggle and let her nipples be known almost as if they weren't covered at all. She wore a pleated skirt, like a college girl's, and she could feel the warm summer breeze up underneath it because she wasn't wearing panties. She admired the realtor's blue linen blazer, and the cut of his khaki pants. The legs weren't baggy like most men's pants, and his thighs looked muscular. In the living room of the empty house, right in front of the big picture window that was bare of curtains and close to the busy sidewalk and street, Marla opened his pants and took out a cock that was a foot long. She squatted, opened her mouth like a baby bird and the nice man fed it to her, her throat swelling like a snake's does when it eats a mammal that's nearly as big as itself.\n\nThe blowjob was wet and slippery, the massive cock going all the way in and all the way out, over and over, slowly, a smooth, slow-moving throat fuck that seemed perfectly normal. When Marla sensed the impending eruption of cum, she stopped and backed the big cock out of her. \"Uh-uh,\" she said, shaking her head. \"Not yet.\" The nice realtor winked at the man mowing the lawn next door. Marla put the hard, foot-long cock back in his pants and it vanished, not even a lump. She looked around the house some more, making sure her tits bounced nicely with each step. She followed the realtor out the front door and she waved to the lawn-mowing husbands and the smiling, gardening wives. The realtor spread the pages of information about the house on the hood of his car, and Marla bent over it while she read. \"Now,\" she said, looking back at the nice man, her ass wiggling side to side under her pleated skirt, inviting his touch. The nice man's twelve inches of hardness was out again; not only out, he was naked, and Marla was, too. Her moan echoed throughout the busy neighborhood when the deepest fucking she'd ever felt got started, but she kept reading \u2014 school taxes $3380, Village taxes $1835, Gutters were installed in 2014, furnace and hot water heater are 9 years old. Two of the neighbor husbands were naked and they walked over and fucked her, too, holding her hips, reaching in against the warmth of the hood of the car to squeeze the breasts that were pressed against it. \"The roof should last a few more years,\" the nice realtor said, \"and the basement's dry.\"\n\nIn the morning, with the dream fresh in her mind and sunlight streaming into her kitchen, Marla scooped cat food onto Twinkles' plate.\n\n\"I think I might be a sexual deviant, Twink,\" she said. \"What do you think about that?\" Twinkles didn't answer, but his purring was loud as he tucked into his breakfast. Marla took it as a positive sign. \"Maybe it's okay, huh? I mean, some women get sorta wild and it works for them, so why not me? Who decides who can do that kind of stuff and who can't?\"\n\nTwinkles didn't know, so he just ate some more. Marla knew the decisions were all her own. She'd already made a big one when she brought a nineteen-year-old college boy into her bed. It had seemed monumental the morning after, but now it just seemed like a step along the way. A nice step. A step in the right direction.\n\nShe went upstairs and put on the pink jiggle bra. It needed to be washed after the sweaty hedge clipping job, but she wanted to try wearing it all by itself for a little while, with just some sweat-pant shorts, to see what it would feel like to wear a really sexy bikini like some girls do. It looked a lot like a bikini top, more finished than her other bras, without the lace that would have given it away as underwear. She shook her torso from side to side, rose up on the balls of her feet and let her weight drop onto her heels while she watched in the mirror, smiling as she watched the jiggle and the nipple arousal that had so transfixed Jesse out in the backyard the day they raked leaves. Twinkles wandered in to see what was going on.\n\n\"What do you think, mister? Are my boobies holding up? I guess they look pretty good, huh?\" She shook them side to side again. \"Pretty good for forty-nine. You better never tell Jesse how old I am. The poor kid'd run away screaming.\" She let her weight thud down on her heels again a few times, watching intently as her breasts bounced.\n\nShe spent the morning picking up the house, happy to do it now that she knew Jesse would be a regular visitor. Before she knew it the day was half gone and she hadn't even taken a shower, her body still smelling of day old perspiration and day old sex, her breasts still relaxing in the stretchy, bouncy bra. When she saw the mailman's vehicle pull up to the mailbox at the end of her driveway she waved at him from inside her window, but he didn't see her. She was surprised how disappointing it was, missing out on a chance to be seen in what she'd decided was her sexiest piece of lingerie. \n\n\"Should I go get the mail, Twink? Why not, huh?\"\n\nShe was out the door quickly, before she could change her mind, walking with tall posture, down her driveway, watching a man's head swivel her way as he breezed by in his pickup truck at sixty miles-an-hour. She paused and flipped through her mail piece by piece right at the side of the road, her nipples fully aroused, pressing obscenely against the gauzy pink stretchiness. After two more cars had passed she walked back to the house, her goosebumpy body tall and statuesque, her mouth curled in a sexy little smile.\n\n\"Well that was interesting,\" she said to Twink. \"Wow.\"\n\nA shower was next on the agenda, to freshen up her scent and make herself prettier. Jesse had a late class and school work to do, so he wouldn't be there to work on the hedge until the next day. Marla tossed a load of dirty clothes into the washing machine, stepped into the shower and scrubbed herself clean. She was heading out in a little while, to have dinner with her mother.\n\n\"Are you wearing a bra?\"\n\n\"Yes, Mom. I'm going to be fifty in a few months, I think I can dress myself now.\"\n\n\"All right dear. I don't mean to...I just thought, you look so...\"\n\nMarla shook her shoulders from side to side and her big breasts waggled like a stripper's. \"You don't like this one? It's my new favorite.\"\n\n\"Marla! Someone will see you!\"\n\nMarla chuckled. \"It's all right, Mom. Really. After my divorce, I'm ready to be seen.\"\n\n\"Be careful, dear. Aren't men...awful these days? I hear so much about the porn, and...even on the TV they're doing things that...I wouldn't want to be a part of.\"\n\n\"Some people like that kind of thing,\" Marla said. \"Different strokes, right? What's that John Prine song Andy used to like? It's A Big Ol' Goofy World.\"\n\nMarla's mother's eyes searched her daughter's, eyes that looked much like her own. \"That's the first time I've heard you mention Andy's name in a while.\"\n\n\"I know,\" Marla said. \"I'm feeling better about things lately. A lot of it's the house. It feels so good to have my own place. I really love it.\"\n\n\"I'm so glad. I was worried you'd be lonely out there in the country.\"\n\n\"No, I'm not at all. Twink keeps me company, and I've had a really nice college boy doing yard work for me. He's really nice to talk to. Reminds me of my college days. I feel younger just having him around.\"\n\n\"Oh, good. It's such a big yard, I was wondering how you'd manage.\" Marla's mom glanced down at her daughter's ample, too-jiggly bosom. \"I hope you don't wear that when he's around. You'll be giving him ideas.\"\n\n\"I'm fifty, Mom. He's nineteen.\"\n\n\"Forty-nine, dear; don't sell yourself short. But really, dear, don't...be like that around him,\" she said, gesturing at Marla's chest again.\n\n\"Maybe I'd like him to notice me,\" Marla said. \"It's all part of my re-birth, don't you think?\"\n\nMarla's mother's eyes told her it was a line of conversation that wasn't going to be fruitful, so they discussed the new restaurant they were sitting in, the fanciest of the eating establishments at the small shopping mall in town. Marla had suggested it because she wanted to sneak back into the mall and shop for more sexy bras after her mother left.\n\n\u2014\n\n\"Can I help you find something?\" the cute salesgirl asked.\n\n\"Do you have anything...like this?\" Marla asked. She opened her shirt just enough to show the girl the stretchy pink fabric, and then she shimmied her shoulders the way she'd done for her mother.\n\n\"Oh, sure,\" the girl said. \"You want something that lets you move. I like that, too. I'm not as big as you, but yeah, it's fun.\" She walked to another rack and pulled three different styles out for Marla to see. \"The purple one's probably the lightest, stretchiest style. It'll give you the most movement. We have other colors. There's not much to it, but, I bet it'd look really sexy on you. Is that the look you're going for?\"\n\n\"Yes,\" Marla said. \"I'll try that one on, and, I wanted to look at your...I don't know what you call them. Sets, I guess; for the bedroom.\"\n\n\"Like bra, panty, garter belt kind of sets? Or babydoll and panties kind of things? Those are all along the back wall, by the dressing room. We ask that you keep your panties on when you try on the bottoms. Do you need me to help with bra sizes? I can measure you.\"\n\n\"No, I think I've got a pretty good idea, although the stress of my divorce slimmed me down.\"\n\n\"Let me guess. Thirtyyyyy...sixxxxx...D?\"\n\n\"Yeah, you're good! Sometimes double D is more comfortable.\"\n\n\"Yeah, you might want to go double D with that little stretch bra, or even triple, especially if you like lots of movement.\"\n\nMarla thanked the girl and made her way to the back of the store to look through the racks of sexy bedroom lingerie. Her ex-husband used to buy some for her, but his taste was different than hers, and it was a long time ago. All of it had gone in the trash can at the height of the dark days of the divorce.\n\nShe picked out a dark 'midnight blue' bra and panty set, made of the prettiest see-through lace she'd ever seen. The straps and waist band were soft deep blue velvet, and the lace extended below the bra's cup line, giving a little bit of a halter effect. She tried them on and they fit nicely and looked sexy, but the panties were way more 'cheeky' than any Marla had ever tried, basically a thong with a lace panel in the front and a velvet waistband. Trying them on over her panties didn't give her any idea of how they would look in real life. She wondered if the nice, knowledgeable salesgirl could help her decide. She cracked open the dressing room's door and peeked out. The store was still empty, so she opened the door and stepped out. It felt like a brave new world, with a different kind of air. Helium, maybe. Less gravity.\n\n\"Excuse me,\" she said, loud enough to be heard.\n\nThe girl hustled over. \"How'd you make out? Wow, that bra fits you really nice. I love that lace band on that one. That color works really nice on you.\"\n\nAs the girl was talking, Marla's mind was in two places. Half was listening, shopping, deciding, and the other half was taking in the atmosphere, the new sensation of standing in a public store in a see-through bedroom bra, her tall, five-foot-eleven-inch frame showing it off to anyone walking in the mall who happened to look in the window. That was when a young couple entered the store, handsome and beautiful, probably in their mid twenties.",
        "\"What do you think of the bottom?\" the salesgirl asked, looking at the way the thong fit over Marla's plain white panties. \"I know it's hard to tell like that.\"\n\n\"That's...what I wanted to ask you. I've never worn any kind of a thong before. Do you think it would...work for me? Be honest.\"\n\nMarla twisted so she could look at her behind at the same time the girl was looking at it.\n\n\"Personally, I'd go for it,\" the salesgirl said. \"If I look as good as you when I'm older I'd definitely wear something like that. But it's a personal thing. Maybe just buy the one, and if you like it you can get more in that style.\"\n\nThe young man and woman were getting closer. Marla was surprised that her instinct to duck back into the privacy of the dressing room was being overridden by a previously unknown desire to stay out in the open. She found herself wishing she didn't have her plain white panties mucking up the lines of her new outfit. Would the young man understand, when he finally got close enough to see all of her, or would he think she was a dweeb who didn't know how to dress herself? That was the question in Marla's head; not, as it would have been a few months ago, What am I doing out here on the open!?\n\n\"You've got such great legs,\" the salesgirl said. \"Have you ever tried a garter belt and stockings? You've got the perfect body for it.\"\n\nThe young man and woman were getting even closer, already close enough to hear the conversation, nearly close enough to see Marla from head to toe. She briefly wondered why the salesgirl didn't suggest privacy. Maybe it was normal? Maybe brave women often paraded around the store in see-though undies?\n\n\"No, I've never tried a garter belt. I was thinking I might try one.\"\n\nThe young man was close, just ten feet away, standing with his girlfriend while she looked through a rack of sexy bedroom wear. Marla was in full bloom \u2014 goosebumps covered every inch of her and her happy nipples were happy indeed, making their aroused form known under the see-through blue lace, nearly poking through it.\n\n\"If you'd like something that's a little different than the usual garter belt, I really like this,\" the salesgirl said. She lifted a black satin and lace chemise of the rack. \"It's got this laced-up back detail, like a corset, and it's got the garter straps attached right on the bottom of it. They're removable so you can wear it without the garter belt look if you want. It's low cut, so tons of cleavage, which would look hot on you. You're so tall, let me hold it up to the back of you...yeah, that's good. Your height must be all in your legs, because that falls just perfect, halfway down your butt. I wouldn't even wear panties with it. That'd be a super hot look and you'd be all ready for whatever. I've got the perfect thigh-high stockings up front to go with it. Sheer black. Wanna try it on?\"\n\n\"Sure,\" Marla said. Her goosebumps had faded a bit, but the powerful energy of showing herself off was still with her. It was a crazy thrill that seemed to give her clarity and confusion in equal measure. She stepped into her dressing room, took off the midnight-blue lace bra and thong and put on the chemise. She listened to the girlfriend asking the salesgirl questions, and wondered if the young man could hear the rustle of satin and lace slipping over her naked skin. When she opened the dressing room door and stepped out her nipples were aroused to the point of obscenity again, and her goosebumps were nearly big enough to cast shadows. There was no need for her to be out in the store again, she already knew the sexy chemise fit perfectly, but her hand turned the doorknob and opened it anyway, and she was out, the air feeling like helium again, her quick glance telling her the young man was looking.\n\n\"Does this...fit?\"\n\n\"Oh, wow,\" the salesgirl said. \"That really works with your top. I've got one of these, I really love how it frames the cleavage. Sometimes when they're cut that wide and low it looks like a bad stripper costume, but that one really works. Turn around, let me see the length.\"\n\nMarla turned, knowing she was being watched by the young man and his girl.\n\n\"Yup, perfect length,\" the salesgirl said. \"Without panties just enough of your cheek will show. I love how that lacy trim at the bottom is see-through. And that lace-up corset look on the back is super hot.\"\n\n\"Do you have that in my size?\" the girlfriend asked.\n\n\"Sure, it's right at the end of that rack there,\" the salesgirl said, pointing it out.\n\nMarla was tingling. The young man was still looking at her when she turned around to face him again. He had a slight smile on his face and happy-looking eyes with dark lust burbling under the surface of them. Marla only glanced at him, and then again. And then again. The tingles grew each time, the third glance nearly giving her an orgasm.\n\n\"Are you gonna want stockings with that?\" \n\nThe salesgirl's voice startled Marla, snapping her out of an ethereal, tingling near-meltdown.\n\n\"Yes, definitely. I...kind of love this one.\"\n\n\"You should. It's really good on you.\"\n\nWhen Marla stepped into the dressing room the privacy seemed odd. It felt like some sort of science fiction cubical, a portal to another dimension. She stripped down to just her panties again, wondering if the young man was thinking about her doing just that. She tried on the stretchy little bra and tested its jiggle with a shake of her shoulders. Walking out into the open like that, in regular underwear, seemed like it was over the line, so she judged the fit herself behind the closed door. It made no sense, when she thought about it; she'd just been out there in the sexiest garments she'd ever worn. She shook her head at herself in the mirror, wondering if she would gradually start to understand all her new feelings. She heard the door to the dressing room next to her open and close, and she could hear the girlfriend stripping off her clothes. Yes, she realized, the walls and the door are paper thin. The young man had heard the satin and lace dragging across my aroused nipples. He'd heard my naked skin.\n\n\u2014\n\nJesse had a free afternoon the next day. He happily boarded the bus for the short trip out to Marla's house, and Marla happily readied herself for him \u2014 a quick straightening up of the rooms he'd be in, a quick shower that seemed a little pointless because she'd be helping him work, and a few dabs of subtle perfume, behind her ears and high up on her inner thighs. She flossed the teeth of her beautiful smile, and she sloshed some mouth wash in her mouth and ate a piece of rich, melty chocolate. She wasn't sure if she and Jesse had reached the 'hello kiss' stage, but if they had she wanted to surprise him with his favorite flavor.\n\nIt turned out they had reached that stage, or Marla had, anyway. Her mind was frothed to a horny lather ever since showing off for the handsome young man at the lingerie store, so as soon as Jesse walked up her front steps she pulled him close, grabbed his crotch with a gentle squeeze, and kissed him, long and deep.\n\n\"How's my lover boy today,\" she purred.\n\n\"Good,\" Jesse said, smiling. \n\nHe loved the chocolaty kiss, but he wasn't yet the suave, debonair type who could quickly put it his feelings about it into words. It mattered not. The way he kissed, the way he smiled, the way his shining eyes looked \u2014 all of it made Marla burn, more than she expected. It was deep, lusty horniness that made her feel like a completely different person.\n\n\"Take off your shirt for me,\" she said as she knelt in front of him on the concrete landing outside her front door. Jesse let his shirt drop while Marla unfastened and pulled down his pants. All of him but his feet and ankles was naked, his cock hard, pointing at the bright sky. It seemed crazy to him, being there like that, with nothing between him and the cars whizzing past on the road. But then Marla's mouth engulfed his throbbing hardness and it didn't seem crazy at all. It seemed right. Within moments his whole body was moving, fucking her mouth, and then her hands took over on his wet cock, and she looked up at him, smiling. \"You like being seen, too, don't you,\" she said.\n\nBack in her mouth, he could only moan. More cars went by. Marla's smoothly stroking hands took over again.\n\n\"Have you shown yourself to Morgan? Has she seen this beautiful cock?\"\n\nJesse tried to speak but made do with a whimper and a nod.\n\nMarla smiled, still stroking, squeezing. \"She has? Were you hard?\"\n\n\"Yes.\"\n\n\"Was she with Derek?\"\n\n\"Yes.\"\n\n\"Tell me.\"\n\nMarla took him back in her mouth and looked up at him with big, curious eyes.\n\n\"I was...sometimes I...\"\n\nMarla let the cock slip from her lips for a few words. \"Do you play with yourself while they're fucking?\"\n\nBack in her mouth, Jesse moaned and nodded. He spoke with breathless words. \"He sorta knows, I think, but I guess he doesn't care. I try and hide it, but one night, he couldn't see me and she could. I could tell she wanted to see more, so I...I...showed her.\" Jesse's words were breathless and Marla moaned when she felt cum spurting in powerful pulses, flooding her tongue and her taste buds. His cream was every bit as good as chocolate.\n\nThree hours later, Jesse's bare chest and arms were scraped and tired again. Another section of the long hedge was pruned back and looking good. Jesse was raking up the last of the clippings.\n\n\"Are you staying for dinner?\" Marla asked.\n\n\"Yeah, sure.\"\n\n\"Good. This time we can take that shower we keep talking about. I don't think you've ever smelled me or...tasted me...when I'm clean.\"\n\nJesse smiled. He thought she tasted fantastic when he'd first arrived that day, all chocolaty, but he knew she meant her pussy, and he was eager to taste it when it was all freshened up, to see how it differed from sweaty.\n\nThe shower in the little country house is small, just a curtained off bathtub with white ceramic tile on three walls. Marla was glad the previous owners had installed an oversized water heater because once she got in there with Jesse she wanted to stay for a long time. Everything about it was exciting and amazing, even something as simple as Jesse nibbling on the tips of her tits when hot water was streaming down her back and over her shoulders. It was as uncomplicated as sex gets but it was pure bliss. Jesse thought so, too. He loved his too-tall lover, and he especially loved her tits. Even on the first day, the day that he met her, with her wildly excited nipples bumping out the front of her little shirt, he almost came in his pants a couple of times watching her womanly breasts move. There in the shower, with the hot water streaming down, warming them, he took them in his hands as he nibbled the nipples, and Marla moaned.\n\n\"You're spoiling me,\" she purred. \"What am I going to do when you find a girlfriend and leave me?\"\n\n\"I won't,\" he said.\n\nMarla closed her eyes and dreamed that it might be true; Jesse would always be there, tapping into her horny fever, lifting her to the rapture that she craved.\n\nAfter a thorough soaping, an every-square-inch cleaning of both of their bodies, Marla was standing, with her forearms against the strange coolness of the tile wall and her long legs wide apart to lower her dripping ass and pussy to Jesse's height. His always-hard cock was finding its way into her warm, wet pussy.\n\n\"The other day, down in the living room, that's the first time anybody's fucked me standing up,\" she said, already moaningly breathless, arching her back even more, making herself even more fuckable.\n\nJesse smiled. \"Really?\"\n\n\"Yup. Ohhh...fffuck you feel good! Is it good for you? Do you like it standing up?\"\n\nJesse's cock was going deep and it took a few moments for his beautifully happy mind to get some words out. \"Yes,\" he breathed. \"I love it.\"\n\nHe was thrusting, warm, wet and slippery into the pussy he loved, a pussy he knew would be his favorite until the day he died. His hands were on Marla's waist, and they slid down on her warm, water splattered skin, onto her hips and down further, his palms wrapping around her soft buttocks, his fingers spreading them so he could watch his cock disappearing inside her.\n\nMarla felt it, the fingers spreading her open, the youthful energy filling her, feeding her. \"Fffuckk, baby!... Oh yeah, fuck me!... Fuck me!\"\n\nJesse sat at the kitchen table, watching, as Marla made dinner. She was wearing some of her new lingerie, the midnight blue bra with the see-through lace cups and the velvet trim, and the matching lace and velvet thong. She was self-conscious about the thong, it being the first time she'd worn such a thing. Having Jesse watch her so intently added to her doubts.\n\n\"Is it all right?\" she asked, twisting to look at her own behind. \"My ass is a lot older than Morgan's. Maybe I shouldn't wear something like this.\"\n\n\"No, it's...awesome.\"\n\nMarla smiled. \"You're way too polite.\" She twisted and looked again. \"I guess it's not too bad. Maybe I'll get used to it.\"\n\nTwinkles jumped up onto Jesse's lap, purring. Jesse petted him and he settled down, curling up into what looked like a warm ball of soft fur.\n\n\"Don't let me forget to pay you before you leave,\" Marla said, sitting down with two plates of quickly saut\u00e9ed vegetables and chicken breast. \"You did good today. I wish you wouldn't get all scratched up, though. It'll be cooler later in the week; you can wear a shirt.\"\n\n\"You don't have to pay me.\"\n\n\"Oh, no, I'm paying you. Otherwise it'll seem like I'm paying you with sex. Not that I'm worth it or anything.\"\n\n\"You are,\" Jesse said. \n\n\"I guess if I pay you it's like paying you for sex. It's a no win situation, so lets just stick to business. You do yard work, I pay you for it.\" \n\n\"Okay.\"\n\nMarla ate a forkful of food and her eyes took in the details of Jesse's half-a-boy half-a-man face. \"So how much light is there in your dorm room when you and Morgan are showing off for each other?\"\n\nJesse smiled at his curious lover. \"It's different. I've seen her during the day a couple of times, and sometimes in the morning. At night sometimes it's just the light from the stereo.\"\n\n\"Stereo? I thought you modern kids were all phones and earbuds.\"\n\n\"No, we've got this cool old stereo. Derek's father got it for him. He's an electrical engineer. I guess it's like a hobby to fix up old stereo stuff.\"\n\n\"Oh, nice! Yeah, back when I was at school the rooms with the nice stereos usually had the parties. My roommate had big speakers and lots of Grateful Dead CDs. Records, too. Remember those?\"\n\n\"So you had parties?\"\n\n\"No,\" Marla said. \"I had two roommates; one of them was really old-fashioned, no fun at all, so we mostly partied down the hall with another guy with a good music collection. So...how bright is the light from your stereo? Can you see clearly at night?\"\n\nJesse smiled again. \"Yeah. It's enough to keep it from being dark. There's a big radio dial all across the front. It's all silver and the whole thing lights up. You know how your eyes sorta get used to things at night? It's easy to see everything.\n\n\"Did you have your hand on your cock? Were you wearing a shirt?\n\n\"No shirt. Yeah I was...\"\n\n\"Strokin' it?\" Marla said, smiling. \"I know you must think I'm a pervert, but it's just so sexy. When I was young, sex was all private. I never saw anything, and no one saw me.\"\n\nJesse understood, so he gave Marla what she wanted \u2014 more of the sexy details.\n\n\"I sleep in sweats sometimes, just the pants, usually. I had 'em pushed down, to, like, my knees, I guess. The blanket was up by my waist and my hands were under it, but when I saw Morgan watching me I pushed it down more, so she could see everything. She was doing sixty-nine on Derek...\"\n\nMarla's eyes opened wide. \"Wait! Wow, she was playing with his cock while she watched you? Was she sucking it?\"\n\n\"Yeah. Sucking. Licking and stuff. It was pretty hot.\"\n\n\"I'll bet! And you were jerking off?\"\n\n\"Not, like, fast or anything. I didn't want Derek to know. He was down under her, so he couldn't see.\"\n\n\"Wwwow!\" Marla said. \"That's like, the sexiest thing I've ever heard! Feel my heartbeat.\" She took Jesse's hand and pressed it to the center of her chest, between the mounds of her soft cleavage. \"Can you feel it?\"\n\nJesse nodded. He wondered which part of the story was the best for her. He was endlessly curious about how her horny mind worked.\n\n\"Now I want to sixty-nine you,\" she said. \"Does that sound good?\"\n\nJesse smiled. It was a dumb question; of course it sounded good, but he didn't want to tell her that. \"Yeah,\" he said.\n\nMarla smiled and even blushed a little, the pinkening hue showing up on her face and her chest. She loved talking so freely with Jesse, saying things that she never would have said in the past.\n\nAfter they ate, Jesse helped with the dishes and then he and Marla spent some time on Marla's bed. Sixty-nine was first, after she helped her young lover out of his clothes. She was still in her new midnight blue lace, on top of Jesse, with his hard cock in her mouth. He loved the new sensation of pulling the velvet gusset of her sexy blue thong out of the way to get at her pink pussy. She tasted of clean water and soap, her womanly juices pure and fresh. His mouth drove her wild, sucking and nibbling and licking in all the ways he'd learned she loved. She came twice and he came with intense, musclebound spasms, flooding her mouth with the warmth of his cum.\n\nMarla rolled off, onto her back, her chest heaving. Jesse's fingers played with her bellybutton. She lifted her head and looked at herself. \"Do you like the blue?\" she asked.\n\n\"I love it.\"\n\n\"I bought another one I'll show you next time. It's even more fun.\"\n\nJesse smiled. \"So what were the parties like, when you were at school?\" he asked.\n\n\"Oh,\" Marla said, lying flat on her back, looking at the ceiling. \"Should I admit we smoked pot? I guess so; you've probably seen it all. Lots of beer. I don't remember any hard liquor, but there probably was some. Tequila, I guess. Oh, I got drunk on Ouzo one time. It was always just good music, people sitting around, talking. How about you? What are your parties like?\"\n\n\"Lots of drinking games. Some of 'em get really drunk. I don't, but...\"\n\n\"What kind of games? Sexy ones?\"\n\n\"Yeah, sometimes. Strip stuff.\"\n\nMarla smiled. She propped herself up on her elbows, watching Jesse's scraped-up hand trace circles on her belly. \"Strip stuff? Is that common these days?\"\n\n\"Yeah, I guess.\"\n\n\"Wow. If that had happened back when I was up there...\" She paused and thought of all the cute guys that lived in her dorm building when she was there. \"...that would have been...interesting.\"\n\n\"Would you have?\" Jesse asked. \"Not all the girls do.\"\n\n\"That's the question of the hour, isn't it,\" Marla said, her mouth curling into a smile. \"Back then, probably not. Now? Probably.\"\n\n\"Really? What changed?\"\n\n\"My divorce. You. I don't know, I guess I kind of like myself all of the sudden. I seem to want to show myself off. Maybe it's because I'm getting older. I'm still holding together, so, it's now or never, right?\"\n\nJesse didn't answer. Getting old was a subject he had little understanding of, and he didn't think of Marla as old. Nothing she did or said reminded him of old people, and as for her appearance, every bit of it made him horny, and that had nothing to do with 'old.'\n\n\"So,\" Marla said, \"I already know you join in those games, because you told me you did it back home with, what was her name? Haley?\"\n\n\"Yeah. But that was the only time I ended up naked.\"\n\n\"Really?\"\n\n\"Yeah. Now, I'm...careful, I guess.\"\n\n\"So you just want to play so you can be there to see some tits?\"\n\nJesse smiled. \"Yeah. Lots of guys do.\"\n\n\"But it goes further, you said, right? What did you say that porn was? Dare Dorm?\"\n\n\"Yeah, Dare Dorm. College Rules is another one.\"",
        "\"What's it like? Those strip parties, but, more out of control?\"\n\n\"Yeah.\"\n\n\"So, you missed that Halloween party last year that got out of control, but, have you seen any sex at the parties you've been to in your dorm? When people play the strip games and get naked, does stuff happen?\"\n\n\"Yeah a few times. Mostly oral, but one girl let two guys fuck her.\"\n\nMarla's eyes widened. \"Really? Wow. And you were right there? How big of a party was it?\"\n\n\"I don't know, fifteen people maybe. Not very big. It was in her and her roommate's room.\"\n\n\"So she took on two guys in her own bed with a dozen people watching? Wow. What did her roommate do?\"\n\n\"Just gave a guy a blowjob. Another girl got on the bed with her and they did some girl stuff.\"\n\n\"Really? Wow. College is...different these days. I kind of wish I was young enough to be one of your party girls.\"\n\n\"You are! You're better!\" \n\n\"Better than what?\" Marla asked.\n\n\"Girls my age. A party with you would be epic. I wish my friends could meet you.\" \n\n\"Yeah? What would you let them do to me?\"\n\nJesse was surprised by the question, but he quickly saw the fun in it and smiled. \"Are you good at drinking games?\" he asked.\n\n\"No. I'd lose. I guess I'd be half drunk and completely naked in a room full of college boys.\"\n\nSaying the words nearly gave Marla an orgasm. Jesse's hand was resting on her belly, warm, moving just enough to feel the life in it. She wanted it higher, on her breasts, so she sat up and unfastened the midnight blue lace bra and she took it off. Goosebumps and aroused nipples seemed to be her thing lately, and she was sporting them again, much to Jesse's delight. His hand claimed a soft, weighty breast, but it wasn't enough for Marla. She reached for the back of his head and guided his mouth to her tender flesh.\n\n\"What do you think I'd do?\" she asked Jesse, swooning from his soft lips and his nipple nibbles. \"Would I suck their cocks? Would you watch me?\"\n\nJesse didn't answer. The thought of it was beyond his dreams. Did Marla really want that, he wondered? \n\nMarla's horniness was exploding again. Jesse's cock was hard and she desperately wanted him inside her. She rolled onto all-fours and dropped her shoulders to the blanket.\n\n\"Would you let your friends fuck me? Would they make me cum?\"\n\nJesse had the gusset of the midnight blue thong pulled aside again, and his cock sunk into Marla's pink pussy. He groaned loud, his cock as hard as a steel shaft, thrusting long, deep strokes. Marla came quicker than he thought she would, and he fucked her right through the peak and the valley of it, all the way back to a second smoldering orgasm, one that swept him to the edge and beyond, his cock throbbing pulses of cream deep inside her at the exact speed of his thrusts. He and Marla had reached perfection, their bodies completely in sync. Jesse wanted to stay there, inside her, forever.\n\nAn hour later, the two of them were lounging naked on Marla's bed with Twinkles, his happy, purring body stretched long. Marla's iPad was in her hands, propped on the soft skin of her belly. They were watching the porn clip of the wild Halloween party at Jesse's dorm.\n\n\"Wow, that girl's just out of control, isn't she. You know her?\"\n\n\"Yeah, I've seen her around. She's a math major.\"\n\nMarla smiled. \"Really? When I was younger all the math girls were buttoned up tight, with thick glasses. Wow, she's really into getting fucked, isn't she. But she's just...so normal looking, like somebody's daughter. Was she really drunk?\"\n\n\"You mean, like, for an excuse?\" Jesse said. \"No. Not much at all, from what I heard. She just wanted it.\"\n\n\"She could have picked a better costume,\" Marla said. \"Face paint doesn't do much to disguise her.\"\n\nThe shaky view from the phone camera swung around, and there, on the other bed, was the roommate, her face painted in a similar tiger motif, sucking on the cock of a surprised, slightly nervous looking boy. \n\n\"Wow. They're both really hard and they point up like you do. I guess guys your age are just like that, huh?\"\n\nJesse didn't know how to answer. All he had to go on was himself, and he knew both Morgan and Marla made him very hard indeed.\n\nMarla watched the blowjob intently, wondering if young college girls knew all the secrets. \"Do I do it okay?\" she asked. \"Am I as good as she is?\"\n\n\"Yeah!\" Jesse said, his enthusiasm making Marla smile. \"You're way better.\"\n\n\"I'm not sure I believe you, but thank you.\"\n\n\"Do I...do it okay?\" he asked. \"With my mouth, I mean?\"\n\n\"Oh my God yes,\" Marla said. \"The whole sixty-nine thing is just insane. You're totally good at it.\"\n\n\"It's my favorite,\" Jesse said, a little sheepishly. \"I don't know why. Well, yeah I do. It's just...so amazing having you...all like that, right there. That sounds stupid. I don't know how to say it.\"\n\nMarla smiled. \"It's my favorite, too. I love giving myself to you that way. And I don't know if you noticed, but you make me cum like crazy when we do that. Sometimes I'm worried that I'm gonna hurt your face.\"\n\n\"No, I love it.\"\n\n\"Yeah?\" Marla said, smirking. \"You got a thing for pussies rubbin' all over your face? You got a thing for makin' women happy? Makin' 'em cum?\"\n\nJesse smiled and blushed. His cock was rock-hard again, and Marla took it in her hand. She gave him a slow handjob while she watched the tiger-faced girl get on her hands and knees, letting the slim college boy with the Lone Ranger mask fuck her doggie style. The partiers behind the camera were whooping and hollering. Someone started a chant at the tempo of his thrusts \u2014 \"Fuck! Fuck! Fuck! Fuck! Fuck! Fuck! Fuck!...\"\n\n\u2014\n\nJesse was back at Marla's house three days later. The time apart made both of them long for their time together. It was Jesse's classes and studies that kept them apart, and they both knew it was for the best.\n\nThey decided to finish up the work on the hedges, and then roll around naked in bed after a nice hot shower. The weather had cooled off a bit \u2014 Jesse kept his t-shirt on and Marla wore an old flannel shirt. She'd spent some time in front of her bedroom mirror before Jesse arrived, trying a variety of looks. Twinkles was there, helping her decide. Braless t-shirt with open flannel over it. Closed flannel with no bra, unbuttoned halfway to her navel. Nubby sweater with a jiggle bra. She liked that one but it didn't say 'yard work', so she filed the idea away for another situation. She ended up wearing the old flannel shirt with a jiggle bra, unbuttoned just enough to be sexy but not ridiculous.\n\nJesse wondered if there'd be an outdoor blowjob again, but there wasn't. There may have been, if Mara had thought of it, but her mind was on other things.\n\n\"Boy, it's cooling off, huh?\" she said, returning after dumping a load of pruned branches.\n\n\"Yeah. I like this time of year,\" Jesse said, cutting branch after branch, letting them fall to the ground where Marla was gathering them.\n\n\"Do you? Even after the leaves fall?\"\n\n\"My mom's really into Halloween. I just got so I like it, I guess.\"\n\n\"Oh, yeah. Yeah, it's fun. I doubt if I'll get any trick-or-treaters out here, without any houses around. When I was married my husband and I always went to a party. A guy he works with, his wife throws a big one every year.\n\n\"Are you gonna go?\"\n\n\"No! Andy will probably be there. He'll be with...oh, shit, I don't really want to talk about this.\"\n\n\"Sorry,\" Jesse said.\n\n\"Don't be. So, do you dress up for Halloween?\"\n\n\"Yeah, we did last year, me and some friends. Just funny looking old man clothes from a thrift shop.\"\n\n\"Oh, that's fun! What do girls wear these days?\"\n\n\"Sexy stuff,\" Jesse said. \"I think they like gettin' a day when they can walk around in their underwear. Lots of fishnet stockings. Some sexy nurse costumes, stuff like that.\"\n\n\"So some just wear underwear? Like, lingerie, you mean?\"\n\n\"Yeah. High heels and bras and panties. They get off on it I think.\"\n\n\"And you guys don't mind, right?\"\n\nJesse nodded and smiled.\n\n\"Do you and your friends go out to the bars?\"\n\n\"Yeah, there's stuff going on everywhere that night.\"\n\n\"So there's girls in lingerie walking around at the bars?\"\n\n\"A little. Some of them just do that in the dorm.\"\n\n\"Ah, okay, I think I'm getting the picture.\"\n\nMarla dragged a load of clippings across the yard, dumped them and returned. Jesse was making good progress.\n\nWhen they were close to done for the day Marla went in the house, leaving Jesse to sweep up the driveway on his own. When he was finished, she greeted him at the front door wearing her new black satin and lace chemise, with the garter straps clipped to her new sheer black thigh-high stockings, the first she'd ever owned in that style. Jesse mumbled \"Oh my God!\" under his breath, and Marla's crooked smile lit up her face.\n\n\"You like this one? You know I bought 'em all for you, right?\"\n\nJesse nodded, speechless, watching with wide eyes as Marla turned to show off the corset-laced back and her sexy ass cheeks peeking out from under. Some of his favorite porn pictures and videos featured garter belts and stockings, but he hadn't told Marla.\n\n\"I shouldn't tell you this,\" she said, \"but...I let a guy see me when I tried this on in the store. He was with his girlfriend, almost as close to me as you are.\"\n\n\"No way!\" Jesse said, wide eyed. \"You did that?\"\n\n\"I did. And...I kind of loved it.\"\n\n\"You hadn't ever...done something like that, right?\"\n\n\"No, never. You're giving me confidence to try all kinds of new tricks.\"\n\n\"I am?\"\n\nMarla nodded, with a soft, grateful smile on her face. \"I feel like I'm just figuring myself out. It's weird, I know.\"\n\n\"No! It's not weird. It's perfect. You're perfect.\"\n\n\"Ha!\" Marla laughed. \"Far from it, Mister. But a tiny bit closer to it, thanks to you.\" She took Jesse's hand and led him to the couch. There was a clear view out the big front window of the front yard and the cars and trucks on the street beyond. \"Have you ever gone into a lingerie store? They make some guys nervous. My husband used to get weirded out by 'em.\"\n\n\"Yeah, I bought...something...last year.\"\n\n\"For your girlfriend? What did you get her?\"\n\n\"It was, like, a fishnet thing. Like, a...bodysuit, I think they called it.\"\n\n\"A fishnet bodysuit? Wow! You don't mess around! Did she like it?\"\n\n\"Yeah, but...she was sorta nervous about wearing it.\"\n\n\"Why, is she shy? Was it because you guys didn't have much privacy there?\"\n\n\"Yeah, I think maybe.\"\n\n\"You haven't told me what she looked like. You're a tit man, so I'm guessing I know that much about her.\"\n\nJesse blushed. \"Am I?\"\n\n\"You don't think so?\"\n\nJesse shrugged. \"She wasn't...big like that.\"\n\n\"Yeah, and you're not going out with her anymore, so I rest my case,\" Marla said, smiling. \"Describe her.\"\n\n\"Real small, I guess you'd say, compared to you.\"\n\n\"You know you're absolutely man enough to have a tall girlfriend, right? Don't let size limit your pool of applicants.\"\n\nJesse smiled. \"Applicants?\"\n\n\"You know what I mean. So she's petite and her tits aren't big. What else?\"\n\nJesse loved Marla's curiosity. \"Blue eyes, and...dimples. She smiles a lot. My friends all liked her.\"\n\n\"Really cute?\"\n\nJesse nodded.\n\n\"Nice ass? Did she show her body, the way she dressed?\"\n\n\"What do you mean?\"\n\n\"Oh, I don't know. I'm just curious about how women show themselves. I've never thought about it to much, until recently.\"\n\n\"Oh. Yeah, I guess she sorta does. You mean, like, tight pants?\"\n\n\"Yeah. And her tops. How small is small?\"\n\n\"Her...tits, you mean? I shouldn't have said small I guess. Smaller than you. Nice though.\"\n\n\"Do all girls wear bras these days?\"\n\n\"No. I mean, most do, I guess, but some don't.\"\n\n\"Some don't? Even in class? With male professors?\"\n\n\"Yeah,\" Jesse said. \"Is that not normal?\"\n\n\"I've never been a good judge of normal. So what did she look like in the fishnet? Good?\"\n\nJesse smiled. \"Super hot.\"\n\n\"Were the holes big enough to...fuck her right through it?\"\n\nJesse nodded, still smiling. \"It's got, like...an opening.\"\n\n\"Ohhhh. I get it. A crotchless fishnet bodysuit. You walked into a store, at age eighteen, and bought that. Who was the salesperson?\"\n\n\"She was, like, old.\"\n\n\"Ha!\" Marla laughed. \"How old?\"\n\n\"I don't know; fifty, maybe? She reminded me of the lady at my high school library.\"\n\nAll the air went out of Marla's lungs; she could barley breath, but a deep-pitched belly laugh made its way out of her. 'Fifty maybe' was her own age, give or take a few months, but there was no way she was telling Jesse that. \"I'll bet you made her day,\" she said, still chuckling nervously from the shock of what he'd said. \"A cute kid like you buying crotchless fishnet. I'm sure she loved it.\"\n\nMarla got her mind off of her age the best way she knew how: she opened Jesse's pants, took out his cock and mounted him, an easy thing to do because she'd followed the salesgirl's advice and didn't have any panties on under the sexy chemise. As she rose and fell on Jesse, fucking him with electrifying energy, her increasingly unhinged mind wished someone would come to the open front door; maybe even her mother.\n\n\"God you feel so fucking good!\" she huffed as she rose and fell. \"Never in my life have I enjoyed this as much as I do with you.\"\n\nJesse was already beyond the talking phase. He wanted to try something, so he held Marla under her thighs and slowed her and stopped her, leaving a little space between their bodies. He looked at his cock there, the connecting link, it's tip still inside her, and he started thrusting upward at a quick clip.\n\n\"Holy shit!\" Marla exclaimed, holding herself in position with her flexed thigh muscles. \"Jesus!...I've got my porn star!\"\n\nJesse's eyes showed his delight and his face was the picture of determination. His hips were wild with energy, fucking at a blurring speed, and Marla was quickly at the screaming stage, letting her ecstatic happiness out into the world. She was putty in Jesse's hands when he rolled her off of him; he pulled her ass upward and fucked her doggy style, and she had a warm and deeply thrilling orgasm that brought Twinkles to her side, purring.\n\n\"Ohhh, Twink,\" she said, breathless. \"Things are pretty good these days, huh?\"\n\nMarla surprised herself with the next thought that she said out loud, as she lay there cuddling in the afterglow...\n\n\"Would you like to go to the lingerie store with me?\" she asked. \"We could pretend we don't know each other.\"\n\n\"Do you want me to?\" Jesse asked. \"I'll do it if you want me to.\"\n\nIt was a weekday afternoon at the mall. Marla and Jesse arrived there together in Marla's car, but they went into the store separately, pretending they didn't know each other. The same nice salesgirl was working. Marla was already trying on a bra when Jessie walked in. She was standing outside the dressing room with the girl, discussing the fit of the minimal little breast supporter. Marla had worn a casual dress to the store, and without it she was well exposed: just her simple black panties \u2014 the skimpiest ones she owned \u2014 and the sexy little see-through bra, one that didn't even try to hide nipple bumps.\n\nThe salesgirl excused herself to wait on Jesse. She asked him a few questions and brought him to the rack of skimpy 'bedroom' bras right next to where Marla was standing.\n\n\"Do you know her size?\" the girl asked him.\n\n\"No. But she's...kind of like her,\" he said, glancing nervously at Marla.\n\n\"A big bust, do you mean?\" the girl asked him.\n\nJesse blushed and nodded. \"That one would probably fit her,\" he said, eyeing Marla more thoroughly.\n\n\"So, thirty six D, or maybe double D,\" the girl said. \"Do you like that one, or...something different?\"\n\nMarla was covered in goosebumps from head to toe. Jesse looked at her tits for what seemed like the longest time, but for Marla time was standing still. Another man, older, sixty maybe, walked into the store and the salesgirl excused herself to see if she could help him. Soon he was nearby, looking at the same racks of naughty lingerie, sneaking glimpses of Marla in her nearly naked state. Everything had happened quickly; it was as thrilling a situation as Marla had ever been in.\n\n\"I was...just helping him pick something for his girlfriend,\" Marla said to the man, her voice sounding a little nervous. She was surprised at herself for speaking up.\n\n\"Maybe you can help me,\" the man said quietly, his words a bit tentative. \"I was looking for something for my wife's birthday. I'd like something that she likes as much as I do. Does this...appeal to you?\"\n\nHe took a hanger of the rack and held up a wispy chemise, short and backless, made of a diaphanous fabric in the most beguiling soft wedgwood blue color.\n\n\"Oh, wow,\" Mara said. \"That's beautiful. Yes, I'll bet she'd like it. I could...try it on for you, so you can see what it looks like, if they have my size.\"\n\n\"Oh, I couldn't trouble you,\" the man said.\n\n\"It's no trouble. I actually kind of love it, so I'm going to be trying it on anyway so I can take one home.\" Marla caught the salesgirl's eye. \"Do you have that in my size?\"\n\nThe girl nodded, smirking. She knew Marla was enjoying herself, playing with the men. \"Here you go,\" she said, handing Marla the wispy little garment. \"How about you,\" she said to Jesse. \"Have you decided?\"\n\n\"I was thinking, maybe...I sort of like that blue one, too.\"\n\n\"Oh, okay. We have one more I think, in that size,\" the girl said, pawing through the rack. \"Oh, shoot. I think maybe she got the last one. Let me go check.\"\n\nThe girl headed to the front of the store to look it up on the computer, and Marla was in the dressing room, getting changed. It was a halfway see-through fabric and the red bra ruined the look of it, so Marla took it off. She left the little black panties on, but they looked appropriate and sexy under the see-through blue. She looked at herself in the dressing room's mirror and was astonished at the way her tits looked; they were draped like the designer himself had done it, loosely and oh-so sexily, with their full shape and form fully visible through the tissue-paper-thin semi-transparency. The full arousal of her nipples was on eye-popping display; she wondered if she should put the bra on after all, but instead she stepped out into the bright florescent light and let four male eyes see her as never before.\n\n\"Oh, my!\" the man said quietly. \"That really is...something, isn't it.\"\n\nMarla turned like a model to show off the backless back and the lower portion that draped her nice ass as sexily as the front draped her tits. \"It's really pretty,\" she said, twisting to look at herself.\n\n\"It certainly is,\" the man said. He looked enthralled; lost in a little dream.\n\n\"Oh, wow,\" the salesgirl said when she returned. \"That works like crazy on you.\"\n\nMarla giggled, suddenly feeling the full weight of all the attention.\n\n\"Sorry,\" the salesgirl said to Jesse, \"That's the last one in that size.\"\n\n\"Oh,\" Marla said. \"Now I feel bad. I'll tell you what, you can have this one, if you don't mind that I've been in it.\"\n\n\"No, I don't mind!\" Jesse said, much too enthusiastically. He wondered if anybody was looking at the hard lump in his pants.\n\nMarla giggled at him. \"I'll just slip out of it,\" she said, turning for the dressing room door, feeling a full rash of goosebumps again.\n\n\"Thank you, Miss,\" the man said.\n\nMarla stopped and looked over her shoulder, her backless back bare all the way to the top of her ass, her big breast halfway tumbled out the side of the loosely draped wedgwood blue. \"It's Marla,\" she said, suddenly feeling like a femme fatale in a spy movie. \"Glad to have helped.\"\n\nOut in the parking lot, Marla giggled with giddy excitement over what had happened. \"Do you often buy lingerie that's still warm from having a woman in it?\" she asked Jesse."
    ],
    "authorname": "riverboy",
    "tags": [
        "older woman",
        "nun",
        "college boy",
        "halloween",
        "exhibitionist",
        "dorm",
        "orgy",
        "yard work",
        "autumn",
        "black boy"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/autumns-chores-and-pleasures"
}