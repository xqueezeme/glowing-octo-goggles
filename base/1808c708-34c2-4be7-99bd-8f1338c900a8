{
    "title": "Ambiramus Ch. 06",
    "pages": [
        "A/N -- Thanks for all the comments and feedback for the previous chapters. Now, I'll be honest, this chapter could be a little divisive (the last third of the chapter. You'll see what I mean.) Comments and feedback appreciated, even if it's a little negative.\n\n*****\n\nI'd lost a little weight, though had put on muscle recently, but my leathers felt a little loose. Gloves and boots were fine, though. Cindy looked absolutely perfect in her leathers. Who knew that a woman could look so delectable in motorcycle leathers? She noticed my eyes and smiled at me. \"You're thinking,\" she said, smiling at me.\n\n\"Well, I do know you're practically naked underneath, for starters.\"\n\n\"I'm wearing some very sexy lingerie for my man as I know he's going to fuck me hard later.\"\n\n\"Am I going to feel an erection pressing into me while I'm riding?\"\n\nShe giggled. \"Probably.\"\n\n\"Okay then. Ready?\"\n\nHelping her with her helmet as she'd never worn one before, ensuring the strap was secure. Checking her leathers were okay, I put on my helmet before straddling my motorbike, helping Cindy up and ensuring she felt comfortable before starting it up. It didn't take long to ride to the motorway that would eventually take us south. Aware that coppers were everywhere, and speed cameras were rife, I kept to the speed limit until we hit the freeway heading south.\n\nHearing her squeal as I twisted the throttle, I heard Cindy whoop and holler behind me as I put the bike through its paces. And I was right. I felt her erection press into me as well. \"This is such a fucking turn on!\" she shouted.\n\nI hadn't told her where we were heading, so once we left the outskirts of Sydney Metro, on the freeway leading towards Wollongong, I did hear her shout, \"Where are we going?\"\n\n\"It's a surprise!\" I called back.\n\nFurther south past Port Kembla and then around Shellharbour and down past Kiama, I only turned off when reaching the signs indicating Seven Mile Beach. Once I'd parked up, I took off my helmet, helping Cindy off with hers. I took her hand and led us towards a picnic area I remembered was very rarely if ever used.\n\nEventually leaving the path entirely, I did lead us through a little overgrowth before arriving in what had once been a picnic area. The barbeque plates had long since fallen apart, but the three picnic tables were in surprisingly good condition. Assessing which one would be best, I led her to the table that looks sturdiest, capable of supporting her weight. Taking the backpack from her back, we'd packed a picnic blanket, lube, a few snacks and drinks, but the entire idea behind this trip was to fuck.\n\nGloves and boots were taken off first before I helped Cindy out of her leathers, my cock stiffening at the black lingerie she was wearing, her body glistening with sweat, as it was a warm day. After getting out of my leathers, leaving me in just a t-shirt, soaked with my seat, and underwear, I helped her up onto the picnic table and kissed her. \"Hello, gorgeous,\" I murmured.\n\n\"Are you going to suck my cock?\" she wondered.\n\n\"Eventually. I'm going to slowly make my way south. After you cum, I'm going to bend you over this table and fuck you senseless,\" I said, kissing down to her neck, earning a soft moan.\n\n\"So it's awkward sitting back on the bike?\"\n\n\"Well... I'll try and keep that in mind while I'm nailing you.\"\n\n\"Long as you leave a couple of loads inside me, Mark, I don't care.\" She sighed. \"God, I wish you could make me pregnant.\" That made me stop, leaning back to meet my eyes. Thankfully, she was smiling. \"I'm sure lots of girls like me think the same thing from time to time, Mark.\"\n\n\"Oh...\"\n\n\"Now, I think you said something about sucking my cock soon. And I want to cum in your mouth.\"\n\nTaking off her bra, I grabbed her breasts, giving them a gentle squeeze before giving her nipples plenty of attention. I loved her breasts. Loved looking at them. Loved touching them. Loving sucking on her nipples, as they got incredibly hard when she was turned on. Whoever did her enhancement knew what they were doing. Though fake, they looked natural enough. Cindy loved them, admitting it did help with her own self-confidence as she transitioned.\n\nLying her back on the table, I kissed down her body, her skin so soft to touch and kiss. I'd sometimes just strip her naked, kissing and touching her everywhere. She was sometimes incredibly sensitive, learning more about her body each time we were intimate. Reaching her panties, I gripped them with my teeth and dragged them off, much to her amusement, kissing back up her left leg, all the way from her toes to her thigh before I lifted her up and licked her rosebud.\n\n\"Mark,\" she murmured.\n\nJust a tease as I spread her legs and focused on her ball, gently sucking on each one as I gently stroked her cock. She moaned louder as I ran my tongue back up towards her shaft, her cock already leaking plenty of pre-cum. \"Turned on, sweetheart?\"\n\n\"You're incredible, Mark,\" she replied softly.\n\nTaking her cock in my mouth, I ever so slowly took more of her length, not enough to take her in my throat, slowly bobbing my head up and down. I could sense how turned on she was, reaching for the bottle of lube, placing some on my fingers and on her arsehole, and I carefully slid a couple of fingers inside her at the same time.\n\n\"Oh fuck,\" she cried.\n\n\"I love you, sweetheart. I want you to cum so hard in my mouth.\"\n\nCock back in my mouth, I knew I was teasing her, my tongue driving her crazy as I slowly bobbed up and down. She usually loved to watch me at work but her head was resting on the table, far too turned on to watch me this time. She'd cum in seconds otherwise. With my fingers now deep in her arse, and I could feel her prostate, I knew she was going to cum hard.\n\nFeeling her hips started to thrust, I took her entire length, bobbing up and down faster, her breathing growing rapid and I knew she was getting closer. My fingers were pumping into her faster at the same time. Now she looked up and met my eyes, lust, love and desire in a single glance. \"Oh Mark!\" she cried.\n\nYep, she was close.\n\nKnowing she was getting close to orgasm, I kept fucking her with my fingers, my lips now wrapped tightly around her cock, and used my free hand to massage her balls at the same time. It was far too much for my girlfriend to handle. \"Oh fuck... Going to cum!\"\n\nShe wasn't lying. Her cock throbbed and she exploded in my mouth. I continued to pump her with my fingers as spurt after spurt of her delicious cum flooded my mouth. I swallowed and swallowed when I could, her hips moving up, forcing her cock deeper as she came. \"Oh god,\" she whimpered.\n\nOnly when I felt she was empty did I finally remove my fingers from her arse, continuing to gently fondle her balls as I released her cock, licking it up and down before I rested forward on my hands to either side of her body. Her eyes were closed, a smile on her face, her chest rising and falling as she definitely needed a couple of minutes to recover. Gently lifting her up, I cuddled her to my chest, stroking her back as she just about had the energy to hug me back.\n\n\"Mark, can I ask a question?\"\n\n\"Shoot.\"\n\n\"Can you do that for all my friends?\"\n\n\"Only if you're there.\"\n\n\"God, they're going to love you even more if you do that to them.\" Feeling her legs wrap around me, I cuddled her tighter. \"Cass still talks about you from just that one night. Thinks you were a great fuck, but is actually eager for you to make love to her in return. I've talked you up a lot.\"\n\n\"No pressure then.\"\n\nGrabbing the lube, she reached down to lube up my cock, keeping her eyes on mine as I felt the smile form. She was definitely eager for me to fuck her. Slipping down off the table, she moved around so she could lean forward using the bench. I bent down and used my mouth for a couple of minutes, Cindy reaching back to run her fingers through my hair. \"Love it when you eat my arse,\" she moaned.\n\nKissing up her back, feeling her shudder as I knew how sensitive she could get, I pressed my cock against her as I kissed her neck, hearing the gasp as I dug my teeth in. Not enough to leave a mark, but she did like it when I bit certain places. Not her cock, though. Definitely not her cock. Or her balls. Definitely a no-no.\n\nPressing the head of my cock against her, I ever so slowly slid it inside, enjoying the gasp she made as it finally popped inside her. I stopped, aware she could easily take me sliding inside her in one movement, but I loved to build up the sense of anticipation. Sometimes, I loved hearing her beg for my cock. Moving my lips to her ear, I whispered, \"How much do you want it?\"\n\n\"Please,\" she whimpered.\n\n\"You want my cock buried in you?\"\n\n\"More than anything, Mark. Please... Please fuck me.\" I slid my cock forward until I was completely buried, earning a loud moan of approval. \"Oh god, yes, that's what I needed,\" she moaned.\n\nGrabbing her ponytail, I gave her arse a good slap. \"Tell me what you want,\" I demanded.\n\n\"Fuck me!\"\n\nI slapped her arse again, pulling on her ponytail. \"What was that, Cindy?\"\n\n\"God, please fuck me hard, Mark. I really need it.\"\n\nI gave her a single hard thrust, pulling back on her ponytail so she was half-upright, leaning forward to almost bite into her neck again. \"Do I own your arse, Cindy?\" She whimpered, unable to reply. \"I love you so much,\" I added softly.\n\n\"Please fuck me,\" she whimpered again, \"Please fuck me. I really need you to fuck me.\" She was almost sobbing by her third plea to fuck her. She was so turned on...\n\n\"How much do you love me?\" I whispered into her ear.\n\n\"Make me your wife,\" she replied as I started to slowly thrust into her, \"Make me your wife. I want to be your wife more than anything. I love you so much.\"\n\nMoving my hand up to her neck, I turned her face so she met mine. Caressing her cheek, her face lit up in a smile as I started to pump into her faster. I kissed her softly before letting her go so she could relax on the table, crossing her arms, resting her head on them as I grabbed her upper body and just started to nail her.\n\nIt was just what she wanted and exactly what I needed. The sound of skin slapping together certainly echoed around. I grunted and groaned. She moaned constantly. I was surprised at how long I'd survived as I was now beyond horny. Her arse was perfect. I'd never tire fucking her. Running my hands down her back to her shoulders, I was polite enough to ask, \"Are you ready?\"\n\n\"Please,\" she whispered.\n\nFor five minutes, I fucked Cindy as hard as I could remember. While it was loving, to anyone who didn't know, it would have looked at least a little brutal. She was positioned in a rather submissive manner, something I knew she loved. I tightened my grip on her shoulders as I could feel my orgasm building. I let her know, being polite, though she knew I was going to cum in her regardless.\n\n\"Cindy,\" I murmured.\n\nShe wasn't capable of saying anything considering how hard I was nailing her. I lasted another couple of minutes at most before I felt the eruption deep inside her. She actually giggled, insisted she felt every throb and spurt of my cock as I emptied myself. It was the sort of orgasm that left me feeling rather light-headed, needing to lean forward, relaxing above her.\n\n\"Holy shit,\" I muttered, \"Holy shit, Cindy.\"\n\nGiving myself a couple of minutes, I pulled out and, for once, had a good look at the gape I'd given her. It wasn't something I normally worried about, but I honestly couldn't remember fucking her harder. I was rather impressed by what I could see. Cindy giggled when I told her, handing me her phone. \"Take a photo,\" she asked. Doing as requested, she had a look and smiled at me. \"That's one well fucked arse, Mark.\"\n\nGrabbing the blanket, I unfolded and placed it down so we could relax together, lying on my back as Cindy joined me, cuddling into my side. I was still gathering my breath, glancing to see Cindy gazing at me with half-lidded eyes. I suggested falling asleep was a bad idea as it was a warm, sunny day, and neither of us wanted to be sunburned.\n\nBoth of us needed more recovery time than usual, but after lying together for half an hour or so, Cindy leaned down, taking my cock in her mouth long enough to get me rock hard before she straddled my lap, lowering herself down on my cock. She rode me ever so slowly that second time, neither of us worried about an orgasm, Cindy leaning forward so she could spend most of the time making out with me.\n\nShe was definitely feeling tender as she rode me nowhere near as hard and fast like normal. I watched her face, ready to stop her if it looked like she was sore, but she still looked happy with my cock being buried inside her. After quite a while, she sat back and started to stroke her cock, eager to enjoy another orgasm. Lifting my knees so she could relax back against them, I watched with interest as she started to pump her cock.\n\n\"Fuck yes,\" she moaned, \"Love stroking my girlcock with yours is buried inside me, Mark.\"\n\n\"Why don't you lie back on me and I do it for you?\"\n\nHer eyes lit up as she turned around, reverse cowgirl style, lying back against my chest as I reached down and started to stroke her cock. She slowly bounced up and down on my cock again. No more than five minutes later, she erupted all over herself. Now that she'd cum again, I wrapped my arms around her and started to pound her again. To our amusement, I pulled out just in time to add my cum to her body at the same time.\n\n\"I know a path to the beach to wash ourselves off,\" I said. Grabbing all our things, I found the narrow path that led to the beach. Checking the coast was clear, we dumped our stuff on the sand and ran naked into the surf. It was the first time we'd been to the beach together, and my god, did Cindy captivate me as she lifted her head out of the water. She giggled as the fact I stared at her for a few seconds.\n\n\"Fantasy coming true, Mark?\"\n\n\"One of them!\"\n\nWe had nothing to dry ourselves off with except the blanket, Cindy wrapping that around herself as I put on the lower half of my leathers, wrapping the arms around my waist, making our way back to the motorbike. I'd parked in a private area so we could dry off entirely before getting into our leathers, ensuring Cindy was wrapped up carefully again. She smiled, seeing how much I cared. After putting on her gloves and boots, I helped with her helmet again before I quickly got into my gear.\n\nI rode the motorbike back to her place, as I rarely went back to my apartment. I certainly didn't sleep there any longer. Her garage wasn't full of crap, unlike mine, so it was easy to park the bike there.\n\n\"We'll clear some space for your tools,\" she said, \"I know you like to tinker with your car and other things, being a man and all.\"\n\n\"If you ever need something done in the apartment...\"\n\n\"Oh, I know how good you are with your hands, Mark.\" I gave her a look, earning one of those adorable giggles. \"If I think of anything, I'll let you know. If you want to do anything...\"\n\n\"Your apartment is great how it is.\"\n\nShe smiled again. \"I'm glad you like it. What's the best thing?\"\n\n\"The fact you're there.\"\n\n\"Right answer. Are you hungry? I'm starving.\"\n\n\"Yeah, stomach has been growling for a little while now.\"\n\nNo surprise that, after we ate and watched a movie, we fell asleep together on the couch. We'd worn each other out. Waking up together in bed the next morning, I guess having woken up enough to stagger to the bedroom, Cindy kissed my cheek as she snuggled into me. \"I'm feeling very tender this morning,\" she murmured, \"A big cock was busy slamming my tight little arse for quite a while yesterday.\"\n\n\"Did you enjoy it though?\"\n\n\"I loved every second. My man takes care of me.\"\n\n\"You like calling me that, don't you?\"\n\n\"You're 'my man' now, otherwise known as 'my boyfriend'. One day, you'll be upgraded to 'my fianc\u00e9'. And the last upgrade will be to 'my husband'. But you'll always be 'my man'.\" Kissing my cheek again, she whispered, \"And I love taking care of my man as much as he does me.\"\n\n\"Well, you're my girl.\"\n\nTurning onto my side, she spooned back against me, ensuring my arms were wrapped tightly around her as always. As it was Sunday morning, there was no rush to get up. She could feel my erection pressing into her. She guided my hand to feel her erection too, before taking it back to just rest against her breast. \"I'm tired,\" she admitted.\n\n\"We have all day, tomorrow... rest of our lives,\" I said.\n\n\"Have we gone a day without having sex if we've seen each other?\"\n\n\"Hmmm. Apart from that first day we met, no. Something sexual has always happened.\"\n\n\"Want to try and last a day?\"\n\n\"To be honest, not really, but if you're willing...\"\n\nShe remained silent before giggling. \"I wouldn't last until midday. I'm still a little tender though, Mark. You really fucked me hard. I loved it.\"\n\nSnuggling until we needed to go to the bathroom, Cindy prepared breakfast, helping her out as always, though she spent half the time insisting she was more than capable of doing everything herself. When I said I simply wanted to be close to her, she hugged me tightly, appreciating the sentiment.\n\nAfter breakfast, we headed back to bed as neither of us felt like doing a damn thing. The apartment was clean. Things like laundry was already done. Stripping off again, Cindy cuddled into me, stroking her back with my fingers, eventually running my hand down her body to her thigh, lifting it up so it rested over my legs, fingers running back towards her butt.\n\n\"You're planning something,\" she whispered.\n\n\"I'm innocent of all crimes,\" I retorted softly, \"Except for the crime of wanting to do very naughty things with my girlfriend at all times possible.\"\n\n\"Like what?\" she breathed.\n\n\"My imagination is alive with the possibilities, Cindy.\"\n\n\"I'm thinking something. Next weekend Natalie is here, so that means behaving, at least a little bit. I'm thinking of another girls' night the weekend after. Would you mind?\"\n\nI met her eyes and did wonder. \"Do you have plans for this girls' night?\"\n\n\"I do. You've obviously been with Cass. They all know and... well, I know they're all eager to have fun too.\"\n\n\"All of them? The same night?\"\n\n\"I don't know yet. We haven't really planned it. But would you be interested?\"\n\n\"As I said, Cindy, if you're there, I don't mind at all. Your friends having no luck?\"\n\n\"I mean, we've all met guys before but, as I've said, nothing lasts. Either we tell them the truth and they freak, making us feel awful, or we end up being fucked and then dumped as they got what they wanted from us, and honestly, that's even worse. As I said, we just feel cheap and used, nothing more than a human fleshlight, or a tick on a personal bucket list. 'I just fucked a transwoman. Tick. Next'. Feels horrible.\" I cuddled her tighter as I knew she'd had that happen more than once. \"When I'm with you, Mark, we make love. You've made me feel special every day since that night we met. Honestly, my friends are insanely jealous of what we have. Jealous in a good way, they'd never do anything to ruin what we have. But it's also why we made that agreement to share, because finding someone like you is difficult.\"\n\n\"Sounds like we need a cloning machine.\"\n\n\"Imagine the orgy!\"\n\nStroking her back again, I finally said, \"Okay, I think it'll be fun. Will Cass be around?\"\n\n\"If it's Friday night, she might be able to join us. She usually works Saturday nights.\"\n\n\"But only those I met previously otherwise?\"\n\n\"Probably.\"\n\n\"Okay, at least I'll know who is coming around.\"\n\n\"Would you like to have fun with them, Mark?\" she asked, making sure she looked into my eyes.\n\n\"I would, but only if you're one hundred percent sure. I've never been in a relationship where I've been shared, so to speak.\"",
        "She smiled. \"Good. I think you'll enjoy yourself.\"\n\nWe only got out of bed early afternoon to have lunch, deciding at the last minute to dress and get out of the apartment. I ordered us a taxi so we could enjoy a drink or two as well, ending up enjoying the entire afternoon at a nearly RSL. Food was good quality and the drinks are always cheap. By the time we returned to the apartment early evening, I think we were both feeling rather horny.\n\n\"Do you want dinner?\" she asked.\n\n\"No, I think I'll remain fairly full.\"\n\n\"How about a snack or dessert?\" she asked, recognising the twinkle in her eye.\n\n\"Hmm. How about dessert first and a snack later?\"\n\nI enjoyed the raise of her eyebrow. \"You have plans of me, Mister Pritchard?\"\n\n\"Some involve your cock in my mouth. Others involve my cock in your arse.\"\n\nNo idea what time we actually got to sleep that night. We'd spent at least an hour sucking each other off simultaneously. For the first time, we kept cum in each other's mouths then kissed, swapping the cum of ourselves with each other. It was one of the kinkiest things we'd done to that moment, or at least that was the word that came to my mind.\n\nCindy was feeling rather amorous that evening and wondered if I'd be interested in being fucked. She didn't need to ask, to be honest. While we did prefer me fucking her, we both enjoyed me being on the receiving end from time to time too. Unlike the last time we'd done it, though, I ended up on my back, Cindy almost lying on my chest as she gently thrust her cock into me.\n\nShe smiled when I wrapped my legs around her, feeling the angle change, making me moan softly as it pressed perfectly inside me. Leaning up to kiss me, I smiled as her fingers caressed my cheek, running through my hair. Slowly picking up the tempo, I whispered for her to last as long as possible, enjoying the feeling of her girlcock deep inside me.\n\n\"You're going to love it in two weeks then,\" she murmured.\n\n\"I'm a very lucky man, sweetheart.\"\n\n\"I'm the luckiest girl in the world.\"\n\nShe did eventually finish inside me, soft moans with each spurt of cum. As soon as she realised I hadn't cum yet, she pulled out and started to blow me, sliding two fingers up my arse to massage my prostate, exploding in her mouth within a couple of minutes. The sort of mind-blowing orgasm that leaves me semi-comatose, with it just enough energy to cuddle her.\n\n\"You're in a better mood than ever,\" Mike said as I walked into work on Monday. I did have a spring in my step, I guess, whistling a tune, actually looking forward to the week. I'd been working as a mechanic for over fifteen years. I loved my job, but I did have the occasional regret moving away from the shop floor on a permanent basis. I did wander out occasionally to get my hands dirty, but I sometimes didn't have time with the myriad of issues I seemed to deal with.\n\nAfter making a coffee for myself and Mike, he followed me into my office, taking a seat opposite me. \"Life is just plain better, mate. Cindy and I are great. My relationship with my ex-wife is now good. My daughter is in a good place. Greg is talking with his parents a lot more now. Took a long time to get here, but at least we did get here eventually.\"\n\n\"How did the family introductions go?\"\n\n\"Her family adore me. Obviously received a bit of an interrogation as to my intentions, but I'm the first boyfriend they've ever met, so I could understand them being overly protective. But it was also the best time to learn more about Cindy growing up, how she got to where she is now. Learned a couple of things that were a little surprising. As for my family, they now know she's trans and don't give a shit. We're in love, we're happy, I'm a man, she's a woman, and that's what matters.\"\n\n\"What did you learn?\" he asked. I could understand the curiosity.\n\n\"I'll let her tell you if she's confident about sharing.\"\n\n\"Take the motorbike out on Saturday?\"\n\n\"She loved it. Definitely wants to do it more often. Sex was phenomenal when we got there.\"\n\n\"You have Natalie this weekend, right?\" Nodding, he asked, \"What about the weekend after?\"\n\n\"Cindy has invited a few friends around for Friday night. Not sure about Saturday yet. You thinking about something?\"\n\n\"Not for that weekend, but tempted to have another barbecue before the weather starts turning cooler.\"\n\n\"Just let me know when. Even if I have Natalie, I'm comfortable enough to bring her, at least before it no doubt gets raunchy.\"\n\n\"Ah, the next one probably won't be like that. It'll be sedate.\" He definitely noticed my raised eyebrows. \"Chris and I have talked, not about being together, but being completely honest? We're lonely, so we're going to look into actually dating someone we genuinely care about.\"\n\n\"Good for you. Both of you.\"\n\n\"That means no young men unless we know them and they arrive with a partner of their own. If Natalie does come along, I'll warn everyone to behave. Hell, she'll probably end up being the most popular person there anyway. Am I still 'Uncle Mike'?\"\n\n\"You'll always be Uncle Mike, mate. Natalie adores you.\"\n\nWednesday brought the first real surprise I could remember in a while. I was busy dealing with a customer complaint when my phone buzzed. I ignored it as I listened to the customer drone on and on. Took far too long to deal with, gave them a partial refund as I didn't think my employee did anything wrong, but the company hated legal action.\n\nPicking up my phone once I had a moment, the message from Cindy had me raising eyebrows.\n\n'Megan has invited me around for a drinks after work. Do you mind if I go? xxx'\n\nI didn't give it much thought. 'No. Of course not. I'm glad you're getting on well with my ex-wife. Better than me!!!'\n\n'Sure it's okay?'\n\n'Sweetheart, she's putting in an effort to be friendly with you. It's absolutely fine. In fact, I'll shoot her a little text too.'\n\n'You're a diamond, Mark. I love you. xxx'\n\n'I love you too.'\n\nI assumed Megan would be aware enough hat Cindy would let me know what was going on, though I was still surprised by the turn of events. I didn't know many divorced couples, but I thought the idea of my ex-wife wanting to share a drink with my current girlfriend a little strange.\n\n'Thanks for making the effort with Cindy. I appreciate it, Megan.'\n\n'You don't mind?'\n\n'Of course not. If you end up friends, admittedly, it's weird. But I'm okay with it if you two are.'\n\n'She's lovely, Mark. I'd like to know her better. And... there's self-interest in it too...'\n\nI knew what she meant by that. 'It's okay, Megan. Don't worry about it.'\n\n'Thank you, Mark. I'll see you on Friday. xx'\n\nReturning home to an empty apartment that evening was a little unusual, but after cooking dinner for myself, leaving some for Cindy if she didn't eat, I sat down with a beer and watched a little television. Cindy walked in the door at around 9pm. Placing her handbag on the counter, she skipped over to where I was sitting on the lounge. She'd driven, and I knew she'd never drive drunk, so I took her mood as just being happy to see me.\n\nRather happy, as I felt her erection pressing into me within seconds as I ended up with her on top of me, her lips very eager to be pressed against mine. \"So I take it the conversation went well?\"\n\n\"She's really nice, Mark, and I think she wants to be friends with me. And by doing that, she keeps you in her life.\"\n\n\"You don't think that's weird?\"\n\n\"No. She's already confessed how she feels, and I understand how difficult it must be for her.\" She kissed me again before asking, \"Are you sure all this is okay?\"\n\n\"I'll admit, it's a little weird, but there are no secrets here, so we just deal with it as best we can. Did you enjoy tonight?\"\n\n\"We talked about so much. Honestly, I certainly see now why you married her originally. She's smart, a sharp wit, a great laugh... And there's no missing she is attractive.\"\n\nWrapping my arms around her, I gave her a gentle squeeze. \"I'm glad you like her. Going to do it again?\"\n\n\"Maybe. We both admit it's a little awkward, but once we'd had a drink and got over that, we talked like we were old friends. Natalie was a little confused why I was there alone but was happy to see me. The relief is that your wife isn't jealous of the fact she really likes me too. Greg is a little different. He accepts me for who I am but he's at that age where it's... well, it's weird.\"\n\n\"Or he thinks you're really fucking hot and that's confusing the hell out of him.\"\n\n\"Next time, you're invited too. Megan just wanted a little one on one time.\" I raised an eyebrow at that turn of phrase. \"I'm not a lesbian, Mark,\" she stated, gently slapping my shoulder.\n\n\"I know. Won't lie that the idea is a slight turn on though. My current girlfriend nailing my ex-wife... Yeah, the cheating aspect pisses me off, but the actual thought of you fucking her...\"\n\nShe burst into giggles. \"You actually like the idea?\"\n\n\"Two hot women getting it on? You know I've watched porn. Lesbian porn? It's exciting. But I've certainly dabbled with trans porn over the years. Watching two transwomen getting it on? Holy fuck, is it ever so hot?!\"\n\nLeaning down to my ear, she nibbled at my earlobe. \"Maybe you should think about both of us fucking her?\" she breathed, her hot breath making me shudder. \"I'll bury my cock in her pussy, you can take her arse.\"\n\n\"You're a tease,\" I murmured.\n\n\"Then we both cum on her face. I reckon she'd do anything for one last time with you, Mark.\"\n\n\"You think?\"\n\n\"God yes. She'd get on her knees and suck your cock like never before.\"\n\n\"You talked about this, didn't you?\"\n\n\"She did drink more than me. I asked a few questions about your sex life. She had the normal regrets of a woman who knows she left her husband dissatisfied, then wonders why the romance wilted. So many people seem to forget how important sex is in a relationship.\" She leaned back, meeting my eyes. \"Rest assured, I'll be sucking your cock when you're fifty years older, eager to take a load as I am now.\"\n\n\"Long as I get to keep making love to you in return.\"\n\n\"If you don't fuck me at least the day before I die, I'll be very disappointed, Mark. Even if I'm in a hospital bed, tubes attached to me and everything, I will demand lube, your dick, and an hour of privacy. Then they can say you fucked me to death!\" I chuckled loudly at the thought, making her giggle at the same time. Kissing her forehead, she whispered, \"I never want this feeling to fade.\"\n\nDefinitely made love that night. No foreplay. Cindy just wanted my cock inside her for as long as possible. How could I not love the woman? I did eventually cum in her twice before we needed a shower, as she'd cum all over herself twice, which I had helped clean up, before we went to bed.\n\nIt was Friday afternoon, deciding what I'd do with Natalie and Cindy over the weekend, when Cindy called me, asking me to just go straight to Megan's place after work. While I was intending to do that anyway, she added that we would have dinner there with the family. That sounded like a good idea. Cindy and Megan were getting along well, while Megan and I were texting quite a bit too. I'll admit, I still found it slightly weird, but if we could end up friends again, I wasn't going to complain.\n\nArriving at my old house just after 6pm, I figured I should stop looking at it like that. My home was now with Cindy, but it was sometimes hard to let go of some of the bitterness. Megan and I had spent a couple of weeks house hunting before picking what was our 'dream' home. Knocking on the front door, it opened after a few seconds and my jaw dropped.\n\nMegan stood before me in a little black dress. Her hair done up. Faint make up. Black stockings and heels. I hadn't seen her dressed like that in years. She noticed my reaction and smiled. \"Hot date tonight?\" I wondered.\n\n\"Something like that,\" she replied, \"Come in, Mark.\"\n\nI was dressed in a shirt and trousers and felt a little underdressed compared to her. Taking my hand, she led me to the kitchen, pouring herself a glass of wine, handing me a bottle of beer. I couldn't help look at her. Megan had coloured her hair a dirty blonde, as she used to be brunette, but still had those blue eyes that captivated me. The top of her dress showered off generous cleavage, the hem covering the top of her thigh highs.\n\nWe made conversation until there was knock at the door. Cindy walked into the kitchen behind Megan, and I was left stunned again as she was wearing pretty much the same as Megan, though Cindy was wearing red. I glanced between them. \"Girls, what's going on?\"\n\n\"We're having dinner with our children first, Mark,\" Megan replied.\n\n\"Then we'll tell you afterwards,\" Cindy added.\n\nI looked between them again and took a deep breath. \"Is this a threesome?\"\n\nMegan blushed. Cindy kissed my cheek. \"Yes,\" she replied, \"Mark, do you still find your ex... no, I won't say that. Mark, do you still find Megan attractive?\"\n\nI closed my eyes, lowering my head. \"I never stopped finding her physically attractive,\" I muttered.\n\nI heard a choked sob, glancing to see Megan wiping her cheeks. \"Is there a part of you that still loves her?\" Cindy whispered.\n\n\"She's the mother of my children, Cindy. We'll always have that connection. I don't love her like I used to, I just can't, not after what happened...\"\n\n\"Tonight, could you make love with her and me together?\"\n\nI met Cindy's eyes, expressing her love for me as always, before I looked at Megan, almost pleading with me to say yes. \"I want to say yes, but... Megan, you still have...\"\n\nCindy kissed my cheek. \"We know it's awkward, Mark. This is what we talked about on Wednesday. I've never been with a woman. Neither has your wife. We both love you.\"\n\nI sighed again. \"This is just going to get weird...\"\n\n\"Mark, you're with me now. If you want to say no...\"\n\n\"I can't,\" I muttered, \"Because a part of me still wants her physically. Hate myself for it. I shouldn't, because I'm with you now. But we'll always have that history...\"\n\n\"Then we'll have dinner, spend time with our children...\" I smiled when she said our children. So did Megan, who stepped closer, wrapped an arm around Cindy's waist, noticing that Cindy was two to three inches taller, \"Then we'll enjoy a drink or two... then Megan is going to get on her knees and suck your fat cock. At least, that's what she's going to do first.\"\n\n\"You're seriously okay with this?\" I asked Cindy.\n\n\"Truth be told, you won't be the only one fucking Megan tonight.\" I was almost bowled over by that revelation. \"We've found we like each other, Mark, mostly because of you. She thinks I'm wonderful and I've made you happy again. I've learned enough to understand why you wished to spend your life with her when you swapped your vows when getting married. Added to that, neither of us has been with a woman...\"\n\n\"And I want you both to fuck me together,\" Megan added, an edge to her voice that suggested she was rather turned on by the idea.\n\n\"Why weren't you like this when we were married?\" I asked, probably too bluntly. When she started to tear up, I felt like a bastard, aware enough to step forward and hug her. \"Harsh, I know, but I think it's a question that needs answering. If we'd kept it interesting in private, maybe... I don't know...\"\n\nMegan laughed, but there was a bitter edge. \"Trust me, Cindy called me a fool more than once during our chat on Wednesday night.\"\n\nGiving time for Megan to regain her composure, Cindy and I checked on Natalie, my daughter hugging both of us tightly, excited as always to see us, before we stepped in to see my son. He took one look at Cindy and I think fell in love. I didn't blame the poor lad as he could barely answer a simple question. Cindy sat next to him on his bed.\n\n\"Want me to find you a pretty young transgirl, Greg?\" she asked seriously.\n\n\"Oh... er... I thought they'd be older than me...\"\n\n\"Oh no, many girls transition at a young age nowadays. If you were to be introduced to one, treat her like a girl, you'll definitely have yourself a girlfriend.\"\n\n\"I... I don't know...\" She gulped. \"Would she be as pretty as you?\"\n\nI smiled. I'm glad my son approved. \"Even prettier,\" Cindy said softly, \"Just something to think about, Greg.\"\n\nHe smiled before looking at me. \"Dad, are you and Mum... happy again?\"\n\n\"We are, Greg. Things are good between us now.\"\n\n\"I thought so. Mum seems happier.\"\n\n\"I'm glad. She's beaten herself up long enough. She deserves to be happy too.\"\n\nThat earned a hug and kiss from Cindy. Letting Greg know we were staying for dinner, Cindy wandered into Natalie's room again as I headed to the kitchen, Megan putting the finishing touches to dinner. She noticed me watching. \"Are you sure, Mark?\"\n\n\"Megan, when we actually made love, it was always fantastic.\"\n\nShe stopped what she was doing and hung her head. Before Cindy, the conversation would have never happened. Now I walked towards her, turned her around and held her in my arms. Nothing more than that except stroking the back of her head, feeling her hug me in return. \"I made so many mistakes, Mark,\" she whispered.\n\n\"So did I. I wasn't without fault.\"\n\n\"No. You were never abusive. Never negligent. Never... anything. I did a horrible thing.\"\n\n\"And I forgive you for it, Megan.\" I lifted her chin so she could meet my eyes. \"I'd like to be friends again. And I know Cindy wants to be your friend too.\"\n\n\"I'm glad you met her, Mark. If it wasn't for her, we wouldn't be here now.\"\n\n\"I'm a miracle worker,\" Cindy exclaimed, walking towards us. What I didn't expect was for her to kiss Megan in front of me. Not that I was bothered, considering what we'd agreed, but Megan certainly blushed. \"And I'm looking forward to fucking you later,\" she almost growled, \"And the idea of seeing Mark fuck you later is already making me hard.\"\n\nMegan made an obvious glance down. \"Can I....?\"\n\nCindy lifted the hem of her dress, Megan reaching down and no doubt feeling her hard cock. Cindy gasped as Megan glanced at me. \"So when you fuck her...\"\n\n\"Oh, I cum so hard, Megan. My favourite is riding him. I cover his chest in my cum all the time.\"\n\nMegan kissed her back again. I was surprised at how much it turned me on. Then Megan turned towards me. Glancing at Cindy, she smiled, before I turned towards Megan. Running my fingers along her cheek, I gently grabbed the back of her head and pulled her closer. I honestly couldn't remember the last time I kissed her. Within ten seconds, she was sobbing against me again. Cindy cuddled both of us. \"I think this might be emotional at times,\" she only half-joked.\n\nDinner was fantastic. Megan clearly pulled out all the stops that evening. Natalie and Greg were happy that the three of us sat down for dinner with them. Cindy, Megan and I were clearly getting along. The one sound was laughter. I hadn't seen Megan this happy in years. I sometimes put what happened down to what is called the 'seven-year itch'.\n\nThe three of us put Natalie to bed. \"Are we going to Cindy's place, Daddy?\"\n\n\"Tomorrow morning, munchkin,\" I replied.\n\n\"Okay. I love you.\" She repeated that to Cindy and Megan.\n\nUpon closing the door, we walked to Greg's room. He was a smart kid and asked, \"Are you staying here tonight, Dad?\"\n\n\"We are, so we can enjoy breakfast again tomorrow. Cricket is this week. I've taken the Wednesday off, and you won't have to go to school.\"\n\n\"Cool!\"\n\n\"Tell you what, we'll do something tomorrow, the five of us together, unless you have...\"\n\n\"No, that sounds good, Dad.\"\n\nMegan walked in and hugged him. I knew their relationship had been strained, but when I watched him cuddle his mother, Cindy wrapped an arm around my waist, leaning against me. He was a little awkward cuddling Cindy, as I knew he nursed a little crush on her, but I was pleased he had no problem accepting a hug from his old man.",
        "We shut his door as Megan walked to the kitchen, Cindy and I to the living room, Megan walking in a few second later with a bottle of wine, two glasses, and a bottle of beer for me. Sitting between Cindy and I, the two women chatted as I sipped at my beer, turning towards them. Cindy gave me the occasional glance, and once I finished my beer, I shuffled closer to Megan.\n\n\"Lift the hem of your dress,\" I ordered. She glanced at me for all of three seconds before she lifted it up, showing off a pair of black panties, the tops of her stockings. \"Cindy, take off her panties.\"\n\nShe didn't hesitate, dropping to the floor between Megan's legs, reaching up and ever so slowly lowering her panties down her thighs, over her knees, and the rest of the way until they were off. She handed me the thin strip of fabric, not surprised they were already wet. \"Are you turned on, Megan?\" I asked. She bit her bottom lip as she met my eyes, nodding quickly. \"Why are you turned on?\" She didn't reply immediately. I leaned closer. \"Why are you turned on?\" I growled.\n\n\"Because you're going to fuck me again,\" she whimpered, \"I've been waiting over two years for this, Mark.\"\n\nI leaned closer until our mouths were almost touching, running my fingers up her inner thigh until I barely brushed her pussy. She almost jolted. \"Cindy, sit up next to her. We'll both touch her. Would you like to do that?\"\n\n\"I'd love to, Mark,\" she said softly.\n\nCindy sat to her other side, her hand doing the same as mine, running up her thigh until she touched her pussy too. \"Kiss Cindy, Megan,\" I whispered, \"Kiss her like I know you want to.\"\n\nMegan had always been a good kisser. Cindy was one hell of a kisser. Watching the two of them kiss had me hard in seconds. That's when I easily slid a couple of fingers inside Megan. The whimper that escaped her made Cindy smile. Megan had to break the kiss, no idea how she was looking at Cindy. \"Thank you,\" she whispered.\n\n\"I love him,\" Cindy whispered back, \"But... I know how difficult life can be. We all make mistakes. And... I really like you, Megan. I can see why he married you and I'd love to be your friend. You made a mistake. And I know he still cares for you. Plus... we both really want to fuck you tonight.\"\n\n\"We should move to the bedroom.\"\n\nStanding up, I easily picking Megan up, throwing her over my shoulder, making her squeal, taking Cindy by the hand and leading her towards the master bedroom. \"I am man. I will now fuck women,\" I grunted, putting on a caveman voice. Cindy snorted, cracking up in laughter as she carefully shut the door.\n\nCarefully placing Megan on the bed, I stood back as the two women helped each other out of their dresses so they stood before me in just their underwear. Well, Megan was without her panties, both women kicking off their heels and helping each other out of their bras. Megan still had a fantastic set of tits on her, but Cindy... well, they were just perfect for her body.\n\n\"On your knees,\" I ordered. Cindy complied quickly. Megan smiled as me before lowering herself too.\n\n\"Do you want to suck his cock?\" Cindy asked Megan. She looked up at me, smiling before nodding eagerly. \"Will you swallow his load?\"\n\n\"Can I share it with you?\"\n\nCindy grinned. \"That's the right answer too. Though would you like to suck my cock too?\"\n\n\"I'd love to, though would Mark...\"\n\n\"We can do it together, honey.\" I didn't even realise I'd called her that before her bottom lip started to tremble. I'd called her that nearly our entire time together, through dating to marriage. I leaned down and caressed her cheek. \"We'll blow Cindy together. You'll understand how enjoyable it is for me too.\"\n\nBeing blown by one woman is fantastic. Being blown by two women? Leaves you feeling like a god. Cindy had her fun with me but there was missing the fact Megan's lips spent most of their time wrapped around my cock, Cindy almost her cheerleader at times. When she'd been willing to do it, Megan has been a rather good exponent at fellatio.\n\nRunning my fingers through her hair, she looked up and I could see the eagerness in her eyes. It almost made me sad, the fact she was now so eager, but for years during our marriage, she'd made me feel almost guilty wanting my wife to blow me, particularly when I happily went down on her. I put those thoughts to the back of my mind as her head bobbed up and down, and she looked almost desperate to make me orgasm.\n\n\"You want his seed, don't you?\" Cindy asked, \"You want him to cum. You want to feel his tasty cum in your mouth. You'd happily swallow every drop. But you're going to share it with me, aren't you?\"\n\nMegan removed her mouth. \"I'd swallow every drop,\" she muttered before swallowing my cock again.\n\n\"We've going to fill you tonight, Megan. We're going to fill your mouth, then we're going to fill your pussy, then we're going to fill your arse. And your... lover... is going to fill your mouth, then your pussy, then your arse. Do you want Mark in your arse, Megan?\" She moaned as she nodded eagerly. \"How much do you want him in your arse?\"\n\n\"I wish we'd...\"\n\nCindy kissed her deeply before almost forcing my cock back into Megan's mouth. \"He's going to nail your arse. So am I. We're going to fuck you senseless tonight.\"\n\n\"Fucking hell, Cindy,\" I muttered.\n\nNo surprise I blew into Megan's mouth a couple of minutes later. She swallowed the first couple of spurts but kept her promise, turning and cum-swapping with Cindy. To my surprise, Megan's hand immediately grasped her cock, gently stroking it as they eventually pulled apart, glancing at me to show an empty mouth.\n\nHelping Cindy to her feet, I sat her down on the edge of the bed, Megan and I on our knees next to each other before her. \"Sure you can handle this?\" I asked.\n\n\"This is going to be so fucking hot, Mark,\" she whispered.\n\n\"You get her going, honey. I'll finish her off and you can watch me swallow her load.\"\n\nMegan kissed me passionately. Caught me by surprise for a second, but I quickly replied to her kiss. Then she broke away and wasted no time wrapped her lips around Cindy's cock, my girlfriend moaning softly. Positioning myself behind Megan, I rested my cock against her lower back as I watched her suck off my girlfriend. Looking up at Cindy, I whispered, \"I can't wait until you fuck my ex-wife.\"\n\n\"I'm looking forward to it, Mark. Never fucked a genetic woman before.\"\n\n\"You'll love it. Megan has a tight pussy.\"\n\nWatching Megan suck the cock of my girlfriend was something I never thought I'd see. Cindy was loving it, Megan was just as enthusiastic. When Cindy started to make the sounds I knew well, Megan moved out of the way and watched me as I slowly brought Cindy to climax. I'm sure a small part of her thought it weird, watching her ex-husband suck a girlcock, but the incredibly naughty and suggestive things whispered into my ear suggested she was loving it far more.\n\n\"Oh baby, I'm close,\" Cindy moaned.\n\n\"Cum in his mouth!\" Megan exclaimed, \"God, I want to see you swallow her cum, Mark.\"\n\nCindy started to unload within a couple of minutes, swallowing the first couple of spurts before I left the rest in my mouth. Once Cindy was finished, I turned to Megan and opened my mouth. \"Want to share it?\" she asked softly. I closed my mouth and pulled her close, ensuring her mouth was open before I kissed her.\n\n\"Fuck, that's hot,\" Cindy moaned as Megan and I swallowed her load.\n\nTurning to Cindy, I grinned. \"Want to eat some pussy?\"\n\nCindy clapped her hands in excitement so that answered that question. Helping Megan to her feet, Cindy and I pulled her close, both of us kissing her as we helped lower her to the bed. We took a breast each with our mouths as fingers trailed down to her pussy. It was immediate sensory overload, Megan moaning loudly as we gave each breast a lot of attention, I think almost bringing her to orgasm. Kissing down her body, Megan eagerly spread her legs, her pussy almost dripping with excitement. Cindy wasn't embarrassed to admit she was clueless to what to do. \"I took sex education, I know what I'm looking at, but theory is one thing...\"\n\n\"Just use your tongue, Cindy,\" Megan whispered, \"You'll figure it out.\"\n\n\"Do you want to eat her pussy, Cindy?\" She looked at me and smiled. \"Then enthusiasm alone is half the job. Use your fingers, find her g-spot, and once you do, focus on her clit and you'll make her cum.\"\n\n\"Speaking from experience?\"\n\n\"I used to...\" I sighed as I knew how it would sound. \"I always loved going down on Megan.\"\n\n\"Do you want to?\" Cindy asked.\n\n\"You first, sweetheart, then I'll make her cum again.\"\n\nAs Cindy ate pussy for the first time, the sounds Megan made suggested she was figuring it all out rather quickly. I got behind Cindy and ate her arse instead. Soon, two women were making plenty of noise, grabbing the lube Cindy had packed, sliding a couple of fingers inside her, though only enough to distract slightly, not enough to make her cum just yet.\n\n\"Oh fuck... Cindy...\" Megan moaned.\n\nI didn't want to distract her then so lay down next to Cindy, watching her fingers and tongue working to get Megan off. Cindy seemed to be enjoying herself at the same time, glancing in my direction as her tongue worked at Megan's clit. Watching Megan's reaction, I knew when she was getting close to orgasm. \"She's going to cum in a second, Cindy.\"\n\nI remembered her well as she did enjoy quite the orgasm within a minute. It excited Cindy at the same time, continuing to lick and finger her until Megan had to gently push her head away, whispering how sensitive she was. Cindy kissed her up body and kissed her, as I kissed up Megan's legs before I buried my face between her legs.\n\n\"Oh fuck... Mark!\"\n\nShe didn't last that long considering she'd already enjoyed one orgasm, but I knew my ex-wife's body best, and I teased her, bringing her to the brink more than once until she was begging and whimpering for me to get her off. When I finally did get her off, that was it for a few minutes. She near enough passed out, chuckling to myself as I relaxed to the other side of her, Cindy and I caressing her body.\n\n\"Mark, can I request something?\"\n\n\"Sure,\" I replied.\n\n\"Lie back as I want to see Megan ride your cock.\"\n\n\"What about you?\"\n\n\"I'll just watch. Megan needs you and I know it will be emotional, so I'll be here for support. Once she's enjoyed herself, I'm going to slide my cock in her arse, then we'll swap so you can nail her later.\"\n\nI hadn't had sex with Megan in a couple of years. When she climbed on and straddled my lap, feeling the warmth of her pussy against my cock, it was actually amusing to see how nervous she was. \"Just like old times, honey,\" I said, \"You always loved riding my cock.\"\n\n\"I always loved the sex part of our marriage.\" She smiled, leaning down to kiss me as Cindy grabbed the base of my cock, moaning softly as I slid inside the pussy of my ex-wife. \"Your cock feels just as fantastic as I remember,\" she murmured when I was inside her.\n\n\"You're on the pill, right?\" I did ask.\n\nShe laughed. \"Keeps me regular, Mark. Don't worry, you won't have a surprise in a couple of months.\" Resting her hands on my chest, she whispered, \"Now, I'm going to enjoy your cock for the first time in a couple of years. You just lie there and smile. Liking my pussy again?\"\n\n\"I am, honey. And thank you, sweetheart,\" I said, glancing at Cindy, \"You going to fuck her soon?\"\n\n\"I'll slide on inside when she's enjoyed an orgasm on your cock,\" Cindy replied, \"Then we'll just flip her around so you can get inside her arse too.\"\n\nNo idea how long Megan rode me for but I thoroughly enjoyed it. I had memories of many intimate times we'd shared during the good years of our marriage. I'm sure we both experienced a tinge of regret while she rode me, Cindy sitting behind her, watching her hands caress her body, spending a lot of time grabbing her breasts, playing with her nipples, before I suggested she play with her clit. Cindy grinned as she held Megan tighter and snaked a hand down her body.\n\nMegan came hard, and she didn't want to stop riding me. \"I need to keep going,\" she cried softly, \"Just be gentle, Cindy. I've never had anal.\" She leaned down and kissed me. \"I wanted to with you but...\"\n\n\"Don't worry, we're having a lot of fun now.\"\n\nCindy prepared Megan. She stopped riding me as fingers found their way into her arse, enjoying the look on her face, her body squirming. Cindy was gentle, but she soon had three fingers inside her, whispering that Megan was ready for her thick cock. Pushing her forward, Megan rested a forearm to either side of me as Cindy got into position. Megan kissed me as Cindy gently pressed her cock inside her, moaning louder as she buried more and more until she was inside her.\n\n\"I'll start gentle, Mark, but we'll be fucking her nice and hard soon enough,\" Cindy said, grinning away.\n\n\"Oh god, please fuck me, both of you,\" Megan groaned, \"I've never felt so full.\"\n\n\"Should have brought another girlfriend to fill her mouth, Mark.\"\n\n\"Now there's an idea!\"\n\nOnce we were all comfortable, I started pumping up while Cindy surely but surely started to fuck her at the same time. We alternated our thrusts, at least, but I could see Megan was almost overwhelmed by what Cindy and I were doing, her face lit up in delight. Just like Cindy, I didn't want to see her in pain. Not now, anyway.\n\n\"Getting close,\" I warned Cindy, \"Been inside her a while now and her pussy is very nice.\"\n\n\"Still tight for you, Mark. You and your thick cock.\" She leaned down and gave me one hell of a kiss. \"I've tried dating. It doesn't work.\"\n\n\"But...\"\n\n\"One night, Mark. I just wanted one night with you and Cindy.\"\n\n\"Okay,\" I said softly.\n\n\"I love you.\"\n\nI didn't know what to say to that. Megan closed her eyes, almost in understanding that I just couldn't return those words any longer. Cindy leaned forward. \"Well, I think you're fantastic, Megan,\" Cindy whispered into her ear, \"And I certainly understand why he loved you.\" Cindy started to pump her before she whispered, \"And who said this was only one night?\"\n\n\"What?\"\n\n\"We're having fun, Mark. And I'm enjoying her arse quite a bit right now. Never had my cock in pussy before.\"\n\nI smirked. \"Think you'll enjoy it, sweetheart.\"\n\nI shut up and focused on my orgasm, pumping up into Megan hard and fast. With Cindy fucking her at the same time, little surprise she had an orgasm before I did, but as she squeezed my cock, I groaned loudly and felt myself empty inside her. I kept pumping until I had nothing left, Cindy only slowing down once she'd cum, as Megan collapsed on my chest, sobbing. I wrapped my arms around her, Cindy leaning forward to complete the embrace, stroking the back of her head. \"It's okay, Megan,\" she whispered, \"It's okay.\"\n\n\"I ruined everything,\" she sobbed.\n\n\"But look where we are now. You're sharing a bed with him again, and I'm here too. I'm hard because of you too, Megan. Must tell you something.\"\n\n\"That you're both really good people.\"\n\n\"Cindy, get up. You need to make love with her now.\"\n\nCindy sat up and grabbed wet-wipes from nearby. Megan slid off me and lay back, spreading her legs, Cindy smiling as she leaned forward over Megan, the pair sharing a soft kiss. \"What are you going to do?\" Megan asked.\n\n\"I'm going to fuck my girlfriend.\"\n\n\"Can I ask a favour?\" Megan asked. We knew what she was going to ask before she said a word. Megan smiled. \"I'm interested in seeing you two make love, but you to him, Cindy.\"\n\n\"We can do that later. We have all night.\"\n\nCindy made love to my wife, I made love to Cindy. I thought it would be awkward getting into positions that worked, but it didn't take long for us to get comfortable. I definitely distracted Cindy as buried my cock in her arse, while Megan seemed to enjoy being fucked by my girlfriend. There's a few words I never thought I'd think in my life.\n\nI stopped moving when Cindy announced she was getting close, leaving my cock buried so she could focus on fucking Megan. I was now holding her legs wide and back, Cindy really nailing her hard, and I felt her started to squeeze my cock as she unloaded inside my ex-wife. Once she was empty, she glanced back at me. \"You need to fill your ex-wife's arse, Mark.\"\n\n\"God yes,\" Megan exclaimed excitedly.\n\nTook a little movement, Megan getting on all fours, watching as she quite happily swallowed Cindy's cock against while I slid behind her, gently sliding my cock in her arse. I gave each cheek a firm slap, which earned a moan, before I leaned forward and grabbed her head, pulling her back. \"Who owns this arse now?\" I growled into her ear though smiled at Cindy.\n\n\"You do!\"\n\n\"Who else?\"\n\n\"Cindy does!\"\n\n\"That's right. And who owns your pussy?\"\n\n\"You and Cindy.\"\n\n\"Good girl. Are you going to swallow Cindy's cum again?\"\n\n\"I'd love to.\"\n\n\"How much do you want me to cum in your arse?\"\n\n\"More than anything.\"\n\nI pulled her back so she rested against my chest, lifting her chin so she met my eyes. \"Good girl,\" I said softly, \"You'll now be rewarded. Do you want me to be gentle or rough?\" Her grin told me exactly what she wanted.\n\nPushing her forward, Cindy slid her cock back into Megan's mouth as I got comfortable and slammed my cock into Megan's arse. She grunted but made no complaint, and I quickly had a good tempo, while Cindy wasn't particularly gentle with her mouth either. We leaned forward to kiss each other occasionally as we pounded Megan from both ends. What I didn't expect was the fact she had one hell of an orgasm. We had to stop to allow her time to recover before we resumed.\n\n\"She's got a tight arse, doesn't she?\" Cindy growled, \"Her mouth is very talented.\"\n\n\"What do you reckon, Cindy? Get together every so often and just nail her every which way.\"\n\n\"I reckon she'd love it.\" Megan made an approving sound around Cindy's cock. \"Pity the poor man that has to compete with us two.\" Megan actually giggled, despite what I was doing to her from behind. She was now so relaxed, I think she was just waiting for us to cum. \"You close?\"\n\n\"Getting there,\" I grunted.\n\n\"We'll time it so we fill her together.\"\n\nTo both our surprise, we did manage to time it just enough that we came within ten seconds of each other. Cindy was wiped out by then, while I left my cock buried inside Megan until I simply had to pull out and collapse onto the bed. Megan immediately cuddled into me, Cindy moving so she could cuddle from the other side. \"Going to have a sore bum tomorrow,\" Megan joked.\n\nThree of us fitting into the shower stall had us laughing away, though when Megan dropped to her knees to take my cock in her mouth again, I was pretty much stunned to silence. When she had me cum all over her face, I actually exclaimed, \"Holy shit!\" That was followed by giggling from two women as Cindy got down and helped clean her face... with her tongue.\n\n\"I love his cum,\" Cindy whispered, \"I swallow every time I suck his cock.\"\n\nHeading back to bed, we were lying together when I had to ask, \"What the hell do we tell the kids?\"\n\nWe agreed to think about it the next morning before breakfast.\n\n*****\n\nA/N -- So... I'm sure my note at the start now makes sense. When writing the above, it made sense at the time, but perhaps it's happened too early in the grand scheme of things? But as I've already written quite a few chapters, moving the above to a later chapter would throw many other developments out of whack. So, it was with slight apprehension that this chapter was submitted.\n\nFor those who read my stuff, I like stories to generally have a romantic feel (even if the pairing might have others involved from time to time, there is always a deep love between a pair), have a happy ending but also redemptions arks (if it makes sense). We've all made mistakes in our life. No-one is perfect. Cheating is awful and not something I condone (like nearly everyone, I'd assume!) But I just had to make Cindy such a kind hearted person, to see the good in absolutely everyone, that the above was possible.",
        "Even though she's only a figment of my imagination, I love Cindy."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "transgender",
        "trans",
        "transwoman",
        "romance",
        "threesome"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/ambiramus-ch-06"
}