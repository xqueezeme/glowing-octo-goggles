{
    "title": "The Beach House",
    "pages": [
        "Authors Note: I would like to thank a generous soul who edited my mess. I learned a lot about punctuation in the process. Thank you kind sir! \n\n*****\n\nI looked out over the pool to a pristine beach not one hundred steps below the chlorinated water. To the left, I saw trees and a stone fence, to the right, more palm trees and the same stone fence. Both fences transitioned into a jagged rock wall that defined the perimeter of the private beach. I couldn't see the neighbors on either side. It was perfect.\n\nI heard the real estate agent exit the sliding glass door. She was a heavy-set woman, impeccably dressed, with a phony happy sales attitude. I didn't care for her much. She wore a bit too much perfume and always thought she knew what was best for me. Of course, I didn't really care for anyone so she was at a disadvantage to begin with.\n\n\"I'll take it.\" I said without turning to look at her. I heard her high heels stop on the rock patio.\n\n\"You haven't really looked at the house, Mr. Tomlinson.\" There she goes trying to control my thoughts again. I was only interested in the privacy. This place blocked out the rest of the world. It would be my private little slice of heaven. The house was devoid of furniture which was a good thing. It meant it was already vacant and I could close the deal quickly. \n\n\"Make the offer Mrs. Johnson. Full asking price.\" I raised my hand in hopes she would see that I had already made my decision. This was the fourth place I looked at and the first to meet my original qualifications. If she had just listened, she could have sold it this morning and not wasted half my day.\n\n\"Are you sure? I am quite confident we can negotiate it down ten, maybe twenty percent.\" God, I am glad she doesn't work for me. I would fire the bitch on the spot. What part of \"make the offer\" didn't she understand? I wanted the property and didn't want to deal with anyone any longer than absolutely necessary. I turned to her.\n\n\"Make the offer. Full asking price.\" I made it sound a bit ominous. Why did I have to repeat myself? I hated the need for agents. She stepped back a bit and reached into her purse for her phone.\n\n\"Of... of course, Mr. Tomlinson.\" She fumbled her phone, and it almost dropped to the stone patio. \"I'll have the papers drawn up immediately. They will want ten percent in earnest money.\" She was back to her business self. \"Would you like me to bring the paperwork to you tomorrow morning?\" Like I wanted to see this woman first thing in the morning or ever again for that matter.\n\n\"A Monica Rose will call you and complete the purchase.\" I started walking back through the house toward my car. I wasn't interested in a conversation or politely accompanying her out. Happily, I chose not to ride with Johnson so I hopped in my car and sped off.\n\nI entered the hotel at the rear entrance. I don't have to feign niceties to the staff that way. I needed to get my new house livable as soon as possible. I expected to close by end of next week. I had enough lawyers on the payroll to make sure that it would go smoothly. I would need furniture and all the other necessities to make it home. I called up one of the few people in the world I respected.\n\n\"Monica, its Dale Tomlinson.\" Monica handles things for me. She doesn't discuss options and try to help. She just does.\n\n\"Mr. Tomlinson, what can I do for you?\" Yes, that's what I like to hear. No bullshit niceties. Just business.\n\n\"I am purchasing a beachfront home and need it furnished and move-in ready as soon as possible.\" Watch her work.\n\n\"This week, sir.\" She sounded a bit hesitant. Not like her at all.\n\n\"That is what 'as soon as possible means.' \" I usually didn't have to repeat myself to her.\n\n\"Of course sir! Address?\" I could almost see her writing it down as I regurgitated it. I told her to talk with Mrs. Johnson to finalize the sale and to access the property. \n\n\"Style?\" I told her it would be classic comfort. I intended to spend a lot of time there. I don't think it was an actual style, but Monica had a wonderful way of interpreting my needs.\n\n\"Budget?\" Whatever it takes. I didn't want to limit her creativity. I was going to actually live there.\n\n\"I will get a flight out tomorrow.\" She was fast. That's why I liked her. I don't think she cared for me personally, but that was unimportant. I knew she liked my business, and she charged me well for her speed. Fine with me; I can always make more money. It's time that is at a premium. What's funny is that I have only met her in person a couple of times. Now I just call her with what I want and it's done. I couldn't think of a more perfect arrangement. I hung up the phone\u2014no need for goodbyes.\n\nIt took three weeks to occupy the house. Damn owners were out of country, and I had to wait till they returned. They should have made arrangements for a possible sale before they left. Assholes pretty much ruined a week of my life. I really hate people. On the other hand, Monica was wonderful as always. The house was move-in ready. I was sure it cost me an arm and a leg, but it was worth it. Even the kitchen and bar were stocked. I only had to transfer my personal effects, and I was home.\n\nI wasn't sure why she had put a pool table in the rec room. I never have guests so it won't get any use. I guess it was just there to take up the large space available. The pool had way too many lounge chairs, but I guess it gave the area a more lived in look. The beach itself was exactly as I envisioned. One lounger under a giant umbrella. This is why I bought the place. I aimed to spend a good portion of my life lying in that chair, reading books and letting the gentle waves wash away the rest of the world. This was paradise as far as I was concerned. \n\nI walked down to the sand, and sure enough, the waves were playing a symphony on the bordering breaker rocks. Civilization was drowned out. The adjoining beaches were completely blocked from view so I could expect zero interruptions. I was so pleased, I decided not to go back up. I stripped to my boxers and lined the lounger up for maximum shade time. I loved the beach, the waves, and the warmth. I could do without the sun. It was way too bright and made me sweat. I lay back and let the sound of the waves roll over my body. This was by far the best purchase I had ever made. It wasn't long before I was sound asleep. It was just that peaceful.\n\nThe damn sun woke me about two hours later. It began to roast my feet by the time I had pulled myself from dreamland. There has to be an umbrella that tracks the sun. I vowed to find one as I snapped my knees up to cool my feet. There is always something in this universe that likes to screw with my well-being. Today, it was the sun. \n\nI returned inside and fired up my laptop. It was time to review my trades. I had inherited a huge bond portfolio just before the 2008 crash. My grandmother, the only person I ever enjoyed being around, had conservatively purchased munis, federal and triple A corporate bonds. She purchased them from selling off my grandfather's position in a highly profitable internet firm at his death. She was a lovely woman whose passing I took hard. Having lost my parents early in life, Grandma was my rock and my soul. As the bonds matured and the munis were called, I dumped the money into the stock market. My timing couldn't have been better. When everyone was selling, I was buying. I grew a $100 million portfolio into a half billion dollar empire with me as the emperor. \n\nMost people didn't even know my name, and I liked it that way. Money can buy power and influence. I used it to ensure my isolation. Monica was my wall against the world. She would handle all the crap that the money generated when it was spent. She, unfortunately, was becoming a bit irreplaceable. I paid her generously in hopes that she never moved on. It would be almost impossible to find anyone who could match her efficiency. I sometimes got shivers thinking about life without her. \n\nWith my portfolio looking as good as ever, I started opening cabinets in the kitchen looking for something to eat. Monica had seen to that with her usual perfection. There were plates and silverware, a drawer full of take-out menus sorted by Yelp ratings, the fridge and freezer filled with food, and one cabinet filled to the doors with wonderful cans of heaven. My one vice was SpaghettiOs.\n\nHigh School was hell for me. I had never fit in so I spent four years trying to stay far away from others. When I failed, I suffered. I wasn't big enough, not good looking enough, and I never knew what to say. There was only one person who didn't care about my awkwardness. My Grandma would be waiting for me to return home and could tell from my expression what kind of day I had. My best memories of high school were sitting in the kitchen eating SpaghettiOs with my Grandma. It may sound sad to others, but to me it was a wonderful stress-free environment. Just the smell of the canned wonder cooking on the stove would let me forget my nameless torturers. To this day, those cans brought Grandma back to my mind. Monica was priceless; she knew me well.\n\nI poured a can into a pot on the stove and sat back to enjoy the aroma. Just like the waves, the smell washed away the world. I could almost see Grandma's smiling face. I tried not to eat it every day so I wouldn't get bored. I grabbed a bowl and poured a serving and headed off to the flat panel to watch a movie. A nap on the beach, SpaghettiOs and a good movie. This day was better than most. I made a mental note to eat something a bit more nutritious later. \n\nBesides some annoying interruptions by assholes that needed my signature, my week went fairly well. I allocate one day a week to clean house and do the laundry. I had a maid once, but I just couldn't stand having her around. The repeated \"good mornings\" and \"how are you todays\" made me want to puke. I decided it was easier on my soul to just handle it myself. Hell, it was the only real work I had to do anyway. It was almost therapeutic. One day of work made the other six days more valuable.\n\nIt was about four o'clock when I finished the final load a laundry. It being summer, I still had a good four hours of good beach time left. I grabbed a book, donned my swimming trunks, and headed to my lounger. I mentally kicked myself for forgetting to research a self-adjusting umbrella. I began to adjust the umbrella and felt a sharp pain in my ankle as my foot dug into the sand. Something jabbed me hard right below where the ankle bone stuck out. I whipped my foot up and saw two small welts just above the heel. It didn't look that serious although it was a bit sore. It must have been some glass or something in the sand. Just another thing trying to ruin my day. \n\nI lay on the lounger and opened my book at the marker. It wasn't a great book, but I had a rule about finishing every book I start. It even paid off one time with a fantastic ending that made the slog through the rest more than worthwhile. I flexed my leg and ankle a bit trying to shake off the noticeable discomfort from the sand bite. I figured I would be stuck with the pain till I was able to sleep it off tonight. I went back to my book.\n\nAn incessant uneven humming began to disturb my world. I looked up from the book and saw a boat breaking the waves not far off shore. It seemed too small for the ocean. Every time a wave went by, it pulled the small engine out of the water and it emitted a high pitched scream. Fucking idiots. They had a whole ocean to play in, and they picked my back yard. I went back to my book figuring they would pass in a moment. The engine got louder as I read.\n\nI looked back up and saw the small craft heading toward my beach. It sounded like the throttle was opened all the way. I lost the grip on my book and it dropped closed. \"Son of a bitch!\" I said as I realized I would have to spend the next five minutes trying to find my place again. I was really beginning to dislike the captain of the annoying vessel. The boat wasn't slowing and was still heading to my beach. If they thought they were landing here, they had better think again. I grabbed my phone in case I had to call the police.\n\nThe boat began veering off to the left toward the breakwater. The idiots should be able to see the rocks. That's all I need is a smashed up boat to ruin my pristine view. \"Hey, wake up!\" I shouted and waived my arm. The boat kept coming and didn't slow a bit. I screamed again, signaling with both arms, but the boat stayed to its course and slammed into the rocks. I heard wood give way when it hit and saw what looked like a naked body fly out toward the rocks.\n\nI stood quickly from my chair. A little too quickly as my leg had seemed to go numb a bit. I moved toward the shore trying to work the sleep out of it yelling for whoever would listen. \"Hey asshole! This is a private beach.\" I received no response, but saw something bobbing close to shore. It looked like a body. Fuck, that's all I need. Someone came all the way to my house to die. I moved quickly to water in hopes of forestalling a visit from the coroner. My arm didn't really want to cooperate as numbness ran up my side and toward my neck. I moved quickly into the shallows and rolled what I now realized was a naked woman onto her back. \n\nShe sputtered a little water out of her mouth and looked up to me with hugely dilated eyes. \"Should have just left me,\" she said with a Spanish accent before she broke into laughter. Pissed, I grabbed her wrist and began pulling her lethargic body toward the sand with my good arm. Her head was oozing a bit of blood although it didn't look too serious. Suddenly, pain forced me to my knees. Something was really wrong. I didn't have any energy to stand back up. My whole chest felt like it was collapsing in on itself. I dropped her arm and remembered my phone. I picked the first number in my recent list and dialed Monica. \n\n\"Monica... Monica.\" I couldn't finish the sentence. I didn't have enough air in my lungs. I realized I might be dying. A wave a fear ran through me. I wasn't ready to go yet. I haven't even finished the book.\n\n\"Fuck! You're having a heart attack!\" The woman sat up, and two rather attractive breasts bounced on her chest. She was failing miserably at trying to hold back laughter. My vision was drifting in and out which made the whole situation surreal. I fell backward, half in and half out of the water. She grabbed my phone before it got wet. \"Mr. Private Beach needs a doctor.\" She laughed into the phone and threw it over her shoulder into the water. The last thing I remember was her Spanish laughter as she straddled my stomach. \n\nI awoke in a quiet beige and white sanitized room. I could barely hear movement and muffled conversations beyond the door. My memory came back slowly. Obviously, I survived. I moved my arm and leg, and the numbness was gone. That was a good sign. I tried to sit up and decided it really wasn't worth the effort. Still a bit weak. I closed my eyes again and was soon fast asleep.\n\n\"Mr. Tomlinson... Mr. Tomlinson?\" A woman's voice woke me from my sleep. \"Good morning, Mr. Tomlinson,\" she added when my eyes opened. It was a nurse, dressed in a blue set of smocks. \"You're in St. Vincent's. You experienced a sudden cardiac arrest.\" No shit, I thought. Even the naked lady on the beach knew that. \"Dr. Heller wanted me to wake you up before he began his rounds.\" She checked an IV bag that was attached to my arm. \"Would you like to sit up?\"\n\n\"Yes.\" I said a bit hoarsely. I was feeling a bit vulnerable fully on my back. She adjusted the bed a bit and then helped me raise my shoulders.\n\n\"I'll get you some fresh water.\" She grabbed a pitcher that was next to the bed and headed out the door. At least I had a private room. The walls seemed thick enough so I didn't feel crushed by the number of people that were obviously in the building. All in all, it could have been a lot worse.\n\nShe returned with a full pitcher and a cup with a built-in lid and straw. It looked a little juvenile, but I was pretty thirsty. She filled the cup and place it in my hand. For a second there, I thought she was going to hold the cup to my lips so I kind of fumbled the handoff. Good thing it had a lid. I took a few sips and relieved my dry throat.\n\n\"Do you have any questions?\" She looked at me quizzically. I wasn't sure what to ask. I felt kind of like I had to ask something.\n\n\"Yes! How did I get here?\" It was simple enough and showed I wasn't completely without my wits.\n\n\"I wasn't here last night, but I understand you were brought in by helicopter.\" She said pointing to the roof. \"You were very lucky. I understand you flat-lined in transit, but the paramedics were able to revive you. Dr. Heller will have to explain the treatment you received once you arrived. He should be here in a few minutes.\" Fuck, I died in a helicopter. As if on cue, the doctor wearing the same color smocks as the nurse walked in with a clipboard.\n\n\"Good morning Mr. Tomlinson.\" This was getting a bit repetitive. \"It's good to see you awake.\" I felt the need to respond.\n\n\"Good morning.\" I said. A lot of my hoarseness was gone. \n\n\"I'm Dr. Heller, and I was the attending physician when you came in last night.\" He looked up from the clipboard. \"You had a very close call. Luckily you had some good first aid.\" He went over to a terminal on the wall that was wired to a clip on my left finger. After playing with the settings a bit he returned his face to mine again. \"We were unable to locate a next of kin so I had to accept that Monica...\" he looked at his clipboard \"Rose was acting in your interest.\"\n\n\"Yes, she always does.\" I said carefully.\n\n\"You were stung on the foot by a jellyfish.\" He was looking at me closely. \"You had a rather strong allergic reaction and your heart stopped. Usually these things are just uncomfortable, but reactions like yours are not completely uncommon.\" \n\n\"I don't remember going in the water.\" I tried hard to think back.\n\n\"Actually, the animal can remain quite potent a few days after death. You could have just step on one on the beach.\" He leaned over the bed and disconnected the clip on my finger. I remembered the sting when I was adjusting that damn umbrella. \n\n\"Are there any lasting effects?\" I wiggled my toes again to make sure they were still working right. \n\n\"No.\" He chuckled. \"At least not normally. Some Benadryl for the symptoms. The toxin flushes itself out in a few days. Believe it or not, we're only going to keep you overnight. Once we make sure you won't relapse, we'll release you.\" He was pretty cheerful sounding. \"You should be able to continue on with your life as normal, but I would recommend you see a cardiologist in a week so just to make sure there is no permanent damage.\" Wow, drive-through medicine.\n\n\"Thanks, Doctor.\" I wasn't sure if there was a protocol for what to say to someone who saved your life. I was afraid to add any embellishments that might sound fake. He just patted my on the shoulder.\n\n\"I'll see you before you leave tomorrow.\" He walked out to continue his rounds.\n\n\"Monica Rose is waiting outside to see you. Do you feel up to a visitor?\" The nurse smiled like it was a good thing. I wasn't excited about seeing her in my weakened state, but I am sure she was instrumental in my survival.\n\n\"Yes, of course.\" I tried to smile because I felt the nurse expected me too. I hated dealing with people. Everything felt uncomfortable. Good thing I was going home tomorrow. She opened the door and waved Monica in on her way out.\n\n\"I understand you're going home tomorrow.\" Monica didn't say hello. God she was easy to talk to.\n\n\"Yes. I guess I have you to thank for the helicopter and private room.\" I almost died. I have to thank someone or they might just let me go next time.\n\n\"Actually, it is Mia Perez you need to thank. You will get the bill for my services.\" She wasn't smiling just all business.",
        "\"Mia Perez?\" I couldn't place the name.\n\n\"Mia was the women who performed CPR on you for over fifteen minutes. They found her naked and quite high on heroin pumping away on you. They tell me it is the only reason you survived.\" She almost seemed angry about my survival.\n\n\"Should I give her some money or something?\" I again wasn't sure of the protocol in these matters.\n\n\"You would give a junky money? Might as well put a gun to her head.\" Monica seemed pissed for some reason. I was a little shocked at her tone. \"It cost a lot, but she is currently recuperating in your house. It took a long time to convince the police not to book her for grand theft and heroin use.\" Why did Monica's eyes seem to be so strained? \"You are buying a replacement boat to make sure she avoids grand theft.\"\n\n\"I didn't steal the damn boat. I'm not buying a new one.\" Who does Monica think she is? \"What do you mean I have a junky in my house?\" Now I was getting pissed. Monica wasn't deterred.\n\n\"Look asshole, you screwed up my tenth anniversary trip to outfit the house.\" Her hands were becoming animated. \"I was literally dragged out of bed when I was making it up to my husband when your heart stopped. We weren't sleeping if you know what I mean.\" She was being a bit louder than usual. I didn't even know she was married. \"If Charlie leaves me, or Ms. Perez ends up in jail or back on the street,\" she ticked off her points on her fingers, \"I will never answer your call again.\" She ended up with her hands on her hips.\n\nI was shocked by her tirade. She worked for me didn't she? I almost told her to fuck off, but the thought of life without Monica was a depressing one. I calmed down. Money was always easy to get. \"Okay, okay, I'll buy the boat and pay for rehab.\" That should take care of it. I quickly had a finger wagging in my face.\n\n\"No, no, Mister Selfish. You will be solely responsible for her rehabilitation. No hiring your way out of it.\" She had a very determined look on her face. \"She saved your life, God only knows why, and you owe her more than a brush-off.\" She was trying to screw up my life. \"You were lucky enough to be handed a junky that knew CPR when you needed it. Now you have deal with it.\" \n\n\"What the hell do I know about handling a heroin addict?\" I was confused why she thought this would even work.\n\n\"There is a Dr. Williams taking care of her right now. He is a detox specialist that you are paying a lot of money for. Ask him.\" Her hands were back on her hips.\n\n\"This has gone far enough.\" It was time to put my foot down. \"I don't want a junky or anyone else in my house, and I am certainly not going to play social worker.\" Let's see if she is willing to give up on my paychecks. She called my bluff.\n\n\"Fine! Then this is the last conversation we will ever have.\" Her voice was quiet and her expression had lost the anger. She turned and walked toward the door. I was about to let her go when visions of the hundreds of people I would need to deal with flashed before my eyes. Monica was irreplaceable as far as I knew. Life would begin to really suck.\n\nBefore her hand hit the door knob I relented. \"Monica...\" She turned toward me. \"I'll do it!\" I felt like I was ten years old finally conceding to clean my room. \n\n\"Yes, Mr. Tomlinson.\" She smiled and headed out the door. No need for goodbyes.\n\nI returned home the next day with an armload of pamphlets on cardiac health. I had an appointment with a recommended cardiologist in two weeks. I wasn't sure I wanted to go. I feared he would tell me SpaghettiOs were off limits. Of course, if I died, I couldn't eat them either. Maybe I just needed to stay away from jellyfish.\n\nA young man exited the hall bathroom rolling down his sleeves. \"Hi, you must be Mr. Tomlinson. I'm Wally Williams.\" He held out his hand. He looked a bit too young to be a doctor. I took his hand and shook it.\n\n\"Monica says you're a detox specialist?\" I wanted to verify that I wasn't going to be doing this without professional help.\n\n\"Yep, kind of evolved into the job. I started a clinic in a pretty bad neighborhood. You can say it was on-the-job training.\" He seemed pleased with his chosen direction. I sensed he was a do-gooder who was in it for the satisfaction. \"I usually don't do house calls, but I must say, your generous donation to the clinic made me rethink that position.\" He chuckled. I tried to not let on that I had no idea how generous I was.\n\n\"I'm glad you're here Doc. I'm kind of committed to seeing that Ms. Perez gets through this.\" I tried to sound grateful. I was hoping he would handle the heavy lifting. \"I've really never done anything like this before.\"\n\n\"You missed the easy day. Today and tomorrow will most likely be the worst.\" His expression became more serious. \"It's like a bad flu with a bunch of very ugly side effects thrown in. Just make sure she doesn't try to sleep on her back to avoid aspiration of any discharge. It helps to make sure she stays hydrated, especially if diarrhea kicks in.\" He was sounding like he wasn't staying. \"I put some Epsom salts next to the tub. If she complains of itchy or crawly skin, put her in a hot bath with the salts.\" He was reaching for his suit jacket that was lying over the back of the chair.\n\n\"You're leaving?\" I felt like I was being thrown into the deep end of the pool.\n\n\"I'll stop back in tomorrow morning. I left my card on the table.\" He pointed to the end table. \"Call me if you run into something unexpected.\" Obviously, I wasn't generous enough with my donation.\n\n\"I'm really not qualified to handle this, Doc.\" I am sure it sounded like I was pleading. I meant it to be more instructive to illicit a guilt reaction. He just chuckled.\n\n\"Mia doesn't need a doctor now. She just needs someone who cares. In a couple of days we can start the real work.\" He was heading for the door. I considered tackling him, but discounted it due to recent heart issues. It was just two days he said. I can suffer through it to keep Monica on board.\n\n\"Where's Mia now?\" I wasn't even sure where to start. \n\n\"In the master suite. It had the closest bathroom.\" He opened the front door. \"See you around nine tomorrow.\" Just like that, he was gone. It was the first person in many years that I didn't want to leave.\n\nI stood in the hallway, looking at the door for a few moments. I was secretly hoping it would open again, the doctor deciding to return. It didn't. I was a fish out of water. People take care of me; I don't take care of other people. I moved slowly down the hallway toward my bedroom. I figured the longer it took to get there, the sooner this would be over. I stood outside the door, not wanting to go in. I could hear a quiet moan, which made it worse. Without warning, I heard her violently vomit. I remembered the doctors warning and ran in to make sure she wasn't on her back. I really didn't want to go in.\n\nI gagged as the smell hit me in the face. I was never good when others threw up. I started breathing through my mouth as I took in the scene. Mia was naked on the right side of the bed, and the left side had a puddle of vomit. The covers were pooled at the foot of the bed, and Mia was shivering. I had never seen anything like this. I didn't know where to start. Luckily she was on her side in an almost fetal position. I moved to the right side of the bed, trying to keep my eyes off the remnants of her last meal.\n\n\"Mia, my name is Dale.\" It sounded feeble considering the situation. \"I'm the guy you saved a couple of nights ago.\" My hands kept making aborted attempts to touch her. I wasn't at all sure how to help her.\n\n\"Oh God, I can't do this!\" She was weeping and shivering. \"I thought I could, but I can't.\" I saw that some of her long black hair had found its way to the puddle. I knew I wouldn't like my hair to be there, so I reached over her body and retracted the errant hair. The ends were covered in puke, so I squeezed them dry between my fingers and pulled them back over her head. I looked at my hand and saw that some stomach chunks had adhered to my fingers. I retched and ran to the bathroom. I barely made it to the toilet before I empty the contents of my stomach. My heaving was echoed by another round from Mia. This sympathetic barfing had to stop. I knew I needed to clean up the discharge if we were going to get through the day. I waited till my stomach settled, then washed my hands.\n\nI entered the bedroom and almost lost it again. Mia had covered herself in the last round of puking. She was now outwardly crying. Fuck, this was bad! The sheets had to be cleaned up, and I was the only one there. The smell was horrendous. I shut off my nostrils and grabbed the sheet that was bunched up at the end of the bed. I moved next to Mia again and began wiping the vomit off her face and pushing it toward the other side of the bed. She was rolling back and forth making it more difficult to clean her up. \"Mia, stop moving for minute. I got to get this shit off you.\" I was desperately trying to control my gag reflex and didn't know how long I could hold off. My stomach was empty so I knew the next round would hurt like hell.\n\n\"Please don't make me do this.\" She was still crying, and her shivering became more noticeable. I was hesitant to start cleaning off her chest. Some morality wall needed to be breached.\n\n\"I have to clean off the rest of you. I'm sorry.\" I gave her all the warning I could and began to wipe off her breasts. She had gotten the bulk of the discharge in the valley between them. I had to use two hands, one to lift and one to clean. This was the first pair of breasts I had ever touched in my life that I hadn't paid to touch. Strangely, puke had a way of making the whole experience very clinical. I wasn't the least bit aroused. I rolled her toward me and cleaned off her arm and shoulder. I placed the cleanest part of the sheet along her side and rolled her back over it. This allowed me to undo the bottom sheet and roll her back to the bare mattress. I wadded up the dirty sheets and ran them to the laundry room.\n\nI kept praying that she wouldn't puke again while I was grabbing new sheets. I reversed the process and covered the bed with clean sheets. I let my nostrils open, and, as expected, the smell was greatly reduced. Mia, I don't think, cared. She was still weeping and still had a film of vomit on her.\n\nI went to the kitchen and grabbed the bucket under the sink. I tried one of the sponges, but they were too coarse for her skin. I went and grabbed a new bath towel from the bathroom closet and filled the bucket with warm water. I brought it all back to Mia. I dipped the corner of the towel into the water and started at Mia's head. I tenderly pushed her long black hair out of the way as I began wiping her face clean.\n\n\"Please don't make me do this.\" She pleaded again. Her brown bloodshot eyes were searching for mine.\n\n\"Shhh, I have to.\" I whispered, trying to calm her down. \"I can't lose Monica,\" I admitted. I don't know why I added that. I guess I felt she needed a reason for me to ignore her wishes. I wiped her forehead and around her eyes. I noticed that there were tiny wrinkles beginning to form at the outside of her eyes. She looked a lot younger from afar; closer, she looked to be in her thirties. \"I'm just going to get you cleaned up.\" I suddenly felt and sounded like my grandmother. It wasn't a bad feeling.\n\nShe shivered as I continued cleaning her cheeks and chin. Her lips were turning a bit blue. \"I'm so damn cold.\" Her accent was becoming more pronounced, and I was afraid she might slip into Spanish. I didn't know Spanish at all. Washing her chest was a lot more pleasant this time. I knew how sick she was, but the goose bumps on her breasts were adorable. I hid my thoughts and continued to wipe her down. I stopped at her belly, thinking that going farther would be an invasion. I forced myself not to look between her legs. I didn't even know if she was even conscious of her nakedness. \"So cold...\" She was really shivering now. I guess the air on her wet skin was aggravating the situation. I dried her as best I could with the other side of the towel. At the foot of the bed, I pulled up the blankets that had dropped there and tucked her in.\n\nHer lips went another shade bluer, and her shivering increased. I could almost hear her teeth chatter. I went to the closet for another blanket and added it to the bed, but it didn't seem to help much. She looked miserable. I did the only other thing I could think of. I stripped to my boxers and climbed into bed with her. I wrapped my arm around and pulled her into me. She sank her butt into my groin and I warmed her back with my chest. Still shaking, \"Better,\" was all she said. I held her twitching body hoping another round of puking wasn't on its way. In time, I feel asleep.\n\nWhen I awoke my front was drenched in sweat. Mia was burning up. She had detached from me and rid the bed of its blankets. The withdrawal process was like a roller coaster that won't let you off. \"Make it stop! Please make it stop!\" She was more moaning the talking. God, I wanted to make it stop. It was beginning to hurt me to look at her. It was hard watching her suffer. I jumped out of bed and grabbed the bucket. I refilled it with cool water and snatched another towel.\n\n\"I'm so sorry Mia.\" I don't know why I was sorry, but I was. I began wiping her down with the cool water. Her whole body was on fire, so this time I didn't stop at her belly and I continued down her thighs and calves. \"I wish you didn't have to go through this.\" I realized that I truly meant what I said. No one should suffer like this. I moved back to her forehead and applied the end of the damp towel as a compress. As an afterthought, I lightly blew on her newly wet chest and belly which caused a shiver to run down her body. Some of those adorable goose bumps reappeared for a moment. She was still hot.\n\nI ran to the kitchen, grabbed a small hand towel, and filled it with ice. I almost headed back before I remembered my grandmother wetting the towel before putting the ice pack on my head when I was sick. I duplicated her system and quickly headed back to the bedroom. Mia was moaning when I sat next to her and replaced the wet towel with the new ice pack. \"Shhh, the doctor says it will all be over soon.\" I stroked her hair even though it was now heavily knotted and still had remnants of the early bout of vomiting. I didn't care, I just wanted her to feel better.\n\nI lightly caressed her face and hair until the ice melted. I debated getting more since she seemed to be cooling down. \"Oh! Oh!\" she moaned and slowly raised herself to a sitting position holding her stomach. I braced for another round of vomit. She continued to carefully raise herself off the bed and brushed off my help. Half bent over, she slowly worked her way to the bathroom and closed the door before I could follow. The sounds that followed were obviously not associated with throwing up. I remembered the doctor's statement about dehydration, and I left to get some ice water. I returned, and Mia wasn't done yet. Poor girl! I felt so bad for her.\n\nThe sheets were soaked with sweat and water. I guessed it would be a good time to change them. I set the water down on the nightstand and stripped the bed. I remade the bed with fresh sheets, then sat and waited. It wasn't long before I heard the toilet flush. It was followed a moment later by the shower starting. I waited. After twenty minutes I knocked on the door and didn't receive an answer. The door wasn't locked so I opened it, calling her name. When she didn't respond, I entered and saw her sitting on the floor of the shower hugging her knees.\n\n\"Mia, the doctor said I need to keep you hydrated.\" I brought my volume up above the waterfall.\n\n\"Get the fuck out!\" she screamed at me. It didn't leave room for debate. I left quickly and quietly closed the door. Memories of high school flashed through my mind. I really hate other people. I left the bedroom and ran down to the beach. I would have to find a replacement for Monica. I couldn't deal with this anymore.\n\nI sat on the lounger and listened to the ocean. It was calm and repetitive, and it washed away the world. I could think more clearly. I had many lawyers who had other wealthy clients. They must know of people who knew how to handle things. I could call them and they could find the next Monica. I felt I had a solid plan of action. If I just sit here long enough, Mia would just leave, and I would find a replacement for Monica. Then everything would be back to normal. I lay back with a smile on my face and let the waves drone on. After a while, the sun forced me to shift the umbrella. Why hadn't I researched that automatic umbrella yet?\n\n\"I'm sorry.\" The voice was weak. I turned to see a pale Mia with wet hair. She was wrapped in my robe. \"I didn't mean to hurt you.\"\n\n\"What makes you think I'm hurt?\" My defenses were up. I wasn't going to ever admit that she got to me. If you admit it, they just pile it on. She sat on the sand next to the lounger.\n\n\"You didn't come back.\" She was looking up at me. I wasn't biting, so I looked back at the ocean and she continued, \"I was thinking of things I didn't want to remember. They wouldn't leave my head, and I kind of lashed out at you.\" She looked out at the ocean with me. \"I not very good with people these days.\" I wasn't expecting that. I felt a little out of place and didn't know how to respond, so I resorted to something I rarely did. I told the truth.\n\n\"I have never been good with people.\" My eyes never left the ocean. I was ready for her to recognize my weakness and beat me over the head with it. It was the biggest risk I had ever taken with someone other than my Grandma. I felt naked. She leaned over and gently laid her head along my thigh. \n\n\"We are two fucked-up individuals.\" Her eyes never left the ocean. I moved my hand to her long black hair and began untangling it gently with my fingers. I couldn't believe the truth was the right thing to say. We sat that way for a long time. \"This is really nice... so peaceful.\" She was still looking out and listening to the waves.\n\n\"I come here to hide away from the world.\" She might as well know it all. She turned her body around and faced me.\n\n\"I can't think of nicer place to hide away.\" She cocked her elbow across my knee and used it as pillow. \"You would've made a hell of a nurse. Not many people could have handled today.\"\n\n\"I'm sorry I didn't come back.\" I realized I was very sorry I made that mistake. I didn't want her to think less of me. I was feeling a bit wimpy and I wanted to be stronger.\n\n\"We are two sorry fucked-up individuals.\" She smiled. I smiled back. \"If my memory serves me correctly, this is just the calm before another storm. I better get something in my stomach so it doesn't hurt to bad.\" I stood up out of the chair and helped Mia up.\n\n\"You've done this before?\" She was still looking a bit weak. I kept her hand once she was standing.\n\n\"Seen it before. I was an RN in another life.\" She gripped my hand a little tighter and used me to steady her walking a bit. My survival now made a bit more sense. I had a strong desire to know more, but I didn't think it was the right time. She leaned against me as we walked back up to the house. It felt nice, sort of like the waves only a bit better.\n\n\"What would you like to eat?\" I asked as we entered the kitchen.\n\n\"Truthfully? Nothing,\" she said as she sat on the counter stool. \"But I better try to get something down. Bread, maybe?\" She didn't look too excited about the proposition. I began rummaging through the cabinets and pantry looking for bread-like items. I found crackers, pancake mix, corn bread mix, and various muffin mixes. No bread.\n\n\"Pancakes okay?\" It looked like they would be least invasive of the choices.\n\n\"Sure!, No syrup for me, though. Don't think I could handle the sugar.\" She was developing circles under her eyes. I wondered if she had slept at all last night. I grabbed the pancake mix and spent a few minutes trying to find a measuring cup and mixing spoon to go with a bowl. \"You don't cook much do you?\" She had been studying my assembly.",
        "\"Well, it is a new kitchen. Monica stocked it all, and I don't know where anything is yet.\" I added a stupid smile to try and cover my ignorance.\n\n\"The same Monica who told me that if I didn't detox, I would go to jail?\" Mia seemed truly intrigued by the web of Monica.\n\n\"Yep, and told me to help you detox or she wouldn't speak to me again.\" I didn't think before I spoke. I regretted my statement immediately and turned to Mia in attempt to rephrase.\n\n\"So you love this Monica?\" What? Where did that come from?\n\n\"No! Absolutely not! We don't even like each other.\" I kind of blurted it out quickly. I didn't want anyone thinking I had any romantic desires for Monica. \n\n\"So why would you agree to help me?\" She seemed intrigued as well as a bit agitated.\n\n\"She does things for me.\" I felt a bit nervous. I was screwing things up again. \"I'm not good with people, so I pay her to take care of things.\" I pointed around the house. \"All of this she did in three weeks.\" Saying it out loud sounded a bit ludicrous. I fell back to the truth and quietly added, \"I'm glad she made me do it.\" Mia looked at me funny.\n\n\"You're glad she made you clean up my puke?\" Mia was incredulous. I should never have opened my mouth. Why can't I ever think before I speak to other people? I couldn't look her in the eyes, so I looked at the floor.\n\n\"I'd do it again if it meant you would sit with me on the beach again.\" God, it sounded pathetic. I was pathetic. I heard a gasp and expected the worse. I wasn't going to hide from it this time. I lifted my head and Mia had a hand over her mouth. She had a strained look in her eyes. I guess she thought it was pathetic too. She shook her head and ran to the hall bathroom.\n\nThe retching started immediately followed by coughing and crying. She was in pain, and I felt it. I didn't make the pancakes fast enough. I ran to the bathroom with no idea what I was going to do about it. Her entire body went into convulsions each time she tried to throw up. Hardly anything was coming out, and you could see the pain in her eyes. There was nothing I could do. I sat down next to her and pulled her hair out of the toilet. I spent the next fifteen minutes trying not to cry.\n\nMia finally pulled back from the rim of the toilet wincing in pain. \"God, that hurt!\" There were tears down her face, and her eyes looked like they had just been punched. I grabbed a washcloth and soaked it with warm water. I sat back down and began to wipe her face clean. \"I like you too, Dale.\" She gave me a weak smile. Her eyes were completely bloodshot and underlined by dark moons, her nose was bright red and runny, and she was pale as a ghost. She was the most beautiful woman I had ever met. I hugged her to me.\n\nI finally got some water into her. I had her wrapped up in a blanket against me on the couch as another bout of shivering ran through her whole body. As I held her, I wondered how she broke through my walls. I stroked her hair and couldn't understand why I wanted to help her. I never wanted to help anyone before. I knew it wasn't because she saved my life, and it wasn't because of Monica's threats. I wanted her pain to go away. It hurt me to watch her. I ran my hand down her arm and saw the history of self abuse. Little bruised needle marks trying to heal. I didn't understand why I didn't find her appalling. I wondered if she would stay after she was better. A little fear began to fester. I shoved it aside. I knew where fear would lead. I would prefer that she left me than to shut her out again. \n\nThe night was long. I held Mia when she needed it and gave her space when she needed it. I always came back. She barely slept. Wave after wave of awfulness tore through her body. I cried when she wasn't looking. I have never seen anyone in such misery. She finally passed out around eight in the morning. I covered her and left her to sleep. I was so happy that it she was out of pain for the moment. I wasn't sure how much more she could take.\n\nI was just pouring a cup of coffee when the doorbell rang. I opened the door to Dr. Williams. \"Good morning, Doc,\" I said with a smile. Normally, a morning visitor would piss me off. \"Got some fresh coffee on. Like a cup?\"\n\n\"You're looking a bit more chipper than I expected. And yes, I would like one. Black.\" Wally smiled back and headed into the house. \"How's Mia?\" \n\n\"She's been sleeping for about an hour. She had a rough night, but we got through it.\" I poured him a cup of joe and handed it across the counter. He grabbed the cup and looked at me strangely.\n\n\"I've got to say, Mr. Tomlinson...\" I quickly held up my hand and interrupted.\n\n\"Please... Call me Dale.\" I'd never done that before. It just seemed the right thing to do, and it made me feel good.\n\n\"Well Dale, I have a really good idea of what happened in the last 24 hours.\" He was examining my face as I took another sip of coffee. \"I expected you to be a bit more frazzled. In fact I was surprised when I didn't get a phone call last night.\" I smiled. I didn't think I could explain it to him.\n\n\"I don't know how to explain it. We kind of got into a rhythm.\" I took another sip of coffee. For some reason, it tasted better than usual. \"I think I actually helped make it less horrible.\" I smiled at the thought. That is exactly what I did.\n\n\"You'd make a hell of a nurse.\" He nodded his head to me as he took another sip. I wondered if he thought the coffee was good. \"Not many people are built to handle a detox.\" I smiled inwardly at the compliment. He chuckled a bit, \"I think that Monica thought it was going to be a bit tougher on you.\" Now, that made me smile outwardly!\n\n\"Who knew? Yesterday, I would have agreed with her.\" No need to hide the fact that this was new to me also. I actually enjoyed surprising the doctor as much as myself. I hoped secretly that he would convey his thoughts to Monica as well. Wally pulled a pill bottle out of his pocket and laid it on the counter.\n\n\"Sometime today or tomorrow, the violent symptoms will cease.\" His voice slipped into a clinical tone. \"As soon as Mia can hold down food, she needs to start taking these vitamins.\" he was gesturing to the bottle. \"They should help rebuild her a bit quicker. The detox has a tendency to zap the body pretty hard.\" His expression became more serious, and he made sure he had my attention. \"Dale, the next part is a bit harder.\" I didn't like the sound of that.\n\n\"Detox will lower her tolerance for heroin. It is extremely important that she not begin using again.\" He again made sure he had my attention. \"Mia could easily overdose if she went back to her old patterns.\" Fuck! That wasn't at all a pleasant thought. I didn't even think someone would consider reuse after what I saw yesterday.\n\n\"You are going to have to find out why she started using and ended up driving that boat into the rocks.\" He was very serious, and I didn't like what he was implying. \n\n\"She was just stoned and lost control of the boat.\" I was trying to defend Mia. There is no way she meant to hit the rocks. His face became more sympathetic.\n\n\"Heroin doesn't remove all your inhibitions. It doesn't suddenly make you stupid. It removes the pain of life.\" He was having trouble explaining. \"She meant to hit those rocks, and she didn't expect to survive it.\" Oh God! I didn't want to hear this. Somehow I envisioned the heroin was some kind of accident that got out of hand. It was a much better history than what he was proposing.\n\n\"We have to find out why she did it.\" I was looking down at my coffee cup. I wasn't sure I wanted him to continue. \"She is not going to want to tell you.\" I remembered the pain when she told me to \"get the fuck out!\" I would take the puking any day over that. \"If she doesn't face her demons, her future is not good. We have to heal both her body and her mind.\" I looked up from my cup, and I knew my eyes were watering and my hands were shaking. His expression quickly changed. \n\n\"Oh shit! I didn't realize,\" Wally continued in a softer tone. \"I can bring in a professional to get her through this. This can get pretty painful, and feelings get hurt during the process.\" He looked at me with sorrowful expression. \"It's normal that you would feel a bond with your patient, but it's rarely healthy if you let it go too far.\" Suddenly I was pissed. That he would insinuate that my concern was some kind of normal bonding process that should be ignored. Mia wasn't just my patient. She was as much my nurse as I was hers.\n\n\"Mia and I are two sorry fucked-up individuals.\" I didn't care how it sounded. Wally looked shocked at my statement. \"We will get through this together and we don't need any psychiatrist screwing things up.\" I was looking him straight in the face. In the past, I would have left the room instead of entering into a confrontation. Not now, not with Mia at stake. \n\n\"Dale, I don't think...\" Wally was interrupted by a weak voice from the hallway.\n\n\"You heard him Doc.\" It was Mia, dressed in my robe and pale as ever, leaning against the wall. She was looking at me. \"I'm not going through this with anyone but Dale.\" Her smile was weak, but it felt like an ocean of waves. Wally looked between Mia and me a couple of times and sighed.\n\n\"Okay. If you two are still friends after this, I will eat my hat.\" He realized he couldn't stop it. \"I would still like to drop in and monitor your physical recovery Mia.\" I still couldn't believe she backed me up. In public. I answered for her.\n\n\"That would be great Doc. I would hate for her to be sick any longer than necessary.\" I realized I was still staring at Mia's smile and quickly returned to looking at Wally. He was shaking his head, wearing a smile.\n\n\"Not what I expected at all.\" He chuckled and held his hand out to me. I shook it and winked at Mia. \"I'll be back in two days to give you a physical, Mia.\" She gave him a weak wave. I showed him out the door. I gathered Mia in my arms.\n\n\"I was hoping you would sleep a bit longer.\" I whispered to her. She still looked weak. \n\n\"I got your back baby.\" I know she tried to sound strong, but it just kind of trickled out. So adorable. I brought her back to bed. She surprised me by dropping the robe before climbing naked into the bed. I felt guilty admiring her curves as I pulled the covers over her naked form. \"I am so tired... Just can't seem to stay asleep.\" She yawned as she said it.\n\n\"Be right back.\" I said and for some reason I kissed her forehead. It was cold and clammy but very soft. I headed to my office library room or at least what I envisioned Monica thought it should be. I looked across the shelves and picked up my 25-year-old copy of The Hobbit. Sitting on the desk was the book I was reading the day Mia saved my life. I knocked it into the trash. I was sick of my old rules and the book really sucked.\n\nI pulled a chair up next to Mia. I sat and propped my legs up on the edge of the bed. I opened the book and began to read. I always loved The Hobbit and the trilogy that followed. A story of the small and meek defeating evil and changing the course of all for the better. It got me through some pretty tough times. I wasn't sure it would suit Mia's literary taste. I just figured her mind needed to rest. I would read, and she only had to listen. I looked over between paragraphs. Her eyes were closed, but she was wearing a smile. I could tell she was still awake. I continued reading.\n\nBy the time I got to the second chapter, Mia was out cold. Her head had tilted to one side, and her mouth had a little drool hanging on for dear life. I closed the book and watched her for a few minutes before my head drooped down and I joined her in dreamland.\n\nI awoke later with a stiff neck. Sleeping in a chair has a penalty for those in their thirties. Mia was gone. I wasn't surprised at first. She had been getting more animated as the hours wore on. Then I remembered Bob's comments about old habits, and I got a bit scared. I searched the bathroom and the other bedrooms on the way down the hall. I picked up my pace and didn't slow down until I saw her sitting on a stool in the kitchen. She had her back to me, looking up at a cabinet full of SpaghettiOs. Embarrassment creep into my bones. \n\n\"Ahh, that's kind of a little obsession of mine.\" I scratched my head trying to figure a way to explain my childish tastes. She didn't move or respond. Something wasn't right. I walked carefully around the counter, my concern was rising. As I got close, she turned to me. There were tears streaming down her cheeks.\n\n\"Adrian loved those. Sometimes, it was the only thing I could get him to eat.\" I could see the pain in her eyes. I didn't understand the context, but I knew it hurt bad. I pulled her to my shoulder and closed the cabinet.\n\n\"I'll get rid of them.\" I didn't care if I ever ate another can. \"I'm so sorry you saw them.\" I didn't know what else to say. I had no idea why they triggered so much pain. \n\nShe pulled away from my shoulder. \"No, you'll keep them right there.\" Her crying had stopped, and the tears were smeared by my shirt. \"They are good memories: Adrian coming home from school, the kisses and hugs.\" She was tearing up again. \"I tried to get him to eat better, but he loved that crap.\" She was blubbering, half laughing, and half crying. I saw more pain, and I had no way to take it away. I asked the obvious question, the one I really didn't want an answer to, but I knew she had to answer for me. \n\n\"Adrian is your son?\" I gave it present tense, hoping I was wrong, but knowing where this type of pain comes from. I felt it when my Grandma died. She dropped her head back to my shoulder.\n\n\"Was.\" She said quietly. \"One minute, life was great, and the next, there was a cop at the door.\" She was crying and holding me tighter. \"One fucking accident, and my whole family was gone.\" Even though I knew it was coming, I wasn't prepared. I felt my Grandma's death all over again as Mia dredged up the memories of her loss. I think I knew where the \"get the fuck out of here!\" came from. God help us, we were two sorry fucked-up individuals. \n\nI led her to the couch in the living room, and we sat. I wiped the tears from my eyes and prepared to listen. \"Tell me about Adrian.\" I knew I had to know for her sake. He had to live again, if just for a moment in this room. \n\nI listened for over an hour as she told me about Adrian and his father Carlos: their lives and their dreams. Adrian was obviously in line to be the next President of these United States. She was married for eleven years before the accident. Adrian was ten at the time. I noticed the color coming back to her face as she went on about Adrian's exploits. I heard how he broke his arm climbing a tree and how he won a book contest, how he had drawings all over the house, and when he drew on the house when he was three. I envied Carlos those eleven years. She looked so alive reliving them. I could only imagine the amount of love in that household. When she was done, she sighed.\n\n\"I'm so sorry you lost them.\" It was a useless statement, but I couldn't just keep staring at her. She scooted over to me and laid her head on my chest. I wrapped my arms around her.\n\n\"I can't even remember if I told them that I loved them that morning. It really bothers me that I can't remember that.\" She wasn't crying or blubbering anymore. It was just a pain that wouldn't go away.\n\n\"Even if you didn't (which I doubt) they knew it.\" If her description was even half way true, they wouldn't have had any doubts.\"It didn't sound like your family was lacking in the love department.\" I absently stroked her hair. I really like playing with her hair. It seemed so natural to be running my fingers through it. Her timing was a bit bad, but she said what I had already figured out.\n\n\"Heroin lets me forget them.\" I was a little surprised that she didn't use past tense. \"I shoot up, and it all goes away.\" She fluttered her hand in the air. I didn't comment on her verb tense. I was hoping it was just a slip and not a Freudian one. \n\n\"You've got some of your color back.\" I smiled. \"What do you say to something to eat?\" I wanted to get off the subject of heroin, at least for one more day. She sat up.\n\n\"Dale, you haven't eaten either.\" She had a concerned look on her face. \"We've got to get something into you, too.\" She stood and headed to the kitchen with determination. I followed happily. She seemed to be getting better by the moment.\n\nWe finally cooked the pancakes. I had syrup on mine, and she shied away from the sugar. Dry pancakes and water seemed to suit her stomach. We talked about nothing special as we cooked and ate. It was as if she had lived here her whole life. We decided to spend part of the afternoon down on the beach. The summer sun was shining, and we had been cooped up inside too long. I carried down one of the pool loungers so no one would have to sit on the sand. We shared the dumb umbrella.\n\nShe was still in my robe. We would have to do something about that. I didn't even know where she lived. We lay listening to the waves. I tried not to stare as she exposed her legs to the warm air. They had a wisp of stubble but looked soft nonetheless. She probably also needed toiletries. In my mind, I was filling closets and bathrooms, and I realized I had her moving in. I knew I was moving too fast, but the thought was very pleasant. \n\n\"I don't want to use again, you know.\" It came out of nowhere. I was a little surprised that she was thinking about it.\n\n\"What?\" It was a place holder. I didn't have time to think, but I felt she wanted me to respond.\n\n\"I know I said it wrong. It just came out that way.\" She lifted her head up and looked at me. \"I can remember forgetting, and it was nice. I don't want to do it again though.\" She was still tempted, and it brought fear that I felt in my stomach.\n\n\"Then move in here.\" It was the only thing I could think of. I had to keep her away from her old life. \"I won't let you use again.\"\n\n\"You'd live with a junky?\" She looked back to the ocean. I could almost feel her shame.\n\n\"You and all your sins are welcome. You'll just have to pile them on top of mine.\" I guess it was the right thing to say. She got up and cuddled into my lounger. She folded her hand around my neck and pulled me to her lips. They were soft and warm and tasted of dry pancakes. I prayed mine tasted like syrup. I hadn't showered or slept in over a day. She didn't seem concerned, so I let it drop from my mind and just enjoyed the sweetest lips in the world. It was much better than the waves. I knew at that exact moment that I loved her. The world would tell me it was too soon, insane, or just lust. For once in my life, I truly didn't care what the world thought.\n\n\"I assume that was a yes,\" I said, smiling like a five-year-old at Christmas.\n\n\"This is insane! We hardly even know each other.\" She was holding both sides of my head and looking into my eyes. \"This could go so wrong.\" \n\n\"Letting you leave could only be worse.\" I pushed her hair back behind her ear. Even though they were still a bit bloodshot, I found her eyes very pretty. \"Stay with me.\" I asked again.\n\n\"Yes.\" She kissed me again, then laid her head on my shoulder. \"I really love it out here.\" We listened to the waves for a few minutes. But two unshowered people on the same lounger in the summer heat was a bit much. Mia stood up with a smile, grabbed my hand, and said, \"Come swimming with me.\" Her energy was returning with her color. I let her pull me out of the chair, and we headed back to the pool.\n\n\"I don't think I have a suit for you.\" I said stupidly. She smirked at my ignorance.\n\n\"Then you can't wear one either.\" I had slowed down a bit. For some reason, I felt my naked body might be a disappointment to her. The sun was still bright in the sky. My fantasies with her had always involved darkness and sheets on a bed. She sensed my hesitation and turned to face me. She grabbed my other hand and gently pulled me while walking backwards herself. She was wearing a mischievous smile. When we reached the pool patio she let go of my hands and slowly dropped the robe to the stones below. I had seen her naked while crying, sweating, and freezing. I had seen her naked in pain I wouldn't wish on an enemy. I had never seen her naked with eyes that matched her heavenly smile. ",
        "\"You're stunning.\" I realized I wasn't looking at her face. I was entranced by her womanly curves and two of the most perfect breasts. Maturity had relaxed them ever so slightly which made them all the more inviting. I could have spent a lifetime exploring them.\n\n\"Compliments won't get you out of it.\" She had moved her hands to her hips and she widened her smile. All I really saw was breasts when I began unbuttoning my shirt. Mia knew where my eyes were. She giggled and made her breasts bounce. I ripped the last button off my shirt, and it went bouncing into the grass. I dropped my shirt onto the patio and began undoing my pants. The stupid zipper got stuck for a moment, which forced me to move my eyes. I didn't realize how aroused I had become until I looked down. Embarrassed, I lowered my pants slowly trying to think about mergers and stock reports. It didn't work\u2014all I could think of were those breasts. My boxers were terribly tented, and I tried to cover myself. \n\nMia moved in close and pushed her breasts into my chest as she leaned into me for a passionate kiss. Her right hand traveled down my side and into the elastic of my boxers. She gently wrapped her hand around my hard-on, and I barely held back a groan. \"I'm glad I turn you on.\" She whispered in my ear.\n\n\"God, I want to swim with you.\" I gasped as she gave me a little squeeze. Mia broke out in laughter. It washed over me as I realized what I said and began to join in. I hadn't realized that she was turning me around, steering me by my cock. She pushed. The last thing I saw when I entered the pool was two gorgeous breasts bouncing from the effort. I tried not to laugh underwater as I removed my now soaking shorts. It was difficult with a raging hard-on. I swam to the surface to find her still laughing at the side of the pool. God, she was beautiful. I threw my now-wadded shorts at her and got her right in the leg. She gave me a faux angry look and dove in after me.\n\nI didn't swim away. I let her catch me. I just pulled her lips to mine and kissed her in the sun. I felt young again. The world couldn't be more perfect. We swam and played. I splashed her and let her win the ensuing water war. We cuddled, drifted, and talked of unimportant things. We just simply enjoyed each other. We ended up on the shallow end stairs. I was caressing her thigh when I let my hand slowly drift between her legs. Her hand met mine there, and she lifted it to her lips and kissed it.\n\n\"Dale, my body is still kind of messed up. It's going to take a few more days before I'm ready for anything more.\" Mia sounded like she thought she was disappointing me. I thought I was being rude.\n\n\"I'm sorry.\" I said stroking the side of her face. \"I didn't mean to move so fast.\" I vowed I would let her set the speed from here on. She floated on top of me practically nose to nose. I felt her hand close around my manhood.\n\n\"I'm not sorry you tried.\" She whispered. She began slowly stroking my member, her eyes inches from mine. \"I do want to have you inside me.\" The intensity of her eyes and her words generated electricity in my groin. She smiled when she felt my hips react to her manipulations. She became more deliberate in her strokes. \"You won't be able to keep me off you.\" Her hand was speeding up, and my hips began to jerk uncontrollably. I moaned into her mouth, my eyes never leaving hers. I tenderly grabbed her hips to keep myself in place. She had me and she knew it. \"We'll make love over and over my darling.\" Weirdly, it was the \"my darling\" that sent me over the edge. A simple term of endearment.\n\n\"Oh, God,\" I moaned as her mouth closed over mine. My hips jerked and I spewed into the water. Her tongue began to fight with mine as I came again. Her breasts dragged across my chest and caused my climax to lengthen. My legs were no longer responding to my direction and forced my hips forward as the last of my orgasm faded into the water. She was still tenderly caressing my cock as our lips became unlocked.\n\nI couldn't believe how wonderful a real sexual experience was. I have paid to make my dick happy in the past, but it never really lived up to the hype. When the woman was participating without any cash incentive, just wanting to make me feel good, it was on a different level all by itself. \n\n\"I really love swimming with you.\" I said dreamily into her eyes. I loved to hear her laughter. After seeing her in so much pain, it was heaven-sent. I held her as my body recovered and her laughter subsided. I almost told her I loved her right there. I was afraid it would scare her and send her running. No, I could wait. I just gave her a kiss instead. \"I need a shower.\"\n\n\"And a shave,\" she said stroking my shadow. I stood on the steps and offered her my hand. I rose, naked, with a beautiful woman on my arm. Three days ago, I was a confirmed bachelor satisfied with my ignorance. I only really trusted one other person, and it took Monica years to earn that trust. I have entrusted Mia with my heart in two days. It was risky, and I don't hurt well. I would just have to never give her a reason to crush it.\n\nWithout asking, I steered Mia to the bathroom and started the shower. She didn't hesitate or question my intentions. It was surreal compared to my past experiences with people. She followed me into the steam with a smile matching mine. I wanted to know all of her. I wanted her to know that I wanted to know all of her.\n\nI soaked Mia's hair and massaged in some shampoo. Her hair seemed so silky as I pulled the shampoo down to the long ends that fell to the small of her back. She loved when I spend time at the base of her neck and behind the ears. It was all very sensual until I got shampoo in her eye. It broke the spell and she laughed, looking at me with one eye squeezed shut. I wiped what I could and steered her to the shower spray. She leaned back into the stream to wash out the shampoo. This move pushed her chest out. It was too beautiful to ignore. I grabbed the bar of soap and began to slowly suds up her breasts. It brought a giggle since she was still preoccupied trying to clear her eye. \n\nI was mesmerized. I had never had a pair of breasts to play with. They were soft but firm. I ran my fingers across the nipples, and they grew. I felt proud making them stand up like that. I liked lifting them and watching them fall back to natural. They were so smooth. \"Are they really that dirty?\" I looked past Mia's smile and into her eyes.\n\n\"Filthy, absolutely filthy!\" I tried to look serious to make up for my moment of obsession. It was hard to hold back a smile. Playing with her boobies was way too much fun. She leaned into me and gave me a little peck but never removed my roving hands. I continued with the rest of her body more clinically. I spent only seconds between her legs trying to not make any sexual overtures. I spent extra time collecting mini moans as I rubbed her back and shoulders with sudsy hands. This was without a doubt the best shower I had ever had.\n\nMia grabbed the soap and began exploring my body. I enjoyed her tender hands stroking my chest and got quite a tinge when she squeezed my butt. When she arrived at my half mast cock, she looked into my eyes and began slowly stroking it. My dick got a bit angry when I grabbed her hand away and brought it to my lips for a kiss. \"I want to wait for you.\" I wanted it to sound like it was laced with love, but I didn't realize how much soap was on her hand. I kind spit it out.\n\nMia ignored the how and just heard what I said. Her lips locked on mine and I our tongues did a slow waltz. Even with the slight taste of soap mixing with the kiss, neither of us wanted it to stop. It was only the need to take a proper breath that finally ended it. The kiss brought me to full arousal. I ignored it as I rinsed myself clean. A small case of blue balls was worth what that kiss promised. I shut off the shower and passed out the towels. \n\nWhen I handed her my robe, I remembered that Mia still didn't have any clothes. \"Should we stop by your place to pick up some of your things?\" I was surprised when she hesitated, almost like she wasn't sure how to answer. She made a few aborted attempts to say something, looking at the floor then up to me.\n\n\"I'm really not ready to go back there.\" Her face was sad, but her eyes looked hopefully at me. I knew I was going to accept the statement. I also knew she was hiding something more sinister than memories. It wasn't time for her to tell me. I loved her, so I knew I might let her get away with never telling me. I was still curious. \n\n\"Well, we can dress you funny in my sweats and a T-shirt and go shopping tomorrow.\" I made it sound like it would be fun. I wanted her to know I wouldn't press on her past.\n\n\"Dale, I'm not sure I can afford a shopping trip right now.\" She started to re-dry her legs to give her an excuse not to look up at me. I never even considered that she would think I intended her to pay for it. I was kind of flabbergasted at the thought. I spoke without thinking.\n\n\"Mia, money is the only thing we never have to worry about.\" It just came out. I could have said it a hundred different ways that would have come out better. I couldn't believe I just let on that my money was her money. I might as well have asked her to marry me. Mia stopped moving. When she lifted up her watery eyes, I got scared.\n\n\"There are things you don't know about me.\" She wasn't looking at me. She was looking at the wall behind me. \"I'm not a good person and certainly don't deserve any of this.\" Tears were flowing and my heart was hurting. \"I won't ever tell you, because I couldn't stand you hating me.\" Her head dropped back to the floor, and her hand covered her eyes. I dropped my naked ass to the floor, and my head fell forward in a slump.\n\n\"I didn't want to say it that way. It just came out.\" I was blubbering more, chastising myself. \"I don't know how to talk to girls. I've never known how to talk to anyone.\" I was trying desperately not to start crying myself. \"I'm sorry if I like you too much. I just don't know what do or say.\" I was sure I just screwed everything up. Mia started crying harder. I looked up at her, \"I don't care about your secrets; I just don't want you to leave.\" She looked down to me.\n\n\"We are two sorry fucked-up individuals.\" It came out between her sobs. It sounded so much better than \"get the fuck out of here!\" but I started sympathetically tearing anyway.\n\n\"I want to buy clothes and stuff.\" It sounded stupid when it came out, but out it came none the less. I was trying not to start sobbing. Mia dropped to the floor with me, still crying, and hugged me close.\n\n\"Okay,\" she half cried into my ear. Thank God I didn't scare her off. We stayed on the floor for what seemed like forever. We just hugged until we could face each other again without tearing up.\n\n\"I don't feel like shaving now.\" I said as a matter of fact.\n\n\"I don't care if you do or not.\" She said as she stood up and pulled me up with her. She led me to the bed and dropped the robe and climbed in. I shut off the lights and tucked my naked body next to hers. We didn't say a word. We just held each other until we fell asleep.\n\nI woke before Mia. I felt much better than I did when I crawled into bed. Mia was still there, and she had slept all night. I carefully pulled my tingling arm from under her neck. She smiled in her sleep, but the even breathing continued. I rose slowly, quietly donned some boxers, and left the room. What I needed was some coffee and space to think. Mia thought her secrets were going to come between us. She could have raped and murdered the pope for all I cared, but it was her thoughts that counted, not mine. The only way past this was to find out what her secrets were and prove to her that I didn't give a shit. It was past eight so I grabbed my phone and headed outside out of earshot.\n\n\"Hi this is Dale Tomlinson. I would like to talk with whoever handles my account.\" The receptionist sounded pleasant enough.\n\n\"No, I am sure Monica is fine. I just need to know who handles my account.\" I guess letting Monica handle everything was a bit extreme.\n\n\"Then Bob Farring is who I need to speak with please.\" This type of conversation used to piss me off. Today I empathized with the receptionist's confusion.\n\n\"Hi Bob, this is Dale Tomlinson.\" Finally I had the right person.\n\n\"No, Monica is just fine.\" I guess Monica was pretty ingrained into my business.\n\n\"You guys use investigators, right?\" Now we were moving in the right direction.\n\n\"Good! I want you to do a discreet background check on someone for me. Her name is Mia Perez, and I believe she lives somewhere in downtown Capersfield. I know she used to be an RN.\" I waited for Bob to write it all down.\n\n\"No, not a whole life history. Just her current address, employment, what she's done for the last few years, etc.\" Her long past was probably cleaner than mine. I just needed the more current data.\n\n\"Bob, no one but you and the investigator will know about this. Bill it any way you want, but keep it private.\" I wasn't shocked by his next question.\n\n\"No, Monica doesn't need to know about this either. Send me a text when you have what I need, and I will call when I can.\" Bob was still a little surprised to deal with me directly.\n\n\"Thanks, Bob! You have a good day too.\" I wasn't sure why I felt the need to be pleasant. I went back in the house and started to make some coffee. I knew I had to keep this from Mia. I was betraying her trust and digging into what she wanted hidden. Love makes you do some really fucked-up things.\n\nMia followed the smell of the coffee into the kitchen. She was again wearing my robe. I was beginning to hate that robe. \"Would you like a cup of coffee?\" I asked as I sipped from my cup. She thought about it for a moment, then shook her head no.\n\n\"I don't think I'm ready for java just yet. Maybe tomorrow.\" She pulled up a stool and sat across the counter from me.\n\n\"You slept the whole night. Got to be a good sign.\" I gave her a small smile. I was still a little nervous that I might have pushed the envelope too far last night.\n\n\"I do feel better.\" She smiled back. \"Do we have any cereal?\" I almost jumped out of my skin. I didn't think she even knew she used the word \"we.\" I started looking through the cabinets, trying not to look too ecstatic, not wanting a replay of last night.\n\n\"Here! I found Raisin Bran and Cinnamon Chex.\" I felt like I had found gold.\n\n\"Oh, Chex please.\" I went to the fridge, praying that Monica had stocked milk. I found 2%, well under the expiration date. I placed milk and Chex in front of Mia and fished out a bowl and spoon. Why had cereal suddenly become so exciting? Dr. Williams's conversation came back to me, and I grabbed the vitamins from behind me and placed them in front of Mia.\n\n\"Doctor's orders.\" I think I sounded a little motherly. She just smiled and popped the cap and dumped one into her hand. It was the size of a VW. She frowned a bit.\n\n\"I'm going to need some water.\" She rolled it around in her hand. I quickly retrieved a glass and filled it with water. It struck me that the last person I had ever served anything too was my Grandma. Here I was, grabbing items on command for Mia. I kept the revelation to myself as I watched Mia struggle to swallow the horse pill. She made a horrendous face. \n\n\"Do they dip those is shit before they bottle them?\" She gagged a couple of times before she took another sip of the water. I laughed at her reaction, which I quickly realized was the wrong thing to do. She pushed the bottle toward me smiling.\n\n\"You need your vitamins too, Dale.\" It was an obvious challenge. I had no intention of wimping out in front of Mia. I grabbed the bottle with bravado and spilled a pill into my hand. I tossed it to the back of my throat where it immediately got stuck. The flavor began to spread from the back of my tongue to the front. \"Shit\" was a kind description of the flavor. I guess my expression told the story because Mia burst into laughter. I grabbed her glass of water and drank with gusto. Anything to get that rancid flavor out of my mouth.\n\n\"That was horrible!\" I exclaimed as Mia covered her mouth trying to hide more laughter. I loved her laughter. It brightened the whole room. I had to find a less disgusting way to generate more. \"You have some breakfast. I'm going to clean up and shave so we can go shopping.\" I walked around the counter and gave her a quick peck on the cheek. It felt good to share a bit of affection on a whim.\n\n\"Aren't you going to eat?\" She seemed a little concerned.\n\n\"Naw, never been a breakfast person.\" I kept going toward the bathroom. It took about 20 minutes to clean up and locate some sweats that might not make Mia look like a complete fool. I had some T-shirts that had shrunk a while ago. I had no idea why I didn't throw them away years ago. Good thing I didn't. They might be the only things that would come close to fitting Mia.\n\nMy nose grabbed hold of pleasant scent. I was suddenly hungry, and I smiled my way back to the kitchen. Mia was stirring a pot of SpaghettiOs and heard me walking up behind her. \"I have no idea why you and Adrian like this stuff.\" I could feel her smile through the back of her head. I sat at the counter.\n\n\"It's packed with memories. I grew up on the stuff.\" I waited patiently why Mia filled a bowl and served me.\n\n\"Your mom make it for you too?\" She leaned on her elbows as I ate the first spoonful. It was as good as ever.\n\n\"My grandmother raised me actually.\" I smiled, remembering coming home from school with the same scent lofting through the air.\n\n\"Tell me about her.\" Mia settled on a stool and waited for me to respond. I did. I told her about the most special woman I had ever known. I had never really talked to anyone about my Grandma. Mia listened intently to my words. I left out some of the reasons why I thought of my Grandma's place as sanctuary. They seemed trivial now. It was so important a week ago, but today, right now, they were just history.\n\n\"Is that her on the wall?\" Mia was pointing to the small picture hanging above the credenza in the hall.\n\n\"Yes, that's her.\" I felt proud pointing it out to someone. She was such a wonderful woman. Mia walked up to the picture and looked at it more closely. It pleased me that someone else would notice the picture. \n\n\"I love the butterfly broach she's wearing.\" Mia was touching it with her finger like it was real.\n\n\"It was her favorite.\" I realized I kind of missed that broach. \"Whenever she wore it, I knew she was happy. I think my Grandpa gave it to her.\" I wondered where it was now. \"I bet it's in storage somewhere, Monica would know. She is the one who set up the hospice and the funeral and took care of everything.\" I had forgotten about that. \"That's when I first met Monica.\"\n\n\"Your Grandma must have loved you a lot.\" Mia stated the obvious as she returned to the kitchen.\n\n\"And I her.\" I added as I spooned another bit of heaven in my mouth. \"It was hard when I lost her.\" I didn't know why I added the last part. I never really shared my feelings about her death with anyone.\n\n\"I hope our memories never die.\" Mia was staring off into space.\n\n\"They never will as long as SpaghettiOs exist.\" I smiled and took another spoonful. I could see that Mia liked that thought, stupid as it was. She reached out and caressed my cheek.\n\n\"I like the sound of that.\" She smiled and started toward the bedroom. \"I going to get cleaned up.\" I finished my SpaghettiOs.\n\nMia returned wearing sweat pants obviously too big for her, cinched tight at the waist. She was wearing a pair of my flip flops, the only footwear that even came close to fitting. The T-shirt would never work. It was quite evident that she wasn't wearing a bra. She went back and returned with two T-shirts on. That was much better. At least her nipples weren't advertising. Mia thought my concern was silly, but she humored me with the additional shirt.",
        "For someone so concerned with what I thought of her, she had no inhibitions with other people. The poor guy at the cash register at the clothing store was left in a terrible state.\n\n\"Ma'am, these panties are short a pair.\" He thought he was being helpful by pointing out the missing merchandise.\n\n\"That's because I'm wearing one.\" She said it with a straight face, never offering any reason as to why. He was a little flustered but kept ringing up the other items. He ran through a couple of bras and then found an unattached bra tag.\n\n\"Ma'am, there's no ...\" Mia just smiled and winked at him. He rang up the missing bra and continued through other missing items, never asking again. Mia was looking good in a new pair of khaki shorts and a light blue pullover shirt. She had on a nice pair of sneakers that made her look a bit energetic. I liked the new Mia. The clerk rattled off some total, and I handed him my card.\n\n\"Horrible suitcase accident.\" I smiled at him. I think he believed me. Mia was snickering. We moved to the pharmacy down the street. Mia embarrassingly told me she was going to get me a new toothbrush too. Seems she had been secretly using mine. I laughed. It was kind of sexy to me. She thought she was being gross. I had no idea why sticking her tongue in my mouth was okay, but using my toothbrush was gross.\n\nIt took us two trips to bring all the booty inside the house. I was pleased when she started to put it all away in the master bedroom. I was afraid she might try and claim her own bedroom. I was relegated to the bottom shelf in the medicine cabinet. I just sat on the bed and watched her continue to mark her territory in the closet and dresser drawers. I remembered that she must had done it before with Carlos. It was just natural for her. I simply loved the idea of her becoming part of my life. \n\nWe ordered in Chinese and spent the evening watching movies. Mia ate a lot of rice, and I scarfed down most of the meat and veggies. I wanted to pop a bottle of wine but thought better of it. Any drug right now would be a bad drug. To me, Mia looked fully recovered, but I knew the effects of heroin would be with her for a long time. \n\nWhen the last movie ended, Mia grabbed my hand and took me to the bedroom. I was grateful that she didn't purchase any pajamas. She disrobed to all her glory. We cuddled ourselves to sleep again. She was my ocean.\n\nThe morning brought Dr. Wally Williams back. He examined Mia in the bedroom and returned with her about twenty minutes later. \"I've got to say Dale, you're a hell of a nurse.\" He was smiling at me. \"Mia is in much better shape than should be expected. Her vitals are back to normal, and she seems to have skipped of few days of ugliness.\" Mia was obviously pleased with results. \"I have to say Mia, you look a lot happier than most of my detox patients at this stage.\"\n\n\"Dale has been taking good care of me.\" Mia and I shared a smile that was not lost on the doctor.\n\n\"Mia was telling me about your beach. Mind taking me for tour?\" I saw Mia fold her hands across her chest, and she seemed to lose a bit of confidence. She sensed she wasn't invited. The doctor was already heading toward the sliding glass door, not waiting for my agreement.\n\n\"Sure Doc, it's a quick walk.\" I gave Mia a reassuring look and followed the doctor to the door. He waited until he was sure he was out of earshot of Mia.\n\n\"Dale, it looks like you two are living together.\" He made it sound like it was bad thing. I wasn't really concerned about his moral opinions. I just wanted him to make sure Mia was physically okay.\n\n\"And it's done both of us a world of good.\" I was sporting a relaxed smile. I was committed to my course of action and I wasn't even sure convincing him was worth the time. He paused for a moment considering my response.\n\n\"How smitten are you?\" He wasn't beating around the bush. I could almost hear the gears moving in his head as he analyzed the situation. I saw no need to hide the obvious since he suspected anyway.\n\n\"Fully and completely.\" I gave him the same confident smile.\n\n\"How do you think she feels?\" I didn't expect that question. I thought he was going to just lecture me on how foolish I was. I had to think a second.\n\n\"She's terrified I will find out about her past.\" I didn't add that I thought she was falling in love with me albeit a bit slower than I was. He stopped walking and thought deeply.\n\n\"This can go badly for her. All though she doesn't look it, she's fragile right now. If for any reason she thinks you are rejecting her, she will return to her old habits.\" He sounded like he didn't like the whole situation. \"You don't even really know Mia. What if you don't like what's in her past?\"\n\n\"I'm pretty sure I won't like it. I won't let it stop us though.\" I stopped smiling as the doctor tried to put doubts in my head. \"In fact, I think me knowing is absolutely necessary.\" I had already started on this train of thought. This conversation was just solidifying it. Wally shook his head and smiled.\n\n\"This was not what I was expecting at all.\" He wrapped his arm around my shoulders. \"You are an insane man, Dale. I truly hope this works out for the both of you.\" We started walking again down towards the beach. \"She's not going to want to tell you everything, you know.\"\n\n\"I'm working on finding out myself. I have some people looking into things.\" I wasn't sure why I was confiding in him, but he seemed to have Mia's health and well being on top of his list. He just chuckled.\n\n\"Damn you live dangerously.\" He was shaking his head again. \"I wouldn't want to be anywhere near her when she finds out. You really love her, don't you?\"\n\n\"With all my heart.\" I stopped walking. I just admitted it out loud again.\n\n\"I did not expect this at all.\" He looked at me. \"You know a lot of people aren't going to understand this.\" I laughed.\n\n\"Wally, I am very practiced at ignoring people. I couldn't care less what anyone thinks about Mia and me. They will just have to get over it.\" It felt good to think that my past isolation had a purpose. We continued down to the beach.\n\n\"This is actually pretty nice. Kind of peaceful.\" Wally was admiring the view as the waves gently crashed at the breakers. \"You're going to have to find out why she tried to kill herself.\" I didn't like hearing it put that way. I knew it was true, but I wished he would use more tactful language.\n\n\"I know, and I will.\" I wasn't looking forward to that part. I didn't want to think about it right now. I felt my phone buzz in my pocket. I didn't have any friends, so it could only be one reason. I pulled it out and saw a text from Bob Farring that contained only a phone number. \"I have to make a phone call, Wally. Meet you back at the house?\" He agreed and headed back up. I tapped the number.\n\nA gruff voice I didn't recognize answered the phone. \"This is Dale Tomlinson; I'm looking for Bob Farring.\" I kind of expected a receptionist or Bob.\n\n\"Mr. Tomlinson, I'm Frank Talbot. I was hired by Bob to look into some issues for you. Due to the direction the investigation took, I felt I should talk to you directly.\" He was speaking rather quickly. \"I felt some discretion may be required. Are you related to Ms. Perez?\"\n\n\"Ah, no, Frank. I am just concerned about her.\" I was quite sure I wanted him ignorant of my desired relationship.\n\n\"I want to warn you that you may not like what you hear. If she means anything to you, you can't un-hear it later.\" What the hell is he preparing me for? \n\n\"Just give me the report Frank.\" I braced myself.\n\n\"Ms. Perez was an RN about 3 years ago at St. Vincent's. She was the sole survivor of a car accident that killed her family on March 23rd, 3 years ago.\" Survivor? I thought she said she was at home. I interrupted.\n\n\"She was in the car?\" I had to know everything. \n\n\"She was driving, Mr. Tomlinson.\" Good God! She's blaming herself. \"The report listed distracted driving as the cause.\" He paused for a moment, then continued when I didn't interject again. \"Ms. Perez stopped showing up for work after the accident and was terminated about four months after the accident. She had refused counseling, and the hospital had to let her go.\" Another pause, then he continued, \"In October of that year her home was repossessed by the bank. I was unable to find where she went next. About six months ago she surfaced at the Causeway Apartments. Suite Number 224. The \"suites\" are basically one room apartments paid weekly. The Causeway Apartments are in a seedy part of town.\" Frank paused again. \"Do you still want me to continue Mr. Tomlinson?\"\n\n\"Yes.\" I wasn't feeling very well anymore. \n\n\"By the time she arrived there, she was addicted to heroin.\" He paused again, then continued into my silence. \"She earned money for her habit through prostitution.\" He spoke the last sentence quickly and moved on. My hands were shaking. \"She is currently two weeks in arrears for the apartment. Her belongings are now in storage on site, and no one knows her current location.\" I wasn't really prepared for this much. I now knew why she hated herself. I knew why she would never tell me everything. Fuck me! I still loved her. I had to find the out the rest.\n\n\"Frank, I really appreciate your discretion.\" I paused while I collected my thoughts. \"I just purchased a small boat to replace one Ms. Perez wrecked. Bob will have the owner information. I need to know what happened four nights ago when the boat was wrecked.\"\n\n\"I can look into it, Mr. Tomlinson, but it's my experience that these things never seem to get better.\" He was a bit hesitant to continue. I think he sensed that I was more than just concerned.\n\n\"Just do it Frank. Double your normal rate and contact me only.\" The rest of the world will just have to guess.\n\n\"It will take me a day or two. I'll get back to you when I have something.\" He was all business.\n\n\"Thank you Frank.\" I hung up the phone. I wasn't sure anymore about confronting Mia. There was a bit more pain than I was expecting. I wiped my eyes dry, put on a smile, and headed back to the house. \n\nMia was laughing with Bob when I entered. I caught a quick imitation of my expression attempting to swallow a vitamin on Mia's face. New clothes, nice house, and normal conversation. She didn't look like she belonged to her past anymore. I wasn't looking forward to disturbing her new image. Wally saw me walking in.\n\n\"Thanks for the tour Dale.\" He was all smiles.\"I've got to get back to the grind. It takes everything I've got to keep that clinic going.\" He patted Mia on the shoulder and headed toward the door. \"I am so happy you're doing so well.\" Mia kissed his cheek and sent him on his way. As soon as the door closed her expression turned darker and she turned to me.\n\n\"Am I allowed to know what you two were talking about on the beach.\" She had a determined look on her face, and I could sense a little fear behind it.\n\n\"Wally thinks it's a bad idea that I've gotten so close to you.\" I felt a little honesty would be best. I may keep things from her, but lying wasn't a good option. She sighed.\n\n\"He's right, you know. I'm not really a good person to get close to.\" She looked at me with a sad expression.\n\n\"He wasn't worried about me, he was worried about you. He was afraid I might change my mind and cause you to relapse.\" I saw a shiver run up her spine, and a little fear appear in her eyes. I felt a little more honesty was necessary. I caught her eyes with mine. \"I told him I was fully committed to you.\" Mia dropped her guard and moved quickly into my arms.\n\n\"I don't deserve you.\" She was holding me very tight. I smiled inside knowing it was I who didn't deserve her. I pissed on the world for so long that I should have died a lonely old man. I now saw a shared future. I had to get her to drop her past like she has gotten me to forget mine. I didn't care who she used to be, I only cared who she was now.\n\n\"I have to go out and take care of some business this morning. Can I leave you alone for a few hours?\" I smiled and gave her a quick kiss. She kissed me back a bit longer.\n\n\"I'm not going anywhere.\" She was getting more comfortable with me. I could feel it in the way she caressed the back of my neck and the look in her eyes. God, I didn't want to see her in tears again. \n\nI grabbed my keys and drove the SUV downtown. The navigator was off by few blocks so I had to circle around a bit. \"Seedy\" was a nice way of describing this area. I finally found the Causeway Apartments. It looked more like an old run-down hotel. There was an old guy in a grey beard on the front stoop rocking back and forth. It looked like he had deteriorated with the structure. \n\nI wasn't confident that my vehicle was safe parked here, but I had no good options. I should have paid Frank to come with me. I parked as close as I could get, hopped out, and locked it twice. I walked up to the old man. \"Is there a landlord here?\"\n\n\"More like the land king.\" He started laughing at his joke. I could smell his foul breath even though I was a good five feet away. \"First door on the left. Can you spare some change?\" He held a liver-spotted quivering hand. Screw it, I thought, at least he provided the information first. I reached into my pocket and loosened a ten by touch. I didn't want to pull out a wad of bills on this street. I handed him the ten.\n\n\"Watch my car, will you?\" I just nodded to him as I walked past.\n\n\"Ain't no one gonna touch it Mister. Not with Freddy on the job.\" He was smiling pretty well. I saw that he was missing about half his teeth. Surprisingly, there was double door entry way to the place. It smelled like stale alcohol, but it must help with the weather. I pushed through the second set and was met with another smell. Unwashed dog was the only thing that was close. I wrinkled my nose and knocked on Suite 101 on the left.\n\nA man slightly bigger than me in a stained wife beater T-shirt answered the door. \"What you want?\" He sounded like he grew up on the street and was proud of it.\n\n\"I am here to bring Mia Perez's account up to date and pick up her things.\" I wasn't sure I should have put it quite that way. I felt it may have come off a bit snobbish. He just smiled.\n\n\"She don't pay with money asshole, and I ain't interested in no blowjob from you.\" I wasn't prepared for that. The image of Mia on her knees before this piece of shit hit my brain like a ton of bricks. My fist shot forward before I had a chance to consider where I was. I connected with his face before he had a chance to drop his shitty grin. He dropped on his ass like a sack of potatoes, and blood started coming out of his nose. I had never hit anyone in my life before. My hand was in extreme pain. I struggled to ignore it. The landlord's expression promised my impending death. He rose, keeping a careful eye on me.\n\nI pulled my money clip out of my pocket. \"My investigator has told me that Mia has stayed here for six months.\" I started counting out bills and he slowed his rise. \"I have no idea what one of these dumps cost.\" I kept snapping more bills off the clip. He returned to his feet and took a half a step away from me. His nose was dripping blood on the floor. He didn't seem bothered by the fact. \"This is five thousand dollars that says she was a model tenant, an angel of virtue, and always current with the rent.\" I handed him the money. He understood immediately.\n\n\"I'm sorry I insulted her, Sir.\" He took the money from my hand slowly. \"I mistaked the name for someone else. Where would you like Ms. Perez's belongings?\" Greed is a wonderful motivator.\n\n\"The black SUV up front.\" I handed him another hundred. \"Hire some help if you need to. Lose anything that looks like it might be related to drugs or her old profession.\" He nodded his head.\n\n\"Bobby get out here! We gots work to do.\" He was yelling back into the apartment. A younger carbon copy of the landlord appeared from around the corner.\n\n\"Damn, Pops! Who did your face?\" He was eyeing me with suspicion.\n\n\"I ran into the door. We got to load Ms. Perez's belongings into this gentleman's SUV.\" He was pointing at me. The son didn't grasp the \"gentleman\" reference and started to speak.\n\n\"You mean that whor...\" His father's hand moved much quicker than mine ever could and slapped his son across the face. \n\n\"We don't make disparaging comments about our best tenants.\" The landlord smiled at me and handed his son the hundred. \"Let's get her stuff loaded.\" Bobby moved off with renewed vigor after pocketing the hundred. I returned outside to Freddy guarding my car. He was leaned up against it like he owned it.\n\n\"Thank you Freddy.\" I smiled at him and received a toothless grin in return. It took the father and son team fifteen minutes to load up the five boxes that made up Mia's life. Bobby must have heard the whole story, because he apologized to me at first sighting. After the SUV was loaded, the landlord came up and indicated they were done.\n\n\"I removed some stuff you didn't want to see.\" He looked down toward me. He had a tissue stuffed his right nostril. \"Everything else is there; we ain't no thieves.\" Honor among slime, I thought to myself.\n\n\"Thank you,\" I said. I entered my vehicle and drove away. As soon as I was out of sight, I took a good look at my throbbing hand. It was beginning to bruise and was a bit stiff. I flexed it and figured there were no broken bones. I remembered the feeling when I saw the landlord fall on his ass. It felt good to defend Mia's honor even though it was unwarranted. I conveniently forgot that I would be in the hospital if the landlord wasn't so greedy. I drove home the victor.\n\nI found the house empty when I returned. I panicked, kicking myself for leaving her alone. I ran to each room and checked the bathrooms. I grabbed my phone and was about to dial Monica when I spotted some black hair at the top of a lounger under the umbrella. I stopped to catch my breath and laughed to myself. That is exactly where I would be if I were her. I donned a set of swim trunks and headed down.\n\nI found her sound asleep with her finger three chapters deep into The Hobbit. \"My fantasy woman\" was my only thought. I moved the umbrella to extend her shade time and pulled the other lounger close. I quietly lay on my side to watch her sleep. She was wearing one of the new swimsuits we bought yesterday. I wished it could have been the white bikini. This was a full suit that still revealed her curves. I loved those curves. I watched her chest go up and down slowly almost in time with the waves. My beach was so much better with her on it. It took only a few minutes before I nodded off.\n\nI was awakened later by a soft set of lips kissing my hand. I open my eyes and was met by a quick kiss. \"Whose face did this to your hand?\" She was lightly caressing my now black and blue knuckles. It looked a lot worse than it felt. There was concern in her eyes. I was about to lie about how it happened. It would just be insulting; she knew why my hand was bruised. \n\n\"I don't want to tell you right now.\" I looked into her eyes and prayed she wouldn't push. She shrugged her shoulders.\n\n\"Then I probably don't want to know.\" She grabbed my good hand and pulled up. \"It needs some ice though.\" She was leading me back to the house. She looked good in her suit. I was hanging back half a step watching her cute butt cheeks go up and down as she made the incline. She caught me out of the corner of her eye. \"Stop watching my fat ass,\" she said, smiling as she spun around, hiding her behind.\n\n\"Sexy butt, sexy breasts. I don't care which way you walk.\" I laughed as she began to blush. The way she filled out the suit, I wasn't sure if I would prefer the bikini. She built an ice pack inside of a wet towel just like Grandma. I sat on a stool. She pulled up next to me and placed the ice pack across my knuckles. She held it there while she stroked my arm with her other hand. I felt a tremor in her hand as she caressed my arm. I looked up and realized she was putting things together. Her eyes were beginning to water.",
        "\"I'm not going to like what you did, am I?\" She was holding back tears. I could see pain forming in her face. I thought she was going to let it drop. She fooled me with her smiles during the climb back to the house.\n\n\"I'm really hoping you don't hate me for it.\" I was getting scared. Why did I have to hit that asshole?\n\n\"Are you going to tell me if I ask?\" She was looking down at the floor. Her voice was becoming halting as she sensed the direction things were going.\n\n\"Yes. It will hurt us, though.\" Maybe she will let it slide for awhile longer. I really thought it would come out better later. She was shaking a bit.\n\n\"Where were you?\" Today was not going to be a good day. I just prayed that we would survive it.\n\n\"Your stuff from you old apartment is in my car.\" I couldn't say it directly. I figured if I spoke in generalities it would sound milder. I was wrong. She let go of me and covered her eyes. I could see her cheeks reddening as the tears began to flow. I reach out to her and she slapped my hand away. She didn't leave, which surprised me.\n\n\"How much do you know?\" She wanted everything right now. I wasn't sure my heart could take her pain. I hesitated and pulled away from her a bit. \"How much?\" she repeated. I wasn't going to lie.\n\n\"Just about everything.\" I said it slowly with as much compassion as I could muster. I knew it wasn't going to be enough. She dropped her hands from her face and stood up away from me. I looked into the most pained face in the world. Tears were pouring out of her eyes.\n\n\"I never wanted you to know me like that.\" She was screaming at me. \"That stupid boat was supposed to blow up.\" She was pointing to the beach as she got louder. \"Why didn't the fucking thing just blow up?\" She yelled as she started to back away. I reached out toward and she slapped my hand away again. \"Don't you fucking touch me!\" It sounded evil and hurt my ears. \"You're just looking for you own private live-in whore, aren't you?\" I tried to answer, but she interrupted. \"You couldn't buy this whore for all your money.\" She ran towards the back of the house. \"All you fucking assholes are the same.\" I heard the bedroom door slam. I had lost her. \n\nIt took everything I had not to run and hide on the beach. I knew that if I let her leave the house, she would be dead within a week. I called Dr. Williams and told him everything.\n\n\"Don't let her leave. Tie her up if you have to. I should be there in thirty minutes.\" He never said I told you so. I had to respect him for that. Luckily, Mia never left the bedroom.\n\n\"Where is she?\" Bob didn't even say hello.\n\n\"In the bedroom. I think she locked herself in.\" He started running.\n\n\"Anything sharp in there?\" He was clinical. I was horribly panicked. We reached the door and it was locked. Bob knocked on the door loudly. \"Mia, it's Dr. Williams.\" There was no answer. He didn't knock again. Wally took a few steps back and shouldered the door with all he had. I heard the frame split as the door flew open. Mia was on the bed in a fetal position. He grabbed her hands quickly and checked the wrists and felt her pulse. \"Did you take anything Mia?\" He was speaking forcible. \n\n\"The only things in this God-damned house are vitamins!\" She yelled back at him. He stood up and walked back to me.\n\n\"She's fine. Go outside and stay away for a while.\" He gave me a compassionate smile and pushed me on my way. I went down to the beach. I couldn't believe I had screwed everything up. I would never find anyone like her again.\n\nThe umbrella was only half shading the lounger. It needed to be moved again. I really hated that umbrella. I yanked it out of the sand and throw it toward the rock wall. It wasn't enough. I leaned the shaft against one of the rocks and jumped on it. The wood snapped in half. I pulled the metal spines backward over the top and ripped the fabric. I found I was able to break each half of the shaft into smaller pieces. I tore the fabric completely off the spines and threw it into the water. I bent the metal spines into crooked ball and tossed in after the cloth. I still didn't feel better.\n\nI moved to the edge of the ocean and lay down half in, half out of the water. I let the late afternoon sun attack my skin as I waited for the tide to come in and wash me out to sea. It was an hour before I realized the tide was going out. I prayed for a school of jellyfish instead. It hit me then. My life before Mia. To never see her in my house again. To be alone again. I curled into a ball and wished for death. Not even the waves could sooth me anymore.\n\nI felt and heard someone sit down next to me. I was afraid to roll over and look.\n\n\"I killed my family. I am a heroin addict. I am a prostitute. I tried to kill myself on your beach, and I screwed that up to.\" She was speaking quietly, saner, although what she was saying sounded insane. \"In the movies, the boat always blows up when it hits the rocks.\" I rolled over and I knew there were tears in my eyes.\n\n\"You're going to leave me, aren't you?\" I tried to sound like I was in control of myself. I am sure I failed.\n\n\"You killed the umbrella.\" Why wasn't she answering?\n\n\"I hated it. Are you leaving?\" I asked again. I hadn't received the \"yes\" I was expecting.\n\n\"Doc says you love me. How can you love what I am?\" She hasn't made her decision yet. At least there was still hope. \n\n\"You're asking me to care about who you were. I only care about who you are.\" I sat up in the sand. \"I have no idea why I love you. I just do. The moment you curled into my chair on the beach, I was yours.\" I threw a handful of sand into the water. \"I liked that you were alone too. It's sad, but I was attracted to that.\"\n\n\"How did you hurt your hand?\" She kept moving the subject around. She was trying to think.\n\n\"Your landlord said something rude and I swung without thinking.\" I didn't think she needed to know the whole conversation.\n\n\"What did he say?\" She wasn't going to let me hide anything.\n\n\"He told me that you didn't pay with money and he didn't want a blowjob from me.\" It felt really bad telling her the truth. It sounded worse than when he said it. She looked away from me for a second. I think she was trying not to cry.\n\n\"Why didn't he kill you?\" She was under no illusion that I would win in a fair fight. \n\n\"His greed overtook his pride. He now has a completely different opinion of you.\" I knew what the next question was and I didn't make her ask. \"Five grand.\"\n\n\"I won't let you go broke trying to fix my past.\" She really had no concept of my net worth. \"You don't have enough money to buy off everyone I ever screwed.\" Yes I did, but I kept it to myself.\n\n\"I just wanted you to have your stuff back. You must have pictures of Adrian which are worth more than a lousy five thousand.\" I hoped I didn't just buy back garbage. She wiped a tear that leaked out of her eye.\n\n\"Thank you. There are some things I didn't want to lose.\" I was glad it wasn't a total wasted trip. We sat in silence for a while. There was one more thing I needed to know and I preferred for her to tell me.\n\n\"Why did you steal the boat?\" I looked at her, and she didn't even flinch. She looked out into the ocean where the fading sun meet the waves.\n\n\"Are you sure you want to know?\" She didn't really want to tell me anymore than I wanted to discuss the landlord.\n\n\"Someone is looking into it for me, but I would prefer if you told me.\" She closed her eyes and let out a long breath.\n\n\"It was a harbor boat. I was hired to take care of a guy on his yacht anchored in the harbor. I fucked him, and then we went to the deck for a break. I was naked and pretty stoned. There were six of his friends waiting for me when we got up there. He told me I had to take care of all of them, and I refused.\" She sighed. \"He got a hold of my purse and clothes and told me I wasn't getting them back until they were all satisfied. When I refused again, he threw them overboard and told me they would just take what they wanted. Luckily, they were more drunk than I was stoned. I was able to get on his harbor boat and break away. That was my lowest point, Dale. When I knew I didn't want to go on anymore.\" \n\n\"Now I know everything. I don't want you to leave me.\" I was afraid she hated herself so much that happiness was hell for her.\n\n\"I don't have anywhere else to go.\" It was a cop out. My frustration was rising, and I knew it wouldn't help the situation.\n\n\"If you want to leave, I will give you whatever money you need to start over. Do you love me or not?\" I couldn't believe I had just drawn a line in the sand. I was angry, frustrated, and scared of how she would answer. She turned back to me with wet eyes and nodded.\n\n\"Yes, I love you. I just don't know how you could love me.\" I smiled as a warmth filled my soul. I hadn't lost her. I wrapped her in my arms and pulled her lips to mine. She responded slowly then added passion to match mine. I rolled her onto her back and held her face in my hands.\n\n\"For now, just accept that I do love you.\" I smiled and kissed her face all over. \"No more secrets, no more lies. You are mine, and I am yours.\" I was back at her lips as she folded her hands gently around the back of my head and engaged my tongue. She ran her thigh up along mine and quickly separated her lips from mine. \n\n\"You're covered in sand.\" There was desire in her eyes. \"How about the pool?\" She was breathing hard. I had no idea how she moved from \"don't touch me\" to \"how about the pool.\" All I knew is that I wanted her badly. My arousal was evident as I pulled her to her feet. We almost ran to the pool, trying not to let the mood weaken. I dropped my suit and dove in. I turned and watched the most adorable striptease. She had to peel herself out of her suit which required a few sexy shimmies and made her all the more desirable. I gave a wolf whistle as she finally pulled it down her legs. I received a sexy runway pose before she dove in after me.\n\nOur lips met again in the shallows. Her breasts pressed into my chest as I ran my hands over her body not knowing where to touch first and not wanting to miss a part. My inexperience was evident as I explored. Mia tenderly grabbed my hand and moved it between her legs. \"This is yours.\" She whispered in my ear. \"I don't want any other man but you to touch it ever again.\" It felt like my dick was trying to grow larger. As I let my hand explore between her legs. The folds were sensual, soft and slick. I ran a finger along the slit carefully feeling for the entrance. She opened for me and I slipped my finger into the warmest and most inviting embrace.\n\n\"You feel so beautiful.\" I was mesmerized with her pussy. I had never taken the time to enjoy a woman so completely. Mia moaned as I explored her with my finger. I liked being the cause of the moan. I felt her hand around my hard-on, and my hips jerked a bit.\n\n\"I want you in me,\" she said, looking into my eyes. I felt a twinge in my groin at that and knew I wouldn't last long. I didn't want to disappoint her, but she was just too damn hot. I removed my hand and fumbled my dick into position. I was a bit over excited and had trouble finding my way in. Mia smiled, and I felt her grab my cock and guide it toward Heaven. Her feet left the bottom of the pool, and she encircled my hips with her legs. The most wonderful sensation enveloped my shaft. She slowly took all of me while watching my eyes. I was trying desperately not to explode. I never wanted it to end. She looked so gorgeous hanging on my shoulders. Her hips moved to meet mine.\n\n\"Do you love me, Dale?\" She knew the answer to that. She just wanted to hear it again.\n\n\"I love you, Mia.\" I felt her hips grind into my groin. Her head tilted backward, and her smile warmed deliciously. My experience was irrelevant. My words were her aphrodisiac. \"I want you more than anything.\" Her hips were grinding involuntarily. I was trying desperately to hold back just a moment longer. \"You are in my soul. I will love you forever.\" Mia's whole body began to shake, and her muscles tensed. I saw the veins in her neck enlarge as her hips ground harder and more sporadically. A sexy growl came from her lips which sent me over the top. I emptied into her again and again. I thought I would never stop as pleasure coursed through my body into the love of my life. \n\nMia pulled forward as her spasms subsided. My legs collapsed, and we fell backward underwater, her lips locked on mine. I thought she was going to smother me to death, she was squeezing so hard. She separated from me, and we rose back into the air. It was the single best experience of my life. \"I really love swimming with you!\" I couldn't even attempt to shrink my grin. Everything about her was so exciting. Mia laughed and wrapped her arms around and through me.\n\n\"You were beyond perfect!\" She kissed me on the lips. \"I am yours, you know.\" She kissed me on my nose and moved to my forehead then my cheeks. I held her close and whispered in her ear.\n\n\"No more doubts?\" I didn't want to ruin the mood, but I had to know.\n\n\"None at all.\" I felt her smile against my cheek. My plan had one more step. It was an insane step, but my life had always been a bit insane.\n\n\"Marry me.\" I said it clearly. I didn't whisper. I wanted her to know I meant it. She pulled her head back and looked me in eyes.\n\n\"You're serious.\" It was a statement that didn't require a response. I gave her one anyway.\n\n\"Absolutely serious.\" I didn't let my eyes drift away from hers. Without blinking, the word formed on her lips.\n\n\"Yes.\" Her expression didn't change. I felt she was waiting for me to withdraw the offer. I just smiled and gave her a tender kiss which she returned.\n\n\"Mia, my wife... I really like the sound of that,\" I said when our lips parted. I think it hit her right then. I wasn't pulling her chain. I had no fear of her past and no fear of our future. She melted into me and screamed into the air. She released all her fears with mine, and we emotionally entwined our futures.\n\nThe sliding glass door slammed open and Dr. Williams came running out. He had heard Mia's scream and thought the worst. He slowed when he saw a naked entwined couple in the pool with smile-laden faces. \"Whoa! not quite what I expected.\" He said trying to cover his eyes. I could see a grin hidden behind his hand. Mia started laughing. What a wonderful laugh.\n\n\"You want to be really blown away?\" Mia said with sparkling eyes.\n\n\"Nothing you two do will shock me anymore.\" He sat on a pool chair which allowed the side of the pool to provide the necessary modesty.\n\n\"Mia has agreed to be my wife.\" I watched his expression go through three or four emotions and then settle on happy.\n\n\"That is many levels of insane, but with you two, it just seems to fit.\" He was smiling at both of us. He started laughing to himself. \"Monica is going to shit when she hears this.\" He started slapping his knee. \"She was so pissed at you for screwing up her anniversary. She made me promise to make you do the heavy lifting, and she gave the clinic a lot of your money to make sure it happened.\" He was having a hard time trying to control the laughter. \"She said you wouldn't last a day.\" He was hysterical at this point. \"She's been waiting for your apology. Called me twice wondering why you weren't begging for forgiveness.\" He pointed at me. \"What I wouldn't give to see her face when she hears about this.\"\n\n\"Honey, we really should do something nice for her and her husband. After all, you did screw up their anniversary.\" Mia pulled me close smiling. I was fine with her being my social compass. \n\n\"We certainly owe her something for putting us together.\" I squeezed Mia. \"We'll put our heads together and dream up something special.\" I looked back at the doctor.\n\n\"Well, my work is done here. It's been an absolute privilege working with you two.\" He smiled as he stood up. We had drifted to the edge of the pool so he didn't have to hide behind his hand. \"I am truly happy for both of you. I just never saw it coming.\" He held out the palm of his hand. \"I'll show myself out.\" He was still chuckling as he walked back through the house. Mia shouted thanks as he disappeared inside.\n\n\"Well Mrs. Tomlinson, or Perez if you prefer, would you like some dinner?\" I was steering her toward the stairs.\n\n\"Mrs. Tomlinson is indeed hungry.\" She smiled at me as she followed.\n\nWe had a wonderful dinner of frozen crap. Mia and I decided that grocery shopping was first on the list for tomorrow. As we were cleaning up the plates, my phone buzzed. It was Frank.\n\n\"Frank, I am going to put you on speaker.\" I wasn't going to hide anything for Mia anymore. I placed the phone on the table. \"Mia Perez is here with me.\"\n\n\"I'm not sure I understand Mr. Tomlinson.\" Frank was a bit confused. He didn't expect to be talking with anyone but me.\n\n\"Mia, Frank is the one who I had looking into your past. I suspect he has information about the boat incident to report.\"\n\n\"Hi Frank.\" Mia smiled at me. I think she was happy that I didn't take the call privately.\n\n\"Hello, Ms. Perez.\" Frank stuttered a bit.\n\n\"Frank, I hired you to clear up some issues between Mia and myself so I could talk her into marrying me.\" I heard a cough on the other side of the line. \"She has already told me what happened on the boat and has agreed to be my wife.\"\n\n\"Ahh, congratulations!?\" It sounded more like a question.\n\n\"I think we may have caught you off guard Frank. I told Dale everything. I am sure the gentleman on the boat may spin it a bit differently but, the gist will be the same.\" Mia scooted next to me and gave me a peck on the cheek.\n\n\"Sorry, I am not used to working for couples with so much trust. Kind of comes with the job.\" He was getting on his feet again. \"The yacht is owned by a Walter Patterson. It was his son Thomas Patterson who hired you, Ms. Perez, for his evening's entertainment.\" He paused to make sure that I was fully aware of the events. \"It seems that Mr. Patterson has a habit of renegotiating his agreements with his entertainers once he has them on his father's boat. You are not the first one he has done this to.\" He coughed a bit. \"I apologize, Ms. Perez, but he calls them his 'water bang parties.' He has some like-minded friends who frequent the events.\" \n\n\"What a bastard!\" Mia had grim look on her face. \"I thought it was a spur of the moment thing. You say he planned to share me with his friends?\"\n\n\"Yes ma'am. A rather distraught young man, Kyle Gladstone, filled me in. He was on board and had no idea that you had not previously agreed. Mr. Patterson controls his job prospects. He spent a good twenty minutes telling me how ashamed he was for not telling the police.\"\n\n\"Tall blonde kid, funny glasses?\" Mia asked.\n\n\"That describes him pretty well.\" Frank added. Mia looked at me.\n\n\"He got in the way of the other guys when I made for the harbor boat. I think he got in over his head,\" Mia injected.\n\n\"That was my feeling also. Both Mr. Patterson and Mr. Gladstone work for a small chemical outfit called Gem Works.\" Frank sighed, \"I don't think you should have bought him a new boat, Mr. Tomlinson. They would have dropped the charges just to keep the incident quiet and avoid jail time themselves.\"\n\n\"How much did I pay for the boat?\" I was beginning to devise a bit of payback. I heard paper shuffling on the other end.\n\n\"$33,781 according to the invoice Bob sent me.\" I wrote down the number and a few other notes.\n\n\"Thanks, Frank. Your service has been very valuable to me.\" I was getting use to thanking people.\n\n\"Thanks, Frank. I appreciate your careful choice of words.\" Mia smiled at the phone.\n\n\"I'm sorry you had to go through that, Ms Perez. Congratulations on your engagement.\" He disconnected. I really liked Frank. He was a no bullshit guy who seemed to care for his clients. I was hoping I could use him again in the future.\n\n\"I suddenly don't like Mr. Thomas Patterson.\" I said with a mischievous smile. \"What do you say we try to put an end to his water bang parties.\"",
        "\"Oh, could we?\" Mia was getting excited. Almost a bit bouncy which was more attractive than she knew. \n\nWe hit the internet and spent some time on Gem Works. There wasn't a lot of information on the small company, but we found enough. A local business journal article talked about them trying to expand into a specialized phosphorus product. They were having trouble getting the necessary funding due to their lack of historical profits. Chemicals were just not on the love list for venture capital firms these days. Their President and CEO was Brian Fitzgerald. I knew exactly what to do first thing in the morning.\n\nMia wasn't that crazy about the plan. She was concerned about the money I was spending. Wives are always trying reign in their husbands' spending. I kissed her and chuckled at her concern. I got a couple of hands on the hips and a cross look. \"What's so funny about saving money?\" I could have told her, but I wanted to cherish the look on her face. I fired up my laptop and logged into the brokerage account. I went to the aggregate page and spun it around so she could look.\n\n\"Our main account, Mrs. Tomlinson.\" I was smiling as her eyes found the total. Her mouth fell open, and I watched her eyes go back and forth over the total. I noticed she had stopped breathing. \"You have to breathe sweetie.\" I chuckled as she reread the number for the tenth time.\n\n\"You are rich-rich!\" She looked up at me with wide eyes. She was still processing how much was there.\n\n\"We are rich.\" I corrected.\n\n\"I can't even fathom what to do with that kind of money.\" She was still in shock. \n\n\"Putting an end to water bang parties might be a good start.\" She smiled and scooted next me on the couch.\n\n\"Did I ever tell you how sexy I find rich men.\" She was stroking my inner thigh. I felt my blood begin to move. I pushed an errant hair back behind her ear.\n\n\"I have always kind of had a thing for rich women.\" She smiled into my eyes and leaned in for a kiss. I felt her hand move higher as my arousal increased. I reached out and stilled her hand.\n\n\"I want you to teach me how to love you.\" It came out kind of wrong. I knew what I meant, but I was sure Mia was confused. \n\n\"I think you did pretty damn well in the pool a few hours ago.\" She smiled at me, thinking I might need an ego boost. I gave her a quick kiss.\n\n\"I want you to teach me about you. I want you to show me where I should kiss, where I should touch, and where I should lick.\" I was turning a bit red at the last part. \"I want to know how to please you.\"\n\n\"Was that your first time?\" I knew she meant in the pool.\n\n\"Sort of. I paid for it a couple of times, but it never felt like it did in the pool.\" I looked up into her eyes. I felt kind of exposed, but I really wanted to know how her body worked.\n\n\"Well, as your first and last girlfriend, I feel it is my duty to let you pleasure me.\" She caressed my cheek with a smile. She got up and hurried me along to the bedroom. \"God, this is going to be fun!\" Her enthusiasm was making me horny.\n\nMia stripped as soon as we arrived at the bed. \"Different things turn on different women. Lucky for you, you only have to learn about one woman.\" She began undressing me. \"I love being touched everywhere. Don't waste your time staying in one place. My nerve endings kind of get bored if you stay anywhere too long.\" She undid my belt buckle why I was making mental notes. \"If you want to get me going, start with my joints.\" She smiled up at me as she lowering my shorts. \"My neck, the inside of my elbow, behind the knees and, for some reason, my ankles.\" My dick bounced up as my shorts dropped. \"Just light kisses, butterfly kisses and little licks. Nothing too sloppy though.\" She hopped on the bed and spread herself out. She was grinning ear to ear. I gave her a curious look.\n\n\"What about your breasts?\" I really liked the idea of playing with those. Mia chuckled.\n\n\"Those are all for you and feeding babies. Don't get me wrong; it feels nice when you play with them. Mine just aren't super sensitive.\" I was slightly disappointed. \"Don't worry, I'll show you other things titties are good for later.\" Her smile held promise that eased my concern. I climb into the bed next to her. She giggled and rolled me on top of her. \"When it's your turn, I own you. Right now it's my turn so you own me. I am your prized possession, and I have no choice but to submit to your control.\" God, I liked the sound of that. Her body was my plaything and I was getting really excited. \n\nI covered her body with mine and allowed an elbow and my knees to take the weight. My lips found the base of her neck, and I began lightly kissing and teasing it with my tongue. I felt involuntary shivers run through her body as my free hand lightly caressed her side. I kissed up to her ear and remembered the pool. \"I love that you're mine.\" I whispered softly to her as my lips began to descend again.\n\n\"Yes, and words like that.\" She said as my hand lightly caressed her side and my lips followed the contours of her shoulder. She was cooing as I kissed down her arm and tickled the crook of her elbow with my tongue. I slowly moved back up to the other side of her neck.\n\n\"You taste delicious,\" I whispered, and another shiver ran through her body. I ran down her other arm and lightly tortured the inside of her elbow to a few quiet moans. I could feel the muscles in her body contracting in response to the tickling sensation.\n\nI shifted my weight to my knees and moved my lips to her breasts. She told me they weren't a big turn-on, but they were too wonderful to ignore. I gave the left nipple a little lick and gently blew on it. A forest of goose bumps appeared. I smiled and repeated the process on the right nipple. I got a giggle out of Mia and a whispered \"Men!\" said with humorous contempt.\n\nI kissed a wet trail down her chest across her tummy. With both hands now free, my fingers were exploring her sides and running down her thighs. As my kisses reached her thighs, a wonderful musky aroma inflamed my nose. I carefully lifted her leg as I slowly moved to her knee, my eyes never leaving the adorable womanhood between her legs. The lips were shaded both lighter and darker than the surrounding skin. When I lifted her leg higher to access behind her knee the slit glistened. It looked as wonderful as it had felt in the pool. I caressed her thigh with both hands and kissed the crook of her knee. I pushed Mia's knee back toward her as I massaged her calf. Her pussy opened slightly to reveal its wetness. It looked so warm, it had me entranced. \n\nI reached her ankle and made love to it with my tongue as I massaged the bottom of her foot. I started hearing a constant low moan from Mia. I knew I was doing well. I raised the other foot to my lips and reversed the process I had used on her left leg. I was slowly descending back toward her intoxicating scent. As I approached, more of her muscles were responding involuntarily.\n\nI pushed both of her thighs back toward her. I was desperate to see her. My face was only inches away from that precious opening as I ran my fingers along it. I opened her flower slightly and examined the multiple folds and the wetness that was flooding the sides. Mia moaned louder as I lightly touched her clit which had emerged from its hiding place. I was mesmerized by the beauty of it all. I loved her for letting me explore. Mia misinterpreted my exploration as hesitation. She spoke softly to me.\n\n\"Not every guy likes to...\" I never let her finish. I dragged my tongue from the bottom of her slit deep inside tasting a woman for the first time. \"Oh God!\" she groaned. Both her hands wrapped around my head, and I felt her hips begin to move. She tasted like a soft honey, sweet but more delicate. My hands were holding her thighs wide as I went deeper and dragged out along her little nub. Mia tilted her hips into my face and was holding my head like I might want to leave. I began tickling her clit with the tip of my tongue, and I saw her back arch and her neck tense. Her whole body was shaking as she forced my mouth to drag along her clit. I lost my grip on her thighs as she straightened her legs to force her hips off the bed. She stayed that way for half a minute before her hips fell back, and a loud sexy groan escaped her lips.\n\nI smiled at what I had done and lightly caressed her gorgeous pussy with two of my fingers. It was practically pulsing behind my hand. I was able to generate little involuntary jerks as I lightly moved them across her little nub. I have no idea why I was having so much fun watching her squirm under my fingers.\n\nMia sat up and then coaxed me back on top of her. \"That was simply incredible.\" She sighed as she pulled me into her bosom. \"I didn't think you were going to go that far.\" I gave her a loving smile.\n\n\"I'd never seen one up close in real life. I just had to know everything about it.\" I caressed her breast as I explained my actions. \"It was really quite amazing. Everything about you is amazing.\" I looked up to kiss her and I saw a tear in her eye. \"Mia?\"\n\n\"I love you so much.\" She squeezed me tight and more tears appeared. \"I get kind of emotional after I cum like that.\" Her voice was a bit halting, and her expression was all screwed up with tears and a smile. I scooted up a bit more, gave her a kiss, and wiped the tears from her eyes. I was relieved that they were happy tears. She ran her hand down my side and felt my arousal.\n\n\"It feels like you are ready to explode.\" Watching her throes of ecstasy made me hard. Knowing that I caused it had made me really hard. Mia sat up and pushed me flat on the bed. She moved between my legs and gave me an evil smile. \"You like these don't you.\" She was holding her breasts and added a little wiggle for emphasis.\n\n\"I kind of love them.\" I was smiling, not really knowing where this was going.\n\n\"They're kind of soft and firm at the same time.\" She was examining them, tilting them back and forth. \"They feel so warm right now.\" She looked back into my eyes. \"I wonder what it would feel like if I wrapped them around your cock.\" My hips jerked a bit as I realized where this was going. I had no idea what it was going to feel like, but God, I wanted to know! \"First we have to make sure it will slide really well.\" Without warning Mia dropped her lips over my manhood and took me half way into her mouth. Both of my hands squeezed a fist full of sheet as I strained not to cum under the surprise attack. I felt her tongue coat the underside of my shaft. I locked my legs, trying my best to hold off and wait for the breasts. She slowly raised off my tool, swirling her tongue around the crown. She drooled down the shaft, and her lips left the tip.\n\n\"Oh, I think it will slide real well now.\" She looked me in the eye and lowered her breasts over my groin. I could have cum right there. I felt a tinge of release, and I knew if I let it go, it was all over. Just the thought of what was about to happen was becoming too much. She smiled at me. \"I think you're going to like this.\" Mia squeezed her breast together and enveloped my rod in feminine warmth. I was in heaven. The sensation was so visually stimulating I wasn't sure I could take any movement at all. \n\nMia began to massage my cock with her breasts. On every down-stroke, the head would poke up under her chin, and I would grunt. I gripped the sheets harder, and my neck was straining. I was trying desperately not to move my hips. I wanted it to last longer. Mia ended it. In a soft sultry voice I could barely hear, she said, \"Cum for me.\" My hips started jerking, and I watch my cock explode cum under her chin. The head disappeared between her tits, and I felt myself fill her cleavage. My whole body felt like it was part of the climax. Every cell was happy at that exact moment. When the crown reappeared, it was a glistening mess, and I pulsed another, smaller shot under her neck.\n\nMy spasms slowly wound down, and Mia unwrapped my manhood. Her neck and cleavage were covered in jism. My cock was a happy drippy mess. Mia started laughing as she looked down at her chest. God, I loved that laugh. \"Someone really likes my titties.\" she said as she wiggled them at me. I pulled her down to me. I didn't care how messy she was, I needed to give my future wife a kiss.\n\n\"You are by far the best thing to ever happen to me.\" I slid her lips up to mine for a short peck. \"How about a shower? We have a lot of work tomorrow.\" I was playing with her hair as I talked. She raised herself up on her elbows and looked at the walls.\n\n\"Can I redecorate? Monica's color pallet is a bit boring.\" She smiled at me. I liked the idea of her taking ownership of the place.\n\n\"Mrs. Tomlinson, it's your house, and you can have it any way you want.\" I reached down and squeezed her butt for emphasis. \"We can call painters tomorrow.\"\n\n\"I just thought we could go to the hardware store and paint it ourselves.\" She was looking thoughtful. \"Kind of makes it more ours when we do it ourselves.\" A wonderful vision suddenly appeared in my head.\n\n\"If we were naked, we wouldn't ruin have to ruin any clothes.\" I was imagining her climbing ladders as I tried to hold back a smile.\n\n\"Well aren't you the kinky one.\" She poked me in the ribs. \"But no sex until the room is done.\" She didn't hold back her smile. She seemed to like the idea. I was hoping it didn't take too long to paint a room. \"Let's take that shower stud. You're as sloppy as I am now.\"\n\nI awoke to the smell of coffee wafting from the kitchen. Mia was already up and going. I grabbed my robe and headed to the kitchen. Mia was wearing a new white robe that was just sheer enough that you knew she was naked but not fully see-through. I couldn't believe that I would be waking up to that vision from now on. Life was good.\n\n\"Good morning ,sleepy head!\" She was extra cheerful. I thought she might be a morning person, God help me. She poured me a cup of joe and set it on the counter. \"I hope I didn't wake you. You looked pretty comfy in bed.\"\n\n\"Nope. That robe looks really good on you.\" I grabbed my cup and smiled. Mia twirled around.\n\n\"Why thank you Mr. Tomlinson.\" She smiled back and grabbed her own cup of coffee. \n\nI looked at the clock on the wall and saw it was after eight. I sat down and yanked my phone free of its charger. \"No time like the present.\" I said. Mia sat down next to me. I dialed up Bob Farring.\n\n\"Good morning Bob, it's Dale Tomlinson. I got you on speaker with Mia Perez.\" Mia smiled at me. She liked that I wasn't excluding her.\n\n\"Is Monica not well, Mr. Tomlinson?\" He was once again confused as to why I was talking with him directly. Mia covered her mouth, trying to hold back a chuckle.\n\n\"No, I am sure Monica is just fine. This doesn't concern her.\" I paused a moment to let that sink in. \"I am considering an investment in a small chemical company called Gem Works. I was hoping I could get you to run point to see if they have any interest in new capital.\" I knew they would beg, borrow or steal if they could. \n\n\"Of course. What kind of timeline are you looking at.\" I wish I was there to see his face.\n\n\"Today.\" I think I heard a cup hit the floor.\n\n\"That is not a lot of time for our due diligence Mr. Tomlinson.\" I could hear the panic in his voice. He didn't want to be a party to some failed venture of mine.\n\n\"Bob, I'll be honest with you. I'm really not interested in the viability of the company although, on the surface, it does have strong possibilities. I want to purchase leverage over an employee of the firm.\" I let that sink in. \"He treated someone I love very badly, and I want to make sure he never does it again.\"\n\n\"I don't know if I can be involved in some blackmail scheme.\" I have honest lawyers. Who knew?\n\n\"It's my fianc\u00e9, Bob. It's pretty personal.\" I heard other things fall to the floor. Mia choked back another laugh.\n\n\"Mr. Tomlinson, this is kind of a surprise. A person of your stature should have contracts drawn up before considering a commitment like marriage.\" I would never insult Mia with a pre-nup. I would rather she just kill me off if that was her will.\n\n\"Sorry Bob, I'm winging it on love alone.\" Mia blew me a kiss. \"Bob, meet my fianc\u00e9 Mia Perez.\" I heard more stuff falling to the floor.\n\n\"I'm sorry Ms. Perez. I didn't want to insinuate you had any bad intentions.\" He fumbled his way through the whole sentence. It was becoming a bad morning for him.\n\n\"I wouldn't expect you to advise him any other way Bob.\" Mia chimed in perfectly. \"I for one appreciate your loyalty.\" She paused for a moment. \"This employee Dale was speaking about has a habit of tricking women on to his boat and forcing them to engage in sexual activity with numerous partners. I barely got away myself.\"\n\n\"Ms. Perez, this sounds like a police matter. Possibly a lawsuit if he has any assets.\" He was a good man and wasn't interested in a roundabout route. I looked at Mia and shrugged my shoulders, informing her I didn't care how much she told him. She sighed.\n\n\"Can I tell you something in confidence Bob?\" She was looking intently at the phone.\n\n\"Yes. As your lawyer, you are entitled to my confidence.\" I really wished I was in his office.\n\n\"A week ago, I was a prostitute addicted to heroin.\" She didn't even flinch. Our love was solid as a rock. There was silence on the other end. Not even breathing. \"Bob?\" Mia asked.\n\n\"Um... ah... I can see why involving the courts could be a bit problematic.\" He started to recover. \"May I ask what your intention is with respect to this employee?\" He was trying to gage how deep he would have to go. \n\n\"I intend to hold his job over his head. He either stops these parties, or his family finds out why I fired him.\" I took a breath. \"He tricked me into purchasing the boat that Mia escaped in under the threat of grand theft. I will expect him donate an equivalent sum to a charity of our choice.\" \n\n\"Legally, you can fire him for his illegal acts on or off the job. The forced donation is pushing into a darker realm of the law.\" He paused, obviously thinking. \"You say he has done this before?\"\n\n\"He calls them 'water bang parties.' Frank Talbot researched it for us.\" I thought adding Frank might ease his mind a bit.\n\n\"Well I never knew Frank to be incorrect. Is it possible for you to refer to the donation as a suggested repentance or some other similar phrasing?\" Wow!, He's good. Trying to stay just this side of the law.\n\n\"Now I know why Monica trusts you so much Bob. We will take your advice and make it a suggestion.\" Mia was smiling. I think she liked Bob also. \"Will you be able to run point?\"\n\n\"I would be happy to.\" He was satisfied we weren't going to break the law.\n\n\"I don't want any control, just a straight percentage interest in the company. I will speak to the CEO personally about the other issue. There is no need for you to get involved directly in the aspect. Just get me a phone call with him.\" I was afraid Gem Works wouldn't take me seriously if I cold-called them. \n\n\"I will call you back in an hour or two, Mr. Tomlinson.\" He hung up and went to work. I took another sip of my coffee and looked at Mia.\n\n\"Having a lot of money is kind of exciting.\" She smiled and sipped her own cup.\n\nAn hour and a half later Bob called back. \"Brian Fitzgerald is waiting for you call, Mr. Tomlinson. He is looking for a five million dollar investment and he has agreed to a 30% ownership, which after a cursory look at the books seems to be proper.\" He paused. \"You will be the second largest holder. Mr. Fitzgerald will hold 42% after the sale.\"\n\n\"Bob, you are the miracle worker we were looking for. I am going to close the deal, then you can finalize the paperwork.\" I was very pleased with the results. \n\n\"Monica called this morning. She has gotten wind of you dealing directly with us. I suspect she is friends with the receptionist.\" Bob seemed a bit strained by the change in protocol. \"I haven't called her back yet. Is she aware of what is happening?\" Mia started giggling. I had to look away so I didn't catch it.",
        "\"She isn't aware of any of this yet. I would appreciate it if you kept her in the dark.\" I wanted to be the one to tell her. This time I will be in the room. \"You're free to tell her we spoke.\"\n\n\"Whatever happened between you two, Sir, I want you to know she has always acted in your best interest.\" Bob is loyal too. I am really liking this guy. \n\n\"Monica is my second favorite woman on this planet, Bob,\" I chuckled . \"I am just making her sweat a bit. She deservedly put me in my place, but she never envisioned the results.\" I smiled at Mia and she patted my arm. \"I owe her a lot more than she knows. I just have to be in the room when she finds out.\"\n\n\"Okay then, silence it is. She is going to press, of course. I hope you'll let her know that I was under direct orders.\" Bob seemed a bit more relieved. \n\n\"I will be happy to let her know. Your loyalty is impressive Bob.\" He was quickly becoming another favorite person of mine. \"Mia and I are going take short trip this weekend. When we return, I want you to set us up as beneficiaries of each other's wills and gather whatever signatures you need to make sure that Mia has the same access to our assets as I do.\"\n\n\"Mia Perez or Mia Tomlinson?\" He was on the ball.\n\n\"Tomlinson.\" Mia answered. She wrapped her hand around my waist.\n\n\"Congratulations to the both of you. I will have everything ready on your return.\" He didn't even mention a pre-nup again. I like people who don't try to beat a dead horse.\n\n\"Bob, from now on my name is Dale.\" I hung up before he argued that one. I pulled Mia in close and kissed her.\n\n\"You know he might be right about the pre-nup. It would make everyone else feel better.\" Mia was trying to be realistic. I was done being realistic.\n\n\"Nope, I am all in. If you murder me for my money it's on me.\" I smiled pulling her closer.\n\n\"And pass up on nude painting. Do you think I'm insane?\" She gave me a passionate kiss.\n\nI called up Brian Fitzgerald at Gem Works. \"Mr. Tomlinson, I was rather surprised when your associate called.\" He sounded a bit non-trusting.\n\n\"Please, call me Dale. I understand I can buy 30% of Gem Works for five million. I am interested as Bob must have informed you.\" I was going to let greed take its course.\n\n\"It was the speed of the transaction the concerns me, Dale. These things usually take months. You want to move in hours.\" Damn, I got a non-greedy one. Time for truth.\n\n\"I have a two stipulations to the purchase. They are the real reason. If you agree, the company has the funds it needs to grow. I will hold for a minimum of ten years. No other strings attached.\" This was a no-bullshit guy.\n\n\"Name them.\" Yep, no bullshit.\n\n\"Kyle Gladstone will get a 20% raise.\" I forestalled the next question. \"His actions allowed someone I love to avoid a horrible outcome. He needn't know where it came from.\"\n\n\"He's a good kid... Done. What's the other?\" That was easy.\n\n\"The other concerns Thomas Patterson.\" This one might be bit tougher.\n\n\"What do you want with that pompous ass?\" Might not be as tough as I thought.\n\n\"He was going to be the horrible outcome.\" I let that sink in. \"I want to be able to fire him, and I want you to let him know I can do it.\"\n\n\"Well that's an easy yes. May I ask what the horrible outcome was?\" That went better than expected.\n\n\"It's better that you don't know. You might fire him on the spot.\" Brian sounds like a guy who might have him beaten first. \"He will either quit or become a model employee when I am done with him.\"\n\n\"He must have really pissed you off to spend five million to get a hold on him?\" He was chuckling. \"I would have let you have him for a lot less.\"\n\n\"Oh, I still consider this an investment, Brian. If your expansion works as expected, I win twice.\" I didn't want him to think I just throw money down the drain.\n\n\"It will work. I'll double you in five years.\" He was extremely confident. \"My lawyers are talking with yours. I trust we can sign by the end of the week.\"\n\n\"I will give my lawyer power to sign and distribute the funds immediately. As soon as your lawyers are happy, it's done.\" I should have just given him a check and shook his hand.\n\n\"Great, I'll have Patterson in my office at 3:00. Call me at 3:10, and I'll leave you two alone.\" He was chuckling again. \"Sure is good doing business with you, Dale.\"\n\n\"Same here, Brian.\" we disconnected.\n\nMia and I went shopping. We let the store clerk talk us into way too many painting implements, and we picked paint for two rooms. Mia had a terrible time trying to pick the colors. She finally narrowed it down to five and made me a pick the winner. I made it look like I was considering them carefully. I actually did \"eeny, meeny, miny, moe\" in my mind. Two of the colors were so close, I couldn't even tell the difference. That choice made, she picked accent colors. I couldn't wait to paint.\n\nWe spent a few hours at a travel agent. Mia wanted this part to be perfect. I couldn't believe she even suggested it. She hit a homerun as far as I was concerned.\n\nThe grocery store was a lot more fun. We got to find out a lot about what we like and dislike. We were totally compatible in the meat department, polar opposites when it came to vegetables. We both loved ice cream although we had to compromise on mint chocolate chip. I snuck some chocolate syrup into the cart. When I thought we were done, she took me back to the vegetables and grabbed the broccoli that I had poo-pooed earlier. I was told it was good for me, and if she had to serve it off her breasts to get me to eat it, she would. Broccoli was looking better all the time.\n\nAt 3:10 we called Gem Works. I was put through to Brian Fitzgerald's office. \"Hello...\" It was a very unsure greeting.\n\n\"Mr. Patterson, this is Dale Tomlinson along with Mia Perez.\" I made it sound pretty snobby.\n\n\"I am not sure what is happening here, Mr. Tomlinson.\" He sounded a bit scared. Brain must have shaken him up a bit.\n\n\"I assume that Mr. Fitzgerald explained the position you're in?\" I wanted to keep the pressure on.\n\n\"I have been informed, but I don't understand. I don't even know you, Mr. Tomlinson.\" This guy must be a complete idiot.\n\n\"You should, I bought you a boat a week ago.\" Let's see if that jogs his memory.\n\n\"That was you. I thought the bitch that stole it paid for the new one.\" He wasn't very good at connecting the dots. Pompous ass was a very good description of him. Time to see how much of his foot he can fit into his mouth. Mia was fuming. \n\n\"Mr. Patterson, I am going to turn this over to my fianc\u00e9, and if you call her bitch one more time I will make it my mission to ruin your life.\" God! I wish I was in the room. There was complete silence on the other side.\n\n\"Mr. Patterson, do you now have a better understanding about what is going on?\" Mia's face was quite serious as she brought him to reality.\n\n\"Yes.\" Only one word. He was beginning to understand where he stood.\n\n\"I understand that you are married, and that it is your father's boat that you use for your water bang parties?\" Mia was keeping the pressure on, making sure he knew that we knew everything. She needed this retribution. There was silence on the other end. \"Is that information correct, Mr. Patterson?\" She wasn't going to make it easy on him.\n\n\"Yes. Look things got a bit out\u2014\" Mia wasn't interested in what he thought.\n\n\"I am sure you don't want your family to become aware of your parties.\" She continued in a terse tone. \"Those parties and anything that even smells like them are over. We just spent five million to get this far. Imagine what we could do if we made it our life's work to ruin you.\" Mia was getting into it. There was more silence for his side. \"Do we have an understanding, Mr. Patterson?\"\n\n\"Yes.\" He was back to one word answers.\n\n\"To make the ramifications fully clear: you lose your job, and your family finds out why. I accept a prostitution charge, and you fight attempted gang rape and kidnapping charges. Your perverted friends go down the tubes with you. I can be quite convincing when I'm sober Mr. Patterson.\" I liked mean-Mia\u2014as long as her ire isn't directed at me.\n\n\"I understand.\" He graduated to two words. He sounded like he wanted this to end.\n\n\"You lied to the police and forced my future husband to buy your dad a new boat.\" She was smiling a bit now. \"I would think you would feel really guilty about that. I think an act of contrition would ease your soul a bit. Maybe a donation in the amount of $33,781 to the East Side Clinic in the care of Dr. Williams would make you feel a bit better. Did you get that, Mr. Patterson.\" \n\n\"$33,781, East Side Clinic, Dr. Williams\" He didn't sound too happy about it.\n\n\"If you do decide to make the donation by the end of the week, I know I would feel better about your soul.\" Mia threw in a timeline on her own. She was a smart girl. I smiled at her forethought. I decided to jump back in.\n\n\"Mr. Fitzgerald and I will be discussing your status on a regular basis. I really hope you're not one of those deadweight employees. I have a lot invested in Gem Works and I wouldn't want it hindered by anyone I have taken a special interest in.\" I tried to make it sound a bit menacing. I was just trying to throw a bone to Brian. I didn't want him stuck with a useless asshole.\n\n\"I understand. You won't have to talk with me again.\" He sounded contrite. I know it was due to fear, but it was nice to hear it all the same. Mia ended the call.\n\n\"You have a nice day, Mr. Patterson.\" I hit the disconnect. Mia jumped into my arms. \"A week ago I was powerless against that jerk. Today he was cowering at our feet. I felt like I was punching him in the face for every girl he has done that to.\" She smothered me with kisses. \"We're like superheroes. We need to buy capes or something.\" She started bouncing around twirling in circles. Her happiness was worth way more than five million.\n\n\"We have one more call to make Mia.\" I smiled as the final stage of our plans was about to unfold. \"You have to be quiet for this one.\" I dialed Monica number.\n\n\"Monica, It's Dale Tomlinson.\" I tried to sound like my pre-Mia self.\n\n\"Hello, Mr. Tomlinson.\" She didn't sound like her normal confident and efficient self.\n\n\"Ms. Perez is not on the street and is off heroin. I trust your husband hasn't left you.\" I was having a hard time trying to sound stern. Mia was smiling.\n\n\"No sir, I'm sorry about that. I was just a\u2014\" I interrupted.\n\n\"I have a rather large business deal to complete in Las Vegas in two days. It involves a significant portion of my assets. I want a private charter. There is a possibility of extra passengers.\" I had to get Mia on the plane without her knowing. \n\n\"Meeting time.\" Efficient Monica was back.\n\n\"3 pm.\" I pulled the time out of my ass.\n\n\"Hotel preference.\" I told her to choose one on the main strip.\n\n\"I will send the itinerary to your email as usual, Sir.\" She was about to hang up.\n\n\"Monica, I am going to need you there.\" I couldn't imagine her saying no.\n\n\"Yes, Sir. I will meet you there.\" She dropped the line.\n\nNow all I had to do was find someone to marry Mia and me at 3 pm. I really should have taken care of that first, but what the hell, it's Vegas.\n\nTwo hours later I had a full itinerary on my phone. Limo service to and from the airports and a suite of rooms at the Bellagio. I called up the Bellagio and they had no problem setting up the wedding. Turns out they have chapels on site. It's Vegas, baby! Mia and I called Dr. Williams and talked him into joining us for the weekend. Once he heard that Monica was coming, still unaware of the situation, he was on board wholeheartedly.\n\nWe woke the next morning with two goals: pack for our trip the next day and paint a room. We choose the smallest spare bedroom to start. Since neither of us had painted in a long time, it seemed prudent to start small. We removed all of the furniture and outlet covers then covered the carpeting with drop cloths and taped around a few fixtures. After we brought in all our implements and the ladder, we stripped.\n\nMia had agreed to do most of the edging, and I was going to handle most of the rolling. We both started edging first before I could fill it in with the roller. I had made sure that Mia was on the ladder doing the ceiling edging while I started on the baseboard. The view was spectacular. Mia was trying to keep me on task, but my eyes kept moving back to that tushy on the ladder.\n\nWhen you are relearning to paint, you have a tendency to get paint all over yourself. When you're horny and relearning, you get paint on your dick. Mia laughed when she saw what I had done. She climbed down from her perch and wiped me with a wet rag. My cock twitched a bit as she wiped off the rest of the paint. She chuckled.\n\n\"No sex till the room is done.\" She gave my dick a little kiss and climbed back up the ladder. Well you can't kiss a guys dick and then use the words \"no sex. \" I was aroused, and I felt our naked painting agreement might need some renegotiation. I started using her can of paint to fill my brush. Every time I needed a refill, I would stand up to reach up to the ladder tray and dip. This would allow my free hand to roam over the back of her thighs and tweak her butt.\n\n\"Stop that! You're going to make me screw this up.\" Mia was smiling so I knew she wasn't too serious. Every few moments, I would return for more paint and leave a small caress in my wake. She stopped complaining and just let me have my little feels. When I finished the current wall's baseboard, I dipped my brush to begin moving up the corner. Just before I returned to the wall I very lightly scraped my fingertips along the inside of her knee. Her knee collapsed inward, and I saw her brush slip and slightly paint ceiling. \n\n\"I can't believe you just did that.\" Mia turned with what I could only describe as an evil smile. \"You know what that does to me.\" I saw the brush headed for me but didn't react in time. She caught me on the shoulder and bicep, a big lavender blotch on my arm. I didn't even think before I reacted. I slapped my brush on her left butt cheek. I had forgotten I had just dipped it back in the paint. I covered my mouth to hide my grin as I began moving backward. Mia's lips formed a large 'O' as she watched the large splat of paint begin to run down her thigh.\n\nMia's paintbrush went back into the bucket. When she withdrew it, half her hand was covered and it was dripping all over the ladder and drop cloth as she descended. I had no choice; I started for the door.\n\n\"If you want me to marry you, you had better stay right here in this room!\" She was smiling as she inched toward me led by the heavily soaked brush. I knew she would still marry me if I ran, but I felt I had to prove my love. I stood my ground and raised my brush in the en-garde position. I circled around the room slowly trying to keep my distance from the loaded brush. She moved with me, cutting me off and allowing less and less space to move. I had no choice; I attacked. I went over her arm and straight for her breasts. The brush barely touched before her free hand grabbed the top half of the wooden handle and steered it away.\n\n\"Men always go for the breasts,\" she laughed. Then she swiped. She started low on my stomach and dragged the brush up across my chest and finished at the base of my neck. It was seriously cold paint. I sucked in my breath and let go of my brush. She had them both now. I raised my hands.\n\n\"I surrender.\" I could feel the paint beginning to drip. Mia just smirked. I think she was under the impression that we weren't even yet. She pointed to the floor with one of the brushes.\n\n\"On your knees when you beg for forgiveness!\" She indicated the floor again when I didn't move quick enough. I dropped to my knees.\n\n\"I'm sorry for teasing you.\" I didn't really sound sorry because I wasn't. Mia moved directly in front of me, her pussy inches from my face.\n\n\"For penance, you will now pleasure me.\" I looked into her eyes and all I saw was love. My hands were full of paint so I knew it was tongue only. I reached up and pulled her forward by her buns forgetting that one was covered in fresh paint. I felt paint drip on the back of my arm from the soaked brush she still held. My tongue dragged across her dry slit as Mia spread her legs to give me more room. I forced my tongue to split her lips and open her flower. I tasted the beginning of wetness. More paint dripped on to my back as Mia shifted her weight to give me more access. I drove my tongue deeper and dragged my hands down her thighs, one pulling wet paint. I heard a quiet moan from above as my mouth moved a bit higher.\n\nMia dropped the brushes and moved her hands behind my neck. I felt paint dripping down my back as she pulled me in tighter. Her pussy was becoming wetter as I massaged the back of her knees with my hands. I moved my mouth higher and lightly licked both sides of her hood, trying to coax her clit out of hiding. Mia moaned again and slowly dropped to the floor. I followed her down, never losing contact with her moist opening. She grabbed my arms and pulled me up over her body. \"I want you in me.\" She was breathing harder. I pushed her hair out of her face with the wrong hand and left a trail to paint on her cheek.\n\nI knew her body now. I knew every inch. I guided my cock to her opening and slowly inserted the head. I felt her hips shift to allow me a better angle. I held her head steady with both hands, accidentally painting one side. I locked onto her eyes, \"I love you, Mrs. Tomlinson.\" and I slowly inserted myself into her until our pelvises met. I remembered the feeling of her grinding into me in the pool. I knew what she liked. I lowered my hips a bit rubbed my groin into hers. It felt the same and Mia's head fell back with a groan.\n\nI withdrew and slowly re-entered. When we met again, I shifted my hips down and ground my way back up. \"Oh God, Dale!\" Mia's neck was tightening up, and I felt tremors beginning to build. I felt like a king. I loved making her body react. I withdrew and returned again. The grind this time generated shaking in her legs. I knew she was close. I was waiting for her. I withdrew again, and when I returned, she grabbed my ass and pulled me in tight. She started grinding herself into me as spasms ripped through her body. Her breathing was a set of halting groans as I felt her muscles tighten. I exploded, my hips grinding of their own accord. Our pleasure took over our humanity as we struggled like wild animals. I came again, and Mia groaned louder as I felt her pussy clamp down. I realized I was also groaning as the last spasm ripped through my body. I wanted to collapse, but Mia was still grinding in a world of her own. My muscles wouldn't cooperate so I just let her spend herself on my hips.\n\nMia collapsed onto the paint covered tarp. She looked at me and started laughing. I collapsed next to her, my dick reluctantly leaving its precious home. We were covered in paint. There was more on us than on the walls. Mia grabbed my face and kissed me hard. \"No more naked painting.\" She was still trying to catch her breath.\n\n\"Sorry Mia, you just looked too damn sexy on that ladder.\" I knew I was the instigator. I also knew I would do it again. Mia dipped her finger into the wet bristles of the soaked brush and found an unpainted part of stomach. She finger painted \"Mia's\" on to my body and kissed me again. I liked that she owned me. I caressed the side of her head with my clean hand.\n\nI looked around the room and was hit with a thought. \"Mia, what if we make this our yesterday room?\" She looked at me kind of funny. \"We can hang our pictures of Grandma, Adrian and Carlos. Then we can come in here to remember. The rest of the house will be for the now-us.\" She was smiling when I was done.\n\n\"That's a lovely idea.\" She stroked my arm. \"You have a good heart, Dale.\" She cuddled in close, and I felt our paint start to mix. \"Yes, that's a perfect use for this room.\" She kissed me on the ear which sounded a lot louder than it felt. We lay in the paint for a while longer enjoying the closeness.",
        "\"We better shower and pack.\" Mia offered up the plan. I agreed and helped her to her feet. I closed up the paint and grabbed the brushes to wash them out. We only got about half the edging done on one wall. Naked painting isn't productive at all. I smiled as I put both brushes in one hand and palmed the wet bristles with the other. \"I'll meet you in the shower,\" she said, not really looking at me. I moved in close for quick kiss, and when our lips met, I grabbed her boob with my paint covered hand.\n\n\"You're right, we always go for the breasts.\" I smiled as I headed to the utility sink. Mia now had a lavender hand print that covered the majority of her boob.\n\n\"This is not over by a long shot Mister,\" I heard as I proudly headed down the hall trying not to drip. I have been pretty happy with the punishment so far. Getting tortured with sex can be so cruel. \n\nMonica's itinerary was flawless as usual. We were in Vegas by 9 am and in our rooms by 10. I hustled Mia and Bob out to one of the fancy dress shops in the hotel before they could accidently run into Monica. The store had my card and instructions to make Mia beautiful. Bob was going to roam the strip and pick up Mia just before 3 and meet me in the chapel. I went back up to room. I just had to keep a straight face for a few more hours.\n\nAt exactly noon, there was a knock at my door. I tried my best to pull my mind away from my new happiness. I needed to hide everything for a bit longer. I rose from the chair on the second set of knocks and opened the door. It was, of course, Monica.\n\n\"Hello, Mr. Tomlinson. I just got in from the airport.\" She seemed a bit flustered. She tried to nonchalantly look past me. I think she got wind that I did not fly up alone. I opened the door wider and stood aside. Monica walked in without instructions. I walked to the small sitting area and took a seat. She followed and took the other. \n\n\"I will admit that operating without you is fairly difficult Monica.\" I was sounding stern. I was bit proud of my acting. \n\n\"I want to apologize for my actions, Sir. I was a bit overwrought at the time.\" She was trying to find out how much damage she had caused. I am sure she feared a drop in her living standard. \"I had no right to demand anything of you. You have never failed to reward me for my services.\" I smiled inside. She was thinking I might be trying to replace her. I held up the palm of my hand.\n\n\"No. That woman saved my life. I owed her one of her own. I see that now.\" I had to look away from Monica. I was afraid I would start laughing. \"I'm not sure I appreciate your methods, but the results are as they should be.\" \n\n\"Mr. Tomlinson, I fear I might have damaged our relationship.\" She was sounding like business, but her eyes looked like pleading. \"I never really thought it would go this far.\" She was sweating on the inside.\n\n\"I do believe our relationship has changed Monica.\" I paused for a moment. \"Only time will tell by how much.\" I had to look away again. I had forgotten how to look aloof. \n\n\"I regret that it has, Sir. Prior to this incident, I have never failed to work in your best interests.\" She was really beginning to sweat. I was almost ready to cave, but I just didn't want to spoil the surprise.\n\n\"As Bob ceaselessly reminded me when I was setting up this deal.\" There, I kept my promise to Bob. \"I am, however, concerned where his loyalty really lies.\" Monica's head dropped to the floor. I had to end this soon before she suffered too much.\n\n\"It's to you, Sir.\" Monica's emotions were getting a bit too involved in her voice. \"I got wind of your actions, and Bob ignored my queries. I'm sorry again, Mr. Tomlinson, I felt a little left out of it all.\" Whoa, she was starting to take it personally. I had to end this. I stood up.\n\n\"Meet me downstairs at the front desk at 2:45.\" I started walking toward the door. Monica realized she was being dismissed and followed. \"We will discuss this again after the meeting.\" I opened the door and she walked out. I closed the door and sighed. I may have taken it a bit far. I glanced through the peephole, and she was just standing there with her hand over her eyes. Yes, maybe a bit too far...\n\nAt 2:40 I was downstairs, dressed in my finest suit. It was actually my only suit. I had to wait exactly five minutes for Monica. She looked dressed for business, but I noticed her eyes were a bit red. Shit, I let it get a bit far. As soon as she walked up to me I turned and headed to the chapel. I figured if I walked faster, time might jump ahead with me. We turned down a couple of halls and passed a sign that said \"Chapels\" with an arrow pointing in the direction we were headed. Monica did a double-take but followed along.\n\nWe entered a lounge with a few doors to different chapels. I entered the chapel I had reserved, and Monica followed more slowly. \"I don't understand, Mr. Tomlinson. The meeting is in the Wedding Chapel?\" Leading her on like this was frustrating. I snapped accidentally. \n\n\"Just wait here, Monica!\" I indicated a chair by the door. I saw her eyes begin to water as she sat slowly in the chair. Time needed to speed up a bit faster. I walked to the front of the chapel and spoke quietly with the man who would perform the service. A moment later I heard Monica behind me. It was the first time I had ever heard her distraught in my life.\n\n\"If you're going to fire me, you could have done it over the phone.\" I turned to face her and was shocked to see mascara following tears down her face. I felt her pain in my chest.\n\n\"Monica, I'm not going\u2014\" My words caught in my throat. Mia walked, in and she was simply stunning. I didn't think a woman could look so good. Her long hair was pulled back and to the right by a rich red ribbon. Two red roses were over her left ear highlighting the lacy white dress that flowed over her curves. The dress was bound by a red belt that tied in a bow on the left. She was holding a small bouquet of red roses. \"Beautiful,\" I said by instinct as I stared at my future wife. Mia smiled and the whole image glowed brighter.\n\nMonica heard my word, saw my smile and followed my eyes. Mia's expression changed immediately. \"Dale!\" She started hurrying forward to Monica. \"What did you do to her?\" Monica's mouth was wide open; mascara was all over her cheeks. She kept looking back and forth between Mia and myself.\n\n\"It went too far. She thought I was going to fire her.\" I was pleading my case to deaf ears.\n\n\"Ahh, Monica, I'm so sorry it came to this. \" Mia wrapped Monica in her arms. Monica was still in shock, and I don't think she even recognized Mia.\n\n\"I was about to tell her when you walked in...\" I didn't want Mia upset with me on our wedding day.\n\n\"Well you should have told her sooner.\" She started rubbing Monica's back. \"You probably had her in tears all day.\" She sat Monica on a nearby chair and looked back at the smiling Wally. \"Wally, grab some water and a towel or something.\" He left, chuckling. Monica's mouth was still standing open. \"Well, tell her, Dale. I won't have any tears at our wedding.\" Monica's mouth opened wider. Mia's hands were on her hips, waiting for me to comply. I softened my voice as I dropped to one knee in front of Monica.\n\n\"You remember Mia Perez, Monica.\" I smiled trying to make sure she understood I had no ill will. \"We kind of hit it off during the detox.\" I grabbed one of Mia's hands off her hip. \"We're getting married today, and I needed you here as a witness.\" Monica mouth was still wide open, looking between Mia face and mine. I gently took hold of Monica's hand. \"Are you alright?\" I heard Bob re-enter the chapel.\n\n\"You've known her for a week.\" Monica looked back to me. \"You don't like anybody.\" I laughed and patted her hand.\n\n\"I assure you, I love this woman more than life itself\" I smiled at Mia who dropped her other hand off her hip and smiled back.\n\n\"I didn't even know you could smile.\" Monica was still in shock. Bob exchanged the water and towel for Mia's bouquet. Mia sat down next to Monica.\n\n\"Your mascara is a bit askew.\" Mia dipped the end of the towel in the water and began wiping the worst of it off her face.\n\n\"Making me take care of Mia was the best thing you could done for me.\" I stood back up. \"I needed her as much as she needed me.\"\n\n\"I never met the Dale you know.\" Mia kept cleaning Monica's face as she talked. \"I fell in love with a very tender man with a strange SpaghettiOs fixation.\" Monica laughed at that. Leave it to Mia to move us past the tears. Wally leaned down near Monica. \n\n\"These two share a very compatible type of insanity.\" He chuckled again.\n\n\"You see, Monica, I have no intention of firing you. You are my second favorite woman on this whole planet.\" I smiled at her, figuring that should settle it. I saw tears welling up in her eyes. She jumped up and wrapped her arms around me and started bawling. I looked at Mia for help, and she was crying too. I looked at Wally.\n\n\"I knew this would be an insane wedding.\" Wally started chuckling again. I was beginning to think he was a bit on the insane side.\n\nOnce the girls had fixed their makeup, the wedding went off without a hitch. Mia surprised me with a little poetic vow about me pulling her from a pit of darkness into \"my heart full of light.\" I had to think fast, and I could see in her eyes that this was payback for a handful of paint.\n\n\"Mia, before you entered my life, I thought love was only a word for poets.\" I smiled into her eyes. \"I now know poets are just souls who ache for what I have through you. You are my ocean, my waves. You are my SpaghettiOs.\" I heard a whimper from Monica and I saw the water in Mia's eyes. Wally was holding back another chuckle.\n\nMia and I took our witnesses out to dinner after the wedding to celebrate. We spent the entire dinner laughing and telling Monica all that had happened over the last week. We were into our fourth bottle wine when Mia decided to give her gift to Monica.\n\n\"Dale told me why you made him take care of me.\" Mia was glowing. \"I felt bad that my thoughtless husband would do such a thing.\" I interrupted.\n\n\"Hey, I didn't know you then!\" Mia smacked me lightly in the shoulder. \n\n\"A tenth anniversary only comes around once. It deserves to be recognized.\" Mia looked at me like I might forget some future event. \"We wanted to buy you a second honeymoon to make amends.\" Mia smiled handing an envelope over to Monica.\n\nMonica opened the envelope with wide eyes. \"Oh my God!\" she said as she looked at the three-week cruise to the islands and South America.\n\n\"And everything is planned.\" Mia was all jumpy. \"I wanted to make sure you didn't have to think about a thing, just like when you take care of Dale.\" Mia was really proud of herself. \"Dale cleared the time with Charlie's boss, and I'll make sure Dale doesn't try and call during the trip.\" Monica started tearing up again.\n\n\"Oh my gosh, guys! This is amazing!\" Monica was wiping the tears from her eyes. Mia hugged her and started crying too. You would have thought we were poking them with burning sticks.\n\nI was excited, because I saw the dessert tray heading our way. I slipped the pastry chef a hundred to make something special for me. The waiter went around, delivering the desert, leaving Wally for last. I was getting antsy. The waiter smiled at me and reached under the tray and pulled out a small top-hat-shaped cake. It was perfect. He placed it in front of Wally, who for once looked very confused.\n\n\"I don't think this is what I ordered.\" He looked up at the waiter who just smiled and nodded at me.\n\n\"I quote: 'If you two are friends at the end if this I'll eat my hat.' \" My timing was perfect. Mia burst out laughing which infected all of us. To his credit, Wally ate the entire thing. I think he liked being the center of attention even if it was a joke at his expense.\n\nOver coffee, Monica was whispering to Mia. Monica reached into her purse and removed what looked like an old envelope that had seen better days. Monica looked at me. \"I made a promise a few years back that earlier today, I thought I would have to break.\" Her eyes were getting watery. \"I think I was planning to throw this at you Dale.\" She was indicating the envelope, half smiling and half crying. Women were becoming confusing again. \"Now, I get to keep that promise.\" She handed the envelope to Mia, then wiped some tears from her eyes.\n\nMia seemed a little confused herself. The envelope didn't have any markings and seemed to contain more than just paper. She broke the seal and looked inside, and I saw her eyes tear up. I tried to see what was inside as she pulled out a single folded piece of paper. Mia opened it and began to cry which was echoed by Monica. They hugged each other.\n\nI reached over and looked into the envelope. My eyes began to water as I looked at my Grandma's butterfly brooch. Mia handed me the letter and hugged me as I read:\n\nTo whomever has found my Dale's heart,\n\nPlease take care of it. It is very precious to me.\n\nLove Eleanor."
    ],
    "authorname": "DreamCloud",
    "tags": [
        "loner",
        "addict",
        "life renewed",
        "rich"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-beach-house-12"
}