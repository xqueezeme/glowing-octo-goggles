{
    "title": "Fetishes Awakened Pt. 01",
    "pages": [
        "Editor's note: this story contains scenes of incest or incest content.\n\n*****\n\nIf anyone had asked me if I had fetishes when I turned eighteen, I think the answer would have be 'no'.\n\nLittle did I know however, that I actually did have a kinky side to me. And all that it took for me to figure it out was agreeing to have sex on camera for money.\n\nYeah, doing porn.\n\n******\n\nIt wasn't an understatement to say my folks weren't impressed with my choice of career. But just after turning eighteen, I had informed them of my plans to move out and to Toronto because I wanted to try to get into acting.\n\nEven though they weren't thrilled, my folks didn't stand in my way. So two weeks after my eighteenth birthday I was on board a bus and heading to Toronto to try and break into acting.\n\nDespite having dreams of some day being a famous actor, I also knew when I got off the bus in Toronto, some leg work needed to be done.\n\nI found myself a dumpy, yet furnished bachelor apartment near downtown for a reasonable price. Then I grabbed a paper and went out looking for a regular job. I did have an industrious streak. So it came as no surprise that I had gotten myself a job as a dishwasher at a Red Lobster restaurant.\n\nNow that I had a place to live and a job to pay the bills, I decided to relax for the rest of the evening. While sitting in my dumpy, musty apartment eating a pizza, I perused the yellow pages for talent agencies in town and decided to call and visit a few the next day.\n\n******\n\nOnly one agency agreed to meet with me that day. So I went in and met with one of the agents. I explained to him that my 'experience' was only in school plays and drama class, but that appeared to be enough.\n\nI also knew that looks wise, I wasn't hurting. I was only 5'8\", and 145 pounds. I had long and thick brown hair, along with a really nice set of green eyes.\n\nWhether it was my looks, my enthusiasm or whatever, the agent seemed to be interested in taking me on as a client. He explained to me that getting a proper portfolio was the most important thing, and immediately alarm bells went off in my head.\n\nWas this guy a talent agent, or was he running a photography/printing place masquerading as a talent agency?\n\nI shrugged it off and figured he was just getting kick-backs from the place that did the portfolios up. I was probably put more at ease when he said if I couldn't afford the cost, I could get the basic portfolio, and although it might not get noticed, it should get me enough work to pay the good portfolio off.\n\nSo I filled out a few forms, and posed for a few pictures and that was that.\n\n******\n\nThree months later, I still hadn't scraped together enough money to pay for the good portfolio. Even though my rent was pretty cheap, other costs of living ate up most of my weekly paycheque. And, I had only gotten one job from the agency, and it only paid a hundred bucks.\n\nStill I was resolute. I had decided that once a week, after getting my paycheque and going to the bank to deposit it, I would grab thirty or forty bucks and immediately head to the agency and deposit it in a trust account. When I got to the magic number, the funds would then be put towards getting me the good portfolio, which my agent assured me would lead to more work.\n\nIt seemed like a good plan to me. One of the drawbacks that I'd run into was despite the fact that I was still a year too young to legally drink, there were a few places I could go that would serve me without asking for ID. And, it turned out I liked to drink.\n\nBut after the third visit to put money into my trust account at the agency, I realized I was at least two months away from having the necessary funds to pay off the new portfolio. As I left the agency I thought about going to a local dive bar and getting shit-faced to allay my depression.\n\nThat's when Rob approached me.\n\nHe was an older guy, probably in his early forties, with slicked back short black hair, a tan face, and a bit of a beer belly.\n\n\"Not to freak you out or anything,\" he said amicably as he approached me. \"But could I buy you a drink? There's something I'd like to run by you.\"\n\nSkeptical though I was, I wasn't one to turn down an offer of a free drink.\n\n******\n\n\"So,\" Rob said calmly as he set a quart bottle of Molson Export in front of me and sat down opposite with a bottle of Labatt Blue for himself. \"I have a proposition for you.\"\n\n\"I'm listening,\" I replied as I poured some beer into my glass and took a swig.\n\nHe took a swig of his beer and then shrugged and smiled. \"Okay, I'll just come right out with it. I'm an independent adult video producer. You know those ads you see in the back of nudie mags? Well that's what I do.\"\n\nI have to admit I was a bit stunned. This was not what I was expecting. \"Okay,\" I said with a slight suspicious tone in my voice.\n\n\"The thing is,\" he continued casually. \"Is that everybody is doing this kinda shit,\" he sighed and rested his elbows on the table. \"So I realized I had to find a niche.\"\n\nAfter getting over the initial shock of what he'd told me, I nodded in understanding. I had seen the ads he mentioned. It sure did seem like an awful lot of people had ads in the back of those magazines. After all it was the late 1980's and every idiot had a video camera. So why wouldn't some people video people fucking and offer to sell it though the mail?\n\n\"So,\" Rob continued as he lit himself a smoke. He was kind enough to offer the pack to me and I accepted one and lit it myself. \"My niche,\" he smiled as he exhaled smoke though his dingy teeth.\n\n\"I'm not gay,\" I said with a smile as I lit my smoke. \"So I won't do anything with another guy. No matter how much you offer to pay.\"\n\n\"No,\" he chuckled in response. \"I don't know if my niche would work in gay porn anyways.\"\n\nHell if I know why, but suddenly I was intrigued.\n\n\"Y'see,\" he continued as he took another sip of his beer. \"I've got a few women who are willing to do the work. They're all older, and overweight. That's my niche.\"\n\n\"Okay,\" I nodded. It didn't seem like my cup of tea, but whatever.\n\n\"The problem I've run into is that while I haven't had any problem finding good looking younger guys to agree,\" he paused and sighed. \"I need a guy who can keep it fucking a two hundred sixty pound forty eight year old, or a heavy set sixty eight year old.\"\n\nI honestly don't know how long I sat there in stunned silence, but it wouldn't have surprised me to learn that it was over a minute.\n\n\"So?\" Rob finally broke the silence. \"Interested?\"\n\n\"Sure,\" I finally blurted out. \"I mean, I guess. What's the money like?\"\n\n\"Fifty bucks up front per shoot,\" he replied very business-like. \"If sales go over fifty units, you get an additional fifty. I've never had a video sell over one hundred units, but if it happens, an additional fifty then too.\"\n\nI took a swig of my beer and pondered for a minute. \"How can I know what the sales are to know you're not holding back?\"\n\n\"Hell,\" he chuckled. \"You're shrewd. I like that.\"\n\n\"Well?\" I asked as I butted my smoke out. \n\n\"I keep detailed records. You can have access anytime you want.\"\n\nI eyed him suspiciously for a moment. \"Okay,\" I finally said. \"But,\" I added before downing the rest of my beer. \"If sales go over one hundred that payment should be for one hundred too. Not just fifty.\"\n\nHe eyeballed me for a moment then nodded. \"Sure. Why not?\"\n\nSo, we had a deal.\n\n******\n\nI had to work that evening, but before I went I stopped off at a porn shop and browsed through the magazines and videos. There weren't many in the niche Rob had mentioned so I wondered what the market was actually like. That being said, I can't say I was really looking forward to what I'd just agreed to.\n\nEven as I slaved away in the dish pit at Red Lobster later that evening, I kept eyeballing a couple of really cute waitresses. That was the kind of stuff I wanted to be banging. However, I realized because I was a dishwasher, I wasn't exactly high up the 'food chain' in terms of what they might be looking for.\n\nAs I eased into bed well after 2am that night I sighed and convinced myself that I could go through with what Rob was proposing. I'd get paid and get to have sex. That worked for me.\n\n******\n\nFour days later I got a call from Rob. He asked if I was available the next day late in the evening. After I told him I was, he gave me an address and that was that.\n\nSo the next night at 11:30 I approached the address Rob had given me. It was a small, five story building in the east end of downtown. As I walked up, Rob popped out of a Cadillac parked out front. \n\n\"All set?\" he asked.\n\n\"Sure,\" I shrugged.\n\n\"Okay here's the deal. Josee is in the car. I'll go in and get things set up and when I'm ready you two come on in.\"\n\nI nodded and Rob headed off to the main door of the building. I headed over to his car and leaned in and saw Josee.\n\n\"Hi,\" I said with a smile.\n\n\"Hi yourself,\" she smiled back. She was a native woman, probably in her forties. And she was heavy set. I couldn't gauge her weight, but she had a huge set of tits, and even though she was sitting in the passenger seat, I could tell she also had an ample back side. \"I think I'm gonna enjoy this,\" she added with a giggle.\n\n\"Me too,\" I replied with a knowing grin.\n\nI glanced over my shoulder and happened to see Rob slipping some cash into the hand of what I assumed to be the building super. A moment later Rob was opening up the trunk and pulling out his camera gear.\n\n\"Give me five, ten minutes,\" he said as he closed the trunk. \"Then I'll be ready for you two. Smoke 'em if you got 'em.\"\n\nJosee hopped out of the car and lit herself a cigarette and offered me one as well. \"So is this your first video?\" she asked.\n\n\"Yeah,\" I replied as I exhaled. \"You?\"\n\n\"No,\" she said with a shake of her head. \"I've done a couple\"\n\n******\n\nFifteen minutes later Josee and I were in the laundry room of the building with Rob. He had his camera and lights set up and was outlining what he wanted from us. There were two baskets of laundry in there - one for me, and one for Josee. Rob wanted me to come into the laundry room first, and get started, then Josee would come in a moment or two later. Then the fun would begin.\n\n\"Okay Dale,\" Rob moved a bit closer to me as Josee moved off to the other end of the laundry room and got undressed. \"I want you to come in looking like you'd rather be pissing glass than doing laundry.\"\n\n\"Uh huh,\" I nodded. I tried to pay attention to him, but my gaze kept darting over to Josee. She was a big girl, and her ass and tits were both huge. But I felt my dick stirring in my pants.\n\n\"Josee will come in,\" Rob continued. \"You eyeball her just like you're doing now,\" he chuckled. \"She'll chide you for it, and then,\" he trailed off with a shrug.\n\n\"Got it,\" I nodded. \"Nice and easy.\"\n\n\"Well plot points aren't what the audience is looking for,\" he moved to his camera. \"All set Josee?\"\n\n\"You bet,\" she said as she approached us. She was wearing a near transparent nightie. It was low cut and most of her ample breasts were exposed. It also barely covered her large ass.\n\nOnce again, I felt my dick stirring.\n\n\"Okay,\" Rob said with a clap of his hands. \"Let's do this.\"\n\nOn Rob's 'action' cue, I entered the laundry room looking exactly like he wanted - that I'd rather be pissing glass than doing laundry. I sighed heavily as I dropped the basket onto a washer and dug into my pocket for some quarters.\n\n\"Okay Josee,\" Rob prompted her. \"Come on in.\"\n\nAnd in she came. She swayed as she walked with the laundry basket pressed against her belly, and her hug tits swaying as she walked. She placed her basket on the floor and Rob cut the scene.\n\nHe directed me away and moved the camera in to get some close ups of Josee's tits and ass. Then he was back in his original position and we continued on as planned.\n\nJosee chided me for looking at her. I tried to act aloof and like I wasn't staring. A few minutes later she was coyly telling me that we had time to kill, so what would we do.\n\nA moment later her nightie was on the floor and she was on her knees giving me a blow-job.\n\nWOW! She may have been an older, overweight Indian, but this woman had a velvet tongue. As she wrapped her lips and swallowed my swelling cock I thought to myself 'who in the hell wouldn't be able to keep an erection with her?'\n\nAfter a few minutes of Josee blowing me, she released my cock from her mouth and stood up. I got undressed and at Rob's direction, I helped her up onto one of the washers then I spread her legs and was about to dive my face in.\n\n\"And cut,\" Rob announced. He moved the camera in closer and instructed me how to lick her pussy but still give the camera a look.\n\n\"Got it,\" I nodded.\n\nA few moments later, with lights blaring on my head, I held Josee's meaty thighs apart as I worked my tongue over her clit and her pussy lips.\n\nRob called 'cut' again to reposition the camera, and just as I was about to lift my head, I felt Josee's hand grip the back of my head.\n\n\"No, no,\" she hissed. \"I'm close. Keep going.\"\n\n\"Yeah,\" Rob said with a chuckle. \"Don't wait for me.\"\n\nSo I kept at it and a moment later, Josee was coating my tongue with her slick cum. \n\n\"Shit yes!\" Josee yelped. She wrapped one of her meaty legs around the back of my neck and with her hand forced my face deeper into her slit. \n\n\"I'm rolling again Dale,\" Rob announced. \"Keep going. This is awesome!\"\n\nI could feel Josee's body writhing with pleasure as I kept darting my tongue in and out of her pussy, and around her engorged clit.\n\n\"Oh I'm cumming again,\" Josee moaned loudly. She arched her back and pressed her pussy into my face. She shook with delight as another orgasm ran through her body. \"Oh damn,\" she whimpered as she relaxed her body after she stopped cumming. \"Give your cock baby!\"\n\n\"Go for it Dale,\" Rob called out. \"I'm just gonna move in closer when you slide it up inside her.\"\n\nI slowly raised my head from between Josee's legs, and I still had some of her slick goo on my chin. I licked it up with a smile as I stood up and began to guide my cock into her hot pussy.\n\n\"Nice and slow,\" Rob ordered as he sidled up next to me. I nodded and pressed my cock against her slickened pussy lips and then guided it slowly inside her as instructed.\n\n\"Oh fuck yes!\" Josee hissed loudly. \"That's it! Go deep! Don't be giving me no gentle cycle!\"\n\n\"Great line Jo,\" Rob chuckled. \"Go on Dale. Give it to her.\"\n\nI didn't need to be told twice. Josee's pussy was warm and inviting. It was a bit slack due to her age, but I wasn't complaining. Despite having Rob standing next to me, I was enjoying how it felt.\n\nIt was essentially just a regular fuck session, and there just happened to be a guy with a camera there. Rob didn't interrupt us all that much. He just repositioned a few times. He did tell us to switch to doggy style. So I pulled out and stepped back, and let Josee slide off the washer and turn around. After she did, with Rob up close and filming, I slid my cock between her big ass cheeks and back up inside her pussy.\n\nOnly once did Rob stop us here. He got onto the floor underneath us, and filmed upwards, getting a close up of my cock sliding in and out of her meaty pussy. He didn't stop us though, when he stopped recording and slid out from beneath us.\n\n\"How close are you Dale?\" he asked as he moved around us filming again.\n\n\"Getting there,\" I huffed.\n\n\"Take your time,\" Josee hissed. \"I'm in no hurry to have this end.\"\n\n\"Whatever works for the talent,\" Rob chuckled.\n\n\"Harder,\" Josee snarled at me. \"Go real deep baby!\"\n\n\"Do what she says,\" Rob added. \n\nI obliged and picked up my pace. Josee's big ass cheeks wobbled violently as I drilled in and out of her faster. Her big tits made a slapping sound as they hit the washer in front of her.\n\n\"Ooh yes baby!\" she whimpered loudly. \"Fuck me deep!\"\n\n\"Move your arm a bit Dale,\" Rob said as he repositioned once again. I had been gripping Josee's big hips, but that obscured the view from where he was standing.\n\n\"Oh god,\" Josee whimpered loudly again. \"\"You are fucking incredible baby!\"\n\nI wasn't sure if she actually meant that, or if that was for the camera. But honestly, I didn't really care either. I was enjoying this too much.\n\nRob was getting close-ups of Josee's face as she continued to egg me on. \"Let me know when you're close Dale,\" he said without looking at me. \"Jo you still okay with taking it in your mouth?\"\n\n\"Fuck yeah,\" she grunted in response. She looked up at me. \"I wanna taste your cum!\"\n\nA few more minutes passed before I finally was ready to let it loose. \"I'm close.\"\n\n\"Oh yeah baby,\" Josee hissed. She bucked back against me a few more times, then pulled away, then quickly turned around and got to her knees. She grabbed my cock with her meaty hand and began to pump it furiously. \"Come on baby,\" she huffed. \"Let me taste your cum!\"\n\nIt didn't take long before I came. I grunted loudly and watched in amazement as huge amounts of cum spewed forth from my cock and right into Josee's open mouth. She moaned her approval as my cum went down her throat, and when the streams of cum spewing forth ceased, she swallowed hungrily before leaning and taking my cock into her mouth to coax the last bits of cum out of me.\n\n\"You got any cum left in your mouth Jo?\" Rob asked as he lingered nearby filming.\n\n\"Mm hmm,\" she moaned back and she continued to suck on my shaft.\n\n\"Okay good. Now let his cock out of your mouth and stick out your cum covered tongue,\" Rob said.\n\nShe did as instructed and I looked down and saw her contented face as she stuck her tongue out covered in my cum.\n\n\"Now take his cock back in your mouth,\" Rob said softly.\n\nJosee did as she was asked.\n\n\"And that is a wrap,\" Rob said happily. \"Great work you two.\"\n\n\"Thanks,\" Josee giggled after letting my cock fall out of her mouth. \"You were pretty fucking good,\" she added as she stood up in front of me and reached out for a hug.\n\n\"You were no slouch yourself,\" I chuckled as we embraced.\n\n\"No seriously baby,\" she replied as she pulled back. \"Last time? I didn't cum once. And that fucker could barely keep it up. You were into it!\"\n\n\"I have you to thank for that,\" I grinned at her.\n\nJosee and I got dressed as Rob packed away his equipment. He then came over and discretely slipped fifty bucks into my hand. \"Seriously, good work.\"\n\nJosee pulled her hair back into a pony-tail and giggled her agreement. \"Hopefully we get to work together again.\"\n\n\"I'm not saying it won't happen,\" Rob said with a smile. \"But I have some other ideas for this kid. Sorry Jo.\"\n\n******\n\nIt was about a week and a half later when I found out what Rob meant. He called me up and asked when I was available for another shoot. When I told him, he outlined his idea for this one.\n\n\"She's fifty-two, and what I want to go for is risque,\" he said. \"I hope it doesn't freak you out too much, but I think this will sell like hot-cakes.\"\n\n\"What is it?\" I asked, intrigued.\n\n\"I want her to be your step-mom,\" he said matter-of-factly.\n\nOh wow!\n\n******\n\nThree days later, I met Rob at the appointed time and address. Rob guided me into a building on Jane Street and outlined things for me.\n\n\"First off, again, I want to thank you for such a great job with Jo. That video has been selling well. One of my best recently.\"\n\n\"Has it sold fifty yet?\" I chuckled.\n\n\"As a matter of fact,\" Rob paused and pulled a fifty dollar bill out of his pocket. \"It has.\"\n\n\"No shit,\" I smiled as I accepted the money.\n\n\"Now listen,\" he said in a softer voice as we made our way to the elevator. \"Becky is upstairs waiting for us, and I've already outlined it for her.\"\n\n\"And she's okay with it?\" I asked a bit surprised. I mean it was one thing to do 'independent' porn, but another thing entirely to fake a step-mom and step-son team.",
        "\"Oh hell yeah,\" Rob said as we stepped into the elevator. \"She loves the kinkiness of it. Are you sure you're okay?\"\n\n\"Yeah,\" I shrugged. \"I gotta admit it intrigues me.\"\n\n\"Good, good,\" Rob said relieved. \"I've tried this before and it worked even less well than Jo's last time out,\" he added with a roll of his eyes. \"The thing is, the reason your video with Jo is selling so well is how fucking raw and real it was.\"\n\n\"Well there wasn't a lot of acting on my part,\" I chuckled.\n\nWe got off the elevator and headed up the hallway, and Rob knocked on a door. It opened and he introduced me to Becky.\n\nShe was huge! I knew she was fifty-two, but I wasn't expecting this. I mean Josee was a big girl - probably just short of the two hundred pound mark. But Becky was well past it.\n\nShe wasn't an unattractive woman for her age though. Her face was only slightly chubby and despite some wrinkles, some beauty remained. She did have lovely blue eyes, and her graying hair framed her face nicely. She was wearing a skimpy, near transparent robe that barely contained her ample breasts, and I'm not sure it even covered her ample backside either. Despite her size though, her tits were incredible. I mean they certainly drooped, but they were massive and I immediately thought that a guy could put his face in between them and never get bored. And, even though I was still only seeing her from the front, by the breadth of her hips, I knew her ass was equally large, and probably just as face-plantable.\n\n\"Well, well,\" she said with a smile as she stood there with the door open. \"Look what you brought for me.\"\n\n\"Becky, this is Dale,\" Rob said with a chuckle. \"Dale, Becky.\"\n\nShe guided us in and closed the door behind us. I glanced back and sure as shit, that little robe did NOT contain her ample backside. Her big butt cheeks where only half covered and I could feel my cock stirring to life in my jeans. \n\n\"So,\" Rob announced. \"I've already outlined things for Becky,\" he continued. \"I'm set up in the shower, and I'm going to get a few shots of her showering. Then, Dale, I'm going to want to get a couple shots of you peeping on her and whacking off.\"\n\n\"Okay,\" I nodded.\n\n\"Then we're going to have Becky confront you in 'your' room,\" Rob went on, and did the air-quotes with his fingers. \"And things go from there.\"\n\nBecky moved close to me and ran her fingers playfully up my arm. \"This one is really cute Rob,\" she giggled. \"Is he going to be able to perform?\"\n\n\"Don't worry Beck,\" Rob assured her. \"He fucked Jo senseless.\"\n\nI went to the room where we'd be filming later on, and got undressed. As I did, I heard the water in the shower come on and could hear Rob instructing Becky what to do as he filmed her. I put on the robe that was laid on the bed, and glanced around the room. It was a bit of a mess and it looked like the room of a guy my age. I wondered to myself if Becky had a son of her own, or even a step-son of her own.\n\nI made my way out of the room and up the hall to the bathroom, where Rob was positioned with his camera. I glanced in and saw Becky totally naked and under the water. She was playing with her pussy as Rob instructed. I was actually amazed to be able to see it, under her big belly. But there it was in all its hairy glory. She darted a finger over her clit as she positioned her pussy into the flow of the water from the shower. I could feel my cock starting to get hard. \n\nI knew I wasn't going to have any problems here - subject matter included. I knew if Becky was my step-mom, I'd want to take a run at her.\n\nAfter a few more minutes, Rob called 'cut' and shut off the camera and turned to see me standing there.\n\n\"Awesome, you're here. Okay, let me just reposition here,\" he paused and looked over his shoulder. \"Becky can you keep the water running?\" He moved the camera around, and turned to me. \"Just open up the robe and stroke. And move your eyes like you're looking up and down her body.\"\n\n\"Got it,\" I nodded.\n\n\"Do you need me to do anything to help you out?\" Becky called out from the shower.\n\n\"Nope,\" I grinned at her. \"Just standing there is enough.\" I opened up the robe and gripped my semi-erect cock as it appeared.\n\n\"Oh my,\" Becky giggled. \n\nI bobbed my eyebrows at her as I began to stroke my cock as I looked at her huge body.\n\n\"And filming,\" Rob announced.\n\nIt only took a few moments before I was rigid. Becky smiled at me as I worked my cock as I eyed her up and down. \n\n\"And cut,\" Rob said as he shut off the camera. \"Off to the bedroom.\" He scooped up his camera and moved past me down the hall.\n\nI glanced back into the bathroom and saw Becky shutting off the water in the shower. She then eased her big frame out of the tub and toweled herself off. She glanced at me as she did. \"I think I\"m going to enjoy this,\" she smiled.\n\n\"You and me both,\" I smiled back.\n\nA few moments later we were all in the bedroom and Rob was finishing up setting up the lights. Becky was in her robe and sitting on the edge of the bed as I stood nearby. I couldn't resist asking.\n\n\"So is this your son's room?\"\n\n\"No,\" she giggled. \"It's just a spare room that Rob fixed up earlier for this scene. Actually, I don't have any children.\"\n\n\"Oh,\" I nodded in understanding. \"Okay.\"\n\n\"But just so you know, hon,\" she reached out and took my hand. \"If I did have a son and he looked like you? I'd be tempted,\" she grinned knowingly at me.\n\n\"Hell,\" I grinned back. \"If my mom looked like you I'd be tempted.\"\n\n\"Okay,\" Rob announced. \"All set. Dale, I'm going to want you in the bed uncovered. Becky's going to come in and confront you about looking at her, and we go from there.\"\n\n\"Got it,\" I nodded.\n\n\"Remember Beck,\" he turned to face her. \"To mention about him getting kicked out of his last apartment,\"\n\n\"Because he fucked that Indian cunt in the laundry room,\" Becky giggled. \"Got it.\"\n\nA wave of realization came over me. \"Oh I got it,\" I said as I dropped my robe to the floor. \"This is a continuation from the Josee video.\"\n\n\"Exactly,\" Rob replied with a smile. \"Beck? Outside please.\"\n\n\"Hell no,\" she chuckled as she stood up. \"I'll stand behind you for now. I want to watch him stroke it.\"\n\nI crawled onto the bed and smiled at Becky as I got into position and Rob began filming. I stroked my cock for a few minutes and he cut the scene.\n\n\"Okay Beck, out,\" Rob said with a smile as he turned to face her. \"I need to get you coming in.\"\n\n\"See you in a few,\" she winked at me.\n\nA few minutes later we were into the scene. Becky burst into 'my' room and confronted me about peeping on her in the shower. She admonished me and told me to cover myself up and I was disdainful of her.\n\n\"You're not my real mom,\" I sneered at her.\n\n\"I am your father's wife!\" she shot back at me. \"And as long as you're living under my roof, you'll obey my rules. I mean Jesus Christ, you get kicked out of your last building for fucking that Indian bitch in the laundry room! Now? You just laze around here all day doing nothing! Except peeping on me when I'm in the shower!\"\n\n\"Oh seriously,\" I fired back. \"Do you really think I'd be peeping on an old, fat broad like you?\"\n\n\"I heard something out in the hall when I was in the shower, and there's no one else here,\" she chided me.\n\n\"Well who the hell showers with the bathroom door open?\" I asked, indignantly.\n\nBecky grinned and fixed her gaze on me. She folded her arms in front of her, pushing her big tits even further up out of her skimpy robe. \"How do you know the door was open?\"\n\nI opened my mouth slightly and darted my eyes back and forth like someone just caught in a lie.\n\n\"Good,\" Rob whispered from behind the camera.\n\n\"Well,\" I stammered. \"I could hear,\" I trailed off.\n\n\"You little fucking pervert,\" Becky shook her head at me in disdain.\n\n\"No,\" I protested. \"I really just heard,\" I trailed off again.\n\n\"You were hard as a fucking rock when I walked in here,\" she chided me again.\n\n\"I'm always hard in the morning,\" I snorted back.\n\n\"It's twelve-thirty,\" she shot back.\n\nI darted my eyes like someone feeling guilty and then finally figured out my retort. \"Well a fine step-mother you are,\" I challenged her. \"Just barge into your step-son's room and stare at his cock.\"\n\n\"It was hard to miss,\" she chided me.\n\n\"Doesn't mean you should be looking,\" I finally managed to sputter.\n\n\"I could say the same thing to you,\" she sighed. \"Oh Dale,\" she moaned. \n\n\"What,\" I sighed.\n\n\"You shouldn't be looking at me. I'm your step-mother.\"\n\n\"Well,\" I shrugged. \"You shouldn't be looking at me either.\"\n\nBecky eased down onto the bed next to me. \"Well,\" she sighed. \"Maybe I have trouble resisting like you do.\"\n\n\"Wha?\" I muttered nervously.\n\nShe tentatively raised her hand and then gently placed it on my thigh. \"Do you know,\" she began in a soft voice. \"That in twelve long years of marriage how many times your father and I have been intimate together?\"\n\n\"I, um,\" I stammered.\n\n\"Three,\" she said flatly. \"And not once since I began to gain weight. That's been nine years. NINE years,\" she stressed.\n\n\"Good,\" Rob whispered from behind the camera again.\n\nI just shrugged at Becky.\n\n\"To be totally honest,\" she said in a more seductive voice as she began to rub up and down my thigh. \"It actually turned me on a bit that you were watching me. That you, a young man, would be turned on looking at me,\" she eyed me seductively.\n\nI could feel my cock growing again underneath the sheet. \"So,\" I started hesitantly. \"Are you upset at me or not?\"\n\n\"No,\" she whispered back at me. \n\n\"Wow,\" I whispered back.\n\nBecky slowly pulled the sheet back and exposed my erect cock. \"Oh my,\" she wheezed. She reached her hand down and gripped it softly. \"Mmm,\" she moaned as she slowly began to pump it.\n\n\"Oh wow,\" I moaned. \"Mo,\" I trailed off.\n\n\"Perfect!\" Rob whispered loudly.\n\n\"Oh go ahead baby,\" Becky cooed at me as she eased herself up onto the bed next to me. \"Call me mom.\"\n\nI eyed her for a moment and then took a deep breath. \"Mom,\" I finally whispered.\n\nShe grinned at me and leaned in and kissed me deeply.\n\n\"Hold it,\" Rob piped in. \"Let me get a close up of this,\" he began to reposition the camera. \"This is awesome stuff you guys!\"\n\nBecky and I continued kissing as Rob moved, and she kept stroking my cock too. When he began filming again we got deeper into the kiss. When our lips finally parted, Becky placed her other hand to my face and looked at me seductively.\n\n\"Do you want to fuck mom?\" she asked.\n\nI reached up and put a hand to her face. \"Why do you think I was whacking off outside the bathroom while you showered?\"\n\n\"Oh baby,\" Becky cooed at me. Then she leaned in and we kissed deeply again.\n\nWhen our lips parted this time, she shifted her position slightly and tossed her robe to the floor. \"Blow job time?\" she asked Rob as she ran her hands through her hair.\n\n\"You bet,\" he replied not looking up from the camera.\n\nBecky ran one hand up my belly and chest and leaned over towards my cock before taking into to her mouth. She sucked on it a few times then released it from her mouth and slowly pumped my cock. \"Momma loves her good boy,\" she cooed at me.\n\nAfter a few minutes of Becky working her velvety tongue and her soft lips over my shaft, it was my turn to go down on her. She flipped over onto her back and spread her huge legs before me. I could see the stretch marks and the abrasion marks from where her thighs rubbed against each other. It didn't matter one iota. I wanted to eat her pussy.\n\nI dove my face between her legs, and had it not been for Rob's direction, I'd have been buried right in there. But I did pull back a bit, but that didn't stop my enthusiasm for eating this wonderfully hot pussy. I imagined she was my step-mother and my father hadn't touched her in years. That was why she was so hot and wet for my young mouth.\n\nAnd waiting for my young cock.\n\nAs much as I enjoyed licking at Becky's hot pussy - and I did make her cum at least four times - I really wanted to fuck this fat goddess of an older woman.\n\nRob gave much less direction than he did when I was with Josee. He didn't need to give much. We both kinda knew what to do. She was constantly calling me her 'good boy' and her 'angel', and begging me to call her 'mom' as I pumped my cock in and out of her meaty pussy.\n\nI knew how to position myself whenever Rob moved around, and also exactly what to say. I called her 'mom' when she asked me too, and constantly thanked her for fucking me.\n\nRob did direct us at one point though. He asked if I was okay with Becky being on top, and I assured him I was. Man, did her eyes brighten when I said that.\n\nShe took up position over top of me and eased her ample frame down onto my cock.\n\n\"Ooh,\" she cooed loudly. \"Momma loves her good boy!\"\n\n\"And I love you too mom,\" I moaned back.\n\nWe finished up the scene with Becky bent over the bed, and me slamming into her waiting pussy from behind.\n\n\"Let me know when you're close Dale,\" Rob called out from behind the camera.\n\n\"Rob?\" Becky whimpered. \"I think he should cum inside me.\"\n\n\"Hmm,\" Rob mused. \n\nOut of my peripheral vision I could see Rob standing up behind the camera. It was still on as Becky and I continued to go at it.\n\n\"It's so hot,\" Becky cooed. \"Having my step-son cum inside me. What do you think baby?\" She reached back and caressed my thigh as I continued to fuck her.\n\n\"Whatever mom wants,\" I huffed.\n\n\"I like it,\" Rob agreed. \"It's extra-kinky.\"\n\n\"Oh yes baby,\" Becky moaned loudly. \"You ready to fill momma's pussy with your hot cum?\"\n\n\"Whatever mom wants.\"\n\nOh man! When I came, I came HUGE!\n\nBecky wailed with delight as my cum spewed inside of her violently. I grunted and groaned loudly as I pumped away, filling her with every last ounce of cum I had.\n\nWhen I was done, I leaned over Becky panting loudly. \"Holy fuck,\" I exhaled heavily.\n\n\"You still got your erection Dale?\" Rob asked as he repostioned behind me.\n\n\"Yeah,\" I wheezed.\n\n\"Good,\" he said as he set up behind us. \"Pump into her a few more times will ya?\"\n\nI did as instructed.\n\n\"Oh god,\" Becky moaned. \"That feels incredible.\"\n\n\"Okay Dale,\" Rob said from behind me. \"Pull out and get out of the way. Beck? Can you push his cum out of you?\"\n\n\"Mmm,\" she cooed happily. \"No problem.\"\n\nI stood behind Rob as he filmed Becky pushing my cum out of her pussy. If my cock had been about to go limp, that kept it from happening.\n\n\"Great work you two,\" Rob announced as he stopped the camera and stood up. \"Hotter than I could have hoped for.\"\n\n\"Oh god,\" Becky sighed as she turned and flipped over onto her back. \"I think we had chemistry.\"\n\n\"Yeah,\" I chuckled. \"I would agree.\"\n\nAs Rob cleared stuff out of the bedroom, Becky and I showered together.\n\n\"That was absolutely amazing,\" she said as she wrapped her arms around my neck.\n\n\"It was,\" I agreed.\n\nShe leaned in and kissed me softly. \"I hope Rob has more plans for us,\" she chuckled as she turned away from me and soaped herself up. \"But knowing that fucker he has even kinkier things in store for you.\"\n\n*******\n\nI wasn't sure what Becky meant about that comment she'd made in the shower, but four days later I got an inkling.\n\n\"It's just posing for a couple of pictures dressed up,\" Rob told me over the phone. \"Then we'll schedule the video shoot.\"\n\n\"Okay,\" I replied into the phone.\n\nTwo days later, I was at a restaurant with Rob, Becky and a much older lady.\n\nRob introduced me to Renata, and told me he just needed a few pictures of the four of us together for the next shoot.\n\nRenata was sixty-eight years old. She had curly gray hair, and while she was nowhere near as big as Becky, nor even Josee, she did carry some extra weight on her body. The way she was dressed was pretty conservative, but I could tell she had a pretty big set of tits, and a big round ass. On her diminutive, short frame, both assets were highly accentuated.\n\nI was a bit surprised that I was looking at her like that, given her 'saintly grandmother' appearance. In fact part of me thought she looked like she should be baking cookies for her grandkids or something. Truth be told, I wasn't even sure if I was going to be working with Renata. After all this was just a picture taking session. It's possible she was just a saintly grandmother after all.\n\n\"So let's get a shot of the four of us around the table,\" Rob announced. \"Jake?\" he called out to a waiter. \"Can you work the camera?\"\n\nThe guy Rob called over took the camera and Rob composed the shot before he took the picture.\n\n:\"What exactly are we doing?\" I asked Rob quietly as we got into position.\n\n\"Family pictures,\" he winked at me.\n\nI furrowed my brow and then smiled for the camera.\n\nA few minutes later I was leaned over behind Renata, and she was reaching back and holding her hand to my face.\n\n\"Perfect,\" Rob announced as he took this picture himself. \"Well,\" he said. \"I think that's it.\"\n\nThen my initial thoughts about her were confirmed. Renata patted my cheek then turned and smiled at me. \"I look forward to working with you.\" She had an accent I couldn't place. But the fact was: I was going to be working with her in a video.\n\nBut I had to admit, I was intrigued about working with her too.\n\nRob said it would be a few days before he'd call to schedule the next shoot. Once the pictures were developed he said, he'd call and check on our availability.\n\nBefore I had left, Rob slipped me a fifty. \n\n\"Did Becky and I go over fifty sales already?\" I asked a bit astonished.\n\n\"It's selling like hot-cakes,\" Rob chuckled. \"I'll call.\"\n\n******\n\nAfter posing for the 'family' pictures, I headed home to get changed and headed off to work.\n\nI was slaving away in the dish-pit when an attractive, young waitress was dropping off some dishes.\n\n\"Hey Dale,\" she called out as she stacked her dishes on the rack in front of her. \"Are you gonna come out with us on Saturday?\"\n\nI had heard some talk about a bunch of people from work planning a night out the upcoming Saturday. \"I doubt it,\" I shrugged with a smile. \"I work till close on Saturday.\"\n\n\"Oh bummer,\" she sounded genuinely disappointed. \"We've got to find a way to get you to come out with us,\" she paused after placing her last dish. \"Hey are you working Thursday?\"\n\nOh crap. \n\nA few hours earlier I had told Rob that I wasn't working Thursday, and he had indicated that would probably be the day of the video shoot.\n\n\"Because a few of us are going to the movies,\" she continued as I stood there with a slight grimace on my face.\n\n\"Oh sorry,\" I groaned. \"I've actually got dinner plans on Thursday.\"\n\n\"Hot date?\" she asked playfully.\n\n\"I wish,\" I replied with a chuckle. \"Family,\" I felt a smirk come across my face as I said that.\n\n******\n\nRob had called me on Wednesday and did indeed schedule the video shoot for Thursday afternoon.\n\n\"Have you got a suit?\" he asked once I told him I was available.\n\n\"Yeah, actually I do.\"\n\n\"Good,\" he replied. \"If you didn't I was going to give you the hundred I owe you to put towards buying one.\"\n\n\"No shit,\" I said. \"Over one hundred?\"\n\n\"Told ya,\" he chuckled. \"Like hot-cakes. And this next one will probably sell even better.\"\n\n******\n\nI woke up Thursday and my god was it hot! And that was on top of the oppressive humidity. The little shit apartment I lived in had NO ventilation, and it was stifling.\n\nStill I got up and showered, and went about my day before heading out the door with my suit in a bag slung over my shoulder dressed in a t-shirt and shorts, as I headed to a bar on Spadina Avenue where Rob told me to meet him.\n\nI walked into this dingy dive of a place and located Rob and Renata at a table through the smoky haze. \n\n\"Right on time as usual,\" Rob said as I walked up. \"Gino?\" he called out to the bartender. \"Can we can an Ex over here?\"\n\nI placed my suit over the back of a chair and then slid into the next one across from Rob and Renata. They both had quarts in front of them, and both were smoking. Pretty much like everyone else in the place.",
        "Rob tossed me his pack of smokes. \"Help yourself,\" he said with a wink. \n\nI opened the pack and saw a one hundred dollar bill inside next to a few cigarettes. I looked up and smiled at Rob. \"Thanks,\" I said.\n\nI lowered the pack and removed the hundred and then pulled out a smoke for myself. I nodded in appreciation after the bartender put a quart of Molson Export in front of me with a glass. I then lit the smoke with one hand, while I slid the hundred into my front pocket with the other.\n\nHonestly I felt a bit under-dressed for this get together. Rob was in his usual silk shirt and dress pants with his leather jacket. In the heat of the day I thought it was insane, but then realized he probably came over in an air conditioned car.\n\nRenata was dressed conservatively again, but not as fancy for our picture taking session. She was wearing a nice blouse underneath a blazer and pants. She looked so damn much like a saintly grandmother, I could scarcely believe that she knew what she was here for.\n\n\"So,\" Rob said as I slid his pack of smokes back to him. \"I've already given Renata the run-down,\" he sighed and shrugged.\n\nI put my cigarette in the ashtray and then filled up my glass. \"And?\" I asked I raised the glass to my lips and took a sip.\n\nRob folded his hands on top of the table and then glanced at Renata. He took a deep breath and then looked back at me. \"It's grandmother and grandson,\" he said matter-of-factly.\n\nI swallowed the beer in my mouth and nodded. \"Okay,\" I replied as I reached for my smoke. So clearly Renata DID know what she was here for.\n\n\"You okay with that?\" Rob asked in a tentative voice.\n\nI shrugged as I exhaled smoke out of my mouth. \"Sure. Why not?\"\n\nRob eyed me for a moment and then seemed convinced. \"Okay,\" he finally said with a nod.\n\n\"So where are we shooting?\" I asked as I took another swig of beer.\n\n\"Upstairs,\" Rob said as he downed the rest of the beer in his glass. \"Gino rents the place out to this woman, but she's out of town for a week.\"\n\nI glanced at Renata and saw her smile and then take a dainty sip of her beer.\n\n\"So,\" Rob placed his hands on the table and then stood up. \"Let me just get with Gino, then I'll go upstairs and get things set up. Say fifteen minutes?\"\n\nRenata and I both nodded and Rob was off.\n\nI poured some more beer into my glass. \"Did you want another?\" I asked her.\n\n\"Oh,\" she replied a bit startled. \"It would be nice in this heat, no? And I think we have time,\" she added with a smile.\n\nI found myself actually staring at her, analyzing her face. It was quite wrinkled, but she was still attractive. The fine lines over her upper lip, and the crow's feet definitely showed her age. And I noticed that she had wrinkles and liver spots on her hands as she reached for her glass.\n\nI finally caught myself after what seemed like a few moments and then looked over to the bartender and asked for two more.\n\n\"You know,\" I said with a smile as I eased back in my seat and took another puff of my smoke. \"I've been trying to place your accent since we met for the picture taking session.\"\n\n\"It's Dutch,\" Renata replied with a smile.\n\n\"Ah,\" I replied with a nod. \"Very cool.\"\n\nThe bartender showed up and gave us each another quart of beer. I was about to ask if he could break a hundred, but thought better of it, and just pulled out my wallet.\n\n\"Oh that's very nice of you,\" Renata smiled at me warmly with that wonderful accent of hers.\n\n\"Think nothing of it,\" I smiled back. \"Hey,\" I said to the bartender. \"Have you got a cigarette machine? And if you do, can I get change for it?\"\n\nThe beers were paid for and I had change for the cigarette machine. After going over and buying my first pack ever, I rejoined Renata at the table.\n\n\"So,\" I said as I tore the wrapper off the pack and pulled out a cigarette. \"Is it just me or did Rob seem a little unsure about something?\"\n\n\"Don't take it personally dear,\" Renata smiled at me as she filled her glass up. She eased her elbows onto the table and took and sip and then waved her glass a bit. \"We've tried this before, and,\" she ended with a shrug.\n\n\"Got it,\" I nodded in understanding. I filled up my glass and put my elbows up on the table. \"I take it things didn't work out?\"\n\nRenata chuckled and leaned back a bit. She reached into her bag and pulled out her own pack of cigarettes, then lit one. She leaned back into the table and rested her elbows on it again. \"No,\" she finally chuckled.\n\n\"That kinda blows me away,\" I smiled at her.\n\nShe reached out and touched my hand. \"Thank you dear,\" she smiled. \"I told you I'm looking forward to this,\" she paused and then leaned back in her chair and took a big sip from her beer. \"But I was looking forward to the other times too,\" she added wistfully.\n\nI took a sip of my beer and eyed her for a moment. \"Times?\" I asked. \"As in plural? Please tell me you're kidding.\"\n\n\"No,\" she replied matter-of-factly. \"The first time,\" she paused and cleared her throat a bit, then leaned in a bit closer. \"It was to be the grandmother and grandson. Rob has this lovely boy show up,\" she sighed. Renata took another sip of her beer and shrugged her shoulders. \"But I guess it was too much for him.\"\n\n\"Wow,\" I couldn't think of anything else to say. I mean I was amazed. Despite her advanced years, who wouldn't want to fuck this Dutch goddess? \n\n\"And the next time,\" Renata continued. \"He was this beautiful blond boy with a slim build and deep blue eyes,\" she sighed again. \"\"Rob didn't even bother with the incest angle,\" she seemed a bit pissed off. \"But I guess he didn't find me good enough to,\" she trailed off and glanced around the bar. She grinned as she leaned across the table. \"To fuck.\"\n\nI took a sip of my beer and leaned closer across the table. \"Then he's an idiot.\"\n\nRenata giggled softly. She patted my hand then took another puff of her smoke. \"You're a dear.\"\n\nI smiled back at her and then held up my glass. She clinked hers against mine and we both took a sip.\n\n\"Were there any other misfires?\" I asked. And I immediately regretted asking that question.\n\n\"One more,\" Renata sighed. \"Rob again attempted to do the grandmother and grandson,\" she paused. \"He couldn't.\"\n\n\"Sorry,\" I smiled at her. \"I shouldn't have asked.\"\n\n\"No,\" she assured me. \"That's okay dear. May I ask you if you have had any misfires working for Rob?\"\n\n\"Nope,\" I replied. \"Granted, I've only done two.\"\n\n\"And Becky said you were good,\" she winked at me as she butted her smoke out. \"But does the incest aspect not upset you at all?\"\n\n\"No,\" I shrugged. \n\nRenata smiled at me and every wrinkle in her face was accentuated. \"Good,\" she said as she reached for her beer. \"This is why I was looking forward to working with you.\"\n\n******\n\nAfter the fifteen minutes went by Renata and I made our way upstairs. Rob let us into the apartment above the bar and laid the scene out for us.\n\n\"Okay, Dale,\" he said as he ran his hands through his hair. \"You're going to be outside in your suit. You're coming over to take your grandmother to dinner for her birthday,\" he turned and looked at Renata. \"You know you're going to be in here in just your robe.\"\n\n\"Understood,\" Renata nodded at him.\n\n\"Dale,\" he looked back at me. \"You'll be shocked that your grandmother isn't ready to go out to dinner.\"\n\n\"Got it,\" I nodded.\n\n\"And Ren?\" Rob smiled and turned to Renata. \"That's when you tell him you want cock for your birthday.\"\n\n\"Best present ever,\" she giggled in response.\n\n\"Okay,\" Rob spread his hands out in front of him. \"Let's get ready.\"\n\nI made my way over to the bed and laid my suit-bag down. As I did I noticed some of the pictures Rob had taken of us were around. \n\nRenata was on the other side of the bed stripping down, and while I did watch her, my eyes did catch something on the nightstand.\n\n\"I'm sorry,\" I finally muttered as I unbuttoned my shorts, while Renata was stepping out of her pants. \"Did you want some privacy while you change?\"\n\n\"Oh no dear,\" she beamed a smile at me. \"You'll see me naked soon enough. And,\" she added. \"You'll have your cock inside me.\"\n\n\"Good point,\" I chuckled as I undid my shorts. \"Is that you?\" I gestured to the picture on the nightstand.\n\n\"Oh yes,\" Renata smiled as she pulled her pants down. \"That's me and my nephew at Zandvoort beach.\"\n\nIt was a black and white picture, and Renata already looked like she had a few extra pounds on her. While she did have darker hair in the picture, she and her nephew looked very affectionate though.\n\nI wanted to ask, but I didn't. I just pulled my t-shirt over my head and went about my business of getting changed.\n\n\"We were intimate,\" Renata offered as she was pulling off her bra. \n\n\"No shit,\" I said calmly as I got down to my underpants and then reached for my dress pants.\n\n\"Does that shock you?\" Renata asked as she ran her hands through her hair while she was completely naked in front of me.\n\n\"More impressed than shocked,\" I smiled at her.\n\nShe stood there naked looking at me with her hands on her wide hips. \"I think I just might enjoy this,\" she giggled as she reached down and picked up a white terry-cloth robe and slung it around her shoulders.\n\n\"You and me both,\" I winked at her as I started to do up my tie.\n\nRenata parted her robe and smiled at me.\n\nMan! She had big tits. They certainly sagged. but I was looking forward to having my face between them.\n\n\"I'm already getting hard,\" I chuckled.\n\n\"And I'm getting wet,\" Renata smiled at me. \"Grandson,\" she added with a wink.\n\n******\n\nI stood out in the hall in my suit and took a deep breath. I fidgeted with my tie and for a brief moment.\n\n\"Rolling,\" I heard Rob's muffled voice from behind the door.\n\nI took a deep breath and began the scene. I knocked on the door and then opened it up. \"Grandma?\" I asked as I entered the apartment. \n\nNo answer. As planned.\n\n\"Grandma?\" I called out again.\n\nRenata shuffled out of the bathroom in her robe and sighed. \"Hello dear.\"\n\n\"What's going on?\" I asked as I moved closer. \"How come you're not ready to go out for your birthday dinner?\"\n\n\"Oh Dale,\" she sighed and flapped her arms. \"Oh sorry,\" she grinned widely all of a sudden. \n\n\"What's up?\" Rob asked.\n\n\"Am I supposed to call him Dale?\" she asked with a giggle. \"It's his real name.\"\n\n\"Oh hell I don't care,\" I quickly jumped in with a wave of my hand.\n\n\"Besides,\" Rob chuckled. \"Becky called him Dale in the last video.\"\n\n\"Oh of course,\" Renata laughed. \"Should we start over?\"\n\n\"Nope,\" Rob replied as he looked back into the viewfinder of his camera. \"Just pick it up from where you were.\"\n\nRenata nodded then took a deep breath and re-started her line. \"Oh Dale,\" she sighed and flapped her arms again. \"I'm just not in the mood for dinner.\"\n\n\"Why?\" I asked as I moved next to her and placed a hand on her shoulder. \"What's wrong?\"\n\n\"I guess you could say I'm depressed,\" she sighed without looking at me.\n\n\"What are you depressed about grandma?\" I asked as I gently rubbed her shoulder.\n\nShe finally looked at me and had a wistful look on her face. \"I just,\" she stammered. \"Oh I don't think I can tell you,\" she sighed and moved to the sofa.\n\n\"Sure you can grandma,\" I said earnestly as I followed her to the sofa. We both sat down and I looked her deep in her blue eyes. \"You can tell me anything.\"\n\nShe smiled weakly and put a hand gently to my face. \"You are such a dear,\" she eased her hand down to my shoulder and gently rubbed it and then ran a finger over the knot of my tie. \"You look so handsome,\" she sighed. \"I'm sorry to ruin your plans for me.\"\n\n\"Oh come on,\" I reached up and held her hand and gently caressed it. \"Please tell me what's bothering you.\"\n\n\"Well,\" she sighed again. \"I'm sixty-nine years old today, and I just don't think I'll get what I really want for my birthday.\"\n\n\"Why?\" I asked and moved a bit closer to her on the sofa. \"What do you want? I mean I'm willing to do whatever you want.\"\n\n\"Oh Dale,\" she cooed. \"I don't know if you will.\"\n\n\"Of course I will grandma,\" I assured her. \"I'd do anything for you.\"\n\n\"You would?\" she asked innocently.\n\n\"Of course. I love you.\"\n\nShe shook her head but grinned. \"You may not feel the same if I tell you,\" she said quietly.\n\n\"Oh come on,\" I chided her. \"Whatever you want, I'll do it.\"\n\n\"Okay then,\" she took a deep breath and looked me in the eye. \"What I want for my birthday is to get fucked by a nice hard cock.\"\n\nI dropped my jaw and bugged my eyes out of my skull and hoped it looked authentic.\n\n\"Perfect,\" I heard Rob whisper from behind the camera.\n\n\"G-g-grandma,\" I just stammered.\n\n\"I told you,\" she groaned with regret. \"Now you hate me.\"\n\n\"Oh don't be ridiculous,\" I assured her, still keeping a shocked look on my face. \"I'm just a little stunned, that's all.\"\n\n\"So you don't hate me?\" she asked sheepishly.\n\n\"Of course not,\" I said emphatically.\n\n\"Then will you grant my birthday wish?\" she asked softly.\n\n\"Oh grandma,\" I groaned. \"I dunno.\"\n\n\"You said you loved me and would do anything for me,\" she said softly as she rubbed my arm.\n\n\"I did say that,\" I sighed. \"Didn't I? But incest with my grandmother?\"\n\n\"It's my birthday wish,\" Renata beamed a huge smile at me and ran one hand through my hair. \"Please Dale,\" she implored me.\n\nShe leaned in and kissed me softly on the lips as she kept running one hand through my hair, while with the other she caressed my arm. She leaned in for another kiss and this time lingered a bit more.\n\n\"Keep it up, Ren,\" Rob directed. \"Put your hand on his crotch.\"\n\nRenata nodded and kept kissing me as she reached her hand down to my cock. \n\nWhen our lips parted she beamed a smile at me. \"My good boy is already hard for his grandmother,\" she said. She eased back a bit and pulled open her robe. \"You will grant my birthday wish,\" she added.\n\n\"If it's what you want,\" I breathed heavily as I took in her naked body with my eyes.\n\n\"It is baby,\" she cooed at me and leaned in for a much deeper kiss. She rubbed my growing cock through my pants and moaned loudly as she did. \n\nI reached my arms around her pulled her closer to me as we continued to kiss deeply. I worked my hands down to her ample butt cheeks and kneaded them as we swirled our tongues together. Renata kept rubbing my crotch and began to fumble at the zipper on my dress pants.\n\n\"Keep it going,\" Rob said as he repositioned the camera. \"Renata, I want you to give him a blow-job,\"\n\nShe moaned her affirmative. She parted our kiss and looked at me lovingly. \"Can I see your beautiful cock my good boy?\"\n\n\"Anything you want grandma,\" I breathed back.\n\nShe unzipped and opened my pants up then pulled them down a bit. I shifted my position slightly and she got them down past my hips. She then did the same motion with my underwear and she moaned loudly as my semi-erect cock appeared.\n\nRenata sat up a bit and eased out of her robe then tossed it to the floor. My cock was almost fully erect just from looking at her. She eased herself between my legs and took my cock in her liver spot covered hand. \"\"You are such a good boy,\" she cooed at me, then she leaned in and gave my cock a long, slow lick before taking it into her mouth.\n\n\"Oh grandma,\" I moaned loudly as I felt the warmth of her mouth surround my cock.\n\nShe moaned back at me and continued to work over my cock with her mouth. I felt a smile cross my lips as I began to undo my tie. This saintly grandmother who a mere few days ago, I thought should be baking cookies was totally naked in front of me sucking on my rigid cock.\n\nEven though her tongue wasn't as soft as Becky's, Renata certainly knew what she was doing. She had a vacuum like seal on my cock with her lips as she hungrily sucked away on me.\n\nMan this was incredible! I didn't even take notice of Rob or the lights. I just enjoyed Renata's technique. By now I had undone my tie and removed my jacket and shirt.\n\n\"Okay,\" Rob finally announced after moving in for a close-up. \"\"Let's move it to the bed. Dale,\" he gestured with his head. \"It's your turn to go down on her.\"\n\n\"Got it,\" I stood up and smiled at Renata then I winked.\n\nShe moved to the bed and flopped down onto her belly as I stepped out of my pants and removed my shoes and socks.\n\nRob was in position by the side of the bed as I approached. I saw Renata's full ass displayed in front of me and smiled broadly. \"You can start rolling,\" I said as I eased onto the bed behind Renata's feet.\n\nShe was about to turn over, but I held her in place and lowered my face in between her ample butt cheeks. I kissed each of her cheeks and then ran my tongue up and down the crack of her ass, before pausing over her asshole. I took a deep breath and began to swirl my tongue over it.\n\n\"Oh my,\" Renata yelped and I felt her tense up a bit beneath me. \n\nBut she didn't protest. In fact she eased herself up onto her knees and pressed her ass into my face.\n\n\"Oh this is fucking perfect!\" Rob said as he moved in closer. \"Get a couple of fingers into her pussy!\"\n\nI did as I was told. I felt up to Renata's pussy and felt its warmth and slight dampness. I eased my fingers against her pussy lips and they parted quite easily, so I slid two fingers inside of her.\n\n\"Oh my good grandson!\" Renata wailed as I kept licking her asshole and was now rubbing her g-spot.\n\nI was amazed at how receptive her pussy was to my fingers. She was pretty slack, and that wasn't a surprise given her age. But her pussy still radiated and even bigger warmth from inside. Truth be told, as much as I was enjoying myself at the moment, I couldn't wait to get my cock inside of her.\n\n\"Oh yes Dale!\" Renata wailed loudly again as I felt her cum and ooze her slick goo over my fingers.\n\nShe gyrated her hips back into my face as I kept darting my tongue over her asshole and finger-fucking her pussy.\n\nRob repositioned to get shots of Renata's face and I could only imagine the look of pleasure she had as I made her cum once again. She wailed loudly and her whole body shook as I now began working my thumb over her clit.\n\nRob moved back to the foot of the bed to get shots of me tonguing Renata's asshole and fingering her pussy. \n\n\"Oh my grandson is such a good boy!\" Renata's muffled voice still resonated despite her face being buried in the pillow in front of her.\n\nHer body was convulsing again as I induced another orgasm in her. \n\nRenata raised her head from the pillow. \"I need your cock inside of me my beautiful grandson,\" she whimpered loudly.\n\n\"Yeah,\" Rob added as he stood up. \"It's time.\"\n\nI slowly slurped my tongue around Renata's asshole once more then pulled back and withdrew my fingers from her pussy.\n\n\"Um,\" Rob mused.\n\n\"I want to be on top first,\" Renata breathed heavily as she shifted her position on the bed.\n\n\"Whatever grandma wants,\" I smiled at her.\n\n\"Okay,\" Rob said. \"Face the camera, Ren,\" he directed her with his hands as he took up position at the foot of the bed. \"Have your back to Dale.\"\n\nRenata kissed me briefly as we changed positions. I laid down on the bed, and she straddled me with her back to my face. She then reached down and guided my cock into her waiting pussy.\n\n\"Oh god grandma!\" I grunted loudly. \"That feels incredible!\" It wasn't acting on my part. Her pussy willingly accepted my cock and the warmth of it was beyond description. \n\n\"Oh Dale!\" she shrieked. \"Thank you for making my birthday wish come true!\"\n\nShe slammed herself down on top of me. Her loose pussy lips caressed my cock on each back and forth motion. And the heat and moisture inside was so welcoming and so incredible.\n\nRenata let out a large yell, and I gripped her big hips as I felt her coat my cock with more of her slick cum.\n\n\"Okay,\" Rob interjected himself into things. \"Let's change it up.\"\n\nFucker!\n\nRenata slowed her pace. \"What next?\" she asked.\n\n\"I think she should turn around,\" I offered. \"You are gonna want us kissing, right?\" I asked Rob.",
        "\"Good call,\" he said with a smile.\n\nRenata shifted positions and turned to face me, then lowered herself onto my cock again. \n\nRob was busy getting close-ups of my cock sliding into Renata's willing pussy between her butt cheeks, but we were already kissing deeply.\n\n\"Dig your hands into her ass,\" Rob barked. \"Ren, drill yourself down onto him! Let's see those ass cheeks shake!\"\n\nRenata and I were still engaged in a deep kiss, but we both did as we were told. I dug my hands into her meaty cheeks, and she slammed herself down onto me with wild abandon.\n\nShe was half-moaning and half-wailing into my mouth as Rob shifted positions to get a shot of our faces.\n\n\"That's perfect,\" he whispered. \"It looks tender, like a kiss of love.\"\n\nRenata held a hand to my cheek as we continued locking lips. Honestly I don't know if either of us was acting. I knew for sure I wasn't.\n\nWe shifted positions once more, and this time we were both on our sides, with me slamming into Renata's inviting pussy from behind. I caressed her meaty thigh as I held it up in the air as Rob filmed away. I couldn't help but glance at the varicose veins that were all over her legs, along with the cottage cheese like cellulite that jiggled with each thrust that I offered.\n\n\"Oh my god!\" Renata yelped as she came again. \"My grandson loves me SO much!\"\n\nI groaned loudly as I felt her slick goo cover my cock once more. \"He sure does grandma,\" I grunted in response.\n\nWe shifted positions again at Rob's direction. This time we were doing it doggy style. I LOVED how I could see Renata's floppy tits sway with my fucking motion. I gripped her wide hips and drilled into her harder at Rob's order. Watching her chubby ass jiggle was a thrill in and of itself.\n\nRob moved all around the bed, and even positioned the camera underneath us for various shots. I was so into what I was doing though that I barely took notice of him though.\n\nThat's why it was a bit of a shock when I did notice Rob pausing from filming to wipe some sweat off his brow. \"Fuck,\" he muttered. \"Is the heat bothering either of you?\"\n\n\"I'm good,\" I huffed. \n\n\"I am beyond good,\" Renata giggled with delight.\n\n\"All right,\" Rob chuckled. He positioned the camera and directed up to switch positions again.\n\nRenata flipped over onto her back and I happily slid my cock back into her inviting pussy. I couldn't believe I hadn't noticed before, but her muff hair was predominantly gray. I just smiled as I positioned myself again and began pumping as Renata smiled up at me and put both her hands on my cheeks.\n\n\"You are such a good boy,\" she cooed up at me lovingly.\n\n\"I'm just happy that you're happy,\" I panted in reply.\n\n\"Oh my sweet grandson,\" she cooed again. She leaned up and kissed me deeply. When our lips parted she caressed both of my cheeks lovingly. \"Thank you for this.\"\n\nI smiled down at her and leaned in for another deep kiss.\n\n\"Let me know when you're close, Dale,\" Rob said as he got a close-up of my cock sliding effortlessly in and out of Renata's meaty pussy.\n\n\"Got it,\" I nodded. \"And where do I cum?\"\n\n\"In my mouth baby,\" Renata cooed with a big smile on her face. \n\n\"Yeah,\" Rob said without looking away from the viewfinder. \"We talked about it before. While I did like Becky's idea of you cumming inside her, in this case I think the mouth works much better.\"\n\n\"And I agree,\" Renata giggled as she wrapped her legs around my waist and locked her ankles over the small of my back. She continued to caress my cheeks as I pumped in and out of her.\n\nJust the look on her face AND the thought of blowing my load into her mouth pushed me to the limit. \"Almost there,\" I huffed.\n\n\"Perfect,\" Rob said as he stood up. \"Give him the cue Renny,\" he said as he put the camera on his shoulder.\n\n\"Oh my beautiful boy,\" Renata whimpered. \"I want to taste your cum. It will make my birthday perfect!\"\n\nI raised a hand to her face and rested it against her cheek. \"Are you sure?\" I asked her tenderly.\n\n\"Oh yes,\" she cooed. \"Tasting my grandson's cum after he fucked me so good would be wonderful.\"\n\nThat was all it took. I pulled out of Renata's still incredibly hot pussy and shuffled up the bed on my knees. I took a hold of my cock and directed it at her already open mouth.\n\n\"Oh yes,\" she giggled with her mouth wide open and tongue hanging out. She licked the head of my cock a few times when it was close enough to her.\n\n\"Oh grandma,\" I grunted loudly. \"I'm cumming!\"\n\nRenata whimpered her approval and eased herself up a bit. I stroked my cock a few more times and then a huge stream of cum spewed forth and coated part of Renata's face, with most of it ending up in her open mouth. I continued stoking and blew five more huge streams of cum forth. Most of it went directly into her mouth, but some of it splashed off her chin.\n\nThe 'pro' that she seemingly was, Renata never flinched once. Whether it was cum in her mouth, or hitting her face, she took it all with a hitch. She leaned forward and took my cock into her mouth. Even though she'd taken my cum in her mouth, she hadn't swallowed it. I could feel her swirl it around my cock as she bobbed her head back and forth gently, coaxing any last bits of cum out of me. She then let some of the cum ooze out of her mouth and down her chin. Some of it even dropped down to her tits.\n\n\"Fucking awesome,\" Rob whispered as he filmed away.\n\nI breathed heavily as Renata continued to gently suck on my cock. I ran a hand through her gray hair and felt a smile cross my lips.\n\n\"Happy birthday grandma,\" I sighed in a contended voice.\n\n\"Mmm,\" Renata moaned softly. She let my cock slide out of her mouth and smiled up at me with my cum dripping off her chin and tits. \"Thank you grandson for the best birthday ever.\"\n\nRob pulled the camera back slightly and I saw him turn and shoot at the picture he had taken of the two of us a few days prior - the one with me behind Renata with her hand up on my cheek.\n\n\"Kinky fucker,\" I chuckled.\n\n\"And that should do it,\" Rob said with a laugh. \"Jesus Christ,\" he exclaimed as he shut the camera off. \"It is hot!\"\n\nIt WAS hot! Although I just only started to notice at that moment and told Rob and Renata as much. I glanced at Renata and could see the slightest hint of sweat on her forehead.\n\n\"I think I notice it now too,\" she giggled. I was amazed she she continued to just lie there with a contented look on her face, with my cum still on her face and tits.\n\n\"I was amazed you both held up so well,\" Rob said as he began to shut off the lights.\n\n\"I was amazed this one fucks so good,\" Renata giggled as she finally stood up. She ran her hands through her hair and then brushed her brow. \"And that was with two quarts of beer in his belly,\" she added.\n\n\"Well,\" I sighed as I got off the bed and stood next to her. \"I can't take all the credit. You deserve most of it yourself.\"\n\n\"Oh,\" she cooed at me as she finally wiped some of my cum off her chin with her finger. \"You are such a dear.\"\n\n\"Well,\" Rob said with a sigh. \"I'm gonna break things down and get the hell out of here. You two can wash up, and you can smoke up here if you want to. Just empty the ashtrays.\"\n\n\"Okay Rob,\" Renata nodded as she turned and shuffled to the bathroom. \"Thanks so much.\"\n\n\"Any time,\" he called after her as he began to take down the lights. He motioned me over with a wave of his hand. \"Great job,\" he whispered. \"I can just leave you fifty on the nightstand if you want.\"\n\n\"Oh just slip it into the pockets of my dress pants,\" I said as I ran my hands through my hair. \"Thanks.\"\n\n\"No,\" Rob grinned at me. \"Thank you. You have no idea how long I've been trying to make this one come together. You got the job done.\"\n\n******\n\nAfter Renata and I cleaned up a bit in the bathroom and got dressed, Rob had headed off. I offered to buy a round downstairs for them both, but Rob insisted he wanted to get started on the editing for the video right away.\n\nRenata, however, accepted my offer. After we were both dressed and I had my suit put away in its bag, she cinched her purse over she shoulder and she smiled at me.\n\n\"So?\" she said. \"Shall we?\"\n\nI extended my arm and she interlocked hers with mine and we headed for the door. A few minutes later we were downstairs in the bar and Gino was setting two quarts down in front of us.\n\n\"Well,\" Renata sighed as she raised her glass up. \"Here's to a job well-done.\"\n\nI smiled and clinked my glass against hers. \"To both of us.\"\n\nWe chatted away as we drank our beers.\n\n\"Oh my,\" Renata exclaimed. \"I just realized Rob has the picture of me and my nephew.\"\n\n\"Do you want me to give him a call?\" I asked. \n\n\"Oh no dear,\" she replied with a wave of her hand. \"I'll get it when I get my copy of our video.\"\n\n\"Y'know,\" I said as I hoisted my glass up. \"I hadn't even considered getting a copy of this video,\" I took a sip of my beer. \"Or even the first two. But,\" I added with a shrug. \"I don't have a VCR so it wouldn't make any difference if I did get copies.\"\n\n\"No VCR?\" she sounded surprised.\n\n\"Nope,\" I sighed. \"I just moved here a few months ago, and don't have much to my name. I mean I live in this crappy, stuffy place. That's why I offered to buy a round. I know it's gonna be stifling in there, so I wanted to avoid going back.\"\n\n\"Oh? That's too bad,\" she sounded genuine. \"You know,\" she leaned a bit across the table. \"I was thinking to maybe invite you over for dinner tonight,\" she shrugged. \"But, I also do have a spare room.\"\n\n\"Oh,\" I said, taken a bit aback. I wasn't expecting a dinner invitation, let alone what I thought was an invitation to move in with this sixty-eight year old woman.\n\n\"I mean it just sits there empty,\" she continued. \"You can have it if you want.\"\n\n\"Really?\" I asked, genuinely surprised. \"I mean I appreciate it and all, but,\" I trailed off.\n\n\"Oh think nothing of it dear,\" she replied with a smile and a wave of her hand. \"Like I said, I was going to invite you to dinner. So why not stay?\"\n\n\"Well,\" I chuckled. \"For one thing, we've just met.\"\n\n\"Yes,\" she giggled. \"But not traditional first meeting, no?\"\n\n\"I suppose not,\" I laughed back. \n\n\"You do have other job?\" she asked. Her accent seemed to be getting thicker as she drank. \n\n\"Yeah,\" I nodded as I waved to Gino and ordered another round. \"I work at Red Lobster as a dishwasher.\"\n\n\"I love that place,\" she giggled in response. \"And you work at the one on Dundas?\"\n\n\"Yeah,\" I nodded as Gino set down two more beers in front of us. \n\n\"That's only a few blocks from my place,\" Renata exclaimed with a smile. \"I live on Elm.\"\n\n\"That is a hell of a lot closer,\" I confided. \"The place I'm at now is eighteen blocks away. I hating walking it when I work late.\"\n\n\"Well then it's perfect dear,\" Renata reached forward and rested her hand atop mine. \"I finally get a use for that spare room, and you get a shorter walk to and from work.\"\n\n******\n\nI went back to my shit-hole of a place and packed my things, then told the landlord I was moving out effective immediately and turned in my keys.\n\nRenata had taken my suit bag to her place with her, because she saw no need for me to take it home and then drag it back to her place. Which I agreed made sense. With my bags packed and everything settled up, I headed out into the late afternoon bustle and heat.\n\nI stopped off at a phone booth and called work to advise them I had a new number, and then assured them that I would be in tomorrow. Then I headed off to Renata's building. I stopped at a beer store along the way and picked up a twelve pack of Molson Export and was relieved that I didn't get carded.\n\nIt was a two-story older place with and electronics store on the ground floor. I went to the door that lead up to the apartments on the second floor, and buzzed Renata's place, then she buzzed me up.\n\nWhen she greeted me at the door I immediately saw her as a 'saintly grandmother' again. She was wearing a light, floral dress, with slippers and she had glasses hanging from a chain around her neck.\n\n\"Glad you're here,\" she greeted me with a warm hug.\n\n\"I can't tell you how much I appreciate this,\" I said as I patted her back affectionately. \"It was so stifling when I went back to the old place this afternoon.\"\n\n\"Oh think nothing of it, dear,\" she said in an assuring voice as she released her embrace and invited me in. \"You didn't need to bring beer.\"\n\n\"Please,\" I chuckled as I set the case of twelve down on the floor as Renata closed the door behind me. \n\n\"Is this all your stuff?\" Renata asked as she closed the door behind me. \n\n\"Yeah,\" I sighed as I set my bags down. \"I travel,\" I sighed even heavier. \"And move to a new city really light.\"\n\n\"Oh you're new here?\" she asked as she scooped up the twelve pack and headed for the fridge with it. \"I got the impression you were from here.\"\n\n\"Oh I've been here many times,\" I explained as I stood there not really knowing what to do.\n\n\"Would you like a cold one?\" Renata held up a bottle of Carlsberg in her hand in front of the fridge.\n\n\"Yeah,\" I replied. \"That'd be nice.\"\n\n\"Please,\" she gestured me to the living room area with her hand. \"Have a seat.\"\n\n\"Thanks,\" I said with a smile as I headed for the couch. I immediately knew this move did make sense. There was no air conditioning, but it was a HELL of a lot cooler than my stuffy old place. The coolness was aided by a fan Renata had propped up in the corner.\n\n\"I guess I should have asked before,\" Renata giggled as she shuffled into the living room area to join me. \"You're not working at Red Lobster tonight?\"\n\n\"No,\" I accepted the bottle from her with a smile. \"I am tomorrow though. And I'll be working late, so I hope it's not a problem if I'm back well after midnight.\"\n\n\"Not a problem at all dear,\" she assured me. She took a sip of her beer and placed it down on the coffee table. \"Before I forget,\" she added with a wag of her finger.\n\nShe shuffled back to the kitchen table and fumbled through her purse. When she returned she held out two keys for me.\n\n\"The round one is for the door downstairs,\" she said as she dropped them into my hand. \"And the square one is for this door,\" she pointed to the apartment door behind us.\n\n\"Thanks again,\" I smiled in response. I couldn't help but be amazed as I looked at her. This nice, old lady, a 'saintly grandmother' was being so kind, and so decent to me. And yet, just a skant few hours ago, I had my cock inside her. I shook my head at it all.\n\n\"Oh,\" Renata broke the silence as she reached for her beer and crossed her legs. \n\nI saw some of the varicose veins I had been rubbing earlier while we fucked on camera. I stifled a chuckle and took a sip of my beer.\n\n\"I spoke to Rob after I got home,\" she said as she placed her beer back down onto the coffee table. \"I can get my picture tomorrow when I pick up my copy of the video.\"\n\n\"That's good,\" I replied with a nod as I took another sip of my beer. \"So,\" I took a deep breath and wondered whether to broach the subject or not, but ultimately decided to do so. \"Can I ask about you and your nephew?\"\n\n\"Oh of course dear,\" she laughed in response. \"It was wonderful!\"\n\nI reached into my pocket for my smokes and pulled them out. \"May I?\"\n\n\"Oh of course dear,\" she replied with a smile and a wave of her hand. \"Now,\" she sighed and rested her elbow on the back of couch, and rested her hand in her chin. \"Me and Schuyler,\" she sighed. \"He was such a beautiful boy.\"\n\nI just nodded and reached for my beer.\n\n\"His mother, my sister,\" she nodded a bit and placed a hand to her chest for emphasis. \"Well, she asked me to take him for a few weeks,\" she smiled and shrugged. \"So I did.\"\n\n\"Wow,\" I said in amazement as I took a puff of my smoke. \"Very impressive. Was that the kind of taking care of she was thinking of? I added with a chuckle.\n\n\"She probably did,\" Renata chuckled as she reached for her beer and took another sip. \"After all,\" she sighed as she placed her beer back on the coffee table. \"Oh,\" she chuckled as she looked away from me. \"I don't know if I should tell you this part.\" \n\n\"Whatever you think,\" I smiled at her as I exhaled smoke.\n\n\"Well,\" she sighed. \"We both had relations with our father.\"\n\nMy jaw dropped. \"No shit?\" I asked in astonishment.\n\n\"Nope,\" Renata grinned at me with a smile of smugness on her face, as she leaned over and grabbed her own pack of cigarettes and lit one. \"Does that surprise you?\"\n\n\"Again,\" I said with a shrug. \"More impressed than anything.\"\n\n\"I thank you,\" she giggled as she reached for her glass and raised it at me.\n\n\"So I guess it wasn't forced?\" I asked a bit sheepishly.\n\n\"Oh of course not,\" Renata assured me. \"It was all very loving.\"\n\n\"Really?\" I said, shocked. I was genuinely surprised.\n\n\"Oh of course,\" Renata reached out a hand and rubbed my arm reassuringly. \"I hope you're not too shocked or upset.\"\n\n\"No, not at all,\" I said calmly. \"I guess it's just,\" I shrugged my shoulders.\n\n\"More accepted in Europe than here,\" Renata offered with a smile.\n\n\"Yeah,\" I chuckled. \"I guess.\"\n\n\"And yet,\" Renata smiled at me knowingly as she butted her cigarette out and picked up her beer. \"Just a few hours ago you were fucking a woman fifty years older than you, and you called her 'grandma'.\"\n\n\"Well yeah,\" I agreed as I reached for my beer. \"But I got paid for that.\"\n\n\"I think you enjoyed it,\" Renata giggled. \"Certainly more than the other boys did,\" she sighed.\n\n\"I still can't believe that happened,\" I said with a shake of my head.\n\n\"It did,\" she sighed in response. \"I mean I was much older than my nephew, but he had no problems. And when Rob approached me I thought it was a good way to make some extra money. But,\" she trailed off.\n\nI shook my head. \"I honestly can't believe that guys couldn't with you,\" I smiled at her. \"But I mean, I'm still blown away by your past.\"\n\n\"My father was a happy time,\" she assured me. \"And so was my nephew.\"\n\n\"More power to you,\" I chuckled as I raised my bottle to her.\n\nShe clinked it and smiled at me. \"Not too freaked out?\" she asked.\n\n\"Not in the least,\" I assured her.\n\n\"Good,\" she nodded. She took another swig of her beer and placed it back down on the coffee table. \"Now,\" she said after a deep breath. \"That's the spare room over there,\" she pointed behind me.\n\nI glanced over my shoulder and saw the room. It was bare, except for a roll-away bed in the corner of it. \"Okay,\" I turned back to her and nodded. \"Thanks again.\"\n\n\"Don't mention it dear,\" she smiled at me and gave my arm another reassuring rub. \"I was going to make cabbage rolls for dinner. You like?\"\n\n\"Sure,\" I replied, even though I had never had a cabbage roll in my life.\n\n\"Oh,\" Renata huffed. \"It's still so hot in here. I don't know if I want to turn on the oven.\" She stood up and waved a hand in front of her face. She moved closer to the fan she had set up.\n\n\"Well,\" I assured her. \"It's much cooler than my last place.\"\n\n\"Oh I'm sure dear,\" she cooed as she positioned herself in front of the fan. \"Will you forgive me?\" she asked with a sly smile on her face.\n\n\"For what?\" I asked, completely clueless.\n\nRenata undid the buttons on the front of her little dress and then opened it up exposing her nude body to the air from the fan. \"Oh,\" she moaned softly. \"That feels so good.\"\n\n\"Looks good too,\" I chuckled. I could feel my cock hardening again as I watched her sway before the breeze.\n\n\"Thank you dear,\" Renata giggled. She slipped the dress over her shoulders and let it fall to the floor. \"You're welcome to join me,\" she said with a smile as she turned her back to the fan.\n\nI took another swig of my beer then stood up and walked over to her.\n\nRenata put her hands to my face when I was in front of her. \"Tell me dear,\" she whispered to me. \"Will you do the same thing when we were filming the video?\"\n\nI smiled at her. \"What?\" I asked.\n\n\"Will you lick my pucker again?\" she asked tentatively.",
        "I leaned in and kissed her softly. When our lips parted I smiled at her. \"Whatever grandma wants.\"\n\nRenata lead me into the bedroom. She crawled onto the bed on her hands and knees then braced herself on her elbows as she looked back at me and smiled. I quickly stripped off my clothes then crawled onto the bed behind her and took up position.\n\n\"Just like before baby,\" she cooed softly. \"That made me feel so good.\"\n\nI softly gripped her dimpled butt cheeks and parted them a bit then I licked down the crack of her ass before setting on her asshole. I slowly darted my tongue around it. \n\n\"Oh yes,\" Renata moaned. \n\nI felt her quiver with excitement as I worked my tongue over her asshole. She pushed herself back against my face as I felt an orgasm brewing in her already. So I took two fingers and slid them up inside her meaty pussy.\n\n\"Ya!\" she yelped loudly. \n\nI felt her body shake as that was all it took to evoke the orgasm in her. I felt her thick goo coat my fingers and I actually felt her roomy pussy tighten up a bit. I increased the pressure with my fingers on her g-spot and pressed my tongue harder against her asshole.\n\n\"Oh ya!\" she yelped loudly again. \"Do it!\"\n\nI knew what she meant. As I continued rubbing her g-spot, I leaned my face in a bit more and increased the pressure of my tongue on her asshole. A moment later, my tongue pushed inside her a bit.\n\n\"Oooooh,\" Renata let out a low guttural groan and I felt her cum again. \n\nI swirled my tongue up inside her asshole and continued to rub inside her pussy causing another massive orgasm to go through her.\n\n\"Oh baby,\" Renata moaned deeply as she pulled away from me after her fifth or sixth orgasm. \"I need to feel you inside me.\" She turned over onto her back and beckoned me to her.\n\nI slowly crawled into position and guided my cock towards her waiting pussy. We both moaned loudly as I entered her.\n\nRenata reached up and put her hands to my face. \"Go slow,\" she whispered.\n\nI did as asked and was deliberately slow, but I made sure to push myself deep inside of her warm pussy and hit her g-spot.\n\nRenata wrapped one leg around my midsection, and the other she slid up my arm until her foot rested on my shoulder.\n\n\"Oh you fuck my old pussy so good baby,\" she whimpered.\n\n\"And you fuck me so good too,\" I whispered back.\n\nThis was surreal. Just hours earlier I had been fucking this sixty-eight year old woman on camera for money. And now I was doing it again, and this was just for fun!\n\nWe were both pretty sweaty by the time I fired a load of cum deep up inside her, but neither of us felt anything other than contentment. Renata collapsed back onto the bed and I laid forward and laid my head against her ample and soft breasts. She held me close to her and kissed my head as we both caught our breath. We then both drifted off into a very contented sleep.\n\n******\n\nThe next night I was back in the dish pit at Red Lobster. I had woken up after Renata had and we spent a nice day with each other before I headed off to work. I told her I would be home late so she shouldn't wait up. And she told me that if she wasn't awake, she'd leave our video out for me to watch after I got home, and there would be dinner in the fridge.\n\nWhen we parted for the day, I went to work and Renata headed over to Rob's place to pick up the picture of her and her nephew along with the video.\n\nWork was work. I slaved away in the dish pit, berating the occasional server who didn't stack their dishes properly on the rack in front of me. Closing time rolled around and the same cute waitress from before told me a few people were going for drinks at the Hard Rock on Yonge Street.\n\n\"I doubt I'll be able to make it,\" I sighed at her with a sigh. \"Probably won't get out of here until one.\"\n\n\"Bummer,\" she sighed. \"Hey. How was your family dinner on Thursday?\"\n\n\"Good,\" I smiled knowingly. \"Fine time was had by all.\"\n\n******\n\nI got back to Renata's place just before 1:30am. As expected she was asleep in bed. She had left a note for me on the kitchen table. Dinner was in the fridge, and the video was on top of the TV.\n\nI wasn't really hungry, so while I did go to the fridge, I only grabbed a beer. Then I lit myself a cigarette and headed to the TV. I grabbed the video and popped it into the VCR then slumped onto the sofa and hit play on the remote.\n\nMan. Rob did good work. The video started with lingering shots of the pictures he had arranged around the apartment we shot in. Then he focused on Renata sitting there with a wistful look on her face, wearing her robe.\n\nIt was so weird watching myself on tape like this. But it looked as hot as it was in real life. I shut off the TV and VCR after the video was over and headed into the bathroom to take a shower before heading to bed. As I lingered under the water I wondered how this video would sell.\n\nI crawled into bed and snuggled up against Renata's body and drifted off to sleep.\n\n******\n\nThe next morning I woke and shuffled out of the bedroom.\n\n\"Good morning dear,\" Renata beamed a smile at me. \"Coffee is on if you would like some.\"\n\n\"Yes thank you,\" I groaned. I shuffled over to the kitchen counter and pulled a mug out of the cupboard and filled it up.\n\n\"Milk is in the fridge and the sugar is right over there,\" Renata called out from the kitchen table. \n\n\"That's okay,\" I managed a weak smile. \"I take it black.\"\n\n\"Did you see our video?\" Renata asked pleasantly as I sat down opposite her at the kitchen table.\n\n\"I did,\" I nodded after a sip of my coffee. \"Rob did good work.\"\n\n\"He says he already has interest from buyers too,\" she added with a giggle. \"I must confess to being surprised that so many people want to see this old lady have sex.\"\n\n\"He has buyers already?\" I asked surprised.\n\n\"Some,\" she nodded with a smile. \"Oh also,\" she added. \"Rob wants to see you when he gets back.\"\n\n\"Where is he?\" I asked.\n\n\"I didn't ask, but he said he'd be back today,\" she stood up moved over to me then leaned in and kissed me. \"So expect a call,\" she added as she turned and headed for the bathroom.\n\n******\n\nLater that afternoon Rob and I met up in a seedy bar not far from work. He seemed surprised when I only ordered a pint instead of a quart.\n\n\"I gotta work in a few hours,\" I sighed. \"Unfortunately, you aren't paying me enough to quit,\" I chuckled.\n\n\"Well,\" he chuckled in response. \"At least rent won't be an issue for you.\"\n\n\"Oh yeah,\" I nodded. \"I hope you don't have a policy about fraternization between employees,\" I said as I took a sip.\n\n\"Whatever floats your boat,\" he shrugged his shoulders. \"It's not my cup of tea, but if I were you I'd be banging those hot waitresses at Red Lobster.\"\n\n\"I'm a dish pig,\" I snorted. \"I'm kinda low on the food chain.\"\n\n\"Well it works in the meantime,\" he added as he lit a smoke. \"I was going to keep you two exclusive with each other.\"\n\n\"Why is that?\" I asked.\n\n\"Initial reaction seems to be of the belief that you and Renata may actually be grandmother and grandson.\"\n\n\"No shit,\" I was amazed. \"How did you get a reaction so fast?\"\n\n\"Well I've got an arrangement with this guy who runs a sex shop in Quebec,\" he explained as he took a puff of his smoke. \"They don't have the same restrictions that we do here in Ontario. So,\" he continued. \"I take him a copy of the finished product and he offers it up for rent or for view,\" he said.\n\n\"Or for sale?\" I added with a knowing smile. \n\n\"Exactly,\" he nodded. \"Twenty seven orders already and he's only had it a day.\"\n\n\"Wow,\" that did shock me.\n\n\"And he told me that there were a lot of inquiries about if there were any more videos of the two of you and if you're really related.\" he toasted me with his glass. \"So exclusive,\" he explained.\n\n\"Works for me,\" I said with a raise of my bottle.\n\n\"I just gotta figure out settings and scenes,\" he added.\n\n******\n\nFive days later Renata and I snuggled on the couch watching the latest video Rob had put together of us. It started on another woman, not quite as old as Renata but old enough to be my mother. And in fact, that's exactly what she was pretending to be. She was talking on the phone about how happy she was that her son, Dale, was now living with her mother.\n\nShe was another heavy-set woman, with graying hair, big tits, and thick glasses. Her face did slightly resemble Renata's, but her hips were a bit wider.\n\n\"I think it's better for him,\" she said over the phone. \"Hopefully it keeps him out of trouble,\" she sighed. \"But at least it gets him away from that horrid step-mother of his,\" she added with venom in her voice.\n\nThe shot then cut to one of the pictures we'd taken before the first video shoot. This one was me, Becky and Renata. It started off out of focus, then came in clearer, before zooming out so that Renata and I were visible on the bed, with her squatting over my face, and my tongue up her pussy, Renata moaned her approval loudly as the shot moved a few times.\n\n\"I just think it's a healthier environment for him to be in,\" a quick shot of my 'mother' appeared again before cutting back to me and Renata again. This time she was braced on her elbows and knees, and I was tongue-fucking her asshole as had become a favorite of hers in the time since I'd moved in with her.\n\n\"Well you know what I think of that woman my ex married,\" my 'mother huffed into the phone about five minutes later. \"My mother is certainly more mellow than that and much easier to get along with,\" she continued.\n\nBack to a shot of me and Renata, clinking a couple of bottles of Carlsberg together. After taking a swig from hers and swallowing it, she put her bottle down on the night stand then leaned in and took my cock into her mouth.\n\nFive or six minutes later, my 'mother' was back. \"Besides, I feel better knowing that my mother has someone living with her now. I was always worried about her being lonely in that musty apartment. It'll be nice for her to have the companionship.\"\n\nBack to Renata and I again. This time I was easing my cock into her asshole. Rob had asked me a few days ago to convince Renata to do that, since she was initially resistant to the idea. But the fact that she enjoyed the rim jobs I gave to her it wasn't too hard to get to agree. \n\n\"Oh my goodness,\" Renata whispered to me on the couch as a close-up of my cock sliding into her asshole filled the screen. \"I really didn't think I'd enjoy that,\" she giggled as the shot pulled back. \"But after what you do with your tongue?\"\n\nI smiled at her then looked back at the screen. She wasn't THAT good of an actress, so it was plain to see she was in fact enjoying it an awful lot. \"Oh ya, ya, ya,\" her image on screen whimpered with pleasure as my cock slid in and out of her.\n\nWe shifted our position on-screen, so now Renata was on top with her back to the camera. She eased her asshole back down over my cock and began to buck. The camera caught her large ass cheeks flopping back and forth wildly with her motion. A good fifteen minutes of action unfolded before us.\n\nThen it was back to my 'mother' again. \"All in all I think it's the best thing, for both of them,\" she said. \"I think they'll both benefit from this arrangement. Yes, okay. Bye.\" She hung up the phone and looked over at a the picture Renata and I had taken together days earlier and she smiled at it.\n\nThe shot cut back to Renata crawling off of my cock and diving her mouth over my cock. She sucked on it a few times, then pulled back so that Rob could film the cum shooting out of my cock and into her mouth and splashing on her face. Renata moaned her approval then swallowed my cock again and sucked gently on it. As she did, Rob pulled the shot back away and pulled focus before zooming in onto the same picture of her and I. As he pulled focus again, that's when I uttered the line 'oh grandma that was fantastic'.\n\n******\n\nA few days went by. After a pay-day at work I went to the talent agency and ended my relationship with them. I hadn't deposited any more money into the portfolio account, and there wouldn't be any work until I got it done. But at this point I didn't really care. I was getting more work with Rob than I was through this place. So I walked out of there with almost three hundred bucks. Then I went to the bank and deposited it along with my check from Red Lobster. My wallet was still filled with cash from Rob, so my bank account was getting pretty big.\n\nAfter finishing up at the bank, I decided to grab a quick bite before I worked my shift at the restaurant. Even though we had an employee discount, I was getting sick of seafood by this time. I had only walked a few blocks when Rob pulled up next to me. \n\n\"Hey,\" he called out from the driver's side window. \"I know you've got to work tonight, but have you got a few minutes?\"\n\n******\n\nGino slid a couple of beers in front of us, then as he turned away, Rob slipped one hundred dollars across the table towards me.\n\n\"The first one is over one hundred units sold,\" he explained as he summoned Gino over and ordered us a round. \"And the second on just passed fifty,\" he shook his head with a smile then lit himself a cigarette before offering the back to me. \n\n\"Thanks,\" I said as I pocketed the cash then lit myself a smoke. \"Are you surprised at the sales?\" I asked I poured beer into my glass.\n\n\"Not really,\" Rob shook his head as he filled his glass. \"They are going faster than anything else has,\" he continued. \"The deal I have with that sex shop really helps speed up the process though.\"\n\n\"How come you didn't mention that before,\" I asked as I filled up my glass.\n\n\"Oh,\" he sighed. \"I just find it reassures people a bit more if they think all the business is mail order,\" he added. \"Knowing that the videos are available for rent and for sale in a shop in Gatineau, Quebec might make a few people less willing.\"\n\nI hadn't even thought about that. Gatineau wasn't too far away from a place where I lived with my folks when I was younger. But then I didn't know anyone in Quebec at all, so I just shrugged it off. \n\n\"So any ideas for the next one?\" I asked as I lit a smoke.\n\n\"Just uh,\" he whirled his finger. \"Still trying to work it out,\" he sighed. \"I've been a little distracted.\"\n\n\"What's up?\" I asked after a sip of beer.\n\n\"Well the orders coming in,\" he paused then pursed his lips. \"Well there have been a lot of inquiries about whether or not your 'mother',\" he made air-quotes with his fingers. \"Will be in the next one.\"\n\n\"Will she?\" I asked.\n\n\"No,\" he sighed heavily. \"God I have been trying to get Carol to agree to anything for YEARS!\" he sighed again then took a big swig of his beer. \"All the women I've gotten to agree, Josee, Becky and Renata, along with a few you don't know. Well, I didn't know any of them before. I just made a pitch and they agreed. But Carol?\"\n\nHe explained that he'd known her for over twenty-five years. \"We actually met at a film studies course at UT. When I first made the pitch to do porn a few years ago? Well shit,\" he sighed and signaled to Gino for another beer. \"She almost kicked me in the nuts.\"\n\nHonestly, I was surprised Rob wasn't continually getting kicked in the balls. I mean to be asking these women to do porn. I can only imagine how offended some of them must have gotten. Selling the guys? No problem. But I figured it would have been harder to get these older women to agree to it. I guess the money aspect of it was a reason for some of them. Renata seemed to be a very laid back soul, so I could only imagine her being flattered. Becky is the one that struck me as a bit of a harder sell. Still, she had agreed, and I was thankful for that, since I enjoyed working with her.\n\nRob further explained that Carol - his friend who played my mother - eventually let her anger pass, but was adamant that she would not be doing any porn. He added that she was married, and had a son, so incest porn was definitely verboten.\n\n\"How'd you get her to agree to do what she did in the last one?\" I asked surprised.\n\n\"Upped the dollar amount and told her she had an 'out',\" he smiled as he poured more beer into his glass. \"She got duped into doing something for an old friend that she thought was independent work.\"\n\nHe added that he knew Carol's husband was fucking around on her - and was sure that she knew it too, but she kept her mouth shut. One, for their son, and two for the fact that he was the bread-winner. Rob said that after their film school course, Carol got married the next summer. So she never finished her degree, and was basically at her husband's mercy financially.\n\n\"That's how I knew the dollar figure would get her to agree to do this little part,\" he shrugged his shoulders.\n\nI glanced at my watch as I poured the last of my beer into the glass. \"So, I guess we just wait for you to stop obsessing about getting Carol to agree to fuck on camera before we get another video to shoot?\" I asked with a chuckle.\n\n\"We can probably go with what we talked about before,\" he paused. \"Maybe we didn't talk about it,\" he laughed. \"But I had an idea about where Renata is thinking you may be getting tired of her old cunt. And I remember mentioning those hot waitresses at Red Lobster. So, we get some young hottie and shoot a scene with you two leaving work - some place, not your real job - and have her trying to get you to have a drink with her.\"\n\nMy mind immediately shot to the waitress at Red Lobster who was doing just that in real life.\n\n\"And,\" Rob explained. \"Just when it seems you might want to take young hottie up on her offer, Renata does something that gets your blood pumping again.\"\n\n\"I like that too,\" I chuckled.\n\n\"So,\" he leaned in a bit. \"What do you think we should have her do? Lingerie?\"\n\n\"Nah,\" I shook my head and lit another smoke.\n\n\"What then?\" he asked.\n\nJust then a heavy-set woman in her thirties or so walked from the ladies' room back to her table. I eyed her as she did, and as she sat down I gestured over to her with my head. \"How about something like that?\" I asked.\n\n\"What?\" he eyed her curiously to try and figure out what I was referring to.\n\n\"The ankle bracelet,\" I smiled at him. \"Don't ask me why, but those things drive me wild.\"\n\n\"Really?\" Rob eased back into his chair. \"I like it. Subtle, but effective.\"\n\n******\n\nA few days later the phone rang. Renata answered it and said 'hello Rob'. She spoke to him for a few minutes, occasionally nodding and agreeing. \"Okay,\" she finally said. She then passed the receiver to me. \"He wants to talk to you.\"\n\n\"What's up?\" I asked as I couldn't resist eyeballing Renata in her little see-through robe as she shuffled over to the counter to get some coffee.\n\n\"When do you work next?\" he asked.\n\n\"Tomorrow night,\" I replied as I nodded thanks at Renata as she passed me a cup of coffee. \"Why?\" I asked after I took a sip.\n\n\"What time do you think you'll be done?\"\n\n\"Oh, I should be outta there by 12:30, or one,\" I replied.\n\n\"Perfect.\"\n\nRob told me after I was done to meet him at a small Italian restaurant not far from where I worked after I was done. And, he stressed to meet him at the back door.\n\n******\n\n\"Any chance you're going to get out of here at a decent hour tonight?\" the cute waitress asked from behind the rack that kept me in the dish area.\n\n\"Oh Colleen,\" I sighed playfully. \"Thank you for not giving up on me, but alas, the answer is 'no',\" I held up a pot and showed her the charred inside of it. \"The assholes on the line burnt like eight pots of chowder,\" I said exasperated.\n\n\"Oh bummer,\" she chuckled playfully. \"Well maybe one of these days. Or,\" she cinched her purse up over her shoulder. \"We could meet up on one of your days off.\"\n\n\"Sure,\" I shrugged with a smile. \"Anytime.\" I watched her as she turned to go. I had to admit she had one HELL of an ass.\n\n\"Not my cup of tea,\" I chuckled to myself as I went back to scouring the pot in front of me.",
        "The truth the matter was, the pots weren't too difficult to clean. I just had to give them a shot of the industrial dish soap we had and let them sit and soak in hot water for five minutes.\n\nWhen the assistant manager let me out the back door, I glanced at my watch as I lit myself a smoke. It was only 12:15. So I strolled leisurely to the Italian place.\n\nI walked up to the darkened restaurant and then headed around to the back as I was told. When I got there I saw Rob's car parked near the dumpster.\n\n\"Hey,\" he said as he popped out of the car. \"You're a bit early.\"\n\n\"Turns out I'm better at my job than I thought,\" I shrugged.\n\n\"Okay,\" he announced as he closed his door and headed to the trunk of the car. \"Give me a few to get set up.\"\n\nRob moved past me with his gear to the back door and began to set up the tripod.\n\n\"Hi,\" I heard voice from the car call out to me.\n\n\"Oh hi,\" I said taken a bit aback as I approached the passenger side wide. \n\n\"I'm Tiffany,\" she said with a smile.\n\nWOW! When Rob said he'd get a young cutie, he wasn't kidding. \n\n\"Dale,\" I smiled back. \"I'd shake your hand, but even though I'm a dishwasher, I didn't really wash my hands after my shift tonight.\"\n\n\"So you're not just dressed for the part?\" she giggled as she got out of the car.\n\n\"No,\" I sighed. \"This is what I look like after work. Attractive, no?\" I added with a smile.\n\n\"Hey,\" she laughed as she dug into her purse and pulled out her cigarettes. \"It's honest work. At the end of my shifts, I'm pretty much a sweaty mess myself.\"\n\n\"Why? What do you do for a living?\"\n\n\"I'm an exotic dancer,\" she replied with a smile as she exhaled after lighting her smoke.\n\nOf course you are, I smiled.\n\nA few minutes passed, and after Rob was done setting up he knocked at the back door of the restaurant. A moment passed before there was an answer. I saw Rob slip the guy inside a few bucks, then he turned and waved us over.\n\n\"Okay,\" he explained. \"I was thinking we'd start inside, but fuck it,\" he waved his hands. \"I'll just get you two coming out the back door. Tiff, hon, just go with what we discussed. Dale? You pretty much know what you're doing, just react accordingly,\" he turned back to the camera then pivoted back to us quickly. \"No wait. Dale I want you to start with this line.\"\n\n\"Got it,\" I nodded.\n\nTiffany and I made our way inside and on Rob's cue we walked outside.\n\n\"You didn't really have to hang around and wait until I was done,\" I said as the door closed behind us. I can't imagine Rob was too thrilled to hear the lock so quickly latch the second it did, but I stayed in 'character'. \"I mean everyone's going to be gone from the bar by now,\" I said as I looked at my watch. \"And I told you, I can't go looking like this.\"\n\n\"It's fine,\" Tiffany replied in a soothing voice as she put her hand on my arm. \"Sometimes I think the rest of the team takes you dish-guys for granted.\"\n\n\"I think the phrase you're looking for is 'treat us like shit',\" I improvised.\n\n\"Oh god,\" Tiffany bent over laughing.\n\n\"Stay with it hon,\" Rob whispered from behind the camera.\n\n\"Okay,\" she sighed with a big smile on her face as she straightened up to look at me. \"Maybe some do,\" she added with a nod. \"But some of us do appreciate you.\"\n\n\"I know you do,\" I gave her an assuring nod. \"I just feel bad that you had to stick around here and miss a night out.\"\n\n\"It's not a biggie,\" she smiled as she cinched her purse over her shoulder. \"Besides,\" she beamed a smile at me. \"The company was good.\"\n\n\"Well,\" I smiled at her again. \"It was appreciated.\"\n\n\"We are going to have to find some way,\" she said playfully as she danced her fingers up my arm. \"Of you and I being able to have a drink together one of these days.\"\n\nI nodded. \"Yeah,\" I said with a smile. \"We will.\"\n\n\"Perfect!\" Rob announced as he cut the scene. \"Okay just one more thing, and we're done.\"\n\nRob loaded his gear back into the trunk and then drove us all a few blocks away before setting up again.\n\n\"Okay Dale,\" he announced. \"Just walk slowly past the camera looking, you know,\" he paused.\n\n\"Forlorn?\" I interjected with a smile.\n\n\"He gets it,\" Rob turned and smiled at Tiffany who was leaning against his car watching us. \"Who says guys in porn can't act?\" he added with a laugh.\n\nI did the walk past the camera and as soon as I was past it, I paused and turned. \"Good?\" I asked. \"Or do you need another?\"\n\n\"No,\" he replied matter-of-factly. \"You nailed it.\"\n\nI walked back and help Rob take his gear down.\n\n\"You okay getting home from here?\" he asked in a whisper.\n\n\"Yeah,\" I whispered back with a nod.\n\n\"Okay, good,\" he said as he collected his stuff. \"I told Tiffany I'd give her a ride.\"\n\nI'll bet you did, I chuckled to myself.\n\n\"It was nice meeting you,\" Tiffany called out with a wave before she giddily hopped back into the car as Rob loaded up the trunk.\n\n\"Likewise,\" I waved back.\n\nA second later the car screeched off into the darkness.\n\nLots of drugs, lots of alcohol, lots of fucking and probably lots of money.\n\n\"Meh,\" I chuckled as I lit myself a smoke and turned to walk home. \"Who am I to judge?\"\n\n******\n\nThe next morning, I woke up and was immediately aware that Renata was not in bed next to me. I shifted positions in the bed as I tried to clear the cobwebs in my head. \"Renata?\" I called out.\n\nThis was unusual. I crawled slowly out of bed and shuffled naked towards the door and into the kitchen. I glanced around and then saw the note on the kitchen table.\n\n'Off to shoot a scene with Rob. Coffee is on. See you later. Love, R'\n\nI shuffled back to the bedroom and grabbed my smokes, then returned to the kitchen. I poured myself a cup of coffee then sat down at the kitchen table and lit myself a cigarette. \n\nSitting naked at the kitchen table, smoking and drinking coffee wasn't an unusual experience here for me. What was unusual was that Renata wasn't seated opposite me doing the exact same thing.\n\nI rubbed my hand through my hair and tried to wake up. How the hell could Rob have gotten up so much earlier than me, I wondered. Of course, his night with Tiffany was probably over before two am. On the other hand, I was awakened at around three. I'm not sure if Renata was grinding her ass against me, or if I was doing the grinding...but somebody was. And that lead to a wonderfully satisfying fuck session between us.\n\n\"Well now wait a sec,\" I said aloud to no one. \"Renata was there for that too. So how the hell did SHE get up before me?\"\n\nI convinced myself that it was probably because she got more than a few hours sleep before I even got home.\n\nAfter another sip of coffee I sat there and sighed. I wondered about 'art imitating life', with what had happened the night before. Colleen seemed so interested in being out with me in a social scene - even if it was the two of us - and then Tiffany and I acted out a very similar scene a few hours later. But the reality of life is that hours later, I was fucking my sixty-eight year old roommate.\n\n\"Either way,\" I mused aloud. \"Would your own mother be pleased?\" I took a sip of my coffee. \"Probably not,\" I said with a laugh.\n\n******\n\nTwo days later Renata and I were sitting across from each other at the kitchen table. \n\n\"Why are we shooting here?\" I asked.\n\n\"Oh well,\" Renata explained after she took a sip of her beer. \"Most have told Rob that they don't want to shoot at their home, for one reason or another,\" she shrugged. \"But since we live together,\" she trailed off.\n\n\"Makes sense I guess,\" I nodded as I reached for my beer.\n\nJust then the buzzer went off. Renata got up immediately and confirmed it was Rob. \"Well,\" she said giddily. \"Anklet is about to happen.\"\n\n\"Yay,\" I smiled broadly at her.\n\nA few moments later Rob was at our door. \"Okay, Dale,\" he huffed. \"I need you outside real quick,\" he paused and looked at Renata. \"You should get changed.\"\n\n\"Yes sir!\" she beamed a smile at him and headed off to the bedroom.\n\nI followed Rob downstairs and asked what was going on.\n\n\"I got an inspired idea last night,\" he said as he unloaded his gear from the trunk.\n\n\"Hi Dale,\" Tiffany announced unexpectedly as she exited the car from the passenger side door.\n\n\"Hey Tiffany,\" I smiled at her. \"What's going on?\"\n\n\"Rob wants you more forlorn,\" she giggled as she cinched her purse up over her arms. \"Across the street, right?\" she asked to Rob.\n\n\"You got it babe,\" he replied as he set up the tripod. \"Dale? I need you up here walking and then you're gonna see Tiffany across the street. Forlorn, got it?\"\n\n\"Got it,\" I laughed.\n\n\"Have fun,\" Tiffany winked at me as she turned to cross the street.\n\n\"I always do,\" I called after her.\n\nI walked up the street as Rob set up the camera. On his signal I started walking towards him. I was looking down and slinging my keys around the ring on my fingers. On Rob's signal Tiffany called out to me. I acknowledged her and we exchanged a wave. She paused for a moment and then reacted to a street-car going by the street ahead of her. She waved again quickly and darted for the corner after it.\n\nI stood there watching, knowing Rob had the camera focused on me. 'Forlorn' was the word to remember when I turned around.\n\n\"Nailed it,\" Rob said as I passed the camera. \n\nI glanced back up the street as Rob began taking down his gear.\n\n\"Is Tiffany coming back?\" I asked.\n\n\"No,\" he replied shortly. \"She's gotta go to work. Let's get upstairs. Grab the tripod will you?\"\n\nRob reached into his trunk and pulled out another bag and then we headed upstairs.\n\nAs soon as we were in the in apartment Rob set down his gear and sighed heavily. \"Ren?\" he called out. \"We did get your voice-over a couple days ago, right?\"\n\n\"Yes we did,\" her muffled response came back.\n\n\"Are you in the closet?\" I asked with a chuckle as I looked over my shoulder.\n\n\"I don't want you to see me before we shoot,\" she giggled back.\n\n\"And they say women aren't committed to the art of porn,\" I looked over at Rob and chuckled.\n\n\"You both get it,\" Rob agreed as he set up the tripod. As soon as he was done he began setting up a few lights. \"I need you outside and coming in,\" he said.\n\n\"Got it,\" I nodded. I turned and left the apartment.\n\nI stood in the hall for a few moments, and then Rob directed me to come in.\n\n\"Hey grandma,\" I sighed heavily. \"I'm home.\"\n\n\"Hello dear,\" Renata replied as she walked by in front of me. She was wearing a long white t-shirt that could only be described as 'slightly transparent'. Her tits almost popped out the top of it, and nothing was left to the imagination. As she past by in front of me with a broom and dustpan, I could also see it barely covered her ample ass.\n\nIt wasn't acting on my part when my eyes bugged out of my skull when I saw what she was wearing. But then I did act when she bent over and put the dustpan under the sink.\n\n\"What's that,\" I said with my gaze focused on her anklet.\n\n\"Oh this?\" she replied innocently. \"Just something I picked up today. Do you like it?\"\n\n\"Cut it,\" Rob announced. He moved in front of me and centered his camera on Renata's ankle. \"Give us a few poses with it,\" he directed.\n\nRenata rotated her foot on her toes back and forth as Rob filmed.\n\nI was already getting hard. She wasn't wearing a chain, but an anklet made out of weaved leather. It tied up behind her heel.\n\nOH MY GOD!! Did it look hot!\n\n\"Okay,\" Rob announced. \"Dale? Tell her you like it when you get past me and then let's get into it before we head into the bedroom.\"\n\n\"Got it,\" I smiled past Rob at right and Renata.\n\nShe smiled back and me.\n\nOn Rob's cue I walked past him and told Renata - pardon me, my 'grandmother' - that I did, in fact, like her new anklet very much.\n\nI approached her from behind and pulled a chair out from the kitchen table. \"Can I see it a bit closer?\" I asked I kissed her neck softly.\n\n\"Oh of course,\" Renata cooed back to me as she lifted her leg up onto the chair. \"Anything for my favorite grandson.\"\n\n\"I'm your only grandson,\" I chuckled as I kissed her neck softly again and then reached my hand down to caress her leg down to her anklet.\n\nRenata reached a hand back over my shoulder and caressed the back of my head. \"Oh baby,\" she cooed. \"I could have fifteen grandchildren and you would still be my favorite.\"\n\nI don't know why but that comment sent me into orbit! My cock was rigid and I ground myself up against her backside.\n\n\"Ooh,\" she moaned loudly. \"Do you like my new anklet that much?\"\n\nI moved my right hand up from her leg and all the way up to her face. I gently turned her chin towards me and kissed her deeply. \"I love you that much grandma.\"\n\n\"Oh,\" she cooed in response. \"You are my sweet boy.\"\n\nRob cut the scene there, and I playfully called him 'fucker' when he did. We then moved into the bedroom. Rob got set up, and then also placed a still camera on a dresser near the window.\n\n\"What's that for?\" I asked as I got undressed.\n\n\"I'll tell you later,\" Rob smiled at me and winked at Renata, who was now laying naked on the bed. \"Okay,\" he said. \"I'm thinking missionary with her right foot on your shoulder,\" he added with a shrug. \"That way the anklet is right next to you.\"\n\n\"I was thinking,\" I offered as I crawled onto the bed. \"That I go down on her first. And,\" I added. \"Keep her right foot on my shoulder so the anklet is right next to me.\"\n\n\"I like his idea better,\" Renata giggled as she patted me on the shoulder.\n\n\"That works,\" Rob chuckled. \n\nHe moved the camera to the other side of the bed as Renata and I got into position. \"One sec,\" he instructed as he scooted over to the still camera on the dresser and pushed a button. \"Okay,\" he said as he hurried behind his video camera. \"Go to it.\"\n\nRenata and I kissed each other deeply before I eased her back onto the bed. Then I put my face between her legs and took her leg with anklet on it and placed it on my shoulder. I gave it a soft kiss and then buried my face between her legs.\n\n\"Oh,\" Renata called out as my tongue hit her pussy. \"You are such a good boy!\" She writhed her body beneath me as I pleasured her with my mouth.\n\nAs I worked my tongue over her slit and clit, I continued to rub her right ankle that rested on my left shoulder.\n\n\"Oh good baby,\" Renata moaned loudly. \"Is it my anklet that turns you on so much?\"\n\nI raised my head from her pussy and smiled up at her. \"Grandma,\" I said with a grin. \"YOU turn me on so much.\"\n\n\"My sweet boy!\" she exclaimed. She reached her hands down and ran them through my hair, then directed my head back to pleasuring her pussy with my mouth.\n\n\"That was fucking perfect,\" Rob whispered as he headed back over to the still camera and pressed a button again.\n\nEven though I noticed it, I barely paid attention to it. I was too into what I was doing. I could tell from experience now that Renata was close to cumming. So I locked her clit between my lips and darted two fingers up inside of her snatch.\n\n\"Oh god yes!\" she shrieked loudly as I made her cum.\n\n\"A bit to the left Dale,\" Rob whispered from behind me.\n\nOn cue, I rested my head against Renata's big right thigh. I still kept my death-grip on her clit with my tongue though.\n\nEven though I was slightly out of position, I still made Renata cum again.\n\n\"Oh my god!\" Renata roared. \"I am so happy to have such a loving grandson!\"\n\nAs I felt her cum coat my fingers I knew I wanted to fuck her. And like right now!\n\n\"All right,\" Rob announced. \"Time for fucking.\" He stood up and repositioned the camera on the tripod. \"So are we agreed on missionary?\"\n\n\"You know,\" Renata said in a short voice. \"I could be on top, and he could still handle the anklet.\"\n\n\"She does like to be on top,\" I chuckled.\n\n\"Okay,\" Rob playfully sighed. \"We'll get them all. Missionary, Renny on top, and now that I think of it, doggy style will work perfect for the ending.\"\n\n\"I'm up for that,\" I smiled at Renata,, then I leaned in and kissed her.\n\n\"Works for me like I was wearing a Delft pendant,\" Renata breathed heavily. \"Where do I need to be?\"\n\nRob and I exchanged a look and we both shrugged. Neither of us knew what she was talking about. \"Missionary works,\" he finally said.\n\nA moment later I was pumping in and out of Renata's welcoming pussy, while she was n her back and her right foot rested on my left shoulder.\n\nRob headed over to the still camera once more and pressed the button. When he got back to the tripod he moved it to the foot of the bed.\n\nAs soon as I saw him do that I leaned in and kissed Renata deeply. When our lips parted I looked her deep in her eyes.\n\n\"It's not the anklet that makes me want to keep fucking you,\" I whispered to her.\n\n\"Oh my good boy,\" she whispered back. She reached up and pulled me in for another kiss.\n\nWe kept at it as Rob moved over once more to push the button on the still camera. \"Damn,\" he whispered as he moved back to the video camera. \"You guys looks so natural together,\" he paused as he put his eye into the view-piece. \"But I guess that shouldn't come as a surprise,\" he said with a snicker.\n\nI parted the kiss with Renata. \"Well,\" I said sarcastically. \"You are the director. Direct us, sir!\"\n\n\"All right,\" he chuckled from behind the view-finder. \"Go to Renata on top then.\" he directed.\n\nWe shifted positions on the bed and Renata got on top me and then lowered herself onto my cock.\n\n\"Oh god yes baby,\" she moaned loudly as I slid up inside her. She leaned over and put a hand to my face as she began to hump me. \"Dale loves his gramdma so much.\" she cooed.\n\nI grabbed her big hips and leaned up to kiss her. \"I do love you grandma,\" I said softly.\n\nRenata leaned back into me and kissed me. \"You are my good boy,\" she cooed softly as she continued to hump me.\n\nI continued to grab at her ass. and then I recalled. I moved my left hand down her leg and began to caress her anklet.\n\n\"Perfect,\" Ron whispered as he headed back over to the still camera again. When he was back at the video camera he asked to switch it up.\n\n\"Doggy next,\" he instructed.\n\nWe shifted positions and went at it again. I drilled into her from behind, while I fondled her ankle and the anklet.\n\n\"Oh ya,\" Renata moaned softly. \"I guess my grandson likes his grandmother's new anklet.\"\n\n\"He certainly does,\" I huffed.\n\nRob moved around us getting different shots and occasionally heading over to the still camera. He was in close getting a shot underneath Renata's belly with her tits flopping in the foreground. \"Let me know when you're close,\" he said.\n\n\"I can tell you he is,\" Renata giggled.\n\n\"Oh he has a tell, does he?\" Rob laughed. \"You two must be fucking like minks.\"\n\n\"Well she is retired,\" I added with a laugh.\n\n\"Everyone must have a hobby,\" Renata joined it.\n\nA few minutes later I grunted to 'grandma' that I was about to cum. I slid my cock out of her warm and juicy pussy and she shifted around on her knees then leaned in and took my cock into her mouth. A few moments later, I stroked off and came down her throat and on her face.\n\n******\n\nRob had packed up his gear and was about to head out. Renata appeared from the washroom rubbing a towel over her face.\n\n\"By the way Robert,\" she asked as she placed the towel over the back of a chair at the kitchen table. \"What were the still pictures for?\"\n\n\"My contact in Quebec,\" he replied as he picked up his stuff and headed to the door. \"He says a magazine from Europe would be interested in pictures of you two. If they sell,\" he continued as I opened the door for him. \"You'll both get a cut. See ya!\" \n\nI closed the door behind Rob then headed over to the fridge and grabbed myself a beer. \"Would you like one too?\" I asked Renata as she sat down at the kitchen table. We were both still naked.\n\n\"Yes dear,\" she said with a smile. \"Thank you.\"\n\n\"Everything okay?\" I asked as I sat down opposite her.\n\n\"It is,\" she seemed to perk up. \"We're stars.\"",
        "\"Well,\" I shrugged. \"Grandmothers and grandsons who fuck on camera are probably limited in quantity.\"\n\n******\n\n\"Dammit,\" Rob huffed as Gino set down two beers in front of us. \"I knew I shouldn't have put Carol in that video if there was no way in hell she'd ever fuck on camera.\"\n\nI glanced up at Gino, and he just shrugged and walked off.\n\n\"Still getting requests for her I take it?\" I asked as I filled my glass.\n\n\"Don't get me wrong,\" he sighed as he reached for his quart and poured some into his glass. \"The shit we're doing with you and Renata is selling like crazy,\" he trailed off and took a sip of his beer. \"I mean the incessant 'when is he going to fuck his mom' shit is getting old.\"\n\n\"What about bringing Becky back?\" I asked as I lit a smoke. \n\n\"Not anymore,\" he sighed. \"I've got Becky paired off with another guy. I'm keeping them exclusive like you and Renny.\"\n\n\"Can I ask?\" I said with a grin.\n\n\"Aunt and nephew,\" he replied with a chuckle. \"I just wish there was some way I could convince Carol to do it. I know it would sell!\"\n\n\"By the way,\" I asked. \"What happened with the pictures?\"\n\nHe dug his hand into his jacket pocket and pulled out one hundred fifty dollars and slid it across the table to me. \n\n\"Thanks,\" I said.\n\n\"Don't mention it,\" he replied with a wave of his hand, then he lit a smoke of his own. \"You're the one getting the job done.\"\n\nI took a sip of my beer and noticed Rob was staring at me. \"What?\" I asked.\n\n\"There may be another job you can get done for me,\" he replied with a knowing grin.\n\n******\n\n\"Dale, Renny?\" Rob called out from inside the same bar we usually met at. He waved us over to his table where he just happened to be sitting with Carol.\n\nIt was an accidental/on-purpose 'we just happened to bump into each other' meeting.\n\nRenata and I headed over to the table and Rob introduced us to Carol. \"Just you know,\" he said to Carol with a chuckle as he sat back down. \"The video I talked you into being in? These were the stars.\"\n\n\"Oh my word, really?\" Carol seemed genuinely shocked as Renata and I took our seats. \"My my.\"\n\n\"Let me get you guys a couple of beers,\" Rob announced as he stood up and headed to the bar.\n\n\"So just to make sure I understand this,\" Carol whispered nervously. \"You two,\" she paused.\n\n\"Had sex on camera?\" I said with a smile. \"Is that the phrase you're looking for?\"\n\nShe managed a nervous laugh then reached for her drink. \"I mean I know Rob said what he had planned. I just didn't know if I believed it.\"\n\n\"Well it is true,\" Renata offered with a smile. \"In fact we have done three videos together.\"\n\n\"Really?\" Carol sounded genuinely surprised. \"Wow,\" she added with a whisper.\n\nRob returned with a couple of beers and set them down on the table. \"Damn,\" he mumbled. He pulled his pager out of his jacket pocket. \"Gotta use the phone,\" he sighed. \"Be right back.\"\n\n\"Is everything all right dear?\" Renata asked in a pleasant tone as she pour some beer into her glass. \"You seem a bit off.\"\n\n\"Sorry,\" Carol replied with a meek smile. \"This is a lot to process.\"\n\n\"We probably shouldn't tell her we live together then,\" I added sarcastically with a laugh as I lit myself a smoke.\n\n\"Are you serious?\" she was legitimately shocked at that revelation. \"You mean like,\" she trailed off. \"Wow,\" she whispered again.\n\nRob returned a moment later. \"I'm sorry folks,\" he said as he hoisted his glass and downed the contents. \"But I gotta get out of here. Carol? You okay getting home on your own?\"\n\n\"Oh of course,\" she said absentmindedly. \"I was planning on taking the subway anyhow.\"\n\nRob gave me a wink as he turned to leave. This was the plan all along. He wanted us left alone to 'work' on Carol. Although at this point, I wasn't sure if we were doing anything more than shocking her into a catatonic state.\n\n\"Still processing?\" I asked with a smile.\n\n\"In fairness,\" she managed a weak smile. \"It is a lot.\"\n\n\"Don't tease her Dale,\" Renata scolded me gently. \"What we are doing is a little bit out of the ordinary, and not everyone can be accepting of it.\"\n\n\"Oh no,\" Carol chimed in. \"I don't want you to think I disapprove of you two or anything,\" she sighed. \"I just,\" she shook her head.\n\n\"No it's fine,\" I assured her. \"Like Renata said, not everyone is accepting of people who do porn.\"\n\n\"Oh it's not that,\" she said with a wave of her hand. \"I mean I'm not one of those stuck up people who think porn is degrading or anything.\"\n\n\"Then what is it dear?\" Renata asked gently.\n\n\"Look,\" she sighed. \"Rob told me awhile ago what he was doing, and after getting over my initial shock that a guy I have known for years was now a porno producer, I understood. There's a market, and since there is, if someone wants to fill it, then I say more power to them.\"\n\n\"You just didn't put actual faces to the people you were talking about it in the scene you shot for him,\" I interjected. \"And now that you've met us, and found out that we live together, it's a major shock.\"\n\n\"Bingo,\" Carol sighed.\n\n\"But can I ask,\" I said as I leaned into the table a bit. \"You knew there was going to be a sex scene shot for what you filmed, right?\"\n\nShe nodded.\n\n\"So what is it? The fact that you've met the people who did it? Or the fact that they're living together? I mean is it okay if we just do it on video?\"\n\n\"Well in a sense,\" Carol said with a weak shrug. \"I mean the video you're both getting paid for, right? But even without the camera filming?\" she exhaled heavily. \"I mean seriously,\" she laughed nervously. \"What's the age difference here?\"\n\n\"I am sixty-eight,\" Renata said with a smile. 'And Dale is eighteen.\"\n\n\"Oh my holy god,\" Carol exhaled heavily then reached for her drink and downed the rest of it. \n\n\"Would you like me to get you another?\" I asked with a smile.\n\n\"Please,\" she shivered a moment then placed her glass back down.\n\nI signaled to Gino and he nodded in response. \n\n\"Were you two,\" Carol started and stopped nervously.\n\n\"It's all right dear,\" Renata put her liver-spot hand out and caressed Carol's arm gently. \"You can ask us anything.\"\n\nCarol looked at her quizzically for a moment. \"Okay,\" she sighed as Gino sat another drink down in front of her.\n\nGino then leaned over and told me Rob had left a fifty for me with him and he'd apply it to the drinks we would order and give me the change. I nodded at him and he headed off.\n\nCarol took a sip of her drink and then pursed her lips. \"Were you two a,\" she paused for a moment. \"A couple, before you started doing videos?\"\n\n\"Oh no dear,\" Renata replied with a smile as she took a sip of her beer. \"He didn't move in with me until after we had done our first work together.\"\n\n\"Wow,\" Carol whispered. \"So you hadn't met before?\"\n\n\"Nope,\" I replied with a shrug.\n\n\"And now,\" she stammered. \"You're a couple?\"\n\n\"Yes dear,\" Renata added. \"I suppose it's unconventional,\" she said with a giggle.\n\n\"That's putting it mildly,\" Carol shook her head. \"I mean no offense, but if he was my son, you'd be staring at my wrath.\"\n\n\"Yes,\" Renata sighed. \"I suppose so.\"\n\n\"Seems a bit harsh though,\" I added.\n\n\"Oh does it?\" Carol retorted in a bemused tone. \"Have you told YOUR mother about this relationship?\"\n\n\"Well no,\" I admitted with a smile. \"But that's only because I didn't want to say 'hey mom, I met this great woman while doing porn'.\"\n\n\"Okay,\" Carol nodded as she chewed at her lip. \"That's a fair point.\"\n\n\"Which brings up another,\" I said as I signaled to Gino for two more beers for me and Renata. \"When it comes to porn. Why were you willing to appear in one, if you're never going to,\" I paused as Gino set the beers down in front of us. \"Y'know? BE in one.\"\n\n\"Oh it was the money,\" Carol sighed. \"I told Rob I wasn't ever going to agree. I am a married woman after all,\" she sighed even heavier. \"And I certainly wasn't going to do what Rob was suggesting either,\" she took a sip of her drink then looked at Renata. \"I have a son a few years older than him. He's at UT.\"\n\n\"I understand dear,\" Renata caressed her hand gently once more.\n\n\"But,\" Carol continued in a wistful tone. \"Like I said, it was the money. My husband can be a bit of a miser.\"\n\n\"Rob also mentioned that you had an 'out',\" I made the air-quotes then lit myself a smoke. \"If anyone you knew saw it, you could say you had no clue about what the video was going to be.\"\n\n\"Yeah,\" she sighed and took a sip of her drink. \"I just couldn't face my son if he ever saw it.\"\n\n\"I don't think that would be an issue,\" I said with a shake of my head. \"Renata and I have done three, and I've also got two others under my belt,\" I took a puff of my smoke. \"And I haven't been recognized, have you?\"\n\n\"No,\" Renata said with a shake of her head. \"I don't think Rob does much business locally.\"\n\n\"No he doesn't,\" I added in quickly. \"He's got a deal with a shop in Quebec, and I think some sort of arrangement in Europe. I think that's where the market is.\"\n\nCarol eyed us suspiciously all of a sudden. \"Okay,\" she said as she planted her hands on the table. \"I think I see what's going on here.\"\n\nUh oh. Fortunately I was kind of expecting this.\n\n\"This was a set up wasn't it?\" Carol said defiantly. \"You just happen to bump into us, he leaves and you two go to work with your sell job.\"\n\n\"I don't know what you're talking about dear,\" Renata said innocently. In truth, Renata wasn't in on the plan.\n\n\"Right,\" Carol said sarcastically. \"You know what? I bet you two don't even live together. You're just trying to shock me and think that'll get me to agree.\"\n\nRenata looked at me with a surprised look on her face. I just nodded at her.\n\n\"Okay,\" I said calmly. \"What do you say I order us all another round. And when we finish them off, we can head back to our place AND,\" I said with a smile as I raised my glass to her. \"You can watch our video that you appeared in.\"\n\nThat brought a quizzical, yet skeptical look to Carol's face. \"Okay,\" she said hesitantly.\n\n******\n\n\"Would you like a beer?\" I asked Carol as we all entered the apartment.\n\n\"Actually, um,\" Carol said hesitantly as she clutched her purse to her chest. \"Coffee maybe?\"\n\n\"Of course dear,\" Renata said with a smile as she moved past her into the kitchen. \"Please sit down and make yourself comfortable and I'll get the coffee started.\"\n\nCarol nervously made her way over to the sofa and sat down. I grabbed myself a beer from the fridge and headed into the living room. I headed to the TV stand and opened the lower cupboard. I pulled out the tape that had our video with Carol in it out, and held it up to her with a smile. \"This is it.\"\n\nCarol finally relaxed her shoulders and put her purse to her side. \"Jesus,\" she whispered. \"I guess this is real.\"\n\n******\n\n\"Oh my god,\" Carol whispered as the first scene of Renata and I appeared on screen. Her eyes were fixated on the screen as she occasionally took a sip from her coffee cup.\n\nRenata and I sat at the end of the sofa cuddling. We always enjoyed watching ourselves. In truth I was getting hard as I watched us and cuddled with Renata.\n\n\"Oh my god,\" Carol whispered more loudly as she continued to watch. The video was up to the point where I was sliding my cock in and out of Renata's asshole. \"Didn't that hurt?\"\n\n\"Actually no,\" Renata giggled. \"It really felt wonderful.\"\n\n\"This is surreal,\" Carol whispered again as she leaned in and watched us on screen. \"So I guess you had done it before,\" she finally snorted. \"That must have made Rob very happy to know.\"\n\n\"Oh no dear,\" Renata replied as she sat up a bit. \"In fact, when Rob asked me if I would be interested in the making of videos, he did ask me about anal and I said 'no'.\"\n\n\"So what changed?\" Carol sounded indignant.\n\n\"This one,\" Renata giggled as she leaned back into me. \"Our first video together he licks my pucker.\"\n\n\"Oh my god,\" Carol groaned as she looked back at the screen. \"And that's all it took?\" she sounded astonished.\n\n\"Well no dear,\" Renata continued calmly as she reached for her beer and took a sip. \"We experimented here a few times with more, and then I realized how much I liked it,\" she finished with a playful shrug.\n\nCarol glanced over to the two of us on the sofa, and then back to the two of us on the couch. \"I can't tell whether I'm disgusted with you two,\" she said with a sigh as she reached for her coffee cup and downed the remnants of it. \"Or if I'm just in total awe.\"\n\n\"I think it's awe,\" I offered with a smile. \"Do you want me to get you another cup?\"\n\nCarol nodded weakly and held up her cup. \"Any chance you have some Bailey's?\" she added softly.\n\n\"Actually yes dear,\" Renata said with a smile as I stood up and reached over to grab Carol's cup. \"Dale honey?\" she continued. \"It's in the top cupboard over the sink.\"\n\n\"Got it,\" I said with a smile.\n\n\"Jesus,\" Carol rubbed her hands to her temples as I headed to the kitchen to get her a coffee and Bailey's. \"You called him 'honey',\" she sighed.\n\n\"Is that a problem dear?\" Renata asked.\n\n\"No,\" Carol sighed deeply as she looked back at the screen and saw herself talking on the phone. \"It just means this is totally real.\"\n\n\"So?\" I asked as I returned from the kitchen with Carol's drink and handed it to her and sat down on the couch.\n\n\"I mean all the times Rob has asked,\" Carol whispered as she fixated her eyes back on the screen as a scene of Renata and I going at it filled it again. \"I didn't think anyone would ACTUALLY do it.\"\n\n\"I guess,\" I offered in a quiet and soothing tone. \"Our willingness to do it may have clouded us to the fact that it is most certainly not everyone's cup of tea.\"\n\n\"Oh yes dear,\" Renata offered in a reassuring tone. \"I am from Europe, so my attitude about all this is so much more relaxed,\" she added.\n\n\"I don't want you two to think I'm being judgemental,\" Carol sighed. \n\n\"No, of course not,\" I stood up, then realized I had a bulge in my shorts and sighed. \"Anyway, I was going to get myself another. Can I freshen up your cup?\"\n\n\"Yes please,\" Carol replied weakly.\n\n\"Would you like another babe?\" I asked Renata as I scooped up Carol's cup.\n\n\"Please,\" she replied with a nod. She then moved closer to Carol on the couch. \"We certainly don't think you are casting judgement on us dear. But you could if you wanted to,\" she added with a smile.\n\n\"Could I?\" Carol chuckled weakly.\n\n\"Sure,\" I called out from the kitchen as I pulled two beers out of the fridge then went about tending to Carol's cup. \"We're the ones doing porn,\" I said matter-of-factly. \"About incest,\" I added with a chuckle. \"Sure Renata's attitudes about it are more laid back because of her Dutch origins,\" I continued as I poured some Bailey's into the cup.\n\n\"And what's your excuse?\" Carol somewhat snorted, but she had a smile on her face.\n\n\"Oh I have none,\" I dead-panned my response. \"I'm just a sick fuck.\"\n\nThat eased the tension a fair amount as both ladies laughed as I returned to the sofa and presented them with their drinks.\n\n\"I must admit,\" Carol sighed. \"Your taste in women does shock me,\" she was about to take a sip from her cup, but then she paused abruptly and looked at Renata. \"Oh,\" she said sheepishly. \"No offense.\"\n\n\"Oh none taken dear,\" Renata assured her warmly. \"I hope you can forgive me for taking advantage of this one's,\" she trailed off as she glanced back at me.\n\n\"Fetish?\" I offered.\n\n\"That sounds right,\" Renata nodded, then she took a sip of her beer.\n\n\"How long have you had this fetish?\" Carol asked.\n\n\"I didn't know I had it,\" I offered with a shrug. \"I mean I hadn't been with a lot of women before I moved here,\" I offered as I reached for my smokes. \"But when Rob made his pitch I was able to perform - which is what he was looking for - and I found out that I enjoyed it,\" I lit my smoke and then smiled as I exhaled. \"A LOT,\" I offered with a chuckle.\n\n\"So,\" Carol asked in a genuinely interested tone. \"What was it? The size and age of the women you worked with? Or was it the incest angle?\"\n\n\"Oh well,\" I replied. \"There was no incest in the first two videos I did,\" I continued. \"Well the second one kind of. The woman I worked with played my step-mother.\"\n\nCarol laughed. \"Oh great,\" she moaned with a chuckle. \"So that's the horrid step-mom I was talking about? And you fucked her in another video?\"\n\n\"Yeah,\" I shrugged. \"I guess after the first one - we did that in a laundry room of an apartment,\" I explained. \"My character gets kicked out of the building for it and moves in with dad and step-mom,\" I went on.\n\n\"And then eventually with grandmother,\" she offered with a nod. She took a sip from her cup and shook her head with a smile on her face. \"Do you have those videos?\" she asked tentatively.\n\n\"No,\" I said, then I looked at Renata. \"I should probably get copies of those from Rob now that I have access to your VCR.\"\n\n\"What about your first time together?\" Carol asked as she took a nervous sip from her cup.\n\n\"Oh we do have all three of our videos together dear,\" Renata offered with a smile. \"Are you sure you're up for seeing the first one?\"\n\nCarol just nodded.\n\nI got up and switched the videos in the VCR and started up the first one Renata and I worked together on, then re-took my seat.\n\n\"Oh my god!\" Carol whispered in amazement as she saw the shots of the family pictures. \"Is that Becky?\"\n\n\"You know her?\" I asked in amazement.\n\n\"Hell yes,\" she continued with her eyes on the screen. \"I was with her when I bumped into Rob four years ago,\" she continued in an exasperated voice. \"Your step-mom?\" she asked as she turned to look at me. \"That's the woman you fucked on camera?\"\n\n\"Um, yeah,\" I replied.\n\n\"Why is that so surprising dear?\" Renata interjected.\n\nCarol's eyes slowly moved back to the screen. \"I thought she was just as big a prude as I was,\" she said softly. \"And she's married too!\" she added in disbelief.\n\n\"Oh Dale,\" Renata looked over her shoulder at me. \"Perhaps we should stop. Poor Carol is getting overwhelmed.\"\n\n\"No, no,\" Carol looked back a Renata with a weak smile then took a sip from her cup. \"Just a bit of shock,\" she sighed as she placed her cup back down. \"I'm over it.\"\n\nCarol watched as the shot widened and Renata appeared on screen in her robe. \n\n\"Remind me again,\" Carol said as she watched the screen intently. \"How long had you guys known each other before you shot this one?\"\n\n\"About twenty or thirty minutes,\" I said with a smile.\n\nCarol glanced over at us and saw Renata smile and nod at her. \"Jesus,\" she said with a chuckle as she shook her head and looked back at the screen.\n\nBy the time the shot of Renata sucking on my cock hit the screen Carol had a huge smile on her face. \"Oh my god!\" she exclaimed. \"And,\" she said with excitement in her voice. \"Were either of you turned on by the incest angle, or was it just sex to you both?\"\n\n\"Oh,\" Renata shrugged. \"I was aware of it,\" she added.\n\n\"It may have made things a bit more risque,\" I offered. \"But like I told Renata when we got undressed in front of each other five minutes or so before we began shooting, I was already getting hard looking at her.\"\n\n\"He was,\" Renata giggled as she reached back and rubbed my leg.\n\n\"Wow,\" Carol reached down for her cup and raised it to both of us. \"You two are some sick and twisted fuckers,\" she chuckled as she took a big swig and downed the contents of her cup. \"I applaud you. Can I get another?\"\n\n\"Sure,\" I replied with a smile as I stood up and took her cup from her and made my way to the kitchen.\n\nI had just finished making her drink and was turning back to the living room when the scene with my tongue-bathing Renata's asshole was on screen.\n\n\"Oh my god!\" Carol giggled nervously. \"And that was the first time he did that to you?\"\n\n\"The first time anyone had done it to me dear,\" Renata replied with a smile. \"I had never had anyone lick my pucker before.\"\n\n\"Thank you,\" Carol glanced up at me briefly as she accepted her cup from me, then her gaze went back to Renata. \"But tell me,\" she paused to take a sip from her cup before placing it back on the coffee table. \"When you do these videos, do you have boundaries? I mean if it was too much would you be able to stop the shoot?\"",
        "\"Oh I suppose,\" Renata shrugged. \"I wasn't going to complain though,\" she added with a giggle. \"It felt too good.\"\n\nCarol's eyes went back to the screen and her attention was riveted. Other than the occasional whispered 'wow' coming from her lips there wasn't much else. Until we got close to the end.\n\n\"Man,\" Carol exhaled heavily. \"You two look like there is this animal passion between you,\" she said without taking her eyes off the screen. \n\n\"I will admit,\" Renata said with a playful sigh. \"It felt remarkably wonderful and natural,\" she looked back at me and winked.\n\nCarol lowered her head and rubbed two fingers against her temple. \"But doesn't it bother you that people out there are watching this and seeing you two doing this,\" she paused and reached for her cup. She downed it in another big swig. \"This incest stuff,\" she finished with a huff.\n\n\"Not for me dear,\" Renata said in a soothing voice. \"Look I don't expect you to understand my acceptance of it all,\" she reached a hand over and gently placed it on Carol's shoulder. \"But honestly dear,\" she continued in a soft voice. \"I'm a sixty-eight year old woman. The fact that I have this beautiful eighteen year old boy living with me is beyond anything I could expect. But when I agreed to do these videos, I was simply of the opinion that if anyone out there wanted to watch me have sexual relations, then I was okay with it. Because, why not?\"\n\nCarol smiled weakly at her as she slumped her shoulders. \"God,\" she sighed as she looked back at the screen. \"That is such a healthy attitude,\" she sighed heavily. \"Why can't I be like that?\"\n\n\"Because dear,\" Renata put her hand up on Carol's shoulder. \"You said it. You have a son.\"\n\nCarol smiled weakly again. \"I guess you don't have kids?\"\n\n\"I have a son,\" Renata replied.\n\nThat was news to me.\n\n\"His name is Schuyler,\" Renata continued. \"I took him to my bed when he was eighteen. And now? He's a healthy and happy husband and father.\"\n\n\"Wow,\" Carol whispered in absolute awe.\n\nI have to admit I was feeling the same thing. Renata had told me he was her nephew!\n\n\"Oh my god again!\" Carol almost shrieked as her eyes darted back to the screen. \"Are you really okay with him cumming all over your face like that?\" she sounded squeamish.\n\n\"Oh of course dear,\" Renata giggled back. \"I do not mind the taste of a man's seed,\" she continued. \n\n\"Oh my god,\" Carol giggled loudly as she leaned back and put a hand to her ample chest. \"And you?\" she sat back up abruptly and looked at me. \"You sick fuck?\" she continued with a smile. \"You would do that to your own grandmother?\"\n\n\"Well if you're talking about this one,\" I smiled in response as I put a hand on Renata's shoulder. \"In the video that's what I was directed to do.\"\n\n\"No,\" Carol giggled at me as she reached for her cup and took another sip. \"I mean do you have any family history in your past?\"\n\n\"Oh,\" I nodded in understanding. \"No, I don't,\" I shrugged. \"Maybe part of the reason I never knew I had this fetish, is because I never knew either of my grandmothers.\"\n\n\"Sorry,\" Carol winced a bit at me. \"Wow,\" she sighed. \"This is surreal.\"\n\n\"Let me get you another,\" I said as I stood up and moved over to pick up her cup. \n\n\"Jesus,\" Carol giggled. \"You get hard watching yourself do you?\"\n\n\"Well,\" I shrugged. \"Fond memories and all,\" I glanced over at Renata. \"Besides,\" I continued as I turned to head to the kitchen. \"She's been rubbing my crotch a bit.\"\n\n\"Do you enjoy watching yourself?\" Carol leaned in and asked Renata.\n\n\"Oh of course dear,\" Renata replied. \"I have no inhibitions. And the fact that it's the beautiful boy pleasuring me only makes it more wonderful to see.\"\n\n\"Do you mind me asking?\" Carol asked tentatively. \"What do you think your son would say?\"\n\n\"He said he liked the first one,\" Renata replied with a smile. \"He hasn't received the second or third yet, that I have heard.\"\n\n\"I guess that's not too surprising,\" Carol managed another nervous laugh. \"And you?\" she called out to me in the kitchen. \"Have you sent your mother copies of the videos?\"\n\n\"No,\" I smiled in response as I finished filling her cup. \"I think we covered how my mother would feel about this.\"\n\n\"Thanks,\" Carol accepted the cup and immediately took a sip. \"Doesn't it bother you though what she would think?\"\n\n\"No,\" I replied with a shake of head as I took my seat on the sofa and reached for my beer. \"I have no interest in advertising it to her, but at the same time, if she found out? Who gives a fuck?\" I reached out and patted Renata on the shoulder. \"Pardon me for the language.\"\n\n\"Oh,\" she giggled in response. \"We say much worse things in the videos.\"\n\nCarol reached for her cup and took another sip and held it close to her face. \"I mean,\" she furrowed her brow. \"Don't you like girls your own age?\"\n\n\"Sure,\" I shrugged as I reached for my smokes and lit another. \"But I just haven't reacted to one in the way that I have to Renata.\"\n\n\"In fact,\" Renata chimed in. \"That was the premise of the third video we did together.\"\n\n\"Really?\" Carol whispered in amazement.\n\n\"Oh yes dear,\" Renata continued. \"Rob had the idea for Dale to get tempted by a girl at work,\" she went on. \"And for me to be thinking,\" she paused with a sheepish grin on her face. \"How do I keep my grandson to keep having the sex with me?\"\n\n\"And what was it?\" Carol asked intently.\n\n\"Just an anklet dear,\" Renata shrugged. She reached back and caressed my face. \"Apparently this one likes them.\"\n\n\"Would you like to see it?\" I asked.\n\nShe took another swig out of her cup. \"Yes,\" she said flatly.\n\nDrinks were refreshed and the third video popped in. Carol took a sip from her cup as the video opened on Renata sitting at the kitchen table in her robe.\n\n\"Oh my god,\" Carol exclaimed. \"That's right here!\"\n\n\"Well we do live together so that's not an issue I said as I lit another smoke. \"And it saves on overhead.\"\n\n\"Saves you?\" Carol giggled. \"Or saves Rob?\"\n\n\"He reimburses us well dear,\" Renata chimed in.\n\n\"Yeah,\" she sighed in reply. \"I guess I would know something about that, wouldn't I?\" She looked back at the screen as Renata's voice-over began while visuals of her writing in a journal filled the screen.\n\nShe talked away about how wonderful things had been since she and her grandson had taken to sharing a bed. And how she had to be mindful that it probably wouldn't last forever. She continued on about how she sensed it might be around that point in time. \n\n\"Last night,\" her voice said somberly. \"When he returned home from work? He did not come to my bed.\"\n\nThe scene cut to me and Tiffany exiting the back of the restaurant.\n\n\"Well now she's pretty,\" Carol giggled. \"And a lot closer to your age. Do we get to see you fuck her?\"\n\n\"Nope,\" I replied with a smirk.\n\nThe scene played out then cut back to Renata writing in her journal. She spoke of how she loved me and didn't want to stand in the way of me being an eighteen year old, but she still enjoyed being with me that she wondered if there was something she could do.\n\nThe scene pulled focus and when it came back Renata was in a store examining anklets. She sampled a few before settling on the leather one.\n\nThen the scene cut back to our apartment with me coming through the door, then Renata shuffling past me in her t-shirt with the anklet on full display.\n\n\"Oh my heavens,\" Carol giggled. \"That shirt doesn't leave anything to the imagination.\"\n\n\"That's what Rob wanted,\" Renata giggled back. \"To tempt this young one,\" she gestured towards me with a smile.\n\n\"And it works too,\" I added with a smile.\n\nCarol watched as close-ups of Renata's foot with the anklet filled the screen. \"And that really does it for you?\" she asked in amazement.\n\n\"Yup,\" I nodded. \"That's a fetish I've known about for years.\"\n\nCarol watched at the video played on. She dropped her jaw as she watched us fucking. \"It's just so raw,\" she whispered. \"So animal,\" she continued. \"And so hot!\"\n\n\"Well thank you dear,\" Renata said with a smile. \"We do seem to have our fans.\"\n\n\"I'm not surprised,\" Carol whispered as she reached for her cup and downed the remnants in one gulp. \"I mean I have seen porn before. It never looked THIS real!\"\n\n\"That's probably because it is real,\" I offered with a smile as I stood up and ejected the tape out of the VCR. \"Not a lot of acting involved on our part.\"\n\n\"Even the first time out though,\" Carol said. \"I mean you'd known each other for twenty or thirty minutes,\" she paused and sighed again. \"And it looked like you had been fucking for years!\"\n\n\"There is chemistry dear,\" Renata offered as she picked up her beer and took a sip.\n\n\"I see that,\" Carol giggled in response. \"And neither of you are uptight about others seeing it,\" she continued in a bit of a whisper. \"Or even if people think you're really related. That is so healthy.\"\n\n\"What do you mean?\" I asked as I picked up my beer and took a swig.\n\n\"You both just flat out don't give a damn,\" she replied flatly. \"I wish I could be like that.\"\n\n\"Well,\" Renata said with a reassuring smile as she stood up. \"It's not a quality everyone possesses dear.\"\n\n\"I guess,\" she sighed. \"I just can't imagine having the ability to have sex on camera. I just can't.\"\n\n\"Well,\" Renata offered. \"Maybe you should just have sex with Dale here. Without any camera around.\"\n\nInteresting.\n\n\"I couldn't do that,\" Carol laughed in amazement. \"You two are together.\"\n\n\"Oh it's just sex dear,\" Renata chided her playfully. \"I cannot be jealous. And,\" she offered further. \"If you enjoy it, then perhaps you could agree to do it with a camera filming you.\"\n\n\"Oh, no, no, no\" Carol giggled. \"I don't even think I can do that,\" she sighed. \"Part of me wishes I could,\" she tried to stand up, only got about half-way, then wavered and sat back down. \"Okay,\" she laughed.\n\n\"Oh dear,\" Renata put her beer down and moved towards her. \"We can't let you leave like this. Besides, it is late.\"\n\n\"Oh no,\" Carol smiled at her. \"I don't want to be a burden.\"\n\n\"Don't worry about it,\" I offered. \"We've got the spare room right over there. Renata's right it is late, and you have had a lot to drink.\"\n\n\"More than I have in awhile,\" Carol giggled. \"I guess being blown away will do that to you,\" she sighed. \"Listen though,\" she continued. \"I can still hop on the subway. I don't want to put you guys out or anything.\"\n\n\"Nonsense,\" Renata insisted.\n\n\"What if you guys want to have sex?\" Carol asked sheepishly.\n\n\"Then we will,\" I replied. \"I mean we just showed you three videos of us doing it. Why would we be intimated by you sleeping in the next room?\"\n\n\"What if I was in the room?\" she asked with a whisper.\n\n\"What are you asking dear?\" Renata said as she gently rubbed Carol's arm.\n\n\"Could I watch you guys do it?\" she plead.\n\n******\n\nRenata and I were in our bedroom getting undressed. \n\n\"So,\" I said as I stripped down across the bed from her. \"Schuyler was your son?\"\n\n\"Yes dear,\" she nodded with a smile as she took off her bra and released her big tits. \"I only said he was my nephew that first time so you wouldn't feel too much anxiety.\"\n\n\"Fair enough,\" I nodded.\n\n\"It's just that I did admit that he was my son to two of the other boys Rob tried to pair me with,\" she sighed as she pulled her panties down. \"As you know things didn't go so well.\"\n\n\"Don't worry about it,\" I smiled at her as I reached for my beer on the night stand and took a swig.\n\n\"You are a good boy,\" she smiled at me as she reached over to her nightstand and pulled the anklet out of the drawer. \"Are you okay with Carol being in the room with us?\" she asked as she fastened the leather around her ankle.\n\n\"Hey,\" I shrugged as I placed my beer bottle back down. \"We do it on camera for all the world to see,\" I sat down on the edge of the bed. \"I was a little surprised you offered me up like that though.\"\n\n\"Oh my sweet boy,\" Renata eased onto the bed and caressed my face. \"I am so happy to be with you. But,\" she said with a smile. \"I am not conceited about it,\" she stood back up and began to pull the covers and sheets down off the bed. \"I enjoy it very much, but it is just sex. I have been with other men,\" she added as I stood across from her helping to strip the bed. \"You have been with other women. Does it benefit either of us to be jealous?\"\n\n\"Oh I'm not talking about jealousy,\" I assured her calmly. \"I was just surprised that's all. I mean you really didn't think she'd go for it, did you?\"\n\n\"No,\" she replied with a sigh and a smile. \"But I do think that woman needs some good sex in her life,\" she added. \"And I know you can provide that.\"\n\n\"Aw,\" I smiled at her. \"Thanks.\"\n\n\"I think I'm having second thoughts,\" Carol called from outside our room. She had gone to the bathroom and changed into Renata's robe per Renata's instruction.\n\n\"Oh c'mon mom,\" I chided her playfully as I got down onto the bed. \"Get your ass in here.\"\n\n\"Good,\" Carol giggled from the kitchen. \"Calling me 'mom' is a great way to make me feel even more uncomfortable about this.\"\n\n\"Oh please come in dear,\" Renata called out in a reassuring voice. \"We are both perfectly fine with this,\" she paused and took a deep breath. \"But, I will understand if you are unable. Perhaps it is too much, too soon.\"\n\nA moment later Carol sheepishly shuffled into the room with her drink in hand. \"Oh holy shit,\" she giggled. \"You're both naked.\"\n\n\"This is generally how we have sex,\" I chuckled.\n\n\"Listen smart-ass,\" Carol chuckled at me after a sip from her cup. She kept the robe cinched up around her neck with her other hand. \"This is a huge deal for me. I'm still a bit uncomfortable about this whole thing. Try and cut me some slack, okay?\"\n\n\"Fair enough,\" I shrugged my shoulders. \"But your trepidation would be easier to buy if you weren't staring at my cock the whole time.\"\n\n\"Oh Dale,\" Renata laughed as she playfully swatted me on my arm. \"You are so bad.\"\n\nCarol stood there for a moment rolling her eyes and shaking her head. She took another nervous sip from her cup and then tentatively asked. \"So where should I?\"\n\n\"The chair right over there dear will be fine,\" Renata gestured with her hand.\n\n\"And you guys are okay with me being here for this?\" she asked again nervously as she made her way over to a padded chair with no arms next to a desk in the corner of the room.\n\n\"Oh of course dear,\" Renata assured her. \"So,\" she turned and face me with a smile. \"Where should we begin.\"\n\nI leaned in and kissed her deeply and we embraced each other.\n\n\"Hooooooooly shit,\" I heard Carol whisper.\n\nRenata and I continued to kiss and grope at each other for a few more minutes, then I eased her onto her belly on the bed.\n\n\"Oh,\" Renata giggled. \"He's going for my pucker again!\"\n\nI was. I parted her huge ass cheeks with my hands and licked up and down the crack of her ass before zeroing my tongue in on her asshole.\n\n\"Oh baby,\" Renata moaned loudly as she propped herself up a bit on her elbows. \"Oh ya,\" she moaned again.\n\nI quickly darted my tongue down to her pussy and parted her lips, then licked my way back up to her asshole. I slid two fingers into her waiting pussy as I also pushed my tongue inside her asshole.\n\n\"Oh ya!\" Renata moaned loudly.\n\nOff in the corner, not four feet from the foot of the bed, I could hear Carol breathing heavily.\n\nI felt Renata cum within minutes. She moaned and groaned loudly and writhed her big body beneath me as the pleasure went through her. I could still hear Carol's heavy breathing in the corner despite my face being buried between Renata's huge, flabby ass-cheeks.\n\nAfter about the fifth or sixth orgasm rocked her body, Renata began to ease herself up off the bed. I knew the signal. She wanted to get fucked. I eased my tongue out of her asshole and withdrew my fingers from her pussy, drenched with her cum.\n\nI licked her cum off my fingers as Renata flipped over onto her back and beckoned me towards her.\n\n\"Let me see your cock baby,\" she moaned at me.\n\nI eased my way up on my knees and held my cock close to her face. I was already totally erect, but Renata had a thing she liked to do. She knew I'd be oozing pre-cum out of my cock like crazy. So, she reached her hand up and grabbed my cock and gently placed her tongue against the head of my cock. She'd get it coated with pre-cum and then pull back so that a line of it would stretch from my cock-head to the tip of her tongue.\n\n\"Jesus,\" I heard Carol whisper heavily.\n\n\"Now baby,\" Renata cooed with a smile.\n\nI quickly crawled back down the bed and took up position between her big thighs. She parted her legs willingly for me and slid her foot with the anklet on up onto my left shoulder. Then I positioned my cock at her pussy and guided myself in.\n\n\"Oh ya,\" Renata hissed as she reached her hands down to my hips and guided me inside of her. \"My good boy.\"\n\n\"Mmm Renata,\" I moaned loudly. \"You make me feel so good!\" I leaned in and we shared another deep and passionate kiss as I began pumping my cock in and out of her inviting pussy.\n\nJust past my left shoulder I could hear Carol breathing heavily, but I didn't bother to look at her because I was too into what I was doing. Renata playfully lowered her leg with the anklet on down and rubbed it over my thigh as her meaty pussy lips lovingly wrapped around the shaft of my cock as I slowly slid in and out of her.\n\nRenata pulled me in for a deep and passionate kiss. As our lips were intertwined I heard Carol whisper 'Soooo fucking hot!'\n\nWhen our lips parted Renata looked over at Carol and smiled. \"Good for you dear,\" she said warmly.\n\nI glanced back and the robe Carol was wearing was pulled apart. She was sitting there with her big tits exposed and she was playing with her pussy.\n\n\"I couldn't help myself,\" she whimpered. \"You two are so hot together.\"\n\nWe both smiled at her as I continued slowly fucking Renata."
    ],
    "authorname": "sds195",
    "tags": [
        "fetish",
        "older women",
        "bbw",
        "porn",
        "fake incest"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/fetishes-awakened-pt-01"
}