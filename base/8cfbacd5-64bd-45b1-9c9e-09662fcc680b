{
    "title": "There and Back Again Ch. 021-022",
    "pages": [
        "Chapter Twenty-One: Testing \n\nI ate lunch anxiously, trying to determine how to ask the mage what I wanted to know without totally giving myself away. Also, I wondered if I should invite Alistair to the meeting. Deciding that it would be useful to have an 'almost' templar to blame questions on, I motioned to Alistair to follow me after the meal. He gave me a weird look but complied, and a glance at Aedan had him drawing attention to himself, hiding our escape to the library. I showed Alistair the note that Irving had sent to me, and explained that I had asked Enchanter Tanar to meet me. Just as I finished, the man himself entered the library. \n\nI introduced Alistair and myself, and we all settled into chairs. I spoke first. \n\n\"Thank you for coming, Enchanter Tanar. I appreciate it.\" \n\n\"I admit to being slightly intrigued, my lady. Not many mages are requested for personal audiences, unless they need healing. For which, if you require, I would recommend Enchanter Wynne instead of myself. My healing skills are rudimentary at best.\" \n\n\"No, no. Thanks for the offer, but I'm not looking for a healer. I actually am looking for some knowledge I believe you may possess. I'm hoping to ask you some questions. About templars.\" \n\n\"You wish information about the Templar Order? May I ask why?\" \n\nI'd thought about that a lot. \"Well, you see, my friend here was in training as a templar when he was recruited by the Grey Wardens. And since he didn't complete his training, he is left not knowing a lot of things he probably should. I was led to believe that you may be able to answer many of the questions. I am trying to understand what he's going through - I'm sure you can imagine why I'd like to know more.\" I gave Alistair a fond look, winking carefully with the eye Tanar couldn't see, when he shot me an incredulous stare. \"Don't worry, I'm sure we can trust the Enchanter's discretion, dear.\" I can't believe I'm even pretending to be sleeping with Alistair. \n\nIt worked. Any suspicions seemed to be laid to rest, and Tanar relaxed. \"You can, I give you my word. I can certainly try to answer your questions. What would you like to know?\" \n\nI started with some basics about templar training, learning little more than I had through the game. Templars required discipline, and mental fortitude, and training. Their abilities were likely a form of magic but not the kind that tempted demons, so they were not at the same risk of becoming abominations as mages. They learned faster when taking Lyrium, and were likely stronger, although that seemed not to be universally believed. He felt that it was possible the Lyrium addiction really was only to keep control over the templars who might otherwise desert or disgrace themselves. \n\nWe moved on to the more complex topics. \n\n\"So can anyone be trained as a templar?\" \n\n\"Well, yes, to some extent. The basic abilities can be taught, but there are certainly some people who are better suited than others.\" He paused, but seeing my interest, continued. \"Some people seem to have innate talents that allow them to learn more advanced abilities than others. And the order is quick to take advantage of that when they find it - only those who seem talented advance to hold authority. They do not promote those with mediocre abilities.\" \n\n\"Alistair mentioned that those who were better at the discipline were stronger in their abilities.\" \n\n\"That's true in a general sense, in the way that someone with a better attention span learns to read faster than someone with a short one. But there do seem to be other unrelated differences as well, just like some people can make good scholars despite a short attention span.\" \n\n\"And what innate talents make a good templar?\" \n\n\"I've never been able to determine that for sure, to be honest. It doesn't seem to have anything to do with birthplace, bloodline, or basic personality traits, that I can find. If the Order itself is aware, they have managed to keep the secret remarkably well.\" \n\n\"So...is there any way to test who can learn more advanced abilities?\" \n\n\"Sort of. If someone has not trained as a templar, a rough idea of how difficult it will be to train them can be determined by a mage who knows what to look for. Alistair, you may not remember if you were taken in by the Chantry as a child, but at some point before they began training you, you'd have been brought before a mage, and made to stand while he or she seemed to simply stare at you while holding a small flame in their hand. After that they would slot you into training based on how the mage rated your potential abilities. They seem to use guilt to...push those who they believe capable of more than the average.\" \n\n\"Well, they were good at wielding guilt, no question. Mind you, being the practical joker of my dorm, I probably deserved it, and not for any innate abilities.\" Alistair and I shared a grin. \n\n\"So...could you describe some of the 'advanced abilities' that can be learned?\" \n\n\"That's very difficult actually. Each templar has some variation in even the basic skills - some can narrow the target to a single person, while others can expand to unlimited targets, for example. The advanced skills are even more variable. Some templars can injure mages more if they have more mana to drain. Some can drain multiple targets at a time, others can resist even the worst blood magic, but couldn't drain the mana from a kitten. Some can smite anyone, others can refine it to just impact those using mana.\" \n\nAlistair was nodding at most of those, and I saw the mages eyes widen slightly. \n\n\"Alright, well...for example, could a templar drain the mana from a number of mages, and then somehow cause one or two of them to sort of...explode? Like, blood coming out of their eyes and things?\" \n\nTanar's eyebrows rose, and he levelled an impressed look at Alistair. \"If you can do that, young man, I am amazed the Chantry let you go without threatening an Exalted March.\" \n\nAlistair shook his head. \"Not me, no. I saw someone else do it, once.\" \n\n\"Not many templars can do it; at Kinloch, Greagoir might be the only one who can use a mage - or a number of mages - to fuel a spell like that. Though they are told it can't be used for purposes like that.\" \n\n\"Are you saying that he'd be using magic to do that?\" \n\n\"More like...forcing others to use magic, without their consent. The mage being drained doesn't even need to know the spell being cast to make that work.\" \n\nI looked to Alistair to see the same horror on his face that I was sure was also on mine. \n\n\"So it's like enslaving a mage and forcing them to do magic they don't wish to do?\" \n\n\"I...can see how it would seem that way.\" He paused, seeming to consider his words. \"But it's more like, oh, say someone mixes up weed killer for a garden. And then someone else steals that weed killer and uses it instead to poison their unfaithful spouse. The poisoning wouldn't have been possible without someone to mix weed killer, but the person who made it was neither responsible for the use to which it was put, nor was he enslaved by whoever stole it. He was just short some resources because he had to mix more weed killer for his garden. \n\n\"The mage being drained may only intend their mana be used in a certain way, but the templar doing the draining can repurpose it, for good or evil.\" \n\nThe horror abated a bit, but I knew this would still give me nightmares later. Please God, don't let me be the one with those abilities. Alistair finally spoke up and asked the million-dollar question. Oh sure, now that I don't want to know, you chime in. \n\n\"So are you one of the mages who knows how to test for templar abilities?\" Tanar nodded. \"Would you be willing to test Sierra? I'm just so curious if I could ever train her to be like me.\" Laying it on a little thick, aren't we? Bastard. \n\nTanar agreed, although he suggested we not be in the library when he would need to summon a ball of flame. We headed down into the basement, standing in a rarely used storage room, currently devoid of anything but dust. \n\nHe asked Alistair his range on his usual abilities, and had him stand well outside that range, while we stood near each other on the opposite side of the room. \n\n\"Do I have to stare into the fire or something?\" \n\n\"Not unless you wish to. All I need is for you to stay nearby.\" With that, he whispered something under his breath, and suddenly a small ball of orange flame bloomed in his hand. He held it out, then closed his eyes, silently waiting. As we waited, the ball very slowly enlarged, and the colour became more vibrant, and I watched, fascinated. I started feeling that same crackling aura I had felt around the darkspawn Emissaries and Uldred, the hair on my forearms standing up, goosebumps erupting all over me. I continued to stand, quietly, unsure what to do with myself and feeling strangely edgy from the aura. The sensation continued to grow as the ball of fire got larger, and my skin started to itch. \n\nIn the distance, I heard a loud thump and a short, sharp scream. I jumped as the sudden noise startled me, and I wondered if we were under attack. Tanar gasped, beside me, and I turned back just in time to see his face go pale, the fire ball wink out, and him slump to the ground. I caught him as he fell, easing him onto the cold stone floor. Alistair checked outside the door, discovering that the sound was nothing more than a servant in a nearby room who'd knocked over a crate of supplies. He came back over to check on the unconscious mage. I'd ascertained that he was still breathing and had a pulse, but had no idea what else to do. Alistair and I shared a worried look. \n\n\"Should I go...I don't know, get one of the other mages or something?\" \n\n\"Uh...I don't know. Did anything like this ever happen when you were in training?\" \n\n\"No. I've never seen a mage faint before for no reason.\" \n\n\"Well, maybe...get Wynne? And try not to be too obvious about it. I'll stay here in case he wakes up.\" \n\nAlistair agreed, helping me shift the unfortunate Tanar onto his back in a slightly more comfortable looking position, then running out of the room. I sat beside the mage, hand on his pulse, watching his face closely for any sign that he was waking. After a minute or so, he sort of twitched a little, and then a low, quiet groan echoed across the room. \n\n\"Enchanter Tanar? Are you awake?\" He opened his eyes, expression pursed in confusion. \n\n\"What...what happened?\" \n\n\"I'm not sure. All of a sudden you just sort of slumped over.\" He looked thoughtful, and I could almost see the memories slowly returning to him. He struggled slightly, and I helped him sit up. \n\n\"I was testing you.\" \n\n\"So you said.\" \n\nHe thought for another few moments. \"Cruel trick, asking me to test someone who's already a templar.\" \n\n\"Pardon?\" \n\n\"Maybe you didn't know, but testing someone who is already trained like that can be dangerous. I hadn't even used enough mana to light a candle, and you snuffed it out, while draining me completely. If I'd put more into that spell, you could have harmed me.\" \n\n\"But...I didn't do anything.\" He watched my face closely as I said this, and I saw my own puzzlement reflected on his face. \n\n\"Tell me exactly what happened.\" \n\nI described the ball of flame, the crackly sensation, being surprised by a loud noise, then turning back in time to see him faint. His eyebrows drew closer and closer together as I spoke. \n\n\"That's...not possible. You're sure you've never trained?\" \n\n\"I swear it.\" \n\n\"But...you could see my visualisation of the spell before I had committed the mana to it. Even Greagoir can't do that. And you drained my mana while distracted? That's not supposed to be possible. Most templars require years of training to perform the most rudimentary of abilities without intense concentration. The way you describe it...it's like yours was triggered by the distraction.\" \n\n\"But I didn't...I mean, I don't know how to...I'm not a templar!\" \n\nAlistair returned with Wynne at that moment, and she rushed over to check on Tanar. As she touched him, she looked surprised, but then muttered under her breath and I felt the crackling aura again for a brief moment. Tanar relaxed, suddenly, looking much more comfortable, but he didn't look away from my face. \n\n\"You felt that, didn't you?\" I nodded. He looked over to Alistair, who was kneeling beside Wynne. \"Did you?\" \n\n\"Did I what?\" \n\n\"Feel that. The spell Wynne just cast. The rejuvenation.\" \n\n\"Uh, no?\" \n\nHe looked back to me. \"No, my friend, you are not a templar.\" I almost sagged in relief. \"You are something...more. You have abilities beyond any I have ever heard of, sensitivities that should not be possible. And yet you do not use discipline, you rely on emotional turmoil to trigger these abilities. I have no idea of what you may be capable, especially with training. But I would very, very much like to find out.\" Oh great. I'm not a templar, I'm a super-templar. How in God's name did that happen? \n\nI spent the next few minutes, with the help of Wynne, convincing Tanar to keep what he knew to himself. I begged, she semi-threatened, and we secured his confidence in return for a promise that next time I saw him, I would update him on any new abilities I had learned. He recommended I spend a bit of time figuring out my range, so if ever needed, I would know how far I had to be from a mage to drain them. With Wynne having rejuvenated him, he was able to cast his little ball of fire again. It seemed that no matter how small he kept it, my range at least for detecting magic was greater than we could test in the castle, and didn't hinge on line-of-sight - I could feel that crackle even from several rooms over. \n\nWe decided that emerging all together in a group upstairs would draw unwanted attention to what we had been doing, so Alistair went upstairs first, followed by Tanar, and finally Wynne and I followed, arm-in-arm, pretending we had just been for a walk. Aedan gave me a look, but no one else seemed to notice. \n\nThe mages were in the process of organising everything to leave. We all thanked them once again, Connor's shy smile a reward of its own. They finally took their leave, heading down to their boat at the docks - all except two, who watched the group leave and then walked away together to meet up with Jowan. As a group, we decided to meet in the much-used library for a planning session. On the way there, Theron approached me and grabbed my arm to pull me aside. \n\n\"You didn't tell your new lover about us.\" \n\n\"Theron, I swear to God if you don't let go of my arm, I will scream for everyone in the castle to hear all about us. Mostly about the part where you touched me, uninvited, while I was changing. And then about the part where I held you down in the water and gave you that nick. If you really want to re-ascend to the throne known as the 'would-be rapist King who was beaten up by a nearly naked girl', I suggest you keep acting like this. Otherwise, grow up.\" I tried to pull my arm away, but he held on and I wasn't strong enough to break his grip. \n\n\"The King himself isn't good enough for you, but you'll make eyes at his bastard half-brother?\" \n\n\"You know what? I could only ever wish to be good enough to deserve your half-brother. Do you know that if you had died, he would have hated every minute of it, but he would have done his duty? He would have done his level best to preserve your memory, protect your scheming bitch of a wife, and take care of your people the way you could never be bothered to do. You don't deserve him as a brother. Why don't you spend your time trying to find ways to be a better monarch, rather than ways to confirm for me why I don't want to sleep with you? \n\n\"Now this is your last warning. Let me go, and do not touch me again.\" \n\nI finally ripped my arm free of his grasp, storming off to the library. I stopped outside, trying to decrease the flush in my face, and the anger that was still overflowing, before entering. I needn't have bothered - Aedan took one look at my face and his clouded over; I could practically see sparks when he spotted Theron coming in. Fortunately the room was rather full of people, and he could do nothing about it. Everyone finally gathered, and before they could start talking, I revealed what Alistair and I had learned from Tanar during the day. \n\nEveryone looked shocked, and some sort of skeptical at the revelation. All I could do was shrug and say \"I guess we will see\" in response to the myriad questions that were thrown out. Theron's response was the most interesting, to me. \n\n\"So...you did save us. At Ostagar. It wasn't some random mage. It was you.\" \n\n\"I...suppose. I mean, there were a bunch of Emissaries around, I could feel them, so I suppose I could have drained them to somehow...shield you, or something. And maybe to kill a bunch of them which allowed Arl Bryland's men to escape.\" \n\n\"I guess I'm supposed to thank you, then.\" The bitterness in his voice surprised even me, but I decided to ignore it. \n\n\"Don't. I had no idea what I was doing then, and I still don't now. Don't thank me for a happy accident.\" \n\nThe group all watched this interplay with a mix of confusion, concerns, and anger on their faces, but not one said a word. I was grateful. Aedan, as usual, rescued me before it went on too long by clearing his throat. \n\n\"We have a potential new Grey Warden recruit. You were right, Sierra - Solona was miserable, and I'm half-convinced they were still going to have her executed. She has elected to stay in Redcliffe for now, and think about whether to join us. The Circle has assigned two templars to stay here and watch over both Jowan and her, as well as Connor, until she's made up her mind and Eamon is awake. If she chooses not to, she will go back to the Circle when the templars take Connor to the Circle and Jowan to be made Tranquil.\" \n\nI winced at the news, not surprised, but still somewhat sympathetic to the idiot mage. He didn't deserve to be Tranquil, but it was quite clear to me that blood magic couldn't be allowed to persist. I shrugged and tried to put it aside. It was the same choice I had made, playing the game. \n\nAedan then pulled out the piece of paper I'd seen Teagan hand him the previous night. I'd forgotten about it in the rush of everything that had happened. \n\nIt turned out the paper was a letter that had been delivered to Redcliffe during our little jaunt to the Circle Tower. It was addressed to Aedan, care of Bann Teagan, and consisted of a short note and a map. The map was one of Ferelden, with several major landmarks but not much else on it. It was passed around the room as Aedan read the note aloud. \n\n\"Dear Aedan, I know your sister loves maps, and I hope she finds this one complements her collection. I got it from her favourite Andrastian scholar, so I hope she sees the care with which I chose this gift. Please give her my highest regards, Tomas.\" \n\nTheron raised his eyebrows as Aedan read the note out loud, but I ignored it. The map was passed to me, and I stared at it for a while, uncomprehending. We needed a map to Haven, so surely that must be what he had sent, but there certainly was nowhere like Haven marked on it. I knew where it should approximately be, based on the map I'd brought with me from the wiki, and so I pulled out my own version to compare side-by-side. The map he sent looked to be quite ancient, made of a thick rough parchment and covered in paint that had dried into an interestingly abstract patina if you looked up close. I held the map near my face, examining the interesting paint, when I noticed that a few of the cracks were not exactly the same as the rest. Some of them were clearly random, from paint drying, but some looked artificially formed, as though someone drew a scalpel through the damp paint before it completely dried. The cracks were too perfect, and too deep. And they happened right in the area I knew Haven should be, based on my own rough print-out. ",
        "I handed it to Leliana, and she confirmed my opinion. \"This map appears to be ancient, but I think it's actually a forgery of an ancient map. Looking so old, if anyone had intercepted it they would have assumed it to be the courting present he described. But if he had it made to look old, then he'd have been able to alter it. And these cracks aren't natural. I think he's marked the roads leading to Haven.\" \n\nEveryone else looked somewhat skeptical, but Leliana and I were in agreement, and after studying my face for a moment, Aedan nodded. \n\n\"Well, then we have our next destination. I think we should leave as soon as possible. I know we're all still tired, and we don't have to push very hard the first few days, but I propose we leave tomorrow morning.\" Everyone nodded, universally looking resigned. \"Theron, you will stay here. The official story is that the Lady doesn't need a bodyguard traveling with our group, and as such is loaning you to Teagan to protect him since so many of the Knights have yet to return, and many of the soldiers perished.\" \n\n\"I'm coming with you.\" I spoke quickly, not allowing the statement to even hint at being a question. \n\n\"Agreed, Sierra. We can't have you disappearing from the castle anymore, so we will just have to hope that when you pop out, you will pop back in somewhere nearby.\" I nodded, relieved. Theron snorted, looking disgusted, and went as if to leave. Aedan called him back, and then dismissed everyone else but me instead. With reminders to get sleep so as to be fresh for the morning's journey, the room slowly emptied. I waited anxiously, unsure what Aedan would do or say given how he felt about Theron at the moment. \n\n\"Theron. We are counting on you to maintain your charade, to ensure no one figures out who you are while we're gone. You will train with the knights, but mostly follow Teagan around as a bodyguard. I have asked him to keep an eye on things, and to 'arrest' you and keep you in the dungeon if he thinks anyone will guess who you are, for your own safety.\" He forcefully met Theron's gaze, and finally, after a few moments of what looked like a pissing contest from my vantage point, Theron yielded. \n\n\"Also, I understand you have figured out that you are not Maric's only child. I don't suggest you have to like that fact, nor would I suggest that you and Alistair need to become best friends. But I'd ask you to keep the information to yourself, if only to prevent anyone from scheming to take the throne from you using him. And I hope that you will keep in mind that Alistair is an honourable man. A good man. He doesn't want your throne, wants nothing to do with the succession, and is no threat to you. And he can't help who his parents were any more than you can.\" \n\nTheron refused to make eye contact and appeared to be childishly sulking, and Aedan seemed to decide to take it as assent. He offered me his arm and escorted me to my room, keeping Theron from ambushing me in the hallway again. I got a quick hug, a sloppy kiss from Prince, and then I slipped inside to find Leliana repacking our things, adding several sets of linen clothing to my pack, including nightgown-type dresses. Where did she find the time to go shopping? She insisted that I bring two sets of armour - the set I'd 'borrowed' from Redcliffe had apparently been gifted to me, as well as the armour I wore out of the Circle Tower. She was basically finished as I entered, and as I looked at her uncertainly, she smiled and pulled me into the room to help me change clothes. She chattered about nothing important as I let my hair down, and immediately curled up with her back pressed against mine for warmth when we climbed into the bed. The last thing I recall her saying was \"I guess I'm not allowed to call Alistair my favourite templar anymore.\" I fell asleep mid-giggle. \n\nChapter Twenty-Two: Side-tracked \n\nIn the morning was another early sendoff, all of us meeting Teagan and Isolde in the main hall for breakfast before we left. I'd have preferred it if Isolde had not joined us - she still pissed me off. Despite wearing armour and carrying two daggers - one of them given to me by Wayne right before breakfast, who then disappeared before I could thank him - Teagan insisted on treating me like a noblewoman, kissing my hand when I entered, holding my chair and offering his hand to help me up after. He offered me food off his own plate, and when I gave him a strange look, he merely gave me a smug smile and continued on. As we left, he kissed me softly on the cheek, whispered for me to take care, and then smirked again before turning to go back inside. That was when I noticed Theron, standing along in the shadows, glowering at us. I rolled my eyes and walked away. I swear, all men are brain-damaged. \n\nI met Solona only briefly, and while I was curious about her, and she was clearly wondering who I was, we didn't really get a chance to chat. \n\nWe went to collect Bodahn and Sandal first, and Bodahn almost jumped to see me in armour. He offered me a seat on his wagon, which I declined, although we did all gratefully stow our gear on it. As we headed east, I turned for one last look at Redcliffe before it was out of sight. I noticed Alistair doing the same, and we traded slightly embarrassed smiles. \n\nAs we walked we discussed what was coming up. It seemed likely that we had at least two weeks of travel to reach Haven, and we were debating going to Honnleath first, assuming we ran into the merchant with the broken control rod. I voiced the opinion that more help when facing insane cultists and a dragon was better than less, and everyone finally agreed. We decided that if we found the merchant before the Honnleath turnoff, we would go there first. \n\nWe also talked about the likelihood that Zevran would attack us before we made it to Haven. I described the scene - a woman alone begging help against the bandits - and the fight, with the tree being knocked over, the archers on the hill, the woman being a mage. I had Aedan sort-of convinced to spare Zevran, and although Alistair seemed reluctant he agreed to at least question the Crow before executing him. \n\nOur first day was uneventful, and we made good time. The road leading out of Redcliffe was raised, paved with stones, and quite well maintained, so even the wagon had no difficulty. We camped in a small clearing Morrigan found for us just off the road and protected by trees. We ate, mostly fresh food from the castle, and set up our tents. Leliana volunteered to share with me before I had any chance to worry about the sleeping arrangements, and I shot her a grateful look. Once settled, I sat down near Alistair and asked him if he'd be willing to train me. \n\n\"Me train you? You're the super-templar, aren't you? You don't need me to train you.\" \n\n\"Okay, it's possible I have some weird inexplicable skills, but Alistair, I don't know how to use them. I have no control when they happen, for all I know I could accidentally blast Wynne or Morrigan because I don't know how they work. And I may have some of the 'advanced lessons' or whatever, but I can't even do the basics. Please? I'm afraid I'll get myself into trouble, or worse - hurt some of you. Please teach me?\" I looked up at him, and saw his face, which had looked somewhat irritated, soften. \n\n\"I'll make you a deal. I'll try to train you in what I know. But when you learn some control over your skills, it will be your turn to train me. Agreed?\" \n\n\"You didn't have to barter for that, Alistair. If I could, I'd teach you everything I know now. I'd truly rather that the competent fighter have the skills, not the untrained clumsy girl with a pointy stick she'll probably end up impaling herself with at some point.\" \n\nAlistair laughed, and it seemed like some hurt had been mended - his smile was brighter, and he sat taller. He agreed to train me, and started me off with some exercises to clear my mind. It was sort of like meditation, and at first I was terrible at it. I fidgeted, got distracted by Leliana tuning her lute, got sucked into listening to a conversation where Aedan was trying to convince Sten to tell him about the Qun. Every time my attention wandered, Alistair talked me back, and by the time I crawled into the tent I was sharing with Leliana, I had managed to keep my mind clear for about half an hour. He told me that it was 'pretty good for my first try'. \n\nOh, good. I love being patronised. I had to concede that was probably just my insecurity speaking. \n\nWe had set our usual watch rotation, waking one or the other of the Grey Wardens every couple of hours, and the night passed peacefully. In the morning, I had finally managed to get comfortable in my bedroll on the hard ground, and cursed loudly at Sten as he tromped through the camp waking everyone before it was even fully light out. Leliana had already gone out to start breakfast, and I was seriously considering going back to sleep when the tent collapsed on me. I shouted, and heard Aedan snicker and then rapid footsteps as he ran off. \n\n\"I'll get you back, you bastard!\" \n\n\"My parents were married!\" was his only reply, and against my will I found myself laughing, and alert. I'd never have been able to fall back asleep even if I wasn't being suffocated by a tent. \n\nI crawled out of my bedroll, scooting out of the tent and raising the tent pole again so I could don my armour and pack my gear. That done, I packed Leliana's as well, then folded the tent up and started towards Bodahn's wagon with both packs and the tent. I only made it a few paces before Alistair rushed over to help me. It occurred to me that I had never thanked him for all the times he'd helped me when I wasn't strong enough to carry my own things or keep up. I smiled up at him, brilliantly, as he put everything on Bodahn's wagon, then grabbed his shoulder, going up on tiptoes to kiss his cheek. He blushed, as did I, and I ruthlessly suppressed my libido as it perked up on contact. That meditation just might come in handy for more than templar abilities. \n\nWe got underway, heading further east, moving briskly but not so much as to leave us out of breath or sore the next day. My armour came with boots, but they were neither comfortable nor well-fitting, so I stuck with my own leather hiking boots. We'd been walking maybe two hours when I noticed both Alistair and Aedan start looking uncomfortable. Aedan's eyes began darting around, and Alistair actually unslung his shield from his back. The rest of us picked up on their obvious agitation, and began loosening weapons ourselves. \n\n\"Darkspawn?\" I finally asked. \n\nAedan nodded. \"Following us, I think.\" \n\nMorrigan must have noticed us faltering, or perhaps she saw the darkspawn themselves. The black bird circled around us twice, then turned off the road, and we assumed she meant for us to follow her. We did, climbing down off the road and into some heavy brush. We pushed through, hurrying, until we found Morrigan the woman standing in a clearing, partially surrounded by high boulders. We quickly boosted Leliana and Wynne up to stand on one of the tall rocks, and then I followed them, scrambling up as Alistair heaved me up by my rear end. There was no time to be embarrassed at the accidental intimacy, as Aedan was hissing at us to hurry, and he, Sten, and Alistair stood shoulder-to-shoulder in front of the rocks we perched on with Prince growling at their feet. I couldn't see Morrigan, until I noticed one unnatural branch sticking out from between the trees, and realised she was in spider form, hiding. \n\nI sat, huddled into a ball, daggers still in sheaths in case I needed to climb down. Leliana knocked an arrow, and Wynne muttered something; at the same time that I could feel that crackling magical aura, I suddenly could sort of see a vague shimmering wall in front of the three of us. We waited just a few moments, and then the first of the darkspawn approached through the trees. Leliana's bow twanged, and the beast went down, an arrow protruding from its eye. Our elation was short lived, however, as a large group of the creatures stepped up into the space where he had been standing, and one of them returned fire. The arrow bounced off the invisible wall, landing harmlessly below us, but if the wall hadn't been there, it would have skewered Leliana neatly. We both flinched involuntarily, but as Leliana recovered, the rest of the group were in the fray. The rocks kept those on the ground from being surrounded, and it was almost hypnotic to watch Sten swing, Alistair bash, and Aedan slash at the attacking horde. \n\nJust as the main group of darkspawn engaged, Morrigan-spider inched out from between the trees, locking massive fangs onto the nearest darkspawn and ripping its head from its shoulders. Prince erupted from between two of the creatures, biting into the axe-wielding arm of a hurlock, preventing a lethal swing at Aedan, instead driving the axe into the flank of the genlock beside it. Leliana focused on picking off the archers, and Wynne was constantly chanting, sparks of magical energy flowing into those in the scrum, and every now and then freezing one of the beasts to be shattered by Alistair or Sten. It looked like a well-oiled killing machine, and I was impressed at the same time that I wanted to cry. \n\nWith no major injuries, my companions quickly finished off the last of the group. Sudden silence descended, and I realised I'd somehow blocked out the shouting, screaming, grunting, and clashing during the battle. Leliana lithely sprang down from the rocks, and Sten assisted Wynne gratefully as she healed a small wound under his arm. Alistair offered to catch me, but I declined, not wanting to repeat my brief humiliation from the climb up. Alistair's hand on my ass isn't going to improve my mental state at all. He shrugged and wandered away, as I turned and slithered down the rock, bracing myself between it and its neighbour. I landed upright, possibly even gracefully, and took half a dozen steps across the clearing when I heard rustling behind me, and then a shriek as a hurlock rose from the battlefield, apparently not quite dead. I had spun as soon as I heard the rustling, drawing my daggers almost reflexively. I might turn into a fighter yet - my first instinct isn't to scream and swoon, yay me! I was face to face with an enormous, pale, terrifying creature with blood running down its face, which smelled worse than a landfill. \n\nI waited for a mere moment, and the hurlock lumbered forward. I vaguely heard shouting from my friends behind me, but I couldn't spare the time to actually listen to what they said. I crouched slightly, expecting the disarmed darkspawn to throw itself on me, and was completely unprepared as it angled slightly past me instead, aiming for the rest of the group. I turned with it as it passed, and slashed out with the dagger in my left hand, accidentally burying it in the hurlock's back. It staggered and went down again, yanking the dagger from my hand, and then I saw a sword slash down, and looked up to see Alistair with a grim frown decapitate it. He reached down to remove my dagger, wiping it off on a scrap of cloth worn by the recently dead hurlock, and then handed it to me pommel first. I took it, stunned, and sheathed both of my weapons automatically. \n\n\"You okay?\" \n\n\"I...yeah, I guess.\" My vision swam for a moment, and my legs didn't want to move - Aedan rushed up, wrapping his arm around my waist, dragging me off a ways from the pile of corpses. When we were all far enough away that we could no longer smell them, he let me sink to the ground and then sat beside me, holding my hand. \n\nThe group all looked somewhat grim, but most of them only showed concern for me. I guessed they'd all been in combat enough times that it wasn't anything big for them, but it still shook me up every time. While Sten and Alistair piled corpses, Morrigan burned them, and Wynne insisted on checking me out, though it seemed that, again, I was the only one not at risk. We talked about that again - no one had ever heard of a darkspawn ignoring the closest target like that. We discussed the weirdness for a few minutes until an impatient Morrigan cut in. \n\n\"Since no one has any useful information to add to this subject, perhaps we'd best be moving on? Or are we hoping to test it again by waiting for another group of darkspawn to come by?\" \n\nWe had to concede the point, and I picked myself up, giving myself a mental pep talk to get myself moving again. No one wanted to be anywhere near those corpses come nightfall, so we pushed ourselves hard for the remainder of the day, finally arriving at a campsite Bodahn knew of just after nightfall. We set up as usual, then I spent some time working with Alistair on my meditation. I did less well than I had the day before - images of darkspawn kept breaking my concentration. Finally frustrated, I gave up, promising to try again the next day. \n\nI slept poorly, waking from bad dreams several times. I finally crawled out to the fire to let Leliana get some better rest, but found both Aedan and Alistair there before me. Both looked haggard and somewhat glum, and I took an educated guess at what was wrong. \n\n\"Grey Warden nightmares?\" They both nodded. \"I'm glad I don't get those. I have enough trouble sleeping. Who's on watch?\" \n\n\"Sten, technically, though I sent him to bed. If we are going to be up anyway, no point in him missing out on some sleep.\" \n\n\"Tell you what. I can be groggy tomorrow, since I'm not the one fighting. You guys can't. Why don't you both bring blankets out here and curl up by the fire, see if you can sleep again.\" It took a bit more cajoling, but I finally managed to mother them both into lying down, one on either side of me. I kept the fire at a slow burn, and as I expected, soon saw both chests rising and falling regularly in the rhythm of sleep. Amazing how knowing someone is watching over you makes sleep possible even in the worst circumstances. I found myself humming songs from home, softly, under my breath. \n\nAedan looked younger, asleep. I suppose I shouldn't have been surprised, but there were almost imperceptible lines of pain on his face that smoothed out when he slept. I fought the urge to ruffle his hair. I had a different urge with Alistair - the former templar's lips curled up in a smile that looked positively lascivious, and I wondered what he was dreaming now. He was almost painfully good looking, and I wanted him to look at me with that smile. I forced myself to turn away; I was going to get myself in trouble if I continued staring. \n\nI was still there, still humming, a couple of hours later when the sun started to rise and Leliana crawled out of our tent. We crept off to the side a bit and she asked me what I was humming. I realised it was Billy Joel's Lullaby, and ended up being coerced into singing it softly for Leliana. I could see her concentrating, trying to remember it as I sang: \n\nGoodnight my angel time to close your eyes, \n\nAnd save these questions for another day. \n\nI think I know what you've been asking me. \n\nI think you know what I've been trying to say. \n\nI promised I would never leave you, \n\nAnd you should always know, \n\nWherever you may go, no matter where you are, \n\nI never will be far away. \n\nGoodnight my angel, now it's time to sleep, \n\nAnd still so many things I want to say. \n\nRemember all the songs you sang for me, \n\nWhen we went sailing on an emerald bay? \n\nAnd like a boat out on the ocean, \n\nI'm rocking you to sleep. \n\nThe water's dark and deep. Inside this ancient heart \n\nYou'll always be a part of me. \n\nGoodnight my angel now it's time to dream, \n\nAnd dream how wonderful your life will be. \n\nSomeday your child may cry and if you sing this lullaby, \n\nThen in your heart there will always be a part of me. ",
        "Someday we'll all be gone, \n\nBut lullabies go on and on. \n\nThey never die; \n\nThat's how you and I will be. \n\nI sang it a couple of times for her, and knew she'd remember it. So there, Billy Joel, now two different worlds know your music. I could tell Leliana wanted to pester me for more songs, but I convinced her I would sing for her later - people in camp were starting to wake up. She didn't understand, I knew, but there was no way I was going to sing in front of Alistair. Especially given that most of the songs I knew well enough to sing were love songs. Even if Leliana did call my voice 'pretty'. Pretty awful is more like it. \n\nWe ate and got underway, and for the most part the day was peaceful. Once Aedan and Alistair sensed a group of darkspawn in the distance, but they must not have sensed us and went in a different direction. During the evening I worked on my meditation, and was able to keep my head mostly clear for close to an hour, which Alistair declared to be good progress. I slept better as well, and felt much improved the next morning. We walked for a couple more days like that, managing to avoid the occasional darkspawn group the Grey Wardens could feel in the distance, when we came upon the merchant that I recalled from the game, who gave us Shale's control rod after a short conversation. It wasn't where my memory of Sulcher's Pass should be on the map, but I guessed the game just picked a location at random. Unless I wanted to believe the 'butterfly effect', which meant that somehow my arrival in Ferelden caused his mule ran away somewhere different than BioWare expected...my brain is going to explode. Stop thinking, Sierra. \n\nWe learned that Honnleath was only a couple of days away, a day and a half further along the imperial highway, then a left turn and a quick jaunt off the main road. Even Sten didn't complain too much about us going out of our way. We kept walking, while I told everyone about the darkspawn and the demon we would encounter in Honnleath. And warned them about Shale - much like her name, I recalled her being somewhat abrasive, though I'd only played that DLC once. \n\nBodahn elected to stay near the highway, uncertain what the roads would be like leading to Honnleath. We all shouldered our packs, or at least tried to - Alistair took mine without a word, slung it alongside his own, and headed off. I couldn't decide whether to be grateful or angry. But in truth I knew I couldn't keep up well while carrying it so I let it slide. \n\nAs we approached Honnleath, Aedan and Alistair starting sensing the darkspawn, and we all dropped our packs and readied ourselves to fight. They wanted me to stay back, but I figured with my luck they'd just jump me from behind. I ended up being tucked in the middle, behind Alistair and Sten, but in front of the mages and Aedan. Leliana was beside me, bow drawn. We came upon the first group, and the distraction we provided allowed a couple of villagers who'd been fighting for their lives to escape. The darkspawn turned on us instead, and we engaged them as we could. \n\nAs before, the darkspawn seemed to ignore me entirely. They swarmed us, managing to separate us from each other, each person being attacked by at least one or two - except me. Which meant that I was able to dance around, stabbing and slashing at their unprotected backs with impunity. I reached around to slit the throat of one who was about to hack at Wynne with a large rusty sword, then dashed over to an archer who was taking aim at Leliana and stabbed it in the belly. Not one of them looked at me until after I struck, and I felt weirdly, wildly invincible. \n\nI was on my way back to the main group to stab at yet another hurlock when Aedan slashed across its abdomen. It flailed wildly, with a weapon that essentially looked like a crowbar someone had filed to a point, and managed to slice into my forearm, ripping apart the flimsy leather bracer I wore and across my flesh. So much for invincible. It felt like a hot poker as it entered, and I shrieked, dropping my dagger and backing away as Aedan finished the creature off. It was the last, and everyone did one last turn to ensure they were all dead when Wynne spotted me cradling my arm. \n\nShe shouted, and everyone ran over, the sudden flurry of activity dizzying. Sten and Morrigan just stood, looking impassive, but Aedan grabbed me around the waist and lowered me to sit. Leliana fumbled out a flask that smelled vaguely like tequila, and as Wynne held out my arm, she poured some of the sticky substance onto it. Alistair used my dropped dagger to cut away my bracer while I hissed in pain as the alcohol burned through the laceration. \n\n\"Son of a bitch, Leli, that hurts. Wynne? Can't you just heal it?\" \n\n\"Not until we make sure no darkspawn blood got into it, dear. This should do it. One moment.\" \n\nI felt the magical aura rise as Wynne chanted something and passed her hand over the injury which had started pouring out blood again in objection to the alcohol. It was strange, really, as I'd never seen much magical healing up close - I felt my arm heat, and start to itch, and then the skin slowly came together, looking like a slow motion rewind of the injury itself. When she was done, Leliana poured water over my arm, and I saw a very slight, pale scar running across my forearm, the only memento I would have of the injury. I smiled around at everyone in gratitude, and promptly passed out. \n\nI woke only a few moments later, head cradled in Aedan's lap, while everyone else looted corpses or dragged them into a pile to be torched later. \n\n\"There you are, Sierra. I thought you might disappear on us for a minute.\" \n\n\"I sort of thought I had, actually.\" I coughed, and Aedan helped me sit then handed me a water skin. The water was blissfully cool and refreshing. \"I fainted?\" \n\n\"It's quite common when healed with magic. Especially the first few times.\" \n\n\"That's embarrassing. They don't mention that in the g...uh, performance.\" \n\n\"Yeah it strikes me as the sort of detail that doesn't sit well with audiences. How are you feeling now?\" \n\n\"Fine, actually.\" My stomach growled loudly, and I blushed. \"Hungry, apparently.\" \n\nAedan laughed. \"Also normal. The energy has to come from somewhere.\" \n\n\"I wish it could have waited until we were somewhere that smelled better!\" \n\nAedan fished through a nearby pack and produced a hunk of dry bread and some cheese. I stuffed it into my mouth, completely ignoring my own objection to eating in the middle of the carnage. Alistair passed by lugging a hurlock corpse and gave me the most ridiculously pathetic look. I couldn't stand the puppy eyes, and finally offered him the last bite of my cheese. He smiled beatifically, then continued lugging the corpse. \n\nI looked away, muttering, and heard Aedan laugh at my pink cheeks. \n\n\"It's not fair!\" \n\n\"What's not, dear sister?\" \n\n\"No one should look that gorgeous while covered in darkspawn blood.\" \n\n\"I'll give you he's got a nice smile.\" He grinned at me and I giggled. If I'd needed any confirmation what gender Aedan preferred in a sexual partner, the once-over he gave Alistair from behind clinched it for me. \n\nI leaned in and whispered conspiratorially. \"More than his smile is nice, believe me.\" \n\n\"They covered that in the performance?\" \n\n\"Uh, well...sort of, actually, but that's not what I meant. I saw him. Bathing.\" \n\n\"Ah, that explains your severe embarrassment that day at the stream.\" \n\n\"Yeah, well, if you had accidentally wandered in on that, you'd have been a little embarrassed too.\" \n\n\"Rippling muscles with water streaming off them?\" \n\n\"Mouth-wateringly so, yes.\" We both giggled some more, until we heard Morrigan shout. \n\n\"If the two of you can giggle together, then obviously Sierra has recovered. Should we not continue?\" \n\nI heaved myself up, now short one bracer, and recovered my daggers. We regrouped and headed to where I though Shale would be standing. She was much, much larger than I would have predicted based on the game. She was a head taller than Sten, and wider across the shoulders than Alistair in full plate. I couldn't tell if she had any enhancement crystals on her, which I supposed meant she didn't. Aedan stepped up to her, and holding the control rod, muttered the real activation phrase - \"Dulen Harn\". For a second, nothing happened, and then there was a groaning, trembling sound as rock ground against more rock and Shale slowly animated. \n\nI left Aedan to have the conversation with Shale - she needed to decide to accompany him on her own, and I wasn't likely to improve that. Once she decided to join us, we were all introduced. I suppressed my giggles at everyone's reactions to her calling them 'it'. I briefly wondered what my nickname would end up as - the ones I could think of for the other party members were not exactly complementary. Elder Mage, Swamp Witch, Drunken Dwarf, Painted Elf...this ought to be good. \n\nFinally convinced, we were able to have her accompany us into Wilhelm's basement to rescue the rest of the townsfolk and the poor little girl with the demon. I managed not to get myself stabbed accidentally, we freed everyone, and the demon bitch was dead. By the time we returned Amalia to her family, I was completely exhausted. We had decided not to camp within Honnleath in case more darkspawn showed up, but I wasn't certain I'd be able to make it very far. In the end, as we walked and I began to flag, Sten offered to throw me over his shoulder, which Aedan loudly refused, while Wynne suggested that I ride Shale, to which the golem vehemently objected. I sank to the ground while they argued, too exhausted to care, and Alistair walked over, politely asked Sten to hold our packs, and picked me up. I would have refused, if I'd had enough energy; as it was, I fell asleep cradled in his arms. \n\nHe woke me, briefly, once we finally made camp, to encourage me to eat again, and I could barely even remember stuffing my mouth before falling asleep again where I sat. When I woke, it was morning, and I wasn't the only curled up body - I guessed no one wanted to bother putting up tents, and since it was a cloudless night, we all just slept huddled in blankets. I sat up, quietly so as not to disturb anyone else, and nearly jumped out of my skin as I turned the other way and found Alistair, on watch, sitting two feet away and staring at me. \n\n\"Gah! Don't scare me like that.\" \n\nHis face remained serious. \"No, Sierra, you scared us yesterday. Don't. Do that. Again.\" Without another word, or giving me a chance to respond, he rose, silently, and walked away, leaving me with my mouth agape. What the hell? \n\nHe started shouting, waking the rest of the group, and soon everyone was blearily downing a breakfast of dry bread and some sort of jerky. I'd discovered that if I didn't know what the jerky was made from, I didn't feel like throwing up. My group had responded positively to my 'don't ask, don't tell' policy, though I don't think any of them had the slightest clue why. I'm a wussy modern city girl. So sue me. I felt back to normal after having a good rest, although I was mortified at having been carried by Alistair. He claimed I was light, so it wasn't a problem, and I knew he was incredibly strong, but...I had no other word for it than 'mortified'. \n\nWe made good time and reached Bodahn mid-morning, then turned north along the Imperial highway. Assuming the map to be close to accurate, we had another week of travel to reach the turn-off to Haven. Alistair stored my pack for me on Bodahn's wagon, reminding me yet again how embarrassed I was to be so...feeble. \n\nWhich is exactly the nickname that Shale had taken to using for me - the 'feeble human'. I suppose I shouldn't have been surprised, but it didn't endear her to me any. Although the endless tirades about pigeons were somewhat amusing, at least at first, and I knew most of what she said was bluster, she was annoying. I liked Morrigan more, which was both frightening and funny. Shale and Sten seemed to get along famously, though, which didn't surprise me in the least. So far, no one had told Shale about my foreknowledge thing, and I knew it would have to come eventually, but I didn't look forward to prolonged private conversations with her. \n\nAs it was, the subject was introduced the hard way - I was walking along, tired but managing, and became suddenly dizzy. She was staring right at me as I disappeared."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-21-22"
}