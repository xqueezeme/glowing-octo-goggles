{
    "title": "The Seeker and the Source Pt. 02",
    "pages": [
        "*****A word of CAUTION there are strong non consensual themes in this part (chapter?)\n\nIf you do not feel comfortable reading about rape, battery and sexual assault please skip this. \n\nAll characters are over the age of 18 \n\nAuthor's Note:\n\nWow, I'm pleased as punch. I wanted to thank everyone for all the really nice comments. It's definitely been a journey writing this.\n\nYou know one thing I've learned while writing this is that I can't write sex scenes worth crap. You would think, that I would be able to considering I've been with my partner for 3 years and in general have had sex? I'm going to go ahead and just blame my autism. \n\nI'm currently looking for editors to help me with the editing, solo editing is not easy and this story has been through so many revisions a fresh set of eyes looking for cohesion would be a god send. So if you're willing to edit and read my crappy writing feel free to reach out!\n\nNow if only I could get someone to write my sex scenes hahaha...\n\nOOOOH also! Let me know if you guys like long parts like this or shorter parts like the first one. More pages? less pages? Less filler?\n\nAnyways without further ado\n\n\n\n########\n\nAs soon as the door closed behind him. Aurelia sat feeling flustered by the exchange. Binding what does he mean by binding? His words drummed through her brain. This prince had been chasing her down, all her life. The reason she was forced into hiding from birth. Her supposed 'Seeker' if she were to believe his version of the prophecy. Even if he was telling the truth there was no way she would become his mate that's for sure.\n\nShe furrowed her brows in disgust at herself, having sat in his lap and drank water out of his hands. She felt angry with herself having felt comforted by embrace, despite knowing the amount of pain he had caused her people. She drew her knees to her chest and focused on holding back the tears that threatened her eyes at the bitter memories. \n\nShe heard the door unlock, as a small older woman came toddling in with a tray. She fixed Aurelia a look of concern as soon as she saw the state she was in. \n\nShe was a Halfling judging by the size. Halflings lived in remote villages away from humans and Elves, for the most part they were happy peaceful people that didn't disturb others. \n\nShe flew into a frenzy asking if she was okay gesturing at the bruises and scratches that lined the exposed part of her body. Part of Aurelia wanted to roll over and laugh at the worried features contorted on the tiny woman's face but at the same time she realized she really must have looked awful. \n\nIn truth, her body probably had seen better days, her arms had a long gash gained during a brief skirmish with an elf that night. Her torso still held the deep purple bruise not to mention the newly added red marks compliments of his royal ass, during their water fiasco, that she was certain would leave a few bruises tomorrow. Aurelia did her best to reassure the old woman who introduced herself as Maesys.\n\nShe glanced over at the tray of food the woman had brought in with her, the smell of herbs, meats and spices filled her nose.\n\nThe pretty silver tray held a bowl of meat and vegetable stew, next to that were two slices of freshly baked bread still steaming like it had just come out of the oven.  Food, I need to keep up my strength if I am going to find a way out of here.  Aurelia graciously accepted the tray and set upon devouring its contents. \n\nSighing to herself she began asking her new friend about where she was in order to ascertain information about the area. Her brain began filling with ideas and strategies on how exactly she was going to escape from this place. \n\nUnfortunately, the woman seemed hesitant about divulging such information, Aurelia didn't blame her, assuming the Prince was as evil as his reputation claimed. If Maesys were caught aiding her escape who knows what he would do to her. \n\n\"I am just happy to see you're doing better. I was so worried when they first brought you in.\" Maesys chatted pleasantly.\n\n\"How long have I been out for?\" she asked curiously.\n\n\"It's been about two days since they brought you in dearie.\"\n\n\"How have I been asleep for that long?\" Aurelia exclaimed. \"It feels like I've only been asleep for a night.\"\n\n\"Stasis can do that to you\" Maesys replied, but sensing the girl in front of her hadn't a clue on what she was talking about she continued to explain.\n\n\"Stasis is an elven incantation that a few of the high ranking Elves can perform. It's usually used as a means to put those who are injured to sleep. I'm not certain how it works exactly but I do know you could go almost a week without eating and not feel a thing. I've seen a few commanders around the post using it.\" She offered her a weak smile of sympathy that showed that there was really not much more she could say beyond that.\n\n### \n\nMaesys proved to be an excellent companion, after her initial wariness they slipped into easy conversation like they were old friends. Aurelia enjoyed the motherly tone and attitude of the halfling. She found that Maesys had been serving at the particular outpost for almost 25 years. After finishing their conversation and the woman toddled out the door after giving her a warm hug, Aurelia set about making more affirmative plans. \n\nShe walked over to the door and closed her eyes, a yellow glow of aura danced across her skin as she studied the hallway beyond. While she could not see colors she could make out shapes and heartbeats of guards standing outside to watch her.\n\nAurelia rubbed her head and sighed, leaning back from the door to collect her thoughts. Two men were posted at her door and one that had walked by the hallway, to the right of that hallway is a door that exists outside. The reconnaissance played out through her mind. There were bars on the only window in the room she was in but looking out she could see that she was ground level, a forest line temptingly close to her but there was no way to know how many more soldiers she would run into past the three that she had already accounted for.\n\nI'll just have to bide my time and wait for an opening.\n\nAs she thought this she rubbed her head trying to think through the mental fog that hung in her head like thick condensation in the early morning. This had been one of her reasons for not using her abilities initially.\n\nAs a Source, her power allowed her to pull off feats of magic that would take even the most talented wizard decades to master. Normally, magical talent comes from the learning of spells and rituals. \n\nHer magic came directly from her very being with divine blood running through her veins, she didn't need the written rituals and incantations or the hours of study needed to produce the effects she wanted. \n\nShe wasn't entirely sure how her abilities worked, save for the few feats she learned on her own. From what she could tell it required some focus, and strong feelings.\n\nHowever, despite her divine blood she still had a human body with all its caveats. She could perform some strong acts of magic as a Source but, the difficulty of what she wanted to do and the length of time doing it often resulted in the fog. Unfortunately, she also lacked the strength to pull off anything particularly incredible.\n\n####\n\nThe sun outside her window was setting the next day when she heard a knock at her door. The day had been mindlessly dull, she paced her room up and down, alternating between walking and jogging. When she tired of that she laid in bed and stared at the ceiling, plotting her escape, listening to the comings and goings of servants and guards. Was it three people? Four? Did the same person come back? \n\nShe briefly debated using her powers to scope this out but decided against it, not wanting to waste the energy. Hour after monotonous hour passed with nothing done. Maybe that was his plan. To bore her to death.\n\nA knock came at the door that broke her from her private reverie. \n\nThe door unlocked as a familiar friendly face came waddling in to greet her. Maesys carried a silver tray with plates set on it. \n\n\"Hello dearie, just coming in with some supper, thought you might be hungry\"\n\nAurelia couldn't help the smile that spread on her face, glad to finally have someone to talk to and break the monotony of her prison. The tray she carried a bowl that was unlike something Aurelia had ever seen in her life. The bowl was made of solid rose quartz with intricately carved designs surrounding it. The spoon was similarly carved to match the exquisite dish. Elves truly lived up to their reputation for craftsmanship. The bowl alone was worth a month's worth of rations for her camp. Inside the bowl was more soup with the same bread that was served to her earlier.\n\n\"I'm sorry about the lack of variation, his highness doesn't quite feel comfortable giving you anything but...\"\n\nAurelia shook her head grateful to be fed at all.\n\nAs Aurelia ate her dinner, she asked Maesys all sorts of questions to get to know her more. She enjoyed listening to the old woman's tales about the halfling village she grew up in. Their life seemed idyllic, with festivals almost every other day. Halflings loved any excuse to celebrate life. \n\nAs she went on about her life Aurelia's eyes closed, picturing life in a peaceful halfling village. \n\nMaesys in turn asked about Aurelia's life growing up. Stories about her strange upbringing similarly fascinated the kindly halfling.\n\n\"Ummm I was taken at a very young age, from my parents to protect them. So I don't exactly remember them\" she furrowed her brow trying to think of what information she could be safe telling this woman.\n\n\"I was raised by the Cyrrhod mages guild, they moved me often, along with a contingent of rangers who provided more protection. I honestly, never got to stay in one place long enough to get to know my surroundings well.\"\n\nMaesys nodded her head in sad understanding. Aurelia bristled at this, though she appreciated this woman's sympathy she didn't need to be pitied. She was happiest moving outdoors. Over time, the camp grew in size as followers found or brought with them husbands and wives. Kids of all ages ran around them despite the threat of the war. \n\nThat was the way of humans though, they persevered in the face of adversity, in the face of danger. The camp was her kin, and they collectively had raised her. \n\nEspecially Augustes, her older mentor. He was patient, encouraging and while he was never afraid to be strict with her he still treated her with the loving tenderness that a parent would give to a child. \n\nMaesys quickly got up and excused herself briefly. Aurelia watched curiously as the halfling slipped out the door and quickly brought back a large tub of warm water. Aurelia eyes widened in surprise at the strength of the halfling. The tub while small was still fairly sizable and was full to the brim with warm steaming water. \n\nInstructing Aurelia to undress, Maesys reached into her apron pocket and pulled out a small cake of soap. \n\nThe woman helped Aurelia into the tub and proceeded to gently bathe her. Aurelia let out a sigh of relief, relaxing, inhaling the sweet scent of juniper berries and orange blossom. \n\nAs she sat in the tub Aurelia chanced a question to the halfling. \n\n\"I don't suppose you have any books I could borrow?\" \n\n\"Or sewing, I can do some mending for you if you'd like, I'm skilled with a needle\" she offered when Maesys shook her head to her first question. \n\nShe would have preferred a book to read but she was desperate for something, anything to do. \n\nThis too prompted another shake of Maesys head.\n\n\"However, I'll see what I can do\" Said Maesys when she saw the crestfallen face of her charge. \n\nAfter her bath the halfling proceeded to rub a healing salve onto the wounds on Aurelia's body, taking extra special care of the large bruise on Aurelia's stomach. \n\nThe soft soothing massage made Aurelia sleepy as she pulled on her tunic and Maesys tucked her into bed. It was nice to, for the first time, be inside a warm building, enjoy a hot bath, and lie in a soft bed. It made it feel like, for just a moment, everything was okay and soon Aurelia drifted off into a sweet dreamless sleep. \n\n###\n\nThe prince was in the middle of going over supply reports with a few of his men when he spied the halfling servant from the corner of his eye. Maesys, that's what her name was. He had hoped she would help his Source feel more comfortable during her stay here. So far from what he could see, the two had become fast friends. So why was she here? \n\nHe gestured for her forward. \n\nIt can often be difficult to approach him, especially if he was in a mood. Thankfully he had spent his day rather delightfully thinking about a beautiful luscious human captive he had in the military outpost they were currently occupying. No other woman had ever taken up his thoughts as much as she had in the last two days. \n\nNot that him being in a mood should have prevented her from coming to him with her troubles. While he did not personally command this outpost, he certainly wanted his subjects to approach him with whatever troubled them. Especially when said subject was in charge of easing their captive into her new life. \n\n\"Your highness, forgive me but just what do you intend to do with the girl? You should see the state I found her in, covered in bruises and cuts. Shame on you if this is how you treat your guests.\" Maesys said, taking the tone of a concerned mother. \n\n\"That is none of your business, your job is to see to her care\" he replied curtly, feeling unnerved by the way this halfling woman was speaking to him. \n\n\"I have lived many moons boy and you don't scare me. Now you listen closely, if her care is my job then I will tell you this right now. You cannot keep a person locked in room for hours at a time with nothing to do. That's cruelty beyond all measure, I don't care if she's your prisoner.\" She said with her hands on her hips. She'd served at this outpost for so long there was little the oversized Elves could do to scare her. To her the prince was just another commander that could do with a little scolding.\n\nHe sighed and ran a hand through his hair. The Halfling, in the way that she spoke to him, was somehow more terrifying then some of his best lieutenants and that was saying something. He was so busy that day that it honestly hadn't crossed his mind she was left with nothing to do all day. There was his mother to contend with, informing her that he was delaying his trip back through spectral communication had left a sour taste in his mouth. \n\nSure she encouraged his feelings toward the Source, but she also did not hesitate to remind him of his duty to his people. He knew the underlying meaning behind her words. The Quene was a formidable force to reckon with, and while she gave him a certain amount of deference as her heir, her patience was wearing thin. In the end he had managed to logically convince her that waiting for the arrival of his cousin so that they could travel in a larger force would provide much needed protection. \n\nHe allowed his mind to drift back to the matter at hand. So the girl was bored eh? Now he had to see to it that she didn't use her boredom to get herself into trouble.\n\nThis was good though, at least she hadn't tried to take her own life. She wasn't just numbly waiting for the end to come. She was bored, simple as that. The corners of his lips lifted into a smile as her request gave him an idea. He reassured the halfling that he would see that she was given books to read.\n\n###\n\nAurelia woke up in the morning and stretched. She looked down to examine herself pleased that the salve had reduced the look of the bruise on her stomach. She frowned however when she realized she was naked again. Someone came in and removed her shirt last night. She looked to the side of her bed, a clean tunic laid folded neatly on the table. Aurelia glared at the offending tunic and knew which princely ass planted it there. She ripped it angrily from the table and pulled it over her head. \n\nAs she did this she noticed a book fall off. She crept over and peered at the tome. The Maiden Fair and Other Fairy Tales. She wanted to smile at the gesture but knew better than to let him easily curry favour with her. Nevertheless she appreciated the distraction of a book. \n\nShe sat back on a chair and opened the book to read.\n\n###\n\nSometime after supper as Maesys was packing up the dishes the prince came in. Maesys dipped into a quick clumsy curtsy that almost made Aurelia giggle as the halfling teetered out of the room. Leaving her alone with him. \n\n\"How are you? Are things to your liking?\" He asked his face impassive, his stoic, royal features not betraying his emotion. His hair was tied behind him exposing his long sharp tipped Elf ears. A stray strand fell in front of his face that should have looked out of place on his perfect face and yet he somehow made it look intentional. \n\n\"You mean for a prison cell Elf? Do you want me to crawl to your feet and thank you for treating me so well? I'm sorry if I'm not grateful but I'm used to having a little more freedom Elf\" she spat. \n\nHe cocked an eyebrow as if he were amused by her outburst, while his face managed to remain emotionless. Ignoring her question he gestured at the book \n\n\"Can you read? I wasn't sure if you could read or not when I got you that book.\" \n\nAurelia paused unsure how to respond. She wasn't quite expecting such a casual question. She was so certain he would have retaliated with violence. Or at the very least that he would have admonished her for her insolence.\n\n\"Yes I can read\" The mages taught me \n\n\"Sorry, it is to my understanding that there's a large population of humans that are illiterate. Elves are taught to read both Elvish and Common from an early age, unlike you humans.\" He paused registering that he might have offended her with that statement. He paused awkwardly, unsure of how to continue. \n\nAurelia rolled her eyes. There it was, the famed Elven conceit, the attitude that their race was better than every other race. The divine blood (albeit small) that runs through their veins giving them this preconceived notion that they ought to be rulers of the realm. \n\n\"Do you like fairy-tales?\" he asked feeling like a love stricken youth trying to engage a female in conversation.\n\n\"No I hate them\" she lied poorly. \"At least with my dagger I can practice burying it in your face.\" She snarled referring to the dagger he had taken from her back in the forest. Her voice was coated in venom as she spouted this. She didn't care if he hit her for it.\n\nHe let out a loud breath, his face impassive, ignoring her obvious snipes at him. His hand reached to his side and withdrew her dagger from his side. He strode toward her but instead of striking her, he simply placed the dagger on the table. \n\n\"I took it away because I didn't want you harming yourself when you woke up especially since you asked me to kill you myself. Now that you seem to have no interest in taking your own life, you may have it back\" he stated simply. \n\n\"However,\" he paused before continuing, \"I would think twice about using that blade against me\"\n\nAurelia paused shocked, unsure of what to make of this gesture. She walked over to the table where he stood and snatched her dagger back. She looked it over in her hand, the simple iron blade, striped of leather stitched around its hilt. \n\nIt felt ironic that he would be worried about her health when he was the one who seemed intent to kill her. She glanced up at him studying his features trying to gauge what his reasons were. Whatever it was he was going to regret giving her weapon back. \n\nGrabbing the blade she na\u00efvely swung up to strike him. \n\nHis hand deftly caught her wrist with too much ease and squeezed, causing Aurelia to yelp and let go of the knife. The knife clattered on the floor and in one fluid motion he swept her out of her chair and into his arms, with her back facing him and held her in his embrace. ",
        "This was the first time Aurelia had been standing next to him, pressed against his chiseled chest just beneath the layer of his tunic. It had just occurred to her just how big the prince was. While she was no giantess herself, she was definitely not short for a human. However, coming up to just about his chest level, she was dwarfed in comparison to the big brute of an elf. This wasn't fair.\n\n\"I did warn you about using that against me veela.\" he murmured in her ear. His mouth found a delicately bit the round of her ear as a hand roamed across her struggling frame to caress her breasts before slipping beneath her tunic to grasp and pinch at a nipple. \n\nAurelia moaned at the shockwave caused by this, her back arched lifting her face up, in unanticipated pleasure. Hating how her body responded to him.\n\n\"Stop that Elf\" Was all she could breathlessly manage in protest as she struggled to regain her composure.\n\n\"I have a name you know.\" he murmured holding her gaze in his deep viridian eyes. He wanted to hear the sound of her melodic voice saying his name. \"Illandriil\"\n\nHis face leaned down suddenly pressing his lips into hers. Holding her back to balance her, he kissed her deeply. She closed her eyes in surprise before closing them as she kissed him back enjoying the feeling of her lips on his, opening her mouth enticingly, letting his tongue sink in and flick across hers. The addicting scent of his skin enveloped her. She moaned against him letting him. His kiss, his tongue felt almost urgent with desire, claiming every inch of her mouth possessively, stealing her breath. He felt perfect against her, something in her body just craved him further. Her mind on the other hand...\n\nShe snapped her jaw down onto his tongue roughly biting him enough to draw blood on his lips. He grunted and pushed her away from him. Aurelia staggered back glaring at him while wiping his blood from her lips. \n\n\"Next time, Elf-,\" She said emphasizing her lack of desire to use his name \"keep your body away from mine.\" \n\nThe prince chuckled mirthlessly, his eyes dangerous and threatening, like a carnivore encircling his prey just before the pounce. Bending down to pick up her dagger he paused deliberately as if debating on killing her right then and there. She glared back at him, defiantly daring him to sink the blade in her. Instead he tossed it roughly downward towards her feet.\n\n\"Next time think twice before trying to raise a blade to me\" and with that he turned and stomped out of her room slamming the door behind him.\n\nAurelia shook her head incredulously, letting out the breath of air that she did not realize she was holding. Even his stomps are graceful.\n\nAlone Aurelia rubbed her lips and tongue trying to get the taste of him off of it. She sank down to the floor, surprised, but frustrated in being alone again in the room. \n\n###\n\nShe woke up the next day finding herself humiliatingly naked again, with more books mysteriously on the table next to a meticulously folded tunic. \n\nA note was placed neatly on top, written in the delicate script that was the prince's handwriting.\n\nUnfortunately most books in my library are in Elvish but I have managed to pull out a few books written in Common, perhaps one of these will be more to your liking.\n\n-I \n\nShe smiled upon reading the note, before resuming a scowl. What was wrong with her? How could she be letting this man effect her like this? He was set on turning her against her people. Yet one look from him sent shivers down her skin.\n\n###\n\nAurelia was feeling more sullen than usual. She had been trapped in this room for days with little to do besides reading, exercising and talking to either Maesys, or the prince when they visited. Maybe it was her imprisonment but the prince was getting to her more than usual this night. \n\n\"Aurelia look at me,\" Illandriil commanded. His face, authoritative and emotionless like he was ordering around one of his men.\n\nAurelia glared at the bowl in front of her willing herself not to follow the simple order. Annoyed at her attitude he reached across the table to roughly grab her chin to look up at him.\n\n\"Elf\" She said that like she was spitting out something disgusting. Her eyes casted downward in defiance.\n\n\"When I tell you to do something I expect you to do it immediately\" He said threateningly\n\nThat's it, she thought as she cracked. She didn't want to obey him, She didn't want to want to see him. She didn't want to want to see him. He was driving her up the wall and in this room there was no escaping him. The intense feelings he stirred in her at every touch, the way he smelled when his lips were pressed against hers. \n\nThe worst part was the more he visited, the more she longed for his visits and hated herself for it. All because some stupid prophecy supposedly said she should. If he was to be believed that is. In all likelihood, this was just a falsehood to turn her against her people. A pawn. That was all she was to him. \n\nShe winced as his fingers dug into her jaw. \n\nWhen her eyes finally met his, his grip on her face relaxed and a thumb brushed her cheek. \n\n\"Stop that,\" Aurelia said, her cheeks flushing at his attention. \n\nHis eyes lowered seductively, as he gazed at her, enjoying the slight pout of her lips.\n\n\"Why? You seem to be enjoying this\" he mused.\n\n\"Don't flatter yourself, Elf\"\n\n\"Oh? Our kiss the other day suggested otherwise\" he said in a suggestive tone.\n\n\"How are your lips anyway? I do hope I didn't leave a mark\" she glowered back, her tone dripped in sarcasm.\n\n\"I have had wounds far worse than that.\" He brushed it off. He paused as if contemplating his words before continuing in his infuriating suggestive tone. \"-besides I'd gladly take another one of your bites if it means a few more minutes of what happened before.\" His mouth twitched up into a cheeky grin.\n\nAurelia flushed remembering how he felt against her skin. He was toying with her. \n\nHe leaned across the table bringing his face so close to hers, she could feel his breath on her lips. Aurelia slowly inhaled trying to remain calm, his breath smelled sweet like ginger and honey. Her spine tingled at his touch. He was tantalizingly close, it felt like she was losing control of herself as her body begged for his touch, even has her mind revolted. \n\n\"Well little one?\"\n\nIt felt like she was fighting against instinct when she snarled and snapped at his mouth. The prince easily dodged this, chuckling at her. He swiftly planted a kiss on her neck pausing briefly to inhale her own sweet scent. He stood up and casually walked towards her. He bent down beside her chair clasping her cheeks into his hands. Smiling at her like he was gazing at a lover as opposed to a prisoner.\n\n\"Biting like an animal doesn't suit you little one\" he murmured gazing into her seething sapphire eyes.\n\n\"FINE THEN, How about this?\" Aurelia exploded glaring at him, she willed mental thorns into his brain, tearing deep into his mind. The pain would have been akin to having your brain torn apart whilst simultaneously being compressed. \n\nA sinister black aura licked across her skin emanating from her body. He gasped falling onto his knees, clutching his head. She didn't care, she wanted him to feel pain, the pain of failing her race, the guilt she felt for dining with the enemy and allowing him to manipulate her emotions. \n\nShe hated using her ability to inflict pain, it went against everything her mentor taught, not to mention the tremendous amount of mental effort it took just to maintain her focus. It always took a large volume of mental energy just to do anything to living beings but in that moment it didn't matter. \n\nHe was doubled over now in pain, his pale blond hair made messy by his desperate hands. She pushed herself not to care, all she wanted to do was make him suffer for as long as she could, hoping it would ease her inner turmoil. She fought hard to fight whatever feelings her body seemed to have for him.\n\nIt couldn't last though. Strained, she felt her abilities ease to a stop, as her dark aura faded away. Her mind, foggy at the strain of using her abilities, her breath, panting like she ran for twenty leagues without break. \n\nHis eyes flashed from anger to looking deeply pained. Despite this, his face quickly resumed a more gentle expression. \n\nHe glided over in two long, graceful steps and yanked her up pulling her down to the bed with him. He forced her between his arms and she growled and fought against him. Instead of retaliating he simply held her facing away from him. Holding her easily with one hand he used the other to stroke her hair gently and hum into her ear. \n\n\"Calm down my angry little human, all I said was that fighting doesn't suit you\" he soothed, blanketing her in his calm aura unbeknownst to her.\n\nShe shuddered in his arms, his voice was soft now, peaceful. Listening to his words was like feeling warm chocolate slide down her throat. She hated herself for letting him soothe her, it shouldn't, what he was doing was fucked up, and yet she found solace in his voice as waves of comfort washed over her. \n\nThe worst part was that her own body was betraying her by responding positively to his hand gently running through her silky locks.\n\n\"I know you're upset because you feel like you've failed all of mankind. Please believe me, you are far better here than in their hands. They would see you die to fulfill their version of the prophecy.\" His words carried a growl as he said this as he thought of the idea of her lying dead on an altar, as her blood drained out her lifeless body. His arms tightened in possessive anger around her small body. \n\nAurelia shook her head, she didn't want to believe him but as she attacked his mind, she sensed his thoughts on the prophecy, knew he wasn't lying to her when they first talked about it. At least, not to his knowledge. A perk for having been in his mind.\n\n\"Trust me, little one, you will feel better once you stop fighting me.\"\n\n\"Elf I-\" Aurelia started in protest but the prince cut her off.\n\n\"I don't like when you call me Elf, you know my name.\"\n\nHer brain swirled with a storm of emotions combined with the thick cloudy fog that left Aurelia unable to decipher what was what. Overwhelmed and exhausted from fighting, Aurelia shifted her head into his crook of his arm.\n\n\"You, don't get to choose what I call you.\" she murmured into it. \n\nHer eyes drooped as her body gave out from exhaustion. If he responded to her comment she would never know. At this point she felt too tired to keep fighting his hold. Allowing his body to provide her with the only comfort she had known in days. Her eyes grew so heavy that she gave in and slept wrapped up in his embrace.\n\n###\n\nAurelia woke up in the morning, slowly blinking away sleep, she gazed at the sunshine streaming in through the barred window. It took her a moment to remember how she had got into bed last night. She reluctantly looked over to the other side of the bed expecting to find the prince's sleeping form. \n\nAlone. She signed feeling a weird pang of sadness in her chest. She cursed under her breath for letting herself get close to the prince like that. Manipulating her emotions to suit him. Or was it the prophecy? It was hard to tell, but if their fates were entwined then it would be what influenced her feelings for him. Did that even matter though? The feelings were feelings and they felt real to her regardless of influence. \n\nShe sat up in bed and stretched noticing that she was naked, again. Aurelia rolled her eyes. This was becoming tiring.\n\nShe got out of bed and stalked toward the table. Reaching for the same folded tunic, cursing herself for letting him undress her as she slept. \n\nShe wanted to throw the prophecy back in his face. She would have told him it didn't matter even if he was telling the truth. Just because he had technically rescued her from being a walking sacrifice doesn't mean she was going to suddenly bend over and let him bind himself to her. Whatever binding even was.\n\nAurelia thought back to the conversation they had about the prophecy. His words echoed in her head. \n\n'On your twentieth year, if the humans sacrifice you back to the gods, your blood will aid human victory\n\nWhy does the prophecy say that the humans will sacrifice me if I am a Source? \n\nThe feeling of fear tingled through her spine. They were going to kill me. They were raising me in the dark.  Her stomach balled within and a deep sense a betrayal clustered within her.  They were my family! she screamed in her head. Frustrated and hurt. She tried to picture her mentor, stern but loving, bringing her up the steps of the temple of Orris. Orris was the ruler of the gods, the serpent headed deity who supposedly sired her. \n\nShe wondered at how he would have done it. Would he have knocked me out and laid me on the altar and plunged a knife into my heart? Or would it have been done secretly and slitting my throat while I'm unaware. She shuddered at the thought. \n\nShe had always been told that the Elves wanted to use her abilities but her people were no better. She bitterly thought to herself  I'm being used either way.\n\nShe was now more uncertain about her role in the prophecy than ever before. However, one thing was certain. She had an irresistible will to live. \n\nWithout a doubt the gods had given her the desire to be alive as well as her gift. But there was no way she was going to sit back and let herself be binded to the prince and turned into a pawn for the elves. She chuckled mirthlessly at the irony, of being the subject of a prophecy that involved her dying to save her people, yet being given the need to live.\n\nShe glanced around the room that served as her prison cell contemplation. She would need to escape if she were to prevent being bound to the prince. Even if she were to escape though where would she go? Running back to the humans meant certain eventual death.  Staying here also meant being a prisoner and a pawn. \n\nShe stared out the window and made a vow between her and the gods. I will never be a pawn, I will never let anyone use my powers.  She silently swore that no one will ever hold power over her, that she will be the master of her own fate.\n\nI could live in the forests, alone, far away from anyone who would see to use me. Live a long and happy life amongst animals and no one would ever have the temptation of using my abilities. She smiled at the thought of setting up a small cabin somewhere deep in the heart of the Great Gaddoral Forests. \n\nRunning around barefoot through the leaves and dirt. Drinking in the fresh dew that dripped from the great leaves of the Sicha tree. Free from anyone who would wish to use her to do harm. Free from anyone. Period. A lonely existence she thought sadly. \n\n###\n\nAurelia chewed her food apathetically as she stared off into the distance. Illandriil knew exactly what spurred her sour demeanor even if he had yet to bring it up. He simply sat there eating his food pretending to not notice. It wasn't that he intended to ignore her, he just did not know what to say to her. \n\nHe had woken up with a thundering headache. He had no doubts about who had caused it. It had taken him all his strength to fight the urge to retaliate when she eased up. But this was exactly what he wanted her to do. \n\nHe had originally expected her to use her abilities to protect herself in the forest. In fact he thought she would use it at some point during the week. He needed her to use her abilities on him. She needed to at least read his emotions on the prophecy and see that he was telling the truth. But as the days wore on with no sign of her abilities he grew impatient. He changed tactics and started trying to provoke her into fighting him. \n\nAt first he thought giving her dagger back would do the trick. Disarming her would taunt her with the fact that she couldn't overwhelm him physically. For good measure he fondled her body against him, though that had been more out of lust for her. \n\nThen there was that kiss they shared that left him breathless. Completely unexpected. The way she demurely opened her mouth letting him explore her, tasting her sweetness. He wanted to take her right then and there.\n\nShe proved to be particularly resilient because not once did she use her abilities and he could not understand why. He knew he had to escalate this somehow. He took to dining with her every night to increase his interaction with her. \n\nThis clearly worked a little too well. The pain she caused felt like his brain was being strangled by her stems, their thorns digging into his brain, wrapping themselves around it tighter and tighter. When she finally released him and he saw the frantic expression on her azure eyes. He felt every retaliatory feeling melt away. For awhile he had simply gazed at the wild, shocked look on her face. He could tell that he was frightening her, the truth was frightening her. \n\nShe had been told only one thing her entire life and he had just tossed her into an ocean of truth with the expectation that she'd swim. He spent the rest of the night trying to comfort her, radiating the calm aura around lulling her to sleep in his arms. He swore to himself that he would be better than this as he possessively held her closer to him. \n\n###\n\n\"I have some questions, Elf and I demand answers\" Aurelia said, emphasizing the derogatory nickname she had bestowed on him. \n\n\"I assumed you would.\" His face maintained an impassive look, his voice neutral.\" But you're in no position to demand\"\n\nSetting down his fork, he stared at her intently enjoying her frustration. A slow smile spread across his face.\n\n\"What would you give me in return for my answers?\"\n\nShe uncrossed her arms as her shoulders slumped down. She stared at her lap and her hands balled up on it. The idea of giving her jailer anything, even for answers made her uneasy.\n\n\"What do you want?\" \n\n\"Have sex with me.\" He stated, more than answered.\n\nHer face seized with various emotions, between anger and disgust. She wasn't sure if it was directed at herself because she was actively considering his offer or because he had offered at all.\n\n\"In your dreams Elf.\" She scoffed, blushing color rising into her cheeks at the suggestion.\n\nHe bristled at the mocking name. \n\n\"All too frequently I'm afraid. Fine, I'm feeling generous, I'll answer your questions if you sleep with me.\" He sighed as if relenting to offer this bargain.\n\n\"Just tonight?\" She asked, straightening up.\n\n\"Nope, I want to sleep with you every night.\" he said with a smile as he winked at her.\n\n\"No!\"\n\n\"Well it's either you have sex with me tonight or you sleep with me, otherwise you can go without getting any answers at all.\"\n\nShe shot him a dark scowl at his ultimatum. He couldn't help but feel pleased with himself. He had her. A few moments passed as she stared at her lap in frustration.\n\n\"Fine, I'll sleep with you, but I'm not taking off my clothes and I'm definitely not going near you.\"\n\nHe shot back a mischievous smile that made her cringe, thinking she might have just given him exactly what he wanted.\n\n\"It's a deal then.\" He said raising his palms. Yup, definitely what he wanted, she played right into that one.\n\nA few moments of strained silence past as her face carefully thought over his words and pondered what her first question would be. Finally she asked while staring at her half finished plate.\n\n\"I want you to tell me everything.\" \n\nSo she really doesn't know... His eyes became gentle, but maintained his easy smile with her.\n\n\"That's a rather vague question, I will need you to specify.\" \n\nHer deep marine eyes shot up to his meeting him in an intense stare, She studied his features warily. He could tell that she was unsure if she could trust him. He had only ever told her the truth though. Besides her eyes alone confirmed their mutual understanding; what choice did she have? ",
        "Her voice was even and composed as she asked\n\n\"Tell me about you, what is a Seeker?\" \n\nThe question caught Illandriil off guard. Of all the questions she could ask him this was the one she needed to know first? Weighing the answer in his head he said.\n\n\"I am the Seeker, I represent your antithesis,\"\n\nKnowing she needed more than that he continued explaining.\n\n\"You are a Source, you have limitless access to a powerful kind of magic only known to the gods. Our brightest wizard could never achieve the same kind of power in a millennia. However, as I am sure you've noticed that comes at a price. Every time you use your abilities, it can be draining. As your abilities were made to be used by the divine body not a mortal one. As it is, maintaining the amount of power swirling in body requires an immense amount of mental strength but this has made you less physically strong.\"\n\n\"How does this have anything with you being a Seeker?\" she asked impatiently.\n\nHe raised his hand to silence her and gesture that he was getting to that point.\n\n\"As a Seeker, I am the antithesis of everything you are. Where you are weak, I am strong and where your abilities can affect everyone. My abilities are really only meant for you.\" He paused letting his words hang in the air. \n\nHer eyes widened in realization as what he said fully dawned on her.\n\n\"You have abilities too?\" \n\n\"A few and they're all centered around finding you. Like I mentioned, physical strength is one.\"\n\n\"What do you mean they only affect me\"\n\n\"So many questions\" he shook his head and sighed.\n\n\"My abilities are tailored to allow me to find you and protect you.\"\n\n\"What do you mean by that?\"\n\n\"Haven't you felt it? The feeling of calm whenever you're around me?\" He asked knowing full well she has.\n\n\"That's your ability?\" She scowled.\n\n\"Well then you must not be very good. Being around you makes me anything but calm.\"\n\nHe chuckled, His pale blond fair swishing as he shook his head in amusement.\n\n\"You know, I find myself growing fond of that scowl of yours. My abilities allow me to sense when you're lying too you know? Not that anyone needs any special powers to see that. You wear your emotions on your face\" he tutted.\n\nHer face flushed in embarrassment at that comment which Illandriil found surprisingly adorable.\n\n\"I'm afraid our fates have been tied together since before you were even born, All my abilities are meant to aid me in finding you. Hence why I'm called 'The Seeker'. He said giving her an amused wolfy grin.\"\n\n\"Now hurry up and finish your meal little one, I want to go to bed.\"\n\n\"I still have more questions\" She stated flustered at his attempt to change the topic. \n\n\"I will not answer anymore until you finish your meal\" \n\n\"I'm not hungry\" she insisted as she pushed her plate away from her.\n\nLooking down at her half finish plate, Illandriil contemplated whether to force the issue. Deciding that it wasn't worth it as she had likely had enough nutrients in the day for a human, he got up to clear the plates away. He could feel her gaze on him as he walked towards the door to place the dishes outside for a servant to clear. Sweeping back over to her he lifted her in his arms and carried her to their bed. She made no attempt to fight him as he was doing so. \n\nHe settled her into the bed before climbing in beside her trapping her between him and a wall. When he rolled over to face her what he saw made him bark out a laugh. True to her word, she had scrambled towards the wall to leave as much distance as she could between them. \n\nHis eyes dipped into a hungry desire and with ease he pulled her into his embrace, tangling his legs between hers so that she couldn't escape. She hissed at and fought uselessly against his hold. He pretended to ignore her.\n\n\"I'll let you ask one more question before we sleep.\" \n\nShe stopped struggling to consider his words. This allowed him to pull her closer to him and her head lay against his chest as he laid on his side.\n\n\"You said I would be sacrificed as soon as I'm twenty. What happens if they don't? Does that end the prophecy?\" \n\n\"It never ends, so long as your blood is divine, if they get a hold of you they will sacrifice you, whether you're 20 or 120.\"\n\nAurelia felt a pang of anxiety as he said this. In just two years her life will hang in balance, if the humans found her. She was never going to be fully free from the prophecy.\n\n\"Do not worry little one, you are in my care now. I will never let them touch you.\" Said Illandriil, mistaking her expression as one of fear of being sacrificed. \n\nAurelia didn't bother responding to this. His words gave a small part of her relief along with a flood of guilt for feeling relieved. She lay there mourning the loss of her freedom to be with her people while feeling conflicted by her growing feelings for the handsome prince warming her bed. \n\nAfter a while she grew exhausted from fighting her emotions and her eyes drifted off into sleep. He frowned, gazing down at her peaceful form wishing he could do more to reassure her, before finally succumbing to sleep himself.\n\n###\n\nIllandriil sat back in his leather seat, half- listening to one of his lieutenants drone about updates, current inventory of supplies, weapons, men, food. The commander's office in outposts were always smaller than the ones in the city, but this one felt particularly cramped due to the handful of men standing near him. The structure of the room was simply unremarkable. The desk in front of him, no doubt brought an immense amount of pride to the elven craftsman who made it knowing it would be used for this purpose but to him it seemed of poorer quality than he was used to. \n\nEverything in the outpost was of a substandard quality and he was dying to leave. From the dishes, to the tables right down to the bed that warmed him and his little Source at night. Of course elven items were of a higher quality, sure, he had even seen the look of awe on Aurelia's face as she took in her surroundings. Human's could never make anything as beautiful. Well they made one thing that was beautiful.\n\nHis mind drifted to the little human that had found her way into his arms. Days had passed since she had been captured, they had yet to leave for the Faenanore Isles because he did not want to risk such a journey while she was unconscious but now enough time has passed, her bruises were healing nicely, she even seemed calmer despite her refusal to call him by his name. \n\nBefore he had met her the idea of bedding a human was repulsive. Elven society looked down on breeding with humans. This was especially true amongst the members of the Faenorian nobility. It would ruin the purity of their blood, and thought to be akin to laying with an animal. \n\nAnd yet, when he first walked into her room, and had a good look at her beautiful face, her clear sea glass blue eyes, her curvy effervescent body. He felt his heart throb with desire for only one thing. Her. Everything about her was deliciously addicting, her voice, the expressions on her face, the sound of her moans. Even her fucking scent set him off. From the minute he met her he wanted to bury himself deep in her.\n\nIt drove him crazy to see her resisting him even when her body responded to him. He knew she could feel it too. The urge to be together. \n\nWhy does she have to be so damn stubborn?\n\nIllandriil shifted in his chair, trying to subtly hide the fact that his previous position was becoming uncomfortable due to his growing erection. Focusing back on the situation at hand. His lieutenant was prattling on about supplies that needed to be restocked at the outpost once after they've departed for the Isles. Raising his hand to pause his lieutenant mid report. \n\nHe turned to the other men in his room and started barking out orders to prepare the ships to leave the elven outpost that they were currently stationed at, one of many such outposts that dotted the mainland. It would be a few more hours before they would get ready to leave. His mother was not happy to hear he was delaying his travel, and even more dismayed when he told her he hadn't binded the girl just yet. Not that he cared though. \n\nThe binding ritual was painful but would be easier for the Source if she was willing and he wanted her to willingly submit to it as it would ease the process and allow it to take a stronger hold. He felt like they were getting there even if she wouldn't admit it. \n\nHe motioned over at his second in command. A tall male elf with cold steely grey eyes with looks that could terrorize your soul if they could. He stood taller than Illandriil even, though less strong than himself due to his enhanced Seeker strength, his second was still the strongest amongst his men. They had grown up together, trained together. The prince was definitely proud to count him as one of the most trusted friends.\n\n\"Bring the girl to the ship, I will meet you both there\" came his short order. \n\nIllandriil had no love for the heat of battle or for war but it did not mean that he would have no part in it, unlike other nobles, who preferred to sit back and issue commands. Serving alongside his men allowed him to build his relationship with them. They respected each other on and off the battlefield. When he first found out where the Source was being hidden, his men had no hesitation in going well past enemy lines to retrieve her. His men were used to his short straight forward directives, they knew better than to test their prince. \n\nGrowing up his tutors taught him the history between humans and Elves. What had happened between them when Elves sought to expand past their native islands. Mainland Elven cities ransacked by humans, their women and children raped and brutalized. All for whatever piece of land they happened to be sitting on. The idea of being beaten by an inferior species was too much to bear. \n\nThis was when they formed the Fa\u00ebn Dominion. Founded on the principles of Elven dominance and human subjugation. They fought a long and bloody war that lasted a Millenia. Every time they were close to bringing the humans to heel, the humans would resurge and somehow fight them back. \n\nIt was at his birth, that the prophecy was divined amongst his people naming him the Seeker. Since then his life had been dedicated to finding the Source. No one knew when she would be born or where. They thought they had the advantage since the humans were still unaware. However, over a century later their priests divined the same prophecy. It was around this time Illandriil felt his whole world stop for a moment. The Source had been born. \n\nAfter that, it became a race to find her. \n\nThe outcome of this war depended on which race managed to fulfill their side of the prophecy. He shook his head, pulling himself out of his thoughts, bringing his attention back to the rest of the report.\n\n####\n\nThe door swung open as Aurelia sat on her chair reading a book. \n\nThe male who stood in the door frame was not the prince and was most definitely NOT Maesys but a bulky looking elf with wide arms instead. He looked large, with a sword sheathed at his side and various side-arms lacing around his wide muscular frame. His face was twisted into an annoyed grimace and she took note of the large scar that skirted across his cheeks dancing away from his silver eyes. It somehow served only to make him more handsome than less.\n\n\"You're coming with me, I'm taking you to the ship\" he said gruffly, narrowing his eyes at her.\n\nAurelia paused thinking quickly at the event unfolding before her. The two guards outside her door had long since disappeared, she assumed to the aforementioned ship. \n\nQuickly deciding to go through with this plan her lips curved into a saccharine smile. \n\n\"Well isn't that sweet, the prince sent you to escort me.\" \n\nShe narrowed her eyes at him, focusing on his face. Her abilities now reaching past him into his subconscious. A dark midnight navy aura pulsated around her body and his eyes glazed over, bringing him under her control. \n\n I'll go with you but once we get out there, I am going to run and you, are going to do everything in your power, to prevent anyone from following me. Save for killing them of course. She added that last part thinking that she didn't want anymore bloodshed on her hands.\n\nThe man seemed to struggle for a minute, his face contorted in pain, as if to fight the mental directive she had just issued. Before finally resuming his sombre look as held out his hand, beckoning her to follow him. \n\nOnce outside her directive took over and immediately she made a break for the treeline. She silently prayed that everyone else was behind her at the ship. Obviously the Gods weren't listening though as she immediately came upon a few men who each stopped their tasks to gawk at their prisoner headed straight for the tree line. Looking at each of them she gazed into their minds, willing them to ignore her as she ran by. Each of them fell back into their task as if they hadn't just seen a panic stricken human fleeing from the outpost.\n\n###\n\nIllandriil looked in horror at the scene in front of him. He had been held up with a few last minute details but he came out just in time to see his second-in-command, Malloryn taking on the rest of his men. He could just barely make out a faint blue shimmer around him, letting Illandriil know just who was behind all the mayhem at the short.\n\nHe cursed under his breath in Olde Fey as he broke into a sprint reaching outside just to see her a wisp of her wavy dark chestnut hair breaking for the treeline.\n\n\"STOP HER\" he yelled out to the men a few yards in front of him as he ran towards her. \n\nNone of the men looked up as in a daze the same faint blue shimmer that he saw surrounding his second just moments before. \n\nHe called for the rest of his forces hoping she had not turned them all mindless. Men closer to the shore while aware of the Source fleeing before them, were unable to help. His own second in command, mindlessly attacking, preventing them from chasing her. USELESS, DAMMIT IT ALL. He continued sprinting after the girl that had managed to cause a small havoc in the wake of her attempted escape. She was fast, thankfully, he was faster. \n\n###\n\nAurelia gasped as she reached the treeline, her hands reached out and clutched the bark in front of her to catch her breath. This momentary break wouldn't last long as she glanced back and saw the white blond hair of the prince racing toward her, his green eyes coated in a deep poisonous rage. She screamed and ran further in. Her mind fell into a thick dense fog from the use of her powers which was quickly accompanied by a throbbing headache. \n\nShe had managed to make it toward a clearing hoping to hide behind a large stone when a large force gripped her and sent her tumbling to the ground. She shook against her familiar captor as she rolled over, only to be pulled back by her ankles as she clawed at the dirt. His hands snaked up to grab her wrists to hold them back. \n\nShe drew her breath in hissing and cursing at him as she tried to use her abilities to stop him but her mind strained causing a sharp pain to echo down her spine, her abilities refusing to cooperate due to her earlier exerted efforts. She felt her body being picked up by her captor as he swung her over his shoulders kicking and screaming. He started back towards the outpost as if she were nothing but a sack of flour. \n\n###\n\n\"You know I had wanted to wait to do this, but you leave me no choice\" Illandriil said as he flung her into an unknown room.\n\nUnlike her room, the walls and floors were made of stone. Various metal chains and rings hung from the ceilings to the floor. A large bench with a few leather ties strewn across it sat near the door. A few furs and rugs lay in the centre of the floor. Other than that this room was completely devoid of furniture. Aurelia scrambled to her feet and launched herself at the Prince angrily punching his nicely chiseled face, hoping to dent his pretty looks. \n\nHe grabbed hold of her wrist, looking more irritated from the punch than hurt. Grabbing some leather strips from the bench, he dragged her over to a metal ring attached to the floor near the centre of the room. He pushed her down with ease, straddling her legs between his, limiting her movement.\n\nUsing the leather strip he tightly secured her wrist to the ring, leaving the other hand free.\n\n\"You gave me no choice, in this, remember that little one\" he spat, \"You did this to yourself, I clearly can't trust my men around you, not until I have you.\"\n\n\"SCREW YOU\" she screamed angrily thrashing against the restraint. \n\nOther elves entered into the room, decked out in heavy, flowing enchanted robes with elaborate designs and symbols on them. They glided around Aurelia and the prince, seemingly ignoring the scene in front of them.\n\n\"We are ready when you are my prince\" said one of the mages. \n\nHe nodded glaring unintentionally at the mage who spoke, willing himself to ignore the scowl marring his Source's pretty petite face. He stepped back and staring directly into her eyes he began to peel off his clothes in sharp clinical movements. He started with the various weapon straps around his body. Once they were off he moved to fumbling with his belt, stripping off his tunic, trousers. \n\nHe turned around briefly to bend down and pull a knife from discarded sheath. Turning back around he watched Aurelia's eyes widen as she took in the sight of his hardened naked form for the first time. His wide muscular chest glistened with a slight sheen of sweat. Her eyes drifted lower and lower until they landed on his massive member in front of her. \n\nShe squealed, trying to scramble away from his knife, holding her free hand in front of her in an attempt to stop him. Anger faded into pleading in her eyes. \n\n\"No, don't, I'm begging, don't do this,\" her voice choked with fear and mild anticipation. \n\nHe gently knelt down in front of her, grabbed the tunic from her quivering form and with one swift slash, skilled enough not to break her skin, he tore the garment apart. Her naked body lay bare, boobs spilling out in front of him, in front of everyone. Her cheeks burned as she glanced around at the mages gathered in the room. Noticing her apprehension at their audience he cupped her face in his hands bringing her eyes back to him.\n\n\"No, no you look at me\" he said, hovering close to hers face, listening to each quivering breath she drew in. \n\nHe placed a thumb onto her nipple, flicking it slowly watching the rosy little bud harden with arousal. She shuddered and whined, glancing around at the audience to their act. His other hand pressed on her face, re-shifting her gaze back to him. He leaned his head down and took her other sweet hardening tit into his mouth, flicking his tongue across the soft crest, he heard a moan escape her lips. Looking up he smiled. He had her, the little human, his beautiful woman, aroused by him. As if realizing how he was making her feel, she shook her head and resumed scowling at him. \n\n\"Don't hide your pleasure, not from me, not after this\" he softly pleaded, stopping his assault on her breasts. \n\nHis hand slowly caressed down her flat stomach to cup her mound as he leaned in trailing kisses up to her neck. His thumb quickly found what it was searching for sensuously rubbing circles around her already swollen clit. Waves of pleasure rushed from the area where he touched. She blushed and closed her eyes when she caught a glimpse of his growing erection.\n\n\"Does that feel good little one?\"\n\nAurelia shuddered and shook her head trying to ignore what he was doing to her.\n\n\"Oh? I bet if I stuck my finger inside your little twat it would come out soaked\" he teased tracing a finger down her slit. She shuddered and pressed her legs together to block his access. He parted her legs again with ease before shifting his own weight between her. He slipped a finger in to explore her soft puckered folds. ",
        "The other hand continued its assault on her clit. Aurelia moaned in protest, his touches were giving rise an unwanted but pleasurable feeling. His finger came back out soaked in her juices despite having only played at her entrance. He pressed it to her lips letting her feel her own wetness. His finger went back down to explore further. \n\nThis time he pressed his finger deeper into her before hitting her untorn barrier. \n\n\"Please\" was all Aurelia could manage to groan in response, shaking her head. Struggling against her heart and body's betrayal of her.\n\nIgnoring her he placed his finger in his mouth, closing his eyes he savoured her sweet tangy juices. He glanced down, gleefully enjoying her quivering form under him. His cock was throbbing with his erection, he wanted to bury himself deep inside her now. \n\nBiting his lip, he stopped himself and focused on intensifying his calm aura. Choosing instead to work his fingers into her to stretch her out a bit more. Her tight virgin pussy twitched as it slowly expanded to accommodate his fingers. He pushed his fingers slowly, in and out, trying to be as gentle as possible, just barely managing to fit in two. He gradually picked up speed as his other hand continued to massage her little button. He watched her close her eyes and arch her back and she cusped on the edge of climax. \n\n\"Yesssss\" he hissed \"come for me my veela.\" His words dripping with needing, aching demand. He would make sure she enjoyed this. \n\n\"No, no I can't, please stop\" she moaned in between soft breathy hitches, fighting hard against the hot flame of desire building in her core that threatened her with the release that her body so desperately wanted. \n\n\"You can, you want to\" he whispered to her huskily, \"don't deny your body what it needs\". \n\nShe moaned, losing control, she arched her back higher and let her body get over taken by the wave of pleasure that erupted across her body. The prince smiled as he continued playing with her cunt before stopping when her shudders subsided. She almost pouted when she felt him stop, her eyes closed trying to ignore the gathered audience staring at her body. \n\n\"There will be more where that came from.\" He assured.\n\nIllandriil's hands began to move up slowly pushing her thighs further apart. He rubbed his thick cock up and down her silky sweet slit stopping at the top to press against her clit before sliding back down. Her juices seeped onto his cock as it continued its slow methodical movements. Aurelia gasped opening her eyes and pulling back when she felt the tip press against her entrance. \n\nHer restraints and the prince's presence between her legs prevented her from pulling too far from the engorged penis. Noticing the fearful look in her eyes, Illandriil leaned down to kiss her lips forcing her to look away. She screamed against his lips as she felt her pussy split as the prince thrust his the full length of his manhood in. \n\nAurelia sucked in a sharp breath, eyes shut, fighting to stop the pain caused by his large member. It hurt when he moved inside her. She felt a hand reach up to caress her cheek slowly as if to comfort her. \n\n\"Easy, girl, deep breaths\"\n\nShe sucked in some air as she felt something tearing inside her as the prince's large thick cock bottomed out inside her virgin tight pussy. \n\n\"It's okay, little one,\" he murmured, hushing her and kissing her neck. \n\n\"Keep breathing for me, you're doing so good\" he cooed caressing her cheek.\n\nAurelia slowly exhaled, twisting uncomfortably at the agonizing pain blossoming in her sex.\n\n\"Aurelia, look at me\" He paused, allowing her to adjust to his size, his cock twitching inside her slick cunt. She felt unbelievably amazing, and he relished the feeling of being buried so deep into her core. He wanted to just take her hard and fast right there but he didn't want to hurt her. \n\nShe slowly opened her eyes and met his. He brushed away some tears that had escaped her eye. When did I start crying? \n\n\"Stop fighting me and I promise the pain will stop\"\n\n\"Liar, you lie, you lie, you lie...\" she shook her head softly, her voice a choked quiet squeal, repeating the phrase over and over. Her soft chestnut hair tumbling around her quivering body.\n\n\"Shhhhh, I haven't lied to you yet have I? I promise little one, stop fighting me and the pain will stop.\"\n\nAurelia peeled one eye open slowly, before opening both. Her breathing became more even as she focused on deeper breaths instead of struggling to reject him. Her muscles slowly relaxed around her, as her body adjusted to the feel of his length inside her. The pain gradually ebbed away disappearing like the sunset. \n\nAs she relaxed more he slowly began to thrust his penis in and out of her body. She shivered at the new pleasurable feeling that rushed into her body where the pain had dominated only moments ago.\n\nRelief reflected in his expression and voice as he cooed softly. \n\n\"Good girl.\" \n\nHis hands clasped her head, stroking her silky dark locks, Closing her eyes she allowed the pleasure to seep into her core. He picked up speed, feverish and hot with need as he rammed the full length of his cock. All reservation and self-control slipped away from him with every needful thrust.\n\nHe knew he should be more gentle as this was her first time but that just spurned him on in excitement. Each blissful contraction around his cock served to affirm one singular truth to him. She was his, and she would only ever be his. His beautiful Source's sweet nectar would only ever be known to him and him alone. \n\nHe relished the way her slick tightness felt around his cock. She clamped down around his tip as if to keep him from pulling out entirely from her. He could tell she was in pure ecstasy at the feeling on him filling her. Her hand no longer fought against him, instead her fingers gripped at his hips encouraging him onward. Their bodies melded together in the pleasure of their coupling. \n\nHer brain, fogged from her early escape attempt, too weak to fight the pleasure he gave her with each thrust, in fact it was all her body seemed to want. \n\nEverything seem to sing to her in harmony as their bodies came together with each blissful thrust and every pleasurable cramp. He was sending her closer and closer toward the edge and she went willingly knowing he would be there to catch her as she came down. Her body alighted as he brought her to another rapturous orgasm. Her brain distantly registering the chants going on in the background. \n\n Wait, the chanting, THE RITUAL. Her eyes widened at the thought \n\nHe was binding her, the mages in the background securing her fate as an arcane symbol glowed underneath her. \n\nShe fought now in earnest, mustering the strength to try to pull him out of her, to stop the ritual. She begged, screamed and kicked. He grunted, hooking her legs under his arms pulling her body up to give his cock better access as he fucked her harder. His cock slamming into her pussy. The sound of the slapping bodies echoing off the walls, meeting with the soft chants of the mages surrounding them. She felt another orgasm build up inside her. \n\nThe need was great, and fight as she might she could not escape the wave as it came crashing around her. Moaning, she arched her back hearing him grunt as he sprayed pulse after pulse deep inside her. He held her to him as her body betrayed her, her pussy clenching, milking every last drop of his essence. She rolled her eyes up gasping, trying to ignore the ever increasing volume of the chanting in the background. The prince too was muttering something to her, stroking her hair still.. \n\nHer eyes fluttered open to watch him lean to kiss her lips before closing her eyes to allow herself to be fully enveloped by it, his tongue slipped past her teeth and teased at her tongue. She moaned and let her tongue explore the inside of his mouth, reveling in his taste. They laid there together his forehead pressed against hers, muttering to himself but she still couldn't understand what he was saying.\n\nIt didn't matter she was in a state of rapturous bliss, her body felt like it was floating consisting of only of tingling electrical sparks. She distantly registered his hand caressing her cheek drawing a satisfied sigh from her lips. Just as she felt herself drift away her right hand exploded in pain."
    ],
    "authorname": "The_Diddler",
    "tags": [
        "elves",
        "fantasy",
        "forced",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-seeker-and-the-source-pt-02"
}