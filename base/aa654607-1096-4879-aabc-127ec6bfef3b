{
    "title": "Lisa Ch. 09b",
    "pages": [
        "... continued from chapter 9a\n\n\"Look, you can just sit here and watch the others parasail. It's like watching TV.\" Abe said when Jessica looked unhappy. \n\n\"We'll keep you company.\" Leah said as she, Amanda, Justine and Sara came to join Jessica and Abe.\n\n\"Thanks.\" Jessica said. She tried to smile at the girls but she looked down at her hands instead, guilt sweeping over her again. She felt like she'd been talking behind their backs.\n\nAbe looked at Jessica, surprised by her reaction. Looking at the girls he found them studying Jessica's lowered head. Leah nodded at Abe to indicate things were okay, and then motioned for him to feed Jessica.\n\n\"Josh sure doesn't like heights, does he?\" Leah asked laying back onto the blanket beside Jessica and watching as he sailed into the air but looked really tense.\n\n\"No, he's terrified of them.\" Jessica said while chewing. \"Um Abe, I'm really not hungry. My stomach is kind of upset.\" She added when Abe glared at her.\n\n\"Is this the stress induced stomach upset?\" Amanda asked and smiled when Jessica flashed her eyes up at her in surprise. \"We know Jessica, all about the conversations you've had with Caleb, Don and Quinn.\"\n\n\"We all know.\" Abe added when Jessica looked at him. \"Especially the part where you don't think you have an eating disorder. Sorry,\" he added. He'd said it more sharply than he'd intended and Jessica shrank a little, \"I didn't mean it to sound quite like that. What I meant was that we know that you don't feel like eating and when you're stressed you vomit. That could be part of an eating disorder you know ...\"\n\n\"I guess.\" Jessica acknowledged and reluctantly took another bite of the sandwich that Abe held up for her.\n\n\"The question,\" Amanda said, \"is why you feel stressed. You've been looking at us,\" she said indicating Sara, Leah, Justine and herself, \"like you've hurt us somehow and don't know how to apologize. We're on vacation, you should be happy, relaxed.\"\n\n\"Jess?\" Sara prompted when Jessica didn't look like she was going to respond.\n\n\"I guess I'm worried about you Amanda, and about Mark and Chris ...\" she added flicking her eyes between Justine and Abe, \"I know about that ... I'm not sure who else does ...\"\n\n\"Just me.\" Justine said quickly and looked panicked for a moment.\n\nJessica nodded. \"That's why I feel stressed.\" She said when Abe, Leah, Sara and Amanda looked between Justine and her with curiosity. \"I feel like I know things that maybe I shouldn't and I haven't had time to talk to you about it. It feels awkward.\"\n\n\"Like you're the middle man?\" Justine asked.\n\nJessica nodded.\n\n\"We're a family Jess. We don't have secrets from each other, remember?\" Justine asked. \"Whatever Mark and Chris tell you is okay with me. It's just like they don't mind me talking to you about them. So, don't be upset or stressed about it. Okay?\"\n\n\"Okay.\" Jessica said.\n\nWhen Abe, Leah, Sara and Amanda kept looking at Justine in anticipation she sighed. \"Alright. Fine. It's my fantasy to see the two of them have sex. We were talking about fantasies last night and I made the mistake of telling them that and they freaked.\"\n\n\"Shit.\" Abe hissed.\n\n\"Mark and Chris?\" Leah asked. \"You know Chris will never do that ...\"\n\n\"That's why it's called a fantasy.\" Justine said in a defensive tone. \"I said it before I thought it through. I wish I hadn't, trust me.\"\n\n\"Did Mark tell you that he's not getting over the rape?\" Jessica asked.\n\n\"Yes. And that's where I made my second mistake. I thought that since Scott helped you with sex, maybe Mark and Chris doing it would help Mark.\"\n\n\"Justine!\" Leah exclaimed. \"Chris is a homophobe. How would forcing him to have sex with Mark make anything better?\"\n\n\"I know, I know.\" Justine said. \"And you can stop looking at me like that.\" Justine snapped at Abe, \"It was stupid. I was desperate, what can I say?\"\n\n\"What can you say about what?\" Chris asked. Jessica, Abe, and the girls looked up to find Chris, Mark, Caleb, Don, Quinn, Jim and Angus.\n\n\"About our ... situation.\" Justine said.\n\n\"Oh.\" Chris said and turned red. Mark paled.\n\n\"Situation?\" Quinn asked and did a double take when Chris turned even redder.\n\n\"Why don't you have some lunch.\" Jessica said desperate to break the awkwardness and spare Chris the humiliation.\n\nChris smiled at Jessica, \"Always trying to protect people, aren't you?\"\n\n\"This isn't something we need to be talking about right now.\" Jessica said, \"And it makes you uncomfortable ... you're turning red ...\" she added when Chris raised an eyebrow.\n\n\"Kind of like you did when I let everyone listen to you have sex?\" Chris asked. \"I think I can handle a bit of humiliation Jess. Justine has a fantasy about Mark and I having sex.\" Chris said turning bright red and looking at his feet.\n\n\"I shouldn't have said anything ...\" Justine muttered in despair.\n\n\"You were being honest.\" Jessica said when no one said anything. \"That's what we're supposed to be. And you shouldn't be embarrassed about your fantasies but there are other ways to experience your fantasies without having to actually act them out.\"\n\n\"How's that?\" Chris asked.\n\n\"Well, you can imagine them.\" Jessica said. \"Someone's fantasy doesn't have to be acted on exactly.\"\n\n\"That's true.\" Mark said, relief evident in his voice.\n\n\"So, we've talked now.\" Leah said, \"Are you less stressed? Can you look us in the eye again?\" she asked Jessica, indicating the other girls and herself.\n\n\"Um., well there's still you Amanda. I'm worried about you. Starving and purging doesn't count as a diet regime. I really think you need to stop.\" Jessica said.\n\nAmanda nodded. \"Okay.\" She said. \"And now that you have no more stress, you can eat, right?\"\n\nJessica hesitated. She didn't believe for a second that Amanda would stop vomiting but she didn't feel this was the right time to pursue it. She'd find a better time to push the point. Eyeing the sandwich in Abe's hand with dread she said \"It doesn't taste good.\"\n\n\"The sandwich?\" Abe asked in surprise, \"Why didn't you say so, I can give you something else.\"\n\n\"No.\" Jessica said, \"Nothing tastes good. Everything tastes like sand.\"\n\n\"Maybe sand got in the food ...\" Abe said.\n\n\"No. She means food in general.\" Angus said, \"It's not tasting right for her. We're going to get Doc to check it out.\"\n\n\"In the meantime she has to eat something.\" Abe said.\n\n\"Agreed.\" Jim said lowering himself to the blanket, \"Jess, can you eat it anyway? Just half the sandwich and that's it, okay?\"\n\nJessica nodded. Angus sat behind Jessica on the blanket, and she leaned back against him. Everyone else made themselves comfortable on the blanket and ate.\n\nJim, Abe and Angus distracted Jessica by having her watch the other men and the boys sail through the sky so they managed to get the whole sandwich into her.\n\nSoon the others came to eat, including the employees from the parasailing company. Now that they were all together and had time to observe, it was clear that if the parasailing employees hadn't believed Amanda about the polygamous relationships before, they did now.\n\nJustine and Amanda went out of their way to emphasize that they were with each of their men and it earned them some looks that ranged from uncertain to disapproving.\n\nJessica just seemed to go with what felt natural to her. Not overdoing her displays of affection between herself and her men, but not avoiding or hiding them either. She received the same kinds of reactions as Justine and Amanda but they seemed more muted. If Jessica noticed the reactions she gave no indication of it. Amanda and Justine for their parts became more and more defiant, seeming to get angry about any indication that someone disapproved of their relationships.\n\nAfter lunch they went back to the parasailing and the rest of the afternoon was spent parasailing or swimming. Justine and Amanda managed to reign in their hostility but they made every effort to flaunt their relationships. Despite this tension the day went by quickly and everyone had fun.\n\nThey made it back to the hotel in time for dinner and to get the boys to the club for the evening and by seven o'clock everyone had gone their separate ways again, this time Jessica and Riley were heading out together.\n\n\"Are you okay?\" Jessica asked Riley when he kept staring at her as they walked.\n\n\"Better than okay.\" He said pulling her closer to him. \"You know I'm impressed with how unembarrassed you are about our relationship. But don't you think that being openly polygamist will hurt your career plans?\"\n\n\"If I decide to be President of the United States, or a supreme court judge, yes.\" Jessica said, \"but lawyer, local or state judge or governor, no.\" \n\n\"President of the United States ...\" Riley said stopping and looking down at Jessica, \"Do you want to be President of the United States?\"\n\n\"Maybe someday when polygamy is legal.\" Jessica said.\n\n\"And if it's never legal?\" \n\n\"I don't want a job that won't let me be me.\" Jessica said. \n\n\"Good.\" Riley said pulling her into his arms. \"I wouldn't want you to resent the limitations that our marriage may put on you in regular society.\"\n\n\"Riley ...\" Jessica said bringing her hand to his cheek. \"I'll never resent our relationship. Please don't be sad.\" She added, running her thumb over his lips, tracing the slight frown they formed. \n\nRiley locked eyes with her and smiled, \"If you're happy, I'm happy.\"\n\n\"Then we're both incredibly delirious with joy right now.\" Jessica said lifting onto her toes to bring her lips to his. \n\n\"I don't know if delirious is a strong enough word for it.\" Riley said, pecking her lips several times before slipping his tongue into her mouth and locking his lips on hers.\n\n\"Jess ...\" Riley said, resting his forehead on hers ... panting. \"We'd better stop ... for now.\"\n\nJessica nodded. \n\n\"So, I thought you may enjoy participating in a murder mystery at the castle.\" Riley said after clearing his throat and gaining some control. \"It's a giant role playing game. We get parts to play and if we solve the mystery we get a prize.\"\n\n\"I read about that!\" Jessica said clearly very excited. \"Let's do it!\" she said patting his chest with her hands.\n\nRiley chuckled, \"I love how excited you get about everything.\" He said and taking her hand he led her to the castle.\n\n\"Are you two here for your honeymoon?\" one of the mystery facilitators asked when she handed Riley and Jessica the package with the information about their characters.\n\n\"Yes.\" Riley said.\n\n\"It's easy to tell, you look very much in love.\" She said. \"I'm Virginia. You have fifteen minutes to read the information. All the guests are detectives in the game. The idea is to solve the mystery before the others. I'll come and get you when it's time to start.\" Virginia said pointing to a couple of oversized lounge chairs available for them to sit in.\n\n\"Detective ...\" Riley commented as Jessica sank onto his lap and he pulled her close, holding the information booklet in front of both of them. \"What I always wanted to be ...\"\n\n\"You always wanted to be a dick?\" Jessica asked and burst into laughter when Riley's eyes widened in shocked surprise.\n\n\"And where did you learn such language?\" he demanded in mock anger.\n\n\"You forget that I love mystery novels.\" Jessica said kissing him. \"I read about dicks all the time.\"\n\n\"Ah, that kind of dick. Gotcha.\" Riley said. \"So then I can rely on you to win this game ... I'm not sure my dicking abilities fall into this particular category.\" Riley added with a wink causing Jessica to laugh again.\n\n\"I like your ... abilities ...\" Jessica said, \"but I'm pretty sure you'll be a big part of solving the case. Oh look, your name is Donald, and I'm Candice. Donald and Candice, not very imaginative.\"\n\n\"Candy ...\" Riley said leaning back to better observe Jessica, \"I can see you as a Candy. Especially if I picture you in your bikini on a surf board, chewing gum.\"\n\n\"Like what ev ...\" Jessica said in a forced cheery, valley girl voice, and twirling her hair.\n\n\"Oh my God.\" Riley said laughing, \"That's you alright.\"\n\nJessica swatted his chest and looked back at the booklet. \"Come on Donny, we have work to do.\"\n\n\"We're at a political convention ...\" Riley said reading the information, \"is that foreshadowing or what, Madame President?\"\n\n\"And there's going to be an assassination.\" Jessica read. \"Do you think there will be a grassy knoll?\"\n\n\"If there is then there'll be more than one gunman. This could be a tough case to crack.\" Riley said.\n\n\"Nothing is too tough for Candy and Donny ...\" Jessica said.\n\n\"Donny ...\" Riley said cringing. \n\n\"I'll call you D, how's that?\" Jessica asked.\n\n\"Better.\" Riley said.\n\n\"We're ready.\" Virginia said and led them to the game room.\n\nTwo hours later they'd narrowed the suspect down to two possibilities.\n\n\"I think we need to just pick one.\" Riley said after they reviewed the evidence for the thousandth time.\n\n\"Maybe ...\" Jessica said watching Chuck, one of their suspects chatting with another of the detectives. \"Chuck was the right hand man to Gerald, the victim, right?\" Jessica asked as she watched Chuck's assistant come up and hand him a pen and paper. Chuck looked the paper over and signed it, and then turned back to chatting with the guests. \"Talk about ironic.\" Jessica said bolting upright and grabbing the packet of information from the table in front of her and Riley.\n\n\"What is?\" Riley asked watching her flip through the pages. \n\n\"That is ...\" she said pointing to a paragraph and handing the papers to Riley.\n\n\"The gunman was left handed.\" Riley said and looked at Jessica with a blank expression.\n\n\"Yup. And when we interviewed Chuck, what did he tell us?\" \n\n\"To get lost ...\" Riley said.\n\n\"After that. When you strong armed him into answering our questions.\" Jessica said clearly still impressed with Riley's ability to get information out of the suspect.\n\n\"He said he loved Gerald like a father and would do anything for him.\" Riley said.\n\n\"And what did he say about being right or left handed?\" Jessica asked.\n\n\"That he was right handed.\" Riley said.\n\n\"And what hand did Chuck just sign those papers with?\" Jessica asked.\n\n\"Holy shit.\" Riley exclaimed, excitement playing across his face, \"That lying bastard.\"\n\n\"Let's fill this in.\" Jessica said. The answer form requested the name of the killer, the reason you thought it was him and the reason he killed the victim. \"So, we know who, and how to prove it ...\" Jessica said, \"but why did he kill him?\"\n\n\"I know why ...\" Riley said picking up the packet of information and flipping through the pages. \"He said he loved Gerald like 'a father'. Gerald had an affair about thirty years ago. Remember? There was a child that was given up for adoption? What did Chuck say about his childhood? He'd grown up poor. Struggled through life, made something of himself. Remember that witnesses said that Chuck and Gerald fought a few days prior to Gerald's death? What if Chuck was Gerald's son. What if Gerald was less than happy to hear from him? After all, the affair had almost cost Gerald his marriage at the time. What would happen if the son from that affair suddenly showed up?\"\n\n\"Amazing!\" Jessica said staring at Riley, obviously impressed.\n\nRiley kissed her, \"Let's win this thing. I want to go somewhere where we can be alone for a while.\"\n\nJessica nodded, scribbled the motive on the sheet and handed it to Virginia.\n\n\"Congratulations to Candy and Donald, Sally and Jeff, Anita and Ralf.\" Virginia said twenty minutes later as Jessica and Riley stood with Virginia and two other couples at the front of the room. \"We had several people determine that the killer was Chuck. Some had the correct motive and the wrong evidence, or the correct evidence and the wrong motive but these three couples got all three correctly. You've won a voucher for the jewellery store. You can go and pick an item for yourselves. Enjoy the rest of your stay.\" Virginia ended to a round of applause.\n\n\"Do you see anything that you like?\" Riley asked fifteen minutes later as they browsed the jewellery store.\n\nThe voucher was for a certain price range but Riley said he'd pay the difference if there was something that Jessica really liked.\n\nJessica looped back to the items that fell in the price range of the voucher.\n\n\"I like that magnifying glass charm.\" Jessica said pointing at a small magnifying glass made out of gold.\n\n\"You don't have to stick to this price range Jess.\" Riley said looking at the magnifying glass.\n\n\"I know. But it reflects what we did together. Detectives use magnifying glasses. I want something that symbolizes that. Please?\"\n\n\"Sure. Whatever you want.\" Riley said and minutes later they walked out of the jewellery story with the magnifying glass in Jessica's purse.\n\n\"Where to?\" Jessica asked, hooking her arm with Riley's.\n\n\"Well, I booked the top of the Eiffel tower for us tonight.\"\n\n\"Really?\" Jessica demanded. \"I love it.\"\n\n\"Me too except I'm afraid I might not be able to keep my hands off of you when we're alone. We might end-up, you know ...\"\n\n\"I don't want you to keep your hands off of me.\" Jessica said pressing against him, \"I don't want to keep my hands off of you.\"\n\n\"Good.\" Riley grumbled. Holding hands they ran to the Eiffel Tower. \n\n\"This is so beautiful.\" Jessica whispered, standing at the huge window in the top room and looking down on France. \n\n\"You're so beautiful.\" Riley growled into her ear, his hot breath sending tingles down her spine. Jessica turned to face him and he pulled her against him, brought his lips down to hers. As they kissed Riley slid his hand under her shirt, under her bra, pulled her nipple. Jessica rubbed her hands on his chest, his abdomen, slid her hand down his pants and grasped his erect cock eliciting a moan from Riley. He hastily undid her pants, pulled them off, pushed her against the window, lifted one of her legs and stroked her clitoris while he kissed her. When Jessica came he lifted her up onto him, and she wrapped her legs around him. Slamming her back against the window he thrust into her, harder and faster until they both came.\n\nTurning Riley carried her to the centre of the room where a picnic basket sat, a blanket on top of it. With one hand he spread the blanket as much as he could on the floor and lay Jessica down on it. Leaning back on his knees Riley looked at her, and then brought his hands to her tits. After teasing her nipples to erection and eliciting louder and louder moans from Jessica, he lowered his mouth to a nipple, licked, bit, pulled it, then the other while his fingers stroked Jessica's wet pussy causing Jessica to arch against him.\n\n\"Your mouth ...\" she whispered, her hands resting on his head and pushing him toward her pussy, \"Eat me out ... please ...oh my God, now, please ...\" she said urgently, arching even more.\n\nFrustratingly slowly Riley kissed his way from her tit to her soaking and aching pussy. As soon as his mouth made contact with it Jessica thrust her pussy up and pushed Riley's head down maximizing the contact, and she gyrated her hips.\n\n\"Oh my God, oh my God!!\" she kept saying, getting louder and louder until she ended with an explosive scream. Riley licked her pussy as it convulsed and he licked until Jessica lay limp and her legs twitched before pulling her to him by her waist and plunging his cock into her. Jessica wrapped her arms and legs around him as he pumped into her and after a moment she moaned and urged, \"Harder ... harder Riley, yes, like that, oh my God!\" Riley thrust so hard he wondered if he was going to poke a hole into her cervix. Jessica pumped with him and soon she was screaming again while her pulsating pussy battered his cock causing him to growl, head back, at the top of his lungs. \n\n\"Christ Jessica.\" Riley said collapsing on top of her, nipping her neck as she nipped his. \"You make me so horny ... I feel like a fucking teenager.\"",
        "\"Ditto.\" Jessica murmured.\n\n\"You pretty much are a fucking teenager.\" Riley said with a laugh, pushing up on his elbows to look at her. Jessica kissed his lips. \n\n\"Age has nothing to do with it.\" Jessica said, \"Horniness isn't measured in physical years ...\"\n\nRiley lowered his lips to her tit again. \"Don't take this the wrong way, but you're odd. Sexy as hell, but odd.\" He laughed when Jessica crossed her arms over her chest with a humph. Unfolding her arms from her chest, Riley kissed her tit again, \"It's one of the things I love about you baby.\" Looking up at Jessica, Riley's eyes twinkled with amusement before he tilted his head toward the picnic basket, \"I had the hotel send a basket with some food, and wine. And there's an audio guide that will tell us about all the landmarks that we can see from here ...\" Riley said, \"but I want to keep you naked Jess. No one will be coming up here with us and I want to watch you, touch you, fuck you at will.\"\n\n\"Okay.\" Jessica agreed in a breathy voice, unable to hide how excited she was by the idea.\n\nRiley kissed her all over.\n\n\"Wine?\" he asked finally rolling off of her and opening the basket.\n\n\"Please.\" She said sitting up and rocking onto her knees she kissed the tattoo on his arm, then moved to his back, kissed down his back, his butt cheeks.\n\n\"Jess ...\" he muttered as she pushed him forward so that he was on his hands and knees. She reached between his legs, stroked his cock, fondled his testicles, and slid her hand up to join her other hand in parting his muscular butt cheeks. Jessica lowered her face between his cheeks and licked his asshole, slid her tongue in it. \"Jesus ...\" he panted. Jessica licked down his crack, put her head between his legs and took his balls in her mouth, one at a time. Riley's moaning became louder but when she pressed her thumb in his asshole he lurched forward.\n\n\"What are you doing?\" Riley asked. \n\n\"Trust me.\" She said and tried to press her thumb in again. And again he tried to move forward. Jessica got on her feet, circled her arm around Riley's waist and said, \"Trust me Riley. You won't be sorry.\"\n\nJessica began inserting her thumb again. Riley went stalk still, but he didn't try to move away. He could have easily. But he waited, gasping in discomfort several times, but eventually Jessica was able to get her thumb in far enough and got a good rhythm going and in minutes Riley felt pleasure beginning to grow. He began to rock with it. Five minutes later he yelled, gasped, shook.\n\n\"Holy fuck.\" He panted turning around and pulling Jessica down on to the floor with him. \n\n\"That was your g spot.\" She said running her hands over his chiselled chest, resting it over his heart, feeling it pound hard and fast.\n\n\"I heard about that from Scott and Angus. What a weird fucking feeling. Is it like that for you?\" Riley asked.\n\nJessica nodded.\n\n\"Except you ejaculate and I don't.\" Riley said, \"That's just strange ... cumming without ejaculating.\"\n\n\"Mhmm.\" Jessica said as she kissed his neck, his chest, his nipples. Riley slid his leg between hers and she began to rub against it with her pussy.\n\nRiley ran his hand down the length of her body, cupped her butt cheek, kneaded, squeezed, and then he took her knee and rolled her onto her back, spreading her legs out and up. \n\n\"Your turn.\" He breathed into her ear, nipped her earlobe, nipped her neck and rammed his fingers into her, pounding away at her g spot harder and faster. Jessica panted, moaned, begged, arched her body against his, pressing her tits hard against his chest before screaming and ejaculating. It took several minutes before Jessica calmed down and they lay together.\n\n\"I love it when you make a mess.\" Riley whispered in her ear.\n\n\"Did I at least get it on the blanket?\" Jessica asked.\n\n\"Mostly.\" He said and chuckled when Jessica looked worried and tried to sit up. \"Just kidding.\" He said kissing her cheek, nipping it, then her lips. \"We didn't mess up the floor, promise.\"\n\nJessica relaxed, sighing in relief and then pressed harder against Riley.\n\n\"I love you.\" She said.\n\n\"I love you.\" Riley replied while grasping her tit. \"How bout one more time.\" He said, \"Before we take a short break for food, drink, and audio tour?\"\n\n\"You promise it'll be short, right?\" Jessica asked as Riley brought his mouth to her tit. \"The break I mean, not the sex.\" Jessica added causing Riley to make a throaty chuckle.\n\n\"I promise ...\" he said and kissed his way down her stomach only to find Jessica's legs and pussy lips spread wide for him as his mouth moved below her pelvis. \"I love it when you're so wet ...\" he mumbled as he lapped her up.\n\nWhen Jessica came she immediately got up on her knees pushed Riley back and took his cock in her mouth but before he came he pushed her back. \"Turn around.\" He said, \"Put your ass up, that's it ...\" he growled and taking her by her hips he slammed into her asshole cumming after several thrusts and then collapsing on top of her.\n\n\"Am I crushing you?\" he asked.\n\n\"A little.\" Jessica squeaked. Rolling off of Jessica he pulled her to him. \n\n\"Sorry.\" He said kissing her. \n\n\"If I have to be crushed by something or someone I want it to be you.\" Jessica said.\n\nRiley chuckled, \"Well, I'm glad I could oblige. So listen, do you want to have that wine and some food and listen to the tour? Maybe we can get through some of it before I want to devour you again.\"\n\n\"Okay.\" Jessica agreed and sat up when Riley did. He passed her the glass of wine he'd poured.\n\n\"We have grapes, cheese, apple, some bread ...\" Riley said.\n\n\"I'm okay with wine for now.\" Jessica said taking a sip and getting up.\n\n\"Not so fast ...\" Riley said grabbing her ankle before she could walk away. \"Five grapes, two pieces of cheese and a slice of bread. That's the going rate to see the tour.\"\n\nJessica nodded and sank back down to the floor. Riley fed her the food and Jessica tried to enjoy it but it all truly tasted bland. And her stomach threatened to turn itself inside out again. \n\n\"You're turning green ...\" Riley observed.\n\n\"I can't eat anymore ... sorry ...\"\n\n\"You did okay.\" Riley said. \"Come on.\" He added after standing and extending his hand to her. Pulling Jessica to her feet, he went to turn on the audio tour. There was a button by the door. Jessica moved to the window and looked out. \n\nRiley watched Jessica for a moment and got an instant erection. He decided to leave her alone so she could get something out of the tour but within thirty seconds or so Jessica was looking for him. And when she saw his erection she moved to him, dropped to her knees and took him in her mouth. Riley couldn't bring himself to stop her. Instead he placed his hands on her head and thrust into her mouth. When he finally came, he lowered himself to his knees, slid his hand between Jessica's legs and fingered her to orgasm.\n\n\"Let's try that again.\" Riley said against her lips. Jessica nodded and the two of them went to the window. Riley pulled Jessica against him and they made it through fifteen minutes of the tour before they had sex again. And it went that way for the rest of the tour. Finally a voice came on over the speaker warning that the tower was closing in fifteen minutes.\n\n\"Shit.\" Riley said suddenly sitting up from where he and Jessica lay together after their latest coupling. He reached for his cell phone. \"It's one in the morning. I lost track of time ... sorry Jess.\"\n\n\"Don't be.\" Jessica said her head lolling to the side, \"I love the way you lose track of time ...\"\n\n\"The guys are going to kill me.\" Riley added, \"I completely tired you out.\"\n\n\"It was the wine. I'll be fine when we get to the hotel.\" Jessica said, barely able to keep her eyes open.\n\nRiley dressed Jessica and then himself. \"Come on baby, I can carry you back. I'll get the hotel to come get the basket and blanket tomorrow.\"\n\n\"I ... can ... walk ...\" Jessica said quietly, but as soon as Riley had her cradled in his arms she was asleep.\n\nAt the hotel Riley knocked on the hotel suite door.\n\n\"What happened?\" Jim asked in alarm when he answered the door.\n\n\"A lot of sex. Sorry guys but I wore her out.\" Riley said carrying her to the bedroom the other men following him.\n\n\"I'm okay ...\" Jessica mumbled when Riley lay her on the bed. \n\n\"We'll get you in the morning.\" Josh said crawling onto the bed and lying beside Jessica.\n\n\"I lost track of time otherwise I would've brought her back earlier or at least called.\" Riley said, \"Sorry.\"\n\n\"It's okay.\" Angus said, \"That seems to be a common thing when it comes to being with Jessica.\" The men arranged themselves around her and fell to sleep.\n\nJessica bolted upright, cutting off a scream a moment before it escaped her. She climbed off the bed and went for a shower. Fifteen minutes later she was in her pajamas and opening the suite door to find Rick, Abe, Chris, Mark, Justine, Caleb, Don, Quinn and Amanda in the hallway.\n\nAmanda and Justine looked pretty tired, \"We made them promise to wake us up if they got up.\" Amanda explained. \"We wanted a night with you too before we go home.\"\n\nThey headed to the room at the end of the hall. Mark got Jessica, Amanda and Justine a cooler each and the whiskey for the men. \n\nThey turned the sofa and the chairs to face the window and opened the blinds so they could see the replica of France twinkling in the night.\n\nAmanda, Caleb, Don and Quinn took the sofa, Justine sat on Mark's lap on a chair, Chris sat on the floor in front of them and leaned on the chair between Justine and Mark's legs. Rick, Abe and Jessica each sat in an oversized chair.\n\n\"By the way Jess,\" Justine said, \"I was finally able to convince Mark and Chris that I don't really expect them to sleep together. We wanted you to know so you don't worry about it.\"\n\n\"Good.\" Jessica said and it was easy to see that Mark and Chris were far more relaxed than they had been earlier. \"Thanks.\"\n\n\"I can't believe that tonight is our second last night here.\" Amanda said.\n\n\"Me neither.\" Jessica said, \"It's gone so fast.\"\n\n\"What should we do?\" Rick asked.\n\n\"We should play a game. I can go down and get the cards.\" Don said.\n\n\"We play cards any time at home.\" Abe said, \"We should play something else. Something different.\"\n\n\"Like what?\" Amanda asked.\n\n\"I don't know.\" Abe said with a shrug.\n\n\"Any ideas Jess?\" Rick asked. Jessica looked between Rick and Abe and wondered how they met. She suspected that they wouldn't tell unless they had to and she knew exactly how to make them.\n\n\"We could play truth, dare, double dare, promise to repeat.\" Jessica said.\n\n\"Huh?\" Caleb asked.\n\n\"Justine and Amanda, you must know this one.\" Jessica said looking at the girls but they seemed as oblivious as the men.\n\n\"One person offers the option of truth, dare, double dare, promise to repeat to another player. The person picks one and then the original person can ask a question that needs to be answered truthfully if the person picked truth, or they have to do something that they are dared to do ... they can pass on a dare but not a double dare, or they have to repeat something. Usually that's something really embarrassing, like having Quinn say, 'I wear women's underwear.'\"\n\n\"This is a real game?\" Justine asked.\n\n\"A famous game.\" Jessica said with a nod.\n\n\"You start then.\" Mark said to Jessica.\n\n\"Okay. Rick, truth, dare, double dare, promise to repeat?\" Jessica asked.\n\n\"So I have to pick one?\" Rick asked.\n\n\"Yes and once you do you can't pick it again until you've gone through the others.\"\n\n\"Okay.\" Rick said thinking, then he shrugged and said, \"Truth. Why do you look so happy?\" Rick demanded when Jessica straightened up, clearly excited.\n\n\"How did you and Abe meet?\" Jessica asked.\n\nRick stared at her, \"You set me up ...\"\n\nJessica nodded and giggled.\n\n\"For someone who can't lie, you're pretty sneaky.\" Abe said, a bemused look on his face.\n\n\"Answer the question.\" Justine said, \"I want to hear this too.\"\n\nRick looked like he wasn't thrilled about answering but then he just sighed and downed the rest of his whiskey. \"Through mutual friends.\" He said. \"We soon realized that we had the same mission in life, same goal. It made it obvious that we should be partners. Why are you looking at me like that?\" he demanded when Jessica, Justine and Amanda stared at him in a dreamy way.\n\n\"So you knew right away?\" Jessica asked with a sigh.\n\n\"Well, yeah ...\" Rick said.\n\n\"That it was true love?\" Amanda added.\n\n\"Rick is about as romantic as a rock.\" Abe cut in when Rick stumbled over his tongue trying to deny that love had anything to do with it. \"But yes, it was true love.\" Abe said and looked really amused when Rick glared at him.\n\n\"You're their romantic hero right now,\" Quinn said to Rick with a laugh, \"Enjoy it.\"\n\n\"So, is it my turn?\" Rick demanded. \"Abe, truth, dare, double dare, promise to repeat.\" He said it in a tense voice.\n\n\"Promise to repeat.\" Abe said, and had to repeat multiple times that he was an asshole.\n\nAnd the game continued. At one point Justine had to go downstairs to get her make-up so they could put it on Don as part of a double dare. They laughed so hard while they did it that even Don had to laugh eventually.\n\nFinally Jessica picked truth.\n\n\"What is your best memory of your family.\" Abe asked and suddenly everyone got quiet.\n\n\"What kind of a question is that?\" Chris demanded.\n\n\"What's wrong with it?\" Abe asked, \"We all wish we could give Jessica her family back but we can't. The next best thing is her memory of them. Good memories are never a bad thing.\"\n\n\"But if you don't want to answer Jess, that's okay.\" Justine said, glaring at Abe.\n\n\"It's okay.\" Jessica said, \"But I have so many great memories ... I don't know if I can pick just one.\"\n\n\"You and your family seemed to be really close.\" Caleb said, \"That's a good memory I'd think. I don't think any of us really know what that's like.\"\n\n\"I'd say we're pretty close right now, as a family.\" Jessica said.\n\n\"That's true.\" Caleb agreed, \"I meant with blood relatives.\"\n\n\"Your best memory?\" Don prompted.\n\nJessica nodded. \"We were close. Really close. My brothers were the best. We called ourselves the four muskateers. We made it kind of a club and our friends joined too. We went everywhere together. That was great. Probably my favourite memory.\"  \n\n\"The four muskateers. Roaming around, helping people.\" Rick said and he seemed to really like the idea.\n\nJessica looked at him and giggled, \"I don't know that we helped a lot of people but we did roam around together. A lot.\"\n\n\"Knowing you Jess, and the story you told about that boy and the drugs, I'm sure that you helped people.\" Mark said. Rick flashed Mark a smile clearly happy that Mark was on the same page as him.\n\nJessica shrugged and looked down at the cooler bottle she was holding. \"Not the same kind of helping that happened with Trex.\" She said quietly, \"Besides, helping almost always seems to result in someone getting hurt. And not always the helper.\"\n\n\"That sounds like a story to be told.\" Don said.\n\nJessica shook her head. \n\n\"Jess you know I'm going to ask about it the next time you get to truth so you may as well just tell us now.\" Amanda said.\n\nJessica sighed. \"One of my brother's friends was really into motorbike racing. Like we were. Well, it seemed that he and I had a stronger affection for it than my brothers did. When my parents forbade my brothers and I to go to these illegal races, my brothers listened. But, um, Brandon and I, not so much.\"\n\n\"So you were sneaking out of your house with this Brandon guy to go motorbike racing ... without your brothers?\" Justine demanded.\n\nJessica nodded.\n\n\"And how old were you?\" Justine asked.\n\n\"Thirteen.\" Jessica said.\n\n\"Jesus Christ Jessica, what the hell were you thinking?\" Caleb demanded.\n\nJessica shrugged. \"It was fine. Brandon was with me and if for some reason he wasn't one of the other guys from our club was. And Stew, the track owner was really nice. Actually, everyone at the track was really nice. That's why I felt so bad when my parents shut it down.\"\n\n\"Your parents shut down the track?\" Mark asked.\n\nJessica nodded, \"It was illegal anyway. But they didn't want me going there.\"\n\n\"How did they find out that you were going?\" Rick asked.\n\nJessica shrugged. \"I told them.\"\n\n\"You told them.\" Rick repeated. \"Just out of the blue you told them you were going?\"\n\n\"No, of course not. If I had it my way they'd never have known ... sorry.\" She added when she received unimpressed glares from everyone. \"It was omission more than lying.\" Jessica said.\n\n\"So what happened?\" Rick urged.\n\n\"Brandon was having an inappropriate relationship with his teacher.\" Jessica said. \"One night the teacher's husband was murdered. The next day the teacher conveniently told the police about the relationship and that she had no idea where Brandon was the night when her husband was stabbed to death.\"\n\n\"Shit. Really?\" Quinn asked.\n\nJessica nodded. \"If my brothers friends were an extension of our family at the kid level, the police and FBI were an extension of our family at my parents level. We knew them all. Really well. They were at our place all the time. Took me to the movies, for ice cream. They were great ...\" Jessica's voice faded.\n\n\"Jess ...\" Rick prompted after a minute of silence. \n\n\"So, of course we knew Brandon was in trouble right away. The thing was that I knew where Brandon was the previous night. The whole night. We were together, racing. I told the police, my parents flipped. It cleared Brandon but my parents shut down the track. Luckily there were so many high quality riders in the club, Stew managed to go pro. I think that's part of the reason he was so quick to forgive me.\"\n\n\"You asked for forgiveness from the track owner?\" Caleb demanded.\n\nJessica nodded. \"I felt so bad. But he was really nice. He said he would have come forward when he heard of the charges if I hadn't. 'No good sending someone up the creek to protect something as stupid as racing' he'd said.\n\n\"And what happened to you?\" Rick asked.\n\n\"Nothing really.\" Jessica said.\n\n\"Oh, come on.\" Justine said, \"Do you expect us to believe that your parents let that slide?\"\n\n\"They grounded me for a month.\" Jessica said.\n\n\"That was it?\" Rick asked.\n\n\"No.\" she said in a small voice and suddenly sounded like she was going to cry.\n\n\"What else did they do?\" Rick urged.\n\n\"Lay off Rick.\" Amanda said moving to kneel in front of Jessica and take her hands. \"You don't have to tell us if it upset you so much.\" \n\n\"Did your father whip you?\" Chris asked and he looked like he was remembering a personal experience.\n\n\"No, not at all, my parents weren't like that.\" Jessica said. \"They never hit any of any of us, ever.\"\n\n\"So what did they do?\" Abe asked.\n\n\"I had a horse. He was just like Ebony. Big, beautiful, wild. My parents had let me keep him because I promised to be safe on him. Only ride when they were there. Have him trained properly. My parents said that they couldn't trust me to do that anymore, since I hadn't listened about the track. So they sold him.\" Jessica began to cry and Amanda threw her arms around her, Justine did the same from behind.\n\n\"They sold your horse.\" Chris stated. \"I think I'd prefer the whipping. Somehow, it seems less mean.\"\n\n\"Did you ever see your horse again?\" Justine asked when Jessica stopped crying and sniffled while she dried her eyes.\n\n\"No. It wasn't until a couple of years later that they'd buy me anything that wasn't one hundred years old and as slow as molasses.\" Jessica said. \"And even then it wasn't the same as Star.\"\n\n\"Didn't your parents do anything to reward you for saving your friend?\" Don asked, \"They seem like the type that would be proud of that.\"\n\n\"They were proud of that.\" Jessica said. \"And they praised me a lot for that, but they were really disappointed that I'd been sneaking out. And I'm not sure that I ever made that up to them ...\" Jessica began crying again.",
        "\"Jess ...\" Scott said and Jessica looked up in surprise. He was kneeling next to Amanda. \n\nJessica threw herself into his arms, and any restraint that she'd had was gone. Tears soaked his shirt as he rubbed her back, kissed her head and murmured reassurances.\n\nJessica was suddenly aware of Riley, Angus, Jim and Josh around her too. At least one of them was also rubbing her back.\n\n\"What kind of game are you playing?\" Riley demanded, \"Are you wearing make-up?\" he directed at Don.\n\nAmanda explained the game.\n\n\"This was a double dare.\" Don said pointing at his face, \"I couldn't get out of it.\"\n\n\"You look real pretty.\" Josh said with a laugh.\n\n\"Thanks.\" Don grumbled.\n\n\"Jessica was telling us about another time she helped someone.\" Rick said.\n\n\"We know.\" Angus said, \"We came in when she started and didn't want to interrupt.\"\n\n\"We should get Jess to bed.\" Jim said when Jessica was unable to stop crying.\n\n\"Sorry Jess.\" Rick said when Scott scooped her into his arms. Rick kissed her head, \"I didn't mean to upset you so much.\"\n\n\"It's ... okay ...\" she managed to mumble out. Everyone kissed her good night and Scott carried her back to bed where the men arranged themselves around her.\n\n\"Go ahead and cry Jess.\" Scott said pulling her to him. \"I guess we know one of the reasons Ebony was so important to you.\" He added.\n\nFinally Jessica reigned in the tears and turned onto her back so she could get as much contact with all of the men at once as possible.\n\n\"Your parents were pretty tough.\" Josh said, rubbing her foot in his hands. \"Selling your horse was pretty drastic.\"\n\n\"They had to be.\" Angus said locking eyes with Jessica when she looked at him, \"Obviously they realized what they were dealing with ... someone with no boundaries, no sense of self-preservation, no obedience. Don't' start crying again Jess, I'm not saying that to be mean. It's just a fact. That's just you.\"\n\n\"And we love you.\" Riley said casting a look at Angus, \"Everything about you, even those characteristics that make keeping you safe a challenge.\"\n\n\"Exactly.\" Angus added.\n\n\"It should be easy.\" Jim said stroking her leg. \"Given how transparent you are. But it's impossible to know what you're going to do in any given situation. It makes it complicated.\"\n\nJessica sniffled. Angus and Riley had begun stroking her stomach, Scott her other leg. Scott and Jim were working their way higher on her legs while Riley and Angus worked their way lower on her abdomen. \n\n\"Could we have sex now?\" Jessica asked.\n\n\"Try to stop us.\" Scott asked moving his hand the last couple of inches to her pussy making Jessica arch, bringing her tits into Riley and Angus' waiting mouths. \n\nBy the time they passed out an hour later Jessica's throat was raw from screaming. Jessica slept better than she had in a long time and it was almost eleven by the time she and the men woke up.\n\n\"The boys ...\" Jessica said sitting up.\n\n\"Relax Jess. I'm sure someone took them to the club.\" Scott said, \"But why don't we get cleaned up and then we can call down to make sure.\"\n\n\"I'll call.\" Josh said, \"And I'll be there in a second.\"\n\n\"The boys made it to the club.\" Josh said climbing into the shower and taking Jessica's leg from Riley. Scott was busy eating Jessica out. \"And Justine is going to pick them up at one. Everyone will be here for lunch around that time too.\"\n\n\"Thanks.\" Jessica panted just before screaming as pleasure overtook her.\n\n\"That give us two hours to play.\" Angus said. \"Are you up for it?\" he asked Jessica while cupping her tits.\n\n\"Yes ... please don't stop.\" She urged when Angus took a tit in her mouth, Josh brought his mouth to her pussy, Jim to her asshole. Riley fed his cock into her mouth and Jessica took Angus and Scott's cocks in each of her hands and stroked.\n\nBy the time the two hours were up they were all overly relaxed. They snoozed for fifteen minutes, got dressed, and waited for ten minutes in the hotel suite before there was a knock at the door.\n\nJessica stood looking out the window wrapped in Scott's arms. But when the door opened the boys charged her and Scott and the next two hours were filled with chaotic conversation, laughing, and eating. The boys were so full of amusing stories about their last morning at the club that Sean and Abe managed to shovel food into Jessica without the use of the TV as a distraction.\n\nEventually they all went shopping. \n\n\"Would you put this painting up at home?\" Jessica asked her men, pointing to a beautiful night scene of Paris.\n\n\"Of course.\" Scott said, \"But don't forget we'll be leaving home soon. We can't be sure we'll be able to take it with us.\"\n\n\"I know. But until we leave, it can remind us of our trip.\" Jessica said.\n\n\"Buy it then.\" Riley agreed.\n\n\"I'm going to pay for this.\" Abe said holding up an Eiffle tower statue, \"I'll go with you to pay.\"\n\n\"Okay.\" Jessica said. She and Abe moved to the cash while everyone else continued to look around.\n\n\"I'll pay for the painting.\" Abe said.\n\n\"You don't have to do that ...\" Jessica said looking back at him and bumping into someone.\n\n\"Excuse me ... are you okay?\" a man said, placing his hands on Jessica's shoulders and righting her.\n\nJessica looked up at a middle aged man. Handsome and in good shape, Jessica blinked at him. He had a movie star look to him that made him look familiar.\n\nJessica studied his face for a moment.\n\n\"Oh dear, you really have to watch where you're going.\" A woman appeared at his side. Also middle age, but gorgeous. She linked an arm with the man but put a hand on Jessica's arm, \"Are you okay my love?\" she asked.\n\nJessica looked between them certain that she had bumped into a pair of celebrities. She felt like she should be taking advantage of the situation but for the life of her she couldn't place them.\n\n\"I'm truly sorry.\" The man added looking up at Abe. He seemed to blanch. Jessica noticed the woman do the same. Jessica looked over her shoulder. Her heart dropped when she saw the expression on Abe's face. He was furious and it showed. He looked dangerous. Very dangerous.\n\n\"It's okay.\" Jessica said quickly turning back to the man and the woman, \"It was an accident. Excuse us please.\" Jessica said, took Abe's hand and dragged him behind her past the man and woman.\n\n\"What is wrong with you?\" Jessica demanded. \n\n\"People should watch where they're going.\" Abe said looking back in the direction of the couple who for a moment returned the look and then hurried away.\n\n\"It was an accident.\" Jessica said. \"Geez, what is it with you clan people? Were you raised in barns or something?\"\n\nAbe seemed to give his head a shake.\n\n\"Jess, if you had a chance to go back to your life. Right now. Would you take it?\" Abe asked.\n\n\"What? No.\" Jessica said. \n\n\"You wouldn't?\" Abe asked. \"You could do everything you've dreamed of. School, work ...\"\n\n\"This is my life.\" Jessica said, \"I'm happy with my new family.\"\n\n\"So you wouldn't even try?\" Abe asked.\n\n\"If I could have both I would. But that's never going to happen.\" Jessica said and began walking toward the cashier again. Abe followed but didn't say anything else.\n\nThey paid for the their items and found everyone again and still Abe hadn't said anything else.\n\n\"Excuse me for a few minutes.\" Abe said as they all moved to the next store. \"I'll be right back.\"\n\nIt was half an hour later when Abe returned and he still looked upset about that couple. Jessica tried to talk to him about it but he seemed to be avoiding her. She couldn't get a moment alone with him.\n\nEventually he seemed to relax and Jessica gave up on talking to him and concentrated on shopping with the boys.\n\nBy six they were back at the hotel eating dinner.\n\nIt seemed a somewhat solemn affair, everyone realizing that it was their last dinner at the resort.\n\nThey dropped the boys off at the club at seven and Scott took Jessica's hand as they said goodbye to everyone.\n\n\"Are you ready?\" Scott asked as they walked down the street. \n\n\"For what?\" Jessica asked.\n\n\"To throw self-preservation out the window?\" Scott asked and laughed when Jessica's face brightened. \"I can't believe I'm going to do this.\" Scott added. \"The guys will kill me if anything happens to you.\"\n\n\"What are we going to do!\" Jessica demanded pulling on Scott's arm. \n\nScott leaned in to her ear and whispered, \"Jousting.\"\n\n\"Yes!\" Jessica yelled, pumping her arm in the air. \"I heard they had that here! Let's go, come on!\" she demanded pulling on Scott's arm.\n\nScott laughed the whole way to the castle. Jessica was deliriously happy the whole way there. In the arena they spent an hour learning the art of jousting without a horse, another hour on a horse, and by the third hour they began the competition. They didn't knock people off as part of the competition. Instead they used paint to indicate who got closest to a hit to the heart. This seemed to disappoint Jessica but she got over it quickly and proceeded to skewer many of the competitor that she played against. Of course, the competitors were other guests many of whom barely knew how to ride a horse so it wasn't a surprise when Jessica and Scott won many of the competitions. When it was Jessica's turn to compete against Scott, she refused.\n\n\"Jess.\" Scott said riding over to her, \"It's a game with paint. We're not going to hurt each other. Come on, it's fun.\"\n\n\"Doesn't it feel weird?\" Jessica asked. \"Playing against one another?\"\n\n\"A little.\" Scott agreed. \"If you really don't want to we can stop.\"\n\n\"I want to stop.\" Jessica said. So they forfeited their turn. But even with that, Jessica and Scott were one of two couples that had the highest scores, so they won.\n\nThe prize was a voucher for the jewelry store.\n\n\"I know what we should get.\" Jessica said pulling Scott by his hand to the store. \"I saw it the other night when Riley and I got the magnifying glass.\"\n\n\"Whatever you want ...\" Scott said, laughing as he followed her. \"It's perfect.\" He added when Jessica marched them up to a display case and pointed at a charm in the shape of a knight on a horse, his lance pointed forward. It was made of gold and had some gems in it.\n\n\"It costs more than the amount of the voucher.\" Jessica said, disappointed.\n\n\"I'll pay the difference.\" Scott said and he did. \n\n\"Do you make jewelry alterations here at all?\" Jessica asked the sales man.\n\n\"We resize rings, yes.\" \n\n\"Is there any way you could add charms to this necklace?\" Jessica asked touching the heart that hung from her neck.\n\n\"I think so.\" The man replied.\n\n\"By tomorrow?\" Jessica asked.\n\n\"I can put a rush on it.\"\n\nJessica pulled the heart shaped stone, magnifying glass, and car from her purse and placed them next to the knight on the horse. Undoing her necklace she handed it to the salesman, \"How much will it cost?\"\n\n\"That doesn't matter.\" Scott said pulling Jessica closer, \"I'll pay or it.\"\n\n\"Thank you!\" Jessica said kissing him.\n\n\"Come back tomorrow morning around 11, it should be ready.\" The salesman said.\n\n\"Now for the next part of our night.\" Scott said when he and Jessica left the store, \"And again, the guys are going to kill me for this.\" \n\n\"What is it?\" Jessica asked, perplexed when Scott stopped in front of some lockers. He produced a key, opened a locker and pulled two canvass bags and two suit bags out of them.\n\n\"This is for you.\" He said handing one of the canvas and suit bag to her. \"There's a wig, make-up and a dress in there.\" He said, \"I have a wig, fake mustache and a suit.\"\n\n\"Are we going to the casino?\" Jessica asked, \"Please tell me we're going to the casino!\" she said getting excited.\n\n\"How'd you figure that out?\" Scott asked.\n\n\"What else do we need wigs for? And a fake mustache? Come on, let's go!\" \n\n\"Okay, okay ...\" Scott said, laughing. They each went into the castle bathrooms and when they met in the hallway they barely recognized one another.\n\n\"That mustache actually looks good on you.\" Jessica said.\n\n\"Not one for facial hair I guess?\" Scott asked.\n\n\"Not usually.\" She said sliding into his arms and stroking his mustache.\n\n\"Better not do that.\" Scott said, holding her at arms length and looking her up and down. \"Or we'll never make it to the casino. I mean as much as I like you with that dress on I'd rather see you without it ... and that hair. Red suits you baby.\"\n\n\"Thank you.\" Jessica said with a smile.\n\n\"Just remember.\" Scott said as he hailed a cab, \"No card games for you. Stick to games that are between you and a machine ... at least the machine can't see right through you.\" He added when they climbed in a cab and Jessica looked at him with a perplexed expression.\n\n\"Okay.\"\n\nAt the casino they had so much fun. Scott did well at the card games, Jessica won some money at the slot machines, and it was one in the morning when Scott slid onto a seat at the penny slots next to Jessica.\n\n\"Jess, the guys and I have a surprise for you. We want to role play with you. Now. Are you up for it?\"\n\n\"Yes!\" Jessica said excited. \n\nScott chuckled, \"I thought you'd like that. So two things. First, we have to pick a scenario. I thought of three possible ones. You could pick one of the three or come up with one yourself.\"\n\n\"Pick your favourite one.\" Jessica said, \"And keep the other two as a surprise for next time.\"\n\n\"I don't have a favorite.\" Scott said, \"I don't think I could choose so pick a number from one to three.\"\n\n\"Two.\" Jessica said. \n\n\"Good choice.\" Scott said with a sultry cock of his brow, as he pulled his cell phone out of his pocket and dialed.\n\n\"Hey.\" Jim said, Scott hitting speaker on his phone, he held it between him and Jessica.\n\n\"Hi.\" Jessica said smiling up at Scott.\n\n\"Hi baby.\" Jim said, \"We're all here. Where are you? It sounds busy.\"\n\n\"We're at the replica casino.\" Scott said and winked when Riley growled, \"You're where?\"\n\n\"The casino but don't worry we're wearing disguises. You won't even recognize Jess when you see her.\" Scott answered. There was silence at the other end of the phone but after a few moments Riley muttered, \"I hope you're fucking right.\"\n\n\"I believe I have a pretty good track record.\" Scott said with a laugh. \n\n\"So Jess picked scenario two. You guys know what to do, right?\" Scott asked into the phone.\n\n\"We're all set.\" Jim replied. \n\n\"Riley and I may need some sidebars.\" Angus said, \"I'm not sure how good I'll be at this.\"\n\n\"It's okay.\" Jessica said, \"It's just for fun. There is no right or wrong way to do it.\"\n\n\"K Jess ... we'll do our best.\" Riley added.\n\n\"I will too.\" Jessica replied.\n\n\"K, we're heading back to the hotel now. Taking a cab, we should be there in about fifteen minutes.\" Scott said and hung up the phone. Jessica grasped Scott's hand in both of hers as they waited for a cab. She was so excited she bounced with eagerness next to Scott for the whole cab ride back to the hotel. Even the cab driver, who had seemed anything but impressed to be working, was smiling by the end of the ride.\n\nIn the elevator Jessica pressed against Scott. She played with his mustache. \"I wonder what that would look like after you ate me out.\"\n\n\"Probably like a drowned rat, but there's only one way to find out for sure.\" Scott said in a throaty voice. \n\n\"Mmm, I can't wait.\" Jessica said as the elevator door opened on their floor. Scott guided her out of elevator but rather than go to their main hotel room, where Jessica had expected her men to be waiting for them, Scott turned right and went to the room at the end of the hall. \n\nAt the door Scott gave Jessica a mischievous grin and said, \"The rp starts now.\"\n\nJessica gasped as Scott pulled her in front of him suddenly, forcefully, and pulled her arms behind her back. Swinging the hotel door open Scott pushed Jessica inside the dimly lit room. Following her in, Scott tightened the grip on her arms, bruising her, as he kicked the door shut behind them.\n\nJessica looked around the room and gasped. With Scott propping her up, Jessica's mouth hung open and her mind was slow to comprehend what she saw. Amidst the flickering candle light of several dozen well placed candles, stood her men. Stock still. Wearing leather. Black, studded, chained, leather. They looked so dangerous. Sexually, and in every other way, they were terrifying. And Jessica loved it. And just as her mind began to come to terms with her men and what the sight of them was doing to her body, it turned its attention to the room and what the men had done to it. \n\nThey had moved all of the furniture out of the way except for a large, heavy, and ornate desk. Behind it stood Jim. He held a large, spiked gavel in his hand as he stood statue still and stared at Jessica. On either side of him stood Riley, Josh and Angus. Along the walls of the room stood five torture devices. The same ones they'd seen at the museum. Jessica's mind went blank as her pussy exploded soaking her undies, her pants. It squeezed, hard, her clit quivering hard. Her tits suddenly felt too large for her bra as her hard nipples pressed against it ... goose bumps covered every surface of her body as the men gave a collective groan, cumming in their pants. \n\nJessica moaned, whimpered, she wanted her clothes off, her men on her, in her. She wanted to feel those studs and leather on her skin ... ultimately their flesh on hers ... she wanted their cocks in every hole she had, stretching her, pounding her, filling her. As if reading her mind Josh stalked toward her and without a moment's hesitation he tore her shirt open, ripped her bra and pants off. In seconds Jessica was naked before them, and Jessica was certain he'd be in her but instead he moved back to his place next to Jim. Jessica whimpered with need. Back in his place Josh seemed be fighting the urge to return to her ... Jim, Riley and Angus strained toward her as if they too intended to take her. But much to Jessica's disappointment they stayed where they were, chests heaving from the effort. Scott pulled Jessica back against himself, hard and Jessica could feel his cock straining against his pants pressing into her ass cheeks. She was about to beg the men to take her when Jim slammed the gavel onto the desk three times. Each strike made a noise so loud that Jessica jumped, startled.\n\n\"Court is now in session.\" Jim's voice boomed. He locked his eyes on Jessica's \"You stand accused of sexual witchcraft. We will hear evidence today of your sorcery and if found guilty, you will be given a suitable punishment. But before we begin I will advise you that should you need to stop at any time, you are to say 'mercy'. It will stop everything, immediately, do you understand?\" Jim paused and in his regular voice he said, \"Okay Jess ... if anything hurts too much, just say mercy and we'll stop.\"\n\nJessica nodded, \"Okay.\" She said in a breathless whisper.\n\n\"Very well.\" Jim said resuming his deep, loud, voice and Jessica was impressed with how convincing he was as a judge. \"I call as the first witness, the Mayor of our town, Mr. Joshua.\"\n\n\"Wait.\" Angus said, \"Before we start ...\" he stalked over to Jessica. Muscles rippling under the leather ... he looked so sexy ... they all did, Jessica felt like she was going to explode. \"Great disguise babe,\" he said playing with a few strands of the hair from the wig, \"But do you mind if we take it off? I want to fuck you when you look like you.\"\n\nJessica nodded and Angus pulled the wig off, the bobby pins in her hair, out, and fluffed up her hair. \n\n\"Thanks baby.\" He growled. \"Fuck you soon.\" He added and moved back to his spot leaving Jessica vibrating with need.\n\n\"Mr. Mayor.\" Jim prompted.\n\nJosh took a step forward, locking his eyes on Jessica. \"As the Mayor of this fine city my integrity is beyond reproach. You can imagine my surprise when I found myself drawn to the stockade quarters and to the accused in the middle of the night. Once there the accused, through her sexual witchery, made me find her pussy. With my fingers at first. Her spell had me fingering her very wet hole ... stretching it, preparing it. She made my cock hard and then she made me ...\" Josh paused, covering his face with his hands and shook his head, very convincingly conveying embarrassment. ",
        "\"Mr. Mayor, what did the accused make you do?\" Jim prompted.\n\nJosh lowered his hands and locked his eyes on Jessica, \"She made me take her pussy with my cock. She was so wet, so tight ... your honor, she made me cum in her.\"\n\n\"My apologies Mr. Mayor,\" Jim said, \"but I am having a hard time visualizing the events in your testimony. Re-enact them.\"\n\n\"Yes your honor.\" Josh said and moved to one of the devices by the wall. He lifted it and brought it to the middle of the room. Jessica's pussy squeezed as she watched him place the stockade on the floor.\n\n\"We bought all of these devices.\" Scott whispered in her ear, his hot breath sending shivers of anticipation down her spine. \"We each picked a favorite since you liked them all. The stockade was Josh's. You can pick one too baby, we'll buy it.\"\n\nJessica tilted her face into Scott, \"Okay ... thank you, this is so hot.\"\n\n\"Mmm, it's going to get hotter.\" Scott said with a sexy laugh.\n\n\"The prisoner was in the stockade.\" Josh said, \"Serving her sentence for some minor offense.\"\n\n\"Place her in the stockade.\" Jim said to Scott, who silently dragged Jessica to the wooden devise, forced her to bend over and locked her in by her head and hands. \n\n\"Continue with your testimony Mr. Mayor.\" Jim said when Scott moved away and Jessica stood shuddering with anticipation in the middle of the room. \n\n\"Thank you.\" Josh said from behind Jessica. Suddenly, without warning, he landed a stinging slap on Jessica's ass cheek, and then the other. \n\n\"Oh!\" Jessica gasped, feeling her ass cheeks turn pink and the sting from the slaps seemed to travel down to Jessica's pussy making it squeeze hard and into her pulsing pussy Josh rammed two fingers ... and Jessica came, squirting onto his hand.\n\n\"Oh fuck ...\" Josh moaned, panting filled the room and Jessica's knees felt weak as she shuddered even harder with anticipation.\n\n\"Your honor,\" Scott said in a strangled voice. Jessica tried to see Scott, he stood just beside her but far back enough that she couldn't see him. She was so restricted by the stockade in fact that she suddenly realized how vulnerable she was. Had she really been serving a sentence naked and alone in a stockade, anyone could help themselves to her. Inexplicably that turned her on, a lot. It made the pit of her stomach ache with need.\n\n\"Yes Father?\" Jim replied.\n\n\"As one of the highest ordained priests in the land, I too am a man of honor. And I can collaborate the Mayor's testimony about this young, sexy, witch and her enticing ways. I too was beckoned from my bed in the rectory, late at night. And she led me to her tight, pink, asshole. Making me part her sexy asscheeks, like this ...\" Scott said and Jessica felt his hands prying her cheeks apart, \"I was compelled to suck on her asshole. Your honor, look at that hole ... how can one resist that?\" Jessica moaned, as she heard movement around her and she realized that the men had moved to stand around her, looking at her asshole. \n\n\"That is a beautiful, pink, puckered hole.\" She heard Angus say in a low, guttural growl.\n\n\"And it tastes so good.\" Scott said, \"It's so tight that it takes a lot of dedicated work to draw it out.\"\n\n\"Did she make you play with her clit Father?\" Angus asked, his voice so throaty Jessica's pussy clenched. \"As the foremost business man in this community, I was very surprised to be summoned to her in the middle of the night. She made me part her pussy lips, wide and suck her already swollen clit between my teeth, gnaw it, over and over, as she nearly drowned me in her juices making my face slide against her pink, quivering meat.\"\n\n\"Oh!!\" Jessica screamed as her pussy convulsed and she came hard squirting all over the floor, the men cumming seconds later . They must have worked their cocks out of their pants because Jessica felt cum shoot onto her back and tits.\n\n\"She made me play with her clit.\" Riley said as he moved into her view. Locking eyes with her, Riley moved closer, his cock, covered in cum and hard again, vibrating as he brought it to her lips, tracing them with his head. The other men moved into view also and Jessica's breath caught. The leather outfits accentuated every rippling muscle in their bodies ... the leather crotch of their pants showing of their huge balls even as their cocks hung out. \"As the head of police here in town, I am above reproach in my behaviour, but I somehow found myself with my cock in her mouth one night after eating her pussy out. It was like I was in a trance ... unable to resist fucking my cock deep in her throat. And when I came ... she ate it. All of it. Swallowed my cum as if it were milk.\"\n\nRiley dipped the head of his cock between Jessica's lips and pulled out ... teasing her, and when Jessica tried to take more he pulled back. It was easy to see by his expression that denying her his cock took a lot of effort. His dark eyes flashing with need never left hers eliciting whimpers of frustration from Jessica.\n\n\"You won't tempt me again young witch...\" Riley said in a husky voice. \"Beware your Honor,\" he added, and Jessica could see Jim from the corner of her eye. His cock, hard and vibrating, stuck out from his leather pants and he was rubbing its tip. \"She will lure you into her wickedness also and once you've been in her you have to go back. Over and over. It's an addiction,\" Riley continued in a low, hypnotic voice, his expression softening as he watched her, \"the feel of her on you. Her taste ... it will take over your life.\"\n\nIn the flash Jessica could see the whole story. \n\n\"Please sir,\" she whispered, eyes still locked on Riley's. \"I beg of you, let me go. If you care about me at all, let me live a normal life.\"\n\n\"Care about you?\" Riley asked as the other men moved closer and Jessica scanned their faces before returning to Riley's. They were curious and she could see a hint of uncertainty creeping onto Riley's expression. She nodded encouragement. Clearly the men had a storyline in mind. They could pause the game and compare ideas, Jessica and Scott had done that early on in their role plays. But they later advanced to the point of making it up as they went along and it was far more rewarding that way. For a moment she worried that she would shake Riley, Angus, Josh and Jim's already fragile confidence in their abilities to be creative but then Riley returned her nod and seemed back on track when he said, \"How could I, Chief of police, upstanding citizen, care about a poor peasant girl, put in the stockade for stealing a loaf of bread. Using some dark powers to lure my distinguished colleagues and me to her at night to perform unspeakable acts?\"\n\n\"I know you cared because you gave me pleasure.\" Jessica said, her voice shaking with need. She was so turned on. She shifted her eyes to Angus, \"You all did. While the other men would come and take what they need never once caring about my satisfaction, you men began to take your time with me.\" She slid her eyes to Josh, \"Stroking my clit.\" She looked to Scott, \"Fingering me ... sucking my nipples, pinching and pulling ... making me squirt. That was the first time I was in the stockade two years ago. You never let me see who you were, so when I was released I was so nervous about every man I saw. Never knowing who had taken me. I'd tried to leave town and somehow I'd been accused of stealing and ended up back in the stockade.\" Jessica paused to catch her breath. She was so wet and horny, and the men were moaning, cocks vibrating in her face. \"And you came to me again, telling me never to leave town. When I was released again you began taking me whenever you could catch me alone. Always coming up behind me, blindfolding me. And that was okay for a while. You would feed me, make sure I had clothing, a roof over my head. But you could never give me what I really wanted, a relationship. A husband. A family. And I understood that. You had always told me you would never give up your lives for me. But when I wanted to leave, start over somewhere, have a family of my own, I ended up here. Please,\" Jessica added, sweeping her eyes back to Riley, \"Let me go.\" \n\nJim cleared his throat. \"Is this true gentlemen?\" he asked.\n\n\"It was you too.\" Jessica said looking at Jim and catching her breath ... the studs on the crotch of his pants made his cock look even more appealing, if that was possible. His head oozed pre-cum and the veins in his cock seemed to bulge more. \"I recognize your voice.\" She added when Jim looked taken aback. \"You like to spank me as you take me from behind ...\"\n\n\"You are a witch and you made me do those things.\" Jim replied.\n\n\"I'm not a witch.\" Jessica replied, \"I'm an innocent girl who wants nothing more than to start a new life. Please let me go and I won't breathe a word of this to anyone. I promise.\"\n\n\"We can't.\" Scott jumped in. \"Someone saw us with you in the square. We must protect our reputations ... there must be a trial.\"\n\n\"But if you can prove you are not a witch, you will be free to go. If not ... you will be in the stockades for the rest of your life. Understood?\" Jim asked with a moan. Jessica shuddered, so close to cumming.\n\n\"How can I prove I'm not a witch?\" she managed to ask.\n\n\"There are tests for that.\" Josh said and from the tone of his voice Jessica knew that the tests were going to be extreme. She couldn't see the other devices but she remembered that the ones she'd seen around the room were some of the most scary ones featured in the museum. \n\n\"Tests?\" Jessica whispered.\n\n\"Tests ...\" Riley growled and moved alongside her where Jessica couldn't see him. Suddenly his fingers were parting her pussy lips. \"Pussy torture tests.\" He added as he slammed three fingers into her, \"A witch can escape the pain ... a normal peasant girl can't.\"\n\n\"Oh God!\" Jessica exclaimed and came, soaking Riley's hand, her pussy squeezing his fingers hard.\n\n\"Fuck!\" Angus growled as he joined Jim, Scott and Josh in spraying their cum all over Jessica's face. Moments later Riley exploded, covering Jessica's tits and belly with his cum. \n\nJessica heard movement around her but she couldn't open her eyes. Cum caked her eyelids. She heard a scuffling sound and knew the men were moving something heavy around. Suddenly her hands and head were free and she was pulled upright by the neck. A huge, strong, hand gripped her neck and gave her a slight shake.\n\n\"Wipe your eyes.\" Josh commanded in her ear, \"With your fingers ... and lick them clean.\"\n\nJessica did, and made sure to lick her fingers in the most suggestive manner she could. She was rewarded with Josh's low growl in her ear. When she could see again she saw that the men had dragged over a device that looked absolutely terrifying. It looked like a wide saw horse with two large stakes sticking out of it. The stakes were covered in bristles and to the front of the first stake there was what looked like a pin cushion with many tiny pins sticking out of it. Protruding from the back of the sawhorse was a post and from it protruded a metal pole with a tray resting at the end. Suddenly Jessica was lifted between Josh and Riley and carried to the device. Jim had lowered the body of the sawhorse, much to Jessica's relief, and she soon found herself straddling it as it lay at her feet. Angus pushed her back against the upright pole and Scott fastened a harness that Jessica hadn't noticed around her, effectively pinning her to the post.\n\n\"I love when your tits are covered in our cum.\" Josh said, giving her right tit a small slap. \"That's what peasant girl tits are for ... covering in cum, and slapping.\" He added, slapping her tit again, only harder. He paused and examined Jessica's expression. \"Baby,\" he said leaning in closer, \"You're sure you're okay with this?\"\n\nJessica nodded, \"I am Josh, I promise I'll say mercy if I don't like something. Are you okay with it?\"\n\n\"Maybe too okay with it.\" Josh said and caressed her right tit, now pink from his slaps, \"There's rough and then there's rough. This may end-up being more than any of us expected.\"\n\nJessica looked around at the other men who seemed to be second guessing themselves also. \n\n\"I want this. It's a game I want to play with you. And I like rough ... I trust you.\" Jessica said. \"I know you're acting and I will be too. Anything that is real will be prefixed with mercy. Otherwise, it's acting.\"\n\n\"Okay.\" Josh said when the other men nodded agreement. \"So,\" Josh said, back in character, \"Are you prepared to admit that you are a witch?\"\n\n\"No.\" Jessica replied and a chill ran down her spine when the expressions the men wore simultaneously shifted to dark, seductive, sadistic, delight.\n\n\"Very well.\" Jim said and nodded to Angus and Riley who ducked down behind Jessica. There was the sound of gears turning and the sawhorse as well as the tray above it rose up several inches closer to Jessica. Jessica shuddered as she realized that the tray had about a hundred tiny pins sticking out of it, tips up.\n\n\"This should be a little higher.\" Scott said and raised the tray until it was at Jessica's belly button height. \"And these,\" he added, crouching near the stakes, \"should be aligned with your holes ...\" he paused as Angus pried Jessica's ass cheeks open. Scott moved the stake until he seemed satisfied with its location, and then with his one hand he spread Jessica's pussy lips wide open, and moved the other stake until it aligned with her pussy hole. He then moved the pin cushion closer to it. \"Every time you refuse to admit you are a witch, we will raise these parts of the machine. Eventually these stakes with their rough and pointing bristles will be in your pussy and asshole. These pins will be pressed into the pink flesh of your pussy,\" he added running his fingers over the pins on the pin cushion, \"and these pins will be pressed into the underside of your tits. The only way to avoid being skewered is to admit that you are a witch and that you seduced us into fucking you.\"\n\n\"Never ...\" Jessica whispered.\n\n\"That deserves raising these two notches.\" Riley said and growled in anticipation as he and Angus raised the sawhorse and tit tray two more levels. Then added another. Jessica gasped. Suddenly the bristles at the tips of the stakes were pressed against her pussy lips and ass cheeks.\n\n\"You'll notice that we left your hands untied.\" Scott said, \"And that's because you are expected to keep them behind your back at all times. No matter how painful things get, your hands are not to move forward to protect yourself. And conveniently, they are available to provide relief for us. It is stressful testifying against you.\" Scott added while sliding his hard, vibrating cock into Jessica's hand. Riley put his in her other hand. Jessica clutched them, moaning as she gave a short, fast flick of her wrists, twisting and stroking their cocks near their bases. She was so happy to be touching some part of them that she gasped with pleasure. It didn't take more than a few strokes before Riley and then Scott came. Their cocks were quickly replaced by Jim and Josh's. Jessica stroked them and then Angus and as Angus came Jim began lifting the stakes and tit tray higher. And he didn't stop. Jessica felt her ass cheeks spread apart by two strong hands and realized it was Riley, and suddenly the prickly bristles on the stake were entering her tight asshole and pussy. Throwing her head back, Jessica cried out as she came ... hard. Soaking the stake in her pussy. Jim kept raising them and soon the stakes were almost fully in her holes, the nails dug into her tits, and the pin cushion parted her lips as it pressed into her meat. Crouching next to her pussy Josh spread her lips and the pulled them down over the pin cushion, pressing them onto it and Jessica had a moment to realize that she was glad that neither the nails or the pins were real ... they were modified versions of themselves. Pointy enough to cause discomfort but not sharp enough to do real harm. And the men had lathered the bristles in lube. She may not have noticed in her pussy as much but she definitely did in her bum ... and then one of the men must have pressed a button because the stakes began pistoning into her, like the fuck machines had back at home. The pin cushion vibrated and suddenly she was cumming, screaming long and hard as the bristles rubbed against her cervix and clit. It wasn't until she sagged in post orgasmic bliss that she realized that the men had cum too, spraying her. \n\nBut the men didn't take time to ride out their orgasms. Jessica found herself removed from the stakes and carried over to a large metal x that had materialized in the center of the room. It was upright and Jessica realized that this was 'the wheel'. Women were to be tied open on the x, hands and legs spread. But the men were altering things and Jessica found her arms tied to the top of the x and then her legs spread and raised, her ankles tied next to her hands. Her legs were pulled so far back that her pussy and ass were horizontal to the floor and open to the men. Jessica could see them. Riley and Jim pushed her knees flat against the arms of the x and tied them as well, making Jessica's pussy and ass into table top.\n\n\"Perfect.\" Scott said delivering a stinging slap to her pussy. Her lips were parted because her legs were and the slap landed on her soaking wet pink meat and clit. Jessica moaned as her pussy quivered. \"Just what we've always wanted.\" Scott continued, sliding his thumb into her pussy and giving her gspot several hard, fast, jabs. \"Our own human candle holder.\" And he chuckled when Jessica gasped and gave him a worried look.\n\n\"Maybe rather than the stockade we'll just mount you on the wall like this.\" Angus added, \"Bent like a pretzel, pussy out, ass out, mouth ...\" he said shoving his fingers into Jessica's mouth, \"out. Tits,\" he added organizing her tits so they were fluffed out in between Jessica's legs, \"Available ...\" he continued with a growl, pinching her nipples, pulling and twisting them. \n\n\"Oh!\" Jessica screamed and came, a fountain of her juices spraying out of her pussy straight up into the air.\n\n\"Mmm ... our own water fountain.\" Josh add and opening his mouth wide he covered Jessica's pussy with it and slurped. Sealing his lips around her pussy lips, he sucked. Jessica felt her clit, her meat, her hole, getting suctioned into his mouth and she came again, screaming as Josh gulped down her juices.\n\n\"Holy ... fuck!\" Jim exclaimed, the other men growled and Jessica felt their hot cum spraying her thighs and sides.\n\nJosh lifted his head from Jessica's pussy and his face was glistening wet. Licking his lips he said, \"You are delicious.\"\n\n\"She is.\" Scott agreed. \"Best pussy I've ever had.\" He slid his fingers in Jessica's pussy, bent them and turned them inside her. Pulling them out, slick with her juices he smelled them, inhaling deeply before sliding them into Jessica's mouth. \"Taste yourself.\" he said as Jessica sucked his fingers clean. \"You taste good, don't you?\" he asked when there was no more of her cum to clean from his fingers. Jessica nodded. \n\n\"So good,\" Riley said lying his hand on Jessica's pussy and leaning in closer to her, \"that we'd be crazy to let it go.\" Riley's voice was sinister and the way he stared at Jessica caused shivers to run down her spine. \"No one saw us fucking you. And we know you're not a witch. But you, trying to leave, is unacceptable. This is your punishment. And when we're done, that will be your new home.\" Riley turned to point at a cage that stood tall and narrow by the wall. \"There are access holes to your mouth, ass, pussy and tits. You will be available to us twenty-four seven.\" \n\nJessica shuddered, her pussy squeezing. \n\n\"That's right.\" Scott agreed. He was holding a candle in his hand and looked from it to Jessica as the fingers of his other hand spread her pussy lips wider, \"And maybe we'll still put you out at night in the stockade for the other men in the village to use. And if you ever think of leaving again, remember what we'll do to you ...\" Scott ended, a dark, hungry expression on his face as he locked eyes with Jessica and tilted the hand that held the candle. Jessica screamed as the hot wax landed on her clit. Head back, eyes closed, Jessica struggled to escape the heat. Scott righted the candle and as the severe heat began to fade Jessica worked to catch her breath, her clit vibrating under the wax. Her heart pounded, adrenaline rushed, and she was surprised by how much she liked the feeling. Opening her eyes Jessica saw the red, melted wax on her pussy, and something about it turned her on so much. A moan escaped her. Looking up at Scott she found him watching her with concern. Glancing at the other men she found them doing the same. But their cocks were rock hard and vibrating. So tantalizingly close to her but she couldn't reach out and touch them, suck them, or slide onto them. That frustration coupled with the pulsing of her clit made Jessica's pussy explode. The suddenness and intensity of it had Jessica's head back as she screamed uncontrollably, her body tensing, her pussy squirting.",
        "\"Fuck!\" Josh yelled. And the next thing Jessica knew the wheel was lowered and Scott was straddling her, his cock slamming into her pussy, behind him she could see Josh and she felt him fucking into her ass. Angus pulled her head back by her hair and slammed his cock in her mouth, deep down her throat, and Jim and Riley slid their cocks into her tightly bound hands and fucked in and out as Jessica gripped their shafts. The room was filled with the sounds of moaning and Jessica thought she was going to explode out of her skin. As the men pounded into her harder they began making noises that had Jessica's pussy and ass squeezing her so hard it almost hurt and when Riley and Jim began slapping her tits, Jessica came undone. Screaming hard on Angus' cock her whole body convulsed and then the men came. Snarls filled the room and Jessica gasped as Jim and Riley's hands constricted on her tits, squeezing hard. Angus' hands, which held her head in a vice grip, squeezed so hard that Jessica wondered if her skull would crack. Scott's hands on her sides, Josh's on her ass, all bruising her. And she loved it ... as the men's cocks jerked and sprayed into and on her, Jessica came again. She screamed long and hard and her pussy, ass, mouth, hands milked the men's cocks so hard it was likely they'd be as bruised as she would. \n\nNeither Jessica or the men knew how long the screaming and cumming continued but eventually there was nothing but the sound of panting. Angus pulled out of her mouth and crouched by her head kissing her neck, cheek, lips.\n\n\"Fuck baby, sorry I fucked up the role play. We had a bunch more shit planned but I just needed to be in you.\" Josh said. He was still in her ass, caressing her cheeks with his hands, and he looked over Scott's shoulder. Jessica had lifted her head when Josh spoke so Scott leaned down to kiss her but he paused over her tits.\n\n\"Shit baby, Riley and Jim squeezed the shit out of your tits ... they're still blue.\" Scott said.\n\n\"God ... sorry Jess.\" Jim said, kneeling next to her now he kissed the tit nearest him gently, \"I kinda lost control.\"\n\n\"Fucking understatement of the year.\" Riley added kissing the one nearest him, \"Sorry baby.\"\n\n\"Don't be.\" Jessica said in a voice hoarse from screaming. \"I loved it. You made me cum so hard ... thank you.\"\n\n\"I fucked the shit out of your throat baby, are you okay?\" Angus asked caressing her neck.\n\nJessica nodded, \"I think I just lost my voice from screaming.\"\n\n\"You screamed a lot,\" Scott agreed looking at her with appreciation, \"The wax wasn't too much?\"\n\n\"No,\" Jessica said shaking her head, \"It was hot.\" Jessica giggled when Scott cocked an eyebrow at her double entendre. \"It reminds me of the hot water game.\" \n\n\"Good, we'll do it again then.\" Scott said with a smile. \"I'd planned to completely cover your pussy in wax, wait for it to harden, and then peel it off with a knife ... there's something appealing about digging around in your pussy with something sharp.\" He added, his voice guttural again. \"But I think this was good enough for the first time.\"\n\n\"You really like that idea.\" Angus commented when Jessica's breath caught and she shuddered with anticipation.\n\n\"God you're so fucking hot.\" Josh said when Jessica had nodded enthusiastically.\n\n\"Fuck yes.\" Jim said, grinning at Jessica.\n\n\"You guys are too.\" Jessica said, \"You're great at role playing. I had no idea you had such great acting skills.\"\n\n\"I don't know about our acting skills, but it was fun baby. We have to do it again, but I think we've done enough for tonight. It's late, we should get you cleaned up and to bed.\" Riley said. \n\nJessica nodded, \"Can you show me the other devices first? Did you really buy them?\"\n\n\"We can, and we did. We thought you may like them as a souvenir of our trip.\" Jim said as he and Riley worked to untie Jessica's hands and feet. \n\n\"Oh, wow, I do. Thank you.\" Jessica said as Angus scooped Jessica into his arms.\n\n\"No baby, thank you for letting us use them on you. You're a lot of fun to play with.\" Angus said kissing Jessica when she gave him a flattered smile. \"So this is the cage that Riley mentioned.\" Angus said carrying her over to the tall metal apparatus that stood by the far wall. \n\n\"Not much room. Once you're in there you're pretty much held in place.\" Scott said. \"Hole here for pussy access.\" He added sticking his hand in an opening in the bars. \"One for your ass, and one for your mouth.\" He continued.\n\n\"And this is for rope play.\" Josh said standing next to what looked like a miniature crane. Angus brought her closer, and Jessica looked up at the crane perplexed with how it would work. \"You hang from it.\" Josh said with a chuckle, \"In a million different ways. Horizontally gives us the best access to all your holes. Rope tied tight around your tits, hands behind your back, suspended by your chest and ankles. Bent backwards, trussed up for our use.\" Josh said in a deep, aroused tone. \"We can even hang you by your tits from it while we spank your sexy ass.\" \n\nJessica imagined that, remembering the exhibits in the museum that illustrated similar uses for the device. \n\n\"Fuck I can't wait to get our new house with a sex room. Set these fuckers up and play in there a lot.\" Riley said.\n\n\"God yes.\" Jessica agreed.\n\n\"When we do, we'll buy another one of your choosing.\" Angus said. \"But right now we should wash our spunk off of you and get you to bed before we degenerate into another fuckfest.\"\n\n\"It's okay if we do.\" Jessica said.\n\n\"Baby, you can barely keep your eyes open.\" Riley said, \"We told the others not to come up here tonight but just in case ...\" Riley added draping a housecoat over Jessica.\n\n\"How are we going to take these things home?\" Jessica asked as Angus carried her to the door.\n\n\"Riley and I'll clean up and take the devices to a storage facility. Don't worry baby, they'll be waiting for us and our new home.\" Angus said.\n\n\"Tonight?\" Jessica asked with incredulity. Pushing up from Angus' chest Jessica looked between him and Riley.\n\n\"As soon as your asleep baby.\" Riley replied.\n\nJessica looked back at the devices. \"Why don't we help you? It'll go faster with all of us helping.\"\n\n\"We'll be fine.\" Angus said continuing out of the room, down the hall and into their main hotel room.\n\n\"What time is it?\" Jessica persisted, \"It's late ... please let us help you.\"\n\n\"Josh and I will help.\" Jim said, \"It's Scott's night with you anyway. How about he washes you up, puts you to bed, and the rest of us will take care of the toys.\"\n\n\"Sound fair?\" Scott asked Jessica as Angus transferred her to him.\n\nJessica nodded as she snuggled into Scott's arms. She was surprised to find Scott shirtless. He had stripped down and Jessica sighed with contentment as she traced his muscles with her fingers. \n\n\"Good distraction.\" Josh said with a chuckle and leaned in to kiss Jessica's forehead, \"Good night baby. Can't wait to fuck you in the morning.\"\n\nThe other men kissed her too and disappeared into the hallway.\n\n\"Shame that cum can't be a fashion accessory.\" Scott murmured as he carried Jessica into the hot tub and lowered both of them into the hot water. \"I love seeing you covered in it.\"\n\nJessica giggled and kissed Scott's chest before her head lolled back on its own. Struggling to keep her eyes open Jessica murmured, \"I love being covered in it.\"\n\n\"Mmm ... you always will be baby.\" Scott added as he slid his hand along her stomach, between her legs, and cupped her pussy. \"You really liked that wax on your pussy didn't you?\" he asked slipping his finger between her lips and gently caressing her clit, \"You really have no limits ... unfuckingbelievable.\"\n\nJessica fought to stay awake, \"Did your other girlfriends have limits?\" she asked in a groggy voice. Scott's finger stilled and Jessica whimpered her dissatisfaction, managing to rock her pussy on his hand.\n\n\"I didn't have girlfriends baby ... just fuck buddies.\" \n\n\"Oh yeah ...\" Jessica murmured, \"Did they have limits? Oh nooo.\" Jessica complained as Scott's hand disappeared from her pussy entirely. \n\n\"Jessica, look at me.\" Scott said his fingers cupped her chin and tilting her face toward him. Jessica struggled to open her eyes and when she did she found Scott looking at her intently. \"I've never role played before you. Never. Never role played, never made love, never was in love, and never wanted anyone as much as I want you. You're my first in so many ways Jess, I want you to understand how unique you are in my life. I have been with many women in the past, that's true, but baby, none of it has been like anything with you. Do you understand?\"\n\nThe seriousness of Scott's voice pulled Jessica out of her sleepy haze. \n\n\"I do.\" She said bringing her hand to caress his cheek. Scott's eyes, so deep brown, and swimming with emotion mesmerized Jessica. \"I love you Scott. With every fiber of my being, every part of me, I love you.\"\n\n\"I love you too.\" Scott said and brought his mouth to hers. He kissed her fully but gently. \"Let's get you cleaned up. I'd love to fall to sleep after making love to you.\" \n\nJessica nodded and they fell into silence as Scott washed Jessica. Her hair, every part of her body. Every touch of his strong fingers was an erotic pleasure and it only intensified when Scott laid her back on the bed all pink, warm and clean. Crawling over her, Scott lowered himself on Jessica, his mouth taking hers again while his cock slid into her pussy. Jessica wrapped her legs around him, tight, and they became one, their bodies moving together in silent waves that intensified as they both felt the strange orgasmic sensation growing. As it washed over them they clung together silently shaking and shuddering, sleep over taking them as their orgasms tapered off.\n\nJessica awoke with an orgasm. When she opened her eyes she found Scott and Jim holding her arms above her head and nipping and sucking her tits. Angus had his ass in her face, straddling her, eating her out. \n\n\"Good morning.\" Riley said when she opened her eyes and backed over her face on his knees and slid his cock in her mouth. Josh was busy licking and prodding her asshole.\n\n\"We have about half an hour.\" Riley said when they'd all cum, \"Before we need to pack and leave the room.\"\n\n\"So we have a lot to do to you in a really short period of time.\" Angus said.\n\n\"It'll go faster if you keep your hands to yourself till we say otherwise.\" Josh added, \"Okay?\"\n\nJessica nodded.\n\n\"Good.\" Riley said, \"then get on your hand and knees.\"\n\nJessica did, and gasped when she was quickly invaded in every orifice. Angus wrapped his fingers around her tits and squeezed. \n\n\"Who says we need elastics?\" Angus muttered just as Jessica screamed with pleasure.\n\nAn hour later they had packed, eaten breakfast with the rest of the family and now everyone milled around in the lobby as Riley and Sean took care of the bill. Jessica and Scott had gone to the jewelry store to pick up the necklace. They'd done a great job of adding the charms to the necklace and Jessica couldn't stop running her fingers over them as they hung around her neck as she stood in the gift shop looking through postcards.\n\n\"Excuse me.\" A man's voice said. Jessica looked up to see the man and woman she'd bumped into the other day. \"We just wanted to apologize again ... make sure you're okay.\"\n\n\"I'm fine, thank you.\" Jessica said. When the man and woman were silent, studying her, Jessica began to feel uncomfortable. She put the postcard that she'd been looking at away. \"I really should go.\"\n\n\"That man you were with.\" The woman said, \"Seemed very angry. He didn't hurt you at all?\"\n\n\"Abe?\" Jessica asked in surprise. \"No. He'd never hurt me. Um, excuse me please, I really should go.\"\n\n\"I'm sorry. It's just that we feel like we know you somehow.\" The man said, \"Have we met before?\" \n\nJessica looked at the man and the woman and suddenly an image flashed in her mind. This man, this woman, at her house. They were friends of her parents. She knew them alright.\n\n\"Um, excuse me.\" Jessica said and rushed out of the store. Looking around she saw the boys, the girls, Chris and Mark but no one else from her family.\n\n\"Hey Jess ... what's wrong?\" Leah asked when Jessica linked arms with her.\n\n\"We have to go.\" Jessica said.\n\n\"What?\" Leah asked.\n\n\"Now. We have to go now. Find Sean and the others, I'll tell Chris and Mark. We need to get on the bus and go. I'll explain later.\"\n\n\"Okay. I'll take the boys, meet you at the bus.\"\n\nJessica nodded, looked at the reception desk and felt panic growing when neither Riley or Sean were there. \n\n\"Chris, where is everyone?\" Jessica asked.\n\n\"Outside. Sean and Riley paid. They went out to load the bus. What's wrong?\" Chris said.\n\n\"Jess?\" Mark prompted when Jessica looked around the room with a terrified expression on her face.\n\nShe grabbed Chris' hand, Mark's hand and dragged them over to Justine.\n\n\"Let's go. Now. Are Rick and Abe outside too?\"\n\n\"Everyone is.\" Chris said.\n\n\"Come on.\" Jessica said.\n\nIn the parking lot Riley, Angus, Scott, Jim and Josh were on their way back to the hotel, worry etched on their faces.\n\n\"What's going on Jess?\" Riley asked.\n\n\"I'll tell you once we're driving. There's no time, please, let's go.\" Jessica said.\n\nJessica paced the aisle of the bus as Riley drove. She kept looking out the windows and it wasn't until they were on the highway with hardly another car in sight that Jessica dropped onto a seat and exhaled.\n\n\"Can you tell us now?\" Riley asked, looking into the rear view mirror as he drove.\n\nJessica nodded. \"It was Senators Bernard and Delia ... the man and the woman I bumped into.\" Jessica said to Abe. \"They're friends of my family. I ran into them in the gift shop again and they thought they recognized me from somewhere ...\"\n\n\"Wait, you bumped into someone?\" Angus asked looking between Jessica and Abe.\n\n\"It's more like they bumped into her.\" Abe spat. \"I knew that was suspicious. Damn it.\"\n\n\"When did this happen?\" Sean asked.\n\n\"Yesterday at the store where Jess bought the painting.\" Abe said.\n\n\"And you didn't think to tell us about that?\" Corey demanded.\n\n\"No ... I didn't. Sorry.\" Abe said.\n\n\"It's bad, right?\" Jessica asked looking around at everyone, terror evident in her expression. \"Do you think they called the police? Are they going to hurt you?\" Jessica continued, grasping Angus and Jim's arms.\n\n\"Shhh, shhh.\" Jim said and pulled Jessica onto his lap. \"Everything is okay. Shhh, relax, okay? Just breathe.\"\n\n\"Jess, did you get the feeling that the senators knew who you were? \" Riley asked, \"Or did they just find you looked familiar?\"\n\n\"I don't know.\" Jessica said, \"I guess they didn't know who I was or they probably wouldn't have let me go ... right?\" she asked suddenly brightening and sitting up straighter on Jim's lap. \"I mean, if they knew who I was, they would have stopped me. So they can't know ...\"\n\nSilence hung in the air as everyone evaluated Jessica's relief.\n\n\"Jess. You could have gone home.\" Josh finally said, speaking what everyone was thinking. \"They would have taken you home...\"\n\n\"I am going home.\" Jessica said but then she understood what Josh meant. \"I could never, ever, do that.\" She said quietly and looked around at everyone. Even the boys looked burdened. \"We have an oath.\" Jessica said looking at her men, \"And a pledge.\" She added looking at everyone else. She felt tears come to her eyes, \"I told you that I don't want to go back.\" She added looking around at her family but when they didn't look convinced she added, \"You wouldn't abandon me would you? If your families came back?\"\n\n\"I don't think any of us would consider it abandoning.\" Leah said reaching out to stroke Jessica's hair. \"If you returned to your world.\"\n\n\"We know you love us.\" Justine answered, \"And we love you. It must have been a surprise, to see friends of your family like that. No one would have blamed you if you'd gone with them.\"\n\n\"I don't ever want to leave you.\" Jessica said glancing around at her family, tears filling her eyes. \"Ever.\" She repeated when she looked at Jim, Josh, Scott, Angus and Riley when he glanced in the rear view mirror. \"I don't think I could live without you.\"\n\n\"I know what you mean.\" Riley said locking eyes with Jessica in the rear view mirror. \"Come here.\"\n\nJessica made her way to the front and when she was standing next to Riley he wrapped his arm around her. Jessica hugged him back.\n\n\"You saved us again baby.\" Riley added with a wink. \"When we get home I'll express my gratitude to you properly. Now go get some rest. You look really tired.\"\n\n\"I'm okay.\" Jessica said.\n\n\"Will one of you guys take Jess for a nap?\" Riley called back.\n\n\"Come on babe.\" Angus said coming up and taking Jessica's hand. Jessica followed Angus to a seat at the back of the bus. Angus leaned his back on the side of the bus, put his legs up on the seat and pulled Jessica down so she was lying on him.\n\n\"I won't leave you.\" Jessica mumbled against his chest.\n\n\"I know babe. I know. Go to sleep now.\"\n\nJessica fell to sleep for an hour and then went to sit with the girls.\n\n\"We came up with a ton of designs for the dress we want you to wear to our wedding.\" Sara said, waving her notebook at Jessica, \"We thought you could pick which one you like.\"\n\n\"Is that a new necklace?\" Justine asked reaching to pick up the heart around Jessica's neck.\n\n\"Josh gave it to me.\" Jessica said, \"And I each of these ...\" Jessica said lifting the other items one by one, \"are from each of my nights with the men. The jewelry shop put them on as charms for me.\" \n\n\"That was a good idea.\" Leah said. \"What do you have?\"\n\nJessica walked through the charms beginning with the diamond that looked like a heart. The girls sighed dreamily when they looked at it. \n\n\"I can't believe they all fit onto your necklace.\" Angus said. Jessica looked up in surprise. She hadn't realized that the audience exceeded the girls but it seemed like everyone was listening.\n\n\"They did a great job, and now I can keep reminders of the trip with me always.\" Jessica replied.\n\n\"This was quite a trip.\" Corey said.\n\n\"Busy.\" Sean agreed.\n\n\"And the weddings are next!\" Jessica said, clapping her hands. \n\n\"We have so much to do!\" Sara agreed and the girls went into detailed planning. Jessica chose her dress from the sketch pads and spent a lot of time looking at the dresses the girls were making for themselves.\n\nFinally they pulled into their driveway.\n\n\"I know it's not a resort.\" Jessica said standing with her men looking at the house. Scott and Josh each with an arm around her, all of them with a suitcase in hand. \"But I missed it. It feels good to be home.\"\n\n\"Amen.\" Riley said, \"And you know what? It's early and hot enough that we could go to the pond for a while.\"\n\nThat was met by a chorus of cheers.\n\nThey spent the rest of the day at the pond. When they came home Jessica and Scott hung the painting from Paris in the living room. That evening they had a bonfire and jammed late into the night.\n\nWhen everyone went to bed the men went to the studio with Jessica.\n\n\"Do you have plans for tomorrow?\" Riley asked Jessica as he slid his hand under her shirt, grasping her tits and pushed her back against Josh. \n\nJessica nodded, \"Visit Elsie ...\" she gasped as Riley pulled her shirt off and took her tits, one at a time, into his mouth. Josh and Scott pulled her pants off, Josh sliding his fingers into her butt crack. Riley moved to the side, hitched up one of her legs and took her tit in his mouth again. Scott did the same with her other leg and tit. Jim knelt down and began licking and nipping her pussy, removing his mouth long enough for Angus to dip his fingers in her and then slide his fingers, covered with her juices into Jessica's mouth.\n\n\"Then we'll have to be aggressive in order to get you enough time to sleep.\" Riley said and came when he saw Angus slide newly wetted fingers into Jessica's mouth. The others came as well, including Jessica with a resounding scream. \"I said I'd show you my appreciation when we got home.\" Riley whispered into Jessica's ear, \"My appreciation of you. Well, it begins now ... I need you over the back of the couch.\"",
        "Jessica nodded and tried to move to the sofa but she found herself hovering over the ground instead. Scott and Jim had a leg each, Josh and Angus an arm, and Riley shoved his fingers in and out of her mouth as they carried her to the sofa.\n\n\"On her back.\" Riley said and Jessica found herself laying over the back of the sofa on her back, her legs held wide open by Scott and Jim, her tits mauled by Josh as he slid his cock into her mouth, Angus was sliding his fingers into her asshole and Riley lowered his mouth to her pussy.\n\n\"Keep your hands behind your back.\" Josh said, \"No matter what happens.\" And is if to prove the point he pinched her nipples, hard. Jessica stopped herself from bringing her hands up just as a huge orgasm rocked her.\n\n\"No time for leg twitching.\" Riley said stroking her sensitive clitoris and nipping her thighs when they twitched. \"Come on baby, control your legs, and cum again.\" He said stroking her clit harder. Jessica gasped and twitched and worked hard to keep her hands behind her back as her asshole, tits and mouth were poked, prodded, and stretched beyond their means. And within minutes she was screaming in pleasure again.\n\nThe men had to carry Jessica back to the house, she was completely spent. \n\n\"Let's see if she gets up in the middle of the night now ...\" Angus muttered before falling to sleep.\n\nJessica slept until morning.\n\nThe next morning Sean and Abe barely had time to get food into Jessica before she was running out the door. Mark went with her so he could see the therapist if the therapist would see him.\n\nJessica visited with Elsie and Mark got an appointment but it would be an hour later, so Jessica left him at the home and went to town to get wedding gifts for the girls. \n\n\"How'd it go?\" Jessica asked Mark as they drove home.\n\n\"Good. Really good.\" Mark said. \"I don't have to give any names or information about the specifics of what happened. I think Dr. Sanders will help a lot. How about you? What did you get for the girls?\" Mark asked. \n\n\"I had the pics that Scott took of each of the girls and their men blown up.\" Jessica said handing an envelope to Mark. \"I got frames for them too. I want to get something else too but I need some ideas.\"\n\n\"These are great.\" Mark said looking through the pictures. \"The girls will love them. As for more gifts I think this is enough. You've given us the best gift already ... happiness.\" \n\nJessica smiled at Mark. \"Thanks.\"\n\n\"So when do you plan to see the therapist?\" Mark asked.\n\n\"Me?\" Jessica asked in surprise.\n\n\"We did say we'd both get therapy.\"\n\n\"True. I don't know.\" Jessica said, \"Maybe when we get away from the clan.\"\n\n\"Jess, you've been through a lot. You need to talk to someone about it.\" Mark said.\n\n\"I can talk to you.\" Jessica said in a super sweet voice and batted her eyelashes at Mark.\n\n\"I meant a trained professional.\" Mark said in exasperation, but he smiled despite himself. \"You're cutesy antics may work on your men Jess but they sure as hell won't work on Abe and Sean. Don' t make me drag them into this.\"\n\n\"Okay, okay,\" Jessica said in mock fear, holding a hand up in surrender as she drove, \"Pull out the big guns why don't you.\" \n\n\"I'm serious.\"\n\n\"I am too. Okay, I'll make an appointment the next time we go see Elsie. Is that good enough?\" Jessica asked feigning anger.\n\n\"Yup.\" Mark said with a laugh and a shake of the head, \"Why do I feel like I just strong armed Bambie?\"\n\n\"Bambie?\" Jessica demanded slapping Mark's arm. \"Did you just call me Bambie?\"\n\n\"Just drive.\" Mark ordered, laughing as he dodged another swat.\n\n\"Fine Thumper.\" Jessica said with a humph as they pulled into their driveway. \"I guess it's time to decorate the pond for the weddings.\" Jessica said noticing the strands of lights that the girls were on the lawn untangling. \"Are you nervous?\" she added when Mark gulped.\n\n\"I've never been married before, so yeah.\" Mark said, \"And knowing Justine, Sara, Leah and Amanda, they'll plan something really out there. Something us guys won't even understand.\" \n\nJessica laughed as she and Mark got out of the car.\n\n\"Thank God you're here.\" Leah said, \"Mark, the men and boys are at the pond. They need your help landscaping for the wedding.\"\n\n\"Landscaping?\" Mark asked and gave Jessica an 'I told you so' look.\n\n\"And Jess, if you can help with these lights real quick, we need your help inside picking patterns for the men's suits. We've decided to make them.\" Sara said, and Mark groaned.\n\nJessica couldn't help but laugh, \"Going traditional, excellent.\" She added and laughed even harder when Mark groaned again.\n\n\"Do you have something against suits?\" Justine asked Mark in a teasing way while going into his arms for a kiss.\n\n\"You looked superhot in a suit for dinner at the resort.\" Jessica said in her innocent voice, batting her eyelashes again, hardly able to contain her laughter.\n\n\"I can be superhot in a speedo.\" Mark said, \"And it's way more comfortable.\"\n\n\"Speedo!\" Justine exclaimed in mock disgust, swatting Mark on the chest.\n\n\"Okay, okay,\" Mark said raising his hands in surrender, \"I'm just the groom, what do I know. I better go, I can hear the men calling me.\" He added cupping his hand to his ear and moving to the barn quickly as Jessica and the girls broke into a fit of giggling laughter. When they finally stopped laughing they spent fifteen minutes untangling the lights and then moved into the house. \n\nJustine, Sara and Amanda were at the sewing machines working on dresses while Jessica and Leah sat at the dining room table scouring over magazines and patterns of suits. \n\n\"I know you don't want to use the suits the men wore for dinner.\" Jessica said eventually, \"But there was something about the jacket of the suits my men wore that I liked and can't find in any of these magazines.\n\n\"Oh yeah?\" Amanda asked moving from her sewing machine, \"Be right back.\" She added heading down the hallway to the bathroom.\n\n\"They were nice.\" Justine agreed.\n\nLeah shrugged, \"Yeah but I don't remember them enough to see a difference between them and what we're looking at.\" She added pointing at the magazines before her and Jessica.\n\n\"The men have them in our room, I can get one if you want.\" Jessica offered. \n\n\"Oh yeah, get it.\" Sara agreed so Jessica went to get one of the jackets and as she was passing the bathroom door she heard the sound of someone vomiting.\n\nTrying the doorknob Jessica found it locked so she pounded on the door, \"Amanda?\" \n\n\"Be right there.\" Amanda replied in a strained voice.\n\nJessica stared at the door and wondered if Quinn, Caleb or Don had called Doc. Moving to her room Jessica grabbed the suit jacket and then dialed Doc on her phone.\n\n\"Lass,\" Doc answered almost immediately, \"All okay?\"\n\n\"Hi Doc. Yes, fine. But, um, you offered to give me a physical once. Any chance you could do one for all of us? No one here has ever had one and there seems to be an eating disorder issue here ... plus I'm having trouble keeping food down.\"\n\n\"You're sick?\" Doc asked.\n\n\"Not exactly.\" Jessica replied, \"At least I don't think I am. But Amanda is. Doc, she vomits up her food on purpose, to lose weight.\"\n\n\"Right. No problem. There's nothing urgent at the moment correct? Because I will be busy over the next few days. I can come by next week.\"\n\n\"Busy?\" Jessica asked as a chill ran down her spine. Doc usually wasn't busy unless Paul was.\n\n\"Oh no lass,\" Doc said getting the gist of what Jessica was thinking, \"I've got some seminars to attend. Can never stop learning in the medical field.\" He added with a laugh.\n\n\"Oh, okay.\" Jessica replied trying to imagine the conversation between Paul and Doc when Doc asked to go to the seminars. \"Have ... fun.\"\n\n\"Not likely.\" Doc said with a laugh, \"See you next week.\"\n\n\"Thanks Doc.\"\n\nBack in the living room the girls inspected the jacket Jessica brought out but Amanda wouldn't look Jessica in the eye. The girls finally agreed that the jacket was a certain style of cut and found the patterns that used it. With that narrowed down Leah and Jessica easily found a pattern that they liked and the other girls liked it as well.\n\n\"The guys are lucky they have these suits. We can get sizes from them, otherwise they'd be our pin cushions.\" Justine said with a laugh.\n\nJessica tried to laugh but she was concentrating on finding a way to bring up Amanda's latest vomiting incident. Finally she just blurted out, \"I called Doc. Just now. He'll be here next week for our physicals.\" She locked eyes with Amanda as she spoke.\n\n\"Why can't you just let this drop?\" Amanda demanded, \"Puking up your food is working just great for you too. What's the big deal?\"\n\n\"Amanda!\" Jessica gasped, her jaw dropping. \"I am not puking on purpose! I'm asking Doc to look me over to find out why I'm vomiting so I can stop. You're a beautiful woman, why are you doing this to yourself?\"\n\n\"Yeah, right. Whatever.\" Amanda said.\n\n\"Manda, do you honestly think Jessica is lying about that?\" Leah asked, \"Really? Have you seen her play poker?\"\n\nJessica flinched. At least being transparent had its uses.\n\n\"Fine.\" Amanda snapped and glared at Jessica, \"If you say so. Why don't you just leave this alone. You don't have to fix everything Jessica, especially not things that are none of your business.\"\n\n\"You're really not thinking this through are you?\" Leah demanded. \n\n\"And you're being rude!\" Sara snapped, \"If Jessica kept out of things us girls would all be back home, single, disrespected and miserable. What is wrong with you Amanda?\"\n\nAmanda nodded. \"I'm sorry Jess. I do appreciate what you've done for us, but you didn't grow up in the clan. You can't possibly know what it's like.\"\n\n\"We grew up in the clan.\" Justine said, \"And we're not puking up our food.\"\n\n\"But you're skinny. All of you are skinny.\" Amanda said and swung her eyes on Jessica, \"Do you know what it's like to be a fat person in the clan? Have you seen any fat people in the clan? No. Because there aren't any. They all skinny up or wither away. You want to be invisible in the clan ... be fat.\"\n\n\"You're not fat!\" Jessica exclaimed appalled that Amanda would feel she was and that the clan would create such an environment.\n\n\"I'm not now but I have to be very careful. And I used to be. As a girl.\" Amanda looked to Leah, Sara and Justine, \"Remember? You three were always skinny as twigs and I was always fat. Fat and ignored.\" Amanda continued, swinging her eyes back to Jessica. \"You know the guys ignored us when we were kids but when I was fat everyone ignored me. Even you.\" Amanda added, looking back at the girls.\n\n\"Oh, Amanda.\" Leah said in a voice filled with emotion, \"I'm so sorry.\"\n\n\"Being ignored isn't as awful a thing as you may think it is Amanda.\" Justine said quietly, \"There were some people I wished ignored me. I just assumed they did the same to everyone but I guess you were spared.\" \n\n\"Spared?\" Amanda demanded, \"I don't think I'd call it that.\"\n\n\"What people?\" Leah asked Justine.\n\n\"Kevin.\" Justine said and shuddered.\n\n\"He was such an asshole.\" Sara agreed.\n\n\"Um,\" Jessica said unable to stifle a shudder even though she had never met Kevin, \"What did he do to you Justine?\"\n\nJustine shrugged, \"Things.\"\n\n\"Like.\" Leah prompted.\n\n\"He'd touch me and make me touch him.\"\n\n\"Oh no!\" Leah groaned.\n\n\"He said he was teaching me. Since I didn't have a brother to teach me, like you and Sara did.\" Justine said to Leah, \"He said it was his duty.\"\n\n\"Oh ew!\" Sara exclaimed, \"Corey never, ever, ever, did that to me.\"\n\n\"Sean neither.\" Leah said. \n\n\"Why didn't you tell anyone?\" Jessica asked.\n\n\"No one would have believed her.\" Leah said, \"At least not anyone who would have the power to stop him. Kevin was being groomed to be the head of the clan. He could do no wrong.\"\n\n\"There was that.\" Justine agreed, \"But Kevin told me he'd kill my parents if I told. He said no one would even know he did it, it would look like an accident.\"\n\n\"Oh my God what an asshole.\" Leah exclaimed.\n\nJustine nodded, \"He even proved it to me. Remember when my dad's legs got crushed under the car he was working on?\" She asked looking at the girls.\n\n\"No!\" Sara said.\n\n\"Yes.\" Justine said in a hushed voice. \"He brought me out to watch. No one else was around, Dad was under the car, couldn't see ... Kevin said if I warned him he'd have the car come down on Dad's head instead of his legs ...\" Justine continued, tears running down her cheeks now, \"and then he flipped a lock on one of the car jacks holding the car up and the car fell ... it knocked the other jack out from under it ... Dad screamed so loud. I never forgot that. Never.\"\n\n\"Oh Justine!\" Leah exclaimed tears running down her face. She pulled Justine into her arms and the other girls converged around them in a group hug. Jessica, Amanda and Sara were crying too.\n\n\"What's going on?\" Jim's voice broke into the sniffles and sobs. \n\n\"Jess?\" Josh added.\n\n\"Justine?\" Chris asked.\n\nThe girls looked toward the door in surprise. All of the men stood just inside it looking sweaty, dirty, and worried. As Quinn swung the door shut Jessica could hear the sounds of the boys playing shoot 'em up outside. Jessica moved into Josh's waiting arms and felt incredible comfort when he closed them tight around her. Justine's story created a knot in her stomach that threatened to expel any food she had in it. She took a moment to bury her face in Josh's chest and when she looked up she saw Chris pull Justine into his arms, Mark rubbing her back, Amanda move into Don's arms, Quinn and Caleb looking confused as they moved closer, Sara melt against Sean, Leah against Corey. Moments later her view was blocked by her men.\n\n\"Why are you all crying?\" Riley asked in a bewildered tone, cupping Jessica's chin and turning her face toward him.\n\n\"The girls have to tell you, I can't.\" Jessica said between sniffles, \"It has nothing to do with me.\"\n\n\"Leah?\" Corey asked.\n\nFor the next ten minutes the girls reiterated the conversation they'd been having and at the end all of the men looked like they'd been kicked in the balls.\n\n\"That motherfucker!\" Chris thundered.\n\n\"Fuck.\" Sean swore, \"Shit. I think our mother knew.\" He added looking at Leah with a stunned expression. \"Right after Glen's accident she made me and my dad swear that we wouldn't let Leah date anyone in the clan. She repeated it over and over almost every other day after that.\"\n\n\"That's why you wouldn't let me date?\" Leah asked in astonishment. \"Then I take back all the times I thought you were an asshole.\" She added and shrugged when Sean gave narrowed his eyes at her.\n\n\"I can't believe it.\" Riley murmured, \"After Kevin's father disappeared Glen practically adopted him.\"\n\n\"Your parents did too.\" Angus added, \"Took care of him like they did me.\"\n\n\"Well he had a funny way of showing his gratitude.\" Justine sobbed, \"He wasn't the least bit sorry about breaking my dad's legs ... he smiled at me the whole time. And then he had the nerve to brag about it to Paul.\" Justine added.\n\n\"Paul?\" Mark asked. \"Paul who?\" Mark continued grasping Justine's chin and lifting her tear soaked face from Chris' chest.\n\n\"Paul!\" Justine said.\n\n\"That's impossible.\" Riley said, \"Justine, that can't be right. You were what, twelve, when Glen had his accident? That was a good five or so years before we ever even heard of Paul.\"\n\nJustine shook her head and managed to get her sobs under control, \"I saw him.\"\n\n\"How?\" Chris demanded.\n\n\"I was in the car. Kevin took me for 'a ride' as he often did.\" Justine said with contempt in her voice, \"Paul pulled up alongside us on the road,\" Justine continued motioning her head toward the road, \"And Kevin told him that my dad's legs snapped like twigs ... even laughed about it.\"\n\n\"What did Paul say?\" Abe asked. He and Rick had been hanging back near the door and both looked as stunned as her men.\n\n\"Good.\" Justine said.\n\n\"That's all?\" Abe asked.\n\nJustine nodded. \"Good, and he drove away.\"\n\n\"What does this mean?\" Scott asked. He looked around the room, \"Aside from the fact that Kevin isn't the person we thought he was. Why was he talking to Paul? Kevin would've only been nineteen, Paul, what, forty-five, forty-six? What possible reason would they have to know each other much less be meeting on side roads?\"\n\n\"Only two ways to find out. Kevin is in prison ... not really accessible. That leaves Paul but I doubt we'd get the truth.\" Riley said.\n\n\"Give me that pain enhancing drug we used on Earl and a knife and I'll find out.\" Chris said in such a sinister voice that Jessica shivered. Josh pulled her closer and Jessica snuggled in to him. It was clear from the reactions around her that the connection between Kevin and Paul was significant and worrisome. And if something worried her family, especially her men, Jessica couldn't help but feel the seeds of fear begin to grow in the pit of her stomach. \n\n\"Even you have to admit that there are some people and circumstances that warrant violence.\" Chris said to Jessica, misunderstanding her reaction.\n\nAll Jessica could do was nod. She wondered if she could ever again justifiably condemn violence. To do so after what she'd done and allowed, was beyond hypocritical. Dropping her forehead against Josh's chest she looked up when his strong fingers tilted her chin up. She managed a feeble smile in an attempt to make the worry in his eyes disappear but it didn't seem to work. Glancing at the other men she saw them watching her too. \n\n\"Baby.\" Riley said the expression on his sedingt her from Josh's arms to his. She cupped his cheeks and looked up at him blinking back fresh tears.\n\n\"Are you okay?\" she asked her voice laced with fear. Riley's skin was ashen, clammy. \n\n\"Baby ... baby ... I'm okay. Shhh ... listen.\" Riley said. \"Something is very, very wrong with this picture. Before my parents went to jail they insisted that there was a clan member destroying the clan from the inside. They warned me to be careful. I ignored their warning after ... after it seemed as though my mother was the insider. And then your Godfather ... you said that he believed someone inside the clan was having clan members arrested and then killing them off in prison. Now we find out that Kevin staged an accident and he was talking to Paul. Baby, we have to find out the truth.\"\n\n\"Riley ...\" Jessica began but let her voice trail off. She had no idea what she wanted to say.\n\n\"We have to find out if everything that has happened over the past nine years could have been avoided. Our families jailed and killed, your family ...\" Riley continued, \"I know you'll say it's the past and it won't bring back any of the dead, but baby, Paul is still alive. Alive and planning something. Maybe we can stop further bloodshed. And I'm not suggesting any change to our plan for leaving the clan and getting immunity. We will turn Paul over to the police, as planned, but let's get some information out of him first.\" \n\nSilence fell as Riley and Jessica stood looking at one another.\n\nJessica nodded but she couldn't hide the sadness she felt at the fact that everyone in the room seemed to be missing the biggest point about the story. Both Justine and Amanda's parts. She understood why the men were focussing on Kevin and Paul and the mystery around their connection, but it seemed like that was all they were paying attention to.\n\n\"Don't look at him like that Jess.\" Chris said, \"It wasn't his idea it was mine. I'm sorry I'm not the pacifist you'd like me to be but sometimes, as you well know, there are times when you have to check your conscience at the door and do what's unconscionable, but right.\"\n\n\"Yes. Of course.\" Jessica said quietly, \"I agree, answers are required. I am completely on board.\"\n\n\"Really?\" Angus asked, \"Then why are you looking at Riley, and us, like we've completely disappointed you.\" \n\n\"I am?\" Jessica asked looking back at Riley with a bewildered expression on her face. "
    ],
    "authorname": "JadenL",
    "tags": [
        "group sex",
        "stockholm syndrome",
        "blowjob",
        "consensual sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/lisa-ch-09b"
}