{
    "title": "Buried Treasure Ch. 11-15",
    "pages": [
        "DEA Senior Agent Frank Donovan's POV \n\nOcala, Florida \n\nDirector Grimes had been riding my ass all morning long, and I was itching to do something. The abduction of Harleigh Ryder had stirred up a hornet's nest, and the result was the full briefing room at the Ocala Police Department precinct house. \"Good morning everyone, I'm DEA Senior Agent Frank Donovan, leader of the Tezcatlipoca Interagency Task Force that just hit its two-hour anniversary.\" Nervous laughter echoed through the room. Most of the people here didn't know what we were dealing with here. The phone calls had come early and often to get people here. \n\nI started my Powerpoint show with a picture of the Sons leadership in their cuts. \"For those of you are joining us late, here is the deal. The Sons of Tezcatlipoca, a violent outlaw biker gang with chapters in the Southwest, showed up in Florida this past week. Four of them showed up at the home of Sean Ryder, a retired DEA agent who two decades ago worked deep undercover against biker gangs in California. They tortured him and his wife, a former Federal Prosecutor, and current County Attorney.\" I put up a photo of the two. \"These animals raped his wife in front of him before killing her, then executed him.\" I cut to a crime scene photo. \"Their daughter came home at the end of the attack. She was shot but managed to drive her Harley away and escape to the clubhouse of the Steel Brotherhood.\" \n\n\"So, we're in the middle of a biker gang war?\" \n\nI put up a photo of Harleigh in her Steel Ladies cut. \"No. The Steel Brotherhood hasn't broken any laws, and they are not our target. They were able to get her inside the gates and killed three of the four men who chased her there.\" There was a murmuring in the room; they suddenly didn't mind the Brotherhood so much. \"The man who survived was injured and has been identified by DNA testing as Jose Carreira, son of one of the senior Sons leaders.\" I put up a photo of the girl in the hospital. \"Harleigh survived the shot to the back, but early this morning was kidnapped from her hospital room in Orlando. A police officer guarding the room was poisoned and nearly died.\" Now I had their attention. \n\n\"The Sons sent twenty men to Florida after their three men got killed, and they have been holed up on a property in Ocala for a day now. The property belongs to a shell corporation and is suspected to be a Cartel safe house. Since this group hasn't done anything illegal yet, we haven't been able to do anything. For the intelligence update on the property, Sheriff Lance Justice of Marion County.\" \n\nThe Sheriff stood up and put up a satellite view of the ten-acre property just a few miles outside Ocala. \"We have been monitoring the situation with the Sons of Tezcatlipoca since we found out that they are headed for Orlando,\" he said. \"My men took license plate numbers and ran the registrations of the riders. None have outstanding warrants, but none are boy scouts either. We can't get them on parole violations. We didn't have any evidence that would allow us to search them or their motorcycles, and the home is clean. Based on the request from Orlando Police, we have maintained surveillance on the entrance to the property since they arrived.\" He pointed out the sprawling home, with a large pole barn and detached garage. \"We sent a drone over after dark last night with infrared, and it shows nothing suspicious, just the men we know are there. The utility bills do not indicate the property is as a grow house or another illegal enterprise. Their motorcycles are visible in the open door of the pole barn during the flyover.\" \n\n\"Have they been riding in and out of there, or have other vehicles shown up?\" \n\n\"Not until this morning. Our stakeout is near where the driveway meets the road, and it's been quiet. The infrared showed the engines of the motorcycles to be cold.\" He showed a photo of a panel van turning into the lot. \"This van was rented yesterday in Orlando. The woman who rented it has no warrants or record. It showed up just before sunrise, drove into the garage, and hasn't come back out. The infrared camera showed two people in the back, one lying down the other sitting.\" He looked at everyone. \"It's circumstantial, but with the history and the information the DEA has provided on the losses of former agents and the gang's practices, we were able to obtain a search warrant for the property. We also have an active Federal warrant for one Jose Correira. We may or may not find Harleigh in there, as we did not get notified of the abduction in time to stop the van.\" He put Jose's photo back up. \"If she is found, we arrest them all. If not, we arrest Jose if he is there.\" I looked out over the room, and people were ready to go. \"With that, I turn it over to FBI Hostage Rescue Team and Senior Agent-in-Charge Tim Needles.\" \n\nThe HRT leader was a real snake-eater; former Delta Force commando who left to join the FBI and now was in charge of one of their elite groups. They specialized in high-risk warrants and hostage situations, and each man on the team highly trained. He put up a layout of the home, pulled from County building records. On it was superimposed the heat signatures from the night before. \"The home is big, and there are a lot of men to control, so we're going in heavy on this op. My team will infiltrate the property from the north, taking station behind these bushes. Our objective will be the bedrooms in this wing, where the hostage is likely to be kept. We will enter from the patio and these windows, using flash-bangs to disorient the occupants. We will secure to this hallway,\" he said. \"Marion County SWAT, followed by the DEA agents, will take position behind the garage and the pole barn and breach the property at the front door, living room window, garage door, and kitchen door. All officers need gas masks as we will be using flash-bangs followed by tear gas canisters to expedite the takedowns. Nothing fancy. The first in taking down the first bad guys they encounter, those behind them keep moving forward until the home is secure. Cuff them and hold them down, then when all clear is called, lead them outside.\" \n\nIt was as simple a plan as you could get for taking down almost two dozen members of a violent biker gang. The forty-some officers in the room might be enough. \"Rules of engagement are normal; force is authorized to protect yourself, a fellow officer, or the hostage. We load up in twenty minutes; drivers meet me after the meeting to go over routes. Time on target is 0900, HRT will give the signal. Radio channel five.\" \n\nThe Sheriff spoke up next. \"The mobile command center will be set up in the staging area, the old E-Z Mart parking lot. We need to be in the game on this, we've got a ton of officers and a potential hostage, so I don't want friendly fire taking anyone out. Be sure of your target and what is behind it,\" he said. \"Let's get these fuckers.\" \n\nI drove in one of the three Suburbans that had been brought up from Miami, going over the plan with the team as we drove. The DEA guys had lots of experience with no-knock warrants and high-risk apprehensions, but we didn't do a lot of hostage situations. \"We need to be ready for anything,\" I told them. \"Hostage Rescue thinks she will be in a back bedroom, but we can't be sure. Given what these guys do, we're just as likely to find her tied for a gang-rape in the living room or beaten half to death in the garage. I want these guys bad; they did not only go after one of our own, but they also targeted his FAMILY. We need to get Harleigh Ryder back,\" I said. \n\n\"What did her father think when he named her,\" my driver said when the moment passed. \n\n\"He probably thought she would never be able to buy a rice burner,\" I said with a grin. \"It was a way to protect her from the crotch rockets.\" \n\n\"A father has to do whatever he can,\" the agent in the back seat agreed. \"I think it's a great name. 'Murica! Hell yeah!\" \n\n\"Well, her club name is Crash,\" I said. \"I'm told it was based on her softball play, but now I'm not so sure it isn't because she crashed into the clubhouse. She managed to outrun four bikers while bleeding from her liver after knowing her parents were dead. She's the kind of person we NEED to save.\" \n\nThey dropped me at the command post, then drove on to their staging area on an adjoining property. The Sheriff had quietly gone to the neighbors and evacuated them, and he had drone video up on the large television in the command post. \"That your asset or mine,\" I asked. \n\n\"Neither, the FBI brought it in,\" Agent Needles said. \"It's got four hours on station and flies high enough to be silent and invisible. The camera is good, but infrared doesn't work for shit with the sun being up this high,\" he said. The camera was showing a wide view of the buildings and the surrounding property. I could see the teams starting to move through the trees towards their initial points. The movement was planned carefully to use the garage or pole barn, or the thick pines, to hide their approach. \n\n\"All the motorcycles still there?\" \n\n\"We didn't get a count, but we can see some of them through the open pole barn door. It looks the same as the photos we took last night.\" \n\nIt was going well as the teams reached their positions; I knocked on the wooden desk, hoping Mr. Murphy would stay away for this one. The team leaders checked in with the FBI, and I could see them all doing final weapons tests. \"Thirty seconds, don gas masks,\" the FBI team leader ordered. \"Hostage Rescue on my count, remaining teams on their delay.\" We had calculated the distance the teams would have to run from their initial points to the entry points. The Hostage Rescue guys were going first because they had the longest run, and they needed to be the first to breach. Even a few seconds of warning might be enough for them to kill the hostage before they could get inside.\" \n\nI watched as the teams got into their assault formations, single file, their left hand on the left shoulder of the guy in front of them, rifles at the ready. \n\n\"Ten seconds.\" \n\n\"Five, four, three, two, one, GO GO GO.\" \n\nSeven teams started moving, three to the back of the house were Hostage Rescue, the four in front County SWAT and DEA. The Hostage Rescue guys reached first, and I saw them slap the plastic explosive on before moving aside. \"Two One BREACH,\" came over the radio, then multiple explosions as the doors were blown open. Flashbangs, grenades that used loud explosions and light flashes to disorient and confuse the people inside, went off in multiple locations. The teams poured inside, tossing tear gas to make sure the defenders couldn't put up a defense. \n\n\"Team two CLEAR.\" \n\n\"Team one CLEAR.\" \n\n\"Team three CLEAR.\" The Hostage Rescue guys had secured their rooms. \n\n\"Team five clear, no contacts.\" \n\n\"Team six clear. Sheriff, there's nobody here.\" A couple of minutes later, after a full search by all the teams of the home and buildings, it was clear they had bailed out. There was no evidence of illegal activity or Harleigh. \n\n\"What biker gang leaves their motorcycles behind,\" the Sheriff asked. \n\nNo. It couldn't be. \"Get ahold of Orlando Police, let them know the Sons may be heading their way.\" I walked outside and away from the Command Post before I opened my phone and dialed Director Grimes. \"Sir, the raid failed. They had to have been tipped off, they were there last night and gone by the time we got the warrant.\" \n\n\"Son of a BITCH,\" he said. \"They didn't just leave?\" \n\n\"No, sir. They left motorcycles behind and didn't leave via the driveway. They must have gone through the woods and been picked up elsewhere. Local law enforcement couldn't properly maintain surveillance on this property, and until Harleigh was taken, no one was planning to raid this.\" \n\nHe didn't say anything for a bit. \"Make sure the Sheriff alerts highway patrol and head back to Orlando. They might be heading home, or they might be in the woods,\" he said. \"If they've got Harleigh, she'll be dead by sundown if we can't find them. Make sure to cover the Steel Brotherhood clubhouse.\" \n\n\"Why?\" \n\n\"Because the bastards might dump her body there to make a point.\" \n\nCh. 12 \n\nAlpha Chase Nygaard's POV \n\nSteel Brotherhood Clubhouse, Orlando Chapter \n\nWe pulled into the parking lot of the club just after three in the morning with our load of stuff. This was the second load out of Harleigh's room, and this time I brought more photographs and papers I'd collected from the house and garage. I also decided to do something about the bedroom so no one else had to see it. I hauled the mattress and box spring out to the garage, moved the furniture, and tore out the carpeting. I then found some bleach and soap and started cleaning the bloodstains on the walls and floor. It still needed work, but at least people wouldn't throw up when they see it. \n\nI'd gotten the word from Tom and Meghan that the snatch of Harleigh from the hospital had gone perfectly, and they were on their way to the airport. Another team of warriors from Oxbow Lake Pack, Nate, and his mate Connie, had flown down to replace them. Connie's wolf was similar enough in coloration to Meghan's that she would pass for the same dog. Nate was using the story that he was replacing Tom, who had to head back for work. Since I was a patched member and vouched for them, there was no issue at the gate. \n\nWe unloaded the boxes into a storage area behind the garage; then I called the three teams of dogs and handlers to me outside the gate. \"We're changing tactics,\" I said. \"Way too many Club members are here, and it makes more sense for us to be outside the fence than inside now. There's a hotel about a half-mile back, get three rooms at it. I want two teams on duty outside the Clubhouse at all times. One team stay close to the front gate; the other roam the perimeter of the property. Use the SECURITY vest and the WORKING DOG vest and stay visible, and the handlers are visibly armed.\" It was standard practice for our Packs to get a Minnesota concealed carry permit, plus a Florida non-resident permit. The combination gave us more states with reciprocity we could carry in, and Florida was our main winter hangout. \"The third team can sleep.\" \n\nThey nodded; it was not the best schedule, better to have four groups, but werewolves were stronger and could function on less sleep. \"Food? Are we getting it on our own?\" \n\n\"I'll make sure they send out food for both teams from the kitchen. They don't have dog food around, so you'll have to make do with burgers,\" I joked. Wolves can't laugh, but Connie licked my hand in thanks. \"You're meant to be a deterrent. If a big group comes in, you can't shift. Either get back inside the fence or get out of the way, don't get caught in the crossfire.\" \n\n\"Like when the four Sons came riding for the gate,\" Nate said as he nodded. I'd filled him in on what had happened while we were packing. \n\n\"Exactly. They've got a couple dozen around, and we can't go full werewolf with all these humans around.\" I looked at my watch. \"Work out the schedule and get the rooms under your credit cards, we'll settle up with Pack funds late.\" \n\n\"Yes, Alpha,\" the men said. \n\nI walked back inside the gate to find Rori; she was sitting with a group of the Ladies near the memorial wall. I looked at it and smiled; she'd captured them perfectly, his Harley in tight formation, wind in their hair, her chin perched on his neck. I picked her up out of the chair, bringing her up to my face as her legs wrapped around my waist. \"I am blown away every time I look at your work, baby.\" I kissed her hard as some of the Club members hooted, then set her down. \"Ready for bed?\" \n\n\"Yeah, I'm exhausted. I just finished about twenty minutes ago. Make sure no one touches it,\" she asked the women at the table as she gave me a sultry look. \n\n\"No problem, Rori. Go ride your man; you make beautiful babies together,\" Bumpers said. She was the Old Lady of the Miami chapter and got her name because of her tits arrived in the room five minutes before she did. My sweet girl was embarrassed to be called on her lustful thoughts, but I could sense her excitement over the bond. I took her hand and led her up the stairs to the guest room we had been given. \n\nI closed and locked the door, and she was already tossing her clothes into the hamper. Mine followed as I watched her move into the shower, my body responding to her. She was sexy as hell, and her body had quickly returned to pre-pregnancy shape thanks to her werewolf metabolism and her workout regimen. The example she and Cora set for the women was amazing; all Pack females, regardless of rank, had at least two hours a day of physical activity. Even number days were cardio, mostly swimming, long runs in each form, or stationary bikes. Odd numbered days were weight training. \n\nAnd EVERY day was self-defense. \n\nIt was one of the things I found helpful in my work with abused women; to make them feel they were in control, they had to be able to fight. We had instructors who taught Karate, Judo, Taekwondo, Boxing, Mixed Martial Arts, Krav Maga, Knife Fighting, Pistol, Rifle, Archery, and Wrestling. Every person in our Pack was required to master at least one armed and one unarmed discipline. The gyms in the basement of the Pack House at the lake were filled with these classes throughout the day. \n\nI watched as she stepped into the shower and turned on the water, her toned backside and legs on display. Rori wasn't voluptuous, she was built slender and athletically. She was the fastest runner in the Pack, and her reflexes were her strength in the ring. She made a good complement to my build, which was more typical of Alphas. My height, broad shoulders, and tapered midsection over powerful legs was more like a heavyweight fighter than a runner. It made for fun sparring matches between us. \n\n\"Tilt your head back,\" I asked as she finished getting her hair wet. I massaged her scalp as I worked the shampoo into her red hair, now cut above her shoulders since the twins were born. She moaned as my fingers worked down the back of her head to her neck. Her painting could leave her shoulders and neck stiff, and I let my hands and the hot water relax her. \n\n\"You can do that all night,\" she said. \n\n\"Sorry you need sleep.\" I rinsed it out and put in conditioner, then grabbed a cloth and started to wash her shoulders and back. Like all times we showered together, getting clean was just a side effect of what I was really doing, which was pushing her body to a heightened state of arousal. I loved the feel of my mate as she came on my fingers, her legs shaking as I held her to me. When she was steady again, I rinsed her off. \"Go get in bed; I'll be there in a few minutes.\" \n\nShe turned, her hip rubbing against my excitement. \"Don't you want me to take care of this for you?\" \n\n\"In bed,\" I told her. She finished getting ready for bed as I finished my shower, and when I tucked into bed, her naked body rolled into mine. \n\n\"You're still hard,\" she said. \n\n\"Getting hard isn't the problem around you, getting rid of the hard-on before I stand up is,\" I said with a laugh. \"I love you more every day, and making love to you is better than ever.\" \n\n\"Let's test that theory,\" she said as she straddled my stomach. I reached up to her sides, my large hands lightly touching her before they cupped her breasts. She was still breastfeeding, and I didn't mind the extra size and weight it gave her. I moved my lips to a nipple, nipping and licking as the milk started to let down. \"That feels so good,\" she said as I sucked some of her milk out. \n\nI moved between the two as she reached behind, grasping my maleness and positioning it at her core. The shower and the foreplay had her ready to go, and she moaned softly as she sank on my length. \"Soooo good,\" she said as she raised back up. She picked up the pace, and I could tell she wanted it hard and deep. ",
        "I rolled us over and raised her legs over my shoulders, the angle squeezing me as I slammed balls deep into her. \"So tight and ready for me,\" I said. \n\nHer eyes were closed with the pleasure, and I watched her chest shake with each smack of my hips into her. I wasn't going to last long this way, not with the way she was squeezing me tight when I tried to pull my cock back out. \"I want you to cum with me, love,\" I said. \n\nHer hand moved down to her clit, and she used her fingers to push her closer. \"Fuck me, love. Shoot deep inside your fertile mate.\" \n\nMy eyes widened, and my wolf pushed forward, her declaration pushing him over the edge. I shifted into my hybrid form, my jaw lengthening, and my teeth growing in as the rest of my body became bigger. She screamed in pleasure as my knot formed and was pushed into her. I couldn't talk, and my short stroking quickly took us both over the edge. I bit down on her shoulder as she bit down on mine, her scream muffled by flesh and blood in her mouth. \n\nI felt like I was emptying my whole body inside her until it finally ended. I licked her neck, stopping the blood flow. It would heal before we woke up. I shifted back and rolled us until she was lying exhausted on my chest, both of us breathing hard. The knot was still in place and would stay that way for a while. \"You all right?\" \n\n\"I'm perfect, love.\" She kissed my mark, then laid her head down under my chin. \"You didn't know?\" \n\n\"I think my wolf did,\" I said. \n\n\"My fertile time is just beginning. We should have talked about this first; I can see that. Your wolf isn't going to roll a condom on for you.\" \n\nI just laughed. My wolf was so focused on keeping her pupped that would be poking holes in them. \"It's all right, I want a big family, and I love our babies. I just thought it would be a little longer before your season started.\" \n\n\"My wolf told me after you left. That's why I stayed up; we needed you.\" We talked for a few more minutes until I disengaged, then I cleaned her up. \"Need another shower?\" \n\n\"I just need my pillow,\" she said. Her hair covered my shoulder as she fell asleep in my arms. \n\nI checked in with the patrols, everything was quiet, but I knew it wouldn't be for long. There was a loud banging on my door. \"Frame, Church is being called. Harleigh's been kidnapped.\" \n\n\"On my way.\" I moved her off my shoulder and sat up at the edge of the bed. \"And so it starts. Get some sleep, love, this will be a while.\" I kissed her and covered her up before getting dressed in my boots, jeans, T-shirt, and cut. I was technically a Nomad, but since I had brought people with me, I had a seat at Church with the other Chapters who were supporting the Orlando chapter. \n\nThe anger was real, even if I knew it wasn't necessary. I didn't regret the decision we'd made to get Harleigh out of sight without anyone knowing; it was the safest play for her and the Club. I did feel bad that good men were going to risk death and prison to go after the Sons. \n\nWe were discussing what we could do to help when Tripod called in. Mongo was back with Three Tequila, who had been knocked out and was still out. \"The cops are thick here, and they are pissed. Word is the officer outside the room was found unresponsive. Someone poisoned him, and his heart stopped. They had to give him CPR and shock him, and he's in intensive care right now.\" \n\nMy blood went cold at this. We had to get him out of the way, but the last thing we wanted was for his life to be endangered. \"Laura? You still in range?\" I got nothing back, so she was already gone. I couldn't call her as they were under complete communications silence. I'd deal with her later. \n\n\"Any idea where they took her,\" I asked. \n\n\"Nothing. The guys here saw nothing, and their security system is a piece of shit.\" \n\n\"All right,\" Granite said. He was President of the Fort Lauderdale chapter and a close friend of Mongo's. \"With Mongo out of touch, I'll be running or response here. How many Brothers do we have here now?\" \n\nWe added up the numbers, we had thirty-eight members here at the Clubhouse plus my three dog handlers, and the eighteen we had at the hospital. \"I want fifteen volunteers to strap up and head to Ocala. Link up with the men we have watching the Sons. If she's there, we need people to get her back,\" he said. \"Cottonmouth,\" he said as he looked at his Master-At-Arms, \"You go find volunteers and be out of here in twenty minutes. Club officers, I need you here to coordinate.\" \n\nHe left the room, and the meeting continued. \"These guys have crossed the line with the cop, and that's going to make things even more difficult,\" Granite said. \"They know we will retaliate, and they'll do whatever they can to head off a gang war. We're still on lockdown here, and I want a dozen men out there protecting the women and children minimum. Set up the watches, make them visible and heavily armed. The cops can't stop us from patrolling our property.\" \n\n\"I'll keep my dogs outside the fence,\" I said. \"I can patrol out a few blocks with them, and make sure no one is setting up shop close to us.\" \n\n\"Good idea. Who has contacts with the local police?\" \n\nThe meeting went on for another hour before it finally ended. The sun was rising as I walked out with breakfast for my handlers and their dogs. \"The cops are using us as bait,\" Nate said as he wolfed down the eggs and sausage. \"There are two unmarked cars out there, a block on each side of the road to the gate. The one police car posted on us is four blocks back.\" \n\n\"Don't be surprised if we see more,\" I said. \"Keep your eyes and ears open. I'm going to bed, send to me if you see anything suspicious and call it into the club security room.\" I scratched Connie's ears before walking back inside the gate and up to our room. A quick shower and I was in bed again. \n\nIt seemed like I'd barely fallen asleep when I was woken up by an urgent send from my patrol. \"ALPHA... THEY'RE COMING.\" \n\nCh. 13 \n\nI woke up instantly at the message they were coming, and the next question quickly followed. \"Who is coming?\" \n\n\"The Club. One of the members just arrived at the gate to tell them to open it. It's a van with Three Tequila and Mongo, plus all the others that were at the hospital.\" \n\n\"On my way,\" I sent. I rolled out of bed and reached for my jeans. Rori stirred, then buried her face in the pillow. The scent settled her, and she fell back asleep as I got dressed. I walked out and went down to the parking lot just as the convoy was rolling in. Nothing was left to chance with the danger the Club faced, and the gate closed, and a truck pulled back behind it as soon as they were through. \n\nI watched from the back as Mongo led Three Tequila through the crowd gathered to welcome her. She reassured everyone that she was fine, but the mood was still grim. Everyone knew that the Sons of Tezcatlipoca was out there, and no one believed they would stop with Harleigh's abduction. These men had killed three of them, and biker gangs don't forgive that. \n\nWe all filed back into the clubhouse, where the Prospects and Steel Ladies were cranking out breakfast for the new arrivals and those who had slept in. The place was packed, even with the people who had left earlier for Ocala. I didn't stick around, my spot in bed was getting cold, and I'd rather be with my mate. I checked again with the patrols, who were changing shifts. All was quiet. \n\nI went back up to the room, stripped and tucked into bed with her. When we sleep, we are like rare earth magnets in that our limbs just start attaching to each other. As soon as my head hit the pillow, she has started to glom onto me as I wrapped my arm around her shoulder. My other hand went through her hair as her head rested on my chest. I was a lucky man, not just to have such an amazing young mate but to have found her so early in my life. The Pack she raised with me was just a bonus. \n\nI drifted back to sleep, dreaming of her belly rounded with our child. \n\nJose Correria's POV \n\nPrevious night, Orlando Safe House \n\nWhat had been meant as my revenge had gone wrong. \n\nPapa had known for years which the DEA agent was who had betrayed him. I was raised by my Uncle Manilo, raised in the Sons of Tezcatlipoca and raised to be the next generation leader. My father was not around to see the destruction of the Prussians. That gang was to blame because they patched over the Satan's Riders, who had patched in Andrew Killian, who had betrayed us all. The Sons never forgive, they wipe out. \n\nBy the time I could walk, that gang was no more. The ones closest to the DEA agent were captured, tortured, and killed as an example of why it was a bad idea to fuck with us. \n\nI turned eighteen while Papa was in prison and was nineteen when he was released. The Feds were watching him, and he'd never get close to Sean Ryder. Instead, he had called me into his office at the Club's Los Angeles chapter. When I walked in, Papa was there with the Presidents of all the US chapters. \"Sit down,\" he said. I did, pushing back questions, and waited for them to talk. \"They tell me you have learned well that your Jaguar is strong.\" \n\n\"I have listened and learned to be what I need to be,\" I said. Status among our kind was earned, not given. I had spent much time on my back with teeth at my neck during my training in the mountains with the other Club shifters. It was only in the last year that I was able to hold my own. \n\n\"It is time to prove your worth to the Club and your readiness to start your Chapter.\" I smiled, thankful they had seen it was time. A dominant young male could not coexist in the same territory with another dominant male; pretty soon they would fight, and one would die. We were all related, descended from the same bloodline, and the Club demanded more. The solution was to start new Brotherhood chapters with the younger male taking new territory. \"We have selected men to start the New Orleans chapter with you. They are loyal and strong men, who will not back down from the turf wars that will be needed to gain control of the docks there. With control of ports in Houston and New Orleans, our Cartel partners will stabilize their shipping routes.\" \n\n\"I understand what you need, and I will accomplish it,\" I said. \n\n\"We know you will. The men are waiting outside. You are to take them to New Orleans to scout out a new Clubhouse and your opposition among the gangs. This is the intelligence report on the ports.\" He handed me a thick file. The Cartel intelligence operation was better funded than the American intelligence agencies, and the information was complete. They employed hackers, agents, and informers like no one else. If it could be learned, it would be. My men and I would review it carefully, find the weak points, and ruthlessly exploit them. \n\n\"What is my task to prove my worth,\" I said. There was always something, usually involving killing. \n\n\"It is time for us to take our revenge on the man responsible for your mother's death.\" He tossed another folder across the table to me; on the cover was a photo of Andrew Killian in his Prussian cut. \"His life has been on borrowed time. I intentionally left him alone all these years because I wanted to watch him die in front of me. Every night in prison, I went to sleep praying to Tezcatlipoca for the chance to watch his eyes go blank. I cannot travel to him without hurting the Club, and you are of age now to avenge your Mother. You are to take a few trusted men to Orlando and take revenge for both of us. I want you to film every moment of his torture and death and bring it back to me. Do this, and you will have proven your worth to the Club and me.\" \n\nIt was an assignment I would be honored to perform. I was shocked Papa would not be there himself, but this traitor did not deserve to spend another day breathing. His wife and daughter were his on borrowed time, and they would be killed in front of him before I gave him the mercy of death. \"I am humbled you would allow me my revenge, and his bloodline will not survive to the end of the week.\" \n\n\"You will prove yourself or die trying,\" he said. \"There is no coming back here for you.\" He and the other Chapter Presidents stood, I did as well. Papa came around the table and crushed me in a hug. \"You will make me proud, and you will be a great leader of men. I look forward to seeing how you take our revenge.\" \n\n\"I love you, Papa. I will not fail.\" The other men congratulated me; then I walked out to meet the men selected to go with me to the new chapter. Having grown up in the Club with Manila, I knew almost all of them. They gathered around me in the Clubhouse. \"Thank you for volunteering to start the New Orleans Sons of Tezcatlipoca. We leave in the morning. Settle your affairs and be here by eight.\" \n\nMost of them left, but I held back two men. Ghost and Ripper were strong humans, loyal and smart, both men had my respect. Club rules prevented them from taking the President job, that could only go to a blood descendant, but they were my choices. \"Ghost, I want you as my Vice President. Ripper, you as Master-At-Arms.\" \n\nBoth men smiled as I said that. In a new chapter, the leaders were chosen, not elected. \"Hell yeah,\" Ghost said. \"New Orleans is not going to know what hit it.\" \n\n\"Thank you,\" Ripper said. \"I won't let you down.\" \n\n\"Good. Ghost, you start looking at the New Orleans file. I'll need you to obtain a location for a clubhouse; we want it close to the docks. Pay attention to the street gangs and bikers in the area and figure out which we need to deal with first. Ripper, you and I will be taking two men to Orlando, there are a traitor and his family to kill.\" \n\nRipper's smile was wide at this. He got his name after Jack the Ripper and was famous for his knife fighting. He was an expert at torture with it, able to inflict hours of pain without the victim bleeding to death. \"Who is the target?\" \n\n\"The DEA undercover agent who got my Mom killed and my Papa put in prison,\" I said. \"He goes by Sean Ryder now. He retired a few years ago and lived in Orlando with his wife and daughter.\" I showed them photos of the family. \n\n\"This is going to be a fun job,\" he said. \"We get to fuck both of the women, right?\" \n\n\"Of course, and after you cut his eyelids off, that fucker won't be able to stop looking at them as we all take them.\" It was our way; just killing them wasn't enough. \n\nThat was earlier in the week. I had left most of the men in New Orleans while Ripper, Taco, and Loco rode with me to Orlando. We didn't plan to stay, so we drove towards his house right after lunch. We all wore gloves and bandanas to avoid leaving DNA or fingerprints behind. Ripper and I got off our motorcycles a few blocks away and broke into the house while they were eating sandwiches in the kitchen. In moments, the two were bound and gagged. We turned them over then went and got our motorcycles. \"Where is the daughter,\" I asked. \n\n\"According to her college schedule, she should be here. Her last class ended at ten.\" \n\n\"We'll just have to amuse ourselves until she arrives home.\" When we went back in, they had moved Sean to the bedroom where his wife was gagged and tied face-down on the bed, her clothes ripped, her face bruised from where they had hit her. Sean had been hit in the face a few times and was gagged with his Steel Brotherhood t-shirt. \"Did he give you any trouble?\" \n\n\"Nothing we couldn't handle,\" Taco said. \"Camera is set up as you asked.\" The small camera would show both of them from the side as we did our work. \n\n\"Good. Ripper, set up your stuff.\" He had carried in a bag with his torture implements. Pulling over a table within view of the two victims, he plugged in a big soldering iron to heat up. Pliers, hammers, scalpels, surgical instruments, and larger knives appeared until a small propane torch and igniter took the stage. \"You know who we are?\" \n\nSean nodded, still defiant. \"Then what happens here this afternoon should be no surprise to you. Your treachery cost my father his freedom and my mother her life. I am going to enjoy every second of your suffering.\" \n\n\"Hold him tight,\" Ripper said. \"Don't make a move or you'll lose the eye.\" Using a scalpel and surgical pliers, he pulled Sean's left eyelid up and carefully sliced it away at the base. Sean was trying hard not to scream as the blood covered his eye. Ripper cut the other one, then used the soldering iron to cauterize the wounds. When he was done, he used water to wash the blood from his eyes and face. \"Now you watch. Watch what happens when you betray the Sons of Tezcatlipoca.\" \n\nWe kept one man on the lookout for their daughter Harleigh and cops while the rest worked them over. For the next two hours, Sean Ryder watched his wife being gang-raped, brutalized and tortured. We didn't leave him alone either; Ripper carved on him with his knives, we cut off fingers, smashed toes, and turned him into a bloody mess. By the time we put a bullet in Kelly's forehead, he was barely alive, and the smell of blood and burned flesh was thick. \"We need to do it now,\" Ripper said. \n\n\"Carve the symbol,\" I said. He used his knife on the barely conscious former agent. I picked up the camera, bringing it closer as I brought out my pistol. Placing it at the center of the concentric circles, I looked in his eyes. \"For my mother,\" I said, then I pulled the trigger. \n\nBrains splattered on the dresser and wall behind him. I stopped the recording and put the camera in my pocket. \n\n\"Shit, she's here,\" Loco yelled. \n\nWe all ran out, covered in blood as she backed into her parking space. I pulled out my pistol, but she took off. I fired a few times, and I saw her bike wobble as she was hit, but she kept going. \"AFTER HER,\" I yelled. \n\nShe was fast; then she was through the gate of the Clubhouse for the Steel Brotherhood. The men were shooting at us, and I was hit in the left arm. The others were dead, so I got the hell out of there. \n\nI pulled over a mile away and took off my cut, then used a spare shirt to reduce the bleeding. I used a burner phone for emergencies and texted that I needed a doctor and a place to stay. A few minutes later, an address came up. I drove to the Cartel safe house, where a doctor stitched me up and left me alone. \n\nThe next morning, a man from the Cartel visited. \"The girl is in the hospital and under police protection,\" he said. \"Sloppy.\" \n\n\"I will make it right,\" I said. \n\n\"Not now. The death of the agent and the prosecutor has every alphabet agency on alert. You wait until she is no longer under police protection before you try again. Does she know anything?\" \n\n\"She saw me, she saw our cuts.\" \n\n\"They know of the Club already, that doesn't matter. Can she identify you?\" \n\n\"It was only a few seconds. Maybe.\" \n\nHe nodded. \"We'll find out from our people in the DEA.\" He handed me an address. \"This is a property in Ocala, bring reinforcements. You're going to have to take her from the Brotherhood.\" \n\nI nodded. \"They aren't an outlaw gang, and they got lucky. My men will take care of it.\" I thought back to my vow. Harleigh Ryder had to die, or I could not return. When he left, I got word to my Vice President and told him to go to the address. I didn't say anything else that the Feds could intercept, and the burner phones would be destroyed after this use. \n\nIt took me a few days to heal up. No humans knew I was a Jaguar, or that my healing would be so quick. \n\nA phone call told me that cops were swarming the hospital and Harleigh was missing. \"Fuck,\" I thought to myself. \"The Feds have taken her.\" I requested secret transport me to Ocala and my men, knowing from the news coverage that the police and Feds were all watching closely. Lying in the back of a minivan, we made our way to the property. \n\nI met with my men, and we came up with the plan. We couldn't get Harleigh yet, but we could avenge the loss of three of my Club members at the hands of the Steel Brotherhood. Vans had been parked on a road behind the house, and we sneaked out under the noses of the police who were watching the place. ",
        "We could hit the Brotherhood and be back before they could get a warrant, and the cops would be our alibi. \n\nCh. 14 \n\nJose Correira's POV \n\nOrlando \n\nWe were in four vehicles, and we made Orlando just after sunrise. The Cartel provided us with fully automatic AK-47's, which would give us an advantage in firepower. Daylight wasn't the best time to be doing this, but they wouldn't expect it. My driver, a female Cartel intelligence operative, gave us the information they had gathered while I was gone. \"The Steel Brotherhood left the hospital and have returned to the Clubhouse. They are on lockdown; the families are in there too. We estimate eighty to a hundred people. They have eight armed men on patrol inside; two at the gate, two roaming and four on the roof. They also have two canine patrols outside the gate.\" \n\n\"Can we get close enough for a truck bomb,\" Ghost said. \n\n\"You'd need a lot of explosives for that, and we don't have time,\" she said. \"Too much space between the gate and the building, and unless you are talking Oklahoma City level bang, it won't get there with the truck blocking the gate.\" \n\n\"How are the surrounding buildings?\" \n\n\"Similar in height or higher. Good sniping positions.\" I liked the sound of that, except they would just hole up inside. We had to smoke them out. \"How far are the side and back fences from the building?\" \n\n\"Ten to twenty feet on the sides, maybe thirty in back. The main parking lot and garage are in front.\" I smiled; that was perfect. \"What about cops?\" \n\n\"Three vehicles in the area, none closer than three blocks.\" We'd take them out first so they couldn't warn anyone. I started making a list of what we would need, and we got to work. \n\nIt took until almost nine in the morning before we were all in place. We had ditched the cuts and dressed like normal people, our cars dropping people off out of sight of the Clubhouse. I walked up to the unmarked police car that was parked a few blocks away. The windows were down, and the guy was eating a breakfast burrito. \"Officer,\" I said. When he looked up, my silenced .22 pistol put a hole in his forehead, and he slumped down into the seat. \"Car three down.\" \n\nThe other two reports came in shortly after; now the Brotherhood had no protection. I made my way to the building we had selected as the prime sniping position and climbed the ladder to the roof. This building was about fifty feet from the front gate on the right side; other men were taking positions on four other buildings. Keeping down, I made my way to the other side where two other men were waiting with their rifles and mine. The radios we were using were the same ones Special Forces used, with earpieces and push-to-talk microphones. I had the teams on a card and marked them off as they reported in. We had everyone in place; I looked at my watch; it was eight fifty-five. \n\n\"Go in thirty seconds,\" I said. This was the signal for the throwers to take their positions just around the corner from view. \"Ten seconds.\" Eight men lit the flares attached to the gallon jugs of kerosene and readied themselves for the run. \"Five, four, three, two, one, FIRE.\" \n\nAt the signal, all of the snipers raised from their hiding positions and opened up on the guards. The volley of fire caught them by surprise; I fired at one of the dog handlers, the shot hitting him in the chest. The woman is standing with him I ignored as she ran away from the gate, the dog following her. Jugs of gasoline were hurled over the chain link fence, crashing into the building and the rooftop and setting everything ablaze. \n\nTen seconds into the attack and things had gone perfectly. My men had eliminated all armed threats, and now the shooting gallery would commence. \n\nThe doors burst open, and men ran out, and that is when we opened fire with the AK-47's. The front door was a kill zone, the first men out lasting as long as the first men in a landing craft on D-Day. It only took a few seconds for the men behind them to realize this was a bad idea. They went back inside and closed the doors as we continued to fire through them. \n\nI was looking for targets; there were about a dozen men down, and the building was rapidly catching fire. Soon they would have no choice but to come out, and we would cut them down when they did. \n\nAlpha Rori King's POV \n\nOutside the Gate \n\nChase was exhausted, so I let him sleep while I went outside the gate to check on our patrols. I was talking with Nate and out front when the wind shifted. I didn't recognize the smell, but my wolf didn't react well to it. \"You smell that?\" \n\nBoth of them took a deep smell. \"It's.\" BANG. \n\nIt sounded like firecrackers going off as rifle fire started. Nate was hit in the chest. \"RUN,\" I said. \"CHASE, ATTACK IN PROGRESS, SNIPERS ON THE ROOFTOPS.\" I ran for the building on the left as I sent Connie in her wolf to the one on the right. \"Find a way up and take out the snipers.\" \n\nThere was no way up in front, but there was a ladder in the back. I ran up the stairs, cursing that I hadn't armed myself when I left. When I reached the top, I saw three men with rifles firing on my people. I shifted into my wolf, my clothes shredding as I did, and charged for them. \n\nThe first man I came to I caught in the neck, my teeth tearing it apart. He started spraying blood, and I dropped him before I went to the second man. His eyes went wide, and he tried to bring his rifle around on me, but he wasn't fast enough. I barreled into him, my teeth around the front of his neck as we crashed to the ground. I bit down hard and pulled back, taking a chunk with me. I spat it out and looked at the third man. \n\nIt wasn't a man. \n\nA huge male cat faced me; its long body spotted and tail twitching. \"Chase there's a jaguar here.\" \n\n\"Kill it, kinda busy.\" \n\nI growled at the big cat, which probably outweighed me by a hundred pounds. He pounced towards me, and I barely escaped being torn by his razor-sharp claws as I moved to the side. He turned quickly, and I dodged again with my speed. \n\nI didn't know what to do; wolves didn't fight with claws as the big cats did. I had no advantages here. I kept dodging as the gunfire stopped. \"Guys I'm defensive here, on top of the building to the left of the front gate.\" \n\nConnie replied first thanks to them joining our Pack temporarily for just this reason. \"Coming, Luna. Snipers down on my building. Alpha, send people out the front and take out the snipers on the buildings to the side and behind.\" \n\n\"Brent and I are almost there,\" Laura sent. \"He's wounded but can shift.\" They were Pack members that had been on patrol on the perimeter of the fence and must have barely escaped the opening volley. \n\n\"Do it out of sight,\" Chase reminded us. \"We're coming out now.\" \n\n\"We're leaving the hotel now,\" Charlie said. \"We're two minutes out, bringing guns and the Suburban.\" Charlie and Bonnie were the other pair; they were resting at the hotel while the other two patrolled. \n\nI knew I just had to stay alive until they arrived, so I kept ducking and weaving. I wasn't entirely successful, as claws grazed my shoulder and my jaw. This had to be Jose, and he needed to die on this rooftop. \n\n\"Coming on your right,\" Connie sent. I dodged left, and Connie's teeth tore a strip from his flank before he could react to the new aggressor. \n\n\"Watch the claws, distract and attack,\" I said. Laura joined us, followed by a limping Brent. The tide had turned now, and the jaguar was now on defense. I saw his eyes flick to the edge of the roof and figured it out just before he did. \"He's going to jump.\" When he lunged towards Brent then sprinted for the edge, Connie and I were already moving. \n\nHe leaped off the edge before I could get there, but Connie was closer. She leaped for the man responsible for her mate's death as I came up short of the edge. I watched them tumble through the air, her teeth still holding the back of his neck, until they landed with a liquid splat on the parking lot below. \n\nChase's POV \n\nOrlando Clubhouse \n\nRori's voice in my head that we were under attack had me up and out of bed in an instant. I pulled on my boots and grabbed my pistol, not bothering to dress further before rushing out of the room. The sound of automatic weapons fire was all around, as were the shouts of 'FIRE' as the flames erupted everywhere at once. \"Get the women and children to the bar,\" I yelled as I ran down the stairs. It was pandemonium; kids were screaming, and gunfire was everywhere. I reached the bottom of the stairs just as the first group of men armed up and headed out the front door. \n\nThey were cut down in seconds. \"BACK INSIDE NOW,\" I said. Moving to the door, I pulled a wounded brother back in, and we closed the doors. The glass was bulletproof; our people weren't. I pulled the fire alarm as I moved back inside, this would at least notify the Fire Department we had a problem. \n\nAt least if World War Three out there didn't get their attention. \n\nI stood on top of a chair and yelled to get their attention. \"Everyone armed, stay near an exit. \n\nAdults that aren't, grab a fire hose or extinguisher and keep the fire out. Kids, get all the bar towels out and wet them down in the sinks. Pass them out, keep them over your heads and breathe through them when the smoke gets bad.\" \n\n\"Chase, there's a jaguar out here.\" \n\n\"Kill it, I'm kind of busy.\" I couldn't get out there yet, we had to find a way to bust everyone out of the Clubhouse before the fire got too bad. I continued to get people organized. The Pack link let me know help was on her way. \n\n\"Slick, when we get out you need to head to the truck and move it out from the gate. Take four men with you, take up cover near the fence and take out the rest of those snipers. Ratchet, you five with rifles head up to the roof. The rest of you move quickly to each corner of the clubhouse and take out the ones to the side and back. As soon as it's clear, we get everyone the fuck out of here. Got it?\" \n\nThey nodded. \"Head up to the roof, the rest of you to the front. It sounds like the sniper fire is dying down.\" \n\nThey followed me to the front door; I pushed it open, but I knew from the sends from my Pack that they had taken out the shooters on the buildings out front. The Jaguar wasn't going to fire a rifle. \"Stay right behind me and don't stop moving until you're in cover,\" I said. Pushing the door open, I sprinted across the parking lot to the front gate. \n\nThe Prospect was dead, and I grabbed his rifle off the ground as I went to the concrete pillar. Raising the rifle, I saw nothing, so I took cover behind the parked motorcycles and looked to the buildings on the left side. I got one shot off, the man dropping like his battery had been removed. Slick moved the truck out of the way, and another man slid the gate open. \"SEND THEM OUT FRONT,\" I said. \"HOLD AT THE WALL.\" We needed to take out the rest of the shooters before we got them away from the cover the building gave us. At least outside they could breathe. \n\nThe men heading to the roof had to turn around and come outside because the flames were too much. The gunfire finally stopped. \"Head out, check out these buildings and make sure they are all dead,\" I said. The Brothers ran out the front gate and to each side while I ran to the building on the left. \n\nI got to the back and saw movement out of the corner of my eye. Freezing, I watched in horror as a huge Jaguar leaped off the building, a wolf latched onto his neck as they tumbled through the air. They landed with a splat, her teeth pulling free in a spray of blood as she landed on top of him. \"NO,\" I screamed. \n\nI was on her in seconds, and it didn't look good. The jaguar moved, and I shot him in the head with my rifle before I dropped it on the ground. Connie was panting hard and wheezing, and blood was coming out of her nose. \"Connie, you can't shift.\" She whined. \"Just hold still.\" \n\nI checked her over, she had broken ribs, and a punctured lung and Luna knows how many other internal injuries. Her breathing became more labored. \"Bury us together back home,\" she said, then she went limp. I let her down, my fingers pulling her eyelids shut. \n\nBrent limped down the stairs from the roof, Laura and Rori behind him. They had pulled on bloody clothes from the men they had killed. \n\nI looked around to see the building had cameras under the eaves. We couldn't shift or move evidence without the cops getting the tape. \"Leave him there, the cops will think it was a mascot,\" I said. I could hear the sirens approaching and smell the people heading our way. \n\n\"What about the men?\" \n\n\"Leave them before the police arrive, you two shift back to wolf form out of sight and get your vests on. We'll say our patrol dogs took them out.\" \n\nI don't know what story we would need, but we were going to need a lot of ambulances. Many good people had died this morning. \n\nI picked up the brave warrior wolf and carried her towards the street as the first responders arrived. \n\nCh. 15 \n\nRori's POV \n\nBehind building next to burning Clubhouse \n\nLaura had shifted and had her \"working dog\" vest on, while Brent was in a bloody shirt and pants, no shoes. \"Chase, Charlie, and Bonnie are in sight. They need to take the jaguar and Connie away. We can't let them run DNA tests on them.\"  \n\nThe answer didn't take long. \"You're right, better the questions than the proof. Charlie, head west a block and come in the back lot. I'll go back to Nate and the others. Rori, you take everyone home. Get the private plane and stay out of sight.\" \n\nWe always kept extra clothes and sandals in Pack vehicles, so that would be easy. The evidence had to go, though. \"I'll be back in a minute. I'm going to get Jose's clothes, no point in raising more questions.\" \n\nHe turned around, and as soon as Charlie stopped, he had the tailgate down. He spread a tarp in the back and laid Connie's wolf down, right as Brent and Laura tossed the big Jaguar into the back. Bonnie passed them the key cards to their hotel rooms so he could check them out and retrieve their things. I came down the ladder from the roof and tossed the torn clothes I'd collected in the back. Covering everything with the tarp, Chase gave me a quick kiss. \"I'll be back home in a few days, love.\" \n\n\"Bye.\" I got into the Suburban, and we drove away. There wasn't time for more; we had to get out before the police set a perimeter. I looked back at the black and grey smoke that was rising from the clubhouse, and I cried. I cried for Tom, who was cut down without warning. I cried for those who died in the attack, I cried for the clubhouse that was burning, and I cried because I was going home while my mate had to straighten this mess out. He got the short end of the straw because this attack by the Sons put all shifters in danger. \n\n\"Chase, find those hackers the Brotherhood used, and have them delete the video surveillance of the buildings in front before the Feds get it,\" I told him. \"If they can't get it remotely, you'll have to have someone break in.\" The last thing we needed was a video of us shifting, or of a wolf and a jaguar fighting in the back lot. \n\n\"With the fire and the investigation, I'll do that myself,\" he said. \n\nI pulled out my phone that I'd rescued from my torn clothes. Finding the number, I called the pilots of our charter jet and told them to be ready to leave for Two Harbors in an hour. They said they'd file a flight plan and prepare to leave as soon as possible. \n\nThen I made the call no Alpha wants to make, made worse by the fact that these weren't our Pack members. Nate and Connie had volunteered to help us since our new Pack didn't have many warriors yet. I never imagined this job would cost them their lives. \"Hello,\" Alpha Michael answered. \n\nEveryone had cleaned up by now and put some clothes on, but not clothes appropriate for Northern Minnesota in December. I saw the sign for a Wal-Mart and told them to drop Bonnie and me at the front, then drive somewhere they could dump the bloody clothes. \"What about the cat,\" Bonnie asked me. \n\n\"It needs to disappear. I don't think we'll find that in town, we'll have to take it back with us.\" \n\nIt took us twenty minutes to get everything we needed. They didn't have winter coats, but at least we got jeans, socks, shoes, flannel shirts and hoodies for everyone. While Bonnie finished getting all the clothes in the cart, I took another back to sporting goods. I found more tarps, duct tape, and two some super-sized coolers with wheels and handles. At checkout, I bought forty pounds of ice and put the bags in the bottom of the coolers. Sending to Charlie when we were ready, Bonnie put all the clothes in the back seat while I put the coolers in the back. \"Drive somewhere no one will see us,\" I said. \n\nIt took a while to find a dead-end street with no one around. We unloaded the coolers, then moved Connie's wolf into one Igloo and the jaguar into the other. Charlie and I taped them closed with duct tape and the latches. We couldn't afford to have one to pop open during the flight. \n\nWe arrived at the airfield and drove to the hangar where the pilots were waiting. They were used to our demands for privacy and said nothing as we loaded the two big coolers into the cargo bay. \"We're loaded up and leaving, my love,\" I sent to Chase as the pilot closed the door. \"How is it going?\" \n\n\"It's a clusterfuck; they found three dead cops. It's like a police convention around here.\" \n\n\"The clubhouse?\" \n\n\"It's a complete loss. The police wouldn't let the fire trucks approach until they had verified there were no more active threats. By then, it was too late.\" I felt horrible for the Club, that place had so many memories, and now it was gone. \"Most of the motorcycles are a loss too; the flames were too hot to go back for them.\" \n\n\"Help them out, love, we have the money.\" Our Pack was doing well, and who knows how long it would be until the insurance would pay out. \n\n\"I have to go. The detectives are starting to do interviews.\" \n\n\"Love you, my mate. I'll kiss the babies for you.\" I closed the link and belted myself into the comfortable leather seat. I was asleep before takeoff. \n\nMongo's POV \n\nOutside Orlando Clubhouse \n\nI was numb. \n\nThe police had evacuated a two-block radius from the Clubhouse, which was still burning. Tensions were high as three police were found executed at close range in their patrol cars. It didn't matter that we were a law-abiding Club, or that the attack had killed thirteen Club members and injured another seven. All they saw was a gang war between the Sons and us. \n\nAll of us who had evacuated the burning Clubhouse gathered in a fenced parking lot of a nearby business. Police surrounded us, and basics like water and shade weren't available. I went to the Sergeant, who appeared in charge. \"Get back with the others,\" he said as two more officers flanked him. \n\nI stopped a good five feet away. \"Look, we have women and children here. They're scared, tired, and hungry. You can't keep us locked in here.\" \n\n\"You're all suspects in a murder investigation,\" he said. \"Get back now.\" \n\n\"No. I want to talk to your supervisor.\" \n\nMy attitude ticked him off, but the news helicopters were already circling overhead. He made a call on the radio, and a few minutes later a man in a suit approached. \"What's the problem here, Sergeant?\" \n\n\"The problem is you have a bunch of fire victims held captive here who are scared to death, and you aren't letting them go home.\" \n",
        "He looked at our group. There were Steel Brotherhood and Steel Ladies wearing their cuts, but also a couple of dozen children. Not everyone was fully dressed, a few were barefoot and wearing only shorts. Huddled into groups, the Moms were comforting their children as they sat on the curb. \"We need to interview the witnesses before we let you leave,\" he said. \n\n\"Most of these people were stuck inside and saw nothing,\" I said. \"Let me get them home, or to a hotel.\" \n\nHe turned back and talked to a few detectives before he turned back to me. \"Have those who didn't witness any criminal acts line up and my Detectives will get their contact information and ask a few questions. How are you getting them home? Your motorcycles are all back by the fire.\" \n\n\"Give me a location where I can send cars to pick them up.\" \n\nHe pointed out a pickup spot a block away, behind the police line that was keeping the press away. I walked back to the group, quickly organizing them as the Detectives started to collect their information. Those of us with phones called for rides to get the local people home. The visiting Club members were getting hotel rooms calling their home clubs for help. \n\n\"What about the rest of us,\" I asked after the process started. \n\n\"The rest of you will have to go downtown and be interviewed.\" \n\nI shook my head, no. \"My men are taking care of their families. We can give our statements here; then we are going home.\" \n\n\"Not happening. We've got sixteen homicides including three police officers, and you're all suspects.\" \n\n\"We were fucking attacked while I was sleeping!\" \n\n\"Then put that in your statement, President. You're lucky, our officer at the hospital pulled through, or your club would be responsible for four funerals.\" He looked back to where a bunch of black Suburbans was arriving. \"Great, the Alphabets are here.\" Sure enough, a dozen men with dark suits and red ties stepped out, sunglasses in place. \n\n\"DEA Senior Agent Frank Donovan, leader of the Tezcatlipoca Interagency Task Force. The Task Force is taking over the investigation,\" he said. \"What's going on here?\" \n\nThe Lieutenant was flustered, then his Chief came up and stood next to Frank. \"We're taking statements from those people who didn't see anything. We're prioritizing the women and children,\" he said proudly. Like it was HIS fucking idea. \n\n\"My men will pair up with yours for the interviews. Any statements they've already taken are to be shared with us,\" he said. \"Chief, our command post is being set up now. You and your senior men should join me there.\" \n\n\"I've got three dead cops,\" the Chief said. \n\n\"Plus thirteen dead people with the Steel Brotherhood and eleven dead members of the Sons of Tezcatlipoca,\" Donovan said. \"When the crime scene guys finish, we'll get your men properly escorted out. In the meantime, I have to head off a multi-state gang war here.\" \n\nShit, only eleven? Frame told me they killed five on the rooftops out front. They had over twenty in Ocala, so half of their group was still out there. I needed to warn my people. I turned away, only to have Donovan ask me to stop. \"Mongo, you have multiple Chapters here?\" \n\nI nodded. \"I had representatives from six chapters and the Southeast Region President. He was out in the parking lot with his old lady when the attack began. Both died in the initial gunfire. The Fort Lauderdale President, Granite, he was taken away by ambulance after being shot trying to break out the front door. He can't feel his legs.\" \n\nDonovan winced a little, losing so many people were going to make a negotiated peace very difficult. For a guy like him, we were a problem to be contained. \"I'd like to speak with the senior representatives of your Chapters. Alone.\" \n\n\"I'm not sure that's a good idea, Agent Donovan.\" I looked over at the men who were standing around. They were mourning the good people lost and plotting their revenge. \"The three cops who died weren't here to protect us. They were parked blocks away, too far away to help and not close enough to deter the attack. The locals set us up as bait, and we don't appreciate losing men because of it.\" \n\n\"What do you mean?\" \n\n\"I mean we all knew the Sons might retaliate for the loss of their men, and the police kept us from properly defending our people. We lost Harleigh in the hospital because you wouldn't allow my Club to keep members with her. We couldn't even go inside; our guys had to sit in the parking lot where they couldn't stop a thing. Then here, we've got women and children on lockdown inside, and the cops can't even park a cruiser by the gate. The Chief was the one who told us to stay inside the gates, or we might get arrested. You'll have to forgive us if we aren't overly trusting of the authorities right now.\" \n\nHe looked back at the Chief. \"There's going to be a lot of 20/20 vision in the rear-view mirror on this one,\" he said. \"I'd still like to talk to them.\" \n\n\"Fine.\" I walked over to where the men were gathered and walked back with the senior men left from the five Chapters that had responded plus our Nomad, Frame. \"Where can we go?\" \n\nHe took us over to the corner of the parking lot, away from everyone else. \"Look, I know you think the cops are to blame on this, but we got played too,\" he said. \"My task force hit the home in Ocala, where the Sons of Tezcatlipoca were staying. It had been under surveillance since they arrived.\" He opened his iPad and showed us a photo; it was an infrared shot of a home, with maybe two dozen bright spots inside. \"This was taken by a drone last night. All their rides parked in the pole barn and all of them inside the house. Early this morning, a van arrived with a female driving. Our stakeout got an infrared shot. It showed a person in the back sitting and another lying down. We thought it was Harleigh, so we put together a team to take it out.\" \n\n\"Why didn't you stop the van before it got there?\" \n\n\"No time. There was a delay in finding Harleigh missing, and by the time the Marion County Sheriff got the alert, the van was already inside.\" I just shook my head. We weren't fast enough either; we'd gotten a text after the attack from the guys we sent to Ocala saying the cops were everywhere. \"We hit it at nine this morning.\" \n\n\"Five minutes after the attack started here,\" I said. \n\n\"Yes. The place was empty, the motorcycles still in place, and no sign of Harleigh. They slipped out of there, probably thinking they could hit your Clubhouse and get back while everyone thought they were there.\" I had to hand it to them, it was a ballsy plan. \"We're still identifying the men you killed, but the ones we have so far are all known members of the Sons of Tezcatlipoca.\" \n\n\"I could have told you that,\" I said. \"Even without cuts, their tattoos give them away.\" \n\n\"We know the men who were in Ocala. Warrants for their arrests on arson and murder charges are being prepared now by the State, with the exceptions of the ones you've killed. Jose Correria just made the FBI's Ten Most Wanted list, and the manhunt for him and his associates in this state is winding up. The Bureau of Alcohol, Tobacco and Firearms is involved on a Federal level now because the weapons they used included full-auto AK-47's. The DEA and FBI are still involved due to the death of a former agent and the kidnapping of her daughter. The full weight of Federal law enforcement is going to fall on this Club and its members. Florida has the death penalty, and the Federal Government does as well.\" \n\n\"Eventually,\" Frame said. \"Maybe ten or twenty years from now.\" \n\n\"This is as friendly a warning as you are going to get. Your Club isn't an outlaw Club, and you've done nothing more than protect your own. I understand that and I respect that, but if you do what you're thinking of doing right now, you're going to be taken down as well. You have no idea of the pressure coming down on us to stop this gang war. Right now, I'm focusing on the Sons, but step one foot out of line and your Club will get stomped on too.\" \n\nI didn't like this a bit. My men wanted payback. \"Club first,\" Frame whispered in my ear. \n\n\"What can I tell my Club is in their best interests if we stay out of this,\" I said. \n\n\"Well, the Feds won't come down on you. The problem with investigations is that you can't limit them. You go after Trump, but what does the Special Counsel get? Convictions of lower level people for tax evasion or real estate fraud, stuff they found because teams of people crawled up their asses with a microscope. Then we find something in your Chapter, and we have probable cause to look for it in your other Chapters. How many of you would stay out of jail with the IRS, BATFE, FBI, DEA and the States looking at you like there is blood in the water?\" He was starting to piss me off. \"Al Capone went to jail for tax evasion, not murder.\" \n\n\"So, you're threatening us,\" one of the VP's said. \n\nHe just put his hands up. \"I'm trying to give you some good advice and keep you guys out of the shit storm that is building out there.\" He looked over at me. \"Sean was my friend; he was a stand-up guy, and he was a member of your chapter. I trust he wouldn't have joined your Club if it was dirty. The problem is that I've got firebombs and dead bodies on television, and people think a gang war is breaking out.\" \n\n\"Can you give us a minute?\" \n\n\"Sure. I've got to talk to some people. I'll be back in ten minutes.\" He walked off and left us alone by the fence. \n\n\"What do you guys think,\" I asked. The discussion brought out all the objections and the calls for retaliation. \n\nFinally, Frame stopped everyone and looked at us. \"Let me ask you guys a question. Is it more important that we avenge the men we lost, or that the Club is seen publicly avenging them?\" \n\nHe had a point. If we openly went after the Sons of Tezcatlipoca, it could be the end of our Club. The DEA supervisor wasn't kidding about how bad it could get. Many a biker gang had fallen to Federal investigations and RICO act prosecutions. \n\nChase looked in my eyes, then the others. \"When those guys the year before last beat up Aces and left him with broken ribs, we didn't go on private land and start a war. You trusted Canvas and me to make sure the guys paid the price, and we made sure they did.\" It was true, every Chapter in the country had watched the video of that tag team beatdown finished by my mate. \"You are going to have to be lily-white victims to stay out of trouble. Mourn, bury the dead, replace your motorcycles and rebuild the clubhouse. Do and say everything right; you're letting the police handle it, you were just defending yourselves, look at what these outlaws did to our law-abiding clubhouse. Get the press on your sides, get the Feds off your back by cooperating, and save your club. Let the cops find and prosecute these guys; they've got a hardon for them because they killed cops before they killed our people. If they catch them, they'll execute them for us.\" \n\n\"And if they don't?\" \n\n\"You don't worry about that. Let me deal with this, apart from the Club. Mongo, I hate to do this, but I renounce my membership as a Nomad in the Steel Brotherhood.\" \n\nMy jaw dropped. \"No! We need you in the Club, and we need Rori.\" \n\nHe was determined to do this. \"The first person who died in the attack was a friend of mine, not even in the Club. They tried to trap my wife and me in a burning building. I don't have to be Club to find these fuckers and take them out, and I'll do it in a way that doesn't blow back on you. I need you to trust me and stay cool.\" \n\nI let out a breath. \"You sure this is the play?\" \n\n\"It's the best thing for the Club, Mongo. I have contacts and resources you don't, and I'll get it done. I give you my word.\" \n\nI looked at the other men; they were nodding. \"Fine. You can quit the club, but Rori remains a Steel Lady. There's no way I'm giving up that week at the Lake after Sturgis every year.\" The party at their land on the North Shore is a highlight of our Club calendar and was becoming the unofficial national get-together. \"You need to get this done before then.\" \n\n\"I'll do my best,\" he said. \"As soon as Tom's body is released, I'll be flying him back home. You won't hear from me again, but you might want to pay attention to the news.\" \n\n\"I look forward to it.\" We broke up and went back to the rest of the group. We'd have to bring this to Church as soon as we could get together again, and I'd have to talk to the National leaders. I just hoped they'd listen."
    ],
    "authorname": "partwolf",
    "tags": [
        "biker",
        "club",
        "gang",
        "love",
        "pack",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/buried-treasure-ch-11-15"
}