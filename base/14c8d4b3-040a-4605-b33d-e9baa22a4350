{
    "title": "Angel Flight",
    "pages": [
        "\"Mr. Stewart? You ready to go, sir?\"\n\n\"You bet. Lead the way!\"\n\nThe 96-year old man didn't need a walker, and only used a cane when he expected to have to walk enough to cause age-related aches and pains. This trip to Washington DC was one of those times, so he grabbed it, stood up, and made his way toward the waiting jet.\n\n\"Good morning,\" they heard a flight attendant say to a boarding passenger as they got closer to her.\n\n\"Welcome aboard,\" she told the next person.\n\n\"Have a pleasant flight,\" she said to a couple traveling together.\n\nIt was now their turn, and she smiled brightly at them, then said, \"You must be Mr. Stewart. Thank you for your service to our country, sir.\"\n\n\"Oh, well, that was over 70 years ago, young lady,\" he told her as he showed her his boarding pass.\n\n\"Well, you look very good for a man in his 70s,\" she teased.\n\nMr. Stewart turned to his much-younger chaperone and said, \"That one's a looker!\"\n\nThe younger man smiled, showed his boarding pass, and got a 'thank you' from her, as well.\n\n\"I never served, but helping those who did is my way of giving back,\" he told her. \n\nHe hesitated then said, \"Mr. Stewart's right, you know?\"\n\nSomeone else filed by as she said, \"What's that?\"\n\n\"Mr. Stewart said you were 'a looker'. I agree,\" he said with a smile.\n\nThe woman smiled back and laughed politely before saying, \"Have a nice flight.\"\n\nJames Kirk, or more precisely, James Tiberius Kirk, was 26 years old and had been named after the fictional captain of the Starship Enterprise in the original Star Trek series. His late father had been a Trekkie since he was a teenager, and while his wife was hesitant about naming their son after the William Shatner character, she gave in and agreed. She'd always loved the name James, and it was in the top-10 list for boys born that year, so he became James T. Kirk.\n\nJames had been asked about it so many times he'd lost track. He'd also heard every possible one-liner from 'beam me up, Scotty!' to 'he's dead, Jim', even though Doctor McCoy never said those exact words. He took it all in stride the way he did everything else in life.\n\nNow in his final year of medical school, James was still never too busy to find ways to help out people in need. He often did whatever he could for single moms, the elderly, or veterans. He bought groceries for them, picked up their medications, hung ceiling fans, painted, and occasionally even cooked meals. \n\nSo when the chance to escort a WWII veteran to Washington DC came up, he jumped at the chance. Doing so was his honor and an outright pleasure. \n\nLike most men of that era, Mr. Miles Stewart wasn't much of a talker. He was quiet and thoughtful, and when he felt the need to say something, he was direct without being intentionally blunt. \n\nAs a member of a B-17 Flying Fortress aircrew, Miles knew he shouldn't be there boarding the plane. He was on his 18th mission when his bomber was shot down. He was the only survivor and had lived through the ordeal with barely a scratch while the rest of crew had all burned to death. \n\nMiles was the tail gunner, and when the plane hit the ground, the pilot was doing his best to land it in an open field with one engine barely working. It hit hard then skipped. The entire tail snapped off sending the young man flying through the air, then skidding to a halt with him still inside the turret, somewhere in the south of France.\n\nWhen his section of the plane came sliding to a halt, he was literally facing the rest of the plane that was maybe a hundred yards in front of him. He saw it catch fire after flipping and rolling, and all he could do was look away and pray for some kind of miracle. \n\nOne came in the form of a young girl from a local village who found him a few minutes later before the Germans did. None came for the rest of the crew, but Miles had a second miracle after the war ended when he returned to France and married that pretty young girl.\n\nShe'd passed on nearly 15 years ago after giving him two sons, a daughter, and six grandchildren, and now a baker's dozen's worth of great-grandchildren. \n\nFor Miles Stewart every day he'd lived after that crash was a gift to be cherished. And this day was yet another in a very long line of them; one in which he'd be able to honor his fallen comrades at the World War II Memorial in the nation's capitol.\n\nMiles had been in the Army Air Corps, so when he was told the Secretary of the Air Force, the Air Corps's successor since 1947, would be there to meet him, all he'd said was, \"Well, that'll be fine, I suppose.\"\n\nJames found their places in the first-class section then offered Miles the window seat.\n\n\"Oh, okay. Well, sure. It might be nice to look out the window of a plane again,\" he said.\n\nMiles Stewart had never flown since that fateful day in early 1945. He'd taken a cruise ship back to France to find that pretty young girl then the two of them floated their way back to America and taken the train from Washington DC to Seattle, Washington. \n\nHad his oldest son not pushed him to go to this event, he'd have been happy to never fly again.\n\nA different flight attendant walked up to them, smiled, and asked, \"What can I get you gentlemen?\"\n\nMiles was looking out the window at the ground crew and hadn't heard.\n\n\"Mr. Stewart?\" James said.\n\n\"What's that?\"\n\n\"Would you like anything to drink?\"\n\n\"Oh. Well, do they have any of that V8 juice? I really like the taste of it.\"\n\n\"Coming right up,\" she told him. \n\nThen she looked at James and said, \"How about you, gorgeous?\"\n\nJames Kirk was used to being flirted with. He was one of those fortunate enough to born with all the features women loved in a man. His face was very symmetrical, he had a perfect smile, great hair, and thanks to regular workouts with resistance bands, a very toned body.\n\nHe'd lifted weights in high school and college, but medical school had been so demanding, he started looking for an alternative that didn't require travel time to and from a gym. Just the thought of using 'rubber bands' seemed downright 'girly' to him, but after trying a friend's just one time, he was hooked. He could do everything he'd done in the gym right at home and only needed one small box to hold everything required for a killer workout.\n\n\"Some orange juice, please?\" he said with a smile.\n\n\"You got it,\" she told him.\n\nWhen she came back, she handed Miles his salty, red drink, then set James's down on a napkin. She smiled again, tapped the corner of the napkin where her phone number was written, then said, \"Call me\u2014anytime.\"\n\nThat didn't happen very often, but it wasn't rare, by any means. James looked at it, then looked back up at her and said, \"Sure,\" which was what he normally said when he had no intention of ever doing so.\n\nBy the time they'd finished their drinks, the plane was getting ready to be pushed back, and the same flight attendant stopped by and picked up their empty cups. James made sure she saw him keep the napkin which seemed much nicer than crumpling it up or handing it back to her. \n\nShe was an attractive woman, but he just wasn't interested. Hooking up had always been a breeze, and James had done more than his fair share of it over the years. In fact, he'd done so much of it, that it had recently lost its charm. \n\nHe still had another semester of medical school plus residency to finish, but the thought of settling down was finally beginning to appeal to him. Just not with this pretty, young flight attendant.\n\n\"Here we go,\" Miles said as the plane began to move.\n\n\"Are you excited, sir?\" James asked him.\n\n\"Excited? No. Not really. I'd say the better word is 'melancholy'.\"\n\nHe didn't offer any explanation, and James didn't ask.\n\nThe flight attendant who'd greeted them was now asking for their attention as three other flight attendants stood in the aisles doing the safety demonstration. She was standing just in front of James, and he noticed her name tag said 'Kimber' on it. She was quite a bit older than the girl who'd served them, and yet he found her to be even more attractive. She had a kind of sophistication about her that James found interesting and appealing, and he also found himself staring at her without being aware he was.\n\nAt some point, Kimber glanced down at him and noticed. She held eye contact until he finally blinked before realizing he was being rude. He was grateful he'd been fixated on her pretty face rather than her ample breasts, which he could see quite well from just two feet away. Then again, he could see everything quite clearly including her very nice body and perfect...derriere. \n\nJames Kirk wasn't a 'butt guy', but Kimber's was unmistakably nice. Then again, everything about her seemed nice. Very nice, indeed.\n\nHe was trying to think of who she reminded him of, but it wouldn't come to him. Although her dark hair was up he could tell it was at least shoulder length. She also had a beautiful smile, and two very kissable lips, and that's when it hit him.\n\nKimber looked like a younger Anne Hathaway in a movie he'd watched back in 2008 called Passengers in which, ironically, she and the male lead had both died in a plane crash. The resemblance was strong, but it wasn't quite accurate as Kimber was, in his opinion, at least, even more attractive than the actress had been in the movie ten years ago.\n\nAfter getting caught with his eyes in the cookie jar (to mix metaphors), he made sure not to do more than glance at her as she continued running through the script. James was wondering how many times she'd done that over the years as she rattled off one line after the other without a hitch. \n\nHis thoughts were interrupted when she lowered her left arm, and right in front of his nose was a very large diamond ring on her hand.\n\n\"How did I miss that?\" James said to himself just as he heard Kimber say something that interrupted that thought.\n\n\"Ladies and gentlemen. We have a true hero on board our flight today. Sitting next to me on my left is Mr. Miles Stewart, a WWII veteran heading to Washington DC to meet the Secretary of the Air Force. So please show your appreciation to this man who made it possible for all of us to live in freedom.\"\n\nThe plane virtually exploded in the loudest applause James could ever remember as he enthusiastically joined in. \n\n\"Is that for me?\" Miles asked as he tried to turn his brittle body around.\n\n\"Yes, sir. And well deserved,\" James told him.\n\nHe raised a hand in the air that was nearly purple, the skin so thin it almost looked like wax paper. \n\n\"I wish I could tell 'em about my buddies who didn't make it home,\" Miles said as he leaned over once the noise quieted down.\n\nJames wasn't sure, but it looked like the old veteran's eyes might be a little misty. If they were it was understandable. James had no idea what war was like, and hoped he never would. That men like this had borne the burden for him was a thing for which he'd always be grateful.\n\nThe plane taxied to the runway, and the pilot said, \"Flight attendants. Prepare for takeoff.\"\n\nJames was wondering what was going through Miles's mind as the big jet lifted off. What kinds of memories did it bring back? What emotions did it stir up?\n\nLittle could he know that Miles instinctively turned to look outside the plane for German fighters like the one that had mortally wounded the bomber he was flying in the last time he'd been airborne. He'd fired off hundreds of rounds at the German Messerschmitt, and thought he'd hit it when he realized his plane had taken several rounds. Smoke began pouring out, and the bomber quickly began losing altitude.\n\nAt some point during the trip to DC, James dozed off. He awoke to hear a female voice say, \"Mind if I sit down by you, handsome?\"\n\nAs he opened one eye, he expected to see the flight attendant who'd given him her number. Instead he saw Kimber smiling, not at him, but at Miles Stewart.\n\n\"Oh, well, sure. I suppose that'd be all right,\" he said.\n\n\"Excuse me,\" she told James as she slid into the middle seat.\n\nHe tried not to laugh when Miles said, \"I'm single young lady, but I'm not available. When my Claudette passed away, that was it for me.\"\n\nWhen Kimber replied, his smile faded more quickly than it had appeared.\n\n\"I'm so sorry, sir. I lost my husband, Michael, three years ago, and I often wonder if there'll ever be anyone else, so I definitely understand.\"\n\n\"Well, you're still young and right pretty, young lady, so don't give up hope just yet,\" he advised her.\n\nShe sat there and talked with him for nearly half an hour then said, \"Well, I've got to start making the rounds. That food won't serve itself.\"\n\nShe stood up then said, \"It was such a pleasure getting to know you. If you change your mind and need a date tomorrow, I'm staying at the Sheraton.\"\n\nThat was the same hotel James and Miles were staying at, but it didn't dawn on him right there.\n\nIt took Miles a second to understand, but when he did, he smiled the best he could and said as he pointed toward the heavens, \"If my Claudette wasn't up there waitin' for me, I just might take you up on that.\"\n\nKimber smiled and said, \"I'm sure I couldn't hold a candle to her.\"\n\nShe put a hand on his frail shoulder and said, \"Good luck, and again, thank you for all you did for our country.\" \n\n\"I'm not the hero, you know. The heroes are the ones that didn't come home. Like the boys on my flight that day.\"\n\nKimber nodded understandingly then excused herself. As she passed by, James mouthed the words, \"Thank you.\"\n\nShe smiled and quietly said, \"That was nothing but pure pleasure.\"\n\nShe stopped, leaned down, then asked, \"He's not your grandfather or anything, is he?\"\n\n\"Oh, no. We'd never met before this morning at the airport,\" James told her.\n\n\"I wasn't sure, so thanks for letting me know. And thank you for doing this. I'm sure he's very grateful.\"\n\nShe went to move away, but before she did, James said, \"I couldn't help but overhear what you said, and I just wanted to say I'm very sorry for your loss.\"\n\n\"Thank you. That's very kind of you to say.\"\n\n\"And like Mr. Stewart said, don't give up. You're not just a 'looker', you're obviously a very caring person.\"\n\nHe said it sincerely but in a concerned, lighthearted way. Even so, he couldn't really tell how she took his words.\n\n\"I'll be right back with your meals, okay?\" she said without responding to his comment.\n\nWhen she got up front, she was still only a few feet away, so James heard the other flight attendant who'd hit on him say to Kimber, \"Isn't he gorgeous?\"\n\n\"He's a little old for me,\" Kimber said, pretending the other woman was referring to Mr. Stewart.\n\n\"No! Not the geezer. The hunky guy sitting next to him. I'd love to welcome him to the mile-high club right here, right now,\" she said without taking her eyes off of James.\n\n\"Don't you have something to do back in economy?\" Kimber said politely but firmly.\n\n\"Okay, okay. I'm going. But if he'd 'do' me, I definitely wouldn't be going. I'd be...coming. And coming. And...\"\n\nKimber gave her a stern look, and the younger woman disappeared with a roll of the eyes. \n\nKimber took another quick peek at the 'hunky' guy and realized her young colleague was right. He was very good looking, and he obviously had a giving nature. However, Kimber never dated passengers\u2014or pilots\u2014so it was nothing but a glance. For that matter, he was way too young. But he was definitely very attractive.\n\nAs they got off the plane at Reagan National Airport in Washington DC, Kimber gave Miles a hug and wished him all the best. He thanked her and said again to James, \"I told ya. That one's a looker!\"\n\nJames smiled, thanked Kimber, and said, \"I guess I'll see you around.\"\n\nShe smiled back and said, \"Take care.\"\n\nAnd with that Kimber, the flight attendant whose last name he still didn't know, was history.\n\nThey took a shuttle to the Sheraton Hotel where someone from the Pentagon waiting to make sure Mr. Stewart had arrived and knew where to go the following morning.\n\n\"Well, I don't know where that is, but I'm sure my babysitter here can find it,\" the crusty old veteran told him.\n\nThe Air Force NCO repeated the location to James and told him it was just a couple of turns away to get to the memorial. Realizing there could be a problem he told James he'd be there at 1300 hours, or 1pm, the following day to pick them up.\n\n\"Blue staff car. Right out front,\" the master sergeant told him.\n\n\"We'll be there,\" James told him.\n\nMiles was exhausted and need to lay down after eating a light dinner. He was out within minutes and asleep until 7am which was 4am West Coast time, his normal time for waking up. James heard him in the room next to his, but fell back asleep until nine/six, his normal time to get up.\n\nJames showered, got dressed, then knocked on Miles's door.\n\n\"Morning, sir. How'd you sleep?\"\n\n\"Oh, not bad, I suppose.\"\n\n\"Have you had breakfast yet?\" James asked.\n\n\"No. I thought I had to wait for you,\" Miles told him. He was starving, but men like him didn't make waves. They just grinned and bore it.\n\nJames took him downstairs where there was still plenty of food out, and the two of them talked about the upcoming ceremony and their return flight home the following morning.\n\nMiles was very interested in seeing the memorial, but had no real interest in being honored or meeting this 'young whippersnapper' who was temporarily in charge of the Air Force.\n\n\"But I'll do it for my buddies,\" Miles told him.\n\nThey finished eating then went back upstairs, and James helped Miles with the TV remote. Once he was all set, he went back to his room to relax. Actually, he had some studying to do even though he was on his Thanksgiving break, and since everything was online, he pulled his iPad out and went to work.\n\nAt 12:45, he got Miles ready and they went back downstairs where the same Air Force master sergeant was waiting for them. He opened the door for Mr. Stewart then went around to the driver's seat and got in. As they headed for the memorial, he briefed the honoree on what would happen. \n\nMiles didn't understand most of it. All he knew was this VIP would say some nice things, shake his hand, and ask him if he had anything to say. Then they'd lay a wreath together and that would be it for the official part. \n\nIt only took a few minutes to make the short trip from the hotel to the memorial, where a modest-sized crowd had gathered along with TV cameras from some of the local news stations. \n\nJames followed Miles and the airman, who introduced his honored guest to two other WWII veterans who, unknown to James or Miles, were also there. One was a former Army medic who survived D-Day, and the other was a Marine who took part in the battle of Okinawa, the last major battle in the Pacific.\n\nThis time it was James fighting back misty eyes as the men embraced. One of them was wheelchair-bound, and his hands shook as he raised his arms to give Miles a brotherly hug. It made no difference what they'd been seven decades ago. All that mattered was the common bond they shared.\n\nThey spoke for several minutes, and James couldn't help but notice none of them bragged or patted themselves on the back. Everything was about their friends who never made it home.\n\n\"Gentlemen?\" the air force NCO said. \"We need to take our places. The Secretary will be here in five minutes.\"\n\nHe helped the elderly veterans get to their places of honor at the reviewing stand then stood at parade rest while they waited. James found a place along one side and waited respectfully.\n\nHe looked around and wasn't surprised he didn't know another soul, so he was very surprised when someone came up from behind and said, \"I thought I might find you here.\"\n\nHe looked over and saw Kimber's smile and he couldn't help but smile back.\n\n\"What a pleasant surprise,\" he said as she stood alongside him.",
        "\"Our flight isn't until tomorrow morning so I decided to come to the ceremony.\"\n\n\"I'm glad you did,\" he told her. \"And you look very nice, by the way.\"\n\nIt was maybe 50 degrees or so, and like pretty much everyone else, Kimber was wearing a coat, but she still looked very nice, and James couldn't help but notice how beautiful her hair was when it was down.\n\n\"Thank you, and may I say you do, too.\"\n\nBefore he could respond she said, \"I don't even know your name or if I did, please forgive me for forgetting it. I tend to meet quite a few people.\"\n\nJames laughed quietly and said, \"That's an understatement, I'm sure.\"\n\nShe also laughed before he said, \"I'm James.\"\n\n\"Kimber,\" she told him.\n\n\"Oh, I didn't forget yours,\" he told her with a smile.\n\n\"So what it is you do when you're not escorting WWII veterans to the nation's capitol?\" she asked, showing off that amazing smile of hers.\n\n\"I'm a med...\"\n\n\"Ladies and gentleman. May I have your attention please,\" they heard a voice over a PA system say. \n\nA small motorcade pulled up, and based on the way people in uniform reacted, it had to be the Secretary of the Air Force.\n\n\"This is so amazing,\" Kimber whispered. She'd already forgotten he never answered her question. \"I love this sort of thing, but rarely get the opportunity to be a part of them.\"\n\n\"I really am glad you came,\" James said quietly just as the voice spoke again.\n\n\"Ladies and gentlemen. The Secretary of the Air Force, The Honorable...\"\n\nEveryone in uniform came to attention but no one saluted because he was neither the commander in chief nor a commissioned officer. A man with graying hair smiled, waved at the crowd, then took his place in the reviewing stand after shaking hands with the three veterans in attendance.\n\nThe national anthem was played, the colors were posted, and the secretary made his remarks. He lavished praise on 'the greatest generation' and told them the nation was forever grateful for their sacrifices along with other prepared remarks.\n\nMiles had very little to say when given the opportunity. His few words were to thank his family, his friends, and his buddies who didn't come home.\n\n\"They're the true heroes, you know,\" he said, his frail voice carried by the microphone.\n\nNeither of the other men spoke, but they did do their best to help the secretary lay a wreath near the memorial. The secretary then made a few closing remarks before letting everyone know that concluded the ceremony.\n\n\"Would you care to join me and maybe walk around?\" James asked as the crowd began to dissipate.\n\n\"I'd be honored,\" Kimber said.\n\n\"May I?\" he asked as he offered his arm.\n\nKimber slid her hand inside and James led them over to where Miles was sitting. He was talking with the other two men, and both James and Kimber waited patiently for him to finish.\n\nIt took him a second to realize who she was when he finally looked up, but Miles did smile at her when he recognized their flight attendant.\n\n\"Hello again, sir,\" she said as she shook his hand again. \n\n\"It's the looker,\" he said as he stood up as straight as he could.\n\n\"Speaking of lookers, you look very nice yourself, Mr. Stewart,\" Kimber told him. \n\n\"Oh, well, any day I get out of bed is a good day,\" he told her.\n\nKimber laughed and asked if he'd like to look around with them.\n\n\"Well, I suppose I would,\" he said.\n\n\"Come on. James and I will happy to go with you if you'd like,\" she told him.\n\n\"Yes. I think that'd be the smart thing to do. A fella could get lost around here pretty easy,\" Miles said as he looked around the best he could.\n\nKimber offered him her free arm and the three of them slowly headed over to a wall that displayed just over 4,000 gold stars on it, each one representing one hundred men killed during the war.\n\nAs they approached the wall, James explained the meaning of the stars, and Miles stopped, stood as straight as he could, and saluted. He moved a little closer and stood there just looking at the stars that stretched for a very long way to his left.\n\n\"I wonder which one of these is for the boys on my crew,\" he said as he looked up and down then left and right. He reached out a hand and touched one of them. \n\nAs he placed his palm on it he said, \"I reckon it could be this one.\"\n\nJames was once again fighting misty eyes, and Kimber had already lost the battle as they heard him say, \"Captain Weathersby. Lieutenant Rollins. Sergeant Andrews. Toby McAllister. David Edmonds. John Davis. Allen...\n\nThere was a brief pause, then Miles again said, \"Allen...\"\n\nNeither of them knew what was happening when they saw him bow his head, his hand still on the star. Then, very slowly, he slumped over and almost gently laid down.\n\n\"Excuse me,\" James said as he pulled his arm away.\n\n\"James? What's going on?\" Kimber asked.\n\nHe knelt down, gently turned the man over, and felt for a pulse.\n\n\"Do you need me to call 911?\" she asked, her voice staying calm from the years of training.\n\n\"No,\" James said quietly. \n\nFinding no pulse he said, \"He's with his buddies.\"\n\n\"What? Oh, my God. James? Is he...is he...\"\n\n\"He's gone,\" James told her as he stood up.\n\nThe Air Force NCO assigned to them was watching from maybe 20 feet away, and when he saw Miles go down, he ran over to see if he could help. \n\n\"Are you sure?\" the sergeant asked.\n\n\"I'm not a doctor yet, but I am a third-year medical student,\" James said. \"Yes, I'm sure.\"\n\n\"Jesus,\" the airman said. \n\nHe looked around frantically then said, \"Let me see if the secretary is still here.\"\n\nHe was, and within moments, he was personally on the phone to the Pentagon which wasn't far away. In fact, it was pretty much visible from where they were standing.\n\nThe master sergeant came back a minute or so later with another man in uniform. They were carrying a US flag and after respectfully laying Miles body out straight, they gently closed his eyes then covered him with the flag, stood at attention, saluted, then waited.\n\nIn less than fifteen minutes, a military ambulance was there along with three other people in uniform who made sure the body of Miles Stewart was placed on a gurney then moved with the dignity and respect he deserved. \n\nMiles's two colleagues had been informed of what happened, and as the flag-draped gurney passed by them, they saluted as best they could, their eyes filled with tears for their fallen comrade.\n\nKimber stayed with James as they followed the gurney to the ambulance. The air force secretary was standing there, and when told who James was said, \"We'd like to arrange to take him home. Would you be willing to escort him back?\"\n\n\"Of course, sir,\" James said.\n\n\"Sir?\" Kimber interjected. \"I was the flight attendant on his flight out here, and I believe he and Mr...\"\n\n\"Kirk,\" James told her. Kimber was too distraught to catch the significance of the name.\n\n\"I believe Mr. Kirk and Mr. Stewart are scheduled to fly back to Seattle on our plane. If I can help in any way, just let me know.\"\n\n\"Could you call your company and see if they'd designate the return trip an 'angel flight' for a fallen hero?\" he asked. \n\nThat honor was normally reserved for someone killed in action and whose body was being taken to its next destination on board a flight.\n\n\"Of course. I'll call my captain right now. He has that authority, and I'm certain he'll okay it,\" she said.\n\n\"Great. Let my executive assistant here know the details, and if you need me to weigh in at any point, just ask, okay?\"\n\nWith that, the secretary left, leaving behind an Air Force colonel with a blue braid on his uniform. He was what the Army and Marine Corps called an Aide or, more formally, an Aide-de-camp. The Air Force didn't use that term and liked to joke about how they didn't have...AIDS.\n\nWithin minutes, Kimber had the approval, and the colonel did all the coordination from there on arranging for the body to be encased to be flown home for embalming or cremation.\n\nIt was only 2:15 and so much had happened so fast heads were spinning.\n\n\"You okay?\" James asked Kimber.\n\n\"Me. Oh. Sure. How are you?\" she asked in return.\n\n\"Shocked? Saddened? Dumbfounded?\" he replied.\n\n\"James? I'm just so grateful you took the time to bring him here,\" Kimber said with complete sincerity.\n\n\"You know, it's almost as though this was meant to be or something,\" he said quietly.\n\n\"Maybe it was. These are the kinds of things we just can't know for sure. Even if it was pure coincidence, it's hard to imagine a better place for a hero's life to end; the very place meant to honor men like Mr. Stewart.\"\n\n\"You're quite an amazing woman, Kimber...whose last name I still don't know.\"\n\n\"It's Lang. Like Lana Lang in the Superman movies,\" she told him, as she tried to smile. \"Well, actually, that was my late-husband's name, but I've heard all the jokes.\"\n\n\"She was beautiful, too,\" James told her with a smile of his own.\n\n\"And you mentioned your name, but in all the commotion I don't remember what you said. Would you mind telling me again, please?\" she asked.\n\n\"Kirk. As in James T. Kirk.\"\n\n\"I'm not sure I follow,\" Kimber told him, knowing there was something she was missing.\n\n\"Star Trek? The USS Enterprise?\"\n\n\"Oh, okay. Yes. Sorry. I'm not much for Sci-Fi, but I have heard of Captain Kirk.\"\n\nShe smiled then said, \"He was handsome, too.\"\n\nJames smiled weakly then said, \"Do you have any plans for the afternoon?\"\n\n\"Not really. I was going to go back to our hotel and relax. Why? Did you want to do something? I'd be happy to keep you company if you don't mind hanging out with a middle-aged flight attendant.\"\n\nJames lowered his left eye with a tilt of his head, and said, \"Seriously? You're playing the middle-age card when you're more attractive than 99% of the girls I know in college?\"\n\nKimber laughed and thanked him for making her day.\n\n\"No. I'm being serious. They can't hold a candle to you,\" he said using her phrase.\n\nShe thanked him again then asked what he might like to do.\n\n\"Well, I think I'd like to see the rest of this memorial then maybe go back over to Arlington National Cemetery. I've never been and may not ever get back to DC.\"\n\n\"If we can include a cup of hot chocolate or coffee somewhere in there, I'd like that very much.\"\n\n\"Done deal,\" James said before extending his arm again.\n\nKimber smiled, took it again, then began walking with him.\n\n\"It really adds a special kind of meaning to this place, doesn't it?\" she said as they began passing hundreds of large, gold stars.\n\n\"It does. There were about 408,000 US deaths in WWII which began with Pearl Harbor in December of 1941, and lasted all of 1942, '43, '44, and half of 1945. A rough estimate is maybe 1,300 days total. That works out to about 310-315 or so killed in action every day. On average, of course.\"\n\n\"The population was so much less then, too. It's just so hard to imagine that kind of loss today. We lost what? Five or ten thousand in both wars since 9/11, right?\"\n\n\"I think that's about right,\" James agreed.\n\n\"Every single life is precious, but in 17 years that's...well, that's not even close,\" she said. \"And I say that as someone who's never even been anywhere near a war. It's just an add-on to your comment.\"\n\n\"Well, the streets of heaven gained one more today,\" James said in response.\n\n\"Yes. Yes, they did,\" Kimber agreed.\n\nThey strolled around the monument in reverent silence for a good while before James asked, \"Are you cold?\"\n\n\"A little,\" Kimber replied.\n\n\"How about that hot chocolate?\"\n\n\"I'd like that,\" she said with a warm smile. \n\nIt didn't take long to find a coffee shop. The bad news was they didn't serve hot chocolate.\n\n\"That's okay. I love coffee, too,\" Kimber assured him. \"And I can pay for mine.\"\n\n\"I'm sure you can,\" James said politely with a smile as he ordered two coffees and paid for them both.\n\n\"Thank you,\" Kimber said when he handed one to her. \"Do you want to sit down and talk some more?\"\n\n\"I do,\" James told her as they found an open table.\n\nHe helped her with her chair, and that both surprised and impressed her as she thanked him again. He sat across from her and held up his cup.\n\n\"To Miles Stewart. Rest in peace.\"\n\n\"Yes. To Miles,\" she said.\n\nThey both took a sip, and Kimber was very relieved to be inside. It wasn't all that cold outside compared to her hometown of Seattle. It was just such a raw kind of day that being out was anything but pleasant.\n\n\"Did I hear you say you were in medical school?\" Kimber asked before taking a second sip.\n\n\"Oh. Yes. I've got one semester left,\" James told her. \"Well, plus another three weeks or so once I get back.\"\n\n\"Doctor Kirk,\" she said with a smile. \"That wasn't the doctor's name on Star Trek, though, was it?\"\n\nJames laughed and told her it wasn't, then replied to her 'Doctor Kirk' comment.\n\n\"Technically, yes. But I still won't be allowed to do much of anything without constant supervision, but I will indeed be a doctor.\"\n\n\"That's very impressive, James,\" she told him sincerely. \"Do you know what you want to specialize in yet?\"\n\n\"Not for sure, but after meeting Miles I'm giving serious consideration to geriatric medicine. The fancy name for it is gerontology.\"\n\n\"You know, that doesn't surprise me. I really don't know you well, but I can tell you're a kind, caring person. I could see you doing that or maybe even working with children.\"\n\n\"I thought about pediatrics for a while, but I don't think I'm cut out to deal with children suffering. Yes, I could do a lot to alleviate their suffering, but that's true in any specialty. With the elderly, my impression is most of them understand that the aging process brings with it a lot of aches and pains and serious problems, as well. So while I wouldn't want to see anyone suffer, it's just very different with someone who's say...70 or 80...than seven or eight.\"\n\n\"No, I understand,\" Kimber told him. \"I've never had a child, but I can only imagine how awful it would be to see them hurting and not be able to make it better.\"\n\n\"I'm probably way out of bounds here, but I know you said you were married. Was having a child something you wanted?\" James asked with great care.\n\n\"I don't mind being asked, James. I enjoy talking with you. You're very easy to get along with, and after years of working with pilots hitting on me\u2014many of them married\u2014I guess I've become a little bit jaded about men.\"\n\nKimber smiled then said, \"My late husband and present company excluded.\"\n\nJames smiled back, and Kimber realized she hadn't answered his question.\n\n\"I'd say it's more a matter of timing. I didn't get married until I was 35, and when my husband passed away, I was 40, and while we both wanted a child, we just kept putting it off until it was too late. Now, at 43, I've stopped thinking about it, and although I'd love to meet someone special again, I'm not sure that's in the cards for me, either.\"\n\nKimber had a sad look in her eyes as she spoke then shook it off, smiled and asked James, \"What about you?\"\n\n\"Yes. Definitely. I know that at 26 there's no need to hurry, but someday, yes, I'd very much like to have children.\"\n\nHe smiled then said, \"At least one.\"\n\n\"You obviously know you're a very handsome young man, James, so you won't have any problem finding a woman and later having children. And unlike me, you do have plenty of time.\"\n\nKimber hesitated then said, \"Now I'm the one who's out of bounds, but is there or was there anyone special in your life?\"\n\n\"You're not out of bounds,\" James told her. \"I like sharing things with you, too.\"\n\nKimber smiled and James continued.\n\n\"No, not really. I thought I was in love back in high school, but by the time I started my freshman year of college, I realized it wasn't the kind of love needed to sustain a marriage. I was more of an infatuation based on...\"\n\n\"Raging hormones?\" Kimber offered with a quiet laugh.\n\n\"Thank you. Yes,\" James said with a smile. \"Other than that, no, there hasn't been anyone.\"\n\nThey chatted about Kimber's job for a few minutes then discussed medical school and what was involved followed by an explanation of residency, internship, and private practice.\n\nIt was close to four o'clock when Kimber said, \"I should probably be going. I've taken up a lot of your time already.\"\n\nJames was taken by surprise, but realized she probably didn't care to spend any more time with him, so he used her words with a different take.\n\n\"Oh, sure. I'm guessing hanging around with a guy my age isn't exactly your idea of a good time.\"\n\nHe smiled and even laughed as he said it, and that surprised Kimber.\n\n\"What? No. Not at all. I was giving you an out to break free from the older woman monopolizing your time,\" she explained.\n\n\"But I'm enjoying having my time monopolized,\" James told her.\n\n\"Honestly? I'm really enjoying spending time with you, too,\" Kimber told him.\n\n\"Would you maybe like to have dinner together?\" James offered.\n\nKimber looked at him as though she was trying to read his mind, and satisfied with whatever she saw or felt said, \"I'd love to. As long as you let me pay.\"\n\n\"I'm not sure I could let you do that,\" he told her. \"I know it's 2018 and I'm all for equal rights and equal pay, but I can't imagine letting a woman pay for my meal.\"\n\nKimber didn't come back with a feminist retort. She just smiled then said, \"How about we go dutch then?\"\n\n\"I suppose I could live that,\" James told her. \"As long as this isn't a date, I guess I'll be okay letting you buy your own food.\"\n\nKimber laughed in a polite way then said, \"It's definitely not a date.\"\n\nJames feigned being hurt and said, \"Ouch!\" as he clutched his 'heart'.\n\nKimber laughed again then said, \"Okay. Let me put it this way. I never date pilots, aircrew, or passengers. Is that any better?\"\n\nJames winced then told her, \"A little. Maybe.\"\n\n\"You make me laugh,\" Kimber told him after laughing yet again.\n\n\"I'm glad. You have the most beautiful smile, and I love seeing it,\" he told her with a smile of his own.\n\nKimber stopped smiling, and James assumed it was because he'd just crossed a line. What he didn't know, and what Kimber didn't understand, was that what he'd just said had somehow touched her. It wasn't that she still didn't regularly receive compliments from men. She did. In fact, it happened quite often. But what didn't happen was when one of those compliments made her feel like this. It was an old familiar feeling, but one she hadn't experienced in a very long time.\n\nWorried he'd offended her, James began apologizing.\n\n\"Kimber, I wasn't trying to be flirty or anything. I was only be honest. Sometimes I say things that...\"\n\n\"It was very sweet of you to say, James. Thank you. It made me...happy,\" she told him before again suggesting it might be time to go.\n\nNow it was James who was feeling something. He'd only been rebuffed a handful of times, and could literally count them on one hand. And while he hadn't just been rebuffed, something he was expecting to happen, her kind reply made him look at her differently. He wasn't sure what kind of 'differently' it was, but the way he saw her after that was definitely...different.\n\nShe'd slipped her coat off and it was resting on the chair behind her, so when they stood up James came around and helped her with it. Kimber put her arms in then raised her long, silky hair so he could pull it around her. She thanked him, and there it was again. That new feeling. It wasn't even strong let alone overpowering, but it was definitely there, and Kimber was enjoying it whatever it might be.\n\nIt was already getting dark, and the temperature had dropped a couple of degrees since they went inside. \n\n\"Burr!\" she said when the cold air hit them.\n\n\"I'll wave down a taxi if you'll let him know where to take us,\" James said.\n\n\"Deal,\" Kimber told him.\n\nOnce inside, she said, \"I just realized it's not quite two o'clock Seattle time. This would be more lunch than dinner.\"",
        "\"I hadn't thought of that,\" James admitted. \"Either way, you choose, okay?\"\n\nKimber let the driver know their destination, and he nodded without comment. A few minutes later, they pulled up in front of a restaurant called 'Old Ebbit Grill' an iconic tavern offering American meals, to include their specialty of oysters on the half shell, in Victorian-style digs.\n\nJames paid the cabbie, then got out and went around to offer Kimber his hand. She took it and when she stood up, she was face to face with him for a moment. Their eyes met only briefly, and both of them felt that momentary return of whatever was going on before the eye contact ended and James again offering her his arm.\n\n\"Nice digs,\" he said when they stepped inside.\n\n\"I love this place,\" she told him.\n\n\"Right. You travel here a lot, huh?\" he said.\n\n\"Yes. Seattle-to-DC is my route, and I'm here two or three times a month,\" she told him. \"I don't go out to nice places too often, but when I do this is one of my favorites.\"\n\nIt was nearly six o'clock when they left, and both of them told the other they couldn't remember the last time they'd had so much fun just talking and eating. They'd covered many different subjects from work to politics and the military to religious beliefs, and without exception found themselves agreeing. \n\nEach new revelation seemed to top the one before it.\n\n\"No way! Get of here!\" and other such comments accompanied each new thing on which they agreed.\n\nAt one point, they were both bubbling with enthusiasm as the conversation went back and forth at the speed of light amidst a whole lot of smiles and a bunch of laughter. And then, at one point, Kimber stopped smiling causing James to ask if everything was okay.\n\n\"Oh, sure. I guess I just had a pang of guilt for having such a good time so soon after losing Miles.\"\n\n\"No, that's completely understandable,\" he replied. \"And yet, I'm certain he'd want us to laugh, have fun, and enjoy life.\"\n\n\"You're right,\" Kimber agreed. \"That's what he and so many others did for us. To do anything else would be a kind of slap in the face, I suppose.\"\n\n\"I think that's true. We need to never forget, but we also need to keep in mind we have all this freedom because of men like that.\"\n\nJames got even more serious then said, \"Can you imagine a world where Germany had won the war?\"\n\nKimber shook her head and said, \"No. I really can't.\"\n\nThey sat quietly for a few moments before Kimber said, \"James? I can't thank you enough for today. This has been very special. Even the incredibly sad part of losing Miles.\"\n\n\"No, I'm the one who should be thanking you, Kimber. I can't imagine how awful it would have been to sit around by myself reliving what happened over and over. You've turned a terrible tragedy into a day I'll never forget.\"\n\n\"The feeling is very mutual,\" she said sweetly.\n\nShe seemed like she wanted to say something else, and when she didn't, James asked, \"Did you want to tell me something?\"\n\n\"Oh, well. I...I was just thinking. It's kind of a shame that you're...a passenger.\"\n\nIt took him a second to get it, but he realized she was referring to her personal rule of not dating passengers.\n\n\"I won't be after tomorrow,\" he told her. He didn't smile this time, but a smile wasn't called for. He was being serious because he meant what he was saying.\n\n\"I know, but...\"\n\n\"But?\" he asked.\n\n\"James. You told me you're 26. I'm...well, I'm not twenty-anything. I'm not even thirty-anything. I'm...\"\n\n\"Amazing,\" he said with the smallest smile. \"And unbelievably beautiful.\"\n\nThat feeling washed over Kimber's entire body as she sat there listening to him, and taking in his words.\n\n\"May I ask you something?\" she said, her eyebrows slightly raised.\n\n\"Of course. Anything.\"\n\n\"Is it possible that whatever's going on is like what you experienced in high school? You know, the infatuation kind of thing brought on after a traumatic loss?\"\n\nJames sat there and looked right at her and thought for a moment before he spoke.\n\n\"No. That's not possible,\" he told her quietly. \"I clearly remember what that was like, and this...whatever this is...is nothing like that.\"\n\n\"So...what do you think...this...is?\" she asked.\n\nJames held out a hand, and after looking at it then looking back at him, Kimber slowly raised her hand out of her lap and let him take it.\n\n\"This...is real. I can't tell you exactly what it is, but I can tell you it's very real.\"\n\nShe was looking at him again then looked away when she said, \"I know it seems real, but let's be honest. We've been through a very emotional experience today. Yes, we have quite a few things in common, but it's just...circumstances.\"\n\nShe looked back up at him then said, \"Right?\"\n\n\"Yeah. I suppose so. I mean, it's not like you and I could be...you know.\"\n\n\"Exactly. There's obviously some kind of attraction going on, but you can't base a relationship on attraction.\"\n\nAgain, Kimber waited before adding, \"Right?\"\n\n\"No, of course not,\" James agreed. \"Attraction is only superficial. It's just the thing that draws two people together. It's not the basis of any real relationship. It's just the...\"\n\n\"What, James? It's just the what?\" Kimber asked, her hand still in his.\n\n\"I was going to say the foundation that makes a relationship possible,\" he told her. \n\nHe waited for a moment then asked, \"That's not the same as the basis of a relationship, though.\"\n\nHe paused again, then like Kimber, asked, \"Right?\"\n\nShe slowly took her hand away before replying.\n\n\"I'm not sure. Maybe we're trying to analyze a heart thing with our heads. Or maybe there's no heart thing there, and we're talking in circles.\"\n\n\"And let's not forget the age difference,\" James said. \"How could we ever overcome that?\"\n\n\"Yes. Right. I'm not just a couple of years older than you, I'm...\"\n\n\"Nearly five years older,\" James teased to lighten the mood.\n\nThe tension lifted, Kimber laughed, then said, \"Right! I'm almost five years older than you.\"\n\n\"With a gap like that, who would even bother? Talk about a 'bridge too far'.\"\n\n\"Seriously! Five years is...a lot. It's...\"\n\nJames saw her multiplying in her head and tried not to laugh before she continued.\n\n\"That's...sixty months. Count 'em. Sixty!\"\n\n\"Whew. Sixty. That's almost as old as you,\" he said very seriously.\n\nKimber sat up straight, her eyes opened wide, her jaw dropped, and when James saw her reach for a piece of salad, he held up his hands and said, \"I'm sorry! I'm sorry!\"\n\nKimber waited until he lowered them then threw it at him anyway.\n\n\"Sixty. Ha!\" she said with a flip of her head.\n\nThere was another awkward pause before James said, \"You're the most beautiful woman I've ever met, Kimber.\"\n\nHis voice was calm and quiet, and his eyes were so serious, it made Kimber stop moving. She, too, sat there without a smile as she listened to him. She couldn't remember the last time a compliment from a man\u2014any man\u2014had left her speechless, but what James just said made her feel like she couldn't talk.\n\n\"You don't believe me?\" he asked quietly as she sat there staring at him.\n\n\"No,\" she said just above a whisper.\n\n\"No, you don't believe me?\" he asked again, feeling very confused.\n\n\"No. I mean, yes. I mean, no I don't not believe you.\"\n\nShe knew she wasn't making any sense, but the right words wouldn't come.\n\n\"Kimber?\" he began as he held out his hand again.\n\nHer brain told her hand not to move, but it clearly had a mind of its own as it raised itself up and laid itself in his hand for a second time.\n\n\"This is more than just physical attraction.\"\n\nShe didn't answer for a moment then finally said, \"I'm scared, James. For the first time in my life since my husband died, I'm...scared.\"\n\n\"Of me?\" he asked.\n\n\"No. Of course not. You're gentle and sweet.\"\n\n\"Then what is it?\"\n\n\"I...I don't know. I only know I'm afraid. I'm sorry. I know it's irrational, but that's how I feel.\"\n\n\"It's okay,\" James told her. \"How about we call it a day, and get some rest? We have another stressful day ahead of us, and once it's over, maybe we can try and figure out what's bothering you.\"\n\n\"You see? You really are sweet,\" Kimber said as she tried to smile. \n\n\"Come on. Let's get a taxi and head back to the hotel,\" he told her as he mustered up a smile of his own.\n\n\"But what about Arlington?\"\n\n\"It's getting late and it's already dark so I guess it'll have to wait,\" he told her.\n\nAs they rode back to the Sheraton, both of them were thinking about the way things often change. How was it they'd gone from idle observers of the memorial ceremony to having one of the best times of their lives to sitting in silence in less than twelve hours?\n\nJames wasn't sure but thought the most likely answer was that Kimber realized how big the age difference was and panicked. He couldn't blame her. It made sense that it would be a very big concern to any rational person. And yet he knew that it didn't matter to him. \n\nWhat he didn't know was that Kimber had just concluded that the thing she most feared was telling him how she felt and being rejected. As much as she liked James, and as much as she wanted to trust him, her experience was telling her that getting involved meant getting hurt. Yes, he might find dating an older, still-reasonably-attractive woman her age fun and exciting for a while, but at some point he'd wake up and realize she was a lot older than him, and if she let him 'in', it would tear her apart to have to let him go. So keeping him out seemed to be her only means of protection.\n\nAs they walked inside together, the younger flight attendant who'd given James her number saw them.\n\n\"Oh, hi there!\" she said to him as they got close. She glanced at the lead flight attendant then said, \"Kimber.\"\n\nKimber was actually relieved to see her and told James, \"I had a really nice time today. I think I'm just going to go upstairs and maybe watch a movie or something.\"\n\nThe younger girl perked up and said, \"See you in the morning,\" as she smiled at James.\n\nHe only had time to tell Kimber, \"Me, too,\" before she turned and walked away. \n\nHe could tell she wasn't being mean. She was just still upset by whatever it was that was bothering her.\n\nJames felt this younger woman's arm in his and that brought him back to reality.\n\n\"She's not a lot of fun,\" the pretty girl said. She leaned closer then said, \"But I am.\"\n\nJames tried not to get angry as he gently removed her arm.\n\n\"I'm pretty tired, too. It's been a really long day.\"\n\n\"But it's only like four or five o'clock to our bodies,\" she said with a wicked smile. \"And spending a few hours with me will relax you like nothing else. I promise.\"\n\nJames managed not to shake his head in disgust. He just said, \"That sounds really nice, but not tonight, okay?\"\n\n\"What? Are you upset about that old guy dying? I saw it on TV. I mean, it was sad and everything, but he was like really, really old. It can't be that big of a surprise, right?\" she said in that annoying, bouncy, too-cheerful voice he detested.\n\n\"I'll uh, I'll see you tomorrow morning at the airport,\" he said as he walked away.\n\n\"I'm a light sleeper if you change your mind!\" she called out. \"Room 1906. Anytime, okay?\"\n\nJames shook his head but just barely as he walked away trying to stay calm. This girl was everything he wasn't while, at least as far as he knew, Kimber was everything he'd ever thought of wanting in a woman. This girl wanted to screw his brains out, and Kimber wasn't even talking to him.\n\n\"Fuck,\" he said to himself out of frustration as he waited for the elevator. \n\nJames wasn't angry or even upset. It was definitely more a frustration at the complexity of life. Even living in today's world with all of its amazing conveniences, life still presented each person with a never-ending series of challenges. One either dealt with them day in and say out, or those challenges subsumed that person.\n\nJames wasn't the kind to be eaten alive by life itself so he took a deep breath and resolved to address the problem once Miles was back home.\n\nKimber didn't intentionally avoid James the following morning. She just had to get to the airport well before him. Even so, he was there, albeit in a different place, not long after she arrived. \n\nThe airlines was obviously expecting him. When he checked in, he was told his return flight was free which really meant they were giving him a voucher for another flight to be used anytime within the next twelve months. He thanked the ticket agent for the unexpected gift then headed for security.\n\nOnce he got there, a TSA agent let him know there was an Air Force colonel waiting for him, and another agent escorted him out onto the tarmac just as a three-vehicle 'motorcade' arrived. One of them was a black hearse which was carrying the flag-draped coffin (which would later be replaced with an actual casket) of Miles Stewart.\n\nA small detail of six uniformed service people exited a van and smartly marched to the rear of the hearse. The door was opened, the six-person team saluted the flag, then prepared to move Miles's body to the cargo hold of the plane. As it passed by, James put his hand on his heart while the colonel saluted.\n\n\"I heard about this on the news last night,\" the TSA agent said once the detail was inside the plane.\n\nJames wasn't sure what to say so the man kept talking.\n\n\"It was a real good segment. They made the man that died sound like a real hero.\"\n\n\"He was,\" James said quietly. \"In his own quiet way, he was a hero.\"\n\nThe man nodded then said, \"Okay. I need to get you back inside. The captain wants to talk to you, so we'll get you on board the plane ahead of time, and you two can take care of business.\"\n\nJames thanked him, as well as the colonel, then followed the agent up a ramp that led directly to the waiting jet. The TSA agent shook James's hand, wished him well, then handed him off to the pretty, young flight attendant he finally noticed was named Jennifer.\n\n\"Gee, what a shock,\" James said to himself about the way he thought of 'Jennifers'.\n\n\"Hey, handsome,\" she said. Then more quietly she said, \"You'll never know what you missed out on last night.\"\n\n\"No, I'm sure it would have been great,\" James replied without emotion just as the captain walked up.\n\n\"Mr. Kirk?\" he said as he extended his hand.\n\n\"Yes. James,\" he said.\n\nThe pilot smiled then said, \"I'm not gonna say a word\u2014Captain.\"\n\nJames smiled back and thanked him.\n\nThey talked for a minute or so and James found himself on board alone except for the crew. As he passed the galley, he saw Kimber who knew he was there.\n\n\"Mornin',\" James said.\n\n\"Oh, hi, James,\" Kimber said. \"I see you already spoke with the captain.\"\n\n\"I did.\"\n\n\"Can I get you anything?\" she asked.\n\n\"No thanks. I'm good.\"\n\n\"Okay, well, you can go ahead and have a seat if you like.\"\n\n\"Do you maybe...feel like talking?\" he asked politely.\n\n\"I'm not sure there's much to talk about,\" she said without looking at him. The way she said it wasn't mean. It was just a statement of how she was feeling. Or perhaps how she thought she was feeling.\n\n\"So...yesterday wasn't real?\" he asked without any edge in his voice.\n\n\"No. It...it was very real. Maybe even...too real,\" she said quietly as she continued getting things ready.\n\nNow befuddled, James decided to let it go.\n\n\"Okay. Well, I'll let you take care of business here. I...I just want you to know it not only was very real to me, it was also very pleasant, and...well, I'd very much like to see you again, Kimber.\"\n\nShe didn't respond so James gave up and found his seat.\n\nThe day before had really thrown Kimber for a loop. It caused her to have to reexamine several things she thought were set in stone. Like dating passengers. Like dating someone that much younger than her. And worst of all feeling so many things for someone she barely knew. Perhaps she'd be able to sort through it all at some point, but for now she'd retreated to a neutral corner to protect herself from having to think\u2014or feel\u2014too much. \n\nShe looked up as he walked away, and just seeing him made all of the conflicting emotions she was feeling come crashing down on her at once. She redoubled her efforts to stay busy, and when boarding began, she was relieved to be able to lose herself in the anonymity of welcoming a new group of strangers on board.\n\nThat lasted until the captain made the announcement about the fallen hero they were carrying home. As he explained the situation and what an 'angel flight' was, Kimber found herself choking up. Most of it was for Miles while some of it was for herself at having witnessed his passing. And yet she knew that the common thread running through it all was the handsome young man the captain also mentioned and the time they'd spent together. What she couldn't understand was how knowing anyone for that short length of time could cause so much mental consternation. And yet it was, and knowing that it was just made matters worse.\n\nKimber hadn't served economy class in several years, but she told Jennifer they were switching sections without explaining why. Her younger charge was thrilled to have the opportunity to see the handsome guy in first class she still hadn't given up on. She lived in the Seattle area, so this time she wrote out her address along with her phone number. \n\nWhen she delivered his in-flight meal, she said, \"Feel free to drop by anytime. Day or night.\"\n\nJames shook his head and didn't reply. He wasn't very hungry and the reason why was obvious. There was a very beautiful, older woman on his mind, and until this tension was resolved, he wouldn't be able to move on. \n\nAs he sat there picking at the food in front of him, he was trying to understand why, for the first time in his life, a woman was causing so much mental turmoil. There'd never been a time when he'd fixated on anyone like this, and especially after getting the kind of cold shoulder Kimber had just shown him. \n\nIn any other case he'd have jettisoned any thought of her that very moment and moved on to something else. So why couldn't he do that with her?\n\nFor the entire flight, each time Kimber walked by his seat, she didn't even look down. James was torn between getting up and trying to discuss this then and there and giving her space. The logical part of his brain tried telling him it wasn't worth it; to just let it go. But whatever was meant by 'the heart', that part of him wouldn't have it. It told him to be patient. Don't push. Let her work through this. Give her time.\n\nBy the time they landed that part of his brain had won the battle, and he resolved not to bring it up. For now. At some point, he'd talk to her again. He didn't even have her number, but he did know where she worked, and if this didn't get resolved before they parted company, he'd find her and let her know how he felt. That is, if he could figure out exactly how it was he felt.\n\nWhen the plane landed, the captain asked everyone to remain seated after they pulled into their gate. He let them know that Mr. Kirk would exit the plane and take his place outside as a group of service personnel in uniform waited for Mr. Stewart's remains to be removed from the aircraft.\n\nJames had never 'heard' so much silence in his life as when the plane stopped and the engines were turned off. It felt like every eyeball was on him as he stood up. He nervously glanced back and saw many people smile at him, and a few had tears in their eyes. \n\nSomeone quietly called out, \"God you bless you!\" then several others followed suit. Then it became utterly silent again except for the voice of a small child that said, \"Why is everybody just sitting here, Mommy?\"\n\nKimber opened the door and stood there as he walked by. He looked at her, and although she didn't smile, her eyes told him that there was still some kind of connection between them. He was almost out of reach when he felt her touch his sleeve. He stopped and turned around and heard her say something very quietly.",
        "\"Could we maybe talk later? If you have time?\"\n\nNot sure of when or where, James only said, \"Of course,\" then continued on.\n\nThere were a good thirty members of the Stewart family assembled along with another six service people in uniform. A man of about 70 walked up and introduced himself as David Stewart, Miles's oldest son. He shook James's hand and thanked him for taking such a personal interest in his father.\n\n\"It was my pleasure, sir,\" he told him sincerely.\n\nThe cargo door opened and he heard the head of the detail quiet say, \"Group, ten-hut!\"\n\nThe flag-draped coffin was slowly extended then lowered hydraulically as the group saluted in unison. Once it stopped moving, the salutes were cut, and the detail moved to carry Miles to another waiting hearse.\n\nJames glanced up and noticed faces were plastered against every window as the passengers respectfully waited in honor of this veteran of the Second World War. Once the detail turned toward the vehicle waiting for them, the captain let the passengers know they were free to depart and thanked them for their patience and respect.\n\nJames shook hands with quite a few of the family members who ranged in age from 70 to seven months. He shook hands with David one last time then asked when the memorial service would be.\n\n\"This Saturday at 10am at the Tahoma national cemetery in Kent. We'd very much appreciate it if you could be there,\" the 'younger' Stewart told him.\n\n\"I wouldn't miss it,\" James told him before they parted company.\n\nHe stood there until the hearse drove away, and found himself blinking back tears, something he couldn't remember doing in many years outside of this last 48 hours or so.\n\nHe turned around and wondered who would be coming to escort him inside, and to his very pleasant surprise was the most beautiful flight attendant he'd ever seen.\n\n\"Hi,\" she said sweetly.\n\n\"Hello,\" he replied, his mood lifting as evidenced by the smile on his face.\n\n\"I was wondering if we might be able to sit down and talk,\" she said.\n\n\"Sure. I'd like that.\"\n\n\"I just need to take care of a couple of administrative things, but if you'll come with me, you can wait in the crew lounge.\"\n\nAs they walked, Kimber said, \"That was perhaps the most emotional two-day period of my life, other than when I lost my husband.\"\n\n\"Same here,\" James said, not wanting to mention that a significant part of the emotion was caused by feelings he was having for her.\n\n\"Do you know when his memorial service will be?\" she asked.\n\n\"This Saturday at 10am in Kent. At the Tahoma national cemetery.\"\n\n\"Would you mind if I went?\" she asked as though she needed his permission.\n\n\"Of course not. I'd very much like it if you did,\" he told her. Again, he wanted to tell her he'd like her to go with him, but he wasn't going to press the issue until they'd cleared the air.\n\n\"I have an apartment in Tukwila,\" she told him. \"So it's not much of a drive for me.\"\n\n\"Oh, okay. I uh, I live in Renton.\"\n\nHe almost added 'with my mom' but thought that might not be the best thing to say to a woman who was independent and unlikely to find that very appealing in a grown man.\n\n\"We're practically neighbors,\" Kimber said with a smile as they got to the crew area.\n\nShe opened the door with her card reader then walked him in and showed him where he could sit. \n\n\"I'll just be a few minutes, okay?\"\n\n\"Take your time,\" he told her.\n\nTrue to her word, Kimber was back in less than five minutes.\n\n\"So did you maybe want to talk here?\" she asked. \"Not in the lounge, of course, but somewhere in the airport?\"\n\n\"I could go for another cup of coffee,\" he told her.\n\n\"Same here,\" she said with a kind of weak smile.\n\nNot surprisingly, they ended up in a Starbucks coffee shop where James again insisted on paying for hers, too. They found an open table, sat down, and took a first sip before Kimber spoke.\n\n\"First of all, I'm very sorry for being so...distant. I've been struggling with this whole...raft of emotions since, you know, since Miles passed away.\"\n\n\"That was hard watching a man die. Even one his age.\"\n\n\"You feel so helpless and so...sad,\" she said.\n\nJames took another sip before Kimber said, \"But it's more than that, James. It's also about the feelings you stirred up in me after that happened.\"\n\nNot sure if he should say anything, James again waited for her to continue.\n\n\"You know I don't date passengers, and yet yesterday felt very much like a date to me, and I guess what caused the most confusion was when I realized I was having the best time I've had since, well, since my husband was alive.\"\n\nNow feeling slightly encouraged, James knew better than to chime in so he took another sip, and used body language to let her know he was listening and very interested.\n\n\"I think that's when the other feelings hit me,\" she said.\n\n\"Other feelings?\" James asked, finally breaking his silence.\n\n\"Yes. The confusion and the uncertainty. And most of all...the fear.\"\n\n\"What would you be afraid of, Kimber?\"\n\n\"Of getting hurt. Of opening myself up to someone like...no...to...you. To James Kirk, who's, well, I don't even want to say the number of years out loud, younger than me. Of doing that then finding out I was just a kind of...I don't know. A plaything. Something...different.\"\n\nShe sat there looking at him then said, \"Does that make any sense to you? Am I making any sense?\"\n\n\"It does and you are,\" he told her. \"Generically, I understand what you're saying. But I'm an individual and not some generic guy. So while you could hypothetically get hurt by someone who didn't genuinely care about you, I'm not that guy, Kimber.\"\n\nEven more confident, he reached out for her hand again, and when he did, she gave hers to him almost immediately.\n\n\"I'm not like that. I would never intentionally hurt you. I would never say or do anything to make you feel like you weren't the amazing, beautiful, and very special woman you are. To me, you're all of those things and more.\"\n\nShe smiled at him, and when she did, he gently squeezed her hand.\n\n\"I've not only never met anyone like you before, I've never felt this way about a woman in my life. I haven't been able to stop thinking about you since you took my arm at the memorial, and I haven't been able to stop hoping I hadn't somehow offended you or given you a reason not to want to see me again.\"\n\nKimber shook her head and said, \"No. It isn't you, James. You've done nothing but be wonderful and amazing. It's all me. I dearly loved my husband, and losing him nearly killed me. Ever since, I've had a terribly difficult time trusting anyone. And yesterday, when I realized I trusted you, when it hit me that I really enjoyed being with you, it...it scared me.\"\n\n\"Because you might get hurt, right?\"\n\n\"Yes. I think I went into some kind of 'self-preservation' mode until I could think things through.\"\n\n\"Was there something specific that changed your mind?\" he asked.\n\nShe smiled at him then said, \"When I saw you standing there, outside the plane, shaking hands and well, doing your duty, I realized or at least I felt like I really could trust you.\"\n\n\"That's a good thing, right?\" he said with a smile.\n\n\"It is.\"\n\nHer short answer raised a red flag.\n\n\"But?\" he asked, knowing one was coming.\n\n\"But...there's still this very large age difference between us, and that's never going to change,\" she told him, her smile gone, and genuine concern replacing it.\n\n\"So are you telling me you'd be...uncomfortable...being seen with me?\" \n\nHe nearly used the word 'ashamed' but chose something a little softer.\n\n\"No. Not at all. I'm not the one who's young and gorgeous, James. I'm...I'm 43 years old, and no longer...\"\n\n\"Hey,\" James said quietly, interrupting her. \"Please stop.\"\n\nHe got up and moved his chair over to her side of the table, then took her hand again.\n\n\"I would be so proud and so happy to be seen with you, Kimber. Anytime, anywhere.\"\n\nHe watched her eyes watching his as he spoke and continued.\n\n\"You are so beautiful it...it hurts,\" he told her.\n\n\"But I'm...\"\n\n\"You're perfect,\" he told her. \"In every way.\"\n\nTheir eyes were locked, and their faces were only a foot or so away from each other.\n\n\"Then, if you'd still like to see me again, I think I'd very much like to go out with you,\" she said as their eyes danced.\n\n\"I'd like that,\" James told her.\n\nShe saw him moving toward her, and her heart raced as he said, \"Very much,\" just before kissing her softly.\n\nTheir lips slowly parted, and as they did, Kimber looked down for a moment before looking back up at him.\n\n\"Will you call me?\" she asked.\n\n\"Guaranteed,\" he told her as he handed her his phone. He opened up his 'contacts' page and let her enter her name and number.\n\nWhen she handed it back to him he asked, \"Is this evening too soon?\"\n\n\"Uh-uh,\" she told him.\n\nThen she smiled happily and said, \"It's actually a long time to make me wait, but I think I can hold out.\"\n\nHe laughed quietly, and Kimber's beautiful smile got even more beautiful before he said, \"May I walk you outside?\"\n\n\"I always take a cab or the shuttle that goes right by my apartment complex,\" she told him.\n\n\"I have an older car,\" he began saying. \n\nHe stopped, smiled, then said, \"Okay, it's actually pretty much on its last legs, but it runs. I'd be happy to give you a ride home if you wouldn't be embarrassed to ride in it.\"\n\nKimber smiled happily then said, \"Well, as long as you're in it with me, I suppose I could endure a short ride in it.\"\n\nJames smiled but he didn't laugh. He didn't because he was mesmerized by her beauty. \n\nHe wasn't even aware he was speaking until he'd said it, but he told her, \"My God. You are so unbelievably beautiful.\"\n\nKimber stopped smiling, and again, her heart began pounding as his words entered first her brain and then her soul. The words, along with the way he said them and the way he looked at her moved her to the point of tearing up.\n\nJames saw her blink several times and asked if she was okay.\n\n\"I will be if you'll kiss me again,\" she told him ever-so quietly as she leaned toward him.\n\nNeither of them cared they were in public as she slid her arms around his neck while he touched her pretty face as they kissed much more passionately. Being in public was quite possibly the only thing that kept them from going further, but both of them now knew that doing so was only a matter of time.\n\n\"Come on. Your chariot awaits,\" James said when the long, slow kiss finally ended.\n\nHis one bag was almost the only thing left on the carousel when they got to baggage claim, hand in hand. James grabbed it when it came around, and Kimber pulled her luggage behind her as they walked, the sound of her heels clicking with each step.\n\nWhen they got to the parking garage, and James stopped at the worst-looking car anywhere around them, Kimber tried not to laugh, but couldn't help it.\n\n\"Am I going to have to push?\" she asked as he opened the trunk.\n\n\"Maybe, but once it gets going we should be fine,\" he told her as he carefully placed her things inside.\n\nHe walked her to the passenger door then said, \"You may want to step back,\" as he gave the door a huge pull. It creaked and stuck then gave way, and Kimber laughed again.\n\n\"Thank you\u2014I think,\" she said as she got in and looked around. The interior was old and worn, but everything was clean and orderly, and there wasn't so much as a wrapper on the floor.\n\nJames got in, then said, \"It can get a little loud at times.\"\n\nKimber laughed as she stuck her fingers in her ears.\n\n\"Okay, fire it up it, Captain!\"\n\nJames gave her a look and that made her laugh even louder. She took her fingers out and said, \"I forgot all about the 'Captain Kirk' thing. I was just referring to you as the captain of your ship. Or chariot, maybe?\"\n\nJames gave her a playful 'uh-huh, sure' look, then turned the key.\n\nWhen it came to life, the noise startled Kimber to the point she made a loud shrieking noise then laughed again.\n\n\"Well, you did warn me!\" she said loudly.\n\nAs he backed out, Kimber said, \"Please tell me the heater works.\"\n\nJames stopped, dropped it into drive, then said, \"I promise never to lie to you so...I can't tell you that.\"\n\nNovember was a very cold month in Seattle. Not like Minnesota or Canada cold, but it was dark, wet, gray, and rainy most of the time, and this was no exception. \n\nJames quickly peeled off his jacket, and laid over Kimber's bare legs.\n\n\"That's about the best I can do,\" he told her.\n\nShe pulled it tight around her very shapely legs, smiled, then said, \"It's more than enough. Thank you.\"\n\nThe car roared loudly when he stepped on the gas, and Kimber couldn't help but laugh again. She couldn't help it, not because it was all that funny, but because she was so happy it wasn't possible not to laugh.\n\nBecause of the noise, neither of them said much on the very short drive to Tukwila. Kimber's apartment was less than three miles from the airport, so in spite of the heavy traffic, it was a very quick trip.\n\nAs he got her luggage out, he asked if he could carry it upstairs and inside for her.\n\n\"I'm not sure that would be such a good idea,\" she said with a smile. \"The way I feel right now, I'm not sure I could um...resist your charms.\"\n\n\"Even after riding in...this?\" James said as he nodded toward his clunker.\n\n\"Well, that did make quite the impression on me. I'll grant you that,\" she said very sweetly.\n\nJames set her things down and asked, \"Have I scared you away yet?\"\n\n\"Why? Because your car isn't brand new?\"\n\n\"Brand new? Um, it hasn't been brand new since...well, since 2001.\"\n\nKimber tried not to laugh when she asked for clarification.\n\n\"Do you mean the actual year or when the movie, 2001 A Space Odyssey, came out?\"\n\n\"No, the year itself,\" he told her.\n\n\"Oh, good. For a minute there I was wondering.\"\n\nJames faced her then took her hands and said very seriously, \"Let's see. That movie came out in the late '60s, if I'm not mistaken.\"\n\n\"Yes, it did,\" Kimber said as she put her hands on his collarbones.\n\nJames tilted his head slightly, a perplexed look on his face, then said, \"So...how old were you when it was released?\"\n\nKimber's eyes opened wide, and she sucked in a loud breath of disbelief before saying, \"I'll have you know I wasn't born until 1975, buddy. So there!\"\n\n\"Nineteen seventy-five?\" James said with feigned disbelief.\n\n\"Yes. That's correct. You got a problem with that?\" she said trying to sound tough.\n\nJames pulled her close and said, \"Nope. Not at all,\" before he kissed her again.\n\nAs the kiss ended, he said, \"Oh. Um...1992 here.\"\n\nHer eyes got wide again as she said, \"Oh, my God! You're...you're a...baby!\"\n\nJames laughed then said, \"And you're...a babe.\"\n\nKimber put her arms around him, hugged him hard then said, \"I'm so glad we met.\"\n\n\"Me, too,\" he told her.\n\n\"I wish it had been under different circumstances, but, well, if the circumstances were any different, we probably wouldn't have met.\"\n\nJames smiled at her then looked up and said, \"Miles? If you had anything to do with this...thank you.\"\n\nKimber smiled happily then added, \"Yes. Thank you very much,\" before she kissed him again.\n\n\"I'll call you,\" he told her.\n\n\"You better,\" she 'warned' him.\n\nAs she walked away, he watched her, then out of the blue he wolf whistled.\n\nKimber turned her head around, smiled, then shook her tush for him.\n\nJames whistled again then called out, \"You are so hot!\"\n\nKimber laughed and said, \"Bye, James!\" before disappearing into a stairwell.\n\nWhen he got back into his car, he sat there for a moment then said out loud, \"I am so gonna marry that woman.\"\n\nWhen he got home, James's mother started crying and hugged her son.\n\n\"I saw it all on the news! I'm so sorry for you and for that wonderful man.\"\n\n\"Thanks, Mom. He was pretty amazing.\"\n\nShe let go of him then asked, \"Are you okay?\"\n\n\"I am. Great actually.\"\n\n\"Oh. I just thought that with all this drama you might be upset or need to talk,\" she said.\n\nGlenda Kirk knew her son wasn't the talkative type, but he'd always let her know when something was wrong. \n\n\"There really isn't much to talk about. And yet, I could probably talk for hours about my impressions and all the things I wish I could have asked him. But as odd as it seems, it's almost as though it was his destiny to die there.\"\n\nHer son's voice was distant, and that told her he'd been deeply moved by it all. And then, without warning, he said, \"Mom, there's something I do want to talk about.\"\n\n\"Oh, okay,\" she said. \"Come in and sit down. Can I get you anything?\"\n\n\"No. No, thanks. I just need to tell someone.\"\n\n\"Tell someone...what?\" she asked. \"Did you get into some kind of trouble?\"\n\nHe did his best not to laugh, but he couldn't help smiling that his mother, who knew him better than anyone on earth, would think he'd gotten into some kind of trouble as James Kirk had never even had a traffic ticket.\n\nThey sat down and James told his mom, \"I met someone.\"\n\n\"Another girl?\" she asked, not trying to be flip. She just knew there was a very long string of girls in his past, and she never asked about them.\n\n\"Yes. Well, no. Not exactly, anyway,\" he said. \"She's not a girl, Mom. She's a woman.\"\n\nHis mom sat up straight and was now very interested.\n\n\"Someone you really like?\" she asked hopefully.\n\n\"Yeah. I really like her, Mom. A lot.\"\n\n\"Well, I'm so happy for you, honey. Tell me about her. What's her name? What does she do?\"\n\n\"Her name is Kimber.\"\n\n\"Kimberly is a lovely name,\" his mom said.\n\n\"No. Kimber without the '-ly' at the end.\"\n\n\"I don't think I've ever heard of that name, but it's still very pretty.\"\n\n\"She's a flight attendant, and I met her on the flight to DC. She sat down to talk to Mr. Stewart, and I overheard most of the conversation.\"\n\n\"I'm assuming she's very pretty,\" his mom offered, knowing she had to be.\n\n\"She's beautiful, Mom. Stunningly so.\"\n\n\"Well, that's wonderful. Does she live around here?\"\n\n\"Yes. Over in Tukwila.\"\n\n\"That's not far, at all.\"\n\nJames took a deep breath, exhaled then said, \"Mom? She's quite a bit older than me.\"\n\n\"Older?\" his mom asked. \"As in over thirty, older?\"\n\n\"Um, yes,\" James said.\n\n\"Well, I suppose that's okay,\" his mom said. \"Does she have children?\"\n\n\"No. No children. She's a widow.\"\n\n\"Oh, my. That's terrible.\"\n\n\"I don't know much about what happened, but we spent some time together yesterday, and I don't know. I've never had so much fun. But not...fun fun. It was more that I've never felt more connected with anyone in my life.\"\n\n\"This sounds serious,\" she said.\n\n\"I don't know about that, but I think I'd like it to be.\"\n\n\"Well, why don't you invite her over sometime? I love to cook, and I'd really like to meet her. And being a little over thirty isn't really that big a deal.\"\n\n\"She's a little older than that, Mom.\"\n\n\"I see,\" she said quietly. \"May I ask how much older?\"\n\nJames nodded as he said, \"Of course you can. I just want you to keep on open mind, okay?\"\n\n\"James. You're scaring me. I just read a story online about a 19-year boy who married a 72-year old woman. In the UK, no less. And no, I'm not kidding.\"\n\nJames finally laughed then said, \"It's not that bad, Mom. Kimber is...43.\"\n\n\"Oh, my,\" she said again before trying to compose herself. \"Well, I know you're a very intelligent, thoughtful young man, so if you say she's...wonderful...then I have to believe she is.\"\n\n\"I know how it sounds, Mom. Or at least I can imagine how it must sound. But like I said, I've never met anyone like her. I can't stop thinking about her, and I want to be with her all the time.\"\n\n\"Well, if that's the case, then I think you should follow your heart,\" his mom said. \n\nIn her heart of hearts, Glenda couldn't help but wish this woman was at least ten years younger, but she trusted her son, and if she meant that much to him, she would do her best to be supportive. Besides, the fact that he currently liked her or really liked her, didn't mean it was going to last.",
        "\"We're going to Mr. Stewart's memorial on Saturday. Would you like to come, too?\" James asked.\n\n\"Oh. No, I don't think so, honey. I didn't know him, and I don't want this g...woman...to feel uncomfortable.\"\n\n\"I understand not knowing him, but I'm sure she would love for you to be there.\"\n\n\"How about letting me think about it?\" she suggested.\n\n\"I can't ask for more than that,\" he said.\n\nJames stood up, walked over and gave his mom a hug.\n\n\"I love you, Mom,\" he told her.\n\n\"I love you, too, Captain,\" she said using the name her late husband had tagged their son with when he was still too young to talk.\n\nThat evening, James gave Kimber a call, and she answered on the first ring.\n\n\"James?\" he heard her say excitedly.\n\n\"Yes. Hi. How are you?\"\n\n\"Good. Even better now,\" she said.\n\nHe could tell she was smiling, and that made him feel even better.\n\nThey spent about half an hour talking. Much of it was about work and school and James was curious when her next flight was.\n\n\"I'm off until Monday morning,\" she told him.\n\n\"Me, too,\" he replied.\n\n\"Did you want to get together and do something?\" she asked cheerfully.\n\n\"Well, only every day,\" he said very seriously.\n\nKimber laughed happily and said, \"I think that could be arranged. Have you had dinner yet?\"\n\n\"No. Not yet,\" he told her.\n\n\"I'm not a bad cook,\" she said.\n\n\"I thought your place was a bad idea.\"\n\nShe laughed then told him, \"That was before I got my...emotions...under control.\"\n\nNow James laughed then said, \"Darn!\"\n\nKimber laughed, too, then said, \"I can have something ready around seven. Is that okay?\"\n\n\"Yes. That's very okay. I'll see you then.\"\n\n\"I'm looking forward to it, James,\" she said sweetly. \"See you then.\"\n\n\"Bye, Kimber,\" he replied.\n\nJames let his mom know he'd be having dinner with Kimber, and she tried to sound happy about it.\n\n\"Have a nice time, honey,\" she managed to say, even as her concern level kept creeping back up.\n\nJames couldn't control how his mother felt, or anyone else for that matter, not even Kimber. All he could do was be himself and hope for the best.\n\nWhen he pulled back into her apartment complex he found himself second guessing what he'd worn, whether or not his hair looked good, then laughed about his car, something he'd love to trade in or just get rid of. But until he had a regular source of income, that wasn't possible.\n\nJames was now over a hundred grand in debt with student loans and he still had a three-year residency to complete. So for now, at least, a new car, or even a newer car, was out of the question.\n\nHe took one last look at himself in the car mirror then headed inside. He stopped at her door then gently knocked. This was the first time since high school he could remember his pulse racing in anticipation of meeting a woman, but it was definitely up\u2014way up.\n\nWhen Kimber answered the door and he got a look at her, it skyrocketed.\n\n\"Hi! Are you going to come in?\" she asked when he stood there staring at her.\n\n\"I...I don't know. I think I'm too stunned to move.\"\n\nKimber laughed and said, \"I'll take that as a compliment.\"\n\n\"Oh, yeah. It's definitely a compliment,\" he told her as he finally moved.\n\nShe was wearing a short, black, very sexy dress with a hollow neck and hollow sleeves that hugged her gorgeous figure perfectly. James hadn't yet noticed the dangling gold earrings or the three-inch heels with ankle straps or the off-black stockings. His eyes were fixated on the way this dress turned a beautiful flight attendant into a downright sexy woman.\n\n\"You look...\"\n\nHe took one more look then asked, \"Did I already say 'stunning'?\"\n\nKimber laughed then said, \"Is it too much?\"\n\n\"Oh, definitely not,\" James told her. \"But now I'm wishing I'd worn something nicer than Dockers and a button-down shirt.\"\n\n\"Why? That's one of my favorite looks,\" she told him. \"Casual but classy.\"\n\n\"I'll take your word for it,\" he said. \"But you look...magnificent.\"\n\nKimber thanked him again, and was very pleased she'd made what she now thought was the right choice. Since he dropped her off, she had indeed gotten control of her runaway emotions, but she'd also come to the conclusion that she really liked this handsome, younger man. She'd never even dated someone more than five years younger than herself, but after thinking about how he'd made her feel and what a great guy he was, she'd come to the conclusion she didn't care about their age difference. Or at least that she'd do her best to try and forget about it. \n\nAs a result, she'd intentionally worn something very sexy, but not over-the-top, to let him know she really was interested. From there, how things went would determine how things would go.\n\nOnce James got over the dress, he found himself staring at her hair. It was even sexier than he'd remembered during their time together at the memorial and the coffee shop. And on top of that, Kimber was wearing full makeup, but not so heavy it looked gaudy. It was, like everything else, perfect.\n\nFinally back in control of himself, James realized something smelled incredibly good, and it wasn't Kimber's perfume.\n\n\"It's blackened shrimp stroganoff,\" she told him. \"I forgot to ask if you eat red meat or what you even like, so I went with something I hope you'll enjoy. If not we can order pizza or something.\"\n\nShe led him into the kitchen where he saw the plates with delicious-looking shrimp on fettuccini pasta seasoned with cajun seasoning and drizzled with olive oil.\n\n\"That looks even better than hit smells,\" he told her.\n\n\"It's ready...if you are,\" she said.\n\nJames turned to look at her and say 'thank you' when her incredible beauty took his breath away.\n\n\"You are truly amazing,\" he said quietly. \"You're kind, caring, gorgeous beyond words, and a great cook. All I can say is...wow.\"\n\n\"I was hoping to make a good impression,\" she said with a very happy smile.\n\nJames moved closer, put his hands on her hips then said, \"If I wouldn't smear your lipstick, I'd kiss you right now.\"\n\nKimber was still smiling as she moved closer and put her arms around his neck.\n\n\"Lipstick is very easy to touch up,\" she said as she leaned closer.\n\nJames responded and kissed her softly.\n\n\"Wow...again,\" he said as she slowly pulled away.\n\n\"When you didn't kiss me hello, I was a little worried.\"\n\nJames smiled and said, \"There's nothing to worry about. You really did stun me into silence.\"\n\n\"Well, thank you again, but you should know I think you're incredibly attractive, too.\"\n\n\"I'm glad to hear you say that,\" he said as they continued looking at each other.\n\n\"I can't imagine you don't know that's true,\" she told him.\n\n\"All that matters to me is that you think it's true,\" he said.\n\n\"I do,\" she said quietly before they kissed one more time.\n\nThis kiss was slightly longer, and for the first time, their tongues briefly touched a time or two causing a stir in James somewhere below the belt. \n\nWhen it ended, Kimber said, \"I'll set these plates down then be right back.\"\n\nWhen she returned, her glossy lips were again perfect.\n\n\"Would you like some white wine, James?\" she asked.\n\n\"If you're having a glass, then yes.\"\n\nShe poured one for each of them then sat down at the table for two that could be extended for up to four people.\n\nJames held up his glass and said, \"To Miles and all the other fallen heroes.\"\n\n\"Yes. I'll drink to that,\" Kimber said as they touched glasses.\n\nThey both took a sip then tried the food which was excellent.\n\nFor the next hour they sat and talked and occasionally took a bite or a sip of wine. Again, both of them were struck by how much they had in common, and in particular, the way they viewed love, romance, and marriage.\n\nJust after eight o'clock, they moved a few feet into the area that was essentially a living room, and after Kimber topped off their glasses, they began talking about their families.\n\nShe told him how her husband, Michael, had died.\n\n\"He was a pilot, and one day he was out flying a single-engine plane around Mount Rainier. The NTSB did an investigation, but the cause of the crash was never discovered. Their best guess was engine failure, but I suppose I'll never know.\"\n\n\"That's beyond awful,\" James told her.\n\n\"It took me a couple of years to stop crying, and another one before I could even think about dating. I still miss him terribly, but I've finally moved on, whatever that rather meaningless term means.\"\n\n\"I lost my father when I was ten,\" James told her.\n\n\"Oh, I'm so sorry, James,\" she told him immediately. \"I can't even imagine.\"\n\n\"Yeah, it was terrible. My dad was my best friend and my hero,\" he said somewhat wistfully. \"I kind of retreated inside myself for a year or so after that.\"\n\n\"You were so young. I was devastated losing my husband. I'm not sure if I could have coped with losing my dad. He's my hero, too, by the way.\"\n\nThe way she smiled at him lightened the mood considerably, and James said, \"I'm glad we shared that, but maybe we could move on to something a little less painful?\"\n\n\"Definitely,\" Kimber agreed.\n\n\"Do you know where you'll be doing your residency yet?\"\n\n\"It's funny you should ask. After I dropped you off...in my chariot...\"\n\nKimber laughed as he continued, \"I did a little research on something I wouldn't have even considered before meeting Miles.\"\n\n\"Do tell,\" Kimber said, genuinely interested.\n\n\"I did some very preliminary checking into how to become an Air Force doctor.\"\n\n\"Seriously?\" she said in a way that James couldn't read.\n\n\"Well, I was just looking. I'm not saying it's something I'd actually do,\" he told her as fast as the words would come out.\n\n\"I think that would be fantastic!\" she replied. \n\n\"Really?\" he said, now surprised in a different way.\n\n\"Well, yes. I could definitely see you doing that, and I think you'd be perfect for the job.\"\n\n\"Eventually, I'd have to leave the local area. I'd do my residency here, which the Air Force would pay me for, and then go on active duty and pay back the time I owe. And who knows? If I like it I might just stay in. I mean there's no malpractice insurance, and I'd actually be serving my country.\"\n\n\"I think that's a wonderful idea, James.\"\n\n\"Me, too, but I'd never do it if things between you and me...went well.\"\n\nHe realized that sounded awkward, but Kimber 'got it'.\n\n\"Why would that matter?\" she asked.\n\n\"Well, if they did, and I know we just met...but if they did, you might not want to leave the Seattle area.\"\n\nShe smiled, set her glass down, then slid over next to him.\n\n\"James? Were I to ever fall in love again, I'd be willing to go anywhere with the man I love.\"\n\nHe stared into her eyes and said, \"You are just too good to be true.\"\n\nAs she stared back she smiled and told him, \"Love does that to you. It makes you want the other person's dreams as your own.\"\n\nJames put his arm around and pulled in close. Kimber laid her head on his shoulder and snuggled right up with him.\n\n\"What are your dreams, Kimber?\"\n\n\"To be happy. To be loved the way I was loved. To share my life with someone special.\"\n\nShe hesitated then decided to say it.\n\n\"And...if I still can...to maybe have a baby.\"\n\n\"What do you mean 'if you still can'?\" James asked. \"Forty-three isn't too old.\"\n\n\"But I still have to meet the right guy, fall in love, get married, and then try. I could be 45 or older by then,\" she said.\n\n\"So you've never met anyone like that since you lost your husband?\" he asked as he gently ran his hand up and down the sleeve of her dress that was filled with 'holes'.\n\n\"I don't know,\" she said quietly. \"What I do know is that...until two days ago...I knew I hadn't.\"\n\n\"That's interesting,\" James said as he tried to sound detached.\n\n\"Why is that?\" Kimber asked, disappointed in his blas\u00e9 response.\n\n\"It's just that I'd never met anyone I would have even thought of that way until...two days ago, either. That's quite a coincidence, don't you think?\"\n\nHis comment caused her body to react in a way that made it ache to be loved, and that, in turn, caused her to say, \"Yes, it is,\" as she snuggled in even closer.\n\n\"Kimber?\"\n\n\"Yes?\"\n\n\"Do you believe in love at first sight?\"\n\n\"I didn't.\"\n\n\"Until?\" James asked, hoping he knew the answer.\n\n\"Well, coincidentally, until two days ago.\"\n\n\"That's really odd, because that's exactly how I felt until...\"\n\nKimber sat up and looked at him.\n\nShe smiled then said, \"Two days ago?\"\n\nJames didn't smile back. He just looked into her eyes then reached up and touched her face as he quietly said, \"Until I met you.\"\n\nShe looked down and as she did she realized her heart was racing again. She looked back up at him then said, \"Yes. Same here.\"\n\n\"I've never been in love before,\" he told her. \"So I have nothing to compare this to. But from what little I do know about falling in love, I'm pretty sure it's supposed to feel like this.\"\n\n\"I have been in love before. Once. And I can assure you it feels very much like...this.\"\n\n\"Kimber?\"\n\n\"Yes?\" she replied, barely able to speak.\n\n\"Is it possible to want someone so much that you don't...want them...in order to keep from ruining what you have?\"\n\n\"I'm not sure, but it sounds like that might be possible,\" she said.\n\n\"I want to kiss you and...more...right now so bad it's almost more than I can stand.\"\n\n\"Then why don't you?\" she asked, her eyes pleading with him to do so\n\n\"Because you're not like every other girl I've been with. You're like...you're like the personification of every quality I've ever wanted in a woman all rolled into one beautiful, amazing person.\"\n\n\"So...you don't want to make love to me?\" she finally asked.\n\n\"No. I do. More than I can say. It's just that in every other case, I would have already, you know...\"\n\n\"Then let's make love, James,\" she said as she put her hand on his face.\n\n\"Not if it's going to hurt our chances of being together,\" he told her as he took her hand in his.\n\n\"I'm willing to wait, too,\" she told him, even though her body yearned to be loved so badly she could barely stand it.\n\n\"It's not that I want to wait,\" he told her. \"Trust me. It's just that you're the only woman I've cared about so much that I'd do anything to make this work for the long term.\"\n\n\"I want you, too, James, but yes, if waiting will make things better or stronger, I'll gladly wait as long as it takes.\"\n\n\"And you're not upset with me?\" he asked with deep concern.\n\n\"No. Of course not. It's just that it's been so long for me, and I like you so much,\" she told him.\n\n\"I can't believe I'm saying this to the most beautiful woman I've ever known, but perhaps we could wait until Saturday. After the memorial service. We could get a very nice hotel in Seattle and spend some time together there.\"\n\nKimber smiled and said, \"I think that sounds pretty wonderful. But we don't need to spend that kind of money.\"\n\n\"I just want our first time to be the most wonderful and memorable experience possible,\" James told her.\n\n\"James?\" \n\n\"Yes?\"\n\n\"As long as it's you I'm with, it truly won't matter where we are,\" she told him.\n\n\"Kimber?\"\n\n\"Yes?\" she replied softly.\n\n\"Then...well, if that's true, do we really need to wait?\"\n\n\"It's up to you, James Kirk,\" she said sweetly. \"I won't like you any more or less either way.\"\n\nHe smiled leaned over closer then said, \"In that case...\"\n\nHe kissed her softly at first and then when their tongues touched, it was game over. Moments later they were in her bedroom tearing at each other's clothes. When her clingy dress wouldn't cooperate, Kimber was already breathing hard and said, \"It cost less than fifty bucks. Rip it off, for God's sake!\"\n\nKimber had made love more times than James, but he'd had many more partners. Even so, both of them lay there afterward thinking they had never experienced anything like that in their lives. And the reason why was clear. Neither of them ever had.\n\nAfter a minute or two of laying in each other's arms and catching their breath, James said, \"That was by far the most amazing thing I've ever experienced.\"\n\nKimber smiled happily and said, \"Gee, what a coincidence. I was just about to say the same thing.\"\n\nJames pulled her closer and held her tightly as he said, \"I had no idea how much better lovemaking could be with someone I lo...\"\n\nHe saw her look at him then quietly said, \"Really, really like.\"\n\nShe kissed him softly then told him, \"And I really, really like you, too.\"\n\n\"Enough to...really, really like me again?\" he asked playfully.\n\n\"Well, if you're...\"\n\nShe reached for him and when he was already growing hard again, she laughed.\n\n\"I'd say you are,\" she said, finishing her own sentence as he pulled her on top of him.\n\nThis time their lovemaking was slower and gentler and sweeter. It was still passionate, but it was so much more delicious as they explored every inch of the other's body. As he got ready to cum, he pulled out of her again, and this time, Kimber took him in her mouth as he filled it with his warm, salty liquid.\n\n\"My God, you are unbelievable,\" he told her when she smiled and showed it to him before ceremoniously swallowing all of him in once delicious gulp.\n\n\"I haven't done that since my husband was alive,\" she told him as she snuggled back up with him.\n\n\"Is there anything you're not amazing at?\" James asked as he made circles around his finger with her long, dark hair.\n\n\"Football,\" she said very seriously. \"I really suck at football.\"\n\nShe looked up and saw him smiling then said, \"Don't you dare say one word about how I suck!\"\n\nJames couldn't help laughing, and when he did, Kimber laughed, too. She held him close, and for the first time since she and Michael had been like this, she felt like she was in love again. She knew it was too early to use the 'L' word, but James had already come close, and they'd both admitted to 'love at first sight'. Even so, she ached to tell him, but chose instead to lay there in his arms and draw little circles on his bare chest.\n\n\"I gave in once tonight already,\" he told her.\n\n\"I'm sorry?\" she said, not sure what he meant.\n\n\"I made this big pitch about waiting then collapsed like a house of cards.\"\n\n\"Oh. That,\" Kimber said with a happy smile. \"Yeah, you didn't have a lot of conviction behind that whole waiting thing, did you?\"\n\n\"No. I thought I could wait, but as it turns out I couldn't.\"\n\n\"Well, whatever the reason is you caved, I'm very glad you did,\" she told him as she laid her arm across his chest and held him.\n\n\"There is a reason,\" he said quietly.\n\n\"My...beauty and charm?\" she teased.\n\n\"Well, there is that,\" James said. \"You have amazing amounts of both.\"\n\n\"Was there something else?\" she asked as she raised her head up to look into his eyes.\n\n\"Yes. There was,\" he told her as he reached up and stroked her hair.\n\n\"Care to share?\" she asked.\n\n\"I don't want to scare you off,\" he said with a very small smile.\n\n\"You didn't scare me off when you...caved,\" she said, teasing again.\n\n\"Well, okay. If that's true, then the real reason I caved is because I'm...I'm pretty sure I'm...falling in love with you.\"\n\nKimber was expecting words to that effect. In fact, she was hoping and praying he would say them. Even so, when he said them out loud, they touched her so deeply that her eyes filled with tears by the time he finished saying them.\n\n\"Wow. I didn't mean to make you cry,\" he said, hoping those were really tears of joy.\n\nKimber shook her head and said, \"No. I'm not sad, James. I'm...I'm happy. I'm happier than I can ever remember being.\"\n\nShe blinked a few times then looked right at him again and said, \"That's because I'm falling in love with you, too.\"\n\nNeither of them talked about what they'd just said the rest of the night, but after a minute or so passed in silence, Kimber said, \"I think you should look into being an Air Force doctor.\"\n\nHe kissed the top of her head and asked, \"Are you saying you'd go with me? You know, if things so well.\"",
        "\"Well, I am willing to go anywhere with a man I love,\" she said without answering him directly.\n\n\"Would that be a man like me?\" he asked trying to pin her down.\n\n\"No,\" she said very seriously.\n\n\"What? Wait a minute? I'm not?\"\n\nKimber smiled then explained.\n\n\"You asked if I'd go with a man like you. The answer to that is 'no'. However, if you were to ask me, the answer would be 'yes'.\"\n\n\"Are you trying to scare me to death or something?\"\n\nKimber was laughing but suddenly stopped.\n\n\"James? Please don't even joke about that, okay?\"\n\nShe wasn't being mean. She was telling him she'd lost the only man she'd ever loved, and now that she was finally falling in love again, just the thought of losing him was too much to even think about.\n\n\"I'm sorry,\" he told her.\n\n\"It's okay,\" she said as she buried her head in the crook of his neck.\n\nThey made love one more time before James left around midnight. Kimber wanted to ask him to stay, and James wanted to ask if he could. But on some level, they both knew this was best.\n\nAs she walked him to the door she stood there looking at him wearing nothing but a sheet she'd pulled around her beautiful body.\n\n\"When I said I was falling in love with you?\" she said.\n\n\"Have you changed your mind already?\" he asked with a smile.\n\n\"Yes,\" she told him, again scaring him for a brief moment.\n\n\"I'm no longer falling, James,\" she told him.\n\n\"Me, either,\" he said before taking her in his arms.\n\n\"I love you,\" she said quietly for the first time.\n\n\"I love you, too...sweetheart,\" he said back as she held him as hard as she could.\n\nAfter what seemed like a very long time, she finally let him go.\n\n\"Are you really sure you want to get involved with a woman my age?\" she asked.\n\n\"No,\" he told her, scaring her this time.\n\n\"James! What are you saying?\" she asked, her eyes filled with concern.\n\n\"You asked if I wanted to get involved with a woman your age, and the answer is 'no'. But I do want to get involved with you.\"\n\nShe knew he'd just turned the tables and hit him playfully.\n\n\"Stinker! Are you trying to scare me to death?\"\n\nThis time, Kimber realized that by using his words again, she'd just stepped on a land mine.\n\n\"James. I'm so sorry. I didn't mean to...\"\n\nHe held her close and said, \"It's fine. You can tease me about that. I just won't ever do that to you again.\"\n\n\"No. You don't understand. I can't stand to even think about that. It's...another thing I'm not good at. That and football.\"\n\nJames squeezed her tight as he laughed and said, \"I really do love you, Kimber.\"\n\n\"Same here. I know it's supposed to take weeks and months, but I often thought that if love ever walked back into my love I'd know it. And when it...when...you...did, I just knew. It took me a while to admit it, but I do love you.\"\n\n\"I never gave it any thought, because I had no expectation of falling in love any time soon.\"\n\nHe pulled away and looked at her then said, \"But how could I know love was a flight attendant?\"\n\nKimber laughed happily then said, \"Will I see you tomorrow?\"\n\n\"Actually it'll be later today, but yes. Yes, you will.\"\n\n\"And then tomorrow\u2014the real tomorrow\u2014is Miles's memorial service.\"\n\n\"Right. Yes, it is,\" he said. \"Oh, my mom seems like she'd like to attend, but I think she's a little concerned about, you know...\"\n\n\"Oh, gosh. That's right. I haven't met her yet, and I think I'm as concerned about it as she is if not more. Do you think she'll like me?\"\n\n\"I do,\" he told her with a smile. \"She'll like you because I love you.\"\n\n\"Then...I'd like to meet her. I'll still be nervous, but I trust you...honey,\" she told him before she kissed him.\n\n\"Maybe we can get together at the house tomorrow?\"\n\n\"Okay. Just let me know when.\"\n\nThey hugged again then kissed each other goodbye, and Kimber stood there, her back to the door for some time reflecting on what had happened and how fast it had taken place. She really did trust James, and believed that he felt the same things for her that she felt for him, and somehow, she knew she loved him. It made no difference how long she'd known him. She just knew. She also knew she could have looked and waited and kept looking for years and possibly never have met anyone like him. \n\nSo at 43, she no longer cared about things like 'proper courtship' or waiting some respectable amount of time. All that mattered was that fate had brought them together. Fate or possibly one Miles Stewart.\n\nShe looked up, smiled and said, \"Thank you, sir. For everything,\" before going back to bed and falling into a deep, peaceful sleep.\n\nKimber woke up feeling like life couldn't get any better until she remembered meeting James's mother. She did her best to push her fears and concerns aside, and yet she could only imagine what this woman, who couldn't be that much older than her, might be thinking.\n\nAnd yet, after a mildly rocky start after being introduced to her, Kimber realized that no matter what happened with her and James, she had a friend in this new woman she learned was named Glenda.\n\nAt one point James teased her about whether or not she knew he was even there.\n\n\"Oh, I'm so sorry! Your mom and I have been talking non-stop for the last hour.\"\n\nHe was standing behind her and leaned down and whispered, \"See? I told you so. I was right, wasn't I?\"\n\nKimber reached up and squeezed a hand on her shoulder.\n\n\"Yes, you were,\" she said quietly as she looked over her shoulder.\n\nJames kissed her for the first time in front of his mom, and to her credit, she barely blinked. It was still very strange to imagine her son with a woman just ten years younger than her, but beyond that, Glenda could see her son was smitten, and after meeting Kimber, she knew why. She was clearly beautiful. She was far prettier than Glenda had ever been, even when she was in her 20s. But she was also smart and funny and a true joy to be around.\n\nAs they got ready to leave, Kimber thanked Glenda for a very pleasant evening.\n\n\"I have to say I had my reservations, and I'm still working on this relationship of yours, but I have to say you're every bit as wonderful as James told me you were.\"\n\nKimber hugged her and let her know she thought Glenda was just as wonderful, then asked her to please reconsider about the memorial service.\n\n\"You know, now that I know you, and enjoy spending time with you, and that my presence won't make anyone uncomfortable, I may just show up.\"\n\n\"I barely knew Miles, but I'm sure he'd appreciate your being there, Glenda.\"\n\n\"Okay. Then I will be there,\" she promised.\n\nJames walked her outside and asked how Kimber thought things had gone.\n\n\"Oh, my goodness. Your mom really is just wonderful,\" she said. \"I'm so relieved.\"\n\n\"She has good taste,\" James told her with a smile.\n\n\"Oh, I see,\" Kimber said playfully as they got to her car.\n\nHe put his arms around her waist and said, \"She loves you, too.\"\n\n\"No, she likes me and she's tolerating me. But that's so much better than it could have been, right?\"\n\n\"I'm just glad you get along,\" he said with a smile. \"But I'd love you no matter what.\"\n\n\"You better,\" she told him. \"Once I fall in love it's for life.\"\n\n\"Kimber?\" James said, continuing there game of only using the other's person's first name. \n\nShe smiled at him and he said rather seriously, \"I just want you to know I'm not nor will I ever be, jealous of Michael. You don't need me to tell you this, but it's important to me that I do. I need you to know that I want you to always love him.\"\n\nKimber's eyes instantly filled with tears as his words hit home. This was a subject that could have been sensitive with many men, but James just blew away any doubts she might have had about him being too young or immature.\n\n\"Thank you for saying that. I will always love him, and it's important to me that you allow me to do that. There may be times when I feel sad or melancholy about his passing, and knowing you understand is more evidence I've found the right man.\"\n\nShe pulled him close and said, \"I love you very much.\"\n\n\"I love you, too, and I'll be by to pick you up tomorrow morning. And don't worry, I won't be driving the rent-a-wreck.\"\n\nKimber laughed, hugged him again, then got in her car and drove off leaving James standing there wondering how he'd ever gotten so lucky.\n\nBack inside, Glenda told her son, \"I like her, honey.\"\n\n\"She's pretty amazing, isn't she?\"\n\n\"I agree, and had you not told me her age, I would have guessed she was in her early-to-mid 30s. Kimber is just gorgeous.\"\n\nThey talked for a while longer then James went to his room to do some more studying. He fell asleep a little after midnight, and when he woke up, his first thought was of Kimber with thoughts of the memorial service right behind it.\n\nHe chose the darkest suit he had and not surprisingly, his mom was wearing a black dress. On the way to Kimber's, Glenda asked a few questions about Miles, and James answered them the best he could.\n\nKimber was watching for them and when she saw James get out to come get her, she headed downstairs and met him. \n\n\"Wow. You look amazing even when you're dressed for a funeral,\" he told her sincerely before they kissed hello, because it was true.\n\nKimber was also wearing black, and her hair was up. But in spite of her trying to look somewhat somber, she was still oozing sex appeal, and James was again amazed by her beauty. What he didn't know, even though she tried to express it, was that Kimber felt like she'd won the lottery just in terms of his looks. \n\nLooks alone would have never allowed to fall in love with him, but the fact that he was even more handsome than her gorgeous late husband was the proverbial cherry on top of the whip cream on top of the cake.\n\nShe and Glenda sat in back and chatted politely as they talked about Miles and veterans in general on their way to the church.\n\nMiles was a Presbyterian whose faith had gone from irrelevant to very important after the crash. He never stopped believing in miracles after surviving an event that should have killed him in several different ways, and the pastor who conducted the service made note of that as he eulogized this humble man.\n\nAn Undersecretary of the Air Force was in attendance and also spoke eloquently about Miles even though she had no firsthand knowledge of his life.\n\nWhen they laid him to rest at Tahoma National Cemetery two hours later, there were very few dry eyes as a lone bugler sounded TAPS. The flag was folded then handed to David's younger sister who was doing her best not to cry.\n\nThen, just moments later, David Stewart was again thanking James, who in turn, thanked him for the privilege of knowing his father. He then introduced David to his mother then finally to the beautiful woman he referred to as his girlfriend for the first time. \n\nAs they talked for what would be the last time, people shook hands, hugged, paid final respects, then slowly departed leaving a lone caretaker to reverently lower the casket once everyone was gone.\n\nAs they drove away, Glenda said, \"Have you two stopped to think that were it not for this American hero, you two might have never met?\"\n\nJames smiled at them both via the mirror and said, \"We have.\"\n\n\"It was almost as though it was a kind of...last mission for him,\" Kimber said. \"I'm not saying that was his intent in going. It's just that good people have a way of having good things follow them.\"\n\nThe three of them stopped for lunch and chatted for another hour before Glenda insisted James take her home so the happy new couple could spend some time together.\n\nThe two of them spent not only the rest of the day alone but that night and all of Sunday, as well. It was that afternoon when the two of them sat down side-by-side at the computer and spent some time looking into becoming an Air Force doctor.\n\n\"Look. They'll pay off up to a hundred-thousand dollars in student loans,\" Kimber pointed out. \n\n\"And they'll pay me $45,000 a year plus $2,000 a month as a living allowance during my entire residency. That's not a bad deal.\"\n\nHe looked at her and said, \"I could never ask you to become responsible for all of my student loan debt, and this would wipe that out.\"\n\n\"Honey? I don't care about that. I love that you care about it for my sake, but I'm not in love with your wallet or worried about your bills. I'm in love with you. These are all nice perks, but the most important thing is you following your heart and your dream. If you do that, I'll follow you\u2014if you want me too, that is.\"\n\n\"Why is it every time you say something, I love you even more?\" James asked as he put an arm around her shoulder.\n\n\"I don't know, but I'm glad you do,\" she told him.\n\n\"Tomorrow it's back to the old grind,\" he reminded her.\n\nKimber sighed then said, \"Yes, but I'll have something to look forward to each day now.\"\n\n\"Yeah. Same here,\" he said.\n\n\"You know I'll be gone several days a month, right?\" she asked knowing he knew.\n\n\"Of course. And I have to study an ungodly amount of the time. And that won't change once I graduate as residents work a lot of hours.\"\n\n\"Are you trying to scare me off?\" she asked with a happy smile. \"Because it's not going to work.\"\n\n\"Well, since I can't scare you off, could I possibly talk you into some afternoon delight while we still have free time on our hands?\"\n\nKimber purred and said, \"I thought you'd never ask!\"\n\nBoth of them were very busy during that last semester of medical school, and by the time James was ready to graduate, he'd applied for and been accepted to the Air Force's medical program.\n\nThe day James finished medical school was the proudest of his mother's life. She cried openly when the dean of the medical school shook the hand of her son, Doctor James T. Kirk as she called out, \"Way to go, Captain!\"\n\nIt was also the happiest day of Kimber Lang's life when later that evening, the dashing young doctor proposed to her after a celebratory dinner in front of his mother and her parents, who had both flown in to meet James and attend his graduation.\n\nThey'd immediately liked him, as well as his charming mother, and although there were still concerns on both sides about the difference in age, they went unmentioned as it was quite clear James and Kimber were very much in love.\n\nOnce the ring was on her hand, both moms were crying, and Kimber's father shook Jame's hand and congratulated him before hugging his daughter and telling her how happy he was for her. Both he and his wife had wondered many times after Michael's death if their daughter would ever fall in love again, and now that she had, they were indeed very happy for her\u2014age difference or not.\n\nJames married his beautiful, older fianc\u00e9 over the Christmas holiday when he had a rare three-day weekend. Neither of them were particularly religious, but they both agreed the only logical place to get married was the Presbyterian Church where Miles had been a member for over 90 years. \n\nIt was a very simple ceremony that kept expenses to a bare minimum, as none of that mattered to either the bride or the groom.\n\nThere was no time for a honeymoon as James and Kimber both had to be back at work less than 48 hours after tying the knot, but they did finally spent a very long weekend in the best hotel in Seattle\u2014most of it in bed.\n\nAs the weeks rolled on, Kimber would be turning 44 in mid-February, and two days before the surprise party James had planned for her, she visited her doctor to confirm what she'd suspected for several days.\n\nWhen the party ended, and the two of them were alone together, she said, \"I have a surprise for you, sweetheart.\"\n\n\"Oh, a big night in the bedroom?\" he said as though that was unusual.\n\n\"Okay, there's that, but I have some even bigger news to share with you\u2014Dad.\"\n\nJames gave her a blank look, then said very quietly, \"Are you kidding?\"\n\nHer eyes were so happy and full of life as she said, \"No. I'm pregnant. You're going to be a father.\"\n\nKimber had never seen her husband cry, but as he stood there trying to take it all in, he did tear up.\n\nHe shook his head slightly, blinked a few times, then said, \"Come here.\"\n\nHe took her in his arms and hugged her close. As he stroked her long, soft hair, he said, \"I love you so much.\"\n\n\"I love you, too.\"\n\nThen he pulled back slightly and said, \"I love you\u2014Mom.\"\n\nKimber was so happy she didn't even bother to try not to cry herself. Tears of joy freely fell as her husband held her tight.\n\nShe pulled back a bit and looked into James's eyes and asked him, \"Do you ever thank Miles for the love we have?\"\n\nHe put his hand on her cheek and said, \"All the time.\"\n\n\"Me, too,\" she said before standing on her toes to kiss him.\n\n\"Come on. They say sex is good for pregnant women,\" she told James as she took his hand to lead him to their bedroom.\n\n\"Yes, they do,\" he agreed. \"And I promise to be very, very good to you the entire time you're 'with child'.\"\n\nKimber laughed happily then said, \"By the way. What do you want to name our child if it's a boy?\"\n\nJames laughed, too, then said, \"I don't know. But I do know it won't be James Tiberius Kirk or Scotty or Bones or Sulu or Chekov or...\"\n\n\"Okay, Captain. Enough. We'll figure that when he\u2014or she\u2014is born. For now, beam up, Scotty!\"\n\nJust before Thanksgiving, the happy couple became the proud parents of a beautiful little girl they named Riley M. Kirk with the 'M' in honor of Miles Stewart, the man whose life and death had brought them together.\n\nJames finished his residency right on time and became a doctor in the U.S. Air Force shortly thereafter. \n\nKimber had quit working during her sixth month of pregnancy, and loved being a stay-at-home mom to their beautiful little girl. For his part, the newly appointed Captain James T. Kirk, couldn't have been happier with his choices as he spent his days helping and serving those who served while spending his nights with the girls he loved more than anyone on earth. \n\nOne evening about a year later, James was sitting in the living room watching his gorgeous wife playing with their beautiful daughter and he couldn't help but smile. Then he remembered the saying, \"Out of tragedy comes triumph.\"\n\nIt may not have fit their situation exactly, but it seemed perfectly appropriate as he once again looked up and said, \"Thank you, Miles,\" before getting up and joining in on the fun."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/angel-flight"
}