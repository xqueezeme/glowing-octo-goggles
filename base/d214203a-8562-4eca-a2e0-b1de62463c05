{
    "title": "A Mom, Her Son, and His Lap",
    "pages": [
        "I do not grant permission to anyone to re-post or archive my stories. If you want to download my story for personal use, be my guest, but that's as far as my permissions go.\n\nOtherwise, have fun and enjoy.\n\n<center>* * * * *</center>\n\n<center>1</center>\n\n<center>The Naughty Nun</center>\n\nOkay, Valeria Jones, I thought, it's time to get sexy.\n\nI undid the tuck in the towel between my breasts and let it drop to the floor. I took one small foot and kicked the towel to the side, where one of the maids would pick it up later.\n\nThe young maids in their tiny French outfits, I thought. My husband loved those outfits so much. A smile tugged at the corners of my lips. We both loved them so much. Thankfully, my daughter had moved out of the house a year ago, and my son was finishing his senior year of high school; otherwise, those outfits would be going back into the closet until Colton went off to college.\n\nI fluffed my hair, throwing my wavy, spun-gold locks behind my shoulders. I had to get ready for the long drive to my in-laws' house. I had to dry my hair, put on my makeup, and then my Halloween costume, where it sat atop the mannequin sculpted to my forty-year-young body. And it was a young, forty-year-old body. I had breasts that just passed for big, a narrow waist, a round butt, the tapered thighs of a woman who did squats, strong shoulders, and I had just a little bit of the meat on my bones that comes with age. My bikini model days were over, but I was still a sexy, bendy MILF who enjoyed her husband's cock nearly every day.\n\nI pulled my eyes from my costume, thinking, I'm going to be a nun for Halloween, then I thought of my husband. We are some kinky fuckers, aren't we, Val?\n\n<center>* * * * *</center>\n\nI gave myself one last look in the mirror, checking the mascara darkening my eyes, the red brightening my lips, and the blush rosying up my cheeks. If I only had ten more minutes, I always wanted ten more minutes when I was putting on my makeup.\n\n\"If time had no meaning, you women would spend an eternity on your faces,\" Dex loved to say to me . . . and our daughter, but unlike our daughter, I didn't have a team of professionals working on me for hours at a time before a shoot.\n\nMust be nice, I thought, thinking of my daughter's modeling career. I was only ever a bikini car show model, standing next to cars at car shows with my twin sister, waving at the men who were taking pictures of my G-string from all angles. I sighed, then looked up toward the vaulted ceiling of my coastal bedroom, and I rolled my eyes. Not too bad for a car show model.\n\nThe door to the bedroom opened, and my husband's deep voice boomed, \"Hey, hey, hey, where is that sexy bitch who married me?\"\n\nI smiled and turned away from my vanity, looking at my husband as he closed the door behind him. Dex was tall, lean, blue-eyed, brown-haired, and handsome\u2014a slightly smaller version of our son. Or, our son was a slightly larger version of him, either way . . . the man was sexy.\n\n\"If anyone else called me a bitch. . . .\" I said, trailing off as my smile overcame my face.\n\n\"I know, you'd cut their sack off,\" Dex said, laughing. \"Should I stop calling you that dirty word?\"\n\n\"I like being your bitch,\" I said as my husband walked toward me. \"But if I ever want you to stop, I'll let you know.\"\n\n\"Aw, che bella che sei oggi,\" Dex said, stopping to put his hands on my hips. \"Maybe we should have dressed you in one of those sexy poodle-girl costumes.\"\n\n\"Too bad that's the only Italian phrase you know.\" A blush reddened my face as my insides warmed, and a tingle massaged me between my thighs. \"And it always makes me so wet.\" I licked my lips. \"You should learn Italian for me.\" \n\n\"Oh, my,\" Dex said. \"You really are the naughty nun I hoped you'd be.\"\n\nI laughed as my husband turned me around, making me face my vanity mirror. I was a naughty nun, and there was no mistaking it. My nun's gown hugged my breasts instead of dropping straight down, clinging to their underside, then riding my slender tummy down to my hips and round ass before dropping to the middle of my thighs. The hem barely hid the welts of my black, mid-thigh stockings, and I could see the outlines of my lacy garter belt and matching suspenders through the nude-sheer fabric of my gown. I had a thin rope belt around my waist, a white bib, a silver crucifix, a white habit with a long black veil, and white cuffs at the collar of my sleeves. At the moment, I was wearing plain white tennis shoes, but I had a pair of black, come-fuck-me heels in my weekend luggage for later.\n\n\"So fucking sexy,\" Dex said as he wrapped his arms around my waist.\n\nI shuddered, feeling his size and strength envelope me. My nipples hardened, turning into tight, knotted buds that pushed against my top over the support of my slutty shelf bra.\n\n\"Are you wearing a bra?\" Dex asked, raising his right hand and cupping the underside of my heavy breast.\n\n\"Yes and no,\" I said with a shaky breath. \"Only a shelf bra.\" As my husband's groin pressed into me, I turned my ass in a sexy circle against the lump in his khakis. \"And no panties.\"\n\n\"It's a good thing you're not.\" Dex pressed his cock against my ass. \"Those panties would be wet right now, wouldn't they?\"\n\n\"Do we have time for a quickie?\" I asked, watching my breasts rise and fall in the mirror. \"Bend me over right here, Father Jones\"\u2014I frowned\u2014\"where's your priest costume?\"\n\nMy husband laughed as he said, \"I can't wear that while I drive.\"\n\n\"I thought we were wearing our costumes to the party?\"\n\n\"The party is not until late tonight,\" Dex said, laughing, then he looked to the side, a grin appearing on his face. \"I wanted you to wear your costume because it's so fucking hot.\" He stepped back and patted my butt. \"Is the see-through habit in your bag?\"\n\n\"Yes,\" I said, sighing. \"No time for a quickie?\"\n\n\"The kids are waiting by the car.\"\n\nI sighed again, turning around. \"So?\" God, there was a time he would have fucked me at just the thought of my muff without panties to protect it. \"Look.\" I dropped my fingers to the hem of my gown, and I pulled the hem up my thighs, revealing my garter's suspenders, my smooth skin, the bottom softness of my hairless pussy lips, and upwards. . . . My clitty came into view, and then more, my mound, where I had shaved my blonde pubic hairs into the shape of a small cross. \"Don't we have time, Father Jones?\"\n\nDex growled, dropped to his knees, and wrapped his arms around my legs, taking my bare ass in his hands. His lips touched my fur, and his tongue traced the cross, then he stood and growled again.\n\n\"Aw,\" I sighed as the tingling in my pussy melted my insides, sending a slippery rush of wetness down my lips. \"Are you serious, Dexter Allen Jones?\"\n\n\"Only my mother calls me that,\" Dex said, laughing.\n\n\"Then maybe next year I'll go as your mother,\" I whispered, teasing him with a head shake as I dropped my skirt back into place. \"You'd listen to me then, Mr. Dexter Allen Jones.\"\n\n\"Now we're talking.\"\n\n\"Nasty man,\" I said, walking past him to my panty drawer. I'd need a liner down there to keep me from soaking his Porsche's passenger seat.\n\nFuck, I need some cock, I thought.\n\nNo sooner did I have a lacy black thong in my hands than a thought hit me, and I said, \"Remember when you first met me?\"\n\n\"You and your twin,\" Dex said, standing near the bed where my weekend luggage lay. \"Yeah?\"\n\n\"Remember what you did with us?\"\n\nDex moaned.\n\n\"Come on, you remember,\" I whispered in my poutiest voice. \"Tell me what you did with us.\" I offered him a sexy, little kitten moan. \"Tell me what you made me do with my twin sister. Remember the blow job, baby? Remember when we swapped your cum, tongue to tongue.\" I needed to give my sister a call, married or not; she had always been sluttier than me, and another sister-sister threesome would be a nice Christmas present for my husband. \"Tell me, Dex, what did we do with that big, fat dick of yours.\"\n\n\"We. . . .\" Dex said, then shook his head.\n\n\"C'mon, Daddy, tell me,\" I said, lifting the hem of my gown again. \"So I can think about it while you fuck me really quick, and then I can think about how you fucked me in the car while sitting next to you as the engine's power roars through my twat.\"\n\nDex clenched his jaw shut.\n\n\"While I play with myself while our kids are in the backseat,\" I added, moaning again.\n\n\"I. . . .\" Dex scrunched his face and growled, grabbed my luggage, and raced toward the door. \"We have to leave before the Coast Road fills up with drivers, and it's supposed to rain later, don't forget.\"\n\nDamn it!\n\nThere was only one thing that could pull my husband away from my pussy, and that was driving and driving fast.\n\n<center>2</center>\n\n<center>Seating Arrangements</center>\n\nI took my towel to the laundry basket in my restroom\u2014I couldn't help myself\u2014before taking the elevator down from the third floor to the first. I walked through the open first floor toward the back of the house that faced the cliffside, Coastal Road, where my husband parked two of his four Porsches. For a man who was heir and co-owner of one of the biggest Engineering and Technology companies in the world, the man only drove Porches when he was at home. He kept his car collection somewhere else.\n\nOutside, the sun showed gold in a mostly blue sky, but off the coast, near the horizon, billowed a storm of gray clouds. Great. Dex would use those clouds as an excuse to drive faster than he usually did on the way to his parents' home. I frowned, then my frown deepened when I looked at the car.\n\nMy daughter, Lana, stood next to the passenger-side door in her sweats with a little backpack in her right hand, looking nothing like the twenty-year-old cover girl she was. Would she be a cover girl if it wasn't for her father's family name? Probably, but I'm sure it would have taken longer. A woman could be an eleven, but in that world, elevens were everywhere. At least she didn't have to fuck her way to the top.\n\nShe looked like me; my daughter did, only she was a little taller and more willowy, with a sharper face, longer hair, and blue eyes instead of green. To be in her place . . . .\n\n\"Why aren't you in a costume?\" I asked my daughter as I walked toward the car, and she walked toward me with a frown on her face.\n\nHer brother and father were already in their seats, waiting on us.\n\n\"I don't feel well,\" Lana said in a low tone when we stood face to face. \"And I can't wear my costume in the car.\"\n\n\"You okay?\" I asked, then I added, \"you're going to your grandparents' party this weekend. I don't care what other parties are going on in the city.\"\n\n\"Oh, I know,\" Lana said. \"I flew in, didn't I? I'm not trying to get out of it. I'm not a teenager anymore.\"\n\nI laughed as if being twenty had given her a world of experience and wisdom. Who knows, in her fast-paced life, maybe it had.\n\n\"But, you know, it's shark week,\" Lana said with her arms crossed across her stomach.\n\nI raised an eyebrow.\n\n\"I got my period,\" she said, rolling her eyes. \"I need to sit in front with daddy.\"\n\n\"Oh,\" I said, giving my daughter a sympathetic smile, but then. . . . \"Oh, no. No-no-no-no-no.\" I looked at my husband's Porsche, the four-door Panamera Turbo S E-Hybrid Executive\u2014that was his idea of a family car\u2014and I shook my head. \"We need to change cars.\"\n\n\"You look hot, Mom,\" Lana said. \"Very sexy. Is Daddy making you wear that?\"\n\nI mumbled something to her. My daughter knew too much about my sex life, but that's what happens when your twin sister is your daughter's favorite aunt. Fuck, I couldn't sit in the back with my son, Colt. Our luggage would be in the trunk. Colt would sit behind his father, who liked to sit as close to the wheel as possible. Lana would sit in my seat, and in the seat behind hers would sit the biggest fucking pumpkin Dex could find. He wouldn't carve until he got to his parents' house so that he and his mother could carve creepy, life-like faces into its skin and pulp.\n\n\"I can't sit in Colt's lap,\" I said, trying to look through the tinted windows at my son, but I was too far away to see through them.\n\n\"Oh, when you have to sit in Colt's lap, then driving in that little car is suddenly a big deal,\" Lana said. \"But when I have to sit in his lap, you and dad say, 'Oh, it's just your brother, he won't bite you.' Thanks, Mom.\"\n\nA bitchy look crossed my face, and not even my nun's habit could soften that glare.\n\n\"Sorry,\" Lana said, looking to the side. \"Colt's kind of comfortable, I guess, but I can't sit in his lap when I feel like this. You know, I've got cramps, and I feel\u2014\"\n\n\"I know what it feels like.\" I looked toward our home's roof, where sat the helicopter my daughter had flown in on.\n\n\"Dad wants to drive,\" Lana said, having followed my gaze. \"That's his thing. He's not going to call a pilot\u2014\"\n\n\"Get your father for me,\" I said, sighing. \"I need to talk to him.\"\n\nI waited as my daughter walked back to the car, got into my seat, and spoke to her father. He honked the horn. I crossed my arms under my tits. He exited the car, smiled at me over the Porsche's roof, and said, \"Just kidding, baby.\"\n\nAway from the car, we stood face to face, where I said, \"I can't sit on Colt's lap. Not in the costume.\"\n\n\"Why not?\" Dex asked.\n\n\"Look at me?\" I said, looking down. \"A stripper would wear this, not a mother. \" I lowered my voice. \"I could dry fuck a man to death in this.\"\n\n\"It's not a big deal,\" Dex said after a quick laugh. \"Make Lana sit in his lap. She'll get over it.\"\n\n\"I'm not going to make her do that with how she's feeling.\" I looked toward the helicopter. \"Call the pilot.\"\n\n\"No,\" Dex said. \"We have an agreement. When we go to my parents' home, I get to drive us there, no questions asked. It's the only time I get to drive fast.\"\n\n\"All so you can pretend that you're a racer again,\" I said. \"When I said you had to buy a family car for drives to your parents' home, I meant a family car, not a Porsche.\"\n\n\"It has four seats.\"\n\n\"Only three of which we use,\" I said, thinking of all those holidays and how something always ended up behind my seat, whether it was my husband's stuff or my daughter's things or something of Colt's; something always took up that space. \"Just this once, we'll take my car. It has room for that stupid pumpkin in the back.\"\n\n\"Val,\" Dex said, \"Val, Val, Val. Come on. . . . Just, you know, come on. . . .\"\n\nI laughed at this big, boyish jackass.\n\n\"In my car, I turn an hour and a half ride into an hour,\" he said. \"You won't even notice you're in Colt's lap. Besides, he's drunk.\"\n\n\"What?\" I asked, looking at the car, trying to see through the passenger-side door and its tinted windows all over again. \"Why is my eighteen-year-old son\u2014who's still in high school\u2014drunk.\"\n\nDex shrugged, but I knew what he was going to say before he said it, and he said what I thought he was going to say like I knew he would.\n\n\"He signed a letter of intent with my alma mater,\" Dex said, which is what I knew he would say. \"He's red-shirting his freshman year; then it's four years as the starting QB if he doesn't go pro first.\"\n\n\"That's no excuse,\" I said.\n\n\"I always wanted to be a start\u2014\"\n\n\"You were on the team.\" I balled my hand into a fist and hit my husband in the chest. \"You played.\"\n\n\"Like two downs in four years,\" Dex said. \"It's the story of my life, the same with my father's NASCAR team. I was the fourth driver for two years; thank God I'm a better businessman than I was an athlete.\"\n\n\"What the fuck are you talking about?\" I asked. \"You're a great athlete.\"\n\n\"Until I ran into better ones.\" Dex sighed. \"It's every father's dream to live vicariously through his son. You see the way my father looks at you; don't I deserve to look at my son's wife like that one day?\"\n\nI punched my husband's chest again as I said, \"What the fuck does that have to do with letting him get drunk on a Friday afternoon?\"\n\n\"With that kind of r\u00e9sum\u00e9,\" Dex said, then he started singing, \"he can have whatever he likes. . . .\"\n\n\"You're supposed to sing that that song to me,\" I said, sighing once again.\n\n\"Look, the car is packed, your kids are in it, and it's getting late . . . in the afternoon.\" My husband offered me a cheerful smile. \"Colt will probably sleep the entire trip. Let's go.\" Dex grabbed my hands. \"Come on, let's go. Let's go, baby. Do this for Daddy.\"\n\nI growled, but I let my husband pull me towards the car, mumbling, \"You can't say things like that to me, Daddy, you know how it makes me feel.\"\n\nA smile crept onto my lips. I had packed my leash, collar, cuffs, and paddle for Dex as a surprise. I mean, who didn't want to see a nun in bondage? And I'd get to call him Father tonight, instead of Daddy. I should have told him that before getting into the car. I should have told him I wouldn't let him use them on me if I had to sit on my son's lap.\n\nLooking back, I should have stood my ground, but that's life.\n\n<center>3</center>\n\n<center>The Long Road Ahead</center>\n\nI opened the passenger door as my husband jumped into the front seat. My son, lean and broad and built like an Olympic athlete, looked up at me with cherry-flavored eyes. Yeah, he sure was drunk. And he wasn't wearing a costume either. He had his thin, cotton workout shorts on and a matching shirt, the standard-issue to his school's athletes.\n\n\"Make room, Colt,\" I said. \"Your sister is upfront today.\"\n\nMy son's eyes traveled over my body\u2014thankfully, my nipples had softened, but they still made thick bumps against my silky gown. (I wasn't wearing your typical nun's outfit.)\n\n\"Oh,\" was all he said.\n\nI rolled my eyes as he stretched his legs and shifted around in the backseat. What a fucking farce, I thought, then I glanced at my daughter, who sat in my seat, leaning into the car door. Maybe I should have had more sympathy for her when she first complained about having to sit in her brother's lap. Her complaints hadn't lasted long, but still. . . . I glanced at my husband, who had his driving gloves on and was in the middle of adjusting his 18k, solid gold Ray-Ban Aviator sunglasses.\n\nWho would ever pay three grand for a pair of glasses, I thought. Twenty years I had been married to my Dex, but I was still the girl who once lived in a one-bedroom apartment with my parents, and I was the same girl who thought moving into a two-bedroom, third-floor walkup was like moving into a penthouse. I was the same girl who could hear my father humping my mother into the wall night after night. And, I was the same girl who used to sneak my boyfriend into my room\u2014and my twin sister Vanna would do the same\u2014and we'd have sex in our small beds while our parents had sex in theirs, believing that their daughters were deep asleep and still innocent.\n\nHow many times had I seen my sister getting the D? How many times had she watched me come on some guy's cock? (This wasn't the time to be thinking about that.)\n\nI looked at my son's lap as I bent over to enter the backseat. And I was still the same girl who used to have threesomes with her twin sister, where nothing was off-limits so long as we pleased the guy we were fucking.\n\nThat was a long time ago, I thought as I climbed into the car and sat down on my son's left thigh. I closed the door, having to move more to my right.\n\n\"Close your legs,\" I said as I tried to find a place to sit that wasn't directly on my son's lap.\n\n\"Get that seatbelt on,\" Dex said.\n\n\"How?\" I asked.\n\n\"Stretch it,\" Lana said.\n\nI glared at the amusement in her tone.\n\nGod, my son had hard thighs. Muscular. He had very nice thighs, harder than his father's when his father was young, and Dex had been one hell of an athlete back then.",
        "\"Mom,\" Colt said in a voice almost as deep as his father's, but his tone always had more of a caress to it than his old man's. \"You're going to have to sit back.\"\n\nI huffed out a breath, then slid back along my son's legs. My short nun's gown rode up the back of my thighs, and I had to grab the hem, lift my butt, and shimmy down into his lap while keeping my bum covered. I winced for no reason other than I was now sitting on my son's bulge wearing nothing but an ultra-thin nun's dress while he was wearing nothing but his cotton workout shorts. I turned my head to the right, turning my shoulders slightly, which also turned my butt against his groin, rubbing him. How did my daughter put up with this situation once a month?\n\n\"I know you've been drinking,\" I said, narrowing my eyes at my boy.\n\nColt had the decency to blush, and it was like looking at a teen heartthrob who had just shared a secretive smile with some lucky fangirl. I had a really good-looking son. Handsome from some angles, beautiful from others.\n\n\"Sorry,\" he said, keeping his voice low.\n\nI turned back around, grabbed the seatbelt, and started to pull it over my shoulder and toward the right, but after a minute, I let it go. There was no way Lana and Colt used that thing.\n\n\"We ready?\" Dex asked.\n\n\"Yeah, but don't crash,\" I said. \"Lana, don't let your father go over a hundred.\"\n\n\"But I like going over a hundred; it feels good,\" Lana said, then quickly added, \"It's an adrenaline rush.\"\n\nRiding in any of Dex's Porsche was an adrenaline rush with the way he drove, but I also knew what my daughter meant by \"It feels good.\" There was over six hundred horsepower in the Porsche's engine, close to seven-hundred, and those vibrations tore right through the car, up the through the seat, and quivered through our bottoms and all the yummy places down there\u2014she was damn right it felt good.\n\n\"However fast I go, I'll keep us in one piece,\" Dex said, turning the ignition over, and that soft, rumbling purr of his six-hundred-plus horsepower engine came to life. God, but I felt that power through my son's lap.\n\nOh, sweet Jesus, I thought, wishing I was upfront. At least up there, I could touch myself with my right hand as I held my skirt up with my left. No one but my husband would have known.\n\n\"Some driving music,\" my husband said, searching through his playlists, and Here I Go Again came on. \"And here we go.\"\n\nDex hit the gas, and I flew back into my son's body, and a memory hit me. A memory of my husband asking me, \"You'd date Colt if you were back in high school, right? He's like Hercules, so that would make me Zeus, wouldn't it.\"\n\nAnd the sexy bastard wouldn't go down on me until I had said, \"Yes, I'd date my son if I were back in high school and he wasn't my son.\"\n\n\"Well, he couldn't be your son,\" Dex had said. \"You'd be the same age.\"\n\nSigh.\n\n<center>* * * * *</center>\n\nStiffness.\n\nAwkwardness.\n\nHow do I describe how strange sitting in my son's lap made me feel? But why did it make me feel so strange? It's not as though I hadn't cuddled with my son before, on the couch, watching TV, thinking nothing of it, but now? But now I was in a sexy costume, wearing a thong and a shelf-bra, with the engine's vibrations tightening my thick nipples, seeming to squeeze them and push them out at the same time. And, I had been wet, so fucking wet, from wanting to feel my husband's cock inside of me before going on this drive. And I had had the anticipation of playing with myself for my husband before I had to switch seats with Lana. . . .\n\nWhy did I have to be such a pervert?\n\nBeneath me, the Porsche's rumbling pushed my son's groin into my butt. I must have looked every bit the virgin nun, afraid of any cock getting close to her. If I had been a nun, I would have been a nurse-nun because I needed cock in my life. I needed that sweet meat, long and hard, short and fat, any size really\u2014any size would do so long as the man using it knew how to work a woman's pussy.\n\nChrist, what was wrong with me? I looked at the back of my husband's seat, wishing I could smack his head every time he accelerated. Oh, but every time he tested his engine's power, I felt that rumble and that rumble made my son's lap shake beneath me.\n\nHang onto your butts; this is going to be one hard ride.\n\nI looked away from my husband's seat and down at my thighs, where the hem of my gown had come up enough to show my stocking's thick, lacy welts. Another eighth of an inch, and my thighs would come into view, along with my suspenders. I had looked at myself in my mirror before putting on my gown, getting excited when I saw the black fabric against my smooth skin and the way my garter belt's suspenders framed the triangle of my blonde-haired muffin. Oh, and the cross upon my mound, that playful patch of pubic hair was so naughty I couldn't help but get wet. How fun it had been to get my stylist to wax that shape into my mound so I could surprise my husband the next morning.\n\nNo wonder I was so horny; we didn't have sex last night. He was up with Colt, probably drinking and celebrating his future college career, while I was upstairs, playing with myself, dreaming of how hot my new hairdo looked and how hard the fun-loving gesture would make my husband's prick before he put it inside of me.\n\nAnd it was all for not because I didn't get my fucking quickie.\n\nThis couldn't go on. I sat on my son's lap, leaning forward, with my thighs together and my knees bent over his knees, my little feet dangling as though I were sitting on my father's lap and not my son's. My son sat rigid and stiff, breathing as though he were faking sleep with measured pulls of air meant to barely move his body. What was wrong with me?\n\nI turned my head and body to the right, which shifted my butt over my son's bulge once again. A shiver ran through me, tickling my skin against my silk stockings.\n\n\"Are you comfortable?\" I asked my son.\n\nHe turned his face to the side and shrugged, lifting both brows and pursing his lips.\n\n\"Well, get comfortable,\" I said, \"because I'm not comfortable either.\"\n\n\"All right,\" Colt said. \"I'd be comfortable if you weren't so stiff.\"\n\nI rolled my eyes, saying, \"You're the stiff one.\"\n\nA silence hung between us for a second that seemed to stretch for an eternity, but it was only a second. Then my cheeks reddened, and Colt laughed, turned his head to the left, and looked out the window as he slid his butt down the seat and spread his legs a little. I had to place my hands on his thighs to keep my balance as I went up and then down, like riding a small ocean wave. Colt put his left arm along the windowsill while stretching out his right and resting his elbow on the center console.\n\nI waited as he fidgeted, his movement pushing me up and down and side to side as he wiggled his butt and tried to find a comfortable sitting position. Heat warmed my cheeks and forehead. I could feel the soft bulge in his shorts against my butt, and I had to squeeze my thighs together as a tingling sensation licked at my butt crack and tickled my asshole.\n\nA shaky breath left my lungs before I asked, \"Comfortable yet?\"\n\n\"Yeah,\" Colt said with one last movement that pushed his bulge against my butt again. I lifted my eyes, looking through the roof at the sky as if to say: \"Really, God?\"\n\nWhen my son settled down, I took a silent breath and eased myself back against his hard, broad body. He stiffened, and I leaned back further. Fuck it, I thought. The only way to get comfortable is to get comfortable.\n\n\"Relax,\" I whispered, hoping my son could hear me over Dex's driving music and the purr of the engine. \"I'm not a real nun.\"\n\nColt laughed, but he stayed stiff, so I reached down with both of my hands and squeezed the outsides of his thighs.\n\n\"Mom,\" he whispered, shifting again and again, pushing his meaty bulge against my silk-covered, thong-protected butt.\n\nI laughed, and then he laughed, and as we laughed, he relaxed, melting into the seat beneath him. I smiled, feeling like a good mother, and I relaxed into him, letting my weight settle atop him, butt-to-groin, ass-to-bulge, mother-to-son in a friendly, family way that was no longer awkward.\n\nWas it awkward for my daughter when she sat on Colt? It must have been; she had complained enough about it in the beginning\u2014poor girl. Even relaxed, I felt the power of the engine shooting through my son and into my body\u2014into the one part of my body that enjoyed the rumble the most. Did Lana enjoy that sensation? Yes, she did; she had said as much.\n\nWhat's the big deal? I thought.\n\nI grew up close to my twin. Had Vanna been a man and my fraternal twin, would it have been any different? I had to suppress a laugh\u2014no threesomes for us. I smiled. Vanna and I had talked about that once, or twice, or a dozen times when we were younger: What if one of us had been a man?\n\nWe had shared a bed before and the pullout couch, and it wasn't as if we hadn't cuddled back then. When it came to who slept where, Vanna always spooned me, and the first time Dex introduced us to a strap-on . . . well, I had been the one to put my face down and ass up first.\n\nI took a deep breath as my insides warmed all over again, warmed down in that secret place between my thighs where memories of my twin sister lay. I clenched my ass cheeks, trying to get rid of the feeling, but it didn't help.\n\nIn the middle of my memories, my son shifted beneath me again, making me shudder as his bulge pressed into the crack of my ass. What was Colt feeling?\n\nWould he tell me if I asked\u2014no, why would I ask? Just because my nipples had turned into a pair of thick diamond cutters didn't mean I wanted to ask him those kinds of questions. Just because Vanna and I would talk about what we did with each other to please Dex, and a couple of men before him, didn't mean I wanted to know what my son thought of his mother sitting in his lap. I had a twin, and that boundary-crossing activity was a twin thing. It was natural.\n\nBut what was Colt feeling?\n\nStop it, Val, I told myself.\n\nOh, god, I was hot between my legs. If my gown weren't so tight, I'd fan my top over my breasts. I rubbed my thighs together; I couldn't help myself. The movement pushed me into my son when I shifted them from side to side, and then I heard my son's breath catch.\n\nSorry,  I thought.\n\nShould I say something to him? No, that might embarrass him. I needed to stop thinking about sex, but once I got started. . . . My mind was a terrible thing.\n\nWhat could I think about instead of sex? I faced forward, looking at the top of my husband's head. I couldn't think about him. Thinking about Dex made me wet, and getting wet made me want to fuck, and wanting to fuck made me want to cum until I was gushing rivers of pussy juice and making a mess on my husband's tasty dick and mouthwatering balls.\n\nStop it, Val, I thought as my breathing picked up speed.\n\nFuck; I needed to touch myself.\n\nThen the car swayed, its momentum moving into a turn, pushing me\u2014and Colt\u2014in the opposite direction of the car's motions. I moved over my son's lap, one cheek sliding over the tube of sausage that topped his bulge, then the other cheek as the car shifted directions again. My son's breath caught when I settled back into him, pushing my ass harder against his manly bits than I should have.\n\nNo, no, no, this was bad, but it had felt so good. I loved friction against my ass. I loved the spreading of my cheeks as I tried to fight the momentum, and I loved the tingling in my crack and asshole and the buzz running across my perineum and up into my . . . into my . . . oh, god, into my pussy.\n\nThis was circumstance, no more. \n\nCircumstance was making my cunny creamy. Circumstance was making a mess in my lacy panties, even with the liner. Why had I bothered with the liner? Once I got wet, nothing could stop the spreading of my juices.\n\nOh, no, how could I hide getting wet from my son?\n\nI couldn't; I needed to think about something else . . . anything else, but my mind wasn't letting me. Sex had invaded my consciousness, embedding its naughty spirit deep into the gray matter of my brain. Maybe I could hold off until the halfway marker of our journey, a little '50s-style gas station where Dex would make his pit stop and pretend a NASCAR team was working on his car while he chatted with the clerk about what a lovely day it was before making his own pit stop. If I could hold until then, then I could run to the bathroom and ask God for forgiveness while I rubbed the little pink prayer bead cresting my pussy lips.\n\nDamn it; I shouldn't have thought of masturbating. Think, think, think\u2014think of anything but sex, and the sway of the car, and your son's hard body against yours as it trembled to the purr of the engine. Don't think of how broad he is, nor how small he makes you feel, nor that you're sitting on his lap with about two millimeters of cotton and silk between your pussy and a man's cock, and because of that, your panties are now soaking wet.\n\nOh, god, I closed my eyes to think, but the momentum of the car throwing my body around as my husband switched lanes and accelerated past the other cars made me think of one thing and one thing only: The last time I had sat on Dex's lap in the backseat of a paint-chipped Honda while my twin sat in the lap of the guy she had been dating at the time.\n\nWe were with my friends, driving home from the beach in a car that probably cost less than Dex's watch, but so what? His money scared me as much as it thrilled me. In that old Honda, our friends sat in front, the boyfriend driving, his skinny, hippie girlfriend in the passenger seat. I sat behind the driver, like now, and my twin sat across from me. By the end of the day, with the sun setting, we wore only our shirts over our tiny, string bikinis while we sat in the laps of the men who had been our dates.\n\nI squeezed my thighs together, thinking of Dex, and my son uttered a soft, breathy sound as I pressed my bum into his lap.\n\nWe had flirted with our dates, laughed, and wiggled around their laps until our shirts rode our rumps upward and ended bunched around our waists. Dex had put his hands on my hips, his thumbs pushing through the underside of my waistband and pressing into my back with his fingers curled around my front. It was the first time I realized how big his hands were. Vanna's date had done the same, and as we drove, the laughter slowly came to an end as the guys moved us back and forth across their laps, making us slippery between our lips as their cocks hardened beneath us.\n\nI closed my eyes, remembering, not aware that I was moving my hips back and forth as I pictured my husband pulling me against his cock, pushing me away, then pulling me back. Was I aware? I don't know, but I couldn't help myself. Vanna had fucked her boyfriend right next to us. And now, my son was right there, beneath me, big and bulging and all man, and here I was, dripping wet and unable to stop my pussy from controlling my mind.\n\nGod, god, god, what was I thinking?\n\nBut I kept moving. My son wouldn't feel it. He wouldn't know what I was doing. He wouldn't know that I was parting my thighs and hoping to feel his rubbery trunk against the soft curve of my clam, through my dress that was riding up my butt, exposing the tops of my stockings, my garter belt's suspenders, and my thighs. He wouldn't know about the heat spreading through my cunny, dampening my pink insides, and making my pussy lips and yummy clit tingle. He wouldn't know how hard my nipples were because of this, nor would he see the goosebumps rising across my limbs . . . he wouldn't know how good grinding my mommy butt against his crotch felt\u2014no, he wouldn't. And if I touched myself, he wouldn't know I had because I'd be so careful.\n\nAnd if he did notice, he wouldn't say anything, would he? His mother wouldn't grind her pussy on his soft cock, which seemed to be thickening beneath me, would she? He'd convince himself it was his imagination, no more, that's what he'd do and I could just enjoy the ride my son was giving me. . . .\n\nMy thoughts vanished as I felt my son's right hand on my hip, gripping me like his father had when I had been a silly, sex-obsessed, bikini-wearing, nineteen-year-old girl sitting in his lap. Jesus, but my son's hand was a little bit bigger than his father's. But I wasn't a teenager anymore\u2014no, I was a sex-obsessed forty-year-young MILF who hadn't had sex in a day.\n\nI should have sat still. I shouldn't have moved. I should have sat on my son's soft cock and . . . wait, it didn't feel so soft anymore, not through the veil of cloth protecting my backside. Colt wasn't hard, but neither was he soft. There was a swelling going on back there, a thickening like a fire hose filling with water and getting ready to stretch out to its full size.\n\nA chill ran through my body. I shivered, looking toward my daughter, who lay curled against the passenger-side door. I looked forward, unable to see what my husband was doing, but I had been in front enough during our monthly trips to know he had his hands on the wheel, his foot moving from gas to brake, and his eyes fixated on the road. In his head, he was driving in that great NASCAR oval, passing cars on his way to being number one.\n\nI took a deep breath; then, I placed my right hand over my son's hand. Would he move it? No, he didn't move it. Instead, he squeezed my side, sending a buzz through my body that had me shifting my shoulders. Okay, I  would stay perfectly still . . . and then my husband sped up, moving to the left to pass a car, then back into the right-hand lane. That was all it took for me to shift to the right, then back to the left, my butt grinding against my son's growing cock, and on my way back to the right, I felt him push against me. I gasped, but between the music and engine's purr, no one upfront seemed to hear a thing.\n\nIt wasn't my imagination. I felt my son push against me. I squeezed his hand, and he pushed against me again, the growing thickness below my nearly bare ass forcing me to clench my cheeks. His cock lay right between my firm buns, and the pleasure that shimmied through my crack shook my body. I bit my lower lip to keep from sighing, then I looked upward, still holding onto my lower lip as I looked to the left and right for a way out. There was no way out, and even if there was, my body moved on its own, pushing my butt back into my son's half-swollen shaft hard enough to let him know what I was doing was no accident.\n\nThis was bad, and it got worse as his left hand went to my left side, taking hold of me in his strong grip. I dropped my left hand to his hand, then slid my hands down to his wrists, where I squeezed him hard. Colt, the little bastard, moved me back and forth, then around, shifting me across his lap as his cock turned to steel beneath my butt and the little triangle of motherly love between my thighs.\n\nOh, god, my muff had grown so hot.\n\nColt spread his legs, and I settled mine between his with my feet touching the floor. I leaned forward a little, pushing my ass back against his dick, feeling the length of his hardness pressing up against me, from the bottom of my cheeks to the upward curve of my pussy.\n\nI closed my eyes and squeezed my son's hands again. Maybe I shouldn't have done that. Maybe I should have let go of my boy's wrists because the moment I squeezed him, he pushed his hips upward, forcing the length of his hard-on against the crevice between my thighs and fucking me forward a couple of inches.\n\nJesus, I moaned on the inside, thanking God that my son's cock wasn't pointed straight up with the head digging into the dripping wet pussy meat between my legs. Eighteen years ago, my son entered this world through that sexy little hole, and now he wanted back in. . . . ",
        "I'm a naughty girl, I thought, but I as the thought ran through my mind, I turned my butt in a circle, grinding on my son's hard-on once again. Oh, yeah, I'm a naughty fuck, all right. So naughty. So nasty. So fucking horny.\n\n\n\nIf we never talked about this moment to each other, it would be okay, wouldn't it?\n\nI hung my head, still biting my lip, still moaning on the inside as my core flooded with heat and a throbbing sensation entered my pussy, dancing around my lips and clit and releasing my juices into my panties. Oh, god, I had ruined my panties, but I always packed more panties than I needed no matter where I went. I had to. I was a pussy-juice dripping machine, always had been. . . . \n\nI don't know for how long I sat grinding my butt on my son's lap while he pushed his cock against me, but his hands began to move while I did my best not to cry out in pleasure. First, they moved around to my front, massaging me through my silky gown. I drew in shaky breaths then he moved his hands up my sides until his fingers grazed the sides of my breasts.\n\nI had my hands onto my knees by then, but I closed my arms over his hands. I thought I heard him laugh. He humped his cock upwards, then he moved his hands low to my hips, then forward across the skirt of my nun's gown and over my bare thighs. He stopped to trace the suspenders connecting my garter belt to my stockings; then he moved back to my thighs, then my waist, then up my front. I put my hands over his hands, but he kept going. Pleasure raced through me. My nipples tightened, and as his thumbs and forefingers touched the under-curve of my breasts, he slid his hands downward, not stopping until his fingers rested on the welts of my stockings.\n\nMy son ran his fingers over the lace, then moved his digits up my suspenders, pulling them away from my skin and letting them snap back into place. The music covered the sound, not that my son lifted them high . . . not in the way his father liked to snap my G-strings.\n\nThen his hands went up again, along my sides until they reached my ribs. My son paused, squeezed, and moved forward and inward below my breasts. He passed my shelf bra quickly, pausing when his fingers touched my exposed skin above the support of my bra. Sighing\u2014wanting more\u2014I waited as my son held the undersides of my tits in the crescents of flesh between this thumbs and forefingers. I watched his hands, unable to look away, my hips turning on their own, pushing my squishy pussy against his hard shaft while spreading my legs so I could feel as much of his pole against my lips as possible. I wanted to lift my skirt up to my hips, but I kept my hands on my knees, careful not to ruin my stockings by digging my fingers into them whenever my clitty tingled with pleasure.\n\nMove your hands, Colt, I thought. Move your fucking hands, you bad boy. Move them for Mommy, come on, move them for Mommy.\n\nHis fingers opened and closed against me, the topsides rubbing the bottom of my breasts, making my nipples sing as they tightened further.\n\nMove those hands, Colt. Move them for Mommy. Come on, move them, baby. Move them.\n\nMy son's thumbs moved wave-like against my breasts. A tremor ran through me, rushing to my clit, making that little bud of pleasure tingle until I felt like I was going to squirt myself. I lifted my hands and placed my palms against the back of his hands, then I added a subtle amount of pressure, trying to force his palms over my breasts.\n\nCome on, Colt, move those hands.\n\nMy son's hands lowered. I nearly screamed, then, without warning, up they went, pushing my silk gown head of them as they closed over my big breasts.\n\n\"Ahhhhh,\" I sighed, wincing, but the music covered my relieved sound.\n\nColt's big hands held my round breasts perfectly in his palms, his fingers curving around their inner swells. With a hesitant, almost apologetic touch, my son squeezed my tits\u2014uncovered by my shelf bra, practically skin to skin\u2014pushing them inward and testing their perkiness.\n\nI leaned back against my son's chest, looking forward again, but my sleeping daughter and my speed-demon husband couldn't see us. Colt's chest rose and fell against my back. My stud of a son was breathing hard as he held Mommy's tits\u2014it made my pussy cream. I squeezed his hands. He squeezed my tits harder, then he pumped his rock-hard rod upward, bouncing me on his lap for half-a-dozen mommy-pleasing strokes.\n\nI should have never fucked my sister, I thought as my face broke into a helpless mask of pleasure and shame. I wanted to cry, but this felt so good. I should have never masturbated while listening to my dad pound my mother's pussy. I was such a bad girl.  I shouldn't like this so much. I turned my hips in a sensual stripper's grind, giving my son's steel bar of a hard-on some love. I shouldn't be such a bad mommy.\n\n\n\nWhat did my twin use to say? Oh, right: What's a little incest between family?\n\nMy son's palms pulled away from my tits, but his fingertips stayed connected, closing over my breasts until his thumbs and fingers caught the long, thick nipples he used to suck on for nourishment.\n\nOh, god, I thought as the silky friction rubbed my aching tit-buds.\n\nHis fingers came together, adding pressure to my nipples as my silk gown made my titties tingle. A tremor ran through me. A dirty, mini orgasm that squirted cherry-flavored cum into my soaked panties spread through my lower body. My son rolled my nipples between his naughty fingers. I shuddered as pleasure rolled through my body, making me hump my hips back and forth over his stiff pole.\n\nForgive me, Father, for I have sinned. . . . \n\nMy son pulled my nipples outward.\n\nOh, yeah, I moaned in silence as an electric surge of pain that hurt so good stretched my nipples outward.\n\nMy son gave my nipples a soft twist then he pulled them again. I clenched my eyes as I rocked my butt across my son's cock. Its length and hardness tickled me between my legs, causing heat to bloom beneath my mound. God, god, god, this shouldn't have felt so good.\n\nColt gave my breasts one last squeeze before dropping his hands down my stomach again. I let go of his hands and cupped my breasts, where I rubbed my palms over my nipples in tight circles, bending them, stretching them, wishing I had someone to suck them.\n\nI looked at the back of my husband's headrest, thinking, If I could let my twin sister suck my nipples for him, then he could suck my nipples while our son\u2014oh, god, no, what was I thinking?\n\nA fluttering of sparks danced through my stomach as my son tickled my belly button. I licked my lips as his hands went lover, leaving a trail of goosebumps behind them. He reached my waist, then my thighs, then he moved over my short skirt, back to my stockings. He played with the welts and suspenders again, then moved upward, his thumbs catching on the hem of my gown and pushing it up and up and up until it lay bunched against my waist. I could see my small, lacy panties as I looked between my thighs. What was I thinking? Why had I worn those panties?\n\nColt's hands went down my legs, sinking inward, touching the fleshy part of my inner thighs as he pushed his fingers down to my knees. My breathing quickened as he pulled his hands back up my legs, pulling them apart, touching me where I was damp and hot. \n\nOh, god, I thought. He's going to do it. My son is going to . . . uh, mmm, yeahhhhh!\n\n\n\nMy son's fingertips had pushed deep between my legs, touching me where the lacy edges of my thong panties met the small depression between my inner thighs and outer labia. He pressed on the soft flesh of my outer labia, running his fingers up and down, tracing the oval shape of my outer lips. I wanted to scream. I wanted to cry. I should have wanted it to end!\n\nInstead, I bit my lip as my son pushed his fingers inward, pressing my outer lips together over my inner folds and pinching my clit between the upper edges of my soaking wet pussy lips.\n\n\"Uh,\" I squeaked in my throat, like a little girlish mouse afraid of being caught with her hand in the cookie jar.\n\nMy son pulled his fingers away, pulling my lips outward, stretching them away from the stickiness dripping out of me. He pushed his fingers in, then pulled out, squeezing my pussy lips, then puffing them out against my panties, then pulling them apart. This was too much. He was hugging my clit with my upper folds in a rhythm that had me rocking my butt against his cock like a whore in heat.\n\nSqueeze-puff-pull.\n\nOh my god.\n\n\n\nSqueeze-puff-pull. \n\nOh my fucking god.\n\nSqueeze-puff-pull.\n\nMmm, baby, mmm, you bad boy.\n\nSqueeze-puff-pull.\n\nOh, you naughty bastard. You naughty fucking\u2014mmm\u2014bastard.\n\nSqueeze-puff-pull . . . Oh, yeah, Colt, I'm almost there. My clitty throbbed, shooting bolts of ecstasy so deep into my body that my asshole clenched, and my nipples tightened. They ached so bad I had to pinch and pull them as I rocked my pussy harder against my son's naughty cock.\n\nOh yeah, oh yeah, oh yeah, oh\u2014\n\n\"Pit stop!\" Dex said over his music.\n\n\"Oh, no,\" I said aloud as Colt pulled his fingers away from my pussy.\n\nYou have gotta be fucking kidding me!\n\n\n\nDex guided the Porsche to the right, slowing down as we curved away from the highway toward the old '50s -style gas station that marked the halfway point of the trip.\n\nAs we pulled into the station, stopping at the full-service pump, I looked down at myself, shaking my head. Here I was, dressed as a nun, sitting on my son's thick cock, which I had drenched in my pussy juice and . . . and . . . and I couldn't believe it. But another thought came to me as I sat there in disbelief, a dirty thought: How many priests and nuns had done this for real? How many priests had pulled their sexy nuns into a confessional and asked them about their sins, all the while pulling their gowns up their thighs so they could get a piece of that religious pussy? God, if I was a nun, you couldn't stop me from crying out, \"Father, Father, oh, fuck me, Father,\" every night of the week.\n\nFuck me silly\u2014I had to put an end to this.\n\n<center>4</center>\n\n<center>Pit Stop</center>\n\n\"Does anybody want anything?\" Dex asked as my daughter said, \"I need to use the restroom,\" and exited the car with her little backpack in hand.\n\n\"A large bottle of water,\" my son said.\n\nI looked at my daughter's empty seat. I watched my husband throw open his door and slide his seat backward until he could exit the car comfortably. I felt my son's rock-hard cock throbbing beneath me, and a lightning bolt zigzagged through my mind.\n\n\"I want one of those small blankets,\" I said, trying to control my breathing.\n\n\"A blanket?\" Dex asked, turning his head as far as he could. \"I can turn on the heater.\"\n\nI pushed my door open and exited the car, my legs trembling when I tried to stand up straight. Dex followed my lead, leaving his keys in the ignition as always. I closed my door and stepped up to my husband, pushing my tits against his polo-shirt-covered chest. The friction made my nipples tingle.\n\n\"I'm practically naked,\" I said, looking into my husband's eyes and grabbing onto his shoulders. \"I'm sitting in our son's lap with nothing but my thong protecting me from his lap.\" I had lost control. \"You got me so wet upstairs before we left\"\u2014did I see a glint of humor in my husband's eyes\u2014\"and I can feel the power in that car right between my legs.\" Why was I saying this to my husband? \"You know how horny I get. Get me a damn blanket.\"\n\n\"Okay,\" Dex said, smiling. \"One thin, piece-of-shit gas station blanket coming up.\"\n\n\"Thank you.\"\n\nAs my husband headed inside with visions of his pit crew working on his Porsche in his head, I looked through the car at my daughter's empty seat.\n\n\"Top her off and clean off the windows,\" my husband called to the full-service attendant as he headed into the station. \"Quickly though, I got to get back on the road; there's a big tip in it for you.\"\n\nI ignored the odd looks my nun's habit got me as I walked around the car\u2014Halloween was a day away\u2014and opened the passenger door. \"We're sitting in front,\" I said, my eyes focusing on the tent lifting my son's cotton shorts, and what a fucking tent it was. A little bit bigger than his father . . . in every way.\n\n\"Something wrong?\" Colt asked.\n\nI looked up from his shorts, where his knob pressed against the cotton. Was he wearing his boxer briefs? I didn't think he was. I met my son's eyes, and I could see he knew where I was looking. Is something wrong? Was he fucking with me?\n\n\"I want more legroom,\" I said. \"Lana can sit in the back.\" I look at my son's cock again, not saying anything about his hard-on, and when I look back into his eyes, knowing that he knew where I had been looking, a tremor ran through my shoulders. \"Your sister can't sit in your lap with . . . with how she's feeling.\"\n\n\"She won't mind,\" Colt said.\n\nI glared at my son.\n\n\"Okay,\" Colt said, and maybe I saw a smile crept onto his lips. It was hard to say. My son always had this happy-go-lucky air about him and a wicked sense of humor.\n\nHe didn't get out of the car. Instead, he lifted his feet, thrust them between the two front seats, and pulled himself over the center console with an athlete's ease and sense of body control. He settled in the passenger seat\u2014which Lana had already pushed as far back as it could go\u2014and said, \"Climb aboard, Mom.\"\n\nI looked over the Porsche's roof, giving the attendant a quick look as he cleaned the rear windshield, then I turned forward, lowered my butt, which caused my gown's hem to rise, and I slid into the car\u2014right atop my son's cock with my skirt around the middle of my ass.\n\n\"Uhhh,\" I moaned as his knob pressed between my cheeks, tickling my asshole before slipping forward and grinding into the lace of my panties right where my pussyhole lay. I had needed to release that moan.\n\n\"Mmm,\" Colt moan-grunted, keeping his lips closed, the sound coming from his throat. His hands found my hips as I pulled the door shut.\n\n\"Just need to get comfortable,\" I said, moving my panty-clad pussy against my son's rigid cock.\n\n\"Sounds\u2014mmm\u2014good,\" Colt whispered.\n\nWhat was I doing? I was supposed to be putting an end to this.\n\n\"When your\u2014mmm\u2014father gets back,\" I huffed, \"we'll have to have to have\u2014oh\u2014found our spots.\"\n\n\"I know,\" Colt moaned. \"I know, Mom, trust me\u2014I, uh\u2014I know.\" She thrust hard against me. \"I'm just looking for your spot right now.\"\n\nMy cheeks reddened.\n\nTogether, my son and I moved my little butt and wet cunny over his glans, making sure to keep the head of his prick pressed against the warm folds of my maternal pillow. The attendant came around the front and started cleaning the windshield. I didn't care, not even when he looked in and saw my nun's gown around my waist, exposing my stockings and garter belt's suspenders, and the black, lacy silk cupping the triangle of my mound. But, after half a minute of staring between my legs, I dipped my head low and glared at him, and he started cleaning the windshield once again.\n\n\"Colt, we have to stop,\" I said when I felt his fingers slip below the hem of my gown.\n\n\"Soon, Mom,\" Colt said, breathing into my neck through my nun's veil.\n\nI shivered, then my eyes widened as my son pushed my panties down my thighs. Lucky for him, I had put them on over my suspenders because I was in a hurry to leave this afternoon. I tried to spread my legs open, whispering, \"No, Colt, no,\" but he let me sink between his thighs, and he used his legs to close my legs. My cheeks burned red as my panties passed my knees and fell to my feet\u2014I hadn't put up much of a fight against my son's demanding strength. With a helpless sigh, I kicked my panties off my feet, then used my heels to push them under our seat.\n\nI had no panties on . . . my son had his hands on my waist, touching my garter belt and my hot skin, and he was pulling and pushing me across his cotton-covered cock, and I wasn't stopping him.\n\n\"You're not wearing your boxers, are you?\" I panted as a buzzing sensation warmed my cunny and clitty and suffused my core with the growing heat of orgasmic ecstasy.\n\n\"No,\" Colt sighed.\n\n\"You can't\u2014mmm\u2014drink before these trips again,\" I said, wondering what Lana would have done if she had known her brother wasn't wearing his boxers while she sat on his lap.\n\n\"Okay,\" was all my pussy-pleasing son said.\n\nI shook my head, first left, then right, and that's when I saw Dex and Lana standing outside the gas station's front doors. Dex had my blanket in his hands, tearing the plastic packaging open and pulling out the cheap cloth before he tossed the plastic into a red-painted garbage can.\n\n\"Stop, Colt, stop,\" I whimpered just as his cotton-covered knob split my pussy lips apart, allowing his spongy tip to rub the entrance of my pink hole. \"Your father\"\u2014oh, it felt so good\u2014\"and sister are coming.\"\n\nColt grunted, but he stopped using me as his personal knob polisher. Watching my husband and daughter, I fixed my nun's gown, pulling it under my ass. Seeing my daughter coming toward us, I lowered the window a couple of inches and said, \"You're in back now.\"\n\nLana gave me a surprised look, but then she walked around the car, opened the rear door, and got in. She closed the door, leaned against it, and closed her eyes; poor girl but lucky me.\n\nDex opened his door, saying, \"Here you go, Mother Theresa,\" as he handed the blanket to me and got into the car. \"And here's your water, Colt; don't spill it.\"\n\nColt put the water in the center console's cupholder, and it was big enough to cause some viewing problems if my husband looked down at our laps.\n\nBut . . . my husband didn't look in my direction until he finished moving his seat forward\u2014he didn't say anything about Colt and me having moved upfront\u2014and he only looked in our direction to check the angle of his side-view mirror.\n\nI unfolded the blanket and placed it over my body from my stomach down, and Dex never questioned how this would make me feel less naked in my son's lap. Instead, my husband had put the car into drive, keeping his foot on the break as he checked the mirrors and planned his path back to the highway through his windshield.\n\n\"And here we go,\" Dex said, hitting the gas and taking off as fast as safely possible.\n\n\"Dex,\" I said, feeling my son's cock pressing into my naked butt, \"those storm clouds are getting closer, drive fast, but don't kill us.\"\n\n\"Can I cut out another ten minutes?\" Dex asked himself. After a second, my husband pulled his right hand from the steering wheel and gave me the thumbs-up signal, never once taking his eyes off the road. . . .\n\n<center>5</center>\n\n<center>An Early Halloween Treat</center>\n\nOh, that engine made my pussy purr over my son's cock. Cotton-covered or not, I felt that head digging into the bare lips of my twat. Thank God for my son's shorts. I looked down at my nun's habit\u2014thank God indeed.\n\nMy son had started moving his hands the moment I had covered us with the blanket. I didn't know what he intended, not with his father right next to us, but his father had his eyes on the road, hidden behind his sunglasses, and they only faced forward.\n\nColt, I thought when his fingers slid to the sides of my thighs and began edging my gown up my body, knock it off.\n\nI wasn't telepathic, and if he was, he wasn't listening. I tried to stay still as my hem crawled over my skin, but when my hem reached my butt, my son gave it a hard tug. He didn't move much, but he didn't have to, mostly using his right hand that was hidden from his father's inattentive gaze.\n\nI dug my right elbow into my son's ribs, but he only tugged harder while slipping his left hand beneath my hem. My son waited for my husband to switch to the left lane again, then he gave my hem another hard tug, baring my ass and pussy once again.",
        "God, I thought as his cock pressed harder against me. Fine, grind me on your dick, Colt; I won't fight you.\n\nBut my fucking son had other plans. \n\nHis hands left me, and I felt him try to push down his shorts a little at a time. I shook my head and pulled the blanket further up my body as if that could protect me. Colt gave his shorts a shove, but he couldn't get them down.\n\nAgain, my husband switched to the left lane so he could pass a car on the right, and as he did, Colt humped his hips upward, bouncing me on his lap as he pushed his shorts down his thighs. By the time his father looked left, I had sat back down on my son's bare cock. His swollen meat lay horizontally between us like a balance beam made of iron that my pussy was now straddling.\n\nOh my god, I thought, feeling the thickness of that pole pushing upwards against my muffin folds. This wasn't happening\u2014but it was, and my pussy was kissing the topside of my son's cock and leaving it soaked. Looking down, I saw our blanket dissolve into nothing, and the image of my son's knob sitting between my thighs as his shaft pressed into my slutty crevice filled my mind with pornographic glee.\n\nI shook my head again, then looked around as the world seemed to brighten. I felt . . . funny, lightheaded, like I was floating. Was I going to faint? I had never fainted before. I had never\u2014\n\nOh, oh\u2014oh, no!\n\nColt had slid me forward and his ass back as far as it could go. His knob touched my backdoor, then slid forward into the bottom of my pussy lips. What was happening? This couldn't be happening. My pussy throbbed, my clitty tingled, and my nipples ached. Oh boy, oh fucking boy, my son was not about to fuck me. No way. No fucking way.\n\nWhy not; you've fucked your sister, I thought. And she's fucked you to please your husband and each other.\n\nI pushed myself down on Colt's lap hard. I wouldn't let him do this. Even though his glans against my lips made my cunny hum and my juices run. A sexual heat ran through me, warming my core. I slid backward, pressing my bare ass against my son's waist and getting his mushroom tip back between my thighs. With my right hand, I reached down and squeezed the outside of his thigh, then I slid my hand between my legs, moving the blanket as little as possible. I took a deep breath, then I reached between us and grabbed my son's knob, giving it a hard squeeze.\n\nColt sighed and squirted a messy wad of precum into my palm.\n\nI looked at his father, who had his eyes on the road as our car flew down the highway. The faster my husband drove, the more I felt the engine's power surging through my son and into my pussy, making me tingle all over. What would his cock feel like with that power reverberating through him?\n\nNo, don't think about that! But it was too late. Like every sexual adventure I had ever been on, by the time I came to my senses, it was already too late, and I wasn't even close to regaining my senses.\n\nI squeezed my son's knob again, then ran my cum-slick thumb over the head of his cock. He shook beneath me. His big hands found my waist, and he grabbed onto me, pushing me forward and pulling me back, using slow movements as I tried to keep my upper body still while my pussy played Slip 'N Slide on my son's juicy dick.\n\nYou're going to do this, I thought, or my pussy thought for me, I didn't know. If men could think with their little heads, then I could think with my twat. You've got to, just this once, and you'll never talk about it. Never ever. Never ever ever.\n\nI stretched my left hand from under the blanket, careful not to reveal too much, and I turned the music up a little bit more. Dex said nothing, staying focused on the road. I pulled my hand back, reached down, and squeezed my son's right thigh, then I turned to my left and looked into the backseat, lifting my ass as I did. My son's cock sprang up as much as it could, finding the bottom of my slit as if guided by God.\n\n\"You feeling okay, Lana?\" I said, trying to keep the tremors of pleasure from my voice.\n\nLana lay still against the door, sleeping; I hadn't spoken that loud to her.\n\nAs I went to sit back down, I felt the head of my son's cock between my pussy folds. He had his fist around his shaft, holding his magic wand straight up. With his eyes on the road, my husband never noticed how I lifted my body higher than I needed to or how I slid my pussy onto my son's knob then sank down upon his dick. My husband, Colt's father, didn't see me bite my lip or look at him with an, I'm so sorry expression, nor did he see my eyes widen as I slowly lowered myself down the meatiest cock shaft I had ever felt in my life.\n\n\"Uh,\" I moaned, unable to stop myself, but I held most of the emotion back within my chest, then I clenched my teeth as I slid down my son's hard pole.\n\nOh, oh, oh, I moaned within my head as that wonderful, almost painful stretch spread my pussy lips wide. Even with my thighs spread beneath the blanket, getting that cock up my cunny tunnel was a tight fit. The tingling in my pussy spread outward, from my lips to my clit to my asshole to my stomach and down my thighs, unrelenting in the pleasure it brought me. My face burned hot, and I looked at myself in the side view mirror, seeing the pink flush in my cheeks and nose\u2014I had the expression of a woman taking a cock for the first time.\n\nWhen I finally sat my naked ass against my son's lap, a low groan left my lungs, but my husband never turned his head\u2014he was in the middle of passing a car.\n\nGod, I thought, I can feel my baby boy in my guts.\n\nJust a little bigger than his father? Maybe, but that extra bit of thickness and half-a-head more of cock was big enough to make me feel like a virgin again. Thank God I was wet. Thank God I was so juicy down there. Thank God my cunny had creamed itself for the last forty minutes, turning me into a gushing well of ready-to-be-fucked pussyhole.\n\nGod, I'm a slut, I thought, but I wasn't a slut for just anyone. I was a slut for my husband. I loved being a slut for Dex, and now I was a slut for my son and his big, juicy dick. I want to suck it. I hung my head, looking down through the blanket, trying to picture that big mean dick inside of my poor little pussy, bullying my lips open right before it rode me like an animal all night long.\n\nMy son flexed his cock inside of me.\n\nMy nipples tightened\u2014Jesus, that swelling of his fuck-trunk had sent a spasm of ecstasy through me that left my toes shaking in my tennis shoes. I wanted to turn around, lift my legs, and put those shoes on either side of my son's head as he split me in half.\n\nDo it, baby, just tear my pussy up, I thought, but we couldn't fuck like that in the car. Even my speed-obsessed husband would notice that kind of fucking.\n\nColt swelled his cock again. I moaned in silence. My boy gripped my waist with his left hand, pushed his right under my right ass cheek, laying his little finger in my crack, and he gave my bun a hot squeeze, then he moved me on his cock.\n\nOh, fuck!\n\nHe moved me slowly, slightly, but move me on his dick he did, swelling his cock as he used my pussy as his own personal fuck-slot. He turned his hips, rubbing his spongy, yet oh-so-firm, head against my soft insides, making me feel his dick up there\u2014letting me know what kind of fucking I could expect when we were alone.\n\nWhen? my mind shouted at me. When? We can't do this again.\n\nBut we're gonna, I thought, lost in the tide of bliss that was my son's cock. We're gonna. We're gonna get this cock again. Yes, we are. Yes, we fucking are.\n\nWhat the hell was wrong with me?\n\nIt didn't matter because I started moving my butt in tiny circles while trying to keep my upper body still. Not that it mattered, my husband had his eyes on the road, focused behind his sunglasses, while his son fucked me in the seat next to him. It felt so good, but I wanted more. I wanted a nice, long cock-pump up my tight pussy.\n\nAs if reading my mind, the next time my husband passed a car, my son bounced me on his cock. Up I went, shaking, and down I came, losing my breath when his dick filled me up again. His knob hit something soft, sending a wave of pleasure through my body and a stream of light through my vision. Again, the next time my husband passed a car, up my cunny went, down it came, making me grunt behind my closed lips. That's what I needed. Fuck, just give me a good pounding half a dozen times, and I'd come. But we didn't have that kind of freedom, did we?\n\nNo, fuck, we didn't.\n\nInstead, I leaned back against my son and turned my hips in a circle, grinding my pussy on my son's teen meat. I lowered my right hand to his wrist and pulled his hand upward over my thigh and garter suspenders and between my legs where I was the hottest. My boy got the idea, and he ran his hands down my wet muff, playing with my pubic hair cross, then going lower as a surge of body-shaking pleasure filled my body. When his middle finger touched my clit, I came, clenching my teeth and looking to the left, outside of my window, as my lower body humped my son's cock back and forth.\n\nOh, holy shit, I moaned on the inside as my body trembled and my face tightened. Oh, oh, oh, oh god, mmm, fuck, yeah.\n\nI grabbed my son's hand, trying to get his finger off my buzzing jewel, but there was no fighting his strength. He ground me against his dick, flexed his shaft inside of me, and fingered my pearl without giving me a break.\n\nOh, shit\u2014no! I thought as I came again. No, no, no!\n\n\n\nThis time, I lowered the window a few inches, doing the same for the back window. I think my husband glanced at us, but he said nothing as the wind tore through the car, cooling my sweating body as another mini orgasm rolled through me.\n\nFuck, my son was going to get us caught.\n\nI grabbed his soaking wet fingers again. I pulled up, and the little bastard slid his hand up and under my dress, over my slender tummy, and grabbed onto my right breast. My nipple throbbed beneath his palm, bending as he rubbed my tit in a circle. Electric pulses shot through me, and I arched my back, forcing my ass harder into his lap and my pussy lower onto his cock. His knob pushed through me, searching for the closest thing I had to virgin pussy meat. I bit the inside of my cheek to keep from crying out as I came again. This time, my son only swelled his cock within me as I bathed his incest dick in my golden honey.\n\nOh fuck, oh fuck, oh fuck, I thought. I couldn't do this anymore. I couldn't.\n\n\"No more,\" I begged, sounding helpless and beat and on the verge of tears. \"No more.\"\n\n\"We're almost there,\" my husband said. \"I can't slow down now.\"\n\nI looked up through the windshield. I recognized the hills around us. Mansions appeared on my left every quarter-mile with short roads leading to their courtyards. We were almost to my in-laws' home. Thank God. My son squeezed my tit again, but he didn't grind me on his cock, so I let him have my breast and my nipple as I sat as still as I could with his prick buried deep inside me. Still, without him moving, I felt every little surge of power the Porsche's engine had, and by the time we pulled into my in-laws' driveway, I had come one more time. It had been so tiny . . . but oh-so-good.\n\nFinally, the road trip was over . . . but wait, my son hadn't come yet.\n\n<center>6</center>\n\n<center>One Last Ride</center>\n\n\"Holy shit,\" Dex said, looking at his watch. \"That's a new record, baby.\" He turned to me, then leaned toward me, smiling. \"And you know why? Because you let me drive fast.\"\n\nHe pursed his lips, leaning closer to me, and I leaned into him, pressing my lips to his while his son's dick stretched my pussy from top to bottom.\n\n\"And,\" he said when we broke the kiss, \"I didn't use the restroom at the pit stop.\"\n\nI uttered a breathy laugh as my son swelled his prick inside of me.\n\nDex opened the door, calling, \"I'll send someone for the bags,\" as he raced toward his parents' home.\n\n\"Mom,\" Colt whispered in my ear, pushing his lips against my nun's veil. \"I need to come.\"\n\n\"But,\" I gasped as my son grabbed my ass and raised me up his cock, \"your sister.\"\n\nHe dropped me on his dick, knocking the air out of me. He lifted me again, emptying my pussy, then dropped me again, making me gasp. Lana made a noise. I threw my blanket off my body, looking down at my stockings, at my garters, at my nearly bald mound, and my son's big balls beneath my vanilla pie. Holy shit, this was hot! Then my son bounced me on his lap while jackhammering his rock-hard dick into my pussy.\n\n\"Oh, oh, oh, oh, oh!\" I gasped in surprise at the sudden ramming.\n\n\"What,\" Lana said, yawning, \"what's going\u2014Colt! Mom too!\"\n\nMom too?\n\nLana opened her door, exiting as my son bounced me on his lap. She turned around and said, \"You asshole!\"\n\nShe stamped her foot and slammed the door, walking off toward the house.\n\n\"She'll\u2014mmm\u2014get over it,\" Colt moaned. \"We're allowed to\u2014oh, fuck, Mom, that pussy's good\u2014fuck other women.\"\n\nHow could I be so\u2014oh, oh, oh, fuck\u2014stupid!\n\n\"Hurry, Colt,\" I gasped, looking through the windshield at my in-law's backdoor. \"Hurry before someone comes.\"\n\n\"Help me come, Mom,\" Colt said, sliding his ass down the seat and holding me by my ass cheeks. \"Work that pussy on my dick.\"\n\nI huffed, I puffed, I moaned as his dick hit me deep. I drew my knees back, closing my thighs and puffing out my pussy, then I placed my feet on the dashboard and held myself up, giving my son's long prick some room to thrust. Colt moaned, picked up his pace, and soon the sexy sounds of his lap smacking my ass filled the car.\n\nI squeezed my pussy muscles as my insides spasmed. My son stretched me so much, and now that he was piston-fucking my soaking wet snatch, my entire body wanted to burst in ecstasy. Colt jackhammered me, fuck, he fucked me like a thoroughbred sprinting for its life. My clitty swirled with unreleased pleasure as my son's fuck-stick plunged the cum out of my body. I reached down with my left hand, sliding my fingers over my mound, getting the tips on my clit between my thighs. With my right hand, I reached around my ass cheek, found my son's balls, and massaged them.\n\n\"Oh, oh, oh, fuck\u2014Mom!\" Colt shouted, burying his bone to the balls inside of my cunt.\n\n\"Colt!\" I screamed as the pleasure building within me exploded, sending wave after wave of orgasmic bliss through my body. I had never felt so wet between my legs. I had never drenched my husband's balls with this much cum. I had never in my life came so hard. . . . This was something every mother should experience with her son, or sons, however many she had. . . .\n\n<center>7</center>\n\n<center>After</center>\n\nI stood in my son's room, having changed out of my nun's costume and into a pair of jeans and a T-shirt with a proper bra cupping my tits and a pair of lacy, boy short panties protecting my tender twat.\n\nColt was sitting on his bed, with the gas station blanket around his waist and his half-filled bottle of water in his right hand. He had poured it on his lap to explain why he was so wet. His sister, my daughter\u2014his sister!\u2014sat next to him on his bed, in her sweats. She didn't look so mad now as I stared down at her. My maternal gaze had knocked them back into their childhoods.\n\nI had a speech prepared to throttle them with, but then I saw their costume lying on the bed next to them. It was a tandem costume of a hotdog bun and a wiener. My son would wear the hotdog bun, and connected to him from the front, his sister would wear the wiener. I ignored my children as I checked their costumes and found what I knew I'd find: A hole that would allow them to secretly fuck in the middle of everyone: friends, family, guests, and the catering staff\u2014everyone!\n\nI looked at my adult children, and they shrank back from me.\n\n\"Are you fucking kidding me?\" I asked, and after a harsh mother-to-her-children scolding, I went back to my room and washed the cum out of my nun's costume in secret.\n\nLater that night, I dressed as a nun once again for my in-laws' Halloween party, but this time I wore my come-fuck-me heels, and I left my panties in the drawer.\n\n<center>* * * * *</center>\n\nIf you've read this far, click a 5 star.\n\nComment, email, vote, etc.\n\nYour time is appreciated; thanks for reading."
    ],
    "authorname": "MrHereWriting",
    "tags": [
        "mom",
        "son",
        "sneaky sex",
        "lap sitting",
        "mother son incest",
        "mr here",
        "car fucking",
        "lap sex",
        "lap story",
        "lap fucking"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-mom-her-son-and-his-lap"
}