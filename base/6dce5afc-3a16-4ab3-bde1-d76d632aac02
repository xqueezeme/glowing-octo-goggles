{
    "title": "How to Give a Great Virtual Blowjob",
    "pages": [
        "If you are shy like me, it can be super intimidating to try text sex (sexting) for the first time.\n\nLots of guys complain to me, \"Girls never have anything to say.\" or \"All they do is give one word responses.\" or worst of all, \"Once I get them off, they disappear.\"\n\nThe truth is, a lot of people have no idea how to sext, that is to create a sexy experience in a chat room. Especially introverted perfectionists over 50, just saying.\n\nBut...once you know what to do, you will have a lot of fun teasing men mercilessly while you type away on your keypad, thousands of miles away from your pleasure partner.\n\nWhen you think about it, have you ever seen a class called Sexting 101? The cool thing about a site like Literotica, is that with a little cutting and pasting, you can easily come across as a virtual blow job expert, even if you are a rookie.\n\nIt can be fun to practice your sexy chatting skills with a blow job because it is really hard to mess up. Seriously. From what guys tell me, getting a woman to text like this is what they desire with both balls, I mean their whole heart.\n\nSo if you have connected with a fun person in chat and you want to tease and please him, here is exactly how to do it.\n\nHere is a script all prepared for you. All you do is cut and paste each line into the text window and slowly send them. Tease him and watch his reactions. If what the guys tell me is true, when you please your man with this teasing blowie, he'll be BEGGING for more.\n\nThe key to a great virtual blowjob is simple.\n\nPaint a mouth watering picture with your words. Don't tell him about what you want to do. Instead, do describe exactly what you would be doing if you were there, just like an adult version of Just Pretend.\n\nTake a deep breath and plan on simply texting one part of the story at a time. You probably don't need a scene for this story. He's a guy, he will be ready for sexting and a virtual blowjob anytime! See if you can get that hunka hunka burnin' love to whimper... \"Please don't stop...\"\n\nReady? Set? Cut And Paste This Perfect Blowie:\n\n\ud83d\udc8b Hey baby, I have been doing a little research on naughty texting. Do you mind if I practice on you?\n\n\ud83d\udc8b I want to start by giving you a virtual massage, I can't wait to run my hands over your body. I love how your muscles feel when my hands are all oily and slippery. (Bonus Turn On Tip: If you want to really get his attention, mention that you would like to add some body sliding, skin to skin, full body stroking if he behaves himself.)\n\n\ud83d\udc8b If you were here right now, I would take your hand and lead you away from your work. I have a table set up and ready for you.\n\n\ud83d\udc8b I unbutton your shirt, never breaking eye contact, slipping my cool fingers under the smooth fabric of your shirt, feeling your hot skin underneath.\n\n\ud83d\udc8b I reach in to brush your nipples with the back of my hand. A rush of turn on hits me as I feel you stiffen against my skin.\n\n(Bonus Turn On Tip: Notice when your turn on surges as you cut and paste these texts into your own text stream. Think of it as if you and your partner are musical instruments and when y'all harmonize, the mutual turn on may swell and take over at anytime.)\n\n\ud83d\udc8b I slide your shirt off your shoulders and it falls to the floor. Reaching down I unbuckle your belt and pull it with a snap from your belt loops.\n\n\ud83d\udc8b Unsnap your pants, I whisper.\n\n\ud83d\udc8b (Bonus Turn On Tip: You can make him wait any time you want. You can't help it if your battery goes dead or you have to take a call at work, right?) I hook my pinkie finger in the waist band of your boxers and pull it out for a peek. Mmmm, I say, licking my lips.\n\n\ud83d\udc8b You race to take off the rest of your clothes as I turn to walk toward the massage table. Your eyes are glued to the shape of my ass silhouetted in the vanilla silk chemise hugging my curves.\n\n\ud83d\udc8b Fuck, I love your eyes on me. (Bonus Turn On Tip: If it is hard for you to talk dirty, texting dirty is a great option. Guys generally think it is hot when a girl curses, even in text!)\n\n\ud83d\udc8b You lie on the table face up, your arousal beautiful before me. \"Not so fast.\" I whisper, face down please. You protest but comply, adjusting yourself on the black silk sheet beneath.\n\n\ud83d\udc8b I have your favorite massage oil and I can't wait to rub your back and shoulders. I lean over and my bare breasts just graze the smooth oily skin between your shoulder blades.\n\n\ud83d\udc8b I feel my nipples stiffen as they skim your back, you moan when you realize I have taken off my robe.\n\n\ud83d\udc8b I crawl up to straddle you and feel your body rising up under me, I know you want to turn over and kiss me, but I won't let you. It is my time, my turn to choose the time. I know exactly how hard you are.\n\n\ud83d\udc8b My fingers separate as start to stroke your sides and I let them slip just under your hip bones. I feel you raise your hips as I stretch my fingers in so close to you but stopping just short.\n\n\ud83d\udc8b Should I go on? (Bonus Turn On Tip: If it is your turn on, you can ask for him to call you Mistress at this point. Make sure it is clear that you are in charge of this blowie.)\n\n\ud83d\udc8b I slide off to one side and tell you to turn over now.\n\n\ud83d\udc8b I crawl up until I can finally kiss you. I am on top and I am almost touching your lips so gently with mine. My mouth aching for the taste of your skin, I refuse to let myself have what I crave and I pull away. (Bonus Turn On Tip: Make him wait. The hotter it feels, the slower you go.)\n\n\ud83d\udc8b You reach hungry for a deeper kiss and I lean away...teasing you.\n\n\ud83d\udc8b I move backwards, kissing your chin...down your neck, my breast brushing your chest as I move down.\n\n\ud83d\udc8b My thirsty tongue now hungrily circles each nipple licking, nipping at the skin on your chest and I let one hand drift between your legs.\n\n\ud83d\udc8b I cradle your balls in my palm and knead them gently as I kiss and lick my way down your belly, letting out little squeals and moans as I go.\n\n\ud83d\udc8b Your fingers wrap themselves in my hair and you pull me close. I love when you pull my hair.\n\n\ud83d\udc8b I stop and look up at you and whisper, \"I can't wait to f-k you with my mouth.\" (You might just get a whimper at this point.)\n\n\ud83d\udc8b I move slowly, sliding my skin against yours, kissing down your lower belly letting my cheek rest against your stiff self and look up at you. \"What do you want\", I whisper looking deeply into your eyes.\n\n\ud83d\udc8b I wrap your swollen manhood (fill in your favorite street name if you wish) in my hand and slowly slip my lips around and over it. My tongue moves slowly under the ridge and around the tip in a figure 8.\n\n\ud83d\udc8b Next I trace my lips with your stiffness and then slowly take you into my mouth. I love how it feels to stretch my lips over my teeth so I can take you in.\n\n\ud83d\udc8b All the way in and then pulling away slowly with a twist and then back again. Your one hand stroking my back and shoulders and pulling my hair with the other, I shiver in pure delight.\n\n\ud83d\udc8b Lying down next to you, I run the outside of my teeth up and down the underside of your hardness. I moan in my throat at how good it feels to lick and kiss you as I fondle you and tickle the soft skin of your smooth thighs.\n\n\ud83d\udc8b I kiss and nip (carefully) down your belly, and kiss and nibble my way toward the soft skin down under. The sound of your whimpers and moans go straight to my lady bits. Such a turn on to know how hot you are. (You are hot, aren't you? LOL)\n\n\ud83d\udc8b I slowly work my way back up, hand on the base of your straining manhood. As I suck and glide I feel you straining to hold back your orgasm, wishing you could make it last but needing release. I hear you panting and calling my name.\n\n\ud83d\udc8b I speed up my hand, twisting, sliding up and down, at the same time I am sucking and swirling the tip. At last I feel your body convulse as release finally hits you. I know to be so still while I hold you in my mouth. In time I feel you soften and whisper my name.\n\n\ud83d\udc8b I crawl up to rest in your arms. You kiss me tenderly and I feel your hands stroking my back and hips. We snuggle together and breathe in the warm summer air. Sleep will come soon.\n\nIt may take a little practice, but even if you are super shy, you will find texting a guy a virtual blowie can be a real turn-on, especially when you relax and enjoy his pleasure. The good news is that you can't mess up here. Even if it is your first time, he will be over the moon being pleasured like this and appreciate your cyber oral sex efforts.\n\nBonus Turn On Tip: If you are super shy about the whole idea of oral sex, don't worry. Your partner will be patient with you, I promise. Even reading this story a few times can help you get used to the language and ideas. Personally, I like calling a blowie a blowie. It feels sexier to me.\n\nMany men adore this kind of pleasure in a text scenario. Men tell me that their solo sex is boring and no fun. Can you clearly see how you can fix that little dilemma?\n\nLearning to text him a blowie is an easy way to please a man from a distance with a most intimate text session.\n\nFirst timers, give it a try and let me know how you do. If you are still unsure if your partner would like playing a text scene like this, just give him the link and let him read it for himself. You can use bits and pieces of this story in countless future playtimes!"
    ],
    "authorname": "Tigger_Lilly",
    "tags": [
        "older woman younger man",
        "female dominant",
        "blow job",
        "fellatio",
        "younger man submissive"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-give-a-great-virtual-blowjob"
}