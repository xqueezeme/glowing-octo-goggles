{
    "title": "Brain Games Ch. 16",
    "pages": [
        "Zach arose early, coming out of dream with a delicious sense of aliveness; and a lingering unease.\n\nHe knew that he did not trust this dream-goddess; and he trusted the professor even less. There had been a phrase he savored: \"You can change the script, but not the plot.\"\n\nIt was time to change the plot. He had no desire to continue as their toy, or a pawn in their game, or whatever was going on.\n\nSo the first thing to do was to figure out what was going on.\n\nHe sat at his desk and inventoried the situation, writing out a list of everything:\n\n1. Enkins hypnotized me. Or something.\n\n2. I began to feel things beyond what is normal, especially feeling other people. The girl on the lawn. I think this is what Enkins meant by\n\n3. I dreamed about this Goddess woman; or wait... did that happen first? What happened first?\n\n4. Things had suddenly developed with Maddy. Friends all year, I'm feeling her interest, but generally avoiding it (why?), and now everything starts to happen.\n\n5. I do some things that don't quite feel like me. Is it me? Am I changing? Or did Enkins leave some kind of post-hypnotic thing? (But wait for it.)\n\n6. I write to Enkins. Things seem like they are happening too quickly, but he writes back. Wait, he had me listen to something right? But I never figured out what it was.\n\n7. Then there was Sara, another girl on a different lawn. But something weird happens there too.\n\n8. I'm starting to figure out how to influence people. I do something to Jacob. Ava and I get something going on, and that dream Goddess shows up. She shows me how to push my orgasm into someone else, so that instead of cumming (well, it's still an orgasm), everything goes to a different level.\n\n9. I take Sara (how?) to see Enkins and things get ultra weird. I see what his willpower is like. He does things to Sara, makes her cum, and then puts everything back together. Gives her to me, so to speak, and I don't do anything with that. I'm feeling guilty as fuck right about here. But I'm also starting to see how it works.\n\n10. I try it out on the girl in the laundry room. Everything nearly goes wildly wrong, but then it turns out ok. I might even be doing some good.\n\n11. I show off to Maddy. She likes it. I can't believe it. There's the goth girl, and then the other girl, and then Mia at the fountain. That was fucking crazy.\n\n12. Maddy and I go all the way. Wow! Still don't even know what to say about it. And yet... is that where things start to go off the rails?\n\n13. Ok, then it's the library! That girl! Japanese or? Totally onto me. But I work the magic anyway, with someone else. The older woman. She cums a crazy amount. (Note! Need to learn more about that!)\n\n14. (Christ there's more go this than I thought.)\n\n15. I'm still feeling like sometimes it's not me. Like sometimes it's Enkins working through me. Is he using me for something? Or is he teaching me? But it's not all the time.\n\n16. Then: THAT NIGHT.\n\n16.1: Maddy and Mia. How hot was that?\n\n16.2: Ava tells me not to go out, but I go out. And something happens. I still don't even know what to call this. It might have been \"the girl on the lawn\"? Or probably not, it was something else entirely.\n\n16.3: Especially weird dream. Something about a temple. A blood sacrifice?\n\n17. Tailspin. And everyone disappears. Enkins. Ava. Dream goddess. Gone. I can't even talk to Maddy. I'm a total mess.\n\n18. Finally get back to Enkins, and he's got Jasmine with him. That was a hell of a lesson. The egg. The... spirit? The power! Something really clicked for me there.\n\n19. Maddy tells me off.\n\n20. I want to try it out, and I find Vicky, who by wild coincidence is reading about ancient Goddess culture, and everything goes wrong like immediately.\n\n21. Maddy makes nice, 'cause she wants to magic her crazy christian roommate.\n\n22. Lisa has something--like a spirit parasite--on her. WTF?\n\n23. Wait... I have something on me, too. WTF? WTF? And I think it is Enkins, somehow.\n\n24. Vicky shows up. Tracked me down. But I put everything I have into it &amp; it doesn't go wrong this time. There's a whole lot of Goddess stuff. (Note: read up on all that!) Whatever happens between us is somehow important for her. For her work? But it's important for me, too.\n\nZach paused here in his writing. Putting it all down on paper had helped bring some clarity. He started a new section:\n\nHypothesis: Enkins is all about control... but something more subtle is going on with the Goddess. What?\n\nHe left the question open, leaning back in his chair and letting his thoughts roam.\n\nIt came back to something simple: he just wanted to be himself. He wanted Enkins and this Goddess out of his head. But they were too strong for him, certainly now, maybe forever. What could he do?\n\nA number of ideas flitted through his mind, but eventually one stuck.\n\n***\n\nHer name was Katya.\n\nShe had lustrous auburn hair that fell in tight curls. Zach held her gaze, her large deep-grey eyes holding him as he held her. Katya also had a purple splotch of a birthmark across her cheek, wrapping like a map of an island across towards her ear.\n\nThey had thrown open the shades and the slow roll of heavy clouds bringing yet more rain billowed outside, wind sometimes lashing the rain hard against the window.\n\nAs the Resident Mentor, Katya had a room to herself.\n\nShe sat on her bed, facing him, framed against the window and the rising storm.\n\nShe wore a heavy, oversize knitted sweater in a dark pink, and sweat pants. Nobody was dressing up for a rainy Saturday.\n\nKatya was rocking back and forth very slightly, as the arousal that Zach had been steadily boosting in her tingled.\n\nZach saw the flush of that arousal in her skin, and in the way her eyes took on a different focus. Her lips parted.\n\n\"You like what you feel, don't you,\" Zach said.\n\nKatya nodded, and gently bit her lower lip.\n\n\"What are the rules about getting involved with undergraduates?\"\n\n\"Oh, it's not allowed. Strictly verboten!\"\n\n\"And how good are you at following the rules?\"\n\n\"Well, that one is easy. The guys on this floor are so immature, it doesn't even register.\"\n\n\"But now...\"\n\nShe nodded. \"This is different.\"\n\n\"You really want to take that sweater off, don't you.\"\n\nHer flush deepened, and she nodded.\n\nZach applied another light touch, the invitation instead of the command. He didn't even speak, he just opened his hand in the gesture of invitation.\n\nKatya laughed, and pulled the sweater over her head. She had a cream colored sports bra on, with the curve of her breasts held firmly in place.\n\n\"You are extremely beautiful,\" Zach said.\n\nShe laughed in a shy way, not believing, but wanting to believe.\n\n\"Say it for me,\" Zach suggested.\n\n\"Say it?\"\n\n\"Tell me you are extremely beautiful, just like that.\"\n\n\"I am extremely beautiful?\"\n\n\"Good, but don't ask it. Say it.\"\n\n\"I am extremely beautiful.\"\n\n\"Good, and you believe it now, don't you.\"\n\nShe hesitated, but she nodded.\n\nZach felt her translating the statement internally, applying it locally to the graceful curve of her breasts, although even that was tinged with insecurity.\n\nNonetheless, he gently nudged her arousal and her desire up, letting the fog of her sensations slowly overcome her mind.\n\n\"Do you feel how I desire you?\" he asked, again inviting her to notice and to connect to his own sensations.\n\n\"Yes,\" she said. He could feel the sabotaging thoughts flickering through her. He could only imagine the content: \"What kind of loser is he that desires an ugly duck like me? Is he a freak? Is it some fetish?\"\n\n\"Look more closely,\" he said. \"Feel it with me.\"\n\nHe nudged up the arousal still further. He was so in tune with her, he could feel the heat starting to spread through her body.\n\n\"Can you feel the way I desire you?\" he tried. He felt himself opening more of himself to her, showing her his heart.\n\nShe hesitated, \"I think I do...\"\n\n\"Stop,\" he said. \"Close your eyes.\"\n\nHe shifted into the mode of command: \"What is Katya thinking right now?\"\n\nShe spoke in a mumbling voice, \"Katya thinks Zach is just a horny undergrad, he would bang anyone.\"\n\n\"Does Katya want that with him anyway?\"\n\n\"Not sure.\"\n\nZach withdrew his will, quickly orphaning the thoughts.\n\n\"Would you like me to stop, Katya? Shall I go?\"\n\n\"That would probably be best,\" she said, with a sigh.\n\n\"Is that what you want?\"\n\nZach exerted no influence, used no will, issued no invitation. He left the moment completely open. They looked into each other's eyes.\n\n\"No,\" she said at last. \"No I don't want you to go.\"\n\n\"Do you want me to stay?\"\n\nShe considered again. Zach felt the flush deepening. Without any boost from him, he felt the warmth expanding.\n\n\"Yes, please stay.\"\n\n\"What's going to happen if I stay?\" he asked.\n\n\"You're going to make love to me,\" she said.\n\n\"Take your bra off,\" Zach said. He didn't send intention into her energy, but rather he put his will into his words.\n\nShe lifted he stretchy material over her head, revealing the soft, smooth curve of her skin, small, pink, puffy aureoles with small nipples hard and pointed.\n\n\"Look at how sexy you are,\" Zach said, and gave only a small push of his own desire to let her really feel it. They both took a sharp breath in.\n\n\"Stand, and show me more.\"\n\nKatya bounced off the bed, and turned for him.\n\nHe swung his legs over the side of the bed and pulled her to him. He brought his lips to the space between her breasts, kissing into her heart, breathing his delight and his arousal into her.\n\nZach knew clearly now what the gift was that Goddess had mentioned. It was so simple.\n\nHe breathed the pure breath of loving presence into her, feeling that same wonder at the miracle of her. He felt his mind overcome with the beauty of her, and he did press that back into her, imposing the beauty he was beholding onto her.\n\nHe placed his hands on her hips, and she trembled beneath his touch.\n\n\"Take my shirt off,\" he said, and she did.\n\nHe stood and brought his chest to hers, bringing their heartbeats together.\n\nHe tangled his fingers into her curls and brought her to meet his kiss.\n\n\"I'm going make love to you,\" Zach said.\n\nHe began weaving the curl of the bubble around them, looping layer open layer until it blotted out the rest of the world. There was only this kiss, and her hands gripping his back.\n\nIn each moment of their lovemaking, Zach returned attention to the connection between their gaze; and each time he looked at her, he saw her as perfect. Perfectly beautiful, with an unfurling flower tattooed on her cheek. The more clearly he saw the perfection of it, the more Katya blossomed to his touch.\n\nWhen the connection was absolute, and brilliance swirling through their private universe, Zach entered Katya. She gripped him and pulled him into her, gasping. Tears ran down her cheeks; were tears of awe and beauty.\n\nShe gripped him, quivering and pulsing around him, and he throbbed and grew within her. The enfolded each other in an embrace that tangled everything.\n\nZach dissolved for a while, just enough awareness to keep spinning the bubble. Katya faded away as well, until it was just pleasure. Sounds. Splashes. Moans. Gasps. Breath.\n\nEach time an orgasm welled up within him, Zach poured the pleasure and excitement of it into Katya. She would cry out again, laughing, crying, gripping him until her fingers were white, clutching at him. He felt the wave rise inside, and pass into her without cresting, without releasing the tension.\n\nThe light within their bubble was almost too much. Everything trembled; the air shimmered.\n\nIt was time.\n\nHe took her hair more tightly in his fingers, and he kissed her more deeply. He pressed himself to her, to the root. He felt the connection crackle and spark, her breath quick and her sounds sharp and urgent. It rose within him, and he did not defuse it.\n\nIt rose like the sun.\n\nThe sun and the moon.\n\nThey came together in one gold and silver light. No darkness remained.\n\n<p align=\"center\">* * *</p>\n\n\"Sleep, sleep,\" Zach said. \"Shhhh.\"\n\nHe eased himself out of her, and let her float.\n\nHe knew what he wanted to do, but not quite how to do it. But he had been there, he had felt it.\n\nSo he thinned their bubble and let the blazing universe of their bubble shine forth.\n\nAs he did so, he had to struggle to keep everything from flying apart. It wanted to. The pressure inside was immense. He had to keep himself dissolved, as if he was the whole bubble itself; as if the eggshell was his skin, the edge of his body. And the light sending forth was the light of his heart.\n\nOutside he felt them.\n\nMany had come to feast, but he didn't care about them. Moths to the flame. He was in search of bigger prey.\n\nHe felt it out there.\n\nThe streaming brightness flowed, but there was plenty. He was abundant. He felt endless, limitless.\n\nHe waited until it could not deny itself any longer.\n\nThe massive shadow moved black against velvet black, a shadow within a shadow.\n\nThere came a tug, like a spider testing the web. He fed it a little more. Teasing it in. The more it tasted the hungrier it became. The hungrier it became, the more he fed it.\n\nThe moths scattered.\n\nHe felt her approach.\n\nWhen he saw the claws, he gave it all to her. He shredded open the bubble, and opened his heart, feeding her everything.\n\nHe caught her by surprise.\n\n\"You're not ready...\" she hissed, even as her eyes rolled back.\n\nThe rage washed out of her. The anger dropped off like dry leaves. The endless thirst found its end.\n\n\"You're mine, now,\" he said.\n\n\"I am,\" she said, luxuriously. \"For now...\"\n\n\"I will call you later,\" Zach said. \"Sleep.\"\n\nThe spider, fat and happy, sank into angelic sleep.\n\n<p align=\"center\">* * *</p>\n\n\"Dude,\" Jacob said, impressed. \"You fucked the RM. I seriously cannot believe it.\"\n\nZach knitted his brow.\n\n\"Don't play dumb, the whole dorm knows. Jesus, man, you gave it to her good.\"\n\nZach winced. Apparently the bubble didn't block sound. He should have thought about that.\n\n\"That face, though, how did you do it?\"\n\n\"Hey,\" Zach said. \"Don't be a shit. She's gorgeous, for your information, and I think the birthmark looks like a flower tattoo.\"\n\nJacob shrugged. \"Ok, whatever. Hope you don't get her in trouble, though. Last thing we need is some strict old battle axe coming in to maintain law and order.\"\n\n\"Yeah, I hear that,\" Zach said. And to change the subject: \"What's up with Ava, then?\"\n\n\"We talked. Chicks are so complicated, dude. I'll be honest I almost forgot how hot she is, I don't know how. I think the hotter they are, the more complicated it gets. Anyway, I think we're good.\"\n\n\"Cool,\" Zach said, picking up his phone.\n\nTwelve texts from Maddy.\n\nApparently she and Mia had been listening. They thought it would be funny to live-narrate what they were hearing.\n\nThe last text: \"Good job, lover boy. Come see us.\"\n\nHe knew what she meant, but he was empty. \"Tomorrow,\" he typed.\n\nIt was time to catch up on schoolwork.\n\n<p align=\"center\">* * *</p>\n\nJacob went out for the evening. Possibly with Ava.\n\nAlone in his room, Zach lay out on his bed, eyes shut, breathing deeply, and relaxing out of all the tension.\n\nHe softened his awareness to feel through the lines of connection: Maddy was back at Downlo with Mia and some others. Jacob was at a party, maybe a frat? Maybe with Ava? He still couldn't feel Ava. Strange. He felt out towards some of the others: lawn-girl, only the faintest sense from her, but it was uncomplicated, no bad vibes. Sara, almost as faint now. Diana, a trace stronger, but he found he didn't want to pursue that line. Jasmine: no trace. He had felt her so strongly, even controlling her, but there was no line of connection to her at all. Lisa: Oh! Lisa was watching porn, riveted.\n\nAnd what of his spirit creatures: They gave the impression of being under his bed. For some reason Zach had to laugh. His monsters.\n\nHe opened to the big one.\n\n\"What are you?\" he asked.\n\nIt was easy to obtain its attention, but not so easy to decipher the results. It didn't speak in language. The images were like abstract art, complicated, hard to grasp as actual meaning, and yet filled with the sense of meaning. There was an emotional tone to it, it was purring, still radiant with power. A cat, languid in a pool of sunlight.\n\n\"Are you the one that hurt me last week? And the woman?\"\n\nThere were images, fragmentary. The lawn girl. Ava. Goddess. Enkins. Juxtapositions. The emotional note was apologetic. Zach had an image of one of those wood box puzzles where everything is interlocked to everything else, and there is a trick to separating all the pieces, and an even trickier way of fitting them back together.\n\n\"I'll take that as a yes. Why?\"\n\nNothing. A blankness. Why was not a question it understood, or cared about. For it, whatever it was, there was no such thing as 'why'.\n\n\"Can you help me?\"\n\nThe images resumed: sunlight on water, a broken mirror, an open door, a glass bottle. But the emotional note was enthusiasm. It wanted to help. There was humor to it: what was funny? Zach felt himself sigh.\n\nThe thing retained a certain sense of spideriness to it, and at Zach's next question that took on more significance.\n\n\"What about this piece of Enkins in me?\"\n\nZach tried to convey this very gently, as though not to stir the attention of the shadow in his own mind.\n\nAnd the thing seemed to lift, to move on many legs, to peer at the shadow. It gently reached a black leg of sharp-edged darkness and pointed at something. Zach looked more closely where it was pointing.\n\nIt was not one but two shadows! It was a shadow parasite, one on him and one on the other. Zach had an insight.\n\n\"The Goddess? Is that her, feeding off Enkins, feeding off me?\"\n\nThe spidery thing generated more enthusiasm, more humor. Zach didn't find it so funny, but realized it was a clever way for the Goddess to not let Enkins discover her presence.\n\nThe problem was, he couldn't do anything about it. He knew that in a contest of wills, Enkins would destroy him. It would be a matter of moments for Enkins to \"reinstall\" a parasite, even if he did manage to eject the current one.\n\nBut the shadow spider only projected more laughter.\n\nZach had a psychedelic vision of a cubist view of Enkins, except instead of professorial garb he was dressed in a complicated purple tunic with leather belts and gold buckles. The vision flashed with Enkins increasingly tangled in a sticky spider web, able to see but not to move; and then trapped in a cave, watching shadow puppets cast against a rough rock wall from a beam of light.\n\n\"Wait, I know that... that's plato?\"\n\nThis prompted nothing from the shadow spider.\n\n\"How? How do I do this?\"\n\nThe subsequent image was intensely disturbing: Zach saw and felt thousands of baby spiders crawling the web of his mind, tickling each important neural pathway.\n\n\"Oh God no,\" he said, shrugging the feeling out of his head.\n\nThe shadow spider offered the equivalent of a shrug. Zach knew he was projecting but he practically heard a New York accent: \"That's all I got, pal.\"\n\n\"I'll sleep on it,\" he sent.\n\nHe got an image back of more power and more light feeding into the shadow spider. But he also had a sense of earnestness. He didn't feel even a hint of the prior malevolence. Nor could he forget that horrific moment fuck her fuck her fuck her.\n\nLet's just get some damned sleep, he told himself.\n\nHe did some breathing exercises to calm his mind, letting go of the terrible memories washing back through him. Eventually his mind turned back to thoughts of the beautiful moments in his recent life: Making love to Maddy, opening Lisa, connecting with Vicky.",
        "Katya with a rose tattooed on her cheek.\n\n<p align=\"center\"># # #</p>"
    ],
    "authorname": "PriestOfIshtar",
    "tags": [
        "mind control",
        "hypnosis",
        "spirits",
        "magic",
        "sanity",
        "supernatural"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/brain-games-ch-16"
}