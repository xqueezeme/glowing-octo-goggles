{
    "title": "Bliss Ch. 07",
    "pages": [
        "The next couple of weeks were relatively uneventful, in spite of the emotional turmoil from that Friday. Or maybe because of it. We went to Malcolm's game, had dinner with Tony and Carl, we went to work, we met afterwards most nights and I stayed over at his house. I met up with Robbie alone and then with Malcolm ( never with Tony, though that was Robbie's choice as Tony wanted to). And in all of those things it was mostly the same, but there was a new...tenderness...to our interactions. Not that we were all over each other, pawing at each other (neither of us are particularly fond of explicit public displays of affection, the sight of couples writhing together in public inciting nausea instead of desire); rather, we seemed more attuned to each other. Any touching or physical gesture was minimal; a hand on his thigh at the movies, his arm slung over my shoulders at a restaurant, taking my hand as we walked. Small things, I know, but of mountainous significance to me. To us. \n\nAnd the subtle change manifested itself in other ways, as well. As the date for bringing him to meet my family neared, I grew nervous, agitated. I was beyond prickly at work, not short tempered exactly, just obviously tense. I'd told my family I was seeing someone, but made it sound far more casual than it was. And I hadn't brought home anyone \u2013 let alone someone like Malcolm \u2013 since high school. I decided on Friday morning to call and let my folks know I was bringing him with me. I grabbed my cell phone and quickly dialed before losing my nerve. When I told my mother I was bringing him with me, she grew so quiet I thought I'd lost the call.\n\n\"Mom? You still there?\"\n\n\"I'm here. Just thinking, Melly.\"\n\n\"About?\"\n\n\"I didn't know it had gotten serious.\"\n\n\"Serious?\" I scoffed.\n\n\"Hasn't it?\" she asked. I didn't know how to answer, so I didn't. She grew quiet again, so quiet I was starting to think I might have lost the call again and was about to call out when she finally spoke. \"Don't worry, Melly,\" my mom said with a laugh. \"No one is going to sit him down and demand he make an honest woman out of you.\"\n\n\"Not funny, mom,\" I said with groan.\n\n\"Why don't you and...?\"\n\n\"Malcolm.\"\n\n\"Why don't you and Malcolm come early Saturday? Your father and I would like the opportunity to meet him before Danny and Mary and the kids get here.\"\n\n\"What time are they coming?\"\n\n\"Around three or so, depending on traffic.\"\n\n\"I'll see if he has anything going on. We may not be able to get there early.\" I didn't lie, exactly. I mean I knew his schedule inside and out and knew he had nothing after his practice. I just...hedged a bit, giving us an out. Although I think my mom was a genius in suggesting bringing him early like that. \n\n\"Well, let us know. And we'll be happy to see you when you do get here.\"\n\nWe talked for a few more minutes and hung up after I promised to let her know for sure. I looked at my phone for a minute, contemplating calling Malcolm when it chirped in my hand, startling me, making me drop it into my lap. I picked it up and looked at the caller ID to see it was Malcolm. \n\n\"Hi,\" I said, smiling.\n\n\"I'm coming to get you.\" No question, no doubt. Just telling me.\n\n\"I'm just about to catch the bus,\" I protested lamely.\n\n\"Take the day.\"\n\n\"What? I can't,\" I protested. (Even as my mind was calculating the amount of time off I would have left and what my workload would be like on Monday. Who was I kidding? Certainly not myself.)\n\n\"I'm on my way.\"\n\n\"Are you listening to me? I can't take the day off.\"\n\"You can and you will.\"\n\n\"But - \"\n\n\"You're tense, and you would be worse than ineffectual at the office today.\" I was quiet at that, surprised that he'd picked up on it so easily, though to my credit I didn't try to deny it. \"Take the day.\"\n\n\"Fine.\" I sounded far more sulky than I was actually feeling. \n\n\"I am on my way,\" he said and clicked off. \n\nI looked at the phone, torn between wanting to throw it at him when he arrived and jumping into his arms and telling him I was falling in love with him. Was. Had. Whatever. Instead I just called Krissie and told her I was taking a personal day because my brother was coming to town. Which was true. For the most part, anyway. \n\nI changed in to a pair of black linen capri pants and a red t-shirt, slipping on some sandals and grabbing a cardigan before heading to the kitchen to wait for Malcolm. I sat at my breakfast bar, drumming my fingers, feeling oddly impatient to see him, and worrying a bit at how completely wrapped up I seemed to be. (To be frank, I think it was my lack of worry at how into him I was that had me worried. If you know what I mean.) I started thinking about the last time he was in my condo, and could feel the smile spreading on my face as the heat spread in my groin. When he finally arrived, I had to pause at the door and take deep breaths, thinking about ice and snow and concentrating on listing the most effective disinfectant bathroom cleansers in order to attempt to appear even somewhat normal. \n\n\"Hey,\" I said, opening the door. I was going to try for nonchalant, but any pretense died as soon as I saw him. He was dressed in tan cargo shorts and a tight black t-shirt. Not rent-boy tight, just snug, perfectly fitted, as if it was woven to him. He hadn't bothered to do more than run his hands through his hair, and I had a startling image of me running my fingers through his hair as I pressed his face to my pussy. \n\n\"Pack a bag,\" he said, stepping in and closing the door behind him. \n\n\"Alright.\" I instantly turned and walked quickly to my bedroom, going to my closet to grab a small suitcase. I leaned out and put it against the wall, turning back to my closet to look over my clothes. I grabbed a sundress, a cream colored, whispy cotton thing with an empire waist and green and blue embroidery on the bodice. I hung it over my arm, scrutinizing my clothes.\n\n\"How long am I packing for?\" I called out over my shoulder. It wasn't an unusual request, not really, even though I had clothes that had migrated to his house and seemed to have taken up residence there. \n\n\"A couple days,\" Malcolm said from right behind me. I squealed and jumped, turning around to face him. He seemed to...loom... in the doorway of the closet. \n\n\"Don't do that,\" I said, my hand pressed to my chest to try and slow my heart. I was visibly shaking.\n\n\"Do what?\"\n\n\"Sneak up on me like that.\"\n\n\"I didn't.\" He stepped to me and cupped my face. \"Why are you so nervous?\" he asked, forcing me to look at him. I just shook my head, unable to decipher his expression. He frowned at me, but didn't push the matter. \"I'll wait for you in the kitchen.\" He caressed my cheeks with his thumbs before dropping his hands and leaving me to pack. \n\nI finished quickly, grabbing a couple more changes of clothes just in case, and heading to the kitchen. Malcolm was sitting at the breakfast bar, one leg stretched out in front of him and the other bent with his foot resting on the rung. His head was turned and I could study his profile, the small bump on his nose from when he broke it in his 20s, the full softness of his lips, the fringe of his dark lashes. \"Are we ready, then?\" he asked, not turning to look at me.\n\n\"Yes.\" He slid off the stool and took the case out of my hand, gesturing towards the door with his other hand. He followed me out, and I could feel him watching me closely as I locked my door. I slipped my keys in to my purse and turned to him, smiling up at him even though he looked a bit pensive. \"Let's go.\"\n\n\"Let's,\" he said, taking my hand in his and weaving our fingers together. It was a simple gesture, one probably done by millions of people every day, but the natural way it was done, as if it was instinctual, soothed me. We stayed connected like that, holding hands, as we rode the elevator in silence, and I felt some of the tension I'd been carrying around the last few weeks start to lift by the time we reached the ground floor. \n\nWe made our way to his car, Malcolm seating me inside before putting my case in his trunk. He got in and put the keys in the ignition, but didn't start the car up right away. He sat for a moment, hands on the wheel, just looking ahead.\n\n\"Malcolm?\" I asked, wanting to lay my hand on his thigh but unsure.\n\n\"What's been bothering you? You've been jumpy and irritable all week.\"\n\n\"I haven't.\"\n\n\"You have, poppit.\" He looked at me seriously. \"You've been a right bitch at the office.\"\n\n\"Please.\"\n\n\"You have.\"\n\n\"I...it's nothing.\"\n\n\"Alright,\" he said with a nod, looking forward again and starting his car. He turned to look over his shoulder before pulling away from the curb. He made his way to Aurora and waited to turn left. \"Do you think you will ever be able to trust me?\" he asked quietly, not looking at me.\n\n\"What?\" I turned in my seat and shook my head at him. \"I trust you. I trust you completely. Jesus, Malcolm, how can you even ask that?\"\n\n\"You don't,\" he said, making the turn and heading north on Aurora. \"Not really.\" I snorted at that, turning back in my seat, but he continued before I could say anything. \"You trust me with your body, granted. You trust me when we're...intimate. I will concede that. But you don't trust me when we're not. No matter how close we are, no matter how open you are in my bed, outside of it you close yourself off to me. Why?\" His voice sounded both hurt and angry.\n\n\"I don't mean to,\" I said quietly, watching the 'no tell motels' roll by outside the window, catching glimpses of the locks and Ballard. I blinked, surprised to feel tears on my cheeks. \n\n\"Why don't you trust me?\"\n\n\"I do,\" I turned my head to look at him, but he didn't look back at me. \"I do,\" I repeated with a heavy sigh. I glanced around, noticing for the first time he was getting on the interstate heading north. \"Where are we going?\"\n\n\"For a drive,\" he said, still not looking at me, the clipped tone of his voice made even more noticeable by his accent. \n\n\"No destination in mind?\" \n\n\"No.\" He drove in silence for a few minutes, and I was about to break it when he did. \"What's been bothering you?\" he repeated. \n\n\"I...it's just...\"\n\n\"Just?\"\n\n\"I'm a bit nervous about tomorrow.\"\n\n\"Are you afraid I'll embarrass you?\"\n\n\"What? No! Of course not.\"\n\n\"Afraid your family will?\"\n\n\"No.\" I sighed. \"I mean, I've told you about my family, they're really outgoing...gregarious. Sometimes that can be a bit overwhelming. Especially when it's one new person in the group, although I think you're going to fare just fine,\" I grinned to myself at that. \"But my family's great, really. Friendly. And once you meet them...well, you're kind of instantly brought in to the fold.\"\n\n\"I can see why that would make you nervous,\" he said, his voice dripping with sarcasm. \"No deep, dark secrets or skeletons you're afraid I'll uncover?\"\n\n\"No, of course not...well...except...I haven't introduced anyone I've dated to my family in a really long time.\"\n\n\"How long?\"\n\n\"Senior year.\"\n\n\"College?\" he asked, glancing at me skeptically as he merged on to the 525.\n\n\"Senior year of high school,\" I said quietly, watching his face closely.\n\n\"I see.\" He stared straight ahead, his hands on the wheel. \"Why?\"\n\n\"I never cared for anyone enough to,\" I admitted softly, turning my face forward but watching him closely out of the corner of my eye. He gave an odd sort of grimace and I turned my face towards the window and closed my eyes, not wanting to see any more. I felt the car slowing down but resolutely kept my eyes closed. I could tell we were on surface streets again, could feel the sun heating my face even through the tinted glass, but I didn't want to see anything. \n\nAfter what seemed like a long time we came to a stop, and Malcolm turned off the car. Neither of us made any sound for a while, until he gave a big sigh and I heard him get out of the car. I opened my eyes to see an expanse of beach and the Sound laying beyond. My door opened and I looked up at Malcolm. He was looking down at me, his face not mad or disgusted or...anything, really. At least nothing I could decipher. He held his hand out to me and I put my hand in his hesitatingly, not sure if this was a gesture of affection or civility. He pulled and I obediently got out of the car, feeling relief wash over me when Malcolm once again threaded our fingers together as he closed my door. He pulled me along with him as he walked towards the water.\n\n\"Where are we?\" I asked. \n\n\"Meadowdale Beach.\" He stopped at the edge of the beach, glancing around at all the people there. It was a popular destination on a warm summer day. He turned and started walking south, towards a huge cedar that had been uprooted from somewhere in a long past storm and washed up on the beach. We walked slowly in silence, leaving the people behind as we went. The beach became more and more rocky, and the beachgoers seemed to prefer the smoother sands on the north end. \n\n\"This reminds me of England,\" he said, waving his free hand towards the beach. \"Some parts of the coast are so coarse and rocky.\"\n\n\"Oh?\"\n\n\"Yes. But very few mountains and forests as close to them.\"\n\nI laughed at that, looking at the way the trees did seem to march right down to the water's edge. It was something I'd never noticed or even thought of before. I glanced around, the wilderness I'd grown up with, lived with my entire life, seeming wilder, and somehow exotic. We reached the downed tree and walked around it, pausing to look at it's roots at the water's edge before continuing back up towards it's top.\n\n\"That's why I like coming here. It reminds me of home. Holidays at the beach with my family and mates.\" \n\n\"Wasn't it too cold?\" I asked, trailing my hand over the tree trunk. The bark was long gone and the wood was a polished white-gold, made smooth by time in the Sound and wind.\n\n\"We have summers in England,\" he said, the laughter in his voice drawing my attention to him.\n\n\"I know.\" I looked at him, confused for a moment while he smiled at me and waited. \"Oh,\" I eventually said when the lightbulb finally clicked on. \"You mean holiday as in vacation. Not like Christmas or New Year.\"\n\n\"Very good,\" he said, giving me a wink. He turned to face me fully and started walking again, moving backwards, and I was struck by the playfulness in his eyes. \"So delighted to see we're moving past the language barrier at last.\"\n\n\"I'm not daff,\" I said, giving him a smirk at throwing his own term back at him.\n\n\"No,\" he said, suddenly serious. He pulled me to him hard enough to push the air out of me with an 'oomph'. \"Neither of us can be accused of that, can we?\" I shook my head. \"No. In fact, some may say we are too smart for our own good. We over-think, we over-analyze things. Wouldn't you agree with that, poppit?\" he asked quietly. I nodded, afraid to speak and break the spell he was weaving around us. \"Yes. And that can be a problem, can't it?\" He grabbed my other hand and started pushing me back away from the water and towards the woods at the edge of the beach. It wasn't shoving, it was more like gently forcing me back. \"It can keep us from saying the things we want to say, the things we need to say, to each other. We stop ourselves, don't we? Thinking about all of the possible implications of what we want to say to each other, considering all the negative repercussions, making them bigger, giving them the greatest of weight in our considerations.\" The Sound disappeared behind a screen of dense ferns and trees as Malcolm maneuvered us through the woods, his eyes flicking away from mine for the briefest of moments as he directed where he wanted us to go. \n\n\"But do we give as careful a scrutiny to the consequences of not saying what we want, what we must?\" His hands squeezed mine as he stopped our progress. I shook my head, unable to form any coherent thought past I love you. \"And the consequences of that can be so much worse, can't they?\" I nodded at him, biting my tongue to keep from saying anything. \"In fact, the more we fight against saying what we want to, what we so desperately need to, the harder it becomes.\" He stepped up to me, forcing me to tilt my head back to look at him, and put my hands behind my back. \"So why do we do it?\" he dropped his voice to a whisper. \n\nWe stood like that for a while, a long while, just looking at each other, so much unsaid in each other's eyes and just behind our lips. I squeezed Malcolm's hands as they held mine captive behind my back, and he gave me a slightly questioning look. I licked my lips, my mouth suddenly dry and the sound of my quickening breathing drowning the sound of the woods and beach around us. \n\n\"I love you,\" I said, the words spilling out breathily.\n\nMalcolm gave the barest of smiles and bent to kiss me lightly. \"I know,\" he said, his voice low. He took my lower lip between his teeth and nibbled on it as he moved one of my hands to grab the other. He slid his hands along my waist to my stomach before pushing my t-shirt and bra up roughly, exposing my breasts. My eyes widened in alarm, but I offered no protest and kept my hands clasped behind my back. \n\nHe let go of my lip and put his forehead to mine, his fingers finding my nipples and playing with them, twisting and pulling at them roughly. His eyes stayed on mine, the affection in them telling me he loved me, too. Though I ached to hear him say it, I felt it in the way he looked at me and the way he touched me. I had to let that be enough. I could feel myself starting to get aroused, and welcomed it, a happy distraction. \n\nHis hands left my breasts, and I was about to bemoan the loss, when suddenly my nipples were being pinched tight \u2013 so tight! \u2013 in my clamps. I threw my head back with a moan as the intense pleasure shot straight to my clit, making it throb. I hadn't had them on in a while and the initial sensation was so intense. \n\nMalcolm stepped away from me, moving towards a young maple tree to my right. He pulled a branch down and peeled off a smaller one, about three feet long. He stood in front of me, slowly peeling off the leaves and twigs. His movements were deliberate, calculated, and he kept his eyes on mine as he prepared the switch. He tested it, slicing it through the air with a most wonderfully wicked sound, and I could feel my mouth start to water. I closed my eyes, cursing myself for responding so even as I was trying to keep from shivering in anticipation. \n\n\"You love me?\" he asked quietly, bringing the switch down on top of my clamps.\n\n\"Yes!\" My entire body jerked at the contact. \n\n\"You've been afraid to tell me,\" he said, punctuating with the switch on the underside of my breasts. I gasped but said nothing. It wasn't a question and I was too busy concentrating on the stinging heat radiating out from my breasts as he continued the torment. \"I am happy\" \u2013 whack \u2013 \"you told me\" \u2013 whack \u2013 \"even if it took\" \u2013 whack \u2013 \"so fucking long\" \u2013 whack. I moaned with each contact, each time getting closer to orgasm. My legs began to feel weak and I was afraid I would fall. I looked at him and he grabbed my face, kissing me, his tongue coaxing mine, and I drew strength from the kiss. \n\n\"Drop your pants,\" he said, letting go of my face. I untied my capris and pushed them down my hips, letting them pool at my feet. \"Turn around and grab the tree.\" I turned, surprised to see a large maple behind me. I leaned forward and grabbed around its trunk, my arms not quite encircling it. \n\n\"Do you have any idea what you mean to me?\" He bounced the switch lightly on my lower back as he spoke. I shook my head, afraid to speak. He seemed to be full of nervous energy; I could hear him pacing back and forth behind me. \"No?\" he asked, punctuating his question with the switch on my right butt cheek. \"You are a treasure, a jewel, my jewel.\" He brought the switch down on the left cheek. \"Harder than diamonds\" \u2013 whack across my thighs \u2013 \"more beautiful than rubies\" \u2013 whack across the top of my ass \u2013 \"more precious than emeralds\" \u2013 whack whack across the middle of my ass. \"The rarest gem, brilliantly cut, and all mine.\"",
        "I felt him step up behind me and his hand started caressing my ass, his fingers lightly trailing along the welts he'd raised. \"So precious,\" he whispered. I sighed, my eyes closed, as I angled my hips towards him. \"Oh, poppit, how I love you like this.\" I felt his lips brush along my hip. \"So open to me, so wild for me, just waiting for me to act, trusting me. The way you respond to me.\" He stepped back and I braced myself against the tree. \"Giving yourself to me. Being mine.\"\n\n\"I love you like this.\" He brought the switch down twice, criss-crossing my upper thighs. \"And I love you at work. So collected, so in-control, so cool.\" He added a welt to my upper thighs. \"I love all sides of you. Everything about you.\" He struck across my ass again. \"I love the way you sing to yourself when you cook, the way you twirl your hair when you are absorbed in a book, the way your toes twitch when you laugh, the way you try to not cry at sappy movies, your odd obsession with Duran Duran.\" He bounced the switch against my ass as he spoke, but I barely felt it. Tears were streaming down my cheeks and I felt like my heart would burst out of my chest listening to him. \"I love that you can face down a pack of CEOs in a boardroom but can't face a single spider in the bathroom.\" He struck me again \u2013 three times? four? \u2013 but I barely felt it, lost in the shock of his words. \"I love you,\" he finished quietly, throwing the switch down.\n\nHe stepped up behind me again, and I felt him reach around to my breasts and remove the clamps. I moaned as the fiery ache started at the tips of my nipples and radiated out. Malcolm's hands were on my shoulders, pulling me back against him, before he slid them down to my breasts. I laid my head back against his shoulder as he began to massage my breasts, his fingers brushing over my over sensitive nipples, making me jerk and moan. I heard people nearby, laughing and shouting coming from the beach, but they seemed inconsequential, far away.\n\n\"Please,\" I whispered, my need for him overwhelming.\n\n\"I love it when you beg,\" he chuckled darkly. \"Turn around, poppit.\" I shuffled around, my capris still around my ankles, to face him. He pulled my head back with his fist in my hair and smiled at me. It was his same wicked smile, but it was also different. A brand new smile. Or I was seeing it with new awareness, new eyes. A newly free heart. He slid his left hand from my nipples to my pussy, lightly running his fingers along the outer edge of my lips. \"You're sopping wet, aren't you?\"\n\n\"Yes, sir,\" I breathed. I was panting, right on the edge of orgasm. I couldn't help it. I didn't even want to try to help it. Jesus, why would I, right?\n\n\"You want me to make you come? Here? In public?\" he asked, looking at me closely.\n\n\"Yes,\" I whispered.\n\n\"Yes...?\"\n\n\"Yes, sir. Here. Please make me come.\"\n\nHe kissed me intensely, his lips nearly bruising mine with the force of it, before releasing me and taking a step back. He unzipped his shorts, letting them drop to his feet, and pulled out his cock, pulling back the foreskin and stroking it a bit. I moaned as the realization he wore no underwear hit me. The sun and shadow danced across it as the breeze ruffled the forest canopy, and I dropped to my knees, mesmerized by the glistening moisture on the tip. I licked my lips, my throat parched, thirsting for him.\n\n\"Tell me what you want,\" he demanded. \n\n\"Your cock in my mouth.\" I looked up at him and he smiled, raising an eyebrow. He wanted it, just as much as I did. He nodded at me and caressed my cheek as I leaned forward, bracing myself against his thighs. I slowly licked the head as it oozed his come, looking into his eyes as the taste of him took over my senses. I took my time, my tongue making lazy circles around his crown, raising one hand to caress his balls and toy with the ridge of skin that hid behind them. I could feel him tensing, getting ready to grab my head and force himself down my throat, and I ran my tongue down his shaft, licking and sucking at his balls. He moaned, sending a shiver down my spine, and I flicked my tongue back along his shaft to the tip to tease him, lashing his slit with the tip of my tongue.\n\n\"Enough,\" he grunted, grabbing my head and forcing his cock down my throat. I moaned around him, wrapping my right hand around the base of his dick, squeezing and stroking him in tandem rhythm to my mouth. \"Is this what you wanted? You wanted me to fuck your mouth?\"\n\n\"Mmmmmm,\" I groaned against him, swallowing against the gag reflex as he hit the back of my throat. Every time I hummed and swallowed, Malcolm's hips twitched. I took the middle finger of my left hand and slipped in my pussy, fingering myself for a moment to make it as wet as possible before lifting my hand and pressing my finger against his anus. His fist clenched in my hair and I looked up at his eyes.\n\n\"You are about to play with fire,\" he warned. I smiled around his cock playfully and gently pushed my finger inside him, feeling along the wall of his rectum to his prostate, holding the pad of my finger against it.. Holding his gaze, I began to stimulate it, increasing and decreasing pressure in time with my mouth. He threw his head back and clenched his teeth around a groan, the sound making me shiver and moan around his cock.\n\n\"Oh god!\" he breathed, looking back down at me and fisting both hands in my hair. His hips began to jerk and I could feel tremors in his thighs. \"Fuck,\" he said as I pulled my head back, sucking harder and rubbing his gland with steady pressure. \"Oh fuck. Yes. Suck it hard.\" His hips began jerking erratically, and I could feel his cock tense in my mouth as he pushed himself further down my throat. I swallowed against the gag reflex and moaned, my finger still working in his ass, looking up at his face. He closed his eyes, his head down, grunting as his body tensed up and his hands pulled at my hair. His face hardened, his mouth twitching in a grimace as I felt his come hit the back of my throat. I stilled my finger, sucking his come out of his cock as it jerked in my mouth. I could feel my juices running down my thigh as I nearly came with him. \n\nI pulled my finger out of his ass when I felt his hands relax in my hair and begin petting my head. I moved my head back, letting his shrinking cock slip out between my lips. I leaned forward and lightly licked it, smiling at his sigh as I moved my dancing tongue to his balls. He stilled for a moment before moving his right hand to cup my cheek, tilting my head up to look at him. He smiled, rubbing his thumb along my lips, holding my eyes with the sweetest affection visible in his.\n\n\"Dress. We're going home,\" he said at last, stepping back to give me room to stand. He pulled up his shorts and stood watching me right myself. I pulled up my pants and tied the drawstring, letting the capris lay lower on my hips. I was painfully conscious of how wet I was and was trying to avoid having the linen stick to me as I walked back to Malcolm's car through the crowded park. I glanced up at Malcolm and found him watching me closely, looking like he was trying not to smile. \n\nI groaned a bit as I eased my bra down over my breasts, my nipples still quite sensitive after the clamps. I pulled my shirt down and smoothed it best I could, nodding at Malcolm. He held his hand out to me and I took it, entwining my hand in his and smoothing my other hand over my hair. He stopped me and pulled me to him, smiling as he grabbed the waist of my pants with his free hand and tugged them up against me. I hissed, pushing his hand away from my pants and tugging them back down, grimacing at the wet fabric as he laughed. \n\nWe made our way to a path, Malcolm unerringly leading us back to the parking lot. I glanced over at him, eyebrows raised. \"You know your way around here pretty well.\"\n\n\"I do. I like it here,\" he said as we stepped in to the parking lot. We walked to his car, hand in hand, glancing at each other and smiling. He opened the door and handed me in to the passenger seat before letting go of my hand. I shifted a bit, trying to sit so as not to pull my pants up against my crotch.\n\nHe got in and buckled up, glancing at me as he started the engine. He backed out and turned the car towards the exit. I shifted in my seat with a grimace, tugging at the fabric of my pants to try and keep the dampest parts from sticking to me. I heard Malcolm chuckle quietly at my attempts and looked at him.\n\n\"What?\" \n\n\"I like the dance you're doing,\" he said, smiling as he glanced at me. He reached over with his left hand and grabbed the front of my pants, yanking them up roughly. The seam mashed against my clit, making me gasp. \n\n\"Please.\"\n\n\"Please what?\" he asked, sliding his hand down between my legs and rubbing my pussy through my pants. I opened my legs as wide as I could and rolled my pelvis forward. \n\n\"Oh yessssss.\" I thrust against his hand shamelessly, desperate to keep enough pressure on my clit to come. \n\n\"You dirty little slut. You've soaked through your pants.\" He pinched my labia together hard through my pants.\n\n\"Please,\" I cried out, sliding forward in my seat.\n\n\"Please what?\"\n\n\"Oh god. Please make me come.\"\n\"No,\" he says, withdrawing his hand from my crotch. My hand moved to take it's place before I even knew what I was doing, but Malcolm stopped me. \"No.\" He glanced at me with a wicked smile in his eyes. \"If you cannot stop yourself, sit on your hands.\" I took several deep breaths and rested my hands on knees. I closed my eyes, determined to ignore what was happening between my legs.\n\n\"My poor little slut,\" Malcolm purred beside me. I turned my head to look at him, watching his profile as he navigated the streets back towards Fremont. \"Your clit is swollen, isn't it? You can feel the seam of your pants against it, thrumming with the engine, your clit getting more and more swollen as your cunt drips.\" His voice was low, rhythmic, almost hypnotic, and I was unconsciously rotating my hips slightly in cadence with his speech. \"You want me to lick and bite your cunt. You wish you could feel my teeth nip at your clit.\" \n\n\"Please,\" I nodded and moaned, the images he was creating making me crazy with lust. I had no idea how far we were from his house, but if I knew if he kept talking like that I wasn't going to make it. \n\n\"Quiet,\" was all he said in response, putting his hand back in my crotch and once again pinching my lips together. He released them and began rubbing his fingertips lightly up and down my lips. \"Sit still and do not come,\" he said, his voice low. I closed my eyes tightly against the sensations, concentrating on not moving my hips to try and increase contact. It was maddening, and he kept it up until we pulled in to his driveway. I was shaking by then, sweat on my forehead and temples matting my hair down. \n\nHe got out and came around to open my door for me, offering me his hand and helping me out before he pressed me against his car. \n\n\"What...?\" I began, but was cut off when he moved his left leg between mine, bending at the knee and raising it up until my crotch rested on his thigh. He put his hands on my hips and pulled at them to make my pussy grind against him, and I moaned, dropping my head and closing my eyes.\n\n\"Look at me,\" he said, hands holding my hips tightly. I obeyed \u2013 as I always did \u2013 and locked my eyes on his. He began moving my hips, or at least guiding their movement, grinding me into him. I placed my hands on his biceps, feeling them flex a bit beneath my fingers, as he raised his leg a little more against me. I began to breathe heavily as, already swollen and sensitive, I quickly neared orgasm. \"Do you like this? Do you like grinding your slutty cunt against me in public to get off?\"\n\n\"Yes,\" I whispered. His words inflamed me even more, making both my nipples and clit throb, and I threw my head back, on the cusp of orgasm.\n\n\"You'll have to wait,\" he said, taking a step back. \n\n\"No!\" I whined, reaching for him. He easily evaded my hands, laughing softly. I stumbled, feeling at once lightheaded and tense. \"Shit.\" I muttered, leaning back on his car and looking at him.\n\n\"It's hard to wait, isn't it?\" he asked, his smile almost tender - almost. \"When you want something so badly it clouds your mind?\" He grabbed my chin in his hand, looking at me closely. \"Your pupils are dilated and you keep licking your lips. You're so desperate to come, aren't you?\" he teased. His words were cruel, but his expression remained kind. \n\n\"Yes, sir,\" I whispered. \n\n\"Take off your pants,\" he said, dropping his hand to my left breast and pinching my nipple through my bra. \n\n\"Sir?\" I asked, hesitating. He just looked at me and increased the pressure on my nipple briefly before dropping his hand to his side. I got the message and undid my pants, quickly pushing them down before stepping out of them and putting them on the roof of his car behind me. I could feel the air cooling the dampness on my thighs; after the humidity of my pants it gave me goosebumps.\n\n\"Bend over the boot,\" Malcolm said, his eyes fixed on my upper thighs.\n\n\"What?\"\n\n\"The trunk,\" he said with a little laugh. \"Bend over the trunk.\"\nAgain I hesitated, looking around. The car was far enough in the driveway to shield most of it from the street, but if I were to lay over the trunk, my head and torso would be visible. Anyone walking or driving by would be able to see me. I looked back at Malcolm and he raised an eyebrow at me, not speaking. \"Yes, sir,\" I said at last. I bent over the trunk, splaying my hands next to my head so they were flat against the warm metal. \n\nMalcolm moved to stand behind me, kicking my legs apart with his foot. I felt his hand caress my ass, running along the welts he'd put there with the switch. I sighed, turning my head to rest my forehead against the trunk lid. I closed my eyes as he removed his hand from my skin. I wanted to look back and see what he was doing, but I wouldn't let myself. \n\nHis palm suddenly connected with my ass in a sharp slap that made me jump and moan, but I kept my head down and eyes closed. He continued to spank me \u2013 not hard, just enough to keep me exceedingly wet \u2013 alternating cheeks and aiming carefully at the same spots over and over. The only sounds I could hear were my soft grunts and moans and the sound his palm made against my flesh. \n\nSuddenly he stopped spanking my ass and began slapping at my pussy instead. I moaned loudly and angled my hips back to give him better access. \n\n\"Your cunt is soaking wet and so swollen.\" He spanked me a few more times between my legs before slipping a couple fingers inside me and fucking me with them slowly, moving his fingers periodically to stroke my clit softly, his actions performed in a way that would move me to the edge of coming without allowing me to. \n\nIt was torture. Delicious, sadistic, wonderful torture. He kept me dangling at the edge of coming for what seemed like hours, centering my universe on his hands as they manipulated my flesh. All I could do is lay across the trunk of his car and submit to him, whimpering incoherent pleas for release as my pussy juices ran down my thighs and his fender to collect on the ground below and the sun pinked my ass. \n\n\"What was that?\" he teased, his finger stroking me so lightly I could barely feel it. \n\n\"Please,\" I mumbled, my forehead still pressed against the trunk. I was making fists with my hands, closing and opening them repeatedly.\n\n\"Please what?\" he asked, lightly slapping my pussy. I was so wet it sounded like a rubber ball hitting the surface of a pond.\n\n\"Please make me come,\" I whispered. He rewarded me by pinching my clit briefly before slipping his fingers back inside me. I whined in protest.\n\n\"My sweet, dirty little slut wants to come?\" He pulled his fingers out of my pussy and used both hands to spread my lips wide. \n\n\"Please,\" I begged.\n\n\"You're so swollen,\" he said, spreading me even wider. \"Your clit is so hard and your cunt is dripping all over my car.\" He began making circles around my clit, using a barely perceptible touch. I tried to angle my hips to increase the contact but it didn't work. \"So desperate to come, aren't you my little slut?\"\n\n\"Please. Please. Please,\" I sobbed. It was the only word I could form, all other thought obliterated in the riot of need from my pussy. I was panting and sweating and drooling, and all I could think about was how badly I needed to come. I felt my lower body tremor as Malcolm caressed my ass with both hands, the gesture at once consoling and enflaming. \n\n\"You want to come?\" he asked, squeezing my cheeks before slipping his fingers back inside me. \n\n\"Yes,\" I panted. \n\n\"Yes..?\"\n\n\"Yes, sir. Please make your slut come,\" I begged. \n\n\"Very good,\" he whispered, bending over me to speak directly in my ear. \"Come for me.\"\nHe began moving his fingers in and out of me hard and fast, thrusting them in and down, creating delicious pressure while he used his thumb to flick and rub my clit. He kept his mouth by my ear, whispering to me about how hard he wanted me to come, how wet and hot and swollen my pussy was, his words sounding like the sweetest love ballad. It was almost too much after such a long build up, and I came instantly, and kept on coming. I was crying and moaning, my head tossing from side to side while my entire body jerked in spasms as if I was being electrocuted and I took in air in great gulps. \n\nI don't know how long it lasted, how long I laid over his car crying in ecstasy, how long he whispered so sweetly in my ear while his hands played my body. When I could think again I was still crying and breathing hard, still over his car, my hands in fists and my legs shaking while Malcolm ran his fingers through my hair and planted soft kisses on my neck and ear. \n\n\"Malcolm?\" I croaked out, my throat parched.\n\n\"Right here,\" he whispered. I turned my head to look at him. He was leaning on his elbow to my left, looking down at me and smiling. He wiped at my cheek with his right thumb.\n\n\"Sorry,\" I said, wiping at my face with hands that shook uncontrollably. \"I don't know why I can't stop crying.\" He smiled and leaned forward to kiss my cheeks.\n\n\"Can you walk?\"\n\nThe question struck me dumb, bringing me back to the realization we were still in his driveway. I began to giggle, blinking at him through the tears I couldn't seem to stop. I could feel hysteria nibbling at the edges of my consciousness, seeming to search for a way in. Malcolm must have sensed it, too. He started murmuring to me softly and placed a hand on my forehead, forcing my attention back to him. It calmed me.\n\n\"Sorry,\" I said again, my voice the slightest bit steadier.\n\n\"Shhh. It's alright, love.\" He leaned forward and kissed me lightly before standing up. \"Come, let's get inside and have a shower.\" He put his arms around my waist and helped me stand, letting me lean on him for support. My legs felt like jello, but I wasn't totally incapacitated. We made our way inside and up to his bathroom; he kept an arm around me the whole way, nearly carrying me up the stairs. He sat me on the counter and started the shower, helping me take off my shirt, bra and sandals before undressing himself. \n\nWe got in and just stood under the water for a bit, arms around each other. I had my head on his chest and could hear his heart beat. It was strong and steady, and it soothed me so much I could have closed my eyes and fallen asleep where I stood. Eventually we moved, washing each other gently and thoroughly, taking our time. I don't remember either of us speaking the entire time we were in the shower, even though we were in there for quite a while. \n\nWe spent the rest of the day inside. I didn't even bother getting dressed, just put on one of his t-shirts to lounge around in. We ordered Chinese for dinner and watched 'Evil Dead 2' before going to bed to sleep. I felt emotionally drained and overflowing at the same time. ",
        "It was a great feeling.\n\n\"Melody?\" Malcolm asked as he spooned up behind me.\n\n\"Hmmm?\" I murmured, running my hands up and down his forearm as it laid across my abdomen.\n\n\"Move in.\"\n\"What?\" I asked, turning over to face him. I could see his expression clearly in the light that came in through the open curtains. He looked serious. And confident.\n\n\"Move in.\"\n\"Here? With you?\"\n\n\"Yes,\" he said, chuckling a bit and kissing the tip of my nose.\n\n\"Yes,\" I said after a moment's thought. (Seriously \u2013 like I could've said no, even if I wanted to.)"
    ],
    "authorname": "wanderingmindgames",
    "tags": [
        "woods",
        "fellatio",
        "spanked",
        "bent over",
        "nipple clamps"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/bliss-ch-07-1"
}