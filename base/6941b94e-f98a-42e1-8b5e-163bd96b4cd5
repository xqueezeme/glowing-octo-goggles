{
    "title": "Medusa: Fate's Game Ch. 13",
    "pages": [
        "~~Darian~~\n\nDiscovering that the red-eyed guards on the bridge were actually undead was an unwelcome surprise. He should have guessed it; not the first time he'd fought Andromeda's summoned skeletons.\n\nSkeletons shouldn't have been able to scream, though. They didn't have any flesh or throat or muscle. They shouldn't have been able to do anything but lay on the ground, like dead should. But his eyes and sword told him differently as his blade hacked through bone, bone, and more bone. Their arms fell, their heads, sometimes their legs, but every fight was a dance with death in a way he wasn't used to. Cut the arm off a living, breathing thing, and they went down. Stab them in the gut, and they died a slow, miserable death, and they'd be of little use for the rest of the battle. Get them in the neck and they died instantly.\n\nThe skeletons didn't care if you cut off their head. If you managed to get through the waist of the breastplate and into the stomach, again they did not care. If you cut off their arm, they reached for a weapon with their other arm and kept coming. One mistake and he'd get a spear in the face, and making a mistake would be easy with the skeletons ignoring all the rules.\n\nWorse was their screams. Their mouths opened, their eyes flashed red, and a raspy sound filled his ears, like a wailing wind mixed with scraping rock against rock. And they screamed from their bodies. The heads were lifeless once removed, and their glowing red eyes faded quickly, but the headless corpses still screamed the odd sound, and stabbed at them with brutal tenacity. Like Otrera had noticed earlier, the guards were dumb, but that didn't mean they couldn't keep stabbing and stabbing until they were in bits.\n\nHe'd rather have fought the manticore, but Chimera's surprise attack had dealt with them.\n\nPegasus rode up the hillside, wing ruined, Perseus on his back. Darian winced and looked back at Medusa. She looked destroyed. It had to be done, and Pegasus would understand, but he didn't have time to explain that to her. He only had time to keep hacking away and keep moving forward. Don't stop, don't let the enemy adapt to the insanity of their strategy; it was its only true value, the absurdity of walking up to the sorceress's front door.\n\nHe slammed his shield out and buried the huge disc of black in the chest of one of the guards. The skeletons were armored, with shields and spears of their own, and killing them was becoming less of a battle, and more of an exercise in endurance. But they were just skeletons, light, and as he started to crash his shield into them with all his strength behind the swing, the results became explosive. Bones shattered, limbs fell away, and the undead started to crumble under the force.\n\nBut just as he was getting into a new rhythm, he looked up at the sound of someone's voice.\n\n\"You will all suffer for this. And Otrera. You betray me? After all I've done for you?\"\n\nHe found a moment to get his breath. What few skeletons remained were either in front of him, and being stomped into powder by Chimera, or behind him. The mob was doing good work, swarming over the remains of the guards, and attacking the few the three of them had missed.\n\nDarian struggled to get his lungs working again. Sweat started to bead on his forehead, and his muscles in his arms started to ache. Only a little, only enough to tell him he was going to get tired soon. Bad time for the sorceress to appear.\n\nOtrera raised her voice. \"You deceived me! Tricked me! These people do not deserve to die!\"\n\nDarian frowned and glanced back at the mob. A swarm was too accurate a word. Locusts. He couldn't entirely agree with Otrera.\n\nLightning struck, close enough to blind him for a moment, and loud enough to shake the very ground he stood upon. He gasped hard, and caught himself holding his breath as the thunder worked outward. He knew the feel of lightning, the sound of thunder. Knew them too well.\n\n\"You bring a swarm of insects to my door, and hope to do battle? So be it.\" Andromeda slammed her staff down from on high, and unleashed havoc.\n\nRed eyes started to join the white sorceress. More. And more. More until Darian was left blinking, eyebrows raised, and looking around to see if the other skeletons were indeed destroyed. They were.\n\nBut the wailing wind cry of a thousand undead filled the air, and stopped everyone. Chimera finished with the last of the guards before him, reached up to his chest to pluck a spear from his flesh, and stared at the oncoming cloud of red dots. Otrera's raised sword slowly fell to her side. The mob behind him all came to a standstill as Medusa slithered up to stand near Darian.\n\nThe eyes of the undead flowed over the mountainside road, but did not follow it. Like water, they poured over the mountain and down toward them, stopping on the mountain road only long enough to run across its width and then back down upon the nearly flat cliff face.\n\nAs they came into view, lit by stars and torchlight, more people began to gasp, and step back. The eyes of the undead running down the mountainside, ignoring the road, were literally running down the cliff wall. Their arms were held high, and the glint of metal caught the moon from each hand. These undead had no armor, sported no spears or shields, but swords and axes instead, and their mouths were open as they screamed their death wail upon them.\n\nOtrera bashed her sword and shield together. \"Flanking positions! Darian, Medusa, up the road. Chimera says you can fight, Medusa, prove it. Start shooting, and when it's time for melee, transform.\"\n\nMedusa slithered up between them. \"B-b-bu\u2014\"\n\n\"No buts! Shut up, get over here. Chimera, here next to me, away from the cliff side. They're not shields and spears, they're swords, axes, and a lot of them. You'll get hacked to pieces if you take them head on.\"\n\nChimera obeyed. Not a moment of hesitation or even a glance the queen's way to check if she knew what she was doing. Giant had a lot of faith in the Amazon.\n\n\"And you!\" Otrera pointed to the mob that had slowly come to a stop behind them. \"Form ranks! Shields at the front! Xiphos swords second row, Kopis swords third row.\"\n\nA new thunder joined them from the small warrior woman. Otrera cut through the noise, the panic, the growing cries of the mob, and shut them up hard. Darian took a step back from her, eyes wide, as the queen pointed her sword to the crowd and then where she wanted the line formed on the center of the bridge.\n\nThey looked to each other, to Patrius, Tritus, to Hieremias, but Otrera took a step toward them, and frowned.\n\n\"Now!\" Thunder once again.\n\nAnd the people listened. No longer a riot, or a mob. Now they were an army. They pushed past each other, did their best to get into the positions given them, and prepared themselves. They knew each other at least, and working together was something many had done before, Darian could see. They got shoulder to shoulder at the shields, swords up and ready.\n\nHow could such a tiny woman make such a loud noise?\n\nOtrera bashed her sword and shield together again, and turned to face the oncoming tide.\n\n\"First row! You will defend the man next to you with your shield, and you will aim for the legs of the undead in front of you. Stay low, shield up. Second row! You will hack through the arms of the undead that break against the shields. The enemy will fall forward and onto the first row, so be ready. Third row! You will deal with any and all breaks in the defenses.\" And again, she bashed her sword and shield together. \"We will weather this storm!\"\n\nThe swarm had become the defending wall, and the enemy had become the oncoming swarm. Not part of the plan, not at all, and Darian gulped as he looked between the mob and the wave of undead running at them. Enough red dots, it looked like a river of red was streaming down the mountain.\n\nBut Darian's heart settled as he watched the mob fall into formation, and their wide eyes harden, along with growing \u2014 if nervous \u2014 smiles. Damn that woman could lead.\n\nThe four of them turned to face the wave, and prepared themselves. A loud snap of a string forced Darian to look Medusa's way, and he smiled as the gorgon unleashed one of the large arrows onto the waves. And another, and another. She shot fast, and pulled the arrow deep each time, deeper than any human could. And each time, the arrow crashed against the rocks above them with a visible crack of light. The unusual, large tips of each arrow must have been tearing through the rock and creating sparks. Skeletons started to shatter. Wherever Medusa's arrows managed to hit one, the undead ceased to exist as the arrow ripped it apart.\n\nBut there were hundreds of them, and while each shattered skeleton brought a cheer from the crowd, it did little to stem the tide.\n\nAnd when the tide finally came to join them, it was a sea of bone. Swords and axes running fast and wild as the skeletons landed upon the bottom of the mountain road, and ran toward the bridge the four monsters blocked off. Wails of unnatural death reached a new height.\n\nBut once the blades were within reach, and Darian was forced to engage, that was when things got easier. He turned off his brain, turned off the thinking and the worrying and the dreading, and embraced what he did best. The glow of his eyes returned, Otrera's as well, and the two of them stepped in toward the river of the dead. The wave came at them, crashed into them, and the two Fate's Children each put a large dent into the tide as they lashed out with shields first. The ring of ax and sword against his black shield was music in his ears. The shatter of bones against it his melody, a sound he'd never heard before this battle, and adopted as his new song. His feet kept him grounded, his sword sliced through undead with ease, and his armor blocked the reign of white shards.\n\nToo many. Soon he could no longer see past the wave to the other side, to Otrera. Chimera was tall enough he could see him, but to get to him would have been crossing death. The undead were everywhere. He stepped back and back, with the occasional veering of a skeleton or two from the swarm pushing him away from the bridge, and further up onto the mountain road.\n\nMedusa stayed behind him, unleashing her volley of arrows. From so close, it must have been easy for her to hit her targets, and the arrows were able to tear through multiple skeletons in a single shot. Bones were everywhere, and they fell around his feet as his sword cut through rib cages, spines, arms and wrists. White splinters washed over the ground like water, and he continued to step back and further up the mountain, Medusa still behind him.\n\nHe managed to peek toward the bridge he was being pushed away from, and grit his teeth. The wave of bone met the humans like a ravenous flood, and the layers of white crashed into their shields.\n\nBut their lines did not break. Yet. The mob held strong, and did exactly as Otrera told them. The front line got low, down to a knee, shield up to guard their heads and chests while they sliced for the legs of the skeletons. The undead crashed upon them, hacking down but unable to break their shields, and the men and women behind the front lines cut and hacked at the undead that came up and over the barrier.\n\nBut the undead were endless. So many red eyes, they outnumbered the torches until their eerie glow was enough to match the light of the fire. The whole bridge and mountainside looked alive with red fireflies until they came closer, and the obsidian magic that hid their corpses was peeled away. They smashed against the mob's shields again, and again, until they cut through the center and started to pour over the people.\n\nScreams of agony joined the choir.\n\n\"No!\" Medusa started to shoot faster, but the two of them continued to get pushed up the cliff road. Further, and further, until the winding turn of its rising length cut around the mountain and blocked their eyes. They couldn't see the battle anymore, but they couldn't push forward with dozens of the mindless abominations in front of them either, swinging their weapons with reckless abandon.\n\nThe gorgon shrieked her frustration, and threw down her bow. Her body erupted. Snake hair shot out and exploded in size, her body grew longer, thicker, and her fingernails turned into massive claws. Her face distorted, elongated, and her beautiful snake eyes shifted to the sides of her head as her human skin was replaced with large snake scales. The monster emerged, and unleashed itself on the crowd of bone.\n\nDarian thought Chimera was brutal. Medusa, now transformed, threw herself into combat with total disregard for her own safety. He called out, but in the madness and crescendo of noise, his voice might as well have been a whisper. And for a moment, he almost threw himself into the swarm to try and reach her, grab her and pull her out, but there was no way he'd be able to get her out of there.\n\nAnd she didn't need his help. The monstrous snake reached out and tore the skeletons apart like parchment. Their swords cut into her scales, but she kept moving, swiped her colossal tail, and destroyed half a dozen of the undead, shattered. Her snake hair struck out in pairs, and pulled apart the limbs of the enemy. Her blood joined the rain of white shards along the road, and as she spun around with another shriek of rage, Darian jumped back yet again, further up onto the hill to avoid her tail as much as the undead. Mistake. He got pushed further from his love as he blocked yet another skeleton's swords, and bashed them aside.\n\n\"Bellerophontes!\"\n\nWith a gulp, Darian peeked behind him. Perseus smiled at him, returned with his huge, golden shield, and sword pointed. Such beautiful golden armor, Darian was almost jealous; and the thought sickened him.\n\n\"You,\" Perseus said, and he pointed to the skeletons still swarming up the hill to reach Darian. \"Turn your attention to the gorgon and giant. Kill them at all cost.\"\n\nThe skeletons turned around and ran back down the hill. Medusa would soon have the undead on both sides of her, hacking into her with sword and ax, spilling her blood. Darian swallowed the the acid in his throat, and forced himself to stare at Perseus. If he turned his back to him, he'd lose his head.\n\n\"You're a real piece of work,\" Darian said, and he stepped up the mountain road closer to Perseus. \"Destroying lives for the sake of your fame.\"\n\n\"You're one to talk. Everyone knows of you, Bellerophontes. But perhaps they shouldn't. Slayer of Chimera, except not. Slayer of an Amazon queen, except not.\" Perseus laughed, brushed his blond hair with his sword hand, and posed for Darian with a foot forward and sword pointed high. \"A fame built on lies!\"\n\n\"Take it from a man who's lived and breathed fame, Perseus. It'll destroy you, one day at a time.\" He came closer, grip tightening around his sword grip until it hurt. He was going to cut this worthless man into tiny pieces; see him heal from that.\n\n\"It is in your power as a Fate's Child to challenge the gods as you did! And with Andromeda's help, we can be free of our chains!\" Perseus came closer as well, and as he did, he slashed out with his right hand against cliff next to him. \"You were a fool for defying Olympus so openly, brashly. But you know as well as I the gods, the Fates, they need to be removed.\" The blade, a mirror of Darian's except for its golden grip, scraped along the rock with an ear-splitting rake.\n\n\"Get to the top yourself someday,\" Darian said. \"Let it get to your head, blind you, and you'll think you can fly.\" That sword was dangerous. They both wore Fate-gifted armor, Perseus's likely from Andromeda, and it was strong enough to stop a sword. But if the sword met flesh, it was going to cut deep, if not cut a limb off entirely.\n\n\"We can fly! Pegasus is ours. Mine! He should have been mine, he was supposed to have been mine!\"\n\nAnd Perseus was upon him. The man jumped high, starting from his position higher up the rising road, and he came crashing down with his shield. Darian had to roll to the side, to the bastard's shield side. With his shield down, Darian took a chance and sliced out for Perseus's shield arm as he rolled by, but Perseus rolled in the opposite direction of him, and his shield came up to the side as a giant wall, massive, golden.\n\nThe two men got up and faced each other again. The road was wide enough for them to circle the other, and in Perseus's case, flourish his weapon several times.\n\n\"What do you mean supposed to have been yours?\" Darian said.\n\nPerseus laughed and stepped in closer. \"Andromeda knows much, fool. You have no idea what has changed from what was planned. Medusa should be dead at my hand, Pegasus mine, and my name known throughout Greece!\"\n\nThe psychopath jumped in again, but landed on his knee and foot this time, sword coming down in a chop. Darian raised his shield at an angle to force the sword to come down to his side, and when he slashed toward the exposed arm, Perseus slashed upward to catch it. The blades clashed, and the ring of metal on metal echoed into the scream-filled air.\n\n\"Andromeda can change fate,\" Perseus said. \"That is why we are here! That is why we fight upon this cliff, you and I. Oh, and such a glorious duel it is!\"\n\nTheir battle took them higher. Darian tried to inch it back down the road, to his companions, but Perseus was larger than him, stronger, with a much bigger shield. Any time Darian tried to take advantage and get a cut or stab in when the man exposed a limb, Perseus countered with a speed and accuracy that could have only come from training, from years of practice above Darian's own.\n\nDarian managed a quick peek over the edge of the road. The two of them were on the other side of the sea cliff now, and the drop to the water below was high enough to risk death. The ocean stretched out over the horizon, and a hint of sunrise wisped upon its edge. He didn't really care if Rhea died, but Medusa did. And that was reason enough to care.\n\n\"Medusa was to die at my hand, and Pegasus was to be mine. He and I, we were to rescue Andromeda from the sea creature. She and I were to rule!\" Laughing loud enough to carry over the battle below, Perseus stepped in and stabbed forward as he slammed his closer foot into the ground. Darian blocked it and sent the attack to the side, but Perseus capitalized, and rushed in with his larger shield. Shield to shield, larger man against the smaller, Darian fell and rolled backward onto his feet. \"We gave up that destiny.\"\n\n\"I hear she plans to kill the Fates,\" Darian said. \"I don't entirely disagree with that plan, but enslaving a city, sacrificing people to fuel rituals?\"\n\n\"You would sacrifice them too if they were destined to tie you to a rock and sacrifice you, Bellerophontes. Imagine your own family, your own people, your own mother and father, chaining you and leaving you for the sea creature.\"\n\nDarian gulped again. He remembered the sea creature that destroyed the prison ship, quite vividly.\n\n\"If you had left Pegasus out of this, I would have let you and Andromeda continue your plan, Perseus. Even after you tried to kill me, I would have let it happen.\"\n\nThe beautiful man stopped, lowered his sword, and blinked. \"... all this for a horse?\"\n\n\"He is no horse! A horse cannot draw pictures in the sand. A horse cannot play games with you. A horse cannot shield you from the rain with its wing! A horse cannot... a horse cannot be your best friend. A horse cannot hit you when you are being rude to others, or congratulate you when you are kind to others. A horse cannot share in your vision to see the top of Olympus, to challenge the gods and their rule!\"\n\nThe white of his eyes grew with his rage, until the road about the two of them shone with its glow. How dare this man, how dare this psychopath, this idiot fool, this stupid fucking piece of shit, cast Pegasus aside like dirt.",
        "\"Where is he!?\" Darian came at him again, faster this time. Perseus took a step back and raised his shield, and Darian crashed upon it with his own. Instead of letting the weight difference send him to the floor, Darian drove his weight into his feet and into the air. Up and to the side, he slashed out at Perseus, and again the man took a step back as he brought a sword up to deflect. \"Where is Pegasus!\"\n\n\"You are the ones who shot him!\"\n\n\"Better that than let a murdering psychopath leave with him, a slave to him!\" Again, faster. Darian ducked lower, sliced up, and again Perseus took a step back, but Darian didn't let him. He got in close, shoulder in, and spun out his shield hand to crash it against the bigger man's breastplate, toppling him. \"Where is he? Where is he!?\"\n\nPerseus got down, far down, further than Darian expected. Before he knew it, a giant gold shield was underneath him and launching him into the air, flipping him several times before he landed twenty feet away on his stomach. Chest crushed and back bent, the wind burst from his lungs and refused to come back. He raised his head, focused through the pain and blurry vision, and rolled to the side as Perseus stabbed his sword down and into the rock of the mountain next to him.\n\n\"Your beloved horse \u2014 bleeding profusely I might add \u2014 is in the acropolis with Andromeda.\" Perseus stomped after him, his eyes glowing to match Darian's. \"Defeat me, Bellerophontes, if you can. Pegasus is mine. And soon, so will be Medusa's head.\"\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~Chimera~~\n\nIt was like swimming in bone. There was no blood to these enemies, nothing for him to sink his teeth into, nothing to tear and bite and rip apart. There was little satisfaction in smashing bones to powder.\n\nBut when swords started to cut into him, atop the spear wounds that were still healing, pain was a marvelous stimulator. He had no shield to defend himself; perhaps he'd look into getting one made for him when this was done. The humans would owe him one, and a shield made for his strength and size would be a grand thing indeed.\n\nAs the skeletons swarmed him, the idea made him smile. But their sword bites drew his attention back to the pain, to the immediate, to the sight of his own blood dripping onto the mountain road before the bridge. The great bridge was behind him, and the undead swarmed over it to crash against the mob's phalanx. The phalanx was holding though, and that too made him smile. Queen of the Amazons was a true marvel.\n\nOtrera was close to him, out of range of his sweeps, but close enough he could still see her as he destroyed the bones around him. And destroy he did. They were just bones, and without the protection of muscle, skin, sinew, and blood, bones shattered. He dove through them, leaned in to tear them apart with his arms and claws. When their swords raised to stab at his face, he stood up, and kicked out in horizontal swipes. What few managed to not shatter, or ducked, he stepped onto and ground their bodies into powder.\n\nSome of the undead dropped their swords from the impact, and in the chaos, they scampered up his body. Without weapons, they could do little damage, but they clawed and bit with their weak fingers and teeth, enough to hurt. He roared and reached up to grab them, but they hid in between his shoulder blades, and he spun around to try and dislodge them. But he was no fool, he had a job to do: kill everything. He did not let the undead upon him distract him for long before he got to all fours, and dove into the mess of bone and swords.\n\nOtrera was doing fine, though she was drifting back onto the bridge, and stood upon it at the gate where it connected to the sea cliff. Sword and shield up at all times, the Amazon cut any undead who approached her into pieces. Some were smart enough to block with their swords, but the Fate's Child was strong enough to send them down to their knees where a sword cut through the spine, behind the chest, and shattered their core.\n\nThe mob phalanx broke. Shields fell to the sides, and the sea of bone poured between the broken dam. Moments later, an inhuman shriek joined the mess. The gorgon joined them.\n\n\"Medusa!?\" Otrera stood in the middle of the bridge gate, cutting nearby skeletons as they ran past her. \"Where's Darian!?\"\n\nMedusa did not respond. She was transformed, her mane of pythons high in the air, like striking vipers. What few of the crowd managed to get a glimpse were stunned before their attention was forced back to the undead at their feet. But that changed when Medusa threw herself upon the bridge onto where the skeletons clashed against the humans.\n\nMassive tail and body swiped through the undead, and knocked a dozen of them back and over. Many fell off the bridge, many fell apart, some shattered completely. And what ones did not shatter were torn apart by the serpent's massive claws. She struck out, fast, faster than Chimera knew the colossal creature capable of, and slashed. Claws cut through bones, and her python hair struck out to grab and rip and tear.\n\nBefore long, the waves of undead crashing into the mob stopped, if only for a moment, and the phalanx reformed. The unending sea of bones and swords were too busy with the giant serpent to keep attacking the phalanx. They cut and slashed and pierced her scales, and she bled, but did not falter. Her monstrous shrieks broke through the noise, and her snake body crushed yet more of the tide.\n\n\"Enough.\" Andromeda's voice rolled down the mountain and into their ears. A sorceress's trick, no doubt. \"If you must all die, then you die. I will find a new city to sacrifice.\"\n\nChimera blinked up at the white robes far above. She did not lack for confidence, and her voice of ice froze the air around them. Staff raised, arms up, she slammed the staff grip down upon the stone once more.\n\nEverything started to shake. Chimera knew the feel of earthquakes, of Gaia's voice and life, but this was not it. The skeletons faltered, the phalanx faltered, and Otrera and he struggled to remain standing as the ground fought against them. Only Medusa and her serpent body were left standing as the vibrations of the ground, the bridge, and the very air grew until Chimera could feel it in his bones.\n\nAnd the water started to move.\n\nNear the edge of the mountain road, Chimera looked out over to the water below, and gasped. It rose as would a mountain from the ocean floor. Blackness cut through the blue, lit by the sparkling stars and the falling torches, and rose higher until it pierced waves and dark depths. A mass he could not understand, only a stone's throw away, started to reach up from the sea near the cliff, and latch onto the rock with a tendril as large as the entirety of the mountain road.\n\n\"Do not stop fighting! Get up!\" Otrera managed to get back to her feet, but even with both sandals planted to the wood of the bridge, she couldn't hold her balance. Everything was shaking, the waters churned with rancor, and a low moan Chimera could not hope to match started to grow louder over the panicked cries of the civilians. \n\nAnd louder. Loud enough Chimera raised his hands to try and block it out, but the deep groan of the sea vibrated through the air until he could feel his organs tremble in his gut. He stumbled around, leaned against the mountain, and stared out over the sea where the rising peak of dark continued to surge upward. It rose higher than the bridge, and then twice that, and higher again until what trickle of sunrise had been teasing the horizon was lost behind its mass. Water poured from its surface, and crashed against the sea with thunderous applause.\n\nAs the mountain of black rose higher, the air grew wet, and harsh. The clear skies started to howl, and low clouds formed from nothing. They pooled around the monstrosity's rising head, covered its titan eyes and teeth in a haze of mist, and dripped rain over the sky.\n\nA hand \u2014 a limb of some sort rose from the water, and it too sent the sea cascading over its body as it broke through the water's surface. It crashed into the mountain, and what rumbling there had been before became a roaring earthquake that ripped everyone off their feet again. Even Medusa tumbled and fell against the wood of the mighty bridge.\n\nThen it bellowed. A powerful stink of death and decay poured over them as it roared against them, and everyone covered their ears as the sound sunk into their bones and teeth. Another of its tentacles climbed from the sea depths and onto the mountain of the bay, each limb a slow-moving mass, as if they were watching the sea itself strike out. Heavy, slow, inexorable, and merciless. Barnacles spotted the deep blue skin of the tentacle as it wrapped around the cliff, and its main body soon stood as tall as the very mountain the acropolis sat upon.\n\nCetus, still alive after thousands of years. Not once had Chimera ever seen the creature, only stories. And the stories paralyzed him, as the creature did now.\n\nIt roared, and the air broke apart. Again another of its limbs broke through the sea surface, and up into the air, high above them, each claw upon its fingered hand as big as Chimera himself. There would be no fighting this monster.\n\nAnd yet, as the hand came down toward the bridge Otrera and Medusa fought upon, Chimera ran forward. Movement almost stopped, the air heavy and thick, the rampant panic slowed down until it was all a gentle dance. Everything seemed frozen in time as Cetus's great limb fell toward the bridge.\n\n\"Chimera, what are you doing?\" the beast said. Its horns came from the shadow of the bones around Chimera's feet, and soon too did its eyes and teeth. The gold mane of its head flickered through the death around it as it dragged itself up out of the ground to stand in front of Chimera.\n\nAnd still everything was slow. Chimera's movements, Otrera's and Medusa's, the people, what few skeletons remained. The world came to a near halt as Chimera started running toward the bridge. All of it at near dead stop, except for the beast and his words to offer it.\n\n\"I'm saving Otrera and Medusa.\" And he was. His feet dug into the rock beneath him hard enough to tear open dirt and crush pebbles. He was sprinting, he could feel his lungs fight for the energy to catapult himself toward the Amazon, but the world slowed until he could see the drops of sea water raining down upon them move through the air.\n\n\"You'll die.\"\n\n\"You do not know\u2014\"\n\n\"Look, you worthless fool! Cetus is as old as the Earth and Sea. It will turn you into a bloody heap of severed limbs the moment it touches you.\"\n\nChimera grit his teeth. But still he moved forward.\n\n\"I made a promise.\"\n\n\"You will die!\" The lion darted around, light as the wind, unaffected by the slowness that stopped the world around it. \"You will die and all of your hopes and desires along with you.\"\n\n\"And so will you.\"\n\n\"Fool! Coward! Disgusting, worthless! Stop!\" The lion got between him and the bridge, roared its defiance, and slashed at him. Its claws passed through Chimera's body as meaningless as a light breeze. \"Everything you have lived for, survived these centuries for, will be gone!\"\n\n\"It was not worth what you have done to me, beast.\" The damn thing would never understand, driven by pure instinct and rage. What was the point of living if all you had was your own thoughts, and no one share them with?\n\n\"I'll leave you alone. I'll stay in the shadows and just watch then! I'll let you have your peace, just stop! You can't die!\"\n\nChimera smiled, and kept moving. The beast's voice faded, became a quiet whimper of a mewling cat, and passed through him as the giant moved through it. It reformed behind him, at the edge of the bridge, and Chimera made only the smallest glance over his shoulder to see it crying out after him.\n\nThe beast would never understand. But Chimera did.\n\nHe grabbed Otrera. She was struggling to find balance in the unending quakes, and could only stare at him with wide eyes as he grabbed her waist with his hand.\n\n\"Chimera! What are you\u2014\"\n\nHe threw her. Light, weightless, the tiny, beautiful Amazon flew through the air, off the bridge, and onto the mountainside road. No time to see how she landed, now time to see if the woman would thank him, or hate him, curse him or love him. No time to see how any of that small bundle of hope and joy would grow. No time for any of it. Sorry.\n\nThe undead that fought for their balance were easy to ignore. But Medusa was still surrounded by them, and some of them were strong enough to latch onto her and bite her, claw at her, some even still had their swords and stabbed her scales and thick snake muscle.\n\nThrowing her would not be so easy. She was heavy, large, and in her panicked fighting, tried to push him away. But he got his large hand underneath her center, and the other under her torso. And he threw her with every last ounce of strength he had, until he felt his knees click and his back scream.\n\nBut he succeeded. The gorgon crashed onto the road not far from Otrera, rolling with the hard impact of her huge body. Saved, for now. It was the best he could do, and he smiled up at the oncoming monstrosity above him.\n\nHe managed a quick peek at Otrera where she sat against the cliff wall. Images slipped into his mind of the two of them, holding each other in the woods. Images of the two of them hugging each other, her little body in his arms, how her waist fit into his palm, how her kiss was tiny against his lips. How her\u2014\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~Medusa~~\n\nShe'd never been thrown before. She'd never had to land hard either, and especially not when transformed. Her heavy body hit the rock earth, rolled over itself along the mountainside road, and crashed into the flat wall of the cliff. With a few dozen feet of snake length to deal with, thick and heavy muscle, it made the impact harsh and painful. But she managed to get her bearings quickly, put her claws to the ground, and get up to look at the bridge.\n\nThe sea creature's hand collided with it. For a split second, a single tiny moment, she could see Chimera on the bridge, directly underneath the monster's hand. Directly where Medusa had been. He was looking her way, Otrera's way, and there was a smile on his face.\n\nThe bridge shattered. An explosion of splinters and water erupted, and the air cracked with thunder as the bridge shattered inward, before exploding up and outward. Medusa threw herself to the ground and covered her head with her claws. Snake hair did the same as best it could, flattening to her body and coiling against itself while wood and bone and bodies rained down upon them.\n\nMedusa forced herself to stand once the wave of destruction was gone, and looked out to the bridge. But there was no bridge. Most of it was gone, and what little was left of it was on the other side of the bay. The people were in ruins. She could see many were still alive, on what little was left of the bridge, and they were scampering to get up and away from the sea monster. Many started to carry injured people, and many more stood there with heads up and bodies frozen.\n\nMedusa peeked down over the destroyed bridge. Bones still rained down from above, and splashed into the bloodied water before sinking. Bodies were everywhere as well, and not all of them were dead. Many were ripped apart, and others cried out with gargled voices before they sank beneath the surface.\n\nThere was no Chimera.\n\nStomach wrenching, she turned away. Otrera! She looked to the Amazon, but the little warrior was on her side against the cliff wall, and her eyes were closed. Medusa reached down and touched her, and relief washed over her; unconscious, but breathing. Being thrown through the air was not a pleasant business, and the Amazon must have hit her head when she landed.\n\nA roar broke the air once more, heavy with thunder and the stink of rot. The sea creature raised its hand, a cumbersome motion that took time, that sent splashing waves over the people and the mountain as it fought against its own weight. Its tentacles tightened against the bay cliff, until rocks started to fall into the water from the power of its grip.\n\nIt killed Chimera.\n\nShe shook her head and looked at the hand it was lifting. The hand was as big as a temple. And it had landed directly on the giant.\n\nIt killed Chimera.\n\nShe choked on tears, and shook her head again as she raised her claws to her monstrous face. No, no no no. Otrera! Otrera... Chimera... She shook her whole body and slammed her tail length into the ground. She shook and squeezed her own arms in a tight hug, and wrapped her mane of pythons around her until she wanted to curl up into a tight coil.\n\nBut the sea creature's roar forced her to look its way.\n\nIt killed Chimera.\n\nShe lowered her arms, stood up tall, and stared at the giant beast, the towering monolith of blue and barnacles and death. She stared at it, and slithered higher up the mountainside road, up along the path, until she was staring it straight on.\n\nAnd it noticed her. From high above where mist clouds had begun to form around its head, it looked down at her, and roared its might and power until she could feel the vibrations in her intestines. It roared until her bones trembled, and her scales inched along the sand from the shaking earth.\n\nAnd she returned it with her own. Her monstrous voice, layered with rasp, hiss, and a harsh shriek of high-pitched fury cut through the deep, bellowing waves of its roar. Her mouth opened wide, fangs and forked tongue on full display, and her snake hair did the same. She shrieked until her voice was a banshee's cry on the mountain air.\n\nGold erupted from her face. Yellow snake eyes as wide as they could be, she poured herself into her gaze, and screamed into the air as the golden glow of her eyes surged. It expanded more, and more, until she could no longer see anything but gold and the blur of the mighty creature in front of her. Until it was a wave of gold against the distance, against the size, until it was a crashing tide of gold radiance against the mass before it. Until the sky was lit by her and her alone.\n\nIt roared its defiance. Its tentacle limbs tightened around the mountain until a new torrent of rocks fell into the sea, and it raised its hand to brace its colossal weight against the mountain road near Medusa. She felt every tremor, every breath of the entity as it shifted its mass toward her. It was going to crush her.\n\nBut she did not stop. She screamed into the sky, spite and contempt pouring out of her, until she could feel new layers of her monstrous voice emerge, until she no longer sounded like herself. Until she sounded like a host of banshees.\n\nA loud crack nearly broke her concentration. For a moment, she thought the mountain was falling on her, but she couldn't stop. The beast's head approached, teeth on full display in a face of warped flesh. It got closer, and closer, and as it did, again she heard the snap of cracking rock, and something else, something like flesh grinding. Something like a sound she was all too familiar with: the sound of a human being turned to stone. It got closer, and closer, and it brought its teeth together, gnashing them with its slow, cumbersome, titanic movements until it was only fifty feet from her; a small distance compared to its size. But it got slower still, and slower, until it stopped.\n\nIts skin started to change color. The dark ocean blue, covered in barnacles and other bits of the sea, started to turn. Grey crept up its mass, clawed up its arms, its tentacles, and up its alien face. Grey overtook its shape, its mass, until its roar was silenced, until its movements were petrified, until the sea calmed around it.\n\nUntil at last she heard the crunching of bone \u2014 if it had bones \u2014 and skin and muscle constrict, freeze, and solidify as stone became it. Until it was done.",
        "She collapsed, hand against the mountainside. Behind her and further down the road, she could see Otrera was still unconscious where Medusa had left her. Gods, she hoped she was ok. She couldn't lose more, not after Chimera.\n\nThe thought gripped her, and she collapsed onto one of her hands, while the claws of the other scraped down against the cliff rock. She wanted to cry. It was the first time in her transformed state she'd ever let herself collapse, expose herself so, feel vulnerable, and she wanted to cry. Tears would not come, no matter how much she felt like they should. Perhaps snakes could not cry \u2014 and she was more snake than human, in this form. She shrieked once again, and her voice echoed in the new silence.\n\nNot silence. The sound of metal hitting metal followed her cries, and echoed down the mountain road. Darian! She forced herself up, and took breaths. Many deep breaths. Attempts to slither ripped the energy from her, and she fell forward onto her claws. Her snake hair, strong and huge in her transformed state, pushed their chins against the ground to help lift her.\n\nShe forced herself to look at the sea creature standing in the bay. Its hand was in her way, resting along the mountainside road, and big enough climbing over it would be trouble. Its body was stone, through and through, and stood as a second mountain in the bay next to the acropolis sea cliff. Big enough to defy definition.\n\nCoughing, dizzy, struggling to not fall over, she slithered toward the massive hand, and sighed relief when she saw a gap underneath its palm, six feet high. She gulped and went underneath, belly to the rock, snake hair grazing along the giant palm above her. It could come alive any minute, crush her like it did Chimera, grind her into paste.\n\nShe came out the other side and looked to the bay once more. The sea creature looked very odd, with a set of teeth against its whole body, rather than a head. A squid, but not, with arms and tentacles both. She shivered and moved on. Dead. It was dead.\n\nShe started to tremble again, and shook her head all the more. The others! Her gaze had covered the sky! She looked down from the mountain road to the destroyed bridge, and almost collapsed once more as relief filled her. The people were not stone, no one else was. Only the sea creature.\n\nRelief vanished quickly as she looked over the city people, and saw no Chimera. Don't think about it, don't think about them, don't think about him, think about Darian. Get to Darian.\n\nGetting to him was getting harder. The echo and crack of swords against shields was further than she realized, and she started to lean against the cliff as she slithered up the road. Still transformed though. Chimera had taught her to embrace her monstrous form, to be comfortable in it, for it to fuel her instead of fight against her. And she could feel it drive her, her thicker muscles and stronger snake body gripping and pushing against the road. Slowly but surely, the dizziness parted, the weight of her body lessened, and her breathing calmed. Not fully, not enough she could unleash her fury like she wanted to, but she could make herself move. And that was good enough.\n\nVoices. She got low and tight to the cliff edge, and crept along at a slow slither, until she could hear the shuffling of feet ahead.\n\n\"\u2014stone!\"\n\n\"Medusa's pretty amazing, isn't she?\"\n\n\"You think this a joke, Bellerophontes? Years of her work, undone! We will have to start again, rebuild, find a new city!\"\n\nThe crash of shields made Medusa wince. She got lower until her scale-covered chest slid along the rock of the road, slithering forward, chin only inches above the ground.\n\n\"Cry me a river.\"\n\n\"How dare you! Do you not see what we are trying to accomplish? Change fate! We are trying to free ourselves of their bonds. Surely you must know what that means.\"\n\nShe poked her head around a small outcropping of stone along the cliff wall, just enough to see beyond the curve, and to the two fighting men.\n\nDarian was down, on a knee, with his shield up and his sword arm dangling, bleeding. Medusa fought the urge to hiss, and kept her eyes on the circling madman. Perseus still had his shield, the one that blocked her petrifying gaze, but he too was exhausted and bleeding, like Darian. Not enough to fall to a knee though. And the pool of blood around Darian's feet was growing larger.\n\n\"I hate the Fates as much as anyone, Perseus, but you're a sick fuck for thinking it's ok to sacrifice a city to\u2014\"\n\n\"Think of the larger picture, Bellerophontes! As you once did. You thought to defy the gods, because you knew they controlled our lives, turned us into mindless sheep, like them!\" Perseus pointed his sword down over the ledge. Medusa only now realized she'd slithered the road long enough to circle around the mountain once, and below her, the mob could be seen again. Their torches were high, and many stared up at the second, new mountain beside them, while others were tending the wounded and pulling people away from the destroyed bridge.\n\nNot a mob, a resistance, cut into steel at a moment's notice by Otrera's words. Medusa caught her breath; oh poor Otrera. What was she going to say, do, when she discovered Chimera was gone? What was going to happen to her, with what little she had in the world taken from her a second time? By Darian's quest, no less?\n\nHer glare grew hard once more as she stared at Perseus. It was darker, now that the sea creature was near, as its body blocked the sunrise. And again Medusa caught her breath. Rhea! She wanted to save Rhea. How many had died, so she'd have a chance to save Rhea? And sunrise was coming, delayed by the new mountain she'd created, but coming nonetheless. \n\nDarian laughed, and forced himself to stand. Blood coated his fingers, and a long gash ran down from his forearm to the side of his wrist. His eyes continued to glow white, just as Perseus's.\n\n\"Those mindless sheep have souls. They have their own voices and desires. Trust me, I hate the mindless sheep as much as you, but I would never, ever presume I had the right to sacrifice them, to slaughter them like sheep. You are one seriously twisted, disturbed psychopath to think it's ok to do this to\u2014\"\n\nPerseus came at him, calm face broken into a mess of rage and roars. Huge shield first, the taller Fate's Child drove his shield into Darian's body, and sent the small man back and onto his ass. Darian managed to block it, but his sword arm dangled and waved uselessly in the air. Despite the mess of blood and groans, he still held onto the sword.\n\nUntil Perseus kicked him in the face. Medusa winced as sandal met chin, and Darian flipped backward and onto his stomach. Shield and sword fell to the side, well out of reach of the downed man. Darian tried to get up, put his hands to the ground and push himself to standing, but Perseus came over to him and put a foot on his shoulder.\n\nMedusa froze. She needed the moment, the perfect moment. And if she waited too long, Darian was going to die.\n\n\"You disgust me, Bellerophontes. So few of us have freed our minds of the gods, the Fates, and yet here you are, a slave to them once more.\"\n\nDarian reached up and grabbed Perseus's ankle. \"You're just a... rabid dog... biting its master's hand.\"\n\n\"Enough of your delusions, fool. I hope Hades treats you well.\" Perseus raised his sword.\n\nAnd Medusa was upon him.\n\nShe looked down at the man in her arms. Behind him, her right hand around his right wrist, and her left hand gripping his left bicep underneath the shield. So fast! She hadn't even tried to move, tried to notice when to go, tried to reach out and save Darian. She just did when the moment presented itself. A striking snake.\n\n\"You!\" Perseus stared up at her, eyes wide. He pulled against her, struggled, but he could not move. Not when she was like this.\n\nShe squeezed his wrist, hard, and hissed at the man as she stared at him. He cried out as his bones cracked, as flesh tore and ripped as she squeezed tighter, and tighter still, until his wrist was a flimsy slab of meat in her hand. His sword dropped onto the ground, and Darian looked from it, to her as she pulled Perseus back a few feet from him.\n\n\"You... Andromeda... you killed Chimera! Ssso many people dead!\"\n\nPerseus was caught somewhere between gargled screams and enraged roars. His wrist wasn't a wrist anymore, and when he pulled on it, it only pulled more cries from him. Tears were on his cheeks, but so too were the mad eyes of the psychopath she met in the volcano. He tried to kick her with his heels, but all his feet found were the hard belly scales of her transformed, monstrous snake body.\n\nDarian stared at her, his eyes just as wide.\n\n\"Ssso many people!\" Her snake hair snapped out, each of the huge pythons sinking their fangs into a different part of Perseus's body as she raised him higher, and higher. Soon he was above her head, and held horizontal as her snake hair bit into his calves, hamstrings, arms, neck. Every part of him left exposed by his armor, her hair bit into.\n\nAnd his cries erupted all the more when one of her pythons bit the shield, and yanked it off his arm, backward. The crack of his elbow bending much too far in the wrong direction made her stomach turn, but only for a moment, only until she remembered Chimera's face, and the sea monster that'd crushed him. Only until she remembered all the others, the first people to ever trust her, get crushed along with him.\n\nShe tore Perseus in half.\n\nHolding the body above her, but also a foot in front of her, the mess of blood and entrails spilled over the ground as the man ripped apart at the center. She threw his legs to one side and his torso to the other, hard enough the gore of it all decorated the street in crimson, and left the dying man's insides strewn about.\n\nAnd he was still alive. She glared at his upper half, flat on his chest against the cliff wall, even as he turned to face her. Mouth open, foaming, Perseus stared at her as the life drained out of him.\n\nShe looked away. She'd seen the death stare of many heroes, many soldiers. This one did not deserve that piece of her. Her tail flicked out, slid behind the man's torso, and knocked it into the sea.\n\n\"Medusa...\"\n\n\"Darian! Darian...\" Transformed, her voice was still a layered, raspy thing, distorted with inhuman hisses that covered the sound of her syllables, made them hard to understand even to herself.\n\nBut Darian smiled at her, and forced himself up onto a knee. \"Medusa. You... you really killed him. I half expected you to not.\"\n\n\"I've killed many. I didn't want to! But... but he...\" She shook her head, and reached down to scoop up her man in her hands. Poor Darian, the man was having trouble even moving, shaking and trembling. She hugged him to her breasts, but pulled him away when she looked down. Still transformed, her human skin was snake skin, and thicker, armored, hard. Not the bosom she wanted to cradle her love to.\n\nHer poor little lover smirked up at her, reached up with his good arm to touch her monstrous jaw, and rested his head upon her chest's scales anyway.\n\n\"He was better than me.\"\n\n\"He was not! You had already been fighting for sssome time!\" Oh gods, the little warrior didn't mind her transformed body. She squished him to her, and stroked his back with her claws as she hugged him. Her torso was larger now, arms thicker, stronger, and little Darian fit into the grooves of her hug like a child.\n\n\"Heh, maybe. Maybe he just wanted this more than me.\"\n\nAgain she shook her head, and set the man down against the cliff wall. \"You're wrong. You're wrong and I'll... I'll...\"\n\nBlackness took her. One moment she was slithering up the road past Darian, the next she was falling. She only managed a few feet past him when the ground rushed up to meet her, and her whole body became a heavy mess of snakes and scales. Claws caught the ground before it cracked her in the face, and she started panting as her lungs fought to get air. She glanced at her tail body, and sighed; a lot of blood, a lot of gashes, a lot of cut open snake skin and muscle.\n\nHer transformation left her. The extra weight of her larger muscles, her thicker snake scales, her python hair, everything faded away. Gasps came through, kept her from passing out, and she looked to Darian as her power bled away. He raised a brow as he watched her, but he too was panting, exhausted as she was.\n\n\"... well, you did that,\" he said, and he gestured to the second mountain she'd created. \"I guess you're spent.\"\n\n\"I am...\" She dug her claws into the ground \u2014 except they weren't her monstrous claws anymore, just tiny ones barely sharper than a human's fingernails. \"But... but I have to sssave Rhea! Have to get to Pegasusss, have to\u2014\"\n\n\"I'm going to kill them.\"\n\nMedusa stopped and stared at the ground. It wasn't her talking, and it wasn't Darian. She turned over her shoulder, and looked at Otrera.\n\nThe Amazon was covered in cuts and scraped skin. She was hunched over slightly, and she was missing her shield; her sword was in her scabbard at least. One of her eyes was closed, and blood dripped down her cheek. She wasn't like that when Medusa left her! Maybe... maybe more of the undead had attacked her, when Medusa left her? The gorgon tried to raise a hand to her lips, but even that proved too exhausting.\n\nOtrera was wielding the large white bow again.\n\n\"Kill them... fucking... kill them...\" The Amazon came to a stop beside Darian and Medusa, and she looked the two of them up and down as she did. Then she looked the trail of blood over, and the legs of Perseus that were still on the road. \"...one down then. One to go.\"\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~Otrera~~\n\nThe last thing she remembered was the sight of Chimera throwing Medusa off the bridge, and then the giant meeting the sea creature's hand. He was smiling, smiling at her, Otrera. Smiling as the colossal hand crushed him. The explosion of wood and water, bones and bodies, it'd forced Otrera to close her eyes. And when she managed to open them, the bridge was gone. Chimera was gone.\n\nShe'd drifted in and out of unconsciousness, and when she finally managed to stay awake, the undead around her were starting to get up.\n\nTen minutes later, a host of undead in pieces, and her body barely holding together, she started dragging herself up the hill. Chimera was dead? Did he survive that? No, he couldn't have survived that, just getting up the hill alone had required her to climb underneath a hand the size of several homes combined. A stone hand. At least Medusa had killed the sea creature.\n\nBut Andromeda and Perseus, they needed to die.\n\n\"I'm going... to kill them...\" She chanted the words, said them in a slow drawl as her parched throat coughed them up. No stopping, no thinking, don't think about Chimera, don't think about him, just get to the top of the mountain, get up there.\n\nGet up there and kill them.\n\nMedusa's bow and quiver sat on the street, and she scooped them up. She'd need them to kill a sorceress, get her from a distance, take out a limb or two. See the sorceress cast anything while she bled out.\n\nMedusa and Darian. She looked between the two of them, the warrior sitting against the cliff, Medusa on her hands in the middle of the road. Streaks of blood marked where Medusa had slithered up to the spot, and from the blood splatters, she recognized the slash of sword against flesh. Darian was leaking red even from where he sat, until the pool of it was growing around him. There were legs too, and she felt her teeth click as she stared at them. Perseus's legs.\n\nA smile cracked, and vanished just as quickly. Darian and Perseus had been fighting then. Darian lost, and Medusa saved him. The gorgon was a force.\n\n\"One down then,\" Otrera said, and she started walking again. \"One to go.\"\n\n\"Otrera!\" Medusa tried to slither toward her, but managed only a few feet before she collapsed again. Probably exhausted from turning the sea creature to stone. And, from the mess of organs and blood that cut across the road from the cliff wall to its edge, she must have torn Perseus in half.\n\nShe'd have to thank the gorgon for killing the man in such a perfect way. Later. Breathing deep, she reached behind her back, grabbed an arrow, and started walking, arrow in one hand, bow in the other.\n\n\"Otrera wait!\" Again the serpent tried to reach her, and Otrera forced herself to stop once she was between Medusa and Darian. \"Chimera... he\u2014\"\n\n\"Shut up.\" She shook her head, and when the serpent reached for her ankle, she kicked her hand away. \"Not now. We won't talk about it now. He... later.\" Her throat tightened on itself, and she choked down the need to sob. \"She needs to die.\"\n\n\"Otrera.\" Darian this time. Bellerophontes. The man looked at her, and she glared back at him as she reached up to wipe the blood from her bleeding eye. She managed to open it, but the flesh of the eyebrow was cut deep enough to drip red from her chin; healing, but not fast enough.\n\n\"What?\"\n\n\"You... you're going to deal with her... alone?\"\n\n\"The fuck am I supposed to do?\" She pointed her arrow down at Medusa, then back at Darian. \"You're both fucked. And there!\" She took a few steps to the edge of the mountainside road, and pointed the arrow down at the broken bridge, and the people who stood around it on the other side. \"We're the only ones who made it over here. So, you are both going to shut the fuck up, and I am going to go kill her.\"\n\nKill her, slice off her fingers one at a time, cut her gut open and let her entrails decorate the floor of the acropolis center. What did the Egyptians call it? She smiled, and licked some of her teeth. Haruspex. Divination by entrails.\n\nWhat would Ares have to say about that? She laughed again, and started walking. Fuck what Ares had to say. Fuck him, fuck his brothers, his sisters, parents, fuck the gods. What had Chimera called him? A vile, putrid mound of filth.\n\nChimera. One little touch of joy, one small drop of happiness, gone in the blink of an eye because of the very person who resurrected her. Death was far too good for Andromeda.\n\nBefore she moved around the turning bend of the road, she glanced back at Darian and Medusa. The two of them were wounded, badly. They'd heal of course, all of them would, as monsters had a habit of doing. But if she didn't do something about Andromeda, they wouldn't get the chance.\n\nShe gave them a nod \u2014 all she had to offer them \u2014 before she disappeared around the mountainside and continued along the road.\n\nHer life took its merry time dancing through her head as she continued up the path. Just a young girl, born into a rough life, pulled into the Amazon world as a child when her parents died. Determined, driven, she became a squad leader quickly, and soon the queen of her tribe. Some friends, some lovers, nothing of substance, nothing of weight. But as she reigned as queen, helped her tribe grow and become stronger, she grew to love her sisters.\n\nShe coughed and spat a wad of blood on the rocky road. It wasn't so bad that they'd died, or how they'd died. Sparta would have been proud of them to die in combat against a demigod.\n\nCourse all of that got twisted, tainted, when Andromeda brought her back from the brink of death, and gave her a second chance. Suddenly everything was about revenge, about getting even with the man who took everything from her. Didn't get to die with her sisters, but became a tool of vengeance. She knew she hated herself as much as Andromeda, but she was a little more comfortable with the idea of killing Andromeda than herself.\n\nShe nocked her arrow and stepped toward the palace gates. Four more undead, this time the ones with shields and spears. They ran at her, as predictable as she knew they would be, and up high atop the mountain, the warming sunrise and bright moon lit them clear as day. She fired an arrow into each one of them, dead center of the chest, and each one exploded with the impact of the magical arrows.",
        "And there were no more. She squinted, aimed another arrow around, and looked for the light of red eyes, for torchlight, for anything. But the only torchlight came from the center of the palace.\n\nShe stepped forward, but she wasn't focusing, and she knew it. Her eyes kept flittering around, and each time she glanced from left to right, the split moment of blur let the memories hit her. Memories of Chimera pushing her down, insulting her for her juvenile desire for revenge, memories of him insulting Ares. Memories of what it was like to kiss him.\n\nThe center of the palace was open to the sky, and at each corner a brazier sat upon gold decorated pillars. Pegasus stood beside one of the pillars, ring of gold thorns around his snout, and one of his wings partly unfolded and dangling from his side. The hole through it was big enough for Otrera to put her fist through, big enough to prevent a heavy creature like the horse from flying. Hopefully he'd heal; he was a magical creature, after all.\n\nShe stood in front of him, and met the creature's gaze. The poor thing, covered in his own blood, and letting out the occasional, quiet neigh of pain. His dark eyes grabbed hers, and he leaned forward a little, toward her.\n\n\"I'm... so sorry... about everything,\" she said. \"Gods, I'm \u2014 here.\" She took a moment to slide the thorns from his snout. Simple as that, simple as a single moment's effort was all it took to free the winged horse. No one was willing, capable to do that for him until now. Fuck that made her feel like even worse shit. She could have freed him earlier, so many times.\n\n\"Darian \u2014 um, Bellerophontes, he's down the road. Go. He... he recruited a few monsters, myself included, to come rescue you, you know?\"\n\nPegasus raised his head, tapped one of his hooves against the stone floor, and neighed once again, louder. He got in closer, nudged his head into hers, and rubbed his neck against her arm.\n\n\"Don't. Don't do... just go. I have something I need to do.\" She pushed him away, hand against his huge neck, toward the main gate.\n\nPegasus blinked a few times at her. He was a huge horse, a proper war horse, but every time the creature met her eyes, she could feel the penetrating gaze. It made her want to crumble, to break down and cry, and she couldn't do that yet. She pushed him harder, and after a few more neighs of what must have been frustration, Pegasus trotted away.\n\nShe took a deep breath. It wasn't steady. She took a few more until the catch in her throat was gone, and the breathing was solid. Focus.\n\nAhead, the doorway they'd scouted before was glowing from within, and the bones that lined the frame were far more visible. She kept her bow up, arrow nocked, and stepped down into the ritual chamber.\n\nMemories blurred. Her, sitting in a room of skulls, and the skull in the center fresh. Back then, she told herself it wasn't fresh, that they were just skulls, tools for rituals. And the mask with the glowing white eyes, the skull wearing it, it was all just Andromeda's tools.\n\nChimera would have forced her to see the truth. Swallow her bullshit and face reality.\n\nShe grit her teeth and aimed her arrow at Andromeda. The sorceress stood beside the mask, the skull, the altar, and a woman was on her knees at her feet. Alive.\n\nThe room was different than the time they'd scouted it, more like it was the first time Otrera had ever seen it. There were more skulls, extra candles were placed about on stands, and atop some of the skulls that sat about the large area. Candles were placed along the bone-covered floor in a pathway that lead from the room entrance to the altar, where candles circled it. Quite the show, quite the ritual.\n\nThe memories of walking down the same path, a lifetime ago, made her sick.\n\n\"... then Perseus is dead,\" the sorceress said.\n\n\"Yeap.\"\n\n\"And Cetus? ... the sea creature.\"\n\n\"Yeap.\"\n\nAndromeda sighed, and looked down at her sacrifice. At least Rhea was unconscious. The sorceress wasn't so cruel to sacrifice her while awake.\n\n\"I don't suppose you wonder how I did it? How I wiped people's minds of the memories, kept my curse here secret, why people here don't know who I am?\" The sorceress had her staff in her left hand, and a knife held to the unconscious woman's throat, propped up against her leg. A slip, a step back, and Rhea would slide off of Andromeda's leg, and probably slit her throat on the knife.\n\nOtrera couldn't bring herself to care. If Rhea died so she could kill Andromeda, so be it.\n\n\"Not really.\"\n\n\"You don't care why I aim to kill the Fates? Why I killed my parents? Why I sacrificed Cassiopeia and Cepheus? Why I have this mask?\"\n\nOtrera snarled and aimed the arrow a little higher, for Andromeda's face.\n\n\"No.\"\n\n\"... and yet you do not fire.\"\n\n\"Hoping you'll let the girl go before I put a hole through you.\"\n\n\"Such anger, Otrera. I gave you life, gave you the power of a Fate's Child using this mask. I gave you the power to get revenge, and this is how you repay me?\" Andromeda looked past her, and sighed. \"... Perseus is truly dead then.\"\n\n\"Yeap.\"\n\nAndromeda looked down, and took a deep, wavering breath. \"I... I did not want him to die.\"\n\nHer breath turned from wavering sigh to loud shriek when her leg exploded. The arrow tore through the shin below her right knee, and the sudden lack of leg forced Andromeda to collapse to the side.\n\nThe sorceress's knife cut into Rhea's throat, but the angle wasn't deep. Rhea fell forward and slumped to the side, and only a few drops of blood dripped from her neck. Lucky her.\n\nAndromeda wasn't so lucky. The sorceress dropped everything and clutched her leg, the bleeding stump of exposed bone, and cried openly. The woman didn't seem so good with pain, not of that magnitude. Good.\n\nOtrera walked up to the sorceress, nice and slow. The room was big, lit by many candles, and now the myriad of skulls and other bones were all quite visible. Must have been terrifying for Rhea, for anyone about to be sacrificed.\n\nBut none of that mattered right now. All that mattered was Otrera's loss. And as she stood beside the bleeding Andromeda, all she could see was everything she lost. She knew it wasn't Andromeda's fault \u2014 not all of it at least \u2014 but her hand drew her sword anyway, and she threw aside her bow into the bones around her.\n\nPoor Andromeda. Her white robe was covered in blood. Otrera chuckled, kicked the curled up woman onto her back, and planted her foot down onto her chest. With the woman pinned, Otrera pointed her sword down at the sorceress's throat, and grinned down at her.\n\n\"You don't get to whine about Perseus. How many lives have you stolen from people? How many lives ruined? If you had told me you were this heartless, this cruel, this vile a person, I would have never accepted your proposal. I would have cut you open and left you to die the moment I had the chance, instead of having to wait for \u2014 hey!\" She stabbed the sword down against Andromeda's shoulder, enough to pierce skin, enough to make the fading sorceress open her eyes again and scream. \"You deserve to die. Get that? You're no better than the gods and Fates you despise.\"\n\nThrough what was probably enough pain for many people to black out, Andromeda managed to grin up at her.\n\n\"Hate me... all you want. But if you think... I am as bad as them... you know nothing.\"\n\nOtrera sank the blade deeper. Andromeda cried out again, and reached up with one of her hands to grab where the tip of the sword was pushing into her shoulder. But fingers did little, and Otrera pushed down until the blade hit the floor.\n\nAndromeda glared up at the Amazon through her tears. \"Go on then! I die trying to save this world! Better that... than a sheep.\"\n\nBile rose in Otrera's throat, and she grit her teeth to keep herself from vomiting. Don't let the sorceress change your mind now.\n\nShe wanted to torture her, make her suffer for Chimera's death. But as she took longer than she should have to act, Andromeda stared back up at her, and tears Otrera was sure were from pain, changed. She knew the sight of sadness, the ache of morose, mourning. The damn sorceress was heartbroken.\n\nOtrera thought back to the secret valley high in the mountains, the nymphs, the way Perseus and Andromeda were so comfortable with each other. Was her mind drifting through memories of Perseus, as hers did Chimera?\n\nThe Amazon choked back a sob. There'd no satisfaction in torturing her, not now.\n\nSighing, Otrera withdrew the blade, and stabbed it into the woman's skull. Hard, fast, no time for the sorceress to react, or even fear the act. Her body went rigid only for a moment before she died. Andromeda stared up at Otrera, the rage and sadness in her eyes cutting into her as the Amazon did not break her gaze with the sorceress. The death stare. That single moment when a person's life vanishes, and you can see the afterlife through the dying glimmer of their eyes.\n\nShe should have looked away, shouldn't have kept her gaze as the sorceress died. But for some reason, she had to gaze into the woman's ice and fury for her last moment.\n\nFelt like killing a part of herself.\n\nShe stood up, withdrew her sword once again, and wiped the blood off before sheathing it. Deep breaths, deep breaths. Don't think about Chimera, don't think about him. Don't think about his big arms holding you, don't think about what it was like to feel safe in the scary beast's arms. Focus.\n\nShe looked down at Rhea, and tapped her hip with one of her feet a few times. Rhea started to groan, stir, but she didn't wake up. Drugged, probably, or under some spell. Otrera reached down, scooped the taller woman up, and took a moment to examine her neck. The wound was still bleeding, but shallow and light, nothing to worry about yet. Otrera held her in both hands in front of her, and started to walk out of the room.\n\nThe mask. The ritual room was dead silent, but she turned around to look at the mask. They came for the mask, not the sorceress, not even for Rhea truly, but the mask.\n\nThe fucking mask.\n\nShe turned around, and walked over to the altar and the skull that sat upon it. Silent. No creepy voice, no strange aura, nothing, just silence. Even as she slid in closer, reached out for it \u2014 with Rhea's upper half sitting across her arm \u2014 and grabbed the mask, still it made no noise, said no words. She half expected it to taunt her.\n\nWith a deep breath, she walked out of the room of death, and out into the sunrise.\n\n~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~\n\n~~Darian~~\n\n\"Chimera's... dead...\" Medusa slithered \u2014 dragged \u2014 herself over to him, and lay her human half upon his lap. \"He... he was on the bridge! The creature... attacked, and he...saved usss.\"\n\nDarian winced, and gulped; half for Chimera, half for Medusa putting some weight on him despite the wounds of his waist. He'd been cut a few times, shallow but enough to get some muscle, and it was leaking red on the ground around him.\n\nBut he didn't say it. He reached out, put his hand on her shoulder, and stroked her arm. Bloody. His own blood once he touched her, but some of her own, and a lot of Perseus's. Blood everywhere.\n\nSo Chimera was dead? He'd dropped a boulder on that creature's head, and hadn't killed him. Seen the giant recover from wounds in a matter of minutes. Invincible.\n\nDarian looked out to the new mountain, the stone sea creature. If there was anything... He sighed, and slid his fingers into Medusa's hair.\n\n\"I owe him... a lot,\" he said.\n\nMedusa nodded, and reached out for his other hand to pull it to her chest and hold it. She was crying, tears running down her cheeks and cutting through the dirt and blood. \n\n\"We... we need to... go help Otrera.\" Medusa tried to roll off of his lap, but even that proved too exhausting for the heavy gorgon. She sighed, collapsed back against his lap, and held his hand tighter. \"She could be dead! She\u2014\"\n\nGalloping drew their eyes. Darian looked up the road, and caught his breath. White wings against the horizon came down along the road where the curve came around the mountainside. The familiar trot of heavy hooves, the bounce of white mane, it all seemed like a painting against the rising sun.\n\nBut as he caught his breath, the painting came closer. Pegasus trotted over to them, flicked his tail, and lowered his head to nudge it against Darian's.\n\nContact. Glass shattering. Darian coughed, and a sob came out. He reached up with both hands, touched Pegasus's snout, and choked on another sob. He could feel a part of him wanted to cry, but the tears wouldn't come, they never did. It was alright though, his old friend already knew they wouldn't. Pegasus lowered his head, rubbed his forehead against Darian's, and tapped his hoof against the ground a few times.\n\n\"Sorry... gods, I'm... you got dragged into this because of Perseus. Because of me. And I had Medusa shoot you! I couldn't let them escape. I'm so sorry, I\u2014\"\n\nPegasus hit him with his head, hard enough to knock him around a little.\n\n\"Alright alright! I get it, I \u2014 and you know Medusa. She...\"\n\nThe gorgon had already slipped off his lap when Pegasus came near. Neither of them were in a condition to be going anywhere, but Medusa forced herself off and coiled up beside Darian. Her eyes were wide, mouth open slightly, and she was staring at the winged horse blatantly.\n\n\"Pegasssussss,\" she said, struggling with the name. And she stared a little more, like seeing an old friend, and yet, struck with awe. She put a knuckle to her lip, and looked at the horse's bleeding wing. \"Will... will it heal?\"\n\nPegasus nodded, took a few steps back, and turned around once.\n\nMedusa smiled, and forced herself to sit up, hands on her coil and pressing her torso upright. \"Um... Otrera... is she sssafe?\"\n\nPegasus nodded again, and came closer to nuzzle against Darian's head and neck some more. His old friend wasn't panicking, demanding his attention, stomping his hooves, doing any of the things he would if he had to take Darian anywhere\n\nSo he could breathe, relax. Darian took another breath, and reached out to hold onto Pegasus's neck while forcing himself up. More blood stained the horse's beautiful white coat, and he noticed Medusa frown as it did. But she didn't understand, she didn't know how much Pegasus would hate being coddled and pampered so.\n\nHe managed to get to his feet, weight leaning on Pegasus's neck and shoulder, and he pet his old friend's mane as he did. The gold ring of thorns was gone from his snout; Otrera's doing, most likely.\n\n\"She have anything to worry about from Andromeda, one on one?\"\n\nPegasus shook his head.\n\n\"Good, good.\" He squeezed his hand a few times, and winced each time. Cut muscle didn't like moving that way, and blood dripped from his fingers. Worse was the blood dripping from his waist and down his legs. \"We have to get up there.\" He wouldn't be able to mount Pegasus. He'd have to walk.\n\nBut Pegasus pulled away, and that was enough for Darian to fall to his knees, complete with a loud yelp of pain as the impact of ground to his bones sent him onto his side. Apparently his old friend didn't think he was up to the task.\n\n\"Darian!\"\n\n\"Gods damn it Pegasus. We need to\u2014\"\n\n\"Don't think you'll be going anywhere.\"\n\nMedusa, Darian, and Pegasus all looked down the road to the new voice.\n\n\"Patrius!\" Medusa said. She even made the attempt to slither to him, but the multitude of cuts and gashes on her snake body put a halt to that, same as Darian.\n\nThe old soldier grinned at them as he came closer. He wasn't holding any weapons anymore, and his hoplite armor was a mess of dents, dings. Water dripped from his fingers and soaked the steps behind him.\n\nMedusa, panting and struggling to stay upright, eventually collapsed and lay her human half along her coils. \"How!?\"\n\n\"Destroyed bridge has a lot of climbable parts dangling in the water. Swam over.\"\n\nDarian laughed, and with shaking arms, forced himself back to lean against the cliff. \"Tough bastard. Don't know how to die.\" He winced when he said it, and took a peek at Medusa. She winced too.\n\n\"Learned from the best.\" Patrius came up to them, and reached down to grab Darian's sword from the road as he walked near. \"... guessing those legs belong to Perseus. And that there is Pegasus, half the reason we're here.\"\n\nMedusa nodded.\n\n\"And... well, I guess only you could be responsible for this, Medusa.\" The old soldier raised Darian's sword and pointed it the colossal stone entity. \"Damn.\"\n\nAgain she nodded. \"I... I have Chimera to thank. He saved me, saved Otrera. He... sacrificed himself.\"\n\nPatrius raised a brow, walked over to the street edge where it dropped as a steep cliff down over the mountain. He pointed his sword down to the broken bridge.\n\n\"Lot of people died from the sea creature's attack. But a lot lived. Took care of the undead, and started treating the wounded.\"\n\nMedusa blinked at him, and slithered over. Dragged herself over, really, complete with a blood trail that had Darian gritting his teeth to watch. But once she got to the edge, she squealed.\n\n\"Chimera!\"\n\nPatrius laughed, and stood beside Medusa at the road edge. \"Bastard just refuses to die. No wonder Bellerophontes couldn't kill him, long ago. Bunch of us found him struggling to keep moving from under water; seemed like all his limbs were broken. We dragged him up the shore, ten of us, got his head above water, and from there he passed out. But,\" he laughed again as he turned around, \"guessing from what you told me, the giant can heal from basically anything that doesn't kill him?\"\n\nPegasus came up to Darian again, and got to a knee. Chuckling, Darian reached up to his old friend again, and got himself to standing so he could waddle over to join the others. Soon, the four of them were standing on the road edge, and Darian looked down at the destruction before them.\n\nA lot of timber and bones, broken bridge, broken undead, and many bodies. A hundred people at least were running around, pulling people out of the water, tending the wounded. Others stared up at the new statue in the water. And at least a dozen of them were standing around Chimera with bandages, wrapping his humongous limbs as best they could. The brute was lying on the sand, unconscious, and several of his bones were poking out through the flesh of his legs and arms. If the giant had been awake, he'd probably have been screaming as four men worked together to set his bones.\n\n\"... is he... seriously alive?\" Darian said.\n\n\"Indeed.\"\n\nGods damn, he could feel a smile creeping up his lips. Pegasus didn't seem so happy though, and the horse stomped his hooves and shook his head.\n\n\"Yeah Pegasus, I know. But he's been helping us, helping Otrera. Wouldn't have found you if it wasn't for that miserable bastard.\" Not that he was in any position to call the giant that. But, unless he was going crazy, there was a small tinge of joy dancing up his body.\n\nHe looked over at Medusa. Smiling. He looked to Patrius. Smiling. He looked at Pegasus, and the beautiful horse nudged him back until Darian was smiling too.\n\n\"The fuck?\"\n\nEveryone turned to look back up the road.\n\n\"Otrera!\" Medusa slithered toward her, managed two feet, and fell onto her hands again. But Patrius reached down to help her up, pulling her arm up over his shoulder with his free hand, until she was leaning on him. \"Chimera! Chim \u2014 oh! Is that Rhea?\"\n\nOtrera frowned at the gorgon, and walked over to the cliff wall. There was a woman in her arms too, and it wasn't Andromeda. Darian snapped his fingers, and looked to the horse he was leaning on, much like Medusa to Patrius.\n\n\"Rhea. Damn, I forgot.\"\n\n\"Don't let Tritus hear you say that,\" Patrius said, glancing over his shoulder at him. He was grinning, just like the old days.\n\nThe whole situation was so disgustingly perfect, it was going to make Darian vomit; he wasn't used to things going well. But he could see on Medusa's face, her body language, that it was doing the opposite for her. If anything, she was going to explode into a rainbow.",
        "\"Otrera! Chimera is alive!\"\n\nOtrera got back up from setting the unconscious woman down against the wall, and blinked at Medusa. \"What?\"\n\nMedusa motioned for the Amazon to come join her near the cliff edge, and once she managed to slither back to where she was, she pointed out to the shore. The sun was breaking over the horizon now, and everything was bathed in a warm orange glow. No mistaking the group of people huddled around the big guy, each of them trying to figure out how to handle the damaged and mangled giant.\n\nBut he was alive. One of the people tending to his wounds even waved up at them.\n\n\"He... he's alive?\" Otrera collapsed onto her knees, palms to the ground, and stared out over the edge. \"Gods damn it, he... I... fucking Tartarus.\"\n\nShe started to cry. Darian could see she was fighting it, but she raised a hand up to her eyes and wiped away the growing tears. No matter how hard she tried, more joined them, and she blubbered a chuckle as she stared out over the people below, and waved back.\n\nFor a moment, he was envious of her. What did that feel like?\n\nMedusa started to cry too \u2014 she already was of course, but Otrera's sounds made her cry doubly so. Even Patrius managed a small sniff, and he looked to Darian and Pegasus, then back to the people below, before he waved Darian's sword through the air for the onlookers.\n\n\"I killed Andromeda,\" Otrera said between sobs. She leaned back, laughed, and held up the Moirai mask to Darian as she wiped her tears away with another. \"Should have gone easier on her, if... if I had known he... Gods he looks like shit. I have to get down there. I have to help him, and they're too weak to even lift his arm.\"\n\n\"But he'll live!\" Medusa said, and she too raised a hand to wave at the people below. \"He's like me, he'll heal from anything, even faster!\"\n\nDarian set his forehead to rest against Pegasus's neck, and held out his hand in front of him to behold the Moirai mask. The swirling, chaotic lines of silver against a thick metal body. Open eyes, open mouth that could be seen through, it looked like nothing more than a hunk of fancy obsidian metal. The silver symbols and lines were similar to those found on his armor though; definitely a Moirai mask.\n\nAll this for a mask. A tool of great power, according to the Fates, according to Gallea. And Andromeda had been using it, sacrificing people to it, and powering her magics with it. He gulped, and stared into its eyes; but it had nothing to say. Did it understand? Did it know how much trouble he'd gone through to get the damn thing? Was it alive, as were the other Fates, or was it just a tool and nothing more? He chuckled, and lowered the mask. Quest complete.\n\n\"What will you ask Athena?\" he said.\n\n\"Athena?\" Medusa looked over Patrius's head toward him, and her jaw dropped as he showed her the mask. \"I forgot! I... I don't know! I don't know, I... I just want to talk to her. I\u2014\"\n\n\"You want to speak to Athena? Directly?\" Patrius said.\n\nMedusa nodded. \"It's part of the deal we have with the Fates. They'll let us \u2014 Darian and me \u2014 speak to Athena once we return the mask.\"\n\n\"... I see.\" Patrius lowered his gaze, and looked to the crowd below again. He shook his head a few times, and opened his mouth to say something, before silence took him. \"Athena's angry,\" he said a few moments later.\n\nDarian blinked at the man. \"What?\"\n\n\"I\u2014\" Patrius stopped himself, looked up at the sky, and sighed. For a single second, his eyes had a green glow. \"I understand, Athena.\"\n\nEveryone turned to him, eyebrows raised and some heads tilted. Medusa still had one of her arms hooked around the man, and offered a confused smile for him as each snake on her head looked at him.\n\nPatrius raised Darian's sword, and put it against Medusa's neck. \"I'm sorry.\"\n\nDarian's blood ran cold. Heart froze. Body refused to move. Everything went still as Patrius swung the blade down.\n\nIt was a sharp blade, a magical blade gifted from the Fates themselves, sharp enough to cut through metal given a little force. Medusa's neck provided no resistance as Patrius threw his weight down into the cut.\n\nOtrera jumped him, and Pegasus spun around to try and knock the man over. Patrius found himself pushed toward Otrera by the horse, and then knocked onto his back by the Amazon as she jumped him and pinned his hands to the ground. Darian's sword fell out of Patrius's hand, and it scattered along the mountainside road as Otrera subdued the man.\n\nDarian's eyes followed the blade as he fell over. Pegasus turning around had knocked him down as well, onto his hands and knees, but he barely noticed. He only noticed his sword, skidding along the stones and rocks of the road, and the splattering flesh red it left behind.\n\nMedusa's head rolled a few feet across the stones, until she came to a stop next to his sword.\n\n\"Why! Why did you do it?\" Otrera said.\n\n\"Athena demanded it! She commanded it of me. I had no choice. I\u2014\"\n\n\"Is that why she sent you here? We know she sent you the same time we set out for Aethiopia!\"\n\n\"I didn't know! I was sent here to help these people! Only now... only now did she tell me to kill Medusa.\"\n\nKill Medusa.\n\nDarian reached out for his sword, but stopped short as his hand drifted closer to Medusa's head. Her eyes were still open, and her mouth was open too. Blood poured over the stone. Her snake hair did not move.\n\nHis hand found her. Fingertips drifted into her hair, and as he pulled himself to sit on his knees, he held her on his lap. Her snake hair didn't coil around his fingers, didn't nuzzle into his knuckles, didn't lick and tease his palms. And Medusa herself didn't meet his gaze. She just stared into nothingness as blood dripped from her neck. One of his hands drifted down to her face, and his thumb nudged at her lips. Nothing.\n\n\"... Medusa?\" he said.\n\nNothing.\n\nDarian looked beside him. He'd dropped the mask, and it'd skidded a couple times along Medusa's blood. Crimson dripped from its jaw, and along the silver lines that swirled its contours. It stared at him with the same empty eyes of Medusa. Each drop of blood from her neck took an eternity to land upon his leg, and each drop struck him hard, until they pierced through him into his core. Until all he could feel was the wrenching of his insides.\n\nHe held her head until the drops slowed, until each was a distinct and crushing mass against him.\n\nMedusa's head \u2014 but not her.\n\nHe looked behind him. Medusa's body \u2014 but not her. It was something else, something that looked like her. Medusa's body lay along the street, as lifeless as Perseus's legs. Bleeding, but not moving.\n\nHe looked to Pegasus. His old friend stood there beside Otrera, neighing loudly, stomping his hooves. Otrera was shaking Patrius hard, screaming at him, punching him, demanding answers. Darian couldn't understand any of it anymore. All he could hear was noise.\n\nHe looked back to his love. Not his love anymore, just a body. Closing his eyes and forcing down the rising ache in his gut, he set Medusa's head down beside the mask, and got up. Someone had done this to her, turned her into this lifeless thing, this pile of scales and flesh and blood. Someone had taken her from him. Someone had taken everything from him.\n\nHis body raged at him for daring to move. His arm was barely able to function, and the cuts and bruises along his shoulders and waist demanded he sit back down. He must have had at least three broken ribs, and something in his wrist wasn't working correctly anymore. Probably had a serious head injury too; shouldn't be going to sleep anytime soon.\n\nBut it all faded away. The choir of pain became white noise, soft and soothing in the background of his thoughts as he walked toward Otrera and Patrius. Otrera was punching the man hard enough to bruise him, break his nose, give him a black eye, and otherwise leave the old soldier unable to fight back. Not good enough.\n\nDarian grabbed Otrera's shoulder, and threw her off him. She fell back onto the road, and he reached down and lifted Patrius up by the neck, fingers around his throat, squeezing. He walked him toward the cliff wall of the road, and pinned him there.\n\nPatrius stared down at him, eyes wide. And for a moment, Darian remembered his wife, his children. Like insects, memories of their time together as comrades in Tiryns swarmed. Even the bad memories of Patrius's refusal to believe him about Stheneboea vanished, and the good memories grew brighter. Sitting around a fire in the woods while they scouted nearby areas. Fishing on days the city was mostly empty. Training. Meeting his family.\n\n\"Bellerophontes,\" Patrius said through a split lip, \"please, listen to me. I had to. I had no choice. Athena... she\u2014\"\n\nHe swatted the memories like flies. His eyes glowed white until everything was a blur, until everything on the edge of his vision was pure white. The only thing in focus was the dead center of his gaze where it sat on Patrius, and where his fist collided with the man's body.\n\nAnd collided. Hit, after hit. Punch after punch. He ignored the man's cries, ignored the cries of his own damaged body, ignored it all, and punched harder. All he could see, all he could feel, was acid in his chest, and the impact of bone and muscle against his knuckles.\n\nBone and muscle until there was nothing left, until he was punching the blood-soaked cliff where Patrius's body should have been.\n\n~~~~~~~~~~~~~~~~~~~\n\nThe sun was setting.\n\nEveryone was tense. They were supposed to be having a party, a celebration. There was a huge bonfire in the city center, beneath the red sky of dusk, in the open area where the districts and roads met. Everyone had gathered, everyone was talking, but no one was happy. Many were crying, holding each other as they mourned their dead. And many more besides mourned the dead gorgon, the monster who'd given everything she had to save them, save Rhea, only to be betrayed at the last moment.\n\nA tiny part of him, a teeny voice buried deep, told him to be happy people were upset about Medusa's death. It's what Medusa wanted, for people to stop hating her, stop fearing her. If anything, her death allowed her to meet her goal.\n\nHe squeezed the rock in his hand until it cracked and crumbled.\n\nThe curse was gone. The people of the city were free. The manticore were dead. The undead were proper dead once more. The sea creature was a stone testament to the struggles of the people, and it stood tall in the bay next to the acropolis mountain. A happy ending for these people.\n\nDarian, Otrera, and Pegasus sat a ways off from the city center, close enough to see it but far enough they were near the woods by the main road. They had an open area for themselves between some buildings, a big area normally meant for storing carts. Empty, it was plenty of space for Chimera to lie down on the ground.\n\nOtrera stared down at the giant. He lay upon the grass, eyes closed, breath coming in slow and steady. Bandages all over him, new scars; and the eye with the scar was truly ruined this time. His face was barely holding together, and any human would have died purely from the inability to breathe. But Chimera was a powerful man, and he'd heal with time. He'd heal the ruined face \u2014 probably not the missing eye though \u2014 and his broken body.\n\nThe corpse of Medusa next to them would not.\n\nGetting her corpse down from the mountain, down the broken bridge, across the water, and into the city, had been... sobering. Darian tried to cry, tried to let tears flow and let the pain hit him. But nothing came. Even as he had picked up her head with his hands soaked in Patrius's blood, his insides had petrified. Stone. Her gaze turned him to stone.\n\nDarian and Otrera, side by side in the grass, stared at the bodies before them. Pegasus stood by the building near them, but when Darian glanced his old friend's way, the horse lowered his head and took a step back. Afraid of him, maybe? No, Pegasus was too strong to be afraid of him. But their reunion was most definitely not what either of them had probably planned. And Pegasus probably felt guilty for that.\n\nDarian glanced Otrera's way. She looked happy, and sad; at least she wore her emotions on the outside, easy to ready. When she looked Chimera's way, a smile peeked its way onto her face, and took over all her body language. When she looked to Medusa's body, it fell apart, and her head dropped.\n\nAt least she was feeling something. Darian sighed, and stared at the corpse before him. He was numb.\n\n\"... Darian.\"\n\nThe two Fate's Children looked down the road toward the city center to the new voice. Gallea and Pinna. \n\n\"I... I wouldn't,\" Otrera said, and she raised a hand to dismiss the two.\n\nDarian said nothing.\n\n\"Please,\" Gallea said, and he hopped a little closer. \"Please, we... we wanted to pay our respects. We wanted to\u2014\"\n\n\"Did you know?\" Otrera said. She got up off the ground, and stepped onto the road near the two satyrs. \"Did you know about Athena and Patrius?\"\n\n\"How could we have known? You said yourself Athena's order came only upon the mountain...\" Pinna came closer with a hand held to her chest. \"We didn't know any of this would happen! We didn't know what Athena was going to do.\"\n\n\"I'm sure it'll make a great story.\" Otrera drifted closer to them, until the two satyrs took a step back with a gasp, eyes wide. \"A tale that will spread for all time, of Patrius's valiant sacrifice to kill the horrible monster maybe? Or perhaps you'll spread the story that Medusa willingly gave her life after helping free Athena's people, as her way of redeeming herself? Hmm?\" Fingers found Pinna's throat, and Otrera lifted the satyr into the air. \"How will you twist this so that Athena and the Fates are to be worshipped!?\"\n\n\"Hey! We won't\u2014\" Gallea's words cut short when Otrera kicked the satyr in the stomach hard enough to send him back onto his ass.\n\n\"Otrera,\" Darian said, \"just... don't.\"\n\nThe Amazon humphed, and threw the woman down next to her husband before coming to sit next to Darian again. She sat a little closer to Chimera this time though, close enough she could reach out and stroke the unconscious giant's hand.\n\nQueen Otrera loved the giant, Darian could see. He didn't know if she knew \u2014 she probably didn't \u2014 but it was plain on her face. The mindless and complete adoration. The total commitment to the other. Maybe when Chimera awoke, the two would grow in that way, admit their feelings, and live happily ever after.\n\nHe choked down the bile in his throat again. He wanted to kill her, every bit of him wanted to kill her for daring to have that.\n\nMisery loves company. He wasn't stupid enough to let the rage consume him to the point of killing those who didn't deserve it. Medusa wouldn't want him to do that, and he wanted to make her happy.\n\nHe stared at the mask in his hand. The Fates wanted him to get this, a Moirai mask, a tool of great power. But he was no sorceress, neither was Otrera, or anyone he knew. And even if they were, he could not do what Andromeda did to bring Medusa back. Sacrificing people to resurrect her? It'd be the same as killing her.\n\nHe'd have her back though...\n\nNo, you fucking idiot. No. No no.\n\nHe got up, and walked off with the mask in his hand.\n\n\"Darian?\" Otrera said.\n\n\"I... just need to be alone for a while. Tomorrow, Gallea and Pinna can summon the Fates, and we can...\" He took a deep breath, deep until he could feel the rock in his gut, and walked off into the woods. Pegasus trotted after him, but he looked back at his friend, and shook his head. The poor horse neighed, but nodded, and instead walked over to stand by Otrera.\n\nHe could hear them talking behind him as he walked away. At least they weren't arguing anymore. Otrera's anger was understandable, and she was letting out her emotions, they all were.\n\nBut him. After he carried down her corpse, stared into her lifeless eyes, all he could feel was stone in his chest.\n\nHe wandered for a while, still in his armor but without his helmet. No sword either. He couldn't touch it, not after what Patrius had done with it.\n\nAs he got further, and further into the wood, further, until he was well and truly alone, he looked up. The sky was clear again, just like last night. The sun was slowly setting, and the red of the few clouds was bleeding away to expose the stars. The sort of night Medusa and him would have laid themselves out on the grass, and just stared up.\n\nHe'd never get to do that again.\n\nHe looked at a nearby tree, a large one, and raised a fist. He looked for the fury, looked for the burning white in his mind that would set his eyes glowing, unleash the power of his curse, and let him punch solid wood into mulch. None to be found. He looked down at his knuckles, still split and torn from where he had punched Patrius again and again, until the dead man had fallen apart, until limbs had given away, until he was in several pieces and Darian was punching only the cliff rock. The fury was gone, and all that he was left with was loneliness.\n\nHe laughed, and fell to his knees. The mask rolled away, collecting dirt on its bloodstains, and settled a few feet from him. It blurred as tears sneaked their way into his eyes. He sank his fingers into the earth until bits of dirt cut into the skin under his fingernails, and he cried. Just a few sobs, just the softest, little chokes of noise caught in his throat.\n\nHad he ever cried? Genuinely ever cried? Not when he'd killed his brother. Not when his family had sent him to Tiryns to receive punishment. Not when he'd discovered Proetus had actually tried to kill him after years of faithful servitude.\n\nIt was a foreign feeling, to let the tears grow, drip down his cheeks, and overwhelm him. The tightening in his chest released, and a louder sob came out of him as he fell forward, clutching his chest as his forehead fell to the ground. Curled up, like a whimpering child, he rocked back and forth, and let the strange feeling engulf him.\n\nHe screamed. With his voice caught on a sob and tears growing until they were streaming down his face, his voice came out a mess of broken noises and shrieks mixed with yells. He'd heard the sound before, in men he'd killed in painful ways. A whole body scream that left him gasping for air, and unable to get it as more sobs ripped the air out of his lungs. Fingers clawed at the ground more, and his other hand held his chest where it felt like he was ripping in half.\n\n\"Medusa... I can't... I\u2014\"\n\n\"So... he can... feel.\"\n\nHe sat up, body stiff with reflex, ready to tear apart whoever was talking. He looked left and right, and found only the darkening forest. No one had followed him down the main road either. No one was there, no one but him.\n\nBut the mask, staring up at the sky, had a subtle white glow in its eyes and mouth.\n\n\"... Bellerophontes.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "violence",
        "fantasy",
        "romance",
        "fantasy adventure",
        "monster girl",
        "blood",
        "monster romance",
        "greek mythology",
        "mythology"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/medusa-fates-game-ch-13"
}