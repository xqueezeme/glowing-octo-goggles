{
    "title": "Cocking It Back",
    "pages": [
        "Today was the day. I finally had some privacy to go looking for it again. Katie and Giles had been home for a week from college, and its been great, don't get me wrong, but please. When they're around they want to do family stuff until one of their old friends calls and then they're off. But that's always at night when my parents are all around and let's face it, a girl likes some privacy every now and again.\n\nI saw it last week when I was looking for Christmas decorations in Katie's closet upstairs. It seems like only the baby of the family cares any more, and I'm eighteen already! It's not my fault they've done it more times than me! Katie had just gotten home and unpacked and was too tired to go looking through her own closet, so there I was climbing up the little shelves at the back to see what was on the big shelves wrapping around the top of the closet. And there it was lying against the back wall on the top shelf. A giant white cock.\n\nIt was about eight inches long and had some latex balls and a suction cup and it was all this grotesquely pale white. I was so shocked I slipped a shelf and went quickly back to the floor. I'm just glad I didn't break anything.\n\n\"Hey Kristen, what the hell are you doing in my closet?\" I heard Katie ask from her bedroom.\n\n\"Just looking for the Christmas decorations I'm still to short to reach!\" I sputtered.\n\n\"Need any help?\" Katie actually looked concerned as she peered into the closet. \"What are you, about four feet tall now?\" She glanced up at the top shelf.\n\n\"Five-four,\" I said, looking up at her from shoulder height.\n\n\"Does that include the curls?\" she said, patting my hair down.\n\n\"You don't get to say stuff like that for much longer,\" I said. \"I'm going to be in college too soon, and you're going to have to treat me better.\"\n\n\"No I won't,\" she retorted,\"you'll be a freshman.\"\n\n\"Well at least the senior boys will still like me. You'll just be old meat.\"\n\nShe looked down at her breasts, unconvinced, and back up at my chest pointedly. \"And what do you have to offer them, Kristen?\" We both started laughing.\n\n\"Only the tightest ass this side of the Mississippi, West of the Appalachians, South of the Mason-Dixie, and North of the Coast,\" I said, turning to slap it in front of her.\n\n\"Well don't let the door hit it on the way out,\" she said. \"Hate for you to damage your one asset.\" She turned around to mime the gesture with her own ass.\n\n\"Hey,\" Katie said, stopping suddenly, \"did you actually look for any Christmas decorations in here?\"\n\n\"Yeah, I glanced up from the floor,\" I said, \"but didn't see any boxes labeled 'Christmas' from down here, so they must all be empty, right?\"\n\n\"Well, whatever,\" said Katie, shooing me out. \"Why don't you go play with some of your little friends?\"\n\n\"Funny,\" I said, ever the jokester on the outside, but my insides were fluttering.\n\n******\n\nI went back looking later that night after she'd gone out with her own friends, but the cock was gone. It had to still be in her room, however, I just needed an excuse to look. Well, I had an excuse to look, curiosity, but I needed a reason for someone else to tell me to look. Or something.\n\nWhat I really needed was for everyone to be out of the house for a couple of hours, and it happened a few days later.\n\nIt's not that I'm shy around boys, or ugly, or wear frumpy clothes or anything. I'm cute, and spunky, and self-confident, and have a little bit of a temper. I play sports and stuff, mostly volleyball, and to tell the truth my boobs aren't *that* small. I mean, I have to wear a bra or its really obvious, but even the pushups Mom bought me a few years ago weren't enough to produce actual cleavage.\n\nI just think the guys my age at school aren't going to go for me when there's easy pickings in the giggler two desks over, or the party princess in front of the teacher, or some fantasy about my older sister. I don't really mind. Hell, I'll even joke off my period in front of the guys, and that can be a little intimidating. For them. It just means I'm a little inexperienced and am biding my time for nine more months until college starts. Until I get there, I can still imagine that everyone in college will be completely different and completely better than highschool.\n\nIn the meantime, I want that cock. I'm not *totally* inexperienced. Don't get me wrong, here. But there's just something weird about using my finger. Like it so obviously doesn't work. You're getting a stomach cramp crunching to jill yourself from the front, or propping up one leg and contorting to finger from underneath and to the side. So I'm usually just rubbin' the nubbin and trying to ignore anything that's leaking. And I can get wet.\n\nI've got kind of small inner lips and kind of tight outer ones, so if I'm wearing one of my good thongs and don't move too much it can keep me together enough that I can be really really wet inside before anything leaks out. I love that feeling. I've started keeping myself mostly shaved down there to make it last longer, but who really cares these days?\n\nI almost start panting, and I start to flush, and I'm super aware of my insides starting to get gushy and bigger. Any sign on the outside? Nope. So I start to shift my hips backward and forward and the thong rides up my ass and I can feel it stretch and pull but my clit's still tucked away so it doesn't really do anything. By this point it feels like the thong is actually starting to squeezing and I know it's because my bits are inflaming and trying to push their way out, starting to get bigger and wetter, but still nothing happens because I'm squeezing my legs together so tightly. So then I relax them just a bit and then I feel it.\n\nAt first it's just a single drop. I don't really feel the drop but what I feel is a kind of friction disappearing in one little spot. The next time I rock and I feel all the little bits that don't normally exist start to slide against each other and I can't stop their twitching. And then there's a little gush of all the wet that's been stopped up inside and it's like I just peed my thong. It'd be so gross if I weren't always so horny by that point. Just thinking about how web I get makes me horny, thinking about how my little lips start peeking out all crinkly and shiny. I used to try and wait to see how long I could last before I had to touch myself. I'd rest my hand on my belly, or slide it under my shirt or bra and lightly run my fingers over a nipple until it tightened so much it was begging to be pinched.\n\nLately I've taken to just cinching the front of the thong and grabbing the string from the back and trying to thread my lips. It feels so good to be sliced wet like that and it rubs right along my clit. I have this baby blue thong and I love change to a deep blue when it gets so wet. At this point, I'm so horny and worked up I just pull the wet part to the side and finish myself off by rubbing my clit down with my fingers. It's never quite what I'm looking for, because I keep staying wet afterwards, but by then it is kind of gross and it's enough. God, even thinking about it now is enough to start me quivering.\n\nAlso, I'm never quite sure how I feel about the smell. I get all slick and wet, and the musky smell is part of it, but the thong by that point is soaked even up the front and my ass is scooting around on a slick spot underneath. I just have to clean everything off. If I smell the thong up close it makes my insides flutter because I know it's me and it's my sex. I tasted it one time, just stuck my tongue out and touched thong. Tastes just like it smells, I suppose, which is not so bad and a little mysterious. No big surprise. Couldn't bring myself to suck on my own panties, though.\n\nSomething's always missing, though, and that's why I want some time alone with the cock.\n\n******\n\nNow Katie had been making sure Mom had no reason to go up to her room and dig around in the last few days. No dirty dishes, no spectacular clutter, but none of those would really lead to heavy searching. However I can rule out the armoire because that's where any picked up thing may go. She also has a little armchair with ottoman, desk, queen-sized bed, and walk-in closet. A bathroom separates our two rooms.\n\nI can rule out the desk for the same reason as the armoire, and probably the bathroom as well. Not that I'd ever *accidentily* look through those drawers, but I seriously doubt she would've stashed it at the top of her closet if she wanted to see it every day. And it's not in the closet anymore, I already checked. So what's left?\n\nThen I remembered: Katie made sure to clean her own sheets so no one would go digging through the bed. I bounced over and there it was, lying down between the sideboard and the mattress. It's about eight inches long overall. No big veins or anything, but not totally smooth either. Really, really pale, even the head was the same color. I suddenly realized I'd been stroking it. And what it was for. And that it'd probably been used.\n\nI ran to the bathroom and began rinsing it off. It was so smooth. No hair on the balls, even though there was something inside them that could move around a little. And even though the whole thing looked like plastic it wasn't completely hard. It had a little give to it, like a rubber ball, like it would compress a little if I pressed hard enough. It was slick and warm from being soaped and washed, but I hadn't smelled any telltale musk as if it had been used recently. I realized I'd been actively smelling for my sister's musk.\n\nIn fact I realized I'd just been staring as the head bobbed in front of my face as I held the base with two hands. Something about the cock demanded respect. My insides were fluttering and I was starting to get a tingle in my pussy every time I moved my hips, and it just bobbed in front of me. My legs were feeling weak and I dropped to my knees unsteadily right in the bathroom.\n\nAs I went down I started panting and the head of the cock brushed my cheek. It had started drying off, but it was still so slick. I brought it across and started sliding it over my left cheek. Oh this was so good. It was so smooth. I brought the head so that the tip was right beneath my nose, to smell it one more time, but all I smelled was the hint of peppermint from the soap I'd used. And then I let it drop to slide slowly over my lips. My hands started to tremble as I dragged my lips over the head and darted my tongue out for the first time. A smile came to my lips; it still tasted like peppermint. Peppermint cock. I reached out to playfully bite the head.\n\nAnd it felt like I could barely fit it in my mouth. Not really, as I still had room to slide my whole tongue around it, but bigger than I expected. I can't believe I was sticking my sister's sex toy into my mouth. As my spit started to lubricate the head, my lips had trouble keeping purchase on the shaft and more of it started slipping into my mouth. \n\nSo this is what it's like, I thought, three inches of cock in my mouth. Well, except for the peppermint. There was so much to feel inside my mouth, the not quite round head, the cut of its ridge when I rolled the cock over in my mouth, the feel of the shaft under my lips as I smoothly thrust it into my hungry mouth. The feel of clothing was starting to drive me crazy. My boobs ached and my nipples were like little beads of fire and thrusting my hips into the dead air wasn't doing nearly enough for me anywhere else. I was starting to approach big gush time and didn't want to do it here.\n\nI grabbed the cock with one hand and a towel with the other and went back to Katie's room. I spread the towel on the seat of her armchair, dropped the cock, and shucked out of my old tank top and shorts. Ugh, my nipple were so tight, I couldn't help a moan as I started to pinch them. They aren't that big, but scraping around them with my fingernails was pushing me over the edge. I could feel the wet about to burst out like a lake through a dam. It was time.\n\nI slipped out of my panties and carefully sat down on the towel, propping my legs on her ottoman. The first moisture was working its way out as my little pink lips began to emerge. I brushed them with the shaft of the cock and shivered as they began to separate and slick musky wetness oozed over it. I didn't have room to slide the cock down in front of me so I started humping it with my hips. Oh yeah, it felt so much better than humping panties. I flipped the cock over and slipped it beneath me. It was rubbing along my ass and I could grind my clit against its balls. Even my hands were slick and I was starting to sweat. I looked down and saw a red flush over both my breasts and used one slick right hand to start pinching a nipple. And then suddenly I came out of nowhere, nearly covered in my own slimy musk and writhing on a wet towel.\n\nAnd it wasn't enough.\n\nI looked down at myself, aware of the feel of crushed curls behind my head, flushed b-cup breasts, tiny taut nipples, a few freckles across a flat stomach, a thin strip of downy hair and two white thighs embracing a plastic cock. I grabbed the cock by the balls with one hand and the slimy shaft with the other and slid it up. I shivered as the cock's head wormed over my asshole and I left it nestled in my shiny folds. I started to move the head in tiny circles and let my eyes close. It was so much bigger than anything I'd ever even thought of using, so much thicker than any finger. I kept circling around the empty place where it would disappear inside me. I was shaking with need. My sister's room was filled with the scent of my need. So I let it center and started groaning.\n\nIt was so big but something was happening. It was almost like I was pulling it and grabbing from the inside as much as I was pushing from the outside. Suddenly, the pressure eased just a bit. I looked down and could see nothing but shaft, and just like with my mouth the lips couldn't find any purchase and the whole thing started sliding in. God it was so easy and I felt full in a place I'd never known was empty. I could feel something moving across surfaces that had never existed, not even to my reaching fingers.\n\nI started to ease it out of me again and gasped as my clit and little labia were stretched out along with it. I couldn't help myself any longer. I plunged it back in half way and started inching it further. So full. And the feeling of movement inside of me. I was starting to feel faint and the cock was so wet it was starting to be hard to keep pushing. My hips were rocking, demanding more, and my nipples were on fire, but I couldn't move it fast enough!\n\nIt's damned balls were just too loose to pull on, and the suction cup on the base made it hard to press with my feet. I was almost in tears. I was spread open and my clit was *right there* but rubbing it with my fingers wasn't enough. Suddenly one of my feet slipped and my whole arrangement fell apart and the grasping pussy started squeezing the cock out of me. I needed something better and remembered the suction cup.\n\nIt wouldn't attach to carpet, but the bathroom had a tiled floor. I gasped as I pulled the cock from me and smeared a wet hand across the suction cup base as I made my way to the bathroom. But where to put it? The floor was narrow and cold and I wasn't sure I wanted to be able to see slutty myself in the mirror. Then I realized I didn't have to fix it to the floor. I eyed the side of the glass walled shower and jammed the cock to it about about two feet up. I turned and crouched right in front of it, my knees just outside my shoulders. The cock came up right between my legs. I heard myself whimpering as I started to rub my clit along its shaft, a little gasp when I reached the ridge behind the head. A threw a hand out to balance myself as I leaned a little further and I could hear as much as feel the head of the cock slip into position. I started to rock back and kept on going as the slick plastic split and then slid into me. Further and further until a rumble started to grow in the back of my throat. The cock filled me and I was grinding my clit against its balls and my ass against cold glass.\n\nI eased back away from the glass, feeling the head travel the same length inside of me. A trickle of moisture fell down my thigh and I imagined it was some boy's cum starting to leak out as he fucked me from behind. I stuck the fingers of my free hand into my mouth and imagined it was some boy's tongue invading my face as he roughly kissed me. I slammed all my weight back against the glass and could hear the wet plunge through the noises I was making. I was out of control, grunting like a pig in heat from the taste of my own pussy on my fingers. I gave up on balance and dropped my cheek to the cold tile, the fingers in my mouth snaking down to maul my own breasts, the other hand reaching down to feel my dirty cunt split wide open and the slick cock's shaft disappearing inside. As my fingers caressed it they ran across my clit and it was too much for me. I started rocking back and forth only inches, unwilling to give up even that much of the feeling of fullness, rocking and rocking, my legs starting to cramp.\n\nAnd I was coming and coming, the cock never sitting still, pushing against me from the inside even as my pussy tried to squeeze it out. Finally my legs couldn't take it any more, and froze in a cramp that left my impaled and unable to move or stop squeezing the milky cock. It seemed like pain and pleasure twisted forever, but eventually I was able to ease myself off the glass wall and its cock. I curled up on my side, unable to stretch out completely, the cold floor pressed against my sweating face. It was like I could still feel it filling and sliding inside of me.\n\nAs the cock and I started to dry off, it belatedly slid off the wall and landed on my leg, sending another shiver through me before I dozed off on the bathroom floor. I knew I'd have to clean all this off, and take a shower, and probably air out Katie's room, but all of that could wait a little while."
    ],
    "authorname": "thenry",
    "tags": [
        "christmas decorations",
        "bobbed front",
        "cup base",
        "katie room",
        "back glass",
        "still room",
        "suction cup",
        "top shelf",
        "started sliding",
        "mouth feel"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/cocking-it-back"
}