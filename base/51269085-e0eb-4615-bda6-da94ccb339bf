{
    "title": "Brielle",
    "pages": [
        "I sat in my car for over half an hour, staring at the wheel and refusing to look at the little house. Some people would be excited, some people would have told me to stop taking for granted that I was gifted the cute little cottage on the outskirts of the sleepy little east coast town. I wasn't angry that my ex father-in-law had given me the property, I was angry that I needed it.\n\nDerrin and I had had an understanding for four long years. His parents were rich, he was gay, they wouldn't understand and I needed to go to college. It was a win win situation. We were married on paper, Derrin kept his activities with his 'accountant' a secret and I got a free education. \n\nI hadn't worried about the details much, Derrin and I had been best friends since the third grade. He came out to me and me alone in the ninth grade. It wasn't like I had guys banging down my door for dates, so it seemed like a great idea at the time. A super idea. \n\nWhen Derrin died unexpectedly in a car accident, with his boyfriend, it took several months for the details to emerge. Those details started with local cop Eric Outlaw. Yes. That was his real name. A cop named Outlaw. He thought the irony of it was vastly amusing. I found it less so. \n\nEric showed up at my house two weeks after the accident, I was still mourning my best friend. He was all kind smiles at first, but then his attention became... unwanted. He knew what I was, what I had been. A 'beard', so he said the term was. He assumed I was in it for the money, he didn't understand lifetime friendships. \n\nThe more I resisted his advances, the more details seemed to mysteriously emerge about Derrins death. The final straw was when there were whispers that the coroner's report detailed a mouth full of semen. \n\nOf course Derrins family got wind of it and demanded to see the full report. That was how they found out their son was gay. That was how they found out that I had been covering for him since we were thirteen years old. \n\nOfficer Outlaw did not leave it at that. He kept coming around, harrassing me, trying to get me to let him take me out. I went to the other cops, told them he was harassing me. He told them I was exaggerating, that I was mad that Derrins parents had found out what he was and I wanted to punish him. After I was blown off by them, he came at me with all he had. He stalked me, held me captive in my home for weeks, too afraid to step out. He had vulgar items shipped to my house, sent me pictures of myself while I was changing clothes, proving he had wired my house. \n\nI went to my ex in-laws. I had nowhere else to go. The foster home I had grown up in wasn't a real family to me, Derrin had been all I had. I told Manny, Derrins father, what was happening. That was when he had handed me the keys to the little house I was sitting in front of. It had been his grand-mothers and he had never sold it. He had fond memories of visiting it as a child, but he didn't want it to go to waste either. He wanted me to have it. Take care of it. Get away from the suburbia town outside of Chicago where the local police were assholes.\n\nI went home, packed a single bag, cleared out my bank accounts and got on a plane. I even left my car at the airport. I took the rental car to the nearest car lot, got a cheap car with cash, and drove to the tiny town with the tiny house. I felt I had reason to be pissed. My life had just been overturned completely by a dick of a cop. \n\nFinally, I peeled my hands off the steering wheel and looked at the house. It was cute, a sloping A frame facade of stone with extensions, all in dark slate blue and lighter stone accents. It was cute, very vintage. Even the yard with it's wrought iron fence was adorable. The cobblestone path to the front door actually made me smile. \n\nI unlocked the door and was startled by a yell.\n\n\"HEY! What are you doing there?!?\"\n\nI turned to the old man across the street and down about thirty yards. \"Uhh, hi. I guess I am your new neighbor?\"\n\n\"Bullshit! You don't look like any Estevon I have ever known!\"\n\n\"I am! I am Brielle Estevon. I was married to Derrin before he passed. Manny... uhh, Manuel gave me the keys, said I could stay here a while.\"\n\n\"Manny gave you those keys? What happened to his boy?\"\n\n\"Car accident.\"\n\n\"Sorry for your loss. Sorry to trouble you. That your car? Can't leave it parked there, there's a driveway around the back when you turn on the side street there.\"\n\n\"Ok, thanks. I will move it in a minute, I wanted to look around.\"\n\n\"Ought to move it now, mail is due any moment and she throws a fuss!\"\n\n\"Umm, sure. Thanks,\" I said, but I was frustrated. Great. I needed a persnickety old neighbor to make my life hell. I moved the car.\n\nHe was right, as I turned the corner and went down the steep hill, there was a driveway behind the house and I tucked the car into the little square surrounded by shored up walls. The backyard was taller than the driveway and it felt cramped and awkward as I got out. There was a door in the cinder block wall on the passenger side and I was curious. Was it a cellar, a shed? What? The key that unlocked the front door unlocked it as well. There was a long, dark, low hall. No light switch, no light. Nope.\n\nI closed the door and locked it back up, then walked around to the front of the house. The neighbor was gone, at least from what I could see and the front door still unlocked. I went in and looked around. Empty. The room smelled old, very old, and musty. The hardwood floors looked original and the room felt odd. It took a moment to realize how low the ceilings were. That's right, the house was built before the codes determined ceiling heights. It didn't bother me. I wasn't tall by anyone's standards. That was the main reason no boys were ever knocking down my door throughout school and after. Hard to be sexy when you look like an eight year old boy. \n\nI wandered to the kitchen and was happy to see it had been updated recently. The hardwood floor remained, but the appliances were gunmetal and the counters marble. It wasn't large, but it was nice. The dining room right off of it was a bit cramped. Maybe I would just put a bistro table in the corner of the kitchen? The bedroom was large, but after a second look, I realized a wall had been taken out and it used to be two rooms. There was no closet. Across the hall was a bathroom that had also been redone and a small room that had been turned into a walk-in closet. Well that would work.\n\nI went back to the kitchen and looked in the little pantry and laundry room with the door that led to the backyard. There was another door and I opened it to stairs leading down. No lightswitch. Nope. I shut the door and locked the gate latch lock on it, then wedged the mop handle across it for good measure. I made sure the back door was locked, then went back out to my car. I would have to find a furniture store and a motel until I could get furniture delivered. I also need to go clothes and food shopping. Furniture first.\n\nI had to go two towns over for furniture and clothes and one town over for food. It took the entire day to set it all up. It was dark before I got back to the little house to put food away, then I kicked myself because I hadn't asked anyone where a motel was. I'd parked in front of the house to unload groceries and the few clothes I got, and when I parked it around the side, there was a man walking a large wolfhound dog. I stared at the dog. I had only seen those on TV! \n\n\"Umm, excuse me,\" I said to the man, still staring at the dog, who was wagging not just its tail but it's whole hindquarters at me. \"Do you know if there is a motel in town? Or close? Does he bite?\"\n\n\"She's friendly, she likes chin scratches,\" the man said in an accent I couldn't place. I looked at him when he spoke, his voice was deep enough it demanded attention. He was tall, which meant he towered over me, and younger than I had assumed with that odd newsboy cap he was wearing. Along with the coat and scarf, I assumed he was an old man. He was maybe thirty, if that. It was so dark, I couldn't see distinct features, just a clean shaven jaw and a shine in his eyes. I knelt and pet the dog, letting her lick my face as I scratched her chin. \"There's an inn in town, more like a bed and breakfast, but I think you'll be needin' reservations.\"\n\nWas he scottish?!?\n\n\"Oh, I don't suppose you have a number?\"\n\n\"Not on me, girl. Not sure they allow children anyway. Your family just move into the old Estevon place?\"\n\n\"Oh, no sir,\" I said standing. \"I mean yes, I did, but I am not... Umm. I mean, I moved here alone. I'm twenty four. I'm Brielle Estevon.\"\n\n\"Forgive me miss, you aren't looking much like an Estevon, or like a miss.\"\n\n\"No, yeah, I get that a lot. Comes with the height. But yeah, I was married to Dillen Estevon, Manny's son?\"\n\n\"The grandson?\"\n\n\"Yeah.\"\n\n\"You were married? Not any more?\"\n\n\"He passed. Car accident.\"\n\n\"Sorry for your loss, miss.\"\n\n\"Thanks.\"\n\n\"If you'd like to step over, I could find you that number, it'd be in the book.\"\n\n\"Like, phone book? People still have those? Umm, it's fine. What's the name of it? I can just google it.\"\n\n\"Google it. Right. I forget you folks with your queer ways.\"\n\n\"Queer ways?\" I asked, immediately offended.\n\n\"Strange. Off. Unusual. Always googling and snapping and texting and whatnot.\"\n\nNow he DID sound old.\n\n\"Umm. Sorry. I'll let you get back to your walk.\" (Boomer) I thought the word but didn't say it as I stepped back and pulled out my phone.\n\n\"It was nice meetin' ya miss. I am Keane Riordan, I live there down the hill. Step in if you need anything. Let's go Lia,\" he said, tugging on the dogs leash. I watched him walk away.\n\nI turned back to my phone and of course there was no signal. It was going to be a long night.\n\nI laid on my new couch as soon as the movers set it down. My eyelids were sandpaper and I was so tired. I didn't sleep, but I also didn't open my eyes as the movers traipsed through my house, hauling in furniture. \n\n\"H'lo?\"\n\nI recognized the old mans voice. \"Here,\" I called, still not opening my eyes.\n\n\"This is a lot of stuff for this little house, don't you think young lady?\" he demanded. \n\nI sighed and sat up, opening my eyes. \"Doesn't seem like too much, the place was empty. Sorry, I didn't get your name yesterday.\"\n\n\"Everett. Donald Everett. Gladdys and I have lived here goin' on sixty years! Just me now, lost her four years back, but I'm still goin' strong. Shame when Alejandra passed. She was a helluva fuck in the day.\"\n\nI choked on nothing.\n\n\"Gladdys never thought much of her, but she was more of an ass girl and Ally had the tits, you know? I liked the tits. Gladdys prefered Lena up the street, but we never could talk her into comin' around for a poke. Got Sherry in our bed a few times, but she was a taker, not a giver. Those are never fun. What about you, which way do you swing?\"\n\n\"Umm, I don't, actually. At all.\"\n\n\"Shame, I guess. Y'aint more than a mouthful anyway, doubt you could keep up. You listen, don't you go fillin' this nice home with a bunch of new shit! It's not meant to be so full, it needs space!\"\n\n\"Uhh.. sure. Got it. I'll let you see yourself out,\" I said, gesturing at the door. One of the movers was paused in the hallway, watching the old man warily, like he was afraid he was going to have to show him out. \n\nDonald left with a harumph and the mover walked passed, raising his eyebrows at me. When he came back through, he grinned. \"I do not envy you and your new neighbor! He is a card!\"\n\nHorrified, I went and looked out the window. Donald was standing at the edge of his property, watching the movers with his pants around his ankles, stroking himself.\n\nI groaned and I could hear the mover laughing in the kitchen.\n\n\"What do I do?\" I asked loudly. \"Call the cops?\"\n\n\"I mean, I don't know. Your call. If it was my place, I would, but I have three kids. If I lived alone? I wouldn't care, I would just shut the curtains and let him live out his remaining days in peace. I mean, if he barges in here and starts pointing that thing at you? Definitely call the cops. I don't know. Maybe let them know?\"\n\nI picked up my phone, then froze. No. If I called the cops, they would want my name. My name would show up in some cop database and Eric would find me. Just like that. Fuck. I guess the old man got to stroke himself until someone else called the cops on him. I closed my curtain tightly and went back to the couch. \n\n\"Where do you want the desk?\" another mover asked.\n\n\"Dining room. All the office stuff in the dining room.\"\n\nOnce the movers were gone, I locked myself in the little house and began trying to make sense of all the boxes full of parts. I'd never had to build shelves from pre-assembled pieces before, or other furniture. With an exhausted huff, I threw myself on the bed, deciding I needed a nap in order to function.\n\nThe nap lasted a bit longer than I intended, I woke with a start in the dark. It was ridiculously quiet in the house. I got up and turned on the light, looking around at the scattered pieces of nightstand next to the bed. The living room had boxes of end tables, a coffee table, entertainment center, shelves and more. The office had more shelves, a desk and the extra furniture for my bedroom. All of it had to be built. What kind of furniture store sold mostly furniture you had to build yourself? It was ridiculous. I should have found a place with wifi and ordered some online, but that was the problem with cash. \n\nIt was overwhelming and the house was hot as hell. I turned down the heater which had somehow found its way up to 88 degrees and opened the front door. I was walking out on the lawn before I remembered my crazy neighbor. There was no sign of Donald. Thank god.\n\nI laid down in the grass and looked up at the stars, silently asking them what the fuck I did to deserve this. \n\nA shadow blotted out the stars and a warm splat landed on my face. I giggled and sat up, petting Lia and wiping slobber off my face.\n\n\"She's taken a likin' to ya miss,\" Keane offered from the side of the road.\n\n\"She's a sweetheart.\"\n\n\"Getting yourself all sorted?\"\n\n\"Umm?\"\n\n\"Moved in and such?\"\n\n\"Oh, yeah, I guess. I guess it would be easier if I were handier with tools.\"\n\n\"Old homes needs lots of fixin I s'pose.\"\n\n\"Oh, yeah. Not like that. The new furniture. It doesn't come assembled.\"\n\n\"Oh, well that's easy. You take Lia for a walk and I will build your table or what have you.\"\n\n\"If it was just a table, I would take you up on it. Unfortunately there are a full dozen boxes in there.\"\n\n\"You need that much furniture for that little house?\"\n\n\"Well, it's not so much really,\" I said defensively. I was starting to feel weird about how much furniture I had now that both neighbors I knew had said something.\n\n\"Let's have a look then,\" he said, marching to the open door. I followed, a little alarmed. \"This one of'm then? What's this?\"\n\n\"Entertainment center?\"\n\n\"What's it do once it's built?\"\n\n\"What?\"\n\n\"How does it entertain you?\"\n\nI laughed and he turned to look down at me. My breath caught. Holy hot fucking neighbor. Keane was beautiful. His thick, curly black hair caressed his sculpted cheekbones like a wet dream. His sapphire blue eyes looked like something off the cover of a romance novel. He was pale, but it totally worked for him. He was gorgeous. Coupled with that deep voice and irish accent, I could feel my panties getting wet.\n\n\"Umm... uhh... you were joking, right?\"\n\n\"How does it entertain you? What does it do?\"\n\n\"Umm, it holds things... umm, you know, like a television, game consoles, dvd players... that kind of stuff?\"\n\n\"I see. Well this isn't important, save it for last. What about this? Bookshelf. Well that's something I s'pose. You read. Coffee table. Coffee table? A table just for coffee?\"\n\n\"Uhh, no... I mean, it just sits in front of the couch and chairs in case someone needs to set something on it...\"\n\n\"Hah, got you there, that WAS a joke. I know what a bloody coffee table is miss. Let's see what else you have. Lia, stay.\"\n\nHe wandered to my bedroom and I followed him, my libido leading the way.\n\n\"Nightstands. Two. There two of you livin' here?\"\n\n\"Uhhh... no. Just, symmetry, you know?\"\n\n\"Symmetry. Right. Here. This is what you should do first. A dresser for your clothes. Where are your clothes?\"\n\n\"Closet across the hall.\"\n\n\"Right. So you need this here or there or not at all?\"\n\n\"Umm...\"\n\n\"Right. So, which do you think you will be needin first?\"\n\n\"Uhh... well... probably the desk? For my computer?\"\n\n\"Right, the fuckin' googling. Lead the way then. How old did you say you were?\"\n\n\"Twenty four,\" I answered, glancing back at him. He was having to hunch in the hallway, the ceiling was so short.\n\n\"And your name was Brianne was it?\"\n\n\"Brielle.\"\n\n\"Brielle. Never heard that. It's a bit pretty, isn't it? This the desk then? Doesn't look so hard. That the computer there in that box?\"\n\n\"That's a printer. This is the laptop here, it's my computer.\"\n\n\"That small little thing? All right then miss. You take Lia for her walk and I will build your desk for you.\"\n\n\"Umm, are you sure? And.. how far is her walk? And can I trust you here alone with my stuff?\"\n\n\"You'll have my dog. All of your stuff combined wouldn't be worth my dog. No offense. Just two blocks. Avoid the old Everett place. The man's a loon.\"\n\nI laughed and nodded. That I could agree with. \"Alright Lia, let's take a walk,\" I said brightly, picking up her leash. I walked her three blocks, just to give Keane enough time, even so he wasn't halfway finished by the time we got back. \n\n\"There ya are. I was afraid ya got lost. Yes lovely girl, I missed ya too. Go sit down now.\"\n\n\"If you need to go or something, don't feel obligated to stay.\"\n\n\"Nowhere to be luv, it's fine. Only one I answer to is Lia, right old girl? That little gadget of yours chirped while you were gone.\"\n\n\"My phone? I can't believe I left it here!\" I laughed as I picked it up. I hit the text icon that was lit up. \n\nE. Outlaw - I guess you gave me the slip babe. Game's not over yet though, is it?\n\nI stared at the text, my blood going cold.\n\n\"You alright miss? Miss??\"\n\n\"What?\" I asked, pulling away from his hand on my shoulder. \"Fine. I'm fine. I'm sorry. Oh, you finished? How did you finish so fast, you weren't halfway done?\"\n\n\"Miss, you stared at that gadget the last half hour. I tried calling you, but you just started shakin' like a leaf. You sure you're alright?\"\n\n\"Umm, yeah. Just nerves. New place. You know.\"\n\n\"Sure. I s'pose I do. I'll start on that shelf now, unless you are needin' some sleep miss?\"\n\n\"Oh, you don't have to do that!\"\n\n\"I don't mind. It gives me something to do. So you were married to the grandson. How long?\"\n\n\"Four years? He died last year.\"\n\n\"You moved here for a different reason though, didn't ya?\"\n\n\"Umm. We all have different reasons for different things,\" I said lightly, watching him sort the pieces of the shelf. I sat on the floor to pretend to help him.\n\n\"Your reasons scare ya though.\"\n\n\"I'm just a long way from home, from what I am used to.\"\n\n\"If that's how you want it, I'll stop pryin'.\"\n\n\"What about you? You live alone?\"\n\n\"Yes. I had a wife when I was younger, but I lost her to illness along with my infant son.\"\n\n\"I'm so sorry!\"\n\n\"It was long ago.\"\n\n\"How old were you?\"\n\n\"I was nineteen, she was eighteen. Patrick was only a week old.\"\n\n\"You never remarried?\"\n\n\"I worked, worked my pain away until it was gone, then I kept workin'. Next I know it's now and work is all there ever was.\"\n\n\"How old are you?\"\n\n\"Not a day over twenty nine, but I feel closer to ninety nine most days. The world wears on ya. This one is much more simple than t'other. Don't see many books to fill it with though?\"\n\n\"No, not yet. I left all of mine behind... I will have to get more.\"",
        "\"Behind? In the life you are runnin' from?\"\n\n\"Yeah, I guess I am.\"\n\n\"I won't tell your secrets luv,\" he said, turning the shelf on its side to finish it.\n\n\"I guess not. Who would you tell? Umm. Ok. Dillen and I were married, but he was gay. He loved a man. I knew it, we were friends, I married him so his parents wouldn't find out he was gay, so that he could be with the man he loved. They died together in a car accident. The cop running the case, he got weird about it. Asked me out. When I said no, he made a huge deal about Dillen and letting his family know he was gay and that I was covering for him. Then he stalked me, made my life hell, wouldn't let up, bugged my house. Manny gave me this place to run to, to get away from him. The cop. So that's it. I came here with nothing to escape a dick cop who thought it would be fun to terrorize me. That text was from him. He has my new phone number.\"\n\n\"Sounds like a right twat. So Dillen was for the boys then? What about you? Did you not get to find your own love?\"\n\n\"I went to school. It was an easy way to focus on school with no distractions.\"\n\n\"Distractions are good for the soul luv. This bobby though, why didn't you turn him in?\"\n\n\"His name is Eric.\"\n\n\"What?\"\n\n\"His name is Eric, not Bobby.\"\n\n\"No, luv, the policeman, the bobby, why didn't you turn him in?\"\n\n\"I did. I tried to. They believed him, not me.\"\n\n\"This one's done. Nightstand now? So what if he follows you here? He live back in Chicago too?\"\n\n\"Just outside of Chicago in a suburb,\" I said, sitting on my bed. \"You really don't have to do all this!\"\n\n\"It's a small thing. I don't mind. Lia! Get down off that bed!\"\n\n\"She's fine,\" I laughed, snuggling the big dog.\n\n\"She's spoilt, she is. These will be quick, they are little things. Red sheets? I read something once about people who slept in red sheets.\"\n\n\"What did it say?\"\n\n\"Red sheets indicate promiscuity.\"\n\n\"Hah! Yeah, these were on sale. There wasn't much selection in the california king anyway, it was red or this ugly blue and yellow floral.\"\n\n\"And you needed a bed so big?\"\n\n\"I bring my work to bed with me a lot. I like to be able to just roll over and sleep without having to put everything up.\"\n\n\"Sleep with your work? No distractions? You are soundin' more and more like what you need is a good lay.\"\n\nMy gut tightened and I blushed, looking down at him as he drove a screw into particle board. I had no idea what to say to that. He turned and looked up at me curiously when I didn't respond. He grinned. \"It wasn't an offer luv, just an observation. I'm doubtin' you're ready to jump in the sack with the likes of me anyway. Little thing like you will need a bit a' primin'.\"\n\nI badly wanted to ask what 'primin' ' meant, but I didn't dare. I was pretty sure I knew. \n\n\"Didn't mean to make you blush so, luv. It is lovely to see though. You are a pretty little thing, I'll give you that. It's not much wonder the twat was pressin' you as hard as he was. This one is done miss. I am thinkin' I should go now. If you can do without the rest, I can come back tomorrow evenin' and finish the others. If you want. If I haven't offended you too much now.\"\n\n\"Oh! No, no, you didn't. I just... I don't really... umm. You don't have to come back tomorrow. I mean, you can if you want to, but you don't have to? Thank you for doing all of this, really. I would still be trying to figure out the desk if you hadn't come! Thanks.\"\n\n\"It's nothin' at all luv. Perhaps you can make me dinner sometime to return the favor?\"\n\n\"Oh! Sure. Yeah, I can do that. Umm, I can make dinner tomorrow? If you do come back?\"\n\n\"Tomorrow then,\" he said with a cheerful smile, then left, Lia following him. \n\nI shut the door and let a breath out. Why was I so freaking awkward? And why the fuck did I leave my vibrator back in Chicago?!? I slid the lock and went to take a shower, excited for once about the detachable shower head.\n\nIt was no wonder my dreams were filled with lust, desire and an aching need.\n\nI slept in late, then stumbled into the kitchen, only to discover that I had coffee, but no coffeemaker. Ugh. I started a list. Coffeemaker. What else. Oh, right. Vibrator. Did they sell those in stores or would I have to get a card to order one online? I could get a few of those prepaid cards. Fuck. Why hadn't I thought to just toss mine in my bag? It was right there in my nightstand drawer. Eric probably had it now. Yikes, there was an unpleasant thought.\n\nI wandered away from the list to find clothes. I was going to go shopping today, find something super sexy to wear this evening, and something easy to cook. I wasn't an awful cook, but I went from living in a foster home where meals were cooked for me to being married to Dillen where a cook prepared every meal. It had spoiled me. \n\nI also drove around the little town, found a cute little coffee shop to have breakfast (who cared if it was past noon?) and a few other little places I made mental note of. Especially the little used bookstore! By five, I was pulling back in front of my house with bags and boxes to unload. It was all kinds of fun until it came time to unload the car by myself.\n\nOn my third trip, I heard Donald yelling at me about something. I kicked the door shut behind me, but he was waiting on my walk when I came back out.\n\n\"I told you not to fill this place with shit! Didn't I tell you?\"\n\n\"Excuse me Mr Everett, you need to step off of my property!\" I snapped angrily. He puffed up like a peacock. \"You have NO right to tell me what to do with MY house. You get out of my yard right now!\"\n\n\"Who do you think you are you little hellion? This aint your place! This is Ally's place!\"\n\n\"Allejandra Estevon died and her grandson gave me this house. That makes it my property. You have about two seconds to get out of my yard before I call the police!\"\n\n\"The hell if I will! I spent more hours here than you have been alive you little cunt! You go ahead and call Sheriff Last and see what he says! Call him! Here, I have his HOME number. I'll call him myself!\" he yelled, taking off towards his house. \n\nI stared at him. Was he for real? The man needed to be in a home. I grabbed another load and peeked out before stepping out again. I was coming out after the last load to move my car when an old Sheriff's car pulled up. My heart sank. This wasn't happening!\n\nA man stepped out, tall and skinny, handsome for a middle aged guy. He had his brown hair cut short and his brown eyes matched his hair. \"Miss,\" he offered. \"Your parents home?\"\n\nI felt my face heat as fury welled up in me. \"My parents are dead. If you mean my foster parents that I lived with until I graduated highschool six years ago, I am sure they are at their house having dinner.\"\n\n\"I meant no offense ma'am. I'm Sheriff Last. Tom. Don gave me a call and I wanted to come speak to you in person. I know he's a bit... set in his ways and maybe even a bit off, but I'd like to ask for your patience. I told him he couldn't just come over here yelling at you, it's your place now. It's just hard on him, seeing so much change. If he gives you any more trouble, here's my card. Call me straight away and I will take care of it, Miss?\"\n\n\"Estevon. Brielle Estevon.\"\n\n\"You... don't look like an Estevon, ma'am, pardon me for saying so.\"\n\n\"No, it's fine, I don't. I married Dillen. Manny's son. He passed last year in an accident. I came out here to start over.\"\n\n\"I see. Well if you need anything, you have my card. You know... I have a friend who could probably help you fix up that old house? He's a good guy. Single too.\"\n\n\"I know you are not trying to set me up after hearing that I was so recently widowed,\" I said, lifting an eyebrow at the man. \n\n\"Sorry, ma'am. Dillen passed almost a whole year ago now. I couldn't come to the funeral, it was too far. Ally and I were close. Mrs Estevon I mean. I know Manny and I knew Dillen. I was invited to your wedding too, but I couldn't make that either. I thought, given the circumstances surrounding the unfortunate accident that you might be ready to move on.\"\n\n\"You mean because he was gay?\" I asked, my tone turning dangerous.\n\n\"Well, I don't mean to say that it was anything to do with you or anything...\"\n\n\"Sir, stop. Please. Dillen and I grew up together. We met in kindergarten and became best friends in the third grade. The summer before highschool started, he told me he liked boys. He couldn't tell another soul, his family wouldn't understand. So we stayed close, we got married right out of highschool and I was HAPPY to cover for him so that he could live with the man he loved. We were best friends and I adored him. He adored me. We were better than most couples, the difference is we didn't have sex. So no. I am not ready to just move on. I lost more than you can imagine, so please let it go.\"\n\n\"Sorry to bring it up ma'am. Not to press the issue. But a little thing like you, maybe shouldn't be stayin' all alone, especially given how innocent you are.\"\n\n\"Innocent?\" I asked, confused.\n\n\"Virginal if you don't mind the term.\"\n\n\"How the FUCK would anyone even know that?\"\n\n\"There is no reason for that sort of language little miss...\"\n\n\"No, I mean really? How does that change anything about me staying here alone? Oh, she's a woman she's just fine, unless you know, unless she's a virgin. The rapists and robbers can smell that shit you know, can't have any of that just laying around!\"\n\n\"Ma'am, you are getting out of line now...\"\n\n\"No, you are out of line! My love life is NONE of your business! It's ridiculous that I should even have to say that out loud in this day and age! I have your card, if that old loon comes back, I will call the police. I am going to move my car and go hide in my home to protect my supposed purity.\"\n\nI turned my back on him to go to my car, but he caught my arm. \"Ma'am, just a damn minute. You don't get to just walk away, I am talking to you!\"\n\n\"I am not your child! You don't get to decide when a conversation is over, get your hand off me!\"\n\n\"You just listen. I am giving you sound advice, you don't need to get your back all up. Find yourself a friend, a roommate, someone. Don't stay here alone without company.\"\n\n\"Are you saying this neighborhood is dangerous? That you can't keep your sleepy little town in line? Let go of me, I will be fine. I said let go!\"\n\n\"Fine,\" he said angrily, letting me go with a shove. \"Don't you say you weren't warned!\" He yelled, walking away. I heard him grumble, \"little bitch,\" as he got in the car.\n\nI pulled my car around and hurried in, my adrenaline still high enough to make me shake. What right did some asshole cop have to say all those ridiculous things? Were all cops assholes?\n\nNow I was pressed for time and I had to hurry to get lasagna in the oven and shower and change. I was debating earring choices when there was a knock on the door. I hurried to get it in my little black dress. I had meant to be wearing my heels, but I was out of time.\n\n\"Hey!\" I smiled up at him. \"Come in!\"\n\nHe stepped in, ducking under the door frame. He wasn't wearing the hat tonight, just a blue cable-knit sweater that matched his eyes. He was dreamy. \n\n\"Smells heavenly in here! And aren't you a lovely sight? D'you have plans?\"\n\n\"Oh, no. I am done with all my big plans for the day. Have a seat, the lasagna is done and the bread is ready to come out now. Do you drink wine? Say yes because I went to a LOT of trouble to get it. No one ever likes to sell to me.\" I realized I was babbling as I set the pan of bread on the stove. I had to clench my teeth to plate it so that I wouldn't keep talking. Was he watching me? I felt incredibly nervous.\n\n\"Wine will do. I see you have brought in a few more things.\"\n\n\"Red or white?\"\n\n\"Whichever you have open.\"\n\n\"Umm, neither actually. Here, I will let you do that.\" I hastily handed him the wine and wine opener while I set dinner on the table. \n\nYou know, bistro tables and their high stool style chairs are super cute in the catalogs and on display, until you actually have to climb into one like a toddler, in a short dress. By the time I got settled into my chair, my face was flaming hot. \n\nHe was smirking at the wine he was opening like he was too smart to speak, but couldn't help but find the humor in it. He uncorked the wine and set it down and stood. \"Where are your wine glasses luv? Sit tight, I will get them.\"\n\nUGH.\n\n\"Cupboard next to the sink,\" I offered in humiliation. He sat down and poured me a tall glass of wine. I did not drink, I hated wine, especially red, but I had wanted to look sophisticated and mature. Yeah. Real mature sitting here swinging my bare feet two feet from the floor. \n\n\"D'ya need to say grace luv? I don't myself but I will wait if you do.\"\n\n\"Oh, no. Dig in. Hope you like italian. My foster parents were italian, so most of what I know how to make leans that way.\"\n\n\"It's delicious. Don't often have a meal that don't come from a tin.\"\n\n\"You didn't bring Lia tonight?\"\n\n\"No, I walked her early. Figured I might have my hands full tonight. What is that gadget there?\"\n\n\"Coffee maker? Or the toaster?\"\n\n\"Heh. So have you heard more from the twat?\"\n\n\"Not today. At least not that particular one.\"\n\n\"A new twat then?\"\n\n\"Local Sheriff, you know him?\"\n\n\"Seen him hereabouts. He's at the Everett place quite often these days. He givin' ya trouble?\"\n\n\"Just being... you know. Alpha male.\"\n\n\"That's a new term then. Alpha male. That mean twat?\"\n\n\"Sure,\" I answered with a smile. I tried to keep myself from glancing up at him too much, but it was hard not to. Especially with the way he was looking at me and smiling like he knew exactly how hot I thought he was. I sipped enough of the awful wine that he topped it off. Blech. \n\n\"That was wonderful luv, but if I eat another bite I won't be able to bend to do any work. Here, let me help you,\" he offered, taking my hands so I could hop down. Not humiliating at all! His hands were enormous around mine. I looked at them, large calloused and rough, working hands. They engulfed mine completely. They were incredibly sexy hands, I could imagine how they would feel, gliding along my back, my hips... \n\n\"Do I get them back?\" he teased, tugging his hands lightly.\n\nI jerked my hands away, horrified. Oh. My. GAWD. What was wrong with me?!? I of course chose that moment to remember that I had NOT found a vibrator that day while shopping. \n\n\"Uhhhh...Ummm, uuuhhh... where did you want to start? There are more shelves in the office there, or did you want to go to the bedroom?\"\n\n\"Bedroom?\" he asked, his smile twitching.\n\n\"For the dresser!\" I said in a rush. \n\nHe was teasing me. He knew I was flustered and I wanted him and he was toying with me. I was practically throwing myself at this man and he was making a game of it. I was no ones toy!\n\n\"Umm, actually. I think this was a bad idea. Maybe you should go ahead and go home. Thanks anyway, I will figure out the rest.\"\n\n\"If the wine has you feelin' a bit off it's no trouble luv. I can come back tomorrow. Get you some rest then,\" he said gently, going to the door. \"Dinner was lovely and so was the company.\"\n\nHe left and I locked the door, then stood wishing I hadn't lost my temper. If I had just played along, we would probably be pulling each others clothes off in my bed right now. That was how it worked with normal people, right? They teased and flirted and then let things heat up naturally? Ugh. I was horrible at this.\n\nI climbed in my bed and closed my eyes, trying to imagine what it would feel like to have his hands on me. Fantasy after fantasy reeled through my head and I came again and again, unable to sate myself. I was sweating and my limbs were aching after I had cum for the fifth time. I realized that it wasn't just my exertions, the house was HOT. I got up and went down the hall to discover the heat was set at 88 again. I turned the heat off completely and opened a window slightly in my room. I took a shower before climbing back into bed. My dreams were more vivid than my fantasies and I woke several times on the brink of an orgasm, having to finish myself. I had never fallen in such instant lust with someone in my whole life. I'd had celebrity crushes, like any girl. I'd had a crush in highschool on a jock who never knew I was alive. The first time I touched myself and made myself cum, it was with him in mind and his name on my lips. I hated now that his name had also been Eric. Eric Smithson. \n\nAs I thought about it, I realized that Keane was almost a living embodiment of my dream man. Dillen and I were laying in his bed in his room, describing our ideal man. I said mine as tall dark and handsome, but not too dark, I quickly amended. I didn't want Dillen to think I was one of the dozens of girls that had a crush on him. Dark hair with a pale european complexion, dark blue eyes, the kind of man who could fix anything, with a sexy accent. He would be older than me, but not too much, and his voice would draw chills up your spine. My mystery man had seemed to materialize, though I never realized a scottish, or was it irish? accent was sexy. If it wasn't before, it was now. I could hear him whispering my name in his sexy voice in my dreams. \n\nI woke up past noon again, my body aching. I had kicked off my sheets, sweating again. I rolled out of bed with a groan and stumbled to put coffee on while I went to take another shower. On the way, I noticed the heat was on again, set at 88. What the hell? I turned it off again, wondering if I was going to have to call someone to have it fixed. \n\nI let the hot water pound on my sore muscles until the hot water ran out, which was much more quickly than I was used to. Note to self: Showers could last no longer than 13 minutes. \n\nCoffee didn't seem to do the trick, even after I made a second pot. I sat in front of my laptop and stared at it blankly, feeling fuzzy and far away. What was I doing again? Right, I needed to call and get internet. That's what I was going to do today. I got my phone and stared at the screen in confusion. 1 missed call, 3 new messages. I blinked at it a moment, then frowned. What the hell was wrong with me? I wanted to go back to bed. I opened the messages.\n\nE. Outlaw - Miss me yet babe?\n\nE. Outlaw - You left a lot of sexy things here, should I bring them when I cum see you?\n\nE. Outlaw - BINGO\n\nBingo? What did that mean? I scowled at the message, then flipped over to the missed call. Manny. Ugh. I would call him back later. I laid down on the couch and drifted off again.\n\nI jerked awake and stared at the dimming light in the window. Had I really slept all day?!? I jerked my phone up. No, it must just be overcast. I called about internet, then debated about calling Manny back. In the end I decided I owed him a call back. Thankfully, it went to voicemail.\n\n\"Hey Manny, I saw you called. I wanted to let you know I got here fine and I am getting settled in. It's a cute place, thanks again! Love and miss you all, bye!\"\n\nI paced, looking around. Should I try and build the rest of these things myself? I wanted him to come back, didn't I? I wanted him to come back and put his hands on me. Why was I so enamoured with this stranger? He could be a serial killer, or a rapist, or any number of things. I needed to get a grip and stop mooning over this man. \n\nI hoped he stopped in. Maybe I should go apologize? Make him some cookies or something? No, I hadn't done anything wrong. UGH! \n\nI went back to my laptop and decided to set up my printer, cussing about not having wifi so I could do it all wirelessly. It was insane the things I had always taken for granted. I looked at my phone to check the time again, decided I had enough time to go into the little town before he would come around. \n\nI stopped and put in an order at the little chinese place, enough for two. I like leftovers. What? While I waited, I got to browse at the little bookstore and ended up with two large paper bags of books before going to pick up my food order. On impulse, I stopped at the little bakery too and picked up a small peach cobbler before they closed. The woman tried to engage me in conversation, but I was in a hurry now, hoping he wouldn't knock while I was gone and think I was blowing him off.",
        "Ugh. Way to come off desperate. Let him think I wasn't waiting around for him. Let him think he had misread me.\n\nI was entirely too pleased to see him walking Lia up the street when I pulled into my little driveway. I climbed out and tried to control my smile as I turned to him as he leaned on the cinder block wall. \n\n\"Ya' needin' a hand luv?\" he asked, motioning to the car. \n\nI hesitated, then shrugged. \"Sure, if you don't mind,\" I answered, grabbing the bag of food and the cobbler. \"Those bags are heavy, they have books.\"\n\nI walked to the front, not looking to see if he followed or not, acting like I didn't really care. I cared. I was tense walking to my kitchen to set the bags on the table. I heard him in the living room, setting the bags down and I let out a breath I didn't know I had been holding.\n\n\"What are these then?\" he called.\n\nI poked my head out to see what he was talking about. He had one of the bags upended, looking at books. \"Books,\" I answered, then went back to the kitchen.\n\n\"Well that settles that mystery then. What sorts of books?\" he asked. I heard him upend the other bag.\n\n\"Try not to make too big a mess! There's a mix. That first bag was mostly epic fantasy. The other has some technical manuals I need for a few things.\"\n\n\"These look very boring. You takin these to bed with you then?\"\n\n\"Yes, they are for work,\" I answered, unable to suppress the grin.\n\n\"Ya still needin' help with the furniture or did ya get it sorted luv?\"\n\n\"I haven't touched it, I'm having a hard time adjusting to the time change I thing, I can't sleep well. You hungry? I have enough for two.\"\n\n\"Were you expectin' me then?\"\n\n\"Actually, I thought some leftovers in my fridge would save me from having to cook tomorrow, but I don't mind. Pull up a chair.\"\n\n\"What is it?\"\n\n\"Beef and broccoli. Chinese food?\" I offered when he wrinkled his nose. \"You don't like chinese food?\"\n\n\"Dunno. It smells a bit off. Is it s'posed to smell that way?\"\n\n\"Umm. It smells good to me? Try some.\"\n\nI filled my plate and climbed into my chair, then dug in. He watched me warily before he finally tried a bite. He made a face. \"Edible, I guess, but not somethin' I'd be choosin' for m'self.\"\n\n\"Well you don't have to eat it. I have peach cobbler too.\"\n\n\"See, now there's somethin' I can get behind. Are you certain this is beef?\"\n\n\"Pretty sure. Tastes right to me. It's not the best I have ever had, but for a small town place it's decent. You've really never had chinese food?\"\n\n\"Never had the opportunity till now. Can't say as I am a fan. Look. Lia won't even eat that, I don't think it's beef.\"\n\nI laughed, watching Lia turn her head away. \"Picky picky,\" I teased, shoveling another mouthful to my mouth.\n\n\"Have any of that meat pie from last night?\"\n\n\"Sure, it's in the fridge. Microwave is right there.\"\n\n\"Microwave,\" he scoffed. \"I can use the oven.\"\n\n\"Microwave is a lot faster and it doesn't have to preheat. Or heat up the house more. Goddamnit!\" I cursed, hopping down and going to the thermostat. 88. What the hell?!? I turned it off again, angry now. \n\n\"Everythin' good luv?\" he asked, appearing at the top of the hall.\n\n\"The heater is broke. It keeps turning itself on and heating the house up to almost ninety.\"\n\n\"I thought you must have poor circulation and liked it hot. Have you had a look at the furnace? Is it in the basement?\"\n\n\"I haven't been in the basement,\" I answered, heading back to my food.\n\n\"No? You move into a new house and don't even peek into one of the rooms? What if it's full of gold bars?\"\n\n\"Then it still won't be worth the creep factor.\"\n\n\"The what?\"\n\n\"The microwave, seriously, it's already too hot in here. Move, I will do it. Do you not own a microwave?\"\n\n\"Absolutely not!\"\n\nI looked at him, both amused and confused. He sounded so offended! \"They are super convenient. Why the disdain?\"\n\n\"Just not keen on change. I like things simple, not too much clutter.\"\n\n\"Yeah, that's a running theme around here. See? Already done. Nice and hot,\" I said, handing him the plate. \n\nHe scowled at it. \n\n\"It's not going to bite you. Do I need to serve it to you at the table? You weren't so picky last night.\"\n\nHe took the plate grudgingly and sat back down. \n\n\"There's wine left if you want it,\" I said, grabbing myself a bottle of water.\n\n\"Now that is a bloody useless waste,\" he said, gesturing to my water. \n\nI rolled my eyes. \"Ok boomer,\" I teased.\n\n\"What's that s'posed to mean?\"\n\n\"Nothing. Do you want the wine or do you want water? Or I have milk?\"\n\n\"Milk, if you don't mind,\" he said, moving the food on his plate with his fork.\n\n\"Well you seem to be in a great mood tonight,\" I said, a bit annoyed,as I got him a glass of milk.\n\n\"My apologies luv, you are right. I should be thankin' you instead of complainin'.\" As if to prove his point, he forced himself to take a bite of the lasagna. \n\nWe finished eating in silence. I felt a little anxious at his subdued and cold demeanor. I set my plate in the sink and pulled out two desert plates, dishing out the cobbler. It cheered him up a bit, he offered a smile when I handed him the plate.\n\n\"So you needin' a bit o' help with the furniture this evenin'?\"\n\n\"You don't have to, but you can if you want. I can walk Lia for you again.\"\n\n\"She's been walked. I may've been dawdlin' a bit to see if you'd be gone long.\"\n\n\"You waited around for me?\" I asked, unable to stop the smile that tugged at my lips. \n\n\"That can't surprise you much, luv,\" he answered, his voice low. He looked up from his plate and his look was... hungry. My stomach clenched and my pulse sped up. \n\nIf he kept looking at me like that, I wouldn't even be able to put up a token resistance. Resistance hell, I would probably climb into his sexy ass lap and attack him!\n\nI let out a shaky breath and looked away before my own thoughts gave me away. \"Well,\" I said shakily, \"then I guess I can try and help. Keep Lia company while we watch. Something equally as useless while you work.\"\n\n\"Company isn't as useless as you'd imagine. What all do you have left?\"\n\n\"Umm. Everything. I was serious when I said I've had trouble sleeping. My hours are all skewed. I'd thought to try and do a bit today, but I slept most of the day after not sleeping last night.\"\n\n\"Bad dreams luv?\"\n\n\"Umm... anyway, how's the cobbler?\"\n\n\"Decent. Had better. It's a treat though, thanks for that. Do you ever make your own cobblers?\"\n\n\"I never have, but I'm not averse to trying. You have a tried and true recipe?\"\n\n\"Not m'self. Just rememberin' homemade and havin' fond memories. Let's see what need's doin' then luv.\"\n\nI followed him to the living room and began putting books away while he opened another box. I watched him work without trying to be too obvious. Soon, I was sweating with the mild exertion and the heat my body was producing. I paused, the scowled. I stormed down the hall. \"What the fuck?!?\" I yelled as I turned the heat down and off again.\n\n\"Now there's a pretty word for a pretty girl,\" he said with an amused laugh. \n\n\"Yeah, whatever,\" I grumped. \"You know anyone who fixes furnaces?\"\n\n\"I can take a look.\"\n\n\"Is there anything you can't do?\"\n\n\"Oh, plenty luv. May not be able to help with the furnace if it's too new.\"\n\n\"You are really anti-tech for someone as young as you are.\"\n\n\"Wasn't raised with it. Should I go take a look?\"\n\n\"Umm. I don't have a flashlight. I'll have to get one at the store tomorrow.\"\n\n\"So I get to come by tomorrow as well?\" he grinned.\n\nI felt my face heat as I returned the smile. \"I'll try to avoid bringing home chinese food.\"\n\n\"If you take requests, I like shepherds pie.\"\n\n\"What is that?\"\n\n\"Shepherds pie? You've never had shepherds pie?\" Now it was his turn to look incredulous. \"Girl, you're breakin' my heart!\"\n\nI laughed and waved a dismissive hand. \"I can google it,\" I said, bemused. \n\n\"Fuckin google. Google won't know the right way to make a true pie. I will give you a list and I will show you m'self!\"\n\n\"That sounds like a more than fair trade,\" I said, still grinning.\n\n\"I s'pose we shall see. I may not finish the rest of these tonight if you keep distractin' me,\" he smirked as he went back to the shelf he was building.\n\n\"So what do you during the day?\" I asked, following him and curling up on the couch. Lia immediately joined me.\n\n\"Lia, you spoilt girl! Get down off her sofa!\"\n\nLia gave him a resentful stare and didn't move. \"She is keeping me company!\" I said defensively, hugging the snuggly old dog. \"I don't mind at all.\"\n\n\"You like animals then? Why don't ya' have your own?\"\n\n\"Maybe I will,\" I said thoughtfully, looking around. \"The backyard is fenced. Why not? Is there an animal shelter near here?\"\n\n\"That I do not know. I'm sure you could google it,\" he said, saying 'google' in a disgusted way. I laughed, a pure from the belly laugh. \"You should laugh more often luv. A smile suits your face.\"\n\nI felt myself blushing again. Was that a compliment? Should I say thank you? Did he mean my face without a smile wasn't pleasant? I decided to change the subject. \"Do you call me that because you can't remember my name?\"\n\nHe grinned at the shelf, not looking up. \"Is that what you're thinkin' Brielle? No. I call you that for another reason entirely. Does it bother you then?\" he asked, the teasing obvious in his tone. He knew very well that it thrilled me every time he said it.\n\n\"I was just curious,\" I answered, feeling the heat flush through me again, lingering between my legs. \"So what do you do during the day? I've only seen you around after dark?\"\n\n\"Yes, I do keep myself busy until the sun is down,\" he said distractedly, concentrating on his work. \"Have you been watchin' for me? Wondrin'?\"\n\n\"I'm making polite conversation,\" I answered, looking away. So what if I had looked out the window a few times to the house he had indicated was his? I didn't stand and spy on him. Not really. I was surveying my backyard. Looking at the view. His house happened to be within the purview of my view. That's all. It was completely natural that I noticed the house was dark and quiet all day and there was no car in the little driveway. \n\n\"Of course Mo Sh\u00edorghr\u00e1. This one is done then. So the books you brought home, you read them? Do they have passion in them, or is it all just to look deas?\"\n\n\"Deas? And what did you call me?\"\n\n\"Deas... nice to look upon. Pretty.\"\n\n\"Oh, no, I like to read them, and no, they aren't romance books. More like magic and dragons and epic adventure.\"\n\n\"You have no want for passion then?\"\n\n\"Sure I do... It's just not what I enjoy reading... So are you going to tell me what the other thing is? The thing you called me?\"\n\n\"Mo Sh\u00edorghr\u00e1?\"\n\n\"Muh-heargraw?\"\n\nHe laughed out loud at my pronunciation. \"Close. It means... it is just a fancy way to say 'luv'.\"\n\nHe was blushing and I knew he had just lied to me. He did not want to admit what the term meant! Was it good or bad? \"I can google it you know.\"\n\n\"Fuckin' google,\" he chuckled. \"You'd have to spell it first luv.\"\n\n\"It's not spelled like it sounds?\"\n\n\"Not even remotely. What is left in your bedroom?\"\n\n\"Several things,\" I answered distractedly, trying to enter the phrase in my phone. I hit enter and watched the little circle spin. \n\n\"So the fuckin' google, it is telling you?\"\n\nI smiled, watching my phone, waiting for it to load. \"The google doesn't seem to have an answer. Or I am not getting signal again.\"\n\n\"Doubt you'll be clearin' that up any time soon luv. Let's go see what is left.\"\n\nI followed him to the bedroom, watching my phone and the stupid circle spin. Lia followed me and climbed into my bed with me.\n\n\"You have a tussle in here last night?\" he asked lightly, taking in the state of my bed.\n\n\"Ummm,\" I said looking around, mortified. I couldn't very well say, 'no, I masturbated until I passed out'. I wracked my brain, freezing up. Thankfully, my phone saved me by chirping. Cricket chirp meant I had a text. I hurriedly opened it, looking for any distraction to stall for time to think of an explanation.\n\nE. Outlaw - Sweet dreams babe. Love the little cottage. \n\nAll the air left my body and my limbs locked up. I stared at the message and tried to think, tried to reason. Was he here? He couldn't be here. There is no way he could have found me. Not this quickly. How did he know? \n\n\"BRIELLE!\" Keane yelled in my face, shaking my shoulders. I looked up at him numbly, still horrified. \"Mo Sh\u00edorghr\u00e1 what's happened? What's the little gadget tell'n you?\"\n\n\"I... it... It's Eric. He knows where I am!\"\n\n\"Eric? That the name of the twat?\"\n\n\"Yes.. the cop. The one... the one that... he found me? I don't know how he found me?\"\n\n\"Probably the fuckin' google luv.\"\n\nGoogle. Of course. If he somehow found out my address, all he had to do was look on google maps and he can see my house from anywhere. Of course. He wasn't here. But he knew where I was. How did he know?\n\n\"Shit! God damn Sheriff Last! Why did I give him my name? Stupid stupid stupid! He looked me up! He put me in the goddamn system! Shit!\"\n\n\"Easy luv. The twat won't be comin' all the way out here to give you a bit of grief.\"\n\n\"You don't know him!\"\n\n\"So call this Sheriff and tell him. And it's not like I won't be around luv. He won't be botherin' ya'. Slow your breathin' a bit luv, don't go gettin' all faint on me. Ya' aint got a phone I know how to use so there'd be no callin' for help. Best I could do is a cold glass of water on your face. There now. That's better luv. Look at me Mo Sh\u00edorghr\u00e1. He won't be showin' his face round here. You call that Sheriff right off in the mornin' and tell'm everythin'. He may be a twat himself, but he is likely to help just the same. You still look scared luv. Do I need to kiss a bit of sense into ya'?\"\n\nI laughed then, a shocked and incredulous laugh. His jest did what he meant it to do, it pulled me out of my own head and back to where I was. In my bed, his hands holding my arms, looking down at me. Wow, his eyes were so blue. His lips, just shy of too full looked completely kissable. He raised an eyebrow and grinned.\n\n\"That is lookin' like a yes to me luv,\" he smirked, looking down at my lips. \n\nI held my breath expectantly, sure he was about to kiss me. Instead he stood and let me go gently, still smiling. Ummm... I was pretty sure I had given a very clear signal, hadn't I? He was going to try and make me make the first move. I watched him go back to his work, a small smile on his smug face. I'd be damned if I'd play his game. I scooted back on my bed and scratched Lia under her chin. After a minute, I rolled to the other side and slid open the window to get a breeze. When I realized I was getting hot again, I scrambled across the bed to go to the hall and the thermostat. \n\n88 degrees. Ok. I was done. I went back to the room. \"Do you have duct tape at your house? I am going to tape that thing in the off position and tape the temperature down to 58. I am done playing with it.\"\n\nHe looked up at me, his eyebrows climbing. \"Is it on again then?\"\n\n\"Yes! It's possessed! Wait. Do you think it is possessed? Like, Alejandra maybe?\"\n\n\"You mean like a spirit luv? Don't tell me you believe in such things?\"\n\n\"I mean, I don't, not really, but what if?\"\n\n\"I think if she were still here she'd have better things to do that make you hot,\" he teased.\n\n'Yeah, that's all on you,' I said in my head. He was making me hot, very hot in places I didn't even want to think about right now. Damn him. Why did he have to look so sexy sitting there in my bedroom floor. Almost, I wanted to offer to let him take off his shirt since it was so hot. If I knew he wouldn't just laugh at me, I might. It occurred to me then, what if he thought of me like a kid sister? Or just a kid with a crush? He was trying to help his lady neighbor and I was trying to trip him into my bed, and he was just trying to joke around it, pretending he didn't realize what I wanted because he wasn't interested? I felt a bit sick at that thought. Maybe he didn't want me to make the first move at all. Maybe he was just actually being neighborly and I was reading too much into it? I felt on the verge of panicking again, thinking of how much of an ass I have made of myself. At least I hadn't tried to dress up tonight. He probably thought I had looked like a kid playing in her moms closet. UGH. Why would a big, sexy older hunk like him have any interest in a girl who looked like an 8 year old boy? Of course he wasn't interested. \n\nI sat down on the edge of the bed, feeling tense. Lia laid her head in my lap and I squeezed her and scratched her ears absently. \n\n\"I don't have what you asked for, but I do have a flashlight. I can get it and have a look if ya like,\" he said standing. \"That's another one done just three more now. Should I grab it?\"\n\n\"Ummm. Not tonight. Honestly? The basement gives me the heebie jeebies.\"\n\n\"The what?\"\n\n\"It scares me. Makes me nervous. It's old and dark and just... creepy.\"\n\n\"It's just a room luv, but if you like I can look tomorrow. I don't mind an excuse to come back. Not that I need one if I am showin' you how to make shepherd's pie.\"\n\nI managed a smile, but my heart wasn't in it. I hated not knowing, trying to guess, the stupid games and anxiety that came with feeling other people out. I had never been what anyone would call a social butterfly. I was an introvert. That was the whole reason Dillen and I had become friends.\n\nDillen was gorgeous. He had always been beautiful, even as a child. Girls chased him and followed him around the playground, doing what little girls do. Boys bullied him because he didn't play sports and he was so pretty. He walked up to me one day and told me I was his new best friend. I asked him why and he said it was because I didn't want to be his girlfriend and I would kiss him or hit him. I never told him that I would have loved to be his girlfriend, I was just too shy to say so, or chase him like the other girls had. That was how I made my first and only friend. The friend thing, the dating thing, the flirting thing, it was all new to me. Eric Outlaw did not count, he was just a creep. Eric. Would he come down here? Maybe I should call the sheriff, I had his card. Would he be an ass about it? Probably. Did I care as long as he did his job? Not really. \n\n\"You're lookin' a bit peaked again luv. Y'aint thinkin' on that twat again are ya'?\"\n\n\"Ummm...\"\n\n\"Why don't you come down here by me and tell me a bit about where ya grew up?\"\n\nI moved slowly, warily. Was he cajoling a child? Being friendly? Or was it flirting? How did you tell? Damnit. I sat against the wall where I could watch him work, but I wasn't in the way. \"Not much to tell. I moved a lot, I was a foster kid.\"\n\n\"That your maiden name? Foster?\"\n\n\"Uhh... no. You don't know what foster kid is?\"\n\n\"It's not a kid named Foster? That seems like the most likely answer.\"\n\n\"No. Foster, as in fostered, like foster care. For kids without parents.\"\n\n\"Like an orphanage?\"\n\n\"Ummm... I don't think they have orphanages in Chicago... they have foster parents. People who open their homes to kids with no parents. That's what it's supposed to be anyway. Nice people who want to help. Usually it's people who want the extra money the state gives them to do it. Some kids get good homes, some kids don't. I got a mix. No one real bad. Worst one was a lady who sent me back after she got a boyfriend and she said she caught him looking at me too much. The family I ended with, they were nice, mostly. They fostered four kids plus their own. They did it for the money, but they were still nice mostly. Mostly indifferent. What about you?\"\n\n\"I grew up with my family till we moved ourselves across the ocean. We had a simple life, poor, but we were happy enough. We had what we needed.\"\n\n\"Where are they now?\"\n\n\"I'm all that's left.\"",
        "\"I'm sorry,\" I said sadly, watching his hands work.\n\n\"Don't be too sad luv. We are birds of a feather in that. We are both all that's left, right?\"\n\n\"I suppose we are,\" I answered with a sad smile. \n\n\"I guess you need to be knowin', I aim to kiss ya,\" he said, still looking at the project in front of him.\n\nI froze and stared at him, wide eyed. Hy heart tried to pound out of my chest and I could feel my pulse between my legs as heat rushed in.\n\n\"I'm waitin' for the right moment. I'll know when it is. Didn't want ya to think I was bein' prudish or reluctant if ya know what I am sayin'.\"\n\n\"Umm. Oh. Uhh...\"\n\n\"Were ya not wondrin'?\" he asked, stopping to look at me. \"Ya are quite lovely when ya blush that way Mo Sh\u00edorghr\u00e1.\"\n\n\"Do you plan on telling me what that actually means?\"\n\nHe grinned, his eyes shining. \"It's a possibility luv. Tell me if your googlin' finds ya no answers. So how old were ya' when you became an orphan?\"\n\n\"A baby. Nineteen months? Still in a car seat. I'm told I had a brother too, but he died with my parents in the accident. The car seat saved me.\"\n\n\"That's a shame about your family, but I am glad you came out of it. So your husband, did his folks really not know?\"\n\n\"Oh, they might have had an inkling, but he wasn't super flamboyant or anything. He dressed like a guy, talked, walked and acted like a guy. He just also liked guys. Still, they had to wonder why most of our dates seemed to always include guys friends. Or why we hung out with different guys who were more obviously gay. Dillen dated a lot until we got married and he met Liam. They were such a cute couple, both of them so beautiful.\"\n\n\"You didn't mind it, see'n them together like that?\"\n\n\"Not at all. I wasn't in love with Dillen, he was my friend. I was glad to see him so happy. Liam too, he was a great guy. I was heartbroken when they both died.\"\n\n\"In an auto wreck as well?\"\n\n\"Yeah,\" I said sadly. \n\n\"I don't drive, myself.\"\n\n\"No? So you work at home?\"\n\n\"I never said that,\" he answered, smiling slightly.\n\n\"You are asking all these questions, but when I ask about you, you change the subject or joke around it. I don't get to know about you?\"\n\n\"Not much to know, luv. I will tell ya this. I intend to muss those red sheets even more than you mussed them last night,\" he stated, winking at me before he stood and turned the dresser upright to put the drawers in.\n\nI felt the heat in my face go all the way to my ears. Did he KNOW somehow? And he was going to...? I stared hard at the ground, not daring to let him see my face. I heard him chuckle as he began sliding the drawers into place. I had read books and seen movies. I knew that now is where I should say something witty or teasing, like 'dream on', but by the time that occurred to me, it was too late. And it sounded cliche and droll. So instead, I sat here floundering. That was much better. Not awkward at all. I was going to die of embarrassment. Was he looking at me? I hid my face in Lia's fur, hugging her close again. \n\nMy phone chirped.\n\nE. Outlaw - Woke up from a dream about you. Did you know there were four pairs of your panties in the laundry basket you left? They smell amazing. Can't wait to taste the real thing and wake up next to you and not your little lacy thongs. I'll take them for now though. \n\nChirp.\n\nE. Outlaw - The vibrator doesn't hold on to your scent like the panties do, but knowing where it's been? Be ready for something bigger baby. \n\nI stared at the phone until Keane took it out of my hand and dropped it on the floor before moving to stomp on it with his boot.\n\n\"NOO!\" I screamed trying to grab for it. I heard my fingers crunch before I felt it, staring down horrified.\n\nKeane cried out like a wounded animal and dropped down next to me after stumbling back. His huge hands fluttered around my bent and broken fingers.\n\n\"Little luv, why would ya do that?\" he cried in anguish. \"It's just a damn phone! A damn phone that was crushin' your soul!\"\n\n\"I... I... ohhh! I need it. I need it to show the sheriff. To... oooh... I think... oh god. I have to prove...\"\n\n\"Easy luv, easy. Look at me little luv, You'll be needin' the hospital and I can't drive ya and ya caint drive yourself.\"\n\n\"The phone,\" I managed, using my elbow to point at the phone I had managed to shove out of the way before his boot had crushed my fingers. I was cradling the bent fingers in my other hand, trying not to touch them. The pain was sharp and dull, pulsing back and forth with my heartbeat. Don't call 911, it's not an emergency. Umm. The sheriffs card. It's on my desk. Can you call his number?\"\n\n\"How? There's no buttons to push!\"\n\n\"Hold your finger... OHH! Oh god. Umm. Hold your finger on the screen, then swipe up with your finger. There's an icon on the bottom, looks like a phone. Tap it with your finger. See the icon with the little dots on the bottom? Hit that. Now touch the numbers like they are buttons.\"\n\n\"Fuckin' hell!\" he snapped, then shoved the phone at me, at my good hand. \"I'll get the fuckin card, you make the gadget work!\"\n\nI was trembling, but I managed to get to the screen and dial the number when he read it to me from the card. He helped me to the door to wait for the sheriff. \"I'll stay here and wait for ya' Luv, Lia and I. I'll finish up your furniture. If I'm not here when you get back, I'll be back as quick as I can after work. I'm so sorry Mo Sh\u00edorghr\u00e1, I only meant to break the damn phone so he couldn't hurt ya anymore.\"\n\n\"I know,\" I said quickly, trying not to pant. I was a little upset that he wasn't going to go with me, but I understood. \"It's ok, really. I know it was an accident. I just need the phone and the messages to show the sheriff, so he can see what Eric is.\"\n\n\"I shoulda considered that, I just hated seein' ya so torn up every damn time the stupid thing went off. Do ya forgive me Mo Sh\u00edorghr\u00e1?\"\n\nI smiled wanly, trying to brave through the pain. \"If you tell me what that means,\" I teased as I saw lights coming down the street.\n\n\"You'll know soon enough. Fuckin' google, right?\"\n\n\"Yeah,\" I half laughed, still shaking. \n\nThe sheriff met me halfway up the walk and took my arm, leading me to the passenger seat of his car. At least he didn't put me in the back. \"You like to tell me what happened?\" he asked.\n\nI considered my answer carefully. If I told him a man had stomped my hand, any excuse would sound like exactly that. An excuse. \"I suck at building furniture,\" I answered. I couldn't stop shaking. \"I thought I had the dresser right, and the drawers, but it stuck and then it wasn't stuck and my fingers were there... then there was a loud crunch and it was my fingers. I couldn't drive, I didn't want to call an ambulance. Sorry to call so late.\"\n\n\"Mmmph,\" he grunted.\n\n\"I guess now's a good time to talk to you anyway,\" I said, laying my head back. I told him everything. Why I was here, what Eric had done. I read him the texts even though I was mortified to read the last two out loud. He was scowling angrily by the time we got the the emergency room two towns over.\n\n\"And this boy is a police officer?\" he asked, taking the phone and looking at the messages now that he was parked.\n\n\"Yeah. St Charles P.D., outside of Chicago.\"\n\n\"God damn pud,\" he spat, then handed my phone back and got out of his car. He came around and helped me out, walking me inside.\n\n\"Thanks for the ride,\" I offered, then headed for the woman behind the little desk. He stayed with me, leading me to it. \"You don't have to stay?\"\n\n\"Come this far. How will you get home? This girls been hurt, broke up all her fingers there,\" he said to the woman.\n\n\"Oh! Yes she has, I will call a triage nurse right up! There, she's on her way. Do you have her ID? Are you dad?\"\n\n\"No ma'am, Ms Estevon, do you have your ID?\"\n\n\"I forgot it at home!\" I said dismally. \"I wasn't thinking about it, all I have is my phone. I don't have my wallet or purse or anything!\"\n\n\"Are you a relative sir?\"\n\n\"No, she has no close relatives, I'm just the person she knew. I can vouch for the girl, her name is Brielle Estevon.\" He spelled out my name to her as the triage nurse came out to lead me back. He followed me like it was the most normal thing in the world for him to do. \n\nShould I tell him no? Tell him to wait in the lobby? I couldn't be rude after he drove me out here and was planning on waiting for me. He probably had more questions about Eric. That's all it was, right? Ugh. I needed to learn to read people better.\n\nAs it turned out, he sat mostly quiet in the corner of the room, scowling down at his phone and tapping away. They gave me pain killers, set my fingers and splinted them, then gave me more, painkillers. Better painkillers. \n\nI was already feeling groggy as I listened to the nurse tell Sheriff Last that I would probably be falling asleep soon and that they were giving me a prescription that could be picked up and what I needed to do to care for my injury. \n\nMy head was swimming when he led me out to his car. \n\n\"Can you hear me girl, you got your head on you?\" he asked loudly when he got in.\n\n\"I hear you,\" I answered sleepily.\n\n\"Ran your friend Eric Outlaw. Got his information. He took personal leave starting tomorrow, seven days. You think he would show up here?\"\n\n\"Know he would,\" I whispered, half asleep now.\n\n\"Mmph,\" he answered, then started the car.\n\nI was hot. Stifling hot and sweating. Ugh. I kicked the blankets off and pain shot through my hand, making me squeak in surprised pain.\n\n\"Thought you'd never wake up girl,\" Sheriff Last groused. I was in my room, in my bed and he had pulled a chair in from the living room.\n\n\"You are in my house?\" I asked groggily, trying to shield my hurt hand from touching anything.\n\n\"It was unlocked and you weren't getting yourself in here. I picked up your pills, they are there on your nightstand. Glass of water too. Why do you keep it so damn hot in here?\"\n\n\"I don't,\" I answered falling back into my pillows. \"Furnace is busted. I turn it off and it comes right back on. Keeps the house at 88 if I don't stay on it. I thought I would try and tape it down. Ugh. Since you are here, can I ask a favor? Open the window and shut the heater off? I need to try and use the ladies room.\"\n\nHe didn't respond, just stood and went to the window as I rolled out of bed and tottered to the bathroom. I was both happy and upset to note that he had only removed my shoes. Unbuttoning my pants left handed and getting them down took more effort and energy than I actually had. I had to pee badly enough that it actually became a race. Wouldn't that be wonderful? Thankfully it was a non-issue as I sat trying to catch my breath.\n\nGetting them back up was just as fun. Note to self: loose pants and yoga pants till my hand was healed, no more skinny jeans. I peeked out , my pants still undone and dodged into the little room that was my closet. I traded the jeans for some linen pajama pants and the sweater for a t-shirt.\n\nWhen I came out, he was in the kitchen, pouring himself a cup of coffee. From the looks, it wasn't his first.\n\n\"Thanks for taking me, and bringing me home, and making sure I was ok. Sorry for being a jerk the other day.\"\n\n\"Mmmph. I can scramble a few eggs and make toast. You aint supposed to take them pills on an empty stomach.\"\n\n\"You don't have to do that! I have taken enough of your time!\"\n\n\"I have the day off and if that boy decides to show up, I want to be here.\"\n\n\"Well you know he won't come around if he sees a sheriff car parked out front?\" I said, pouring myself some coffee. \n\n\"Parked up around Don's place.\"\n\n\"Still, I don't want to take up your day off,\" I said, supremely uncomfortable. \"I'm sure your family would rather have you home.\"\n\n\"Divorced and it aint my weekend,\" he said, moving the other living room chair to the front window. He opened it, having to prop it open with a stick that was in the sill, like it was there for that purpose. \"I sent a message to my friend Owen. He'll fix your furnace. He should be along shortly.\"\n\n\"The single one?\" I asked with dread.\n\n\"Nope. You made it clear you didn't want to meet Gene. That boy, he'll be driving a rental car, right?\"\n\n\"Probably, why? Do you see a rental car?\"\n\n\"No, just making sure. Ease up girl. Scrambled ok?\"\n\n\"Sure, I'm not picky.\"\n\nI watched him move around my kitchen with a familiarity I didn't even have yet. In under ten minutes, I was sitting in front of a plate of food. His plate was easily three times as big as mine and I watched him eat wide eyed. Why was it that tall, skinny men always ate the most? I could only eat half of mine and he finished it off before taking both plates to the sink and washing them, all without speaking. He topped off his coffee and went to sit in front of the window. \n\nI paced.\n\n\"Sit down girl, you'll drive me up the wall. Maybe take one of them pills.\"\n\n\"I am not a huge fan of pills that make me feel like I am not in control. If the pain is tolerable, it's better than being zonked.\"\n\nHe turned and looked at me, an assessing look, like he was trying to tell if I was serious or not. I swallowed, uncomfortable with the scrutiny, especially when his gaze lingered on my t-shirt, in the space where most women's breasts would be. I had them, they were just small. Hardly there unless you looked for them. When he turned back to the window, I looked down and noticed that while my breasts hardly made a wave in the fabric, my nipples were hard as rocks and poking the fabric out like little pebbles. Maybe I should have found a bra. It wasn't something I normally had to worry about, but with two windows open, there was enough cold air coming in to make it an issue. I crossed my arms over my chest and hunkered down. \n\n\"Do you really think he will get here this early?\" I asked after twenty minutes of sitting quietly.\n\n\"Naw. Probably not. He'd've had to've got a plane last night and drove here from the airport. Not impossible, but not likely. If he flies in, it'll be today, maybe tomorrow. You have your phone with you?\"\n\n\"Oh, no. I left it in the bedroom,\" I said hopping up and hurrying to my room, ignoring my throbbing fingers. I grabbed my phone and looked at it. Two messages. I swallowed hard and started back out to the living room slowly. I opened them.\n\nE. Outlaw - That was the wrong move baby.\n\nM. Estevon - Got your message, glad you are settling in. Love you too. Set you up a hidden account at the bank there with a 'Laura Emmerson'. Talk to her Monday, she will tell you how it works. It's in my name, but yours to use. Call Ramona when you can, she is having a hard time. All our love, E.E.\n\nI went to Sheriff Last and showed him the text from Eric.\n\n\"Mmph. Someone told him his name was searched in the database from here. He'll know you spoke to me. He may be expecting me now. If he is the kind of guy I think he is, it won't matter. Give me a minute girl,\" he said, pulling out his phone. He began tapping away on it.\n\n\"My name is Brielle,\" I said softly, sitting back down.\n\n\"I know your name, girl,\" he grunted, still tapping away.\n\nI paced. He tapped away for ten minutes, texting faster than I ever had. I took his mug and refilled his coffee. He grunted as he took it and sipped it. Finally, he put the phone down. \"Owen's here. I'll let him in,\" he said, getting up and opening the door.\n\nOwen was at least seventy years old. Maybe eighty. He smiled at me, a happy, bright smile that made me smile back. Sheriff Last walked him to the basement door and I listened, wondering if I should follow them. Sheriff Last came right back out and sat down.\n\n\"He went down alone?\" I asked, surprised. \"Did he have a flashlight?\"\n\n\"Yup,\" he answered. I guessed that was the answer to both questions. Now I was worried about the old man. I stood and paced, trying hard to ignore the pain. \"Girl,\" Sheriff Last said. That was all. \n\nI stopped pacing and looked at the door to the laundry room. \"Are you sure he should be down there alone?\"\n\n\"Owen's well acquainted with this house girl. He was a long time friend to Alejandra.\"\n\n\"Oh,\" I offered, still watching the laundry room.\n\n\"That crazy old fucker!\" Sheriff Last cursed, jumping up. He shot out the front door and I went to the window. Donald Everett was in his yard naked as the day he was born, standing next to the road, pumping on his dick like a madman. I watched, wide eyed. He was going at it so hard, I worried he might give himself a heart attack.\n\nSheriff Last hurried to him, yelling. \"Don, god damn it, I TOLD you that you cannot do that out here! You can't come outside with no clothes and you can't get that thing out and play with it in public! Do I need to run you in for public indecency? Put you in a home? Is that what I need to do?\"\n\n\"Fuck all that Tom! Lookit there, Lena is watching, she loves it! She wants this big cock, don't you Lena?\"\n\n\"Don! If you don't shut your filthy mouth and get in your house, I WILL arrest you. You will never see your house again, I will have you fucking committed!\"\n\n\"Awwe, fuck you Tom,\" Don said, waving Sherrif Last away and stumbling back to his house, still jerking on his dick.\n\nAs Sheriff Last came back, shaking his head, I backed away from the window. He came back in, his face red and wouldn't look at me as he sat down hard in the chair. I was so tense, I jumped when Owen spoke up behind me. \n\n\"Th'aint nuthin wrong with thuh furnace Tom. It's runnin' jus' fine. Turned off, on, all the 'lectric's runnin just fine. Cain't see as anything could be kickin' it on. I'll take a look at the therm'stat,\" he said in a drawl that made me struggle to understand him.\n\nSheriff Last grunted and turned back to the window as Owen went down the hall. I felt every hair in my body stand on end and a feeling of dread welled up in me. I felt sick. Panic clawed at my throat and I backed away from the kitchen fearfully.\n\n\"O-owen? Did you close the door to the basement?\" I asked fearfully.\n\n\"Naw, chile', thought I mighta hadda go back down,\" he called back.\n\nA whimper came out of my throat involuntarily.\n\n\"Girl?\" Sheriff Last asked, in front of me suddenly. \"What is it you see,\" he asked. He actually sounded wary.\n\n\"N-nothing... I just feel... it. I don't know what...\"\n\n\"From the basement?\" he asked in confusion. \"This basement? Are you sure it's coming from THIS basement?\"\n\n\"Yes! It's bad... can you feel it?\"\n\nHe grunted as he marched back to the laundry room. I heard him slam the door and more scraping like he had replaced the mop handle I had used to wedge it shut. He came back out, scowling at nothing, lost in thought. \n\nWhat was it? Did he know why it felt so creepy? The feeling was starting to fade.\n\n\"Is it still there?\" he asked, turning back to me, his gaze piercing a hole in me.\n\n\"Not as bad. It's... receding. Do you know what it is?\"\n\nHe grunted, then went to the kitchen, looking out the back window. He stood a moment, then came back as Owen came down the hall, smiling congenially. \n\n\"C'aint see as ana'thins wrong Tom. It's all a' checkin' out just fine.\"\n\n\"It's fine Owen, thanks for stopping in. How's Miranda and the grandkids?\"\n\n\"Good, good Tom. Chile', you fall onna playground?\"\n\nMy face flushed and Sheriff Last waved me off quickly. \"She closed her hand in a drawer. Thanks again Owen. I need to make another call and get a few things done now. Good seeing you.\"\n\n\"Yaw, you too Tom. Chile',\" he offered, nodding at me, then he left with his happy, contagious smile.\n\nSheriff Last dropped the smile like it had never existed and pulled out his phone again.\n\nTap tap tap.\n\nDamn it! What happened to cops talking on the phone? I wanted to know what was going on! I could glean SOMETHING from half a conversation, but NOTHING from tap tap tap. I paced.\n\n\"Girl!\"\n\n\"What? No one is telling me anything, it's nervous energy! It's my house!\"",
        "\"I am getting in touch with a friend. Something's changed. She'll be able to... figure it out. Girl, I need you to answer me true. You been with a man?\"\n\n\"What? That's none of your business! I already told you that...\"\n\n\"Hush! Answer the damn question! It's not idle curiosity, I need to know!\"\n\nShame and rage and humiliation warred inside of me. I felt my face burning to the tips of my ears. \"No,\" I answered through gritted teeth.\n\n\"So you are a virgin.\"\n\nI seethed, glaring at him.\n\n\"Girl!\" he warned, his face turning into a thunderhead.\n\n\"No!\"\n\n\"No? You aren't a virgin? But you have never been with a man? Which is it?\"\n\n\"I... I had a vibrator. I know you read the text!\"\n\nHe had the grace to blush and look away. \"That doesn't count, girl. Not where this is concerned. Listen to me... dammit! Fucking hell, I will let Beatrice talk to you.\"\n\n\"About what? If you are about to tell me there is a thing in the basement that eats virgins, I swear to god I will see you thumped from here to Sunday! Mess with the new girl? Hazing? I will have your badge!\"\n\n\"Shut your damn mouth girl and listen. You are the one who about pissed themselves over an open door that you felt from a distance was open. Was that me fucking with you? That why you had it wedged shut to begin with? Don't be so damn close minded. Have you had strange dreams since you came here?\"\n\n\"Strange like how?\"\n\n\"Strange like not normal, what they hell do you think strange means?\"\n\nI blushed again, thinking about the dreams of Keane. They weren't really strange, they were normal, right? Any girl who laid eyes on Keane would have the same dreams. I was fantasizing about him before I even went to sleep! \"No,\" I answered, scowling up at him.\n\n\"Nothing strange at all?\"\n\n\"I've hardly slept at night since I have been here! My schedule is completely messed up and with Eric messing with me and everything being so weird... As far as I know, my dreams have been normal. All of them I remember.\"\n\n\"Tell me if that changes. It's important girl, do you understand?\"\n\n\"My name is Brielle.\"\n\n\"I know your fucking name girl, do you understand?!?\" he yelled angrily.\n\n\"I understand!\" I yelled back. \"Why is it so hard to use my name?\"\n\n\"Go take one of your pills and get some rest. Beatrice will be here this afternoon and it may be a long night.\"\n\n\"I told you I don't like to take...\"\n\n\"I didn't ask you what you liked girl, I said go lay down!\"\n\n\"I am NOT your child!\"\n\n\"If I bend you over my knee, you'll be feeling like a damn child again,\" he hissed, getting in my face.\n\n\"You are NOT allowed to assault me! This is ridiculous! I am going to pack and get a hotel room!\"\n\n\"Girl, you will do as you are told or so help me I will blister your bottom.\"\n\n\"I fucking dare you to try it asshole!\" I screamed, done with his bullshit.\n\nI was shocked to my toes when his hand shot out and grabbed a fistful of my hair. He shoved me roughly over the back of the chair as I kicked at him and screamed at him, enraged. He grabbed one of my ankles and lifted me up in the air, dangling. I tried to kick with my free foot before he caught it and tucked it under his arm. With my good hand, I hammered his shins until the first blow landed on my backside.\n\n\"You SONOFABITCH!\" I screamed as his hand landed again and again. \"I will see you...OHH Stop it! That fucking hurts, stop! Please!\"\n\nHe did not stop as I struggled and flailed. My t-shirt was hanging down over my face but I was too humiliated and in too much pain to worry about modesty. As I flailed, my face bounced hard off his shin, my lower teeth cutting into my lower lip, filling my mouth with blood. I screamed wordlessly and broke into helpless sobs as he paddled me like a willful child. \n\nHe finally stopped, but held me there. \"Are you ready to damn listen, girl?\" he demanded.\n\nI was completely enraged, I wanted blood. \"MY FUCKING NAME IS BRIELLE YOU REDNECK PIECE OF SHIT!\"\n\nHe laughed suddenly and let me down slowly. I kicked at him the second he let my feet go and he stepped out of range, still laughing. He bent, laughing a full belly laugh, his hands on his knees. Furious, I snatched my coffee mug off the table and slung it at him, coffee and all. He ducked it easily and went off in gales of laughter again. I screamed wordlessly and scrambled to my feet, looking for something to swing at him. I yanked a screwdriver Keane had been using up and held it to stab him as I rushed him.\n\nHe caught my wrist and spun me, then picked me up by the waist, still laughing. \"Easy now Lille Jagerfly,\" he said, still chuckling. \"Who knew a tiny thing could have so much fight?\"\n\n\"Put me down!\"\n\n\"Once you settle down.\"\n\n\"I am not going to! I will gouge your eyes out!\"\n\nThat sent him off in another fit of laughter. I kicked at his shins and bucked in his arms, trying to get him to drop me. He bent slightly, twisting the screwdriver out of my hand and I froze, going completely still. I could feel him. His long hard cock pressing against my backside. I was panting, wide eyed and terrified. My mind was reeling, racing. It felt painfully hard and large, pressing against my sore and chafed backside. \n\n\"Have you settled down then lille jagerfly?\"\n\n\"Put me down!\" I cried, still panting fearfully.\n\n\"I'm not going to hurt you girl,\" he said gently.\n\n\"It's too fucking late for that, asshole!\" I yelled, aiming another kick at his shin, pissed that he would try to use calm reason now. Let him try and touch me with that god damn dick, I would rip it the fuck off! I began struggling again, going wild, kicking, screaming, punching and even biting when his arm got close to my mouth. He shifted me in his grip, holding both my wrists in one hand and hauling me down the hall towards my room.\n\nNot fucking happening asshole!\n\nI shove my feet against the walls, shoving him back and slowing his progress. He was still laughing! I screamed in wordless rage again as he reached down and practically folded me in half, carrying me the rest of the way to my room and setting me on the bed. He shoved me down, rolling me, then shoved me face down into the bed. He put a knee in my back holding me easily and I panted, unable to move. My hand hurt, my mouth hurt, something was wrong with my neck and my ass was on fire.\n\nI heard the rattle of the pill bottle, then he spun me again. He jerked me up so my head was in the pillow, then straddled me, pinning my arms to my sides.\n\n\"You are going to take this lille jagerfly. If you do not take it voluntarily, I will force it down your throat. That won't be pleasant, but I promise you, I can do it. I have manhandled men much bigger than you. Open your mouth. Good. Now swallow.\"\n\n\"I need water,\" I said, grimacing at the taste as the uncoated pill began dissolving on my tongue. He moved back enough to pull me into a partially sitting position, then held the glass of water to my lips. I drank, trying to wash the taste away and the blood out of my mouth. He moved it and set it back down.\n\n\"Will you behave now or do I have to stay here until you pass out?\" he demanded, his eyes still shining with mirth.\n\nI glared at him. \"Get off me!\" I demanded.\n\n\"Are you going to behave?\"\n\n\"Fuck you.\"\n\nHe chuckled. \"I didn't like you at first girl, but you are growing on me.\"\n\n\"My fucking name is Brielle!\"\n\n\"And I fucking know your name,\" he smirked. \n\nHe was infuriating! I tried to wriggle my arms free and when I looked down I could SEE his dick trying to push through his tight wrangler jeans. \"Get off me you pig!\" I screamed, struggling violently. I turned and sunk my teeth into his lower thigh. \n\nHe jerked back so hard my teeth slammed together and jarred my whole head. \"Fucking hell!\" he yelled, rubbing his leg, then looking at me and grinning of all things. There was hunger in his eyes, a predatory hunger that scared the hell out of me. \n\nI rolled to the far side of the bed and screamed as loud as I could out the open window. His giant hand clamped over my mouth and he lifted me again. I shoved off the wall with my feet and he fell back on the bed, then rolled so he was pinning me down on the bed again. \n\n\"Girl!\" he laughed, catching my hands to hold above my head. \"This is the most fun I have had in years.\"\n\n\"If you lay a hand on me, I will fucking kill you! Hand to god, if you rape me I will serve you your cock on a plate and make you eat it!\"\n\nHe laughed again, but it was gentler this time. \"I'm not going to rape you girl. I won't lie, you have me excited as hell, but I would never rape you. This would all probably be better if I did, you wouldn't be an innocent anymore, but no. As much as I would love to fuck you, I wouldn't do it unless you wanted it too. Stop struggling now and try to rest. Am I going to need to tie you down or can you behave?\"\n\n\"You swear you won't bring that thing near me?\"\n\n\"Girl, if I let you go, it won't be pressing into your little ass anymore and that has to be a better prospect, right? It's only near you because you are forcing the issue. You keep struggling and it's not going anywhere. Now that I have tried sweet reason with you, will you behave? Or do you like it right here?\" he asked, grinding his rock hard dick into my ass.\n\nHeat flushed through me and went straight between my legs and immediately I blushed. No fucking way was I going to let this fucked up situation excite me. I looked up at his long slender fingers wrapped around both of my wrists, his other hand between my shoulder blades. I couldn't move at all. My breath came quicker as I felt my pussy begin throbbing. I swallowed hard and put my head back down, trying to calm my breathing and clear my head.\n\n\"Girl? You done? If I let you go are you going to do something stupid? Or you like me where I am?\" he asked, pushing his hips into me again, that long, hard cock grinding dangerously close to my now wet pussy.\n\nTo my horror, I whimpered a tiny groan of pleasure as I felt my pussy lips slide together. No! This wasn't about him, I knew that. This was about the fact that I didn't have a vibrator and my body wanted release. When I saw Keane later, I was going to have to take control of that situation. \n\n\"I need an answer girl,\" he said, his voice lower, more husky. He had felt my need shift, I know he had. Somehow he knew that I was enjoying what was happening. Feeling helpless, out of control, and full to bursting with sexual energy.\n\nGod, please, this couldn't be happening! If I were still for long enough, I would pass out. The pill. It would knock me out, right? What dose was it? Was it the big one or the little one?\n\nHe rolled his hips again, more slowly this time, lowering himself. He moved his hand off my back and slid it under me as he pressed his mouth to my neck, just below my ear. His hand caressed my small breast gently as he rolled his hips again and my breathing quickened again as I licked my lips and tried to shove the feelings away. \n\n\"Ooohh,\" he moaned and I realized I had arched my back against him, pressing my ass against him. \"Lille Jagerfly, do not toy with me,\" he groaned, almost angry.\n\n\"What does that mean?\" I asked, half delirious with my need.\n\n\"Little fighter,\" he whispered, kissing my ear and neck.\n\n\"I like that,\" I whispered back, not knowing if I meant the feeling of his mouth on me or the nickname. \"Mmmm, god that feels good.\"\n\n\"Girl,\" he groaned, his hand squeezing my breast slightly before he eased his grip and rolled me to face him. His mouth pressed to mine and he kissed me, his mouth both gentle and rough with its need. His hair felt so silky soft in my fingers, he must have released my hands? The thought flit through my mind briefly as his thumb rolled over my nipple, drawing a gasp from me.\n\n\"Oooh! Yes!\" I moaned wantonly.\n\nThe last thing I felt was his hungry mouth on my neck.\n\nMy dreams were of his strong hands, his quiet and commanding nature demanding obedience. My need to bring that smile, a smile that hadn't appeared for years, back to his lips. \n\nI woke with a gasp and a jerk, then groaned. My body HURT. Oh good god, I hurt everywhere! I managed to roll to my side and blink enough sleep away to look around. I was in my room, in my bed, alone. By the light, it was early evening or late afternoon. I sat up and coughed weakly, my throat sore and raw. I sipped the water by my bed, then limped across the hall to the bathroom. I peed then went to wash my hands, then stopped. The girl who looked back at me in the mirror hardly looked like me. Pale, circles under my eyes, a split, bruised lip, eyes too big and too black. Was that really me? I looked away, not wanting to see that girl anymore. I tugged my clothes off and climbed into the shower. \n\nSecond note to self: The hot water only lasts for 13 minutes. Ugh. I struggled into a pair of yoga pants and a tank top, then tried to brush my hair as I limped down the hall. \n\nI froze when I saw Sheriff Last sitting at the window, memories crashing into me.\n\nOh god. Oh fucking fuck! \n\nI know he heard me, but he didn't turn around as I limped into the kitchen. I pulled the chinese food out of the fridge and limped to the couch, sitting down to eat it cold.\n\n\"You make that lasagna?\" he asked, making me jump.\n\n\"Yeah,\" I answered, my voice still hoarse.\n\n\"It was good. I ate the rest of it.\"\n\n\"Oh,\" I said dumbly, not knowing what else to say. I had no idea how to act towards him. Did I smash his head with my plate for spanking me? Acknowledge that we had made out? Did I thank him for not going further when I passed out? Was there a rulebook somewhere? What a fucking mess. \"Uhhh, have you seen anyone?\"\n\n\"Blue mazda has circled twice. Tinted windows, can't see the driver.\"\n\n\"Oh. Eric is tall, he has blonde..\"\n\n\"I know what he looks like, girl. I have all his information and pictures of him as well.\"\n\n\"Oh. Is your friend still coming?\"\n\n\"She came and went. She may be back tonight, but probably not. If you aren't having dreams yet, it's not as important as this other thing going on with this Eric.\"\n\n\"What else is going on?\"\n\n\"We'll talk about it later. No need to worry about it right now. How's your lip?\"\n\n\"Hurts. You're a real dick you know.\"\n\nHe snorted a laugh. \"My leg is bruised, so's my arm. You're vicious with those teeth.\"\n\n\"You didn't have to spank me.\"\n\n\"You weren't listening.\"\n\n\"Why was it imperative that I sleep? You were just being a control freak.\"\n\n\"Ex wife said something similar, but no. Beatrice needed to see you asleep.\"\n\n\"Why? And why didn't you just say that?\"\n\n\"You would have asked why, and then you wouldn't have done it. You think you feel up to checking your mail?\"\n\n\"I guess, why?\" \n\n\"Hurry up, the blue car is coming!\"\n\nI jumped up and hurried to the door, then stepped out like I wasn't hurrying. I tried not to limp as I strolled to the mailbox, looking down. I watched the car coming up the street through my lashes. It slowed and I stepped close to the street and turned my back on the car to check my mailbox.\n\nTo my surprise, there was mail in it. I pulled it out, watching from the corner of my eye for the car to pass. It finally did, creeping along. I went back up my walk, my face turned towards the mail, but my eyes on the car. I pretended I was sorting through it as I walked back, watching the car turn the corner peripherally. I went back inside, never looking up and shut the door.\n\n\"If that's not him I will eat my fucking hat,\" Sheriff Last said, already moving to the kitchen to watch the car move down the side street. I went and stood next to him, going up on tiptoe to see. \n\n\"What do I do?\" I asked.\n\n\"We have to make him think you are here alone. I am going to move your furniture. Put your couch in front of those double windows so when we open the curtains after dark, you can be seen. I'll be right here in the hall where I can watch. It's a shame you don't have a TV to watch yet.\"\n\n\"I can read a book, I will need a light for that, right?\"\n\n\"Perfect. Where's your phone? Has he texted you?\"\n\n\"Ummm... I don't know where it is? It was in my pocket earlier, when...\"\n\nHe smirked and looked down on the ground. \"There. Under the table,\" he pointed and I bent down to pick it up. 3 texts.\n\nE. Outlaw - Green was never your color.\n\nE. Outlaw - I brought you some presents baby. \n\nE. Outlaw - I can't wait to taste the little pussy baby. Been smelling it for days, I am going to make you scream my name while you squirt in my mouth. \n\nI shuddered, then handed the phone to Sheriff Last. He scowled, then grunted. \n\n\"Green?\" I asked confused, wondering if he understood. I didn't own any green clothes.\n\n\"Car,\" he answered.\n\nOh. Right. The car was green. \n\n\"What should I do? Should I change? Put on something sexy?\"\n\n\"Sexier than that?\" he asked with a confused scowl.\n\n\"Yeah, like a dress or something?\"\n\n\"Lille Jagerfly, no dress will be sexier than that getup you have on. Besides, if you try too hard he will know.\"\n\nI felt myself blush when he said the nickname and I tried to suppress a smile. If you HAD to have a nickname centered around your size, that was as good as I could imagine.\n\n\"So, around dark I should...\" I stopped. Keane. Keane would be coming by after work. How could I warn him off? Tell him not to come?\n\n\"What's wrong?\" Sheriff Last demanded.\n\n\"Umm. Sheriff, I ...\"\n\n\"Tom. You can call me Tom.\"\n\n\"Umm. Tom. I have a neighbor who has paused a few times while taking a walk. What if he stops by tonight?\"\n\n\"Send him on his way. Tell him your having lady issues, you have to wash your hair, anything. Just make him leave. He showing interest?\"\n\n\"Not your business,\" I said, going to my shelf to pick a book.\n\n\"Thought you weren't ready and all that.\"\n\n\"Still not your business.\"\n\n\"We'll see,\" he said cryptically and moved the chair back before sitting back down.\n\nI looked down at the book and felt my ears burning. I turned slightly to look at his profile in the waning light coming from the window. He really was handsome. I wondered how old he was?\n\n\"You intimated you had kids?\" I asked, pulling open the curtains and sitting on the couch. \n\n\"Did I?\"\n\n\"Yeah, you said 'not my weekend', like you have every other weekend with your kids.\"\n\nHe grunted and I tried to adjust. This wasn't going to work. I got up and went to my bedroom to haul back my pillows and a blanket.\n\n\"You can't be cold!\"\n\n\"No. Couch is too low. Or I'm too short. Whichever,\" I mumbled, folding the comforter until it was nice and thick. I laid it on the couch, put a pillow on it, then climbed up and sat on it so that I was clearly visible in the window. Perfect. I got up and got myself a glass of water, then sat down again. \"So? Kids?\"\n\n\"Two. Boys. Eleven and eight.\"\n\n\"They have names?\"\n\n\"Shawn and Jacob.\"\n\n\"So how old are you?\"\n\nHe chuckled. \"Knew that's what you were leading up to. Thirty six. Car is coming,\" he said, leaning back.\n\nI tried to look natural, reading from the light coming in the window. I saw the car slow, then it went out of my peripheral. I forced myself to stillness and turned the page calmly.\n\nWhen Tom stood, ducked down low to go look out the kitchen window, I knew the car had moved on. I let out the breath I'd been holding. I got up and went to the light switch. \"Say when.\" I said quietly.\n\nHe snorted. \"Most girls would be terrified. You think it's a game. You are excited!\"\n\n\"You aren't going to let him hurt me, why should I be afraid?\" I asked, a little confused. Eric was about to be caught, arrested and out of my life! Why wouldn't I be excited? Also, this was exciting!\n\nHe turned and looked at me, his eyes unreadable as he stared at my face. He gave a slight nod, then glanced back out. \"Get the light if you want then,\" he said, his voice mild. He came back to the living room and drug his chair back to the hallway. \"Would you still feel safe if I watched from your bedroom?\" he asked from the mouth of the hallway, his eyes still unreadable.",
        "\"Yeah, the door is locked, right?\"\n\n\"Yes. Back door too, and the basement. With the light on in here, there will be reflection off the glass and you won't see the car as easily. Keep your phone there with you.\"\n\n\"Should you have someone else here?\" I asked curiously. \"Backup or something?\"\n\nHe grinned at me. \"I considered it until I saw the fight you put up. If he gets past me, he won't get past you.\"\n\nI grinned before I could help it and looked down at my book. He disappeared down the hall and I anxiously stared at my book. I was nervous for two reasons. Keane could be here any minute now that it was dark and Eric could have parked his car and could be slipping up to my window. The thought made me dizzy with fear, my head was so close to the window. The glass seemed a thin and palty barrier. It may as well be spun sugar! Was it too late to say my bedroom was too far? I sorely missed the safety Tom's presence provided. \n\nI half hoped Keane would pop in, he would probably make me feel just as safe. Seeing me with a hot guy might make Eric leave me alone. No, that would just piss him off. He'd set his sights, another man wouldn't make him give up. The thought of Keanes hands though, and that sexy smile. I squirmed, feeling myself getting excited. I could imagine those perfect lips on mine, his strong hands gliding over my skin, making me shiver and moan with need. I slid my fingers down to touch myself, biting my lip to stifle my cries of pleasure. I slid down lower for a better angle, dropping my book. My left hand was so awkward, it was hard to work myself, but I slowly started getting there. I adjusted again, sliding lower and slipping my fingers under my pants and into my panties. God, I was so wet, so excited! I pressed my hips up into my fingers and tried to use the movement to help my awkwardness with my left hand.\n\n\"Girl, not that I mind the show, but what the hell are you doing?!?\" Tom asked from the hallway.\n\nI gasped and sat up, panting. No! I was so close! Damnit. \"Go away!\" I moaned, laying back down and turning away from him to try and find that euphoria again.\n\nHe flipped the light off and for a moment I thought he meant to leave me alone, then he picked me up and started towards my bedroom.\n\n\"Ohh, no! I just need another minute! Please!\" I begged.\n\nWhen we reached my bedroom door, he turned left instead of right, to the bathroom. He turned on the shower, then shoved me under the freezing cold water.\n\n\"JESUSFUCKINGCHRIST! Let me go! Let me out!\" I cried, struggling to get out from under the icy water.\"\n\n\"You in your right damn head?\" he demanded.\n\n\"Yes! Let me out!\"\n\nHe yanked me out and threw a towel at me. \"You said you weren't having dreams!\" he yelled. \"You made me think there was plenty of time! Do you know what you have... Gah! Dammit girl! Who are you dreaming of?\"\n\n\"What?\"\n\n\"Who is it your are dreaming of? Name? Face?\"\n\n\"Just a guy I know!\"\n\nHe froze and paled. \"A guy you know? A guy you have seen?\"\n\n\"Yes!\"\n\n\"Does he have a dog?\"\n\n\"Yes?\"\n\n\"Fuck! You have SEEN him? Has he touched you?\"\n\n\"Yes?\"\n\n\"FUCK! Ok. Ok. It's not too late. It's not. Girl. We need to fuck, right now.\"\n\nI felt a hysterical laugh bubble up. \"Right. The virgin thing. Are you trying to tell me Keane is what you are protecting me against by taking my virginity?\"\n\n\"He told you his name?\" he asked, his voice hard. \"Girl... listen to me carefully. Answer me. Has he kissed you?\"\n\n\"No, not yet. He said he planned on it?\"\n\n\"Ok. Ok. There's still time. I need to call Beatrice. I need to...\"\n\nThere was a knock at the door. A pounding. I jumped and went right into Toms arms.\n\n\"Easy girl,\" he whispered. \"Where's your phone? Is it Eric or... the other?\"\n\n\"I left it on the couch? I will have to answer the door?\"\n\n\"Ask through the door.\"\n\nI was shaking like a leaf as I hurried to the door. They pounded again and I yelped. \"Who is it?\" I asked, my voice shrill.\n\n\"Hey baby. Open up and say hi. I've missed you and I have a present for you!\"\n\n\"Go away! I will call the cops! They know about you!\"\n\n\"I know what you think they know baby,\" he taunted.\n\nI felt Tom move up behind me, put his steadying hand on my shoulder. He reached down and opened the door. My mouth opened in shock, then I realized he must be about to confront Eric. \"I'm sorry Girl,\" he said gently and stepped back.\n\nEric stepped in, smirking. \"You must be Tom?\" he asked, grinning.\n\nConfusion, panic, I couldn't focus. What was happening?\n\n\"Don't harm her,\" Tom said angrily. \n\n\"You ask me to come rape her, then tell me not to hurt her?\"\n\n\"You...\" I asked, looking up at Tom. He wouldn't look at me, he looked close to tears.\n\n\"Yes,\" he snapped to Eric. \"Don't hurt her, be gentle. I brought you here to do what I couldn't. What I wouldn't. It needs doing but you don't have to hurt her.\"\n\n\"Sure old man. Don't worry, I have been waiting a good long time to get my hands on this one. By morning she'll be begging to spend her life with my cock between her legs. Right baby? I brought you presents baby. What happened to your hand? And you face?\" \n\nI stared at him, unable to comprehend what was happening. What was about to happen. Tom had TOLD him to come here? To rape me? I looked back at Tom who was shuffling back, circling to the door. I watched him slip out, closing the door as he did.\n\n\"Just us baby. No kiss? You just going to stand there looking like a dummy? Had no idea, did you? I thought he was fucking with me at first. Setting me up. When he went on and on about you being a virgin and you couldn't live here, on and on about some demon that feeds on lust and needs chaste cunt or some shit. The dude totally believes it. He is fucked.\"\n\nI blinked. Demon? Lust? I swallowed hard. Keane. The literal embodiment of my perfect man. \"What... what happens to the virgin if the demon gets her? Did he say?\"\n\n\"He may have baby, who the fuck cares? Look at me baby. God you are fucking hot, even looking beat all to hell. The old man do that?\"\n\nI was still trying to process, looking up at Eric. I couldn't bring up the fear I'd had for him just an hour ago. \n\n\"Hey! Baby, what's wrong with you? He have you drugged? No fucking way baby, I want you wide awake,\" he said, finally touching me. He put his hands on my face, turning me so he could see my eyes. He wasn't rough and I stood passively, letting him look me over. \"You are in shock,\" he finally said, scowling and looking taken aback. \"What did he do to you? I will fucking kill him,\" he said angrily, his nostrils flaring.\n\nI looked up at him, not understanding his anger. \"Why?\" I asked. \"Because I am yours to hurt, not his?\"\n\nHe smiled, cocking his head. \"Have I hurt you baby?\"\n\n\"You are about to rape me,\" I answered, unable to bring up the panic that should be causing in me.\n\n\"What have I been saying to you this whole time baby? I am going to make you scream with pleasure. I am going to make you want me. Nothing about hurting you, or owning you or controlling you. I am going to make you so fucking happy you'll never look twice at another man.\"\n\n\"But I don't want you to. I don't like you. You are a douchebag. You brag and brag and brag about your giant cock so much I can only imagine you are sporting a couple of inches at best.\" The words came, but I still felt little to no emotion. It was all just fact, falling out of my mouth. I was so numb and distant. Separate. \n\nHis smile dissolved as he looked at me, studying my face. \"I don't know what he has you on, but I am not a fan. Look at me Brielle. What did that dude do to you? Besides beat the crap out of you? Babe, I can and will destroy him. He's a psychopath. Demons? Paying my way to come down here and rape you? He's insane.\"\n\n\"So you won't rape me?\"\n\nHis eyebrows furrowed and he looked down at me in consternation. \"I came here to rape you,\" he said quietly. His blonde curls slid down his forehead as he looked down. \"But you are so broken. It just makes me angry. I want to take you back home, get you out of here. I want the girl who threw a drink in my face when I asked if she wanted to get coffee. This girl in front of me now, I only want to protect her.\"\n\n\"You would take me back to St Charles?\"\n\n\"Is that what you want?\"\n\nI swallowed hard. What was Keane? Why wasn't I afraid? I should be terrified, but thinking of him only made me wish I could feel his hands on me. Where was he? He was supposed to be here, teaching me to make shepherd's pie. Kissing me like he promised he would. Calling me that name I didn't understand. I wanted it. I wanted him. \n\n\"Eric?\" I asked softly.\n\n\"Yeah baby?\" he asked, lifting my chin between his thumb and forefinger. So gentle and unlike him. Like it wasn't him at all. It wasn't him at all. \n\n\"Are you him?\" I asked, trying to search in his earnest brown eyes.\n\n\"Who baby? I'm me. Jesus he has you drugged out of your mind.\"\n\n\"He is him, Mo Sh\u00edorghr\u00e1.\"\n\nI spun and looked up at Keane, standing in the kitchen. He offered me a smile and I melted and grinned at him.\n\n\"Who the fuck are you?\" Eric demanded.\n\n\"I'm the man who cooled your desires so completely that you no longer wished to touch my little love here. Now, be a good twat and go fuck yourself,\" Keane said, touching Eric on the forehead. \n\nEric staggered, then stumbled to the couch, yanking his pants off to pull his dick out and start yanking on it. As it turned out, he had never been exaggerating about how big his dick was.\n\nI turned and looked back up at Keane. \"Is what Tom said true?\"\n\n\"Depends on what he said luv.\"\n\n\"Are you a demon who feeds on lust?\"\n\n\"That's not quite right but close enough to call it ballpark. You've probably noticed that this little corner of town is a bit... oversexed. I may or may not have something to do with that.\"\n\n\"So you are a demon? How did you know what my fantasy man looked like? Can you read my mind?\"\n\n\"Am I your fantasy man luv? You seem to be taking this all rather well. It's a bit of a surprise really. No, Mo Sh\u00edorghr\u00e1, I cannot read your mind. I am who I have always been.\"\n\n\"Are you going to tell me what that means?\"\n\n\"In due time luv.\"\n\n\"Is it bad?\"\n\n\"Does it feel bad?\"\n\n\"No. It feels... nice.\"\n\n\"And so it is. Can you imagine what is to happen next luv?\"\n\n\"I'm not sure. I think...\"\n\nI was interrupted by Eric, roaring and spurting cum all over his own chest. He collapsed, panting and Keane looked over at him, grinning. \"Don't stop now sport. You've all night to keep fuckin' yourself.\" Eric moaned and reached down, starting to stroke himself again.\n\nI looked up at Keane, a little afraid now. \"So you are the reason why I've been so...\"\n\n\"I haven't made you do anything luv, if that's what you think. My presence does have side effects that I cannot help, but I did not actively make you, like I am doing to him.\"\n\n\"Are you going to hurt me?\" I asked, starting to tremble slightly.\n\n\"No Mo Sh\u00edorghr\u00e1.\"\n\n\"Then why is everyone so afraid of you? What are you going to do to me?\"\n\n\"Nothing you don't want me to do luv,\" he said with that same sultry smile. \"Relax luv, sit with me at your table in here,\" he said, gesturing at the bistro table. He stepped back to give me wide berth, letting me know he had no intention of hurting me or even touching me. I went to the chair and struggled, unable to use my right hand. He touched my shoulders lightly, helping me into the chair, then immediately let me go and sat down. He leaned on his hand and watched me, his eyes shining. \"I do like the undershirt luv. What happened to the rest of your clothes? Not that I mind, mind you. Did you wear that for me?\"\n\n\"Ummm.. my tank top? It's not an undershirt. It's just a shirt...\"\n\n\"You'd wear that in public then?\" he asked in shock.\n\n\"What...time are you from? Was anything you told me real? About your wife and son or family?\"\n\n\"All of it luv. Can ya not imagine a time when the poor crossed the ocean in hopes for a better future? When women and babies died from consumption and worse?\"\n\n\"Is that why you hate technology? What happened? How are you like you are if you used to be a human?\"\n\n\"We all think something is important enough to try and cheat a bit, don't we luv? We think we are clever enough to deal with things we have no understandin' of. We hear somethin' that seems too good to be true, we think we are getting something amazin' and easy. The fine print, the unasked questions... we don't figure on those, do we? That's how I am here, luv. I made a mistake. It's a long and borin' story luv. As for the other, no. I am not a fan of your googlin and new gadgets. There was a time when things were more simple. Less cluttered. 'Things' were less important than 'people'. We spoke face to face, we knew our neighbors for miles around. All of this we can speak about another time Mo Sh\u00edorghr\u00e1.\"\n\n\"So what is it you want from me?\" I asked, trying to take it all in, trying not to completely panic.\n\nHe was quiet for a moment, looking at me across the table and smiling. It was so quiet I could hear Eric in the other room. I immediately tried to tune that out. Keane grinned. \"That blush is truly somethin' luv. You are a stunnin little thing. What do I want from you? Nothing too onerous.\"\n\n\"Are you going to rape me?\"\n\nHe laughed. \"Mo Sh\u00edorghr\u00e1, when I decide to take you to muss those lovely blankets of yours, you'll be willin'. Have I given you the impression that I would force myself on ya' in some way? Do you think I'd need to? I've seen the way you look at me. Ya know how I feel about you.\"\n\n\"I do? For a thing that feeds on lust, you haven't made any real moves. You never even tried to kiss me.\"\n\n\"I told ya I would though, all in due time. Are ya' anxious for it then? My nature affects those around me, but it doesn't change who I am luv. I wish ta court ya a bit. I'm not used ta the way girls are now, on their googlin and gadgets and meetin men and kissin' and fuckin' as soon as they say hello. It's not my way.\"\n\nI cleared my throat and looked down and away. I felt like he wasn't being completely honest with me, but what could I say? He... It wasn't hurting me. He had saved me from Eric. He had been nice to me. And he was still sexy as hell. \n\n\"How's the hand luv?\"\n\n\"Hurts. It's fine..\"\n\n\"Your face is a bit roughed up as well. The twat do that?\"\n\n\"Something like that. So I guess you don't really live down in that house?\"\n\n\"It's an empty house, the people round here keep it empty for a reason. I have a few things in it if I need them.\"\n\n\"So what if I had said yes to the phone book that night?\"\n\n\"Ya didn't though, did ya luv? I knew ya wouldn't.\"\n\n\"So where do you go during the day? Why do you only come over at night?\"\n\n\"See, here's where the story gets a bit fun. I don't have the time to explain it all ta'night luv, but try to imagine an explosion every mornin'. I explode, and what is me stays in this small little circle here in this little neighborhood. I touch the people within it, fuel their... lusts for lack of a better word. In turn they fuel me. By dark, I sort of implode. Not literally of course, it's a metaphor.\"\n\n\"Why do I feel so blase about all of this? I should be terrified and I am just numb.\"\n\n\"I'm guessin' it has somethin' ta do with the drugs in your system. I guess the twat didn't want ya ta put up a fight.\"\n\nI thought about Tom and figured Keane was right. He must have drugged me. Why did that make me a feel a little warm inside? It shouldn't. But he thought I might have fought so hard that Eric wouldn't be able to handle me. For some reason that DID please me.\n\n\"Are ya' happy he drugged ya then? Such a sad little smile that was.\"\n\n\"No, just thinking. I know I want more answers, so many more answers, but I am too fuzzy to think of them right now.\"\n\n\"Just as well luv. I cannot stay, not tonight, it is too close...\"\n\n\"Too close?\"\n\n\"Nevermind that. In the mornin', th' other will be comin' back to see that the job was done. Can you make him believe it was?\"\n\n\"I guess? Why should I?\"\n\n\"So I can come back an' see ya tomorrow night luv,\" he answered with that beautiful grin.\n\nI rolled my shoulders in a half hearted shrug. \"Will you be able to answer my questions?\"\n\n\"Of course luv, we have nothin' but time, don't we? I will make the twat sleep, he will dream of all the things he did to you. By morning his cock'll be so sore he'll be sure it was all real. I'll be needin' ya ta sleep next to him luv, but he won't be wakin' any time soon. I'll let you sleep as well, let those drugs get out of your system. When t'other returns, he will think it is all done and be none the wiser. Can ya do that luv?\"\n\n\"I can do that,\" I answered, a little unsure. I knew I could do it, but did I want to do it? I was so confused! Keane didn't seem bad. He had never hurt me, not on purpose, never touched me. Not like Tom and Eric. Keane didn't feel bad either. He felt... good. So warm and hot and sexy. A wet dream poured into a pair of slacks and a cable knit sweater. \n\nI realized I was looking him over, lusting after him and wishing he would kiss me. His smile and the shine in his eyes told me he knew exactly what I was thinking. Heat rose to my cheeks and I looked away.\n\n\"Do not be embarrassed Mo Sh\u00edorghr\u00e1, it thrills me to see that look. Come now little luv. Let's get you settled in,\" he said gently, standing and picking me up like a small child. His smile was adoring as he carried me back to my room and laid me down on the far side of the bed. He undressed me gently, then he tucked me in and stroked my cheek, a feather light touch. \"Soon Mo Sh\u00edorghr\u00e1,\" he whispered. \n\nI was drifting when Eric shambled in, Keane behind him, a hand on his shoulder. Eric Pulled his clothes off jerkily, like his actions weren't his own. His eyes were staring, non-seeing as he disrobed. He half fell into bed and Keane covered him less gently. He actually looked perturbed as he looked back at me and Eric turned on his side to face me. \"Dream,\" he said darkly, touching Eric's head. He looked back at me and gave me a small smile. \"Soon,\" he said again. \"Remember what I have told you.\"\n\nMy eyes were too heavy to keep open.\n\n\"Damnit Don, what the HELL do you think you are doing?\"\n\nI jerked awake, turning to the voice. Tom was in my bedroom doorway, looking furious. My eyes quickly went to the other figure at the foot of my bed. Donald Everett was standing there, jerking on his dick, butt naked.\n\nI cried out in disgust and Erics arm tightened around me, pulling me tight against him. \"The fuck?\" he demanded drowsily. \n\nI struggled to pull away from Eric as Tom shot across the room to grab Don. When I kicked my feet, I realized they weren't under the blankets. Not only that, but they were covered in something wet and sticky. My scream sounded frantic as well as disgusted as I tried to free myself from Erics arms.\n\n\"Fuck off Tom! I aint in public and look at them cute little toes! They need a few more coats!\"\n\nTom drug the old man out bodily as Eric rolled over me, pinning me down. \"Last night,\" he breathed. \"Damn baby, it was every fantasy I ever had of you come to life.\"\n\nTom came back in, breathing heavy and red faced, furious. \"You did what you came for, you can go now,\" he snapped at Eric. \"You did do what you came for, right?\"\n\n\"Fuck yeah I did. Over and over and over again. Fuck baby. You as sore as I am? I know you must be, that little pussy took a pounding. Mmmm.\"\n\n\"Let me go!\" I begged. \"Please! I need to shower! He... he came on my feet! It's all over me! Please!\"\n\nEric sat up, looking disgusted as he surveyed my feet. \"What the actual fuck?\" he asked Tom.\n\n\"You left the fucking door unlocked you little fuck. Let her go, let her shower! You can go.\"\n\n\"I'm not ready to go yet,\" Eric said, letting me go and laying back. \"I'm thinkin' I may need another round tonight.\"\n\n\"That wasn't the deal. You go now or I shoot you and say I caught you breaking and entering,\" Tom demanded as I got up and wrapped in a sheet to get across the hall to the shower. ",
        "I was on the verge of vomiting, I had to get all that cold spunk off my legs and feet. I got in the water while it was still cold and shoved my feet under the flow. The pressure wasn't enough to make it come off, I was going to have to touch it. I vomited, going to my knees, then immediately grabbed a cloth and tried to scrub it away. I was sobbing and my stomach heaved as I scrubbed myself raw.\n\n\"Easy girl,\" Tom said gently.\n\n\"Fuck you asshole!\" I screamed angrily. \"You brought him here to RAPE me! What is WRONG with you?!?\"\n\n\"I told you, it had to be done. And I didn't think that I could do it...\"\n\n\"Get out! You got what you wanted, get out!\"\n\n\"Easy girl, get yourself washed up and I will make you some food. Eric is getting dressed, he should be gone by the time you are done.\"\n\n\"Fuck you both! Get out. I don't want you here!\"\n\n\"We need to talk, girl. Clean up and come out here.\"\n\nI looked up at him angrily, his head poking into the sliding glass door of the shower. \"Do you really need to watch me you fucking creep?\"\n\n\"Girl,\" he said in exasperation. \"Get off the floor and wash up. I don't have time to humor you today.\"\n\n\"Fuck you!\"\n\n\"Am I going to need to motivate you, girl?\" he asked darkly.\n\nI stumbled to a standing position and glared at him. \"I don't care about your reasons, or intentions. I care about what you tried to do. I will see you pay if I have to buy myself a fucking gun and...\"\n\nHe shot his hand out and grabbed a fistful of my hair, shoving my face against the tile close to him. I gasped, my eyes rolling up to him as I tried to push myself back with my good hand. His face was an inch from mine, his hand in my hair, his arm along the side of my face and shoulder. It was solid and strong and unwavering, that hand. My breath caught as I felt excitement build and I looked up at him again. His face went from angry to a hooded expression, like he could sense, or see the shift in my excitement. My mouth opened to speak, but I couldn't think of anything to say. My eyes went to his lips and he leaned slightly closer. He was so close, his breath tickled my lips.\n\n\"Be quick, Lille Jagerfly,\" he whispered softly. He let me go gently and slid the door shut.\n\nI stood trembling for a moment, trying to sort out my feelings. I should be pissed at him, but his strong, no bullshit sense of command was sexy as hell. He was in control and I liked that. I didn't even know I liked that until he had showed me. I swallowed hard and started washing again. What about Keane? He was so hot and sexy, but what else? Yeah he was a wet dream walking and he turned me on like a faucet, but other than sex, what was he? I tried hard to sort my feelings out, but had come to no conclusions when the water started cooling. I got out and dressed quickly in more yoga pants, jeans still being out of my abilities. A hoodie was easy and made me feel less vulnerable. \n\nI peeked out, down the hall. It was quiet. I slipped out, as quietly as I could. Tom was in the chair, next to the front door, facing me.\n\n\"Eric is gone. He should be heading back, but he has enough leave that he may try and hang around. Come back.\"\n\n\"I can take care of myself,\" I said quickly. \"So long as I don't have someone selling me out.\"\n\nHe gave me a rueful smile. \"There is one more thing I need to show you before I leave you alone for good,\" he said, standing. \"I will grab you some breakfast on the way, you need to eat.\"\n\n\"Soak up the drugs you slipped me?\" I asked angrily.\n\n\"Among other things. Get your shoes.\"\n\n\"I'm not going anywhere with you!\"\n\nHe sighed and half smirked. \"You are going, even if I have to throw you over my shoulder. It's important.\"\n\n\"Fuck you,\" I snapped, turning to go back to my room. I shoved the door shut and turned the lock, only to discover that it kept turning. It was as if there was no mechanism in it, it was just for show.\n\nTom opened the door, pushing lightly and I threw my weight against it. He pushed it open easily and scooped his hand around my waist to lift me. I struggled and he flipped me, pinning me against the wall. He put his face next to mine as I stilled, his mouth against my jaw. \"I am taking you for a ride girl, you can be good or I can hog tie you and put you in my trunk. Which is it?\"\n\nI felt myself trembling, his body pressed against mine. I could smell his aftershave, it was masculine and spicy. My heart was pounding, my adrenaline so high it was making me shake. I could feel me nice clean panties getting wet as my body responded to his exertion of control over me. \n\nHe grunted softly and lifted me a little higher to sit me in the crook of his arm. He walked me out of the house and I threw my arms around his neck so I wouldn't fall. He lowered me into the passenger seat gently and shut the door before hurrying around to the drivers side. The look he gave me when he got in was considering. I was so tense, I felt like something was about to snap. He pulled away quietly and drove me into town, stopping briefly at the bakery. He left me locked in the car and when he got back in, I realized I had not once tried to walk away once he had put me in his car. Had he drugged me again? No. I felt fine. Normal. Like me. Excited and full of expectation. He set a small paper bag in my lap and handed me a cup of coffee. There was a croissant in the bag and it was still warm. Flaky and delicious. I was starving!\n\nHe chuckled as I ate it and I managed to glare at him around a mouthful. He pulled up in front of a house on a high mound. All the houses on the street required concrete stairs built into the yard. He came around and picked me up, setting me in the crook of his arm again. He carried me up the stairs to the house and unlocked the door.\n\n\"Is this your house?\" I asked, scowling again.\n\n\"Yup,\" he answered, swinging me around to put me on an old couch. It was a small, cute house, filled with what looked like thrift store furniture from the seventies. Very masculine, very minimalistic. He went back to the door and slid the bolt and locked it.\n\n\"Why did you bring me here? What do you need to show me?\"\n\n\"I have seen girls after they are raped. I know how they act. They DON'T get excited when they are grabbed roughly. Like you did in the shower. You should have been hysterical, crying, upset, not wanting to be touched. All you cared about was getting Don's jizz off of you. I don't know what happened, I don't know why Eric lied about it, but I know you were not raped last night. Also, you flat out said it. 'What I tried to do'. Not 'what I did'. I see that look girl, don't try to run. Door is locked, I have the key. You ain't goin anywhere. And I am thinkin' you don't really want to anyway, do you?\"\n\n\"So why here?\" I asked breathlessly, trying to stall for time.\n\n\"Because my house is out of the radius of his influence. What did he tell you? What did he say?\"\n\n\"He who?\" I asked playing dumb. \"Eric? He said he wouldn't touch me if I came back to Chicago and dated him, gave him a chance. Said he wanted to see me happy, not hurt me. Wanted to make me feel good.\"\n\n\"At least have the decency to look me in the eye when you lie to me girl,\" he said with another smirk.\n\nI looked back up at him. The front door seemed to be the only way out. There was another door, but I could see the corner of a bed. I knew it was just the bedroom. The bathroom was probably attached to it. The kitchenette was open to the living room, there was nothing, no other way out. The excitement heightened. What the hell was wrong with me? His smile was knowing as he knelt in front of me, putting a large, strong hand on my leg. I pushed it off, my face burning.\n\n\"Girl, we both know how this has to go.\"\n\n\"I thought you said you couldn't do it?\" I asked angrily, looking around again, this time for a weapon to use.\n\n\"Yeah, that was before I got to know you,\" he said with a chuckle. \"Doubt I will have an issue anymore. Don't think you will be objecting much either.\" He leaned closer, catching my wrists and transferring them to one hand before putting his hand on my thigh again. He wasn't being rough, or holding me too tightly. He wanted me to give in to him, not fight.\n\nI leaned forward, looking from his eyes to his mouth, parting my lips as if I wanted to kiss him. He moved to meet me halfway and I used his own momentum to headbutt his lip. \n\nSONOFABITCH!\n\nWhat no one tells you and you never see in movies, is that that fucking hurts. A lot. My head was ringing like a bell. He pulled back a bit and spit out blood on his floor, then looked back at me, watching my eyes go out of focus.\n\n\"Well that was stupid,\" he said, his tone disappointed. My world spun and it took a moment to realize I was actually being moved and it wasn't just my ringing head. White took over my vision and as it cleared, I could see it was a ceiling. White, square, empty. I blinked and tried to clear the fog and pain. \"Knocked yourself silly, didn't ya? Good try though. Next time don't use the front of your head. You good now girl?\"\n\nI was being shifted and jerked around. When he pushed my arms above my head and fabric appeared, I realized he was undressing me. Roughly. I resisted, but it was mostly token. Any movement made my head throb. Finally, it began to abate and I rolled to my side, trying to feel for the edge of the bed. What I found was a wall. His bed was pushed up against the wall. I turned and he was on the other side of it, pulling off his button down shirt. I paused to appreciate the view without realizing what I was doing. He had a small patch of curly brown hair on his chest and I had half expected some abs and pecs. He wasn't cut, not like I had imagined, but he was hard and wiry. All muscle, even if it wasn't defined like a body builder. When his hands went to his pants, my eyes followed and he paused. I looked up at him and he was watching me with an eyebrow lifted. \n\nRight. I wasn't supposed to be watching him like a hungry and undersexed lover, I was supposed to be getting away from him. He was about to rape me. Against my will. I managed to sit up and my hand went to hy head to see if there was blood. It felt like there should be blood. There was a small bump, but no blood. \n\n\"Get your wits back yet?\" he asked, shucking his pants. My eyes went to him again. His cock was long and hard. Not as thick as Erics, but not small by any means. It was longer by a few inches, though I could be wrong. I hadn't looked too closely at Eric. I blinked again. What the hell was wrong with me? Comparing the dick sizes of my two would be rapists?\n\n\"I think I have a concussion,\" I mumbled with a scowl.\n\nHe laughed as he climbed into his bed. \"Tell yourself what you need to girl,\" he said, pausing as I curled up in the corner, putting my feet in front of me. I was ready to kick him the moment he got close. He inched closer, watching me warily with a shine in his eye. I tensed as he got almost within reach and just as I was about to launch my feet at him, he shot forward and grabbed both of my ankles, yanking me underneath him and pinning me with a fluid motion.\n\nI hardly had time to yelp before he was pinning my hands above my head. He was holding his head out of my reach this time as he smirked down at me and I lay beneath him, frozen in fear, shock and excitement. His hips were between my legs, which felt completely useless splayed out on either side of him. I could feel his hard cock on my thigh, pelvic bone and hip with the angle he had me pinned at. He was up on one elbow, the one attached to the hand holding my wrists, and he looked down at me, naked and prone beneath him. \n\nHis look went from hooded and excited to full predator as his free hand moved down to play over my ribs and up to my breast. His hips ground against me and I could feel my excitement building as his cock pulsed against my thigh.\n\nI closed my eyes and groaned, feeling my pussy getting wet all over again. I didn't want this! I pushed Tom out of my thoughts, this plain, ordinary man was no match at all for the gorgeous hunk who would come for me tonight. He wouldn't come for me, not if I let Tom do this. I thought of those beautiful blue eyes, his sexy black curls, those perfectly kissable lips and his dreamy voice.\n\nMy will reinforced, I opened my eyes to tell Tom to get off of me, to make him get off of me. His brown eyes, so confident and commanding filled my vision. His lips touched mine and I whimpered as he kissed me. I felt the same sense of safety and warmth wash over me that I had felt the day before. I kissed him back, telling myself it was only a kiss. A kiss couldn't hurt and he felt so wonderful. \n\nHe shifted, moving, but kept his lips locked on mine as he lifted his hips. It was my moment, I told myself. I twisted and yanked my knee up with all my might, trying to aim for his groin. He rolled just enough that my knee hit his hip. He grunted, but his lips never left mine and I never stopped kissing him. It was maddening. \n\nHe moved again and his free hand slid down between my legs, rolling in the wetness along my slit. He moaned and his kiss became more needy, more passionate. He rolled his fingertips over my pussy, searching. He hit his mark and I pulled away from his mouth to cry out, my back arching, pushing my hips towards his fingers.\n\n\"Mmmm,\" he moaned against my neck as his fingers began working. \"You are so hot and wet girl, I want to taste you.\"\n\nI sucked air in and held my breath, the thought of his mouth on my pussy making me feel elated and hot. My entire body responded to his words, all of me flushing as I began breathing again, panting. He didn't wait for me to agree, he took my reaction as acquiescence. He released my hands and moved down, leaving a trail of kisses down my neck, breasts, and stomach before pushing my legs apart and running his hot tongue along my slit. I moaned wantonly and told myself that this was fine. This wouldn't hurt anything. I could enjoy this and god I wanted to. It felt so good. I buried the fingers of my good hand in his hair as he slid his tongue into my pussy as far as he could. He shifted me, lifting my hips higher so he had a better angle to tongue fuck me before moving up to swirl his tongue around my clit and making me scream for him. He closed his lips around me, locking them over that sweet spot and using his tongue to build my need to explosive levels. \n\n\"Oh! Yeess, oh, please, yes... ohh, don't!\" I panted, \"don't stop!\" I was so close to coming when he pulled back suddenly and went back to licking my slit and tongue fucking me. \"Oooooh!\" I moaned, needing release. This was both torture and ecstasy. He lifted me higher suddenly and moved down to tongue my asshole. \"No!\" I gasped, clenching and pulling back. His hands tightened on my hips, yanking me roughly closer as he continued to swirl his tongue around that tight little opening. He worked his way back up, bringing me back to the brink, and then back down again to tongue my asshole. He did that several times until I stopped tensing up, then he shoved his tongue into my ass and tongue fucked my asshole as I squirmed. When he moved back up, he latched on to my clit with a will and moved his hand to slide a finger into my pussy. He met no resistance as I welcomed him, pushing my hips to greet him. His finger slid in and out, keeping time with the flicks of his tongue. How was he so fucking good at this?!? When I came, I saw literal spots in my vision, screaming and clamping down on his finger so hard he could no longer fuck me with it. My toes pointed and locked up, my legs and arms and back all locked up as it rose higher and higher. He refused to stop, his mouth working me until I finally came down and turned into a languid puddle on his bed.\n\nHe finally slowed, slid his finger out and kissed my pussy gently before leaving a trail of wet, sloppy kisses back up to my neck and jaw. He hesitated a moment before kissing my mouth, as if he thought I might object. When I tasted myself on him, I wondered if that was why. Was that supposed to turn me off? I wasn't sure. I didn't really care. I kissed him, still blissed out and feeling on top of the world. His hands on me, caressing my face, stroking my hair, they felt amazing. He felt amazing. He moved slightly and went back to kissing my jaw and I closed my eyes and let him, happy to sink into a contented delirium.\n\nHis hand on my hip, pulling my leg high, brought me out of it. I could feel him, lining his cock up to my slit, so wet and ready for him. This is what I had to stop, he could not take my virginity!\n\n\"This may hurt a bit girl,\" he whispered, just as I cried, \"STOP!\"\n\nHe did not stop. He pushed into me with ridiculous ease, my own juices easing his passage. There was pain, he was thicker than my vibrator, but it wasn't bad. It only felt good, filling me to a pleasantly full feeling.\n\n\"Oh?\" I managed as he began to slowly move in and out of me. It was done, there was nothing I could do now, so why not enjoy it? I slipped my arms around his neck and wrapped my legs around his hips as he made love to me. It was beautiful and perfect as he kissed me, stroked my cheek and took his time. I held him, whispering to him how wonderful it felt, how good it was, my mind getting lost in his arms. I never once thought of Keane, only the man above me, completely in control but still gentle and loving.\n\nHis pace began to pick up and the pleasure picked up with it. \"Oh! Oh, yes, I like that..\" I moaned as he lifted himself higher for more leverage. He moved faster and harder and I let out a wail of pure pleasure that spurred him to ram harder. He was pounding into me, I could feel him hitting an inner wall, but it felt good. \"Yes! Yes, more!\" I begged. He went to his knees and grabbed my hips, pulling me up. He jackhammered into me, bouncing me off of his hips, only to yank me right back against him as he thrust. I screamed with the mix of pleasure and pain and it rose several octaves as the first wave of another orgasm swept over me.\n\nHe roared, a deafening snarl as he bore me down to the bed, coming as I locked my pussy around his cock again and again. His throbbing dick warred with my clenching pussy as I milked him dry, forcing him to shoot every bit of his cum into me.\n\nHe collapsed on top of me, panting. I held on to him as tightly as he was holding on to me as we both tried to catch our breath. He finally half rolled off of me, pulling out as he did and lay next to me, holding me. I turned up to him and he leaned down to kiss me. \n\nWe both jerked when there was a loud knock at the door. \"What the hell?\" he half whispered, sitting up and rolling out of bed. He shoved his legs in his jeans and yelled, \"Who is it?!?\"\n\n\"Uhh, Sheriff Last?\"\n\n\"Merrit? Is that you?\"\n\n\"Yessir. Umm, can you open the door sir?\"\n\nI sat up and moved to the end of the bed so I could see as Tom opened the front door. A short man in a police uniform stepped in. \"Hey, Tom, sorry to bother you on leave... Uhh, we got a noise complaint? Neighbor said someone was being murdered over here?\"\n\nTom snorted and looked over his shoulder at me. The officer followed his gaze to me and I felt myself blush. \"Sorry,\" I offered with a shrug.\n\n\"I'll try and keep her more quiet,\" Tom said teasingly. \"Tell Agnes she knows damn good and well no one was being hurt, she watched me bring my girlfriend in here. Tell her to mind her own damn business. And if Cora shows up here, I'll bring Agnes in on stalking and harassment charges. It's no one's business who I bring home, least of all my ex wifes. Tell her, and I mean it. If Cora knocks on this door, I will take her in. I'm done.\"\n\n\"Uhh, yes sir,\" the boy said red faced. He left with a nod at me and Tom locked the door and came back to the bedroom. He stopped in the doorway, looking me over with his satisfied smirk. \n\n\"Need a glass of water?\"",
        "\"Your girlfriend?\"\n\nHis smirk went to a smile. \"Didn't hear you correct me. Or tell him you were being held here against your will,\" he said, climbing back into bed, rolling me onto my back to kiss me. I didn't stop him.\n\n\"I'm hungry,\" I said, finally pulling away. \"That little pastry was less than an appetizer. Take me home so I can grab my purse.\"\n\nHe laughed. \"That is the flimsiest excuse ever, girl. If you are truly hungry, I will just take you back there and get you more, you don't need your purse.\"\n\n\"Ok,\" I shrugged. \"Lets go. I am seriously starved.\"\n\nHe looked at me a moment, then sat up, tossing me my clothes. I got dressed and went to his little bathroom. I found a brush and brushed the mess that was my hair, then came out to see him kicked back on his couch with only his pants on still. He was giving me a considering look. \n\n\"I thought you were going to feed me?\" I asked, hands going to my hips.\n\n\"Oh, I was going to feed you something,\" he said with a grin. I knew he was joking, at least partially, but it pulled at something low in me and I felt my already sensitive pussy starting to throb again. He raised an eyebrow, like he was surprised at the reaction his words caused. A very pleased smile spread slowly across his lips and his eyes went hooded again. \"I was waiting for my deputy to finish up next door before we..\"\n\nI heard yelling outside and turned to the door at the same time Tom jumped up off the couch.\n\n\"Seriously Cora, you need to just go home, she never should have called you!\" Merritt was yelling.\n\n\"Fuck off Lonnie, you can't stop me from seeing my husband!\" from a woman's voice. Seconds later, there was a pounding on the door.\n\n\"God damnit,\" Tom hissed, going to the door and jerking it open.\n\nThe woman on the other side was beautiful in a stunning way. Tall, like model tall, with long legs, long willowy, graceful arms. Her blonde hair was beautifully coiffed in a very southern belle style that looked like she was from a magazine cover. Her dress was long, past her knees, in a mint green that set off her skin tone beautifully. I immediately felt like a child who had just come from playing in a pigpen. Awkward, ugly, short, bruised, broken. Her eyes immediately went to me and narrowed, her lips drawing into a straight line. She started to push past Tom, but he blocked her path. \"You aren't welcome here Cora, you need to leave.\"\n\n\"The hell I will! That thing, Tommy, really? That thing is what you are cheating on me with? Did he tell you he is married?\" she demanded, directing the last question at me. \n\nI felt anger welling up and a switch flip inside of me. \"I guess if you knew how to take care of him, he wouldn't be needing to find satisfaction from somewhere else. My guess is those cold, plastic legs of yours don't hold much appeal anymore.\"\n\nTom snorted and tried to hide his smile as the woman screeched in rage and tried to bull past him. He held her at bay easily. \"Let me go Tommy! I will snatch that little troll bald headed!\"\n\n\"She would eat you alive Cora,\" Tom said with a grin at me. \"And stop saying we are married. It's been six years, sign the fucking papers. We stopped being married the moment you opened those legs for Mike Delaney.\"\n\n\"We were drunk, I told you that! I thought he was you!\"\n\n\"We aren't having this out again. Sign the papers. I haven't pressed it, not till now, but I am moving on and I want it done.\"\n\n\"Why Tommy? For her? How old is she? You could be her father! Is she even of age? Is that why you are trying to divorce me? You only like young girls? Little girls? Are you a pedophile, Tommy? Do I need to keep the boys home, protect them from you?\"\n\n\"Try it, Cora, see what happens,\" he snarled angrily. \"She is more than old enough, and no, I couldn't be her father. She's a lot older than she looks. Not that that is any of your business. Go home Cora, or I will have Merrit arrest you for trespassing and threatening an officer of the law.\"\n\n\"You won't dare, would you Lonnie?\" Cora asked, turning to the man on the porch that I couldn't see.\n\n\"I would do whatever Sheriff Last told me to do ma'am. We went to school together Cora, that don't make us friends. What you have been doing to Tom is shitty as hell, we all think so. So yeah, I would arrest you. Probably slap with resisting too. Wanna find out?\"\n\n\"Fuck you Lonnie! And Fuck you too Tommy!\" she wailed tears springing up to her pretty blue eyes. \"And you!\" she cried at me, pointing. \"You are a homewrecking little whore and just you wait until I get my hands on you!\"\n\nI smiled at her. \"I'm free now,\" I said happily.\n\n\"Girl,\" Tom warned, giving me an exasperated look. \"You caint kill my ex wife.\"\n\nI shrugged, still smiling at the woman, who was now second guessing her threat. \"I wouldn't actually kill her,\" I corrected. \"Just show her that I am not someone she wants to fuck with.\"\n\n\"Mm. I know you. You have no idea when to stop, you'd end her sure. Cora, go home. Did you leave the boys home alone again? You know they aren't old enough for that. Do I need to see about your fitness as a parent?\"\n\n\"Oh you just shut up! They are fine! Eleven is plenty old enough!\"\n\n\"Would you like to see if a judge agrees? Go take care of our kids, or I will,\" he said darkly. She finally left and Tom turned to the unseen deputy on the porch. \"I meant what I said. Go take Agnes in. I will be at the station after I get my girlfriend squared away.\"\n\nHe slammed the door and turned to me, his eyes dancing with anger. I wasn't worried, I knew it wasn't directed at me.\n\n\"You never said you were still married,\" I offered, feeling like poking the bear a bit.\n\nHe grunted and went to put his shirt on. I followed him to the bedroom. \"So I guess this means you aren't going to feed me... anything?\" I asked, trying to sound seductive, hoping I didn't sound like an idiot. \n\nHis eyes swiveled to me and his fingers missed his shirt on the floor and he had to snatch at it again before getting hold of it and standing to look down at me. I knew he was trying to read my face. Finally, he sat down on his bed and leaned back on one arm. \"I probably have time for that,\" he said with a shrewd smile. I felt myself grinning as I moved closer, closing the distance. When I got close, he grabbed my arm and shoved me down to the bed, his face a hair from mine. \"But so help me god, if you bite me with those vicious little teeth, it will be the last thing you do.\"\n\nI giggled. I couldn't help it. His eyes narrowed and my giggle turned into a full on laugh. \n\n\"Yeah, I don't think I am going to let you near me now...\" he said, sitting back up and letting me go.\n\nI got up and moved to his lap, straddling him. \"It didn't even occur to me until you said it, but you have to admit, it is a little funny. My teeth are the one things that scares you, yet you would almost be willing to look past it...\"\n\n\"Oh, I understand the humor YOU see in it girl. And I am sure you understand why I am less willing to offer myself up to those little teeth.\"\n\nI smiled up at him and shrugged, grinding my hips in a slow roll. \"I won't bite you... but you would have to teach me how? I mean I mostly know, Dillen had porn, but watching guys do it to each other, I don't think it's the same?\"\n\nHis gaze turned back to considering as he looked down at me. He put his arms around me, lifting me up to kiss me. His eyes found mine again as he let me back down, then he nodded. \"I will teach you, girl. But not yet. Hop up, I will get you some food, then I have to go to the station. After, we can come back here and play all you like.\"\n\n\"You are taking me with you? I thought you were 'squaring me away'?\"\n\n\"I am, now hop up or I'll have to take you again and it will be another two hours before we get anything done.\"\n\n\"Two hours? That doesn't sound so bad...\"\n\n\"Girl,\" he said warningly.\n\nI laughed and got up, then froze. I wasn't supposed to be happy and joking and wanting him... I was here against my will. He had kidnapped me, brought me here to rape me... I was supposed to have kept myself whole for Keane! Keane. So beautiful and sexy. Hot enough to make my mouth water. Besides horny, what else did I feel though? I tried to sort it all in my head, but I shoved it away. It no longer mattered. I wasn't a virgin anymore.\n\nI looked at Tom, who was stomping into his boots. Tall, slender, older man attractive, stoic, commanding. I liked that he was who he was, no bullshit, no second guessing, no wondering where you stood. \n\nBut he had betrayed me. Set Eric on me. Brought him here to rape me. To save me? From the demon? Was Keane bad? Did I need saving? Tom thought I did. Did that matter? He still meant for Eric to rape me. He still meant to do it himself if he had to. My thoughts warred with each other and I was so confused.\n\nTom touched my shoulder lightly. \"You here with me girl?\" he asked softly.\n\n\"Sure,\" I answered, breathless.\n\n\"I know things are a bit confusing right now. I am sorry for not being more forthcoming from the start. We can...\"\n\n\"It doesn't matter,\" I said quickly, not wanting to hear more excuses or apologies. \"Let's go.\"\n\n\"It matters, girl,\" he said taking my arm to stop me. \"It matters. I know how you feel about me and I hate to see you wall it all away and get your back all up. Let yourself be happy. Stop yanking the chair out from under yourself.\"\n\n\"Look, Tom, I have a lot of shit going on. I know it's cut and dry to you, feelings are feelings and it's black and white and all that, but for me it's not so easy. I can't forget as easily as you, no matter how supposedly good your intentions. Lets just go, we can talk about it later. I really am starving,\" I said, after my stomach growled for the tenth time.\n\nHe picked me up and carried me to his car and I didn't argue. I did wish I had grabbed my shoes though. He stopped at the bakery and got me a half dozen croissants before driving me to the station. He carried me in there as well, and I wasn't as comfortable with that, especially when everyone inside gaped at us.\n\nIt was only a woman at the reception desk, the deputy, two more officers and an old woman they had sitting in a chair, but still. I assumed the pinch faced old woman was Agnes. Tom took me to an office in the back labelled 'Sheriff T. Last' and unlocked it. He pushed the door open and set me down, then went back out front. I looked around the dark office, then went to the door to watch.\n\n\"Agnes, did you think I wasn't serious when I told you to stop harassing me and calling Cora every time I took a piss?\" he asked the old woman.\n\n\"Cora is my niece! I am allowed to talk to her and tell her what is going on in my life!\" the woman snapped.\n\n\"Your life, not mine. My life isn't her business or your business. I am filing harassment and stalking charges against you Agnes. Do you know what that means?\"\n\n\"Means you are a chicken shit! Hidin' behind a badge to do your dirty business! She's still your wife!\"\n\n\"Agnes that's bullshit. Brielle is the first girl I have even considered dating since Cora and I split, so I don't know what dirty business you mean. You call her when Joe and Eddie come to cards, you call her when you see me carry in a six pack with my groceries, you call her when it's my weekend with the boys and you see me leave to go somewhere with them. You even called her when Edna Brackenbush came over and asked me to help her clean out her gutters! It has gone on long enough, I have tried to be patient with you and her, but I am done. I found something worth standing up for myself for and I will be damned if I let you crazy females drive her off! I am filing charges. So get yourself a goddamn lawyer. You and her both, because she is signing those fucking papers! Lonnie, get it done. I will call Joel and Ben Monday morning.\"\n\nHe turned, his face red with fury and looked at me in the doorway. His look said he dared me to say anything or correct him and I knew now was not the time. Instead, I went to him and slipped my hand in his, letting him walk me out as far as the door before picking me up. When he got to the car, he turned me and pressed me against the door, then kissed me. I don't know how long he had me there, kissing me with every bit of passion and need in his soul, but the screech of brakes made him pull back.\n\n\"Fuck,\" he whispered. I turned to see Cora jumping out of a car.\n\n\"You arrested my AUNT? And jesus Tommy, really? Making out out here like a teenager? She know you can't get it up without a pill? You told her that part yet?\"\n\nI laughed at her. \"He hasn't had any problems so far,\" I said. \"Must have been the person he was with.\"\n\n\"Girl,\" he warned, his voice low. More loudly, \"Your Aunt is inside. If your here for her, go see her. Where are the boys? And you know you can't park there. I will have Lonnie give you a ticket.\"\n\n\"The boys are fine!\" she snapped, marching inside militantly.\n\nTom pulled out his phone and tapped away a few seconds, then turned back to me and kissed me before putting me in the car. He got in, waited long enough to see Lonnie come out with a ticket book and start writing a ticket for her car parked in a handicap zone.\n\nHe took me back to his place and he sat down and watched me. I sat across from him on the couch and waited for him to say his peace, whatever it was. He stood suddenly and picked me up, carrying me back to his bed. For a moment, I thought he meant to take me again, but he just kicked off his boots and lay next to me, facing me. We lay inches apart staring into each others eyes and not speaking.\n\nWhen I woke, my face was buried in his chest and he was holding me. Evening was coming. I sat up, yawning. He rolled to his back and made a disagreeable noise.\n\n\"I need to go home and get my phone,\" I said, climbing over him to go to the bathroom.\n\n\"I can get it tomorrow,\" he grumbled, helping me over him.\n\n\"I can go back now, right? It's all over, I'm not... 'innocent' anymore. He'll leave me alone. Right?\" I asked through the bathroom door. \n\nHe waited for me to come out before answering. \"I don't see why he wouldn't, but it seems prudent to not take a chance.\"\n\n\"I need my phone and I want my shoes. And my things. And I am hungry and I have food. Come on. You can stay there with me, he won't bother me now. You said so yourself, all he wanted was my innocence. Right?\"\n\nHe made a noise that sounded grumpy.\n\n\"Ugh. Come on! If I walk I will probably cut my foot open, get lost and Don will find me and take me back to his basement.\"\n\nHe snorted. \n\n\"Fine, at least let me borrow your phone so I can call an UBER.\"\n\nHe gave me a scowl.\n\n\"Am I still kidnapped then? You don't trust me? I have to stay here and do what you say and I will never be able to live my own life again? Only the one you allow?\"\n\nHe stood up and glared down at me, then motioned me out of the room while he pulled his boots on. He carried me out to the car and opened the door, then hovered over me a moment, considering. \n\n\"I'm feeding you my cock when we get there,\" he said, his voice low and full of hunger.\n\nI grinned as he went around and got in. I couldn't help it. I was excited to get home and have him teach me. \n\nThe door was still unlocked and it made me pause and look around as Tom came in behind me, also looking around. It was quiet and dark. He turned the light on and walked the house before motioning me to the kitchen. \n\nI fixed myself a bowl of cereal as he sat down in the other chair. \"Thought you said you had food here,\" he groused, scowling at my bowl of cereal.\n\n\"I do!\" I said, holding up the bowl. \"There's also some ravioli from a can in there and some ramen.\"\n\n\"What happened to homemade lasagna?\"\n\n\"I believe she only cooks for me,\" Keane said with a smile from the door of the kitchen.\n\nI sat up, setting my bowl down hard as Tom stood.\n\n\"Hello luv. Seems you've had an eventful day.\" I looked at him, my eyes wide. God he was hot. Those big blue eyes seemed to nail my soul to the wall. Was he disappointed? Upset? My heart pounded, I had to find a way to make it up to him! Those lips... so kissable and full, meant just for me. His hands, so big and strong, I could feel them whispering over my skin. I ached for him, I needed him. \"D'you miss me Mo Sh\u00edorghr\u00e1?\" he asked, coming in the room.\n\nTom edged closer and took hold of my arms, trying to pull me out of the chair.\n\n\"I don't think I'd be touchin' her if I were you,\" Keane said, his eyes going to Tom. It wasn't a friendly look.\n\n\"It's over,\" Tom said shakily. \"It's done. She's not a virgin anymore, she is of no use to you!\"\n\n\"You don't think so?\" Keane asked, cocking his head. \"Little luv, did your google ever give you any answers?\" he asked, turning to me, giving me that beautiful smile. \n\nIt took my breath away completely. \"No,\" I whispered.\n\n\"Would you like to know, then?\"\n\n\"Yes! Please...\"\n\n\"Mo Sh\u00edorghr\u00e1. My eternal love. Do you think I would toss her away just like that then? You thought I only wanted her to bring Celia back? That is what you thought, isn't it? Well you would be wrong. It's her I am wantin'.\"\n\n\"She doesn't want you! And I know the rules! You can't take her unless she agrees!\" Tom said, an edge of fear in his voice.\n\n\"Do you think she won't be agreein' then?\" he asked, his shining smile returning. He was close enough now that he could reach out and touch my face and he did. He looked down at me with that sexy smile, his perfect face, a century of need and want pouring into me. I moaned under the weight of it.\n\n\"Don't listen to him! It's not him, it's his power! You don't love him, you don't even like him, he is just sex incarnate. He means nothing else to you, nothing at all! Look at me!\" Tom cried, tugging harder on my arm.\n\n\"I don't think she's listening to you,\" Keane smirked. He lifted my face and leaned close. \"I'm ready for that kiss Mo Sh\u00edorghr\u00e1, tonight is the night, the moon is hidden completely. I am ready to take you for my own.\"\n\n\"Brielle! Stop, listen to me!\" Tom cried desperately as I leaned into Keane to kiss his perfect lips. \"He doesn't love you, he is only trying to get a foothold into our world! He wants to escape his prison of this small neighborhood!\"\n\n\"If that were so I would have taken her that first night. You've no idea what I want from this girl, you only know what you want for yourself.\"\n\n\"I know she doesn't love you, she loves me! Release you magic on her and let her make a true choice!\"\n\nKeane chuckled. \"You are so confident she would choose you? A few short years with a shell of a man rather than an eternity with me? Mo Sh\u00edorghr\u00e1, tell him how foolish he is.\"\n\n\"Keane,\" I breathed, reaching up to pull him closer, to close the distance between our lips.\n\n\"GIRL!\" Tom snapped and it made me stop and turn to him, blinking. The command in his voice, the control. I blinked up at him. \"Tell him no. Step away from him, come here to me, right now and tell him no.\"\n\nI felt confusion as another wave of pure want rolled over me. Keane was right here, touching me. Waiting for me to kiss him. I looked up at Keane. \"Let me go,\" I said softly. He immediately released me. I backed away slowly.\n\n\"Mo Sh\u00edorghr\u00e1, do not listen to him! He is a mortal and he is being selfish. He is only thinking of himself. Ask him. Ask him if I can hurt anyone or leave this place by taking you for my wife. Ask him!\"\n\n\"It... it doesn't matter,\" I said, my head still foggy. I looked up at Tom. \n\n\"Tell him no,\" Tom commanded gently.\n\n\"No,\" I repeated, turning to Keane. \"No! I don't want to marry you. I don't want to kiss you or have sex with you or anything!\"\n\nKeane drew up, standing tall and angry. \"Look at me Mo Sh\u00edorghr\u00e1. I can please you like no other. I can give you an eternity of bliss. No one else can offer you that, no one. I am all you've ever wanted and more. Come to me little luv.\"\n\nI hesitated, looking up at the perfect man. My true dream man.",
        "\"Lille Jagerfly,\" Tom said gently. I turned to him. The man I did not know I wanted. Keane may look like the man I had imagined, but it was Tom who was the man I truly wanted. The one my soul needed. \n\nI went to Tom, went to his arms, climbed up on the stool and kissed him.\n\nNothing.\n\nI pulled back and looked around and the room was empty. I turned and looked up at Tom and he was looking around warily as well.\n\n\"Did he leave?\" I asked. \"Is it over?\"\n\n\"I don't know. Get your things, we aren't staying here. Grab a change of clothes, we'll come back during the day tomorrow for the rest.\"\n\nTom hustled me out of there to his car. \n\nAs he put me in the front seat I heard a whisper. \n\n\"It's not yet over, Mo Sh\u00edorghr\u00e1.\""
    ],
    "authorname": "gabthewriter",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/brielle"
}