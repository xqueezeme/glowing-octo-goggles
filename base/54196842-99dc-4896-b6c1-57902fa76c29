{
    "title": "Emily Untethered Ch. 05",
    "pages": [
        "Untethered\n\nChapter 5\n\n\"Dakota will be here in about an hour,\" Emily said, peering into her dad's room. He looked up from the book he was reading and smiled.\n\n\"Good to hear,\" he replied.\n\nShe briefly considered joining him, but knew that it would probably lead to more compromising and risqu\u00e9 interactions between the two of them.\n\n\"I'm gonna be in my room,\" she said, fidgeting with the door handle.\n\nHer dad nodded and made a show of reading his book again. She saw the telltale bulge in his pants.\n\nSighing deeply, she turned and forced herself to go to her own room.\n\n\"That's your own father,\" she told herself again and again.\n\nShe checked the clock at least thirty times before her phone buzzed. Dakota was calling her. This couldn't be good.\n\n\"Hello?\" Emily asked, answering the call.\n\n\"You're going to hate me,\" Dakota said.\n\n\"What did you do?\" Emily asked, sighing.\n\n\"I'm not going to be able to come over. Dad practically begged me to spend some time with him this evening. He's being all sweet and I'm not gonna be able to make it. Will you be alright? Maybe I can come over during the week.\"\n\nEmily smirked, realistically unsure of whether or not she and her dad would be okay until they saw Dakota again.\n\n\"It's okay. I'm sure we'll be fine. We'll both have work and school to distract us,\" Emily said, trying to sound more sure than she actually was.\n\n\"I'm really sorry,\" Dakota said.\n\n\"It's okay,\" Emily replied. \"I promise.\"\n\nAfter finishing the call, she stood and went to find her dad and let him know. Walking up the stairs, she heard his shower running. Smiling to herself, she quickly tiptoed up the stairs. She briefly wondered if she should really just walk in on him in the shower, but the thought was lost in a haze of the raging hormones swirling around her brain. She was incredibly horny and clearly not thinking straight.\n\n\"Yeah, that's it.\"  she thought.\n\nOpening the door to his room, she peered in and confirmed that he was indeed in his bathroom. Moving quickly, she crossed his room and paused at his door. He was whistling. She giggled as she heard him and covered her mouth.\n\nShe reached up and knocked, opening the door and poking her head in.\n\n\"Daddy!\" she yelled, causing him to jump in fright. There was a loud thump as he bashed into something.\n\n\"Goddamnit, Emily!\" he yelled back angrily.\n\nShe giggled and stepped into the bathroom. \"I just wanted to let you know that Dakota isn't going to be able to come today. Her dad wants to spend time with her.\"\n\nShe playfully tiptoed forward and peered into the shower. He looked up and saw her peering around the curtain.\n\n\"Are you trying to give me a heart attack?\" he asked.\n\nShe giggled again and shrugged. \"Need help washing anything?\"\n\nHe sighed and looked at her. \"No, Emily.\"\n\nShe pouted playfully and pulled her head back. Moving back and sitting on the counter, she waited patiently for him to finish. As he did so, he reached out for a towel and pulled it in.\n\n\"Boo,\" she said, scowling.\n\n\"Did I ruin your fun?\" he asked, stepping out. As he placed one foot down, she hopped off the counter and snatched his towel from his hands.\n\n\"Emily,\" he said, coming forwards. \"Give me my towel please.\"\n\nShe laughed and tucked it behind her, sliding back up onto the counter.\n\n\"Why are you doing this to me?\" he asked. \"You know being in here isn't appropriate. You're my daughter.\"\n\nShe smiled but didn't say anything. He came forwards, looking a little irritated. She didn't relent though and spread her legs. She knew he could see her panties and the thought of this illicitness caused her to grow a little damp. He moved forward, reaching behind her and sliding between her legs.\n\nShe wrapped both of them around his waist, but continued to keep the towel securely behind her back. Glancing down, she saw his cock swelling slightly and giggled.\n\n\"Emily,\" he said sternly. She looked up surprised and made an \"ooo,\" face at him. He chuckled and shook his head.\n\n\"Why, Emily? Why do you do this to me?\" he asked, reaching down and yanking the towel free.\n\n\"Cuz, I'm fucking horny, and I love the way men respond to me,\" she said honestly, sliding off the counter and tapping him lightly on the rear as she slid past.\n\n\"For the last time, I'm your father Emily. This isn't right,\" he said. \n\n\"And yet, you're still hard,\" she said, giggling as she left the room. She heard him sigh deeply. She figured that she'd tormented him enough for the time being and headed to her room to do a little studying. A few hours later, she left the room, bored out of her mind and still very horny. She kept fighting the urge to tear off her clothes and throw herself at him, but the desire was definitely there. She kept telling herself that he was her father, over and over again, but the more she said it, the more it didn't have the same impact. She sighed and shook her head. \n\n\"You can't do this,\" she told herself. Feeling better, she headed downstairs and went to the living room. Flipping on the T.V., she plopped down on the couch for a few hours. After a light dinner, she returned to the living room and flipped the T.V. over to a movie. Her dad finally reappeared and sat down on the couch beside her. She smiled over at him and held up the remote.\n\nShaking his head, he smiled. \"I'm good with this.\" \n\nShe returned his smile and tried to focus on the movie. Deviant thoughts kept worming their way into her brain and she couldn't focus. She kept thinking about being railed back in California, having a nice hard cock pounding her senseless, or having one in her throat pumping her full of yummy warm cum. She wriggled on the seat, glancing over at him. She sighed in frustration at herself and thought briefly about leaving, but knew that would look too odd. She glanced over for the thirtieth time and saw him adjust his crotch a little. He looked erect from where she was sitting.\n\nShe felt her pussy get wetter than it already was. Every second that passed, felt like an hour as she fought to keep from launching herself at him. She looked again and saw him quickly look away. She smirked to herself and began to feel a little better, knowing that he was feeling the urge as well.\n\nThe evening continued like that for her for the entirety of the movie. Eventually it ended and she quickly stood, but saw her father doing the same.\n\n\"Going to bed?\" he asked.\n\nShe nodded. \"Pretty tired,\" she confirmed. She was practically squirming just standing there.\n\nThey headed upstairs, bumping shoulders as they did so. Both muttered sorry simultaneously and quickly headed to their respective rooms.\n\nEmily quickly lay in bed and tried to think about anything else. She closed her eyes and tried to sleep, but her dreams were filled with sex. She groaned in frustration and tried to fight the urge as she stared at the ceiling during one of her many wakeful hours. Finally, she could stand it no longer and slapped her hands down on the bed.\n\nShe stood and went to the bathroom. Turning on the water, she washed her face and looked at herself in the mirror. She turned what she was about to do over and over in her head. She fought for several minutes to think of a legitimate reason for her to not go through with it. Sighing and steeling her nerves, she turned off the light and left the room. Quietly stepping into the hallways, she felt like an elephant pounding on the floor as she stalked quietly towards her father's room.\n\nOpening the door, she slipped in and saw him tossing around in bed, unable to sleep himself. He sat up and clicked on the light, seeing her standing there in his room. He didn't need to ask, he knew exactly why she'd come to his room. \n\nClouds swirled around in her head and she suddenly sat up in bed. She looked around, seeing that she was still in her own room. She must have been dreaming the entire time. She felt like she hadn't gotten any rest at all, and was only more sexually frustrated than the night before. She sighed in frustration and went to get ready for school. After kissing her father platonically good morning, she made a healthy breakfast for the two of them and headed to school. Monday seemed to go okay, at least until she got home from school. Again, she couldn't get the naughty images from filling her head and she pictured him slamming her up against the wall and taking her.\n\nShe sighed and shook the thoughts away again, hearing his keys in the lock. He came in and she stood, heading for a hug.\n\n\"Hi, Daddy,\" she said, smiling sweetly. \"How was your day?\"\n\n\"Long and hard,\" he said.\n\nShe snickered at the obvious joke, causing him to roll his eyes and sigh.\n\n\"Seriously?\" he asked.\n\nShe shrugged, grinning. \"You said it.\" Looking up, she was suddenly very aware at how close they were. He's released her from the hug, but she didn't move, and was gently pushing into him.\n\nSighing, she fell back a little and turned, heading to her bedroom without another word.\n\nThat evening, she came downstairs and made a healthy dinner. Calling him down, she served him a plate and they ate, their silence occasionally punctuated by idle chatter.\n\nShe stood then, letting him do the washing up, and headed upstairs to her room. The sexual tension was palpable throughout dinner and the rest of the evening. She emerged from her room near bedtime and crept downstairs to see what he'd been up to. Peering into the living room, she saw him sitting on the couch in his boxers, watching TV.\n\nShe came in, feeling the throb of excitement throughout her body, and came around him. She intended to sit next to him and talk, but something made her walk up and straddle him in their normal hugging position. She was wearing a tight shirt and panties, and she felt flushed.\n\nHe looked up as she came around the edge of the couch and straddled his legs. He smiled, seeing her reaching down to get a hug and pulled her to him.\n\nEmily sighed happily as she sank down on him, feeling his chest slowly rising and falling, lifting her up and down as she lowered her head to his shoulder.\n\n\"You okay?\" he asked quietly.\n\nShe nodded. \"Just getting a hug from my Daddy before I head to bed.\"\n\nHe chuckled and inhaled deeply. His strong hands began to rub up and down her back, pressing fingers into her muscles. She growled in pleasure and then spun around on his lap, letting him have better access to her back.\n\nHe smiled as she glanced back expectantly and waited. His strong fingers began to prod and massage at her back muscles as she silently sat on him. She leaned forwards, placing her hands on his knees and inadvertently sliding her buttocks back against him. She felt his growing tumescence and shifted. She slyly lifted her buttocks as he pressed his fingers into her shoulders and felt the head of his cock slid across her butt. She glanced down and lifted a little more so that it was beneath her, and then sat back down on him.\n\nHe groaned beneath her as her pussy forced him downwards, sliding pleasurably across it and eliciting a low moan of approval from her.\n\nSighing in frustration, he patted her on the back and started to lift her up, but she sat up and then leaned back into him, placing both feet on his knees.\n\nShe looked down and saw that his cock had worked its way free from the confines of his boxers and was again pointing upwards, this time in plain view and gently nestled against her panty clad pussy.\n\nSensing how dangerous the situation was, she stood and began to slide off of him. His cock slide down her pussy as she moved forwards. \n\n\"God,\" he moaned, gripping her hips for a moment. She paused, feeling him gently pulling at her and fought against the urge to pull her panties aside and start fucking him.\n\nShe stood quickly and then turned to face him.\n\nHe reached for her and pulled her back to straddle him. The look in his eyes was definitely conflicted, and she knew she had warring feelings herself. She lifted her left leg over his right knee and then moved forwards as he pushed his cock back into his boxers and tucked it under his waist band.\n\nShe smiled and leaned into him, her body molding to his as they pressed together. She keenly felt his erection pressing against her panties and lower stomach, and smiled as she looked at him.\n\nHe returned her smile and sat back into the couch, closing his eyes.\n\n\"Do you like the way my panties feel against your cock, Daddy?\" she asked, causing him to open his eyes.\n\nHe smirked at her and glanced down, as if the answer was obvious.\n\n\"Why don't you just take what you want?\" she asked, her arms moving around his neck.\n\nHe groaned and pulled at her hips, causing her hips to slide forwards and her pussy to slide dangerously against his shaft. She moaned in pleasure and looked expectantly at him.\n\nHe released her hips though, and simply patted her on the back.\n\nShe sat back and then looked down between them. His cock was poking its head out of his waist band, looking terrifyingly erect. Giggling, she stood and headed for the stairs.\n\n\"Good night, you dirty old man,\" she said, turning and looking at him seductively. \"If you hear noises from my room, don't worry. It's just me.\" She took a single step and turned back to him again. \"I think you know where I'll be if you need anything.\"\n\n\"Good night, Emily,\" he called.\n\n\"Night, Daddy,\" she said, smiling.\n\nQuickly shutting her door, she dove into bed and began to furiously masturbate. She couldn't believe how incredibly turned on she was. A few minutes of dedicated rubbing later, she brought herself to an orgasm, but wasn't surprised when she felt how horny she still was.\n\nSighing, she forced herself to go to sleep. Tossing for most of the night, she barely managed to get enough sleep and awoke, still just as horny as she'd been the night before. She heard the distant sound of her father's shower turning on and sighed. A deviously naughty idea formed in her mind and she quickly stood and stripped. Heading directly for his bathroom, she quietly entered as he hummed. He didn't notice her entrance as he was running his head under the water.\n\nQuietly opening the shower, she gazed at him for a second, staring longer than she should have at his cock, and quietly stepped in. Closing the door behind her, she caused him to jump in momentary surprise as she reached up and touched him. Spinning around, he looked down at her nakedness and shook his head.\n\n\"What are you doing?\" he asked.\n\n\"Helping you shower,\" she said, as if that was enough explanation.\n\n\"I've been doing it on my own for a few years now,\" he said, raising an eyebrow. She looked up at him innocently and shrugged.\n\n\"I wanted to use your shower this morning,\" she explained. \"Let me help with that,\" she said, grabbing the bottle of soap from his hands.\n\nShe poured some into her palm and rubbed her hands together for a few moments before spinning him back around and rubbing him down. She started at his shoulders, gently massaging and rubbing, and then moved down his back. She moved to his buttocks and thighs, surprising him back running her hands between his legs and across his asshole for a second, her fingers brushing his balls as she soaped him up. She knelt in the shower then and began to soap up his thighs and calves. Looking upwards, she couldn't help but see the end of his cock bouncing between his legs.\n\n\"Turn,\" she said.\n\nHe obeyed, seemingly unable to comprehend what she was doing and obeying out of confusion or lack of brain control.\n\nShe didn't look up, but sensed his erection dangerously close. Her hands worked upwards from his ankles to his knees and then calves. She skipped his crotch, figuring that he probably might freak out if she actually started to soap up his cock. She stood then, the tip of his steadily erecting cock brushing down her breast and across her nipple as she moved upwards.\n\nStanding, she began to wash his stomach and then shoulders while he stared. She glanced down at herself and saw her nipples erect, the new nipple rings in them dancing with the slightest movement.\n\n\"Okay,\" she muttered, trying to appear disinterested. \"Rinse.\"\n\nHe nodded dumbly and backed up into the water stream.\n\n\"Just a second,\" she said, stepping out of the shower. She quickly disappeared and then reappeared holding her own soap bottle from her bathroom and set it on the shelf in his shower.\n\nShe stepped in and took his place in the shower stream as he started to get out.\n\n\"You aren't going to return the favor?\" she asked. \"That's kinda rude.\"\n\nHe turned back, clearly conflicted, and sighed. \"I guess it won't hurt.\"\n\nShe smiled. \"Well, I don't know how you wash yourself, but I hope it doesn't hurt when you do.\"\n\nHe chuckled and took her soap in his hands, pouring some and lathering them up. He spun her around and moved in much the same way that she had. His hands massaged gently, causing her to lean forwards and let the water course over her. He reached up and got more soap, as the water had washed all of what he had away, and forced her to stand up.\n\n\"It's not time to rinse,\" he admonished.\n\nShe smiled. \"Sorry, Daddy,\" she whispered. He moved to her back and then did her legs. She glanced back at him expectantly. \"You've got to get me clean,\" she said.\n\nHe smirked and nodded at the soap. \"You can wash your own rear,\" he said.\n\nShe pouted for a second, but then did just that. He moved down her legs, and then turned her around. She glanced down at him as he fought to maintain a lowered gaze and not stare at her pussy.\n\nHis hands worked upwards from her ankles to her thighs, again skipping her pussy. He continued kneeling, his hands reaching up and soaping her stomach. Finally, he looked up and she swayed forwards, pushing her crotch dangerously close to him.\n\nHe couldn't help himself, though, and looked directly at her. She immediately felt a swell of excitement and fought the urge to reach down and pull his head to her pussy. He sighed and closed his eyes, standing and shaking his head at her.\n\n\"You're going to give me a coronary,\" he said. \"But goddamn, what a way to go!\"\n\nShe giggled and then turned to him. \"You forgot your favorite part,\" she said, looking up at him and jiggling her breasts back and forth.\n\nHe sighed but soaped his hands up again. His fingers tentatively started at the underside of her globes and she sighed leaning back against the wall as he kneaded them into her flesh. He moved around the outside of her breasts and then up to her shoulders, methodically massaging her.\n\nShe sighed and reached up, grabbing both of his hands and placing them directly onto her breasts.\n\n\"Wash all of me, damn it,\" she ordered.\n\nHe seemed frozen, unsure of what to do. Slowly, he began to squeeze and massage her breasts, even gently squeezing her nipples and lifting the rings up.\n\nShe glanced down after a minute of him groping her and felt a familiar prodding against her pussy. She smiled and looked back up at him. She reached down and briefly adjusted him so that he was pressed between the two of them. Squeezing him, she slid the two of them into the water stream to wash away the soap. \n\nHe spun as she began to slide out of his arms then, and turned off the water. Turning back around, he opened the door but she stopped him by wrapping him in another hug. Lifting her face upwards, she looked at him pointedly and then pulled his face down in a tender kiss. Her lips pressed into his as his cock pushed into her stomach again.\n\nShe snickered and then finally opened the door. Reaching back playfully, she grabbed him by his cock, her fingers wrapping around it and pulling him out.\n\nHe groaned and stumbled forwards, as she pulled him from the shower and reached for a towel. After drying him off, she handed the towel to him. She smiled quietly as she realized that he was paying particular attention to her breasts.",
        "Finally, satisfied that they were both dry, she turned and headed for the door.\n\n\"Daddy?\" she asked, turning and looking back at him.\n\n\"Yes, pumpkin?\" he asked.\n\n\"I really liked showering with you. I think I might want to do it again tomorrow,\" she said with a smile.\n\nHe shook his head. \"You know that's not a good idea.\"\n\n\"You're damn right it's not,\" she said, grinning playfully. She turned and walked naked back to her room.\n\nTuesday, Wednesday, Thursday, and Friday all seemed to follow the same schedule. She'd wake up, go and find him in the shower and join him. They'd wash and rinse each other, and by the end of the week it seemed like a normal thing. They still both got excited and turned on, but they kept it as platonic as possible. They'd started to talk about what was happening that particular day, or stuff they had to do, what he wanted for dinner and the like. She'd go make a healthy breakfast for the two of them and they'd head off to work and school. She'd get home, study, and then start on supper. After he cleaned up, he'd do some house work or stay in his office, and Emily would study again. \n\nAt bedtime, she'd come back downstairs and straddle him in their customary hug. The first few days were normal enough, though his hands always seemed to find her hips, and his cock would inevitably grow erect. She'd hug him until she'd gotten them both suitably aroused and then headed upstairs to masturbate. Friday got a little more heated than she'd intended, though. As she straddled him and began to lean forwards to hug him, he'd slipped out of his boxers, which wasn't odd, and slid behind her. She reached back to readjust him and slide his cock back into place, but kept it outside his boxers that time. Something in her made her want to push the boundaries a little more.\n\nHe groaned and looked up at her, his hands gently pulling at her hips. Her soft pussy was hugging around the iron hard flesh of his cock, his shaft nestled lovingly against it.\n\nShe groaned along with him and gyrated slowly against him as he pulled. \"God, we've really gotta stop doing this,\" he groaned.\n\nShe smirked and leaned back, the movement sliding his erection out even more. \"I'll stop when you make me,\" she said, smiling deviously.\n\nHe raised an eyebrow and then began to tickle her. She jumped a second and swatted his hands away. Settling back down in his lap, she smirked and leaned forwards.\n\n\"I love you,\" she said, kissing him on the lips. His eyes grew wide and he pulled her back a second. \n\n\"Emily,\" he said, starting to lift. She hadn't noticed that when she'd sat back down, his cock had pressed directly against her pussy, pushing her panties aside and nestling him against her soaked pussy.\n\nShe looked down and then back up, smiling deviously at him. His cock was still between them and wasn't inside her, but they were definitely not hugging platonically anymore. His erection was nestled snugly against her bare pussy lips, the tip of his cock in her sparse pubic hair.\n\nHe shook his head and pushed her off, almost as if he realized what they'd been doing all week.\n\n\"What the hell am I doing?\" he asked. \"I shouldn't have allowed this to happen at all.\"\n\nHe stood and brushed her hands away as she tried to stop him.\n\n\"Daddy, stop,\" she pleaded.\n\nHe shook his head. \"I can't do this to you, Emily,\"\n\nShe sat back down as he disappeared upstairs. Sighing, she sat quietly for a few minutes before heading up to her room and falling into bed, frustration and anger welling up inside. She looked at the clock several times over the next hour, silently willing it to move faster. It didn't though, and she lay there in irritated silence for the next few hours. Finally, the sun began to shine through her window and she rose in silence. She crept downstairs and had breakfast, and then went back up and stayed in her room for awhile. Around 10, she grew tired of waiting and grabbed her phone and fired a text off to Dakota. \n\n\"Please tell me you can come over today. We're both getting very close to crossing a line that shouldn't be crossed,\" she sent.\n\nA few minutes later, Emily's phone dinged. She hurriedly checked it, suddenly realizing that she was more desperate and nervous to see her friend than she'd thought.\n\n\"Maybe I should just stay away,\" Dakota sent. \"God knows what you two will do to me when I do come over.\"\n\n\"God knows what we'll do to each other if you don't get over here,\" Emily replied. \"Please come over.\"\n\nDakota sent her a smiley face and an \"OMW\" as well.\n\nEmily smiled and finally felt safe enough to venture from her room, knowing that Dakota would be coming over. She tiptoed through the house, looking for her dad, and found him in the office.\n\n\"Hi Daddy,\" she said, opening the door. She saw him look up and gaze at her form. Swearing quietly to herself, she realized she was still in just panties and a bra. \"Sorry,\" she said. \"I honestly forgot I was in my skivvies.\"\n\n\"Mmmhmm,\" he muttered, tearing his eyes away and looking back down at the computer screen.\n\n\"Looking at my dirty pictures?\" she asked, smiling playfully.\n\nHe sighed. \"No, Emily.\"\n\nShe smirked and came over to him. \"I'm just playing, lighten up. I just wanted to let you know that Dakota is coming over to visit. She's planning on helping us however she can.\"\n\nHe smiled and then caught himself. \"I'm fine, sweetheart. I don't need her to do anything for me.\"\n\nEmily leveled her eyes at him, raising her eyebrow. Coming around the desk, she pushed him back as his eyes went wide and straddled his knees, her legs wide as she sat down on him. His eyes immediately went to her cleavage before he squinted them shut. \n\n\"Honey, I'm fine unless you do things like this,\" he corrected.\n\n\"Daddy, you aren't fine. You need a release. I think you know what's going to happen if you don't get one. You either need to start jerking off on a regular basis, or you need to find a girlfriend. Until then, Dakota is happy to help.\" Emily lifted his chin with a single finger and looked at him pointedly.\n\nHe sighed and shook his head. \"I don't think...\"\n\n\"John Davis!\" she said loudly, slightly irritated with him. \"A hot nineteen year old girl, a redhead I might add, wants to come over and suck your dick! You're telling me you don't want her to?\"\n\nHe sighed and tried to shift her off of his lap. \"I have something called willpower, young lady. I don't need to try and get sexual favors from my daughter's friends.\"\n\n\"That's not what I asked,\" she said, leaning in closer and placing her cleavage close to his face. He had no choice but to look or close his eyes. \"I asked if...\"\n\n\"Of course I'd like to!\" he said loudly. \"That doesn't mean I should!\"\n\nEmily smirked and sat back a little. \"You know I could have you right here and right now if I wanted. There's nothing you could do to stop me.\"\n\n\"Don't test me, Emily,\" he said, staring hard at her.\n\n\"Daddy,\" she said, standing and then sitting back on his desk in front of him, \"all I'm saying is that you need to take advantage of the opportunities that are being afforded to you.\"\n\nHe shook his head. \"I told you before, you don't need to worry about my sex life.\"\n\n\"Daddy, don't you get it?\" she asked. \"I'm having the same thoughts that you are. I had so many dirty dreams last night that I could barely sleep. If we keep denying ourselves a release, we're going to do something that we might regret with each other.\"\n\nHe closed his eyes, hearing it out loud and shook his head. \"I would never, ever do that to you, Emily.\"\n\nShe bit her lip and nodded. \"I know you'd never hurt me, Daddy. I just don't know that I've ever wanted something so much and been denied it before.\"\n\nSaying it out loud actually seemed to help and she immediately began to feel better. She stood without saying anything else and walked to the door. Stopping there, she opened it and turned back to look at him.\n\n\"Just think about it,\" she said. \"Dakota wants this just as much as I want her to help you. She said she finds you sexy, for an older guy.\"\n\nHe sighed again and shook his head. \"Thank you, Emily.\"\n\nShe smiled and went to the bathroom. As she stepped in, she turned the cold water way down and relished in the hot water as it scalded her skin. The tingling burn felt like needed punishment as she began to groom herself. She shaved her legs and then around her sex and armpits.\n\nThe hot water felt incredible, almost necessary. She couldn't help but wonder why she was doing this to her father. He was right, most of the time. She shouldn't be worried about his sex life. He was a grown man and was more than capable of handling things himself. When she was going over things that happened in her room, away from him, she was clearheaded. The moment she got around him, things seemed to change. She couldn't help herself when she started to torment him. Even when it was happening, in her mind she was asking herself why she was doing such things.\n\nDakota was a godsend, she knew. The thought of what might have happened between them had she not been around sent a shiver down her body. She closed her eyes and leaned back, letting the hot stream of water pulse against her pussy. She moaned softly and realized the thought of something illicit happening between her and her father was turning her on. She immediately felt shame, but couldn't stop herself as she began to rub her clit. The doorbell rang then, and she swore quietly. She heard her dad's footsteps pounding down the stairs and quickly started to get out of the shower.\n\nQuickly drying herself, she wrapped the towel around her body and called down that she'd be right there.\n\nShe quickly went to get dressed and pulled on a long shirt. She looked down into the drawer that held her panties and bras and considered which to wear. Something stopped her though, and she smiled quietly as she slid the drawer closed.\n\nPadding quietly downstairs, she smiled when she saw Dakota and her dad talking quietly in the den.\n\n\"Hey stranger,\" her dad said, smiling and turning as she approached. She smiled sweetly and went to hug her friend.\n\n\"Thanks for coming over,\" Emily said, smiling and heading over to sit next to her. Her dad stood then and smiled.\n\n\"I'll leave you two alone,\" he said.\n\n\"You don't have to leave,\" Dakota said, smiling at him. He waved a hand dismissively though, and muttered something about having work to do.\n\nTurning and watching as he disappeared up the stairs, Emily sighed and turned back around to Dakota. \n\n\"How are you?\" she asked, looking at the redhead.\n\n\"I'm great,\" Dakota answered, smiling. \"You two look pretty wound-up though. Rough night?\"\n\n\"Rough week,\" Emily said. They dissolved into conversation, Emily doing most of the talking. She told her about absolutely everything that had happened the last week and the last couple of nights. She described the sexual tension and how she couldn't stop herself from pushing her father's buttons.\n\nDakota listened quietly, nodding and speaking hesitantly when she could. Finally, Emily fell silent and looked at her, a little sad.\n\n\"You don't have to feel like a freak, Em,\" Dakota said. \"I've done a little research. More than a few girls have fantasies about their fathers, it turns out. It's actually not that uncommon.\"\n\nEmily's face scrunched up in doubt.\n\n\"I mean it,\" Dakota said. \"I mean, it's not everyone, but more than a few do. I'd say that it's only normal for you two, given your current circumstances.\"\n\n\"You've got no idea how difficult it's been not to just go in there and jump on him,\" she admitted, sighing.\n\nDakota giggled. \"So, would you like to go upstairs and fuck?\" she asked, leaning over and running a finger along Emily's breast.\n\nShe groaned and nodded, but stopped her. \"I think you might need to take care of Daddy first,\" she said. \"We're just going to make a lot of noise and get him even more worked up.\"\n\nDakota grinned. \"I'm not just stopping at a blowjob, though.\"\n\nEmily raised an eyebrow. \"You really want Daddy to be your first?\"\n\nDakota grinned and chewed at her bottom lip, nodding after sitting quietly for a few seconds. \"I really love the size of his dick, and I love how he reacts to me. It's such a turn-on.\"\n\nEmily was quiet for a few seconds, thinking. Eventually, she smiled widely at Dakota. \"I'm glad!\" she said, grinning widely. \"You might need to seduce him though.\"\n\nDakota nodded. \"What do you think about teasing him for most of the day, and then I can fuck him tonight, and then I'll take care of you before I leave for home.\"\n\nEmily smiled. \"You're such a little tramp,\" she said, grinning and leaning forwards for a kiss.\n\nThe redhead's warm lips pressed into Emily's and both girls moaned softly. Smiling, they broke the embrace and sat back.\n\nDakota looked around in thought for a second, and then looked at the backyard. \"We could go lay out naked at the pool.\"\n\nEmily smiled. \"That sounds great!\" She stood and led the redhead to the back door. Exiting, she walked over to the lounge chair and stripped off the long shirt, revealing to her friend that she'd been nude underneath.\n\nDakota snickered as she removed her own clothes. \"Now who's the tramp?\"\n\nThe blonde smiled and shrugged as the two got comfortable on the loungers.\n\nDakota turned and looked at Emily then, a smile crossing her face. \"I think we should spend the rest of the day nude, even around your dad.\"\n\nEmily grinned, nodding in agreement. \"That's a great idea.\"\n\n\"Also, maybe we can talk about California a little,\" she said.\n\nEmily looked over at her, confused. \"Why?\"\n\nDakota smirked. \"What started all this?\"\n\nShe nodded, understanding. \"My stories... right.\"\n\nDakota nodded. \"Precisely. I'll get you to tell us one of your juicy sex stories from back in California, and you get to turn your dad on. Then I'll ask him if he will take me upstairs.\"\n\nEmily grinned. \"When you get done, bring that sexy little ass back to me. No falling asleep in my dad's bed!\"\n\nDakota giggled and turned back over.\n\nEmily stood for a second and walked over to the back door. Retrieving two pairs of sunglasses and the sunscreen, she walked back over and handed a pair to Dakota before sitting back down.\n\n*****\n\nJohn\n\nHe knew something had changed in him, and he wasn't sure that it was for the better. All of his dreams of late had been about Dakota, or more disturbingly, Emily. He'd obviously enjoyed having the young redhead suck him off, but he'd felt very guilty about it. Sure, he'd told Emily otherwise, but knew he shouldn't worry her with his problems and regrets. Afterwards, it seemed like a switch had been flipped in his head. Part of him knew that it was wrong, but another, much larger part wanted to have the redhead again.\n\nHis daughter certainly wasn't helping things, that was for sure. She was gorgeous enough, he was secure enough to admit, but the way she was always prancing around in her underwear, and how she had taken to hugging him now, were all serving to torment him and turn him on even more. The little tease even said she liked how men responded to her. Well, he was a man, and he was certainly responding to her.\n\nThe reactions between them had gotten so much more inappropriate and exciting lately, not to mention how she'd taken to showering with him. He'd been too stunned and terrified that his dick would get plans of its own the first time she'd jumped in with him. Then, it was like all of his cares had melted away and he was just taking a shower with a beautiful young woman.\n\nHe shook his head as he sat at his desk, futilely trying to work. He knew the two minxes would definitely try something to get him aroused.\n\nThe situation with his daughter should definitely be bothering him, he knew. It just... wasn't bothering him all that much for some reason. He still went through the motions of protesting her actions, as a father should, but what he did know was that he was happy, and it was because of her. She'd come back from California a different woman. She was more confident, much more knowledgeable about sex. Hell, according to her, even her breasts were bigger!\n\nSighing, he rubbed his temples and then stood, peering out the window. The girls were nude, of course, and in the process of getting situated on the lounge chairs. He shook his head and watched for a few seconds before heading back to his desk.\n\nWhat he did know was that Christine, that fucking cunt, had crushed him harder than anyone should be allowed to. He'd been so low for those months that he'd been alone, and then his world had been changed by this incredible woman that had entered it again. Emily had come home and had breathed new life into him. Of course, she was being a little aggressive and inappropriate at times, but who could blame her with what she'd been through? \n\nHe'd been able to admit to himself that he'd liked how it felt. That was a big step in the process for him. His daughter was a sexual being, and he was definitely attracted to her. He remembered feeling like a complete shit the first time that he realized it. It had been in the kitchen, when they were making the frozen pizza and she'd touched his cock, pushing it between her thighs so she could hug him closer. He'd fought so hard not to just grab her and kiss her right there.\n\n \"I'm attracted to my own daughter...\" he'd realized. \n\nShe could certainly get his motor running though, that was for sure! When they hugged in the evenings, he'd gotten to where he could barely control his hands from pulling her hips and that soft pussy across the tip of his apparently ever-present erection. The way her soft lips caressed the stiff shaft when she sat on him was amazing. He'd never wanted to fuck someone so much in his life. She never once showed an ounce of regret when they misbehaved, though. He was relatively sure that she would be okay with whatever happened between the two of them.\n\nHe thought about all the experiences he didn't know about in California, and how much he wanted to hear more about them, now that the threshold had been crossed and how much closer they'd seemed to have gotten.\n\nHe stood and walked over to the window for the second time, unable to concentrate on what he was doing. He sighed in frustration and peered out. Dakota was rubbing suntan lotion on his daughter, and was glancing every once in awhile up at him. He'd watched Emily do the same for the redhead a few minutes ago and still felt like a pervert. He swore quietly and then had a thought.\n\nThey were clearly doing this to set him off. He was a grown man though, he had willpower. Maybe he ought to teach these two a lesson in the matter. He chuckled at himself, knowing he'd cave to his obvious desires before he'd be able to teach them a thing.\n\nHe opened the curtains further and saw Dakota look up at him and wave playfully. He waved back. A devious idea hit him then and he opened the window. Smiling, he leaned out and waved as Emily and Dakota both looked up.\n\n\"Dirty old man,\" Emily called, smiling at him.\n\n\"Just getting some fresh air!\" he protested playfully.\n\n\"Sure,\" Dakota said, laying back down. He smiled and turned back to sit at his desk. Rolling back in his chair, he could easily peer out and still see the two. He turned back and then saw the webcam sitting on the edge of his desk, unused since he'd originally bought it to keep up with Emily in California. Smiling, he quietly plugged it in and pulled the cord over to the window sill. Setting it down, he angled it towards the pool and peered out. The two girls were looking up at him curiously.\n\n\"Just keeping tabs on you,\" he said, waving.\n\n\"Dirty old man,\" they both said in unison. He laughed and turned back, clicking the program on and smiling as the two came into view.\n\nThe webcam was nice, and the picture was clear, but they were decently far away. Still, it was just like looking out of his window. He smiled and put the image on his second monitor. He glanced at it every so often, looking at the two nude young women and then back at his work. Every so often one of them would speak to the other and they would move. That was when he had trouble concentrating. He loved watching as they moved, skin shifting over their muscles, breasts swaying back and forth. Women could be so incredibly sexy when they weren't even trying to be.",
        "He chuckled and tried to focus, and then saw the little manila folder icon on the desktop. He clicked it and opened up his file explorer. Clicking through his series of folders, he stopped just before he got to the one that contained Emily's photos and videos.\n\nHe shook his head and then looked back at the webcam image, feeling like a pervert. Dakota had leaned over and was sucking on Emily's breast. He groaned and quickly minimized the image. He glanced back at the folder that he'd put all of Emily's pictures and videos in and sighed.\n\n\"What are you doing?\" he asked aloud. \"That's your daughter.\"\n\nHe'd said this to himself a thousand times in the past few weeks. Now he felt like he was crossing another line. He maximized the webcam window again and saw that Dakota was gently thrusting two... or was it three... fingers into Emily's pussy, palm up, as she lay on the lounge chair with her legs spread. The redhead was sucking gently on one breast and then another. He glanced down and saw a red button. It said record. He sighed and shook his head.\n\n\"Don't even think about it,\" he told himself.\n\nHe glanced over at the folder again, and then at the record button. Emily could be heard moaning from the open window and through the speakers on his PC. He reached over and clicked the mouse on the red button.\n\nLooking back at the folder, he highlighted it, his hand hovering over the delete key. Something stopped him, and he opened it instead. A flood of file folders appeared, populating the list. He clicked on one and then switched the view to large icons, and then extra-large icons. The first few rows were just Emily and her boyfriend at the time. He coughed when he saw one in particular, and opened it full screen.\n\nShifting in his seat, he adjusted his erection and looked at the picture.\n\nEmily was sitting on her knees, Shawn's face behind her, obviously fucking her. Another penis, this one filling part of the frame, was in her mouth and she was staring upwards. There was a look on her face, one he'd definitely seen recently. She was clearly turned on in the photo and was hungry for more of what she was getting.\n\nHe sighed and shook his head, disappointed in his actions. Closing the image and then the folder, he glanced back at the right hand monitor. Dakota had slid down between his daughter's legs and was devouring her pussy. Emily was moaning softly, but he could still hear her from his current position.\n\nHe looked down at his painful erection and briefly considered masturbating. He shook his head, determined not to go down that path. There was a reason why he'd not done it recently. Any time he thought about sex, he thought about Emily. It was infuriating. Sure, he wasn't exactly one to masturbate very much at all, maybe a dozen times in his lifetime.\n\nHe supposed that was odd, given how much he knew other guys joked about it. He'd never had the need to. He'd focused his energy on his work and taking care of his daughter. He sighed again, glancing up and seeing her grabbing Dakota's red hair and grinding the young girl's face into her crotch.\n\nEmily began to cum then, her back arching sexily as Dakota devoured her. The young woman undulated as pleasure filled her body, tensing and relaxing her muscles as she gasped in pleasure.\n\nJohn looked down at his painful erection and adjusted it. He stood and looked out the window at the two. They both turned and looked up, just as his cock decided to slip out of his boxers.\n\nThey both grinned at him as he scrambled to tuck it back in.\n\nAdmonishing himself quietly, he moved the webcam back in then turned off the recorder.\n\nClosing the window, he drew the shade and went back to work.\n\n*****\n\nEmily\n\nEmily smiled as Dakota slid back down into her own lounger. The two girls looked back up at John's window and saw that he'd removed the camera and drawn the shade.\n\n\"I wonder if he was recording us,\" Emily said.\n\nDakota smiled. \"I'll bet he did,\" she answered.\n\nThey fell back into their seats and laid out for a few more hours. Around 2 or 3, they both went inside and headed up to Emily's bathroom. Rinsing off the sweat and cooling off, they headed back downstairs, both sticking to the plan and staying completely nude. \n\nJohn appeared a little while later, walking downstairs and coming into the living room with the two. He didn't appear to notice they were naked until he'd entered the room and was on the verge of sitting.\n\n\"Jesus Christ,\" he said, standing and covering his eyes. \"What are you two doing?\" he asked.\n\n\"I tell Dakota everything, Daddy,\" Emily said. \"She knows that we've showered together. You don't have to be shy.\"\n\nHe shook his head. \"Emily, please go put on some clothes.\"\n\n\"Aww, Mr. Davis,\" Dakota said as she reached for his shorts. He brushed her hands away but she wouldn't let him be. \"I wanted to teach you a little more about being naughty.\"\n\nHe smiled, obviously remembering last weekend in the pool.\n\n\"You've seen us both naked, and you were naked in the pool with us last week,\" Emily said. \"Why don't you get comfortable? Being naked is so freeing and fun!\"\n\nHe shook his head and brushed the very persistent Dakota's hands away again and again.\n\n\"At least sit with me,\" Dakota said, patting the couch beside her. \"We were just talking about things.\"\n\nHe sighed, allowing himself to be pulled down beside the redhead.\n\nShe giggled excitedly and immediately leaned into him, her fingers stroking his chest.\n\n\"So, Emily,\" Dakota said, leaning over and kissing his neck. \"You were saying you were helping Shawn out with something?\"\n\nEmily nodded. \"Well, after Shawn and I had brought other girls and guys into our sex life...\" she started.\n\n\"Nope,\" John said, shaking his head and trying to stand. Dakota stopped him by quickly leaping onto his lap and straddling him. She positioned herself so that his erect cock was firmly pressed between the two of them and leaned forwards until her breasts were a few inches from his face.\n\n\"He told me that one of his professor's was trying to fail him and he needed me to get him an A,\" Emily continued.\n\nJohn sighed, and she saw his gaze locked on Dakota's erect nipples. He reached up mechanically and began to paw at her friend's breasts.\n\nDakota, satisfied that he wasn't going to leave, spun around in his lap and leaned back into him. Her hand disappeared behind her back and he groaned as she started to stroke him.\n\nSmiling at her friend, she continued. \"So he had me follow him one afternoon to his professor's office. There was a line of students, so we had to wait until the last one was done before he entered.\"\n\n\"Mr. Lassiter,\" she said, imitating an older man. \"I told you that there's no way you can pass this semester. You'll just have to take my course next year.\"\n\n\"Shawn entered first, and I followed. He'd made me get dressed in a skirt and hadn't let me have any panties. I entered behind him and sat demurely down in the chair next to him.\" She watched as John groaned, trying to fight the urge to have his way with the delectable Dakota.\n\n\"Shawn introduced me as his personal fuck toy,\" Emily said. \"I remember my pussy getting wet when he referred to me as his personal thing, like I didn't matter except to be used to pleasure someone.\"\n\nDakota slowed her stroking and slid down next to John, showing Emily his erection with a wink. Her hand was still gently sliding up and down, and John, looking helpless, was squinting his eyes.\n\n\"I stood and went up to the professor and pulled his chair out while Shawn locked the door to his office. Quickly, I knelt to the ground and began to undo the older man's zipper.\"\n\nShe smiled, seeing the effect it was having on the two people in front of her. She continued, \"I wasted no time in pleasantries and simply took this stranger's cock in my mouth and sucked him until he grew erect. Shawn sat back down and watched while I fucked his professor's cock with my mouth. After a little while, I looked up and asked him if he wanted to fuck me, or to come in my mouth.\"\n\nJohn groaned and tried to brush Dakota away, but she wasn't having it and continued to stroke him.\n\n\"He said he'd love to fuck me, but that he was a married man,\" Emily said. \"I stood and turned, presenting my backside to him. He didn't wait five seconds before he stood and shoved his cock into me. Shawn came forwards and made use of my mouth, fucking his cock into my face until he came, forcing me to swallow his load in front of this complete stranger that was fucking me.\"\n\nDakota and John were kissing gently now, her father having apparently given up fighting the redhead, though she was still slowly stroking him.\n\n\"Shawn's professor... I don't actually know his name... fucked me until he filled my pussy up with his seed,\" Emily said.\n\n\"Was that the end of it?\" Dakota asked. \"Did Shawn get his A?\"\n\n\"Well,\" Emily said. \"After I knelt down and sucked his cock clean, I went back around and he made me get back on my knees and suck him off again, right there in the professor's office. By that time of course, the professor was hard once more, so I sucked him off again.\"\n\n\"Oh my!\" Dakota said, giggling as John kissed her neck. \"You naughty little slut,\" she admonished.\n\nEmily nodded. \"Afterwards, Shawn had me stand up and pushed me up against the door, his hand on my throat. It was all for show of course, but it was such a turn on. He turned and looked at the professor and then back at me.\"\n\n\"\"Emily,\" he said. \"You're going to come back every time the professor asks and suck him off or fuck him, whichever he prefers.\" I told him \"Yes, Sir,\" and nodded. Shawn turned and looked at the professor and asked him if he could have an 'A' now. I'm pretty sure that he got his grade.\"\n\n\"How did he contact you?\" Dakota asked, turning and kissing John for a second and then playfully pushing his face from hers.\n\n\"Shawn gave him my cell number, and he'd text me every few days. I'd go to his office or meet him in his car. Mostly he just wanted me to suck him off,\" she said. \"Eventually he stopped, so I figure he had his fill of me, or his wife began to suspect something.\"\n\nDakota smirked. \"Is that all true?\" she asked.\n\nEmily grinned. \"100%,\" she replied.\n\nDakota grinned and turned back to John. \"I didn't know your daughter could be such a little slut!\"\n\nHe smirked and then shook his head, frowning as if he was suddenly aware of what was happening.\n\n\"No, no, no,\" he said, standing and shuffling her off of him. He quickly tucked his cock away and headed upstairs. \"I need a cold shower,\" he said.\n\nEmily grinned and nodded at Dakota. \"Now's our chance,\" she said. \"Let's go join him and molest each other a bit.\"\n\nThey both crept upstairs after waiting for the shower to kick on. After they heard the subtle roar, they crept into his room and then his bathroom. Trying to open the door, they saw that he had locked it.\n\nEmily rolled her eyes and then went over to his dresser and retrieved the brass pin that would open it. She went over and quickly unlocked the door, opening it and pulling Dakota in.\n\nJohn was in the shower, the water chillingly cold. Dakota opened the door, stepping in first, her hand immediately stroking his cock again.\n\n\"Damnit, Dakota,\" he groaned, and then turned in surprise as Emily stepped in behind him. \n\nDakota turned and adjusted the water to be much warmer, and then slid slowly back into his arms.\n\n\"Face it, Mr. Davis,\" she said. \"You're going to let me suck your cock, and you're going to fuck me. I want you to be my first, so fucking enjoy it.\"\n\nHe groaned and shook his head. Emily slid around his body and in between the two. He seemed hesitant at first but then she felt his hands on her back and his erection pressing against her butt cheeks as she pulled Dakota in for a kiss.\n\nThe nubile redhead sighed and then knelt, burying her face in Emily's pussy for a moment. The two girls heard the shower open and John step out, but they quickly pulled him back in.\n\n\"You're not going to want to miss thiissssss,\" Emily said as Dakota buried her face back into her pussy. \"God she's good at that,\" Emily moaned. She lifted a single leg up as John settled back under the stream of water, moving around until he had Dakota in the middle.\n\nThe young girl turned then, away from Emily, and quickly took the older man's erection in her mouth.\n\nJohn groaned and reached down, cradling the back of Dakota's head until he realized what was happening again. Pulling her off, he shook his head admonishingly. \n\n\"Stop,\" he warned.\n\n\"Don't tell me to fucking stop,\" she said. She took the head of his cock back in her mouth and slid her lips up the length.\n\nEmily was gently pulling at her nipple ring with one hand and her pussy with the other. Dakota spun around again, John's cock sliding from her mouth with a soft pop and her tongue plunging home into Emily.\n\n\"God,\" Emily groaned, reaching down and grabbing Dakota's hair as her dad had. She gyrated her hips gently against her friend's chin, and orgasm washing over her and sending her head spinning. She felt Dakota's warmth leave her pussy and heard sucking. Turning, she saw her father slowly thrusting into her friend's whimpering mouth and suddenly he tensed, groaning and pulling Dakota's hair. She whimpered again and again as he came, filling her mouth.\n\nFalling backwards, he leaned against the wall of the shower as Dakota grinned, her lips flecked with cum as it oozed out from between them.\n\nEmily, unable to stop herself again, drew the redhead up and kissed her, drawing a cry of surprise from both of them. \"Fuck,\" Emily groaned, rubbing her pussy with one hand and slurping hungrily at Dakota's lips. The redhead was furiously kissing her back, pushing what she could of John's seed from her lips and into Emily's. A minute of frantic slurping and sucking between the two passed, John staring in awe.\n\nFinally, Emily pulled back on Dakota's head with a firm grip in her hair and looked at her. \"At least you didn't fucking waste it that time.\"\n\nDakota grinned and licked her lips, swallowing the little that remained. \"I think your daughter has a cum addiction,\" she said.\n\nJohn looked dumbfounded, and as Dakota stepped out of the shower, he was easily led into his bedroom. Emily spent a little longer in the shower; happy for the moment, with how things were turning out. \n\nShe heard groaning coming from her father's bedroom and stepped out and turned off the water. Briefly drying herself, she quietly opened the door and peered out.\n\nJohn had been forced down onto the bed and Dakota was kneeling at his feet. Her head bouncing up and down in his lap, she sucked him off while Emily watched. A few minutes later, Dakota giggled and clapped excitedly. \"There's my new favorite toy,\" she said, looking up at him as she gripped his fresh erection.\n\n*****\n\nJohn\n\nHe was in a haze of eroticism. This gorgeous redhead was giving him an unbelievable blowjob. It seemed all of his willpower had faded, and he was nothing but a plaything for her every whim. Her mouth felt incredible and it wasn't long until he'd gotten erect again.\n\nShe slid from her knees up onto his bed and looked over behind him nervously. He glanced back and saw his daughter standing there, but Dakota reached for his hand and drew him towards her. She leaned back into the bed and smiled as he came to lay over the top of her.\n\n\"I really want you to be my first, Mr. Davis,\" she said. \"Will you be gentle with me?\" she asked.\n\nHe looked down at her incredible body and realized what she was asking. Her virginity, which she could only give to one person in the world, would be his.\n\nHe smiled at her and nodded. He'd gone this far after all, what was the harm in going a little farther?\n\nShe nervously looked at Emily, who had stopped at the door. Emily gave her a smile and then left the room.\n\nJohn let his eyes wander all over the gorgeous young woman's form, drinking her in. \"You are so goddamn sexy,\" he said. \"I don't know if I'll survive making love to someone as beautiful as you, but I promise I'll be gentle. You're sure you want me to have your virginity?\"\n\nDakota, smoldering beneath him, looked up and pulled him down for a tender kiss. \"I really, really do, Mr. Davis.\"\n\nHe chuckled. \"John,\" he said, smiling. His moved to his knees and then slid upwards, his cock even more erect than it had been before. The prospect of claiming this nubile young redhead as his own was intensely exciting.\n\nShe gently spread her legs for him and pulled him close. His warm lips found hers and she moaned gently beneath him.\n\n\"Please make love to me,\" she whispered.\n\nHe was about to have this young woman, his daughter's friend. She would be his forever. He grinned excitedly, but forced himself to calm down.\n\n\"Tell me if you need me to stop,\" he said, lifted her chin up and looking at her pretty green eyes.\n\nShe bit her lip nervously and spread her legs wider for him. He reached down between them to position himself at her entrance. He felt the tip of his cock push gently at her pussy, and she gasped in surprise.\n\nHe suddenly realized what he was doing and shook his head. \"You don't want me to be your first,\" he said, shaking his head.\n\nShe stopped him and pulled him tightly to her. \"Please, John,\" she said. \"Please make love to me!\"\n\nHe stopped and looked down at her beautiful face and saw the resolute desire there.\n\nSlowly, he nodded and resumed his position. His cock pushed gently at the entrance of her pussy, and he methodically began to slide into her.\n\nShe felt incredibly tight, but also very wet, and he slid into her easily. He stopped when he felt resistance and saw her eyes go briefly wide. She clutched at his back, her lips quivering. He brushed a stray hair from her forehead and then gently kissed her. \n\nLooking up at him, she smiled briefly and nodded as he waited for her to give him the go ahead. \n\n\"Here we go,\" he said, pushing gently. There was a little resistance, and she winced, but then moaned softly as he slid completely into her. He sighed in pleasure, smiling as he felt the long forgotten sensation of being inside a woman.\n\nHe kissed her, smiling as he waited for her to respond.\n\n\"I'm not a virgin,\" she said, grinning. \n\n\"You're certainly not,\" he said, smiling and kissing her again. She spread her legs a little more for him and clutching at his back.\n\nJohn slowly began to slide into her, causing her eyes to widen for a moment in pain. The sensation seemed to pass and she moaned softly. \"Oh, that's nice,\" she murmured.\n\nHe gently thrust into her then, and she sighed happily. \"I'm really going to enjoy fucking you, Mr. Davis.\"\n\nHe smiled down at her widely, sliding out and then back in. She clutched at him tightly, her arms around him and pulling him close. He continued to lift his hips again and again, fucking down into her pussy as she moaned happily beneath him.\n\nHe felt an orgasm building, but fought to stave it off. Her pussy felt incredible around his cock; tight and wet and sucking hungrily at him.\n\n\"God, you're going to make me cum on your big fucking cock,\" she moaned, gently clawing at his back.\n\nHe grunted in approval and began to thrust faster and faster. She moaned a final time before he felt her pussy convulse down on him, sending him over the edge and causing him to thrust deeply into her a final time.\n\nShe cried out in pleasure, her pussy contracting down on him again and again as she clutched at him. He had his hand cradling her head, his fingers in her red locks as she came on him. He cried out as his cock burst a warm load of cum into her convulsing cunt, filling the young woman up as he came again and again.\n\nThrusting gently one time, he elicited another moan from the redhead and groaned loudly himself. Finally spent, he slid out of her and to the left. She rolled over on top of him and began to kiss him gently on the lips.",
        "Chuckling, he returned her affection as best as he could, but was quickly headed for nap town. The last thing he remembered was the feeling of a towel wiping ooze off of his cock and groin.\n\n*****\n\nEmily\n\nEmily smiled and felt genuinely good about her accomplishment. Her dad was finally able to achieve a good release with Dakota, and she actually felt like they might be able to be in the same room with each other without the air feeling heavy around them. Smiling, she returned to her room. She heard the shower for a few minutes and then Dakota came in, beaming.\n\n\"Everything go okay?\" Emily asked as she came forwards to the bedside.\n\nDakota fell into bed and smiled, staring dreamily into nothing. \"It was amazing,\" she burbled.\n\nEmily giggled. \"Welcome to the club!\"\n\nDakota smiled and moved to snuggle up to her. \"Thank you Em,\" she whispered as Emily twirled a lock of her hair.\n\n\"Thank you,\" Emily said, drawing her back and kissing her gently. \"You saved us from crossing a line today.\"\n\nDakota snickered but didn't respond, only laying on Emily in silence. Soon, the two girls were fast asleep.\n\nSeveral hours later, there was a gentle knock on the door and John poked his head in. \"I've made some supper,\" he said, peering at the two girls as they blearily wiped their eyes.\n\nDakota immediately slithered from the bed and walked sexily over to him, still very nude. \"Did you enjoy yourself?\" she asked, reaching down and stroking his crotch.\n\nHe laughed. \"Two orgasms with a gorgeous redhead in one day is more than any man should ask for. But yes, you gorgeous little temptress, I enjoyed myself very much.\"\n\nEmily came around the bed then and slid in between the two. \"Don't forget about me,\" she said, pouting playfully.\n\nJohn hugged both of them for a few seconds before freeing himself from the nude women. \"Supper's getting cold,\" he said. \"Get some clothes on and...\"\n\nThe two girls charged past him and down the stairs, not bothering to dress.\n\n\"Or don't,\" he called, following them.\n\nThey both went to the dining room as John came in behind them. \"Is being nude around my house going to be the new norm?\" he asked.\n\nDakota glanced over at Emily, who grinned in response. \"Like you wouldn't enjoy every second of it.\"\n\nHe served them a plate each before grabbing one for himself and sitting down. Dinner conversation was relatively normal, and Emily found herself thoroughly enjoying the banter between the three of them.\n\nAfter dinner, Emily asked if Dakota wanted to watch a movie, but the young redhead shook her head and looked at her watch. \"I better get going. Dad mentioned wanting to watch a show with me tonight.\"\n\nJohn stood and offered her a hug. \n\nShe smirked and looked at Emily. \"A hug is all I get?\"\n\nHe looked at her, confused. She sighed and pulled his neck down with a single hand, the other gently stroking his bulge. Her lips parted as he bent to kiss her, her soft tongue finding his.\n\nEmily licked her lips and felt a stab of jealousy, but she quickly quashed it.\n\nDakota got dressed after that, and kissed them both once more before waving goodbye and leaving.\n\nEmily sat back on the couch and smirked as her dad tossed her a shirt. \"Please,\" he said.\n\nShe sighed and acquiesced to his request, sliding the over-sized shirt on and sitting back on the couch.\n\n\"So,\" he said, not looking at her.\n\nShe giggled. \"I'm glad you got to fuck my friend,\" she said, grinning at him.\n\nHe glanced over and then laughed loudly. \"I guess you're okay with it.\"\n\nShe nodded and smiled at him. \"Of course I am. I initiated it.\"\n\nShrugging, he sat back as she slid over and laid her head down on his shoulder. \n\n\"Are you okay with it?\" she asked.\n\nHe shrugged. \"I mean, yeah. It was obviously weird showering with my daughter, and her best friend, and then getting a blowjob from her.\"\n\nEmily shrugged. \"It wasn't all that strange for me, to be honest. We've showered together all week.\"\n\n\"Emily,\" he said. \"You saw her sucking me off.\"\n\n\"I saw her sucking you off last week too,\" Emily admitted. \"I would have stayed and watched you guys fucking, but I figured she might want some privacy for her first time.\"\n\nHe sighed and shook his head. \"But doesn't the fact that I'm your old man bother you? Aren't you grossed out by the thought or sight of me naked?\"\n\nEmily snickered and moved quickly to straddle him.\n\n\"Whoa, whoa, whoa,\" he said, looking down and trying to scramble from beneath her. \"You aren't wearing panties!\"\n\nShe shrugged. \"I want to show you something,\" she explained. Reaching down, she re-adjusted his cock inside his boxer-briefs and positioned it pointing to his belly button. Sliding back down comfortably, she draped her pussy across the shaft and sighed in pleasure.\n\n\"Just relax,\" she said. \"I'm not going to cross any lines.\"\n\nHe looked up at her, unconvinced. \"I think we're already crossing lines.\"\n\nShe smirked and just looked at him, her eyes dancing over his body. Smiling as she felt what she'd been waiting for, she slid off of him and then looked down. \"See?\" she asked, nodding down at his erection.\n\nShe'd left a very clear wet spot on his underwear, right against the shaft of his cock. He looked down and then back at her, taken aback.\n\n\"Why do you think it's so hard to stay away from you,\" she said. \"You turn me on just as much as I turn you on, Daddy.\"\n\nHe shook his head. \"It's not right though.\"\n\nShe shrugged. \"Says who? I can find whatever and whoever I want attractive. There are people out there with much weirder tastes than this.\"\n\nShe sighed and shifted so that she could look at him. \"The point is, you turn me on, Daddy. When we were in the shower, I wanted you to fuck me. The other day, when we were in the kitchen making pizza, I wanted you to bend me over the sink. When we were sitting on the couch several times, and right before mom came back that day, I wanted you so badly that I couldn't stand it.\"\n\n\"Emily, this isn't right!\" he said.\n\n\"Daddy,\" she interrupted. \"No one has the right to tell me what turns me on, not even you.\"\n\nHe sat back, momentarily silenced. Eventually he nodded. \"I understand that. I'm saying, we shouldn't act on it, no matter how much we both want to.\"\n\nShe nodded. \"I know we shouldn't, and we haven't.\"\n\nHe looked at her flatly again. \"Emily, you just kissed your friend after she'd swallowed my...\"\n\n\"Your cum, Daddy,\" she finished for him. \"And yes, I did.\"\n\nHe looked at her like he wanted her to elaborate. She sighed. \"What? Is there a problem with me enjoying swallowing cum?\"\n\nHe sighed and shook his head. \"I can't believe we're really talking about this.\"\n\n\"Well, you brought it up!\" she said loudly.\n\n\"I just...\" he started. \"I just don't get it. That was from me, your own father!\"\n\nShe smirked. \"Well, it wasn't exactly on purpose, Daddy.\"\n\nHe looked at her, confused again. \"I don't get it.\"\n\nShe giggled. \"Guys really enjoy that. Back in California, it was a favorite activity of theirs. Shawn and the other guys used to love to make me swallow their loads. Sometimes, they didn't even fuck me, they just wanted blowjobs. It got to where I tolerated it, and then started to enjoy it. Eventually, I craved swallowing cum.\"\n\nJohn was clearly erect now, and swallowed hard. \"That's all fine, I guess, but it was mine.\"\n\nShe nodded. \"All it takes is for me to see it, or smell it, or really to just see an erect cock, and I want to suck it. I want to taste the seed that I know wants to come out of it. I saw Dakota with a mouthful, and I just couldn't take it. I just had to have it. In fact,\" she said, leaning in and kissing him on the cheek, \"I did it last week too.\" \n\nHe looked at her, surprised. \"You did what?\" he asked.\n\n\"I licked Dakota's face clean of your cum, Daddy. I couldn't help it. I felt guilty afterwards and she had to comfort me for awhile, but I still did it.\"\n\nA long silence fell between them. Eventually he sighed and shook his head again. \"I'm going to need another cold shower if we keep this up.\"\n\nShe smirked and flipped on the TV, deciding that she couldn't keep tormenting him. She'd finally gotten him to have sex with her friend, why would she keep antagonizing him?\n\nShe didn't really have an answer to that question, but wrapped a blanket around her legs and curled up on the other end of the couch. They spent the rest of the evening watching a few movies and enjoying each other's company, laughing easily and joking. \n\nBedtime came, and she stood and began to fold the blanket as her dad switched to the local news.\n\n\"Do we dare risk a hug?\" she asked, looking down at him with a sly grin.\n\nHe smirked and shook his head. \"You're still not wearing panties,\" he reminded her.\n\n\"That sounds like a challenge,\" she said, walking pointedly over to him.\n\n\"That didn't sound anything like a challenge, Emily,\" he said, shaking his head. She smirked and smiled playfully at him, turning and sliding down onto the couch again. She slid into his lap and wrapped her arms around his neck.\n\n\"There,\" she said, pulling back and looking down. She'd pulled her shirt down low and kept some between her legs. His cock wasn't erect, but she knew that it was a definite possibility that it would make an appearance. \"Better?\"\n\nHe chuckled and nodded.\n\nSatisfied that he was okay, she looked at him pointedly. \"Can I ask you something?\" she asked.\n\nHe nodded. \"Of course.\"\n\nShe leaned forwards and turned her head away from him, enjoying the warmth from his body as it seeped into hers. \"Today, when Dakota and I were laying out by the pool. Were you recording us?\"\n\nHe swallowed and was silent for a bit. \"I uh... I think maybe I was,\" he said at length.\n\n\"Maybe?\" she asked, her smile wide and mirthful. \"Daddy, either you were or you weren't.\"\n\nHe shrugged. \"Something in me has changed, I think,\" he said. \"I mean, it's pretty clear that my body reacts to seeing yours. I think I'm actually okay admitting it.\"\n\nShe smiled. \"My father finds me sexy?\"\n\nHe groaned. \"Emily, why do you have to put it like that?\"\n\nShe giggled. \"That actually reminds me of something someone said to me one time. There's a big difference in \"Forgive me father for I have sinned,\" and \"Sorry Daddy, I've been naughty,\"\" she said, grinning widely.\n\nJohn laughed briefly, but then covered his mouth. \"Emily,\" he admonished. \n\nShe grinned and shrugged, sitting back. She glanced down, raising a single eyebrow and began to twirl a single braid in her fingers. \"Daddy, I think I feel you being a little naughty,\" she said.\n\nHe sighed and shook his head. \"I think we established that I can't control the way my body reacts to yours.\"\n\nShe thought about pushing him further, but relented, turning back to her question instead. \"So you did record us then?\"\n\nHe sighed and fell silent, eventually nodding. \"I'm a pervert, I know.\"\n\nShe giggled. \"Of course you are, but the thought of you spying on me and Dakota while she was getting me off is a little hot, and more than a little naughty.\"\n\nHe smirked and rolled his eyes.\n\n\"I guess you might have to start your own little folder of recordings of me and Dakota,\" she said with a grin.\n\nHe chuckled in response, but then looked up at her. \"Can I ask, did that really happen with your professor?\"\n\nEmily nodded. \"Don't think too badly of me, Daddy, but yes. It did. It was Shawn's professor, though.\"\n\n\"You don't regret doing things like that?\" he asked.\n\nShe shook her head. \"I've had time to process it all, since I've been back. I really don't regret any of it. I mean, yeah, that last party kinda of ruined California for me, but other than that, I really had a lot of fun. I mean, I had more sexual experiences than most people have in a lifetime.\"\n\nHe brushed a hair from her eyes and then groaned, lifting her a bit to shift his growing erection. She smirked down at him.\n\n\"Did you ever worry about catching something, or getting pregnant?\"\n\nShe shook her head. \"Honestly, no. Not at the time. I mean, first, I did actually get tested in California, and I was on birth control. Plus, I've been tested here several times. I'm fine, and I'm perfectly clean and healthy. No one ever took things with me too far, even on that last night. I certainly started out enjoying myself, even encouraging the guys to take advantage of me.\"\n\nHe looked at her, a soft, caring look on his face.\n\n\"Aww, Daddy,\" she said, leaning in and kissing him briefly. \"I'm still your girl,\" she said, smiling sweetly.\n\n\"I know you are baby,\" he said, squeezing her tightly. \"I just don't want you to think that you did anything that I would be offended by.\"\n\nShe smiled and nodded. \"I know, Daddy.\"\n\n\"Here,\" he said, pushing her back a little to look at her. \"Hit me with your best shot. Tell me your favorite time out there. I promise, I'll be okay with it.\"\n\nShe snickered and shook her head. \"I don't think you're ready to hear about that just yet, Daddy.\"\n\nHe shook his head. \"I mean it. Just let me have it. I want you to know that I love you, and I'm proud of you.\"\n\nShe looked at him incredulously again. \"You really want to hear this?\"\n\nHe forced a smile and nodded. She laughed and shook her head. \"Maybe some other time, Daddy,\" she said, smiling. \"I'm going to bed.\"\n\nHe sighed and released her. She leaned down and drew his face up, the room seemingly going quiet around them. Tilting her head, she gently pressed her lips to his and parted her mouth, her tongue pushing gently inside and eliciting a moan from him. Her lips pushed completely against his then, and she felt his tongue push gently back against hers. Electricity seemed to flow between them, and she fell back, breaking the kiss and biting her lip. Standing, she shook her head and waved. \"I definitely shouldn't kiss you again,\" she said.\n\nHe nodded in agreement and looked back at the TV, making a show of watching. She turned, and headed upstairs.\n\nA few minutes later, she was laying quietly in her bed, staring at the ceiling and listening to the sounds of her dad locking the house up and then climbing the stairs. Hearing him open and then close the door to his room, she sighed and forced herself to relax.\n\nHer dreams that night were wicked, images of her father bending her over the couch, or fucking her up against the wall. In one dream, it was her in place of Dakota as he claimed her virginity, in another, a flood of cum erupted from his cock as she knelt before him, threatening to drown her in it.\n\nShe awoke the next morning, covered with sweat and breathing heavy. She felt flushed, and was definitely horny. Briefly considering contacting Dakota, she sighed and went to her bathroom. She heard a familiar noise from her father's room, and knew that she shouldn't act on the sudden desire that was filling her.\n\nOpening the door to the hall, she stepped out and tiptoed towards his room. His shower was on and he'd left the door to his bathroom slightly ajar.\n\n\"Fuck,\" she whispered, knowing that she was definitely going in now. She steadied herself and fought the illicit thoughts of fucking him in the shower anyway.\n\nShe crept in and then watched him for a second. He was whistling while he soaped up his hair. She smiled, still thoroughly aroused despite the silliness of the scene.\n\nShe stepped in and smiled up at him as he squinted through one eye at her. \"I was wondering if I was going to get some company this morning,\" he said, smiling and drawing her close.\n\nShe looked downwards, his cock semi-erect and slowly bobbing upwards and groaned inwardly. Fighting the very powerful urge to drop to her knees, she closed her eyes and stepped forwards, wrapping her arms around him as his erection slid between her legs.\n\n\"Sorry, sweetie,\" he said, glancing down.\n\nShe shrugged. \"I'm not,\" she replied. \n\nHe grabbed her soap bottle from the shelf and began to wash her, paying particular attention to her breasts and buttocks. She turned for him, feeling his larger form slide up against her backside and feeling his erection slide between her butt cheeks again. It slithered deliciously against her pussy and she moaned uncontrollably. He didn't react though, and reached around her to wash her. His hands worked their way across her breasts again and then down to her stomach. Sliding one knee up, she tilted to the side and looked up at him as he smirked and shook his head. \n\n\"I'm dirty,\" she whispered, grabbing his hand and pulling it down. His warm, soapy fingers slid across her pussy briefly, and then moved to her thighs. She pulled him back to her pussy quickly, and he again rubbed against it for a few seconds before moving to her other thigh. She spun and pulled him down for a kiss, but he broke it a few seconds later and smiled at her.\n\n\"We'll run out of hot water if we don't hurry,\" he said. She sighed, frustrated, but nodded and began to wash him. Disappointingly, he wouldn't let her wash his erection, even though it was angrily standing up and glaring at her. \n\nSliding out of the shower, she slid up on the cabinet and sat on a towel, propping one leg up on the counter. Her father stepped out a minute later, turning off the water and smiling as she wriggling a finger at him to come forwards.\n\nGrabbing a towel, she began to towel his chest off as he came forwards, his erection bobbing up and down as he slid between her legs. She sighed as he slid up against her thigh, and gently pulled at his back, hoping he'd \"accidentally\" slide into her. She shook the illicit thoughts from her head and let him step back, sliding off the counter and beginning to dry herself.\n\nShe caught him staring at her a minute later and looked at him quizzically.\n\n\"Women have no idea how sexy they are when they are just doing normal things,\" he explained, smiling.\n\nShe smirked. \"Saying shit like that isn't making me want to behave, you know,\" she said.\n\nHe laughed and held up his hands. \"It was just an observation.\"\n\nShe glared at him semi-playfully and stood as he stepped past to leave the bathroom. She'd just knelt to begin drying her legs and was in the process of standing when he stepped past, his cock brushing her cheek. She groaned and reached for it with one hand, stopping him as she stood and pushed him up against the wall.\n\n\"Daddy,\" she warned, squeezing his cock tightly. \"Stop fucking toying with me,\" she warned. \"You have no idea what you're about to start.\"\n\nHe winced, but nodded. \"It wasn't intentional,\" he explained.\n\nShe looked down and stroked gently, but stopped, groaning in frustration.\n\nHe wisely left the room a few seconds later, followed by Emily. She stopped at the door as he began to slide on some boxer shorts and subconsciously licked her lips.\n\n\"Fuck,\" she whispered. Today was going to be a very long day.\n\nShe headed off to her room to get dressed, selecting a tight white camisole and a g-string. If he wanted to torment her, she'd show him who was the best at it.\n\nShe looked at herself in the mirror, adjusting the small panel of fabric covering her panties, and then headed downstairs.\n\nHe was in the kitchen at the stove, frying some bacon and eggs. She slid in behind him and looked around him, reaching around to grab at the bulge in his pants. He shook his hips, shaking her loose as she giggled and turned, scowling at her.\n\n\"Are you trying to get me hard?\" he asked, looking at her clothes.\n\nShe glanced down and then back up at him. \"Who, me?\" she asked playfully.\n\nHe sighed and moved over to where she was standing. Reaching behind her, he opened the cabinet and grabbed a plate to put the food on. His cock was half-erect again, and was slowly bobbing upwards, brushing against the panel of fabric covering her pussy.\n\nShe sighed softly, feeling the gentle pressure at her pussy and fought the urge to reach down and take command of the situation.\n\nHe paused for a second, swaying forwards and leaned in close, his lips brushing against her forehead. Sighing, he seemed to force himself back and began to dump the eggs and bacon into the plate. Quickly turning off the stove, he slid the pan into the sink and then came back over to where she was standing and slid up against her again, reaching for two more plates. His much more erect cock pushed directly against her pussy then, eliciting a much louder moan and a whimper as he pulled away.",
        "She bit her lower lip and stared hungrily at him.\n\n\"Can you get some glasses?\" he asked. \n\nShe nodded numbly and turned, breathing deeply for a few seconds and re-establishing control. Turning, she headed for the cabinet and pulled out two glasses. Heading to the fridge, she bent over low and then glanced back.\n\n\"Daddy,\" she said, looking pointedly at him. His eyes shot to her ass, undoubtedly drinking in the taboo sight.\n\nHe swallowed hard and looked up at her. \"Come tell me what you want,\" she said.\n\nHe nodded and stepped forwards, placing a single hand on her back, his cock sliding between her legs and nuzzling up against the fabric covering her pussy again. He thrust gently against her, causing her to moan softly and sway backwards.\n\nHis hands gripped both of her hips then, and he pushed forwards, his shaft pushing against her pussy as he lowered his hips slightly and causing her to whimper softly.\n\nHe released his grip quickly though, and moved back. \"I... I... I... I'll take... take orange milk. Juice,\" he corrected.\n\nShe giggled, and reached in, grabbing the orange juice and turning. Filling the two glasses, she turned as he finished filling the plates and the two walked over to the table. He sat down as she turned to go get silverware.\n\nComing back around, she pushed her breasts into the side of his head as she handed him a fork. He turned, nuzzling her cleavage and sighing. She moaned softly, feeling the warmth of his skin through the thin fabric of her shirt. He sighed, inadvertently blowing a stream of air across her nipple and eliciting a sigh of pleasure from her. Again, she fought the urge to push it further and forced herself back to her seat.\n\nThey ate in silence, both stealing glances at the other until they'd finished. She offered to do the washing up, and smiled as he sat on the counter to watch her.\n\n*****\n\nJohn\n\nHe marveled at the way her ass flexed when she moved around the kitchen, washing the few dishes that they'd dirtied or were already in the sink.\n\nShe looked incredible this morning, and was obviously horny again, as was he. He sighed when he thought of the troubling week that was undoubtedly ahead of them, but then focused back on her ass as it flexed sexily.\n\nHer hair was done up in her normal braids and hung back out of the way behind her. He briefly had a flash of the dreams he'd had the night before.\n\nThe first had been Dakota swallowing him in the shower, but then her face had morphed into Emily's and then back into Dakota's. Then, he'd had a dream of Emily on her knees, begging him to cum in her mouth, almost pleading as if her life depended on it. Then, he was behind her, yanking hard on her braids as he plunged his cock deeply into her.\n\nHe'd woken up extremely erect and horny, and feeling very guilty. Now, in the kitchen and earlier in the shower, he felt his resolve fading away and knew that he'd have to be strong to resist his more base urges.\n\nHe sighed and turned, forcing himself from the room. \"Going to go do some work,\" he called.\n\nShe called out, \"Okay.\"\n\nHeading into the office, he shut the door and sat down at his desk. Eyeing the folder on his desk, he shook his head and began to open up the file folder sitting next to the computer.\n\nA few minutes later, the door opened and she came over, smiling. \"Can I look at something?\" she asked, sliding into his lap before he could respond.\n\n\"Sure,\" he said, groaning inwardly.\n\nShe smiled and took control, moving the mouse over to the webcam program and loading up the video he'd recorded. She smiled and turned. \"Goodness, Daddy, you really got me in a naughty position!\"\n\nHe blushed and tried to get her to close it, but she moved the mouse away. On the screen you could hear faint moaning as Dakota finger fucked her.\n\n\"Where are my other pictures and videos?\" she asked.\n\nHe sighed and shook his head. \"I'll tell you when you let me leave the room.\"\n\n\"Tell me or I'll drop to my knees and take your cock in my mouth right here and now,\" she ordered.\n\nHe groaned. \"Damnit Emily, I'm the parent here. I'm the one in charge.\"\n\nShe smiled innocently at him.\n\nSwearing quietly, he pointed at the folder on the desktop and directed her through the series of hidden and benignly named folders.\n\n\"Sneaky,\" she said, grinning and wriggling her butt against him.\n\nHe sighed when she clicked open the last folder and began to thumb through the directories.\n\nFrowning, she shrugged. \"I guess we didn't record my favorite time. I wanted to show you,\" she said.\n\nSpinning around in his lap, she kissed him sweetly on the cheek and stood, presenting her breasts to his face.\n\nHe sighed, unable to tear his eyes away for a few seconds. She giggled and disappeared.\n\nNow sporting a healthy erection, he quickly closed the video and the folder and tried to focus on work. Several hours later, he stood and began to head downstairs. Emily was nowhere to be found, though he could see her car through the front window.\n\nPeering out back, he saw the pool and had a quick idea. \"A nice cool swim ought to calm me down,\" he decided, and quickly went to pull on his suit.\n\nOpening the door, he strode over the edge and dove in, beginning to swim laps back and forth. A few minutes later, he stopped and looked up, seeing a familiar form standing near the pool.\n\nEmily smiled sweetly down at him completely nude, and dove in, flying over him and causing him to briefly duck. He turned as she came up, smiling and splashing water at him.\n\nBriefly splashing her back, which she immediately declared cheating and unfair, he smiled and then turned to hop out of the pool.\n\n\"Come on,\" she said, pouting. \"Swim with me!\"\n\nHe sighed and turned, knowing he shouldn't, but relented despite his misgivings. His fears turned out to be unfounded, and they actually had a fun, non-sexual time in the pool, despite her complete nudity.\n\n\"Dakota coming over?\" he asked. She shook her head, grinning at him. \"She's got to pay attention to her current boyfriend,\" she said. \"So she tells me.\"\n\nHe sighed, growing confused. \"Why did she...\" he asked, trailing off.\n\nEmily smiled. \"She chose you as her first because she wanted it to be with someone who cared, someone who had done it before, and someone who would be gentle.\"\n\nHe nodded, realizing that it was actually a plausible reason. He remembered himself at her age and knew that he wouldn't have been nearly as gentle nor caring as he'd been the day before.\n\n\"The fact that you've got a big fucking cock doesn't hurt either,\" Emily said, grinning and diving under the water.\n\nHe groaned and immediately decided that he'd had enough swimming, hopping out and heading inside.\n\nEmily swam for a little longer before disappearing back up into her room.\n\nShe poked her head into his office later that afternoon as he finished up his work for the weekend and asked if he wanted her to just order some Chinese food.\n\nHe nodded and let her know that he was almost finished and that they could watch a movie while they ate.\n\nA little later, the two were sitting down enjoying their food and watching a movie, enjoying each other in silence. She'd chosen to sit next to him, but was dressed relatively modestly for her. She was wearing a new pair of panties and bra, and though she looked sexy, he wasn't feeling pressured or out of place with her.\n\nAs the movie wound down, she stood and cleaned up their mess. Arching his back and groaning, he raised his arms and closed his eyes, stretching widely.\n\nShe came around him then and slid down, her knees on either side of his hips and her arms wrapping around his neck.\n\n*****\n\nEmily\n\nShe leaned in and nuzzled his check as he wrapped his strong arms around her. Warmth flowed between the two of them and she sighed happily. She definitely intended for it to be a short hug, but something stopped her. She felt both of his hands slide down to her hips as she sat back, smiling down at him.\n\nA telltale prodding began to push at her panties, and she smirked, reaching down and adjusting him so that it wasn't uncomfortable for him.\n\n\"That was fast,\" she said, looking down. \"We just started hugging.\"\n\nHe smirked at her. \"Well who has been taunting and tormenting me all day. I could barely control myself with you flaunting these curves at me.\"\n\nShe looked at him innocently. \"Why Daddy, whatever do you mean?\"\n\nHe tickled her briefly, causing her to buck and laugh, and then the two settled back down. She glanced down, and then back up at him. Her panties had been pushed to the side by his erection, which was gently prodding at her slit.\n\nShe sighed and started to rise, but felt a gentle pull against her hips as he gripped her tightly. Sighing, she slid down, feeling him slide up her pussy, the tip of his cock pushing against her clit and eliciting another moan.\n\nShe leaned forwards and gently bit into his neck, stifling another moan as he slid up the front of her pussy, his hands gently pulling at the soft flesh of her womanly curved hips.\n\n\"So close,\" she moaned, grinding down on him and fully expecting his cock to slide in.\n\n\"Whoa, whoa, whoa,\" he stammered, pulling her hips back. His cock had contorted weirdly though, and hadn't slid in. She sighed, standing immediately and shaking her head.\n\n\"I'm sorry, Daddy,\" she said. \"I... I didn't mean to push things.\"\n\nHe stood and adjusted himself, pulling her into a hug and led her upstairs to her room.\n\n\"Get some sleep, baby,\" he whispered.\n\nShe nodded, and slid into bed. A few minutes of tortured silence later, she heard him lock the door and then climb the stairs and close the door to his own room. She sighed and looked at the ceiling, figuring she was in for a night of tortured dreams. Something was keeping her awake though, and no matter how she tried, she couldn't fall asleep.\n\nShe stood, thinking she'd go downstairs and grab a snack, but when she went to the hall, she saw light coming from beneath her father's door.\n\nTiptoeing forwards, she crept up to his door and quietly listened. She didn't hear anything, and gingerly began to turn the nob. Slowly, she pushed it open and peered in. Her father looked up from a book he'd been reading and smiled.\n\n\"Can't sleep either?\" he asked.\n\nShe shook her head. \n\n\"Wanna talk?\" he asked.\n\nShe smiled and tiptoed quietly in, sliding in bed beside him and nuzzling up against him as he turned out the lights. \n\nThey spoke quietly, in hushed tones. First about not being able to sleep, and then about Dakota, and his work. She noticed that the two of them were slowly sliding closer to each other, almost as if it were automatic. He slid his arms around her waist and pulled her to him.\n\n\"You think we'll ever be able to be in the same room and not be turned on by each other again?\" he asked.\n\nShe smiled in the darkness. \"I don't know,\" she said honestly. \"Are you turned on right now?\" she asked.\n\nHe chuckled and shrugged. \"I better not answer that.\" He squeezed her tightly and kissed her forehead. She smiled, closing her eyes and enjoying the warmth of their bodies and listening to the rhythm of his breathing as sleep claimed the two of them.\n\nShe awoke in the middle of the night, glancing briefly at the clock and then turning back over and feeling for her father. He turned over to face her in the darkness and reached for her, pulling her closer. Nuzzling his chest, her shoulder in his armpit, she sighed and began to idly play with his chest hair.\n\nHis other arm came over her body and began to play with her braid. She smiled in the darkness and brought her leg up, laying it across his. She moved too far however, and felt his very real erection.\n\nShe knew she should move her leg, but couldn't. It felt electric underneath her. She gently raised her head and leaned up in the darkness, her lips finding his cheek. He turned and pressed his lips to hers, causing her to whimper as she felt her pussy immediately dampen.\n\nShe fought for a few seconds to stave off her desires, but ultimately failed. Sliding her leg completely over him, she slid down on top of him and leaned down to kiss him more, her lips hungrily searching for his. She pushed her tongue into his mouth, squealing in excitement as he began to return the affection with his own lips and tongue.\n\nGroaning in wanton desire and pleasure, she clutched at his face as his hands wrapped around her waist and pulled her tightly against him. His erection was pushed into her thigh, so she quickly shifted it over with her leg. They both groaned as his cock pushed against her panties.\n\nShe lifted herself slightly up and reached back to undo her bra, freeing her breasts and bringing them back down against his chest, relishing in the warmth of the skin on skin contact.\n\nHe moaned quietly in the darkness as she wriggled against him, forcing her hips down again and again against his frighteningly hard erection.\n\n\"God, Emily,\" he groaned, shaking his head against hers as she continued to hurriedly kiss him. \"We can't do this,\" he pleaded.\n\nShe shook her head. \"We shouldn't do this,\" she said, but continued to force her hips down, his cock pushing again and again at her entrance.\n\n\"God,\" he repeated. \"I'm so goddamn turned on, I can't think straight. You'll have to stop this for both of us.\"\n\nShe nodded. \"I think I will,\" she said. \"We can't... fuck,\" she moaned, feeling his cock slide upwards against her clitoris again.\n\n\"We can't do this,\" he said again, reaching down and helping her thrust her hips against his cock with his hands.\n\nThen, suddenly, they were both gasping in amazement. Her panties had slid just enough to the side for his cock to slide slightly inside. She immediately knew that there was no going back. She suddenly knew that all of her experiences in California were nothing compared to what was about to happen.\n\n\"Oh fuck, Daddy,\" she moaned, feeling the tip of his cock slide gently into her.\n\nHe immediately pulled back, and she felt him slide out, but then she ground herself down again, and he slid completely into her. She moaned loudly, an orgasm immediately slamming into her and forcing her pussy to clench tightly down on her father's cock. He cried out in alarm and surprise. \n\n\"Oh fuck!\" he yelled, his hands pulling forcefully at her hips as she fought to get a breath, her muscles tense and unyielding as her pussy convulsed again and again, bliss washing over her. Fingers of pleasure flooded her body as waves of ecstasy washed over her. The cock inside of her was punished by her tightly spasming cunt, and she slowly ground her hips against him.\n\n\"Fuck!\" she finally managed to yelp, reaching down and sliding her panties to the side even more before furiously beginning to gyrate on him. She didn't lift up very much with each thrust, just thrust forwards swiftly and roughly.\n\nHe forcefully gripped her soft hips and in the pale light of the moon, she looked down and saw his face showing the complete pleasure that he was in. She cried out in happiness and slid up his shaft before sliding forwards and backwards again, her orgasm slowly winding down.\n\n\"I love you so much,\" she said, falling down into him.\n\n\"I love you,\" he answered. She spun over in the bed, pulling him on top of her in one swift movement.\n\n\"Fuck me,\" she begged. \"Please, fuck me Daddy.\"\n\nHe groaned and began to thrust into her. \"God, I've wanted you so much,\" he admitted. She cried out in pleasure, his cock thrusting deep into her as she clutched desperately at him, as if he would disappear if she let go for even a second.\n\n\"Please don't stop fucking me, Daddy,\" she moaned. \"I want to feel you cum inside my pussy,\" she begged.\n\n\"God,\" he cried out, thrusting again and again. \"You're so fucking sexy, Emily,\" he whispered. \"I can't believe we're doing this,\" he said.\n\n\"Fuck,\" she moaned, the taboo nature of the situation driving her closer to another orgasm.\n\nYour own father is fucking you, and you're fucking enjoying it! The thoughts slammed into her and pushed her over the edge of another orgasm.\n\n\"Fuck,\" he groaned thrusting deeply into her again. \"I'm gonna...\" he muttered, but only managed to cry out in pleasure as he lost the ability to speak. His cock plunged in and out again and again, the shaft forcing electric fingers of pleasure through her pussy as it convulsed down again, this time even harder than the first as every muscle in her body seized up. Gasping for breath a second later, she felt another wave of contractions and then felt her father begin to cum inside her.\n\n\"Yes, Daddy, yes, yes, yes, yes, yes!\" she said, over and over again, her pussy quivering and convulsing as her father's cock sprayed his cum deep into it again and again. He cried out something unintelligible and thrust deeply into her, his fingers gripping her hips roughly as he came.\n\n\"Goddamnit,\" he cried out, sliding out and then back in again and again. She seemed to finally come down off of her cloud but clutched desperately at him.\n\n\"Please, Daddy,\" she moaned. \"Leave it in me as long as you can. I love the way you feel inside of me.\"\n\nHe groaned and collapsed down on her. She momentarily couldn't breathe, but he lifted up slightly and she clutched at him again. She loved the way he felt on top of her, and realized just how much she'd wanted this to happen. All of the anguish and denial that she'd felt was gone. She realized that she'd wanted to fuck her father for a while now, and they'd both been driving themselves insane.\n\n\"That was the best fucking orgasm I've ever had,\" she said, panting and still clutching at him.\n\nHe nodded. \"Me too,\" he said, his chest heaving. He started to lift off of her, but she pulled him back down.\n\n\"Don't take that cock from me,\" she pleaded. \"We've been denying ourselves so long, Daddy.\"\n\nHe nodded, his breathing eventually slowing.\n\nShe began to kiss his neck, gently pressing her lips to his skin as they fought to control their breathing.\n\nFinally, she released her grip on him and let him slide off of her. She immediately slid out of bed and into the bathroom, cleaning herself up. She came back in, and saw him standing in front of the window.\n\nComing up behind him, she sighed when she saw a single tear run down his face.\n\n\"Daddy,\" she said, coming up and turning him towards her. \"I wanted this. I needed you.\"\n\nHe sighed, shaking his head. \"I can't believe I did that.\"\n\nShe slapped him gently. \"Listen to me, damnit. You're going to accept that we both wanted this, and it was okay.\"\n\nHe sighed and turned back towards the bed. \n\n\"I wanted you to fuck me,\" she said. \"You gave me the best orgasm I've ever had.\"\n\nHe still didn't respond.\n\n\"Daddy, please don't do this to me. You're making me feel like I did something wrong,\" she said.\n\nHe shook his head and pulled her to him. \"I'm supposed to protect you, not force myself on you.\"\n\nShe sighed and pulled him to the bed. \"Daddy, you didn't force yourself on me, you know that.\"\n\nHe didn't say anything, so she pulled him to her and let him be for a few minutes.\n\n\"Did you enjoy it?\" she asked eventually.\n\nHe didn't respond. \n\n\"Daddy,\" she said. \"Answer me.\"\n\nHe sighed. \"Obviously, I did.\"\n\n\"That settles it then,\" she said, stroking his head. \"I enjoyed it, and so did you. I refuse to believe that something we both wanted and enjoyed was a mistake.\"\n\nHe nodded, but didn't say anything. She let it go, promising to talk about it tomorrow.\n\nSleep claimed them quickly.\n\n*****\n\nJohn\n\nHe felt something incredible as he forced his eyes open. He looked down and saw Emily's blonde braids bouncing at his crotch.\n\nHe groaned audibly and reached down, intending to pull her off of him, but he realized that she had taken him completely into her throat.\n\nMoaning and slurping, she extricated him from her mouth and throat and smiled up at him.",
        "\"Good morning, Daddy,\" she said.\n\nHe mumbled something unintelligible and shook his head.\n\n\"There are some rules to follow when I'm sucking your cock,\" she said, smiling playfully up at him. \n\n\"Rules?\" he asked, looking down at her incredulously.\n\nShe nodded. \"Rule 1, you have to cum in my mouth. I'll take it on my face occasionally if that's something you like, but I prefer to swallow it.\"\n\nHe groaned. \"Emily,\" he protested, trying to push her off.\n\n\"Rule 2, be as aggressive as you like with me. Force your cock down my throat, pull my hair, slap me. Whatever you like.\" She lowered her lips to his shaft again, and quickly swallowed him completely.\n\n\"Jesus fucking Christ!\" he said, arching his back as his daughter's lips pressed against the base of his cock. She moaned around his shaft, bobbing gently as she sucked, her tongue darting out to tickle his balls.\n\nShe extricated him again, a line of drool trailing from her lips to his shaft and caught her breath before continuing. \"Like I said, you can be as rough as you like. I don't have an \"upper limit\" as far as I know, and you can basically do what you like to me.\"\n\nHe groaned again as she briefly sucked him.\n\n\"Rule 3, don't ever deny me my load. I love to suck cock, and I'm going to suck yours whenever I goddamn well please,\" she said, lowering her face again and sliding his cock completely into her mouth and throat and back out swiftly. She repeated the maneuver five or six times before extricating him again and looking back up. The sounds her lips and throat were making while she was servicing his cock were incredibly sexy.\n\n\"Rule 4 kind of goes along with Rule 3, but learn to expect this every morning. Like I said, I love sucking cock, and now that I have one to suck, I'm going to be wanting to do it a lot more.\" She deep throated him again, despite his weak and half-hearted protests for her to stop.\n\n\"Cum in my mouth,\" she said. \"Fill your daughter's mouth with your sticky sweet cum, Daddy,\" she begged.\n\nHe cried out in pleasure as she began to stroke, latching her lips over the head of his cock and moaning in pleasure as he began to fill her mouth, groaning and twitching as she deep throated him a few more times, his seed spilling from the sides of her mouth.\n\n\"Oh my fucking God,\" he cried out, finally able to form words again as she slurped.\n\n\"Daddy, you taste so fucking good,\" she gushed, swallowing audibly and taking his shaft back between her lips to slurp more of his cum. She quickly slurped again and again, her tongue searching for his seed and coating his cock.\n\n\"Fuck,\" she moaned. \"That was so fucking nice.\" She lowered her lips down his shaft again, causing him to groan in pleasure. \n\n\"Jesus, Em,\" he groaned. \"You're too fucking good at that.\"\n\nShe snickered and took the compliment for what it was, but didn't slow her sucking and slurping, quickly deep throating again and again as if she were trying to get another load from him.\n\n\"God damn, do I love sucking your cock, Daddy,\" she gushed. He moaned in response.\n\nShe snickered and began to bob up and down on his shaft again as he looked down at her. He found himself enjoying the way her braids were bouncing, almost playfully as she performed this highly erotic and inappropriate act on her own father. For the next several minutes, she would alternate between ferociously deep throating, stroking, and sucking him.\n\n\"I can't fucking stop, Daddy,\" she moaned, her lips leaving his shaft for the briefest of moments. \"You've awoken the cum slut in me!\"\n\nHe groaned and slapped the sheets.\n\n\"Oh,\" she said, smiling and quickly taking him back in. She popped him out briefly though and looked back up. \"I think my Daddy might have another sweet load for me!\"\n\nHe nodded and shook his head immediately after, his emotions torn. This felt much better than anything he'd ever had before. Christine had sucked his dick maybe two times in their marriage, and here he was getting one from his daughter that blew her out of the water.\n\n\"You want to fill my slutty little mouth again Daddy?\" she asked, looking up and stroking him.\n\nHe grunted, but didn't answer.\n\n\"I can't wait to taste your delicious cum again. I love the way it tastes,\" she said, sucking him deeply.\n\nHe groaned.\n\n\"I love the way my Daddy's cum tastes, and I love the way it feels sliding down my throat,\" she said. \"It's so warm and yummy. I think you like it when you fill my mouth up with your yummy cum.\"\n\nHe squinted his eyes closed, desperately trying not to cum again.\n\n\"God I want you to cum so fucking bad, Daddy,\" she said. \"Fill my slutty mouth up. I'm going to be such a good little cocksucker for you too, Daddy. I'm going to swallow your cum whenever you want me to, okay Daddy?\"\n\nAgain, he grunted but didn't answer.\n\nA round of fast deep throating followed, and she pursed her lips at the tip when she finished, kissing it and stroking as she wrapped them around it.\n\nHe cried out again, and suddenly felt another load burst forth from his cock head. Emily whimpered in surprise as he filled her mouth. His only daughter swallowed his load audibly, moaning in pleasure and whimpering around his shaft as he pumped into her again and again.\n\nHe was absolutely dumbfounded that he'd been able to cum again, and was amazed at the quantity. He figured that his balls would be two hollow sacks by the time Emily was done with him.\n\nHis emotions warred within him though, even as he gasped in pleasure. He felt like he was taking advantage of his daughter, even though she was the one that had woken him up like that.\n\nHer lips were sliding tightly down his shaft again, her moaning continuing as he felt her swallow again and again around his cock. She withdrew him for a second and he felt her warm tongue across his pubic bone and his balls, searching for errant sprays of cum no doubt.\n\n\"Fuck,\" she moaned, sucking him in again. \"I could do this all day, but I know you've got to get to work.\"\n\nShe slid out of bed and pulled him with her towards the shower.\n\nReaching in, she turned on the water and pulled him in with her, quickly grabbing his soap and stroking his aching cock.\n\n\"God, Daddy,\" she said, sighing happily. \"I fucking love sucking your cock.\"\n\nHe shook his head and turned away. \"Emily, we've got to stop this.\"\n\nShe spun him back around and shook her head. \"I'm definitely not stopping now and neither are you. Get it through your head, Daddy. We're lovers now and you need to enjoy this!\"\n\nHe sighed, seeing that he wasn't going to convince her.\n\n\"I'm going to be wanting lots and lots of sex from you, Daddy,\" she said. \"I like to be fucked, fast and hard.\"\n\nHe sighed. \"Emily, we...\"\n\n\"Daddy,\" she said, turning him towards her. \"I know you liked fucking me. I could feel how much you love me when we were making love. It was honestly the best sex I've ever had and I'm not going to let you take it away.\"\n\nHe couldn't deny that she'd felt amazing, and the feelings of love he had for her were multiplied when they were together. He sighed and shrugged. \"I'll try baby.\"\n\nShe smiled and hugged him. They finished their shower and she disappeared into her room to get dressed for school while he dressed for work.\n\nShe saw him again after making the two of them breakfast, and smiled sweetly at him.\n\n\"Morning Daddy,\" she said, as if the previous night hadn't happened.\n\nHe sighed. \"Morning Emily.\"\n\nShe frowned and looked at him as he fixed a plate. \"Do I need to suck your cock again, you seem to be in a bad mood.\"\n\nHe choked on a bite of food and spat it out, drawing a smile and laugh from her.\n\n\"I thought not,\" she said, winking. She thankfully behaved herself while they ate, and even gave him a benign kiss goodbye as he left for work.\n\nHe said a quick good morning to his secretary and immersed himself into his work, his thoughts straying to last night and this morning's events, despite his efforts to keep them away.\n\nHe couldn't deny that he really, really wanted it to happen, but he still felt like a complete shit. Her blowjob this morning was incredible, and he honestly didn't think he'd be able to deny her doing it to him again.\n\nLooking at the clock, he sighed and dove into his work.\n\nA little after lunch, he heard his secretary speaking.\n\n\"Well hi there!\" she said. \"I haven't seen you in forever! Coming up to say hi to the old man?\"\n\n\"Yep, figured I'd drop by in my free period and check up on him, seeing if I can't cheer him up!\" It was Emily. He groaned and shook his head.\n\n\"He's in there, just go on in,\" his secretary said.\n\n\"Thanks!\" came the expected reply.\n\nShe opened the door and he immediately mouthed, \"No!\" at her. Giggling, she shut the door behind her and walked slowly towards him.\n\n\"What did we talk about concerning the rules? You won't deny me,\" she said.\n\nHe groaned and looked out the very obvious window, as if some window washer would be waiting outside.\n\nShe grinned and came around, falling quickly to her knees and sliding underneath the foot area of his large desk.\n\n\"I like it under here,\" she said, pulling his feet towards her. \"Maybe you can bring me up here and keep me under the desk all day, letting me suck that beautiful cock of yours.\"\n\nHe sighed and shook his head. \"You shouldn't be doing this Em.\"\n\nShe smirked and pulled him underneath the desk, quickly fumbling with his zipper. He groaned and felt himself begin to swell as she found his cock. Cursing himself, he swore silently at his dick and begged it to go back to sleep.\n\nIt ignored him and soon he felt her warm lips surround his shaft and begin to slide back and forth on him.\n\nThe door opened and a colleague, Martin, poked his head in. He fought to maintain his composure, despite his daughter being on her knees and still sucking his cock.\n\nHe reached down and pushed her head away futilely.\n\n\"Hey buddy, wanna do lunch tomorrow?\" Martin asked.\n\nHeroically, John smiled and maintained his composure. \"Sure thing.\"\n\nMartin nodded, but didn't leave, continuing the conversation and asking him about a current work thing they were working on.\n\nEmily deep throated him, a gentle sucking noise emanating from underneath his desk. If his colleague heard it, though, he didn't say anything.\n\nEventually, Martin left and shut the door behind him, allowing John to push away from the desk, though Emily maintained her lip lock on his cock.\n\n\"Give me that load,\" she begged, looking up at him.\n\n\"Are you insane?\" he asked, but fell back in his chair as she lowered her lips and deep throated him again, sliding completely down the base.\n\n\"You want to fill your slutty daughter's mouth with your cum, don't you,\" she said, looking up at him.\n\nHe grunted, feeling his orgasm building.\n\n\"Stand up,\" she ordered. He found himself complying with her, despite his internal protests.\n\nShe sucked him a few more times and then fell back on her feet, looking up at him. \"If you want to cum in my mouth, you'll have to do it.\"\n\nHe groaned, desperate to cum but feeling the orgasm subside slightly.\n\n\"Fuck my face, jerk yourself off, however you want to do it, but you're going to make yourself fill up my cum hungry mouth,\" she said, opening her mouth obediently and twirling her braids.\n\nHe groaned and glanced towards the door. \"If someone comes in right now...\" he complained.\n\n\"I guess you better hurry,\" she said.\n\nHe smirked, but felt something come over him. Leaning forwards, he gripped the back of her head and marveled at the look of excitement that came over his daughter's face. He pulled her forwards and onto his cock, part of him loving it, part of him hating himself.\n\nShe sucked, but didn't move, so he thrust, enjoying the feeling of her warm lips and tongue working furiously over his shaft. His orgasm was close and wouldn't take long, but he wasn't there yet.\n\nFrustrated that she seemed determined to make him do it, he thrust deeper this time, and began to form a rhythm. She whimpered softly, grinning up around his shaft as he slid deeper and deeper, his hand pulling harder and harder.\n\nHe pulled out for a second, concerned that she couldn't breathe.\n\n\"Please don't stop, Daddy,\" she moaned. \"Cum in my mouth please. Be as rough as you want. Make me swallow you, shove that gorgeous cock down my throat.\"\n\nHe moaned at her filthy words, and hated how they affected him. He pulled roughly, causing her to squeal in excitement as his cock pushed into her mouth. She helped him slightly, working her mouth back and forth until he slid completely into her throat. He couldn't help himself, and held her there for a second. She began to extricate herself off of his cock, but he pushed her back down, causing her to whimper and moan in pleasure.\n\nHe released her, and she quickly extricated him, taking enough breaths to sate herself before he plunged in again and down her throat.\n\nHe felt his orgasm peak then, and held her down again, his cock completely inside of her as he began to pump cum into her mouth. She whimpered as he pumped again and again into her throat.\n\nFinally, he released her head and she fell back, sighing quickly as long strings of saliva hung between them. She nastily began to slurp them up as she slid forwards and began to slurp at the remnants of cum on his cock.\n\nAfter a few long moments of lovingly sucking and slurping at him, she tucked his cock back in his pants and zipped them back up. Standing, she retrieved a mirror from her purse and used some tissue to clean herself up.\n\n\"Thank you, Daddy,\" she said, heading to the door. \"I'll see you again tonight!\"\n\nJohn groaned, laying his head down on his desk and wondering what he'd started.\n\n\"I think I've unleashed a beast,\" he said as she opened the door.\n\n\"Nah, you've just unleashed me,\" she said, smiling sweetly. \"Love you, Daddy. Thanks again!\"\n\nHe waved, but groaned internally.\n\nHe watched as she walked down the long hallway leading directly away from his office, and he couldn't help but admire her ass as it swayed in that particular womanly manner. At the end of the hallway she turned and looked back, smiling and mouthing, \"Naughty, naughty,\" at him.\n\nHe chuckled and went back to work, wondering just what the hell the evening, let alone the rest of the week, had in store for him. "
    ],
    "authorname": "Mentalcase",
    "tags": [
        "father daughter incest",
        "father daughter sex",
        "incest",
        "blowjob",
        "cumshot",
        "virgin",
        "swallow",
        "exhibitionism",
        "voyeur"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/emily-untethered-ch-05"
}