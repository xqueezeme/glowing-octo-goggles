{
    "title": "A Handyman's Memoir Ch. 41",
    "pages": [
        "\"What the fuck did you do?!\" Lee said angrily. \"I'm just getting used to the fact that my daughter has a girlfriend, which is totally cool by the way, and now she wants to share her with me at an orgy?!\"\n\n\"Oh boy,\" I said.\n\nI thought Emma would be cool with what I had told her and how we left things, but hey, she's young, and knowing what to say and when to say it is a learned skill that takes time. And Lee, I really thought she'd be happy that I'd helped to break some of that ice she had been talking about, but some ice needs to thaw on its own I guess.\n\n\"I'm sorry Lee,\" I said dejectedly. \"They were asking about parties and . . . I don't know, the conversation went were it shouldn't have gone I guess. Emma asked about you . . . she was cool with it though. She said she was worried about you after the divorce, and she's glad you're having fun again. I didn't tell her any details or anything. It was nothing I thought you wouldn't tell her yourself if she'd asked. You guys are pretty open these days.\"\n\n\"Fuck,\" Lee said, and she finally sat down next to me on the porch futon. \"Being 'open' isn't as easy as it sounds. Kids are a trip I'll tell ya.\"\n\n\"I'll try and do better, I'm sorry,\" I said. \"But you guys all read me like a book, and I've always hated lying. But it's my fault. I could have gotten out of that conversation if I'd tried.\"\n\n\"Did you invite them to an orgy?\" Lee asked, looking at me like I was a nut job.\n\n\"No, nothing like that was ever said. At least I don't think so,\" I said. \"They did sorta say they'd like to go to one, with each other. And then the thing about you saying it was 'good to fuck in front of her', you know, last week when she walked in on us? I don't know, the way the conversation went she started putting it all together. I should have shut it down though. It was stupid of me.\"\n\n\"I'm as responsible as you are,\" she said, sounding calmer. \"I guess it's just part of the process \u2014 having an open, adult relationship with them. But sharing her girlfriend with me . . . that's just . . .\"\n\n\"Is she hot or is she not?\" I said, smiling and trying to lighten the mood.\n\n\"Ha!\" Lee said, with her first smile. \"She's hot, that's for sure.\"\n\n\"She thinks you are too,\" I said, still smiling.\n\nLee looked at me with a look of utter bemusement and wonder. \"Where did my life go off the rails . . . Oh yeah! When you moved in!\" she said, giving my arm a painful pinch. \"All I ever wanted was a nice quiet heterosexual relationship with a kind, gentle man . . .\"\n\n\"What, I'm not kind and gentle?\" I said with a smile.\n\n\"Fuck!\" she said quietly, shaking her head. \"What's that old saying \u2014 you live in the fast lane you die in the fast lane?\"\n\n\"The slow lane's for old ladies baby,\" I said, and I kissed her.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nA couple days later Lee was still confused and wondering how to deal with the situation. She hadn't seen Emma much to talk to, and was clearly still conflicted about their 'open' relationship.\n\n\"You wanna talk to Ally again about her experience with her daughter?\" I asked.\n\n\"No, I don't think so,\" she said. \n\n\"You wanna lick Lexie's pussy?\" I asked, figuring sometimes it's good to rip the band-aid off quick.\n\n\"Steve!\" she said, and I could see on her face that she didn't want to answer.\n\n\"If you were a guy I'd already know the answer to that question,\" I said. \"So it's no big deal if the answer's yes. It doesn't mean you have to do it.\"\n\n\"Yes! Okay? Are you happy?\" she said. \n\n\"I'm always happy, and so are you,\" I said. \"That's why I love you.\"\n\n\"I know,\" she said. \"I'm just tense. I need to get past this.\"\n\n\"You need to sit down and talk to Emma,\" I said. \"Text her and tell her you need a couple hours. Tell her you can't talk about that stuff anymore, and resume the mother/daughter thing, or tell her you're gonna let things flow, and let the chips fall where they may. I doubt if anything bad will come out of either decision. Life has a way of working out, especially in happy families like you guys.\"\n\n\"Okay Yoda. Yoda with a big cock,\" she smiled. \"Help me with this then, the thing that's really twisting my brain. Incest. It makes me feel ill just thinking about it, and this is all perilously close to it.\"\n\n\"Ah, okay,\" I said. \"Now were gettin' somewhere. You know, there's no rules that say everything's gotta be wide open. Set up some boundaries. Just watching your kid have sex isn't incest is it? I don't think of it that way.\"\n\n\"Having not done it yet, I'm not sure how I'd feel about it,\" she said. \"I've certainly heard her having sex, and that doesn't bother me. I find it strangely comforting, knowing that she's feeling that kind of pleasure and happiness, when the world's so full of stuff that can make you feel rotten.\"\n\n\"Good, good,\" I said, \"Okay, so would adding the visual to the audio be that much different, that much of a leap? As it is now you've got a sheetrock wall between you, or a wooden door, but you can hear her, and you're picturing what's happening, and you're cool with it. What's really so different about seeing it instead of picturing it? I don't know about you, but I find watching people have sex incredibly beautiful. Especially if the participants are beautiful.\"\n\n\"I do to,\" she said, smiling a little. \"Are you trying to sell me on something here?\"\n\n\"No, we can talk about the bad side too,\" I said. \"Is there one?\"\n\n\"Probably a lot of things,\" she said. \"But I can't think of any.\"\n\n\"There ya go,\" I said with a smile.\n\n\"Wow,\" she said with a big sigh. \"This is nutty. I'm sittin' here taking advice from crazy orgy man himself.\"\n\n\"Hey, I'm not trying to steer you wrong,\" I said. \"I'll help you get out of this if that's what you want. I'll talk to Emma.\"\n\n\"I know,\" she said, snuggling against my arm. \"So . . . boundaries . . . what would I say? I won't touch you and you can't touch me? Sounds kinda childish.\"\n\n\"It doesn't matter what it sounds like \u2014 she'd understand,\" I said. \"She might feel the same way about it. You should sit down and talk to her. It might lead somewhere, or it might lead right away from it all. You're both thoughtful, loving people, and it'll go where it's supposed to go. You know, it doesn't have to be a big orgy party either, although having more people participating might actually make it easier. But if you want, you could come over next time she and Lexie are here and join in.\"\n\n\"Oh there's gonna be a next time with them huh? Jesus, you are the luckiest dog in the kennel,\" she said, with another painful pinch of my arm. \"No, I think having more people around would definitely be better. There could be more 'detachment' if I find I need it.\"\n\n\"So, hypothetically, just spit-ballin' here, if you both decide to do this, where would you wanna do it and who would you want to be there?\" I asked. \"Would you want me to organize something here?\"\n\n\"No, somewhere neutral, but nice,\" she said. \"Lindsey's I guess. Wow, that place would blow those kids minds.\"\n\n\"That's what it's all about right?\" I said.\n\n\"Yeah,\" she said, with a smile that looked like she was remembering how her own mind was blown at Lindsey's.\n\n\"Adult fun for adults of all ages,\" I said, and Lee shook her head as she smiled some more.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nMy guitar lesson the next week was fun. Lexie was a good, lighthearted teacher who really knew her stuff and made it fun to learn. She showed me two new strumming patterns to work on and a new chord shape to get used to. I was practicing every evening, and really happy with my progress. After the lesson she got flirty.\n\n\"It's too bad Emma had to work, but I could stay a little while,\" she said, looking nearly irresistible.\n\n\"I'd love to sweetheart, but I wouldn't feel right without Emma here,\" I said.\n\n\"Yeah I know,\" she said with a sigh. \"Me neither.\"\n\n\"You guys good?\" I asked.\n\n\"Yeah,\" Lexie said, with a sweet smile that said a lot. \"I've never had a real relationship with a girl before \u2014 it's always just been sex fun, you know? But Emma, she's . . .\"\n\n\"Yeah, I know,\" I said. \"She's a real catch. You're a lucky girl, and so is she.\"\n\nLexie looked dreamy-eyed for a few moments, thinking about Emma. \"Hey, you should come see the band again next weekend,\" she said. \"We're playing that festival up at Silver Stage. Emma's coming up. You ever been there? It's really cool.\"\n\n\"Oh, Yeah, I've been there,\" I said. \"I love that place. I went to the fest they have later in the summer last year with a woman friend of mine. We met a real hippie girl named Peep and she spent the whole weekend with us in my trailer. Needless to say, it was quite enjoyable.\"\n\n\"Yeah, that place is quite the party,\" she said. \"Your trailer looks really cool. What's it like inside?\"\n\nI took her outside to have a look. I built a simple open carport to keep it and my truck under in the winter, and I was able to leave the windows in it open, so it was nicely aired out.\n\n\"Oh my god, this is awesome,\" Lexie said, and she flopped down on the bed, her silky long hair going every which-way. She had that 'I sure wish Emma was here so we could play' look on her face again.\n\n\"It's an old Airstream from the fifties,\" I said. \"It is pretty cool, I should use it more.\"\n\n\"Silver Stage!\" she said. \"Bring it!\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nLee and I drove in to the festival campground amidst the hippified youth of upstate New York and set up our little trailer. She had been wanting to see Lexie play with her band, the weather was perfect, and she was able to swap work days with a co-worker at the hospital to get a couple days off.\n\n\"God, this is a young crowd isn't it? I feel old,\" she said, looking around at our neighbors.\n\n\"Don't worry, we'll be far from the oldest,\" I said. \"A lot of older dead-heads like this place. It's a nice mix.\"\n\nWe set up the awning and the battery powered twinkle lights, broke out some chairs and sat down with a beer.\n\n\"This is so cool,\" Lee said contentedly.\n\n\"The next time you can string three days in a row together we'll take it up to the Adirondacks,\" I said.\n\n\"Oh!\" she said, looking very happy.\n\n\"You guys!\" Emma said, waving both her arms as she walked towards us with Lexie past some rickety looking tents. \"This is so awesome! I've never seen it all set up before! I love this thing! It looks like a little space ship!\"\n\nWe all hugged and Emma took two beers out of the cooler.\n\n\"You know I'm gonna be drinking, right?\" Emma said, looking at her mom.\n\n\"I know honey,\" Lee said. \"I was twenty once too you know.\"\n\nEmma's mouth curled up in a 'my mom's so cool' kind of way. \"Lexie's band's got a big motorhome,\" she said. \"One of the guys got it from his uncle for the weekend. They gave me and Lexie the nice bedroom.\"\n\n\"Well that was nice of them,\" Lee said, and she looked over at me, suddenly horrified at the various scenarios that could play out in there. \"I may need Yoda later,\" she said quietly to me.\n\n\"Yoda?\" Emma asked her.\n\n\"Just be careful girls, okay?\" Lee said to them. \"Have you got . . . protection?\"\n\n\"Mom!\" Emma said. \"I thought we were all gonna be cool here. Like adults?\"\n\n\"We are honey, I'm sorry,\" Lee said. \"I am still your mom though.\"\n\n\"Your mom's cool, don't give her a hard time,\" Lexie said.\n\n\"I know,\" Emma said with a sweet little smile.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe first band started on the big stage, and music drifted through the wooded setting. As darkness fell the partying kicked into high gear. At one point, when Lee and I were taking a break from the main stage and sitting at the trailer, a fleshy young woman wearing nothing but well worn white cotton panties drifted by, doing some sort of a modern dance. She danced her way between the neighboring tents, and disappeared into the darkness.\n\n\"I can see why you like this place,\" Lee said with a smile. \"I didn't think this kind of free-spiritedness still existed.\"\n\n\"I know, it's kinda nice isn't it?\" I said. \"You can kinda do what you want, and everybody's happy.\"\n\n\"A hit of good acid doesn't hurt,\" she laughed. \"Do they even call it that anymore, or am I showing my age?\"\n\n\"Yeah I think they do,\" I said. \"Don't tell me you dabbled?\"\n\n\"Maybe,\" she said slyly.\n\n\"That girl looked more like the mushroom type,\" I said.\n\n\"She didn't have any pockets, so she must have ate 'em all,\" Lee laughed. \"That would explain things.\"\n\n\"You'll never guess what I got into in Baltimore on the way up here this spring,\" I said. \"Opium.\"\n\n\"No way!\" she said, looking shocked. \"Holy shit Steve, that's bad stuff, like really addictive.\"\n\n\"I know, don't worry, it was a one time thing,\" I said. \"I can't even say for sure if I did it voluntarily. It was pretty wild, that's for sure.\"\n\nI told her the story of how it happened\u2014the grief for Connie that suddenly overtook me when I was alone on the boat, and my time with Tiamo.\n\n\"Well I'm glad you were smart enough to get some counseling, but holy shit! That's fuckin' wild! You sure do fall into some situations, don't you?\"\n\n\"Yup,\" I said. \"I'm in one now that's pretty great too.\"\n\nI leaned over and kissed Lee, and she responded the way I'd gotten used to when she had a pretty good alcohol buzz going.\n\n\"Should we fuck right here with everybody watching, or go inside?\" she asked, her light blue eyes flashing with horniness.\n\n\"Ooo! I see the exhibitionist in you is still alive and well,\" I said. \"I think full on fucking's probably better done inside.\"\n\n\"Aww! You're no fun,\" she said with a wink.\n\nShe took my hand, pulled me up out of my chair and pushed me into the trailer.\n\n\"Naked mister!\" she commanded.\n\n\"You don't want just a quickie?\" I asked.\n\n\"Naked mister!\" she said even louder as she stripped off her shorts and t-shirt. She left her sneakers on and looked like one of those cute porn stars that are too old to play schoolgirls but play schoolgirls anyway.\n\nLee was revved up and ready, and it didn't take long for both of us to have a big, grinding orgasm. She was laying on top of me with my cock still in her when Emma showed up.\n\n\"Lexie's band's on in about an hour,\" she said as she walked up the steps and through the open door. She stopped dead when she saw us. \"Fuck mom! What are you turning into a nympho or somethin'?\"\n\n\"Hi honey,\" Lee said casually, looking back over her shoulder at Emma. \"You havin' as much fun as I am?\"\n\n\"Apparently not!\" Emma laughed. \"You know anybody could have walked in here. The door's wide open.\"\n\n\"Well a naked girl walked by earlier, so I don't think anybody really cares, do they?\" Lee said as my cock slipped out of her, and she rolled onto the bed next to me. \"Come here, lay with me.\"\n\n\"Now you want to do this?\" Emma asked. \"Lexie's band's on in an hour, and I thought you were freaked out by all this anyway.\"\n\n\"I don't wanna do anything!\" Lee said. \"I just want you to sit with your mother. I'm worried about you.\"\n\n\"You're the one having sex at a music festival, and you're worried about me?\" Emma laughed as she walked over.\n\nLee patted the bed next to her, but Emma climbed over both of us and squeezed in on the other side of me. I shifted tighter to Lee to give her some room.\n\n\"You're all sticky,\" she said, putting her small hand on my half-wilted cock.\n\nI saw her look at her mother as she touched it, and Lee looked at her. Emma took hold of it and squeezed it, looking at it in fascination as it started to grow again. She scrunched her body down and kissed it lightly, her tongue came out and swirled around the tip, and she smiled.\n\n\"You okay mom?\" she asked, looking at Lee, who was looking on with fascination of her own.\n\n\"I'm okay,\" she said quietly.\n\nEmma took me deeper in her mouth and moaned, and gave me a lovely slow, sensual blow-job.\n\n\"Sorry Steve,\" she said as she stopped, \"but I've gotta go find Lexie. Don't forget, she's on in like forty-five minutes. I'll meet you guys at the soundboard in half an hour, okay?\"\n\n\"Okay sweetie,\" I said as she climbed across us.\n\n\"Bye honey\" Lee said as she left. \"My baby's not my baby anymore,\" she said to me. \"That's the hardest thing to get used to.\"\n\n\"She's a beautiful woman now,\" I said. \"You did a wonderful job with your girls.\"\n\n\"I guess,\" she said. \"For the life of me I don't know what I'm doing now though.\"\n\n\"What did you feel? Was it awful?\" I asked.\n\n\"No. It was beautiful,\" she said. \"That's what confuses me. Parents are conditioned to not like it when they see their kid having sex. They're supposed to yell and scream, and tell them not to do it. I know what you're gonna say, she's not a kid. I know she's a woman now, it's just a weird transition, especially when it's happening right there in living color in front of you, ya know?\"\n\n\"Do you remember Ally talking about how she wished she had learned when she was her daughter's age how wonderful and beautiful sex can be?\" I asked. \"That's what you're giving Emma and Becka. Their lives are going to be rich with vibrant sexuality, without all the ridiculous guilt. I wish I had learned all that at twenty myself.\"\n\n\"Me too,\" she said. \"And that's the part Ally told me that I've been trying to keep in mind. You certainly made up for lost time though. God!\" she laughed.\n\n\"You're not doin' so bad yourself, Miss Erotic Art Model Of The Year,\" I laughed.\n\n\"God that was exciting!\" she said.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nLexie's band killed it. The crowd loved them, and their deep funk hip-hop groove had everyone moving. Up near the stage, where we were with Emma, it was a wild dancing frenzy, the likes of which I hadn't seen in a while.\n\n\"Fuckin' bass player's hot man,\" a very high guy next to me said, yelling to be heard. \"Some lucky guy's tappin' that.\"\n\n\"He really is a lucky bastard!\" I yelled over towards him with a smile, and Lee looked up at me and shook her head with a smile of her own.\n\n\"I love hot bass players that can really play man! Catherine Popper, Tal Wilkenfeld. Damn, this girls got it too, she's fuckin' awesome!\" he yelled.\n\nLexie's deep groove overtook him and he was swept away in an odd bobbing and weaving dance, and disappeared in the happy crowd. Lee laughed. I put my arms around her and held her in front of me.\n\n\"You know, I used to love these things when I was young and free,\" she said loudly into my ear. \"This brings back good memories.\"\n\nThe band got a huge ovation when they finished, and Lexie's smile lit up the stage.\n\n\"Oh my God!\" Emma said, her eyes misted with tears, proud of her lover. \"Look how happy she is!\"\n\nLexie saw Emma cheering and her smile grew even bigger.\n\nEmma left us to catch up with the band, and Lee and I went off in search of food. With two bowls of shrimp gumbo over rice in our hands we went back to the trailer to relax. It was spicy stuff and the beers went down easy.\n\nThe topless dancing girl walked by again, and she had a tired looking bra on to go with her old cotton panties.\n\n\"How come you got dressed?\" I asked.\n\n\"I was cold,\" she said, looking glazed. \"I liked havin' it off better though.\"\n\nShe looked down at the ground, swaying unsteadily as she took the bra off.\n\n\"You can leave it here if you want,\" I said. \"Come and get it when you want it.\"\n\n\"Thank you,\" she said with an unfocused smile. She draped it over the canopy support and drifted off into the darkness again.\n\n\"Wow,\" Lee said. \"The mother in me wants to take her home. I'm guessing you're gonna have a souvenir to hang on the wall of the trailer.\"\n\n\"Speaking of souvenirs, what did you do with Carol's drawing of us?\" I asked.\n\n\"It's at the frame shop,\" she said. \"It took all my courage to walk in there with it, 'cause it definitely looks like me, but it was kind of exciting\u2014the guy that took care of me was cute.\"\n\n\"Did you let him take care of you, or did he just take care of you?\" I asked with a smirk.\n\n\"Ha! Unlike you, I'm not to the point where I'm bangin' everybody I see yet,\" she laughed. \"But if I keep hangin' around with you I might get there.\"",
        "After checking out the night's headliner, an electronic dance music band that wasn't really our thing, we retired to the sanctuary of our little trailer and made love quietly before drifting off to sleep. It was a pretty noisy camping area, with lots of partying late into the night, so long stretches of sleep were hard to come by. In the wee hours we were awakened by closer voices outside the trailer \u2014 Emma and Lexie.\n\n\"Holy shit, is this your mom's?\" Lexie asked.\n\n\"What the . . .!\" Emma exclaimed quietly. \"No, it's not her size, and she wouldn't wear anything this old and dirty. At least I hope not,\" she giggled. They both sounded like they'd been partying heavily.\n\n\"You think they got someone in there?\" Lexie asked.\n\n\"No, we don't have anyone in here,\" Lee said through the little window. \"You girls all right?\"\n\n\"Hi mom!\" Emma said brightly. \"The motorhome's outa control. The guys got girls in there, and Lexie doesn't wanna get into that. Can we stay with you guys?\"\n\n\"Sure, let us put on some clothes,\" Lee said.\n\n\"Don't bother, we've all seen each other naked already,\" Emma said, and she and Lexie came in without waiting. \"Oh, I guess you haven't seen Lex have you mom . . . she's wicked hot, you won't mind.\"\n\n\"Have you been smoking pot?\" Lee asked as she switched on a dim little light next to the bed.\n\n\"Mom! You were twenty once too, remember?\" Emma said.\n\n\"I do. That's why I worry about you,\" Lee said.\n\n\"Mom! Were you a bad girl?\" Emma asked, suddenly very interested.\n\n\"Maybe a little,\" Lee said with a smirk.\n\n\"Speaking of bad girls, who's bra is that outside?\" Emma asked.\n\n\"Oh, just a lost soul who's been wandering around half naked,\" Lee said.\n\n\"There's quite a few of them tonight,\" Lexie said.\n\n\"Speaking of half naked, you look comfortable,\" Emma said to her mom, who was naked and sitting up in bed with a sheet barely covering her lower body. \"Did you guys drink all those beers out there?\"\n\n\"Maybe,\" Lee said.\n\n\"I think my mom's got a buzz!\" Emma said, looking pleased.\n\n\"So what about it, you do too,\" Lee said, and she stuck her tongue out at Emma.\n\n\"Settle down now,\" I said. \"What's that old saying? Make love not war?\"\n\n\"Sounds good to me!\" Emma said. \"You wanna make me scream Lexie honey?\"\n\n\"You guys are on the couch,\" Lee said, tossing Emma the only blanket. \"And keep the screaming down, we've got neighbors.\"\n\n\"Turn the light on in the bathroom so we can switch this off,\" Lee said. \"Goodnight girls.\"\n\nThe bathroom light cast a dim, shadowy glow over the girls on the small couch, and they stripped naked and huddled together under the blanket. Soon they were kissing, and quiet moans betrayed their wandering hands.\n\n\"You just gonna lay there and watch?\" Lee asked me quietly.\n\n\"Sure, why not,\" I said with a smile. \"Guys love this kinda shit. Oww!\" I said when Lee pinched my arm hard.\n\n\"Jeez mom, don't hurt him,\" Emma laughed. \"Did you finish that blow-job I started earlier?\"\n\n\"You gave him a blow-job?\" Lexie asked, sounding excited.\n\n\"I started, but I had to leave and find you before your set,\" Emma said.\n\n\"She never finished it,\" I said, figuring I'd stir things up.\n\n\"Mom!\" Emma said.\n\n\"Well I fucked him! Doesn't that count?\" Lee said, sounding exasperated.\n\n\"I dunno, does that count Steve,\" Emma asked.\n\n\"Not really,\" I said, and Lee pinched me again. \"Oww!\"\n\n\"Mom! Quit hurtin' him!\" Emma said as she got off the couch. \"I need to finish what I started.\"\n\n\"Don't think I don't know what's goin' on here you two,\" Lee said.\n\nNow Lexie was the spectator, and she watched her young lover climb onto the bed and pull the sheet off the already hard cock in my hand.\n\n\"Oh God you're gettin' good at this,\" I said as Emma sucked me in exquisitely. \"Fuck!\"\n\n\"I'd go sit on the couch, but I don't know if it's any safer over there,\" Lee said, looking over at the stunning Lexie, sitting up in the dim shadows almost fully unveiled from the blanket.\n\n\"Go ahead mom, she won't bite,\" Emma said. \"Unless you ask her too.\"\n\n\"Ohhhh!\" I groaned, as Emma went at me with more enthusiasm.\n\nLee and Lexie were staring each other down, not sure what to do. Lexie had a ridiculously sexy little smile on her face, and her hand was under the blanket doing God knows what.\n\n\"I know what I'd be doing right know,\" I said quietly to Lee.\n\n\"Oh what the hell,\" Lee said, and she walked to Lexie, who held the blanket up and swept it over Lee and herself, covering them completely, giggling quietly as she did it.\n\nThe blanket didn't last long. Lexie had Lee above her, her slim fingers sliding through Lee's lovely pussy, and one of Lee's tits dangling onto her extended, licking tongue. Lee moaned deeply. \"Oh you beautiful girl!\" she said.\n\nEmma didn't finish her blow-job after all. She gave it a good start, but needed more.\n\n\"Fuck me baby!\" she said quietly, and she turned around for me to take her doggy style so she could watch the building action on the couch. \"Oh fuck!\" she said as I obeyed her command, and I plumbed her depths as she watched her mother in the throws of passion with her lover. \"Oh God this is too much! Fuck! I'm fucking cumming!\n\nI've rarely seen a woman cum that quickly or that violently.\n\n\"Wow baby! That was nice,\" I said.\n\n\"Yeah wow!\" she said. \"Holy fuck!\"\n\nShe rolled on her back and embraced me, holding me tight as she gathered her wits.\n\n\"This is so fuckin' hot, I can't even begin to tell you,\" she said quietly in my ear. \"I mean listen to them! . . . Oh my God! . . . Fuck me again. Fuck me hard.\"\n\nOnce again I eagerly obeyed her command, repositioning after a few minutes, with her legs up on my shoulders. She came hard again, like a wild animal.\n\nBy that time Lee had a powerful orgasm of her own, with her pussy hovering over Lexie's talented tongue, squeezing her own tits and trying to stifle screams as her body erupted.\n\nEmma watched as they shifted positions and her mothers tongue lifted Lexie to the brink, and she squeezed my cock hard in her hand when Lexie came.\n\n\"Oh my fuckin' God!\" Emma said quietly. \"There's nothing hotter than this. Never will anything be hotter.\"\n\n\"Can we all be together?\" Emma said a little louder. \"Don't worry mom, it's cool, I won't touch you there,\" she said as Lexie and her mom approached hand-in-hand.\n\n\"Okay honey,\" Lee said softly.\n\nWe all squeezed onto the small bed and Lee mounted me as Emma ravaged beautiful Lexie. The fucking and lovemaking was beautiful and tender, wild and woolly, and everything in between. Somehow Lee and Emma avoided each others 'private parts', although a modicum of 'tit appreciation' took place. All in all it was a beautiful, magical night.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe morning sun streaming through the trees illuminated the walking wounded \u2014 a few silent, hungover music lovers, wandering to and fro through the camping area. I cooked up a mess of scrambled eggs, Lee made coffee, and she heated up some bagels in the tiny microwave. Emma and Lexie finally stirred from their limb entwined slumber on the little couch.\n\n\"I don't know about you girls, but I worked up a heck of an appetite last night,\" Lee said to them.\n\n\"Mornin' mom,\" Emma said groggily. \"Where's my clothes? Oh . . .\"\n\nShe pulled on her panties and wandered into the bathroom.\n\n\"Mornin' Lee,\" Lexie said quietly. Mornin' Steve.\" She kissed Lee on the shoulder and gave my ass a squeeze, and then looked for her own panties.\n\n\"Did you get some rest sweetheart?\" Lee asked her.\n\n\"Oh God yes,\" Lexie said, \"I was out like a light. I don't know if I've ever had a day like that before. We rehearsed in the afternoon, got all our gear up here, set up and played that awesome set, broke it all down, partied with everybody . . . and then you guys. You just took it over the top. Best day ever.\"\n\nShe kissed us both on the cheek and took her turn in the bathroom when Emma came out.\n\n\"Me too,\" Emma said, with her own kisses on our cheeks. \"Best day ever.\"\n\nWe went outside to eat in the lawn chairs, all three of the girls wearing t-shirts and panties.\n\n\"Looks like our friend came back,\" I said pointing to the empty spot that Dancing Girl's bra had mysteriously vanished from.\n\n\"I hope she had as much fun as we did,\" Emma said with a little giggle.\n\nLee looked at all of us, with a twinkle in her eye. \"That's not possible,\" she said with a cute little smile."
    ],
    "authorname": "riverboy",
    "tags": [
        "older woman",
        "younger woman",
        "blowjob",
        "bisexual woman",
        "fffm",
        "cunnilingus"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-handymans-memoir-ch-41"
}