{
    "title": "Hey Sis...",
    "pages": [
        "I would like to thank Andrew John again for a wonderful job editing my story. Again my story would have never made it to publication without him. \n\nThank you Andrew... \n\n*****\n\nHey Sis\n\nMy name is Sara Belton. I was asked by the family to tell our story. I hope I do a decent job. First you need to know that the focus of the story isn't me, or my husband Bryan, though we had the privilege to live and be a part of it. \n\nChapter one: Expecting\n\nI was thirty-one years old when this story began. I had a part time job in real estate, but was mostly a stay-at-home mom. My husband Bryan was thirty-three years old. He was a pastor with his own church. This story started twelve years ago, on Christmas day, with a simple case of the 'flu. I got sick and stayed that way till after the first of the year. Our son, Roy, had just turned eleven in September. \n\nAbout four months later, mid-April actually, I started getting sick again. Not only sick, but I had also lost all my energy. Basically I was just miserable. \n\nI made an appointment with Dr. Bell. He was our general practitioner. He checked my vitals and took urine and blood samples. After the usual long wait, the doctor finally had the results. He smiled knowingly as he looked at me. \n\n\"Mrs. Belton. How are you feeling today?\" was his rhetorical question. He laid me on my back and began to examine my abdomen. \n\nA nurse rolled in a machine that I recognized immediately. \n\n\"What is that for?\" I asked with some concern. \n\nDr Bell ignored my question, took out some clear gel and told me to take my pants and panties down to my hips and raise my shirt to my breasts. \n\nOnce I had complied, he put gel over my abdomen and turned on the machine. He then took a probe, placed it on my tummy, and moved it slowly over the gel. I heard a very fast heartbeat through the speaker on the machine. He didn't have to tell me I was pregnant. I knew... SHIT... I was both thrilled and terrified.\n\n\"There he is, trying to hide from us.\" the doctor stated. \"No...wait...wait...there SHE is. I stand corrected.\" He finished and pressed a button to snap several images of the embryo showing on the screen. He took one of the photos and handed it to me. \"The first photos of your daughter, Mrs. Belton,\" he said with a big smile.\n\nI am sure it took longer than that, and I am sure that he wasn't supposed to tell me the sex unless I asked. But I was pregnant and about to freak out. How was I going to tell my husband and my son? What was I going to do? I was thirty-one for god's sake. I would be forty-two when she got to my son's current age, and fifty when she graduated high school. Holy cow. Shit. Damn. \n\n\"Wait just a minute doctor; I can't be pregnant... I am on the pill and haven't missed a dose. There is no way this can happen.\"\n\n\"Mrs. Belton,\" Dr Bell continued. \"If I remember, didn't you come down with the 'flu back in December?\"\n\n\"Yes, I did, but I still took my medications.\" I acknowledged. \n\n\"Mrs. Belton, how many times did you vomit after taking them?\"\n\nI drove home in a daze, made a nice meal for the men in my life, and prepared to break the news. I imagined that Bryan, my husband, would have a similar reaction to mine. The person who concerned me most was my eleven-year-old son. He would be pissed to say the least. In my mind, I could hear him yell, \"MOM HOW COULD YOU DO THIS TO ME?\". I suppose people would say I was projecting, but who wouldn't be in this case. \n\nTo soften the impact of my news, for dinner I fixed one of Bryan's favorite meals, and Roy's favorite desert.\n\nWe ate at the dining table. Bryan sat at the head of the table, with me immediately to his right. Roy sat at the opposite end with one empty seat between us. \n\nAfter dinner, it was time to get the show on the road. \"Bryan, Roy...you know I went to the doctor's today don't you?\" I asked. \n\nBryan nodded, but Roy just looked at me with a concerned look on his face. It was a look a mother loved to see. It told her that he cared a great deal for her.\n\n\"Is everything ok mom?\" \n\n\"Well...sort of,\" I answered. Now they both had concern on their faces.\n\nI spoke to Bryan, trying to sugar coat it a bit, \"Bryan, I know we haven't really thought about it since Roy was born but, years ago, we talked about having two kids, a girl and a boy.\" I paused for dramatic effect. \"Well, in six months, we will fulfill that desire. I am pregnant...and it's a girl,\" I finished.\n\nBryan's face lost its color and he looked sick for a moment. I was disappointed. I had hoped that, at least on some level, Bryan might have wanted this. First impressions indicated I was wrong.\n\nWhile I was studying Bryan's reaction, Roy gracefully switched seats to sit next to me. I turned to him and saw an unusual expression on his face. It wasn't the anger or hurt which I had expected. He stared at my stomach, placed his right hand on it and, without shifting his gaze, asked, \"She is in there? This isn't a joke, or something, is it?\"\n\nI took his hand and placed it over my womb. \"She is about the size of a butter bean right now, Roy. I don't think you will be able to feel her just yet, but she's in there.\"\n\nHe kicked the chair back and went to his knees next to me without moving his hand. \"Hey Butter Bean, I am your brother Roy. I am glad to meet you.\"\n\nIt wasn't the reaction that I had expected. I looked at Roy, who had still not taken his eyes off my belly, and ran my fingers through his hair.\n\n\"We are going to have so much fun when you come out of there Butter Bean. I am going to teach you everything you will ever need to know,\" said Roy as he pressed harder on my stomach. I didn't have the heart to stop him.\n\nI looked at Bryan whose face showed great admiration and pride for his son. Roy's excitement over my pregnancy was infectious and had begun to affect him.\n\n\"How far along are you mom?\" Roy questioned \n\n\"Four months,\" I replied. I could see him mentally counting.\n\n\"You are going to deliver in September?\" he asked\n\n\"September 15th is my due date.\" I answered. It was then that I remembered that Roy's birthday was also in September.\n\n\"So, she is my birthday present! You won't have to get me anything else ever again for my birthday mom, or you either dad.\" Then he leant down and kissed my stomach through my blouse. He rose from his knees, kissed me on the cheek, and hugged me tightly. I could feel wetness on my cheek from his tears. He really wanted this. \"Dad, I am going to have a sister!\" He looked at Bryan, who had started to regain his color and was smiling a little. \n\nI thought that Roy's enthusiasm would pass, but I was wrong. The next morning I was in my robe fixing breakfast when Roy came into the kitchen. He knelt before me and, again, placed his hand on my belly. \"Good morning Butter Bean,\" he said. He opened my robe and kissed my bare belly. I was shocked because, firstly, I only had a skimpy pair of panties on under my robe and secondly, it surprised me. I closed my robe as fast as I could with a stern look on my face, and was about to admonish him, when he rose, hugged me tightly and kissed me. \"Thank you, momma. I love you so much.\" Then he continued to hold me, placing several small kisses on my cheeks. \n\nBryan had walked in, witnessed most of the exchange, and started to laugh.\n\nRoy let go and said that he was going to set the table. \n\nI exchanged a look with Bryan. He came and hugged me tightly, whispering, \"His enthusiasm is heartwarming.\"\n\n\"Did you see him kiss my stomach this morning?\" \n\n\"Yea I did. It took all I had not to burst out laughing.\"\n\n\"Tomorrow I am wearing shorts under this robe,\" I laughed.\n\nRoy's fascination for my pregnancy became a regular thing. If I wasn't wearing a robe, he would raise my shirt to kiss my tummy. If we three sat on the sofa, I would lean against Bryan and Roy would lean against me - always with his hand on my tummy. \n\nThe first time after my announcement that I returned from grocery shopping, and started to carry the bags into the house, Roy rushed out and grabbed them.\n\n\"Mom, you are not to pick up, lift, or move anything over ten pounds. If you find it necessary to do these things, you are to call for me and I will do it. Am I understood?!\"\n\nMy son was lecturing me?\n\n\"Son!\" I started but was interrupted. \n\n\"You are NOT to lift, pick up, carry, or move anything over ten pounds! Do you understand?\" he repeated.\n\n\"Roy, I am your mother, and...\"\n\n\"...and you are the mother of my sister,\" he interrupted again. \"You must take care of her, and I will take care of you to ensure that. So, no lifting of anything over ten pounds.\" \n\n\"Ok,\" I conceded, even though the bags only weighed a couple of pounds each. There wasn't any way of changing his mind. He brought in the groceries and put them away for me.\n\nHe followed me around and wouldn't let me lift anything. He started asking me if I had taken my vitamins, if I had eaten today and what had I eaten. He was genuinely concerned for my health and well-being.\n\nNext, he started escorting me from my car to the house and vice versa.\n\nWhen I asked for the reason, he told me, \"Mom you might trip or fall. There are cracks on the sidewalk and the threshold of the doorway, not to mention the steps. I want to be here, so you don't fall. One of the biggest causes of miscarriages is falling. Other causes are carrying something too heavy for you, over exertion, being hit in the stomach or chest, not eating right or not taking your vitamins.\"\n\nIt seemed like he had really done his homework on this. \"Are you sure you are only eleven years old?\" I asked. Roy laughed.\n\nThis attention continued without a break, in fact, Roy got to the point where he escorted me to my room every night. Bryan thought it was a hoot, the way that Roy was doting over me.\n\nAbout a year before my pregnancy, a new couple had moved into our neighborhood. They had a daughter named Amanda, who was ten years old and adored Roy. Before the pregnancy, Roy would blow her off like a hurricane blows off roofs (pardon the clich\u00e9). But, after my announcement, he started blowing off his other friends to be with me and Amanda. He began to spend a lot of time with Amanda, inviting her to play games and even helping her with homework. It seemed like he was using her to practice being a brother.\n\nChapter two: Birth\n\nBy mid-September, I was ready to burst. Oh my god. It was time for me to have this little girl, but she just wanted to stay in my womb. I was huge. I couldn't function well at work, so they gave me early maternity leave. Roy wouldn't leave my side. \n\nWe decided to call our new daughter Jessica Ann Belton. Bryan and I started referring to her as Jessica, however Roy would only call her Butter Bean. The love Roy was showing towards his sister was so overwhelming that we didn't correct him.\n\nIt was September 21. Bryan was in his lazy-boy watching a football game. I was sitting on the sofa with Roy beside me, his hand on my stomach. He always seemed to enjoy it when the baby moved in the womb and kicked his hand. \n\n\"Mom?\" Roy asked. \"I am getting concerned. She hasn't moved all day. Are you sure she is ok? Shouldn't we at least go see the doctor or something?\"\n\n\"Relax Roy. You remember how she was playing kickball with my kidneys all day yesterday? She is probably just a little worn out and needs some rest, that's all.\" I said.\n\nRoy wasn't convinced.\n\nI knew he would keep nagging for me to see the doctor, but I wasn't going to budge. He hugged me just as an unexpected contraction hit me. \"Arrrggg,\" I moaned\n\n\"Oh my god! Did I hurt you? Dad, I think there's something wrong. I hurt mom.\" Roy said urgently.\n\nBryan came across to me. I looked at him as the contraction eased. \"Check the time,\" I said to Bryan. I thought Roy would be too shaken to keep track of the time. \n\nThe next contraction hit four minutes later. I looked at Bryan and we nodded, \"It's time.\"\n\nBryan and I had plans already in place. He grabbed my bag, got the car keys, checked for the insurance papers, and completed the rest of his pre-planned and practiced duties. \n\nRoy panicked and I had to laugh. The person who was so rigid in preparing me for this moment was in a state of panic. We all got into the car, and Bryan drove us to the hospital without any problems. \n\nBryan and I had decided that Roy would stay in the waiting room during the birth. We had to assure Roy that, the SECOND his sister was born, he would be allowed in the room. \n\nThe labor went smoother with Jessica than Roy, by far. Even so, as everyone was encouraging me to push, I was encouraging them to give me drugs, to no avail.\n\nSuddenly I felt my daughter exit my womb. She entered the world with an anguished cry. \n\n\"AAAARRRYY\" \n\nThe door burst open and Roy rushed inside. I was still in the stirrups, legs spread and naked from the waist down,.but Roy only had eyes for his sister. The look on Roy's face was worth experiencing a thousand contractions.\n\nHe entered the room so quickly that the doctor hadn't yet had time to place Jessica on my tummy. Once he had, Roy reached for his sister but quickly had his hands slapped away by a nurse.\n\n\"Can we cut her loose first?\" the doctor asked, then he handed Roy the scissors. \n\nRoy looked like he had been given the keys to the kingdom. He snipped the cord where the doctor indicated. Then the doctor said, \"You can hand her to your mom now.\"\n\nTears were running down Roy's face as he held his wet and sticky sister and eased her from my tummy to my chest. As I took her, Roy said something that will move me till the day I die, \"She's perfect momma, thank you.\" Then he kissed me. \n\nOh, by the way, it was 12:17 am on September 22. I now had two children who were born on the same day. Unexpectedly, she was my son's birthday gift.\n\nRoy went with the nurses while they cleaned up Jessica, and Bryan stayed in the room holding me. Even though I was very tired, and a little sore, having a new daughter was so exciting that I couldn't sleep.\n\n\"You were fantastic,\" Bryan said to me for the fiftieth time. Then he kissed me for the hundredth time. He had been really excited over the last few weeks. I still thought he was affected by Roy's enthusiasm. \n\nIt had been over three hours since I had seen my daughter, so I called the nurse and asked about the delay. She smiled and said, \"She has been cleaned up and put under the jaundice lights. She was just a little yellow, and the doctor was mildly concerned. Don't worry, though, her security guard is right next to her.\" \n\n\"Her security guard?\" I queried.\n\nShe smiled again. \"Your son, Roy. He won't let us alone. Nurse Dollar lost her heart watching the way he was doting on his sister. He hasn't let her out of his sight since she was born.\" \n\nWhen I heard this, my heart exploded with love. I thought that he might be excited, but I had no idea how much.\n\n\"Are you going to bring her to me?\"\n\nThe nurse smiled. \"Sure, if the guard will let us. I will be right back.\"\n\nIt took ten minutes before she returned. \"Mrs. Belton? ..uh..your son said that Butter Bean has ten minutes left on the timer for the jaundice lamp, and you will just have to wait. I am sorry.\"\n\nI laughed, and so did Bryan. \n\nBryan went out to get a glimpse of the duo. He was about to burst when he got back. \"Sara, you are not going to believe what your son is wearing.\"\n\nI had to smile at his excitement. \"So, are you going to tell me?\"\n\n\"No, it's too good. You are going to have to wait till he gets here. But prepare yourself.\"\n\nMoments later, a soft knock let us know someone was at the door. \"Come on in, I called.\" Bryan had warned me, but I didn't expect what I saw. Roy was carrying Jessica. But I didn't notice. All I could see was my son in a pink nurse's dress complete with a nurse's cap and a 'Volunteer' badge. I nearly fell out of bed with laughter.\n\nRoy looked stern. \"Mom, this is the only way they would let me near my sister!\" \n\nI opened my arms and Roy handed Jessica to me.\n\nWith gratitude, I said, \"Thank you, son. Thank you for being my son.\"\n\nBryan looked on with amusement as a succession of nurses came in to check on Roy.\n\nEven though Jessica was safe in my arms, Roy was never more than a few inches away. I was so proud of his dedication.\n\nChapter three: Home.\n\nIt was Saturday afternoon when we got home. Bryan drove us with Jessica and Roy in the back seat. Roy watched over her.\n\nOur home was two stories high, with all three bedrooms on the top floor. The master bedroom was on the street side while the two smaller bedrooms were across from it. The bedroom to the left, nearer the stairs, would be Jessica's room. To the right was Roy's room. \n\nThe first night back home, I was so tired that I slept until 9 am. I woke, well-rested, to a sunny morning. I smiled, rolled over and kissed my husband.\n\n\"Thank you so much Bryan. I love you.\"\n\n\"Um...oh...wha...who. What are you thanking me for?\" he asked. \n\n\"Taking care of Jessica.\" \n\n\"Ah...I...well, heck, I didn't do anything.\" \n\nSuddenly we were both wide awake. I heard Jessica's small cry and jumped out of bed. I had just thrown on a robe when Roy walked past our door.\n\nBryan and I just looked at each other, then followed Roy into Jessica's room. We watched him change her diaper with love and care. He cleaned her and spoke to her in a hushed voice that kept her attention. He then redressed her, put the dirty clothes in the hamper, threw the diaper in the trash, and picked her up to take her to breakfast. All the while I stood there and wondered how I got so lucky to have a son like him.\n\n\"Good morning mom,\" he said, as he started out of her room like it was a normal thing to take care of his sister. \"It's time for Butter Bean's breakfast. You want to help?\"\n\nI stifled a laugh as Roy asked me whether I wanted to help fix my daughter's breakfast. \"Sure,\" I answered, then followed him to the kitchen to start heating her bottle. \n\nThis became a regular routine, and I never even had to feed Jessica during the night. Roy was always there.\n\nWhen school resumed, I knew that Jessica would be devastated because much of Roy's attention would now be focused on school, his studies and his greatest love, football.\n\nOn the first day of school, Roy wasn't due home until almost 5 pm because of football training.\n\nWhen Roy arrived home from school, I told him how much Jessica had missed his attention throughout the day, thinking that he would enjoy the compliment. The next day Roy was home at 2:45 pm.\n\n\"Why are you home so early Roy?\" I asked.\n\nHe looked at me as if the answer was obvious. \"I quit the football team to be home earlier for Butter Bean mom.\"\n\n\"You quit football?\" I said not believing what I just heard.\n\n\"Of course.\" He paused, then explained, \"Look mom, I'm a third-string nobody on the football squad. No one is going to miss me there but, here, I am Butter Bean's brother. I must attend school, but I don't have to play football. Being here for her is so much more important than sitting on the bench every week.\"\n\nAfter school Roy would read to Jessica. He would do his homework, with her on his lap, reading the History and English assignments aloud so Jessica could hear. He would feed her and change her diaper when needed. My favorite part of each night was when, after his homework was finished, Roy would put Jessica on the floor and play what I like to call 'tickle monster'. Roy would crawl on his belly and pretend to eat her feet and hands, then he would blow raspberries on her stomach. Jessica would laugh so hard it would bring tears to my eyes. \n\nAs soon as Jessica's legs were strong enough to support her, Roy would put music on, stand her up and slowly dance with her. This would go on until little Jessica became tired and was content to sleep on Roy's lap. Then, one day, Roy told us to get the cameras ready to record Jessica's first steps. He let go of his sister's hands and she continued to move and dance on her own.",
        "When Jessica was old enough to graduate from her crib to a bed, she rarely slept a full night in it. On many mornings, Bryan and I would get up and go to wake the kids. We would usually find them both in Roy's bed, with his arms wrapped protectively around his little sister. We never did find out if Jessica went to his room in the night, or if Roy fetched her every night. It was probably a little of both.\n\nOne afternoon, I watched as Roy helped Amanda with a Math assignment while Jessica sat on his lap. Amanda scratched her head and said, \"But I don't understand. What's a denominator?\"\n\nRoy looked at Jessica. \"Butter Bean, shall we let the dingbat know what she missed or just keep it from her?\"\n\n\"Roy...,\" I scorned. \"That isn't nice.\" \n\n\"No Mrs. Belton,\" said Amanda, as she flew to Roy's defense. \"This is his way of including Butter Bean. I take no offence.\" Then Amanda winked at me.\n\nWhat could I do? I smiled and said \"Ok.\" I was very proud of my family. \n\nWhat was once a duo, easily became a trio. Their antics were so much fun to watch. One day Bryan bought us all ice-cream cones. Jessica dropped hers and started to cry. Amanda scooped up some of the fallen ice-cream and threw it at Roy, yelling, \"Watch out for the ice-cream monster.\" Roy, of course, played along and started chasing Amanda and Jessica throwing ice-cream everywhere. By the time they were through, all three of them were covered with ice-cream. Roy rinsed himself and the two girls off with the water hose before going inside to change. Roy made sure that Jessica was bathed, dried, and changed into clean clothes before he would even start on himself. Amanda went home to change.\n\nOne Saturday, Roy and Amanda took Jessica to the park. They had only been gone a short while, when a panicked Roy burst through the front door carrying a crying Jessica. \"Mom! Quick, we need help. Butter Bean has been hurt.\" Of course, I rushed to my daughter.\n\nAmanda came in right behind Roy, but she wasn't nearly as panicked. In fact, looking back, her face was filled with pride. Roy pulled Jessica's shirt off. There was a red mark, about the size of a large thumb print, near her neck. \"What happened?\" I asked.\n\n\"A bully mom. He came up behind Jessica and pinched her neck,\" Roy volunteered.\n\n\"What's his name? I will be calling his mother!\" I yelled.\n\n\"You don't have to worry about that Mrs. Belton,\" Amanda said with a calm, pride-filled voice. \"Roy took care of him. He will never, ever, touch Butter Bean again.\" She looked at Roy with admiration, then she continued, \"The second that Butter Bean screamed, Roy went to defend her. He fought the bully off and broke his nose. Two full-grown men had to pull Roy off him. There was blood everywhere.\"\n\nOnly as he finished treating Jessica did I notice that Roy's shirt was covered in blood. I frantically examined Roy to see where he was bleeding.\n\n\"No, Mrs. Belton. Trust me, that isn't Roy's blood. It is Steven's,\" Amanda assured me.\n\nI got some ice and a child-friendly painkiller for Jessica. Roy took over as her 'doctor', keeping the ice in place and soothing her. \n\nWhen Bryan came home, we had to retell the story. Bryan took the news more calmly than I did, but I could tell he wasn't happy.\n\nThat night, after dinner and clean-up, our family was sitting on the sofa watching television when the doorbell rang. Bryan answered the door. I could hear voices and, after a few moments, Bryan led two males into the living room.\n\nRoy leapt to his feet, positioned himself between the two males and Jessica, and adopted a defensive posture. Bryan and the other two males froze. \n\nThe older of the two males was at least six foot three, and had to weigh nearly two hundred eighty pounds. He said, \"Mr. and Mrs. Belton, I am James Odell and my son has something he wants to say to you.\"\n\nA younger version of that huge man stepped forward. He wasn't quite as big as his father but, even so, he towered over Roy. His nose was bandaged, and he had two black eyes. His hand was also bandaged, and he seemed to be limping. He made sure that he did not get close to Roy. I assumed that this person was Steven, the bully from the park.\n\n\"Mrs. and Mr. Belton. Roy, ahh, you too. I am sorry for what I did at the park today. I was being a jerk. I guess you could say I was showing off, and I pinched Butter Bean. I didn't mean to make her cry but, well I guess you know, I shouldn't have ever done that. You can rest assured that I will never touch her again.\"\n\nHe stood there red-faced looking down at the floor. \"Please forgive me. I am so sorry.\"\n\nI was in a state of utter disbelief looking at a boy that stood at least six feet tall and close to 200 pounds. Roy was five foot seven, at best, and maybe 150 pounds. I couldn't believe Roy had fought him.\n\nRoy stared at him for a long time. I was about to say something, when Roy finally spoke, \"Ok, but you don't owe me anything. It's Butter Bean you owe the apology to, not me.\" He took a step back, allowing Steven to see her for the first time. \n\nAs Steven looked at her, his expression showed sadness and shame. \"Butter Bean, ..I, ..I, ..oh, ..I am so, so, sorry. I won't do it again.\"\n\nJessica got up from the sofa and walked to her brother. Roy picked her up and held her.\n\nThen Amanda went to Roy. She hugged him with admiration. I felt very proud. \n\nJessica's 'terrible twos' weren't terrible at all for our family. Roy studied information from websites dealing with childhood development and lovingly applied it to his sister. Love and care for Jessica was paramount and Amanda supported Roy at every step. \n\nAs Roy matured, I expected him to show more interest in girls and that Jessica and Amanda would take second place in his affections. However, as this did not happen, I asked if he had a girl friend at school he wasn't telling us about.\n\n\"Mom, I really don't have time to start dating. I have Butter Bean to care for. Besides, Amanda isn't old enough to date yet, so I think I will just hang around and wait till Butter Bean can start dating me.\"\n\nI wanted to hit him, but I smiled instead.\n\nFor Roy's first official date with Amanda, the three of them (yes, including Jessica) went to the movies and then for ice-cream. I picked them up afterwards, pleased to see that Roy held Amanda's hand and both were smiling from ear to ear. Jessica was asleep in Roy's other arm. I wished I had a camera. \n\nIt wasn't long before Roy and Amanda were exclusive. I thought that Amanda looked really good on Roy's arm. \n\nChapter four: Bad news\n\nThe trouble started six weeks before Jessica's fifth and Roy's seventeenth birthday. It was only because Roy knew Jessica so well that he could tell she had started having headaches. Under my directions, Roy would give her half a headache tablet to relieve her pain.\n\nAfter a while, Jessica started needing the tablets every day which worried Roy. He begged us to take her to the doctor. \"What would it hurt mom?\"\n\nWe made an appointment for the next Monday, the soonest we could get her in.\n\nThe Friday before the appointment was date night for Bryan and me. We knew that Jessica was in very safe hands with Roy and Amanda babysitting her.\n\nBryan and I went to a very nice Italian restaurant. I wore a sexy burgundy dress, low cut and short, with stockings and my six-inch stiletto heels. I was hoping to get lucky with Bryan when we got home.\n\nAs we were sitting, making goo-goo eyes at each other, the phone rang. It was Roy. I instinctively knew it had to be important, so I answered it. \n\n\"MOM, MOM, please. You have to hurry. We are taking her to Memorial Hospital. Hurry please. I have the insurance cards, but I need you there.\" \n\n\"Roy. What is going on? What hospital? Who?\" I was beginning to panic. \n\n\"Butter Bean. She won't stop shaking. Hurry. I called 911. The paramedics stopped her shaking, but she needs the hospital. Hurry please.\" He hung up. \n\nI looked at Bryan. \"We've got to go.\" \n\nBryan pulled out several large bills and left them on the table. We headed out of the restaurant, found our car, and drove to the hospital in record time. Stopping at the emergency room entrance, Bryan let me out and proceeded to park the car. \n\nEntering the hospital, the first person I saw was Amanda. She rushed to me. \"Mrs. Belton, oh my god. It's Butter Bean. She had what they called a grand mal seizure and wouldn't stop shaking. Roy called 911 and they sent an ambulance. They gave her anti-seizure medication through an IV drip. It stopped the convulsions, but she is pretty much out of it. Roy rode in the ambulance and I came with my folks.\" She pointed to where they sat with concern showing on their faces. \n\n\"I need to see Jessica. Where is she?\"\n\nAmanda took my hand and led me to a small curtained-off space. I was surprised that no one stopped us. She opened the curtain which revealed an empty bed and a chair with Roy sitting in it. He was holding Jessica, who had an IV drip in her arm, dispensing medication.\n\nMy heart was beating fast as I asked, \"Are you ok, Roy?\" Jessica looked great compared to my son's appearance.\n\n\"Momma, I'm scared,\" he said.\n\nI closed the distance between us and wrapped my arms around him, as best I could. Roy was scared, but not for himself. He was scared for his sister. \"You did the right thing Roy. Calling for an ambulance when she wouldn't stop shaking was the best thing for her.\"\n\nRoy looked at me. \"I know what I did mom, but she... she... isn't... I don't know if they can fix this.\"\n\n\"If anyone can help her, they can do it here.\"\n\nI tried to be reassuring, but how do you do that when you aren't sure yourself?.\n\n\"Amanda, would you please go back out and get Bryan? He needs to be here too.\"\n\n\"Ok Mrs. Belton,\" she said as she left.\n\nI stood next to Roy and Jessica, stroked their hair and kissed each of them on the cheek. I didn't try to hold Jessica as Roy was in protection-mode and, besides, she had the IV drip in her arm. I wrapped my arms around the pair of them and held the embrace until Amanda returned with Bryan.\n\nThere wasn't time for a conversation because two orderlies came to take Jessica for a CAT scan and an MRI. As her mother, I was scared for her welfare.\n\nNeither Jessica nor Roy would let go of their hold on each other. The orderlies finally agreed that the best course of action was to let Roy go with her. As only one family member could accompany her, Bryan and I waited behind in the room. It was a heart-wrenching decision, but I knew it was the right one.\n\nBryan took my hand and I leaned on him heavily. I had no idea what Bryan was feeling, but I knew that, like me, he had to be in a lot of pain. Little did we know that the pain would get much worse.\n\nA nurse approached us and asked, \"Mrs. and Mr. Belton?\" \n\n\"Yes, I am Mrs. Belton.\"\n\n\"Good. We need you two to head upstairs to the sixth floor. The ward staff will have a room ready for ... uh... Butter Bean, is it?\" she stammered.\n\n\"Her name is Jessica, but Butter Bean is ok too.\"\n\n\"Ok, well. They will be expecting you,\" she finished.\n\n\"What does the sixth floor specialize in?\" I asked before she could leave.\n\nI knew that each floor had their own specialty; third floor for stroke victims; second floor was cardiology; and so on.\n\nI was not prepared for the shock of her reply. \"It is our Oncology Wing, Mrs. Belton.\"\n\nIf Bryan hadn't caught me, I would have fallen.\n\nIt was almost an hour later that Roy and Jessica met us in Jessica's new room. Jessica was in a wheelchair, in keeping with hospital policy, but Roy was pushing her, not an orderly. The orderlies laughed when they saw us, telling Bryan and me what we already knew, that Roy would not allow Jessica to be alone at any time.\n\nI smiled weakly and thanked them for their insight. \n\nRoy sat in a chair holding Jessica's hand as she rested comfortably in the hospital bed. I could see that Roy was frightened and wanting answers and reassurance, just like Bryan and me.\n\nWe waited almost three hours before two nurses, one male and one female, and two doctors entered the room. Their faces were somber as they prepared to deliver the sad news.\n\n\"Mr. and Mrs. Belton?\" asked the senior doctor.\n\n\"Yes.\"\n\nHe looked inquiringly at Roy.\n\n\"This is our son Roy; he needs to hear what you have to say,\" I answered his unspoken question.\n\nDr. Collins took a deep breath before proceeding. He placed an X-ray on the wall light, so we could see what was happening. \"This is a glioblastoma,\" he said, pointing to a shady spot on the X-ray. \"It has rooted itself deep within the cerebrum. It is what caused the grand mal seizure Butter Bean had.\"\n\n\"Jessica,\" I corrected needlessly.\n\nDr. Collins nodded. \"Jessica,\" he acknowledged. \"This particular tumor has advanced beyond treatment.\" He looked at us with compassion. \"I am so sorry, but all we can do is make her comfortable.\" \n\nI heard a low throaty sound, \"Noooooo.\" \n\nI thought it was my voice; God knows it was what I was thinking. But it wasn't my voice, it was Roy's. \n\n\"No. This isn't her X-ray, it belongs to someone else.\" Roy said, pointing to the X-ray, his voice getting louder, his posture getting more aggressive. The other doctor and the male nurse immediately took positions beside him.\n\n\"This is bullshit,\" Roy began to scream. \"We will go somewhere else and find out what is going on. This quack doesn't know us. He doesn't know Butter Bean. He doesn't know shit. Where did you get your license to practice? WALLMART?\"\n\nI went to hold him, but he pushed me aside. He was pissed. I had never seen anyone so full of anger. \n\nThe two men grabbed him and brought him to the floor. The female nurse had a syringe I hadn't noticed. As soon as the men had Roy immobilized, she injected him with a quick-acting tranquilizer. Roy's aggression was immediately reduced.\n\nThe way that the doctors and nurses worked so efficiently as a team, it was obvious that this situation was common. \n\nAt Bryan and my insistence, the doctors agreed that, provided Roy remained calm, he could stay in the room with Jessica.\n\nBryan and I left the room to sign admission and insurance papers and make a phone call or two. Well, Bryan did that, while I found a stall in a lady's room and cried.\n\nIt took a while, but I pulled myself together and returned to the room. Roy was on the bed with Jessica lying in his arms.\n\nIt was a while before one of the nurses came in. \"Oh, there you are. Your daughter and son are so sweet. Butter Bean called me in and told me that she needed her brother to lie on the bed with her. I think that she would have pulled out her IV if I hadn't allowed it. She was quite distressed and would not take \"No\" for an answer.\"\n\nI couldn't help thinking how inseparable these two were and, yet, how they would soon be separated forever. My tears started to flow anew.\n\nWhen Bryan returned it took several attempts to share what had happened. He cried as well, the first time I had ever seen him do so. It broke my heart.\n\nThere seemed to be a never-ending stream of visitors to our home. However, I was miserable and didn't want company. I wanted to wrap myself in a blanket and just lie on my bed. \n\nMany of the well-wishers were from Roy's school, with Steven Odell being among the first to come. I overheard Roy ask Steven, \"How do I fight this? I need to fight this.\"\n\nSteven offered to let Roy beat him up again, if it would make him feel better. Roy took his offer with good humor and almost laughed but, sadly, I think that Steven meant it.\n\nThe hospice was full of very caring, compassionate and professional people. Jessica was admitted for in-patient care right from the start. Eventually, the number of visitors to Jessica's room dwindled. Almost like cancer was contagious or something.\n\nRoy refused to attend school, emotionally telling me that he would repeat the whole 11th grade if necessary, but that he couldn't repeat even one missed second with Butter Bean. I couldn't deny the truth of his argument.\n\nChapter five: Funeral\n\nJessica 'Butter Bean' Belton died in Roy's arms on September 20th. She was two days short of five years of age. Roy had to be persuaded to release her body. \n\nBryan and I made the funeral arrangements. Roy refused to be a pallbearer, but there were plenty of volunteers. \n\nI was amazed at the size of the turnout. Almost 300 people attended, and it was comforting to realize that so many people cared deeply for our family. Roy stood apart from Bryan and me, with Amanda at his side, during the chapel service. I saw him speak to Steven, but could not tell what was said, nor did I see any emotion from Roy. In fact, I had not seen Roy show any emotion, besides anger, since the doctor gave us Jessica's diagnosis. \n\nThe funeral service was well done. The pastor talked about Jessica and the love she shared with her brother. He spoke about how the wonderful brother-sister relationship that existed between Jessica (or Butter Bean) and Roy became an inspiration for many students at his school who also had brothers and/or sisters. He related how Roy would boast, to anyone who would listen, about his wonderful sister and how people would know her before they ever met her.\n\nI never knew the full extent of Roy's love for his sister before the service. It was then that I realized how much he must be hurting in his misery over losing Jessica. I prayed that God would help him through this ordeal.\n\nRoy refused to ride with us to the cemetery. Instead he drove, with Amanda, in his old pickup. The road to the cemetery was lined with people who evidently couldn't fit into the chapel. The school football team was there in uniform jerseys, along with the basketball, baseball and softball teams. They all formed a guard of honor for the other mourners to walk between on the way to the graveside.\n\nFor the graveside service Bryan's friend, and fellow pastor, recited Psalm 29 as the pallbearers laid the small casket beside the open grave. I had to hold on to Bryan for support and, lost in my own grief, didn't notice Roy's lack of emotion. \n\nThere is no pain greater than losing one of your own children. I knew my heart would never completely heal. Bryan and I left the grave in a flood of tears, and everyone else seemed to follow. \n\nMost of what happened next was relayed to us in the following days.\n\nAfter the service, Roy and Amanda maintained a vigil. In addition, Steven Odell had organized for the football and baseball teams to stay also. Several students fetched folding chairs, blankets and a cooler with ice water from Roy's pickup and carried them to the graveside. \n\nThe cemetery workers told Roy that everyone had to leave. Steven replied, \"Do whatever you have to do, but my friend and I aren't leaving.\"\n\nThe men became aggressive and insisted that Roy and his friends had to leave. Steven repeated that he and his friends were not going anywhere. \n\nFinally, the three men in charge of the funeral detail tried to threaten Steven and Roy. The men realized that they had made a mistake when the high school athletes surrounded them and reinforced Steven's words.\n\nThe cemetery workers decided that the best course of action was to finish their job, despite having the crowd around them. They lowered Jessica into her resting place, filled the grave with soil, covered the soil with artificial turf, and raked the grass neatly around the edges. Then they picked up the official chairs and canopy, wished the students well, and left. Only after that did the football and baseball teams begin to leave.\n\nI woke the next morning and went to check on Roy. When I saw that he wasn't in his room, and the bed hadn't been slept in, I rushed to wake Bryan.\n\n\"Bryan, did Roy come home last night? He isn't in his room.\"\n\nHe grumbled a bit and told me to check downstairs, but Roy was not there either. \n\nFinally, we got dressed and went to the cemetery. ",
        "We found Roy, with Amanda on his lap, still at the graveside. They had blankets wrapped around them to ward off the September cold. Bryan suggested we go to McDonald's and buy them some breakfast. \n\nWe took the breakfast to them at the cemetery, then sat together and ate in silence. \n\nAt lunch time I took them chicken salad sandwiches with chips and sweet tea to drink.\n\nFor dinner we brought Roy and Amanda some of the food the well-wishers had given to our family. Amanda went home with us that night.\n\nFor the next three days, the routine continued with Roy refusing to leave Jessica's grave.\n\nOn the fifth day, Amanda, Bryan and I were about to leave for the cemetery, when the front door opened and in walked Roy. We stared at his face which was contorted in pain and hurt, the first emotion that Roy had shown in days. \n\nHe howled in anguish, \"She didn't come back, daddy. She was supposed to come back...\" \n\nI am certain that Roy would have fallen if not for Amanda wrapping her arms around him. Bryan and I were soon by his side too. I whispered softly in his ear, \"Let it go baby, don't hold back, let it go. We are here for you. Please baby, let it go.\"\n\nAnd he did. He sank to his knees, the flood gates opened, and he wailed. They were probably the first tears that he had cried for the loss of his beloved sister. \n\nAfter a long time his wails turned to sobs. I broke loose of the huddle and went to get some tissues to dry Roy's tears. Amanda took them from me and attended to him, while Bryan held me. \n\nAs Roy's sobs subsided, Amanda helped him to stand. It was heart-warming to watch Amanda's 105-pounds lifting Roy's 165 pounds off the floor, and then to hear her say, \"I am going to take him to the upstairs bathroom and get him cleaned up.\" \n\nBryan followed me to the kitchen, while I started breakfast. \n\nAfter a while Bryan decided to go check on Amanda and Roy. He was only gone for a minute before returning. His cheeks were blushing bright red. \n\n\"Don't go up there,\" he chuckled.\n\n\"Why? What's going on Bryan?\" I asked\n\n\"She is giving him a shower.\" He paused \"They are both in the shower and she is soaping him down, but good.\"\n\nI looked at him closely. \"Are you ok with this?\"\n\nBryan chuckled again. \"I think Jesus would be just fine with this.\" Then, looking straight at me, he asked, \"Are you ok with this?\"\n\nI laughed. \"Yea, I think he needs her right now. There is no way I will stop it. I'm worried about him.\"\n\n\"So am I, baby, but I think he has everybody he needs to get through this.\"\n\nI went to him, and he wrapped me in his strong arms. Breakfast could wait for a moment or two. I felt much better having my son home and my husband holding me. \n\nI had breakfast ready a short time later. I fixed French toast and bacon, Roy's favorite. I went upstairs to let Roy and Amanda know that breakfast was ready. I made sure to make plenty of noise on the way, to avoid possible embarrassment for either them or me.\n\nI found them in Roy's bedroom. He was buttoning a clean shirt to complement his pants, socks and shoes. Amanda was already dressed, but still with wet hair. She was sitting on his bed watching him with far more than just innocent curiosity. \n\n\"Breakfast is ready as soon as you two can get downstairs.\" I informed them. \n\nThey turned to me. Amanda spoke. \"Thank you, Mrs. Belton, we will be right down, he's almost done.\" \n\n\"Thank you, sweetheart.\" I smiled brightly and went back to finish setting the table. \n\nA few moments later Roy and Amanda entered the kitchen, took their seats, and waited for grace. Roy looked and smelled much better. Amanda was filled with a bright-eyed admiration for Roy, that she couldn't hide even if she wanted to. \n\nAfter Bryan said grace, we began to eat. Roy just seemed to play with his food though. \n\nRoy turned to Bryan, with anger in his eyes, and forcefully asked, \"Why did God take Butter Bean dad? She never hurt anyone. She never did anything wrong. She never brought anything but happiness and joy to everyone she met. Why would God take her?!!\" \n\nHis voice became louder as he spoke. Then he glared at Bryan awaiting an answer. \n\nBryan finished chewing, swallowed, then took a sip of orange juice before answering.\n\n\"Roy,\" he took a breath, \"I think you have this a little mixed up.\" He looked right at Roy. \"God didn't take Butter Bean from us. Cancer did. God had nothing to do with it. He only took Butter Bean when he knew the pain would be too much for her.\" \n\n\"He could have stopped it,\" Roy argued. \n\n\"No son, he couldn't. That's not how it works. God can't stop what man has created. He never interferes with free will.\"\n\n\"I hear about miracles every day. You preach about them. Where was Butter Bean's miracle?\" Roy was on a roll, and he wasn't letting up. I nearly fell out of my chair when Bryan answered this one. \n\n\"She did.\" Bryan let that sink in. \"God knew, son. He knew that Butter Bean would only be with us for a short time.\" Bryan's eyes started to well with tears. \"So, he gave her a miracle. A really great gift. Son, he gave her you.\"\n\n\"ME!\" \n\n\"Yes, son. He gave her the most wonderful gift I have ever witnessed. He gave her the world's greatest brother. You see, son, I watched you two together. You gave Butter Bean more happiness, love, joy, companionship and security than some people get in an 80-year life span. Roy, she had a wonderful life, albeit so damn short, because you were in it with her. She received a miracle. You were her miracle, son.\"\n\nBryan stopped there, though I could see he had more to say. It took a few moments before he went on. \n\n\"Roy, God knows how much you are hurting. He feels it too. I assure you that God will give you people in your life who will help get you through your grief and pain.\n\nRoy finally looked down, but Bryan wasn't done. \n\n\"Roy, you won't want to hear this right now, I know, but... Roy... when you get through all your grief, and you will get through it, God will reward you for the loyalty and love you shared with your sister. In what ways I don't know, but he will.\" Bryan looked straight at Amanda, winked at her, then looked back at Roy before continuing. \"Roy... just don't be a dumb-ass and ignore his gifts.\" Bryan then smiled and continued eating as if he had said nothing.\n\nBryan was right. Roy's relationship with his sister was special. Roy was meant to be Jessica's miracle. I watched Roy as he tried to take a bite of French toast. He dropped it onto the plate and ran from the table with Amanda following on his heels. \n\nI started to get up to follow them, but Bryan grabbed my arm. \"Honey... hold tight. Amanda has this one. It won't hurt him to miss one meal.\" \n\nChapter six: Revival\n\nFour days later Roy was still not back to himself. We tried to let him have his space, but he was still pining. He hadn't eaten properly all week. Watching him suffer was heart-breaking.\n\nThen, out of the blue, Amanda slammed her hand on the table. She turned and confronted Roy. \"Damn you, Roy! Listen to me, and listen good.\" She had his attention, heck she everyone's attention.\n\n\"If that was you in the cemetery and Butter Bean was sitting here in your seat, would you want her to mope around and feel sorry for herself all day every day? Is that what you think she wants you to do? Dammit Roy, wake up and honor her by living the best life you can. Let people know she made you a better man because you knew her. Honor her memory by realizing all she wanted for you. Remember when they sedated you in the hospital? All Butter Bean could do, as sick as she was, was try to get to you. She wants you to be happy. Not like this. Well, Mr. Belton, get whatever it is out of your ass and try to act like the man I fell in love with.\" \n\nAmanda gasped, put her hands over her mouth, and jumped up with wide eyes and red cheeks. She didn't mean to, but she had just declared her love for Roy. She fled because she couldn't handle the possibility of rejection. She wanted so badly to earn his love.\n\nRoy looked up at Bryan and me with a confused look on his face. \"She loves me?\"\n\nRoy became a man on a mission. He had always been a B or C student, but that changed almost overnight to straight A's. He did internet research and studied scientific procedure and how to perform experiments. He rearranged his course of study to include the sciences, and especially Biology. \n\nI didn't mind when my car was relocated from the garage to the driveway. I didn't mind, either, when wood fencing and all sorts of other building materials showed up. What did bother me though, was when 300 mice took up residence in our garage. Large pails, well-labeled, showed up full of feed for the rodents. Cages, paper everywhere, clip boards with data, cameras, and more. \n\nAmanda shared the passion for the scientific experiments, helping to collect data, helping to analyze the results and, generally, being irreplaceable.\n\nWatching them, we never asked the reason for this activity. One night, finally, all was revealed.\n\n\"You were right, dad,\" Roy announced.\n\n\"Right about what?\" Bryan asked. \n\n\"About our food causing cancer. Specifically, genetically enhanced food. The food that has been genetically enhanced to increase yields.\"\n\nRoy was gloating now. \"I have data showing most of the mice that have contracted cancer have eaten from a genetically enhanced food supply. It isn't enough to start a federal case, or even sue the feed suppliers of the world, but it's a start. I have turned in the results to my science teachers and they're impressed. They are so impressed that they want to enter us in the state Science Fair.\"\n\nRoy was beaming now. \"We are entering as a team because Amanda contributed so much, and she has the knowledge to help answer any questions that the judges may have.\"\n\nOk, so the mice were sort of cute, and they had served a purpose. If Roy did well at the Science Fair, then his efforts might be rewarded with a scholarship, I thought. As his mother, I was very interested in my son's education. The chance that he might find a way to prevent some types of cancer would be a bonus.\n\nTwo months later Roy and Amanda were a hit at the state Science Fair. Over twenty students from Roy's school, including Steven Odell, helped with the presentation. Professors from Tulane University took notes and asked questions of both Roy and Amanda. \n\nIn the end, we never received a call or even a letter from Tulane University School of Medicine. Instead, their representatives knocked on our front door. \n\nRoy and Amanda were at the dining room table doing research, this time for the National Science Fair to be held in Washington State. \n\nRoy barely glanced up when I brought in the two men to introduce them.\n\n\"Roy Belton?\" one of the men asked. Roy looked up and nodded. \n\n\"I am Todd Keystone, an oncologist. I work for Tulane Medical Center, and would like to offer you a scholarship as a reward for all your research.\"\n\nTodd was very professional and forthright. He offered Roy a scholarship for any major he wished to carry. He also offered a placement at their medical school and was willing to give a written guarantee. Roy could enroll in their summer program, to prepare for Tulane, as soon as school was out. \n\nThe offer was beyond my wildest dreams for Roy's future. They even offered him an allowance for food and accommodation, provided that he continued his research in their labs.\n\nRoy sat and mulled over their proposal for a while. Then he shocked everyone. \n\n\"No, thank you,\" he said, and took Amanda's hand. \n\nThe men were just as speechless as I was. \n\nFinally, Todd asked, \"What are we missing? What will it take to get you to attend Tulane?\"\n\nRoy replied, \"Have you not been introduced to Amanda? She is my girlfriend, yes, but she is also my backbone. She keeps me grounded and focused. What you saw at the Fair was the combination of Amanda's and my work. I can't go to Tulane, become a doctor and ignore the woman that got me to this point. Considering that she provides the strength and encouragement that I need, whenever there are problems and I experience self-doubt, I simply cannot go to Tulane without her. I know she is a year behind me, but she has a higher G.P.A. and, in effect, has contributed to at least fifty percent of this project. I know she will have to wait a year first, but I will be ready for her. Either she goes or I don't. Oh, and on the same terms as me.\"\n\nI didn't know whether to kiss him for being such a wonderful man or kick his ass for blowing a chance to go to Tulane medical school. \n\nTodd's colleague finally spoke. \"I am Jason Mc Avery. I will have the appropriate documents ready for you to sign this evening.\"\n\nHe held out his hand to Roy, \"Welcome to Tulane, son\", then he shook Amanda's hand, \"Welcome to Tulane young lady.\"\n\nAmanda then said, \"I want to become a nurse practitioner.\" Roy wrapped her in his arms.\n\nSix years later, on September 22nd, Roy and Jessica's birthday, Roy was sitting on a fold-out chair at Jessica's graveside with Amanda on his lap. Bryan and I, Steven, and several other people were there also. Roy had invited us all to be there as he had an announcement to make. We were all waiting. \n\n\"Butter Bean, I have something to share with you today. As you know, Amanda and I got married a year ago. I am doing well with my research, and Amanda is almost done with medical school. She decided to become a doctor instead of a nurse. We have bought a three-bedroom house not far from where I work.\"\n\nHe placed his hand on Amanda's stomach and, suddenly, I knew. My smile could have lit up the whole of Louisiana right then.\n\n\"Butter Bean, let me introduce you to your nieces. Yes, there are two of them. The first one to be born will be called Jessica Ann Belton. I wanted to name the second twin Jessica Bea and, if we have a third girl, she would be Jessica Ce. You get the idea. Well, I have to say I fought a tough fight, but lost, so I had to concede to the name Lora Lea Belton. You are the first to know, so don't tell anyone yet, ok?\n\nWe all chuckled.\n\n*****\n\nThank you for reading. Comments welcome... \n\nR, lee Benton"
    ],
    "authorname": "lbenton",
    "tags": [
        "dad",
        "heartbreaking",
        "love",
        "mom",
        "sister",
        "soulmate"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/hey-sis-1"
}