{
    "title": "Little Packages",
    "pages": [
        "I paused at the edge of the bedlam and smiled for what felt like the first time in over two years.\n\nAround me, people rushed passed, anxious to get to their event, or get some limited edition item. A pair of Batmen strolled past holding hands. An overweight man dragged a trolly behind him stacked full of comics to get signed. A trio of teenage girls dressed up as anime characters I didn't recognize giggled and posed for what was likely the first of a thousand pictures taken of them over the weekend. Banners announcing cosmic events featuring women in serious, and seriously uncomfortable poses hung from the rafters. It was early and already the noise level was bordering on uncomfortable. Perfect.\n\nComic con. Christ I'd missed it. I almost hadn't made this one. The amount of wrangling, well-meaning \"are you sure?\" and offers to come along with me \"just for some company\" were well meaning, but maddening. I understood their concern, honestly I did. And part of me was deeply touched that my friends and family, who had kept me sane after Beth and the accident, were still worried about him, after two years.\n\nBut a man can't stay coddled forever. I was creeping up on 50 and was determined I wasn't going to spend the rest of my life dwelling on a moment. I had to live again. I had to remember how to be happy.\n\nFamily and friends didn't get it, of course, but there were few places on Earth that made me as happy as wandering around a convention room floor filled with tens of thousands of mildly crazy geeks. That many people, all so happy to immerse themselves into a thing they loved...it was like a massive positive energy generator. Positive energy I was more than to absorb. I could feel the muscles in my face ache slightly, unused to their current configuration. They'd get used to it. Adjusting the straps on my backpack, I put the cane forward and began slowly walking through the con.\n\nIt was a different pace for me. At previous cons I was going flatout almost all the time, convinced I was missing something cool. Some signing, some exclusive, a cool panel, some hot shot artist who was only taking commissions from the first 5 people to come to his table. The walking stick and the knee brace made sure that wasn't happening. People rushed past me, some uttering a brief apology if they jostled me. It was my new reality and I was going to have to adjust. This time I had to be content enough to ramble down the aisles and past the booths and tables and just soak it in. I needed my joy back, not a ton of stuff.\n\nBut it was still a comic con. Comic cons are, by design, made to suck your money away. The only people who didn't spend a ton of money there were the ones who didn't have any. And even those people sometimes found themselves at event ATMs, paying outrageous fees, so they could take out enough to get that thing. \n\nComic cons had a distortion field. Every decision made at the con made sense. It was only after you left the building and walked a couple of blocks could you look at what you had bought and go \"what the fuck was I thinking?\"\n\nFive hours in and so far I'd managed to avoid any outrageously stupid purchases. Some new graphic novels, signed by the creators. A fun t-shirt. The page of art was an extravagance, but I'd always liked that artist. And I highly doubted it was the last page I was going to buy before this weekend was over.\n\nStill, I was feeling good. I knew my friends were worried I was going to come here and freak out and just make a series of bad decisions. I was getting texts asking how things were going, which I responded to with happy emojis just to keep them from worrying. But it was nice that so far they were completely wrong about disasters.\n\nThat's when the witch slammed into me, sending me flying onto the floor.\n\nI loved cosplayers. I really do. Anybody willing to spend weeks and hundreds, hell, thousands, of dollars on a costume so they could pretend to be Boba Fett, or Elvis as a Stormtrooper or Spider-man...I admired them. I really did. It wasn't my thing, but they were fun and mostly harmless.\n\nMostly.\n\nAn occupational hazard of cosplayers is that they were often oblivious to their surroundings. The older ones eventually developed some radar sense. But the younger ones were normally too excited to be at a con, happy to be with their friends and, well, broke from putting together their costume. So their main thrill was hanging out and posing for photos for everyone who asked.\n\nThis one was so eager to do a dramatic Scarlet Witch hex pose that she really didn't notice I was walking behind her. Bam. Splat.\n\nIf my knee wasn't fucked up, I probably would have managed to stay upright. If it wasn't aching after overdoing it and spending hours walking around concrete floors, it probably wouldn't have hurt when I landed on the concrete floor.\n\nSince my knee was fucking up and aching, it meant when I landed awkwardly, I yelled out \"Ow, fuck!\"\n\n\"Oh, my God! I am so sorry,\" I heard. \n\nThen there were peals of laughter. \"Christ, Ashley, why are you always such a ditz? You just about killed that old guy.\"\n\nSo it turns out that five hours at a comic con wasn't quite enough to repress two years of anger and depression. I was fully gearing up to tear the head off this stupid bitch and her friends and then possibly do something that was going to get me tossed out of the con and likely committed to an asylum\n\nI looked up and there was just...\n\nI still don't have the words. It was like all the pent up anger just switched off. She was...adorable. Not sex personified or anything like that. You just immediately wanted to pick her up and put her in your pocket to keep her safe. Big, luminous green eyes, pouty lips and a mass of red hair kept barely in check by the headpiece she was wearing. She had a face that made it almost impossible to stay mad at, and was young enough that she didn't know she had this particular super power and how she could use it for evil if she wanted.\n\nShe also appeared to be about 100 pounds soaking wet and maybe five feet fall. More pixie than anything else. I suspect normally she would have bounced right off me, but she must have caught me at just the right angle and had some momentum on her side.\n\nShe also looked utterly horrified.\n\n\"Oh my God,\" she yelled. \"I am so sorry! I'm such an idiot, I was posing for a photo, and I don't have my glasses on because they clash with the costume and I didn't see you there and oh Jesus, are you ok?\"\n\nI was sprawled on the floor and my knee was singing a minor aria, but I managed to find it in myself to give a small laugh.\n\n\"I think I'll live,\" I said, using the cane to leverage my way up. The girl grabbed my arm to try and help pull me to my feet. Except this was when my knee twinged, I lost my balance and since I was easily twice her weight, she didn't have the strength to keep me upright, which meant she also lost her balance. I went back down on the floor with 100 pounds of cute redhead landing on top of me.\n\nAnd now we were in a sitcom. I could hear people laughing around me. She got up on her hands enough to look down at me, utterly horrified.\n\n\"HI there,\" I managed. \"You ok?\"\n\n\"Oh my god!\" she yelled, getting to her feet so quickly I briefly wondered if she might not have super powers.\n\n\"Jesus, Ashley. You're such a clumsy bitch,\" said a girl nearby, one of her friends, I'm guessing.\n\nBefore I could say anything further, a dark figure loomed over me.\n\n\"Need a hand up?\" asked Darth Vader.\n\nPerfect. I grabbed his hand and he easily leveraged me up to my feet. He was well over 6 feet tall and I had the feeling it was all him, and very little of the costume. \n\n\"Thanks, Lord Vader,\" I managed.\n\n\"Don't mention it,\" he rasped. \"Literally. Bad for the reputation.\"\n\nI surprised myself by laughing again. A minute ago I was ready to commit murder; now I was laughing. I looked around for...Ashley? She was a couple of feet away, looking utterly mortified. Her two friends were still laughing at her.\n\n\"I mean, honestly, Ashley, that was hilarious. I just wish I had the camera going. That would have made an awesome TikTok video. You're such an awkward bitch.\" That's when her friend, dressed up like Rogue, finally noticed me. She stepped back and, with what she thought was stealth, slipped her phone out to record what she was sure was going to be an epic meltdown on my part.\n\n\"You ok?\" I asked? She looked dumbfounded.\n\n\"Am I ok? I just crashed into you and then landed on top of you. I almost killed you!\"\n\nA brief flash of the crash shot through my head. I repressed it.\n\n\"I've been almost killed by heavier things than you. I'm fine. On the other hand, I'm concerned you might die of embarrassment. It's ok,\" I said. I wanted to put a reassuring hand on her, but I was a fully clothed middle-age man with a foot of height on her and she was, maybe, 18 in a red swimsuit, stockings, thigh high boots and cape. Discretion won out.\n\nSensing a blowout not in the making, Rogue turned her phone off in a huff.\n\n\"She's always a ditz like that. I don't even know what to do with her,\" she said.\n\n\"Perhaps try being kinder and a better friend,\" I said, knowing instantly how that was going to go over.\n\n\"What the fuck do you know,\" said the other friend, who was an anime character I didn't recognize. That's when I realized getting into drama with teenagers at a comic con was something I absolutely did not need. I ignored the two friends and turned to Ashley.\n\n\"I'm fine, I promise. Don't spend the rest of the con beating yourself up on this, ok\"\n\nShe nodded.\n\n\"But maybe do wear your glasses even if they clash with the costume.\"\n\n\"Ok,\" she said with a hint of a smile.\n\nAnd that was enough drama for me. Fortunately, there was a room nearby with a panel getting ready to start in a few minutes. I had no particular interest in a History of Archie comics, but it would let me sit down and give the knee a break and escape the drama. I hobbled off towards the room, feeling death glares from a pair of teenage drama queens drilling into the back of my skull.\n\nI'd felt worse.\n\n***\n\nAfter Archie there was another panel on how to become a writer for geek publications, which seemed to be entirely about how this was a terrible idea if you enjoyed things like food and shelter. I kind of felt bad for the eager young hopefuls who kept asking questions like \"no, there has to be a loophole somewhere.\" There wasn't.\n\nBy the time it was over my knee felt ok enough to walk to the hotel. Typical of a con, I'd forgotten to eat lunch, so some room service, followed by pain killers and maybe a soak in the hotel's jacuzzi.\n\nThe panel was the last of the day, so the con was breaking up, with streams of people heading out the doors. For some, it was their only day. For others, like me, it was just day one the ultra geek marathon. I joined the streaming hordes and began to make my way down to street level. From there, it was a short hobble to my hotel. That's when I heard a voice call out from behind me.\n\n\"Hey there!\"\n\nI turned around and it was my witch. She had a puffy coat on over her costume, but it was still fall and she was still in a modified one-piece swimsuit. She looked cold...and embarrassed.\n\n\"Ashley, you're freezing! Why are you out here?\"\n\nShe looked baffled for a second. \"I told you my name?\"\n\n\"Your 'friends' said it when they were giving you shit.\"\n\nShe blushed even deeper. \"Oh yeah, right,\" she said. \"Look, I just really wanted to apologize, but properly. I know I was babbling a lot earlier, and I was just mortified by what happened and my brain kind of locked up. Are you ok?\"\n\nThat she managed to ask that with her teeth chattering was kind of impressive.\n\n\"I'm fine, but I'm going to have to take you to hospital for hyperthermia. How long have you been waiting out here to apologize to me?\"\n\nShe glanced down at her shoes. \"I dunno, 20 minutes or so. Heather and Lesley said I was nuts and they blew me off to go get ready for an after-con party they got invited to. But I just felt really bad. And you dealt with it so nice even after they were so bitchy toward you and I hate it when people think badly of me and...\"\n\nI put my hand up. She paused.\n\n\"I babble sometimes,\" she said.\n\nI couldn't help but laugh. \"That's ok, it's kind of adorable.\"\n\nCrap. Crap. Crapity crap. Now I was being the creepy old guy to the nice girl trying to apologize. Crapity crap.\n\nFortunately she didn't seem to mind. She just smiled. And then shivered again.\n\n\"Anyway...Sorry!\" she said, laughing. \"Now I should run back inside and get changed and track down the girls.\" She reached down to grab the backpack at her feet.\n\nI glanced back at the convention center and noticed a couple trying to get in. Security wasn't letting them, despite a lot of pleading. I nodded in that direction and Ashley looked, and moaned. \n\n\"Ohhhh nooooo. I really don't want to have to go all the way to Queens to change at the hotel and then come back to Manhattan.\"\n\nI had just been mildly creepy, but decided to chance it.\n\n\"Look, my hotel is just a block or so away. There's a washroom in the lounge area. Just pretend you're my daughter or something and go in there and change. That way you're not freezing your ass off on a subway to Queens and dealing with potential crazy people.\"\n\nShe brightened up rather than be grossed out. \"Really, you don't mind? That'd be awesome!\"\n\n\"You stayed out here to freeze and apologize rather than go party with your friends. It's the least I could do. Come on,\" I said, hobbling towards the hotel. \n\nShe slipped her arm into mine and burrowed a bit. I glanced down at her. \n\n\"I'm freezing and you're warm. Come on 'dad'. Let's get you to the hotel.\"\n\n***\n\nThere was minimal hassle at the hotel and after hearing her stomach snarl as we walked passed the lounge I managed to persuade her to have some food with me. \n\n\"I'm the one who knocked you over. You shouldn't be buying me food,\" she complained, but without much conviction.\n\n\"You can't go out drinking with your friends with your stomach grumbling like that. You'll be hammered after two sips.\"\n\nShe giggled. \"I'm a lightweight at the best of times, but I'm 19. They won't let me drink here. But I am too hungry to argue. So thank you.\"\n\nWe agreed on a burger and she went to get changed. I found a spot in the lounge that was near a fake fireplace, but it threw off some extra warmth.\n\nIt was a toss-up on which was going to arrive first, the food or Ashley. As it turns out, it was a tie. Just as the food was being put on the table, she came out of the bathroom. It turns out that transforming from the Scarlet Witch to a petite redhead in yoga pants and a cardigan takes a while. Although I did manage to notice she'd fixed her hair and put it back in a ponytail which went about half way down her back. She'd washed her face and put on some more subtle make-up. And, with amusement, I saw she'd put on a pair of glasses.\n\nShe plunked down in the chair across from me and took a moment to both enjoy the heat and look ravenously at the hamburger.\n\n\"I'm going to thank you now because I might not talk much for the next few minutes. I haven't eaten except some granola bars around noon,\" she said, reaching for the burger.\n\n\"I won't take it personally. Go ahead.\"\n\nI've found there are three kinds of thin people. Those who are regimental about their weight, counting every calorie and using precise exercise routines to ensure they stay in an exact weight range. Those who are simply picky eaters and don't seem to really care for food. And finally, those with freakish metabolisms that can process the most garbage food without gaining an ounce.\n\nJudging by the way Ashley messily dismantled the burger, I suspected she was the latter. In less than 5 minutes, the burger and fries were gone and she was eyeing my food in a way that made it obvious she was wondering if it would be bad manners to steal some fries. I tipped my plate in a way to indicate I was willing to share, and she grabbed one and dipped it in some ketchup.\n\n\"Let me guess, you blew all your money on your costumes, then travelling here, and a con pass, you're sharing a room with your friends and you failed to budget that you might need food this weekend,\" I said.\n\n\"How'd you guess?\"\n\n\"Hardcore cosplayers tend to frown on any expenditure that doesn't go towards fabric and props. True?\"\n\nShe nodded. \"I have the madness. My mom and people in my high school thought I was a nut. Thank god for the internet where I can meet other madwomen with a similar addiction.\"\n\n\"Is that where you met...\"\n\n\"Heather and Lesley, yeah,\" she said, making a face. \"We met online, and then we were all going to the same university together so we've been hanging out for a few weeks now. I'm not sure I like them, but, well, I'm kinda stuck with them for the weekend.\" \n\nI knew for a fact that I didn't like them. Of course you can give your friends shit when they do something stupid or make a mistake. I did it to my friends all the time, just like they did it to me. Those two seemed less inclined to do some good natured teasing, and more like putting Ashley down to make themselves look better. I knew the type from my time in university. I had no time for them then either.\n\n\"So what's your addiction, dad?\"\n\nI looked startled and it was my turn to blush a bit.\n\n\"I don't think there's any risk they're going to ask you to leave so you don't need to call me that now.\"\n\n\"Oh, I know, but you haven't actually, you know, told me your name. You're just the dude I nearly killed.\"\n\nI shook my head. Christ, I actually hadn't told her my name. Apparently the senility must be kicking in.\n\n\"My name is...\"\n\nShe reached over across the table and put a finger on my lips. It was warm and I could vaguely taste salt and ketchup on it.\n\n\"Nope. You're my dad now. You've missed your window to tell me your real name. If we're still talking at the end of this con, you can tell me your real name. For now, it's dad.\"\n\nThis was the moment I was glad for the table, which was covering my quickly growing erection. Daddy-daughter play was always one of those unrealized fetishes for me. My wife was never interested and considered it weird. And now I had a sexy 19-year-old redheaded geek calling me dad with a bratty smile on her face. This was going to be an interesting, and possibly really painful weekend.\n\n\"I've learned to pick my fights carefully with redheads,\" I said, shrugging my shoulders in defeat.\n\n\"Good call, dad,\" she said. \"So, what's your vice...comic book wise, of course.\"\n\nOh yes, she was going to be an entertaining pain this weekend.\n\nThe next hour was spent arguing the merits of different characters and comic books. She lit up when I said I loved Batgirl, but frowned when I said I preferred Cassandra Cain over Barbara Gordan. She felt compelled to defend the redhead sisterhood at length. I honestly couldn't remember the last time I laughed and relaxed quite so much. I was quite sad when her phone buzzed and she looked at it and frowned.\n\n\"They're wondering if I'm dead. I should probably get going. There's a party at some bar I'm missing,\" she said, reaching to put on her coat. \"I'd honestly prefer to stay. This has been fun.\"\n\n\"Likewise. It's been a rough couple years so this has been quite nice.\"\n\nShe looked at me with a tilt of her head like she wanted to ask more, but decided it wasn't the time.\n\n\"Big plans for the rest of your evening?\"\n\n\"Dad's an old man,\" I said. \"I think I'm going to soak in the jacuzzi for an hour and then go to bed.\"\n\n\"See, now I'm really regretting going,\" Ashley said. She managed to say it in a tone balancing the fine line of making me wondering if she was serious or just teasing. It was an impressive skill set for her age. Or maybe they all had it and I just wasn't used to paying attention.",
        "\"I'm sure you'll have lots of fun,\" I said. And then, I had a 'fuck it' moment. I reached into my pocket and pulled out my phone. I pulled up my number and showed it to her.\n\n\"Do me a favor and text me when you get back to your room safely. Us dad's worry about our girls out in the big city.\"\n\nShe grinned, and took a quick photo of the number, and checked to make sure she could read it. Then she pocketed her phone, and threw her back over her shoulder. Then, on impulse, she bent down and kissed me on the cheek.\n\n\"You know you just blew your chance to get rid of me for the con? You could have hid from the rambling, clumsy redhead, but now you have to deal with me all weekend.\"\n\n\"I'll manage.\"\n\n\"I'm looking forward to finding out,\" she said, and then headed out of the lounge. Just before she left, she paused, looked back at me with a grin. And then called out loud enough for most customers to hear.\n\n\"Thanks for supper, daddy. See you later!\" Then she was gone.\n\nA few customers gave me a look. I ignored them, left money for the meal, stood up and went to my room to change for the jacuzzi, wondering what exactly I had gotten myself into.\n\n***\n\nI slept like the dead, waking up only briefly around 1:30 when my phone pinged. It was a text.\n\n\"Safe and sound back at the hotel, dad.\" And then there was a photo of her lying in bed. It looked fairly modest...she was wearing a nightshirt with Batgirl on it and her make-up had been all removed. Didn't make her any less adorable, though.\n\n\"Good girl,\" I texted back. \"I'll see you tomorrow.\" I then fell back asleep.\n\nIt was only after I woke up 7 hours later that it occurred to me she might have wanted to chat more or sext or something. Then again, that had a slight creepy vibe I couldn't shake off, so I was glad I didn't.\n\nA quick shower, a survey of which geek t-shirt to wear that day (I opted for a Batgirl shirt from the animated series), and a restocking of critical supplies - a bottle of water, granola bars, and some trail mix. I rechecked my wallet to see if I needed to grab some from the room safe. The damage from Day 1 wasn't too bad, but some extra money wouldn't hurt.\n\nI glanced at the pill bottle holding the anti-depressants. I was feeling good. I briefly entertained the idea of not taking them, but then remembered that being in the middle of a giant comic con would be a hell of a place to suddenly get really depressed. I took the pill.\n\nI picked up my phone off the charger and debated texting Ashley. Suddenly I was 15 and wondering if I should ask the cute girl in my class out for a date. Those things rarely worked out for me back then.\n\n\"To hell with it,\" I thought.\n\n\"See you at the con. Looking forward to your cosplay.\"\n\nHarmless. Not creepy.\n\nI hobbled over to my cane, grabbed it and headed out the door.\n\n***\n\nI'd been at the con for a little over an hour and was absolutely not checking my phone every five minutes for a text when there finally was one.\n\n\"Finally got in :(. The line was crazy and my bitch roommates slept in. Where are you?\"\n\n\"Artist Alley\" I replied.\n\n\"Cool. I'm stuck with them for an hour or so. I'll come find you. Let me know if you leave that area.\"\n\n\"No prob.\"\n\nWalking around Artist Alley at a con was the easiest thing in the world for me. Put me in a room filled with artists selling books, prints, and artwork and I was in my version of heaven. The only challenge was not spending all the money.\n\nI was enjoying myself. I was chatting with an artist about his latest book and eyeing some of the pages he had for sale. That explains why I didn't see her coming up behind me. It was only when the artist looked away from me and said \"That is an awesome Batgirl\" that I turned around.\n\nThere are all kinds of Batgirls. You could go old school grey and yellow from the 70s and 80s. You could do the armored costume. The one from the animated series. The hipster Burnside costume.\n\nAshley decided they were all too conservative and went for the Bombshell version. Which is to say - yellow knee-high Doc Marten, purple parachute pants, a utility belt, a purple corset which pushed up her breasts giving her some modest cleavage while leaving her midriff bare, a yellow and purple cape, and a purple aviator cap with goggles. Her red hair was pulled into a ponytail out the back of the cap.\n\nFortunately the artist I was speaking to couldn't see my face as my jaw dropped. She was a bombshell and she knew it. I found myself at a loss for words.\n\nAshley beamed at my reaction, but decided to not out me to everyone as a lecherous pervert that I feared I was.\n\n\"Hey, dad. There you are? Spend all our money yet?\"\n\nI managed to compose myself before speaking. \"Not yet,\" I said. \"Have you been fighting off the boys all morning?\"\n\n\"Only a few, and a couple of girls. But I've been behaving.\"\n\nYes, she was going to be the death of me. The artist I'd been speaking to asked if he could get a picture with her. She agreed. I'm not sure he believed I was her father, but he wasn't taking any chances and kept his hands visible the whole time.\n\nWe walked off down the crowded aisle, and she looped her arm in with mine and began giggling.\n\n\"I thought you were going to have a stroke.\"\n\n\"I'm not sure I'm entirely out of the woods. You look incredible.\"\n\nShe smiled. \"Thanks, dad. I thought you would like it.\"\n\nWe strolled around Artist Alley, chatting about the different things on tables, and frequently pausing so Ashley could pose for a photo. It was a good time, but my knee needed a break and I could use a bite to eat. Finding a place to sit was going to be impossible, so I navigated towards the back wall of the convention centre. There were plenty of others with the same idea, either taking a break, having a snack, or checking their phones, but I managed to find a spot and eased myself down to the floor. I stretched my bad leg out and gently massaged it. Ashley looked worried and hunched down next to me.\n\n\"Are you ok, dad?\"\n\nI was never not going to get a thrill hearing her say that, I decided.\n\n\"I'm fine. I'm just an old man and I need a break and some food. You can run along if you want and hang out with your friends.\"\n\nShe pouted. \"Trying to get rid of me? No chance,\" she said and flopped/collapsed into an inelegant pile down on the floor next to me. She then reached into her utility belt and pulled out some granola bars and water.\n\n\"Clever,\" I said, admiringly.\n\n\"I've got my moments,\" she said.\n\nWe ate our snacks and she rested her head on my shoulder. It was a nice moment, which is when my brain decided it would be a good time to try and ruin things.\n\n\"I don't understand,\" I said, staring off at the crowd. \"You're beautiful, smart, funny and geeky as hell. You are a dream girl for a lot of people here. I am the very definition of an average, middle-age guy. Why are you spending your time with me?\"\n\nShe lifted her head off my shoulder, looked at me a moment, weighed her options, and decided to punch me in the shoulder. Then she tucked her arm into mine and put her head back on my shoulder.\n\n\"Thank god I don't like you for your brains,\" she said. \"I mean, cute, geeky and kind are good enough for me. Brains would be nice, but I guess a girl can't have everything.\"\n\nI was not cute. I probably had never been cute. My hair was almost completely gray and I'm sure the beard was not helping much. However, I was in surprisingly decent shape. Turns out the two year long horror show I went through was good for weight loss. Plus the last six months I had started working out as a way to keep me distracted. Still, I was not any 19-year-old girl's definition of cute. Maybe distinguished on a good day. I took a breath to respond when she held up a finger, as if to shush me. I paused. She took a deep breath, but didn't look at me when she spoke.\n\n\"So, secret origin time. I'll be wanting yours later, by the way, but for now, we'll do mine.\n\n\"When I was 11, my dad left home. Just abandoned mom and I. Which you would think would make me hate him, but I was a good and proper daddy's girl at this point. So when he up and left because he got tired of fighting with mom over his drinking, naturally I blamed mom. And being a redhead, it means I was particularly stubborn and vicious about it. God, the fights mom and I had,\" she said, shaking her head.\n\n\"It also meant when I was old enough for the hormones to kick into full gear I was hell on wheels. From 12 to 17 I made a lot of really, really questionable choices. I was a little too much my father's daughter when it came to drinking and drugs, which is why I don't do them anymore. I partied a lot and...I discovered I had a type. I liked older men.\"\n\n\"You went looking for a daddy,\" I said.\n\nShe nodded. \"The problem being when you're a needy wild child with daddy issues, you're going to find men who will absolutely take advantage of that situation. And I was...\"\n\nShe paused a moment. I was beginning to feel like shit poking at her like this.\n\n\"I'm sorry. I shouldn't have pried like that. I know that must have been hard.\"\n\nShe stopped leaning against my shoulder and sat back up on the wall, staring off at the crowd.\n\n\"Yeah, it was. But I read something once. 'We learn by doing.' Simple, but I like it. And, you know, I learned some hard lessons, but I got through it. And it gave me one hell of an abusive asshole radar. Which also has its downsides. I tried to give up older guys. You know, find a nice guy closer to my own age. Maybe stop chasing after daddy figures.\n\n\"But when you try to date 18 to 24 year old guys, your asshole radar is going off all the time. Or they're so immature that I have no patience with them. It's been a pretty frustrating few years, dating wise.\n\n\"But I came here to relax, have some fun with my friends and you know, maybe try and find a guy my age that isn't, by some miracle, a complete dick. But then I literally ran into you...\"\n\n\"You do pack quite a punch for such a little package...\"\n\n\"Jerk,\" she said, blushing a bit. \"But my asshole radar didn't go off with you. You could have been furious with me, and you weren't. When I was weird and stalked you outside the con, you were more concerned about feeding me and making sure I was warm. I texted you in the middle of the night, and you were just happy I was home safe and didn't try to sext me.\n\n\"And I know you like me. I know you do. I can see it when you look at me. But you're concerned about coming across as a lecherous old man and taking advantage of me...\"\n\n\"Wow,\" I said. \"Are you studying psychology?\"\n\n\"Design, actually,\" she said. \"I'm just good at reading people and knowing what they want.\"\n\n\"You're very good at it,\" I said.\n\n\"So you do like me, daddy?\" she said. Daddy. Not dad. Whole other thing. Wow.\n\n\"I do,\" I said, surprising myself a bit with admission. \"But I'm carrying some damage of my own in my Secret Origin.\"\n\nShe nodded, sliding up the wall, rubbing her butt to get rid of numbness. I leveraged my cane to help push me up the wall. She took my hand and leaned up to give me a kiss on the cheek.\n\n\"I know, daddy. And when you're ready, I want to hear it. But just so you know, I'm ok with this and seeing where it goes. You're not taking advantage of me. To answer your earlier question, I like you because you're kind and I think I can trust you. And I have a daddy/daughter kink that doesn't seem like it's going away. and I hope I can help you relax and play with me because I think we could have some real fun.\"\n\nHer phone chose that moment to be annoying and interrupt the moment. She grabbed it on reflex, looked down at it and rolled her eyes.\n\n\"My presence is demanded. There's a photo shoot taking place and I'm late. I have to run,\" she said. Then she looked back up at me. \"Are we ok?\"\n\n\"You've helped reassure your old man he's not a lecherous pervert.\"\n\n\"Oh god, I hope he's still a bit of a pervert,\" she said, taking a quick glance around. Then she leaned up and kissed me quickly on the lips.\n\n\"I'll touch base later, daddy,\" she said, dashing off into the crowd, a purple and yellow cape flapping behind her.\n\n****\n\nI was in a surprisingly decent mood as I hobbled through the madness of the Friday crowds at the con. I could only imagine what Saturday was going to look like. I'd need to replace my cane with a machete to make any progress anywhere. But the crowds weren't frustrating to me. I was just basking in the glow. I felt like a teenager, which was weirdly exhilarating. \n\n\"She likes me,\" I thought. I was already doing some quick research on dd/lg play on my phone, because I understood the theory of it, but I suspected she had a bit more practical experience with it. But that was fine. I think it was going to be a fun thing to learn and experiment with. There was also the matter of, you know, where she lived compared to where I lived. It was a sure bet we were both from out of town, but with my luck, she lived on the other side of the country. \n\nDeep breath. One worry at a time, old man. Just enjoy that something is happening you never thought would happen again...you found someone who likes you.\n\nThat alone was enough to put a slightly dopey grin on my face.\n\nBut by 4:30 I hadn't heard from her. Trying to 'accidentally\" run into someone at a comic con of this size is ludicrous, but I spent 45 minutes fighting the crowds to reach one of the areas where cosplayers hang out to see if I could spot her. If not, then I could always text.\n\nBut she wasn't there, although I could see her two friends, dressed as Supergirl and Wonder Woman, holding court. No sign of my Batgirl, though. I was beginning to get worried, when I spotted a flash of purple and yellow down a side hallway where there were rooms to get into panels. She was sitting on the floor, with her head on her knees, looking upset and miserable. I got next to her and slid down the side of the wall. That's when she finally noticed me. \n\n\"Ashley, what...\"\n\nShe threw her arms around me and began sniffling, trying not to cry and not completely succeeding. The smart, composed woman from a few hours earlier was absent. I put my arms around her and gave her a hug.\n\n\"It's ok, Ashley. What's the matter?\"\n\nShe sniffed and wiped her eyes.\n\n\"I'm sorry, daddy. I didn't want to bother you. Teenage girls stuff.\"\n\nI appreciated being kept out of it. I had limited experience with teenage girl drama warfare, but I knew I would be way over my head.\n\n\"You're never a bother. What happened?\"\n\nFrom that simple question came a torrent of anger, upset, drama, and frustration. Heather and Lesley had been upset with her being late for the photo shoot because she had been with me. They then proceeded to give her a hard time for chasing after an old man. She fired back a few remarks about them being sluts who were chasing after whatever boy paid the slightest bit of attention to them. Which is when they told her they had \"company\" coming back to their room after a party tonight and they didn't care much for weird girls, so maybe she ought to find another place to spend the night.\n\nShe'd said fine and stomped off. She'd then realized she had no place to stay tonight, or perhaps the rest of the con, and she didn't want to impose on me because she knew I was still nervous in thinking I was taking advantage of her, which clearly she had no problem with us being together...\n\nThis all came out in about 20 seconds.\n\nI was honestly trying not to laugh because, god, the drama. So I did something rash, especially given where we were.\n\nI reached down, put my finger on her lips, and then leaned in and kissed her.\n\nGod, she was nice to kiss. Soft lips. Some kind of flavoured gloss which had miraculous remained on all day. Her eyes went wide for a second, then she threw her arms around me and kissed me back. It lasted about 15 seconds until I heard some people gently laughing at us. I pulled back. She looked at me, slightly glazed.\n\n\"Get your stuff, and stay with me at the hotel. Crisis averted.\"\n\n\"Really?\" she said, looking amazed.\n\n\"Really,\" I said. And then added \"There is absolutely no expectation of anything happening. I'll talk to the concierge and have a cot brought up to the room. I'll feel better knowing you're safe and sound rather than sleeping on a subway platform.\"\n\nShe hugged me again, harder this time.\n\n\"Thank you. You're the best daddy.\"\n\nWhile being gently crushed by my pixie, I managed to fumble out my wallet out of my back pocket, reached in and handed her a few $20 bills. She looked confused.\n\n\"I don't want you dragging your luggage across the city. It's a surefire way to have more drama happen to your day. There's not that much time left before the doors closed. Go get changed now, and head back to your room and grab your stuff before the drama queens arrive. Then grab a cab and come back to the hotel. Text me when you get the cab and when you're arriving,\" I said.\n\nShe nodded, and took the money slowly from my hands. Then she headed towards the coat check-in area to get her stuff, disappearing into the hordes. A few minutes later my phone vibrated in my pocket. I pulled it out and saw a text from her.\n\n\"You really don't need to get the cot from the concierge, daddy. I'm pretty small and don't take up much room in a bed.\"\n\nChrist almighty.\n\n***\n\nBefore I came to this con my friends and family were concerned I might do something crazy. I thought they were afraid I'd spend all my money or get into a random fight. During the past two years I had...flashes of irrational behaviour. Seething rage that could be triggered with the slightest insult. I wasn't reckless with money; it's not like I was buying stupid sports cars. But I didn't care so much about money. I'd worked hard and saved and still lost the most precious thing in the world to me. Money couldn't get it back, so why did it matter?\n\nI'd gotten better the last six months. Medication helped. Finally talking to professionals and listening to what they had to say rather than just blowing them off was working. The whole reason I was at this con was that everyone believed it was safe for me to go and do something by myself.\n\n\"I would have picked a beach and gone swimming in the ocean. Leave it to you to go someplace chilly and swarming with people who have dubious hygiene habits,\" my mom said to me. She questioned if it was a rational decision. I insisted it was.\n\nIt occurred to me as I headed back to the hotel that hooking up with a 19-year-old with a daddy fetish and a drama field probably also qualified as not a completely sane decision.\n\nI did not care. The last two years had been pain and heartbreak and now I had Ashley who at least wanted to make me happy right now. I'd figure out the rest later.\n\nI got back to my room and tidied the place up a bit. I had clothes, books and comic con swag tossed all over the room. It wasn't long before I got the first text telling me she was in a taxi. Twenty minutes later there was another text telling me she was pulling up to the hotel. I gave her my room number. And then there was a tentative knock at the room door. I opened it and there was a pile of bags with a tiny redhead in the middle.\n\nCosplayers don't travel light, but Ashley dragging around a piece of luggage on wheels, a hiking style backpack with a smaller, school sized one in her arm, it's a miracle she managed to get here in a taxi. I could only imagine what it would have been like wrestling all this stuff onto the subway.\n\n\"Jesus, Ashley,\" I said, grabbing her luggage and small backpack and bringing into the room. \"Did you fly here carrying all this?\"\n\n\"Bus, actually,\" she said. \"They're a little bit more flexible about how much you can carry on board.\"\n\nShe walked into the room, shrugging her shoulders and let the large backpack drop to the floor. She then looked around the room. It was a fairly standard hotel room. King-sized bed, a large TV above the dresser, a small desk if you wanted to do some work and a couple of comfy chairs positioned by the window. The bathroom had a solid shower and bath. The hotel was less than five years old, so the usual wear and tear hadn't settled in yet.",
        "I indulged in a room on one of the higher floors, giving me a good view of the city.\n\n\"God, this place is amazing. The place we were staying in was such a dump. Two twin beds, worn carpet, and the walls were so thin I could hear the guy in the room next door fart,\" she said. She walked over to the bed and flopped on it and made a low, pleasant, groaning noise.\n\n\"You are the best daddy,\" she said, with her eyes closed, enjoying the moment. She was much happier than she had been less than two hours ago. Of course, now that I had her here, I wasn't entirely sure what to do next.\n\nShe sat up on the bed and looked at me with a grin.\n\n\"Daddy,\" she said in a little sing-song voice. \"Did you say this place has a pool?\"\n\n***\n\nWhich is how we ended up near the top of the hotel, where they kept the pool and jacuzzi. It was a Friday night and most people were out on the town so the pool and jacuzzi were mostly empty. Turns out Ashley's Scarlet Witch costume from the day before could also double nicely as a one-piece swimsuit. I was content to sit in the jacuzzi and press hot jets against my knee and watch her do laps. She'd clearly been on a swim team or something. Her form was flawless.\n\nEventually, she came over to where I was. She took off her swim cap, and quickly worked some magic involving elastics so that her hair was piled on top of her head and slid into the jacuzzi with a small groan of pleasure. Surprisingly, she didn't cuddle up next to me, but sat across from me. She wanted me to look at her in her swimsuit. Somehow, there was more cleavage showing now that she was in the jacuzzi.\n\n\"You're a good swimmer,\" I said. \"Swim team in high school?\"\n\nShe nodded, sinking down lower into the jacuzzi. It was now just the tops of her breasts and face above water. Her toes came to the surface, just out of my reach. A look of relaxing bliss crossed her face.\n\n\"I was good and I loved it, but genetics made me a tiny thing. I could never compete against the tall ones with the huge wing spans.\"\n\n\"Gymnastics?\"\n\nShe scrunched up her face. \"Every gymnast and ballerina I've ever met are seriously messed up people. Teenage girls have enough body issues without getting into those things.\"\n\nShe splashed her toes in the water a bit, and sank further into the jacuzzi. Her feet came within reach and I gently grabbed one and started to massage it. She let out a surprised moan.\n\n\"Ohhhh, such a good daddy,\" she said. \"I love those yellow Doc Martens, but wearing those for 10 hours at a comic con, plus the heels yesterday, my feet are killing me. This is good brownie points you have building up here.\" I smiled and kept massaging her feet for a few moments, before she sat up, and then scooted over next to me, laying her head on my shoulder.\n\n\"So what does my little girl want to do for the rest of the evening?\"\n\nShe looked at me, and I realized what I just said. She just smiled, as if glad I was getting into the proper role.\n\n\"I have given this some serious thought,\" she said. \"I want to order some pizza delivered to our room, which I am going to pay for because you're saving my butt and I have done nothing for you so far.\"\n\n\"You've done more for me than you know,\" I said. \"Not everything is dollars and cents.\"\n\n\"I know, daddy, but I still want to do this, ok?\"\n\n\"Ok, what else?\"\n\n\"I want to eat pizza in that huge bed, curled up next to you, and then I want to watch some cartoons on that ridiculous TV and then fall asleep burrowed into you. Is that ok?\n\n\"Sounds like the best idea in the whole world.\"\n\n\"I thought so,\" she said, and lifted herself out of the jacuzzi, showing me a very cute little ass. She knew I was looking, \"Coming?\" she said.\n\n***\n\nWhich is how we ended up on the king-sized bed watching Avatar: The Last Airbender because she was horrified I had never watched it. Trying to explain you can't consume all the geekery got me a mild scolding.\n\nI was wearing just my boxers, as she insisted she wanted to cuddle against my bare chest. When I came out of the shower she had claimed one of my geek related t-shirts. It hung down to almost her knees. I couldn't tell if she was wearing panties and she seemed content enough to keep me guessing.\n\nWe both seemed happily content, munching on pizza and soda, watching cartoons while she kept rubbing her face in my chest every now and then. I had chest hair and apparently she liked the feel of it.\n\n\"Teenage boys lack this texture,\" she said.\n\nBut still, every now and then I caught her glancing towards my right knee. It wasn't a pretty sight. It was covered in scar tissue, was enlarged and just didn't look...right.\n\n\"It's just a knee, little girl,\" I said.\n\n\"Sorry daddy,\" she said, a little embarrassed she'd been caught. \"I don't mean to stare. I just know it must hurt. I wish I could make it better.\"\n\nHer hair was out of her bun and was somehow managing to spread everywhere. I ran my fingers through her hair. It felt like running my fingers through silk.\n\n\"I got off easy. This is nothing.\"\n\nShe pushed up off my chest and sat cross legged on the bed next to me. She took my hand and, somehow, made her eyes as wide as an anime character.\n\n\"That's another veiled reference. I think it's Secret Origin time, daddy.\"\n\nI nodded. Yeah, it probably was. This was fun, but she had the right to know how damaged I was - physically and mentally - and walk away if she wanted.\n\n\"So once upon a time there was a very boring kid who grew up to be a very boring adult,\" I started.\n\n\"Daddeee,\" Ashely said, rolling her eyes.\n\n\"Not all Secret Origins involve radioactive spiders or being the Chosen One waited for by the people for generations, little girl. Sometimes, you're just boring,\" I said. \"It's not always a terrible thing.\"\n\n\"Fine. Ok.\"\n\n\"Anyway, before I was rudely interrupted...\" \n\nShe licked out her tongue at me. Her brattiness was honestly making things easier. Instead of crushing despair or even annoyance at her, she was making me smile, which is not something I thought I could ever do recounting this.\n\n\"Anyway, this boring kid was ok with it. Because he saw a lot of drama around him. Friends whose parents divorced, or lost a parent through cancer. Or people who were awesome and cool and struggled with drugs. So he came to the conclusion that boring was ok. It was safe, but if you were happy doing your boring things, what was wrong with that?\n\n\"So he got his geek on and studied at school. And one day, after university and though massive dumb luck, he met another geeky girl. And they decided they were perfectly ok being boring and geeky together. And life was good for many years. And yeah, they couldn't have little geek babies, which sucked, but they both decided after a while that they were both really lucky to still have and love each other.\n\n\"And then COVID hit,\" I said, and with that Ashley clutched my hand, afraid of where this was going to go. \"They both got stuck in the same place for an awfully long time. And you can love someone a lot, but a year stuck in a small condo, even with all your toys, can get to you after a while. So when they both got vaccinated they decided to go home to see their parents and some friends they hadn't seen in awhile.\"\n\nI paused and took a breath. I didn't look at her face. I couldn't. Here we go.\n\n\"I was driving back to her mom's house from a bar where we had just seen some friends. And it was good. We were both laughing. And the light ahead of me was green, so of course I just drove through it, like I had with thousands of lights.\n\n\"But the other guy, the guy that later blew a .20, he didn't see it quite that way. So he went straight on through the intersection and slammed into the driver's side of the car, hitting us so hard the car actually flipped over.\n\nI looked at her now. Her eyes were welling up, and my emotions were getting wobbly too. Just keep breathing, I reminded myself.\n\n\"I got this,\" I said, pointing at my knee. \"It's taken three surgeries to get it working as well as it does. I nearly lost it. I'm still lucky.\n\n\"The motherfucker who hit us got a broken nose from when the airbag inflated. There's a whole ton of drama around him, but let's just say for now that he's not going to enjoy the next five years very much, and when he gets out he's disbarred and a lot poorer. And he's still a lucky bastard.\n\n\"My wife...I take comfort in two things. One, they say she died instantly. That she never knew what hit her. And that in the seconds before we were hit she was laughing her ass off at something that happened earlier at the bar. She died happy.\n\nAshley was crying and, too my surprise, there were tears coming down my face as well. I hadn't realized I'd started. She looked like she wanted to hug me, but I held her back for a second.\n\n\"I went insane, Ashley. You need to know that,\" I said. \"You take someone whose whole life is about playing it safe and being content with what you have, and then rip it all away in an act of staggering selfishness and stupidity, I lost my mind. I was committed for three months. In court I had to be physically restrained from beating that asshole to death with my cane.\n\n\"I alternated between incoherent rage and being suicidal. I wanted to kill him, I wanted to kill myself. I lashed out at everyone who tried to help me. It's only in the last six months or so that I've become 'normal'. And even now if I saw him, I genuinely don't know what I would do.\"\n\nI wiped the tears from my face. And looked at Ashley. She was still holding my hand. Her hand was white where she was clutching it so hard.\n\n\"So that's who I am. I am fairly messed up, Ashley. I'm sure I have friends and family who would look at this and think I need to be committed again. I'm sure you have friends who would tell you to run away if you repeated what I just said. If you want me to get a room here tonight I'll take care of that. But yeah, I am a messed up old man. I have to be honest. I think maybe you could do better than being with me right now.\"\n\nAnd with that, she jumped on my waist and threw her arms around my neck and buried her face in my shoulder. She clutched me like her life depended on it and, to my surprise, I found myself putting my arms around her and hugging her.\n\nAnd it was nice. God, it was nice. Just to feel affection and a human touch again. I hadn't realized how badly I missed it.\n\n\"I'm not going anywhere, daddy,\" she said, her voice muffled by having her face still buried into my neck. \"You need someone to take care of you, and that's what I'm going to do.\"\n\n***\n\nAfter the emotional outburst, there was a lot more hugging and touching. I tried to steer the conversation to a little bit more about our lives away from the con, but she wasn't interested. Any time I tried, she diverted or distracted me. I think after all that emotion she just wanted to not be serious and just relax for a bit. We needed to have the talk if things were going anywhere, but I let her get away with it for the moment. There was still time.\n\nEventually, around midnight, Ashley talked herself into nodding off. She'd collapsed on top of my chest and was snoring lightly. It took a little bit of juggling, but I eventually managed to turn off the lights and the TV without disturbing her. Soon enough, I was asleep as well.\n\nNext thing I knew it was the middle of the night and my bladder decided to remind me I didn't go to the bathroom before going to sleep. Ashley still had her head on my chest and was curled against my body. It was adorable and I hated to disturb her, but my bladder was getting insistent. I dislodged her as gently as I could and went to take care of things in the bathroom.\n\nAs I headed back to bed I could see the clock say it was 4:00 am. I crawled back into bed, and momentarily debated if I should try and cuddle back into Ashley, when she quickly found me. She cuddled back in when I noticed that in the two minutes it took for me to use the bathroom Ashley had shed her night shirt. She was now naked and cuddled against me. I felt my cock get instantly hard.\n\nI looked down at her and although the room was almost pitch black I could still see the outline of her face. I reached down and stroked her hair and I could feel her almost move like a cat, rubbing her head into my touch while shifting her body slightly downward. Then I felt her lips on my chest as her hand began to slide across my stomach and down towards my boxers.\n\n\"Ashley,\" I said, my voice hoarser than I would have thought.\n\n\"Please daddy,\" she whispered. \"I wanna make you feel good. It's been so long since someone made you feel good. Please...\"\n\nI didn't say anything. My voice had vanished. She took that for consent and slid her hand under my boxers. I could feel it gently sliding along my cock, just enjoying the feel and texture of it. Then she slowly ran her fingers across my balls, before reaching up and slowly began stroking my cock. She made a little purring noise as she continued to kiss my chest and grind the rest of her body against me. I could feel her pussy, soaking wet, slowly moving back and forth across my leg.\n\nIt was a miracle I didn't cum in the first five seconds. No one had touched me in two years. I had barely touched myself. I was concerned my sex drive had died with my wife. Ashley reignited it like she was using a flamethrower.\n\n\"Jesus, Ashley,\" I said, finding my voice again.\n\n\"No, daddy,\" she whispered, in a little girl voice.. \"I'm your princess. Your little girl. Your dolly...I'm not Ashley anymore. And daddy's little girl wants him to feel good. Am I doing a good job, daddy?\"\n\nShe continued to move her hand delicately, slowly, up and down my cock, Her lips and tongue ran across my chest and my hip involuntarily began bucking up and down. I desperately fought back cumming. I wanted this to last more than a few seconds.\n\n\"You're such a good little girl. Daddy loves what you're doing.\"\n\nI couldn't see her well in the dark, but I could feel her grin. She began kissing her way up my chest, not stopping her motion on my cock. She ran her tongue along my neck and along my jaw. And just before she was about to kiss me on the lips, she stopped. I strained up, but she used the hand that had been stroking me to push me gently back. I groaned in frustration.\n\n\"I can be a much better little girl, daddy,\" she whispered in my ear. \"Would you like me to show you?\"\n\nShe was being a brat and a tease and she loved it. So did I, to a point. But brats also need to be disciplined if they start acting out. My hands, which had been grabbing the sheets, slowly reached up and began caressing her body. She groaned and began moving her body against me. Her pussy was agonizingly near my cock and I was tempted to just plant her on top of it.\n\nBut she wanted to play. So let's see what she would do. I reached down to her ass and gave her a little swat. Not hard enough to hurt, but enough to startle her.\n\n\"Owww, daddee!\" she said, in a voice more pouty than actually hurt.\n\n\"I always expect my little girl to do her best,\" I said, taking my other hand up and cupping her chin so she could look me in the eyes. \"So show me.\"\n\nShe bit her lip, nodded, and then began sliding back down my body. Her pussy brushed over my cock and we both groaned. I have no idea where she found the will power to not start fucking me, but she was doing things at her own pace and I was content to let her. Eventually, her mouth stopped at my waist, just above where my cock was resting uneasily.\n\n\"I'll show you, daddy. I'll show you that I'm the best little girl ever,\" she said, and then began running her tongue down my cock. \n\nI once feared my cock might be dead; that nothing would ever make me hard or feel good again. Ashley's lips felt like an electric shock on my cock. Again, I don't know how I didn't cum, but I knew the odds of me holding out long were slim. Her tongue reached the base of my cock and then began licking my balls. Which was nice, but I knew where I wanted her mouth. I reached down and began stroking her hair, but gently guiding her upwards. She took the hint. Her tongue did a quick little swipe of my head, causing me to twitch again, before she opened her mouth and slowly began to slide down, taking about half of me in her mouth before she began to work her way back up again, her tongue working on me the whole time.\n\nIt was all I could do not to grab her head and start fucking her mouth. \n\n\"Jesus Christ, little girl. Holy fuck.\"\n\nShe hummed in pleasure at my reaction, sending another jolt through me. She looked up as she continued to slide my cock through her lips. Her eyes were lidded. I could tell she enjoyed sucking cock. That she was getting off on driving me crazy. She wasn't trying to impress me with how much she could take or all her tricks. What little part of my rational brain was working suspected she could take more of me. Right now, she just wanted to make me feel something. To give me pleasure. To make me happy.\n\nI groaned and my hips began to move in a rhythm with her mouth. \"Jesus, little girl. Daddy's not going to last much longer.\"\n\nShe stopped sucking for a moment, but kept stroking me. \"I don't want you to last any more. I want your cum, daddy. Give me your cum, pretty please?\"\n\nThen her mouth doved back down on my cock, quick little head bobs that finished the last of my will power.\n\n\"Fuck!\" I shouted, bucking my hips upwards and cumming for the first time in years.\n\nAshley, to her credit, tried to swallow it all, but there was too much, and some of it spilled out of her mouth and onto me. I was too far gone at this point to notice, with stars exploding behind my eyes and my muscles twitching. \n\n\"Holy fuck, little girl,\" I managed to gasp. \n\n\"I did good, daddy?\" she asked.\n\n\"Best little girl in the whole world,\" I said. She giggled.\n\n\"I did make a mess and didn't swallow everything, though. I need to clean up.\" And with that she began running her tongue across my cock, balls, stomach and wherever else my cum ended up. She was very thorough and it took a few minutes before she crawled back up my body and cuddled into me. I wrapped my arms around and her and had to remind myself to not squeeze her to death. For her part she just giggled and made contented little noises, with the occasional gasp as her pussy rubbed against me.\n\nThat's when I realized she hadn't cum yet. I slid my hand down towards her pussy.\n\n\"You've been such a good girl. Let daddy take care of you now.\"\n\nTo my shock, she squirmed away.\n\n\"No daddy,\" she said, suddenly shy.\n\n\"Little girl, your pussy is practically dripping on my leg. Let daddy take care of you.\"\n\n\"No, not yet. I want the first time I cum with you to be...special. This was kinda spontaneous. It was about taking care of you because you needed something to not hurt. Tomorrow night...I want daddy to fuck me. Is that ok?\"\n\nIn the dim light I could tell she was flushed and sweaty. And whether she was aware of it or not she was gently humping her pussy on my leg. I reached out again and gently lifted her off my leg. She groaned and flopped on the bed. I could feel how horny she was.\n\nBut she didn't want to cum yet. And if tonight was any indication of what she was like, how would she be a full day from now I could only imagine. I leaned over and kissed her on the lips gently.\n\n\"You're a very silly little girl, but we'll wait if that's what you want,\" I said.\n\nShe groaned, and then went over to the other side of the bed, not trusting herself to be near me. I chuckled and flopped back on the bed, still dizzy from cumming so hard. I had a sexy, slightly crazy teenage redhead with a daddy fetish. Life was looking up, I thought, and then passed out.\n\n***\n\nI slept hard and forgot to set the alarm on my phone the night before. When I finally rolled over and looked at the time, it was nearly 10 am; the floor to the con was opening in minutes. I looked around Ashley, but she was gone. I had a moment where I wondered if it was all just a set up and she robbed me while I slept.",
        "It was a shitty thought, made all the shittier when I spotted my wallet exactly where I left it the night before. And the note that was left on the bedside table.\n\n\"Daddy, you looked too cute to wake-up and you need some rest. I'm already at the con. Text me when you get there. Xoxo, your princess.\"\n\nWorst. Daddy. Ever.\n\nStill, as I grabbed a quick shower and started to get dressed, I thought about last night. Yes, the blowjob was amazing. Ashley was fun, energetic, playful and not afraid to try things. I would be embarrassed to tell someone I liked dd/lg play, for fear of being seen as a creepy old man. Ashley just cut right to the point. This is what she liked and she brought me along for the ride.\n\nIt's a hell of a leap of trust. I suspect she'd been burned a lot over the years, but she still kept diving in. I was thinking that I was the one taking all the risk...what would my friends and family think of me hooking up with a woman 30 years younger than me. Oh, the scandal and embarrassment.\n\nBut she was leaving herself very vulnerable to me. I resolved to be worthy of her trust. And to talk to her about what else she wanted to do.\n\nAs I was hobbling to the convention center it occurred to me that it had been ages since I was in such a good mood. All it took was a blowjob. Jesus, I really was a middle-aged cliche.\n\nOnce I cleared security at the centre, I dropped Ashley a note. It was close to 11. She replied almost instantly.\n\n\"Daddy! I thought I might have broken you.\"\n\n\"You'll have to work harder than that to break me,\" I replied.\n\n\"Oooooh, a challenge. I love a challenge.\"\n\nI decided to push a few buttons to see where she was. \"I'm not the one who didn't get to cum last night. I'm looking forward to taking a long time before breaking you tonight.\"\n\nThere was a pause for a few minutes. \n\n\"Fuck. Now everyone is wondering why I'm blushing so bad. Also, I need to change my panties. Thanks Daddy.\"\n\n\"Where are you?\"\n\nShe gave me directions to where she was. It was an area of the show floor focusing more on video games, so I'd given it a pass as games weren't really my thing. I had only so much time and money for so much geekery. Video games didn't make the cut.\n\nI'd deliberately not asked who she was dressed up as today and she hadn't offered it up. It was possible she'd repeat her Scarlet Witch or Batgirl costumes, but I suspected a cosplayer like her probably brought a half dozen costumes with her. As I left the room I had to step over the contents of her suitcase, where I could make out bits and pieces of different cosplays.\n\nContinuing with the redhead theme, I was guessing Black Widow or maybe Phoenix. \n\nClose, but wrong.\n\nI spotted her posing with a couple of other people dressed like X-Men. She was in a green mini-skirt, with a yellow mask, belt and knee high boots. Marvel Girl. She looked, of course, amazing. I found a spot to just stand back and watch her for a few minutes. She happily posed for pictures, sometimes posing dramatically. One little boy, probably no older than five or six, came dressed as Wolverine. She gushed over his costume and happily posed while his parents took their picture. She waved good-bye as he toddled off, looking over his shoulder back at her. It looked like the start of a crush.\n\nI could empathize. \n\nI started to walk over towards her. She spotted me and a smile broke across her face. She walked quickly over to where I was and threw her arms around me and gave me a big hug. I managed to keep my balance and hugged her back. She pulled back and gave me a quick kiss on the lips.\n\n\"I was getting worried, but you were still breathing when I left this morning, so I figured you just needed to recover.\"\n\nI shot her a look.\n\n\"This is how you talk to your daddy?\" I said.\n\n\"Ooooh no, will I have to be punished?\" she said, giggling.\n\nI resisted the urge to slap her ass. Instead, I leaned in and whispered \"I'm the one who gets to decide if you get to cum this evening. Be nice to your old man, ok?\"\n\nChastened, but still grinning, she said \"Yes daddy.\"\n\nI was quickly introduced to the rest of the \"X-Men\" a group of cosplayers she'd ran into lining up to get in and they'd hit it off and decided to hang out for the morning. I was glad she did that and was actively avoiding the area where her bitch \"friends\" might be hanging out. Although I could see a couple of the guys were giving me mildly frustrated and dirty looks. No doubt they were hoping to get somewhere with Marvel Girl and I was screwing up those plans.\n\nAshely looked like she was having fun, so I told her to keep hanging out and I was going to head over to Artist Alley. I had a few things to pick up and see if some pages of art I was interested in had survived to Day 3.\n\n\"You don't want to be with me,\" she said, pouting.\n\n\"I want you to have fun and do all the cosplay things you came here to do. I promise, we'll have time together later today. And I'm all yours this evening.\"\n\n\"Ok daddy,\" she said, reaching up to kiss me on the cheek. I grinned and started to walk away. Someone must have said something about me and/or my age. I heard her say \"He's cute and treats me nicer than anyone ever has. Gotta problem?\" No one did, apparently. Good call. Picking a fight with the redhead is always a bad idea, telekinetic powers or not.\n\nWe were happy to bounce off of each other that way for the rest of the day. Freed from the constraint of her bitch friends, she seemed to light up and really soak in the con. The only time I saw her grumpy was when she got a text from the bitches who wanted to know where she was. She promptly texted back saying she was fine, to fuck off, and never talk to her again. After that, she was back to her usual happy self.\n\nShe did seem spacy, though. She was certainly a bit ditzy when we first met, but underneath she was smart, funny and playful. As the day went on, though, every time I saw her she seemed more and more unfocused. I was getting a bit worried, especially as I had plans for this evening that required her to be at least a little focused. I was getting ready to tell her my plans, when she insisted she needed to say good-bye to the people she'd been hanging out with. An hour later, as the con wrapped up for the day, I got a text from her.\n\n\"Daddy, I'm ready for you to take me back to our room now.\"\n\nAs tempting as that was, there were a few other things that needed to get straightened out. And I didn't want to try and do that while she was teasing me in the hotel room, or with my brain mush after the first fucking I've had in over two years. Plus, I had a sneaking suspicion about another sexual kink she had and I wanted to put it to the test.\n\n\"Go back to the hotel room, and meet me here,\" I said, texting her the name of an Italian restaurant I'd actually made a reservation to weeks ago. I wanted a nice meal at least one of the nights I was in town, and I knew trying to find a place to get a table near the convention center would be a problem. \"Civilian clothing. You may dress sexy, but appropriate for a nice restaurant. There's money for a taxi on my bedside table. Be there by 8 pm.\"\n\nThere was a pause for at least a minute. I suspected she was processing how to respond to this twist. She probably figured I was going to be eager to get her back to the room. And it was tempting, but priorities.\n\n\"Ok daddy,\" came the reply. Huh. I was expecting a much brattier response. Although I imagine she still wasn't very happy.\n\n\"Thank you, princess. Daddy will make it up to you later.\"\n\nAnother pause.\n\n\"Ok Daddy ;)\"\n\nI'd only known Ashley a few days and it was amazing to me how much her good mood meant to me. Hopefully that would go beyond tonight.\n\n***\n\nAt around 8:10 pm she was escorted to my semi-circle booth, tucked away in a quiet corner for the restaurant. It was Saturday night, so quiet was relative, but we would have some privacy. I was curious as to what she would end up wearing. She didn't disappoint as she followed the maitre 'd across the restaurant. She had the walk of a woman who knew people were looking and was both embarrassed and loved the attention. The red tartan mini-skirt certainly caught the eye, along with the black turtle neck, along with black kitten thigh high socks and black kicks. She had her hair in a ponytail and was wearing glasses.\n\nIf there was a better teenage seductress outfit I hadn't seen it in person. She was stunning and she knew it.\n\n\"Hi daddy,\" she said, sliding into the booth across from me. I'll give the maitre 'd credit; he managed to keep his face neutral. He was also about 70 years old. I suspect he'd heard more scandalous things.\n\n\"You look fantastic,\" I said, stating the obvious.\n\n\"Thanks daddy,\" she said, still blushing under the compliment. She glanced at the menu and her eyes widened at some of the prices.\n\n\"We could just order dessert and head back to the room,\" she said. \"This place is pricey.\"\n\n\"No, I've been looking forward to eating here for awhile. Besides, I want dessert back at the hotel, not here.\"\n\nShe squirmed in her seat a bit more. It was 50/50 if she was wearing panties. The odds were much better than that she had just just made a mess in either her panties or the seat.\n\n\"Ok, daddy,\" she said in a slightly breathless tone of voice.\n\nNow, the unpleasant part.\n\n\"Besides, we get to have a nice meal and chat. Because we have things we need to talk about, Ashley.\"\n\n\"Daddy...\"\n\n\"Nope,\" I said, holding up a finger to silence her. She was startled.\n\nI know you're grumpy and pouty with me right now, but I promise you I'm not dragging you here to be mean, a tease, or cruel. And I will make it up to you. Do you believe me?\"\n\nShe nodded.\n\n\"The waitress is going to be back in a few minutes. We're going to order some food. And from the time we place our orders until the main course gets here, we're going to talk like adults. I like our play, I really do Ashley, but we do have things to talk about. Is that understood?\"\n\n\"Yes, daddy,\" she said sullenly.\n\n\"My name is Ben. You're going to call me that until the food arrives. Ok?\"\n\n\"Ok.\" Christ, she could even do cranky adorably.\n\nShe was quiet until the waitress came back. I figured she was going to order something cheap and remain pouty, but surprised me by ordering shrimp scampi. I guess she was hungry. Or wanting to punish me a bit by ordering a $50 pasta dish. I topped her by ordering one with lobster, which at least caught her attention. The waitress walked away, leaving us alone again.\n\n\"Da...Ben...are you rich? I'm sorry, but you said we have to talk and stuff...\"\n\nI smiled. \"It's a good question, Ashley. I'm not...ish. Between life insurance and my lawsuit against the...person, who killed my wife, I'm doing ok. I retired from work, and I'm doing a few things on the side, mostly to keep myself busy. Assuming I'm not stupid with my money, I'm ok for life. I can splurge occasionally on some pasta, but there's no private jets in my future.\n\n\"And Ashley, I'm not doing this because I don't trust you. I like you, perhaps a lot more than I should...\"\n\nShe smiled again.\n\n\"But we've spent most of the last few days talking about geek things and just a little about ourselves. I'm sure some of that was deliberate. Just in case one of us turns to be crazy we want to protect ourselves a bit...\"\n\n\"I am not crazy,\" she said. Paused. \"Too crazy.\"\n\nI laughed. \"You're a redhead. It's genetically impossible for you not to be a little crazy.\"\n\n\"Ok, that's a fair point,\" she said.\n\n\"But if my friends asked me to tell them what you're like, I literally cannot tell them what your last name is.\"\n\n\"No way,\" she said, sitting up straighter. \"I told you that.\"\n\n\"When?\"\n\nThen her eyes got wide. \"Oh shit.\"\n\n\"Where do you live? Where did you grow up? What school do you go to,\" I said, ticking off my fingers.\n\nShe put her hands in her head. I heard her mutter, \"Oh god I am such a ditz.\"\n\nI continued. \"And that's before we have to have all the conversations about the nature of our relationship. Because Dd/Lg relationships are a lot of work. And they can be scary for both of us. We have to talk about what you want and what I expect, otherwise it will never work.\"\n\n\"You want it to work?\" she said. \"Really?\"\n\nI took a deep breath. This was the insanity I was warned about and I was far enough from the distortion field of the comic con that I couldn't use it as an excuse.\n\nFuck it.\n\n\"If this is a weekend thing for you, that tomorrow after the con you go back to your mystery base and we never talk again, ok, well, that'll suck, but it will certainly explain some of the mystery. But you certainly seem to like me...\"\n\nShe was nodding her head up and down vigorously.\n\n\"...and I like you. So I'd like to see what happens next.\"\n\n\"That was scary for you,\" she said.\n\n\"It was. Once upon a time I never could have done that. Now, there are scarier things then telling someone you like them and they don't feel the same way. Or that people might judge you for your relationship. My wife would probably raise an eyebrow and go 'really', but she'd also want me to be happy and get on with things. Spending your life angry is a shitty way to live.\"\n\nI could see her eyes watering a bit, and she wiped them away.\n\n\"I'm sorry I'm such a ditz sometimes. I really am smart and I get good grades at school and I didn't mean to have it look like I was playing games with you. In my head it was a weird combination that 'of course I've told him all this' because we've been getting along so well, Then mix that with insecurity that you wouldn't want to see me again after the con, those bitches messing with my head, and my current hormonal mix...\"\n\nI interrupted. \"Current hormonal mix?\" Then it dawned on me. \"You've been edging. Not letting yourself cum.\"\n\nShe leaned across the table. \"I. Am. So. So. Fucking. Horny. It's an effort to not crawl under the table right now and start sucking your cock. I like getting myself in this headspace. I like getting myself worked up and then not letting myself cum. Some women can't handle it, but it just puts me in a Little/ditzy/almost bimbo like state. Everything is fuzzy, and I like it. But...\"\n\n\"But it's dangerous with the wrong guy.\"\n\nShe nodded. \"I've been hurt before...Ben,\" she said.\n\n\"I swear to God I will not hurt you,\" I said, reaching out to take her hands.\n\nShe clutched my back, so hard her nails dug into my hands. She lowered her head for a moment and I could hear her sniffing.\n\n\"Please,\" she whispered.\n\n\"Please what?\"\n\n\"Please can I call you daddy, again. I'll be good and call you Ben when others around, but please, it doesn't feel good right now calling you Ben all the time.\"\n\nI let go of her hands, lifted up her chin and smiled at her. I took one of the napkins and dabbed away her tears.\n\n\"It's ok, little girl\", I said, and patted the space on my left in the booth. She immediately scooched around the booth and buried her face in my shoulder, a noise that sounded like a laugh and sob came from her.\n\n\"I must seem like the silliest little girl, daddy,\" she said.\n\nI nodded. \"You are, which is why you need a daddy to take care of you.\"\n\n\"And will you take care of me,\" she said, hopefully.\n\n\"I will, but I need to know what my little girl's last name is and where she lives for starters.\"\n\n\"I hate my name. It's Ashley Clarke. It's so boring.\"\n\n\"So we'll come up with one that makes you happy then.\"\n\nThat got her attention. \"Really? I could have a special princess name...that would be awesome!\"\n\nI could see the waitress making her way over to us with food. It was one of my last chances to get the last, critical bit of information out of her. Because I'm not sure it had dawned on her yet that if she lived in San Diego, this was going to be a challenge, strong attraction or not.\n\n\"And my princess goes to school, where?\"\n\nAlmost as an afterthought, still focusing on her potential new name, she said \"I go to Laval, in Montreal.\"\n\nAs the waitress put the food down, looking curious at the shift in seating arrangement, I started laughing. Once the waitress left, Ashley looked at me.\n\n\"What's so funny, daddy.\"\n\n\"It's fate, princess. I moved to Kingston, Ontario three months ago. I live a two hour train ride away from you.\"\n\nIt took a few seconds for that piece of information to sink in. Then she squealed and threw her arms around me, nudging the table hard and almost sending the food and beverages flying, giving me a big kiss. If people in the restaurant were looking, I didn't care.\n\n***\n\nDespite saying dessert would be back at the room, Ashley was enticed by a piece of cheesecake, which we ended up splitting. I figured after that it would be a mad dash back to the hotel room. But even with a 10 block walk between the restaurant and the hotel, she asked if it was ok to walk. My knee was having a good day, courtesy of drugs, a brace, and taking it was with the walking at the con today. Ashley had her reasons. Some of it was to work off supper, some of it was that she wanted to hold hands with me walking down the street. And I'm sure some of it was a denial thing. She was already fidgety and edgy walking down the street.\n\nShe was also suddenly, a fountain of information. She was born and raised in Saskatchewan, but hated living there. She liked going to school in Montreal, even if she couldn't speak much French. She was still figuring out design work, but thought being a costume designer for movies would be cool. Or even designing cosplay costumes.\n\nI had to give up some information too. She finally learned that I was a policy analyst up until a couple of years ago. Which she found hilarious because she thought I was exaggerating when I said I was a deeply boring person. When I pretended to be wounded, she hugged into my arm.\n\n\"It just means I have a very smart daddy,\" she said.\n\nPreviously I had lived in Toronto, but I was done with Toronto after Beth's death. It was interesting to me that I finally said her name without feeling like my soul was being ripped. I need a break, but want some place close enough to my friends in Toronto. The area around Kingston is stunning. Nice cider too. I found a place outside of the city that offered me some privacy and settled in.\n\n\"I can come and visit every weekend,\" she said, skipping a bit.\n\n\"We'll see,\" I said.\n\nShe turned around and looked at me, with big doe eyes. \n\n\"I want you to come and visit, but your grades are the most important thing. They take priority. You can expect me to be closely looking at your grades from now on. If they start to slide, no visits.\"\n\nShe nodded solemnly. \"Ok daddy. I'll study hard, I promise.\"\n\n\"Good girl,\" I said. She glowed in response.\n\nWe finally made it back to the hotel and Ashley fidgeting went up a notch. She turned around and looked at me in the lobby.\n\n\"Daddy, I need you to give me 15 minutes before you come upstairs. Please?\"\n\nI didn't want to give her 15 seconds to get ready upstairs. I was perfectly happy with how she looked right now. But again, I was going to need to save my will power in saying no to her on the important things. Fifteen minute primping and preening upstairs was not going to kill me. Hopefully.\n\n\"Ok princess.\"\n\nShe leaned up on her toes and kissed me quickly on the lips and then, seeing me set the timer on my phone, she dashed off giggling towards the elevator.\n\nI found a couch in the lobby and sat down for what felt like two glacial ages while scrolling through social media on my phone. There were a couple of texts from friends trying not to inquire how I was doing. I sent back texts saying I was having a good time. I remained the king of understatements.\n\nFinally, time was up. I leveraged myself up off the couch, took a deep breath and made my way to the elevator. I spent the slowest elevator ride in history cursing getting a room on the 40th floor. Eventually, I got to my floor, made my way down to my room. I paused, took a breath and knocked first, just to let her know I was there. I heard a giggle and her voice through the door.",
        "\"Daddy, go to the chair, sit down, and then close your eyes,\" she said.\n\nMy heart rate shot up a notch. Still, roles had to be maintained.\n\n\"Good girls say please.\"\n\nAnother giggle and a pause. I knew what she was playing at.\n\n\"Bad girls don't get treats from Daddy,\" I said in a firm voice.\n\n\"Please sit in the chair and close your eyes, daddy,\" she said quickly.\n\nI swiped my card key and pushed open the door. The lights were dimmed, but I could still see. One of the overstuffed chairs had been moved off the wall and was now next to the large window facing the city. The curtains were open. Theoretically someone could look in. There was no sign of Ashley. Apparently she wanted to make a dramatic appearance. I walked over, placing my coat, bag and cane against the desk and sat in the chair. I could see the bathroom door was open a crack. She was watching me to make sure I followed her instructions. I closed my eyes. To make things more dramatic I put my hands over them.\n\n\"Ready,\" I said.\n\nI'd honestly expected music to start and that she would do a striptease or something. Which wasn't very little, but this wasn't exactly normal.\n\nInstead I heard nothing for a few moments. Then, very quietly, I heard footsteps coming towards me. Then, to my surprise, I felt her crawl into my lap and burrow her head into my neck. She wrapped her arms around me and I could feel something in her hands.\n\nI took my hands down from my eyes and looked down at her body. I didn't think she was wearing much, but curiosity got the better of me and I gently pushed her back so I could look at her.\n\nHer face was a mixture of emotions. Nervous, shy, but very excited. On her head she was wearing a pair of little cat ears. Across her top was a thin lace half top with part around the top of her breasts missing. The missing bit was shaped like a kitten head, which showed off her cleavage. Sliding my hands down I felt a pair of panties with strings along the side. And further down were a pair of fluffy thigh high socks. The glasses were gone, and the ponytail was replaced by pigtails.I could feel myself get short of breath.\n\n\"I thought you were a little girl and not a kitten,\" I said, immediately wishing I could pull it back. I knew how she would react.\n\n\"You don't like it,\" she said with a worried look on her face.\n\n\"I love it. You're astonishing.\"\n\nShe smiled again. Crisis averted.\n\n\"Your little girl likes playing dress-up a lot. It just needs one more thing.\"\n\n\"What's that?\"\n\nShe took one hand from behind my back and pulled a pink leather collar. In the middle were two metal hooks and a lock. In her other hand was a key. Now she looked nervous again.\n\n\"Please, daddy.\"\n\nI took both in my hands. Yes, it was play, but not really. This was a serious thing she was committing to. And by taking the key I was making a serious commitment. I doubt I was getting that collar off her neck easily once it was there.\n\nIt was also incredibly erotic. And irresistible. I took the key from her hand. Her eyes got wide.\n\n\"Are you sure you want this? You know what this means once it's locked around your neck.\"\n\nShe was breathing quicker now. She nodded her head.\n\n\"That's not good enough, princess,\" I said.\n\n\"It means I'm your little girl and you're my daddy and I promise to be a good girl and do what you say and you promise to take care of me,\" she said in the breathless, rapid way I was getting used to when she was nervous or excited.\n\n\"Yes, it does. Get on your knees, princess,\" I said.\n\nShe quickly slid off my lap and got on her knees in front of me. She tilted her head back and looked up at me eagerly. I popped the lock open and then placed the key on the arm of the chair. I leaned down and placed the leather around her neck bringing it to a close in front. Then I took the lock and slipped it through the hooks. I looked in her eyes as the lock clicked close. She gasped.\n\nI slipped a finger into the collar and gently pulled her up towards me.\n\n\"You're mine now, little girl,\" I said.\n\n\"Yes, daddy. I'm all yours,\" she whispered. she leaned up and kissed me. Then she threw her arms around me and pulled me down a bit so she could continue the kiss, her little tongue darting between my lips. Eventually, she broke off the kiss and leaned back, resting her hands on her ankles behind her. She was showing off her body and it was working, although it was not like my cock could get much harder. But the urge to pick her up, throw her on the bed and fuck her silly was growing, playtime or not.\n\n\"You still have too much clothing on, daddy,\" she said.\n\n\"Then my little girl should do something to help me with that, shouldn't she?\"\n\nShe pounced on me, making quick work of the buttons on my shirt and then pulling it off. Then, she slid her body down mine and efficiently dealt with my belt. She then tried pulling off my pants but I wouldn't lift up to help. That got me a look and exasperated huff. I laughed and lifted my hips up. She took a moment to rub her face against my hard cock, still hidden behind my boxers. The pants, shoes and socks were then gone. The whole process took less than 30 seconds.\n\nShe reached for my underwear and I gently grabbed her hand.\n\n\"Not yet, princess,\" I said.\n\nShe pouted and was about to protest when I told her to stand up.\n\n\"Daddy hasn't had a good look at you yet. Spin around and show off for me. I want to see what my princess looks like.\"\n\nWith a smile on her face she slowly began turning around, running her hands across her body. She shook her little ass at me, and I noticed there was a paw print on it. She shook her ass at me and giggled. She then continued all the back to where she was started, pushing her arms in to give herself more cleavage. She also took her tongue and ran it across her lips.\n\n\"Do you like what you see, daddy?\"\n\n\"I do,\" I said, standing up. She backed away from me, edging towards the bed.\n\n\"I have so many other outfits back in Montreal. I can't wait to model them. I made them hoping I would have a daddy to show them off to, and now I do.\"\n\n\"I can't wait to see them all,\" I said. The back of her legs bumped against the bed and she flopped down. I stood in front of her, looking down at her. Tentatively she reached to pull my cock out when she looked back up at me for permission.\n\nI nodded. \"Just for a minute, princess. Daddy has other plans for what he's doing to do with his cock and he doesn't need you getting me too riled up.\"\n\nShe reached out with her small hands and took out my cock. I was an average length, but thick. I was happy with it, and everyone I had ever been with was happy with what I had. Ashley rubbed her face against my cock and purred. Then she began running her tongue along my balls and my shaft, avoiding the glands of my cock.\n\n\"I just need a taste, daddy. I won't get you too close, I promise.\"\n\nI looked down as she played with my cock, continuing to lick the shaft while using one of her hands to stroke my balls. She looked up at me almost the entire time, gauging my reaction. A couple of times she would quickly suck my cock into her mouth and bob almost all the way down to my balls, each time with a mischievous grin on her face.\n\nThe third time she did it, I gently grabbed some of her pigtails and pulled her off my cock.\n\n\"Naughty girl,\" I said.\n\n\"Sorry daddy,\" she said with a grin indicating she felt nothing of the sort.\n\n\"Playtime is over. Arms up,\" I commanded. She obeyed immediately. I grabbed the bottom of her cutout top and pulled it over her head. Once off, I flipped it across the room. Ashely suddenly got shy and cupped her breasts.\n\n\"Put your hands down, princess. Daddy wants to see your tits.\"\n\nShe did, blushing. I made a show of looking at them. They were B cups, maybe edging towards C. But they stood out from her tiny frame. I reached my hands out and ran them along her sides, finally reaching her breasts and stroking the skin before reaching her nipples and giving them a light tug. She gasped and arched her body towards me.\n\n\"Your tits are beautiful, princess,\" I said.\n\n\"They're too small,\" she said. \"I always wanted them to be bigger.\"\n\nI gently pushed her back on the bed and then leaned over and took her left nipple into my mouth and began sucking. Ashley cried out and arched her back. I took my hand and began running it against her other nipple. Her nipples were phenomenally sensitive. \n\nI popped her nipple out of my mouth and looked up at her. She was breathing heavily and her eyes were lidded.\n\n\"I love your tits, little girl. They're perfect. Just the right size and sensitive. Daddy is going to have a lot of fun sucking and playing with them.\"\n\nShe wiggled up the bed, and put her arms above her head. Then she opened her legs, where I could see she already soaked through her panties.\n\n\"I'm a good little girl. I'm your toy, daddy. Please play with me.\"\n\nWhatever high brain functions that were still operating vanished. Whatever reservations I might have had about her age or the kind of play we were involved in went away. Whatever concerns I might have about family, friends, hell, my parents, all went the fuck away in a red haze.\n\nI needed her. I had to have her. I had to own her. And I would because she was now all mine.\n\nI growled quietly and then climbed up the bed and took her hands in one of mine and firmly held them. That and my body meant she was pinned. I could still feel her hips moving up and down, trying to rub against my cock. I leaned down and kissed her on her lips, feeling and hearing the little moans.\n\n\"Patience, little one,\" I said.\n\n\"Please daddy, I need you.\"\n\nI grinned and began kissing and nibbling on her neck as you kept begging me to please just fuck her. I moved further down and gently bit one of her nipples which caused her to cry out.\n\n\"When I'm ready, little girl,\" I said. \"Are you going to be a good girl.\"\n\nShe nodded. I went back to savoring her breasts. The amazing reaction I got whenever I kissed or sucked on her nipples made me wonder if I could make her cum just from playing with them. But that was an experiment for another day.\n\nWhile I continued to suck on her tits, my hand slid slowly down her stomach. She squirmed and complained that she was ticklish. I sucked hard on one of her nipples and gently nipped at it. She stopped complaining about being ticklish and went back to moaning and pleading.\n\nI finally left her tits alone and began kissing my way down her tickling tummy. To distract her again I ran my fingers over the outside of her panties. Her hips shot up from the bed, desperate for any contact.\n\n\"Daddy! Please! You've got to fuck me, daddy. I'm so horny daddy, you've got to fuck me or I'm going to explode,\" Ashley cried out.\n\nI stopped kissing her stomach and sat up. I placed one hand on her tiny body, pinning her to bed, while the other gently swirled over the outside of her panties. She looked like she wanted to crawl out of her skin. On the other hand, I was feeling sadistic and curious.\n\n\"You're awfully worked up, little girl,\" I said, making my voice sound almost bored. \"I don't think I can be responsible for all this. Have you been a bad girl.\"\n\nShe moaned. I leaned down and whispered in her ear.\n\n\"I will not touch your clit or put my cock in your pussy until you answer me, princess. Were you a bad girl today? Did you touch yourself?\"\n\n\"Yes daddy,\" she said, almost crying.\n\n\"When did you touch yourself?\"\n\nShe gave up, realizing that she wasn't getting anything until she confessed.\n\n\"Every day since we first met. Every time I saw you I had to go to the bathroom and rub my clit. That first night when I went into the bathroom to change, I nearly made myself cum. I did it a half dozen times today. When I came back to the hotel room to chance I lay on your bed naked and played with myself until I almost came a bunch of times. Your little girl is a dirty slut, daddy,\" she said.\n\nNow it was my turn to get breathless. I reached down and undid her panties, yanking them away from her body. I had every intention of going down on her and licking her pussy, but I realized both of us were done waiting. We'd been waiting for days and the foreplay and torturing each other was over.\n\nWith her panties off, Ashley looked at my face and quickly repositioned herself on the bed. Suddenly I was between her legs. She grabbed her knees and bent them back. There was her pussy, bare and soaking.\n\n\"Please daddy. Please. I'm sorry, but your little princess is a dumb, horny slut. Punish me later, but you've got to fuck me now. Please daddy!\"\n\nI forgot my knee was wonky. I forgot that I meant to ask her if she was on birth control. I forgot the condom I had on the bedside table. I was a kid again and damn the consequences. I took my cock and pushed it into her pussy.\n\nI knew she was on edge, but the act of pushing my cock into her pussy shattered her. My cock was barely half way when her body went rigid and her eyes rolled back into her head. She didn't make a sound, but her mouth opened wide. Her pussy, which was already tight, felt like it had locked a vice around my cock. I could push in any further, like I very much want to. I could only wait a moment until she finished cumming.\n\nFinally, she collapsed back down on the bed, panting heavily. I was positioned awkwardly, leaning over her. She opened her eyes, which were unfocussed at first, but then came back to reality. She looked up at me and might have flushed with embarrassment if she wasn't already cherry red from cumming so hard.\n\n\"Sorry, daddy. I let myself get a little too wound up,\" she said, still catching her breath.\n\n\"A little?\" I said.\n\n\"I'm sorry, daddy. I always like edging before fucking to get myself excited and...silly, but I overdid it.\"\n\nI slowly continued pushing my cock into her. Her pussy was still tight and pulsing. If she hadn't sucked me off and made me cum the night before there would have been no way I could have lasted.\n\n\"We'll talk about this more later,\" I said. \"But for right now...\" and then I buried myself in her pussy.\n\n\"Ohhhhh, daddy...\" she moaned, wrapping her legs around my hips.\n\nI'd felt nothing like it in decades. Her pussy was otherworldly. Tight, warm, pulsing around me. I closed my eyes and savored the moment. When I opened them again I could barely believe what was happening. A sexy pixie with red hair, her body flushed, glowing with sweat. Her eyes close and her mouth open. Magic.\n\nI pulled back and her hips followed, reluctant to let my cock go, and then I slammed back into her again, producing a startled gasp. Then I began fucking her, alternating between slamming my cock into her and slowly sliding it in and out. Now that the initial shock of her cumming had passed, I was feeling confident I could last.\n\nRight up until she started talking.\n\n\"Oh daddy, that's it. Fuck me with your thick cock,\" she moaned, wrapping her arms around my neck. I buried myself into her pussy with a hard thrust, causing her to lift off the bed. I met her lips and kissed her. It was a desperate, hungry kiss, like we both wanted to consume each other. Right until I pulled back and slammed back into her pussy. Her head rolled back and she screamed.\n\n\"Fuck me harder, daddy. Harder. I'm getting close again. Oh fuck, I'm such a bad little girl daddy,\" she said.\n\nJesus Christ, I thought. I reached back, one hand at a time and grabbed her ankles from around my waist and pinned them around her ears. Just as I thought, she was a flexible little girl. Her eyes widened as I pulled back and slammed my cock back into her repeatedly. She lost the ability to talk for about 30 seconds before she screamed again.\n\n\"Fuuuuuuccck! Cumming! Oh god, daddy!\"\n\nI had her pinned to the bed, so she couldn't thrash about as much as she did last time. Still, I watched her face as she flushed again, gasping for air and scrunching her eyes shut. It was so goddamn sexy it was a miracle I didn't cum. But it was a close thing. It was also about that time when my knee, which had been working miracles in allowing me to fuck her, decided it was done for the evening. I could feel it buckle and throb and I ungracefully slid out of her and flopped on the bed next to her.\n\nShe groaned in disappointment and looked at me like she was stoned.\n\n\"Sorry, princess. Daddy's knee is giving out. I need a minute.\"\n\nShe grinned and snuggled into my side, letting her hand run down towards my cock. She ran her fingernails across it. I groaned in frustration. It was not the way I wanted to cum, but considering we hadn't talked about birth control, maybe it was for the best.\n\nApparently mind reader was also one of her skills. She stopped stroking me and slid her body on my chest. She barely weighed 100 pounds, so it's not like she was crushing me. She looked me in the eyes and smiled, then leaned in and kissed me.\n\nShe'd kissed me eagerly, clumsily, passionately and desperately. This one was almost loving.\n\n\"I've been tested, so I promise I'm ok. And I'm on the pill, daddy,\" she said, \"For the moment...\"\n\nShe grinned. Beth and I hadn't been able to have kids. Jesus...\n\nI suspect I wasn't showing my best poker face when she said that, because she laughed and then began sliding down my body. Soon enough her pussy bumped against my cock. She sat up, with her pussy hovering over my cock, reached down and aimed it upwards. Then she slowly sank down on it, both of us groaning. I reached up to play with her tits, but she gently swatted my hands. \n\n\"This is for you, daddy,\" she whispered. She then slowly rose up off my cock, before sliding back down again. She kept repeating the motion. Slow and steady. I had no idea where she had the strength or will power. Youth has its advantages. But I wasn't complaining. It felt amazing. I could feel my hips start to move up to meet her as she slid down. We quickly settled into a rhythm that had them both groaning.\n\nWe were both getting close when Ashley leaned down, resting her hands on my chest. I couldn't resist reaching up and tweaking her nipples. She cursed and it threw off her pace for a moment. Then she grinned and looked at me.\n\n\"Do you want to breed your little girl, daddy?,\" she cooed. I groaned and slammed my hips up at her, trying to bury my cock.\n\n\"Oh fuuuck, yessss,\" she hissed. \"Oh you do. What a bad daddy you are, trying to breed your little girl. It's ok, because I'm a slutty little girl, daddy,\" she said, trying to regain her rhythm and picking up the pace. Neither one of us had long.\n\n\"My princess is such a slut.\"\n\n\"She is daddy. Oh god she is. She's a fucking slut who needs your cock so bad!\" There was no more rhythm or grace now. Just frantic slamming of bodies together. I rammed my hips upwards trying to bury my cock in her. She slammed down with unnatural fury, trying to impale herself on me.\n\n\"Oh fuck me, daddy! Cum in me, breed me!\" she screamed, slamming down on my cock and began cumming again.\n\nI had no chance. \"Fuck!\" I yelled and came in her. It felt like part of my brain short circuited and I briefly wondered if I might not have just had a stroke. I was still half out of it when I felt Ashley collapse on top of me. She was breathing hard and, I thought, crying. Shit, did I push it too far with her...\n\nAfter a moment to catch my breath I stroked her hair. \"Are you ok, princess?\"\n\nShe nodded her head, although kept her face buried in my chest. \"Just hold me for a bit, daddy. Please.\"\n\nAnd that's what I did. For 10 minutes I wrapped my arms around her, occasionally running a hand down her back. I kissed the top of her head and told her what a good girl she was. I could still hear some muffled sobbing, but she seemed like she was ok so I didn't push things.\n\nEventually, my cock slipped out of her and I could hear a little moan of disappointment. Then she slid off my body, but repositioned herself so that her head was on my chest. She reached out with one of her hands, and laced her fingers with mine.",
        "\"I'm sorry if I freaked you out, daddy,\" she said.\n\nI leaned down and kissed her head. She snuggled into my chest more.\n\n\"Just worried, little girl. That was quite a reaction. Are you all right?\"\n\nShe nodded her head up and down my chest.\n\n\"I really wound myself up too far. I edged way too much the last few days, I think.\"\n\n\"Sounds frustrating.\"\n\n\"It can be,\" she said. \"But if you do it right, it can be amazing. It gets you super horny and worked up. It can make you, I dunno, dumber. Sillier. It makes it easier for me to get into a Little headspace.\"\n\n\"So did something go wrong this time?\"\n\n\"No,\" she laughed gently. \"I goofed up. I was edging a bit before coming here because I thought 'well, maybe I'll meet someone at the con.' And I wanted to be Little and I thought the edging would help. But then I met you and then I started edging a lot more because I knew the moment you were more worried about me outside the con than thinking I was a crazy lady...\"\n\n\"To be fair, I was thinking both.\"\n\n\"Jerk,\" she said, gently thumping my belly with her fist. \"Anyway, I knew I wanted you. I was going to have to convince you, because I knew the age difference was freaking you out, but I could tell you wanted me to. Which got me more horny and silly...\"\n\n\"But,\" I said.\n\n\"But you put me into Little space anyway. All day treating me like a princess, at supper, the walk over here. Dressing up for and then you teased me. So I was in a natural Little space, combined with everything I'd done over the last couple of days to help get me into that space and...\"\n\n\"Boom.\"\n\n\"Big boom. I completely short circuited,\" she said. She then looked up at me. \"In a completely awesome way, by the way. I think I momentarily saw a different reality when I came the first time. It was great, but I'm not sure I should do that all the time.\"\n\n\"I'll go easier on you next time,\" I said.\n\nThat set something off in her. She immediately climbed back on top of me, sitting up on my waist. A weird, serious, nervous, eager look was on her face.\n\n\"You promise there'll be a next time? I know we only live a couple of hours away from each other, but I wasn't sure if you'd want to see me again because I'm a bit freaky and...\"\n\nI pulled her down and kissed her, although for a few seconds she was still trying to talk.\n\n\"How does next weekend sound?\" I asked, after pausing for a breath.\n\nI took her scream and kiss as a yes.\n\n****\n\nTurns out it was two weeks later. Ashley neglected to mention to me she had a big exam the following Monday. She pouted but after I told her that I expected nothing less than an A if she expected to come and visit me, she stopped complaining and cracked down to study. Of course, that didn't stop her from torturing me those two weeks as she constantly texted me photos in different outfits that she thought I might like. \n\nWhich meant I was leaning against a wall in the Kingston train station, bracing for a pixie tornado to come flying off the 4 pm train from Montreal. As a reward for getting an A on her exam, and after a lot of pouting and begging, I told her she could skip her Friday afternoon class and catch an earlier train.\n\nIt was still madness, of course. Outside of the bubble of the con, I thought I might have second thoughts, but it didn't happen. Once I settled back into my house I thought I might freak out and realize what I was doing was insane. And I did waiver for a few moments. Then I got a text from Ashley saying she missed me and everything calmed down.\n\nThere was still plenty to worry about. I could only imagine the reaction and eye rolling of some of my friends. \"Mid-life crisis, much, dude?\" My parents would be more than a little scandalized. And Beth's mom...well, I didn't like to think about her reaction much.\n\nBut that was another day. The train is pulling up to the station. I have time to plan and figure things out. If things kept working, we'd take a step, and then another. If I learned anything in my life so far it's that safe and dull have their place, but there's also something to be said for enjoying some unpredictability in your life.\n\nThe train doors open and she's there. And she's not flying towards me because she's dragging a suitcase that probably weighs as much as she does. She's huffing and finally gets it off the train. Then she sees me, smiles, tosses the suitcase that was, a moment ago too heavy to deal with, off to the side like it was nothing and comes flying towards me, landing in my arms.\n\n\"I missed you, daddy,\" she says, her voice muffled by being buried in my chest.\n\n\"I missed you too, princess.\""
    ],
    "authorname": "thanagar",
    "tags": [
        "daddy",
        "dd/lg",
        "ddlg",
        "mature",
        "teen"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/little-packages"
}