{
    "title": "Voyeur gets Voyeured Ch. 02",
    "pages": [
        "To my surprise, Divi had not appeared in my doorway for more than a week. I was expecting that after her introduction to sex, she would be anxious to try something new. I wasn't disappointed though because Priya had made several trips across my yard to my deck. She seemed to be intentionally timing her visits to catch me napping in my zero-gravity chair in the shade of the big oak tree. I would be startled awake to find her in her bikini kneeling between my legs blowing gently up the leg of my shorts. Her beautiful face would light up when I came awake and her eyes and lips smiled up at me as she reached up under the left leg of my shorts to find my flaccid cock. Her smile would turn to a grin as my cock instantly reacted to her touch. She loved to watch it grow in her hand as she fondled my balls with her other hand. Then she would lean in and push her lips over my glans and lash the ridge of the crown with her tongue. Then she would pull herself back and purse her lips and blow on it harder. I liked the feel of her hot breath blowing over my wet glans. Her grin always broadened at my reaction.\n\nOur revisited sexual encounters always started this way and they always ended on my bed after she had several orgasms and I had at least one and often two. I love caressing her body from head to thighs as she lays there on top of me with my softening cock buried in her pussy as she randomly kisses my hard nipples. I love the way she trembles as my fingertips play lightly over her shoulder blades to the hollow of her back and over the gentle slope of her gorgeous ass. She groans softly as my fingers trace down to the sensitive underside of my cock. I know how much Priya loves anal sex so I always trace a path over her rosebud on the way. \"You're teasing me again,\" she'd mutter as she nibbled on my nipple.\n\nToday, Priya wasn't satisfied with her several orgasms during vaginal sex in a multitude of positions. She pushed her ass up to my fingers as they traced over her anus to her well lubricated pussy. Only the flared helmet of my glans was still inside her as she pushed herself up against my fingers. She released my nipple from her lips and said, \"Fuck my ass,\" as she gazed up at my face with a hopeful look on her face. \"I love your big hard cock in my ass. The best ever.\"\n\nThe image of Priya, on her hands and knees at the edge of my bed as I stand behind her firmly gripping her hips as I maneuver my rock hard cock to her anus, filled my mind. As I contemplated whether the rock hard cock part of her request could be achieved or not, my mental vantage point changed so I was envisioning Priya's bullet shaped tits hanging nearly to the bed as she looked back over her ass with that sultry look of her face.\n\nPriya always looks back over her ass, trying to see my cock push into her ass. She always quickly abandons that strategy because she can't see anything but the smooth slope of her ass and my navel behind it from that vantage point. Her alternate approach is to drop her head to the bed and peer between her hanging tits. From this vantage point, she can see my balls pushing up against her pussy but she still can't witness what she wants to and that is my cock pushing through her sphincter and my shaft disappearing in her bowels.\n\nI'm amused by her attempts to witness the insertion because as she watches from her alternate position, she always collapses her chest to the bed with a loud groan as I pushed through her resistance, so she can't see anything anyway and by then she's consumed with frantic lust as I fuck her ass through another orgasm or two followed by my own. Only once did Priya have an anal orgasm and I thought she might crush my cock. We were both screaming and groaning until she was able to relax her grip.\n\nToday, Priya wanted to try a different position that she'd seen on an internet porn site. She rolled off my softened cock as cum gushed from her pussy leaving me with the mess on my thighs and hip. She shoved a hand to her pussy and scrambled off the bed heading for the bathroom to clean up. She brought back a towel and cleaned my hip and thighs and then got back on the bed and sank her lips onto my flaccid cock and easily pushed down to the base and flicked her tongue on my balls. She grinned around her mouthful as my cock responded quickly.\n\nPriya's eyes began to tear-up as my cock filled her mouth and she finally had to pull back to breathe. She pulled off and sucked in the saliva that came out with it. She licked her lips, took a deep breath and said, \"Fuck, that's a big cock.\"\n\nShe stroked it several times as she drilled her tongue into the super-sensitive spot at the base of my glans. She smiles as I drove my head back down in my pillow and groan out, \"Fuck, that's incredible.\" If she kept that up for long she would be waiting a long time for that anal fucking she wanted.\n\nPriya seemed to be reading my mind as she pulled her tongue back in her mouth and released her hand. She grinned hard as she watched my rigid cock slap down on my stomach and bounce a few inches back up and then bob to the rhythm of my racing heartbeat. \n\nPriya climbed up and sat down on my thighs and pulled my cock to her stomach. She rubbed the velvety crown to her navel and giggled as she could feel it surge harder and pull away from her. She held it there as she lifted her hips and moved her feet up my body and planted them along my ribcage. She grinned at me as she slid her wet pussy up the underside of my shaft and then back down again, pressing my cock hard to her as her clitoris dragged down the underside. We were both groaning by then, as her eyes closed and her mouth opened. Her head rolled back on her neck as she muttered, \"Oh gawwd, Jack. I'm right on the edge already. Oh my God.\"\n\nShe released my cock and it flopped back toward my stomach as she reached for the towel that she had brought from the bathroom. Underneath it was the jar of petroleum jelly and a hand mirror, which I didn't even realize was there. With her right hand, she lubricated her anus as she balanced herself on her two feet by my sides and her left hand on my knee. Then she sat forward and grabbed my cock in her lubricated right hand and stroked it from glans to balls. Her touch was electric. I groaned hard and slammed my head back in my pillow again.\n\nPriya was already gasping for air as she leaned back again and pulled my cock to her anus. There was some pain for me because as hard as my cock was, it didn't want to bend back that way. She was oblivious and I didn't complain. \n\nOnce she found the right spot and made some minor adjustments, she let gravity pull her down. She groaned as her sphincter resisted my penetration. She grabbed the hand mirror and positioned it on my stomach and angled it so she could see her anus pushing firmly to my glans. She pushed down hard until my glans suddenly moved inside. She pushed back up with her legs and slid back off the glans. She glanced up at my face and grinned hard and quickly dropped her gaze back to the mirror. She repeated this several times and I suspected that this little tip-fucking was as enjoyable for her as it was for me. \n\nHer total attention was consumed as she balanced on her two feet and one hand with her second hand holding the mirror. She was delighted to see my glans sliding in and out. She was struggling with the balancing act and she pushed herself slowly down my shaft to stereo groans from both of us. She watched the slow penetration of two complete cycles and then she dropped the mirror on my stomach and steadied her position with both hands on my knees as she used her legs to drive herself up and down my shaft. She thrashed her head from side to side as she moaned, \"Oh...Oh...Oh,\" in synch with her rhythm. \n\nAfter a dozen strokes, I started clenching my butt-cheeks to drive my cock deeper when she descended down my shaft. I was lifted closer and closer to ejaculation with each full penetration of her bowels. In spite of our sexual escapades and the multiple ejaculations already experienced this morning, I wasn't going to last much longer and Priya felt my surge of hardness.\n\nShe increased her pace and I followed her lead. She was trying to catch up with her own orgasm and the pitch of her moans and groans increased as she drove herself closer. I thrashed my head from side to side as my orgasm couldn't be held back any longer. I succumbed to the inevitable and drove my hips up on her down stroke and cum exploded into her bowels. \n\nPriya felt it coming and she gritted her teeth, seething air through them. I watched every muscle in her body clench from her face to her toes. I was looking directly into her pussy when it suddenly began clenching. I pushed my thumb inside and marveled at the strength of her vaginal muscles. My hand followed her up and down as she continued fucking my cock as salvo after salvo launched into her ass. Before I could finish, Priya's sphincter clamped down tight on my shaft as she joined her vaginal orgasm with an anal one. Her eyes flashed open with alarm and what I assumed was pain. The grip on my cock was incredible and I groaned out, \"Fuck Priya, you're crushing my cock. We had to slow way down as the fucking only continued between spasms.\n\nJust like her pussy, her anal clenching was rhythmic but they weren't in synch. She clenched hard on my thumb as I fucked her pussy with it and on my still pulsing cock fucking her ass. She continued both orgasms long after I shot my last salvo. She gyrated everywhere on my hips and as my cock began to soften, she pushed herself up to a sitting position and then finally pulled her feet back behind her and collapsed those gorgeous tits onto my chest. This move pulled most of my shaft from her ass. We were both gasping for oxygen like two fish out of water. I held her tight to me for a long time until our breathing became more regular. I kissed her forehead and she kissed my nipples. I could feel my cock softening and my glans was withdrawing from her ass and she said, \"No. No. Don't pull it out.\" I didn't have any control over that and moments later, my cock pulled out and rested against her anus. I could still feel her anus pulsing as the last vestiges of her anal orgasm faded.\n\nShe continued to lie in my arms for twenty minutes or so before she rolled off my chest and lay on her side beside me. She reached down and rolled her index finger around my glans several times. It was slick with petroleum jelly. She made no attempt to get me back up again. She was as spent as I was.\n\nWe cuddled for several minutes. I lightly dragged my fingertips over her butt. She trembled every time I dragged my fingertips down to her anus. I asked her how Divi was and she laughed. \"Actually, she was pretty sore for several days after that first day. She walked around the house like she just got off a horse.\" She giggled and continued, \"In a way, I guess she did just get off a horse.\" She wrapped her fingers around my shaft and waggled it. \"She's off with her friends in my little boat. I heard them talking about some spot on the lake they called 'Make-out Lagoon'.\"\n\nI risked a question that had become the elephant in the room that day when Joanna gave every indication that she and Divi had experienced lesbian sex. \"Do you think they go there to make-out with each other or guys they've arranged to meet there?\" There was total silence from Priya and she stopped fondling my cock. I braced for her reaction to my question.\n\nAfter many seconds she said, \"After that first day with you and the things Joanna blurted out, I'm suspicious that they are and have been having sex with each other. I'm not sure what to think about it. Divi was all in on your cock that day though. It's probably just curiosity and experimentation.\" She rolled in tighter to me and released my totally flaccid dick. She looked up into my eyes and said, \"I confess that I loved the sensation of the girls sucking on my nipples when you pulled me up into your lap and fucked me at the end. I still get wet when I think about it. Do you think maybe I'm really a lesbian too?\"\n\nI laughed and pulled her hard to me pressing her breasts to my side. \"You're definitely not a lesbian but you may be bisexual. We'll have to explore that possibility some more.\"\n\nShe playfully slapped my chest and said, \"You're so bad.\" With that, Priya rolled away from me and got on her feet. She headed quickly for the bathroom yelling back at me, \"I need a quick shower. Will you join me?\"\n\nI rolled off the bed and followed her. \"It probably won't be a quick shower if I join you.\" She giggled as she pulled back the shower curtain and leaned in to turn on the water. She had showered here enough times that she knew the exact spot to turn the hot and cold mixing valve to. When she stood up and turned around, I pulled her to me and kissed her. She raised the passion with her response. I ran my hands down over her firm ass and ran my index finger through the oozing cum from her anus and pushed it inside. Her instinctive reaction was to move away from my invading finger which pushed her harder against me. Her erect nipples pressed against my ribs. We kissed again and she pushed her ass back against my finger.\n\nIn the shower, we were just getting started again when we heard a car horn toot as a car engine became audible in my driveway. \"Fuck,\" I said. \"No one ever visits me.\" As soon as I said that I knew that wasn't exactly correct. Anna's older sister occasionally came by to see if I was still alive. It had to be her. 'Fuck. I wish she'd call first,' I thought.\n\nPriya was already on the move. She pulled my cock from her throat and slid her lips up my shaft and kissed my glans before she stood up. She spun the faucet handle to the off position and yanked back the curtain. She stepped out of the shower to the tile floor and looked back at me. The look on her face softened into a grin as she looked at my bouncing hard cock and said, \"I'll be back for that later. Okay?\" I just nodded as she disappeared back into the bedroom. As I quickly towel dried my hair and torso, Priya appeared in the doorway pulling her bikini top over her head and tying the strings behind her back. She came to me and stretched up for a kiss as she jerked my softening cock back up to full size and then stepped into her bikini bottom and stumbled for the slider to the deck as she struggled trying to pull her bikini bottom up her wet legs, thighs and hips.\n\nAs the sliding glass door shut I could hear footsteps on the stairs to my front door. Half dried off; I grabbed my athletic shorts and pulled them over my feet. I struggled to pull them up as the material snagged on my wet legs just as the door bell chimed. I dried off my legs and casually and nonchalantly went to the front door, which was open. Anna's older sister Joyce and her daughter Angela stood on the stoop looking at me through the screen door. They weren't looking at my face. They were staring at my crotch. I glanced down to see what they were looking at and was horrified to discover that my cock was still half hard and tenting my shorts. I instantly dropped my hands to my crotch to cover the tent. I could feel the heat of my embarrassment in my face. They grinned at each other and Joyce said, \"Just checking to see if you're alive.\" She glanced back at my crotch. \"I see that you are.\"\n\nWithout another word, Joyce opened the screen door and pushed her way past me into the house. Angela stepped inside and said, \"Hi Uncle Jack. How have you been?\" I did a quick calculation in my mind and figured that she must be twenty years old now. As I was about to respond, she put her hands on my naked chest and stretched up for a kiss. I aimed my lips at her cheek but she turned her head into me and planted a firm kiss on my lips. I pulled back and she giggled at my reaction as she pushed past me to follow her mother. On her way by me she reached down and squeezed my rapidly softening cock and said, \"I can see that you're glad to see us.\"\n\nI excused myself for a moment as I went to my bedroom to find a clean tee shirt. I scanned the bedroom for any incriminating evidence because I knew Joyce would employ her detective skills. She actually is a detective with the city police department where Anna and I had lived before..., well, just before. \n\nI was dressed like I usually am even though I recognized that my usual garb really wasn't suitable for company. 'Fuck it,' I said to myself as I walked into the living room to find Joyce flipping through a stack of magazines and private papers. Without even a trace of embarrassment at getting caught snooping, she put the stack down and turned to look out the window at the lake. \"You have a beautiful view from here, Jack,\" she said still facing the window. She glanced down at the hardwood floor and I followed her gaze. I was fucked. When Priya ran out without drying herself, she left wet unmistakably female foot prints on the floor. There was no way Joyce didn't notice them.\n\nI pulled my gaze away from the foot prints and looked at Joyce. She was backlit by the sunlight streaming in the sliding glass door and I couldn't help but admire her spectacular form. She's 5'8\" tall, the same as Anna was. She was wearing a pair of designer jeans that looked like they had been sprayed on her amazing ass. She had bleached her natural auburn hair and looked very sexy as a blonde. She turned slightly to look up the lake and the backlight silhouetted her large breasts jutting out from her chest. My first thought was that she must be wearing a hell of a bra that would make those 'dogs' stand up like that, but then I noticed her nipples pushing against her cotton ribbed tank top and I revised my assumption.\n\nAngela was standing in the kitchen rummaging through my sparsely populate refrigerator. \"I see you don't go grocery shopping often. You must be on a beer diet.\"\n\nI turned to look at her bent over at the waist looking in the lower drawers of the refrigerator. I was struck by how much she looked like her mother. She wore short cutoff jeans that highlighted her butt-cheeks. Not unusual for a twenty year old these days. I could see a bikini top tied at her neck with a wife-beater tee shirt over it like her mother's. Large boobs obviously run in the family because Angela's boobs were huge too. Not anything like Ashley's but, wow. With Angela bent low peering in the refrigerator, I could see most of her fleshy globes and my cock, without consulting me, lifted the left leg of my cotton shorts. I could feel myself hardening so I pivoted my body so Angela wouldn't notice. That turned out to be a big mistake because I pivoted right into Joyce's view and the ever observant detective said, \"Jack, sweetie. That's the second erection you've had since we got here. Is there something you'd like to say to us?\"\n\nI could feel the embarrassment in my face again as I struggled to get my erection to go down but now I was looking directly at Joyce's nipples pushing hard against her tank top. She grinned at my discomfort and walked over close and stretched up for a kiss. I hesitated as I struggled with the thought that I was having sexual thoughts about Anna's sister and her niece. I had to kiss her back or insult her which I didn't want to do. I intended a quick peck on her lips but she wasn't going to be satisfied with that and she kissed me hard the moment my lips touched hers. Then she pushed aside my hand covering my crotch and gripped my semi-hard cock through the material of my shorts. It reacted immediately, of its own volition and hardened further even as my conscious mind was pleading for it to do the opposite.\n\nThoroughly amused by my discomfort, Joyce released my cock and stepped back before turning and walking away on her usual tour of my house. Angela had closed the refrigerator door and was now opening my kitchen cabinets. She wasn't looking in the cabinets because she was staring at my erection lifting the leg of my shorts. From my vantage point I didn't realize that she could actually see the bottom half of my glans poking out of my shorts. I turned away from her and walked out on the deck and leaned against the deck railing to hide my erection.",
        "I had never had carnal thoughts about Joyce before. She was married with a four year old Angela when Anna and I got married. Anna's younger sister 'Frankie' was only eleven. All three sisters had auburn colored hair of differing lengths and styles. They all had the same emerald green eyes and pouty lips. Joyce and Anna had the same full and round, larger than average breasts. 'Frankie' was just beginning to develop her breasts then. Even in recent years when Joyce came by to check on me I hadn't had such thoughts. I guess I had just put away any sexual thoughts after Anna died until the old couple next door, followed by Jacob and Ashley's public sex and then Priya, Divi and Joanna pulled my libido from the doldrums and really got my juices flowing. I think about sex now as much as I did when I was dating Anna in college, which was constantly.\n\nJoyce and Angela came out on the deck and took chairs next to my zero-gravity chair in the shade. Joyce said, \"Jack come over and sit and visit with us.\" I assessed the condition of my erection and decided it was deflated enough to do as she asked. I sat facing them and tipped back a little and locked the position.\n\nJoyce said, \"Tell us about your new girlfriend.\" Angela had a surprised look on her face and looked at her mother. My mouth opened and shut a couple times as my mind attempted to provide a logical response to her statement. I must have looked like one of those guppies in a fish tank. \n\nLike the idiot that I can be, I said, \"What do you mean? I don't have a girlfriend, which was technically correct.\" I figured that Joyce had the wet foot prints on the hardwood floor for evidence but that was all. Wrong.\n\nJoyce just smiled at me for a moment as she seemed to contemplate whether or not she should push the issue. She decided to push it. \"Jack sweetie, your bedroom reeks of sex and recent sex at that. There's a jar of petroleum jelly on your bedspread. Is that your new sleeping partner? The wet, female foot prints on the floor leading to the slider?\" She just grinned at me while I fumbled around for a response. Angela looked back and forth from her mother to me waiting for one or the other to say something.\n\n\"Alright Sherlock, I have recently been enjoying sex again. It's been thirteen years and I had forgotten what sex was like.\" I shut up after that and looked from Joyce to Angela who was also grinning at me. I looked away from them and watched a boat towing a water-skier. Anything to avoid Joyce's probing eyes.\n\nJoyce scooched her chair closer to mine and leaned in and said, \"It's about time. Anna is gone and you need to move on with your life. You should have long before now. You moved out here in the boonies to bury yourself in your sorrow. I get it. We all took a hit when she died. You probably won't believe me, but we all worry about you. Frankie and I got together recently to discuss it.\" She grinned at Angela and said, \"Sorry baby. It looks like someone else beat us to it.\"\n\nBefore I could analyze what Joyce's last statement to Angela meant, the doorbell rang again. 'What the fuck,' I thought. Angela and Joyce were arguing amongst themselves as I went to answer the door. I could see Frankie on the other side of the screen door as I walked toward the breezeway from the deck. She had a huge smile on her face. I hadn't seen Frankie in many years and I was taken aback at how much she looked like Anna. My heart stopped for a moment and my breathing quickened. She was displaying her Anna sized boobs and cleavage in a half-cup bikini top with a flimsy transparent multi-colored wrap tied to her hips exposing her tight abs and trim waist. I quickly estimated that Frankie was a couple inches taller than either of her sisters.\n\nI opened the screen door with a welcoming smile and ushered her in. She moved quickly to me and wrapped her arms around my neck pushing her ample breasts against my ribs. She stretched up for a kiss and I bent to accept it. I had always liked Frankie as an exuberant pre-teen and teenager. She was fourteen when Anna died and I hadn't seen her since I moved to the lake ten years ago.\n\nFrankie broke our embrace and eagerly said, \"I see Joyce's car is here. I hope I'm not too late.\"\n\n\"Too late for what?\" I said. She looked a little sheepish and looked around me to see her older sister and niece arguing back and forth on the deck.\n\nFrankie said, \"What are they arguing about?\" I didn't have a clue and I just shrugged my shoulder and raised my hands out at waist level.\n\n\"Maybe we should go out and find out,\" I said and motioned for Frankie to lead the way. I couldn't help but examine her gorgeous ass as the flimsy wrap swished with the exaggerated movement of her hips.\n\nI started to follow her onto the deck. I realized that I was being drawn along behind that ass like a magnet and my cock twitched and hardened again. I stopped and loudly announced that I would make a pitcher of my signature cocktail. I hadn't made one since I moved here. In truth, I figured the three of them were up to something and I'd find out by letting them discuss it amongst themselves. I listened through an open window as I mixed the pitcher full of mostly rum, with orange juice, pineapple juice and blue curacao for effect. I had seen Joyce totally blasted on this concoction on a few occasions. I remembered that she had sworn off this cocktail after a bad hang-over many years ago. I was curious to see if she'd remember that.\n\nJoyce was explaining to Frankie that I already had someone 'cleaning my clock' as she put it and went on to suggest that I was probably having sex when she and Angela arrived. The detective in her went on to state that the 'clock cleaner' must be a neighbor or live close by because there was no car in the driveway or street when they arrived. I was always amazed at Joyce's observational skills. She was in the perfect profession.\n\nAngela was obviously frustrated as she said, \"I don't care. I've been diddling myself all the way out here in anticipation of seducing Uncle Jack and getting it on with him. I'm so horny I can't stand it anymore. Frankie, you should have been here when we got here. He had a huge boner in his shorts. I was going to jump him right there.\" Her fingers were inside her shorts digging into her pussy.\n\nFrankie spoke up, \"Joyce, are you absolutely certain that he has someone after all these years?\"\n\nJoyce said, \"I'm ninety percent certain. Do you think we should follow through with our plan to seduce him? I admit that the size of that bulge in his shorts took my breath away.\" Angela was nodding vigorously and her eyes pleaded with Frankie for her to agree.\n\nFrankie was silent as she scanned back and forth between Angela's pleading eyes and Joyce's well practiced poker-face. I smiled to myself as I dumped ice into the pitcher. Now that I knew what they were here for I waited to see if Frankie would make their decision to proceed with their plan unanimous. I put the pitcher and four glasses on a tray and headed for the deck via the breezeway. As I stepped onto the deck, Angela jumped out of her chair with a cheer, pumping her fist in the air. I smiled knowing what Frankie's decision must have been. Now I had to play dumb and let them execute their planned seduction.\n\nAs I walked toward my two sisters-in-law and niece, my dick apparently had no concept of what playing dumb meant. I stopped and turned around and went back inside. I set the tray on the counter and reached down and pulled my erection out of my shorts and tried everything to get my cock to go down including slapping it on the counter. Nothing helped. I whispered, \"Come on buddy. Give me a break here. I'd say 'throw me a freakin' bone here, but that's exactly what you're doing'.\" \n\nThe jig was up when Joyce walked in through the sliding glass door and saw me talking to my dick. She laughed and said, \"Jesus Jack. You really need to move back to civilization. You're talking to your dick now. Let me guess; you heard what we were talking about and your little head is all in but your big head is reluctant.\"\n\nI pushed my erection back in my shorts as best I could and said, \"Yup. That about sums it up, I guess.\"\n\nFrankie startled me as she came into the kitchen from the breezeway and pushed her body against my back and reached around to my front and gripped my erection in my shorts. My heart was hammering in my chest. Blood pounded in my ears and I could feel blood driving my cock harder and harder. I didn't physically resist but Frankie could sense my reluctance.\n\n\"Consider this a family intervention, Frankie said.\" Angela had followed closely behind Joyce and watched as Frankie took the lead by stroking my cock through my shorts. Frankie's eyes bulged when she got the full measure of my cock. \"Jesus guys, you were right. Angela honey, come over here. You have to feel this.\"\n\nAngela nearly launched herself into the kitchen and knelt in front of me. Frankie released my cock and pulled the left leg of my shorts up to expose my balls. My heart rate ramped up again as Angela yanked my shorts down to my feet. My cock was as hard as I had ever seen it. I could hardly breathe. Angela lifted herself off her feet and wrapped her fingers around my shaft and kissed the crown as she stared up into my eyes. Air burst from my lungs as I mumbled, \"Oh Jesus. This is really happening.\"\n\nAngela turned back to her mother and said, \"Fuck Mom. I can't even get my hand around it. It's huge.\" Joyce watched her daughter stroking my cock and grinned at me.\n\nJoyce said, \"I always suspected that Anna got the alpha cock. Robert's cock is a joke even if it did give me Angela.\" Joyce looked over at Frankie and continued, \"Frankie. You've had a few relationships. Did any of your guys match up with that?\" Frankie didn't even have to think about the question. She just shook her head as she watched Angela jerk me off as she sucked her lower lip between her teeth and gently nibbled on it. Her face was as flushed as mine. I just leaned back against the counter and groaned non-stop to the delight of Angela who was obviously anxious to make a good impression.\n\nJoyce said, \"Hey guys, how about we take this out on the deck where we can all get comfortable. I didn't see any vehicles in your neighbors' driveway when we came in.\" Angela reluctantly let go of my erection and stood up. She then renewed her tight grip on it and led me onto the deck through the sliding glass door. Joyce followed close behind. Frankie released her lower lip and carried the pitcher of drinks out and set it on a small glass end table beside a cushioned chair that Angela guided me to.\n\nAngela went down on her knees again and renewed her hand job and it quickly changed to a blow job. For a twenty year old, she gave a fantastic blow job. She held my cock in place with her left hand as she pushed her lips down my shaft. She tried to swallow all of me but she gagged hard about three-quarters of the way down. She tried again with the same results. Saliva gushed out of her mouth when she pulled off to cough. She gathered it in her left hand and went back to her hand job as she dragged her tongue up my shaft from my balls and over the top of my glans. Her right hand went between her legs and she groaned hard around my cock as her fingers found her clitoris.\n\nFrankie poured a glass full from the pitcher and handed it to Joyce who was entranced by Angela's cock-sucking skills. Joyce took the drink and downed about half before she indicated that she remembered this drink from years ago. Frankie poured herself a drink and took a tentative sip. She had never tasted it before. She was much too young to drink the last time I made them. She smiled and flicked her tongue around her lips and took another much larger sip.\n\nTo say the least, I wasn't paying much attention to whether Frankie or Joyce liked the drink or not. Every so often, Angela would pull her lips off my cock and suck all the fingers of her right hand in and lash them with her tongue before pushing them back in her pussy before resuming her blow job. I looked over at Joyce and in a deep toned demonic groan said, \"If you guys want any of this, I'm not going to last long. She's pretty good.\"\n\nAngela smiled around my cock at my compliment and then smiled back at her mother. Joyce leaned over to Angela and said, \"Let your Aunt Frankie try it.\" She looked up at me with a grin on her face and continued, \"I'm sure we can get your Uncle Jack back up again fairly soon.\"\n\nAngela was clearly disappointed but she pulled her lips back creating a lot of suction that loudly popped when she pulled off. She giggled and licked the long silvery threads of saliva and pre-cum from my glans and pushed back offering my cock to Frankie, who grinned and eagerly took her position between my legs.\n\nBefore taking possession of my rock hard cock, Frankie reached behind her back and untied her bikini top. Her large breasts sprang free. Her nipples were erect and mirrored Anna's tits. She grinned up at me as she took my pulsing cock and pushed her lips down to the bottom of my glans and lashed her tongue around and around the ridge. When she attacked my 'spot' I let out a loud groan and Frankie smiled around my shaft. I was looking down at Anna's clone reminiscing about her fantastic blow jobs. I couldn't help thinking back to the ten year old skinny, flat-chested little girl that was Frankie when I met her at the dinner table the first time I met Anna's parents. I was so nervous and Frankie, who was introduced to me as Francine, was so annoyed that she blurted out, \"I'm Frankie.\" Her face was covered with all forms of makeup that she had obviously applied herself. She thought she looked great. So did I. Her parents thought otherwise and her dad ordered her to her room without supper.\n\nI was sad for Frankie that night, seventeen years ago as she sniffled her way down the hall to her room. I felt even worse when after supper; Anna explained that Frankie had pulled a chair up beside her that afternoon while she was putting on her makeup. She was so nervous about meeting me and she wanted to be pretty. \"As pretty as me,\" Anna explained. Anna gave her pointers on how to use the lipstick and eyeliner.\n\nFrankie was allowed to come out of her room to say goodnight to me when I was leaving. I knelt down on one knee to be at her eye level and she threw her arms around my neck and kissed me on the cheek and said, \"Goodnight Jack. It was wonderful to meet you.\"\n\nI kissed her cheek and said, \"Goodnight Frankie. It was wonderful to meet you too.\" Then I leaned in close and whispered, \"I think you were the prettiest girl at the table tonight.\" The grin that spread across her face was priceless. \n\nThat same grin now formed at the end of my cock as Frankie held my glans tightly with her lips as her cheeks hollowed from her suction. I smiled as I noted that Frankie's skill with makeup had vastly improved. She was gorgeous.\n\nBoth of her hands flailed up and down my shaft. Her tits were bouncing everywhere and I couldn't take my eyes off them. Frankie noticed where my eyes were and she pulled her lips back and said, \"Do you want a tit-fuck?\" She didn't wait for my answer and pushed her lips back on my glans.\n\nBefore I could get any form of an answer out, Joyce said, \"Leave that to me, Frankie.\" I glanced up at Joyce who was standing behind Frankie pulling her tank top over her head. Her nipples were on high beams above a sexy demi-bra that cradled her large breasts holding them high on her chest. \n\nFrankie was pulling my orgasm out of me. I could feel my balls pull up in anticipation and Frankie stopped her hand job, swirled her tongue around my ridge a couple times and pulled off my cock. Frankie cradled my balls and looked back at her sister, Joyce and said, \"You'd better get down here. He's ready to blow.\" She moved to the side while still on her knees. She cupped her own tits and fondled her nipples as Joyce moved in to take her place. She unsnapped her bra and let it drop to my lap. I watched Joyce inch up closer spreading my legs wider as she positioned my cock between her tits. She looked down at my cock and then dipped her head down and stuck her tongue into the eye to collect the pre-cum that glistened in the sunlight. Then she kissed my glans and sat up straight with shoulders pulled back.\n\nSomewhere along the line, Angela had stripped naked and had moved over to the right side of my legs. She was sitting on her feet with her hands on my right thigh watching her mother preparing to tit-fuck my cock. Frankie had removed her wrap and had pulled the bikini bottom to the side of her pussy and was furiously fingering herself.\n\nJoyce was satisfied with her preparations and folded her big tits around my cock and held them in place with her palms and fingers. When my cock disappeared in her tit flesh, I let out an uncontrollable groan and muttered, \"Fuck, Joyce. That feels incredible.\" Joyce smiled at me and began driving her tit flesh up and down my shaft with her hands. She assisted that motion by bobbing her torso up and down with her thighs. \n\nI knew I wouldn't last long but I was trying hard to hold off. Frankie and Angela were staring intently at my velvety crown appearing and disappearing above Joyce's ample cleavage. They had begun their heavy breathing induced by their own fingers. Joyce's head was bent as far forward as she could; attempting to put her lips on my glans as it appeared in her cleavage. She was partially successful.\n\nFrankie's body pulsed hard and her tits collapsed onto my left thigh. She was groaning hard and then muttered, \"Fuck, I'm cumming. Oh Jesus, fuck, I'm cumming.\" She looked up at me. Her eyes were glazed over and her mouth hung open as she gasped for air. I looked down and she was still furiously driving her fingers in her pussy.\n\nJoyce watched her baby sister thrashing on my thigh in full orgasm. She was tiring and she stopped driving her body up and down and relied only on her hands lifting and dropping her tit flesh encasing my cock. I was done. I couldn't hold back anymore. I thrust my hips upward as cum boiled out of my balls and I yelled, \"Fuuuuuck,\" as a long, powerful shot of jism blasted up my shaft.\n\nJoyce had been looking down to watch me cum on her tits. She obviously expected that I would just drool cum out of my cock and down into her cleavage like her ex-husband always did and she got down as close as she could to watch. She didn't anticipate the force behind my eruption and she squealed and quickly pulled her face away as she caught that first salvo on her tucked in chin and up her face into her hair. It flew over her head and landed on her back. It all seemed to be in slow motion. It was followed closely by stream after stream of cum and it sprayed everywhere upon hitting Joyce's chin. We were all covered.\n\nFrankie was oblivious as she was recovering from her orgasm. Her face, shoulders, back and tits were covered. Angela was startled by the spray and initially turned away but quickly recovered and let out a delighted squeal as she leaned in and stuck her tongue out trying to catch some. Joyce was startled too but she kept right on tit-fucking my cock until the last two shots drooled out and ran down into her cleavage. \n\nJoyce started laughing when she released my cock from her fun-bags. She looked at her cum covered hands and tits. She flicked her tongue around her lips and collected a big glob and pulled it into her mouth. I could tell she was pushing it around in her mouth with her tongue as if she was savoring the taste of a fine wine. \n\nAngela moved closer to her mother and bent down and licked cum off Joyce's nipples and Joyce groaned from the sensation. That was a new twist. The next several minutes were spent cleaning cum from everyone's bodies with their tongues. I was fascinated as I watched this spectacle. Joyce pushed her lips down my cum covered cock all the way to the balls while Frankie and Angela just stared in disbelief that Joyce was deep throating my cock. It wasn't all that big a deal because I had softened considerably after my eruption.",
        "When Joyce pulled off, Angela took her place as she lashed my cock with her tongue. Frankie followed and tongue lashed my cock before 'popping' it from her mouth. I could feel my cock responding to the combined tongue actions of these three beautiful women. My little head seemed to be inspired by the fact that they were my sisters-in-law and niece. My big head was thinking, 'Somehow this is wrong. I feel like I'm cheating on Anna with her sisters.' I shoved those thoughts aside.\n\nAngela was the first to notice my rising cock as Frankie and Joyce had maneuvered themselves into a sort of sixty-nine position with Frankie on her back on the deck and Joyce on all fours above Frankie sucking and licking her tits which were flattened and sprawled across her chest while Frankie sucked and licked Joyce's big tits hanging in her face.\n\nAngela was about to announce that I was back up again but then a sly smile crossed her face. She moved in between my legs and started jerking me off. Her touch made me groan and my cock surged up to full size again. I wondered if I'd be able to cum anymore after the morning session with Priya and now this. One thing was for sure; my little head was confident.\n\nAngela looked back at Frankie and Joyce moaning hard with the onslaught of each other's tongues and lips. She turned back to me and grinned as she said, \"Well Jack. I guess it's just you and me.\" I was ready for whatever she was going to throw at me.\n\nAngela stood up between my legs and spread her labia and ran her index finger through her sopping wet pussy. To my knowledge, she hadn't had an orgasm yet. Her clitoris was blood-red and swollen. Her hips surged toward me as her head rocked back on her neck when she touched it. The sultry look on her face when she looked down at me made my cock pulse even harder. She looked like a hungry tiger about to pounce.\n\nAngela held out her hand to me and I took it, not knowing what she had planned. She pulled me to my feet and led me to the edge of the deck. She pushed her ass to the railing and used her arms to lift herself on to it. She spread her legs wide and pulled my cock to her pussy. Her position was perfect as she dragged my glans through her labia and suddenly lurched when it touched her clitoris. She positioned me at her vagina and gripped my hips and pulled me into her. God damn, she was tight. I groaned hard and she muttered, \"Oh Jesus, that's big,\" as her head rocked back on her neck. My cock pushed against her tightness and she groaned hard and dropped her forehead to my chest as I took a small step forward and pushed my cock in further. She released my hips and cradled her tits as she thumbed her nipples. She groaned and flinched as my glans eased up against her cervix. I stopped right there.\n\nAngela used her butt-cheeks to inch herself back on the railing to relieve the pressure. My thighs were pressed up against the railing so I could now fuck Angela without worrying about hurting her. I pulled back to the ridge and pushed back in as far as my thighs would allow. She smiled up at me and said, \"Fuck me, Uncle Jack. I need to cum really bad.\"\n\nAngela groaned hard with each thrust. At first I thought maybe I was still hurting her but when she hooked her legs around my ass and pulled me hard to her I realized that she was getting just enough pressure at the back end of her vagina to drive her even higher.\n\nA few minutes later, her eyes suddenly went wide and she screamed loudly as her muscles tensed. The tendons in her neck went taut and her face contorted as her orgasm crashed over her like a tsunami. Her pussy clamped spastically on my cock and she screamed again. She had a frantic look on her face urging me to keep going and I did. I watched her facial contortions and was smiling at her when she came back to the world.\n\nShe was still gasping for air as she grinned up at me and then wrapped her arms around my neck and pulled herself to me. She slid her ass off the railing and onto my cock. We both groaned as I was fully imbedded in her pussy. With her arms around my neck and her feet crossed behind my ass, she rocked her hips on and off my cock. I took some of the weight off her by holding on to her ass. Her face was tucked into my neck.\n\nI happened to glance over Angela's shoulder and through a gap in the leaves and branches of the oak tree stood Ashley at the edge of their deck with Jacob positioned right behind her fucking her in a standing doggy position. They were both naked and her huge tits hung over their railing as she was bent over nearly ninety degrees at the waist. \n\nAshley noticed that I was looking at her and she raised her hands and began clapping. Jacob was pummeling her from behind and she ricocheted off the railing on each thrust. She stopped clapping and grabbed her flopping tits to hold them in place. She yelled out, \"Way to go Jack. If you run out of pussy, come on over.\" I cringed and looked over her back to see what Jacob's reaction was. He was grinning from ear to ear as he slammed his hips against her ass. I couldn't tell whether he was fucking Ashley's pussy or ass; not that it mattered.\n\nAngela's screams had brought Frankie and Joyce out of their tits-to-face sixty nine and they were watching us when Ashley started clapping and yelling over at me from the deck next door. Neither of them could see anything through the foliage so Frankie moved over behind me and looked past me to see who was yelling. Her jaw fell when she saw Ashley's huge tits flopping over the railing. \"Holy Shit,\" was all she said.\n\nWhen Ashley saw Frankie peering past my body, she released one of her tits and waved as she said, \"Hi. He has a great cock doesn't he?\" Frankie was embarrassed at getting caught watching Ashley and Jacob fucking on the deck next door and she immediately pulled back behind me and retreated to her chair. Her face was beet red. \n\nMy cock was softening from all the distractions and Angela was getting tired and could no longer rock her pussy on and off my cock. She sighed in frustration as I set her ass back on the railing and eased my cock out of her. \"Damn. I was hoping to cum again while everyone else was distracted,\" she said.\n\nAngela turned around and angled her head to look through the foliage. Jacob was chanting his usual mantra, \"Oh God. Oh God. Oh God.\" Ashley's spread legs were the only thing keeping her from going over the railing as Jacob pounded his cock into her.\n\nAshley suddenly screamed out, \"Fuck. Yes Baby. Give it to me. Oh gawwwwddd. Yes.\" Jacobs pace slowed but now he was thrusting his hips hard against her ass. They were only about forty feet away and it was easy to read Jacobs facial contortions. He was slamming his cum into her. The four of us were standing side by side witnessing the final moments of Ashley and Jacob's sexual encounter. I hadn't cum in Angela and Frankie and Joyce were stroking my cock back up again. They were intentionally dragging my glans over Angela's ass as they stroked in a coordinated rhythm. The view of Ashley's tits flying out away from the balusters with each of Jacob's thrusts certainly aided me in recovering my erection.\n\nJacob pulled back away from Ashley and she collapsed backward to the deck. Jacob stepped in closer and Ashley sucked his cock into her mouth. She took it all. He pumped his hips several times fucking her face. She cradled her tits with her hands accepting all the cock he could give her. When he pulled back and ran his hand down over his shaft, he looked over at us. Other than my tee-shirt, we were all naked. Jacob yelled out, \"Nice Jack. Sisters? I guess I need some pointers.\" I laughed. He couldn't see the sisters stroking my cock because Angela was standing in front of me.\n\nJacob helped Ashley up from the deck and they waved and went inside. Joyce looked up at me and said, \"Is that who's cleaning your clock lately? She's pretty. Nice boobs.\" I scowled at her. She had a thoughtful look and continued, \"No. I don't think so. She wasn't here when we arrived and you were definitely having sex with someone when we arrived. Perhaps it was the neighbor on the other side?\" I scowled at her again. I was certain that she was an excellent detective.\n\nI just stared into her eyes trying hard not to give anything up. \"Just leave it alone Sherlock.\" She giggled.\n\nJoyce said, \"Come on guys; it's getting a little too public out here, let's finish him off in the bedroom.\" Frankie released my cock and grabbed the tray of drinks and half empty glasses. She yelled out to me as Joyce was dragging me by my rigid cock into the breezeway, \"I love this drink Jack. You've got to give me the recipe.\"\n\nAngela grabbed her glass and guzzled it in one swallow. She trembled from the taste of the booze and smacked her lips. \"It is good,\" she said.\n\nJoyce positioned me in the middle of my unmade bed after stripping the top sheet and blanket to the floor. She climbed up placing her knees between mine and inhaled my semi-hard cock. When Frankie and Angela walked in with refilled glasses of the blue drink, Joyce was giving me one hell of a blow job. She locked her eyes on mine and slowly pushed her lips all the way down my shaft. I could feel my cock push into her throat. I groaned and she smiled around my cock. My orgasm was swirling around again and I had two beautiful women to satisfy so I concentrated on anything but my cock as Joyce drove her lips down and back up again at a steady pace.\n\nAngela was enthralled with her mother's deep-throat skills and she crawled onto the bed to get a closer look. Joyce smiled at her daughter as she came into her peripheral view but she never looked away from my eyes.\n\nFrankie had finished another glass of the blue drink and suddenly realized that she was buzzed. She slurred her words when she said, \"Jeesuth Joyth. Give the guy a break. I want a go at him too you know.\"\n\nJoyce giggled around my cock and pulled back. Her lips locked on the ridge and she gave me several strokes with both hands before sitting up. She aimed my cock at Frankie who climbed on the bed and took my cock from Joyce. She stroked it a few times and then said, \"Fuck me like your neighbors were.\" She moved on hands and knees so her feet hung off the side of the bed with her ass wagging side to side like a cat in heat. I maneuvered myself off the bed and moved my raging hard cock between Frankie's thighs and dragged my glans through her sex. She flinched and yelped when my glans touched her clitoris. \"Fuck me Jack. God damn it.\"\n\nI had teased her enough so I guided my cock to her pussy and eased the glans inside. There was little resistance; she was soaking wet. She pushed back on me and I pushed my shaft most of the way inside before slowing to find her cervix. I don't know if it was the position or her state of arousal or what but I didn't find it. I pushed my balls right up to her clitoris without a single indication of discomfort. When my balls pressed against her, she pushed back to get every inch of me. She rocked forward to pull off my cock and then rocked back on again. She groaned, \"Oh my fucking gawwd, you have a big cock. I'm going to have to visit more often.\"\n\nI started fucking her and Frankie groaned again, \"Fuck me Jack. Make me cum. Oh Jesus. This is incredible.\" As I ramped up my pace, I noticed that I could watch Frankie's big tits swinging forward and back in rhythm with my thrusts in a mirror mounted on the wall across the bed. After several minutes,my cock surged harder and I knew I wasn't going to last much longer. Frankie joined the action as she slammed her ass back at me over and over again.\n\nFrankie yelled out, \"Oh my God, Jack. You're getting harder. Cum in me.\" She was looking back at me with a pleading look and then her face contorted. \"Jesus, I'm cummmiinnnggggg. Fuuuuucckkkkk.\" She collapsed down on her elbows and then to her face as her pussy clenched firmly on my cock. She fell forward and came off my cock. The moment that my glans came out, it was immediately followed by a powerful spray of fluid.\n\nAnna 'squirted' occasionally. She loved the sensation but hated the cleanup afterward. She loved to have sex on a beach or anywhere outside really because she got all of the sensation and none of the cleanup.\n\nFrankie let out a long and loud scream as liquid exploded in a tight stream from her pussy, splashing off me spraying Angela to my left and Joyce to my right. They both moved away quickly. I stayed where I was because I didn't want her squirt to soak the sentimental items I had displayed on Anna's bureau behind me. I leaned down and placed my hand to deflect the spray down to the floor. Her first stream ended and another, less powerful, stream started. Frankie collapsed her hips down to the bed and the bedding took the brunt of her remaining squirt. She didn't move other than to heave oxygen into her lungs.\n\nAngela was spitting out whatever she got in her mouth as she stood there with her arms out to her side looking down at the clear liquid clinging to her nipples. \"Jesus Christ. What the fuck was that? Did she just piss on us?\"\n\nJoyce laughed and shook her head. \"No Honey. She's didn't piss on us. She is 'squirting'. It's like a female ejaculation.\"\n\nI'd been right on the edge of my orgasm when Frankie started her 'squirt'. My muscles had clenched and then just held there. I was gasping for oxygen but my orgasm stayed right there like a huge wave building higher and higher and then it was gone. The wave never crested. I grabbed my cock and started jerking myself off to get it back. Fuck, I wanted to cum so bad. While the thought of satisfying three beautiful women was a dream come true at the beginning, it turned into a daunting task.\n\nJoyce couldn't believe her luck. She moved quickly to join Frankie on the bed as she maneuvered onto her back with her legs dangling over the edge. She yelled out, \"Fuck Jack. Don't waste it. Give me that thing.\" She spread her legs wide and lifted them in the air as she spread her labia with her fingers. She was dripping wet.\n\nI moved quickly between Joyce's thighs and lifted her legs up so her heels were on my shoulders. I leaned down and pushed my cock into her pussy without hesitation. I was conscious of her cervix but it didn't become an issue because I stood so much higher than the mattress and I couldn't get all of my cock in her anyway. She screamed as I plunged into her and began driving my cock in and out.\n\nAngela crawled up on the bed beside her mother and decided that she wanted to see what Frankie's squirt tasted like. She bent her head over her mother's tits and sucked her closest nipple between her lips. It occurred to me later that Angela could have more easily tasted Frankie's squirt by sucking on her own nipple.\n\nMy orgasm was building again and Joyce felt the renewed hardness. She flailed her head from side to side as she tried to drive her hips upward to meet my down strokes. Without warning cum launched up my shaft into Joyce's pussy. I yelled out, \"Oh my gaaawwwddd.\"\n\nJoyce screamed as the first powerful salvo of cum exploded into her. She screamed again, \"You're gonna rip me in half. Fuck.\" She stopped and raised her head off the bed to look at my cock flailing in and out of her pussy. Her face contorted into a mask of what looked like incredible pain and then she slammed her hips upward and yelled, \"Oh God. I'm cummmminnnnggggg.\" She slammed her head back down into the bed and launched her hips upward again driving her pussy hard onto my spewing cock.\n\nFrankie, who was still lying on her stomach, was watching Joyce as she thrashed through her orgasm. She glanced up at Angela, who had come up on her knees beside Joyce. She had an awestruck look on her face. Frankie muttered, \"Holy shit. He's killing her.\"\n\nIt didn't turn out to be that bad, but Joyce laid there unmoving for more than a half-hour with Angela hovering above, prodding her mother for some kind of response. She got nothing except for her chest heaves as she gasped for air. I had collapsed onto the bed between Frankie and Joyce gasping for air too. Frankie cuddled over to me and laid her head on my shoulder. I put my arm around her shoulders and held her to me with her lower tit pressed against my ribs and the upper one resting on my chest.\n\nWhen Joyce returned to us, she cuddled up to me on the other side. She kissed me on the cheek and said, \"Holy shit. I've never had a more powerful orgasm in my life.\"\n\nFrankie giggled and said, \"Fuck yea, I heard that.\"\n\nAngela was sitting on the bed beside Joyce fondling my flaccid cock in hopes of getting it back up again. She really wanted another orgasm and she was persistent. I let her go. There was little chance she would be successful. My balls ached. I was spent.\n\nAfter ten minutes, Angela gave up with a huff. I rolled Frankie and Joyce away from me and motioned for Angela to come up. When she was close enough to get my hands on her, I maneuvered her to sit down on my face. She grinned down at me when she understood what I was doing.\n\nShe sat down on my upper chest facing toward my head and then scooched forward until my tongue found her clitoris. Her hips surged forward as her head snapped back. The air in her lungs exploded from her as she groaned hard. I pushed her ass further onto my face and I drilled my tongue into her pussy. She groaned out, \"Oh God.\"\n\nI tongue fucked Angela's pussy and flicked my tongue across her clitoris until she groaned out, \"Yes. Here it comes. Oh... Oh... Oh. Shiiiiitttttt. I'm cuuummminnnggggg.\" Her hips flailed up and down on my face crushing my nose. I had to lift her weight off my face but I continued to drive my tongue into her pussy which was pushing me out with her clenches. I drilled it right back in until she settled down.\n\nAngela looked down between her thighs and grinned at me. Her twenty year old large tits looked delicious hanging over my face like that. She notice where I was looking and she pushed her tits together and pinched her nipples. She crawled up over my head and sat down with her fingers buried in her sex.\n\nFrankie pushed herself up and got to the floor. She said, \"I hate to, but I have to go. Call me when you want to check on Jack again. Okay? He seems to be doing fine, wouldn't you say?\" \n\nJoyce giggled, \"He seems to be okay. I think we'll need to check back though; at least a few more times.\" Frankie giggled and left the room headed for the deck to collect her clothes. When she came back, she was dressed the same as when she arrived. Her hair and makeup was disheveled. Frankie had collected the rest of the clothes too and dropped everything on the bed and retreated to the bathroom to \"fix\" her face and hair.\n\nWhen Frankie returned, she was gorgeous and my heart seized again as my mind flashed back to Anna. Frankie came around the bed and pulled me up to sit on the edge of the bed and leaned in and kissed me passionately. I kissed her back in kind. She said, \"Thank you Jack. I love you.\"\n\n\"I love you too Frankie. She pecked me on the lips and pulled back. She said, \"Later guys,\" as she left the room with a flurry of air-kisses.\n\nJoyce crawled up behind me and positioned her legs on either side of me and wrapped her arms over my shoulders and ran her fingers through my chest hair as she kissed my neck. She dragged her big tits around on my back and whispered in my ear, \"She really does you know.\"\n\n\"She really does what?\" I asked as I leaned back against her tits.\n\n\"She really does love you. She always has. Yes, it was puppy love at first but when you left she was seventeen and she was crushed.\"\n\nAngela was tiring of this conversation and said, \"Well, if there's not going to be anymore sex, I'm going swimming.\" She grabbed her bikini top and pulled it on. She came around in front of me and asked me to help. She held the material over her breasts and I tied it in the back. Then she turned around and bent down and kissed me and said, \"Well, I love you too Uncle Jack.\" She pulled her bottoms on that she had worn under her short shorts and twitched her ass around in my face and said, \"Do you have a towel I can use.\" I just pointed to the bathroom and she was gone.",
        "Joyce leaned back and started massaging my shoulders. I turned back toward her and said, \"What's with Angela? She's obsessed with sex. You'd think she had been taken over by a teenage boy or something.\"\n\nJoyce giggled and said, \"I know. She's crazed. I walked in on her masturbating with a stuffed animal a few years ago. I didn't think anything of it. It's natural. I'm sure you masturbated a few times when you were a teenager.\"\n\n\"Are you kidding? I swear that I set Guinness Book records,\" I said.\n\nJoyce giggled and continued, \"I can picture that actually, now that I've finally seen your cock. I used to fanaticize that Robert was you when we'd have sex at least until he put his dick in me. He was a terrible fuck.\" She paused a moment and continued, \"But I'm getting off on a tangent. Angela and I had a talk about sex. It was a painful talk. She just rolled her eyes at me professing to know everything there was to know about sex, just like every teenager. I gave her my battery powered 'friend' to try and I never got it back. I'd come awake in the middle of the night to the high pitched whine of that dildo.\" She giggled with a memory and continued, \"Robert would wake up too and ask me what the fuck that noise was. What a brainless idiot he was. You know he hasn't seen or spoken to Angela since she graduated from high school two years ago. She never asks about him. He's remarried now to that twenty-five year old bimbo of a secretary. I hope she's enjoying his passionless love making and his tiny dick.\"\n\nShe was really digging her fingers into my shoulders as her obvious anger rose. I rolled my shoulders away from her and she stopped. \"Sorry Jack. I hate thinking about him as much as you hate thinking about Anna.\" She resumed her massage at a much softer level.\n\n\"I love thinking about Anna. Every day I'll see something that brings back fond memories,\" I said.\n\nJoyce paused to see if I would continue and then said, \"I know. But the bad memory is always there isn't it?\"\n\nTears formed in my eyes. I fought them off but they broke free and ran down my cheek to my chin. I turned back to the front so she wouldn't see. \"Can we talk about something else? How are your parents?\"\n\n\"Like you care Jack? Come on. I know you didn't get along with either of them. You correctly assessed their character on that first night at the dinner table when Dad sent Frankie to her room because she had makeup on.\" Joyce giggled at that memory. \"Frankie's never forgot that or the kind words you gave her when you left. And Mom? I was dumbstruck when she accused you of being responsible for Anna's death.\"\n\n\"She was distraught. She didn't mean it,\" I replied as another tear broke free and followed the same already blazed trail to me chin. Her hands were massaging my oblique muscles and I could feel her nipples drag lightly along my back.\n\n\"Bullshit Jack. She still talks about that all these years later.\"\n\nI needed to change the subject. \"How is your job going? If the detective work you displayed today is any indication, you must be the best detective on the force.\"\n\nShe giggled and reached under my arms and tweaked my nipples. \"I have the best closure rate. I really enjoy the work but not the hours. I wish I had been able to spend more time with Angela. She really is a good girl. I wish she would find a good man but she gravitates to the self absorbed drones and Christ, there are a lot of those out there both her age and mine.\"\n\nTo keep the conversation away from Anna I said, \"I see that Frankie has been promoted to Director of Product Development at our old company. She says it's still in the same building we were in. She called me when she took the job there. She remembered that Anna had created an archive of plans for new software applications that we hadn't started to devel...\" I stopped in mid-word. I was doing just what I didn't want to do; reminiscing about Anna. Another tear broke free and joined the several already accumulating on my chin. I could feel them about to go and I raised my hand to catch it, but I was too late and it splashed on Joyce's fingers as she had moved her hands around front massaging my abdominals. I was thankful that she didn't say anything.\n\nJoyce picked up the thread and said, \"So Frankie has been getting ideas for software applications from Anna's archives? No wonder she's risen to the top. Anna was a genius.\"\n\nI replied, \"Thomas Edison once said that 'genius is one percent inspiration and ninety-nine percent perspiration'. Anna provided the inspiration and Frankie provides the perspiration. Good for her. She is quite brilliant in her own right. It's good for me too. I get rather generous royalties from the company for every new application that comes from Anna's archive.\"\n\nWe both sat there on the bed, silent for several moments. Joyce's hands had worked lower on my abs and were slowly working their way toward what was apparently her goal all along. The lower her hands went, the more firmly she pressed her tits against my back. I could feel a tingle in my dick as it moved off my left thigh toward her encroaching hands. Joyce kissed the side of my neck and her blonde hair draped down my chest. She completed the kiss and rested her chin on my shoulder. I knew she was looking down to see if she was making any headway. She was.\n\nI turned my head to hers and kissed her on the forehead. \"Jesus Joyce. No wonder Angela is a sex maniac. The apple doesn't fall far from the tree.\"\n\nJoyce giggled and abandoned all pretence as she reached for her goal and wrapped her fingers around my slowly hardening cock. \"I can't help it. It's been a long time. I had basically forgotten all about sex and men. I buried myself in my work. When Frankie called to set up a meeting to discuss what to do with you, I found myself going through more batteries than Angela. I was practically rubbing my pussy on the table leg at the restaurant where she concocted this plan.\"\n\nI chuckled and continued the thread, \"Don't be so hard on yourself. Frankie recognized that you were burying yourself in your work just like I was burying myself out here in the boonies. The funny thing is that when I resolved to leave everything behind to move here, the one thing I wanted to escape from most was the one thing I brought with me; memories. It occurs to me that you can't have good memories without bad ones.\" I don't know if she heard a word I said as she was jerking me off again. I was surprised that my cock was actually cooperating.\n\nJoyce kissed me on the neck again and breathed into my ear, \"In commiseration for being a couple of misfits, can we go again?\" I laughed and turned around and pushed her back on the bed. She went willingly without even releasing my cock. I pushed her to the middle of the bed as she walked her ass and shoulder blades back to help.\n\nI moved my knees between her spread and raised knees and bent down and kissed her passionately. She emitted a moan as our kiss went on for several moments. When we broke our embrace, I kissed my way down to her chin and then her neck. She knew the progression and she pressed her arms tight to her side to push her huge tits together in anticipation of my attack on her nipples. She had both hands on my cock pulling me toward her sex. I offered only a teasing amount of resistance. \n\nShe moaned hard when I sucked an erect nipple to my lips. Back and forth I went several times before I succumbed to her insistent pull. I pulled back into a kneeling position and put my hands under her thighs and lifted and dragged her to me. She moaned, \"Oh my gawwwdd. Yes. Oh fuck. Yes.\" Her ass was off the bed resting on my knees as she guided my cock to her sex and then released it and spread her labia.\n\nI didn't move forward for several moments and she took the initiative by using her legs to pull her pussy onto my cock. We both groaned in stereo as my cock sank deeper. Her thighs were on mine and she wrapped her ankles behind my back and pulled herself on as hard as she could. She flinched and I knew she had hit bottom. She made a quick adjustment and we were fucking each other in perfect harmony when Angela hurried into the bedroom.\n\nShe was about to say something but stopped in mid-sentence when she saw what we were doing. I looked over at her in her soaking wet bikini. She had a look on her face like she was scolding a child. Her hands went to her hips. Then she suddenly turned around and yelled back to the living room, \"You probably shouldn't come in here Divi. It looks like they're busy.\"\n\nJoyce didn't care if the Pope was standing by the bed. She used her legs to pull herself on and off my cock. She gritted her teeth as she pulled me in too deep. I resumed my fucking motion at Joyce's insistence. I noticed that Angela had move to the side so she was no longer blocking Divi's view from the living room. As expected, Divi moved into the bedroom and stood beside Angela.\n\nThank God, Divi acted like she had never seen anything like this before and said, \"Wow. What a big dick he has. I had no idea.\" A fleeting thought blew through my mind, 'Don't overplay your part Divi'.\n\nAngela stepped closer to the bed and said, \"It's the biggest one I've ever seen.\"\n\nJoyce was slamming herself on and off my cock to compensate for my half hearted effort. She said, \"Alright girls. You've seen enough. Go back outside.\"\n\nAngela huffed and puffed and harrumphed and leaned closer and whispered through gritted teeth, \"When do I get mine?\" Then she turned to see if Divi had heard what she'd said but Divi was already gone. Angela stamped her feet on the carpet like a petulant child and stormed out.\n\nI heard the sliding glass door slam shut and we got back to business. My orgasm, which was closing in when Angela and Divi arrived, was gone now and Joyce was frantically trying to get hers back. We went through the motions for another several minutes but the passion we had when we started was irretrievably interrupted. \"God damn it,\" she said as she continued. She was getting tired and my cock was softening in spite of the sensation of her pussy sliding on and off. My cock finally went soft enough to fall from her pussy. She yelled out, \"Fuck. I was so close.\" I bent down and kissed her. She returned the kiss trying hard to regain the passion.\n\nWe showered together as I thought, 'This is where I left off with Priya this morning.' Joyce was still fuming when she stepped out on the deck dressed in the clothes she arrived in. Angela knew immediately that she was in a lot of trouble. Angela looked over at me to see if I was angry too. I wasn't. I noticed that Angela had a glass of the blue drink in her hand and so did Divi. Both of their eyes seemed glazed over. \n\nJoyce announced that they had to go and directed Angela to get dressed. After all the sex, I had to piss like a racehorse. I excused myself and went to the bathroom. As I was walking away I heard Joyce begin her interrogation of Divi. If I didn't have to piss so badly, I would have cut Joyce off at the pass. Poor Divi didn't stand a chance.\n\nWith her mother distracted by Divi, Angela saw her opportunity. I was standing at the toilet; back to the door, shaking my dick, when Angela barged in. She grabbed up a wad of toilet paper and daubed the tip of my dick and then reached into the shower and turned the water on. She had her bikini top in her hand and set it down on the sink top and went down to her knees as she said, \"We don't have much time.\" \n\nAngela turned me around and grabbed my flaccid cock from my hand and pushed her lips over my glans and started jerking me off as I sat down on the toilet seat. She was pulling an incredible suction on my knob and both hands worked in unison to get me back up again. To my surprise, my cock was responding. She grinned up at me; obviously pleased with herself. She pulled her lips back and kissed her way down the underside of my shaft to my balls, sucked each one into her mouth and licked her way back up to the glans. Her eyes grinned at me the whole time. \n\nBefore pushing her lips over the velvety crown again, she said, \"Fuck my face, Uncle Jack.\" She pushed back on again and I began rocking forward and back as she held her position with her hands on my thighs to stop me if I pushed in too far. I put my hands lightly on the back of her head and ramped up my pace. As I pushed in deeper, Angela opened her lips wide and the resultant sounds of \"AAWWK... AWWK... AWWWK.\" filled the room. I pushed in deeper until she pushed back with her hands. Tears streamed from her eyes as she stared up at me. I was pummeling her mouth and my orgasm crushed me. My knees buckled and I steadied myself against her. My eyes began examining the ceiling as I pulsed my hips into her face with each cum-shot. Cum flooded her mouth and she gagged hard and pulled off as cum pushed out and drooled to her chin and then to her tits. She coughed and swallowed and coughed some more to clear her throat. I sat down on the toilet to offer any aid that I could. I knew there was nothing I could do except offer support.\n\nTears streamed down her face and joined the cum on her chin and her ample cleavage below. When she stopped coughing and swallowing and collecting gobs of saliva that accumulated around her mouth, she grinned at me and said, \"Fuck, Uncle Jack. That was a lot of cum.\"\n\nJoyce yelled from the living room, \"Angela. We need to go. What's taking so long?\" I heard her walking through the kitchen toward the bathroom so I pushed myself off the toilet and stuffed my cum an saliva covered dick back in my shorts before opening the other door leading to my bedroom and closed it behind me.\n\nAngela didn't even have time to strip off her bikini bottom before stepping into the shower just as the door flew open. Angela was yelling, \"Jesus this water is cold.\" Apparently, she hadn't bothered to make any adjustments for water temperature. Her only thought was to use the shower sounds as a ruse to cover what she was really doing.\n\nJoyce yelled, \"Come on Angela. Hurry up.\" I was concerned for Divi so I hurried into the living room to find her sitting there. She grinned up at me when she saw me and said, \"How did I do? I hope I didn't give you away.\"\n\nI ignored her question and blurted out, \"What did Joyce want to know? What did you tell her?\"\n\nHer smile disappeared at my obvious angst. She thought for a moment and said, \"I told her my name and that I live next door.\" She shrugged her shoulders. \"That's about it. She seems nice. What's up?\"\n\n\"That was it?\" I said.\n\n\"She asked about my parents. I told her my dad's in India most of the time and I live here with my mom.\" She thought for another few moments and continued, \"She told me that I was very pretty and asked if I look like my mom? I told her most people think we're sisters.\" Her smile morphed quickly to a frown when my face dropped into my hands. \"What? Did I say something wrong?\"\n\n\"No Divi. You did fine.\" I bent down and kissed her on the forehead and smiled at her.\n\nShe quickly moved forward on the sofa and kissed me hard on the lips. \"Are you going to be around tomorrow? My friends are coming over to swim and boat and big mouth Joanna has them all worked up. They want to meet you. Just say hello and chat for a minute and we'll be on our way.\"\n\nI hardly heard a single word as my mind worked on Joyce's interrogation of Divi. I was certain that she had figured out who was 'cleaning my clock'. I wanted to keep Priya as far away from Detective Joyce as possible. I nodded to Divi and went back in the kitchen as Angela and Joyce came out of the bathroom. They both kissed me with way more passion than was appropriate for family but that was minor compared to everything that had happened. \n\nI pulled my shorts on and walked Joyce and Angela out to their car. Joyce seemed distracted and kept looking at the wall of arborvitae between my house and Priya's. Then she got in the car. I prayed that she wasn't going to say something about Priya because I knew she'd read my face and I be busted. I kissed Joyce through the car window again and then walked around and gave Angela another kiss too. I waved as they headed back to the main road. I stood there in the driveway thinking, 'Holy shit, when it rains it pours. Who would have ever thought this could happen.'\n\nI turned to head back to the house and Ashley came running around her car. She was actually wearing clothes. She was dressed in a one piece top and skort that barely covered her gorgeous ass. Three buttons were undone showing her black bra and a ton of cleavage. My cock twitched. To top it off, she wore five inch ankle-strap stilettos. She stumbled on the short strip of grass between my driveway and theirs and her tits went everywhere. She must be heading to work at the strip-joint I guessed. She ran right into my arms and nearly knocked me down. Her soft breasts cushioned the blow. She was bubbling with excitement as she loudly said, \"Fuck Jack. Where do you find three sisters that look like that up here in the woods? Holy shit. They were gorgeous. Jesus, you're my hero. Jacob hasn't stopped talking about you and your three babes. He didn't think you had it in you.\"\n\nShe giggled and threw her arms out and said, \"What am I talking about? You had it in them.\" She laughed hard at her own joke. I smiled at her but I didn't know what to say to her. She noted my reluctance to talk about this and she bent back and threw out her hands again and said, \"Silly me. Of course a gentleman never talks about such things.\" She elbowed me and winked.\n\n\"Oh; by the way. Jacob really does want you to come over the next time we're up.\" She glanced around and put her right hand to the side of her mouth as she took a step closer. \"I think he wants a m\u00e9nage a trois, if you know what I mean.\" She winked again and shook her boobs from side to side. She was clearly amused by the opportunity to use a French term. I wondered if she even knew what it meant. She pushed her tits against my chest and kissed me firmly on the lips as she squeezed my mostly flaccid cock. \"Jacob had an emergency he had to go back for. I have to go too or I'd be dragging my pussy around on your bedroom carpet tonight. See ya Casanova.\" She threw me an air-kiss and waved over her shoulder as she ran back to her car, nearly turning her ankle as her left stiletto sank deep in the grass.\n\nI stood there thinking again, 'When it rains it pours.' I waved as she drove off. I stood there watching the cloud of dust drifting into the woods pushed by a slight breeze from the north. I was heading back to my front door when I noticed Divi standing behind the screen door. I hadn't seen her there and obviously neither had Ashley. She pushed the screen door open and I walked into the breezeway letting it slam behind me.\n\nDivi said, \"She's very pretty but she's seems kind of slutty don't you think?\"\n\n\"Actually, she is kind of slutty,\" I said.\n\n\"Have you had sex with her?\"\n\n\"Divi, that is none of your business and I don't appreciate you asking such a question.\"\n\nDivi put her hands on her hips and cocked them to the side as she said, \"So, you have had sex with her.\"\n\nI stood staring at her for a moment. My anger was growing and I said, \"Divi. I think you should go home now. I'll see you and your friends tomorrow. Okay? We'll go for a boat ride.\" She stared back at me for a long moment and then turned in a huff and stomped across my deck and disappeared around the corner. I went back in the house and pulled a beer from the refrigerator and collapsed from exhaustion on the loveseat. I turned on the ballgame and put my bare feet up on the coffee table. I made it about a half inning before I fell asleep with the beer still in my hand.\n\nI was startled awake. I had no idea how long I had been out. My beer was warm so it had been a while. I'd been snoring. I could feel that my throat was a little sore. Before I could fully wake, I felt a pair of hands rest on my left knee and slowly move up my thigh. My first conscious thought was that it was Priya, who had returned to collect what she had left behind earlier. The hands slipped under my shorts and with eyes still closed I let out a moan as fingers wrapped firmly around my rapidly growing cock. The left leg of my shorts was pulled back and I felt the air on my fully erect cock. When a hand began stroking my shaft from ridge to balls and another hand lifted my ball-sack and fumbled with my testicles, I moaned again.",
        "When I heard a giggle from the sofa adjacent to the loveseat, my eyes flashed open and immediately looked to the spot the giggle had come from. It was Joanna sitting right on the edge of the sofa intently watching Divi on her knees to the left of my legs still propped on the coffee table. Divi was grinning at me as I looked from Joanna to her. Both girls were wearing their bikinis. Joanna was fondling her right nipple under the bikini material with her left hand as her right hand was pushed down in her bikini bottom, feverishly strumming in her pussy. She was so wet I could hear the squishing noise.\n\nJoanna pulled her gaze from my erect cock and looked up at me. She grinned and said, \"Divi said I could try intercourse today. I was too scared the other day.\" She giggled again and continued, \"I'm still a little scared.\" I could see she was trembling and her voice warbled as she spoke. I looked down at Divi with a scolding look. I was not pleased at all that Divi was doling my cock out to her friends. She looked up at me with a contrite look on her face and shrugged her shoulders but never slowed her pace on my cock.\n\nDivi released my balls and motioned for Joanna to come closer. I dropped my feet off the coffee table and Joanna scooted up between my knees. She just continued to watch Divi jerking me off. The sensation was amazing. Divi looked at Joanna and said, \"Suck on it like last time. Take as much as you can.\" Joanna had heard all that last time and she frowned at Divi's obvious sense of superiority. She did what Divi told her though. She got up off her feet and moved closer to me. While Divi continued jerking me off, Joanna pushed her lips to my glans and kissed it and then ran her tongue around the ridge and pulled back.\n\n\"I can't get over how velvety soft the head is.\" Divi smiled at Joanna but said nothing. Joanna went back down and pushed her lips over the crown. Divi watched closely. Joanna slowly pushed her lips down my shaft. She had taken note of how far Divi had taken it before and she was trying hard to get to the same spot. She tried three times but came back up gagging and coughing each time. She was persistent but she gave up her depth goal and proceeded to bob her head up and down my shaft as far as she was comfortable with. I groaned hard and Joanna grinned at Divi. \n\nDivi took control again and said to Joanna, \"That's enough. He's hard enough.\" I smiled to myself. I had been hard enough before I even opened my eyes. Divi instructed Joanna to take off her bikini and get her legs outside of mine and move up into my lap. Joanna and I made eye contact and I rolled my eyes. Joanna giggled but did as instructed. She was really trembling now.\n\nWhen Joanna sat down with my shaft rising nearly to her tits as it slapped against her stomach, I said, \"Joanna? Is this your first time?\" She dropped her eye contact and gently nodded like she was embarrassed about it. \"You don't have to do this. It's okay if you don't. This experience should be special for you. Are you sure?\"\n\nJoanna hesitated for several moments and then looked me right in the eye and said, \"I don't want to be a virgin anymore. The other girls make fun of me.\" I looked at Divi, who had released my cock. She suddenly realized that I was assuming that she was one of the girls mocking Joanna for not having had sex before. Her eyes went wide and she shook her head and pointed to herself indicating that she wasn't one of those girls. Joanna watched my eyes scolding Divi and she confirmed that Divi was only trying to help. \"Divi is going to be my witness. I'm pretty sure a lot of those girls only say they've had sex but are lying through their teeth. So naturally they'll claim I'm lying too and the teasing will be even worse.\"\n\nDivi had pulled her bikini bottom crotch to the side and was diddling herself. She was already breathing hard. She was getting anxious from the delay and she said, \"Okay Joanna. Let's get on with it.\" Joanna followed Divi's directions to a tee as Joanna moved one leg up and planted her foot beside my right hip and lifted herself up high enough to push my raging hard cock to her sex. She got the position wrong twice and flinched hard as she missed the spot. I reached down and took my cock away from her and dragged my cock along her pussy to the correct spot and nodded to her. She grinned and eased herself onto my glans. I had no idea if her hymen was intact or not. With the proliferation of dildos in this group, there was no way to know. I was ready either way. \n\nI watched her face while Divi watched my shaft pushing inside Joanna. She flinched as her sex stretched to take my girth. Her hymen didn't turn out to be a problem. I was thankful for that. I'd never taken a girl's cherry before. She groaned hard and loud as she slowly lowered herself to about half of my cock and then pulled herself back up again. When she got back to the safety of my glans, she grinned down at me and blew the air from her lungs that she had been holding. Dive told her to do the same thing again and Joanna did as instructed. As she pushed down again, I noted that she was holding her breath again. I said, \"Breathe Joanna.\" She smiled and began breathing again. \n\nJoanna closed her eyes and lifted her hands to her tiny tits and fondled her long nipples. She groaned as she sank lower this time. Her breathing had become ragged as she pulled back up my shaft again. She smiled at Divi and then at me as she pushed down again. This time she ran aground on her cervix and she flinched, stopped and pulled back to get away from the pain. I said, \"That's your cervix. It's the end of your vagina. Your baby pouch, your womb is on the other side.\" Joanna half-heartedly smiled and she pulled back up to my glans again.\n\nShe dropped to just above that spot three more times and announced, \"This is starting to feel pretty good,\" as she smiled at Divi, who was just rolling into a finger induced orgasm and she was paying no attention to Joanna. Joanna completed a half-dozen more cycles and then said, \"I think I'm done.\" She lifted herself up as far as she could on her knees but she couldn't get off. She got a little anxious as she had forgotten how she got on it in the first place. I reached down and picked her up off my cock with my hands at her waist. She grabbed my wrists and pushed herself off the glans and sat back down on my thighs. My cock had responded to Joanna's incredibly tight pussy and snapped back to my stomach when it came free.\n\nJoanna scooched back down my thighs dangling her legs until her feet hit the floor. She stood up and a hand went immediately to her pussy. She giggled as she felt that her pussy was stretched wide open. She said, \"Fuck, I hope my pussy goes back to normal again.\" I grinned at her and nodded.\n\nDivi was aware that Joanna was done and that my cock was dancing off my stomach but she had induced another orgasm and she was gasping for air while her body pulsed hard. She collapsed backward to the floor in slow motion. Her knees lifted as she continued to drill her fingers in her pussy. I watched her go as she thrust her hips up as she pushed her fingers in.\n\nJoanna was standing there at my feet strumming her own pussy as she realized that Divi was going for a third. She hadn't had one yet and she moved toward Divi and Knelt down with her knees on either side of her head. Divi felt her presence and she lifted her head into Joanna sex and drilled her tongue inside. Joanna groaned and then bent forward over Divi's thrashing body. She pulled Divi's bikini bottom down and to her knees and buried her face in her pussy pushing her fingers aside. Divi screamed and yelled, \"Oh my God. Yes.\" I heard Joanna groan from Divi's attack but she never broke stride. \n\nMy cock was a steel rod watching these two sexy girls engaged in a sixty-nine. It was clear that they had a lot of experience. I curled my fingers around my cock and began jerking myself off. For the moment, neither of them even knew I was there. I didn't really want to cum with my hand; not when there were two sexy babes right there, so I slow stroked it to keep it hard. I didn't really need any help with that though. Just the view from my loveseat was enough.\n\nJoanna's face suddenly came out of Divi's sex and she screamed hard as her hips pulsed forward and back with her first orgasm. After the first few pulses, she dropped her face back to Divi's sex but she didn't do anything but groan constantly as her orgasm coursed through her. Divi kept right at it until Joanna was done. Then Divi lifted her hips up to prod Joanna to get her off too. \n\nJoanna reacted to the prodding and flicked her tongue on Divi's clitoris and then drove her tongue deep again. Two minutes later, Divi groaned hard into Joanna's sex as her hips pulsed hard through her third orgasm. When she was done, her knees dropped to the floor. Joanna rolled her hips off Divi's face and she laid there beside her with her head resting on Divi's thigh watching her pussy clenching on air.\n\nFrom outside I heard Priya yelling, \"Divi. Where are you? Are you bothering Jack?\" Divi shot up off the floor and pulled her bikini bottom up. She motioned for Joanna to get dressed and she stepped to the slider.\n\nShe yelled back, \"Yes, Mom. We're watching Jack's big screen TV. It's amazing.\" I was amazed at how easily Divi lied to her mother. She looked back at me and smiled and whispered, \"Come on Jack. Back me up.\"\n\nJoanna was pulling her bikini bottom up when I got off the loveseat and went to the open window. \"Priya; they're here watching TV with me. They're okay.\" Before I even realized what I was saying; I said, \"Come on over and join us if you want.\" I cringed as a horrified look flashed across Divi's face.\n\nFirst of all: The TV wasn't even on. I grabbed for the remote and pressed the power button. It takes a few moments before the screen brightens. Second: What the fuck would we be watching that would entertain me and two eighteen year old girls? Third: The room reeked of sex, even with the window open. Fourth: The crotches of both girls bikinis were wet from their orgasms. Fifth: My cock was standing above my crotch at full staff. I prayed that she would decline.\n\nShe didn't. I heard her sandals hit the bottom rung of my stairs up to my deck just as the TV screen came to life. I flicked quickly through cable channels desperately searching for a logical program. I stood up and pulled the legs of my shorts down to cover my erection but didn't have time to minimize the tent before Priya walked to my sliding glass door and pulled the screen back. \n\nDivi and Joanna were sitting on the sofa, adjacent to my loveseat, nonchalantly looking at the TV. The cable box was tuned to, of all things, a bass fishing show when I stopped flicking through the channels while I got my erection back in my shorts. The girls had their hands in their laps covering their wet crotches. I crossed my right leg over my left and awkwardly placed my foot on the tent.\n\nPriya came in and stood behind the sofa looking at the TV. She said, \"Wow. That is huge. You're watching fishing? Seriously.\"\n\nI fumbled with an explanation, \"Umm...Well, I was just changing the channel to show the girls some of the UHD 4K channels.\" I was pleased with my quick thinking except for the \"Umm...\" part. Divi looked over at me with a facial expression that basically said, 'Nice Job Jack. You really fucked that up'. Joanna was petrified and never looked away from the TV.\n\nPriya was silent for a few moments looking at the TV and then said, \"Is this channel UHD?\" I looked at the TV and knew immediately that it wasn't. I said, \"Umm... Yes. I think it is.\"\n\nPriya said, \"I think you girls should go back home and watch fishing on your own TV.\" Both girls launched themselves off the sofa and headed quickly for the slider. They both awkwardly held their hands over their crotches as they went past Priya. They giggled to each other as they pounded down the stairs. Through the open window, I heard Divi say as she ran across my lawn, \"Jack's in trouble now.\"\n\nPriya came around the sofa and sat down on the edge leaning toward me. \"You can take your foot off your cock now. It looks kind of painful.\" I lifted my foot and put it on the floor. My cock had softened considerably but it was still tenting my shorts. \"Jack Sweetie? Please don't lie to me about matters concerning my daughter. Okay?\" I stared down at the area rug under the coffee table examining the pattern. I hadn't been chastised like this in a long time and I knew I deserved it.\n\nI knew I couldn't justify myself. I had acted as irresponsibly as the teenage girls they were. I knew better but I didn't want Divi to get in trouble. I told Priya the whole truth about what the girls were here for. I told her that when I felt hands on my flaccid cock, I was certain that it was her coming back to complete our morning tryst.\n\nPriya smiled at that and dropped herself off the sofa to her knees and moved up between my legs. She reached up and pulled my shorts over my semi-erection. I lifted my hips and she pulled my shorts down over my feet and threw them on the coffee table. She cradled my cock in her hand and flicked her tongue up and down the shaft. She giggled when it rose back to full size.\n\nPriya didn't waste a second as she pushed her lips over my crown and lashed the ridge with her tongue. My head dropped back against the headrest. I groaned out, \"Oh my God. You are good.\" She giggled again and pushed her lips all the way to the base. I groaned again as my glans pushed into her throat. She stopped right there flicking her tongue at the top of my ball-sack until she needed to breathe. She pulled back up and took a deep breath before going right back down again.\n\nAfter not getting off with either Joanna or Divi, I was savoring the intensity of my approaching orgasm and Priya smiled around my erection as she could feel the hardening that preceded it. My toes curled and my hips thrust up taking Priya's head with them. I yelled, \"Fuck. I'm cumming. Jesus.\"\n\nPriya pulled back to my glans and clamped her lips around the ridge and readied for the onslaught of cum that she had come to expect from me. Jizz burst up my shaft into her mouth. She swallowed as she needed to and when I was done launching eight or so strong streams of cum; she eased off my glans and said, \"Holy Shit Jack. You'd think you haven't cum in weeks and I happen to know firsthand that that's not true. How many times did you get off today after I left?\"\n\nWithout really thinking, I gave her a confused look like I didn't know what she was talking about. She grinned at me and said, \"Don't act like you don't understand the question. You aren't the only one around here with a pair of binoculars. I watched most of what happened on your deck. Pretty hot, Jack. You do know that sound travels quite well on the water, right? I masturbated to a couple orgasms watching you guys. Who were they? Why were they here?\"\n\n\"Sorry. Those were my wife's sisters and the older sister's daughter. The older sister stops by occasionally to check on me; to see if I'm alive or not, she says. She brought her daughter this time but I hadn't seen her since I moved here. The youngest sister is considerably younger than my wife and I hadn't seen her since I moved here either. I couldn't believe how much she looks like my wife. She's two years older than my wife was when she died.\"\n\nPriya said, \"They came all the way out here to seduce you?\"\n\nI replied, \"Actually, that's exactly what they did. Frankie, the youngest sister, called it a family intervention. They think I'm wasting my life living out here in the woods. They are trying to get me to move back to the city. Their plan was almost blown up when Joyce, the older sister, arrived while you and I were in the shower. Joyce is a Police Detective and she saw your wet footprints on the living room floor and the bedroom smelled of recent sex. She's very observant and she explained to the others that someone else was \"cleaning my clock\", as she put it.\" Priya burst out laughing at that.\n\nPriya got up and gave me her hand and pulled me up. She pressed her bikini clad body against my semi-erect cock and pushed up for a kiss. I gave her a passionate one and she stepped back and took my cock and led me toward the bedroom. \"Come on big guy. I have a clock that needs cleaning in the worst way.\""
    ],
    "authorname": "BigZeke13",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/voyeur-gets-voyeured-ch-02"
}