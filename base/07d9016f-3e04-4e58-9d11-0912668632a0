{
    "title": "Three Square Meals Ch. 059",
    "pages": [
        "\"We're going after Nexus,\" John explained. He squatted down next to the frail looking woman, who was still seated in the same cell they'd found her in an hour earlier. Looking remorseful he added, \"We can't stay to give you aid, but the base is back under your control, and all the robots have been shut down. We'll call for relief to be sent immediately.\" \n\nLieutenant Commander Juliette Hawthorne nodded, staring at him intently as she said, \"I understand, Commodore. You have to stop that psychotic AI from killing anyone else!\"\n\nJohn gave her a sharp salute, then quickly rose to his feet, and turned towards the door. The cell doors were all open now, unlocked by Irillith after shutting down the demented Nexus fragment. The freed prisoners gazed at him in awe, calling out to him, \"Thank you, Commodore!\" as he strode out of the prison. He nodded to them courteously on his way to rejoin Alyssa in the corridor outside.\n\nThe blonde girl fell into step at his side as they ran down the corridor to the stairwell, then used flight-mode to clear the wrecked robots that were blocking the stairs. Once they reached the top level, they rushed towards the broken doors at the base entrance. *Jade's prepping the Raptor,* she informed him as they sprinted outside.\n\nSure enough, he could see the green-skinned girl through the cockpit canopy of the gunship, and she waved to him as they ran towards the loading ramp. They darted up the ramp, and the moment they were inside, he hit the button to close it after them. Despite the Inertia negation device built into the Raptor, he still felt a slight movement beneath his feet as Jade rocketed them out of the Docking Bay. \n\nBy the time he and Alyssa had stepped into the grav-tube, levitated up to the top level, then walked into the cockpit, Jade was already manoeuvring them into position for her final approach to land in the Invictus. \n\nJohn smiled at the girls seated in the cockpit, then placed his hand on Alyssa's shoulder, and said to her, \"As soon as we land, let's get straight up to the Bridge, and plot a course in pursuit. We can have a proper debrief after we're on our way.\"\n\nShe nodded, then said confidently, \"I've already got the course plotted out in my mind. It'll take us twenty-three hours, thirty-four minutes, and eight seconds, to reach the Sol System from here.\"\n\n\"Perfect, well done, honey,\" he said, giving her a wry smile as he remembered how she'd cheerfully announced she'd memorised this corner of the galaxy.\n\nShe smiled back at him, then said, \"I might as well wait in the loading room below.\"\n\n\"I'll lower the ramp as soon as we clear the atmospheric shielding in the Hangar Bay,\" Jade called out to her. Alyssa gave her a wave over her shoulder in acknowledgement as she left the cockpit.\n\nTurning to Dana, John frowned when he spotted the large purple bruise appearing on her forehead. She had been watching him as she waited in the cockpit, so when she saw his expression, she raised a hand to her head self-consciously. She had forgotten that she was still wearing her cracked Paragon helmet, so her gauntleted hand brushed the clear crystal faceplate instead. Dana blushed with embarrassment, but a sly smile suddenly appeared on her face, and she beamed at him happily.\n\n\"That looks like it hurts, so why so cheerful?\" he asked, looking at her curiously.\n\nHer sky blue eyes twinkled as she said, \"I've seen that look of concern a few times before. I'll be getting my tummy stuffed full of cum within the hour, I guarantee it!\"\n\nHe chuckled wryly, and said, \"Yeah, you're not wrong.\" His expression turned serious a moment later as he added, \"We'll be passing that big debris field as we head out of the Beta-Persei system, so scan as much of the debris as possible when we fly past it. We can't spare the time to stop and investigate properly, so we'll have to pick up any information we can.\"\n\n\"Of course,\" Dana replied immediately. \"With our upgraded sensors we should still be able to get plenty of useful data.\"\n\nHe smiled at her in gratitude, then turned to look through the cockpit as Jade brought them in to land inside the Invictus. They passed through the shielding that protected the Hangar Bay, and as the Nymph glided into the Titanium plated interior of the ship, he saw Alyssa leap clear of the Raptor. She sprinted for the reinforced double doors that led out of the Hangar, and made a gesture with her hand, hitting the button to open them with a telekinetic push. She darted straight through the opening gap, then turned a sharp right and disappeared from view.\n\nThe Raptor touched down in the centre of the landing lights under Jade's skilful hands, barely making a sound as the gunship settled gently on the deck. \"We're home!\" the green-skinned Nymph informed them cheerfully.\n\n\"Nice flying,\" John complimented her, and she grinned at him over her shoulder as she powered down the engines.\n\nDana, Rachel, and Irillith stood and made their way out of the cockpit, but John waited patiently for Jade to finish her shutdown checklist. He removed his helmet while he was waiting, and as soon as the Nymph had risen from the pilot's seat, he pulled her into his arms. He leaned down and gave her a loving kiss, and she let out a happy sigh as she returned it enthusiastically.\n\n\"What was that for?\" she asked him when they finally parted, looking absolutely delighted.\n\nHe smiled at her, and said, \"Just relieved my fianc\u00e9's safe. It was horrible seeing you get hurt by that robot.\"\n\n\"I'm fine, honestly,\" she said, her voice calm and reassuring, as she reached up to trace her fingers along his jawline in an affectionate gesture. Her cat-like emerald eyes twinkled as she purred flirtatiously, \"I wouldn't say no to sharing with Dana though...\"\n\nHe grinned, and said, \"We could use a good light show.\"\n\nShe giggled, then gave him one last smouldering kiss before he led her out of the cockpit.\n\n*Course plotted and we're underway,* Alyssa thought to him from up on the Bridge.\n\n*I'll be right there,* he replied, picking up the pace. \n\nHe and Jade jogged through the open doors into the corridor beyond, then stepped into the grav-tube and floated up in the soft blue glow of the anti-gravity field. When they reached the Command Deck, the Bridge was a hive of activity as the girls hurried to scan as much of the battlefield debris as possible while the Invictus raced past. \n\nJade glided down the ramp towards her Pilot Station, and he darted up the steps to the Command Podium before sitting in his chair. He was still fully armoured, so it was a little awkward to sit here like this, but he didn't want to go and remove his gear and risk missing anything. It took them less than a minute to move out of scanning range of the debris field, and during that time Calara had been rapidly reviewing the scan results.\n\nThe Latina turned her Tactical chair so that she could look up at him, and was sombre as she said, \"This is definitely the remains of Charles' Battlegroup.\" Glancing at the scan results, she ran through the list of ships she'd already identified, saying, \"A battleship, eight modern cruisers, a couple of light carriers, and lots of destroyers; it's them alright.\"\n\n\"Wait a moment,\" John replied. \"Wasn't that R&D officer commanding a battleship? Are you sure it wasn't his ship that got destroyed?\"\n\nCalara nodded and replied, \"Yes to both. Vice Admiral Von Brandt was in command of the Battleship Loki. The transponder in that wreckage was still partially functional, and the codes don't match. The debris was from the Battleship Heimdall, under the command of Commodore Neal Jansen.\"\n\nJohn rose from his chair, and said sadly, \"I'll have to inform Charles, but I'll do it after the debrief. I'm going to stow away my combat gear, then I want a team meeting in five minutes in the Briefing Room.\"\n\nThe girls responded instantly, with Dana, Rachel and Irillith heading towards the Briefing Room to remove their Paragon Body Armour, while Alyssa followed him down the steps and into the grav-tube. The blonde girl was quiet as she removed her Paragon suit in the armour equipping frame, and John glanced her way, surprised at her uncharacteristically reserved behaviour. \n\n\"Everything alright?\" he asked her as he returned his sword to the hooks above the weapon rack.\n\nShe nodded, picking up her Punisher rifle where she had left in leaning against the weapon rack. As she began unloading the rifle, she replied in a soft voice, \"Just concerned about Nexus.\"\n\nJohn placed his own Punisher rifle in the weapon rack, and watched as the auto-cleaning mechanism went to work. \"You're worried we're not going to get there in time to stop it, aren't you?\" he asked perceptively.\n\nAlyssa turned, and watched as the robotic limbs of the equipping frame removed his Paragon armour. When he stepped clear, the body armour safely removed, she sounded subdued as she replied, \"Yes. As fast as we are, I don't know if we'll be able to catch them in time to save the day.\"\n\nHe drew her into his arms, and when he gave her a comforting hug, she smiled at him sadly. They left the bedroom hand-in-hand, and walked back along the corridor to join the others on the Command Deck. Everyone was waiting for them in the Briefing Room when they entered, and floating above the long desk was the holographic Sector Map, so they could keep an eye on the long range scans during the meeting.\n\nJohn pulled out Alyssa's chair for her to sit, then went to his own at the head of the table, and sank into its comfortable embrace. Looking over at Irillith, he said, \"We better have a recap for Calara and Faye's benefit. Can you repeat what you found out about Nexus please.\"\n\nIrillith sat up straight as all eyes turned to her, and she took a deep breath before she began to speak in a clear voice, \"I confronted a small fragment of the Nexus AI in the secondary server we discovered. It had been left to run the base, control the robots, and command those four AI cruisers we encountered. It didn't have full access to the Nexus Primary's memory archives, but when I spoke to it, Nexus Secondary recognised me as being non-Terran.\" She paused, and glanced at John before continuing, \"It said we had the same Master, and that we were both his tools.\"\n\nCalara stared at her in shock, and gasped, \"The Mael'nerak?! How could he have any involvement in this?\"\n\nIrillith frowned and replied, \"Nexus wasn't able to tell me much, and I know it wasn't deliberately holding out on me.\"\n\n\"How can you be sure?\" the Latina asked curiously.\n\nThe Maliri girl hesitated, glancing warily at Faye, before admitting, \"I was being very persuasive.\" \n\nFaye looked up at her, her tiny face solemn, and said, \"It's alright. Nexus was a rabid animal that needed to be put down. I want you to feel like you can trust me, and that's never going to happen with psychotic AI like Nexus slaughtering people indiscriminately.\"\n\nIrillith smiled at her, feeling relieved, then looked at the rest of her audience and said, \"All the fragment of Nexus could tell me, was that it needed to achieve 'unity', and to do that, it needed to return to Terra. Nexus really hates Terrans, and considers the species to be an ugly experiment.\"\n\nDana sighed, and said, \"I've been thinking about all this ever since you first told us what you'd found out. Could the Terran Federation have found some millennia old Progenitor AI? If their own research into AI is based on that tech, it might explain why it keeps turning on them.\"\n\nJohn looked at Rachel quizzically, and asked, \"Wasn't your theory that Terrans were some kind of experiment into genetic mutation, set up by the Mael'nerak? If so, why build an AI there that hates them?\"\n\nRachel was confounded by his question, until her expression brightened, and she replied eagerly, \"A failsafe perhaps? Something to shut down the experiment if it gets out of control?\"\n\nDana's face registered her alarm as she blurted out, \"Well that certainly doesn't sound fucking terrifying! How many people are there are on Terra now?\"\n\nCalara looked thoughtful, then replied, \"The numbers are obviously in constant flux, what with the exodus to newly terraformed planets. The last census figures were something like ten billion, three hundred and forty five million, I believe.\"\n\nThere was a hushed quiet in the room as they realised the terrible ramifications of Nexus being unleashed on all those people. The silence was broken by John, who asked Calara, \"Did you find out anything else from that big debris field? It'd be helpful to know what we're up against.\"\n\n\"I've only glanced through the data we gathered so far, so I can't tell you much until I do some detailed analysis,\" Calara replied cautiously. \"There were dozens of wrecks in that debris field though, so it looks like the battlegroup went down fighting.\"\n\n\"Well hopefully we won't be going up against fifty AI cruisers then,\" he replied, with a wry smile. \"Maybe only about forty or so instead...\"\n\nAlyssa cleared her throat, and said in a quiet voice, \"I've got more bad news I'm afraid.\"\n\nJohn looked at her, and said, \"Let's hear it.\"\n\nAlyssa nodded, then looked around at the group as she explained, \"When we returned to Terran Space, Charles told us that he'd lost contact with his battlegroup two days beforehand. It then took us another two days to reach the Beta-Persei system.\" She looked worried as she continued, \"That's four days in total, and it only takes three days for ships with Terran FTL drives to get from here to Terra. On top of that, it's still going to take us nearly a day to reach the Sol System.\"\n\nJohn looked grim as he said, \"So to summarise then: we have a malignant AI that's possibly in command of a vast fleet of robotic ships. We know it has a grudge against Terrans, and it's currently heading to the Terran capital; the most densely populated world in the whole Federation. On top of all that, it might have arrived there already, giving it plenty of time to have devastated the planet before we can get there to stop it.\"\n\n\"That's about the size of it,\" Alyssa agreed, sounding downhearted.\n\nHe looked around the table at the girls, seeing the worry on each of their lovely faces. He took a big breath, then sought to reassure them by stating confidently, \"Well I refuse to give up now! We ARE going to get there in time, and we'll smash every last ship in their fleet if we have to!\"\n\nThe girls perked up immediately, feeding into his positivity, and they leaned forward, hanging on his every word.\n\nTurning to Calara first, he said, \"I want you to run through the analysis of the debris as fast as you can. It would be nice to know how many ships the AI lost, as well as the type of damage sustained by Charles' battlegroup if you can find that out too. Don't spend too long on it though, as I want you to concentrate on your research into the Dragon March Traitor. We'll be heading to Olympus after this, so we need to be prepared.\"\n\n\"Yes, Sir!\" Calara replied respectfully.\n\nLooking at Faye and Irillith next, he said, \"I want you two to repair and shore up our cyber defences. If we're going up against the Nexus primary, it might try another big cyber assault like last time.\"\n\nThey both grinned at him with enthusiasm, looking thoughtful as they pondered new ways to upgrade the Invictus' defences.\n\nNext on his list was Dana, and her sky-blue eyes sparkled with anticipation when he looked her way. \"Dana,\" he began, \"We need those prototype laser weapons as soon as possible. If we have to board an AI ship, or get boarded in return, we can't risk fighting with the Punisher rifles, not if they have shielded robots.\"\n\n\"I'll get it done, I promise!\" the redhead replied, her expression earnest and full of excitement.\n\n\"Good girl,\" he said approvingly, before turning to look at Jade. \"I want Paragon Body Armour for everyone, just in case we get boarded while fighting Nexus. After that, Dana will probably need your help assembling the new laser rifles as soon as she's finished her designs.\"\n\nThe Nymph nodded, and stated in a firm voice, \"I can easily finish off the armour before we arrive. I love helping Dana build things, and I'll assist wherever she needs me.\"\n\nJohn grinned at her bold confidence, then turned to look at Rachel. She smiled at him, and said pre-emptively, \"I'll finish my research. I have a feeling that knowing more about this will help you with your psychic healing. I'll get some answers for you as fast as I can.\"\n\nHe smiled, pleased that she had anticipated his request, and said, \"Hopefully it won't be necessary, but if anyone gets hurt, I want to be able to do the best I can to help them.\"\n\nFinally he spun his chair to face Alyssa, and gave her an apologetic smile. \n\nShe laughed at his expression, then turned in her seat, and cast an appraising eye over Dana's cracked and battered Paragon suit. \"Yeah, those bots gave our body armour a real hammering. I'll start shaping new replacement pieces for any damaged locations,\" she said agreeably.\n\nJohn nodded his approval, then looked around at the girls, his expression deadly serious. \"I've never served with a finer crew,\" he said, his face showing his open admiration for them. \"You should all feel very proud of the way you handled yourselves under extreme pressure. I ask a lot of each of you, and you -never- fail me.\"\n\nThey gazed back at him in delight, overjoyed to hear his heartfelt praise. He rose from his chair, and said, \"I need to report in to Charles and warn him what's coming his way.\" After stealing a quick glance at the ship's chronometer, and noting that it was nearly midnight, he added, \"After that, I expect to find you waiting for me in bed, as I plan to show you how much I appreciate my wonderful girls. We haven't all been together properly yet, and it's well past time we rectify that.\"\n\nHe turned to leave, then looked back at Faye, who was sitting on the desk looking wistful, with a sad little smile on her face. \"Faye, meet me in my Ready Room please, I want to speak to you privately,\" he said in a firm voice.\n\nThe purple AI pixie looked up at him, blinking in surprise. She nodded, and winked out of sight as she followed his orders.\n\nAlyssa stood gracefully, and placed her hand on his arm, stopping him before he could leave. \"Shall we start without you?\" she asked him, her cerulean eyes staring at him with burning intensity.\n\n\"Definitely,\" he agreed, glancing back at the bevy of beautiful girls who were gazing at him with unbridled lust.\n\nHe strolled out of the Briefing Room with a spring in his step, then walked across the Bridge and hit the button to open the doors into his Ready Room. There was a blur of purple by his desk, and Faye whirled around, watching him with her big eyes as he strode into the room. He kept his expression serious as he walked over to his desk, then sat in his big leather chair.\n\n\"What did you want to speak to me about, John?\" she asked him, watching him warily.\n\nHe let himself relax in his chair and smiled at her warmly as he said, \"I just wanted to say thanks for everything you've done since you joined us.\"\n\nThe tiny purple sprite blew out a big breath, and then grinned at him, looking greatly relieved. \"Oh, that was mean! I thought I was in trouble there for a minute!\" she exclaimed happily.\n\nJohn shook his head, and said, \"No, far from it.\" He paused, then studied her closely for a long moment before he continued, \"What would make you happy, Faye?\"\n\nThe pocket-sized construct looked startled at his question, and seemed unable to answer straight away.\n\nJohn smiled at her as he explained, \"It's easy to reward the other girls, but you and I have a different kind of relationship.\" Faye giggled at that, looking up at him with her big luminescent eyes, and an unreadable expression on her cute little face. John chuckled as well, then added, \"I really appreciate what you've done for us so far, but I'm sorry that I've been so wary of you. It wasn't because of anything you did, it was purely because of your synthetic nature. It hasn't been fair to tar you with the same brush as the Terran AIs, but you haven't complained about our precautions, and just got on with making yourself useful.\"",
        "\"It's alright, I understand why you were worried,\" she replied magnanimously. Faye gazed at him, and then tentatively asked, \"Would you consider letting me fly the Raptor?\"\n\nHe had to fight down his natural instinct to refuse point blank, and forced himself to consider her request rationally. He did trust her... mostly... it was just that it had been drummed into him how unstable and treacherous AI always turned out to be, and she was asking him to take a huge leap of faith.\n\nFaye could see the indecision in his face, so she continued in a rush, \"I don't mean for combat! Just for ferrying you over for boarding actions, that kind of thing. There's only seven of you in the crew, and sometimes you leave yourself exposed to potential danger, because you don't have enough personnel available for all the roles you need to fill. For example: we had to leave Calara alone in the Invictus when Jade brought Irillith to the base, and then the Raptor was left unmanned and undefended when they landed there.\"\n\nJohn had to concede that she was right, and with such a small crew, they were getting exposed to unnecessary risks just as she pointed out. In the end, his concern for the girls' safety overrode his potential fears about Faye, and he met her hopeful gaze, his mind made up.\n\n\"You've proven yourself to be a reliable and valuable member of the crew,\" he said with conviction. \"It wouldn't be fair to keep treating you differently. I'll leave you to work with the girls to figure out the logistics, but you have my permission to begin training as a backup Raptor pilot.\"\n\nFaye clapped her hands together in delight, her purple eyes burning brightly as she stared at him. \"Oh, thank you so much!\" she gasped. \"I promise I won't let you down!\"\n\nHe smiled at her, pleased to see her overjoyed reaction, and said, \"You're welcome. Thank you for all you've done for us so far.\"\n\n\"I'll start researching all I can about flight mechanics!\" she said, filled with enthusiasm. \"It'll give something to look into while I'm on Watch tonight.\"\n\n\"Very good, Watch Commander,\" John said to her in a playful tone. \"You are dismissed.\"\n\nShe threw him a cheeky salute, then gave him a cheerful wave goodbye before blinking out of sight in a purple flash.\n\n*That was a nice thing to do, and I think you're making the right call. Faye's been very trustwor-... Oh fuck! That feels so good...* Alyssa thought to him telepathically before trailing off with a lusty groan. \n\nJohn laughed, then reached towards the comm interface built into his desk, suddenly filled with a rather pressing need to get the conversation with Charles over with as quickly as possible. He scrolled through his list of contacts, until he found: 'Vice Admiral Charles Harris - Olympus Shipyard C.O.'. He swiped his hand across his old friend's name, then sat back in his chair as he waited for the call to connect.\n\nCharles appeared as a holographic image above his desk, and John could see the relief wash over the man, as he gasped, \"John! Thank God, I'd started to fear the worst. What happened?\"\n\nJohn's face was grim as he said, \"Good news and bad, Charles. There were only four AI cruisers defending the R&D facility, so we dealt with those and stormed the base.\"\n\n\"You went up against -four- cruisers by yourself?!\" Charles blurted out, looking astounded. \n\n\"Yes,\" John replied simply, refusing to elaborate. \"We shut down the AI that had taken over the base, and freed several hundred prisoners. Some of them are in bad shape, and they could use medical assistance as soon as possible.\"\n\nCharles let out a disbelieving laugh and slumped back in his chair. \"It's over then. I can't believe you did it...\" he muttered, his grey moustache twitching as his face lit up with a grin.\n\nJohn shook his head slowly, reluctant to break the terrible news to his old friend. \"The AI we shut down was a backup server. The real AI, Nexus Primary, left the base and is heading straight for Terra. It's commanding a fleet... a big one we think, perhaps forty or more ships,\" he explained tersely. It was heartbreaking to see his friend's look of relief wiped away in an instant, as a crashing wave of despair descended on Charles' face. \n\n\"My battlegroup?\" he asked, frantically clutching for any shred of hope.\n\n\"Gone,\" John replied, his voice sombre. \"Wiped out to a ship. I'm sorry Charles.\"\n\nCharles' near hysterical laugh was truly unsettling, and he gazed at John with wild eyes. \"We're doomed,\" he murmured, before staring away into the distance. \"Destroyed by our own reckless stupidity.\"\n\nJohn's eyes narrowed, and he leaned forward as he snapped, \"Get your shit together, Charles! There must be something you can do? Some ships you can muster?\"\n\nHis stinging tone was like a verbal slap to the face, and Charles blinked in astonishment at being spoken to in such a manner. He was furious as he snarled, \"Don't you think I've thought through every possibility? We've got no reserve ships left!\"\n\n\"You said you sent all the recently repaired ships in that Battlegroup?\" John asked curtly.\n\nCharles nodded, looking despondent, and replied, \"I already told you, I sent everything that was combat ready.\"\n\n\"Then send all the crap that hasn't been fully repaired!\" John demanded. \"We're on our way, but we're still a day out, and you need to protect Terra until we can get there.\"\n\n\"It's a suicide mission! I can't just send good crews to a futile death,\" Charles balked.\n\nJohn gritted his teeth in frustration and snapped, \"Once Nexus wastes Terra, it'll move on to finish off the rest of humanity. Your people will be dead regardless.\"\n\nSlumping in defeat, Charles said grudgingly, \"Fine, I'll send everything to Terra, but it's going to be a bloodbath.\" He shook his head, looking bleak as he muttered, \"What good will it do anyway? You're just one ship. I don't care what upgrades you've put in the Invictus, you can't possibly defeat those kind of odds.\"\n\n\"Just send the damn ships, Charles, leave the rest to me,\" John replied, his tone authoritative.\n\nCharles laughed sardonically, and said, \"Right away, -Commodore-.\"\n\nJohn closed the call abruptly, not able to stomach seeing his old friend so lost to despair. He turned his chair and stared out into space, losing himself in a swirling blood red nebula that stretched for countless light years.\n\n*He was scared out of his mind, don't judge him too harshly,* Alyssa thought to him, the warmth in her voice wrapping around him like a comforting mental blanket. \n\nHe sighed, realising she was right, and said, *I know, but I've never seen him like that before. I always respected the man, both as an officer and my friend, and it was horrible to see him so broken.*\n\n*You're not entirely human remember, you're made of sterner stuff,* Alyssa reminded him gently. *We've spent months battling impossible odds, so it's become the norm for you now. Charles doesn't have the luxury of knowing what we, or this ship, can do.*\n\nJohn laughed, and replied, *When did you become so wise?*\n\n*About the same time you made me super-smart, and stunningly beautiful I suppose,* she replied playfully. *Now get down here, I need backup!*\n\nGrinning, John rose from his chair, his bad mood banished just as quickly as it had arrived. He strode from his Ready Room, and smiled at Faye when she waved at him again, still ecstatically happy after their chat. He could feel his heart beat faster as he stepped into the grav-tube, his imagination running wild as he wondered what the girls were up to. He sank smoothly in the anti-gravity field, swathed in a warm red glow, then walked out into the corridor on Deck Two. \n\nLusty moans, and soft feminine cries reached his ears as he strode purposefully towards his bedroom, and as he drew closer, Alyssa appeared at the bedroom door. She was completely nude, her glorious, firm young body covered in a light sheen of perspiration, while her cheeks were flushed and her golden-hair tousled. She oozed wanton sexuality, and her bright blue eyes smouldered as she leaned against the doorframe, waiting for him to arrive. \n\n\"We started without you, as you requested,\" she purred, her full lips curling up in a wicked smile. \n\nShe held out her hand for him to take, and he accepted it gladly, letting her lead him into the bedroom. The rest of the girls were totally lost in passion, with the two brunettes eating out the two alien girls, while Dana knelt astride Jade, writhing on her tongue. The acres of ripe flesh on display was incredibly enticing, but John suddenly remembered he hadn't showered since the mission. \n\n\"Keep me company, I need a shower,\" he said to Alyssa, heading to the bathroom, and tugging on her hand to encourage her to follow.\n\nHer eyes sparkled at his firm tone, and she said obediently, \"I'll do anything you want.\"\n\n\"Good girl,\" he said with a grin, stripping off his clothes and leaving them in a haphazard heap on the bathroom floor.\n\nHe pulled her into the shower, then turned on the water jets, and sighed as she began to wash him. Her hands were deft, and moved with a nimble dexterity as she cleaned him, her soft skin feeling amazing as her fingers glided over his body. It felt very intimate to be washed like this, and she knelt submissively as she began to soap down his legs and groin. \n\nHis half hard appendage thickened to full strength as she caressed him, and he shivered at her tender touch. When he was sure he was spotlessly clean, he offered her his hands, then pulled her to her feet and into his arms. Alyssa was tall for a woman, standing at five-foot-nine, but compared to his six-two, she seemed tiny. Her body was lean and athletic, strong, and healthy, but again, compared to his brawny masculine physique she looked petite and very feminine.\n\nJohn let his hands follow the sleek contours of her back, gliding down over her smooth, unblemished skin until her reached her bottom. The two perfectly rounded spheres felt wonderful in his hands, and he squeezed her roughly, enjoying hearing her gasps as he manhandled her.\n\n\"This is mine,\" he told her firmly, in case there was any doubt.\n\nShe nodded, grinning at him as she crooned, \"You won your prize. You can take me back there whenever you want.\"\n\n\"But...?\" he asked, sensing she wanted something else.\n\n\"I'd like to see you plough all the girls tonight! They're hungry for your cock, and it would be a shame to disappoint them,\" she replied, an eager gleam in her eyes. \"Besides, it'll be more fun being on our own when you break in my ass again. It's been a while, and you're going to need to be rough with me, remind me who's boss.\"\n\n\"Fuck,\" John groaned, his cock throbbing with need.\n\nShe sensed his frustration, and she kissed him lightly on the lips before saying sympathetically, \"Poor boy, you need a tight little girl wrapped around you, don't you?\"\n\nHe nodded mutely, and she led him out of the shower to dry off. When they had towelled themselves dry, she prowled over to him, and reached down between his legs. Her fingers brushed lightly over his taut quad, and she licked her lips subconsciously.\n\n\"It's going to be hard, but try and hold off until the end,\" she said, smiling impishly. Staring into his eyes, her voice dropped a few octaves as she added, \"We'll make it worth your while.\"\n\nWith that, she flounced out of the bathroom, leaving him staring at her spectacular body as she rolled her hips to make herself look even more delectable.\n\n*I changed my mind,* he said to her as she sauntered away. *You aren't a good girl at all, you're very naughty.*\n\nAlyssa flicked her long blonde hair over her shoulder, then shot him a heated glance as she replied, *I know, I'm a dreadful tease. Now, start riding those hot little teens, and get them cumming on your big dick. I'm going to borrow Jade and Irillith for a while!*\n\nWhen he entered the bedroom, the girls had uncoupled, following Alyssa's silent telepathic commands. She had wasted no time, climbing onto the bed between Jade and Irillith, and the Nymph and Maliri had already started trailing kisses over her gorgeous body.\n\nCalara, Dana, and Rachel sat up on the other side of the bed, all looking flushed and very excited to see him. They beckoned him over, inviting smiles on their beautiful faces, and he wasted no time in joining them.\n\n\"Who do you want first?\" Calara asked him breathily, leaving no doubt that they all expected a turn.\n\nHe grinned at them, then lay back on the bed, folding his arms behind his head. \"We'll go with the order you joined the crew,\" he said decisively. He smiled at Calara and added, \"That means you're up first, Lieutenant.\"\n\nShe flashed him an eager smile, then smoothly straddled him as she repositioned her lithe body above his. Dana and Rachel cuddled up next to him, and watched transfixed as Calara sank down his rock-hard shaft, shivering with delight. When she had taken his whole length, she leaned forward to rest her full breasts on his chest, and kissed him deeply. \n\n\"It's a good job I went first,\" she moaned, her soulful brown eyes hooded with lust. \n\nJohn reached out to stroke Dana and Rachel as he asked, \"Why's that?\"\n\nCalara smiled as she said brazenly, \"These two both have very skilful tongues, and they got me very wet. When you're done with me, you'll be well lubed for them.\"\n\nDana giggled and rolled her eyes as she said, \"Yeah, like we aren't horny and ready to fuck!\"\n\n\"Oh God,\" John groaned, staving off his climax with an act of iron willpower. Lasting until they'd all had a turn was going to be damn-near impossible.\n\n***\n\nAs each of the girls rode him, the other two showered him with tender kisses. As much as this was supposed to be about rewarding them, they felt that they hadn't properly thanked him for the lavish physical and intellectual enhancements he'd bestowed on them with the Gift. While Calara rode him sensually, her strong internal muscles expertly massaging his cock, Dana and Rachel gently caressed him while whispering loving endearments.\n\nHe floated along on this plateau of sensation, fully immersed in the ripe young flesh surrounding him on all sides. There were peaks of course, as each girl arched her back, crying out as she came, their bodies instinctively trying to coax him into joining them in ecstasy. These were countered by the very brief troughs when the girls swapped places, leaving his cock to glisten wetly in the air, before being pushed deep into another pliant and extremely willing girl.\n\nWhen they'd each had a turn, thanking him profusely for making them feel so good, the trios swapped. The three Terran teenagers moved aside to continue playing together, making room for Alyssa, Irillith and Jade. The blonde had a sultry glow to her, one he recognised on her whenever she'd just had an explosive climax. She leaned in to kiss him fiercely while Jade mounted him with practiced ease.\n\n*We're going to make you cum so hard,* she promised him, as her tongue duelled with his, her piercing blue eyes staring into his soul.\n\nAs wonderful as being with the last three girls had been, the second trio had a big advantage with Alyssa guiding their every move. She watched him carefully, listening to his every thought, and her cohort of concubines reacted to her loving guidance. A slight shift of body weight here, a gentle nibble on his earlobe there, his body felt like it was on a hair trigger as they overwhelmed his senses with pleasure. \n\nJade dismounted him after crying out his name as she orgasmed, giving him a moment's reprieve. However, she was almost instantly replaced by Irillith, who sank down on him with a breathy sigh. Her angular violet eyes gazed at him in adoration, but she rocked on him hesitantly at first, unused to being in control like this. Jade moved behind her, pressing her dark-green breasts against Irillith's well-toned back. The Nymph was limber and strong, and she held on to the Maliri girl's hips and began to manipulate her body, moving her with a slow, exquisitely teasing motion.\n\n\"That's right, you're getting it,\" Jade murmured encouragingly as she wrapped herself around the azure-skinned girl. She leaned forward to kiss Irillith on the cheek, as she continued, \"Just focus on giving him pleasure. Trust me, you'll love it.\"\n\nIrillith turned to kiss Jade, then focused intently on John, riding him with Jade helping guide the motion of her hips. John could see the change in demeanour of the Maliri girl, as she watched his every expression, looking for signs of pleasure so she could make it good for him. He let out a wordless groan, his eyes transfixed on the violet and emerald sets of eyes that were staring down at him. \n\n*They look so fucking hot together, don't they,* Alyssa asked him as she planted gentle kisses on his cheek, making sure she didn't block his view. *I had Irillith eat my pussy while Jade put those flexible fingers of hers to good work. I came so fucking hard.*\n\nIrillith began to increase her languid pace, and he could see her flush with arousal as she rode him with greater purpose. Despite her best efforts to focus solely on pleasing him, being so submissive was having a powerful effect on her, and her eyes opened wide as she rode the crest of a huge climax. He reached up and placed his hands on her slender tummy, and she leaned into him, moaning and writhing as she came. Alyssa watched them both closely as they gazed into one another's eyes, and a sparkling smile lit up her face as she listened to John's thoughts.\n\nJade helped Irillith roll clear, her beautiful blue face looking dazed as she reeled from the intense pleasure. Alyssa didn't leave him hanging though, and she slowly descended on his slick cock, biting her lip as she felt him spread her wide open. \n\n\"I'm close,\" she purred when she reached the bottom, then leaned forward so she could kiss him again. \"Seeing you impale these sexy girls always gets my motor running!\"\n\nJohn wrapped his arms around the teasing blonde, then rolled over, pinning her on her back. \"You're close are you?,\" he asked her with a roguish grin. Glancing to his sides, he said to the other girls, \"Alyssa's been very naughty. You know what a tease she can be, and it's time for some payback.\"\n\nHe raised himself up on his arms, pinning her wrists to the bed, and began to stroke in and out of her at a torturously slow pace. Meanwhile the other five girls giggled excitedly as they surrounded Alyssa. They began to lick and caress her, making her shiver with delight, but no one made any attempt to help bring her off. \n\nHer six lovers kept this up for nearly half an hour, leaving her teetering on the edge, but refusing to let her finish. \"Please!\" she finally begged in desperation. \"I'm going out of my mind! I can't stand the teasing any longer!\"\n\nJohn smirked at the other girls, and said, \"What do you think, ladies? Shall we let her come?\"\n\nThey all nodded eagerly, so he relented, and said, \"Alright girls, pick an erogenous zone and get to work!\"\n\nDana and Rachel darted forward to latch on to her breasts, squeezing the firm ripe flesh and sucking on her nipples. Calara winked at Irillith, then grasped one of Alyssa's trembling thighs, and lifted her leg so she could take a firm hold of one of her dainty feet. She leaned forward and began to suck on her toes, causing Alyssa to arch her back and scream at the maddening sensation that drove a fine line between tickling and sensuality. Irillith grinned and copied the Latina, causing Alyssa's frenzied thrashing to increase.\n\nFinally, Jade crouched behind John and gently lifted his quad out the way so that her questing fingers could find Alyssa's tight little asshole. Her fingers elongated as she pushed them inside her, rhythmically stroking the base of John's cock through the tightly stretched membrane between them.\n\n\"Holy Fuck!\" Alyssa screeched, bucking wildly underneath him as he kept her pinned to the bed. ",
        "He thrust into her with long powerful movements of his hips, grinding against her clit when he stuffed her full of his cock. She let out one long keening wail as she flexed underneath him, then her eyes rolled up and she collapsed back on the bed, her limp body rendered completely insensate. The girls sat back, contented smiles of satisfaction on their faces as they surveyed their handiwork. \n\nJohn chuckled, and said, \"Bravo girls, that was phenomenal.\"\n\nCalara knelt next to him, and stroked his back as she said lovingly, \"You must really need to cum. Let us take care of you.\"\n\nHe gave her a grateful smile, then eased out of Alyssa, and lay back on the bed. The girls knelt at his sides, and when Calara engulfed the head of his cock in her mouth, the others leaned in and began to run their tongues along his length. The girls weren't teasing now, and were focused solely on emptying his four balls. Dana and Rachel were nearest to those four taut orbs, and they moved down to focus on them instead, encouraging them to give up their tasty cargo.\n\nWith a final groan from John, his quad raised up, and his cock jerked powerfully in Calara's mouth, hosing down her tonsils with a gout of thick, rich cum. She swallowed it down immediately, sucking powerfully to intensify his climax. After he filled her mouth again with another powerful blast of spunk, she smoothly passed him over to Jade, before savouring the cum in her mouth then sending it down into her belly. They each took a turn, sharing him evenly between them.\n\nAlyssa had roused herself by the time it was Dana's turn, and the redhead's eyes flashed with mischief as she greedily filled her stomach. She reluctantly handed over his pulsating cock, and Alyssa sheathed him in her throat, then sucked him mindlessly, moaning with delight as she felt the heavy spurts of cum blast into her belly. Eventually he was done, and he collapsed on the bed, his chest heaving as he gasped for breath.\n\nThe girls all lay beside him, heads resting along the length of his body, while looking up at him with bright smiles on their faces. When he'd finally recovered, he chuckled in disbelief, then wondered aloud, \"Why don't we do that every night?\"\n\nWhen the laughter had subsided, they settled down to sleep, watching drowsily as pulses of soft green light from Jade's tummy cast a viridian glow across the ceiling. John found he didn't mind being used as a comfy pillow by six gorgeous nubile women in the slightest.\n\n***\n\nJohn awoke the next morning feeling well rested and raring to go. Normally the girls were slower to wake than him, but today they began to stir as soon as he did. During the night the girls had settled into their usual places, with Alyssa and Calara cuddling him between them. Faye reported in, saying that she'd seen no sign of AI ships during the night. She also noted that Nexus didn't seem to be stopping to harass civilian shipping either, as they had passed no more debris in their rapid pursuit. As soon as Faye had finished her report, the girls got up for a quick shower, but John held onto Dana before she could get up to join them.\n\n\"How's the head this morning?\" he asked her, as he brushed her dark auburn locks away from her forehead, checking on the state of the purple bruise that she'd acquired yesterday.\n\nShe gave him a grateful smile and turned slightly to kiss his wrist as his fingers lightly brushed her skin, searching in vain for a bump. \"You took care of me, just like you always do,\" she said, then wrapped him in her arms and hugged him exuberantly.\n\nHe laughed as he returned her enthusiastic embrace, and they got out of bed to hurry after the rest of the group. After a quick shower they parted ways to go and get dressed, then reconvened in the Officers' Lounge for breakfast. Everyone was keen to get started on the tasks they had discussed the previous night, so they gulped down some cereal and juice before everyone bounded away.\n\nEventually it was just him and Alyssa left, and once he'd finished clearing the table, she sashayed up to him. The blonde girl had been quiet, but very happy this morning, and she leant in to mould her lithe body around him as she gave him a loving hug. \n\n\"Thank you for last night,\" she murmured at last, gazing at him with dreamy eyes. \"We all adored it, and the family's never felt closer. I love you so much.\"\n\nHe was astonished at the quiet sincerity of her words, but he eventually overcame his surprise, and said, \"You're very welcome. I had a wonderful time too, and you know how much I love you.\"\n\nShe gave him a tender kiss, then murmured happily, \"That I do, you lovely, handsome man.\"\n\nHe released her from his arms, and she glided away as though she were floating on clouds, singing softly to herself. He grinned as he watched her leave, shaking his head in disbelief at her ability to keep him on his toes, even when she wasn't playing any games.\n\nHis plan today had been to spend some more time practicing his psychic powers, but his mind kept drifting back to the painfully awkward conversation he'd had with Yamamoto a few days ago. Rather than heading up to the Bridge to try and contact him again, he walked out to the grav-tube with a sense of purpose, and dropped down to Deck Three to visit his training room.\n\nWhile strolling along the corridor, he reached out telepathically to his Maliri Matriarch, and asked, *Edraele, how are you this morning?*\n\nShe sounded delighted to hear from him as she replied, *I feel wonderful today! My surprise for you is coming along nicely, and I'm hoping everything will be in place for when you return.*\n\nHe chuckled as he hit the button to open the door into his training room, and said, *I must admit, I'm burning with curiosity to find out what it is.*\n\n*You'll just have to wait, I'm afraid,* she replied, but he could tell by her voice that she was thrilled at the thought of revealing it to him.\n\nDeciding to respect her desire to keep it a secret, he changed topics instead of pushing for more details. *I wanted to thank you for your assistance yesterday, when you sent me that surge of psychic energy. It helped swing a deadly battle, and got us out of a tricky situation, so thank you, I really appreciated your help.*\n\n*It's what I'm here for,* she replied happily, overjoyed to hear that she'd been able to help make a difference. *I'm just pleased you remembered my advice about using me to help fuel your powers as you use them.*\n\nJohn walked over to the weapon stand, and picked up his training sword, the Odachi feeling like an extension of his arms as he held the comfortable grip. *I hope you don't think I just plan on treating you as some kind of psychic battery,* he said to her with a frown. *You've been a tremendous help in all kinds of ways, and you know I've started to think about Valaden as a potential new home for us in the long term.*\n\n*I know, and I can't wait to see you again,* Edraele replied, and he could feel her yearning desire to be reunited with him over their empathic link. *While we're apart though, it's important that you let me help you whenever you need it. It makes logical sense, and besides, I love knowing that I'm making a difference, even when I'm so far away from you.*\n\n*I will, I promise,* he replied with a smile, then sent her a telepathic projection of a kiss.\n\nHe could feel her delight over the bond, and he left Edraele to her happy thoughts as he glided across the mat, and knelt on the floor. Placing the replica of the ancient Japanese blade on the mat in front of him, he placed his hands on his knees, then closed his eyes as he focused on clearing his mind. Slowing his breathing, his chest rose and fell in a deep, well-measured rhythm, and he could feel a calming sense of inner peace settle over him.\n\nWhen he finally opened his eyes again, his senses felt keenly focused, with all petty distractions cleared from his mind. He reached for his sword, then rose to his feet, sliding effortlessly into a perfect guard stance. The blade seemed to flow around him like a wave as he swept it around his body, moving from one kata to the next in a seamless dance that was as beautiful as it was deadly. Ever since he'd doubled his bond with Alyssa, his mind felt sharper than ever before, and he knew that he'd achieved an epiphany of sorts. A sense of oneness that had previously eluded him.\n\nHe lost track of time as he practiced, losing himself in the fluid strikes, and constant repositioning of his body, while keeping his balance and poise carefully controlled. He finally came to a rest, and despite the hours of intense practice, his breathing was smooth and even. Relaxing his posture, he walked back to the training rack, and placed his sword on the empty hooks. Turning to the console on the simulation device, he brought up the comm interface, and selected Eito Yamamoto from the list of contacts.\n\nThe call went through, and was met with the familiar bland ringtone. Yamamoto might well have picked up if John waited for ten minutes, but he wasn't in the mood for that today. His fingers brushed over the comm interface, selecting the option to leave a message, then turned to face the camera.\n\n\"Enough games,\" he said sternly. \"Prepare yourself for our final duel. I will call you when it's time.\"\n\nHe swiped across the comm interface, ending the message, then turned and left the simulator room with a half-smile on his face.\n\n***\n\nThe girls all met him for lunch in the Officers' Lounge, and there was a tremendous buzz of excitement as they arrived, each having made significant progress that morning. Surprisingly it was Calara who was the most animated, and she rushed across the room and into John's arms. \n\nHe caught her easily, swirling her around, before setting her down on her feet. She looked thrilled as she gasped, \"He's innocent! Charles isn't connected with the Traitor in any way!\"\n\nJohn felt a lightness in his chest, and he could feel a heavy burden lifting off him, one that he hadn't been consciously aware he was carrying around. \"You're certain?\" he asked her, feeling a surging sense of exhilaration.\n\n\"Absolutely!\" she nodded exuberantly. She laughed with relief, and said, \"He's actually been conducting his own investigation! That's why he was so cagey before, he had his own suspicions!\"\n\nJohn gave her a concerned look and asked, \"Has he found out about Admiral Norwood yet? He could be in serious danger if he's exposed him.\"\n\n\"Besides the imminent threat of destruction by Nexus and the AI fleet you mean?\" she asked with a broad grin. Shaking her head, she continued, \"I don't think so. He started looking into it because of the huge numbers of damaged Dragon March vessels returning to Olympus for repairs. As C.O. of the shipyard, he knows the full logistics of how bad it's been. He realised something's wrong, as Terran Federation campaigns are never plagued with this amount of bad luck. I've trawled through hundreds of his messages, and he's just been making very discrete inquiries, trying to figure out the bigger picture.\"\n\nJohn let out a big sigh of relief, and said, \"Thank you so much. You don't know how worrying it's been, thinking my commanding officer and friend could have turned traitor.\"\n\nCalara gave him a wry smile, and said, \"No, I only had to worry about my Commander and lover turning evil.\"\n\nHe look abashed at that, and replied, \"Alright, yeah, you had it worse.\"\n\nShe leaned in to give him a loving kiss, and said, \"Fortunately it's not a competition, and more importantly, you're back to being the man I love again.\"\n\n\"For good this time,\" he said with a smile.\n\nThey parted, then joined the others at the table, with Alyssa mouthing, \"Thank you,\" to Calara as she sat down. The Latina grinned at her, and they settled down to eat. \n\nJohn had been the first to arrive, so he'd quickly prepared some gnocchi with chicken, pesto and mozzarella. The girls made appreciative noises as they tucked in, none of them having tried this dish before. \n\n\"Anyone else got any good news from this morning's activities?\" John asked them with a smile.\n\n\"I repaired all the Paragon Armour,\" Alyssa said with a nonchalant shrug. \n\nDana glanced at her and asked, \"Any damage to the substructure? Or did the plating soak all the impact?\"\n\nAlyssa raised her glass in salute and replied, \"Compliments to the armoursmith, the armour held strong. The frame wasn't damaged.\"\n\nThe redhead laughed and said, \"You should be thanking yourself, you're the one responsible for how tough the plating is.\"\n\nAlyssa nodded thoughtfully, summoned an opaque floating hand, and patted herself on the back with it. \"Well done me,\" she declared with a grin. Everyone stared at the floating hand in amazement before dissolving into laughter.\n\nRachel piped up next, saying, \"That reminds me. I finished my research, and as I was already thinking about psychic abilities, I decided to make a list of all the powers we've witnessed.\"\n\n\"As a practice list for John?\" Alyssa asked thoughtfully.\n\nRachel smiled at her, and replied, \"Exactly! I thought it would be helpful to record it all so we don't forget everything.\"\n\nJohn leaned forward, looking intrigued, and asked, \"What have you come up with?\"\n\nRachel began ticking off the abilities on her fingers as she listed them, \"Telepathy, Telekinesis, Shadow Manipulation, Astral Projection, Technokinesis, and Shapeshifting.\" \n\n\"Shapeshifting?\" John asked with a frown. \"Isn't that specific to Jade's physiology?\"\n\nThe Nymph looked up from her meal, her eyes flicking to Rachel as she listened curiously, paying extra attention.\n\nRachel nodded, but replied, \"I don't think you'll be turning into a tiger any time soon, but the mass change is psychic, so I added it to the list for completeness.\" She lowered her hand, then added, \"You've already been able to enhance your strength, and psychically project elements, so I didn't bother listing those.\"\n\nAlyssa finished her mouthful of gnocchi, and said, \"Don't forget psychic shields. I was able to summon one of those in the fight against Progenitor-John.\" She glanced at him, and said, \"He created one too.\"\n\nWith a frown, John said, \"Well Telepathy is out, I gave that a try already.\"\n\n\"I think Telekinesis is probably the best one to focus on next,\" Alyssa suggested. \"We know your evil alter-ego could do that, and you're already pretty handy with elemental powers. You should find it easy.\"\n\nHe smiled and said, \"I don't know about that, but I'll practice this afternoon.\" He paused, frowning as he looked at Alyssa suspiciously, and asked, \"Are you encouraging me to work on Telekinesis next because you're sick of psi-shaping?\"\n\nShe bit her lower lip seductively and let out a delicious moan as she replied, \"Mmm, handsome and clever, what a turn on!\"\n\nHe laughed uproariously and she grinned at him as he exclaimed, \"You little minx!\" When the giggling died down he nodded, and added, \"Fair enough, you've been stuck doing it all on your own for months now. It's about time I helped out if I can.\"\n\n\"My hero!\" she swooned, flashing him a sparkling smile.\n\nHe was about to banter with her further, but he stopped for a moment, and looked across the table at Rachel. \"Did you say you'd finished your research?\" he asked her with interest.\n\nShe nodded, and replied, \"I wasn't sure if you wanted to discuss your cum over a meal.\"\n\n\"It's the perfect time!\" Dana protested, smacking her lips and adding for comedic effect, \"Mmm, delicious!\"\n\nIrillith nodded, saying, \"I agree. You all know I have quite the taste for it.\"\n\nThey all laughed at that, and she smiled at their good natured ribbing, revelling in the comfortable sense of acceptance amongst her new family.\n\nRachel put down her knife and fork, and with a gleam in her eyes, she began her speech. \"The first thing I did was view a sample under the Psi-scanner. My theory was right!\" she exclaimed jubilantly. Looking at John, she continued, \"Your cum emits a strong psychic aura, and I'm certain it acts as catalyst, allowing you to use your abilities on a girl who ingests it.\"\n\n\"To do what exactly?\" John asked her, his old concerns resurfacing.\n\nShe smiled at him, and replied, \"I listed a lot of them before, but things like the rapid healing, and nurturing our minds, making us more intelligent.\" She looked around the table at each of the girls in turn, saying, \"Calara's analytical skills, Dana's gift for technology, my ability to read DNA, giving Alyssa psychic powers, and massively developing Irillith and Jade's abilities.\"\n\nAlyssa reached over to place a comforting hand on his, and she smiled as she said, \"See, all good things.\"\n\n\"What about the mind control, and the behaviour modification? That too?\" he asked curiously.\n\nRachel nodded, and said, \"Yes, without a doubt.\"\n\n\"You did ditch the mind control though,\" Dana said, raising her glass in salute. She winked at him playfully as she added, \"Although we're still your obedient girls.\"\n\nIrillith had a wry smile on her face as she said, \"I think we can all agree the behaviour modification was a good thing where I was concerned.\"\n\n\"You were quite feisty,\" Jade joked, rubbing her cheek as though it still smarted from where Irillith had slapped her.\n\nJohn grinned, recalling his encounter with the tempestuous Maliri girl back on Valaden, and said, \"I don't think that's changed all that much.\"\n\nIrillith laughed at that, and the sparkle in her violet eyes promised him more dangerous liaisons in the future.\n\nDana grinned as she said, \"We already decided that ditching the jealousy and making us love being bi was a good thing. I mean, I loved seeing you girls fucking John last night, and I lost count of how many times you sexy bitches made me cum.\" \n\n\"Charmingly phrased as ever, Sparks,\" Alyssa said with a chuckle. She turned to John and said, \"So you're using your powers for good, and a bit of naughty, which is also very good. I think your moral compass is fine.\"\n\nHe laughed loudly at that, and said, \"Thanks, I think.\" He glanced at Rachel, and asked, \"Anything else, Doctor?\"\n\nShe nodded, then took a big breath before saying, \"I took another look at your sperm in the sample you gave me.\"\n\n\"You look like you've got something important to say,\" John said perceptively. \"What did you find out?\"\n\nShe frowned, and replied, \"Actually, I've never seen anything like it. Remember I said that Progenitor sperm is bigger and more powerful than the Terran equivalent? That it would be extremely effective on fertile Terrans, and I'm assuming Maliri and Nymphs as well.\"\n\n\"Yes,\" John replied, glancing around the table, and smiling at the wistful, doe-eyed expressions the girls all had on their beautiful faces. \"Was there something else?\"\n\nRachel hesitated, and then replied, \"The final chromosome that determines gender is in a state of flux. I'm not sure if this is consciously controlled or not, but If I didn't know any better, I'd say it looks like you get to choose the gender of the baby.\"\n\n\"We'd get to pick if we have a pink one or a blue one?\" Calara asked softly, her voice full of longing.\n\nRachel sighed happily, gazing off into the distance before shaking it off with a wry smile, and saying, \"Well, John would control the final chromosome, but it appears so, yes.\"\n\nJohn looked stunned at the news, and as much as he'd talked about having children with these incredible women, this suddenly made it all seem that much nearer. Alyssa listened to the avalanche of worries crashing through his mind, with one first and foremost standing out above the rest. She leaned in to him, resting her head on his shoulder, and gave him a gentle kiss on the cheek. \n\n*You'll be a wonderful father, you shouldn't doubt that for a moment,* she thought to him.\n\nHe glanced down at her, and gave her a grateful smile before leaning in to kiss her. *You always know the right thing to say,* he said feeling relieved.",
        "*Telepathy; I heartily recommend it for any doting Matriarch,* she replied with a grin.\n\nHe looked back at the rest of the girls, and then nodded his thanks to Rachel as he said, \"Thank you, that was a bit of a shock, but good to know.\"\n\nShe gave him a sympathetic smile, and said, \"It seems that's one more decision that rests on your shoulders. Sorry for heaping more burdens on you.\"\n\nWith a smile he said, \"I'm a big boy, I can handle it.\"\n\n\"I think we can all attest to that,\" she replied, giving him a flirtatious grin.\n\nHe laughed, joining in with the hoots and jibes, then looked around the rest of the table before his gaze settled on Irillith. \"How did you get on with the cyber-defences?\" he asked her curiously.\n\n\"We're already done,\" she replied, then paused to correct herself, and said, \"Actually to be more accurate, Faye worked furiously through the night, and repaired all the sundered firewalls. She wanted to come along to this meeting, but she said she's working on a secret project, which she hopes to have finished in a couple of hours.\"\n\nDana looked intrigued, and said, \"She asked me for a couple of spare servers, so I wiped them and handed them over to her. I wonder what she's been working on?\"\n\nJohn felt a momentary pang of nervousness at the thought of an AI being given free reign, but suppressed it immediately. It was unfair to second guess Faye after everything she'd done for them so far.\n\nIrillith was continuing meanwhile, and said, \"I spent the morning scaling up the aggressive countermeasures we have available, which should make us much more resilient if Nexus pulls the same kind of trick again.\" She paused, looked at John, and added, \"When I finished, I had a look at my old hacking deck; the device that's powering Faye.\"\n\nJohn raised an eyebrow at her tone, and asked, \"Was there a problem?\"\n\nWith a sigh of regret, the Maliri replied, \"I'm afraid the hacking deck is broken.\"\n\nDana looked alarmed and blurted out, \"What happened to Faye? Is she alright?!\"\n\nIrillith gave her a reassuring smile, and said, \"Sorry, I should have been clearer, I didn't mean to worry you. Faye is absolutely fine, but the deck itself is irreparably damaged. When she scrubbed one of the drives to give herself room to grow, she wiped out a significant part of the code used to create new AI. She's unique now, and we'll never be able to create another AI construct like her.\"\n\nJohn shared a glance with Dana, and she said in frustration, \"Yeah, I know! I've had too much on my plate, but I'll get to work on that as soon as I can.\"\n\nIrillith smiled and said, \"John mentioned he'd asked you to work on something for Faye. I'm done with my jobs for now, so I'd love to help.\"\n\nDana rubbed her hands together with glee and cackled as she said, \"My army of assistants is growing!\"\n\n\"Well Grand Engineering Overlord, I guess that's my cue then,\" Jade chipped in. \"I finished building the next suit of Paragon Body Armour. That's five female suits now, and one male, so you'll all have one for the next battle.\"\n\n\"Superb work, well done!\" John complimented her, feeling greatly relieved. He hesitated a moment, and said, \"There's six of you girls though, you need a suit too Jade.\"\n\nThe green-skinned girl wrinkled her nose cutely, and said, \"I'll be fine without it. I can't shift in Body Armour.\"\n\nJohn considered arguing with her about it, but he remembered her shrugging off the heavy calibre rounds, and then healing herself of the saw wound. With her aversion to weaponry, combined with how lethally effective her animal shapes could be, he decided to trust her judgement. \n\nInstead of arguing, he smiled and said, \"We might well end up in some kind of boarding action against the AI, and its great we can all be geared up to deal with it. That new armour is tough as nails, and the flight-mode was invaluable.\"\n\n\"Those prisoners instantly recognised you, too,\" Alyssa said somewhat smugly. \"Still regret the colour palette or the Lion symbolism?\"\n\nHe raised his hands in surrender, and conceded, \"Yeah you were right, it does make a dramatic statement, and saved a lot of hassle trying to explain who I was. Nexus knew we were coming, so sneaking about wouldn't have helped anyway.\"\n\nJade nodded, and said dryly, \"'Take the stealthy approach' definitely isn't one of our mottos.\"\n\n\"Yeah, subtlety isn't our forte,\" Alyssa said with a grin. \n\nJohn looked around the table, and he could see Dana trying to catch his eye, so he smiled at her and asked, \"How did you get on this morning?\"\n\nHer sky-blue eyes twinkled in the light, and he could immediately see she'd been saving this until last. She let out a wistful sigh, and said reflectively, \"You know, I spent years dreaming of being able to work on something like this.\"\n\nJohn leaned forward in anticipation, and asked, \"Have you built a prototype?\"\n\n\"The mass fabricators are churning out the parts as we speak, and I should have one ready in a few hours,\" Dana replied. She looked at Alyssa, and added, \"I'll need your help to shape some focusing crystals and weapon barrels.\"\n\n\"You got it!\" the blonde girl said, nearly as eager to get her hands on this new weapon as John was.\n\n\"If you show me the designs, I'll be happy to help you construct them.\" Jade offered with enthusiasm. \n\nDana grinned and said, \"Awesome, thanks!\"\n\nJohn turned to look at Alyssa, and asked her, \"How long until we reach the Sol system?\"\n\n\"Just over nine hours,\" she replied tersely.\n\nCalara cleared her throat and said, \"I'm looking into the scans of the debris field we passed. I should be able to give you a more detailed analysis in a couple of hours.\"\n\n\"Alright, we'll reconvene for the new weapon test, and to hear your results in... three hours,\" John stated, looking around at the girls.\n\nThey had finished their meal at this point, and everyone was eager to get cracking on their plans for the afternoon. Rachel smiled at her friends, and said, \"I'll clean up here. You guys can get started.\" \n\nHer kind offer was met with a chorus of thanks, and John rose from his chair as he said, \"In that case, I'm going to go and work on my Telekinesis. I'll be down in the Cargo Bay if anyone needs me.\"\n\n\"I'll be down there to give you some guidance as soon as I can,\" Alyssa said to him, as they all strode purposefully from the lounge.\n\n\"Thanks,\" he replied. \"There's no rush though, I can speak to Edraele for some advice.\"\n\n\"Cast aside at such a young age, how tragic,\" she replied melodramatically, the back of her hand pressed to her forehead for added effect.\n\n\"I thought you were my Matriarch, not my drama queen?\" he asked her, and she stuck her tongue out at him as she stepped into the grav-tube by his side.\n\nEveryone went their separate ways, and soon John was on his own, walking across the Cargo Bay, his boots clinking against the titanium decking with every step. He had decided not to waste any of the Crystal Alyssium on training, and instead headed for one of the crates of the original Invictium alloy that Dana had fabricated.\n\nHe lifted up the lid, then peered inside the box. There was a glossy black cube of Invictium there, and he reached inside, then broke off a fist-sized corner of the block. Turning the small chunk of alloy in his hand, he could see the psychically sensitive Etherite crystals embedded in the metal, and he hoped that would make it a bit easier for him to start with.\n\n*Are you there, Edraele? I'd like to practice Telekinesis, and I could use some advice if you can spare a moment,* he thought to her tentatively.\n\nHe could feel her amusement over their bond as she replied, *You must know I'll drop anything I'm doing to help you?*\n\nJohn sat down on the deck, and placed the chunk of metal on the floor in front of him. He replied, *Yeah, I guess I know that, but I don't like to be that presumptuous. I like to think of you as a friend and ally, not some slave I can take advantage of.*\n\n*I know,* she replied softly. *That's what makes you such a good man...* \n\nEdraele's voice trailed away as she started daydreaming. He caught tiny snippets of her thoughts, as she wasn't projecting them to him cleanly. A flash of the word 'utopia', a glimpse of a golden city teaming with happy Maliri families, alliances forged and fealties sworn. It was all very confusing, and he gave up trying to figure out what she was thinking about.\n\nHe left her to her thoughts for a moment, and went through the same kind of meditation routines he normally used when focusing himself for martial arts. It didn't take him long to slip into a Zenlike state, not after having centred himself that morning for his sword training session.\n\n*I'm ready, Edraele,* he informed her calmly. He stared at the lump of metal and asked succinctly, *How do you use Telekinesis?*\n\nShe paused for a moment, gathering her thoughts, and then replied, *I found the easiest way to think about it, was that my method for using Telekinesis was the exact opposite to the way I utilise Astral Projection. After my Telepathy developed, being able to Spirit-walk was my next ability. To use that, I focus my will inwards and peel my ethereal spirit form from my physical presence. Telekinesis works differently in that you project your will outwards to interact with an object.*\n\nJohn listened attentively, and on a whim, he decided to try Astral Projection. He could feel a strange tugging sensation in his chest as he thought about it, and he tried to focus his mind on that urge. He felt a bizarre lurching sensation, before he was abruptly snapped back into himself, leaving him blinking in shock and wobbling slightly as he tried to regain his balance. \n\nHe thought about what had just happened, and he was surprised at how close he'd been to success. It felt like he had a huge anchor on his back though, and it was that which had dragged him back into his body the moment his mental presence tried to separate from the physical.\n\nDeciding to leave that disconcerting ability alone for the time being, he settled down to work on Telekinesis instead. He'd had a considerable amount of practice at projecting his willpower by now, what with coaxing various elements to surge out along his sword. When he pushed his will towards the broken hunk of glistening black metal, he found it much easier than he'd been expecting. It was as if the Etherite was eagerly waiting to respond to his command.\n\nHolding out his hand, as he'd seen Alyssa do, he imagined the Invictium fragment rising up off the deck, and sure enough, it did so, moving obediently as it followed his mental commands. After all the time spent practicing with elements, which were much wilder and unruly to control, this felt safe, comfortable and easy. He grinned with delight as he guided the metal fragment with his hand, moving it in a lazy figure of eight as it levitated before him.\n\n*You're a natural at that,* Edraele remarked, sounding impressed as she listened to his thoughts, and followed his progress. *It took me weeks to be able to start moving small objects around with my mind.*\n\n*Your advice was really helpful, thank you,* he replied gratefully. Happiness radiated over their bond, and he smiled as he experienced the positive emotions from her. \n\n*Telekinesis is an active ability, but you can try maintaining it, if it's something simple like getting an object to float along at your side,* she explained further. *Why don't you give that a try.*\n\nHe concentrated on keeping the chunk of Invictium levitating in front of him, then thought about the compartments in his mind. He was expecting to see three boxes for him to use, but he blinked in surprise when he realised the number had doubled since he last checked. He was so startled he lost concentration on the telekinesis, and the metal clattered to the deck with the sharp sound of metal striking metal.\n\n*The mental compartments in my mind have increased!* he thought to Edraele, feeling a real sense of excitement. *I started with three, and I'm up to six now!\"\n\n*That's excellent, well done!* she praised him warmly. *It means your mastery of your psychic abilities is increasing, and as you continue to get more powerful, your mind will grow in capacity too.*\n\nHe grinned, and enjoyed the feeling of accomplishment. The last time he'd really worked on learning anything new had been his intensive sword training with Yamamoto, and to say that Edraele and Alyssa's training styles differed, would be the understatement of the century.\n\nGetting to his feet, he walked over to the container that stored the rest of the Invictium alloy, and lifted out the ingot. He strolled back to his previous spot, then carefully snapped the block of black metal in half, then each of those pieces into smaller chunks. Placing the uneven pieces in front of him, he lifted one in to the air, with a gesture from his right hand. Holding out his left hand, palm upraised, he mentally transferred control of the metal chunk from one hand to the other. Once it was floating serenely in front of him, he moved onto the next piece, and lifted it up with a smooth motion of his right hand.\n\nHe frowned as he looked down at his outstretched hands, and asked, *Is all this hand waving really necessary?*\n\nEdraele laughed, and she projected the lovely sound to him, which made him smile. Her laughter was very similar to Irillith's; natural, but with a slight sense of self-conscious surprise, as though she were unused to the sound. It reminded him of a child's laugh, un-tempered by embarrassment, and he wondered if that was because they'd found so little to genuinely laugh about in their adult lives.\n\nThe Maliri woman had stopped laughing now, while she listened to his thoughts, and said quietly, *You're very perceptive, and you're right of course. The old Edraele hadn't been genuinely happy since she was a small child. Over one hundred and forty years of scheming, plotting, and betrayals, which never brought her a moment's joy. Can you imagine a more tragic life to lead?* She paused and then added, *I know we aren't the same person, but thank you for saving me from that. It's one more thing I have to be grateful to you for.*\n\nHe sighed, and said, *I'm sorry, I didn't mean to bring the mood down. It's one of the consequences of a promise I made to Alyssa, never to shut her out of my mind again. I figured you deserved the same openness.*\n\n*Don't apologise,* she said to him earnestly, sounding touched by his explanation. *It's lovely that you'd treat me the same way as her. I know how much she means to you.*\n\n*You're welcome,* he replied, wishing she was there so he could give her a hug.\n\nEdraele sighed, very much wishing she were there too, then said, *Anyway, to go back to your original question: No, it's not necessary at all. However, it makes it much easier for your mind to visualise what's happening. I found one of the hardest things with psychic powers is getting your mind to overcome its natural rejection of what seems like magic. I think I mentioned before that self doubt makes everything much harder.*\n\n*You did, and it was good advice,* he replied gratefully.\n\nLooking at the pieces of metal he was using for his training, he tried lifting the third chunk of Invictium without any hand gestures. Despite knowing that it shouldn't make any difference, his mind still refused to believe that the metal fragment could just rise into the air completely unaided. He made a quick gesture with his right hand, and it lifted straight off the ground, then floated across the air to join the others.\n\nWith a wry chuckle, he said to Edraele, *You were absolutely right. It's bizarre how much of a difference it makes.*\n\nEdraele replied in a telepathic whisper, confiding in him, *I must admit I still rely on the hand gestures.*\n\n*Your secret's safe with me,* he replied with a smile, as he began to place images of the levitating objects in his mental compartments.\n\nSoon he had all six floating before him, and he lowered his hand warily, watching the metal chunks hover motionless in the air. At that moment Alyssa walked into the room, lithe and graceful as she headed over to join him. \n\n\"You're doing so well!\" she gasped in delight as she saw the levitating metal fragments. She gave him a beatific smile as she added, \"See, I knew you'd be good at this.\"\n\n\"I had a wonderful instructor,\" he replied for Edraele's benefit.\n\nThe Maliri woman laughed again which made him smile, and she said, *You're very kind, thank you. On that note, I'll leave you in Alyssa's very capable hands.*\n\n\"Yeah, I heard you making smalltalk with her,\" Alyssa said with a playfully arched eyebrow, as she watched him concentrating on Edraele's reply. She frowned as she added, \"But I wish I could hear the whole conversation. It's weird only being able to hear your side, and I'd love to be able to communicate with her directly.\"\n\nJohn thought about that, but he had no idea how they'd be able to accomplish it.\n\n*I'd really like that too,* Edraele thought to him. *When we're all reunited, we'll have to experiment together and see if we can work it out between us.*\n\nAlyssa had sat down next to him, her head tilted to one side as she listened to his thoughts, and tried to piece together the rest of the conversation. \"I'm always up for some experimentation,\" she smirked, as she gave him a flirtatious smile.\n\nHe laughed at her innuendo, then gathered the metal blocks together, and dropped them on the floor in a pile. \"Time to move on to psychic shaping now the expert's here,\" he said, with a grin at the blonde girl sitting next to him.\n\nShe nodded, looking authoritative, and said in a sombre voice, \"It's very tricky.\" With a playful smile, she continued, \"You have to melt them all together, then you just make them turn into whatever shape you want.\"\n\n\"Just like that, eh?\" he asked, seeing the mischievous glint in her eyes.\n\n\"Uh-huh,\" she replied. She leaned forward, and whispered, \"If you do well, I'll let you in on a little secret!\"\n\nAfter giving her a curious look, John concentrated on the cluster of uneven fragments on the decking in front of him. He brought both hands together in a clasping motion, as though he were moulding clay, and the alloy chunks clumped together in one uneven pile.\n\n\"Very good,\" she purred, \"now just melt them together.\"\n\nHe frowned and tried to do as she asked, exerting his will on the psychically responsive metal. The chunks trembled for a moment, then began to melt like ice-cubes left under the glare of the midday sun. The rough edges smoothed out, and he was soon holding a black sphere in the air before him. He stared at it in amazement, and as it span lazily in the air in front of him, thin white lines began to mar the glossy black surface. \n\nThe lines widened, growing larger as more appeared, and soon the glistening black sphere had turned a sparkling glossy white. He imagined a perfectly even cube in his mind, and the shiny white alloy quivered before forming the hard edges he had imagined. His psi-shaping complete, he let the block settle on the ground in front of him.\n\nAlyssa cheered raucously, making him grin happily with her unvarnished enthusiasm. \"That was fantastic!\" she exclaimed. Leaning over to kiss him, she stared into his eyes, and said, \"I'm very proud of you, you've been working really hard on this.\"\n\nHe flushed with embarrassment, not used to being the one receiving the praise. He laughed lightly, and said, \"My first piece of Johnium.\"\n\nThe blonde girl giggled, and said, \"No offence, but can we stick to calling it Alyssium please?\"\n\nHe grinned at her, and conceded, \"That does have a much better ring to it.\"\n\nThey smiled at each other, and Alyssa listened to his thoughts as he looked at her expectantly. She wagged her finger at him, and said teasingly, \"Uh-uh! I'll only spill my secret if you can... 'quad' shape it!\" Her lovely blue eyes sparkled impishly, as she added, \"Yeah, that's very appropriate.\"",
        "John laughed, and threw his hands up in the air in protest as he said, \"You had weeks to work up to that!\"\n\nShe shrugged unsympathetically, and said, \"Yeah, but you're a Progenitor, and I'm just a lowly Terran. Besides, Crystal Alyssium is harder to shape, so if you're going to be any use, you'll have to get up to speed pretty sharpish.\"\n\nHe quirked an eyebrow at her lack of sympathy, and said, \"It better be a damn good secret!\"\n\nShe gave him a wicked smile, then gestured for him to proceed.\n\nTaking a deep breath, he concentrated on keeping calm and centred, before raising his right hand and making the Alyssium cube float into the air. He focused his will on the metal, melting it with ease, and letting it roil in the air as a liquid metal orb. After it had spun through a couple of revolutions, he imagined it turning into a rectangular block, and it obeyed his mental commands, moving into that new geometric form.\n\nHe let it rest for a few seconds, giving the Etherite crystals time to harden into a resilient lattice. Once he was sure it had been successfully double shaped, he melted it down again. The metal was starting to get slightly more sluggish when he tried shaping it for a third time, as though it was fighting back against being manipulated in this way. His brow furrowed as he concentrated harder, and it solidified into a cube once more.\n\nAlyssa suddenly leapt to her feet, and cried out, \"Hold on a minute!\"\n\nHe watched her curiously as she looked around the Cargo Bay, before finally finding what she was looking for. With an imperious wave of her hand, she summoned over a piece of Crystal Alyssium armour plating for the Invictus, and it floated over to join them obediently.\n\n\"I've shaped hundreds of these bloody things,\" she grimaced, giving the armoured panel an unkind look. She looked down at him, and said, \"For extra bonus points, when you quad shape the metal, make it into that!\"\n\nJohn looked up at her incredulously, and complained, \"It's getting a lot harder now! Wouldn't it have been a good idea to practice that earlier?!\"\n\nShe gave him an encouraging smile, and said, \"You can do it, I have total faith in you.\"\n\nHe could hardly back down after she said that, so he studied the section of armour plate as it rotated slowly in front of him. \n\n\"That's right,\" she murmured. \"Try and memorise the precise shape. The slight curve, the exact dimensions, you'll find your mind will instinctively know how to copy it.\"\n\nJohn had a whole host of doubts about this, but he tried to shove them aside, and listened solely to her advice. When he was sure he had an exact replica of the armour plate in his mind, he looked at his triple-shaped Alyssium cube, and melted it down into a liquid metal sphere once more. He knew it would get harder attempting to shape it again, but he was shocked at how stubbornly the metal resisted his will. He gritted his teeth, and stared at it through narrowed eyes. \n\nHe shot a glance at Alyssa, and drew a little extra energy from her. She felt the slight pull, and smiled at him in encouragement. With a herculean effort, he hurled his willpower at the stubborn metal, and it begrudgingly began to lengthen and elongate under the mental onslaught. It stretched out at a torturously slow pace, but it obeyed his commands as he forced it to form into an exact replica of the Crystal Alyssium armour plating. When he was finally done, he let it clatter to the floor, and he collapsed on the Cargo Bay deck, labouring for breath.\n\nAlyssa was on him like a shot, kneeling next to him with her cerulean eyes wide with shock. \"I can't believe it! That was incredible,\" she gasped in wonder. \"I never thought you'd be able to triple-shape it without weeks of practice, then you go and knock it out of the park like that!\"\n\nHe laughed weakly, and when his breathing was steady once more, he pulled her in for a hug, and asked, \"So you were just play-acting? I thought you were being an unusually hard taskmistress.\" \n\nShe nodded, her expression one of awe, and she replied, \"I know -exactly- how fucking hard shaping that shit is.\" She shook her head in amazement and marvelled, \"Quad-shaping on your first go, that was totally awesome!\"\n\nHe cuddled her in his arms, enjoying seeing her look of open admiration, and he said, \"You were a good motivator, thank you.\"\n\nShe hugged him back with a happy grin on her face, then her expression turned lusty, as she asked him, \"Would you like to hear my secret now?\"\n\nHe nodded, then looked down as she pulled off his belt, and unbuttoned his trousers. \"What are you up to?\" he asked her in surprise.\n\n\"Trust me,\" she purred. \"You'll want me on my knees with your cock down my throat when I tell you this.\"\n\nShe stripped him off, then got him to sit on one of the ore containers as she knelt down submissively in front of him. She met his gaze, and stared at him as she slowly inched her way down his length. He groaned when she reached the base, and ran his fingers through her soft blonde hair as she hummed around his length, the vibrations feeling sensational.\n\nHe managed to keep it together long enough to gasp, \"Tell me this secret!\"\n\nAlyssa began to swallow, the muscles in her throat massaging him as she replied, *Irillith's thinking about letting you fuck her in the ass.*\n\nJohn stared at her in disbelief, and he could see her smile as his cock jerked in her throat. *There's no chance of that, she hated the idea!* he thought to her in shock.\n\n*Irillith's been pretending to be a good upstanding Maliri, but she's watched hours of you screwing us like that, and she's intrigued by the idea,* Alyssa replied, sucking on him lovingly. *Just think, you'll be the first and only man she'll let in there. You can be kind and loving, and break in that spectacular blue ass the right way. She'll love it so much, she'll give it up for you any time you like after that.*\n\nHe groaned wordlessly, his quad rising as he got turned on at a very rapid rate, Alyssa knowing exactly what to say to him to push his buttons. \n\n*I'll be there too,* Alyssa purred, ramping up the suction, and making his toes curl. *I want to suck on her clit, and make her cum with you stretching her ass. Think about her clamping down on you when she orgasms, just as you pump your cum into her.*\n\nThat was quite enough to tip him over the edge, and he yelled out as he came, blasting a huge load down her willing throat and straight into her stomach. He'd skipped any action that morning or lunchtime, and it was a tremendous relief to empty his quad as she sucked him furiously. When he was done, Alyssa let him slither out of her throat, and she grinned at him as he blinked at her in a daze.\n\n\"Good secret?\" she asked him mischievously. Without waiting for a response, she leaned forward and whispered, \"Please don't say anything to her, and let her come to you whenever she's ready. I wanted to let you know beforehand, so you can be supportive and reassuring, rather than shocked and horny.\"\n\nJohn laughed lightly, and helped her to her feet. Alyssa was a pro at carrying his heavy loads now, and she rose with effortless grace as she stood before him. He placed his hand on her swollen tummy, and said, \"You can count on me. I'll take good care of her.\"\n\n\"Good boy,\" she said to him with a contented smile, as he placed a tender kiss on her rounded belly.\n\n***\n\n\"So why are we heading to Deck Three, exactly?\" John asked as he stepped out onto the aforementioned level with Alyssa at his side.\n\nShe squeezed his hand with hers, and replied, \"I think it's to do with Faye's surprise. Calara asked that we all gather there for her debrief on the debris field wreckage.\" As they walked along the corridor, she nodded towards the first door on the right, and said, \"That one, opposite your training room.\"\n\nJohn hit the button, and waved her through courteously. She inclined her head in gratitude, then glided through the doorway and into the room. They were the last to arrive, and the others were sitting around on comfortable looking chairs in the big, empty room.\n\n\"You guys look like you had a good session,\" Dana smirked, looking pointedly at Alyssa's impressive new curves.\n\nThe blonde girl grinned as she ran her hands over her abdomen, and said with a grin, \"Oh yes, it was the first psychic-shaping session I've actually enjoyed!\" She glanced at John, and added, \"All innuendo aside, he was great. Quad-shaping on his first try!\"\n\nJohn took a theatrical bow as they applauded. He smiled at them, and said self-effacingly, \"In all fairness, I was working on the old Invictium alloy, which is a lot more responsive than Crystal Alyssium. I did find using Telekinesis much easier than learning to manipulate elements though, so all that practice time I've put in has really paid off.\"\n\nRachel looked intrigued, and she speculated, \"I wonder if there's a hierarchy to these abilities. Pre-requisites if you like.\"\n\n\"What do you mean?\" John asked her, as he and Alyssa walked over to take their seats. \n\n\"Well, Irillith needed to know how to use Astral Projection first, before she could use her Technokinesis. Perhaps being comfortable using Telekinesis is a precursor to elemental based psychic abilities?\" she postulated as she mused over their powers.\n\nHe laughed and said, \"So basically, you're saying I've been learning to run before I could crawl?\"\n\nShe smiled, then nodded as she replied, \"Essentially, yes.\"\n\n\"Sounds about right,\" he quipped as he rolled his eyes. He looked over at Calara, who had Faye fluttering at her side. Both of them looked eager to start, so he smiled at them and said, \"I hear you two ladies have something interesting to show us?\"\n\nCalara rose from her chair, and said, \"I was planning to show you the results of my analysis up in the Briefing Room, but Faye had the brilliant idea to set up a Tactical Holo-suite for exactly this kind of presentation.\" She glanced at the tiny AI at her side, and said, \"Can you start the simulation please, Faye?\"\n\nWith a sparkling smile on her diminutive face, Faye made a gesture, and the lights dimmed, until they were looking at a simulation of the Beta-Persei system. The view was centred on the metallic asteroid field which contained the R&D facility, but just as they recognised that landmark, she zoomed out the magnification. The image scrolled across space, stars twinkling in the background, until the view was repositioned on a Battlegroup of Terran Federation ships. \n\n\"Charles' Battlegroup,\" Calara explained, her expression grim. \"I recreated the battle based on the debris patterns and the final positions of all the wrecks.\"\n\nThey watched as the fleet of ships began to head in-system, spreading out into an attack formation as they moved to engage an as yet unseen foe. The vessels looked extremely lifelike, and had been modelled with a high degree of precision, even going so far as to show the flare of retrothrusters as the ships changed heading. \n\nThe Battlegroup consisted of eight modern cruisers, two light carriers, two dozen destroyers, and was led by a battleship tagged as the 'Heimdall'. As per Terran Federation doctrine, the destroyers spread out to make a protective picket line around the bigger ships. The Battleship spearheaded the formation, with four cruisers per flank, while the carriers were tucked away at the rear. Waves of fighters and bombers began to launch from the carriers, assembling into wings of strike craft, which held back, as though waiting for the opportune moment to attack.\n\nJade shook her head in confusion, and asked, \"Why would they move to attack such a huge number of AI ships?\"\n\nCalara gazed up at the simulation, and replied, \"Keep watching, and you'll see.\"\n\nThe Battlegroup moved forward with confidence, and as Faye zoomed out the magnification, they could see it was on a direct intercept course with the R&D base. The space station was centred in the belt, just as they remembered, hanging there serenely amongst the wide field of metallic asteroids. There were a number of ships in defensive positions around the massive research facility, and they were represented by a handful of red silhouettes tagged with question marks.\n\nJohn looked at the Latina for an explanation, and she said, \"I have no way of knowing exactly what those ships were, but there were definitely other ship classifications involved in this battle. Commodore Jansen must have felt confident he could defeat them, because he launched a direct offensive.\"\n\nShe turned to look at the simulator again, and they watched the closing ships with a feeling of rising dread.\n\n\"This is awful, it all seems so real,\" Rachel said, sounding unsettled. \"I just want to yell at them and tell them to get the hell out of there.\"\n\nCalara nodded sympathetically, and as the Terran ships closed on the asteroid field, Jade spotted movement on the asteroids. \"The hangars...\" she murmured quietly, transfixed by the unfolding scene.\n\nJust as the Nymph spoke, AI cruisers began to pour from the concealed Hangars in the asteroids. The field had gone from being a picture of quiet tranquillity, to coming alive with a teeming horde of AI controlled ships. The lean AI cruisers surged out of their concealed homes, looking like a swarm of angry hornets in search of an intruder. It was disconcerting to see the way they moved, carrying out their manoeuvres in perfect synchronisation, and making it quite obvious it wasn't regular Terran crews flying those vessels. The Battlegroup of Terran Federation ships immediately began to react, frantically forming into a defensive formation as the dozens of hostile vessels rushed towards them.\n\n\"Why don't they jump out!\" Rachel cried out in alarm. \"Can't they see they're doomed!\"\n\n\"They can't,\" Alyssa replied grimly. \"They're too far from the Nav beacon. The system's gravity wells are preventing them from executing an emergency hyper-warp jump.\"\n\nWaves of AI cruisers began to engage, hitting the line of destroyers with accurate Beam Laser fire. The Terran picket ships were overwhelmed by hit after hit from the orange coloured beams, and one after the other, the destroyers were blown apart. The Terran cruiser crews were highly skilled, and despite the daunting odds, they carefully focused Beam Laser fire on AI ships, stripping their shields then quickly switching to fresh targets. As soon as the shields winked out, their Heavy Cannons could go to work, and the powerful ordnance smashed into the grey Titanium plating with devastating effect.\n\nSix of the slim, older classification cruisers were blown apart in rapid succession, and when the AI fleet closed to short range to engage with Laser Cannons as well, the Heimdall opened up with its fearsome arsenal. The kilometre long vessel had deadly batteries of Beam Lasers, Heavy Cannons, and missiles, and the first salvo ripped apart four robotic cruisers in a matter of seconds.\n\nJohn found himself completely absorbed by the battle playing out before him, and despite already knowing the tragic outcome, he felt a surge of hope after witnessing the battlegroup reap a heavy toll on the AI ships. Sadly the tables turned swiftly, and as more AI cruisers closed the distance to point blank range, the Heimdall and her supporting cruisers struggled to coordinate their fire. The bomber wings began their attack runs, with the fighter escorts running interference, but the mass of Gatling Lasers from the closely clustered enemy ships met them with a lethal curtain of orange laser bolts.\n\nThey all watched in horror as the cruisers were mauled, the strike craft blown apart, and the light carriers quickly destroyed. The Heimdall held fast in a valiant last stand, but the sheer weight of incoming fire eventually took out its shields, and the mighty ship was slowly torn apart. It was like watching a proud stag being brought down by a pack of wolves, and they all felt a keen sense of loss when the valiant ship finally exploded. \n\nThere was deathly silence in the Holo-suite as they stared at the simulation of the vast debris field, now recognising the spread and distribution of wrecks from their brief glimpse of the real thing. The AI ships circled the battlefield, firing Gatling Lasers sporadically despite there being no Terran ships left to offer any resistance.\n\n\"What are they doing?\" Dana asked in a subdued voice.\n\nCalara looked bleak as she replied, \"Gunning down escape pods.\"\n\nThe redhead looked appalled, and she gasped in horror as she watched the AI vessels ruthlessly execute the survivors.\n\nRachel abruptly turned away from the massacre, and pleaded, \"Can you turn it off? I can't watch any more.\"\n\nFaye nodded, deactivated the simulation, and then brought up the lights again. Witnessing the loss of so many Terran ships, along with the slaughter of their brave crews had shaken the audience, and they stared at each other, feeling numbed by the disturbing imagery.\n\nJohn heaved a big sigh, then asked Calara, \"You're certain that's how the battle played out?\"\n\n\"There's a small margin of error based on my predictions for their firing accuracy. I would estimate perhaps four percent either way, but the debris patterns track the weapon impacts fairly accurately,\" she replied, her voice sober. \n\n\"How many ships did the AI lose?\" he asked, his eyes narrowing.\n\n\"Fifteen,\" she stated without hesitation. There was a brief pause before she continued, speaking cautiously now, \"I don't know their precise order of battle, but Irillith's estimation of approximately fifty AI cruisers does tally with the rate they were able to eliminate each of the Terran vessels. Charles mentioned that the battlegroup destroyed two cruisers en route to the base, and with the four we eliminated, we have to assume that there are at least twenty nine cruisers under Nexus' control.\"\n\n\"Fuck me...\" Dana muttered under her breath.\n\nCalara continued relentlessly, \"Nexus also has whatever small fleet of ships lured in Commodore Jansen and his battlegroup. Based on the confidence with which he initially engaged, I would estimate a fleet of no more than half the fighting strength of the Terran battlegroup. That could still mean perhaps five more cruiser class vessels and some kind of command ship.\"\n\n\"Thirty five ships,\" John stated, his voice sounding hollow, as he stared off into the distance. He realised the girls were all watching him intently, so he pulled himself together, and did his best to radiate confidence. His tone was strong and vibrant as he said, \"Alright then ladies, we know what we're up against which means we can plan our attack. How do we defeat a fleet of that size?\"\n\n\"Smash that Nexus fucker!\" Dana swore vehemently. She glanced at Irillith and asked, \"If we can wreck the command ship, that should knock out all the rest, right?\"\n\nThe Maliri girl looked pensive as she replied, \"Nexus is intelligent, and it's quite possible that it might have predicted that vulnerability. It might have moved the primary server to one of the cruisers to just blend in with the rest, as a bigger vessel would be a more obvious target. Then again, it might have installed backups in each of the smaller ships, making a distributed network. If it's done that, we'll have to destroy every last ship to stop it.\"\n\nFaye fluttered in the air looking agitated, and John looked her way, saying, \"Go ahead, Faye. I respect your opinion, and If you've got any insights for us, I want to hear them.\"\n\nShe looked at Irillith, and said respectfully, \"I'm really sorry, I don't want to contradict you, Creator, but I don't believe Nexus would think that way.\"\n\nIrillith smiled at her and said, \"That's alright, I'm hardly an expert on rampaging Progenitor AI. What do you think it would do instead?\"\n\nThe four inch tall sprite took a big breath and said, \"I've been reviewing my logs of everything we know about Nexus. It hates Terrans, it views them with contempt, and we think it might be some kind of failsafe to end the Mael'nerak's genetic experiment on Terra. It's spoken about wanting to achieve Unity, and a need to fulfil its mission. Finally, it took its time to slaughter every Terran survivor in that battle, but it's been ignoring Terran civilian ships on the way to Terra.\"",
        "John listened carefully as she spoke, and said, \"That seems like a comprehensive summary. What's your conclusion?\"\n\nShe glanced at him, and looked guilty as she admitted, \"I created a subroutine to simulate the way Nexus thinks while guided by its primary directives. I executed it fifty thousand times, and the conclusion was the same for all but one hundred and seven outcomes. That's a zero point two percent margin of error.\"\n\n\"You've been running a subroutine that hates Terrans?\" John asked her, sounding worried.\n\nShe nodded, but blurted out in a rush, \"I deleted it, I swear! Irillith can check to verify I'm telling the truth.\" \n\n\"Alright, and what was your conclusion?\" he asked her with some trepidation.\n\nFaye was calm and confident as she replied, \"I believe Nexus decided to take advantage of its victory over the Battlegroup to launch a counter attack. I think it already had little respect for Terrans, and the destruction of that fleet will have reinforced that opinion. It would only take the precautions that Irillith mentioned if it felt it was in any danger from Terran Federation forces, and I'm sure it's well aware of the Dragon March offensive stripping away the defensive fleets around Terra.\n\nIf I thought like Nexus, and viewed Terrans with contempt, I would move my primary hardware to the toughest ship under my control, just to avoid potential mishaps on the journey. I would only stop to eliminate any surviving Terrans after that battle if I was still waiting for something at that point, perhaps for construction to be completed in the shipyard. However, once I launched my fleet towards Terra, I'd ignore all distractions until I reached the Sol System. Once I was there and had achieved Unity, whatever that means, I'd proceed with my mission to end all humanoid life on Terra as quickly as possible.\"\n\nAs she reported her findings, Faye was careful to do so in an unemotional voice, to make it clear that she definitely didn't harbour any feelings of hatred towards Terrans. Unfortunately the clinical way the purple sprite did so, made her conclusions all the more disturbing. After all, she was discussing the potential genocide of over ten billion people.\n\nIrillith didn't have the same sense of connection to the Terran Federation as John, so while he looked at the purple AI construct in alarm, she nodded with a smile on her face. \"That's an excellent piece of analysis Faye,\" she said approvingly. \"Your conclusions all fit with everything we know about Nexus so far.\"\n\n\"Thanks!\" Faye replied, looking delighted, back to her chirpy self once more.\n\nHer cheerful tone snapped John out of his startled state, and he studied Faye as he said, \"I agree with Irillith, and I think you're probably correct. In that case, we have to hit the biggest ship Nexus has, and destroy the Primary server, which should shut down its entire fleet in one go.\"\n\n\"While being shot at by thirty five ships?\" Calara asked him, her expression dubious. \n\nDana nodded, and said, \"The Invictus is tough as old boots, but we can't take that kind of a beating.\" \n\nJade grinned at them, and said, \"I'll just have to dodge a lot.\"\n\nJohn smiled, and said encouragingly, \"That's the spirit!\"\n\nCalara gave him a worried glance and asked, \"What happens if we do manage to destroy the command ship, but the Nexus primary isn't on board?\" \n\nHe looked at the tiny purple fairy that was fluttering in the centre of the room, and said, \"I'm going to put my faith in Faye. I think she's correct, and we just have to make sure we hit the right target.\" He turned to look at the girls, and continued, \"We're stuck in an impossible situation, with ridiculously high stakes at play. We can't predict everything in advance, and we'll have to just react the best we can when we catch up to Nexus. I have faith in all of you, not just Faye, and I know we'll be able to save Terra.\"\n\nHis bold confidence in them settled the girls down, and they smiled at him, looking greatly relieved. Only one of them didn't share that sense of relief, and that was because Alyssa knew what he was really thinking. \n\nHe looked at Calara and said, \"Thanks for all your hard work on this. Knowing what we're up against will make a huge difference.\" The Latina smiled at him, and he turned to Faye next as he added, \"The Tactical Holo-suite was a brilliant idea, well done.\"\n\n\"I'm so glad you liked it!\" she said joyfully.\n\nHe nodded, but looked grave as he said, \"Please don't take risks like that Nexus subroutine again, not without consulting Dana or Irillith first. I want you to promise me you'll be more careful in the future. We would have had no way of fixing you if you'd been corrupted by that program.\"\n\nFaye looked chagrined, and she replied, \"I'm sorry, I just wanted to be helpful. It was the only way I could think of to give us a good idea what Nexus was up to. I promise I won't do it again.\"\n\n\"Thank you,\" he replied, smiling at her. \"I still want Irillith to check you over though, just to be on the safe side.\"\n\n\"Sure!\" Faye agreed immediately.\n\nHe rose from his seat, and said, \"I believe we have a new laser weapon to test? Shall we proceed to the firing range?\"\n\nDana grinned at him, and sprang to her feet as she exclaimed, \"You're going to love it!\"\n\nHe laughed, and gestured for the girls to proceed as the redhead skipped towards the doorway. Alyssa stood up slowly, and he waited for her as she glided over to join him. He could immediately see the concern on her face, which she was no longer bothering to hide, now that the girls had left the room.\n\n*You think we're fucked, don't you?* she asked him, her tone neutral.\n\nHe dropped his upbeat facade, finally letting his worry show on his face, and he opened his arms to her. She immediately moved to him, and he wrapped her in a tight embrace.\n\n*You heard Calara; thirty-five to one!* he replied, sounding deeply troubled. *Every fibre of my being wants to turn the Invictus around and get you girls as far away from this shitstorm as possible.*\n\nAlyssa looked up at him, and asked in that same neutral tone, *So why don't you then? We could run to Maliri Space, bolster Edraele's fleets with our best tech, and then smash any AI that tried to come for us.*\n\nHe stared into her piercing Cerulean eyes, his face anguished, as he replied, *I can't just abandon ten billion people. I hate to expose all of you to this much danger, but we have to try to stop Nexus and save Terra.*\n\nHer face lit up with a lovely smile, and she said, *I know, and that's one of the reasons why I love you.* Paraphrasing his moral boosting speech she added, *Don't give up hope, I'm putting my faith in you, too.*\n\nJohn laughed and flushing with embarrassment said, *God, I hope it didn't sound that corny when I said that to the girls.*\n\nShe winked at him, and said, *They all knew what you meant, don't worry.\"\n\nHe grinned, and squeezed her tighter as he said, *Thanks, beautiful, you always make me feel better.*\n\n*I love perking you up,* she replied as she enjoyed feeling his arms around her.\n\nSomeone clearing their throat impatiently drew their attention to the door, and they saw Dana waiting for them with a frown on her face. \"Come on you two! Don't you want to see the new laser rifle?\" she asked incredulously.\n\n\"Sorry Sparks,\" John apologised, releasing Alyssa from his grasp. \"I can't wait to see what your devious mind has come up with now!\"\n\nDana bounced on her toes, a beaming smile on her face, and said, \"It's my finest work yet!\"\n\nAlyssa slipped her hand into John's, and they strolled out of the Holo-suite, following after the incredibly excited redhead. They watched Dana disappear from view as she dived into the grav-tube, and he smiled at Alyssa as they walked after her at a brisk pace. Stepping into the red gravity field, they floated down to Deck Seven, and found the redhead waiting for them at the door into the firing range. She nipped inside when she was sure they were following, and John stopped politely to wave Alyssa through before following her inside.\n\nThe girls were waiting for them there, standing and watching Dana with amusement as she fidgeted impatiently. John was about to make a light-hearted joke, but his jaw dropped when he saw the weapon beside her. She had placed the new prototype laser weapon on the table, propped up on a stand to display it more prominently, and he gaped at it in awe.\n\n\"Holy fuck...\" Alyssa managed to gasp similarly enthralled.\n\nThe rifle was big, at least fifty percent longer than the old Punisher railgun, but where that was brutal and menacing, and very definitely Terran in construction, this new weapon was something else entirely. It had the look of a bullpup weapon, just as the others had been, but there were no obvious magazine slots. The barrel and housing of the weapon were glossy white, constructed entirely from Crystal Alyssium, and it caught the light, gleaming with a soft radiance.\n\nIn the broad stock of the rifle was a large circle, dark around the edge with a white disc in the middle, set just behind the grip. The trigger guard and hand grip were moulded into the frame of the gun, in keeping with the sleek and refined aesthetics of the weapon. The barrel itself seemed to be made up of an upper and lower half, separated by a black line that led from the circle in the stock right up to the muzzle. Finally, there were vents on the upper barrel housing, and six small, smooth spherical plates evenly spaced along the length of the lower housing.\n\nDana's nervousness had evaporated now, and in a calm, steady voice, she said, \"May I present the Justice Laser Rifle.\" \n\nShe turned to her side and pressed a button on the side of the weapon, then stepped back to give them a clear view. The button flashed twice, pulsing with a soothing green radiance, and there was a soft hum as the Justice rifle came to life. A blue light flared up on the far edge of the disk at the back of the gun, then suddenly split in half, blazing around the circumference of the circle. The twin lights left two bright trails around the disc before reuniting and surging up the length of the barrel. \n\nThe rest of her audience hadn't seen the weapon power up yet either, and she smiled with satisfaction as everyone stared, looking equally impressed. \"I've incorporated every piece of relevant tech we've collected so far into this rifle,\" she explained to the onlookers. \"Miniaturised power core from the Ashanath built into the stock, Kintark heatsinks for cooling, Maliri focusing crystal for the lenses, and my ultimate material to make the barrel extremely durable and resilient to overheating.\"\n\nShe picked up a Paragon helmet from the table, overlooked by her audience in their excitement, and she held it towards John with an inviting smile. \"Want to give it a try?\" she asked him indulgently.\n\nHe took the helmet from her, and carefully pulled it on, noticing while he did so that Dana was putting on her smart-linked glasses again. He turned towards the Justice rifle, his heart racing in his chest, and carefully lifted it off the stand. A second light on the grip flashed green, once the built-in scanner had read his DNA.\n\n\"It's so light!\" he marvelled, expecting the big weapon to weigh much more than the Punisher rifle. In fact it probably weighed less than half as much.\n\nDana gave him a sly smile, and pointing towards the spherical plates built into the barrel, she said, \"Maliri anti-grav devices. The Crystal Alyssium frame is light anyway, but those drastically reduce any perceived weight of the weapon.\"\n\nAs he held the rifle, he noticed that the ammo counter on his HUD had disappeared, and was now replaced with the number one. He walked over to the firing range, and asked, \"I see the ammo counter has gone. What's this new number?\"\n\nShe grinned at him, and replied, \"The HUD display will switch depending on the type of weapon you're holding. When you're using a Justice Laser rifle, you effectively have infinite ammo, but you have to watch the heat levels instead. If the barrel and focusing mechanism get too hot, the safety overrides will kick in and won't let you fire again until the heat has been vented.\" She walked over to him, standing on tiptoe so she could look over the rifle, and pointed at a sliding selector switch just above the hand grip. \"See that switch?\"\n\nJohn tilted the rifle to take a closer look at where she was pointing, and said, \"Yeah, I see it.\"\n\n\"You can use your thumb on that bar, or change it via the helmet HUD, whichever you prefer. It controls the aperture on the muzzle, and the number represents the power of the laser bolts you'll be firing. The higher the number, the stronger the intensity. More powerful shots generate greater heat, so you'll have to spend more time waiting for the heatsinks to lower the temperature,\" she explained patiently.\n\nDana stepped backwards, giving him plenty of room, and he raised the rifle to his shoulder at the ready position, and sighted down the range. She had set up a variety of target dummies for him to aim at, with a standard hard-foam humanoid target on the left, and a mocked up Drakkar in the middle, hiding behind a single thin panel of Titanium armour plating. Finally, on the right hand side was a robotic chassis with several thick Titanium plates protecting a hard-foam target. The dummy was propped up on a blocky-looking metal rectangle.\n\n\"So what's all this?\" he asked her, nodding his head towards the different target dummies.\n\nShe rubbed her hands together eagerly, and replied, \"Okay then! The first one is just a regular target dummy, but the hard-foam it's constructed from does a good job of modelling a Terran body's resilience to weapon hits. Why don't you give the Justice rifle a try?\"\n\nHe placed the targeting reticule right in the centre of the dummy's chest, and holding his breath he carefully squeezed the trigger. The Justice rifle murmured, \"Psshew,\" but while the sound accompanying the shot was muted, the bright-blue laser bolt was anything but subdued. The shot hit the dummy in the torso, and burned a fist sized hole straight through the target.\n\n\"Alright, now hit it with full auto,\" Dana urged him.\n\nJohn aimed at the dummy again, and held the trigger down, just as his beautiful young gunsmith had instructed. A relentless stream of blue laser bolts blasted into the target dummy, firing in rapid pulses of energy. He strafed the shots all over it, melting off limbs, and then neatly searing the dummy in half. There was almost no recoil as he fired, letting him continue to place extremely accurate shots even when firing on fully automatic.\n\nWhen he released the trigger, the point where the body had been chopped in half was glowing orange, and smoke was rising from the melted chunks on the floor surrounding the devastated target. More interesting however, was the fact that the heat levels had barely risen at all, with the heatsinks easily cooling the barrel to keep the temperature stable.\n\n\"So I could keep firing like that non-stop?\" he asked the redhead, his eyebrows climbing.\n\nShe grinned at him, and said, \"Yep! That would have been incredibly useful against the Fulmanax, but most other enemies we've fought have been armoured to some degree.\" Pointing at the middle target, she added, \"Try shooting that one now, using the same setting.\"\n\nJohn aimed at the titanium plating, and when he squeezed the trigger, the shot did cut through the armour plate, but the damage to the dummy behind was greatly reduced. He dialled up the power setting to two, then glanced at Dana, who nodded her approval. When he fired again, the sound was louder, and the bolt from the Laser rifle flared with much more intensity. He blasted a big hole through the metal plating, and the shot hit the dummy in the arm, melting through its elbow.\n\n\"Unload on it, and watch the heat levels,\" she suggested with a smile.\n\nHe inflicted identical levels of devastation on the second dummy that he'd wrought on the first one, punching big glowing holes through it, and cleanly melting off limbs. The heat indicator began to slowly rise as he savaged the target, and he stopped firing before it would have to vent automatically. \n\n\"I wouldn't normally fire non-stop like that, but it was very impressive,\" he mused, as he watched the temperature bar quickly lower back to normal.\n\n\"The option's there, just in case we need it,\" Dana replied with a shrug.\n\nIrillith stared in shock at the smoking remains of the target dummy, and exclaimed, \"I can't believe how much more powerful it is compared to my old laser rifle! Mine used to do comparable damage to the level one setting, but I'd have to keep pausing to let it cool down.\"\n\nDana gave her a playful wink, then pulled a Punisher pistol from the holster around her waist. \"Now, keep an eye on the next target,\" she forewarned her audience.\n\nJohn looked down the range, and studied the target dummy in the last lane. It was sitting on that mysterious rectangular object, and was protected by a couple of thick sheets of Titanium plating. He'd seen the Punisher pistol effortlessly penetrate armour this thick before, so he expected the twenty-millimetre slug to smash straight through the layers of plating. \n\nDana aimed at the right side of the dummy then pulled the trigger, and the pistol barked, \"VrmPkaow.\" However, the hyper-speed slug seemed to bounce of some kind of invisible field, and the slug was harmlessly deflected off to the side. The twenty-millimetre round smashed into the thick layers of armour plating which lined the sidewalls of the firing range, leaving a huge crater. There was a slight rippling in the air in front of the target dummy for a few seconds afterwards, then the vibrations dissipated, and everything looked normal again.\n\n\"That behaved just like the shielding on that spider-bot!\" Jade exclaimed in surprise.\n\nJohn looked to Dana for confirmation, and asked, \"Is she right? Is it shielded?\"\n\nDana grinned, and said, \"Yep! Although the Punisher rifles have incredible stopping power, especially against armour, that's fuck-all use if we can't even hit the target.\" Glancing at the Laser Rifle in his hands, she added, \"Try shooting it with the Justice rifle.\"\n\nAiming for centre mass, he opened fire, and the laser bolts punched into the shield, causing it to flare brightly. Blue rings began to pulse out around the protective dome, and in a matter of seconds it flickered and died, letting the staccato stream of laser fire burn into the armour plating. Unfortunately the armour plating was thick, and it prevented the shots from penetrating. \n\nHe stopped shooting and frowned at the target, disappointed to see that he hadn't been able to punch through the dummy's simulated body armour. It was pock marked with charred gouges, but the dummy was completely unscathed.\n\nDana saw his frown, and winked at him, saying, \"Now crank that bad boy up to three!\"\n\nHe chuckled, but did as she asked, pushing up the power selector switch until the number three was clearly displayed in his HUD. He aimed at the heavily armoured target, and lightly squeezed the trigger. A thick blue laser bolt blasted out of the rifle, and instantly breached the armour plating, melting a glowing fist sized hole through the Titanium. The shot went on to burn straight through the dummy, setting it on fire around the smoking crevasse in its chest. The heat indicator in his HUD spiked significantly, so he tapped away on the trigger, only firing in short bursts.\n\nThe dummy was soon reduced to a smoking ruin, and he stopped firing to let the heat vent out. He studied the charred wreckage in the firing range, then turned to Dana and grinned. \n\nShe laughed when she saw his expression, and said, \"Yeah, a man after my own heart. Pretty fucking awesome, right?\"\n\nJohn looked down at the glorious piece of destructive art he was cradling in his arms, and said, \"Dana, you were right; this is your finest work yet. Infinite ammo, no recoil, can take out shields, and can punch through thick armour. Fucking awesome sums it up perfectly!\""
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "orgy",
        "harem",
        "artificial intelligence",
        "alien11111",
        "psychic",
        "cyber realm",
        "swallow",
        "cum inflation",
        "nexus"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-59"
}