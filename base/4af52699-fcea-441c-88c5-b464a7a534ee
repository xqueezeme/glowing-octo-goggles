{
    "title": "Rag Doll Ch. 04",
    "pages": [
        "Thanks again to Mriceman1964 for his view of the real world, and to Firefly for her ability to tease the better part of me into whatever story I tell.\n\nThis brings Nick & Ashley's story to a close, and I hope you enjoy it as much as I enjoyed writing it. If you liked it, please rate it, if you didn't then please tell me why!\n\nBB1958\n\n__________________________________\n\nI sat huddled against the bathroom wall, the cold tiles feeling frigid against the heat radiating from my face. My throat burned, and my sides ached from vomiting so long and so hard. I couldn't think straight, except to home in on that one huge, horrifying fact. Ashley had been raped, violated, and abused, and it was no impulse crime, no isolated opportunist attack on a defenceless girl; it had been planned, masterminded, set-up; that sick, sick fucker, what kind of mental state did you have to be in to do something like that?\n\nI could hear Mum crying, weeping hysterically as David tried to console her and calm her down, and I thought briefly that it should be me comforting her, but I couldn't bring myself to stand, walk in there and see her face, not knowing what I did now. Now I wanted to kill someone, at last I felt the urge to truly hurt someone, to keep on hurting them until they were past all pain.\n\nBarbara, my real Mum in all but fact, the one person who'd kept me sane as she brought me up, had unveiled what my father had done, how he'd plotted and planned and carried out that cowardly, evil, bastardly act for no reason other than to salvage his own ego. Barbara had told us how he did it, sent Mum all the details she could find, and then she'd died; the postmark on the envelope was the day I was busily getting my new passport. I was preparing for a new life, and she was losing hers. \n\nI sat bolt upright as a horrifying thought shot through me; dear God, was this why she'd died? The thought of that was too terrible to contemplate, and I heard a low moaning; it was a while before I realised it was me, hovering on the edge of hysteria. She'd died after telling Mum the truth, had she died because she'd told Mum the truth, had she died for helping me come here? I begged God, Yahweh, Buddha, anyone or anything who was listening; please not that, don't make it my fault, please don't let her have died because of me, not after all she'd done for me, anything but that...\n\nI dropped my head down to my hands and cried for her, for what I was sure I'd brought on her, and swore again the same oath I'd sworn in London, after I'd seen the news of her death. I swore that I would give him a lifetime of pain and blood and suffering for all he'd done. I swore I would be there to shove the knife in him, and when I'd stared into his eyes, and seen him recognise me and know who had stuck that knife into him. Then I was going to twist it, and twist it again, and cause him pain that no prayers to God, man or devil would release him from. \n\nMum had said she was glad I wasn't the man my father was, but now I knew she was wrong because I wanted to do things to him that only a sick, depraved, evil rat-fuck like him would be capable of. If I was my father's son, so much the better, I would hurt him in ways only he could devise for what he'd done to me and mine, to my Ashley, to my Mum, and most of all to the one I had always loved like a mother. \n\nI stared into the white tiled wall, seeing Barbara's face, needing her so much it was a physical pain locked in the base of my throat, trying to hear what she was saying to me, trying desperately to recapture the sound of her voice, her laughter, but my mind's eye continually turned to horrific fantasies of how it had been for her at the end, what he'd done to her, the woman I had loved since my earliest childhood, and who'd loved me back unconditionally, who'd made me her own, and had finally made me leave her at the mercy of that evil, sadistic...\n\n\"Nick! Nick, where are you?\"\n\nI came back to reality with a bump, all the revenge fantasies vanishing on hearing a male voice calling me. It took a few seconds before I recognised it. Dr. Nixon, it was Dr. Nixon. Mum!\n\nI scrambled to my feet, and staggered as a sudden wave of dizziness rolled over me.\n\n\"I'm...here, I'm coming...!\" I croaked, my throat burning and rasping from the acid vomit I'd been spewing out, and I realised I needed to wash my mouth and clear my head of the horrible taste and smell of what I'd been doing. I also splashed my face with cold water, trying to revive myself and clear some of the fog from my brain.\n\nFinally feeling a little better, I stumbled back to the living room, to find Mum still huddled against David, and a small part of me thought how natural she looked being held by someone again. But the memory of what I'd read returned when I saw that damned, hateful, horrifying letter on the table in front of her. Barbara had spoken to me one last time and what she'd told me had destroyed what remained of my old life, filled me with rage and nausea, and given me one more reason to hate that hell-bastard I called a father. \n\nI knew what I had sworn was never going to happen; people like me, like us, never get to take revenge or plot payback, we can only fantasize about it, and that knowledge gnawed at me as well. We would have to live with this knowledge forever, and that son of a whore was going to live a life of freedom and ease, never paying for what he'd done, happily giving us the finger from 3,000 miles away.\n\nI squatted down next to Mum and put my hand on hers. She jumped like she'd been burned, her eyes flicking open and seeing me. \n\n\"Nicky, how could he...how...what...?\" she stumbled, her fingers twining in mine as she squeezed our hands together. She was still near tears, as she looked from me to David and back again.\n\n\"She never did anything...!\"\n\nI didn't know what to say; boasting about what I'd do to him was a hollow waste of time and wasn't going to undo this serpents tangle, and all I could do was lean my forehead against her arm to show her I was with her, that she wasn't alone here. The sight of her in distress was making my eyes well-up too, and I was still having trouble believing a man could store up that much hate and rage to commit such an ungodly, diabolical act against an innocent girl.\n\nDavid was reading the letter again, a look of profound disgust on his face as he absorbed the full nastiness of what Barbara had revealed. Suddenly he looked keenly at me; obviously something had struck him. \n\n\"Nicky, what date was this letter sent, please, check the postmark...\" \n\nI didn't need to, I'd already seen it.\n\n\"Last Friday morning, it's time-stamped. And yes, Barbara killed herself that evening, after she posted this. So what, how does that help?\" I asked dully, crushingly aware that we were helpless to do anything about it, people like us don't have the resources to make something of a mess like this and so we just had to live with the injustice of it, especially Ashley, the one person in all this who couldn't possibly have roused any kind of ire in that man and yet she'd paid a price no-once should have had to pay.\n\nDavid looked thoughtful. \n\n\"Nick, I have a couple of friends with the FBI, I think they should see this; this looks like something that should be investigated properly, by the federal authorities. Julia, can I take this with me? I promise I'll keep you fully informed whatever happens.\"\n\nMum nodded agreement, and I shrugged because I felt deep-down inside that nothing was going to fix this, and that smug bastard hiding 3,000 miles away in England was going to get away with this scot-free. \n\nMum spoke up, talking to David and me. \n\n\"Nicky? David? I don't know if anything will come of this, so please, please, don't let Ashley know about this; that poor child's had enough to deal with without handing her any false hopes or pretending that this is going to come out right, so just keep this between us, OK? We let David's friends do what they can. In the meantime, life goes on as normal. Will you both promise me you won't say anything until something can be done about all this?\"\n\nI exchanged glances with David, but Mum was right; the last thing I wanted to do was rake this over for Ashley all over again, but I certainly wasn't happy about keeping secrets from her. If David's friends could swing a way to make that bastard pay for what he'd done, then I would be the first one to tell her, let her know that she had some hope of justice, but until then I would keep silent.\n\n\"I...promise, mum, I won't say a word until it's time to tell her. But I get to tell her, OK? If we have a way to drag that sick bitch's bastard over here and stuff him in a hole forever, I want to be the one to tell her, so she'll have no doubts as to how I feel about him. Agreed? \"\n\nMum nodded, her hand tightening on mine as she did, and David nodded as well, sealing our conspiracy. I really hated the idea of basically lying to my girl; even if I was lying by omission, I was still lying, but I hoped she'd understand that we'd been trying to do something about it. It would be so much worse if she found out that we'd known, but had done nothing...\n\nDavid stood up, folded the papers and documents Barbara had sent and slid them back in the envelope.\n\n\"Nick, as you and I were going for breakfast, for the sake of normalcy I think we should go do that, and I think you should join us, Julia; let's make a start on getting everything back to normal as quickly as we can.\"\n\nI could see she wasn't really in the mood, hell, neither was I, but I understood that we had to try and make things look normal again. Mum and I would carry this if it meant Ashley didn't have to. She forced a thin smile, trying to maintain the charade. \n\n\"This wasn't the build-up to a date I was anticipating, but yes, I think I'd like that...\" \n\nWe went to breakfast at a diner David knew, false smiles pasted on our faces, pretending that there was nothing wrong in our world, working hard at letting this all crust over so we wouldn't give ourselves away. It was going to be a hard charade to carry out; I can't lie to save my life, and I really didn't know how I could keep this from her for very long; only time would tell.\n\nDuring breakfast, David asked me to come with him that afternoon when he went to see his friends, as he wanted to take me to meet his friend with the specialist European car repair shop. Mum would collect Ashley from school, telling her I was with David and I'd gone to see a man about a job, as had been the plan this morning before the world caved-in. Hopefully, if I was offered a job, I could be happy and off-edge enough to not think about what kind of day I'd really had, and Ashley would remain none the wiser. It was a thin hope; she was so in-tune with me she could almost read my mind, but I held on to it.\n\nAfter he dropped Mum back at home, David asked me if I could talk with him, in private. I agreed, and so we drove back to his house, where we had a long discussion about my father, what kind of man he was, what my brothers were like, and my life with Barbara. As we talked, I could feel myself uncoiling inside. Telling this man about the life I'd had before I came here, about school, about England was almost therapeutic, relaxing, even, and I warmed to him even more. His penetrating wit and warm sense of humour were a delight, and I found myself comparing him to my father and finding no points of comparison. I know now what he was doing, but right then I was drawn to him, not understanding his motive for drawing me out but feeling better for the experience. He'd said to me before he was no therapist; I think I'd have argued that point with him now.\n\nEventually, after several coffees and a long, searching, and invigorating talk he dropped me back home, my spirits considerably lifted, reminding me that he would be picking me up at two o'clock to drop the documents off at the FBI then we would go to meet his friend.\n\nWhile he was dropping me off, he had another, brief chat with mum, and whatever he said seemed to have lifted her spirits considerably by the time he left. Mum actually smiled at me several times; it appeared David was good for her too...\n\nMum and I had a light lunch and were just clearing the remnants when David arrived. Mum looked suddenly worried again, but David reassured her that all he was doing was taking those hateful documents to his friends, and they could decide how to proceed; he and I were focusing on landing me a job, so not to worry, and we'd see her later that afternoon.\n\nDavid's friend, Mark was a true Brit-car enthusiast, and his shop, Mark One Auto-Sport, was a mecca of classic British roadsters. Scattered around the shop were a selection of MG A's and BGT's being stripped and refurbished, an original Mini Cooper S with rally roundels side-by-side with a pristine Triumph Stag and a stunning silver TVR Cerbera. In addition, a Morgan 4/4 with the Ford Germany Zetec engine, and several older Jaguar's were in various stages of repair. My eyes were drawn to a beautiful Caterham Seven in the classic Lotus livery of British Racing Green with the yellow nose-cone, and Mark followed my gaze.\n\n\"She's a beauty, isn't she?\" he asked me, and I grinned back at him.\n\n\"This is a customer vehicle,\" he said, \"but one day I'm going to get myself an original Lotus 7, with the Colin Chapman badge, just so I can say I own one; then let's see David lord it over me with that Bristol of his!\"\n\nWe talked about what I'd done in college, the manufacturer certifications I had, and the specific diagnostic skills I had learned, and he appeared satisfied.\n\n\"OK Nick, I think you have what I need. I can't start you as a Senior Technician, so I'll make you a deal; you sit out the probationary period as Junior Technician and study for your ASE certification, at my expense, and we'll talk about advancement after your probation is up. The money's not that great to start with, but it'll get better if you show me what you can do. Deal?\" \n\nI looked over at David for a cue, and he smiled and nodded slightly, so I grinned.\n\n\"When can I start?\"\n\nMark grinned back.\n\n\"Bring your Social Security documentation as soon as you get it, but I see no reason why you can't start...a week Monday? That should be enough time for all your paperwork to be finalized. I have a couple of MG SRV8's and a 1986 Esprit S3 HCi due in for servicing about then, so they're yours. Welcome aboard!\"\n\nI was grinning like a pumpkin; I had a job! \n\nMark walked me around the shop, and introduced me to the other technicians, who were intrigued at the idea of having an Englishman working with them, and I had to explain several times I was an American, brought up in England, which they seemed to think was odd; if I was American, why did I sound so British...? That aside, they were a friendly bunch, and genuinely welcoming, and I even got to potter around with a couple of them inside the engine bay of a lovely Jaguar XJS while Mark talked to David; I was looking forward to working with them. \n\nAfter washing up, David drove us to the FBI building on McCarty Avenue, and introduced me to his friend, Special Agent Mike Walker. After a short preamble, David handed over the documents Barbara had sent us.\n\n\"Mike, this arrived from England this morning. Nick's stepmother sent this to him last week; she sent Nick to London to escape his father, and the next day she was dead, apparently she took her own life the same day these documents were mailed, last Friday afternoon, in England. She and Nick were badly beaten by his father the night before, which is why he was sent away. Nick, do you mind...?\"\n\nI stood up and unbuttoned my shirt, pulling it up at the back so Agent Walker could see my back. I heard the sharp intake of breath as he surveyed what that man had done to me.\n\n\"Jesus Christ, what the fu...!\" I heard him mutter under his breath. \n\nDavid quickly checked my back and told me to do my shirt up, before turning to the FBI agent.\n\n\"His father did this to him five days ago. He abducted Nick when he was a small child and took him to England, and Nick only returned a few days ago when he found out where his Mother was. This is the kind of man we're dealing with here, Mike, and I have to be honest, the coincidence of Nick's stepmother mailing these documents to Nick's mother, his ex-wife, and then dying the following day is stretching my credibility to the limit. Do me a favor, please; ask the police in England if you can what their investigations into Barbara Davies' 'suicide' turned-up, if anything? I just have a bad feeling about this, and from what I've seen in those documents, something bad and very dangerous is going on here; 'by the pricking of my thumbs...', you know what I mean?\" \n\nAgent Walker nodded slowly. \n\n\"I'll pass this on to Alan Dubowski, he's the Special Agent in Charge here in Albany, I think he's definitely going to want to see this; he can get this moved up to a higher level if anyone can. Leave this with me and I'll see if I can get some quick action on it.\"\n\nWe stood up to leave, and Agent Walker smiled at David.\n\n\"Please, give my best to Judy. How's she doing these days?\"\n\nDavid grinned back.\n\n\"Judy's...Judy, what more can I say?!\"\n\nAgent Walker grinned even wider.\n\n\"I heard that! One day either she'll be working with us, or her picture's gonna be on that wall out there with a reward notice, and I wouldn't want to bet which one it's going to be!\"\n\nDavid laughed out loud, and we took our leave of his friend, an intern escorting us to the lobby.\n\nI was quiet on the way home, and eventually David asked me what was troubling me. I stayed silent, not wanting to talk about what I was thinking, until I noticed we'd arrived at David's house.\n\n\"OK Nick, we had this talk this morning, tell me, what's going on?\" He asked. \n\n\"I want that son of a bitch to stand in front of me so I can rip his fucking throat out, that's what I want; I want him to look into my eyes as I kick the chair away from under him, and I want to see the look on his face and the fear in his eyes when he gets that short drop and the sudden stop! I want him to scream in pain, and know it's me doing it to him, and I..!\"\n\nDavid cut me short.\n\n\"Stop it Nick, now! This is not you, and you know it. We've done all we can, you've done everything you could; now it's up to the authorities to drag that bastard over here and make him pay. Leave it alone, Nick, revenge is not you, there's too much of your mother in you to behave like him! I heard what you did to those two boys in the burger joint; anyone else would have put them in hospital, but you had enough restraint to teach them a sharp lesson without actually injuring them; that's the mark of a man, not the capacity to plot bloody revenge. Confucius once said 'Before you embark on a journey of revenge, first dig two graves', and you know what? He was right; don't deliberately set out to become the man your father is, you're better than that!\"\n\nI sat there and listened to him because I respected him, and because he made sense, but the anger remained, and I had no way of cooling it down without feeling that I'd let Mum and Ashley down. As I pondered his words, I could feel myself calming down; one day, the people here would yank that complacent bastard out of his smug little hideout and stretch his neck, and we'd get, if not justice, then at least payback. Then, we could walk away secure in the knowledge that he was paying for everything he'd done, everything he'd set in motion, and all the hurt he'd caused the innocent.\n\nDavid watched me calming down and accepting that this was how it would have to be, then grinned, and patted me on the shoulder.\n\n\"Good man, that's the stuff. Don't worry, Nick, just have faith in the system, he will fall, believe me!\"\n\nI had to grin at his optimism, and clambered out of the car with him, wondering why we'd come back here, so I asked him. David just grinned at me and told me to follow him. He opened one of the four garage doors and there was a silver Dodge Caliber.",
        "\"This was Judy's car until she decided that she was going to save the planet...with a Prius, pardon me while I barf...! Anyway, I don't need it, Judy doesn't want it, so I was wondering if you'd maybe like to borrow it until you can get your own car, or make me an offer for this one. You're going to need a car to for work, and this is just gathering dust, so...\"\n\nI was speechless. I tried to thank him but he just waved it off. \n\n\"You need it; I don't, so it's yours for as long as you need it! You may need to use the battery-charger over there; the car's been sitting for several months so the battery's probably dead.\"\n\nWe puttered around with it until we got it started using the jump-box David had. Once it started we let it run for a few minutes, then turned it off and I hooked-up the battery-charger, just to make sure. While we waited, I thought I'd do a little digging of my own.\n\n\"So, David, where are you taking my Mum this weekend?\" I grinned, watching him blush again.\n\n\"I was thinking of a nice Italian place I know on Colonie, I know Julia likes Italian,\" was his response. I looked quizzically at him.\n\n\"You really like her, don't you?\" I asked and he grinned ruefully.\n\n\"That obvious, huh?\" and I grinned happily, glad to have something to take my mind off our troubles.\n\nHe continued.\n\n\"She's different to most of the women I meet. The dates I've been on recently, well, perhaps not all that recently, were all with women who were either gold-diggers or opportunists looking for a doctor for a husband. Judy used to spot them and launch into them, and I came to trust her instincts, so I kind of fell out of the habit of dating. Your mother, now, she's different; for one thing Judy likes and trusts her, and she's self reliant; she's not looking for a free ride. I know she's had a hard life over the last few years, and I think she deserves a little pampering. Judy filled me in on what it's been like for her, and yet she's kept her head up, and made a life when everything fell apart, and I find her wholly admirable, and beautiful, of course. So, to answer your question, yeah, I really like her, and I hope she likes me too, because I plan on seeing a lot more of her, with your permission of course!\" \n\nI grinned again. \"She's over 21, David, and I've only been back in her life a few days; you really don't need my permission, but for what it's worth, I approve, and I feel sure Ashley will too; my mum needs a good bloke, hopefully that'll be you!\" \n\nWe chatted some more as we walked back to the garage, where I unplugged the charger and tried turning the engine over. It started immediately, and I grinned over at David.\n\n\"Are you absolutely sure about this?\" and he nodded back. \n\n\"Go ahead, she's all yours for as long as you need her, my pleasure, Nick, I'm just glad I can help! Oh, and almost forgot; don't worry about tags and insurance, she's fully covered and you'll be covered to drive it. If you decide later on you want to buy her, we'll worry about that stuff later.\"\n\nI jumped in and waved at him as I headed home; I had a car, I had a job, and I had a beautiful girl waiting for me at home; my life was coming together, and things were changing for the better for my family, except for just one detail; the knowledge of who had raped Ashley, and why, still sizzled in the pit of my stomach. I knew it wasn't New Year's, but I made a resolution; I would do all I could to make those people pay for what they'd done to my Ashley, but I'd keep out of it until the time was right, then anything I could do, I would do. Punishment was due to somebody, and I promised myself I'd be there to see it handed out.\n\n++++\n\nI pulled into our driveway and parked behind Mum's car, bursting to give her my good news. As I came in, the first person I saw was Ashley, her smile lighting up the room as she saw the expression on my face.\n\n\"How did it go, Nick?\" she asked, and I couldn't help grinning.\n\n\"I start a week Monday! I've got a job!\"\n\nAshley squealed and jumped on me, and Mum came out of the kitchen to see what all the noise was about.\n\n\"Mum, I got the job, I start a week Monday!\" I exulted, making sure I kept all trace of what had happened earlier out of my voice. \"And I've got a car, come see!\"\n\nMum and Ashley came outside with me, Mum astonished at the car, and Ashley looking curiously at it. I explained the deal with David and the car; Ashley looked at me oddly as I explained, but said nothing. After we'd had dinner, I asked her if she'd like to go for a drive so I could show her off. \n\nAshley looked at me with a big, artless grin on her face.\n\n\"So tell me, brother of mine, who are you going to show off; me or the car?\" she asked almost innocently, and that earned her a pinch on the bum that made her jump and giggle as I shooed her out the door.\n\n\"Perhaps we need to visit a 'quiet place' again, Nick!\" she murmured in my ear, and I smiled to myself as I picked-up on what she was saying.\n\nWe took a long meandering route this time; I guessed she was taking me to one of her more rural hidey-holes. We drove a fair way out of town, eventually skirting a large lake and following a path through the forest to park in among a stand of broad-leafed hardwood trees; maple, I guessed, although I'm no botanist. \n\nI admired the view; there was a lot to admire, wild-looking woodland and forest alive with bird sounds and the sound of the wind soughing in the trees, and the occasional glimpse of the dark water of the reservoir just visible through the trees.\n\n\"Ashley, where are we?\" I asked, and she hooked her arm in mine.\n\n\"That's the Tomahannock Reservoir down there, Vermont State line's over that way, and Massachusetts is over there. Daddy used to bring us out here and detour over to the Berlin State Forest because he used to say you can see three states from there. I never saw it, though; one clump of trees and poison ivy looks pretty much like another!\"\n\nI leaned back against the car, holding her and enjoying the warmth and smell of her, a delicious light flowery scent with undertones of vanilla; she smelled delicious. She leaned against me, her head on my chest and her arms around my waist, enjoying the silence together.\n\nAfter a while she began drumming distractedly on the small of my back, a light tapping that I noticed she did when she was thinking, a rhythm that seemed to focus her concentration.\n\n\"Nicky,\" she asked, hesitantly, \"If I ask you something, will you be completely honest with me?\"\n\nI nuzzled her, enjoying the feel of her hair against my lips. \"Of course, Princess, always, you know that! Just ask away.\"\n\n\"Nicky, when you came in earlier, when you saw me you looked like a deer in the headlights; why? All afternoon Mom's been all sweetness and light and all is good with the world. I thought at first she was just happy about having a date for Friday, but then I realised she was acting exactly the way she used to be when she'd come back from the hospital and I'd ask her about daddy, and she'd say he was fine, when we both knew it was all going badly.\" \n\nShe paused, looking back up at me with her clear, frank gaze. \n\n\"Then there's you, acting happy-clappy and peppy, not your normal self with your little jokes and puns and that goofy grin of yours, and now Dr. Nixon suddenly gives you Judy's car. Tell me something OK? Why? What the fuck is going on? And don't even think about lying to me, I can read you like a book, big brother!\"\n\nShit.\n\nI tried to squirm my way out of it. \"It's nothing, babe, I'm really happy I got a job so quickly, and mum's just happy for me too...!\" I trailed off as she slowly shook her head.\n\n\"Nick Davis, right now I can see a great big 'I Am Lying' sign flashing on and off over your head. What am I missing here? Talk, English-boy, or sleep on the porch, and I mean it!\"\n\nI was busted, and she was right, I couldn't lie to her, or to anyone, come to that; I just wasn't set-up that way.\n\nI sighed and wrapped my arm even tighter around her, cuddling her close to me.\n\n\"Look baby-girl, it's about ...what...happened to you.\"\n\nAshley looked up at me. \"I was raped, Nicky, say it, it's OK, it doesn't have any power over me anymore; you can mention it, you know!\"\n\nThat was encouraging.\n\n\"Baby, about the ...rape, we had a letter today, from England, from...Barbara. She sent it Friday, the day...\" \n\n\"...the day she died, Oh Nicky, I'm so sorry!\" finished Ashley, her hand suddenly cool and reassuring on my cheek. I cleared my throat and continued.\n\n\"In the letter she gave details, lots of details, about what happened to you. I'm so sorry, I wish I didn't know ...\"\n\nAshley looked worried.\n\n\"What Nick, what is it? Tell me!\"\n\nI stared at the ground as I began to speak, unable to look her in the face.\n\n\"Baby, what happened to you, it was planned, it wasn't some random lowlife, it wasn't an opportunist crime; someone was sent to do that...by my father...\"\n\nHer eyes were two saucers, shock and outrage growing in them. I could feel her tensing and drawing away from me, and I was already regretting my honesty, but it was too late to backtrack now.\n\n\"You knew this...and you yet still brought me out here? Why, why would you keep something like that from me?\"\n\nI swallowed.\n\n\"Baby girl, there's more, oh God it gets worse...!\"\n\nShe looked at me big-eyed and fearful. \"Worse, what do you mean, how much worse...?\"\n\nI avoided her eyes. \"When that...creature...did what he did to you, it wasn't you he was waiting for; you just happened to walk in at the wrong time...!\"\n\nHer eyes narrowed, then widened in horror. \"You mean...!\" she gasped, her hands flying up to her mouth.\n\nI nodded miserably.\n\n\"He was waiting for mum, that's what it was about; my father, that sick, twisted rat-bastard set it up, we saw the emails, Barbara sent them all; he's fucking insane! This was his way of punishing mum for leaving him! Remember I told you he was vicious and vindictive? Well now we know just how far gone he really is. Barbara said he'd never let her go, I should have listened to what she was telling me...\n\nHe bided his time, and then he decided to set this in motion, for reasons that only make sense to him, and you got caught in the middle; I'm so sorry, baby, I wish I could make it all un-happen...\"\n\nAshley's mouth was an 'O' of shock, horror rising in her eyes as she realised that she'd been caught in a trap set for our mother, and had paid for it by being raped in her place. I tried to hug her to me, but she pulled away from me, shaking me off and backing away.\n\n\"Don't...touch me!\"\" she flared, looking at me with something akin to hatred in her eyes. \"You're his son, how do I know I'm not hooking up with the son of fucking Frankenstein? For all I know you're as bad as that fucking maniac, so keep the fuck away from me!\"\n\nThe hurt roared through me as she said that, and she knew that because she resolutely turned away from me, her arms clamped tight around herself as she sank to her knees. My eyes blurred as I realised I'd blown it with her, I'd tried to protect her and instead I'd shown her how to hate me.\n\nHer shoulders were shaking as she sobbed silently, and all I wanted to do was hold her and comfort her, but I was the son of Satan right now, and she didn't want to hear anything from me. I tried, anyway, though...\n\n\"Ashley, please...\"\n\nShe stood up, turned, and glared at me, her face working, to stalk up to me and push me aside. \n\n\"Get out of my way!\" she gritted, so I did, allowing her to climb back in the car. She slammed the door and I heard the locks go on as she leaned on the wheel. With one last hate-filled glare at me she started the engine and skidded away, spraying me with sour-smelling leaf-mould and leaving me standing there, alone, and pretty much lost in the woods somewhere around the reservoir. I had a sort of clue as to which way we'd come, so I started walking, but I didn't know how far I'd get; darkness was falling, I had no money, my wallet with my ID was in my jacket, and my jacket was in the car, and I hadn't seen any houses or other cars the whole time we'd been here; also, and just to make it easier, it was the dark of the moon, so I'd have nothing to give me any light once full dark set in.\n\nAfter slipping and stumbling for two hours (according to the trusty 'Transformers' watch Barbara gave me when I was nine), I was pretty much completely lost. As night fell the forest had become first a deep gloomy wall, and then a deeper velvety blackness under the tree canopy, and oppressively silent, except for my yelps as I stepped in things, tripped over things, or walked into things. One of those things' I walked into really hurt, and I did get some light then, big stars that bloomed and faded in front of my eyes as I smelled and tasted brass, and I could feel a sticky wetness seeping down my face and into my eye. Blood, I assumed, but I couldn't tell, as I couldn't see my hand in front of my face by now. \n\nEventually I came onto a cinder track, actually I tripped over something and landed on the track, which is how I knew it was there, more a country lane than anything, and where it led was anybody's guess; I was so completely turned around in the dark that I could have been walking to Canada for all I knew. I mentally flipped a coin, and trudged in the direction indicated, again in complete silence. The cloud had been hazy and low earlier in the evening, and now it felt like I was walking in an anechoic chamber where the only sound was that of my breathing. I had never seen a night so black, or so silent, and if I had been of that turn of mind, I would have been freaked by it. At least I was going somewhere, though, even if I had no clue where. I walked along that track for over two hours, seeing no cars or signs of human habitation and by now I would have welcomed anything to break-up the pitch blackness, a house, a gingerbread cottage, three bears, anything. Scenes from 'Deliverance' were beginning to play out in my head when I heard a car in the distance and saw headlights splashing the trees when I looked back over my shoulder.\n\nI stepped onto the verge, not wanting to be run down by whoever was gunning that car along this deserted track at this time of night; they wouldn't be expecting me to be walking along the middle of it at dead of night. They probably wouldn't even see me until it was too late. So, with a vague notion of flagging them down, perhaps begging a ride, or even just getting some directions, I waited on the verge, waving my shirt as it was light coloured, something to catch in a headlight.\n\nI tried not to look at the headlights as the car approached. After so long in the dark the glare was painfully bright, so my eyes were slitted as I waited for the approaching car, not really knowing whether whoever was driving would stop for a battered looking stranger with no shirt in the middle of the night. The car slid to a halt and the door opened.\n\n\"NICKY!!\" screamed Ashley, running at me full tilt and slamming into me, almost knocking me over.\n\n\"Nicky, I'm so sorry, I left you alone out here, oh God, you could have been killed, I went back and you were gone and I couldn't find you and I've been driving for hours looking for you, I left you all alone, Oh Nicky please, I'm sorry, you could have died out here, I'm sorry, I'm sorry!\" she gabbled, her arms locked around my neck. I was just so glad to see her, and apparently she didn't hate me anymore, so no harm, no foul as far as I was concerned.\n\nAshley tugged me back to the car, and ran her gentle fingers over the nice big lump over my right eye. Now that I had light, I realised I could barely see out of that eye. She pulled down the vanity mirror so I could see the damage for myself; a three-inch gash ran across above my eyebrow, and the blood had caked the side of my face and limned my eye. She ran light, trembling fingers across my face, tears rolling down her cheeks as she looked at the cut, and the blood smeared across my face and forearms where I'd been using them to wipe the blood out of my eyes.\n\n\"Look at this Nicky, oh God, look at this, it's my fault, I left you out here alone, you didn't do anything and I just left you here, supposing you'd been killed...!\"\n\nI tried to laugh it off by telling her it was my fault for letting a tree bite me, but she wasn't having it.\n\n\"Hikers go missing up here all the time, there's sink-holes, dead-falls, or you could have fallen in one of the ponds or marshes, they're everywhere, or fallen in a ravine, and I left you here, in the dark, oh God, you could have been killed, I just ran off and left you out here alone, oh God...!\"\n\nI held her close while she trembled and cried, and I have to say, holding her again was the best feeling in the world, after the way she left earlier.\n\nWhen she'd calmed down, she told me we had to find the Ranger Station. I asked her why, and got an answer that surprised me.\n\n\"To let them know you're safe; the Park Rangers, State Troopers, Doctor Nixon, Judy, Mom, they're all out looking for you; this is Pittstown State Forest and we're miles from where I dumped you; you were heading toward Vermont, but if you'd stayed in the forest we might never have found you again, and it would have been my fault...!\" \n\nShe started crying again, and I held her some more, calming her, and letting her know it was alright. Eventually she started telling me what had happened after she left me.\n\nAfter she'd gone a few miles she'd calmed down, and turned round and come back, but I was gone. Not knowing what to do, she'd gone straight to Judy, and told her the whole story. Judy had flipped when she heard Ashley had left me alone in the forest at night, and went and got her dad, who'd driven up to the Ranger Station and told them I was lost somewhere in Pittstown Forest. \n\nMeanwhile, Judy and Ashley had gone to get Mum, and then the four of them had fanned out along the roads leading away from where Ashley had left me. Ashley got the road I was on by sheer luck. While she was talking, she took a packet of Kleenex from the glove box and wetted one from a bottle of water she found in there, and started cleaning that cut over my eye as well as cleaning off some of the blood from my face, arms and hands. When she cleaned the cut, that's when I discovered how much pain I could take; if she hadn't been sitting astride me I'd have launched right through the moon roof...\n\nOnce she'd cleaned the worst of it away, she made me put my shirt back on, and she put the car in gear, turning around to head back the way she came. We eventually got back to blacktop near some houses, and she pulled over and pulled out Judy's spare cell phone, telling me she was calling Judy.\n\nAshley had a quick conversation with Judy, just telling her I was safe, and that I was going to need her father, no I wasn't badly hurt, just a little dinged-up, as she put it.\n\nWe rendezvoused at Judy's home; mum's car was there, and a State Police cruiser, with David outside talking with the two troopers, before waving me in and following us. Mum jumped up when I walked in and her eyes filled when she saw my face, as did Judy's.\n\n\"Poor Nicky, you keep getting hurt!\" she whispered, and again I tried to laugh it off.\n\n\"Mum, I'm OK, really, a tree jumped out at me, but I fought it off, honest!\" and I saw a quick smile flit across her face. David came in then and told me sit so he could examine my forehead. When I complied, he pulled on some examination gloves and gently prodded the cut, squeezing the lips together to check the extent of the swelling, and opened a bottle of some brown pungent stuff.\n\n\"This may sting a little, try and not cry, kick or bite please!\"\n\nHe picked up a long curved hemostat and wrapped a length of cotton wool around the jaws, poured the liquid on it, then swabbed the cut. The pain was incredible, like being painted with acid, and I had to use all my willpower not to jerk away.",
        "\"I thought you said it would only sting a little?\" I asked.\n\nHe grinned. \"Yeah, well, I lied, but would you have sat still if I said 'this is going to hurt sooo bad, now just sit there please? I think not. Now sit still and shut up!\" \n\nWhen he'd finished swabbing it, he picked up a thing that looked like the satanic offspring of a nail-gun and a desk stapler and grinned at me. I shrank back.\n\n\"What is that thing?\" I asked, and he grinned even wider.\n\n\"It's a surgical stapler, Nick, and it does what it says; it staples. Now look over there and keep still!\"\n\n\"Is it going to hurt?\" I asked, and his answering grin was evil, I thought; he was definitely enjoying himself just a little too much!\n\n\"Yes, it is going to hurt, I think I can almost guarantee that! I can give you a local, but to be honest, this is will be over in a minute; if I give you a local it's going to feel like your eye wants to fall out of its socket for the next two hours; it won't, it'll just feel like it. It's your choice, quick and painful, or long, drawn-out and weird, which is it going to be? Or I can hand-suture, without a local, in which case it's going to feel like someone's gnawing your eyebrow off. Decision time, Nick!\"\n\nI had to grin. \"I'll have the quick and painful, when you put it like that, how can I refuse?\"\n\nHe put three titanium staples in and painted the wound again, dried it off, and sprayed a clear dressing over it.\n\n\"All done, the staples will have to stay in at least a week, come see me and I'll remove them for you if they're ready to come out.\" \n\nAshley hugged me, all her anger of earlier forgotten, diluted, I suspect, by a large amount of guilt, but I wasn't going there; I'd come too close to losing her to chance screwing it up again. \n\n\"I'm sorry about earlier, I didn't mean to freak you out, honest!\" I whispered in her ear, and the answering nibble of my earlobe was what I was waiting for, her way of telling me it was over. Judy, however, seemed to have something on her mind.\n\n\"Ashley, may I speak with you, alone, now!\" she gritted, and Ashley let go of me, looking sheepishly at Judy as she trailed after her into the dining room. Mum gently ran her fingers over the swollen lump over my eye.\n\n\"Every time I see you, you look more banged-up and injured. This has to stop, Nicky!\" she smiled, and I leaned over and kissed her on the cheek.\n\n\"Whatever you say, Mum!\" I grinned, and tweaked her nose lightly, making her gasp as the memory of my doing that so long ago suddenly rose up for both of us. Lately, more and more memories were surfacing, images of Mum when she was much younger, with longer hair, and blurry memories of a man, who I assumed must have been James. Something occurred to me, and I thought I'd ask her while we were alone.\n\n\"Mum, I remember doing this,\" and my hands formed into a series of shapes and gestures. \"Why do I remember that, what does it mean?\" \n\nMum smiled sadly. \n\n\"James had a hearing-impaired older sister, Ashley, he was teaching you to hand-sign for her, what you were doing there was 'Hello Ashley'. She died when my Ashley was two. You had quite a vocabulary, James used to talk to you like that, before Brian...\"\n\nWe were interrupted by raised voices coming from the dining room, Judy's, for the most part.\n\n\"....and so you just drove off and left him there? He's only been here a few days, what was he supposed to do, follow a trail of breadcrumbs? Wait for Goldilocks? Hope the seven fucking dwarves found him? Of course he went wandering; it was night, and he was alone in the dark, and he was lost. He could have died out there, but you never thought of that, you got in a snit and you just fucked-off! I thought you loved him!\" \n\nA lower voice, Ashley's, said something indistinct, and Judy's cut her off.\n\n\"Whatever his lunatic father did, it wasn't Nicky; didn't you see his back? Don't you remember what brought him here? And with all that, you still just fucking abandoned him in the forest, with no idea where he was and no way of getting home! Who knows what the fuck is roaming around in those woods, supposing he'd startled a bear with cubs? How long would he have survived? Did you even think of that? You might as well have just backed-over him a few times and finished him off; it would have been fucking kinder!!\"\n\nI thought I'd better step in there; this looked like it was getting out of hand, but mum put a hand on my harm.\n\n\"Wait, Nicky...\" as more muttered comments came through the door.\n\nThere came the sound of a slap, and mum nodded at me.\n\n\"OK Nicky, now you can go break it up!\"\n\nAs I reached for the double doors into the dining room, they opened, and Ashley came out, her head down and one hand on her face, followed by Judy, red-faced, tears on her cheeks, but her eyes still alight with anger. I took Ashley in my arms and gently tilted her chin up; on her left cheek, was a clear hand-print. Judy looked at me, and I held out my hand to her, and she hugged me too, burrowing her head into me.\n\n\"We were so worried about you, Nicky, that place is a fucking death-trap at night!\" she muttered into my chest, her voice muffled by my shirt.\n\nI smiled; I hadn't realised I'd made such an impression on her, but it was gratifying to know that I'd made a friend already. As she hugged me Ashley kept her face buried in my shoulder, and she was crying again, which I really didn't want; it had all turned out OK, so no harm done (other than a world-class scar I was going to tell my kids I got when I fought a bear; hey, if you're going to lie, make it a good 'un...)\n\nAs the two girls hugged me, Ashley's hand came up and hugged Judy as well, gently stroking her shaggy mop-cut hair as she included her in her hug, so I guessed that particular argument was over as well.\n\nJust then David came out of the kitchen with a large tray.\n\n\"Anybody for a late supper? We have Monterey Jack, Ardennes P\u00e2t\u00e9, wheat crackers, some English Stilton that you really should try, Jewish Rye bread and black olives; dig in or Judy'll eat most of it!\"\n\nMum tried to refuse, saying we'd already put him out enough, but David wouldn't take no for an answer, once again taking the opportunity to spend some time with her; I nudged the girls and glanced over at our respective parents, noting again how good they looked together as they ate and talked, a natural couple if I'd ever seen one.\n\nAt last mum decided we really should leave, it was very late, and we'd had a real roller-coaster of a day, so time to rest. Judy and Ashley kissed and made up; the mark on Ashley's face was already fading, and Judy apologised for slapping Ashley, but mum surprised us all.\n\n\"There's no need to apologise, Judy, you saved me the trouble! Goodnight, dear!\"\n\nAshley drove me home; my right eye was almost swollen shut now, so driving at night was a little hazardous with almost no depth perception.\n\nWhen we got in I got a good look at myself. Boy was I an ugly sight; my hair was matted with dried blood, my shirt was stiff and crusted with dried blood, and my face and forehead were streaked with dried blood, while what looked like a bulging third eye was trying to erupt above my eye. Mum stood behind me and studied me. \n\n\"Get a shower, Nicky, just be careful of that dressing; much as it weird's me out to say it, you should ask Ashley to help you, she's a lot gentler than you are!\" \n\nI grinned at that and at mum's expression, and she smiled back, so I relaxed. Ashley came out of our room in time to hear mum suggest I ask her, and of course she said yes. Mum looked coolly at her and walked away, leaving her looking guilty and sad.\n\n\"Don't worry; she'll be fine in the morning!\"I grinned, and pulled her close for a quick fondle and grope. She smiled as she held herself against me, her nearness enough to trigger a particular male response, and her eyes widened as she grinned, nipping my ear.\n\n\"Are you ever not horny, Nicky?\" she breathed in my ear, reaching down to tweak the end of my cock. \"Wash first, you're covered in blood, you look like Hannibal the Cannibal!\"\n\nI followed her into the bathroom and stripped off, Ashley pursing her lips at the myriad small cuts and bruises I'd collected during my walk in the forest. She had me squat down and lean back against the wall as she gently washed the dried blood out of my hair, the sight of the diluted blood running in streams down my body making me feel distinctly nauseous, then she washed the dried blood off my face, finally washing, and dabbing dry, all the little cuts, nicks and grazes. \n\nShe then moved to my back, carefully dabbed and dried me, and declared me fit to be seen in public again. She was of course naked in the shower with me, and I was sorely tempted to take a run at her again, maybe try for a reprise of our last shower escapade, but sanity prevailed when she slapped my hand away and reminded me that mum was still up and around, and she probably wouldn't appreciate the two of us hooting like howler monkeys two doors away from her bedroom; she'd put us in the end-bedroom for a reason...\n\nAshley toweled me off and left me to do the bits I could reach while she wrapped a towel around herself and disappeared into our room, where I soon heard the sound of a dryer. Once I was as dry as I felt comfortable with, I made haste to join her. She was wearing a long t-shirt and panties, her standard sleeping attire; not for long, if I had anything to say about it! She stood up to hug me again, whispering apologies again, apologies I brushed away; I wasn't interested in hearing her say sorry, only in having her hold me again as though this evening had never happened.\n\nI held her close, needing her presence and contact with her after the trauma of the day, and Ashley responded happily to me, holding me close as my hands roamed over her back and around her waist. I leaned down to kiss her, and she kissed me back hungrily, her hands in turn gently gliding over me, carefully avoiding my back.\n\nMy hands just naturally slipped down to cup her lovely firm bum cheeks as we kissed, and she ground against my rapidly hardening cock, making approving noises as she felt it grow against her. I slid my hands into her panties, sliding them down a little so I could hold and squeeze those firm peach buttocks of hers, holding and gently pulling them apart as we kissed more and more passionately. We moved to the bed, and lay down together without once breaking our kiss until I reached down to lift the hem of her shirt and pull it up, Ashley sliding her panties off and kicking them away.\n\nOnce I had her naked, I could nibble, bite, kiss, and lick her all I wanted. I kissed her in a line down from her chin, along her neck and between her breasts (not forgetting a quick nibble and suck of her nipples) before continuing down to swirl my tongue in her navel, drawing a quick breath and a giggle from her before kissing and lightly licking my way to her bald slit.\n\nAs soon as my tongue brushed her slit, she sighed and quivered, opening her legs slightly to allow me better access. I moved between her thighs and dipped down to lightly lick and brush my flattened tongue against her shaven, dark pink folds of soft flesh. As I licked I could feel those folds start to swell, her scent becoming richer and stronger as her arousal rose. \n\nShe smelled and tasted divine; if I could have, I would have spent the rest of my life licking and tasting her while I inhaled her warm, heady, exciting, scent. Ashley wriggled and murmured as I flicked my tongue along her damp slit, pointing my tongue into her pink little rosebud, making her gasp and wriggle more, then flattening it and licking in long slow strokes to the hood covering her clitoris, lapping insistently at her tender flesh.\n\nI parted the folds of her wet gash, poking my tongue inside her, making her giggle and sigh as her legs opened even further. As I brushed the hood of her clit, I could feel the hard little bean beneath sliding out into the open, slick and buttery with her juices, the scent, and taste of her inflaming and drawing me in. \n\nAs I lapped and probed her, her hand reached for and found my straining cock, and began rhythmically squeezing and sliding up as I worked at her pussy. As I licked she began to gasp, her head moving from side to side as I licked and probed her inner recesses, and when I pulled her clitoris between my lips and sucked, she went wild.\n\n\"OH YES! Nick, yesss, like that, oh God, OHHH!! Ohhh! Jeezus, yess, like that, oh fuck, oh fuck, OHH FUCK YESSS!\" she screamed, her thighs clamping around my head as her hands twined in my hair. The blood thundered in my ears as her thighs tensed, and as I sucked and rubbed her clit with my tongue, she came like a runaway freight train, her juices squirting into my mouth and face as she screamed in ecstasy, thrusting and hunching her pussy against my probing tongue as her hands and thighs held me fast against her.\n\nAt last her straining thighs relaxed, releasing me as she slumped down, her face and neck flushed from the recent storm, a sweet smile of utter fulfillment on her lips, her eyes closed in post-coital languor. I moved up next to her, stopping to dip my tongue in her navel again, making her giggle softly.\n\n\"What about you, baby?\" she inquired softly, her hand taking hold of me and slowly pumping as she grinned at me.\n\nI knelt up, my aching erection pointing at her, and she leaned up, bending down to kiss and then slowly lick the tip of my bursting cock.\n\n\"Mmm, you taste nice, I could get to like this!\" she grinned, looking up at me before dipping down again to slide her lips over the end and begin slowly sucking me.\n\nI leaned back, my eyes half-closed the; the first time she'd done this, it was exquisite, what she was doing now was almost unbearably exciting. Her mouth was a paradise of suctioning wet heat enfolding my cock as her tongue rubbed and flicked around and behind the head, and into the slit of my straining cock, making me jump as she gently plated the sensitive tissue. At the same time she rhythmically squeezed and pumped the shaft of my penis with one hand, and fondled my scrotum with the other, gently squeezing it in time with her pumping.\n\nI was in heaven; whoever she'd learned this from had taught her well, so well in fact that I could already feel my scrotum tightening as the urge to ejaculate grew ever stronger, and the muscles at the juncture of my thighs began to tighten, together with my abs, signalling that I was close.\n\n\"Uh, Ashley...I'm going to...Ashley!\" I tried to warn her, but she just looked up at me and smiled, sucking and licking even harder, and I lost it. \n\nI leaned back as bolt after bolt of spunk pulsed out of me, splashing into her mouth, and she clamped her lips around me, sucking and swallowing every jet of spunk as it sprayed into her mouth. I must have shot seven or eight strong jets into her mouth, filling it with my spunk, and she swallowed every last one, even swirling her tongue around the head of my penis after I'd finished ejaculating and only a weak trickle of spunk bubbled from my still hard cock. \n\nAshley continued to suck until all the sperm was cleaned from my cock head, then she released me with a final kiss to the tip, and a sly grin.\n\n\"Looks like someone's still excited,\" she husked, \"I wonder what he should do with that thing?\"\n\nWith that she lay back and winked at me. My cock twitched and suddenly felt almost painfully solid as I realised what I wanted to do. Ashley held out her hands to me, and I slid up next to her, holding her as I kissed her, tasting myself as we kissed. She took hold of me and slowly pumped and squeezed, the sensation almost tipping me over the edge again.\n\n\"Waiting, Nicky!\" she grinned, and I took the hint, sliding between her legs and leaning up to kiss and lick her nipples, sucking and nibbling them as my hands slid under her, to cup and hold her delightful derriere.\n\nAs I moved forward, Ashley took hold of my cock and rubbed the tip over her wet and swollen pussy lips, teasing us both, before lifting her pelvis up as I slid into her. She felt like warm velvet against the head of my overheated cock, and her breath hissed out as I slid all the way in, burying myself in her wet, hot depths as I stretched her open again.\n\nAlmost immediately she began moving against me, lifting her hips to bring her clit into contact with the wiry mat of hair at the base of my cock, pleasuring herself against me as I pumped into her. I slid my fingers around her cheeks to hold her bum more securely, pulling the cheeks apart as I poled into her, my finger sliding into her tight little anus in time to my thrusts.\n\n\"Oh God yes, Nicky, like that, yesss!\" she muttered as I increased my tempo, hammering into her as she humped and pumped against me. I slid another finger into her tight hole and pumped her as I rammed my cock into her.\n\n\"Ooooohhhhh Goooddd!\" she moaned as I thrust into her, \"Like that, baby, yess, yesss, God, yesss!!\" she panted, and I responded by jamming myself into her as fast as I could, pistoning my aching cock into her as both of us reached for release.\n\nShe came with a loud whistling groan, her nails digging painfully into my arms as her cunt walls squeezed me as though they would force me out of her. I couldn't resist the sensation, and I came explosively, pumping long ropes of spunk deep into the recesses of her velvety cunt, mating with her, filling her with endless jets of my sperm, all my love for her concentrated in this one act as we joined together in mutual release.\n\nAt last, I finished spurting; I had nothing more to give her, and my rigid cock softened as we kissed and touched and murmured in the afterglow of our lovemaking. I rolled away from her, to lie on my back next to her, my arm around her to hold her, maintaining that connection that we renewed every time we made love. \n\nAshley was the same, her hand lying gently on my chest, feeling my heartbeat slow down and normalise. She pulled herself closer, and my arm curled around her to hold her close against me. I looked deep into her dove-grey eyes, and saw only love and trust reflected back at me, and I knew, if I had looked the world over, I wouldn't have found another girl as perfect as this one right here in the crook of my arm. We lay in silence, no words needed just yet, both of us enjoying the pre-dawn cool after the heat and sweat of our sexual encounter.\n\nI woke with a start, bright sunshine flooding the room and no sign of Ashley. I smelled bacon, so I slid into my jeans and padded out of the room to track it down. Ashley was in the kitchen, dressed in just an apron as she grilled bacon, and brewed coffee, the two things on this planet guaranteed to make me rise from the dead (apart from Ashley, of course; for her, I'd dig my way out my grave with my teeth...) \n\nShe turned, smiling like sunshine as I came into the kitchen, and I almost had to pinch myself to believe that this was my girl; God, she was hot!\n\n\"Good afternoon, Rip van Winkle,\" she grinned, \"I thought you were going to sleep all day! It's almost midday, mom's gone to work, and I don't have any classes today, so you got me all to yourself; just think what fun we'll have -- after we have a little talk, about yesterday, and some other...stuff. Now eat up!\" So saying, she passed me a plate of bacon, eggs and toast, the breakfast holy trinity where I grew up; I had had something else entirely in mind for breakfast, but bacon and eggs was good, too...\n\nWhile I ate, Ashley checked my staples and got a bottle of antiseptic and some cotton from the bathroom cabinet, then waited for me, watching, and smiling impishly while I engulfed the food cooked so well by her fair hand, which I told her made it taste ten times better. She smiled at me tenderly as she said \"You are so full of shit your eyeballs are floating! If you want some, ask, but don't try and lie your way into my pants, you're not very good at it...the lying, bit, I mean; everything else is a big Ten, OK!\"",
        "I love that girl's sense of humour!\n\nAs I took my plate and cutlery over to the sink and started to wash up, she came over and stood behind me, dabbing something cold that stung on the dozens of little scratches and grazes I'd picked up from my night communing with nature as well as the bumper collection I'd got as a going-away present from my dog- cock father. \n\nWhere it hadn't hurt that much before, by the time she'd finished it would be fair to say I'd been better off not knowing all those little cuts were there; that stuff stung like buggery, and my back and shoulders were now on fire, making me twitch involuntarily every time she touched a raw spot.\n\nAshley finally grabbed my ear and hauled me down to her level.\n\n\"Nick, if you don't stand still I'm gonna rub alcohol on your balls; that'll really give you something to twitch about, now stay still! Jeez, you're like a three-year old girl, quit squirming!\"\n\nOnce she'd finished torturing me (sorry, 'tending to my wounds'), she pinched my arse and grinned. \n\n\"OK He-Man, all done, grab a coffee; we have things to discuss...and some apologies as well, so chop-chop!\"\n\nI followed her into the living room, hypnotized by her spectacular arse twitching as she walked, the fact that she was wearing nothing except a brief apron playing trills and arpeggio's on my libido; I was sporting a more than respectable hard-on within 10 paces, and I had to resort to shuffling to avoid tangling my balls in the material of my suddenly too tight jeans. \n\nAshley looked back at me over her shoulder, and the combination of that look, her smile, and the sudden extra bouncy twitch her cheeks developed had me mentally stripping down and listing an Alfa Romeo SZ gearbox before I went off like a Roman candle...\n\nBy the time we reached the living room, I was in agony; whatever she had in mind had better be quick, I had something of my own I wanted to get in the open, and certain pressing matters I wanted to press against her! She led me to the couch and climbed onto it, tucking her legs under and wrapping the apron demurely around herself. I sat down, and waited for her to start.\n\n\"Nicky, about last night, I just wanted to tell you I was so wrong to leave you alone like that. Judy was right; you could have been killed, and it didn't even occur to me, I just drove off in a rage. I got a couple of miles down the road and I realised what I'd done, and how wrong I was to leave you stranded like that.\" \n\n\"I came back for you, but you were gone, and I called out for you, I screamed out for you, but you must have been out of earshot; I was so scared at what I'd done, I thought you were lost, and it made me feel like I was in free-fall, like stepping off a cliff, and I felt and scared, and alone. I guess I never really thought about how much you meant to me until I thought I'd lost you; I was just happy to float along being in love with you, without understanding what that actually meant, then when I thought I'd lost you, all I wanted was you, nothing else, forever.\" \n\n\"Judy warned me she'd make me pay for what I did, but nothing she could do compares to what I felt when I found you gone. I love you Nick Davis, and I want you, forever, no games, no secrets, no holding back, just the two of us. You tried to shelter me yesterday, and I appreciate that, but from now on, no more secrets. There's nothing so bad, so god-awful that you can't tell me, I know that now; yesterday grew me up, and I realized the one good thing I have is the only thing I'll ever need.\"\n\nShe dimpled at me and took my hand.\n\n\"I know you asked me once already, but this year's a Leap Year, so right now I'm exercising my prerogative as spinster of the parish; Nicky Davis, the love of my life, will you marry me?\"\n\nI gaped at her, then grabbed her hands and held them tightly.\n\n\"Christ, yes, yes, a million times, yes!\" I whispered in her ear, my heart almost bursting with delight after almost losing her forever just a few hours before\n\nShe grinned up at me and leaned in to kiss me, one of those kisses that completely wipes your mind and leaves you slack-jawed and drooling. \n\n\"I'm never leaving you anywhere, ever again, I promise!\" she laughed, a clear, bell-like chiming that made me ache for her long legs and smooth thighs just an arm's reach away under a flimsy apron, and my groin tightened almost unbearably. \n\nThere's only so much a mortal man can take, and I pulled her to me, sliding her astride my lap as I squeezed her perfect cheeks, the feel of those smooth, firm globes nearly tipping me over the edge.\n\n\"No, Nick, down boy, down!\" she giggled, \"You haven't got time, Judy's on her way over. Your new boss called, he needs you to sign some paperwork, Judy said she'll take you, so go get washed up, now! Mom won't be home until seven, so we'll have plenty of time to play when you get back!\"\n\nI was intrigued as to what I was going to sign, but Ashley just replied that he didn't say. I asked why her Judy had to take me, and she actually blushed shamefacedly.\n\n\"I'd like to take you, but...I'm grounded; at my age! Can you believe it?\"\n\nI had to laugh, it was just too funny; Ashley looked indignant, but eventually she started to see the funny side too.\n\n+++\n\nJudy was quiet and subdued as we drove into town, saying nothing, and flicking the occasional glance at me, until at last the silence got to me.\n\n\"Judy, pull over, please!\" I asked her, and she did so without a word. Once she'd parked-up, she sat with her hands on the wheel, looking straight ahead.\n\nI broke the strained silence.\n\n\"OK Judy, what's going on? You haven't said a word since we set out, you won't even look me in the eye, what's up?\"\n\nShe turned and looked at me, and there were tears in her eyes.\n\n\"Nick, last night, I thought we'd lost you, and it scared me; Ashley's my best friend; she's like my sister, and I thought she'd abandoned you, and that made me feel sick and really fucking angry, I thought I'd lost you as well!\"\n\nShe wiped her eyes with the heels of her hands, and stared at me with an almost aggressive expression.\n\nI was getting a funny feeling about this conversation; why was Judy so cut-up over Ashley and I falling out, however briefly?\n\nI had to say something, just to break the thickening silence building up in the car.\n\n\"Jude, why would you feel like that about me...ah!\"\n\nShe grinned at me, a lopsided, 'at last he gets it' kind of grin.\n\n\"Yeah Nick, that's right, God help me, and I know it's wrong, but I think I'm in love with my best friend's guy! And you know the real pisser about that? I know he'll only ever have eyes for her, but it still doesn't change the way I feel. If there was no Ashley I'd be all over you, but as it is, I know I'll never have a chance with you, nor would I ever make a move; I wouldn't ever hurt her like that; you're her happiness, not mine. So there we are; now you know!\"\n\nI tried to be as gentle as I could; I could see how much pain she was in.\n\n\"Judy, I...\"I began, but she cut me off.\n\n\"It's OK Nick, I know I can't have you, and I accept that. But I had to tell you, just once, just so I didn't explode, and now we can go on with our lives. Just do one thing for me? Hug me, please, just once, let me pretend for a few seconds that you're with me.\"\n\nI couldn't refuse such a gracious request, and I pulled her to me, hugging her as warmly as I could, letting her have her fantasy, heartbreaking as it must have been. \n\nOne thing I knew for certain, though; despite my promise to Ashley, this was one conversation I would keep secret and take to the grave; if Judy ever felt like telling Ashley, well, that was her right; it was her secret. I would never tell.\n\nAfter a while she patted my shoulder and let me go, sliding back into her seat and swiping her forearm across her eyes. When she looked back at me, her pixie grin was back, then she looked over her shoulder and pulled away from the kerb. \n\nBy the time we reached our destination, she was almost her old self again, making outrageous and sharply observed comments about every subject we touched on as we chatted. \n\nWhile I filled-in various employment forms and applications, Judy wandered around looking at the glamorous sports cars scattered around the service bays. I kept one eye on her as I filled-in forms in triplicate and made various declarations; she was a pretty girl in a tiny skirt in a workshop full of horny mechanics, so I felt a little extra vigilance was called for. Judy, however, seemed quite un-fazed by some of the remarks made to her, and some of her retorts would have blistered paint. \n\nAt one point I saw her leaning against a stunning black Lister Storm that hadn't been there before, smiling, and chatting animatedly with the young technician. He couldn't seem to take his eyes of her, and she seemed to be making a lot of eye contact, so maybe she'd made a conquest; I hoped so. I did love Judy, but only as my girl's best friend and I wished her nothing but the best. \n\nWhen I was making ready to leave, Mark grinned as he nodded toward Judy.\n\n\"When she was seven, she bit my hand so hard it drew blood. I put her over my knee and spanked her good! She's quite something! Are you and she...?\n\nI grinned back. \"Oh no, Judy's my fianc\u00e9e's best friend. Ashley couldn't bring me so Judy got the short straw.\"\n\nMark smiled at me and held out his hand. \n\n\"We're all caught up here, so I'll look forward to seeing you a week from Monday!\"\n\nAs I left the office, I saw Judy write something on a piece of paper and slip it into the young technician's pocket, and I grinned. Apparently she'd gotten over me...\n\nOn the way back, certain things I'd been chewing over in my mind solidified into a plan, so I asked Judy if there was a men's outfitter's anywhere near. She decided to take me to the one her father uses; I wanted to buy some leather gloves, I thought I was going to need them.\n\nI bought a pair of tight black calfskin gloves, thin, and supple, what they call 'Burglar's Gloves' in my part of the world. I asked Judy the way to Bobby Czyzyck's home, I had something to ask him, and I was determined to get some answers. Judy offered to drive me there, curious as to what I wanted with that little weasel.\n\nWhen he answered the door, he went the colour of old yoghurt as the blood drained from his face. He tried to slam the door, but I had my foot there, and it was easy to reach in there and yank him out. He was nearly gibbering with fear as I held him against the wall, my gloved fist around his scrawny neck; good; just the place I wanted him to be.\n\n\"Bobby,\" I said, in a friendly, even tone, \"do you remember when I said that if I showed up on your doorstep, it would be because you did something to bring me there? You've been a bad boy, Bobby, I know what you did to Ashley Lowry, and now I'm going to take you for a little drive a long way from anywhere, and I'm going to hurt you lots and lots. Man-up Bobby, it's time to pay!\"\n\nThe pathetic little maggot was nearly crying with fear, but I wasn't finished with him just yet. I cuffed him a couple of times to get his full attention, although what I really felt like doing was chaining him to the rear bumper and dragging him a few miles at 40mph.\n\n\"I'm giving you a choice, Bobby; you can talk to the police, or you can talk to me, in a forest clearing a long way from anyone who can hear you scream. Now what do you want to do; talk to me, or spill your pathetic guts to the law? You have until I count to five, then you're just a distant memory. One...!\"\n\nNo, I wasn't going to hurt him; I told you before, I'm a pacifist motor-mac, not a mafia enforcer, but after reading those emails, I didn't feel like asking him nicely for his cooperation. What he did have was a deep and abiding fear of me, and now it was time to build on that, turn the screw a little more. It was his good fortune that I was nothing like the man my father was; if it had been him here, right now, Bobby would just be a pile of anonymous body parts in a garbage sack; I was definitely the soft option here...\n\n\"Don't...please...don't...!\" he stuttered, \"I'll go with you!\", which was all I wanted to hear, because I damn sure didn't want to be charged with kidnapping this disgusting little weevil. I led him to the car and shoved him in the back seat, then climbed in next to him, my hand holding him tightly by the scruff of his neck in case he decided to try and bail out of the car once we were on our way.\n\nJudy watched all this in silence until we were in the car, and then turned to me.\n\n\"OK Nicky, what's this about, and where are we taking this smelly retard?\"\n\nI gathered my thoughts, emphasising my points with a finger tap on his scrawny neck each time, and he jumped like he'd been branded each time I did it, all the proof I needed of his involvement in brutalising my girl.\n\n\"You remember Ashley told you about the emails from England, about the rape, and the plot my pig's prick of a father set in motion? Well Judy Nixon, I'd like to introduce you to Bobby Czyzyck, rapist and scumbag, and soon to be convicted felon; he's going to confess, aren't you, Bobby?\" I grinned at him, and his eyes rolled up in their sockets as his fear of me overwhelmed him. \"Remember, Bobby, if you don't confess, if you try and run, I'll find you in whatever pit you lie low in, and I will drag you into the daylight, and I will fucking chop you up with a chainsaw, are you hearing me?\"\n\nOh I was enjoying playing the heavy! Of the three fights I'd had in my life, I'd lost two, and one of those was to a girl, although, in my defence I was only six, and she was nine, and built like a brick shithouse...\n\nHere and now, I had no intention whatsoever of hurting the little kerb-sniffer, but he didn't know that; all he knew was the scary psycho who'd given him a slapping was back, angry, and out for blood, and he was alone in a car with him and a girl who'd gladly watch him being fed to the hogs. Time to turn up the heat.\n\n\"Actually, Judy, on reflection, I think our creepy little friend here might try and wriggle out of our deal; there's no guarantee they'll believe him, and he might try claiming he was coerced into confessing. What do you think?\"\n\nJudy picked up on what I was doing right away, smart girl.\n\n\"I think you're right, Nick, he could do a deal and never actually do any time at all. I think you'd get more justice if you just took him somewhere in the deep woods, cut him a little to make him bleed, and tied him to a tree so the bears and wolverines and weasels and other fucking vermin can finish him off!\"\n\nBobby was bug-eyed with fright now; hell, so was I; Judy looked like the Angel of Vengeance, and she looked at him like he was already dead. Any doubts he may have been harbouring about our sincerity dissipated as he started blubbering and begging us not to hurt him, and pomising in exchange for not hurting him that he'd tell everything. \n\nThat was what I wanted to hear, so Judy got on the phone and called the police, telling them that someone wanted to confess to a rape. A detective in the Special Victims Unit talked with Judy, and asked her to bring her 'friend' (as she described him) to Arch Street police station, where the SVU was based.\n\nI took a moment to remind Bobby that I would be waiting for him if he walked out of that police station under his own power, and that he could run, but I'd be right behind him every day of his life until he dropped dead or gave up. I think I can safely say, with no fear of contradiction, Bobby would happily have climbed into the tiger enclosure at London Zoo and kicked one of them in the nuts rather than cross me right there and then.\n\nWhen we arrived at Arch Street, the SVU detective, a tall black woman named Shauna asked Bobby if he understood why he was being questioned, and did he want anybody to be with him, a lawyer, or his parents. He looked nervously at Judy and me, and shook his head, stating that he wanted to talk about the rape of Ashley Lowry.\n\nWe waited while Shauna and another SVU detective questioned Bobby in the captain's office, then I saw him being beckoned upright, turned around, and have his hands cuffed behind him while Shauna spoke to him; I'd seen enough cop shows to realise he was being given Miranda, so the little snot was under arrest. Shauna stuck her head out and gestured for both of us to be seated before opening the door and leading Bobby to a holding cell, presumably until his lawyer arrived.\n\nShauna came back to the desk we were waiting at and sat down, tapping her keyboard. Finally she looked up at me.\n\n\"So tell me,\" she began, \"why did Robert Czyzyck confess his part in the Lowry case, and what exactly is your connection to both of them?\"\n\nI explained my relationship with Ashley, and the story of how I'd come to America, and the documents we'd received the previous day that we'd passed to the FBI. I gave her the name of the Agent I'd spoken to, and suggested that perhaps she could get a more balanced and in-depth view from him. Shauna snorted.\n\n\"The feds will share exactly as much as they feel like sharing, when they feel like sharing it, and if this case involves foreign nationals on their home soil, well, it's not our jurisdiction and they'll tell us to keep our noses out of it. What I can do is put in a request for Agent Walker to brief me on the aspects of their investigation that involve the Lowry case, and just how Czyzyck is involved; he's admitting he was there, but he denies the act; he says it was someone else. That in itself is immaterial; accessory to or facilitating a rape is still a felony violation of Section 130 of the State Penal Code, so he's equally as guilty in the eyes of the law.\"\n\nJust then her male colleague came over and had a brief whispered conversation with her, then went over to another desk and pulled a gun and his badge out of the top drawer.\n\n\"We just got lucky,\" stated Shauna, \"your friend in there just gave us the alleged rapist's name and address. My team member is on his way now to make the arrest; there's no further need for you to remain here, we have your contact information if we need to talk to you any further. Thank you for all your assistance, we'll keep you posted on the progress of the case.\"\n\nAt last, Ashley was going to get some justice for what had happened to her. I still wanted my father yanked over the pond and stuffed in a hell-hole prison for what I was sure he'd done to Barbara, but Judy pointed out that there would have to be all kinds of negotiations before the US Government could grab him and try him. We'd have to settle for what we could get right now; the mills of God etc.\n\nJudy dropped me at home but declined to come in; she had a date, with the young technician, Leon, so she wanted to get ready.\n\n\"See Nick, I'm over you already!\" she grinned, before blowing me a kiss and beeping the horn as she pulled away. \n\nWhen I went in, Ashley was watching TV wearing a long t-shirt, but something about the way she moved told me she was naked under there, so I formulated a cunning plan to confirm it. I sat next to her and slid her onto my lap, having a surreptitious feel while I was doing that; yep, I was right.\n\n\"Hi baby, wanna fool around?\" she leered happily at me, and my cock started limbering up.\n\n\"Of course, my angel, you know me!\" I grinned, standing up with her in my arms and heading for the corridor. \n\nOnce we were in our room, I wasted no time in stripping off and joining her on the bed. She was looking particularly appealing right now, probably because I'd come so close to losing her, and all I wanted to do was hold her close (and ravage her, of course, give me time...)\n\nBefore we started anything, though, Ashley propped herself up on one elbow and looked searchingly at me.\n\n\"OK, Nicky, what's going on?\"\n\nI told her all that had happened since I left at Midday, about grabbing Bobby and 'persuading' him to confess to what he'd done. Ashley looked puzzled at that. ",
        "\"Nick, it wasn't Bobby Czyzyck, I know that for a fact!\" she stated, and as I knew he'd already said as much in the police station, I asked her how she knew.\n\n\"Bobby smells funny, he always has; it's some kind of glandular thing; that's why he's never had any luck with girls, even with all his money. That smell of his is distinctive, and I know it well; he wasn't he one who did it!\"\n\nI thought I'd smelled something funny in the car, I'd just put it down to poor personal hygiene on the part of Bobby.\n\n\"There's more, baby, \"I told her, \"Remember I said Barbara sent details of my father's plans, instructions to his accomplice over here? That was Bobby's step-father, his old partner. The emails were instructions from my father on what he wanted done, and to whom, or he was going to expose Bobby's step-father's involvement in something or the other. The fact remains, though; my father was blackmailing Bobby's step-father to have mum raped and beaten as a punishment for leaving him; the instructions were explicit, as were the emails back to my father, detailing exactly what was done; he was supposed to use Bobby, as he could easily control him. I'm sorry. \"\n\nAshley looked levelly at me.\n\n\"This is what you were trying to tell me yesterday, isn't it?\" and I nodded unhappily; even thinking about it made me depressed and exhausted and angry. \n\n\"There is one final thing, though; the FBI. They might be able to use the UK/US Extradition Treaty to haul that prick over here. It might take a while though; my father is contemptuous of the law, but he won't hesitate to use it to his own advantage; I suppose it all comes down to your State Department convincing a judge in England that they should hand him over for justice in America.\"\n\nAshley leaned over to stroke my face gently.\n\n\"Then leave it, Nick, let the big boys fight over it now; we've done everything ordinary people can do, and it's in motion now; if it takes a while, so be it. At least we'll know we tried, and look, something's come out of it; Bobby and his father and whoever they used to do...what they did, they're going to jail, hopefully for a long time, so some kind of justice is gonna happen, and I have closure now. How about you?\"\n\nI was still keenly aware that there was no justice here for my Barbara, even though I knew in my heart of hearts that the sick son of a bitch had killed her; maybe the police would be able to prove it one day soon, and he'd be punished for that as well, but I still grieved for her, and there was no closure yet and maybe there never would be, not until that bastard was twisting in the wind and feeding the fucking crows.\n\nAshley pulled me back against her, her uncanny ability to tell what I was thinking letting her know the tenor of my thoughts.\n\n\"Let it go Nicky, let her go. She asked you to remember her, so do that; think of how much you loved her, not how much you think she'd want you to avenge her; from what you've told me about her, I think she'd be horrified to see her boy thinking those kind of thoughts, she brought you up better than that!\"\n\nSomething she'd said had struck a chord; her boy. I was her boy, and she was my mother, and Ashley was right; I owed her more than revenge. She'd asked me to remember her, how could I have forgotten that simple fact? Whether or not she gave birth to me, she was my mother, and she'd brought me up to not be like my father, and she'd succeeded. \n\nPart of me was part of her, and I realised that as long as I remembered that, she was never going to be far away. As realisation struck, I heard, as plain as day, her low musical chuckle and her voice saying something she'd said so many times when she was teaching me to read; \"That's right, little Saint Nick, you've got it!\"\n\nI started, and Ashley jumped as well.\n\n\"What, what is it Nicky?\"\n\n\"I just heard her, I heard Barbara's voice! She spoke to me!\"\n\nAshley smiled, and rested her head against mine.\n\n\"I know, baby, you finally let yourself hear her again, just like I had to learn to hear daddy again after he was gone. Now you're free at last,Nicky; doesn't it feel great?\"\n\nI pulled her close to me, luxuriating in the feel of her warmth against me, her clean, fresh smell, her soft, gentle hands, and most of all the feel of her skin against my hands as I roamed over her. Ashley sighed and laid back down, inviting me to kiss her some more while I stroked and caressed her, the taste of her lips and her hands on me exciting and so very stimulating. As we kissed, my hands cupped her marvellous backside, the firm round cheeks a delight to squeeze and knead, turning me on even further as we kissed and probed each other's mouths and lips.\n\nI slipped between her thighs, licking and sucking her pebbled nipples, drawing them between my teeth and making her gasp, before kissing down her flat stomach to her little navel, kissing, and tipping my tongue in the little jewel before licking and kissing lower. My questing tongue finally found her labia, the folds of flesh beginning to darken and swell as her arousal mounted. \n\nI probed and licked between the lips, pushing my tongue into her and finding her clitoris behind the little hood. My tongue on her little nub had an electric effect on her. She arched her back as she grabbed my head to hold it in place, her hips lifting to push her mons harder against my mouth, her breath coming in gasps as I probed, licked, and sucked. \n\nWhen I flatted my tongue and rubbed against her clitoris, her orgasm reared-up and rolled over her, making her groan out loud, as wave after wave made her pussy convulse against my tongue, but when I pointed my tongue and shoved it as far as I could into her tight little anus that was when she screamed out loud as a giant orgasm ripped through her, her hole clenching and forcing my tongue out as she squirted her fragrant juices in a spray across my mouth and chin.\n\nAshley slumped back on the bed, her body twitching and shuddering as aftershocks rolled through her and faded. I hovered over her, watching her beautiful features as she slowly relaxed, her lovely smile finally breaking out.\n\n\"Nicky, that was so...oh my God, that was so intense!\" she smiled. \"Your turn, baby!\"\n\nWith that she lifted her legs and pulled them back, holding herself behind her knees, tilting her entire crotch up at me.\n\n\"Can you guess what I want, big boy?\" she teased, her little anus gaping open.\n\nI shuffled up to her, sliding my screaming erection into her puffy slit, making her gasp with the sudden penetration, but I was just lubricating myself to do what she really wanted.\n\nAfter a few strokes, I withdrew, and pushed my swollen head against the tight pucker of her back door, and slowly pushed forward, my solid, bone-hard cock slowly sliding into her. Ashley caught her lip between her teeth as I slid slowly but unstoppably into her, until my entire length was embedded in her tight arse, my balls firmly up against her cheeks. I began to slide out again, and her eyes widened as I pulled back preparatory to pumping back in again.\n\n\"Oh God, yes, like that, oh yes, God, yes, harder, baby, do it harder...!\" she muttered, her eyes closing as she floated in her own private world. Her rectum pulsed and rippled against me, the whole length of my cock gripped firmly by what felt like a warm velvet hand, rhythmically squeezing me as I pumped into her. \n\nI couldn't hold out much longer as she pumped against me, and when she draped her legs over my shoulders so she could squeeze and massage her own nipples, the sight was too much for me. \n\nI felt my cock head swell and jam tight in her as my balls tightened, spunk bolting out of me to spray the inside of her accommodating arse, jet after jet of hot man-fat bathing her insides and coating her bowels with my seed. Ashley screamed as she came, her hands clutching convulsively at the bed as another hot spray of her own juices bathed my lower belly, cock, and balls as we rode the crest our mutual orgasm. \n\nAt last I softened and slid from her, slumping down next to her and holding her close as my heart slowed and my breathing slowly returned to normal.\n\n\"Do that to me on our wedding night, OK Baby?\" she grinned, stroking my chest and gently running her hand over my back, and I could only grin back as I nodded breathlessly.\n\n+++\n\nTwo days later, Judy dropped by with a copy of the Times Union newspaper, and there on the front cover, at the bottom of the page, were three photographs. The first was Bobby, and there was a picture of a greying middle-aged man, his name given as Michael Czyzyck, Bobby's stepfather. The third picture was what shocked me; it was the little maggot I'd slapped outside the burger joint, Bobby's friend. He had admitted rape and felony sexual assault, as had Bobby, and Michael Czyzyck had been arrested and had admitted procuring a rape, procuring a felony sexual assault and 2nd degree sexual assault. He was also being investigated by the FBI under the provisions of the 2001 USA PATRIOT Act. \n\nAshley read the article in silence, then walked into our room and closed the door behind her. I made to follow her, but Judy held me back.\n\n\"No Nick, let her be, she needs to do this alone. She'll be OK, she knows we're here, you'll know when she needs you.\"\n\nWe sat in the living room, waiting for Ashley to come back, and I asked Judy about her date, more for something to break the silence than out of any prurient interest. She grinned wickedly.\n\n\"Let's just say that Leon had certain...qualities that I tested to the limits last night; I only got in at 6.30 this morning! The boy is definitely a keeper!\" she smiled happily at the recollection.\n\n\"So you'll be seeing him again, then?\" I inquired innocently.\n\n\"\"Oh, I think that's pretty much a given, Nick!\" she grinned, \"Something that good definitely needs a second bite, just to compare to the first!\"\n\nI was happy that our friend was happy, hopefully Leon was the one for her, but if not, at least she was out there and not moping in some Emo den somewhere. We chatted about the news until the door opened and Ashley came out again. Her eyes were red and puffy where she'd obviously been crying, but she was smiling.\n\nI was there instantly, but she didn't need me, not now.\n\n\"It's OK, Nicky, I'm OK, it's over, it's finally over!\" she grinned, and I had to smile back.\n\n++++\n\nWork took up a significant amount of my time. Ashley had decided to go to college, she was studying for an MBA at SUNY right here in Albany, so while I worked, she studied, and mum grew ever closer to David; I suppose the turning point in our understanding of their relationship was the first time he stayed over; I got up early one Sunday morning to relieve myself, and apparently so did he; I almost walked into him coming out of the bathroom. After a moment's awkward silence we both grinned and carried on. As soon as I got back to our room, I shook Ashley awake.\n\n\"Ashley, I know something you don't know!\" I sing-song'd at her, and she stared blearily at me.\n\n\"Nicky, it's Sunday morning, it's too early for guessing games; either tell me or let me go back to sleep!\" she croaked.\n\nI was grinning like a Cheshire Cat. \"David's still here!\"\n\nShe bolted upright. \n\n\"NO! Really? Oh my God!\"She picked up her cell.\n\n\"What are you doing, baby?\" I asked, although I had a fair idea.\n\n\"Calling Judy, this is big, this is real big!\"\n\nShe spoke for a few seconds and hung up.\n\n\"She's on her way over; she wants to see for herself!\"\n\nTen minutes later, Judy was sitting cross-legged on the end of our bed, grinning like a pumpkin.\n\n\"I told you, I fucking told you!\" she crowed, \"pay up, Lowry, you lose, I win, Oh yeah, I am so smart, you're not, ha ha!\" She was obviously enjoying herself immensely.\n\nAshley looked at me with her hand out.\n\n\"Nick?\" \n\nI handed her my wallet and she pulled two tens out and handed them to Judy, who gleefully snatched them and took her time putting them away, smirking cattily at Ashley. I sat there wondering how it came to be that Ashley lost bets but I had to pay up; must be a relationship thing...\n\nWe heard mum stirring around in her room, so we all quietly hustled into the dining room and sat around the table waiting for her to show up. When she walked in we all grinned at her at once, big, insincere, happy, innocent grins, and watched her slowly go beet red.\n\nI decided to put her out of her misery.\n\n\"We don't mind, mum! We like David, Judy likes you, if you guys want to be...together, no biggie, honest!\" \n\nShe stared at us, and smiled guiltily, then looked back over her shoulder.\n\n\"Sweetheart, can you come here please?\" she called, and he appeared at her shoulder, wearing just pyjama bottoms and smiling slightly sheepishly at Ashley and me; then he spotted Judy. His expression was priceless; I wish I'd had a camera!\n\n\"Hi dad!\" she piped up, giving him a small wave and grinning slightly maliciously, \"What are you doing here so early, and where's your clothes?\"\n\nAshley stood up and hugged mum.\n\n\"I'm so happy for you, Mom, for both of you!\"\n\nMum looked relieved, and then sat down.\n\n\"You're sure both of you are OK with this? Really?\" we both nodded, followed by Judy.\n\nShe smiled. \"Good, because we were wondering how to tell you, but as all three of you are here, now's as good a time as any.\" She looked at David who nodded and put his arm around her shoulder.\n\n\"Kids, all of you, David and I love each other, and we want to be together. David has asked me to move in with him. I told him I'd only do that if all three of you agreed. I didn't want anyone to feel I was leaving them behind, or,\" glancing at Judy, \"invading their home, so I want to tell you, and ask you how you feel.\"\n\nAshley leaned over and kissed her.\n\n\"Nick and I are fine, Mom, honest; if it's what you want, do it, David's one of the good guys, so go for it!\"\n\nJudy tapped her father on the arm and hugged him, then hugged Mum, before grinning at them both.\n\n\"One up-side I can think of springs to mind right away; at last, someone will be there who can actually cook, no more dinners with microwave cooking times printed on them, oh boy, I can hardly wait!\"\n\nMum, David, and Judy soon settled in as the nuclear family, while Ashley and I remained at the house, which I slowly began to renovate; I wanted a nice, cosy, secure home, as we had plans, and we needed our home ready for that part of our life. However, David and mum surprised us with an announcement; they were getting married. Not that surprising, you may think, but part two was; mum was expecting. Ashley was in a haze when she heard, Judy more so. They were both getting a sibling, and they would be step-sisters. Judy asked Ashley if that meant she was entitled to take a run at me, as they were going to be sisters, and Ashley's reply was short, pungent, and to the point; \n\n\"Stay away from my man, you bandy-legged little trollop, or so help me, I swear I'll teach you the true meaning of the word 'pain'!\"\n\nJudy just grinned; she was still being bent double and pummeled by Leon at every possible opportunity, she just wanted to see the expression on Ashley's face when she asked her...\n\nI had become Senior Technician at Mark One, and as word got around that they had someone on-board who was actually certified for the various specialist cars from Britain that came in, their owners kept coming back. Mark got his Lotus dealership, and the look on his face when the first tranche of Exige's and Elise's were delivered was a sight to behold. They were sold off the trailer, people were so eager to have them, and because we were a proper Lotus dealership, people knew they had the full warranty and service backup those kind of cars demand.\n\nThe day Mark told me he wanted to sell up and live a little was a sore blow; I'd been busily building a relationship with every customer, and with jobs so hard to find, all that would be gone; there were no other places like Mark One; I was sunk. Or so I thought.\n\nI got a call one day to come and see David right after work, so I collected Ashley and went to see my parents, as I now thought of them. Mum was looking radiant; she was nearly seven months along now, and was absolutely beautiful, and David had that soppy 'expectant father' look permanently pasted on his face, but he was still rational, thank God.\n\nAfter the usual family courtesies, mum went off to make dinner with Ashley in tow, leaving David and me alone. David got right down to business.\n\n\"Nick, I heard from Mark what his plans are and I think you and I could do something there. I'm seriously considering buying the business and I'd like you to run it; when Ashley finishes college, she may want to step-in on the business side, I know Judy's not interested, she's finally decided to study medicine, so I need someone who knows what they're doing to be the one to move the business forward; are you interested?\"\n\nOf course I was; this was a God-send!\n\nI gabbled out my thanks, but David waved them away.\n\n\"Nonsense, this is to do with family, so I'll have a meeting with Mark tomorrow and see if I can't beat him down a little on his price. Now let's go and see if the ladies need a hand.\"\n\nThere was one other piece of good news, and I saw it quite by accident, as I happened to pause my TV channel hopping on CNN one evening two years later. \n\nMy father had been fighting extradition for almost two years now; he and Michael Czyzyck had been very naughty boys, selling black market computer chips and special solid-state batteries, the kind used in cruise missiles, to Iran, through a dummy company based in Odessa, on the Black Sea coast. \n\nThe Court of Appeal in London had finally decided that he had committed an offence against the United States; under the USA PATRIOT Act that constituted grounds for granting the State Department's request for extradition. \n\nThe bastard was coming here, and with any luck they'd stuff him in a cell with a huge rapist where he'd spend the rest of his miserable life being Bubba's gang-bang bitch. I could hear Barbara's laughter as I watched the news segment, seeing that face I'd honestly hoped I'd never see again collapse as the judgement was given against him.\n\nThe next morning, I was woken by the sound of Ashley being noisily sick. I immediately jumped out of bed to see if she needed help, but she waved me away as she wiped her mouth and rinsed with mouthwash. \n\n\"Baby, are you Ok? What's wrong?\" I asked, hovering over her.\n\n\"Nothing baby, I'm fine, everything's fine, this is normal!\" she smiled.\n\nI was still worried. \"You don't sound fine, you sound terrible, healthy people don't yark like that...!\"\n\nShe turned and smiled at me, then laid her head on my chest.\n\n\"Nicky, we're fine; both of us are fine, honest!\"\n\nNow I was puzzled. \"What do you mean both of u...Oh, OH! Oh MY GOD! You're pregnant!\"\n\nShe smiled shyly at me and nodded. I was shaking, I was going to be a father, we were having a baby, OMIGOD!\n\n\"Nicky, Nicky, NICKY!\"\n\nEventually I calmed down enough to realise she was talking to me.\n\n\"Calm down, baby, we're not having it today, relax! Call Mom and Dad, call Judy, and then get dressed. Move, baby!\"\n\nI was floating; after the initial euphoria, all I could think was 'I'm going to be a dad; I'm going to be a dad!'\n\nI never saw or heard of my father again. Much as I had wanted to push him off someplace high with a stout rope around his neck, I knew that was not the way to deal with someone like him; his greed, his contempt for the law, for his fellow man, and for his beautiful, wronged, wives had brought him to this, but I wouldn't rejoice in his punishment; Barbara had brought me up better than that. His punishment was just and fitting, that was good enough for me. The mills of God grind slowly, but they grind exceeding small...\n\n++++\n\nI knelt by the grave in Stanwix Cemetery in Carlisle, on a cold late-November morning. The wind coming in from the highlands of Scotland, and frigid with the promise of early snow, blew leaf litter and small twigs around me as I finished clearing the gravesite. I dusted a few more away, and then I could finally cry. ",
        "Ashley stood back, tears sparkling in her eyes, with our little daughter held against her to keep her warm in the frigid wind, letting me have my moment alone with my mother so I could say goodbye properly. The new headstone simply said 'Barbara Davies, beloved mother, taken too soon. I love you, Mum'. We'd had the original headstone, an ornate stone slab covered in his phony, lying, un-felt messages of love, a disgusting monument to my father's hypocrisy, taken down and crushed for road-stone, and had this one put in its place. My father was currently serving a 40-year term in a federal penitentiary 3,000 miles away with no hope of parole, so I doubted he'd be objecting. \n\nAshley had finally convinced me to reach out to my two half-brothers, to let them know that I was back, and ask them to meet me one last time; they'd never responded, and I was in no mood to pursue them. There was no evidence they'd ever come here to see their mother, either, even though the cemetery was only half a mile from the house; the grave had been untended, neglected, and overgrown. Even now they'd elected to stay away, but I was relieved and untroubled by their absence. Whatever tenuous link we'd had was gone now, and I was free of any further encumbrance from this part of my family; with Barbara's death, all connection to these people had gone, and that was how it should be.\n\nThe baby finally squirmed out of Ashley's grip and toddled toward me, so I picked her up and showed her to her grandmother.\n\n\"Mum; this is your granddaughter, her name's Barbara! Baby, say hello to my mummy!\"\n\nMy little girl dropped the flower she was carrying onto the grave, enunciating lovely little pear-shaped sounds as she grinned toothlessly at me. Ashley knelt and arranged the posy she was carrying in the little flower-holder, and with that there was no more to say or do, so we left, all three of us, to go back to our life and our loved ones; I don't think I'll ever go back; I don't need to; no-one is truly gone until you stop saying their name, and with my daughter named after her grandmother, I will never be done saying her name.\n\nWe drove away, and pointed north, heading for the M6 motorway to take us back to Birmingham and our hotel for our flight from Birmingham International in the morning. I'd just taken the southbound exit for the four-hour drive from Carlisle to the airport hotel when Ashley flicked on the radio and my one-time favourite FM station, Lakeland Radio came on. \n\nI listened to the end of an old Neil Diamond track and the DJ announced the next lunchtime request, another oldie, a special request for Nick, from Barbara. My eyes widened as the Beach Boys sang 'Little Saint Nick'. Ashley went to change stations, but I stopped her; it could have been a coincidence, but I felt somehow that it wasn't, that it was a message for me, my mother finally telling me it was over, and saying goodbye, and so I listened with tears on my cheeks as I said goodbye to her for the very last time."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother sister sex",
        "brother sister incest",
        "brother",
        "sister",
        "anal",
        "incest romance",
        "sibling romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/rag-doll-ch-04"
}