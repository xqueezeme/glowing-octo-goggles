{
    "title": "Speech and Debate Pt. 16: Finale",
    "pages": [
        "I survived Jury Duty ya'll! AND finished this chapter!\n\n212,315 words. Essentially that is two full length novels (or one Gone With The Wind. :) ) in 16 months. That's how long I have lived with these characters in my heart and mind. And I've loved every minute of it. I hope you have as well. Your support has meant the world to me.\n\nSo here it is! Here is the final chapter of this series. There are two smaller series planned for sometime in the future. One on Ian and Justin (a spin off series if you will) and one on David and Daniel in college and post college. They will be smaller stories, shorter chapters. \n\nI am going on hiatus from these characters for a few weeks so I can keep focusing for a bit on my Epic Fantasy series for a bit (those are 13-17 full length novels in a High Fantasy / Historical Fiction / MM Romance Erotica vein, while I plan the other David and Daniel epics. I will then be expanding these stories and editing and rewriting a bit for publication. Send me an email or meet me on my authors page to get more information!\n\nI would like to thank each and every one of you who have helped me find my voice as a new author and sent me words of encouragement and thanks over the months. You have helped me find my path in this and kindled in me a true desire and passion to make writing less of a hobby and more of a career aspiration. I will never be able to express how much that means to me. Thank you, Thank you, Thank you. \n\n- DAMackey\n\n*****\n\nDISCLAIMER: The following fictional story deals with sex among males. If you are offended by such material, are too young, or reside in an area where it is not allowed, depart. Though not observed in this story, care enough about yourself and humankind to practice safe sex.\n\nThe author retains all rights. No reproductions or links to other sites are allowed without the author's consent.\n\n********************\n\nGifts, Goodbyes, Fairy Nights and Dorm Rooms: The Final Chapter\n\nby D A Mackey\n\nThough I had spent most of my time alone, wrapped in my own little nerd world for the past several years, (read: my entire life up to 5 months ago) even I had sometimes indulged in a few of the rituals inherent in a teenaged Summer. I had seen the summer blockbuster movies marketed to folks of my age group. You know the ones I'm talking about; where the overly attractive white boy \"finds himself\" with the help of the \"alternative\" girl and they have a series of adventures and missteps together. The popular boy stands up to his hateful clique of popular friends when they make fun of him for hanging out with the \"weird chick,\" and it all leads up to one terribly romantic kiss by a bonfire on a beach somewhere on a clear night with the full moon shining down on the two lovers sharing a blanket wrapped around their shoulders as the girl lays her head on his shoulder. They often star current Pop Princesses branching out from auto-tune into \"acting,\" or whichever Hollywood starlet is en vogue that month.\n\nDisregarding the obvious flaws with such films (it takes weeks to get permits for bonfires on public beaches, not to mention it's 90 degrees at night, even with a beachy breeze, so a blanket next to a roaring fire in July is just unthinkable; the people cast as the teenagers are usually in the range of early to mid twenties with zero acne and the shiniest hair imaginable) I hadn't expected there to be as much truth to those plot lines as I found there to be during my summer before college with Daniel.\n\nThe morning after graduation and onwards will always be one of the most special times in my life. Just the contrast to my previous Summers alone was enough to make this one more than memorable. I didn't even keep a list of the 50 novels and classics that I challenged myself to complete before each new school year, as I'd done since the summer before 6th grade! The list was growing pretty short at that point, anyhow; I'd read pretty much everything any reputable \"Top 100\" list could put out there. I did, however, challenge Daniel to read five novels that I thought he would enjoy given his affection for Jane Austen. \n\nDaniel was perfection that Summer. Somewhere in the back of my mind I knew that he was doing everything in his power to keep us both occupied and busy so that I wouldn't focus on the timeline that counted down the days to my departure for University. He refused to let me keep a calendar with the numbered days. He even confiscated all of my red sharpies and did a security check for anything that I might have tried to use to track the hours and days as they ticked by.\n\nIn all honesty, the schedule he planned for us allowed me little to no actual down time with which to obsess or worry about the future. Every day was something new to do, every night something equally spectacular. Even the days spent inside watching TV or bingeing on movies were packed to the point of excess. \n\n(I made sure that he became well acquainted with the glory and fantasy that is the inestimable Katharine Hepburn. Can you believe he'd never seen any of her movies? We started with \"Bringing up Baby,\" and worked our way from there.)\n\nWe went camping, hiking, swimming in rivers and lakes and private pools, spent free hours and long weekends at Ian's lake house, went to the beach four different times, each time to a different beach. Daniel racked up a lot of miles on his old Jeep for sure. \n\nThe jocks even took me and Justin to a batting cage and tried to teach us how to hit a baseball. Now, I say \"tried\" because neither of us could boast any real talent for hand eye coordination. But we both managed to hit a few pitches...when we weren't flinching at the balls flying 95MPH towards our faces. \n\nDaniel also took me shopping for new clothes a few times. He'd re-started our work out routine once school ended and finals were behind us; I had to admit I was noticing some changes to my body. I had broader shoulders now and the lines and grooves on my hips had deepened. Even my chest was beginning to morph from birdlike to some semblance of tone. Daniel insisted that a new body deserved new clothes and he was more than willing to provide them. \n\nHe helped me pick my courses for my first semester at school. I reveled in the freedom of choice and the sheer number of options. Our High School had a decent course catalogue, but there were only so many AP courses one could take. Daniel stoked that excitement when we were choosing my schedule, knowing that if he could get me riled up enough about the new things I would be learning in the Fall that I wouldn't remember that I was picking the things that would eventually replace my time with him. \n\nI wonder if it pained him to do so? I wonder if as he excitedly mentioned things he thought I would enjoy studying, he knew that he was offering his assistance at driving a wedge between us. \n\nSometimes, Daniel would wake me up in the middle of the night when we were staying at my house or his, bundle me into the Jeep in my pajamas or just a pair of undies. We would drive all night long with the windows down, just watching the landscape pass us by in a blur, staring at the stars and feeling the humid summer air on our skins. \n\nEverything he did with me and for me just made me love him all the more. \n\nI didn't think it possible, but he anticipated my every mood, watched and listened and made that Summer all about me, him, and us. I didn't even have the energy to worry about my parents increasingly bitter divorce or the fact that my father had started dating a lady who was closer to my age than his by at least a good two decades. \n\nThe one dark time in that Summer was the four days I had been forced to spend at freshman orientation. My University was out of state, still only 4 hours away (three if Ian was the one who drove,) but it seemed light years. \n\nDaniel drove me up. Those four days were literal torture. I had already read all the information they drilled into us. I am not one for \"team building\" exercises and trust falls. If that wasn't painfully obvious. I did my best to slip away and call Daniel whenever I could. I spent the nights tossing and turning on the ridiculously small dorm beds, unable to sleep without him near me.\n\nIf this was a glimpse of what school life would be like without him, I was seriously considering going the Bill Gates route and just dropping out before I even started. Every moment made my soul ache. I knew it would get better as I got used to it. But, dammit, I didn't want to get used to it. I had spent years in hellish loneliness already. It seemed cruel that I would be tossed back into bottomless pit that so soon after Daniel rescued me from it. \n\nAs the dreaded move approached, I came home one afternoon to a note on the kitchen counter from my mother. In no uncertain terms, she threatened my life if I didn't start going through my room and packing the things I would need to take with me and what I could part with or donate. \n\nAfter two hours of procrastination, Daniel finally convinced me to get started. I plodded up the stairs like I was on a death march, Daniel behind me, literally pushing me up the stairs as I whined the entire way.\n\nDaniel settled himself onto the foot of my bed, legs crossed easily beneath him. \n\n\"Three piles, babe. Keep and Pack over here, Donate in the middle, and trash over there,\" he said, sectioning out my room for me.\n\n\"Do I have to?\" I groaned. \"Can't I just throw it all out and start over. Better yet, burn the house down and get the insurance money and move to Bora Bora! You wanna go to Bora Bora with me? I'm sure we could find a bungalow somewhere!\"\n\nDaniel leaned back on his elbows and smiled at me.\n\n\"While the thought of you in a speedo on white sand beaches is enticing, I don't think arson is the way to go babes. Come on, the sooner we get started, the sooner it's done and we can go for a drive.\"\n\n\"Uuuuuuuuuggh,\" I sighed melodramatically, pulling open my closet doors, \"but I blame you if I have an emotional breakdown.\"\n\n\"Deal.\"\n\nTo say I went through the task slowly would be like saying the Grand Canyon is a drainage ditch. Every single item took minutes to contemplate. I even lined up my pencils and pens and did an ink and graphite test on a scrap piece of paper before tossing any of them into the trash. \n\nThe way I saw it, if I could draw this out for as long as possible, then it would take literally forever and I wouldn't ever have to move. If I could just keep this sorting going, then next weekend wouldn't be allowed to arrive.\n\nBut dragging my feet also prolonged my pain. Each item I found and sorted was like chipping off a piece of my soul. Daniel did his best to help me along with words of encouragement and witty comments about clothes and things I wouldn't ever wear again. \n\n(I distinctly remember a heated conversation about the pros and cons of overalls. He won that battle and the overalls are probably still hanging on a Goodwill rack somewhere.)\n\nSeveral hours later, I pulled a shoe box from the top of my now empty closet. I poured the contents onto the bed: discarded bits of paper and receipts and broken tidbits. Why I kept them, I have no idea. None of them had any value. I was gearing up to sweep them all back into the box and toss the entire thing onto the trash pile when I caught the glimmer of silver on the bottom.\n\nI fished it out and held it up to the light.\n\n\"Holy shit,\" I breathed.\n\n\"Is that?\"\n\nI nodded.\n\nI had totally forgotten all about it. \n\nThe silver cock ring Daniel had bought me for my Birthday that first weekend we'd spent in Boston. When this whole thing had started. It shone and sparkled in my fingers and I couldn't stop staring at it. The first thing Daniel had ever gotten for me, and I had almost thrown it away. \n\nI felt my chest getting tighter. I found it difficult to blink for fear I would dislodge the tears I knew were starting to well up in my eyes. \n\n\"You okay, baby?\" Daniel asked quietly. I could feel his eyes on me, feel his tense concern.\n\nI tried to nod my head but before I could do so convincingly, I felt a hot tear run down my cheek.\n\nDaniel's arms were around me before the second tear could fall; I was suddenly crushed to his chest. I buried my face into his shoulder and breathed him in, everything that made him my Daniel.\n\n\"Shhh, it's okay David. It's okay.\" He comforted as I tried to stop the tears.\n\nDaniel released me from his hug and jogged to close my door. He returned a moment later and grabbed my face in his hands, turning me up to kiss him.\n\nIt's nearly impossible to cry when you are kissing the man you love. At least, not without slathering him in snot and salt water. And who wants that?\n\nOver and over he kissed me, my breath getting ever shorter as he gave me no time to recover between attacks. He pulled me tight to his body and pressed his lips to mine hard and fast, his tongue darting out to meet mine. As was always the case when we kissed, my brain went a little fuzzy. The emotions roiling inside me like a turbulent sea were still there, but they were wrapped and contained in the fog created by Daniel's physical affirmations of his love for me.\n\nI felt his hands on the small of my back pulling me to him tighter and tighter as our tongues danced together. I heard a loud metal clink when I dropped the silver cock ring so I could slide my arms under his and grab into his muscled back. \n\nWithout warning, I shot onto my tippy toes when Daniel grabbed my crotch in a full and tight squeeze.\n\n\"Ahhhhh,!\" I sighed high in my throat, my eyes on the ceiling, eyelids flickering. \n\nDaniel rubbed and I responded instantly.\n\n\"Daniel, what are you doing?\"\n\nHis fingers were at the button on my pants, fumbling but eventually popping it. He pushed them to the floor. My cock pulsed and throbbed hard against my red boy shorts, brought to life already by my expert boyfriend.\n\n\"What does it look like I'm doing, silly?\" \n\nHe sunk to his knees before me, kneeling midway between the Donate and Trash piles, his hands on my hips, keeping me firmly in place. As if I had any intention of moving or running from his sudden affections.\n\nThere is nothing so sexy as looking down into the upturned eyes of your boyfriend as his lips move over your cock, even trapped behind red cotton as mine was. The sun sparkled in his brown gold eyes as he stared up at me, setting the specks of gold in their depths on fire and making my knees tremble. His breath was hot and moist on the underside of my head as he tongued and kissed up and down my shaft and sucked on my balls through the briefs.\n\nMy fingers were in his dark curls pulling him deeper into my crotch. \n\nI felt like I had been unshackled when he pulled down my briefs and my thick cock swung forward. It didn't even make one complete bounce before Daniel's lips were around it and half of my length was buried in his throat. \n\nI stepped out of my pants and undies as he bobbed further down my shaft. His tongue made waves against me; he knew just the right amount of pressure to use, just the right amount of sucking and manipulation. \n\nI grabbed the sides of his head and guided him further down, pushing him into my hips and feeling every inch of my rock hard tool sink into him. He didn't even flinch as his nose ground into my trimmed pubes. His fingers massaged and prodded at my high ass and his throat spasmed around me, milking me in time to my own throbs.\n\nHe pulled back and gasped, wiping a tear from his eye.\n\n\"Fuck my face babe? Please?\" he asked between panting breaths. \"I want to feel you slide in and out.\"\n\nI didn't need to be asked twice.\n\nDaniel opened his mouth again and I mercilessly pushed my cock down his gullet. \n\nSomewhere in my brain I was conscious of making sure I didn't hurt him, but that somewhere was very deeply buried. I needn't have worried. If the moans escaping from Daniel's full mouth were any indication, he was enjoying this rougher intercourse as much if not more than I.\n\nIn and out I thrust my hips, watching my slick wet cock vanish inside him as he stared up at me through his thick dark lashes. I picked up the speed as I felt the fog around my swirling emotions begin to sink into them. I struggled to maintain control on them, scared that if I let them gain the upper hand I wouldn't be able to stop myself or control my body and might actually harm him. \n\nMy dick was in absolute heaven. It pulsed out a steady stream of precum into my love which he took with practiced ease, swallowing whenever he could, between sighs and groans.\n\n\"You're gonna make me cum soon baby,\" I warned, never slowing my thrusts, grinding my hips into his face when he had me all the way inside his throat. \n\nEven if I had lost control, Daniel was much the stronger of our pair. He easily pulled off of my dick and held me back with little trouble. I was a tiny bit proud when I saw the muscles in his arms tense up a bit as he held me back. At least I gave him a little bit of a challenge.\n\nBut only a little. \n\n\"Not yet,\" he begged, grabbing my slick shaft with a free hand and stroking me gently. His thumb worked up to my slit and pushed out another drop of crystal clear stickiness which he flicked onto the tip of his tongue.\n\nHe stood quickly, turned his back to me, lifted his tank top and pushed his shorts to the floor. He bent at the waist over the foot of my bed then crawled up onto his knees on the mattress. \n\nHe turned to look back at me, pressed his chest to the comforter and pushed his bare ass in my direction. His perfectly tanned ass, only darker and more defined after hours in the sun and days at the gym, was presented to me like a gift. His tight hole puckered in and out, hairless, pristine, and waiting. I loved how his massive balls hung down between his muscular thighs, swinging like two eggs in a basket. His dick must have been rock hard because I couldn't even see it's glorious length from behind him. \n\nHe reached behind him and ran a finger down his crack, pressing it into his own hole.\n\n\"Fuck me. Now.\" \n\nIt was not a question. It was most definitely a direct order from a superior office.\n\n\"But I'm not...\"\n\n\"Now. Shut up, don't think, and fuck me. Make me cum. Shoot your cock off inside me.\"\n\n\"Daniel,\" I began.\n\n\"Now,\" he moaned, burying his face into the covers and wiggling his bare ass in the open air. \"Shut up and fuck me right now.\"\n\nGay or straight or anything in between, when someone begs you to fuck them, it's no longer a question of if you will, but when or how much. \n\nDaniel had decided on the when. And that when was right fucking now. It would have been un-southern not to grant his request. And I was and still remain every inch a southern gentleman.\n\nI didn't so much as align my cock head against Daniel's open and waiting hole before he slammed his hips back hard into my cock and impaled himself.\n\n\"Ahhhhhhh, God Yes! Fuck me!\" he screamed.\n\nMy dick was in the vice of his shute, pressed on all sides and ensconced in the heat of his passions. I felt his hole tremble around the base of my cock pressed all the way inside him, felt that hard knot of nerves buried deep, throbbing against my cock head.\n\nDaniel rocked on his knees, quickly fucking himself against my pole, pulling an inch or two off before sliding it back inside him. He whimpered and gripped the bed sheets in white knuckled fists. I dug my fingers into his hip bones, and used one hand to press his chest harder to the mattress. Not that I had any real effect in keeping him face down there. He could have easily evaded my grip, but when he felt the pressure as I pushed down between his shoulder blades his entire body shook.\n\n\"Hard,\" he whined. \"Fuck me hard. God baby, I need it, fuck me hard.\"\n\nI more than obliged.\n\nI rarely ever felt strong or all that manly, but as I pumped into Daniel's tight hole, I found that I was gritting my teeth and growling low in my chest. Each thrust felt like an affirmation of myself. ",
        "Harder and harder I pounded into his tight hole, watching him squirm beneath me, his muscles taught and a thin sheen beginning to form on his lower back. He whimpered and sighed into the blankets, balled up his fists and pounded the mattress. \n\n\"Yes. Don't stop, David. Oh fuck yes, Pound my ass! Oh god just fuck me harder. Harder! Fuck baby.\"\n\nHe was driving me on, forcing everything inside me to rush out into him. I only just registered the slapping of his ass as it bounced back and forth on my hips, barely noticed the redness there as I continued to fuck him. I felt my chest beginning to tighten, felt all the anger inside of me begin to ball up, begin to take over and take control. \n\nI grabbed his hips hard and power fucked him as fast as I could, my hips a blur in the air. I slapped his ass hard, the smack like a cracking whip.\n\n\"YES!\" Daniel nearly cried. \"Oh god yes!\"\n\nI felt like an animal, primal, stalking, taking what I needed when I needed it. Everything poured out of me in a rush. All the hurt and fear, the anger and pain at the coming change, it all vanished inside of Daniel. He took all of it, siphoned it out of my soul as he rode my thick cock.\n\nI felt his body go tense beneath me, but I didn't stop. I heard his breath catch and his moans cut short. His prostate became like a rock as my massive member slammed into it over and over. He didn't move, but I felt him get close, felt his hole tighten.\n\n\"Oh goooood, fuuuuuuckkk, ahhhh!\" he let out the moan in a long scream that verged on a sigh at the volume of a shout. I heard his cum splat against the covers beneath him.\n\nWithout warning, my balls pulled up tight and I heard myself growl like a rabid beast. The first wave hit me and I felt my cock expand inside him, pushed myself to the base and shot my first load deep into his hot hole. Three thick streams coated his insides as I let out a bellow like a dying beast. \n\nI yanked my cock from him quickly and aimed my head right at his opened hole. Four more blasts of my whiteness painted his tan skin, dripping over his spasming opening, coating his ass cheeks with my goo. \n\nIt took several minutes to regain my composure. When I did, I collapsed bodily onto him, pushing his elevated hips to the bed. I didn't care that my cock got re coated in my own cum as I nestled it into the crack of his bubble butt and laid my head onto his back.\n\n\"Now that was one for the books,\" Daniel sighed as he struggled to regain his breath after my onslaught and trapped beneath my bulk.\n\n\"I'm gonna need a minute...no talking,\" I panted.\n\n\"Nice try guys, but next time you gotta up the volume. I don't think the neighbors six doors down could hear you very well!\"\n\nMy sister's voice came from the other side of my closed door. \n\nDaniel and I tried to control our giggles but in under a minute we were a mass of laughter rolling around half naked on the cum drenched bed.\n\nWhen our passions and laughter eventually subsided, I laid with my head on his massive chest, running my fingertips over his dark chest hair, feeling for his heartbeat.\n\n\"Thanks,\" I said after a while.\n\nI don't know why I said it or what I was thanking him for.\n\n\"No problem. I think we both needed to let off some steam,\" He replied.\n\nI nodded and kissed his chest, throwing my arm across his abs.\n\n\"More than a little. I felt like an animal, but I needed that. I feel better now.\"\n\n\"Not half so good as I do. I love it when you make me cum without touching my cock.\"\n\n\"Mmmm,\" I moaned.\n\nI wanted to stay like that forever, tangled up in his limbs and laying on my bed just staring into space. Why couldn't time just stop and let me live in that moment until the Universe exploded?\n\n\"Sleep?,\" Daniel asked sometime later, when we were more ourselves once more.\n\n\"Food, THEN sleep,\" I responded.\n\n\"Even better.\"\n\nDaniel disentangled himself from our pile, retrieved a pair of shorts from one of the piles and proceeded to order us a pizza. As if he wasn't already perfect enough, he even made a point to ask my sister if she wanted any and what toppings she'd prefer before placing the order. When the pie arrived we ate and watched TV for a bit before heading back to bed. \n\nLuckily, the cum was dried by that point and both of us were too tired to care about changing the sheets. We just stripped naked, crawled in bed facing each other, foreheads pressed together and let the sound of our breathing become the first song of the soundtrack to a dreamless sleep.\n\nThe morning found me much improved. Well, as such things go for hormonal teenage boys. \n\nA few days later, only 2 days before moving day, Daniel was in our kitchen making breakfast for me, Mom, and my sister. I had to admit it gave me a bit of a chuckle to watch Daniel go about the kitchen in his tight white tank top and little running shorts, cracking eggs and humming to himself while he flipped the bacon. \n\nI did have to elbow my mother a few times. \n\nWhenever Daniel would bend to check the fritatta he'd put in the oven, Mom would raise a little higher in her seat and blatantly check out his butt. I didn't blame her of course. But I felt it my duty as his boyfriend to be a little territorial. \n\n\"Well, sue me, sweet pea,\" she whispered to me. \"If your father can suck the youth out a 25 year old floozy, there's no reason I can't get me one myself!\"\n\n\"He's 18 Mamma! And he's not a floozy!\"\n\n\"Hush up! You know that's not what I meant. But ask him if he's got any single cousins.\"\n\nThis was before the days of \"face-palm\" but that is precisely what I did. My sister kicked her feet in glee at my discomfort.\n\n\"What are you boys up to today?\" Mamma asked to the both of us, allowing me a little time to recover from my blush.\n\nDaniel pulled the frittata from the oven, placed it on a hot plate and poured us all some OJ. \n\n\"Shopping mostly,\" he said, passing out the plates and silverware. \"He's got that massive list for school and I got a few extra things he's gonna need, too. Then after that, I have an event in the evening, but I should be back later. Around 9 or 10, if you don't mind me keeping him out late?\"\n\nI loved it when he went all Rhett Butler, Southern Gentleman, asking permission from the parents. It made me feel like a Lady. Well, not really, but you know what I mean. \n\n\"Keep him as long as you need, Sweet Boy,\" Mamma permitted.\n\n\"Keep him forever, for all I care,\" the sister mumbled under her breath. \"We don't want him back.\"\n\n\"I'm gonna send you to the gypsies if you don't mind that tone, young lady. You're gonna miss your brother when he's gone in a few days. Mark my words. And if you don't, I'm gonna make you miss him.\"\n\nMamma to the rescue. \n\nI couldn't resist sticking my tongue out at my little brat of a sibling. \n\n\"Did you see that! Did you see?! He just stuck...\"\n\n\"What did I just say little Missy? Did I stutter? You want to spend the rest of your natural born life in your bedroom with no internet?\"\n\n\"No ma'am,\" she grumbled and returned to her fritatta.\n\nI stuck my tongue out again.\n\nSeveral hours later and more swipes of Daniel's credit card than I care to admit to, we had accumulated an impressive pile of stuff to haul up to school. \n\nAny time I'd picked out something in the basic variety, Daniel had opted for the top of the line option. (who needed a mini fridge with temperature controls, a cheese drawer, and attached freezer?) What use would I possibly have for a humidifier? I was headed North but only by 120 miles, not crossing the Mason-Dixon. There would be humidity enough up there still. \n\nAnd woe be to me if I even attempted to pull out my wallet when we go to the cashier!\n\nWe unloaded his Jeep and took over the Living Room with all of my new stuff. Daniel kissed me gently and said his goodbyes to go get ready for the event with his parents that evening.\n\n\"You know I would take you with me, but my parents say it's only for invited guests and I'm already their plus one. Promise you aren't too mad at me?\"\n\n\"I'm not!\" I promised for the umpteenth time that day. \"Now get your butt in gear, mister. And what a cute butt it is!\"\n\nHe kissed me again and I smiled.\n\n\"And don't forget to send me a pic in your Tuxedo!\" I called back as he left. \"Love you!\"\n\n\"Love you too babe!\"\n\nAnd so I was left alone with several thousand dollars worth of stuff I didn't know what I was going to do with and a still angry little sister who stalked the hallways like some kind of demented woodland creature bent on avenging a great wrong done to her people.\n\nAll in all, in was shaping up to be a fun evening. \n\nI got the picture of Daniel in his tux about an hour later as I unboxed some of the larger items we'd bought. \n\nWhen I saw it, it was something like being shot. It was the exact same tuxedo he'd worn to Prom. The exact same. I don't know what I was expecting. Daniel was wealthy, but I doubted he was wealthy enough to own more than one tuxedo. My mind whirled back to that time, to that horrible night and the way he'd rescued me from Amy. That sent me down a rabbit hole of memories.\n\nWithin minutes I was sobbing on the floor surrounded by cardboard boxes, mini-fridges, and spiral bound notebooks. Not even flipping through the new notebooks could relieve my sadness. For a nerd, that was akin to snorting a line of cocaine. But nothing assuaged me that night. \n\nTime passed so slowly. 10 o'clock came and went. 11 o'clock soon after. \n\nWhere was Daniel?\n\nIt was nearing midnight and I was nearing an anxiety attack when I finally heard him pull up in the driveway. I rushed to the front door, flung it open and started in on him before he'd even closed his car door.\n\n\"Where were you!? You're two hours late? Why didn't you call me?!\"\n\nDaniel calmly walked towards me and answered each of my questions with a steady voice.\n\n\"I was at the event, which ran long, there was no cell service, and I sent you a text when I was leaving. Check your phone.\"\n\nHe was correct. That didn't make it better. But still...how had I missed it?\n\n\"Where's your tuxedo?\"\n\nHe was wearing a pair of jeans and a grey t-shit now. I was a little disappointed. Though, given my reaction to just a picture of him in his formal wear, I may have been institutionalized if I'd actually seen him dressed in it in person. \n\n\"I changed before I came over. It's uncomfortable and not exactly fitting for where we're going.\" \n\n\"And where is that?\" I asked, trying to stop the sound of my own heartbeat in my ears and taking long deep breaths.\n\n\"You'll find out when we get there. Get in.\"\n\nI knew better by this point in our relationship than to try and badger the information out of him. If Daniel wanted to keep something secret it would be kept a secret until he decided to reveal it. \n\nSo I sat in the passenger seat, buckled up and settled in for a ride to wherever he'd picked. I took solace in just holding his hand as he drove, staring out the window and watching the city roll past.\n\nI had it figured out before too long. There were only so many places in the city to go at this hour after all. When we turned into the State Park driveway, I was surprised to see that the gate was opened for us. They normally closed the park to visitors around 8PM.\n\n\"Why is it still open?\" I asked distractedly.\n\n\"Pulled a few strings,\" Daniel said as if it was the most common thing in the world.\n\n\"Pulled a few strings? You know what strings to pull to keep a State Government run property open past the legislated time frames? Have I been dating a wheeler and dealer all this time and didn't know it?\"\n\n\"Mmmhmm,\" Daniel replied with a small nod and left it at that.\n\nHe drove a bit further into the park and parked next to a car I recognized instantly.\n\n\"What's Ian doing here?\"\n\n\"He's playing lookout. It was all I could do to convince him he didn't need to wear full blown head to toe camoWho better to scare off wild animals that someone who's built like one?\"\n\n\"You have a point.\"\n\nDaniel parked the car, turned the key and motioned for me to follow him.\n\nHe reached for my hand as we walked down the little dirt path I knew lead to the lake side beach area. I'd been to this park on at least 4 class field trips over the years and knew my way around. When we crested the little hill of \"dunes\" and the beach came in view, I wondered if perhaps I didn't know the area quite so well as I thought.\n\nSome things were familiar: the picnic tables near the trees, the wide sandy section of beach, the lifeguard stand. \n\nBut the rest was fully transformed. \n\nPaper lanterns glowed in red, white, green, and gold. They hung from the trees and on rope that someone had strung between the lifeguard stand and the shore line. Countless strings of tiny twinkling Christmas lights made up the spaces between them. A large white blanket was the only thing on the sandy shore, complete with an old style whicker picnic basket and rose petals all around. Candles in mason jars stood guard around the blanket, their tiny flames adding a flickering warmth to the electric fairy lights above.\n\nIan and Justin stood perched near the lifeguard stand, the lanky boy resting easily against Ian's bulk and idly running his fingers over Ian's forearms thrown around his shoulders. They looked up expectantly when we arrived.\n\n\"Took you long enough!\" Ian said, beginning to make his way towards us. \"I was getting ready to start in on that basket, dude. I'm starving!\"\n\n\"You ate half an hour ago you giant buffoon,\" Justin shot back. \"I'm going to go bankrupt trying to keep you fed at this rate.\"\n\nIan shrugged and kissed Justin on the forehead.\n\n\"Did anyone give you any trouble? Park Rangers?\" Daniel asked.\n\nJustin shook his head.\n\n\"Nope. One stopped by and we showed him that permit you gave us. He left about an hour ago now. Everything is all ready to go.\"\n\n\"Thanks.\"\n\nIan and Justin made as if to walk past us towards the parking area.\n\n\"You aren't going to stay?\" I asked.\n\n\"Not a chance,\" Ian said.\n\n\"This is your night, David,\" Justin added with a friendly smile.\n\n\"But you guys went through all this trouble..\"\n\n\"No trouble at all, lil D. It's our pleasure. We'll see you tomorrow before you guys head out, okay?\"\n\nI nodded. I feared if I tried to speak, the lump in my throat would crack and I'd be a weeping mess again. I could do that in front of Daniel. To sob before Justin and Ian would be another thing entirely. I didn't think I could live through the shame of that.\n\nI kept my tears bravely in check and nodded to them as they headed to the car.\n\nDaniel and I just stood and stared for a moment, listening to their car start and pull away.\n\n\"Daniel, I...I don't know what to say.\" I felt the tears in my eyes get thicker.\n\n\"So don't say anything, my love. Come. Let's have some food.\"\n\nHe lead me to the blanket, careful to step around the mason jar candles; we sat under the clear night sky by the shore of the lake in the fantasy world he'd worked so hard to give me. \n\nI know I complained about the summer blockbuster movies with the bonfires...but I had to admit, the concept had a very distinct appeal when you were part of it in real life.\n\n\"Something to eat,\" didn't do justice to what Daniel had packed in that picnic basket.\n\nHe brought white wine, red wine, champagne, and an assortment of Italian food I had no idea he could manage. A little prodding got him to admit that his Mom had helped with a fair bit of it, but only in giving instructions. He'd actually insisted on cooking the whole thing himself.\n\n\"Did you even have an event to go to tonight? Or was that all a rouse so you could fatten me up on pasta and wine and have your way with me down by the lake?\" I joked.\n\nDaniel blushed a bit.\n\n\"We did have something to go to, yeah. I didn't lie, I promise. But it was over pretty early and I was cooking after that. I'd have picked you up sooner but I dropped the first batch of ziti and had to redo it.\"\n\nI wanted to kick my heels and giggle with glee. I contented myself with kissing him instead. Kissing an Italian man with red wine on his lips is something I highly recommend to everyone. It's like some kind of romance marinade on them, enhances their natural flavor and gifts. \n\nWhen we'd finished dinner and everything packed back away in the basket, we were laying back on our elbows just watching the few wisps of clouds float across the stars. \n\nDaniel suddenly sat up.\n\n\"I almost forgot! I got you something.\"\n\n\"Angel Boy, you really shouldn't be doing all this!\" I protested. \"All the stuff for school and now this. I can't have you paying for literally everything I do all the time.\"\n\n\"Hush, it's nothing like that,\" he said, waving me off. \"This didn't cost a dime. Well except for the frame, but we already had that in the house.\"\n\nHe reached into the basket and riffled around for a moment. Then pulled out a full 8 by 10 silver picture frame. He handed it to me and I turned it over. \n\nIt was a drawing in charcoal pencil. I recognized the picture it had been drawn from immediately as one Ian had taken of me and Daniel a few weeks ago on one of our trips to the beach. But it was rendered beautifully on the canvas in exacting detail. \n\n\"Where did you get this?\" I asked, trying to catch my bearings. \n\n\"I drew it, of course.\"\n\nWell there went any hope of bearings. I was cut adrift and on my own.\n\n\"You...you did this? For me? How? When? I didn't know that you even liked to draw, much less that you COULD...\"\n\nEverything came out in a jumble, high pitched and cracking every other word like a 13 year old. I didn't care in the slightest. I just stared down at the drawing, and the drawing stared back at me.\n\n\"I've always like to draw. Since kindergarten. I doodled all the time in school. Probably why you had to tutor me in the first place. And see, there's a lot you still have to learn about me, isn't there?\"\n\n\"Apparently so,\" I whispered.\n\nI wanted to say so much more. I felt like I needed to say so much more, but I simply couldn't. Everything inside of me seemed to be at war with everything else inside of me. My love for Daniel battled my fear of losing him when I moved tomorrow; my thanks for what he'd given me and bought for me sparred with my guilt at not doing it myself; my hope for learning everything about him came to blows with knowing that, after this night, I'd be too far away to do so.\n\nI didn't even feel the tears when they started. \n\nI just stared and stared at that drawing in my hands like it would somehow provide me the answers that I needed. They came on their own, hot and heavy. To my credit, I didn't sob or break down, but the tears flowed nonetheless. \n\n\"Oh fuck,\" Daniel said under his breath. \"I'm sorry honey, I didn't mean to upset you. Here, let me just put it away for now and we can get back to...\"\n\nHe reached for the picture.\n\n\"If you try and take this from me right now, I swear to god I will beat you with it,\" I growled.\n\nDaniel slowly moved his hands away from the picture and remained silent. \n\nGood, he was learning.\n\nI stared and stared, just waiting for something to come to the surface, something to tell me what I was supposed to say.\n\n\"It's all just too much,\" I heard the words come from my lips though I didn't remember thinking them.\n\nI didn't know what they even meant. But I knew they were true. It was too much for me. There was just so much beauty right there in front of me, all around me, beside me...and it was overwhelming. I looked around me at the candles and the lights and the blanket and the picture.\n\nI must have looked hunted or wild-eyed or passed some unspoken level of distress that he found acceptable, because Daniel didn't hesitate for a moment. \n\nHe stood up, grabbed my hand and nearly yanked me to my feet. Without a word and despite my vocal protestations he marched me past the lights and back towards the car, over the little dunes until the fairy beach was blocked from view. Ignoring my yammering until we we right at his Jeep, he spun me to face him, his back to the lake. He lifted me by my hips up onto the hood of the car. He jumped up beside me, wrapped his arm around my shoulder and pulled us both down to lie flat on the hood of his car, my head on his chest, eyes bent on the heavens above us.",
        "\"Better?\" he asked after I'd settled a bit. \n\nI still clutched the drawing in the silver frame to my chest like a shield.\n\n\"Better,\" I whispered snuggling into him a bit.\n\n\"You looked a little overwhelmed there for a moment.\"\n\n\"Understatement of the year Award goes to...\"\n\nDaniel snorted a laugh.\n\n\"Well if your sarcasm is in that good of form, I think you're gonna make it, babe.\" \n\nHe craned his neck to kiss my forehead while his fingers slowly raked through my blonde hair.\n\nThe stars had a calming effect on me. They had ever since that first night after graduation at Ian's lake house. I could spend hours just staring at them now, letting my mind wander and my thoughts flow free. It was one of the only stress free times I can remember in my life. \n\n\"It's only for a little while, right?\" I asked. I couldn't bring myself to define a little while.\n\nI felt Daniel nod underneath me.\n\n\"It will be over in a flash. I promise. What's four years in the grand scheme of things, right?\"\n\n\"Right. Nothing. Just a blip,\" I tried to convince myself.\n\n\"Easy as pie. If our Polaris up there can last for Billions and Billions, we can at least make it through 4,\" he added.\n\nThere was always that. Polaris was indeed shining brightly that night, clear and steady as always.\n\n\"If a stupid ball of flaming gas can do it, then so can we,\" I joked. \n\n\"Don't mention flaming gas, babe. That second batch of Ziti isn't sitting so well,\" Daniel quipped. \n\nAnd true to jock form, he let out a massive fart.\n\n\"OH FOR THE LOVE OF GOD!\" I screamed, righting myself to a seated position. \"Here we are having a lovely romantic moment and you gotta go and do that! Gross! You're such a...a...such a MAN!\"\n\nDaniel was in hysterics, of course. I guess I couldn't blame him; he was only 18 after all and he couldn't be ALL perfection all the time. He wrapped his arms around me and pulled me back down on top of his chest.\n\n\"And don't pretend like you don't love every bit of it! You love that I'm such a \"man.\" Don't you? You love the muscles and the stubble and the gym time. Come on. Admit it! You do?! I know you do!\"\n\nHe grabbed my wrists and forced me to put my hands on his Pecs. He made them dance beneath my touch.\n\n\"You love it, don't you?\" he asked again.\n\nI bit my lower lip. \n\nOf COURSE I loved it. Who wouldn't? But I wasn't about to let him get off that easy.\n\n\"Nope. Don't care!\" I lied.\n\n\"Really?\" he cocked an eyebrow but kept my wrists in his grip. He moved them lower onto his stomach.\n\n\"You have no opinion about this?\"\n\nHe tightened his stomach and I felt the muscles ripple beneath my palm.\n\nCracks began to form in my admittedly already weakened defenses. Fuck, who am I kidding? More like whole chunks of defenses crumbled entirely to ash.\n\n\"No opinion.\" I whispered, swallowing hard against the lump that had suddenly appeared in my throat. Not to mention, my pants\n\nDaniel moved my hands further south, over his lower abs, his belly button and over the bulge in his jeans. He pushed my palm down onto his basket and squeezed. I could feel the heat of his cock beneath the fabric, could feel it swelling and coming to life just millimeters away from my fingertips.\n\n\"What about now?\" Daniel asked, his lips suddenly at my ear, nibbling my ear lobe.\n\n\"Goddamn you!\" I growled and pounced on top of him pulling his wrists up above his head and straddling his hips. I looked down at that perfectly symmetrical face and those gorgeous brown eyes that seemed to glow gold even now in the midnight Summer air.  \n\nI didn't mind the cold hard metal of the hood pressing into my kneecaps as I inched my way forward up his torso. In fact, I enjoyed the slight tinge of pain; it helped keep me focused as Daniel writhed beneath me. \n\nOf course I knew he could have easily escaped and that he wasn't really trying to overpower me; I didn't much care. I enjoyed the way his wrists, pinned above his head, made his back and chest expand, forced his hole torso to lengthen. I felt his hips rise from the hood and press upwards into my ass. \n\nGood. Not that I doubted Daniel wanted what I wanted just as much as I did. If there was one thing I could count on besides his never failing love and support, it was his libido. \n\nI kept his wrists pinned in one hand and leaned in to kiss him. His head rose from the hood to meet me, our lips pressed together. I inhaled long and deep, drawing him closer like I was trying to suck the soul from his body. I pushed my tongue into his mouth and gripped the back of his neck with my free hand. Hard. \n\nHis wincing moan into our kiss made me shiver. I adored feeling and hearing him react to my touch. I kept a firm grip on the back of his neck but was forced to release his wrists. \n\nIf I was to get at my intended prize, I needed that hand.\n\nI reached behind me and found the button of his jeans. The heat coming off of him was palpable and I could sense his hard uncut cock throbbing below my fingers. \n\n\"Slow down baby,\" he panted between kisses. \"We have all night.\"\n\n\"And that's exactly how long this is going to take,\" I very nearly growled as I lightly bit his pouty lower lip. \n\nWell, perhaps a little more forceful than \"lightly.\"\n\nHis jeans gave way behind me and I yanked the zipper open. Before the metal had a chance to open all the way, my fingers tore under the elastic of his boxer briefs and grabbed for his cock.\n\n\"Ahhhh,\" he groaned when I made contact.\n\nI tried to memorize the way it felt when I touched him, the heat and fire of his body pulsing in my grip. I didn't know when I would have a chance to do this again. I filed away the feel of his precum leaking from his slit, the way his foreskin slide easily beneath my palm. I cupped his balls as I parted his hairy thighs, felt their substantial heft and weight.\n\n\"I'm going to drain these to the size of raisins. Mark my words,\" I hissed as I squeezed them tightly.\n\nHe gritted his teeth and sucked in air, arching the small of his back. It only forced his cock out into the open. I hitched the elastic of his underwear beneath his balls and wiggled his jeans down under his bare ass. This was no easy feat. Daniel's ass was firm and hard and he'd taken to wearing well fitting jeans to show it off for me. \n\n\"Jesus...\" he sighed. \n\nI had his cock in a twisted back handed grip and jerked his skin smoothly up and down. Precum dripped over my fingers as I milked him slowly. \n\nDaniel knew it was pointless to try and stop me at this point. As if he had any intentions to actually do so. Instead, he gyrated in time to my manipulations and went to work undoing my pants.\n\nMy cock made a satisfying thumping sound when it flopped forward onto his taut stomach. I lifted my ass higher so he could push my pants down around my knees and he tried to grab my cock.\n\n\"Don't. Don't touch it,\" I demanded, all while feeling his shaft thicken in my grip. \" I want to focus on one thing and one thing only.\"\n\nTo this day, I love watching a man's eyes roll into the back of his head. Daniel's did just that when I guided his cock head to my hole and slowly sank down onto him. \n\nThe heat and pain were formidable at first. Slowly I felt his cock head slip into my opening, felt his passion ease inside me, coax me to loosen for him. His precum made me slick and I reveled as each inch of him rose inside of me.\n\n\"Oh god...oh holy...\" I moaned.\n\nI used both hands to part my cheeks so his cock could invade me completely. My entire body trembled and shook but I felt like Daniel's cock was refilling my gas tank. Every centimeter of him seemed to make me more whole. \n\nI felt his pubes tickling my hole in mere seconds. He pulsed his dick in my tight ass and instantly hit my spot. A thick jet of precum erupted from my cock and made a dark line across his shirt. I tore it over his head and lifted it behind his neck. Each of my hands dug into his hairy chest, squeezing and kneading the muscles. I might as well have been grabbing two boulders. \n\n\"Don't stop until I cum. Twice,\" I commanded. \n\nDaniel's eyes were wild with pleasure but he managed a nod. His grip on the back of my neck pulled me down to kiss him and he began the task I'd assigned him.\n\nOur lips never parted, our tongues never stopped dancing together as Daniel bucked his hips upwards into me, fucking me higher and higher. I rocked forward and back on him, attempting to lengthen his thrusts. My brain was on fire and I couldn't stop the string of whining moans that punctuated each full pulse of his tool. \n\nHe pounded my spot, long and slow at first, then alternating and ramming my hole quick until I couldn't remember my own name. \n\n\"Oh don't stop. Oh jesus, fuck yes.\"\n\nDaniel's upper abs were quickly becoming a reservoir for my precum. It came out of me in a never ending stream and pooled in the grooves of his stomach and made his buzzed black chest hair shine wetly in the moonlight. \n\n\"Your ass is so tight,\" Daniel grunted. \"You want me to fill it up for you?\"\n\nI bit my lower lip and nodded.\n\nHis hands were at my hips, holding on tight, steadying me for an assault. \n\nDaniel was like some kind of human metronome that increased pace at a steady clip. \n\nFirst came Legato, slow and steady, flowing, his hips rocking into my ass and mine into his. \n\nThen Andante: a steady pace, about equal to our heartbeats. My cock bouncing in time to his thrusts. \n\nAllegro: fast and hard, the pace where my individual moans became almost a solid utterance. \n\nFinally came Presto. I don't know where he got the strength but it felt like his cock never left my ass, even though I heard his hips slapping into me and felt his dick pounding my prostate so hard I thought he might burst it. \n\nSpeech wasn't possible at that point. My mouth just hung open on my chest and I clung onto Daniel for dear life, My breath was in my throat and a burning knot of tension in my groin foretold what was about to happen.\n\n\"Grrrrrrraaaaahhhhhhhhh\" Daniel bellowed, slamming once and then twice more into me. \n\nFire and heat poured from his cock and pushed me until even our Polaris was lost in the whiteness. I know that I came and came hard, but I can only remember coming down from that highest place, like a flame returning to a match head in rewind. I coalesced into my self.\n\nI had collapsed onto Daniel's chest, sticky whiteness between us. When I turned to kiss the side of his neck, I tasted his sweat and my own cum on his skin. His entire face was nearly a mask of white and thick gloppy rivers of my cum made a mess on his windshield a good foot and half behind us. Daniel's dick still pulsed little bursts of his cum into me and I held him there, tightening and loosening my hole for him.\n\n\"That's one,\" I whispered. \n\nIn case it wasn't clear by now, Daniel was a bit of an over achiever when it came to things he was good at. And he was very very very good at loving me. \n\nHe met, surpassed, and then more than doubled the two personal orgasms I had ordered from him. \n\nBy the time we were both finally exhausted, I held two loads in my ass, Daniel had two of mine in him and we both had cum on our faces and lips that no amount of kissing could remove. Full showers would be required. \n\nBut that could wait until tomorrow. We did out best to clean up with a stray water bottle we found in the Jeep, retrieved the blanket from the beach, and curled up together on the hood of his car, naked, sated, and exhausted. \n\nThe last thing I remember seeing before blackness took me was the North Star. \n\nIt was a fitting finale to a fantasy evening.\n\nBecause the Universe had it out for me, I was sure of it, that night in the park gave way to the morning I had been dreading for weeks. \n\nMoving day. \n\nI know it was stupid to hope for some kind of time loop to materialize, to dream that I could somehow spend the rest of my life reliving the past few hours with Daniel. But we dream and hope for impossible things when we are thralls to that most totalitarian master, love. \n\nDriving home to pack was torture. Every mile closer to my house and all my things waiting to be packed up was a mile further away from the park. I felt like I was leaving a large part of my soul behind me. \n\nNumbness overtook me. I supposed I should take that as a blessing. Numbness was preferable to the searing pain I knew I should be feeling at the prospect of leaving him.\n\nIt took four full cars, mom's, dad's, Daniel's and my own, to shove everything in. My sister was actually going to drive as part of this caravan. She had only had her permit for 6 months or so, but the parental units decided it was okay for her to join as long as she drove between the first and third cars, fully shielded from the rest of the crazies on the highway. \n\nMy parents handled themselves decently. This was the first time they had been in the same place at the same time since my graduation months before. My father, thanks be to god, had left his girlfriend behind for the day. \n\nMy mother did, however, enlist the help of a neighbor boy who could give Ian a run for his money. She paid him 20 bucks to help with the packing and lingered just a little longer than expected when she did. \n\nWell, at least there was one thing I wouldn't have to witness while away at school; my mother, the cougar. \n\nI didn't say much as we packed, only smiled and nodded when someone tried their best to cheer me up or asked me a question. I played my part and rolled my eyes whenever my father made the requisite \"dad jokes.\" Other than that, I floated in my numbness and waited for the packing to be over.\n\nWhen it was all done and the caravan was ready to depart, I slid into the front seat of Daniel's jeep without comment and hunkered in on myself. At least Daniel was coming along and I wouldn't have to face the actual goodbye for another few hours. \n\nHe didn't start school for another week. However, his own moving day had already happened last week. His parents had decided that he could turn the pool house into his own apartment and live at home for the first year or two of school, since he was only going to be a few miles from Campus. They hoped it would give him some autonomy. I hoped it would keep him grounded and out of the dorm rooms of any other cute gay nerds that may be lurking on his campus. \n\nI was 18, mind. Jealousy is just a natural part of 18 year olds. \n\nSo Daniel, as much as he wanted to help and to understand, could never fully grasp the trauma of a move like mine. He sensed as much and didn't try to make light of my situation or brush it off. He hopped into the driver seat, driving directions in hand, buckled up and turned the key.\n\nJust like that, my old life began to fade into the rear view mirror. I did my best not to look back, sure that it was all just vanishing into the mists like Brigadoon. I couldn't bear to watch it go so I did the only thing I could do. I stared straight ahead and kept my eyes locked on the drab grey highway stretched out before us. \n\nThe picture Daniel gave me the night before, the one he had drawn of the two of us was in my lap. I had already promised myself that that particular gift was not going to leave my side. It would go with me to and from classes in my backpack and sit on my bedside table every evening. If I couldn't have Daniel with me in person, I would not, no, I refused to not have some small piece of him at all time.\n\nSometime between turning onto the highway and passing out of the city limits, Daniel reached between us and held my hand. The silver rings he had gotten us made a tiny click when our fingers laced together. I felt my heart swell when they touched. I dared not look down and tried to simply draw whatever comfort I could from his touch.\n\nMy jaw ached from clenching it. If I let that tension go for even a moment I knew that I would lose it. Daniel would have to pull the car over, I'd have a break down and run out into traffic and be admitted to the psych ward and life would be over. I was certain of it. So I clenched tighter and tighter until the blood pounded in my ears. \n\nIf you've never gone to College, I suggest that you just go by and watch the semi controlled chaos that is Freshman move in day. \n\nIt's like some massive hive of ants was kicked by a giant. \n\nSweaty parents and shell shocked kids scrambled from parking lots with boxes and hand carts. Moms tried to be motherly while their babies literally left the nest in front of their very eyes; some succeeded but many clutched their children to them and sobbed loudly, uncaring if anyone was watching. \n\nWell, they were uncaring; their children were wide-eyed and searching to see if anyone else noticed their embarrassment. It was sweet, really. \n\nDaniel found a spot near-ish to my dorm. The other three cars had to park further away. My sister \"parked,\" if you can call it that, half in a spot and half on the grass in front of the spot. But by the look on her face, she had just tasted her first drop of autonomy and there was no going back for her now. I said a little prayer for my parents. I doubted I had given them half the trouble that little hellion of a woman was likely to.\n\nLuckily, my room assignment was on the second floor so for the most part we would be able to avoid the 1930's -depression-era-bread-line length-queue for the elevators. \n\nWith five of us making trips back and forth, Dad was sure we could make short work of it all. Mom signed us in with the upperclassman RA's in the lobby, got my keys and welcome packet for me. and divided out the tasks upon her return.\n\nI was still silent. \n\nI was somewhat thankful that the newness of my surroundings somewhat distracted me from the emotional implications of what was happening. The air even smelled different here. \n\nDaniel, for his part, flatly refused to let go of my hand. Several students and not a few parents noticed his gesture of affection. When he noticed them noticing, Daniel stared at them intently, daring them to say or do something. \n\nNone of them did, of course. Would you? If it meant facing down a muscled 18 year old Italian boy with your flabby mid forties dad body in high waisted shorts and penny loafers? I highly doubt it. \n\n(No offense meant to any mid forties fathers with a penchant for penny loafers...but you get my drift.)\n\nWe each grabbed a light load for the first trip. Mom lead the way, searching the signs for room 2107. I felt like I was being assigned a cell. Dorms are all well and good, but the cinder block walls, linoleum tiled floors, and institutional white paint gave them a distinct penitentiary vibe. \n\nThe room itself was fine. \n\nI was lucky that my scholarships and grades had been enough to win me a double room with it's own bathroom that I would share with just one other room. A suite, they called it. \n\nI had heard horrible rumors about entire floors having to share one bathroom and the very thought of it made me cringe. 40 something boys in one bathroom? Did Colleges not understand how utterly disgusting teenaged and early twenties males could be? The bleach alone that it would take to make a communal bathroom for 40 males even remotely hygienically acceptable would put a middle class family in debt. \n\nI suppose that's a part of why tuition is so expensive nowadays. \n\nThe room itself was empty. Nothing on either of the twin beds in the corners or on the matching desks and bookshelves at their feet. I must have been the first to arrive. \n\n\"So we can take whichever one we want, Darling,\" my mom said when she marched confidently into the 10 by 10 cell like she was an interior decorator for the Parade of Homes. \n\n(Look it up if you aren't Southern...it's a hoot!) \n\n\"That nice young lady at the front desk said that due to your...\"situation,\"\" she used the air quotes and rolled her eyes, \"you haven't been assigned a roommate. Apparently you get to choose your own from some list of other people in your \"situation.\" How they make such a list is beyond me, but there you have it.\"",
        "You could tell by the tone of her voice that she took personal offense to obliquely referring to my sexuality as a \"situation.\" \n\nI loved her so very much in that moment.\n\n\"It's okay Mamma,\" I said, giving her a little hug when I placed the bag of school supplies on an empty desk. \"They just want to make sure I'm comfortable. Not everything is a reason to whip up a PFLAG march, okay?\"\n\nShe laid her head on my shoulder and patted my hand with a sigh.\n\n\"I suppose not. Still can't they just come right out and say it: we didn't give you a roommate cause you're gay as the day is long and we don't want some bigoted ass hole to be randomly assigned to you so you could sue the pants off of us for endangerment and assault?\"\n\nDaniel laughed out loud and answered.\n\n\"How very polite and forward that would be. We may be a little further north but we're still in the South, remember? Ain't nobody gonna come right out and say all that when they can say \"situation,\" and imply it all. Bless their hearts.\"\n\n\"I suppose so, Sweet Boy,\" Mamma said, giving Daniel a little hug too. \"Either way, there's a list of email addresses and names and such in that packet they gave me. There's gonna be some kind of mixer for people in your \"situation,\" tonight or tomorrow or something. You got a week to choose one and pair up before classes start. Ready to start the next load?\"\n\nI was decidedly NOT ready to start the next load. \n\nAnd I really didn't like the idea of having to meet and greet a bunch of other openly gay students at a \"mixer.\" The term alone was enough to trigger mild PTSD. It brought back too many painful memories of picking teams in Gym Class. I just knew that I was going to be picked last. \n\nBut I didn't really have a choice in either matter. We were here and there were already five bags of my stuff on the floor and desk. No going back now. \n\nI was okay at first, as the room filled up with more and more stuff. I was fine when I was in the room. It was when we were back at the cars that I ran into difficulty. Watching each car slowly empty out was like watching sand run through an hour glass. \n\nOkay, I thought, one of four cars is half empty. Still 7/8 to go. That's a long time. Then two cars were empty. Then three. \n\nWhen we were unloading the final car, the one my sister had \"driven,\" I felt panic starting to rise in my chest. It was harder to breathe now and it had nothing to do with the physical labor of the move. \n\nThe time was almost here. The hourglass was nearly empty and I was headed to my execution. \n\nNo one could ever accuse me of lacking a flair for the dramatic.\n\nThe deed was done and we all stood in my very full new dorm room surrounded by boxes and bags and suitcases. It wasn't just me who stood motionless and silent, just staring at the clutter. \n\nNone of us spoke or moved for along time. \n\nMy mother broke first. And when she broke, she broke hard.\n\nShe sobbed long and loud and crushed me to her chest in a bear hug Ian would have been proud of. Kisses rained down on me in rapid succession and she struggled, but succeeded, in speaking through her tears.\n\n\"You call me whenever you want...you hear? And it's not that far away so bring me laundry whenever, and if you need money for food, you know to call me. And Thanksgiving is only 97 days away. And you make sure you go to all your classes. And pay attention. And study. And don't drink or party. And shower. And brush your teeth every night even when you don't want to. And call me. You promise you will call me? And don't forget to eat, mind? You always do that, forget to eat when you're busy. I don't want you to get too thin, you hear?\"\n\nIt rushed out of her like a river let loose from a dam. I nodded my head and did my best to say yes, okay, yes, yes, I know, I will. I hugged her tight to me and kissed her cheek. She wiped away a tear from my face, settled herself as best she could and walked to the hallway, still sobbing.\n\nOne down. And my heart was already creaking under the pressure.\n\nMy father repeated most of what my Mamma had said, though he did so without the sobs and kisses. He held me firmly by the shoulders and stared at me long and deep. His voice wavered a bit and he cleared his throat. I saw the tears in his eyes starting to form and I knew I wasn't going to do well with this goodbye.\n\n\"I am so very very proud of you, son. Just so proud. I couldn't be more amazed by the man you're becoming,\" he said quietly.\n\nHe hugged me and held the back of my head to his shoulder. \n\nI am not ashamed to say that I bawled into his chest for a while, pulling him tight to me. \n\nMy father was the first man I had ever loved. He was a super hero to me, always had been. Divorce or not, it didn't matter. I needed his strength and support and he gave it freely.\n\nHe patted my shoulder, rested his hand on my cheek for a moment and smiled at me. \n\nThen he went to join my mother in the hallway. \n\n\"It's alright, now. It's okay. We did a good job with him. Hush, shhh.\" I heard him say from outside.\n\nEven though they were going through something terrible together, their bond through me was enough to put all that nastiness aside for a moment.\n\nTwo down. I was quivering and quickly approaching dehydration from weeping.\n\nMy sister stepped forward and reached into her back pocket. She pulled something from inside and handed it to me. I took it and looked it over.\n\nIt was a photograph of the two of us. She was maybe 4 and I was 7 or 8. We were laying together on the couch under the big red throw blanket that to this day still sits there. My arm was around her tiny shoulders and in my hands was a first edition copy of \"The Hobbit.\" Mamma had caught me in the act of reading to her and snapped that picture.\n\n\"Don't forget me now that you're a big bad college man, okay?\" she said sheepishly.\n\nDammit.\n\nI pulled her into a hug and was relieved to feel her arms wrap around me. In that moment, the years of mutual torment and name calling, the snide comments and sarcastic remarks, they all vanished; she was just my little sister now. \n\nThe same tiny creature that I had rocked and held when we brought her home from the hospital. The little girl in pigtails who had followed me around like a puppy dog and badgered me to play with her dolls. She was once again the girl who had climbed into my bed the night before she started 5th grade and said, \"BroBro, what if nobody likes me?\" \n\nI had done my best to protect her, even once our relationship changed and she didn't ask for that protection. \n\nI felt a huge wave of guilt now. I was leaving her on her own. What if she wasn't ready? What if she needed her big brother for something and I was stuck here, hours away and couldn't give it to her? I was going to be safe here at school while she had to navigate the waters of a contentious divorce for three more years. \n\nAll alone. \n\nSuddenly, I understood the string of questions and life advice my Mom had flung at me.\n\n\"I won't forget you for a second, you little brat. And you call me whenever you want. And come stay here with me if they get too difficult, cause you know they will. And let me know if anyone bothers you at school. I got a popular boyfriend now and he can sure as hell pull some strings to take care of high school bullies. You got it?\"\n\nShe nodded and a tear or two actually escaped her apathetic early teenaged eyes.\n\n\"I love you BroBro,\" she said quietly, hugging me one last time. \"And I'll keep an eye on this jack ass for you.,\" she nodded towards Daniel. \"If he so much as looks at another nerd, I'll shave off his eyebrows while he's sleeping. Remember that?\"\n\nHow could I forget? \n\nI had looked like a fish person for 5 weeks when she'd carried through on that threat on me. Who knew girls put so much stock in their music collections? I'd only borrowed the CD for a day or two and it cost me eyebrows for over a month.\n\nShe kissed my cheek and went into the hall.\n\n\"Gross, you two. Get moving before anyone sees you. I may have to come here in a few years and I won't have my reputation already ruined by blubbering parents before I even get accepted,\" came her characteristic scowling remark. \n\nThree. My heart was already so much rubble in my chest. \n\nAnd now it was just Daniel.\n\n\"Please don't go,\" I whispered. He was a few feet from me, his hands in his pockets, eyes on the floor. \"Please don't leave me here.\"\n\nI know it was unfair of me. He didn't have a choice. But I had to ask. I had to beg. \n\nWhen he looked up at me, his big brown eyes were full of tears and his cheeks were already wet. I'd been so wrapped up in my own goodbyes that I hadn't even thought what they might do to him. \n\nHe looked like someone was holding a gun to his head, forcing him to do something he'd never dreamed of doing. His eyes silently pleaded with me, begged me to help him. \n\n\"David, I...\" he tried to say something but I didn't let him finish. \n\nI ran to him and threw my arms around his neck, buried my face into his shoulder and clung on with every ounce of strength I had left. Weeping isn't enough to describe it. I pour out my soul into his body and I felt him trembling in my arms. We held each other as tightly as possible, uncaring if anyone heard us or saw us. \n\n\"You know I can't stay here in the dorms. Not yet. Once classes start, baby, you know I'll be there that first weekend. I promise you. Only 2 weeks. 14 days. Okay?\"\n\nWhere he got the strength to speak I will never understand. \n\nI tried to nod into his embrace. Of course I knew he was right. It was only 14 days. So why did it feel like 14 years? \n\nWe sobbed and stood like that for what could have been hours. \n\nTo their credit, my family never once tried to hurry us along and never interrupted our goodbye. I imagined them standing guard outside my door, making sure that me and the man I loved had the privacy we needed. I loved them so fiercely for it.\n\nEventually, the body runs out of tears. \n\nDry sobs and sniffles were all that remained in our arsenal of grief and eventually were left holding each other and swaying together in the center of the room. It was like some terrible parody of our Prom night. Here we were, surrounded by the boxed up memories that had started on that night, just holding each other and dancing to music no one else could hear.\n\nDaniel kissed me, long and slow.\n\n\"I love you so much, David,\" he said, his forehead pressed to mine. \"More than you will ever know. Don't you dare forget that. You promise?\"\n\nI nodded and kissed him again.\n\nGod, this couldn't be happening. Please, just make it stop. Hadn't I given up enough already?\n\n\"I love you too,\" I whispered in a what was left of my hoarse voice.\n\n\"You're my Polaris. Okay? Always. You're my heart and my life and we will get through this together. I promise you that. One day, we will be standing just like this at our wedding. You hear me?\"\n\nI snorted a little laugh and nodded again. \n\nMy fingers laced into his, our twin rings pressed together. One day, there would be another set of rings on those fingers. \n\nIf we could survive what was coming.\n\n\"I will call you in three hours when I make it home. Okay? You just try and keep your mitts off the other boys until then.\"\n\nI punched him in ribs.\n\n\"Don't even joke about that, Daniel.\"\n\n\"Fine, fine. I'm sorry. I love you, baby.\"\n\nThis was it. \n\nThis was what had consumed my dreams and my nightmare since graduation. This was when I had to watch him walk out the door. I couldn't do it. \n\nI felt myself sink to the mattress of one of the twin beds. Daniel guided me gently. He leaned over me and kissed me on my forehead, my eyes, my cheeks, and finally my lips.\n\n\"I love you,\" he said once more, cupping my face in his hands, pulling my eyes up to meet his.\n\n\"Please...Daniel, please...\" I begged him.\n\nHe kissed me a final time.\n\n\"Always and Forever, David. I mean that.\"\n\nHe pulled away from me. \n\nI couldn't have followed him if I'd wanted to. My muscles were weak, my soul was empty and my body was not mine to command. He reached the door, grabbed the knob and pulled the door closed behind him.\n\nI stared at the back of that wooden door for what could have been hours. \n\n\"I love you,\" I repeated to the emptiness, over and over like a mantra.\n\nI don't know when or how, but eventually I curled into a ball on the bed and wept into a pillow. \n\nI'd never expected to feel a pain like this. It was deep and soul crushing. I thought I understood pain from the years of exclusion and derision in school. But the abiding pain of loss is so much worse that the pain of not being involved at all.\n\nI woke up a little while later. How long, I can't say. My emotional wreckage must have worn my physical form to the point of collapse and I'd eventually fallen asleep. \n\nA sharp pang of hunger in the pit of my stomach reminded me that I hadn't yet eaten that day. A quick glance in the mirror proved that I was not physically suitable to be out in public. \n\nIt took me some time to search through the boxes and such to find the one with all of my toiletries and shower supplies. But eventually, I located it and took the longest shower of my life to that point. My fingers were pruned and my skin was bright beet red when I came out.\n\nFinding clothes was a little easier. I moved like a zombie. I knew the steps I needed to perform and I did them, but they weren't conscious. My brain just kind of...directed the orchestra. But the audience was empty. No one was home. \n\nI filled my backpack with the photo my sister gave me, the drawing Daniel made, and his copy of Jane Eyre that he loved so much and had given me after graduation. I found a campus map in the packet the RAs handed out, located the nearest dining hall and set out. I almost forgot the keys to my new room, but luckily remembered to retrieve them before the self locking door closed behind me.\n\nI got lost at least three times. I dared not ask anyone for directions. I didn't want to chance actual speech incase my voice cracked and broke me down into tears again. I was proud that I was holding myself together as much as I was, though it felt like I was constructed from paper and scotch tape. A stiff wind would scatter me to the four corners of the earth. \n\nDirections wouldn't have helped much anyways. \n\nEveryone else seemed to be just as lost as I was. They looked up and about in little clusters here and there about the quad. \n\nTo be honest, it felt EXACTLY like the first day of High School. Once more, I was alone and afraid. Even knowing that everyone else was, too, did nothing to mitigate the terror.\n\nEventually, I was seated at a table in the dining hall, a plate of mediocre school food in front of me. It was tasteless and bland. I don't mean that to be an indictment of the food there in general. The best five star meal on the planet would have tasted like ashes in my mouth that night. I fully understand the melodrama of the thought, but I wondered if food would ever taste good to me again.\n\nI was lost somewhere in the middle of Jane Eyre, not really reading it, just skimming the words on the page and mulling over my discomfort. I looked up to find that I was one of only maybe three people still in the dining room. The cleaning crew was busy mopping the floors and putting chairs up onto the table tops. \n\nI guessed that was the cue to leave.\n\nI really really really didn't want to go back to my room. \n\nI didn't want to be alone in that cell again. I dreaded having to lay down alone on that bed. How was I supposed to live in there. How was anyone supposed to live anywhere without half of their heart and soul?\n\nI walked at a plodding pace towards where I knew the dorm to be located. I took a few wrong turns on purpose to extend the walk as much as possible. \n\nEventually, I made it to my building. There were small crowds of my fellow students in the lobby and the hallways. I did my best to smile at them. I wondered if they knew or could tell that the smile on my face wasn't at all indicative of what I was feeling. \n\nBut that is always the case isn't it? We all wear a mask at times. The only time that mask was down for me was when I was with Daniel.\n\nAnd Daniel was gone, now.\n\nSo I dragged out the fake smile, the one I thought I had tucked away for good when my heart learned how to sing. When he'd taught my heart how to sing. I dragged it out, I dusted it off and I painted it on like armor. I would wear it, day in and day out because I didn't have a choice in the matter. Not anymore. The choice had been made for me. \n\nMy singing heart could barely speak anymore and that fake smile was all that was standing between the wreckage I was now forced to live in and the world I couldn't bear to disappoint yet again. That smile became my calling card to the world, what I allowed them to see of me. \n\nThe real me, the me behind that smile belonged only to Daniel.\n\nIt was a beautiful smile. It wasn't real, not truly, but it shone and shimmered to the best of my ability. Most times, that is all people need to see. A glimpse of the shimmer and the sparkle of your beautiful fake smile and they will walk on, sure you are okay, sure they have done what they are expected to do. \n\nSo I hid behind my glimmering armor and I tried and I tried and I tried to stitch together what was left of my injured soul. Most of them would never even notice, never even suspect, how broken I truly was. \n\nBut that was the first step. It's not the last, but it is the most terrifying, the most lonely, the most obscene, the most heart-rending, the most painful, and in many ways, the most necessary. \n\nBecause if someone can see past the glitter and the sparkle, when they take the extra second to look at you trapped behind your happy armor, when they find you balled up inside yourself weeping tears that you just can't stop and you cannot name...then, it can start to change. \n\nThat's what Daniel had done. \n\nHe'd demolished my armor and stripped me bare before him and forced me to show him my true self. And he'd help heal me in the process, from wounds I hadn't even known I had. \n\nIf those who see past the armor are worthy, like Daniel was, if they matter in the grand scheme of things, like he did, they will place a hand on your bare shoulder and suddenly, quick as that, you aren't alone behind your smile. \n\nYour heart may not sing again. Not for a long time, maybe. But a hand on your shoulder is all it takes sometimes to remind your soul how to start to hum. \n\nWhen I finally reached my room and opened the door, what greeted me there took a moment to sink in.\n\nThe two twin beds had been on opposite walls when I'd left. Now, there were pushed together in one corner of the room. Some of my boxes had been piled up and moved. Most definitely not where I had left them. \n\nI probably should have been a little more cautious than I was. After all, I had only been here for less than a day and someone had already broken into my room and touched my stuff. But I wasn't in a particularly cautious state of mind. I wasn't really in any state of mind.\n\nThe door to the bathroom was slightly open and I heard the shower running.\n\n\"Hello?\" I called out, still standing at my door in case I needed to make some horror-movie level dash outside when the axe wielding murderer emerged.\n\nNo response.\n\n\"Are you in the wrong room?\" I tried again. \"I haven't been assigned a roommate yet so I think you must be in the wrong room?\"\n\nThe water stopped and I heard the curtain pulled back. \n\nThe door creaked open and Daniel stepped out into the room, a towel around his waist, steam and water making a puddle at his feet.\n\n\"They didn't tell you that they already assigned you a rookie? Must be some kind of mix up.\"\n\nMy bag was on the floor and I ran to him. I climbed him like a monkey, my legs wrapped around his waist and my arms on his neck.",
        "\"Woah, there babes! Careful honey!\" he tried to say between the kisses I peppered his face with. He held me easily aloft and walked us both to the now king sized bed with me wrapped around him still. He sat down with me on his lap .\n\n\"What are you doing here? How?\" I found myself crying again but this time, I didn't care. \n\nDaniel was here.\n\n\"You know what, it doesn't matter. Who cares? You're here! Why are you here? Don't answer that!\"\n\nI couldn't stop touching him. His face, his hands, his hair, his chest. I didn't want to let him go ever again, as if he might disappear into thin air if I stopped touching him. \n\nThe thought actually crossed my mind that I was hallucinating the entire thing. Maybe I'd had some kind of mental break and I was really in a rubber room somewhere like that chick from \"The Craft.\"\n\n\"It wasn't easy, I'll tell you that much,\" he said after my kisses and morphed in a hug. \"Do you know how hard it is to keep a secret from a Valedictorian who you are also in love with?\"\n\nI didn't care how hard it had been. \n\nHe was here and that was all that mattered.\n\n\"Well, I'm sorry I'm too smart and I made it difficult for you. But I'm glad you're here! You have no idea. But, when do you have to go home?\"\n\nI know it was stupid to think about this visit ending when it had just started. Who likes to think of the flight home from vacation before they even make it to the airport to start it? But I had just gone through hell and high water and I wanted to be a little more prepared for our next goodbye.\n\n\"You don't get it babe,\" Daniel said sweetly, looking up at me. \"I'm not going home. I'm already home.\"\n\nHe smiled that dazzling smile at me and my brain was mush again.\n\n\"What do you mean you aren't going home? What about school? You didn't drop out did you? Oh, Daniel you can't! You can't drop out for me!\"\n\nDaniel laughed.\n\n\"Maybe it's easier than I thought to outsmart a Valedictorian. I'm not dropping out, David. I transferred here.\"\n\nHe what?\n\nWhat was happening?\n\nMy mouth was bone dry and I couldn't remember my own name. I dared not believe what he was saying. It would be too cruel if it wasn't true. I couldn't survive it.\n\n\"Don't play with me, Daniel,\" I said seriously. \"I can't take any more shit today. I'm serious. Don't joke with me right now.\"\n\nHe kissed me gently.\n\n\"It's not a game, baby. I had Coach B pull some strings for me. He knows a few people in the Athletics Department here. He was able to wrangle up a third string spot for me on the Varsity Baseball team. After that, all it took was convincing my parents that the out of state tuition was worth the cost. You took care of that part. You know, I think my parents may actually love you more than they love me. I know they love you more than Adam.\"\n\n\"I...I...I...why didn't you tell me?\"\n\n\"I only found out officially a week ago. It took until this afternoon to arrange the rooming stuff. You can thank your Mamma for that part.\"\n\nI made a mental note to do just that.\n\n\"You all conspired together. You made me think that I was...I was so distraught that I... how could you...\"\n\nI knew I should have been angry that he had tricked me. I should have been furious that he had made me believe I was abandoned and alone. But sitting on his lap with his arms around my back...I simply couldn't find the strength to be upset.\n\n\"You're here?\" I asked.\n\nHe nodded.\n\n\"For good?\"\n\nAnother nod.\n\n\"So I didn't have a stroke and I'm not in a hospital somewhere in a the coma ward?\"\n\nHe smiled and shook his head.\n\n\"You've got me here for as long as you will have me. Cross my heart. I'm never going anywhere\"\n\nIt's amazing how quickly the right person can turn around your entire world. \n\nEvery bit of pain evaporated and I was right back where I wanted to be. With the man I loved. The man who loved me. Loved me enough to follow me and move heaven and earth to be by my side. \n\nI wanted to thank my lucky stars. But luck had nothing to do with it. \n\nAnd only one star mattered. My star. My polaris. He'd kept his promise and paid his debts in full well before they came due.\n\nI pushed Daniel's back to the bed and kissed him fiercely. \n\nThat was how I started my college career.\n\nWith a bang.\n\nSo to speak."
    ],
    "authorname": "DAMackey",
    "tags": [
        "summer",
        "highschool",
        "college",
        "jock",
        "nerd",
        "twink",
        "muscle",
        "cum",
        "bareback",
        "love"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-16-finale"
}