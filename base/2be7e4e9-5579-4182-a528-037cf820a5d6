{
    "title": "Gravedancer",
    "pages": [
        "Well...here we are. The final chapter of the \"Dealmaker\" series. I want to thank all of you for your support, love and hilarious comments. It's been a pleasure and a pain to write this story. I really had no intention or idea of how to continue 'Dealmaker', but you were persistent and convinced me to try. Thanks again for following along.\n\n* * *\n\nCome on, come on! If I keep going this slowly, I'll never save them!\n\nClaire raced down the hall, her lungs aching and the muscles in her legs burning. She never slowed, though. Her heart wouldn't let her. She had to save Darrow and her lovers from that disgusting mist. It was seeking them out, hunting them down like a predator. Claire chased after it, hoping she wasn't too late to save them. She no longer followed its trail of icy coldness. She knew exactly where it was going: home.\n\nSo close...she'll follow...delicious... Ah! There they are! Now I'll find her...come little girl...this way...\n\nNO! No, you can't have them!\n\nHer afterburners kicked on, sending her flying down the corridor. Fuck! The damned cloud of snot had found her home! Rage burned through her veins. She'd see that thing burnt to a crisp before it laid a slimy tendril on any of her demons.\n\nDisgusting pile of slime. I won't let you have them! I'll tear you to pieces first!\n\nThreatening me, are you? So there's a bit of fight in you after all.\n\nClaire screeched to a halt. Fear, confusion and panic swirled in her mind. That wasn't just a well-timed snappy insult. It could hear her thoughts and was talking back. Double fuck.\n\nCome on, girl. You're not scared now, are you? You've fought me before, remember?\n\nScared? Of a misty ball of useless garbage like you? Never.\n\nLiar. Its thoughts had a hint of a smile that time, taunting her.\n\nFuck you.\n\nBe assured I've planned for that.\n\nShe scowled and started to run again. Damn it. Not only was that mist able to take on other forms, but it could mess with her mind as well. She loathed that thing, hated it with her entire soul. She swore to herself she'd defeat it before anyone else got hurt.\n\nI swear, if you even scratch any of them...\n\nYou'll do what? You are human, after all. What damage could you possibly inflict on me?<br> A nasty case of blue balls seems appropriate.\n\nOh, you wound me.\n\nGod, this creature was annoying! Sarcastic and callous, she wondered if mind games were another way it got its kicks. Probably. It seemed to being having a great time toying with her.\n\nYou're coming, aren't you? Your lovers are here waiting with me. For some reason, they don't seem too happy that I'm here.\n\nWhat did you do to them?! Anger roared through her veins. If that thing hurt them, she'd go ballistic.\n\nNothing horrific, I assure you. I've just made sure they wouldn't be able to interfere.\n\nFor the first time, Claire actually growled to herself. Yes, I'm coming. Keep your damn pants on.\n\nNot for long. The sooner you come, the sooner my pants come off.\n\nDisgusting.\n\nBetter hurry. I'm getting impatient.\n\nImpatient? She snorted to herself. If there was anything more annoying than Lucifer forcing himself on her, it was that mist trying to push her around. A rare wicked smile crossed her lips. She slowed her pace, casually walking down the hall. She rested her lungs and legs for a bit, enjoying the feeling of the chilled air on her skin. She'd show that thing impatient.\n\nYou're taking quite long to get here. And I thought you were worried about your lovers.\n\nI am, but I've decided to take my time. My turn to play. If you hurt any of them, I'll turn around and you can come find me yourself.\n\nSilence followed, making her stomach twist. Her challenge might not be the best idea, but it the only ammunition she had. Drawing the mist out was the only way she could fight without getting Thaltos or the others caught in the cross-fire.\n\nCome here. This time, the voice had taken on a sinister turn, much darker and malicious than before. She'd pissed it off now.\n\nMaybe I enjoy the walk. She smiled. A little irritation can go a long way.\n\nGet here, or I will come out there and carry you back myself.\n\nHer stomach twisted tighter. It didn't care what kind of danger it put her or her lovers in. It wanted Claire and nothing else. Not a good sign.\n\nGod, you're annoying.\n\nAnd you're simply delicious. Now come here so we can play.\n\nI'll take my time, thank you. It will give me a moment to think of how to kill you.\n\nTake any longer and your precious lovers may not make it out of this fight unscathed.\n\nHer stomach completed its back flip. Her heart rate picked up and she began to question her method. Her challenge may do more harm than good. Still, it was all she could think of to draw that creature out. Swallowing, she turned on her heels and took a shaky step back down the hall.\n\nFine then. Goodbye. Hope you enjoy having your playtime with my three very angry demons.\n\nFuck you.\n\nYou wish.\n\nDark laughter rang through her mind, chilling her to the bone. Yes, indeed. You really wish to do this, then?\n\nWalk away and leave you miserable? Hell, yes.\n\nVery well. I'll drag you here myself.\n\nShe let out a sharp sigh of relief. Good. At least now she could get that thing away from her demons. All she needed now was a way to kill it.\n\nA piercing cry shattered her thoughts. Spinning around, she watched as a slew of silver tendrils slither around the twisting corners of the hall. Her heart sank. It wasn't coming out to get her at all. That would be risking too much. It was simply going to drag her into her room without ever having to leave.\n\nAnnoyance spiked through her. No fair!\n\nWho ever said I played fair?\n\nAsshole.\n\nI intend to have that, as well.\n\nShe scowled. The chorus to James Brown's 'Super Freak' came to mind. It certainly matched the circumstances.\n\nHer thoughts shifted back to the silver tendrils. The crawled closer, seeping out from the shadows and oozing along the cold stone floor. She glared at them. Damn things. They'd pulled her through the window that last time, nearly wounding Darrow in the process. She hated them as much as she hated their master.\n\nOne tendril slither closer, its silky skin gently caressing her ankle. She screeched and jumped backwards to shake it off, seething. It continued forward, undeterred. Its brethren followed, crawling closer, reaching out to caress her flesh. She stumbled backwards, shaking them off as she continued down the hall.\n\nOh, hush. They're not going to hurt you.\n\nAnd I can trust you how?\n\nAs if I'd ever mar that beautiful skin. Now stop fighting and come here like a good girl.\n\nJesus, that think was fucked up.\n\nCall off your slimy henchmen and I will!\n\nVery well. The tendrils receded, waiting patiently for a command. Now come.\n\nFine. She scowled. Bossy, aren't you?\n\nShaking off her earlier fear, Claire sucked in a deep breath and started back down the hall again. The tendrils remained, creeping backwards in time with her steps. They were watchers now, making sure she'd find her way back. If she didn't, they'd show her the way.\n\nMy dear, sweet girl. You haven't seen me bossy yet.\n\nNo?\n\nMore dark laughter seeped into her mind. You'll discover that when I have you splayed across these beds.\n\nSuper freak, indeed. She smirked.\n\nHmmm? I hope you weren't talking about me.\n\nAnd if I was?\n\nThen I suppose a bit of punishment is in order, don't you think?\n\nThe threat stopped her in her tracks. A flashback of Darrow spanking her for tricking him flitted through her mind, making her shiver.\n\nAn enticing thought. Perhaps that could be a fitting style of punishment?\n\nShe glared at the tendrils, hellfire now in her eyes. Drawing on every ounce of strength she had, Claire managed to clamp her mouth and her mind shut. There! See how that thing likes it when she doesn't play.\n\nNo, no. the silent treatment won't work. You're still going to come here or I'll haul you down that corridor.\n\nFine. She scowled as she continued her walk.\n\nDamn that creature. Its threats, while distant, were easy enough to fulfill. It was powerful, much more powerful than she'd imagined. Even Lucifer was intimidated by it. She saw the gleam of fear in his eyes when Kerion mentioned the mist had broken free. A tiny human like her would be nothing to it.\n\nMuch better. The tendrils waved at her as she walked, beckoning her forward. That's a good girl.\n\nStop. She looked away from the silvery threads, hating them as much as she hated the situation she'd gotten herself into.\n\nCome now. Let's talk.\n\nAbout what?\n\nUs.\n\nUs? As if we're a couple? She snorted.\n\nWhat else would we be?\n\nShe laughed sarcastically in her mind. Oh, I don't know. Maybe acquaintances.\n\nThat's all?\n\nWhat more do you want?\n\nEverything. She could hear the smile in its thoughts.\n\nWhy so talkative all of the sudden? You weren't this chatty when I was under your spell.\n\nAh, so inquisitive. My vaporous form didn't grant me a wide variety of movements. The voice you heard was the full extent of that form's ability to speak. This male body I've chosen is much more, shall we say, open when it comes to communicating.\n\nMale body? Claire sighed. She should have known. It wanted her, desired her beyond logical comprehension. Of course it would pick a male body. What better way to beguile a hormonal eighteen-year-old girl? No doubt it was probably gorgeous and wholly enticing.\n\nCurious yet?\n\nTo see you? Not really.\n\nPity, because I'm so looking forward to seeing you.\n\nShe glared at the tendrils as if it could see her. I hate you.\n\nNot for long.\n\nShe raised an eyebrow. Meaning?\n\nYou want to know my plan, then?\n\nMight help me prepare for what's coming.\n\nAnother burst of malicious laughter rattled her soul.<br> I can tell you bits and pieces. I wonder if you're prepared for that...\n\nI've dealt with three sexually voracious demons for months. You think I can't handle you? She smirked.\n\nIs that a challenge, miss Harding? Very well.\n\n* * *\n\nShe was tied to the four posts of the main bed, spread-eagled and gloriously naked. An impossibly beautiful young man, no older than twenty, with long snow-white hair, bright silver eyes and ashen skin, sat on one of the smaller beds, staring at her. The man was tall, even when sitting down, with strong arms and a muscled abdomen. He was dressed in nothing but black slacks, a perfect contrast to his pale skin. In his hand was a braided leather bullwhip which he stroked with long fingers, grinning at her maliciously.\n\nThe man stood, towering over her tiny frame. Gently, he dragged the end of the whip across her belly. She squirmed under his gaze and the feel of the soft leather tickling her skin. His grin widened, and he dragged the long strand of leather downward until it hung off the edge of the bed. Still smiling at her, he drew his hand forward and pressed the handle against her sex, making her jump.\n\n\"Sweet thing,\" he whispered. \"I'll break you yet.\"\n\nIn one swift motion, he pulled back on the handle, dragging the entire length of the whip along her sex. She cried out, her back arching and her hands straining against her bonds. It was a delicious pleasure, one that sent sparks racing up her spine and shook her core. The man still grinned at her, watching her torture with gleeful malice. The tip of the whip brushed her clit, making her gasp as it pulled away.\n\n\"Again?\" he questioned.\n\nShe turned away, biting her lip and closing her eyes.\n\n\"You'll never come if you don't ask.\"\n\nStill, she refused to answer. The young man smirked and grunted a laugh.\n\n\"Have it your way. We'll see how much you can take.\"\n\nClaire watched as a long tendril of sliver slid out from under the bed, curling up the intricately carved leg of the bed. It slithered across the bedding, slipping under her thigh and coming to rest between the cheeks of her ass. The silky flesh of the tendril was cool against her skin. She tensed, her eyes wide with shock and fear.\n\n\"Beg for me, or I'll make you.\" The young man slowly pulled the whip through his fingers.\n\nClaire shook her head, biting her lip harder.\n\n\"Suit yourself.\" He grinned wider. \"I'm going to enjoy this almost as much as you are.\"\n\nThe tendril moved, slipping between her ass cheeks. It inched forward, heading for the goldmine. It found its target quickly, sliding easily into her tight hole. She tensed again, her grey eyes nearly squeezing shut to dull the sensation. The tendril continued to wriggle forward, its squirming making her writhe against the sheets.\n\n\"You like that, don't you?\" The young man sat down on the smaller bed, grinning at her.\n\nShe clamped her mouth shut, only letting tiny gasps and groans escape her throat.\n\nHe scowled. Standing, he strode over to her. He reached down sand plucked at her nipple with his long, delicate fingers. Her back arched further, another burst of pleasure rushing through her body.\n\n\"You can't keep this up forever. I'll break you here if I have to.\" He twisted her nipple lightly, making her whimper. The tendril moved deeper into her anus, making her gasp. Her toes curled involuntarily, though she fought against her restraints as hard as she could. He twisted her nipple again, making her groan.\n\n\"Come on,\" he growled through gritted teeth. \"I want to hear you beg me.\"\n\nTears streamed down her cheeks. This was too much and not enough all at once. His fingers were magic and the tendril was wonderful, but the whip was heavenly. Her body craved it, begged for it. It she wasn't tied to this bed, she'd have grabbed it out of his hand and finished herself off. Only her heart kept her from breaking; her mind had melted away long ago.\n\nAnother twist of his fingers and her resolve cracked. She groaned loudly. Vaguely, she wondered if giving in just this once would really be that bad. She'd be far from a servant to that creature, and she'd finally have that pleasure her body craved so hungrily. She sighed inwardly. Fine, her body could win this time.\n\n\"Come on, Claire. Let me hear it.\"\n\nHe twisted her nipple harder, sending a spark of pain down her spine. The tendril slid deeper, massaging her flesh from the inside out. She gasped loudly, her resolve finally breaking under his touch.\n\n\"Stop!\" she cried. \"Please stop.\"\n\nThe young man smirked. \"Good girl.\"\n\nHe pulled away, letting her relax a bit. The tendril retreated as well, slipping free from her anus and disappearing from view. Her body crashed into the bedding, her breathing ragged and uneven. She watched him walk over to the other bed, curiosity overwhelming her rationality. She closed her eyes and swallowed. Her heart rate slowly returning to normal.\n\nShe heard the whisper of leather on fabric, heard his footsteps as the young man retuned to the side of her bed. She opened her eyes to stare at him. He grinned down at her, stroking the bullwhip through his hand.\n\n\"Now, where were we...oh, yes!\" His eyes turned vicious. \"You were saying?\"\n\nShe swallowed. \"Please.\"\n\nHis perfect brows rose and inch. \"Please what?\"\n\nShe sighed. \"The whip. Please.\"\n\nHis grin widened an inch. \"Very good.\"\n\nAgain he pulled the whip down her belly and onto the bed. Again he pressed the handle of the whip against her sex. Again he dragged the entire length of the whip against her body, drawing out a low moan from the throat. Fire raced through her veins. Oh, yes! This is exactly what she needed. The tip grazed her clit, making her shiver.\n\n\"Again?\" he cooed.\n\nShe nodded frantically.\n\nHe drew the whip down her belly and off the bed, pressing the handle against once more her sex. He leaned forward, pressing his icy lips to her own. She arched her back, melding her mouth to his as her breasts pressed against the cold flesh of his chest. He smiled through their kiss as he dragged the whip against her sex again, setting off a fresh batch of shivers through her body.\n\n* * *\n\nClaire stood completely still, staring down the cavernous hall with a lock of horrified shock. That image, that horrible, demented image, made her skin crawl. She grimaced at the tendrils, disgust slowly crawling into her veins.\n\nHoly fuck!\n\nStill curious? The smile was back again.\n\nYou're sick!\n\nDon't tell me you're not intrigued.\n\nShe shook her head incredulously. Absolutely not!\n\nI think you're lying.\n\nDamn him. She scowled at the tendrils again. His comment only made her angry because it was partly true. The knowledge of it being the mist repulsed her beyond end. But the idea itself - the whips, the tendril, that kiss, it was all so...exciting. She clamped her thoughts closed, only letting the emotions flow free. She would never let that disgusting pile of swamp slime know he'd excited her. Never.\n\nStill coming, Claire?\n\nShe sighed and continued her walk. Yeah, yeah. I'm coming.\n\nGood. You're almost here. Just a little further and you and I can play.\n\nFucking freak of nature.\n\nNature! Rolls of dark laughter rattled through her skull. You think I was born from nature! Oh, you poor, sweet thing.\n\nShe stared at the tendrils, confused. What were you created from, then?\n\nAh, that is a simple answer. The souls that are sent here to the pits of the damned always feel anger or pain or hatred towards something. I am simply those emotions given life. Thoughts given form. Intentions given power.\n\nShe paused, flicking through her mental rolodex for a match. A poltergeist?\n\nSmart girl. Yes...of sorts. Though I happen to be much more sinister than those simple pests. I also have much more salacious intentions.\n\nEew.\n\nLiar. Damn that smiling voice of his.\n\nAsshole.\n\nOh, I intend to fully explore yours, my dear. Now come. You're so close. I can smell that delicious flesh of yours. Come, and we'll play.\n\nShe stopped at the mass of shadows that acted as the door to her room. The silver tendrils that had lead her here slowly disappeared into the wall of blackness, leaving her alone in the hall.\n\nClaire swallowed loudly. She knew what was behind that wall: an evil, malicious mist disguised as a dark, delicious man. But her lovers were there also, held captive by that man because of her. She had to save them, even if it meant losing her sanity or her soul to that creature.\n\nTaking a long breath, she closed her eyes and stepped forward, letting the warm, silky shadows loop lovingly around her wrists. They pulled her forward, beckoning her to enter, to see the demons she cared about. She sighed and nodded, letting them pull her through the dark and into the unknown.\n\n* * *\n\nI sit on one of the luxuriously soft beds, a sly smile plastered to my face. She's almost here, I can feel it. I'll have her soon enough, I just need to exercise what little patience I've got if I'm to have any chance of claiming her. Our little conversation was fun, though, as was showing her that tiny hint of my plans for her. Oh, her reaction was beautiful...",
        "My eyes flick to the three demons she'd claimed as her own. They're tied up and sitting against the wall, bound and gagged with my silver threads. I scoff inwardly. What does she see in these three? They're nothing. The older one, Thaltos, glares at me with those bright steel-grey eyes, looking like he could toss me into the fire pits now. I smile.\n\nAs if he could.\n\nMy eyes flick to the younger demons. The darker one, Silthos, also looks at me with unrestrained rage and hatred. Good. Their emotions give me the power that I need to thrive in this shithole. His twilight eyes burn with a ferocity I've only seen from those trapped in the Anger circle in Tartarus. He would fit in well there.\n\nDarrow is the only curious one. He stares at the mass of shadows leading into the room, his dark eyes both hopeful and frightened at once. I know what he's thinking: If Claire makes it, they'll be saved but she'll be lost. If she doesn't, they'll die. A rock and a hard place if there ever was one.\n\nI smile at all of them once more, then turn my attention back to my whip. It's the same one I showed her in the vision -- four six-foot-long strips of braided leather that end with a finely-honed tip. I run my fingers along its length, feeling the smooth knots of the braid. It's a beautiful piece of work, one that I fully intend on playing with once she gets here. That delectable little thing, as delicious as she may be, still needs a bit of training if she's going to be mine.\n\nI scowl at the floor. She's been silent for too long. I don't like that; it makes me wonder if she's truly on her way. Not that I really have to worry. My strands of mist will drag her here if she tries to back down. She'll come here whether she likes it or not.\n\nClaire? I hum in my mind. You are coming, aren't you?\n\nYes, I'm coming! I'm right here! Damn it, keep your pants on!\n\nI smirk at the thought. Once she's here, these useless slices of fabric will come off faster that she could blink.\n\nGood girl. I was beginning to worry.\n\nHer response is a jumbled mess of incoherent curses.\n\nMy smile widens. By the gods, she's fun! Beautiful, intelligent and with the smallest hint of fight in her tiny frame. Oh, she'll be such fun to play with.\n\nI stare at the whip again, considering the many plans I've devised for her. I wonder if I should leave her unbroken for a while. Besides that luscious body, it's her fight that intrigues me. She's got some spunk, I'll give her that. Maybe a bit too much, but nothing that can't be tamed. A few tender lashes here and there and I should have her under my spell again.\n\nOne of her lovers shifts suddenly, and I snap my head up to watch. Silthos, the younger one, is struggling against his bond, glaring at me with all the malice he can muster. I scowl back at him, annoyed. Damn it, he's supposed to stay still. How am I ever going to deal with Claire when he's making all that noise? He growls at me, redoubling his efforts to escape. Thaltos and Darrow watch him silently, encouraged by his fighting by discouraged by my presence.\n\nOne of the stands holding Silthos in place snaps under pressure, giving him limited use of his right arm. I stand, furious that he'd dare try to ruin this. I storm over to the row of demons, glaring down and them. I pull my arm back, then jerk it sharply across my body, only pulling back at the last instant.\n\n\"Enough!\"\n\nThe whip cracks, the tip slicing Silthos' cheek wide open. He groans, but his angry eyes never leave me. Dark blood oozes from the wound, spilling down his face and neck. I lower the whip, glaring at them. Thaltos and Darrow stare at Silthos, concern and anger burning in their eyes.\n\n\"No more,\" I growl, \"Or I may teach Claire your lesson instead.\"\n\nSilthos freezes, his eyes wide. Absolute fury and disgust flashes through three sets of hellion eyes. Oh, yes. Never touch what isn't yours and never harm the innocent. I grin and scoff silently. Amateurs. They have no idea the damage I could do to any of them. This is simply a warm-up for what have planned.\n\nThe shadows at the end of the room shifted, their soft edges wavering as a new body was welcomed into their grasp. I watch them, almost anxiously, waiting for the new arrival. Instinctively, I sniff the air, trying to catch a glimpse of our guest before they arrive.\n\nI grin. Spicy yet tongue-twistingly sweet, Claire's delicious flavor wraps around my mind as she nears the pool of shadow inside the room. My insides turn, and a tremor races up my spine. I'm beyond excited; I'm ravenous. I glace back to her three bound lovers, smiling at them with wicked glee. My girl is nearly here, and there's nothing they can do to stop me from ravaging her within an inch of her life.\n\nI look back to see my dear sweet Claire finally emerging from the pool of shadows. She exits the inky blackness quickly, stepping out of the reach of those tiny dark threads and into view.\n\nI grin inwardly. She's just a lovely as I remember. Creamy pale skin, bright grey eyes, rose-red lips and long, slender limbs. Every facet of her being beautiful and subtly seductive beyond imagination. Though a furious scowl mars her lovely face, she still looks as innocent and fragile as ever. And completely naked. She's walked into this room without a scrap of fabric covering her luscious body. I grin inwardly. Luck is certainly on my side today.\n\nOh, my Claire. What am I ever going to do with you? I'll need to find a way to bring that luminous smile back.\n\nI keep these thoughts restrained from her ever-curious mind, retaining them for my own personal pleasure. She can find out later what I have planned.\n\n\"Ah! You made it!\" I throw my arms wide, my excitement barely masking my darker thoughts. I lay the whip on the bed, saving it for later.\n\nShe glares at me.\n\nI take a step forward, my anticipation building with every beat of her heart. \"You don't look happy,\" I chime. \"What's the matter, Claire?\"\n\n\"Fuck you,\" she snaps.\n\nOh, yes indeed. My eyes light up. \"I do hope you mean to make good on that bargain.\"\n\nShe pulls back an inch in disgust. I smile back. Oh, her poor innocent little mind. I'll have to find a way to corrupt that sweet soul of hers. Then she wouldn't be so apprehensive and hostile. No, she'd be all mine.\n\nHer bright eyes flick to her lovers, widening with fear and shock. \"You said you didn't hurt them!\"\n\nThose grey orbs narrow at me with such ferocity, I'm almost surprised. Who knew my little human had such raw emotional power? I can almost feel then anger radiating off her skin. It's delicious, and I squirm inside my new skin at the thought of taming that anger.\n\nShe thrusts her hands to her hips, piercing me with her furious gaze.\n\nI smile at her. \"I haven't. As I said before. I've only kept them from interfering.\" I glance at her useless lovers. \"They won't get in the way, I promise.\"\n\nHer expression falters an inch. For an instant, I wondered if she was as strong as fiery as I remembered her being. She recovers quickly, though, and hardened her eyes once more.\n\n\"Get in the way of what? Me kicking your ass back into that slimy bog?\" Se glares at me, though a tiny smile makes the corners of her luscious mouth turn up.\n\nI can't help myself. I rush forward, scooping her up in my arms and claim that mouth for my own. She tastes of honey and cinnamon and a deep, dark desire she can't bear to keep restrained.\n\nShe squeals against my mouth, fighting my grip, her eyes wide with outrage. Behind me, her lovers offer their own muffled opinions of my kiss. I don't care. She's mine. I can do what I want with her whenever I please. She'll just have to get used to that.\n\nI pull away, letting her breathe for a moment. She glares at me with complete disgust. If she had the power to do so, I don't doubt that she'd burn me to a crisp right now.\n\n\"You didn't kiss me back,\" I tease. \"Why not? You don't like my kiss?\"\n\n\"You're disgusting,\" she spits.\n\n\"Oh, I don't think so.\" Still holding her close, I loop one arm around her back and trace the length of her spine with one finger. I watch her shiver, her eyes dilating and her lips parting slightly. My grin spreads. Even as she squeezes her eyes shut and grits her teeth, her body still reacts to my touch. She'll respond whether she wants to or not.\n\nGood.\n\nShe shakes her head, trying to clear whatever fog I've planted there. I run my finger along her spine again, loving the way her skin trembles under my touch. Her eyes flick away, determined to avoid mine for as long as possible.\n\nI frown at her. I want her to look at me, to know that I own her. I clasp her chin with my free hand, turning her head so she's forced to look me in the eye.\n\n\"Hey.\" I smile.\n\nShe just stares at me, her expression now more solemn than angry.\n\nI stroke her jaw with my thumb. \"Why the sad face? Is it because I tricked you? Or because your lovers are tied up?\"\n\n\"You.\"\n\n\"Just me?\" I tease.\n\nShe looks away again, her lovely mouth pulling into a tight line. She's shutting down, trying to cut off all contact with me. I feel my own eye twitch. As delicious and beautiful as she is, Claire does have a magical ability to annoy me beyond belief.\n\n\"Come now, Claire. Surely there's something about me that isn't completely insufferable. I do have a distinct charm, no?\"\n\nI step back to release her a bit, just enough to spin her around. I pull her close, feeling the warm flesh of her bare back against my chest. I press my nose into her soft hair, inhaling her scent of honey and cinnamon. Something in me shifts -- my more primal side slowly pushing to the forefront -- and I have to grit my teeth to keep from ravaging her here.\n\nBy happenstance, we're facing her three bound lovers, watching them as they watch us. I feel her stiffen when she notices them, and I suddenly have an idea to make her more pliable.\n\n\"You care for them, don't you?\" I whisper in her ear, loving it when she inhales sharply.\n\nShe nods but says nothing.\n\nI trail my lips down the pale flesh of her neck, making her shiver again. \"Enough to save them, I bet. Or at least try to.\"\n\nShe nods again.\n\n\"Then how about you and I make a deal?\" I let one of my hands wander, tracing the soft curves of her body.\n\nThaltos growls low in his throat. I smile back.\n\n\"What kind of deal?\" she asks, her voice soft.\n\nThere we go. That's my girl.\n\nI purr against her ear. \"\"A little bargain between you and I. Something to ensure that we both get what we want.\"\n\nShe hesitates for an instant, but her curiosity gets the best of her. \"What's your damn deal?\"\n\nI smirk, glancing to her lovers. Each is giving me the most frenzied gaze I've ever seen and certainly wishing upon me the most gruesome death imaginable. I grin back at them, feeling energized and powerful when they struggle and fight their bonds. Idiots. The rest of my restraints won't be breaking anytime soon. Still, it's probably best to keep them out of this discussion. This is between me and Claire. I don't want them interfering.\n\nBecause heaven forbid I upset Darrow even more.\n\n\"You agree, then?\"\n\nShe shakes her head, soft strand of her chestnut hair brushing my lips. \"You haven't told me your deal.\"\n\n\"Very well.\"\n\nI open my thoughts to hers. Allowing us to converse in silence.\n\nLet's keep this between you and me, shall we?\n\nWhy? What's so scandalous that you can't say it out loud? Her tone is mocking.\n\nTesty, aren't we? I'm going to find a way to break that attitude of yours.\n\nShe stiffens. Just tell me.\n\nYou want your lovers released so badly?\n\nYes.\n\nThen give me what I want.\n\nShe freezes. I can't see her face, but I'm assured it's an expression of shocked outrage. What I'm asking violates every moral and value she has: defy her owners and become lovers the enemy. If I hadn't been holding her, she would have bolted from the room and back into the hall.\n\nYou don't quit, do you? Her tone is clipped now, filled with outrage.\n\nWhy would I? You're here with me. What's the point in giving up the game now?\n\nYou're disgusting AND hopeless.\n\nI pull her tight against me. My dear Claire. I was born of hopelessness and disgust. What you think are insults are merely facts.\n\nFine then. You're the most kind, caring, loving creature I've met.\n\nI laugh out loud. Good logic, but ineffective. That's not how it works, Claire.\n\nHer shoulders slump an inch.\n\nYou want them back, yes?\n\nBefore I agree to anything, what exactly did you have in mind?\n\nYou don't recall our last conversation?\n\nShe shivers again. Oh, yes. Now I have her attention. That luscious whip that I made with my own hands. I intend to have the most wicked fun with those strands of leather if Claire would only acquiesce.\n\nShe remains silent for an instant before responding. Why that?\n\nYou think that's all I intend to do? Oh, no Claire. That's just my warm-up.\n\nShe stiffens in my arms, and a wide grin spreads across my face. Taking a chance, I slide my hand up her body and cup her small breast in my hand. Her flesh is warm and soft, silky smooth under my fingers. I groan inwardly. She'll be so much fun to break.\n\nI manage to glimpse Thaltos from the corner of my eye. The look of outrage in his eyes is so perfect, I'm almost giddy.\n\nDon't be so distant. I know you're intrigued about that little scene. You're no less sexual than any other person; you just choose to hide it.\n\nShe's silent. I still can't see her face. But I have a feeling my words are sinking in. I know her sexuality is still blooming, but she's just as open and curious as any other teenager. Her shyness had disappeared long ago, replaced with a strength and tenacity that shaped her now-explorative mind. She's curious, she just doesn't want to admit it.\n\nI don't...\n\nYou don't what? Want to say it aloud?\n\nNo! I don't want that!\n\nHer body betrays her in an instant. I can feel the muscles of her belly tightening as she recalls my scandalous plan. A shiver runs down her spine as one of her nipples tightens to a hard bud in my hand. Ah, the human body is magical.\n\nMy dear sweet, Claire. You're an awful liar.\n\nHer shoulders slump. I've cornered her against her own sexuality. I just need a little prodding, a tiny push to set her in the right direction.\n\nI can help you with that.\n\nI squeeze her breast gently, loving the tiny hitch in her voice. I know her lovers are staring daggers at me, but I no longer care what they think. My focus is on Claire and making her mine.\n\nCome on. Don't deny me this. Don't deny yourself this. You and I both know you're curious. Stop playing and explore with me.\n\nShe sighs in defeat. Finally! She's all mine now, I just need to get her damn lovers out of here so we can play.\n\n\"Let them go,\" she pleads, her voice soft and hollow.\n\nExactly what I was thinking...\n\n\"How do I know you won't run out after them and leave me here?\" I feign suspicion, even though I know she'd never do such a thing.\n\n\"You're holding them hostage. I wouldn't dare.\"\n\n\"That's my girl.\" I plant a soft kiss on the side of her neck, feeling the warm flesh against my lips.\n\nI don't have to think about it to make it happen. My thin threads of silver slide away from her lovers, pulling back into the shadows of the room, waiting for my instructions. The demons refuse to move for an instant despite their new freedom, watching me with wary eyes.\n\nI jerk my head towards the shadow door. Thaltos shakes his head, his grey eyes narrowing at me. I sigh and press my lips to Claire' ear.\n\n\"I don't think they're going to listen to me.\"\n\nClaire nods, turning to face her three very annoying demons. \"Go. I'll be fine.\"\n\nDarrow's eyes widen with shock and hatred. \"Claire. We're not leaving you here with that-\"\n\n\"Just leave,\" I hiss. My annoyance is in full bloom; I can barely stand their presence any longer. I have my plans, and I want them out of them way.\n\nAll three glare at me but never move. They know I have the advantage with Claire in my arms. If they tried anything, I might do more damage than I intended...or so I lead them to believe. Harming Claire was never in my plans, but I'm more than willing to use a little theatrics to get what I want.\n\nReluctantly, they slowly make their way to the shadows at the end of the wall. Three sets of eyes -- black, silver and twilight - never leave Claire. They stare at her despite their movements, only shifting to glare at me every few seconds. I smile back. I can't help my wicked sarcasm. It's in my nature.\n\nOne by one, Thaltos going first, they slip through the shadows, still watching Claire. Silthos follows quickly, his mentality much clearer that his companions: the sooner they leave, the less chance of me lashing out. Darrow leaves last, his dark eyes piercing my own. They would have speared straight through my soul had I been born with one. He dissipates into the shadows, mouthing one final silent handful of encouraging words to my beloved Claire before leaving completely.\n\nWe're alone now, Claire and I. The room is silent, save for her nervous breathing. Finally, some peace and quiet. I squeeze her breast involuntarily, barely able to control my enthusiasm. I nearly tremble with anticipation. Alone with my sweet Claire...oh, the fun we're going to have.\n\n\"Ah, alone at last.\" I run my tongue along the curve of her neck, savoring the salty taste of her flesh.\n\nShe turns away from me, but never struggles. Her stakes are too high, her risk too great to fight me now. I'm elated; I finally have her all to myself. No struggles, no interferences. Just me and my sweet prey.\n\nPerfect.\n\n\"I certainly hope you're ready, Claire.\" I whisper into her ear. \"I'm going to drain you dry.\"\n\n* * *\n\n\"Not really.\"\n\nShe swallows nervously, her body trembling out of fear and unwelcome desire. Now trapped in her room with a bloodthirsty man-like creature with silver eyes and a taste for her flesh, her stomach began to perform backwards handsprings.\n\nOh, what have I done?\n\nShe dropped her head, nearly shaking out of anxiety. Now that her demons were gone, she was defenseless.\n\n\"Oh, Claire,\" he nuzzled her neck. \"Don't be so selfish.\"\n\n\"I'm not the selfish one,\" she mumbled.\n\nA sharp smack of her ass had her standing straight as a board.\n\n\"No attitude from you,\" he hissed in her ear. \"Be good, and you'll come out relatively unscathed, clear?\"\n\nShe nodded, a spark of panic rushing through her veins. She'd seen that damned whip lying on the bed as she'd walked in; saw the faded mark along Silthos' cheek. He was more than capable of inflicting damage, even though she may not be the prime target. Still, his warning was clear: behave, or be whipped.\n\n\"Good girl.\" He smacked her again, softer this time, the blow ending in a soft caress over her cheek. \"To the bed.\"\n\n\"What?\" She whipped her head around to glare at him.\n\nHe smiled back, the sharply beautiful planes of his face morphing into an infectious grin. His silver eyes shined with mischief and malice. \"Come on, you remember. The whip, yes?\"\n\nHer eyes widened. \"You're-\"\n\n\"Serious? Always. Bed.\" He jerked his head towards the row of blankets and pillows, the hungry smile never leaving his face.\n\nShe hesitated, still stunned out of her senses. She was screwed now, even more so than when she'd bitten Lucifer. This was far worse then being tossed into the Fire Pits covered with flesh-eating worms.\n\n\"Do I have to carry you there?\"\n\nShe shook her head, the sound of his voice making her squirm. She pulled out of his embrace, taking slow cautious steps toward the main bed. She stopped taking inventory of her heart rate or her breathing; she was far too frightened and numbed to care.",
        "She reached the bed sooner than expected, her mindless fear neutralizing her ability to tell time or distance. She stared at the black bedding, her eyes wandering round its delicate red filigree stitching. Her lip trembled. What she would give to burn that blanket so that creature couldn't have his fun. Or what she would sacrifice to feel Darrow's warm hands on her skin again...\n\nIcy hands rested on her hips, wringing her out of her trance. Hot breath slid down her back as soft lips pressed against the nape of her neck.\n\n\"Think of the fun we could have in this bed,\" he whispered.\n\nShe shivered again, helpless to stop. Despite her mind's rebellions, her body still reacted to his touch, still wanted his caress.\n\nHe nuzzled her neck. \"I can imagine you in a thousand different positions. And that's just the start.\"\n\n\"I thought you needed to kill me,\" she managed to whisper. \"That you needed me gone because I could understand you.\"\n\nHis hands slid to her breasts again, squeezing them until she gasped and twitched against his grip.\n\nHe laughed in her ear. \"No, my dear, sweet Claire. I don't want you dead. I don't even want you gone from here. I need you here with me. You do understand me, and that's what makes you all them more incredible. You and I Claire... think of what we could do together. We could rule here, command this place and its people absolutely.\"\n\nRule Hell? Command Thaltos? No, she couldn't. It broke her heart to think about having that kind of influence over those she cared for. She wanted her demons as lovers, nothing less.\n\nShe shook her head. \"I couldn't. I couldn't do that to them.\"\n\nHis hands rubbed her breasts more vigorously. \"Oh, come on, girl. I know you could. You've got all the power and strength you need to run this show with me. A little push in the right direction, a little time on the throne...a little less clothing and you and I could have these demons eating out of our hands.\"\n\nStrength and power she may have, but not the black heart to do it.\n\n\"No. I won't. I refuse to harm them in any way.\"\n\nShe heard his growl, felt his hands move lightening-fats down to her hips. He spun her around and shoved her onto the bed, glaring down at her with frustrated lust. His lips twitched up in a wicked smile.\n\n\"I suppose I'll have to break that out of you as well.\"\n\nThreads of silver slid out from under the bed, looping around her wrists and ankles and slowly pulling her back. They twisted around the corner posts of the bed, spreading her body wide and holding her in place. The vision of her being trussed up in the exact same position flashed through her mind, making her whimper and struggle against her bonds.\n\nHe reached down and curled his fingers around the handle of the whip, his silver eyes never leaving hers. He straightened, still smiling down at her, running the whip through the palm of his hand.\n\n\"Oh, Claire,\" he purred. \"I could leave you like this for the rest of eternity.\"\n\nShe turned away, refusing to look at him. She didn't mind being exposed like this to Darrow or any of her lovers -- she liked it when they ogled her. But being pulled open for the amusement of this new mist creature was beyond humiliating.\n\nThe soft leather of the whip brushed against her cheek. She felt the pressure against her skin as her head was forcefully turned back. Pools of liquid silver stared into her own soft grey eyes. A warm smile played on his lips.\n\n\"Don't be like this.\" His voice was rich, dark, almost hypnotic.\n\nShe chewed her lip, fighting her desire to lose herself in those eyes.\n\n\"Come on, Claire. Don't be a spoilsport. Have a little fun.\" His smile widened an inch.\n\nA near carbon copy of her vision in the hallway, the cool leather strands of the whip slid down her body, tickling her belly along their descent. The handle of the whip pressed against her sex, making her squirm and fight her restraints again. She tensed her body, preparing for his assault and numbing her senses to the touch.\n\n\"I could, you know.\" His smile never faltered. \"Break you again. It would be easier this time, slower, more enjoyable for the both of us.\"\n\nHe pressed the handle harder against her sex, drawing out a soft whimper from her throat.\n\n\"You'd love it this time. I could teach you things you never knew were possible. Show you things you never knew existed.\" He drew the whip up an inch, making her twitch at the small burst of pleasure. \"Make you felt things you've never felt before.\"\n\nRecovering form the tiny spark of bliss, Claire regained her equilibrium and shook her head.\n\nHis smile faded. \"Why so argumentative?\"\n\nShe narrowed her eyes at him, but clamped her mouth shut. Her anger and fear had her itching for a fight, but her sense of reason had won out. If she stayed quite, she might make it out unharmed.\n\nHe frowned, his silver eyes narrowing to match her. \"Fine, then. If you're going to play hardball, I'll play, too.\"\n\nHe straightened, pulling back on the whip as he did so. The entire length of the leather braid slid against her sex, sending bolts of lightening racing up her spine. She inhaled sharply, closing her eyes to concentrate on regaining control. The tip of the leather smacked against her clit, propelling a flurry of sparks through her veins.\n\n\"You're prepared to play this game?\" He stroked the whip with his fingers, gazing down at her impassively.\n\nStill shaken by the burst of pleasure flowing through her, Claire managed to keep her mouth shut. She opened her eyes to stare at him. She swallowed, mentally preparing herself for the barrage that was to come.\n\nHe sighed, the same soft smile playing on his lips once more. \"Very well. You've asked for it, remember that.\" He drew the whip down her body again, pressing the handle against her sex a second time. \"I'll break open that luscious mouth of yours. By the time we're through, I'll have you screaming for more.\"\n\nHe raised the whip again, dragging the length of the leather harder against her body. She cried out this time, the small flames of desire that had festered in her belly now blossoming. The tip of the leather brushed against her clit again, making her tense against her restraints.\n\n\"I can do this all day.\" He replaced the whip quickly between her thighs again. \"Though I'm not sure you can.\"\n\nHe pulled back again, repeating the same delicious torture that she'd tried so hard to avoid.\n\n\"Do it, Claire,\" he hissed through gritted teeth. \"Beg for it.\"<br> Another burst of pleasure flooded her senses. She managed to shake her head, her heart barely winning the fight over her body.\n\nHe growled low in his throat. \"Fine then. We'll play hard.\"\n\nHe pulled the whip away, allowing her body several precious seconds of rest. Her relief was only temporary, though. A mirror of her vision, she watched a thin strand of silver slide up onto the bed and wriggled under her leg. Its cool, slick skin made goosebumps rise on her flesh. The tip pressed slid between the cheeks of her ass, barely pressing the tight puckered hole.\n\nHer heart nearly stopped.\n\nThe man sat down on her bed beside her, running his cool fingertips along her belly. \"Oh, yes. You remember this, don't you?\"\n\nShe stared at the slender thread of sliver, barely able to breathe. Oh, she remembered this part of his plan, alright. It was the part she'd feared the most.\n\nHis fingers continued to stroke the tender flesh of her belly. \"It doesn't have to happen if you'd just be a good girl,\" he crooned. \"If you'd just relax a bit and do as you're told, we could avoid this part all together.\"\n\nA good girl? She'd always been a good girl. She cared for others, helped those less fortunate...hell, she'd even managed to fall in love with three demons no one else could possibly care for. But this idea of a 'good girl' was a corrupted one. A darker, sinister version of who she was. It was an idea of a person she simply couldn't be. She shook her head, still keeping her mouth closed.\n\nThe man inhaled slowly, closing his eyes to gather himself. \"You're stubborn, alright. Almost as stubborn as that damn demon king.\" His smile returned. \"But don't you worry about him. That kiss he stole from you doesn't mean anything to us.\"\n\nHer stomach barely twitched at his words. Of course he knew bout Lucifer's forced kiss. There wasn't much that damned mist didn't know. She continued to stare impassively at him, waiting for his next move.\n\n\"You're forcing me into a very comfortable position, Claire,\" he warned. \"This isn't something I'm uneasy about or uneducated in. I'm very proficient in making people do what I want. You're just a bit more bullheaded than I'm used to.\"\n\nThe thread of silver pushed harder against her anus, making her squirm again. The memory of her time with Darrow and Silthos, when she'd so stupidly tried to show how brave she was, flashed through her mind. Her resilience hardened at the thought. No, that area was for her lovers alone. Not some self-absorbed mist-man with a hyperactive God complex. No, she would never let him get that far.\n\n\"You're just a bit more of an asshole than I'm used to,\" she spat.\n\nHis eyes widened, as did his grin. \"There we go! That's my girl!\"\n\nHis elation stunned her for an instant. He should be furious with her attitude. After all, she was being as defiant as possible. He should be torturing her more, trying to break her with ever ounce of power he-\n\nA ripple in the shadow door caught her eye. Still glaring her captor, she watched in her peripheral vision as more ripples emanated from the dark pool that covered the slick wall of her room. Two onyx horns speared through the surface, followed by black eyes and a mass of brick-red skin.\n\nDarrow.\n\nHer heart swelled with joy and relief. He hadn't abandoned her at all. None of them had. His dark eyes caught her own, a mixture of shock, anger and concentration swirling in their black depths. She managed to hold back her smile; showing anything other than anger now would alert her captor to their new guest.\n\nAs he stepped silently through the pool of shadow, Claire glimpsed a long, slender dagger gripped in his hand. The handle was made of carved silver metal encrusted with red and black jeweled. The blade was at least eight inches long and made of elaborately carved ivory-colored material. Bone, no doubt. Darrow's hand tightened on the handle, his jaw tightening in concentration.\n\nDistract him.\n\nThe thought flashed through her mind before she had a chance to comprehend it. But her instincts were right. The more her unwelcome partner focused on her, the less he knew about Darrow.\n\n\"I'm going to have so much fun breaking you, Claire,\" the man whispered, catching her attention again.\n\nShe plastered a sarcastic smile on her lips. \"I don't think so.\"\n\nHis brows rose an inch. \"Oh? What makes you so sure?\"\n\nShe scoffed. \"All you've given me is pleasure and a tiny but of discomfort.\" She motioned to the silver thread probing the border of her anus. \"You've haven't done any real damage. You haven't proven yourself to be the all-powerful, malicious being you claim to be.\"\n\nHis smiled faltered a bit, a spark of anger glowing in his eyes. Her courage started to swell inside her and she continued to goad him.\n\n\"I wonder if you're even able to fuck. You've never shown me any evidence that you could. All you've ever been able to prove is that you're good with messing with people. You've never given me any reason to think you could actually pleasure anyone but yourself.\"\n\nThe back of his hand collided with her cheek, whipping her head to the side and sending a bolt of searing pain across her face. She whimpered and closed her eyes, biting her lip against the pain. Tears stung her eyes, but she managed to fore them down. She was barely able to keep her emotions in check, but she wondered about how that smack had affected the rest of the room's occupants.\n\nDarrow must have nearly lost his mind.\n\n\"Damned bitch,\" he hissed, rising from the bed. He gripped the whip in his hands again, glaring at her with absolute hatred. \"You want proof of my malice, do you? Fine then. I'll give you proof.\" He raised his hand, aiming the whip straight at her belly.\n\nHe cried out in pain before he even had a chance to focus his strength. Darrow had stepped up behind him, looping his arm around his opponent's waist and pulling him backwards. The tip of the bone dagger pierced through the flesh of his shoulder, sending a fine spray of liquid emerald into the air. The mist roared with rage, dropping the whip and clawing at Darrow's thick forearm.\n\nHer lover managed to keep the upper hand, though, and kept him close despite the deep wounds in his arm.\n\n\"I have him,\" he roared. \"Get Claire!\"\n\nSilthos and Thaltos burst into the room, both heading straight for her. Thaltos diverged at the last minute, turning to held Darrow control her captor. Silthos' focus remained on her. He knelt on the bed, clawing away the stands of silver that bound her. He brushed away the thread that rested against her anus. Slipping his hands beneath her back, he hauled her into his arms and scrambled off the bed, darting to the nearest corner and cradling her against his chest.\n\n\"You okay?\" he whispered, his eyes wide with concern.\n\nShe nodded vigorously. \"A little shaken, but I'm fine.\"\n\nA torrent of shouting caught her attention again. She turned to see Darrow and Thaltos wrestling their opponent to the ground. The mist still struggled ferociously, but the weight of two demons plus his wounded shoulder made breaking away impossible. Darrow planted a giant hand on the back on his adversary's head, forcing his beautiful face into the hard rock of the floor. He and Thaltos pulled back a bit, breathing heavily but satisfied that they'd won the fight.\n\n\"Where'd you get the knife?\" she asked.\n\nThaltos wiped a smear of blood from his lip. \"It's a fireblade. Probably the only thing down here that could harm this pile of shit. Silthos managed to swipe it from Lucifer while we were outside.\"\n\nShe looked back at Silthos. \"You stole something from Lucifer?\"\n\nHe shrugged, offering a slight smile. \"It was the only chance we had of getting you out of here. I think the old man will get over it soon enough. It's not like it was his archangel's blade.\"\n\nShe smiled back and kissed him. \"Crafty little hellion, aren't you?\"\n\nHis smile widened an inch. \"Only for you.\"<br> \"Is it under control?\" Kerion's voice resonated around the room.\n\nThe old spider crawled through the shadows, making his way quickly over to Thaltos and Darrow.\n\n\"He's down for now. But we can't hold him for long,\" Thaltos stood and welcomed Kerion warmly.\n\n\"I can handle keeping it controlled for now. How is Claire?\"\n\n\"A bit traumatized, but I think she'll be alright.\" He offered her a soft smile. \"Where's Lucifer. I thought he was with you.\"\n\n\"He went to gather the Counsil. After a stunt like this, I'll be surprised if they don't chain this despicable thing up for eternity.\"\n\n\"Good. Will you be able to keep him down for a bit while we help Claire?\"<br> Kerion nodded. \"I'll handle it. Darrow, hold him still.\"\n\nThe old spider crawled towards Darrow, reaching back with one of his long legs to grasp a strand of silk from his underbelly. Darrow lifted the mist's head from the floor, letting Kerion loop the strand of silk around his head. Bit by bit, they worked together to wrap the offending creature in a layer of sticky silk.\n\nThaltos made his way over to Claire and Silthos, kneeling down on the floor beside her. He reached out with warm hands, stroking her cheeks with his thumbs.\n\n\"Are you sure you're okay?\" His grey eyes were worried.\n\nShe smiled and nodded. \"I'll recover.\"\n\n\"I will say - not that I ever doubted you, my dear -- but nice job keeping your mouth shut when I came in,\" Darrow shouted to her.\n\nShe smiled over her shoulder at him and blew a kiss. His eyes lit up with his smile, and he mimed catching her kiss in his hand. Kerion had reached the mist's torso now, slowly wrapping its human body in endless stands of silk. It still twitched in rebellion, but not nearly enough to break free. Only its silver eyes peered out from the layers of silk, glaring at her.\n\n\"What do you think will happen to it?\" She stared at the wriggling body.\n\n\"That's a difficult question,\" Silthos answered. \"It was born from the emotions of the damned souls, so there's no way to kill or destroy it. I suppose they'll lock it up somewhere in the Fire Pits where it can't escape.\"\n\nThe hatred in those eyes made her stomach turn. \"You're sure we'll be safe with it down there?\"\n\n\"We'll be fine. It'll have to escape the Fire Pits before it can come after us. Besides, Kerion's silk will hold for a few millennia.\" Silthos kissed her neck.\n\nShe nodded. \"What about Lucifer?\"\n\n\"Well,\" Thaltos started. \"I don't think he appreciated that bite you gave him. But he'll have to learn his boundaries one way or another. I think he's still upset, but he won't come after you for it. He'll probably take his frustrations out by hurling a few damned souls into the worms of the Gluttony circle.\"\n\n\"Oh.\" Her stomach turned another inch. Those poor people. She should have never bitten him.\n\n\"Don't worry about them, Claire. They're all asshole down there. With the exception of your parents and everyone else who made a stupid deal, they're not worth saving.\" Thaltos kissed her hand.\n\nShe watched as Kerion finished wrapping the mist's form. Those silver eyes still pierced her through the webbing, but she felt safer now, more secure. It couldn't hurt her anymore, couldn't chase her anymore. She was safe from any of its evil charms or wicked deceptions. She could have her demons now and be as safe and loved as she'd ever been.\n\n\"He's good now, Darrow. You can let go.\"\n\nDarrow nodded, stepping back from the mound of silk. The mist had stilled now, obviously understanding that wasting its energy on struggling wasn't gong to get it anywhere. But Claire knew in her heart it hadn't given up. There was still some fight left in that sack of fog. Something dark and sinister still brewed beneath the surface. It might take years to break loose, but when it did, there'd be hell to pay.\n\n\"Don't worry. I'll take him to the Capitoris.\" Kerion hauled the limp sack of web onto his enormous abdomen. \"It'll be dealt with there.\"\n\n\"You'll be alright, Kerion?\" she asked.\n\nThe old spider nodded, his eyes lighting up with an unseen smile. \"I'll have a few guards with me. I'll be fine, Claire, I promise.\"\n\nShe nodded and watched as he turned and dissolved through the shadows, the bundle of mist still resting on his back. Darrow made his way over to join them, kneeling down opposite Thaltos and running his hand through her hair.\n\n\"I'm very proud of you,\" he whispered as he kissed her neck. \"We all are.\"\n\n\"Yes, I'm sure we're all very happy and proud of the little human girl.\" Lucifer's voice resonated from beyond the shadow door.\n\nOh no.\n\nThe dark former angel stepped through the wall of darkness, his bright gold eyes finding her instantly. A tight smile crossed his lips, making her squirm under his gaze. He leaned against the wall, crossing his arms over his chest.\n\nThaltos, Darrow and Silthos shot up, from the floor, inadvertently dragging Claire along. They stood at attention, staring at the demon king and awaiting orders. Claire stood awkwardly in front of them, her stare filled with more fear than militaristic readiness.\n\n\"I'm sure we're all very excited and relieved to know miss Harding is safe and sound.\" His voice, while tinged with malice, was just as smooth and seductive as always. \"And I'm sure we're all very happy to know that tat damned lump of fog has been taken care of.\"\n\n\"Sir?\" Thaltos initiated the talk.\n\n\"The Counsil and I have had a talk about the recent events. After many shouting matches and one particularly long silent treatment, we've managed to come to some conclusions.\"",
        "Silthos blinked twice. \"Conclusions? There was more than one decision made?\"\n\nLucifer's smile widened. \"Two, in fact. The first concerned the mist itself. After that little debacle, we've decided the having it watch over the souls of the marsh isn't the best plan. It will be locked down in the ice graves of the Fire Pits where it can't escape.\"\n\n\"Who will patrol the marsh once it's locked away?\" Thaltos questioned.\n\n\"We'll have a round of guards patrolling he borders. If any soul tries to escape, they'll be dealt with.\"\n\nSilence followed for a heartbeat before Darrow spoke up.\n\n\"And Claire?\"\n\nLucifer's smile burst into a full grin. \"Ah, now that is an interesting concept.\"\n\nOh fuck. This won't end well.\n\n\"We all agree that's she sacrificed an enormous amount to save the balance of our home, and that she should be properly commended. She's risked her own life and soul to maintain our world. After much deliberation, we've decided to offer miss Harding a choice as a reward for the courageous actions that she's shown.\" His flowery words did nothing to hide the spark of cruelty in his eyes.\n\n\"What kind of choice?\" She managed to speak again.\n\n\"A choice of freedom, my dear.\" That spark of malice in his golden eyes began to bloom.\n\n\"Freedom...of what?\" Her gut twisted again, doing somersaults around her intestines.\n\n\"Of your soul. The Counsil and I have decided that you've earned the rare honor of choosing whether you want to stay here with us, or go back home.\"\n\nClaire stared at him, her jaw an inch from hitting the floor. Go home? Back to the real world with her family and friends and normal life? Back to blue skies and singing birds and the warm sun? She could go back and live as herself again?\n\nThe thought floored her. She could return to the waking world and resume her old life as if nothing happened. She'd have her family -- if they loved her anymore - and friends and schoolwork and everything. She could be human again, and live as if none of this had ever happened. As if her parents had never sold her ad as if she was Claire Melody Harding once again.\n\nAs if none of it ever happened...\n\nBut that would mean leaving behind Darrow, Silthos and Thaltos. Going back meant saying goodbye to Claire and Kerion and his children. She would never wander the halls of this realm again. She would never share her bed with her demons. She would never taste the delicious food that Silthos prepared for them every day. She'd have to leave her new life, the life she'd come to love, behind.\n\nNo. leaves them behind? No. No!\n\nTears stinging her eyes, Claire shook her head. \"I couldn't. I couldn't leave them here.\"\n\n\"But Claire,\" Thaltos knelt down beside her, placing a hand on her shoulder. \"You could go home. Back to your friends and your life and you'd be normal again. You could do anything. You'd have your family again.\"\n\nShe looked at him, pained. \"What family? My parents sod me off to you and my grandparents think I'm as evil as any guard here. I don't have a family back there anymore. You,\" she turned and cupped his face in her hands. \"you guys are my family.\"\n\nHis steel eyes widened in shock. \"But Claire-\"\n\nShe shook her head again. \"I don't want to leave!\"\n\n\"You don't?\" He stared at her, dumbfounded.\n\n\"No!\" She threw her arms around his neck and hugged him close. \"I want to stay with you!\"\n\nThaltos stilled fro an instant, the wrapped his arms around her and held her tight. \"You're sure?\" he whispered into her hair.\n\nShe nodded vigorously, burying her face into his soft, snow-white flesh. She was safe here, loved here. She couldn't leave all this behind. This was where she belonged. With her demons, in their bed, safe and warm.\n\n\"Good,\" he whispered into her hair, bringing a smile to her lips.\n\n\"Miss Harding?\" Lucifer's voice brought her back from her safety zone of Thaltos' arms.\n\nShe pulled away hesitantly, swallowing loudly as she turned to face him. Bright golden eyes speared her, watching her every muscle twitch. Swallowing again, she straightened and set her shoulders.\n\n\"Yes?\"\n\n\"You've made your choice, I assume.\" He cocked an eyebrow, waiting for her answer.\n\nShe nodded, trying to quell her shaking. \"Y-yes. I, uh, unfortunately must decline your offer to leave. I would rather stay here with my demon owners than go back.\"\n\nSculpted lips pursed as gold eyes narrowed. \"You're sure about that? You'd be sacrificing your family and friends to stay here with the rest of us.\"\n\nShe forced a shrug. \"To be honest, I don't really have much family left. And I was never really popular in school.\"\n\nLucifer took a long breath, a signal to her that he wasn't happy.\n\n\"I see. So your final decision is to remain here with us?\"\n\nShe nodded. \"Yes...sir.\"\n\nHis lips twitched. \"Very well then. I'll tell the Counsil your decision.\"\n\nShe smiled softly. \"Thank you.\"\n\nLucifer turned and strode towards the pool of shadows. He paused at the border of the black pool, peering over his shoulder and massive wings at her.\n\n\"I wish you luck, miss Harding. You'll need it here.\"\n\nWith his final veiled threat, the demon king stepped through the barrier of her room and dissipated into the dark.\n\nShe watched hi leave, the feeling of being devoured by his eyes now gone. Two more warm hands gripped her waist ad shoulders. Silthos and Darrow had stepped up behind her, flanking Thaltos and staring at her. She turned to see three sets of eyes locked on her, all three filled with elation.\n\n\"You're really staying?\" Silthos' voice trembled slightly.\n\nShe smiled at them. \"Of course I'm staying. Why would I leave? I have you three to get me through this.\"\n\nFaster than lightening, all three of the launched themselves at her, tackling her to the floor and wrapping her tightly in a mass of warm flesh and soft kisses. She burst out laughing, looping her arms and legs around the bodies of her demons. She leaned her head back and closed her eyes, letting the pepper her skin with as many kisses as they wanted.\n\nShe sighed inside herself. This is what she wanted, where she belonged, who she loved. She loved them, all of them, and hoped that she could live here for eternity with all her lovers. That would be wonderful.\n\nA flash of memory flitted through her mind, a small scene from the first day she'd met her new lovers in the church...\n\n\"You've been so easy, I'm inclined to reward you. Tell me, Claire. What would you like as your reward?\"\n\n\"To be happy. I've never really been happy. I've had love and friends, but I've always felt empty inside. Like something was missing, but I could never figure out what it was. That's what I want. To be happy.\"\n\n\"Fear not, child. We will make you happy. Very happy, indeed.\"\n\n\"Yes. There will be so many things to show you that will please you. We will make you so happy you will never want to leave us.\"\n\nThey were right. After all the trials and emotions she'd gone through while staying her, they'd been right. She never wanted to leave.\n\n* * *\n\nEpilogue\n\n(Fifteen Years Later)\n\n\"Taros! Falgon! Mirak! Where are you?\"\n\nClaire wandered endlessly through the main hall, relentlessly calling out the names of her sons. They should be here somewhere, but much like their fathers, all thereof them had wills and ideas of their own. Today was a game of make-mommy-terrified-she-may-have-lost-us.\n\nShe stopped her useless wanderings, standing in the middle of the massive hall with her hands on her hips and a slight smile on her face. It wouldn't so any good to keep chasing them around like this; all three of her boys were half-demons, and therefore far faster than she could ever be. She didn't have a chance to corral them back, even if she did manage to catch sight of them running down the hall.\n\nFine then. They want to play games? I can play, too.\n\n\"Alright, you three. That's enough!\" she called out. \"You stand in front of me in ten seconds, or no dessert!\"\n\nA menagerie of cries of her unfairness and whines about hunger greeted her ears.. Claire smiled and rolled her eyes. Also much like their fathers, food was the ultimate persuader.\n\n\"I mean it. Eight seconds.\"\n\nA clamor of voices and pounding footsteps echoed through the hall. Seconds later, three young boys rounded the winding corner, racing towards her at full speed. Their eyes were panicked, frightened. Horrified.\n\nAh, the persuasion the simple idea of dessert can have on kids.\n\nShe smiled to herself. Her kids were frighteningly predictable.\n\nThe three boys screeched to a halt inches from her, panting and exhausted from their sprint. They gazed up at her ,waiting for her verdict.\n\nShe smiled at them. \"Well done. Four seconds to go.\"\n\nThey eyes lit up, small grins spreading across their faces.\n\nClaire smiled down at them. It still shocked her how much they each looked like their fathers. Taros, her eldest at fourteen, had Darrow's dark eyes and reddish skin. Falgon, now thirteen, had inherited Thaltos' steel eyes and onyx-colored teeth. Her youngest, Mirak, nearly twelve, shared Silthos' dark skin and bright smile.\n\nStill, her genetics hadn't been left out of the equation. Whether it was Mirak's soft grey eyes, Taros messy chestnut hair or Falgon's high cheekbones, there was a bit of her inside all of them that marked the boys as hers.\n\n\"So we can still have dessert?\" Mirak pleaded.\n\nShe nodded. \"Yes, you can. But dinner first.\"\n\nA collective sigh of disappointment passed through the group of boys. Claire rolled her eyes. Just like their fathers when she says she's too tired.\n\n\"Come on. Dinner first, and no exceptions. Let's go.\" She spun on her heels and began to walk down the hallway again. The boys followed quickly behind her, whispering to each other whatever playful secrets young children had.\n\nClaire walked silently, lost in her own musings. The train of her lavender dress flowed behind her, the soft silk whispering across the stone floor. Normally, if the boys were asleep and it was only her and her demons, she'd be completely naked. But around her sons, she felt far more comfortable being clothed out of modesty's and society's sake...for now, at least. They'd learn about sex soon enough.\n\nThey reached the door to their room quickly. Claire stepped aside and watched as each of her sons passed through the shadows. She gazed at them with her maternity-sharpened eyes, watching for any sign of trouble; Mirak had the nasty habit of running back out into the hall at the last instant. But tonight, with the prospect of dessert on the line, all three of them behaved well, walking quickly through the shadows without incident. She smiled and followed after them, reaching the interior of her room in record time.\n\nHer lovers were already waiting for them at the table. Thaltos rested his arms on the table, patiently holding his hunger until they'd arrived. Silthos and Darrow hadn't been so courteous, and had started filling their plates with heaping mounds of food. She smiled and rolled her eyes, as impolite as it was, she knew better than to get between Darrow and food.\n\nEach of her sons rushed the table, clamoring into the seats beside their fathers, Claire too the seat in the middle of the table, settling into the warmed wood of the chair. Now seated, the rest of the table began dinner, stacking layers of food from each of the many dishes set out on the table.\n\nThaltos curled an arm around her shoulder, pulling her in for a warm kiss.\n\n\"Hi,\" she purred.\n\n\"Fifteen years and you haven't aged a day.\" He nuzzled her hair.\n\n\"That makes you happy?\" she teased.\n\n\"Only because you're still as young and virile and I remember.\" He grinned wickedly. His eyes flicked to the boys. \"You found them. Well done.\"\n\nShe smiled and reached for her plate of rice and beef. \"They'll come when called. You just need to use the right tool.\"\n\n\"And those would be?\"\n\n\"Threaten their chance of dessert and they'll have smoke following behind them.\" She smirked and took her first bite.\n\n\"I'll have to remember that.\" He kissed her again. \"Usually they laugh and run off when I try to track them down.\"\n\n\"Just have a little patience. They are half-demons, after all. They're bound to be a little rebellious.\" How true that was. Her three sons nearly had Thaltos clawing at his face just trying to keep them in line.\n\n\"Mom, when are you going to give us the talk?\" As usual, Taros had to stir the pot with an unusual question.\n\nShe sighed. Ah, yes. The sex talk. The one thing every parent dreads when raising children. They'd been asking about it for the last two years, begging and pleading their parents for the chance to hash out the mechanics of sexuality. She knew better, of course. Their intentions were less about gaining insight and more about hearing the gory details.\n\nWell, what did you expect? Three sons born from three demons. Of course they're going to be curious.\n\n\"You promised you'd tell us,\" Mirak chimed in.\n\n\"We did, and we will. But not at the table.\" Silthos' answer stopped the conversation cold.\n\nHer sons sulked, staring at their plates of food with disappointment.\n\n\"Speaking of sex,\" Darrow perked up. \"Guess who's found a potential bride.\"\n\nHer gaze snapped to him, eyes widening with shock. \"Lucifer? Really?\"\n\nHer lover nodded. \"There's a rumor that a family bartered their daughter off to him in exchange for being wormed into English royalty.\"\n\nHe had her attention now. \"What do we know about her?\"\n\n\"Darrow shrugged apologetically. \"Not much. She's supposed to be gorgeous, but no one's actually seen her yet.\"\n\nHer attention was now fully on Darrow. The fact that Lucifer had found a possible candidate for a lover gave her an enormous sense of relief. At least now he'd have something else to glare at.\n\n\"Mom-\" Falgon started.\n\nShe held up her hand. \"Just a minute. What's her name?\"\n\n\"Michelle Harlowe. She's from Phoenix, I think.\"\n\n\"How old is she?\"\n\n\"Supposedly, she's just turned nineteen. She's a virgin. Her parents made damn sure of that.\"\n\n\"I'll bet,\" Silthos snorted. \"Sending used merchandise off to Lucifer is suicide.\"\n\nShe made a face and returned her stare to her plate of food. The poor thing. She'd be stuck with that horrid fallen angel for eternity, a fate far worse than death itself.\n\n\"You think shell be alright after marrying him?\" she mutter at her food.\n\n\"I think she'll be fine. Lucifer may be a little stubborn and aggressive, but he's got a weak spot for being cherished.\" Silthos muttered through a mouthful of bread.\n\n\"Really?\" She stared at Silthos now, stunned.\n\n\"After the fallout with his father, all he really needs to keep him under control in is a little TLC. Michelle's supposed to have a heart of platinum, she I think he'll get all the loving her needs.\" Darrow smiled at her.\n\nShe smiled back. Taking another bite of food. \"Well...I guess I wish him the best of luck.\"\n\n\"Same,\" Thaltos chimed. \"The calmer Lucifer is, the happier the rest of us are.\"\n\nDamn straight.\n\nThey ate in relative silence, the quiet only punctuated but her son's relentless questions about nothingness. Her lovers answered to the best of their ability, trying to placate their sons until dinner was over. If they could be kept calm until then, they could release all that pent-up energy with a good wrestling match. At least, that's what Thaltos had promised them.\n\nBut Claire's thoughts wandered elsewhere, focusing on Lucifer's new bride. She wondered vaguely how the girl must be feeling about her soon-to-be life. Surely she knew who she was marrying and where she was going. Claire remembered being frightened when her lovers had first come to claim her. But to know you're marrying Lucifer... the poor girl must be terrified.\n\nMaybe I'll get a chance to meet her once she comes down. She might need a friend or two after consummating that union. Maybe she'll even come to like it here.\n\nShe smiled to herself, watching out of the corner of her eyes as her lovers laughed and joked with their sons.\n\nAfter all, hell isn't all that awful.\n\n* * *\n\nAnd there we go. Claire's story finishes with a happy ending, three children and the prospect of a new queen.\n\nFor those of you who asked for a story about Lucifer's love life, I've already set up the next plot for you. Miss Harlowe's tale will be the next series.\n\nOnce again, thanks so much for your support and love. I've had a lot of laughs, tears and screaming sessions writing this series, but it was all worth it. I sincerely hope you enjoyed it as much as I did. "
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/gravedancer"
}