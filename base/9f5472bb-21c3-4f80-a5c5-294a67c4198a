{
    "title": "Locked In",
    "pages": [
        "Amanda flattened herself against the wall, ducking out of sight of her quarry. This was ridiculous. This isn't who I am, I swear. Amanda was the sane girlfriend: she respected boundaries, didn't go through her boyfriend's phone or messenger, didn't stalk him on social media, and didn't warn other girls to 'stay away from her man'. She was an enlightened, open-minded, twenty first century girl. But god this was driving her crazy. She had to know.\n\nShe had been dating Jacob for three months, and it was mostly great - really great, actually. He was sweet and sensitive, tall and good looking, fun loving yet oddly intense. He was also hot, with a tall, muscular build despite eating twice as much as a normal person and doing no discernible exercise (apart from an hour of yoga per day). His dark-brown hair was shoulder length and kept tied in a ponytail (great to grab onto during sexy times), and his eyes were a cool, complex blue, so subtle and mysterious that she could lose themselves in them - which she often did, to his embarrassment. His adorable, red-faced embarrassment.\n\nShe was no slouch herself, of course: a five-foot ten bombshell, with a subtle hourglass figure tempered by lots of exercise, generous d-cups, and long, lustrous black hair. Her green eyes were bright and inquisitive, and often captured the attention of guys, just as they had with Jacob. On top of her killer body, she also had a great personality - engaging, outgoing, understanding - affectionate without being clingy. Well, until now. She was a capable, independent woman and a fun-loving, easy-going girlfriend. She knew she was - and Jacob seemed to agree. All in all, it was going great.\n\nThere was only one problem: his monthly appointments. While she and Jacob were quite intensely into each other, they still did their own stuff. She liked running, rock climbing, and going to the cinema, while he liked to read and play games with his friends. They spent plenty of time apart, so she hadn't picked up on the fact that, a couple of nights a month, always around the same time, he would be... unavailable. She might not have noticed it if it hadn't been for a text she received from Stacey, her most gossipy girlfriend.\n\nJust saw Jacob heading thru town into the old ind. estate. He get a job there?\n\nAmanda had frowned. Jacob had told her that he was going to a gaming night with some friends that day - something first person shootery, she thought. Whatever it was, they sure as hell weren't playing it out on the old, half-abandoned industrial estate on the edge of town. Once a district of bustling, smoking factories, the place was now mostly uninhabited, only a scattering of rusting warehouses seeing any use.\n\nShe had asked where he had been, after last month, and he had 'reminded' her that he had been gaming with some friends. \"Oh, yeah,\" she had said, as if she had just forgotten. When she'd noticed the bruises on his back during their (admittedly very energetic) lovemaking that night, she hadn't said anything. But when next month rolled around - October, the heart of the autumn season - he had responded to her suggestion that they go to a costume party with \"oh, uh - I said I'd hang out with the guys that night.\" She had been annoyed enough that her need to know had surpassed her need to be a respectful, modern girlfriend.\n\nHer best theory was a kinky sex thing. It had to be, right? Sneaking away to an abandoned area full of derelict buildings for a night, coming back looking tired and covered in bruises, yet somehow ready for a romp in the sack? Amanda wasn't a prude - she had experimented with BDSM during her university years, after being introduced to it by her boyfriend of the time - who liked to be tied up and spanked, she had been shocked to discover. Jacob didn't strike her as someone who liked to be dominated - still, how could you tell? There were lots of stories about powerful, wealthy business executives paying top dollar for an evening where they didn't have to think about anything except pleasing the mistress.\n\nOver the next month, she had dropped some subtle hints. Maybe she might be open to trying some stuff. She understood that you couldn't always get everything you needed from one person. How did he feel about open relationships? She had got no useful answers, and his calm, solid demeanour had made that lack of answers even more frustrating. So here she was, acting like the classic overly-obsessed girlfriend meme, sneakily tailing her boyfriend to find out where he was going. When she finally found out what was going on, she knew she was going to be absolutely mortified, filled with shame at invading his privacy. Until then, though... she just had to know.\n\nHis fast, easy pace eventually brought him to the front of a factory. She watched him, crouched down in the mouth of a nearby alley, as he slipped inside, pulling a board away from the window and ducking under it into the dark building. She frowned: she had expected a converted building, something subtle with bands of light slipping beneath blackout blinds - the perfect place for some professional-level kinkiness. This place, though, was manifestly empty: the door and most of the windows were boarded up, and the few that weren't gaped empty and dark. If this really was some kind of kinky sex club, it wasn't a licensed one - there was no way this crumbling, piece of shit building would pass a safety inspection.\n\nOptions ran through her mind. Maybe it was a... less legitimate sex thing? Or something else - drugs, maybe? Did Jacob have an addiction problem? She'd never noticed any signs like that, no track marks, jitters, or vanishing pupils in his eyes. She stared at the building, weighing whether she should go in. It could be dangerous. Worse, she might put both herself and Jacob in danger, especially if there were gun-toting drug dealers or something in there. On the other hand...\n\nShe slipped across the street, pulling aside the board that Jacob had left to fall closed behind him.\n\n<hr size=\"2\" align=\"center\" >\n\nIt didn't look like there were any drug dealers inside the building - it didn't look like there was anyone inside. The thick carpet of dust only had one set of footprints leading through it - Jacob, with his heavy boots and long, rangy stride. Using the light of her phone, Amanda followed the impossible to miss trail, across an empty office space, to a set of stairs that went down.\n\nShe eventually caught up with him in the basement, pausing to absorb the weird scene before her. It looked like this might have once been some kind of boiler room; now, a small generator was humming in the corner, thick cables leading to a fold-out picnic table, where a battered but functional laptop had been set up. More wires connected the laptop to a set of speakers, and to the locking mechanism of a heavy metal door. Jacob's clothes were neatly folded on a picnic chair to one side, with his wallet, keys, and phone resting on top of them.\n\nBeyond the door, which swung gently inwards on its hinges, was Jacob, busying himself in a large, dead-end room. As she crept softly up to the door, she took it in - cold concrete walls covered in long scratches, a single yellow light bulb, a large stained mattress on the floor. That seemed to be it, apart from Jacob - butt naked, of course. He was humming to himself as he dragged the mattress over to one corner.\n\nAmanda leaned against the door frame and gently cleared her throat; Jacob jerked like she'd just put a cattle prod to him, spinning to face her with mouth gaping. His hands automatically went to cover his crotch - as if that mattered.\n\n\"Manda!\" he choked.\n\n\"So,\" she said, with her best attempt at nonchalance. \"This is... a place. Where you are.\"\n\nHe stepped forward, grabbing her by the shoulders, attempting to push her back out of the room. \"You need to go - now!\"\n\nShe instinctively dug her heels in, pushing back against him. She did not appreciate being manhandled. Well, not outside the bedroom, anyway. \"No, you need to tell me what the fuck is going on!\" she snapped. \"I thought you were into some freaky sex stuff, but you're - what? Is this your drug den? Are you a devil worshipper? What the actual fuck, Jacob?\"\n\nHe looked desperately around, licking his lips. \"Look, I'll explain everything if you want, I promise. Just not now. Tomorrow - we'll talk tomorrow.\"\n\n\"We'll talk right the fuck now!\" she raged. \"Whatever it is, I won't judge, I just want to know! I get your need for personal space, but I don't like secrets, Jacob! Especially when they're...\" She gestured around the cold, empty room with its single mattress, and complete lack of both needles and prostitutes. \"Weird,\" she finished.\n\n\"You wouldn't - it's... complicated,\" he said, lamely.\n\n\"I don't fucking care if it's complicated!\"\n\n\"And it's bad,\" he said, in a small, tense voice.\n\nThere was something heavy, something dark, in his tone, but in her frustration she missed it completely. \"I don't give a fuck how bad it is, either!\" she pressed on, her voice filling the small room. \"I love you, Jacob, and whatever it is, we'll -\"\n\nShe stopped, staring at him. He was staring back at her, wearing a shocked expression she was sure mirrored her own. Despite the weirdness of the situation, the obvious caginess of Jacob's whole deal, whatever it was, she felt herself blushing. They hadn't gotten as far as the L-word yet. She hadn't thought so, anyway. Huh. The things you learn, right?\n\nThe moment was spoiled when Jacob suddenly gasped, his body spasming and folding like he'd been kicked in the stomach. He staggered back from her, doubling over in obvious pain. \"Jacob!\" she cried in alarm, stepping towards him.\n\n\"Get back!\" he snarled. She blanched and stepped back. It was rare that she saw Jacob get emotional, and she had never seen him quite that emotional. She wasn't sure whether it was anger, or fear, or something else, but it was definitely something. \"Get out, close the door, run!\" he gasped. He dropped to his knees, clutching his body with his hands.\n\n\"Jacob,\" she begged, stepping forward again. \"What is it? Whatever it is, I can help, I -\"\n\n\"Can't... help...\" he panted. \"Just... go... close... the door...\"\n\n\"Jay!\" she begged, touching his shoulder.\n\n\"Just fucking go!\" he roared. He lashed out, shoving her back as hard as he could. The force was almost enough to lift her off her feet, and she flew backwards, slamming against the cold metal of the door, dimly noting a clunk behind her. She slid down, stars dancing in her vision following the blow to her head.\n\nShe wasn't... entirely sure what she was seeing. Maybe she was hallucinating. Maybe the head injury had knocked her out and this was a nightmare. Or maybe it had knocked her out more, she was in some kind of coma dream. These were all much more likely, and somehow much more preferable, to the possibility that what she was currently seeing was real.\n\nIt started with a stomach churning crack, exactly like the sound of bones breaking. Jacob was staring, panicked, wild eyes flickering between her and the closed door. As she stared back, his body began to itself. With a series of cracks and pops, his arms and fingers lengthed, dark hair sprouting from smooth skin. The hair appeared in a wave, rippling up his arms and across his shoulders, down his back and over his chest. Wherever it went, bones snapped and reformed, skin stretching and darkening: his chest expanded, and his stomach was pulled taut and concave as his spine lengthed, stretching out his body. The wave continued expanding down his legs, forcing him forward as his hips, thighs, calves, and feet all changed shape. As the wave of fur crawled up his neck, his mouth worked, as if he was trying to gasp out one word.\n\nThen the wave of coarse, brown hair flowed across his face, his skull cracking and bulging, forcing his eyes closed and erasing the last trace of humanity. Jacob was gone.\n\n<hr size=\"2\" align=\"center\" >\n\nAdrenaline surged through Amanda's body, ancient fight-or-flight instincts jerking her up onto her feet. She spun and tried to wrench the door open, but found that there was no door handle. There was a small, glassless window though, through which she could see the screen of the laptop. It was now showing a black screen, with a set of numbers. It looked kind of like a clock. If those were seconds, and those were minutes, then...\n\n\"Fuuuuuuuuuck,\" she breathed. Nine hours, twenty minutes, a handful of seconds. She recalled the wires leading from the laptop to the door's lock. The bulky, heavy, very solid looking lock. \"Fuck,\" she said again. With a faint crackle, soft music started to hum from the speakers, a soft tinkle of classical piano.\n\nBehind her, she heard a low growl. It was not a sound a human could make: it was deep and resonant, something like a tiger's rumbling snarl. Slowly, muscles twitching, she turned around.\n\nWhere a naked Jacob had been, there was now... something else. It was still broadly humanoid. Coarse brown fur, the same colour as Jacob's hair, covered its entire body. It's arms were long, as were its fingers - each tipped with a long, black claw. The shape of its legs had changed, the foot lengthening, the ankle becoming almost like a second knee and forcing it to move digitigrade. It was bigger, wider, more muscular than Jacob was. But it was the face that held Amanda's attention: covered in hair, the front of his face had bulked out into an animalistic snout, filled with the sharp, pointed teeth of a carnivore. Jacob's rounded ears had become large, pointed animal ears, although they remained on the side of his head. There was no humanity left in that face. She didn't want the thing to open its eyes, to see what might have replaced Jacob's hypnotic baby-blues. Her fingers continued to scrabble at the door behind her, still trying to find purchase she knew wasn't there.\n\nThe thing shuddered and took its first long, deep breath. Then, it opened its eyes, saw her, and snarled. Jacob's blue eyes had been replaced by vivid crimson ones, burning with inhuman intensity. She shuddered in revulsion as it raised its head and sniffed the air, nose twitching and nostrils flaring. With a bellow, it threw herself at her.\n\nAmanda dived to the side, depending on her small size and (hopefully) superior agility to escape. The creature soared over her, slamming its full weight into the door, making it shudder. There was a moment of hope - maybe I can do this! she thought - and then it turned, slinking across the short distance she had managed to create with unnatural speed, and landed on top of her, limbs splayed and powerful muscles contracting so that it landed almost without a sound, despite its bulk.\n\nShe flopped onto her back, looking up into its scarlet gaze, as it loomed above her. It held itself low to the ground, weight distributed evenly and easily between its four powerful limbs, and the whole insane situation somehow felt almost... tender. Like Jacob was still above her. She could feel the burning heat of its body, even through her jeans and jacket, and its earthy, powerful musk filled her nose and throat.\n\nSlowly, unhurried, it lowered its head towards her, muzzle opening to reveal a maw of hooked teeth. She saw the back of its throat as it lowered its open mouth over its head, and began to close its terrible jaws.\n\nTime seemed to slow as adrenaline flooded her system, lightning crackling through her brain as she tried to figure a way out of this. There was no way she could overpower it, that was clear. It was far faster than her, as well. It was a ruthless, unstoppable killing machine - a true, impossible, yet impossibly real predatory monster. She had no doubt that if she didn't do something right the fuck now, she was done - it would crack her skull open like an egg and lap up whatever spilled out. A strange thought bubbled up in her brain, perhaps sparked by the thought of it being Jacob above her. It was a single, desperate Hail Mary that seemed insane, even as she immediately acted on the thought: it might be a monster, but maybe it would still be a boy monster.\n\nShe slipped her hand down, rubbing against the coarse fur of its belly, seeking out any sign of something she might be able to use to earn her life. The beast stopped, the points of its teeth pressed against her skin, as her hand pressed against a warm, sparsely furred part of its anatomy, approximately between its legs. She left out a breath she hadn't realised she'd been holding, as it lifted its head, closing its maw to stare down at her. She licked her lips nervously.\n\n\"Do you like that?\" she asked in a shaking voice. \"Is that nice?\" She pressed her hand against it more firmly, rubbing it in gentle circles. A deep, rumbling growl rippled through the creature's body, so powerful that she could feel it vibrate the air around her - it was like standing next to the base speaker in a club. She tensed, certain that it was about to tear her apart. Instead, she felt a shift beneath her hand.\n\nThe area she'd been stroking distended and opened like some kind of pouch, and what was unmistakably a hardening penis flopped out. She sucked in air as a little tension eased out of her. She had no idea how long she could keep this going, but so far, she'd lived about thirty seconds longer than she would have, so... let's see how far I can push this, she thought.\n\nShe wrapped her hand around it, feeling it gently throb and twitch against her palm. It was bigger than Jacob's, but not the cartoonish monstrosity she might have excepted: while Jacob was slightly above average in terms of cock size, the Jacob-thing felt about nine inches, slightly thicker than Jacob, but still not as big as some she'd seen in internet porn. It grunted as she slid her hand up and down, crimson eyes flickering slightly at the sensation.\n\n\"There, that's nice, isn't it?\" she heard herself say, voice wavering. \"No need to stop, we can keep doing this for as long as you want. No need to, to -\" she swallowed, \"- eat anyone, or anything.\" Her hand worked gently up and down, feeling the skin shift along the throbbing muscle underneath. Some of her more conservative friends had once told her that she was a slut for taking guys out into the back alleys behind clubs and giving them handjobs; she was suddenly silently and intensely grateful for not taking their words on board.\n\nWith a growling moan, the thing began to thrust its hips, pressing itself into her hand. Werewolf, she thought. Call it what it is. Not that it looked particularly wolf-life, but... what else was she supposed to call it?\n\nIts thrusting quickly grew more needful, as it chased that elusive rush of pleasure that it's body knew was waiting. Amanda slowed her motions, easing off on her grip, trying to prolong this period of time where it was almost certainly not going to kill her. What she got in return was a growl - a long, low, threatening noise that rattled her teeth. \"Okay okay,\" she said hurriedly, returning to her firm grasp. \"Everything's okay, we're all just feeling good here.\"\n\nShe could hear it panting as it thrust, movements become more frenetic and powerful. She didn't know what it would do after it had... well, after, but she had a feeling that it wasn't a creature that liked to be teased.\n\nAfter only a couple of minutes, its entire body tensed - she could see it, the powerful, deadly muscles of its arms and chest rippling with strength. Its hips were almost a blur now, and she had to brace her elbow against the floor to give her enough leverage to push back against its weight, maintaining the firm grasp it seemed to like. It let out a long, rumbling growl that filled the room, and she felt it pulse in her hand. A moment later, she blanched as semen spurted onto her - a large load of steaming, sticky white that covered her pelvis and stomach, although thankfully her light leather jacket took most of the brunt. Still, she could feel the heat of it even through two layers - it was like being splashed with hot water.",
        "After the last few pulses, the creature collapsed, rolling off her and to the side to lie, panting, on the cold concrete floor. She gently took her hand away from its penis - dark and red and still semi hard, she could now see - and very carefully started to shuffle away.\n\nA low, warning growl froze her in place. The creature opened one eye, staring at her. \"Everything's fine,\" she breathed. She gently reached out and rubbed her palm against its stomach again, a little above the opening its penis was currently hanging out of. \"I'm not going anywhere. Just here, making you feel good. See how good that feels?\"\n\nShe continued to, for want of a better word, pet the creature, sliding her hands anywhere she thought an animal might like. It liked having its belly rubbed, she found, rolling more onto its back so that she could caress and scratch it. It also liked its chest rubbed, and its head and ears played with. Arms and shoulders were a definite no-no as it turned out, the creature's snarl and bared teeth causing her to quickly go back to the safety of its body.\n\nAfter a while, the creature seemed to have come down from its post-orgasm high, and it rolled back onto its feet with an easy, fluid motion. Amanda tensed, but it no longer seemed to be interested in eating her; instead, it wandered off around the small room, snuffling around the mattress and into the corners. It moved with an odd gait, long legs folded up, long arms stretched out like a gorilla's. She already knew, though, that the strange proportions of its body would not slow it down.\n\nShaking, Amanda crawled, crablike, backwards, until she could settle her back against the reassuringly solid concrete. This was fucking insane. Her boyfriend was a werewolf, and now she was trapped in a room with him for nine hours and change. She had no doubt that if she hadn't, so to speak, pacified the monster, it would have killed and eaten her. As it was, the thing seemed calm enough, for now, but how long would that last? Having emptied itself all over her, would it now get hungry, and start looking at her as a post-coital snack? And if so, would the same trick work again?\n\nShe ran her fingers across her jacket, rubbing the thick, white seed between her fingers. She could still feel its heat - semen, in her experience, cooled very quickly, even on skin, but this was still warm. It was thicker than Jacob's usually was, as well. She wondered what it was made of.\n\nHer attention was drawn to the other side of the room, where the creature was stretching like a cat, the bones of its limbs and spine cracking. Then, it settled down on the mattress, and seemed to go to sleep. Amanda leaned her head back against the cool wall, not daring to move in case she woke it up. The lulling rhythms of gentle music slipped into the room through the gap in the door.\n\nTen minutes or so down - nine hours to go.\n\n<hr size=\"2\" align=\"center\" >\n\nIf anyone had asked her, Amanda would have said that the chances of her falling asleep would be nil; once that life-preserving surge of adrenaline had petered out, however, she conked out like a light, body and mind throwing their collective hands up and shutting down for a while.\n\nShe awoke an uncertain amount of time later, stirred by a sense of movement in front of her. As her mind quickly recapped her last memories, her body once again flooded with adrenaline - that good old all-natural wake-up juice. Her eyes jerked open, and froze as she saw the creature looming over her. She struggled to work her seized-up throat so she could speak. \"Uh, hey. Ready for round two?\" She did her best to... look sexy, maybe? She didn't know what she was doing here, but she thrust her chest out slightly, doing her best to show off her breasts. Jacob sure liked them - she hoped that his furry alter-ego had the same taste in body parts. Nope! She rapidly tried to scrub the words taste and body parts from her mind.\n\nThe creature hunkered down and began to sniff at her, nostrils twitching open and closed as he inhaled her scent. He nosed up her legs, moving from one to the other, the natural channel of her thighs inevitably leading his nose to her crotch. She instinctively tried to close her thighs against the intrusion, earning a growl. She froze, not knowing whether to laugh or cry. Unusually deep and resonant though it was, she knew that frustrated growl - it was exactly the noise that Jacob made when she teased him, usually by rubbing against him then rolling away, or holding her body just out of easy reach. \"Okay okay,\" she said, gingerly opening her legs again. \"Sniff away, I guess.\" The monster buried his head between her legs again, inhaling deeply, and she gasped. Fucked up as this situation was, his proximity and obvious interest in her more intimate parts was generating a certain... reaction in her.\n\nThe Jacob-creature snuffled up her stomach, attempting to nose up under her jacket, and growled, the bassy sound vibrating her stomach and making her feel even more sick than the fear already was. He (when did she start thinking of it as a he?) lifted one hand from the floor, fingers flexing and claws shining, and then raked them across the soft leather, shredding it like paper. She gasped as a sharp pain lanced through her side, his claws having sliced easily through her jacket, t-shirt, and the soft skin of her stomach. She wriggled against the wall, trying to get away from him, earning another growl.\n\n\"It's okay, it's okay!\" she assured him gently. \"Look, I can just take it off, see?\" He watched as she struggled out of the remains of her jacket, gritting her teeth as the motion pulled at the wound in her side. She really hoped the scent of blood wouldn't drive him into a shark-like killing frenzy. When she was done, she tossed the jacket away, spreading her arms to highlight her body, now only covered by a soft cotton tee. \"Easy,\" she told him in her lightest voice, trying to ignore the growing patch of damp warmth against her side - my blood, she thought numbly. I'm bleeding.\n\nHe went back to snuffling, pushing his snout up under the material to get at her bare skin. \"Good boy,\" she said, despite herself. Just stay nice and calm, she thought. A rippling growl rumbled through his body when his nose brought him to the shallow scrape on the side of her stomach. She felt a long, hot tongue lick across it.\n\n\"No!\" she snapped, pushing his head away. \"No eating!\" He growled as she shoved his head out from under her shirt, red eyes narrow and dangerous. \"It's okay, it's okay,\" she said hurriedly. \"Want a tummy rub? Another handjob? Anything to make you feel good,\" she cooed desperately, running her hand down the thick fur of his chest to his stomach. The angle made it impossible to quite reach the pouch that contained his cock, but her familiar touch seemed to mollify him, and he went back to snuffling around her hips and thighs. She relaxed slightly, grateful that he wasn't going full-on jaws.\n\nShe tensed when his hand came up again, the tips of his nailed gently plucking at the denim fabric of her jeans. If he unwittingly sliced into her leg, she knew, she might be in trouble - especially if he hit one of the main blood vessels in her thighs. \"Okay,\" she said quickly, unsnapping the belt and pushing her jeans down over the swell of her hips. She awkwardly wiggled one leg out, then pulled them off the other and tossed them after her jacket. \"See?\" she said. \"Nice bare legs. You like that, don't you?\"\n\nIt seemed he did. He went back to smelling her, cold, wet nose tickling along her legs and inner thighs. He even licked her, a six inch long tongue, wet and so hot that it almost felt like it might burn, running across the cool skin of her thigh, getting the taste of her. And, of course, he paid lots of special attention to her crotch. If the situation weren't what it was, she might even be flattered or a little turned on. It might create a little warm rush of arousal between her legs, the thought of this savage beast being drawn in by her womanly sexuality, her body taming his savage -\n\nHer cheeks flushed as his nose snapped back to her panties, sniffing deeply. Fuck, this situation was affecting her. He began to nose more forcefully, pressing his snout against the white cotton (god, I'm going to die in white cotton panties, she thought hysterically). The pressure undeniably felt good. That was probably a bad thing, she reflected. \"That's enough,\" she snapped, pushing him away. Again that low, frustrated growl - and she could see him bristling, the thick hair across his shoulders standing on end. \"It's okay,\" she said, as soothingly as she could. \"How about another handy? Would like that, hmm? You want me to stroke you again?\" Her hands fumbled down his chest and stomach, seeking out his arousal.\n\nBut he didn't seem interested in that right now. He pushed his head against her again, nosing her wet pussy (god, I'm actually wet). When his powerful, clawed hands came up again, she was almost expecting it, and she quickly wriggled her panties off, leaving her bare naked from the waist down.\n\nHis response was immediate: he licked her, burning hot tongue sweeping easily over her labia and clit. She gasped and whimpered, her body shuddering from adrenaline, barely suppressed terror, and a growing physical desire that she really didn't want to be feeling. If the creature noticed, he didn't react, instead focusing all of his predatory, laser-thin focus on her body. His tongue, long and hot and rough, lapped at her sex over and over again - long, languid licks from the very bottom, the tip of his tongue touching the concrete floor, up over her lips, her clit, through her bush (a small, insane part of her mind wished she had shaved before coming out here) onto her lower belly - then back to the bottom to start again. It was artless but honest; the simple, obvious hunger for her, as well as the sheer length and heat of his rough tongue, more than made up for the lack of precision and practise. With every lick, a full six inches of wet, prehensile muscle rolled right over her clit, sending judders of uncontrollable pleasure rippling through her body. The low burn of adrenaline and fear, far from killing the mood, only added a sharp edge to her pleasure. Her spinning mind recalled the tension of her teenage years, fooling around with boys in her room, the threat of sudden parental intrusion hanging over them, excitement and danger making a hot situation hotter.\n\nShe didn't know how long she lasted - barely minutes, she thought - before she was completely overwhelmed. She rolled her head back and squeezed her eyes shut, clamping her jaws down on the sounds that wanted to come scrambling out of her throat. Deep, rolling waves of ecstasy washed through her body, radiating outwards from the small, burning nub of sensation that lay between her lips. Over and over again his tongue lapped at her, extending the wash of pleasure that made her body shake and shiver. The waves washed away the strangeness of the situation, narrowing the thoughts racing through her mind down to one repeating mantra: Fuck, that's so good.\n\nEventually, she came down, shaking and shivering, sucking in cool air like it was going out of fashion. Whatever noises of pleasure that managed to escape her lips didn't seem to have phased the beast, who was now licking her thighs, as if trying to catch up any drops of her juices he had missed. She panted, gazing down at him.\n\nEventually, he seemed to grow bored with her thighs, and started moving upwards, nosing his snout back under the thin fabric of her t-shirt. She didn't even bother to wait for his hands this time, simply pulling the garment over her head, unsnapping her bra, and hoiking both items in the direction of her jacket and jeans. Now she was completely naked. \"Happy?\" she asked archly. \"You've covered me in werewolf cum, stripped me down, and licked me until I almost blacked out. And sliced me open,\" she added remembering the cut on her stomach - which wasn't there anymore. Her eyes widened as her fingertips instinctively brushed against the area where the cut had been, only to find that it was gone. She looked down to where she was sure his claw had sliced her, running her fingers over the unbroken skin. There was a long, thin, white scar that she hadn't had before, but that was all. When had it stopped hurting? The last time she remembered even thinking about it was when he had licked it, at which point she had panicked and tried to reason with him, after which... things had happened.\n\nIn a moment of insane panic, she shoved her hand between her thighs, madly wondering if his magic tongue had sealed up the openings down there, as well - but all seemed to be normal. Well, apart from the warm, glowing feeling left from the recent orgasm her werewolf boyfriend had given her. That's the weirdest sentence I've ever thought.\n\nShe huffed, sitting back against the wall. The creature was now hunkered down on all fours, staring up at her like a dog. \"What?\" she said. Still, that scarlet stare. She sighed and stood up, stretching her legs as she walked towards the mattress - might as well be comfortable. The beast followed a few meters behind her, moving slowly and carefully, keeping himself low - almost like he was trying to be non-threatening. He didn't automatically snarl when she moved anymore.\n\nWhen she flopped down into a sitting position on the stained bed, he crawled up beside her, snuffling at her neck. The touch of his cold nose sent little shivers down her spine. She almost laughed when, like every man ever, his attention rolled over her shoulders and down her chest. \"Fine,\" she said. \"Why not. You've licked everything else.\" She shuddered in pleasure when his long tongue reached the sensitive skin of her breasts, and whimpered when they reached the hard buds of her nipples - his tongue was so hot, and such a weirdly delicious counterpoint to the cold air of the concrete room.\n\nGlancing down the length of his body, she could see that he was excited again, his deep red cock protruding from its protective pouch. It throbbed and twitched rhythmically, maybe in time with whatever heart was now beating in his hairy, muscular chest. She bit her lip as his snout started to move downwards again, no doubt tracing the scent of her arousal back to its source.\n\n\"Okay, fine!\" She gave in, lying on her back and spreading her legs, letting his long, hot tongue lap at her honey pot. It was, if anything, better than last time: now that she was lying instead of standing, his tongue curled around under her body, brushing almost against the tight entrance of her rear end, before rolling around and up over her pussy and clit. She relaxed into it; as long as he was licking, he wasn't biting. She tensed up at that thought - god she didn't want to die getting her pussy chewed out. The pleasure of the next lick erased the thought from her mind. Fuck he was good at that.\n\nLike last time, the pressure built up and up, growing in her belly until she couldn't contain it anymore. The orgasm surged outwards from her pussy, and it felt like her entire body was pulsing with it. The constant, steady attention of his tongue drew the short, hot pleasure out, giving her what could have been several climaxes, or one long one. When it was over, she slammed her thighs shut, shaking and panting. Another tense growl sounded, and she felt his wet nose snuffling up her body, ending at her face. She could feel his hot, hard dick pressing against her, rubbing needily against her hips. She wondered if that was a deliberate signal.\n\n\"Jesus, fine,\" she gasped, opening her legs again. He didn't react at first, continuing to growl, hips twitching, rubbing his erection against her. \"Oh for - duh,\" she said, turning over onto her hands and knees. Of course it would be doggy style, she thought. He snuffled, licking between her thighs again, and she gasped and shuddered as his strong, searching tongue swept up her pussy and then pushed into her, immersing itself in her sex. \"Fuuuuuuck...\" she moaned. It was bigger than some cocks she'd had, and a hell of a lot more flexible. It flicked around inside her, and she felt like he was caressing the walls of her pussy, trying to lap up as much of her juices as he could. She felt his hot breath against her labia, rolling up between the cheeks of her backside and down over her stomach as he literally fucked her with his tongue, sliding it in and out of her, stirring it around inside her. She gave out a whimper as her arms gave way, and she crossed them in front of her so that she could press her face into something other than the stained mattress. She moaned and grunted, shuddering as his tongue slid hungrily in and out of her body. Finally, with a long, loud moan, she came, her body shuddering.\n\nAs she led there, panting and shaking, his tongue slipped out and up (she shook again as it slid between the cheeks of her rump, rubbing against her sensitive opening), then moved up her back with a series of quick, hungry laps and licks. Before she knew it, he was right behind her, his powerful arms (or... forelegs?) next to her hands, his burning hot, furry body pressed against her. She shivered as his hair tickled her back. His hips were still twitching, bumping his throbbing cock against her buttocks and thighs without direction; a low, needy growl sounded in her ear. Idly, a small part of her mind wondered if the Jacob-creature had ever had sex before.\n\nWith a deep breath she reached back, grabbing his throbbing cock and massaging it gently; the growls intensified, his hips almost bucking with need now. He guided his head to her entrance. \"Gently...\" she whispered.\n\nIf he heard or understood, he ignored her. As soon as he felt the heat of her aching pussy against his glans, he pushed forward with a snarl, slamming his hips into hers. She cried out, the powerful thrusts driving her face into the mattress. For the first second or so, it really fucking hurt. She'd had her share of men, but the creature was among the biggest, and he didn't go gently - he pounded into her, and it felt like every fibre of muscle in his powerful, predatory body was hell bent on fucking her. The pain only lasted a moment or so, however: she was already so wet and ready from the multiple orgasms he had given her, that her body quickly adapted to him. The pain faded, and a throbbing pulse of pleasure took over.\n\nShe had made love before, and she had had sex, and she'd certainly fucked, but this - this was something else. The thing that Jacob had become didn't do gentle or self-conscious; it was worried about being seen as a man, about frightening her away, or about dating morals or mind games. His body was built for hunting and, she was increasingly convinced, fucking. His thrusts were deep and powerful, his panting breath hot on her neck. He didn't react to the smell of blood like a shark - but he sure as hell had reacted to the scent of her arousal, like her horniness had infected him.\n\nAmanda's first crashing orgasm shot through her like a cannon shell: his hips were the cannon, slamming into her and sending the overwhelming pulse of ecstasy right through her body, smashing the breath from her lungs. She vaguely noted that his hips had stopped momentarily, his cock buried into her up to the hilt as her walls pulsated and twitched around him. She wondered if he was done, if he had cum while she was too distracted by her own orgasm to notice. He had not; as soon as the hard edge of her pleasure receded, he started to move again, cock pistoning in and out of her as she rubbed her clit in hard, desperate circles. It all overwhelmed her: the burning heat of him, inside and above her, the sound of his panting growls, the rich, earthy smell of his musk, the feel of the mattress below her and the cool air on her skin. She came again and again; she lost count at three, but thought it might have been seven or eight - even as much as ten. Eventually, she noticed that when she came, he didn't stop, instead continuing to frantically piston his hips, slamming into her like a freight train. She knew he was close, and some part of her felt that the thought of this inhuman beast - this thing that Jacob had become - cumming inside her should have filled her with disgust. Instead, it only triggered some kind of dirty, kinky part of her that she'd never known was there, pushing her over the edge into one final, earth-shattering orgasm.",
        "This time, he came with her. As she arched her back and threw her head up, screaming in overwhelming pleasure, he threw his own head back and howled - a long, inhuman noise, like a wolf's howl, but with a rumbling, bassy undertone that vibrated from his body and into hers. She felt his large cock pulsing and twitching, filling her with semen, as he made that huge, room filling noise.\n\nFinally, her limbs gave out completely, and she collapsed onto the stained mattress, shuddering, sweating, panting in long, shaky breaths. She could barely see or feel - she was beyond exhausted. She couldn't recall anytime a guy had actually fucked her to sleep, but she thought the beast might have managed it - she certainly couldn't think of doing anything else now. As she fell, the beast had come with her, cock still buried in her pussy, twitching slightly. She couldn't help but giggle weakly as he licked her shoulders and face - it looked like men of any species got affectionate just after. As he shifted, his cock stirred round inside her, spreading his semen. She could actually feel it pooling inside her, it was so hot.\n\nEventually, he gently pulled out of her, and she weakly rolled over onto her back, eyelids heavy, blissed out on the post-orgasm endorphin rush. The creature settled down beside her; she was suddenly aware of how cold the room was, and she wiggled closer to him, snuggling her shivering body close to his warm one, like a furry radiator. Sleepily, he turned awkwardly around, eventually settling his head on her chest. Warm, full, and absolutely fucking exhausted, Amanda fell sleep to the sound of his deep, steady breathing, and the gentle sound of classical piano.\n\n<hr size=\"2\" align=\"center\" >\n\nAmanda woke up to the feeling of movement. She jerked slightly, her mind rapidly catching up on the unbelievable things that it was sure had happened last night. Was it real? How could it be? Had she really seen Jacob turn into a... thing? And she actually had sex with it?\n\nOpening her eyes, she was treated to proof: the same transformation, just in reverse. At some point in the night, the Jacob-creature had rolled off her, settling onto the heavy mattress next to her, and now he was melting. The fur receded, seeming to flake off his skin and crumble into nothing. The arm that lay across her waist retracted and reformed with a series of cracking, popping jerks. His face flattened, lips regrowing to cover the sharp teeth, which she knew would be gone soon. His ears shrank, his legs changed, and his torso seemed to collapse in on itself. In the space of about a minute, the creature was gone, and an exhausted looking Jacob was back. Then he opened his eyes.\n\nJacob jerked up, looking around the room in panic. Then, he grabbed Amanda by the shoulders, pulling her into a sitting position, and running his hands over her naked body. \"Manda!\" he choked. \"Are you okay? What happened? Oh god, I'm sorry Manda, I'm so sorry...\" He was openly crying, holding her arm tightly and examining it, as if trying to make sure that it hadn't been torn off without him noticing.\n\nAmanda wrapped her arms around his neck, pulling him into a tight hug as he sobbed, unleashing what felt like (and probably was) years of pent up fear and sorrow. He wrapped his arms around her bare chest and held her so tightly she could barely breathe, but she didn't pull away. Instead, she buried her face in his hair, tears welling from her own eyes. The events of last night aside, she couldn't imagine what it must have been like for him. How long had he had to live with this? This setup looked well established and intelligently designed. Had it been years? Had he been a boy or a man when it first happened? How long had he spent having to hide this awful secret, locking himself away every month, trying to cage and control the monster inside him?\n\nEventually, they both ran out of tears, and just sat there holding each other for a while. Then, Amanda took a deep breath, and broke the hug. \"How are you feeling?\"\n\n\"I'm okay,\" he hiccoughed.\n\n\"So I... see,\" she said, staring down at his lap.\n\nJacob turned bright red, clapping his hands over his erection, back to its respectable seven inches. \"I'm sorry!\" he blurted out.\n\nAwkward silence reigned for several seconds. Fucking say something, then, Amanda through to herself. \"Sooo... was it the naked hug, or...?\" She couldn't help it. If this whole situation weren't so fucked up, she'd think it was funny.\n\nHe hung his head. \"It's always like this,\" he said miserably.\n\n\"What do you mean?\"\n\n\"It's...\" He screwed his face up, searching for the words. \"It's the change,\" he said. \"After changing, it's - it's like a massive rush of energy. Like a huge dose of stimulants.\" Amanda thought back over the three months they had been together, how he had always been cheerful and energetic after these 'appointments,' ready for a long night of intense sex despite looking exhausted. She also thought about the beast, waking up in this cage, adrenaline pumping through his body...\n\n\"Ohhhhhh,\" she said, emphatically.\n\n\"What?\"\n\n\"Um.\" She turned, sitting cross-legged so that she was facing him head on. \"Okay, so... I really need to tell you something.\"\n\n<hr size=\"2\" align=\"center\" >\n\nHe stared at her. His face was no longer red; instead, it was white as a sheet. He could have been a corpse, or a ghost in an old TV program.\n\n\"You...\" he tried.\n\n\"Yeah.\"\n\n\"You and me...\"\n\n\"Uhuh.\"\n\n\"And then we...\"\n\n\"That's right.\"\n\nThe longest, most awkward silence yet, followed. Eventually, she began to shift uncomfortably; he was staring off over her shoulder, face expressionless and impossible to read.\n\n\"Do you hate me?\" she eventually asked.\n\n\"Hmm?\"\n\n\"Or, not hate me,\" she went on, \"but are you... disgusted by me?\"\n\n\"I... don't know,\" he said, as honestly as he could.\n\n\"Because I know it's probably the most fucked up thing that's ever happened in your probably very fucked up life, and it's the most fucked up thing I've ever done, but...\" she bit her lip. \"I... enjoyed it,\" she admitted, in a small voice. She stared at the mattress between them, unable to look him in the face. It was true; initially, she had only been concerned with survival, with somehow proving to the beast that she was better alive than dead. By the end though... she shivered, remember how she had got on all fours, willingly - even eagerly - presenting herself to be mounted. She remembered how, exhausted and satisfied, she had curled up beside him, the thought that he might eat her not even entering her head.\n\n\"This is... a lot,\" he said. She nodded mutely. \"Do you... hate me?\"\n\nShe looked at him in shock. \"What?\"\n\nIt was his turn to look away. \"I kept this huge thing from you. And, sure, I have no idea how I would have even begun to tell you, but... it's huge, and scary, and dangerous. I'm dangerous.\"\n\nShe tried to think of Jacob as dangerous; somehow, it didn't fit in her head. \"Have you ever... hurt anyone?\"\n\nHe gave a small shrug without looking at her. \"I don't know. When I was a lot younger, like - sixteen, maybe? I used to wake up in the fields. There were dead animals. I don't know if I ever... if anyone...\" If you ever killed anyone, Amanda thought.\n\nSuddenly, she grabbed his hand. \"I don't hate you,\" she said. He looked up into her eyes. \"I know you wouldn't ever hurt anyone on purpose. I know you'd never hurt me on purpose.\"\n\nHe nodded, slowly. \"So... what now?\"\n\n\"Well, we could...\" she glanced suggestively at his erection, still throbbing between his legs.\n\nHe went red again. \"You... want to? After... everything?\"\n\nInstead of answering, she slid across the mattress, kneeling next to him and pressing her lips to his. This close, she could feel that he was still hot - not as hot as he had been (or the Jacob-beast had been) last night, but still warm, like a radiator on low in the cool room. She slid her hand down over his flat stomach and wrapped her fingers around him, feeling him shudder in pleasure at her touch.\n\nShe broke the kiss, staring down into his eyes. She felt moved, now, to take the biggest step - even bigger than fucking a werewolf in the basement of an abandoned factory. \"I meant it, what I said last night.\"\n\n\"Meant... what?\"\n\n\"I love you, Jacob.\"\n\nHe looked away. \"Even though -\"\n\n\"Even though,\" she agreed. \"Maybe even because. I don't know. I just know that I'm not afraid of you, or of... other you. And I know that right now, I fucking want you so bad.\"\n\nWith a faint sound in his throat, he rolled up onto his knees, wrapping his arms around her, pulling her body against his with a strength and desire that she had never felt from him before. Jacob had always been passionate, but somehow cool - a controlled hunger. It struck her that maybe he'd always been holding something back.\n\nIt didn't take his fingers very long to make her ready for him, even if she was still a little sore from last night. When he moved to perform the other activities they usually did as foreplay - kissing, licking, fingering, a lot of things he was very good at - she stopped him, instead just rolling onto her back, pulling him with her. He wordlessly kissed her as she wrapped her hand around him again, guiding him into her, and she sighed as he slid home.\n\nThere are different kinds of intensity. Last night, Amanda had been overwhelmed by the physical intensity of Jacob's other, beastial form - its heat, its power, its overwhelming physical strength and need. Now, she knew another kind of intensity. He made love to her, body pressing her down into the mattress, his blue eyes staring into her green ones. The thrusts of his hips were long and grinding, pulling out slowly, then pressing back into her with almost agonising slowless. One armed looped under her head, pillowing her neck, the other ran constantly between them, squeezing her breasts, then sliding down to rub against her clit. It took... forever, and she adored every minute of it, completely losing herself in him, as he lost himself in her.\n\nShe came only once, when he did, and it was almost powerful enough to put her back to sleep: a gentle, rolling wave of pulsating euphoria, seeping through her body like dawning sunlight, filling every fibre of her with an ecstasy she could only express by moaning, which she did - long, loudly, and without reservation. His orgasm was just as intense - buzzing, thrumming spasms of fulfilment, starting in the deepest, darkest core of him, rippling outwards in lightning-like pulses, making his fingers and toes curl and his vision blur.\n\nWhen it was finally over, they led on the mattress for a long time in each other's arms, shaking, panting, and crying - the good kind of tears, which wash all the fear and hurt away.\n\n<hr size=\"2\" align=\"center\" >\n\n\"Bye, honey!\" Amanda said, waving Rebecca into the car. Her fifteen year old daughter waved back, doing her best to look bored and uninterested, but a smile was pulling at the corners of her mouth. She was off to spend the night at her grandmother's house, where she would no doubt be spoiled rotten by Amanda's doting mother. The old woman was always happy to have her beloved granddaughter to stay of course - not to mention that she understood that regular date nights were important to Amanda and Jacob. Every married couple needed some time to themselves, to love and laugh and... keep things exciting, she would say, with a suggestive wink. Amanda grinned. If only she knew.\n\n\"Fi-nally,\" she breathed, closing the door. \"They're gone!\" she called.\n\n\"Thank god,\" Jacob sighed in relief as he walked down the stairs. He was dressed in loose tracksuit bottoms and nothing else, and Amanda took a moment to admire his physique. It had been twenty years since she had first met what she had come to think of as other-Jacob. Jacob had aged, but his regular workouts - in the form of body breaking transformations - had kept him in perfect shape, even as a few strands of salt had started to invade the pepper of his hair. Amanda had changed more, of course, two decades and one child softening her body, rounding out her hips and breasts. No matter how much she tried to stay in shape, life happened. Jacob, of course, had spent many long nights making it abundantly clear how gorgeous he still thought she was. Despite occasional bouts of self doubt, she was content and confident in his honesty: his loving words were plentiful and artful. And, of course, it was hard to argue with the simple, solid truth of a raging hard on.\n\nAmanda made sure the ground floor doors were double locked, then followed Jacob down to the basement, where he had already stripped off in his 'private office' as he called it. Rebecca had never yet thought to ask why his office was in the basement, protected by a door heavy enough to repel invaders. Amanda supposed that they would have to tell their daughter one day - maybe sooner rather than later. She would be sixteen in a few months, after all, and Jacob was already keeping a very close eye on her, for signs of any meaningful changes.\n\nStill, they would cross that bridge when they came to it, and they would cross it together. For now, Amanda stripped off and stepped into the room, closing the heavy door behind her. This room was more comfortable than the first, concrete walls and floor covered in easily removable soft carpets and hangings, and the heavy mattress was spic and span. Jacob turned to her as the door closed.\n\n\"Are you sure?\"\n\nShe stepped up to him, snuggling up and planting a kiss on his chest. \"Every month you ask, and every month the answer is yes.\"\n\n\"But I'll never stop asking,\" he promised her.\n\n\"And I'll never stop saying yes.\" She looked up as she felt a shudder run through his body. \"Time?\"\n\nHe nodded mutely, and she stepped back. She was well used to Jacob's transformations now - she could have drawn a second by second flipbook of them, if she was even slightly good at drawing. Still, she knew that he always wanted a bit of space for them, afraid that he would unintentionally lash out mid change and hurt her. It was sweet, really.\n\nA minute later, Jacob was gone, and other-Jacob was there. The beast looked up and around, disoriented, wary. He growled when he saw her.\n\n\"Hey there, big boy,\" she breathed, moving towards him carefully. He bristled, the growls intensifying, but stopped when he caught her scent. A moment later, her fingers brushed over his head and down along his chest and stomach, while he panted happily, long tongue bathing her face. She giggled as she felt the excitement already growing between his legs. \"Someone's a horny boy, aren't they?\" He buried his head between her breasts, joyfully licking her bare skin, snuffling downwards as he followed the familiar warm scent of her arousal. \"Alright boy,\" she purred. \"Ready to play?\""
    ],
    "authorname": "Krieger013",
    "tags": [
        "non-human",
        "werewolf",
        "supernatural",
        "were wolf",
        "wolfman"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/locked-in-3"
}