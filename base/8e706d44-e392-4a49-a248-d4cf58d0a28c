{
    "title": "Under The Right Moon Ch. 01",
    "pages": [
        "Hope Mathews fumbled nervously with the hem of her dress. With her arms straight down at her sides, her fingers were able to pluck at the blue cotton. Did that mean the dress was too short, she thought. Great, I'm going to a job interview dressed like a slut. Hope shook her head, no negative thoughts. The outfit was a classy A-frame in a light material. She had pulled her blond hair into a French twist and had only added a pair of pearl button earrings and matching single strand necklace. \n\nIt's not the dress you idiot, your just nervous. And boy wasn't that the truth. Hope had an interview for the position as personal assistant to the CEO of a locally owned advertising company. She wasn't quite sure how'd she'd scored the interview in the first place. She had been working for Jackson and Jackson, a temping agency, up until two weeks ago when the office had mysteriously been shut down by the IRS. The big boys hadn't liked paying their taxes.\n\nHope had flew into a panic, Reno wasn't exactly the cheapest city to live in. She'd crammed as many interviews into the last few weeks as possible but the economy was at a low and there wasn't that many positions open to someone with such little experience. However, yesterday while sitting in her cramped apartment eating a yogurt, the want ad gods had smiled upon her. Thompson Advertising was looking for an experienced personal assistant. When she'd called for the interview and had been asked for years of experience she did the only thing she could think of, she lied. But hell's bell's what did it matter, it got her an in.\n\nNow, standing in front of the bank of elevators in the Bank of America building downtown, Hope was starting to think that she had been utterly stupid in exaggerating. But she really needed this job. She sighed heavily. Come on, Matthews, pull yourself together. You're a smart, hard working, dependable employee and your going to walk into that office and show them the confident woman you are. Yeah, ri-ight.\n\nThe elevator doors swooshed open and Hope stepped inside. A man entered right behind her, not just a man but a gorgeous hunk. He was tall, so tall that Hope's own 5'8\" came to just below his shoulders. His body was trim but even under the expensive blue suit, she could tell he was well muscled. His brown hair was short and neat. Hope pushed the button for the tenth floor, his voice low and sultry practically purred the word, \"Perfect.\" It was all she could do not to gawk.\n\nGavin Thompson was having the best day. Over breakfast he had procured a sizeable new account with an up and coming software company. His brand spanking new 2009 Dodge Viper had been delivered and he had spent the last hour roaring through the streets getting a feeling for her. He didn't have much on his plate this afternoon and as he'd entered the elevator behind a blond woman he'd scandalously let his eyes roam over the pretty young thing. \n\nShe was wearing a fetching blue dress that showed off shapely tanned legs. The swell of her ass under the thin material was intoxicating and he imagined that his large hands would mold perfectly to the luscious and full breasts that seemed to be beckoning to him. The woman pushed the button for floor ten, his floor. \"Perfect,\" he muttered, he'd be able to look at her as the elevator rose, though he wished it was something else that was on it's way up. \n\nShe'd twisted her blond hair up and he wondered how it would look over his stomach. Damn it, he was making himself hard with his damn thinking. He stuffed his hands into his pockets and flared his pants out to try and conceal at least some of the bulge. Of course, she picked that moment to turn towards him. She had a pixie face with a cute nose and lush full lips. Her eyes were blue, the color of cornflowers.\n\nGavin flashed her his best winsome smile and she favored him back with a shy uplift of her own kissable lips. Suddenly the elevator car lurched and came to a dead halt. The lights flickered off, then returned but dimmer and Gavin assumed it must be the auxiliary power. Stuck in an elevator with a beautiful woman, there is a God.\n\nHope had been staring shyly at the hunky man when the elevator stopped. She had swallowed the screech that had almost escaped her lips and had muttered a curse instead. \n\n\"What happened?\" She asked, dumbly. Duh, the elevator no go. \n\n\"I'm not entirely sure but it seemed we're dead in the water.\" The man answered. He reached around in front of her and opened a small door. The emergency phone, of course. She listened intently to the one sided conversation.\n\n\"Hello?...Hello? Yes, I'm in elevator three and we've stopped....Yes, that's right...How long?... Two of us...Thank you.\" He replaced the receiver than backed up against the wall. \"They aren't sure why we've stopped or how long it will take to get us going again.\" \n\n\"Great. Just freakin' great.\" Hope sighed heavily and slumped onto the floor, making sure her dress didn't rise to high. \"The god's are laughing at me.\"\n\n\"How so?\"\n\n\"I've got an interview right at this moment and I really need this job.\"\n\nThe man joined her on the floor, his long legs spread eagle. \"Oh. Obsessive gambler?\"\n\n\"What? No.\"\n\n\"You play the ponies?\"\n\nHope shook her head, a slight smile playing across her lips.\n\n\"Oh, I know. You're someone's sugar mama.\" The man's own smile was all white teeth, a hundred watts that lit his green eyes.\n\nHope snorted. \"Diffidently not.\"\n\nThe man offered his hand, \"Gavin.\"\n\n\"Hi, I'm Hope.\" She slipped her own hand into his and a shock of electricity stunned both of them.\n\n\"Uh-oh, you know what that means?\" Gavin teased.\n\n\"What?\"\n\n\"We're fated.\"\n\n\"What!?\" Hope asked, giggling.\n\n\"Yup. I've read enough books to know that a spark of electricity between two people means they're meant to be together. So don't try to get out of it.\"\n\nHope laughed out loud, \"More than likely it was static electricity.\"\n\n\"Static electricity? Well, I was running across my carpet in only my socks this morning. Thanks by the way, for bursting my ego.\"\n\n\"Your ego?\"\n\n\"Yup, nothing like having a beautiful woman rebut my proposal.\"\n\nHope rolled her eyes, then gave him a sly look. \"Only your socks, huh?\"\n\nGavin burst out laughing, a full male sound that brought a shiver to Hope's skin. Oh my God, Hope Mathews, you're flirting. Yes she was and damn it, she liked it.\n\n\"Wait a minute, you were on your way to a job interview?\" Gavin asked with sudden insight.\n\n\"Yeeah.\"\n\n\"At Thompson Advertising?\"\n\nHope nodded.\n\n\"Well, then you wont be missing that interview.\"\n\n\"I wont?\"\n\n\"Nope. Let me reintroduce myself. Gavin Thompson, CEO and owner.\"\n\nHope's mouth dropped open and she started to climb to her feet. Gavin gripped her hand and pulled her back down.\n\n\"Sit down. Don't get up on my account.\"\n\nHope's mouth went dry, the man still had her hand in his. His warmth seeped into her along with a vibration, almost like his aura was spilling over onto her.\n\nGavin kept her soft, tiny hand clamped in his. He liked the warm feeling touching her caused in his chest. He shifted closer so that he could look at her face better, but he didn't release her. Something inside of him wouldn't let him\n\n\"What experience do you have?\" he asked, not sure if he really cared. Hope was already hired. Gavin was infatuated. Even her smell was getting to him, some kind of body mist that made him want to lick it from her body. Under that was the sweet aroma of a woman attracted to a man.\n\nHope bit into her lower lip. \"Actually, sir...\"\n\nGavin grabbed his chest in mock horror. 'Sir!\"\n\nHe's trying to make me more comfortable, Hope thought. She started again. \"Actually, Mr. Thompson...\"\n\n\"Dad are you here too?\" Gavin moved his head, looking about the car.\n\nHope couldn't stop smiling. \"Fine. Gavin,\" and damn if his name didn't just roll off her tongue, \"to be honest I don't have that much experience. I only have a high school diploma and for the last two years I worked at a temping agency.\" She bit into her lip, again.\n\n\"Would you leave your lip alone, for god's sake. What did it ever do except sit there and tease me seductively?\" \n\nHope shook her head and gawked at him. He was just too much.\n\n\"You can type?\"\n\n\"Yeah.\"\n\n\"File?\"\n\n\"Yeah.\"\n\n\"Answer the phone?\"\n\nHope rolled her eyes. \"No, normally I just let it ring. I mean what if the person on the other end actually wants to talk to me.\"\n\n\"Well at least you have a sense of humor.\"\n\n\"I wasn't being funny.\" Hope deadpanned. \n\n\"You're hired.\" Gavin said at exactly the same time that the elevator car started moving.\n\n\"I'm hired? Really?\" Hope asked as she followed Gavin into his office. His legs were longer than hers and she had to walk a little faster to keep up; but damn if she didn't mind being behind him. He had one hellavan ass. He's your boss, idgit, so no looking at his butt. Well maybe one more peek. \n\n\"Yup, you're my new assistant.\" Gavin held the door open for her, smiling down into her sparkling eyes. \"I'm not the easiest person to work for. I mood swing enough to make any hormonal woman proud. No offense.\" He added.\n\n\"None taken.\"\n\n\"I'm not a nine to fiver. It's my business and I make my own hours, however, unless your out on errands, I expect to be able to find you here during those times.\" Then he added, \"If I need you, though, outside of those hours I expect you to come.\" Gavin laughed inwardly at his choice double innuendo, if he had his way he would be putting that to the test.\n\nHope nodded, \"I understand.\"\n\n\"Good. This is your office.\" It was nothing more than a desk in an outer room. Some well chosen prints of the surrounding city lined the walls but the desk was bare of any personal objects, making Hope assume that his last assistant had all ready removed them.\n\n\"I'm through that door,\" Gavin said, pointing behind her desk to a door. \"Down the hall is a conference room, more offices of other people that work for me and a little kitchen area. Dress is casual. Want to have dinner?\"\n\nShe'd been nodding her head vigorously as he spoke so that the proposal was inevitably excepted with a nod. \"Wait, what?\"\n\n\"To late you already accepted.\" Gavin smirked, but seeing the distress and slight terror in her eyes made him add, \"To celebrate your new job and my new assistant, that way it's tax deductible.\"\n\n\"Oh, um, yes...okay.\" What's the harm, Hope thought.\n\nSome five hours later, after half a day of trying to figure out what the hell she was doing, Hope knocked shyly on Gavin's door. His gruff \"enter\" made her hand twitch as it turned the knob. She took a deep breath and poked her head into his office, \"I'm all finished up out here, is there anything else you need me to do before I leave?\"\n\nGavin had his head on his desk, fiercely rubbing his forehead back and forth against the mahogany. He had just gotten off the phone with his brother, something that always gave him a headache. No matter how far he tried to distant himself from his family they always seemed to draw him back in. Gavin belonged to one of the five clans of werewolves that lived in the Reno territories. His blood brother, and pack brother, had just called to inform him that a new queen was being promoted and that his presence was mandatory at the ceremony. As much as he had wanted to tell Jake that Lucas, wolf-king, could kiss his ass, he didn't for fear of the repercussions. Lucas had one hell of a temper. \n\nHe didn't say anything and the rough way he was abusing his flesh made Hope cringe. \"Gavin, what's wrong?\" She made her way farther into the office, no longer shy and unsure but distressed. Something in her wanted to comfort the man in front of her, a man she hadn't known for more than a day, but who seemed to tug at her insides.\n\n\"Oh, nothing much. Just have to attend a party that I'm not looking forward to at all.\"\n\nWell that threw Hope for a loop. She had been expecting something a lot worse. \"You're denting your forehead with the desk over a party?\"\n\nGavin gave a low snort and straightened up to look at her, \"Yeah, I know it sounds a little childish but that's the truth.\" \n\nHope tilted her head to the side and gave him a look that clearly said she wanted to ask more questions but didn't know if she had the right to. She ended up nibbling on her bottom lip, a compulsive habit that was more seductive than if she had rubbed her hands over her breasts and hips. Gavin swallowed dryly, a little to aware of the petite woman standing before him. He was about to do a foolish thing, but damn it foolish was his middle name. \n\nHe cleared his throat and said, \"I'm sorry, actually there is something I need you to do for me.\"\n\n\"Oh, ok.\" Hope's head was spinning, she couldn't seem to take her eyes off of him, it was like he was pumping pheromones into the air or something. \n\n\"I need you to take a letter for me.\"\n\n\"Let me just grab a pen and notepad and I'm more than happy to do that.\" She found it difficult to turn from his deep green eyes, and she had to sadly admit that a strong longing for his hands to be on her body seemed to generate through her being.\n\n\"No need, I have both that you can use.\" Without ever taking his eyes from hers, he waved a notepad slightly in her direction.\n\nSomething primal echoed off of his skin, a calling of sorts. It resounded through her flesh and bones as she closed those few last steps between them. Her dainty hand was reaching out to retrieve the paper when it fell from his grasp and she was being pulled roughly into his arms. In the back of her head she knew she should be protesting but her heart and mouth wouldn't let the words escape.\n\nHope wasn't sure when he had stood but she found herself being pressed between his muscled body and the desk. Her hands had gone to his shoulders, while his were undoing the bun her hairs was in. She felt her blond curls tumble down her back and a tight mewing sound fell from his lips.\n\nGavin's hands went to her nape, wrapping her hair in his fist and slightly pulling backwards, causing her to expose her neck. He assaulted her warm skin with licks and bites. She smelled so good, like vanilla and lavender and he had the urge to eat her alive. His hands released her hair and fumbled with the zipper of her dress, he needed to she her nude and free before him. He thought she might protest but her small hands massaging at the front of his jeans left little room for a misunderstanding. \n\nWith the zipper down, Gavin stepped away from her kneading hands. Hope let the material fall from her body, the voice in the back of her head completely drowned out by the almost devastating desire for Gavin to see her, to feel her, to take her. She was wearing a black bra with matching panties, the color dazzling against her creamy white complexion. He could see her nipples hard and taunt against the lacy material. Gavin's next move was right out of a movie, his arm swooped out and knocked everything off of his desk, sending the contents flying in all directions as his large hands grabbed Hope by the hips and lifted her to the mahogany surface. A growl rumbled deep in his chest as his mouth dipped to take her lush lips between his. While his mouth captured hers, his fingers played with the lace that sat snuggly against her hip. He moved his hand to the V between her legs and pressed tightly.\n\nHope's hips moved automatically against the feeling of the material and his warm hand. Dimly she was aware of a whimpering sound, a pleading that she found was coming from her. \"Please,\" she whispered, not sure exactly what she was asking for but knew, just knew that Gavin would understand. A slight pressure jerked her body as her panties were torn away. She closed her eyes and leaned back as his fingers went to working her clit. Words fell from her mouth as he played her and then his head was dropping down, her legs moving farther open to receive the kisses he placed against her.\n\nHe sucked her clit firmly into his mouth, rolling his tongue around it, causing Hope to buck. Her hands went to his hair as she pressed herself against his mouth. The feeling of two of his long fingers slipping inside of her brought a cry of ecstasy so loud that she bit firmly into her bottom lip. He found her spot, and rubbed against it as his tongue and teeth tormented her clit. The orgasm hit Hope hard, one moment she was moving along to his rhythm, feeling that glorious pressure inside starting to swell and the next she was being thrown over the abyss. She came thrashing and panting hard, her hands seeking for something to grasp, anything that would give her the idea that she wasn't going to fall from the face of the world. \n\nGavin took that moment to move up and over her, as her eyes refocused she was aware that he had already removed his pants and he was positioning himself. Hope started to protest, she wanted to see him. She wanted him in her mouth, to feel him quiver and shake as she rolled her tongue around him, but before she could say anything he was entering her. He pushed firmly into her opening, her hips going up around his own to try and pull him closer. He worked himself back and forth, so slowly that Gavin thought he was going to die from the yearning to just slam into her. To take her hard and fast until they were both sweaty and spent.\n\nBut first, he wanted to give her all the pleasure she could with stand. Gavin moved his hand between their bodies, stroking his finger against her clit as his other hand cupped her left breast and giggled it gently. His thumb teased her nipple while he concentrated on the rhythm of her hips. \n\nHope wasn't so sure she could take anymore of his calm, tender movements. She felt desperate with need and he was killing her with kindness. The words that fell from her lips even surprised her. \"Please, Gavin. Please fuck me.\"\n\nAnd with that little beg, Gavin lost his resolve. He slid her farther down the desk, tilting her hips up so that her legs were on his shoulders and he slammed deep, deep inside of her. Hope screamed at the feeling of him hitting the end of her, she could hear herself saying, \"please, yes, oh god, yes.\" over and over again as his rhythm was almost to rough for her to handle. However, she stayed with him, meeting his thrusts and her body seemed to demand more. \n\nGavin was making growling sounds and his breath was coming in shallow pants. The climax hit Hope hard just as she started to feel Gavin falter and lose his fast pace. His body began to twitch with every stroke, and every stroke caused a ripple of ecstasy through her body. \n\n\"Oh god, I can't keep this up. God, you feel so fucking good.\" Gavin whimpered, his eyes drilling into hers.\n\nHope gave him a teasing smile, shifted her hips up a little more and tightened her inner muscles around his throbbing cock. His body spasmed hard, \"Oh, fuck wait. I'm not ready...\" But Hope tightened around him again and the orgasm tore through his body, doubling himself over to pull her tightly to his chest as he yelled his release into her hair. \n\nThey stayed like that, Gavin still inside of her as his hot breath moved along her neck. Hope pinned by his body against the desk, her hands playing up and down his back. Slowly, almost like it hurt, he pulled himself up and out of her. The feeling of him sliding out caused Hope to shiver. She stayed sprawled across the desk, feeling the wetness between her legs and not caring that she should be moving to clean up. She felt lethargic and just plain happy. Gavin didn't bother to redress either as he slumped back into the chair behind his desk.\n\nA thought crossed Hope's mind and she gave a small snort at it.\n\n\"What?\" Gavin asked.\n\nShe cleared her voice and said, \"Just wondering how to fit all of that into a letter.\""
    ],
    "authorname": "trueunseelie",
    "tags": [
        "werewolf",
        "boss",
        "secretary"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/under-the-right-moon-ch-01"
}