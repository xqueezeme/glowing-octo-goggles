{
    "title": "The Choosing",
    "pages": [
        "AUTHOR's NOTE\n\nThis isn't a slam bam thank you ma'am, it takes a little while to get to the hotness. The story builds slowly, think of it as sweet descriptive foreplay. If you're after pure fuckety fuck fuck fucking (and don't we all just need that sometimes?) then I'm not at all bothered if you skip along.\n\nIf you want to indulge in a delicious sweet build then please...read on.\n\n--------------------------- -------------------------------------\n\nThere was little comfort in the fact that I was the only one smart enough to recognize the irony of my being forced to The Choosing. Irony was too subtle a concept for my Uncle whose fat little fist gripped my elbow. He preferred brute force and any reflection of his actions was far beyond his mental capacity. Ordinarily I found great comfort in my self-righteous intellectual superiority. The quiet certainty of knowing I was smarter than them all usually got me through anything. It had certainly gotten me through the last six years of being fostered by my Uncle\u2014that, and my mental calendar, counting off the days until I finally reached my legal majority and could escape his authority.\n\nBut not today. Today I felt not superior, but instead small and foolish.\n\nGlancing over my shoulder at Uncle Hawthorne I caught his eye and he sent me a brief jowl jiggling nod. He turned away almost at once as if he could not stand to look at me a moment longer. He rarely met my eyes. From the moment we met my quiet determination disturbed him\u2014at the very least he found it irritating and at the most it sent him into a frothing rage. I was still watching him when his fleshy lips curled into a satisfied grin and he gave a little snort of pleasure, sounding like a well fed pig. It was the happiest I think I'd ever seen him, he was so very pleased with himself. As he should be. He had finally bested me. \n\nHe'd won.\n\nThat fact crawled under my skin. It itched and burned\u2014a sensation so real that I fought the desire to claw at my own skin. If only I could rake my nails deep, slice into my soul and remove the burning indignity. But I couldn't so I did nothing, showed nothing. Anyone who looked at me as I walked along would assume that I was not at all bothered by the proceedings\u2014neither happy nor sad. My fa\u00e7ade was perfectly ambivalent. \n\nI was well schooled at hiding my thoughts. Outwardly I made sure that I remained serene, appearing calm and above it all. I never lost my composure; I learned early to keep my true feelings locked, hidden deep inside. It had been so long since I had let myself access my vault of stored emotion that sometimes I wondered if there was even anything there\u2014whether I was capable of feeling at all. If perhaps I was naught but numb. As cold a bitch as my relatives had so often accused me of being. It was indeed bittersweet that after so many years of icy indifference to know that today I was at least capable of feeling shame and foolishness.\n\nAt my other side\u2014his fingers biting into my arm\u2014was my cousin Bandar. I may have felt foolish, but certainly not foolish enough to look to him for comfort\u2014or remorse. There'd been nothing but hate in his cold grey eyes since I'd denied his claim. Anyway, I didn't need to look to know where Bandar's gaze would be. Not with the array of nubile young flesh also on their way to the Summer Choosing. As decreed by Vandarran law, one maiden from every shire was now walking the Chosen Path to the Night Palace. \n\nI was one of them.\n\nI didn't blame Bandar for staring. I could barely keep my eyes from the other Candidates myself. They seemed to me like a flock of butterflies. Bright flashes of multi hued splendor sprung fresh from cocoons to dance before my eyes. The glistening fabric of their gowns appeared to float over the gray cobblestones as if their feet did not touch but instead somehow hovered, gliding effortlessly.\n\nNot me.\n\nI did not float. The heels of my boots sounded off like cracks of thunder, pounding out in futile protest. \n\nEach crack of my heel asking Why? Why? Why? \n\nIt was so ridiculous for me to attend The Choosing. So humiliating. Who would choose me over all that young lush beauty?\n\nNot that I wanted to be Chosen. \n\nThe other Candidates\u2014those who no doubt long dreamed of being Chosen\u2014 laughed and chattered with their escorts. Their excitement was palpable; it brushed against my skin like the prickle of static electricity. One of the girls, a blond wearing a gown that shimmered like liquid silver was so happy that she started to dance. I watched her leap forward on pointed toes\u2014performing as if she were already on show.\n\nPerhaps we are, I thought and looked up at the Night Palace. The windows that faced the Chosen Path were either dark or shuttered tight. The balconies were empty and shadowed. There was no movement, no light. I felt cold just looking at it. I fought a shudder and looked away.\n\nI'd never been this close to the Palace. Few had, as only The Chosen and those in Blood Service could come within three miles of the Night Palace compound. It was restricted and trespass was punishable by death. \n\nWe walked a street lined with rows of identical brownstone houses. Each one indistinguishable from the next. They butted up against each other in a seemingly endless row. Homes, I thought, for The Chosen. Would I end up here too? It was doubtful. Far more likely that I would be housed in the Blood Service Dormitories. \n\nOccupants of the cookie cutter brownstone houses had spilled out onto the streets to watch our procession. Watching along with The Chosen were many who were in Blood Service. Easily recognizable by their austere black uniforms. Curious, I looked into the crowd of watchers, unwittingly catching the eye of one of The Chosen. I knew he was Chosen, not just because of the cut and color of his fine clothing but because of his stare. Intent, hungry, consuming\u2014it burned. Feeling as though he could reveal my very soul, peel back my shields and spread me open with just his gaze. It made me ache. Want, for what I wasn't quite sure, but the need settled low and heavy in my stomach. The feeling was disturbing, I wasn't one to want. I planned, wanting was a useless endeavor. Plan for the least and expect the worst. Wanting led to nothing but disappointment.\n\nHeat throbbed between my legs and I knew that the ache he'd caused had made me wet. Did he know too? His smile seemed to suggest that he did. Shame burned through me, racing across my skin in a heated blush. I had to learn to harness my curious nature, push it deep down. Hide it or for the next five years while in service to the Night Masters I would be sure to find myself in deep trouble. \n\nI hugged myself. Wrapping my arms around my body I rubbed my palms up and down the chilled skin. I was wearing a low cut sleeveless gown. The best the Shire seamstress had to offer. The fabric was gossamer-fine pale pink. I was uncomfortable so exposed, but discomfort with my clothing was the least of my worries. My fingers trailed down my bare arm to circle the band of raised skin around my wrist. I looked down. It was still red from where they'd tied me last night.\n\nThey hadn't needed to do that\u2014I wasn't running and they knew it too. It was done out of spite, out of the desire to hurt me. Break me, make me cry. Bandar had tightened the straps, pausing between each vicious pull to intently watch my face. Hoping no doubt to see me crack, see me cry out in pain. But I didn't. I gave him nothing, the same as I had for the last six years.\n\nBecause they could not claim nor break me they had made the only threat that could bind me to their will.\n\n\"Talia, you will submit to The Choosing or we will take Leia in your stead.\"\n\nLeia, my sixteen year old sister. No matter how badly I wanted to escape the stifling boredom of village and my Uncle's authority they knew I would never sacrifice her. More than just being young, Leia was sickly, too frail to endure the journey let alone whatever The Choosing would bring. \n\nI'd asked him 'why', a futile question I realized as soon as the word left my lips. I knew why.\n\n\"Your pride,\" my Uncle had all but hissed at me, \"by remaining unclaimed your arrogance has forced us to this Talia.\"\n\nPride? Arrogance? I'd bitten my cheeks at the words, the iron taste of blood filling my mouth. I wanted to spit the bloody words back at him, but I didn't. I did what I always did; I pushed down the feeling\u2014smothered it like a spent hearth fire\u2014smiled and turned away. \n\nMy refusal to accept any claim had nothing to do with pride and everything to do with self respect. I'd watched the women around me claimed, one by one they submitted to their husband's will until they were little more than shells of their former self. Used, rearing child after child, merely vessels to carry Vandarran heirs.\n\nThe only legal right a Vandarran maiden had was that of choosing her claiming. A claim could not be forced. Because of that law I'd thought myself safe as long as I remained unclaimed. I thought that all I had to do was wait it out until my twenty-fifth birthday and then I could escape. I had no grand dreams, no delusions of my life after I'd reached majority. All I wanted was to head to the Capitol and find work as a servant, hopefully as a governess, but now those meager dreams were gone, just three months shy of my twenty-fifth birthday.\n\nNow I would either become a Chosen novitiate or go into Blood Service to the Night Masters. \n\nThe Palace gates came into view, bringing our procession to a stop. We stood suddenly quiet. All awed by the wrought iron shaped into giant black wings, the tips extending high above the six foot stone walls. Four guards dressed in shining black regalia opened the gates. They moved silently, without even a creak.\n\nBandar's grip tightened on my arm. \"I hope they bleed you dry, frigid bitch,\" he hissed, breath hot with the stench of last night's malt liquor.\n\n\"I'd rather choose death than you,\" I answered him. He seemed surprised that I spoke rather than given him my usual calm smile. In truth I'd surprised myself and it felt... good. I didn't pull away or flinch when he raised his hand to me. His hand was up but he had not yet swung when his father pulled him back.\n\n\"Don't damage the goods. She's the Night Master's problem now.\"\n\nBandar slowly lowered his hand. Finally releasing his grip on my arm. With a hollow laugh he said, \"They'll see you for what you are Talia. A useless dried up old bitch. They'll suck you dead if they can stand your bitter taste. My only regret is that I will not see it.\"\n\nI met his eyes and finally, letting the years of hate seep into my voice I said, \"And with my dying breath I'll tell them you deliberately sent your worst. That your offering to the Night Masters was made not in reverence but in anger and spite. They'll come for you then Bandar. My only regret is that I will not see you beg for your worthless life.\"\n\nHe blanched, stepping back with wide frightened eyes. He had not expected a response to his cruel words. My usual response was silence. I came to them already schooled in restraint from the harsh life of serving my own brutal father. I didn't speak out. I didn't curse. I kept my tongue, locking my resentment behind a curtain of cool indifference. Over the years my quiet disdain became more than a shield; it became a weapon against their arrogance. They both hated my refusal to yield. I did what they said, cold smile locked in place, but they knew in their hearts that I never really submitted to their will. Because of the years of passive resistance Bandar had never known the whip of my tongue and I would not let him leave now without a final taste of my hatred. \n\nI said in a calm, measured tone, \"You were never man enough Bandar. You know that don't you? That was why you could not claim me. You had not the strength nor the skill to own me. You think me frigid? You think me dried up? You fool. I am no virgin. I took whomever I wanted. I just never wanted you.\"\n\n\"Quiet bitch,\" my Uncle said from clenched teeth, \"Shut your filthy mouth.\"\n\nAround us Candidates cried their bittersweet farewells, clasping their escorts as if they did not wish them to leave. Me, I grinned. Even fearing what I faced ahead could not dampen the joy of knowing I would never again answer to Bandar or my Uncle. \n\nI watched them leave. Bandar looked back at me one last time before mounting the steps to the carriage. I met his eyes and smiled again. A true smile from a free heart. I closed my eyes and savored the short lived feeling of liberty. An instant of freedom I knew was fleeting, but for that brief moment was mine alone. \n\nI was the last to walk through. For one brief charged minute, I considered running. Adrenalin shot through me, singing through my veins as my body prepared to take flight. But I didn't. I didn't run. Where would I go? What would I do even if I could outrun the guards? I would be an outlaw. No money, no hope. No choices left. I looked up at the forbidding fa\u00e7ade of the night Palace and gave in. I submitted to the inevitable, and with head down I walked through the gates and on to The Choosing.\n\nInside the winged gates we were ushered through huge black lacquered doors into a hall. A Great Hall. Vast and empty, it held only a wooden table, two chairs and a large bronze gong in the back corner of the room. The walls were lined with flocked black velvet wallpaper. I longed to run my hands across the raised wing design but instead I clasped my hands together, gripping tight until my nails bit into the skin. Light filtered in through floor to ceiling windows. It shimmered through what I first thought to be sheer bronze curtains but on a second look realized were thousands of hanging strands of fine metal. I kept focused on the details to shield myself from thinking. From wondering.\n\nThe sound of nervous chatter echoed in the cavernous room\u2014whispered gossipy threads of what to expect weaved in through my focused shield. I dismissed them, shut them down turning away from the nearest Candidate who tried to draw me into her supposition. No one knew what to expect. It was futile to suppose. There were countless rumors of course. Drunken stories told by firelight, but no one actually knew. No one other than those who had undergone The Choosing and they were blood bound to silence. \n\nI looked around, this time focusing on the other Candidates. The more I looked the more sure I became that I would not be Chosen. I was certainly not the most attractive Candidate and I was most definitely the oldest. Surely they would take one of the young beauties. I would end up in Blood Service, in apprenticeship to a trade. In the seamstress rooms or perhaps weaving. \n\nMy wondering ceased upon the abrupt sound of wood hitting stone. I looked up to see the double doors behind the great wooden table open, the doors flung wide. One male and one female Chosen entered through the space. A third person, a woman bound in fine black ribbons followed. She was almost naked, strips of shiny black wrapped around her breasts, wrists and torso. Her lower body from the waist down was completely bare\u2014even of hair. Shocked, I looked away and a heated blush crept up my chest and neck. \n\nThe Chosen man clapped his hands. The sound inhuman, like a crack of thunder it echoed off the walls, so loud it hurt. I brought my hands up to protect my ears. I was not alone. Other Candidates too held their ears, some cried, whimpering in pain. The mood in the room had changed, instead of palpable excitement now there was fear. We had huddled together. Unconsciously forming a tight circle that had shifted back, away from the Chosen and closer to the doors through which we had entered.\n\n\"Move to the markings that match your shire,\" he said. His voice was compelling\u2014almost physical\u2014it brushed against my skin like sharp nails down my back, half pleasure half pain. The throb I had felt when I had seen the Chosen in the street returned to settle deep between my legs into a damp heat.\n\nThe Chosen man clapped again, not so loud this time and to my shock the floor began to glow. Multi colored lights appeared beneath us, a map of Vandarra. Each shire glowing a different color. Around me the Candidates started to move from the protective circle to the markings of their shire. I followed, finding mine. Grateful that it was in the middle near the back, making me but a small hidden tree in the forest of Candidates.\n\nI wasn't sure what to expect once we were all placed upon the map but it certainly wasn't the ominous silence that followed, laying like a thick blanket on a Summer's day. Suffocating me as I waited, waited for what was to come. Through a gap in the map of bodies I spied the Chosen male. I watched him take a seat on one of the high backed wooden chairs. The ribbon bound woman settled at his feet between his sprawled legs. He ran his fingers through her hair, tugging at the strands, making fists in her long bangs. I didn't know why but the manipulation of his hands unfurled a lick of heat in me. A sudden strong desire that I had never before known.\n\nThe Chosen Woman did not sit. She stalked the room, not speaking, just pausing every now and then near a Candidate. The waiting made the throb worse. I squeezed my thighs together as if I could somehow stem the wet flow of heat. The Chosen woman wore pants\u2014the first woman I had ever seen do so\u2014sleek black tights that hugged the length of her legs. They cut low on her hips leaving an inch sliver of pale skin showing between the waistband and her corseted top. I concentrated on that pale line, keeping my eyes low hoping to somehow melt into the background thinking that if I did she would pass me by unnoticed. \n\nFinally she spoke, where the Chosen man's voice had hinted at seductive pain the woman's spoke it clearly. It cut like a razor, sharp but not shrill. She spoke not to us but to The Chosen man. \n\n\"I love the sweet smell of fear in the morning. Don't you my brother?\"\n\nHe laughed, a deep throbbing chuckle that made the thin bronze strands in the window thrum.\n\n\"I can taste it.\" She stopped and opened her mouth, swirling her tongue out as if tasting the air. \"Not just fear brother, but more. So much more. Can you taste it too?\"\n\nI titled my head so I could see him clearly. He closed his eyes, breathed in deeply and nodded, \"Yes sister. It smells good.\"\n\nShe then began to weave through the Candidates, trailing her fingers across us as she did. She moved quickly, building speed until it seemed she was just a black blur moving above the glowing colors. When she reached me she trailed a sharp nail along the exposed skin of my collar bone. I held my breath, waiting for her to move on, but she didn't. Instead she circled me, prowling around me like a cat. Her finger trailing down my body in circles, from my collarbone to my pelvis. \n\nI did not flinch. I did not move.\n\n\"This one,\" she said and I could not believe my ears.\n\nThis one what? What did she mean?\n\nThe Chosen man gave a lazy wave of his hand and the Candidates in front of me parted. Shifting aside like a sea of grass waving in the wind. \n\nHe looked at me. I felt his stare come in a wave of heat. It washed across me and I had to lock my knees to stop from falling.\n\n\"This one,\" the Chosen woman said again, \"this one... is interesting.\"\n\nI did not look at her; I kept my eyes on him. His hand pulled at the short hair of the woman between his legs. He dragged her up onto her knees. She writhed into him purring as if urging him to tug harder. He did, pulling roughly at her head until he positioned her mouth at his crotch. As he watched me he pumped the woman's head at his groin, rubbing the obvious bulge against her face. He pulled at her head, jerking her as if she were an inanimate object. Not a real woman\u2014a puppet for his pleasure. I tried to look away. Tried to be disgusted by the show of pain and dominance as I knew I should, but I couldn't, and the feeling that coursed through my body was not disgust. ",
        "I was afraid, so afraid that it was lust.\n\nThe woman at his feet spread her legs wide, splaying her knees and pushing up her buttocks. I could see between her legs. I could see the open pink wetness of her sex. As I watched I had forgotten the Chosen woman. I had forgotten that she was watching me. I remembered as she pushed into my back, her breasts flattening against me and her hips jutting into my buttocks.\n\n\"Watch,\" she whispered in my ear with her painfully seductive voice.\n\nThe woman on her knees rocked back, the rounded white curve of her bottom hypnotizing. I could not look away. Right in front of me, right before my eyes she unlaced the Chosen male's fly and released his erect shaft. \n\nI was no virgin. I had carefully chosen lovers from the meager offerings of the Village. Those I could control, men who would not want more from me than I would give. I did not seek them for my own pleasure\u2014fortunate because I had found none. I did it more to spite my Uncle and cousin than to slake my own desire. I had seen an erect penis\u2014several in fact\u2014but I had never seen the likes of which now jutted high and erect from the Chosen male's lap. Proud and plum tipped it was more than two hand span, I knew this because the kneeling woman had both her hands around the shaft. I realized I was open mouthed when I heard him chuckle. He pushed the kneeling woman's head aside and with the hand not gripped in her hair gestured to his cock. \n\nI quickly closed my mouth and shook my head. He laughed again.\n\nSliding further down the chair he spread his legs wider. With a rough tug on the kneeling woman's hair he brought her so that she straddled his right calf. She was up on her haunches with her knees splayed wide. He pulled back her long bangs, as if to give me a better view of her mouth descending on his cock. He was seated a good twenty feet away, but it felt as though he were only inches away as I watched her take him in her lips. She moaned, groaned as if it were her greatest pleasure to suck his shaft deep into her throat. As she sucked she arched into his leg, grinding her naked sex upon his shin. He closed his eyes a moment and let his head fall back until it rested against the high wooden back of the chair.\n\n\"Yes. Yes,\" he murmured in a deep seductive tone. The bronze strands of the window coverings seemed to resonate with his murmurings. They sang in a deep vibrating hum that rolled across my body. The sound tightened my nipples and wet my sex. It took all my will not to cry out at the feeling that pulsed between my legs.\n\nI watched and just as I became comfortable with the lewd sight before me it changed. As if he knew that I was no longer shocked. As if he understood that this were not enough to rock me, he suddenly changed it all.\n\nHe kicked forth his leg, ungracefully dismounting the sucking woman. She fell back onto her bottom and looked up at him in delirious expectation. Her lips were wet and swollen. He raised his hand to her and she came forth on all fours between his legs with her bottom facing him. She looked up, her eyes pointing right at me. \n\nI was watching her face when the first slap hit. While others may have heard the sharp noise, or seen his hand hit the rounded flesh of her buttocks, I saw it in the rapturous expression of her face. Her eyes fluttered shut, her teeth sank into her lip, her cheeks flushed and she moaned. Moaned at the feeling of his hand hitting her.\n\nI had seen many a raised hand in my life. In anger, in frustration, even in boredom, but I had never seen it in lust. I had never known that it could be this way. My hips rocked of their own accord\u2014in time with his slapping hand\u2014as if my body had somehow disconnected from my mind. I was now wet down to my thighs, the thin fabric of my drawers stuck to my skin. \n\nThe woman on all fours rocked to meet his slapping palm. She threw her head back and gasped with each contact. His cock bobbed with each hit, sometimes bumping the rosy slapped skin of her bottom. I was suddenly overcome by an urge to see him erupt on that spanked pink curve. To watch his seed spurt.\n\nAs if he knew. As if he could see into my very soul he ceased his slapping looked up at me and smiled. Then his hand wrapped around his shaft, his thumb slipping across the plump wet head. He stroked down slowly his eyes on me. He nodded once again I didn't know why until I felt the Chosen woman's hand come around my body and slip down my bodice. Cool air hit my bared breasts and I realized that she had somehow cut open my gown. I was standing half naked with my drawers\u2014sheer with wetness\u2014stuck to the lips of my sex.\n\nMy breasts hung heavy, my nipples pearled tight, throbbing with the need to be touched. The hand that had sliced open my bodice came up to cup my breast. She squeezed hard, rougher than anyone had ever touched me before. Her fingers dug into the soft flesh, her finger tips finding my nipple, squeezing in time with his stroking hand.\n\nUp and down he pulled on his shaft. It seemed bigger, longer, harder than before and then suddenly it erupted, pouring out jets of milky white cum across the pink curve of the kneeling woman's arse.\n\nThe fingers on my nipples squeezed tight, past the point of pain into an indescribable pleasure--a piercing feeling of need that shot through my body and exploded between my legs. Clenching, gushing wet surges of pleasure gripped my sex. I bucked, held up only by the Chosen woman who hooked her hands beneath my arms. When the spasms finally ceased I looked down to see what had happened. My drawers were completely wet, stuck to my body from knee to thigh as if I had wet myself. \n\nShame coursed through my body and chuckles filled the room in stereo. From behind and in front the deep humming laughter came.\n\nI looked down, afraid to meet the eyes of the Candidates around me who had witnessed my shame.\n\n\"Look up,\" the Chosen woman commanded and despite my will not to I followed her order. She waved her hand at the other Candidates and barked out an order. \"Bow down. All will kneel.\"\n\nShe stripped the torn gown off my shoulders and then as she had before she somehow sliced through the seams of my drawers. They peeled away, falling slowly from my damp skin to the floor. I was naked other than my knee stockings and boots which the Chosen woman ordered the nearest Candidate to remove. It was the blond girl, the one in shimmering silver who had danced. She knelt at my feet and I briefly met her eyes. Her cheeks stained red with embarrassment and she looked away. She uncurled my stockings from my legs and removed my boots without looking at me again.\n\n\"Come to me.\" He curled his fingers, beckoning me forward. \n\nI didn't want to go. I didn't want to walk naked in front of all the other Candidates. I wanted to crawl up in a ball, cover myself and hide.\n\nDespite my internal protest my body moved forward. My limbs slow and heavy as if moving through a snow drift. The ribbon bound woman had moved back between his legs, curling up like a favored pet. \n\nExposed, I stood before him, one step away. Naked in front of strangers, my mind rebelled but my body did nothing. I should have quaked with fear. I should have trembled before those who controlled my destiny, but I didn't. Instead I throbbed. My hips rocking forward of their own accord, my sex wet once more.\n\nA hand came to rest on my lower back. The Chosen woman had her hand right on the curve where my back met my bottom. The same fingers that had been so brutal on my nipple moved in slow soft circles caressing me gently. The hand slipped down over the curve, her fingers searching between. In the crease of my arse they pushed, spreading and probing, brushing over the pucker of my asshole before plunging into the wet heat of my sex. I cried out, part in pleasure and part in shock.\n\n\"Finally,\" she whispered, her sweet breath warming the shell of my ear, \"I've been waiting to hear your cries.\"\n\n\"Me too sister,\" the Chosen man said from his seat and I wondered how he could have heard her soft whisper.\n\nI felt the vibration of the Chosen woman's chuckle as her fingers slipped in the sticky residue of my shameful sex. I bit the inside of my mouth and even more wetness dripped as her fingers played between my swollen lips. She plucked at my center, fingering my clitoris. It built so quickly, the vibrating need that had overcome me before.\n\nNo.\n\nI couldn't.\n\nI wouldn't.\n\nI had too.\n\nI tensed, rocking my wet sex into her hand, accepting the inevitable, giving over to the feeling when she stopped. I felt both relief and frustration as she removed her hand from between my legs. Those feelings quickly turned to shame as she brought the dripping hand up and presented it to her brother.\n\n\"Look at this,\" she said as she turned her fingers back and forth, showing the dripping residue of my shame.\n\nThe man stepped up from his chair and came forward, his erect penis bobbing with each step. The ribbon bound woman followed on her knees as if connected by an unseen chain. She curled again at his feet and mine.\n\n\"Do it,\" he said and then to my surprise he pushed away the ribbon bound woman and crouched at my feet, his face level with my naked sex.\n\nDo what?\n\nBefore I could ask out loud the Chosen woman brought her hand back between my legs. This time she did not just plunge them into my vagina, this time she brought her other hand around my waist and started to rub at my mound. She circled her fingers around at first creating a sweet building ache that had me pushing back on the fingers resting deep inside my sex. \n\nAnd then....Then... \n\nThen when I thought I understood, when she thought I knew the plan. It changed. The soft circling caress became slaps. Tapping, stinging beats against my mound and the resting fingers became pistons, pushing, thrusting deep inside me.\n\n\"Yes. Yes.\" I heard the Chosen man at my feet say. I looked down, down at the hand that slapped my mound and at the face of the Chosen man who peered intently at my dripping sex.\n\nThe shame. The burning shame of them looking at my wicked sex. Of the plunging fingers and the slapping hand. I could take no more.\n\nNo more.\n\nAnd it happened. I clenched. Arched my hips and exploded, spurting clear hot liquid shame across the Chosen man's face. I cried, as I never had, not for my Father not for my Uncle and not for Bandar. I cried racking sobs of humiliation as I continued to spurt out my orgasm.\n\nWrong. So wrong. How could it feel this good? How could shame and pleasure be so intertwined?\n\nI slumped against the Chosen woman. Resigned, I let my weight fall back on her as I recovered. The room was silent other than the broken pant of my breath. My heart pounded, my limbs were heavy as if sliding in quicksand.\n\nOne word broke me from my fugue. Spoken by the Chosen man, still at my feet. He said, \"Again.\"\n\nI didn't quite understand until the fingers started up again, thrusting and slapping. This time he stood, moving in close until his hardness was pressed up against my belly and the hand that was between my thighs. He took the nipple of my left breast between his fingers and pinched. Hard.\n\n\"Do it. Do it again,\" he commanded and on the strength of his voice and the feeling of his pinching fingers I again spurted out my orgasm. This time across the thighs of his black pants. \n\nThey both stepped back from me at the same time. As if it was a dance. As if it was rehearsed. I had trouble standing, my legs shaking in the aftermath. I wrapped my arms around my waist and gripped tight. \n\nThe air from the hall blew cool on my wet thighs. I didn't dare look around, not wanting to see the other Candidate's response to my repeated disgraceful act. I looked down at the ground, there was a wet spot at my feet. Further evidence of my shame. Of my breaking.\n\nThe warmth of the Chosen woman returned at my back and I turned my head, looking over my shoulder to see what she was doing. She stroked her fingers across my shoulder and then gripped my chin, forcing my head back to look at her brother. When she had me positioned where she wanted, her hand moved down to stroke the side of my breast.\n\nShe spoke, not to me but to him, \"After all this time. Could it be, brother? Should we summon him?\"\n\n\"Not yet. Not without tasting.\"\n\nI couldn't follow their words. I didn't understand what they were saying. Call who? Not a Master. Please not a Night Master.\n\nThe hand that had been stroking my breast came up to my neck. It was then that I realized how she had removed my clothes. Her thumbnail was long and razor sharp. She pushed it against my pulse until I felt the skin break with a pop. I felt shock more than pain as a trickle of warm blood trailed down my neck. She moved around in front of me, she opened her mouth, her lips pulling back. Her canine teeth extended, not into the fang-like extensions I had seen in the painted icons of the Night Masters but still long enough for me to know that she was not human. \n\nNot human. Not Chosen. \n\nWith fangs she had to be a Master of some kind.\n\nI shook. Uncontrollably, my body finally overtaken by fear. A thin stream of blood ran from the cut she had made. It came down my neck and ran down the curve of my breast until it dripped from my nipple.\n\n\"Gorgeous,\" the woman I had thought to be Chosen said. I did not know what to call her now. I had no words. She brought a finger forward and swiped it across my bloody nipple until it was coated in my blood. She sucked it into her mouth and moaned. At the noise the room seemed to vibrate. The fine bronze metal that covered the windows thrummed. Singing in a low-pitched chant.\n\nFrom all around me I heard the gasps and sighs of the other Candidates. Curious, I looked back to see them still kneeling, some with their backs obviously bowed in pleasure. When I looked back the brother had come to stand before me. I didn't even hear him move, his speed, his stealth, it was clearly inhuman.\n\n\"Clear the hall,\" he said to his sister. She clapped her hands and I heard shuffling behind me as the Candidates rose up from their knees. I did not look back as they left. I kept my eyes on him, like prey watching the predator.\n\nHis lips pulled back as he gazed at the blood dripping from my nipple. His jaw jutted forward, the muscles of his neck bulged and his canines descended into long sharp points. Longer than his sister. \n\n\"Show off,\" his sister said leaning into him and stroking a fingertip across one pointed canine. \"He's older,\" she said, answering my obvious confusion, \"I'm too young to bite, that's why I have this.\" She waved the sharpened thumbnail in my stricken vision but I did not look. I kept my eyes fixed on his teeth.\n\nI braced for his bite\u2014my body tensing in fear\u2014but instead came his tongue. It lapped warm and rough across my nipple and through the fear again came the rush of desire. He moaned, rich and deep. It too made the hanging metal sing. He sucked and licked until his head was forcibly pulled back by his sister.\n\nHe hissed at his sister, turning back with fangs extended and his eyes filled black like polished onyx. I stepped back as he fought her hold on his head trying to get to me.\n\n\"Calm brother. Think!\" She tugged hard on his shoulder length black hair. The pain must have helped clear his desire because his eyes went from shining black to a cloudy dark grey and then finally to a clear blue grey. \"This is not ours. She does not belong to us. You know that! What would he do if you took first bite of his Chosen?\"\n\nHe brought his hand up and gently stroked his fingers across his sister's fist which gripped his hair. \"You're right sister dear. I momentarily lost my mind.\" She released his hair and he stood tall beside her draping an arm across her shoulders.\n\nChosen? Me? And who did they speak of? Who did I belong to?\n\nBefore I could ask the gong sounded, shattering my thoughts. The noise filled the Great Hall, bouncing off the walls and singing through the bronze window coverings. I stepped forward until I came up against the wooden chair. I gripped the high back, my knuckles whitening as the sound grew louder and louder. I knew it could not protect me but I wanted something solid in my hand. Something that was real.\n\nThe sound surged loud and strong; so real, so intense I could almost see it as it left the room through the wide open doors. The noise rolled in a continuous loop, never-ending, never losing intensity. I looked over to the gong to see who was hitting it over and over. There was no one.\n\nIt only stopped when he entered.\n\nEverything stopped. The brother and sister fell to their knees, dropping their heads low to the ground in abject subjugation. I stood. Afraid to move. Afraid to speak. Only when my lungs began to burn did I realize that I had not taken a breath since he entered the room.\n\nNight Master Roth. The Dark Prince of Pleasure.\n\nI knew who he was because I had seen his icon. It was brought out once a year. Other Master icons were displayed at every festival; some remained on constant display in the Night Temple. Not Roth. His image was deemed too strong, too intense to risk \n\neveryday exposure. His icon was reserved only for the Midwinter Solstice. It was a dark tapestry of precious stones, inlaid with rubies, onyx and platinum. The Chosen Temple Priest brought it forth to bestow virility on the men. While women were present at the unveiling they were strongly encouraged to avert their eyes. I never had. When told not to look I always did. Never overtly\u2014I hid my curiosity behind my cool fa\u00e7ade\u2014but I always looked.\n\nStanding before me, he seemed somehow smaller than I had imagined. His clothes, while very fine, looked as if they had been borrowed. They hung off his frame. He was large, virile and strong looking but he gave the impression of somehow being less than he once was, as if he had lost much of his bulk.\n\nI did not realize how long I had been openly assessing him until I looked up and met his gaze. He seemed bemused at my appraisal. He did not smile but at the corner of his mouth there seemed to hide a hint of a smirk. \n\n\"This one?\" he asked and I gasped at the sound of his voice. It vibrated through me as if I were a string he had just plucked. The amusement was gone; as he looked me over I wondered if I had seen it at all. His black gaze burnt cold like the bite of a wicked winter wind. I was grateful for the chair that came between us. I leaned into it, gripping my flimsy shield.\n\nHe asked again louder this time, \"This one?\"\n\nThe brother stood up, his erect cock bobbing out from the open placket of his breeches. He answered the Dark Prince but I did not hear what he said. I could not hear over the rush of blood in my head and the surge of adrenalin through my veins. I had to stop this. I had to stop this now.\n\n\"I'm not,\" I said quietly at first and then after I cleared my throat I said it again, this time louder, \"I'm not.\"\n\n\"Not what?\" the Dark Prince asked taking a step towards me. \"Not mine?\"\n\n\"No Sire,\" I answered with my head reverently bowed, \"I am most humbly yours Dark Prince, as is every subject of Vandarra, but...I do not think that I am what you seek.\"\n\n\"Really? And what do you know of what I seek?\" The seductive menace of his tone struck me, hitting deep in my sex.\n\n\"I know nothing Sire. Nothing. I am nothing special. Ask Sire. Please ask. Around Hawthorne Shire they will tell you I am not suited to the Dark Prince of Pleasure.\"\n\nHe did not look at me, instead turning to the brother. \"Is what she speaks the truth? Is she nothing special?\"\n\n\"If I may Prince Roth?\" The sister spoke, coming off her knees at the Dark Prince's nod.\n\n\"She hid well Sire. She is adept at hiding. She shields her true form, but when she is tested she reveals herself.\"\n\nWhat do I reveal? What self is there hidden? I felt a surge of unaccustomed anger at her words.",
        "\"Reveal her to me then,\" the Dark Prince said and settled himself down on the other wooden chair to my left that butted up against the vast scarred table. \n\nThe brother came forward, not the sister as I had expected. He stood before me his cock still jutting out of his open pants. He wrapped a hand around the shaft, and rubbed it low on my belly. I looked at the Dark Prince and bit back a moan. I knew he watched as the brother lowered a hand to splay his fingers around my thigh. Maybe I should have struggled, protested when he lifted my leg and placed my foot on the seat of the chair, but I couldn't speak. I was too focused on the eyes that watched me and the hard shaft that thrust out from his open fly. He pushed my leg roughly open until I was splayed wide, my wet and swollen sex displayed for all the watching eyes. \n\n\"Watch,\" he said as he placed the heel of his hand on my mound and pulled up, revealing the wet pearl of my clitoris. I looked down, down to see what had him so focused. He'd come in closer, until the fat head of his penis was resting on my stomach. He pushed my leg back on the chair and bent his knees until the helmet of his engorged shaft was resting on my exposed clitoris. \n\nHe couldn't. He wouldn't. Not here, not here in front of him.\n\nHe did. He gripped his cock at the root of the shaft and began to slap the heavy swollen head down on my sex. At the same time his hand pulled up hard on my mound.\n\nSlap. Pull. Slap. Pull. Slap. Pull.\n\nOver and over he continued, growing rougher with each cycle. I could not help but let my head fall back as he slapped and pulled. Relentlessly beating down on my sex. The fat wet head of his cock slapped my exposed clitoris and fell lower into the wet trough of my sex. The shame. The edge of pain. The knowledge that I was watched. Watched by him. All these threads wove together into a vicious orgasm. My muscles contracted and with each spasm I spurted out juice that coated his cock and abdomen. \n\n\"Bring her to me,\" Roth said.\n\nI was dragged by them both, bleary eyed and loose limbed to stand before him. One on each side they held my arms in a fashion similar to how I had been brought here today by my Uncle and Bandar. \n\nI shook them off. Not wanting to be held by them. Instead choosing to stand before him of my own accord.\n\n\"What do you know of the Night Masters?\"\n\n\"Night Masters are immortal. They rule Vandarra in their infinite wisdom. They take the blood of the few and in return offer protection to the many. Those Chosen are most honored. Blood Service a privilege.\" I spoke the words I knew by rote.\n\n\"Yes we need blood, but some of us require more.\"\n\n\"You need more Sire?\" I wondered if that was the reason why he seemed lacking. Why his clothes were loose.\n\n\"I am the Dark Prince of Pleasure. I can survive on blood alone, but to thrive I also need pleasure.\"\n\n\"There are many who would be most honored to pleasure you my Prince.\"\n\n\"Yes, I can take from many, but I have long sought one.\"\n\n\"One,\" I echoed.\n\n\"Yes. One,\" he murmured and brought forth his hand. Touching me for the first time. My back bowed. My skin singed at the fleeting touch. I wailed out in pleasure such that I had never known.\n\n\"One Chosen for me. You, Talia of Shire Hawthorne. You.\"\n\nHis mouth opened wide, his lips pulled back and fangs descended. I felt not fear but a wonderful anticipation. I knew somehow what he wanted. What he needed. I brought my leg up and rested my foot on his thigh, leaning in to present my wet sex to his mouth. His teeth came down, piercing the skin with a brutal bite. Blood flowed hot and wet between my legs, his tongue came out long and rough to lap it from my sex. At the first taste he groaned and the floor beneath me began to shake. He ceased lapping and began to suck hard. I pushed harder against him trying to stuff my whole sex in his mouth. The burning ache of his sucking mouth shot through me, it shattered my resolve, it broke through my shields until I was stripped raw before him.\n\nI was his. I was Chosen.\n\nAnd with that thought I came, adding my juice to the blood he sucked. He yelled, pulled off my sex and threw back his head. His breeches split at his crotch, revealing his erect cock. It pulsed before me. Without thought I pushed him back, his fangs released from my sex with a spray of blood. I had to taste him. I fell to my knees before him and took his shaft in my mouth just as it spurt out streams of white cum. I sucked it down as if I needed it more than air. I only released him when he pulled me away. If he had not I doubted I would have let him from my mouth. \n\n\"Talia,\" he said and just the sound of my name from his mouth was enough. I began to shudder, to come once more. He dragged me to my feet, pressing my convulsing sex to his mouth in time capture the juice that spurted forth. He groaned out his own pleasure as he nestled his mouth against my sex licking me clean of my juices and blood.\n\nWhen he finished he rested his head against my belly. I ran my fingers through his hair feeling an overwhelming need to comfort him.\n\n\"My Chosen,\" he murmured against the sweat damp swell of my belly.\n\nI was free. I felt strong and ready. I was not foolish. I was not hidden. \n\nI was Chosen.\n\nThrough me swirled all the feelings I had long since denied. Anger. Hate. Love. Passion. Desire. Need. Want. I let them all come. I let them all release.\n\nHe groaned against me and cried out as if he too could feel the swirl of emotion.\n\n\"Mine,\" he looked up at me with shining black eyes.\n\n\"Yes,\" I answered him with a truth that sang from my very being.\n\nThe hall began to grow dark and I wondered how long we had been standing there, clutching each other. In the half light of evening I pondered that my day had both begun and ended with a realization of irony. The end irony being the most poignant\u2014being forced to the Choosing had actually set me free. I laughed at the thought, and of how furious Bandar and my Uncle would be to know of the role they unwittingly played in my release.\n\nFrom beneath me, still nuzzling my belly and sex, I heard the Dark Prince say, \"You will explain to me later my Chosen what is so amusing.\"\n\nI looked down at his swollen blood smeared lips and felt a surge of love. Of peace and equality. I was fearless. I was free. I laughed at the feeling and said, \"Yes my Prince I will....if I should so choose.\"\n\nHe laughed too. And I let myself like the sound.\n\n----------------------------------------------------------\n\nI hope you enjoyed The Choosing. I love to hear your thoughts so please leave a comment if you've got something to share.\n\nAnd thanks to Gatorhermit and Mistress Red Pen for his suggestions and her grammar BDSM.\n\nOh and rate me please...I love it.\n\nDarcy\n\nxx"
    ],
    "authorname": "darcysweet",
    "tags": [
        "spanking",
        "submission",
        "vampires",
        "oral sex",
        "blood sucking",
        "fangs",
        "voyeur",
        "public masturbation"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing"
}