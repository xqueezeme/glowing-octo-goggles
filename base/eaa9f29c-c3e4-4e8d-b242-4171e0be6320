{
    "title": "TRC - Searching for the Sky Ch. 10",
    "pages": [
        "Welcome back!\n\nFor those of you reading The Runesmith Chronicles for the first time I recommend going back and starting with the first book The Runesmith Chronicles (it's actually Oni and the Farmer but it's too late to change it here :P). Mostly so you have a better understanding of how things like the magic system works and what's going on as I often reference earlier chapters.\n\nI update my Bio with the latest Chapters and projects I'm working on each time I put up a new post.\n\nAs always votes and feedback are greatly appreciated!\n\nEnjoy!\n\nBlu\n\n---\n\nEdited/Proofread by: oldfart and 2muchdiggity\n\n---\n\nChapter 10\n\nIt wasn't long before Kal and Sandy discovered that their activities while traveling were impractical for such a long journey. After a few stops, he pulled his pants up and respectfully declined the golem's offered rear end, for now.\n\nThough disappointed, Sandy accepted the promise of pleasures to come. The golem then secured him in the harness once again before dropping them into the floor of the small cave. After a quick pause to get her bearings, they continued their way north.\n\nLater on, Kal was glad for the pleasant distractions as he took her up on her offer a couple more times. The three days with Gerda had been relatively dull, except for the run-in with the mushroom girl. The first half of his week with Sandy was turning out to be worse. If he could see through rock like the golems could, perhaps the trip might have been more enjoyable. It wasn't long before hours of darkness became boring. The occasional breaks for resting and emptying his bladder soon felt like small havens for Kal's sanity.\n\nBy the end of the third day, he was longing for the surface and running alongside Daxas and her pack.\n\n---\n\nIt took almost three days for Elta to make all of the preparations necessary after Perra and the wolf sent her back to town. The oath had done little to disrupt her daily life as she continued to preach about the dangers of magic from a source other than the Goddess and the abomination that monster girls were. Since her experience with Perra and Daxas, those sermons felt empty and weak.\n\nOn the third day, she finished her prayers over the large magic circle she had drawn onto the floor of her home. She went over the large circle she had drawn on the floor, carefully making sure not even a single line was out of place. 'Commune' was a spell reserved for priests and priestesses who had been in the church far longer than she. Even so, the cleric had come to the conclusion that this was the only way out of her oath to the wizard's woman. Only a God or Goddess could dissolve an oath of this nature and the only way they would do that was to ask them.\n\nBolting the door to her house, she washed herself in water she had boiled, filtered, blessed and infused with scented oils. Without drying herself, she stood naked in the middle of the circle, being careful not to drip on any of the symbols within. She began the spell's chant while summoning two magic circles in front of her outstretched hands. She pressed one to her chest between her breasts and the other over her womb as the chant ended.\n\nThe circle on the floor lit up, beginning as a faint glow and growing in intensity until it became blinding. Elta's eyes closed against the glare and a moment later she felt as though her entire body was violently jerked to the side. Unconscious, the cleric crumpled to the floor.\n\n---\n\nPerra looked to the south towards Telsin. While unintentional, something in Elta's oath let the farmgirl sense where the woman was. Frowning, she wondered what the implications might be of the cleric suddenly feeling like she was extremely far away. Mere seconds ago, the woman had been in town.\n\nExperiencing a small burst of pride, Perra couldn't help the smile forming in the corner of her mouth. That Elta had somehow managed to get around all her safeguards was mildly impressive. At the same time, she worried about what troubles this might bring for her and her family.\n\n---\n\nAs the light faded away the cleric found herself in a small field. A hundred paces or so in every direction the grass and wildflowers faded into a shining white mist. As she looked about, a voice called out from behind her.\n\n\"Ho, there child! I must say, I'm surprised you were able to get here so soon.\"\n\nLetting out a small shriek of surprise, Elta whipped around, covering her breasts and sex protectively with her hands.\n\n\"No need for all that little one, you'll come to no harm here.\" The speaker was an older woman who appeared to be closer to her mother's age. Long brown hair was pulled back into a ponytail held in place by a strip of leather. Small wrinkles formed on the woman's kindly face as she smiled at the cleric. The motherly visage was marred only by her piercing, otherworldly, crystal blue eyes. A loose tunic hung from her shoulders, the neckline of the large shirt falling off of one shoulder and threatening to expose one of her breasts. Elta stifled a frown as she noticed the woman wearing a man's slacks. \"I-I came to speak with the Goddess,\" stammered Elta.\n\n\"So you did,\" replied the woman. She waved a hand and a tree sprouted next to her growing to full size in a matter of seconds. \"Sadly, the Goddess is a busy woman and you are here far earlier than expected.\" The woman sat down in the shady area provided by the tree and patted the ground next to her. \"Come, sit. Tell me what questions you had for the Goddess. Perhaps I can give you the answers you seek.\"\n\nThe cleric shook her head as she walked the short distance to the tree. She let her hands fall to her sides, the lady before her had just made an entire tree but hadn't given her clothing. Apparently, she was to remain naked. \"Only the Goddess can help. I've been trapped in an oath and she's the only one who can remove it.\"\n\nStill smiling, the woman shook her head. \"She won't.\"\n\nElta's face fell, \"Why not! That whore of a woman threatened to kill me if I didn't accept!\"\n\nThe woman nodded, \"And you chose life instead of coming to join us here.\"\n\nThe cleric was appalled, \"You would have rather I chose death?\"\n\n\"Absolutely not. I'm saying that you had a choice. You chose to live under the terms of the oath. The Goddess will not free you from that.\"\n\nCrestfallen, Elta sunk to her knees, \"That makes sense, I guess.\"\n\nThe woman raised an eyebrow. \"This is a pleasant change, I'm used to more pleading and bemoaning of one's fate. What else did you wish to ask, child?\"\n\nGiving her a weak smile at the compliment, she asked, \"Are monster girls evil?\"\n\n\"Some are, but I think the question you were trying to ask is if they are evil in nature and the answer is no.\" The woman sighed, \"I hate answering that question. So often it means that the one asking it will be lost to us shortly.\"\n\n\"Then why does the High Priests and Priestesses say that they are abominations?\"\n\n\"Because they are. You know already that they were created by a wizard's spell and not by a god or some natural process. Some of the nature deities are petitioning the rest of the gods to see the monster girls as part of the new natural order. However, the first generation was born of magic and not a womb, so the Goddess's opinion is unlikely to change.\"\n\n\"Then why allow the church to lie to people?\"\n\n\"She doesn't care about monster girls, how the humans decide to deal with them is entirely up to them. Laying waste to the soulless creatures would be no more than restoring balance.\n\n\"They truly don't have souls?\" Something about what the woman said felt very wrong. Elta had traveled and bathed with the wolf and dog girls. If they didn't have souls it seems she should have been able to tell.\n\n\"The new ones may have them but that's only after hundreds of years of stealing small pieces from human men and passing them on to their children.\"\n\nThe woman's words could have been copied from one of Elta's religious texts. Still, something didn't settle right with her. \"'One shall not punish the son for the father's transgressions',\" she quoted, \"is this phrase not true? If previous generations were the ones to steal parts of men's souls should this generation of monster girls be vilified for it? What about the immortal ones or those with very long lives who have only seen a couple of generations? What about them? Do those not have souls?\" Elta put a hand to her head, feeling a headache coming on.\n\n\"All of your questions are irrelevant,\" said the woman. \"No monster girl worships the Goddess. Therefore, she has no interest in them. Change that and she might hear you out on changing the decrees of the church. Show her there is some benefit to making changes which could damage the foundations of her church.\"\n\nElta blinked rapidly in surprise, she hadn't considered the consequences of such a declaration. There was no nation or demon army standing against the church. Monster girls were touted as the biggest threat to humans. Men came to the church believing that it would save them from kidnapping. Women often joined to get back at monster girls because one stole their man.\n\nThe church's attitude towards monster girls propagated through this constant litany of fear and hatred. She was actually one of the few in the capitol who found solace in the Goddess's teachings without having some monster girl related tragedy. How many would be lost if it became known that the Goddess now accepted what had been previously declared demonic and evil?\n\n\"You are beginning to understand, I see. Change must first come from the humans and monster girls before you will sway the Goddess. While she would accept the monster girls if they were to begin worshipping her, the goddess will not sacrifice those who have already declared their faith.\"\n\n\"Why would she accept them? You said she considers them soulless and useless,\" Elta's hand went back to her head, the headache was getting severe.\n\n\"The Goddess wasn't always what she is today. Do you know what she was originally a goddess of?\"\n\n\"No, what?\" she said wincing at the pain caused by her own voice.\n\n\"She was the goddess of fertility. Knowing what you do of monster girls can you see now why she would accept them?\"\n\nElta nodded, the pain in her head making her drop to her knees next to the woman.\n\n\"Come, child,\" she said lifting up one side of her shirt and baring a breast. \"Drink from me and restore yourself, you've been here too long.\"\n\nThe cleric was in no shape to argue. Leaning over, she let the woman guide her head to a nipple. The first flood of milk into her mouth made her forget about her pain. Within moments her eyes closed in sleep though her mouth kept moving. The woman took a moment to situate the suckling cleric's body more comfortably then leaned back against the tree wearing a happy smile.\n\n\"You could have let me take care of that,\" said a woman who appeared next to the tree. Looking down at the human she asked, \"How much are you going to let her keep?\"\n\n\"Not much, only her desire to be free of the oath. The rest I will bury inside her mind and see how she acts upon it.\"\n\n\"What makes this one so special?\"\n\n\"The woman who trapped her in this oath is bound to a young wizard who strongly believes that monster girls and humans can live together. I'm curious if he is right.\"\n\n\"And the cleric?\"\n\n\"She will need to learn to accept herself for who she is and accept monster girls as well. I believe the wizard's woman has already taken steps to take care of the first part. If the wizard's settlement comes about, I plan to have a presence there. A human with a libido that rivals those of the monster girls will be a perfect envoy.\"\n\n\"Then why tell what you thought about them back when they were first created?\"\n\nPiercing blue eyes gazed tenderly down at the suckling woman, \"To keep her safe. If she went running to a High Priest or Priestess with what I want her to do she would be branded a heretic and cast out or killed. Now she has enough doubt that she will move cautiously. As I told her, I won't sacrifice those who believe in me already.\n\n\"Her body is having difficulty from being here for so long and this will take some time. Go back and make sure she will be safe. Now leave me, altering memories is difficult and I don't wish to be distracted.\"\n\n\"As you wish, Mother,\" said the second woman before vanishing.\n\nThe Goddess enjoyed the feeling of her breast emptying for just a few more moments before diving into her task.\n\n---\n\nElta awoke in her bed, and unfamiliar form lying next to her. It only took a moment to guess it was Perra by the large belly pressing into her back. She sighed heavily at the knowledge that she was still trapped in this damnable oath.\n\n\"Yer a right fool ye are, cleric,\" came the voice of the female innkeeper. \"Winter's on the horizon an' we find yer sorry arse dripping wet an' nearly shiverin' ta death from the cold.\" Raising her head, she saw Kahrin sitting at her dining table, illuminated by the light from the fireplace. Confused, she looked at her door to see the bolt had been ripped out of the wall. That explained Kahrin's presence, Bren was the only man in town strong enough to destroy a lock in such a manner, by himself at least.\n\n\"I'm not knowin' how Lady Perra knew ye were in trouble. She kept mumblin' 'bout ye bein' her responsibility ev'ry time I asked. Don't make no difference, without her ye'd be dead on the floor right now,\" she said taking a sip of some steaming drink.\n\nElta just nodded and laid her head back down. Behind her, Perra mumbled something in her sleep and draped an arm over the cleric protectively.\n\nKahrin warmed her hands on the mug of spiced cider as Elta's breathing became deep and regular. Despite Perra's insistence that the woman was no danger to her, the innkeeper wasn't about to let her pregnant friend and occasional lover be alone in the same room as the hateful cleric. Taking another sip, she looked out the window. It was going to be a long night.\n\n---\n\nKal stretched as he got up from his bed. It had been a long boring night with the golem resting up for the last leg of their journey. Sandy allowed him to sleep as they traveled, only waking him up as they entered the medium-sized cavern. After releasing him from the harness, she gave him a quick grope through his trousers and promised to take care of him after sleeping for a while. The golem then walked over to a wall and promptly made a stone cocoon similar to her sister's. He was slightly surprised that her tiredness managed to override her sex drive.\n\nWith nothing to do until Sandy got up, he asked Ria for his tent. He figured he may as well get some work done as he threw the fabric square on the ground. Speaking the command word, Kal watched as the shelter began to unfold and assemble itself.\n\nEntering his magical abode, he stopped for a moment at the bottom step. Disappointment that he was the only one there seeped into his expression as he looked about. For the last few months, it had been unusual to see the shelter empty. Feeling a touch of sadness, Kal went around and spoke the elven words to take down the walls and dismiss the extra beds.\n\nWhen only his bedroom remained, he went to Ikuno's alchemy station. Mixing the mushroom girl's aphrodisiac powder into a mild solvent he set up a distillation apparatus to purify it. In a couple of hours, he would be able to tell if it was of a high enough quality for his inks. Kal wasn't expecting much as mushrooms were fairly common on the surface. However, glowing fungi were rarer, so it was worth looking into.\n\nWith the flask simmering over a magical flame, he made his way over to the library next. Memories of the last moments before Ikuno returned to her shrine caused his breath to catch as he walked in. When setting up the room he put the bookshelves and table in the same positions as when they were in Ikuno's cave. Now, every time he entered the room, he felt that might have been a mistake. Even so, after all of these months, he still had yet to change it.\n\nGrabbing a book down from one of the shelves, he removed a large piece of folded parchment from the cover. Laying the paper out on the table, Kal looked down at what he had put together for the beginnings of his flight rune.\n\nThe book he'd stored the flight rune in was a novice's tome at best. The drawings were shoddy, and the spell descriptions ranged from poor to incomprehensible. Luckily, he could see the flows of magic. This granted him the ability to take a rune that was so poorly made it barely worked and turn it into something functional. It also made even this sad excuse for a grimoire a valuable resource when searching for the missing components of the flight rune.\n\nUnfortunately, that particular book, as well as the next, failed to offer up anything new. Most of the literature currently on the shelves was like this. For many, this was the first time they ever sat on Ikuno's bookshelves, spending centuries useless within the oni's bag of holding. The third book was of equally poor quality as the first but focused solely on detection spells. Kal hadn't bothered much with detection spells yet. His ability to see magic worked as a means to both detect magic and see things made invisible with it. So far, he hadn't had any real need for things like detecting evil or lies. Back home there was little worry about his women being evil and the people of Telsin were an honest folk.\n\nStill, something caught his eye. Kal looked closely at a glyph common to most of the runes. Its name was Scio or 'know' and it acted to give information back to the caster. The author used the sigil in everything he could from telling temperature to the caster's depth. However, he wasn't going to learn anything from this third-rate spellbook. Kal recognized the rune from when he first touched on detection spells, back when he began learning magic. He needed some of those tomes.\n\n\"Ria,\" he called.\n\n\"Yes, Master Kal? How may I help you?\"\n\nKal frowned. He considered Ria as more of a friend than a magical item and the honorific didn't sit well with him. \"I think I know the answer to what I'm about to ask. I'm looking for one of the original books on the shelves that dealt with detection magic, the glyph for 'Scio' specifically. Is there any way for you to retrieve it?\"\n\nRia started shaking her head before he finished. \"If you knew what book it was then I could pick it from your thoughts and get it. The best I can do right now is getting all of the books that were on the bookshelves when you first stored them.\"\n\nThe mage groaned. \"That means I'm going to have to go through them to find the one I saw this in,\" he said tapping a drawing in the open book in front of him.\n\n\"Sorry Kal, it's the best I can do at the moment,\" said the sprite.\n\nKal looked up at his companion. There seemed to be a bit more sadness than necessary in her voice. \"Are you okay, Ria? I wasn't really expecting you to be able to do that for me. I was only asking in case you had some special exception for books.\"\n\n\"It's not that,\" she said waving off his concerns. \"I seem to have gotten a little spoiled flying alongside Dax and the girls. I didn't realize how much freedom you gave me as we were coming back. Now it feels like I'm cooped up in there.\"\n\n\"Sorry, Ria. There isn't much I can do until we get back to the surface or to the dwarven stronghold.\" He examined her face closely, \"For some reason, I feel like there's more to it than that.\"\n\nThe small avatar flitted up and kissed him on the nose, \"There is, but it will have to wait until we are traveling alone.\"\n\nKal dipped his head in acknowledgment. \"If you want to wait, I'll respect that. Just keep in mind I'm still concerned about you.\"\n\n\"I appreciate that, very much. Now let's get those books you were needing.\"\n\nRia changed out all of the lower quality books on the shelves with Ikuno's good ones. The mage spent the better part of the next hour paging through tome after tome until he finally found the one he had been thinking of earlier. Flipping the spellbook open to the section about detection magic, he began carefully studying the different runes. 'Scio' showed up in every rune so the author of the other grimoire at least got that right.",
        "Sitting back in his chair he considered what kinds of things he might specifically need to know when flying. An image of Felli's mountain came to him, along with the thought of crashing into it headfirst. Knowing how close to the ground he was would be useful, along with what was in front of him. Looking over at the parchment on the table he couldn't help but smile, Kal could already see where it would go within the flight rune.\n\nThere was another place that used the glyph, but it appeared intertwined with two others. As he filled in the symbol for 'Scio' the other two began to look familiar. With a whoop of excitement, Kal drew more ink from the inkwell and filled in the symbols for magic and energy. Smiling, he sat back in his chair looking over his work with pride.\n\nA moment later his expression turned to a frown. It was too complex.\n\nKal was confident in his abilities but looking at how the three glyphs intertwined into a single rune left him thinking there was no way he could have just come up with this on his own. He noticed that each of the runes he had filled in were ones he had been exposed to previously. Looking over the rest of the larger flight rune he could see two areas that tickled his memory. He knew that he had seen something vaguely similar but couldn't remember where.\n\nOne area of the flight rune was an exception. The harsh angles of the glyphs were completely foreign to him.\n\nKal glared at the flight rune, his lips pursed together in anger. He thought back to the day in Ikuno's pool when he received the flash of insight that let him begin work on the complex piece of magic before him. The mage had managed to come up with bits and pieces of the flight rune later that night when he finally had access to something he could write on. Unfortunately, time had taken a toll on his memory and he was only able to dredge up broken impressions of what went where. When he was done it hardly looked like a rune at all.\n\nNow that things were starting to come together, he had a better idea of what he needed to complete the runic spell. He also knew beyond a doubt that he had never seen the angular glyphs before. Kal's conclusion made him want to rip the parchment to shreds and throw it into the fire pit out in the main room.\n\nThe flight rune wasn't his.\n\nStanding up, he paced back and forth trying to cool his head. For the past year, he had believed the rune before him was a testament to his growing knowledge. Now he saw it as a handout, someone pitied the young and growing mage and handed him a rune to let him fly.\n\nStopping, Kal looked at the parchment again. No, that wasn't right. Ikuno had said that making two runes work together was difficult. Getting three or four to mesh into a single spell was something only a highly experienced magic-user could do. The flight rune currently contained six runes and he had areas for three more.\n\nHe leaned over, his hands resting on the table as his eyes darted around the paper before him. This was far from pity. This was a challenge.\n\nThe mage had no doubt that many magic-users would have given up on this long ago. He had to admit that if he weren't able to see how magic moved through and between the different glyphs, chances were good he would have given up as well. It wasn't as though the symbols fit together like puzzle pieces, there were hundreds of potential orientations for each one. Seeing the magic flows let him align the glyphs, and sometimes even interlace them, so the rune wouldn't shatter when powered.\n\nKal closed his eyes, recalling the day he got the fleeting image of the flight rune. That was the day of Adalena's conception and all of the women were worked up because of it. Ikuno was actually the only one he didn't make love to that day. Instead, they'd had the sparring match and that was the first time his eyes glowed blue...\n\nThat was it.\n\nGiven the extremely brief flash of the flight rune's image, only someone with his ability, or a spell that mimicked his ability, could assemble and complete it from such little information.\n\nUnless they were a prodigy, like Prentas.\n\nThe mage shook his head and sat down in his chair. Now he was comparing himself to the genius mage who created the monster girls. If he kept this up he'd be so full of himself he wouldn't fit through the dwarven tunnels.\n\nQuestions flitted through Kal's mind. Who gave this to him? Was it Ikuno? She was there when it happened so she would have had the opportunity.\n\nHe quickly dismissed the idea. Their bond didn't allow her to keep secrets of this nature. She could hide her intention to jump his bones later if she wanted it to be a surprise, but Ikuno and Bea were open books when it came to bigger secrets.\n\nThe other big question was: Why? What was the purpose of giving away a rune so powerful that only one wizard, that he knew of, had mastered it?\n\nKal sat there and rubbed his temples, frustrated that he didn't have any answers. Yet.\n\n\"Ria, switch the books back out for the ones I was pulling from earlier please.\"\n\nThe sprite sat on the back of the chair across the table from the young mage. She had stared wide-eyed at the human for the last few minutes, unwilling to speak as a range of thoughts and emotions ran through the wizard. It was a relief when he calmly tasked her with switching out the books. For a few seconds she had wondered if the man was about to explode with rage.\n\n\"Sorry you had to see that,\" he mumbled in apology as specks of light flew to and from the bag on his hip. He felt bad that he had forgotten she was even in the room.\n\nRia only nodded in response, she could ask what had gotten him in such a state later.\n\nKal plucked another book off the shelf and began leafing through it.\n\n---\n\nThere was a soft tapping at the door of the farmhouse. Perra already knew who it was as she opened the door.\n\n\"I'm leaving,\" said Elta.\n\n\"Why?\"\n\n\"I can't... I can't do this. I can't stand before the believers and tell them they should hate and fear monster girls. There's no conviction behind my words, no purpose. I need to find my path in a world where the adversary in front of me has vanished and left me stumbling into the unknown.\"\n\nPerra reached over and lifted a thin belt off of a hook next to the door. She hadn't been able to wear it in quite a few months because of her size. A small sheath held an equally small utility knife which she plucked out before hanging the belt back up. Elta let out a small shriek as the pregnant woman drew the edge across the tip of her finger.\n\n\"Heal me, please?\" she asked, holding the finger out to the cleric.\n\nIn a flash, Elta summoned a magic circle and healed Perra's finger. \"What is wrong with you!? Why would you do that!?\"\n\nPerra stuck her finger in her mouth and sucked off the little bit of blood that was quickly drying. \"Your goddess hasn't abandoned you during this change of heart,\" she said checking her finger. \"Perhaps, she approves of your new direction.\"\n\n\"Perhaps she thinks this is only temporary and is waiting for me to come to my senses,\" snarled the cleric, still upset about the woman's stunt.\n\n\"Do you really believe that?\"\n\n\"No,\" she growled through gritted teeth. The admission felt like a punch in the gut.\n\n\"I want to let you go, Elta, but I'm afraid to.\"\n\n\"Why,\" she sneered, \"It's not like I can tell anyone about you and what you do here.\" The cleric's face and voice softened, \"Besides, I'm not really sure I want to anymore.\"\n\n\"That's a good sign, it means we are one step closer,\" said Perra, moving around the other woman and stepping to the edge of the porch. Facing north she brought her hand to her mouth and whistled.\n\n\"Closer? To what?\" asked the bewildered cleric.\n\n\"Releasing you from this oath,\" the farmgirl replied.\n\n\"Why not just tell me to believe everything you say and to be your friend until I die. You know perfectly well you could do it and I'd happily believe my life is better,\" said Elta, her anger plain on her face.\n\nPerra sighed, \"Yes I could, but I won't. Ordering you to do something like that would have no meaning. I have no desire to destroy who you are, only to open your eyes.\"\n\n\"You've already destroyed who I am. Why do you think I feel so lost?\"\n\n\"Fair enough. But you are lost because you are still you...\" Their conversation was interrupted by a high-pitched shriek of joy as Ruce landed in front of the farmhouse. The noise hadn't come from the harpy with the falcon markings but from the ball of fluff hanging tightly to her back, who was now giggling with happiness.\n\n\"Down Lada,\" said the harpy as she squatted. Lada let go of her mother's feathers and slid down her back. The chick took a quick tumble as she hit the ground but bounced back up on her bird-like feet as if it hadn't happened. Letting out another excited shriek she raised up her wing-like arms and wobbled towards Perra's outstretched arms. \"How can I help you, Lady Perra?\" Ruce asked, glancing warily at the cleric.\n\n\"I mean you no offense, Ruce. But I need Kuto to take care of something important. Would you deliver a message for me?\"\n\nThe falcon nodded and looked down at her daughter. \"Careful, Lady Perra, it's almost time for her next meal.\"\n\n\"Scamp!\" cried Perra, laughing as she pulled the little girl away from her chest. Lada's wiggling had hidden the chick's attempts to get at the meal contained within Perra's dress. \"That's not for you little one but I won't mind sharing once my own is here.\"\n\n\"You would share your child's milk with one of them?\" asked Elta, incredulous.\n\nPerra rubbed noses with the little girl making her giggle. Without looking over at the cleric she asked, \"If you had milk and your nephew was hungry would you not offer your breast? These girls are like my family. Besides,\" turning the little girl's head to look over at Elta, she pressed her cheek to the chick's, \"how could I say no to this cute little face if she was hungry?\"\n\nBefore the woman could respond Lada raised her arms towards the cleric and leaned forward as though she wanted to be held. Startled by the little girl's behavior, Perra looked over at Ruce. However, the harpy's gaze was directed at Elta.\n\n\"You understand what will happen to you if you hurt my chick?\"\n\n\"Wait, what? I don't want...\" the cleric held up her hands defensively in front of her. Lada saw it as an invitation and nearly jumped out of Perra's arms. Instead of taking a chance on the chick's sharp little talons getting purchase on her arm, she stepped forward and pressed the child into Elta's chest. The priestess's body went stiff as a board, but her hands came up instinctively to cradle the little girl.\n\n\"Careful of her feet, they may be small, but they're still dangerous,\" warned Perra.\n\nEyes that seemed a little too large gazed up at the woman. Fine white down covered the child's body except for her face and legs. The down was slightly longer on her head where they turned into the harpies' hair-like feathers and a bit more sparse in other places, probably for easier cleaning. Elta carefully shifted Lada into a more comfortable hold, amazed at how light the child was for her size.\n\n\"She hardly weighs anything, are you producing enough?\" she asked Ruce looking down at the woman's smooth chest.\n\nRuce stifled a laugh as Perra rolled her eyes. \"Those cause problems when we try to fly,\" said the harpy. \"You'll see in a minute whether or not I'm producing enough. Lada will need to be fed before I deliver Perra's message.\"\n\n\"Wait... you don't...\" Elta stretched out her neck and let her tongue hang out as she made a slight gagging noise.\n\n\"What? Eww! No!\" cried Ruce, aghast. \"I have... wait.\" The harpy took a moment to collect herself before turning to Perra, \"Can we go in the house? I'll just show her.\"\n\nPerra stepped back and allowed the falcon to pass. Elta held the chick out expecting the harpy to take her.\n\nRuce smiled at the woman, \"Human arms are better for carrying little ones. Since she seems to like you, would you please bring her in for me?\"\n\nThe cleric gave a slight nod and the harpy continued inside.\n\nPerra held an arm out, inviting Elta and the chick into her house. She was glad the cleric couldn't see the look of glee on her face as she closed the door behind them.\n\n---\n\nElta looked around, the cavern was the size of the entire town of Telsin. Small rocks, similar to the one she found on Perra's stove, were scattered about providing light. The harpy named Felli explained that Kal and someone named Ikuno made the stones to help the harpies clean out the caves easier. Despite the fact the cave was set into the heights of a snow-capped mountain, the floor of the cavern radiated warmth. Besides her own breathing, the only sound was the flowing of water coming from the pool at one end. After taking a deep breath of the clean mountain air she knelt down and began setting up the small tent Perra had sent with her.\n\nIt had been a day of revelations, something she could do with less of in her life right now. Ruce suddenly growing breasts so she could feed her chick had only been the beginning. Once the little girl was fed, her mother put her down on the floor and the darling little girl unsteadily made her way back over to the cleric. It wasn't long after Elta finally picked her up that the chick fell fast asleep in her arms.\n\nWhile the child slept, the harpy flew off on Perra's errand. Elta was shocked that a monster girl would leave her child with two humans. The farmgirl explained that Ruce, Ghoss, and Kuto saw her in very much the same way she saw them, like family.\n\nThe falcon brought back three other harpies with her. Kuto, whom she remembered from before. Ghoss was slightly larger than the falcon with a white breast and brown feathers that had white edges on the tips. Last to enter was Felli, who resembled a sparrow hawk with her rich blue, orange and tan feathers.\n\nFelli walked up to her, her face severe. A moment later Ruce came over and took Lada from the cleric.\n\nThe sparrow hawk glared at the woman. \"I am Rone and your sister's mate,\" she declared. As the priestess reeled in shock, Felli grabbed the woman's hand and placed it on her stomach. \"I'm also carrying your niece.\"\n\nElta fainted.\n\nWhen she came to a minute or so later Perra was yelling at Felli for trying to scare the cleric to death. Felli cowered in front of the human and explained that she did exactly what Marda had told her to do. The other harpies quickly backed up the sparrow hawk's story. They explained that when they told Marda and Rone of Perra's plan, her sister had given Felli step by step instructions, even making sure that the harpy had the proper look before letting them come back.\n\nAs all of this was going on, Lada woke up from the noise. Since her mother was talking with Perra and the other harpies, she wiggled her way out of her mother's lap and wandered over to the only person being quiet. Giving the cleric a sleepy smile, she raised her arms. Elta picked up the chick and laid her in the crook of her arm, the little girl falling asleep almost immediately. When the other women got particularly loud, Lada's face screwed up for a moment before settling back into sleep.\n\nElta placed a hand on the side of the child's head and pressed it to her breast, not realizing that the reason something felt strange was the lack of human ears.\n\n\"Shhhhhhh!\"\n\nWhen all of the women turned to look at her, she continued more softly, \"You're going to wake her.\"\n\nRuce had been watching her daughter's actions out of the corner of her eye from where she was sitting on Perra's lounger. She turned toward the cleric and smiled. \"She seems to have made a friend.\"\n\nElta sat with the sleeping chick as Perra informed her of what Felli's cave was and how it would be perfect as a place to meditate and reflect. Because Felli was Rone and Marda's mate she had just needed to get approval from them since Rone spent the night with the harpy on occasion. Marda hadn't visited Felli's mountain since their child was born. Supplies would be dropped off in the storeroom across the cavern from Felli's home. The harpy would show her how to use the bathroom for when she wanted to clean herself. If she didn't want to use the magical shower or bath then she could also use the pond in the area she would be staying. The cleric would just have to find a way to warm the water on her own.\n\nSome time later Lada began to stir. Ruce had switched seats earlier, giving Perra her chair back. The chick's mother stood and pumped her wings a number of times. Within seconds, the woman's breasts had disappeared, leaving her feather-covered chest perfectly smooth. The pregnant woman got up and escorted her to the door.\n\n\"Why are you doing this?\" she asked the farmgirl. \"You tore down almost everything I believe in and you're trying to help me get my head straight. I just don't understand.\"\n\n\"Not my idea, actually,\" Perra admitted. \"This was suggested by Kuto. While Dax and I were telling you what we knew about Prentas, she was watching you carefully. She was the one who had an inkling you might need some time away to digest and adapt to how this has changed your view of the world. I just agreed to it if you ever showed up needing to escape the world for a while.\"\n\n\"I don't get you, Perra. You have the power to make me get on my knees and bark like a dog, yet you are investing all of this effort to help me find my way through it. I can't figure you out.\"\n\nThe farmgirl's expression turned serious. \"I didn't, and don't, want to kill you, Elta. Nor do I want this control over you. This only leaves me one option: turning you into a friend.\"\n\n\"Doing so may kill me. I've already thought of it,\" she mumbled in shame.\n\n\"What stopped you?\"\n\n\"I don't know. Cowardice?\"\n\nPerra shook her head, \"If you were a coward you would have gone through with it. It takes strength to keep going. I couldn't tell you how many times I wanted to kill myself after my brother beat me. Even held the knife in my hand more than once. Each time I convinced myself that taking my life was the path of the weakling and that I was stronger than that.\n\n\"I fully believe you are stronger as well,\" the farmgirl held up the finger she had cut earlier, \"and I think your goddess agrees with me.\"\n\nThey'd made their way onto the porch as they spoke. Elta looked at the bottom of the steps and there stood Kuto and Felli with her saddlebags and a two-person tent. Ghoss stood next to them empty-handed, or empty footed in this case. Elta knew why the large harpy wasn't carrying any supplies and the idea scared her more than a little.\n\n\"I'll have one of the boys take your horse back to the stablemaster tomorrow and get your money back for her. If this isn't working out, let Felli know and the girls will come to get you and your belongings.\"\n\nThe cleric nodded and turned towards the largest of the harpies. Taking a deep breath to quell her fear, she strode forward.\n\n---\n\nNow that her tent was set up Elta dug out a prayer mat. Rolling the small rug out in front of her home for the foreseeable future she knelt on it and clasped her hands in front of her.\n\n\"Goddess, please help me for I am lost...\"\n\n---\n\nSandy explained that on one of her previous visits the dwarves had set a room aside for her to come and go. They asked, for security's sake, that she only use the one room and never bring guests in without prior approval. Two weeks ago, she had gotten that approval from the watch captain and set out to meet up with Kal and Gerda.\n\nAs his and Sandy's heads came up through the floor the room was filled with a loud growl that echoed off the stone walls. Kal was immediately on guard but hadn't bothered to recast his darkvision spell since it expired a few hours ago. He had expected the room they were now standing in to be lit.\n\nThe growl stopped for a moment and was replaced by a high-pitched whine. The mage jumped away from the source of the noise, the runes on his bracers lighting up in preparation for battle. Kal finished summoning a small light as the whine faded and the creature began its rumbling growl again.",
        "Looking over at the other side of the room, Kal cut the flow of energy to the runes. It wasn't a growl, the dwarf leaning against the far wall was snoring.\n\n\"D\u00fbldin!\" cried Sandy running over and picking up the stocky man in a crushing hug. The human thought for a moment that she had killed the dwarf as his head lolled about. After a few moments, his eyes opened to find his face mashed between the golem's breasts.\n\n\"Nurlaf! Glad ta see ya made it back safely!\" he said once he was fully conscious. The man wrapped his arms around Sandy and seemed to be trying his best to crush her ribs.\n\nKal made a mental note to not accept any hugs from dwarves unless he had his strength rune.\n\nAfter a couple of seconds, D\u00fbldin let out a wheeze that sounded much like his snoring from earlier. \"Yer needin' ta let me go, Nurlaf, or it'll be our last greetin',\" he said in a rush as the rest of the air in his lungs was forced out.\n\nSandy put the man down with a small laugh. D\u00fbldin took a couple of deep breaths as the color returned to his face.\n\nKal took a close look at the first dwarf he'd ever seen. He only stood up to the mage's chest but what Kat first mistook as a roll of fat around his belly turned out to just be the stocky man's wide frame. D\u00fbldin's arms and legs seemed almost comically thick, even for his frame. but Kal had seen the dwarf survive a golem's bear hug, so he could hardly question the sturdiness of the dwarf's body. The man's hair was pulled into a braid which ran nearly halfway down his back. His long beard was split down the middle and braided as well, looking like the tines of a fork hanging from the sides of his mouth. On the left braid of his beard, a strip of orange cloth had been woven in.\n\nKal had touched up on his knowledge of dwarves once he had gotten too tired for working on the flight rune. The cloth wasn't very interesting to look at but the material was made from a special type of mold. The mold sent out long thin filaments over the surfaces of rocks in search of food which dwarves collected. Cooking and killing the mold left tough, mildly elastic threads that could be turned into yarn or cloth.\n\nThough unremarkable in normal light, the cloth made from these threads shone extremely well to creatures with darkvision. The author of the book proposed it was a means of warning potential grazers that the mold tasted bad or was poisonous. He went on to verify that there was a mild toxin within the threads that was completely destroyed by the cooking process.\n\nThe dwarves used them to tell different guilds apart. Two-and-a-half to three centuries was an average lifespan for the stocky humanoids. Few dedicated themselves to a single profession for that entire time. There was no internal economy within the kingdom. This made switching jobs as easy as telling the guild leader of your desire to move and wait for an opening to come up. Unfortunately, that could mean waiting anywhere from a couple of days to a decade. Jobs in the Great Forge and the mining tunnels were hard to come by.\n\nThe only job mandatory in Dwarven society was administration. In a vast departure from most of the other races, nobody wanted to be King. Every dwarf would rather swing a pick or a hammer than have to deal with sniveling foreign dignitaries and thieving merchants. Therefore, each dwarf was required to spend time as a magistrate. From that pool, they would choose the next King. Legend had it that the magistrates locked themselves in a room and drank until one of them finally passed out. The unlucky dwarf would wake up with a crown on his head. They tried to sweeten the deal by asking the prettiest of dwarven women to become concubines and offering all of the choicest foods. As yet no Dwarven King had taken up the mantle a second time.\n\nKings also had the job of occasionally declaring wars. Wars with other dwarven kingdoms were more sport than actual wars, with few casualties and those usually came more from accidents than intention. Before the battle each side would choose the color of the strips woven into their beards, or hair as was the case for female dwarves, to tell the sides apart. A dwarf wouldn't attack another who wasn't displaying one of the ribbons. For this reason, those who ran from battle would often hide the fabric from view as they fled. This led to the phrase, \"covering your beard,\" becoming one of the highest forms of insult in dwarven culture.\n\nBefore they arrived Sandy gave him a quick rundown of the different colors that she knew of. The orange in D\u00fbldin's beard represented The Watch. His guild took care of security and defense, above and below-ground patrols, and a very bored constabulary. There wasn't much crime in a dwarven stronghold when a second offense for just about everything was exile with only the clothes on your back and food for a couple of days. When all of your necessities were taken care of by the kingdom as a whole, they didn't take kindly to those who resorted to crime.\n\nThe dwarf finally seemed to notice Kal. \"So this is the one ye were tellin' us of afore ye left last time?\" he asked Sandy, scowling and jerking a thumb in the mage's direction.\n\n\"Be nice D\u00fbldin, he's the one giving me a little girl.\"\n\n\"Well, ye wouldn't 'ave had ta wait if'n ye monster girls weren't so hung up on blasted humans.\" The mage was startled when the dwarf answered. Looking closely, he could see a similar device to his own in the man's ear. \"Lotsa boys 'round who'd 'ave been happy ta stoke yer forge.\"\n\nKal snerked, trying not to laugh as the image of the large bellows Telsin's blacksmith used popped into his head.\n\n\"Wot's that? Are ye thinkin' Nurlaf bein with a dwarf is funny?! Mark me, human, I'd bang her like hot iron on an anvil! An' she'd prolly like it too!\"\n\nThe mage's shoulders shook as he tried not to laugh in D\u00fbldin's face, holding up a hand to keep the stocky man from speaking. It took a minute. but he finally composed himself. Instead of addressing the dwarf he looked at Sandy. \"Stoking your forge and bang you like a hot iron on an anvil. I am so using both of those next time I see Gerda or Ikuno.\"\n\nAs Sandy started laughing at the thought D\u00fbldin seemed to get angrier.\n\n\"Are ye makin' fun o' how we speak now?\"\n\n\"Absolutely not! I think both of those phrases are amazing! Just wondering how some of my women will react when I ask them if they want to 'bang',\" he replied, chuckling.\n\nThe dwarf gave him an appraising look before laughing himself. \"S'pose I canna blame ye fer that.\" Stepping forward he offered his hand, \"The name's D\u00fbldin, I was sent ta greet ye an' Nurlaf.\"\n\nKal took the offered hand, his strength rune flaring immediately to keep the dwarf from crushing his hand.\n\n\"Ye said ye had other womenfolk,\" said D\u00fbldin through gritted teeth. \"Maybe you could free up this one,\" the dwarf nodded towards Sandy, \"let others have a chance.\"\n\nNot wanting to cause an incident and not seeing the need to show dominance, Kal pumped power into the strength rune until their grips were about even. He had to hide his smile as a look of surprise flashed across the dwarf's face. \"I'm Kal. Actually, Sandy isn't mine. Two of her sisters are, but she isn't. We enjoy each other's company and if she wants to have another child later on, I'll be happy to help. But until she tells me she wants a change in our relationship, she's a free woman. By the way, why do you call her Nurlaf?\"\n\nD\u00fbldin's grip relaxed as he listened to Kal, casting hopeful glances towards the golem.\n\nSandy was the one who answered his question. \"'Nurl' is the Old Dwarvish word for stone and man. 'Nurlaf' is the word for woman. They called me that from the first day I met them.\"\n\n\"Tis our word fer yer kind lass. We've ne'er been needin' another name. In the history of Hordinfel, we've ne'er seen two o' yas at once.\"\n\n\"Hordinfel?\"\n\n\"Where yer standin' boy.\"\n\nKal nodded.\n\n\"Along wit comin' ta say hello, I've also been waitin' ta give ye a warnin'.\"\n\nKal would have to ask Kahrin where her homeland was when he got home. The similarities in how she and the dwarf spoke were uncanny. \"Warning?\" he asked.\n\n\"Aye, Nurlaf's got a bit o' a followin',\" D\u00fbldin explained. \"Lotsa fellows wantin' ta see what fuckin' a lass partly made o' stone would be like. Word got around after she left this last time that she was bringin' back the one who put coals in her forge.\" Kal bit his tongue and through force of will maintained a straight face. D\u00fbldin didn't notice. \"There's a number o' lads very unhappy wit ye fer stealin' her away. We're certain none would raise a hand against ye. But we're not ones fer takin' chances. The leader o' The Watch is askin' ya to go straight to the snake lady's lair.\" \n\nKal's face fell in disappointment, he was really looking forward to seeing the inside of the stronghold.\n\n\"Assumin' ye come back, I'll let ye look around a bit then,\" said the dwarf, guessing the reason for the human's expression. \"It'll be safer if Nurlaf's fans know ye 'aven't a claim on her.\n\n\"Captain o' The Watch is also sayin' ye prolly don't want ta go near her,\" he continued, speaking directly to Sandy. \"We're not sure what might happen ta someone made partly out o' stone.\"\n\nKal was confused, \"Why would it matter?\"\n\nD\u00fbldin raised an eyebrow, \"Woulda thought Nurlaf told ya what ye were dealin' wit.\"\n\nThe mage shook his head, \"All I've heard is that it's a snake lady.\"\n\n\"Aye, an' like none I've seen or heard of afore, 'cept in fairy tales. Ye ever heard of a cockatrice?\n\nKal nodded, feathered lizards about the size of a dog and known for their petrifying gaze. Every mention of them in a book was accompanied by a recommendation to run far, far away if you ever came across one.\n\n\"Good ta hear. Take a cockatrice, turn it inta a woman an' stick a bunch of snakes on her head. Live, venomous, snakes that don't like you.\"\n\n\"She wears snakes on her head?\"\n\n\"Nay, she don't wear them, they're a part o' her. Has 'em instead o' hair. Someone started callin' her a gorgon an' it stuck.\"\n\n\"And the cockatrice...?\"\n\n\"Aye, meetin' her gaze can turn ye inta stone, but only if ya piss her off. She's yet ta turn a dwarf, an' the humans that ran say they jus' couldn't move fer a few days while she 'ad her way wit 'em. There's a gallery o' statues down there o' the human's who tried ta attack her.\"\n\n\"Anything else you can tell me?\"\n\n\"Yer Dwarvish is shite an' yer lips don't move right.\"\n\nKal blinked repeatedly, he hadn't been expecting that.\n\n\"No matter,\" continued the stocky man, \"She speaks Dwarvish an' some o' the common tongue. Ye'll be alright.\"\n\nKal turned to Sandy who had been quietly observing the conversation. \"Shall we?\"\n\nThe golem nodded and took Kal's hand growing a stone mitt over it like Gerda did for the shorter trip.\n\nThe mage smiled at D\u00fbldin, who was frowning at the rock that surrounded his and Sandy's hands. \"See you in a little while,\" he said just before they dropped into the floor.\n\nThe dwarf stared for a minute at the floor where they had disappeared. \"Ah'm sorry mage, but I hope yer wrong,\" he said before walking over to the door that led back to the Dwarven City.\n\n---\n\nDwarven tunnels were as straightforward as the race that made them. Kal was thankful for this as they led almost all the way up to the woman's home, leaving only the last fifty paces or so untouched stone.\n\n\"Helloo,\" he called out softly, not wanting to startle the monster girl and possibly provoke an attack. Poking his head around the corner and peering into the gorgon's sparse home he could see the glimmering vein of mithril running along the back wall. He had to admit it was a pretty looking metal.\n\nGlancing about, his brow furrowed. Sandy had scouted the monster girl's home and said she was there before leaving but now there was no sign of her. Sighing, Kal stepped inside, thinking to find a place to sit and wait for her to return.\n\nSomething stabbed into the back of his shoulder. Immediately, searing pain shot down his arm and up his neck. The mage jumped forward, activating the healing and cure poison runes as he spun around.\n\nHe saw two large snake-like glowing eyes surrounded by twelve smaller sets, all staring at him with hatred.\n\nKal shut his eyes tight and looked away, or he would have if his body had responded.\n\nThe odd angle of his feet from quickly turning around sent him toppling over as his body locked up."
    ],
    "authorname": "BluDraygn",
    "tags": [
        "fantasy",
        "golem",
        "magic",
        "monster girl",
        "monstergirl",
        "trc",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/trc-searching-for-the-sky-ch-10"
}