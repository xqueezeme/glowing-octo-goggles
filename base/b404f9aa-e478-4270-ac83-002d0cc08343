{
    "title": "Bree's Journey Pt. 03",
    "pages": [
        "Bree\n\nI heard noise in the kitchen but didn't think anything of it until I felt Kieran shift behind me. If he was in bed with me...\n\nI shook Kieran. \"Someone's here.\"\n\nKieran lifted his head and listened for a second. He then rolled off his side of the bed to pad to our closed bedroom door. I could hear deep voices but they were too muffled to make them out. Kieran nodded his head and shuffled back to the bed. \"Bryan and Daniel are back.\"\n\n\"So soon?\"\n\n\"Apparently.\"\n\nKieran climbed back under the covers and wrapped his arms around me to settle back to sleep. My bladder began to complain. I knew I wasn't going back to sleep then. \"I need to get up.\"\n\nKieran groaned. \"Noooo...\"\n\n\"I need to pee.\"\n\nKieran reluctantly released me from his grip so I could throw on a tee shirt and jeans. I glanced over at him when I was dressed. His eyes were closed. I knew he wasn't asleep, but he wanted to be. I decided not to disturb him and tiptoed out of the room, quietly closing the door behind me.\n\nI dashed across the hall to do my business and brush my teeth. As I walked into the main living area I noticed Daniel's backpack resting on the floor beside our wadded-up picnic blanket. We hadn't even had a chance to pick up after ourselves. I'd thought for sure they wouldn't return before noon. \n\n\"Hi, sweetie.\" Bryan kissed me on the cheek on his way to the kitchen. \n\nI followed him. \"Sorry about the mess. I didn't think you'd be back so soon.\"\n\nBryan shook his head. \"Me, either. Danny insisted.\"\n\nI would've asked why, but I was pretty sure I knew the answer. He wanted to get back because I was visiting. Only, not necessarily to see me...to make sure that Kieran and I didn't hook up. Too late. \"Where is he?\"\n\nBryan pointed over his shoulder toward the bedroom. \"I see Kieran's car out front.\"\n\nI peered out the window at it. Visions of being shoved down and taken in the passenger seat made my cheeks flush with excitement all over again. \n\n\"Don't worry about Danny.\"\n\nI checked to see if my brother was approaching before turning to Bryan. \"I'm not. If he can't handle us being together then we'll move over to Kieran's place.\"\n\nBryan looked alarmed as he gripped my forearm. \"Don't do that. It'd kill Danny if you left. Me, too.\"\n\nI patted his hand. I wasn't going to make any promises. If Daniel acted like an ass, I was leaving. But I'd stay until that happened. \n\nI moved around Bryan to the pot of fresh coffee.\n\n\"Thanks for making coffee.\" I poured myself a cup. \"I'll clean up as soon as my brain is functioning a little better.\"\n\n\"What was the blanket for?\" Bryan was pointing at the heap on the floor.\n\n\"We went on a picnic.\"\n\n\"How romantic.\"\n\nI smiled, remembering how our little game had quickly led to so much more. Part of me wanted to share it with someone. As if reliving the memories with Bryan might make it seem more real. But I couldn't risk Daniel walking in and hearing some of it.\n\nRight on cue, I heard footsteps behind me. I knew without turning that they belonged to my brother. I braced myself.\n\n\"Hey, sis.\"\n\nI turned toward the voice. Daniel was wearing a wrinkled tee shirt and sweat pants. His hair was a wet, disheveled mess atop his head. Ordinarily, I'd start with some smart-ass remark about his appearance, but decided that I didn't want to push him. \"Hey.\"\n\n\"Had to shower.\"\n\nMy brother was hardly any more of an outdoors person than me. We'd not exactly been exposed to it growing up. But I knew that wasn't the reason he'd rushed to get back home. \n\nDaniel took his cup of coffee from Bryan as he joined me at the small kitchen table. Hovering nearby, Bryan reminded me of a referee in a boxing match.\n\nDaniel took a sip of coffee. \"What did you guys do?\"\n\nWe fucked. I wanted to say it out loud, but I just couldn't bring myself to provoke him like that. \"We went to a park, and then just hung out here and watched movies until we crashed.\"\n\nDaniel nodded. \"Sounds nice.\"\n\nI stared at him, waiting for the sarcastic retort that I was sure was going to follow that response. When it didn't come, I glanced up at Bryan who was giving me that apologetic and hopeful expression of his. He'd obviously coached Daniel before they arrived. Probably all the way from San Marcos, if I knew Bryan.\n\n\"So, what do you guys have planned for today?\" \n\nI turned my attention back to Daniel and shrugged. We had nothing planned. Not anything solid, anyway. I'd hoped to sort of talk some things through with Kieran before Daniel and Bryan came back, but it was too late for that now. \n\nThe bedroom door opened and my heart tripped a beat. I heard Kieran head to the bathroom and I knew it was a matter of minutes before he joined us. I stilled my nervous hands by gripping my warm coffee mug, and then silently prayed that there wouldn't be a confrontation between him and my brother.\n\nSilence blanketed the kitchen in anticipation of his arrival. Each second that passed stretched my nerves further, until at last, I heard the bathroom door opening. Bare feet shuffled through the living room and a moment later I saw him. Kieran wasn't wearing a shirt, and as a result, I almost choked on the coffee I'd just swallowed. His jeans hung from his hips in the most deliciously naughty way, as if he'd just been interrupted while having sex and didn't have time to throw anything else on. \n\nThat wasn't far from the truth, but I was appalled that he'd flaunt it so openly in front of my brother. Had he suddenly lost all his marbles or something?\n\nKieran flashed us his white teeth and dimples as he sauntered straight to me, leaning down and brushing my hair behind my shoulder so he could kiss me right below my ear. \"Morning.\"\n\nHis husky voice and hot breath on my ear snapped every taut nerve ending in my body. Heat infused my neck and face, and I just knew that I had turned a noticeable shade of crimson. \n\n\"Coffee, Kieran?\"\n\nBryan's voice sounded almost too casual, like he was trying to diffuse the tension with normalcy. \n\n\"Sure. Thanks, Bryan. How was the party?\" Kieran pulled out a chair and looked over at Daniel for an answer as he sat. \n\n\"It was okay. Not as big as last year. They have another one in the summer. We're thinking about driving down to go.\"\n\nI focused on what Daniel was saying to take my mind off of the awkwardness of the situation. \"From Dallas?\"\n\nDaniel winced. \"No. Not exactly.\"\n\nI looked from him to Bryan, who was setting Kieran's cup of coffee down on the table. I could tell that something was up just from the way they were avoiding eye contact with me. \"What?\"\n\nDaniel sighed. \"I haven't told Mom and Dad, yet, but I'm not coming home this summer. I ... We're staying here.\"\n\nBryan moved behind Daniel, patting him on the shoulders. \"We can't go through another summer lying to everyone.\"\n\n\"...And sleeping apart,\" Daniel added.\n\n\"When are you going to tell them? About not coming home, I mean.\"\n\n\"Next week. When we go home for Spring Break.\"\n\nI'd forgotten about Spring Break and Kieran hadn't mentioned it. He probably had plans to go somewhere warm. Someplace where the girls were tan and wore next to nothing. I shuddered with jealousy at the thought. I couldn't stop my mouth before asking. \n\n\"Where are you planning to go for Spring Break?\"\n\nI didn't mean for my tone to come across as accusatory, but somehow it did. I waited for his response, dreading what he might say.\n\nHe smirked as he replied. \"I did get invited to go to South Padre...\" I sucked in a breath. \"...But I think I'm going to head north, instead. Check in on the folks. Maybe swing through Dallas on the way...\n\n\"That is, if I'm invited.\"\n\nI dropped my chin, a little ashamed that I'd doubted him. \n\n\"Well...?\"\n\nI looked up and noticed that everyone was staring expectantly at me. Kieran wanted an invitation right then and there. Once again, my face flushed in embarrassment. \"You...You're welcome to stay at my place.\"\n\n\"Thanks, Bree.\"\n\nDaniel snorted. \"If not, you can stay in Bree's old room at my folks' place. We'll dig up the old family photo albums.\"\n\nI shot Daniel a threatening look. \n\n\"I think that's an even better offer. Thanks, Daniel.\"\n\nI swung my hand to hit Kieran in the arm. He caught my wrist and then held my hand in his on the table, winking and smiling at me. \n\nThe guys started talking about the upcoming college basketball tournament, who they thought would be the number one seeds, and the probability of Texas going to the final four. I didn't have much to contribute to the conversation, except to say that it was rumored that my alma mater might actually make it to the tourney this year. It won me a kiss on the hand by Kieran, who'd continued to hold it in his throughout the conversation.\n\nEventually the discussion came back around to topics in which I was interested. Food, and plans for the day. \n\nSince the forecast was threatening rain, any outdoor activity would be risky. They offered to take me to the more touristy indoor places, like the capitol, or one of the art museums, but I declined. That was something I could do while they were in class, if I really wanted to. I hadn't come to Austin for the sightseeing. So, after throwing out several ideas, we settled on a movie. \n\nBryan offered to run out for donuts and insisted that Daniel go with him. It was a bit of a relief from the awkwardness that was bound to arise from the intimacy of getting showered and ready. There was only one shower in the place, and three of us who needed to use it. To save time, it made sense for Kieran and I to be in the bathroom at the same time, if not actually showering together. But what made the best sense wouldn't have been comfortable for everyone. I sensed that Bryan realized this. He'd always been the more sensitive one.\n\nAfter they'd gone, Kieran followed me into the bathroom with a change of clothing in his hand. He clearly intended for us to shower together, which was absolutely fine with me as long as we got out before my brother returned. I warned Kieran.\n\n\"We need to be quick.\"\n\nKieran half smiled, the only indication that he'd heard what I'd said. He lowered his jeans and stepped out of them, his proud cock bobbing with each step. \n\nMy eyes widened at the enormity of his member. It was difficult to comprehend just how that thing had fit inside me. And not once, but several times. \n\n\"It turns me on when you stare at my cock like that.\"\n\nI blinked hard and turned away from him so he couldn't see how hot his words made me. \"We can't ... My brother will be back soon.\"\n\nI felt Kieran's hands lifting my tee shirt over my head. He palmed my breasts roughly for a brief second before reaching down to unbutton my jeans. \"I don't care. But if all you want to do is shower...\"\n\nKieran reached between my thighs, his fingers easily slipping into my wet heat. It was obvious what I really wanted. I stepped out of my jeans, now pooled at my feet, and then widened my stance.\n\nI heard Kieran growl behind me. \"Fuck, that's hot. Put your hands on the counter.\"\n\nAs I lifted my arms to obey his command, I noticed they were trembling. When Kieran took charge, it just turned my insides to liquid. Everything seemed to fade away but him. His touch, his smell, his voice. All I could think about was him. And the only thing that mattered to me was getting off. \n\n\"I love how you turn into a total slut. You make it real damn hard to go slow or be gentle, you know that?\"\n\n\"Then don't.\"\n\nA hard slap on my ass made me yelp. His fingers were ramming into my eager cunt before I had a chance to process the sting from the swat he'd delivered a moment earlier. \"You're asking for it.\" With his free hand, he gripped my hair and yanked my head backward, his fingers still thrusting hard and deep inside me. \n\nI locked gazes with him through the mirror. He looked dangerous. Crazed. All at once, I unraveled. I cried out, my body trembling and knees wobbling. My fingernails tried to dig into the formica countertop, only to scrape along the surface in an unsatisfying way. The way my climax so suddenly gripped me was hugely alarming. Like I had no control, whatsoever, over my bodily functions. \n\nKieran kept a hold of my hair, my neck straining in the process. His fingers slowed their assault until they were casually sluicing in the copious wetness of my cunt. He'd wiggle them every now and then as if toying with me, an indifferent mocking of my arousal.\n\nAs much as I wanted to despise him for how he was treating me, I couldn't deny that he was playing my body perfectly. My traitorous cunt was already beginning to pulse again.\n\n\"You would just keep coming and coming, wouldn't you?\"\n\nI wasn't sure how to respond to that. I didn't think that I could, but I'd never been with anyone who'd tried. And it sure felt like my body might continue to climax for him. Maybe all day, for all I knew. \"I don't know.\"\n\n\"Someday, I'm going to find out. But not today.\"\n\nHe withdrew his fingers and released my hair. I watched him lick his fingers clean before he pulled me into the shower with him. \n\nIt was crowded in there, especially with his hard cock. It was almost like having a third person in there with us. But Kieran managed to pour shampoo in his hand and went immediately to work on my hair. He was completely unbothered by the protruding monster between us, unlike me, who was aware of its presence at all times. \n\nKieran tilted my head back to wash the remnants of soap from my scalp. He was too proficient at it to be a rookie. I had to quell the jealousy inside me over that one. I hated that there were other women that he'd cared for. Ones who'd hurt him deeply. If they hadn't left him, he might still be with one of them today. \n\nFor some reason, it would've been easier if he'd done the breaking up. But the fact that they'd done it, against his wishes, was difficult to handle. He was probably still pining for at least one of them, if not all of them. Are there loose ends he still needs to tie up? We still had so many thing to discuss.\n\nKieran handed me the soap. In a husky voice, he ordered me to wash him. He was still in his dominant persona, and was now crossing over from caring to selfish mode. His different temperaments were becoming easier to identify. I knew as long as his cock was hard, he would remain bossy and controlling. Once he came, he turned back into the Kieran that most people saw. \n\nIt made me feel special that I got to experience the domineering side of him. I got the feeling not many women had been afforded the opportunity. It was a pity. For every other woman on the planet, I mean. Because if I had my way, no woman would ever touch this man again.\n\nI waited until last to clean his most private areas. I lathered my hands with soap and slid them around his back to his perfect, muscular ass, slipping my fingers between his butt cheeks and over his sensitive rose bud. Kieran peered down expressionless at me as I very gently massaged his bud with the pad of my forefinger. \n\nI wondered if he'd been fucked there. If he liked being fucked like that, or if he preferred to be the one doing the fucking. We hadn't had a chance to talk about any of that, yet. \n\nI re-lathered my hands and cupped his ball sack, making sure to be gentle, but thorough. Kieran placed his hands on the shower wall behind me, shifting some of his weight there, as if to brace himself for what came next.\n\nI gathered more soap in my hands for the last time and wrapped both my palms around his impossibly hard shaft. Kieran's eyes rolled back for a mere second before righting themselves again to stare into mine. I dared not break our gaze as my hands glided up and down his shaft. He was silently commanding me to finish him, and I knew that there'd be consequences if I didn't. His stern glare whenever I slowed my strokes told me that much.\n\nKieran lowered one of his hands and wrapped it around mine, crushing my hand between his vice grip and his steel cock. He guided me on how hard to grip and how fast to pump, then released his hold to allow me to continue without him.\n\nI felt so humbled, and at the same time, grateful for his direction. I knew that with him, I couldn't fail. He wouldn't let me.\n\nAfter a few minutes of some very vigorous stroking, Kieran groaned and then thrust his hips into my palm, shooting jet streams of white cum onto my stomach and chest.\n\nI was triumphant. A sense of pride welled up inside me for having brought him pleasure with my hand. It was almost surreal the emotions that overtook me. I'd jacked guys before with absolutely no benefit to me. It was just a way of getting them off. But this...this was entirely different somehow. So much more rewarding.\n\nKieran leaned down to take my mouth as his hand smoothed his cum over my belly, caressing it into my skin as if to mark me somehow. His kiss was the possessive kind I'd become used to, but there was also a hint of gratitude and respect. \n\nHe broke our kiss and he washed my body before stepping out of the shower. He left me to shave my girl parts as he toweled himself dry. His watchful gaze never left my body, and when I turned off the water, he had an open towel waiting for me. I probably shouldn't have been surprised by his attentiveness, but I was. I hadn't really thought about it before, but the guys I'd been with tended to check out once they'd come. That was far from reality with Kieran. He was every bit as affectionate afterward. Maybe even more so.\n\nAfter I was mostly dry, he wrapped his arms around me, fusing our naked bodies together, then whispered in my ear. \"I wish we had all day alone.\"\n\nI nodded, not daring to say anything that might be overheard. We'd obviously been in the bathroom long enough for Daniel and Bryan to have returned.\n\n\"I'll go out and face the enemy while you dry your hair.\"\n\nThat made me giggle a little.\n\nKieran kissed the tip of my nose, then mouthed, 'I love you', which elicited a huge smile from me. I, in turn, mouthed the same to him, and then we went about getting dressed.\n\n***\n\nKieran\n\nThere are so few times in my life when I've been absolutely sure of something. This was one of those times. In my gut, I knew that Bree was the one.\n\nJust being around her made me a better man. More confident and sure of myself. More decisive. I was no longer silently questioning my own actions and motivations. Bree made it so easy for me to be myself. \n\nExcept...\n\nI kept trying to silence the nagging voice in my head. I hadn't been truthful about one thing. My relationship with Daniel. It wasn't as if I didn't want to tell her, it was just that the timing never seemed quite right. I'd been so close when we were playing that game, but then at the last second, I changed the name to Daryl instead of Daniel. I didn't want her to know it was her brother who'd gotten off to me pissing on him. Somehow that seemed like too much of a violation of confidence with Daniel. It was one thing to tell her that we'd been having sex for the past two years, but a whole different thing to share details of what we did. \n\nI'd probably tell her if she asked, but to divulge details upfront and then admit all those intimate acts were with her brother...I didn't think she'd handle that very well.\n\nSo I was ignoring my nagging conscience until the time was right.\n\nWe got through the day without incident, not that I expected there to be one. Bree was a little on edge about it. I could tell by the way she tensed up when I reached for her hand or draped my arm around her shoulders. By the time dinner rolled around, she settled down, though. She even initiated some affection, lightly stroking my arm when she wanted me to touch her. \n\nMy thoughts were constantly taking these side trips, like mini lurid fantasies. Some of them I recognized from my horny teen years, while others were brand new. Many of them bordered on disturbing, and all of them starred Bree. I couldn't get over how just the tiniest things she did and said made me horny as hell. ",
        "Each time her little tongue swiped over her bottom lip, it made me want to bite that lip until it swelled in my mouth, just so she'd do it over and over again. When her hands would start fidgeting, I imagined wrapping them up in gauze and tying her wrists together for a length of time in order to train her to keep them still. During which time, I'd make her highly uncomfortable. I fantasized about making her wear mini skirts without panties in public. Asking her to expose her pretty pussy to me without regard to where we were. And then reaching up between her thighs in, say, a movie theatre until she was squirming, her juices soaking my fingers. \n\nI had dozens of fantasies about reddening her ass. Not always with my palm, and not always gently. A dark part of me that I didn't even know existed wanted to hurt her. It didn't make sense. I loved her so thoroughly, but I still had this desire to cause her suffering. To hear her pitiful cries, and feel her teardrops soaking my shirt after I'd beaten her to within an inch of what I knew she could handle. Maybe even further than that. I wanted to feel her sacrifice and devotion. And in turn, I would show her mine.\n\nI knew I should probably rein in the inner beast that was controlling my thoughts, but I had a sinking feeling that it was the beast in me that Bree was falling in love with. He was who she responded to, in a way that I think was just as surprising to her. That beast owned her. He manipulated her body with an effortless skill that I'd never possessed before. I mean, sure, it was still me. A part of me, anyway. And, yeah, I was good at fucking before Bree came along. But not like this. This was a whole different league of sex. \n\nAfter dinner, I realized that I only had one condom left. I'd underestimated how much we would fuck by a long shot. Bree was the first girl I'd been with that wanted sex more than I did. \n\n\"Hey, I need to go swing by my apartment and pick up a few things.\"\n\n\"Do you want me to go with you?\"\n\nI knew if that happened, we might not come back at all. \"No, baby. I'll only be gone a few minutes.\"\n\nBree pouted like she'd done the day before and a whole new set of lustful thoughts infused my brain. I glanced over at Daniel, and then to Bryan, who were sitting nearby. I was damn thankful that they couldn't read my mind.\n\n\"You can see my place tomorrow. When the guys are in class.\"\n\nBree leaned forward and lowered her voice. \"We have somewhere to go tomorrow, too. Remember?\"\n\nThe clinic. I nodded, swallowing back the groan from the vivid bareback fantasies that suddenly assaulted my brain. \"We'll do it all. I promise. I love you.\"\n\nI leaned in to give her a chaste kiss on the lips. There was too much of a crowd for anything more than that. When I glanced back to Daniel, I immediately noticed the change in his expression.\n\nOh, shit.\n\nI hadn't even realized that I'd said the words out loud. I said them so often in my head, almost a constant mantra around Bree, so it never occurred to me that it wasn't obvious to everyone. Including Daniel.\n\nI knew I'd promised not to start anything serious with his sister, but ... Fuck! How could I not? And besides, wasn't it better that I wanted her for more than just a meaningless fling?\n\nI turned on my heel and made a quick departure, not wanting to see how badly I'd just fucked up. \n\nBut all the way to the apartment, it was all I thought about. It took me a few moments to remember what I'd come to get, and then when I did, I wondered if stocking up on condoms was even necessary. Even the intense desire I had for Bree barely overshadowed the fear I was feeling over losing my friendship with Daniel and Bryan. Well, not Bryan. He was cool with everything. It was definitely Daniel's friendship that was at risk.\n\nI'd not really thought there was any risk at all. Until now. The horror on his face pretty much said it all. I hadn't realized how serious he'd been about me not seeing his sister. Did he feel betrayed somehow?  \n\nThere'd never been anything between us but sex and friendship. No affectionate words spoken. No after-sex cuddling. I respected what he and Bryan had together and made every effort to act accordingly. \n\nBut I had to admit that the sex made our friendship a lot deeper. I was a lot closer to Daniel than Bryan, even though we all hung out together. And I did feel something for the guy. Maybe it wasn't exactly romantic, but it wasn't totally platonic, either.\n\nFuck, what am I saying? That I have feelings for Daniel Weaver? No. No, no, no, no. I love his sister. I'm in love with Bree, that's all.\n\nI wasn't sure what I was going to be walking into when I returned to Daniel and Bryan's place. No one was in the living room, so I checked Bree's bedroom. When that was empty, too, I tentatively approached the master bedroom. \n\nDaniel was sitting on a chair in the corner of the room with his hand draped over his eyes. \n\n\"Hey.\"\n\nHe removed his hand to look up at me. His eyes broadcasted distress.\n\n\"Where is ... everyone.\"\n\n\"Bryan and Bree went to get cake balls.\"\n\n\"Oh.\"\n\n\"What the fuck is going on with you and my sister? All of a sudden, you're in love?\"\n\n\"It's not all of a sudden.\"\n\n\"You met her four days ago. How could you possibly think that's long enough to get to know someone? You, of all people. The guy who's been dumped by just about every bitch on campus.\"\n\n\"Exaggerate much?\"\n\n\"You know what I fucking mean.\"\n\n\"Is that what you're worried about? Me getting hurt?\"\n\nDaniel rolled his eyes.\n\n\"I didn't think so. What's the real problem here?\"\n\n\"You gonna make me say it?\"\n\nI nodded, cautiously. I wasn't sure I wanted to hear it.\n\nDaniel shifted in his seat. His bravado appeared to be rapidly diminishing. \"Aside from the fact that Bree isn't going to be different than any of those other girls, I ... I don't want, you know, our thing to end. I like the way things are now. With us.\"\n\n\"I'm leaving after graduation. You know that.\"\n\nDaniel shrugged one shoulder. The way he was sort of pouting reminded me of Bree. \"That's a few months away. After finals. I'll be ready by then. Just...not now.\"\n\n\"Daniel...I can't...\" \n\nIt was a lot harder to end our relationship than I thought it would be. We'd been friends with benefits for over two years. I guess I couldn't expect him to accept that it was over just like that.\n\n\"I need to see where this is headed with Bree. She's not like the other girls.\"\n\n\"Maybe not, but she's not the type to settle down, either. She's going to run. At some point, something will spook her and she'll head straight for the hills. I'm telling you, man. I know her. I've lived with her and seen it up close. It's not pretty for the poor schmuck who's left standing there with his barely beating heart in his hands. I don't want that to be you. It can't be you.\"\n\nI knelt down in front of Daniel's chair. \"It's not going to be, okay? I know what happened to her in the past. We've talked through all that. What we have is different. We're friends, for one thing. And that's not going to change no matter what else happens. Can't you just be happy for us? For me?\"\n\nWe both heard car doors shutting outside. Daniel stood and walked to the bedroom door, shutting it before Bree and Bryan could get to the front door. I knew it wouldn't look right to Bree, but I'd explain it to her later. I needed to come clean about my relationship with Daniel, anyway. \n\nI stood to face Daniel. I wanted an answer to my question. It wasn't rhetorical.\n\n\"I want you to be happy. I want my sister to be happy. Is that close enough?\"\n\nI sighed, then nodded. It wasn't what I wanted, but I knew that it was all the approval I was going to get from him.\n\nDaniel stepped up to me and pulled my face to his for a kiss. His tongue slipped into my mouth, and I knew in that moment that he had no intention of stopping our meetings. I was going to have to do it. Somehow, in some way, hopefully without damaging our friendship, I was going to have to end things.\n\n***\n\nBree\n\nMy stomach dropped when I saw the bedroom door shut. I knew that Kieran was in there with Daniel. \n\n\"I should go in there.\"\n\nBryan quickly stepped in front of me as I turned to walk toward the door. \"No, Bree. Leave them to work it out on their own. Kieran can handle Danny.\"\n\nI stared longingly at the closed door. I wanted to hear what they were saying, but I couldn't even hear the faint timbre of their voices. It was eerily quiet behind that door.\n\nBryan turned on the television, then guided me toward the kitchen. \"Come on. Let's open that cheap bottle of wine we bought.\"\n\nWe'd bought a bottle of Pinot Grigio at the store. Neither Daniel, nor Kieran were wine drinkers, but Bryan and I decided to treat ourselves. I'd not bothered to get to know Bryan very well over the years. He'd always been Daniel's friend and nothing more. Now that I knew that he was going to be part of our family, I felt we should bond more. \n\nBryan poured wine into two small glasses. They weren't wine glasses, but they did the trick. He raised his glass to mine. \"Cheers.\"\n\nI clinked my glass to his. \"Cheers.\" \n\nTaking a tentative first sip, I shuddered as the bitter sweet liquid infused my tongue. The second sip was much better, and the third tasted almost like water. I caught Bryan eyeing me as I drank. I guiltily set my half empty glass down on the kitchen counter.\n\n\"Sorry. I drink fast when I'm nervous.\"\n\nBryan eyed the closed bedroom door. \"At least they're not fighting.\"\n\nI nodded. A frown crept over my face as I stared at the door wondering exactly what was going on in there. Just then, the door opened and Kieran's eyes met mine.\n\nI searched his face for clues about his mood. He looked a little anxious, but not so much that I felt I needed to pack our things. \n\nDaniel followed him out of the bedroom with a big smile on his face. Looking relaxed and happy, you'd thought they'd just been playing a video game or something. He headed straight for Bryan and planted a huge kiss on his lips. One that I was certain involved a lot of tongue. \n\nKieran and I watched in stunned silence. Actually, I think I might've been the only one stunned. Kieran looked pretty casual about the whole scene. \n\nDaniel pulled from their kiss. \"Yuck. Wine. You want a beer, Kieran?\"\n\nKieran eyed my glass and Bryan's. \"No. I think I'll try some of this wine.\"\n\nDaniel scoffed. \"Since when do you drink wine?\"\n\nBryan didn't hesitate to fetch another glass and begin pouring, while Kieran ignored Daniel's question. It was then that it dawned on me just how much these three hung out together. It wasn't only that they knew about each other's preferences, it was also evident in the casual way they interacted with one another. Daniel jabbed at Kieran in the same way he did Bryan. In the way that only really good friends or siblings can.\n\nIt was stupid to worry about them working things out.\n\nWe dug into the tiny bite size desserts and migrated to the sofa to surf the television guide. I noticed that Kieran barely touched his wine, and I was careful not to sip too fast. I had a sinking suspicion that the only reason he got wine was to keep me from downing half the bottle. \n\nI'd never been a huge drinker, but he wouldn't be able to figure that out from the past few days. From his point of view, I probably came across as a drunk. I hated that thought. Not because I wanted him to think highly of me, but because I didn't want to mislead Kieran in any way. Good or bad. I wanted to be completely honest with him and not hide anything. It was the foundation of our relationship so far. The biggest thing we had going for us.\n\nThis misconception that Kieran was probably developing about me brought to light one stark reality that I'd been ignoring. As much as we'd talked about a lot of personal things, we'd still only been together a few days. Sharing intimate things didn't take the place of spending time together. \n\nIt made me sad, in a way, to have these thoughts. I wanted our love to be real. I wanted it to be lasting. Impatiently, I wanted guarantees of those things now, after four days; not in four months or four years. \n\nIn my mind, I began keeping a list of sorts. What things were likely to be good with us going forward, what we might have to work on, where we might encounter problems. I was constantly trying to gauge our success. When good things popped up on the list, it was an affirmation that I was making the right decision with Kieran. When bad things came up, I quickly ascertained their severity and whether or not I needed to reevaluate my \"go/no go\" decision. So far, the good far outweighed the bad.\n\nThe small amount of wine I consumed throughout the evening did nothing more than make me very tired. Before I could get settled enough against Kieran's chest to fall asleep completely, he announced that we were heading to bed.\n\nI'd been dreading the moment we'd part ways with Daniel and Bryan to retire to our shared bed. All day, the scene kept flashing across my mind. It should've been an awkward moment, but I was too tired to feel the least bit uncomfortable. When Kieran shut the door and clicked the lock behind him, all I could think about was how good his warm chest was going to feel against my back. \n\nThe next morning, I woke to Kieran nuzzling my neck. \n\n\"I've got to leave for class soon.\"\n\nI groaned and shifted onto my back so I could face him. I immediately noticed that he was already dressed.\n\n\"I just have to go to this one class today. I can skip my afternoon.\"\n\n\"Do we have to make an appointment to get tested?\"\n\n\"Nope. It takes, like, fifteen minutes. We can grab lunch afterwards if you want.\"\n\n\"Okay.\"\n\n\"I, uh, need to talk to you about something. There never seems to be a good time.\"\n\n\"What is it?\"\n\n\"It's...It's about...You know how I told you that I was in a similar relationship as you were? With a couple?\"\n\nI nodded. \"Yeah.\"\n\n\"Well...that couple is...\" Kieran cleared his throat. \"It's Bryan and Daniel.\"\n\n\"What?\"\n\n\"Yeah. I-I didn't know how to tell you.\"\n\n\"How long ...?\"\n\n\"Two years. More than that, I guess.\"\n\n\"I thought they were...\"\n\n\"They are. For all intents and purposes, they're married. I'm the third wheel. The expendable one. It's no different than your situation with the married couple.\"\n\n\"I was only seeing Miles, not his wife. Are you...Do you...?\"\n\n\"I've been with both of them, but I primarily...uh, you know...see Daniel.\"\n\n\"So you've been sleeping with my brother for ... years?\"\n\n\"I wanted to tell you right away, but ...\"\n\n\"Daniel didn't want you to say anything.\"\n\n\"No, that wasn't it. Even if he didn't want me to, I would've told you, anyway. It's just...the timing never felt right. But now that we're...you know, going to see each other seriously, I knew it couldn't wait. I mean, even now is a shitty time because I need to get going.\"\n\nI glanced at the clock. It was quarter to nine. He was already late. \"Go. You're going to be late. We can talk when you get back.\"\n\n\"Are you sure?\"\n\n\"Yeah.\"\n\nKieran frowned and sighed. \"Okay.\" He pecked me on the lips. \"I love you.\"\n\n\"I love you, too. Hurry back.\"\n\nHe flashed me that gorgeous smile of his before bouncing off the bed and dashing out the door, pausing only long enough to blow me a kiss before disappearing around the corner.\n\nThe news was jarring. \n\nI was glad that I wasn't more awake when he told me. My somewhat groggy, pre-caffeine state kept me from overreacting to his confession. \n\nKieran and Daniel? The mental image made my stomach roil. I'd only just gotten over the fact that my brother was sleeping with his best friend. Now Kieran, too? \n\nMy rational mind kept trying to convince me that it didn't matter that it was Daniel. In fact, that maybe it was better this way. I knew that Daniel was committed to Bryan; I felt in my bones that what they had would last a lifetime. There was no threat whatsoever of losing Kieran to Daniel. But...\n\nSomething felt very wrong inside me. My rose-colored glasses had been shattered and my heart felt like it was breaking. Only I wasn't sad, I was mad as hell.\n\nWhy did it have to be my brother? Why? Anyone else I could've handled.\n\nRage began to well up inside me. Not toward Kieran. It was anger toward Daniel for not coming clean with me about it. I kicked the covers off the bed and stormed to the master bedroom. \n\nIt was empty. They both had early classes on Mondays. \n\nI stood in the empty room cussing at my brother. Screaming all the nasty things I wish I could say to his face. Things I'd wanted to say to him for years. How he'd betrayed me. How awful a brother he was, and always had been; because he was never on my side, never stuck up for me, never cared about my feelings. \n\nWhen Lance was caught cheating on me, Daniel acted as though it was my fault. He never said so, but he always looked at me with that disgusted expression, like it was revolting for him to be related to me. Not once did he try to comfort me. \n\nBryan never directly addressed me during that time, but I knew that he felt bad about what happened. It was evident in his concerned gaze. The way he looked at me from across our living room when he'd come spend the night at our house. But Daniel didn't share his sympathy.\n\nI'd been harboring such resentment toward my brother for so long without even being aware of it. It's why I'd stayed away these past few years. Why I hadn't visited him sooner. Why I knew nothing about his personal life until a few days ago.\n\nI hated him. For being cruel and heartless. And I hated him for having this over me, too. He'd been with Kieran longer than I had. Known him longer, but not just as a friend. As a lover. \n\nI pushed those images out of my mind as I turned on my heel toward the kitchen. I needed coffee. \n\nThen, I needed to start packing.\n\n***\n\nKieran\n\nClass dragged on. I'd hoped that the professor would release us after we finished taking the unit test, but everyone finished it pretty quickly, so he kept us for the rest of the hour. I barely registered the topic of the next unit, my mind still buzzing from having told Bree about Daniel.\n\nShe seemed to take it well, but I knew she was still in shock when I left. I should've stayed. If not for this stupid test, I would have. \n\nAfter class, I raced to Daniel's like the place was on fire. Somewhere in the back of my mind I kept hearing his voice warning me that she'd run. \"At some point, something will spook her and she'll head straight for the hills.? My gut twisted at the thought. \n\nI was already so in love with her that I couldn't bear to lose her. Not over anything, but certainly not over something as trivial as this. Surely she understood that it was only sex and nothing more. She had to know that I didn't have feelings for Daniel. Not like I had for her. I'd have told her before I left if I would've had time. It all happened so fast. \n\nWhen I turned onto Daniel's street, I released the breath I'd been holding. Her car was still parked on the street. But when I peered inside, I noticed her suitcase in the backseat. Oh, no. Please...\n\nI bounded up the steps and shoved through the front doorway, out of breath and in a panic. Bree startled at my entrance. She was in the kitchen holding a pen in the air over a piece of notebook paper. \n\nI was standing over her in a second, anxious to read what she'd written. I was surprised when it was addressed to Bryan.\n\nBryan,\n\nI'm going to stay at Kieran's. I'm sorry, but I think this will be easier for everyone. I'll mi...\n\nI had to read the first sentence again to make myself realize that she wasn't leaving me. I almost busted out in tears of relief. My shaky hands gripped her upper arms as I tried to catch my breath. My recent exertion, coupled with holding my breath had taken a toll on my composure.",
        "Bree finished the note and set the pen on the piece of paper. I glanced around the kitchen for a note to Daniel but didn't see one. I started to ask, but then thought better of it. Truth be told, I didn't want to bring up Daniel's name. Bree was serene. Resolute in her decision, which means that she was either holding in a lot of emotion, or she'd already let it go. Either way, I got the feeling it'd been directed at Daniel, and that was a whole hell of a lot better than having it directed at me.\n\nI didn't know much about their brother-sister relationship. Only that Daniel had never once mentioned his sister before she showed up in Austin, and the way he talked about her...It wasn't the way I would talk about my sister, if I had one.\n\n\"Is this okay with you?\"\n\nI nodded and kissed the top of her head before pulling her into my arms. \"Whatever you want, baby.\"\n\n\"I want to get out of here.\"\n\n\"Okay. Let me grab my duffel, then you can follow me in your car.\"\n\nIf I could've prevented her from driving separately, I would have. I was wary that she still might dash. It was a vulnerable time for me to let her go, and it took every ounce of willpower in me to trust her not to hurt me like that. My track record on that score was pretty bleak.\n\nIt wasn't until we'd passed the turnoff for the highway that I started to breathe again. My breaths were still shallow, but at least some oxygen was getting to my brain. By the time Bree and her suitcase were locked inside my apartment, my muscles were aching from being tense. I had to know what she was thinking.\n\n\"Why did you want to leave your brother's place?\"\n\nBree sat down on the loveseat. I followed her lead, taking a seat beside her. I couldn't tolerate being any farther away from her than that. \n\nI waited for her to speak. It was a long minute before she looked up from her lap and started talking.\n\n\"What's wrong with Daniel and I goes back a ways. High school. Maybe even longer ago than that.\" She paused to gather her thoughts. \"He's never stuck up for me on anything. I thought the reason he didn't want us to hook up was because he thought I wasn't good enough for you. But now...shit. If I'd known all this...I don't know. I guess it doesn't matter. It's in the past, right?\"\n\nWhen I didn't confirm right away, she looked up at me.\n\n\"You ended it with him, didn't you?\"\n\n\"I tried. He knows I don't want to continue.\" Sort of. \"And he'll for sure get the message, now that we've distanced ourselves from him.\" Maybe.\n\n\"You insisted I call Miles and break it off.\"\n\n\"I didn't mean for you to do it right then. And I wouldn't have asked you to be exclusive if I didn't intend to hold up my side of the arrangement. Of course I'm not going to see Daniel again. Not like that, anyway.\"\n\n\"But you're still going to be friends with him.\"\n\n\"Well, yeah...I was hoping...\" \n\nBree's crestfallen face stopped me from continuing. \n\nMy gut twisted in knots. She wasn't expecting me to give up my two best friends, was she?\n\n\"It's okay. I'm not asking you to stop being friends with him. It's my own silly insecurity. Something I have to get over. It has nothing to do with you.\"\n\nIt felt like it had everything to do with me, but I didn't want to argue with her. \"I don't want anyone else. Only you. I promise.\"\n\nBree nodded and managed a weak smile. \n\n\"I'm sorry I didn't come clean sooner about the whole Daniel situation.\"\n\n\"No, don't be. We never would have...\"\n\n\"I know. But I hate that it caused all this.\"\n\n\"You didn't cause this. What you told me...that just made me realize how much I hate my brother.\"\n\n\"Come on, Bree, you don't hate him.\"\n\nThe daggers she shot me with her eyes set me back in my seat. \"Don't defend him. He's been real shitty to me.\"\n\n\"I'm not defending him. I just think hate is a strong word, that's all.\"\n\n\"Bryan always says that Daniel is protective of me, but I don't see it. He's never once stood up to any of the guys I dated that treated me like shit. He didn't do shit when all hell broke loose with Lance. He just acted like I was the one to blame. All those months I hid in my room trying to avoid the horrific aftermath, he never checked in to see if I was okay, never offered to help in any way. \n\n\"What kind of brother does that, Kieran?\"\n\nI shook my head and shrugged. I had no answers for her. Without talking to Daniel, there was no explanation for his behavior. \n\n\"After that, I went to college. I stayed on campus the first year and only went home when I absolutely had to, even though it was only a 30-minute drive. Then, my parents wanted me to move home to save money. Funny, they never complained once about Daniel going to school down here.\"\n\nBree stopped talking suddenly, then looked up at me.\n\n\"I'm sorry. None of that has anything to do with me and Daniel. I'm just venting.\"\n\n\"It's okay. You don't have to explain it to me. I totally understand.\"\n\n\"I don't want you to think my parents are bad people. They're not. They just have different ideas about me and my brother. I think my mom is hugely disappointed that I'm not married and having babies by now. She was eighteen when she got pregnant with me.\"\n\n\"Really? Wow! That's young.\"\n\n\"I know, right. Too young.\n\n\"That thing that happened with Lance didn't just affect me, it affected my mother, too. She was counting on me marrying him. In a way, I think she partially blamed me for what happened, too. Like, if I'd been a better girlfriend, he wouldn't have wanted that guy.\"\n\n\"It's not your fault. Nothing you did made him bi, or gay, or whatever. You know that, right?\"\n\n\"I do now. But I didn't for a long time. That's something else Daniel could've helped me with if he'd only come clean about his own sexuality.\"\n\nWe sat there in silence for a few minutes. Each lost in our own thoughts. I was trying to imagine what could've possibly been going through Daniel's mind throughout all of this. I made a promise to myself to ask him.\n\n\"You too wiped out to go to the clinic today?\"\n\n\"No. You wanna go?\"\n\nShe nodded. \"I want to focus on something other than all this crap. I'm sorry for being such a downer.\"\n\n\"Don't apologize, baby.\"\n\nI pulled her into my arms and then kissed her. I refrained from shoving my tongue in her mouth, though I wanted to do it, if for no other reason than because of where it might lead us.\n\nInstead, I stayed on track and stood, pulling her up with me.\n\nThe clinic visit was brief. We instructed them to send both of our results together to my place since Bree's landlord often checked her mailbox for their mail. I didn't mind a bit. It made us feel like more of a couple that way, though that wasn't necessarily on purpose. Still, any small thing that bound us together was good. I was still feeling a little uneasy about how the day started.\n\nWe ate a leisurely lunch at the same cafe where we'd eaten our late night breakfast. Our corner table was taken, but I was okay with that. There wasn't nearly as much of a crowd midday as there was in the wee hours of the morning. \n\nBeing in that cafe with her reminded me of the sexual tension we'd shared that night after work. How it was so strong, it was like a living, breathing thing all on its own. It was the same energy that surrounded us on our picnic. The one that fed my inner beast. I wanted it back. We needed to reconnect on that level to put everything back in balance again. \n\n\"Ready to go?\"\n\nBree nodded. She still looked a little out of sorts, even though our conversation was fairly normal and upbeat.\n\nI'll make it better, baby. Quiet your busy thoughts and make you feel so good, you won't remember any of the bad stuff.\n\nI silently made plans as I drove us to my apartment. I wanted to tie her up again. Recreate the magic we'd had the last time. Only this time, I needed to take it even further. \n\nMy brain was working overtime with ideas. I wasn't even sure where the hell they were coming from. Have I always had this twisted of a mind? Some of the ideas were too elaborate to have just popped into my head. And some of them required more preparation, special equipment, an entirely new bed, for god's sake.\n\nI made up my mind to keep things simple. As I ushered Bree up the flight of steps leading to my apartment, I finalized my plan.\n\n\"Kieran?\"\n\nA strange voice snapped me back to the present moment. Standing outside my door was, \"Ashley.\"\n\nI hadn't seen her since we broke up, which was nearly four months back. I'd heard that she hadn't dated anyone since, but I never believed it. Ashley was the sort of gorgeous that turned heads everywhere, baiting men to ask her out. She knew it, too.\n\n\"What...?\" I'd lost my ability to form complete sentences, apparently. \n\n\"We need to talk.\"\n\nI was still so stunned to see her that my brain wasn't functioning properly. I just stood there, dumbfounded. Then I noticed her eyeing Bree. She looked back up at me with a cocked eyebrow, expecting me to dismiss Bree so we could talk privately.\n\n\"Now isn't a good time.\"\n\nAshley smoothed her hands down her double-breasted Burberry trench coat before thrusting her fake DDs at me and lifting her chin. \"I suppose it can wait. Call me and we'll have dinner.\"\n\nHer little grin as she flipped her hair and walked past us toward the stairwell left nothing to the imagination. She wanted me to call her for a date. \n\nMy mind was still reeling as I unlocked the door, but not from anything except sheer shock, and maybe a slight twinge of disgust. Seeing her again, in sharp contrast to Bree, made me realize just how shallow my choices had been in the past. Ashley was all glitz and glamour with nothing underneath, while Bree was a deep well of delicious character. To prefer Ashley over Bree would be like wanting the gift wrapping more than the gift inside. People usually discard the wrapping.\n\nTwisted thoughts about bondage and ravishing Bree crept back into my brain as I was securing the deadbolt. My anxious cock was being commanded by the beast inside me. All errant thoughts of Ashley vanished. \n\nWith a single-minded focus, I stalked Bree.\n\n***\n\nBree\n\nI dashed to the bathroom as soon as I was inside Kieran's apartment. I wanted to throw-up, but instead, sat down on the toilet and emptied my aching bladder.\n\nI felt like the ugly duckling who'd just seen the swan she could never hope to become. And that swan was throwing herself at my boyfriend. What possible reason would he have to want me over her? She was gorgeous. Super-model level of stunning that I didn't know how to compete with because we weren't even in the same league. \n\nWashing my hands, my mind became one big scrambled mess of insecurities. I couldn't even sort out the individual thoughts. They mounted to a huge pile of negativity that was so tightly intertwined with my soul, I couldn't shake it free. I was numb to it, or maybe it was just so overwhelmingly awful that my conscience mind refused to acknowledge it.\n\nWhen I emerged from the tiny room, Kieran was waiting for me. Without hesitation, he pulled me into an urgent kiss that lasted long enough to heat my insides. \n\n\"I need you, baby.\"\n\nHe led me to his bedroom by my wrist and held onto me as he fetched a couple of items from his closet. Then he pressed my back onto the bed and swung my legs up. He quickly climbed on top of me, straddling my torso as he lifted my shirt over my head and began working on my bra. \n\nHe was good at undressing. His fingers were quick and nimble. But the effects of his kiss were wearing off and I suddenly felt very naked and very insecure.\n\n\"Kieran, I don't th...\"\n\nHis palm clamped down on my mouth before I could finish my protest. \"No more talking. Give me fifteen minutes. That's all I'm asking. If you still want to stop after that, I will.\" He kept his hand in place and leaned down to look very intently into my eyes as he whispered. \"Fifteen minutes, Bree.\"\n\nI nodded, and he lifted his palm from my face. His hands were busy tying lengths of something soft and silky around my wrists. I didn't watch what he was doing. I was just limp beneath him, beyond caring at that point what he did to me, or that I was half naked. I just began counting the seconds in my head. One after another, each one closer to the point where I could stop him and put my clothing back on. But, as promised, I'd go along with him until then.\n\nAt the six minute mark, I vaguely registered that he'd removed my jeans and underwear. I remained focused on my counting. By eight minutes, my knees were bent and my ankles fastened to something. The bed rails, maybe; I wasn't sure. Before I reached nine, Kieran was lowering his nude body onto mine, his hips nested between my thighs with his hard cock sliding up my slit without dipping inside. \n\nHis lips were hot against mine, his tongue easily sliding past them to invade and capture my mouth. I stopped counting for a second, or maybe longer than that. When he pulled from our kiss, I resumed as best I could. \n\nHeated lips and tongue worked their way down my neck and chest, swirling around each sensitive nipple until they ached. I realized that I'd once again stopped counting and silently chastised myself over it. My foggy mind was struggling to remember the number I was on, or even why I was counting in the first place. \n\nThen Kieran's tongue laved a path down my belly and over my exposed and blossoming womanhood. With gentle, languid movements, his very wet and hot tongue massaged the unprotected, sensitive folds there. \n\nI gasped and squirmed, realizing for the first time that I was truly bound. I couldn't move my arms at all, and no matter how I shifted my legs, there was no way to clamp my thighs shut or shift in any way so that my pussy was covered. He had me tied up so he could take advantage of my body. \n\nKieran's tongue hardened, the tip of it flicking over my clitoris hard enough to make my back arch in order to move away from him. It was too much. Almost painful. \n\n\"Stop...\"\n\n\"I still have a few minutes left.\"\n\nHis face lowered, lips clamping around my entire clitoral hood as his tongue swirled in maddening circles around my clit, never touching it directly. \n\nIt only took about 30 seconds of that before I felt like I might go insane if he didn't touch my clit. My knees strained to splay my thighs even wider so that I might rub my now very needy bundle of nerves against his lips, his tongue, his teeth...anything. Instead, he pulled away.\n\n\"Do you still want me to stop?\"\n\nI let go an exasperated groan. \"Please...fuck!\" His finger wiggled at the top of my slit, close enough for my clit to feel the vibration of movement. It just pushed me even closer to the edge. \"Dammit. Fuck.\"\n\n\"Such a dirty mouth. You want me to keep going?\" I nodded. \"Is that a 'yes'?\"\n\n\"Yes. Please don't stop now.\"\n\nKieran smiled like he'd won the day. In a way, he had. There was no way I was going to stop him at this point. I was so close to coming, I could taste it.\n\nI let my head fall back onto the mattress and waited for him to continue his lovely assault on my pussy which was sure to tip me over the edge. I felt the bed shake and assumed he was repositioning himself, but when I heard movement in the nearby closet, I realized that he'd actually gotten up.\n\n\"What are you doing?\"\n\nHe didn't answer, even though I was certain that he'd heard me. A moment later, he reappeared and casually approached the bed with several items in his hands. \"I'm blindfolding you and giving you some music to listen to. I'll leave your mouth free to talk as long as you don't abuse the privilege. That means, no babbling, no questions, no complaining. Feel free, however, to moan my name and sing my praises. Or to beg. I like the way you beg.\"\n\nHe'd turned into an overbearing, bossy, arrogant son-of-a-bitch in a matter of minutes. I yanked at my restraints. \"I don't like you like this.\"\n\nKieran chortled, and for a second, I didn't think it was even him. \"Don't lie to me, sweetheart. You love me like this.\"\n\nHe reached down and slid his fingers into my slit. The wet slurping sound was loud and lewd, and totally humiliating, as it broadcasted just how aroused I'd gotten from his treatment of me.\n\nHis glistening fingers lifted to my lips, first painting my lower lip with my own juices, then dipping inside so the tangy flavor infused my tongue. \"Just give into it. Stop fighting so much, you know you want it.\"\n\nHe leaned down and swiped his tongue over my lip, then sucked it into his mouth and worried it between his teeth for a few seconds. He was toying with me in the most cruel way. Using my arousal against me. It was working, too. I was willing to do just about anything at that point to get off.\n\nSatisfied that he now had my consent, he held an earbud close to his ear and listened as he turned on an iPod. He made some adjustments and then situated the buds in my ears. I was surrounded all at once by screaming electric guitar riffs, then a familiar voice singing unfamiliar lyrics. I was pretty sure it was AC/DC, but I didn't recognize the song.\n\nMy eyesight was next to be taken away. Not that I noticed much since I'd shut my eyes, anyway. But the insides of my eyelids were definitely darker. Pretty close to black.\n\nI lay there in that darkness for some time. Seconds? Minutes? I wasn't really sure, as time became this unmeasurable entity that was no longer noteworthy to me. In fact, nothing was important or worthy of thought or worry. I couldn't move. Nor could I see or hear, but I could breathe, and I was certain that no harm would come to me. For some reason, that was something I didn't question.\n\nThe song that was playing faded and another one began. Was it only the second song? The third? Fourth? I'd lost count.\n\nSomething touched my leg. Without my other senses to gather information, I wasn't sure if it was his fingers, or something else. It caressed my skin in tiny circles. The sensation rippled outward until the very edges were teasing my pussy, it seemed. My pussy reacted with a flutter that very quickly intensified to a steady pulse. Thrumming to the rapid beat of the drums in my ears.\n\nI floated into a fantasy world where I was the bass guitar being strummed, producing a steady backbone of rhythm. Fingers were on me everywhere at once, dancing over my nipples, on my belly, around my mons, tickling my inner thighs, and pressing against my anus. The sensations blurred into one giant symphony of total awareness. I absorbed each individual touch without processing the specifics of it. Without judging purpose or intent, or weighing the value. I was objectified. Reduced to nothing more than a ball of nerve endings; pure, remarkable sensation.\n\nI no longer wanted more. I simply relished each electric impulse until the next one came along, floating on a cloud of electric guitar chords. I wouldn't go as far as to say I didn't care one way or another what happened next. I probably did, on some level, at least. It just wasn't something I focused on. Like the passing of time, it was out of my control. And somehow, that was more freeing than anything I'd ever experienced before.\n\nFree from worry that I wasn't good enough, from the threat of being hurt; free from the scrutiny of my parents, Daniel, and that snotty whatshername from earlier. \n\nSomething pressed into my anus as warmth surrounded my clitoral hood. The pressure increased, becoming wider, stretching almost unbearably before subsiding. I still felt an intrusion, but it was barely noticeable. All my attention shifted to the tongue swirling around my clit, and the fingers inching their way into my pussy.\n\nI felt deliciously full. Consumed. Need coiled within me, and I sucked in a breath for that final climb to my peak. I'm fairly certain I cried out when I reached the top, my pelvis undulating in a ragged, unorganized rhythm until the convulsions subsided. ",
        "The warm, wet mouth was replaced by gentle caresses up and down my slit. At times they would dip inside my cunt for a few seconds before resuming the slow strokes that felt so comforting and arousing at the same time. \n\nA palm closed around my neck, not enough to cut off my air supply. It steadied me, grounded me in a very relaxing way. A moment later, a wet tongue slid between my lips. My own tongue came alive in excited greeting, but the contact was brief. Just enough to let me know that I wasn't alone.\n\nIt wasn't the sort of alone that felt lonely. And maybe \"alone\" wasn't the right word. I mean, Kieran was certainly still there. I knew that. It was just that we were only connected by his touch, by the feelings he was making me experience. We weren't sharing thoughts with one another, or exchanging emotions. I couldn't see him, touch him, hear him. He was a faceless entity creating lovely music with my body.\n\nThe second orgasm caught me off guard. There was no build-up to it. It just sort of hit me out of nowhere. All of a sudden, my channel began convulsing, clamping down onto something inside. Fingers? I wasn't sure. \n\nI'd lost track of what was happening down there. It felt like one endless stream of stimulation, followed by wave after wave of climax. They'd subside, then get stronger, then subside again. \n\nI felt his cock pushing inside. It was impossibly large, causing my cunt to explode in an orgasm that was so intense, stars exploded before my eyes. Fingers dug into my buttocks like little daggers, lifting me off the mattress as he thrust his pelvis against mine in a punishing assault. \n\nI'm not sure if I rolled from one climax to another, or if it was just the longest orgasm in history. It kept going, though, until his hips stilled and he lowered my buttocks back onto the bed. \n\nA moment later, fingers toyed around my anus, then I felt them tugging at something. My tight hole expanded and stretched for a second, then the object was dislodged. I squirmed, afraid I'd evacuated my bowels on the bed. A hand pressed on my belly to settle me down and I realized that it must've been my imagination.\n\nThe volume of the music softened, then the ear buds were removed. I remember my ears ringing briefly from the loss of sound, then almost nothing after that. It was like the music had been the only thing keeping me from falling asleep. Now that it was off, I could relax into the warm cocoon of slumber that was closing in on me from all sides.\n\nI woke up in Kieran's arms. I was on my side with him wrapped around me. It was dark in the room. Real dark. I stirred to look at the clock and Kieran lifted his head.\n\n\"Hey.\"\n\nI tried to speak but my throat was parched. Sound came out as nothing more than a weak croak.\n\nKieran patted my hip. \"I'll get you a glass of water.\"\n\nI rolled onto my stomach and craned my neck to see the glowing red numbers of the digital clock face. 11:36. I pushed myself up to a sitting position to look again. I'd slept a long time.\n\nKieran shoved an open bottle of water at me. I took a sip, then tipped the bottle to gulp more freely. I could hear Kieran's bare feet shuffling to the master bathroom, then the thunderous waterfall sounds of him urinating. He hadn't bothered to shut the door, which I was beginning to recognize as a real trend with the men I'd been seeing lately. They were all way more comfortable with sharing their bathroom routine than I'd ever been.\n\nI offered the remaining amount of water to Kieran when he returned. He gulped it down in two swallows and then set the bottle on the bedside table before climbing back onto the bed so he could wrap his warm, naked body around mine.\n\n\"How are you feeling? Are you hungry?\"\n\nI tried to assess my physical well being, eventually deciding that I definitely wasn't hungry. I shook my head. \"Not hungry. You?\"\n\n\"I ate something earlier. I didn't want to disturb you.\"\n\n\"Thanks.\"\n\n\"I have a lab in the morning. It's a once per week thing, so it's kind of long. If I skip it...\"\n\n\"Don't skip it. I understand. Those kind of classes are hard to make-up.\"\n\nKieran huffed a sigh. \"Yeah. I'm sorry.\"\n\n\"It's okay.\" I yawned and let my head drop backward against Kieran's shoulder. \n\nWe sat there like that for several silent minutes. I think I drifted in and out of sleep a few times before Kieran began to situate us back to a prone position. He kissed my neck, close to my ear. \"Night, baby.\"\n\nI nodded slightly before drifting off to sleep again.\n\nThe next time I woke, I was alone. Sunlight streamed through the blinds, announcing another beautiful spring day in Texas. Kieran had told me had a morning class, so I wasn't surprised that he was gone. Just lonely. \n\nWe hadn't gotten the chance to talk about anything. Not about that wretched Ashley, or his plans for dealing with Daniel, or even the intense sex we'd had the night before, which seemed more like a dream to me than reality.\n\nI slipped out of bed to head to the bathroom. I felt heavy and sluggish. Like I could sleep for another eight hours and still not be rested. I realized that I was probably about to start my period. I didn't keep very good track of it since the pills I took made it almost too light to even bother with protection. Almost. \n\nI went through my bathroom routine and got dressed. Then I ambled to the kitchen in search of coffee. Kieran's Keurig machine was poised with a coffee cup in position, just waiting for me to hit the button. I smiled at his thoughtfulness. \n\nThe machine came alive, grinding and hissing, eventually spewing coffee into the waiting mug. I lifted the steaming cup and stirred a spoonful of sugar into my coffee. A faint vibrating noise caught my attention as I was about to sit down. My eyes followed the sound to the cell phone on the countertop. It was Kieran's. He'd obviously forgotten his phone. \n\nI checked the caller ID. It was Daniel. I lifted it up, but it went to voice mail before I could answer it, which was probably a good thing. I wasn't ready to accept Daniel's apology just yet. \n\nAbout 30 seconds later, there was the telltale, short vibration, indicating a message. \n\nI was at a crossroad and I knew it. Either I was going to mind my own business and ignore the message for Kieran, or I was going to be the nosy bitch girlfriend that every guy hates, and listen to Kieran's private message from my brother. I'd like to think I wasn't the type of girl to snoop. But that wasn't going to be the case this time. This was my brother, calling my boyfriend. It involved me.\n\nThat was the rationalization I used to violate Kieran's privacy. It worked pretty well because I had no trouble hitting the playback button.\n\nHey. I'm here if you can sneak away for an hour. That little taste in my bedroom Sunday night won't hold me for long, and Bryan is worked up over this whole thing with Bree, so you know he's useless. Anyway, we can make it quick, in the shower if you want. We've had some good times there. Let me know.\n\nI set the phone down on the countertop before I dropped it. My mind was buzzing and my empty stomach churning. Sunday night? \n\nI thought back to that night. Kieran and I had slept together. Even though I was a heavy sleeper, I knew I'd wake up to him getting out of bed. Wait! I remembered coming back with Bryan. Kieran and Daniel were in the master bedroom with the door shut. The mental image of Daniel's huge grin when they emerged flashed before my eyes. \n\nOh, god. No.\n\nI gripped my belly. There wasn't enough food in there to threaten to come up, but I felt nauseous, just the same. \n\nKieran lied to me. He didn't even try to end it with Daniel. He's just waiting until I head out of town to resume things with him. And probably with Ashley, too. \n\nAll my fears and insecurities came crashing down at once. Daniel. Ashley. Casual acquaintances at the club where he worked. They all had a piece of Kieran. I'd never be enough for him. It was Lance all over again. \n\nThe walls of the apartment quickly closed in on me. I felt dizzy and trapped at the same time. I needed air. Definitely more room to breathe.\n\nI clutched at the tee shirt that was smothering me, but pulling it from my body didn't help. It felt like an elephant was sitting on my chest. I scrambled to the bedroom and grabbed my suitcase and purse. My mind was spinning too fast to reason through my actions. I needed space. If I could just breathe again, everything would be okay. I'd be able to think, then. Work out how I was going to deal with all this. I needed to get out, get away. \n\nI told myself that I was just going somewhere to think, but when my car turned onto the on-ramp of the highway toward Dallas, I had a sinking suspicion I wouldn't have the guts to stop until I reached home.\n\n***\n\nKieran\n\nI walked to advanced chem lab, not realizing I didn't have my phone until I tried texting Bree to let her know I was on my way back. I didn't think much about it. I was just anxious to get back to the apartment so I could see her. I hated that she was still sleeping when I left. Our amazing night must've really wiped her out. \n\nI couldn't believe how good sex was with us. It made every other experience pale in comparison. I could easily spend the rest of my life with her, forsaking all others, and all that crap you've heard a hundred times in wedding vows. I thought all that was bullshit. That anyone who would make that promise must be either desperate, or stupid. That was before I met Bree.\n\nShe made it easy for me to settle down. I didn't want anyone else. I couldn't even see myself with another person after being with her. She was everything I'd ever wanted in a woman. I loved her. That didn't even seem like a strong enough word. I adored her. I was obsessed with her.\n\nI took the stairs two at a time, then strode to my door. It was unlocked, which surprised me a little. I'd locked it when I left, but she probably needed to go out to her car for something. \n\n\"Hey, babe. I'm back.\"\n\nI noticed my mobile phone on the counter as I moved into the bedroom. \n\n\"Bree...?\"\n\nI ducked my head into the bathroom and then scanned the bedroom. A tee shirt of hers hung over the chair, but her suitcase was gone. I turned and walked into the bathroom. Her toothbrush was there, along with her deodorant, her hairbrush, and some hair ties.\n\nI couldn't make sense of it. Where was her suitcase? She obviously hadn't packed all her things. \n\nI walked back to the kitchen for clues. A mostly full coffee mug was sitting next to my phone. Shit. I got the sinking suspicion that my phone had something to do with all this. I picked it up and checked for missed calls. \n\nI'd missed one call from Daniel, but there was no message. Or, wait... There were no unheard messages, but the last voice message was from when Daniel called.\n\nI put the receiver to my ear and listened to his voice message. I didn't get past the second sentence before knowing in my gut that she'd gone. She'd heard Daniel's message and gotten the wrong idea. Or maybe it'd been a partially accurate idea, but not one that I wanted her to have. \n\nI lifted my phone to call her, but then realized that I didn't have her number. I hadn't needed it before now. I would've realized that little fact when I tried to text her earlier, if I'd remembered my phone. \n\nGod, what an idiot I am. A complete, fucking moron.\n\nI still had one way to get her number. I considered calling Daniel and asking for it. But playing that out in my mind, knowing how agitated I already was, I was certain it would end up in a fight. And no phone number. I pocketed my cell phone and headed out the door for Daniel's house.\n\nHe greeted me at the door, which was somewhat odd. I hadn't called him to let him know I was coming over.\n\n\"You got my message. Good.\"\n\nI froze. My stomach dropped at the realization. Of course, he'd assume I was there to have sex. He'd called, and when that happened, I usually responded by coming over. \n\n\"What's wrong?\"\n\n\"Bree got your message.\"\n\n\"Bree? How? What was she doing with your phone?\"\n\n\"I took off without it this morning.\"\n\n\"So that gives her the right to listen to your messages?\"\n\nI shook my head. I didn't want to go into that with him. It wasn't important. What was important was that Bree was gone because of what he'd said. \"She's gone, Daniel. I need her number so I can call her.\"\n\nDaniel shrugged. \"If that's what you want...but I wouldn't date someone who goes through my messages.\"\n\n\"Give me the number.\" I was losing patience with him. \n\nHe held out her contact information for me to read as I punched the numbers into my phone. I hurriedly memorized her address while I was at it. I might need to pay her a visit.\n\nIt went straight to voicemail, meaning she'd turned off her phone. I wanted to take her over my knee for driving with her phone off. Regardless of what had happened, or how much she wanted to avoid talking to me, this was a safety issue. She needed to take care of herself because I wasn't always going to be around...\n\nI stopped my train of thought. Even with her gone, I couldn't grasp that it was over. We couldn't be finished. I wasn't going to let that happen.\n\nI locked my phone and shoved it into my pocket. \"Her phone is off.\"\n\n\"I warned you this would happen. Didn't I tell you...\"\n\n\"Shut up, Daniel. I mean it. I don't want to hear one bad word about her. Not from anyone, but especially not from you. Her brother. \n\n\"What exactly is it you have against her, anyway? She told me how you didn't stick up for her in high school. What's that all about?\"\n\nDaniel reeled back as if I'd slapped him in the face. \"High school? You mean all that shit with Lance?\"\n\nI nodded.\n\n\"Shit. I don't know. What the hell was I supposed to do?\"\n\n\"Take care of her, for one thing. Tell her that it wasn't her fault instead of letting her go on thinking that she was the one to blame for that guy being gay. She's had to live with that for years.\"\n\n\"I never said it was her fault. I don't remember even thinking that. Is that what she said?\"\n\n\"She said you never consoled her. Never said anything to her about it.\"\n\n\"I was as fucking shocked as everyone else. Fuck, Kieran. She and Lance were practically engaged. And then, all of a sudden, the whole school was talking about gays. Who was gay, who wasn't...It was a witch hunt after that. I was scared shitless that someone was going to point a finger at me and Bryan. We were right there...just outside the Lance and Bree spotlight.\"\n\nI hadn't thought of the aftermath and how it probably affected Daniel. Bree had mentioned that it was hard on her family, but I think she was mostly referring to her mother. \n\n\"Bree has never needed me. She doesn't need anyone. You've been around her. You know what I'm talking about.\"\n\n\"I don't see Bree the same way that you do. She's a strong woman, no doubt. But she still needs to be taken care of.\"\n\nDaniel slumped down onto the sofa. He looked defeated and confused.\n\n\"I want to be that man for her. I want to take care of her even when she acts like she doesn't want it. This is it for me. My only hope of a happy life is with that girl. Your sister.\"\n\n\"Aren't you the drama queen.\"\n\n\"I don't care what the fuck you want to call me. I just want Bree. That's all. No more Thursday morning sexcapades, no ex-girlfriends showing up on my doorstep.\"\n\n\"Sexcapades?\"\n\n\"And my stripping days are over.\"\n\n\"You quit?\"\n\n\"Yep. I called my boss yesterday. And not because Bree asked me to. She was going to go with me tonight. But I didn't want our last night together to be spent at a gay bar. I wanted it to be just us.\"\n\n\"You've always been such a goddamn romantic, you know that?\"\n\n\"Yeah. I do. You're not that different, you just try harder to hide it. Bryan has told me some of the little things you do for him. So, don't try and throw that caveman act at me, Daniel Weaver. I ain't buyin' it.\"\n\n\"You really mean it? This is it with us?\"\n\nI nodded. \"I can't do that to her. You shouldn't be able to do it to her, either. She's your sister, for god's sake.\"\n\n\"I know. It's just ...\"\n\n\"It's routine, I get it. But it wasn't going to last forever.\"\n\nDaniel nodded and sighed. \"I'm not a total asshole. I never meant to hurt Bree. And I had no idea that she'd listen to that message. I just...\"\n\n\"You were horny, I know. It's not totally your fault that she's gone. Ashley dropped by yesterday to inform me that she was ready to get back together.\"\n\n\"She said that?\"\n\n\"Not in so many words, but almost.\"\n\n\"Was Bree there?\"\n\nI nodded.\n\n\"Fuck!\"\n\n\"It sucked. I didn't handle it as well as I should've, probably. Looking back on it, I should've told Ashley to go fuck herself right then.\"\n\n\"Why didn't you?\"\n\n\"I was just shell shocked, I guess. I never expected...\"\n\n\"What are you going to do? At one time, you turned basket case over that bitch.\"\n\n\"I know. I freaked out when she left. But I'll be ten times worse if Bree doesn't take me back. So, if you're asking me who I pick, there is absolutely no question in my mind.\"\n\n\"What are you gonna do?\"\n\n\"I'm going to keep calling her. If I can't reach her by phone, I'll show up on her doorstep.\"\n\n\"You'd go that far?\"\n\n\"Yeah. Wouldn't you go that far for Bryan?\"\n\n\"Yeah.\"\n\n\"There you have it.\"\n\nDaniel and I both had afternoon classes. I'd planned to skip mine, but now that Bree was gone, there was no reason for me to skip. I knew I'd just sit around and pine for her. It was going to be a long week if she didn't answer her phone.\n\n***\n\nBree\n\nThree days after I left Austin, I still didn't have things figured out. \n\nKieran had called at least a dozen times, and had left four messages. I wanted to talk to him, but each time I saw his number on caller ID, I chickened out.\n\nThe thing was, I needed a friend. One who would understand what I was going through, and why I'd panicked so badly. I only had one friend who knew me well enough to get it. Who would give me advice that was good for me, not just say what they thought I wanted to hear. But I wasn't sure how that would work out when that friend was also the subject of my angst. \n\nOn top of all that, I lost my job. It actually felt like a trivial thing next to all that had happened with Kieran. I saw it coming. The company cut over 50% of its workforce. They were months from filing bankruptcy, and everyone knew it. \n\nThe truth of it was that it freed me. Since the last reorganization, I'd not been doing what I wanted, anyway. And the paths toward that goal were dwindling within the company. I just didn't want to face that fact. They did me a favor by cutting me loose. I might not feel the same way in a month, when the bills started piling up, but for now, I was relieved.\n\nI finished bringing in the boxes of crap I'd collected in my work cubicle during my tenure at that company. Sitting on my dining room table, the trinkets perched atop the notebooks looked cheap and worthless. Mild amusements to occupy my hands while on corporate conference calls that droned on and on. No more of those.\n\nI lifted my phone and scrolled to one of Kieran's messages. I just wanted to hear his voice again. I wanted more than that, but I'd screwed things up pretty well by leaving. And his phone calls were dwindling. He hasn't called at all today. I knew I'd probably missed my window to fix things with him. \n\nI looked down at the voice mails he'd left me with my finger hovering over the edit button. I needed to stop torturing myself by listening to his messages. I should delete them and try to move past this bad decision. Try and like myself again. \n\nI set the phone down on the table. Tomorrow. I'll move on then.\n\nIt felt strange being home during a workday. The house was brighter than normal, making it feel more like a Saturday or Sunday. But when I started surfing television channels, it was apparent that it was definitely not a weekend day. The choices were depressing. Cooking shows, daytime dramas, or talk shows. Since I didn't cook, and had enough drama in my life, already, I had to settle for a talk show. ",
        "As I was trying to figure out what they were discussing, I heard the faint ring of my cell phone. Cussing about leaving it in the dining room, I managed to pick it up just before it went to voice mail.\n\n\"Mom?\"\n\n~\"Hi, honey. I'm sorry to bother you at work.\"\n\n\"It's okay. Is everything alright?\"\n\n~\"Everything's fine, dear. I was hoping you could come by for dinner tonight.\"\n\n\"Tonight?\"\n\n~\"I'm sorry for the last minute notice. Daniel is coming home from school and we thought it would be good to have the family together.\"\n\nI'd forgotten that it was spring break for them. I didn't want to see Daniel, though. I would just picture him with Kieran the whole time and it would drive me insane. \n\n~\"Hello? Sabrina?\"\n\n\"Yeah, Mom. I'm here. I, uh...tonight's not a good time for me. I-I lost my job today.\"\n\n~\"Oh, no...\"\n\n\"They laid-off over half the staff. I'm okay. I mean, I knew it was going to happen. I'm just...a little stunned, I guess. I wouldn't be very good company tonight.\"\n\n~\"I understand, dear. I'm so sorry. Sunday it is, then.\"\n\nThat was our standing family dinner. There was no way to get out of that. I only had two more days to get my act together with Daniel, because he was surely going to be there. \"Sunday.\"\n\n~\"Okay. I'll let you go. Let us know if you need anything.\"\n\n\"I will. Thanks, Mom. Bye.\"\n\nMy mother was never one to console or fuss. It made her uncomfortable as hell. I hadn't planned to tell her about losing my job until I had to use it as an excuse to get out of dinner. And I knew right after I told her, she'd hang up that phone as fast as she could to keep from having to comfort me. \n\nIt was just her way. With me, anyway. Mothers and daughters were different. My girlfriends' dysfunctional relationships with their mothers proved that. I didn't hold any of this against my mom. She'd been raised believing that the woman kept a stiff upper lip at all times, and that was the way she'd brought me up. Women are strong and capable. They don't bog their husbands down with needless weeping over minute details. \n\nI hadn't always fundamentally agreed with her. When I was transitioning from puberty to adolescence, my hormones raging, and my mood swings erratic as hell, I resented her aloofness. I equated her attitude to a lack of caring about me. Father didn't help. When he wasn't traveling on business, he was tinkering around the yard or in the garage. He was never involved, didn't weigh-in on the numerous arguments, although I was certain he was aware of them. And Daniel...he butted out, completely. \n\nMom didn't treat Daniel the same way she treated me. She was always fawning over Daniel, making his favorite foods, gushing over his latest school project. It was apparent that she loved him. That she was proud of him. \n\nI wondered if that's why it was so hard for him to tell my parents about he and Bryan. Did he think he'd lose his favored child standing? It wasn't going to happen. Because if he thought his news was going to be more of a disappointment than my not getting married, he was dead wrong. I cornered the market of disappointment with my parents. Daniel was going to have to live with being crowned the favorite for the rest of his life. \n\nI suppose that every family has their slightly unique dynamic. I didn't think much about ours. There was nothing I could do to change it, short of adopting a whole new family. Or starting your own.\n\nAt some point over the past several days, I decided that I wanted to have children. It was ironic, really, since it was the thought of having Miles' child that sent me to Austin in the first place. Only to meet someone completely different who made me want to settle down and start a family with him. I think that might be the very definition of irony, actually.\n\nMaybe I was ready to forgive myself for all my past mistakes and just move on. All but one. Kieran was going to be difficult to get over. \n\nI tossed my phone onto the coffee table and stretched out on the sofa before pointing the remote control at the television to call up the guide. The top of the hour was approaching and I was hopeful that maybe I'd find an old rerun of some cheesy detective series, or something like that. Anything was better than hearing a panel of women blather on about birth control. \n\nI finally settled on an old Quantum Leap episode. It held my attention for the next hour, at which time, I started channel surfing again. It was then that my doorbell rang.\n\nIt startled me. I wasn't expecting company, and only a handful of people knew I was home.\n\nI crept toward the door, not wanting to alert my visitor to the fact that I was home. Not until I was sure it wasn't a Jehovah's Witness, or some pesky salesperson. Or some burglar, although I highly doubted thieves cased homes in the late afternoon.\n\nWhen I got close to the door, I could see through the slats of the blinds that it was much worse than I'd thought. It was Daniel.\n\nI froze, not sure what to do. Part of me wanted to answer the door and get the yelling and screaming over with. The other part of me wanted him to think I wasn't home so he would leave.\n\nHard knocking ensued a moment later. \"C'mon, Bree. I know you're in there. Just open the door.\"\n\nI heaved a sigh as I reached for the door knob. Since he knew I was there, I might as well face the music. \n\nHis arm raised to start knocking again, but then he took a step backward when the door swung open. \"Oh.\"\n\nWe stood there staring at one another for a few silent moments. He looked tired. A little beaten down. More humble than I'd ever seen him. It elevated my mood considerably. \n\nI opened the door to allow him to enter the house, then gestured toward the living room. The guide was still up on the television. In the background, some other eighties drama had started. I couldn't tell what it was, but the background music dated the show. I lifted the remote to mute it.\n\n\"Do you have any alcohol?\"\n\nI shook my head. I hardly had a thing in the house because I hadn't gone shopping since I returned from my trip. \"There's bottled water in the fridge.\" I wasn't about to offer to get it for him. \n\nDaniel shook his head and tried to smile. I could tell he was struggling with how to start. \"Sorry to hear about your job.\" I shrugged. \"You called it, though. I remember you mentioning it last week.\"\n\n\"Yep.\" There wasn't much else to say. I didn't really feel like talking about my job. He wouldn't understand, and besides, it wasn't what he'd come to talk about.\n\n\"Bryan wanted me to tell you 'hi', and that he misses you.\"\n\n\"Where is Bryan?\"\n\n\"He's at his folks' house by now, I guess.\"\n\n\"Did he drop you off?\"\n\n\"Yeah.\"\n\n\"Risky. What if I wasn't home?\"\n\nDaniel shrugged dismissively. \"I'm sorry about what happened. The message. I wasn't thinking straight.\"\n\nI nodded thoughtfully. I was pretty sure it was the first time I'd ever heard Daniel apologize to anyone.\n\n\"I never meant to hurt you. I mean, not just this past week, but, before...\"\n\nObviously, Kieran had talked to him.\n\n\"That whole thing in high school was...it wasn't your fault. I should've said something...I didn't want...\" \n\nDaniel shook his head, trying to get his thoughts in order.\n\n\"I was afraid of being outed. That someone would discover me and Bryan, and then I'd lose him. So I just tried to lay low and stay out of it.\"\n\n\"Why didn't you just tell me then about you guys? I would've understood.\"\n\n\"Would you have?\"\n\nI was offended that he even had to ask.\n\n\"You were pretty anti-gay after prom.\"\n\nI thought back to my own behaviors. I was hurt and angry. I lashed out pretty viciously at Lance, but also at gays, in general. It wasn't my proudest moment. I could see how that might've been offensive to Daniel. How he would've been hurt by the way I acted.\n\n\"I know now that you didn't mean all those things you said. But at the time...\"\n\n\"God, Daniel. I had no idea...\"\n\n\"I know.\"\n\n\"What about Bryan?\"\n\n\"He knows, too. He's always known that you didn't mean those things. I'm the one who has made us keep our secret all these years.\"\n\n\"That must be hard on him.\"\n\nDaniel nodded. \"I need to fix it. I'm going to fix it.\"\n\n\"When?\"\n\n\"Soon. This week, sometime, I'm going to break the news to Mom and Dad.\"\n\n\"They'll take it just fine. I know they will.\" I could see that Daniel wasn't so sure. \"I can be there, if you want. To soften the blow.\"\n\n\"I think Bryan would feel better if you were there. And I might need a place to stay. You know, if they kick me out. Bryan's parents are pretty hip, but I don't think they're ready for both of us to stay in Bryan's room.\"\n\n\"You can stay here. But it won't go that far. Mom would never kick you out, and Dad has no vote in what happens in the house.\"\n\n\"Yeah, I don't think they'll go that far. It just feels good to have a plan. Just in case.\"\n\n\"I take it Kieran talked to you.\"\n\nDaniel nodded. \"Please don't get mad at him for telling me.\"\n\n\"Oh, I won't. I think I hoped he'd say something to you when I was telling him about everything. I don't like that we've grown apart.\"\n\n\"Me, either. Though I can't seem to stop screwing up. This whole thing with Kieran...It's over, by the way. I mean, we're still friends, but that's it.\"\n\n\"It doesn't matter much now, anyway.\"\n\n\"He quit his job.\"\n\n\"What? Why?\"\n\nDaniel shrugged. \"He did it before you left Austin. He said he didn't want your last night together to be spent at a gay club.\"\n\nMy thoughts wandered to our last sex. I'd spent it tied to Kieran's bed. Just the way that sounded in my head made me squirm.\n\n\"I think he quit so you wouldn't worry about him cheating on you.\"\n\n\"I probably would have. I told him I could handle him working that job, but I'm not so sure. We weren't secure enough in our relationship. I'm not even sure I can get to a point where I trust someone enough that temptations like that aren't a problem. I'll always be wondering if what happened with Lance will happen again. It sucks. For any guy I date, but for me, too.\"\n\n\"I think Kieran knows that about you.\"\n\n\"I know he does. He knows me better than ... anyone.\"\n\n\"He'd never cheat on you. It's not in his nature to do that to anyone.\"\n\n\"After all that effort you spent trying to ward me off of him, now you say these things?\"\n\n\"You know why I didn't want you to date him. It had nothing to do with him being a good guy.\"\n\nI nodded. I knew that. I just wanted to hear him admit out loud that he was a selfish prick.\n\n\"He loves you. You know that, right?\"\n\nIt stung the corners of my eyes to hear those words. I sucked in my breath and held it for several seconds to gain my composure. \"I feel the same.\"\n\n\"Then why won't you take his calls? Talk to him, so you guys can work this out.\"\n\nI shook my head. \"It's not going to work. We live too far apart.\"\n\n\"Well, fix it. Move in with me and Bryan until Kieran graduates.\"\n\n\"With...\" I shook my head. \"I can't just put everything on hold like that. I need to look for a job. Anyway, it's over with Kieran and I...\"\n\nMy voice trailed off as I fought back the tears again. I hadn't said those words to myself, much less, out loud to someone else. \n\n\"You wouldn't understand. I've violated his trust. I panicked and left him without even trying to talk to him first. He'll never trust that I won't do that again.\"\n\n\"I didn't help you on that front, either. I kind of told him that you were going to run. But you can fix that, too.\"\n\nI wondered if I could. I'd been searching for ways to take back what I'd done. But each passing day it felt like the act of leaving grew bigger. Too big to fix. I'd already been gone for almost as many days as our whole relationship. It was just easier to move on at this point.\n\n\"It's not too late.\"\n\nI wanted to hang onto the hope in Daniel's words, but I knew that I shouldn't. Even if he did take me back, I certainly didn't deserve it. I was a fucked-up coward. Kieran deserved way better than me.\n\nI shook my head and waved my hand. I didn't want to talk about it, anymore. \n\n\"So, you're headed to Mom and Dad's for dinner?\"\n\n\"Yeah. You coming?\"\n\n\"I wasn't planning on it.\"\n\n\"Bryan is going to be there. I know he wants to see you.\"\n\nMy heart swelled. I'd been thinking about Bryan a lot. Missing him more than I realized, judging from the ache in my chest. \"I really love that guy.\"\n\n\"He loves you, too. Come to dinner with me.\"\n\nMy head was nodding before I could stop it. \"Okay.\"\n\nDaniel smiled triumphantly, then dug into his pocket for his cell phone. \"I'll let him know and have him meet us there.\"\n\nThe car ride to my parents' house was surprisingly upbeat. Daniel and I joked and laughed pretty much the whole trip. It was a relief to have my brother back. I was looking forward to experiencing what life with a sibling was like. It already felt less lonely than it'd been since I left Austin. \n\nDaniel gripped my hand in his before we walked through the front door. I assumed that it was for him. To give him strength to do what he needed to do...for Bryan...for them...but also to bring the entire family together. It could never happen without telling everyone about he and Bryan. That secret might as well have been the Grand Canyon in the middle of our family.\n\nVoices in the kitchen confirmed that Bryan was already there. I glanced at the dining room table as Daniel dragged me past it. There were five places set, so Bryan must've alerted my mom that I was coming. When we came around the corner, though, nothing could prepare me for what I saw.\n\nKieran.\n\nFor a couple of seconds, no one noticed we were there. I held my breath, feeling invisible and wondering if I was actually dreaming. Bryan was sandwiched between Kieran and my mom at the sink. They had some sort of assembly line working, it appeared, and Bryan was giving Kieran hell about something he'd just done. \n\nDaniel kissed me on the cheek, snapping me into reality. He had a devious grin on his face and I knew that he'd planned this, or maybe they all had. \n\n\"Are we interrupting some great masterpiece?\"\n\nAll three faces turned toward us, but my stunned gaze was fixed on only one. He was more gorgeous than I remembered him, if that was even possible. \n\n\"Sabrina! You came.\"\n\nMy mother's voice broke our invisible connection. I shifted my gaze to meet hers. \"Daniel made me.\"\n\nIt sounded like a pubescent excuse, but I couldn't think of anything else to say. It was partly the truth. Bryan was on me in a second, his arms wrapped tightly around me and lifting my feet off the ground. I noticed Daniel's palm covering Bryan's behind my back, out of Mom's view.\n\n\"I knew the extra potatoes wouldn't go to waste.\" Mom was already over the tearful reunion and onto the more practical things, like whether or not there was enough food for everyone. \"Sabrina, you'll need to put out another place setting.\"\n\nI glanced back to Kieran, who didn't appear to have moved since I first arrived. I wondered what they'd told Mom about us, but then got my question answered right away.\n\n\"Sabrina, this is Kieran. He's one of Daniel's school friends.\" Mom turned to Kieran. \"Sabrina graduated with honors from UNT.\"\n\nI was shocked by her introduction. It almost sounded as though she were proud of me. \n\nKieran wiped his hand on a dish towel and held it out to me in a polite handshake. \"Nice to meet you...Sabrina?\"\n\nHe winked at me as we shook, and I had to stifle a giggle. \"Bree. Just call me Bree.\"\n\nKieran held my hand a little longer than what was considered customarily appropriate. I felt his body heat infuse into mine through our connected palms and it sent my cheeks to flame.\n\n\"Kieran graduates in a couple of months. He's considering moving to Dallas. Isn't that nice?\"\n\nIt dawned on me that my mother was trying to play matchmaker, and that thought alone made me want to kiss Kieran on the lips, just for the shock factor of it. Well, maybe that wasn't the primary reason why I wanted to kiss him. I had a number of reasons, half a dozen of them completely inappropriate for my parents' kitchen. \n\nI glanced around at Bryan and Daniel, who were wearing matching conspiratorial grins on their faces. This game they'd started was the perfect distraction from all the other taxing things. It gave me something to focus on other than my overbearing mother, my absent father, and the great big, stressful secret that Daniel may uncover at any moment. \n\nAnd it quieted the inner dialogue that had plagued me since I left Austin: Where is Kieran; Who is he with; What is he doing; Is he thinking about me; Does he miss me; Has he moved on...? It had been an endless litany of worries over what I'd done to us. Over how I'd allowed my own insecurities to ruin a near-perfect thing. \n\n\"Once you get the table set, I could use your help in here, dear. It takes a village to make twice baked potatoes.\"\n\nI glanced around the room one more time before heading to the cupboard where the plates were kept. Other than my mother barking orders, it felt so familiar for all of us to be in the kitchen together. Like we were all back at my brother's place in Austin again. \n\nThe guilt of leaving washed over me. What I did must've hurt Kieran pretty badly. Enough for my brother and Bryan to cook up this whole reunion. Or, maybe it wasn't intended to be a reunion. Maybe it was closure for Kieran, and that's why they kept it a secret that we'd met before. \n\nMaybe Kieran was missing my friendship as much as I'd been missing his. It made perfect sense. He wanted to start over. As friends.\n\nI squelched the disappointment I felt with that realization. Of course, I wanted more. But I'd take being friends over nothing at all. And I'd be happy with that. Right?\n\nI didn't have much quiet time to think through everything with my mother around. She seemed hell-bent on presenting me as the homemaker that I most certainly wasn't. I could follow directions, though, so that's what I did. To please her. Or maybe to fake my way into at least appearing to be who she wanted me to be for a short period of time. If for no other reason than to steal an ounce of acceptance from her. \n\nI didn't want to believe that I was that needy for her approval, but I think some habits are hard to break. I'd been suffering that particular anguish for too long to change, apparently. \n\nI was exhausted by the time we sat down to eat, lamenting over not being at my usual restaurant. It might be a long time before I could afford to go back there again. The wise thing to do would be to start cutting back unnecessary expenses right away. I'd lived on ramen noodles before, I could do it again. \n\n\"Sabrina!\"\n\nI blinked myself back into awareness and smiled at my mother. \"Yes?\"\n\n\"I was trying to remember the name of that little stuffed toy you used to carry with you everywhere...Allie?\"\n\nI glanced at Kieran. He was doing the best he could to stifle a grin. The joke was on Mom. If she thought silly stories of my youth were going to embarrass me into joining the conversation, she was dead wrong. Kieran knew a lot worse about me. \"Elfie, Mom. It was an elephant, so I creatively named him Elfie.\"\n\n\"That's right. She carried that pitiful stuffed animal with her everywhere.\"\n\n\"I was, like, four years old.\"\n\n\"Mine was a little gray sea lion. My parents bought it for me at Sea World. His name was Whiskers. I loved that thing.\" \n\nKieran had held my gaze throughout his childhood confession. He didn't have to say it to make me feel comfortable. There was nothing Mom could say that would make me feel uncomfortable around Kieran. Besides, she'd only done it to get me talking. I was well-aware of her tricks.\n\n\"How is the semester going for the two of you? Are you still on track to graduate in the fall, Bryan?\"\n\nIt was the first thing I recalled hearing my father say. ",
        "\"I am. I'm paying for it this semester, though.\"\n\n\"I'm sure it hasn't been easy keeping Daniel focused. He's always struggled with school.\"\n\nIt suddenly dawned on me. I glanced between my dad and Bryan as they continued to talk about school. Dad knew. He'd figured it out somewhere along the line. \n\nI finally caught Daniel's eye but I couldn't convey what I was thinking without everyone seeing it. I tipped my head toward the kitchen, indicating that I wanted him to meet me there, then quietly excused myself. A moment later, Daniel joined me.\n\n\"What?\"\n\nI held my finger to my lips and lowered my voice to a whisper. \"Dad knows.\"\n\n\"Knows what?\"\n\n\"He knows about you and Bryan.\"\n\n\"No, he doesn't. What makes you think that?\"\n\n\"The way he expects Bryan to take care of you. Hetero guys don't take care of other guys.\"\n\n\"You don't know what you're talking about.\"\n\nKieran joined us in the kitchen and leaned over to listen to our conversation.\n\n\"Bree thinks Dad knows about Bryan and me.\"\n\nKieran nodded. \"Oh, he definitely knows.\"\n\n\"What? How do you figure?\"\n\n\"The way he's talking to Bryan about you. He wouldn't do that if he thought you guys were just buddies. He knows for sure.\"\n\nDaniel ran his fingers through his hair. \"Shit.\"\n\n\"You should tell them now.\" I'd vowed to myself not to push my brother into doing it, but clearly he needed it. \"Isn't that why you wanted me to come? To support you?\"\n\n\"I'm here for you, too. Just do it.\"\n\nDaniel swallowed hard and nodded. The blood had drained from his face, but it held the expression of a man on a mission, nonetheless.\n\nI squeezed Daniel's arms as Kieran patted him on the back, then we all headed back to the dining room.\n\nMy heart pounded in my chest as though it was my news to tell. I had no doubt about my parents' reaction, but this was big news. And Daniel had been keeping it secret for probably around six years. Maybe even longer than that.\n\nDaniel cleared his throat and then filled his lungs with air, as if he were about to dive into a deep pool of water. \"Mom, Dad, I have something...\" His eyes fixed on Bryan, who smiled and nodded. \"...We have something to tell you.\"\n\nI checked Mom's face, then Dad's. They gave Daniel their full attention, but there was no curiosity in their expression. They knew what was coming.\n\n\"Bryan and I are...more than friends. We're a...a couple, I guess you could say.\"\n\nMom took a deep breath but it wasn't a gasp. A moment later, she let go a sigh of relief and looked to Dad to respond.\n\n\"It's about time you came clean. I don't know how much longer we could keep up the pretense.\"\n\n\"How long have you...?\"\n\nDad shook his head and shrugged. \"I don't remember a time when I didn't suspect something.\"\n\n\"Why didn't you say something?\"\n\nMom smiled in her most reassuring way. \"We were waiting for you to tell us. We knew that you would, sooner or later.\"\n\n\"There must be some reason you picked now to come out with this news.\"\n\nDaniel glanced to Bryan and then to Dad. \"We want to stay in Austin over the summer. We can stay in the same house and work, and...\" Daniel shrugged, his gaze darting to Bryan for help. \n\n\"We can stay together without bothering anyone.\"\n\nDad winced. \"Have we given the impression that you're a bother?\"\n\nBryan quickly realized that Dad had taken his statement the wrong way. \"No, Mr. Weaver. It's not that. It's just...We wouldn't want anyone to feel uncomfortable now that it's known that we're...you know...together.\"\n\nDad chuckled. \"We've known for years and it never stopped us from letting you sleep over before.\"\n\nBryan looked over at Daniel. They were stunned. I couldn't help it, I let go a giggle. Mom and Dad had really pulled one over on Daniel and Bryan. It was pretty funny, actually. \n\nA second later, I heard Kieran stifling a chuckle. I knew exactly why he was laughing. There was something very amusing about seeing my brother squirm. \n\n\"But I understand about wanting to stay where you are. It's time for you to move on with your life.\"\n\nI heard Mom sniffle over my right shoulder. I kept staring at Dad, hoping he'd say more and drown her out. She hadn't shed a single tear when I left the house, but I always knew with Daniel she'd be different. \n\n\"Is that all for announcements?\"\n\nDaniel grinned. \"For now.\"\n\n\"How about you, young lady?\"\n\nI shook my head. \"Nothing, really. Newly unemployed, but I think you all know that, already.\"\n\n\"Okay, then.\"\n\nMom stood up and began grabbing empty plates. Kieran and I stood up next to help clear the table. I caught a glimpse of Dad embracing Bryan as I took a handful of dirty dishes to the kitchen. He'd always loved that boy. Like a son. Bryan had been a part of our family for as long as I could remember. Now, it seemed, it was official.\n\nKieran and I exchanged looks in the kitchen. We were both relieved that it had turned out so well. I don't know what would have happened, otherwise. I know I would've felt immensely guilty for pushing Daniel into confessing everything, even though it was the right thing to do, no matter the result. But I didn't have to worry about that, anymore. \n\nI caught Bryan in a hug during my next trip to the kitchen. \"I guess you're going to be my brother for life now, huh?\"\n\n\"I hope so, sweetie.\"\n\nI held him in a tight hug. \"I've missed you.\"\n\n\"Me, too. Come back to Austin with us.\"\n\n\"We'll see.\" I don't know why I said that. It was out of the question for me to up and move. My home was here. And I needed to start looking for a job right away. \n\n\"We'll take care of you, I promise.\"\n\nI think that was why I was even considering it at all. Because I knew that Bryan and Daniel would take care of me. And because it would be a lot of fun to hang out with them and their friends.\n\nBut I was torn about being so close to Kieran. If we were going to just be friends, which is how things were looking, it was going to be difficult for me to not want more. And I couldn't even begin to imagine how I was going to feel about him dating someone else. \n\nThat bitch, Ashley came to mind, and I almost dropped the silverware I was holding. I wouldn't survive her, or someone like her. I knew that much for sure. \n\n\"I need a decoder ring to sort through all the mixed signals you've been sending.\"\n\nI turned. Kieran was leaning over me, his face now inches from mine. \"Huh?\"\n\nKieran gave me a stern look as he stood upright. My mother's clicking heels were growing louder with each footstep behind me. \n\n\"I can finish up here. Why don't you two go join the others.\"\n\n\"Go ahead, Kieran. I'll be in, in a minute.\" \n\nI needed time to recover from Kieran's heated glare and close proximity. What did he mean by mixed signals? I'm just trying to play along and be his friend, like he wants. I can't help it if my body still reacts when he gets too close. Shit. What does he expect?\n\nNothing had changed for me, I realized. We could say we're just friends all we want, but it wasn't going to be that easy to forget what we were like together. Not for me, anyway. \n\n\"I think he likes you.\"\n\n\"Who? Kieran?\"\n\nMother rolled her eyes at me and continued washing. \"Don't act coy with me. I've seen the way you look at him, too. He's a handsome young man.\"\n\nI didn't want to have this conversation with my mother. \"Are you sure he's not gay? He is a good friend of Daniel and Bryan's.\"\n\n\"Oh, no. He couldn't be.\"\n\nHer words may have sounded certain, but judging from her expression, I'd put enough doubt there to make her wonder. I didn't want her to think he was gay, well, actually, I didn't care what she thought, but I did want her off my back about him. And the easiest way to do that was to convince her that he wasn't interested in me. I knew she'd never believe that I wasn't attracted to him. I mean, shit! Who wouldn't want Kieran?\n\nIt must've worked because she changed the subject. Maybe I was learning how to handle my mother, after all. \n\nWhen the dishwasher was loaded, I joined the guys. They were watching a rerun of some college basketball game on the television and talking about the upcoming tournament. Apparently, the tournament rankings were due to come out in two days. \n\nKieran stood up and offered his seat to me. He was sitting in my mom's chair, not that he knew that. I plopped down on the floor instead, with my back against the end of the sofa just next to where Bryan and Daniel were sitting. Kieran stepped over my legs and situated himself next to me on the floor, leaving the vacant chair for my mother, whenever she decided to join us. \n\nOrdinarily, I would say that her attendance was iffy, but with Daniel in town, I doubted she'd linger in the kitchen much longer. She tended to drop everything to spend time with my brother.\n\nKieran leaned over to talk low in my ear. \"What is going on in that pretty little head of yours?\"\n\nI shrugged. \"Everything, but nothing in particular. Still a little shell shocked over dinner.\"\n\n\"I didn't think he'd do it.\"\n\n\"Me, either.\"\n\n\"But that's not what I was asking.\"\n\nOf course, I knew that. He wanted to know what I was thinking about us. I sighed, not sure where to begin. Not even sure at that point how much I should confess about my true feelings. If I came on too strong, would it scare him away?\n\nI fidgeted with the hem of my shirt as I worked out my strategy. One thing was certain. I was still feeling immensely guilty about leaving Austin.\n\n\"I'm sorry for leaving so abruptly. I should've talked to you first.\"\n\n\"Would that have changed your mind?\"\n\nI hadn't thought it through that far. I was pretty spooked, so maybe I would've left, regardless. \"I don't know.\"\n\n\"You needed space. We both needed to step back, I think. Things got hot and heavy pretty fast.\"\n\nMy heart fell to my stomach. He was pulling away, I could tell. This was the start of an \"I just want to be friends\" speech if I'd ever heard one. The full agony of breaking up hit me hard. Somewhere in the back of my mind, I still had hope that it would work out with us. That hope was now being crushed to pieces.\n\nI fought the desire to flee with every fibre of my being. It would be easier on everyone if I just feigned being tired and drove home. That way Kieran wouldn't have to say the words that were on the tip of his tongue, and I wouldn't have to try and keep my shit together when I heard them. \n\nRunning would only prove that I was a coward, though. For the second time in days, it would confirm that I was too weak to handle any sort of relationship with Kieran. We couldn't salvage even a friendship from that.\n\nI had to stay put and ride out the storm this time. No matter how much I didn't want to do that.\n\n***\n\nKieran\n\nBree was driving me bat-shit crazy.\n\nSeeing her again, but not being able to touch her, was the ultimate exercise in restraint. And the way she was acting was just taunting the beast inside me. I vacillated between this immense desire to open my heart to her, and a more pressing need to take her over my lap and spank her until I was sure she wouldn't be able to sit for a week. \n\nOne second, she would smile so sweetly at me that I could hardly refrain from kissing her. The next second, she'd appear ambivalent, or even downright distressed about me being there. \n\nI'd been seeking her consent since she arrived. Pleading with my body language, imploring with my eyes. I wanted some sign that my advances would be welcomed. I sensed not even the slightest recognition or acknowledgement. Mixed signals, at best. She would pull me closer to only push me away again.\n\nFuck that.\n\nRationally, I decided that I had two choices. I could react to her pulling, or respond to her pushing me away. Irrationally, the inner beast inside me didn't give a fuck what signals she was sending. It wanted to take her choices away from her. Claim her, punish and consume her, until she was a part of me.\n\nI'd never trusted that beastly side of myself. It'd gotten me in trouble so many times. But that was before. Bree was the only woman I'd been with that responded to that part of me. I'd finally been able to set him free and the result was phenomenal. I wouldn't be able to settle for less again. Even if things didn't work out with Bree...\n\nBut they had to work out. I needed to make that happen. I had to trust her not to run away again. At least long enough for me to show her in my own way how much she meant to me.\n\nNone of that was going to happen at her folks' house. \n\nWhen Bree's mother joined us from the kitchen, I decided to make my move. Pushing myself to standing, I began to express my thanks and say my goodbyes.\n\nI kept one eye on Bree as I went through the motions. She was crestfallen, like she'd been since our whispered conversation on the floor. I'd get out of her what she'd been thinking later. The darker side of me knew how to open her up. \n\nDon't keep me waiting, Bree.\n\nI pulled out my phone and punched in the address I'd memorized from days earlier and hoped that it was current. I could always call Daniel or Bryan to confirm, but I didn't want them to know what I was planning. This was between Bree and myself. It was private. What I had planned was very, very personal.\n\n~\n\nWaiting outside the dark house gave me a chance to form a plan. If this were to work, I had to go all out. Throw caution to the wind and trust that it wouldn't scare the ever-loving shit out of her. \n\nI checked my phone for the time. It'd taken me about 20 minutes to drive to her house, and I'd been sitting outside for another 30 minutes or so. I expected her to arrive at any time. If this is where she lives.\n\nLong beams of light illuminated the pavement. It was the first car to turn onto this quiet street since I'd parked there. Adrenaline began coursing through my veins, kicking up my heart rate a notch. The vehicle was moving slowly. Too slowly, it seemed.\n\nShit!\n\nThe spotlight of the police car shone through my back window as the cruiser came to a stop behind me. I was fucked. Good and truly fucked. I had no reasonable explanation for being parked there. Stories started spinning in my mind, rational excuses for why I was parked in front of a house that was clearly unoccupied at the moment.\n\nThe cop took his time. I knew he was running my Oklahoma plates. It was obvious that I didn't live anywhere close. I had to keep reminding myself that I wasn't doing anything wrong. That what I had planned, while absolutely sinister, wasn't illegal. Not that I had the slightest intention of divulging my scheme to the police officer. I doubted he was that open minded. \n\nThe longer it took for him to decide my fate, the more I debated on whether or not to get out of my car. It was a crazy thought. One of many that raced through my head every second that I sat there. In a more lucid moment, I decided that I had the least chance of getting shot staying put where I was. That was when I also had the brilliant idea to lower my window and place both my hands on the steering wheel where the officer could see them.\n\nTwo shadows approached from behind and I silently rehearsed the story I'd cooked up in my head.\n\n\"Is that him?\"\n\n\"Yes, officer.\"\n\nBree's voice broke the invisible stranglehold that the police officer had on me. I released the steering wheel and cupped my palm over my eyes to block the bright light that was blinding me from my side view mirror. \"Bree?\"\n\n\"Sorry to have caused trouble. I got detained at my folks' place.\"\n\n\"No problem, ma'am. Glad it was nothing. Y'all have a good eve'nin.\"\n\nI rolled up my window, shut off my car and got out. The spotlight suddenly dimmed to black, leaving me to blink away the little circles of twinkling lights that now plagued my vision. We watched the squad car pull away from the curb and continue its steady creep down the dark street.\n\nBree went to her car and proceeded to pull it into the driveway, opening the garage door in time to pull inside. I met her at her car, the garage door grinding downward to shut behind us.\n\nMy plan had been totally derailed by the cop visit. My mood was all off. Instead of being the possessive, asshole boyfriend who'd come to take what was his, I was now the grateful and humble friend.\n\nI owed her an explanation for why I was there. I needed to come clean. But when I looked down at her face, I saw the same expression I'd left at her parents' house. \n\n\"Did you get lost on your way to Oklahoma?\"\n\nAt first I was shocked by what she said. Then hurt. I was glad that my plans were destroyed, because we weren't in a good enough place for what I'd wanted to do. \"No. I'm exactly where I want to be.\"\n\nBree blinked hard. My answer surprised her. I moved toward the door to her house and opened it for her. She hesitated for a moment, probably debating on whether or not to open the garage door and kick me out, but then walked past me into the house. I followed her.\n\n\"I had this plan, before the cop arrived.\"\n\nBree tossed her purse onto the kitchen counter. \"Oh, yeah? What was that?\"\n\n\"I was going to yank you out of your car by the hair and shove you down onto the hood.\"\n\n\"In front of my neighbors?\" I nodded. \"Then what?\"\n\nThe flush of her cheeks was noticeable. Her fingers were busy picking at her cuticles. \"I would've wanted to fuck you at that point.\"\n\n\"But you wouldn't?\"\n\n\"No.\"\n\n\"Because that's not what friends do?\"\n\nHuh? Her question caught me off guard and derailed my thought pattern. I needed to set one thing straight right away. \"I don't want to be your friend, sweetheart.\"\n\nI checked her expression. She looked a little lost. For some reason, it made my dick twitch seeing her like that.\n\n\"I would've refrained from fucking you the way I wanted in order to give you what you need first.\"\n\nBree's voice came out as barely a whisper. \"What is that?\"\n\n\"A good, long, hard spanking.\"\n\nBree licked her lips and then swallowed. Her fingernails dug into the heels of her palms. \"Why?\"\n\n\"Atonement.\"\n\nBree's eyes dropped to the floor. She was riddled with guilt, it was so obvious. We would never be able to move forward as long as she felt like that. It first dawned on me when she was apologizing at her parents' place. The very first moment we had to talk semi-privately, she chose to apologize. Self-loathing and doubt was consuming her so completely, she couldn't feel anything else.\n\nIf it were anyone but Bree, I wouldn't be so sure. I knew this girl. She was strong and vivacious. Not sorry. Not shaky, like she was barely holding it together. It sounded cruel, what I proposed doing, and something I never thought in a million years I'd be suggesting to the girl I'd already decided I was going to spend the rest of my life with. But seeing her standing there like she was, unsure what to do or think, I knew I had to follow through. She was begging me to step up and fix things, and I wasn't about to let her down.\n\n\"I know we need to talk, but we need to settle this first.\"\n\nI could feel the trepidation rolling off her in waves. I could only imagine the struggle inside her mind. To admit that something humiliating and painful was just what she wanted was probably difficult to swallow for a girl so independent and headstrong. It was a cruel dilemma, and I loved every second she stood there grappling with it. No drug on earth could match the rush I felt from watching her struggle.\n\nI suppose that made me some sort of sadist or something. I didn't know a lot about S & M, except what I'd read about the Marquis de Sade. I didn't really want to cause Bree the sort of pain that I'd read about, though. I was more interested in watching her give into her desires. Leading her to that edge of what her mind would accept, and then pushing her over that line. Whatever that made me, that was who I truly was inside, but never knew it until I met Bree. ",
        "The beautiful part of the whole thing was that she was the exact opposite side of the same coin. We were made for each other. It was too fucking corny to even think without wincing. When did I become a romanticist, for god's sake? It sounded more like the theme of a Disney movie, than any reality I'd come to know. But that didn't stop me from believing it.\n\nI waited for the lines around Bree's eyes to smooth out, indicating she'd come to grips with her decision. There was never any question that she'd surrender to it. I knew that she would. I was in no hurry for her to get there. We had hours and days ahead of us. Then, weeks and months and years, because I wasn't going to leave Dallas without her. She just didn't know that, yet.\n\n\"Where is your bedroom?\"\n\nBree pointed down a short hallway. \n\nI held out my hand. \"Take me there.\"\n\nHer balmy palm touched mine, shaky fingers curling around the back of my hand. She led me through the open doorway at the end of the hall. I could've guessed this room would be the master, but it was more effective to have her lead me to it. Then there would be no denying that this was her choice. \n\nThe tension in the room was thick. More than what I wanted. I fought the urge to wrap my arms around her in a comforting hug. If I made this easy, she wouldn't take it seriously. She'd reject it as nothing more than playtime. Then we'd be right where we started. So, I sucked it up and pushed on.\n\nRather than order her to undress, I took it upon myself to do it. It was my compromise. My way of taking off some of the pressure. \n\nI left her top alone, going straight for her jeans. I could spank her ass without removing her shirt. In truth, it made things easier for me. I'd be able to stay more focused if her tits weren't distracting me. \n\nShe allowed me to remove everything without a struggle but she was about two seconds from bursting into tears. What a brave woman she was. She made me so proud. I would never want for anything if she were by my side. \n\nWhen she was naked from the waist down, I smoothed her lovely bare skin with my palms. The first tears skidded down her cheeks. I knew she felt that she didn't deserve my affection, and she was right. Not yet, anyway. She had to pay in flesh first. \n\nSitting on the bed, I pulled her between my splayed thighs, facing me. I then eased her torso over my left thigh until her head was on the mattress and her tummy resting on my leg. That, of course, presented her bare bottom right in front of me. As an afterthought, I hooked my right leg over her legs to pin them down. \n\nI hadn't really planned on doing it this way. I'd been envisioning her draped over my lap but that would've been awkward and difficult to balance if she squirmed at all, which I hoped that she would. \n\n\"I'm not going to go easy on you, Bree. This is going to hurt.\"\n\nBree closed her fists around the comforter beneath her. I couldn't see her face, but judging from her shaking, I could guess that she'd already begun to cry.\n\nI didn't give her any warning before the first series of swats began. They weren't particularly hard, just a warm-up to the real thing. They did warm her skin nicely, leaving it a pleasant shade of light pink. I took time to run my fingers over the heated flesh, reveling in how pretty her ass looked like that. I could hardly believe I'd never tried this before. Then again, I'd never dated anyone who wanted or needed it, either. \n\nIt was time to get down to business. \n\nI lifted my arm as far as my shoulder would allow and swung with all my strength. Bree screeched and then buried her face in the covers. I delivered three more with the same intensity before I had to catch her arms to keep her hands from covering her ass. When I had her arms secure, I continued the harsh swings. It wasn't easy with her squirming, but I managed to deliver another six swats, for a total of ten. \n\nMy hand stung like a mother from it. Her ass was an angry red, though, so I knew it hurt worse than my palm. I probably could've stopped there, but I wasn't positive that she'd really surrendered to the beating. She'd fought me up to the second to last stroke, so there was a possibility she was still rejecting the spanking.\n\nI continued to spank her ass, but with lighter blows. I knew they had to hurt almost as bad as the harsher swings since her ass was already raw. But she fought me less with each swing, only squirming a little after each stroke, more as a reaction to the pain than an effort to get away. \n\nI quit with that. \n\nAfter her panting slowed down a bit, I lifted her so she was standing in front of me again. Her cheeks were blotchy and her eyes, bloodshot. But the sadness and contempt she'd held in them before was gone. She looked relieved and tired. \n\n\"Do you know why I did that?\"\n\nBree nodded.\n\n\"I need to hear you say it, Bree.\"\n\nShe nodded her head as she sniffled and swallowed. \"Because I ran away.\"\n\n\"What else?\"\n\n\"I didn't even try to talk to you.\"\n\nI waited for her to continue. She wasn't quite going down the path I wanted.\n\n\"I - I disrespected your privacy by listening to your voice message.\"\n\nI shook my head. \"I wouldn't hold that against you. There should be no secrets between us.\"\n\nI waited for her to continue, but she was at a loss. Her mind was still on the negative things that had happened in the past. The things she'd done to, in her mind, deserve a punishment. I wasn't really punishing her, though.\n\n\"Do you feel better now?\"\n\nBree shrugged. She clearly felt less guilt but she was unwilling to admit it, yet.\n\n\"That spanking was for your benefit, not mine. I forgave you for running about two seconds after I realized you'd done it. You think I don't understand why you felt you had to get away?\"\n\nFresh tears rolled down Bree's cheeks. She didn't move to wipe them away.\n\n\"Maybe a couple of swats were for driving to Dallas with your phone off. That was just plain unsafe. But the rest were so that you could get past what happened and focus on what is important. Us.\"\n\nBree let go a sob. I pulled her into my arms and held on tight as the sobbing wracked her body. Her tears soaked the shoulder of my polo shirt. I was glad I'd decided to leave it on, otherwise I would've had to break our embrace to fetch some tissue. Oddly, it was thoughts like this that floated around in my mind as she cried it out. Calm, serene, normal thoughts. As if her crying on my shoulder was the most natural thing in the world. That's how it felt to me, though. Just right.\n\nAfter a few minutes, it subsided. Bree lifted her head from my shoulder and covered her nose as she sniffled. \n\n\"I need a Kleenex.\"\n\n\"Use my shirt because I'm not ready to let you go.\"\n\nI kept a firm hold on her to let her know that I was serious. Then I rolled my shoulder forward to offer my already sodden sleeve to her.\n\n\"It'll wash out.\"\n\nBree hesitated for another second before wiping her nose on my sleeve. I smiled to show her that I approved.\n\n\"You're going to accept my help when I offer it.\"\n\nA tiny smile tugged at her lips as she nodded.\n\n\"I need you to tell me what's been going on in that head of yours tonight, but first, let me get all the old business out of the way.\"\n\nI scooted backward on the mattress to give Bree room to sit between my legs. I wasn't going to give her any space, she had to stay close to me, but this way she could sit and relax. Or so I thought. She hissed loudly when her raw bottom hit the comforter for the first time.\n\nI had to stifle a laugh at that. Her ass was going to be sore for a while. I did my best to look sympathetic as she gingerly settled herself onto one hip. It was hard to appear sensitive with my cock straining against the zipper of my jeans. For some reason, her unease made it swell to epic proportions.\n\nI gazed down at her there in my arms and fell a little more in love with her. She was so vulnerable and tiny, it seemed. It tugged at my protectiveness. I was never going to let her get away again. She belonged with me.\n\n\"I set Daniel straight. He won't be an issue going forward.\"\n\nBree nodded. \"He told me.\"\n\n\"As for Ashley, or any other past girlfriend that might pop up out of nowhere to try and stake some claim...they mean nothing to me.\"\n\nI could see that Bree wasn't convinced.\n\n\"I honestly don't know what I saw in her. I look at her now and all I see is a bunch of plastic surgery trying to cover up a real ugly person. I'm actually embarrassed to admit I even dated her. I should've told you that before, I know. All I was thinking about was what I was going to do to you once I got you inside my apartment.\"\n\nBree smiled somewhat sheepishly and I knew she was remembering our last night together. \n\n\"What we have together...I've never experienced anything like this before. And I don't want to give it up. Ever.\"\n\nBree shook her head and whispered. \"Me, either.\"\n\nI studied her face for a few silent minutes. \"Why have you been pulling away?\"\n\nBree swallowed and cleared her throat. \"It was never because I didn't want to be with you. I thought...I thought you wanted us to just be friends.\"\n\nI shook my head. \n\n\"I thought that once I left Austin, you'd continue things the way they were. With Daniel. Or Ashley. Or both.\"\n\nI shook my head again. \"I don't want them. But that's not the point. What do you want, Bree?\"\n\nShe blinked a couple of times, either surprised or confused by my question. \"I want...I want things to work out with us, but I don't know if they can.\"\n\n\"Why not?\"\n\n\"Well, because of the distance and everything. And because...because of my past. How insecure I am about...about...\"\n\nI put my fingers on her lips to stop her from talking. \"I know. I just need to prove to you that I'm not Lance. Give me some time to do that, okay?\"\n\nBree managed a weak smile.\n\n\"As for the distance...You're coming back to Austin with me.\"\n\n\"Kieran, I can't...\"\n\n\"You can. There is nothing to keep you here. You can find a temporary job in Austin, until we figure out where we're going to live after graduation.\"\n\nI could see the cogs turning in her head. Her eyes darted back and forth as she began formulating arguments, and questions, and doubt.\n\n\"There's nothing you can do or say to change my mind, so you might as well give up and agree to it now.\"\n\n\"That's it? I don't have a say at all?\"\n\n\"No. Not in this.\"\n\nBree opened her mouth to object, then shut it again. She was obviously at a loss for words.\n\n\"Your brother and Bryan won't be far away. And settling in Dallas after graduation is a strong possibility. But as much as I like how safe this neighborhood is, you can't keep renting this place while we're together. You have to stay once you decide to move in with me.\"\n\n\"I thought I didn't get to decide?\"\n\nI grinned at her. \"You don't get a choice about going to Austin. I won't, however, make you move in with me.\" \n\n\"Daniel and Bryan are in on this, aren't they? That's why they asked me to move down there.\"\n\n\"Yes and no. They asked you to move in with them because they like having you around. But they also know that I'm going to try and convince you to move in with me, instead.\"\n\n\"And how do you plan to do that?\"\n\n\"I'd hoped you would jump at the chance to be together night and day. Endless, mind-blowing sex with the occasional spanking thrown in.\"\n\nBree's eyes narrowed to slits as she reached around to her bottom. \"I can live without those.\"\n\nI slid my fingers between her thighs until I felt the wetness. \"Bullshit, you can.\"\n\n\"That's not fair.\"\n\n\"Then don't try and fib to me when it obviously turns you on.\"\n\nBree squirmed and I retracted my hand from between her legs. We still had things to work out. \n\n\"If the only way you'll move to Austin is by staying at your brother's house, I'll live with that. It's not my preference. I like my bed better, but I'll sacrifice comfort to sleep next to you.\"\n\n\"You will?\"\n\n\"Yeah. That's not the worst part, though. One shower for four people...that might get tricky.\"\n\n\"So, you'd move into my brother's place, too?\"\n\n\"Pretty much, yeah.\"\n\n\"Seems kind of drastic.\"\n\nI shook my head. \"Necessary.\"\n\n\"Not sure they'd agree.\"\n\n\"Oh, Daniel and Bryan understand. They're not going to spend another night apart from each other, either. They get where I'm coming from.\"\n\n\"Do I have to pick which place right now?\"\n\nI shook my head. \n\nBree's lips curled into a devious grin. \"I think I might need more convincing.\"\n\nI knew I had her, then. My gut unraveled a little. \n\nThere was always a chance that she'd reject the idea. She did have a choice, of course. I could never really take that away from her. I might, however, make her ass regret her bad decision. \n\nI reached down and grabbed a handful of her tender flesh. \"Are you sure about that? You might not like the method I choose to convince you.\"\n\nBree's eyes widened. \"You wouldn't...\"\n\nI nodded, but my grin gave me away. Spanking her ass was not what I had in mind. \"Maybe later.\"\n\nI ran my hand over her bare thigh and then pushed her shirt up a little to expose her tummy so I could trail my fingertips over her soft skin there. I didn't want to rush into sex this time. There was plenty of time for that. \n\n\"I want you to meet my folks. We can drive up on Monday and stay for a couple of days before coming back to finish packing you up.\"\n\n\"We can go tomorrow if you want.\"\n\nI shook my head. \"Your mom and dad are expecting us for dinner on Sunday.\"\n\n\"They are?\"\n\n\"Yep. Your mom invited me. This time it's your turn for an announcement.\"\n\n\"Austin?\"\n\n\"Among other things.\"\n\n\"What other things?\"\n\n\"That depends on how good I am at convincing you.\"\n\n\"You already know my answer.\"\n\n\"I haven't even popped the question, yet.\"\n\nBree froze. \"Kieran...\"\n\n\"Don't freak out. I'll at least wait until you meet my parents.\"\n\n\"What...Are you talking about...asking me to...?\"\n\n\"Well, I don't know if it's going to come out a question as much as a directive. You seem to do much better when you're told what to do, rather than asked.\"\n\n\"But I only just agreed to move in with you.\"\n\nI laughed. \n\n\"Do you always move this fast?\"\n\n\"No. Never. I'm usually dragging my feet every step of the way, in fact. It's why I've never lived with a girl, never asked one to marry me, never even had sex without a condom for fear of what might happen.\"\n\nI remembered the lab results sitting on the passenger seat of my car. They'd arrived in the mail before I left Austin.\n\n\"Now I'm ready to do all three in one day.\"\n\n\"Why now?\"\n\nI shrugged one shoulder. \"Because it feels right this time. So right, that I should be scared. Only I'm not scared at all. I'm excited. Anxious to start this chapter of my life and see what comes next.\"\n\n\"But I have no job or career to speak of, and you're about to graduate college.\"\n\n\"And I've decided that I want to try something completely outside of my degree.\"\n\n\"You're going into computer programming?\"\n\nI nodded.\n\n\"Kieran, that's great. I'm so happy you decided to follow your heart on that one.\"\n\n\"Following my heart seems to serve me well.\"\n\nI brushed Bree's hair off her face and smiled down at her. I knew she'd be happy for me. She might be the only one who would feel that way. It was going to be a difficult conversation to have with my parents.\n\n\"I need you by my side when I break the news to my folks.\"\n\nBree nodded, her smile fading as she realized the seriousness of what I was asking. \"I'll be there. Are we going to do it next week?\"\n\n\"Maybe. Let's just play it by ear. I'd prefer to have more things settled before I talk to them. Have some sort of plan.\"\n\n\"That's a good idea.\"\n\n\"Have you thought about what you want to do?\"\n\nBree shook her head. \"Not much. I'd like to try freelance writing but I have no idea how to even get started.\"\n\n\"Don't you know some people that you used to work with that do that?\"\n\n\"Yeah. I do. I guess I could call them.\"\n\n\"My mom's best friend is some kind of executive at an ad agency. She might have some advice. We can ask Mom about it when we're there. She'd love to help you, I'm sure.\"\n\n\"Okay. That'd be great. I'll feel less guilty about taking time off of looking for a job if I'm actually establishing possible work contacts.\"\n\n\"So diligent.\"\n\nBree rolled her eyes. \"Hardly.\"\n\n\"My parents are going to love you.\"\n\n\"It's not your parents' love that I'm after.\"\n\n\"You've got mine. Ever since that first kiss on the picnic bench, I've been lost.\"\n\n\"Me, too.\"\n\nI lowered my lips to hers for a sweet, lingering kiss, just enjoying how warm and soft they felt on mine. \n\n\"I've missed you.\" I felt her whispered confession on my lips more than I heard her say it. \n\nI pulled away so that I could look into her eyes. \"I've missed you, too, baby.\"\n\nA slow smile formed Bree's mouth. Then she glanced down at her chest. \n\nI suddenly became aware of my roaming hand. At some point, it'd slipped up her shirt and was now fondling her breast through her bra. I chuckled as I slowly retracted it from beneath her shirt. \n\n\"I didn't mean for you to stop.\"\n\n\"Once we get started, I'm not going to stop. Not until we have to be at your parents' house on Sunday.\"\n\n\"That's two days from now.\"\n\nI nodded. \"I want to be damn convincing.\"\n\n\"I already told you I'd move in with you. You've already convinced me.\"\n\n\"Then it's onto the next step.\"\n\n\"Do I want to know what that is?\"\n\nI shook my head. \"Probably not.\"\n\n***\n\nBree\n\nThis was the part where I usually began to get nervous and pull away. Talking about commitment was the equivalent of throwing ice cold water over my head. \n\nI didn't feel like running this time, though. I could actually picture us together in the future. In fact, I wanted it. All of it. What he was offering and more. I was no longer overrun with fear. \n\n\"And what will you do if I agree to everything? To move in with you, marry you, have your children, grow old with you...What then? You won't be able to back out.\"\n\n\"I won't want to back out. I'll be the happiest man alive.\"\n\nI let myself believe him. In that moment, I knew that he was being sincere with me. I guess I was just ready to let someone in my heart again. Not just anyone. Kieran Davis. \n\n\"Where did you go?\"\n\nI'd been daydreaming. \"I'm here. I'm just...happy.\"\n\nMy mind wandered again. I was standing in front of a full-length mirror wearing a white dress. It was the same dress I'd picked out when I was in high school. But I looked different in it. More beautiful than I'd imagined before. \n\nMrs. Sabrina Davis. \n\nKieran's deep laugh pulled me out of my reverie. \"Where in the hell is your mind going, girl?\"\n\n\"I ... Nowhere. Why?\"\n\nKieran sneered as he lifted me off his lap to bounce me onto the mattress. He was on top of me a second later, pinning my wrists above my head before I could even process what was happening. \"Tell me.\"\n\nI squirmed and giggled beneath him. I had no intention of spilling the girly images that'd just infused my brain. He'd rib the hell out of me once he stopped laughing.\n\n\"You know I'll get it out of you one way or another.\" He held my wrists with one hand as he moved the other to my rib cage. \n\n\"No! Don't tickle.\"\n\nKieran's fingers wiggled along my ribs, sending me into a squirming, screaming fit. As I was thrashing about, he managed to unhook my bra and shove it, with my shirt, up to my chin. \"Now the real fun begins.\"\n\nI tugged at my arms and tried wiggling out from beneath him, but it was absolutely useless. \n\n\"Your tits are about to get it.\"\n\n\"No, no, no, no...\"\n\n\"Start talkin'...\" His fingers managed to grasp a nipple between them.\n\n\"Okay, okay. I'll tell you.\"\n\nKieran kept a hold on my poor nipple, but not too tight to hurt. Only enough to remind me that he could. \"I want to know what made your eyes light up like a Christmas tree earlier.\"",
        "I winced. I hadn't realized that I'd done that. \"It was nothing...\"\n\nKieran's fingers tightened considerably, forcing a gasp from me. \n\n\"Ow! I'm trying to tell you.\" I waited for the pressure to subside before continuing. He really didn't play fair. \"I just drifted off for a second. Imagining ...\"\n\n\"Imagining what?\"\n\nI whined. \"You're going to laugh.\"\n\n\"Probably. Say it, anyway.\"\n\n\"I was thinking about our wedding.\"\n\nKieran frowned. \"Why would I laugh about that?\"\n\n\"Because it's so corny, right?\"\n\nKieran shook his head, then leaned down to kiss the nipple he'd just been assaulting with his fingers. \"White dress?\"\n\nI nodded.\n\n\"I've imagined it a hundred times since I met you. Glad you're finally starting to get the picture. Was that all?\"\n\n\"That's all I had time for before you interrupted my fantasy to throw me down on the bed and tickle me.\"\n\n\"You were being selfish. I need to teach you to share.\"\n\nI tried to free my hands but Kieran still had them firmly in his grasp. \"Are you going to let me go now? I told you what I was thinking about.\"\n\n\"Not yet. I like you like this. It reminds me of the last time we were together. Remember?\"\n\n\"I'll never forget that. And every time I hear AC/DC, I'm sure I'll relive every second of it.\"\n\nKieran chuckled. \"We never got a chance to sort of debrief. We fell asleep, then I had class the next morning. Did you like what we did?\"\n\nI nodded. \"Very much.\"\n\n\"Me, too. It sort of changed some things for me.\"\n\n\"Like what?\"\n\n\"The way I see myself. I don't know. It was just a very liberating experience.\"\n\n\"For me, too. That's so wierd.\"\n\n\"I know. I think we're onto something.\"\n\n\"Hm. We should practice more. A lot more.\"\n\nKieran grinned. \"I plan to, sweetheart.\"\n\nHe released my wrists but I kept them together over my head. Kieran growled when he noticed what I was doing.\n\n\"You know how to bring it out of me. Keep them there.\"\n\nI'd only planned to hold them in place over my head for a couple of seconds. But once he ordered me to keep them there, nothing short of a natural disaster could convince me to lower them. \n\nKieran pushed himself to standing, never taking his eyes off my body. The only break in his stare came when he lifted his polo shirt over his head. \n\nMy gaze was locked onto his eyes, waiting for his next command. I didn't break my stare even when I knew his cock was free. I'd see it soon enough. \n\n\"Your test results came back clean. Both of ours did. I'm going to fuck you without a condom, like you wanted.\"\n\nI wanted to hop up and hug him but I didn't dare break the spell he had me under with his eyes.\n\n\"That was my last STD test.\" Kieran gripped his cock in his fist and began to stroke it slowly. \"This cock is only going in one person, one woman from now on.\"\n\nI shivered at the thought of that. Of owning exclusive rights to his enormous manhood.\n\nKieran reached down between my open thighs with his free hand and cupped his hand possessively over my sex. \"And this is mine. Only mine. You understand?\"\n\nI nodded. There was something so incredibly sexy about the way that sounded. I wanted to belong to him in some very medieval way that I knew I shouldn't want. Not as a liberated, modern woman. I pictured myself at his feet, bound to his bed; an open, naked slut to be used for his pleasure. \n\nI opened my thighs wider and tilted my pelvis into his hand. I was a hot, throbbing mass of wanton flesh. \n\n\"Please...Please take me.\"\n\nKieran was on me in the blink of an eye. He lined up his cock and thrust his hips. I was ready for him. Slick and swollen. His hips stilled, then quickly retreated. \"Fuck!\"\n\nHe looked like he was in pain. I held my breath in concern.\n\n\"This...fuck...is going to take some getting used to. I've never...fuck, that feels good.\"\n\nKieran lowered his forehead to mine.\n\n\"God, you feel amazing. Shit! I can't believe how much better this feels.\"\n\nI bit my lip to keep from laughing at him. He'd looked at me like I had three heads when I first suggested we have bareback sex.\n\nWhen he'd finally caught his breath, he eased back inside me. He stilled again, but remained seated deep within my channel as he kissed my lips. \n\nIt was sweet. Like the first time he'd made love to me. \n\nNo sooner I thought that, though, he pulled away from our kiss and pinned my thighs to the bed to jackhammer his pelvis into mine. \n\nMy arms immediately dropped, my fingers clawing at his chest as it felt like I was being split in two. I exploded in orgasm. A mind-numbing, speech-altering, shattering climax that rocked my entire body. He rammed his cock so deep I saw stars, then I felt it. The pulsing of his shaft. I locked my ankles around his back to quiet my trembling so I could concentrate on it. \n\nIt was amazing. The entire thing was incredible. I was speechless. Fresh tears stung the corners of my eyes.\n\nKieran shifted and I released the leg lock I had on him. He wiped one of my cheeks as he slowly retreated from inside me. A warm gush followed his exit and I was quickly reminded how much cleaner condoms were. Then his tongue was darting inside me. \n\nI'd completely forgotten his little cum fetish. On top of how much he loved the taste of a woman, this had to be quite a treat for him. A first, since he'd never had unprotected sex before. \n\nWhen he was finished lapping up the sticky goo, I propped myself up on my elbows. \n\n\"Is it as good as you imagined it would be?\"\n\nKieran sat up to show me that his cock was semi-erect again. \"Does that answer your question?\"\n\nHe climbed on top of me and locked his lips on mine before I could answer. He tasted like the dirtiest cocktail ever created. Pure, nasty, raw sex. I sucked it off his tongue and licked it off his face. \n\n\"You're such a fucking turn-on, Bree. I love you so much.\"\n\nNo one had coached him about spewing sweet nothings in the throes of passion. I guess it doesn't count when you've already said them outside the bedroom. I laughed as I pulled my face from his. \"I love you, too.\"\n\n***\n\nI never looked back again after that moment. Five years and one child later, my life is full. \n\nKieran is a software developer for an oil and gas company based out of Oklahoma City, and I work as an account manager for the ad agency that my mother-in-law's best friend runs. We live close to Kieran's parents' home for the on-demand babysitting services they provide, but drive down to Dallas often to stay with Daniel and Bryan, who've remained our closest friends. \n\nThings have gotten a lot better with my mom, but I don't think that'll ever truly be fixed. She's a fantastic grandmother to little Robert, though, and that makes up for most of it. \n\nWe ran into Miles and Nancy during one of our recent visits to Dallas. I hardly recognized Miles. If he hadn't been with Nancy, I would've walked right past him. They had a newborn infant with them. I wondered how they finally managed that, but didn't ask. I guess I wasn't interested enough to bother. \n\nI harbor no ill feelings toward them. The fact of the matter is, I hardly thought about Miles once I met Kieran. But looking back on it now, I think what happened with Miles and Nancy was a necessary step to getting where I am today. Miles sort of opened up the door that led me to my husband. \n\nI sometimes wonder how things might've turned out differently if Miles had been single. Or if they'd never had brought up having a baby, which was why I drove to Austin in the first place. \n\nI'd like to think that Kieran and I would've found each other, regardless. But there's no way to know for sure. \n\nKieran and I kept exploring different aspects of our D/s dynamic until Robert was born. Now, we're pretty vanilla in that regard. A few weeks ago, we dropped Robert off at my parents' house and drove down to Austin. It felt different. We were in a different place in our lives, but it was good to relive those early days of our relationship. We played Truth or Dare on a blanket in the exact same location as years before. I actually learned a few things about Kieran that I didn't know. Some new fetishes he'd picked up. We definitely have more to explore.\n\nIt ended almost the same way as it had years earlier. Except we were in the backseat of our SUV, and not out in the open. Having a child makes you so much less reckless with the law. \n\nI'm cooking up how to break the news to Kieran that he's going to be a new father again. Now that he's confessed his newfound fetish for pregnant women, I'm giddy about what the next nine months will be like. \n\nAs for my fetishes...well, I seem to lock onto whatever turns Kieran on. In that regard, we've maintained the same roles as we have from the beginning. He leads, I follow. When something works, you stick with it.\n\nWhy mess with a good thing? \n\n~The End~"
    ],
    "authorname": "D_Lynn",
    "tags": [
        "bondage",
        "bareback sex",
        "cum eating",
        "teasing",
        "bisexual",
        "college",
        "jealousy",
        "love",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/brees-journey-pt-03"
}