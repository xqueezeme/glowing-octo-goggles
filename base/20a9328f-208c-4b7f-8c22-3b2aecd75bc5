{
    "title": "Getaway",
    "pages": [
        "I stared into the open hatch of the SUV trying to catch my breath. I'd made two trips already and couldn't count how many more were still ahead of me. Somewhere in the pile of luggage was my bag, my single bag. The rest was Leanne's. Why my wife needed this much for a simple four day weekend I'd never know.\n\nStraightening myself, I wished I'd remembered to pack pain killers. I glanced back up the sloped driveway to the enormous cabin nestled in the trees. The steps of the porch were bad enough, but I had the nagging feeling that I'd be the one lugging everything up the flight of stairs inside as well. Leanne and her sister were no doubt taking their usual tour through the place as if anything would have changed since we were last here. They were probably on the second story balcony taking in the view of the mountains and swooning over the hot tub like they'd never seen one.\n\nNot me. I was to promptly gather all our belongings and take them in. It couldn't wait, apparently.\n\nI wheeled in another pair of heavy bulging suitcases after dragging them up the elegant log steps of the cabin's front porch. Parking the bags near the sofa in the living room, I took a look around. No, not much had changed. A new rug sprawled across the floor under all of the plush furniture. Maybe some different vases and whatnots here and there. I wiped my brow wondering if the glasses in the kitchen cabinets were actually clean. I was getting thirsty quick.\n\n\"Doug, did you get all of our things yet?\"\n\nI spun on my heels searching for my wife's piercing voice in the vast main room. I found her near the landing up on the second floor standing by her sister.\n\n\"Uh, still working on it,\" I called up to her.\n\n\"Well, could you please get Heather's things as well?\" Leanne yelled back down. \"I just talked to Mom, they will be here soon.\"\n\nI was already heading back to the front door and nodded. Leanne spoke in her \"polite but impatient\" tone so there was no time to waste.\n\n\"Guess I'll get their things when they get here, too,\" I mumbled.\n\n\"I'm sorry?\" Leanne called after me.\n\nI waved a hand back to her. \"Shouldn't be much longer, honey.\"\n\nI could feel my wife's glare through my back. I hurried back out the door to avoid anymore mishaps. I knew how Leanne was around family.\n\nJust as I reached the back hatch to fetch more luggage, I noticed a car wheeling around the sharp curve in the driveway. At first I thought it might have been Leanne and Heather's parents. This was a sleek red car of a newer model however. I peered through the window as the car pulled in to park behind Heather's Cadillac. It was a guy, I could see that much. He was alone. I could hear music playing inside the vehicle until the murmuring engine shut off.\n\nThe door opened and a young man rose and glanced up at the cabin. Familiarity washed over me as I studied him. He swept at the neatly combed black hair just above his eyes before turning to look at me.\n\nA little grin formed on the guy's face.\n\n\"Hey, Doug.\"\n\n\"Taylor?\" I said cocking my head a bit.\n\nThe young man nodded. \"Yep. Been a little while, I guess.\"\n\nTaylor shut the door to his car and came forward to greet me. I couldn't believe it was him. His hair was different for one thing, cleanly shaved on the sides with long neatly kept hair sweeping down above one eyebrow. It surprised me when Taylor extended his slender arm toward me.\n\n\"I haven't seen you since before you left for college, bud,\" I recalled.\n\nTaylor's smile lit up his hazel eyes.\n\n\"Two years,\" Taylor told me. \"I've been really busy.\"\n\nI took Taylor's hand and immediately it felt odd. I gripped his hand in mine but I felt no firm squeeze in return. The way he held his arm was strange.\n\n\"Computers or something, right?\" I asked him.\n\nEven his nod was different. \"Computer science. It's going really well. I really really like it.\"\n\n\"That's good, bud,\" I said nodding.\n\nTaylor's eyes darted across the back of the SUV.\n\n\"I take it you're not quite settled in yet?\" Taylor noted.\n\nI sighed. Taylor wore a knowing little grin. Even he saw it.\n\n\"Your mom and your Aunt Leanne are upstairs,\" I told him. \"You might wanna hurry if you want a decent bedroom. They usually pick the same rooms but you never know.\"\n\n\"Well, don't worry,\" Taylor said, \"I'll carry my own stuff up there, Doug.\"\n\nWhen he said it, Taylor's eyes lowered for just a few seconds. I couldn't place why, but it made me feel odd.\n\n\"I didn't even know you were coming,\" I said.\n\nTaylor waved his hand down his side. \"Finally a grown up now, I guess. Mom invited me for fall break.\"\n\n\"Cool,\" I said. \"Might be nice to have another guy to hang out with. Your grandpa is usually passed out by seven. I've been kind of the only one since, uh....\"\n\nShit, Doug, I thought.\n\n\"Since my Dad left,\" Taylor finished. \"Hopefully I'm better company.\"\n\nTaylor still wore his little smirk that somehow lit up his entire face. He didn't seem bothered at all.\n\n\"Listen, I'm gonna go say hi to Mom and Aunt Leanne,\" Taylor told me, \"then maybe I can come back and give you a hand.\"\n\nI waved him off. \"Don't worry about me, bud. Go catch up. When your grandparents get here we're going out to eat.\"\n\n\"Well then don't work up too much of a sweat, big guy,\" Taylor said already turning toward the cabin.\n\nBalking at that response, I simply watched Taylor leave. I couldn't believe how grown up he seemed. He was a bit taller for sure, and well groomed. A little too well groomed, but that wasn't unusual. He'd always been a bit of a clean freak. Something about him felt more mature. His collared shirt and pants seemed neat, professional, and fit perfectly to his body.\n\nI couldn't help but notice the way he carried himself up the porch. It was a lot stranger since I'd known the boy since he was young. He didn't so much climb the steps as much as he swayed to the top.\n\nI shrugged to myself. The younger generations were always so different.\n\n****\n\nOf course the trip into town had been a chore. I'd expected no better.\n\nAfter finally settling on a restaurant, we'd waited nearly an hour for a table. This came as no surprise to me. It was the busiest hour for dinner when everyone was out on the town. The six of us waited outside away from the sea of people inside the building. I actually thought it was nice. The air was just cool enough to really enjoy. After the long drive to the cabin and racing around getting cleaned up for dinner, it felt nice to sit outside and relax.\n\nLeanne didn't share those sentiments. She was the only woman I knew that could \"politely\" make a scene. After about half an hour's wait she'd started pestering the hostess incessantly. Heather had gotten her under control thankfully. Which was far more than I could do. I leaned on a cedar post of the steakhouse watching my wife and her family chatting. Taylor was in the middle of the women, no doubt discussing his time at college. Leanne's mother seemed to not join in the conversation at all, but that didn't surprise me much. Still, it seemed like she kept her distance from Taylor in particular.\n\nI watched Taylor talking to my wife. I couldn't figure out why I kept staring at him. Something about him looked so clean, or smooth, or unblemished. Maybe I was just so used to being around people my age. Every guy I worked with had a beard or mustache and dressed so rugged. Taylor reminded me of someone on the cover of a magazine. He was fashionable but in a very modest way.\n\nThat wasn't it though. Something was out of place.\n\n\"Shame, isn't it?\"\n\nI glanced over at Paul, Leanne's father. I hadn't realized he was standing beside me.\n\n\"What's that?\" I asked.\n\nPaul gave a little nod in the direction of the rest of the family.\n\n\"Boy like him turning out like that.\"\n\nI looked at Paul who stared ahead at Taylor. That familiar matter of fact tone lined the old man's voice while he chewed his tongue. Paul himself was a well dressed man, but was so clearly from a different time period with his sweater vest and pressed pants.\n\nI shrugged. \"Seems like he's doing fine to me. College was never my thing but I'm happy for him. Got his priorities straight and all.\"\n\nPaul scoffed and turned his icy eyes toward me for the first time.\n\n\"You really don't see it.\" Paul stated it instead of asking.\n\nI was about to respond when the weight of it fell right on top of me. I looked back at Taylor and wondered how it hadn't dawned on me sooner. Taylor was discussing something excitedly with his mother and my wife. I watched how his hands traced out his words, his elbows tucked in close. I saw how smooth and full of color his cheeks were. Even when he smiled, his lips would form the expression in such an oddly feminine way.\n\n\"That's just one of the pitfalls of not having a father in the house,\" I heard Paul say. \"No young man should be painting his face like that.\"\n\nI didn't respond. I was still staring dumbfounded at Taylor.\n\nOur table was called and the rest of my family began to head inside.\n\nThroughout the meal I spoke very little. Not that there was much interesting being discussed. Leanne and her sister were busy trading tales about the summer. Every now and then Nancy, my wife's mother, would interject and ask questions. I scarcely heard a word. Much of the time I stared at my food in a daze.\n\nI couldn't help stealing glances across the table at Taylor. His black hair was gelled to the side just slightly. Now I could see that he must have been wearing makeup, though it wasn't near as noticeable as Paul had made it out to be. Taylor was wearing foundation that made his skin a blend of caramel and vanilla. Subtle colors made his cheeks flushed and contoured. The boy's face was utter perfection. His eyes may have been ever so slightly shadowed, though I couldn't honestly tell. His lashes were definitely darker than most, but again the effect was faint enough as to be indiscernible.\n\nA few times we met eyes from across the booth. Each time I'd glance away. I didn't know why but it felt wrong to be caught looking at him. More than once I saw a narrow glare from Paul directed at Taylor when he would talk. The guy had a stiff upper lip to begin with, but it was definitely on display when his attention was on Taylor.\n\nI was still in disbelief. How had I not known? With as much as Leanne gossiped about every little thing? What was more odd is that I couldn't even decide what I thought about it. Of course I didn't mind. That sort of thing was Taylor's choice and his business. Clearly my father-in-law had made up his mind. In my own head, I was still just surprised... but it was more than that. I certainly wasn't disgusted, but nor did I feel proud or overjoyed. It was stranger than that.\n\nI was intrigued.\n\nAfter what seemed like hours Leanne and I were riding home from the restaurant in our little family convoy of cars. Taylor was in his mother's vehicle, and Leanne's parents drove separately as well. I drove mostly in silence while Leanne ran down a laundry list of activities and events I should expect over the weekend. It wasn't the giddy girlish tone she'd been using with Heather. I was receiving my marching orders.\n\n\"And I know that Heather is always really excited about the horseback riding, so we have to make sure we're up early on Sunday,\" Leanne went on. \"Especially since that is her actual birthday. Hopefully Taylor isn't still afraid of riding. Ugh... he was thrown that one time and poor Heather hasn't been able to enjoy it as much ever since. He seems capable now though. I mean he isn't twelve anymore.\"\n\nI cut in without thinking.\n\n\"Did you know that he was... like he is?\" I blurted.\n\nLeanne's blonde curls bounced past her shoulder when she turned to look at me. For a few seconds she seemed confused.\n\n\"How he... what, that he's gay?\"\n\nI just looked back at her.\n\nLeanne gave me a bored expression. \"Doug. Are you serious? I told you that over a year ago. Do you not remember when we were at the Anderson's cookout on the fourth of July?\"\n\nI shrugged. I knew that I didn't remember much about the cookout for many reasons.\n\n\"Gosh, he told Heather a long time ago,\" Leanne emphasized. \"They didn't let anyone know for months. She told me on the phone when she called on the Fourth from Gulf Shores. How do you not remember this?\"\n\nLeanne sounded so shocked and disappointed. It made me lose interest in joining the conversation.\n\n\"Look, whatever you do, please don't make that an issue while we're up at the cabin,\" Leanne told me. \"It's his first year getting to join the adults here and I don't want him feeling like an outcast.\"\n\nI contained my sigh. \"I don't think I'm the one to worry about.\"\n\n\"I'm sorry?\"\n\nI shook my head. \"Nevermind. It's nothing... trust me, I'm totally fine, I just... I haven't seen him in so long.\"\n\n\"Well, don't forget to stop up here for wine,\" Leanne said. \"And I told Dad I'd get his precious scotch for him.\"\n\n****\n\nStaring out at the night sky, I wished I could enjoy it alone.\n\nThe town below was a dim glow, but was no match for the majesty of the twilight night and the shining white moon. Under that glow I could see the blanket of treetops rolling out below the balcony of our cabin for miles. It was my favorite thing about the mountains; the isolation. The feeling of being removed from the hustle of civilization.\n\nExcept I wasn't entirely removed.\n\nEvery time Leanne or Heather would bark out laughter, it would blast through the evening like a train horn. The sisters were having a good time reminiscing and finding the bottoms of their wine glasses. Even Nancy was joining in and elaborating more on stories from the girls' childhood. It should have been a wholesome scene, but it just felt off to me. I only saw Leanne this way around other people. Most often, like now, I was on the outside looking in.\n\nInstead I was on the opposite end of the large balcony seated near Paul. Between us was a small table with a half empty bottle of the most expensive scotch I'd ever had to buy. I was all for hoping the older man would start to doze early so that I could drink my way down the bottle and get my money's worth.\n\n\"I really don't understand why you haven't moved into actually buying houses,\" Paul pressed me. \"You could do the same thing you do now and remodel them, sell them for so much more and make profit.\"\n\nI took a deep sip of the burning scotch in my hand.\n\n\"I'm happy doing what I do,\" I responded. \"I don't really want to get too involved in all the logistics. I mean I'm a craftsman at heart. I'd rather make one room in a house look phenomenal than take a horrible house and only be able to make it just fine.\"\n\nPaul scoffed. \"People are paying good money for what you call fine right now. At some point you have to be interested in advancement? You're leaving a lot of good money out there. Something you could use more of.\"\n\nI rubbed my chin. I was starting to fear I'd need stitches for all the bite marks that were deepening in my tongue. The scotch was starting to go down faster. Paul wasn't exactly bad company, but the last thing I wanted to do on a weekend vacation was discuss my job.\n\nI was pouring more scotch in my tumbler when Taylor walked out. I initially just glanced up when he came out of the cabin door. My double take lasted quite a bit longer.\n\nAll of us had changed into comfortable clothes, but Taylor was really dressed down. He padded on bare feet across the deck of the balcony, wearing only a tank top and a pair of shorts.\n\n\"Oh, lord god,\" I heard Paul grumble.\n\nI could see the source of the old man's distaste. Taylor wasn't wearing any common pair of shorts. They were some shade of bright blue, and not what Paul would call a \"manly\" blue. Nor did they come anywhere close to his knees. Instead, they were so short that one could hardly call them \"shorts\" at all, and fit so snugly that I could see the outline of his entire ass.\n\n\"I tell ya,\" Paul muttered to me. \"Heather sure has a lot on her hands.\"\n\nI said nothing. All I could do was watch Taylor. He'd approached his mother and my wife and was telling them something. He was facing away from Paul and I. The group was laughing. I heard none of what was said.\n\nI couldn't tear my eyes away from Taylor's ass.\n\nThere wasn't much I could compare it to. I'd not stared at many men's backsides. Taylor's cheeks bulged atop his legs, seemingly too much for his little shorts to contain. While he spoke to Leanne and the other women, he'd shift his weight from one foot to another. This caused each ass cheek in turn to crease and swell like a squeezed water balloon. Once I thought I saw the bottom of his flesh slide free from his shorts to peek out. Taylor pulled at his tank top as he laughed at something his grandmother said, but the small shirt was barely enough to cover his midsection. It certainly wouldn't be enough to cover his shorts.\n\nI set the bottle of scotch back on the table and sat back in my chair, pretending to listen to Paul as he spoke.\n\n\"I don't know what John would think,\" Paul muttered. \"But it's honestly his own doing. I'd like to think that if he'd never left, Heather would have a much easier time....\"\n\nI wasn't paying attention. I nodded my head casually and quietly sipped from my glass. Occasionally I'd glance over at the old man even though he never looked at me. Paul's droning complaints whirled around me though. All I was really doing was keeping the appearance that we were chatting.\n\nSo that no one would notice me staring at Taylor.\n\nIt even sounded crazy in my head. I'd known him forever. Sure, he was in his twenties, but that shouldn't have made a difference. I wasn't even... like that. I'd never really thought about anything close. I realized I didn't have an opinion one way or the other like the rambling man beside me. Then why was I staring at Taylor? Why did I look at him differently at all?\n\nI was reminded why when Taylor stepped over toward the log rail of the balcony and leaned ever so slightly to stare out at the view. The lights from the cabin were enough to see it. Taylor's back was arched in such a way that his bulbous ass now jutted outward and upward.\n\nScotch dripped at the corners of my lips when I took my next swallow. Those tight blue shorts rode up Taylor's skin a mere inch. It was plenty to glimpse just the undersides of his ass cheeks. I shifted in my seat and realized I felt a pulse quickening in my shorts. I shot a glance at Paul to see if the old man had noticed the way I was acting. He was looking off in another direction still talking about Heather's ex-husband.\n\nMeanwhile I fought down the bulge in my shorts. And why? Still my eyes darted across the smooth thighs and thick ass of the boy leaning over the balcony. I couldn't even pinpoint what was so enticing about that sight. It looked nothing like a woman's wide backside, and yet Taylor's meaty rump stole my breath. Though I chased the thoughts out of my head, it was like I could feel the flesh in my sweaty palms.\n\n\"Doug? Hello?\"\n\nLeanne's shrill voice grew in volume. She'd been calling my name.\n\n\"Y-yeah babe?\"\n\nThere was a second or two of hesitation from my wife before her \"polite\" smile opened on her face.\n\n\"Uh, Heather and I are finished with this bottle,\" She informed me. \"Would you care to grab us another?\"\n\nAs if programmed, I set my glass down and rose from my seat. The group had gotten considerably quiet, but I ducked into the cabin door without meeting eyes with any of the girls.\n\nFlipping on the light switch in the kitchen, I found another bottle of wine where we'd left it. When I reached to grab it, I had to take a moment to steady my hand. It was much like I was used to. On the surface I was trying to stay calm but underneath I was a mess. Only now, I had brand new reasons to steady my emotions... and my shaking hands.",
        "It took several minutes to find the corkscrew that Paul tossed behind something on the counter. The cork was buried. I worked as carefully as I could to screw the thing into the top of the bottle. Mostly, it involved trying to clear my head of the recent moments outside.\n\n\"Sure you got it, Doug?\"\n\nI nearly let the bottle slip.\n\nTaylor strode into the kitchen. He wore a grin watching the bottle in my hand.\n\n\"Oh, hey man.\" I tried act casual. \"Nah, this one's really in there. I can pull it out, though.\"\n\nI saw the slightest twitch in Taylor's eyebrow and realized my choice of words. No, that was in my head. I never would have thought that before. Would... would he?\n\n\"Well just let me get by you real quick,\" Taylor said stepping close. \"I need to get myself a glass. I got left out of the last one.\"\n\nI had to step aside and back myself against the island in the middle of the kitchen to allow Taylor to pass. To my shock, he slid right in front of me and reached for the cabinet door overhead.\n\nThe bright lights of the kitchen allowed me to see so much more of Taylor in detail. His tank top clung to his tan shoulders and narrow waist. When he reached high for a wine glass, the shirt slid up his body. I couldn't even try to look away. The boy was right in front of me. Down my eyes went. The skin around his midsection was so tight and smoothe. This only beckoned my gaze lower in that briefest of seconds. That thick set of cheeks was inches from my body. The wildest flash of insanity shot through my skull when I imagined slapping my palm into all that flesh and squeezing. The proximity of our bodies was maddening.\n\nJust like that Taylor shut the cabinet and stepped away holding a single wine glass. He held it up and gave me a little grin, one that sent a jolt down through my body.\n\n\"Can I get the first one?\" Taylor asked.\n\nI blinked and immediately went to tugging at the corkscrew.\n\n\"Sure thing, bud,\" I said.\n\nThe cork came free. Taylor held out his glass and I carefully poured his wine. I leapt on the first thought I could to break the silence.\n\n\"You're allowed to drink wine now?\" I said.\n\n\"I had two glasses at dinner,\" Taylor pointed out as though it were obvious. \"I am old enough now, you know?\"\n\nI let myself chuckle. \"Sorry, man, I... I'm just not used to seeing you so, uh... grown up and all.\"\n\nTaylor leaned against the counter and took a sip from his glass. His hazel eyes studied me. Something about the way he was standing... or leaning....\n\n\"Did Grandpa say something to you?\" He asked.\n\nI rolled my eyes and stared toward the rear of the cabin.\n\n\"Yeah, he talks,\" I said. \"A little more than I think he should.\"\n\n\"Look I know,\" Taylor said suddenly. \"You don't have to say anything.\"\n\nI met eyes with him. Goosebumps covered my arms. I didn't respond.\n\n\"I knew before I ever said anything to Mom how Grandpa would be,\" Taylor went on.\n\nI relaxed. \"Uh, yeah. Just... just ignore him. It's what I do mostly.\"\n\n\"I do,\" Taylor said. \"Sorry you have to put up with him. At least you don't have to sit with the hens.\"\n\nI snorted a laugh. \"Yeah, maybe not tonight.\"\n\nTaylor eyed me again. I tried not to notice his eyes traveling. I didn't want that. I couldn't handle it. Even if it was for fractions of a second, I still saw it.\n\nHe pushed away from the counter and turned toward the back door again.\n\n\"Well, let me know if you get bored,\" Taylor said, half turning as he walked. \"Maybe I can help.\"\n\nI didn't want to look but I couldn't control it. Taylor had to see. My eyes darted down to watch his ass cheeks jiggle and tighten past one another as he walked away. Maybe he didn't see.\n\nIt was only after the back door shut that I let out a breath and allowed myself a tiny panic attack. Beyond all the weird stupid thoughts I was suddenly having, none of them made me feel more awkward than when I looked down and notice the tented bulge in my shorts.\n\n****\n\nThe night seemed to drag on, but at last the family was beginning to make their way to bed.\n\nPaul had been dozing the moment I'd returned from the kitchen. He and Nancy had retired early. Leanne and Heather did not finish their second bottle of wine before deciding to call it quits. Both the women's eyes began to squint with fatigue more and more with each minute. Taylor had spent most of the time tucked into a cushioned love seat beside his mother. I'd spent the rest of my time trying not to look over at them. Taylor's legs were curled up beneath him, displaying the undersides of his thighs....\n\nI sat on the bed in the room my wife had chosen. I'd stripped to only a t-shirt and my briefs. Pulling my socks off, I watched my wife undress. It had been so long since we had been intimate, but I often watched her when she wasn't looking. Moreso that night, what with all the pent-up energy I'd so unwillingly been introduced to.\n\nI tried not to think of that. Instead I watched my wife pull her shirt over her head. She was already down to her panties, which still did well to wind their way around her now ample backside. Leanne didn't bother to unfasten her bra, opting to pull it up and over her shoulders as well. Her breasts wobbled freely as she bent to dig in her still packed suitcase.\n\nMy mouth opened to say something, but the words evaporated. I wasn't even sure what to say. Leanne pulled a nightgown down over her body and approached the bed. Her eyes finally found mine and for the first time I saw a genuine smile part her lips.\n\n\"I'm really beat,\" Leanne told me. \"It's been a long day and a longer drive.\"\n\n\"I know,\" I said. \"Glad to be settled.\"\n\nLeanne stepped close and pulled my head against her side. I felt her lips on top of my head. I lifted my eyes to hers and offered her a weary smile.\n\n\"Thank you for bringing me up here again, Doug,\" She said.\n\nI nodded. \"It's fine, honey. I know it's important to you girls. I love the cabin, too.\"\n\n\"Heather really appreciates it,\" Leanne told me. \"Her birthday is always special. John may have gone, but you've kept our little tradition alive.\"\n\nOne surprise led to another when Leanne climbed onto the bed and into my lap.\n\n\"I was thinking earlier that maybe we do something like this for your birthday,\" Leanne said. \"I know you like to travel, too.\"\n\nI didn't.\n\n\"Just let me know what you wanna do,\" Leanne said. \"We can try to make it happen.\"\n\nI let my hands glide over her thighs, my fingertips teasing at the edges of her panties beneath the nightgown. The energy was still bottled up inside me.\n\n\"I could think of a few things,\" I told her.\n\nLeanne's eyes rolled a little bit over her grin.\n\n\"Doug, I am absolutely beat,\" She said.\n\nIt was all she needed to say. Immediately my insides sank. Still, Leanne leaned in and gave me a kiss. It was another step forward, and a couple steps back. I tasted the wine on her lips. I wanted to think she'd remember this little interaction in the morning but I couldn't be sure.\n\nLeanne patted her hands on my shoulders and began to climb past me into the bed.\n\n\"I'm gonna get some sleep,\" She said. \"You should do the same.\"\n\nA thought hit me and I latched on to it in an instant.\n\n\"Actually, I'm gonna sit outside for a little longer,\" I said. \"I think Paul actually left some scotch out there.\"\n\nLeanne was already rolling over.\n\n\"Well, don't get drunk and fall asleep out there,\" my wife mumbled. \"Big day tomorrow.\"\n\nI switched off the lamp before heading out of the bedroom. I didn't even care that I was still in nothing but my briefs and a t-shirt. Everyone would be asleep. I pulled open the door to the balcony and stepped out into the cool autumn night.\n\nIt felt perfect. Not cold, not sticky, but refreshing. Even moreso in what I was wearing. I looked toward the small table where Paul and I had been sitting earlier. The half empty scotch bottle was still there. It was time to warm that fuzzy feeling back up. It was technically my bottle of scotch after all, since I'd paid for pretty much everything that day.\n\nI fetched the bottle and eyed the chair. My ass was still sore from sitting on that hard wood. Looking around, I settled on the cushioned loveseat across the balcony. I plopped down on the seat and stared out at the moon in the night sky.\n\nThe first sip burned a little all over again. The next few were just warm. I couldn't think of a better end to the day. Finally I could at least enjoy the scenery of the night in the quiet. Inevitably, I thought of the long drive and the seven hundred bags I'd unloaded from everyone's vehicles. I thought of the chaos in the restaurant, all the noise and bustle of tourists packed into one building. I saw Paul's persistent judging glare leveled at me, at his grandson, and his own daughters.\n\nMaybe I would sleep outside. That might be just the thing. Of course I'd have hell to pay in the morning from not just my wife, but my aching back. In that moment I didn't mind though. I sipped the scotch right from the bottle and let my eyes close. The weariness seemed to drain right out of my body.\n\nMy eyelids peeled apart. The door had opened. I expected Leanne to appear and demand I return to bed.\n\nTaylor stepped outside.\n\nI didn't sit up but I straightened on the loveseat. It only took a second for him to notice me. He lifted a hand in a little wave and grinned at me. He was still wearing his tiny blue shorts and tank. My mind began to turn flips. Of all people to walk out that door it was him. For a brief while I had put him out of my mind. Here he was again. Odd palpitations fluttered in my chest. My thoughts became pulsating images of earlier in the evening.\n\nI still had no idea why.\n\n\"Hey!\" He all but whispered.\n\n\"Oh, hey bud,\" I said back.\n\nTaylor gave a peculiar little shrug and crept closer in the dark, his features lit by the moon.\n\n\"Didn't expect to find anyone out here,\" he said.\n\nI watched him fetch one of the chairs the women had sat in earlier. I thought of something to say.\n\n\"You're not out trying to sneak a smoke or anything are you?\" I asked in as playful a tone as I could manage.\n\nTaylor grinned and shook his head. \"No. A drink. I guess I wasn't the only one to remember Paul's scotch.\"\n\nI nearly scoffed. Paul's scotch.\n\nI offered the bottle to Taylor. \"Here. I guess if you're old enough for the wine you can handle the real stuff.\"\n\nTaylor eyed me but accepted the bottle. Without hesitation he put it to his lips and took a sip. I expected him to make a face or cough. He did neither. In fact the boy took a second sip and offered the bottle back to me.\n\nI wasn't sure what to do or say. The few seconds of silence were beginning to eat at my nerves though. I stared out at the amazing view to keep from looking at Taylor.\n\n\"Well, how do you like joining us at the cabin?\" I asked.\n\n\"It's been fun so far,\" Taylor said. \"Although I gotta say, it doesn't live up to what I thought when I was younger.\"\n\n\"Oh yeah? How so?\"\n\nTaylor shrugged. \"I don't know. Not being able to come? I always thought that since it was only a grown-ups vacation that you guys were doing wild stuff up here. But it's really tame so far.\"\n\nI chuckled. \"Yeah. That's being grown up in a nutshell, man. Welcome to the high life, where all you're looking for is a stiff drink and a chair to relax in.\"\n\nI sipped from the bottle of scotch. It was beginning to take hold inside of me. My body started to feel like a warm cloud. The initial tension I'd felt seconds ago when Taylor walked out had begun to melt away.\n\n\"Can I ask you something, Doug?\"\n\nI looked at Taylor. He was leaned close in his chair. I motioned with my hand for him to continue.\n\n\"Does Aunt Leanne always treat you that way?\" He asked.\n\nI blinked. I was caught off guard.\n\n\"What way?\" I asked.\n\n\"I don't know,\" Taylor said. \"The way she talks to you. It's completely different when she's with my mom. When she talks to you it's... she's always telling you what to do or acting disgusted with you. She's hiding it with a smile but I can see it.\"\n\nI kept my mouth from falling open. I could only stare back at Taylor when he spoke. All in the same few seconds it felt like something had been lifted off of my body. Somehow this young guy had seen me, even though I'd stopped waving my arms years ago.\n\n\"Just happens when age, bud,\" I managed to say. \"Leanne's doesn't... mean to be that way, it's just... we've been around one another so long.\"\n\nTaylor pulled one of his legs up into the seat of his chair and clasped his hands on his knee. I kept my eyes from his legs this time, though meeting his gaze was no easier. It was like he didn't blink. He just stared right into me.\n\n\"Aunt Leanne gets that from Grandpa,\" Taylor said. \"I know she's nice, but a lot of times that's just what's on the surface. She has a little bit of him in her. They can be spiteful.\"\n\nI swallowed another gulp of scotch. Realizing I took a bit too much I cringed. The burn couldn't dispell the icy shards in my chest though.\n\n\"You aren't like Grandpa though,\" Taylor said. I saw his eyes traveling. \"Everytime he looks at me I can feel him judging me. And I can practically hear what he thinks of me.\"\n\nI shook my head. \"He wasn't always like that to you. The guy's a fossil, it may just take time for him to get used to you.\"\n\nTaylor licked his lips, still watching me.\n\n\"Every time you look at me, it just feels natural,\" he said.\n\nI looked at him. I wasn't sure I'd heard that right. Taylor stared right back at me. The younger guy eased forward in his chair. I opened my mouth but I had nothing prepared to say, not even to protest.\n\nTaylor reached for the bottle in my hand, in my lap. I allowed him to take the scotch and watched him take another sip, letting out the breath I was holding.\n\nI blinked. \"Sorry, what do you mean by natural?\"\n\nChills washed over my skin. I couldn't believe I'd asked him to elaborate.\n\nTaylor shrugged. \"You know, you look at me like another person. You see the real me... and I can see the real you looking back. Nothing to hide.\"\n\nThere was something in Taylor's eyes. His every word dripped with more meaning than he let on. It was like his lips wanted to pull back into a grin. Meanwhile his hazel eyes darted up and down my body. He seemed to understand me more than I understood myself. I felt my pulse quickening. I could hear it in my ears over the nightlife beyond the balcony.\n\nI had to be imagining things again.\n\nTaylor let out a little laugh. \"Gosh, we should be thanking you, Doug. I know you are paying for all of this. The cabin, the weekend, the dinners... and I don't think anyone is showing you any appreciation.\"\n\nI swallowed the rock in my throat and looked out at the moonlit night.\n\n\"It's... It's nothing,\" I replied. \"I think it's important f-for us to still get together.\"\n\nTaylor passed the bottle back to me, leaning close and never retreating. I saw his smooth tan skin even in the light of the moon. His glistening lips were apart while he watched me. I did my best to look away.\n\n\"Do you like that I'm here, too?\" Taylor asked.\n\nI stammered. \"O-of course... why?\"\n\nTaylor gave me one of his little shrugs and swept his black hair across his forehead.\n\n\"Just wondering why you've been staring so much.\"\n\nI found myself in a corner. All I could think to do was scoff and roll my eyes.\n\n\"No I'm not... I haven't--\"\n\n\"Are you like Grandpa?\" Taylor cut in. \"You think I'm a freak? Is that why?\"\n\n\"What? No, no, of course not.\"\n\n\"Then you must like to stare.\" Taylor was grinning now.\n\n\"Taylor,\" I said firmly, \"cut it out. That's ridiculous.\"\n\n\"Is it?\" Taylor said. \"Is it ridiculous that you were pitching a tent earlier in the kitchen?\"\n\nI could only stare back in shock.\n\n\"Just being near me gave you a hard on?\" He went on.\n\nI climbed to my feet quickly. I badly needed an exit plan.\n\n\"No, that's not... I wasn't... like that....\"\n\nI took a step Taylor stood from his seat to block my path. One of his hands made contact with my hip as if to hold me in place. I blinked rapidly, trying to wrestle my gaze away from Taylor's face now inches from my own.\n\n\"Well, why do you have one now?\" Taylor asked locking eyes with me.\n\nI became suddenly aware of what I was wearing. My shirt wasn't long enough to hide my briefs... nor the bulge that had formed inside of them. I didn't need to look down. I could feel my shaft stretching the material. I felt every throb of my heartbeat down there. It wasn't just hard, it was rock solid and stiff.\n\nI tried to force out some words. They never came. I was trapped in the hazel gaze of the younger man in front of me. He knew. It seemed so ridiculous to try to deny it like I had. I still couldn't understand it one bit, but Taylor knew.\n\nA gasp left my lips when I felt Taylor's fingers below. They danced gently over the bulge in my underwear. My cock jumped beneath the fabric from the touch.\n\n\"There he is,\" Taylor said with a little grin. \"Now I could misinterpret a few dirty looks, Doug, but this?\"\n\nHis fingers tightened on my shaft through my briefs.\n\n\"This doesn't lie,\" Taylor cooed.\n\nI licked my lips to try and wet the words leaving my dry throat.\n\n\"Taylor, no, we... we shouldn't be--\"\n\nHe was turning. At first I thought he was leaving, but he slid right up against me. What was he doing?\n\n\"Who says we shouldn't?\" Taylor said.\n\nI felt smooth slender arms encircle my head. Taylor's body was against mine, his back to my chest. He was draping himself onto me with his head half turned toward mine.\n\n\"As far as I'm concerned, you're the one paying our way up here,\" Taylor whispered. \"That makes you the boss in my eyes.\"\n\nI felt it. Two thick ass cheeks slid over my clothed cock. I felt the give in his flesh from my erection. My toes curled right where I stood. My hips pushed in out of reflex at something so luscious. The silky shorts Taylor wore allowed him to twist and slide his ass back and forth across my crotch.\n\nI had to grab him. We'd fall if I didn't take his hips in my hands. That's what I told myself. But I tugged his waist when I had him in my hands. I felt my shaft surge with energy when I mashed it between Taylor's cheeks. He let out a low moan. I was able to look down and meet his eyes as they cut upward to look at me.\n\n\"Feels fucking good, doesn't it?\" Taylor whispered.\n\nFor a moment I let Taylor writhe in my arms, because he was truly in my arms now. I couldn't control it. My hands traveled from his hips around his narrow waist. I dug my fingers at his tight smooth stomach with my other hand roamed upward beneath his tank top. His body was so smooth, but firm and unlike anything I'd ever touched this way.\n\nWhat the fuck was I doing?\n\n\"Taylor, Taylor,\" I sputtered. \"We c-can't.\"\n\nI spun the younger man around by his shoulders to face me.\n\n\"We... You're my... I don't know why I'm....\"\n\nI couldn't finish a fucking sentence. It was like I had no coherent thoughts and no breath to form them with. Taylor still stared right through me with those hungry eyes, wearing a hungry grin.\n\n\"Listen we can't be doing this,\" I blurted. \"I d-don't know why I'm like this or why... your family is right inside, they could see us or walk out and--\"\n\n\"That's the only reason you have?\" Taylor said.\n\nHe was sinking. Taylor began to lower himself into a squat. I was trying to say more and it just wasn't happening. I was in awe of what he was doing. My hands were still on his shoulders. Taylor looked up at me while his fingertips found their way into the waistline of my briefs and started to pull.\n\nMy cock bounced free of my underwear. Taylor's eyes shot down to it. His grin opened wider. I saw his tongue moving behind his teeth.\n\n\"Taylor....\"\n\nThe young man's eyes glanced up at me again in approval. His face was right in the heat of my crotch. A smooth hand slid up my thigh. Another encircled my naked shaft. I couldn't protest. It felt incredible to have him clutching my dick. I moaned down to him, which was a mistake. Taylor's eyebrows lifted at the noise and he started to stroke his hand along my cock.",
        "Taylor opened his lips and brought his face next to the side of my shaft. Hot breath cascaded across my naked skin. My dick jumped in Taylor's loose grip. He watched me the entire time. I saw his tongue glide out. He moved it so slowly toward my shaft.\n\nI felt just a touch of wet heat. Then another. Then again. Taylor licked at the swollen skin of my shaft taking his time to savor the taste of the tremors he sent through my body. His lips pursed around my flesh. Still his tongue darted in his mouth. Taylor kissed his way right to the fattened head of my cock.\n\nMy breath seized in my chest. Taylor mouthed at the side of my glans, still watching me. I sealed another moan behind my lips. My head rolled around on my neck. Taylor slurped just my bulging tip into his mouth. I felt his tongue swim over my sensitive tip. I squeezed the boy's shoulders.\n\nIt was maddening. Taylor was far too damned skilled at what he was doing. I couldn't believe it was him squatting beneath me with my dick throbbing in his mouth. And still he teased it. I was on the verge of jerking my hair out. My cock was so hard it hurt. My head swam and my mind raced. Part of me wanted to shove Taylor away and flee. Another side of me wanted to grab his head and shove it to the base of my dick until he beat at my legs for air.\n\nInstead I stood rigid and frozen while Taylor tortured the tip of my cock. He mouthed it, sucked it in and out of his lips, and tongued my slit. All I could do was watch.\n\nLower he sank. Taylor was on his knees. My dick was freed from his wet lips. His perfect smooth face hovered just below my cock. I realized he was drawing a wet line right to the base of my shaft with his tongue. The tip of his tongue plunged down the base of my shaft and into the sensitive folds of my scrotum. My cock bounced right above his face. In the moonlight I could see my veins ready to burst beneath the flesh of my erection.\n\nThen Taylor sucked one of my balls into his mouth.\n\nMy eyes shot open. This was something I'd never felt. It was strange, even a tiny bit painful at first. The sensitivity was unbearable though. I could feel the taste buds of Taylor's tongue washing over every bit of my flesh. Just like that it rolled from his lips. A thumb and a finger encircled my sack. Those lips slid open wide once again and engulfed my balls entirely. I felt only what Taylor wanted me to, no teeth, no pain, only hot slimy lips.\n\nI was entranced by it. My cock bobbed on top of Taylor's smooth cheek. His eyes stared back at me. His mouth grew increasingly greedy but he never moved faster. I realized my hand was now in his hair stroking his head. God, I was pulling him into my crotch.\n\nIn a single deft motion, Taylor slid his mouth back up the underside of my dick, opened his mouth wide, and impaled his head deep on my dick.\n\nMy jaw dropped. Immediately I felt a burn in the tip of my cock when it bounced against the boy's throat. I was going to cum. If I didn't pull my cock away, I was going to cum in Taylor's mouth. The realization hit me hard. I had my cock crammed in my wife's nephew's head on the balcony of our getaway cabin.\n\nI jerked away and stepped back. My cock slid noisily from Taylor's lips. I saw the look of alarm on his face. I stood panting a few feet away from him. My legs hit the edge of the loveseat, and I nearly fell. For several seconds I clenched my fists while my dick bobbed rapidly below. I fought it down. Maybe my cock was leaking precum. I wasn't sure. But I fought it down.\n\nGlancing back at Taylor, I saw him wiping his mouth. I frantically searched the windows and the back door of the cabin. What if someone saw? What was I doing? Was I really that deranged? I clawed at my briefs to tug them back up my thighs.\n\nI shook my head. \"We can't. Taylor, I can't.\"\n\nTaylor rose from his knees.\n\n\"Doug, it's fine, just--\"\n\n\"No, I can't.\" I couldn't meet his eyes. \"We shouldn't be out here.\"\n\nI quickly stepped past Taylor and headed through the back door. Even as I quietly climbed the stairs toward the bedroom I shared with my wife, I could feel my briefs clinging to my wet cock in my briefs. I was still so hard.\n\nI refused to look back toward the back door downstairs. It would be one hell of an awkward morning. It was hard to be around Taylor to start with. Now it would be torture, for more than one reason.\n\nI couldn't think of that. I crept into the darkness of the bedroom and eased myself into the bed next to Leanne. I tried not to disturb her, even though I knew she could sleep through a bomb. Wrapping myself in the covers, I tried to erase my thoughts. My pulse wouldn't slow down. It sounded like the drums of a marching band in the silence of the dark room.\n\nMy cock was also still throbbing and hard.\n\n****\n\nI could not fall asleep.\n\nThere was no clock to read in the dark. I must have laid in the bed for over an hour. No matter how long I held my eyes shut I just couldn't drift off. For one thing, I couldn't shut my mind off. I tried to force myself to think of the plan the next day or the places we might go. I even tried counting to a hundred.\n\nAll I kept seeing was Taylor.\n\nHow was I supposed to just doze off after something like that? It was enough that my pulse returned to normal. The images were so white hot that they were scorched into my mind. I saw Taylor's face. I saw my cock nodding on his cheek while he slobbered over my balls and stared right up into my eyes.\n\nMy eyes would snap open and I'd force the memory away.\n\nThen my dick would nod beneath the sheets in my briefs. I'd feel the crushing warmth of those two round ass cheeks sliding across my shaft. I could still picture those shorts I'd seen earlier in the evening. It went on like that forever. I'd calm down. I'd think of Taylor. My cock would grow stiff again. Over and over I struggled to forget what I'd just experienced.\n\nAt one point I rolled to my side and scooted up to Leanne under the covers. Maybe I could hope to rouse her and prod her with my excited flesh, let her feel just how hard I was. I rubbed her big hips and pressed myself into her a few times. I kissed her shoulder. For the longest time I got no response. Soon my wife shrugged my arm away groggily, likely never waking to begin with. I wasn't sure why I expected any different.\n\nI thought of finishing myself off. At one point, for several minutes I stroked my dick under the covers. The pent up energy was one of the things keeping me awake after all. If I could just get a release, I could put the day behind me.\n\nThe problem, of course, was that when I stroked myself I inevitably thought of Taylor.\n\nBeside my snoring wife, I was alone. There was no one to lie to except myself. I turned it all over in my head. The whole day I had been trying to make sense of it, or at least I thought. Lying awake staring at the ceiling, I realized there was no sense hiding from myself in my own head. The truth was right there all along.\n\nSomehow I knew right when I'd seen Taylor what I felt. I'd basically been drooling over him like a frat boy. I'd never felt that with another guy, but I wanted him. The shorts were too much. I was getting hard just thinking about it again. I didn't shy away from the thoughts now. I wondered what it would feel like to be pressed flush against that butt of his... with my cock buried inside him.\n\nI'd never done anal. Leanne wouldn't even entertain the thought. And yet just down the hall was a guy that I knew wanted me in his ass.\n\nThe realization burst like fireworks in my head. The hairs on my skin stood. If I'd not panicked earlier, Taylor would have wanted me to fuck him. Even thinking it made me feel filthy. My mind cut together images that hadn't even happened... my body slamming into Taylor's smaller form while he clawed at my skin. I could practically see that grin of his.\n\nI glanced over at Leanne as though she would have even stirred. I slowly pulled back the covers.\n\nNo. That was crazy.\n\nI swung my legs off the bed and stood. I shot one more glance over my shoulder at my wife. Still asleep, of course. I needed that as an excuse to keep me from leaving the room. I swallowed and crept out into the hall.\n\nThe cabin was dark and silent. All I had to keep me company as I walked were my screaming thoughts. This was insane. I needed to go back to bed. Just lay there until I fell asleep. That was the rational thing to do. Instead I put one bare foot in front of the other and snuck down the hall. I even pulled myself along using the second story railing overlooking the room below.\n\nI passed Heather's room. All was pitch black within. I heard nothing. I knew that she and Leanne's parents were in the only bedroom downstairs. That left only one other room on the second floor. I turned with the banister and faced a final door. Still my mind pleaded with me to return to bed, but some sort of gravity pulled me right toward the door in front of me.\n\nIt wasn't fully shut. I eased the door open and peered inside.\n\nThere was very little moonlight left, but I could see the bed and I could make out the person under the covers. Taylor was facing away from the door with the covers pulled to his shoulders. I stole a quick look behind me before sleuthing into the room. I twisted the knob and eased the door shut without a sound.\n\nI was so close. I was inside the room away from prying eyes. Now I had to find out if I was really going through with this. I stared at Taylor expecting him to roll over. I contemplated calling out to him in a whisper, but realized I didn't know what to say if I stirred him. That felt so awkward in my head. Barely breathing, I crept closer to the bed, still unsure of what to do.\n\nThat's when my foot brushed against something on the floor. I looked down and squinted through the dark. I couldn't exactly see them, but I could feel that they were clothes. I could make out a crumpled shirt with straps and... was that? Yes. My toes felt the silky smooth fabric of a certain pair of blue shorts. I looked back up at the bed.\n\nIn seconds, I'd pulled my own shirt off. I hooked my thumbs in my briefs and tugged them over my erect cock.\n\nI stood naked in Taylor's room.\n\nMy heart was pounding but all that served to do was send blood coursing into my cock. I stood there taking in the insanity of the moment. The cool air in the room wouldn't let me ignore the reality of being ass naked staring down at Taylor. I was petrified. I'd never done something so daring or unthinkable. And yet there I was, prepared to go even further.\n\nI left my inhibitions with the tiny pile of clothes on the floor. I slipped into the bed as carefully as I could. My bare legs slid beneath the heavy covers. I scooted closer to the warmth of the smooth body in the bed.\n\nThere was no time to process the move. My naked body closed against Taylor's. My cock glanced off of his ass cheek. I draped my arm around him.\n\nTaylor woke and half turned in my arms, but my hairy chest was already against his back. He didn't even twist his head around to see that it was me. He paused, and then I felt his slender form relax. I pulled him closer. Taylor wiggled deeper against me, his ass smothering my throbbing dick.\n\n\"Doug,\" he whispered.\n\nMy lips were right by his ear. \"Yeah.\"\n\nI pressed my hips in and let him feel my shaft. He pushed right back. Now I could really feel the thick flesh of his incredible ass. I was breathing right against the nape of Taylor's neck and his bare shoulders. I gave into my need kissed at the soft skin of his neck.\n\nMy every action was met with subtle reactions. I rubbed my hand up Taylor's stomach and chest, his hand would explore my naked thigh. I would gently rock my body into him, Taylor would arch his back and push his ass back to meet me. I would pull him in tight, the younger man would wriggle in deep. Gone were the clothes that dampened the sensations I felt now. My swollen skin was pulsating between the warmth of his soft ass. I could feel every supple inch of it mashed against my crotch.\n\n\"Guess you changed your mind?\" Taylor said in a hushed voice.\n\n\"I guess I did,\" I replied, my breath washing across his skin.\n\nTaylor's head half turned again.\n\n\"Why?\" He asked.\n\nI shook my head. I brought my lips to his ear.\n\n\"I don't know,\" I told him. \"I don't know why I want you I just do.\"\n\nTaylor's body responded, somehow sinking against me even more. He bent in a way that allowed my shaft to slide up between the cheeks of his ass.\n\n\"You want it like this?\" Taylor asked.\n\n\"Yes.\"\n\nTaylor twisted so that his face could meet mine. Our mouths were inches apart. I couldn't see his eyes, but was still lost in them all the same.\n\n\"You sure?\" Taylor whispered. His lips brushed mine when he spoke.\n\nI nodded and Taylor closed his lips on mine. He turned further and I lifted slightly, greedy for more. His lips were so soft. Our mouths opened. I pressed my tongue into him and began to lose myself.\n\nWe might as well have been lovers for years. Our mouths found a rhythm and stayed there. A deep carnal need bubbled up within me, shooting energy through my every bone and muscle. I felt the sudden need to press down onto Taylor and crush him with passion. I wanted to overpower him. I wanted to hold him and let him feel what he was doing to me.\n\nTaylor's lips left mine and he stared at me. Even in the dark I could see that he was getting drunk on the sensations of my body engulfing his smoother slender frame.\n\nHe turned suddenly and leaned out over the bed. I could see his back and followed the curves to his waist. I wished that I could see down into the deep darkness just beneath the covers where my dick was wedged between his ass. Still, I felt it there. Taylor was digging for something in the floor. I heard a zipper... his luggage maybe.\n\nI wasn't paying attention to what Taylor was actually doing until he scooted somewhat back into place on his side in front of me. He reached back and felt for my swollen cock. My eyes rolled.\n\nMy shaft glided through wet fingers and up the backside of Taylor's forearm, over and over again. Taylor lathered my cock slowly, squeezing my firm flesh in his hand until it hurt me. He covered every inch. I felt the warm fluid drip down across my balls. Before long my hips were moving and I was shoving my dick through Taylor's fingers, fucking the boy's hand.\n\nTaylor adjusted in the bed. I saw the slope in his back form. My lubricated cock prodded his ass cheeks before gliding between them. His backside seemed to split open to welcome my shaft and allowed me paint his crack with lube. My big hands found his waist, and clutching tightly, I tugged him against me.\n\nFor a while I just enjoyed it. Taylor's entire body was so fucking smooth and hairless. The contrast of my reddened hairy skin against his felt amazing. The two of us writhed together under the covers, content to let my throbbing shaft just slide between his bulbous cheeks. I kissed at Taylor's neck, savoring every taste. It was unlike anything I'd ever known. I could still feel certain masculine muscles along Taylor's neck and shoulder, an unmistakable tightness beneath. His skin felt like butter in my lips, though. The aroma that filled my nose was a blend of berries and vanilla... and sweat.\n\nI twisted my hips in such a way that my bulging tip brushed the hot wrinkled flesh of Taylor's asshole. His body responded immediately. He didn't clench his cheeks or draw away. Still on his side, he bent in the bed to meet another thrust of my cock. I did it again. I bit hard on my bottom lip when I felt the puckered hole again.\n\nIt felt so dirty. I wanted so much more of it.\n\nI drew back, tipping my cock down. My tip planted itself against the hot hole once more before glancing off the flesh and siding away between Taylor's legs. When I drove inward, I felt a tiny bit of frustration building. I wanted to be inside of him.\n\nMy other movements slowed or ceased. I needed this. I couldn't focus on much else until I had it. I found my angle again and seated the end of my dick against what I knew was Taylor's asshole. It may have been just in my head, but I could feel my shaft pulsating and Taylor's hole puckering. I bit back a moan. Working my hips this way and that, I held my breath and pushed. The resistance almost bent my solid cock. Something gave. My shaft took an odd diving twist.\n\nThe head of my dick squeezed through Taylor's ass.\n\nI felt him tense just for a second, but not as much as I did. For some reason something clicked when my dick slipped into Taylor. I felt like a virgin all over again. Perhaps because I was. I'd never done this. I was frozen in that moment, waiting for Taylor to cry out in pain or wrestle away from me. I was also in utter disbelief. Of everything. Of walking into this room and getting naked, of betraying my wife, of having my cock inside another guy. It all rushed at me in an instant.\n\nTaylor's hand steadied my thigh for only a second. Then I felt his fingers creep around to cup my ass. He groped me.\n\nNo. He was pulling me.\n\nI pushed myself closer to Taylor. My cock slid deeper into his warm ass. I felt every inch of it. Taylor's ass gripped my shaft so tightly. There wasn't enough lube to dampen the sensation. His entire body bent, his ass pushing backwards and the slope of his back becoming more pronounced.\n\nHis ass met my hairy crotch. I was buried inside of him. My mouth fell open. My dick was so hard it throbbed inside of Taylor. Both of us shared the moment. The younger man wiggled his hips much like he'd done on the balcony, only now I was feeling his soft ass cheeks work to wedge my erection deeper into him.\n\nI was breathing hard on Taylor's neck. My arms wrapped him in a bear hug and pulled him in tight. Fingers clutched at my tightening firearms. Even my legs wanted to close in around him. We weren't even moving and the sensations I was being put through were unreal.\n\nTaylor's hips started to twist against my crotch. My eyes widened. The boy's ass slid up the length of my shaft and back down. It was so hot and tight... there had been so much lube and now it was... gone.\n\nI clapped a hand on the small of Taylor's waist and he stopped. My fingers dug into his buttery smooth skin. My entire lower body locked. Already? I could practically feel my balls getting ready to burst. The throbbing inside Taylor intensified. A single loud squeak could be heard from my mouth when my teeth ground together.\n\nTaylor tilted his head back against mine. I could see his smile.\n\n\"Too much?\" He whispered.\n\nI swallowed. I didn't want to admit it. If I let Taylor lead I was going to be filling him full in seconds. My breath came out in a few quick blasts before I got it under control.\n\n\"Can... can we just go slow?\" I hissed back to him.\n\nHis smile widened. \"I've got all night.\"\n\nI tried to relax, holding him close. Taylor nestled into me. He was clearly content to lay there being held with my cock inside of him. I let my hands explore a bit. It was so odd touching a guy this way. That made it somehow more exciting. Taylor's chest was flat but I groped him there and felt the muscles beneath his skin. Everything about him was so delicate and soft, but beneath it all I felt the framework. With my body wrapped around his I sensed the energy within, from his arms and his shoulders right down to his square hips planted firmly into mine.\n\nPulling back, my cock inched out of Taylor. I immediately missed being buried inside of him and I shoved myself inward. My breath came out in a shudder right by Taylor's ear. His ass was sealed around every bulge and vein in my shaft.\n\n\"God, your cock is so fat,\" Taylor gasped with a delighted snicker.\n\nI'd never heard it put that way. When he said it I could immediately feel another inch deeper within him. I pulled my hips back and again slowly shoved my swollen dick back into him, savoring every second of the motion.",
        "I found a tempo and let myself settle in. Now I was exploring elsewhere. I sucked at Taylor's neck. I squeezed at his thigh. I ran my fingers through his short hair. It all kept building and building. I wasn't satisfied with any of it. It was addicting. Soon I was sucking the boy's ear lobe into my mouth. Next I was crawling closer to stick my tongue into his ear, the act of doing so driving my cock into him even deeper than before.\n\nThe entire time, Taylor just writhed in my arms and seemingly basked in the full body sensations we shared. He allowed me to be in control. I pumped my hips slowly, and he only met my thrusts without much extra motion. When I tugged his head back by his hair and kissed his cheek, he blew out a long breath of arousal through pursed lips.\n\nI don't know how long we lay that way. My sense of time was so distorted and I didn't care. There were times I'd bring myself right to the burning edge of an orgasm, then I'd slow myself to a crawl and let everything reset. Each time, Taylor's body would relax into me all over again and accept my assault of his neck and his ear.\n\nThen, my hand slid from his chest, down across his flat stomach, all the way to the front of Taylor's thigh. It was only the slightest touch. Still, it was more than enough to give me pause.\n\nMy fingers brushed against Taylor's cock.\n\nA sobering tingle shot through my body. It wasn't one of disgust but... what? It stopped me in my tracks. I knew what I was doing, but for some reason, that faint little touch brought everything that was happening into focus.\n\nMy hand slid back over. The tips of my fingers first found the folds of a silky smooth set of balls. My hand didn't retreat. Instead my palm slid up the hairless shaft and squeezed.\n\nTaylor throbbed in my hand, and I did the same after a firm thrust into his ass. Now I was moaning. I did so as quietly as I could against sealed lips. As if out of some reflex, my pace quickened. There was no pause in my thrusts anymore. I was rhythmically fucking Taylor now while I clutched his hard dick in my fist.\n\nOur passion deepened. Taylor encircled my head with his arms. My thighs climbed over his. I felt my ass cheeks clenching tightly as I tried to jam my shaft as far into him as I could. I grunted and groaned. Soon I began to fondle Taylor's crotch. I stroked at his cock and tugged at his sack with with no manner of direction or reason. It just felt exciting to have him in my hand. It was addicting to be able to grab him and actually feel his arousal. I was also surprised to discover how long his cock was, though I truly only had my own to compare it to.\n\nI wedged myself so closely to Taylor that we began to shift. One of my legs had widened and slid beneath him. Without ever slowing our motions, Taylor was able to scoot himself onto me. In seconds I was on my back, with Taylor lying on top of me. My cock was still in his ass, though it bothered me that I couldn't get ass much mileage out of my thrusts. The younger man's body felt so much smaller and frail on top of my own. I coiled my arms around him and drew Taylor in.\n\nTaylor turned his head to the side. His face was now right next to mine. I was completely drawn in. I tugged his cock while our lips teased at one another. It became too much and our mouths met again. Now Taylor rolled his hips freely. My body tightened from the sensations. He was in the driver's seat now. My cock was bending and diving and prodding into places within Taylor like I'd never experienced.\n\nOur tongues dove at one another through it all. It was a constant battle through Taylor's rocking movements to keep our mouths locked. Now his thighs were open wide and even without seeing them, I could feel his balls bouncing just beneath my hand. I was trapped beneath him unable to retreat or slow him down.\n\nIt was all adding up too quickly.\n\n\"Tay... Taylor!\" I hissed right into his mouth. \"Taylor, I'm... I'm about....\"\n\nHe didn't stop. Instead Taylor erased my words with his roiling tongue. His plump ass cheeks were squeezing, releasing, twirling, over and over without end. I released his cock and clutched both of his inner thighs in my hands. I was trying to slow him down. I couldn't. His cock bounced wildly against his stomach and my forearm.\n\nAll the while, he was staring right into my eyes. He knew what he was doing. He wanted it. He was going to get it.\n\nI'd never felt harder in my life than when my dick burst inside of Taylor. Wild colors blasted the edges of my vision. Still Taylor kissed me. Still he rocked his body on top of mine. His fat ass cheeks smeared themselves up my waist and back down. My cock was twisted into a knot inside of his ass while it fired warm shots of cum into him. I jerked at his thighs to try and make him slow. It worked in Taylor's favor. He just joined the motions and used it to cram my seizing cock deeper into him.\n\nI couldn't stop him, so I did the next best thing I could do to ease the torture. I clamped my hands on his waist and drove my hips up into him. Taylor's mouth released my own. His jaw fell open and his brows furrowed, but I still saw him grin. His ass cheeks clapped loudly against my skin. Caution was gone. All I could think about was the thick stinging sensation blasting from my cock. Driving my cock into Taylor this way somehow made it less torturous and more satisfying.\n\nEven when my hips collapsed back down to the bed, my lower body still thrust upward every second or so. I was scraping the last bits of orgasm that I had.\n\nTaylor didn't stop.\n\nHe stared me down lustily and continued to gyrate his ass on top of me. I gripped his thighs and pleaded with him through my eyes. Through the aftershocks of my orgasm, I began to sober fast, realizing what it was I was doing.\n\n\"I know... I know that look,\" Taylor panted in a hushed voice.\n\nHe didn't stop.\n\n\"That's the look where you ask yourself what the fuck you're doing,\" Taylor said with an evil grin. \"When you dump your load and wonder what the hell you were thinking.\"\n\nTaylor wasn't wrong. I was pinned beneath him, only able to wallow in the truth of what was happening. My cock was no longer stiff inside of Taylor, but it was there and he wasn't letting it lose strength. He kept grinding his ass atop my body. I felt my own cum drooling from his hole, down my shaft, and onto my balls.\n\nTaylor brought his lips close to mine.\n\n\"You're fucking me, Doug,\" He hissed. \"Because you came in here to fuck me.\"\n\nHis words split right through my skull. A spike of filthy excitement hit my brain and showered down through my body.\n\n\"I'm not gonna let you tuck your fat cock between your legs and run outta here,\" Taylor continued.\n\nI could see the haze in his eyes. Even in the dark his hazel orbs were glazed over. That must have been exactly how I looked moments ago. I couldn't bring myself to look away, even though for a moment I wanted to. I didn't want to face what I was doing. The more I stared into Taylor's face the more contagious that look he was giving me became.\n\nMy hands settled back onto Taylor's waist. He was half my age. I could feel that in his skin. With every twist of his hips, I felt the sweat and filth lathered across my crotch. This was Taylor. I'd been to his baseball games. I'd helped him move his things off to college. He was Leanne's nephew.\n\nI grabbed Taylor by the cock and pulled him into a higher gear.\n\nMy face met his. We kissed. It wasn't a neat and delicate kiss. I let Taylor's tongue lap at my lips and probe deep into my throat. I could feel my pulse swelling in my cock again. Taylor could feel it, too. His creamy asshole tugged my dick higher and higher. In my hand, his shaft grew less tender by the second.\n\nTaylor moaned out into the dark.\n\nI clamped my free hand over the boy's mouth. When I did I felt flecks of warmth on my forearms. While Taylor's hot breath hissed through the fingers of my left hand, his cock jumped and bulged in my right. Hot fluid oozed down onto my thumb and in between my fingers. I felt the droplets on my arms sinking through my arm hair.\n\nThe most incredible feeling, however, was swarming my cock. Each time Taylor's cock throbbed, I could feel his insides tighten around my shaft. It was like being stroked or squeezed, but I couldn't believe it was his ass! And as if it were contagious I felt my own cock surging with energy, my own asshole pulsating right along with Taylor.\n\nThe dick I held began to sag in my fist. Still it nodded. Dribbles of cum leaked to pool with the rest in my hand. Taylor had stopped gyrating, but now he shuddered on top of me. I slid my other hand away from his mouth then used it to press his face back toward mine.\n\nFor several silent moments we breathed each other in and kissed. Each time our tongues caressed one another I felt a familiar throbbing begin to strengthen my sticky cock. I still had not pulled it out of Taylor's ass. I didn't want to, I realized.\n\n\"You feeling that feeling yet?\" I gasped. \"Wondering... what the hell you just did?\"\n\nTaylor just looked at me and smiled wearily.\n\n\"Actually, no,\" he told me. \"It's the opposite. I can't believe it really happened.\"\n\nI nodded in agreement. I certainly didn't regret feeling what I felt with Taylor in that moment. I knew I'd never forget it.\n\nTaylor licked his lips. He said, \"I actually don't want you to stop.\"\n\nI half smiled thinking he was kidding. Looking him in the eyes, I saw that wasn't the case.\n\n\"Sorta want you to just stay in here,\" Taylor went on, \"flip me on my face and fuck me stupid again.\"\n\nI kissed him again, sneaking my tongue through his lips once more.\n\n\"Is that right?\" I mouthed against his face.\n\n\"I know you gotta leave, Doug,\" Taylor admitted. \"You'll need sleep. Leanne might see you're not in there. She'll give you hell tomorrow if you're not up on time, too. I understand.\"\n\nI licked my lips and said, \"I'll catch hell no matter what. I might as well earn it.\"\n\nI took Taylor by his hips and flipped him down onto the bed, rolling with him so that my cock stayed lodged in his ass. He was flat on his face, but tilted his head down to look at me. I felt the response throughout his whole body. I was mounted behind him after all, my chest against his back.\n\nNow, I was able to spread my thighs around his, wedge myself deep into his ass cheeks, and begin thrusting up into him. I was deeper than I'd over been. I planted my elbow above his shoulder on the bed and held him in place. The force from my hips was shoving him upward along the mattress after all. I worked slow but rough, feeling Taylor's cheeks jiggle against my waist when I'd drive into him.\n\nSeveral minutes passed. I kept my pace steady and came to a realization. That familiar orgasmic burn was a long way off; yet, there I was again unable to get enough of Taylor's ass. I wondered how long it might take.\n\n\"Said you've got all night,\" I told him. \"Did you mean it?\"\n\nAfter four or five more hard thrusts, Taylor finally formed the words through his smile.\n\n\"Every... word... ah... oh....\"\n\n****\n\n\"Doug, did you get my phone charger already?\"\n\nI shut the hatch on the SUV and shielded my eyes with my hand, staring up at the porch.\n\n\"Sure didn't, sweetie,\" I called back to my wife.\n\nLeanne made a defeated gesture dropping her arms to her sides before storming back into the cabin. She was always a mess when we traveled. I checked my watch and saw that we were still on schedule. It was a long drive, but I'd learned to account for delays. Especially when it concerned Leanne packing.\n\nI glanced over at the red car in the driveway. Taylor was there, tucking his luggage into the trunk. He didn't look over but I watched him. His tight black shirt slid partially up his body to reveal his smooth waist. I couldn't fight away the images in my head even if I wanted to. The way my hands fit around that waist to tug him into me....\n\n\"Well, I guess this is goodbye for a while, Doug,\" a voice said.\n\nI spun to find Heather approaching me wearing a smile. She extended her arms and I welcomed her into a hug. When the woman drew back, she beamed up at me with her sister's eyes. That was a look I was not accustomed to.\n\n\"Listen, thank you so much for doing this every year,\" Heather said. \"The horseback riding was awesome.\"\n\n\"Hey, my pleasure,\" I told her. \"Life gets a little hectic, but I wouldn't want to miss out on some getaway time.\"\n\n\"Really, I know it's a lot,\" Heather went on. \"And I know Leanne can be difficult. I really do appreciate you setting all this up.\"\n\nI nodded. \"Look forward to it next year. We'll keep it going.\"\n\nHeather looked me over. She half glanced behind her and lowered her voice a bit.\n\n\"And also... thank you for being so nice to Taylor,\" she said. \"It really means a lot to him that you two are hanging out. His father isn't as accepting... well, his father is a lot of things.\"\n\nI smiled and nodded again. \"I know.\"\n\n\"I just think it's good for him to have someone like you,\" Heather said. \"Maybe you two can do that more often? You know, hang out and do things together?\"\n\nI forced myself to make eye contact with Heather. Now the images in my head fluttered like moths trapped in a lampshade, and I tried like hell to bat them away.\n\n\"Yeah, I think that'd be cool,\" I told her. \"When he's not busy with college, anyway. Maybe we'll line up a, uh, camping trip or something like that.\"\n\nHeather smiled. \"I'll miss you, Doug.\"\n\nI accepted another hug from Heather before my wife emerged from the cabin again.\n\n\"Heather, I think your curling iron is still in here,\" Leanne called. \"And I have still not seen that phone charger.\"\n\nHeather smiled one last time at me before heading toward the cabin. I watched her leave before I heard a vehicle start. Paul and Nancy were already leaving. I'd said my goodbyes earlier after loading their luggage, but I waved to them as they pulled past me in the driveway. Nancy smiled and waved enthusiastically.\n\nPaul was another story. He didn't wave nor smile. He'd hardly spoken when I'd bid them farewell. Now he eased the car along and glared at me through the windshield. I'd seen that look of disgust aimed at Taylor all weekend. Now I was the recipient. Outwardly I didn't let it bother me. A nagging feeling chewed my insides, though. I settled my nerves like I had the previous day by telling myself what was probably true. I'd chatted with Taylor and been close with him all weekend. Because of that, Paul saw me in the same light he saw Taylor.\n\nMy paranoia wouldn't accept that. Deep down I wondered... what if he knew? Things hadn't exactly been totally quiet the last few nights. Had he caught on? Or seen? Surely he'd have made waves by now. Not knowing would always gnaw at my mind.\n\n\"Guess you're public enemy number two now?\"\n\nI glanced over to see Taylor walking up. He wore tight fitting jeans, a small black shirt, and that sly little grin. I shrugged to him.\n\n\"Not everyone hates me,\" I replied. \"Your mother just asked me to hang out with you more often.\"\n\nTaylor's eyebrows lifted and his smile widened as he came to lean on the SUV beside me.\n\n\"Sounds like a plan to me,\" Taylor agreed.\n\nI rubbed my head. \"Do you, uh... think we can pull something like that off?\"\n\nTaylor's eyes narrowed. \"We fucked every night this weekend in a cabin surrounded by our family. If we pulled that off, I think we can manage a little alone time.\"\n\nMy eyes shot back to the porch when he said the words but I found no one there. I licked my lips and moved a bit closer.\n\n\"I mean... long term,\" I said in a hushed voice. \"Beyond this weekend. We don't exactly lead the same kind of lives, you know.\"\n\nTaylor shrugged. \"Who cares. I don't think it has to be complicated.\"\n\nThe young man pulled his hand from his pocket and reached between us. His palm cupped my crotch through my shorts. I sucked in a deep breath and scanned back toward the cabin again. Already I could fill my dick filling with blood.\n\nTaylor stared right at me. \"As long as I want a fat cock and you want a tight ass, I don't think we can really go wrong.\"\n\nI allowed myself a little smirk. \"Is that all it is?\"\n\n\"Well,\" Taylor said removing his hand and stepping even closer, \"if you'd like the element of danger, there's always holidays coming up. I could stay in the guest room. Maybe even invite mom to sleep in the next room for old times sake.\"\n\nI shook my head. \"Wow. You're demented.\"\n\nTaylor laughed. \"You started it.\"\n\nLeanne and Heather approached and we turned. The four of us chatted for a while in the driveway before going our seperate ways. We hugged, said our goodbyes in turn, and each got ready to make the long drive home. I even received a hug from Taylor, which he made last a little longer than I was comfortable with. Heather and Leanne didn't seem to notice. Even after he'd gotten in his car and drove away, I was already receiving a text message from him.\n\nAs we got in the SUV and started down the winding driveway through the trees, I mentally prepared myself for things to go back to normal. To my surprise, my wife seemed rather happy.\n\n\"We really needed that,\" Leanne said, looking longingly in the mirror at the fading cabin.\n\n\"I know I did,\" I said without lying.\n\nLeanne looked at me. \"You know, I'm really proud of you. You and Taylor really hit it off! I thought you were going to be an asshole like Dad.\"\n\nI gripped the steering wheel. \"He's a good kid. Why wouldn't I spend time with him? I think Paul just needs some time. He'll come around eventually.\"\n\nLeanne stared out the window dreamily.\n\n\"Well, maybe so,\" she muttered. Leanne chuckled and added, \"I don't think he'll be up his ass the way you were this weekend, though.\"\n\nWhite hot shock bounced through my body like sparks. I glanced at Leanne. She was still looking out the window. It was a joke. Just an expression. Leanne was a heavy sleeper. There was no way. That's not how she meant it. Each thought did nothing to cool the heat on my skin. I thought of something to say back. I had nothing.\n\nI watched her out of the corner of my eye. Leanne looked over at me and grinned before turning to look back out the window at the colors in the trees. The mere seconds weren't enough to see what was in her eyes.\n\nShe didn't know. She didn't."
    ],
    "authorname": "SecondCircle",
    "tags": [
        "anal",
        "bareback",
        "blowjob",
        "hairy",
        "twink",
        "big ass",
        "family",
        "vacation",
        "top",
        "cheating"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/getaway-3"
}