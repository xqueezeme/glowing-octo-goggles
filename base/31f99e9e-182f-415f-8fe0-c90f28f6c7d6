{
    "title": "Midnight at the Villa Diodati",
    "pages": [
        "<center>Midnight at the Villa Diodati</center>\n\n<center>A Tale of Gothic Romance and Horror</center>\n\n<center>by Chloe Tzang</center>\n\n\u00a9 2019 Chloe Tzang. All rights reserved. The author asserts a moral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review. \n\nWritten for the 2019 Literotica erotic Gothic Horror event, \"Beyond the Wall of Sleep\", organized by BlackRandi. \n\n...... Chloe\n\n<center>* * * </center>\n\n\"Is something amiss, Milord?\" the boots asked my husband. Sylvester stood there gazing sadly at his Hessian's, glossy black, gleaming in the candlelight, a vast improvement on their condition after our brief walk this afternoon along the shores of this Lake Geneva with its sparkling blue waters and the white-tipped mountains rising high around the lake. Twas almost as picturesque as the seven peaks of the Song mountains where I had spent so many of my youthful years.\n\n\"No, it's nothing, my good man,\" Sylvester said. \"'tis good for a man to be removed from civilization on occasion.\"\n\nI giggled and now 'twas the boots glance that fell my way. A glance askance, for I was seated at the dresser, carefully honing the blade of my short sword and my long sword lay unsheathed and gleaming across the dresser before me. \n\n\"This entire benighted Europe of yours is far removed from the civilization of the Middle Kingdom, milord husband,\" I murmured, glancing sideways at my dearest Sylvester.\n\nNow he laughed. \"Anywhere that is not the Middle Kingdom is uncivilized to you, my dearest Li-hua,\" he said. \"I am constantly surprised that you accepted the hand of a barbarian such as I in marriage.\"\n\nI smiled in turn, delighted to have removed that look of melancholy from the face of my beloved, for he did attach such importance to appearances, barbaric though they were. \n\nOf course, I was constantly surprised myself at this strange marriage, but when the Emperor himself commands one's father to order his daughter to marry the barbarian who sought her hand, it is a daughter's duty to obey. Particularly when she is the youngest and with a sad reputation for spurning proposals. I'd only threatened to kill two and I hadn't actually maimed either of them for life. They would no doubt have recovered by now. It had caused my father some embarrassment though, as well as leading the matchmaker to reject any further attempts on my behalf.\n\n\"What did you expect, father,\" I'd said, for I was no normal daughter. When one's father is not only an senior official of the Emperor but also one of the Ten Tigers of Shaolin, what girl could be normal?\n\n\"You sent me to Shaolin for my upbringing. I will accept no man as a husband who expects me to obey his mother and a First Wife and who will not permit me to continue my training. Least of all would I accept a husband who wishes all the joys of marriage before the marriage takes place.\"\n\n\"You broke the nose of the oldest son of the Fifth Assistant Deputy Minister of the Office of Tributary-bearing Barbarian's Secretary, Youngest Daughter,\" my father had almost wailed. \"And now what am I to do?\" He had buried his face in his hands. \"The Minister of the Office of Tributaries himself has commanded me to go to the coast and negotiate with these new barbarians, and you have no mother and you refuse obedience to Second and Third Wives.\"\n\n\"They're idiots, father,\" I said. \"Of course I understand why you are married to them, but obey them I will not. Leave me at home and I'll kill them.\" I had smiled sweetly. \"You could marry again then, father. Someone younger. More amenable to reason. Perhaps I should stay.\"\n\n\"Silence, Youngest Daughter. Do not even think about it. Your brother, now. Perhaps I should send you to stay under his care?\"\n\n\"Kei-ying?\" I said. \"Father! He's only six and he's about to begin his Shaolin training! Master Luk Ah-choi himself has agreed to train him! You cannot keep him at home for my sake.\" Even at six years old, Kei-ying was such a boy as one would obey, even one such as I.\n\n\"What can I do with you?\"\n\nNow I smiled. \"Take me with you, father. I'd like to see these barbarians.\" I giggled. \"Maybe I can marry a barbarian. See the world, meet barbarians. Surely it would be acceptable to kill one or two. There are too many barbarians in the world already.\"\n\n\"No!\" my father had said, flatly. \"These negotiations are going to be difficult as it is. You are not to kill a single one of them.\" He eyed me. \"Or injure any,\" he added.\n\nI had smiled. \"Of course not, father.\"\n\n<center>* * * </center>\n\n\"This is the ship of the foreigners, Honorable Master,\" the translator said as the small junk took us out across the dirty waters of the Peiho. \"It's named Alceste and it is one of their fighting ships. They are ruled by a woman.\"\n\n\"It is strange, this ship,\" I said. \"The masts and sails are very different from ours. Are those cannon where they have holes in the side?\"\n\n\"You are astute, Honorable Mistress. Their ships have many more cannon than ours, they are rigged differently and they sail them across the entire world. I understand that this ship was captured from another barbarian tribe called Fiance in a war they fought for many years.\"\n\n\"Tribal squabbles,\" my father dismissed this war. \"Barbarian feuds are of no interest to the Middle Kingdom.\"\n\n\"As you say, Honorable Master,\" the translator said.\n\n\"Importunate barbarians. We should destroy them. Them and their filthy opium.\" The Captain of the Green Banner who commanded our escort spat over the railing.\n\nThat ship we approached, to my eyes, seemed far more warlike and capable than the junk on which we were being transported and in his quick dismissal, I thought to myself that my father was sadly mistaken. The Captain of the Green Banner? Eyeing that ship as we drew close to its sides, I thought he was perhaps overly optimistic. It seemed a fearsome thing to me and not one to be so easily destroyed.\n\n<center>* * * </center>\n\n\"Lord Amherst, the Honorable Prince Wong Chun-kong and his daughter, The Honorable Princess Wong Li-hua,\" the translator said as my father inclined his head with delicate precision. A precision I followed exactly although it was interesting with the wooden floor of this vessel swaying under my feet.\n\nThe Captain of the Green Banners stood behind my father, silent, implacably hostile, on guard, hand on the hilt of his sword and he was not the only one on guard. A dagger was threaded through my hair, my short sword strapped to my thigh beneath my robes, two more daggers in my boots and two more in my wrist sheaths and the razor sharp edge of my fighting-fan would slice flesh asunder for I was no girl with the lotus feet, I was shaolin-trained and sure of my skills, for had I not been tested at the Shaolin Temple itself. Did I not have the marks burned on the inner skin of my forearms?\n\n\"Honored Prince Wong, Princess Wong, the barbarian leader welcomes you onboard HMS Alceste,\" the translator said. \"This one speaking now is Lord William Amherst, leader of the tribute bearers to the the Emperor, and this other hairy sweaty looking one is the commander of this ship, Captain Murray Maxwell. Captain is the rank they give the commanders of their military ships.\"\n\n\"It is not 'leader of the tribute bearers to the the Emperor', father,\" I said. \"He used the word 'ambassador', it is not the same meaning.\"\n\n\"Hush, Youngest Daughter,\" my father murmured as the translator glared daggers at me, but knowing I had studied this ghastly sounding language, all grunts and noises such as cattle and sheep make, he was forced to translate the true words without circumvention. Myself, now I looked around the ship with interest.\n\n\"The Ambassador,\" the translator said, his face blank, \"asks if the young lady wishes to tour the ship.\"\n\n\"Thank the Ambassador,\" I said. \"I would enjoy that.\"\n\n\"Baskerville,\" Lord Amherst said, looking around and a young man stepped forward. His eyes met mine, his eyes widened, a shock rippled across his face and almost, I felt a little breathless as a strange attraction made itself felt. Desire stirred within me. Desire for a barbarian with skin the color of a ghost? Surely not. \"Please escort the young lady over the ship. We'll take tea on the poop deck in an hour.\"\n\n\"Sir!\" Baskerville turned towards me. \"Princess...\"\n\n\"You may call me Li-hua,\" I said, smiling a little breathlessly. \"And your name, Sir, is...?\"\n\n\"Sylvester,\" he said. \"Lord Sylvester Baskerville, aide to Lord Amherst. If you'd come with me, Li-hua, perhaps we can start at the bow and work our way to the stern.\"\n\n\"Bow?\" I asked.\n\n\"The front of the ship,\" he said, and it seemed natural for my hand to rest on his arm as he led me forwards across the planked wooden deck.\n\n<center>* * * </center>\n\n\"Nice little piece of slant-eyed tail,\" a coarse voice that I barely understood said from behind me as I followed Baskerville through an interior deck crowded with cannons and men, and where he stooped, my head almost brushed the wood above and fingers pinched at my butt. Without thought, I whirled to see a coarse looking barbarian seated at a wooden table leering at me, the men around him and at other tables watching him and I and they were grinning.\n\n\"Kydd,\" Baskerville barked, but I was not amused and by then my dagger had slid from its wrist sheath and I had slammed it through the barbarian's hand to the hilt, pinning his dirty paw to the wooden table.\n\n\"You bitch,\" he groaned, his free hand tugging the knife out and he was standing now, my knife in his hand and that I had not expected. His other hand dripping blood. \"I'll kill you for that, you slant-eyed little whore.\"\n\n\"Put this man in irons,\" Baskerville barked, and men were rising to their feet as Kydd lunged for me with my knife.\n\nI smiled as I stepped sideways and forward, seizing his wrist, his hair, using his weight and momentum as he lunged to break his arm, dislocate his shoulder, sweep his feet from beneath him, take the knife from his now loose hand and drive it into his liver. He fell to the wooden planks on which we stood, shuddered, groaned, died. Leaving my knife embedded in his body, I stood. No doubt a servant would clean it for me and if not, I had more.\n\n\"It is not important. May we proceed with the tour,\" I said, ignoring the peasant on the deck but I did smile at the men around us.. \"This is most interesting. May we look at one of the cannon without more discourtesy?\"\n\n\"You speak excellent English, Princess.\" Baskerville seems a little stunned.\n\n\"Li-hua, Sylvester. Li-hua. The translator teaches me a little on the joruney from Pekin,\" I murmured. \n\n\"Journey,\" he said without thought. Then, \"Stockwin, summon the Officer of the Watch to take care of this. Lady Wong, this way please...\" His expression as he glanced around was one of anger but he said nothing further.\n\n\"Jesus,\" I heard someone's voice sound in amazement. \"Killed Kydd as cool as cucumber, she did.\"\n\n<center>* * * </center>\n\n\"Li-hua!\" my father said, as Sylvester escorted me towards where my father sat with Lord Amherst, the Captain of this ship and others and they were drinking tea, but such tea. \"You were not to kill anyone.\" But his face did not disapprove and was the Captain of the Green Banner smiling.\n\nCaptain Maxwell stood, bowed low. \"Your pardon, Princess. He would have been punished most severely for his disrespect.\"\n\n\"I was in no danger with Sylvester with me, Captain,\" I smiled. \"Is that tea? I'm so thirsty. Your ship is indeed fascinating, Captain. I would so enjoy more time to look her over.\"\n\n\"Pray take this seat, Li-hua,\" Sylvester said, and I did, smiling at him as he assisted me.\n\n<center>* * * </center>\n\n\"Now this is a man I would marry, father,\" I murmured as Sylvester had handed me down the stairs to the main deck and I had eyes only for him and his face as he gazed at me was rapt.\n\n\"Hush, child,\" my father had said. \"Such a barbarian would be far beneath you. It is unthinkable.\"\n\n\"Ask this Lord Amherst and his mission to a banquet tomorrow evening, father,\" I had said. \"Let them see the magnificence of the Middle Kingdom as compared to this....\" I gestured at the squalid meal behind us, laid out on tables fit only for a village tea house. A poor village tea house. And yet, the cannon were polished and immaculately cared for and the men were well trained and obeyed orders instantly and with surprising discipline. I wondered if my father had observed that. \"Let them know their place.\"\n\n\"Yes,\" my father had said, thoughtfully. \n\n\"Invite them,\" he had said to the translator.\n\n\"Let me, father\" I said, laying my hand on my father's arm, smiling at the translator. \"Let me practice my slight knowledge of this strange tongue. Honorable Translator can assist me where I am mistaken in my words.\"\n\nFather looked at me thoughtfully. \"You are more useful that I thought, Li-hua. Please do.\"\n\n\"Thank you for your trust in me, Father.\" I bowed my head, turned towards the tall Englishman in his smelly uniform of poor quality cloth. No wonder they sought the Middle Kingdom as beggars. And yet this ship was beyond anything of ours. A puzzle.\n\n\"Lord Amherst,\" I said, \"my father, the Prince Wong Chun-kong invites you and your mission to a banquet tomorrow evening in honor of your arrival here at Peiho. It is a small and insignificant port of the Middle Kingdom but we shall do our poor best to welcome and entertain you while you and my father knee-go-shee-ate.\"\n\nLord Amherst blinked, bowed as these foreigners did and it seemed strange that he would bow to a woman but I returned the gesture, seeing no harm in politeness and if this was their custom...\n\n<center>* * * </center>\n\nOf course the negotiations had dragged on. Father was an expert at negotiating with barbarians and these ones, they were so impatient. So importunate and really, who was interested in barbarians. The Emperor was favoring them by even permitting them to trade with the Middle Kingdom, for did not the Middle Kingdom possess everything that was desirable.\n\nOf course Baskerville was there. Sylvester. His attentions were constant, his fascination for me a matter for spreading gossip and I did not discourage his pretensions for I in turn found him rather more than fascinating.\n\n\"He wants to marry me, Father,\" I had said, over the course of that slow journey to Pekin.\n\n\"I am not sure of that, Youngest Daughter,\" my father had said. \"Perhaps it is as a concubine that he desires you.\"\n\nI shrugged. \"If that is his intent, I will kill him of course.\" I smiled. \"Please negotiate for me, father.\" I looked at the translator. \"Make sure he understands, Honorable Translator, for if there is a misunderstanding you will die.\" I smiled. \"The death of a thousand cuts.\"\n\nTranslator paled, bowed low. \"I will do my utmost, Honorable Mistress.\"\n\n<center>* * * </center>\n\n\"Do you, Li-hua Wang, take this man as your lawful wedded husband?\"\n\n\"I do.\"\n\nIt was done and my heart pounded, for I was married to this strange blue-eyed golden-haired barbarian who stood before me, his hands holding mine as this strange ceremony came to a close and we had already carried out the tea ceremony with this Lord Amherst standing in for Sylvester's parents.\n\nI was Sylvester's wife. \"Lady Li-hua Baskerville.\" It sounded strange on my tongue and his body on that wedding night was stranger still. His skin pale, his body coated with fine blonde hair that fascinated me. He made love with enthusiasm, although he seemed startled on that second night when I asked if he would like to try a different position.\n\nHis eyes when I had shown him my copy of \"The Wife's Book of Husbandly Satisfaction\" had surprised me. Of course it was in chinese but the illustrations were clear enough that even an inexperienced maiden such as myself could follow the meanings.\n\n\"What on earth is this?\" he'd gasped.\n\n\"Do you not have such instructions for wives in your country?\" I had asked, a little startled, for while I did not like Second and Third Wives of my father, they had been more than helpful in preparing me for my duties as Sylvester's wife. We had parted far better friends than I had thought possible and they had been full of much sound advice.\n\n\"Certainly not,\" Sylvester had said. \"No self-respecting woman would do something like that.\"\n\nI'd smiled.\n\nA little later he had said, \"Li-hua... what are you... oh my god... oh my god... Oh! My! God!\"\n\nAnd a little later still, \"Oh Jesus yes... yes yes yes...\" and I had smiled happily.\n\n\"Would you like to try this one?\" I had asked the next evening.\n\nHe'd blushed pink and said nothing and my smile had been wicked as I had knelt for him and he had made no protest whatsoever as he positioned himself to take me as a husband should and my excitement had been uncontained and his enthusiasm had been more than reward.\n\n\"Can we try this one?\" he'd asked, the very next evening, examining the pages of my book and we had. A number of times and I had decided that marriage to this barbarian suited me to perfection and there were many more weeks before we were to leave Pekin to return to his barbarian homeland..\n\n<center>* * * </center>\n\nOn the shore of the Whampoa from where I was to depart, I had gazed at my father for what I knew in my heart to be the last time and I knew that my fate was sealed. I, a chinese maiden, now married to a barbarian whom I loved, destined to be carried off in this strange ship. Carried away to some far foreign land as chinese brides had been carried away by barbarians since the dawn of time. Carried away to some foreign land where I would live and die without ever seeing my family again, for in my heart I knew there would be no return home and I had turned to my father for one last farewell with tears in my eyes while my barbarian husband stood waiting.\n\n\"Farewell, father,\" I had said. \"I will not see you again, but be not sad, you have many sons and daughters and I am only one, only a daughter and not important.\" I took my father's hand in mine and my tears watered his skin. \"Think only this of me, father. That when I die there will be a corner of a foreign land that is for ever China.\"\n\nMy father too had wept, and as night fell, still he stood there watching but in the morning as we sailed, he was gone and I stood beside my husband, watching my homeland fade from sight, my loyal maid, Wei-tang, the only other chinese in sight while my half dozen little Shih Tzu's gamboled around my feet.\n\n<center>* * * </center>\n\nIt had been a long voyage, a strange voyage and one beyond anything I had imagined and for a long moment, as I sat in that hotel room in Geneva, those memories continued to hold my mind. The shipwreck in the Java Sea where Alceste sank. The journey in open ships boats to Batavia and then that long voyage across the Ocean to Ceylon, rounding the Cape of Good Hope and then north to England. There had been that strange meeting with the old Frenchman imprisoned on that lonely island in the South Atlantic. \n\n\"He was Emperor of the French,\" my dear Sylvester had said to me.\n\nI had liked that old Frenchman, barbarian though he was. He had smiled as he looked at me and he and Lord Amherst had talked of China and I remembered the old Frenchman's words to Amherst as he looked at me. \"China is a sleeping giant,\" he had said. \"Let her sleep, Amherst. Let her sleep, for when she wakes, she will shake the world.\"\n\nThe arrival in London, the ships, ships everywhere and yet the city was small. Small but marvellously intriguing and the energy was palpable and I looked and I met more and more of these foreigners and I saw their enthusiasm, their energy, their industry and their willingness to attempt new things at every turn and I feared for my country.",
        "I met their Prime Minister, the Earl of Liverpool, I met their Prince Regent, for their King was mad. I met my husband's family and many others and then came that letter. The invitation.\n\n\"It's from George, by god,\" Sylvester had said, reading in front of the fire in our London Townhouse on a chilly spring morning. \"He's in Geneva all summer, taken a villa on the lake don't you know. Percy's with him, and Mary. Damn fools, disgraceful business, that. Percy should never have run away with her but he always did have his head in the clouds. Here we are. What do you say to this my dear? George has invited me to join him for as long as I like. And by god, Auden is there. Last I heard he was supposed to be in Brussels as secretary to Sir Charles Stuart. George says he's married. Fellow must've eloped or something. No parents in their right mind would allow their daughter to marry Auden.\"\n\n\"What is wrong with this Auden?\" I had asked.\n\nMy dear Sylvester had looked up, grinning. \"Crazy as a loon. Mad poet, madder than George or Percy and without a jot of their talent. I say, you wanted to see some of Europe, Li-hua. Let's do it, by god. Stop in Brussels, buy a carriage, travel across France to Geneva, stay the summer and on to Italy for the winter. Visit Rome and Naples. See some of the old Roman things you asked about.\"\n\n\"This George doesn't know you're married, Sylvester,\" I'd said, examining the barrel of the dueling pistol I was cleaning. I did love these new english pistols Sylvester had bought for me. Beautiful weapons, so much better than those made in China and I was practicing by shooting the wicks of flaming candles without disturbing the candles. The barbarian servants did not find it amusing but Sylvester's friends did.\n\n\"It don't signify my dear,\" Sylvester said. \"Old friend. We were at Harrow together. George is free and easy and Claire's there too. Although she shouldn't be. You'll like Mary and Claire. Not sure about Auden but he's a devilish fine looking fellow. Adonis personified. God help his wife, whoever she is. What do you say?\"\n\n\"I'd like to see some of France and Italy,\" I said. \"If you care to go, of course I'd like it.\"\n\n\"I'll write immediately and let George know. We can leave in a fortnight.\" My Sylvester had looked up, smiled, beckoned me to his lap. \"Bring your book, my love,\" he'd murmured in my ear. \"George, Percy, Mary, even Claire, they're all believers in free love, they're going to enjoy our visit. You'll certainly be able to teach Mary and Claire a thing or two.\"\n\nHe'd chuckled and I'd taken that chuckle as an invitation to continue our study of that book for we were barely half way through.\n\n\"Free love,\" I'd murmured as my dear Sylvester worked at my dress. \"What is this free love?\"\n\n\"Never mind,\" Sylvester had murmured. \"I'll explain later,\" and I didn't at all as my hands clutched at him in desperate excitement for he had swung me up and around to take his place in the chair he'd been sitting in and my silk sam-foo trousers were somehow around my ankles and then off and dear Sylvester's hands parted my legs, resting the backs of my knees on the arms of the chair and he was gazing raptly at my jade gate.\n\n\"You're so beautiful, my dearest Li-hua,\" he had murmured as my hands ruffled his hair.\n\nHis hands rested on my knees, holding me there while my face blushed bright pink. He smiled, his eyes dropping to look at my sex. I wanted to moan as he looked at me, feeling my own excitement rising quickly as his eyes looked at me there. Watching him kneeling in front of me, his hands resting on my knees, holding my legs apart and I looked back and moved, peeling my silk jacket off so that I was naked for him.\n\nNaked, and I cupped one of my breasts with one hand, stroking my nipple with my thumb while my other hand slid down over my stomach to slowly touch myself, feel my own wet excitement. Lightly brush my clitoris as he watched me, teasing myself, making myself gasp with pleasure. Looking down, I could see myself where I was spread so wide for his eyes, my labia so pink and swollen, wet, glistening under the light.\n\n\"You're beautiful, Li-hua,\" Sylvester breathed, his hands sliding up to rest on my inner thighs, rest on my skin at the juncture of my thighs. I shivered, stifled a moan, but when his thumbs brushed the length of my labia, I had to moan. I couldn't stop myself.\n\n\"Oooohhhhhhh.\" Then \"Ooooooohhhhh\" again as his thumbs gently parted me, exposing my inner lips, my entrance, so wet, so wanting him. There were no words for how I felt in that moment, there was nothing but unadulterated sensation flooding my body, knowing that he was looking at me, seeing me. Knowing that he thought I was beautiful, knowing that he loved me. Knowing, as he lowered his head slowly, that he was going to kiss me there.\n\nA moment of shivering anticipation and suspense and then he did, his lips brushed against me, his tongue slid along me, slid up to lap at my fingertips where I touched myself, where I was still lightly teasing and circling my clitoris. He blew a cool breath across me where I was so hot and wet.\n\n\"Ooohhhhhh, Sylvester.... Sylvester.\" My hand moved, lifted to rest on his head, stroke his hair as his tongue slid wetly over me, as he sucked my clitoris with his lips and stroked it with the tip of his tongue.\n\n\"Aaaahhhhhh....:\" Both hands clutched at his head, holding him. My head fell backwards, banged on the wall of the fitting cubicle. I didn't care, all I could do was stay where I was, limp, helpless, wide open, feeling his mouth on me and he'd learnt to do this so well, better even than Father's Second Wife.\n\n\"Uuuuughhhhhh.\" Feeling one finger ease gently into me, slide up inside me as his tongue lashed me, teased me, taking me higher and higher.\n\n\"Li-hua, my princess, my darling princess.\" His mouth lifted from me, his words vibrating through me as his finger explored inside me, his thumb on my clitoris now, stroking that swollen little nub, circling, touching, making me shudder, unable even to moan, my mouth wide open, working, no sounds coming out.\n\n\"You're mine, Li-hua, you're all mine.\"\n\n\"Yes,\" I managed to gasp, \"yes ... yes I am ... all yours ... I'm all yours Sylvester.\" My darling barbarian. My love.\n\n\"I love you, Li-hua.\" His finger eased out from inside me, his mouth returned to me, his tongue sliding along the inside of my labia, flicking downwards, then up the other side.\n\n\"Nnnngggghhhhhh.\" My hips jerked, my thighs tensing, my hands holding his head, pushing myself against his mouth, feeling his fingertip tracing my vaginal opening as his tongue slid over me, taking me to the brink of my orgasm and holding me there .... Holding me ... holding me so that my breath caught ... I gasped ... my breath caught ... what he was doing to me .... Oh ... ohhhh Sylvester... Sylvester... I was going to die. I was going to die.\n\nHe pushed two fingers inside me.\n\n\"Aaaaagghhhhhhhh.\" I died. I did. My back arched, I cried out, my hips moved on their own, jerking wildly, my body shuddering, my hands clutching his head as his fingers inside me rubbed me somewhere that was perfect ... so perfect as his tongue slid over and around my clitoris and I didn't just think I was going to die. I was dying. I was, his tongue tracing circles of ecstasy around my clitoris, his two fingers pushed inside me stretching me, taking me to the limit. Taking me over.\n\nNow I was coming, my orgasm taking me in thick hot golden waves, bucking against his mouth, on his fingers, on and on and on in an endless haze of sensation that broke through my body, leaving me a mass of molten quivering jelly barely able to breathe. So good, what he'd done to me was so good and I loved him, I loved him so much and I had no way to put that love into words. Instead, my hands stroked his hair, stroked his head slowly as I struggled to breathe again, my body glowing.\n\nHis face lifted, his lips wet with me and his arms encircled me, he lifts me easily and he lays me on the floor before the fire and he was naked, his skin white in the fire light and he found me and entered me in one long thick slide that went on and on and on.\n\n\"Sylvester ... I love you, Sylvester,\" I moaned and I was melting on him.\n\n\"All of it,\" I moaned. \"I want all of it in me.\" He's always slow and gentle, he doesn't want to hurt me, he wants it to be good for me and it is, it's so good and I love him so much. He's moving, easing himself slowly into me and my sex wants him so much. I want him so much, all of him and I'm panting, my breathe sobs from me, my hands clutch at his back and I give myself to him, moaning, sobbing, wide-eyed, surrendering myself to my blue-eyed barbarian as he takes me.\n\n\"I love you, Li-hua,\" he breathed, his cock easing gently in and out and it was so good that I wanted to push myself back onto him and just feel all of him inside me at once but I can't move, I can't, I just want to lie where I am and surrender myself to him while he takes me and I wish he would. I wish he'd take me hard.\n\n\"Sylvester,\" I sob, \"I love you Sylvester.\" All of him is inside me. All of him. He's pushed up against me and it's so good like this with his weight one me and I draw my knees a little further back until they clutch at his ribs, trying to give him more of me. I love him taking me like this, his body on mine, riding me, pushing up against the backs of my thighs and my butt and his hands pinning mine above my head and his cock inside me, sliding, thrusting, moving in and out of me slowly, tenderly.\n\n\"Li-hua?\" he asks, not stopping, and I know he's careful but I don't want sareful, I want hard and fast and eager. I want him to take what he wants from me, I want him to use me and enjoy me and I moan.\n\n\"Yes,\" I gasp, \"yes, it's so good ... don't stop ... don't stop.\" For god's sake don't stop. On our wedding night he stopped, half way through. Stopped and asked me if I was alright and I was almost there and I didn't want words then, I just wanted to be fucked. I don't want words now either. Well, not talking anyhow. Maybe if he told me he was going to fuck me hard. I want that. He could talk all he liked if it was to tell me that.\n\n\"Do it harder,\" I gasp. \"Please, harder.\"\n\n\"Are you sure?\" he says. \"I don't want to hurt you.\" He never does and I wouldn't care if he did. I like being fucked hard. Fucked rough. I think I'd like that too but I don't know because Sylvester never has and I wish he'd at least try it once. I could always ask him to stop if I didn't like it and I know he would, right away. But he's never tried. I'd like him to try.\n\n\"Please,\" I sob, \"do it harder.\" Maybe he will.\n\n\"Ohhhh...\" He does, not as hard as I want but it's good. \"Yes,\" I sob. \"yes, Sylvester... ohhhh ...ohhhh ... ohhhh god, yes ... yes...\" It's good. It's really good and he's moving harder and faster. His cock is thrusting into me now, not gentle slides and I love it I love it I love it.\n\n\"Oooohhhhhhh.\" I squeal, clutch at him and god, that was hard enough to thump me into the floor and I loved it.\n\n\"Are you alright? I'm sorry, Li-hua, was that too hard?\" He stops.\n\n\"Don't stop ... don't stop....\" \n\n\"I love you, Li-hua,\" he says and he grins, he's teasing me and I don't want teasing.\n\n\"Sylvester,\" I moan as he eases up inside me. \"Sylvester.\" I know he loves me and I smile up at him, happy that he's enjoying me the way he wants and little ripples of pleasure wash through me as I lie beneath him and my hands stroke his back, his shoulders, his arms. My feet ride his hips as he moves.\n\n\"Fuck me,\" I moan, arching up beneath Sylvester, hands clutching at his shoulders, feet kicking. \"Yes ...yes ... fuck me ... fuck me, Sylvester ... fuck me hard.\"\n\n\"Uhhhh .... Uhhhh ....uhhhh....\" Sylvester does and I love it and I'd like it harder but I'm not pushing it.\n\n\"Li-hua!\" Sylvester grunts, thrusting. Oh my god, hard! Yes!\n\n\"Uhhhh,\" and he drives me into the carpet. \"Uhhh ... uhhhh ....uhhhh.\" He's grunting, thrusting, he's getting carried away and the room is filled with the wet sounds of his cock moving inside me. The slap of his skin against mine. His grunts, his heavy breathing, my sobs and gasps and moans as he has me.\n\nHis eyes lookinto mine, his thrusting is staccato now, he's losing control completely and I know he's close and my sex clamps down on him. I cross my ankles behind his back. I squeeze him and I arch my back as he humps into me and he's there, he's climaxing and his cum is spurting into me as his cock throbs and spurts and throbs and spurts and I climax on him and afterwards, lying on the floor beneath him, still breathing hard, glowing with that excitement, his cock still inside me but shrinking now, I smiled as my husband looks down at me.\n\n\"Would you like to do it again?\" I breathed, squeezing him inside me. \n\n\"I don't think I could,\" he said.\n\n\"Lie on your back, Sylvester darling,\" I said, guiding him off me and I love that feeling as he slips from inside me and as he does, my head moves downwards towards his softening manhood and I smiled and kissed the tip gently, licking him clean, sucking on him as my hand stroked him and I knew this summer trip by carriage across France to this Geneva would be fascinating and exciting and everything would be new. Speaking of new, there were still some things in my book that we had yet to try and I smiled because he was already reacting to my mouth.\n\n\"Sylvester,\" I said, lifting my head and he saw that smile and his lips curved and my heart beat faster....\n\n\"Li-hua?\" he asked.\n\n\"Look,\" I said, holding his erection upright and he laughed.\n\n<center>* * * </center>\n\nI'd so enjoyed that trip across France, sightseeing, taking our time, a fortnight in Paris, a few days here, a few days there and it was early June by the time we arrived in Geneva and it was indeed beautiful on that sunny day of early summer. The deep blue of Lake Geneva, a blue such as I had never seen before, blue as the heavens which those waters reflected, as I would say to Mary after we at last met. The soaring snow-tipped mountains, the green countryside, the cleanliness of the streets and the inn within which Sylvester had procured rooms for us.\n\n\"George left a message for us, my dear. He says the villa he's taken is at Cologny, it's a village outside Geneva and we're to stay there,\" he said. \"I'll send a messenger with a note tomorrow to expect us in the evening.\"\n\nAnd so he had, but the messenger had returned early in the afternoon with a note from this George, accompanied by his coach, a massive monstrosity that looked more suited to that corpulent Prince of Sylvester's rather than to a friend of my Sylvester's. Fortunately, Weitang had already packed my luggage and Sylvester's manservant, Bolton, had taken care of his so that we were ready to leave within a few hours, leaving our carriage and horses at the inn with the carriageman and groom.\n\n\"Tell me again about this George person, my love?\" I asked, for over the course of our journey, I had been far more interested in the countryside and the sights, thinking to myself that possibly I was the first chinese person to visit these far barbarian lands.\n\n\"George?\" Sylvester said, balancing himself as the boots knelt to help him on with those Hessians, and I did like these boots the barbarian men such as my husband wore. I liked them even more when those glossy black Hessians were all that he wore. \"He's an old friend of mine. We were at Harrow together, played in the first eleven with him, cricket you know. Went down to Cambridge together. Bit of writer and poet don't you know. Rather well known now. Haven't seen him since we were travelling around the Mediterranean together before Pater got me on to old Amherst's mission.\"\n\n\"Poet?\" I asked. This house visit might be more interesting than I had at first thought. I had not met anyone of any real culture since we had left China after our marriage. \"Is this George a master of calligraphy?\" For poetry and calligraphy were of special interest to me.\n\n\"Ah, more in the English style, my dear Li-hua,\" my husband said. \"Haven't read any of his rubbish myself but I understand the ladies all swoon over him. Percy too, and Mary's quite the little author herself.\"\n\nHe smiled down at me fondly. \"I can see your interest, my dear. But be warned, they're sure to quizz you excessively on the orient.\"\n\n\"This sounds marvellous,\" I said, almost jumping up and down.\n\n\"Well, don't be surprised by their behavior, my dear. They're odd birds,\" Sylvester said.\n\n\"No indeed, I promise,\" I said, little knowing quite how surprised I would be.\n\n<center>* * * </center>\n\n\"Are you sure this is where we're supposed to be going, Sylvester?\" My hand clutched at my husband's more than a little nervously as the coach jolted through a series of ruts, hearing the whip crack as the coachman urged the horses on. \n\nEven on these rutted tracks I did so enjoy these European coaches with their springs and cushioned seats. So much more comfortable than the unsprung carriages in which I had been used to being conveyed in, back in China, escorted by my father's guards always. Here, there were no guards to escort us, only Bolton and my beloved husband and still, after so many months of the intimacy of marriage, I would find myself startled that this foreigner with his pale white skin and strangely colored hair and eyes was my husband.\n\n\"Relax, Li-hua.\" My husband gave my hand a reassuring squeeze. \"This is the coachman George sent for us. Of course he knows the way.\"\n\n\"Ohhhhhh.\" Lightning flashed, the darkness became as day so that I glimpsed long tendril-like branches lashing towards our carriage from the trees lining the roadside, if you could in fact call this rutted track up which we lurched a road. At time like this I wished I had never left the civilization and comfort of China for this benighted Europe. Thunder crashed again, suddenly, so that I jumped, reaching for the sword I had placed beside me against my husband's protests.\n\n\"You're not going to need that, my dear,\" Sylvester had said as he'd handed me into the carriage in the hotel courtyard, eying my twin swords and the pair of flintlock pistols in their case that I'd had my maid carry to the carriage. \"We can leave those in the luggage on the roof.\"\n\n\"I'm not going anywhere without them, Sylvester,\" I'd smiled. \"You do remember that little stop in Ceylon?\" Where poor Sylvester had been attacked by a Ceylonese kinduri, a vicious succubus with a maniacal hatred for men who'd waylaid my beloved when he'd stepped into the garden of the residence where we were guests. His intention had been to smoke a cigar, but when a man meets a succubus, his fate is sealed.\n\nFortunate I had been, for, missing my beloved sorely, I had stepped out myself into that garden. Had I not, I would have been a widow within mere weeks of my marriage, for Sylvester had been entranced. That kinduri, in the guise of a Ceylonese maiden, had been leading my beloved into the woods by the hand and in jealousy and rage, I had drawn the short sword from my sash and attacked.\n\nThe right response for the wrong reason, for I had not know that maiden was a kinduri and if she had indeed been what I thought she was, she would have been dead at that first slashing cut. As it was, my attack had half-severed the head and distracted that succubus long enough to release my husband from that enthrallment whilst also revealing the true nature of that evil being as it ran into the night. Horrified, I had paled with shock even as my beloved had fallen to the verdant grass on which we stood. His apologies when he had recovered had brought joy and love to my heart.\n\n\"Perhaps you're right, my dear.\" My beloved remembered also, and he had eased his mild protests and merely watched as dear loyal Weitang carefully placed my swords and pistols within the carriage. \"Better safe than sorry.\"",
        "I said nothing, lightly squeezing my beloved husband's hand, smiling, for strange foreigner though he was, I loved him with a passion that still surprised me as it had surprised my father when he had acquiesced to the foreign ambassador Amherst's importunate request on Sylvester's behalf.\n\n\"Daughter's are worthless,\" the Emperor had said at the time. I had knelt behind my father listening silently when they had discussed the strange request, praying that Sylvester's request would be approved, my face pressed to the floor of the audience room for the Emperor had wished to see this girl whom the foreigner desired. \"She is nothing special and it will cost us nothing to give this girl of yours to the foreigner as a gesture.\"\n\nSo easily had my fate been sealed and my heart had indeed been joyous, barbarian though Sylvester was and the Emperor himself had spoken words to my father that were meant for my ears. \"Your youngest daughter's fate is strange indeed,\" the Emperor had said. \"To travel to the land of these barbarians across the seas. Never will you see your daughter again, but for your sacrifice, your family has the Emperor's blessings.\"\n\nMy father had also a large payment from the Treasury, which went some way to further improving my family's fortunes. The Treasury also provided me with a dowry that had startled my husband for it was a substantial shipment of tea destined for this London from whence Sylvester came and fortunate it was that another ship had been carrying that tea. Also, I had detailed instructions on recording everything I saw and noticed and on how to make arrangements for these communications to be sent at regular intervals to China and I had been religious in recording my observations.\n\n<center>* * * </center>\n\n\"We are here,, Milord.\" The footman opened the door of the carriage, Sylvester clambered out and I followed. \"The Villa Diodati.\"\n\n\"Sylvester, welcome, welcome to the corsair of the orient and his princess bride.\" A flamboyantly disheveled black-haired young man whom I judged to be in his late twenties greeted us at the steps. \"And this blushing maiden is your beautiful bride, rescued no doubt from the lair of some oriental despot. Welcome, fair princess of far Cathay.\"\n\n\"My dear, may I present to you George, Lord Byron,\" my husband said. \"George old chap, allow me to introduce my wife, the former Princess Wong Li-hua, now Lady Li-hua Baskerville, don't you know.\"\n\n\"Welcome, Lady Baskerville, to my humble abode.\" A flash of lightning lit the night, gusts of wind bending the trees as thunder crashed over the mountains. \"But do come inside, the rain will be on us shortly. My man here will look after everything.\"\n\nEnter we did, hastily, for already raindrops were falling and before we had even been shown to the room on the upper floor which was to be ours, the rain was lashing at the windows, wind rattling the glass and I was grateful we had arrived and were not still within that carriage.\n\nA tap at the door.\n\n\"Come,\" Sylvester called.\n\n\"Your luggage, sir, ma'am.\" Bolton entered, Weitang behind him bearing my swords and the pistol case together with my small valise of knives and other assorted weapons. Not that I did not have more on my person, for I never went unarmed.\n\n\"Let me assist you with your bath, mistress,\" Weitang murmured. \"Bolton tells me you will want to change for dinner.\"\n\n<center>* * * </center>\n\n\"George old chap, good of you to invite us,\" Sylvester's voice boomed out through the saloon as we entered, I on my dearest Sylvester's arm. \"Percy! By god it's good to see you again, old chap. Making a real name for yourself these days. You and George both.\"\n\n\"Sylvester.\" George was there, smiling, taking my hand in his, bowing. \"Lady Li-hua. May I present you to my friends. \n\n\"May I present Mary,\" Percy said, taking her hand. \"Claire Clairmont, John Polidori, Auden James and his sister, Cecilia and of course Lord Ruthven.\"\n\n\"Ruthven?\" Sylvester said. \"I don't know you but your younger brother and I were up at Oxford together. Freddie used to say you had a punishing left? Do you still box?\" \n\nRuthven laughed and there was something cold and chilling in that laugh. \"No, no, now I save myself for less brutal sport,\" and his eyes flickered towards Cecilia but perhaps that was my imagination for no-one else saw that glance and gay chatter broke out once more.\n\n<center>* * * </center>\n\nThe evening sparkled with the conversation. Outside the wind howled and the rain drummed against the windows. Inside a warm fire burned in the grate, candles lit the room, wine sparkled in wine-glasses and over dinner I learnt more of our fellow guests.\n\n\"Oh no, we're not married,\" Percy said, quite openly in answer to something I had, in all innocence said. \"Mary and I are believers in free love, we left England to be together for I was already married but my spirit yearned for true love and it was with Mary that I found out what it is to be truly in love and yet to be free, to travel across Europe with my Mary and here we find ourselves, free and uninhibited, as man should be.\"\n\n\"And woman,\" Claire said, and now she was perched on George's lap, one arm around his neck, feeding him grapes.\n\n\"Indeed, and women,\" golden-haired Cecilia giggled and blushed.\n\n\"Not married?\" I whispered to Sylvester later. \"How can this be?\"\n\n\"They eloped together when Mary was sixteen,\" Sylvester whispered back. \"Hell of a scandal, been together ever since. Claire's Mary's half-sister and she went with them. Never asked what the story with her is but the gossip back home, well, I'm not repeating it...\"\n\n<center>* * * </center>\n\n\"Auden?\" Percy said to me a little later that evening and Sylvester had quietly explained to me what this free love was and it sounded remarkably foolish to me. A woman's only asset was her beauty and her body, and without marriage, what assurance did a woman have that a man would care for her. \"Auden was at Oxford with Percy and I, always thought himself a poet, wants to be as famous as Byron of course but he never will be. He's a hack. Knows his writers, well-read, the sort of chap that makes a good critic but with over-inflated ideas of his own abilities if you ask me.\"\n\n\"Why would they invite him?\"\n\n\"Look.\" Sylvester indicated with his eyes, and I did look. Cecilia was perched on Ruthven's lap, his arm around her waist, gazing into his eyes as if mesmerized. \"No idea what Ruthven's doing here though.\"\n\n\"He was passing through Geneva on his way to Germany and I invited him.\" Polidori's voice came from behind us so that I jumped for I had no heard him approach. \"He was good to my older brother Aubrey, took him under his wing when Aubrey fell ill in Rome when he was doing the Grand Tour. Brought him home and married my older sister.\"\n\n\"Where's your sister?\" I asked, curious.\n\n\"Died shortly after the wedding,\" Polidori said. \"Poor old Ruthven was heartbroken. Good to see him getting his spirits up.\"\n\nHe was and from the way Cecilia wriggled on his lap, it was more than his spirits that were up.\n\n<center>* * * </center>\n\nDinner was as entertaining as the conversation in the saloon had been and I did enjoy the food of these French barbarians, for the cook was a Frenchman and the talk turned to food.\n\n\"Sylvester enjoys chinese food,\" I said in response to a question. I believe it was from George. \"It's very different from your european cooking.\" I smiled. \"How I wish Sylvester and I had brought a cook with us from China.\"\n\n\"How the devil did you two meet?\" Percy asked, draining his glass. \"I'm damned curious. Can't be the thing for a chinese Princess to marry an Englishman, handsome as Sylvester is.\" He grinned. \"How on earth did you end up in China, old chap?\"\n\n\"I was with Amherst's mission to Peking, dear fellow,\" my husband said, raising his own wine glass to his lips. \"Cousin, don't you know. Pater called in a few favors, got me onto the Mission staff and a jolly good time I had, what. I say, damn good wine, this. Can't say I expected something as excellent as this in the wilds of these godforsaken Swiss mountains.\" He smiled, reached out and lifted my hand, delicately kissed my fingers.\n\n\"Met my dear Li-hua when we first arrived. Love at first sight, don't you know. Her father was the chinese official negotiating with us and dear Li-hua was with him.\"\n\n\"I was curious about you barbarians,\" I said, kissing my husband's fingers. \"It was love at first sight. My father was a little shocked.\"\n\n\"Shocked? He was horrified,\" my Sylvester chuckled. \"But in the end, love had its way.\"\n\n\"As it always does,\" Ruthven said, kissing Cecilia's fingers so that her eyes met mine and she blushed pinkly and Ruthven's eyes drank in that pink flushing of her pale cheeks as if he had glimpsed a pool of clear fresh water in a drought.\n\n\"But what on earth are you doing here, George?\" Sylvester asked. \"Received your letter when I returned home from China and that was a surprise, I tell you. Wouldn't have dreamt of coming to a place like this myself.\"\n\n\"Ahhh, Sylvester,\" George said. \"I breathe freely in the neighbourhood of this lake. The ground upon which we here tread has been subdued from the earliest ages. Here is the bust of Rousseau. Here is a house with an inscription denoting that the Genevan philosopher first drew breath under its roof. There, a little out of Geneva is Ferney, the residence of Voltaire, where that sage received, like the hermits of old, the visits of pilgrims, not only from his own nation, but from the farthest boundaries of Europe. Pilgrims such as our guest here, a Princess of far Cathay come to these far shores to drink in the beauty and wisdom of the ages.\"\n\nHe noticed not my raised eyebrow, for the wisdom of the sages of these barbaric tribes was as nothing beside the words of the Great Sage, Master K\u01d2ng, or K\u01d2ng F\u016bz\u01d0 as I was more used to thinking of him. This Voltaire, what was he but some pissant peasant when placed beside the likes of even the Four Sages themselves, Yan Hui, Zeng Shen, Kong Ji of Master Meng? But this I did not say for George was lost in his reverie, sipping his laudanum laced wine and the others drank with him, even those two girls, even my Sylvester and I took his hand in mine as he listened.\n\nGeorge's voice was almost hypnotic and his words now held everyone at that table. Percy, Mary, Polidori, Sylvester, Claire, Auden, Cecilia. All buth Ruthven and myself and Ruthven's eyes caught mine and he smiled as George continued and I liked not that smile beneath those hooded eyes but by then Ruthven's eyes were on golden-haired Cecilia.\n\n\"You will find in Geneva, a short walk from your inn, the house of that astonishing woman, Madame de Stael: perhaps the first of her sex who has really proved an equality with the nobler sex, man. We have before had women who have written interesting novels and poems. Women in which their tact at observing drawing-room characters has availed them; but never since the days of Heloise have those faculties which are peculiar to man been developed as the possible inheritance of woman. Though even here, as in the case of Heloise, our sex have not been backward in alleging the existence of an Abeilard in the person of Monsieur Schlegel as the inspirer of her works.\"\n\n\"Not so, Gorge,\" Mary intervened. \"What of our english women authors, amongst them my own mother, Mary Wollstonecraft....\"\n\nBut George paid no attention to her interruption. \"... upon the other side of the lake, Gibbon, Bonnivard, Bradshaw and others mark, as it were, the stages for our progress; whilst upon this side there this house in which we now sit, built by Diodati, the friend of Milton, which contains within its walls we poets and writers who, on being swept by nature's impulses shall vibrate as before and we will be placed by posterity in the first rank of our English Poets. You, Percy, and I.\" He smiled, one hand caressing Mary's shoulder. \"And you too, my dearest Mary.\"\n\n\"Yes, yes,\" Polidori spoke up, draining his glass, holding it out as George took the wine bottle and refilled it whilst Percy took the small jog of laudanum and poured a generous amount into the wine.\n\n\"I sit here in awe, for it was here in this very room, my dear Princess of Cathay, that Byron here did write much of Childe Harold and I tread these hallowed floors with the same feelings of awe and respect as I did those of Shakespeare's dwelling at Stratford. I sit here in this chair knowing I am in the presence of genius. I stand on the balcony outside the saloon of this house and I imagine that it must have been that balcony from which Lord Byron contemplated the storm so magnificently described in the Third Canto and I fancy him standing looking out over the lake, standing like a scathed pine, whilst all around is sunk to repose...\"\n\nAnd so that first evening passed in conversation and all centered around Byron, for even Percy looked up to him and Claire, Auden, Polidori, they revered him. Ruthen looked on sardonically but his conversation was all politeness, while Cecilia seemed enthralled by Ruthven and I saw not what she saw in him.\n\nAt last that night drew to an end, Sylvester and I found our bedchamber and sported in our bed and from the sounds, Byron was sporting in his bedchamber and I had glimpsed Claire slipping from her room into his.\n\n\"Enjoying themselves,\" Sylvester had chuckled sleepily as a crescendo of cries announced Claire climaxing.\n\n\"I'm surprised at her and Mary,\" I murmured. \"It seems not the accepted thing in your country.\"\n\n\"Or in yours, my dear,\" Sylvester said, a little drily. \"Shall we sleep now or would you...?\"\n\n\"Let's sleep,\" I murmured. \"I want you eager and invigorated in the morning.\"\n\n<center>* * * </center>\n\nDays passed, and strange indeed was our host and as strange were his friends. George. Poet and author, and I struggled through his \"Childe Harold's Pilgrimage,\" but it made little sense to me. Or to Sylvester.\n\n\"Overrated nonsense,\" he grumbled, listening to me reading aloud. \"The man's mad.\"\n\n\"Not as mad as Percy,\" I said, for Percy was at times a raving lunatic. \n\n\"Too much laudanum in his wine,\" Sylvester said that night as Percy backed up against a wall in the hallway, raving maniacally about seeing demon's eyes where Mary's nipples should be and it was with interest that, many, fifteen odd years later, I would read words written by Mary about that time and place and her recollections differed only a little from mine, although there was no mention by name of Sylvester or I, or of Ruthven.\n\n\"It proved a wet, ungenial summer\", Mary Shelley remembered in 1831, \"and incessant rain often confined us for days to the house. Sitting around a log fire in Byron's villa, the company amused themselves with German ghost stories, which prompted Byron to propose that \"each of us write a ghost story. Unable to think of a story, I became anxious: During one mid-June evening, the discussions turned to the nature of the principle of life. \"Perhaps a corpse would be re-animated\", I noted, \"galvanism had given token of such things\". \n\nI do remember talking of galvinism, for such experiments had also been conducted by chinese medical practitioners in China long ago and I remember how we discussed those. How we talked about the strange powers of electricity and how it might be harnessed. It was after midnight before we retired on that night, and unable to sleep, Mary became possessed by her imagination (and the laudanum she had drunk with her wine) as she beheld the grim terrors of her \"waking dream\", her ghost story, the story that would become known as Frankenstein and I was there that night and the next morning, where Mary related that story to us over breakfast.\n\n\"Now that,\" Sylvester had said approvingly. \"That is a damn fine tale, Mary.\"\n\n\"Start writing,\" Percy had said. And she had.\n\nBut that was not the purpose of this tale, for others have written much of Mary Shelley and her husband, Percy and that summer with Lord Byron on Lake Geneva and of the writing of Frankenstein. No, my purpose is to tell you of that other event, one that you will find no mention of in the histories or in the letters and memoirs of Mary Shelley. The closest you will come is by reading John Polidori's novel, \"The Vampyre.\"\n\nYes. \"The Vampyre.\"\n\nBefore Brad Stoker, before Anne Rice, before Laurell K. Hamilton, before Dracula, before LeStat de Lioncourt, before Jean-Claude, there was another. There was Ruthven and that first vampire novel. \"The Vampyre.\" Polidori wrote it as fiction but alas, I was there when Ruthven met his end, and his end was at my hands and Ruthven was indeed a vampyre. Fortunate indeed is history that I was there on that night, because without me, all those writers that were there in the Villa Diodati on that evening would have died a grim death and in the end, it was only Byron that knew the truth.\n\nByron and I, and I will tell you now what I have told no other.\n\n<center>* * * </center>\n\nThat last evening at the Villa Diodati, the wine had flowed freely. The laudanum had, as always, flowed just as freely and, as always, I did not partake in any quantity, although Sylvester did and after we left this place, I would make sure he consumed it not, for laudanum is as addictive as the opium from which it is derived and I had seen first hand the evils of opium addiction.\n\nAs always on that evening, Ruthven had had eyes only for beautiful pale-skinned, golden-haired Cecilia and she had side close beside him, her hand in his and his eyes were filled with desire as he looked at her. Shelley was intoxicated, Claire not far behind and perched on his lap. Auden was reeling. Polidori and Sylvester were outside on the balcony, deep in conversation with Mary and I, I listened to Byron's voice as he read to me from his notes, and it was only long afterwards that I realized I had been privileged indeed on that night, for he had read to me from his early draft of Don Juan.\n\nHis words flowed through my mind, his eyes held me, bright, hypnotic and I sipped that laudanum-laced wine as he spoke and one verse held me.\n\n<center>\"Wedded she some years, and to a man\n\nOf fifty, and such husbands are in plenty;\n\nAnd yet, I think, instead of such a ONE\n\n'Twere better to have TWO of five and twenty...\"</center>\n\n\"Two,\" I remember giggling. \"One's enough for me,\" and I glanced out the open doors, to see my Sylvester with his arm around Mary's waist and their heads together and Polidori was no longer with them, he was seated in an armchair on the patio, his head back, snoring and I remembered that discussion Sylvester and I had has last night about the free love that was practiced in this house.\n\n\"Sylvester, dearest,\" I had said, after we had made love. \"In China, a man may have many wives and concubines and satisfy himself also with flower girls. It is not a wife's place to be jealous of such things, for a wife has her place in her husband's life and a wife is secure in that knowledge. Should you wish to enjoy this free love that is on offer, it is not your wife's place to object.\"\n\n\"Oh?\" Sylvester had said, rather blankly.\n\n\"If you want to bed one of them, bed then my dearest,\" I had said.\n\n\"But you...\"\n\n\"I am your wife, my dearest,\" I had said. \"This free love is not for me but you may enjoy yourself with your wife's blessings.\" I'd giggled. \"You can tell me if they were as good as me afterwards.\"\n\n\"I would never...\" he had said, but now he was and with my blessings, but now I was unaccountably jealous.\n\n\"Well...\" I said, and now I was tempted just a little.\n\n\"Are you sure?\" Byron said, standing, taking my hand in his and as if mesmerized, I stood with him and Sylvester was kissing Mary, her arms around his neck and of a sudden, I felt an urge to experiment with this free love of which Byron and Percy and Mary and Claire spoke so often. Not only did they speak, they practiced, for already Percy and Claire had adjourned, hand in hand with their intentions obvious.",
        "I glanced again at Sylvester and Mary and, my head spinning a little, I let Byron lead me from the saloon and up the stairs but it was outside Byron's bedchamber door that I balked.\n\n\"No,\" I whispered, tearing myself free. \"I cannot,\" and I had almost run to my room and Byron, he had not chased me, but he had been watching me as I closed my bedchamber door behind me and sank onto our bed. Sylvester's bed and my bed. Our bed, and I was shuddering until at last I stood and undressed myself, slipping into my silk bedclothes and closing my eyes but sleep would not come, however much I desired.\n\n\"Noooooo,\" a soft wail, almost inaudible, reached my ears in the darkness. \"Nooooooo.\"\n\nI was on my feet, reaching for my swords without thought, flinging open my bedchamber door and a shrill but wordless cry floated up the stairs and something was wrong, for I had heard many such cries in this house but all were either \"yes\" or wordless cries of excitement and pleasure and this was not.\n\n\"What is it?\" Byron's voice came from behind me and he was naked and my heart beat the faster.\n\n\"Downstairs,\" I whispered, and I lead, swords in either hand for in the darkness, who knows what comes searching for prey and those cries had been cries of terror and fear.\n\n\"What's this?\" Byron asked, far too loudly, and I looked.\n\nPolidori lay sprawled in one of the armchairs on the patio overlooking the lake, unconscious, his shirt unbuttoned, a look of terrified rapture on his face, blood trickling from two punctures at his neck. My silver swastika flared a little at my neck and I halted in my steps, heart jolting and almost, I screamed.\n\n\"Jiangshi!\" I hissed, and I was no longer puzzled, I was terrified, my sword in my hand, my heart pounding.\n\n\"What?\" Byron said from behind me as distant screams came from the dining room.\n\n\"Vampyre,\" I translated. \"Blood suckers.\"\n\n\"Be damned,\" Byron said\n\n\"Please... noooooo.\" ANother scream, louder, nearer.\n\n\"The dining room,\" Byron whispered, and he whispered now, his voice suddenly afraid and he was not the only one. \"Give me one of your swords.\"\n\nI did, the short sword and he took it and followed.\n\nAuden, handsome, golden-haired Auden was sprawled naked across the dining table, on his back, his throat ripped out, horror written large across that Adonis-like face and beside him, bent face down over that same table, was poor Cecilia, and she was screaming as Ruthven mounted her from behind, thrusting hard as his fangs drew blood from her neck and her screams were of unbounded ecstasy now.\n\nOver her, Ruthven was bent forward, naked, his bloody fangs extended as he lifted his head and I felt his hunger, I felt his need to feed and my body responded to that desire as my free hand clutched frantically at my holy swastika, blessed by the Abbot of the Shaolin Temple himself. My silver swastika flared bright as Ruthven turned his face to me and that way he lifted himself up from Cecilia, that look of soulless hunger in his eyes, there was little that was human about him.\n\n\"Ruthven!\" Byron exclaimed from behind me. \"What the devil are you at, man?\"\n\n\"It's not a man,\" I said. \"It's jiangshi, it's a vampyre. Don't let it look you in the eyes,\" and I held my flaring silver swastika up high before my own eyes and that monstrous being was forced to avert his mesmerizing gaze.\n\n\"By Jove,\" Byron exclaimed as Ruthven drew back and he would have been on me except Cecilia cried out as he left her and her arms and legs entangled him and her face expressed that desperate need she felt for him. That desperate need that the victim of a vampyre feels, once bitten, and there was madness in her eyes as she offered him her throat whilst her hand sought his erect member and I shuddered, for it could have been I in Ruthven's clutches rather than poor Cecilia.\n\n\"Come to meeeeeee,\" Ruthven hissed, turning, and as he turned me lifted poor Cecilia, her arms vined around his neck, her long slender legs embraced his waist and she moaned as he entered her. \"Come to meeeeee, give me your blood.\"\n\nThose hissing words tugged at my heart, tugged at my sex, twisted my insides so that my knees weakened, my hand sank a little and Byron staggered past me, dropping my sword and I, I stood helpless, unmoving.\n\n\"Lie down, George,\" Ruthven hissed, and Byron obeyed, kneeling, lying on his back on the floor, shuddering, his eyes wild.\n\n\"Ride him, now,\" Ruthven hissed and Cecilia obeyed, standing as Ruthven withdrew from her, turning, kneeling over Byron and she had been a virgin, there was blood on her inner thighs and she straddled Byron, took him in her hand, eased herself down on him so that he entered her and he filled her and she rode him slowly as she had been commanded.\n\n\"Your blood is mine after I have drained this one dry,\" Ruthven's voice rasped and it crossed my mind that it must be difficult to talk with those long fangs extended and his leer sent shivers down my spine. \"I have you now, every one of you and I will take you all and then the others, one by one.\"\n\nHe smiled, and that smile was evil and malevolence personified and my mind screamed in terror and Ruthven's smile grew larger as he felt my fear and my horror.\n\nByron lay there as Cecilia rode him, her hips moving, her face rapt until Ruthven knelt behind her and began to enter her back passage as Byron possessed her sex and now she cried out but she was in Ruthven's power and the look on her face as he possessed her was one of willing surrender.\n\n\"Her,\" Ruthven hissed malevolently. \"First her and then I will feed on you, George.\" He laughed.\n\nA vampyres' laugh is a thing of terror and Byron felt that terror even as he possessed golden-haired Cecilia in tandem with Ruthven, both of them moving within her and as Ruthven sank his fangs into the pulsing blue vein at Cecilia's neck, her expression changed to one of rapture and eyes wide, she shuddered with the pleasure of the vampyre's draining of her blood.\n\nBeneath her, Byron shuddered as Ruthven drank his fill and the life faded from Cecilia as he drained her. Drained her until she shuddered and tied and now it was Ruthven that shuddered as he reached his culmination and in that moment, he lost his focus and that inexorable grip on my mind relented for a second and that second was enough for I still held my sword and I was shaolin trained.\n\nIn that second, I thrust with all my strength and will, my kiiaaiii shattering the night as the point of my sword shattered that blackened heart, piercing it through and piercing Cecilia's heart at one and the same time and she was dead but now she would stay dead and not rise as the undead did if left alone.\n\nRuthven's scream hissed from his gaping mouth, the whistle of steam from the pot over heated and his head turned, his fangs sought me but my sword held him and the dagger plucked from my braided hair pierced his eye and drove into his brain and his immortal body found death at last.\n\nByron looked up at me, standing above them all and my sword transfixed Ruthven's black heart and driven through him, transfixed also poor golden-haired Cecilia and the point had nicked Byron's chest.\n\n\"Why not me too?\" he shuddered, wild-eyed, panting hard and he had not reached his fulfillment..\n\n\"The vampyre bit you not,\" I said, and I too was breathing for the vampyre's mind had held me and its thoughts had filled me and still that desire, that lust, it filled my mind to overflowing.\n\nRuthven came down like a wolf on the fold,\n\nAnd his teeth were gleaming with red and gold;\n\nAnd the sheen of his fangs is like death in the night,\n\nWith the blood on his chin, it's quite a sight....\n\n\"Something else is quite a sight,\" I gasped, kicking Ruthven's body sideways and Cecilia went with him and Byron was priapically erect and released, he sits up, he takes my hands and he draws me down onto the floor and I'm shuddering with excitement as he moves over me, his knees between my legs. I find his rigid hardness with my hand, guide him eagerly to me as I draw my knees back, as I expose and surrender myself to him.\n\nI shuddered, moaning as he mounted me, as he possessed me and he's not gentle. He takes me hard and fast. His weight is on me, I draw my knees further back, I'm open to his thrusting possession, he thrusts himself inside me, cradled by my thighs as he pins my hands to the floor above my head and fills me again and again and again while I moan with excitement for he is the first man other than Sylvester to take me and I am filled with desire.\n\nHis movements are fast and hard and I revel in his taking of me, my heels bouncing against his hips as he moves inside me. All my being is focused on the sensations he creates within me as his cock thrusts in and out of me, sheathing himself in me hard, withdrawing, sliding back in again, heedless of my enjoyment, slaking his own desire. My channel clasps him, he fills me, he fucks me and my entire body ripples with the pleasure I feel.\n\n\"Ohhhhhhh\" I moan, looking up at his face, his chest crushing down on my tender breasts, his body riding mine hard and I want to be so good for him. I want to give him such pleasure, I want to give him enjoyment, I want his cock to hilt itself in me knowing I am there for him to pleasure himself in and I know it s the vampyre's desires that fill my mind but it makes no difference because that is what I feel.\n\nHis naked body moves on mine. I'm beneath him, I've surrendered myself to him, opened myself wide to him and his cock thrusts into me at the juncture of my thighs where I offer myself to him for his taking, for his pleasure and he pounds his cock into me, the walls of my channel surrendering to him, clasping his thickness as he fills me inside.\n\n\"Ohhhhh.\" I groan as he presses himself to the hilt inside me. All of him and I'm shuddering with the pleasure of it as I feel him there, as I clasp all of him within me. He's so far up inside me and I every inch of him is big and hard and I'm stretched around him where he enters me and it's an exquisite sensation, clasping him there where he joins my body, where I'm forced open for him to enter me, to penetrate inside me, to sheathe himself in me and he does, he sheathes himself in me with relentless power.\n\n\"Uuuhhhhh.\" His cock is all the way inside me again, he's moving hard, exquisite friction as he pounds himself in and out of me and he's pounding me against the floor, hard and fast and I can't help making noises. Moans. Gasps. Cries. Sobs. My hands clutch at his where he pins them to the floor and I revel in my submission. My surrender. I'm his and I want to be his, I enjoy my surrender, I enjoy my position on my back, my legs spread wide, drawn back, so open to him. So helpless. His. Completely his.\n\nI'd speak, but his thrusting cock drives the words out of my mind and all I have is my need to surrender myself, my desire to be taken, to be used, to satisfy him with my body until he reaches his culmination. He does. He thrusts hard, his cock pounds into me, his shoulder and back muscles tense and strain under my hands where I'm clutching at him. My eyes stare blindly up at his face as my back arches, my feet kick helplessly towards the ceiling as his cock rams into me and rams into me and rams into me. His pelvis slaps noisily up against me, the head of his cock pushes up against my cervix, hurting me, but now even the pain I feel is pleasure.\n\n\"Uuhhh ... uuhhh ... uhhhh ...\" I hear myself groan with each of this thrusting drives, helpless groans, forced from me by the power of his movements. My body welcomes his passion, welcomes his power, revels in his desire for me. I would urge him on, urge him to greater intensity, urge him to use me harder if I could but I can't, all I can do is utter those wordless groans of surrender as he uses my body for his pleasure.\n\nHis cock seems to swell inside me, he's so hard. Rigid. A solid bar of steel that pierces me, impales me, drives into me deeply again and again and again, faster, harder. He has one hand under my shoulders, holding me in place, his other hand works its way down under me, his fingers splay wide under my butt, lifting me a little. Impossibly, his cock seems to drive deeper within me.\n\n\"Ooaagghhh ... uuughhhh .... uughhhh...\" My choked out groans become more intense, if that's possible. His cock sheaths itself within me again and again, his hips move, he drives himself up inside me, his cockhead frictioning against the clasping walls of my channel with every slide. He's close. I know he's close and my own pleasure is growing now, closer and closer with every pounding thrust. My hands clutch at him, my fingers dig into his skin, my feet bounce against his hips as he has me.\n\nHis weight, his strength, he's so big on me, above me, his thrusts sink his cock to the hilt inside me, drive me down onto the floor and he's not being gentle with me. He's taking me. It's so good.\n\n\"Uughhh.\" I'm beyond words, I groan as he thrusts into me, hard. His body slaps up against mine, my hands clutch at his back, my head arches back, my feet kick upwards towards the ceiling. There's no thought, no words, there's nothing in my mind beyond sensation and emotion and the sheer joy of being taken by him.\n\n\"Uugghhh .... Uggghhh ... huuuuhhhh....\" He drives the breath from me with every movement. I'm sheened with sweat, his body slides wetly on mine, my breasts are crushed beneath his chest, deliciously harsh friction as he strains against me.\n\nHe's holding me tight, one arm under my shoulders, half supporting his weight, his other hand roams over my hip, my thigh, touching me everywhere and he's fucking me the way he wants to fuck me. He's enjoying me, enjoying fucking me, I look into his eyes, I see his face and there's nothing there but his desire for me, his need, his want and I know that for him, right now, it's all about me.\n\nMy body under his, taut and hot against him, my thighs cradling him, my cunt slickly clasping his cock as he slides himself in and out of me and he's using me, fucking me, reveling in what his cock is experiencing as he has me and I want to be everything to him. Everything in the world and I cross my ankles behind his back and i squeeze him tight, I clasp him in me as he moves.\n\nI wail wordlessly, arching my back beneath him, tightening myself on him, \"do me do me do me do it to me do it in me ...\" and he does.\n\nHis cock throbs, pulses, pumps. He groans, throwing his head back, body arching, driving into me as his cum spurts out once more, deep inside me, my cunt welcoming his fluid eruption, milking him as she fills me with his semen and if anything there's more than there was last night. He cums and cums and cums and it's like a volcano is erupting inside me, flooding me, filling me and I want it. I want it all, every drop of his cum and he gives it to me.\n\nI lie beneath him, cradling his weight on me, our bodies slippery with our intermingled sweat, my hands continue stroking his back and his shoulders. His head lowers, it rests beside me, his breath hot against my ear. His cock is still inside me and even softening, even after this is over, it feels so good within me. I want to keep him here, with me. His body on mine feels so good, so wonderful and I'm glowing in the aftermath of my climax as I do after Sylvester has brought me this pleasure and perhaps there is more to this free love than I had thought.\n\n\"I'm taking you to my bed,\" he says, and he does, but only after I have beheaded all three bodies and thrown the heads in the fire and it is morning and the sun is rising before I leave his bed.\n\n<center>* * * </center>\n\n\"I think we should cut back on the laudanum a little,\" Sylvester said as he walked into the room, and he had slept not in our bed for it was from another room he had emerged and I had seen him for I had returned to our room myself only seconds before and had glimpsed him, and behind him, Mary. \n\n\"I think we should leave today,\" I yawned, thankful that my dear Weitang had filled the tub with water and I was already seated in it as he had entered the room. My clothes were in Byron's room but I trusted my dear Weitang to discreetly ensure they were returned and seated in that tub, in evidence of my night's indiscretions with Byron were now washed away.\n\n\"Yes,\" he agreed, yawning. \"Let's. The pace here is a little fast for me.\"\n\n\"And for me, Sylvester, dearest,\" I said. \"Let us leave these poets to their writing and perhaps visit Vienna. I have a desire to see this Empire of theirs.\"\n\n\"Your wish is my command, my dearest,\" Sylvester said. \"We shall make our farewells this very day.\"\n\n<center>* * * </center>\n\n\"You have interesting friends, Sylvester,\" I murmured, looking back at the Villa Diodati as it receded behind us. Never did I wish to remember that name. Never did I wish to remember Ruthven, for the sight of those fangs extended and dripping blood would permeate my dreams. As would that last vision of poor Auden and poor lovely Cecilia, dead beside me as Byron rutted with me in the aftermath of that frenzied desire that had possessed us both and there was no need to mention that to dear Sylvester.\n\nAfter all, I'd seen him with Mary. \n\nAuden, Cecilia. Ruthven. Dead. All dead. Auden and Cecilia's love and dreams vanished as if they never had been. I had no idea what a vampyre dreamed of though, and no desire to find out. I wondered how Byron would explain their deaths. I did find myself wondering what Byron would do with all the bodies but he was an enterprising sort. Between he and Mary, I was sure they'd find a way. Take them out in his boat weighted with rocks and toss them over the side in deep water and then deny they'd ever been their more than likely.\n\nPoor, ambitious Auden. His dreams of glorious literature, his poetic aspirations, all doomed but at least he was not damned, for I had taken his head and removed his heart, burning both and scattering the ashes into the deep blue waters of Lake Geneva intermingled with those of his beloved Cecilia. Dead they might be at the vampyre's hand, but they would not return as undead.\n\nThey would not be forever damned as Ruthven was and I was glad of that, for I had rather liked Cecilia. Would that she had lived, for I would have been eager to explore her sapphic inclinations. Perhaps I might find another such pale-skinned golden-haired young beauty to tempt and tease while my dear Sylvester worked himself into a frenzy of desire.\n\n\"Rather more interesting than I knew, my dearest Li-hua,\" my husband said, his hand taking mine as we jounced along that rutted track towards Geneva and the inn that once more awaited us.\n\n\"Sylvester,\" I said, rather pensively. \"Perhaps we might return to your home after visiting this Vienna. I find this travel a little too exciting.\" I thought about that. \"Your country estate, Baskerville Manor? There are no vampyres rumored there? Nothing untowards?\"\n\n\"Not at all, my dear,\" Sylvester said. \"Why do you ask about vampyres?\" \n\n\"Just a passing thought,\" I said. \"What is there to do?\"\n\n\"I can teach you to ride to the hounds,\" Sylvester said eagerly.\n\n\"I'm sure I'd enjoy that,\" I replied, smiling as I rested my head against my husband's shoulder and now I whispered into his ear. \"And perhaps you might like to take me in that way.\"\n\nHis puzzled look drew a giggle from me. \"Woof woof,\" I murmured, only to find that jolt from that next rut sending me six inches above the seat. \n\n\"Sylvester,\" I gasped as he seized me in mid-air and whirled me around, raising my loose gown to my waist in one easy movement and there were certain advantages to these european fashions, I had to admit. \"What are you doing?\"\n\n\"Making love to my wife,\" he growled, and I needed no further encouragement to unfasten his riding breeches and what a good thing we were both wearing travelling clothes.",
        "\"I am surprised you still have any appetite,\" I murmured, stroking that which surprised me with its readiness with one hand only, for with all the jolting of the carriage I needed one hand to balance myself. \"You seemed remarkably busy last night, my love. Did you enjoy her?\"\n\n\"Not nearly as much as I enjoy you, my sweet,\" Sylvester growled, and his eagerness as I raised myself a little on him was palpable. \"I must admit, I find this concept of free love espoused by my friends to be a little shocking. I am gratified that you do not share the beliefs of Mary and Claire and Cecilia.\"\n\n\"Of course not, my darling,\" I moaned. \"I am no flower girl, to be shared with any man.\" I smiled as I lifted myself a little, massaging him inside me gently. \"A wife's duty is to ensure her husband's pleasure and enjoyment, Sylvester, and in China a man may have many wives and concubines, but a woman should have only one husband and I am happy you enjoyed yourself last night.\" \n\nAnd the less said about what I myself did last night while my dear Sylvester sported with Mary, the better.\n\n\"Ohhhhhh,\" and now I impaled myself on him.\n\n\"Ohhhhhh,\" he groaned, and his hands pulled me firmly downwards until I sheathed him completely.\n\n\"Do you think you can last until Geneva?\" I murmured, both hands on his shoulders, balancing myself with my knees on the seat either side of him as the coach bounced in another of those ruts and I in turn moved most delightfully on him so that is was difficult not to squeal.\n\n\"That's almost two hours,\" Sylvester groaned. \"No.... no, I can't last that long,\" and his hands gripped my hips firmly, holding me in place and he smiled. \"But I'll do my damnedest, my dearest.\"\n\n\"Ohhhhhhh,\" I moaned, burying my face in Sylvester's shoulder as I moved on my dear Sylvester's rigid jade stalk involuntarily. \"Ohhhhhh do try, Sylvester... do try your damnedest.\" \n\nAnd no, there was definitely no need to mention to Sylvester what had happened with his friend, Lord Byron. Or for that matter with Ruthven and I smiled as Sylvester thrust hard, his hands pulling me gloriously downwards onto him as a jolt thrust him upwards and I did admit to myself that I did not regret what had happened, for it gave me something to compare Sylvester to, and Sylvester was gloriously wonderfully good at what he was doing.\n\n\"Yes,\" I moaned ecstatically, trying so hard not to move myself on him but it was so hard not to shudder with excitement when he used one finger to tease my clitoris like that and however long Sylvester lasted, I knew I would not last long. \"Ohhhh yes, Sylvester, yes...yesssssss.\"\n\nNot long at all and I forgot all about the Villa Diodati and Lord Byron and Shelley and Mary and Claire and Cecilia and poor Auden whose unwritten works would never now be known as I climaxed in a sudden rushing wave of gold with Sylvester's eyes smiling into mine.\n\n<center>* * * The End * * *</center>\n\nAnd of course that Last Note from Chloe: I'm sure most of you will recognize some of the characters. George, Lord Byron. Percy Bysshe Shelley. His (at the time of this story) 18 year old lover, Mary Wollstonecraft Godwin (they later married after Shelley's first wife died), Mary's half-sister, Claire Clairmont, who formed a menage with Shelley and Mary and who also had a short affair with Lord Byron. Some of you might be aware of who John Polidori was - Byron's doctor and author of the \"The Vampyre\", the seminal vampire novel which heavily influenced Brad Stoker's \"Dracula.\" Mary Wollstonecraft Shelley of course was the author of \"Frankenstein.\"\n\nIn 1814, when she was nearly 17, Mary began a romance with one of her father's political followers, Percy Bysshe Shelley, who was already married. On 26 June 1814, Shelley and Godwin declared their love for one another as Shelley announced he could not hide his \"ardent passion\", leading her in a \"sublime and rapturous moment\" to say she felt the same way; on either that day or the next, Mary lost her virginity to Shelley, which tradition claims happened in the cemetery of St Pancras churchyard. On 28 July 1814, the couple eloped and secretly left for France, taking Mary's stepsister, Claire Clairmont, with them. Shelley and Clairmont were certainly lovers, and all three espoused free love (Mary's mother, Mary Wollstonecraft, was an early feminist and advocate of free love at the end of the 18th century). \n\nIn May 1816, Mary and Percy Shelley travelled to Geneva with Claire Clairmont to spend the summer with the poet Lord Byron, whose recent affair with Claire had left her pregnant.The party arrived at Geneva on 14 May 1816, where Mary called herself \"Mrs Shelley\". Byron joined them on 25 May, with his young physician, John William Polidori and rented the Villa Diodati, close to Lake Geneva at the village of Cologny; Percy Shelley rented a smaller building called Maison Chapuis on the waterfront nearby. They spent their time writing, boating on the lake, and talking late into the night. Byron also resumed his affair with Claire (\"...a man's a man, and if a girl of eighteen comes prancing to you at all hours, there is but one way...\" he would later write of that time). Polidori fell in love with Mary and one night when Byron was reading aloud a poem, Shelley jumped up and ran shrieking from the room, having hallucinated under the influence of laudanum that Mary had sprouted demonic eyes in place of nipples.\n\n\"It proved a wet, ungenial summer\", Mary Shelley remembered in 1831, \"and incessant rain often confined us for days to the house\". Sitting around a log fire at Byron's villa, the company amused themselves with German ghost stories, which prompted Byron to propose that they \"each write a ghost story\". Unable to think of a story, young Mary Godwin became anxious: During one mid-June evening, the discussions turned to the nature of the principle of life. \"Perhaps a corpse would be re-animated\", Mary noted, \"galvanism had given token of such things\". It was after midnight before they retired, and unable to sleep, she became possessed by her imagination as she beheld the grim terrors of her \"waking dream\", her ghost story. So as you can see, a certain amount of reality woven into this.\n\nAnyhow, \"Midnight at the Villa Diodati\" is me having a little fun with history. Into this seminal event in literature, where Mary Shelley wrote \"Frankenstein\" and John Polidori wrote \"The Vampyre\", I have introduced Sylvester and Li-hua and hopefully a little Gothic Horror and some hot and entertaining sex. Hope you've all enjoyed.... Chloe"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "beyond the wall of sleep",
        "chinese",
        "horror",
        "shaolin",
        "vampire"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/midnight-at-the-villa-diodati"
}