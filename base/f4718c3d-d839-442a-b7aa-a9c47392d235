{
    "title": "Mine...Yours Pt. 06",
    "pages": [
        "Author's Note: I especially want to thank End of Story, he is overworked and underpaid to do the job for me he does. Especially since I don't pay him anything. Any spelling mistakes are mine, and if those mistakes are found in dialogue...I probably did it on purpose. So there! Please, read, and enjoy. Please leave comments as well. I have grown to love reading them! I do ask that you do not include \"spoilers\" in the comments. Let new readers enjoy the surprises.\n\nChapter 18: Dreaming\n\nI knew it was a dream...I knew it beyond the shadow of a doubt. How did I know? Simple, I was in a jail cell. I knew that I would die before I was ever put in a jail cell ever again. Therefore, I knew this had to be a dream. To be at the tender mercies of those who hate you, to eat, sleep and wash only by the tolerance of enemies? Never going back to that again. As someone labeled a sex offender, being in jail is a constant battle of both the body and mind. You are alone, with every hand raised against you. Either people are indifferent since they are just doing their own time, or they try to find ways to fuck with you. I mean that both literally and figuratively. As an SO you can fully expect that when other inmates finish using the mop bucket, to get the dirty water tossed under your door to flood your cell. I'm pretty sure at least one of them took a piss in it before they did it.\n\nAs an SO, if you are ever put in jail, I highly recommend you get the vegan meal. Plead that it is against your religion, or whatever to get it. It is made separately from the others since no animals can be harmed in the making of it, at least that is how I understand it. Most of the inmates know which meals are going to sex offenders and will either spit, shit or piss in your food. The vegan ones have a better chance of being left alone. As a fresh-faced kid going in, I was scared. Never been to jail before, still confused as hell as to why I was there. Last I heard, my girlfriend/fianc\u00e9 was accusing me of rape. I found that out when I was being processed and still in handcuffs so, not much I could do. Oh sure...much later I was accused of a lesser charge. But for the time being...I was a rapist. \n\nWhile my mind was reeling like a hyperactive hamster from these accusations I was thrust into a whole different world. One of pain as I was strip-searched having to bend over and cough with a cold finger shoved up my asshole. One of pressure, as I was held against a wall by a Nazi jail crew and given a hard welcome. I was told to be good or I would be given another, \"self-inflicted-injury.\" Found out that SO's commonly \"injure themselves\", so it was their obligation to be watching me. \n\nAs I said, I would never go back to jail alive. That's how I knew this was a dream.\n\nI glanced around my cell, concrete slab with a thin mattress with even thinner pillow covered in cracked and worn vinyl-like material. Two thread bare sheets and one nasty green blanket, was probably donated from a third hand store. Based on the scratchiness of the wool and the amount of holes in it I'd say the blanket was a reject from the ones sent to soldiers in World War One. I did a quick check to make sure all the items in my room were off the floor, another check to make sure I had a roll of toilet paper that wasn't wet or crinkled. If it was nasty like, it meant that someone wetted it down before it came to me so that it would be useless. Or maybe they pissed on it. A lot of the \"jokes\" inmates play on SO's seem to involve urine for some reason.\n\nOnce I saw my floor was clear I stood up from where I had been sleeping a moment ago and did the old trick that many inmates who suffered from claustrophobia do. I stretched out my arms to touch the walls and carefully moved to the center of the room so I couldn't feel them. Then closed my eyes and allowed my thoughts to take me away. The dim lights that are always on making it impossible to sleep without a head box faded to the background. The noises of the other inmates slowly drained from my ears and thoughts. The claustrophobia welling in my chest began to release its hold. Soon I would be out in the sun, walking barefoot in my family's field talking with my dad. Or maybe I would remember washing dishes with my mom as a boy. I would soon force my mind into a meditative peace and comfort that I could and would maintain for hours at a time.\n\nI heard the chunk of the door to my cell disengage a second before cold dirty water flooded under the door!\n\nI snarled as the cold hit my feet and sure enough, I caught sight of a man in uniform pass his badge to a partner before he charged in right at me! My bare foot slammed into the middle of his chest and sent him staggering back to his buddies behind him. \n\nI remembered this. Day three, after being processed in general population I had then been moved to a more secure pod in jail. This is the welcoming committee. I knew the dream would end the same way, even though my mind was sharper now, and I was willing to fight, unlike the first time. The guard was moved to the side and two more came in. I ducked the first swing and got tackled by the second guard. I dug my first two fingers in his eyes, after hooking the fingertips I pulled hard! His scream was in that high-pitched range that men try to avoid since it shows no self-restraint at all. The other tried to kick me while I was down, so stupid. I could see the kick coming and moved my head and shoulders so it just missed, then grabbed the kicking leg as it came back. A quick roll and I should have been able to drop him to the ground while his friend tried to see again. \n\nNo luck. \n\nSmall cell remember? He caught his balance on the wall, and kicked me in the face with his other boot. It stunned me for long enough for all three to grab my dazed body and haul me to my feet. That's when the fourth man came in. I don't remember his name, or his face...I will never forget the sound of his voice. He sounded so happy to me, as he vented his anger on my chest, ribs, hips, even bending me over to start beating my ass with that damn asp of his. An asp is a collapsible baton if you want to know. Applicable name too. He beat me over and over until I stopped resisting, then he beat me more to see if I had any fight left. \n\nI know that at some point now I am supposed to wake up, usually that's what happens. I wake up in twisted soaked sheets, my body shaking and taking deep sobbing breaths. Then I go take either a cool shower, or just soak my head. Then I stretch for a while and try to get some sleep.\n\nUsually. Not this time.\n\nI kept getting battered, and they weren't stopping. Finally they dropped me on the ground and start stomping on me! This isn't right, guards can't leave much of a mark or it doesn't look like a self-inflicted injury? What's going on...? Oh God! They're going to kill me! They are going to beat me to death! I'm going to die! I'm going to die in this shitty smelling cell soaked in urine laced mop water; to two mouth breathing inbred guards who probably fuck their grandmothers since they can't find any pussy of their own? \n\n\"NO!\" I didn't say it. Someone else did. \n\nI caught the next stomping foot and pulled hard. The pain of getting my other hand stomped on since it wasn't protected in my fetal position? I ignored it. That pain is the cost of doing business when your life is on the line. You tend to forget about that kind of thing when you want to survive. The guard fell on his back, and I hit him as hard as I could with a knife hand in the center of his throat. I heard a popping sound and he began to gag and twitch on the floor!\n\n\"YES!\" Said a soft voice in my ear.\n\nThe two other guards, still standing, stared at their buddy on the ground in shock. It was only for half of a moment, but it was enough time for me to strike hard and fast after getting quickly to my feet. I struck with my fingertips, palm up, and right after contact with the throat I would curve my fingers a little as if beckoning someone. They both collapsed, one gagging, one choking with a rattle to his breathing. That unknown face of the fourth guard, the last one standing, suddenly became clear to me. He smiled, and his face looked full of pride. Then bandages of what appeared to be white linen wrapped around his entire frame, even down to his hands! Just before the lower half of his face was covered I heard him speak.\n\n\"You are PATHETIC!\"\n\nThen my Door slammed shut just inches in front of my face. The wheel spun pushing the security bolts in their slots. The chain, perfect and unbroken appeared in the wheel housing. Everything was firm and tight. I was still breathing hard, and took several steps back from the Door. While walking away, I saw...words? No...pictures? I guess symbols would be the best way to describe them, etched in the floor of my mind. They were large, at least two paces across, maybe half a pace high. I couldn't make heads or tails of them. Looked almost cuneiform. Or Runic...like what the old people used way back in the day. Just a whole bunch of cut lines in the cement. Decided to open up my Sight and take a look.\n\nIt was absolutely beautiful! Just three words, written as if guiding me back towards my Door. You can tell a lot about a person by how they write. I figured it was bullshit too, like reading a horoscope or something in that vein. My hand writing looks like a chicken with a limp stepped in a puddle of ink and cleaned its feet off with some paper. Then I had a professional look at my handwriting to do an analysis. Scarily accurate, back to what I was seeing though. Laid out like one of those Japanese Haiku poem thingies, I followed the words and remembered them. They were what Mother had spoken to me, which seemed to resonate in my chest.\n\nFirst word, \"Become.\" \n\nI stepped over it, almost felt sacrilegious to step on it. I thought maybe I'd feel something cool walking over it, like I would have gained something by crossing a beautifully presented word that was carved in the bedrock of my mind's eye. I felt disappointed, I didn't feel any different; truthfully I was relieved. I've had enough with mucking about in my head for a while. \n\nCame to the second word, \"Learn.\" Same thing stepped over it and felt zilch, zero, nada! \n\nThird, \"Grow.\" \n\nJust the same thing, rinse and repeat. I felt like I was missing something, probably wasn't. Just my head playing tricks on me again. Funny that I would think of my head playing tricks on me...when I am currently inside of it!\n\nI was right back at my Door. I remembered my other aspects telling me that someone was still inside. I remembered their grubby faces, like they had been covered in soot or something. I also remembered the blue glow that was shining in there. Suddenly my slow turtle brain made the connection. That power that I seem to have, it covered my hand in that blue light when I picked up Gwen's cards! It was the same color as the light behind the door! I began to reach for the chain on the Door. Whatever questions I about my supposed power lay behind it. Suddenly bandages shot out between the seams and cracks of the barrier and wrapped around me, holding me tight.\n\n\"I am so DISAPPOINTED in you!\" a voice crumbled. Yep, crumbled. Best way I know how to describe it. It sounded like a dry loaf of bread being crumbled into bird food. There was only one slot in the door, where before there had been two. It opened and I could see pale yellow eyes peering out at me. \n\nIn my current state, of immobility, I did the only thing I could think of.\n\n\"Good morning!\" I said cheerily. The eyes narrowed.\n\n\"Fuck you and your morning!\" It spat at me. I could see the pinprick pupils widen, and then narrow as it focused on me more intently.\n\nI did a mental shrug and then said, \"I guess you are not exactly the personable side of my personality?\"\n\nIt chuckled, though I heard no trace of humor in its voice. \n\n\"Good, you show humor even when you are vulnerable. You still have some spirit in you after all. I was beginning to worry!\" It said. \n\nSlowly the bandages let me go, and I walked closer to the slot.\n\n\"So who are you?\" I asked. The eyes widened and I could see that they were all shot through with red, like the damaged eye in those Visine eye drops commercials. It turned its head so it could look at me sidelong through the opening. I could see the long strips of bandages wound all the way around its entire head, covering the ears and everything. Only leaving the mouth and eyes open to my view. \n\n\"You don't remember me?\" it asked quietly. It shook its head and muttered so softly I could barely hear it. \"Pitiful, and sad. Locked away for so long you don't even recognize me, or remember my name. Such a waste, for no one knows me better than you.\" The longing in its voice pulled at me, it seemed to sense this and bared flat teeth at me in a terrible parody of a grin.\n\n\"So, you want me out now?\" Now it seemed amused. \n\n\"Don't know, I don't know what you are.\"\n\n\"Whose fault is that?\"\n\n\"Mine obviously, or ours...depending on your view I guess.\" I said while glancing away. Looking back its eyes were right back at the hole staring directly at me.\n\n\"I was hurt and you did not help me. I was wounded and you locked me away. I was hungry and thirsty and you fed me nothing but pain. I tried to talk to you, to let you know how I was doing, but each time you thought of me you just pushed me away and pressed me in here harder! Now, you tell me! Who the FUCK am I?\" It screamed. I had started stepping back from the slot and nearly fell over at the force of its voice. The blue light seeped out of the gaps, and the bandages flowed with it. I firmed up my own emotions and walked back to face it again.\n\n\"I don't know. I'm sorry, but I really don't.\" I said simply. It snorted, sounding like silk tearing.\n\n\"Then I have nothing more to say to you.\" It turned and began to move towards the blue light and I called out. \"Hey! I need to know something...\" \n\nIt kept walking but that voice called out to me. \"Even if I explained anything to you...you wouldn't understand it because you still don't even know what you need to ask.\" Then it stopped, and seemed to consider. I blinked my eyelids for only a moment and when they opened it was back just inches from me. I wanted to step back again, but didn't. I did almost, kinda sorta, pee my pants though!\n\nIt grinned. \"You stood your ground. Good.\"\n\n\"I tell you this only so that you can survive. For if you die, I am lost.\" It appeared to ponder for moment, picking its words carefully. \n\n\"All hands are against you. There is nowhere to run, nowhere to hide, and you are alone. What do you do?\" it said finally. Not what I was expecting, I was hoping for words of wisdom or at least something informational. This had been a question I had thought on many a time, the answer was automatic and easy.\n\n\"Simple, you always have a place to run or hide. In a fight you are always on the move, so your options are always changing.\"\n\n\"WRONG!\" \n\nIts voice thundered with the will of a god and the wrappings tied me up again, but now they were beginning to slowly squeeze the air out of me! \n\n\"Foolish! Weak! Wretched!\" It growled out. The Door was shaking and a tone was sounding somewhere. I could hear voices as well as feel the caress of blue light over my body.\n\n\"When you have nowhere to run, and no place to hide and every hand is against you, you KILL! You go FORWARD! You ATTACK! No retreat! You must break them, bleed them, burn them and blind them! You destroy! No quarter was given you so none shall be given in turn! THAT is why you are WEAK!\"\n\nI was trying to breathe. I mean...this is my head...I make the rules, don't I?\n\n\"This is why I don't let you have this Power. When you locked me away you locked it up as well! You are not worthy of this birthright. Take your weak gifts and leave this place! I will help you, but only so that I may live. Don't expect more than that!\"\n\nI couldn't breathe! My heart was trembling, and the pain was indescribable! I was going to...going...\n\nJust before my eyes closed, I saw the last word that Mother spoke to me emblazoned on the top of the Door. In fiery white letters, plain as day it read, \n\n\"Surpass.\"\n\nChapter 19: Awakening.\n\n\"Gaaah!\" \n\nI gasped. Throwing my arms wide and thrashing out of my wound up sheets. I tried to stand only to stumble and land on my back on the floor of my room. I could feel heat coming off of me in waves, and sweat trickling down my face, through my short hair and down my arms. I closed my eyes and then slowly opened them, focusing on the ceiling as I tried to control my breathing. I felt a drop of something thicker than water at the same time as I heard a feminine sniff. I saw a dark shape that looked like a...cocoon? Chrysalis? Something like that. It was hanging right above me. My muddled brain woke up and I saw Lucretia hanging upside down from the center ridge of my ceiling. She was directly above me, wings wrapped tight around her torso and I saw her wipe her nose on her arm. It left a black streak behind. I looked down at the center of my chest and saw a big dollop of black there too. What the...?\"\n\n\"Lucretia, are you alright?\" I asked, my voice coming out almost as a wheeze. I coughed and cleared my throat. She didn't answer right away. \"Lucretia...?\" Her voice came out small.\n\n\"You wouldn't wake up.\" She sniffed again and swiped her forearm over her face again. \"You were talking in your sleep, and then you started...\" her voice trailed off. I wanted to press her, but she sounded pretty shaken.\n\n\"Did I hit you, while I was asleep?\" In the dark of my room I just barely saw her nod. I started to rise, but then fell down again. My legs felt like they were made out of stacked rubber bouncy balls! \n\n\"Okay, I'm going to lay here for a bit.\" I muttered. I looked up at my friend again. \"How bad did I hit you?\"\n\n\"Broke my nose... actually, my nose, chin and cheek. Lost a couple of teeth, should be alright soon.\" \n\nI scrubbed my hands over my face. I had done that? \n\n\"Bad dreams Greg?\" she asked. I looked up at her again and saw her licking the black blood off of her arm while she watched me, carefully. I nodded up at her. \n\n\"Astar gets them sometimes. Rulli says that's because Astar spends all of her time reading so her head is full of things to give her bad dreams.\" \n\nI chuckled, \"Sounds like something a sister would say.\" I could see Lucretia grin a little. I raised my arms up.\n\n\"Come here, please.\" I asked.\n\nGracefully, Lucretia let go of the ceiling with her feet doing a forward tuck and roll. Her wings opened and slowed her fall before she landed on all fours right next to me. She looked a little anxious as she checked my eyes, for what I don't know. She seemed to relax then bent her head to lick the spot of blood off my chest. It tickled, and made me laugh quietly as I folded my arms around her to hold her close.\n\n\"I'm sorry I hit you.\" I murmured into her pointed ear.\n\n\"You didn't mean it.\"\n\n\"True. Still I am sorry I hurt you. Even if it was an accident it was my responsibility.\"\n\n\"But you didn't do it on purpose?\"\n\nI pulled my head back to look at her, \"Guess I am going to have to explain it then. Remember the rat?\"\n\n\"The kitchen thief?\"\n\n\"Yes, that one. The sneaky kitchen rat thief!\"\n\n\"The one who now lives under the shed in the... backyard?\" I nodded.\n\n\"Now if I was walking around in the backyard doing some work, and Mrs. Rat...\"\n\n\"She is not married...\"\n\n\"Excuse me?\" I said, jolted from what I was going to say by the interruption.\n\n\"Ms. Rat...she is not married. You called your mom Mrs. Brooks because she is married.\"\n\n\"Oh...I see, well...Ms. Rat if she was walking around in the yard, and let's say I sneezed and didn't look where I was going because I was distracted and stepped on her.\"",
        "\"Then she would die.\" Lucretia said with a small nod. I shook my head.\n\n\"You know, you are kind of a grim roommate to have. Things are always death, dying and such. We need to get you started on Disney movies or something!\" \n\n\"What's a Disney movie?\" Lucretia asked.\n\n\"Something for another time. We are talking about accidently stepping on Mrs., I mean Ms. Rat.\" \n\nI took a deep breath causing Lucretia to rise and fall on my chest as my lungs expanded then deflated. It made her giggle.\n\nGosh she sure was cute! In a razor-toothsome kind of way.\n\n\"So Ms. Rat is hurt...whose fault is it? Who takes responsibility?\" I continued. Lucretia seemed to think it over and then...\n\n\"No one's at fault.\" I nodded and then waited expectantly. She saw I was waiting for something else, then shrugged. \n\n\"You are right, no one's at fault...what about responsibility?\" \n\n\"I don't understand.\"\n\n\"An accident means no one's at fault but...\" I reached out and lightly rubbed my thumb around the base of her horns and she leaned into my hand with equal pressure. \"...since it was my foot that harmed her, I bear the responsibility of helping her.\"\n\n\"What would you have to do, Master?\" Lucretia asked sleepily. I almost got mad at her for using that title then saw her face. My rubbing of her head seemed to be lulling her to sleep! I just grinned and kept rubbing letting her comment slide.\n\n\"I would first tell her I was sorry and then do my best to help heal her. I would take care of her responsibilities that she could no longer do...within reason of course. Like feeding her family if she had any, that sort of thing.\"\n\n\"I see...I...ooh.\" Lucretia said, right before she passed out. I could hear her soft breathing as she finally succumbed to my soft touches. I gave her a minute or two to make sure she was soundly asleep, then moved her over to my bed and gently laid my blanket over her. I can't imagine what that must have been like for her, waking up to me swinging around and all. I still felt really bad for that. I quietly went down stairs, and took a quick birdbath rinse in the kitchen sink. I saw the sun wasn't up yet, but there was no way I could sleep right now. \n\nMy legs were feeling better, still a little wobbly but not useless. I went out to my back porch, took out a can of wintergreen chew and put in a dip, spitting over the side into the grass. I sat down on the steps leading to the backyard and laid back on the wood deck of the porch, looking up at the sky. Then I allowed myself to think about it. The dream, or whatever the hell that was. Some people would call it a \"vision\" or some such. I choose to call it a dream. Whatever it was, my other aspects had been trapped with it down there for a while, and that mysterious power I had was in there as well. \n\n\"What was that thing?\" I said aloud. \n\nI heard a light squeak by my head.\n\nI almost...almost slapped my hand down hard in the direction of the noise! As it was I turned to see Mrs....I mean, uh...Ms. Rat looking at me. \n\nNow rats aren't all that big, I've seen them as pets before. To have one easily within arms reach, and looking right at my face? Kind of, not scary, but definitely disconcerting.\n\n\"Are you...?\" I heard amongst a soft squeak. I blinked, and the rat shuffled a little closer. Its beady eyes were watching me closely, as if it were unsure of something. Its whiskers were twitching and finally it stood up on its hind legs looking down at my face. I just realized...this is a big rat! It was comparable in size to my forearm!\n\n\"Are you well?\" I heard this time with no squeak. It was a soft voice more suited for a nanny. Not the twenty-year old babysitter, but the older nanny type. The one that takes your kids to school, cooks a balanced nutritional meal, washes them and puts them to bed with a short story like Aesop's fables. \n\n\"I...uh...probably not.\" I responded slowly.\n\nMs. Rat put her little paw on my forehead.\n\n\"You don't...\" The last part of what she said dissipated into squeaks and she sounded just like a rat again. I pulled my head away and sat up. She almost recoiled from me, but stood her ground. \n\n\"Let's get something straight here...\" I began, only to be cut off by a flurry of squeaks and chirps and then she rolled over on her back! Good going Greg, you are such a bad ass, you are an absolute terror to every rodent you meet! Without thinking too much about it I picked up Ms. Rat and cradled her in my arms. I gently stroked her fur and I felt the tremors die away. Every now and again I would hear a soft squeak and then I felt her nestle her nose into the crook of my elbow. I continued to stroke her and began to talk.\n\n\"Funny, Ms. Rat, I could have sworn I heard you speak. Not sure if you can understand what I am saying, but...yeah. I have had a tough couple of days and am not really at my best. Actually, in a way...I kind of feel like I am at my best! This past week, my life has been shaken and pulled in so many different directions I don't know which way to turn. I got a werewolf, a vampire and a witch as neighbors. I got a succubus as a roommate, and now I have a talking rat living in my back yard. My life, well...my head is kinda full right now.\"\n\nI looked down at the rodent, and I could see her eyes were closed, and I was feeling kind of peaceful in a way, holding this animal. Weird that she relaxed like that, I know I couldn't have done it if I was being held by something that was so much bigger than me. I felt a little tenderness in my belly for the critter. That's when I heard it, the soft squeaks changed.\n\n\"It's indecent! I shouldn't be doing this, but it's been so long since someone held me, and petted me! He smells so nice and he's so warm. I'll just pretend I am his, for a little while...\" That nice voice began to fade and soon she was still.\n\nI must be going crazy! I heard it! Distinct as day! This rat just TALKED! I sighed and gently rubbed her fur at the base of her neck.\n\n\"No can do, I heard you. We don't have to talk about it now, but we will later.\" I said softly. One of her ears twitched, and the rat turned its head to peer up at me with one button eye. \"You don't have to say anything now...but if this is a trick someone's playing on me heads are going to roll, understood?\" The rat squeaked once, and turned its head into the crook of my arm. It was shortly after that I fell asleep.\n\nI awoke to a snarl and a rat cowering in my arms! Lucretia was in full battle mode towering over us both!\n\n\"Thief! Now you try to steal MY master?\" she barked. One long fingered hand reached for the rat who was squeaking frantically, and I crossed my arms over the animal so Lucretia couldn't reach it without hurting me.\n\n\"Hang on! Hold it!\" I yelled, turning my body from side to side as Lucretia tried to grab my arms.\n\n\"Greg...that creature is trying to lure you into becoming its Master!\" She declared, finally getting a grip on Ms. Rat's tail and trying to pull her out of my arms. I quickly snatched the poor rat in my left hand and gripped Lucretia's wrist with my right.\n\nI finally had some breathing room and said, \"Nothing happened! Ms. Rat came up to me to see how I was doing, I thought I heard her speak; actually I did hear her speak. Then I picked her up and held her because she looked, I don't know...Just stop and let's talk this out okay?\"\n\nWhy did I feel like my girlfriend caught me hugging another woman she didn't like?\n\nLucretia held still. Then stared hard at the rat, and slowly let go of her tail. I moved Ms. Rat back to the crook of my arm and I stood there, waiting on Lucretia to make the next move. Strangely, Ms. Rat was the one who started talking.\n\n\"I didn't mean it, Lady. I saw him lying on his porch and became concerned. People don't normally do that. I came up and asked him if he was well, and then tried to check his temperature. Then he sat up, and I don't think he understood me...\" If a rat could blush, Ms. Rat sure looked like she wanted to. Lucretia gave her no slack. My succubus bent closer to Ms. Rat and said in a low voice, \"And then...?\"\n\nWith a nervous twitch of her whiskers Ms. Rat said quaveringly, \"He picked me up, and began to stroke...my fur. He was petting me!\" She scrubbed her little paws over her face. \"It has been years since anyone held me. I didn't think there would be any harm to just imagine that I had a wizard again. I know he is yours, but I just wanted...\"\n\n\"Excuse me...\" I interrupted then used both hands to hold the rat up to my face. \"Did you just say you wished to have a wizard again?\"\n\n\"Yes milord.\" Came the reply.\n\n\"Call me milord again, and I will feed you to a python! My name is Gregory, Greg to my friends. You can call me Gregory, because now I feel like an idiot for trusting a talking rat.\" I paused. \n\nWell, there is a sentence I never thought I would say in my life.\n\n\"Yes, Gregory!\" Ms. Rat squeaked in fright. There I go again, scaring poor defenseless creatures!\n\n\"So what's this about a wizard? And years? Rats only live like two or three years.\" I asked.\n\n\"I once was a wizard's familiar. I was bound to him. With all the magic we cast together I came to have a long life, with long lives comes knowledge.\" Ms. Rat responded.\n\nI thought about it, made sense in a fashion. I know from reading fantasy novels and such it...but this isn't fantasy. I am holding in my hands a talking rat! I glanced at Lucretia who seemed rather contemplative. Well, I had a make out session with one figment of myth last night, so a talking rat shouldn't be too hard to swallow. Which made me think of the python reference I made earlier. I'm a jerk!\n\n\"I apologize for threatening you with, well...feeding you to a python. That was rude of me and I shouldn't have said that. Forgive me?\" Lucretia stared at me in surprise, so did Ms. Rat. Though I am not very good at telling anything from a rat's facial expressions.\n\n\"Nothing to forgive mil...Gregory.\" Ms. Rat said faintly.\n\n\"So where is your wizard?\" I asked. I did a quick check around the yard with my Sight, but didn't see anyone in robes and a pointy hat waiting to ambush me.\n\n\"He cast me out. He wanted a new familiar, one that was more \"socially acceptable\" so he sent me away after he successfully gained a new companion.\" Her ears drooped; it was like watching one of those 3D animated movies. She was so cute doing that! \"For fifteen years I served him faithfully, then that cat came into the house and I was gone!\" Ms. Rat said fiercely. I blinked.\n\n\"He got a cat?\" I asked incredulously.\n\n\"Yes, an evil tiger-striped cat! Threatened to have me eaten if I didn't leave! I was out and in the street and didn't know where to go. I was smarter than the other rats but they were all horrid! I had no one to turn to and until I was in your house and your friend grabbed me I didn't have a place to live!\"\n\nI then found out that a rat could cry and it was heart breaking!\n\n\"Then I saw you had a succubus, I thought you must have magic, maybe I could talk to you. Then this morning you held me, and it felt so good to be touched again, I missed it so! I know it was wrong, but I just wanted to dream a little! To believe I was wanted again!\"\n\nOh stars and little fishes...I was going to cry! I looked over at Lucretia whose eyes were on Ms. Rat, she was doing her blank face routine, but I could feel it in her scar where her fists were clenched. For some reason this story struck a nerve with her. A really big, deep nerve! \n\n\"What is your name?\" I asked softly while smoothing back Ms. Rat's whiskers.\n\n\"Nancy.\" Nancy replied. I tried not to laugh. Nancy did not seem like a rat name at all! Then again, what would be a good name for a talking rat? All the usual ones didn't seem to work. Crackers? Peanut? An old high school buddy had a rat named Wilfred, but he was a weird dude. Nancy is as good a name as any other. Actually the more I looked at her, the more like a Nancy she looked.\n\nI glanced back at Lucretia and her fingers were laced together, and she had put on her human form. Probably because we were in our backyard, and it was close to the middle of the day, hard to explain her appearance with Halloween come and gone with Thanksgiving on the way. She stared hard at Nancy who turned in my arms to return Lucretia's stare, but her eyes were much softer.\n\n\"Thank you for being civil...\" Nancy said, \"...I would never come between a familiar and their Master.\" Lucretia nodded, but her lips were still in a firm line. I thought of the lesson of responsibility I tried to explain to Lucretia up in my room. I had an idea!\n\n\"Well. Lucretia, Nancy. Let's get something to eat.\" With that, I turned and walked towards the backdoor of the house, Nancy still in my arms.\n\n\"Greg!\" Lucretia shouted. I looked over my shoulder. \n\n\"Yes?\"\n\n\"Nancy stays outside in her shed!\"\n\n\"Did you nearly kill her?\"\n\n\"Well...I wanted to...\" She replied.\n\n\"You had a misunderstanding with her?\" I asked pointedly.\n\n\"I...yes. But she wasn't hurt and she's fine!\"\n\n\"True, but you almost killed her and scared her half to death.\" \n\nI began to subtly move my arms to make Nancy shake. She seemed to get what I was doing and started trembling on her own.\n\n\"Look at her...\" I chided Lucretia. \"She is still shaking, least you can do is give her a good meal?\"\n\nMy succubus started to open her mouth with an angry retort, and stopped. She appeared to mull it over and with a grimace nodded her head in assent. \n\n\"Fine, we will feed the thief, then she goes back out to the shed!\"\n\nI heard Lucretia muttering to herself in another language as she stalked past me into the house. Nancy chittered happily then looked up into my face. \"You are a good teacher Gregory!\" I shrugged, almost making the rat lose balance. \n\n\"I try.\"\n\nChapter 20: Royalty\n\nLucretia was making toasted cheese on Dave's Killer Bread. Yes that is the name of the brand of bread; it's real, it's in Oregon, and it is tasty. I grabbed a towel and set it on one side of the table for Nancy to sit on and started cooking up a quick skillet for myself to share with Lucretia. I watched her from the corner of my eye, she had her arms crossed and was staring at the toaster. It was like she was purposefully avoiding looking at anyone else. \n\nI cut up some potatoes and ham, cracked a couple eggs into the mess and set the skillet on low heat. Lucretia still hadn't said anything or tried to get close to me. \n\nI freely admit I am clueless about women, but I know enough to tell when they are upset. I stepped closer so I was standing next to my succubus, and gently bumped my arm against hers. She ignored me...but I saw her ears twitch. Ah HA! If she was in her human form, her lower lip might even be sticking out in a pout. I looked over my shoulder at the table and saw Nancy fastidiously cleaning her whiskers and face. \n\nI guess rat's care about being well groomed as much as the next...uh...person?\n\n\"Thank you.\" I said quietly to Lucretia. She was still staring at the toaster oven.\n\n\"For what Greg?\" She answered without looking at me.\n\nI put my hand on her shoulder and leaned in a little closer.\n\n\"For taking responsibility for your actions. Sure, you had a misunderstanding and nearly hurt someone. You are trying to make up for it, and now you might have made a new friend. I am proud of you.\" I said that last sentence almost as an afterthought, but my gut was telling me it was important I let her know that. In all honesty, I was proud of her. I knew she was vicious, possessive and calculating. Yet she was trying to follow my guidance. The Lucretia at the Halloween party would NEVER have thought about, let alone make a piece of cheese toast for a talking rat.\n\nIts statements like that one, that let me know how strange my life is really becoming!\n\nIt must have been the right thing to say to her because her arm went around my waist and she leaned on my side, her horns rubbing against my shoulder. \"I want you to be proud of me, Master.\"\n\n\"Greg.\" I reminded her. She was starting to slip, needed to stop that before it became too much of a habit. She sighed and then looked up into my eyes, a faint smile on her lips.\n\n\"Know what I just realized Greg?\"\n\n\"What's that?\"\n\n\"Doesn't matter what I call you. Greg...Master...any of it. You are what you are to me, what I call you doesn't change that.\" Then she rubbed her horns on my shoulder again. The toaster finished and she served the food on a small plate for Nancy at the table. I watched her and thought about what she said. I knew there was something important there for me to come to grips with, but it eluded me for the time being. Oh well. If it's important, it will come to me.\n\nI stirred the skillet a couple of times, then sat down to eat, putting half of the mix on Lucretia's plate for her to enjoy. Though, enjoy, might be too strong of a word. I am an okay cook, more of a survivalist cook to tell the truth. I can sear meat, and burn potatoes and such, flavor I am not all that good at. I can bake like a superhero though! My cookies are proof of that. Lucretia used both her knife and fork this time, and with a few gestures and watching me, she mimicked my movements. Though I know deep down inside she wanted to use her hands. Maybe I will take her sometime to that one Indian restaurant where you sit on cushions and use your hands to eat food? Have to remember that.\n\n\"Nancy?\"\n\n\"Yes?\" said the rat, looking up from her meal. I never knew rats could eat so much. That piece of cheese toast looked like it was half as big as she was.\n\n\"I can't have you living in my shed anymore. I'm sorry.\"\n\nI watched Nancy slowly stop chewing, then make a deep gulp to swallow. I went over and got a small bowl, which I filled with milk from the fridge. I set it down so she could have something to drink. She lapped up some and did a quick dry wash of her face with her paws. She sighed softly. It was strange to hear an animal sound so human.\n\n\"I thank you for your generosity to me. May I ask what is to become of me?\" she said formally.\n\n\"Obviously, a thinking and reasoning being such as yourself cannot live in a shed. So we must find a home for you.\"\n\nLucretia did not appear to be very happy with the direction this conversation was going, I felt her foot grab mine, and it almost made me jump out of my seat! I hadn't spent too much time thinking about it before, but she has bird-like feet! It was the oddest sensation to feel her toes wrap around my ankle, with the cold hardness of her claws almost pricking my skin. I reached over to pat her hand in, I hoped, a reassuring way. \n\nNancy saw this exchange and must have come to her own conclusions.\n\n\"You have been generous with me, Greg. If you are to offer me a place in your home I cannot accept it. You have a familiar, though the connection is very odd between you two. I know what it is like to get pushed out when someone new comes along and I don't want to have that on my conscience.\" This last part was said with a little nod of her head to Lucretia.\n\n\"I wasn't thinking of you staying here.\" I told Nancy. \"I wanted to find you a home...how do you feel about witches?\"\n\nShe shook her head. \"I was a wizard's familiar, so I am too different. It is like asking an apple to become an orange. The process...well, I don't know how familiar you are with the ritual to acquire a familiar but it is different based on the Master. A mage, and a wizard would bind a familiar along different paths.\" \n\nI scratched my head, \"You know, you are the third person to call me a mage. How can you tell? Do you smell it, do I need a different type of aftershave or something to cover it up?\"\n\nNancy giggled. Man it was weird to see a rat giggle! \"No Greg, I can just feel it, like a vibration in the ground. If I had to guess I would say you're telekinetic.\" \n\nI shook my head and rubbed the back of my neck. \"I am not seeing any signs of that.\" Nancy looked puzzled and scampered across the table to get a closer look at me. I felt Lucretia's foot tighten on my ankle and it made me hiss a bit in discomfort. I glared at her and she meaningfully looked at the rat. I gave her my best, \"Trust me\" look and she slowly let go of my ankle.",
        "Nancy ignored all this and stood on her hind legs to regard me solemnly. \"You have had no odd experiences? Things moving that shouldn't have moved, suddenly catching something you dropped when you should have missed it. Or having strength to lift or move something that was impo....\" She stopped talking as my gaze sharpened and pinned her where she stood. \n\n\"Go on, finish that last sentence...\" I encouraged her. She coughed, delicately into a paw and then repeated herself. \"Having strength to lift or move something that was impossible to move?\"\n\n\"That's the one.\" I said quietly. I looked over at Lucretia who nodded her head.\n\n\"Greg, you threw me fast, and hard when we first met, a human should not have been able to do that. Just last night when you struck me in your sleep, the damage you did should not have been possible unless you hit me with a war club.\" I was wondering what a war club was while she gently ran her fingers over her cheek and nose.\n\n\"Still hurt?\" I asked. I hated that I hurt her. She shook her head.\n\n\"No, just don't have the energy reserves to heal it instantly.\"\n\n\"Wait, energy reserves?\" I asked.\n\n\"Yes, what did you think we did with the energy we take from humans?\" she asked in surprise.\n\nI hadn't really thought about it. I thought it was like food to them. You know, like you go into Jamba Juice and order a smoothie. I would go and get the orange juice with protein powder, banana, yogurt and so forth. A succubus would order a 25 year-old male with red hair and blue eyes. We both drink and are satisfied. Apparently it was more than just food.\n\n\"So what do you do with it then? The, energy I mean.\" I asked. She looked at me like I was asking which was up as compared to down.\n\n\"I use it to power my magic, aid in healing, cross to other Planes, that sort of thing...as you like to say.\"\n\n\"I thought only lords and such could cross the Veil into other Planes...?\" I began, but my voice trailed off as I saw her smile. It was positively predatory!\n\n\"That is correct.\"\n\nOkay...uhmmm...something seemed wrong with this somehow.\n\n\"Then why did you need to be summoned, and why did Mother have to bring you over with her?\"\n\n\"She didn't have to. Being a lord or lady of our Plane just means you can hold a certain amount of power. Mother can hold the most energy, which means she can do more with it. She can cross freely between the boundaries all she wants. When you hold enough in you, you don't need to use it to make a hole in the Veil, you can just slide through the cracks.\"\n\nShe looked off to the side, seeming embarrassed. \n\n\"After my last Master, I didn't want to be summoned anymore. So I had no energy to use. I still had my magic, but to have a pool of energy to draw from increases its strength. Since I wasn't being summoned I had no way to fill that well inside of me.\"\n\nI thought that over, \"So you were basically stuck?\" She nodded.\n\n\"That is one of the reasons I was so upset with you when you interrupted that gathering on...Halloween?\"\n\nI nodded that she got the word right and she continued.\n\n\"There were a little over 30 beings there, beings I could have drained. I would have been filled up almost to the maximum of my ability to hold.\" \n\nShe smiled and gently rubbed her stomach.\n\n\"The smell of them all was delicious! It isn't food for us...but in a way it is at the same time. It's a pleasant sensation to feed like that. No that is too small of a word. It is an exciting, stimulating sensation to feed like that!\"\n\nHer dark eyes were bright and her wings shivered a little. I gulped nervously, and then discarded that feeling. This is Lucretia! I can't be nervous around her! She is my friend. But I still had to know...\n\n\"So, when you touched me you said I would taste delicious...?\" I asked hesitantly. She looked embarrassed and wouldn't meet my eyes.\n\n\"Yes...\" She wouldn't say anymore.\n\n\"Lucretia?\" \n\n\"Please...don't ask me.\" She said softly.\n\nShe said the magic word! Damn it! I really wanted to know, this could be important, but obviously she was uncomfortable talking about it. How do I...?\n\nI scooted closer to her but she wouldn't meet my eyes and looked away from me. \n\n\"I won't pry into something if you are really uncomfortable. I just need to know if there is anything I can do so I won't be so...um...appetizing...if I run into anymore succubae.\"\n\nWithout looking at me her hand blindly grabbed mine off the table and she held it hard in her grip.\n\n\"None of them will so much as taste you while I live!\" she growled.\n\nOkay, didn't answer my question, but took care of my worry. That will do for now. I noticed that Nancy was watching us closely with her little paws clasped in front of her. I swear the rat was smiling. Lucretia glared at the rodent and said darkly. \"Something you want to say, thief?\"\n\nNancy's whiskers twitched in what looked to be an attempt to hide a laugh!\n\n\"You two are so cute together! I have never seen, read or heard of a Master/Familiar relationship like this!\" \n\n\"We get that a lot.\" I admitted. My thumb caressed the back of the clawed hand, and Lucretia's did the same to mine.\n\n\"Alright, time to get ready to go.\" I announced.\n\n\"Where are we going?\" Lucretia asked. Nancy too looked curious.\n\n\"We are going to go see a friend about finding a wizard who needs a familiar!\""
    ],
    "authorname": "payenbrant",
    "tags": [
        "succubus",
        "sex offender",
        "rat",
        "mage"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/mine-yours-pt-06"
}