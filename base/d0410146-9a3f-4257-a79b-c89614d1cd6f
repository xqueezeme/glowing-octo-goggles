{
    "title": "Claiming an Ally Ch. 07",
    "pages": [
        "Arnold was dressing for the evening meal when a hurried knock rapped upon his chamber doors. His valet left his side to answer it. He returned quickly. \"Sire, apparently the King Edrich, who left not an hour ago has entered the castle by force and rushed your daughter's room.\"\n\n\"What?\" the king was baffled, taking a moment to process the information. \"Surely it is a misunderstanding. Perhaps he...\"\n\n\"He was apparently in quite a rush; pushing past the guards...he wouldn't wait to be announced...\" The valet didn't attempt to hide his concern, hinting he thought the princess to be in some sort of peril.\n\nThe king, still confused, rushed out to find his daughter. Many servants were gathered along the long hall that led to her bedroom. They were whispering and peering towards her room. When they saw him approach, they stiffened against the walls and then bowed their heads before dispersing. Arnold walked through the open doors of his daughter's chamber and saw her clutched in the arms of the man who had refused to marry her. \n\n\"What goes on here?\" Emera jerked from the comforting embrace at the sound of her father's voice. She reached to dry her face, relieved that most of the moisture had been absorbed into Edrich's cloak.\n\n\"Father, I-\"\n\n\"Sire,\" Edrich cut in, standing, \"upon contemplating your offer further, I found it wisest to stay for another night or two and discuss such arrangements with your daughter, as opposed to my previous thought of leaving altogether. I hope this meets with your approval.\" He gave a small bow.\n\nThe old man began beaming. \"Why, I think that is a very wise choice, indeed. Emera, what say you? Will you welcome the king to dine with us this eve?\"\n\n\"Not entirely certain what offer he is reconsidering, I am inclined to want more information on the subject, before committing to anything. However, yes, my initial response is that it would be most gratifying to host his Majesty as long as he desires to stay,\" she said softly, still overcome by his abrupt and unexpected return.\n\n\"Ha! Good then!\" the king cheered, walking over to slap Edrich on the back. \"Well, why don't you come with me and you may have your rooms back, I take it they were satisfactory before, though you were...\" his voice trailed off as he led Edrich out of the room, allowing him only time enough to give a longing look back, crested by his heart-filling smile.\n\nA rushing wave of joy surged in her, her body responding in quickened heart beat, flushed skin, and dizzied head. She twirled once, clasping her hands tightly together, squeezing them to her chest. Her face contained the widest smile of her life, her eyes filling from the overwhelming jubilation surging powerfully through her. She collapsed on her bed, laughing and crying for some minutes, thrashing about in tiring excitement. With a start, she realized the dinner hour was upon her and she was still in her riding clothes.\n\nShe rang for her maid. \"Quickly, brush out this wild mane and do something with it,\" she said, straining to contain her giddiness. \n\n\"Yes, my lady,\" the young girl said. She set about brushing out the thick hair, waved by the plaits Emera had worn it in since early that morning. When her hair shone like the silk it was, she began a new braiding style that wove gently back away from her face, forming an intricate tangle of threaded hair. A few wisps fell to the side of her face and at the nape of her neck, turning in angelic curve.\n\n\"Always so lovely. Thank you. Now, bring me a proper dress for dinner while I wash up, yes?\" She hurried off to the beautiful washroom. As the bell rang calling for diners, the thrill of her heart was making her feel light headed and she knew she was most certainly flushed. Emera descended the stairs, the perfect image of a refined princess, something she hadn't looked like in quite some time, she mused. As heir apparent to Adalynd, Emera should have always behaved as a queen, with grace and decorum, observing all the practices of a fine lady. However, Emera found at an early age, there was much lacking in a fine lady when considering qualities for a strong leader. She quickly took up other skills, besides needle work, like swordsmanship and archery. She was a voracious reader of her father's old scrolls detailing military exploits of her kingdom's history. She had much rather be riding through the neighboring villages, observing life and all the various issues that accompanied it rather than trimming roses in a private garden.\n\nBecause her concern for her people was evident, and she proved herself worthy of the skills and talents she pursued, no one ever considered criticizing the princess or her slightly less-than-common habits. Her natural beauty and grace went far in easing her way in the world as well. As such, she spent more time in riding clothes or hunting garb, than in fine silks and satins. The rare sight descending the staircase in floating silence stilled the room of all speech from the small circle of lords and ladies. Edrich, who had been speaking with Arnold, upon hearing the hush, turned to spy the cause. He stood mesmerized by the innocent enchantress.\n\nUnaccustomed to being so blatantly stared at, Emera blushed as she approached her father and Edrich. She braved a glance at Edrich who quickly looked at the floor and then away. \n\n\"Emera, my dear, you look exquisite. If the king's presence was enough to get you into a suitable dress, I would have invited him years ago, if only to see you looking like the queen-in-waiting you are.\" Arnold reached out and took his beautiful daughter by the hands and kissed both her cheeks. Emera blushed at the insinuation she would do anything to please Edrich, even something so out of her character as to dress up.\n\n\"Thank you father, but I always dress appropriately when we dine with guests.\" She smiled, trying to lessen the strangeness of her actions. She glanced again at Edrich, but he was still looking off, seemingly distracted by something else. Before anything was further mentioned, the head butler, Andre, entered, declaring dinner ready.\n\nArnold, as was custom, proffered his arm to his daughter and led the way into the dining hall. Emera dared a look back. Her heart stopped when she saw Edrich finally look at her. The heat in his eyes inflamed her and she suddenly regretted she would be surrounded by others for the next hour, knowing she only wanted to be surrounded by him. \n\nIncreasing the severity of her discomfort even further, as he was the honored guest, he sat to the right of her. So close, she lamented. Though she ached to be near him, the current state of their closeness only served to distract her from appropriately hosting the small party.\n\nThe guests, the Lords and Ladies Macomb, Wayn, and Goun, were able to keep the entertainment high with constant questions of Emera's recent adventure. The princess felt more and more anxious with each passing minute. Her usually beautiful wit was in hiding under the pressure of being so near to Edrich, and yet unfulfilled, discussing her innocent intrigue in front of her accuser, and attempting to skirt around discussion of her torture sitting next to the very afflicter of her great anguish.\n\nThe retelling of her and Edrich's story forced the subject, but allowed no true discussion of the events. Although she attempted to detail only the basic outline of their time together, Edrich had to react quickly to answer diplomatically when Emera became flushed. While he wanted to alarm no one by speaking of her punishments, at both his hand and Jenner's, he didn't want to appear as a liar in front of her. \n\n\"You see, I failed. For years, I never quite trusted the man, and yet I never acted upon my instinct. I betrayed myself, my kingdom, and eventually Emera. I allowed myself to believe his lies instead of whole-heartedly seeking the truth. I am quite vain, and he used that against me.\" He looked to King Arnold across the table. \"For that, I ask your Majesty for forgiveness.\" He bowed his head slightly.\n\nArnold, never one to linger on unpleasant things, stammered, \"Well, the important thing is that you realized your mistake and my daughter has apparently forgiven you, so all is well.\"\n\nThe others at the table began speaking about the idea of spies and traitors, but none of their words found his ears when he felt thin, warm fingers slid up his thigh and grasp his hand. She was looking slightly askance down the table at Lord Goun, a fork in her hand. But her reassuring grasp in his own hand told him she sat alone in the room with him, no one else present. He squeezed it back, closing his eyes, feeling peace that only whole forgiveness can bring.\n\nThe anxiety of the discussion faded, but their growing hunger, despite their dinner, only increased throughout the evening. The fading hour was upon them, the others present having left for either their rooms or their own estates. Her father had fallen asleep with a book in his lap in front of the fire in the library.\n\nThey stood in the darkened hall, the chandeliers having been extinguished an hour before. The blue light of the moon cascading through the large windows competed with the soft, warm glow of the small candles in the sconces that ascended the walls. He stood only a foot away, his dark energy pulling at her like a drug. Slowly, she lifted her gaze to his, though his face was obscured by shadows of the night. Her breathing was increasing and she was finding it difficult to remember why they were standing thus. \n\nIn the lightness of her head, she knew she had words to say, but not what they were. In all suddenness, she only had desire and no words. She had need of strength and touch and lightning, but she had no words to voice it.\n\nEdrich struggled to maintain his position. The overwhelming decree in his heart to haul her to him, take her to his room, to claim her forever rushed through him. Still he held back, even though barely, knowing, for countless reasons he could afford no such careless urgency. She was looking into him, her blue eyes darkened in the night, but also with desire. She quivered as she brazenly stared up at Edrich and licked her lips thoughtlessly. The shimmering full petal shivered delicately. Bewitched by the erotic sight, he took the small step to her and reached to cup her cheek. He would devour what she offered, knowing only her entirety would satisfy him all the while making him starve for more of her. But before he could lower his lips to hers, a voice interrupted their desire-ridden oblivion.\n\n\"There you are, my child. I was afraid you would have gone to bed before I could speak with you.\" Stifling a yawn, the bleary-eyed king approached them from the amber light of the library door. In his own oblivion, the old man failed to grasp the tone of the scene he had stumbled upon. In all innocence, he patted Edrich on the back. \"Well, I am glad you are come back, Edrich. I hope we can soon make a new alliance of an altogether different meaning.\" He extended his hand for the man to shake. \"Well, we won't keep you up any further. I'm sure you'll excuse us while I speak with my daughter.\"\n\nIn his own desperate need for Arnold's daughter, Edrich could only reply rather curtly to the unsolicited farewell. \"Yes, thank you. Goodnight to the both of you.\" He bowed and stiffly ascended the wide staircase leading to his bedroom on the second floor.\n\n\"Well, my dear, what do you think of that? He returned for you! And I dare say you are quite lucky to be attractive to such a good king. Though, I am sure you are attractive to a great many people. You are quite like your mother in that regard. But a little more in the way of your mind. Always your best asset, I'm sure.\" Slowly he took his daughter's hand in his arm and led her up the two flights of stairs to their floor.\n\n\"Now, I am quite certain you understand that the king intends to offer you his hand in marriage. I've been very lax with you, applying no pressure to ever marry. Primarily because I have had yet to meet a man I thought that could be best for you and the kingdom. But also, I knew you would be a great leader regardless of who you married, and therefore did not see the urgency in it.\n\n\"As it is now, you have the best of all possible men, and I see how keen you are for him in return. Therefore, my daughter,\" he paused in front of her bedroom door and took both her shoulders in his hands, looking intently into her face, \"If he does give you an offer, you know what your answer should be.\"\n\n\"Yes, father. I know,\" her voice breathed.\n\n\"Good, my child. Then, in that case, my mind at rest, I shall leave you to sleep. Rest well, my dear.\" He kissed her on the forehead and strolled back to his room, content that soon he would be the happy father of the queen that united two kingdoms. He chuckled to himself; he would love to have a grandchild or two, as well.\n\nEmera's maid was waiting for her to return that late evening. She hadn't had a proper wash earlier before dinner and wanted to be the cleanest possible. The young girl drew the princess a warm bath and poured the milk in. Emera immersed in her large tub. She scrubbed herself quickly. Despite the urge to linger in the warm depths, a bubbling of anticipation hurried her along. Circling in her mind was the desperate hope she would not sleep alone. Dressed in the most gossamer gown she possessed, she lied in bed, her eyes keen on the handles of her doors.\n\nThe hush of the sleeping castle floated into her darkened chamber. The tension radiating from her clutched the silence in strained expectation. Her ears were tuned to every fall of sound. She waited, hoping. The seconds ticked away, the moments passed into the night, and yet she remained alone. At last, exhausted from her vigil and the emotional havoc of the day, Emera's eyes closed under their heaviness. She waited, listening in her blindness, arms open to her night visitor.\n\nEdrich waited more violently tortured. He paced back and forth in his chamber, anxiously waiting, hoping beyond measure. He stood before his doors, looking at the handle, debating whether or not he should throw them open and march off to claim his love or patiently wait for her to come to him. He knew anything brash might rekindle the loathsome fear he already provoked upon her. He paced back to his bed and sat at the foot, clasping his hands together to rest his chin. He watched and waited and prayed.\n\nHer expectation woke her as the dawn broke through her window. Though rested, she still carried the quiver of anticipation of what the day would bring. She looked at the pillow beside her, small disappointment creeping in at the lack of its use in the night. He hadn't come to her. Perhaps it was for the best. Though understandably eager to meld their flesh once more, they should discuss...well, everything.\n\nShe bounded out of bed and groomed herself. Her hair fell in its loose braid over her left shoulder, per the norm. Her cheeks were pinking with anticipation, and her gown, though finer than her typical dress, was still plain and practical. Its deep blue matched her eyes and seemed to warm her skin. Before long, breakfast was served and she bounded down the stairs and walked as calmly as possible into the breakfast room. The two kings were already seated; Arnold was leaning on his elbow closer to Edrich, his ear turned toward the younger, listening gleefully.\n\nAt the sight of her, the two stood and bowed. \"Good morning, my dear,\" her father beamed.\n\n\"Good morning, father, Edrich,\" his name tumbling from her lips in pleasure. The blush of the night before had returned.\n\nWill she always be that stirred to greet me in the morning? he wondered amused. Though he had waited for her until his body slumped and his eyes shut of their own accord, the shimmering sight of her refreshed him, renewing his desire and hope.\n\n\"Good morning,\" he replied, his deep, warm voice touching places covered by her clothing. \"Your father and I were just discussing what a pleasant morning it is. A fine morning for a ride. After breakfast, perhaps you could show me the surrounding land.\" His eyes were glittering with hope.\n\nThe thrill of being alone with him at last excited her. She wanted to giggle at the tingling sensation. \"Yes,\" she managed to say, though she still sounded breathless. \"A morning ride would be quite nice. There are a few places that you may enjoy viewing.\"\n\n\"I do hope so,\" he smiled. Though Emera wanted to feel confident and free in Edrich's presence, she was overtaken by a giddy shyness, the likes of which she had never before felt. Edrich, anxious to uncover what transpired between them while he fell ill and Emera's feelings regarding the matter, contributed little to the conversation as well. That left Arnold to continue on his own, rattling away ideas of the recent and the newly budding alliances. Fetes, and contests, and merchant exchanges drifted around the table, though only one person was interested at the moment in discussing those aspects of collusion.\n\nEdrich ate quickly, and Emera barely ate at all. Quickly, the two were finished with the meal. \"Arnold,\" Edrich broke in the king's ramblings, \"if you would allow, I would enjoy letting Emera lead me around for a bit.\"\n\n\"Oh, yes! Of course, of course. Well, off with the two of you then. A good ride, to the two of you. Enjoy your day, dear,\" he said as Emera leaned down and kissed him on the cheek.\n\n\"Thank you, father, you as well.\" She walked out to the stables, Edrich by her side. Quickly, their horses were saddled and mounted, and she led him to the meadow to the east. A thick forest lie just beyond sight of the castle, and Emera felt it was the safest route for privacy. They raced along, the thrill of reaching an unknown destination spurring them on. At last, the forest they reached split with a rushing white river. The bank was steep. Ecstatic to share one of her favorite spots with Edrich she smiled bashfully and slid off her horse.\n\nThe two walked slowly along the edge, their horses lingered behind to graze on the soft grass. Neither knowing where to begin, they remained silent, hoping the other would speak first. At last, the uncomfortable edge in the silence prodded Emera in to speaking.\n\n\"You came back.\"\n\n\"Yes.\"\n\n\"Why?\"\n\n\"Why? I thought that was obvious. Your father has done an impressive enough job in announcing my intentions.\"\n\nShe smiled. \"Yes. But that is not exactly what I meant. If you came back, with such intentions, why did you leave in the first place, and with no goodbye? The two actions do not seem to be those of the same man.\" She rubbed the back of her neck nervously, and then paused, realizing he had stopped walking. Turning to him, she waited anxiously for his answer.\n\n\"They are the choices of the same man, but the same man with different knowledge.\"\n\n\"I do not understand.\"\n\nEdrich was reluctant to begin with the question or accusation that she had willingly given herself to him during his delirium and thus sought a different tact. \"Perhaps I can explain if I am able to ask you a question, first.\"\n\nEmera shrugged her shoulders and sat on an enormous log. \"Very well. What do you wish to know?\"\n\n\"Have your feelings for me changed? You no longer hate me, am I correct?\" he ventured.\n\nShe nodded slowly and softly smiled. \"That is correct. I-I might have held a justified animosity towards you, but...considering all things, I am no longer bound by such antagonistic feelings.\" Her admittance was bravely given, she thought, as the weaker in all things of their entire engagement she further made herself vulnerable. She looked at him with eyes of fear of his rejection, of need for his care.\n\nEdrich approached her, kneeling down to look up into her eyes. \"I deserve none of your goodness,\" he confessed. \"I am humbled by your forgiveness.\" He sighed, uncertain where to lead from there. He turned so that he sat on the ground and leaned against the log, an arm propped over his bent knee. Her leg at his side provided a comforting perch for his head. \"Emera, while I was sick...you stayed with me, yes?\"",
        "Her breath hitched a little. \"Yes, I tended to you,\" she admitted hesitantly. \"After all, you were sick because of me. Undoubtedly, had I stayed and not run away, you would have freed me once you learned the truth. You would never have been harmed. I felt powerless as you wrestled with demons in your sleep.\" Mindlessly, her hand had begun passing over his head, her fingers threading through the short, dark strands.\n\n\"You comforted me greatly. I...often times I believed myself to be in hell. I was tortured, beyond any reason or understanding. But, so often, I felt myself pulled into warmth, into safety. In the deepest part of me, I knew it was you. You saved me, in more ways than one.\"\n\nShe smiled softly at the sentiment, her mind drifting over the times of his anguish she had touched him, called to him, soothing his despondent cries. Eventually she thought of the night she stayed with him, how she had allowed herself the freedom to be swept away in the comfort his desire generated. Stroking his hair, she suddenly became heated and self-conscious. She stilled her hand, pulling it back to tightly sit with the other in her lap.\n\nEdrich, sensing her shift of mind, knew the subject had to be broached. \"Emera, you asked why I returned.\" He struggled to continue. \"While negotiating the treaty, your father asked that I consider taking you as my wife. While he asserted you had feelings for me, I thought differently. I believed, even if you held some sort of emotion, it would be wrong to bind you to me, when all I wanted to do was repair the damage from imprisoning you and...the other. I was a beast, and I didn't want you trapped to someone like that. \n\n\"So, I left.\" He took in a long, deep breath. \"However, my horse threw a shoe in that first little village on our way. As we were stopped, Robert told me, much to my surprise and alarm...\" he paused, gaining confidence to continue, \"the guard outside my bedchamber heard us...making love.\"\n\n\"Oh, good lord!\" she hissed. He felt her crumple into her hands, her face hiding her shame. He quickly stood up to sit on the log next to her. He tentatively reached out and took her by the wrists, lowering her hands so he could look into her face.\n\n\"Emera, is it true then?\"\n\nSome moments passed as a defeated Emera sadly searched for words to ameliorate her dishonorable actions. With quivering voice she answered. \"Yes. Edrich, I am sorry,\" she rushed, apologizing. \"I-I don't know what happened. Well, that isn't entirely true. I...well, I was tending to you, like I said. It was late and you had such terrible fits. I didn't want to leave you, but I was so tired myself. Once you had quieted, and not wanting to leave you, I decided to sleep near you. I was worried, you see. But, in the night, in your fevered state, you...well, you reached out for me. And though I tried to dissuade you, I...\"\n\nThinking he had once again overpowered her, he began to burn furiously. His face darkened before he angrily stood and paced away. He vehemently raked his hand through his hair.\n\nEmera mistook his self-directed anger for rage at her actions. In despair, she pulled her knees up to her, throwing her face back into her hands. At hearing her weep, Edrich spun. \"Emera,\" he said as he sat back down and gathered her into his arms. \"I am so sorry. I-I didn't know, I wasn't in control. Please, please forgive me.\" He pulled her tightly into him, fearing any headway he had made to be washed away.\n\nHe was apologizing? \"What do you mean, you are sorry? I am the one that should be ashamed,\" she spoke.\n\nPuzzled, he pulled her away and peered down at her. \"Why should you be ashamed?\"\n\n\"Because I took advantage of you,\" she wailed in distress.\n\nRelieved to hear her tears were because of her own conscience, and not because he had attacked her, he chuckled and cupped her face. \"Em, my sweet, please be at ease. You have nothing to be ashamed about. You did not take advantage.\" Her look communicated her strong doubt. \"If anyone is to be a suspect in this entire affair, it is me, not you.\"\n\n\"But I...I wanted you, and you weren't aware of anything you were doing. You were sick, but I didn't stop. Your touch was...\" she blushed, suddenly realizing what she was speaking of.\n\nAt the evidence of her desire for him, Edrich grew serious again. \"Emera, your father wishes that we wed, but I do not want to force this upon you. I want you, I won't deny it, but, if you feel trapped by this, in anyway, I want you to say so.\"\n\nShe stared into his eyes with such thankfulness. \"Truthfully, yes, Edrich, I've hated myself for wanting you so. But I know I'll never want anyone as I do you. When you were sick, I realized...I knew I would be forever haunted by you. Not by my treatment at your hands, but by my complete need for you. When I thought you might die...all else fell away. And when I thought you left me, it nearly crushed me.\" Tears had sprung to her eyes at the memory of watching him depart. \"Edrich, if it is what you desire, not because you feel guilty, or feel as though you need to make amends; but if you want me, as I want you, then yes, I'll marry you.\"\n\nFor some moment he held his breath, needing nothing more than the sight of her eyes, the sound of her voice. At last, he sighed happily and smiled. He reached to cup her cheeks, pulling her face to him as his mouth slowly stalked closer to the succulent treasure he had craved for so long. \n\nHis heady flavor flooded her senses, triggering her hunger for him. She quickly opened her mouth, yearning to feel him take possession. His tongue captured her bottom lip, trailing the length of it, and then dipped inside, greeting hers. It was a meeting of tenderness, a promise to be ever-loving, ever-kind and loyal. She moaned, overcome by relief and joy.\n\nIn the moment of her exhilaration, Edrich too became aware of his own desire that crashed against his self-restraint, thundering to be released. He broke from her, their breathing harsh and urgent. Her eyes were swirling pools fixated on his lips. Her lips hung heavy and loose, wet. Slowly, she looked up into his eyes. He shuddered to witness the raw, powerful carnal hunger that filled them. He took a ragged breath and held her at arm's length when she made to kiss him again.\n\n\"Emera, I don't think we should continue. If we don't stop this now, I won't be able to resist taking you completely.\"\n\nIn the huskiest voice he had ever heard from her, she said, \"I don't want you to stop.\" His heart, along with his loins, clenched in happy terror, and then released into hot liquid. Her eyes had fallen back to his lips, and she was pushing her way forward to reconnect them once more. Overpowered by her admission, by her scent, by her desperation for him, he fell still and allowed her to engulf him like the ocean claiming the shore.\n\nShe pulled him into her, devouring his mouth in starvation. She forced her way into the cavern, occupying him the only way she knew how. She raked her tongue against him. She was running her hands from his stomach, up his chest and over his shoulders. She clung to him, binding herself to him. Her arm snaked around his neck. As she leveraged her body up, her far thigh crossed over to fall possessively on his lap. With her other foot still on the ground, she pushed up to take the high position, using her advantage to crash down upon his mouth.\n\nHer eager domination was erotic and provoked his body to respond instantly in agonizing ecstasy. He allowed her any freedom she willed to take, knowing her pleasure would be his. He exalted in the knowledge her bliss was not at his coercion. He felt the greatest appreciation that she wanted to be touched by him and that she was responsible for the brutal passion now passing between them. She wanted him, and she wasn't afraid of those desires anymore. She denied nothing.\n\nHer right leg that had come to rest over his lap was rubbing sensuously with the rest of her body. It dragged over his hardened length. Mindlessly, his hips began to move with her leg, pushing into her as it passed over him. In response, Emera shifted to completely straddle him. Her hot core was pressed fully onto him, her mouth never having left his. \n\nEmera's arms rubbed aimlessly over and around his body to cleave her to him. She was grinding her hips into him, riding the bulge. When he growled at the exquisite pain shooting through his body at her crushing his cock, she paused, breathing heavily into his mouth. His eyes opened to find her watching him. His own breathing stilled as he saw that animalistic hunger, contemplating him, like a wolf calculates the attack of its prey. Her movements had stilled, and in the respite of their actions, he felt the tips of her fingers slide slowly down, past his chest, down his stomach to land quietly on the edge of his britches.\n\nHis breathing returned, ragged and strained. Her eyes never wavered from his gaze, though her cheeks reddened as her hand pulled out the treasure she sought. He stared into her molten blue, watching for her intent. His gaze fell to her lips. They were parted. Her pinkness slowly emerged to run along her bottom lip before treating the top in the same manner. Moistened, she bit lower lip and looked down between them.\n\nHer skirt ballooned in her way, blocking her view. Looking back to his darkened eyes, she released herself to slide painfully, slowly down until her knees perched her in front of him, pushing his legs apart and settling close. She had kept him tightly in her hand, not once relinquishing that heavy, masculine part of him.\n\nEdrich looked down to see her hand clasped tightly around him, squeezing the purpled head. He looked uncertainly back to her face, but found her eyes mesmerized by the sight of the prize her hand gripped. She leaned into him, drawing her closer to investigate provocatively. Her left hand steadied her against his knee as her right began to slowly move down his shaft. She released her grip to let her fingers trail over his springing length.\n\nIt was hot, she noted. It was the familiar burning in her tight walls, availing itself to completely stroke her most intimate flesh. She felt the silky texture and explored it further by spreading two fingers, allowing it to glide between them. She stroked slowly, up and down, feeling the silk caress her skin erotically. The large heat fell to the joint of her fingers, reminiscent of another body part it treated similarly. It simultaneously soothed and ignited the itch between her fingers. The sensation caused her vaginal walls to clutch in reaction. The squeeze of her secret walls caused her to undulate forward against Edrich's thighs. Her eyes closed at the sensation and her head lolled back, a soft moan escaping her lips as her fingers stroked him.\n\nHer fingers finally circled around him again, catching him tightly as she slowly drew up his length, pushing all the pulsating blood to thrum in the tip. She heard him suck in his breath through clenched teeth. She held him firmly as she looked up curiously into his strained face. He looked as though he were in pain, sweat beading on his brow. She raised her eyebrows at him, but with no concern. She continued to hold him tightly, watching the tension grow on his face. When he sucked his breath in even further, his chest puffing out at the enormous amount of air he was holding, she slowly released him, allowing the blood to flow back. She watched him relax from the strain, though his stiffened posture told her he was on guard against such a brutal assault again.\n\nShe turned her eyes back to his beautiful shaft, her eyes roaming its contoured length. It was a beautiful part of him, she realized. She continued to revel in the sight of him, so often hidden during their skirmishes. Again, she tightened her fingers and drew up the length. His breathing continued as it had before, but she no longer looked up to watch his tortured countenance.\n\nKeeping her gaze on thick rod, she continued to slowly pump him, holding at the top until she felt the tension threaten to spill over in him. Then she would release him. When his precum leaked from the tip, she moved her left hand to take over the strangling torment so her right could dip a finger in the sticky fluid. She rubbed it between her fingers and then went back to the source. Slowly, she used two fingers at the tip, spreading the fluid around the head, swirling it hypnotically around and around. She could feel his increasing pulse, the clenching of his thighs.\n\nHis aroma was assaulting her and without thought to the appropriateness of such an action, she bent her head forward and opened her mouth to allow her tongue to slowly extend. Edrich watched in rapturous horror as her pink tongue tentatively emerged to flick at the head of his cock. He let out a loud, moan-filled breath at the sensation shooting through him. \"Emera...\"he barely managed in broken voice. \"Please, love, you should stop.\"\n\nBut she didn't. \"I want to taste you,\" she muttered, consumed by the desire of her task. Hell, what could he say to that? She had released the overwhelmingly tight grip on his shaft, only to engulf his head in the scalding heat of her mouth. She started slowly, suckling the tip as he might her breast. He stamped down the surging desire to immediately build to climax, wanting instead to experience all she wanted to take.\n\nWhen she heard his breathing grow to quick gasps, she knew she had to take it more slowly, wanting to glory in the feel and taste of him in her mouth. She ceased her intense sucking to take him deeper, more languidly into her mouth. She shaped her tongue lovingly as he slipped deeper. Her left hand glided up his thigh. Stopping at the hem of his pants, she began tugging at his shirt, releasing it from his breeches. She wanted to run her fingers over more of his skin. Once her hand had freed the shirt edge, she continued under the fabric up his torso, her fingers bouncing gently over the musculature there. Her hand quitted its journey at his chest where her fingers grasped boldly at the large muscle she found there. In concert with her sweet sucking, her nails grated over the pebbled nipple under her hand.\n\nEdrich moaned in appreciation of the exquisite attentions she gave him. Desperate to touch her in return, his hand threaded through her bound hair, releasing it to fall erotically. He restrained the desire to fuck her mouth, but instead allowed his hand to be a part of the movements of her head, relinquishing all control to her sway.\n\nShe was taking him slowly into the depth of her hot mouth and creating a vacuum as she withdrew. She would let him fall from her mouth so she could trace the hot silk with her tongue, exploring. She mewled at the incredible feel and erotic flavor of him, her mind over-rushed with pleasure. Her right hand, feeling its own build up, ached to claw at him. With rhythmic squeezing, it moved from the inside of his thigh, higher and massaged the taut muscles as it went. When she reached the base of his shaft, her fingers stumbled over the full sack there. The warm, soft flesh was compelling, and without thought, she began to pull and play, rolling him between her fingers and squeezing him. She heard him moan happily, so assumed he must enjoy it as well.\n\nEdrich had fallen back on one hand while the other enjoyed running through her silken strands. He watched in ecstasy, awash with lust as he had never before known it. The basic components of finding pleasure in another's touch was there, but that other-wise common feeling was deepened by the piercing emotion of love, which heightened the pleasure of not only receiving, but giving as well. The fact that she found pleasure in him swelled his heart with joy. He loved to watch her rapture, regardless of the matchless pleasure her actions gave him. \n\nEmera found heavenly bliss stroking him with her tongue. Once, mouth closing around the knob, her teeth accidently grazed the flesh there. When she felt him jump under her, she decided to try something new. Lowering herself on him again, she held him filling her mouth. Using her tongue, she pushed the enormous weight slowly around her mouth, sending his cock to scrape against her rows of teeth, and then stopped to suck once or twice before commencing again or withdrawing to the tip.\n\nEdrich felt as though he would evaporate from the heat engulfing him. When the harsh sharpness of her grazing teeth connected with his skin, Edrich gasped violently. He shifted on the log, trying to escape the unbearable agony. He managed to control his breath long enough to growl. \"Emera, please, stop. I cannot take another moment.\"\n\nShe did look up at him at that. She was enjoying the delicious weight in her mouth. But she was also aware of her own need. His cock could still be put to good use. She released him from her mouth and reached up for his shirt, pulling him down hard against her mouth. \"Edrich,\" she managed to breathe as she tried to assail his mouth with her tongue, \"please, I need you. Make love to me now. Here.\" She was wrapping her hands at the back of his neck, pulling him down to the ground. She maneuvered him so he came to sit where she had been kneeling, his back leaning against the moss-covered log. She pulled his trousers down further and quickly straddled him again. She took his hands in hers and slid them under her skirts to settle on her undergarments. She nudged forward, silently commanding him to free the barriers between them. Needing little coaxing, Edrich soon had the material pulled out of the way.\n\nEmera returned to his mouth. His lips and tongue and breath were the center of her desire, and she found she wanted to always be connected to him. Needing the feel of his hot skin under her hands, she began fervently tugging at his shirt, stripping him bare of his layers. Her hands ran down the sides of his neck and over his shoulders. \n\nShe left the sweetness of his mouth to lave his skin with hot kisses. She followed the chiseled lines of jaw and the strong muscles of his neck as she went. She reached the hard line of his collar bone and in her excitement bit it, feeling the muscles of his chest firm in reaction. She ground against him only two or three times before feeling the fat head rub at the center of her dripping wet cunt. \"Please, Edrich,\" she begged hungrily, rubbing her head into the side of his.\n\nEdrich waited for no further request. His hands were still hidden under her skirts, gripping her hips. He reached under her to position himself. He was still wet from her loving attention and the newly acquired liquid she leaked from her creamy depths. He stroked her with his fingers, suddenly overcome with joy at having her blissful folds now at his disposal forever. She was still rolling against him and two of his fingers slid into her incredibly wet heat. She hissed at the delightful sensation, it temporarily easing the ache in her. Her lower lips were swollen with her need, and he relished in the engorged feel of them.\n\n\"Edrich, stop teasing me. Please, now. I want you in me,\" she moaned.\n\nThe unsolicited request broke his concentration at play. He had no thoughts of being coy, but with his own matching urgency, positioned his shaft into her wetted folds. She quickly raised to better position him and then slid down, feeling the glorious stretch momentarily satisfy the tension in her inner depths. She sat a brief time, catching her breath from the built up excitement. Feeling more in control, she opened her eyes. \n\nEdrich was staring at her, his own labored breath evident. She wanted to stay, bound to him in their exquisite affliction. But the shooting pain of glory through her body caused her to twitch against him. She could no longer control the movement of her body. She fell into the persuasion, slowly moving on him. Emera knew at some point in her life, the sensuality she displayed would have embarrassed her, but she was unable to know any feeling other than the driving pleasure that pulsed in every cell of her body.",
        "The delicate and keen nub of flesh at the top of her pussy was able to rub occasionally against him, but the rest of her felt slightly dissatisfied. Her knees were bent so she rested, not only on his lap, but on the ground either side of him. Her lower legs were back, and her toes dug in the soft, dampened soil. She used the position to drive against him powerfully, but her body felt like a chaotic mess of yarn. \"Help,\" she whimpered, wanting the rhythm, but too overcome by rippling sensations to expertly find it.\n\nUnderstanding her need and frustrations, he took her hips in his large, strong hands. His fingertips bit into the flesh. \"Relax,\" he tried to whisper through his choked throat. Slowly, he began to move her on top of him, helping her glide up, and then ease back down. He guided her hips to roll against him so he was strumming the electric parts of her channel. She let out a grateful moaning exhalation. \n\nEmera, at last composed in the sensual movement, sat looking into his eyes as she drove against him. She invited him into her soul while hosting him in her velvet channel. The invasion, complete as it was, caused her being to tremble at the vulnerability at being so exposed.\n\n\"Edrich,\" her trembling voice called. She reached for him, kissing his jaw, and sucking on his ear. \"I love you,\" she whispered, her breath falling into him.\n\nEdrich's heart leapt. His arms came up to wrap tightly around her, crushing her to him. She likewise hugged him back and hid her face in the crook of his neck, still following the rhythm he had begun. She arched up and then thrust herself fiercely down, impaling herself on him until he could feel his cock hit her deepest wall. She sat up to look him in the eyes again. Though she was afraid of the openness, she was also addicted to the consummate eroticism of staring into his beautiful eyes as he brought her to pleasure. In two, then three more falls of her hips, her inner walls began to quake around him. Her body followed suit, quivering over his form as her thighs tightened. She cried out, her broken voice drawing his orgasm forward. \n\nOn his own edge, he thrust violently up once then twice to bring himself over. Feeling his energy exploding from his being, he shot into her hot cavern copious amounts of cum. He growled fiercely, squeezing her to him even more tightly. His continued gyration trilled her into another orgasm, causing her to cry out in tears as the pleasure tore her apart. Her body spasmed, slamming her violently down against his chest. \n\n\"Edrich, please,\" she moaned, choking back tears, the intense, continued sensations becoming too much for her sensitive flesh to handle. Running a calming hand down her back, he nudged against her with his head, rubbing comfortingly. Moments passed and her cries subsided, only the shuddering movements of their bodies remaining. They drifted slowly down from the rapturous heights, clinging wholly to each other.\n\nAt long last, their heads began to clear of the lust-driven fog. She pulled back to look at his face. He smiled, reaching up to dry the tears on her cheeks. She looked at him with such wonder, such faith, such love, that his chest could only rise in the power she gave him. He kissed her again, softly. For long minutes, he held her, caressing her gently. Her open acceptance of his tenderness, as well as the forceful, passion-driven touch, mended the pain and doubt he carried, afflicted by his own hand. \n\nThe power of their arousal sated, they were able to clearly discuss the details of marriage. The conversation began lightly, but quickly grew as their clever minds began working. Most would have thought the father and current king would have been better suited to make decisions regarding affairs of state. However, in consideration that the best decisions Arnold had ever made, save the choice to marry his wife, had all originated with his daughter, the welfare of the kingdom was well looked after. \n\nIn the end, they determined their lands would be unified, and to provinces would be established that served to further unify separated sections. The heir apparent would rule the entire kingdom, while establishing governors, either siblings or appointed officials, to monitor and represent the provinces. There were other details to iron out, like where the reigning royal would reside, but those were not immediately important, and could be left to discuss with their advisors and generals.\n\nEager to enter into their new life, they decided upon the quickest wedding possible. Emera wasn't certain what expectations her father would have, but knew he could be persuaded to her way of thinking. In tandem, the two raced back to the castle. The morning was gone, and they were both starved for something other than each other.\n\nEmera noted the extra activity of the bailey as they entered, but disregarded it as her mind was happily occupied elsewhere. However, by the time she passed through the entry and great hall, the swirling furry of dozens of servants scurrying to and fro, carrying everything from flowers to large swathes of material, to plates and trays made her and Edrich slow in their trek to the kitchens. They looked at each other quizzically, and decided to find her father. He was in the ballroom, throwing his arms up in grand gesture.\n\n\"Flowers upon flowers! Emera loves flowers and I want the room filled,\" his boisterous voice boomed to the butler next to him. When Arnold saw the couple enter, his smile broadened. He immediately rushed over, leaving the servant to bow quickly and head off to fulfill one of many of his lord's commands.\n\n\"Father, whatever is happening here?\"\n\n\"Why, you are my dear! Well, at least your engagement party. That is, if everything went according to plan,\" he lowered his voice, looking questioningly at Edrich.\n\n\"Yes, your Majesty. Emera has agreed to marry me.\"\n\n\"Excellent, excellent! I told you she would didn't I? I decided to make preparations as quickly as possible. The party will take place in a full two days' time. Hopefully, that will give your people time to arrive. My head chef has been preparing the menu all morning...\" Arnold continued to prattle away as he led the stunned couple through the dizzying, swirling chaos.\n\nThe next two days did not contain enough hours for the head butler, the chamber maids, or the chefs to attending to the preparations to their liking. For Edrich and Emera, however, the times were torturously long. The afternoon they arrived back from their tryst in the forest, her father, with oblivious humor, instated the age-long custom of a chaperone for his daughter. He had waited many years until he could call upon the favor of the old governess once more. She had never been much use to Emera as a child since she was head-strong and saw to her own learning, and she certainly wasn't use now, when all the princess wanted was to be in Edrich's arms every waking, and sleeping hour.\n\nThe couple was bustled about tirelessly from one seamstress to another to be fitted for a wedding outfit and trousseau. Emera, never one for difficult fashion found the entire thing tedious. Edrich, knowing a gorgeously-wrapped, divine body to be his reward, happily encouraged her to cooperate when she threatened to wear her favorite chapel dress.\n\nThe next two days brought changes to the castle, mainly by increase of persons roaming its many halls. Some were extra servants hired for the event; others were guests from both Adalynd and Lidio. Much to Emera's relief, the two factions tolerated each other with more grace and decorum than she would have imagined. Few, if any squabbles, happened quietly and were resolved with diplomacy.\n\nAs the two were unable to steal any private time for themselves, they settled on spending much of it with her father, discussing policy. Edrich was far and away the most qualified to guide discussion of defense of their states, while Emera was able to design balanced policies that fairly considered all parties. She wisely drew upon laws the two countries had in common, sieving out the essential commonalities and creating a cohesive pandect, which would hopefully satisfy both nations. Arnold, per the norm, contributed little of value, mainly serving as a source of first and second-hand accounts of old stories of kings and queens, and all the people in between that contributed silently to the history, both for the good and the bad. Though the stories were simply little more than a distraction, they did give Emera things to consider, and often provided them all with a serious chuckle or tear.\n\nOne of Edrich's first orders of business was to order his troops at the border to return to their station of origin and to call for his general. Obviously, he would not be attacking Adalynd, as it was soon to be part of his kingdom. However, he needed to assess Adalynd's army and general condition. Meeting with Arnold's Field Master General and his own, they discussed military sizes and training and training requirements. Edrich met some resistance from General Theodore; however, his own general only exacerbated the tension by repeatedly remarking on the superiority of his army. Edrich had to privately caution him to not wound the ego of the old man. After all, he most likely did the best he could with what Arnold had given him in way of direction and support.\n\nIn the end, though Theodore was somewhat miffed at the apparent demotion, it was agreed upon for the sake of unifying the two countries' armies, that General Wells would lead the unified army throughout all the land. It was then brought up, by the aging Theodore, under what colors did their nation fight? Edrich, exhausted at compromising, pinched the nose of his bridge. The doors to the great room opened, and he sighed in relief to see Emera grace the room.\n\nSmiling, she approached the men with a maid following, pushing a cart for tea. She sat next to Edrich on the large arm of his chair, wrapping her own arm around his shoulders. \"How goes it, my lord?\"\n\n\"Tiring, my lady.\" She gave a sympathetic smile, and leant down to kiss him.\n\n\"Then, perhaps you gentlemen should take a break and refresh yourselves with tea and cakes.\" She took the cup from the maid and handed it to her betrothed. \"Tell me, what things have been decided upon?\" Edrich relayed the morning's agreements and decisions, bringing him to their current topic of consideration.\n\n\"Yes, I see the problem; it also likely means we will need to consider a new emblem for our new country, will we not?\" Edrich huffed a little, trying to disguise it as a sigh, but failing. \"Is there a problem, my love?\" Emera asked, humorous temper bristling somewhat at his behavior.\n\nHe sighed again. \"Perhaps we should stop our discussions for the time. Our engagement party is not four hours away and we are in need of preparing, are we not? Let us return to these talks after our wedding.\" His word being final, he stood and bowed to the two men, biding them good afternoon and extending his hopes to see them enjoy themselves that evening. He turned to Emera and held out his hand to escort her.\n\nShe narrowed her eyes at him, but her face didn't lose its slight humor. She followed him out of the room and up stairs and down hallways, studying him as they went on in silence. Before she knew it, they had turned down a dark hallway that she herself rarely ventured down. \"What are we doing here?\" she asked somewhat confused. She turned to look at him for her answer. Her breath caught at the darkened face that greeted her. 'Edrich?\" she choked quietly as he began to stalk closer to her.\n\n\"And, where, pray tell, is that old croon of a chaperone? Left you in quite the vulnerable position, has she not?\" his body edged closer, pushing her back against a door.\n\n\"Sh-she is get-getting r-ready,\" she stammered out breathlessly.\n\n\"Mmm,\" he said thoughtfully, extending a hand slowly for her. But it reached passed her and turned the knob. The door flew open under Emera's weight. She stumbled back into dark, only the dim light of the hallway visible. Edrich's black silhouette stood menacingly in the gray frame until he took another step forward and reached to shut the door.\n\nIn the dark, Emera listened, suddenly anxious at the feel of being locked in the room with a predator. Her breathing, faster and more ragged, filled her ears. Though she could not see him, she felt his presence draw closer, enwrapping her in his energy. \"E-Edrich?\" she breathed. The pulsating energy from him pushed her back a few more steps until she hit shelving. Quickly grabbing at them to feel where she was, her hand landed on linens. She realized they were in the east wing linen closet. She stood, unclear why she felt a small terror running through her, livening her body until she tingled.\n\nHe stood only an inch from her, his hot breath cascading down her form. Slowly, and ever so erotically, she felt his hands at the sides of her thighs surreptitiously grasp her skirts and begin to bunch them higher. She could not feel the pressure of his hands, only the delicate tickling of the swaying fabric running up her legs provocatively. Though the sensation was light, it was more than enough to light her skin on fire, sending wave after wave of thrilling electricity to her hastily dampening core.\n\nWhen her skirt was high around her waist, she felt one had at her undergarments, teasing its way in. His hand, hot and insistent, covered her mound. A jolt of pleasure rippled through her, causing her to moan wantonly. She bit her lip, trying to muffle the sounds of the whimpering her drew from her.\n\nWordlessly, and with no other touching than his one hand, he gently pushed up into her sex, finding the folds brimming with her honeyed response. She heard his shuddered breath then, but still no words. She ached for his mouth, his kiss, his tongue to be her undoing. She wanted to violently press into him, but she understood his wordless command to remain still while he plundered her.\n\nThe one finger slowly ran the length of her wet slit, reaching between her thighs and then back to the top. It flicked the electric nub there, causing her hips to buck forward. He was not swayed by her body's response, but instead continued his slow torture. Eventually, he added a second finger, and together, the two eased slowly, slowly into her molten core. The ache and buildup and pleasure were too much for her sensitive body. Her tight channel began to clench spasmodically around his fingers. She whimpered more, wanting to cry at the cruelty of the sweet torture. And then he stroked, once then twice on her anterior wall, strumming that secret place. In the briefest of moments, she was clutching fiercely down upon his fingers, crying in her release.\n\nWhen her knees buckled, she felt his arm slip under hers and cradle her against him, even as he smashed her into the shelves behind. He pressed his hips into his hand covering her mound. \"Release me,\" his voice grated out. It was raw and urgent, giving away his strained need. \n\nThough she leaned forward against him, her forehead resting on his shoulder and her body quaking with the remnants of her orgasm, her hands shakily fumbled with the laces of his breeches, seeking to free him as he ordered. When at last he sprung from his restraints, he tore his hand from her cunt, allowing her to wrap her leg around him and position him for the impaling. His hands grabbed her ass, pulling her into him. He filled her with every stroke until she felt as though she would rip. He lifted her higher, driving into her ferociously. Though his voice never broke again, his breathing rushed in and out of her ears, filling her mind with him. He did not last long, and within a few powerful thrusts, his body shuddered violently, a groan ripping from his throat. Though he felt his knees buckle in the overpowering sensation of his release, he only had to lean into her, crushing her against the wall. He held her, his arms wrapped possessively around her, squeezing the air from her. She still vibrated from her own orgasm, even as she clung only to him.\n\nAfter some long minutes, their bodies regained their lost strength. He released her and felt her slide down his body, feet landing on the stone floor. He pulled from her, feeling his cock slide out of her heat into the coolness of the room. He was immediately aware of a great loneliness, but consoled himself in the knowledge she was his for the rest of his life. They quietly reassembled their personages, straightening their clothing, smoothing her hair.\n\nOvercome by the powerful union, coupled with the still lingering fear, Emera reached out for him. \"Edrich, what was that?\"\n\nHe pulled her into his arms, spreading a hand over her jaw, his fingers in her hair, his thumb rubbing her cheek. \"I'm sorry, did I hurt you?\"\n\n\"No. You frightened me, though. Whatever came over you?\" She felt him lean down into her, felt his lips graze hers before opening to run his tongue over the crease. She allowed him into her mouth, feeling his tongue mate gently with hers.\n\nHe pulled away, pulling her into him again. \"It is difficult for me, this union.\" He felt her stiffen and rushed to explain. \"Please, do not misunderstand; I am beyond words in my joy at marrying you. Only...\"\n\n\"Only what?\" she prompted when he hesitated.\n\nHe took his time in collecting his thoughts. \"I am king. All my life, I have been the ruler of all those I know, with the exception of my own father. I never believed I would have to be subjugated to my wife, even compromise with her.\" She pulled away from him, seeking his face with her eyes in the darkness. \"But I am not your sovereign. We are equals, and I struggle with giving so much power away. I suppose this moment in the dark was my attempt at regaining some sort of domination, though it frightens me to take such power away from you, considering...\"\n\nHe felt her hand on his cheek, then. \"Thank you,\" she softly replied. \"I mean no offense when I say, I knew instantly the moment we met you were the most arrogant, controlling man. But I understand why. Thank you for accepting me as an equal, though it strains your authority. In all things, I am yours. If we are to be equal, I will allow you to dominate me, so long as I can dominate you,\" her voice huskily replied. She pulled him down to her mouth, sealing her bargain with an erotic kiss that quickly began to build his arousal for her again.\n\n\"Emera, my love, we should stop. You no doubt have many things to attend to in readying yourself for this evening. Though I wish for nothing more than to love you all afternoon and evening long, we have responsibilities elsewhere.\" It pained him to open the door and draw her back out into the light once more. He slowly escorted her to her chamber rooms. He kissed her with aching need, rapidly growing unhappy that they were not yet free in marriage. \n\nEdrich returned to his rooms and bathed, his mind weighed by his need, his duties, the giant task of uniting two previously feuding nations. Eventually, his worries melted into the steaming water, easing away with his relaxing muscles. He took comfort in Emera's strength, intelligence, and pleasure in his desire for her. He would have a good life.\n\nThe hours passed slowly as Robert assisted in his dressing and grooming. He lounged with Arnold for the last hour in his study. The old king was fond of the pipe and sat reposed in a chair before the fire. Edrich contemplated the monarch, fascinated by the difference, not only in Arnold and his daughter, but by him and Edrich's own father. The two were quite different kings, and Edrich was pleased that, despite weakness as a ruler, Arnold continued to prove as a comfort as a father-figure.\n\nEventually, the time to enter the great hall and join the lively celebration was upon him. He noticed his growing excitement at seeing the princess, finding it intriguing that he should have her, but with each possession, the desire for her grew exponentially. The wedding was set for the day after the next, and Edrich hoped, rather than believed, he could waylay his longing for her until such time as it was sanctioned by others.",
        "The music was lively. Edrich noted that there were subtle differences between the music of Adalynd and Lidio, but Arnold had done a commendable job in assuring both were equally and beautifully represented. The dishes served, also varied slightly by nation, but equally served as the undercurrent of the new fusion the chef had created. The colors of the hall were brilliant. Edrich stopped and noticed how both countries' colors actually went well together. Adalynd's light blue and rich gold were accentuated in equal portion by his own deep crimson and black. An equal pairing of two colors could be easily done, he thought. He felt some of the weight of compromise and upheaval sweep off his shoulders, lightening the burden of the union.\n\nThe time came for the princess to make her entry. Edrich stood next to Arnold at the foot of the stairs where Emera was set to descend to, and the royal herald waited at the top to commence the announcement formally. Trumpets sounded and all faces turned toward the staircase.\n\n\"Announcing her royal highness, the Princess of Adalynd and betrothed of King Edrich Mather of Lidio, Princess Emera Lein Calwren!\" The trumpets blew again and the red velvet drapes that hung at the entrance to the stairs drew back. All watched to see the glorious entrance of the future queen. But the crowd gasped upon the startling sight.\n\nEdrich, fear-gripped, dashed up the stairs to kneel next to the figure. Glenna, blindfolded, beaten and bloodied, sat tied to a chair, a note pinned to her chest. The woman sat unconscious and unable to detail the events leading to her current state.\n\nUpon spying the letter, Edrich tore it from her bodice.\n\nMy dear King, You will no doubt by now realize your sweet princess is otherwise engaged at this time and unable to celebrate a future no longer possible. If you would like to ensure she lives, you may join us, ALONE, at the clearing in Dennenbrock not an hour's ride from where you stand. And so you carry no delusions about this evenings' outcome, know that only one will be allowed to live after tonight. Either you or your precious princess,\n\nYours, humbly,\n\nJenner\n\nHe shook as his vision darkened and went black. When piercing light returned, he looked about him, the bloodied woman in the chair, the guards leaning over her, the king, crown slipping, shaking his shoulder, mouth moving slowly but no sounds, no sound, no sound. Only the piercing through his ears, only the sharp edge of pitch stabbing through his head.\n\n\"Edrich! Edrich!\" Arnold's voice came rapidly, sound returning to the deafening silence. \"Edrich! What is this? What is the meaning?\" Edrich's mind quickly snapped into place. He stared down at the letter again. Somehow, the bastard had slipped into the castle and stolen Emera. He stood and marched down the stairs. Quickly scanning the crowd, he saw Robert making his way to the doors first. \n\n\"Arnold, I am sorry to tell you, but Emera has been kidnapped by Jenner, the seditionist who tried to convince you to attack me and convinced me that Emera was a spy. He holds her at Dennenbrock. Where exactly is that? I will need a guide.\" The crowd parted as he had made his way to the castle's entrance and waited for Robert to bring his horse.\n\n\"I do not believe this! My daughter, you must bring my daughter back, Edrich.\"\n\n\"Of course, your Majesty. A guide?\"\n\n\"Oh, yes, yes, of course.\" Arnold motioned for the captain-of-the-guards. \"Please, escort King Edrich to Dennenbrock. Follow his command. Assist him in any way possible to bring back my daughter, Captain.\" The stoic man bowed, signifying he would act as bidden.\n\n\"Do not fear Arnold, I will die before I allow this sick devil to harm her. I will return with her,\" and then bounded down the stairs to the horse Robert led along. The Captain followed suit, a horse brought quickly to him. A young sentry approached when the captain motioned him forward. He handed each a sword and gave the captain a bow and quiver. The three bolted from the courtyard, the flying horses' hooves thundering against the cobblestones. \n\nThe darkness Emera had been shrouded in the past few hours was drawn away as Philip, the fat man who aided Jenner, lifted the hood off her head. She blinked, taking in the lit torches blazing in a semicircle around the smallish clearing. The night sky over the forest was that deep blue turning to black. She looked up; her hands were chained to the wall of rugged stone. She knew instantly she was in Dennenbrock. An old ruin of a society before her people, it once served as a sacrifice site. Generally, as there was no village nearby, it remained forgotten in the woods.\n\nEmera began to shiver, the fear of being helpless before the vile man creeping into her bones. She was alone, and she wondered if anyone knew she had been taken and by whom and where and when...she breathed, trying to quell the panic that was rising in her blood. If she had any chance of survival, she needed to remain calm and keep her wits. Controlling her raging fear was easier said than done, and she watched the figure in the center of the circle, whimpering and struggling against her chains.\n\nJenner stood, watching her terror take over her mind. He smiled cruelly. If all went well, not only would he depose Edrich and ascend the throne, he would keep this new toy. His smile was cruel, quite satisfied his plan had thus far proved well. Stealing into the castle had been simple enough, sneaking the princess out presented the challenge. Thus the cleverly designed note, forged in Edrich's hand, requesting her presence in the forest just beyond the castle garden.\n\nThe princess came, just like a bitch in heat, just like he knew she would. He stood with his back to her, his cloak drawn over his head. \"Edrich?\" she asked, curious at his furtive behavior. Jenner, standing just a few yards in the woods, turned when she stood only a few feet behind him. Removing the cloak from his head, he turned to leer down at her. Her face, wide in shock, went limp as Philip stepped behind her, hitting her over the head with the butt of his sword. Unfortunately, as he gathered her on his lap atop his horse, he heard a gasp. Turning to the opening in the tall hedge of the garden, a scant five yards away, Glenna stood, hand over mouth.\n\n\"My lady!\" she yelled.\n\n\"After her!\" Philip, on his own horse, bolted forward, quickly catching up to the older woman. Before long, he was standing behind her, holding her arms tightly. They dragged her into the woods as well. \"Deal with her.\" And then after considering, he altered his plan. He commanded Philip to leave her tattered, a visceral omen to Edrich as to what would befall his princess. He knew it was risky, but instructed Philip to remain behind another hour until the announcement, pinning the note to the battered woman. He knew the melodrama would serve to enrage the king, hopefully hindering his thinking. \n\nPhilip had succeeded in following the orders with no difficulty. Long before the unveiling he was on his way back to Dennenbrock. \n\nJenner stalked closer to the quivering girl who bravely stared him down with disdain, despite her obvious fear. He chuckled, looking over her regal form. He slanted his eyes cruelly at her as he drew his knife. Emera eyed him warily, tightening her body rigidly against the stone. \n\n\"Oh, come now, little princess, surely you are not afraid of this steel, are you?\"\n\n\"If I said yes, would you put it away?\" she snarked. He backhanded her across her insolent mouth.\n\n\"Doubtful,\" he hissed. \"Now, is this any way to greet your fianc\u00e9? Let us see if we can make your appearance more appropriate.\" Taking his knife, he began slicing at her dress, the shreds falling away, leaving her in her thin chemise and tight corset. He felt himself aroused at her sensual sight. He traced his fingers across the top of the laced corset, watching her repulsed reaction as they grazed the top flesh of her breasts. She turned her head and squeezed her eyes as he ran the blade of his knife down over the laces of the corset, cutting them one after the other. The material fell away.\n\nEdrich, please, please, please... she repeated desperately over and over in her mind. \n\n\"I think this,\" he leered as his hand ran slowly down her side, feeling her curves under the thin slip of material left, \"is far more appropriate. Do you not?\"\n\n\"No, as a matter of fact, I do not. I would only find it acceptable once it is soaked in your blood.\" She turned her dazzling, hate-filled eyes at him. For her bravery, she received a crushing hand wrapped round her throat.\n\n\"You will learn in time, my pet, you are not to speak to me as you see fit.\" His face was inches from hers. Having no freedom of hands, she spat in his face and then kneed him in the groin. He grunted and leaned for forward, but recovered enough to punch her squarely in the face, causing her head to reverberate backwards and knock into the rock. She fell limp, hanging from her hands.\n\nJenner stood, the stinging ache lessening. He reached out, grabbing her by the jaw. He looked over her face, nose bleeding, and cheek red from his smacking. Soon he would train her to respond with pleasure at his beatings. Soon, all his scheming would come to fruition.\n\n\"Jenner,\" his name was growled from the edge of the trees. \"Release her.\"\n\n\"Edrich, Edrich, you were foolish enough to come. And here I thought you might sacrifice your little miss in order to completely vanquish me with your many men. I trust then, you came alone?\" he asked over his shoulder, his hand still around Emera's throat.\n\n\"I used a man to guide me here, but left him at the road.\"\n\nJenner huffed. \"How very stupid of you.\" His knife was soon at her throat. \"As I wrote you in the note, by coming here, you are agreeing to give your life for hers. So, put down your sword.\"\n\nEdrich, unhappy to comply, did as he was told. Until he could release her and see her safely out of harm's way, he could not show his hand. He threw his sword on the ground. He watched menacingly as the fat man approached and retrieved it, taking it to Jenner. \"Now, release her.\"\n\n\"My king, you do have a funny sense of humor. Release her? Whatever for?\"\n\n\"Because that was the agreement,\" he ground out, thankful he had not trusted Jenner's conditions.\n\n\"Yes, well, I said I would spare her life if you gave up yours, I do not think I said I would release her, that would be wasteful of me. Why would I give up such a succulent little pleasure, now that I have her at my finger tips? Can you imagine all the glorious pain she will feel as I take her over and over and over? How long do you think she will last? A year? Maybe two? No, I do not think I will be letting her go.\"\n\nThe injured sight of her was enough for him to vanquish the man from the world, but the tortured images he conjured enraged Edrich almost beyond his control. Calm, calm, calm he soothed himself, knowing Jenner sought to provoke him into making a mistake. Control your temper, if you are to save her. \"Even if you kill me, you will not be king. My people will never accept you, and if you hurt Emera, the entire Adalynd nation will rise up to overthrow you. You will be hunted for the remainder of you short life.\"\n\n\"Oh, how little you know, your Majesty. As it just so happens, all those men you thought I was arresting in the borderlands, I simply...relocated until such time as I could use an army. Once I unleash them, they will devour this spoiled, lax state like an evil plague. There will be no spirit left to fight with. And as for your own people, I have thought of a solution to that as well. Fortunately, I have it right here in my pocket. Here,\" he said, pulling out a scroll. Stowing his knife, he began reading aloud, amusement filling his voice.\n\n\"I, King Edrich Mather, 22nd ruler of Lidio, do by here renounce my crown and throne over the nation of Lidio and its subjugated provinces. I relinquish any and all rights to governance as well as claims over royal holdings, treasuries, and payments. I sign freely, under no coercion.\n\n\"Quite nice, do you not think? Believe you me, with my little private squad of mercenaries, this beautifully signed document (which you are about to do), and that lovely signet ring I am about to pry off your dead finger, I shall have no trouble positioning myself on your throne. And once I have that power, to hell with what others may try to do to usurp it.\" He smiled. \"Now, time to sign away, my liege. The longer you delay the more little marks I shall have to adorn your beautiful princess' skin with.\"\n\nAs he stepped further away from Emera and approached the king, the captain, whose name he learned was Remy, stepped quietly from the trees at the side of the monstrous rock, securing himself between the princess and the two traitors.\n\nSpotting movement to his side, Philip spied Remy and shouted, \"My lord! Behind you!\"\n\nJenner, realizing his position was compromised, dropped the letter and grabbed his sword. He lunged at Edrich who blocked the driving blade with his forearms. Normally, he would be dressed in his leather cuffs, effectively protecting himself. Unfortunately, dressed in his formal garb, he had little protection in the sleeves. Though the blade sliced him, the cut wasn't mortal. He drew a concealed knife from his back, arming himself. The blood running down his hands made holding it slippery, but his training kept it steady in his hand.\n\nPhilip lounged for Remy, but was struck by an arrow before he reached him. Robert shot another from his hidden position on a branch twenty paces in from the tree line. Philip dropped to his knees, and watched in strangled terror as Remy took two steps forward and ran him through with his sword.\n\nJenner, seeing he was alone and outmatched by the younger Edrich and his hidden company, turned and ran for his horse at the edge of the clearing. Edrich stopped him the only way he could. He flipped the blade round in his hand and threw it with deadly precision at his back. The steel lodged itself between two ribs, puncturing a lung. In agony, Jenner fell to the ground and rolled to his back, digging the knife in further. He was choking on the blood pouring into his once air-filled lungs. His breath was strangled, and he squirmed in anguish. He watched, horror-stricken, as the enflamed king advanced toward him with deadly deliberation.\n\nHe weakly gripped his sword, mindlessly aiming to flail it, but Edrich stepped on his wrist, causing him to lose his grasp. Edrich bent over and picked up the sword. From behind, Robert and Remy approached, watching their king mete out justice. Too bad he can only die once, Robert thought.\n\n\"For your crimes against the crown, for your barbarism and torture of a royal, for deceiving your king and attempting to send your nation to war, you, Jenner, shall die.\" Edrich's voice, gripped in hatred for the snake, condemned him to hell. In one swift, decisive move, he plunged the large blade through his black heart until he felt it stick in the ground beneath him.\n\nEdrich stood panting over his lifeless body, resting his weight on the sword. Remembering Emera, he began searching the pockets for the keys to her chains. Feeling the small cold metal, he seized it out and rushed to her still lifeless form. Releasing her, she fell into his waiting arms. He cradled her in his arms, calling to her softly.\n\nSlowly, she started squeezing her eyes, wincing in pain. Her eyes edged open, but she flinched automatically, struggling to free herself from the captive arms about her. Edrich comforted her, avoiding the red marks on her face. His gut clenched in fiery pain. How he wished he hadn't killed the beast so he could torture him slowly for years. He stifled his anger and held her closer, whispering comforting words to her.\n\nShe reached up to Edrich's collar, pulling herself into him. She began sobbing at the pain and fear gripping her. He held her tighter, rocking her back and forth. \"Emera,\" he soothed, \"Em, love, you are safe now. He is dead. It is over. Please,\" he whispered. He knew her tears had a right to pour, but her agony was his, and he wished it to end. He held her until she had emptied herself of her terror.\n\nIn the course of time, Emera's tears stopped, and she was able to allow Edrich to attend to her wounds. He dabbed at the blood trickling from her nose. The gentle ministrations were comforting. She smiled softly, thankful he was her strength and assurance. He stood and lifted her into his arms.\n\nHe turned the men. \"Burn them,\" he commanded. He lifted Emera to his horse and mounted behind her. He felt her body sag into him, conforming herself to fit in his embrace. They wove back through the dark forest making for the road that would lead them to the castle. He questioned her about what had transpired. He was careful not to cause her too much stress, though he noted her spirit seemed to be reviving, the fight and strength returning to her abused form. She let out a sigh, and fully regained her composure, putting the incident behind her.\n\nEmera was safe tucked inside Edrich's arms. She rested her head back against his shoulder, feeling the cool breeze of the night sweep delicately over her warm face. Before long, she had fallen asleep in his arms. He nudged the horse forward into a smooth gallop, eager to get her home.\n\nShe awoke in the morning, her head throbbing. Belinda was immediately at her side. \"Easy, my lady. Your head has taken quite a beating. How do you feel?\" she asked as she helped Emera sit and lean back against the pillows of her bed.\n\n\"My head hurts.\"\n\n\"Here, this tea should stop the pain. Your cheek is a little red, and your nose swollen, but your face should be lovely again by tomorrow. I will leave you for a moment, my lady, as King Edrich asked me to tell him the moment you awoke this morning.\" The old lady scuttled from the room. Emera concentrated on the drink warming her hands. It wasn't as objectionable as the soup she had made for Edrich, but it wasn't tasty either. She downed the golden liquid, eager to be rid of it. She leaned back and closed her eyes, breathing deeply, feeling the air fill her head, easing the pain.\n\nAfter a few minutes, a tingling sensation filled her and her eyes flew open. Someone was watching her. Edrich stood to the side, near the doors, quietly taking her in. When their eyes met, he smiled softly and approached. He sat on the edge of the bed. \"You are well?\" he asked, running his hand over her brow, brushing a few wayward strands from her face.\n\nShe smiled in return for the sweet gesture. \"Yes, I am alive, thanks to you,\" she murmured softly, taking the hand and pressing it to her warm lips. She then felt him flinch at the touch of his forearms. \"What is the matter? What are these bandages?\" she asked upon her exploration of his arms. He explained how he received them during the short fight. \"How did you know where I was?\"\n\nEdrich became somewhat uncomfortable at the topic, not wanting to cause her distress from learning about Glenna. \"Jenner left a letter. You told me a messenger brought you a note, claiming it was from me, but you met Jenner there instead. Did Glenna accompany you?\"\n\nShe frowned, thinking. \"Glenna? No, she wasn't there, why?\" When he hedged in answering, she became more concerned. \"Why? Where is Glenna? Why do you ask about her?\"\n\n\"Last night, at the party, when you were announced, it was Glenna at the top of the stairs, not you. She was...\" he clenched his jaw, and mindlessly began stroking her hand, \"tied in a chair. She had been abused, I am afraid. Jenner left your ransom note attached to her. I am sorry love.\"\n\nHer face constricted in anguish, tears began clouding her eyes. \"How is she?\"\n\n\"She is alive, but has not yet awoken.\"\n\n\"I have been treating her, my lady, with the best herbs for her injuries. She will recover, but slowly,\" Belinda interjected from the side.",
        "\"I wish to see her,\" she said firmly. But as she stood, the room began spinning and she swayed on her feet. \n\nCatching her, Edrich gruffly said, \"That is out of the question. You will remain in bed for the day. You yourself are recovering and are in no condition to scamper about the castle.\" He laid her back in the bed.\n\n\"What? Edrich, you cannot expect me to remain in bed, all day!\"\n\n\"I can and I do. I am thankful to any service Glenna rendered you, but you are my number one concern, and I will not allow you to further make yourself sick. No, you will remain in bed. I will tie you to it if I must. The healer will look after her well.\"\n\n\"You are being ridiculous. I am not going to go scampering about the castle. I simply want to look in on her, and then I will come straight back to bed.\"\n\n\"You may see her in the morning, provided you are better. Do not forget, tomorrow we wed. But if you continue to act obstinate and do not recover because you are unwise, we will have to put that off. Is that what you want?\"\n\n\"Of course not. Only, I do not see how being out of bed for only ten minutes would harm anything,\" she pouted.\n\n\"You only just stood and nearly passed out. I had to catch you, and you think you can go walking about the castle, for ten minutes?\"\n\nShe ground her teeth. The officious man had a point. \"Very well. But first thing in the morning. And Belinda, I want you to keep me informed of her progress, and let me know when she awakens.\"\n\n\"Yes, your Majesty.\" She bowed and left the two alone.\n\nEmera sat propped against the pillows, slightly perturbed at the man standing, looking down upon her. Eventually, Edrich sighed and sat back down. He leaned in and kissed her gently on her forehead. \"I cannot relay to you the indescribable fear at reading the letter. To know you were in the hands of that...Once I saw you, I knew you were alive. I knew you would be safe. Foolishly, Jenner was outnumbered. I still do not understand why he didn't have more men,\" he said, almost to himself. \"Well, at any rate, I am the most thankful man that you were not harmed more...you weren't, were you?\" he asked slowly, finally looking up in a questioning, side-ways glance.\n\nShe furrowed her brow. \"How do you mean? He nearly crushed my skull. But no, he didn't strike me more than twice. He did take his knife out, but he only used that to strip me of...oh,\" she said slowly, knowingly. \"I see your meaning.\" She breathed a sigh. \"No, he didn't harm me, not in that way. I think he would have, had you not rescued me. But as it was, I think he cut away my clothes to present a more enraging picture, to throw you off your game, so to speak.\"\n\nA knock at the door interrupted their conversation. Arnold entered, concern and then relief washing over his face. He walked into the room and stared at his daughter before rushing to her side. \"Oh, Emera dear, how are you?\"\n\n\"I am well, father. Only a headache, and Belinda has already seen to that, so I shall recover soon enough.\" She smiled at him reassuringly. He patted her gently on the cheek, and she tried not to wince at the pain.\n\n\"Edrich tells me this man Jenner is dead and should no longer be a threat.\"\n\n\"Well, your Majesty, while he is dead, we still need to locate the outlaws he stashed as opposed to imprisoning. Unfortunately, the only other man that I am sure would have known the location is dead as well. Your captain-of-the-guards seems a very reliable man. I would like the use of him, if I may.\"\n\n\"Yes, of course, Edrich. Do as you see fit. After all, soon, I will no longer be king, but you.\"\n\n\"Father, whatever do you mean?\" Emera asked, puzzled by his statement.\n\n\"Well, when you and Edrich marry, you plan on uniting the kingdoms, do you not? Well, Edrich is already king of one, and as you stand to inherit the throne of the other, does it not follow that the rulers of the new state will be the two of you, and not me?\"\n\n\"Oh, father, I had not thought of that. That is true. Well, we either wait until such time as I would ascend the throne of Adalynd and then unite them, or do as you say now. It is something to think upon,\" she said in thought, biting her lip.\n\n\"Well, I do not think it is something to decide upon immediately. Especially as we are not prepared to unite them presently.\" Edrich interjected.\n\n\"True, true. Well, I am happy you are safe, and that you have such a man who could save you.\" He smiled at her and kissed her lightly on the top of the head. He left the two in solitude.\n\nEdrich settled back next to Emera, claiming his side of the bed. He put his arm around her, allowing her to draw up comfortably next to him. Before long, the medicine Belinda had given her for the ache in her head lulled her to sleep.\n\nThe two spent the day quietly. Edrich waited upon her so as to leave Belinda free to care for Glenna. Before lunch, the healer returned word that Glenna had woken. While changing the bandages on Edrich's wrists, she relayed the news about the maid. She had asked about her princess. Reassured that all was well, the faithful maid was resting peacefully. Though she was in a considerable amount of pain, Belinda was certain she would heal well.\n\nEmera was much relieved and able to convalesce for the remainder of the day in Edrich's pleasant company. She mainly slept while he read her father's history books, learning all he could about the lands he was shortly to join with. They talked during their meals about plans and hopes. Edrich shared stories of Lidio, of his explorations there as a youth, and even a few battle stories.\n\nEmera confided how she had always been happy to take on the responsibility of a leader, organizing the play of her and her friends when they were young. When she was older, and her use of the bow a bona fide legend, she orchestrated the hunts that opened the season for the new game. All in all, it was a satisfying day, though Edrich was confined and Emera in a small amount of pain.\n\nThe next day, Emera awoke free of pain, with the exception of a slightly sore nose. There was a bruise across the bridge, but her young maid had talent with cosmetics and was able to hide it effectively. Due to the rushed nature of the engagement and the now painful interruptions that demanded time for healing, the wedding was planned for the evening, with the merriment following into the dark hours of the morning.\n\nEdrich accompanied Emera to Glenna's small room. The lady's eyes were swollen shut, but she was still able to weep at the sound of her mistress' voice. \"I am so thankful you are safe, my lady. I was certain that man would be the death of you.\"\n\n\"Hush, now Glenna. I am well. I am so sorry you received such brutal treatment. You have been a faithful servant and you do not deserve this,\" her voice broke slightly.\n\n\"I am only sorry that I will not be able to attend your wedding.\" That caused Emera to weep a little more loudly. She primarily felt relief the woman would be well again, but felt the pain at seeing her thus. Now, knowing she would not join in her special day added to the emotion of the room and Edrich left, waiting quietly in the hall. Emera emerged five minutes later, hugging him tightly around the waist.\n\nThough the sadness lingered, Emera slowly became more and more enthused at the approaching ceremony. Before the midday meal, the two parted ways. Edrich went hunting with Remy, who showed him the best hunting grounds near the castle, before returning to bathe and dress for the wedding. When Emera had learned he was to hunt without her, she offered to show him herself. Edrich, still concerned she wasn't fully healed wouldn't allow it. He was also afraid they would find themselves precariously stripped of their clothing and would be late for the big event. She was, therefore, left to receive appropriate pampering at the castle. As she lay in the hot bath, one of her maids gently scrubbing her hair, she had to admit it was quite a pleasant alternative. \n\nThe only unpleasant moments of the afternoon were in the form of her chaperone dryly discussing with her the expectations of a new wife. The art of love making was not easy, she had said, but given time and appropriate still and calm, the man would not make it too unpleasant. Dear lord, woman, Emera thought someone has greatly lied to you. She was suddenly overcome with a new pity and felt as though she had been unkind to a woman who apparently had never experienced pleasure in her life. \n\nAfter many long minutes of preparation and waiting, Emera found herself on one side of large double doors that lead into the long chapel. Edrich waited for her at the far end. She only had to pass before a thousand eyes before she reached him. Her father, at her side, squeezed her arm gently, reassuring her that he would be with her the entire time.\n\nShe looked down at the crimson flowers in her hands. They were of Edrich's colors, she realized. She smiled faintly, comforted by his presence, even through his colors. She took a deep breath as the trumpets called on the other side. Slowly, the doors opened and an entire congregation stood. Emera marched slowly forward, the short train of her dress pulling languidly behind her.\n\nEdrich smiled anxiously. She was beautiful. Her hair was braided back away from her face and lace through her simple crown; though he spotted the few wayward strands. Her cheeks were pink, no doubt from her own flush. Her dress, though modest, still clung to her perfect form. The outer layer of the dress was white, but underneath laid the deepest blue, peeking out between folds. It was the color of her enchanting eyes. The color of power and grace. \n\nThe ceremony was perfunctory, just like the king and princess. Before long, all the guests had traveled to the great hall. The party was much like the previous one, only it lasted longer and was much more joyous. The various families of the two countries had grown closer and great camaraderie abounded through the music and feasting. \n\nThe couple first danced with each other, and then led the feast. While Emera laughed with the gray general of Lidio, she spied Edrich's eye from across the room. He was speaking with a small group of men from Adalynd. They were eager to pepper him with questions, and he smiled graciously at them all. But at the sight of his bride, full of mirth and love, he had quite enough of the party. He excused himself from the men and slowly made his way through the crowd.\n\nPlacing a hand upon the low of her back, he apologized to his general and led her away. During a swell in the dancing, the two snuck through a hallway and ascended a quiet set of stairs away from the party. They made their way to her suite of rooms. The bedchamber already lit with candles, was warm from the thousand flickers.\n\nEdrich, surprisingly, found himself nervous. The extreme elation from knowing he would have her all the days of his life, her beauty, her voice, the way she smelled, and all the new ways she made him think, was overwhelming and he stood frozen in the moment. He watched as she walked to the fire. Her back was to him as she reached behind her waist and slowly untied the ribbon there. Slowly, she unthreaded it until it was free to slip from her shoulders. She stepped out of it, and threw it on a chair. He could see her form, molded as it was by her corset, which she slowly began to remove as well. Before long, she stood naked before him, head turned to the side as she looked at the floor. \n\nCompelled by her beauty, he walked to her, gliding his fingers over the skin of her shoulders, and back, then trailed back up her sides. Emera closed her eyes and tilted her head back. She fell into his body and was engulfed by his strong arms. His lips found her exposed neck and he quickly set about to make a feast of her.\n\nOn the soft fur before the hearth, Emera gazed at the sensuous dance of the flames. She felt Edrich's hands run lovingly over her flesh, warming her in a way the fire's flames never could. Their lovemaking had been slow and sweet, allowing her time to luxuriate in the heavenly feel of his hard body and smooth skin. His kisses had been erotic and deliberate, never losing control. Building her climax over and over, she lied in his arms in exhausted bliss.\n\nHe smiled warmly down at her. \"And how are you, my love?\"\n\n\"Alive, my lord.\"\n\nHe smiled at her use of words, recalling the first time he had brought her to the heights of lovemaking. He chuckled, \"More alive than you have ever been?\"\n\nShe gave no pause but answered instantly. \"Yes, always in your arms, yes.\" He kissed her happily at that. \"I have a gift for you,\" he whispered.\n\nShe smiled brilliantly. \"And I have a gift for you. But first, you may go.\"\n\nHe walked to a dresser and pulled a box from the top drawer. She smiled as she opened it; then her face melted into gentle awe. \"Edrich, it is beautiful!\" she gasped. She took out the stunning sapphire ring set in the shiny gold. It fit her finger perfectly. She kissed him eagerly. \"Thank you!\"\n\nHe smiled, happy she liked it. \"That isn't all.\"\n\n\"No? What else do you hide in my drawers,\" she asked mischievously.\n\n\"Nothing. It is the ring.\" He took her fingers in his hand so he could look at it as he spoke. \"I chose it because it is my favorite color.\"\n\n\"Truly? It is lovely,\" she said looking at it.\n\n\"But I love the color, because it is the color of your eyes,\" he said seriously. She looked at him as he continued. \"The other day, when I took you in the linen closet, you had interrupted our discussion of state affairs. Your general had asked what our new nation's color would be. Of course, I thought we should simply combine two of our preexisting colors to make the union seem equal. But, the more I thought of it, the more I wanted what we were creating to be just that, something new we made. There is no other color I would want to adorn my armor as I fought for my kingdom, for my wife, than the deep blue of her eyes. If you agree, then, I would like this to be our color.\"\n\nHe heart clenched unimaginatively hard in her chest. What she received from him was more than she ever thought existed. With tears in her eyes, she kissed him and accepted his proposal. After collecting her composure, she stood and walked naked across her chambers into her sitting room where her desk stood. She brought back a scroll wrapped in crimson silk ribbon.\n\n\"My gift for you.\"\n\nHe unrolled it. The emblem painted in ink was striking. It was a silhouette of a griffin superimposed on a shield. Above it sat a glorious crown. All were surrounded by a wreath of oak leaves. \"Em, it is beautiful.\"\n\n\"Shall I tell you its meaning?\"\n\n\"Yes, please do.\"\n\n\"It is encased by oak leaves, which are the storehouse of wisdom. The crown is of course, a symbol of authority. Now, the griffon, he is the heart of the matter. He stands not only for the power and majesty, nor for simply being guardian of the divine and precious treasure (which is what you are to me), but because griffins mate for life, never to be whole again once they have lost the other.\" He ran his fingers slowly over the symbolic figure that held such portents. She continued slowly. \"My life is no longer my own, just as yours is no further your own. Your breath is my breath and I will live, only so long as you do.\"\n\nHe was overcome by the weight of her words. \"I am happy that you have thought of our kingdom's color, because I would like this to be our emblem. So truly, I think this must be another gift for me,\" she smiled sheepishly, realizing he would gift her with his acceptance. \n\nHe kissed her, passionately ignited by her thought and care. He knew she was right. He was hers for life, as she was his. He smiled perfectly satisfied as he pulled her back down to the fur, eager to consummate their agreements about their future kingdom. \n\nEmera, giggling as he tickled his way up her stomach to her breasts, thought, only briefly, how fortunate she was. Not long ago, she had set off to find an ally, and yet, she returned with so much more. \n\n******\n\nDear Readers,\n\nI wanted to extend a sincere thank you to all of you who have commented and voted and mroe importantly, returned chapter after chapter to read my story. It has been an honor and enjoyable privilege to write for you and connect over something so enjoyable. Thank you!\n\nTitania  "
    ],
    "authorname": "titania123",
    "tags": [
        "emera",
        "edrich",
        "ally",
        "wedding",
        "linen closet",
        "jenner"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/claiming-an-ally-ch-07"
}