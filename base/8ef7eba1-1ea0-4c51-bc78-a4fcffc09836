{
    "title": "Lost Empire Ch. 64",
    "pages": [
        "0001 -- Tempro\n\n0003 - Conner- Thomas\n\n0097 - Ace -- Zimmel\n\n0098 -- Lucy\n\n0101 - Shelby (mother ship)\n\n0125 -- Lars\n\n0200 - Ellen\n\n0301 -- Rodrick\n\n0403 -- Johnathon\n\n0667 - Marco -- Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara -- Mara\n\n--------------------------\n\nUngrown - unnumbered\n\n------------------------\n\n4 - onboard Shelby 0805, 0808 in re-gen,\n\n1000 - Sherry 0250 Tendra \n\n0999 - Zan - still lost\n\n--------------------------------\n\nKnown and OR numbered\n\n-------------------------------\n\n0501 -- Thaddeus \n\n???? - Lena\n\n----------------------------------------------------------------------------------------------\n\nHartwell was still sitting there with his mouth open. They had a prisoner sure, though a naked female? What in the hell were they going to do with a naked female. A wry smile came to his lips then he slapped his face. Damn it Johnathon, now isn't the time to think about that!\n\nGetting up he walked his way slowly to the med bay. Maybe Lucie could get her covered up before he got there.\n\nFinally reaching the med bay, Hartwell was about to walk in then stopped at the threshold. Damnit! The female was still naked!\n\n\"I thought you'd put something on her by now.\" Hartwell told Lucie.\n\n\"Why? She's a female, I'm a female, we've got pretty much the same equipment. I figured since you weren't here I thought, why bother with it. Since you're here though, you can handle it.\" She then turned to go, stopping at the door to smirk at her brother. \"After all you're a man, I know you can handle it.\" Then she walked out her laughter echoing off the walls.\n\nHartwell again shook his head as he looked at the female on the bio-bed. \"Johnathon, report!\"\n\nJohnathon appeared a moment later, \"She was severely oxygen deprived. She was also at the beginning of the sterilization that the Tendrax people are experiencing. I should be able to cure that within a few days. I am still scanning her for any damage that the oxygen deprivation might have caused.\"\n\n\"Good, also Johnathon?\" Hartwell asked. \n\n\"Yes, Admiral prime?\" Johnathon replied. \n\n\"Do something about her not wearing clothes.\" Hartwell said with a lump in his throat. Again he shook his head, he and the team had been through hell, horrors men shouldn't see and have survived. Yet here he was shaking like a new recruit on the battle field, pissing his pants. All because of a naked female? Face it Hartwell, he thought, you really have gotten soft like the commander said.\n\nDerrick was about to take a drink when his wrist comm. went off. Looking at the code he saw that it was Hartwell. \"You alright Admiral?\" he asked.\n\n\"I am sorry to disturb you Commander.\" Hartwell told him. \"Just returned with the prisoner.\" Here Hartwell sighed.\n\nDerrick screwed his face up puzzled. \"What's wrong, did you have to kill them?\"\n\n\"No sir. It was a female, a NAKED female. What in the hell do you expect me to do with a naked... On second thought don't answer that.\" Hartwell said with a look of chagrin on his face.\n\n\"Bring her here as soon as possible.\" Derrick told him. \n\n\"I will sir, though that might be a bit. She was unconscious in a life capsule with a brain box attached to it.\" Hartwell explained.\n\n___________________________________________________________\n\nDerrick nodded as he disconnected from Hartwell. He was suddenly watching, as a small girl and boy began to run circles around him and Shelby chasing each other.\n\nDerrick bent down to separate the obviously fighting duo. \"Give it back to me!\" The little girl was yelling at the boy. Derrick could only shake his head. \n\n\"I think it would be best if you do, also.\" Derrick said making a face at the boy who immediately withdrew, handing something to the girl.\n\nThe little girl turned to hug Derrick tight. \"Thank you, mister nice man!\" Then she surprised him and Shelby by kissing his cheek. Mary appeared a moment later waving a finger at the girl, she leaned into Derrick whispering. \"I think I'm in trouble, here comes the see through lady.\"\n\n\"I heard that!\" Mary said.\n\nDerrick couldn't hold back any longer, he then started to chuckle then laugh loudly. \"Ah! My dear Shelly, it is always a pleasure to see you.\" \n\nA moment later Mika walked up to take Shelly from Derrick. \"I'm sorry sire, if she bothered you. They find it boring staying in the lab with me.\"\n\nDerrick gave Mika a huge smile as he replied. \"They were no problem at all. I am grateful to have all of you here.\"\n\nMika's face dropped a moment as she asked quietly, \"Still no word on when Gunter gets back?\"\n\nDerrick smiled as he told her, \"No, not yet, though I am hoping to have another message from him soon. If I recall he is nearing the end of the assignment I gave him.\"\n\n\"I really hope so sire. The boys and Shelly miss him fiercely, as does his wife.\" Mika told him.\n\n\"I know Mika, remember he has Grant and Jimison with him. I am hoping they are home soon.\" Derrick told the worried woman. 'They better make it back alive, I don't break my word and I don't want to start now.'\n\nMika was nodding her head, \"I just wish that there wasn't all this secrecy.\"\n\nShelby turned to Derrick, then back to Mika. \"As do I Mika. Though I do understand, with all the enemies we have unfortunately, it is necessary. I myself, as Empress am not privy to everything.\"\n\nDerrick could only nod as he tried to hide an embarrassed look on his face. \"At the present time, I am afraid that it is necessary.\"\n\n\"Ummmmmmm yes, though I hope that in the future that it isn't.\" Shelby stated with a determined look on her face.\n\n_____________________________________________________________\n\nAt the edge of the Galaxy three small craft suddenly appeared. One wasn't doing that well as they started in toward the Imperial world. Onboard the damaged ship, the occupant was doing all he could to stay on course.\n\n\"You know he's going to kill me if I can't get this back to him.\" The damaged ship's occupant told the other two. \n\n\"After what we found, I think he'll more than forgive you. Especially after that close call near the Tendrax home world.\" One of the other ship's occupants replied.\n\n\"Still they weren't as scary as the Cregons or those damn Delcrons! I thought that one, was going to rip my face off because I didn't attack him.\" The damaged ship man said.\n\n\"I thought you read the briefing. You know they only respect you if you attack them. Then again when you nearly killed it, I think you made a real impression. The way it was looking at you, I was afraid it would want to mate with you!\" The other ship occupant said.\n\n\"Ha, ha, be an ass, it was a male I'm telling you.\" The damaged ship man stated.\n\n\"I'm not so sure,\" the first ship man said. \"It sure was gyrating toward you an awful lot.\"\n\n\"Christ! You're getting more and more gross the closer to home we get. Look, just let it drop and we'll forget that you almost wrecked us on that Tendraxian cruiser.\" The damaged ship man replied. \n\n\"Still not going to let up on that are you? I told you I was having control board problems!\" The first ship man said.\n\nThe second and damaged ship men were now laughing almost uncontrollably. All this was suddenly cut short by a series of ear piercing, shrieking alarms that started to go off.\n\nThe first ship man started to curse when he saw the readings. \"Damn it! Apparently, you made a bigger impression than you at first thought.\"\n\n\"Son of a bitch!\" The damaged ship man stated. \"Computer, I need distance of the approaching fleet. Give me a time frame for their penetration of the galactic boundary.\"\n\n\"Compliance,\" the simple A.I. of the small damaged ship replied. \"At present speed they will penetrate the boundary of the galaxy within two weeks, six days. At present scans unable to determine the number of ships.\"\n\n\"Can you, with information provided, extrapolate the possible size of the fleet?\" The damaged ship man asked.\n\n\"Now attempting to extrapolate an answer. At present, scans have only indicated a thousand ships. There are three, unknown factors to consider with current data. If this is a marriage challenge party than the number could be as high as fifty to seventy thousand. If this is a diplomatic party, then it could be as few as forty thousand.\" The A.I. droned.\n\n\"You said there were three unknown factors, what of the third?\" The first shipman asked.\n\n\"Now working on that. According to data that was supplied for the third factor. If this is a war party then the number could be as high as, one hundred thousand.\" The A.I. answered.\n\n\"Shit! Damn it! All you had to do was make nice, maybe hit it a little. No, you had to go and damn near kill it!\" The first ship man said. \n\n\"We're going to have to break communication silence. I don't want to be the one that royally pisses him off.\" The first ship man said.\n\n\"Neither do I.\" The second ship man stated. \n\n\"What!? You want me to face his wrath? I'm not doing this alone, if I have to tell him, then the both of you do also.\" The damaged ship man said.\n\nWith a sigh the other two nodded as the first opened a comm. \"Like it really matters, he'd know they were coming in about a week anyway, if he doesn't already.\"\n\nFor half an hour he tried to send a signal to no avail. Picking up what appeared to be a large fleet of ships ahead. That's when the three ships came upon the massive debris field. Here at the back end of it there were actual recognizable sections of ships. The thing was though, there were absolutely no life signs at all.\n\nAll three of the males could only stare with their mouths open. The field had to be thousands of kilometers long and wide. Just what in the hell had been going on while they had been away?\n\n\"Scan the present debris field. Can you determine what type of ships those were? What destroyed them?\" The first ship man asked of his A.I.\n\n\"Scanning now, scans confirming identity of ship wreckage. All sections that are intact indicate that they are remnants of a very large Tendraxian fleet. Damage was induced by high temperatures and thermic radiation.\" The A.I. informed the male.\n\n\"Thermic? Are there any remains of EIG ships present within the wreckage?\" The male asked.\n\n\"Affirmative, at present, I am detecting the presence of one hundred EIG life capsules. Though none are active, they are all giving off indications that they are still functioning.\" The A.I. reported.\n\n\"I wondered why so many berths were empty when we went by there. They must have come after the EIGs hard if the EIGs used thermic weapons. Yeah, I think we ALL have to call him. Mad or not if he doesn't know he'll be glad to get a count.\" The first ship man said.\n\n\"As soon as we get ahold of him.\" The second ship man said.\n\nAnother alarm started to go off as all three turned to look at the readings. \"Warning! Warning! Residual ripalon energy detected. Do not activate trans-warp, repeat do not activate trans-warp. Ripalon energy will cause a degenerative effect to the Criteria particles causing failure within the system.\"\n\nAll three of the males looked at each other shaking their heads. No wonder they couldn't communicate.\n\n\"Will the shielding effectively guard the trans-warp system?\" The first ship man asked.\n\n\"Affirmative, as long as trans-warp system is not activated.\" The A.I. replied. \n\n\"How long before we can safely engage the system?\" The first ship man asked.\n\n\"At present speed, six hours, twenty three minutes to traverse the debris field. Then another fifteen minutes to be at a distance to safely engage.\" The A.I. informed them. \n\nThis of course drew a groan from all three of the males. Damn, here they thought they'd be home in less than an hour. Sighing all three started to settle in when they heard another set of alarms go off.\n\nLooking over the readings all three were stunned to see that they were picking up life signs. They were faint, though they were there. \n\n\"You know. we really don't have time for this.\" The second ship man said.\n\nSighing the first ship man nodded, \"Yeah, I know, though if we don't try, I don't think I could live with myself.\"\n\nThe other two groaned but agreed as they veered off toward the signals.\n\n___________________________________________________________\n\nHartwell was at his wits end, the female was still unconscious, though all med scans said she was fine. Leaving her there he started for the bridge, then was standing there. Smirking he thought, damn A.I. \n\nHartwell was about to sit when he got an excited call from Thomas. \"Admiral!\" The man was yelling almost to the point of irritation.\n\n\"WHAT!!?\" \" Hartwell snapped causing Thomas to back away a moment.\n\n\"Sorry sir, didn't mean to piss in your breakfast, sir.\" Thomas said with a smile.\n\n\"Whatever, what do you have to report?\" Hartwell said starting to cool off.\n\n\"I wanted to let you know, we have heavy activity within that area where the shield is.\" Thomas said. \"Heavy as in machinery.\" \n\nHartwell nodded as he thought a moment. \"I'll be right there.\" Hartwell said, then nodded to Johnathon. A moment later they were near the orbit of the Duke's planet. \"Alright show me.\"\n\nThomas nodded as a topographical map appeared between them. Pointing Thomas stated, \"all indications are, that heavy machinery is being located just outside this clearing. Unfortunately, the shield is making taking readings within, nearly impossible. This was one of the two areas that you wished me to watch.\" \n\nHartwell nodded as he looked at the area closer. Damn, if he didn't know, that area, looked a lot like the place near an old abandoned bunker. He and William used to play there as children. Suddenly, a thought came to him, drawing up another set of plans of the same area. Plans that were below the surface well within a cave system.\n\n\"Does the shield extend through the ground? If so, to what depth?\" Hartwell asked.\n\nConfused a few seconds Thomas stared a moment, then a wide smile broke over his features. \"Pulling that up now Admiral.\" Thomas was at it for a minute then his smile returned. \"It appears to only be confined to the surface.\"\n\nHartwell was nodding as he started to go through several more maps. Suddenly he stopped pointing to the side of a hill. \"That's it, if I remember right that goes through to the inside of the shield.\"\n\nThomas excited was looking over the plans as he suddenly looked up. \"Not really big enough to get anything useful through is it?\"\n\n\"Just a lot of the rangers, especially the ones that are trained.\" Reaching over Hartwell flipped a switch. \"Celeste, I need a report on the condition of Captain Greeson, and Colonel Dempsey.\"\n\n\"Yes sir, Admiral Prime. Captain Greeson has been released from med-bay. His injuries weren't as severe as first thought.\" Here Celeste sighed. \" Colonel Dempsey will require at least another day.\"\n\nHartwell was nodding then asked, \"What seems to be the problem?\"\n\n\"Well sir, Colonel Dempsey would have been out sooner, though, he re-injured himself restraining Miss Sakuta. I am afraid that they both require at least another day.\" Celeste informed him.\n\nHartwell tried to keep it in, though it was starting to break through. Then, he was suddenly laughing at the predicament that Dempsey was now in.\n\nBoth Celeste and Johnathon were staring at Hartwell, both worrying that his mind was going. \"Sir? I fail to see the humor in this.\" Celeste told Hartwell.\n\nBetween his gasps for air he tried to explain. Even as he was opening his mouth three sets of alarms went off.\n\n\"Alert! Alert! Unidentified craft entering the Galactic boundary. They appear to be on a direct path to the last battle. Shall I notify the Emperor?\" Johnathon asked.\n\nDerrick's holo-gram appeared just then. \"No, I think he already knows.\" Hartwell said. \n\n\"Have you received any communication? Have they made contact in any way?\" Derrick asked.\n\n\"At present sir, we can't get a positive id on them. It appears that even this far away, the ripalon energy is screwing up the systems. They moved across the boundary a short time ago. Suggestions sir?\" Hartwell asked.\n\n\"Keep an eye on them, there's no telling who or what they are. With that huge field of residual ripalon energy, we don't risk sending any ships, 'til we can better shield against it.\" Derrick advised Hartwell\n\nHartwell was nodding his agreement as he watched the three ships move across his screen. Was this a prelude to another invasion? Like the commander said, he'd have to keep his eye on them. \n\nShaking his head, Hartwell was beginning to think it was going to be a bad day. A few minutes later Johnathon was taking readings in the med bay, when the female groaned.\n\nJohnathon was immediately next to the bio-bed as the female started to scream. Hartwell could only shake his head as he watched on the view screen.\n\n\"Johnathon what is going on?\" He asked.\n\nJonathon appeared with a stunned look on his face. \"Apparently Admiral Prime, the female awoke reaching to me to get my attention. When her hand made contact with my holo-image or rather passed through it, she screamed. Everything I tried to do to calm her only seemed to make her scream louder.\"\n\nHartwell sighed, then took a step toward the corridor, then he was in the med bay. \"Is that really necessary?\" Hartwell said loudly to get above her screaming.\n\nThe female jerked toward Hartwell then replied, \"Lord sir, when I finished my upcycling, I tried to commence operations. I would prostrate myself to you though I found that I am immobile.\"\n\nLord sir? What in the hell was she on about?\n\nHartwell was nodding to all of this. It was then that he noticed that the female was starting to cry violently. \"Why are you crying?\" He asked.\n\nThe female looked at Hartwell through her tears confused, \"Crying Lord sir? I am unfamiliar with that term.\"\n\n\"What you're doing from your eyes.\" Hartwell told her.\n\nThe female cast her eyes down, then the tears started to come faster. \"I am sorry Lord sir. I did not mean to waste liquid in front of you. I accept what punishment you deem necessary.\"\n\n\"Punishment? What in the hell do you mean?\" Hartwell said, then immediately regretted it when he saw the female cringe back from him.\n\n\"I am wasting something Lord sir. However you wish to punish me, I will accept. It is after all your right as a male.\" The female told him.\n\nHartwell's mouth dropped open as he could only stare at her momentarily. \"That is the biggest load of shit I have ever heard!\" Again Hartwell regretted his action as the female started to shake violently.\n\nWithout raising her eyes the female whispered, \"When you kill me Lord sir, could you please make it fast? I know I do not deserve it, though I beg you to.\"\n\nThis time it was Hartwell that shook violently, not from fear, more from the extreme anger he was feeling. What the hell kind of people were hers? If they cried, they were wasting? Hartwell was doing all he could do to keep his temper under control.\n\nBarely keeping his voice low he stated, \"I am not going to kill you nor have you killed. Do you know where you are?\"\n\nThe female slowly nodded as she whispered, \"Yes Lord sir, I am in a government medical place. The fact that I am here, means that the leaders think I have many more good breeding years in me.\"\n\nHartwell's eyes went wide as he stared at the female in disbelief. Again the female drew back as far as she could, when Hartwell snapped a section of the table off that he had ahold of.\n\nAs calmly as he could, Hartwell stated. \"No, you are aboard an EIG of the Empire. This is a regular medical bay of that ship.\"\n\nThe female tentatively asked her lips trembling, \"The empire that recently destroyed a great many Cregon ships?\" Hartwell nodded, then noticed that the female was even more afraid. \"NO!\" She was whispering even lower. \"You are part of the barbarian hoard that has destroyed so many.\" \n\n\"Ha!\" Hartwell almost snorted then covered his mouth. \"Not as barbaric as your people, to attack with so many ships! Barbarians wouldn't come in as big a force if they didn't mean to invade.\" ",
        "\"Lord sir, we were not attacking. We were only protecting our selves. We...\" The female started.\n\n\"You were in our galaxy; therefore WE were protecting ourselves.\" Hartwell almost growled. \n\n\"I am sorry Lord sir, that is what I heard the males speak of. We females do not usually know of such things. We are seldom allowed to hear such, let alone know of them.\" The female whispered her head as low as she could get it.\n\nHartwell was stunned at this turn of events. Sighing he looked away from the female. Damn it, was going to be a long few next days.\n\n_____________________________________________________________\n\nWilliam Hartwell was doing all he could to keep his uncle Trent from exploding. The idiots that had brought the artillery up had forgotten the ammunition. His eyes wide, he wondered just how they had survived as long as they had.\n\n\"Did you finally manage to get those idiots to get it here? Trent asked. \n\n\"Yeah, I chewed them out for a good while. They said they took what you said literally. You said bring up the equipment nothing else. I guess they thought that you had ammo here.\" William replied.\n\nTrent shook his head, \"Dear god, how in the hell are they still alive? You'd think that they were smarter than that.\" William could see that his uncle was about to explode again if he didn't calm him.\n\n\"I guess they were hiding a lot better than we thought, Uncle Trent. You've got to admit they are very helpful.\" William told his uncle. \n\n\"That's about the only thing they are.\" Trent grumbled.\n\nBoth men stepped back as the artillery was moved into position. Trent smiled with an almost gleeful look on his face. \"Fire! Blow the hell out of that place, plus the asshole in there!\" Trent yelled.\n\nInside the bunker the scarred face leader had been keeping a watchful eye out. A few hours after they had received initial word heavy activity was detected.\n\nHe'd noticed a buildup of personnel out there, he also had a bad feeling watching them move but getting no closer. \"I think we need to make a retreat, NOW!\" The leader was yelling.\n\nAll of the rest of the men were close behind the leader and Duke as they left the building. Less than ten seconds after they left it, the bunker exploded.\n\nThe concussion of the first hit, knocked all of them off their feet. The leader was up with the Duke over his shoulder as a second blast hit a little further back. Cursing, the Leader took off as he heard several of his men scream, then nothing.\n\nTrent was watching a read out as the first of the shells hit. Cursing, he saw almost all that were inside had managed to get out. Then he saw that the second and third caught a few of those trailing. \n\n\"Son of a bitch!\" Trent was yelling as he saw that of the two in front, one was the Duke. He then smiled slightly, good the asshole was injured, at least it looked that way. 'Bout time that ass got back some of the pain he'd been giving for years.\n\nTrent was about to send men after them, when there was a commotion at the back of the camp. \"Get a team ready to go.\" He was saying when a voice next to him shocked him. \n\n\"I suggest that you not. I know them, your men wouldn't last long at all.\" The voice told him. \n\nTrent and William were reaching for their guns when they were shocked to see an average height, well-muscled man. \"Just who in the hell are you?\" \n\nThe man held out his hand as he stated. \"Captain, David Greeson of the Imperial special forces.\" Shaking both men's hands they both looked at each other shocked.\n\n\"How in the hell did you get in here? We have watches posted all over the place.\" William replied.\n\nHere Greeson smirked a bit, \"They aren't nearly as good as I am. So, as I said let me and my squad go. Those are from a sect that we THOUGHT we had defeated.\"\n\nTrent was also smirking as he drew his gun, then was shocked as it was suddenly in the hand of the Greeson person. He started to say something when he realized what the young man had said.\n\n\"Imperial special forces? Then the emperor is aware of our situation?\" When Greeson nodded he continued. \"Then the Emperor is here?\"\n\nGreeson took a deep breath as he stated, \"Well not here on the planet. It seems that he had to get married, so he went back to the Imperial home world. The rest of us are here to aid you as much as we can.\"\n\nWilliam watched the whole conversation still not completely convinced. \"How are we to know that you aren't just a plant by this supposed sect? I for one...\"\n\nWilliam was suddenly a foot off the floor. \"I am in no way an evil, glory seeking ass! Do not make the mistake thinking we are like them.\" Dropping William with a thud, Greeson slightly growled then said, \"If we were, you'd all have been dead at least thirty minutes ago.\"\n\nWilliam adjusted his clothes as he nodded his agreement. \"I apologize I...\" \n\nGreeson held up his hand to stop William. \"I am not here to hurt you, rather to help. Besides I am sure that SHE would be pretty pissed if I did hurt you.\"\n\nWilliam and Trent were both nodding as he said this. Then they both stopped as they looked at Greeson. \n\n\"Uh, she? Just who are you talking about?\" Trent asked.\n\nGreeson turned toward Trent as he very seriously looked the male directly in the eyes. \"Why Miss Hartwell.\" Both Trent and William's mouths dropped open, even as a wide grin spread across Greeson's. \"She works for the Emperor now. Has been for some time. It seems, that she is one of the three most important people in the empire.\"\n\nGreeson was smiling even broader as both males seemed to be struck silent. \"Lucie?!\" Was all Trent could get out.\n\nWilliam finally found his voice then sank to his knees. Tears were starting to flow as he stated, \"She's alive? My god she's alive!\""
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-64"
}