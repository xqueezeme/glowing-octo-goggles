{
    "title": "Three Square Meals Ch. 099",
    "pages": [
        "The view out of the Citadel's upper-storey windows was incredible, the sky over Terra lit up in beautiful shades of crimson and orange as the Sun began to set. The warm evening light cast dramatic shadows over the endless field of fortifications which ringed the base, the defensive emplacements a flurry of activity even at this late hour. Towering mechs and massive hover-tanks were being manoeuvred into position, while marching around them were squads of troopers who'd been deployed to the various bunkers lining the walls and trenches.\n\nAdmiral Jayanti Mishra barely gave the dramatic scene a glance as she strode purposefully along the corridor. Her mind was abuzz with all the rumours she'd been hearing, her state of anxiety increasing over the afternoon as one Admiral after another had discreetly contacted her to try and find out what was going on. One of the rumours was actually news to her and had left her stunned, which was why she heading to the Fleet Admiral's office to find out if it was true.\n\nOpening the door without bothering to knock, she marched inside and glanced at the attractive olive-skinned brunette sitting behind the desk. \"Is he in?\" she asked curtly.\n\nRear Admiral Carmela Moreno frowned at Mishra's sharp question. \"I don't appreciate the tone, Jayanti. If you tell me what this is concerning, I might be able to schedule an appointment.\"\n\nMishra bristled at the other woman's haughty attitude. \"I don't have time for your bullshit today, Carmela. Is Vincent in his office or not?\"\n\n\"How dare you speak to me like that!\" the Latina snapped indignantly. \"I'm a Rear Admiral and due the respect my rank entails!\"\n\nMishra's eyes narrowed and she stalked over to the desk, pointing her finger at the other woman. \"Everyone knows how you earned your 'promotions', Carmela. Trust me, I'm giving you far more respect than you deserve!\"\n\nCarmela flinched like the older woman had slapped her, but she managed to quickly get herself under control. Half-rising from her chair in anger, she glanced at the door to the Fleet Admiral's inner sanctum. \"Vincent won't stand for this! Mark my words!\" \n\n\"Right, so he is in then,\" Mishra said triumphantly, whirling around and striding to the door. \n\nIgnoring Carmela's shrieks of protest, Mishra barged her way into Vincent's office. He was sitting behind his massive desk, an overly ornate piece of furniture that was designed to awe his underlings, the surface polished to a mirror-like sheen. Buckingham didn't look her way when she entered the room, as he was in the middle of a holo-call to an attractive middle-aged blonde, who was currently scowling at him in irritation. \n\nBuckingham leaned forward and said earnestly, \"Please stop hanging up on me, Natalie, this is really important. I want you and Annabelle to head to Maryland starport. I've arranged a shuttle and-\"\n\n\"You lost the right to ask me to do anything after cheating on me with that slut, Vincent!\" the woman snapped, cutting the Fleet Admiral off mid-sentence.\n\nBuckingham winced at her comment. \"But you need to leave Terra for your own saf-\" \n\n\"You've got a lot of nerve calling me over and over like this,\" the blonde snorted, her eyes blazing with anger. \"I told you before, I'm sick and tired of listening to your goddamn lies! Goodbye, Vincent, don't call again.\" \n\nBuckingham's temper flared and he yelled, \"I'm just trying to protect you and our daughter! Just fucking listen for once, you stubborn bitch!\"\n\n\"Stubborn bitch?! Go fuck yourself!\" the woman screamed in fury.\n\nBefore he could say another word, she cut off the comm channel, leaving him staring at a blank screen. That was when he noticed that Admiral Mishra had entered the room and he slumped back in his chair. \"I thought she'd stop being a pain in my ass after the divorce,\" he muttered with a grimace. \"It's been four years and she's still being a total bitch.\"\n\n\"We need to talk,\" Mishra said with a frown, walking across the room to his desk.\n\nBuckingham nodded and sat up straighter. \"Alright, Jayanti, what's bothering you?\"\n\n\"The rumour mill is getting out of control,\" she replied, pacing across his office. \"I've had nearly a dozen Admirals interrogating me for information; they all want to know about the loss of comms with the Dragon March and the withdrawal of forces from the borders... Everyone's talking about it and we can't keep a lid on this much longer! You need to tell the Admiralty something!\"\n\nThe Fleet Admiral steepled his fingers and said confidently, \"Don't worry about that, I'll address High Command tomorrow.\"\n\n\"That's the eve of the battle, Vincent!\" Mishra protested. \"You can't just announce that there's a Kintark invasion when they're right on our doorstep, High Command will have a fit! You'll be lucky if you don't get arrested for dereliction of duty!\"\n\nBuckingham's eyes narrowed and he shook his head. \"That's why we need to wait until the last moment! No one will be foolish enough to threaten the command structure right before a battle. When we achieve a glorious victory, all my decisions will be validated!\"\n\nMishra considered the size and power of the Kintark armada reported by the survivors of the Iota Leonis massacre, and looked at him dubiously. \"You're taking a massive risk. What about the fleet prepar-\"\n\n\"It's all in hand,\" he said dismissively, cutting her off. \"I've had every ship in range recalled to Olympus to undergo last-minute maintenance and resupply. Three quadrant fleets have already taken up defensive positions in the Sol system and all the rest will be arriving in good time before the battle.\"\n\n\"All of them? To the Sol System?\" Mishra asked, her eyebrows climbing. \"But I thought you were leaving two fleets in Alpha Centauri to defend Olympus Shipyard?\"\n\n\"I'm changing our plans... The Kintark will be going after Terra, so we have to protect it with everything we've got. Just imagine the public outrage if the Kintark start an orbital bombardment of the Terran Federation capital! The media would be all over it and High Command would lose our last shred of credibility!\" Buckingham shook his head. \"No, we have to protect the homeworld at all costs.\"\n\nMishra glanced at the holo-pictures of a young man and woman on Buckingham's desk. She carefully composed her expression and said gently, \"Listen, I know your son's safe with Morgan's fleet, and you want to-\"\n\nBuckingham saw her eyes flicker over to the picture of his son and daughter and he quickly interrupted her, \"She's got nothing to do with this! I'm making a sound strategic decision, for the good of High Command and the Terran Federation. This is not up for discussion!\"\n\nGritting her teeth, Mishra met his fevered gaze. \"Alright then, let's talk about something else... What happened to Lynette? I've been hearing all sorts of disturbing rumours...\"\n\nA gloating smile lit up Buckingham's face and he relaxed in his chair, interlacing his fingers behind his head. \"Ah yes, poor ill-fated Admiral Devereux... She was shot attempting to resist arrest for treason.\"\n\nMishra fell back a step, the shock evident on her face. \"Shot?! But she had lots of allies... they'll be out for blood!\"\n\nBuckingham sneered derisively. \"She upset half of them trying to wheedle her way into my confidences. Fortunately, I suspected what she was up to from the start, so all she ended up doing was alienating most of her support base. No... Admiral Devereux won't be anyone's martyr.\"\n\n\"What about the Lion though?\" Mishra asked, a flicker of fear crossing her features. \"He was her champion. When he finds out what happened to Devereux, he might come after you!\"\n\n\"Just let him try it. If he does raise a hand against T-Fed troops, we've got the bastard. His reputation will be in tatters,\" Buckingham replied, with a chuckle of contempt. His face suddenly twisted in anger, a disturbing gleam in his eyes as he gloated, \"I'll show him what happens when you cross Terran Federation High Command! If he'd shared all his tech with us, then we could have been allies, but no... he had to keep it all for himself. All his acts of 'heroism'... they were just a trick to lure us into a false sense of security! He was just waiting to work with his alien allies to bring us down all along! Well I saw through his schemes... his and Devereux's! They just wanted to oust me from my position, but I was too smart for them, for all of them! Just wait, I'll teach anyone who crosses me...\"\n\nMishra listened to Buckingham's ranting in shocked silence. With appalling clarity, she realised he'd finally snapped. Her mind whirred as she tried to work out what had triggered this paranoid madness to take hold... They'd all been under such a huge amount of stress recently, having to deal with such unusual circumstances, so it was a struggle to pinpoint the exact moment when Buckingham had taken a break with sanity.\n\nPerhaps it had started with the stress of the failed Kintark invasion, which had led to the ignominious Battle of Regulus. What should have been a glorious capstone on Buckingham's career as Fleet Admiral had ended in a desperate fight for survival, until John Blake rescued the Terran forces from destruction. Then there was the shocking unmasking of the traitors Norwood and Lynton, both of whom Buckingham had known and trusted for years... Mishra could easily see that being a huge contributor to his paranoia. \n\nFinally, there was the revelation that a highly advanced, vastly powerful, hostile alien species was attempting to bring down the Terran Federation. That news had scared Mishra out of her mind and she'd had trouble sleeping for weeks after the Lion told them about the threat his fellow Progenitor posed. She dreaded to think how Buckingham had taken it, but along with everything else, that terrifying announcement might have been the biggest contributing factor that tipped him over the edge.\n\nThat was a truly terrifying thought. Buckingham was losing his mind and the Terran Federation was about to embark on the biggest battle of its bloody war-torn history. What made it even worse was there wasn't anything Mishra could do about it, not this close to the battle. As much as she loathed to admit it, Buckingham had been right; deposing the Fleet Admiral one day before the battle would be an absolute disaster. There'd be a gaping hole in the command structure where Buckingham had been and the competing Admirals would start their vicious jockeying for position as his replacement. If she called an emergency session of High Command to expose him, she'd also be putting herself at risk of retribution, just as Devereux had to her unfortunate demise.\n\nAt least when the battle started, the Admirals themselves would be making most of the decisions, so Buckingham wouldn't be a factor. Throwing all the Federation fleets into the defence of Terra left Olympus terribly exposed, but by massing the firepower of their fleets, at least they could avoid being picked off as two smaller separate groups.\n\nIt was with a heavy heart that Mishra politely excused herself from Buckingham's company and left his office. She ignored a glacial stare from Carmela Moreno as she departed, lost in thought as she walked out into the corridor beyond. She couldn't help wondering if she was making the right decision... the entire fate of the Terran Federation hinged on the upcoming battle and they were being led by a madman. Mishra felt a shiver run down her spine, like someone was walking over her grave. She desperately wished that they'd listened to Devereux at the start and called the Lion for help, but now it was too late...\n\n***\n\nJohn stepped out of the express grav-tube onto the Combat Bridge with Rachel at his side. Jade was waiting there to greet them and she pulled his tawny-haired companion into a warm hug, then began to kiss her deeply. John was about to step into an armour equipping frame to get geared up, when he heard a startled squeak from Rachel, followed by a sultry moan. When he glanced back their way, he saw that the Nymph was still kissing the brunette, and Rachel's throat was bobbing as if she was swallowing.\n\nJade's thoughts swirled into his mind. *Just giving Rachel her share, Master.*\n\nHe'd been so distracted by his earlier conversation with the young doctor that he'd forgotten that Jade had planned to feed all the girls. Sure enough, when he closed his eyes, he saw that Alyssa and all her wards were now shining brightly in his mind, an active connection open between him and each of them.\n\nSealing himself into his golden lion Paragon armour, John locked the plates into place with the thumb control, hearing a satisfying series of clicks. He collected his sword and a Quantum rifle from the weapon racks, then watched as Jade and Rachel finally parted. \"That looked new,\" he said with a grin.\n\n\"I thought I'd try something a little different,\" Jade explained as she traced a finger along the brunette's jawline. \"I made my tongue hollow to feed this beautiful little kitten.\"\n\nRachel actually blushed as she kissed the Nymph's dark-green hand. \"That was lovely... very intimate.\"\n\nJade turned to accompany John down the ramp from the armoury, leaving Rachel to get into a suit of armour. The rest of the girls were already at their stations and equipped for battle, the only exception being Faye. She scooted over on his console to give him room to sit down, a playful smile on her face.\n\n\"Okay, what's the current situation?\" John asked, studying the Sector Map with interest. \n\nThe map displayed all the active contacts picked up by the long-range sensors, revealing scores tagged in red, located within the gravity well of a red giant star marked as the Alpha Vulpeculae system. He noticed that there were hundreds more contacts marked on the map, but they were all displayed in grey.\n\nAs if reading his mind -- which she literally was of course -- Alyssa gestured towards the map and said, \"We think the ships marked in red are the Vulkat fleet; we've tracked movement from those vessels. We're ten minutes away from the system, so not close enough yet to have any real details. All those contacts in grey are wrecked ships...\"\n\n\"There's so many of them,\" John murmured, letting his eyes roam over the vast scattering of debris sites.\n\n\"Some of those wrecks are really fucking old,\" Dana said, highlighting one and zooming in on it. \"Faye said she's been tracking shitloads since we crossed the border. Going by the particle scoring, this one is at least ten thousand years old...\"\n\nJohn studied the light-green ship in fascination, noting the peculiar design that appeared to be an upended \"U\", with big engines at the end of each trailing section. \"I've never seen a ship like that before.\"\n\n\"It might be an ancient Vulkat ship, but I doubt it,\" the redhead said, tapping a finger on her chin. \"Most species tend to build roughly-similar looking vessels, but that one looks nothing like the black and orange ships the Brimorians showed us. There's tons more ships too... most of them are super old and there's loads of different designs.\"\n\nShe swiped her hand across her console and then cycled through a range of wrecks, showing their vastly different appearance. All had suffered catastrophic damage of one kind or another, with many of the hulks now so worn that it was clear they came from a bygone era. There were a host of blue and purple Brimorian ships amidst the fields of carnage, each looking like they met their fate far more recently, and sporting dozens of impact craters over their hulls.\n\n\"This is creepy,\" Rachel said with a shudder, as she walked down the ramp to join them. \"It's like we're trespassing in a starship graveyard.\"\n\n\"Do you reckon the Vulkat killed all these?\" John asked quietly. \"Or do some of them date back to whatever cataclysm took out their empire?\"\n\nCalara turned in her chair to make eye contact with him. \"I suspect the latter. Most of the really old ships were destroyed by beam weaponry, but the recent kills --like the Brimorians-- were taken out using explosive ordnance.\"\n\n\"And the Vulkat favour missiles...\" John said, looking thoughtful.\n\nThe Latina nodded. \"Exactly.\"\n\nOn a hunch, John glanced at each of the twins. \"Have you spotted anything that looks like a Maliri ship?\"\n\nTashana spoke for them, shaking her head. \"You were thinking there might be Thrall vessels? I had the same idea, so I've been searching through the wrecks, but I haven't spotted anything that looks remotely like a Maliri design.\"\n\n\"So it might not have been a Progenitor and his thralls responsible for ending the Vulkat Empire?\" John asked, not sure whether he should feel relieved or disappointed.\n\n\"We haven't got enough evidence one way or the other,\" Tashana replied, spreading her hands in a gesture of helplessness. \"Thrall vessels might have been involved, but they could have recovered or destroyed any lost ships to prevent the capture of their technology.\"\n\n\"Or the Progenitor's forces massively overpowered all these ships, and gave the spiders and their pals a brutal smackdown,\" Dana suggested, her expression uncharacteristically grim.\n\nJohn gave them each a nod of confirmation. \"Both seem like sensible conclusions, but you're also right that we can't do much more than guess at the moment.\" \n\n\"So what's the plan for the actual mission?\" Sakura asked, spinning her chair so she could face him.\n\nHe eased back in his seat and glanced around the group. \"I suggest we go into low-energy mode when we reach the Alpha Vulpeculae system. Then we take the stealth shuttle and sneak aboard the biggest ship they've got and start looking for the Eternity Crystals.\"\n\n\"Creeping around an enemy ship with no deck plans...\" the Asian girl muttered, shaking her head. \"We're going to stir up a real hornet's nest.\"\n\n\"I thought they were arachnids, not insects?\" Rachel asked with a raised eyebrow and the hint of a smile teasing at her lips.\n\nSakura rolled her eyes. \"You know what I mean. It won't take long for us to start tripping alarms.\"\n\n\"Any alternate suggestions?\" John asked, open to her ideas.\n\nShe gave him a brisk nod. \"You could set up a defensive position somewhere inside and I'll head off scouting on my own. If I locate anything interesting, then I let you guys know where it is and you can make your way there.\"\n\nJohn paused for a moment to weigh the merits of her plan. \"If you're sure you can avoid getting detected, that might actually be our safest bet.\" \n\n\"There's no guarantees, but I'm pretty sure I'm sneakier than old bigfoot over there,\" she said with a grin, her eyes darting to Dana.\n\n\"Hey!\" the redhead protested, playing along.\n\nAlyssa turned in her chair and put her arm on top of John's. \"Who do you want to take with you?\"\n\n\"I think we'll need as many guns as we can get, while still leaving the Invictus and Raptor manned,\" John replied, looking at Jade, Calara, and Faye in turn. \"That means you three are on guard duty. I really hope you have a boring couple of hours... if not, then you might be in for a hell of a fight.\"\n\n\"Just say the word and we'll be on our way,\" Calara said, glancing at her two companions, who quickly nodded their agreement.\n\n\"Alright, let's head down to the stealth shuttle then,\" John said, rising from his seat. He smiled at Calara and added, \"If I ask you to promise to return the Invictus to me without a scratch, are you going to wreck it again like last time?\"\n\nThe Latina shook her head. \"No guarantees, Admiral, but we'll try really hard not to.\"\n\nJade joined her in saying, \"Don't worry about that, Master. I'll be piloting this time.\"\n\n\"Hey!\" Alyssa protested with a grin, standing to accompany John. \"That wasn't my choice, someone decided on a pre-battle catnap and we couldn't wake her lazy bones!\"\n\nThe Nymph actually blushed, the first time John had ever seen her react that way before. \"I'm really sorry about that... I really didn't mean to-\"",
        "Alyssa was already at her side before Jade could finish the sentence. She leaned down and gave the flustered alien girl a tender kiss. \"I was only teasing, sexy.\" She gave her a reassuring smile. \"Besides it was all John's fault for blowing your mind...\"\n\n\"Hey, don't bring me into it!\" John called over his shoulder. He paused on the ramp and turned to study the girls. \"Just keep us informed of any problems. Jade, I want you to keep me updated, Calara can do the same with Alyssa.\"\n\n\"Of course,\" Jade replied, looking happy once again. \n\nWaving the Bridge crew goodbye, John led his squad down to Deck Nine, then through to the Primary Hangar where the stealth shuttle was waiting for them.\n\nWhile Dana was opening the airlock, Irillith studied the small black craft with a critical eye. \"Isn't it going to be a bit cramped in there for all seven of us?\"\n\nAlyssa put her arm around the Maliri girl's waist and bumped hips with her. \"We'll just have to get cosy then...\"\n\n\"That would be a far more appealing thought if we weren't wearing full body armour and loaded up with guns,\" Irillith replied archly.\n\nDana grasped her Reaper Cannon again and headed into the shuttle, beckoning behind her. \"Stop bitchin', it'll be fine. There's actually quite a bit of space.\"\n\nAlyssa slid into the pilot's chair, while Dana quickly ran through the shuttle's controls as well as how to activate the stealth functionality. There were only four seats in the rear of the shuttle, but fortunately they were fairly robust, designed as they'd been for full-metal cyborgs. He propped his sword and Quantum rifle against the wall, then pulled Irillith onto his lap. \n\n\"There, that's not so bad, is it?\" John asked, running a gauntlet over her sleek, form-fitting body armour.\n\n\"Dana was right, I should stop bitching,\" the Maliri girl said with a radiant smile, touching her clear-crystal faceplate to his.\n\n*We just jumped into the Alpha Vulpeculae system,* Jade informed him. *The Vulkat fleet is clustered near a gas giant on the fifth orbital ring around the star. We'll get you closer using asteroids as cover, then you can cover the last in the shuttle.*\n\nThe huge hangar doors began to open and John was close enough to the cockpit to be able to see the red glow from the system's massive star shining into the hangar. A few seconds later the star fields outside began to shift as the Invictus pivoted, their parent ship taking them deeper into the system.\n\n\"Can you bring up a System Map?\" John asked his statuesque pilot. \"Jade mentioned they were planning on using asteroids as cover.\"\n\n\"I'll patch through the sensor data from the Invictus,\" Alyssa said, while tapping a few buttons on the black console, a System Map appearing in the middle of the passenger cabin. \"Mikaboshi must have used that for briefing his assassins.\"\n\nThe Alpha Vulpeculae system consisted of a small barren planetoid, three gas giants, and two vast fields of asteroids located on the second then the sixth orbital paths around the star. Alyssa zoomed the map in on the dense outer asteroid belt, their view lingering on the massive chunks of rock floating like capital ships amongst an unending fleet of smaller asteroids. John glanced across at Tashana who sat opposite and she gave him a grim nod when she met his inquisitive gaze. \n\n\"I've seen exactly the same thing in the Unclaimed Wastes and I know Mael'nerak obliterated Achonin planets there,\" she said quietly. \"It might not have been a Progenitor that destroyed those worlds, but there's definitely enough mass for a decent sized planet.\"\n\n\"A colonised world just snuffed out in an instant,\" Rachel murmured, her face reflecting her troubled thoughts. \"How could someone do something like that?\"\n\n\"That Quantum Annihilator on the moon would definitely do the trick,\" Dana replied, looking lost in thought. \"From the amount of power that thing was gathering, one shot would have blown Terra to bits.\"\n\nThe brunette shook her head and said softly, \"No, I meant: what kind of monster could pull the trigger? Billions of lives just gone... it doesn't bear thinking about.\"\n\n\"We're not going to let that happen again,\" John said firmly, clasping her hand. \n\nThe shuttle began to tremble, then the vibrations stopped a few seconds later as the vehicle lifted off the deck. John glanced out the cockpit window and saw that they were now in the midst of a sprawling asteroid belt, with enormous chunks of rock floating motionless as far as the eye could see.\n\n\"That's as close as Jade can safely take us ,\" Alyssa informed them as the black shuttle crept out of the hangar and into space beyond.\n\n\"Can you show me the Vulkat fleet?\" John requested, turning his attention back to the System Map.\n\nAlyssa tapped the console screen a few times and the holographic image was covered with a Tactical overlay, dozens of active spacecraft now appearing on the map. The Vulkat vessels were instantly recognisable, with their backward swept limbs, looking vaguely like a black, long-legged spider, with orange stripes around each backward-sweeping structure.\n\nDana shivered and gave John a cute frown. \"I can't believe you talked me into this shit... Cyborg zombie spiders, I can't imagine anything worse!\"\n\n\"Cybernetic zombie clowns?\" Sakura suggested with a pained expression. \n\nThe redhead laughed and hugged the Asian girl. \"Alright, you win. That would be ten times worse!\"\n\nJohn smiled at their banter, but he didn't take his eyes off the Vulkat vessels, watching as they flew low over the cobalt-blue gas giant. \"Any idea why they're flying so close to that planet?\"\n\nDana studied one of the smaller vessels for a moment, murmuring her thanks as Alyssa zoomed in the view even closer. After a lengthy pause, her eyes widened in surprise. \"Looks like they're using some kind of fuel scoop to siphon hydrogen.\"\n\n\"Wouldn't it need to be refined first before they can use it?\" John asked, frowning in confusion.\n\n\"Normally, yeah... Perhaps the Vulkat found some way of getting around the problem? That destroyer-sized ship is way too small to have a built-in gas refinery.\"\n\n\"Something else we could keep our eyes open for,\" Sakura suggested optimistically.\n\n\"We'll focus on the Eternity Crystals for now,\" John said, still watching the map. \"If we stumble across anything else worth investigating, then great, we can take that too, but let's try and stick to our primary objective.\" He pointed to a much larger Vulkat vessel in the centre of the fleet. \"That's got to be some kind of command ship. Unless any of you ladies think one of the smaller ships might be a good prospect, I suggest we board that one.\"\n\n\"That'd be my first choice,\" Dana agreed, before her brow furrowed. \"If it wasn't a massive fucking spider nest!\" \n\nJohn glanced to his right. \"Alyssa, can you get us to the big ship in the middle of their fleet?\"\n\nThe blonde was manoeuvring the shuttle deeper into the asteroid field, hugging the huge hunks of rock as she wove her way through the slowly tumbling maze. \"Yeah, that won't be a problem, but it'll take me a little while. It'll be slow going with stealth mode activated.\"\n\n\"Yeah, but it's worth it, our energy profile will be tiny!\" Dana exclaimed. \"The Invictus couldn't pick this shuttle up even if I knew it was coming. Unless the Vulkat sensors are like... ten times stronger than ours, there's no way they'll be able to detect us.\"\n\n\"Let's hope they don't give us any surprises then,\" John said with a smile. \"How long until we reach the command ship?\"\n\n\"About twenty minutes,\" Alyssa replied, after a quick glance at the System Map.              \n\n***\n\nMaria Fernandez pottered around the kitchen trying to keep herself busy, but she was far too jittery to concentrate on anything. She always got that way when Jack was about to call, butterflies fluttering away in her stomach as she waited to speak to her husband. They'd been married over twenty years, but he still made her feel like a lovesick teenager, and he'd told her on numerous occasions that he felt exactly the same way.\n\nThe last two weeks he'd been away had been excruciating and she found herself missing him more than ever. A significant factor to her feelings of longing had been Calara's award ceremony. When she'd spoken to her husband after the ceremony, Jack had been overjoyed, the pride still shining in his eyes after seeing his daughter awarded the Stellar Cluster... he'd never looked more handsome. \n\nMaria knew just how he felt and more than anything she'd wanted to make love to her husband that night, to celebrate their joy as proud parents. She had promised to blow his mind when the Damocles returned from its three-month posting on the Kirrix border and Jack had got that wistful look on his face that she loved so much. It was that special look that was just for her, telling her with his eyes just how much he missed her and wished he could be in her arms.\n\nLetting out a groan of frustration, Maria gave up on trying to focus on any chores and went into the lounge to wait for his call. Trying to kill time, she activated the Holonet and started searching the channels for any news. It always amused her to see how infrequently the news accurately reported what was really going on, but then again, they didn't have access to the same special sources that she did.\n\nFlicking through the channels she sought out TFNN, interested to see if they were running any more exclusives about the Lion. Those reports were interesting in themselves, but they had the added bonus of letting her find out snippets of information about her daughter. Her old navy colleagues had already been astonished by Calara's achievements, but the video of her in action against the Kirrix had left them awestruck. As much as Maria worried about her daughter's safety, she couldn't help marvelling at the kind of life she was leading. \n\nMaria had always had a soft spot for the kindly Trankarans, especially after the way they'd helped care for her after her accident on their homeworld, so it had been wonderful to see Calara riding to their rescue. Thoughts of that decades-old injury brought a smile to Maria's face for the first time, instead of the usual sad frown. She ran her hand down her thigh, still finding it hard to believe that Rachel had cured her of a wound that had plagued her for so many years. Maria had spent the last two weeks stretching herself and testing her newly-healed limb, finding to her delight that her old flexibility and endurance had returned with gusto. She couldn't help chuckling to herself when she thought about Jack's return... he was in for one hell of a wild night!\n\nShaking off her wistful thoughts of her husband's homecoming, she focused on the news, frowning in concern as she read the headlines. She un-muted the screen and listened to the immaculately-groomed anchor.\n\n\"... still no sign of Jehanna Elani, TFNN's lead anchor,\" Bill Armstrong said, his expression showing real concern. \"Police are still investigating leads after she was abducted from a parking garage beneath the Balcova hotel and are appealing for witnesses to come forward.\"\n\nMaria was surprised at that flash of genuine feeling from the reporter; it was the first time the perceptive Latina had ever seen the TFNN anchor show any sincere emotion. She remembered the beautiful co-anchor he was referring to, having watched the lovely young woman reading the news scores of times after the last few weeks, and she sincerely hoped Jehanna was okay. It hadn't come as a surprise that the dusky beauty had been the one covering all the stories about John Blake, because Maria had been able to tell within minutes that the girl was thoroughly smitten with her daughter's fianc\u00e9. \n\nNormally such an observation would have a protective mother's hackles up, but she knew how devoted John was to Calara, and considering their... unique... living arrangements they'd probably welcome Jehanna's attention. Maria had been shocked at that change in her daughter, seeing her blossom from a shy self-conscious girl into a woman so enthusiastically embracing her sexuality. She had initially thought it had been John who had brought Calara out of her shell, but after watching him and the girls interacting together on their last visit, it was obvious who had been the real guide to her daughter's self-discovery. \n\nNormally it was Jack that was intrigued by beautiful blondes, but after spending more time speaking with Alyssa during their last visit, Maria had been surprised at just how much she envied Calara. Alyssa had a way of looking at her with those piercing blue eyes that made Maria feel like the blonde knew her every naughty little secret fantasy, even those that would shock Jack. At the same time, she'd seen fascination and acceptance in the sultry young lady's playfully flirtatious gaze... Maria could only imagine how exciting it would be to go to bed with such a woman. She blushed, suddenly remembering that despite the blonde seeming so worldly-wise, she was only the same age as her daughter.\n\nIt came as a relief when the comm interface on the sofa flashed and Maria quickly fanned herself before answering the secure call. The Terran Federation insignia faded away, the winged sword replaced by Captain Jack Fernandez's handsome face. \n\n\"It's so wonderful to see you, Jack!\" she gasped, giving him a sparkling smile. \n\n\"You too, Maria,\" Jack replied, grinning back at her. \"You've no idea how much I've been missing you.\"\n\nMaria's heart skipped a beat, but not in a good way. There was something wrong, she could tell in an instant, just by looking at Jack's eyes. Despite his broad smile, she'd never seen her husband look so conflicted.\n\n\"I don't think I've ever found it so hard being apart from you,\" Maria replied, her eyes locked on his and saw a flash of acknowledgement in his soulful brown gaze. He knew that she knew.\n\nFalling into a familiar pattern of conversation, Jack glanced towards the Bridge from where he sat in his Ready Room. \"Mateo's doing well... he sends his love.\"\n\n\"Tell him he needs to write to his mother more! I want to hear all about that medical officer he's been dating, Emily, isn't it?\" Maria said with a warm smile, but inside her mind was whirring. She realised that the only reason Jack wasn't telling her about what was troubling him, was because he'd been ordered to keep it secret.\n\n\"Don't go teasing him about wedding bells, darling,\" Jack said with amusement. \"She's a lovely girl, we don't want to scare either of them off. Mateo said he's looking forward to introducing you to her, the next time we're near Jericho.\"\n\nMaria picked up on the unusual inflection in his voice; whatever was troubling her husband clearly involved the dates when he'd be returning from duty. She sighed and gave him a look filled with longing, \"I thought I'd get used to these three-month tours after all these years, but ten more weeks feels like an eternity!\"\n\n\"Mi amor por ti es para siempre,\" Jack replied, his eyes softening. \n\nWhile her husband's love might last forever, Maria could see the imperceptible flicker of very different emotions in his gaze... sadness, guilt, and remorse. \n\nHis expression brightened as he continued, \"We'll have to gather the whole family next time we get some shore leave, maybe go boating together again, that might be fun.\"\n\n\"That's a lovely idea, Jack! We could take picnics with us and eat by the river,\" Maria gushed, artfully playing her part. \n\nShe'd been waiting for Jack to drop any reference to a date and wracked her mind trying to remember the date of their last boating trip six years earlier. With shock, she realised Jack was telling her he'd be back in the Core Worlds in two weeks' time! Jack's cruiser, the Damocles, had just spent the last two weeks travelling to the Outer Rim, so she was astounded he'd suddenly been recalled -- something was obviously very wrong.\n\nJack saw the flicker of understanding in her eyes and chuckled as he nodded. \"Do you remember when Eduardo and Dylan started fighting and fell in the river? Have you heard from them recently?\"\n\nShe laughed along with him. \"Those two... always getting into scrapes.\" Except that never happened. Dylan was always a serious and reserved boy, very protective of his youngest brother, while Eduardo hero-worshipped him in return. Maria couldn't remember the two of them ever arguing. \"Now they're all grown up, they're too busy to call their mother.\"\n\nJack frowned as if annoyed at his sons, but she could see something else was bothering him. Dylan was still stationed in Port Megara on the Trankaran border and Eduardo was on the battleship Orion which was fairly close to the Core Worlds in a sector near the Ashanath border. Both her boys were in safe postings, so she wasn't sure what had so unsettled Jack.\n\n\"How about Callie, has she called to let you know a date for the wedding of the century?\" Jack asked, a smile teasing his lips.\n\nMaria shook her head and pouted playfully. \"Not yet... but at least we know the venue now!\" she replied, confirming that her daughter hadn't been in contact recently.\n\n\"Hopefully she'll be in touch soon. I really need to have a chat with her, about the wedding. I want to know how much time I've got to write my 'Father of the Bride' speech,\" Jack continued, wincing at the thought.\n\nWhat she saw in his expression shocked Maria to the core. Instead of pride, she saw that Jack was ashamed, but it wasn't directed at Calara... it was directed at himself. She concentrated harder on the subtle clues and hints he dropped, trying to build up the full picture of what had left him so distressed. The rest of the conversation went by in a blur, with Maria and Jack exchanging pleasantries and ending the call with loving words. For the first time in her married life, Maria wanted to end the conversation with her husband as quickly as possible, but they stretched it out to make sure all the hidden messages remained concealed behind innocuous chatter. \n\nAs soon as Jack closed the call, Maria brought up her messages index and began frantically scanning through the recent conversations between her network of service friends. They were a close-knit group, their friendships forged during their years at the Academy when they'd been training to become communications officers. It didn't take long to find what she was looking for, in a recent email from Commander Vivian Grayson, a communications officer based in the Citadel. Maria's eyes widened as she read the deeply unsettling message... \n\nHey guys! Hope you're all doing well, you know how much I miss everyone. I just wanted to share the pain and give you all a laugh at my expense... \n\nMy hubby invited his cousin Andrei to stay and it sounds like he's bringing his whole damn clan! I think our place is going to be chaos for a while, so no dropping by for a few weeks until I can turf them out and get my home presentable again!\"\n\nLove you all,\n\nViv\n\nMaria thought she'd been worried after speaking to Jack, but now her heart was thumping in her chest. She forced herself to reread the message again, going through the code-phrases that Vivian had made all her friends learn, checking them off against each sentence. \"Share the pain\" was a warning of an empire-level conflict, \"Cousin Andrei\" was code for the Kintark, and her friend mentioned \"home\" which was a reference to Terra. Unless Commander Grayson had lost her mind, she was actually trying to warn her friends about a massive Kintark attack and to stay well clear of Terra!\n\nJack had wanted her to get in contact with John and Calara to warn them that the border worlds on the Outer Rim had been abandoned and left undefended. Now Maria realised her husband clearly didn't know half of what was going on. She swiped across the comm interface and began scouring through hundreds of recent messages from her old colleagues, her eyes widening in horror as she caught up on exactly what had been happening within the Terran Federation recently...",
        "***\n\n\"Still no sign of an airlock?\" John asked, peering through the shuttle cockpit at the black hull of the enormous Vulkat command ship. \n\nAlyssa shook her head. \"Nothing yet.\"\n\nAfter activating the shuttle's stealth mode, they had crept into the middle of the Vulkat fleet, their tiny black ship no more than a ghost with its miniscule energy signature. John had never felt more vulnerable than when approaching the colossal Vulkat command ship in the unshielded shuttle. He knew that should they be detected, the girls in the Invictus would never be able to reach them in time to save them from the wrath of the hostile aliens surrounding them. It was like being a fly trying to sneak across a spider's web, where a single misstep would bring their swift and terrible end.\n\n\"How about that circular indentation over there,\" John said pointing to a bevelled disc on the hull. \"Or that one fifty-metres to the right...\"\n\nDana patted him on the shoulder. \"The first one is a missile launch tube, you can tell by the propellant scoring around the edges. That second one is probably a refuelling port.\"\n\nHe blinked in surprise and glanced at the redhead. \"How can you tell?\"\n\nShe pointed towards the hull as the shuttle swept past. \"Those raised edges look like clamping points, but with the angle of the hull at that point, I don't think it's an airlock as you'd struggle to form a vacuum seal. We're also near their main engines, so fuel storage is likely to be nearby. Oh, and I saw one of those smaller vessels with the fuel scoops linking up with one of those other big-ass ships. This ship's probably far too big to be trying atmosphere skimming with a fuel scoop and besides, I haven't seen any of those deployable vanes on the underbelly.\"\n\nAlyssa teased the flightstick to the left, feathering the turn with retro-thrusters. \"I'll head towards the main hull; we've covered most of this leg and I haven't seen anything promising.\"\n\nAs the nose of the shuttle turned to point towards the tear-shaped central body of the Vulkat mothership, Dana jabbed a finger straight ahead. \"That indented rectangular section on the hull... I bet that's a sealed Hangar!\" Her eyes narrowed as she leaned over Alyssa's shoulder and glanced to the right. \"There! I bet that's one!\"\n\nJohn tried to see what she was pointing at, but there wasn't enough room for him to see as well with the redhead in the way. When the blonde rolled the shuttle and lifted the nose, he immediately saw what had attracted Dana's interest. Amidst the orange stripe banding the hull was a black disc, with orange lighting about the circumference.\n\nAlyssa brought the shuttle closer, rotating them so that the airlock on the side of their ship aligned with the orange portal. She grimaced as they got closer and shook her head. \"The Vulkat airlock is the wrong size. It's too big... we can't make a direct connection.\"\n\n\"Just clamp us to the hull nearby and we'll do a spacewalk to the airlock,\" John suggested, turning back to pick up his sword and rifle.\n\nDoing as he asked, Alyssa touched down on the Vulkat ship's orange hull, then activated the magnetic clamps to stop the shuttle from floating away. She frowned in confusion when the clamps were unable to engage and had to activate a local tractor beam to keep them in place instead. Everyone was fully armoured in pressurised Paragon suits, so Dana walked over to a panel and swiped across the controls, venting out the atmosphere with a disconcerting hiss. As soon as the light on the panel flicked to green, she activated the single airlock door, exposing them to the vacuum of space.\n\nHopping out of the shuttle, they discovered that the magnetic soles of their boots were as ineffective as the docking clamps. Activating anti-grav suspensors for propulsion, they floated across the pitted surface of the old ship, manoeuvring their way towards the Vulkat airlock. John stopped at the large disc and glanced around, spotting a panel with very alien script written in glowing characters. \"Are you able to hack your way into this?\" he asked Irillith.\n\nThe Maliri hacker studied the interface with interest, her violet eyes glowing with a soft radiance. After a few seconds, she frowned and shook her head. \"It's purely mechanical. If there is some kind of data connection to the airlock control, I'm not able to access it.\"\n\nJohn turned to look for Dana, surprised the redhead wasn't all over the airlock already. He didn't spot her immediately as she had stopped a few steps back, squatting down to run her armoured hand across the plating beneath her feet. \"What is it, honey?\" he asked, seeing the bright golden glow shining from her eyes. \n\n\"The hull plating, it's organic!\" she gasped, a look of wonder on her face.\n\n\"The ship's alive?!\" John asked, glancing wide-eyed at the orange-striped section of hull beneath his armoured boots.\n\nShe shook her head and giggled. \"No, not like that. The Vulkat must have somehow grown this section of hull-plating; it's made from some kind of superfolded protein material... I've never seen anything like it!\"\n\nRachel knelt down and rapped a knuckle on the hull. \"Spider silk is formed from proteins. Maybe this plating is some kind of highly-refined variant of that?\"\n\nDana shrugged and replied, \"I've no idea how they made it, but I've had a look at the atomic structure. It's very tough and light... perfect for ship plating.\"\n\n\"Stronger than Crystal Alyssium?\" John asked, studying the hull with interest.\n\nThe redhead winked at him. \"Nope! But it's quite a bit stronger than titanium. I can see why the Brimorians had real problems with them if the Vulkat ships are well-shielded and well-armoured.\"\n\nJohn nodded thoughtfully, then glanced at the airlock. \"You reckon you can get this open?\"\n\n\"Let me take a look,\" Dana replied, floating over to join them. She crouched down by the panel, placing her gauntlet next to the locking mechanism. Her eyes glowed again and she stared intently at the control panel, her mind's view of the device expanding outwards as she visualised the components inside. She turned to look at Sakura and tapped a point above the control panel. \"Can you freeze this section please. There's an alarm behind two-foot of armour plating. Don't go too bonkers in case you break the trip line, but getting the internals down to minus-fifty should make it unresponsive.\"\n\n\"Yep, on it,\" the Asian girl replied, her right fist swirling with ice crystals as she squatted on the hull.\n\nDana glanced at Irillith then tapped a point on thirty centimetres below the lock. \"Can you channel some electricity through here please?\"\n\n\"Sure, how much?\" the Maliri girl agreed, kneeling beside her. \n\n\"Just start off gently then gradually crank up the voltage,\" the redhead replied, keeping her eyes on the hull. \n\nIrillith nodded, arcs of lightning jumping between her fingers as she placed her hand flat on the orange plating. She closed her eyes and the dancing electricity began to spark, growing in intensity. A few feet away, Sakura drew all the heat from the Vulkat hull, dropping the temperature way below freezing. Ice crystals swirled around her fingertips, frost growing on the hull like tiny white trees as she froze the alarm mechanism. There was a hiss as the circular portal cracked open, then the air rushed past them into the vacuum of space. The door segmented as it opened, spiralling back into the hull and allowing them access to the ship.\n\n\"Nice work, ladies,\" John said with an approving grin, before holding up a cautionary hand for the girls to wait. Stepping into the open portal, he checked the inner airlock to make sure it was safe, before turning and beckoning them inside.\n\nThe girls followed him inside, their eyes taking a second to adjust to the murky darkness inside the spacecraft, where the soft glow of starlight seemed afraid to enter. They found themselves in a long airlock chamber, with an identical inner door inside.\n\nIrillith paused a second then grabbed John's arm. \"We could just break open the inner doors and depressurise the ship... Maybe take out all the Vulkat crew before we even get started.\"\n\nJohn considered it for a moment then shook his head. \"Let's try to stay undetected as long as possible. If we can find what we're looking for, we might be able to slip out of here and back to the Invictus without them even knowing we've been here. Besides, they're bound to have sealed pressure doors to break up the ship into sections, so it's extremely unlikely we'll be able to take out the Vulkat in one go.\"\n\nShe grinned at him and shrugged. \"No problem, just a suggestion.\" Turning around, she sealed the outer airlock door behind them.\n\nDana had already examined the inner door and directed Sakura to freeze the alarm by the time Irillith was done. After opening that up with a quiet hiss of onrushing air, they got their first glimpse inside the Vulkat ship, the sight freezing them in their tracks. Outside the airlock was a wide corridor, at least double the width of those typical in a Terran Federation ship. The walls were black, with strange ribbing that formed an endless series of arches down the gloomy passage, looking like the inside of a giant's ribcage. \n\nDust motes were thick in the air, highlighted by an eerie pale light from lamps set into the walls, which cast forbidding shadows down the long hallway. The floor was scattered with strangely shaped husks, the broken fragments crushed underfoot by whatever roamed these ancient corridors... and they were ancient, John could feel it in his bones. There was something about the vessel, an eerie feeling that he couldn't shake, like they were delving into some archaic mausoleum where the living should not trespass.\n\nHe felt someone gently tugging his arm and when he glanced to his left, he saw Dana looked at him with wide, frightened eyes. \"Can we just forget about it?\" she whispered, visibly shaking with fear. \"Let's just go back to the Invictus...\" \n\n\"You feel it too?\" he asked quietly, releasing his tight grip on the barrel of his rifle to hold her quivering hand.\n\nShe nodded, revealing the whites of her eyes as she flashed another glance down the creepy passageway. \"We shouldn't be here...\"\n\n\"There's so much pain and grief in this place,\" Alyssa murmured, her voice reverberating eerily in the stultifying silence of the crypt. \"Millennia of heartbreak and sorrow... tormented wraiths that mourn the dead and loathe the living... I can hear their tortured screams echoing back over the aeons...\"\n\n\"Fuck me...\" Dana muttered, glaring at the blonde. \"Are you trying to get me to shit myself?!\"\n\nJohn hesitated, then glanced at Sakura. \"I completely understand if you want us to change plans...\"\n\nShe lifted her chin, her jaw firmly set. \"I'm not scared, I'll be fine.\"\n\nHe recognised her bold declaration for the brave lie that it was. \"I'll come with you, I don't want you roaming this place on your own.\"\n\nSakura hesitated then shook her head. \"I appreciate the gesture, but you'll slow me down. Trust me, you can't keep to the shadows like I can...\"\n\nJohn glanced at her white armour, then said to Dana. \"Can you drop the runes on her suit for a moment.\"\n\nDana nodded, looking relieved to have something to do to distract her. She touched the Asian girl's glistening white Paragon suit and the faint Progenitor script was swept away from the armour plating. John placed his hand on Sakura's shoulder then focused his will on the crystal Alyssium under his fingers. He leeched away the snowy-white perfection, dark swirls sweeping over her suit until the armour was as black as night. While the soldier in him wanted to sigh with relief at the far more practical colouring, he felt a flicker of regret, feeling lessened for lowering himself to the colours favoured by his Progenitor opponent.\n\nSakura watched Dana re-rune her black Paragon suit, then with a final nod to her friends, she was off... running into the ghostly depths of the Vulkat vessel.\n\nJohn watched her leave, then glanced at Alyssa. \"Alright let's move out. We need to find somewhere to hole up until Sakura's finished her scouting.\"\n\nThe blonde nodded and the girls slipped into formation, moving with fluid grace as they followed their Matriarch's instructions. John was flanked by the twins, with Alyssa directly behind him covering their rear, while Dana and Rachel spread out to the edges of their formation. The corridor was wide enough for them to effectively advance five-abreast, meaning that any incoming foe would be met with devastating fire from three Reaper Cannons, a Quantum Rifle, and a pair of Reaper pistols.\n\nThey didn't have to advance far before they came to the first set of doors, one on either side of the corridor. John held up a clenched fist and they held position in silence, while he amplified his audio pickups to maximum. Straining his ears for the slightest noise, he heard a faint skittering sound coming from inside both rooms, the noises exactly the kind he'd expect seven-foot-tall arachnids to make.\n\nWith a quick shake of his head he led the group onwards, reaching a crossroads fifty metres later. As soon as they stopped, he heard a scuttling approach from their right, so he darted his head out for a split-second. Seeing nothing in the shadowy darkness beyond, he sprinted across the junction, the girls rushing to keep up with him. \n\nSetting a faster pace now that he knew something might turn at the junction and head in the same direction, John advanced down the corridor at a light jog. He kept his rifle to his shoulder, ready to fire at the slightest sign of movement, readily admitting to himself that the unsettling interior of the ship had his nerves on edge. Spotting a second set of double doors, they froze as before, everyone remaining quiet so that John could listen for the slightest sounds in the adjacent rooms. After hearing nothing for ten seconds, he nodded to Dana, who straightened her first two fingers and pushed them into a slot beside the doorway.\n\nThe doors split apart and spiralled open, revealing a large musty room filled with inactive machinery. John swept the room, but could see no signs of life, or death for that matter, so he waved everyone in after him. Dana was first to dart inside, her fear forgotten with her curiosity, as she approached the waist-high equipment in fascination. She let go of her Reaper Cannon, which floated patiently at her side as she cooed over the Vulkat machines.\n\nAlyssa walked up to John and said, \"Sakura's not been detected yet and I'll let you know as soon as she finds anything.\"\n\n\"We need two covering the door at all times,\" John said, glancing behind him as the portal spiralled closed. \"Hopefully this room is completely disused, but we don't want to take any chances.\"\n\nThe twins caught Alyssa's glance and moved into position, standing guard with weapons at the ready. \n\nAlyssa turned back to John and met his troubled gaze. \"I could sweep this place myself... on the Astral plane.\"\n\n\"I'm not sure that's wise,\" he replied, shaking his head. \"You were attacked on your last spirit-walk and those creatures in the mists might be waiting for you.\"\n\n\"They only started homing in on me when I went deeper into the plane,\" the blonde objected, doing her best to appear bold and confident. \"I should be fine within the confines of the ship.\"\n\n\"What about all the psychic resonance from the Vulkat you're picking up?\" John reminded her, narrowing his eyes with worry. \"You got overwhelmed on the Legacy and if your mind gets trapped in the Astral Plane, I don't know if I'll be able to get you back.\"\n\nAlyssa hesitated then slowly nodded. \"You're right, it's probably too risky. We'll just wait for our fearless ninja to return.\"\n\n***\n\nSakura willed her psychic speed into effect as she rushed along the corridor, her armoured feet barely making a whisper even when stepping on the chitinous husks on the floor. She activated the heat masking properties of her armour, making her effectively invisible to infra-red as the armour cooled to room temperature. Crystal Alyssium was barely detectable in mag-view, and being spotted by normal vision wasn't too great a concern, not while running in a blur while wearing black armour. So she was quite confident in her ability to remain undetected by the denizens of this unsettling crypt. \n\nRemembering that the Vulkat were partly cybernetic, she switched to mag-view as she rushed along, reasoning that the metal parts would appear bright-white in her HUD. That was why she ran headlong into her first Vulkat. Long before she saw it, she heard the skittering noise of its eight legs sweeping across the ground, and Sakura slowed her break-neck speed to a cautious jog as she kept her eyes peeled. With her psychic speed enabled, she was still racing down the corridor, and she let out a shocked gasp when she suddenly slammed into something ahead of her. \n\nThere was a sickening gurgling sound as whatever she had run into began to turn, and she backpedalled as fast as she could, desperate to put some distance between herself and this unseen foe. Darting into a side-passage and huddling around the corner, she froze and listened as the scuttling footsteps followed after her, drawing ever closer. Sakura grimaced as she grabbed hold of the hilts of her sheathed ninjato, preparing herself to put down whatever it was she had bumped into. Fortunately, the eerie shuffling stopped a little way from the junction, then began to head away from her, back down the corridor again. Poking her head around the corner again, she deactivated mag-view and jumped when the bulbous rear of the Vulkat crewmember suddenly appeared, not more than a dozen metres away. \n\nShe squinted at the glistening black cybernetic parts that covered the ragged creature in confusion, wondering why they hadn't shone brightly in the mag-view. Flicking the magnetic imaging on again via a glance at the HUD, the big spider disappeared from view, only reappearing after she'd disabled mag-view again. Remembering that Dana had said the outer hull plating was protein-based rather than metallic, she could only assume the Vulkat cybernetics were made from the same material. She tried switching to infra-red and caught a soft red glow emanating from the midsection of the creature, but it wasn't enough to really make it stand out.\n\nSettling with low-light amplification, she studied the Vulkat crewmember, her eyes roaming over its faded grey and orange hide. Its exoskeleton looked withered like parchment in the eerie light from the wall lamps, the extreme age of the creature readily apparent. There was a crumpled indentation in the centre of its bulbous abdomen, at the point where Sakura had crashed into the eight-legged monster, and now some kind of viscous purple ichor oozed from that cracked carapace. Suppressing a shudder of revulsion, she chose another passageway and rushed ahead into the murky darkness, eager to get her scouting mission out of the way as fast as possible.\n\nRunning along the corridors, she heard the occasional brushing sound of many pointed feet walking across the detritus on the floor, but managed to deftly avoid any further confrontations. She was able to cover an incredible amount of space in a short time while running at this pace, although not being able to enter the individual rooms was reducing the effectiveness of her search. Alyssa explained how the doors opened, so after a moment's hesitation, Sakura started opening doors as she explored, taking a quick peek before sprinting onwards.\n\nWhile the corridors were largely clear, she was shocked to see how many Vulkat were in the different chambers. In those fleeting glimpses, she saw many dead-eyed arachnids just standing lifelessly, but there were some going about their tasks with purpose. It was hard to tell what they were doing in those brief flashes, but by not staying long enough for them to turn towards the door, she was away before they came close to catching her. The further she delved into the Vulkat vessel, the worse the feeling of trepidation grew, and soon Sakura's heart was pounding in her chest as she roamed the corridors. That ominous sensation grew more intense as she ascended through the decks, almost as if she was approaching some dreadful heart of darkness buried deep within the command ship. ",
        "She had nearly given up hope of finding what she was looking for when she spotted a huge corridor at the end of her current passageway. While the rest of the ship was quiet, this section was thriving with activity and when she crept up to the junction to take a look, she was astonished to see scores of Vulkat marching towards a massive arch at the end of the tunnel. Waiting for the current group of arachnids to sweep past, she snuck out into the tunnel, keeping herself tucked close into the wall where she would be concealed in the shadows.\n\nThere were no signs that an alarm had been raised, so she prowled along quietly, keeping a wary distance from any of the Vulkat crew. The hairs stood up on the back of her neck as she got closer to the huge arch, feeling an overwhelming sense of dread as she approached. With her senses screaming at her to turn back, she inched closer to the curved parapet the edge the upper level of the vast chamber beyond, forcing herself to get close enough to look down over the edge. \n\nHer eyes widening at the sight within, she turned and bolted, no longer able to stay in the darkly oppressive chamber. \n\n***\n\nAfter waiting impatiently for Sakura's return, John turned to watch Dana as the redhead stared intently at the dusty old machines occupying the room. \"Find out anything interesting?\" \n\n\"Hmm? Oh right, yeah I did...\" she replied, glancing at him and smiling before returning her eyes to the distinctly alien piece of equipment before her. \"This seems to be some kind of incubation chamber; environmental controls, life support, diagnostics. If I had to guess, this is where they kept all the baby spiders after they were born. There must have been hundreds in here...\" After speaking she realised what she'd just said and yanked her hands back with a visible shudder of revulsion. \"Eww!\"\n\nJohn frowned as he studied the strange device, just one of dozens spaced evenly around the big room. It looked like a black table about five-metres across, with dinner-plate sized nodules across its bumpy surface. The dust was thick across the onyx top and obviously hadn't been touch in many years. \"Doesn't look like it's had any use in a very long time.\"\n\n\"A ship crewed by zombie spiders,\" Rachel murmured, running her armoured fingers over the disused machinery. \"I wonder when the last of the living Vulkat died out?\"\n\n\"She's back,\" Alyssa said quietly, drawing everyone's attention to the door. The blonde seemed distracted, her head tilted to one side as if she were listening to something just on the edge of hearing.\n\nTashana mimicked the way Dana had previously opened the portal, by pressing her first two fingers together and inserting them into the slot. The door spiralled open, just as their black-armoured scout rushed into sight.\n\n\"Any luck?\" John asked, before noticing the Asian girl's pale countenance. \"Sakura, are you alright?\"\n\nShe was breathing heavily, her almond-shaped eyes wide as she stepped into his open arms. \"I found a place filled with crystals, it looked like they were being made there... and there was something else...\"\n\n\"What was it?\" he prompted gently.\n\n\"I think it was their Queen! I found a massive... throne room... I guess it was,\" she replied, trembling in his embrace. \"I got really bad vibes in there... it was awful.\"\n\nJohn glanced around at the girls and could see how badly shaken they all were... except for Alyssa who seemed to be oddly distracted. \"Maybe Dana was right. Perhaps we should call this off before we get in too deep.\"\n\nAlyssa hesitated, then reached out to place her hand on his shoulder. \"We're so close to the Eternity Crystals, it seems like a shame to turn back.\"\n\nHe frowned at her and said, \"That's not like you; you're not normally that interested in new technology.\"\n\nShe shook her head and glanced at the ceiling, a distant look in her bright blue eyes. \"No, but there's something important here on this ship... I can feel it.\"\n\nJohn looked torn for a moment, then turned back to Sakura and asked, \"You think you can take us there?\"\n\nShe shivered with fear, but still gave him a determined nod. \"We won't be able to sneak in though... there's far too many Vulkat around that area. We'll definitely have a fight on our hands to get there.\"\n\n\"That's not a problem,\" Tashana said with a cocky grin that was nearly convincing. She twirled her Reaper pistols in her hands. \"I was getting tired of all this sneaking around.\"\n\n\"Alright, let's move out then,\" John said, glancing around and finding that the girls were all huddled nearby with their weapons at the ready. He nodded to Sakura. \"Take point and show us the way.\"\n\nUnshouldering her Quantum rifle, Sakura left the room with John and the girls assembling into a similar formation as last time. Tashana eased back to make room for the new addition to their group, walking beside Alyssa and covering the rear with her pistols. Sakura guided them to the crossroads and turned left, then led them onwards to the next junction roughly one-hundred metres further along. They took a right, then another left, Sakura never hesitating as she followed the route further into the bowels of the Vulkat command ship.\n\nJohn was surprised at how infrequently they came across any of the shambling arachnids, but they were able to progress far into the ship before they had to back up a couple of times to avoid an unwelcome encounter. Sakura led them into the footwell of a sloped ramp that allowed access to the higher levels, the wall to their right strangely marked with indented patterns. \n\n\"We need to go up four levels, then we head into the middle of the ship,\" Sakura explained, glancing upwards and searching for movement on the upper ramps. \"From there we head towards a big central corridor that leads to the throne room.\"\n\nDana had crouched down by the ramp and was brushing her gauntleted fingers across the sloped, uneven surface. Her eyes were shrouded in a golden nimbus as she murmured, \"This is a newer construction. It's still old, but the rest of the ship is far older. The craftsmanship is crude too, nowhere near as well-built...\"\n\nJohn kept his rifle trained on the ramp, but glanced down at the redhead. \"Any idea why this was built later?\"\n\nShe looked up at him to meet his curious gaze and shrugged. \"I'm not sure, but I can't see any signs of anything else being removed, which seems a bit odd. How would they go up and down levels without any ramps, elevators, grav-tubes, or whatever?\"\n\nRachel traced the grooves in the wall with her hand. \"The Vulkat are spiders, they probably just climbed up the wall... until they weren't able to any more.\"\n\n\"God, this place is depressing,\" Dana muttered with a grimace. \n\nJohn walked over to the ramp and started making his way up. \"You're right, let's get this over with.\"\n\nThey started heading up the spiral surface and as they cautiously ascended, a faint rustling reached John's ears. He knew what it was, having heard it before; the sound of arachnid legs trampling over parched remains of broken chitin. When they reached the fourth level, the noise intensified, enough that the girls could hear it too. They glanced about nervously, weapons raised and ready to fire the moment they were attacked.\n\nIt wasn't just the sound of the Vulkat moving around this level that increased when they stepped off the ramp onto the level of the throne room. The creeping feel of unease was growing stronger too, and John felt a shiver run down his spine as that all-pervading sense of dread seemed to settle into his bones. Whatever calamity had happened in this place had seeped into every inch of the ship and John's heart almost felt as leaden as his feet when he followed Sakura into the next tunnel.\n\n\"How much further?\" he asked the black-clad girl, his voice taut.\n\nShe turned to look at him, her whole face rigid as she tried to keep her emotions in check. \"J-just a bit more... a couple of turns, m-maybe two-hundred metres, then the central corridor.\"\n\nHe patted her on the shoulder. \"I don't know how you managed to explore this on your own.\"\n\nSakura gave him a wan smile. \"I'm not sure now either...\"\n\nJohn pulled her back and said, \"Let me take point now, just let me know if I take any wrong turns.\"\n\nWith a shaky nod, Sakura did as he asked, letting John spearhead their formation. He had three girls with Reaper Cannons covering his advance down the corridor, but he suddenly felt so alone, as if everyone he'd ever cared about had deserted him. He tried not to look back to make sure his companions were still with him, and couldn't help feeling that by checking, he was somehow calling their loyalty into question. However, he couldn't resist a sharp glance to either side and much to his relief, he saw Dana, Rachel, and Irillith's familiar faces. That they were all terrified was not so comforting.\n\nThey had made it half-way to the central corridor, when the scratching sounds that had been growing progressively louder suddenly came to an abrupt halt. He froze and aimed into the darkness, his finger itching to pull the trigger on anything that would loom out of the shadows. Out of his peripheral vision he could see Reaper Cannon barrels primed and ready to fire, the girls prepared to unleash a blistering hail of destruction on whatever dared to face them.\n\n\"Keep going,\" Alyssa urged him, and when he glanced back at her, he saw her beautiful face twisted into some unreadable expression.\n\nDoing as she asked, he turned a corner and headed up to the main corridor, expecting an ambush any second. But it never came... He darted a quick look into the corridor then gasped when he saw that a Vulkat was facing him, less than five metres away. They were so close, he could make out its eight milky-white eyes, all of which seemed to be staring right at him. He aimed his gun right into the centre of that hideous alien visage, getting ready to gun it down the moment it pounced... but nothing happened. \n\n\"Oh fuck...\" Dana whimpered, from somewhere behind him.\n\nJohn managed to tear his eyes away from the massive spider in front of him and whipped his head around to see what had drawn Dana's attention. He suddenly realised that the central corridor was teeming with Vulkat in both directions, the lifeless arachnids just standing there, watching as if in silent condemnation of these interlopers for trespassing where they did not belong.\n\n\"The throne room and Eternity Crystals are that way,\" Sakura whispered, pointing to his right.\n\nThe Vulkat had left a narrow path between them that led towards the huge arch at the end of the corridor. John took the lead, with the girls following in single file as they walked past hundreds of the long-dead creatures. This close it was easy to see how badly decomposed some of the spiders were, with parts of their dried and cracked bodies replaced by glistening black cybernetics. All the Vulkat were armed, with some kind of double-barrelled weapon mounted above their thorax. There was a quiet rustling as John progressed up the corridor, hundreds of glaring Vulkat tracking his progress with those unblinking eyes and the muzzles of their guns.\n\nWalking beneath the huge archway, John saw that the corridor opened out onto a gallery, which wound around the massive room beyond. The awful sense of imminent doom was almost overpowering and he had to use all his willpower to approach the balcony, his eyes widening when he finally got a good look into the chamber. Just like the corridors, the walls were indented with ribbed structures that gathered together in the lofty shadows high above their heads. Silent Vulkat guards lined the walls of the gallery that sloped all the way down to the floor of the eerie cathedral, a huge dais taking pride of place in the centre of the vast room. \n\nNestled amongst a dense tangle of black cybernetics was a monstrously huge creature, an arachnid just like her brood, but many times larger. There was faint movement within the Vulkat Queen's chest, each expansion and contraction accompanied by a strange series of mechanical clicks. Her hide was wizened and venerable beyond measure, coloured a pallid grey with faint orange stripes around her upper limbs. \n\nPast the crippled remains of the Queen, the far side of the room was carpeted in a dense forest of shining crystals, each one catching and amplifying the faint spectral light. Most were relatively small and no more than a foot tall, but there were a handful which towered over the others, casting colourful prisms over the grim sepulchre.\n\nJohn heard a whimper behind him, and he turned to see Sakura quivering under the strain of holding formation. Her face was twisted with fear and he realised she was on the verge of bolting, her resistance to the terrible oppressive atmosphere already worn down after her first visit. He went to the terrified girl and wrapped her in his arms, for once completely unsure how to proceed. If the Vulkat had tried to kill them, John would have felt justified in fighting back, eventually storming this place to put down their Queen and her broken, ghastly brood. But they hadn't attacked... they seemed to be waiting for something.\n\nHolding Sakura close, he turned to look at the girls. \"I better go and try and communicate with the Queen. Will all of you be alright up here for a few minutes?\"\n\nThe girls nodded bravely, all except Alyssa, whose eyes were now ablaze with an incandescent light. \"Let me...\" she said softly, shouldering her rifle and walking towards the edge of the gallery.\n\n\"Alyssa, wait! What are you doing?!\" he called out to her as the blonde vaulted up onto the waist-high balcony.\n\nAlyssa turned and gave him a sad smile. \"She needs me to know her pain...\"\n\nJohn called her back but she swathed herself in a soft nimbus of white light and lifted off the balcony, her armour sparkling as it reflected the light. Alyssa shone like a dazzling beacon amidst the oppressive gloom and she floated down towards the Vulkat Queen. Her companions rushed to the banister, watching spellbound as she landed beside the ravaged creature. Stepping forward, the blonde placed her hand against the enormous spider's head, seemingly unconcerned about touching the hideously ugly alien.\n\nFocusing her will, Alyssa gently probed the Queen's mind, testing the strength of the mental barriers she found there. It didn't come as any surprise to her that Nkkrrit, for that was the Vulkat Queen's name, was a potent psychic with defences to match. She could have smashed her way in, but that would have been counter-productive and not what either of them wanted. Nkkrrit was reluctant at first, the spider's well-justified terror of this strange bipedal female warring with her desire to make contact with a friendly mind. Alyssa simply pushed her consciousness against the Vulkat's, giving Nkkrrit's mind a kindly nudge.\n\nJust like that the resistance fell away and Alyssa felt herself being drawn into the alien's subconscious. Nkkrrit was very alien, there was no doubt about that, possessing the most unnervingly different mind that the psychic blonde had experienced so far. Although she had prepared herself for it, a howling hurricane of terrible loss slammed into Alyssa, threatening to drown her in an unending cacophony of self-pitying wails. \n\nIt would have been easy to succumb, losing herself to her own feelings of loss for her parents, but she focused her mind on John and the girls, taking strength from the love she shared with them. Eventually, the intensity of the emotional storm subsided, and Alyssa managed to stand strong, buffeted but not bowed by Nkkrrit's tremendous outpouring of grief. Staring out across the Vulkat Queen's mindscape, she studied the webbed clutches of immaculate orange eggs, which lay everywhere in neat well-tended clusters. Every time she focused on a nest, the eggs cracked and dried out, withering away to dust and ash.\n\n\"Let me help you!\" Alyssa called out, turning her face up to the swirling sky. \"I want to learn about your people... I'm here to listen to your story!\"\n\nThere was a long shuddering sigh and the mourning winds abated, a spirit-form projection of Nkkrrit appearing before the blonde. The Vulkat Queen had been a renowned beauty in her heyday, her black carapace glistening under what was now a tranquil sky, the orange bands around her body vibrantly bright as they caught her eye. Skittering closer, Nkkrrit held herself with composure... but Alyssa could feel the internal struggle, the Vulkat Queen yearning to rage at the universe for what was taken from her.\n\n\"What happened to you?\" Alyssa prompted gently. \n\nThose eight black eyes all snapped to Alyssa's face; sharp and alert, they revealed a potent intelligence behind the arachnid's frightening stare. Nkkrrit conveyed her meaning with emotions rather than specific words, each filled with a terrible yearning for days long-since passed. The images and feelings swept over Alyssa, pulling her into the remembrance. \n\n***\n\nAlyssa stumbled a step then looked around in awe as she got her balance. She stood amidst a city of towering spires, a place of beauty and artistry, with delicate sculptures lining the wide boulevards. It appeared to be market day of some kind, with all sorts of aliens bartering and trading under the bright warm sun. There was a sense of harmony amongst the strange-looking aliens she saw there, none of whom she recognised.\n\nBliss, happiness, contentment...\n\nNkkrrit emerged from one of the nearby dwellings, her home on the planet Uxturo, a smaller Vulkat appeared beside her -- Ixxttranao, her mate. They nuzzled affectionately, while dozens of spiderlings capered playfully around their legs before the lovers parted for their day. Her first brood... so good, pure, and innocent, their childish games an endless source of amusement to the mated pair. The parents shared such fond hopes and dreams for their young, each of the babies brimming with potential, so bright and keen to learn.\n\n***\n\nThe sudden shift in scene threw Alyssa off-balance again and as she struggled to stay on her feet, she gaped at the rapid shift in memories. The city burned all around her... what had been exquisitely beautiful now lay ruined, left blackened and scorched by the invaders. Vulkat and off-worlders alike attempting to flee from pitiless killers, the burning dead piled high in the streets. Two-legged females in their black armour scoured the city, hunting and killing without provocation. Nkkrrit ran through the chaos, desperate to be reunited with her family.\n\nHorror, grief, loss... \n\nNkkrrit found Ixxttranao blown to pieces, limbs still glowing from the dozen laser bolts that had brutally dismembered him. He'd died trying to protect her family, but no matter how valiant his sacrifice, it had been in vain. Nkkrrit found her first brood gunned down without mercy and her heart threatened to break into a million pieces. \n\n***\n\nAlyssa was expecting the next shift in scenes, so she was better prepared this time. The disorientation passed quickly and she looked around, trying to get her bearings.\n\nDetermination, loyalty, revenge...\n\nNkkrrit boarding the 'Dream of Salvation', the vessel that was built to fight a war the Vulkat had been ill-prepared for. It was the vessel that was to become her eternal tomb...\n\nNow settled into her new home, Nkkrrit prepared herself to do her duty to defend the Vulkat Empire against the merciless invaders. She still carried Ixxttranao's essence within her body and used it to grow more clutches of spiderlings... all the while trying to fill the void in her heart by letting her lost mate live on through her children. Those children became adults, adults became crew, the crew fought and died, which meant yet more sharp daggers of grief to tear at her shredded soul.\n\n***\n\nThe scene swirled and moved on yet again...\n\nThe Vulkat fleet assembled and was sent to the borders, to defend against the invaders and their sleek black ships. Images of terrible battles assaulted Alyssa's mind, full of flashing beams of energy tearing Vulkat ships to pieces, the hulls not strong enough to withstand their hateful caress. All that ferocious fighting led to horrific losses, the Vulkat losing a dozen ships for every invader vessel. While each of the enemy's losses were tremendously satisfying, stoking the fires of revenge, they proved to be little more than pyrrhic victories. There was a brief lull in fighting, giving hope that the attackers had relented; but those hopes were soon dashed...",
        "Shock, horror, grief...\n\nThe planet Uxturo, a beautiful jewel in the Vulkat Empire... her home and birthplace. Nkkrrit returned to find it obliterated by a weapon so potent as to defy belief. What was once a haven of learning and culture, the home of billions, had been reduced to nothing more than cold broken rocks floating lifelessly in space. \n\nThe Vulkat strategy changed from fight to flight, in a frantic attempt to avoid total genocide. Nkkrrit spoke to the Empress herself and was commanded to retreat rather than continue to defend against the invaders... just long enough to weather the storm and to save as many as she could. Nkkrrit's fleet was filled with worthy citizens, the best and brightest, chosen to rebuild when it was safe and the terror had passed.\n\n***\n\nAfter long years spent in exile, the mounting fear amongst her people twisted inwards, turning to madness and despair. The citizens were falling to murder and cannibalism, the surviving Vulkat raging against their claustrophobic confinement. Desperate to restore hope to the surviving citizens, the decision was made to return to the Vulkat Empire. \n\nBut it turned out to be a false hope... \n\nEverything was gone. The invaders had done a thorough job before they left, scouring all traces of the Vulkat from the galaxy, every ship wrecked, every planet destroyed. Suicide rates amongst the citizens aboard the fleet grew to terrifying levels, the last death-spasms of a broken, ruined people. \n\nDesperation, revulsion, remorse...\n\nNkkrrit brought back the dead to help serve the living, using procedures once considered an abomination; but all the citizens that might have cared were long gone. She stabilised the crew numbers... leaving enough to run the fleet and keep the last of the living alive, but for what purpose? All their colonisable worlds had been destroyed, and even if they found a new home, there were too few left to rebuild... too much had been lost. \n\nThe centuries rolled by and Nkkrrit grew older, and weaker, her fertility long spent. One by one her people died out, until she was the last, the sole survivor of the catastrophe that had befallen the Vulkat. Submerged in grief, her ghostly fleet now haunted the bleached bones of what had been a proud and noble empire. \n\nLoneliness, overwhelming sorrow, rage...\n\nNkkrrit was now a pathetic shadow of her former glory, a ragged Lich Queen leading her nightmarish undead children. All that was left was to seek vengeance against the living; to slaughter the shameless fish-men who sought to pick through the graveyard of the Vulkat, intent on looting the dead.\n\n***\n\nAlyssa let out a strangled sob, her heart filled with sympathy for Nkkrrit and the endless horrors she'd fought so hard to endure. Stepping forward, she embraced the startled arachnid, her ghostly ethereal tears rolling down her cheeks and splashing against the Vulkat's heavy head. \n\n*I'm so sorry,* she whispered, struggling to imagine what it must have been like for Nkkrrit, with one series of terrible events after another dragging her down to ever lower depths of despair. *Ixxttranao, Uxturo, I'll remember them for you; help keep their memory alive.*\n\nNkkrrit raised one of her huge forelimbs then gently curled it around the weeping girl. In that moment of closeness there was peace, a touching of minds that the Vulkat Queen had missed so much. Alyssa's eyes widened at the contact and she suddenly gained a far deeper insight into Nkkrrit and her people.\n\nThe Vulkat were psychic, the largest of the females being the most powerful with that gift. Nkkrrit had once joined with millions of voices lifted up in exultation, all joining the hymn of the Vulkat. But that had been over ten-thousand years ago, the glorious song then turning into a terrifying lament, as one voice after another was brutally extinguished. Nkkrrit had abandoned the choir before the end, no longer able to stand the endless screams of grief and pain.\n\n*I'm building a new choir,* Alyssa said softly, opening her mind to the ancient creature. *Sing with us once again...*\n\nThe voices were too faint at first and Nkkrrit strained desperately to hear, wanting to listen to that wonderful harmony with every fibre of her being. Alyssa sent soothing waves through her mind, calming the last of the Vulkat, and encouraging her to surrender herself to that connection. Nkkrrit balked at the level of trust that would entail, but with Alyssa's gentle telepathic caresses, she gradually relaxed, opening her mind the same way.\n\nNkkrrit listened in awe as the telepathic song grew louder and clearer, Alyssa's wards like beautiful echoes of their Matriarch's glorious voice. She began to sway to that gentle rhythm, her mind revelling in the loving notes. Throwing herself more fully into that connection, Nkkrrit suddenly became aware of the multitude of Maliri connected through Edraele. While their voices were far quieter, united together they provided a much broader depth to the shining stars in Alyssa's chorus.\n\nThe ancient arachnid began to sing, her voice unsteady at first after thousands of years of disuse, but growing stronger by the second. Alyssa had been the only one aware of Nkkrrit's presence at first, until that song flooded through the network, making all those connected to her pause in wonder. Acting by instinct, they followed Nkkrrit's lead, raising their voices to join the hymn of the Vulkat. \n\nGratitude, love, respect...\n\nAlyssa smiled as she felt the flood of emotion from the last survivor of a terribly-wronged people. *You're welcome,* she murmured, caressing the Vulkat Queen. She hesitated for a second, then continued, *Would you like us to heal you? We could try to help you bring back the Vulkat and rebuild your empire?*\n\nRegret, appreciation, but rejection...\n\nPausing for a moment, Alyssa gazed into Nkkrrit's sad eyes. *Do you want us to end your suffering instead? I promise it would be painless...*\n\nLonging... then duty, loyalty, rejection...\n\nAlyssa sighed as she nodded her understanding. As much as Nkkrrit wanted a release from her torment, she felt honour bound to defend what had once been Vulkat territory from the vultures that sought to pick over the carcass of an extinct civilisation. \n\n*If you ever change your mind either way, reach out and speak to me,* Alyssa said gently. *We'll do whatever we can to help you.*\n\nNkkrrit gazed at her for a long moment, then broadcast a dazzling series of images into Alyssa's mind. \n\nBlue eyes widening in shock, Alyssa gaped at her new friend. *Thank you so much! I promise we'll put your gifts to good use!*\n\nThe Vulkat Queen embraced the young woman, long black limbs curving around her in a gentle, protective gesture. Alyssa hugged her back tightly and with a final goodbye, they broke the telepathic connection.\n\n***\n\nJohn felt the veil of fear lifting and Sakura sagged into his arms. \"You okay now, honey?\" he asked with concern.\n\n\"So much better, thank you,\" the Asian girl replied, letting out a deep sigh.\n\nWhen he met her startled gaze, much to his surprise he saw elation on her face, her fear long forgotten and replaced with a look of joy. Checking on the rest of the girls, he saw similar expressions of relief and happiness on their beautiful faces, as the oppressive sense of dread faded away. Looking down over the balcony to make sure Alyssa was alright, John only relaxed when she turned and waved up at her friends.\n\n\"Hey guys, get down here and meet Nkkrrit! She's got some amazing gifts for us!\" she called out to them, a brilliant smile lighting up her face. \n\n***\n\n\"What's happening now?\" Kali Loraleth asked impatiently, sitting forward on the huge bed, her indigo eyes tense with worry. \"Have they started fighting the Vulkat yet?!\"\n\nEdraele slowly shook her head as she listened to John's thoughts, wishing that she were still at his side rather than heading back to Genthalas. He had asked her to keep the Young Matriarchs safe and she would protect them and his four heirs with her life, but it was still difficult to be parted from him, especially after the visit to the Invictus had been so wonderful.\n\nShe gave the five anxious young women a reassuring smile and replied, \"It seems like Alyssa managed to befriend the Vulkat Queen! Don't worry, my darlings, there won't be any fighting tonight.\"\n\nThe Young Matriarchs sighed with relief, finally relaxing and reclining on the bed as the tension eased in the bedroom. After Edraele's collapse a few weeks earlier, they had all insisted on staying with her whenever John was likely to be involved in a battle, each of them wanting to keep a wary eye on their Matriarch to make sure she didn't overexert herself. She was touched by their concern, but didn't like to see them worry.\n\nValani glanced around at her friends and asked tentatively, \"Did any of you hear a beautiful, otherworldly voice a few moments ago? This might sound strange... but I thought I heard singing!\"\n\nThe rest of the Maliri nodded, looking at each other with wide eyes. \"I thought I must've just been hearing things,\" Leena admitted, with a shy smile.\n\n\"It was the Vulkat Queen,\" Edraele clarified, listening to Alyssa's telepathic explanation of events. \"Her name is Nkkrrit and she's the last of her kind. Alyssa connected her to our psychic network to bring her some peace... she lost everyone she ever loved.\"\n\n\"That's so awful,\" Valani murmured, hugging Nyrelle.\n\nNyrelle nodded, her dark-blue eyes filled with sympathy. \"I can't even imagine being separated from all of you now. I love you all so much!\" She embraced the House Naestina Matriarch and they shared a gentle kiss.\n\nEdraele turned to Luna, who was kneeling beside her, and brushed her hand through the assassins long-silky hair, the snowy tresses flowing over her blue fingers. \"What would you say to an early night, my Angel?\"\n\nLuna met her gaze with hooded, lust-filled eyes and rose to her feet. \"That sounds like a lovely idea, but I do have one proviso.\"\n\n\"You have the effrontery to make demands of your Matriarch?\" Edraele replied playfully, while arching an eyebrow. Standing so that she was eye to eye with her lover, she continued, \"And what might that be, my beautiful enchantress?\"\n\nLuna caressed her Matriarch's cheek with a gentle swirl of her fingers and whispered, \"I just want you to make love to me tonight... no more trying to atone for what happened, let's put that behind us.\"\n\nEdraele hesitated, flushing with embarrassment for the way she'd behaved after hearing the horrifying revelations about Tashana's past. She had promised John that she'd do her best to thank Luna on his behalf, and had been doing so vigorously, keeping her lover in a state of ecstasy, with every cry of pleasure a balm to her soul. Edraele was about to apologise again, but the yellow-eyed assassin embraced her and stifled her words with a tender kiss.\n\nWhen they parted again, Edraele's eyes softened and she gently caressed Luna's back, feeling the supple, powerful muscles there. \"I place myself in your strong hands, my love.\"\n\n\"Good girl,\" Luna murmured, the two of them sharing a knowing smile at the memories those words evoked.\n\nEdraele turned back to the huge bed to see that the Young Matriarchs had already disrobed and were climbing under the covers. Tsarra and Leena lay cuddled in each other's arms, as they had done every night since they left the Invictus, the two slightly older girls talking softly together. Kali settled down between Nyrelle and Valani, the three younger women giggling as they whispered secrets to one another.\n\nTaking Luna's hand, Edraele glided towards the bed, darting a coy smile at her lover, knowing full-well who was going to get to play at being \"John\" that night. They had only gone a couple of steps when a melodic chime echoed around the bedroom, originating from the comms interface. \n\n\"This is Edraele, is there a problem, Captain?\" she asked, taking the call.\n\n\"Matriarch, we just received a high-priority message routed through to us from Geniya station,\" Captain Daeyra replied, sounding surprised. \"They were contacted by a source originating from Federation Space and a Terran female asked to speak with you in person.\" \n\nEdraele raised an eyebrow as she glanced at Luna and gave her an apologetic smile, but the assassin waved it away and shooed her on to take the call. The House Valaden Matriarch walked behind the desk, her eyes widening when she saw the name on the caller ID. \"Give me a few moments please, Captain.\"\n\n\"Of course, Matriarch,\" Captain Daeyra said, her voice respectful. \n\nThe Young Matriarchs looked on in surprise as Edraele turned and left the bedroom, walking at a brisk pace towards the office she had commandeered aboard the Maliri battleship. Her golden armour was there, so she donned the jewel-encrusted chestplate, vambraces, and pauldrons first, then reluctantly pulled the ornate helmet over her head. She would have loved to have taken this call without her armour, but John wished to keep the appearance of the Maliri a secret and she had no intention of defying his wishes.\n\nShe sat gracefully in the chair behind the imposing desk, her elegant fingers tracing across the holo-interface to accept the secure call. \"This is Edraele Valaden, Matriarch of House Valaden, my humblest apologies for keeping you waiting.\"\n\nThe attractive Latina sighed with relief, \"Oh my goodness, I'm so glad I got through to you! Thank you for speaking with me, Queen Edraele!\"\n\nSmiling to herself for having forgotten about her new title, Edraele replied, \"Please Mrs. Fernandez, call me Edraele. I've been longing to speak with you for quite some time now and I'm so glad you called. I must say that your daughter is an absolute delight! That lovely girl is a shining testimony to the wonderful way you raised her.\" \n\n\"Call me Maria, please,\" the Latina replied, flushing at the effusive compliments. \n\n\"I also see that Calara isn't the only stunning beauty in the Fernandez family...\" Edraele added flirtatiously.\n\nAlthough it was obvious Maria was intimidated by Edraele's title, she managed to shake that off, her face set in a determined expression. \"I'd really love a chance to get to know you better, Edraele, but there's something extremely urgent I need to discuss with you first. Are you able to get a message to John?\"\n\nEdraele hesitated for a second, unsure what to say over a comm channel, no matter how secure it was. \"That's correct, I will ensure he hears anything you tell me,\" she replied, her tone guarded.\n\nMaria picked up on her reticence and gave the Maliri Queen a reassuring smile. \"I understand your reluctance to speak openly, but this is a spoofed ultra-secure channel; I have an extensive network of old colleagues who work in Terran Federation communications. Nothing we say on this call will go further than the two of us -- not even the Fleet Admiral himself can listen in to this conversation and there are no logs being recorded.\"\n\nBefore Edraele could say anything, Maria leaned forward, her careful composure slipping as she blurted out, \"We need John's help! The Terran Federation is in terrible danger! The Kintark have launched a massive invasion armada heading for Terra and High Command has recalled all the fleets from the borders!\" Her brown eyes looked frantic as she continued, \"They've stripped the defences from the outer rim! There's nothing protecting those worlds from the Kirrix!\"\n\nEdraele froze in horror, stunned by the news. As the shock wore off, she slowly reached up and removed her helmet, then shook out her snowy white mane. Meeting Maria's wide-eyed look of wonder, she said firmly. \"Now start from the beginning and tell me everything you know. John isn't in Maliri Space, but I can get word of this to him immediately...\"\n\nMaria sagged with relief and began to tell the Maliri Queen everything she'd been able to piece together.\n\n***\n\nDana stopped bouncing on her toes to point at the platform covered by a dense forest of Eternity Crystals, an excited grin on her face. \"So all we have to do is build the psychic amplifiers and replicate the mineral composition of the growing agent, then either you or Alyssa can psychically shape as many as we need!\"\n\n\"Do you reckon we can use them to upgrade our shield projectors? Are they as good as the Brimorians thought they'd be?\" John asked, studying the beautiful crystals and the kaleidoscope of light they refracted around the room.\n\nShe nodded enthusiastically. \"I thought the crystals the Maliri could make were amazing, but these things are fucking awesome! We'll totally be able to upgrade our shields and I can think of a few more uses for them too!\"\n\nJohn glanced back at the wizened arachnid then to his blonde Matriarch. \"And you're sure Nkkrrit is okay with us taking these crystals?\"\n\nAlyssa gently stroked the Vulkat Queen's dried carapace. \"She says we can have them all; they're her way of saying thanks for letting her join my chorus...\"\n\nJohn frowned in confusion, not entirely sure what chorus the blonde was referring to. Deciding to speak about it with her later, he turned to look at Irillith, who was crouched next to the dense network of cybernetics that made up Nkkrrit's black throne. \"How's the data transfer going?\"\n\n\"About half done I think,\" the Maliri hacker replied, studying the strange black device she held in her hand. \"I'll start researching the Vulkat language when we get back to the ship. With a bit of luck and Faye's assistance, I should be able to decipher and translate all the data into a useable format that's compatible with our own network.\"\n\n\"How long until I can start checking out their schematics?\" Dana asked, her blue eyes shining with excitement.\n\nIrillith gave her a helpless shrug. \"I'm afraid I've got no idea at the moment. I can only promise that I'll give it my undivided attention as soon as possible.\"\n\n\"Are you sure Nkkrrit won't let me heal her?\" Rachel asked Alyssa, her grey eyes already glowing. \"At least I can take away any pain...\"\n\nThe blonde shook her head, a forlorn expression on her face. \"She wants this nightmare to be over with, but she's got too much loyalty to her people to let me just end her suffering. If you heal her, she'll live even longer, and she doesn't want that either.\"\n\nTashana frowned in confusion, then glanced at the ancient arachnid. \"Aren't those two conflicting things?\"\n\n\"The Vulkat view suicide as a betrayal of their community,\" Alyssa replied, a troubled frown on her face. \"Nkkrrit wants to keep defending Vulkat territory until her dying breath...\"\n\n\"Would it be okay if I take a DNA sample?\" Rachel asked, glancing at the Vulkat Queen's withered body. \"I won't hurt her.\"\n\nAlyssa smiled and nodded. \"Nkkrrit doesn't mind, she says that's fine.\"\n\n*John, I need to talk to you urgently!* Edraele blurted out, her thoughts rushing into his mind.\n\n*What's the matter?* he asked in alarm. *Are you and your girls okay?*\n\n*We're all fine, but I've just heard some shocking news from Maria Fernandez!* the Maliri Matriarch declared. *She just contacted me so that I could to pass on a message to you!*\n\n*Calara's mother spoke with you?! What did she say?!*\n\n*The Kintark have invaded! They swept through the Dragon March smashing all the defences there and are on their way towards Terra! The Kintark have been destroying all the comms beacons on their way to prevent word from getting out, but High Command knows they're coming. Buckingham ordered the recall of all the fleets to defend the Homeworld... but they stripped all the ships from the Kirrix borders!* Edraele informed him in a rush.\n\nJohn could only gape in shock when he heard the news. *But the fleet on the outer rim is two weeks out! They'll never be able to get back to the Core Worlds in time to make a difference.*\n\n*Maria says it's definitely happening, the Damocles had only just arrived at the border when the fleet received the recall order,* she continued, her tone bleak. *High Command has abandoned all the worlds in the outer rim!*",
        "\"Fuck me...\" John muttered under his breath, leaning heavily against Nkkrrit's throne. \n\nThe girls looked at him in concern, faces lined with worry when they saw his appalled expression. Alyssa explained what Edraele had just told him and one by one the rest of the girls looked as stricken as John did.\n\n*We'll start heading back; we should be able to get there long before the Kintark,* John said decisively. *We've got several days before they reach the Sol System, so we can rally the fleets, and Calara can start making preparations to deal with the invaders...*\n\n*I'm sorry, John... Maria only found out about it an hour ago, but she's done some digging. High Command's been keeping the invasion quiet for days...* Edraele informed him, sounding sickened. *You've got a day left... if that.*\n\nJohn choked, his eyes widening. *A day...* \n\nHe cast a fearful glance at Alyssa and her grim expression spoke volumes. \n\n*Why didn't High Command reach out... ask for my help?!* John asked, sounding bewildered. *We've been there for them every time they've been in trouble before...*\n\nEdraele was quiet for a moment, then replied, *According to Maria, an executive order was issued by the Fleet Admiral forbidding all outgoing contact with the Maliri Protectorate... she only got around it because all her old colleagues work in communications, routing through secure messages. Buckingham didn't want you riding in to save the day this time... perhaps he still resents your intervention at the Battle of Regulus?*\n\n\"That stupid motherfucker!\" John roared, his eyes blazing with fury. Clenching his fists to try and contain his anger, he snarled out loud, \"He's going to fuck over the Terran fleets just for the sake of his goddamn pride?! We need as much of them intact as possible if we're going to repel the Progenitor invasion!\"\n\nThe girls winced at his outburst and Nkkrrit's eight eyes sought out Alyssa in alarm. The blonde soothed them all with a telepathic surge of reassurance.\n\n*I'm so sorry, John, I had no idea this was happening,* Edraele murmured, sounding just as devastated. \n\nJohn closed his eyes and took a deep breath, then slowly exhaled as he focused on centring himself, trying to smother the white-hot rage that burned within. *Alright, contact Almari and Ilyana, we need to reroute their fleet. They're already following the Terran border with the Brimorians, so I want them to head directly for the Core Worlds. We'll rendezvous with them there.*\n\n*I'll send them an updated flight plan as soon as we get into range of the Terran comms beacons,* Alyssa quickly interjected.\n\n*They'll undoubtedly meet resistance from Terran Federation forces when they attempt to cross the border,* Edraele advised him. *I'll remind Lilyana to use your pre-prepared message.*\n\n*Excellent, thank you,* John replied, before glancing around at the shocked and fearful faces that surrounded him. \"Ladies, we need to move right now! The Kintark are going after Terra!\"\n\nAlyssa placed her hand on his arm and nodded. \"They know... I've told them what's happening.\"\n\nJohn glanced at the Eternity Crystals with deep regret. \"It looks like we'll have to leave them behind... we can't afford to waste time carrying them all back to the shuttle.\"\n\nThe blonde gave him a playful smile. \"Oh, I think we'll be alright...\" She glanced at two of the biggest ones, each over three-metres in length. \"You definitely want those two for the Nova Lances, right Dana?\"\n\n\"Oh yeah!\" the redhead exclaimed, a broad grin on her face.\n\nAlyssa turned and faced the field of crystals, then raised both hands in an imperious gesture. There was a musical tinkling sound and the entire forest of Eternity Crystals, numbering in the hundreds, uprooted from the platform.\n\n\"Let's go!\" the blonde exclaimed, turning to wink at John.\n\nHe looked at her in amazement, astonished that she could use Telekinesis to control so many objects at once. Shaking off his shock, he turned to face the Vulkat Queen. \"Thank you for your gifts, Nkkrrit. I consider you a friend and ally now... so let Alyssa know if there's ever anything I can do to repay you for your help.\"\n\n\"She says there's no debt to pay. Nkkrrit 's eternally grateful for the peace we've given her,\" Alyssa said softly, smiling at the Vulkat Queen as she gave her a farewell hug. \"Come on, Faye's bringing in the Raptor to pick us up.\"\n\nBy the time they reached the Vulkat Command ship's main hangar, the Raptor was already waiting for them, parked on one of the landing pads. Faye had lowered the front and rear loading ramps, so John and the girls headed up to the cockpit, while Alyssa floated her crystalline cargo right into the back of the gunship. It took less than a minute for her to finish loading the priceless Eternity Crystals and as soon as she had boarded too, Faye closed up the ramps and took off.\n\nJade had manoeuvred the Invictus so that it was flush with the Vulkat ship, which meant that the Raptor was able to fly straight out of one hangar and into the other. Faye had already retrieved the stealth shuttle, so the moment the gunship was safely inside, Jade powered up the battlecruiser's six Trankaran engines and raced towards the edge of the system. Now they just needed to escape the local gravity wells and they'd be able to jump into hyper-warp.\n\nJohn rubbed his hand over his face as he stepped out of the armour-equipping frame, feeling a decade older after Edraele's shocking revelation. He glanced around at the girls, seeing them look similarly subdued as they put away their weapons and removed their Paragon suits. \n\n\"We need a quick debrief on the Command Bridge,\" he said quietly, clasping Alyssa's hand and accompanying her down the ramp to join Calara, Jade, and Faye.\n\nThe blonde nodded, already listening attentively to his troubled thoughts. As John sat heavily in his Command Chair, the rest of the girls fanned out and took their places at their respective stations.\n\nHe took a deep breath, then began, \"Okay, so Alyssa's brought you all up to speed. We've got a Kintark armada heading for Terra and only about a day from their target, while we're light years away in Vulkat space.\" He looked to his right and said to his blonde Executive Officer. \"Can we even make it back in time?\"\n\nAlyssa leaned forward and her hands swept over her console, delicate fingers dancing over the display to bring up the Empire Map. There was absolute silence on the Combat Bridge as the crew watched her work, the tension ratcheting up a few notches when her brow furrowed with worry. A glowing green line snaked across the sectors, linking system after system, taking them from the Desolation of Vulkat all the way to Terra. \n\nJohn's heart sunk when he saw the ETA projected by the Nav computer, predicting they'd take 46 hours to return to the Core Worlds. Just as he was about to give voice to his anguish, Alyssa started to use her warp-tunnelling techniques and gravity well sling-shots to increase their hyper-warp speed far beyond the capabilities of the navigation computer. By the time she'd finished, the new course predicted a total flight time of 30 hours 42 minutes.\n\nHe glanced at the ship's chronometer and saw that it was currently 11:17 in the evening. \"We'll get there the day after tomorrow, at six in the morning...\"\n\n\"Did my mom give you an ETA for the Kintark armada?\" Calara asked, her lovely face shadowed with worry.\n\n\"That morning sometime, but she didn't have specifics... I'm not sure if High Command even know for sure,\" John replied, drumming his fingers on the armrest of his Command Chair. \n\n\"We've reached the edge of the Alpha Vulpeculae system, engaging hyper-warp,\" Jade informed them, powering up the Progenitor-class Tachyon drive. The white battlecruiser was bathed in a crimson glow from the system's giant red star, before it disappeared in a flurry of blue Tachyon particles.\n\nJohn was quiet for a moment, studying the flight path that crossed the Brimorian Enclave, the line travelling wide of Brimor by a few systems. \"What kind of delay are we talking about if we go via Brimor?\"\n\n\"It'll add seven minutes,\" Alyssa replied, already calculating the difference before putting hands to console and projecting the proposed changes on the Empire Map.\n\n\"What are you thinking?\" Calara asked, looking at him wide-eyed.\n\n\"If the Kintark are throwing everything they've got into an attack on Terra, we need the Invictus, Raptor, and Valkyrie upgraded to the max,\" John said quietly, staring intently at the map. \"We got what the Brimorians wanted, I don't see why we can't pick up our new shield generators on the way. If we call ahead and get them to have the equipment ready for us, we can do a rapid refit right there on the planet surface.\"\n\nDana let out a mournful sigh and slowly shook her head. \"I'm really sorry, John, it'll take far too long... We'd have to rely on the maintenance bots to do the work and there's a lot to do. They'd need to remove the fore-deck plating over the shield generators, remove the old components, install and hook up the new ones... We're looking at an eight-hour job, easily.\"\n\nJohn narrowed his eyes as he stared at Brimor on the map. \"How long would it take if Alyssa psychically strips the armour in one go, then me and the Valkyrie swap out the shield generators?\"\n\n\"You want to just do that out in the open?!\" Dana exclaimed, jaw hanging open in shock. \"Everyone will be able to see what you guys can do!\"\n\n\"Fuck it, we've got no choice,\" John replied with a grimace. \"How long?\"\n\nThe redhead stared at him for a moment, then blinked and replied, \"I dunno, thirty minutes?\"\n\nHe nodded, his expression bleak. \"Alright, sounds like a plan. While we're doing that, the rest of you and the maintenance bots can install as many Eternity Crystals as you can... you said earlier you'd thought of more uses for them?\" \n\nDana gave him a look of disbelief that eventually spread into a sparkling grin. \"Fuck yeah! The internal structure of those Eternity Crystals is pretty much perfect! If we swap out our current focusing crystals in all our energy weapons, we'll be able to do the same damage for about half the power requirements!\"\n\n\"So we can keep pumping in more energy and increase our firepower?\" Calara asked, her face lighting up with excitement.\n\n\"There's a limit to how much stress the barrels can take, but we can definitely crank up the damage on our Photon Lasers and Pulse Cannons!\" Dana agreed, nodding enthusiastically. \"For the Nova Lances we can just half the power... that'll massively reduce the phased impedance and let us take advantage of the upgraded Kintark heatsinks. We'll be able to fire those bad boys twice as fast instead!\"\n\nThe Latina clapped her hands together with glee, her grin almost as broad as the redhead's. \"Outstanding!\"\n\n\"What about the Shield Projectors?\" John prompted, his expression still tense. \"How much of a difference will Eternity Crystals make there?\" \n\n\"Oh fuck, I forgot about that!\" Dana replied, stifling a giggle. \"They'll double our shield strength! When we get them installed along with the Brimorian generators and the Maliri modulators, we'll be packing stronger shields than a fucking battleship!\"\n\nJohn leaned back in his chair with a thoughtful look on his face. \"Can you really upgrade all those guns and the shield projectors in just half-an-hour?\"\n\n\"Yeah, it shouldn't be hard at all,\" Dana replied, sounding supremely confident. \"Focusing crystals are usually the first things to burn out, so Terran and Maliri weapons are designed to make it easy to swap them. I'll search through all the Eternity Crystals we swiped and sort them into sizes for the different guns. Trust me, with us and the bots working together, we can get them all done in thirty minutes no problem!\"\n\nJade looked excited as she said, \"If we aren't worried about keeping our abilities hidden, I could shapeshift into a form much better suited for this kind of work!\"\n\nShaking his head, John replied, \"Thanks for the offer, honey, but I've got another important job for you. I want you to take the stealth shuttle and fly out to the spot you found Helene. Faye can keep an eye on the ship, while you dive down to meet with that girl again; I'd like to find out whatever we can about 'the Abandoned'. Something about their situation stinks like a hold full of Cagfish.\"\n\nThe Nymph sounded delighted as she replied, \"I'd love to see her again! I'll disembark from the Invictus as soon as we hit Brimor's lower atmosphere.\"\n\n\"Alright so we all know the plan, any objections?\" John asked, looking around at each girl in turn.\n\n\"Not an objection, but I do want to point out something important,\" Tashana replied, her angular eyes revealing her concern. \"Our deal was to bring the Brimorians the schematics so they could manufacture Eternity Crystals, but you need to have psychic ability to actually be able to grow them. The schematics for the psychic amplifiers and the crystal solution are going to be useless to the Enclave...\"\n\nJohn gave her a coy smile. \"Don't worry about that, I'm pretty sure I remember exactly what we agreed to do in exchange for the Shield Generators.\" He glanced at the purple sprite perched on his console. \"Faye, did you record my conversation with Athgiloi?\"\n\nShe gave him a knowing smile. \"I did, John. We met the terms of our agreement to the letter.\"\n\n\"I thought we might have,\" he replied with a wicked grin, patting her on the thigh. \"Thanks, honey.\"\n\nTashana looked intrigued, but it was obvious that John wanted to keep it as a surprise, for both Athgiloi and the crew.\n\nSakura leaned forward and gazed at John. \"When are we planning on upgrading the Valkyrie?\"\n\n\"Enroute to Terra,\" he replied without hesitation. \"We'll load up the Brimorian generators for the mech and the Raptor, then we can install them on the way.\"\n\n\"Sounds sensible,\" the Asian girl agreed, with a smile of satisfaction.\n\nGlancing at the chronometer again, John frowned as he said, \"We need to discuss our tactics against the Kintark, but it's getting late now.\" He looked at Calara and continued, \"Please can you spend some time analysing how the Kintark and the Terran forces are likely to be deployed? Going by Alyssa's flightpath, we won't cross into Terran Space until tomorrow evening, so we've got a wait ahead of us before we can reach out to High Command and find out what they're planning.\"\n\nAlyssa's eyes flashed as she bit back her scathing opinion of the Terran Federation leadership, instead saying, \"Even if we can get hold of them, they might refuse to tell us how they intend to fight the battle.\"\n\n\"It's okay,\" Calara said, looking confident. \"I'll spend tomorrow predicting Terran and Kintark strategy and tactics, then calculate our best chances of success in all scenarios. If we can get all our upgrades completed on Brimor, we'll have a massive impact on the battle.\"\n\n\"If we get there in time...\" Sakura said, an anxious frown on her face. \"I agree with the plan to upgrade our ships before the fight, but we're still talking about, what, a... forty minute delay? Do we really want to risk arriving after the battle's already finished?\"\n\nJohn let out a heavy sigh and spread his hands in a helpless gesture. \"I don't think we've got any choice. The new upgrades will make a massive difference to all our ships and we're going to need whatever advantage we can get, especially if the Kintark have thrown everything they've got into this invasion. I refuse to get you girls involved in this battle without giving us a fighting chance of survival.\"\n\n\"I still find it hard to believe that High Command would deliberately turn their backs on us,\" Calara said, a forlorn expression on her face. \"All we've ever done is try to help them... why wouldn't they trust us this time?\"\n\n\"They're probably afraid of me and resent the fact that I didn't just hand over all our tech,\" John replied, his anger building again. \n\nThe Latina nodded, her expression glum. \"You're probably right, but it's such a tragic waste of what could have been an incredible advantage... With a few days to plan and prepare beforehand, I could have made the Kintark invasion a living hell for them. As it is, we'll just have to rely on brute strength to win rather than anything subtle or elaborate.\"\n\n\"I can't believe how badly High Command fucked up this whole situation!\" John fumed, before glancing at Alyssa. \"We haven't even started discussing what the hell we're going to do about the Outer Rim if the Kirrix invade too! Assuming any of the bastards in High Command actually survive the battle, I'm this close to letting you clean house...\" \n\nAlyssa rose from her chair and glided over to join him, before brushing her fingers through his hair. \"You're angry and stressed, so let's just call it a night. We can discuss our long-term plans tomorrow if you want, but I'm more inclined to just see how the chips fall after the battle.\"\n\nJohn paused for a moment then nodded. \"Yeah, you're right.\" He rose from his chair and offered the blonde his arm. \"Let's go up to bed.\"\n\nThey walked up the ramp towards the grav-tubes, the rest of the girls standing and following after them. Alyssa gave him a mischievous grin and said, \"As appealing as going to bed with you sounds, I thought you were working your way through the crew? What about your misguided attempt to atone for turning those sexy Young Matriarchs into your hot little knocked-up broodmares...?\"\n\nHe flushed with embarrassment, much to the girls' amusement. Glancing at Jade and the twins, he saw the Nymph smile and nod towards the two Maliri girls. He followed her gaze over to Irillith and Tashana who grinned in return, their eyes smouldering with excitement.\n\nAlyssa patted him on the arm before they entered into the grav-tube. \"I'll leave you in the twins' capable hands, but we'll rejoin you when they've emptied your quad. Have fun!\"\n\nLeaving the express gravtube's blue glow, he stepped aside to make room for the girls to pass as they walked through the bedroom. He received lots of fleeting kisses and flirtatious smiles on the way, until he was left alone with Irillith and Tashana. They both studied him with interest, seeing that despite the smiles he'd shared with the girls, he was tense and on edge.\n\nThe sisters shared a meaningful glance, then Irillith took his hand and led him to the bathroom. \"Let's get freshened up, then we can talk.\"\n\nTashana darted ahead and activated the shower, then they quickly stripped off and stood beneath the hot streams of water. \"Close your eyes,\" she whispered, brushing her fingers up his arm and along his shoulder. \"It's time to relax.\"\n\nJohn did as she asked and he felt the twins step closer, with Tashana hugging him from behind, while Irillith pressed herself against his chest. They stood there embracing him for a couple of minutes, not saying anything, but simply stroking his muscles and planting delicate kisses on his neck and throat. Deprived of sight with his eyes closed, and with the splashing water masking all sounds, his sense of touch heightened to compensate. \n\nJohn found himself anticipating the path of those four hands as they roamed over his body, their touch gentle and loving rather than aggressively seductive. He felt the tension flowing out of him, forgetting his fury at the Terran Federation catastrophe, as the sisters soothed away his anger.\n\n\"Feeling better?\" Tashana murmured, nibbling at his ear.\n\nHe nodded and slowly opened his eyes. \"Much, thank you.\"\n\nIrillith's enchanting violet orbs watched his face with concern. \"I haven't seen you this furious before. Are you sure you're okay?\"\n\nJohn reached behind him and guided Tashana around so that he was facing both sisters. \"You're worried that my Progenitor-guide is influencing me...\" he replied, his voice troubled.\n\nIrillith immediately nodded, while Tashana shook her head. The twins glanced at each other in surprise for a moment, then focused their full attention on him once more. "
    ],
    "authorname": "Tefler",
    "tags": [
        "vulkat",
        "zombie cyborg spiders",
        "teenager",
        "eighteen year old",
        "swallow",
        "cum inflation",
        "anal",
        "twins",
        "psychic",
        "mind control"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-099"
}