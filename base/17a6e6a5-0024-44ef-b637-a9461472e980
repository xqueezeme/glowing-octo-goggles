{
    "title": "Sisters Ch. 07",
    "pages": [
        "Aunt Stacy was a bit taken aback, not just by Natalie asking her how the date went, but by the confidence and evenness of the question. She stood, still shaking almost imperceptibility, and glared at Natalie.\n\n\"It was... ,\" Aunt Stacy started saying without any thought to how the rest of the sentence would turn out. She looked down at the floor and seemed to be trying to formulate a thought.\n\n\"Why do I think that you already know what happened?\" She had gathered some confidence and composure and started walking slowly toward Natalie, who was leaning nonchalantly against the kitchen counter. \n\nNatalie straightened up, sensing a coming confrontation. She had always excelled when the pressure was on her, and I was watching her entire being move into 'win the argument' mode.\n\n\"You wanted help, right?\" Natalie began. \"You wanted to spend time with, have a date with, have sex with, our mom. I, we, \" she looked at me, involving me in her scheme, \"did exactly that. \"\n\nI, on the other hand, was in my normal 'avoid confrontation' mode and found ample amounts of things to do besides becoming involved in a bubbling conversation/argument. And, to be fair, I DID have someplace to be.\n\nThey both started talking, loudly, at the same time. Accusations flew, arms were moved wildly, and I could have sworn at one point Natalie winked at me. Dammit she still had a plan! But I wanted to get out of there before one or both of them burst into flames. I couldn't help but notice how alike they were as they argued. Sparks were flying and I even found myself watching their bodies as they became more agitated. Similar in their tight toned bodies, firm asses, hips that curved just the right way to their waists. Where I got mom's body, Natalie got Aunt Stacy's. A button opened on Aunt Stacy's top, exposing just a little bit of skin. It was then I noticed my mouth was wide open. I really needed to get out of there.\n\n\"I am supposed to meet Brianna, I'll be back later.\" I blurted out while opening the door. I had on my running gear and if needs be, I could have sprinted down the stairs and away from them. See, smart.\n\nNeither one of them payed much attention to me, which was fantastic, and continued to focus on their perceived faults and intentions. Much too much drama for me. Besides, I was going running with Brianna, and that promised to be far more fun. Hell, I had been thinking about what she would look like in running shorts since we had talked about it.\n\n**********************************************\n\nTwenty minutes later I met up with Brianna and was not disappointed. She wore black running tights, with white lettering down the calves, a small, almost half shirt, which exposed just enough of her smooth (I looked) skin to keep my eyes prying. Her ponytail was perfect and made mine look absurd. At least I thought so.\n\n\"Hi Alison,\" she chirped at me, \"your hair looks so cute. I'm such a mess.\" I hated her wonderful innocence and sincerity. Couldn't' she just be mean and nasty and conniving and sexy when I looked like hell. . . like Natalie?\n\n\"Thanks, you look like a model,\" I gushed, a little too eagerly, \"Ready to go?\"\n\nWith a nod she began running and damn if I wasn't having a hard time keeping up with her. In school I could almost outrun everyone, fairly easily. And here she was bouncing, BOUNCING, out in front of me with such ease I swear that for a good 50 yards her feet never actually touched the ground. I, on the other hand, felt like I was trying to make cracks in the asphalt while I ran. Brianna and gravity were teaming up to make me look foolish. I was trying to think of reasons to make myself feel better. \"She doesn't have these big boobs\" I reasoned. \"Also, my hips are wider and therefore it takes my legs longer to move forward. It's science!\" No, I didn't convince myself.\n\nAnd I might have been running in a bit of a daze focusing on the movements of her well toned tight little ass. Well, I will only take that for so long. And my opportunity to no longer take it came up in the form of a corner bakery that had fresh bear claws on display. With as much grace as I could, I ducked into the bakery while a laughing Brianna ran blissfully around the corner. \n\nMoments later a visibly confused Brianna rounded the corner and spotted me sitting at an outside table for the bakery, sipping a cappuccino and trying to convince myself that I really SHOULD eat the last half of my bear claw.\n\n\"There you are,\" Brianna said, all cheery and wonderful, \"I was about half a mile down the street when I turned and you were gone.\" She laughed.\n\n\"Hard to turn down a bear claw when they're warm. Want one?\"\n\nWe sat in the unusually warm morning sun and chatted away. Every now and again she'd ask something that she thought might be off limits, but which I didn't really care about.\n\n\"How long have. . .,\" she paused, her eyes downward as she made a show of chewing on a bear claw, \"you and Natalie been together. . .as a couple, I guess.\"\n\n\"Not long as girlfriends,\" Brianna reacted ever so slightly to me saying 'girlfriends'. This was all quite new to her. \"But we've known each other since we were kids. Grew up together.\"\n\n\"Grew up together?\" Brianna frowned in confusion, as if she was trying to figure out a particularly difficult brain teaser. I could see in her face that she was trying to piece things together and now was the time to come up with a rock solid lie to tell her.\n\n\"Yeah, we grew up on the same street.\" she didn't need to know we grew up in the same house, same room, and that I once stole her rain boots when she was stuck in the mud and told mom that she was outside in the rain in her socks. \"She's a year older, but we went to the same school and all that.\" Note to self: Tell Natalie that this is the story we're going with.\n\nBrianna smiled and tilted her head to the side, her eyes dancing as her ponytail fell on her left shoulder.\n\n\"So, you didn't, um, do ...well, I mean, you two didn't. . . never,\" She stammered a little, unable to form the question she really wanted to ask.\n\n\"No, we never did anything.\" I laughed a little laugh, to assure her that it was ok. \"I had never even kissed another girl, you know, that I liked, until last year when I came to visit her.\" I popped another piece of pastry into my mouth.\n\n\"So you never kissed anyone until last year??\" Brianna leaned forward. She was cute.\n\nI laughed again and explained it to her. Yes, I kissed guys before. Had boyfriends. Even had sex with them. She blushed when I told her that. I guess it was somewhat amazing for her to hear me casually talk about sex out in the open, with pastries and coffee. And she was somewhat surprised by me saying that I had sex with guys. She just assumed that I liked girls, therefore never would have done anything with a guy. Oh, Brianna, it's so much more complicated than that.\n\nWe continued to chat about school, life, weather. Just normal things. I didn't mention how her running made me feel like I was dipped in concrete. No need to build her up THAT much.\n\nI watched her cute face closely as we talked. She was so genuine and cute I kind of let my mind wander. \n\n\"What's up?\" Brianna was looking at me, having noticed my glassy stare.\n\n\"Oh, you just got a bit of frosting on your cheek by your lip there.\" Nice save, I thought.\n\nBrianna giggled and began searching for the offending bit of frosting with her tongue. Pink, searching, moist. Jeez, I was letting my mind go. \n\n\"Did I get it?\" A wide eyed Brianna chirped optimistically.\n\n\"Yup, you got it. It's all gone.\" It wasn't gone. Still there. She missed by a mile, but I wasn't about to admit I was staring at her cute face, wide eyes, pouty lips and silly expression to actually check if she got it. No, I would let this go.\n\nWe ate and chatted some more then Brianna convinced me to run toward home, resulting in a patented appearance of Sweaty Alison. She even slowed her pace so I could stay with her which made me both happy and annoyed at myself. \n\nI bid Brianna adieu and was almost home when I saw Aunt Stacy coming out and walking to her car.\n\n\"Aunt Stacy\" I called, giving a little jog to meet up with her.\n\n\"Oh, hi Alison,\" she smiled at me, her expression one of calm contentment.\n\n\"Leaving already?\" I really didn't know what to say. Was I supposed to say 'So did Natalie continually meddling in your personal life work out ok today?' I thought this might not be a good time to ask that.\n\nShe looked at me sideways as she opened her car door, readying to get in, \"Yeah, I have to get home. . .\" she paused, then \"your sister. . .\" shaking her head while giving a slight laugh.\n\nWith a quick exchange of goodbyes, she was driving off down the street more recklessly that she should have in her beat up old volvo. \n\nShe wasn't angry anymore, so . . .what did that mean? I had to ask Natalie, and now.\n\n*************************************************************\n\nI ran up the stairs, partially to punish myself for the bearclaw, and felt the humidity surrounding me. I was drenched.\n\nI entered the loft and immediately went to the kitchen to get some water. I think I mumbled a heavy breathing \"hey\" to Natalie, but I don't quite remember. She was sitting in front of the computer, looking her normal self-assured self.\n\nI filled a glass with water and, leaning against the sink, began to drink with the abandon you do when you're really thirsty. I heard Natalie behind me, but paid no attention. That is, until I felt her fingers in the waistband of my running tights.\n\n\"Hey\", I said, not so wittily.\n\nBefore I could say anything else, Natalie had pulled the tights down to my ankles, panties and all. I could feel the cool air of the loft on my skin, which was still slick and wet with my perspiration. \n\nI was on the cusp of being angry with her when she did something unexpected. Well, unexpected to me.\n\nIn a flash, her hands pushed on my ass cheeks, making me press forward against the counter, and pushing them apart. It was as if I could feel the ridges on her fingers on my cheeks. In an instant I felt her tongue exploring, probing, licking and diving between my cheeks. I felt the tingle, the excitement and the uncertainty of her tongue pressing against my ass. \n\n\"Oh fuck Nat. . .\" I managed to get out as Natalie continued her assault on my behind. Her tongue flicked and pressed until she managed to get her tongue fairly deep into my ass. The sensation was a mixture of shock and pleasure. If there was any doubt as to whether I was enjoying it, that was easily cleared up when one hand slid between my legs and began sliding between my very wet lips. \n\n\"Nat, you're. . .jesus. . .don't. . .yessss\" I heard myself say. \n\nMy legs, already shaky from my run, began to lose the ability to hold me upright. I put the water glass down with a too-loud clink and rested my weight on my elbows, hoping the counter was sturdy enough.\n\nNatalie's tongue had somehow become quite good at pleasing my ass, as she moved it in and out of me, making me moan louder. Her tongue, combined with a skilled finger rubbing my hard slick clit, was rapidly bringing me closer to exploding, collapsing, and probably forgetting my own name. Her eating my ass was a sensation I was not at all prepared for and found myself making a subconscious mental note to INSIST she do it again. . .and again.\n\n\"Fuuuccckkkk. .. . \" I yelled as I came. I could feel my juices coating my inner thighs and dripping down as Natalie shifted her tongue to my pussy, eagerly lapping up my wetness. My legs were not functioning anymore and I slowly slid down the counter, finding myself in a heap on the ground, the aftereffects of this tremendous orgasm still pining around inside me. My eyesight was unfocused and after a minute or two or 40 of resting my head on the side of the cupboards, I caught the sight of Natalie leaning against the counter, drinking from a water bottle, but still exhibiting the look for adorable smugness that I loved so much.\n\n\"Welcome home,\" she said with a soft smile.\n\nI smiled weakly. \"What brought that on?\" I began my struggle to stand.\n\nNatalie gave me a \"I dunno\" shrug and leaned over.\n\n\"Just had to be done.\" She said with a wink. Then she moved to the door.\n\n\"Wait, where are you going?\" I asked, \"You can't go, I have to ...you know. . .repay. . .\"\n\nNatalie shook her head, \"I have music to compose. You'll have to make due some other way. Bye.\"\n\nAnd with that, she was out the door. Leaving me wanting to reciprocate; wanting to explore; wanting to cum again; wanting to make someone else collapse in pleasure.\n\nI struggled to my feet, discarding my tights and walking unsteadily in a somewhat random direction. I knew I wanted to shower or lay down or something, but my brain wouldn't allow me to focus. \n\nBut there was one thing I did know I wanted.\n\n\"Hi Ava.\" I said quickly into my phone while sitting down at the computer.\n\n\"Hi honey,\" Ava said, her voice silky smooth and sultry, \"what's up?\"\n\n\"Get over here now,\" I was trying to be firm, authoritative, domineering, \"and don't wear anything too complicated.\"\n\nThere was a short pause. I thought maybe I had gone too far.\n\n\"But, I'm at work,\" Ava responded, quietly. Almost meekly. I hadn't gone too far.\n\n\"I don't care. I need you here, so get here. . .now.\"\n\n\"Ok\", came the reply, obediently. \n\nAva was a joy and at this moment I needed her to be all the things she could possibly be to me. I'd show Natalie for leaving me wanting. Well, I'd show AVA, but, you know. . .\n\nI was trembling, fully naked now, from anticipation when I heard the knock on the door. I flung it open, probably a bit too quickly, and caught sight of Ava. Her hair pulled back, showing off her perfectly structured face. White button up top and plaid skirt from work. Her toned tanned legs down to her ankle socks and plain blue Vans. .. she was like a dream. Her eyes were down, her hands behind her back. Her body language was showing subservience to me and the situation. I loved every bit of it.\n\nSomehow, someway, without knowing or thinking or even trying, I pulled Ava inside, closed the door, pushed her against the door, placed my bare leg between hers, and planted a firm, soft, wet, hot kiss on her sweet full lips. Her leg felt warm and smooth on mine and her tongue instantly found mine as I held her wrists tightly, pushing them against the door as well. I wanted to touch her and taste her and do EVERYTHING to her. . .all at once. My mind was far ahead of my body, having already purchased a cottage by the sea for us. Far too far ahead.\n\nI reached for her button up top, planning to tear it off with a flourish. \n\n\"This comes off,\" I said, breaking our kiss, yet still tasting her lipstick.\n\nI looked down and the top wasn't even buttoned, denying me my desire to rip, tear, destroy. I looked at her with what I assumed were wide questioning eyes.\n\nAva smiled a little smile, \"I like this shirt and I didn't want you to, you know. . .\"\n\nI smiled back, realizing that maybe shredding her clothes wasn't quite the perfect thing to do. I leaned in again, kissing her deeply while opening the top wide. I could feel her breasts pressed to mine, her nipples felt hard enough to cause a bruise. I'm sure mine pressing to her felt rock hard as well, which is exactly how I wanted her to know how excited she could make me. Though, realistically, I was this geared up because of what Natalie did earlier. Thinking about her, just in that instant, drove me to kiss Ava harder, with more abandon, than before. I ran my fingers along the right side of her head, sliding through her hair, gently touching, teasing, pulling her to me. \n\nI broke our kiss, a thin line of saliva briefly still connecting us. I watched as Ava bit her lower lip, her face alive.\n\nI placed both of my palms on her chest, slowly moving down, feeling the warmth of her skin, the firmness of her near perfect breasts, and the deep breathing she was giving me. I let one hand continue its journey, and ran my short red fingernails between Ava's breasts, eliciting both a long low soft moan and goosebumps.\n\n\"Your body is perfect,\" I said softly, looking into her wide and flawless eyes.\n\nAva gave a slight half lips smile as my hand had slid low enough to lightly caress her bare mound and slide effortlessly between her legs. As I expected, she moved her legs to give me an easier time. The moment my finger touched the edge of her pussy lips, I began to circle one of her nipples with the edge of my thumb.\n\n\"Ohhhh\", Ava released, her eyelids closing halfway and her head tilting just slightly back. My fingers ran slowly over her warm lips, so moist and so ready and I felt I could feel her heartbeat as I let the tip of my finger run over her quite hard clit. Feeling her arch her back as I touched her, I leaned forward, taking one of her sculpted breasts into my mouth, sucking on her nipple with just my lips, pulling it, savoring it. I could feel her body shake once, twice, a series of times as I worked my mouth and my finger in unison. My god I wanted her to cum right here right now. More than that, I NEEDED her to. \n\nLooking up at Ava's face; her eyes closed, mouth open in a sensual O and her breathing erratic and building. I hadn't let her touch me and I was already soaking myself.\n\n\"Come on Ava,\" I implored, \"I want you to cum for me. You like this don't you honey?\" I was channeling my inner Natalie and enjoying being in charge and domineering. I was rubbing her clit fast now, her juices making both my finger and her clit slick and slippery and perfect for her body to react. AS she shuddered under my touch, I slipped my finger into her warm wet pussy, looking for that wonderful spot that would send her over the edge. My finger moved and explored and I could tell I had found my intended target. \n\n\"yes yes, fuck yes.. \" Ava gasped, her legs quivering and her voice cracking, \"Fuck. . .finger me, take me, I'm yours . . .all yours. . .I'm cumming\" Her voice strangled itself as her body shook. I could feel the orgasm thrashing her from head to toe and I held my finger to her clit, keeping even pressure on her as I kissed her deeply, feeling pleasure and power in kissing her when she was all but helpless to my touch. After a great deal of kissing, panting, recovering her breathing and recovery, Ava looked at me with a faint, but slightly giddy, smile. \n\nFinally she gathered her breath and said, softly, \"What can I do for you?\" Her eyes barely making contact with mine as she was giving herself up to me.\n\n\"On the bed, nothing on,\" I said as evenly as I could, considering I felt a fervent desire to press my soaking pussy to hers and trib until we shook the bed apart.\n\nWith a smooth quickness, Ava made her way to the bed, leaning on her elbows and looking at me with wide expectant eyes.\n\nWalking to the bed, I can't help but notice how her body rests so easily and though she's far from made up, she is effortlessly both sexual and sensual. All this makes my body hot, my nipples hard and my mind desire her even more. \n\nQuickly I was on her, kissing her, pressing myself to her, feeling her legs wrap around me, heels pressing to my ass. I can feel the heat of her pussy as I press down on her. Our bodies generating so much heat, I could feel myself beginning to sweat, and see she hair framing her face getting moist. Our kissing and touching and feeling kept going on and on. I didn't want it to stop. Our tongues playing and breath shared as our passion rose. I kissed and licked her gorgeous neck and she teased and pulled my sensitive nipples, earning her a bite on her neck. \n\nI knelt back, looking at her and watching her big expressive eyes watching. She seemed to know what I wanted and angled herself just enough onto her left side, opening her legs. I moved my right leg over her and my left slid easily under as I moved to press against her. I could feel the smoothness of her leg and, in an instant, her perfectly smooth pussy as I pressed my trimmed and soaking wetness to her. This was what I was made for, I thought, tribbing. ",
        "My hand on her hip, I began to press down and rock my hips, applying pressure and friction (as much as there could be with me a virtual slip and slide) to Ava's loving slit. Slowly at first, I began to move my hips faster, feeling her push herself up and to me as my hips rotated and pressed and I used every muscle I didn't even know I had to try as hard as I could to press myself to and through this gorgeous woman. \n\nI could feel the familiar darts of pleasure radiating from my clit as I rubbed against her. Nipples hard and I was getting more and more sweaty. Looking down, I could see Ava bathed in sweat as we continued to grind, each of us saying not a word, but offering only muted grunts and moans as we pursued our path to glorious oblivion. She looked tremendous with beads of sweat either in stop motion on her skin or snaking paths down her body and onto the bed. \n\nI let out an involuntary squeal as Ava grabbed me and pressed against me hard, her red hot pussy lips pressing and rubbing against my never-harder clit. I thought I might explode right then. I began to get a little dizzy, the room was spinning and I swear I could feel Ava's every breath on my body. \n\n\"Yes yes yes,\" Ava was saying, or shouting or murmuring. I couldn't tell. All I knew was that my body was telling me this was it. Muscles tightened. Skin tingled. I felt my body giving way, getting ready to fall into an open pit of delight and enjoyment. I was holding on tentatively. I tasted a drop of perspiration on my lips. \n\n\"FUCK!\" I yelled into the world, feeling a great surge and wave of orgasm come over me. It hit me like a freight train, instantaneous and total. The feeling spread to the very edges of my body, coming back intensified. I almost immediately fell forward, my body pressing down onto a panting Ava, who was wiping the hair away from my face and planting kisses on my skin. Ava was alternately kissing me sloppily and saying \"oh fuck\" softly. \n\nI didn't want to move from where I was, which was a good thing, because I doubt I had the strength to do so. I rolled onto my back, pulling Ava to me and having her rest her head on my shiny chest. Her hand moved lazily on my stomach and made non threatening forays over my breasts.\n\n\"That was,\" Ava managed to breathe out, \"amazing. . .I don't. . .jesus.\"\n\nI smiled and she looked up into my eyes. She looked like a dream. A dream that had come true.\n\n\"Glad you could come over today,\" I said, with a smile, \"because this just doesn't feel the same by myself.\"\n\nAva laughed and held me closer.\n\n\"Hey, can you do something for me?\" Ava asked, her head resting on my chest, eyes gazing out at nothing.\n\n\"Sure, what?\" Part of me was hoping it would be something sexual. Well, you know, I was in that kind of mental space. . .sue me.\n\n\"Can you talk to Brianna for me. I tried setting her up on a few dates and. . \" she trailed off, giving her head a little shake.\n\n\"What? Did guys not like her? Didn't think she was cute as a button that is very cute?\" I found that hard to believe.\n\n\"No, not that.\" Ava laughed, \"I don't think. The guys came back to me saying she was. . . kind of cold and distant. Just ask her what happened, ok?\" She gazed up at me.\n\nHow could I say no to her?\n\nIt was an hour before I had the energy to get up.\n\n*************************************************\n\nI finally DID get up and pulled on a slightly-too-tight tanktop. I actually liked it because it pressed my breasts together and, frankly, made me look really good!\n\nJust as I began my slow post sex walk to the kitchen for water, I heard the tell tale sound of a Skype call coming in. It was mom. I had better take it. Though I should sit down. No need for mom to see me without panties on, I thought, at least not yet. What? So many thoughts crowding into my head, I certainly didn't need, right now, the idea of my mom seeing me half naked in there.\n\nI hit the mouse.\n\n\"Hi mom\" I chirped, trying to act normal.\n\nMom was dressed casual, button up top, necklace, hint of cleavage, hair down, lipstick a conservative near-beige.\n\n\"Hi hon,\" her eyes looked me over and I noticed her gaze falling to how I was fitting, or not fitting, into the tank to, \"is. . .is Natalie around?\" She had a look of slight concern on her face.\n\n\"Nope,\" I said, proud of myself for being able to not lie to my mother, \"she took off about an hour or so ago for school. Something about 'music to set the world alight.' You know her.\" I smiled. Unthreatening, nice, happy Alison.\n\n\"Oh, ok, \" mom said, and seemed to be about to continue when I interrupted.\n\n\"Oh, Nat did want me to ask, if I talked to you, if you had heard from Aunt Stacy.\"\n\nMom visibly blanched. She backed slightly away from the camera and let her mouth hang open in a quite oddly unappealing way. She seemed to struggle for something to say or how to say it or a way to run screaming away from the computer and to a nice B&B with an ocean view.\n\n\"Why . . .why does she want to know that. I mean. ..Aunt Stacy. . .how would I know. . .\" She was mumbling and rambling.\n\nI kept going.\n\n\"So yeah, Aunt Stacy said she was going on a date the other night. Was all excited about it,\" I paused and watched mom's face register some surprise and shock, just a little. \"And she was all hyped up and like a little kid. It was cute, actually.\"\n\nI watched mom try to say something, her lips trying to form words, but nothing happening.\n\n\"So Natalie, you know how nosey she is, called her and Aunt Stacy seemed really down. We were hoping the date would go well. But I guess it didn't. Thought you might know something.\"\n\nI smiled to myself and my acting prowess. I had her convinced of the story. Maybe art wasn't my future. Maybe I was born a thespian and this was my finest performance to date. I patted myself on the back, mentally. Mom sat silently, looking exactly like someone who doesn't have the slightest clue what to say.\n\nOut of the corner of my eye I saw movement. Ava was getting up, stretching, showing the universe with every movement that her body was that of a goddess. I watched mom on the screen looking everywhere but the computer, trying to process what I told her. I made a motion to Ava that I was on video chat and she grabbed some clothes, threw them on, and walked behind me.\n\n\"Who's that. . \" mom asked, quietly, still not having recovered confidence after I presented her with the information.\n\n\"Oh hi,\" Ava said happily, bending down to get in the camera frame, \"I'm Ava. Me and Alison just worked out.\" she smiled a smile that I knew the meaning of.\n\n\"Went for a run actually.\" I looked back at mom who seemed to be staring at Ava.\n\n\"You're Alison's mom? She looks just like you. You could be sisters!\" Ava was flirting. Stop it Ava.\n\nMom blushed a little. Actually blushed. Then she ran some hair behind her ear and smiled. \"Thank you Ava. But I'm quite old now.\"\n\nAva laughed, \"Ha! Alison will be lucky to look like you when she gets older.\"\n\nThere was a long pause as we all three pretended to not know the flirting that was going on.\n\n\"So Ava, off to work. . .now?\" I gave her a stern-ish look.\n\n\"Yup, back to the fun. We'll have to work out again Alison. Always good for the soul. Bye Alison's mom.\" She waved, walked to the door, blew me a kiss and was off.\n\n\"So anyway,\" I continued, \"if you could find out what's up with Aunt Stacy, that would be great. Since you'll both be at my show next Saturday, right?\"\n\nI knew she was going to be at my art showing. It was a big thing. A huge thing. I knew there was no chance she'd miss it, even if she felt strange about what was going on with Aunt Stacy.\n\nMom snapped out of her daze, \"Of course I'll be there,\" she was smiling proudly for me, \"I'll. . .I'll have to let you know about your aunt. . .I haven't. . .spoken to her in a while. But we'll talk at your show, ok?\"\n\nShe was rushing the end of our conversation, which was fine with me, actually.\n\n\"Right mom. I have to take a shower and head to school. Bye.\"\n\n*********************************************************\n\n\"How about her?\" Brianna was giggling and pointing in a very non-discreet way.\n\n\"Bri. . .\"\n\n\"Do you think she's cute? Do you like her? Oh and her, right over there. In the blue skirt.\" \n\nBrianna and I had sat down at a campus cafe and had been drinking coffee and avoiding class and she decided to point at just about every girl that walked by and asked me if I liked them. It was slightly annoying, but I realized that she was doing it not only because she was curious, but also because she was becoming more comfortable with who I was.\n\n\"She has a nice body, you probably like her, right?\" Brianna looked at me with her wide optimistic eyes.\n\n\"Look,\" I started, giving her a smile and raised eyebrows, \"it's not that easy to say I like her. Do I think she's pretty? Sure, but I don't know anything about her. She could be an angel or she could be the biggest bitch in the world. Probably wears those ridiculous long fake eyelashes that makes her look like she's got a broom on her eyes.\"\n\nBrianna laughed hard, almost doubling up. She was adorably cute and it seemed that every little moment like this was opening her more and more to a world she had never even known existed. Even though the world was fairly mundane.\n\n\" If she's wonderful, it doesn't much matter what she looks like. Though. . .that is a bonus. Anyway, it all depends on the girl.\"\n\nBrianna crunched on a potato chip. \"What about me?\" She asked, and tried to look casually disinterested in my answer. \n\n\"You?\" I leaned forward on the table, \"That's not really fair. I know you and wouldn't make a play for you because I know I'd be shot down. I have an ego that can get hurt too, ya know.\"\n\n\"Unlike Natalie?\" Brianna laughed.\n\n\"Exactly! She has confidence enough for both of us.\" I smiled back and thought I saw a glint of interest in Brianna's eyes. Though that might have just been the reflection of interest from my eyes.\n\nMy phone buzzed.\n\nIt was from Natalie.\n\n\"Got a new cut. A bob. How fucking cute am I?\" Plus a picture. She got her hair cut in a collar length bob, color lightened and was wearing a lattice choker. Fuck! I could feel my nipples hardening just looking at the picture and thinking about her.\n\n\"What's up?\" Brianna asked, scooching up next to me and looking at the picture.\n\n\"Wow, she looks great!\" Brianna enthused as only she can, \"She could be a model looking like that.\"\n\nI smiled outwardly, feeling a little fuzzy. \n\nBuzz again\n\n\"And another just for you.\" Another picture. I open it. \n\nA selfie from above showing her entire body, naked. Her breasts perfectly shaped, her nipples as hard as mine felt and her other hand on her toned stomach, teasing that heavenly little patch of hair just above her mouthwatering pussy. I paused with my mouth open for what had to have been 45 minutes.\n\nThen I remembered Brianna was sitting next to me and probably was in shock.\n\nI turned. \"Bri, I'm sorr. . .\" But Brianna didn't look shocked at all.\n\nShe was staring at the picture, eyes glued.\n\n\"Bri. . \"\n\n\"Huh,\" she turned to me, then looked at my phone quickly again, \"Oh. . .Natalie has such a nice body, unlike,\" she looked down at her yellow floral dress, hand smoothing it a little, \"Unlike flat-chested me.\"\n\nI put the phone down and turned to her, holding her hands on her lap.\n\n\"Look Brianna, you're lovely. Adorable. Pretty. You have to stop comparing yourself to other women. Natalie, me or Ava or . . .anyone for that matter. Be you. You're beautiful as you are. Trust me there's times when these,\" I motioned to my breasts, \"are a bit too much.\"\n\n\"Like when we were running?\" Brianna asked.\n\n\"Exactly.\" I smiled and after a moment of what seemed deep contemplation, Brianna did too. She smiled her winning smile and her eyes squinted and she gave my hands a squeeze and that was that.\n\n\"And,\" I said after a few moments, \"Ava wanted me to ask you what happened with the guys she set you up with?\"\n\nBrianna blushed a little.\n\n\"Umm, can we talk about something else?\" She made the question sound more like a statement.\n\nI let her off the hook. . .for now.\n\n************************************************\n\nGetting back home I undressed down to panties and tanktop.\n\nI got a text from Natalie.\n\n\"Wut u thnk bout the vid?\"\n\nWhy couldn't she just use real words?\n\n\"What?\"\n\n\"Link in ur mail.\"\n\nI opened my mail and there was an email from Natalie. Unusual.\n\nIn it was a link to a video. I opened it. \n\nIt was from our laptop cam and it was from just after I left in the morning, with Natalie and Aunt Stacy arguing. Not the best angle and the audio wasn't great, but there it was.\n\nMade me a little uncomfortable hearing them argue, loudly, about mom and what we were doing. I felt bad, then I saw it. \n\nNatalie looked right at the camera, winked, then slowly walked to Aunt Stacy, a crazy wicked smile on her luscious lips. Aunt Stacy was still angry and seemed to be trembling with fury. \n\nThen Natalie moved, with a quickness she rarely showed, and kissed Aunt Stacy, her hands moving behind Aunt Stacy's head, fingers sliding in her hair. I sat opened mouthed. I'm sure I looked like a big mouthed bass.\n\nAunt Stacy was visibly stunned, from the 3/4 back view I had, but recovered quickly and her hands moved smoothly to the small of Natalie's back. With that encouragement, Natalie, being Natalie, jumped up and wrapped her legs around Aunt Stacy's waist, her arms around her neck and the kissing became very intense. I could hear, even with the terrible microphone, the sounds of their breath and lips and tongues and I was getting more excited by the moment and thought I might explode and they both still had clothes on! Was I now a voyeur? Was this my new kink? Hmmmm.\n\nAfter a few moments, Natalie broke the kiss, stepped back, her lips glistening with Aunt Stacy's saliva, her smile wide and, I had to acknowledge, naughty. She pulled her top over her head, exposing her fine firm pale breasts. Slowly she moved her hands over them, teasing and taunting Aunt Stacy. And, by extension, me. \n\nI could barely see Aunt Stacy's face, but I could see a change in her expression. She cocked her head slightly to the right, reached out with her hands and began pinching Natalie's already very hard nipples. Natalie closed her eyes, and both moaned and let out a little yelp of pain. not that she wanted Aunt Stacy to stop, I'm sure.\n\nAunt Stacy leaned in and kissed Natalie, hard. I could see the lust rising in the body language of the older woman. It was exhilarating and exhausting and frustrating. . .because I wasn't there!\n\nNatalie broke the kiss, had her head down, gave Aunt Stacy a playful and naughty smile, giggled, then ran out of the camera frame. I could hear her laughing and though I couldn't hear the words she was saying, it was obvious she was urging Aunt Stacy on. Which worked, because shortly Aunt Stacy undid her top. She paused just long enough to show her well shaped breasts and dark nipples before she too left the camera frame. I felt a little downhearted, remembering the video of Mom and Aunt Stacy and not being able to see what was happening. I heard the noises, movements, groans. A few minutes of sound that made me aware that I was very wet myself and that somehow, someway, my hand was between my legs. \n\nJust when I was about to give up on the video and take care of myself, Natalie burst into the camera frame naked, laughing, sitting down in the computer chair, spinning around and lifting her legs up, and out. Aunt Stacy moved slowly, deliberately to Natalie, then knelt down. I could see her face between Natalie's legs. She must have been kissing and licking Natalie's inner thighs, judging by the angle of Aunt Stacy's head and by the contented sighs coming from a eyes-half-open Natalie.\n\nNatalie leaned back more, her legs held open at the knee by Aunt Stacy, who was very busy. Natalie went from softly moaning to almost yelling in mere moments. I pressed my fingers to my panties as I watched Natalie trying to squirm with Aunt Stacy's face firmly pressed to her pussy. Natalie was thrashing and moaning and emitting noises. Now and again she looked directly into the camera, including me in the experience. Again, I loved this girl.\n\n\"Fuck fuck fuck FUCK!\" Natalie was yelling. She was cumming with a force I was envious of. Well, envious of causing, I suppose. Her head fell backward, her chest pushed out, her nipples looked so hard and I could actually hear Aunt Stacy licking Natalie's wetness. \n\nNatalie turned, looked directly into the camera with her glazed eyes, moaned some more, sighed \"I'm cumming again, holy. . .shit. . .\" and hit something that made the video go out. \n\nI was stunned. Stunned and horny and wet and tingly and amazed. . .but not REALLY amazed. It WAS Natalie. She was capable of anything.\n\nI could feel my nipples pressing, hard, against the tanktop and got up, fully intending to toss it aside, throw myself on the bed and make an honest woman of myself.\n\nKNOCK KNOCK\n\nHuh?\n\nMaybe they'll go away.\n\nKNOCK KNOCK KNOCK\n\nDammit. I paused, still with tanktop half on. My body unsure if it should continue its journey toward bliss.\n\n\"Who is it?\" I called out, hoping it would be someone wanting to sell me something so I could tell them to fuck off.\n\n\"Umm, it's me,\" the soft voice said, \"Brianna. . .can. . .can I come in and talk to you?\"\n\nWell, I couldn't ignore Brianna. Well, I COULD. But I didn't want to.\n\n\"Yeah, just a sec, let me get something on.\" I grabbed a pair of shorts, adjusted the tanktop (which was still far too tight) and padded to the door.\n\nI opened the door and Brianna was there, her head down, hands together in front of her.\n\n\"Hey\" I said, trying to act like I wasn't as soaked as I actually was.\n\n\"Alison, I just wanted to apologize for being short and snippy with your earlier.\" She didn't raise her head yet.\n\n\"What?\"\n\nHer head came up.\n\n\"When I didn't want to talk about the dates that didn't work out and stuff. I was rude.\"\n\nI know that's what she said, but in reality the only thing that was registering was that Brianna was wearing dark rimmed glasses and had a nose ring. She looked both adorable and sexy and if there were a \"Post your best Sexy-Stern Librarian pictures\" website, I'd have been submitting her right then. Far from detracting from her innocence, the glasses seemed to draw attention to her liquid hazel eyes.\n\n\"What?\" I stood there staring like an idiot. Luckily Brianna couldn't read my mind. Whew.\n\n**********************************\n\nI invited Brianna in and she slowly made her way to the living area, sitting down and not lifting her eyes. She was wearing a pair of faded jeans and an angora sweater that was just loose enough to move freely and catch the eye, but tight enough to show that she didn't have a shirt on underneath. Not that I was staring intently or anything.\n\nI sat next to Brianna, leaning forward and resting my forearms on my thighs.\n\n\"First off,\" I began, trying to lessen her obvious anxiety, \"the glasses and the nose ring!\" I smiled a big bright smile, trying to let her know that it was safe to talk to me.\n\nBrianna kept her head down and looked up at me with her wide eyes, pausing before making any gesture. Slowly she broke into what looked like a mischievous smile and raised her head.\n\n\"I had been talking to Ava,\" she began, her voice starting soft, but becoming more. . .normal, \"and she suggested that I get the glasses to see. . .and also that guys liked them.\"\n\nShe tilted her head ever so slightly which made me let out just a little bit of a squeak.\n\n\"And the nose ring?\" I had to know.\n\n\"Oh,\" She said, straightening up and looking down, \"this is a clip-on. Ava said I should get a real one, but my parents would kill me if I did.\" She removed the ring and it didn't make her any less cute.",
        "We both smiled.\n\nThere was a pause.\n\nShe looked down, then up at me.\n\n\"So, yeah,\" she started, her eyes now darting around, \"I wanted to apologize for being rude to you earlier.\" She took a beat, a long beat, before looking back to me.\n\n\"I know,\" I said evenly, \"It was quite possibly the most rude thing I've ever experienced in my life.\" I let that sit for just a moment. \"In fact I don't know how you can face yourself after being so rude.\" I waited for her to react. I waited a little more. Then waited more. And when I kept waiting I thought maybe I had poured on the sarcasm a little too much and she didn't know I was joking. \n\nThere was a look on her face and I couldn't be sure she, but I thought it was 50-50 she'd cry or laugh.\n\nShe laughed.\n\n\"Screw you Alison.\" She leaned back, laughing, her whole body shaking. I laughed too. \n\n\"Alright,\" I said, after we had sat down on the couch and finished laughing at my, let's face it, hilarious joke, \"what's going on? I mean, with the guys you went out with? Ava was concerned, and if the guys think you're not adorable, then screw them, and if they did something wrong. . .there'll be hell to pay.\" I put on a stern look that fooled neither of us.\n\n\"It's just that. . .\" she hesitated. Which was a good time for my phone to ring. Natalie. Facetiming.\n\n\"Hey Nat, just chatting with Brianna, what's up?\" I tried very hard to give Natalie a look of 'we're talking about something here, leave us alone.' Not sure if it came through.\n\n\"Yeah, I talked to Ava and. . .what the fuck? Did one of those guys that she set up with Brianna do something to her?\" Natalie was basically yelling while walking on campus, probably not a good look, but it's Natalie, so. . . . I shrug.\n\n\"Turns out,\" I looked quickly to an embarrassed Brianna, \"we were just about to have a PRIVATE discussion about that very subject. PRIVATE.\" I glared into the phone.\n\nNatalie's face was red, eyebrows pinched, lips tight. She wanted to do . . .something.\n\n\"Ok then. I'll let you go. But I have some very large friends that we can call on if needs be.\"\n\n\"Thanks Nat,\" I made a show of rolling my eyes, \"if we need the mafia, I'll let you know. Bye.\"\n\nNat started to talk again, but I hung up. \n\nBrianna had her head down, but I detected a little smile. Damn she was cute.\n\n\"Ok, continue.\" I was turned to her on the couch, leaning toward the back, my breasts fighting with my tank top for air, and propping my head up with my hand.\n\nBrianna let out a long exasperated sigh. \"See, here's the thing. . .\"\n\nShe talked. Talked and talked some more. She covered a lot of ground, some of it was actually pertinent to what I was asking about. She talked about growing up, her family, being taught by nuns, her family dog, and an incident with a carton of milk and a passing train. But the real crux of her talking was the problems on dates. \n\nShe couldn't kiss. That's not quite true. She could. Just not well. According to the guys.\n\nThey were put off by her. . .efforts.\n\n\"So. . . did you try to get some advice from Ava?\" I asked, thinking if anyone had experience to share, it would be her.\n\n\"Yeah, but,\" Brianna shook her head slightly, \"Ava is a bit. . .\"\n\n\"Slutty?\" I offered.\n\n\"Well, I was going to say 'aggressive'.\" Brianna laughed. \"But you know what I mean. I would worry she'd try to have me go from kissing to sex in one date. I don't. . .I don't think I could do that, you know?\"\n\nDespite the fact she asked the question with an obvious answer (I know), she looked at me for some sign of visual assurance. I smiled and nodded slightly. She responded with her bright smile and squinting eyes. \n\n\"So, I was wondering if . . .you. . .would help me.\" She looked down, then back up again.\n\nDid I hear her right? Did she want me to help her kiss better? This sounded far-fetched. Though, considering how my life had been going lately, this was tame stuff.\n\n\"Are you sure?\" I lifted my eyebrows, widening my eyes, \"I mean, I might not be the best person.\"\n\n\"Look, I trust you, you have always been kind and supportive and I know you won't make fun of me.\" Brianna leaned forward a bit, as if I REALLY needed convincing.\n\n\"So you're saying I CAN'T make fun of you?\" I asked loudly and dripping with sarcasm.\n\n\"Well, maybe a bit,\" Brianna laughed and she got more comfortable on the couch.\n\nAfter a bit more talking, I got to the point.\n\n\"Ok, show me how you kiss a guy. . .\" I said with a straight face, \"give me your kissing face.\"\n\nBrianna sat blankly for a moment, then closed her eyes, puckered her lips tightly and, frankly, looked like a unfriendly fish.\n\n\"That,\" I started, \"is how you kiss grandma when you go to visit.\" She opened her eyes and looked at me with a mix of astonishment and embarrassment. \n\n\"Now, try that exact thing, but on your arm. Tell me how that feels.\" Hey, I wasn't all that bad at this, I thought.\n\nBrianna puckered her lips and kissed her arm, just above her wrist. \n\n\"Oh, that's not too good.\" Brianna said with a bit of wonder. \"So do I, I don't know, I haven't. . .\" she trailed off, unsure how to proceed.\n\nI scooted a bit closer, taking her arm. \n\n\"Try it like this,\" I pressed my lips to her soft young smooth soft young skin, letting my lips linger and enjoy the feeling.\n\nI could hear her breathe in softly at my touch. This I liked.\n\nI pulled away, looking at her with a smile.\n\n\"Your turn.\"\n\nBrianna looked at her arm, a little wet spot still showing from where my mouth was. Oops.\n\nShe pressed her lips to her arm and I watched very closely and she was still a little tight, but much better. it actually looked like she knew what she was doing.\n\n\"Better?\" I asked as she stopped kissing.\n\n\"Yeah, I think so. Softer. That's how it should be, right?\"\n\n\"Well yes, but you don't want to be limp. You have to work with your partner, figure out how they kiss, and they have to figure you out and then it is really nice.\"\n\nBrianna looked down in thought, saying softly \"everyone is different\" as if it were new information to her.\n\n\"You want to try more?\" I asked, thinking this might go one of two ways.\n\nBrianna bounced on the couch just to scoot a bit closer. \n\n\"Ok, let's try it.\" She leaned toward me just a bit, a smile in her eyes.\n\nWell, that was one of the two ways I thought of. Infinitely more attractive.\n\n\"Now just relax, don't get keyed up and just enjoy sensations.\" I was trying not to be over-eager, but here was a super cute girl who wanted me to kiss her. \n\nBrianna nodded her head, taking in instructions with just a hint of a smile on her interestingly formed lips.\n\nThis was it. I was going to kiss Brianna. I probably had more going on in my mind than she did, but I certainly didn't want to let her know. I feigned a look of calm. \n\nI could feel her breath on my face a fraction of a second before my lips touched hers. Our eyes were closed. Her lips were soft, warm, moist. It was only a small kiss but something wasn't quite right. it was like kissing cotton candy. It was as if my lips touched hers and they melted and I had to move forward more and more. \n\nI opened my eyes and I was at a 45degree angle and she was almost leaning backward.\n\n\"Bri, you have to meet the person with the kiss, not fall back, ok?\"\n\nBrianna blushed just a bit, averted her eyes, and said, softly, \"ok.\"\n\n\"Let's try again.\"\n\nBrianna nodded.\n\nAgain we moved together. This time she didn't move back. She wasn't aggressive, but she was engaged. My lips pressed and moved against hers and she had on a lip gloss that I could taste. She was making small sexy sounding noises as we kissed and I could feel my nipples getting hard. I opened my mouth just a touch and Brianna followed suit. I let my tongue touch her lip and she pulled back quickly.\n\n\"Oh, I don't. . .\" she looked down and away, \"I wasn't ready for. . .\"\n\nI set to assure her. \"It's ok Bri. In the moment that can happen. French kissing I think the kids call it.\" I smiled. Brianna let out a quick laugh and held her hands in her lap. \n\n\"Alright, can we try that a bit?\" She asked, as if I'd say no.\n\n\"Ok, I won't do too much or be too aggressive,\" I paused, \"like guys can be. Just follow what I do and see what you think.\" \n\nBrianna nodded. I don't think she had any clue how wet I was or that I felt my nipples might bursts through my tanktop. \n\nOnce again our lips pressed together. There was warmth, softness, her breath, the taste of her lip gloss and the smell of whatever conditioner she used on her hair. I'd have to ask her. \n\nMy tongue licked her upper lip and I was surprised that I was met with her tongue, moving with equal parts hesitancy and purpose. Our tongues played slowly, mouths sharing wetness and the warmth of our breathing.\n\nThen I felt it. Something on my left thigh. I wondered for just a moment before I knew what it was. Brianna's hand. On my thigh. Soft and very warm and far enough up my thigh to cause a certain amount of excited alarm in my body. We continued to kiss, neither of us ratcheting up the kissing, but staying in our nice sensual lane of lip and tongue kissing silently.\n\nI could feel her fingers sliding sideways, fingertips along my skin, probably feeling my goosebumps and I certainly could feel the groves on her fingers. At least I thought I could.\n\nI felt very good. Brianna wasn't a great kisser, but she was sincere and warm and attached to my lips with her hand on my thigh. I wasn't going to complain. Instead I placed my hand on her thigh. \n\nAn instant after my palm settled on her jeans-clad thigh, Brianna pulled her leg sharply, broke the kiss for an instant and whispered a short \"no\". I removed my hand and we continued kissing.\n\nAt this point something happened that I didn't think would.\n\nBrianna's tongue became more active and found its way into my mouth, her body now almost pressing to mine. Not that I was unhappy about it.\n\nShe also lifted her hand from my thigh and had it on my waist, I could feel her fingers very very gently kneading. This was quite interesting.\n\nAs the kissing got more intense, more noisy and more. . .exciting, Brianna asked breathless questions.\n\n\"Is this ok?\"\n\n\"do guys like this?\"\n\n\"Am I good enough?\"\n\nShe was really unsure and really needing assurance.\n\n\"This is fantastic Bri,\" I breathed, \"nobody would be unhappy with this.\"\n\nThen her hand moved. Purposefully. Easily. With intent.\n\nFrom my waist her hand slide to my breast. I could feel the palm of her hand pressing to my hard nipple. My half of the kissing intensified. She responded accordingly.\n\nHer hand pressed up on my breast, giving me a jolt of feeling that made me gasp involuntarily, breaking the kiss.\n\nBrianna stared at me, eyes wide, mouth open, unable to say a thing. \n\n\"Bri,\" I started, looking at her and seeing her nipples poking her sweater as well. \"Ummm, do you. . .\" I didn't have any end to that sentence.\n\nJust then the door flew open and Natalie came flying in, arms wide open, as if expecting the adoration of a crowd.\n\nBrianna stared for a moment into my eyes, as if stunned by what we did or felt or whatever. Then, as Natalie blabbed about how she did this or that or something, Brianna stood up and composed herself, arms in front of her, adjusting her glasses.\n\nI just watched.\n\n\"Hi Natalie,\" Brianna chimed, her voice lilting and without a care in the world.\n\n\"Brianna, how are you?\" Natalie asked, looking sternly at Brianna, hands on her upper arms. \"I hope that my si. . my girl here was able to help you out.\"\n\nBrianna turned to look at me and smiled her golden smile.\n\n\"She was just great.\" \n\nAnd with that, Brianna left.\n\nNatalie gave me a little kiss and looked at me with her head turned just slightly to the right. She could see in my face something. . .a little different.\n\n\"So, want to tell me what happened?\" she asked with a smile.\n\nWell. . . \n\nTO BE CONTINUED"
    ],
    "authorname": "LittleAlison",
    "tags": [
        "sister",
        "lesbian",
        "incest",
        "taboo",
        "lesbian sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sisters-ch-07-1"
}