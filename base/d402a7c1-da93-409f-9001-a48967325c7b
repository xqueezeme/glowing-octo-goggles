{
    "title": "Multiple Units #206",
    "pages": [
        "*Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\nDisclaimers: This story has been edited by myself, utilizing Microsoft Spell-check. You have been forewarned; expect to find mistakes.\n\n*.*.*\n\nVenice Apartments had a sign out front, with the name 'Venice Apartments' in black against a background of the Italian flag of green, white, and red. Encircling the name was the silhouette of a gondola and gondolier.\n\nThe complex was comprised of four separate buildings arranged in a square. Each building faced inward, faced the pool and small courtyard. The first building, the northeast building was three floors, with five apartments on each floor. Apartments 101, 105, 201, 205, 301 and 305 were two bedroom units. The three units in between each two bedroom unit were one bedroom units. The southeastern building had apartments 106 and 107 on the ground floor, each a two bedroom unit. The second and third floors had four single room efficiencies on each. The southwestern building was a duplicate of the northeastern building, each floor with a two bedroom unit on the corners, separated by three one bedroom units. And the northwestern building was a duplicate of the southeastern building, a ground floor of two units, each with two bedrooms, then eight one room efficiencies atop. Behind the northwestern building was a large laundry room and an exercise room.\n\nAcross the parking lot in front of the northeastern building was the rental office. And on top of the rental office was the apartment building's clubhouse. Each tenant had the right to reserve the clubhouse for parties, but they must notify the apartment manager of the desired time that they planned to use the clubhouse.\n\n#206\n\nKelli Danbridge sighed with relief as she typed the last words of her novel. She knew she should run it through spell-check and grammar-check, but after three months of typing, reading, retyping, rereading, editing, re-editing, frankly, she was bored with 'Effie Through Channel Fee Nine.'\n\n\"Good God; its five twenty?\" Kelli asked herself as she looked at the bottom right corner of her laptop's screen. \"Well, too late to go to sleep now.\"\n\nShe'd moved to the DeGarde, Louisiana area three weeks earlier, moved from her home town of Sweet Oak, Texas, to begin teaching at the University of Louisiana at DeGarde. Classes would start in nine days and Kelli was still acclimating to her surroundings, getting to know the area.\n\nTruthfully, DeGarde was a great deal like Sweet Oak. They pretty much rolled up the streets after Nine pm and didn't roll them back out until daybreak.\n\nStanding at four feet, two inches, the diminutive woman was usually carded and rejected when she tried to get into nightclubs, even though she was twenty three years old. So, as a matter of course, Kelli didn't frequent nightclubs. She even had a difficult time getting into R-rated movies, so didn't care too much for going to the movies.\n\n\"So, what's there to do here at dark thirty in the morning?\" Kelli asked herself as she looked at the local listings on her laptop.\n\nOoh, Tornadough opens in, yeah, I can do that,\" Kelli smiled, seeing the advertisement for the doughnut shop.\n\n\"Garage sale, garage sale, garage, oh! That, that's right around the corner,\" Kelli said, seeing one listing among the six or seven listings for garage sales.\n\n\"Yes, Kelli, you really should go find some more stuff. That's exactly what you should do,\" the woman said to herself, looking around at the stacks and stacks of boxes that filled the twelve by sixteen efficiency apartment.\n\n\"It's just until your house is ready,\" Kelli reminded herself as she shut off the laptop.\n\nMaking her way through the labyrinth of cardboard boxes, Kelli found the door for her closet. She opened the closet and wiggled out of tee shirt and flannel shorts. Nude, she opened the second door, the door of the bathroom and entered.\n\nShe twisted the knob of the shower, getting the temperature just right. Then she eased the shower curtain aside and entered the tiny cubicle. She actually felt a little sorry for average sized people; how could they even lather themselves in such a cramped area?\n\nSetting her long blonde hair, Kelli worked a handful of shampoo in. She then scrubbed her body thoroughly. Before rinsing her hair and her body, she checked to see if she needed to run a razor over anything.\n\nStepping from the shower, Kelli stepped up onto her footstool and brushed her teeth. Looking in the badly faded mirror, Kelli didn't like what she saw. She saw her mother's disapproving face staring back at her. Same blonde hair, same high forehead, minus her mother's the wrinkled worry lines. Same green eyes, same nose too small to support eyeglasses, same button mouth, same chubby cheeks.\n\nKelli wished she looked like her father. He had tightly coiled red hair, a strong face, and a wide smile. Even with his plethora of freckles, Harry had been a handsome man.\n\n\"Oh well, at least you got my height,\" Harry would tease.\n\n\"Yeah, Daddy, at least I got your height,\" Kelli said and rinsed her mouth out.\n\nAnne Sorenski had towered over Harry Danbridge, even at her diminutive height of five one. And, ten years after their hurried marriage and the birth of Harriet Kelli Danbridge, the liver disease that had stunted Harry's growth claimed his life.\n\nKelli made quick work of drying her floor length straw colored hair, then tied it into a ponytail. She debated for a long moment, then sighed and wiggled into a 22B bra. She didn't much care for bras, but her half dollar sized areolae and hard nipples were unusually sensitive and their brown color was easily visible through sweat soaked clothing.\n\n\"God, I mean, Texas is hot, but Lord! The humidity here's just brutal,\" Kelli remarked as she pulled on a pair of plain white panties.\n\nA pair of khaki shorts, a light blue pullover shirt and her white sneakers and she was ready to go. Kelli located her purse among the clutter of her living room/bedroom/dining room and located her apartment key on the key ring. She checked that she had her wallet and checked that she had some cash in case she did decide to go to the garage sale around the corner.\n\n\"Quit; you know you going,\" Kelli chided herself. \"Don't pretend like you're not.\"\n\nThe majority of her clothing came from garage sales; children outgrew clothing at an alarming rate and Kelli could scoop up bargains. The petite clothing in department stores and in catalogues geared toward smaller people tended to be very pricey.\n\nKelli could very easily afford to pay the prices the stores and catalogues demanded. Part of the reason she could afford it was she was quite thrifty with her money. She rarely gave in to whims.\n\nA tired looking strawberry blonde smiled as Kelli whooped at being the first customer in Tornadough. The employee earned a nod of appreciation when she addressed Kelli as 'Ma'am' and didn't assume that the small woman was a child.\n\nAfter gorging on too sweet doughnuts and sugary coffee, Kelli located the garage sale near her apartment. There were no signs of life; it was only six twelve in the morning. She decided to see if she could find one or two of the other garage sales listed. Her GPS took her seven blocks north and three blocks east to the next sale.\n\nPulling up, Kelli saw two women arranging items on card tables and picnic tables and saw three customers already picking through everything.\n\n\"Good morning,\" she cheerfully greeted the women that were setting the merchandise out.\n\n\"Hi Sweetie; you here with your Mommy?\" one woman asked.\n\n\"No, my Mommy's back home in Texas,\" Kelli said.\n\n\"Oh! Ma'am, I am so sorry,\" the woman had the grace to be embarrassed.\n\n\"Lady, if I had a dime for every time I got asked that?\" Kelli smiled, accepting the woman's apology.\n\nQuickly scanning through the two racks of clothing, Kelli saw no children's clothing. A box of books grabbed her attention and she bent to see what titles they had.\n\n\"Ten cents for the paperbacks, twenty five for the hard backs,\" the woman smiled.\n\n\"Okay,\" Kelli said, quickly counting the paperbacks and the hard backs in the box.\n\nShe bought the forty two paperbacks and twelve hardbacks; she didn't even look at the titles. If she had the books already among her collection of books, she would just sell them on EBay. And if she didn't have them, then she'd just bought a treasure waiting to be opened.\n\n\"Maggie, how much for these movies?\" one customer asked.\n\n\"Dollar each,\" Maggie answered as she took Kelli's eight dollars and made change.\n\nThe woman rifled through the selection, curled her lip in distaste and walked away to some knick knacks on a picnic table.\n\nKelli saw two Star Wars movies among the DVD cases, counted the stack and determined there were thirty four movies in all. She pulled two twenties from her wallet and bought the selection of movies as well.\n\n\"EBay, here I come,\" Kelli thought as Maggie helped her carry everything to Kelli's 2015 Ford Edge.\n\nThe garage sale near her apartment netted Kelli some clothing, including a skirt and matching jacket; the man said his daughter had worn it for a funeral. The blouse was also quite pretty and Kelli was pleased. She grabbed some more books and a few more DVD titles, including the first four Alien films in the Alien franchise.\n\nOn a whim, Kelli swung over to Fontenot Road in Bender and slowly drove past 3112 Fontenot Road. From the outside, it didn't appear any different than the day Kelli had purchased the home. Inside, Kelli knew that Paul Robichaux, the general contractor her real estate agent had recommended had been hard at work, modifying the interior for a person that was height challenged.\n\n\"My girlfriend is four foot six,\" Paul had said when he and Kelli had met in the living room of her newly purchased home.\n\nKelli did notice the large wedding ring the man wore, but shook it off. She wasn't hiring him for his morals; she was hiring him for his expertise and craftsmanship.\n\n\"Well, would you look at this,\" Kelli laughed, happening upon another garage sale on Fontenot Road.\n\nAfter ransacking the garage sales, Kelli remembered she needed to do some grocery shopping. On the beer and spirits aisle, Kelli picked up a bottle of Nulough's Tropical Breeze flavored vodka. The cashier smiled and asked to see Kelli's ID, glanced at it and nodded.\n\nIt took several trips from car to apartment and Kelli was panting heavily when she finally finished unloading her car. Sitting on her futon, she decided to look through the fifty six DVD titles she'd picked up.\n\n\"Backdoor Baby Dolls, oh Maggie!\" Kelli said, finding a hardcore pornographic title in the stack she'd picked up at the first garage sale. \"Anal Lezzies, Strap On Sweethearts, Maggie, you naughty girl!\"\n\nKelli wasn't a virgin; she'd lost her cherry at a mixer on Connelly College campus her senior year. The nineteen year old girl had gone with her dorm mates to a mixer, had far too much to drink, and found herself in Tyrelle Jefferson's room.\n\n\"Shit, girl, it your time of the month? You on the rag?\" Tyrelle angrily asked, seeing blood.\n\n\"No, I'm, I was a virgin,\" Kelli said, then burst into tears.\n\nThe Morning After pill took care of any potential complications. Three Ibuprofen and a glass of orange juice and honey and an ice cold shower took care of the monumental hangover.\n\nKelli's next sexual escapade was with a large breasted and very beautiful red head. Holly Frentz licked and sucked and fingered Kelli to a few screaming orgasms, then straddled Kelli's head and rode Kelli's face to a grunting orgasm.\n\nWhile pursuing her doctorate on Post World War Two Literature, Kelli had very little time to devote to sexual interactions, male or female. She had a six inch smooth plastic vibrator to take care of those needs.\n\nAfter presenting her doctoral thesis on Romantic Literature post WWII, Kelli was approached by the University of Louisiana at DeGarde. Their curriculum of 'Literature in the Electronic Era' intrigued her and she agreed to accept the position.\n\nKelli found two more hardcore pornographic discs in her purchases and smiled. She went into her bathroom, located her six inch battery operated boyfriend, dropped her clothes to the floor and fired up her laptop.\n\n\"Hmm, let's see,\" Kelli mused and slid 'Backdoor Baby Dolls into the computer's media player.\n\nTyrelle had lost all interest in sex at the sight of Kelli's blood and tears. Holly had only played with Kelli's breasts and pussy, Kelli had only played with Holly's breasts and pussy. She'd heard of anal sex; it would have been nearly impossible to be a student on a college campus and not hear about sex and different sexual activity. But Kelli goggled at the sight of fresh faced young girls being roughly sodomized by large cocks, large dildos, and in one scene, another girl's clenched fist.\n\n\"Oh there is no way,\" Kelli gasped and ejected the disc.\n\n'Anal Lezzies' showed fresh faced young women performing analingus on one another, using fingers and very large dildos on one another's anal orifices, and again, one girl even stuffed her clenched fist into another girl's gaping rectum.\n\nStrap On Sweethearts showed girls using strap on vibrators on one another. After two fairly straight-forward vaginal penetration, one couple decided to use their quite large strap on cock for anal penetration.\n\n\"I don't think so,\" Kelli said, ejecting the disc.\n\n\"I, that, that's got to hurt, right?\" Kelli asked herself as she prepared a Tropical Breeze and pineapple juice cocktail.\n\n\"You got work to do anyway,\" Kelli reminded herself, sitting on her futon again.\n\nShe did run both spell-check and grammar-check on the novel. Harry K. Danbridge's fans would be well pleased with the latest exploits of Effie, the Female Personal Interface Device, or FPID. In this novel, Effie's current host had been trading in commodities such as nutrition. Host Maximus Steward circumnavigated around the Alliance, not paying their levies, his costs were below those of the Common Distributorships. As Effie had possessed a logic interface, and was ultimately the property of the Alliance, the Court of the Alliance found Effie guilty of not enforcing their regulations against her host, Host Maximus Steward. They found her guilty of not alerting the proper authorities of Host Maximus Steward's activities. Effie had no explanation, no defense for her actions, or rather, her lack of action.\n\nSentenced to imprisonment on Fee Nine, a prison planet accessible only through portals or channels, Effie and her fellow prisoners, some humanoid, some android, and some differing life forms from other galaxies engage in several lesbian orgies. In the last chapter, Effie finds another FPID very similar to her dimensions that shows Effie that her host, Maximus Steward had disabled Effie's Logic and Properties chips; therefore disrupting Effie's abilities to report Maximus to the authorities. Effie and Femfem hatch a plan to board the next craft from Alliance and return to Orbital 92209 and present this newfound information to the Court of the Alliance. Kelli ended the book with Effie and Femfem breeching the channel.\n\n\"Hmm,\" Kelli mused, reading one of the lesbian orgy scenes she'd written.\n\n'Effie felt the oral probe of the stalincough lapping against her waste ejection aperture,\" Kelli introduced.\n\nKelli got to her feet and replenished her drink. She then rummaged in her miniscule pantry and found the bottle of vegetable oil. Standing at her sink, Kelli dribbled some oil into her right hand. She then gripped her vibrator and liberally coated the phallus.\n\nSitting on a wadded towel, Kelli attempted to shove the vibrator into her tightly clenched anus. Time and again, the tip bounced away as Kelli pressed it against her flesh.\n\nKelli put the phallus on the towel, bent over and pushed a greasy fingertip to her anus.\n\n\"Hmm, oh,\" Kelli grunted as her finger slid into her anus.\n\n\"Mm, oh,\" Kelli gasped as her finger probed around in her rectum.\n\nA second finger slid in easily enough and Kelli twisted and plunged the fingers in and out of herself.\n\nLooking down at her hairless crotch, Kelli could see that her inner lips were peeking through the folds of her pubic mound, slick and puffy.\n\nKelli scissored the fingers open as she withdrew them, then closed them and drove them back into her rectum. She added a third tiny finger and shuddered as tiny electric shocks rippled through her body.\n\nGripping the greasy vibrator again, Kelli twisted the base, turning the toy on to high speed.\n\n\"Ow! Oh, oh shit,\" Kelli breathed out as the slim plastic toy pushed in past her sphincter.\n\nThere was a sudden jolt of pain from the intrusion. The buzzing and whirring beast plunged into Kelli's rectum beyond where Kelli's fingers had managed to push and Kelli winced against the discomfort.\n\n\"Mm, augh, this, mm,\" Kelli panted and began to pull the uncomfortable toy from her bowels.\n\nA curious warmth began to build as the buzzing instrument rasped along her rectal walls. Kelli paused, green eyes opening wider.\n\n\"Fuck!\" Kelli cried out as an orgasm rippled through her tiny body.\n\nKelli's left hand went to her bald pussy and she began to run her small fingers up and down her wet slit.\n\nSitting upright on the towel drove all six inches of the vibrator into Kelli's bowels. Kelli cried out in a second orgasm as her left hand thrashed against her clitoris and her right hand tugged and twisted her hard nipples. Finally, Kelli slumped backward. Slowly, she worked the buzzing vibrator from her rectum.\n\n\"Host Maximus, what, what are you doing?\" Effie asked as she could feel her host's fingers pressing against her waste ejection aperture.\n\nThe electrical impulses that lined the walls of Effie's waste ejection aperture tingled with a strange pulsation as Host Maximus Steward pressed his greased fingers into Effie's opening. She grunted; this was most illogical.\n\n\"Well, damn, guess I ain't finished yet, huh?\" Kelli giggled as she rapidly typed out Effie's introduction to anal sex.\n\nTwo days later, Kelli logged onto a web site and purchased and eight inch realistic latex vibrator. She added a five ounce bottle of lubricant and a four pack of C cell batteries to the shopping cart.\n\n\"Overnight for a dollar more? Damn right, baby,\" Kelli laughed and agreed to the one dollar shipping charge.\n\nThe next afternoon, Kelli ran spell-check and grammar-check and nodded with satisfaction. Checking again through the formatting and structure, Kelli then uploaded the latest Effie tale. Again, she felt that Harry K. Danbridge's fans would be pleased with this installment.\n\n\"Wonder...\" Kelli thought, looking at the cover of another DVD she'd managed to find in her weekend's garage sales.\n\n'Bisexual Cum Junkies was mostly Male-Female-Female vignettes. But interspersed throughout the one hour and forty eight minute disc were a few Male-Male-Female vignettes. Kelli watched one man plunging his fat cock in and out of another man's ass while a woman performed oral sex on the kneeling man. The vignette ended with both men coating the woman's smiling face, then licking their combined semen from her face while she ravenously kissed one then the other man.\n\n\"I wonder if it's time to introduce Emmie, the MPID,\" Kelli asked, wiggling into tee shirt and shorts and flip flops.\n\nThere were some sales fliers, another bill from Huvall's Texaco for a Ms. Anita Sanchez, the previous tenant of Apartment 206, and a key. Kelli puzzled over this odd item for a moment, then looked to the right of the mailbox kiosk. Two large boxes stood at the end, each with a keyhole.\n\nThe key did not fit the first box, but easily slid into the second box. Kelli found a large cardboard box waiting for her inside of the mailbox.\n\n\"Oh boy, oh boy, oh boy,\" Kelli laughed and clutched the package to her chest.",
        "The VB-12 was an imposing slab of pink latex with mushroom shaped head and thick veins criss-crossing the length of the device. Kelli eagerly dropped two C cell batteries into the beast and twisted the black base.\n\n\"Aw yeah, that's Momma's big boy,\" Kelli whooped as the vibrator gave a throaty hum.\n\n\"But, damn, Kelli, you sure about this?\" Kelli asked, her anus clamping tightly shut.\n\nAugh! Oh, baby!\" Kelli grunted as she slid the VB-12 into her hairless pussy.\n\nThe powerful buzzing and humming brought Kelli to a quick orgasm as she worked the eight inch phallus in and out of her wet pussy. After her orgasm, Kelli pulled the still loudly buzzing device from her pussy. It gave an obscene squish' sound as it popped free of her pussy.\n\nHer ever present towel was folded up and placed on the futon's cushion. Kelli pulled the bottle of lubricant from the box and squirted some of the balm into the palm of her left hand. Kelli coated her index, middle and ring finger of her right hand and brought her hand to her anus.\n\n\"Mm hmm,\" Kelli grunted as she began the now very familiar greasing of her anus.\n\nGripping the still buzzing toy in her left hand, Kelli greased the monster while she fingered her anus. When she was able to spread her three fingers wide, Kelli positioned the VB-12 pointing skyward, held onto it firmly and squatted above it.\n\n\"Augh! Ack!\" Kelli screamed out loud when the beast pressed against her resisting anus.\n\nBeads of sweat popped out on Kelli's forehead as intense pain radiated from her rectum outward. Kelli's legs trembled as she fought to balance herself above the thick phallus.\n\n\"Augh, son of a bitch,\" Kelli screamed in her throat as the bulbous head of the vibrator pushed upward into her straining rectum.\n\n\"Ack, oh God,\" Kelli protested as her own weight caused nearly half of the VB-12 into her complaining bowels.\n\nThe pain was intense as the girth of the VB-12 stretched her quite small opening beyond its limits. Kelli tried to dismount, tried to push herself up. Her hands were too greasy from the slick lubricant and her shaking legs were too weak.\n\n\"Ooooh!\" Kelli gave a low, throaty moan as nearly all eight inches of the vibrator was now imbedded in her bowels.\n\nKelli wiped her hands on the trusty towel, wiping the lubricant from her fingers.\n\nFalling to her right, Kelli cocked her left leg up and reached between her legs. She gripped the base of the buzzing, humming dong and began to work it out of her struggling rectum. Kelli could feel the flared head of the vibrator rasping against her stretched anal cavity. She could feel the veins rasping against her stretched, raw anus.\n\n\"Oh God damn, God damn, God damn,\" Kelli chanted as that welcome warmth began to well up in her guts.\n\nShe drove the dong back into herself as her other hand tugged and pulled at her nipples. She pulled the dong out, until just the bulbous head was inside of her, then thrust it forcefully into herself again.\n\n\"Shh, shh, aught God!\" Kelli grunted out as she orgasmed.\n\nPulling the dong completely from herself caused another orgasm. Kelli dropped the soiled beast onto the heavily stained towel and slumped into a semi-fetal position.\n\nWhen she cleaned herself, Kelli saw some blood. Feeling gingerly around her anus, Kelli winced in pain. She fixed herself a cocktail and gingerly sat on her futon.\n\n\"Emmie, factory created brother of Effie,\" Kelli mused aloud.\n\n\"Complete with VB-12 attachment,\" Kelli giggled, anus still throbbing with pain.\n\nKelli was sure that many of Harry K. Danbridge's followers would balk at the introduction of male bisexuality and/or homosexuality. Female bisexuality was not only accepted, but demanded of Effie and her hosts and hostesses.\n\n\"No risk, no reward,\" Kelli told herself as she mapped out Emmie's backstory, his design and development, his testing and final implementation.\n\nThe bundled Alien franchise discs earned Kelli eighty seven dollars when the bidding closed. The Star Wars discs also did fairly well. Slowly, the other movie titles found their way out of Kelli's apartment. The five hardcore discs, Kelli hung onto.\n\nOn the morning of her first day of class, Kelli took her time to work her floor length blonde hair into a bun. She pulled on a skirt and jacket; the air outside of her apartment was sweltering, but Kelli knew that her classroom and her office would both be quite chilly.\n\n'Electronic Publishing' was a 300 elective; ENGL 324. There had been some debate; should it be a computer class or an English class. Finally, Dean Sims opined that the vast majority of their students had laptops or tablets or even antiquated desktop systems. Teaching them to post to the Internet was most likely moot, since, again, the vast majority of the student body had their own accounts on one or more social media sites.\n\n\"I am Doctor Danbridge,\" Kelli announced when her Teaching Assistant indicated that she'd taken attendance.\n\nAfter ENGL 324 concluded, Kelli marched with great purpose to her next classroom. This was an elective, 'Organizing Dissertations' ENGL 550. Gloria Ann Van Dorscht kept stride with the diminutive woman as Kelli easily cut a path through the milling throng of students.\n\n\"Wow, you cut right through them,\" Gloria praised as they entered their classroom.\n\n\"At my height? You either learn to get through, or you'll be late for every class,\" Kelli smiled up at the attractive woman.\n\nWhen she'd interviewed Gloria for the position of Teaching Assistant, Kelli asked Gloria to tell her a little about herself. Tell her something that wasn't on her resume or transcripts. Kelli was unprepared for what spilled out of Gloria's mouth.\n\nGloria Ann Van Dorscht had been Gloria Ann Strands, an eighteen year old high school drop-out, being dragged from apartment to trailer to house to trailer by her mother, Nicole Strands. As a result, Gloria had an instinctual distrust of men and a very hostile veneer protecting herself from ever becoming attached to any one man.\n\nDebbie Strands, Gloria's younger sister had been in the same boat; being dragged from one place to another, being neglected by their mother, being ignored, or worse, being cursed at or even molested by one boyfriend or another. Debbie and Gloria both missed so many days of class that they were being held back another year. Rather than Gloria repeating the tenth grade a third time and Debbie repeating the ninth grade, both girls just didn't return to school.\n\nThen Nicole Strands found the one man that would end the perpetual cycle of jumping from man to man, dragging her hapless daughters with her. Owen Michael, the last boyfriend beat Nicole to death. Gloria and Debbie returned to the one man that had treated both Gloria and Debbie with kindness and even respect, even though Gloria and Debbie had never given Robin Van Dorscht one ounce of respect. And Robin had accepted, welcomed them with hugs and kisses, and a firm guiding hand.\n\n\"I, Debbie and I were high school drop-outs,\" Gloria said. \"But Mr. Robin made us take our G.E.D.s and then made us take the ACT. You could have knocked me over with a feather when I made a thirty five on my ACT. Debbie, that little snot; she made a perfect thirty six.\"\n\n\"Hmm,\" Kelli nodded; when she'd taken the ACT, at age sixteen, she'd managed to score a 36.\n\n\"Being an orphan, with a thirty five, all of a sudden, both Connelly and U.L.D's offering me a scholarship. Debbie got one from both Connelly and U.L.D. but she wanted to stay in Oakleaf; honestly, I think she had a bit of a crush on Mr. Robin,\" Gloria said.\n\n\"He and his boyfriend, Cecil Hoffman had picked up a dancer at El Vaquero, it's a nightclub in Oakleaf, has male dancers,\" Gloria said, wiping at a tear.\n\n\"I know of it; my doctorate is from Connelly,\" Kelli said, sliding the box of tissues toward Gloria.\n\n\"At any rate, they'd picked up a sweet young thing for a three-way,\" Gloria disclosed. \"When they left the bar, there was a group of these religious nut jobs waiting for them; beat them to death, screaming all kind of Biblical quotes and just beating them worse than dogs.\"\n\n\"I seem to remember that,\" Kelli nodded. \"Their lawyer tried to use 'Mob Rage' as a defense.\"\n\nGloria wiped at her face, then blew her nose. She smiled and shook her head.\n\n\"Then when Mr. Robin was murdered, I found out, he had a life insurance policy; a hundred thousand dollars and named Debbie and me as his beneficiaries. His car, his condo, everything, he left to Debbie and me. Said we were his daughters. Mr. Dunning, Robin's attorney helped me change my last name to Van Dorscht,\" Gloria concluded her tale.\n\n\"I look forward to working with you,\" Kelli said simply.\n\nNow, entering the room for her ENGL 550 class, Kelli nodded with satisfaction. Seven students had signed up for the class, and there were seven students seated, clumped together as close to the teacher's lectern as possible.\n\n\"I am Doctor Danbridge,\" Kelli announced. \"Ms. Van Dorscht will call out your name. You will answer 'here' when she calls your name, and if there is any particular way you would like the be addressed, please indicate so. Ms. Van Dorscht?\"\n\nKelli studied each face as Gloria called out their names. A few did disclose they preferred a shortened version of their names; Jessica Hebert preferred 'Jessie' and Gertrude Longlinais preferred Rudy. Freddie Loomis made everyone laugh when he said he hoped to be called 'Doctor' Loomis by the end of the semester.\n\n\"Dialect. Colloquial terms. Your thesis is no place for this,\" Kelli began. \"Even if your thesis is on dialect and local vernacular, your dissertation must be presented in clear, concise perfect English. A person in, oh, New York, or in Seattle, or even DeGarde should be able to pick up your thesis, read it and understand the premise of your thesis. That is not to say that everyone should agree with your thesis, but they must be able to understand your intent.\"\n\n\"Questions? Please, ask questions. As there will be no tests, no exams given in this class, I have no way of determining your comprehension of the material unless you ask questions,\" Kelli implored her students five minutes before the end of the class period. \"No? No questions? Then, see you on Wednesday.\"\n\nKelli smiled and nodded as each student stood and left the classroom. Her breath caught in her throat when Freddie Loomis stood. The man was a giant next to his peers. He towered over Kelli by more than two feet. And Kelli believed Freddie Loomis may possibly be the most handsome man she'd ever seen.\n\nSafely in her office, Kelli sat, waiting to see if any student wandered in during her posted office hours. If Gloria had not parked herself in one of the wooden chairs in front of Kelli's desk, Kelli would have hiked her skirt up and masturbated to thoughts of Freddie Loomis.\n\nFor her ENGL 224 class, Kelli had selected five Social Media posts that displayed several grammatical errors, misspellings, poor sentence structures. She carefully scanned each post and removed any personal identifiers. Then, projecting each post onto the screen behind her head, she and the class went through each post, sentence by sentence and corrected the posts.\n\n\"For Thursday? Please bring in one really bad post. The worst one will win a gold star,\" Kelli encouraged and smiled when most of the students laughed.\n\n\"Oh my God; I need to look at my accounts,\" Gloria hissed as they walked rapidly to the next classroom.\n\nKelli laughed out loud and Gloria shot her an embarrassed smile. They entered the classroom and Kelli perched on a tall stool, reading over the syllabus while Gloria took attendance.\n\n\"I am Dr. Danbridge,\" Kelli began when Gloria nodded to her.\n\n\"You any relation to Harry K. Danbridge? The author?\" one young man asked.\n\nKelli stopped and stared hard at the offender. She then arched an eyebrow, turned to glance at Gloria, then fixed the young man with a hard glare.\n\n\"I am speaking. When I am speaking, you are to listen. You are not to shout out questions while I am speaking. When I cease speaking, you may then ask questions pertinent to the material being discussed in this classroom. Questions about my personal life, such as whom I may or may not be related to are well outside the scope of the material being taught in this classroom. Now, I am Dr. Danbridge. This is English two five six, Post-Vietnam Conflict Literature. The Vietnam Conflict, the Vietnam War changed the political, the social, the economic landscape of the United States of America,\" Kelli said, voice firm, purposeful. \"Therefore, it stands to reason that this conflict would also change the writings of authors.\"\n\n\"I don't think Wade Savoie will make that mistake again,\" Gloria stated when the class was empty.\n\n\"I certainly hope not,\" Kelli snapped.\n\n\"Remind me how I got stuck with this one?\" Kelli remarked as they scampered up two flights of stairs to Kelli's final class of the day.\n\n\"Don't y'all draw straws or something?\" Gloria quipped as they entered the classroom.\n\n\"Names in a hat,\" Kelli laughed.\n\nENGL 315, Research Source Material was a bone-dry subject. There was little Kelli could do to make the class more exciting, accessible, or appealing. Very few people ever read the footnotes. Of the few that do, even fewer ever verify the footnotes' accuracy.\n\n\"If I didn't have so much to do, I'd go to my room and take a nap,\" Gloria groaned when the class was finally over.\n\n\"It's not exciting or interesting, but it is important,\" Kelli agreed. \"See you tomorrow.\"\n\nEntering Saladelights, Kelli searched around for an available table. Out of the corner of her eye, she saw a large man stand up.\n\n\"Dr. Danbridge, got a chair right here,\" Freddie Loomis called out.\n\n\"Ah, Dr. Loomis, thank you!\" Kelli smiled and hopped into the chair.\n\n\"It's not 'doctor' quite yet,\" he smiled. \"You must have been right behind me; I just got here.\"\n\n\"So, what's good here?\" Kelli asked. \"I almost stopped at Clark's but decided I really should at least make the effort to eat a somewhat sensible meal.\"\n\n\"Their roasted vegetables salad,\" Freddie advised. \"See, I'm vegan, so...\"\n\n\"Are you really?\" Kelli asked, looking at his well-muscled physique. \"Most vegans I've ever come in contact with are little more than emaciated waifs.\"\n\nFreddie was apparently used to this question; he answered Kelli's question with information about foods, nutrition, caloric intake. The waitress came and took their order; Freddie shrugged good-naturedly when Kelli ordered a salad with ham and hard boiled eggs and buttermilk dressing.\n\nAn incoming text message caused Kelli's cell phone to buzz and she whooped when she saw a message from Paul Robichaux, announcing that they were completing the renovations. Showing the text to Freddie, Kelli brazenly asked him to accompany her to view her home.\n\n\"Sure you want an emaciated waif knowing where you live?\" Freddie teased and she laughed.\n\nFreddie followed Kelli to 3112 Fontenot Road. He nodded with approval as he looked around the quiet neighborhood. He pointed around and mentioned to Kelli that there were no overgrown yards, no cars on blocks, no loud rap music booming and thudding.\n\n\"Be a good neighborhood to raise a couple of kids,\" Freddie said.\n\n\"You want kids?\" Kelli asked him as she proceeded him to the front door.\n\n\"Yes. Two or three,\" Freddie said. \"No more than five. Five's the limit.\"\n\n\"Well, I'm not raising them to be vegan,\" Kelli said and smiled up as Paul opened the door for her. \"Hi Paul. This is my friend, Dr. Loomis.\"\n\n\"She's being mean to me,\" Freddie smiled, shaking the offered hand. \"I'm not a doctor yet.\"\n\n\"Me neither,\" Paul smiled. \"Paul Robichaux.\"\n\n\"Freddie Loomis,\" Freddie said, entering the comfortable home. \"You put in this carpet?\"\n\n\"Mm hmm. Double padding,\" Paul agreed.\n\nKelli squealed with delight upon entering her new kitchen. The counters had been lowered for easy access. The gas range was also lowered for her height and the gas oven was on the opposite wall, at floor level. The upper cabinets were accessible by means of a rolling ladder mounted on tracks that ran the periphery of the kitchen.\n\n\"You, I'm going look up vegan recipes; you have to come over for my first dinner here,\" Kelli excitedly told Freddie.\n\n\"Now, Dr. Danbridge, the hall bathroom? I did replace the tub and commode, but I left them at normal size,\" Paul pointed out. \"Yes, you are a little bit shorter than the average person, but not every person that comes to your home will be the same size as you. For instance, Dr. Mister Loomis here.\"\n\n\"He's being mean to me,\" Freddie smiled at Kelli and she laughed.\n\n\"But the light switches, the fan, the heater, we put them a little lower for your convenience,\" Paul continued.\n\nLooking around at the smaller appliances and fixtures, Freddie just shook his head. Kelli was thrilled with her home, including the eight foot privacy fence Paul had erected in the back yard. He pointed out, each one half by four by eight foot board had a one half by one by eight foot strip affixed; there were no chinks or spaces between the fence boards. Freddie looked at the six person hot tub with interest while Kelli walked the periphery of her yard, trying to decide where to plant a pecan tree.\n\n\"You eat peaches?\" Kelli asked Freddie.\n\n\"By the hundreds,\" he agreed, looking at the dead and dying grass of her back yard. \"Might want to run some organic fertilizer around the yard.\"\n\n\"Trees? Shrubbery, I'd go to Lacombe and Davis in Baylor Lake,\" Paul advised. \"Josh and Terrence really know their stuff when it comes to plants.\"\n\n\"What else you like?\" Kelli asked Freddie and surprised him by pulling him down for their first kiss.\n\nSomehow, Freddie found himself being invited to Kelli Danbridge's apartment so that she could change clothing for a trip out to the Baylor Lake nursery. He looked around at the stacks of boxes with some amusement while Kelli rummaged around in the small closet.\n\n\"Their page says they're open until six thirty,\" Kelli announced from the depths of her tiny closet.\n\n\"Uh huh,\" Freddie said, taking a seat on her futon.\n\n\"So I was thinking,\" Kelli said, walking out of her closet nude. \"That gives us a couple of hours to fool around. What you think?\"\n\n\"It sure does,\" Freddie agreed, stripping out of his clothes as quickly as the cramped quarters would let him.\n\n\"Oh. My. Goodness, oh that is a nice one,\" Kelli gasped, seeing Freddie's seven and a half inches of hard, thick meat.\n\nFreddie liked Kelli's long blonde hair; she'd taken it out of her severe bun. He liked her small breasts with dark nipples, her slight paunch of a belly and her adorable 'outie' belly button.\n\nKelli admitted, she'd never lowered the back of her futon; she'd never needed to. But she managed to lower the back and create a full sized bed. Smiling triumphantly, Kelli scrambled onto the bed and spread her legs wide.\n\nFreddie especially liked Kelli's bald pubic mound, liked seeing her puffy inner labia peeking out, dark pink and slick.\n\n\"Mm augh! Damn, go right for it, huh?\" Kelli laughed as Freddie glued his mouth to her wet slit and began tonguing her pussy fervently.\n\nShe was quick to orgasm; Freddie apparently knew his way around a clitoris. He also knew enough to back away from her clitoris immediately after her orgasm; her clitoris was too sensitive. Freddie allowed himself to be rolled onto his back.\n\n\"Mm, you, that was amazing,\" Kelli murmured, kissing Freddie.\n\nShe could taste herself on his lips and tongue. She kissed him for several long moments before wiggling down. His broad hairless chest received several small love bites as she wiggled closer and closer to his proud cock.\n\n\"Mm,\" both Kelli and Freddie moaned as Kelli licked Freddie's cock from base to tip.\n\n\"Mm,\" Kelli moaned as she sank her mouth around the tip of Freddie's cock.",
        "She could taste his excitement drooling from the opening at the tip of his cock. It was a salty, bitter taste and the texture was slightly unpleasant. Her small hand could not encircle his immense girth but she stroked up and down the length as her mouth and tongue pleasured the head of his meat.\n\n\"That, Kelli, I'm pretty close,\" Freddie warned, body tensing.\n\n\"Mm hmm,\" Kelli agreed, now using both hands to jack his cock into her mouth.\n\n\"Ack!\" Kelli almost screamed as Freddie's cock began to spurt into her mouth.\n\n\"Kelli, how many blow jobs have you had Effie perform?\" Kelli almost laughed. \"And this is your first one?\"\n\nWhen Freddie's cock quit spurting, Kelli pulled her mouth off of the tip. She lay her head on Freddie's six pack abdomen, hands still slowly stroking his semi-erect cock. She sighed happily as she felt Freddie's right hand slowly combing through her thick hair.\n\n\"Mm,\" she purred as Freddie's fingernails softly raked against her scalp.\n\n\"I'm not on the pill; makes me sick,\" Kelli admitted, slowly sitting up. \"I mean, it really messes with my insides.\"\n\n\"Oh, okay, we uh,\" Freddie said.\n\n\"So, we can either get started on those three or four or five kids you're wanting,\" Kelli smiled, still stroking his meat. \"Or we can do anal. Your choice.\"\n\n\"Anal,\" Freddie managed to choke out.\n\n\"Oh goodie!\" Kelli laughed. \"I was hoping you'd go for that.\"\n\nFreddie watched as Kelli located a bottle of lubricant. He watched, almost fascinated as the small woman coated his cock, using both hands to smear the gel around.\n\n\"And,\" Kelli announced, swinging one leg over and straddling his waist to face Freddie's feet.\n\nKelli gripped his cock in one hand and her left buttock in the other hand as she lowered herself. Freddie watched her light brown ring of flesh winking at him as her small, round buttocks came closer and closer to his cock.\n\n\"Augh!\" both Kelli and Freddie cried out as the head of his meat pressed against her rosebud.\n\n\"Mm, the first, the first inch, always the hardest,\" Kelli said, voice strangled.\n\nFreddie almost ejaculated as he watched Kelli's rosebud flowering open, watched the purple head of his meat disappearing into her tight anus. He reached out with his hands and gently put his hands on her small waist.\n\n\"Oh my God, oh, this, oh! It's a lot different when it's a real one,\" Kelli thought as beads of sweat popped out on her forehead.\n\nThe pain was intense. Freddie was not as thick as her VB-12, but when Kelli used her VB-12, she normally prepared herself for anal intrusion. She usually loosened herself with greasy fingers, lubricating the passage of the CB-12.\n\nKelli could feel the head of Freddie's meat pushing into her, the flared head of his cock rasping against her rectal sheath. She could feel her rectal muscles struggling against this intrusion. She could feel her muscles squeezing around his meat.\n\nFreddie reached his hands up and began squeezing her small breasts. She gave a little wiggle of her hips and released her hold on his cock and her own buttock. Her small hands reached up and pressed Freddie's large hands against her breasts.\n\n\"Mm oh, oh yes!\" Kelli hissed out when she had nearly all of Freddie's cock deep in her guts.\n\n\"Mm hmm,\" Freddie agreed, voice strangled.\n\n\"Oh God, his, this is good,\" Kelli grunted as she began to lift herself up.\n\n\"Mm hmm,\" Freddie groaned.\n\n\"Ack, oh God!\" Kelli cried out in orgasm.\n\nFreddie released Kelli's left breast and trailed his hand down her slight paunch to her prominent pubic mound. She squealed in orgasm when his fingers found her clitoris and gave her clitoris a vigorous diddle.\n\n\"Oh God, you, oh,\" Kelli whined slowly bouncing up and down on his meat.\n\n\"Mm, damn, Kelli, I'm...\" Freddie whined, feeling his sperm bubbling up in his cock.\n\n\"Oh yes, come in me,\" Kelli ordered, picking up speed.\n\n\"Mm, ah Jesus,\" Freddie cried out, pumping his sperm up into Kelli's guts.\n\n\"Oh damn,\" Kelli panted after Freddie's cock had ceased pumping into her bowels.\n\nShe wiggled and dismounted then scampered for the bathroom. Freddie lay back, still trying to catch his breath. He heard the toilet flush.\n\n\"I, we need to do that again,\" Kelli ordered, scrambling onto the futon with a warm washcloth in her hand.\n\n\"Right now?\" Freddie moaned as Kelli cleaned his slimy cock.\n\n\"Right now? No, we need to go pick out some trees. Paul said we ought to think about putting some holly bushes, you know, under the windows; what do you think?\" Kelli asked, giving his clean cock a soft kiss.\n\n\"Kelli, it's your house,\" Freddie said. \"What do you think?\"\n\n\"I think I'm a God damned idiot,\" Kelli thought, fighting against the tears. \"I thought we had something, but I guess not.\"\n\n\"I mean, me? Yeah, hollies sound good,\" Freddie amended quickly. \"They look good, and they discourage burglars from trying any of the windows.\"\n\nHe easily pulled the small woman to lay on top of his chest. He gently kissed her lips, hand running up and down her smooth back.\n\n\"And, the peach tree and the fig tree? Makes me want to visit your home,\" he offered, kissing her again. \"A lot.\"\n\n\"Just for the peaches?\" she asked, cupping her small breasts in her hands.\n\n\"Well, yeah, the peaches are nice,\" he agreed, squeezing her buttocks. \"Really like your peaches.\"\n\n\"I think I'm in love,\" Kelli thought as she wiggled her buttocks against his hands.\n\nThe sexuality of Josh Lacombe and Terrence Davis was not in question. Kelli didn't care who they slept with; she was there to buy three trees from people who knew trees.\n\n\"And hollies; how many windows are we talking?\" Terrence asked Kelli.\n\n\"The two bedrooms in the front, the one to the left of the front door has that double window, the one to the right has two single windows; one faces south, the other faces west,\" Freddie reminded Kelli. \"There's the double window facing east in the master, excuse me, the DOCTOR's bedroom.\"\n\n\"Shut up,\" Kelli giggled, slapping his arm.\n\n\"And the living room has a double window,\" Freddie concluded.\n\n\"So, the fig tree in the front, facing the west, peach tree and pecan tree in the back, would Paul know the measurements of that?\" Josh asked.\n\n\"He should; he put in a privacy fence,\" Freddie agreed, then smiled down as Kelli squeezed his hand.\n\n\"So you were paying attention,\" Kelli said as she paid for the trees and shrubbery.\n\n\"Yeah. What? Thought I was only paying attention to your cute butt?\" Freddie asked.\n\nKeisha grumbled when Kelli gave her thirty days' notice that she would be vacating Apartment 206. Kelli shrugged off the large woman's displeasure; she was adhering to the terms of the lease she'd signed. At the time she'd signed it, she had told the apartment manager she did not believe she'd be there for the full six months. At that time, Keisha had cheerfully agreed that this was find; as long as Kelli gave Keisha thirty days' notice.\n\nEven while the hired movers were taking Kelli's furniture and small appliances from their storage site in Paulton, Louisiana and transporting her furniture to her new house, even as a second crew was emptying Kelli's apartment, Kelli still had classes to teach. She and Gloria were developing a friendship and a rapport with one another. Kelli was happy to assist Gloria as Gloria labored to complete her requirements for her Master's in English Studies.\n\n\"By the way,\" Gloria announced, after a disgruntled student left the office. \"I looked up that Harry K. Danbridge? Um, oh, come on Gloria, you're not old enough to already be losing your mind. Wade! Wade Savoie had asked about?\"\n\n\"Oh?\" Kelli smirked slightly.\n\n'Effie Through Channel Fee Nine' was still climbing in the EBook sales. And, as was usually the case, a new 'Effie' book generally sparked sales among the fourteen other books in the Effie series. Kelli was still structuring her 'Emmie' book; she planned to wait until sales of 'Effie Through Channel Fee Nine' began to wane before introducing Emmie to Harry K. Danbridge's audience.\n\n\"Well, Harry's from, come on, Gloria. Harry's from Bergeron, Idaho. You're from Texas. Harry's bio? Pretty much says he's still living in Bergeron so it would be pretty hard for you to be related,\" Gloria concluded.\n\n\"My dad was born in Bergeron; his father was going to the Atwell School of Divinity and got a waitress knocked up,\" Kelli smiled. \"They had Harry; my grandfather moved to Lowridge, Texas to lead a congregation' some non-denominational church out there. Harry spent summers with his dad, met my mom and boom! It's a girl.\"\n\n\"So, you ARE related to Harry K. Danbridge?\" Gloria asked, smiling widely.\n\n\"Nope,\" Kelli said and laughed at Gloria's confusion. \"I AM Harry K. Danbridge. My dad died when I was ten; he's buried in Bergeron. I just use his name. Why not? He's not using it.\"\n\n\"So, how's the new house?\" Gloria asked as they prepared to leave the office.\n\n\"It's awesome; we'll have to have you over to see it,\" Kelli said, making sure she had everything in her purse and attach\u00e9 case.\n\n\"We?\" Gloria asked.\n\n\"Damn it,\" Kelli laughed. \"I should have said 'I,' I'll have you over. But, guess the cat's out of the bag.\"\n\nShe leaned close to Gloria. Gloria leaned close, anxious to hear some juicy tidbits.\n\n\"Fred? Freddie Loomis lives with me,\" Kelli whispered.\n\n\"No!\" Gloria gasped. \"Aw, you bitch! God, he is so gorgeous!\"\n\n\"Yummy is the word I usually use,\" Kelli smiled as they walked through the mostly empty hallway.\n\n\"Oh. Kay! Whatever,\" Gloria laughed. \"Well, I'm off to see about getting a new bed or something. The bed in my room is shot.\"\n\n\"What? You're kidding. I've got a perfect futon but there's no room in the house for it. Come on,\" Kelli said.\n\nGloria left her bicycle chained in front of Murphy's Dormitory. She no longer lived in the dorm, renting a room in a nearby home, but she knew her bike would be safe in front of the dorm. She smirked at Kelli's hand controls for her Ford Edge.\n\n\"One word. One word about my feet not touching the floor and you can walk home,\" Kelli threatened, smiling.\n\n\"Oh, this looks nice,\" Gloria said, looking around at the clean parking lot, the maintained grounds of the apartment complex.\n\nShe nodded approval of the swimming pool and courtyard as they traipsed up the stairs. She swiveled back and forth looking around the courtyard and complex itself as Kelli found the apartment key.\n\n\"I'll take it,\" Gloria announced, seeing the futon.\n\nSitting down, Gloria sighed as the memory foam padding contoured to her rear end. She then looked around at the empty apartment.\n\n\"So, who lives here?\" Gloria asked.\n\n\"I did, while I was waiting on my house,\" Kelli said, entering the bathroom.\n\n\"So, it's available? How much is it?\" Gloria asked when Kelli exited the bathroom, patting her hands dry.\n\n\"Four hundred a month; kind of silly, seeing how small the closet is, and how tiny the kitchen is. There's not even an oven in here,\" Kelli said.\n\n\"That microwave come with it?\" Gloria asked, pointing.\n\n\"Mm hmm,\" Kelli agreed. \"Popcorn? You really have to watch it or it will burn it. And burnt popcorn? Nothing smells worse.\"\n\n\"Better than the room I'm renting at four fifty a month,\" Gloria said, looking in the closet and bathroom. \"Think they'll rent it to me?\"\n\n\"Come on,\" Kelli smiled, opening the door of the apartment.\n\nKeisha was delighted to rent the apartment without even having to have someone go clean it first. Kelli took the apartment key and the mailbox key off of her key ring and handed them to Gloria. Gloria completed the application form, checked it and signed it before handing it to Keisha.\n\n\"You still got your parking tag?\" Keisha asked Kelli.\n\n\"I'll give it to Gloria,\" Kelli said.\n\n\"Got a bike; don't need it,\" Gloria smiled.\n\n\"Thought Robin left you his car?\" Kelli blurted out.\n\n\"Sold my half to Debbie,\" Gloria said as they left the manager's office.\n\n\"Well, how are you going to get all your stuff to your apartment?\" Kelli asked, unlocking the door of her car.\n\n\"Suck a couple dicks,\" Gloria shrugged as she buckled up. \"Be surprised what guys will do for a blow job.\"\n\n\"Uh, no, I really wouldn't be all that surprised,\" Kelli laughed. \"Your stuff; think it would fit in here?\"\n\n\"Yeah; it's mostly clothes,\" Gloria said, peering into the rear of the crossover.\n\n\"Let me know when and Fred and I will come help you,\" Kelli said.\n\nOne trip was all it took to remove Gloria's possessions from Louella Denson's home. Kelli was glad of that; Louella Denson, Gloria's landlord was an extremely ill-tempered woman. And Louella's three cats were ill cared for; the stench was intolerable.\n\n\"And how much was she paying you?\" Freddie quipped, still breathing through his mouth.\n\nGloria's first night in Apartment 206 was spent organizing her meager belongings. Reaching up to put a box of shoes onto the self, Gloria knocked over a DVD case Kelli had overlooked.\n\n\"Strap On...Oh! Dr. Danbridge, you naughty little girl!\" Gloria giggled, seeing the cover for 'Strap On Sweethearts.'\n\nGloria had too much paper work that needed her attention so did not play the DVD that evening. In the morning, she hurried through a shower; grateful do not have to shoo Ms. Louella's cats from her bathroom. Dressing, she was grateful she did not have to crawl and peer under the bed to make sure that none of Louella's beasts were hiding underneath the bed. Once, she'd shut Callie in her room and Callie had ruined one of Louella's comforters with claws and urine. Louella tried to charge Gloria for the ruined comforter but Gloria would not pay for Louella's cat's misdeeds.\n\n\"Let's see who's been reading their textbooks,\" Kelli said, producing several stapled test papers from her attach\u00e9 case.\n\nGloria dutifully handed out the test papers as Kelli repeatedly ordered the students to wait until she said 'begin' before they turned the test papers over.\n\n\"What?\" Wade yelled out, three minutes into the test period. \"We didn't never talk about this shit.\"\n\n\"Really?\" Kelli asked, face hard. \"Mr. Savoie, this test covers my lectures, as well as Chapters one through four in our textbook. At the end of each Thursday's classes, I instructed you all to read the pertinent chapter for that week's lectures.\"\n\n\"But, but...\" Wade sputtered.\n\n\"This discussion is over, Mr. Savoie. You are disrupting the other students whom are also taking this test,\" Kelli snapped.\n\n\"But, but, you ain't never said shit about Norman Lear. Who the fuck is Norman Lear?\" Wade shouted.\n\n\"Read the textbook and find out,\" Kelli calmly said. \"Now, this discussion is over. Either be silent, or leave my classroom.\"\n\n\"It too late to drop this fucking class?\" Wade snarled.\n\n\"It's never too late,\" Kelli quipped. \"You may drop this class at any time, Mr. Savoie.\"\n\n\"Dropping this shit, better believe that,\" Wade snarled, wadding up the test papers and throwing the balled up test at the wastebasket.\n\n\"You weren't scared?\" Gloria asked as the last student left the classroom.\n\n\"No,\" Kelli said calmly as she got down from the tall stool. \"Remember, I'm from Texas.\"\n\n\"Uh huh, I am too,\" Gloria said.\n\n\"And in Texas, we don't take no shit from little titty babies like that,\" Kelli said, producing her snub nose.32 from her purse. \"Had my finger on the trigger the whole time he was throwing his silly little temper tantrum.\"\n\n\"Well. Yes ma'am,\" Gloria said.\n\nThat evening, after a microwaved meal and an ice cold beer, Gloria did slip 'Strap On Sweethearts' into her laptop computer. She pulled her yoga pants off and lazily began to run her fingers up and down her dark brown bush. The first vignette was pretty much what Gloria had expected; a very attractive blonde using a large strap on cock on a very busty brunette. The second vignette was the same scenario. One busty brunette fucking another busty brunette with a fairly large strap on phallus.\n\n\"Hey now,\" Gloria said when the third vignette went from vaginal penetration to anal penetration.\n\nThe fourth vignette was a black girl using an enormous black strap on dildo on a heavily freckled red head. Gloria skipped back to the previous vignette and watched the anal action again. She then skipped over the interracial vignette and watched a blonde beauty using a strap on phallus on an Asian woman with impossibly large breasts. The Asian woman straddled the blonde, bouncing up and down on the large phallus.\n\n\"Hey, can I join in?\" a voice called out.\n\n\"Sure!\" both the blonde and the Asian giggled.\n\nThe heavily freckled red head from the interracial vignette entered the frame, cinching a large strap on cock around her waist.\n\n\"Mm,\" Gloria moaned, close to orgasm as the red head began to sodomize the Asian woman with her fake cock.\n\nThere was only one more vignette that showed any anal action; Gloria fingered herself to another juicy orgasm as she watched the anal sex.\n\n\"Wonder...\" Gloria mused aloud as she clicked from her computer's media player to Web Search.\n\nGloria had money; fifty thousand from Robin's life insurance, plus the two dollars from her sale of the condo and the car to her sister. She and Debbie had paid Eternal Gardens ten thousand for a no-frills funeral and simple headstone for Robin, agreeing to pay on time. With the money in hand, the girls paid off the funeral costs.\n\nGloria brought fifteen thousand to Martin Boyd of Boyd & Associates and asked him to invest the money for her. She then took another fifteen thousand to Thibodaux Investments and asked Michael Trahan to invest the money for her. Since then, Michael Trahan had been removed and Rhonda Theriot, a stunningly beautiful red head had taken over Gloria's account.\n\n'For her and her and him' the advertisement read. Gloria smiled and read the description of the eight inch strap on dual vibrating phallus. The cock did look fairly realistic, with a flared head and veins running the length. The phallus had a multi-speed vibrator within its length.\n\nThe base had several hard nubs dotted throughout the width and a vertical line of raised nubs for the wearer's pleasure. The base likewise had a multi-speed vibrator inside of it. The controls were mounted on a wireless hard plastic box.\n\nGloria nodded, dropped one SO-VB-1 into her shopping basket, a tube of flavored lubricant and a four pack of C Cell batteries.\n\n\"One dollar extra for overnight; oh, must order before four pm Eastern Standard Time, oh well,\" Gloria shrugged and did not check the 'Overnight' box.\n\n\"Now...\" Gloria said and lay back to watch 'Strap On Sweethearts' again.\n\nThe package arrived two days after Gloria had placed the order. She clutched the cardboard box to her chest as she wheeled her bicycle up the stairs and down the corridor to her apartment.\n\nSafely inside of Apartment 206, Gloria ripped open the box and whooped with delight as she saw the brightly colored box with the SO-VB-1 and saw the impressive looking beast through the cellophane of the box. There was a tube of cherry flavored edible lubricant, and the four pack of C Cell batteries.\n\n\"God damn, wish that Rhonda wasn't such a hard ass about not dating clients,\" Gloria muttered, imagining plunging this fat cock into Rhonda's slightly chubby buttocks.\n\n\"Mindy!\" Gloria said aloud, remembering Mindy Truesdale, a beautiful blonde she'd previously tutored in Colonial Literature.\n\nMindy had disclosed that she was gay; even the hardened Gloria Van Dorscht had been surprised. Mindy was stunningly beautiful, with knee length wavy blonde hair, large brown eyes, button nose and Cupid's bow mouth. Mindy sported 34DD breasts, a twenty nine inch waist and delectable 33 inch hips. She wore dresses, wore make up, took time with her hair and her appearance. Mindy Truesdale did not look like the majority of the gay women on the U.L.D. campus.\n\nAs a freshman, Mindy had been entered into the U.L.D. Homecoming pageant. She'd not won the honor of being the Homecoming Queen, but was selected as the Freshman Maid in waiting. Several students suspected that the contest had been rigged; Denise Blanchard was beautiful, but the Latin girl was not nearly as beautiful as Mindy Truesdale or Rudy Longlinais, the Senior Maid in waiting.",
        "\"Well, because she's half Mexican, I guess we got to let her win,\" more than one student muttered to their friends.\n\n\"Murphy, third floor,\" a bored voice intoned.\n\n\"Mindy Truesdale,\" Gloria asked.\n\n\"Yeah, hang on,\" the girl said and put the phone down.\n\n\"Shit, Truesdale, like I know who it is?\" Gloria heard a moment later.\n\n\"Hello, this is Mindy,\" Mindy's adorable southern drawl came onto the line.\n\n\"Hey, I uh, hi, this, I don't know if you remember me, Gloria Van Dorscht? I tutored you in...\" Gloria stammered.\n\n\"Colonial Literature! Hi! How have you been?\" Mindy happily exclaimed. \"Listen, here, here's my cell; Becky's is getting all huffy because we're on her precious phone.\"\n\nGloria hurried to find a pen in her bottomless purse and scribbled the phone number on the lid of her cardboard box. She promised to call right back and disconnected the call.\n\n\"Hey, hang on, let me...\" Mindy said when Gloria did call her cell phone.\n\nGloria heard a door shut. She assumed Mindy was shutting the door of her dorm room.\n\n\"Okay, I'm in my room, hey, why you never called me?\" Mindy said.\n\n\"Huh?\" Gloria asked.\n\n\"What? Last year? When I told you I'm gay? You think I tell everybody that?\" Mindy whispered seductively into the phone.\n\n\"I uh, I mean,\" Gloria stammered.\n\n\"I mean, you had to know I think you are just so beautiful,\" Mindy continued.\n\n\"Hey, I uh, I haven't, you eat yet?\" Gloria said, trying to get control of the situation.\n\n\"You ever had that Jade Garden place?\" Mindy asked. \"I'm dying for some Chinese food.\"\n\n\"Don't get their seafood,\" Gloria warned.\n\n\"Thirty minutes?\" Mindy asked.\n\n\"Yes,\" Gloria agreed, already trying to select the perfect outfit for their first date.\n\nGloria knew she wouldn't be able to cycle from Venice Apartments to the restaurant; it was right at the DeGarde/Baylor Lake line. An Uber was twelve minutes out and Gloria almost began to panic.\n\nRunning down the stairs, Gloria hopped into the car and chatted pleasantly with the young man as he drove to the Chinese restaurant. Gloria laughed out loud when he said to avoid their seafood.\n\n\"Hi!\" Mindy greeted Gloria and Gloria was temporarily struck mute by the girl's classic beauty.\n\nGloria knew she was attractive; she had dirty blonde hair that hung to the small of her back, clear blue eyes, a slender nose and generous mouth on a heart shaped face. She sported 34C breasts with large areolae and nipples that stuck out nearly a half inch long when aroused. Because of her cycling, her waist was 27 inches around and her buttocks were compact; 32 inch hips and sculpted, tanned legs. But she was not beauty pageant material.\n\n\"You ready, she here?\" A surly Asian waitress demanded of Mindy.\n\n\"Yes ma'am, thank you for being so patient,\" Mindy smiled, taking Gloria's hand into hers.\n\nWhen Gloria had tutored Mindy in Colonial Literature, Mindy had told Gloria she was the daughter of a minister, was originally from Ten Bear Lake, Michigan, but had lived most of her life in Stepping Stone, Louisiana. Like Ten Bear Lake, Stepping Stone was comprised mostly of trailer parks.\n\n\"Of course, when I came out? Oh my God! Jesus may have died for our sins, but that don't include lesbians,\" Mindy whispered, looking down at her plate of Mandarin Beef.\n\nGloria didn't know what to say. She knew she was very attracted to this girl; Mindy had been the second person she'd thought of after viewing 'Strap On Sweethearts.' She'd thought of Mindy after first thinking of Rhonda Theriot, her beautiful red headed investments counselor. Gloria wasn't gay; if anything, she was slightly bisexual.\n\nBut apparently, Mindy didn't know, or realize, this was not a burgeoning romance between her and Mindy. This was simply a seduction that would lead to fucking. Down and dirty, nasty fucking.\n\n\"Your turn,\" Mindy smiled softly, touching Gloria's hand.\n\nThe simple touch sent an electric shock through Gloria's body. Looking up from her spicy twice-cooked pork into Mindy Truesdale's warm brown eyes, Gloria again was struck mute.\n\n\"I mean, I been running my mouth the whole time; God, that's why I was just so attracted to you,\" Mindy started again, saving Gloria from having to say anything. \"You let me talk, you let me say what I needed to say and didn't just cut me off because I'm just this dumb blonde. You let me talk, you let me know my opinion mattered. Jesus! I'm doing it again, right?\"\n\n\"Mindy, your thoughts, your opinion, it, they do matter, they are important,\" Gloria said, concentrating on a spot above Mindy's head.\n\nGloria had taken Introduction to Human Psychology, PSYCH 114 in her freshman year and had taken Abnormal Psychology, PSYCH 221 in her sophomore year. She was suddenly struck with the realization that this gorgeous creature, a girl so beautiful that she removed Gloria's ability to speak, was insecure and fearful.\n\nGloria had rarely suffered insecurity or fear. Earlier in life, she'd believed herself to be stunningly beautiful, and had the confidence of someone that knew she was beautiful. Later, upon discovering that she wasn't as beautiful as she'd believed, Gloria retained the knowledge that she exuded sex appeal. And sex could manipulate men to cater to Gloria's whims.\n\n\"You want something else?\" the surly waitress demanded.\n\n\"No ma'am, but it is delicious,\" Mindy graciously said. \"Thank you.\"\n\n\"Why are you nice to her; she's just being a rude bitch,\" Gloria asked.\n\n\"Gloria, I don't know what kind of day she's had,\" Mindy explained softly. \"For all we know? She may have just found out she's got cancer or something. Is reacting to her rudeness going to make it any better?\"\n\nGloria looked again into Mindy's caramel pools and fell a little deeper into Mindy's clutches. She reached across the table and gave Mindy's small, warm hand a squeeze.\n\n\"Besides, I've spent years watching my father be an intolerable ass to anyone he believed to be beneath him. And, as a man of God? EVERYONE is beneath the almighty Reverend Roland Truesdale,\" Mindy said, a small smile curling her beautiful lips. \"I will not be like him.\"\n\n\"You want to know what makes me such a bitch?\" Gloria blurted out.\n\n\"Gloria! You're not a bitch,\" Mindy protested.\n\n\"Shut up; yeah I am,\" Gloria said, stuffing some more food into her mouth. \"Here, try some of this; I swear, every time I get this, I think she makes it hotter.\"\n\n\"Mm, oh, that's twice-cooked pork? I'm getting that next time we come here,\" Mindy enthused.\n\n\"Mom was pretty much a whore. Jumped from man to man; by the time I was five, I couldn't tell you how many places we'd been,\" Gloria said. \"Most of them were just shitty apartments, every now and then a rusted out old trailer and one or two were actually pretty nice homes.\"\n\n\"That must have been very hard on a little girl,\" Mindy sympathized.\n\n\"Yeah, learned most men are pieces of shit,\" Gloria said, angrily chomping through more of her dish. \"Most of them? Let my sister and me know we wasn't wanted. But then there were the real ass holes. The ones that liked to touch us a lot.\"\n\n\"Oh, poor baby,\" Mindy soothed.\n\n\"So I learned how to use people, men especially,\" Gloria said. \"And I learned, if you don't care? They can't hurt you. Even when they use you, it doesn't hurt because you don't care.\"\n\n\"Growing up is hard,\" Mindy offered.\n\n\"And right now? I'm trying real hard not to cry; I came here hoping to seduce you and use you,\" Gloria admitted, wiping at her wet eyes. \"And then I'd just throw you away, just like everyone else. Hurt you before you hurt me.\"\n\n\"It must have taken a lot for you to say all that,\" Mindy said.\n\n\"God damn you, stop! Stop, all right?\" Gloria spat, shoving her nearly empty plate away.\n\n\"You finished? You done?\" the waitress demanded.\n\n\"Yes; check please,\" Gloria snapped.\n\n\"How you getting back to the dorm?\" Gloria asked, quickly pulling up Uber on her phone.\n\n\"I took an uber here,\" Mindy said. \"Is our date over?\"\n\n\"Be here in about nine minutes,\" Gloria said, signing the credit card slip for their meal.\n\nAfter a moment's thought, Gloria added a flat fifteen percent tip.\n\n\"Let's go wait in the lobby,\" Mindy said quietly, taking Gloria's hand.\n\n\"Quit it,\" Gloria snapped, pulling her hand from Mindy's hand. \"Jesus, I just told you I was just going to fuck you and dump you.\"\n\n\"WAS. Was going to fuck me and dump me,\" Mindy smiled, taking Gloria's hand again.\n\n\"Hey!\" the same young man that had driven Gloria to the restaurant chirped. \"Man! Was just dropping off another guy at that Baptist Church down there and saw you were ready. How was it?\"\n\n\"It was wonderful,\" Mindy smiled, looking at Gloria.\n\n\"Okay, so I'm dropping you off at, oh! Murphy's dorm, right there, then, okay, Venice, where I picked you up. All righty!\" the driver said and pulled onto the road.\n\n\"So our date is over?\" Mindy softly asked, small hand resting on Gloria's leg.\n\n\"Mindy, please, please quit,\" Gloria said, feeling miserable.\n\n\"Can I call you? Later?\" Mindy asked as the driver pulled into the parking lot in front of the dormitory.\n\n\"I, yeah, I guess,\" Gloria said.\n\nGloria could taste the spicy beef dish and the far too sweet iced tea on Mindy's lips as the beautiful blonde softly kissed Gloria before opening the door of the car. Gloria looked away, feeling horribly guilty for her original intent toward the blonde beauty.\n\n\"All right; oh, hey, need to swing by Saladelights; you in a big hurry?\" the driver asked, pulling out of the parking lot.\n\n\"No,\" Gloria mumbled.\n\nThe driver cheerfully greeted his new passengers and brought them to the Lambert Condominiums. Gloria was ready to scream when he got another fare at the Acadiana Motel. The young man that climbed into the car could not make eye contact with either Gloria or the driver. He didn't even smile when the driver cheerfully said that they were both going to the Venice Apartments.\n\nGloria smirked as the young man gingerly got out of the car and seemed to have some trouble walking up the steps. He said nothing to Gloria as he continued on to the third floor landing.\n\nGloria's cell phone began ringing a few minutes after Gloria stripped out of her clothing and shrugged into her sleep shirt. It had been one of Robin's old Dallas Cowboy tee shirts; proudly proclaiming the Cowboys win in Super Bowl XXX. Gloria debated with herself for a long moment before answering the phone.\n\n\"When can I see you again?\" was Mindy's greeting.\n\n\"Jesus, Mindy, what? You didn't hear me?\" Gloria snapped, curling up on the futon, clutching the pillow Robin had bought for her.\n\n\"I heard you,\" Mindy said. \"Heard you loud and clear. And I heard what you didn't say.\"\n\n\"What? What didn't I say?\" Gloria challenged.\n\n\"That you're tired of being so lonely and so afraid all the time,\" Mindy said softly.\n\n\"I, fuck you! Fuck you, bitch! I don't need this shit,\" Gloria screamed and ended the call.\n\nShe turned the phone off and lay, curled in a fetal position. She must have fallen asleep; the slamming of the door of Apartment 207 roused her. Gloria looked at her phone, then turned it on to see that it was seven thirteen in the morning.\n\n'Want to see you again' from Mindy.\n\n\"Want to...\" Gloria mumbled, staggering to the shower.\n\n\"Where is a good place...?\" Gloria mused, wondering if seven thirty was too early to call Mindy.\n\n\"Shit, uber from here to there and then back to Dusty's,\" Gloria muttered.\n\n\"Hi!\" Mindy happily greeted Gloria when Gloria finally had the courage to call Mindy.\n\n\"Hi,\" Gloria said.\n\n\"When, when can I see you again?\" Mindy begged, voice low.\n\n\"Tomorrow; Side By Side's got an amazing all you can eat buffet,\" Gloria decided.\n\n\"Oh, but Gloria, that's so much!\" Mindy protested.\n\n\"You need to be quiet,\" Gloria ordered. \"I'm taking you to Side By Side. Hear?\"\n\n\"Yes ma'am,\" Mindy said, voice soft.\n\n\"And uber from, okay, Gloria time to break down and spend some money,\" Gloria decided.\n\nGloria got her bicycle helmet and wrestled her bicycle down the stairs. Then she pedaled to Dependable Auto Sales on Highway 54.\n\nThe baby blue 2011 mini Cooper was priced right and Gloria did purchase the extended warranty. Ann Broussard was the Young Insurance agent on duty for that Saturday and cheerfully helped Gloria insure her new car.\n\n\"Yes, its Rochelle's weekend with the girls,\" the pregnant woman happily said. \"So when Miss Elizabeth asked for volunteers? I had no reason to say 'no' I mean, Jared's off-shore right now...\"\n\n\"Good God, woman, I want insurance, not your whole fucking life history,\" Gloria thought but just smiled and nodded her head.\n\n\"Brick's,\" Gloria thought. \"That bitch better not like mushrooms.\"\n\n\"Hey!\" Mindy happily answered her phone.\n\n\"You like mushrooms on your pizza?\" Gloria demanded, driving toward Murphy's dorm.\n\n\"I uh, no, not really. I mean, I can pick them off,\" Mindy said.\n\n\"I'm downstairs in the baby blue mini cooper,\" Gloria interrupted Mindy.\n\nA moment later, Mindy Truesdale burst out of the dormitory's front doors. She was wearing a bubble gum pink top and khaki shorts, long blonde hair done in a simple ponytail. Gloria felt her insides turn to jelly looking at the beautiful girl.\n\n\"Oh my God! This is sooo cuuuute!\" Mindy squealed, getting into the car.\n\n\"Yeah, it is pretty cute, isn't it?\" Gloria laughed and drove them to Brick's Pizzeria.\n\n\"Cafeteria was doing shepherd's pie for lunch,\" Mindy said, happily chewing a slice of the large Meatstravaganza pizza. \"You know, the stuff left over from every day this week?\"\n\n\"What you got against the cafeteria's shepherd's pie?\" Gloria smiled, remembering how much she'd hated that dish. \"You? A Minister's daughter? You should love their shepherd's pie.\"\n\n\"What? Why?\" Mindy asked, taking a sip of her sweetened iced tea.\n\n\"Because, it's made of all of God's creatures,\" Gloria said, taking another slice from the pan.\n\n\"That, Gloria, that's just wrong,\" Mindy said, shaking her beautiful head.\n\n\"My uh, my apartment's a dump,\" Gloria admitted as they stepped outside.\n\n\"Prove it,\" Mindy said, taking Gloria's hand into hers.\n\nLooking around Apartment 206, Mindy shook her head, smiling. Then she reached back and released her hair from her hairclip. She approached a very nervous Gloria.\n\n\"Hi,\" Mindy whispered, sliding closer to Gloria as Gloria hunkered in the corner of the futon.\n\nMindy pressed her lips to Gloria's lips. She smiled and grabbed Gloria's hand in hers. Again, Mindy pressed her pursed lips against Gloria's lips.\n\nGloria felt Mindy's hands at the hem of her simple top. Gloria didn't resist as Mindy lifted Gloria's top up and off.\n\nGloria felt Mindy's fingers gently trailing from Gloria's cheek to her throat to her bare shoulders. As Mindy shifted forward, Gloria felt Mindy's bare flesh touching her bare arm.\n\nThe brush of bare flesh against bare flesh broke Gloria out of her reverie. Gloria raised her hands to Mindy's flawless face and gripped the beauty's head in her hands.\n\n\"Yes!\" Mindy gave a gasp of approval as Gloria became aggressive.\n\nGloria kissed Mindy's lips then forced her tongue into Mindy's mouth. Gloria's hands trailed from Mindy's thick blonde hair to her shoulders. Gloria gently raked her fingernails over Mindy's bare shoulders, down over her bare arms.\n\nGloria could taste the pizza and sweet iced tea on Mindy's tongue. She could feel the softness of Mindy's lips, the softness of Mindy's tongue as Mindy allowed Gloria to aggressively thrust her tongue into Mindy's mouth.\n\nShe could smell Mindy's soft musk perfume, could smell Mindy's soft scent of seat. She could smell Mindy's shampoo, Mindy's unscented lotion.\n\n\"Anyone that says unscented don't have a smell is lying,\" Gloria thought as she brought her hands upward, over Mindy's concave belly.\n\nMindy's skin was so soft under Gloria's fingertips. She wondered if Mindy had any bones at all as she ran her fingers up along Mindy's rib cage.\n\n\"Mm hmm,\" Mindy agreed as Gloria's hands reached the undersides of Mindy's heavy breasts.\n\n\"Mm hmm,\" Gloria agreed, feeling Mindy's sweat underneath Mindy's breasts.\n\nGloria pulled her tongue from Mindy's mouth. Mindy tried to follow Gloria's mouth as Gloria pulled away.\n\nGloria gave Mindy's soft mouth a quick kiss, then stood up. She grasped the rear of the futon's frame, bent the top slightly forward, then pushed the back of the futon down. The back lowered, creating a bed for the two girls.\n\nStill standing, Gloria eased her sneakers from her feet, then unzipped her denim cutoffs and dropped them to the floor. Mindy looked up from her perch and smiled, drinking in the sight of Gloria's nude body.\n\nGloria then eased Mindy to lay back on the bed. Gloria bent over the prone girl and kissed Mindy's lips. Then she scrambled around, placing her knees just above Mindy's head. Gloria bent again and kissed Mindy's upside down lips. Leaning slightly forward, Gloria found one of Mindy's silver dollar sized areolae and licked around the tightly crinkled flesh, drawing the circle tighter and tighter, until she reached Mindy's hard nipple.\n\n\"Mm, oh Gloria, yes,\" Mindy whispered as Gloria sucked the hard nub into her mouth.\n\nWith one forceful suck, Gloria then switched to Mindy's other breast. Her right hand cupped Mindy's right breast, giving the heavy orb a squeeze before bringing her thumb and forefinger to Mindy's hard, wet nipple.\n\n\"Mm, hard, please, I like it...oh!\" Mindy whispered as Mindy's thumb and forefinger toyed with Mindy's nipple.\n\nWhile she tugged and twisted Mindy's nipple, Gloria used her tongue to lick around Mindy's left nipple.\n\n\"Mm, Oh, oh my God!\" Mindy hissed out when Gloria gave a forceful tug to Mindy's right nipple while sucking forcefully on Mindy's left nipple.\n\nGloria sat back slightly, then waggled her own breasts, slapping them against Mindy's face. Mindy's hands came up from against her sides and she grabbed Gloria's breasts. Mindy's soft tongue flicked out and licked Gloria's left, then right nipple. Gloria leaned forward and again suckled Mindy's right nipple while her thumb and forefinger tugged and twisted Mindy's left nipple.\n\n\"Mm, yes,\" Gloria hissed as Mindy's soft tongue and lips caressed Gloria's nipples, back and forth, back and forth.\n\nGloria lifted Mindy's left breast and Gloria licked the sweat from underneath Mindy's breast. The taste was musky, salty. Gloria held Mindy's nipple in her grasp and tugged, pulling Mindy's breast away from her ribcage. Gloria then swiveled her mouth to the underside of Mindy's right breast. Mindy continued to lick around Gloria's nipples while her hands squeezed and massaged Gloria's breasts.\n\n\"Aw,\" Mindy complained when Gloria wiggled forward, removing her nipples out of the reach of Mindy's mouth.\n\nGloria reached down and unzipped Mindy's khaki shorts. Mindy lifted her buttocks off of the cushion and Gloria eased Mindy's shorts and panties over Mindy's sweetly rounded hips and backside.\n\nThe small patch of pubic hair between Mindy's perfect thighs was a few sprigs of light blonde curls. The small tuft did not conceal Mindy's slit, did not conceal Mindy's excitement. Mindy's coral pink inner labia stuck out, slick and puffy.\n\n\"That, that is the prettiest pussy,\" Gloria enthused, climbing off of the futon and walking to Mindy's feet.\n\nGloria eased Mindy's khaki shorts and skimpy shite bikini panties off of Mindy's sculpted legs and dainty feet. Standing, Gloria grasped Mindy's feet and pulled Mindy's body to the center of the bed. She then lay down in the space that Mindy had vacated. She wrapped her arms around Mindy, pressing herself fully against Mindy's left side.\n\nMindy twisted so that she lay on her left side. She and Gloria now lay, face to face. Mindy leaned her face forward and gently kissed Gloria as her arms came around to hug Gloria tightly.\n\n\"Mm,\" Mindy moaned as Gloria's tongue thrust into Mindy's mouth.",
        "Gloria then put her left hand on Mindy's shoulder and pushed Mindy to lay flat on her back. She them pulled her lips from Mindy's lips and brought her mouth down to Mindy's throat.\n\n\"Oh, Gloria,\" Mindy whispered.\n\nGloria gently pulled on Mindy's left leg, moving Mindy to spread her legs slightly. Gloria then wiggled to lie between Mindy's spread legs.\n\n\"Oh! Oh, Gloria!\" Mindy murmured, large brown eyes peering into Gloria's blue eyes.\n\nGloria brought her furry pussy into direct contact with Mindy's crotch. She leaned forward and kissed Mindy's pursed lips, and again thrust her tongue into Mindy's mouth. She began to grind her pussy against Mindy's pussy.\n\n\"Oh, oh yes,\" Mindy gasped out, shutting her eyes.\n\nGloria tilted her head down and sucked Mindy's right nipple. Her right hand tugged and twisted Mindy's left nipple. Mindy began to swivel and rotate her hips, grinding her pussy against Gloria's pussy.\n\n\"Oh, oh, Gloria I'm, Mm!\" Mindy grunted and Gloria felt her crotch and thighs become wet.\n\nGloria wiggled backward until her feet dangled off the edge of the futon. Gloria shifted onto her knees while wiggling backward.\n\n\"Oh! Oh yes! Oh Gloria,\" Mindy hissed as Gloria lifted Mindy's thighs and put Mindy's thighs onto her shoulders.\n\nGloria had been with other girls. Usually, it was just a quick fuck, though. Her last female lover, Gloria had not even tasted the girl's pussy. She'd kissed the girl while thrusting her fingers into the other girl's bald slit until the girl screamed and shook in orgasm. Sinking to her knees, the other girl had licked and fingered Gloria to orgasm. Then someone was pounding on the bathroom door, demanding to use the facilities.\n\nThe scent wafting from Mindy's sparsely haired pussy was intoxicating. A tinge of musk and sweat and salt assailed Gloria's nostrils as Gloria brought her mouth to Mindy's crotch.\n\nGloria dragged her tongue from the bottom to the top of Mindy's slit, tasting Mindy's heavenly essences. Gloria used her thumbs to open Mindy's slit and thrust her tongue into Mindy's pussy. She again dragged her tongue upward until she found Mindy's fat clitoris.\n\n\"Oh, oh Gloria I...augh!\" Mindy gasped out as Gloria batted Mindy's clitoris with her tongue.\n\n\"Mm, oh augh!\" Mindy gave a strangled grunt when Gloria sucked Mindy's clitoris into her mouth.\n\n\"Mm! Mm! Gloria!\" Mindy cried out and drenched Gloria's face with her spending.\n\nGloria lapped at Mindy's inner lips, tasting Mindy's orgasm. The fingers of Gloria's left hand thrust in and out of Mindy's pussy. The fingers of Gloria's right hand began to tickle around Mindy's anus.\n\n\"I, oh!\" Mindy gasped out when Gloria's index finger pushed into Mindy's anus.\n\n\"I, Gloria, I, oh!\" Mindy gasped out, large brown eyes open in surprise as Gloria fingered Mindy's rectum.\n\nGloria returned her oral attention to Mindy's clitoris and introduced a second finger to Mindy's rectum. A moment later, Mindy's thighs squeezed Gloria's head, trapping Gloria's head against Mindy's crotch. Gloria could not hear Mindy's gasp and cry of orgasm, but she did feel her face become wet with Mindy's juices.\n\n\"You, you have to stop,\" Mindy begged, legs falling away from Gloria's shoulders.\n\nGloria wiggled forward again, pausing to kiss and suckle Mindy's breasts. Gloria then pressed her furry pussy against Mindy's pussy. Mindy gripped Gloria's head in her hands and kissed Gloria aggressively.\n\nGloria came to slowly. She was under a soft blanket, her head on her pillow. And there was a warm body pressed up against her. There was a warm thigh pressed between her thighs. There was an arm across her middle.\n\nFor a moment, Gloria cursed herself. Apparently, she'd gotten drunk, too drunk to get rid of her latest fuck buddy. Now, there would be the clingy demands, or worse yet, the stricken, hurt look when Gloria let him know that it had been fun, but it wasn't love. Or possibly this loser would erupt in anger, call Gloria filthy names.\n\n\"Mindy,\" Gloria realized.\n\nGloria settled down again. She drifted to sleep again; safe and warm in the girl's embrace.\n\n\"Where's your oven?\" Mindy asked.\n\n\"They don't got one,\" Gloria mumbled, slowly waking up.\n\n\"'They don't got one'? And you're and English major?\" Mindy giggled. \"Wait. What? There's no, but how do you cook anything?\"\n\n\"What are you wanting to cook?\" Gloria asked, now sitting up.\n\n\"Biscuits. You got bacon and eggs, but you just can't have bacon and eggs without biscuits,\" Mindy said. \"And where's your coffee maker?\"\n\n\"Don't got...At this point in my current living situation, I do find myself lacking a coffee maker,\" Gloria said, crawling from the bed.\n\n\"Oh. My. God. And you expect me, oh no ma'am,\" Mindy said as Gloria shut the bathroom door. \"God, at least the cafeteria has coffee and biscuits. Might be nasty, but they got them.\"\n\n\"Told you, I'm taking you to Side By Side,\" Gloria said, exiting the bathroom. \"They open at, Mindy, Mindy Truesdale, you woke me up at seven? On a Sunday? Get back in bed.\"\n\n\"I do, what we going do?\" Mindy coyly asked, slipping back underneath the soft blanket.\n\nGloria kicked the blanket away and rotated onto her back, feet up against her pillow. She wiggled down and found Mindy's wet slit ready. She softly kissed Mindy's crotch before using her fingers to open the girl's lips.\n\n\"Nuh uh, we doing this right,\" Mindy demanded and rolled to straddle Gloria's head.\n\n\"Mm hmm,\" Gloria grunted her approval as Mindy's warm breath blew over Gloria's crotch.\n\nMindy flattened her tongue and dragged her tongue down along Gloria's puffy lips. Mindy looped her arms around Gloria's thighs and used her fingers to open Gloria's pussy.\n\n\"Mm hmm,\" Gloria groaned as Mindy's soft tongue dragged along Gloria's inner labia.\n\nGloria used her fingers to open Mindy's slit and probed Mindy's crotch with a stiff tongue. She thrust two fingers into Mindy's pussy while seeking Mindy's fat clitoris.\n\nGloria was quick to orgasm. Mindy was quick to follow. While Mindy gasped and wheezed, trying to catch her breath, Gloria tilted her head up and licked the patch of skin between vulva and anus. Tilting her head further, Gloria lapped at Mindy's anus.\n\nGloria felt Mindy freeze for a moment. Then Mindy reached a hand back and pulled on her left buttock, opening herself for Gloria's probing tongue.\n\n\"Augh, oh Gloria,\" Mindy groaned as Gloria performed her first rim job.\n\nGloria tried to push her tongue fully into Mindy's sweaty anus. Using her own hands, Gloria forced Mindy's buttocks apart. She lapped at Mindy's rectum, then brought her fingers to Mindy's rectum.\n\n\"Mm augh, oh yes,\" Mindy hissed approval.\n\nMindy resumed feasting on Gloria's furry slit, licking and sucking on Gloria's lips, then sucking hard on Gloria's clitoris.\n\n\"Mm augh, God yes!\" Gloria cried out in orgasm.\n\n\"I, God, when you, last night? When you was using your fingers on my butt?\" Mindy wheezed, falling away from Gloria. That, I was like, 'oh, that, that's just so nasty.'\"\n\n\"But you got a beautiful butt,\" Gloria smiled, running her fingernails over Mindy's butt.\n\n\"But that? What you was doing? God, I couldn't even thing!\" Mindy enthused.\n\n\"I, I got to, I need to show you something,\" Gloria blurted out.\n\nGloria jerked open ther closet door and found her laptop and the 'Strap On Sweethearts' DVD. Mindy sat up and watched as Gloria fired up the laptop. She smiled and lightly ran her fingernails over Gloria's exposed back. Gloria inserted the disc into her media player and quickly skipped to the third vignette. Mindy leaned forward and watched with interest as the two women used a large strap on phallus for vaginal penetration. Her brown eyes opened wide as the wearer of the strap on pulled the fake cock from her friend's pussy and slid it into the girl's rectum.\n\nMindy gave a gasp then a shudder, brown eyes watching as the two women enjoyed the vulgar act. Gloria looked at Mindy's flushed face and reached her hand over to gently toy with Mindy's breasts.\n\n\"You, you got one them things?\" Mindy whispered, frowning as the interracial vignette started.\n\n\"Yeah,\" Gloria whispered, then gasped as Mindy aggressively kissed Gloria, small hands grabbing at Gloria's breasts.\n\n\"Be right back,\" Mindy suddenly declared and dashed for the bathroom.\n\nGloria reached up on the shelf of her closet and pulled the strap on cock out of the box. She adjusted the waist belt, then the two straps for her thighs. Locating the batteries, she slid them into the remote control and turned them on. Her blue eyes opened whide as the device sprang to life with dual throaty buzzes.\n\n\"Oh. My. God; if I wasn't wet already,\" Mindy hissed, seeing Gloria standing, wearing an eight inch dick.\n\nGloria turned the vibrator motors off. Her eyes blinked, then watched as Mindy knelt in front of her, small hand gripping Gloria's cock. Mindy's soft tongue flicked out and licked the tip of Gloria's dog.\n\n\"Oh!\" Gloria hissed out, watching as Mindy performed fellatio on her dick.\n\n\"Mm, thing tastes terrible,\" Mindy giggled, looking up into Gloria's eyes.\n\n\"Oh! I uh, I got this...\" Gloria said, finding the flavored lubricant.\n\nMindy scrambled onto the bed, spreading her legs wide. Gloria approached, cock waggling back and forth with each step. She turned the two vibrators on and shuddered as the base buzzed merrily against her clitoris.\n\n\"Make love to me,\" Mindy whispered as Gloria knelt between Mindy's splayed legs.\n\nGloria gripped the cock in her hand and pressed it against Mindy's puffy lips. She dragged the cock up and down, gathering Mindy's moisture on the cock.\n\n\"Mm, oh Gloria,\" Mindy sighed, shuddering as the tip came into contact with her clitoris.\n\n\"God, yes,\" Gloria shuddered in orgasm.\n\nShe reached to the control and lowered the speed of the base's vibrator. She then brought the tip of the dong against Mindy's lips, pushing in slightly.\n\n\"Oh, don't tease me,\" Mindy whined, reaching out and pulling Gloria on top of her.\n\n\"Mm, augh!\" the two girls cried out as Gloria's cock was firmly imbedded in Mindy's pussy.\n\n\"Ack, oh God!\" Gloria cried out in a second orgasm; with her cock fully inside of Mindy, the base was jammed firmly against Gloria's clitoris.\n\n\"Oh, this, oh, oh Gloria!\" Mindy cried out in orgasm.\n\n\"I love you,\" Gloria blurted then kissed Mindy forcefully.\n\n\"Thank you,\" Mindy said softly. \"I love you too.\"\n\nClumsily, Gloria fucked Mindy to another orgasm. Mindy Kissed Gloria, then released her hold on Gloria.\n\n\"Come on,\" Mindy said, wiggling in an effort to dislodge Gloria's hard, buzzing cock from her pussy.\n\n\"Now, this, this is going to kind of hurt,\" Gloria cautioned as Mindy rolled onto her hands and knees.\n\n\"Yeah,\" Mindy sighed, waggling her perfect buttocks in invitation.\n\nThe few times Gloria had experienced anal sex, she had not enjoyed it. The young men had not taken the time to prepare her for the intrusion.\n\nBut when Gloria masturbated, she did often insert a finger or occasionally larger objects into her rectum.\n\nShutting the vibrators off, Gloria grabbed the bottle of lubricant and squirted a good amount onto her fingers. She wrinkled her nose; if this was what cherries were supposed to taste like, she would have never eaten a cherry pie.\n\n\"Oh, yes!\" Mindy hissed out as Gloria thrust her greased fingers into Mindy's rectum.\n\nGloria watched, eyes wide, as her fingers slid into Mindy's dark pink anus. She shuddered; her fingers slipping in and out of Mindy's pretty little hole was truly erotic.\n\nA third finger slid in easily and Gloria twisted and thrust the three fingers in and out, getting Mindy ready for her fat cock. Pulling her fingers from Mindy's greasy hole, Gloria squirted a dollop of the lotion into her palm, then gripped her cock and greased her cock.\n\n\"Mm, oh,\" Gloria moaned as she turned on both vibrators, sliding the levers to medium speed.\n\n\"Mm, oh, oh Gloria,\" Mindy hissed out as Gloria pressed the greasy tip of her cock to Mindy's tightly clenched anus.\n\n\"Mm hmm, oh God, yes,\" Gloria groaned as the base of the cock shoved against her crotch.\n\n\"Mm, oh, wait, wait,\" Mindy panted as a millimeter of Gloria's cock slid into Mindy's rectum.\n\nGloria shuddered and groaned as she watched Mindy's sweet little hole flower open. She pressed her dong into Mindy, pressed millimeter after millimeter into Mindy's willing rectum.\n\n\"Mm, oh, oh God, this, oh, I know why gays like this so much,\" Mindy grunted, voice strangled.\n\n\"God, no kidding,\" Gloria grunted, her own voice strangled.\n\nBoth girls grunted and shuddered when Gloria was fully imbedded in Mindy's bowels. Gloria reached around Mindy's hip and found Mindy's wet lips.\n\n\"Ack! Ack! Oh God!\" Mindy cried out as Gloria diddled Mindy's clitoris.\n\n\"Ack, Jesus,\" Gloria cried out in her own orgasm.\n\nGloria fucked Mindy to another orgasm before Mindy complained that her butt was starting to hurt. Gloria slowly pulled out of Mindy's grasping, fluttering hole.\n\n\"Oh,\" Mindy gave a long, shuddering moan as Gloria's cock popped out of her rectum.\n\nEntering Side By Side Steakhouse, Gloria saw Kelli and Fred waiting for an available table. To Gloria and Mindy, Kelli and Freddie made an odd looking couple; he towered over her. But the loving looks the two kept shooting at each other was very obvious.\n\n\"Hey; we get a table for four? They can seat us right away,\" Kelli said to Gloria.\n\n\"Okay!\" Gloria readily agreed. \"Oh, Dr. Danbridge, this is Mindy. She's...my girlfriend.\"\n\n\"Oh, how nice to meet you!\" Kelli enthused even as she kicked Freddie Loomis in his chin.\n\n\"Ow!\" Fred laughed. \"So I was right. That any reason to cripple me?\"\n\n\"He was right?\" Gloria asked as Fred spoke to the hostess. \"Right about what?\"\n\n\"He said you're gay and I said there's no way,\" Kelli smiled, affectionately rubbing Gloria's arm. \"So, Mindy, how did you two meet?\"\n\n\"She uh, she tutored me, what, couple semesters ago? Tutored me in Colonial Literature,\" Mindy smiled, shooting an adoring look at Gloria.\n\n\"He, there's no way! God, I didn't even know until Friday night,\" Gloria protested.\n\n\"Ladies, right this way,\" Fred smiled.\n\n\"My butt hurts when I walk,\" Mindy whispered to Gloria, giggling.\n\n\"Shush,\" Gloria giggled in reply.\n\n\"So, do y'all come here a lot?\" Gloria asked Kelli as they settled down with heaping plates.\n\n\"Oh, coffee! Yes! Someone doesn't have a coffee maker in her room,\" Mindy enthused.\n\n\"I said I'll get one,\" Gloria said.\n\n\"No, not really, but we're here to celebrate,\" Kelli smiled.\n\n\"Celebrate?\" Gloria asked.\n\n\"Yes. Someone just got hired by Pilot Petroleum. I won't say who, but when they read his doctoral thesis? Well, let's just say they were dutifully impressed,\" Kelli smiled up at Fred.\n\n\"I really couldn't have done half as good without your help,\" Fred smiled down at Kelli.\n\n\"So. It is Doctor Loomis now?\" Gloria smiled.\n\n\"Not officially, but yes,\" Fred laughed out loud. \"My old man? Told me I was just going to be big and dumb my whole life? Well, let's just say, while I'm eating like a king, he's eating some crow.\"\n\nSomehow, Mindy managed to get four mimosas into her. The nineteen year old blonde was giggling drunk by the time they left the restaurant, clutching onto Gloria.\n\n\"I don't want go back to Murphy, come on, take me your place,\" Mindy slurred.\n\n\"Go. Get your books for tomorrow, go get some clothes,\" Gloria ordered. \"And, it's supposed to be raining tomorrow so get an umbrella.\"\n\n\"Okay!\" Mindy happily giggled.\n\nMindy with a hangover and sore ass, and no coffee was not a pretty picture. Gloria drove to the Elgee Wal*Mart and purchased a coffee maker and a pound of dark roast coffee grounds. On a whim, she also grabbed some French Vanilla flavored creamer.\n\n\"Oh, thank God,\" a whining Mindy groaned as the smell of brewing coffee filled the small room.\n\n\"You right thank God. Maybe this will shut you up,\" Gloria teased.\n\n\"Oh, eat me,\" Mindy snapped.\n\n\"You mean, that would have shut you up?\" Gloria asked.\n\n\"You're not funny. I know you think you are, but you're not,\" Mindy said, accepting the cup of coffee.\n\nAt the end of the semester, with a bitter wind blowing in from the Atchafalaya, Gloria carried the last box down the flight of stairs. Mindy sat in Kelli's Edge, heater blowing high.\n\n\"Be right back,\" Gloria called out as the hatch of the SUV closed.\n\nKeisha accepted the keys and the parking tag. She did smile slightly when Gloria wished her a Merry Christmas and left the apartment manager's office.\n\n\"Now, on to the Love Shack,\" Gloria whooped, backing out of the parking space.\n\n\"And you said we going get a hot tub like Kelli and Fred,\" Mindy reminded Gloria as they drove to 2011 Fontenot Road.\n\n\"God, Sweetheart; this house just about wiped me out,\" Gloria said. \"Let me start my job first. Then we'll look at getting a hot tub, okay?\"\n\nIn Apartment 206, Keisha nodded with grim satisfaction. The apartment was spotless. It did appear that Gloria Van Dorscht would be getting her security deposit in full. Opening the door of the tiny closet, Keisha did not see the DVD case on the shelf. 'Trap On Sweethearts' sat, waiting for the next tenant of Apartment 206.\n\nTHE END\n\n**Author's Notes: I write these stories for my pleasure; I post them here for your enjoyment. I thank you sincerely for reading my stories.\n\nI especially thank those that take the time to leave comments, good and bad. I also thank those that take the time to rate my stories, those that 'Favorite' my words.\n\nRobin Van Dorscht, Gloria Ann Strands, now Gloria Van Dorscht, and Cecil Hoffman are all characters introduced in 'Week Of The Big Three Oh' in the Gay Male category.\n\nFreddie Loomis is a character first introduced in 'Week Of The Big Five Oh' in the Mature category. His character also makes an appearance in \"Am I?\" in the Lesbian Sex category.\n\nPaul Robichaux, the general contractor is a character prominently featured in 'The Broussard Sisters' series in the Group Sex category. He does make sporadic appearances in other stories centered in the greater DeGarde area.\n\nRudy Longlinais is a character introduced in 'Garden By The Front Door' in Loving Wives category.\n\nJosh Lacombe, half owner of the plant nursery is a character first introduced in 'Zipping Across The Waters' in the Gay Male category. His business partner, Terrence Davis is a character first introduced in 'Boys Of Sharp Shire' in the Gay Male category.\n\nWade Savoie is mentioned but never introduced in 'Five Trailers: Lot B' in the Romance category. His personality is that of an entitled suburbanite. Guess what, Wade? You might have been given trophies for just showing up, but in real life? There are very few trophies given to underachievers.\n\nMindy Truesdale is a character introduced in 'Cast Adrift' in the Incest/Taboo category.\n\nDenise Blanchard, the woman that won the pageant and was selected Homecoming Queen is a character first introduced in 'Don't Poke The Sleeping Bear' in Loving Wives.\n\nHave a swell day. And some of you, have a swollen day."
    ],
    "authorname": "JimBob44",
    "tags": [
        "pornography",
        "masturbation",
        "anal masturbation",
        "anal sex",
        "lesbian sex",
        "lesbian romance",
        "romance",
        "college"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/multiple-units-206"
}