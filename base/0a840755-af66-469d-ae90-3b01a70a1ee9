{
    "title": "Swingers' Clubs: What Goes On?",
    "pages": [
        "Are you thinking about visiting a \"swingers' club\"? Perhaps you have always wanted to do so, but didn't know how to broach the subject with your spouse or significant other? Maybe you're just curious about what goes on in \"one of those places\". Perhaps this (true) story will help to lift the curtain and let you glance into the erotic world of an \"adult couples' club\" and see if it might be for you and the one you love. \n\nA few months ago, \"Patty\" (name changed) and I would never have even thought about going to a swingers' club. After all, we don't think of ourselves as swingers. We don't swap partners and have no intention of ever doing so. However, we DO enjoy all things erotic and recently discovered how immensely stimulating it is to make love in the same room as another couple  watching them as they watch us.\n\nAfter reading a story posted at literotica.com by bearlee titled \"Swinging: Online and Off\" (which we highly recommend) we posted a Profile at a swingers' web site and met up with a couple who, like us, are into what's called \"soft swing\". That phrase is open to various definitions, but essentially means you do NOT swap partners for sexual intercourse. They suggested we join a club in our city that they very much enjoyed and thought that we would, too. What follows is something of an observational report of our second visit to the club. If you (or your spouse) are hesitant to visit a similar establishment, perhaps you will find this helpful. At the end, we include some comments that you could find helpful.\n\n# # #\n\nOn Saturday, we made our second visit to a place described as \"a very private club\" to meet a couple who'd introduced us to the place for our first visit a few weeks back. Like us, they're not true swingers, but enjoy adult fun in an erotic, stimulating environment. This club certainly provides that! No liquor is available (due to a local ordinance), but members are welcome to bring coolers. Set-ups, ice buckets, etc are provided free of charge by the club. The place resembles a large, sophisticated big-city night club... only with erotic extras. As on our first visit, we were impressed by the easy-going, non-threatening atmosphere...\n\nWe found our friends at a small table near the pulsing lights and throbbing beat of the dance floor. We settled back to take in all the eye-candy. There are certainly a lot of \"beautiful people\" in this place. However, it is encouraging to find so many \"less-than-gorgeous\" couples who, nonetheless, are there to experience some erotic fun. In fact, it was apparent that most of the couples would be considered \"ordinary folks\" and there was absolutely no feeling that this place was solely for Ken and Barbie...\n\nIt was crowded already by 8:00 p.m. and we looked around at the throng. One woman, perhaps in her early 30's was dressed only in a black micro miniskirt and heels (she'd had a tie-front white blouse on for about 15 minutes when she first arrived but shed that once she got on to the dance floor) and we surmised that she had recently had a boob job as she was intent on showing off her new breasts to everyone. In fairness they *were* spectacular; high and round with astonishingly long, tapered nipples. I'd first caught sight of her by following the gaze of the two couples at the next table. I actually said to them, \"Should I move back to avoid obstructing your view?!\" No need; she wafted slowly by our table to give us an \"up close and personal\" display...\n\nTwo women came in holding hands. One was tall and quite manly wearing a black shirt and slacks; the girlfriend was slim and petite, wearing a frilly white blouse and 'schoolgirl' plaid mini. They stood for a while, looking around, then disappeared into the crowd...\n\nThe dance floor was lively. We recognized one stocky woman from our previous visit. As before, she was dancing alone at the edge of the floor in front of (presumably) her husband. She was naked from the waist up, dancing for his pleasure. She continued for most of the night. We noticed he never danced with her; just watched her and watched the others who were watching her, too...\n\nTwo women got into the gogo dancer's cage and slowly caressed and stripped each other, swaying to the music and passing each garment out through the bars to their watching male partners...\n\nWe went for a walk around the club, skirting the dance floor (where a redhead in a spangled thong was pole dancing beside the DJ booth) and entered a side lounge. There is a small darkened area beyond that where \"singles\" are allowed to go in and play (the main play rooms are solely for couples  who are identified by a stamped hand  and singles accompanied by couples who have invited them to join them). We glanced through the net curtain into the \"singles\" area as we waited for our friends to catch up with us. A woman was seated on a padded bench between two men each of whom was sucking one of her breasts. When we looked in again a few minutes later, she was leaning over to suck one of the men while manually stimulating the other...\n\nWe climbed the rather treacherous winding antique staircase to the upper floor, away from the noise and lights of the dance floor area.  Upstairs, there is a fair-sized lounge-bar area with subdued lighting and large leather sofas arranged around a fireplace (thankfully not lighted on this hot evening). We joined several couples who were looking through a doorway into one of the small side rooms. Inside the room, four naked couples were approaching the climax of their love- making session. There are two sofas and an overstuffed armchair in this room. In the dim, soft light we could see that there was a couple on each of the sofas. In each case, a man was seated, leaning back, thrusting up into a woman who was astride him, bouncing up and down cowgirl- style. Another woman was kneeling in front of the easy chair, head pressed against the seat while her partner rammed into her from behind. On the floor beside them, another couple were also screwing doggie style. As the girl neared her climax she reached out to the woman leaning on the chair and caressed her ass that jiggled with every hard thrust from the man who taking her from behind. All we could hear was the sound of flesh slapping on moist flesh and the moans of eight people in various stages of orgasm. We and the other \"watchers\" were caressing our partners as we viewed the scene in front of us. Finally the couples broke apart, the girls kissing and intimately touching each other as they cleaned up and got dressed...\n\nPatty and I took their place in the room. We played for a little while, and watched some of the other couples who came in with us but decided to explore some of the rooms before getting too heavy...\n\nThere were several couples now seated in the area just outside that playroom. We noticed a couple we had seen earlier downstairs. She was kneeling in front of a man, sucking his cock, while hubby watched, masturbating...\n\nWalking through the lounge area (where the action was getting quite heavy) we went into one of the back playrooms. Again we started to play, and two couples followed us in. No problem; we figured they were there for the same reason we were. However, after about five minutes of listening to them (loudly) discussing their kids' school activities and soccer camp (and doing nothing else) it became a real turn-off so we dressed and went on our way...\n\nWe ran into our friends again. As we chatted and decided where to go, we noticed the lesbian couple we'd seen earlier. The larger, more masculine one was cradling the head of the sweet little \"schoolgirl\" one ... who was having her pussy eaten by a man(!) kneeling in front of her. We were surprised when, a few minutes later, the man raised his head and asked them a question. They looked at each other then nodded. Still kneeling, he pushed her slim legs up for her girlfriend to hold. Although we were behind him, it then became apparent he was fucking the girl with long slow strokes while the two girls kissed, moaning into each others mouths...\n\nWe'd been hoping to find a space with our friends where we could play beside each other. However, they stopped to talk to another couple, and Patty pulled me into a somewhat quieter room, saying she was so hot she just couldn't wait. In this room, a woman was astride her partner in a chair, rising and falling energetically on his cock. On one side of a sofa facing them, a man was leaning back while a woman knelt in front of him sucking him off. Patty quickly stripped off and sat on the sofa beside them, asking me to kneel in front of her and eat her pussy. She quickly became very aroused, and was unaware that she was rhythmically bumping against the couple next to us. Patty came several times and her moans and cries helped spur on the couple across the room who, judging by the rapid slap-slap-slap and the sudden moans, were going over the top together. \n\nPatty switched placed with me and I sat on the sofa. The man next to me was obviously getting close and his lady partner was trying to steal sideways glances at us as she bobbed up and down. As Patty started sucking me, I noticed that a new couple had entered the room. Unlike most of the women there, this one was dressed very conservatively in a knee-length blue skirt and a white linen jacket trimmed in blue. They had taken over the easy chair to my right, and she had unzipped her partner's pants and was slowly sucking his erection. I was becoming increasingly aroused at the sights and sounds either side (and directly in front) of me and knew I couldn't last much longer. At this point, the primly-dressed woman to my right stood up and pulled up her skirt. Only a couple of feet in front of me, at eye-level, she pulled aside her plain beige panties and settled down, legs spread, impaling herself on his cock while he reached around to unbutton her jacket and fondle her breasts. All evening I'd been surrounded by women wearing little more than heels and thongs, but for some reason, this image was the one that put me over the edge into a shattering climax, just as the man on the sofa was cumming into his partner's mouth...\n\nWe wandered back (on shaky legs) into the noisy dance floor area, which had heated up considerably. Two totally naked women were dancing together, if you could call it that, and there were several groups of semi-naked people 'sandwiching' each other and swaying to the music. We rejoined our friends at our table. They confessed that they had actually 'got it on' right there at the table (a practice officially frowned on by management, but pretty much overlooked from what we could see) with her sitting on his lap as she was wearing a black lace (crotchless) cat-suit under a mini-skirt which made undressing unnecessary...\n\nIt was heading for 2:00 a.m. which is the official closing time and we were getting ready to leave. A (very) large woman approached our table with her voluminous bare bosom wobbling freely. She said something to our friends, then grabbed the backs of their heads pulling them to her massive chest. They had little choice but to do what she obviously wanted and suck on her big nipples! We assumed our friends knew her, but after the woman left they told us they'd never seen her before but didn't quite know how to refuse her titty-sucking request! Ah well... \n\nWe went out into the hot night (early morning) air and the valet brought our car up. Even though we were tired, we were still incredibly aroused from the evening, and immediately went home and made love again. Then again first thing in the morning. \n\n# # #\n\nSome additional thoughts...\n\n*This was the only swingers' club we have visited so it would be unreasonable to assume all such clubs are of the same standard. According to our friends, there is another similar club in town, but both felt it was sleazier and did not separate single males from the couples, resulting in some unwanted attention. Our advice: if at all possible find out which clubs are right for you (if there is more than one to choose from). How? See if the club has a web site and get a \"feel\" for its ambience from that. Of course, the best recommendation is word-of-mouth if you happen to meet someone who is familiar with swingers' clubs. As a reminder, we posted a Profile on a swingers' web site and met up with a couple who introduced us to \"our\" club.\n\n* The above description might give you the impression of a massive bacchanalian orgy. This really wasn't the case. There were about 300 people there that night. We doubt that more that 25% actually indulged in sexual acts on the premises. Most were there to enjoy the erotic atmosphere, possibly as a stimulation to later activity. There was no pressure of any kind to participate in any type of sexual act.\n\n=> On a related point, it seemed to us that the majority of couples who DID engage in some kind of sexual activity did so with their own partner, albeit in the presence of other couples. Doubtless there were couples who traded partners, but from our limited perspective this wasn't the norm.\n\n=> In this particular club, the management kept a discreet eye out for anyone (usually a single male) who might become a pest. In fact, when we joined we had to take an obligatory tour of the club with one of the management team, ostensibly to show us the facilities, but also to point out that obnoxious or predatory behavior would result in being quietly ejected and barred. We found that reassuring.\n\n=> Yes, you probably WILL meet someone you know if you go to a swinger's club in or close to your own town. If it is obvious you've seen (and recognized) each other, say hello and move on. This is truly a \"Mexican stand-off\"! Neither of you is really likely to \"out\" the other when you think about it. (And yes, Patty ran into her supervisor's boss and his wife on our second visit. On Monday morning at work, neither mentioned it... and never will.) Our advice: Don't worry about it.\n\n=> How will this affect your relationship? Every situation is different. But for us it has been extremely stimulating to be with other adults who obviously enjoy our sense of erotic fun. It is a very good way to kindle (or re-kindle) sexual arousal without the obvious physical and emotional dangers inherent in cheating on one's partner; you BOTH get to enjoy the fun and  together  can decide how far you want to go.\n\n=> If you have any questions, you are welcome to contact us. We are NOT experts, but we hope this has given you an insight into taking those first scary but very exciting steps into the world of adult erotic fun! \n\nYour vote will also indicate if this has been helpful and if we should continue to provide our observations in the future. Enjoy! "
    ],
    "authorname": "pixandwords",
    "tags": [
        "swingers clubs",
        "group sex",
        "swinging",
        "swing",
        "swap partners",
        "public sex",
        "swingers club",
        "blowjob",
        "orgy",
        "oral"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/swingers-clubs-what-goes-on"
}