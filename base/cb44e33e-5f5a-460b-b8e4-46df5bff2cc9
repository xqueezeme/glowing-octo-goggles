{
    "title": "The Agency Ch. 06",
    "pages": [
        "Author's notes: This is a work of fiction, hopefully that is not a word you struggle with. It is a story of fictional, consenting adults who enjoy power exchange, lingerie, heels and the like. It's in the transgender/crossdressing category for a reason, if that scares you please back away slowly. For the rest of you, please enjoy!\n\n~~~~~~~~~~~~~~~~~~\n\nWaking slowly, Michelle felt the warmth of Babette pressed into her back and instinctively pressed back into her friend's body. She had to giggle slightly, even though she knew Babette was caged as well, the plug in her bottom made it feel like she wasn't. It was a deliciously wicked thought that made the hair on Michelle's arms raise on end. As she lay there she thought about how significantly her life had changed in the past weeks. While some of these changes were quite simply, shocking, others seemed quite natural. She would never consider what had occurred in Ms. Allison's office the day before as natural, but Michelle had enjoyed it more than she ever thought she would. While she had never considered herself a submissive, there was a level of eroticism and pleasure Michelle couldn't deny enjoying at the hands of Ms. Allison. Michelle soon found herself aching for the next time it would happen.\n\nSlipping out of bed, Michelle tiptoed to the bathroom, catching a glimpse of herself in the full-length mirror. The red negligee was sexy bordering on slutty, but Michelle wasn't thrilled with her complete look. After going to the bathroom and removing the plug, Michelle put her wig on and stepped into a pair of 3\" red heels.\n\n\"That looks better,\" she said, taking a second look at herself in the mirror, \"at least until I can get my hair to grow out.\"\n\nMichelle pulled on the equally sheer robe that went with her outfit before walking quietly to the kitchen. She wanted Babette to sleep, knowing that not only had she come in late but the date had more than likely worn her out as well. While Babette slept, Michelle started making coffee followed by breakfast. As she cooked, she heard her friend rousing in the bedroom and smiled knowing she would be treating Babette to ready made breakfast and coffee.\n\n\"I'd complain about you not being dressed as a maid or something,\" Babette said as she walked toward the kitchen, \"but I can't complain when you look like that!\" Michelle blushed then poured Babette a cup of coffee. \n\n\"How was your date?\" Michelle finally mustered the nerve to ask. \"Was it as kinky as we'd thought it would be?\"\n\n\"Hmmmm,\" Babette sat back feigning having to contemplate the answer, \"well if you consider being bound over an ottoman outside on a rooftop deck while being put on a spit by a husband and wife kinky, then I'd say yes!\"\n\nMichelle could see Babette shudder at the quick memory, then felt silly for having to ask, \"On a spit?\"\n\n\"That's when you have one in your mouth and the other in your ass at the same time,\" Babette winked as she replied, \"kind of like a pig on a spit.\"\n\n\"Oh my God!\" Michelle replied feeling the hair on the back of her neck stand on end. \"Who was where?\"\n\n\"With the creative use of condoms, they were both wherever they wanted to be!\"\n\nFor the next few minutes Babette went into every sorted detail of her date, which as they'd suspected included lots of bondage, causing Michelle's caged parts to ache and throb. She couldn't believe not only what she was hearing, but also that she was getting so incredibly aroused by it. Michelle pictured herself in Babette's bound position, realizing how badly she wanted to be there, while her heart raced at the idea. \n\nBabette and Michelle cleaned up after breakfast, Michelle's mind still racing, then proceeded to get ready to meet Babette's realtor friend. There seemed to be something new, more erotic even, as the plug was seemingly sucked into Michelle's ass. She may have even let out a slight moan once the fat bulb was inside her. A panty liner was a must today, as her caged boy part was pouring like a faucet and the small satin feeling bikinis she'd picked for today wouldn't last long. Michelle added the matching floral print bra and a very pretty white cami with lots of lace before slipping into the floral print sundress she'd picked for the day. Stepping into a pair of open toe sandals, Michelle gave herself another\n\nlook over before stepping out of the bathroom.\n\n\"Aren't you quite the girly girl today!?!\" Babette teased. \"You do look very pretty,\" Babette said earnestly, \"that dress looks amazing on you.\"\n\n\"Thanks!\" Michelle replied with a bit of a twirl of her hips to accentuate the movement of the dress. \"One of these days you'll have to tell me how you get into jeans like those!\"\n\n\"All those ass workouts I want to show it off!\" Babette quipped. \"But I won't be drinking a lot of water,\" she said, pressing her hand against her lower abdomen, \"there's a lot of layers under these holding everything in place.\"\n\nUnlike the ultra girly looking Michelle, Babette was wearing a pair of skin tight hipster jeans and a button down, sleeveless crinkle top that flashed just a bit of her tanned midsection. The 3-inch ankle boots and a light jacket completed her casual look. Exiting Babette's apartment, they certainly didn't look like they belonged together, but Michelle quickly tucked her arm into Babette's, letting her friend take the more masculine role.\n\n\"Want to do something wild?\" Babette asked as they made their way to the front door of the building.\n\n\"We're about to go outside dressed like this and you're asking if I want to do something wild?\" Michelle teased. \"Never mind our work environment!\"\n\n\"It's only sexual harassment if you don't enjoy it!\" Chuckled Babette. \n\n\"Enjoy may be too soft a term,\" Michelle blushed deeply as she spoke, \"last time was amazing!\"\n\n\"It only gets better Sweetie!\" Babette said as they walked outside. \"Michelle, this is my friend Samantha,\" Babette said, leading Michelle up to the auburn haired woman outside the building, \"Sam, this is my coworker Michelle.\"\n\n\"Hi Michelle!\" Sam's personality was obviously sales oriented as her bright eyes and warm smile made Michelle feel welcome. \"I hope you two don't mind,\" Sam immediately took the lead, \"I have a couple places to show you, but the second one I am very excited about!\"\n\n\"Sounds great!\" Babette replied, matching Sam's excitement.\n\nGetting into Sam's car, with Michelle in the back seat, they headed off to the first apartment building. Sam was undeniably bubbly and talkative, telling Babette all about the building, utilities, security and the rest. Pulling up to the building, Michelle felt incredibly out of place. Even the outside of the building, complete with doorman, was far nicer than any building on Michelle's block! She wondered how Babette could ever afford such a place, then noticed her friend's hand extending to her and the $10k tennis bracelet gleaming in the sun. \n\n\"What do you think?\" Babette asked, taking Michelle by the arm.\n\n\"Can you afford this place?\" Anxiously asked Michelle.\n\n\"Absolutely!\" Babette replied confidently.\n\nBrushing past the doorman, the three made their way upstairs, where Sam let them into the nicest apartment Michelle had ever seen. The living area was larger than Michelle's entire apartment and then some. Large windows lined one wall, with a large kitchen island set up to overlook the entire space. To the left was a bedroom four times larger than Michelle's with an attached bathroom Michelle had only seen in magazines.\n\n\"Is that a step in shower?\" Michelle asked to no one in particular.\n\n\"Yes it is,\" Sam gleefully answered, \"the teak bench stays and those body jets are to die for!\"\n\nMichelle just nodded wondering how many gallons of water all those jets sprayed in a minute. There was also a full size soaker tub, makeup table and double sink vanity.\n\n\"I could live just in here!\" Michelle finally blurted.\n\n\"Oh don't be silly,\" Babette replied, moving close to Michelle and squeezing her ass through her dress, \"there's always room in my bed for you!\"\n\n\"Well thank you!\" Michelle giggled in response, feeling herself push against Babette's hand.\n\nThe remainder of the day felt like a blur for Michelle, punctuated by overt flirtations from Babette, but it wasn't until the three of them were out to lunch that it finally struck Michelle. As she excused herself from the table, while Babette and Sam talked numbers, Michelle faced the precarious decision of which restroom to use. It was the first time all day she'd thought about being out as a girl. Until then it had never crossed her mind. As a woman stepped out of the bathroom, she smiled and held the door for Michelle. Not knowing what else to do, and not wanting to be rude, Michelle took the door from the woman.\n\n\"Thank you.\" She practically whispered, suddenly concerned her voice would give her away.\n\nAlone in the bathroom, Michelle quickly did her business so she could sit safely at the table. For whatever reason the notion of being out as Michelle finally struck her, but when she returned to the table it passed just as quickly as it had arrived. Seeming to sense something was wrong, Babette reached over, taking Michelle's hand and giving it a squeeze. Lunch lasted close to 90 minutes, with more than a couple glasses of wine for each of them. They left Sam, who went back to her office to write up the offer sheet, then slid into a cab to return to Babette's place.\n\n\"That was exciting!\" Michelle said sliding closer to Babette in the cab.\n\n\"I can't wait!\" Babette replied placing her hand on Michelle's thigh, stroking it lightly.\n\nMichelle felt a slight rush at Babette's touch, her fingernails lightly grazing her leg through the thin sundress, but it was only accelerated by the cab driver's constant glances into the back seat. He obviously thought the two \"girls\" in the back seat were worth watching more than the road and almost rear ended a parked car. A thought rushed through Michelle's head, something flirty but before she could spring it into action they were at Babette's. It was probably best, Michelle quickly began to question herself again. She had briefly thought of deeply kissing Babette in the backseat, in full view of the driver, but the idea was both scary and erotic. Regardless of the fact the driver thought they were girls, the truth was quite the opposite. Michelle had even seen Babette's caged boy parts in Ms. Allison's office back when she first started there. Ultimately, Michelle would be kissing a boy and deep down she wasn't sure what she thought about that.\n\nLost in thought, Michelle simply followed Babette upstairs to her apartment. Babette poured a glass of wine as they settled into the couch to shop for furniture for her new place.\n\n\"Are you sure you don't want to take anything from here?\" Michelle asked quickly totaling the furniture bill in her head.\n\n\"What? And leave you without or having to bring your crappy furniture here?\" Babette chuckled, turning herself to lay her legs over Michelle's lap.\n\nThe thoughts suddenly returned to Michelle's mind, but it was tough to deny that Babette did not appear like a girl. Her snug jeans clung to her shapely, tanned legs, while her recently pedicured feet and hot pink toes decried her declared sex at birth. Michelle tried not to think in terms of titles, remembering Ms. Allison's words. Sitting in her sundress and lingerie, Michelle didn't feel like Michael anymore. She struggled to remember what it felt like to be Michael for that matter. The only thought that came to her mind was his loneliness, and being poor. Both of those issues were resolved in becoming Michelle, so it couldn't have been a bad thing right?\n\n\"Are you okay Sweetie?\" Babette asked.\n\n\"Just lost in thought.\" Michelle sheepishly replied.\n\n\"It happens,\" Babette said with a deep note of concern in her voice, \"you seemed off after your trip to the bathroom at lunch.\"\n\n\"It was the first time all day I'd realized I wasn't a girl,\" Michelle felt a weight lift from her chest as she spoke, \"until I was faced with which bathroom to walk into, it hadn't crossed my mind.\" Michelle looked over at Babette before continuing, \"I was really enjoying today right up to that point.\"\n\n\"Those moments will happen Sweetie,\" Babette's voice was like a warm hug, \"but they will pass eventually.\"\n\n\"Are you sure?\"\n\n\"I've lived those moments too!\" Babette smirked. \"I haven't always been as confident as I am now,\" she said with a wink, \"but I've always been this perverted!\"\n\n\"I'm not surprised by that!\" Michelle chuckled feeling much more relaxed now that she'd opened up. \n\nThey spent a little more time furniture shopping before deciding to make dinner together. While Michelle was in the kitchen, Babette decided to change, she'd finally had enough of her snug fitting jeans and wanted something comfortable. Michelle was putting dinner on the table when Babette reemerged in a short red satin nightie and robe.\n\n\"Oh I love that!\" Michelle cooed.\n\n\"You're too sweet,\" Babette smiled, doing a little twirl to show off her outfit, \"there's nothing better than satin or silk against your skin!\"\n\n\"That is true,\" Michelle replied as she squeezed her thighs, \"but I have a serious question for you.\"\n\n\"Okay, but more wine first, then you can ask!\"\n\nSitting at the table, Michelle and Babette raised their wine glasses to each other. \"To your new place!\" Michelle excitedly said.\n\n\"To your new place too!\" Babette replied.\n\n\"So, onto my question,\" Michelle said before taking a long sip of wine, \"what do you think about a boob job?\"\n\n\"For me or you?\" Babette chuckled in response.\n\n\"For me silly!\"\n\n\"Good, because I've already started the process,\" Babette winked before continuing, \"and if you were against it I was going to tell you that you were too late!\"\n\n\"What!?! And you didn't tell me!\" Michelle tried to be mad but couldn't bring her eyes from Babette's chest.\n\n\"It starts with saline injections to stretch the skin out slowly,\" Babette cupped her A cup left breast with her hand, \"when it's stretched enough they can do a full on augmentation and keep increasing the size until you're where you want to be.\"\n\n\"What size do you want to be?\" Michelle asked only able to look up briefly.\n\n\"I'm going for a C,\" Babette replied enjoying the attention her pert breasts were getting, \"all my lingerie is a C after all and I'd hate to have to replace it all!\"\n\n\"Sounds like a plan to me,\" Michelle replied, \"when did you start?\"\n\nTalking about breast augmentation all through dinner, Michelle decided she would bring it up to Ms. Allison in the morning. It would open a whole new realm of wardrobe that she could wear outside and not worry about her false breasts showing, plus, the feel of them would be incredible. She was suddenly very excited about her own breasts, maybe a large C though. Michelle's cage tightened as she thought of the tops of her breasts slightly spilling out of her bras. \n\nAs the time approached for Michelle to go home, she felt reluctance. She truly enjoyed her time with Babette outside of the office. She always felt she could talk more openly with Babette in a private setting and without fear that Ms. Allison may overhear what was being said. Or worse yet, conversation would abruptly and awkwardly stop by Ms. Allison entering the office.\n\n\"Will I see you in the office tomorrow?\" Michelle asked hoping for a yes response.\n\n\"I'll be in a bit later in the morning,\" Babette said as she took Michelle's hand, leading her to the door, \"but I'll be there eventually, I have an appointment tomorrow in the building.\"\n\n\"Oh?\"\n\n\"On the same floor as our Primary Care is a Plastic Surgeon,\" Babette wiggled her chest playfully before continuing, \"time to get these just a bit bigger!\"\n\nBoth of them reached for the doorknob at the same time. A rather clumsy exchange followed of who would open the door before their eyes met. They felt drawn together, their lips becoming magnets quickly attracting each other without effort from an external force. Michelle dropped her bag, her hand finding Babette's hip, while Babette's fingers lightly touched Michelle's face. Plunging forward, mouths slightly agape, their lips and tongues met.\n\nThe kiss was without reservation or hesitancy. Their tongues crashed into each other in a protracted dance as Michelle pulled her friend closer, for once being the aggressor in their relationship. Michelle's hand found it's way under Babette's robe, her nails digging into her friend's ass while the other hand discovered Babette's small breast. Babette's hand disappeared into Michelle's long hair, her other arm pinned against Michelle's body which pushed into hers. A soft moan escaped both of their mouths before they slowly stopped. Michelle's eyes were wide as she stared into Babette's, a mixture of fear and embarrassment rushed across her face. \n\n\"I have to go.\" She blurted, almost forgetting to pick up her bag as she stumbled through the apartment door.\n\n\"See you tomorrow?\" Babette called out, wondering what had just happened between them and then to Michelle.\n\nNo answer from her friend who decided not to wait for the elevator and burst through the door to the stairs. Michelle descended the steps as quickly as her wedge heels could carry her, almost falling several times before finally reaching the street level. Before entering the lobby, Michelle leaned against the wall, trying desperately to compose herself. Pulling a compact out of her purse, Michelle cleaned up her slightly smeared lipstick, before brushing her hands down her dress.\n\n\"Oh what the hell do you know?\" She hissed at her caged manhood which was straining to emerge. \"The song doesn't go, I kissed a dude and got horny!\"\n\nStepping into the foyer, Michelle attempted to remain calm, asking the doorman politely to hail her a cab while her mind raced. She'd kissed, really kissed Babette. It hadn't been Babette who'd initiated it either. It had been all Michelle. She didn't know what had come over her or why, but she couldn't help herself. Her lips were just so inviting. \n\n\"Are you okay Ms.?\" The doorman asked.\n\n\"Oh, yes,\" flushed Michelle, now outwardly uncomfortable from her raging, caged manhood, \"I just feel a bit warm. Thank you for asking.\"\n\n\"Your cab is here.\" He said as he opened the door for her.\n\n\"Thank you ever so much.\" Michelle replied sliding into the cab.\n\nThe ride home was torturous. He mind still racing a million miles an hour. She'd only ever known or seen Babette as Babette. To her, Babette had always been a girl. Well, outside of the first day when Babette was ordered to flash her caged manhood. Regardless of how she looked, smelled, felt, or even tasted, Michelle blushed at the last part, Babette was still a boy as was Michelle. Regardless of all of that, Michelle's cock didn't seem to care, and was either going to break the cage or break itself trying. The latter was more plausible given the cage's construction. Michelle forced herself to think of something different. It was a struggle, but she eventually managed to regain a shred of control over her body. That is, until she thought about the kiss. \n\n\"What's a girl to do?\" She muttered to herself. \"Excuse me sir,\" she said leaning forward, feeling the awkward pressure between her legs, \"can you drop me around the corner from that address?\"\n\n\"Anything you want Ms.!\"\n\nA few minutes later the cab pulled up, double parking on a busy street, giving Michelle little chance to change her mind.\n\n\"Here you go,\" she said thrusting money at the driver, \"keep the change!\"\n\n\"Thanks!\" The driver exclaimed at the rather hefty tip.\n\nMichelle took a deep breath, before stepping onto the curb near the entrance to the rather dank looking store. Taking another breath, she pressed forward, walking through the drab door and into the store. Pausing as her eyes adjusted, she quickly felt completely out of place, fighting the urge to run. There were five men in the store, not counting the clerk, or the guy who'd just walked out of one of the small video booths while zipping up his fly. Michelle had been past the store a ton of times but never had the extra cash for something so frivolous. Now, before her were rows of dirty magazines covering every kind of fetish and kink imaginable. ",
        "\"This is probably not the floor to walk in open toe shoes on.\" She said to herself before mustering every bit of confidence she could and heading to the counter. \n\n\"Um, can I help you Ms.?\" The rather young looking clerk asked.\n\n\"Yes!\" Michelle blurted, her eyes darting then suddenly spying exactly what she wanted. \"I need two of those!\"\n\n\"Uh, wow, okay.\"\n\nDigging into her purse, Michelle hissed at herself again. She'd given the driver most of the cash she had on. Then the light bulb struck, Ms. Allison had given her a work credit card for \"essentials\". Well, this was an essential today and Michelle was sure her new Boss would have no problem with what she was buying. \n\n\"Here you are!\" Michelle said handing the kid the credit card.\n\n\"Uh, do you have ID?\"\n\nMichelle's confidence quickly fell apart, her ID hadn't been updated, it still showed the pasty faced and very boy looking Michael. The positive to this unfortunate turn of events, her raging appendage had now settle down, almost to the point she was concerned it was retracting into her body.\n\n\"I forgot my license.\" She said steeling her nerves, then looking straight into the kids eyes and leaning forward. \"I'm sure the card will be fine just by itself though,\" Michelle thrust her chest out a bit before biting her bottom lip playfully, \"or do you want to make me wait to use those?\"\n\n\"I guess it'll be okay.\" The kid replied anxiously.\n\nHe was obviously far used to dealing with guys in this store than, well, Michelle. She also had to admit, she'd enjoyed her flirting with him. Her confidence grew almost as quickly as the contents of her cage. Michelle quickly scribbled her name, she'd have to work on a prettier signature eventually, before taking her card and purchases back out onto the street. Her apartment was only a block and a half away, the anticipation was almost overwhelming. She told herself she had to take her time though, this was going to be her first, and she wanted it to be amazing. Heart racing, boy parts throbbing and mind darting from one thought to the next, Michelle made it to the safety of her apartment.\n\n\"First things first!\" She said scurrying to the kitchen to fill the sink with hot water and antibacterial soap. \"You two soak in there for a bit,\" she said to her new purchases, \"I need to put on something else!\"\n\nRemoving her sundress and tossing it on the bed, Michelle stepped out of her sandals, remaining in just her bra and panties for the time being. She selected a trio of matching red lingerie, red stockings with a black Cuban heel and black roses around the lace tops, and a pair of red spiked heels with black soles. Her fingers trembled as she dressed to the point clasping the garters proved almost impossible. \n\n\"Oh my, why didn't I think of that before!?!\" she exclaimed as she stepped into the towering heels. Opening her top dresser drawer, Michelle extracted a thin black leather collar with matching chrome leash and black handle. \"This is perfect!\" She said, sweeping her hair out of the way to clasp the collar behind her neck. \"Time to get my dates!\" Walking out of her bedroom, Michelle felt the undeniable rush of adrenaline as the air in the apartment moved over her body. \"Oh no, one more thing!\" She said digging into her end table drawer. \"I'm definitely going to need a panty liner tonight!\"\n\nMichelle pushed the backless red panties down, slipping a condom over the end of her cage, before pulling them back up. Her fingers smoothed over the snug red waist cincher, then moved up over her red open cup bra, as she walked to the kitchen. Drying off the two, 7-inch suction cup based dildos, Michelle walked back to her bedroom. In another instant of wild thought, Michelle grabbed her cell phone as well.\n\n\"Why the fuck not?\" She asked out loud.\n\nStanding in the pocket door frame to her bathroom, Michelle licked the base of one suction cup before sticking it to the door frame. It held reasonably well, hanging lewdly, ready for her to use. Retrieving the lube from her vanity, Michelle lovingly applied a generous amount to the other dildo, holding it in one hand while propping her cell phone against the base of the toilet in selfie mode. Holding the suction cup base, Michelle used her lubed fingers to prepare her ass. Taking a plug was one thing, now her thoughts were far more ravenous about how she was to be penetrated and she wanted to be ready. Taking a quick look at the angle of the phone, and making a slight adjustment, Michelle slowly got to her knees in the door frame.\n\n\"Deep breath,\" she calmly said to herself while moving the strapon into place, \"deep breaths in and out.\" While her voice was calm, her heart was pounding in her chest, her body jumped slightly as the tip touched her throbbing hole. \"Easy Michelle, nice and slow.\" She coaxed herself to remain calm as the tip penetrated her. \"Ohhhhhh!\" Her eyes rolling in her head as the well lubed phallus penetrated her rings. \"Mmmmph!\" She groaned, pausing a moment as the defined ridge slipped through the canal into her anus.\n\nPressing the base of the plug against the door frame, Michelle looked over at her phone. She did not see herself, the panties and position of her leg keeping her caged sex out of view. What she did see excited her, a wanton slut on her knees, her almost 6-inch heels giving more shape to her calf, and the silver chain hanging from her neck displaying her shameless submissiveness. Michelle backed further into the dildo, moaning faintly as it penetrated her further. Her quivering hand picked up the black handle of the lead from the floor, feeding the loop around the dildo hanging just above her head. It now looked like she was the obedient pet of the cock in front of her.\n\n\"Come to me Sir!\" She whimpered slipping still further onto the shaft then licking her lips. \"Please!\"\n\nSetting the dildo on the door frame lower, Michelle took it into her mouth as she started to ride the cock in her ass in earnest. Rocking back and forth between the two, Michelle gradually quickened her pace, feeling one shaft press further inside her as the other backed out to the tip. Michelle moaned deeply each time the shaft slithered into her ass, jumping slightly at the realization her body was now pressing against the door frame.\n\n\"Maybe I should have bought the next size up?\" Her breathy voice sounding as sexually charged as her body. Michelle bounced her ass against the door frame several times before turning back to the shaft still in her hand. \"Oh, don't think I forgot about you Sir!\"\n\nPlunging forward, Michelle's bottom lip and chin pressed against the realistic balls while her nose pressed against the door above the shaft. Her entire body rippled with excitement at the realization she'd taken two 7-inch cocks into both ends of her body all the way to the base. Slamming into the cock behind her, Michelle grunted, her eyes momentarily loosing the ability to focus.\n\n\"Ohhhhhhhhhh fuck me!!!!\" She squealed wantonly. \n\nPulling the door holding the dildo in her mouth forward, Michelle continued to drive her ass into the one behind her. The stretching of her ass with the plugs over the past week had made it easier to accept the dildo, now she could simply focus on the unexpectedly wonderful sensation of being fucked. Michelle's eyes fluttered as she used the door to pull the dildo even deeper into her mouth and throat.\n\n\"MMmPhhhhphhnmm!\" she screamed around her oral invader as her entire body rippled and quaked with pleasure.\n\nPanic set in. Impaled on two phalluses, Michelle's mind went blank on how to free herself. Thoughts of being discovered, or having to be rescued in such an embarrassing position flashed through her mind. Feeling light headed not only from sexual excitement but lack of oxygen, Michelle finally realized she could simply push her right hand to remove the dildo from her mouth. Michelle's upper body collapsed forward, her head resting on her left forearm, ass still high in the air yet no longer full, she tried to compose herself.\n\n\"I think I came.\" Michelle panted knowing of no other way to explain the rushing wave of sexual pleasure that had overcome her.\n\nWhile it seemed like minutes, Michelle had rested for less than one before slowly crawling to shut off her cell phone's video. Pulling herself up, as if climbing out of a pool, by her arms, Michelle decided kneeling was safer but rested on her bathroom vanity. With one free hand Michelle slipped her panties out of the way to reveal her condom covered cage.\n\n\"Holy shit,\" she exclaimed weakly, \"I did cum!\" Squeezing her thighs tightly, Michelle unconsciously gave her upper lip a lick while removing the condom from her body. \"I came a lot too!\" She said holding the condom up in front of her face. \"Slut!\" She giggled before pressing her index finger against the reservoir tip, turning he condom inside out as she pushed it into her mouth. \n\nHer body quivered slightly. Was it an aftershock like women get after an orgasm? Was it just the tittering of her sissy urges being reinforced by the taste of cum? Or was it simply the slutty act of finger fucking her mouth with a cum covered condom? Maybe it was all three, in any case, Michelle felt a level of contentment she didn't know existed previously. Slowly removing the cleaned condom from her mouth and tossing it into the small waste basket, Michelle tentatively stood, seeing her reflection in the mirror for the first time.\n\n\"Aren't you quite a sight!\" She quietly said to herself.\n\nHer hair was matted against her forehead, lipstick smeared slightly, and eyes red from watering because of the deep thrusts she'd enjoyed so much. In short, she looked like she'd been fucked, and fucked well. Adjusting her panties back into position, Michelle tossed the two strapons into the sink, turning on the hot water before slightly staggering into her bedroom. Trying to steady herself, Michelle fell onto her ass on her bed, yelping as she did.\n\n\"Ohhh, that's not comfortable,\" she said adjusting herself to take pressure off her sore hole, \"I guess I did a number on myself.\" Michelle giggled and blushed at the fact she'd rammed her body into the dildo hard enough to make her ass sore. \"I doubt Ms. Allison will be any gentler though.\" Her body shook with excitement again, the hair on her arms and neck standing on end.\n\nUndressing slowly, Michelle decided showering would be the easiest way to clean up. Her lingerie piled in a heap at the end of her bed, Michelle could barely manage much more than pulling on a short kimono before collapsing in her bed. Tomorrow she would have to clean up, but it could wait for now. She needed her energy tomorrow, she was going to ask Ms. Allison about getting breast augmentation, which was exciting enough, but she really wanted to feel what it would be like to have Ms. Allison on the other end of the strapon. Her dreams were filled with the image of her strapon wearing Boss taking her every way possible in her office.\n\n \n"
    ],
    "authorname": "Ms_Allison",
    "tags": [
        "men in heels",
        "men in lingerie",
        "femdom",
        "sissy slut",
        "butt plug",
        "forced fem",
        "forced feminization",
        "cross dresser",
        "cross dressing",
        "anal training"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-agency-ch-06-2"
}