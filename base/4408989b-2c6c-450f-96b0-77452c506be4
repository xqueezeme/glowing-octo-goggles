{
    "title": "Environmental Hazards Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 11 - Crash and Burn (continued)\n\n\"The weather was perfectly clear.\" said the man from the National Transportation Safety Board that was on the scene, as I looked over the debris field. \"There was no call for help, no radio transmissions declaring any problem.\"\n\n\"Two TCPD Officers on their way back from patrolling Point Hollow saw the plane coming down, almost over their heads.\" said FBI Special Agent Julius Jefferson, who had come over from the City. \"They said everything seemed fine, no sputtering of the engine, but the plane just turned nose-down and dived into the earth.\"\n\nThe soil here was low and usually wet and swampy as water collected and ran towards the River from underground springs that bubbled up from the aquifer deep beneath us. The plane had dived straight into the ground, and the soil had swallowed half of it. The rest of the plane, including the tail section, had gone forward with momentum, and pieces were strewn in a line towards the airport, which we could see to our east.\n\n\"Forbes & Sehgal company plane?\" I asked.\n\n\"Yes, Commander.\" said the NTSB man. \"The pilot was named Stewart Payne. He'd piloted this plane for ten years, had 20 years flying experience before that. The plane's maintenance record is spotless; it just had an overhaul three months ago, and flew several times since with no issues reported.\"\n\n\"Where did it fly in from?\" I asked.\n\n\"According to the filed flight plan, sir,\" said Julius Jefferson, \"it came from Acropolis City, capitol of the State to our east, and the destination was listed as here, County Airport. But the timing is off; it should've been here an hour earlier than it arrived.\"\n\nI nodded. \"You might check with airports in a triangle between northern Midtown, Westphalia, and here. I'll bet Mr. Steinhart was not aboard when the plane left Acropolis City, and it picked him up somewhere not listed on the flight plan.\" Jefferson made notes.\n\n\"So the FBI has you investigating plane crashes, Julius?\" I asked him quietly.\n\nJefferson grinned. \"I happened to be in the area, at the Federal Building.\"\n\n\"Care to tell me what you're normally working on with the FBI?\" I asked.\n\nJefferson grinned again. \"Same thing I'm always working on, sir: Superior Bloodlines, White Roots. I'm not as well known as Mr. Muscone's team around here, so I've been at the FBI Building going over financial data.\"\n\n\"And maybe relaxing in a few clubs?\" I said. \"Particularly those in the Tenderloin District?\"\n\n\"Not much gets by you, Commander.\" said Jefferson. \"Let me ask you, sir: is this plane crash and the environmental lab stuff and that murder in Midtown connected to the white supremacy people in any way?\"\n\n\"Around the edges, maybe.\" I said. \"But this one keeps coming up Organized Crime.\"\n\n* * * * * * * * * * * * * * * *\n\nI drove Cindy and myself home and parked the Black Beauty in the far side garage of the Cabin. And when we went inside, I heard a wonderful sound:\n\n\"Daddy!\"\n\nA three year old future Wildcat rushed me and hugged my legs. I picked Carole up and gave her a kiss on the cheek. \"Good morning, Carole! Have you taken good care of Mommy and your brothers for me?\"\n\n\"Yes, Daddy.\" said Carole. \"And Bow-ser and Bud-dy, too!\" Just then Callie and Laura came out of the kitchen.\n\n\"Someone has been helping us make pancakes, too.\" said Callie with her beautiful grin. She and Cindy hugged warmly. \"How are you doing, baby?\" Callie asked.\n\n\"Tired.\" said Cindy. \"Food and some snuggling and sleep sound good right now.\"\n\nLaura took Carole and gave me a hug and kiss. \"I'll bet you're tired, too.\" she said.\n\n\"No, I dozed while Cindy drove.\" I said. \"That's the only way to not have a heart attack at the speeds she drives.\"\n\nJust then I was rushed by three boys: Jim, Ross, and Ian. We had a good session of 'dogpile Daddy', with Bowser and Buddy coming up to help...\n\n* * * * * * * * * * * * * * * *\n\nAt 9:00am, I was awakened from a nap by Molly, who handed me her cellphone. \"Midtown PD. They couldn't get you on your phone.\"\n\n\"I'll bet the battery died.\" I said. I took Molly's phone.\n\n\"This is Detective Kimberly Wesson, sir.\" said the voice at the other end. \"Keith Rollins came into our Precinct this morning. He said someone tried to kill him last night...\"\n\nPart 12 - Echo Chamber\n\nI was dozing in the shotgun seat of my Police SUV. Detective Theo Washington was driving. He had been on call, and I asked if he would like the chance to drive the Police Commander's SUV. He took the opportunity. My cellphone was charging as we drove; it had indeed died because I'd forgotten to charge it before.\n\nI woke up as we got near Midtown. \"Okay, Theo,\" I said, \"you are officially deputized into the SBI Reserve for today. We'll talk later about that possibly becoming permanent.\" I then gave him all the details of the case to this point.\n\n* * * * * * * * * * * * * * * *\n\nInstead of going to the Precinct, we first went to Rollins's apartment. There were a lot of magazines strewn about. Also present were Detective Steve Ruger and a couple of Uniformed Officers.\n\n\"The Crime Lab has been here and gone.\" said Ruger. \"Back bedroom window shot out; we haven't found that bullet yet. A second bullet was fired into the window and struck the chest of drawers. They dug it out. It's either a .38 Special or 9mmP; we didn't have calipers to measure it here.\"\n\n\"Mmmm,\" I growled. \"That's not good. Crime Lab should always have calipers as part of their equipment.\"\n\n\"Yes sir.\" said Ruger. \"We're working on things like that. Anyway, Rollins said the attack happened about 5:00am. He got down on the floor and called the Police. We got there quickly, and he asked to be brought in to our Precinct. He says he wants to confess, but he wants a lawyer first, so he called one.\"\n\nI looked around the apartment, then went out back. There were no footprints near the back window, which had been marked off with tape to prevent anyone from marring that area. Good thinking, I thought to myself. Further back was a creek that separated Rollins's apartment complex from another one on the other side. That was interesting, I thought to myself. \n\n\"Maybe someone shot at Rollins from a back window of one of those apartments.\" I said. Theo peered at the apartments.\n\n\"We're checking that out, sir.\" said Ruger. \"We're going door-to-door to see if anyone heard or saw anything.\"\n\n\"What do you make of this, Theo?\" I asked.\n\n\"After shooting Jimmy Shell by breaking into his place,\" Theo said, \"I'm surprised they'd try to kill Mr. Rollins with a shot through the window. So maybe it's not the same killers.\"\n\n\"That's a thought.\" I said. I kept my mouth shut, but I was a bit displeased with Theo's failure to fully observe this crime scene...\n\n* * * * * * * * * * * * * * * *\n\nAt the Precinct, Rollins's attorney had arrived. He was Mr. Dennison, who was our County Employee's Union attorney.\n\n\"Mr. Dennison,\" I said when he came in, \"I was not expecting to see you down here.\"\n\n\"Nor I you, Commander.\" he said, shaking my hand. \"I've taken on work for the State Employee's Union, and got a call this morning.\"\n\n\"Okay, why don't you talk to Mr. Rollins, while I talk to these Detectives.\" I said. Mr. Dennison was taken to talk to Keith Rollins.\n\n\"He's scared to death.\" said Kimberly Wesson. \"I think he wants to tell what he knows, in exchange for immunity from anything he might've done, including lying to us earlier.\"\n\n\"I think we can give him that.\" I said. \"But we're going to play him first, not make it easy for him.\"\n\n* * * * * * * * * * * * * * * *\n\nWe went into the interrogation room. A very frightened Keith Rollins was sitting at the table, sweating, his wide eyes seemingly even wider.\n\nEntering the room with me was State Attorney Jenna Stiles, who I'd called and asked to come down. Though Jimmy Shell had been murdered in the Midtown region of the State, Forbes Environmental National Laboratories was in the City's region, so getting a 'neutral party' State Attorney was perfectly legitimate.\n\nAfter introducing Jenna to Mr. Dennison, we sat down. Mr. Dennison started the conversation: \"My client has information that will be valuable in the case of the murder of James Shell. However, due to past conversations with you, as well as other factors, we must have an immunity deal in exchange for his truthful answers and future truthful testimony.\n\n\"We need to know just what that information is.\" I said. \"Accessory to murder is a hard charge to dismiss in an immunity deal.\"\n\n\"Accessory to murder? Really?\" asked Mr. Dennison, and I didn't know if he was play-acting or was genuinely surprised. Either way, he's a good attorney, I thought to myself.\n\n\"Here's what we know.\" I said. \"Despite his earlier claims to the contrary, Mr. Rollins was contacted by James Shell. Mr. Rollins then made his own phone call to Forbes Environmental National Laboratories. Mr. Shell was murdered a short time later. We have solid evidence from other sources that Shell had proof of contamination at the Pine Valley project, and the amount of money invested in that project is staggering. It's definitely motive for murder, and if the killer or killers were alerted by Mr. Rollins's phone call, then he's implicated in that murder.\"\n\nRollins was about to speak, but Dennison stopped him. Rollins whispered something, then Dennison spoke: \"Even if what you say is true, you can't say my client is guilty of any part of that murder. He can't predict what others are going to do.\"\n\nJenna Stiles said: \"But if your client was paid to inform that company of any issues at all, that becomes bribery of a State Official. And then we have first degree murder in the commission of a felony. Commander Troy is being generous in discussion 'accessory' or 'conspiracy' charges. Me, I'll go for first degree murder and the Death Penalty if we find you were paid to rat out any whistleblowers, Mr. Rollins.\" Rollins could not have looked any more scared if he'd tried to.\n\n\"I need to talk to my client.\" said Mr. Dennison. \"But before I do... what are you prepared to offer in exchange for what he knows?\"\n\n\"A suspended sentence.\" I said. \"Essentially parole and no jail time, if your client truthfully answers all questions and truthfully testifies in Court. As part of that, he'll have to agree to resign from the State EPA, and to never again work in a Government job at any level, be it local, State or Federal. You need to understand that you would be pleading guilty to some charges, and that the judge could possibly reject the deal.\"\n\nJenna nodded her agreement with those terms. She and I left the room so that Mr. Dennison could save his client from absolute disaster.\n\n* * * * * * * * * * * * * * * *\n\nFifteen minutes later, we were called back in. Mr. Dennison said \"My client agrees to your terms.\" Jenna and Rollins signed an agreement of the plea deal in writing.\n\n\"Okay,\" I said, \"Mr. Rollins, were you contacted by James Shell, and when?\"\n\n\"Yes.\" said Rollins. \"Last Wednesday.\"\n\n\"What did Mr. Shell say to you?\"\n\n\"He told me that he had proof that the Pine Valley project was badly contaminated with organic and metal poisons, and that Forbes Environmental National Laboratories was running fake samples to cover it up.\" said Rollins.\n\n\"What did you say to him?\"\n\n\"I told him that I could meet with him this weekend, and would call back to arrange a time and place.\" said Rollins.\n\n\"What did you do then?\" I asked. \"No, let's just cut to the chase here: who at FENL did you call?\"\n\n\"I called Mr. Brandon as soon as I hung up the phone with Shell.\"\n\n\"Were you paid by Mr. Brandon to report to him if anything like this happened?\"\n\n\"I was paid in cash in a brown bag in a locker at the Midtown bus station.\" said Rollins. \"I can't tell you that it was Brandon that put it there, but the amounts were exactly what he promised me when we had dinner one night a few months ago. I have a MFR of that dinner.\" A 'MFR' was a memorandum-for-the-record, which was someone's written account of an event. These sometimes were good enough for Court cases.\n\n\"Good, we'll need that.\" I said. \"So you gave Mr. Brandon the information that Shell had contacted you?\"\n\n\"Yes sir.\"\n\n\"Did Shell say he gave the information to anyone else?\" I asked.\n\n\"He said his lawyer had the information.\" said Shell. \"He didn't say who the lawyer was, but said he'd bring him to our meeting over the weekend.\"\n\n\"Him?\" I asked.\n\n\"Yeah, but...\" said Rollins, then stopped. \"You know, he never said specifically 'he' or 'she'... just said 'my lawyer'.\"\n\n\"Good enough.\" I said. \"Mr. Rollins, were you ever contacted by anyone else regarding contamination at the Pine Valley project site?\"\n\n\"No.\" said Rollins.\n\n\"What about the Bexall Chemicals site?\" I asked.\n\n\"That was all hush-hush.\" said Rollins. \"It was common knowledge that it was one of the Bexall sites, but we all pretended that didn't exist. That's the kind of thing that the politicians don't want to hear about, especially U.S. Senator Russell. But to your specific question, that site was never brought up in the Pine Valley project meetings we had with the developers.\"\n\n* * * * * * * * * * * * * * * *\n\n\"We've got enough to go to a Federal judge.\" I said in the meeting with Jenna, Chief Soltis, Theo Washington, and myself.\n\n\"Why Federal?\" asked Jenna.\n\n\"RICO.\" I said. \"I'm going for Federal as well as State charges on this one. There's plenty of corruption to go around, and maybe we can take some Organized Crime people down. Additionally, the finances can and probably do cross State lines, and we may get to go after all of the FENL facilities in the country. But we'll go for State charges, too... including murder.\"\n\n* * * * * * * * * * * * * * * *\n\n2:00pm, Saturday, March 25th. I had my case to this point well laid-out and tied up with a bow. The Federal judge did not take long to issue several warrants. I called Tanya Perlman and told her to get her Crime Lab ready for a massive influx of samples.\n\nAt 3:00pm I arrived at the Pine Valley site armed with a red crowbar, a Beretta 96 .40 S&W pistol, a warrant, a large team of State Crime Lab techs to take samples, and a massive contingent of State Patrol Troopers, FBI Agents, and even some U.S. Secret Service Agents, all wearing armor and very heavily armed. It was sheer pleasure to see the look on the site foreman's face when I handed him the warrant.\n\nAt 4:00pm, give or take, lawyers for M&C Project Development Corp. showed up, but saw quickly that they had no chance to stop what was happening. I did notice they were demanding the names of the sample-takers. I told them that they'd have to wait until the discovery phase of the trial to get that information. The lawyers asked which State Crime Lab would be doing the tests. I said they'd have to wait until the discovery phase of the trial to get that information. I then asked for their names, just in case my people were intimidated or threatened in the future. The lawyers said I'd have to wait until the discovery phase of the trial to get that information. But they shut up and stopped asking for names.\n\nAs I oversaw the sample collections in progress, I got a phone call from Chief Griswold. \"Just a heads-up, Crowbar.\" said the Chief. \"Governor Jared has been called by U.S. Senator Samuel Russell, who is upset about what you are doing at the Pine Valley Project. The Governor is not one to back down to the Senator, and he pushed back. But be prepared for flak coming your way.\"\n\n\"Thanks, Chief.\" I said. \"It's a great day to take flak in the Klingon Empire.\" The Chief laughed heartily at that before we said our goodbyes and disconnected.\n\n* * * * * * * * * * * * * * * *\n\nIt was late that night before all the sampling was finished. The vans taking the samples back to my County's State Crime Lab were guarded by a convoy of State Troopers, who had been sent at the express orders of the Governor of the State, Val Jared. I wondered why he was growing a spine about this, but did not look the gift horse in the mouth.\n\nLt. Tanya Perlman personally made sure the samples were stored properly and secured, and State Patrolmen were stationed to guard the building and its contents. I took Theo back to his car, then drove home, exhausted. But I had one more duty to do before finally going to bed, and I had a long talk with Laura over a late supper...\n\nPart 13 - Testing, Testing\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Monday, March 27th, from in front of the State Office Building. \"Channel Two News has learned that the State Legislature has again worked out a compromise budget bill that is acceptable to the Governor!\"\n\n\"Sources tell Channel Two News that the one sticking point of the budget, additional money to arrest and turn over undocumented foreigners to the Federal authorities for deportation, was worked around by compromise language.\" said Bettina. \"Over the objections of the Democrat 'Wall of Granite' group led by State Senator Katherine Woodburn, money was put into the budget for 'unspecified' law enforcement activities at the State level, with the Governor have strong discretionary power on where to allocate those funds. Though he can only use the money within existing agencies, critics fear that the Governor will earmark this money to sponsor Police assaults upon undocumented immigrants!\"\n\n\"And in other State news,\" said Bettina, \"Channel Two News has learned that Paul Brandon, manager of Forbes Environmental National Laboratories, was arrested over the weekend as a suspect in the murder of FENL employee James Shell near Midtown last week. Additionally, State and Federal warrants were issued to conduct new soil and water tests on the project known as 'Pine Valley', as evidence has been obtained that results may have been altered to mask possible contamination on the site.\"\n\nBettina went on: \"The investigation into the Pine Valley project and the murder of Mr. Shell is in the hands of SBI Reserve Inspector Donald Troy, who is also our TCPD's Police Commander here. Commander Troy issued a statement Saturday that the State Crime Lab would test the samples, and that further investigations will follow based upon the results of the testing.\"\n\n* * * * * * * * * * * * * * * *\n\n\"The Black Beauty is re-armed and ready to go.\" Cindy reported at the coffee klatch. \"My father and his mechanics were trying hard not to be happy like children on Christmas morning at the success of our mission the other night.\"\n\nI grinned. \"It really did perform admirably. Thank goodness I had a capable driver, too, Ms. Kato.\"\n\n\"Thank goodness you can shoot straight.\" replied Cindy. \"So... should I be miffed that you left me behind to do car maintenance while you were having fun serving warrants in Midtown?\"\n\n\"No, you shouldn't be miffed.\" I said. \"I hope you got some sleep and some good food... and a good couple of days with Callie.\"\n\n\"That I did.\" Cindy replied, trying to look innocent, and failing badly but happily.\n\n* * * * * * * * * * * * * * * *\n\n\"This is Priya Ajmani, Five-Alive News In the Morning!\" shouted the beautiful Indian reporterette at 8:00am, Monday, March 27th, from in front of the State Crime Lab building just north of the University campus. \"We have breaking news about the 'Pine Valley' case! Let's go to trusted reporter John Hardwood for the details! John!\"",
        "\"Yes, Priya,\" said Hardwood, who was also in front of the State Crime Lab building. \"Five-Alive News has learned that the technicians of all of the State's Crime Labs have received threats in their homes yesterday or their places of work today! The notes say the same thing, and I will read this one to you. It says: 'If you run any samples or testify in Court about them, you and your entire family will be killed.'. The SBI and FBI are investigating the threats, and it is believed that elements of Organized Crime, possibly tied financially to the Pine Valley project, are behind the threats. As of right now, it's too dangerous for these technicians to risk their lives running those samples, much less having to testify in Court about the results...\"\n\n* * * * * * * * * * * * * * * *\n\n\"The prep guys worked overtime Saturday night and all through yesterday,\" said Tanya Perlman as we sat in her office, \"and got all the preps done. But now we have the situation of the threats. Whoever runs the samples could be called to testify, and they and their families are under direct threat now. Most of these guys are kids right out of college; I can't have them having this burden upon them.\"\n\n\"Man, that's brutal.\" said Jack Muscone. \"And you know, we haven't even gotten near any Organized Crime yet.\"\n\n\"We will,\" I said, \"if those tests show up positive for contaminants. Pine Valley will be all but dead as a project, and untold millions will be flushed down the drain like those Bexall chemicals. And there are probably politicians and money people involved in this... maybe even Superior Bloodlines was involved, hoping for some cash inflows.\"\n\n\"Well,\" Tanya said \"I'll be glad to witness and supervise, but I cannot run the tests. Slight mobility issues.\"\n\n\"Then you can watch me run them, then testify in Court about them.\" I said.\n\n\"Don, are you sure?\" Muscone said. \"I'm not worried about you, but your family.\"\n\n\"My family has been under threat since the day I married Laura and we had Carole.\" I said. \"Both Laura and I have always been targets and we're aware of the situation. I anticipated this, and I talked to her Saturday night about it. She knows the Game, and we're going to play.\"\n\n* * * * * * * * * * * * * * * *\n\nJack Muscone took a cellphone call as he, Tanya, J.R. Barnes, and Norm Chow witnessed me running the wet lab samples. J.R. Barnes was certified and had volunteered for the hazardous duty of being witness, data checker, and backup if needed.\n\nI'd set up the atomic absorption spectrometers to run the metals tests, including the Eight RCRA metals, and started it up. The blanks and standards ran well, and as the samples ran I turned my attention to more labor-intensive work. Muscone was getting updates and relaying them to me.\n\n\"Paul Brandon is out on bail, with ankle monitoring. He's being defended by Forbes & Sehgal lawyers.\" Jack said. \"They've really dug in over this. Brandon's lawyer is claiming that the papers we took earlier can't be used against him, as it would violate his Fourth Amendment rights. The Company is claiming the same for themselves.\"\n\n\"He doesn't have a shot in hell with that.\" I said as the sample I was titrating began going from clear to purple. The test was for iodide, but the chloride test was being run as a discriminator. Since it was positive, I would have to run a further, iodide-specific test.\n\n\"But does the company?\" asked Tanya.\n\n\"Everything was taken under a warrant.\" I said. \"And the warrants were fairly open-ended, as we were searching for a motive for Shell's death. I cannot conceive of that attempt at defense working.\"\n\n\"Sir,\" said J.R. Barnes, \"what happens if these results are positive? Isn't it just their word against ours?\"\n\n\"We'd have to have more samples taken, then those sent to another lab for testing.\" I said. \"And I can't run the next set myself.\"\n\n\"The FBI could run them, if you ask.\" said Muscone.\n\n\"As long as Les Craig is not in charge of the FBI lab.\" I said. Jack understood my broader meaning: the FBI was internally split. \"We'd have to have some serious controls and witnessing of the tests. Forbes & Sehgal lawyers should want that, also.\"\n\n\"The standard procedure,\" said Tanya, \"is to get a disinterested, third-party lab to run the third set of tests. Whoever they agree with will be considered correct. They'll have to run their tests in a legally defensible way.\"\n\n\"Will their testers be subject to being targeted by the Mob?\" I asked. The looks I got back said volumes more than any words could.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay,\" I said as I put a collection of capped bottles in the incubator, \"the Biochemical Oxygen Demand test has been started. It has to be read again in five days, so I'll be back Saturday.\"\n\n\"Why five days?\" asked Jack Muscone.\n\n\"The test measures how much oxygen is taken out of water by chemical pollutants.\" I said. \"They guy who invented the test was French, and five days is the amount of time the water in the River Seine flows from Paris to the ocean.\"\n\n\"Figures you would know that.\" said Tanya with a teasing grin.\n\n\"Okay, let's go see if the AAs have run the RCRA-8 metals.\" I said. The RCRA-8 metals are: Arsenic (As), Barium (Ba), Cadmium (Cd), Chromium (Cr), Lead (Pb), Mercury (Hg), Selenium (Se), and Silver (Ag). \n\nWe went over to the metals lab area. I read the results. I emitted a low whistle. \"Ho-leee shit.\" I said. \"We ran duplicate preparations, and they both come up the same. Pine Valley is off-the-charts contaminated.\"\n\n\"I need to call my boss.\" said Jack, after looking at the results I showed him.\n\n\"I need to call the Governor and SBI Director Conlan.\" I replied. \"This one is going to be 'big'. In the meantime, we've still got a lot of tests left...\" It would be an 'all nighter'.\n\nPart 14 - Courage v. Fearlessness\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF at 7:00am, Tuesday, March 28th, from in front of the Federal Building. \"Channel Two News has learned that a Federal judge has shut down the Pine Valley development project near Midtown, after preliminary tests run at the State Crime Lab here in our County showed dangerously toxic levels of poisonous metals, including arsenic, silver, and lead, in the ground and water of the development site!\"\n\n\"Channel Two News has also learned that in spite of death threats, TCPD Commander Donald Troy, twice Medal of Valor recipient and a former chemist who is certified to run samples in the State Crime Lab, personally ran the samples taken at the Pine Valley site, and is prepared to testify in any Court case that arises from the results.\"\n\n\"The SBI and FBI are now investigating Forbes & Sehgal Engineering and their wholly-owned subsidiary Forbes Environmental National Laboratories, for possible fraud in giving false test results to the developers of the Pine Valley project, M&C Project Development Corp. \n\nBettina went on: \"A spokesman for the Proactive Citizens of Greenworld, George Glass, issued a statement saying, and I quote: 'The destruction and contamination of our land is bad enough, but this development on top of land and water that could kill and severely harm children shows that Corporations, Big Banks, and even Environmental Engineering firms value the almighty Dollar over the safety of our children!'.\"\n\nMore Bettina: \"Democrats in the State Legislature blasted the Governor on Twitter, saying that this shows a need for a much stronger, more well-funded State EPA. Governor Jared fired back at the Democrats, saying one State EPA Official took bribes to keep silent about the false results, and that official also informed Forbes & Sehgal of a whistleblower who reported the contamination.\"\n\nYet more Bettina: \"That whistleblower, James Shell, was a Forbes Environmental National Laboratories employee, whose murder was the starting point of the investigation that has led to the exposure of a major scandal and an environmental disaster. Governor Jared and SBI Director Tom Conlan praised Commander Donald Troy for his leadership in investigating these crimes.\"\n\n* * * * * * * * * * * * * * * *\n\n\"I really, really wish,\" said Cindy as we sipped coffee in MCD, \"that Bettina would not have blared it out out the world that you ran those tests, Commander. She might as well have phoned the Mob and told them.\"\n\n\"Doesn't matter.\" I said. \"They're going to know, one way or the other. It's probably better that everyone else knows, too.\"\n\n\"Still,\" said Teddy Parker, \"that took courage, Commander. The Mob don't play.\"\n\n\"Neither do I.\" I said. \"Okay, I've got a ton of work to catch up on. Angels, meeting at 8:15.\" With that, I left the room for my office.\"\n\n\"He'll never let us take a risk he can take on himself.\" Cindy said in the silence of the room.\n\n\"This is semantics,\" said Teresa Croyle, \"but that's not courage.\" The room fell silent.\n\n\"What is it, then, ma'am?\" asked Joanne Warner.\n\n\"I'll answer with a question: what is the definition of courage?\" Teresa asked.\n\n\"Uh... acting in spite of fear?\" said Joanne.\n\n\"Sound about right.\" said Teresa. \"Now... have you ever known the Iron Crowbar to show fear?\" After a pause, she continued: \"There's courage, and then there's fearlessness. Commander Troy is fearless... and we're going to have to protect him from himself in these times he gets fearless.\"\n\n\"Won't be the first time, either.\" said Cindy Ross, who'd earned a Medal of Valor and nearly lost her life doing just that. She did not mention Teresa's own fearlessness and need to be 'protected'...\n\n* * * * * * * * * * * * * * * *\n\nThe Angels meeting was cancelled when the Mighty Miltons showed up in the door to my office, wanting to share information with me. I had them come in, with Cindy sitting on the sofa behind them in the hot chairs.\n\n\"Chief Moynahan asked us to look for Paul Brandon's phone records and go through his finances as a courtesy to the SBI and the Governor himself.\" said Mary. \"So we did.\"\n\n\"That's fine.\" I said. \"I just hope Captain Ross and I are hearing what you found first.\"\n\n\"Yes sir.\" said Myron, \"and as soon as this meeting is over, with your permission we'll send our data to State Attorney Stiles.\" \n\nI nodded. \"Okay, whaddya got?\"\n\n\"First, the call from Keith Rollins came to Brandon's direct office line by direct-dial instead of through the switchboard.\" said Mary. \"Keith would have had to have been given the actual full number, which is not public. There have been cases in Courts where something like this is enough to show intent. In this case, the intent was to receive information about any whistleblowers from the SEPA official. Beverly Carter called through the main number and was connected to the extension.\"\n\n\"And we now have Keith's confession that he called Brandon directly, so this will simply supplement that.\" I said.\n\n\"Yes sir. On to Brandon's finances.\" said Myron. \"This guy has some tangled webs he has woven over time. He has more money than a Lab Manager should, for sure. He did not inherit any money that we know of. He was Manager at a place called Dreschel Advanced Chemistries, which went bankrupt. He apparently made a loan to Robert Ferris, who is Chief Chemist at FENL, and has been getting monthly payments back on that. We have records of the large sum of money transferred to Ferris's account and the payments back. Brandon has been getting other regular payments, though, which are harder to trace, and he's written some checks to some strange entities, as well.\"\n\n\"Last, but not least,\" said Myron, \"he's gotten some enormous bonuses from Forbes & Sehgal, the parent company. Three times as much as anyone else in his relative position in the company, and almost as much as Forbes himself... and Forbes is a full partner, of course.\"\n\n\"Yep, lots of stuff to keep looking into.\" I said. \"You have warrants? This is all clean and aboveboard?\"\n\n\"Yes sir.\" said Mary. \"Ms. Stiles got us a specific warrant for the finances of Brandon, Forbes, Sehgal, and the other top brass at Forbes & Sehgal Engineering.\"\n\n* * * * * * * * * * * * * * * *\n\nThe meeting convened in the SBI's Westphalia offices at 11:00am, Tuesday, March 28th. It was a big meeting for everyone to get their our collective ducks in a row. The U.S. Attorney that I remembered from the Black Badge case was there. He was a tall, slender black man named John Jones. Special Agent Martin Nash was the FBI representative.\n\nAlso present were State Attorneys Glenn Alberts and Jenna Stiles. Then came SBI Director Tom Conlan, me, Cindy, Midtown Police Chief Soltis, and City Detective Thomas 'Sapper' Warren.\n\n\"First of all,\" said SBI Director Conlan, \"I want to congratulate Inspector Troy and Captain Ross for the outstanding job they have done on this case.\" The room was filled with the sound of applause, which I acknowledged modestly with a couple of nods.\n\nConlan then said \"I have asked State Attorney Stiles to take the prosecutorial lead on this case for the State. We're not sure exactly which Superior Court will have jurisdiction, and the Feds are involved in a lot of it, including the plane flight from Acropolis City that crashed in the Iron Crowbar's home Town. So, Jenna, would you lay out what we have?\"\n\n\"Thank you, Director.\" Jenna said. She activated her computer, which was tied in to the projector on the ceiling and beamed onto the screen against the wall at the end of the room. \"We're putting together a chronological time line. It started with James Shell going to Jessie Quick with evidence that the Pine Valley project was badly contaminated. He then called Keith Rollins, who arranged for a weekend meeting but immediately called Paul Brandon and told him about the whistleblower call.\"\n\nJenna continued: \"Rollins said in his confession statement that Brandon told him to arrange the meeting, get the evidence from Shell and retain it, and that Brandon would take care of the rest. Rollins claims that before he could tell Shell that, Shell was murdered.\"\n\n\"After that, the Police came in, and they requested the help of SBI Inspector Troy, who I might call 'Commander' because that's the first name that I know him by.\" Jenna said, getting some tepid laughter. She went on: \"Among the massive amounts of data we seized, there are two lines of inquiry that have developed. First, that Pine Valley samples reported as showing the ground and water to be clean contradicts the findings of the State Crime Lab. The Federal Court has agreed to a third party lab contracted with the FBI to run those samples, and the Deputy Director of the FBI is personally over seeing that.\"\n\n\"Wow, heavy artillery.\" said State Attorney Glenn Alberts.\n\n\"Simply matching the heavy artillery the other side is using against us,\" I said, \"which includes a U.S. Senator.\" Alberts looked shocked, as did some of the others. Martin Nash looked like he wanted this conversation to move along.\n\n\"I can't speak to that, Commander,\" said Jenna Stiles, \"as I have no proof of a connection. But moving along, the second line of inquiry has to do with financials. SBI Agent Norm Chow and Commander Troy pointed out to us certain monies being siphoned out of labs, and also other departments, by charging the departments for salaries that are not actually being paid. This extra money seems to be added to a few people's bonuses, and may also be financing junkets to Hawaii and the Caribbean---\"\n\n\"And political contributions and other kickbacks to aforementioned politicians.\" I said. \"Proof to follow... eventually.\"\n\n\"I certainly hope we can find some proof of that.\" said Jenna drily. \"We're also digging hard into the financing of the Pine Valley project. I can't say much more about that right now. But what's important in the here and now is to get our ducks in a row for the preliminary hearings. Commander Troy, you'll be on the stand... and wearing a bulletproof vest, I hope.\"\n\n\"How about a Knights Templar suit of armor, made out of kevlar?\" I joked, which drew laughter.\n\n\"If it keeps you alive, go for it.\" Jenna replied.\n\nPart 15 - Drive To The Finish\n\n\"Do you swear to tell the truth, the whole truth, and nothing but the truth, so help you God?\" asked the Bailiff.\n\n\"I do.\" I said.\n\n\"You may be seated.\" said the Bailiff. I sat down in the witness chair of the Superior Court room of presiding Judge Rodney K. Watts. Not only State Crime Lab techs had been threatened; Judge Watts was a man who, like me, did not play.\n\nJenna Stiles first established my credentials for running the lab tests. The defense lawyer challenged the credentials.\n\n\"Your Honor,\" said Stiles, \"As the documents we've submitted show, Commander Troy has a ACS-Certified 'Bachelor of Science in Chemistry' degree, not just the regular Bachelor's degree. Furthermore, he was employed in a lab contracted to run evidence data with its requirements of legal defensibility. And his record as Police Commander, with two Medals of Valor and one Distinguished Service Award, is unmatched in this State.\"\n\n\"Not every day that I see a Police Officer this well-qualified to testify on lab evidence.\" said Judge Watts. \"These credentials are accepted.\"\n\nThen the Defense lawyer tried something unusual.\n\n\"Your Honor,\" he said, \"Commander Troy has been the lead investigator in this case. He cannot possibly be impartial about the tests that were run.\"\n\n\"Your Honor,\" said Jenna Stiles, \"that is ridiculous. First of all, the Commander's running of the tests were witnessed, and we are prepared to bring several persons, including the State Crime Lab Director, and an FBI Special Agent In Charge, to testify to the veracity of these test results. Furthermore, Your Honor, Commander Troy is under no obligation to be impartial, at all, provided the tests are run correctly and accurately.\"\n\n\"That is very true.\" said Watts.\n\n* * * * * * * * * * * * * * * *\n\nAs the hearing went on, one thing became obvious: the Defense lawyers were constantly trying to get the names of anyone and everyone associated with the investigation of the case. They asked for not only Detective Wesson and Ruger's names, but the names of every State Patrolman that worked with us to interdict the trucks, and every Uniformed Policeman that had any involvement with the case.\n\nBut most of all, they were ceaselessly asking who had prepped the samples I'd run. Finally, Judge Watts had had enough. \"Approach the bench.\" he said. Of course I listened in while sitting in the witness chair.\n\n\"Stop asking for all these names.\" said Watts. \"You have been provided with the pertinent information for this preliminary hearing, and will be provided with what you need for the trial... which I can already tell you is going to happen after my ruling on this hearing.\"\n\n\"My client has the Sixth Amendment right to face his accusers in Court, Your Honor.\" snarled the Defense counsel. \"I insist that my client's rights be protected and honored, and that those names be given to us immediately.\"\n\n\"Your Honor,\" said Jenna, \"they only want the names so they can intimidate the witnesses. The State Crime Lab techs were threatened, and now they---\"\n\n\"Prove it!\" yelled the defense lawyer. \"Prove that my client intimidated them, and that he wants to intimidate the others! I demand proof of that slanderous accusation!\"\n\n*BANG!* *BANG!* *BANG!* *BANG!* \n\nI thought for a second that Judge Watts might actually use that gavel on the defense attorney's head.\n\n\"I have had enough of this.\" said Watts. \"Your client has the right to face his accusers... in his full trial, not at this preliminary hearing nor at the Grand Jury hearing.\"\n\n\"Your Honor, I want a continuance of this hearing so that I may appeal that incorrect ruling.\"\n\n\"De-nied.\" Watts growled. \"Defense counsel, do you have questions for the witness on the stand?\"\n\n\"I sure do.\" said the lawyer. He turned to me as Jenna went back to her table. \"Commander Troy, were you threatened in any way for running those tests?\"",
        "\"Before I ran the tests, the State Crime Lab---\" I started.\n\n\"IT'S A YES-OR-NO QUESTION, COMMANDER! ANSWER IT!\" shouted the lawyer.\n\n\"Objection!\" shouted Jenna. \"Objection as to form!\"\n\n\"Sustained.\" said Watts. \"Either ask very specific questions, or I'll let Commander Troy answer in an open-ended way.\"\n\n\"Did you personally receive an explicit threat to yourself or your family if you ran those tests, Commander?\"\n\n\"Not personally and explicitly.\" I said.\n\n\"So you were under no duress when asked to run the tests?\"\n\n\"I was not asked to run them, I volunteered---\"\n\n\"JUST ANSWER THE QUESTION!\"\n\n\"Objection!\" yelled Jenna.\n\n\"SUSTAINED!\" yelled Watts. \"Stop the tricks, or I will hold you in contempt, Counselor!\"\n\nThe defense lawyer stared at the judge, then said \"No more question, Your Honor.\"\n\n\"Redirect.\" said Watts.\n\n\"Commander Troy,\" said Jenna, \"are you aware of threats made against State Crime Lab techs if they ran these samples?'\n\n\"Objection!\" yelled the defense lawyer. \"Calls for speculation!\"\n\n\"Overruled.\" said Watts. \"You may answer the question, Commander.\"\n\n\"Yes, I am aware of threats made against the State Crime Lab techs.\"\n\n\"Were you asked to run the tests, Commander?\"\n\n\"No, I volunteered to do so when I learned of the threats against the technicians.\"\n\n\"No more questions, Your Honor.\" \n\n\"Defense?\" said Watts.\n\n\"Just one question, Commander Troy.\" said the defense lawyer. \"Why did you volunteer if there were threats? You have a family, don't you?\"\n\nMy eyes bore right through the lawyer. \"I volunteered because I'm certified and able to run the tests, and while facing threats and danger is not a part of the lab techs' job description, it *IS* a part of mine... and I chose to bear the danger myself rather than let other less-trained persons have to face it.\"\n\nAll through this, Paul Brandon sat at the table, that annoying-as-hell perma-grin on his fat face. But when I said that, his grin seemed to become even wider, as if he thought he was going to get away with his crimes...\n\n* * * * * * * * * * * * * * * *\n\n\"Okay,\" said Paulina Patterson three hours later in my office, with Cindy also present. \"Judge Watts bound Brandon over for trial. Ankle monitored and under full house arrest, and in the custody of his attorney and the City Police. I would not have given him bail at all, as Brandon is a huge flight risk.\"\n\n\"That should be okay.\" I said. \"If Brandon runs, he's likely going to be assassinated himself. His options are to take any deal offered by the U.S. and State Attorneys and rat out his superiors, or to take the fall and enjoy Supermax for possibly the rest of his life.\"\n\n\"Think you can pin the murder on him?\" Cindy asked. \"We've got circumstantial evidence, but it's not really solid enough, is it?\"\n\n\"No, it's not.\" said Paulina. \"Based upon what we have so far, that is. But I'll volunteer to bring a hat for the Iron Crowbar to pull rabbits out of.\" I briefly smiled, then noticed that Cindy was introspective... in fact, I could feel as much as see that she was deep in a reverie.\n\nWhen she came out, she stood and said \"Commander, I would like permission to try something to get that proof.\" She explained what she wanted to do.\n\n\"Paulina?\" I asked.\n\n\"You have to be careful, Captain Ross.\" Paulina said. \"It's either fully on the record, with readings of rights and all that; or completely off the record and never happened... funny, I never thought I'd hear myself advising you of that... the Iron Crowbar's extracurricular tricks must be wearing off on me.\" I smiled a little wider that time.\n\n\"Brief me of your final decision,\" I told Cindy, \"but you have my permission to try it.\"\n\nPart 16 - Retaliatory Response\n\nLying prone in the grass of the hillside, he looked around. Below him, to his left, was the University Campus, the southside row of buildings on the Original Quad. Uphill, high above him and to his right (two o'clock position) was the Cabin that belonged to the Police Commander. He was facing north, and dead ahead of him, just under 300 feet, was the white-brick squarish structure called the Mountain Nest.\n\nThe back door opened and two dogs scurried out, going to a weed-infested area just down the hill from the house. Then a tall black-haired woman appeared. Then a three-year-old child darted out into the backyard. The man got settled into position and looked through his scope.\n\nThe woman was saying something to her child about going back inside, pointing at the door. The girl pointed to where the dogs had gone. The woman then sat down, looking around warily, but not spotting him in his hidden, camouflaged position. He concentrated on the picture in the scope.\n\nThe woman had the little girl sit down on the metal chair between her, the mother, and the house. But the girl would not stay seated. And as the dogs came back from doing their business, the girl stood up and said something to her mom, showing off something on her shirt.\n\nThe man did not care that she was a child; he was being paid to make the girl's father pay for defying the man's Bosses's threats and running those test samples in spite of their warnings.\n\nHe exhaled and held his breath as his finger went towards the trigger. The rifle on its tripod was steady. The crosshairs were solidly on the middle of the little girl's head... \n\nTo be continued.\n\nWill Carole live or die? \n\nAnd what is Cindy's plan to ensure Paul Brandon goes down for murder? (Fair warning: some of the clues may be in previous stories as well as this one...)"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/environmental-hazards-ch-03"
}