{
    "title": "Rose Ch. 50-52",
    "pages": [
        "Ten Days Later \n\nI woke up feeling hot, you know, down there. I looked at the bedside clock, it was almost six in the morning. First light wouldn't be for a while yet. \n\nI moved my hand down my body, pushing the covers from my skin until I ran into fur. Gunny was under the covers, his head laying over my thigh, his nose near my belly button. Again. The combination of his warm fur and hot breath had me sweating, but it wasn't his fault. His cat was becoming insanely protective of me as my pregnancy became more noticeable. For the last few days, this meant he shifted and placed his body over my baby bump to protect it from, I don't know, being poked or something. \n\nI moved his head up and scooted up the bed, freeing myself from his legs and paws that were on each side of my left leg. He opened his eyes as I swung my legs over the side and got up. \"Morning, baby,\" I said to him as he shifted back. I ran to the bathroom as the motion of getting up caused my stomach to do backflips. I barely made it to the toilet in time, retching whatever was in my stomach out. \n\nHe was at my side in no time, holding my hair back as I tossed my cookies. The morning sickness had begun a few days ago, and it was bad. I had started to develop issues with different foods, the most troubling being that I could not handle the smell of bacon. How could my body deprive me of THAT? It all seemed to be coming faster and harder than when I was pregnant with Charlotte. \n\nI sat back and let a breath out, taking the glass of water from Gunny with a quick smile. I rinsed the taste out, spitting it into the toilet, then flushed. He helped me up and I brushed my teeth before excusing him so I could go to the bathroom. Of course, he just stood on the other side of the door, listening for me to pass out or something. \n\nIt was all so different from my last pregnancy; I was no longer sixteen, I wasn't scared and alone. I had a mate and a daughter and HER mate, all of whom were falling over themselves to help me. I swear, Gunny would do anything for me if I asked. I opened the door when I was done, kissing him on the cheek before letting him take the bathroom. \n\nI laid down on top of the sheets as I listened to him in the shower. I imagined what was happening in there without me; the water cascading over his broad shoulders, down his muscled back, then that biteable ass of his before his thick legs. The fantasy was getting me worked up, and the pregnancy hormones were helping. I moved my hands down, one playing with my tender breasts while the other delved into my swelling folds. I slickened quickly as my fingers moved up and down, then curled into my channel. I closed my eyes, surrendering to the feelings, and unaware I was projecting. \n\nThe door to the bathroom crashed open, and a naked and highly aroused Gunny stood there for a moment. Our eyes met, his hand on his shaft and my fingers buried inside me. His eyes darkened and he dove onto the bed by me. He landed at the base, his head between my legs, and he took a deep sniff before pulling my fingers out and tasting them. \"Mmmm... yummy.\" \n\n\"Breakfast in bed?\" \n\n\"Absolutely.\" He looked away, burying his face into my hot sex. His tongue pushed deep inside me, wiggling around and sending delightful tingles up my body. I grabbed his hair and pulled him closer. He was positively ravenous, licking and using his fingers to bring me to a peak quickly. I exploded in his face, soaking him with my release before he licked me clean. He started to kneel between my legs, his shaft red and ready in front of him, but I closed my legs. \"Gunny... I have a prenatal visit this morning. I can't go there with you dripping out of me.\" \n\n\"I could pull out,\" he begged. \n\n\"Lay on your back up here,\" I told him. He moved up into the center of the bed, and I rolled until I was on my hands and knees. I placed my knees on each side of his head, and started to lick down his eight pack until I had his big cock in my hand. \"I need my protein shake,\" I said as I surrounded his helmet with my mouth and tongue. \n\nHe moaned in pleasure and grabbed my hips, pulling me down until he could resume his ministrations on my sodden channel. I worked my mouth down his shaft, relaxing my throat as I pushed myself farther down. He was very distracting, and I came again when I had him in my throat, his shaft blocking any sounds I wanted to make. I pulled off him, took a few breaths then pushed back down. \n\nWe knew what the other liked, and the bond between us reflected our mood and pleasure. The combination allowed us to very quickly bring each other to a peak, but when he was nearly there, I pulled off and squeezed the base of his cock until he was past. He growled, understanding what I was doing to him, and he didn't like it. I squealed as one of his fat fingers, fresh from my pussy, pushed into my ass and started wiggling around. \n\nI took him into my mouth again, working him up and down near the top while jacking the rest. Every dozen or so strokes with my lips, I would take him deep into my throat and hum a tune. The combination had him working back to a peak. I wasn't going to last much longer either, he was VERY talented at what he was doing. \"Someone is about to blow,\" I sent before I decided to use my finishing move. I took him all the way into my throat, then pushed my index finger into his ass and pressed on his prostate. \n\nHe moved his head back and screamed in pleasure as he found his release. I let the first big spurts go down my throat, then backed off so the rest filled my mouth. He got back to work as I swallowed his essence, taking me to the edge and over until I collapsed on top of him. \n\nI'd barely caught my breath before I felt him hardening again. \"Jesus, Gunny, are you taking Viagra?\" \n\n\"Don't need it with you around.\" \n\nI looked down at him, he was ready again and I wasn't satisfied yet. \"I need you in me, Gunny.\" \n\n\"I thought your cooter was off limits?\" \n\n\"I'll let you have my ass then. I need you, baby. I need you in me now.\" He grinned as I rolled over on my stomach, pulling a couple pillows down to raise my ass up in the air for him. He opened the drawer next to the bed, pulling out the lube. He squirted it onto my ass and his fingers, using two, then three to open me up. Over the next few minutes, as I rode that edge between pain and pleasure. By the time he finally pressed that baseball bat of a cock into my tight backside, I had already come twice on his fingers. \n\nHe pushed in slowly, invading me inch by inch. He would pull back a little way after I had adjusted, then push forward again. I was biting the pillow as he worked it in, fighting not to scream. I was glad for our bond, he could feel the difference between uncomfortable pain and hurting me. When I felt his balls resting against my swollen pussy, I was finally able to breathe again. \"Take me, baby. I want to remember this the whole drive home.\" \n\nHe pulled out until his head was teasing my ring, then pushed forward, sheathing himself a few seconds later. I moaned in pleasure, he could feel what it was doing, and he knew he could speed up. I loved feeling what he did through the bond; the tightness of my ring, the heat, the way I would try to hold him in place as he pulled back. After my change, I found out I could take him harder, and recover faster than I did as a human. With his equipment and how he could use them, I needed it. \n\nHe turned on a vibrator and started to tease my pussy with it. I reached a hand back and took it from him, adjusting it so it was hitting the thin space where his cock was moving. When I got close, I held it in against my G-spot until I hit my release. I loved being double penetrated by him and a toy, it was a sure-fire way to set me into near continuous orgasms. He was banging me hard now, his hips smacking into mine as I came another three times. By the time he was ready to explode, my legs were jelly and I felt like I didn't have the energy to scream again. He withdrew, jacking his proud length until he was shooting his hot come over my back. I felt his hot spunk land on my back and my ass as my body continued to twitch. He collapsed on the bed next to me. \n\nI couldn't move. \"God, that was SO good,\" I said. \"I must look so slutty right now.\" \n\nHe pulled his phone off the table and took a picture, then a couple more. When he finally showed me, I was shocked. I looked well fucked, that was for sure. My pussy lips were swollen, the vibrator on the bed below it, my juices soaking the sheets. My ass was still gaping from the anal invasion, and my body was positively dripping with come. \"I've got half a mind to Superman your ass,\" he told me. \n\n\"What's that?\" \n\n\"I cover you up, let the sheet dry to your back and give you a cape,\" he said. \n\nI looked at his phone and noticed the time. \"Shit, I have to take a shower now and get ready,\" I groaned. \n\n\"I can help you shower,\" he offered, but I shook him off. I needed to get ready, and a shower would get handsy quickly. I ran off for the bathroom, and twenty minutes later we were out the door. \n\nI went into one of the floating offices as Gunny went into the Gila Pack kitchens to get us breakfast. I couldn't handle the smells of some of the foods, so I waited until he brought me a plate of pancakes and a bowl of fruit. We ate quietly, I ate slowly, hoping my stomach would settle with the starches and sugars. \"So how did Tom get the house ready to move into so fast?\" \n\n\"He was motivated, and the contractor agreed to have crews there 24/7 until they were done,\" Gunny said. \"I talked to him briefly last night, the painting was completed, and the new carpets are going in this morning. Most of the furniture in the living room was not salvaged, so the new stuff will be delivered and set up before lunch. The kitchen is ready to go. Luckily, the bedrooms and other rooms weren't damaged badly. All of the structural repairs are done now.\" \n\n\"I'm glad Ella sent him with Al to take that over,\" I said. \"It gave him a project to take his mind off the divorce.\" Tom, Lars and Shelley had spent a lot of time in counseling, both with the Pack psychologist and the Alphas. They had agreed to an amicable divorce, their assets split evenly, and the appropriate paperwork had been filed in the human courts. Shelley was still human for now, she wanted to be officially divorced before she would consider mating. Lars had agreed, he was willing to wait and he knew she had to become comfortable with him. He was just happy she was no longer rejecting him. They were spending a lot of time together, allowing him to be with the triplets and to get to know Mark, Olivia and their children. It was a big lifestyle change for the single retired Marine. \n\n\"In a way, it was helpful. The house was never designed to be a Pack House, since the walls were so damaged it gave us a chance to redo the floor plan.\" The bedrooms were smaller, but more numerous, and each bedroom had its own bathroom. \n\n\"And we got to soundproof them this time.\" The both cracked up, remembering how they had kept people up when they first arrived there as new mates. The contractors had spray insulating foam in all the walls, and used overlapping drywall with soft spacers as they rebuilt. The doors were now solid wood, and were sealed around the edges. \"Even with werewolf hearing, we should be able to have sex without disturbing the whole house now.\" We finished up, and he collected the plates and returned them to the kitchen. I was waiting outside for him, avoiding the smells of the dining room. \n\nWe walked across to the clinic, where our prenatal appointment was scheduled. After the normal checks, I asked him about the morning sickness and nausea, which seemed to be much more intense than my earlier pregnancy. \"You can't relate one to the other,\" Doc Terry told me. \"You are different now, you have your cat. However, werewolves normally take pregnancy easier than humans. Let's have a look, shall we?\" \n\nI laid back on the exam table. Gunny was sitting at the head of it, so I leaned back into his chest. This was something unique to werewolf doctors, it was a way to protect them from overprotective mates as they were doing their business down there. Wendy spread a sheet over me before she lifted my gown out of the way. \"That's cold,\" I said as Doc moved the ultrasound probe over my belly. \n\n\"Can't be helped,\" he said. We were all watching the screen as he adjusted it. The picture was grainy, but soon it showed a black space with a little bean-sized baby in it. I started to cry, Gunny was pulling me into his chest, and Doc printed out the picture. He took some measurements, then told me everything looked good. \n\nHe moved the probe slightly, and a second black space appeared. \n\nThen a third. I started to feel light headed. \n\nWhen he found the fourth, I passed out. \n\nI woke up soon, flat on my back on the exam bed with Gunny sitting by my side. \"Gunny?\" \n\n\"Yes love?\" \n\n\"Please tell me he didn't find any more.\" I couldn't imagine even being pregnant with the four I had seen. \n\n\"That was it, baby.\" He held a print, Doc had found the perfect spot and was able to get all four little babies in one picture. \"You're having a litter.\" \n\n\"We're having four babies!\" I was a little ticked at my panther for this, she had known something and held it back from me. \n\nI moved my hands down to my belly. \"I'm going to be ruined, I'm going to look like I swallowed an exercise ball.\" I smacked him on the shoulder. \"You did this, you bastard, you and your super panther sperm.\" \n\nHe just laughed. \"I'd apologize, but I'm so happy I could burst right now,\" he said. \"It's going to be fine, love. Multiple births are common amongst us, and since you are a panther, you can deliver as a cat and the babies will come out in cat form as well. Remember how Ella told us it was much easier that way?\" \n\n\"Easier for YOU, your belly won't be dragging the ground. And don't even THINK about leaving me alone for the birth like happened with her.\" \n\n\"Never. Now, Doc and Wendy are sworn to secrecy, but have you thought about when you want to tell everyone?\" \n\n\"They already know I'm pregnant, Gunny, and they will figure it out quick when I start blowing up. I want to tell Charlotte and Josh first, then our Alphas. We can announce it to the Pack when we get back home,\" I said. Doc came back in and checked me out before clearing us to go. We went back to our room to pack the rest of our stuff, most of it having been done last night. I sent a nudge out to Josh. \"Josh, are you with Charlotte?\" \n\n\"Yep, we're in the game room.\" \n\n\"Can you guys come to our room?\" \n\n\"Sure.\" There was a short pause. \"Charlotte is nervous something went wrong at your appointment.\" \n\n\"We're fine, but we do need to talk.\" Gunny got back from taking our bags to the SUV just before the two came in. Gunny had me on his lap, and I patted the bed next to me. Josh immediately sat down and pulled Charlotte into his lap. Her leg had healed pretty well, only a jagged scar remained, but she was still building the strength back. I looked at the two guys who were so protective of us, they were almost annoying. \n\n\"Charlotte, Josh, we need you to keep this to yourselves for a bit, we won't be announcing it to the Pack until we are settled back at our own house,\" Gunny said. \n\n\"The appointment went fine, the babies are on track for development.\" \n\n\"Babies?\" Josh said. \n\n\"BABIES? WHAT DO YOU MEAN BABIES,\" Charlotte said in shock. \n\n\"Well, yes,\" I said as I took her hand. \"I'm going to need a lot of help from Gunny, from you and from Josh to take care of them. After all, we'll each be able to hold one.\" I smirked to myself, four, three, two, one... \n\n\"YOU'RE HAVING QUADRUPLETS???' Charlotte's eyes rolled back into her head and she slumped against Josh's chest. He was torn between looking at me in shock and looking at her with concern. A moment later, she shook her head and started to cry. \"Oh God, Mom, that's so Gunny! I mean, why not, get the whole batch now!\" \n\nShe moved off his lap and hugged me tightly. \"I know, he's an overachiever.\" Gunny just chuckled in my ear. \"The good news is that I got pregnant while we were in DC still, so you didn't actually hear their conception.\" \n\n\"Thank GOD for that.\" We talked for a while longer, mostly about how the news would affect me. It would be a high-risk pregnancy, and Doc wanted me back at Gila pack starting at 30 weeks, so he could closely monitor things. He also told me I would be put on bedrest at about that time. He didn't have experience with cat multiples, so he was going to treat it like it was all being done in human form. \n\nI asked Craig and Ella if they could stop by before lunch, and they came in a few minutes later. They could tell by the tissues and the emotions that it was good news, but finding out it was quadruplets was a shock to them too. \"We'll support you any way we can,\" Ella promised. \n\nLunch was very emotional, we had made a lot of close friends here at Gila, but it was time to go home. A caravan of cars was in front of the Pack House, and after teary goodbyes, our Alphas led us out. I slept most of the way home, waking when we approached the gates. Tom and Al were standing there to welcome us, and it was good to be home. \n\nThe Scrabble Killer was dead, along with her trainer and protector. We were backing off the open investigation, letting the Cell think their threats had worked. They didn't, we were just going quiet with our investigation. Alpha Robert allowed Melody and William to come to our house, where they would join Al, Josh, Jacob and I as we would trace back the links to find who was really behind all this. \n\nAnd when we knew, Gunny and Lars were going to ride into battle again. \n\nCh. 51 \n\nLisa Giovanni's POV \n\nOne week ago \n\nI woke up and everything looked different. Sharper, the colors muted, but the detail was unbelievable. I took a breath in, and was overwhelmed by the smells I could pick out. My hearing was picking up everything, it was all all too much. I closed my eyes and put my head down on my... paws. \n\nI looked at myself, my hands and arms were now covered with black and grey fur. My jaw dropped and my tongue started lolling out the side as I looked around. I was in a room, empty except for me and one big, wonderfully smelling and attractive male. He moved slowly towards me, I wasn't scared, but I was intimidated a little. I could feel his power flowing into my body, and my body started to roll over for him. \"Submit, he's our MATE, he's the ALPHA,\" a strange female voice said in my head. \n\n\"Who are you?\" \n\n\"Your wolf, silly. Look at him, isn't he perfect? So big and strong.\" He was that; he came over and put his teeth over my neck. I opened my neck to him. \"Please don't hurt me,\" I thought. \n\n\"I could never hurt you, my love. By Luna, you are beautiful, my human and I are so lucky to have you.\" \n\nI looked in his eyes, I had seen them before, in a man who said he was my mate. \"Ross, you look so handsome in your fur!\" He chuffed and started to lick my face. I scrambled to my feet, feeling a little like Bambi until I learned to let my wolf have more control. As I stood there, Ross was rubbing his body down each side and sniffing at my butt, even taking a lick of my sex. I shivered as he inspected me, hoping he wasn't disappointed. I already loved him so much as a man, could I love his wolf too? \"We both do, Lisa. He is ours and we are his.\" \n\n\"Care to run with me, my mate?\" Ross was back at my head, licking my face. The door was opened and one of his Pack members stood aside as he led me out of the room. \n\nI could see it was designed as a cell, with a strong door backed by sliding bolts. \"You locked me in there, didn't you?\" ",
        "\"I locked myself in, too. The change doesn't always go as smoothly as it did with you. The mate or Alpha needs to be there when your wolf awakens, and if the human doesn't accept her wolf, things can get violent quickly.\" We exited the building, finding ourselves near the thick woods. I stopped and raised my nose, taking in the smells. \n\nHe yipped and trotted off into the trees, and I followed him. He gave me a crash course in being a wolf; how to track, run, and hunt. Then he lead me to a shallow pool where we drank and I had my first experience with true doggie-style sex, and being knotted. \"Is it really necessary to swell up inside me like that? I mean, it feels great, but now we're stuck here and I'm waiting for a neighbor to come out with a hose or something.\" \n\n\"It traps my seed inside you, helping with conception,\" he said. \"You are starting your heat.\" \n\n\"WAIT a minute. You told me you could smell it, that I wasn't in my fertile phase.\" \n\nHe looked away, a little embarrassed. \"You weren't then, you are now.\" \n\nI looked at our joined bodies, panicking a little. \"So I might get... we might...\" \n\n\"Yes. I'm sorry I didn't tell you, my wolf and yours decided they should just push things forward on their own,\" he said apologetically. \n\nI sought out my wolf in my head, as he had taught me during our runs. She wasn't sorry, she was pleased with herself. \"You dreamed of family, he is our male and we want his babies. Not every heat is successful, and we aren't getting any younger. I couldn't waste this chance,\" she told me. I thought about it, everything I had against getting pregnant had fallen by the wayside. My career was over, I had a man who loved me, and I had a home and family. I leaned back, nuzzling into Ross's neck. \"So how long was I out?\" \n\n\"Two days.\" \n\n\"What did I miss?\" \n\n\"Well, we aren't going to Gila Pack now. They had to pull up Agent Luis' trial to get it done before the human courts could interfere. He was torn apart by the families of the victims. Then, while Alpha Robert is in court fighting the Habeus Corpus motion, Rose shows up with a box containing all the pieces they were able to recover and basically said, 'Here you go, enjoy.' The Federal Judge was not pleased.\" \n\nI snorted, I could just see Rose doing something like that. \"Now what?\" \n\n\"Now I see you through your heat. I hope you like my cock, because it won't be leaving you alone for a few more days.\" He gave a few short strokes, and I could feel it swelling again. \"Starting now.\" \n\n\"Make a baby for me, Ross,\" I said as his hips started to move again. \n\nThree Days Ago \n\n\"That the last of it?\" I looked over at Ross, he was pushing a suitcase into the back of his Jeep Cherokee. \n\n\"By Luna, I hope so. I didn't think I had bought you so many clothes!\" \n\n\"You didn't. Blame your sister and her fashion sense.\" \n\nJust then, Patricia came out with her Gucci handbag and a big cooler, putting them in the back seat. It had been a big fight, but he eventually understood how important Rose was to me, and that I was going to do it with or without him. He caved when I talked Patricia into going along, telling her about the places she could visit in her mate search. Craig and Ella's pack wasn't big, but they had two close allies in Gila and Johnson Packs, both of which had hundreds of members. \n\nShe just needed to find that one. \n\nWe were going to drive a winding route to Santa Fe, moving from Pack to Pack we were allied with. Beta Ron was holding down the Pack while we were gone. \n\nPresent Day \n\nJosh's POV \n\n\"I'm heading out to get Carl Smith,\" I said as I looked down at my phone. We were just finishing our first dinner together back in our refurbished Pack House, and it was great to be back. I looked around, everyone was excited to meet Black Diamond, the famous hacker who worked with me during the Were Wars. Together, we had swindled the Bank of America out of half a billion dollars. \n\nEach. \n\nCarl had been given special status as a Friend of the Packs at the first Wolfstock, in honor of his work in keeping Packs alive and afloat financially. It is easy to underestimate how critical guys like him were to survival. Imagine how much money your family spends on food a year, then imagine your family had a hundred, two hundred, even five hundred members, and all the adults lost their jobs and their ability to travel at the same time. Carl worked closely with Jimmy Erickson, who was the Johnson Pack wolf who oversaw logistics for the isolated Packs after losing his arm in the first attacks. Carl was critical, as he was still human and was a whiz with creating the false companies we used, and keeping law enforcement and military from discovering us. As a Friend of the Pack, he had a necklace he could wear that ensured safe passage through any Pack lands. Alphas were honor bound to keep him safe. \n\nUnlike me, Carl wasn't part of the amnesty agreement made at the end of the war between the Federal Government and the Packs. As such, he was still listed on the FBI Most Wanted list under his hacker name, but no one outside the Packs knew his true identity. He had been staying the last few years with a pack near Aspen, Colorado living the life of a ski bum. He had more money than he could use without attracting attention, and when I asked him to help, his reply was instant. He was bored, and he wanted to meet the woman I had taken as mine. \"You haven't taken her yet,\" my wolf reminded me. \n\n\"Mom, can't I go with him?\" Charlotte tried her pouty face, which didn't work well on Rose. \n\n\"You have homework to finish, school starts up again tomorrow and you all are going,\" she said. \"If you would have spent more time working and less time holding his hand on the way here, you might be done already.\" \n\nI leaned down and kissed her. \"It's all right, it's just a run to the airport. Get your work done and maybe we can hit the pool before bedtime.\" She smiled as I walked out to my SUV. \n\nI wished once more she had the mate link, and I didn't like texting while driving, so I put my mind off her as I pulled out of the driveway of our big estate and through the iron gates. I saw a man in his thirties, and a couple about the same age. The woman was holding with a girl of maybe four years old in her arms. They were all standing across the street looking at the house. \"Jacob, something is going on out here. There's a family scoping out the house.\" I rolled down the window as I stopped near them. \"Can I help you?\" I took a good sniff, they were shifters, but not like us. \n\n\"I need to speak to your Alpha,\" the first male said. \"Jacob, Craig, Ella... a family is out here requesting to speak with you. They are shifters, cat shifters, but not panthers.\" \n\n\"We'll be there in a few minutes. Do they seem like a threat?\" \n\n\"No, he seems desperate though.\" I looked at them. \"I have to go, but the Alphas will be here shortly. A word of warning, though; if you threaten them or their children, your end will be swift.\" \n\n\"We come in peace and friendship,\" the woman said. I waited until I saw Al and Jacob at the gates, then I drove off to the airport. \n\nTraffic was light on a Sunday night, and I made good time. I drove to the hangar that Carl indicated in his text message, and I wasn't waiting too long before the private jet taxied in and shut down. The stairs lowered, and a man came down the stairs. If I hadn't gotten a pic from him, I never would have picked him to be a computer hacker. He was tall, about six-foot-five, with blonde hair down to his shoulders and frosted tips. His face was deeply tanned, and you could see the tan lines around where his goggles sat. He looked every bit the rich kid snowboard athlete that he now had as his persona. I gave him a bro-hug as he got to me. \"Carl, great to finally meet you,\" I said. \n\n\"You too, Josh. I have to say, I didn't expect someone who looks like you to be meeting me.\" \n\n\"What do you mean? I'm ripped!\" I wasn't muscular in the same way Gunny was, but I had low bodyfat and a six pack, with swimmer's muscles. \"What, you thought it would be some fat kid with coke bottle glasses?\" He nodded. \"Nice. I didn't expect to see an X-Games athlete.\" \n\nWe walked over and grabbed his bags after he put his laptop case in my car. He didn't bring much, knowing the weather would be hot and he wouldn't be able to leave the Pack House often. We spent a lot of time catching up and telling stories on the way home. \"Thanks again for coming to help, Carl. Whoever it is that is behind all this, they are deeply rooted and powerful.\" \n\n\"If they are rich, that's even better,\" he said. \"I don't need to do this, I like doing it. Well, that and snowboarding, banging chicks, and smoking weed. You should come my way sometime, it's legal and it's all over. Hell, in my town you can get an ounce delivered with your pizza if you know the right guy to call.\" He told me a few stories about his adventures in the resort town, he was getting more ass than an airport toilet seat. His stoner persona and Jeff Spiccoli-like appearance kept anyone from even thinking he was a wanted computer hacker. \n\n\"Well, when we get there, I need to introduce you to the Alphas first.\" \n\n\"They're your leaders, right?\" \n\n\"Exactly. Alpha Craig is a wolf, Alpha Ella is a black panther. They have the final say in things, and everyone in the Pack is sworn to obey them.\" \n\n\"Sounds kind of cultish. I don't know if I could live with some dude telling me what to do.\" I couldn't tell if he was ignorant or pretending, he lived on Pack lands, he had to know something. \"Guys sending you commands right to your head? No thanks, I have enough voices to deal with already.\" \n\nI laughed, the Alphas did get directive sometimes, but I didn't mind because they were looking after the Pack. I explained how that worked, and he relaxed a little. \"Now, under the Alphas are the Betas. They are in charge of different parts of Pack operations; security, the home, the children, education, whatever we need. They answer to the Alphas and others report to them.\" \n\n\"What are you?\" \n\n\"Technically I'm a Beta, because in the area of computers, I report directly to them. My mate Charlotte, her mother is former FBI, and her mate Gunny is a former Marine Sniper. Whatever you do, don't hit on Charlotte.\" \n\n\"What, Gunny will beat me up or something?\" \n\n\"No, I will, and then he'll let you heal and do it again. She's MINE.\" I told him about the mate bond and what it means to us, and the story of how I met Charlotte and was waiting for her to be of age so I could turn and fully mate her. \n\n\"That's cool, bro. I mean, lots of chicks say they love me, but you never know if they just want you for your money.\" \n\n\"None of that matters with your mate, Carl.\" We were within range of home again. \"Alphas, I'm ten minutes out with Carl. Everything all right?\" \n\n\"It's fine, Josh, we'll catch you up later. We're out by the pool, bring him back here for introductions,\" Craig said. \n\n\"Do we need to get everyone to put clothes on,\" Ella asked. \n\n\"No, I'll warn him about this, unlike SOME people. I'll make sure he's cool with it. I'm sure he's seen worse.\" I closed the link and looked over at him. \"Our home is huge, you'll have plenty of room to move around. You'll get a guest bedroom in the main house, there is a barn that is divided into a men's and women's dormitory for the unmated members and older children. You can't go in the women's dorm, other than that you'll have free reign. We've got a gym with weights, a big theater, a man-cave like sports bar, and a HUGE pool.\" \n\n\"That sounds cool, does it have a hot tub? I love a good soak before going to bed.\" \n\n\"Yep, and a waterfall. I should warn you, though. As werewolves or werecats, we don't have the hangups with nudity that humans have. The pool, unless human guests are over, it's normally nude. It is considered rude to lounge about the house nude, but you'll probably see people going to or from their rooms that way. It's part of the whole shifter thing, clothes don't survive the shift.\" \n\n\"I think I'm going to like it here. Don't worry, I've been to other packs, I have an idea what to expect.\" he said as we wound through the streets towards the hill our home was on. \n\n\"It's not an orgy, though. We have a lot of children and young teens, and the older ones are waiting for their mates. If you want to get laid, we'll find a party or something.\" We pulled up to the gates and were let through. I parked the car in the huge garage, and walked into the house. \"Hi Marge, Mabel\" I said to the older wolves who were still in the kitchen. \"This is my buddy Carl.\" \n\nThey paused their efforts in stocking the shelves and fridge with their shopping and shook his hand. \"Welcome, Carl,\" Marge said. \"Are you hungry?\" \n\n\"No Ma'am,\" he said. \"I ate on the plane.\" \n\n\"Well, everyone is out back, and there's a snack bar set up in the outdoor kitchen if you get the munchies,\" Mabel said. \n\nWe took a detour to his room, leaving his bags on his bed, then went out the back of the house to the pool area. I saw the big table where the Alphas were sitting, they were watching the shallow end where most of the kids were playing before bedtime. Sunset was an hour ago, but the landscape underwater lights were on and it was still plenty warm. I gave Carl a moment to look around. \"Pretty sweet, huh?\" \n\n\"This is amazing, I've seen hotels that aren't this nice.\" He followed me to the table and I made the introductions, first with the Alphas, then with my parents and Charlotte's parents. Everyone was happy to have him here, and did their best to make him feel welcome. \n\n\"Where's Charlotte,\" I asked. \n\n\"Down by the waterfall with the older kids, last I saw,\" Dad said. \n\nI led Carl to the locker room where we could store our clothes and shower afterwards. \"You need a suit?\" \n\n\"Not my first rodeo, Josh, but this is a much more family-oriented vibe than I'm used to.\" \n\n\"Just keep your eyes above the shoulders and don't creep anyone out,\" I said as I finished putting my clothes in my locker. I took a quick shower, but he had already left so I went out to find him. \n\nHe was standing frozen by the side of the pool, staring at someone. I noticed in my peripheral vision he was starting to get hard. \"Not cool, dude. I told you not to look below the shoulders.\" \n\n\"My God, she's the most beautiful thing I've ever seen. Who is she?\" \n\nHe didn't break his gaze, his mouth just stayed open as he stared. I followed his eyes across the pool to where a woman was half out of the water by the steps, her back slightly to us, her dark hair falling to her shoulders. \n\nI grabbed his arm to turn him away, but he wouldn't budge. \"That's MY SISTER, dammit! Quit perving on my sister!\" \n\nHe said something about how perfect her ass was, and that was it. I used one of my martial arts moves and hip tossed him into the pool. He came to the surface, looking for Charlotte, but she wasn't there anymore. She was running around the outside of the pool, pissed off as hell, and someone was going to get his ass kicked. \"It's all right, Char, I told him not to stare at you like that,\" I said proudly as she rushed up to me. \n\nInstead of thanking me, she pushed my chest with both hands and knocked me into the pool. Confused, I came back up. \"Don't you DARE touch my mate again, Josh Spencer!\" \n\nEveryone in the Pack looked at her as she jumped into the pool, wrapping her arms and legs around Carl as they started to make out. \n\nCh. 52 \n\nRose's POV \n\n\"Don't you DARE touch my mate again, Josh Spencer!\" \n\nI had to laugh, one thing about our Pack was that things were never boring. I looked at Josh, he was about to blow. His fists were clenched and his wolf was about to come out. Craig was on it; he was out of his seat and restraining him quickly. \"STAND DOWN,\" he ordered. \"They are mates, you can't interfere.\" \n\n\"SHE IS MY SISTER, AND HE'S A MAN WHORE!' Despite the Alpha's grip, he was still struggling. \n\n\"That's not your call, Josh. Shift and run it out, that's an order.\" Josh looked again at his sister, still engaged in a passionate liplock with his friend, and shifted. Letting out a howl, he took off for the land behind the house. \n\nLars Albertson, one of Josh's close friends, got out of the pool quickly. \"I'll watch him, no one should be alone,\" he said before he shifted and ran off after him. Jacob looked at his mate Melanie, who was playing in the shallow end with their daughter Chance. \"I'm going to the security room, I'll monitor things from there,\" he said. \n\nSatisfied that Josh would be safe, we turned our attention back to the happy couple in the deep end of the pool. Seeing how she was starting to grind on him, I turned to Ella who was just laughing about the whole thing. \"They'll be putting on a show in two minutes if we don't stop them,\" I said. \n\n\"She'll be pregnant in five,\" Ella replied. \n\nCraig whistled, getting everyone's attention. \"All right, it's a school night so I want all the kids out of the pool, showered and dressed in the next five minutes,\" he said. The kids all acted like their favorite toy was taken away, but they knew better than to disobey the Alpha. Moms helped collect their children, and people started leaving for the locker rooms or the bunk rooms. \n\nAngela Spencer, Jane's mother, walked to the edge of the pool. \"Now for you two,\" she said to Jane and Carl. \"Jane, you have school tomorrow. Go get cleaned up and changed, then you can come over to the Alpha's office and say good night. You're in bed by ten, though, no excuses.\" \n\n\"Mooooooom!\" She untangled herself from a clearly aroused Carl and stood by his side, her arm around his waist. \"I'm eighteen, he's my MATE, I want to be with him.\" \n\n\"He's also human, we just met him, and you are still our daughter and still in school. Until you get permission to mate, young lady, you are still under our guardianship,\" her father John said, \"So don't make this more difficult that it will already be.\" \n\nJane's shoulders slumped at the thought of leaving him, but she didn't have a choice. If she defied her parents, the Alphas would back them and things would get even worse. She pulled him down into a quick kiss. \"I'll see you soon,\" she said, then she climbed out of the pool and grabbed a towel before heading to the women's locker room. \n\nAngela's hard gaze now turned to Carl, who had moved to the side of the pool to hide his excitement from the others. \"As for you, young man, when you get that swelling to go down, meet your mate's parents and the Alphas in their offices. Ask anyone to show you where they are.\" Carl nodded, then put his head down on his hands at the edge of the pool. I figured he was probably doing math problems or something to get his mind off Jane and her body. \n\nThe two came back to our table and sat down, John's head was in his hands. \"Love, I'm not ready for our baby to grow up,\" he said. \"At least with Josh, he has to wait for her to be of age. Jane could be his immediately under our laws.\" \n\n\"Come on,\" Craig said, \"We may as well talk through some things before they arrive. Gunny, Rose, I need you to join us.\" \n\n\"Huh? We're not involved in Jane's mating,\" I said. \n\n\"It's a similar situation, a wolf mating a human. The choices we make could affect Josh and his relationship with Charlotte,\" Ella said. \n\n\"Fine,\" I said. \"First I need to have a sandwich, though.\" The others looked disgusted, I didn't understand why. I had a powerful craving for a peanut butter and tuna sandwich, and I wasn't going to let their looks get in the way. \n\n\"P, B and T?\" Gunny looked at me like I was weird. ",
        "\"Yes, and you should go make It for your poor mate who is carrying your FOUR babies and struggling with her hormones!\" He scurried off, at least he knew how to properly cater to my raging hormones. Gunny was very supportive, and I was going to milk that guilt of his for knocking me up so hard. I looked over at Craig, who was rubbing Ella's pregnant belly. \"I can't imagine how it is for you, Ella, this all must seem commonplace by now with all your pregnancies.\" \n\nShe smiled and held Craig's hand in place. \"Well, this man can knock me up with a dirty thought, it seems. Except the time I was held at Ft. Detrick, I think I've been pregnant more than three quarters of the time, and I love it.\" She looked over at her children who were being corralled by Marge, who was bringing them over to say goodnight. They were good kids, rather numerous, and they were their pride and joy. I watched as they hugged, remembering back to the days I would hold Charlotte until she went to sleep. I was so busy then, for a year it felt like I never slept, and that was with just one. I had no idea how I could handle four. \n\n\"You'll be fine, love,\" Gunny said as he sensed my longing mixed with worry. \"I'll be here, the Pack is here, and you know Marge and Mabel will help. You're going to be fine. Now come on, eat this thing before the smell makes everyone in the kitchen leave.\" \n\n\"My snack is ready, I'll see you in a few minutes,\" I said. Walking into the house, I sat at the table where Gunny had placed my sandwich and a glass of milk. He was still in the kitchen, pretending to clean up, but I knew he just couldn't watch me eat this sticky, fishy goodness. I gobbled it down, washing it down with milk, then took the plate to the dishwasher. \"Thank you, baby,\" I said as I kissed him. For some reason, he didn't want a tongue kiss. \n\nHe took my hand and led me down the hall to the Alpha's offices. Their setup was as unique as their relationship; the norm among Packs was that the male was dominant, he was Alpha and his mate was never to challenge or dispute his decisions. She was allowed to look good on his arm, pop out babies, take care of the house, and watch over the women and children so the Alpha could do the important stuff. That was tradition. \n\nLike Robert and Renee, Craig and Ella had adapted how they ran things to the strength of their mates. Renee was a Next Alpha, a leader in wartime, and had taken over a Pack by defeating the Alpha of the old Santa Fe pack before meeting and merging with Robert's Gila Pack. Ella was the Alpha of the Belden Pack, a position she held with or without her wolf or panther. Craig was an Alpha's son, his bloodlines gave him the size and characteristics, but he was joining HER pack and he respected that. Their office was huge, their desks side by side so they could work together. If privacy was needed, there was a conference room adjoining with seating for twelve, and that was where we headed. \n\nJohn and Angela were already there, and we let the Alphas know we were ready for them. Craig brought a blushing Ella in, setting her on his lap as he held her in his arms. \"So,\" Craig started, \"Before we talk about Jane, we need to talk about Charlotte. Right now, Josh is under Alpha order not to mate or change her until she is eighteen, which is a week after she graduates from high school. Rose, Gunny, do you want that to change?\" \n\nI shook my head no. \"I know it's difficult for them, but it is for the best. I don't need her to have the drama of going to school as a married woman to a man who works their and is much older. Plus, he'd get her pregnant her first heat. Right now, they are getting to know each other, and it's letting her get comfortable with the Pack before being changed.\" \n\nAngela nodded. \"If she was from another Pack, I wouldn't stand in the way, but we have rules we agreed to in the treaty. He can't have her until she is of legal age and has Alpha and a judge's permission. There are only so many times we can get away with not going through the process before it comes back to bite us,\" she said. \"Too many people know of Charlotte and how she is human. If she was changed as a minor, it would get out.\" \n\n\"Still, he's human and she's still in high school,\" I said. \"Carl is already here to help, he has proven his worth and his loyalty to our kind already. You should be proud to have such a man as your daughter's mate. I know her instincts will be to claim and mate him, but is there really a hurry? He knows little about life in a Pack, about the changes this will make. Angela, your concerns about school apply to Jane as well, plus the girls have become so close that letting Jane mate quickly will hurt Charlotte. She will see Jane getting permission to mate as being unfair, especially since Carl can't go to a judge because he is a fugitive.\" \n\n\"Then we are in agreement with you,\" Ella said. \"We will Alpha order Jane not to claim or mate with Carl until she has permission from us and a judge, which won't happen until she has graduated from high school. In the meantime, we can prepare Carl for his change.\" \n\n\"She's going to be pissed,\" John said. \"I know I would be.\" \n\n\"It's our decision, based on what is best for the Pack,\" Craig said. \"She doesn't have to like it. If she pushes back, she won't like what I'll do.\" He looked at the door. \"Come in, Carl,\" he said loudly. \n\nCarl opened the door, dressed in tan shorts and a T-shirt. Angela got up and gave him a hug, he hesitated for a moment and then embraced her back. \"I'm so happy my daughter found you,\" she said. \"I'm Angela Spencer, Jane is our daughter. This is her father, John.\" The two shook hands, then we all sat down. \"You must have questions.\" \n\n\"A lot of them, actually. Josh told me a little about mates on the drive, and I've had very limited contacts with some Packs- mostly just getting permission to stay on their land, and interacting with the guards they had around me. Nothing prepared me for what I'm feeling right now, though.\" \n\n\"What are you feeling,\" Ella asked. \n\n\"Like I'm floating, and the current is pulling me towards her,\" he said. \"I mean, I saw her and she was the only thing in the world. All that mattered was her, and having her in my arms made everything seem better. My skin was all tingly, and I could lose my soul when I stared in her eyes,\" he said. \n\n\"Yep, they are mates,\" Gunny said. \n\nWe spent the next twenty minutes explaining what mates were, and what the rules and customs were surrounding them. \"Mates are forever, Carl. There is no divorce among us, no cheating, no abuse. When you find your one true mate, you would die before you hurt her. There is no lying, because you can sense each other's thoughts and emotions. It's a tie far greater than marriage, stronger than the bond to your Pack. It's not something we want humans to just rush into.\" He looked at the door. \"Come in, Jane.\" \n\nJane opened the door and searched for Carl, her face lighting up when they caught each other's eyes. She rushed into his arms, kissing him deeply while placing herself on his lap. \"I missed you,\" he said. \n\n\"Carl, Jane, your parents have discussed your situation and have come to a decision,\" Craig said. \n\n\"Without asking me what I wanted?\" \n\n\"Yes, we're pretty sure from your display what you would want,\" he said. He walked to stand in front of her, holding her chin so she would look at his eyes as his wolf came forward. \"You are not to mate with or cause Carl to change into one of us until you have permission from us. That permission will not be given until you have graduated high school.\" The Alpha command caused her to shudder, her wolf submitting to his power. \n\n\"But... that's MONTHS from now!\" \n\n\"It's for the best, baby,\" Angela said. \"We want you to finish your schooling and we need to give Carl time to understand who you are and what it will mean to him to become yours. I'm sorry you are disappointed, but you and Charlotte are in the same boat.\" \n\nShe sat there, disappointed. \"FINE,\" she finally said. \"I have to go to bed since I have school tomorrow. Will I see you at breakfast?\" \n\n\"Yes, if Josh hasn't killed me by then.\" He kissed her before they stood up. \"I should go get settled as well, if we're done here.\" The Alphas stood and embraced the couple, then Gunny and I did, finally her parents. \n\nAs they walked to the door, Jane elbowed him in the ribs. \"Fair warning, Carl. I may not be able to mate or claim you yet, but you are MINE. I will rip to shreds any woman who tries to take you, and if you even THINK of cheating on me I'll have your balls for earrings. Am I clear?\" \n\n\"Crystal.\" \n\n\"Good, now take me back to my dorm.\" John and Angela followed them out, and I got up and closed the door behind them. I was giggling to myself at how effectively she had laid down the law. For a shewolf who couldn't finish the bond, it was difficult because they feared losing their one. She was going to be as jealous and protective as Josh was with Charlotte. \n\n\"Alphas, Josh has been informed of the decision and is changing now. You wanted to talk to him before meeting that man, right?\" \n\nCraig nodded. \"Al is on his way back with him now. We got them settled in the guest house, they said they can't stay at a hotel and we couldn't leave them on the street until we have time to decide.\" When Tom had returned to oversee the house, he noted one of the houses down the block was for sale. We had plenty of money in the Pack accounts, and we knew Gunny and I would be staying here when Craig, Ella and some others returned to the island life. We bought it for cash, and were actively seeking other properties in the area we could use to expand our Pack boundaries and facilities. \n\nJosh knocked on the door and entered. \"You wanted to talk to me, Alphas?\" \n\n\"Yes. Give me your impressions of the people you met tonight when you left for the airport.\" \n\n\"Shifters, some cat species. I could feel their strength, the big guy was dangerous, but I sensed no ill intent. His power was similar to a Beta. The couple didn't have near as much power, and they were petrified of me. Whatever they are running from, they fear more than us.\" \n\n\"Al said the same thing. He was able to place the scent, though. They are mountain lions.\" \n\n\"Mountain lions?\" I looked around confused. \"They are loners, why would they be wanting to talk to a wolf pack?\" \n\n\"We'll find out in a moment,\" he said. \"Al, bring him in.\" The door opened, and Al brought in a big guy who looked like he belonged in a biker gang. He was tall, muscled and intimidating, even bigger than Craig was. Gunny instinctively stood, pushing me behind him. The biker wasn't as muscled and intimidating as MY man. \"Welcome to the Belden Pack, I'm Alpha Craig Anderson, and this is my mate Ella,\" he said as they shook hands. \"My Betas, Gunny and Rose Rodriguez.\" \n\n\"Charlie Stillwater. I and my family thank you for the audience, and I would like to formally request asylum with your Pack.\" \n\n\"Asylum? What are you running from?\" \n\n\"My bosses. They want me dead, and my family are in danger. I need help to get them back, and I'm willing to give you information that will make it worth it.\" He was nervous, but he was genuine. \n\n\"Why do they want you dead?\" \n\n\"I'm the one who killed Maitea Jennings, and I was supposed to kill Luis as well.\""
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "panther",
        "werecat",
        "pack",
        "mystery",
        "action",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/rose-ch-50-52"
}