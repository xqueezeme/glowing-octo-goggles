{
    "title": "The Study",
    "pages": [
        "This is a story about my experience as a participant in a clinical study on human sexuality and the profound impact it had on my life.\n\n*****\n\nTHE POSTER\n\nIt all started with an ad I saw posted on campus. It read:\n\n\"Seeking individuals between the ages of 20-25 to participate in a psychological study on human sexual attraction. Participation will require a commitment of 4-6 hours per week (on-site). Participants must be heterosexual in orientation and willing to abstain from any encounters of a sexual nature outside of the clinical setting during the four week duration of the study. Participants who are selected and successfully complete the full study will receive $10,000 in compensation. Participants who do not successfully complete the study will be compensated only for their actual hours of participation at a rate of $25 per hour.\" \n\nI was 23 at the time, a financially-strapped grad student at the University of Wisconsin in Madison. I was two months behind in my rent and the student loans kept piling up. My parents were no help. So there was one thing that immediately stood out to me about the ad: $10,000. That was an enormous sum of money for me at the time. \n\nBut on second read, the phrase that really captured my imagination was the part about abstaining from sexual encounters outside of the clinical setting. Outside of the clinical setting? Did that mean the study involved sexual encounters within the clinical setting? Was there any other way to read that?\n\nNeedless to say, I was intrigued. I didn't have a girlfriend at the time and didn't have much time to go looking for one either, so the odds were strong that I'd be \"abstaining from sexual encounters\" anyway, regardless of whether I participated in the study. So I might as well try to earn $10,000 for my trouble. I ripped off one of the paper tabs from the poster and sent an email to the address printed on it as soon as I got back to my apartment.\n\nTHE SCREENING INTERVIEW\n\nWhen I showed up outside the psychology department a week later, as I'd been instructed to do in the reply email, there were a number of outdoor tables set up and hundreds of students milling about. I checked in at one of the tables and was given a number, as well as a stack of medical forms and other paperwork to fill out. As I took a seat on the building's front steps to begin filling out the paperwork, I overheard two girls talking.\n\n\"...they would have to tell us that ahead of time, right? I mean, I'm not gonna just screw some random guy in the name of science. I don't care how much they're paying me.\" The one who was talking was very cute, in a girl-next-door sort of way. She had thick, curly brown hair pulled back in simple pony tail. She was dressed in a tight baby blue t-shirt and jeans that showed off her slender figure. \n\n\"I don't think they're gonna tell us much of anything. This is psychology. They like to fuck with your mind, keep you guessing. You can always walk away, though. That's your out. But I'll tell ya, there's not a lot I would walk away from if it meant losing $10,000.\" The other girl was attractive too, but much more done up. She had long straight black hair, wore lots of makeup, and looked and sounded like your typical sorority girl. \n\n\"Maybe that's the point, maybe this is just a way of testing us to see if we're willing to whore ourselves out if the price is right. It's like what's that movie...the one with Robert Redford?\" \n\n\"Indecent Proposal\"\n\n\"Yeah that one.\" \n\n\"Look, Abby, if there's a guy like Robert Redford in there, I'd do him for ten grand.\"\n\n\"Yeah, well, that's because you're a whore.\" The line was delivered so deadpan that, for a moment, I couldn't tell if it was meant in jest or not. But a moment later, both girls started cracking up. Something about the first one's mischievous smile, her sarcasm, the way she held herself, even the inflection of her voice, it all suggested a real intelligence and personality. I liked this girl. Her friend had called her Abby. I filed that bit of information away and went back to filling out the forms.\n\nThe first few were your typical medical history and disclosure forms, including a signature line seeking authority to collect and review medical records. But then it got more interesting. One document was a lengthy survey that asked detailed questions about my sexual history and preferences. It asked how many people I'd hooked up with, had oral sex with, had sexual intercourse with. It asked whether I'd ever had any homosexual encounters or desires. There were questions about various types of sexual fetishes, some I'd hear of and some I hadn't. It asked how often I masturbated and what kind of pornography I masturbated to. There were 15 pages of these questions, which I tried to answer as honestly as I could. \n\nThen I got to the waivers. They looked to be mostly boilerplate legalese, but some of the lines were interesting. The document warned that psychological studies sometimes require the withholding of information from or even active deception of the study participants in order to create the conditions necessary for the experiment to be successful. Reassuringly, the document emphasized that study participants may, at any time, choose to withdraw from the study and will not be forced to engage in any conduct, sexual or otherwise, without their consent. In the very next sentence, though, it noted that the university could not be held liable for any \"emotional or physical consequences resulting from the voluntary acts, sexual or otherwise, of study participants.\" \n\nBy the time my number was called, I'd completed and signed every form. I was led into an empty white room that had a video camera in one corner and a one-way mirror on one of the walls. Presumably someone was on the other side watching me, but all I could see was my own reflection. After a few minutes, a woman came into the room. She was strikingly attractive. She looked to be of Indian or possibly Middle Eastern descent, beautiful, with straight, black hair that flowed over her white lab coat. She was maybe 30 years old, no more. When she spoke, it was with a British accent tinged with something else. My guess was she learned English in the UK but it was a second language to her. \n\n\"Hello...Jake\" she said as she looked for and finally found my name on the form. \"I'm Dr. Rupi Kaur. As a part of our screening process, I'm going to ask you some very personal questions. Please answer them completely and honestly. We're looking for subjects who will be capable of giving us the kind of candid insight that we need for this study to be successful.\"\n\n\"Understood. I'll do my best.\"\n\n\"Please describe for me the first time you had sexual intercourse. I don't want any names, but I do want you to describe the circumstances in some detail.\"\n\nI did as I was asked, giving a very thorough account of my encounter with a girl my freshman year of college. I told her everything I could remember, including the part where I had trouble getting the condom on and the fact that the whole encounter lasted about 30 seconds. \n\nNext, she asked me about my most embarrassing sexual encounter. I told her about the sexy grad student with the short black hair who had come on strong and invited me back to her place. I told her about the performance anxiety that had gripped me and how her frustration with me had only compounded the issue. \n\nFinally, she asked about my most erotic encounter. I told her about the one and only threesome I'd ever been a part of, back when I was living in Japan. I spared no detail. While Dr. Kaur kept a stoic expression throughout, I could tell from her body language that she was far more interested in my threesome story than anything else I'd shared up to that point. She seemed to hang on my every word, scribbling notes occasionally. \n\nWhen I was done with the story, she thanked me for my candor and told me that they would be in touch. She said that if I was chosen for the study, it would begin in exactly one week.\n\nTHE STUDY BEGINS\n\nI received an email two days later from Dr. Kaur indicating that I had been selected to participate in the study. I was told to report to the psychology building starting Monday at 9:00 am. But then came the weird part. The email said that, in order to establish the necessary baseline for the first experiment, all study participants were required to masturbate until orgasm exactly two days before reporting for the study and then to refrain from any sexual stimulation from that point on. So when Saturday morning rolled around, I woke up and dutifully rubbed one out. Then two days later I reported for duty, somewhat apprehensively.\n\nWhen I arrived, I was ushered into a lecture hall on the first floor. I was one of the first people in the room, but by the time they closed the doors there were 11 others. It looked to be an even male/female split; six guys, six girls. I immediately noticed that everyone was young, fit, and attractive, which was definitely not the case the week before, during the signup process. They must have only selected people who fit a certain profile, a thought which was immediately flattering in its implications. I considered myself a decent looking guy, six foot tall, short brown hair, a slender but athletic build, but to have satisfied whatever selection criteria resulted in this group certainly gave a boost to my self esteem.\n\nI looked around for familiar faces and eventually spotted one, the girl whose conversation I'd overheard the week before. It took me a moment, but I eventually remembered her name: Abby. At the front of the room were 12 people who appeared to be faculty. They were all dressed in white lab coats. One of them was Dr. Kaur. They too were evenly divided, six men and six women, and all were relatively young (none older than their early 40s) and reasonably good-looking. \n\nEventually, a man standing next to Dr. Kaur broke the silence. \"Hello everyone, my name is Dr. Snyder, and I'm a member of the faculty here. We appreciate you agreeing to participate in this important study and know that you must have many questions. Unfortunately, to ensure the integrity of the study, we can only share information with you in a group setting like this, and what we share will be very limited. We want to ensure that you are all operating off of the same baseline knowledge, to reduce the variables as much as possible.\" \n\nHe continued, \"this study is designed to assess the way in which the human mind processes and responds to sexual stimuli and how that response differs from person to person. As a part of this study, you will be exposed to various sexual stimuli and encouraged to masturbate.\" That prompted a number of us, myself included, to look around room. I'm sure we were all trying to gauge each other's reactions. For a moment, I made eye contact with Abby, but we both quickly looked away. \n\nDr. Snyder continued, \"these sessions will not be filmed, but you will be expected to fully and candidly discuss your experience afterward with a member of our team. You will each have one faculty member assigned to you.\" He swept his arm to indicate he was referring to himself and the 11 colleagues in lab coats flanking him. \n\n\"While you will not be recorded or filmed, you may be observed. If anyone does not feel they can masturbate while being watched, please let us know now, while we still have time to select an alternate participant.\" \n\nI glanced around the room again, wondering if anyone was going to stand up and walk out. No one did.\n\n\"What this study will NOT involve is any physical sexual contact with any of the faculty or your fellow study participants. This is important, so I want to emphasize it. If any physical sexual contact occurs, it will almost surely result in your being kicked out of the study. You will not receive the $10,000.\" \n\nDr. Snyder paused to let that sink in. Then he continued, \"the study will be divided into 12 sessions over a four week period, every Monday, Wednesday, and Friday at 9:00 a.m. The first session will be today, immediately after we're done here. Each session will last one to two hours, including the post-session debrief. In between sessions, for the duration of your participation in the study, you must refrain from any sexual contact, including masturbation. You must also refrain from socializing with any of your fellow study participants. We've selected the 12 of you under the belief that none of you are previously acquainted. If that's not the case, if you know any of the other participants, please let me know now.\" No one said anything. \n\n\"Good. Okay. That's all the background I'm at liberty to share with you at this point, so let's get to our sessions. As I mentioned, we've assigned a faculty member to each of you. Your faculty member will now escort you to your room.\"\n\n\"Jake,\" I heard a familiar female voice say, \"you're with me.\" It was Dr. Kaur. \n\nSESSION 1 (DAY 1)\n\nI followed Dr. Kaur upstairs and down a long hallway. She eventually led me into a small room with no windows. It had a flat screen TV mounted on one wall and a low black leather couch opposite the TV. I was surprised to see that, unlike the room I'd been in the week before, there was no one-way mirror in this one. Dr. Kaur instructed me to disrobe completely and put on a hospital gown, which she handed to me. She said I could leave my clothes in the corner of the room. Then she shut the door and was gone.\n\nI did as I was told, putting all my clothes in the corner and putting on the gown. Then I sat on the couch and waited. A few minutes later, I heard a knock and the door opened. Dr. Kaur wheeled in a cart that had some kind of medical equipment on it, as well as several boxes of tissues, a towel, and what looked to be a bottle of massage oil. \n\n\"Before we start, I need to attach these sensors to you,\" she said, as she held up what looked like two small suction cups. \"They'll record how you respond to various stimuli and remotely transmit the data to this machine here.\" She attached the two suction cups to my forehead, and then reached into the cart drawer for several more. She ended up attaching four of the sensors to my chest and four more to my back. She then attached two 'fit bit' like bracelets around each of my wrists. Finally, she held up a small item that looked like a thick, white rubber band.\n\n\"I've saved the best for last,\" she cracked a half smile, \"I need to place this one around your penis and testes. I promise it won't hurt. Can you please lift your gown?\"\n\nI did what I was told. She gently placed the band around the base of my flaccid penis, then twisted it to create a loop around my cock. Then she stretched the rest of the band and pulled it around my scrotum. The band was cold, but her hands were warm. \"There. That'll do. Don't worry, it will stretch to accommodate an erection.\" Whatever the thing was made of, it didn't feel constricting. It wasn't like wearing a cock ring, which I'd tried once and absolutely hated. I quickly forgot the band was even there.\n\n\"Okay, we're all set to begin.\" She handed me a remote control. \"You're going to see a variety of sexual images on the screen. If you like what you're seeing, just keep watching it. If it's not your cup of tea, press this button to advance to the next clip. We want you to masturbate as you're watching this. You'll have up to an hour if you wish. I'll set the timer before I leave. It's important to masturbate all the way to completion, so everyone will have the same baseline going into the next session. But please only do so once, and please try last at least 30 minutes before you ejaculate. We want to get at least 30 minutes of data from every session. When you're done, you can take off the sensors and get dressed. Then just press this button,\" she pointed to a red button on the wall,\" and I'll come retrieve you for the debrief. Any questions?\"\n\nI had a million, but they all flew out of my head when I was put on the spot. \"Umm...no, I'm good, I think.\" With that, she pressed the red button and left the room. The TV came to life. A timer appeared in the corner of the screen, like a stopwatch, counting up. The first video that appeared was a clip of a naked woman dancing. She was clearly a porn star, platinum blonde and surgically enhanced. No thanks. I pressed the button to skip ahead to the next clip. I clicked through the next few clips as well, all of which were similar. The women looked different, different hair color, different ethnicities, but they were all very done up, boob jobs and high heels. The first clip to actually capture my attention was one that looked like it was filmed on a computer webcam. A girl was dancing to music, her enormous breasts bouncing up and down. Though her breasts were suspiciously large, she didn't otherwise look like a porn star. Her hair was pulled back in a simple ponytail and she wore pink cotton panties. She was young and wholesome looking, with a genuine smile. The video seemed more like something a girl might record for her boyfriend than something created for a mass audience. As I watched, I felt my cock swell and reached for it under my gown. Cock in hand, I stroked myself slowly until the clip came to an end. \n\nThe next round of clips all featured women pleasuring themselves. Some I clicked through quickly, including one with a girl covered in tattoos; others I watched longer. The only clip I watched to completion featured a freckled girl who had her shirt pushed up over just one of her breasts and was fingering herself in a way that left little doubt that she was genuinely enjoying herself. The sounds she was making were incredibly sexy, subtle and involuntary, not the kind intended for an audience. By the end of that clip, I had a tremendous erection and had to fight a strong urge to finish the act. But only 20 minutes had passed. So instead, I took a break, lifting my gown above my waist and applying some massage oil to my cock.\n\nThe next round of clips featured the first actual sex. I skipped through a few that were stereotypically porn, buck-naked actors dispassionately fucking. I skipped through several girl-on-girl scenes as well. Not really my thing. I lingered a while longer on a few that had higher production value, HD video with attractive actors. But the one that finally got to me was one that featured a petite brunette girl with her hair pulled back in tight bun, the way a ballerina's might be. She was wearing a loosely-draped t-shirt that hung to one side, exposing her left shoulder and breast. She was otherwise naked, slowing riding on top of a man who was lying flat on a couch. The production quality of the video was high and the actors were both very attractive. The woman moved her hips rhythmically, sliding up and down on the man's cock. After building to a fairly convincing orgasm, the woman slid off the man's cock and he sat up to kiss her. With her hand, she stroked his cock, rubbing it against her exposed breast as they kissed. Before long, the man came, releasing his load all over the woman's breast. She smiled as she continued to rub his cock against her now dripping right breast. I was so turned on by the scene that I passed the point of no return. I felt the orgasm ripple through me and shot my cum across the floor. I looked at the screen. The timer read 37 minutes. \n\nAfter I'd wiped my cum off the floor with a tissue, removed the sensors, and dressed myself, I pressed the red button. Dr. Kaur soon appeared and escorted me down the hall to another room just like the one where we'd first met for the screening interview. It had a table, two chairs, and a one way mirror on the wall. On the table was what looked like a polygraph machine. Dr. Kaur confirmed that it was in fact a polygraph machine and that its purpose was to ensure my candor. Once she'd hooked me up to the machine, she asked some baseline questions to calibrate it. Then she asked me whether I'd had any sexual encounters in the past 48 hours. I said that I hadn't. She asked if I had masturbated to orgasm during the session and whether I had only done so once, as instructed. I answered truthfully. From there she ventured into more open-ended questions. She had a print out that must have shown her which clips I had watched and for what duration, among other things. She asked me why I had skipped certain clips and lingered on others. I answered as candidly as I could. Finally, she asked why I'd come when I did, what it was about the final clip that had pushed me over the edge. I explained that it was a combination of things, the way the girl looked and how she was still partially clothed. The way she moved and sounded. The realistic passion in the scene. And the way she made him cum onto her breast, in a way that didn't seem contrived or implausible, in a way that seemed like it was something she actually wanted. ",
        "The whole debrief took about a half hour. Then she thanked me and told me she'd see me again in two days.\n\nSESSION 2 (DAY 3)\n\nThe second session began the same as the first. Dr. Kaur brought me into the same room with the TV monitor and attached all the same sensors she had previously. Then she pressed the button and left the room.\n\nThe progression of clips followed a similar pattern as the first session, starting with clips of women dancing, followed by women pleasuring themselves, and eventually full sex scenes. The difference was that all of the stuff I had clicked through quickly in the prior session was gone. There were no artificial-looking bimbos in high heels, no girls with lots of tattoos or piercings, no lesbian scenes. They'd clearly taken my preferences into account in selecting these scenes. But because every clip was closer to my liking, I allowed myself to be more picky. I clicked relatively quickly through clips I would have lingered on during the prior session, trying to find the ones that were just right, the girls who were particularly captivating. Several of the clips were incredibly hot, featuring gorgeous but realistic-looking women engaged in genuinely passionate sex. I watched those in their entirety. Eventually, the clips ventured into new territory: threesomes of varying combinations, interracial scenes, anal sex, and even a gang bang scene. Of those, I spent the most time watching the threesome scenes featuring two women and a man, a couple of which were quite well done. \n\nAt about the 45 minute mark, a clip came on that was shot from the point of view of a man receiving a blow job. A beautiful girl, with huge brown eyes and a devilish smile was slowly sucking the man's cock, her eyes looking directly into the camera. After a few seconds of sucking, she would let his cock fall out of her mouth, but would continue slowly stroking it with her hand while looking directly into the camera. She would smile and occasionally say something dirty. There was something so intimate about it. She was teasing him, taking him right up to the edge of climax but not past it. There was nothing hurried. She was drawing the pleasure out. I was so turned on that I threw my gown to the floor and stood naked.\n\nEventually, after another round of slow suction, she let him have his release, on her terms. She held his cock up to her cheek and stroked him just enough, never relinquishing eye contact. Cum burst from the tip of his cock like a geyser, glancing against her cheek before falling back onto his stomach. That was what pushed me over the edge. I shot my load into my balled up gown. \n\nDuring the subsequent debrief, Dr. Kaur spent a lot of time asking questions about that final scene, trying to pinpoint what it was about it that had so turned me on. I explained that part of it was the way it was shot, the point-of-view style made me feel like I was part of the encounter, not just a spectator. It felt personally intimate, particularly with all the eye contact. But another big part of it was the girl herself, her infectious smile and obvious personality. She came across as a real person, someone who was a willing and enthusiastic participant, someone who really wanted to pleasure her partner and was confident in her ability to do it. \n\nSESSION 3 (DAY 5)\n\nThe final session of the first week began just like the others except I ditched the gown as soon as Dr. Kaur left the room. The first few rounds of video clips were very similar to ones I'd seen and liked previously, but often featured women and situations I found even more sexy than prior iterations. Like a search algorithm, this process (whether manual or automated) was clearly learning from my prior input. There were several clips similar to the point-of-view clip I'd so enjoyed in the prior session. \n\nEventually, however, like the prior session, the clips ventured into new territory, this time to largely negative results. We had entered fetish land, and many of the clips were actually turn offs. I quickly skipped through clips involving urination and worse. There was even one that involved simulated rape. I quickly skipped it once I realized what was happening. For a time, I was actually worried there wouldn't be any more clips I found sexy and that I'd have a hard time finishing the task before me. \n\nBut then I got to a few clips that were odd but strangely sexy. In one, a woman found a man who was asleep but who had an obvious erection. She pulled down his boxers, straddled him and began riding his cock. During the encounter, he eventually woke up and began to reach for her breasts. She swatted his hands away, making clear that she did not want him to move or do anything. She continued to ride him as if he were an inanimate object, eventually bringing herself to orgasm. It was a totally unrealistic scene, but there was something about it that was very hot. \n\nAnother scene I found myself enjoying, somewhat disconcertingly, was one that involved fake incest. A \"mother\" was sharing a bed with her son in a hotel room. He had an erection that he kept \"accidentally\" rubbing against her. Each time, her protestations grew weaker and eventually they were fucking. Again, it was a totally unrealistic (and poorly acted) scene, but there was something about it that turned me on. Although I could have held out longer, I was nearing the 50 minute mark and not certain any other good clips were on deck, so I let myself come when the \"son\" did.\n\nDuring the debrief, Dr Kaur asked a lot of questions about those final two clips, trying to understand what it was about them that turned me on. After some back and forth with her, I realized that what turned me on about the sleeping scene was the way it was all about the woman's pleasure. It was the exact opposite of your typical porn video. In that clip, the woman didn't care about the man's pleasure. She initiated the encounter solely to get herself off and the man was just a means to an end, a tool, no different than a dildo. And I found that different and sexy. \n\nAs for the incest clip, I realized (to my relief) that what turned me on about it wasn't the mother/son angle, but the fact that the \"mother\" was so turned on that she eventually allowed the encounter to occur, despite knowing it was wrong. Her lust overcame her judgment. In the heat of the moment, she wanted to fuck so badly that she was able to push all the consequences out of her mind. That was sexy.\n\nSESSION 4 (DAY 8)\n\nThe following Monday I showed up expecting things to proceed much as they had the first three sessions. But I was wrong. After hooking up the sensors, Dr. Kaur didn't leave the room. Instead, she pressed the button to activate the TV, and then she took a seat on the far side of the couch, clipboard in hand. Seeing the look of confusion on my face, she spoke up, \"Dr. Snyder told you at the outset that this study would involve direct observation. Today, that's my job. To be in the room with you. To observe you and take notes. Otherwise, your task is the same. I'll be silent.\"\n\nI swallowed. This was going to be awkward. I turned to the display and tried to focus on the first clip. It was a good one, a beautiful asian girl giving an oily fully body massage, but I was distracted and had trouble concentrating. I skipped to the next clip. This one was even hotter, a passionate threesome. After watching it for a minute, I finally felt my cock begin to stir. I reached under my gown and began to stroke it, trying my hardest to pretend that I was alone in the room. \n\nBut then a funny thing began to happen. The more turned on I got by the videos - and they were all fantastic - the less I cared that I was being watched. By the 25 minute mark, I had taken off the gown entirely, as I'd done in the prior two sessions, and applied a generous amount of the massage oil to my cock. Occasionally, I'd glance at Dr. Kaur, but her expression was stoic; she had her poker face on. \n\nAt around the 35 minute mark, a clip came on that featured a woman who looked so much like Dr. Kaur that I couldn't help but look over to my left to compare her to the real thing. It wasn't her, sadly, but as the actress unbuttoned her shirt, it was impossible not to picture Dr. Kaur doing the same. Before long, the actress was on all fours, getting aggressively fucked from behind. When the scene ended with a cum shot across her back, I couldn't hold back any longer. I stood as my orgasm washed over me, and as I shot my load across the floor, I turned and looked directly at Dr. Kaur. For just a moment, almost imperceptibly, her poker face cracked. I heard her draw in her breath, just a little, as she watch me ejaculate. But her composure returned almost immediately. \n\nShe wrote something down on her clipboard and then finally spoke. \"Because I observed you today, Dr. Carter will be doing your debrief.\" With that, she stood up and stepped out the door, leaving me naked and holding my cock. \n\nEventually Dr. Carter came to retrieve me for the debrief. She was a short woman with straight, dishwater blonde hair, attractive in a plain sort of way. After the standard questions about whether I'd abstained from sexual contact between sessions, her questioning focused almost entirely on Dr. Kaur. She asked me how Dr. Kaur behaved during the session, whether she spoke to me, what she said, whether she made any physical contact with me. I answered truthfully. Then she asked me whether I looked at Dr. Kaur while I was masturbating, whether I thought about her, whether I tried to picture her naked. As I was answering her questions, it occurred to me that it probably wasn't a coincidence that one of the actresses in the videos looked just like Dr. Kaur. It must have been part of the experiment, a way to get me fantasizing about the person observing me. It worked. And I was honest about it with Dr. Carter.\n\nSESSION 5 (DAY 10)\n\nThe fifth session began much like the fourth. Dr. Kaur took a seat on the other end of the couch and told me that she would again be observing me. Unlike the prior session, however, the awkwardness was largely gone. Having already ejaculated in front of this woman, there wasn't any need for modesty, so I quickly ditched the gown as soon as the videos started. \n\nBy the 10 minute mark, it was clear to me that Dr. Kaur was playing things differently than she had before. Her poker face was gone. Whenever I glanced over at her, she smiled back at me. Nothing flirtatious, just friendly, but very different than before. She also had her lab coat unbuttoned, under which she wore a bright red blouse. When I looked over, I could see a little of her breasts through the gap between the buttons on her blouse. As the session continued, I began to fantasize about Dr. Kaur again and tried to steal glimpses of her breasts more frequently, with less and less subtlety. \n\nEventually, around the 30 minute mark, she broke the silence.\"Do you want me to make it easier for you?\" \n\nI was so jarred by hearing her voice, that I froze, letting go of my erection. After an awkward pause, I finally stammered, \"w-what do you mean?\"\n\n\"I mean, if you're going to keep staring at my breasts, I can make it easier for you.\" Without waiting for a response, she put down her clipboard and stood up to take off her lab coat. Then she slowly unbuttoned her blouse, starting from the bottom and working her way up. By this time, I was back to stroking my cock but still in disbelief about what was happening. When she undid the last button, the tight blouse burst open, revealing a set of large round breasts encased in a white bra made of very thin material. The form of her protruding nipples was easy to make out through the thin fabric. After shaking off the blouse, she reached behind her back and undid the clasp of the bra, and with one more quick motion, the bra was off and thrown to the floor with her coat and blouse. Her breasts were magnificent, better than any I'd seen before in real life, so dark and round and perfect. \n\nNaked now from the waist up, wearing nothing but a knee length black skirt, Dr. Kaur sat back down on the couch, as I continued to stroke my cock just three feet to her right. I heard the sounds of sex coming from the monitor, but I was paying no attention to what was on the screen. My attention was entirely on Dr. Kaur and her breasts. I imagined myself coming all over them, and that thought pushed me right over the edge. A few seconds later, ropes of cum came shooting out of my cock. Most of it landed on the couch or floor, but a few drops landed on Dr. Kaur's right leg, just below the knee. She noticed, but didn't seem to mind. \n\nShe smiled at me as she stood to gather her clothes, using a tissue to wipe the cum off her leg. She finished dressing before I did and left the room without a word.\n\nThe subsequent debrief was again with Dr. Carter. For the first time in the course of the study, I wondered whether I should lie during the debrief. I didn't know whether what Dr. Kaur had done was supposed to be part of the experiment or not, and I didn't want to get her in trouble. And, selfishly, I didn't want to say anything that might jeopardize my chances of sharing another session with her. But I was also hooked up to a polygraph, and I couldn't afford to jeopardize my own status in the study and risk losing out on $10,000. So when Dr. Carter asked me about Dr. Kaur's behavior during the session, I was honest. I told her exactly what happened, down to the detail of what I was imagining when I finally ejaculated.. \n\nBut when asked whether there was any physical contact between us, I was emphatic that there was not, remembering Dr. Snyder's warning on the first day that there was to be no physical contact during the sessions. Dr. Carter seemed satisfied with my answers, and her reaction didn't suggest that she was surprised by anything I told her. That led me to conclude that Dr. Kaur's behavior was \"within bounds\" and just another part of the study, which was getting crazier by the day.. \n\nSESSION 6 (DAY 12)\n\nThis was the last session of the week, and I was eager to see where it went. When Dr. Kaur again told me that she would be observing the session, I was thrilled. This time, she ditched her lab coat even before hooking up the sensors. She was wearing a simple, yellow tank top underneath, one that showed a lot of cleavage. As she bent over me to attach the sensors, I could see that she was not wearing a bra. By the time she attached the last sensor, the ring around my cock and balls, I was already starting to get an erection. It could have been my imagination, but I felt that when she lifted my cock to attach the sensor, she did so in a way that was more sensual than clinical. By the time she was done, I was fully hard. \n\nIf there was a theme to the videos that day, it was that they all ended in pretty spectacular cumshots. Not facials, and nothing fake, but passionate sexual encounters that ended with the man pulling out and ejaculating on some part of the woman's body, sometimes her breasts, sometimes her stomach, occasionally a hip or her ass. Unlike the previous sessions, Dr. Kaur seemed to be paying more attention to the videos than to me, and she seemed to be enjoying them. Whereas before she always sat with her legs folded over one another, a very professional pose, now her knees were apart and she'd allowed her skirt to ride up her legs to almost mid thigh. She had put down her clipboard after less than ten minutes. The thought that she was genuinely turned on by what she was seeing made me watch the videos in a totally different light, and made them all the more arousing. \n\nAt around the 25 minute mark, without saying a thing, Dr. Kaur casually slid the strap of her tank top off of her right shoulder, the side nearest to me. As the strap fell down her right arm, the right side of the tank top fell forward, exposing her entire right breast. With her left hand, she began touching her exposed breast, slowly tracing circles around her nipple with her index finger. By now her right hand was between her legs, touching her inner thighs, as she continued to watch the screen. \n\nMy attention was split between the videos and Dr. Kaur, and the combination left me enormously aroused. At times I had to stop touching myself to keep from coming too soon. Again, it was Dr. Kaur who eventually broke the silence. \"When it's time, I want you to come on me. I know that's what you want.\" \n\nI was stunned, but she was absolutely right. Whether it was from watching all the cumshots on screen or some deep-seated desire I never really knew I had, at that moment, I wanted to cum on her more than anything in the world. \"Are you sure that's okay?\" I finally asked.\n\n\"Yes, as long as you don't touch me.\" With that, she pulled the other strap of her tank top down and let the whole thing fall to her waist, leaving her naked from the waist up. With her hands, she cupped her breasts, pushing them forward and together. It was clear where she wanted me to aim. \n\nI didn't want to drag this out. What I wanted more than anything was being offered to me, and I wasn't going to pass up the opportunity. I stood, cock in hand, and stepped over in front of her, stopping just in front of the couch. My feet were right up against the front of the couch, but her legs were spread wide, so our feet didn't touch. She leaned forward, offering up her breasts, and looked me directly in the eyes. \"Come on me, Jake,\" was all she said.\n\nI grunted as a powerful orgasm gripped me, and watched as my semen shot out. The first blast hit her just at the base of the neck, higher than I had intended. The second landed on her right breast. Once the last of it had been expelled, I took a step back and surveyed the aftermath. A trail of cum led from her neck down between her breasts to her belly, and a number of drops were clustered around her right breast, contrasting sharply with her dark skin. On her face was a smile, the first truly mischievous one I'd seen from her. She winked at me, and then stood up to wipe herself off. Neither of us said anything as we got dressed.\n\nThe debrief with Dr. Carter again focused on Dr. Kaur's behavior. I noted that, unlike the prior sessions, she had seemed more focused on the videos than on observing me. Dr. Carter asked how that made me feel, what impact it had on my own arousal. I explained that the shared experience, the thought that someone else was as aroused as I was, heightened the experience and made me even more turned on. When I told her about Dr. Kaur exposing her breast, she asked me to compare the experience to the prior session. I explained that this time was much more arousing, even though I'd already seen her breasts, because it seemed like Dr. Kaur did it as much for her own pleasure as for mine. She didn't seem to be just doing me a favor. \n\nAgain, none of this seemed to surprise or elicit any reaction from Dr. Carter. But when I described how the session ended, with Dr. Kaur inviting me to ejaculate on her breasts, Dr. Carter raised an eyebrow. Though she didn't say so, I got the distinct impression that she was not expecting that answer, that perhaps Dr. Kaur had deviated from the script. When Dr. Carter then asked whether Dr. Kaur had made any physical contact with me, she closely scrutinized my response. She told me that the machine indicated that I might be lying, and she reminded me that absolute candor was a condition of my continued participation in the study. I explained that the only time Dr. Kaur touched me was when she was attaching the sensors, but that, unlike the prior sessions, I already had an erection at that point. She seemed to accept my clarification. \n\nSESSION 7 (DAY 15)\n\nThe following Monday, I was pleased to see that Dr. Kaur was again in the room. Following the last debrief, I worried that I'd somehow gotten her in trouble and that maybe she wouldn't be allowed to observe me any further. ",
        "Not only was she there, but her entire demeanor seemed different, more friendly and less professional. She was all smiles. She was again wearing her lab coat, which went down almost to her knees, but when she bent over to pick up the sensors, the coat rode up to her mid-thigh, and I saw no sign of anything underneath it. If she was wearing a skirt, as she normally did, it was a very short one. As she attached the sensors, I tried to get a look at what kind of shirt she was wearing, but her lab coat was buttoned up to the very top, so I couldn't see what was underneath it. Whatever it was had to be low cut because no part of it was visible above the coat. I had my gown off before the videos even started. \n\nThe theme of the day, based on the first few videos, seemed to be role play scenarios. There was a scene with a female prison guard screwing an inmate through the bars of his cell, a scene with a nurse fucking a patient, and then one with a Japanese teacher taking advantage of a couple of her students. All of them were pretty sexy, so I just let them roll. \n\nAnd the truth was, I was far more interested in what was happening three feet to my left than what was happening on the screen. Within minutes after the videos started, Dr. Kaur had uncrossed her legs. When she did so, the lower part of her lab coat fell away to each side, revealing most of her legs and inner thighs. She wasn't wearing a skirt at all. I wasn't even sure she was wearing panties. A few minutes after that, her hand moved down between her legs, spreading the two sides of her coat all the way up past her navel. I could now see, plain as day, that she wasn't wearing underwear either. Her pubic hair was dark and neatly trimmed. Like me, she was now touching herself.\n\nAs we continued to watch the videos, all similarly themed to the first few, she began to masturbate in earnest, occasionally letting out a quiet moan or sigh when something hot happened on screen. This continued for a quite a while, as both of us built up a head of steam. \n\nJust after the 30 minute mark, she finally unbuttoned her lab coat, revealing - as I had come to suspect and hope - that she had no top on either. She left the coat on, but pulled it open exposing both of her magnificent breasts. With her breasts free, she used her left hand to caress them and pinch her nipples as her right hand continued to stroke her clit.\n\nBy the 40 minute mark, I had stopped watching the screen altogether and my attention was focused exclusively on her. Slowly, I had inched closer to her side of the couch until I was less than a foot from her. She continue to watch the screen, but her gaze often turned to my erection. Her moaning had steadily increased in frequency and urgency, and it seemed that she was not far away from orgasm. \n\nBy the 45 minute mark, she seemed to be right on the verge of climaxing. Her eyes were wide open and filled with urgency. That's when she touched me for the first time. Her right hand reached over and touched my thigh. Her fingers were wet with her own juices and her touch felt like a ripple of electricity coursing through my body. A rule had been broken. A taboo violated. She finally spoke, nearly out of breath, \"I need to touch your cock.\"\n\nWithout waiting for a response, she rolled off the couch and onto her knees in front of me. With her left hand, she reached for my cock, grasping it firmly. With her right hand she continued to touch herself. She was looking right into my eyes as she stroked my cock, very very slowly. She must have known that I was on the verge of climaxing but wanted to stretch the moment out. I felt like I was in a dream. Her big, beautiful brown eyes, locked on mine. Her soft breasts now resting on my legs. \n\nThen she leaned forward and took my cock into her mouth. Her free hand moved down and caressed my balls as her lips moved slowly up and down my shaft. It was surreal and arousing beyond anything I'd ever experienced. I was hovering, dancing just on the very edge of orgasm, poised to explode. \n\nAnd apparently so was she, because the next thing I knew, my cock was no longer in her mouth and she had moved in closer. He face was less than a foot from mine, our eyes locked. Her mouth was wide open. Her orgasm was coming. Her right hand was still stroking her clit, but her left hand was gripping my cock firmly, pressing the tip up against her right nipple. As the orgasm washed over her, she shuddered and silently mouthed \"oh god,\" never breaking eye contact. It was one of the more beautifully erotic things I've ever seen. And so incredibly intimate. \n\nAs she came, she gripped my cock even harder, pushing me over the edge with her. I shuddered as well, unloading my cum up onto her right breast. When we were both done, she sat back on her knees, her right breast and stomach dripping with semen. She slowly regained her composure. \n\nAfter she'd cleaned herself off and put her lab coat back on, she finally spoke. \"I shouldn't have done that. That went too far.\" Before I could say anything, she was out the door. \n\nDuring the debrief, Dr. Carter questioned me at length about Dr. Kaur's behavior during the session. I was fully candid in my response until the very end, when she asked me the question I was dreading: \"Did Dr. Kaur make any physical contact with you during the session.\" Fearing I could harm her career, and, selfishly, worried that an honest answer might put an end to our sessions together, I lied. I said that there was no contact, that the session ended much like the prior session, with me ejaculating onto her, but with no physical contact. \n\nI could tell almost immediately that Dr. Carter didn't believe me. She squinted at the polygraph data on her monitor. Eventually she spoke: \"The machine strongly suggests that you are not being truthful with me. I'm going to give you another chance to answer my question. I've got to warn you, though, if I leave here thinking you haven't been completely candid with me, and I tell Dr. Snyder that, the odds are he will cut you from the study.\"\n\nI swallowed. I didn't want to get Dr. Kaur in trouble, but I hadn't made her do any of the things she did. It wasn't my fault. And $10,000 was a lot of money. Moreover, even if I stuck to my lie and got kicked out of the study, it probably wouldn't spare her from repercussions, because it would mean they didn't believe me, and, necessarily, that they believed she had crossed the line somehow. \n\nSo when Dr. Carter asked the question again, I apologized and answered truthfully. I described how the session had really ended, how Dr. Kaur had grasped my cock and given me a blowjob. As I described the encounter, Dr. Carter again raised an eyebrow, and this time she shook her head slowly in disapproval. Not directed at me, I don't think, but toward her colleague. When I was finally done, she said that she believed me, but warned me that I wouldn't get another chance, that if I lied again, I'd be cut from the study.\n\nI asked her what would happen with Dr. Kaur. She said, \"I don't know, and I couldn't tell you even if I did, but this is serious. It's a violation of the study protocol, and she should have known better. Whatever happens, I don't imagine you'll be seeing her any more for the remainder of this study.\"\n\nI left with a strange mix of emotions. On the one hand, I'd just had possibly the most erotic experience of my life. On the other, I may have also gotten Dr. Kaur fired, and I felt terrible about that.\n\nSESSION 8 (DAY 17)\n\nOn Wednesday, I showed up not knowing what to expect. I hoped to see Dr. Kaur again, but my gut told me that was unlikely. Sure enough, when the door opened, it was Dr. Carter, not Dr. Kaur. She quickly attached the sensors, including the one around my penis, in a very clinical manner. No smiles or small talk. But then I was thrown a real curveball.\n\nThe door opened and another study participant was shown into the room. She had thick brown curly hair and, like me, was clad in a hospital gown with sensors attached to her forehead (and presumably other places underneath the gown). I recognized her immediately. It was Abby, the girl who'd captured my attention on the day I'd signed up. She looked as nervous as I felt.\n\nDr. Carter asked her to sit down on the other end of the couch, where Dr. Kaur usually sat. Once she was seated, Dr. Carter gave us our instructions for the session. \"This is going to be just like the first few sessions. When I press the button, videos will start playing. This time I'm going to take the remote away, though, so you'll have no ability to skip any of them. Your task is to masturbate until you reach orgasm. As usual, we'd ask that you try to last at least 30 minutes, to allow us to collect sufficient data. Do either of you have any problem with what you're being asked to do?\"\n\nWe looked briefly at each other, and then shook our heads.\n\n\"Good. Now remember, no physical contact with each other. Any violations of that protocol will result in dismissal from the study.\" With that, she pressed the red button and turned to leave. \"Oh, and Jake, this is Abby. Abby...Jake.\" Then she was out the door.\n\nI raised my hand and waved hello to Abby sheepishly, not sure what else to do. She gave me an equally sheepish half smile and then turned forward to watch the screen. The scene on the monitor was already getting heated. A good looking man was going down on an equally attractive woman. She was seated on a bar stool, leaning back against a kitchen counter, her tank top pulled up over her breasts. She sounded like she was enjoying herself. And it just got hotter from there.\n\nBy the time the couple was fucking on the kitchen counter, Abby had her hand moving beneath her gown. I was thankful for that. I didn't want to be the first. But I soon followed her lead, reaching under my gown and grasping my already hard cock. The videos were all incredibly hot. Attractive couples, in HD, having passionate sex. Even if I'd had the remote, I probably wouldn't have skipped through any of them. Abby seemed to like them too. I wondered if we were paired together because we had similar preferences. \n\nThough we kept our gowns on, we made no effort to hide our pleasure. Before long, Abby was arching her back and softly moaning. The longer the session went on, the more often I found myself stealing glances at her. She was clearly doing the same thing because a few times our gazes met. The first time it happened, we both immediately looked back at the screen, embarrassed to have been caught looking. But the second time, our gaze lingered a bit and Abby actually flashed me a quick smile. Her curly brown hair had been tossed around by her activity and a few loose strands draped over her lightly freckled face. She really was quite beautiful, not striking in the same way that Dr. Kaur was, but she had that no-makeup, girl-next-door type of beauty, and her eyes conveyed a clear intelligence. \n\nShe was using her right hand to pleasure herself, which caused her gown to ride up just enough for me to glimpse a little of her ass and lower back. The sounds she was making, and the way she kept arching her back, were an enormous turn on. By the 35 minute mark, I felt myself nearing orgasm, and I must have looked like it too, because I heard Abby say, \"don't come yet.\" She was panting, out of breath. \"I'm almost there . . . I want to come with you.\" \n\nI slowed down a bit, waiting for her to catch up, watching her. After about a minute, she looked over at me and our eyes locked. She opened her mouth and her eyes wide, and I could tell her orgasm was coming. I let myself come too, and we both shuddered, never breaking eye contact. I felt my cum soak the inside of my gown. \n\nAs we caught our breath, Abby broke into a warm smile. She closed her eyes and shuddered again, still smiling, as if trying to relive the orgasm she just experienced. When she opened them again, she said, \"thanks for waiting. I didn't want to have to finish by myself.\" She paused. Then she said, with obvious sarcasm, \"because that would have just been weird.\" She smiled and we both laughed.\n\nThen she got up and hit the button. About 30 seconds later, Dr. Snyder opened the door, and Abby followed him out, presumably back to wherever she had left her clothes and then to do her post-session debrief. On her way out the door, she gave me a little silent wave with her right hand and winked. Once she was gone, I quickly dressed, and by the time I was done, Dr. Carter had come to retrieve me.\n\nDuring the debrief session, I got the standard questions about whether I'd abstained from sexual contact for the 48 hours prior, whether I'd discussed the study with anyone, and so on. The bulk of the time, however, was devoted to questions about Abby. She wanted to know whether I found Abby attractive (definitely yes), whether it felt awkward masturbating in front of her (yes, at first), and whether I was thinking more about Abby or the videos when I climaxed (definitely Abby). She also asked about the logistics of the encounter, whether we kept our gowns on (yes) and whether there was any physical contact (no.). None of my answers seemed to surprise or concern her. \n\nAt the end of the debrief, I asked what had happened with Dr. Kaur. Dr. Carter paused before answering, probably debating how much to share with me. Ultimately, she responded with a question: \"Did you see her here today?\" I shook my head. \"Well, I think you have your answer.\" \n\nSESSION 9 (DAY 19)\n\nOn Friday morning, I was quite pleased when the door opened and Abby was once again ushered inside. She smiled and said \"hi Jake\" as she took a seat. I smiled back, noticing that she was wearing her gown backwards, cinched in the front, like a robe. The session began much as the last had, except for the videos, which had a new theme. They all seemed to involve some sort of exhibitionist element, people engaging in sexual acts in public places or while other people watched. As before, the video clips were all very high quality, with attractive actors and high production value. And before long, we were both touching ourselves beneath our gowns.\n\nNo doubt inspired by the videos, Abby was the first to up the ante. She spread her legs wide. Because she was wearing her gown backwards, the two sides of the gown fell to the side, much like Dr. Kaur's lab coat the week before, exposing her legs all the way up to her pussy. I could now see her fingers buried in her short brown pubic hair. There appeared to be some sort of small sensor attached just above her clitoris. I watched her, mesmerized. Before long, I followed suit, lifting my gown up above my waist and exposing my cock. I squirted some massage oil into my palm and rubbed it along the length of my erection. Her eyes were glued to my cock as she continued to stroke herself. After a minute or so, I removed my gown altogether and tossed it into the corner of the room. \n\nAbby wasn't as quick to open the rest of her own gown, and I started to wonder if maybe she was self-conscious about her breasts or stomach. But finally, around the 25 minute mark, she undid the knot around her waist and let the sides of the gown fall completely to the side. She seemed to blush as she did so, perhaps embarrassed, but she had nothing to be embarrassed about. Her breasts were on the small side, but they were plenty sexy, and her body overall was amazing. Slender and fit, olive-toned from head to foot. She was the kind of girl who no doubt looked fantastic in a swimsuit. And the sensors attached to her breasts and tummy somehow enhanced her sexiness.\n\nShe must have been able to tell from the way I was looking at her that I was a big fan of what I was seeing, because she seemed to get comfortable in her nakedness pretty quickly. By the 35 minute mark, we were both aggressively stroking ourselves and not paying much attention to the videos on the monitor. It seemed clear that both of us were at a point where we could climax at any time and were just waiting for the other to give the go ahead. Abby finally broke the silence. \"I'm ready to come, Jake, but I want to watch you go first.\" \n\n\"Okay,\" I managed to reply, \"I'm ready.\".\n\n\"Come for me, Jake. Let it go.\"\n\nAs instructed, I let myself come, grunting loudly as I did so, and moments later ropes of semen came spurting out of my cock. I was leaning so far back that much of it ended up high on my chest. Upon seeing that, Abby began to shudder, and said \"oh god!\" as her orgasm washed over her. As she had before, once she'd finished coming, she smiled and closed her eyes. \"Oh my god, that was fun,\" she said as she seemed to replay the orgasm in her mind. \n\nWe both sat there silently for a while, catching our breath, neither of us in any particular hurry to head to our debriefs. When Abby eventually stood up, her gown still on but wide open, she grabbed a tissue off the cart and handed it to me to wipe myself off. As she did so, she bent over me, kissed me quickly on the forehead, and said, \"thanks for a good time, Jake.\" Almost as soon as she'd done so, she must have remembered the \"no contact\" rule, because she suddenly looked at me nervously, like she'd done something wrong. \n\nReading her thoughts, I smiled back reassuringly and said, \"don't worry, I doubt that's the kind of contact their concerned about.\" \n\n\"Yeah, I suppose not.\" By then, everything had gotten a little awkward. Abby cinched her gown back up and I put mine on. We didn't say much else before we were led away to our respective debrief sessions.\n\nDuring my debrief, Dr. Carter asked me a lot of questions about Abby's naked body and how it made me feel to look at it. I answered as truthfully as I could, noting that I thought she was exactly my type. When Dr. Carter eventually got to the question of whether we'd had any physical contact during the session, I was completely honest and described the forehead kiss at the end, not thinking it was that big a deal. To my surprise, though, Dr. Carter seemed to think it was a big deal. She asked me to describe it a number of times and checked the polygraph readouts carefully as I answered. Finally, she told me that the kiss was a violation of the protocol and that she'd have to discuss it with Dr. Snyder. She said Dr. Snyder would make a decision regarding our continued participation in the study by Monday morning. Then she sent me home.\n\nSESSION 10 (DAY 22)\n\nI didn't think they'd kick me out of the study for the forehead kiss, but I wasn't entirely sure about Abby. So when things started out differently on Monday morning, I started to worry that I might not see her again. After I'd changed into my hospital gown, Dr. Carter came into the room by herself. She told me to come with her. I followed her silently, a million questions running through my mind. We walked down the hall to another \"exam\" room. When I walked through the door, Abby was already inside, seated on a black leather recliner. Dr. Snyder was also in the room, standing just to her left. Unlike the room I'd spent every previous session in, this one had no TV monitor and no couch. Directly across from Abby was an identical black leather recliner. Dr. Carter motioned for me to sit in it, which I did. It was Dr. Snyder who first spoke.\n\n\"Today is going to be a little different. As you can see, there's no TV in this room, so you're not going to be watching videos today. Your task is the same as always. You're just not going to have anything to look at but yourselves. Understood?\"\n\nWe both nodded.\n\n\"And before I go, I just want to remind you once again. There is to be no physical contact between you, of any kind.\" He looked at Abby as he said that. \"Any further contact and you will not complete the study. Understood?\"\n\nWe both nodded again.\n\n\"Alright, we'll see you on the flip side.\" As he closed the door behind him, I could see that a timer hung on the back of the door. It had started counting up.",
        "Without the video screen to stare at, neither of us knew quite where to look or how to get things started. We were just three feet apart. It was awkward. Abby finally broke the silence.\n\n\"Before this study, I never would have believed that the absence of hardcore pornography could make a situation seem awkward.\" She broke into a smile, as I laughed out loud. \n\n\"Yeah, this whole thing is so surreal,\" I said. \"When we're eventually allowed to talk about it, no one's going to believe us anyway.\" Then I got to the point. \"So how should we do this?\" \n\nShe thought for a moment and then replied, \"well, I say we start by ditching these ugly gowns. We've already seen everything underneath, and I'm going to need something more exciting to look at if I'm going to make this work.\" She flashed the same mischievous grin I'd seen toward the end of the prior session. \n\n\"Hard to argue with your logic.\" We both rose and disrobed, throwing our gowns into the corner of the room. I realized, as I did so, that my penis wasn't nearly as impressive in its flaccid state, and I immediately set to rectifying that, grasping it with my right hand as I took in the view in front of me. Abby's body was just as stunning as I remembered. So lithe. So toned. By the time we sat back down in our recliners, I was already getting hard. \n\nWe started out slowly, staring at each other's bodies as we touched ourselves. By the 15 minute mark, we were both very into it, and Abby was starting to moan. I stared at her beautiful breasts, and watched as a drop of sweat trickled down between them when she arched her back. Her eyes were locked on my cock, which stood upright like a monument. \n\nThen she startled me with a question: \"what are you imagining, Jake? I want to know what you're fantasizing about.\"\n\nI hesitated for a moment, wondering how honest to be. \"I'm imagining taking your breasts into my mouth, kissing your nipples.\" \n\nShe moaned. \"What else? Tell me more.\" \n\n\"I'm imagining what it would be like to go down on you, to make you come with my tongue.\"\n\n\"Oh god...that's a good answer.\" She seemed to stroke her clit even faster than before. \n\n\"Your turn. What are you imagining?\"\n\n\"I'm imagining you stepping over here and driving that cock into me. Hard. Over and over. Feeling your cock deep inside me.\" Her eyes were wide with lust as she said it.\n\nI was floored by her response. Truth be told, despite what I'd said to her, I had been imagining the exact same thing, from the beginning. I pictured myself saying 'to hell with the rules' and lifting her legs onto my shoulders and thrusting my cock deep inside of her. Her pussy was a mere three feet from my cock and the urge to bridge that divide was almost overwhelming.\n\nWe continued like that for a while. Eventually, I looked over at the door and realized that we were at the 40 minute mark. Somehow 20 minutes had passed since the last time I glanced at the clock. It was time to end this session before we ended up costing ourselves $10,000. \n\n\"I'm ready when you are,\" I said to Abby. \n\n\"I want you to come on me,\" she said. \"It's not a violation of the rules. Just stand up, come over here and shoot it on my belly.\"\n\nI didn't even hesitate. I stood and took a step forward. Her legs were spread wide, so I moved my legs right up against her recliner, my cock looming over her. Her eyes were wide and focused on my cock, as I stared at the toned body splayed out before me. I stroked my cock in a final flurry, felt my orgasm coming, and watched as my cum shot out in several volleys, landing on her flat belly, her arms, and her chest. \n\nAs her left hand touched the droplets of cum, smearing them into her skin like she was applying sunscreen, her right hand continued to furiously stroke her clit. Within 30 seconds, she climaxed as well, screaming \"oh fuck,\" as her whole body shook. I just stood there, in awe of her sexiness, overwhelmed by the whole situation. Eventually, I gathered myself and gave Abby some tissues to clean herself off. I was about to help her, but I remembered Dr. Snyder's words and thought better of it. \n\nWe didn't say much of anything to each other after that, but we were both all smiles. Eventually Dr. Snyder and Dr. Carter came to retrieve us. There was nothing particularly notable about the debrief, though when I described how the session ended, I got the same eyebrow raise from Dr. Carter that I got when I'd described cumming on Dr. Kaur. I didn't know how to read her reactions, but she seemed satisfied that I was telling the truth and that there had been no physical contact.\n\nSESSION 11 (DAY 24)\n\nTo my delight, Wednesday's session began just as Monday's had, with Dr. Carter leading me to a room where Abby and Dr. Snyder were waiting. Once I was seated, Dr. Snyder spoke up. \"Good morning. So, as you know, this is the last week of the study and there are only two more sessions left, including today's. We'll wrap things up on Friday if all goes well. Today is going to be just like the session on Monday. We're going to leave you two alone, with no monitor. Your task is the same as always.\" \n\nAnd then he left. The timer on the back of the door began to count upward. Within seconds, we had both disrobed and were completely naked except from the sensors on various parts of our bodies. The awkwardness that had existed even as recently as the last session was almost completely gone. We were touching ourselves almost immediately, drinking in the sight of each other's naked bodies. In no time at all, I had a raging erection. \n\nWe were mostly silent for the first 15 minutes or so, until Abby finally spoke. \"Tell me what you're doing to me in your mind.\" \n\nI smiled. \"I've got you bent over that chair. I'm cupping your breasts as I pound my cock into you from behind.\"\n\n\"Oh god. That's a really good answer.\" She closed her eyes and tried to picture it too. Then, as if suddenly inspired, she spun around on her chair and climbed on her knees, leaning forward on the backrest and sticking her ass toward me. She wiggled it, teasing me, as she continued to touch herself, moving her hand up and down her pussy. She had such a tight, perfect little ass. At that moment, I wanted nothing more in life than to reach out and grab ahold of it with both hands. It took every bit of my willpower not to. \n\nAfter a minute she flopped back down on her seat. It was my turn. \"Tell me what you're thinking,\" I said. \"When you close your eyes, what are we doing?\"\n\n\"Mmmm, let's see\" she closed her eyes, still touching herself. \"I'm sitting on your lap, riding up and down on your cock.\" Her voice was so seductive. \"It's such a nice, hard cock. You've got your hands on my hips, grabbing them tight, your mouth on my breasts. I've got my arms wrapped around your neck...\" She trailed off, momentarily lost in her fantasizing.\n\nI hung on her every word. And when she stopped talking, I took the opportunity to reach for some massage oil from the cart. Abby opened her eyes as she heard the sound of the oil squirting into my palm. Her eyes went wide, as if she'd just had an idea. She reached for the other bottle of oil on the cart. But instead of squirting a small amount of it onto her hand, as I had done, she slowly unscrewed the cap. Then, flashing a devilish smile, she turned the bottle upside down, letting the clear, thick liquid dribble out onto her breasts and down onto her belly. She moved the bottle around, letting it dribble onto other parts of her body, her shoulders, her thighs, her pussy. \n\nThen she put the bottle down and began to rub the oil in, all over, moving her arms slowly, making sure she touched everywhere she could. Soon her entire body was glistening, and the oil was everywhere, all over her chair and the floor around her feat. She smiled as she slid around on her now slick seat, her hips sliding left and right, back and forth, her oil-soaked fingers sliding in and out of her pussy. \n\nOnce I snapped out of my trance, I decided to follow her lead. I unscrewed the lid of my own bottle and quickly dumped a large amount of oil onto my chest. The oil ran down my stomach and onto my cock and balls. I put the bottle down and began rubbing the oil in, on my chest and shoulders, my legs, my ass, my cock. The oil was everywhere, and I couldn't help but slide around in my seat. It felt like being on a slip-and-slide. It was a sensory overload. \n\nBut the physical and tactile sensations I was feeling were nothing compared to the sight of Abby's lithe, oil-soaked body slithering around right in front of me, one hand stroking her clit and the other massaged her own breasts. I'd never seen anything more sexy in my entire life. I'd never been more turned on in my entire life. \n\nAnd Abby looked like she was similarly overwhelmed by the intense eroticism of the moment, barely able to contain herself. She slid up and down, and then all the way down onto the floor, where she turned around and began sliding her chest up and down the seat of the chair, her knees on the floor, her glistening, oil-soaked ass cheeks just a foot in front of me, taunting me. She looked over her shoulder at me as she continued to touch herself, her fingers sticking out between her legs.\n\nWhen it finally happened, it happened quickly.\n\n\"Oh god, Jake, just fuck me,\" she begged. \"Please. I need your cock. I don't care about the money anymore.\"\n\nAt that moment, I didn't care either. Even today, far removed from that moment, there's no amount of money I would trade for that experience. \n\nI was in motion almost before the words left her mouth. And I went straight for the prize. As slick and oil-soaked as we were, my cock slid into her instantly and completely, in one smooth motion.\n\nThe noise she made as my cock slid into her from behind is impossible to describe. It was part scream, part moan, part squeal, a sound of ecstasy and relief and pure animalistic passion. As I grabbed her slick hips and began thrusting into her, she came almost instantly, screaming \"oh fffuuuuck yes!\" I felt her pussy tighten on my cock as it spasmed and her whole body convulsed. I stopped and pulled out of her, using every ounce of my willpower to keep myself from coming. I didn't want it to end so quickly. \n\nWhen I'd regained my composure, I slid my cock back in. She looked back over her shoulder at me, a puzzled look on her face. She must have thought I'd come when she did. When it became clear to her that I was not done with her yet, a wicked smile flashed across her face. I leaned in and scooped an arm under her chest, lifting her torso up toward mine. She turned her head and we began kissing, passionately, as my hands caressed her oil-soaked breasts. The sensors attached to her chest popped off. I continued to fuck her from behind, our greased bodies sliding against each other. \n\nWithin minutes, it was clear that she was again building toward climax, moaning in between kisses. It was then that I pulled out of her and spun her around, lifting her back onto the chair. She immediately spread her legs and lifted them up, beckoning me to re-enter her. As I moved in, she held her hands out to touch my chest. As I entered her, she watched my cock, wide eyed. Soon we were kissing again, her legs up over my shoulders as I drilled her with my cock. The sensor above her clit popped off under the relentless pounding. Before long she was nearly gasping in pleasure. \n\nThen her eyes widened. She started saying \"oh god...oh god...oh god...,\" over and over, her voice rising with each iteration. Finally, she cried \"you're gonna make me come again! Oh god yes!\" and she threw her head back as her second orgasm gripped her. \n\nAs her pussy tightened on my cock, I'd finally reached my limit. I knew my own orgasm was imminent. Not knowing whether it was okay to come inside her, I pulled out. Not missing a beat, she reached down and grasped my cock with both of her hands, pumping it rapidly. I blurted out \"oh fuck, Abby!\" as a tremendous orgasm washed over me. As my cum shot out all over her belly, her expression was one of pure joy and accomplishment, without even a hint of regret, even though we both knew we'd just made ourselves $10,000 poorer.\n\nWhen it was all done, I collapsed back on the floor on my knees, emotionally and physically spent. Abby slid down to join me. She kissed me again, gently, and pushed me down until I was lying flat on my back on the floor. She then nestled into me as I put an arm around her, her head resting on my shoulder. We both looked over at the clock on the door. Only 38 minutes had passed since Dr. Snyder had shut the door. \n\nAfter a minute or so of silence, I was the first to speak. \"There's no point trying to lie about this, is there? They'll know.\"\n\n\"Yeah, they'll know,\" she replied.\n\n\"So much for that $10,000.\"\n\n\"Yep. It's gone.\"\n\n\"You know, as badly as I needed that money, I don't think I'll ever regret what we just did. That was so...so...\"\n\n\"Mind-blowing? Life-changing? Fucking amazing?\"\n\nI laughed, \"yeah, all of those things.\"\n\nAbby lifted her head and propped herself up on her elbow as she looked at me. With her free hand, she carefully removed the sensors that were still attached to my chest, as well as the one remaining on her belly. \"You know,\" she said, as she delicately untwisted and removed the sensor attached to my cock, \"we've already blown the money. Let's not waste the rest of this time.\" She leaned in and kissed me. \n\nThen she slid over on top of me, straddling my waist. She reached over and grabbed one of the massage oil bottles again. She turned it over and dumped the remaining oil down her chest and onto mine. Then she leaned forward and began sliding up and down on top of me, our bodies so covered in oil that she move frictionlessly. As her legs and pelvis slid up and down over my cock, I could feel the blood already returning, my erection growing. After a minute of this incredible full body massage, I was once again as hard as a rock. As she slid down, my cock slid between her legs and up between her ass cheeks, halting her progress. No longer able to slide down, she moved from side to side, squeezing and sliding my cock between her legs Then she'd slide up again, letting my cock fall back onto my stomach, only to lift it up again on her way back down. \n\nEventually, she reached back with her hand, grabbed my cock, and guided it inside of her. Once it was all the way in, she sat up. Placing her hands on my chest to support herself, she began grinding her hips into my cock. I put my hands on her hips, still slick with oil, and felt the rhythm of her movements. Otherwise, I stayed still, content to let her do all the work, admiring the stunning beauty of her glistening, oil-soaked body and the skill and confidence of her movements. \n\nSteadily she increased her pace and began to moan more frequently. After five minutes or so, she sat all the way back, resting her hands on my thighs, and she continued to grind her hips into me. I reached forward and fondled her breasts, sliding my hands up and down her chest. By now, even her hair was covered in the oil, much of it plastered against her face, but it somehow made her look even more sexy and wild. She was just so beyond caring at that point, so lost in her own lust. \n\nAnd then, abruptly, she stood up, letting my cock slide out of her. She stood over me, a foot on each side of me, and extended me a hand, clearly indicating that she wanted me to stand too. As soon as I was up, she grabbed me around the waist, turned me 90 degrees and then push me in the chest. I fell back into the leather recliner I'd started the session in. Then she crawled onto the seat with me, straddling me, her knees on either side of me, and deftly lowered herself down onto my cock. \n\nAs soon as I was inside her, she put her arms around my neck and began to move, pistoning up and down on my cock. Her breasts were right in face, and I took each of them into my mouth in turn. Eventually she lowered her lips to mine and we began kissing again, passionately. I could tell from her increasingly urgent motions and noises that she was nearing another orgasm, which was good, because I was too. \n\nAs she neared climax, she stopped kissing me and leaned forward until her mouth was near my right ear. She began whispering in my ear, \"oh, Jake, I love your cock...it's so deep inside me, Jake...you're gonna make me come on your cock again...oh god...oh god...\" She was almost there. \"Oh god...I want you to come inside me, Jake...it's okay...oh fuck...oh my god...here it comes...oh god...oh god...oh god...\" Then she came hard, nearly crushing my neck with her arms as she shuddered and convulsed. I came too, grabbing her hips tightly as I released everything I had inside of her.\n\nWhen we finally came to a stop, we both looked over at the clock on the door. 58 minutes and counting. It was time to get cleaned up and face the music. We did our best to wipe the oil off with the single hand towel on the cart and a lot of tissues, but there was only so much we could do. Before I hit the button on the wall, I looked over at Abby. \"Moment of truth. Are you sure we shouldn't try to lie about this?\"\n\nShe shook her head. \"No, let's go out with dignity.\" We looked at each other, at how ridiculous we both looked, clad in hospital gowns with oil-soaked hair and skin, and we burst out laughing. We looked liked we both just escaped from the insane asylum. \n\n\"I don't think there's much dignity left to preserve,\" I said, once I stopped laughing, \"but I take your point. Let's at least take the honorable path.\" I reached out my right hand and we shook. Then I pressed the button.\n\nIn the debrief with Dr. Carter, I didn't even wait for her to ask the question I knew was coming. I just came out with it, telling her that we'd violated the protocol and made physical contact. She didn't seem terribly surprised by my disclosure. She just asked me to describe the entire encounter, from the beginning, sparing no detail. So I did. I told the entire story, and as I did so, the surreal eroticism of the experience really started to hit home. Just describing it made me once again rock hard, and I could tell that Dr. Carter herself was getting a little hot under the collar. She was paying virtually no attention to the readout of the polygraph. And while she tried to maintain her poker face, there were moments where it cracked, and I could tell that my story was turning her on. \n\nWhen I was finally done, she thanked me for my candor and told me I could go. She told me to go ahead and show up on Friday morning and that we'd have a final discussion then. I took that to mean that I was kicked out of the study, but that the details would be worked out when I came in on Friday. \n\nTHE LAST DAY\n\nWhen I showed up on Friday morning, I was not taken to an exam room and asked to change, as I had been in every prior session. Instead, Dr. Carter came and led me into the lecture hall where the introductory meeting was held on Day 1. A few minutes later, Dr. Snyder entered the room, followed by Abby. When she saw me, we briefly made eye contact and she flashed me a quick smile, which I reciprocated. Abby took a seat in the same row as me, about five seats over. I was certain we were both about to be told that we wouldn't be completing the study or receiving our $10,000.\n\nBut then something I wasn't expecting happened. The door opened and Dr. Kaur stepped into the room. She winked at me as she walked to the front of the room. Right behind her was one of the male faculty I'd seen at the intro meeting, though I didn't know his name. He was young and broad-shouldered. A handsome guy. He looked right at Abby and smiled in a knowing way. When I looked over at her, she blushed. \n\nWhen all four of the faculty members, all wearing their lab coats and carrying clipboards, had made it to the front of the room, Dr. Snyder finally broke the silence, \"Jake, Abby, first of all, I want to thank you for volunteering for this study and for all the time and effort you've put into it.\" He didn't sound at all upset with us. ",
        "He continued, \"I'm sure you're wondering what's going on, and I don't blame you. The nature of these kind of studies requires us to deceive the subjects to some degree. There's just no way around that. It's the only way to create the right conditions to be able to test our hypotheses. You were selected for this study, out of a very large pool of applicants, for a variety of reasons. We wanted people who were heterosexual, attractive, and likely to be turned on by similar things. We also wanted people who were intelligent and successful and reliable, people who have a demonstrated record of making good decisions and following rules, staying out of trouble, not acting impulsively or recklessly. And importantly, we wanted people who had real financial need, people for whom $10,000 was a very meaningful sum of money. You two, along with the other 10 people who began this study, appeared to fit all those criteria.\"\n\nAbby and I looked at each other briefly. I could tell she was just as confused as I was about what was happening.\n\nDr. Snyder continued, \"this study was testing for a number of different things, and collecting lots of important data along the way, data that we'll be studying and dissecting for years to come. But one of the key things we wanted to test is the power of sexual desire and attraction. Is it strong enough to make people act on it even when they have very strong incentives not to? For example, would a couple of rule-followers who desperately need $10,000 be willing to forsake that money just for a few minutes of mutual pleasure?\" All of the faculty, including Dr. Snyder, smiled as he said this. I could feel myself blushing and a quick look to my side confirmed that Abby was too. We both had sheepish looks on our faces. \n\n\"Before I say any more,\" Dr Snyder continued, \"let me reassure you that you are not in any trouble. Despite our many warnings to the contrary, we were very much hoping that what happened between the two of you yesterday would happen. The fact that it did validated our hypothesis. We were rooting for you. You were the only couple that ended up doing what you did, the only couple who willingly gave up the money in order to...um...\" \n\n\"Fuck each other?\" Abby offered. Everyone laughed.\n\n\"Indeed,\" said Dr. Snyder. \"And judging by the sensor data from Wednesday's session, it looks like you both enjoyed yourselves immensely.\" He smiled. \n\nIt was then that I asked the question that was gnawing at me. \"Does that mean that the whole thing with me and Dr. Kaur was part of the experiment too? That she wasn't...um...violating the rules?\" This time it was Dr. Kaur who looked a little sheepish. \n\n\"That's correct,\" said Dr. Snyder, \"Dr. Kaur did not do anything she was not supposed to. The purpose of that encounter was to underscore the prohibition against physical contact, to really make you believe that it was real and that a violation of it would have serious consequences.\" He looked over to Abby, \"as you've probably gathered from my answer, Abby, the same is true of your encounter with Dr. Shepherd.\" He motioned toward the broad-shouldered man who had walked in with Dr. Kaur. \"He did not violate any rules and was never in any trouble either.\" \n\nI looked over at Abby, who was blushing again. She shrugged and grinned.\n\n\"So,\" I spoke again, \"if physical contact was never really against the rules, does that mean that we still might get the $10,000? Or was that just a lie too?\"\n\n\"Oh yes, the money is yours,\" Dr. Snyder answerer quickly, \"I'm sorry if I didn't make that clear. You have both successfully completed the study and will receive your full compensation. In fact, I've got even better news. Because you are the only two who did so, we've decided to increase your payout. You'll both be receiving $25,000.\"\n\n\"Holy shit!\" I blurted out, as Abby said something similar. We looked at each other in triumph and disbelief. \n\n\"Yes, sorry to keep you in suspense,\" said Dr. Snyder. \"We were very pleased with your efforts, particularly the candor you both demonstrated throughout. The debriefs were critical to the study and really helped us plan the sessions.\"\n\n\"How did you end up pairing us together?\" Abby asked, saying exactly what I was thinking.\n\n\"We used all the data we'd collected,\" Dr. Snyder responded. \"Based on all the sessions up to that point, we had a pretty good idea what kind of people you found attractive and what kind of situations turned you on. We thought there would be a strong mutual attraction and shared affinity for the content we were showing you. I assume we were, right?\"\n\nWe glanced at each other and nodded. \"Yeah, you could say that,\" I replied, smiling at Abby. \n\nWhen the meeting finally ended, Dr. Snyder said that we were free to go once we completed a bit more paperwork. I was pleased, and a little nervous, when Dr. Kaur came up to me to escort me into one of the offices. The last time I'd been alone with her, she had given me the best blowjob I'd ever had. As we left the lecture hall, I noticed that Abby was being led out of the room by the broad-shouldered guy, Dr. Shepherd. I wondered just what had happened between them. Was it as hot as my encounter with Dr. Kaur? For a fleeting moment, I pictured Abby sitting back on the couch, Dr. Shepherd's head between her legs.\n\nBut then we entered one of the offices where they did the debriefs and my full attention returned to Dr. Kaur. We both took a seat and she passed a couple of forms over to me, explaining that one was a confidentiality reminder and acknowledgment and that the other was needed to authorize payment. As I was looking over the forms, she spoke.\n\n\"You know,\" she said, in that lovely accent of hers, \"I hope there's no hard feelings. I want you to know it wasn't all an act. I mean, it was part of the experiment, but I genuinely enjoyed it.\"\n\nI didn't really know what to say, but eventually I replied, \"you don't have to apologize...I...well, I enjoyed it too. A lot.\" As soon as I said it, I felt kind of stupid. Of course I'd enjoyed it. You can't fake an ejaculation. Not to mention all the sensor data and after-the-fact testimony. She smiled at me as I blushed and hurried to fill out the forms. \n\nWhen I was done, she led me out and down the hall. Before we got to the end, though, she opened a door to what looked like a utility closet and grabbed my hand, whisking me inside with her. It was dark inside, and when the door shut, I could hardly see anything. \n\n\"What...\"\n\nBefore I could finish my question, I felt her lips on mine. I kissed back. Then she whispered, \"you want to finish what we started?\" Before I could say anything in response, I felt her hand on my crotch, feeling for my button and fly. \n\n\"Uh huh,\" I finally whispered back, still not quite believing what was happening. Then a thought occurred to me. \"Is this part of the study?\" I asked.\n\n\"No,\" she whispered back, as she pulled my cargo shorts down and let them drop to my ankles. \"This is just us.\"\n\nThen I felt her lips envelop my cock, which was already nearly fully erect. As she was sucking my cock, I heard her lab coat fall to the floor behind her. My eyes were starting to adjust to the low light, what little there was coming entirely from the crack under the door. But I could now see Dr. Kaur. She was wearing a loose, sleeveless blouse and a skirt. As I looked down, I could see down her blouse to her perfect breasts underneath. I reached down to feel them with my hands, through the blouse. Seeing what I wanted, she began to unbutton her blouse. When she was done, it fell to each side, exposing her breasts. She was wearing no bra. \n\nAfter a few minutes, she stood and began kissing me again, her hand still stroking my cock. Then she let go and, using both hands, hiked her skirt up above her waist. Then she turned around and stuck out her ass toward me, pushing it up against my cock. \"I want you to fuck me, Jake\" she said, matter of factly.\n\nI was happy to oblige. I lined up my cock and slowly drove it in. She was already so wet that it went in smoothly, with no resistance. As I began to thrust, I slid my arms under hers until I had both of her breasts cupped in my hands. She turned her head to the side and we began to kiss again. \n\nIt was incredibly hot in the closet and within minutes we were both dripping with sweat. We had both shed our shirts and the contact between our sweat-soaked bodies was incredibly erotic, as were the soft noises she was making. As I thrust in and out of her from behind, she was touching herself with one of her hands. She was trying to be quiet, but I could tell that she was very much enjoying what we were doing and was not far away from orgasm. \n\n\"Oh, Jake, I'm almost there,\" she whispered, breathing heavily, \"just a little longer.\"\n\n\"Oh, god, you're sexy,\" I whispered back.\n\n\"You can come in me when you're ready.\" \n\nAt this point, our bodies were really slapping against each other, slippery with sweat. Dr. Kaur was breathing hard, her hand moving rapidly. \n\n\"Oh, Jake, here it comes...oh god...I'm coming!\" she belted out, so loudly that anyone walking down the hall would have had to have heard.\n\nThe sounds of her orgasm pushed me over the edge. I grabbed her ass tightly as I thrust for the final time, emptying myself inside her. \n\nAfter we'd come to a stop, Dr. Kaur disconnected from me. She stood and turned around to face me. She pushed me back against the wall, pressing her breasts against me and kissing me hard.\n\nWhen she finally pulled away, she said, \"thank you, Jake. That was lovely. I would have regretted it if we didn't get to finish what we'd started.\" \n\nTen minutes later, I was dressed and standing outside the door of the psychology department, hoping I wasn't too late. It was a beautiful, sunny day, full of promise. A few minutes later, my patience was rewarded. Abby stepped out of the door. She looked beautiful, as always, but a bit flustered, her hair and clothes a little disheveled. I immediately wondered if she'd just had an experience similar to mine, with the handsome Dr. Shepherd, and the thought caused a momentary pang of jealousy. But the rational side of my brain quickly prevailed, pushed that feeling aside. After all, Abby and I weren't a couple. I didn't even know her last name. And I'd just fucked another woman in a utility closet 15 minutes earlier.\n\nBut that didn't change the fact that I felt a real connection with this girl. We'd been through something crazy together, a life-changing experience that neither of us would soon forget. And other than her first name, I knew nothing about her. \n\nWhen she saw me waiting on the steps, she flashed me a huge, genuine smile. \"Hi stranger,\" she said, \"I was worried I might not be able to find you.\" \n\nI smiled back, \"great minds think alike, I guess. I don't suppose I could interest you in a coffee?\"\n\n\"What, you mean doing something that involves wearing clothes and having an actual conversation? That's so not like us.\" \n\nWe both laughed as we began walking off campus together. \n\nIt's been five years since that day. Abby and I are still together, and still as passionate for each other as ever. And every year we write a thank you note to the psychology department at the University of Wisconsin."
    ],
    "authorname": "Sanomiya",
    "tags": [
        "voyeur",
        "exhibitionist",
        "masturbation",
        "passion"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-study-3"
}