{
    "title": "Changed Ch. 03",
    "pages": [
        "This is the continuation of the \"Changed\" story, I recommend that you read chapter One and Two first. This is a work of fiction and all the characters and events are fictional. If you are under the age of 18 or are in an area that prohibits erotic fiction then leave now. This story depicts lesbian sex and mind control, if that's not your thing then leave now. You've been warned... \n\nI woke up the next morning before Julia and sneaked quietly into the bathroom so as not to wake her. I looked back at her as I closed the door. She was lying on her side facing away from me and the only thing covering her was a sheet over her legs and bottom. Her perfectly toned and tanned back was exposed to me. She was so beautiful it made my heart ache.\n\nI quickly closed the door and turned on the shower, not now, I told myself, later... later. The room warmed up as it filled with steam and I stepped under the hot water. It felt good on my tired muscles. I hadn't realized how sore I could get just having sex. I must be more out of shape than I thought. I thought with something like envy that Julia probably wasn't sore, she worked out for at least an hour a day to keep herself looking firm and toned. The thought of her tight little body made my pulse quicken and I felt myself getting aroused again.\n\nStop it! I mentally yelled at my self. Think about something else, like what to do about my new body. It's not like people wouldn't notice that I went from plane Jane to swimsuit model overnight. Well I guess at work I could wear my hair up for a while now that it was a foot longer than before. The color change wouldn't matter, they would just assume I colored it, I had done that before. I could wear baggy clothes for a few weeks, maybe a month or two and slowly transition into more normal things, sexy things. People would just assume that I was dieting or exercising or something. But Julia would certainly notice, I couldn't hide it from her. How would I tell her?\n\nAfter considering my alternatives, I decided to play it straight with Julia. I would tell her that I found a magic ring and that it let me control women's minds and bodies. I would let her know that's how her hair grew, why her tongue was so much longer and why she was now bald between her legs. I would also tell her that was how I had changed myself.\n\nI wouldn't tell her that I had made her into my lesbian nymphomaniac lover. I figured that she didn't need to know that. \n\nShe probably wouldn't believe me but I could use the ring to influence her thoughts and make her believe in my new powers, and to like them. In fact, I would use the ring to make her love the idea of me controlling other women. When I was done with her mind she would want me to get beautiful women for us to share! \n\nI had a mental image of Julia and I walking around the mall looking for a couple of tight young college girls. She could pick them out and I would make them walk over to us and start flirting, trying to seduce us, even if they weren't lesbians. They would come home with us and Julia and I could share them all night long. \n\nI was getting so turned on just thinking about making Julia want me to get other women for us that without even noticing at first my hand wandered to my crotch and I started to finger my slit. \n\nThe foreign feel of my newly hairless pussy brought me back to reality. It felt so different than it used to, but it actually felt better, kind of naughty. A soft moan escaped my lips as I pushed my middle finger up inside. I reached my other hand up and cupped one of my new breasts. It felt huge and heavy in my hand, so different from just yesterday. I figured I had gone up at least two full cup sizes, maybe three. \n\nThe hot water pounded on my back as I sank to my knees and started to seriously get on with it. The tip of my finger found my clit and started making gentle little circles. Waves of pleasure flowed through me and I moaned louder. My other hand found my very hard nipple and started to pull and twist, driving me even higher. \n\nIn what seemed to be only seconds my first orgasm struck with a speed and force that shocked me. I rocked back and forth on my knees as the passion coursed through my veins. I pushed two fingers up into my pussy and the pleasure surged upward again. I bit my lip so I wouldn't wake up Julia, but little squeaks and grunts filled the shower stall, I just couldn't keep them all in, it was so intense. \n\nI continued playing with myself for several more minutes and several more orgasms until I decided that was enough for now. I didn't want to spend all of my energy first thing in the morning, it was going to be a long day!\n\nI lay down in the shower stall for several minutes, letting the hot water wash over me and trying to calm my racing heart. This new sex drive was going to take some getting used to. I had never had an orgasm that fast by playing with myself, actually I hardly ever played with myself, it never really satisfied me before. But now, well, that had certainly been very satisfying! Five orgasms in just a few minutes, I had never done that before the ring. The ring had changed me. It had allowed me to have more orgasms than I could count on the two occasions I'd had sex, both with Julia, since I had put the ring on. Before the ring sex had never been as fulfilling as it was now. \n\nWith the best male lover I had ever been with, the most climaxes I had was four in one night, and at the time I thought that had been incredible! Then my first time with Julia I had cum at least eight or ten times in less than an hour. Then yesterday had been just as good. We didn't play for as long so I hadn't had as many climaxes but the ones I had seemed to be more powerful and last longer. It was as if my body was still being changed by the ring, like my sex drive was still gearing up. I wondered how much higher it could go. The thought made my heart race again.\n\nI had to stop thinking about sex! Standing up I started washing myself up. I marveled at how long and full my hair seemed now, it didn't even feel real to me, it was so strange, like I was washing someone else's hair. I finished washing up, got out and dried up. I admired my new body again in the full length mirror behind the door, did I look sexy or what!\n\nStepping out of the bathroom I saw Julia sitting naked on the edge of the bed, she must have just woke up, her hair was tousled and she still looked a little groggy. She smiled when she saw me but her eyes quickly went wide as they trailed down my new body, she looked up into my eyes, confused and a little scared.\n\n\"What happened to you? You look so different, so... so... sexy! How did you do that?!\" Her eyes were still very wide ad she scooted back on the mattress a little.\n\nOK, here goes, I thought to myself. \"Calm down and I'll explain everything to you.\" I pushed on her mind to be calm. \n\nShe took a deep breath and sat back, her alarm disappeared immediately. She looked at me waiting for me to explain. \n\n\"Friday I found a ring when I was up on a jobsite in Maine. When I put the ring on it turned out to be a magical ring. A woman, a sorcerer named Marcellene, is bonded to the ring, her soul is trapped in it. This woman in the ring gave me the power to control women, all women, completely.\" I explained as calmly as I could. That was a pretty distilled down version of the story but I figured it would do for now, I could always tell her more later.\n\n\"What do you mean 'control', how do you control women? Any woman? Are you controlling me?\" she asked with maybe a little bit of worry in her tone.\n\nI pushed on her mind to be calm and accepting about it then I continued, \"It allows me to control any woman's mind completely. I can make her do anything I want, think anything I want, anything at all. I can also change her body in any way at all, into any shape I want, well, within limits I guess.\"\n\nShe still appeared calm and now looked on with interest so I decided to take it to the next step. I pushed harder on her mind, pushed her past acceptance, past liking the idea on into loving the idea of controlling women. Her eyes immediately went wide with a fresh surge of excitement. I saw lust flare in her beautiful dark eyes and wondered for a moment if I might have gone a little too far.\n\n\"Does that mean you can just walk up to any woman and make her strip on the spot? Could you do that? Can you just make any woman have sex with you?!\" She was leaning towards me and her words came out in a rush as her excitement grew.\n\n\"Yes, I can make any woman do anything.\" I said simply. \"Does that give you any ideas?\" \n\n\"The redhead.\" She said, obviously thinking that was explanation enough. \n\n\"What? Who do you mean? You mean the new girl down the row?\" I asked, figuring the answer.\n\n\"Of course! She is really hot, and she has a twin sister, a TWIN! Can you imagine how kinky it would be to have lovers who were twins? Ooohhh, I'm getting so wet just thinking about it!\" She leaned back on the bed and started to play with her cunt, stroking it with long slow motions. \"Wait a minute!\" She said sitting up, \"What about your new body? That long hair, those huge tits, and that killer ass. How did you do that! You can change yourself too?\"\n\n\"I can change any woman. How do you think your tongue got so long, and your hair. And remember how you don't have any hair on that tasty little snatch anymore? I changed you!\" It last I said with a little smirk.\n\n\"You changed me? I don't remember that!\" She said, her hand still working between her legs.\n\n\"I made you accept it and like it.\" I said simply.\n\n\"That is soooooo cool! I don't remember it at all! It really does work, oh, I'm so hot just thinking about it! Can you imagine what we could do!\" She laid back down and spread her legs wide, showing me her bald cunt, she was soaking wet. \"This is making me so hot, come over here and help me, I need you, please! Make love to me!\"\n\nAlready very turned on, I was more than ready to help out my friend. I crawled onto the bed, in between her legs and gave her a gentle kiss on the hand that was working away there. She slid her middle finger out of her pussy and rubbed her juice on my lips. I opened my mouth and eagerly sucked the juice from her slender finger, she tasted divine. She tasted even better to me than the first time I had licked her. \n\nThe taste of her juice made my need flare up even more and I buried my face in her. I slid my tongue into her and twirled it around, savoring her taste. She started moaning loudly and bucking her hips, rubbing herself my face. My hands wrapped under her legs and I grabbed a hold of the tops of her hips to keep from getting thrown off. \n\nI sucked her clit into my mouth and holding it with my lips, began to rapidly flick the tip of it with my tongue. \n\n\"Oh, too much... too much... AAAAHHHH!!!!\" She screamed as she came in a intense rush. She was bucking wildly as she came and I could barely hold on but I still managed to push on her mind to keep her cumming. She kept arching her back, lifting her ass off the bed trying desperately to fuck my face. As her pussy continued to spasm with pleasure, her hot, sweet nectar flowed out and I licked up every drop I could. \n\nAfter about ten minutes I figured she was about to pass out so I let go of her clit and made her stop cumming. She collapsed on the bed and just lay there panting and moaning softly.\n\n\"That was incredible\" she said softly. \"Now it's your turn.\" She gave me a wicked grin, \"Come sit on my face, I want to taste you.\"\n\nSitting up I first bent down to give her a kiss. She eagerly kissed me, then licked all of her pussy juice off my face. \"Mmmmm, my pussy tastes so good, I know yours will be even better! Now sit on me so I can fuck you with my tongue!\"\n\nI got up, and facing her I spread my legs, lowering myself onto her mouth. I looked down and my breath caught in my throat with the look of unbridled lust in her eyes. Her hands grabbed my ass and her lips found my clit, just as I had done to her. She sucked my clit and flicked the tip of it with her tongue. My head fell back and I moaned. \"Ooooh,, Julia, you little nymph! Oh, you're so good! Ooooohhhhh!!!\" My head rolled forward and I opened my eyes. She was looking directly at me, our eyes locked and I could see the devilish smile in her eye. Then I felt her long tongue slide into me, the tongue I had given her when we had first had sex. She slid it slowly into me, gently licking my most intimate places, working deeper and deeper. When she was all the way in she twirled it around a little then slowly drew it out, still tickling my sensitive places till she was almost out. Then she started back in again, repeating the process. \n\nAfter two round trips I couldn't hold out any longer, I exploded. My hands shot up and clutched my breasts, fingers pulling hard on my stiff nipples. Wave after wave of fire burned through me as I came. I started grinding against her face as I lost all control, desperate for more pleasure. Julia continued her slow, sensual tongue fucking on my cunt as I came again and again. \n\nI looked down at her again as I rode her face. Her beautiful face was covered with my juice, her dark, slanted eyes were still open, watching my every move, but there was a fire in her as well. Looking behind me I could see that her fingers were working furiously between her legs, she was about to cum again! This girl was insatiable!\n\nSeeing the lust in her eyes and her fingers between her legs sent me over the top again. As I started to climax I pushed on her mind to make her cum with me. \n\nWe climaxed together, out cries of pleasure filled the room. He screams were muffled by my pussy but they were still music to my ears. I continued to ride her face as the last waves of pleasure slowly subsided. I climbed off Julia and lay down next to her. She turned towards me and kissed me tenderly and I tasted my juices on her lips. We kissed for a few minutes and I finally stopped and rested my head on her chest, nuzzling her firm breasts. \n\nAfter a few minutes Julia spoke, \"Well I need a shower and I think you need another one, care to join me?\"\n\nWe went into the shower together and washed each other very thoroughly. The feel of Julia's soapy hands rubbing all over me got me going again but I resisted the urge. We could have more fun later but not just yet. I needed to rest for a few minutes and I was also starving. Julia finished washing me up and I washed her up. I savored the feel of her smooth skin as my soapy hands slid over her. She let out a little moan as I slid a soapy finger between the lips of her cunt for a few short strokes. \n\nWe got out, got dressed and had breakfasts together. While we ate we discussed what we were going to do today. \n\n\"Well, I have to go to work today. In fact I have to leave in a few minutes.\" Julia informed me, she didn't seem very happy about it. \"But we close at 6 o'clock tonight so I should be home by seven or so. Do you think you can round up some... entertainment, for tonight?\" \n\n\"What sort of entertainment did you have in mind?\" I asked, knowing full well what she wanted. \n\n\"Oh, I don't know... maybe, oh... \" she looked at me out of the corner of her eye and smirked, \"the redhead?\" \n\nA surge of excitement ran up my spine at the look she gave me. Lust, pure lust, I had created a monster... a sex monster... a lesbian sex monster. \n\n\"I'll see what I can do. Now you had better get ready for work. We don't need you getting fired. I don't feel like paying all of the mortgage my self every month and you're to cute to throw out on the street, now scoot!\"\n\nJulia got ready for work and with one last lingering kiss was off. I had the whole day to myself, what to do, what to do. It wasn't a very hard decision. \n\nI looked down at myself, I was dressed pretty sexy. Tight short shorts, and a skimpy tank top. Actually most of my tops looked a bit tight and skimpy with my new boobs. I would have to go shopping soon, but not now.\n\nI went out the front door and down five doors to the redheads condo. It occurred to me that I wanted to seduce this girl and I didn't even know her name. I walked up the steps and was just about to knock when I noticed a package on the steps. It was an overnight mail envelope and it was addressed to Miss. Alissa West. Well, now I had a name. It was from someone in Boston, MA named A. Beston. Nothing else interesting about it and I was just about to put it down when an idea occurred to me. I stepped up to the door and knocked. \n\nAfter a minute or two I was movement behind the frosted glass, the door opened a few inches and the redhead looked out. \n\n\"Can I help you?\" she asked with a quizzical look on her face.\n\nShe was as pretty in person as she had looked from across the yard. She had long, straight red hair, a pretty face with lots of freckles and green eyes. I couldn't see much else behind the door but it looked like she didn't have anything on except a towel. Must have just gotten out of the shower and been doing her hair or something. Her hair did look just a bit damp.\n\n\"You can if you're Alissa. I think I got a letter that was meant for you.\" I said holding up the big envelope.\n\nShe looked down at the envelope and smiled \"Oh, thank you! Yes I am Alissa, Alissa West. I just moved in and I suppose the postman doesn't know my name yet.\" As she said this she opened the door wider and I got a better view of her. She was quite stunning even in a towel. She was a couple of inches taller than me, maybe five-eight or so, big breasted, flat stomach, curvy hips, long legs...quite sexy.\n\n\"Well, I figured it was a good excuse to meet you anyway. I'll have to thank the postman for introducing us.\" The joke was pathetic but she laughed politely anyway. \n\nAfter a moment of awkward silence she spoke, \"Yes, well, thank you again, I actually have to go in a few minutes, I have to meet a client.\"\n\n\"On a Sunday? That doesn't sound like much fun. What's so important that it wont wait till Monday?\" I gave her a little push to trust me and want to keep talking to me.\n\n\"I work for a modeling agency and sometimes weekends are the only times I can meet certain clients. It sucks, but it's the job.\"\n\nModeling agency... hmmm, that had potential. \"It's a shame you have to go. I had hoped to get to know you better. I know, how about you come over for dinner tonight. Julia, she's my roommate, gets home about seven. We weren't going to do much tonight, probably just pizza and watch a DVD or something but why don't you stop by. \" I gave her a big push to be eager to get to know me and Julia better.\n\n\"That sounds great! I just moved into town and don't really know anyone. I'll be nice to have someone to hang out with. I'll see you at seven.\" She gave me a little smile and closed the door.\n\nWell, that wasn't quite what I had wanted but it should work out well anyway, I thought to myself as I walked back to my condo. \n\nShe is quite beautiful. Very different from Julia, but still beautiful. Are you planning to take her tonight? The soft, feminine voice of Marcellene asked into my thoughts as I entered my front door and closed it.\n\n\"I was wondering when you would show up. Where have you been? I haven't heard from you all day.\" I asked to the empty room. It still seemed strange to be talking to no one and even stranger to have that no one talk back.\n\nMarcellene was my new permanent companion. Her spirit was bonded to the ring on my thumb about 5000 years ago in a magical accident of her making. I had gained her power and the power of the ring when I put it on by mistake. The ring gave me the power to change women into whatever I wanted them to be but it had also changed me. I had become addicted to sex, specifically, sex with women.\n\nMarcellene could talk to me in my mind and while no one else could hear her, I could talk back to her. She could also see through my eyes and feel everything I felt. ",
        "I have been here with you all day. I cannot go anywhere. I just did not have anything to say before. She seemed hesitant but then continued, Some of my masters in years past did not like me to interrupt their thoughts, did not like me in their head, it made them angry. So I learned to be quiet and just observe.\n\nThat didn't seem like much fun to me. \"Well you can talk to me anytime you want... well, when were alone anyway. I won't mind.\"\n\nThank you mistress, you are very kind. It can be very lonely in here. But you did not answer my question. \n\n\"You'll just have to wait and see Marcellene, wait and see.\" I smiled with the thoughts of things to come. \"So, did you enjoy yourself this morning?\"\n\nOh yes! It was a most enjoyable morning. Julia is quite talented and that long tongue is exquisite. I hope you will make love to her again tonight!\n\n\"Like I said, you'll have to wait and see.\"\n\nI spent the rest of the afternoon doing housework. The place was a mess from me being away most of last week. Julia wasn't much on housework and the place needed some help.\n\nBy six o'clock the place is something close to normal again and I sat down at the computer to check my e-mail for the last few days. Sixty e-mails, yikes! About half personal, half work. I left off the personal ones for later and sifted through the work mail. Mostly crap, not me, delete... don't care, delete... is me, don't care, delete... not me, don't care, delete... and on and on. A few were important and I left them for the office on Monday. The last one was from the owner of the company, it was the list of applicants for my new assistant. The company had decided to hire me an assistant for the summer, a co-op from one of the local colleges. \n\nI looked through the list of five names my boss had called in for interviews on Monday; Joshua, Mark, Tony, John and Kevin. Shit, all guys. I had hoped there would be at least one girl in the mix. Having some cute little college freshman as an assistant would have been nice. Oh well. \n\nAs I shut off the computer I heard the front door open, Julia was home. I looked at the clock and it was twenty past seven. Alissa was late. I wondered if my mental push hadn't worked on her. Maybe I needed more practice.\n\n\"Hi sweetie.\" Julia came right up to me and gave me a hard kiss on the lips. \"So, did you make any... plans, for us tonight?\" The look in her eye would have melted butter on the spot.\n\nAt that moment the doorbell rang. Julia looked at me, cocked and eyebrow and said \"Oooo, you're good.\" \n\n\"Timing is everything.\" I walked to the door not entirely sure what I would find.\n\nI opened the door to find Alissa standing there. She must have just come from her business meeting because she definitely wasn't dressed casually. She was wearing a tight black skirt that came to mid thigh, a white blouse, black spike heels and a long black dress coat. She looked very stylish and sophisticated. She also looked incredibly sexy.\n\n\"Sorry I'm so late, I just couldn't seem to get away from this client tonight. This woman wanted a few of girls for a bedding catalogue and she just wouldn't make a decision! But I'm really so sorry, it's so rude me to be late when I just met you and were so nice to invite me over and all!\" She said it all so quickly that I couldn't even get in a word to tell her not to worry. She finally stopped to get some air.\n\n\"Don't even give it a second thought! It's not a problem. Julia just walked in a minute before you anyway. Oh, I guess introductions are in order.\" I turned towards Julia, \"Julia, meet Alissa... Alissa, Julia.\" I said, making the appropriate motions with my hand. \n\nJulia and Alissa both smile warmly and shook hands. \"It's so nice to meet you\" from Alissa. \"I was just saying to Mary when we met that it's so nice to make some new friends. I just moved here from Oregon a few weeks ago and it's so hard meeting new people in a new town. My sister lives in the area, that's partially how I ended up here, but she's a nurse and works nights so I don't get to see her too much.\" \n\nJulia smiled brightly \"Well you have a few friends now! Come on in, make yourself at home. I'll go get some wine an something to munch on.\"\n\nJulia went into the kitchen and I led Alissa into the living room. She sat down on the couch but didn't look very relaxed. Her hands were in her lap and she was sitting a little too straight. Not very comfortable with us yet, I thought. Well, that would change.\n\nJulia walked in with a bottle of Pinot Grigio, along with some crackers and cheese. Setting them down on the table she sat right next to Alissa.\n\nAlissa seemed a little unnerved by Julia's proximity so I gave her a little push to relax and enjoy herself, she was a little too stiff for what I had in mind.\n\nShe seemed to relax and I poured us each a glass of wine, half a glass for me a full glass for Julia and a very full glass for Alissa. \n\nJulia started talking with Alissa, getting her to talk about her job, her family, hobbies, just any thing to loosen her up. \n\nI wasn't really paying attention as the girls talked, I was watching Alissa, trying to decide how to seduce her. I could just push on her mind and make her strip for us but that didn't seem like much fun, too easy. How then? After a few minutes I had it.\n\nBy now Julia and Alissa were at the bottom of their second glass each of wine, and Alissa's had been very full glasses. She seemed to be loosening up quite nicely. \n\nI started making little changes to her as we all talked. Nothing drastic, very slight changes, a little at a time so she wouldn't notice. A little push here and a little push there. I took quite a while but after forty minutes or so I figured I had accomplished what I wanted. By this time we were well into the second bottle of wine and Alissa was pretty drunk and Julia wasn't far behind. I was still on my second glass. I figured it was time to let the real fun begin.\n\nWhen Alissa scooted forward to pour herself another glass of wine I caught Julia's eye, raised one eyebrow and nodded slightly at Alissa. Julia bit her bottom lip to keep her smile under control. \n\nGetting onto her knees she slid around behind Alissa and placing hands on shoulders said, \"You still seem a little tense, let me give you a back rub.\" Not waiting for and answer, Julia started working on Alissa's shoulders.\n\nActually Alissa didn't seem tense at all, in fact with all the wine she had downed, she was about as mellow as anyone I had ever seen, but she was so tipsy that she didn't have a prayer of figuring out what Julia actually had in mind.\n\n\"Oh that feels wonderful. It's been so long since I had a good backrub.\" Alissa said and she hunched forward slightly.\n\nFor the next few minutes I watched as Julia and Alissa continued to talk and Julia continued to rub her back. I watched as Julia worked her hands down and down, she appeared to be quite good at it and I made a mental note to have Julia give me a backrub sometime soon. \n\nJulia's hands eventually made it down to Alissa's bottom. Julia seemed to take a little extra time massaging the top of Alissa's ass and her hips but eventually started working her way back up, rubbing her outer back and sides. When she made it to her armpits, Julia moved up to Alissa's neck. \n\nI had been watching Alissa's reactions through much of this and she appeared to be in a world of complete bliss. Her eyes were closed and she had a small, contented smile on her dark red lips. As I looked over her body again I noticed that her nipples had become hard and were poking out through her thin blouse. She must have been getting a little turned on by Julia's tender ministrations. Perfect.\n\nJulia had continued to rub Alissa's neck and shoulders, working her hands around to the front of her shoulders and working her slim fingers along the collarbone. She continued to rub back and forth across the collar bone, working lower and lower, until she was working her fingers across the tops of her breasts. Then with one smooth motion she slid her hands down the silky material of Alissa's blouse and started massaging her full breasts.\n\nIt had been so smooth that Alissa didn't even notice it for several seconds, then her eyes flew open and she head snapped up. \"What are you doing! You can't just...!\"\n\nJulia gently pinched Alissa's hard nipples, the nipples that I had been changing for the last hour to make them much, much more sensitive. \n\nAlissa gasped and her eyes rolled up and her head rolled back, \"Oooohhhh.\" she let out a long, soft moan. \"What are you doing? Oooohhhh!\" \n\nAs Julia continued to fondle Alissa's breasts she leaned in and started kissing the exposed side of her neck. \n\nAlissa moaned again, louder this time. \"No, no I can't... I have to go... oooohhhh! Please... let me go...\"\n\nJulia was pinching Alissa's nipples again, rolling them in between her thumb and forefinger. Alissa raised a hand and for a moment I thought that she was going to try to pull Julia's hand away. But Alissa put her hand over Julia's and started to help fondle her own breast. It was incredibly erotic to watch.\n\nAlissa leaned back onto Julia and moaned again. Julia stopped fondling her breasts and while still kissing and nuzzling the side of her neck, started to unbutton Alissa's blouse.\n\n\"What are you going to do with me?\" Alissa asked in a dreamy but still worried voice.\n\nJulia looked up and gave Alissa a soft kiss on the cheek, \"Anything you want.\"\n\nWith surprising speed, Julia got off Alissa's blouse and I admired the view. Alissa was now lying back against Julia, her head on Julia's shoulder. Her large breasts, what I could see of them, were covered with freckles just like her pretty face. They were supported by a simple, black silk bra, which I was happy to notice, had a front clasp. \n\nUnable to contain myself any longer I crawled across the coffee table and leaning over the moaning Alissa, unhooked the clasp, it's two sides snapped back, not quite exposing her nipples. Bending down I planted a soft kiss between her freckled breasts and started making a trail of small kisses under one breast. I worked my way around her breast, leaving little wet kisses, pushing back her bra with my nose until I had her whole breast exposed. Her nipple was large and surprisingly dark considering her skin was so fair. But it was very hard and looked delicious. \n\nTracing up the underside of her breast with my tongue, I worked up to her nipple and made a slow circle around the sensitive skin.\n\nThe anticipation must have been too much for Alissa, \"Oh God, just suck me! Suck on my tit! Please suck on me!\" She was practically begging. \n\nEager to oblige her, I wrapped my lips around her stiff nipple and sucked on it, rolling my tongue around it inside my mouth.\n\n\"What are you doing to me? Oooooohhhhhh! I can't be doing this! You have to stop! It's not right... it's... it's ... oooohhhh!\" She grabbed a handful of my hair and pulled my face hard into her tit as she continued to moan. Her mind might not want this but her body certainly did! \n\nBy now, Julia had some how managed to get Alissa's bra completely off and had undone her skirt. I reached down and slid her skirt out from under her, taking her panties off at the same time. I released her breast and started working my way down between her legs, leaving a trail of wet kisses on her flat stomach. \n\nJulia got out from behind Alissa and quickly removed all of her own clothing. She climbed back onto the couch and straddled Alissa's middle. Leaning forward she kissed Alissa hard on the lips, her hands went up and started fondling Alissa's big breasts again. \n\nI was now on the floor between Alissa's legs looking at her pussy and Julia's, I couldn't decide which to pleasure first so I decided to work on both. I put a finger to each of them and started rubbing up and down inside the soft folds of their cunts. \n\nBoth girls started to moan as their pleasure increased. Alissa brought her hands up and very tentatively touched Julia's sides. She ran her hands slowly along Julia's smooth skin, still not sure what to do. Finally she worked up the courage and brought her hands around to Julia's breasts. Gently at first, then with more urgency she squeezed and pulled on Julia's firm little breasts. \n\nJulia was obviously enjoying the attention. She broke their kiss and sat up, allowing Alissa to see her breasts and watch the pleasure she was feeling. Julia brought her hands up and grabbed Alissa's still nervous hands. \"Ooohhh yeah baby, that's right! Squeeze them like this! Mmmmm!\" Julia moaned as she helped Alissa fondle her breasts.\n\nWhen Julia sat up I couldn't get at her pussy anymore so I concentrated on Alissa's. Pushing her knees far apart I admired the neatly trimmed red curls above her pussy. I bent down and licked her glistening slit with the tip of my tongue. \n\nAlissa cried out and arched her back, almost throwing Julia off in the process. \"NO! It's too much! What's happening to me?! I... I... can't, no... no, please stop! I... ooohhh! Oh, do that again... eat me again! No! Oh God...\" She was moaning and gasping. More aroused than she had probably ever been in her life but scared and confused at the same time. I looked up and saw a tear rolling out of the corner of one eye. I realized she was terrified, she was on the edge of panic.\n\nMaybe this is a little too much for her, I thought. I felt a little guilty, I didn't mean to hurt her, just have some fun with her. Well, this would make her happy I thought. I mentally braced myself and gave her a big push, I turned her mind form straight to lesbian in an instant. Another push and she was eager to be Julia's and my new lover, she loved both of us now.\n\nAlissa sat up in a flash, wrapped her arms around Julia and latched her lips onto one of her breasts. \n\nJulia, clearly surprised, gasped and cried out softly with the unexpected pleasure. She ran her finger up the back of Alissa's head and grabbing two handfuls of red hair, held the red lips to her sensitive tit.\n\nI decided it was time for a little more fun and mentally pushed on both girls to make their pussies and nipples super sensitive. I also made it so when either one of them came the other would too. Then I thought, why should they have all the fun, I had changed my body yesterday, why not today too. I imagined my pussy and nipples were very sensitive as well, and for good measure I made it so I would cum with them too. I felt an instant flash of heat between my legs and in my breasts, then it was gone.\n\nBending down I again started eating Alissa's deliciously wet twat, but the reaction was entirely different this time. \n\nAlissa let out a shrill scream, followed quickly by another. She jerked backward, pulling Julia down on top of her. \"Oh, yes, yes, YES!!!! I'm CUMMING! AAAHHH!\"\n\nAlmost immediately my orgasm started as well. There was no build up, no warning at all, just an intense explosion of ecstasy, like liquid fire running through my veins. It was shocking how fast it came on. I screamed and I heard Julia doing the same. She was cumming just as hard as me. I held my face between Alissa's legs and eagerly drank all of her juice even as I rode the waves of my orgasm. \n\nAlissa clung to Julia as another orgasm approached . \"Oh you girls are so good! Oh yeah, eat me baby, eat me! Ooohhh, I'm gonna cum again! Ooohhh!\"\n\nJulia managed to disengage herself form Alissa somehow and was just crawling onto the floor next to me when Alissa's orgasm made her cum too. \n\nJulia collapsed onto the floor, moaning softly \"Oh, I'm cumming again. Oh fuck, I'm cumming, ooohhh.\" Her hands went between her legs and she started playing with herself. \n\nI leaned over and kissed Julia's breasts just as I started to cum with her. Panting with delight I fell on top of her and we grabbed a hold of each other, clinging to each other desperately as waves of pleasure assaulted us. \n\nAs the pleasure ebbed I rolled off Julia, completely exhausted. I lay on the floor on my side, eyes closed, gasping my breath back. Increasing the sensitivity of my pussy also seemed to have increased the power of my orgasms. I had only had two so far but I felt like I had about twenty. It must be the same for the other girls as well. Then I felt someone move next to me. I opened my eyes to see Alissa lying down next to me, her head close to my crotch. She nuzzled in and pushed her face in between my legs. Still tired but also still very aroused I lifted one leg and allowed her access to my sex. Her eager tongue had me moaning again in moments.\n\nJulia had watched all this for a few minutes and now that she was rested she wanted to get in on the action. Julia slid her face between Alissa's legs and had her first taste of the redhead. \n\nI felt more than heard Alissa's long moan as Julia started her exploration inside Alissa's tight snatch. The thought of Julia licking deep inside Alissa with that long tongue made me moan even louder. I slid over and, grabbing Julia's ass, I buried my face between her legs. Julia was very wet, my face was soaked with her juice in moments. I wondered if the changes I had made in her made her pussy wetter or if she had always been like this. I didn't wonder about it for long.\n\nJulia had finally slid her long tongue all the way into Alissa.\n\nAlissa yanked her head out from between my legs and yelled, \" Oh my God what's in my CUNT! OOOOHHHH! So deep... so good! Don't stop... OOOOOHHHH!!!!\" \n\nAlissa slammed her face back between my legs and stuck her tongue up into me again, frantically licking the inside of my pussy. \n\nIt was too much for me and I went over the top again. I kept my face burried in Julia's delicious pussy as I came. As the ecstasy took me I could feel Julia's pussy tighten around my tongue as she came with me. I felt Alissa's frantic, jerking movements between my legs and knew she was cumming too. \n\nI pushed hard with my mind on all three of us, wondering briefly if I could handle what I was doing or if my mind would break.\n\nWhite lights flashed behind my eyes as I doubled the pleasure and then doubled it again. With my last scraps of reason I pushed for it to last longer... two minutes... five minutes...ten minutes...\n\nI screamed, a loud tearing scream that hurt my throat. The other girls were screaming with me. What had I done! \"TOO MUCH! I...I...AAAAAAHHHHH!\"\n\nJulia was screaming too \"SO GOOD! DON'T STOP! YES, YES, YES!!!!\"\n\n\"CAN'T STOP! WHAT?... HOW?... AAAAAHHHH!!!\" Alissa screamed, her face still only inches from my cunt.\n\nWe came for what seemed like forever. Somehow Julia and Alissa managed to turn around and crawl up next to me. We clung to each other as we all came. Sweat running down our bodies, faces contorted with ecstasy that no woman had ever felt before. It was soul shaking, it was more than that, it was mind shattering. It was too much for me and I passed out. The other girls followed me into oblivion shortly after. \n\nI woke up a little while later, the other girls still clinging to me, their beautiful bodies still covered in sweat and girl juice.\n\nMaybe that had been a little too much, I thought. My pussy, actually my whole body, was still twitching and I still felt the warm after glow of my orgasm. But my arms and legs were sore from my wild trashing and throat was raw from screaming. Dimly I wondered if one of my neighbors had heard all of the screaming and called the police. I didn't think so, I had lived here for a couple of years and had never heard a peep from my neighbors so the walls must be pretty soundproof.\n\nI lay there basking in the afterglow of our sapphic love session, amazed at how my life had changed, and how wonderful it now was. I thought I had been happy before, I was wrong. Now I was happy, this was bliss... pure bliss.\n\nAfter a few minutes Alissa woke up. She moaned softly and her eyes fluttered open. She looked up at me and smiled a lazy, dreamy little smile. \"I hope I can hang out with you and Julia more often. You girls really know how to have fun.\"",
        "\"You can hang out with us anytime you want sweetie.\" I said as I bent my head down and kissed her on the forehead.\n\n\"Should we wake up sleepyhead?\" Alissa said with a little nod towards the still sleeping Julia.\n\n\"Why don't you wake her up with a little kiss?\"\n\nAlissa didn't reply, she just sat up on her elbow and leaned over me. Her lips found Julia's and she slid her tongue into her mouth. \n\nJulia moaned softly. Her eyes didn't open but her hand went up to the back of Alissa's head, grabbing a handful of her long red hair.\n\nNot wanting to be left out I leaned it and shared their kiss. I nudged Alissa to the side and kissed her full lips, then I kissed Julia's, then back to Alissa. As I kissed Alissa, Julia pushed in and the three of us kissed, our tongues darting in and out of each others mouths. \n\nAfter a few minutes we collapsed back onto the floor. \"I don't know about you girls, but I'm about done in!\" I said.\n\n\"You girls are something else! I've never experienced anything like that before in my life. It was incredible! I've never had sex with a girl before tonight, I never even considered it, now I don't think I'll ever want anything else!\" She seemed to sober a little, \"How am I going to explain this to my sister?\" She sounded a little worried.\n\n\"Just bring her by, we'll help you explain it.\" I said with a push on her mind. I saw Julia out of the corner of my eye, she was trying, unsuccessfully, to hide a smile.\n\n\"Ok. It will be easier with someone to help me.\" She sounded so completely trusting, so innocent, that it made me feel a little guilty again. But one look into her pretty face and my lust flared again. She was happy to be with me, I told myself. I would make her happier than she could ever be otherwise, she would be happy being my lover.\n\n\"Well I don't know about you two,\" interrupted Julia, \"but I'm starving! I need a pizza!\"\n\nPizza seemed to make up about eighty percent of Julia's and my diet lately. There were about six pizza places that delivered to here and four of them were pretty good, so we had a little variety at least.\n\nI looked at the clock, quarter past one in the morning. Maybe we had been asleep for longer than I had thought! We must have passed out around ten or eleven. So we had been asleep for two or three hours! And my pussy had still been twitching when I had woken up. Wow, that had definitely been a little too much. Better not do that again, one of us might have a heart attack or something!\n\n\"Well it's after one, not much is going to deliver now.\" I said as I stood up. My legs were trembling, I could barely stand. \"And it doesn't look like I'm going anywhere soon!\" I said laughing a little at my own infirmity. The girls were standing now and they didn't seem to be in much better shape than me.\n\n\"I think Eddies Pizza is still open, they might deliver this late.\" Responded Julia.\n\nI called and got a gruff, older male voice on the other end, it was Eddie. No matter when you called, Eddie was there, he must sleep on the floor, I thought.\n\n\"Hi Eddie, this is Mary, from Bay View Heights. Can we still get a delivery?\" I asked in my sweetest voice. \n\n\"Oh, I think we can manage it. You and Julia buy so much pizza I'll be able to retire early. What'll it be tonight? Or should I surprise you?\" The gruff voice came over the phone but I could picture the old mans broad smile.\n\n\"Why don't you surprise us tonight, but we have a friend over so nothing too wild, and no anchovies tonight.\" I replied. Sometimes we just told Eddie to surprise us. And he had made up some pretty bizarre combinations, most pretty good, but some were pushing it a little.\n\n\"Be about fifteen minutes. Bye.\" He hung up.\n\nWe got cleaned up a little and tried to straighten up the living room a bit, it was kind of a disaster. Clothes and pillows were everywhere. I put on a short, black silk bathrobe and Julia put on a flimsy nightgown. Julia gave Alissa one of my nightgowns, a rather short, see-through one, I noted happily. \n\nA few minutes later he doorbell rang. \"Pizza's here!\" I called out and went to get the door.\n\nI opened the door and was surprised by what I found there. It was Eddie's daughter, Cassandra. \n\nCassandra was eighteen or ninteen years old, a freshman at the local community college, but she looked much younger. Short, about Julia's height, a little skinny, adequate breasts and dirty blond hair cut short. Her face was pretty with a small mouth and small nose but her most arresting feature was her incredible, big, blue eyes. They were a very bright blue, almost a cornflower blue and they drew you in, they were hypnotizing. I thought she lived with her father a few miles up the coast, but I wasn't sure her mother had left them years ago.\n\n\"Oh, hi Cass. I wasn't expecting you. You don't usually do deliveries.\" I said, opening the door for the girl. \"Come on in, it's cold out there. I'll get your money.\" \n\n\"I know, dad won't let me do deliveries most of the time, he worries about me. But we were the only two left in the store when you called, and we know you and Julia so he told me to deliver it on my way back to my apartment.\" Cassandra explained as walked in.\n\n\"Why didn't your father deliver it on his way home?\" I asked. Apparently she had moved out of her dad's house An idea began forming in my head.\n\n\"Oh, he probably won't even go home tonight, he practically lives in that shop. Did you know that he actually had a cot in the back rooms he can stay there overnight? Sometimes I think he's crazy!\" she laughed. \n\n\"So, you live alone now?\" I asked as casually as I could manage. I was stalling, pretending to look for cash. \n\n\"Oh yeah, you probably didn't know. I got an apartment with my best friend about a month ago. It's just up the street from here. But she's staying with her parents in Maine this week, so I have the place to myself.\" She bubbled, obviously happy and excited to be out on her own.\n\nAll alone... perfect.\n\n\"Well then you'll just have to spend the night here with us! You can be out entertainment!\" I said with a broad smile.\n\nCassandra stopped bubbling and looked at me, a little confused. \"What do you mean entertainment? I... I think I had better be going. Can I just have the money for the pizza please? I have to go.\" She was looking and sounding more nervous by the second.\n\nJulia and Alissa chose that moment to come out of the bedroom dressed in their skimpy nightgowns. They both looked very sexy and slutty. Alissa stopped behind Julia and, wrapping her arms around Julia's middle, rested her chin on Julia's shoulder. Alissa purred, \"Ooooo, she looks cute, is she going to stay and play with us?\"\n\nCassandra had enough by now and was backing towards the door, \"Why don't you just keep the pizza, it's on the house. I'll see you later.\" She reached for the doorknob.\n\nI pushed hard on her mind for her to obey my every command and said aloud, \"Come back over here.\"\n\nCassandra immediately turned around and came to stand in front of me. Her eyes, already big, were now huge and darting around frantically. She didn't know why she had just come back over, she didn't want to, she wanted to run away as fast as she could. But her body didn't seem to respond to her orders.\n\n\"What's the matter Cassandra? Why do you want to leave?\" I said in a soft voice. As I said it I pushed on her mind and body. I made her body as sensitive as I had made the girls and myself earlier in the night. She shuddered slightly at the touch of my mind but that was all. She had no way of knowing what I had just done to her but she would find out.\n\n\"Why don't you step up onto the coffee table and give us a little show.\" I directed her, pointing to the table.\n\nShe went over to the table and stepped up onto it. Alissa and I went and sat together on the couch, Julia went over and turned on some sexy music and them came and sat down next to Alissa. As she sat, Julia leaned in and kissed Alissa's ear, tracing around it with her tongue. Alissa let out a soft moan.\n\nBy now Cassandra was terrified but she was also starting to get turned on and that scarred her even more. \"What are you doing to me?! I have to go! Please, let me go!\" Even as she said it her body started to sway as her dance started. Her hips swayed back and forth and her hands traced up and down her body. She twirled around and slowly wiggled her ass in out faces. When she turned back around I could see that her cheeks were flushed a bright pink and tears were running down her cheeks but her nipples were also poking stiffly out of her tee shirt. She was scarred but she was getting turned on now too.\n\n\"You're a pretty sexy little thing. Why don't you show us a little more.\" I directed her again.\n\nShe continued to sway and turn but now her hands were stroking her body not just tracing it. Her hands fondled her breasts and then went to her ass, where she grabbed it and squeezed it for us to watch. As her hands came back up they lifted her tee shirt revealing her braless chest. She had a skinny, well tanned body but with much lighter triangles over her breasts where a bikini top had been. She must have gone on vacation somewhere tropical I thought.\n\nShe flung the top across the room and continued to stroke and fondle her breasts. When her hands touched her nipples she gasped in rapture. I knew what she was feeling because I had felt it too. Her very sensitive nipples were sending more pleasure to her brain with just that little touch than her clit ever had during her best fucking.\n\n\"I can't believe what I'm doing, I don't want to but I... but... oooohhhhh!\" She moaned with another pinch of her nipples. \"I feel like such a slut, such a pervert! I...oooohhhh!\" She continued to gyrate and fondle herself.\n\nHer hands left her breasts and wandered downward. She turned around and bending over, finally pulled her jeans and panties down, giving us an excellent view of her moist lips and tight little ass. She straightened up and turned to face us. Her bush was light brown and neatly trimmed like a little 'V' pointing to her slit. One of her hands slowly traced her moist pussy lips for a few moments then finally slipped inside. \n\n\"Oooohhh! It's sooooo good! How can it feel so good! What did you do to meeee?!\" She started moaning deliriously and fell onto the table, her finger still working between her legs. \n\n\"I just told you to put on a show. I didn't tell you to play with yourself in front of us. You did that on your own.\" I cooed to her. \"Do you like us watching you?\" \n\n\"Yes.\" Came back her soft reply, she sounded ashamed.\n\n\"Do you want Julia and Alissa here to show you what real pleasure is?\" I teased her, knowing the answer.\n\n\"Yes.\" Her reply was barely audible and she was crying again but her fingers continued to work between her legs.\n\nI stood up and went over to her. Bending down I brushed the tear from her cheek and said \"Don't worry, we'll be gentle.\" And I kissed her softly on the lips.\n\nThere was a sharp intake of breath from Cassandra as she realized she had just been kissed by another woman. Then she moaned loudly and said \"I want you, all of you. Please, I need it, now!\"\n\nThe girls practically leapt off the couch when she said it. We gently laid her out on the table, I took her head and started passionately kissing her, Alissa explored her breasts with her mouth and Julia started teasing her clit with her tongue.\n\nIt wasn't long before Cassandra was moaning and crying out with pleasure like she had never known. She was holding onto my head with on hand and Alissa's head with the other, keep our lips on her sensitive skin, not knowing what was happening to her but wanting more anyway.\n\nI broke our kiss and went down to share her tits with Alissa. Alissa smiled when she saw me start sucking Cassandra's sensitive nipple, knowing the pleasure it was giving the young woman. Alissa had a dreamy look about her and she was moaning slightly. Sure enough, when I looked she had her hand between her own legs.\n\nSo, she wants to play with her pussy and Cassandra's tits, hmmmm. I stood up and looked down at the slim girl who was writhing on the small, low table. I grabbed a big pillow and kneeling on it, leaning slightly over Cassandra, I grabbed her breast and started to stroke my clit with her nipple.\n\nAlissa saw what I was doing and she immediately did the same. Soon all three of us were moaning with ecstasy. I thought, this would be so much better if she had bigger tits. Then I thought, why not?\n\nI closed my eyes, concentrated and pushed. I felt her breast getting heavier, swelling in my hand. I pushed more, heavier still, I pushed again.\n\nBy now Alissa and Cassandra had realized something was going on. Cassandra, her eyes still glazed with lust, was looking at her breasts, now the size of cantaloupes, with something between horror and wonder. Alissa had much the same look in her eyes.\n\nI pushed on both of them to accept it and love it. No time for mind games, I didn't want the action to stop.\n\nAlissa and I eagerly rubbed our clits with Cassandra's big, new nipples. Alissa and I were chest to chest over Cassandra and we started rubbing our breasts together, out nipples flicking against each other. Cassandra had a hand on each of her tit's and was helping us fuck her nipples. Fuck her nipples... hmmm.\n\nI pushed again. I felt Cassandra's nipple get bigger and harder. Mmmm, that's nice, but it could be nicer. I pushed again, more. I felt her nipple swell against my clit, bigger, longer. Moving my hips I pushed tip of her nipple into my pussy, it was wonderful, but I needed more. I pushed again. Her nipple slid deep into me like a little dildo. \n\nAlissa interrupted my thoughts with her cries, \"Oh Cassandra, it's so good! Tit fuck me baby! Fuck me with your big tits!\" \n\nCassandra had taken over control of her tit and was working it in and out of Alissa's cunt. Now that she had the rhythm she started doing the same to me. Cassandra was moaning constantly, her head rolling from side to side but she continued to bounce her breasts, working her nipples in and out of out cunts.\n\nI looked down and saw Julia's beautiful face buried in Cassandra's snatch. Didn't that girl ever get enough pussy? I wondered. She must be working that long tongue around inside Cassandra, licking the girl's most intimate places, drinking every drop of her sweet nectar.\n\nIt all suddenly became too much for me and I started to cum. I held it back as I quickly linked Cassandra to us so we would all cum together. Then I couldn't hold it any more and I came. \n\nA long, loud moan escaped my lips as the heat surged through me. The girls were moaning and screaming with me as the waves of fire surged higher and higher until I thought my brain would fry. I felt Cassandra's nipple sliding in and out of my pussy, she was still bouncing her huge tit's, still tit fucking me and Alissa even as she experienced her first lesbian orgasm.\n\nI felt hot juice squirt from my pussy as I came and came, a hot gush of girlish delight. My delicious girl cum soaking Cassandra's big breasts. \n\nMy lovers and I came and came, a string of climaxes that never seemed to end. Alissa's tongue was dancing in my mouth and her hands were fondling my breasts. Julia continued to lick Cassandra while she played with her own pussy.\n\nFinally, Alissa and I collapsed, unable to take it any longer. Cassnadra's long nipples slid out of each of us with a soft wet pop and she rolled over, forcing Julia to stop eating her pussy.\n\nThe four of lay sprawled on the floor catching our breath, letting out passions slow. I looked at Cassandra's nipples, they were shrinking back to normal size, well, actually a little bigger than normal. I guessed they would only get bigger when she was aroused. I might have to change them back, could be embarrassing for her in public, but I'd leave them for now. But her tit's were still huge, I figured I'd leave them, she could say she got implants. I pushed on her mind to make her love her new breasts, then after thinking for a moment I pushed on her again to make her a lesbian permanently, then I made her love me and the other girls. \n\nAfter a few more minutes of resting the four of us made it to the bedroom and fell asleep snuggled together, naked. \n\nI'm going to have to get a bigger bed, I thought.\n\nThe ring pulsed with a warm glow and I fell asleep.\n\nTo be continued... \n\nThanks to new fiends (you know who you are) who provided feedback and praise, keep it coming, it keeps me inspired! \n\nRemember to vote, 5's are always appreciated! "
    ],
    "authorname": "cheerful_deviant",
    "tags": [
        "minutes julia",
        "felt cassandra",
        "hard mind",
        "julia slid",
        "ring gave",
        "unable longer",
        "pushed mind",
        "make strip",
        "julia shoulder",
        "control women"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/changed-ch-03"
}