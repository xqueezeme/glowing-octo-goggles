{
    "title": "On Display Ch. 02",
    "pages": [
        "This story starts where my story \"On Display\" stopped. I recommend that you read \"On Display\" first.\n\nThis story is a work of fiction. Some real institutions are mentioned, but they are used fictitiously. Insofar as the author knows, no real person affiliated with any of those institutions has ever behaved as described in this story. Any similarities between any character in this story and any real person are coincidental and unintended. I encourage comments on this story, both favorable and unfavorable. Thank you for reading.\n\n________________\n\nPatti did not get pregnant. Part of me was disappointed. A pregnancy seemed like it might offer the opportunity of a permanent relationship with Patti, which seemed very desirable.\n\nPregnancy was not the biggest risk Patti and I took having unprotected sex together. Objectively, it was extremely poor judgment. Yet, as the financial types tell us, you must take greater risk to earn greater return. That is what happened with us. I think Patti probably explained it best in a conversation she and I had later:\n\n\"I told you about Jevon,\" Patti said. \"After Jevon, I was convinced that my bad judgments about men could, literally, be the death of me. Yeah, I liked you, liked your body, and wanted to fuck you. For me, those were all red flags. Belinda sort of shamed me into taking my clothes off and posing. You were so non-threatening. I took the initiative to have sex. You didn't say, 'hey, I don't have a rubber.' You just trusted me and went with it. That you trusted me so completely was exactly what I needed to trust you.\"\n\nWe went to Belinda's place in Athens the next week to see the photos. Belinda had separated her pictures into two groups: the ones she thought she could show and sell, and the ones which were too explicit. Belinda had taken some very explicit pictures of Patti and me fondling each other and fucking. Belinda showed us those pictures first. Patti's comment was, \"Will, we look pretty good together.\" You can't imagine how good that comment made me feel.\n\nThe other group of pictures included Patti and me nude in the tree. There were some in which Patti and I were fucking but Belinda's use of angles and light made the sex implicit rather than explicit. \"I talked to a gallery in Columbus,\" Belinda said. \"They're willing to give me a show including these pictures. I won't use them unless you agree, but, without your nudes, I don't get the show. I'll send you the files of all the pictures and give you prints, if you like, of the one's that are too explicit to show.\" Patti and I were fine with any of our pictures going into Belinda's show.\n\nThe show was at a gallery on the north side of Columbus on a Saturday afternoon in October. In addition to our nudes, the show included some of Belinda's other work and was well attended. The way some people looked at us, I'm sure they realized that the black woman in the red dress and the older man beside her were the models for the nudes. No one said anything to us. It would have been interesting if someone had.\n\nPatti and I posed for Belinda several more times. As the weather got cooler, we had to stay indoors. Belinda found some interesting venues (e.g., an empty high school gym). Her pictures were just short of what Belinda felt the gallery would reject as \"pornographic.\" Patti and I had fun.\n\nPatti's lease on her apartment ran through the following summer. Nonetheless, she spent more and more time as my house as fall turned into winter. Patti and I continued to lift together three times a week, although we started doing our workouts nude. We were, usually, disciplined enough to finish the major lifts before we started fucking.\n\nThe weather got consistently warm the following May. Patti came from work one evening, stripped off her uniform, and put on running shoes. \"We need more aerobic work,\" she said, \"get your shoes on.\" I stayed nude all the time around the house. I guess I gave Patti a quizzical look because she said, \"haven't you ever run nude?\" I shook my head. Patti smiled. \"I haven't either so it will be a new experience for both of us.\" \n\nI put on running shoes and followed Patti outside. Once off the deck, Patti set out at a moderate pace, which she increased as we warmed up. Patti knew the woods and found paths on which we could run. Running in the woods was different from the running I'd done on paved surfaces. We had to be much more conscious of where we put our feet, especially since neither of us wore anything to protect our skin if we fell.\n\nWe were both sweating when Patti finally stopped in a glade. \"That's about three miles,\" she said. The perspiration on her dark skin looked, well, arousing. Not having clothes available was exciting. Patti came close. \"Did I mention that I like it when you're sweaty?\" she asked. She began running a hand along the top of my dick. As I got hard, she wrapped her hand around me and continued stroking. Suddenly, she giggled, pulled her hand back, and started running towards home. Over her shoulder, she said, \"I want to see how well you run with a hard on.\"\n\nFollowing Patti's bare ass was ample incentive for me to keep up. We'd gone about a mile when Patti stopped in front of me and bent over. I kept running until I was right behind her. She stayed bent over and the sight reinvigorated my hard on. I came up behand her and slid in. \"I'm glad you can take a hint,\" Patti said. We were in a place where the trees were much thinner. \"There's a hiking trail just to our right,\" Patti said as I fucked her. \"Wouldn't it be great if someone sees us?\" \n\nAs Patti became more aroused, I had to wrap my arms around her to hold her up. I was basically fucking her doggy-style, except we were standing. That changed the angle enough, I guess, that it felt different from our horizontal intercourse. The difference didn't keep either of us from coming. After we'd kissed and caught our breath, Patti gave me a look of mock disgust. \"Damn,\" she said, \"now I have to carry those ounces of your cum for the rest of the run.\" It didn't seem to slow her.\n\nA week or so later, Belinda called Patti. Belinda had a friend who was a yoga instructor in Athens. The university had just finished second semester and most of the students were gone. To generate some business, Belinda's friend was going to give nude yoga classes two nights a week. Belinda thought we might be interested.\n\nPatti was interested, but I had never done yoga. Patti called the instructor, Gretchen, to see if neophytes were welcome. When Gretchen told Patti that people new to yoga were welcome, that sealed the deal. We were going to make the hour and a half roundtrip to Athens twice a week to do yoga with no clothes on.\n\nI wasn't sure what to expect from a nude yoga class. Gretchen was a very slender, rather plain, woman about my age. There were six other people in the class, five women who all appeared to be in their twenties, summer students I assumed, and a boyfriend whom, I think, had been shamed into coming. I unwrapped my new mat and put it on the floor at the back of the room next to Patti's. There was some giggling as everyone undressed.\n\nYoung women with no clothes on are invariably attractive. However, none of the girls in the class compared to Patti, nude or clothed, except one. This woman was shorter than Patti or me. She had jet black hair to just below her shoulders and a skin tone that suggested Central or South America. She had a gorgeous face with prominent cheekbones, huge eyes, and a ready smile that formed between two exquisite lips. She seemed perfectly comfortable undressing with strangers. I could understand why: her breasts, although somewhat large, were firm and she had a perfectly shaped tight ass. I was more than happy to watch her, when I wasn't preoccupied trying not to fall into Patti.\n\nNude yoga was better than I had expected. By the end of the hour class, everyone seemed comfortable being nude around each other, except the boyfriend. On the drive home, Patti commented, \"the girl who looks Latina is certainly a rare beauty, isn't she?\" I had to be careful not to agree too enthusiastically but I also couldn't feign indifference. Patti's BS meter is remarkably effective.\n\nAfter the second class, Gretchen suggested that we all have a drink at a bar a few doors away to build \"camaraderie.\" All eight of us went. I guess it made sense that, as the only non-whites in the class, Patti and the young beauty would gravitate to each other. The young woman sat next to Patti at the outdoor picnic table where we gathered once we had drinks in hand. The two of them hit it off immediately.\n\nThe young woman's name was Soluna Warren. \"Mom was a teacher in Guatemala,\" Soluna told us. \"She was well-educated by their standards and spoke English. The local government changed. The teachers were fired and replaced with people who were supporters of the new party in power. Mom was desperate for a job and naive. Someone told her there were teaching jobs in America and offered to take her there. Of course, Mom came in illegally. Once she was here, she was told that she owed a lot of money to the people who brought her here. She was put on a crew of farmworkers who went around the country.\"\n\nSoluna took a sip of beer before continuing. \"Mom's crew ended up picking berries at a farm in Auglaize County. It was owned by an older couple and managed by their son, Keith. Since Mom was the only person on the crew who spoke English, she was who Keith dealt with. Mom was very beautiful, I've seen pictures. She and Keith Warren fell for each other and got married. I was born in Auglaize, well, actually, at a hospital in Troy, and grew up on my grandparents' farm which Dad inherited.\"\n\nThat explained Soluna's name, appearance, and her unaccented Midwestern English. She and Patti kept talking. I sat quietly, enjoying the company of the two most beautiful women I had ever met.\n\nSoluna was a rising senior at the university. She was taking a summer school class and working at a local grocery. \"Frankly,\" she said, \"summer in Athens is more exciting than being home in Auglaize. You won't find any nude yoga classes there.\" Soluna was taking a dual major in creative writing and Spanish. \"You know,\" she said, \"I never spoke Spanish until I took it in high school. Dad doesn't speak it so the only language I heard growing up was English.\"\n\nWe were into our second beers. A few of the others in the class had already left. Patti and Soluna were talking about how they spent their spare time when Patti let slip that she and I had started running nude in the woods.\n\n\"Wow,\" Soluna said, \"that is so cool and an odd coincidence. I ran cross-country in high school. There was a pond right on the edge of our property. Every summer the boys and girls in the area would skinny dip there. Nothing at all sexual, but I'm sure the parents would have freaked out if they'd known. I thought it felt great. One of the girls I skinny dipped with also ran cross-country. We used to talk about how great it would be to run with nothing on. Of course, we couldn't do that in a meet. But, at the end of our senior year of high school, we started going out on Friday nights to run. We knew some routes through fields where no one would see us. We'd take our clothes off and run in our birthday suits. It was just as great as I'd imagined.\"\n\n\"You should come down and run with us,\" Patti said.\n\n\"I'd love to,\" Soluna replied. \"When are you running again?\"\n\nPatti looked at me. I nodded. She told Soluna, \"tomorrow evening, around 6:15 - 6:30.\"\n\n\"May I join you?\" Soluna asked.\n\n\"Of course,\" Patti replied.\n\nIt was about 6:30 the next night when we heard a car with a bad muffler coming up the track to the house. A few moments later, there was a knock on the door. Patti and I were already undressed to run. I opened the door. Soluna, looking incredible in a tee shirt and jeans, stepped inside with a pair of running shoes in her hand. She looked at me, then at Patti. \"I love your running outfits. You guys really have privacy out here.\"\n\nSoluna sat down in a chair in the foyer and took off her shoes. She peeled off her tee shirt. She wore nothing underneath. She stood, unzipped her jeans, and pushed then down. Again, she wore nothing under her outer clothes. As Soluna stepped out of her jeans, she said, \"I didn't see the point of putting on underwear since I was coming here to get naked.\" She sat again, put on her running shoes, then stood. Holding her arms out, she asked, \"What do you think of my running outfit?\"\n\n\"Sensational,\" Patti said, which seemed an understatement to me.\n\nSoluna looked at me. \"What do you think Will?\" she asked.\n\nI had to be careful. I didn't want to say anything that would suggest to Patti that she might have competition. She didn't. I also didn't want to discourage Soluna from going nude around us. \"You look beautiful,\" I said.\n\n\"Thank you,\" Soluna said. \"If you haven't noticed, I like people looking at me when I'm nude.\" Soluna smiled. \n\nPatti took the lead because she knew best where to run. Much of the way, we had to run single file. I let Soluna go ahead, honestly, to watch her gorgeous ass. She looked over her shoulder at me often. When the trail permitted, she slowed so we ran side-by-side. The run was much less demanding for her than it was for me.\n\nPatti led us to the same glade she and I had run to on our first nude run. As I stood catching my breath, Soluna was walking around. \"I haven't gotten outside Athens as much as I should,\" she said. \"This place is beautiful. It would be almost sacrilegious to wear clothes here.\"\n\n\"More and more,\" Patti said, \"I wish I could go without clothes everywhere.\"\n\n\"I'm with you on that,\" Soluna replied. She looked at me. \"This is the first time I've run with a naked guy. It is kind of interesting to watch him bounce around.\"\n\n\"You like looking at my boyfriend's dick?\" Patti asked.\n\n\"I do,\" Soluna answered.\n\n\"I do too,\" Patti said. The two women smiled at each other. It was one of those smiles that communicated something which we men don't understand.\n\nAfter our run, Soluna used our outdoor shower. We invited her to stay for dinner, but she declined. She said she had a paper due Monday that she needed to finish. It was Friday night. I expected someone was waiting for her in Athens. Given Soluna's attractive personality and incredible physical beauty, it seemed impossible that there wasn't.\n\nSoluna gave the first example of her disconcerting ability to know what I'm thinking. \"It really is a paper, Will,\" Soluna said. \"I don't have a boyfriend. Maybe I'll explain why not next time we get together. When are we running again?\"\n\n\"Sunday?\" Patti asked.\n\n\"I can do that,\" Soluna said with a smile.\n\nAfter Soluna left, Patti said, \"I really like her.\" Patti paused. \"No bullshit, Will. You think she's hot too. That's ok.\"\n\nThe three of us ran naked that Sunday afternoon. Patti got daring and led us along a road for about a half mile. One car passed us. It honked but didn't stop.\n\nWhen we were back at the house, we let Soluna use the outdoor shower first. She was in for about two minutes when she turned, looked at Patti, and said \"join me?\" Patti got under the shower with Soluna. At first, Soluna was just washing Patti's back. Then, Soluna's hands moved to Patti's ass. After a few moments, Patti turned to face Soluna. The women kissed. Each soon had a hand between the other woman's thighs. It was incredibly hot watching Patti and Soluna finger-fuck each other to orgasms.\n\nAfter they had come and then kissed some more, Soluna turned to look at me. I was sitting in a patio chair with a raging hard on. To Patti, Soluna said, \"Will looks lonely.\"\n\n\"We can fix that,\" Patti replied. They stepped out of the shower and made a show of toweling each other off, which did nothing to reduce my erection. The two women walked over to where I was sitting.\n\nWhen Patti and Soluna were so close they were almost touching my knees, Soluna asked Patti, \"do you share?\"\n\nPatti smiled and said, \"I will with you.\"\n\nBoth women knelt and leaned over my lap. Patti started licking up the right side of my dick while Soluna licked the left. They did that several times before Patti said, \"I'll bet he's close.\" Patti bent down and took my balls in her mouth. Soluna leaned over her, pressing her magnificent breasts into Patti's back, and put her sensuous lips around my dickhead. With Patti's tongue on my balls and Soluna's on my dick, it wasn't long before I shot forcefully into Saluna's mouth. Patti let go of my balls and said, \"he came.\"\n\nSoluna made a show of swallowing before she smiled and said, \"yes, he did.\"\n\nPatti explained, \"what we did in the shower was spontaneous, but we didn't want you to feel left out Will.\" In truth, I felt rather good just then. \n\nSoluna agreed to stay for dinner. We didn't bother getting dressed. I fired the grill while Patti threw together a salad. Once dinner was on the outside table, Soluna quipped, \"you guys eat better than I do.\"\n\nThe three of us managed to go through a bottle of wine over dinner. After we had cleaned up and opened a second bottle, Patti asked, \"so, Soluna, what's this about you not having a boyfriend? That doesn't seem right.\"\n\nSoluna thought for a moment before she answered, \"I think you two are going to be special friends, so I'll be candid. When I was in high school, I was getting it on regularly with my cross-country coach. He was about twenty years older than me, but single. We both knew that the coach/athlete thing was illegal as hell so we kept it quiet. You may think Jerry was taking advantage of me, but I got as much or more out of the relationship than I gave. He taught me a lot, and not just about sex. Anyway, that ruined me for guys my own age. They just seem so immature and awkward. Maybe I'd have felt that way even without Jerry. Mom says I have 'an old soul.'\" \n\nPatti glanced at me. \"So, you like older men?\" she asked Soluna. \n\n\"Very much,\" Soluna answered, also looking at me. Soluna, I knew, had turned 21 about a month ago. I was literally twice her age. I was also eleven years older than Patti.\n\n\"I do too,\" Patti said to Soluna. They shared another one of those smiles that said something I didn't get.\n\nSoluna's grocery shift started at 7:00 a.m. he next morning, and she had to drive back to Athens. Patti was usually at work by 6:30. Soluna stayed the night that night. We went to bed early. However, it was a while before we got to sleep. Patti rode me while Soluna sat on my face and let me eat her. She tasted nice. Astonishingly, we all came at about the same time. \n\nPatti and Soluna showered together again early the next morning. I fixed both women coffee in travel cups. I got two kisses on the lips in thanks. I felt lonely after Patti and Soluna left for work. I dragged my naked body back to bed.\n\nBetween our runs and yoga class, Patti and I saw Saluna almost daily. During most of that time, none us had a stitch on. Belinda had been nice enough to frame a couple of the prints she had of Patti and me very obviously fucking. I had hung them in the house the Monday after Soluna stayed over. She saw the pictures when she came for our next run.\n\n\"You two posed for these?\" Soluna asked. \"That is so cool!\" Patti told Soluna about our work with Belinda. Very soon, the three of us were posing nude for Belinda on Sunday mornings. The poses usually included some sex, either Patti and me or Patti and Soluna. Soluna would come home with us. In the afternoon, Soluna, Patti, and I would take a nude run. Soluna would stay for dinner, and usually stay the night.\n\nI had never been happier. I should have known it couldn't last. Things started going sour when the head of the forest where Patti worked announced his retirement. His deputy was immediately promoted. Patti was next in line and should have been promoted to the deputy position. That would have meant more authority and a pay raise. No announcement came.",
        "Patti started to worry. I tried to reassure her. I shouldn't have. The announcement finally came on August 1. The new deputy was a white male transferred from a park in northern Ohio. That was unusual because, I understood, ODNR rarely moved people around. According to Patti, it was more unusual because management of a forest differed materially from managing a park. She thought she was passed over because she was black and female. I couldn't refute that.\n\nI helped Patti send out resumes. I decided I'd cross the bridge of what to do if she got a job out-of-state if we got there. It didn't take long. Patti went to an interview with the Colorado Department of Parks and Wildlife and came back with a job offer. The only downside, to Patti, was that the job was in the main office in Denver. The upside was that it offered substantially more responsibility, and pay, than she was likely to get in Ohio. It was a major move up the career ladder.\n\nWe talked for hours. We brought Soluna and Belinda into the conversation (our only living family was Patti's brother who was an Army officer stationed in Korea). Patti said she would turn the job down and stay if that's what I wanted. I couldn't do that to her. I also couldn't move to Denver.\n\nI bought Patti a new SUV as a going away present. It was painful as we loaded her things into it, and she started her drive to Denver. I could not erase the image of Patti in in the driver's seat as she pulled out of her complex for the last time. I really didn't want to lose that image, but it wasn't doing me any good. I felt worse than I had when Gail had dumped me.\n\nPatti left at the end of August. I moped around the house, not even returning calls, for a week. Patti had left on a Saturday morning. Sunday a week later, I heard a car with a bad muffler coming up my track. The car stopped out front, but it was a few minutes before Soluna came through the front door. She no longer needed to knock. She was nude except for running shoes. To illustrate how hard Patti's departure had hit me, I was dressed when she came in. \n\n\"Get naked and let's run,\" Soluna instructed. I didn't move from my chair. Soluna came over and stood in front of me. She looked exquisite, as always. After a moment, she said, \"you don't look like you can handle a run.\" I nodded morosely. \"Come on,\" Soluna said, \"get your clothes off. We'll take a walk. You need it.\"\n\nSlowly, I stripped off my clothes and put on the shoes I wore to run in the woods. Soluna took my hand and led me outside. It was a gorgeous early September day. Where the sunlight struck my bare skin through the trees, it felt warm and good. Birds sang. Squirrels played in the branches. Soluna kept my hand in hers. We walked slowly side-by-side.\n\nAfter, maybe, eight or nine minutes of silence, Soluna said, \"wouldn't it be nice if it can always be this way?\"\n\n\"What do you mean?\" I asked.\n\n\"Us, naked in the woods, Soluna replied. I had nothing to say in response.\n\nWe walked to the same glade we had run to the first time Soluna had run nude with Patti and me. Soluna led me to a large tree trunk lying on its side. We sat down on our bare asses. Soluna looked in my eyes for a time. \"Will,\" she finally said, \"I love Patti too. I miss her too. My mother has told me I have a special insight into people, that I can see what they have in here.\" She placed her right hand on her left breast. \"When I first met you and Patti, I knew the three of us would have a special relationship, and we have. Patti will always be a dear and unique friend, to both of us. What has changed is how we enjoy that friendship.\"\n\nSoluna looked at me as if I didn't understand her. A butterfly landed briefly on her shoulder. Soluna smiled. The butterfly flew off. \"I'm glad,\" Soluna said, \"that I will be a writer.\"\n\nI didn't see how that statement connected to what she had been saying. \"Why?\" I asked.\n\n\"Because,\" Soluna replied, \"I will work for myself. What people will have to judge me on are my words, not my skin color or my heritage or my lifestyle. They won't see that I'm Latina and won't be able to impose their ideas of what that means on me. Patti doesn't have that. She must work with people. The people she worked with here judged her based on their ideas about a black woman.\"\n\nSoluna could see that I still wasn't following her exactly. \"Will,\" she said, \"our relationship with Patti hasn't ended, but it's changed. That change creates room for the relationship between you and me to grow. Our relationship won't change because of how people judge me.\"\n\nSoluna stood. \"Ready to head back?\" she asked. I stood up. \"Brush off my ass please,\" Soluna said and turned her back to me. There were some dirt and leaves stuck to her gorgeous buttocks. With an open hand, I gently brushed them off. Soluna turned to face me. \"You have a nice touch,\" she said. She leaned forward and kissed me on the lips. I put my arms around her bare body and held her to me.\n\nSoluna finally broke our kiss and backed away slightly, creating enough space between us for her hand. She wrapped her hand gently around my dick. \"This,\" she said, \"has never been in my body in the place it is supposed to go.\" That was true. Patti, Soluna, and I had a lot of sex together, but I'd never had intercourse with Soluna. Soluna began rubbing her fingers over my dickhead. \"Let's fix that now,\" Soluna said.\n\nSoluna led me to a mossy patch of ground. As she stroked my dick with one hand, she spread her legs and guided my hand between her thighs with the other. I began tracing her lips with my finger. As Soluna made me erect, I slid a finger in her and began rubbing her clit. All the time, we were looking in each other's eyes. When we were both ready, Soluna said softly, \"Patti told me about her first time with you, how you trusted her. I want you to trust me too. I promise you will never regret it.\"\n\nSoluna lay down on the moss. She spread her legs. I got down above her, lowered my hips, and slid my dick into her. The look on Soluna's face as I entered her was a look of satisfaction and accomplishment. \n\nWriters, me included, often make it sound like a couple has intercourse for the first time and everything just falls into place: they intuitively know how to bring each other to monumental orgasms. Of course, that is not how it really happens. It takes trial and error to learn what is most gratifying for a new partner. Soluna was wonderful because she told me how what I was doing felt to her. She asked how what she was doing felt to me. She suggested small changes that enhanced the sensations for her and for me. It sounds districting, but her constant verbalization of what she was feeling and what she wanted me to do next was extremely erotic. \n\nSoluna had a strong, flexible body. She seemed to have complete control over every muscle. Not that I'd had intercourse with a huge number of women, but I felt the walls of Soluna's vagina doing things to my dick which I had never felt before. They all felt great.\n\nMost endearing, Soluna was patient. At one point, I started thrusting into her faster. \"Will,\" she said, \"relax. You don't have to impress me. We'll both come, but what we're doing right now also feels wonderful. Let's enjoy it, not rush.\" I slowed down and tried to focus more on savoring that instant rather than planning my next move.\n\nWe made love on the moss for a long time. Our orgasms built slowly. When we came, however, it was explosive. I started to come first. My first shot inside Soluna was painfully hard. She, of course, felt me spurt and said \"good,\" which soon morphed into \"gooood!\" Suddenly, her strong legs were locked around me and her pelvis was bucking into me violently. Her fingers dug into my back as she took short, fast, deep breaths. Finally, she squeezed her arms and legs powerfully and emitted a loud \"uuuuuuuugh, oh, uuuuum.\" I shot my last semen on \"oh.\"\n\nI'd had orgasms before, but not like this one. I had been in women when they orgasmed before, but nothing like Soluna coming beneath me. I thought this was part of what Soluna had meant when she promised to be \"here for you always\" and I loved it. \n\nAfter a long time, we stood up and brushed each other off. Soluna took my hand. \"We'll shower when we get back to your house,\" she said.\n\nIn all the time Patti and I and Patti, Soluna, and I had run naked in those woods, we had never encountered other people. As Soluna and I walked home from our first intercourse, we met a young couple going the other way at a point where there were evergreens close on both sides of the trail. The other couple was, of course, clothed. There was no space for any of us to step off the trail and let the others pass, so we had to brush by each other. The clothed young man and woman gave us thorough looks. As close as we were, it would have been almost impossible for them not to. They smiled at our nudity but didn't say anything.\n\nAfter we came out of the evergreens, Soluna stopped and faced me. \"They could see we had just made love,\" she said with a smile. \"I'm proud.\" She kissed me again.\n\nSoluna had class four days a week so she had kept her apartment in Athens. There were days we didn't see each other. We did talk by phone every day. Although Soluna had just turned 21, talking to her was like talking to any other fully formed adult. Maybe there was something to the \"old soul\" thing.\n\nPatti called a few days after Soluna and I made love in the woods. \"I'm sorry Will,\" she said. \"I should have called sooner but I've been busy getting my feet on the ground and, honestly, it was too painful.\" She paused before saying, \"please tell me you and Soluna have fucked by now.\" I had always been completely honest with Patti, so I admitted that we had. \"Good,\" Patti said. \"When I was leaving, I thought about telling you to hook up with her, but I didn't think I could run out on you and tell you what to do with your life going forward. Hang on to Soluna. She's one of a kind. I know you and I'm fairly sure I know her. She's young, but she's the best partner you'll ever find.\" \n\nI steered the conversation to Patti's new job and her new life in Denver. Both seemed to have started well. Before she ended the call, Patti circled back to Soluna. \"I want you two to fuck a lot,\" Patti said. \"I'm hoping you'll discover some things you can show me when I come back to visit.\" Unfortunately, when Patti finally did visit, she had her own lover.\n\nAs I said, Soluna's aspired to be a writer, in both English and Spanish. Soluna gave me a couple of pieces she had written. One was a longish short story for a class about a young girl from El Salvador who is adopted by a childless couple in Central Ohio, obviously somewhat autobiographical. It took the girl's life through the start of high school and, I thought, painted a vivid picture of someone from one culture growing up in another culture which she hadn't chosen with no roots to her origins.\n\nSoluna gave me the other piece with the explanation, \"this is my only piece of erotica so far. I wrote it in high school. You're the first person, besides me, to read it.\"\n\nSoluna's erotica told the story of a young woman, Inez, who was walking in a field and was abducted by aliens. They took Inez into their spaceship, stripped her naked, and tied her spreadeagle to a table in the main compartment of the ship. The entire crew of aliens inspected and probed her pussy before deciding Inez was worth taking home. The aliens threw her clothes out of the ship and took off, leaving her tied naked on the table. The rest of the story told of the journey to the aliens' planet. The aliens, who had both male and female genitalia, would either fuck Inez at will with their unnaturally thick dicks (\"I must have been imagining you,\" Soluna teased me) or force her to eat their pussies. By the time Inez reached the alien planet, she understood she had been abducted because constant sex with both male and female was her purpose in life.\n\nSoluna's senior year of college was a lot of fun for both of us and cemented our relationship. Soluna graduated with honors. She would stay at the university two more years to get her master's degree. As a grad student, Soluna spent less time in classrooms, so she moved in with me.\n\nWe met Soluna's parents for lunch in Columbus one Saturday. I had met them briefly at Soluna's graduation. Soluna was close to her parents. Since Soluna was now living with me, everyone thought I and her parents should get to know each other.\n\nWhen Patti and I first met Soluna, she had described her mother as exceptionally beautiful when her parents met. From what I saw at graduation, that description still applied in the present tense. Adria Warren looked much like her daughter. Adria was older, about my age, and carried a few more pounds than Soluna, but she was a strikingly beautiful woman. My impression of Soluna's father, Keith, had been of a quiet man, a typical farmer. I got that one wrong.\n\nWhen we met at a Columbus restaurant, I refined my impressions. Keith Warren didn't talk a lot, but he was articulate and well-informed when he did speak. Adria was more loquacious. She was also articulate and intelligent, with only a hint of an accent. Like Soluna, Adria had a quality that made almost everything she did, down to picking up her fork, seem slightly erotic. She seemed aware that she had that effect and seemed to enjoy it. \n\nAdria and Keith asked me a lot about myself. They were pleasant and polite, but the questioning was comprehensive. When they seemed satisfied with me, the conversation shifted, as it often does in that kind of situation, to stories about Soluna when she was younger. There was nothing surprising until Adria made a passing comment about \"you kids skinny dipping in the pond every summer.\"\n\nI looked at Soluna. She had told me that her parents didn't know about her skinny dipping with other kids in the neighborhood. Soluna's mouth fell open. Finally, she stammered out, \"you knew we were skinny dipping?\"\n\n\"Of course, dear,\" her mother replied. \"Most of the parents knew. No one thought anything of it. You were old enough, we thought. We all knew you weren't getting into trouble. I won't say it was a more innocent time because it wasn't that long ago. It was a more innocent place.\"\n\n\"How did you find out?\" Soluna asked. \n\n\"It made sense,\" Keith said. \"That's a great pond. Adults in the neighborhood skinny dipped there. It seemed likely you kids weren't wearing suits either.\"\n\n\"When you came home with wet hair but basically dry clothes, and I knew you hadn't taken a swimsuit, I could figure it out,\" Adria said. \n\n\"Your mother and I still skinny dip in that pond,\" Keith said. \"The two of you should come to the farm some weekend this summer and join us.\"\n\nNow, it was my turn for shock and amazement. Had I just heard Soluna's father invite us to swim naked with him and his wife?\n\nApparently, I had. Soluna replied, \"That would be great. I hate swimming with anything on and it would be nice to get us all together in the altogether.\" \n\n\"Any weekend Dear,\" Keith replied. \"Just give me a few days' advance warning so I can get the weekend chores done early.\"\n\nOn the drive home, Soluna laughed. \"Will, your face went white when Dad invited us to go skinny dipping with him and Mom!\"\n\n\"Well,\" I said, \"your jaw dropped when your mother said they had known about your skinny dipping.\"\n\n\"Ok,\" Soluna replied, \"we were both surprised. We're are going, aren't we?\"\n\n\"Skinny dipping with your parents?\" I asked to be clear.\n\n\"Yes,\" Soluna replied.\n\n\"Sure, if you want to,\" I said.\n\nA couple weeks later, we made the long drive to Auglaize County. We got there about 7: 00 p.m. on a Friday night. The Warren farmhouse, about a quarter mile off the county road, looked prosperous. Soluna had warned me that her mother would insist on fixing dinner. In the event, dinner was waiting when we arrived. I have no idea what we ate. Adria said it was a traditional Guatemalan dish. It was good. After dinner, Adria and Soluna cleaned up while Keith gave me a quick tour of the farm. There was a pleasant breeze, so the four of us ended the evening with wine on the Warrens' massive front porch.\n\nSoluna and I spent the night in her old room. Adria and Keith seemed happy that Soluna and I were sleeping together. \"I've never had sex in my old bedroom,\" Soluna said. She did that night. She seemed particularly emotional as we made love and, after she came, I thought I saw a tear in her eye. I fell asleep wondering whether I'd done the right thing.\n\nI pulled on shorts and Soluna pulled on a long tee shirt Saturday morning before she led me downstairs to the kitchen to make coffee. The coffee was brewing when Adria came in. Soluna and I were, momentarily, dumbfounded. Soluna's mother was completely naked. As I said, Adria was almost as beautiful as her daughter. Soluna finally said, \"Mom?!\"\n\n\"Well,\" Adria said, \"we're spending the day skinny dipping at the pond. Why should I put clothes on just to take them off again?\"\n\n\"Good point,\" Soluna conceded. She turned to me and pulled my shorts down. Getting the idea, I stepped out of them and tossed them on a chair. I took the bottom of Soluna's shirt in my hands, pulled it over her head, and tossed it on top of my shorts. Soluna gave me a quick kiss. \n\nAs Soluna was pouring the coffee, we heard Keith say from outside the kitchen, \"I smell coffee. Save me a cup.\" A moment later, Keith walked in, also naked. I sensed that Soluna had never seen her father naked before. Keith looked at us and said, \"everyone's ready for the pond, I see.\"\n\nWe drank coffee in the nude while Soluna helped Adria pack a picnic basket. Keith left the room and came back with towels and sunscreen. He looked at his daughter and me. \"We'll be walking across the field,\" he said. \"You might want to put shoes on.\" Soluna and I went upstairs, did that, and came back down, naked but for shoes.\n\nThe pond was roughly a mile from the Warren house. It struck me as both strange and wonderful to be walking across a field on a summer Saturday morning with my lover and her parents and all four of us were naked.\n\nThe pond was beautiful, shaded in a grove of trees. It was bigger than I'd expected, being roughly 150 yards long and about 70 yards across. Keith explained that the pond had been manmade many decades ago. It was fed by a spring and water flowed out through an old pipe to a nearby stream. The pond was lined with stones which were a bit slippery with age, but which felt more reassuring than standing in mud and who-knows-what.\n\nDespite the hot day, the water was a little chilly. We spent more time on the bank than in the water. In other words, most of the time we were fully visible to each other. That seemed to generate a subtle competition between Adria and Soluna. Both women accentuated the sway of their bare hips when they walked. Both women sat with their legs apart. Both women seemed to seek out opportunities to bend over. Keith noticed it too. At one point in the afternoon, he whispered to me, \"I hope you're enjoying the show as much as I am.\" I was.\n\nWe had been there a couple of hours when three clothed people suddenly appeared. There was an older man and woman and another woman who looked to be around 30. I had not seen or heard them coming. When he saw them, Keith called out, \"Hello Kath, Bill. How are you?\"\n\n\"Just fine Keith,\" the older woman said. \"How are you Adria?\"\n\nAdria and Kath exchanged greetings Keith explained quietly to me, \"that's Kath and Bill Wooster. They have the farm west of ours. I don't know who the younger woman is.\"\n\nBill said to everyone in general, \"fine day for skinny dipping.\"\n\n\"It is that,\" Keith replied.\n\nKath put an arm around the younger woman and nudged her forward slightly. \"You remember our daughter Yvonne, don't you? She's a lawyer in Chicago now.\" The younger woman raised a hand in timid greeting. ",
        "Adria said, \"You remember our daughter Soluna, don't you?\" Soluna raised her hand. \"This other man,\" Adria said, \"is Soluna's boyfriend Will Hoffman.\" I raised my hand.\n\nBill had taken off his clothes. He looked even older nude. Seeing him, Beth said, \"Oh, I'd better get my clothes off too.\" She started stripping. Soluna got up from beside her mother and sat next to me. \"I didn't know it,\" she said, \"but I guess this has been going on for years.\"\n\nBeth Wooster got her clothes off. She was very slender and wrinkled. The only person left dressed was Yvonne. She seemed more than a little unsure. I guessed that she hadn't committed to skinny dipping when her parents suggested it and her reluctance was increased by finding us at the pond.\n\n\"Yvonne,\" Beth Wooster said a touch sharply, \"you're the only one left with clothes on. Don't worry. We've been skinny dipping with the Warrens for years. Besides, you have a gorgeous figure. You should be proud to show it off.\"\n\nYvonne Wooster (I assume that was her last name) blushed deeply. \"I, uh, well, I'm not sure,\" she said.\n\n\"Jesus girl!\" Bill Wooster exclaimed.\n\n\"Yvonne,\" Beth said in a calming tone, \"you won't be showing anything Adria, Soluna, and I aren't also showing. The breeze on your skin will feel great and sometimes it's nice to let people see you instead of the wrappings we buy at the store.\"\n\nYvonne gave a sort of a defeated shrug and took off her shorts. Underneath her shorts, she was wearing a one-piece swimsuit. It seemed likely that Yvonne did have a nice figure. She reluctantly pushed the straps of her suit off her shoulders and down her arms. She hesitated before she let the top part of her suit drop to reveal two large, slightly sagging breasts with pronounced tan lines. She slowly rolled the suit down her flat stomach and, finally, pushed it off her hips and let it fall. Yvonne had very distinct bikini tan lines, and a good figure.\n\nKeith said, \"Yvonne, you are much more beautiful with nothing on.\" \n\nThat could have been a risky, if not offensive, thing to say. However, Keith's tone conveyed such sincerity that Yvonne smiled and said, with some surprise in her voice, \"why, thank you.\" I don't think she had been complimented on her nude body before. \n\n\"I've been telling her she looks better naked for years, but she won't listen to her mother,\" Beth grumped.\n\nYvonne tried to ball herself up until she finally got into the water. She stayed in longer than I'd have thought comfortable, watching Soluna, Adria, and her mother moving around with no effort to conceal themselves. When Yvonne finally came out of the water, she stood straight with her hands at her sides.\n\nAdria told Yvonne that I was a lawyer. A retired one, I hastened to add. As Yvonne got more comfortable being nude, she finally came over and sat next to Soluna and me. We talked law for over an hour. \n\nI hadn't noticed, but Yvonne suddenly said, \"Will, I'm sorry. I've been looking at your penis.\"\n\nBefore I could say anything, Soluna said, \"That's understandable. Will has a great penis. It feels wonderful too. If he minded people seeing it, he'd cover it up.\"\n\n\"I guess it's more difficult for men,\" Yvonne said. \"Your sex sort of sticks right out there.\"\n\n\"There's a way to compensate for that,\" Soluna said. She had been sitting crossed-legged, not a particularly concealing posture. However, she uncrossed her legs, put both feet flat on the ground, and pulled her knees up to her chest. \"See,\" Soluna said, \"now I'm as exposed as Will is. Try it, it is really nice and sexy.\" Yvonne blushed again. Soluna held her pose. She was obviously enjoying it so much that Yvonne finally mimicked her. Beth noticed and called out, \"Doesn't Yvonne have a nice-looking slit Mr. Hoffman?\"\n\nI made a point of looking directly at Yvonne's vagina. She blushed but held her exposed position. I finally looked up at Yvonne and said, \"yes, Yvonne looks very nice.\"\n\nYvonne softly said, \"thank you.\" She paused before adding, \"I've never been looked at there like that before. Soluna, you're right. It is sexy.\" \n\nWe all gathered up our things around 5:30. Kath and Bill Wooster dressed. Grinning, Yvonne said, \"I think I'll walk back naked.\" Of course, Soluna, Adria, Keith, and I hadn't brought any clothes in the first place. \n\nSoluna and I were leaving to go home around mid-day Sunday. Keith had taken Soluna to see some new piece of equipment he had bought. He had dismissed me by saying, \"I know Will doesn't care about farm stuff.\" I stayed on the porch with Adria. We were both clothed.\n\nWill,\" Adria said, \"Soluna is young in years, but she has an ancient soul. That means she has extraordinary insight into people, and I trust her judgment about people implicitly. Soluna loves the people she loves, is fiercely loyal, and doesn't let go.\"\n\nLike Soluna did regularly, Adria looked at me like I didn't understand what she was saying. \"What I mean, Will,\" Adria said, \"is that Soluna has already decided you are the man of her life. I know you had a girlfriend, Patti, when you met Soluna. Soluna loves Patti. Soluna told me you were also married once. I understand you may not be as committed to Soluna as she is to you. If that's the case, I'll ask that you end it now. It will be easier for Soluna and easier for you. Soluna has a way of working on your mind until you want what she wants, and you think it was your decision.\"\n\nAdria looked at me intently. I had already thought long and hard about the question she was raising. I'd talked to Patti about it on the phone for hours. Certain it was my decision, I said, \"I'm not sure why Soluna wants a man twice her age, but I'm with her until she gets bored with me.\"\n\n\"That isn't going to happen,\" Adria said. \"I know Soluna.\" Adria paused and then smiled. \"How is the sex?\" she asked.\n\nThat threw me. \"Uh, well, great,\" I replied.\n\n\"The Spanish came to Central America centuries ago,\" Adria said. \"They brought the notion that sex is an evil temptation useful only to create laborers and soldiers. There was a highly developed society in what we now call Guatemala when the Spanish came. Those ancient people believed that sex was the gods' compensation for the hard work and suffering of life. They thought it was an affront to the gods not to enjoy sex as often as possible. Soluna and I are, partly, descended from those people. While I'm very loyal to Keith, I've tried to incorporate my ancestors' view of sex into our lives and impart it to Soluna.\"\n\nI did not realize that Keith and Soluna had come onto the porch behind me until Keith said, \"Adria taught me that view of sex and it has made our marriage paradise.\"\n\nSmiling, Soluna said, \"Will, I think you know I learned mother's lessons. I love you.\"\n\nThere is a clich\u00e9 that \"third time's a charm.\" After Gail and Patti, Soluna proved the clich\u00e9 true in my case."
    ],
    "authorname": "HStoner",
    "tags": [
        "nude outdoors",
        "nude with family",
        "nude with strangers",
        "outdoor sex",
        "threesome",
        "threeway",
        "group",
        "group sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/on-display-ch-02"
}