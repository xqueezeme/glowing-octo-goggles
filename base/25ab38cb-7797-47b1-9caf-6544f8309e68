{
    "title": "The Big Tits Club Ch. 09-10",
    "pages": [
        "-- CHAPTER 9: Voyeur --\n\n****\n\n\"I just totally cock-blocked you, didn't I?\" Belle said apologetically as she and I returned to my bedroom.\n\n\"Kinda, yeah,\" I admitted. Upon hearing that both Belle and my mother were outside the door, Sam and I had hurriedly made sure we were presentable. I'd locked the door and had to get up to let them in. Mother didn't actually come in, of course. She simply took a quick glance around the room and at the bed, eyes narrow as if confirming to her own satisfaction that Sam and I had not, in fact, been fucking. And then she made some polite comment about leaving us kids alone and headed back downstairs.\n\nBelle had immediately apologized again for interrupting us, saying she'd just come over to talk to me and didn't realize Sam was also visiting until Mother led her upstairs and told her Sam was with me along the way.\n\nSam said it was no big deal, that we were done with our conversation, and that she needed to get back home. \"Still a school night, you know?\" she tried to say flippantly, not quite succeeding. And so we ended up walking Sam to the front door and waved goodbye before coming back here. \n\n\"But that's okay,\" I added while opening my arms for a hug. \"I'm always happy to see you.\"\n\nBelle smiled and leaned into my embrace. I squatted and scooped up her light body in my arms like she weighed nothing, carried her over to my bed, and sat down with her in my lap. She spread her legs to straddle me, wincing as she did so, and my eyes immediately sharpened in alarm.\n\n\"Are you okay?\"\n\nBelle winced and gave me a helpless shrug. \"I'm pretty sore, actually.\"\n\nI winced sympathetically, picking her up and setting her down beside me so her inner thigh muscles wouldn't be so stretched. \"I'm sorry. That's all my fault.\"\n\n\"Stop saying that. At this point I don't want to argue over whose fault it was. It just IS. I love you and don't blame you and that's that.\"\n\nI shrugged, accepting her answer but still feeling guilty for causing my Annabelle any pain. Giving her a warm smile, I leaned in and kissed her gently. She held my head and kissed me back, sighing happily as she did so.\n\nBut when she pulled away, her smile vanished quickly. \"I wanna do it again ASAP, but I don't think it's gonna happen anytime soon. I'm afraid it'll just hurt too much as long as I'm feeling this sore.\"\n\n\"I get it. Don't worry about it.\" Giving her a reassuring smile again, I added, \"We have the rest of our lives to make love.\"\n\n\"I'm looking forward to it. At least we tried it again immediately and got it right. THAT'S the time I'll always remember as the first time we made love.\" She smiled back, her pale green eyes sparkling. But then she popped her eyebrows and exhaled. \"Still, if this doesn't get better tomorrow, I'm going to have to concentrate just to walk normally so I don't totally give away that we had sex.\"\n\nI arched an eyebrow. \"So you've decided not to tell the girls just yet?\"\n\nBelle nodded. \"I haven't figured out what I'm going to say to them. This really could blow up everything.\"\n\n\"Keeping me to yourself for a couple of weeks? Like the blowjob thing?\"\n\nBelle giggled. \"Don't think the thought hasn't crossed my mind. Thing is: if I'd gotten caught giving you a blowjob, I knew things would have pretty much turned out the exact same way they did. This is different. Mari is NOT ready to have sex, and I don't think Alice is either. I'm not as sure about Zofi, but she still hasn't even given you a blowjob. The BTC is not 'in balance' already, and this would throw everything even further out of whack.\"\n\n\"Not YOUR fault. Sam started it.\"\n\nBelle nodded. \"What did SHE say about telling the girls? I mean, I'm assuming she hasn't told anybody given the fact that none of them have come breaking down your door to ask you about it yet. More to the point, no one has called ME to find out if I knew already.\"\n\nI shook my head. \"She hasn't told anyone yet, not even Zofi. But she also said she didn't know how long she'd be able to keep it under wraps. She doesn't think she could lie to the BTC for very long.\"\n\nBelle's eyes suddenly sharpened. \"You didn't tell her about US, did you?\"\n\n\"No, and she has no reason to suspect we've done anything.\"\n\nBelle looked visibly relieved, but she gave me a curious look. \"But you told me about HER right away.\"\n\nI shrugged. \"You're my Annabelle. I tell you everything.\"\n\nShe blushed and smiled at that. \"Thank you for keeping it a secret for now. It's not that I'm ashamed of what we did, but we both know there will be - what's the SAT word? -- repercussions... when the truth comes out.\"\n\n\"For sure.\" I gave her a rueful grin. \"To be honest, my M.O. has been to let you girls make all the decisions. I get in less trouble that way -- fewer repercussions for me - and it seems to have been working so far.\"\n\nBelle snorted. \"You may be right, though. If we get caught, nobody's gonna blame you. They're all just gonna get mad at ME.\"\n\n\"No they won't. They're your best friends. They'll understand. They'll want IN, but they'll understand.\"\n\n\"I hope so.\"\n\nI placed a hand on Belle's leg. \"Would you really be okay with that? With some of the girls wanting to have sex with me?\"\n\n\"What, you trying to say you'd turn them down for me? Isn't it every guy's fantasy to have a harem of hot girls begging for his dick?\"\n\n\"I'm not in love with any other girls but you,\" I stated with dead seriousness. \"If you asked, I'd leave the BTC to be with you.\"\n\n\"Don't say that.\"\n\n\"It's true.\"\n\n\"Well I wouldn't leave the BTC to be with you. I've already told you I'm not breaking up the club for us.\"\n\n\"But you're still not gonna tell them yet, either.\"\n\n\"I will... Eventually...\"\n\n\"Doesn't every romantic comedy go sideways when someone doesn't come out and say something they should have said?\"\n\n\"This isn't a rom-com, this is reality, and I haven't figured out what I'm going to say to them yet.\" Belle sighed. \"But don't worry, I'm not gonna sit on this for two weeks like the blowjob thing. Because when it comes down to it, the answer is 'Yes, I'll be okay with the other girls wanting to have sex with you.'\"\n\n\"Really?\"\n\n\"You're not my boyfriend, Matty. I love you, and I know you love me, but... we're not romantic like that. Maybe someday we will be, but not yet. I've spent more than two years sharing you with those girls, sharing everything about you. I never got jealous watching them give you blowjobs or rub their tits into your face, and I really don't think I'm going to get jealous of them fucking you. I mean, just thinking about it right now turns me on, actually. Like that whole thing we were doing earlier, with you fondling me while telling me what it was like to fuck the shit out of Sam? That was SUPER exciting. I can totally see myself masturbating while watching you plowing into Neevie or Zofi or... WOW... You know, now that I think about it, I'd REALLY like to see you taking Mari's virginity.\"\n\nI started chuckling and shook my head. \"Never thought I'd hear those words coming out of your mouth.\"\n\nBelle grinned at me and leaned over to pet the bulge in my pants. And in a low voice full of need, she husked, \"Can you keep quiet?\"\n\n\"Seriously?\" I asked. Only minutes ago, my dick had been in Sam's mouth, and now Belle was pawing at my crotch. And Mother was STILL downstairs.\n\nBelle's eyes glittered. \"I need to taste you right now.\"\n\n****\n\nMother was still in the living room when I walked Belle to the front door. My little pixie looked like she wanted to kiss me goodbye, but she couldn't do it with Mother in view. So she settled for a warm hug and a quick peck on the cheek, and she waved as she headed out for the short walk back to her own house.\n\nAfter I closed the door, I turned around to head back up to my room. But Mother's voice followed after me.\n\n\"Are you using protection?\"\n\nI stopped dead in my tracks, took a step backwards, and turned to face her. \"Excuse me?\"\n\nMother smiled thinly with her don't-fuck-with-me expression. \"I think you heard me.\"\n\nI gestured in confusion. \"We were just talking.\"\n\n\"Tonight you were just talking... perhaps...\" Mother's eyebrows went up, expressing her skepticism. I mean, did Belle have stray globs of cum on her lips or something? But she continued by asking, \"Earlier this afternoon, however, were you using protection then?\"\n\nI was more confused trying to figure out how Mother knew what was going on with such accuracy. Did she plant a camera in my room or something? \"What makes you think Belle and I had sex? She was fucking pissed at me when we walked in, enough that you immediately volunteered to go out and give us some privacy.\"\n\n\"She's obviously not 'fucking pissed' at you anymore. In fact, she looks quite adoringly at you now,\" Mother stated evenly. \"And more to the point, that petite young woman is walking like she got stretched for the first time a few hours ago.\"\n\nI blinked in surprise at her observation and frowned. \"Oh. Uh... you can tell that?\"\n\nMother smiled thinly again. \"I asked you simple question, Matthew.\"\n\nRubbing my forehead, I sighed and admitted, \"Yes, Belle's on the pill.\"\n\n\"Should I expect any other young ladies to start paying you nocturnal visits?\"\n\n\"Can we NOT be having this conversation right now?\"\n\nTaking a deep breath, Mother exhaled and then stood up from the couch. She walked forward, closing the gap between us until she stood only a few feet away. And while raising a single index finger, she stated quite seriously, \"I have only one rule in this matter: Make sure to use protection. Do you understand?\"\n\nI rolled my eyes and replied, \"Yes, Mother.\"\n\nMother's eyes sharpened. \"It's not about you, Matthew. It's about protecting those girls, or do you have no care about how an unplanned pregnancy might impact their futures?\"\n\n\"Of course I care,\" I stated much more forcefully. \"I'd never willingly jeopardize their futures.\"\n\n\"Good.\" She smiled thinly once more, but after a few seconds, her expression actually softened. \"I'm not here to... ah... cock-block you, Matthew. I told you I would support your needs. So long as you can promise me you will take the necessary steps to ensure I won't be having any unexpected grandchildren before I want them, I won't interfere in the activities of an 18-year-old boy who appears to have an overabundance of opportunity.\"\n\nI frowned, not quite understanding. \"Wait, what?\"\n\nMother actually smirked. \"You have my permission to... ah... entertain... your lady friends, even if I'm in the house. I won't disturb you.\"\n\n\"Wait, are you saying...?\"\n\n\"The next time Samantha comes over to visit you with sex on her mind, don't let her go home unfulfilled, hmm? Or Belle, either, for that matter.\" Mother patted my shoulder, gave me a knowing grin, and headed upstairs.\n\nMy life was getting WEIRD.\n\n****\n\nAlice was waiting for me and Belle at the parking lot Monday morning and came over to us as soon as we stepped onto the curb. I braced myself for some version of, 'Is it true that Sam took your virginity after your wedding date and then you banged Belle and took her virginity the very next day?'\n\nBut all she did was give me a fist bump and ask both of us, \"How was your weekend?\"\n\nI shrugged and didn't verbally reply. Alice didn't press me. She was a good buddy that way. Belle, on the other hand, answered that she'd had a great weekend, and when Alice dutifully followed it up by asking why, Belle answered quite truthfully by saying she'd spent Sunday afternoon holed up in my bedroom.\n\nAlice laughed, shot us both dirty looks, and whined about why I couldn't live next door to HER. And the three of us chatted as we headed onto campus and eventually split off to go to our respective classrooms.\n\nSam was in my first period, and she gave me a flirty smile when I came through the door. There was no time to talk before class, but we were able to walk together to our shared second period afterward.\n\n\"I've missed you,\" the beautiful blonde greeted warmly while wrapping both arms around my right elbow. She also leaned in for a kiss, just a peck, which I gladly gave her.\n\nI smirked. \"Missed me? It's been what, twelve-odd hours since you saw me? Most of that time spent sleeping?\"\n\n\"I missed that we didn't get to finish what we started last night.\" She bumped her hip into mine. \"Do you have any plans later?\"\n\nI arched an eyebrow. \"Mondays you usually come over to Belle's place to study with us and Mari.\"\n\nSam's eyes glowed amber. \"I meant tonight.\" Her meaning was clear.\n\nI blinked, my jaw dropping open. \"Uhhh... no plans...\"\n\nShe grinned. \"Seven o'clock? Your place?\"\n\n\"Uh, sure. Sounds good.\"\n\nSam giggled and kissed my cheek, whispering into my ear. \"Might want to cover up your boner before we get to class.\"\n\nI glanced down and sure enough, I was tenting my cargo pants quite a bit. With a sigh, I shrugged and replied, \"I've got the most gorgeous girl in school wrapped around my arm. People will understand.\"\n\nSam looked up at me with a grin. \"Now why weren't you paying me these kinds of compliments BEFORE we had sex? Makes me think you DO love me more when I do naughty stuff with you.\"\n\nI blushed and said, \"Uh, well, these were compliments I always had in my mind. I just thought I was in 'the friend zone' back then and I didn't want to make things awkward. I mean, The Rule is still in effect, right?\"\n\n\"Yes, The Rule is still in effect. I'm not going to start dating you. We're friends.\" Sam giggled and kissed my cheek again. And from only an inch away, she husked, \"But I intend to get my benefits.\"\n\n****\n\n\"Must've been some date,\" Alice chided, glancing back and forth between me in the seat to her left and Sam at the far end of the lunch table. Five seconds earlier, she'd asked me about the wedding, and while I'd shrugged and replied that the venue was very nice, Sam had blushed pink and promptly stared at her food.\n\nZofi chuckled and leaned across the table, whispering conspiratorially, \"She asked Matty to go to his place instead of taking her straight home.\"\n\n\"Hey!\" Sam complained, slapping Zofi across the upper arm and turning even pinker. I started to get a little nervous. Sam had said she didn't like lying to her best friend.\n\n\"Leave her alone,\" Belle drawled. \"Like none of us expected her to take advantage of the situation to get some one-on-one time?\"\n\nZofi and Alice shrugged. Mari said quietly, \"I'd have done the same in her shoes.\"\n\nNaimh pointed out, \"You've already had more one-on-one time with him than any of us, Belle.\"\n\n\"That's different.\"\n\n\"I'm just saying... the BTC isn't 'in balance',\" the Irish redhead complained. \"When's my turn for a one-on-one? Or a fancy dress-up date? Why does she get to have him going down on her for an hour with nobody else waiting in line?\"\n\nSam started rubbing her forehead. \"If you're so antsy, why don't you come join us to study this afternoon?\"\n\nNaimh made a face. \"I have a dentist appointment at three. Plus, my period started on Saturday.\"\n\nSam rolled her eyes. \"Ah, so you were PMSing at the end of last week, got it.\"\n\nNaimh threw a piece of bread from her sandwich at Sam. \"Point is: messing around as a group isn't the same as getting a one-on-one with him.\"\n\nBelle sighed. \"Is it really so bad having the other girls around? I rather enjoy us all having fun together.\"\n\nNaimh leveled her with a look. \"Easy for you to say.\"\n\n\"Ugh,\" Sam groaned. \"I knew this was gonna happen if I went out with him.\"\n\n\"Then why DID you go out with him?\" Alice asked with a shrug. \"Or ask him to bring you to his place instead of going straight home?\"\n\nSam rolled her eyes. \"Would YOU have passed up a chance to shove his face between your thighs for an hour straight?\"\n\nAlice giggled, blushed, and looked around to make sure nobody else was within earshot before staring down at her food.\n\n\"I'll take that as a 'no',\" Sam finished.\n\nZofi spoke up. \"So what are we going to do about it now? Are one-on-ones now on the menu?\"\n\nSam sighed and rubbed her forehead again. \"Can we at least table this until the Wednesday trip? It's a short week before Thanksgiving break. Let's just get through the next two days like normal. And then? I dunno... Maybe we can start setting up Saturdays or something for one-on-ones.\"\n\nZofi frowned. \"You mean, like dates?\"\n\nNaimh chirped, \"I call 'next'!\"\n\nSam grimaced and buried her face in both hands. \"This is getting out of control.\"\n\nAlice elbowed me in the ribs. \"You're just loving this, aren't you? Six girls fighting with each other to get your shorts off?\"\n\nI blinked. \"I'm not complaining, that's for sure.\"\n\nZofi spoke up in support of her best friend. \"Let's everyone chill out until Friday, okay? We'll figure it out together.\"\n\n\"I still call 'next',\" Naimh put in.\n\n\"We heard you,\" Sam conceded. She looked at everyone else. \"Are we all good?\"\n\nShe got head nods around, and we both started to relax. At least nobody knew we'd had sex.\n\nYet.\n\n****\n\nPer usual, Sam, Belle, and Mari came over to study, but Alice showed up too. Zofi had dance class on Monday afternoons and Naimh had her dentist appointment. That crowd was a little too big for Belle's bedroom, so we took things down to spread out in her living room and at the dining table. Well, the girls spent most of their time at the dining table. I, somehow, barely got any work done as I got parked on the couch. And then one-by-one, the girls took turns coming to me for \"study breaks\".\n\nMari went first, barely ten minutes into starting our homework. One minute, we were sitting side-by-side on the couch going over Calculus together. The next, the luscious Latina was straddling my lap with her arms around my neck and her tongue in my mouth. Five minutes after that, she had my cargo pants around my ankles while she knelt in front of the couch and bobbed her head slowly up and down my shaft. And two minutes after that, my neck muscles were straining as I desperately held onto my ejaculation when Mari duplicated Friday's feat of taking me all the way down.\n\n\"Shit-shit-shit!\" I grunted, clenching my abs tight.\n\n\"Don't make him pop yet!\" Sam hollered from the dining table. \"It's too early!\"\n\nMari giggled, not an easy thing to do with a dick in your throat, and the vibrations of her giggle might've put me over the edge had she not promptly choked and backed off. It took her a minute to catch her breath, but no one was rushing us. Eventually she got her breathing under control, wiped her eyes, and gave me an embarrassed smile. I simply kissed her and told her it was my turn. She was more than happy to switch places with me and take her jeans off.\n\nAlice went after Mari. She didn't even care about making out; she just wanted my tongue on her clit ASAP. After I made my old friend cum on my face, I went to the bathroom to clean up and actually tried to get some work done. But now Sam wanted a \"study break\" and I found my arms full of horny blonde.\n\nLike in the old days, Sam unbuttoned her blouse and pushed my face into her bra-clad tits while she dry-humped herself against the bulge in my pants. Unlike the old days, after a minute Sam unclasped the bra, pushed it up and out of the way, and now mashed my face in-between her naked breasts, getting me to suckle on her nipples while she reached into my shorts and started giving me a \"wristy\", as she put it. At the same time, she leaned into my ear and whispered how much she wished she could mount me right then and there. As it was, she settled for stripping herself naked below the waist, yanking my pants and shorts down to my ankles, and dry-humping her bare pussy against my bare dick, the shaft trapped between our two bellies.\n\n\"Holy shit, Sam! Are you fucking him?!?\" Alice suddenly shrieked in alarm.\n\nSam froze and craned her head around. \"What? No!\"\n\n\"It sure looks like you are!\"",
        "I glanced down. With Sam still wearing her blouse, the hem draped low enough behind her like a cape. It made sense that neither Alice nor anyone else could see what we were actually doing. And the rhythmic way Sam had been dry-humping me could certainly be interpreted as a fucking motion. I quickly scooped up the back of Sam's shirt as Alice came over, with Mari and Belle right behind her. And Sam leaned back far enough for everyone to see my angry purple dick sticking up like a flagpole in-between our two bellies.\n\nAlice looked visibly relieved, putting her hand on her chest. \"Thank gawd. That would REALLY fuck up the whole BTC if you started fucking him.\"\n\nSam and I exchanged a look and blushed. \"Yeah, it probably would,\" she agreed, looking pointedly at my chest.\n\nAlice looked embarrassed now and held up both hands apologetically while backing up. \"Sorry to interrupt. You two go right ahead.\"\n\nI nodded, but Sam shook her head and dismounted me, already hunting around for her clothes.\n\n\"Seriously,\" Alice said contritely. \"You can keep going. I'm sorry for doubting you. I mean, you're the one who has always been such a stickler for The Rule.\"\n\n\"Yeah, no worries. It's fine,\" Sam mumbled quietly.\n\nBelle, sensing the mood, came over and knelt before me, saying warmly, \"I'll take care of him.\"\n\nI smiled down at the petite strawberry-blonde who looked adorably perky as she knelt before my waving dick. I loved the view even more when she took my throbbing erection into her mouth for the second time today, although none of the others knew she'd already given me a minivan blowjob this morning. She sucked me while gazing up at me with adoring eyes, and if she never stopped for the rest of my life, I would die a very happy man. But after a few minutes, it became apparent that neither Alice nor Mari was going back to their homework anytime soon, as both of them sat on either side of me intently watching Belle work.\n\nPopping me out of her mouth, Belle offered my dick to Alice first. \"Want a turn?\"\n\n\"Eww, no,\" Alice immediately replied, holding up both hands. While I'd now eaten her to a half-dozen orgasms in the last week and a half, she still had yet to try going down on me.\n\nBelle shrugged like it was no big deal. \"Mari? I think Matty would love to come all over those big tits of yours.\"\n\nThe way my eyes lit up confirmed Belle's theory. My little Annabelle gave me a few more licks while Mari knelt down next to her and promptly took off her shirt and bra, but instead of handing me off, the pixie blonde held my cock between them and started licking up one side while Mari giggled and started licking up the other side. It was my very first tandem blowjob, and I nearly spurted then and there.\n\nUnfortunately, it didn't last very long. Once Mari started sucking on my mushroom head, Belle stopped licking and just pumped my shaft with her hand a few times. And then Belle got up and left entirely, although she at least popped up and kissed me sweetly on the mouth before going back to the dining table.\n\nMari wanted to practice her deep-throating skills, and this time nobody told her to not let me pop yet. She got herself down to my base twice without choking, and pulled off to smile at me, quite proud of herself. I grinned, bent forward, and kissed her as a way of showing my thanks. And then she wrapped her massive melons around my shaft and started humping away, intent on making me explode within her cleavage.\n\nA minute later, Mari got what she wanted with a geyser that splattered the underside of her chin before she milked out the rest of my load all over her mountainous chest. I thanked my \"Angel\", gave her another kiss, and she left to go clean herself up.\n\nThat turned out to be the only time I came during the afternoon study group, although Alice did ask me to go down on her one more time. Only then did everyone remember that I hadn't gone down on Belle, to which she replied, \"Not done with my period yet.\" Nobody bothered her any further. And in the end, everyone left, leaving me and Belle alone in the house.\n\nNo sooner did Mari's car disappear down the road than Belle launched herself at me. She ended up sitting sideways in my lap, her arms wrapped around my neck while we made out on the couch. I reveled in the ability to let my hands roam all over her cute little body without fear of retribution or concern that I was crossing a line. For the entire study session, I'd been careful to be on my best behavior with Mari and especially Alice, and even Sam to an extent as I didn't want to accidentally give away how far we'd gone together. Over the past few weeks, Belle's petite body had become my personal playground. Now I could just let go and fondle my favorite little firecracker's ass, run my hands up her sides, and thumb her nipples - basically do whatever the hell I wanted to her.\n\n\"I wanna go down on you,\" I husked when we finally paused for air. \"I've been waiting all day to return the favor after you gave me a blowjob last night and then left.\"\n\nBelle giggled and tickled my nose with her fingertip. \"You should never feel obligated to make it up to me. I gave you a blowjob because I wanted to.\"\n\n\"And I want to go down on you because -I- want to go down on you. I was expecting you to take a turn when Alice asked. Why did you say you were still on your period?\"\n\nBelle sighed and brushed a few loose bangs of hair behind her ear. \"Well for one thing, I was worried about you doing something that would stretch me and make me tense up in pain. I really AM still sore down there. We can't have sex again yet.\"\n\nI shook my head. \"I didn't ask for sex. I said wanted to go down on you. I don't even have to push any fingers inside, just lemme lick your clit. Not much chance of stretching pussy muscles, right? An orgasm may even loosen you up.\"\n\n\"And you would have this authoritative comprehension of female biology... how?\"\n\n\"Just a theory,\" I grinned, \"worthy of research, dontcha think?\"\n\nBelle laughed and nodded her agreement. It didn't take long to park her in my spot on the couch and take her jeans off. A minute later, she was gasping while holding her own legs apart beneath the knees and letting her head fall back as my tongue went to work.\n\nShe did whimper a few times in what sounded like pain, causing me to pause and ask if I was hurting her. She said it wasn't bad, like sore calves after a long run, and grabbed the back of my head to shove me down into her crotch again. So I took that to mean she wanted me to keep going.\n\nWe didn't have to stop at one orgasm. This was the whole advantage of having a one-on-one; nobody was waiting, after all. When she squeaked cutely and dumped a load of honey into my mouth, I just grabbed onto her ass, dragged her a little closer to the edge of the couch, and ramped her up to another one. But after the second climax, she pushed my head away, gasping. And as I sat back on my heels with a smug grin of pride in my work, Belle groaned, \"Okay, now it's starting to hurt again.\" Grimacing, she added, \"The orgasms are nice but I feel every single clench down there.\"\n\nMy smug grin evaporated. I wiped my face with a couple of tissues and swiftly scooted next to her on the couch, hugging her tenderly. \"I'm sorry.\"\n\n\"I told you to stop apologizing.\" She looked back at me, her expression inviting a kiss, so I quickly bent to give her one. She sighed in contentment and pulled my arm a little tighter around her midsection. \"I feel bad though. You're hard as a rock - I can feel it against my butt -- and I know you want back inside, but I can't give that to you.\"\n\n\"It's alright. I came all over Mari's boobs a while ago. I'm good.\"\n\nBelle looked thoughtful. \"I think you should call Sam.\"\n\nI blinked. \"Excuse me?\"\n\n\"She wants to keep fucking you, doesn't she? That's more or less what I interrupted last night, didn't I?\"\n\n\"Uh, well... I mean, my mother was there,\" I stammered before the full memory came back to me and I finished, \"But yeah, she wanted to.\"\n\n\"So call her up. Invite her over.\"\n\n\"You kidding me?\" I chuckled. \"I never thought in a million years I'd be cuddling with one girl -- a half-naked girl who just had my face in her crotch -- and have her suggest I invite over a different girl to have sex with.\"\n\nBelle giggled and turned back to kiss me again. \"I'm one of a kind. Seriously, though, call her up.\"\n\n\"We've got to start making dinner. Your dad will be home soon.\"\n\n\"Not to come over now, and not here. Tell her to come to your house at like... seven o'clock.\"\n\nI laughed. \"Funny you mention that.\"\n\n****\n\n\"Ungh, ungh, ungh, ungh, ungh!\" Sam grunted rhythmically. \n\nI couldn't believe we were doing this.\n\n\"Soooo fucking hot,\" Belle gasped beneath her breath, sitting in the desk chair with her hands in her panties, masturbating furiously.\n\nI REALLY couldn't believe we were doing this.\n\n\"Ungh, ungh, ungh, ungh, ungh!\"\n\nSam was buck naked and bent over doggy-style: face-down, ass-up, and hugging my pillow beneath her chest while she absorbed each heavy thrust. I held her hips in my hands, driving my dick into the busty blonde beauty from behind over and over and over again, pumping my prick with piston-like precision.\n\n\"Spank her ass!\" Belle moaned. \"Spank that phat ass!\"\n\nShaking my head in disbelief, I smiled to myself, reached back with my right hand, and let it fly...\n\nI'm getting ahead of myself again.\n\nIt all started back when I told Belle that Sam and I had already made plans for her to come to my house at seven tonight. Mother often didn't return until nine or ten o'clock on weekdays, and even if she came home early, she'd already given me explicit permission to \"entertain my lady friends\". I hadn't told Belle that part though, not sure if I really believed it myself yet.\n\nI had NOT been prepared for what Belle said next.\n\n\"I wanna watch.\"\n\nI blinked in surprise. \"Excuse me?\"\n\nThere was no mistaking the heat in Belle's voice. \"I wanna watch you fucking Sam.\"\n\n\"Uhhh...\"\n\n\"C'mon! I TOLD you last night that the idea excited me.\"\n\n\"I know you did. I just...\" I screwed up my face. \"There are two problems I see: One, Sam doesn't know yet that you know she took my virginity. And two, even if she knew, I can't have her show up to the house, bring her into my bedroom, and say, 'Oh, by the way, Belle wants to watch us fuck.'\"\n\n\"Soooo... I'll hide in the closet!\" Belle suggested brightly.\n\nMy eyes flew open WIDE. \"Excuse me?\"\n\n\"Your closet's right next to the bed. Just don't close the bifold doors all the way.\"\n\n\"But... I mean...\"\n\n\"I'll stay quiet and she'll never know I was there!\"\n\nI rubbed my forehead. \"This has disaster written all over it.\"\n\n\"C'mon, what could go wrong?\"\n\n\"You did NOT just say that.\"\n\n\"What, superstitious?\"\n\n\"You're absolutely crazy, B.\"\n\n\"I know. Dontcha love me?\"\n\n\"I can't believe I'm considering this.\"\n\nBelle just laughed and kissed me.\n\nAfter dinner with her dad, Belle told him she was going over to my house. She was coming over in the evenings far more often than before, and I wondered if he'd started to suspect what kinds of activities we were getting up to. After all, if we were just hanging out and talking, why couldn't we do so at her house instead of mine? But I had other things to worry about and didn't dwell on that thought.\n\nBelle did recon on my bedroom, standing in the closet and adjusting the louvered bifold doors while asking whether or not I could see her. Once satisfied, she came out and chatted with me while I fought stage fright over what we were about to do.\n\nSam arrived three minutes before seven. Belle went to hide in the closet while I headed downstairs to let her in. The gorgeous platinum-blonde stood on my front porch looking absolutely radiant, and I wondered not for the first time how one of the hottest girls in the entire school, if not THE hottest girl, had come to be one of my closest friends and now a lover.\n\nShe gave me a warm hug, pressing those luscious boobies into my chest while wrapping her arms around my midsection. She tilted her head to mine for a kiss, which I gave her gladly. And the touch of our lips instantly flicked a switch of electricity that sent surges of passionate energy throughout both of our bodies.\n\nSam's leg came up to wrap around my hip. She devoured my face, grabbed my ass, and reached between us to cup my package in her hand. Pulling away for a brief moment, she murmured, \"Should I blow you right here against the door?\"\n\nI nodded at first, having completely forgotten about Belle for a moment, but then abruptly shook my head and answered, \"Let's go up to my room. Juuust in case my mother shows up unexpectedly again.\"\n\n\"Right. Totally,\" Sam agreed immediately, still a bit traumatized from our previous maternal interruptions.\n\nIt was that spooked look Sam got in her eyes that made me immediately regret Belle's plan. My heart ached at the idea of springing yet another unexpected encounter on her after what we'd already been through. So long as Belle stayed silent and didn't get caught, perhaps it wouldn't be an issue. But my anxiety over the situation didn't go away, even after we ended up on my bed behind a locked door.\n\n\"What's wrong?\" Sam asked, recognizing that my attention wasn't entirely on her. \"You look distracted. And you're not super-hard for me.\"\n\nSam's hands were in my shorts, her fingers wrapped around my semi-chubby. It was arousing to have a hot blonde sucking my face and stroking my dick, only I was too nervous to really enjoy it. But she didn't know that. Her eyes were big and wary, her expression not so dissimilar from Saturday night when she couldn't quite manage the deep-throat. And I felt like I could actually see her insecurities rising to the surface.\n\nWith a sigh, I let myself collapse flat on my bed and closed my eyes for a moment. Opening them again, I looked straight at the ceiling and announced, \"I can't do this.\"\n\nSam sat up straight beside me, her panic rising. \"It's me, isn't it? After last night, I started to think you--\"\n\n\"No, no, not you, Sam,\" I interrupted. \"Nothing to do with you.\"\n\n\"Are you reconsidering whether you--\"\n\n\"I told Belle that we had sex,\" I stated flatly, turning my head to face her.\n\nSam blinked a few times, at first looking worried and then relaxing quite considerably. \"Oh, is that all?\"\n\nI raised both eyebrows and propped myself up on my elbows. \"'Is that all?' I thought you were terrified of the BTC girls finding out.\"\n\nSam's relief was palpable. \"I was, but I knew they'd all find out eventually. A second ago, I thought you were gonna say you didn't want to have sex with me anymore. Like... say that I wasn't good enough for you or something. THAT I would have gotten upset about. But... You and Belle have always been close. It sorta makes sense that you'd tell her. I was thinking of telling Zofi like... tomorrow.\"\n\n\"Really?\"\n\nSam nodded. \"The thing with Alice this afternoon kinda freaked me out. When she thought you and I were fucking on the couch because my shirt was covering us and she apologized for doubting me. Made me feel like a two-faced tramp. I don't think I can live with the guilt much longer.\"\n\nI winced. \"Funny you should mention the idea of guilt.\"\n\nSam read my face and frowned. \"What did you do?\"\n\n\"Not did. Doing.\" I sighed and winced again. \"Please don't get mad. But after I told Belle, she uh... I don't know how to say this.\"\n\n\"Matty...\" Sam growled warningly.\n\n\"She said she really wanted to watch. She's in the closet right now,\" I explained quickly.\n\n\"Wait, WHAT?\"\n\nBelle slid the closet door open. \"Matty, seriously?!? You just TOLD her?!?\"\n\n\"I couldn't do it!\" I stammered. \"I'm sorry! It would've been a shitty show to watch anyway because I was terrified of her finding out and I would NOT have been able to perform anyway!\"\n\n\"You were hiding in the closet?!?\" Sam yelped at Belle.\n\nBelle buried her face in both hands. \"I canNOT believe this is happening.\"\n\n\"You agreed to let her hide in the closet?!?\" Sam yelped at me.\n\n\"She REALLY wanted to watch us and I didn't know how to say 'no' and I'm sorry but at least I told you before we actually started doing anything!\" I squawked back.\n\n\"Why would you TELL her?\" Belle squalled.\n\n\"How could I NOT tell her?!\" I protested. \"She trusts me and I don't wanna lose that trust, alright?\"\n\n\"Wait-wait-wait-wait-wait!\" Sam screeched, holding up both hands palms out, one at me and one at Belle until we shut up and looked at her. Then, she turned to Belle. \"You wanted to watch us having sex so badly that your bright idea was to hide in his closet?!?\"\n\nBelle turned bright pink. \"Uhhh... well...\"\n\nSam smirked. \"If you wanted to watch, you could've just ASKED.\"\n\nBelle looked confused. \"Um, what?\"\n\nSam giggled and smiled at me. \"I'm an attention whore.\" She looked back at Belle. \"I LOVE having an audience.\"\n\n****\n\nBelle didn't have to hide in the closet anymore, so she sat in my desk chair. Both she and Sam told me to pretend like she wasn't there, but I couldn't help my eyes darting over to look at her every so often as Sam did her level-best to calm my nerves and distract me by gradually revealing her gorgeous naked body to my hungry gaze.\n\nShe was quite successful.\n\nThe curvaceous Aussie blonde still wore her school clothes, dressed to be alluring but not skanky. It's amazing what a difference a few buttons make on a blouse though, especially with a 36DD rack like hers. I started salivating as inch after inch of creamy titflesh was slowly revealed to my hungry gaze. But even after she finished unbuttoning the blouse from throat to tails, she didn't take it off. Instead, she turned around, waggled her juicy ass at me, and started taking down her jeans by bending over at the waist in order to drag the offending material all the way down to her ankles.\n\nSam didn't have the fancy corset or expensive lingerie of Saturday night, but she still wore matching underwear. The bikini-cut panties exposed the firm skin of her supple asscheeks, and the patch at her crotch looked darkened and damp, evidence of her arousal. Sam waggled her ass at me teasingly, remaining bent all the way over. And then without standing up, she reached for her panties and started them on their downward journey as well.\n\nI groaned as the blonde bombshell's naked ass and puffy pink pussy were revealed to me. She stepped out of the panties, stood up, and turned around to finally take off the blouse, leaving only her breasts still covered up. The bra this time was a front clasp, and while staring straight at me to watch my reaction, she finally set those puppies free and opened the cups like a set of double-doors, welcoming the arrival of my gaze.\n\nThe whole time, I kept shooting quick glances at Belle, looking for any sign of jealousy, anger, or resentment. In all fairness, if you'd asked me to watch Belle... MY Annabelle... giving some other guy a blowjob, I would've throttled your neck on the spot. But there were no recriminations from her lips, no clenches of tension in her jaw, just raw sexual excitement in her every expression. There was only pure heat in her eyes as she watched Sam peel off my clothes, jack my shaft in her hands, and start going down on me.\n\nIn fairness, Belle had seen Sam do all these things to me and more. She'd seen ALL of the girls messing around with me by now, so perhaps I was overthinking the situation entirely. Likewise, Sam had now performed with the BTC as an audience many times, and as I let that concept truly sink into my brain, I started to relax.\n\nAt least, I relaxed until Sam climbed into my lap, notched my cockhead into position, and slowly sank herself all the way down. Then I tensed WAY up, anxiety over Belle's jealousy coming back into my mind. And instead of watching Sam's wet pussy make my dick disappear from view, I watched the changing expressions on Belle's face as she witnessed someone else's penetration for the first time.",
        "Her pale green eyes glowed as she stared, enraptured, at the junction point. Her mouth hung open as she panted shallowly, her jaw dropping lower and lower in sympathy with Sam's bare-shaven pussy sinking downward to meet my crotch. At the moment of touchdown, Belle shuddered and briefly closed her eyes. Only then did I notice she'd shoved a hand into her panties and was rubbing herself furiously.\n\nThe next twenty minutes were a whirlwind of activity. Sam certainly performed for her audience, tossing her hair, squeezing her own tits, and moaning erotically-charged phrases quite loudly.\n\n\"So fucking deep inside me! I love your big cock! It fills me up so gooood!\"\n\n\"You like that? You like that? Huh? Feeling my tight pussy squeezing your fucking big dick?\"\n\n\"So good! So good! You're making me cum so hard!\"\n\nYou know, shit like that.\n\nIn all fairness, Sam said a lot of those things on Saturday when we didn't have an audience. But she was saying them a lot MORE tonight, and she said a lot of them while staring straight at Belle, not me.\n\nI didn't mind. I was just happy to be along for the ride.\n\nSam rode herself to three screaming orgasms, climaxes I can't take much credit for. I just sort of lay there and let her use me like a living dildo. My greatest contribution to that round was simply my ability to NOT bust my nut, and the primary reason for that accomplishment was Belle sucking a load out of me before dinner, right after I'd agreed to let her come watch. But I couldn't last forever, not with a gorgeous girl gyrating against my groin saying erotic shit like that and bending over every now and again to smother my face with her massive breasts. So when my neck muscles got tense, and when I started clenching my teeth in an effort to hold on just a little longer, Sam grinned and glanced over at Belle.\n\n\"You wanna see him blow a massive load all over my big tits?\"\n\nBelle shook her head, breathing hard, her hand still moving within her panties. \"Inside you.\"\n\nSam frowned and looked surprised. \"Really?\"\n\nBelle chuckled and stopped masturbating for a minute. Her eyes glittered as she leaned forward and explained in a husky voice, \"I've already seen him cum on your tits lots of times. But you're having SEX now. I've never seen him fill up your pussy. When he's done, I want you to sit up and let his cum dribble out all over his spent cock. And then I'm gonna come over there and lick it up.\"\n\n\"Oh, shit,\" I grunted as I started cumming right then and there. Sam had never gone completely still, rocking her hips in undulating circles while squeezing her inner muscles around my prick. But it was the vision of my creamy jism seeping out of Sam's sodden snatch onto my shaft and then Belle snaking her tongue out to scoop up and swallow my sperm that set me off. And before I realized what was going on, I was already erupting great gouts of hot lava to Sam's surprise and mine.\n\nSam flinched as she felt the first impact and started squeezing her inner muscles to milk out every last drop. She leaned forward and planted her palms on my pecs, eyes sparkling and mouth gaping a smile as she watched the expressions on my face while I continued to fountain semen into her hot body. Over and over again my hips bucked, spewing sperm with every shot. Finally, I was spent. And I collapsed completely while the hot blonde mounted on my dick bent forward to give me another fierce kiss.\n\nWe made out for a couple of minutes while our bodies slowly cooled off. But just when I started to go soft, Sam glanced back at Belle with a self-satisfied smirk. \"Looks like you're gonna get your wish.\"\n\nBelle perked up as Sam put her feet down and then lifted herself off me with an audibly wet squelch. The busty blonde remained in a squatting position over my pelvis, her knees apart with her forearms braced atop her upper thighs.\n\nOnce freed from the moist grip of her pussy, my flagging erection tipped back toward my belly, slowly starting to shrink back down. But it was still more than half-hard when the first glob of cum leaked out from the gap between Sam's red-worn labia, pulled down by gravity until its fall was arrested by its impact against my purplish prick. The second glob emerged a few seconds later, like a droplet from a leaky faucet. And the rest followed soon after as Sam clenched and grunted trying to squeeze out the rest of my jizz.\n\nEventually, the steady trickle stopped, and Sam flopped over to sit down heavily on the mattress opposite Belle. The strawberry-blonde pixie got out of the desk chair, eyes on fire as she stared at the collected cream coating my cock. She hovered over me for a second, turning to look first Sam and then me in the eyes, a wicked grin on her face. And then her gaze turned downwards as she took her first lick, curling the cute tip of her tongue to capture as much cum as she could.\n\nBelle didn't put it in her mouth right away. She stared straight at me while holding her tongue extended, making damn sure I could see the jizz she'd licked up. And only when the slimy semen started to slide off did she finally slurp it all into her mouth and swallow with relish.\n\nBelle went back for more, licking and slurping and not stopping until every glob was gone. She even started sucking on my dick just for good measure, more to ensure she hadn't missed a single drop than any desire to revive me for another round. But just because that wasn't her intent didn't mean it didn't work, and by the time she was done I was halfway to another rigid erection.\n\n\"That was so fucking hot...\" Sam breathed, staring at Belle with a mixture of surprise and fresh admiration. \"I never knew you had it in you to do something that kinky.\"\n\nBelle giggled. \"Matty brings out the best in me.\"\n\n\"Me, too.\" Sam's expression softened as she gazed over at me. From the look on her face, I started to understand how Mother knew I wouldn't be a virgin for long.\n\nBelle stood up and gestured to my crotch. \"I'm finished. He's all yours again.\"\n\nSam gestured to my crotch, replying, \"You're welcome to keep going. I don't mind sharing.\"\n\nBelle grinned and shook her head. \"I like watching.\"\n\n\"Clearly,\" Sam said with a smile as she bent over to start sucking me again.\n\n\"And this time,\" Belle continued. \"I want to watch him fuck you from behind.\"\n\n****\n\n-- CHAPTER 10: Chinatown --\n\n****\n\n\"Ungh, ungh, ungh, ungh, ungh!\" Sam grunted rhythmically. \n\n\"Soooo fucking hot.\"\n\n\"Ungh, ungh, ungh, ungh, ungh!\"\n\n\"Spank her ass!\" Belle moaned. \"Spank that phat ass!\"\n\nOkay, NOW we're caught up.\n\nAt Belle's behest, I started spanking Sam's phat ass. The busty blonde bombshell bent over before me groaned with every slap, and the cunt clenches accompanying each impact assuaged any fears I might've had about hurting her.\n\n\"Grab her tits. Yank back on them when you drive your dick way deep inside her.\"\n\nSam moaned and whimpered as I started manhandling her mammaries.\n\n\"Fucking A you two are so hot,\" Belle moaned. \"Speed up a little. Really hammer her.\"\n\n\"Fuuuck... Fuuuck...\" Sam started whining as I did as ordered. \"So hard... So good...\"\n\n\"You gonna cum again, bitch?\" Belle continued. \"You're just a busty blonde plaything for Matty, aren't you? You're just a pair of big tits and a tight pussy for this gorgeous stud's cock, huh? You gonna cream all over that big dick in your cunt? Huh? Spank her ass again, Matty! Spank it!\"\n\n<thwack> <thwack>\n\n\"Lean over, hold her head down, and really pound that pussy!\"\n\nWith a shrug, I bent forward, planted my hand on the back of Sam's head, and put extra oomph into my abs.\n\n\"Ungh! Ungh! Ungh!\" Sam's moans were slightly muffled with her face mashed into the mattress.\n\n\"Fucking FUCK you two are so hot. Harder, Matty! Harder! Ream her out! Drive that big dick deep into the horny slut! Harder! Fuck that slut HARDER!\"\n\n\"AAAAAUUUGGGGH!!\" Sam screamed, her cunt clenching as she came around my cock.\n\n\"See that? She just fucking came,\" Belle crowed. \"I think she liked me calling her a slut! Are you a slut, Sam? Are you a slut for Matty's cock? Huh? Tell us you're a slut for Matty's cock.\"\n\n\"Yes! Yes! I'm a slut for Matty's cock!\" Sam howled, twisting her face to the side even as I kept holding her head down against the mattress. \"Fuck! I think I'm cumming again!! AAAAAUUUGGGGH!!\"\n\n\"Hngh! Hngh! Hngh!\" I grunted from the exertion of continuing to hammer the hell out of her, riding the wave of Sam's orgasm and powering my way through it.\n\n\"Hey Sam? Have you ever put anything in your butt?\" Belle asked out of the blue.\n\n\"Wait, WHAT?\" Sam froze up and twisted her head out of my grasp so she could look back at both of us in a panic.\n\nBelle immediately started laughing and said, \"Just asking. Just asking. I'm not about to tell Matty to slam it into your backdoor without warning or anything.\"\n\nSam nodded, but looked a little rattled nonetheless. Our rhythm had been thrown off, but she set her head back down and closed her eyes when I re-started my thrusts.\n\nBelle leaned into me and whispered, \"Spread her cheeks and slip your thumb into her asshole.\"\n\nI blinked in surprise, but Belle widened her eyes and gestured quite pointedly with her gaze to Sam's upturned ass. With a shrug, I let my hands roam all over the globes of the blonde's buttcheeks, gave her another couple of slaps, and used both hands to push outward, exposing the Aussie girl's winking anus. With an arched eyebrow at Belle, I then licked my thumb and applied gentle pressure to Sam's sphincter.\n\n\"FUCK ME DEAD!\" Sam squealed as my thumb penetrated half an inch.\n\n\"KEEP FUCKING HER!\" Belle yelled at me, and I responded by ramming my hips back and forth with forceful urgency.\n\n\"FUCK-FUCK-FUCK!\" Sam howled, her hips shaking side to side while I tried to hold on. But she ALSO kept fucking back and forth, not trying to pull off my thumb, instead hammering herself wildly in wobbly orbits back at me. After only thirty seconds or so, though, I went one way while her butt went the other, and my thumb popped out.\n\nSam stopped thrashing once her butt was free. Gasping for breath, she managed to calm down after a few seconds and then suddenly whipped her head back to glare at us. \"Try that shit out on your own arse!\" the angry blonde snapped.\n\nI pointed straight at Belle. The little pixie had both hands over her mouth to cover her laughter, but after a second she dropped the hands and commented, \"You seemed to like that, actually.\"\n\nSam rolled her eyes and shook her head, muttering, \"It surprised me, for sure. Just...\" Her voice trailed off as she visibly shivered for a second, and then she looked back at me. \"We'll try that again sometime... when -I- say so, yeah?\"\n\nI nodded immediately.\n\n\"As for YOU,\" Sam stated a little coldly, staring straight at Belle. \"You owe me one. You've been barking orders for the past ten minutes, now it's my turn for a not-so-subtle suggestion.\"\n\nBelle, still chuckling, responded, \"Yeah, what's that?\"\n\n\"Every time I've seen you blow him, you always swallow it,\" Sam explained. \"And then of course you licked up all the jizz that leaked out of my cunt. Clearly, you get a naughty thrill tasting his cum.\"\n\nBelle shrugged. \"Yes, I do.\"\n\nSam grinned. \"This time, I wanna see him cum on your FACE.\"\n\n****\n\nI should explain why Sam wanted to see me bust my nut all over Belle's face. You see, she'd already seen me do it to everyone else, many times before we'd even started blowjobs, including Zofi and Alice.\n\nBut not Belle.\n\nNaimh had been the first facial, that Friday when Sam gave me my first-ever titfuck. The magnificent redhead had jacked me with her hands, given me my second-ever titfuck, and eventually parked her face beneath my cockhead, pumping my prick until it poured creamy cum all over her pretty face.\n\nSam had taken my second-ever facial during a study break the following week when she duplicated Naimh's maneuver.\n\nMari was next, on a Thursday in Belle's bed. She was lying down and had me straddle her chest to hump myself between her upthrust cleavage while she mashed her amazing Double-Ds around my shaft to create a tunnel of titflesh. When I groaned and exploded, there really wasn't anywhere else for the cum to go except all over her face, although she did get a pearl necklace in the process as well.\n\nZofi gave it a try a week later, although she wasn't the one actually stroking my cock. Instead, Sam sat behind me on the couch in a spoon position, her legs to either side of mine while she gave me a \"reach around\" and jacked me off all over Zofi's pretty face. The lovely brunette stuck her tongue out, licked up everything she could reach, and then beamed at the dazed expression on my face. She also crooked a finger to Sam to come around for a kiss, the two of them swapping my sperm between their mouths for about a minute, really putting on a show for their audience.\n\nAlice... well... Alice was an accident. Sam came up with the idea to have three of them jacking my cock at once and invited Alice and Zofi to join her while scooting around to the side. There wasn't really enough room for three hands, but the girls were laughing and having such a good time that they didn't seem to mind, and it was joy for me to watch them. Then Sam dropped her hands to squeeze my balls instead, and I just sort of went off without warning. Alice had been in the middle, and the first two shots hit her right in the face, one over her right eye and the second across her lips. She probably got a little bit in her mouth as well. So you can understand why she dove away from my potential \"grenade explosion\" that first day the girls started trying blowjobs.\n\nBut not Belle.\n\nIn all fairness, part of that had to do with a lack of opportunity on Belle's part. After Mari first jacked me off all over her stomach what felt like eons ago, the rest of the girls had become keenly interested in making me pop. While I had been happy to let the other five of them do whatever they wanted to me until I shot creamy man-goo wherever they happened to point me, I'd still had that mental block preventing me from getting comfortable with the idea of Belle... my little Annabelle... doing the same. So in plain simple fact, she didn't have her hands on my dick nearly as often as the others.\n\nObviously, things had changed a lot since then, and of course I had no trouble now with letting my sweet, perfect Annabelle slam her pretty little face down on my dick until I spewed a load of spooge straight into her stomach. But even so, after all this time, including those two weeks when Belle was giving me blowjobs without the others knowing about it, I'd never cum on Belle's face. I'd busted on her tits a few times, but never on her face. I mean, she really DID enjoy swallowing my loads after all, so... perhaps that would explain the lack of facials. But bottom line: No, I'd never done it.\n\n\"Really? Never? You two didn't even do it in private?\" Sam asked in surprise while riding me reverse-cowgirl. I was sitting back against my headboard, semi-reclined with my pillows supporting my lower back. Having paused after the impromptu thumb-in-the-butt thing, the three of us had changed positions and Belle now sat cross-legged beside us on the bed. She'd stripped off her shirt and bra to make sure she wouldn't get her clothes stained when we finally got around to the act in question.\n\nBelle shrugged. \"Ask him. He's had enough opportunities.\"\n\n\"Wait, what?\" I squawked. \"No I haven't. You just always swallow it.\"\n\nBelle rolled her eyes. \"I gave you lots of chances in the beginning once I started blowing you. You just always wanted to cum on my tits or watch me swallow it.\"\n\nI frowned. \"You're the one with my dick in your hands. You could've made me spurt on your face anytime you wanted.\"\n\n\"It wasn't whether or not -I- wanted it,\" Belle countered. \"Twice in the beginning, you stood over me stroking your own dick while I parked my face beneath it, eyes closed and mouth gaping, the way Neevie always does for you. I can see in your eyes how much you love giving her a facial. But both times with me, you aimed yourself lower and gave me a pearl necklace instead.\"\n\nI blinked and stopped humping up into Sam's pussy. She kept going though, undulating herself around my fuckstick on her own. \"Really?\"\n\nBelle shrugged. \"I figured it was part of your mental block. Like, 'I can't defile my sweet Annabelle by cumming on her face. It's degrading.' Or some such shit.\"\n\n\"Oh...\" I contemplated. \"Hadn't thought of that.\"\n\nSam glanced back at me. \"But you'll do it now?\"\n\n\"Uhhh, I guess so...\"\n\nSam's smile was all teeth. \"Then I've got a better idea.\"\n\nI started to get worried. \"What's that?\"\n\n\"You've gotta do it for the first time on Wednesday night, in front of all the girls. We're gonna tease you all day, the way we used to do. We're gonna rub ourselves on you, put our hands on you, put our mouths on you, but never let you cum. We're gonna build up a massive load, until your balls are swollen like grapefruits. And THEN you're gonna fuckin' COVER Belle's face with your cum.\"\n\nBelle was giggling. \"Works for me.\"\n\n\"Uhhh... okay...\" I said quietly, processing all that. \"I guess that can be a plan for Wednesday. But then what am I gonna do with this load?\"\n\nSam pondered that and shrugged. \"You can cum on MY face. Or you can cum on my tits, and Belle can still lick it all up.\" She grinned, clearly enjoying the idea of the pretty girl licking her boobs.\n\n\"I've got a better idea,\" Belle intoned in a heavy voice, her eyes sizzling.\n\n\"What's that?\" Sam asked.\n\n\"I want him to cum inside you again. And then?\" Belle grinned wolfishly. \"I wanna suck it back out.\"\n\n\"Oh, shit,\" I grunted as I started cumming right then and there.\n\n****\n\nMother had not yet come home when we emerged from my bedroom around 8:30pm. She didn't usually come home before nine or ten o'clock on weekdays, but after the last couple of times she'd surprised me, I couldn't count on that being the case every time. Sam didn't seem to really care, with her \"she already knows we're fucking\" attitude, but Belle seemed to be pretty relieved.\n\nWe walked Sam to the door, and when she realized Belle wasn't leaving yet, she gave me a look and lamented, \"Why couldn't you live next door to ME?\" She turned to Belle and added, \"You have NO idea how jealous I am of you right now.\"\n\nBelle blushed and replied, \"Yeah, I've been hearing that a lot lately.\"\n\nSam reached her arms out to me for a hug. She kissed me firmly, full of affection but no more passion. Her lust had been sated for now. She kept us kissing long enough for me to start feeling awkward about Belle standing next to us, so I broke the kiss first. Sam's lips followed after mine for a second before she sighed and pulled back. And from only inches away, she looked up at me with her big brown eyes and murmured softly, \"Love you...\"\n\nI murmured right back, \"Love you, too.\"\n\nShe gave me a brave smile, waved to Belle, and turned to leave.\n\nAfter the door was shut, Belle arched her eyebrow at me and said dryly, \"'Love you, too'?\" \n\nI blushed and shrugged. \"What? She said it first.\"\n\n\"You still said it back.\"\n\nI blinked. \"Are you jealous?\"\n\n\"Well you DID say you were in love with ME.\"\n\n\"I am.\"\n\n\"Are you in love with Sam, too?\"\n\n\"No.\" I shook my head. \"But I do care about her a lot. I love all of the BTC girls in their own way.\"\n\n\"Neevie?\" Belle asked with eyes narrowed. She knew how long I'd wanted to be with the busty Irish girl. She knew how much I'd always wanted to be with 'the most gorgeous thing I'd ever seen'.\n\n\"I...\" My voice trailed off as I sighed. \"She respects The Rule.\"\n\n\"That's not an answer.\"\n\nI rolled my eyes. \"Are you really jealous over Neevie? I haven't even had sex with her.\"\n\n\"Yet.\"\n\n\"I wanna fuck Neevie really, really bad, yes. But you're my Annabelle. Nothing's ever gonna change that.\"",
        "Belle pursed her lips together, waggling her head as she weighed that, and seemed to let it pass. She took me by the hand and led me into the living room where we both flopped down onto a couch together, her petite body nestled against my left side with my arm wrapped around her.\n\n\"So...\" she began slowly. \"THAT just happened.\"\n\n\"Mmm-hmm,\" I mumbled, reviewing the past hour and a half in my mind. I would have called the memories great spank bank material, but the way things were shaping up, I wasn't sure I'd ever have to masturbate again for the rest of my life.\n\nBelle looked up at me curiously. \"Which part are you thinking about right now?\"\n\nI snorted. \"You kidding me? The ending, of course. Watching you suck my cum out of Sam's cunt.\"\n\n\"Ah.\" Belle's eyes unfocused, as she seemed to be revisiting that moment as well.\n\nI'll never forget the sight. Sam: the beautiful busty blonde buck naked and lying back against my headboard beside me, knees up and legs spread to the sides while she cupped and fondled her own tits. Belle: the petite strawberry-blonde having tied up her hair into a ponytail to ensure her long locks wouldn't obscure the view, topless and beautiful, with her face in Sam's crotch and her long tongue scooping globs of creampie out from the other girl's snatch.\n\nMy pseudo \"little sister\" had been tentative at first, biting her lip and pausing twice during her approach. I already knew from Sam's confession that it wasn't the first time she'd been eaten out by another girl, but I was pretty sure it was Belle's first time licking pussy, unless she'd somehow managed to bend over and do herself. Moments later, I found myself reassessing that conclusion when the first dollop of cream emerged from Sam's sodden snatch and Belle struck like a scorpion, slurping up every single speck of semen she could seize.\n\nSam had gone a little crazy at the attention. At first she threw her head back, moaning and writhing while squeezing her own tits and running her hands over her own face and neck. A minute later, she twisted, grabbed my head, and yanked my face to hers so she could shove her tongue down my throat. And even though I'd already cum twice and had gone limp, she grabbed my sensitive dick and balls as if trying to work me up for round 3.\n\nBut after only a minute, Sam left my dick alone and focused on Belle's cunnilingus. I was gawking at Belle too, as my pint-sized pixie was starting to really get into it with enthusiasm and confidence. And the sight nearly did get me hard again.\n\nTwo minutes after that, Sam grabbed the back of Belle's head, slammed it down against her crotch, and bucked her hips forward as she screamed in unholy Sapphic orgasm. After Belle slurped up the girlcum Sam had dumped on her face, Sam yanked Belle up by the armpits so she could kiss the cute pixie straight on the mouth before licking up her own nectar from the other girl's chin and cheeks. And finally Sam collapsed in utterly complete exhaustion.\n\n\"Have you ever done that before?\" I asked quietly, back in the here and now.\n\nBelle was still daydreaming, and she replied, \"Hmm?\" distractedly.\n\n\"Going down on another girl. Was that your first time?\"\n\n\"Oh, uh, yeah...\" she muttered. Three seconds later, she frowned and looked up at me in surprise. \"Wait, why would you think I'd done it before?\"\n\nI shrugged. \"You seemed to make Sam pretty happy right away. Sorta looked like you knew what you were doing.\"\n\nBelle looked confused. \"I wasn't even trying to get her off. I just tried to suck up every drop of your cum I could get to.\"\n\nI laughed. \"Well whatever you did, it worked like a charm. And for all I knew, you and Mari could've been experimenting with each other for a couple of years.\"\n\nBelle's eyebrows went up as she mused on that. \"The thought crossed my mind a few times. I mean, I'm not gay, but after hanging out with so many gorgeous girls who are constantly stripping away clothing and flaunting their sexuality for you...\"\n\nWhen her voice trailed off, I filled in for her, \"You learned to appreciate a feminine body?\"\n\n\"Something like that.\" Belle gave me a nervous smile. \"Still, I don't think I would've ever had the nerve to go down on her like that if I hadn't been going after your creampie.\"\n\n\"You really did turn into a little cumslut, didn't you?\"\n\nBelle shot me an indignant look. \"Did you just call me a 'cumslut'?\"\n\n\"Uhhh... well...\" I stammered, instantly defensive.\n\nShe laughed and tapped my chest. \"I actually like it. I AM your cumslut. I certainly like the title better than 'little sister'. Anytime, anywhere. I think I may suck another load out of you before I go home.\"\n\n\"You've already gotten three loads today - TWO of them via Sam's pussy.\"\n\nBelle giggled and shook her head. \"Never would've thought I'd do that in a million years. Never really thought I'd eat another pussy, period. And yet, here we are.\"\n\n\"Do you think you'd do it again?\"\n\n\"What, go down on Sam? If she had your cum inside her again, maybe.\"\n\n\"That can be arranged.\"\n\nShe arched her eyebrow. \"You'd like that, wouldn't you?\"\n\nI shrugged. \"I'm a teenage boy who just had his first threesome. Of course I'd like to see it again.\"\n\nBelle frowned. \"We didn't actually have a threesome, did we?\"\n\n\"Three people having sex together: Isn't that a threesome by definition?\"\n\n\"I thought it only counts as a threesome if the participants are all having sex at the same time. You know, like a girl in-between two guys, getting fucked and giving a blowjob at the same time. That sort of thing.\"\n\n\"Well, if there are two girls parked side-by-side doggy-style, and the guy switches back and forth between them, isn't that still a threesome? Even though all three of them aren't physically connected?\"\n\n\"I suppose...\"\n\n\"Well that's basically what we did. Sam was fucking me, and then she switched partners and you were eating her.\"\n\n\"Fine, fine, it's your first threesome.\"\n\n\"Yours, too.\"\n\n\"Well what about all the times one of us gave you blowjob while someone else sat on your face? That's three people physically connected, right?\"\n\n\"But I wasn't fucking anyone. That's not a real threesome either; more like a... a daisy chain.\"\n\nBelle snorted. \"I guess... I suppose we'll have to figure out an opportunity to have 'proper' threesome, then.\"\n\nI frowned. \"I'm not letting you anywhere near another guy.\"\n\nShe laughed. \"Relax. Not interested in any guys but you. Not interested in anyone outside the BTC, for that matter.\"\n\nI leered at her. \"That statement would seem to imply you ARE interested in other BTC girls, though, besides Sam. Anyone in particular? Mari? Zofi?\"\n\nBelle slapped my chest. \"Pervert.\"\n\n\"I'm YOUR pervert. And you're dodging the question.\"\n\n\"No comment.\"\n\n\"C'mon. How about I seduce Mari into giving me her virginity where you can watch, I'll blow a massive load of sperm inside her, and then I'll pull her legs back so you can dive in and suck it all out?\"\n\nBelle groaned in obvious arousal and snuggled deeper against my side, \"Matty...\"\n\n\"Better yet, you can sit on my face watching while... uhhh... Neevie rides me cowgirl. We'd all be connected, so THAT would be a 'proper' threesome, right? And when I blow inside her you can roll her over and suck it all out.\"\n\nBelle giggled and started rubbing my thigh.\n\nI leaned down, stroking her side, and whispered softly just above her ear. \"I think Sam owes you now. I think I need to cum deep inside you, and then she'll go down to suck all my jizz out of your pussy, but not swallow any of it. That way, she can crawl back up your naked body, mold her lips over yours, and snowball every last drop of Matty-cum back into your mouth.\"\n\n\"Fuuuuuuck, you're so BAD,\" Belle moaned, pulling my hands up so that I would start fondling her breasts through her sweater.\n\n\"Of course, that would require revealing to Sam that we're fucking,\" I reasoned, pausing my fondling for a moment. \"Is there a reason you didn't tell her?\"\n\nBelle closed her eyes, trapping my hands against her breasts and directing them to resume fondling. With a sigh, she mumbled, \"Just... didn't really come up. You were too busy fucking her.\"\n\n\"But you ARE gonna tell her, aren't you?\" I asked, pinching her nipples.\n\n\"Eventually...\"\n\n\"Eventually? I'd have thought you'd be relieved to have someone else to confide in and share this with. She's fucking me, you're fucking me, neither of you has told the BTC yet...\"\n\n\"Sam said she's gonna tell Zofi soon, and then the cat will be out of the bag.\"\n\n\"The final line will have been crossed,\" I agreed.\n\n\"Mmm, I bet Neevie bangs you less than twenty-four hours after she finds out.\"\n\nI chuckled. \"Wanna watch?\"\n\n\"You know I do. I'll bet she's a tiger in the sack.\"\n\n\"She has been in my fantasies.\"\n\n\"Mmm, I'll bet.\"\n\nI tried to slide a hand down into Belle's jeans, couldn't fit, and paused to un-button her and slide down the zipper. Then I was able to wriggle my fingers into her panties and gently press a finger inside to the second knuckle to gather some moisture, and Belle groaned at the touch.\n\nI retracted. \"Still sore?\"\n\n\"Just a little, your finger was fine. Keep going.\"\n\nI went ahead and coated my fingertip, dragging it out to start rubbing her love button. \"Maybe you shouldn't tell Sam, even after the cat is out of the bag. We can surprise her, you know? I'll cum inside her first while you're watching. And then after you start going down on her to slurp out all my jizz, I'll circle around behind you and push myself in. She'll be distracted while you eat her, tossing her head left and right with her eyes closed. But then she'll notice the rhythmic way your head keeps pushing back and forth against her pussy, and she'll look up and see me pounding into you. It'll blow her fucking mind. And hey, it'll be a 'proper' threesome.\"\n\n\"Fuck, you are REALLY bad,\" Belle moaned, her head lolling side to side against my shoulder with her eyes closed as she imagined what I was telling her.\n\nI squeezed her firm titty and rubbed her clit a little harder, moaning right back, \"You love it, don't you?\"\n\n\"So naughty. I hate it. You bring out the worst in me, Matty.\" She twisted in my embrace, hooked an arm behind my neck, and pulled me down for a searing, feverish kiss.\n\nA moment later though, she broke the kiss to look up at me with those pale green eyes full of adoration. \"I changed my mind. You bring out the BEST in me. I mean it. I love how close we've become now. I love YOU.\"\n\n\"I love you, too.\" And then we were kissing and fondling again.\n\nWe were still making out when I heard the garage door open. It was just after 9pm and Mother was home. Neither of us got up, although we stopped sucking each other's face and Belle slid out of my lap so that she was merely sitting beside me, snuggled under my arm.\n\n\"Ah, Belle,\" Mother greeted as she came inside and saw us. \"Always nice to see you.\"\n\nBelle replied politely, and the three of us chit-chatted for two minutes until Mother excused herself to take a shower and change. We decided that was a good time for Belle to return home. It was still a school night, after all.\n\nShe gave me a sweet kiss at the door and said again, \"I love you.\"\n\nMy heart did backflips in my stomach, and I grinned happily as I replied, \"I love you, too.\"\n\n****\n\nTuesday turned out to be a fairly quiet day for me. As the last school day before Thanksgiving break, the teachers seemed as eager to go home and start their vacations as we students, and of course nobody assigned any homework. With no reason to think about schoolwork, we technically didn't have any reason to have an afternoon study session. And since the BTC already had plans to take a day trip together on Wednesday, it didn't seem a big deal for us to skip any sort of get together Tuesday afternoon.\n\nThat worked out fine for me, actually. Belle and I had all that time for ourselves, and we wound up making out on her bed. Well, we didn't stop at just kissing, of course. Her hand slipped into my shorts after the first ten minutes, she started giving me a blowjob, and then I told her I wanted to see her naked, so we BOTH got naked, and then I turned her around into a sixty-nine position, and I ate her out to a nice orgasm while managing to hold off on my own, and then Belle decided she wanted to try having sex again, so she straddled my hips, held my erection upright, and gingerly lowered herself down.\n\nI noticed the way she winced and reached up to stop her. \"Hey, if it hurts, you don't have to.\"\n\n\"No, it's fine,\" Belle muttered, her voice tight as she continued to sink. \"It's not that bad.\"\n\n\"I don't wanna hurt you.\"\n\n\"I know, it's fine,\" she insisted. She was still super tight, but not skin-peelingly so. She was plenty warmed up this time, and quite wet, so to me this time it merely felt like putting on a glove that was a size too small, instead of my dick actually tearing her poor muscles on the way in.\n\nA minute later Belle was fully seated. Sweating already from the strain, she sighed and collapsed onto my chest as if she'd just completed a marathon, panting shallowly.\n\nI stroked her spine and held her tenderly, in no hurry to get myself off. But Belle was on a mission to satisfy me, so after she caught her breath, she clenched her teeth and started to move. It was hard for me to cum, actually, worried as I was about causing her pain. At the same time, I wanted to ejaculate as fast as possible, since she clearly wouldn't accept anything less. In the end, I closed my eyes, concentrated on the way her snug pussy hugged my shaft from the inside, and imagined my cockhead splitting open to baste her womb with my baby batter.\n\nBelle gave me a silly grin when I was done. She hadn't orgasmed, not that she seemed to care; she was just happy to have satisfied me. And we went back to soft and tender kisses while my dick slowly shrank inside her, never quite coming out until ten minutes later when she finally pulled off and rolled over beside me. She even scooped some of my sperm out of her sodden snatch, popping my cum into her mouth and humming with relish. Maybe she really was a cumslut.\n\nThe two of us stayed naked in her room for the rest of the afternoon, cuddling, kissing, and talking. It was really nice. But eventually we had to get up to make dinner. And after the meal, we stepped out onto the front porch and closed the door so I could kiss her goodbye without her dad seeing us. This time I said, \"I love you\" first.\n\nBelle beamed, kissed me again, and finally replied, \"I love you, too.\"\n\n****\n\n\"Are we there yet?\" Alice whined from the back row of my minivan, where she sat with Belle and Mari, the three of them being the shortest in height and therefore requiring the least amount of legroom. At least Alice could stretch her legs forward into the gap by the sliding door.\n\n\"Look out the window,\" Sam commented from the middle row, where she sat alongside Zofi. \"Do you see any buildings over forty stories tall right next to the van?\"\n\nAlice didn't reply out loud to the rhetorical question, but through the rear-view mirror I could see her roll her eyes and make a face.\n\nSam answered her own question anyway. \"No? Then we're not there yet.\"\n\nI chuckled and kept my eyes on the road. We weren't that far away, actually, at least in terms of mileage. It's just that San Francisco traffic is a nightmare, even outside of downtown. And Alice was cranky being cooped up in the van watching the world go by at a snail's pace.\n\nStop. Roll forward ten or fifteen feet. Stop again.\n\nRinse and repeat.\n\nAd nauseum.\n\nI might've been pretty cranky too, actually. Stop-and-go traffic is worse on drivers than it is on passengers, but I was enjoying the company too much. It's hard to feel cranky when you've got a smokin' hot redhead in the seat next to you, flirting up a storm.\n\nWith a Wednesday off from school when most everyone's parents were still working, the seven of us had loaded up in my minivan and driven up the Peninsula. We started by hiking from Sutro Baths along the Land's End trail and down to China Beach. The weather was decent if not sunny. The fog had lifted enough that we actually had a pretty decent view of the ocean for a few miles out, and the air was cool but not overly chilly. The exercise had been invigorating but not strenuous, and the beach wasn't too crowded at all.\n\nWe had a picnic on the beach, waded ankle-deep into the water, and even built a few sandcastles. It was nice to spend time with the girls the way I used to do before \"sex things\" became top priority. We talked, we played, and yeah, there was a little bit of kissing going on, but not a lot, despite Sam's initial belief that the girls would spend all day teasing me and rubbing themselves up against me; perhaps being in public tempered their ardor. We acted like a group of seven friends, not lovers. It was fun.\n\nNow we were driving downtown to visit Chinatown and play tourist. All of us had been there before, except for recent immigrant Naimh, which is why she got the front passenger \"shotgun\" seat beside me. We chatted about anything and everything, from food to holiday plans to reminiscing about the day's activities and even Naimh's taste in art. It probably took another ten minutes until those forty-plus-story skyscraper buildings surrounded us, and another ten minutes to find a metered parking spot, but that time passed by in the blink of an eye for me.\n\nTime flies when you're having fun, you see.\n\nEveryone was eager to get out of the van and stretch their legs again, and the seven of us soon hit the pavement. I played tour guide for Naimh, pointing out all the sights and explaining what I knew about the history of the place. We took photos in front of landmarks and bought ginormous fortune cookies where you could write your own fortune and have them tuck it inside a warm cookie before they folded it into shape. Everywhere we went, the gorgeous Irish redhead held my hand and gave me lots of kisses. To an outside observer, we must've appeared to be a happy couple out on the town with some of our friends. I rather enjoyed the attention and wondered if this was what a relationship with her would feel like. If the other girls minded, they didn't express it.\n\nNaimh appeared to be on the same wavelength. We were walking down Grant Avenue hand-in-hand, heading for Dragon's Gate to take some group photos when she leaned in and asked quietly, \"Ever wish we could do this more often? Walk around town like any other romantic couple?\"\n\n\"If I was your boyfriend, we could do this every weekend,\" I replied back quietly.\n\n\"Don't tempt me.\" Naimh's eyes glittered before she took a deep breath and sighed. The others were all walking ahead of us, intent on getting to our destination while the pair of us hung back enjoying each other's company. She gestured forward with one hand, saying, \"I could never do that to the girls. But even as just friends, it would be nice to at least do THIS a little more often.\"\n\nShe squeezed my hand for emphasis, and I reached over with my other hand to rub her forearm tenderly. \"Let's at least enjoy today, huh?\"\n\n\"Sounds like a plan.\" She leaned in and gave me a quick kiss on the cheek.\n\nContinuing our Chinatown tourism, the seven of us popped in and out of little trinket shops, and Naimh bought a paper parasol painted with flowers while Mari got a pretty fan. Belle was eyeing a jade necklace, and feeling a little bad for how much time I'd spent thus far with Naimh, I quietly offered to buy it for her. She just rolled her eyes and walked away from me. A minute later Sam sidled alongside me, bumping my hip and giving me a quick wink. I went out of my way to flirt with her to feel like I was still being \"in balance\", and Zofi as well. If Naimh minded, she certainly didn't show it, and indeed seemed to welcome the girls' presence. Their presence probably assuaged her guilt a little after monopolizing my attention all afternoon. And Sam and Zofi stayed with me and Naimh for the next thirty minutes or so.",
        "We ate take-out dim sum and boba drinks. We hiked up to the Cable Car Museum and caught a ride downtown and then back. Naimh squeezed my hand and whispered naughty musings about finding a quiet corner so she could give me a blowjob. We walked all over the place and had a great time. In the end, everyone was a little footsore but quite satisfied with our trip by the time we finally returned to the minivan for the drive back home.\n\nBecause of the footsore part, everyone was pretty quiet as I focused on getting the van out of our metered parking spot and over to the main roads. But less than two minutes into the drive, Naimh turned around in her seat and began, \"So... when are we gonna talk about these one-on-ones?\"\n\nThe girls all looked at each other for a second, and then as one, they all turned to look right at Sam. The blonde sighed and put her hand across her forehead. \"Do we have to talk about this now? Can't it wait until we all get to Matty's place? I'm tired.\"\n\nNaimh stared hard at her. \"C'mon, on Monday you asked me to wait until Wednesday. It's Wednesday. And we're all stuck in the van until we get home. You have a better time?\"\n\n\"I thought you were on your period anyway.\"\n\n\"So? I want this resolved.\"\n\n\"You can't date him,\" Sam cautioned. \"The Rule is still The Rule.\"\n\n\"I didn't ask to date him, even though YOU already went on a date with him.\"\n\n\"Then what do you want?\"\n\n\"I want to FUCK him is what I want,\" Naimh said a little heatedly. \"But I'll settle for an afternoon walking around someplace like Chinatown hand-in-hand and then doing whatever you two did after the wedding.\"\n\nThrough the rear-view mirror I could see Sam and Zofi exchanging a look. I got the distinct impression that Sam had now told Zofi the truth, but I had to focus on not crashing the van for the next few minutes as I worked my way through heavy San Francisco traffic back to the freeway.\n\nSam glanced into the back seat. \"This isn't a dictatorship. If we're having this discussion, what do the rest of you think?\"\n\n\"How would one-on-ones work, anyway?\" Alice asked. \"We're all friends, and I don't want to do anything that would cut into the time we spend together as a group. Like, would one of us and Matty go up to his bedroom while the rest of us were studying downstairs in the afternoon? I don't think I'd like that.\"\n\nMari frowned. \"How would we even organize that? Like, take turns? Make a schedule?\"\n\n\"No, no, not happening,\" Sam insisted. \"Not during the school week at the very least. Don't we all enjoy studying together as a group as often as we do? And like Alice said, one-on-ones would cut into that.\"\n\n\"I think it's best if we keep everything as normal as possible,\" Belle suggested. \"Weekdays we can study together like usual, but then we can open up a little flexibility on the weekends if someone wants, like you asking the rest of us if it would be okay to have him escort you to the wedding.\"\n\n\"Isn't that what we basically agreed to before the wedding anyway?\" Zofi asked. \"That one of us could borrow him to act as our boyfriend at some function or another?\"\n\n\"I don't have any functions to go to,\" Naimh complained. \"I just want to have him all to myself for a little while with nobody else around. Don't get me wrong, I love sharing him with my friends, but--\"\n\n\"But you want to corner him in a room with none of the rest of us watching,\" Alice interrupted with a chuckle, \"so you can finally seduce him the way you've always dreamed.\"\n\nNaimh sighed and deflated a little. She took a moment to look each of the other girls in the eyes, and then with a sad shake of her head she stated sincerely, \"Yes I've been horny for Matty forever; that's no secret. But I won't be the one to betray the BTC. I won't be that bitch. You're my friends. You took me in when I was brand new to America and scared shitless. And as much as I obviously want him, this group means more to me than sex.\"\n\nChagrined, Alice mumbled, \"I retract my comment.\"\n\nNaimh laughed and shook her head. \"Don't worry about it. You're one of my best friends here, but we have totally opposite views about how far we want to go with him. You've told me many times you're not ready for sex, not even with Matty. But at the same time, if the rest of us started fucking him, you'd feel a lot of pressure to... How did you say it?... You'd feel obligated to 'let him have you too'.\"\n\nI was at a red light, so I shifted my head so I could see Alice in the rear-view mirror. Her expression was rather forlorn, and a moment later she glanced up to meet my eyes in the mirror.\n\n\"No matter what happens,\" I began in a serious voice, loud enough to carry through the entire van, \"none of you should EVER feel obligated to do anything with me you don't want to. I love all of you, and I would NEVER treat you like that.\"\n\n\"None of us is worried about YOU,\" Mari spoke up shyly. \"That's why we love you so much. We feel safe with you.\"\n\n\"Yeah not you, Matty,\" Alice agreed. \"It's the rest of these bitches who keep escalating everything that worry me. I already know that one day, someone's gonna pop his cherry, and that'll be the beginning of the end of the BTC.\"\n\n\"Won't be me,\" Naimh said, raising her right hand. \"I promise.\"\n\nAlice raised her hand. \"Won't be me. No surprise there, though.\"\n\nMari raised her hand shyly. \"I won't betray the BTC.\"\n\nThe van went silent.\n\nZofi looked at Sam, tentatively raised her hand, and said, \"Won't be me, and that's the truth.\"\n\nThe van went silent again.\n\nMari looked at Belle. Naimh looked at Sam.\n\nSam closed her eyes, dropped her chin to her chest, and said quietly, \"I took Matty's virginity Saturday night.\"\n\nThe van went DEAD silent.\n\nFor like... five seconds.\n\nAnd then all hell broke loose."
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "ffm",
        "18-year-old",
        "teenagers",
        "high school",
        "big breasts",
        "creampie",
        "threesome",
        "voyeur",
        "watching"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-09-10"
}